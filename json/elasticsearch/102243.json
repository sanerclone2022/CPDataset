[{"authorTime":"2019-04-08 21:57:42","codes":[{"authorDate":"2019-04-08 21:57:42","commitOrder":1,"curCode":"    public void testRebalancingAttemptedIfPermitted() {\n        ClusterState clusterState = createClusterStateWithAllShardsAssigned();\n\n        final RebalanceShortCircuitPlugin plugin = new RebalanceShortCircuitPlugin();\n        AllocationService allocationService = createAllocationService(Settings.builder()\n                .put(CLUSTER_ROUTING_REBALANCE_ENABLE_SETTING.getKey(),\n                    randomFrom(EnableAllocationDecider.Allocation.ALL,\n                        EnableAllocationDecider.Allocation.NEW_PRIMARIES,\n                        EnableAllocationDecider.Allocation.PRIMARIES).name()),\n            plugin);\n        allocationService.reroute(clusterState, \"reroute\").routingTable();\n        assertThat(plugin.rebalanceAttempts, greaterThan(0));\n    }\n","date":"2019-04-08 21:57:42","endLine":98,"groupId":"35470","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testRebalancingAttemptedIfPermitted","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/eb/e6f8f02204b68d6bdcdeaee2c158699ea0ce9e.src","preCode":"    public void testRebalancingAttemptedIfPermitted() {\n        ClusterState clusterState = createClusterStateWithAllShardsAssigned();\n\n        final RebalanceShortCircuitPlugin plugin = new RebalanceShortCircuitPlugin();\n        AllocationService allocationService = createAllocationService(Settings.builder()\n                .put(CLUSTER_ROUTING_REBALANCE_ENABLE_SETTING.getKey(),\n                    randomFrom(EnableAllocationDecider.Allocation.ALL,\n                        EnableAllocationDecider.Allocation.NEW_PRIMARIES,\n                        EnableAllocationDecider.Allocation.PRIMARIES).name()),\n            plugin);\n        allocationService.reroute(clusterState, \"reroute\").routingTable();\n        assertThat(plugin.rebalanceAttempts, greaterThan(0));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/cluster/routing/allocation/decider/EnableAllocationShortCircuitTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":86,"status":"B"},{"authorDate":"2019-04-08 21:57:42","commitOrder":1,"curCode":"    public void testRebalancingAttemptedIfDisabledButOverridenOnSpecificIndices() {\n        ClusterState clusterState = createClusterStateWithAllShardsAssigned();\n        final IndexMetaData indexMetaData = randomFrom(clusterState.metaData().indices().values().toArray(IndexMetaData.class));\n        clusterState = ClusterState.builder(clusterState).metaData(MetaData.builder(clusterState.metaData())\n            .put(IndexMetaData.builder(indexMetaData).settings(Settings.builder().put(indexMetaData.getSettings())\n                .put(INDEX_ROUTING_REBALANCE_ENABLE_SETTING.getKey(),\n                    randomFrom(EnableAllocationDecider.Allocation.ALL,\n                        EnableAllocationDecider.Allocation.NEW_PRIMARIES,\n                        EnableAllocationDecider.Allocation.PRIMARIES).name()))).build()).build();\n\n        final RebalanceShortCircuitPlugin plugin = new RebalanceShortCircuitPlugin();\n        AllocationService allocationService = createAllocationService(Settings.builder()\n                .put(CLUSTER_ROUTING_REBALANCE_ENABLE_SETTING.getKey(), EnableAllocationDecider.Rebalance.NONE.name()),\n            plugin);\n        allocationService.reroute(clusterState, \"reroute\").routingTable();\n        assertThat(plugin.rebalanceAttempts, greaterThan(0));\n    }\n","date":"2019-04-08 21:57:42","endLine":142,"groupId":"35464","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testRebalancingAttemptedIfDisabledButOverridenOnSpecificIndices","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/eb/e6f8f02204b68d6bdcdeaee2c158699ea0ce9e.src","preCode":"    public void testRebalancingAttemptedIfDisabledButOverridenOnSpecificIndices() {\n        ClusterState clusterState = createClusterStateWithAllShardsAssigned();\n        final IndexMetaData indexMetaData = randomFrom(clusterState.metaData().indices().values().toArray(IndexMetaData.class));\n        clusterState = ClusterState.builder(clusterState).metaData(MetaData.builder(clusterState.metaData())\n            .put(IndexMetaData.builder(indexMetaData).settings(Settings.builder().put(indexMetaData.getSettings())\n                .put(INDEX_ROUTING_REBALANCE_ENABLE_SETTING.getKey(),\n                    randomFrom(EnableAllocationDecider.Allocation.ALL,\n                        EnableAllocationDecider.Allocation.NEW_PRIMARIES,\n                        EnableAllocationDecider.Allocation.PRIMARIES).name()))).build()).build();\n\n        final RebalanceShortCircuitPlugin plugin = new RebalanceShortCircuitPlugin();\n        AllocationService allocationService = createAllocationService(Settings.builder()\n                .put(CLUSTER_ROUTING_REBALANCE_ENABLE_SETTING.getKey(), EnableAllocationDecider.Rebalance.NONE.name()),\n            plugin);\n        allocationService.reroute(clusterState, \"reroute\").routingTable();\n        assertThat(plugin.rebalanceAttempts, greaterThan(0));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/cluster/routing/allocation/decider/EnableAllocationShortCircuitTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":126,"status":"B"}],"commitId":"314890b1db80eb7546475c0c1100dbd350bf65cc","commitMessage":"@@@Short-circuit rebalancing when disabled (#40942)\n\nToday if `cluster.routing.rebalance.enable: none` then rebalancing is disabled. \nbut we still execute `balanceByWeights()` and perform some rather expensive\ncalculations before discovering that we cannot rebalance any shards. In a large\ncluster this can make cluster state updates occur rather slowly. With this\nchange we check earlier whether rebalancing is globally disabled and.  if so. \navoid the rebalancing process entirely.","date":"2019-04-08 21:57:42","modifiedFileCount":"1","status":"B","submitter":"David Turner"},{"authorTime":"2019-04-09 14:21:51","codes":[{"authorDate":"2019-04-09 14:21:51","commitOrder":2,"curCode":"    public void testRebalancingAttemptedIfPermitted() {\n        ClusterState clusterState = createClusterStateWithAllShardsAssigned();\n\n        final RebalanceShortCircuitPlugin plugin = new RebalanceShortCircuitPlugin();\n        AllocationService allocationService = createAllocationService(Settings.builder()\n                .put(CLUSTER_ROUTING_REBALANCE_ENABLE_SETTING.getKey(),\n                    randomFrom(EnableAllocationDecider.Rebalance.ALL,\n                        EnableAllocationDecider.Rebalance.PRIMARIES,\n                        EnableAllocationDecider.Rebalance.REPLICAS).name()),\n            plugin);\n        allocationService.reroute(clusterState, \"reroute\").routingTable();\n        assertThat(plugin.rebalanceAttempts, greaterThan(0));\n    }\n","date":"2019-04-09 14:21:51","endLine":98,"groupId":"35470","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testRebalancingAttemptedIfPermitted","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/9f/cd3d97f1fbe9c9e84dbf0a78cf6baabc8ce6cf.src","preCode":"    public void testRebalancingAttemptedIfPermitted() {\n        ClusterState clusterState = createClusterStateWithAllShardsAssigned();\n\n        final RebalanceShortCircuitPlugin plugin = new RebalanceShortCircuitPlugin();\n        AllocationService allocationService = createAllocationService(Settings.builder()\n                .put(CLUSTER_ROUTING_REBALANCE_ENABLE_SETTING.getKey(),\n                    randomFrom(EnableAllocationDecider.Allocation.ALL,\n                        EnableAllocationDecider.Allocation.NEW_PRIMARIES,\n                        EnableAllocationDecider.Allocation.PRIMARIES).name()),\n            plugin);\n        allocationService.reroute(clusterState, \"reroute\").routingTable();\n        assertThat(plugin.rebalanceAttempts, greaterThan(0));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/cluster/routing/allocation/decider/EnableAllocationShortCircuitTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":86,"status":"M"},{"authorDate":"2019-04-09 14:21:51","commitOrder":2,"curCode":"    public void testRebalancingAttemptedIfDisabledButOverridenOnSpecificIndices() {\n        ClusterState clusterState = createClusterStateWithAllShardsAssigned();\n        final IndexMetaData indexMetaData = randomFrom(clusterState.metaData().indices().values().toArray(IndexMetaData.class));\n        clusterState = ClusterState.builder(clusterState).metaData(MetaData.builder(clusterState.metaData())\n            .put(IndexMetaData.builder(indexMetaData).settings(Settings.builder().put(indexMetaData.getSettings())\n                .put(INDEX_ROUTING_REBALANCE_ENABLE_SETTING.getKey(),\n                    randomFrom(EnableAllocationDecider.Rebalance.ALL,\n                        EnableAllocationDecider.Rebalance.PRIMARIES,\n                        EnableAllocationDecider.Rebalance.REPLICAS).name()))).build()).build();\n\n        final RebalanceShortCircuitPlugin plugin = new RebalanceShortCircuitPlugin();\n        AllocationService allocationService = createAllocationService(Settings.builder()\n                .put(CLUSTER_ROUTING_REBALANCE_ENABLE_SETTING.getKey(), EnableAllocationDecider.Rebalance.NONE.name()),\n            plugin);\n        allocationService.reroute(clusterState, \"reroute\").routingTable();\n        assertThat(plugin.rebalanceAttempts, greaterThan(0));\n    }\n","date":"2019-04-09 14:21:51","endLine":142,"groupId":"35464","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testRebalancingAttemptedIfDisabledButOverridenOnSpecificIndices","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/9f/cd3d97f1fbe9c9e84dbf0a78cf6baabc8ce6cf.src","preCode":"    public void testRebalancingAttemptedIfDisabledButOverridenOnSpecificIndices() {\n        ClusterState clusterState = createClusterStateWithAllShardsAssigned();\n        final IndexMetaData indexMetaData = randomFrom(clusterState.metaData().indices().values().toArray(IndexMetaData.class));\n        clusterState = ClusterState.builder(clusterState).metaData(MetaData.builder(clusterState.metaData())\n            .put(IndexMetaData.builder(indexMetaData).settings(Settings.builder().put(indexMetaData.getSettings())\n                .put(INDEX_ROUTING_REBALANCE_ENABLE_SETTING.getKey(),\n                    randomFrom(EnableAllocationDecider.Allocation.ALL,\n                        EnableAllocationDecider.Allocation.NEW_PRIMARIES,\n                        EnableAllocationDecider.Allocation.PRIMARIES).name()))).build()).build();\n\n        final RebalanceShortCircuitPlugin plugin = new RebalanceShortCircuitPlugin();\n        AllocationService allocationService = createAllocationService(Settings.builder()\n                .put(CLUSTER_ROUTING_REBALANCE_ENABLE_SETTING.getKey(), EnableAllocationDecider.Rebalance.NONE.name()),\n            plugin);\n        allocationService.reroute(clusterState, \"reroute\").routingTable();\n        assertThat(plugin.rebalanceAttempts, greaterThan(0));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/cluster/routing/allocation/decider/EnableAllocationShortCircuitTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":126,"status":"M"}],"commitId":"2e21a11a461827ffc9badf16c9c80ce1e8e1aff9","commitMessage":"@@@Short-circuit rebalancing when disabled (#40966)\n\nToday if `cluster.routing.rebalance.enable: none` then rebalancing is disabled. \nbut we still execute `balanceByWeights()` and perform some rather expensive\ncalculations before discovering that we cannot rebalance any shards. In a large\ncluster this can make cluster state updates occur rather slowly. With this\nchange we check earlier whether rebalancing is globally disabled and.  if so. \navoid the rebalancing process entirely.\n\nRelates #40942 which was reverted because of egregiously faulty tests.","date":"2019-04-09 14:21:51","modifiedFileCount":"1","status":"M","submitter":"David Turner"},{"authorTime":"2020-04-01 03:52:01","codes":[{"authorDate":"2019-04-09 14:21:51","commitOrder":3,"curCode":"    public void testRebalancingAttemptedIfPermitted() {\n        ClusterState clusterState = createClusterStateWithAllShardsAssigned();\n\n        final RebalanceShortCircuitPlugin plugin = new RebalanceShortCircuitPlugin();\n        AllocationService allocationService = createAllocationService(Settings.builder()\n                .put(CLUSTER_ROUTING_REBALANCE_ENABLE_SETTING.getKey(),\n                    randomFrom(EnableAllocationDecider.Rebalance.ALL,\n                        EnableAllocationDecider.Rebalance.PRIMARIES,\n                        EnableAllocationDecider.Rebalance.REPLICAS).name()),\n            plugin);\n        allocationService.reroute(clusterState, \"reroute\").routingTable();\n        assertThat(plugin.rebalanceAttempts, greaterThan(0));\n    }\n","date":"2019-04-09 14:21:51","endLine":98,"groupId":"102243","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testRebalancingAttemptedIfPermitted","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/9f/cd3d97f1fbe9c9e84dbf0a78cf6baabc8ce6cf.src","preCode":"    public void testRebalancingAttemptedIfPermitted() {\n        ClusterState clusterState = createClusterStateWithAllShardsAssigned();\n\n        final RebalanceShortCircuitPlugin plugin = new RebalanceShortCircuitPlugin();\n        AllocationService allocationService = createAllocationService(Settings.builder()\n                .put(CLUSTER_ROUTING_REBALANCE_ENABLE_SETTING.getKey(),\n                    randomFrom(EnableAllocationDecider.Rebalance.ALL,\n                        EnableAllocationDecider.Rebalance.PRIMARIES,\n                        EnableAllocationDecider.Rebalance.REPLICAS).name()),\n            plugin);\n        allocationService.reroute(clusterState, \"reroute\").routingTable();\n        assertThat(plugin.rebalanceAttempts, greaterThan(0));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/cluster/routing/allocation/decider/EnableAllocationShortCircuitTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":86,"status":"N"},{"authorDate":"2020-04-01 03:52:01","commitOrder":3,"curCode":"    public void testRebalancingAttemptedIfDisabledButOverridenOnSpecificIndices() {\n        ClusterState clusterState = createClusterStateWithAllShardsAssigned();\n        final IndexMetadata indexMetadata = randomFrom(clusterState.metadata().indices().values().toArray(IndexMetadata.class));\n        clusterState = ClusterState.builder(clusterState).metadata(Metadata.builder(clusterState.metadata())\n            .put(IndexMetadata.builder(indexMetadata).settings(Settings.builder().put(indexMetadata.getSettings())\n                .put(INDEX_ROUTING_REBALANCE_ENABLE_SETTING.getKey(),\n                    randomFrom(EnableAllocationDecider.Rebalance.ALL,\n                        EnableAllocationDecider.Rebalance.PRIMARIES,\n                        EnableAllocationDecider.Rebalance.REPLICAS).name()))).build()).build();\n\n        final RebalanceShortCircuitPlugin plugin = new RebalanceShortCircuitPlugin();\n        AllocationService allocationService = createAllocationService(Settings.builder()\n                .put(CLUSTER_ROUTING_REBALANCE_ENABLE_SETTING.getKey(), EnableAllocationDecider.Rebalance.NONE.name()),\n            plugin);\n        allocationService.reroute(clusterState, \"reroute\").routingTable();\n        assertThat(plugin.rebalanceAttempts, greaterThan(0));\n    }\n","date":"2020-04-01 03:52:01","endLine":140,"groupId":"102243","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testRebalancingAttemptedIfDisabledButOverridenOnSpecificIndices","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/6f/ad7dba8b5fa17a01a08f609a6dd1827724a6fe.src","preCode":"    public void testRebalancingAttemptedIfDisabledButOverridenOnSpecificIndices() {\n        ClusterState clusterState = createClusterStateWithAllShardsAssigned();\n        final IndexMetaData indexMetaData = randomFrom(clusterState.metaData().indices().values().toArray(IndexMetaData.class));\n        clusterState = ClusterState.builder(clusterState).metaData(MetaData.builder(clusterState.metaData())\n            .put(IndexMetaData.builder(indexMetaData).settings(Settings.builder().put(indexMetaData.getSettings())\n                .put(INDEX_ROUTING_REBALANCE_ENABLE_SETTING.getKey(),\n                    randomFrom(EnableAllocationDecider.Rebalance.ALL,\n                        EnableAllocationDecider.Rebalance.PRIMARIES,\n                        EnableAllocationDecider.Rebalance.REPLICAS).name()))).build()).build();\n\n        final RebalanceShortCircuitPlugin plugin = new RebalanceShortCircuitPlugin();\n        AllocationService allocationService = createAllocationService(Settings.builder()\n                .put(CLUSTER_ROUTING_REBALANCE_ENABLE_SETTING.getKey(), EnableAllocationDecider.Rebalance.NONE.name()),\n            plugin);\n        allocationService.reroute(clusterState, \"reroute\").routingTable();\n        assertThat(plugin.rebalanceAttempts, greaterThan(0));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/cluster/routing/allocation/decider/EnableAllocationShortCircuitTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":124,"status":"M"}],"commitId":"95a7eed9aa35f47b228e402508709b5bd6703cf4","commitMessage":"@@@Rename MetaData to Metadata in all of the places (#54519)\n\nThis is a simple naming change PR.  to fix the fact that \"metadata\" is a\nsingle English word.  and for too long we have not followed general\nnaming conventions for it. We are also not consistent about it.  for\nexample.  METADATA instead of META_DATA if we were trying to be\nconsistent with MetaData (although METADATA is correct when considered\nin the context of \"metadata\"). This was a simple find and replace across\nthe code base.  only taking a few minutes to fix this naming issue\nforever.","date":"2020-04-01 03:52:01","modifiedFileCount":"1712","status":"M","submitter":"Jason Tedor"}]
