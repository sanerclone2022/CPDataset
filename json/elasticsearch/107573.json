[{"authorTime":"2020-03-27 21:56:29","codes":[{"authorDate":"2020-03-18 00:55:07","commitOrder":2,"curCode":"    public void removeComponentTemplate(final String name, final TimeValue masterTimeout,\n                                        final ActionListener<AcknowledgedResponse> listener) {\n        clusterService.submitStateUpdateTask(\"remove-component-template [\" + name + \"]\",\n            new ClusterStateUpdateTask(Priority.URGENT) {\n\n                @Override\n                public TimeValue timeout() {\n                    return masterTimeout;\n                }\n\n                @Override\n                public void onFailure(String source, Exception e) {\n                    listener.onFailure(e);\n                }\n\n                @Override\n                public ClusterState execute(ClusterState currentState) {\n                    Set<String> templateNames = new HashSet<>();\n                    for (String templateName : currentState.metaData().componentTemplates().keySet()) {\n                        if (Regex.simpleMatch(name, templateName)) {\n                            templateNames.add(templateName);\n                        }\n                    }\n                    if (templateNames.isEmpty()) {\n                        \r\n                        \r\n                        if (Regex.isMatchAllPattern(name)) {\n                            return currentState;\n                        }\n                        \r\n                        throw new IndexTemplateMissingException(name);\n                    }\n                    MetaData.Builder metaData = MetaData.builder(currentState.metaData());\n                    for (String templateName : templateNames) {\n                        logger.info(\"removing component template [{}]\", templateName);\n                        metaData.removeComponentTemplate(templateName);\n                    }\n                    return ClusterState.builder(currentState).metaData(metaData).build();\n                }\n\n                @Override\n                public void clusterStateProcessed(String source, ClusterState oldState, ClusterState newState) {\n                    listener.onResponse(new AcknowledgedResponse(true));\n                }\n            });\n    }\n","date":"2020-03-18 00:55:07","endLine":233,"groupId":"29285","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"removeComponentTemplate","params":"(finalStringname@finalTimeValuemasterTimeout@finalActionListener<AcknowledgedResponse>listener)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/ec/ce58e5a7154b731f10dc090c273fc8e1d5c6f7.src","preCode":"    public void removeComponentTemplate(final String name, final TimeValue masterTimeout,\n                                        final ActionListener<AcknowledgedResponse> listener) {\n        clusterService.submitStateUpdateTask(\"remove-component-template [\" + name + \"]\",\n            new ClusterStateUpdateTask(Priority.URGENT) {\n\n                @Override\n                public TimeValue timeout() {\n                    return masterTimeout;\n                }\n\n                @Override\n                public void onFailure(String source, Exception e) {\n                    listener.onFailure(e);\n                }\n\n                @Override\n                public ClusterState execute(ClusterState currentState) {\n                    Set<String> templateNames = new HashSet<>();\n                    for (String templateName : currentState.metaData().componentTemplates().keySet()) {\n                        if (Regex.simpleMatch(name, templateName)) {\n                            templateNames.add(templateName);\n                        }\n                    }\n                    if (templateNames.isEmpty()) {\n                        \r\n                        \r\n                        if (Regex.isMatchAllPattern(name)) {\n                            return currentState;\n                        }\n                        \r\n                        throw new IndexTemplateMissingException(name);\n                    }\n                    MetaData.Builder metaData = MetaData.builder(currentState.metaData());\n                    for (String templateName : templateNames) {\n                        logger.info(\"removing component template [{}]\", templateName);\n                        metaData.removeComponentTemplate(templateName);\n                    }\n                    return ClusterState.builder(currentState).metaData(metaData).build();\n                }\n\n                @Override\n                public void clusterStateProcessed(String source, ClusterState oldState, ClusterState newState) {\n                    listener.onResponse(new AcknowledgedResponse(true));\n                }\n            });\n    }\n","realPath":"server/src/main/java/org/elasticsearch/cluster/metadata/MetaDataIndexTemplateService.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":188,"status":"NB"},{"authorDate":"2020-03-27 21:56:29","commitOrder":2,"curCode":"    public void removeIndexTemplateV2(final String name, final TimeValue masterTimeout,\n                                      final ActionListener<AcknowledgedResponse> listener) {\n        clusterService.submitStateUpdateTask(\"remove-index-template-v2 [\" + name + \"]\",\n            new ClusterStateUpdateTask(Priority.URGENT) {\n\n                @Override\n                public TimeValue timeout() {\n                    return masterTimeout;\n                }\n\n                @Override\n                public void onFailure(String source, Exception e) {\n                    listener.onFailure(e);\n                }\n\n                @Override\n                public ClusterState execute(ClusterState currentState) {\n                    return innerRemoveIndexTemplateV2(currentState, name);\n                }\n\n                @Override\n                public void clusterStateProcessed(String source, ClusterState oldState, ClusterState newState) {\n                    listener.onResponse(new AcknowledgedResponse(true));\n                }\n            });\n    }\n","date":"2020-03-27 21:56:29","endLine":313,"groupId":"59266","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"removeIndexTemplateV2","params":"(finalStringname@finalTimeValuemasterTimeout@finalActionListener<AcknowledgedResponse>listener)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/a0/d3acd0a1b0eae125cb89d77cd728819d41aaa4.src","preCode":"    public void removeIndexTemplateV2(final String name, final TimeValue masterTimeout,\n                                      final ActionListener<AcknowledgedResponse> listener) {\n        clusterService.submitStateUpdateTask(\"remove-index-template-v2 [\" + name + \"]\",\n            new ClusterStateUpdateTask(Priority.URGENT) {\n\n                @Override\n                public TimeValue timeout() {\n                    return masterTimeout;\n                }\n\n                @Override\n                public void onFailure(String source, Exception e) {\n                    listener.onFailure(e);\n                }\n\n                @Override\n                public ClusterState execute(ClusterState currentState) {\n                    return innerRemoveIndexTemplateV2(currentState, name);\n                }\n\n                @Override\n                public void clusterStateProcessed(String source, ClusterState oldState, ClusterState newState) {\n                    listener.onResponse(new AcknowledgedResponse(true));\n                }\n            });\n    }\n","realPath":"server/src/main/java/org/elasticsearch/cluster/metadata/MetaDataIndexTemplateService.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":288,"status":"B"}],"commitId":"e89e916738ff132cd2b2be7da06f5dd3a38b14ca","commitMessage":"@@@Add REST APIs for IndexTemplateV2Metadata CRUD (#54039)\n\n* Add REST APIs for IndexTemplateV2Metadata CRUD\n\nThis commit adds the get/put/delete APIs for interacting with the now v2 versions of index\ntemplates.\n\nThese APIs are behind the existing `es.itv2_feature_flag_registered` system property feature flag.\n\nRelates to #53101\n\n* Add exceptions for HLRC tests\n\n* Add skips for 7.x versions\n\n* Use index_template instead of template_v2 in action names\n\n* Add test for MetaDataIndexTemplateService.addIndexTemplateV2\n\n* Move removal to static method and add test\n\n* Add unit tests for request classes (implement hashCode & equals)\n\nCo-authored-by: Elastic Machine <elasticmachine@users.noreply.github.com>","date":"2020-03-27 21:56:29","modifiedFileCount":"5","status":"M","submitter":"Lee Hinman"},{"authorTime":"2020-03-27 21:56:29","codes":[{"authorDate":"2020-04-01 03:52:01","commitOrder":3,"curCode":"    public void removeComponentTemplate(final String name, final TimeValue masterTimeout,\n                                        final ActionListener<AcknowledgedResponse> listener) {\n        clusterService.submitStateUpdateTask(\"remove-component-template [\" + name + \"]\",\n            new ClusterStateUpdateTask(Priority.URGENT) {\n\n                @Override\n                public TimeValue timeout() {\n                    return masterTimeout;\n                }\n\n                @Override\n                public void onFailure(String source, Exception e) {\n                    listener.onFailure(e);\n                }\n\n                @Override\n                public ClusterState execute(ClusterState currentState) {\n                    Set<String> templateNames = new HashSet<>();\n                    for (String templateName : currentState.metadata().componentTemplates().keySet()) {\n                        if (Regex.simpleMatch(name, templateName)) {\n                            templateNames.add(templateName);\n                        }\n                    }\n                    if (templateNames.isEmpty()) {\n                        \r\n                        \r\n                        if (Regex.isMatchAllPattern(name)) {\n                            return currentState;\n                        }\n                        \r\n                        throw new IndexTemplateMissingException(name);\n                    }\n                    Metadata.Builder metadata = Metadata.builder(currentState.metadata());\n                    for (String templateName : templateNames) {\n                        logger.info(\"removing component template [{}]\", templateName);\n                        metadata.removeComponentTemplate(templateName);\n                    }\n                    return ClusterState.builder(currentState).metadata(metadata).build();\n                }\n\n                @Override\n                public void clusterStateProcessed(String source, ClusterState oldState, ClusterState newState) {\n                    listener.onResponse(new AcknowledgedResponse(true));\n                }\n            });\n    }\n","date":"2020-04-01 03:52:01","endLine":243,"groupId":"29285","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"removeComponentTemplate","params":"(finalStringname@finalTimeValuemasterTimeout@finalActionListener<AcknowledgedResponse>listener)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/68/23fa8c56f5cbc463be120fdc289cb5a1e9df22.src","preCode":"    public void removeComponentTemplate(final String name, final TimeValue masterTimeout,\n                                        final ActionListener<AcknowledgedResponse> listener) {\n        clusterService.submitStateUpdateTask(\"remove-component-template [\" + name + \"]\",\n            new ClusterStateUpdateTask(Priority.URGENT) {\n\n                @Override\n                public TimeValue timeout() {\n                    return masterTimeout;\n                }\n\n                @Override\n                public void onFailure(String source, Exception e) {\n                    listener.onFailure(e);\n                }\n\n                @Override\n                public ClusterState execute(ClusterState currentState) {\n                    Set<String> templateNames = new HashSet<>();\n                    for (String templateName : currentState.metaData().componentTemplates().keySet()) {\n                        if (Regex.simpleMatch(name, templateName)) {\n                            templateNames.add(templateName);\n                        }\n                    }\n                    if (templateNames.isEmpty()) {\n                        \r\n                        \r\n                        if (Regex.isMatchAllPattern(name)) {\n                            return currentState;\n                        }\n                        \r\n                        throw new IndexTemplateMissingException(name);\n                    }\n                    MetaData.Builder metaData = MetaData.builder(currentState.metaData());\n                    for (String templateName : templateNames) {\n                        logger.info(\"removing component template [{}]\", templateName);\n                        metaData.removeComponentTemplate(templateName);\n                    }\n                    return ClusterState.builder(currentState).metaData(metaData).build();\n                }\n\n                @Override\n                public void clusterStateProcessed(String source, ClusterState oldState, ClusterState newState) {\n                    listener.onResponse(new AcknowledgedResponse(true));\n                }\n            });\n    }\n","realPath":"server/src/main/java/org/elasticsearch/cluster/metadata/MetadataIndexTemplateService.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":198,"status":"M"},{"authorDate":"2020-03-27 21:56:29","commitOrder":3,"curCode":"    public void removeIndexTemplateV2(final String name, final TimeValue masterTimeout,\n                                      final ActionListener<AcknowledgedResponse> listener) {\n        clusterService.submitStateUpdateTask(\"remove-index-template-v2 [\" + name + \"]\",\n            new ClusterStateUpdateTask(Priority.URGENT) {\n\n                @Override\n                public TimeValue timeout() {\n                    return masterTimeout;\n                }\n\n                @Override\n                public void onFailure(String source, Exception e) {\n                    listener.onFailure(e);\n                }\n\n                @Override\n                public ClusterState execute(ClusterState currentState) {\n                    return innerRemoveIndexTemplateV2(currentState, name);\n                }\n\n                @Override\n                public void clusterStateProcessed(String source, ClusterState oldState, ClusterState newState) {\n                    listener.onResponse(new AcknowledgedResponse(true));\n                }\n            });\n    }\n","date":"2020-03-27 21:56:29","endLine":313,"groupId":"59266","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"removeIndexTemplateV2","params":"(finalStringname@finalTimeValuemasterTimeout@finalActionListener<AcknowledgedResponse>listener)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/a0/d3acd0a1b0eae125cb89d77cd728819d41aaa4.src","preCode":"    public void removeIndexTemplateV2(final String name, final TimeValue masterTimeout,\n                                      final ActionListener<AcknowledgedResponse> listener) {\n        clusterService.submitStateUpdateTask(\"remove-index-template-v2 [\" + name + \"]\",\n            new ClusterStateUpdateTask(Priority.URGENT) {\n\n                @Override\n                public TimeValue timeout() {\n                    return masterTimeout;\n                }\n\n                @Override\n                public void onFailure(String source, Exception e) {\n                    listener.onFailure(e);\n                }\n\n                @Override\n                public ClusterState execute(ClusterState currentState) {\n                    return innerRemoveIndexTemplateV2(currentState, name);\n                }\n\n                @Override\n                public void clusterStateProcessed(String source, ClusterState oldState, ClusterState newState) {\n                    listener.onResponse(new AcknowledgedResponse(true));\n                }\n            });\n    }\n","realPath":"server/src/main/java/org/elasticsearch/cluster/metadata/MetaDataIndexTemplateService.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":288,"status":"N"}],"commitId":"95a7eed9aa35f47b228e402508709b5bd6703cf4","commitMessage":"@@@Rename MetaData to Metadata in all of the places (#54519)\n\nThis is a simple naming change PR.  to fix the fact that \"metadata\" is a\nsingle English word.  and for too long we have not followed general\nnaming conventions for it. We are also not consistent about it.  for\nexample.  METADATA instead of META_DATA if we were trying to be\nconsistent with MetaData (although METADATA is correct when considered\nin the context of \"metadata\"). This was a simple find and replace across\nthe code base.  only taking a few minutes to fix this naming issue\nforever.","date":"2020-04-01 03:52:01","modifiedFileCount":"1712","status":"M","submitter":"Jason Tedor"},{"authorTime":"2020-03-27 21:56:29","codes":[{"authorDate":"2020-05-15 05:33:35","commitOrder":4,"curCode":"    public void removeComponentTemplate(final String name, final TimeValue masterTimeout,\n                                        final ActionListener<AcknowledgedResponse> listener) {\n        validateNotInUse(clusterService.state().metadata(), name);\n        clusterService.submitStateUpdateTask(\"remove-component-template [\" + name + \"]\",\n            new ClusterStateUpdateTask(Priority.URGENT) {\n\n                @Override\n                public TimeValue timeout() {\n                    return masterTimeout;\n                }\n\n                @Override\n                public void onFailure(String source, Exception e) {\n                    listener.onFailure(e);\n                }\n\n                @Override\n                public ClusterState execute(ClusterState currentState) {\n                    Set<String> templateNames = new HashSet<>();\n                    for (String templateName : currentState.metadata().componentTemplates().keySet()) {\n                        if (Regex.simpleMatch(name, templateName)) {\n                            templateNames.add(templateName);\n                        }\n                    }\n                    if (templateNames.isEmpty()) {\n                        \r\n                        \r\n                        if (Regex.isMatchAllPattern(name)) {\n                            return currentState;\n                        }\n                        \r\n                        throw new IndexTemplateMissingException(name);\n                    }\n                    Metadata.Builder metadata = Metadata.builder(currentState.metadata());\n                    for (String templateName : templateNames) {\n                        logger.info(\"removing component template [{}]\", templateName);\n                        metadata.removeComponentTemplate(templateName);\n                    }\n                    return ClusterState.builder(currentState).metadata(metadata).build();\n                }\n\n                @Override\n                public void clusterStateProcessed(String source, ClusterState oldState, ClusterState newState) {\n                    listener.onResponse(new AcknowledgedResponse(true));\n                }\n            });\n    }\n","date":"2020-05-15 05:33:35","endLine":294,"groupId":"29285","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"removeComponentTemplate","params":"(finalStringname@finalTimeValuemasterTimeout@finalActionListener<AcknowledgedResponse>listener)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/a4/04fc386331a9ae14b19639bc5410c15097bd13.src","preCode":"    public void removeComponentTemplate(final String name, final TimeValue masterTimeout,\n                                        final ActionListener<AcknowledgedResponse> listener) {\n        clusterService.submitStateUpdateTask(\"remove-component-template [\" + name + \"]\",\n            new ClusterStateUpdateTask(Priority.URGENT) {\n\n                @Override\n                public TimeValue timeout() {\n                    return masterTimeout;\n                }\n\n                @Override\n                public void onFailure(String source, Exception e) {\n                    listener.onFailure(e);\n                }\n\n                @Override\n                public ClusterState execute(ClusterState currentState) {\n                    Set<String> templateNames = new HashSet<>();\n                    for (String templateName : currentState.metadata().componentTemplates().keySet()) {\n                        if (Regex.simpleMatch(name, templateName)) {\n                            templateNames.add(templateName);\n                        }\n                    }\n                    if (templateNames.isEmpty()) {\n                        \r\n                        \r\n                        if (Regex.isMatchAllPattern(name)) {\n                            return currentState;\n                        }\n                        \r\n                        throw new IndexTemplateMissingException(name);\n                    }\n                    Metadata.Builder metadata = Metadata.builder(currentState.metadata());\n                    for (String templateName : templateNames) {\n                        logger.info(\"removing component template [{}]\", templateName);\n                        metadata.removeComponentTemplate(templateName);\n                    }\n                    return ClusterState.builder(currentState).metadata(metadata).build();\n                }\n\n                @Override\n                public void clusterStateProcessed(String source, ClusterState oldState, ClusterState newState) {\n                    listener.onResponse(new AcknowledgedResponse(true));\n                }\n            });\n    }\n","realPath":"server/src/main/java/org/elasticsearch/cluster/metadata/MetadataIndexTemplateService.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":248,"status":"M"},{"authorDate":"2020-03-27 21:56:29","commitOrder":4,"curCode":"    public void removeIndexTemplateV2(final String name, final TimeValue masterTimeout,\n                                      final ActionListener<AcknowledgedResponse> listener) {\n        clusterService.submitStateUpdateTask(\"remove-index-template-v2 [\" + name + \"]\",\n            new ClusterStateUpdateTask(Priority.URGENT) {\n\n                @Override\n                public TimeValue timeout() {\n                    return masterTimeout;\n                }\n\n                @Override\n                public void onFailure(String source, Exception e) {\n                    listener.onFailure(e);\n                }\n\n                @Override\n                public ClusterState execute(ClusterState currentState) {\n                    return innerRemoveIndexTemplateV2(currentState, name);\n                }\n\n                @Override\n                public void clusterStateProcessed(String source, ClusterState oldState, ClusterState newState) {\n                    listener.onResponse(new AcknowledgedResponse(true));\n                }\n            });\n    }\n","date":"2020-03-27 21:56:29","endLine":313,"groupId":"59266","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"removeIndexTemplateV2","params":"(finalStringname@finalTimeValuemasterTimeout@finalActionListener<AcknowledgedResponse>listener)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/a0/d3acd0a1b0eae125cb89d77cd728819d41aaa4.src","preCode":"    public void removeIndexTemplateV2(final String name, final TimeValue masterTimeout,\n                                      final ActionListener<AcknowledgedResponse> listener) {\n        clusterService.submitStateUpdateTask(\"remove-index-template-v2 [\" + name + \"]\",\n            new ClusterStateUpdateTask(Priority.URGENT) {\n\n                @Override\n                public TimeValue timeout() {\n                    return masterTimeout;\n                }\n\n                @Override\n                public void onFailure(String source, Exception e) {\n                    listener.onFailure(e);\n                }\n\n                @Override\n                public ClusterState execute(ClusterState currentState) {\n                    return innerRemoveIndexTemplateV2(currentState, name);\n                }\n\n                @Override\n                public void clusterStateProcessed(String source, ClusterState oldState, ClusterState newState) {\n                    listener.onResponse(new AcknowledgedResponse(true));\n                }\n            });\n    }\n","realPath":"server/src/main/java/org/elasticsearch/cluster/metadata/MetaDataIndexTemplateService.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":288,"status":"N"}],"commitId":"cad030d8d716cbcbd9444f9bdd60f0ff2e5c2855","commitMessage":"@@@Don't allow invalid template combinations (#56397)\n\nThis commit removes the ability to put V2 index templates that reference missing component templates.\nIt also prevents removing component templates that are being referenced by an existing V2 index\ntemplate.\n\nRelates to #53101\nResolves #56314","date":"2020-05-15 05:33:35","modifiedFileCount":"2","status":"M","submitter":"Lee Hinman"},{"authorTime":"2020-10-09 14:52:34","codes":[{"authorDate":"2020-10-09 14:52:34","commitOrder":5,"curCode":"    public void removeComponentTemplate(final String name, final TimeValue masterTimeout,\n                                        final ActionListener<AcknowledgedResponse> listener) {\n        validateNotInUse(clusterService.state().metadata(), name);\n        clusterService.submitStateUpdateTask(\"remove-component-template [\" + name + \"]\",\n            new ClusterStateUpdateTask(Priority.URGENT) {\n\n                @Override\n                public TimeValue timeout() {\n                    return masterTimeout;\n                }\n\n                @Override\n                public void onFailure(String source, Exception e) {\n                    listener.onFailure(e);\n                }\n\n                @Override\n                public ClusterState execute(ClusterState currentState) {\n                    Set<String> templateNames = new HashSet<>();\n                    for (String templateName : currentState.metadata().componentTemplates().keySet()) {\n                        if (Regex.simpleMatch(name, templateName)) {\n                            templateNames.add(templateName);\n                        }\n                    }\n                    if (templateNames.isEmpty()) {\n                        \r\n                        \r\n                        if (Regex.isMatchAllPattern(name)) {\n                            return currentState;\n                        }\n                        \r\n                        throw new IndexTemplateMissingException(name);\n                    }\n                    Metadata.Builder metadata = Metadata.builder(currentState.metadata());\n                    for (String templateName : templateNames) {\n                        logger.info(\"removing component template [{}]\", templateName);\n                        metadata.removeComponentTemplate(templateName);\n                    }\n                    return ClusterState.builder(currentState).metadata(metadata).build();\n                }\n\n                @Override\n                public void clusterStateProcessed(String source, ClusterState oldState, ClusterState newState) {\n                    listener.onResponse(AcknowledgedResponse.TRUE);\n                }\n            });\n    }\n","date":"2020-10-09 14:52:34","endLine":366,"groupId":"29285","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"removeComponentTemplate","params":"(finalStringname@finalTimeValuemasterTimeout@finalActionListener<AcknowledgedResponse>listener)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/4d/52f580b4cbe288b2b58d4b0bc37d2d446b1fb4.src","preCode":"    public void removeComponentTemplate(final String name, final TimeValue masterTimeout,\n                                        final ActionListener<AcknowledgedResponse> listener) {\n        validateNotInUse(clusterService.state().metadata(), name);\n        clusterService.submitStateUpdateTask(\"remove-component-template [\" + name + \"]\",\n            new ClusterStateUpdateTask(Priority.URGENT) {\n\n                @Override\n                public TimeValue timeout() {\n                    return masterTimeout;\n                }\n\n                @Override\n                public void onFailure(String source, Exception e) {\n                    listener.onFailure(e);\n                }\n\n                @Override\n                public ClusterState execute(ClusterState currentState) {\n                    Set<String> templateNames = new HashSet<>();\n                    for (String templateName : currentState.metadata().componentTemplates().keySet()) {\n                        if (Regex.simpleMatch(name, templateName)) {\n                            templateNames.add(templateName);\n                        }\n                    }\n                    if (templateNames.isEmpty()) {\n                        \r\n                        \r\n                        if (Regex.isMatchAllPattern(name)) {\n                            return currentState;\n                        }\n                        \r\n                        throw new IndexTemplateMissingException(name);\n                    }\n                    Metadata.Builder metadata = Metadata.builder(currentState.metadata());\n                    for (String templateName : templateNames) {\n                        logger.info(\"removing component template [{}]\", templateName);\n                        metadata.removeComponentTemplate(templateName);\n                    }\n                    return ClusterState.builder(currentState).metadata(metadata).build();\n                }\n\n                @Override\n                public void clusterStateProcessed(String source, ClusterState oldState, ClusterState newState) {\n                    listener.onResponse(new AcknowledgedResponse(true));\n                }\n            });\n    }\n","realPath":"server/src/main/java/org/elasticsearch/cluster/metadata/MetadataIndexTemplateService.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":320,"status":"M"},{"authorDate":"2020-10-09 14:52:34","commitOrder":5,"curCode":"    public void removeIndexTemplateV2(final String name, final TimeValue masterTimeout,\n                                      final ActionListener<AcknowledgedResponse> listener) {\n        clusterService.submitStateUpdateTask(\"remove-index-template-v2 [\" + name + \"]\",\n            new ClusterStateUpdateTask(Priority.URGENT) {\n\n                @Override\n                public TimeValue timeout() {\n                    return masterTimeout;\n                }\n\n                @Override\n                public void onFailure(String source, Exception e) {\n                    listener.onFailure(e);\n                }\n\n                @Override\n                public ClusterState execute(ClusterState currentState) {\n                    return innerRemoveIndexTemplateV2(currentState, name);\n                }\n\n                @Override\n                public void clusterStateProcessed(String source, ClusterState oldState, ClusterState newState) {\n                    listener.onResponse(AcknowledgedResponse.TRUE);\n                }\n            });\n    }\n","date":"2020-10-09 14:52:34","endLine":670,"groupId":"59266","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"removeIndexTemplateV2","params":"(finalStringname@finalTimeValuemasterTimeout@finalActionListener<AcknowledgedResponse>listener)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/4d/52f580b4cbe288b2b58d4b0bc37d2d446b1fb4.src","preCode":"    public void removeIndexTemplateV2(final String name, final TimeValue masterTimeout,\n                                      final ActionListener<AcknowledgedResponse> listener) {\n        clusterService.submitStateUpdateTask(\"remove-index-template-v2 [\" + name + \"]\",\n            new ClusterStateUpdateTask(Priority.URGENT) {\n\n                @Override\n                public TimeValue timeout() {\n                    return masterTimeout;\n                }\n\n                @Override\n                public void onFailure(String source, Exception e) {\n                    listener.onFailure(e);\n                }\n\n                @Override\n                public ClusterState execute(ClusterState currentState) {\n                    return innerRemoveIndexTemplateV2(currentState, name);\n                }\n\n                @Override\n                public void clusterStateProcessed(String source, ClusterState oldState, ClusterState newState) {\n                    listener.onResponse(new AcknowledgedResponse(true));\n                }\n            });\n    }\n","realPath":"server/src/main/java/org/elasticsearch/cluster/metadata/MetadataIndexTemplateService.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":645,"status":"M"}],"commitId":"4e740c2e4a544c7e99963ccd9f64686b1f0531e1","commitMessage":"@@@Dry up AcknowledgedResponse Handling (#63335)\n\n1. `AcknowledgedResponse` should really be two singletons to make things clearer and save some objects and code size.\n2. We were duplicating reading this type over and over  in a bunch of transport master node actions so I dried that up","date":"2020-10-09 14:52:34","modifiedFileCount":"145","status":"M","submitter":"Armin Braun"},{"authorTime":"2020-10-28 21:26:53","codes":[{"authorDate":"2020-10-28 21:26:53","commitOrder":6,"curCode":"    public void removeComponentTemplate(final String name, final TimeValue masterTimeout,\n                                        final ActionListener<AcknowledgedResponse> listener) {\n        validateNotInUse(clusterService.state().metadata(), name);\n        clusterService.submitStateUpdateTask(\"remove-component-template [\" + name + \"]\",\n            new ClusterStateUpdateTask(Priority.URGENT, masterTimeout) {\n\n                @Override\n                public void onFailure(String source, Exception e) {\n                    listener.onFailure(e);\n                }\n\n                @Override\n                public ClusterState execute(ClusterState currentState) {\n                    Set<String> templateNames = new HashSet<>();\n                    for (String templateName : currentState.metadata().componentTemplates().keySet()) {\n                        if (Regex.simpleMatch(name, templateName)) {\n                            templateNames.add(templateName);\n                        }\n                    }\n                    if (templateNames.isEmpty()) {\n                        \r\n                        \r\n                        if (Regex.isMatchAllPattern(name)) {\n                            return currentState;\n                        }\n                        \r\n                        throw new IndexTemplateMissingException(name);\n                    }\n                    Metadata.Builder metadata = Metadata.builder(currentState.metadata());\n                    for (String templateName : templateNames) {\n                        logger.info(\"removing component template [{}]\", templateName);\n                        metadata.removeComponentTemplate(templateName);\n                    }\n                    return ClusterState.builder(currentState).metadata(metadata).build();\n                }\n\n                @Override\n                public void clusterStateProcessed(String source, ClusterState oldState, ClusterState newState) {\n                    listener.onResponse(AcknowledgedResponse.TRUE);\n                }\n            });\n    }\n","date":"2020-10-28 21:26:53","endLine":352,"groupId":"29285","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"removeComponentTemplate","params":"(finalStringname@finalTimeValuemasterTimeout@finalActionListener<AcknowledgedResponse>listener)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/19/b9e83fd06a4f5feb5b22bdf54caaa115227ff6.src","preCode":"    public void removeComponentTemplate(final String name, final TimeValue masterTimeout,\n                                        final ActionListener<AcknowledgedResponse> listener) {\n        validateNotInUse(clusterService.state().metadata(), name);\n        clusterService.submitStateUpdateTask(\"remove-component-template [\" + name + \"]\",\n            new ClusterStateUpdateTask(Priority.URGENT) {\n\n                @Override\n                public TimeValue timeout() {\n                    return masterTimeout;\n                }\n\n                @Override\n                public void onFailure(String source, Exception e) {\n                    listener.onFailure(e);\n                }\n\n                @Override\n                public ClusterState execute(ClusterState currentState) {\n                    Set<String> templateNames = new HashSet<>();\n                    for (String templateName : currentState.metadata().componentTemplates().keySet()) {\n                        if (Regex.simpleMatch(name, templateName)) {\n                            templateNames.add(templateName);\n                        }\n                    }\n                    if (templateNames.isEmpty()) {\n                        \r\n                        \r\n                        if (Regex.isMatchAllPattern(name)) {\n                            return currentState;\n                        }\n                        \r\n                        throw new IndexTemplateMissingException(name);\n                    }\n                    Metadata.Builder metadata = Metadata.builder(currentState.metadata());\n                    for (String templateName : templateNames) {\n                        logger.info(\"removing component template [{}]\", templateName);\n                        metadata.removeComponentTemplate(templateName);\n                    }\n                    return ClusterState.builder(currentState).metadata(metadata).build();\n                }\n\n                @Override\n                public void clusterStateProcessed(String source, ClusterState oldState, ClusterState newState) {\n                    listener.onResponse(AcknowledgedResponse.TRUE);\n                }\n            });\n    }\n","realPath":"server/src/main/java/org/elasticsearch/cluster/metadata/MetadataIndexTemplateService.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":311,"status":"M"},{"authorDate":"2020-10-28 21:26:53","commitOrder":6,"curCode":"    public void removeIndexTemplateV2(final String name, final TimeValue masterTimeout,\n                                      final ActionListener<AcknowledgedResponse> listener) {\n        clusterService.submitStateUpdateTask(\"remove-index-template-v2 [\" + name + \"]\",\n            new ClusterStateUpdateTask(Priority.URGENT, masterTimeout) {\n\n                @Override\n                public void onFailure(String source, Exception e) {\n                    listener.onFailure(e);\n                }\n\n                @Override\n                public ClusterState execute(ClusterState currentState) {\n                    return innerRemoveIndexTemplateV2(currentState, name);\n                }\n\n                @Override\n                public void clusterStateProcessed(String source, ClusterState oldState, ClusterState newState) {\n                    listener.onResponse(AcknowledgedResponse.TRUE);\n                }\n            });\n    }\n","date":"2020-10-28 21:26:53","endLine":647,"groupId":"59266","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"removeIndexTemplateV2","params":"(finalStringname@finalTimeValuemasterTimeout@finalActionListener<AcknowledgedResponse>listener)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/19/b9e83fd06a4f5feb5b22bdf54caaa115227ff6.src","preCode":"    public void removeIndexTemplateV2(final String name, final TimeValue masterTimeout,\n                                      final ActionListener<AcknowledgedResponse> listener) {\n        clusterService.submitStateUpdateTask(\"remove-index-template-v2 [\" + name + \"]\",\n            new ClusterStateUpdateTask(Priority.URGENT) {\n\n                @Override\n                public TimeValue timeout() {\n                    return masterTimeout;\n                }\n\n                @Override\n                public void onFailure(String source, Exception e) {\n                    listener.onFailure(e);\n                }\n\n                @Override\n                public ClusterState execute(ClusterState currentState) {\n                    return innerRemoveIndexTemplateV2(currentState, name);\n                }\n\n                @Override\n                public void clusterStateProcessed(String source, ClusterState oldState, ClusterState newState) {\n                    listener.onResponse(AcknowledgedResponse.TRUE);\n                }\n            });\n    }\n","realPath":"server/src/main/java/org/elasticsearch/cluster/metadata/MetadataIndexTemplateService.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":627,"status":"M"}],"commitId":"ef4ea4ae1030f2ca6dc55e7011bd3397512a32a5","commitMessage":"@@@Simplify ClusterStateUpdateTask Timeout Handling (#64117)\n\nIt's confusing and slightly error prone (see #64116) to handle the timeouts\nvia overrides but the priority via a field. This simplifies the code to to avoid future\nissues and save over 100 LOC.\n\nAlso this fixes a bug in `TransportVotingConfigExclusionsAction` where trying to instantiate a time value with a negative time could throw and unexpected exception and as a result leak a listener.","date":"2020-10-28 21:26:53","modifiedFileCount":"15","status":"M","submitter":"Armin Braun"},{"authorTime":"2021-03-11 17:52:28","codes":[{"authorDate":"2020-10-28 21:26:53","commitOrder":7,"curCode":"    public void removeComponentTemplate(final String name, final TimeValue masterTimeout,\n                                        final ActionListener<AcknowledgedResponse> listener) {\n        validateNotInUse(clusterService.state().metadata(), name);\n        clusterService.submitStateUpdateTask(\"remove-component-template [\" + name + \"]\",\n            new ClusterStateUpdateTask(Priority.URGENT, masterTimeout) {\n\n                @Override\n                public void onFailure(String source, Exception e) {\n                    listener.onFailure(e);\n                }\n\n                @Override\n                public ClusterState execute(ClusterState currentState) {\n                    Set<String> templateNames = new HashSet<>();\n                    for (String templateName : currentState.metadata().componentTemplates().keySet()) {\n                        if (Regex.simpleMatch(name, templateName)) {\n                            templateNames.add(templateName);\n                        }\n                    }\n                    if (templateNames.isEmpty()) {\n                        \r\n                        \r\n                        if (Regex.isMatchAllPattern(name)) {\n                            return currentState;\n                        }\n                        \r\n                        throw new IndexTemplateMissingException(name);\n                    }\n                    Metadata.Builder metadata = Metadata.builder(currentState.metadata());\n                    for (String templateName : templateNames) {\n                        logger.info(\"removing component template [{}]\", templateName);\n                        metadata.removeComponentTemplate(templateName);\n                    }\n                    return ClusterState.builder(currentState).metadata(metadata).build();\n                }\n\n                @Override\n                public void clusterStateProcessed(String source, ClusterState oldState, ClusterState newState) {\n                    listener.onResponse(AcknowledgedResponse.TRUE);\n                }\n            });\n    }\n","date":"2020-10-28 21:26:53","endLine":352,"groupId":"29285","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"removeComponentTemplate","params":"(finalStringname@finalTimeValuemasterTimeout@finalActionListener<AcknowledgedResponse>listener)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/19/b9e83fd06a4f5feb5b22bdf54caaa115227ff6.src","preCode":"    public void removeComponentTemplate(final String name, final TimeValue masterTimeout,\n                                        final ActionListener<AcknowledgedResponse> listener) {\n        validateNotInUse(clusterService.state().metadata(), name);\n        clusterService.submitStateUpdateTask(\"remove-component-template [\" + name + \"]\",\n            new ClusterStateUpdateTask(Priority.URGENT, masterTimeout) {\n\n                @Override\n                public void onFailure(String source, Exception e) {\n                    listener.onFailure(e);\n                }\n\n                @Override\n                public ClusterState execute(ClusterState currentState) {\n                    Set<String> templateNames = new HashSet<>();\n                    for (String templateName : currentState.metadata().componentTemplates().keySet()) {\n                        if (Regex.simpleMatch(name, templateName)) {\n                            templateNames.add(templateName);\n                        }\n                    }\n                    if (templateNames.isEmpty()) {\n                        \r\n                        \r\n                        if (Regex.isMatchAllPattern(name)) {\n                            return currentState;\n                        }\n                        \r\n                        throw new IndexTemplateMissingException(name);\n                    }\n                    Metadata.Builder metadata = Metadata.builder(currentState.metadata());\n                    for (String templateName : templateNames) {\n                        logger.info(\"removing component template [{}]\", templateName);\n                        metadata.removeComponentTemplate(templateName);\n                    }\n                    return ClusterState.builder(currentState).metadata(metadata).build();\n                }\n\n                @Override\n                public void clusterStateProcessed(String source, ClusterState oldState, ClusterState newState) {\n                    listener.onResponse(AcknowledgedResponse.TRUE);\n                }\n            });\n    }\n","realPath":"server/src/main/java/org/elasticsearch/cluster/metadata/MetadataIndexTemplateService.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":311,"status":"N"},{"authorDate":"2021-03-11 17:52:28","commitOrder":7,"curCode":"    public void removeIndexTemplateV2(final String[] names, final TimeValue masterTimeout,\n                                      final ActionListener<AcknowledgedResponse> listener) {\n        clusterService.submitStateUpdateTask(\"remove-index-template-v2 [\" + String.join(\",\", names) + \"]\",\n            new ClusterStateUpdateTask(Priority.URGENT, masterTimeout) {\n\n                @Override\n                public void onFailure(String source, Exception e) {\n                    listener.onFailure(e);\n                }\n\n                @Override\n                public ClusterState execute(ClusterState currentState) {\n                    return innerRemoveIndexTemplateV2(currentState, names);\n                }\n\n                @Override\n                public void clusterStateProcessed(String source, ClusterState oldState, ClusterState newState) {\n                    listener.onResponse(AcknowledgedResponse.TRUE);\n                }\n            });\n    }\n","date":"2021-03-11 17:52:28","endLine":639,"groupId":"59266","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"removeIndexTemplateV2","params":"(finalString[]names@finalTimeValuemasterTimeout@finalActionListener<AcknowledgedResponse>listener)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/e7/f5faba77212d403f94ef9feda478c3de5a55d9.src","preCode":"    public void removeIndexTemplateV2(final String name, final TimeValue masterTimeout,\n                                      final ActionListener<AcknowledgedResponse> listener) {\n        clusterService.submitStateUpdateTask(\"remove-index-template-v2 [\" + name + \"]\",\n            new ClusterStateUpdateTask(Priority.URGENT, masterTimeout) {\n\n                @Override\n                public void onFailure(String source, Exception e) {\n                    listener.onFailure(e);\n                }\n\n                @Override\n                public ClusterState execute(ClusterState currentState) {\n                    return innerRemoveIndexTemplateV2(currentState, name);\n                }\n\n                @Override\n                public void clusterStateProcessed(String source, ClusterState oldState, ClusterState newState) {\n                    listener.onResponse(AcknowledgedResponse.TRUE);\n                }\n            });\n    }\n","realPath":"server/src/main/java/org/elasticsearch/cluster/metadata/MetadataIndexTemplateService.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":619,"status":"M"}],"commitId":"36044ddb113dd76b10de2f04e2991ec1d8aa9588","commitMessage":"@@@Support specifying multiple templates names in delete composable index template api (#70094)\n\nAdd support to delete composable index templates api to specify multiple template\nnames separated by a comma.\n\nChange to cleanup template logic for rest tests to remove all composable index templates via a single delete composable index template request. This to optimize the cleanup logic. After each rest test we delete all templates. So deleting templates this via a single api call (and thus single cluster state update) saves a lot of time considering the number of rest tests.\n\nIf this pr is accepted then I will do the same change for the delete component template api.\n\nRelates to #69973","date":"2021-03-11 17:52:28","modifiedFileCount":"6","status":"M","submitter":"Martijn van Groningen"},{"authorTime":"2021-03-11 17:52:28","codes":[{"authorDate":"2021-03-15 20:08:49","commitOrder":8,"curCode":"    public void removeComponentTemplate(final String[] names, final TimeValue masterTimeout,\n                                        ClusterState state, final ActionListener<AcknowledgedResponse> listener) {\n        validateNotInUse(state.metadata(), names);\n        clusterService.submitStateUpdateTask(\"remove-component-template [\" + String.join(\",\", names) + \"]\",\n            new ClusterStateUpdateTask(Priority.URGENT, masterTimeout) {\n\n                @Override\n                public void onFailure(String source, Exception e) {\n                    listener.onFailure(e);\n                }\n\n                @Override\n                public ClusterState execute(ClusterState currentState) {\n                    return innerRemoveComponentTemplate(currentState, names);\n                }\n\n                @Override\n                public void clusterStateProcessed(String source, ClusterState oldState, ClusterState newState) {\n                    listener.onResponse(AcknowledgedResponse.TRUE);\n                }\n            });\n    }\n","date":"2021-03-15 20:08:49","endLine":326,"groupId":"107573","id":13,"instanceNumber":1,"isCurCommit":0,"methodName":"removeComponentTemplate","params":"(finalString[]names@finalTimeValuemasterTimeout@ClusterStatestate@finalActionListener<AcknowledgedResponse>listener)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/3a/84c8e93f0928c62a3758874872b60c20617c5a.src","preCode":"    public void removeComponentTemplate(final String name, final TimeValue masterTimeout,\n                                        final ActionListener<AcknowledgedResponse> listener) {\n        validateNotInUse(clusterService.state().metadata(), name);\n        clusterService.submitStateUpdateTask(\"remove-component-template [\" + name + \"]\",\n            new ClusterStateUpdateTask(Priority.URGENT, masterTimeout) {\n\n                @Override\n                public void onFailure(String source, Exception e) {\n                    listener.onFailure(e);\n                }\n\n                @Override\n                public ClusterState execute(ClusterState currentState) {\n                    Set<String> templateNames = new HashSet<>();\n                    for (String templateName : currentState.metadata().componentTemplates().keySet()) {\n                        if (Regex.simpleMatch(name, templateName)) {\n                            templateNames.add(templateName);\n                        }\n                    }\n                    if (templateNames.isEmpty()) {\n                        \r\n                        \r\n                        if (Regex.isMatchAllPattern(name)) {\n                            return currentState;\n                        }\n                        \r\n                        throw new IndexTemplateMissingException(name);\n                    }\n                    Metadata.Builder metadata = Metadata.builder(currentState.metadata());\n                    for (String templateName : templateNames) {\n                        logger.info(\"removing component template [{}]\", templateName);\n                        metadata.removeComponentTemplate(templateName);\n                    }\n                    return ClusterState.builder(currentState).metadata(metadata).build();\n                }\n\n                @Override\n                public void clusterStateProcessed(String source, ClusterState oldState, ClusterState newState) {\n                    listener.onResponse(AcknowledgedResponse.TRUE);\n                }\n            });\n    }\n","realPath":"server/src/main/java/org/elasticsearch/cluster/metadata/MetadataIndexTemplateService.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":305,"status":"M"},{"authorDate":"2021-03-11 17:52:28","commitOrder":8,"curCode":"    public void removeIndexTemplateV2(final String[] names, final TimeValue masterTimeout,\n                                      final ActionListener<AcknowledgedResponse> listener) {\n        clusterService.submitStateUpdateTask(\"remove-index-template-v2 [\" + String.join(\",\", names) + \"]\",\n            new ClusterStateUpdateTask(Priority.URGENT, masterTimeout) {\n\n                @Override\n                public void onFailure(String source, Exception e) {\n                    listener.onFailure(e);\n                }\n\n                @Override\n                public ClusterState execute(ClusterState currentState) {\n                    return innerRemoveIndexTemplateV2(currentState, names);\n                }\n\n                @Override\n                public void clusterStateProcessed(String source, ClusterState oldState, ClusterState newState) {\n                    listener.onResponse(AcknowledgedResponse.TRUE);\n                }\n            });\n    }\n","date":"2021-03-11 17:52:28","endLine":639,"groupId":"107573","id":14,"instanceNumber":2,"isCurCommit":0,"methodName":"removeIndexTemplateV2","params":"(finalString[]names@finalTimeValuemasterTimeout@finalActionListener<AcknowledgedResponse>listener)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/e7/f5faba77212d403f94ef9feda478c3de5a55d9.src","preCode":"    public void removeIndexTemplateV2(final String[] names, final TimeValue masterTimeout,\n                                      final ActionListener<AcknowledgedResponse> listener) {\n        clusterService.submitStateUpdateTask(\"remove-index-template-v2 [\" + String.join(\",\", names) + \"]\",\n            new ClusterStateUpdateTask(Priority.URGENT, masterTimeout) {\n\n                @Override\n                public void onFailure(String source, Exception e) {\n                    listener.onFailure(e);\n                }\n\n                @Override\n                public ClusterState execute(ClusterState currentState) {\n                    return innerRemoveIndexTemplateV2(currentState, names);\n                }\n\n                @Override\n                public void clusterStateProcessed(String source, ClusterState oldState, ClusterState newState) {\n                    listener.onResponse(AcknowledgedResponse.TRUE);\n                }\n            });\n    }\n","realPath":"server/src/main/java/org/elasticsearch/cluster/metadata/MetadataIndexTemplateService.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":619,"status":"N"}],"commitId":"715eb90fea1cbf365442870cd8915af03493fee1","commitMessage":"@@@Support specifying multiple templates names in delete component template api (#70314)\n\nAdd support to delete component templates api to specify multiple template\nnames separated by a comma.\n\nChange the cleanup template logic for rest tests to remove all component templates via a single delete component template request. This to optimize the cleanup logic. After each rest test we delete all templates. So deleting templates this via a single api call (and thus single cluster state update) saves a lot of time considering the number of rest tests.\n\nOlder versions don't support component / composable index templates\nand/or data streams. Yet the test base class tries to remove objects\nafter each test.  which adds a significant number of lines to the\nlog files (which slows the tests down). The ESRestTestCase will\nnow check whether all nodes have a specific version and then decide\nwhether data streams and component / composable index templates will\nbe deleted.\n\nAlso ensured that the logstash-index-template and security-index-template\naren't deleted between tests.  these templates are builtin templates that\nES will install if missing. So if tests remove these templates between tests\nthen ES will add these template back almost immediately. These causes\nmany log lines and a lot of cluster state updates.  which slow tests down.\n\nRelates to #69973\n\nCo-authored-by: Lee Hinman <dakrone@users.noreply.github.com>","date":"2021-03-15 20:08:49","modifiedFileCount":"7","status":"M","submitter":"Martijn van Groningen"}]
