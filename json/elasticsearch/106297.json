[{"authorTime":"2021-09-08 00:24:09","codes":[{"authorDate":"2021-09-08 00:24:09","commitOrder":1,"curCode":"    public void testFilterBySLMPolicy() throws Exception {\n        final String repoName = \"test-repo\";\n        createRepository(repoName, \"fs\");\n        createNSnapshots(repoName, randomIntBetween(1, 5));\n        final List<SnapshotInfo> snapshotsWithoutPolicy = clusterAdmin().prepareGetSnapshots(\"*\")\n            .setSnapshots(\"*\")\n            .setSort(GetSnapshotsRequest.SortBy.NAME)\n            .get()\n            .getSnapshots();\n        final String snapshotWithPolicy = \"snapshot-with-policy\";\n        final String policyName = \"some-policy\";\n        final SnapshotInfo withPolicy = assertSuccessful(\n            clusterAdmin().prepareCreateSnapshot(repoName, snapshotWithPolicy)\n                .setUserMetadata(Map.of(SnapshotsService.POLICY_ID_METADATA_FIELD, policyName))\n                .setWaitForCompletion(true)\n                .execute()\n        );\n\n        assertThat(getAllSnapshotsForPolicies(policyName), is(List.of(withPolicy)));\n        assertThat(getAllSnapshotsForPolicies(\"some-*\"), is(List.of(withPolicy)));\n        assertThat(getAllSnapshotsForPolicies(\"*\", \"-\" + policyName), empty());\n        assertThat(getAllSnapshotsForPolicies(GetSnapshotsRequest.NO_POLICY_PATTERN), is(snapshotsWithoutPolicy));\n        assertThat(getAllSnapshotsForPolicies(GetSnapshotsRequest.NO_POLICY_PATTERN, \"-\" + policyName), is(snapshotsWithoutPolicy));\n        assertThat(getAllSnapshotsForPolicies(GetSnapshotsRequest.NO_POLICY_PATTERN), is(snapshotsWithoutPolicy));\n        assertThat(getAllSnapshotsForPolicies(GetSnapshotsRequest.NO_POLICY_PATTERN, \"-*\"), is(snapshotsWithoutPolicy));\n        assertThat(getAllSnapshotsForPolicies(\"no-such-policy\"), empty());\n        assertThat(getAllSnapshotsForPolicies(\"no-such-policy*\"), empty());\n\n        final String snapshotWithOtherPolicy = \"snapshot-with-other-policy\";\n        final String otherPolicyName = \"other-policy\";\n        final SnapshotInfo withOtherPolicy = assertSuccessful(\n            clusterAdmin().prepareCreateSnapshot(repoName, snapshotWithOtherPolicy)\n                .setUserMetadata(Map.of(SnapshotsService.POLICY_ID_METADATA_FIELD, otherPolicyName))\n                .setWaitForCompletion(true)\n                .execute()\n        );\n        assertThat(getAllSnapshotsForPolicies(\"*\"), is(List.of(withOtherPolicy, withPolicy)));\n        assertThat(getAllSnapshotsForPolicies(policyName, otherPolicyName), is(List.of(withOtherPolicy, withPolicy)));\n        assertThat(getAllSnapshotsForPolicies(policyName, otherPolicyName, \"no-such-policy*\"), is(List.of(withOtherPolicy, withPolicy)));\n\n        final List<SnapshotInfo> allSnapshots = clusterAdmin().prepareGetSnapshots(\"*\")\n            .setSnapshots(\"*\")\n            .setSort(GetSnapshotsRequest.SortBy.NAME)\n            .get()\n            .getSnapshots();\n        assertThat(getAllSnapshotsForPolicies(GetSnapshotsRequest.NO_POLICY_PATTERN, policyName, otherPolicyName), is(allSnapshots));\n        assertThat(getAllSnapshotsForPolicies(GetSnapshotsRequest.NO_POLICY_PATTERN, \"*\"), is(allSnapshots));\n    }\n","date":"2021-09-08 00:24:09","endLine":260,"groupId":"2586","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testFilterBySLMPolicy","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/36/5434910b5b009a4a617af26c7babb213db3576.src","preCode":"    public void testFilterBySLMPolicy() throws Exception {\n        final String repoName = \"test-repo\";\n        createRepository(repoName, \"fs\");\n        createNSnapshots(repoName, randomIntBetween(1, 5));\n        final List<SnapshotInfo> snapshotsWithoutPolicy = clusterAdmin().prepareGetSnapshots(\"*\")\n            .setSnapshots(\"*\")\n            .setSort(GetSnapshotsRequest.SortBy.NAME)\n            .get()\n            .getSnapshots();\n        final String snapshotWithPolicy = \"snapshot-with-policy\";\n        final String policyName = \"some-policy\";\n        final SnapshotInfo withPolicy = assertSuccessful(\n            clusterAdmin().prepareCreateSnapshot(repoName, snapshotWithPolicy)\n                .setUserMetadata(Map.of(SnapshotsService.POLICY_ID_METADATA_FIELD, policyName))\n                .setWaitForCompletion(true)\n                .execute()\n        );\n\n        assertThat(getAllSnapshotsForPolicies(policyName), is(List.of(withPolicy)));\n        assertThat(getAllSnapshotsForPolicies(\"some-*\"), is(List.of(withPolicy)));\n        assertThat(getAllSnapshotsForPolicies(\"*\", \"-\" + policyName), empty());\n        assertThat(getAllSnapshotsForPolicies(GetSnapshotsRequest.NO_POLICY_PATTERN), is(snapshotsWithoutPolicy));\n        assertThat(getAllSnapshotsForPolicies(GetSnapshotsRequest.NO_POLICY_PATTERN, \"-\" + policyName), is(snapshotsWithoutPolicy));\n        assertThat(getAllSnapshotsForPolicies(GetSnapshotsRequest.NO_POLICY_PATTERN), is(snapshotsWithoutPolicy));\n        assertThat(getAllSnapshotsForPolicies(GetSnapshotsRequest.NO_POLICY_PATTERN, \"-*\"), is(snapshotsWithoutPolicy));\n        assertThat(getAllSnapshotsForPolicies(\"no-such-policy\"), empty());\n        assertThat(getAllSnapshotsForPolicies(\"no-such-policy*\"), empty());\n\n        final String snapshotWithOtherPolicy = \"snapshot-with-other-policy\";\n        final String otherPolicyName = \"other-policy\";\n        final SnapshotInfo withOtherPolicy = assertSuccessful(\n            clusterAdmin().prepareCreateSnapshot(repoName, snapshotWithOtherPolicy)\n                .setUserMetadata(Map.of(SnapshotsService.POLICY_ID_METADATA_FIELD, otherPolicyName))\n                .setWaitForCompletion(true)\n                .execute()\n        );\n        assertThat(getAllSnapshotsForPolicies(\"*\"), is(List.of(withOtherPolicy, withPolicy)));\n        assertThat(getAllSnapshotsForPolicies(policyName, otherPolicyName), is(List.of(withOtherPolicy, withPolicy)));\n        assertThat(getAllSnapshotsForPolicies(policyName, otherPolicyName, \"no-such-policy*\"), is(List.of(withOtherPolicy, withPolicy)));\n\n        final List<SnapshotInfo> allSnapshots = clusterAdmin().prepareGetSnapshots(\"*\")\n            .setSnapshots(\"*\")\n            .setSort(GetSnapshotsRequest.SortBy.NAME)\n            .get()\n            .getSnapshots();\n        assertThat(getAllSnapshotsForPolicies(GetSnapshotsRequest.NO_POLICY_PATTERN, policyName, otherPolicyName), is(allSnapshots));\n        assertThat(getAllSnapshotsForPolicies(GetSnapshotsRequest.NO_POLICY_PATTERN, \"*\"), is(allSnapshots));\n    }\n","realPath":"server/src/internalClusterTest/java/org/elasticsearch/snapshots/GetSnapshotsIT.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":213,"status":"B"},{"authorDate":"2021-09-08 00:24:09","commitOrder":1,"curCode":"    public void testFilterBySLMPolicy() throws Exception {\n        final String repoName = \"test-repo\";\n        AbstractSnapshotIntegTestCase.createRepository(logger, repoName, \"fs\");\n        AbstractSnapshotIntegTestCase.createNSnapshots(logger, repoName, randomIntBetween(1, 5));\n        final List<SnapshotInfo> snapshotsWithoutPolicy = clusterAdmin().prepareGetSnapshots(\"*\").setSnapshots(\"*\")\n            .setSort(GetSnapshotsRequest.SortBy.NAME).get().getSnapshots();\n        final String snapshotWithPolicy = \"snapshot-with-policy\";\n        final String policyName = \"some-policy\";\n        final SnapshotInfo withPolicy = AbstractSnapshotIntegTestCase.assertSuccessful(\n            logger,\n            clusterAdmin().prepareCreateSnapshot(repoName, snapshotWithPolicy)\n                .setUserMetadata(Map.of(SnapshotsService.POLICY_ID_METADATA_FIELD, policyName))\n                .setWaitForCompletion(true)\n                .execute()\n        );\n\n        assertThat(getAllSnapshotsForPolicies(policyName), is(List.of(withPolicy)));\n        assertThat(getAllSnapshotsForPolicies(\"some-*\"), is(List.of(withPolicy)));\n        assertThat(getAllSnapshotsForPolicies(\"*\", \"-\" + policyName), empty());\n        assertThat(getAllSnapshotsForPolicies(GetSnapshotsRequest.NO_POLICY_PATTERN), is(snapshotsWithoutPolicy));\n        assertThat(\n                getAllSnapshotsForPolicies(GetSnapshotsRequest.NO_POLICY_PATTERN, \"-\" + policyName), is(snapshotsWithoutPolicy));\n        assertThat(getAllSnapshotsForPolicies(GetSnapshotsRequest.NO_POLICY_PATTERN), is(snapshotsWithoutPolicy));\n        assertThat(getAllSnapshotsForPolicies(GetSnapshotsRequest.NO_POLICY_PATTERN, \"-*\"), is(snapshotsWithoutPolicy));\n        assertThat(getAllSnapshotsForPolicies(\"no-such-policy\"), empty());\n        assertThat(getAllSnapshotsForPolicies(\"no-such-policy*\"), empty());\n\n        final String snapshotWithOtherPolicy = \"snapshot-with-other-policy\";\n        final String otherPolicyName = \"other-policy\";\n        final SnapshotInfo withOtherPolicy = AbstractSnapshotIntegTestCase.assertSuccessful(\n            logger,\n            clusterAdmin().prepareCreateSnapshot(repoName, snapshotWithOtherPolicy)\n                .setUserMetadata(Map.of(SnapshotsService.POLICY_ID_METADATA_FIELD, otherPolicyName))\n                .setWaitForCompletion(true)\n                .execute()\n        );\n        assertThat(getAllSnapshotsForPolicies(\"*\"), is(List.of(withOtherPolicy, withPolicy)));\n        assertThat(getAllSnapshotsForPolicies(policyName, otherPolicyName), is(List.of(withOtherPolicy, withPolicy)));\n        assertThat(getAllSnapshotsForPolicies(policyName, otherPolicyName, \"no-such-policy*\"), is(List.of(withOtherPolicy, withPolicy)));\n        final List<SnapshotInfo> allSnapshots = clusterAdmin().prepareGetSnapshots(\"*\")\n                .setSnapshots(\"*\")\n                .setSort(GetSnapshotsRequest.SortBy.NAME)\n                .get()\n                .getSnapshots();\n        assertThat(\n                getAllSnapshotsForPolicies(GetSnapshotsRequest.NO_POLICY_PATTERN, policyName, otherPolicyName),\n                is(allSnapshots)\n        );\n        assertThat(\n                getAllSnapshotsForPolicies(GetSnapshotsRequest.NO_POLICY_PATTERN, \"*\"),\n                is(allSnapshots)\n        );\n    }\n","date":"2021-09-08 00:24:09","endLine":242,"groupId":"2586","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testFilterBySLMPolicy","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/6b/09b1e8299f244d175e0aaae421575e84cfceca.src","preCode":"    public void testFilterBySLMPolicy() throws Exception {\n        final String repoName = \"test-repo\";\n        AbstractSnapshotIntegTestCase.createRepository(logger, repoName, \"fs\");\n        AbstractSnapshotIntegTestCase.createNSnapshots(logger, repoName, randomIntBetween(1, 5));\n        final List<SnapshotInfo> snapshotsWithoutPolicy = clusterAdmin().prepareGetSnapshots(\"*\").setSnapshots(\"*\")\n            .setSort(GetSnapshotsRequest.SortBy.NAME).get().getSnapshots();\n        final String snapshotWithPolicy = \"snapshot-with-policy\";\n        final String policyName = \"some-policy\";\n        final SnapshotInfo withPolicy = AbstractSnapshotIntegTestCase.assertSuccessful(\n            logger,\n            clusterAdmin().prepareCreateSnapshot(repoName, snapshotWithPolicy)\n                .setUserMetadata(Map.of(SnapshotsService.POLICY_ID_METADATA_FIELD, policyName))\n                .setWaitForCompletion(true)\n                .execute()\n        );\n\n        assertThat(getAllSnapshotsForPolicies(policyName), is(List.of(withPolicy)));\n        assertThat(getAllSnapshotsForPolicies(\"some-*\"), is(List.of(withPolicy)));\n        assertThat(getAllSnapshotsForPolicies(\"*\", \"-\" + policyName), empty());\n        assertThat(getAllSnapshotsForPolicies(GetSnapshotsRequest.NO_POLICY_PATTERN), is(snapshotsWithoutPolicy));\n        assertThat(\n                getAllSnapshotsForPolicies(GetSnapshotsRequest.NO_POLICY_PATTERN, \"-\" + policyName), is(snapshotsWithoutPolicy));\n        assertThat(getAllSnapshotsForPolicies(GetSnapshotsRequest.NO_POLICY_PATTERN), is(snapshotsWithoutPolicy));\n        assertThat(getAllSnapshotsForPolicies(GetSnapshotsRequest.NO_POLICY_PATTERN, \"-*\"), is(snapshotsWithoutPolicy));\n        assertThat(getAllSnapshotsForPolicies(\"no-such-policy\"), empty());\n        assertThat(getAllSnapshotsForPolicies(\"no-such-policy*\"), empty());\n\n        final String snapshotWithOtherPolicy = \"snapshot-with-other-policy\";\n        final String otherPolicyName = \"other-policy\";\n        final SnapshotInfo withOtherPolicy = AbstractSnapshotIntegTestCase.assertSuccessful(\n            logger,\n            clusterAdmin().prepareCreateSnapshot(repoName, snapshotWithOtherPolicy)\n                .setUserMetadata(Map.of(SnapshotsService.POLICY_ID_METADATA_FIELD, otherPolicyName))\n                .setWaitForCompletion(true)\n                .execute()\n        );\n        assertThat(getAllSnapshotsForPolicies(\"*\"), is(List.of(withOtherPolicy, withPolicy)));\n        assertThat(getAllSnapshotsForPolicies(policyName, otherPolicyName), is(List.of(withOtherPolicy, withPolicy)));\n        assertThat(getAllSnapshotsForPolicies(policyName, otherPolicyName, \"no-such-policy*\"), is(List.of(withOtherPolicy, withPolicy)));\n        final List<SnapshotInfo> allSnapshots = clusterAdmin().prepareGetSnapshots(\"*\")\n                .setSnapshots(\"*\")\n                .setSort(GetSnapshotsRequest.SortBy.NAME)\n                .get()\n                .getSnapshots();\n        assertThat(\n                getAllSnapshotsForPolicies(GetSnapshotsRequest.NO_POLICY_PATTERN, policyName, otherPolicyName),\n                is(allSnapshots)\n        );\n        assertThat(\n                getAllSnapshotsForPolicies(GetSnapshotsRequest.NO_POLICY_PATTERN, \"*\"),\n                is(allSnapshots)\n        );\n    }\n","realPath":"qa/smoke-test-http/src/test/java/org/elasticsearch/http/snapshots/RestGetSnapshotsIT.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":190,"status":"B"}],"commitId":"7508720fe53a01aaf2a31cb078b57c0a4a621a6b","commitMessage":"@@@Add Filtering by SLM Policy to Get Snapshots API (#77321)\n\nIt's in the title.  add new `slm_policy_filter` param as a filter to the get snapshots API.\n","date":"2021-09-08 00:24:09","modifiedFileCount":"13","status":"B","submitter":"Armin Braun"},{"authorTime":"2021-09-08 00:24:09","codes":[{"authorDate":"2021-09-10 21:00:44","commitOrder":2,"curCode":"    public void testFilterBySLMPolicy() throws Exception {\n        final String repoName = \"test-repo\";\n        createRepository(repoName, \"fs\");\n        createNSnapshots(repoName, randomIntBetween(1, 5));\n        final List<SnapshotInfo> snapshotsWithoutPolicy = clusterAdmin().prepareGetSnapshots(matchAllPattern())\n            .setSnapshots(matchAllPattern())\n            .setSort(GetSnapshotsRequest.SortBy.NAME)\n            .get()\n            .getSnapshots();\n        final String snapshotWithPolicy = \"snapshot-with-policy\";\n        final String policyName = \"some-policy\";\n        final SnapshotInfo withPolicy = assertSuccessful(\n            clusterAdmin().prepareCreateSnapshot(repoName, snapshotWithPolicy)\n                .setUserMetadata(Map.of(SnapshotsService.POLICY_ID_METADATA_FIELD, policyName))\n                .setWaitForCompletion(true)\n                .execute()\n        );\n\n        assertThat(getAllSnapshotsForPolicies(policyName), is(List.of(withPolicy)));\n        assertThat(getAllSnapshotsForPolicies(\"some-*\"), is(List.of(withPolicy)));\n        assertThat(getAllSnapshotsForPolicies(\"*\", \"-\" + policyName), empty());\n        assertThat(getAllSnapshotsForPolicies(GetSnapshotsRequest.NO_POLICY_PATTERN), is(snapshotsWithoutPolicy));\n        assertThat(getAllSnapshotsForPolicies(GetSnapshotsRequest.NO_POLICY_PATTERN, \"-\" + policyName), is(snapshotsWithoutPolicy));\n        assertThat(getAllSnapshotsForPolicies(GetSnapshotsRequest.NO_POLICY_PATTERN), is(snapshotsWithoutPolicy));\n        assertThat(getAllSnapshotsForPolicies(GetSnapshotsRequest.NO_POLICY_PATTERN, \"-*\"), is(snapshotsWithoutPolicy));\n        assertThat(getAllSnapshotsForPolicies(\"no-such-policy\"), empty());\n        assertThat(getAllSnapshotsForPolicies(\"no-such-policy*\"), empty());\n\n        final String snapshotWithOtherPolicy = \"snapshot-with-other-policy\";\n        final String otherPolicyName = \"other-policy\";\n        final SnapshotInfo withOtherPolicy = assertSuccessful(\n            clusterAdmin().prepareCreateSnapshot(repoName, snapshotWithOtherPolicy)\n                .setUserMetadata(Map.of(SnapshotsService.POLICY_ID_METADATA_FIELD, otherPolicyName))\n                .setWaitForCompletion(true)\n                .execute()\n        );\n        assertThat(getAllSnapshotsForPolicies(\"*\"), is(List.of(withOtherPolicy, withPolicy)));\n        assertThat(getAllSnapshotsForPolicies(policyName, otherPolicyName), is(List.of(withOtherPolicy, withPolicy)));\n        assertThat(getAllSnapshotsForPolicies(policyName, otherPolicyName, \"no-such-policy*\"), is(List.of(withOtherPolicy, withPolicy)));\n\n        final List<SnapshotInfo> allSnapshots = clusterAdmin().prepareGetSnapshots(matchAllPattern())\n            .setSnapshots(matchAllPattern())\n            .setSort(GetSnapshotsRequest.SortBy.NAME)\n            .get()\n            .getSnapshots();\n        assertThat(getAllSnapshotsForPolicies(GetSnapshotsRequest.NO_POLICY_PATTERN, policyName, otherPolicyName), is(allSnapshots));\n        assertThat(getAllSnapshotsForPolicies(GetSnapshotsRequest.NO_POLICY_PATTERN, \"*\"), is(allSnapshots));\n    }\n","date":"2021-09-10 21:00:44","endLine":452,"groupId":"106297","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testFilterBySLMPolicy","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/d6/a124ff8f5876a469afd2ec1d3982fc177544c8.src","preCode":"    public void testFilterBySLMPolicy() throws Exception {\n        final String repoName = \"test-repo\";\n        createRepository(repoName, \"fs\");\n        createNSnapshots(repoName, randomIntBetween(1, 5));\n        final List<SnapshotInfo> snapshotsWithoutPolicy = clusterAdmin().prepareGetSnapshots(\"*\")\n            .setSnapshots(\"*\")\n            .setSort(GetSnapshotsRequest.SortBy.NAME)\n            .get()\n            .getSnapshots();\n        final String snapshotWithPolicy = \"snapshot-with-policy\";\n        final String policyName = \"some-policy\";\n        final SnapshotInfo withPolicy = assertSuccessful(\n            clusterAdmin().prepareCreateSnapshot(repoName, snapshotWithPolicy)\n                .setUserMetadata(Map.of(SnapshotsService.POLICY_ID_METADATA_FIELD, policyName))\n                .setWaitForCompletion(true)\n                .execute()\n        );\n\n        assertThat(getAllSnapshotsForPolicies(policyName), is(List.of(withPolicy)));\n        assertThat(getAllSnapshotsForPolicies(\"some-*\"), is(List.of(withPolicy)));\n        assertThat(getAllSnapshotsForPolicies(\"*\", \"-\" + policyName), empty());\n        assertThat(getAllSnapshotsForPolicies(GetSnapshotsRequest.NO_POLICY_PATTERN), is(snapshotsWithoutPolicy));\n        assertThat(getAllSnapshotsForPolicies(GetSnapshotsRequest.NO_POLICY_PATTERN, \"-\" + policyName), is(snapshotsWithoutPolicy));\n        assertThat(getAllSnapshotsForPolicies(GetSnapshotsRequest.NO_POLICY_PATTERN), is(snapshotsWithoutPolicy));\n        assertThat(getAllSnapshotsForPolicies(GetSnapshotsRequest.NO_POLICY_PATTERN, \"-*\"), is(snapshotsWithoutPolicy));\n        assertThat(getAllSnapshotsForPolicies(\"no-such-policy\"), empty());\n        assertThat(getAllSnapshotsForPolicies(\"no-such-policy*\"), empty());\n\n        final String snapshotWithOtherPolicy = \"snapshot-with-other-policy\";\n        final String otherPolicyName = \"other-policy\";\n        final SnapshotInfo withOtherPolicy = assertSuccessful(\n            clusterAdmin().prepareCreateSnapshot(repoName, snapshotWithOtherPolicy)\n                .setUserMetadata(Map.of(SnapshotsService.POLICY_ID_METADATA_FIELD, otherPolicyName))\n                .setWaitForCompletion(true)\n                .execute()\n        );\n        assertThat(getAllSnapshotsForPolicies(\"*\"), is(List.of(withOtherPolicy, withPolicy)));\n        assertThat(getAllSnapshotsForPolicies(policyName, otherPolicyName), is(List.of(withOtherPolicy, withPolicy)));\n        assertThat(getAllSnapshotsForPolicies(policyName, otherPolicyName, \"no-such-policy*\"), is(List.of(withOtherPolicy, withPolicy)));\n\n        final List<SnapshotInfo> allSnapshots = clusterAdmin().prepareGetSnapshots(\"*\")\n            .setSnapshots(\"*\")\n            .setSort(GetSnapshotsRequest.SortBy.NAME)\n            .get()\n            .getSnapshots();\n        assertThat(getAllSnapshotsForPolicies(GetSnapshotsRequest.NO_POLICY_PATTERN, policyName, otherPolicyName), is(allSnapshots));\n        assertThat(getAllSnapshotsForPolicies(GetSnapshotsRequest.NO_POLICY_PATTERN, \"*\"), is(allSnapshots));\n    }\n","realPath":"server/src/internalClusterTest/java/org/elasticsearch/snapshots/GetSnapshotsIT.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":405,"status":"M"},{"authorDate":"2021-09-08 00:24:09","commitOrder":2,"curCode":"    public void testFilterBySLMPolicy() throws Exception {\n        final String repoName = \"test-repo\";\n        AbstractSnapshotIntegTestCase.createRepository(logger, repoName, \"fs\");\n        AbstractSnapshotIntegTestCase.createNSnapshots(logger, repoName, randomIntBetween(1, 5));\n        final List<SnapshotInfo> snapshotsWithoutPolicy = clusterAdmin().prepareGetSnapshots(\"*\").setSnapshots(\"*\")\n            .setSort(GetSnapshotsRequest.SortBy.NAME).get().getSnapshots();\n        final String snapshotWithPolicy = \"snapshot-with-policy\";\n        final String policyName = \"some-policy\";\n        final SnapshotInfo withPolicy = AbstractSnapshotIntegTestCase.assertSuccessful(\n            logger,\n            clusterAdmin().prepareCreateSnapshot(repoName, snapshotWithPolicy)\n                .setUserMetadata(Map.of(SnapshotsService.POLICY_ID_METADATA_FIELD, policyName))\n                .setWaitForCompletion(true)\n                .execute()\n        );\n\n        assertThat(getAllSnapshotsForPolicies(policyName), is(List.of(withPolicy)));\n        assertThat(getAllSnapshotsForPolicies(\"some-*\"), is(List.of(withPolicy)));\n        assertThat(getAllSnapshotsForPolicies(\"*\", \"-\" + policyName), empty());\n        assertThat(getAllSnapshotsForPolicies(GetSnapshotsRequest.NO_POLICY_PATTERN), is(snapshotsWithoutPolicy));\n        assertThat(\n                getAllSnapshotsForPolicies(GetSnapshotsRequest.NO_POLICY_PATTERN, \"-\" + policyName), is(snapshotsWithoutPolicy));\n        assertThat(getAllSnapshotsForPolicies(GetSnapshotsRequest.NO_POLICY_PATTERN), is(snapshotsWithoutPolicy));\n        assertThat(getAllSnapshotsForPolicies(GetSnapshotsRequest.NO_POLICY_PATTERN, \"-*\"), is(snapshotsWithoutPolicy));\n        assertThat(getAllSnapshotsForPolicies(\"no-such-policy\"), empty());\n        assertThat(getAllSnapshotsForPolicies(\"no-such-policy*\"), empty());\n\n        final String snapshotWithOtherPolicy = \"snapshot-with-other-policy\";\n        final String otherPolicyName = \"other-policy\";\n        final SnapshotInfo withOtherPolicy = AbstractSnapshotIntegTestCase.assertSuccessful(\n            logger,\n            clusterAdmin().prepareCreateSnapshot(repoName, snapshotWithOtherPolicy)\n                .setUserMetadata(Map.of(SnapshotsService.POLICY_ID_METADATA_FIELD, otherPolicyName))\n                .setWaitForCompletion(true)\n                .execute()\n        );\n        assertThat(getAllSnapshotsForPolicies(\"*\"), is(List.of(withOtherPolicy, withPolicy)));\n        assertThat(getAllSnapshotsForPolicies(policyName, otherPolicyName), is(List.of(withOtherPolicy, withPolicy)));\n        assertThat(getAllSnapshotsForPolicies(policyName, otherPolicyName, \"no-such-policy*\"), is(List.of(withOtherPolicy, withPolicy)));\n        final List<SnapshotInfo> allSnapshots = clusterAdmin().prepareGetSnapshots(\"*\")\n                .setSnapshots(\"*\")\n                .setSort(GetSnapshotsRequest.SortBy.NAME)\n                .get()\n                .getSnapshots();\n        assertThat(\n                getAllSnapshotsForPolicies(GetSnapshotsRequest.NO_POLICY_PATTERN, policyName, otherPolicyName),\n                is(allSnapshots)\n        );\n        assertThat(\n                getAllSnapshotsForPolicies(GetSnapshotsRequest.NO_POLICY_PATTERN, \"*\"),\n                is(allSnapshots)\n        );\n    }\n","date":"2021-09-08 00:24:09","endLine":242,"groupId":"106297","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testFilterBySLMPolicy","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/6b/09b1e8299f244d175e0aaae421575e84cfceca.src","preCode":"    public void testFilterBySLMPolicy() throws Exception {\n        final String repoName = \"test-repo\";\n        AbstractSnapshotIntegTestCase.createRepository(logger, repoName, \"fs\");\n        AbstractSnapshotIntegTestCase.createNSnapshots(logger, repoName, randomIntBetween(1, 5));\n        final List<SnapshotInfo> snapshotsWithoutPolicy = clusterAdmin().prepareGetSnapshots(\"*\").setSnapshots(\"*\")\n            .setSort(GetSnapshotsRequest.SortBy.NAME).get().getSnapshots();\n        final String snapshotWithPolicy = \"snapshot-with-policy\";\n        final String policyName = \"some-policy\";\n        final SnapshotInfo withPolicy = AbstractSnapshotIntegTestCase.assertSuccessful(\n            logger,\n            clusterAdmin().prepareCreateSnapshot(repoName, snapshotWithPolicy)\n                .setUserMetadata(Map.of(SnapshotsService.POLICY_ID_METADATA_FIELD, policyName))\n                .setWaitForCompletion(true)\n                .execute()\n        );\n\n        assertThat(getAllSnapshotsForPolicies(policyName), is(List.of(withPolicy)));\n        assertThat(getAllSnapshotsForPolicies(\"some-*\"), is(List.of(withPolicy)));\n        assertThat(getAllSnapshotsForPolicies(\"*\", \"-\" + policyName), empty());\n        assertThat(getAllSnapshotsForPolicies(GetSnapshotsRequest.NO_POLICY_PATTERN), is(snapshotsWithoutPolicy));\n        assertThat(\n                getAllSnapshotsForPolicies(GetSnapshotsRequest.NO_POLICY_PATTERN, \"-\" + policyName), is(snapshotsWithoutPolicy));\n        assertThat(getAllSnapshotsForPolicies(GetSnapshotsRequest.NO_POLICY_PATTERN), is(snapshotsWithoutPolicy));\n        assertThat(getAllSnapshotsForPolicies(GetSnapshotsRequest.NO_POLICY_PATTERN, \"-*\"), is(snapshotsWithoutPolicy));\n        assertThat(getAllSnapshotsForPolicies(\"no-such-policy\"), empty());\n        assertThat(getAllSnapshotsForPolicies(\"no-such-policy*\"), empty());\n\n        final String snapshotWithOtherPolicy = \"snapshot-with-other-policy\";\n        final String otherPolicyName = \"other-policy\";\n        final SnapshotInfo withOtherPolicy = AbstractSnapshotIntegTestCase.assertSuccessful(\n            logger,\n            clusterAdmin().prepareCreateSnapshot(repoName, snapshotWithOtherPolicy)\n                .setUserMetadata(Map.of(SnapshotsService.POLICY_ID_METADATA_FIELD, otherPolicyName))\n                .setWaitForCompletion(true)\n                .execute()\n        );\n        assertThat(getAllSnapshotsForPolicies(\"*\"), is(List.of(withOtherPolicy, withPolicy)));\n        assertThat(getAllSnapshotsForPolicies(policyName, otherPolicyName), is(List.of(withOtherPolicy, withPolicy)));\n        assertThat(getAllSnapshotsForPolicies(policyName, otherPolicyName, \"no-such-policy*\"), is(List.of(withOtherPolicy, withPolicy)));\n        final List<SnapshotInfo> allSnapshots = clusterAdmin().prepareGetSnapshots(\"*\")\n                .setSnapshots(\"*\")\n                .setSort(GetSnapshotsRequest.SortBy.NAME)\n                .get()\n                .getSnapshots();\n        assertThat(\n                getAllSnapshotsForPolicies(GetSnapshotsRequest.NO_POLICY_PATTERN, policyName, otherPolicyName),\n                is(allSnapshots)\n        );\n        assertThat(\n                getAllSnapshotsForPolicies(GetSnapshotsRequest.NO_POLICY_PATTERN, \"*\"),\n                is(allSnapshots)\n        );\n    }\n","realPath":"qa/smoke-test-http/src/test/java/org/elasticsearch/http/snapshots/RestGetSnapshotsIT.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":190,"status":"N"}],"commitId":"f1a4551e9363d2633b7807ab770029482d9efe53","commitMessage":"@@@Implement Exclude Patterns for Snapshot- and Repository Names in Get Snapshots API (#77308)\n\nIt's in the title. Adds support for exclude patterns combined with wildcard requests\nsimilar to what we support for index names.\n","date":"2021-09-10 21:00:44","modifiedFileCount":"5","status":"M","submitter":"Armin Braun"}]
