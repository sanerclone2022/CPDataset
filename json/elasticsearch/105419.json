[{"authorTime":"2020-04-14 14:38:04","codes":[{"authorDate":"2020-04-14 14:38:04","commitOrder":3,"curCode":"    public void testSomeMatchesNumericDocValues() throws IOException {\n        final int size = randomIntBetween(100, 1000);\n        final List<Long> sample = new ArrayList<>(size);\n        testCase(\n            new DocValuesFieldExistsQuery(FIELD_NAME),\n            randomSample(size, point -> {\n                sample.add(point);\n                return singleton(new NumericDocValuesField(FIELD_NAME, point));\n            }),\n            agg -> {\n                assertThat(agg.getMedianAbsoluteDeviation(), closeToRelative(calculateMAD(sample)));\n                assertTrue(AggregationInspectionHelper.hasValue(agg));\n            }\n        );\n    }\n","date":"2020-04-14 14:38:04","endLine":145,"groupId":"43998","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testSomeMatchesNumericDocValues","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/2a/e30689ad00d8c1289f09845087186e59c260c0.src","preCode":"    public void testSomeMatchesNumericDocValues() throws IOException {\n        final int size = randomIntBetween(100, 1000);\n        final List<Long> sample = new ArrayList<>(size);\n        testCase(\n            new DocValuesFieldExistsQuery(FIELD_NAME),\n            randomSample(size, point -> {\n                sample.add(point);\n                return singleton(new NumericDocValuesField(FIELD_NAME, point));\n            }),\n            agg -> {\n                assertThat(agg.getMedianAbsoluteDeviation(), closeToRelative(calculateMAD(sample)));\n                assertTrue(AggregationInspectionHelper.hasValue(agg));\n            }\n        );\n    }\n","realPath":"server/src/test/java/org/elasticsearch/search/aggregations/metrics/MedianAbsoluteDeviationAggregatorTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":131,"status":"MB"},{"authorDate":"2020-04-14 14:38:04","commitOrder":3,"curCode":"    public void testValueScript() throws IOException {\n        MappedFieldType fieldType = new NumberFieldMapper.NumberFieldType(NumberFieldMapper.NumberType.LONG);\n        fieldType.setName(FIELD_NAME);\n        fieldType.setHasDocValues(true);\n\n        MedianAbsoluteDeviationAggregationBuilder aggregationBuilder = new MedianAbsoluteDeviationAggregationBuilder(\"foo\")\n            .field(FIELD_NAME)\n            .script(new Script(ScriptType.INLINE, MockScriptEngine.NAME, VALUE_SCRIPT, Collections.emptyMap()));\n\n        final int size = randomIntBetween(100, 1000);\n        final List<Long> sample = new ArrayList<>(size);\n        testCase(aggregationBuilder,\n            new MatchAllDocsQuery(),\n            randomSample(size, point -> {\n                sample.add(point);\n                return singleton(new SortedNumericDocValuesField(FIELD_NAME, point));\n            }),\n            agg -> {\n                assertThat(agg.getMedianAbsoluteDeviation(), closeToRelative(calculateMAD(sample)));\n                assertTrue(AggregationInspectionHelper.hasValue(agg));\n            }, fieldType);\n    }\n","date":"2020-04-14 14:38:04","endLine":229,"groupId":"43998","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testValueScript","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/2a/e30689ad00d8c1289f09845087186e59c260c0.src","preCode":"    public void testValueScript() throws IOException {\n        MappedFieldType fieldType = new NumberFieldMapper.NumberFieldType(NumberFieldMapper.NumberType.LONG);\n        fieldType.setName(FIELD_NAME);\n        fieldType.setHasDocValues(true);\n\n        MedianAbsoluteDeviationAggregationBuilder aggregationBuilder = new MedianAbsoluteDeviationAggregationBuilder(\"foo\")\n            .field(FIELD_NAME)\n            .script(new Script(ScriptType.INLINE, MockScriptEngine.NAME, VALUE_SCRIPT, Collections.emptyMap()));\n\n        final int size = randomIntBetween(100, 1000);\n        final List<Long> sample = new ArrayList<>(size);\n        testCase(aggregationBuilder,\n            new MatchAllDocsQuery(),\n            randomSample(size, point -> {\n                sample.add(point);\n                return singleton(new SortedNumericDocValuesField(FIELD_NAME, point));\n            }),\n            agg -> {\n                assertThat(agg.getMedianAbsoluteDeviation(), closeToRelative(calculateMAD(sample)));\n                assertTrue(AggregationInspectionHelper.hasValue(agg));\n            }, fieldType);\n    }\n","realPath":"server/src/test/java/org/elasticsearch/search/aggregations/metrics/MedianAbsoluteDeviationAggregatorTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":208,"status":"B"}],"commitId":"a862dff26c67744d63076f9d5d8a774ca17e7fe9","commitMessage":"@@@Add tests to MedianAbsoluteDeviationAggregator (#54884)\n\n","date":"2020-04-14 14:38:04","modifiedFileCount":"3","status":"M","submitter":"Christos Soulios"},{"authorTime":"2020-04-29 21:24:07","codes":[{"authorDate":"2020-04-29 21:24:07","commitOrder":4,"curCode":"    public void testSomeMatchesNumericDocValues() throws IOException {\n        final int size = randomIntBetween(100, 1000);\n        final List<Long> sample = new ArrayList<>(size);\n        testAggregation(\n            new DocValuesFieldExistsQuery(FIELD_NAME),\n            randomSample(size, point -> {\n                sample.add(point);\n                return singleton(new NumericDocValuesField(FIELD_NAME, point));\n            }),\n            agg -> {\n                assertThat(agg.getMedianAbsoluteDeviation(), closeToRelative(calculateMAD(sample)));\n                assertTrue(AggregationInspectionHelper.hasValue(agg));\n            }\n        );\n    }\n","date":"2020-04-29 21:24:07","endLine":140,"groupId":"43998","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testSomeMatchesNumericDocValues","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/73/2c52ac32bf272a91d65f4b35e1773cf3eaaa57.src","preCode":"    public void testSomeMatchesNumericDocValues() throws IOException {\n        final int size = randomIntBetween(100, 1000);\n        final List<Long> sample = new ArrayList<>(size);\n        testCase(\n            new DocValuesFieldExistsQuery(FIELD_NAME),\n            randomSample(size, point -> {\n                sample.add(point);\n                return singleton(new NumericDocValuesField(FIELD_NAME, point));\n            }),\n            agg -> {\n                assertThat(agg.getMedianAbsoluteDeviation(), closeToRelative(calculateMAD(sample)));\n                assertTrue(AggregationInspectionHelper.hasValue(agg));\n            }\n        );\n    }\n","realPath":"server/src/test/java/org/elasticsearch/search/aggregations/metrics/MedianAbsoluteDeviationAggregatorTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":126,"status":"M"},{"authorDate":"2020-04-29 21:24:07","commitOrder":4,"curCode":"    public void testValueScript() throws IOException {\n        MappedFieldType fieldType = new NumberFieldMapper.NumberFieldType(NumberFieldMapper.NumberType.LONG);\n        fieldType.setName(FIELD_NAME);\n        fieldType.setHasDocValues(true);\n\n        MedianAbsoluteDeviationAggregationBuilder aggregationBuilder = new MedianAbsoluteDeviationAggregationBuilder(\"foo\")\n            .field(FIELD_NAME)\n            .script(new Script(ScriptType.INLINE, MockScriptEngine.NAME, VALUE_SCRIPT, Collections.emptyMap()));\n\n        final int size = randomIntBetween(100, 1000);\n        final List<Long> sample = new ArrayList<>(size);\n        testAggregation(aggregationBuilder,\n            new MatchAllDocsQuery(),\n            randomSample(size, point -> {\n                sample.add(point);\n                return singleton(new SortedNumericDocValuesField(FIELD_NAME, point));\n            }),\n            agg -> {\n                assertThat(agg.getMedianAbsoluteDeviation(), closeToRelative(calculateMAD(sample)));\n                assertTrue(AggregationInspectionHelper.hasValue(agg));\n            }, fieldType);\n    }\n","date":"2020-04-29 21:24:07","endLine":224,"groupId":"43998","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testValueScript","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/73/2c52ac32bf272a91d65f4b35e1773cf3eaaa57.src","preCode":"    public void testValueScript() throws IOException {\n        MappedFieldType fieldType = new NumberFieldMapper.NumberFieldType(NumberFieldMapper.NumberType.LONG);\n        fieldType.setName(FIELD_NAME);\n        fieldType.setHasDocValues(true);\n\n        MedianAbsoluteDeviationAggregationBuilder aggregationBuilder = new MedianAbsoluteDeviationAggregationBuilder(\"foo\")\n            .field(FIELD_NAME)\n            .script(new Script(ScriptType.INLINE, MockScriptEngine.NAME, VALUE_SCRIPT, Collections.emptyMap()));\n\n        final int size = randomIntBetween(100, 1000);\n        final List<Long> sample = new ArrayList<>(size);\n        testCase(aggregationBuilder,\n            new MatchAllDocsQuery(),\n            randomSample(size, point -> {\n                sample.add(point);\n                return singleton(new SortedNumericDocValuesField(FIELD_NAME, point));\n            }),\n            agg -> {\n                assertThat(agg.getMedianAbsoluteDeviation(), closeToRelative(calculateMAD(sample)));\n                assertTrue(AggregationInspectionHelper.hasValue(agg));\n            }, fieldType);\n    }\n","realPath":"server/src/test/java/org/elasticsearch/search/aggregations/metrics/MedianAbsoluteDeviationAggregatorTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":203,"status":"M"}],"commitId":"ceb6e6227fb48cf6986f1124014df4cbc6f82a40","commitMessage":"@@@Modified searchAndReduce() to return empty agg when no docs exist  (#55826)\n\nModified AggregatorTestCase.searchAndReduce() method so that it returns an empty aggregation result when no documents have been inserted.\n\nAlso refactored several aggregation tests so they do not re-implement method AggregatorTestCase.testCase()\n\nFixes #55824","date":"2020-04-29 21:24:07","modifiedFileCount":"12","status":"M","submitter":"Christos Soulios"},{"authorTime":"2020-06-16 00:47:15","codes":[{"authorDate":"2020-04-29 21:24:07","commitOrder":5,"curCode":"    public void testSomeMatchesNumericDocValues() throws IOException {\n        final int size = randomIntBetween(100, 1000);\n        final List<Long> sample = new ArrayList<>(size);\n        testAggregation(\n            new DocValuesFieldExistsQuery(FIELD_NAME),\n            randomSample(size, point -> {\n                sample.add(point);\n                return singleton(new NumericDocValuesField(FIELD_NAME, point));\n            }),\n            agg -> {\n                assertThat(agg.getMedianAbsoluteDeviation(), closeToRelative(calculateMAD(sample)));\n                assertTrue(AggregationInspectionHelper.hasValue(agg));\n            }\n        );\n    }\n","date":"2020-04-29 21:24:07","endLine":140,"groupId":"105419","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testSomeMatchesNumericDocValues","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/73/2c52ac32bf272a91d65f4b35e1773cf3eaaa57.src","preCode":"    public void testSomeMatchesNumericDocValues() throws IOException {\n        final int size = randomIntBetween(100, 1000);\n        final List<Long> sample = new ArrayList<>(size);\n        testAggregation(\n            new DocValuesFieldExistsQuery(FIELD_NAME),\n            randomSample(size, point -> {\n                sample.add(point);\n                return singleton(new NumericDocValuesField(FIELD_NAME, point));\n            }),\n            agg -> {\n                assertThat(agg.getMedianAbsoluteDeviation(), closeToRelative(calculateMAD(sample)));\n                assertTrue(AggregationInspectionHelper.hasValue(agg));\n            }\n        );\n    }\n","realPath":"server/src/test/java/org/elasticsearch/search/aggregations/metrics/MedianAbsoluteDeviationAggregatorTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":126,"status":"N"},{"authorDate":"2020-06-16 00:47:15","commitOrder":5,"curCode":"    public void testValueScript() throws IOException {\n        MappedFieldType fieldType\n            = new NumberFieldMapper.NumberFieldType(FIELD_NAME, NumberFieldMapper.NumberType.LONG);\n\n        MedianAbsoluteDeviationAggregationBuilder aggregationBuilder = new MedianAbsoluteDeviationAggregationBuilder(\"foo\")\n            .field(FIELD_NAME)\n            .script(new Script(ScriptType.INLINE, MockScriptEngine.NAME, VALUE_SCRIPT, Collections.emptyMap()));\n\n        final int size = randomIntBetween(100, 1000);\n        final List<Long> sample = new ArrayList<>(size);\n        testAggregation(aggregationBuilder,\n            new MatchAllDocsQuery(),\n            randomSample(size, point -> {\n                sample.add(point);\n                return singleton(new SortedNumericDocValuesField(FIELD_NAME, point));\n            }),\n            agg -> {\n                assertThat(agg.getMedianAbsoluteDeviation(), closeToRelative(calculateMAD(sample)));\n                assertTrue(AggregationInspectionHelper.hasValue(agg));\n            }, fieldType);\n    }\n","date":"2020-06-16 00:47:15","endLine":223,"groupId":"105419","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testValueScript","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/0a/14ebfdd7102d235f5c708959929bf863fbb211.src","preCode":"    public void testValueScript() throws IOException {\n        MappedFieldType fieldType = new NumberFieldMapper.NumberFieldType(NumberFieldMapper.NumberType.LONG);\n        fieldType.setName(FIELD_NAME);\n        fieldType.setHasDocValues(true);\n\n        MedianAbsoluteDeviationAggregationBuilder aggregationBuilder = new MedianAbsoluteDeviationAggregationBuilder(\"foo\")\n            .field(FIELD_NAME)\n            .script(new Script(ScriptType.INLINE, MockScriptEngine.NAME, VALUE_SCRIPT, Collections.emptyMap()));\n\n        final int size = randomIntBetween(100, 1000);\n        final List<Long> sample = new ArrayList<>(size);\n        testAggregation(aggregationBuilder,\n            new MatchAllDocsQuery(),\n            randomSample(size, point -> {\n                sample.add(point);\n                return singleton(new SortedNumericDocValuesField(FIELD_NAME, point));\n            }),\n            agg -> {\n                assertThat(agg.getMedianAbsoluteDeviation(), closeToRelative(calculateMAD(sample)));\n                assertTrue(AggregationInspectionHelper.hasValue(agg));\n            }, fieldType);\n    }\n","realPath":"server/src/test/java/org/elasticsearch/search/aggregations/metrics/MedianAbsoluteDeviationAggregatorTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":203,"status":"M"}],"commitId":"3b696828ada5953bb1669b972a353736383edf08","commitMessage":"@@@MappedFieldType should not extend FieldType (#57666)\n\nMappedFieldType is a combination of two concerns:\n\n* an extension of lucene's FieldType.  defining how a field should be indexed\n* a set of query factory methods.  defining how a field should be searched\n\nWe want to break these two concerns apart. This commit is a first step to doing this.  breaking\nthe inheritance relationship between MappedFieldType and FieldType. MappedFieldType \ninstead has a series of boolean flags defining whether or not the field is searchable or \naggregatable.  and FieldMapper has a separate FieldType passed to its constructor defining \nhow indexing should be done.\n\nRelates to #56814","date":"2020-06-16 00:47:15","modifiedFileCount":"257","status":"M","submitter":"Alan Woodward"}]
