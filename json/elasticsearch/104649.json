[{"authorTime":"2019-09-25 15:29:46","codes":[{"authorDate":"2019-09-25 15:29:46","commitOrder":1,"curCode":"    public void testFilteringAliases() throws Exception {\n        IndexMetaData indexMetaData = baseMetaData;\n        indexMetaData = add(indexMetaData, \"cats\", filter(termQuery(\"animal\", \"cat\")));\n        indexMetaData = add(indexMetaData, \"dogs\", filter(termQuery(\"animal\", \"dog\")));\n        indexMetaData = add(indexMetaData, \"all\", null);\n\n        assertThat(indexMetaData.getAliases().containsKey(\"cats\"), equalTo(true));\n        assertThat(indexMetaData.getAliases().containsKey(\"dogs\"), equalTo(true));\n        assertThat(indexMetaData.getAliases().containsKey(\"turtles\"), equalTo(false));\n\n        assertEquals(aliasFilter(indexMetaData, \"cats\"), QueryBuilders.termQuery(\"animal\", \"cat\"));\n        assertEquals(aliasFilter(indexMetaData, \"cats\", \"dogs\"), QueryBuilders.boolQuery().should(QueryBuilders.termQuery(\"animal\", \"cat\"))\n            .should(QueryBuilders.termQuery(\"animal\", \"dog\")));\n\n        \r\n        assertThat(aliasFilter(indexMetaData,\"all\"), nullValue());\n        assertThat(aliasFilter(indexMetaData, \"cats\", \"all\"), nullValue());\n        assertThat(aliasFilter(indexMetaData, \"all\", \"cats\"), nullValue());\n\n        indexMetaData = add(indexMetaData, \"cats\", filter(termQuery(\"animal\", \"feline\")));\n        indexMetaData = add(indexMetaData, \"dogs\", filter(termQuery(\"animal\", \"canine\")));\n        assertEquals(aliasFilter(indexMetaData, \"dogs\", \"cats\"),QueryBuilders.boolQuery()\n            .should(QueryBuilders.termQuery(\"animal\", \"canine\"))\n            .should(QueryBuilders.termQuery(\"animal\", \"feline\")));\n    }\n","date":"2019-09-25 15:29:46","endLine":120,"groupId":"49291","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testFilteringAliases","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/c9/13bbe4b9a37c19cdf01c2680cc02895d263aaf.src","preCode":"    public void testFilteringAliases() throws Exception {\n        IndexMetaData indexMetaData = baseMetaData;\n        indexMetaData = add(indexMetaData, \"cats\", filter(termQuery(\"animal\", \"cat\")));\n        indexMetaData = add(indexMetaData, \"dogs\", filter(termQuery(\"animal\", \"dog\")));\n        indexMetaData = add(indexMetaData, \"all\", null);\n\n        assertThat(indexMetaData.getAliases().containsKey(\"cats\"), equalTo(true));\n        assertThat(indexMetaData.getAliases().containsKey(\"dogs\"), equalTo(true));\n        assertThat(indexMetaData.getAliases().containsKey(\"turtles\"), equalTo(false));\n\n        assertEquals(aliasFilter(indexMetaData, \"cats\"), QueryBuilders.termQuery(\"animal\", \"cat\"));\n        assertEquals(aliasFilter(indexMetaData, \"cats\", \"dogs\"), QueryBuilders.boolQuery().should(QueryBuilders.termQuery(\"animal\", \"cat\"))\n            .should(QueryBuilders.termQuery(\"animal\", \"dog\")));\n\n        \r\n        assertThat(aliasFilter(indexMetaData,\"all\"), nullValue());\n        assertThat(aliasFilter(indexMetaData, \"cats\", \"all\"), nullValue());\n        assertThat(aliasFilter(indexMetaData, \"all\", \"cats\"), nullValue());\n\n        indexMetaData = add(indexMetaData, \"cats\", filter(termQuery(\"animal\", \"feline\")));\n        indexMetaData = add(indexMetaData, \"dogs\", filter(termQuery(\"animal\", \"canine\")));\n        assertEquals(aliasFilter(indexMetaData, \"dogs\", \"cats\"),QueryBuilders.boolQuery()\n            .should(QueryBuilders.termQuery(\"animal\", \"canine\"))\n            .should(QueryBuilders.termQuery(\"animal\", \"feline\")));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/search/internal/ShardSearchRequestTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":96,"status":"B"},{"authorDate":"2019-09-25 15:29:46","commitOrder":1,"curCode":"    public void testUnknownAliasFilter() throws Exception {\n        IndexMetaData indexMetaData = baseMetaData;\n        indexMetaData = add(indexMetaData, \"cats\", filter(termQuery(\"animal\", \"cat\")));\n        indexMetaData = add(indexMetaData, \"dogs\", filter(termQuery(\"animal\", \"dog\")));\n        IndexMetaData finalIndexMetadata = indexMetaData;\n        expectThrows(InvalidAliasNameException.class, () -> aliasFilter(finalIndexMetadata, \"unknown\"));\n    }\n","date":"2019-09-25 15:29:46","endLine":140,"groupId":"49293","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testUnknownAliasFilter","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/c9/13bbe4b9a37c19cdf01c2680cc02895d263aaf.src","preCode":"    public void testUnknownAliasFilter() throws Exception {\n        IndexMetaData indexMetaData = baseMetaData;\n        indexMetaData = add(indexMetaData, \"cats\", filter(termQuery(\"animal\", \"cat\")));\n        indexMetaData = add(indexMetaData, \"dogs\", filter(termQuery(\"animal\", \"dog\")));\n        IndexMetaData finalIndexMetadata = indexMetaData;\n        expectThrows(InvalidAliasNameException.class, () -> aliasFilter(finalIndexMetadata, \"unknown\"));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/search/internal/ShardSearchRequestTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":134,"status":"B"}],"commitId":"7a0fdfa6a780f6156bc8e43f1263eab23f8c3160","commitMessage":"@@@Merge ShardSearchTransportRequest and ShardSearchLocalRequest (#46996)\n\nThis change merges the `ShardSearchTransportRequest` and `ShardSearchLocalRequest`\ninto a single `ShardSearchRequest` that can be used to create a SearchContext.\n\nRelates #46523\n","date":"2019-09-25 15:29:46","modifiedFileCount":"15","status":"B","submitter":"Jim Ferenczi"},{"authorTime":"2020-04-01 03:52:01","codes":[{"authorDate":"2020-04-01 03:52:01","commitOrder":2,"curCode":"    public void testFilteringAliases() throws Exception {\n        IndexMetadata indexMetadata = baseMetadata;\n        indexMetadata = add(indexMetadata, \"cats\", filter(termQuery(\"animal\", \"cat\")));\n        indexMetadata = add(indexMetadata, \"dogs\", filter(termQuery(\"animal\", \"dog\")));\n        indexMetadata = add(indexMetadata, \"all\", null);\n\n        assertThat(indexMetadata.getAliases().containsKey(\"cats\"), equalTo(true));\n        assertThat(indexMetadata.getAliases().containsKey(\"dogs\"), equalTo(true));\n        assertThat(indexMetadata.getAliases().containsKey(\"turtles\"), equalTo(false));\n\n        assertEquals(aliasFilter(indexMetadata, \"cats\"), QueryBuilders.termQuery(\"animal\", \"cat\"));\n        assertEquals(aliasFilter(indexMetadata, \"cats\", \"dogs\"), QueryBuilders.boolQuery().should(QueryBuilders.termQuery(\"animal\", \"cat\"))\n            .should(QueryBuilders.termQuery(\"animal\", \"dog\")));\n\n        \r\n        assertThat(aliasFilter(indexMetadata,\"all\"), nullValue());\n        assertThat(aliasFilter(indexMetadata, \"cats\", \"all\"), nullValue());\n        assertThat(aliasFilter(indexMetadata, \"all\", \"cats\"), nullValue());\n\n        indexMetadata = add(indexMetadata, \"cats\", filter(termQuery(\"animal\", \"feline\")));\n        indexMetadata = add(indexMetadata, \"dogs\", filter(termQuery(\"animal\", \"canine\")));\n        assertEquals(aliasFilter(indexMetadata, \"dogs\", \"cats\"),QueryBuilders.boolQuery()\n            .should(QueryBuilders.termQuery(\"animal\", \"canine\"))\n            .should(QueryBuilders.termQuery(\"animal\", \"feline\")));\n    }\n","date":"2020-04-01 03:52:01","endLine":118,"groupId":"49291","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testFilteringAliases","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/f3/271e69f408b264a8ba7558a2f11f8ee81adaa3.src","preCode":"    public void testFilteringAliases() throws Exception {\n        IndexMetaData indexMetaData = baseMetaData;\n        indexMetaData = add(indexMetaData, \"cats\", filter(termQuery(\"animal\", \"cat\")));\n        indexMetaData = add(indexMetaData, \"dogs\", filter(termQuery(\"animal\", \"dog\")));\n        indexMetaData = add(indexMetaData, \"all\", null);\n\n        assertThat(indexMetaData.getAliases().containsKey(\"cats\"), equalTo(true));\n        assertThat(indexMetaData.getAliases().containsKey(\"dogs\"), equalTo(true));\n        assertThat(indexMetaData.getAliases().containsKey(\"turtles\"), equalTo(false));\n\n        assertEquals(aliasFilter(indexMetaData, \"cats\"), QueryBuilders.termQuery(\"animal\", \"cat\"));\n        assertEquals(aliasFilter(indexMetaData, \"cats\", \"dogs\"), QueryBuilders.boolQuery().should(QueryBuilders.termQuery(\"animal\", \"cat\"))\n            .should(QueryBuilders.termQuery(\"animal\", \"dog\")));\n\n        \r\n        assertThat(aliasFilter(indexMetaData,\"all\"), nullValue());\n        assertThat(aliasFilter(indexMetaData, \"cats\", \"all\"), nullValue());\n        assertThat(aliasFilter(indexMetaData, \"all\", \"cats\"), nullValue());\n\n        indexMetaData = add(indexMetaData, \"cats\", filter(termQuery(\"animal\", \"feline\")));\n        indexMetaData = add(indexMetaData, \"dogs\", filter(termQuery(\"animal\", \"canine\")));\n        assertEquals(aliasFilter(indexMetaData, \"dogs\", \"cats\"),QueryBuilders.boolQuery()\n            .should(QueryBuilders.termQuery(\"animal\", \"canine\"))\n            .should(QueryBuilders.termQuery(\"animal\", \"feline\")));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/search/internal/ShardSearchRequestTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":94,"status":"M"},{"authorDate":"2020-04-01 03:52:01","commitOrder":2,"curCode":"    public void testUnknownAliasFilter() throws Exception {\n        IndexMetadata indexMetadata = baseMetadata;\n        indexMetadata = add(indexMetadata, \"cats\", filter(termQuery(\"animal\", \"cat\")));\n        indexMetadata = add(indexMetadata, \"dogs\", filter(termQuery(\"animal\", \"dog\")));\n        IndexMetadata finalIndexMetadata = indexMetadata;\n        expectThrows(InvalidAliasNameException.class, () -> aliasFilter(finalIndexMetadata, \"unknown\"));\n    }\n","date":"2020-04-01 03:52:01","endLine":138,"groupId":"49293","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testUnknownAliasFilter","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/f3/271e69f408b264a8ba7558a2f11f8ee81adaa3.src","preCode":"    public void testUnknownAliasFilter() throws Exception {\n        IndexMetaData indexMetaData = baseMetaData;\n        indexMetaData = add(indexMetaData, \"cats\", filter(termQuery(\"animal\", \"cat\")));\n        indexMetaData = add(indexMetaData, \"dogs\", filter(termQuery(\"animal\", \"dog\")));\n        IndexMetaData finalIndexMetadata = indexMetaData;\n        expectThrows(InvalidAliasNameException.class, () -> aliasFilter(finalIndexMetadata, \"unknown\"));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/search/internal/ShardSearchRequestTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":132,"status":"M"}],"commitId":"95a7eed9aa35f47b228e402508709b5bd6703cf4","commitMessage":"@@@Rename MetaData to Metadata in all of the places (#54519)\n\nThis is a simple naming change PR.  to fix the fact that \"metadata\" is a\nsingle English word.  and for too long we have not followed general\nnaming conventions for it. We are also not consistent about it.  for\nexample.  METADATA instead of META_DATA if we were trying to be\nconsistent with MetaData (although METADATA is correct when considered\nin the context of \"metadata\"). This was a simple find and replace across\nthe code base.  only taking a few minutes to fix this naming issue\nforever.","date":"2020-04-01 03:52:01","modifiedFileCount":"1712","status":"M","submitter":"Jason Tedor"},{"authorTime":"2020-09-08 19:40:29","codes":[{"authorDate":"2020-09-08 19:40:29","commitOrder":3,"curCode":"    public void testFilteringAliases() throws Exception {\n        IndexMetadata indexMetadata = BASE_METADATA;\n        indexMetadata = add(indexMetadata, \"cats\", filter(termQuery(\"animal\", \"cat\")));\n        indexMetadata = add(indexMetadata, \"dogs\", filter(termQuery(\"animal\", \"dog\")));\n        indexMetadata = add(indexMetadata, \"all\", null);\n\n        assertThat(indexMetadata.getAliases().containsKey(\"cats\"), equalTo(true));\n        assertThat(indexMetadata.getAliases().containsKey(\"dogs\"), equalTo(true));\n        assertThat(indexMetadata.getAliases().containsKey(\"turtles\"), equalTo(false));\n\n        assertEquals(aliasFilter(indexMetadata, \"cats\"), QueryBuilders.termQuery(\"animal\", \"cat\"));\n        assertEquals(aliasFilter(indexMetadata, \"cats\", \"dogs\"), QueryBuilders.boolQuery().should(QueryBuilders.termQuery(\"animal\", \"cat\"))\n            .should(QueryBuilders.termQuery(\"animal\", \"dog\")));\n\n        \r\n        assertThat(aliasFilter(indexMetadata,\"all\"), nullValue());\n        assertThat(aliasFilter(indexMetadata, \"cats\", \"all\"), nullValue());\n        assertThat(aliasFilter(indexMetadata, \"all\", \"cats\"), nullValue());\n\n        indexMetadata = add(indexMetadata, \"cats\", filter(termQuery(\"animal\", \"feline\")));\n        indexMetadata = add(indexMetadata, \"dogs\", filter(termQuery(\"animal\", \"canine\")));\n        assertEquals(aliasFilter(indexMetadata, \"dogs\", \"cats\"),QueryBuilders.boolQuery()\n            .should(QueryBuilders.termQuery(\"animal\", \"canine\"))\n            .should(QueryBuilders.termQuery(\"animal\", \"feline\")));\n    }\n","date":"2020-09-08 19:40:29","endLine":118,"groupId":"104649","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testFilteringAliases","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/ff/7450a5d9ae5e3474de3c7526e7887fcbca50e4.src","preCode":"    public void testFilteringAliases() throws Exception {\n        IndexMetadata indexMetadata = baseMetadata;\n        indexMetadata = add(indexMetadata, \"cats\", filter(termQuery(\"animal\", \"cat\")));\n        indexMetadata = add(indexMetadata, \"dogs\", filter(termQuery(\"animal\", \"dog\")));\n        indexMetadata = add(indexMetadata, \"all\", null);\n\n        assertThat(indexMetadata.getAliases().containsKey(\"cats\"), equalTo(true));\n        assertThat(indexMetadata.getAliases().containsKey(\"dogs\"), equalTo(true));\n        assertThat(indexMetadata.getAliases().containsKey(\"turtles\"), equalTo(false));\n\n        assertEquals(aliasFilter(indexMetadata, \"cats\"), QueryBuilders.termQuery(\"animal\", \"cat\"));\n        assertEquals(aliasFilter(indexMetadata, \"cats\", \"dogs\"), QueryBuilders.boolQuery().should(QueryBuilders.termQuery(\"animal\", \"cat\"))\n            .should(QueryBuilders.termQuery(\"animal\", \"dog\")));\n\n        \r\n        assertThat(aliasFilter(indexMetadata,\"all\"), nullValue());\n        assertThat(aliasFilter(indexMetadata, \"cats\", \"all\"), nullValue());\n        assertThat(aliasFilter(indexMetadata, \"all\", \"cats\"), nullValue());\n\n        indexMetadata = add(indexMetadata, \"cats\", filter(termQuery(\"animal\", \"feline\")));\n        indexMetadata = add(indexMetadata, \"dogs\", filter(termQuery(\"animal\", \"canine\")));\n        assertEquals(aliasFilter(indexMetadata, \"dogs\", \"cats\"),QueryBuilders.boolQuery()\n            .should(QueryBuilders.termQuery(\"animal\", \"canine\"))\n            .should(QueryBuilders.termQuery(\"animal\", \"feline\")));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/search/internal/ShardSearchRequestTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":94,"status":"M"},{"authorDate":"2020-09-08 19:40:29","commitOrder":3,"curCode":"    public void testUnknownAliasFilter() throws Exception {\n        IndexMetadata indexMetadata = BASE_METADATA;\n        indexMetadata = add(indexMetadata, \"cats\", filter(termQuery(\"animal\", \"cat\")));\n        indexMetadata = add(indexMetadata, \"dogs\", filter(termQuery(\"animal\", \"dog\")));\n        IndexMetadata finalIndexMetadata = indexMetadata;\n        expectThrows(InvalidAliasNameException.class, () -> aliasFilter(finalIndexMetadata, \"unknown\"));\n    }\n","date":"2020-09-08 19:40:29","endLine":138,"groupId":"104649","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testUnknownAliasFilter","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/ff/7450a5d9ae5e3474de3c7526e7887fcbca50e4.src","preCode":"    public void testUnknownAliasFilter() throws Exception {\n        IndexMetadata indexMetadata = baseMetadata;\n        indexMetadata = add(indexMetadata, \"cats\", filter(termQuery(\"animal\", \"cat\")));\n        indexMetadata = add(indexMetadata, \"dogs\", filter(termQuery(\"animal\", \"dog\")));\n        IndexMetadata finalIndexMetadata = indexMetadata;\n        expectThrows(InvalidAliasNameException.class, () -> aliasFilter(finalIndexMetadata, \"unknown\"));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/search/internal/ShardSearchRequestTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":132,"status":"M"}],"commitId":"28b89b4265ee7473e44ed97a660ca1d548317e36","commitMessage":"@@@Fix point in time toXContent impl (#62080)\n\nPointInTimeBuilder is a ToXContentObject yet it does not print out a whole object (it is rather a fragment). Also.  when it is printed out as part of SearchSourceBuilder.  an error is thrown because pit should be wrapped into its own object.\n\nThis commit fixes this and adds tests for it.","date":"2020-09-08 19:40:29","modifiedFileCount":"4","status":"M","submitter":"Luca Cavanna"}]
