[{"authorTime":"2020-06-06 04:13:33","codes":[{"authorDate":"2020-06-06 04:13:33","commitOrder":1,"curCode":"    public void testSetMetadataIfSeqNo() throws Exception {\n        long ifSeqNo = randomNonNegativeLong();\n        Processor processor = createSetProcessor(Metadata.IF_SEQ_NO.getFieldName(), ifSeqNo, true);\n        IngestDocument ingestDocument = RandomDocumentPicks.randomIngestDocument(random());\n        processor.execute(ingestDocument);\n        assertThat(ingestDocument.getFieldValue(Metadata.IF_SEQ_NO.getFieldName(), Long.class), Matchers.equalTo(ifSeqNo));\n    }\n","date":"2020-06-06 04:13:33","endLine":133,"groupId":"72409","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testSetMetadataIfSeqNo","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/cc/f4c90340deacb2a6eb571dc810f2adc55e9280.src","preCode":"    public void testSetMetadataIfSeqNo() throws Exception {\n        long ifSeqNo = randomNonNegativeLong();\n        Processor processor = createSetProcessor(Metadata.IF_SEQ_NO.getFieldName(), ifSeqNo, true);\n        IngestDocument ingestDocument = RandomDocumentPicks.randomIngestDocument(random());\n        processor.execute(ingestDocument);\n        assertThat(ingestDocument.getFieldValue(Metadata.IF_SEQ_NO.getFieldName(), Long.class), Matchers.equalTo(ifSeqNo));\n    }\n","realPath":"modules/ingest-common/src/test/java/org/elasticsearch/ingest/common/SetProcessorTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":127,"status":"B"},{"authorDate":"2020-06-06 04:13:33","commitOrder":1,"curCode":"    public void testSetMetadataIfPrimaryTerm() throws Exception {\n        long ifPrimaryTerm = randomNonNegativeLong();\n        Processor processor = createSetProcessor(Metadata.IF_PRIMARY_TERM.getFieldName(), ifPrimaryTerm, true);\n        IngestDocument ingestDocument = RandomDocumentPicks.randomIngestDocument(random());\n        processor.execute(ingestDocument);\n        assertThat(ingestDocument.getFieldValue(Metadata.IF_PRIMARY_TERM.getFieldName(), Long.class), Matchers.equalTo(ifPrimaryTerm));\n    }\n","date":"2020-06-06 04:13:33","endLine":141,"groupId":"72409","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testSetMetadataIfPrimaryTerm","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/cc/f4c90340deacb2a6eb571dc810f2adc55e9280.src","preCode":"    public void testSetMetadataIfPrimaryTerm() throws Exception {\n        long ifPrimaryTerm = randomNonNegativeLong();\n        Processor processor = createSetProcessor(Metadata.IF_PRIMARY_TERM.getFieldName(), ifPrimaryTerm, true);\n        IngestDocument ingestDocument = RandomDocumentPicks.randomIngestDocument(random());\n        processor.execute(ingestDocument);\n        assertThat(ingestDocument.getFieldValue(Metadata.IF_PRIMARY_TERM.getFieldName(), Long.class), Matchers.equalTo(ifPrimaryTerm));\n    }\n","realPath":"modules/ingest-common/src/test/java/org/elasticsearch/ingest/common/SetProcessorTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":135,"status":"B"}],"commitId":"7c0b99634c875de86afd06eaa9732ca350725665","commitMessage":"@@@Support `if_seq_no` and `if_primary_term` for ingest (#55430)\n\nAllow for optimistic concurrency control during ingest by checking the\nsequence number and primary term. This is accomplished by defining\n`_if_seq_no` and `_if_primary_term` in the pipeline.  similarly to `_version`\nand `_version_type`.\n\nCloses #41255\n","date":"2020-06-06 04:13:33","modifiedFileCount":"6","status":"B","submitter":"Maria Ralli"},{"authorTime":"2020-06-15 20:26:57","codes":[{"authorDate":"2020-06-15 20:26:57","commitOrder":2,"curCode":"    public void testSetMetadataIfSeqNo() throws Exception {\n        long ifSeqNo = randomNonNegativeLong();\n        Processor processor = createSetProcessor(Metadata.IF_SEQ_NO.getFieldName(), ifSeqNo, true, false);\n        IngestDocument ingestDocument = RandomDocumentPicks.randomIngestDocument(random());\n        processor.execute(ingestDocument);\n        assertThat(ingestDocument.getFieldValue(Metadata.IF_SEQ_NO.getFieldName(), Long.class), Matchers.equalTo(ifSeqNo));\n    }\n","date":"2020-06-15 20:26:57","endLine":133,"groupId":"72409","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testSetMetadataIfSeqNo","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/0c/f271a710dfa26fb273cb34148e616008f01aed.src","preCode":"    public void testSetMetadataIfSeqNo() throws Exception {\n        long ifSeqNo = randomNonNegativeLong();\n        Processor processor = createSetProcessor(Metadata.IF_SEQ_NO.getFieldName(), ifSeqNo, true);\n        IngestDocument ingestDocument = RandomDocumentPicks.randomIngestDocument(random());\n        processor.execute(ingestDocument);\n        assertThat(ingestDocument.getFieldValue(Metadata.IF_SEQ_NO.getFieldName(), Long.class), Matchers.equalTo(ifSeqNo));\n    }\n","realPath":"modules/ingest-common/src/test/java/org/elasticsearch/ingest/common/SetProcessorTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":127,"status":"M"},{"authorDate":"2020-06-15 20:26:57","commitOrder":2,"curCode":"    public void testSetMetadataIfPrimaryTerm() throws Exception {\n        long ifPrimaryTerm = randomNonNegativeLong();\n        Processor processor = createSetProcessor(Metadata.IF_PRIMARY_TERM.getFieldName(), ifPrimaryTerm, true, false);\n        IngestDocument ingestDocument = RandomDocumentPicks.randomIngestDocument(random());\n        processor.execute(ingestDocument);\n        assertThat(ingestDocument.getFieldValue(Metadata.IF_PRIMARY_TERM.getFieldName(), Long.class), Matchers.equalTo(ifPrimaryTerm));\n    }\n","date":"2020-06-15 20:26:57","endLine":141,"groupId":"72409","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testSetMetadataIfPrimaryTerm","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/0c/f271a710dfa26fb273cb34148e616008f01aed.src","preCode":"    public void testSetMetadataIfPrimaryTerm() throws Exception {\n        long ifPrimaryTerm = randomNonNegativeLong();\n        Processor processor = createSetProcessor(Metadata.IF_PRIMARY_TERM.getFieldName(), ifPrimaryTerm, true);\n        IngestDocument ingestDocument = RandomDocumentPicks.randomIngestDocument(random());\n        processor.execute(ingestDocument);\n        assertThat(ingestDocument.getFieldValue(Metadata.IF_PRIMARY_TERM.getFieldName(), Long.class), Matchers.equalTo(ifPrimaryTerm));\n    }\n","realPath":"modules/ingest-common/src/test/java/org/elasticsearch/ingest/common/SetProcessorTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":135,"status":"M"}],"commitId":"efc4c9a2107e7a892ba881dc2ce7bdc2cd7136e7","commitMessage":"@@@Add ignore_empty_value parameter in set ingest processor (#57030)\n\n","date":"2020-06-15 20:26:57","modifiedFileCount":"3","status":"M","submitter":"bellengao"},{"authorTime":"2020-11-03 00:40:05","codes":[{"authorDate":"2020-11-03 00:40:05","commitOrder":3,"curCode":"    public void testSetMetadataIfSeqNo() throws Exception {\n        long ifSeqNo = randomNonNegativeLong();\n        Processor processor = createSetProcessor(Metadata.IF_SEQ_NO.getFieldName(), ifSeqNo, null, true, false);\n        IngestDocument ingestDocument = RandomDocumentPicks.randomIngestDocument(random());\n        processor.execute(ingestDocument);\n        assertThat(ingestDocument.getFieldValue(Metadata.IF_SEQ_NO.getFieldName(), Long.class), Matchers.equalTo(ifSeqNo));\n    }\n","date":"2020-11-03 00:40:05","endLine":134,"groupId":"10368","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testSetMetadataIfSeqNo","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/7b/1cdfc7f192f7637967895b3438bef1b0da56c2.src","preCode":"    public void testSetMetadataIfSeqNo() throws Exception {\n        long ifSeqNo = randomNonNegativeLong();\n        Processor processor = createSetProcessor(Metadata.IF_SEQ_NO.getFieldName(), ifSeqNo, true, false);\n        IngestDocument ingestDocument = RandomDocumentPicks.randomIngestDocument(random());\n        processor.execute(ingestDocument);\n        assertThat(ingestDocument.getFieldValue(Metadata.IF_SEQ_NO.getFieldName(), Long.class), Matchers.equalTo(ifSeqNo));\n    }\n","realPath":"modules/ingest-common/src/test/java/org/elasticsearch/ingest/common/SetProcessorTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":128,"status":"M"},{"authorDate":"2020-11-03 00:40:05","commitOrder":3,"curCode":"    public void testSetMetadataIfPrimaryTerm() throws Exception {\n        long ifPrimaryTerm = randomNonNegativeLong();\n        Processor processor = createSetProcessor(Metadata.IF_PRIMARY_TERM.getFieldName(), ifPrimaryTerm, null, true, false);\n        IngestDocument ingestDocument = RandomDocumentPicks.randomIngestDocument(random());\n        processor.execute(ingestDocument);\n        assertThat(ingestDocument.getFieldValue(Metadata.IF_PRIMARY_TERM.getFieldName(), Long.class), Matchers.equalTo(ifPrimaryTerm));\n    }\n","date":"2020-11-03 00:40:05","endLine":142,"groupId":"10368","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testSetMetadataIfPrimaryTerm","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/7b/1cdfc7f192f7637967895b3438bef1b0da56c2.src","preCode":"    public void testSetMetadataIfPrimaryTerm() throws Exception {\n        long ifPrimaryTerm = randomNonNegativeLong();\n        Processor processor = createSetProcessor(Metadata.IF_PRIMARY_TERM.getFieldName(), ifPrimaryTerm, true, false);\n        IngestDocument ingestDocument = RandomDocumentPicks.randomIngestDocument(random());\n        processor.execute(ingestDocument);\n        assertThat(ingestDocument.getFieldValue(Metadata.IF_PRIMARY_TERM.getFieldName(), Long.class), Matchers.equalTo(ifPrimaryTerm));\n    }\n","realPath":"modules/ingest-common/src/test/java/org/elasticsearch/ingest/common/SetProcessorTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":136,"status":"M"}],"commitId":"b17ce85f13223aedb7d0c3a51a500e7e88eafd36","commitMessage":"@@@Add copy_from parameter for set ingest processor (#63540)\n\n","date":"2020-11-03 00:40:05","modifiedFileCount":"5","status":"M","submitter":"bellengao"}]
