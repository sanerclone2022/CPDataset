[{"authorTime":"2019-01-31 15:06:05","codes":[{"authorDate":"2019-01-31 15:06:05","commitOrder":1,"curCode":"    public void testClientFailsWithUntrustedCertificate() throws IOException {\n        final List<Thread> threads = new ArrayList<>();\n        final Settings settings = Settings.builder()\n            .put(\"path.home\", createTempDir())\n            .build();\n        final Environment environment = TestEnvironment.newEnvironment(settings);\n        final ReindexSslConfig ssl = new ReindexSslConfig(settings, environment, mock(ResourceWatcherService.class));\n        try (RestClient client = TransportReindexAction.buildRestClient(getRemoteInfo(), ssl, 1L, threads)) {\n            expectThrows(SSLHandshakeException.class, () -> client.performRequest(new Request(\"GET\", \"/\")));\n        }\n    }\n","date":"2019-01-31 15:06:05","endLine":129,"groupId":"21573","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testClientFailsWithUntrustedCertificate","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/f7/1d12498669904e376258c3b8feb3ec62e41c65.src","preCode":"    public void testClientFailsWithUntrustedCertificate() throws IOException {\n        final List<Thread> threads = new ArrayList<>();\n        final Settings settings = Settings.builder()\n            .put(\"path.home\", createTempDir())\n            .build();\n        final Environment environment = TestEnvironment.newEnvironment(settings);\n        final ReindexSslConfig ssl = new ReindexSslConfig(settings, environment, mock(ResourceWatcherService.class));\n        try (RestClient client = TransportReindexAction.buildRestClient(getRemoteInfo(), ssl, 1L, threads)) {\n            expectThrows(SSLHandshakeException.class, () -> client.performRequest(new Request(\"GET\", \"/\")));\n        }\n    }\n","realPath":"modules/reindex/src/test/java/org/elasticsearch/index/reindex/ReindexRestClientSslTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":119,"status":"B"},{"authorDate":"2019-01-31 15:06:05","commitOrder":1,"curCode":"    public void testClientSucceedsWithVerificationDisabled() throws IOException {\n        assertFalse(\"Cannot disable verification in FIPS JVM\", inFipsJvm());\n        final List<Thread> threads = new ArrayList<>();\n        final Settings settings = Settings.builder()\n            .put(\"path.home\", createTempDir())\n            .put(\"reindex.ssl.verification_mode\", \"NONE\")\n            .build();\n        final Environment environment = TestEnvironment.newEnvironment(settings);\n        final ReindexSslConfig ssl = new ReindexSslConfig(settings, environment, mock(ResourceWatcherService.class));\n        try (RestClient client = TransportReindexAction.buildRestClient(getRemoteInfo(), ssl, 1L, threads)) {\n            final Response response = client.performRequest(new Request(\"GET\", \"/\"));\n            assertThat(response.getStatusLine().getStatusCode(), Matchers.is(200));\n        }\n    }\n","date":"2019-01-31 15:06:05","endLine":159,"groupId":"21577","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testClientSucceedsWithVerificationDisabled","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/f7/1d12498669904e376258c3b8feb3ec62e41c65.src","preCode":"    public void testClientSucceedsWithVerificationDisabled() throws IOException {\n        assertFalse(\"Cannot disable verification in FIPS JVM\", inFipsJvm());\n        final List<Thread> threads = new ArrayList<>();\n        final Settings settings = Settings.builder()\n            .put(\"path.home\", createTempDir())\n            .put(\"reindex.ssl.verification_mode\", \"NONE\")\n            .build();\n        final Environment environment = TestEnvironment.newEnvironment(settings);\n        final ReindexSslConfig ssl = new ReindexSslConfig(settings, environment, mock(ResourceWatcherService.class));\n        try (RestClient client = TransportReindexAction.buildRestClient(getRemoteInfo(), ssl, 1L, threads)) {\n            final Response response = client.performRequest(new Request(\"GET\", \"/\"));\n            assertThat(response.getStatusLine().getStatusCode(), Matchers.is(200));\n        }\n    }\n","realPath":"modules/reindex/src/test/java/org/elasticsearch/index/reindex/ReindexRestClientSslTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":146,"status":"B"}],"commitId":"a8596de31fff2372fadd3f48dd97c6d674f2eb58","commitMessage":"@@@Introduce ssl settings to reindex from remote (#37527)\n\nAdds reindex.ssl.* settings for reindex from remote.\n\nThis uses the ssl-config/ internal library to parse and load SSL\nconfiguration and files. This is applied when using the low level\nrest client to connect to a remote ES node\n\nRelates: #37287\nResolves: #29755","date":"2019-01-31 15:06:05","modifiedFileCount":"14","status":"B","submitter":"Tim Vernum"},{"authorTime":"2019-02-02 05:56:35","codes":[{"authorDate":"2019-01-31 15:06:05","commitOrder":2,"curCode":"    public void testClientFailsWithUntrustedCertificate() throws IOException {\n        final List<Thread> threads = new ArrayList<>();\n        final Settings settings = Settings.builder()\n            .put(\"path.home\", createTempDir())\n            .build();\n        final Environment environment = TestEnvironment.newEnvironment(settings);\n        final ReindexSslConfig ssl = new ReindexSslConfig(settings, environment, mock(ResourceWatcherService.class));\n        try (RestClient client = TransportReindexAction.buildRestClient(getRemoteInfo(), ssl, 1L, threads)) {\n            expectThrows(SSLHandshakeException.class, () -> client.performRequest(new Request(\"GET\", \"/\")));\n        }\n    }\n","date":"2019-01-31 15:06:05","endLine":129,"groupId":"21573","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testClientFailsWithUntrustedCertificate","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/f7/1d12498669904e376258c3b8feb3ec62e41c65.src","preCode":"    public void testClientFailsWithUntrustedCertificate() throws IOException {\n        final List<Thread> threads = new ArrayList<>();\n        final Settings settings = Settings.builder()\n            .put(\"path.home\", createTempDir())\n            .build();\n        final Environment environment = TestEnvironment.newEnvironment(settings);\n        final ReindexSslConfig ssl = new ReindexSslConfig(settings, environment, mock(ResourceWatcherService.class));\n        try (RestClient client = TransportReindexAction.buildRestClient(getRemoteInfo(), ssl, 1L, threads)) {\n            expectThrows(SSLHandshakeException.class, () -> client.performRequest(new Request(\"GET\", \"/\")));\n        }\n    }\n","realPath":"modules/reindex/src/test/java/org/elasticsearch/index/reindex/ReindexRestClientSslTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":119,"status":"N"},{"authorDate":"2019-02-02 05:56:35","commitOrder":2,"curCode":"    public void testClientSucceedsWithVerificationDisabled() throws IOException {\n        assumeFalse(\"Cannot disable verification in FIPS JVM\", inFipsJvm());\n        final List<Thread> threads = new ArrayList<>();\n        final Settings settings = Settings.builder()\n            .put(\"path.home\", createTempDir())\n            .put(\"reindex.ssl.verification_mode\", \"NONE\")\n            .build();\n        final Environment environment = TestEnvironment.newEnvironment(settings);\n        final ReindexSslConfig ssl = new ReindexSslConfig(settings, environment, mock(ResourceWatcherService.class));\n        try (RestClient client = TransportReindexAction.buildRestClient(getRemoteInfo(), ssl, 1L, threads)) {\n            final Response response = client.performRequest(new Request(\"GET\", \"/\"));\n            assertThat(response.getStatusLine().getStatusCode(), Matchers.is(200));\n        }\n    }\n","date":"2019-02-02 05:56:35","endLine":159,"groupId":"21577","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testClientSucceedsWithVerificationDisabled","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/7c/94b94bbb1d5593bc55266787491fd46910d730.src","preCode":"    public void testClientSucceedsWithVerificationDisabled() throws IOException {\n        assertFalse(\"Cannot disable verification in FIPS JVM\", inFipsJvm());\n        final List<Thread> threads = new ArrayList<>();\n        final Settings settings = Settings.builder()\n            .put(\"path.home\", createTempDir())\n            .put(\"reindex.ssl.verification_mode\", \"NONE\")\n            .build();\n        final Environment environment = TestEnvironment.newEnvironment(settings);\n        final ReindexSslConfig ssl = new ReindexSslConfig(settings, environment, mock(ResourceWatcherService.class));\n        try (RestClient client = TransportReindexAction.buildRestClient(getRemoteInfo(), ssl, 1L, threads)) {\n            final Response response = client.performRequest(new Request(\"GET\", \"/\"));\n            assertThat(response.getStatusLine().getStatusCode(), Matchers.is(200));\n        }\n    }\n","realPath":"modules/reindex/src/test/java/org/elasticsearch/index/reindex/ReindexRestClientSslTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":146,"status":"M"}],"commitId":"78a65c340d195e99a533ce57b6c263d1bb73dd31","commitMessage":"@@@Correctly disable tests for FIPS JVMs (#38214)\n\nReplace assertFalse with assumeFalse\n\nResolves: #38212","date":"2019-02-02 05:56:35","modifiedFileCount":"1","status":"M","submitter":"Ioannis Kakavas"},{"authorTime":"2019-05-03 01:54:54","codes":[{"authorDate":"2019-05-03 01:54:54","commitOrder":3,"curCode":"    public void testClientFailsWithUntrustedCertificate() throws IOException {\n        final List<Thread> threads = new ArrayList<>();\n        final Settings settings = Settings.builder()\n            .put(\"path.home\", createTempDir())\n            .put(\"reindex.ssl.supported_protocols\", \"TLSv1.2\")\n            .build();\n        final Environment environment = TestEnvironment.newEnvironment(settings);\n        final ReindexSslConfig ssl = new ReindexSslConfig(settings, environment, mock(ResourceWatcherService.class));\n        try (RestClient client = TransportReindexAction.buildRestClient(getRemoteInfo(), ssl, 1L, threads)) {\n            expectThrows(SSLHandshakeException.class, () -> client.performRequest(new Request(\"GET\", \"/\")));\n        }\n    }\n","date":"2019-05-03 01:54:54","endLine":130,"groupId":"21573","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testClientFailsWithUntrustedCertificate","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/a2/e00e66fd218b810a8b786b71f2b74a724af2b6.src","preCode":"    public void testClientFailsWithUntrustedCertificate() throws IOException {\n        final List<Thread> threads = new ArrayList<>();\n        final Settings settings = Settings.builder()\n            .put(\"path.home\", createTempDir())\n            .build();\n        final Environment environment = TestEnvironment.newEnvironment(settings);\n        final ReindexSslConfig ssl = new ReindexSslConfig(settings, environment, mock(ResourceWatcherService.class));\n        try (RestClient client = TransportReindexAction.buildRestClient(getRemoteInfo(), ssl, 1L, threads)) {\n            expectThrows(SSLHandshakeException.class, () -> client.performRequest(new Request(\"GET\", \"/\")));\n        }\n    }\n","realPath":"modules/reindex/src/test/java/org/elasticsearch/index/reindex/ReindexRestClientSslTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":119,"status":"M"},{"authorDate":"2019-05-03 01:54:54","commitOrder":3,"curCode":"    public void testClientSucceedsWithVerificationDisabled() throws IOException {\n        assumeFalse(\"Cannot disable verification in FIPS JVM\", inFipsJvm());\n        final List<Thread> threads = new ArrayList<>();\n        final Settings settings = Settings.builder()\n            .put(\"path.home\", createTempDir())\n            .put(\"reindex.ssl.verification_mode\", \"NONE\")\n            .put(\"reindex.ssl.supported_protocols\", \"TLSv1.2\")\n            .build();\n        final Environment environment = TestEnvironment.newEnvironment(settings);\n        final ReindexSslConfig ssl = new ReindexSslConfig(settings, environment, mock(ResourceWatcherService.class));\n        try (RestClient client = TransportReindexAction.buildRestClient(getRemoteInfo(), ssl, 1L, threads)) {\n            final Response response = client.performRequest(new Request(\"GET\", \"/\"));\n            assertThat(response.getStatusLine().getStatusCode(), Matchers.is(200));\n        }\n    }\n","date":"2019-05-03 01:54:54","endLine":162,"groupId":"21577","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testClientSucceedsWithVerificationDisabled","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/a2/e00e66fd218b810a8b786b71f2b74a724af2b6.src","preCode":"    public void testClientSucceedsWithVerificationDisabled() throws IOException {\n        assumeFalse(\"Cannot disable verification in FIPS JVM\", inFipsJvm());\n        final List<Thread> threads = new ArrayList<>();\n        final Settings settings = Settings.builder()\n            .put(\"path.home\", createTempDir())\n            .put(\"reindex.ssl.verification_mode\", \"NONE\")\n            .build();\n        final Environment environment = TestEnvironment.newEnvironment(settings);\n        final ReindexSslConfig ssl = new ReindexSslConfig(settings, environment, mock(ResourceWatcherService.class));\n        try (RestClient client = TransportReindexAction.buildRestClient(getRemoteInfo(), ssl, 1L, threads)) {\n            final Response response = client.performRequest(new Request(\"GET\", \"/\"));\n            assertThat(response.getStatusLine().getStatusCode(), Matchers.is(200));\n        }\n    }\n","realPath":"modules/reindex/src/test/java/org/elasticsearch/index/reindex/ReindexRestClientSslTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":148,"status":"M"}],"commitId":"315c971044a399b1ea4276d200db577c6189988d","commitMessage":"@@@Update TLS ciphers and protocols for JDK 11 (#41385)\n\nThis commit updates the default ciphers and TLS protocols that are used\nafter the minimum supported JDK is JDK 11. The conditionals around\nTLSv1.3 and 256-bit cipher support have been removed. JDK 11 no longer\nrequires an unlimited JCE policy file for 256 bit cipher support and\nTLSv1.3 is supported in JDK 11+. New cipher support has been introduced\nin the newer JDK versions as well. The ciphers are ordered with PFS\nciphers being most preferred.  then AEAD ciphers.  and finally those with\nmainstream hardware support.","date":"2019-05-03 01:54:54","modifiedFileCount":"17","status":"M","submitter":"Jay Modi"},{"authorTime":"2019-05-03 05:04:17","codes":[{"authorDate":"2019-05-03 05:04:17","commitOrder":4,"curCode":"    public void testClientFailsWithUntrustedCertificate() throws IOException {\n        final List<Thread> threads = new ArrayList<>();\n        final Settings settings = Settings.builder()\n            .put(\"path.home\", createTempDir())\n            .build();\n        final Environment environment = TestEnvironment.newEnvironment(settings);\n        final ReindexSslConfig ssl = new ReindexSslConfig(settings, environment, mock(ResourceWatcherService.class));\n        try (RestClient client = TransportReindexAction.buildRestClient(getRemoteInfo(), ssl, 1L, threads)) {\n            expectThrows(SSLHandshakeException.class, () -> client.performRequest(new Request(\"GET\", \"/\")));\n        }\n    }\n","date":"2019-05-03 05:04:17","endLine":129,"groupId":"21573","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"testClientFailsWithUntrustedCertificate","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/7c/94b94bbb1d5593bc55266787491fd46910d730.src","preCode":"    public void testClientFailsWithUntrustedCertificate() throws IOException {\n        final List<Thread> threads = new ArrayList<>();\n        final Settings settings = Settings.builder()\n            .put(\"path.home\", createTempDir())\n            .put(\"reindex.ssl.supported_protocols\", \"TLSv1.2\")\n            .build();\n        final Environment environment = TestEnvironment.newEnvironment(settings);\n        final ReindexSslConfig ssl = new ReindexSslConfig(settings, environment, mock(ResourceWatcherService.class));\n        try (RestClient client = TransportReindexAction.buildRestClient(getRemoteInfo(), ssl, 1L, threads)) {\n            expectThrows(SSLHandshakeException.class, () -> client.performRequest(new Request(\"GET\", \"/\")));\n        }\n    }\n","realPath":"modules/reindex/src/test/java/org/elasticsearch/index/reindex/ReindexRestClientSslTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":119,"status":"M"},{"authorDate":"2019-05-03 05:04:17","commitOrder":4,"curCode":"    public void testClientSucceedsWithVerificationDisabled() throws IOException {\n        assumeFalse(\"Cannot disable verification in FIPS JVM\", inFipsJvm());\n        final List<Thread> threads = new ArrayList<>();\n        final Settings settings = Settings.builder()\n            .put(\"path.home\", createTempDir())\n            .put(\"reindex.ssl.verification_mode\", \"NONE\")\n            .build();\n        final Environment environment = TestEnvironment.newEnvironment(settings);\n        final ReindexSslConfig ssl = new ReindexSslConfig(settings, environment, mock(ResourceWatcherService.class));\n        try (RestClient client = TransportReindexAction.buildRestClient(getRemoteInfo(), ssl, 1L, threads)) {\n            final Response response = client.performRequest(new Request(\"GET\", \"/\"));\n            assertThat(response.getStatusLine().getStatusCode(), Matchers.is(200));\n        }\n    }\n","date":"2019-05-03 05:04:17","endLine":159,"groupId":"21577","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"testClientSucceedsWithVerificationDisabled","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/7c/94b94bbb1d5593bc55266787491fd46910d730.src","preCode":"    public void testClientSucceedsWithVerificationDisabled() throws IOException {\n        assumeFalse(\"Cannot disable verification in FIPS JVM\", inFipsJvm());\n        final List<Thread> threads = new ArrayList<>();\n        final Settings settings = Settings.builder()\n            .put(\"path.home\", createTempDir())\n            .put(\"reindex.ssl.verification_mode\", \"NONE\")\n            .put(\"reindex.ssl.supported_protocols\", \"TLSv1.2\")\n            .build();\n        final Environment environment = TestEnvironment.newEnvironment(settings);\n        final ReindexSslConfig ssl = new ReindexSslConfig(settings, environment, mock(ResourceWatcherService.class));\n        try (RestClient client = TransportReindexAction.buildRestClient(getRemoteInfo(), ssl, 1L, threads)) {\n            final Response response = client.performRequest(new Request(\"GET\", \"/\"));\n            assertThat(response.getStatusLine().getStatusCode(), Matchers.is(200));\n        }\n    }\n","realPath":"modules/reindex/src/test/java/org/elasticsearch/index/reindex/ReindexRestClientSslTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":146,"status":"M"}],"commitId":"78aeb0f1bcb049be01d19bce8f5555fad8b43b73","commitMessage":"@@@Revert \"Update TLS ciphers and protocols for JDK 11 (#41385)\"\n\nThis reverts commit 315c971044a399b1ea4276d200db577c6189988d due to\nCI failures related to this change. Some of the failures are due to JDK\nbugs related to TLSv1.3 such as JDK-8213202 and an endless loop in the\nHttpsServer when the client closes in a certain manner.\n","date":"2019-05-03 05:04:17","modifiedFileCount":"17","status":"M","submitter":"jaymode"},{"authorTime":"2019-05-08 00:24:22","codes":[{"authorDate":"2019-05-08 00:24:22","commitOrder":5,"curCode":"    public void testClientFailsWithUntrustedCertificate() throws IOException {\n        final List<Thread> threads = new ArrayList<>();\n        final Settings settings = Settings.builder()\n            .put(\"path.home\", createTempDir())\n            .put(\"reindex.ssl.supported_protocols\", \"TLSv1.2\")\n            .build();\n        final Environment environment = TestEnvironment.newEnvironment(settings);\n        final ReindexSslConfig ssl = new ReindexSslConfig(settings, environment, mock(ResourceWatcherService.class));\n        try (RestClient client = TransportReindexAction.buildRestClient(getRemoteInfo(), ssl, 1L, threads)) {\n            expectThrows(SSLHandshakeException.class, () -> client.performRequest(new Request(\"GET\", \"/\")));\n        }\n    }\n","date":"2019-05-08 07:05:58","endLine":130,"groupId":"21573","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"testClientFailsWithUntrustedCertificate","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/a2/e00e66fd218b810a8b786b71f2b74a724af2b6.src","preCode":"    public void testClientFailsWithUntrustedCertificate() throws IOException {\n        final List<Thread> threads = new ArrayList<>();\n        final Settings settings = Settings.builder()\n            .put(\"path.home\", createTempDir())\n            .build();\n        final Environment environment = TestEnvironment.newEnvironment(settings);\n        final ReindexSslConfig ssl = new ReindexSslConfig(settings, environment, mock(ResourceWatcherService.class));\n        try (RestClient client = TransportReindexAction.buildRestClient(getRemoteInfo(), ssl, 1L, threads)) {\n            expectThrows(SSLHandshakeException.class, () -> client.performRequest(new Request(\"GET\", \"/\")));\n        }\n    }\n","realPath":"modules/reindex/src/test/java/org/elasticsearch/index/reindex/ReindexRestClientSslTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":119,"status":"M"},{"authorDate":"2019-05-08 00:24:22","commitOrder":5,"curCode":"    public void testClientSucceedsWithVerificationDisabled() throws IOException {\n        assumeFalse(\"Cannot disable verification in FIPS JVM\", inFipsJvm());\n        final List<Thread> threads = new ArrayList<>();\n        final Settings settings = Settings.builder()\n            .put(\"path.home\", createTempDir())\n            .put(\"reindex.ssl.verification_mode\", \"NONE\")\n            .put(\"reindex.ssl.supported_protocols\", \"TLSv1.2\")\n            .build();\n        final Environment environment = TestEnvironment.newEnvironment(settings);\n        final ReindexSslConfig ssl = new ReindexSslConfig(settings, environment, mock(ResourceWatcherService.class));\n        try (RestClient client = TransportReindexAction.buildRestClient(getRemoteInfo(), ssl, 1L, threads)) {\n            final Response response = client.performRequest(new Request(\"GET\", \"/\"));\n            assertThat(response.getStatusLine().getStatusCode(), Matchers.is(200));\n        }\n    }\n","date":"2019-05-08 07:05:58","endLine":162,"groupId":"21577","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"testClientSucceedsWithVerificationDisabled","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/a2/e00e66fd218b810a8b786b71f2b74a724af2b6.src","preCode":"    public void testClientSucceedsWithVerificationDisabled() throws IOException {\n        assumeFalse(\"Cannot disable verification in FIPS JVM\", inFipsJvm());\n        final List<Thread> threads = new ArrayList<>();\n        final Settings settings = Settings.builder()\n            .put(\"path.home\", createTempDir())\n            .put(\"reindex.ssl.verification_mode\", \"NONE\")\n            .build();\n        final Environment environment = TestEnvironment.newEnvironment(settings);\n        final ReindexSslConfig ssl = new ReindexSslConfig(settings, environment, mock(ResourceWatcherService.class));\n        try (RestClient client = TransportReindexAction.buildRestClient(getRemoteInfo(), ssl, 1L, threads)) {\n            final Response response = client.performRequest(new Request(\"GET\", \"/\"));\n            assertThat(response.getStatusLine().getStatusCode(), Matchers.is(200));\n        }\n    }\n","realPath":"modules/reindex/src/test/java/org/elasticsearch/index/reindex/ReindexRestClientSslTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":148,"status":"M"}],"commitId":"96bf049ef37714c3044bc85894c094efb0005cfe","commitMessage":"@@@Update TLS ciphers and protocols for JDK 11 (#41808)\n\n* Update TLS ciphers and protocols for JDK 11 (#41385)\n\nThis commit updates the default ciphers and TLS protocols that are used\nafter the minimum supported JDK is JDK 11. The conditionals around\nTLSv1.3 and 256-bit cipher support have been removed. JDK 11 no longer\nrequires an unlimited JCE policy file for 256 bit cipher support and\nTLSv1.3 is supported in JDK 11+. New cipher support has been introduced\nin the newer JDK versions as well. The ciphers are ordered with PFS\nciphers being most preferred.  then AEAD ciphers.  and finally those with\nmainstream hardware support.\n\n* Fixes for TLSv1.3 on JDK11\n\n* fix for JDK-8212885\n","date":"2019-05-08 07:05:58","modifiedFileCount":"23","status":"M","submitter":"Jay Modi"},{"authorTime":"2019-08-01 23:14:43","codes":[{"authorDate":"2019-08-01 23:14:43","commitOrder":6,"curCode":"    public void testClientFailsWithUntrustedCertificate() throws IOException {\n        final List<Thread> threads = new ArrayList<>();\n        final Settings settings = Settings.builder()\n            .put(\"path.home\", createTempDir())\n            .put(\"reindex.ssl.supported_protocols\", \"TLSv1.2\")\n            .build();\n        final Environment environment = TestEnvironment.newEnvironment(settings);\n        final ReindexSslConfig ssl = new ReindexSslConfig(settings, environment, mock(ResourceWatcherService.class));\n        try (RestClient client = Reindexer.buildRestClient(getRemoteInfo(), ssl, 1L, threads)) {\n            expectThrows(SSLHandshakeException.class, () -> client.performRequest(new Request(\"GET\", \"/\")));\n        }\n    }\n","date":"2019-08-01 23:14:43","endLine":130,"groupId":"21573","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"testClientFailsWithUntrustedCertificate","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/e8/9a07974a7d476abc45fd146df22d0a29b37434.src","preCode":"    public void testClientFailsWithUntrustedCertificate() throws IOException {\n        final List<Thread> threads = new ArrayList<>();\n        final Settings settings = Settings.builder()\n            .put(\"path.home\", createTempDir())\n            .put(\"reindex.ssl.supported_protocols\", \"TLSv1.2\")\n            .build();\n        final Environment environment = TestEnvironment.newEnvironment(settings);\n        final ReindexSslConfig ssl = new ReindexSslConfig(settings, environment, mock(ResourceWatcherService.class));\n        try (RestClient client = TransportReindexAction.buildRestClient(getRemoteInfo(), ssl, 1L, threads)) {\n            expectThrows(SSLHandshakeException.class, () -> client.performRequest(new Request(\"GET\", \"/\")));\n        }\n    }\n","realPath":"modules/reindex/src/test/java/org/elasticsearch/index/reindex/ReindexRestClientSslTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":119,"status":"M"},{"authorDate":"2019-08-01 23:14:43","commitOrder":6,"curCode":"    public void testClientSucceedsWithVerificationDisabled() throws IOException {\n        assumeFalse(\"Cannot disable verification in FIPS JVM\", inFipsJvm());\n        final List<Thread> threads = new ArrayList<>();\n        final Settings settings = Settings.builder()\n            .put(\"path.home\", createTempDir())\n            .put(\"reindex.ssl.verification_mode\", \"NONE\")\n            .put(\"reindex.ssl.supported_protocols\", \"TLSv1.2\")\n            .build();\n        final Environment environment = TestEnvironment.newEnvironment(settings);\n        final ReindexSslConfig ssl = new ReindexSslConfig(settings, environment, mock(ResourceWatcherService.class));\n        try (RestClient client = Reindexer.buildRestClient(getRemoteInfo(), ssl, 1L, threads)) {\n            final Response response = client.performRequest(new Request(\"GET\", \"/\"));\n            assertThat(response.getStatusLine().getStatusCode(), Matchers.is(200));\n        }\n    }\n","date":"2019-08-01 23:14:43","endLine":162,"groupId":"21577","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"testClientSucceedsWithVerificationDisabled","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/e8/9a07974a7d476abc45fd146df22d0a29b37434.src","preCode":"    public void testClientSucceedsWithVerificationDisabled() throws IOException {\n        assumeFalse(\"Cannot disable verification in FIPS JVM\", inFipsJvm());\n        final List<Thread> threads = new ArrayList<>();\n        final Settings settings = Settings.builder()\n            .put(\"path.home\", createTempDir())\n            .put(\"reindex.ssl.verification_mode\", \"NONE\")\n            .put(\"reindex.ssl.supported_protocols\", \"TLSv1.2\")\n            .build();\n        final Environment environment = TestEnvironment.newEnvironment(settings);\n        final ReindexSslConfig ssl = new ReindexSslConfig(settings, environment, mock(ResourceWatcherService.class));\n        try (RestClient client = TransportReindexAction.buildRestClient(getRemoteInfo(), ssl, 1L, threads)) {\n            final Response response = client.performRequest(new Request(\"GET\", \"/\"));\n            assertThat(response.getStatusLine().getStatusCode(), Matchers.is(200));\n        }\n    }\n","realPath":"modules/reindex/src/test/java/org/elasticsearch/index/reindex/ReindexRestClientSslTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":148,"status":"M"}],"commitId":"f57d67c56cc86f4bca9f950c61d677631747ac96","commitMessage":"@@@Extract reindexing logic from transport action (#45024)\n\nThis commit extracts the reindexing logic from the transport action so\nthat it can be incorporated into the persistent reindex work without\nrequiring the usage of the client.","date":"2019-08-01 23:14:43","modifiedFileCount":"13","status":"M","submitter":"Tim Brooks"},{"authorTime":"2019-08-01 23:14:43","codes":[{"authorDate":"2019-11-22 15:11:07","commitOrder":7,"curCode":"    public void testClientFailsWithUntrustedCertificate() throws IOException {\n        assumeFalse(\"https://github.com/elastic/elasticsearch/issues/49094\", inFipsJvm());\n        final List<Thread> threads = new ArrayList<>();\n        final Settings settings = Settings.builder()\n            .put(\"path.home\", createTempDir())\n            .put(\"reindex.ssl.supported_protocols\", \"TLSv1.2\")\n            .build();\n        final Environment environment = TestEnvironment.newEnvironment(settings);\n        final ReindexSslConfig ssl = new ReindexSslConfig(settings, environment, mock(ResourceWatcherService.class));\n        try (RestClient client = Reindexer.buildRestClient(getRemoteInfo(), ssl, 1L, threads)) {\n            expectThrows(SSLHandshakeException.class, () -> client.performRequest(new Request(\"GET\", \"/\")));\n        }\n    }\n","date":"2019-11-22 15:11:07","endLine":131,"groupId":"21573","id":13,"instanceNumber":1,"isCurCommit":0,"methodName":"testClientFailsWithUntrustedCertificate","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/6d/d989ffafdb5728d2834a4e3569a7ca392ac796.src","preCode":"    public void testClientFailsWithUntrustedCertificate() throws IOException {\n        final List<Thread> threads = new ArrayList<>();\n        final Settings settings = Settings.builder()\n            .put(\"path.home\", createTempDir())\n            .put(\"reindex.ssl.supported_protocols\", \"TLSv1.2\")\n            .build();\n        final Environment environment = TestEnvironment.newEnvironment(settings);\n        final ReindexSslConfig ssl = new ReindexSslConfig(settings, environment, mock(ResourceWatcherService.class));\n        try (RestClient client = Reindexer.buildRestClient(getRemoteInfo(), ssl, 1L, threads)) {\n            expectThrows(SSLHandshakeException.class, () -> client.performRequest(new Request(\"GET\", \"/\")));\n        }\n    }\n","realPath":"modules/reindex/src/test/java/org/elasticsearch/index/reindex/ReindexRestClientSslTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":119,"status":"M"},{"authorDate":"2019-08-01 23:14:43","commitOrder":7,"curCode":"    public void testClientSucceedsWithVerificationDisabled() throws IOException {\n        assumeFalse(\"Cannot disable verification in FIPS JVM\", inFipsJvm());\n        final List<Thread> threads = new ArrayList<>();\n        final Settings settings = Settings.builder()\n            .put(\"path.home\", createTempDir())\n            .put(\"reindex.ssl.verification_mode\", \"NONE\")\n            .put(\"reindex.ssl.supported_protocols\", \"TLSv1.2\")\n            .build();\n        final Environment environment = TestEnvironment.newEnvironment(settings);\n        final ReindexSslConfig ssl = new ReindexSslConfig(settings, environment, mock(ResourceWatcherService.class));\n        try (RestClient client = Reindexer.buildRestClient(getRemoteInfo(), ssl, 1L, threads)) {\n            final Response response = client.performRequest(new Request(\"GET\", \"/\"));\n            assertThat(response.getStatusLine().getStatusCode(), Matchers.is(200));\n        }\n    }\n","date":"2019-08-01 23:14:43","endLine":162,"groupId":"21577","id":14,"instanceNumber":2,"isCurCommit":0,"methodName":"testClientSucceedsWithVerificationDisabled","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/e8/9a07974a7d476abc45fd146df22d0a29b37434.src","preCode":"    public void testClientSucceedsWithVerificationDisabled() throws IOException {\n        assumeFalse(\"Cannot disable verification in FIPS JVM\", inFipsJvm());\n        final List<Thread> threads = new ArrayList<>();\n        final Settings settings = Settings.builder()\n            .put(\"path.home\", createTempDir())\n            .put(\"reindex.ssl.verification_mode\", \"NONE\")\n            .put(\"reindex.ssl.supported_protocols\", \"TLSv1.2\")\n            .build();\n        final Environment environment = TestEnvironment.newEnvironment(settings);\n        final ReindexSslConfig ssl = new ReindexSslConfig(settings, environment, mock(ResourceWatcherService.class));\n        try (RestClient client = Reindexer.buildRestClient(getRemoteInfo(), ssl, 1L, threads)) {\n            final Response response = client.performRequest(new Request(\"GET\", \"/\"));\n            assertThat(response.getStatusLine().getStatusCode(), Matchers.is(200));\n        }\n    }\n","realPath":"modules/reindex/src/test/java/org/elasticsearch/index/reindex/ReindexRestClientSslTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":148,"status":"N"}],"commitId":"92f16314072ce217708efadd7acb09984c211efb","commitMessage":"@@@Adjustments for FIPS 140 testing (#49319)\n\n- Don't install ingest-attachment and don't run the related docs\ntests.  since ingest-attachment is not supported in FIPS 140 JVMs\n- Move copying extra jars and extra config files earlier on in the\nnode configuration so that elasticsearch-keystore and\nelasticsearch-plugin that run before the node starts have all files\n(policy.  properties.  jars) available.\n- BCJSSE needs a certificate to be explicitly added in a keystore \nas a trustedcerty entry.  it's not enough for it to be in privatekeyentry \nfor it to be trusted\n- Set the value for BuildParams.inFipsJvm configuration time\n","date":"2019-11-22 15:11:07","modifiedFileCount":"8","status":"M","submitter":"Ioannis Kakavas"},{"authorTime":"2020-11-20 01:46:19","codes":[{"authorDate":"2020-11-20 01:46:19","commitOrder":8,"curCode":"    public void testClientFailsWithUntrustedCertificate() throws IOException {\n        assumeFalse(\"https://github.com/elastic/elasticsearch/issues/49094\", inFipsJvm());\n        final List<Thread> threads = new ArrayList<>();\n        final Settings.Builder builder = Settings.builder()\n            .put(\"path.home\", createTempDir());\n        if (isHttpsServerBrokenWithTLSv13()) {\n            builder.put(\"reindex.ssl.supported_protocols\", \"TLSv1.2\");\n        }\n        final Settings settings = builder.build();\n        final Environment environment = TestEnvironment.newEnvironment(settings);\n        final ReindexSslConfig ssl = new ReindexSslConfig(settings, environment, mock(ResourceWatcherService.class));\n        try (RestClient client = Reindexer.buildRestClient(getRemoteInfo(), ssl, 1L, threads)) {\n            expectThrows(SSLHandshakeException.class, () -> client.performRequest(new Request(\"GET\", \"/\")));\n        }\n    }\n","date":"2020-11-20 01:46:19","endLine":134,"groupId":"10233","id":15,"instanceNumber":1,"isCurCommit":0,"methodName":"testClientFailsWithUntrustedCertificate","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/5f/4bc6883fe0cc3ec40332bdd99dda302dd6b6cf.src","preCode":"    public void testClientFailsWithUntrustedCertificate() throws IOException {\n        assumeFalse(\"https://github.com/elastic/elasticsearch/issues/49094\", inFipsJvm());\n        final List<Thread> threads = new ArrayList<>();\n        final Settings settings = Settings.builder()\n            .put(\"path.home\", createTempDir())\n            .put(\"reindex.ssl.supported_protocols\", \"TLSv1.2\")\n            .build();\n        final Environment environment = TestEnvironment.newEnvironment(settings);\n        final ReindexSslConfig ssl = new ReindexSslConfig(settings, environment, mock(ResourceWatcherService.class));\n        try (RestClient client = Reindexer.buildRestClient(getRemoteInfo(), ssl, 1L, threads)) {\n            expectThrows(SSLHandshakeException.class, () -> client.performRequest(new Request(\"GET\", \"/\")));\n        }\n    }\n","realPath":"modules/reindex/src/test/java/org/elasticsearch/index/reindex/ReindexRestClientSslTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":120,"status":"M"},{"authorDate":"2020-11-20 01:46:19","commitOrder":8,"curCode":"    public void testClientSucceedsWithVerificationDisabled() throws IOException {\n        assumeFalse(\"Cannot disable verification in FIPS JVM\", inFipsJvm());\n        final List<Thread> threads = new ArrayList<>();\n        final Settings.Builder builder = Settings.builder()\n            .put(\"path.home\", createTempDir())\n            .put(\"reindex.ssl.verification_mode\", \"NONE\");\n        if (isHttpsServerBrokenWithTLSv13()) {\n            builder.put(\"reindex.ssl.supported_protocols\", \"TLSv1.2\");\n        }\n        final Settings settings = builder.build();\n        final Environment environment = TestEnvironment.newEnvironment(settings);\n        final ReindexSslConfig ssl = new ReindexSslConfig(settings, environment, mock(ResourceWatcherService.class));\n        try (RestClient client = Reindexer.buildRestClient(getRemoteInfo(), ssl, 1L, threads)) {\n            final Response response = client.performRequest(new Request(\"GET\", \"/\"));\n            assertThat(response.getStatusLine().getStatusCode(), Matchers.is(200));\n        }\n    }\n","date":"2020-11-20 01:46:19","endLine":170,"groupId":"10233","id":16,"instanceNumber":2,"isCurCommit":0,"methodName":"testClientSucceedsWithVerificationDisabled","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/5f/4bc6883fe0cc3ec40332bdd99dda302dd6b6cf.src","preCode":"    public void testClientSucceedsWithVerificationDisabled() throws IOException {\n        assumeFalse(\"Cannot disable verification in FIPS JVM\", inFipsJvm());\n        final List<Thread> threads = new ArrayList<>();\n        final Settings settings = Settings.builder()\n            .put(\"path.home\", createTempDir())\n            .put(\"reindex.ssl.verification_mode\", \"NONE\")\n            .put(\"reindex.ssl.supported_protocols\", \"TLSv1.2\")\n            .build();\n        final Environment environment = TestEnvironment.newEnvironment(settings);\n        final ReindexSslConfig ssl = new ReindexSslConfig(settings, environment, mock(ResourceWatcherService.class));\n        try (RestClient client = Reindexer.buildRestClient(getRemoteInfo(), ssl, 1L, threads)) {\n            final Response response = client.performRequest(new Request(\"GET\", \"/\"));\n            assertThat(response.getStatusLine().getStatusCode(), Matchers.is(200));\n        }\n    }\n","realPath":"modules/reindex/src/test/java/org/elasticsearch/index/reindex/ReindexRestClientSslTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":154,"status":"M"}],"commitId":"76c22f751e8c61da06a18267084da9e7f8dd3706","commitMessage":"@@@HttpsServer can use TLSv1.3 on JDK16+ (#64496)\n\nThis commit changes code that previously pinned to TLSv1.2 when running\non JDK 12+ to allow the use of TLSv1.3 if on JDK 16 or newer. There was\na bug in the HttpsServer code that has finally been fixed.  which\nprevented the use of TLSv1.3 as the HttpsServer would endlessly loop.\nThe JDK bug is JDK-8254967.\n\nCloses #38646","date":"2020-11-20 01:46:19","modifiedFileCount":"1","status":"M","submitter":"Jay Modi"}]
