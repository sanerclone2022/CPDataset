[{"authorTime":"2018-04-26 03:22:53","codes":[{"authorDate":"2018-04-26 03:22:53","commitOrder":1,"curCode":"    private ClusterState createInitialClusterState() {\n        MetaData.Builder metaBuilder = MetaData.builder();\n        metaBuilder.put(IndexMetaData.builder(\"idx\").settings(settings(Version.CURRENT)).numberOfShards(1).numberOfReplicas(0));\n        MetaData metaData = metaBuilder.build();\n        RoutingTable.Builder routingTableBuilder = RoutingTable.builder();\n        routingTableBuilder.addAsNew(metaData.index(\"idx\"));\n\n        RoutingTable routingTable = routingTableBuilder.build();\n        ClusterState clusterState = ClusterState.builder(ClusterName.CLUSTER_NAME_SETTING.getDefault(Settings.EMPTY))\n            .metaData(metaData).routingTable(routingTable).build();\n        clusterState = ClusterState.builder(clusterState).nodes(DiscoveryNodes.builder().add(newNode(\"node1\")).add(newNode(\"node2\")))\n            .build();\n        RoutingTable prevRoutingTable = routingTable;\n        routingTable = strategy.reroute(clusterState, \"reroute\", false).routingTable();\n        clusterState = ClusterState.builder(clusterState).routingTable(routingTable).build();\n\n        assertEquals(prevRoutingTable.index(\"idx\").shards().size(), 1);\n        assertEquals(prevRoutingTable.index(\"idx\").shard(0).shards().get(0).state(), UNASSIGNED);\n\n        assertEquals(routingTable.index(\"idx\").shards().size(), 1);\n        assertEquals(routingTable.index(\"idx\").shard(0).shards().get(0).state(), INITIALIZING);\n        return clusterState;\n    }\n","date":"2018-04-26 03:22:53","endLine":84,"groupId":"845","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"createInitialClusterState","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/99/4ee8f1438a1df4f42d3b439498b1f8dde77b22.src","preCode":"    private ClusterState createInitialClusterState() {\n        MetaData.Builder metaBuilder = MetaData.builder();\n        metaBuilder.put(IndexMetaData.builder(\"idx\").settings(settings(Version.CURRENT)).numberOfShards(1).numberOfReplicas(0));\n        MetaData metaData = metaBuilder.build();\n        RoutingTable.Builder routingTableBuilder = RoutingTable.builder();\n        routingTableBuilder.addAsNew(metaData.index(\"idx\"));\n\n        RoutingTable routingTable = routingTableBuilder.build();\n        ClusterState clusterState = ClusterState.builder(ClusterName.CLUSTER_NAME_SETTING.getDefault(Settings.EMPTY))\n            .metaData(metaData).routingTable(routingTable).build();\n        clusterState = ClusterState.builder(clusterState).nodes(DiscoveryNodes.builder().add(newNode(\"node1\")).add(newNode(\"node2\")))\n            .build();\n        RoutingTable prevRoutingTable = routingTable;\n        routingTable = strategy.reroute(clusterState, \"reroute\", false).routingTable();\n        clusterState = ClusterState.builder(clusterState).routingTable(routingTable).build();\n\n        assertEquals(prevRoutingTable.index(\"idx\").shards().size(), 1);\n        assertEquals(prevRoutingTable.index(\"idx\").shard(0).shards().get(0).state(), UNASSIGNED);\n\n        assertEquals(routingTable.index(\"idx\").shards().size(), 1);\n        assertEquals(routingTable.index(\"idx\").shard(0).shards().get(0).state(), INITIALIZING);\n        return clusterState;\n    }\n","realPath":"server/src/test/java/org/elasticsearch/cluster/routing/allocation/MaxRetryAllocationDeciderTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":62,"status":"B"},{"authorDate":"2018-04-26 03:22:53","commitOrder":1,"curCode":"    private ClusterState createInitialClusterState(AllocationService service) {\n        MetaData.Builder metaBuilder = MetaData.builder();\n        metaBuilder.put(IndexMetaData.builder(\"idx\").settings(settings(Version.CURRENT)).numberOfShards(1).numberOfReplicas(0));\n        MetaData metaData = metaBuilder.build();\n        RoutingTable.Builder routingTableBuilder = RoutingTable.builder();\n        routingTableBuilder.addAsNew(metaData.index(\"idx\"));\n\n        RoutingTable routingTable = routingTableBuilder.build();\n        ClusterState clusterState = ClusterState.builder(org.elasticsearch.cluster.ClusterName.CLUSTER_NAME_SETTING\n            .getDefault(Settings.EMPTY))\n            .metaData(metaData).routingTable(routingTable).build();\n        clusterState = ClusterState.builder(clusterState).nodes(DiscoveryNodes.builder().add(newNode(\"node1\")).add(newNode(\"node2\")))\n            .build();\n        RoutingTable prevRoutingTable = routingTable;\n        routingTable = service.reroute(clusterState, \"reroute\").routingTable();\n        clusterState = ClusterState.builder(clusterState).routingTable(routingTable).build();\n\n        assertEquals(prevRoutingTable.index(\"idx\").shards().size(), 1);\n        assertEquals(prevRoutingTable.index(\"idx\").shard(0).shards().get(0).state(), UNASSIGNED);\n\n        assertEquals(routingTable.index(\"idx\").shards().size(), 1);\n        assertEquals(routingTable.index(\"idx\").shard(0).shards().get(0).state(), INITIALIZING);\n        return clusterState;\n    }\n","date":"2018-04-26 03:22:53","endLine":181,"groupId":"38650","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"createInitialClusterState","params":"(AllocationServiceservice)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/6e/34a7510070e59e35367b1d14966147d72094f1.src","preCode":"    private ClusterState createInitialClusterState(AllocationService service) {\n        MetaData.Builder metaBuilder = MetaData.builder();\n        metaBuilder.put(IndexMetaData.builder(\"idx\").settings(settings(Version.CURRENT)).numberOfShards(1).numberOfReplicas(0));\n        MetaData metaData = metaBuilder.build();\n        RoutingTable.Builder routingTableBuilder = RoutingTable.builder();\n        routingTableBuilder.addAsNew(metaData.index(\"idx\"));\n\n        RoutingTable routingTable = routingTableBuilder.build();\n        ClusterState clusterState = ClusterState.builder(org.elasticsearch.cluster.ClusterName.CLUSTER_NAME_SETTING\n            .getDefault(Settings.EMPTY))\n            .metaData(metaData).routingTable(routingTable).build();\n        clusterState = ClusterState.builder(clusterState).nodes(DiscoveryNodes.builder().add(newNode(\"node1\")).add(newNode(\"node2\")))\n            .build();\n        RoutingTable prevRoutingTable = routingTable;\n        routingTable = service.reroute(clusterState, \"reroute\").routingTable();\n        clusterState = ClusterState.builder(clusterState).routingTable(routingTable).build();\n\n        assertEquals(prevRoutingTable.index(\"idx\").shards().size(), 1);\n        assertEquals(prevRoutingTable.index(\"idx\").shard(0).shards().get(0).state(), UNASSIGNED);\n\n        assertEquals(routingTable.index(\"idx\").shards().size(), 1);\n        assertEquals(routingTable.index(\"idx\").shard(0).shards().get(0).state(), INITIALIZING);\n        return clusterState;\n    }\n","realPath":"server/src/test/java/org/elasticsearch/action/admin/cluster/reroute/ClusterRerouteTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":158,"status":"B"}],"commitId":"d74fb9eb4559077e2d20b19a9ed62d9ff825027a","commitMessage":"@@@Opened x-pack ILM code\n","date":"2018-04-26 03:22:53","modifiedFileCount":"0","status":"B","submitter":"Tal Levy"},{"authorTime":"2018-04-26 03:22:53","codes":[{"authorDate":"2019-07-22 23:09:25","commitOrder":2,"curCode":"    private ClusterState createInitialClusterState() {\n        MetaData.Builder metaBuilder = MetaData.builder();\n        metaBuilder.put(IndexMetaData.builder(\"idx\").settings(settings(Version.CURRENT)).numberOfShards(1).numberOfReplicas(0));\n        MetaData metaData = metaBuilder.build();\n        RoutingTable.Builder routingTableBuilder = RoutingTable.builder();\n        routingTableBuilder.addAsNew(metaData.index(\"idx\"));\n\n        RoutingTable routingTable = routingTableBuilder.build();\n        ClusterState clusterState = ClusterState.builder(ClusterName.CLUSTER_NAME_SETTING.getDefault(Settings.EMPTY))\n            .metaData(metaData).routingTable(routingTable).build();\n        clusterState = ClusterState.builder(clusterState).nodes(DiscoveryNodes.builder().add(newNode(\"node1\")).add(newNode(\"node2\")))\n            .build();\n        RoutingTable prevRoutingTable = routingTable;\n        routingTable = strategy.reroute(clusterState, \"reroute\").routingTable();\n        clusterState = ClusterState.builder(clusterState).routingTable(routingTable).build();\n\n        assertEquals(prevRoutingTable.index(\"idx\").shards().size(), 1);\n        assertEquals(prevRoutingTable.index(\"idx\").shard(0).shards().get(0).state(), UNASSIGNED);\n\n        assertEquals(routingTable.index(\"idx\").shards().size(), 1);\n        assertEquals(routingTable.index(\"idx\").shard(0).shards().get(0).state(), INITIALIZING);\n        return clusterState;\n    }\n","date":"2019-07-22 23:09:25","endLine":84,"groupId":"39903","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"createInitialClusterState","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/19/af72d18db4ad4c13b04894f5221398688e2512.src","preCode":"    private ClusterState createInitialClusterState() {\n        MetaData.Builder metaBuilder = MetaData.builder();\n        metaBuilder.put(IndexMetaData.builder(\"idx\").settings(settings(Version.CURRENT)).numberOfShards(1).numberOfReplicas(0));\n        MetaData metaData = metaBuilder.build();\n        RoutingTable.Builder routingTableBuilder = RoutingTable.builder();\n        routingTableBuilder.addAsNew(metaData.index(\"idx\"));\n\n        RoutingTable routingTable = routingTableBuilder.build();\n        ClusterState clusterState = ClusterState.builder(ClusterName.CLUSTER_NAME_SETTING.getDefault(Settings.EMPTY))\n            .metaData(metaData).routingTable(routingTable).build();\n        clusterState = ClusterState.builder(clusterState).nodes(DiscoveryNodes.builder().add(newNode(\"node1\")).add(newNode(\"node2\")))\n            .build();\n        RoutingTable prevRoutingTable = routingTable;\n        routingTable = strategy.reroute(clusterState, \"reroute\", false).routingTable();\n        clusterState = ClusterState.builder(clusterState).routingTable(routingTable).build();\n\n        assertEquals(prevRoutingTable.index(\"idx\").shards().size(), 1);\n        assertEquals(prevRoutingTable.index(\"idx\").shard(0).shards().get(0).state(), UNASSIGNED);\n\n        assertEquals(routingTable.index(\"idx\").shards().size(), 1);\n        assertEquals(routingTable.index(\"idx\").shard(0).shards().get(0).state(), INITIALIZING);\n        return clusterState;\n    }\n","realPath":"server/src/test/java/org/elasticsearch/cluster/routing/allocation/MaxRetryAllocationDeciderTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":62,"status":"M"},{"authorDate":"2018-04-26 03:22:53","commitOrder":2,"curCode":"    private ClusterState createInitialClusterState(AllocationService service) {\n        MetaData.Builder metaBuilder = MetaData.builder();\n        metaBuilder.put(IndexMetaData.builder(\"idx\").settings(settings(Version.CURRENT)).numberOfShards(1).numberOfReplicas(0));\n        MetaData metaData = metaBuilder.build();\n        RoutingTable.Builder routingTableBuilder = RoutingTable.builder();\n        routingTableBuilder.addAsNew(metaData.index(\"idx\"));\n\n        RoutingTable routingTable = routingTableBuilder.build();\n        ClusterState clusterState = ClusterState.builder(org.elasticsearch.cluster.ClusterName.CLUSTER_NAME_SETTING\n            .getDefault(Settings.EMPTY))\n            .metaData(metaData).routingTable(routingTable).build();\n        clusterState = ClusterState.builder(clusterState).nodes(DiscoveryNodes.builder().add(newNode(\"node1\")).add(newNode(\"node2\")))\n            .build();\n        RoutingTable prevRoutingTable = routingTable;\n        routingTable = service.reroute(clusterState, \"reroute\").routingTable();\n        clusterState = ClusterState.builder(clusterState).routingTable(routingTable).build();\n\n        assertEquals(prevRoutingTable.index(\"idx\").shards().size(), 1);\n        assertEquals(prevRoutingTable.index(\"idx\").shard(0).shards().get(0).state(), UNASSIGNED);\n\n        assertEquals(routingTable.index(\"idx\").shards().size(), 1);\n        assertEquals(routingTable.index(\"idx\").shard(0).shards().get(0).state(), INITIALIZING);\n        return clusterState;\n    }\n","date":"2018-04-26 03:22:53","endLine":181,"groupId":"38650","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"createInitialClusterState","params":"(AllocationServiceservice)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/6e/34a7510070e59e35367b1d14966147d72094f1.src","preCode":"    private ClusterState createInitialClusterState(AllocationService service) {\n        MetaData.Builder metaBuilder = MetaData.builder();\n        metaBuilder.put(IndexMetaData.builder(\"idx\").settings(settings(Version.CURRENT)).numberOfShards(1).numberOfReplicas(0));\n        MetaData metaData = metaBuilder.build();\n        RoutingTable.Builder routingTableBuilder = RoutingTable.builder();\n        routingTableBuilder.addAsNew(metaData.index(\"idx\"));\n\n        RoutingTable routingTable = routingTableBuilder.build();\n        ClusterState clusterState = ClusterState.builder(org.elasticsearch.cluster.ClusterName.CLUSTER_NAME_SETTING\n            .getDefault(Settings.EMPTY))\n            .metaData(metaData).routingTable(routingTable).build();\n        clusterState = ClusterState.builder(clusterState).nodes(DiscoveryNodes.builder().add(newNode(\"node1\")).add(newNode(\"node2\")))\n            .build();\n        RoutingTable prevRoutingTable = routingTable;\n        routingTable = service.reroute(clusterState, \"reroute\").routingTable();\n        clusterState = ClusterState.builder(clusterState).routingTable(routingTable).build();\n\n        assertEquals(prevRoutingTable.index(\"idx\").shards().size(), 1);\n        assertEquals(prevRoutingTable.index(\"idx\").shard(0).shards().get(0).state(), UNASSIGNED);\n\n        assertEquals(routingTable.index(\"idx\").shards().size(), 1);\n        assertEquals(routingTable.index(\"idx\").shard(0).shards().get(0).state(), INITIALIZING);\n        return clusterState;\n    }\n","realPath":"server/src/test/java/org/elasticsearch/action/admin/cluster/reroute/ClusterRerouteTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":158,"status":"N"}],"commitId":"67e5ad2f532442fc1dd57cf92f9e4cd995082672","commitMessage":"@@@Remove AllocationService.reroute(ClusterState.  String.  boolean) (#44629)\n\nThis commit removes the method AllocationService.reroute(ClusterState.  String.  boolean) \nin favor of AllocationService.reroute(ClusterState.  String).\n\nMotivations are:\n    there are already 3 other reroute methods in this class\n    this method is always called with the debug parameter set to false\n    almost all tests use the method reroute(ClusterState.  String)\n","date":"2019-07-22 23:09:25","modifiedFileCount":"3","status":"M","submitter":"Tanguy Leroux"},{"authorTime":"2020-04-01 03:52:01","codes":[{"authorDate":"2020-04-01 03:52:01","commitOrder":3,"curCode":"    private ClusterState createInitialClusterState() {\n        Metadata.Builder metaBuilder = Metadata.builder();\n        metaBuilder.put(IndexMetadata.builder(\"idx\").settings(settings(Version.CURRENT)).numberOfShards(1).numberOfReplicas(0));\n        Metadata metadata = metaBuilder.build();\n        RoutingTable.Builder routingTableBuilder = RoutingTable.builder();\n        routingTableBuilder.addAsNew(metadata.index(\"idx\"));\n\n        RoutingTable routingTable = routingTableBuilder.build();\n        ClusterState clusterState = ClusterState.builder(ClusterName.CLUSTER_NAME_SETTING.getDefault(Settings.EMPTY))\n            .metadata(metadata).routingTable(routingTable).build();\n        clusterState = ClusterState.builder(clusterState).nodes(DiscoveryNodes.builder().add(newNode(\"node1\")).add(newNode(\"node2\")))\n            .build();\n        RoutingTable prevRoutingTable = routingTable;\n        routingTable = strategy.reroute(clusterState, \"reroute\").routingTable();\n        clusterState = ClusterState.builder(clusterState).routingTable(routingTable).build();\n\n        assertEquals(prevRoutingTable.index(\"idx\").shards().size(), 1);\n        assertEquals(prevRoutingTable.index(\"idx\").shard(0).shards().get(0).state(), UNASSIGNED);\n\n        assertEquals(routingTable.index(\"idx\").shards().size(), 1);\n        assertEquals(routingTable.index(\"idx\").shard(0).shards().get(0).state(), INITIALIZING);\n        return clusterState;\n    }\n","date":"2020-04-01 03:52:01","endLine":84,"groupId":"102219","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"createInitialClusterState","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/60/2c83b93fb6abdd38047b726b49cdea032ea730.src","preCode":"    private ClusterState createInitialClusterState() {\n        MetaData.Builder metaBuilder = MetaData.builder();\n        metaBuilder.put(IndexMetaData.builder(\"idx\").settings(settings(Version.CURRENT)).numberOfShards(1).numberOfReplicas(0));\n        MetaData metaData = metaBuilder.build();\n        RoutingTable.Builder routingTableBuilder = RoutingTable.builder();\n        routingTableBuilder.addAsNew(metaData.index(\"idx\"));\n\n        RoutingTable routingTable = routingTableBuilder.build();\n        ClusterState clusterState = ClusterState.builder(ClusterName.CLUSTER_NAME_SETTING.getDefault(Settings.EMPTY))\n            .metaData(metaData).routingTable(routingTable).build();\n        clusterState = ClusterState.builder(clusterState).nodes(DiscoveryNodes.builder().add(newNode(\"node1\")).add(newNode(\"node2\")))\n            .build();\n        RoutingTable prevRoutingTable = routingTable;\n        routingTable = strategy.reroute(clusterState, \"reroute\").routingTable();\n        clusterState = ClusterState.builder(clusterState).routingTable(routingTable).build();\n\n        assertEquals(prevRoutingTable.index(\"idx\").shards().size(), 1);\n        assertEquals(prevRoutingTable.index(\"idx\").shard(0).shards().get(0).state(), UNASSIGNED);\n\n        assertEquals(routingTable.index(\"idx\").shards().size(), 1);\n        assertEquals(routingTable.index(\"idx\").shard(0).shards().get(0).state(), INITIALIZING);\n        return clusterState;\n    }\n","realPath":"server/src/test/java/org/elasticsearch/cluster/routing/allocation/MaxRetryAllocationDeciderTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":62,"status":"M"},{"authorDate":"2020-04-01 03:52:01","commitOrder":3,"curCode":"    private ClusterState createInitialClusterState(AllocationService service) {\n        Metadata.Builder metaBuilder = Metadata.builder();\n        metaBuilder.put(IndexMetadata.builder(\"idx\").settings(settings(Version.CURRENT)).numberOfShards(1).numberOfReplicas(0));\n        Metadata metadata = metaBuilder.build();\n        RoutingTable.Builder routingTableBuilder = RoutingTable.builder();\n        routingTableBuilder.addAsNew(metadata.index(\"idx\"));\n\n        RoutingTable routingTable = routingTableBuilder.build();\n        ClusterState clusterState = ClusterState.builder(org.elasticsearch.cluster.ClusterName.CLUSTER_NAME_SETTING\n            .getDefault(Settings.EMPTY))\n            .metadata(metadata).routingTable(routingTable).build();\n        clusterState = ClusterState.builder(clusterState).nodes(DiscoveryNodes.builder().add(newNode(\"node1\")).add(newNode(\"node2\")))\n            .build();\n        RoutingTable prevRoutingTable = routingTable;\n        routingTable = service.reroute(clusterState, \"reroute\").routingTable();\n        clusterState = ClusterState.builder(clusterState).routingTable(routingTable).build();\n\n        assertEquals(prevRoutingTable.index(\"idx\").shards().size(), 1);\n        assertEquals(prevRoutingTable.index(\"idx\").shard(0).shards().get(0).state(), UNASSIGNED);\n\n        assertEquals(routingTable.index(\"idx\").shards().size(), 1);\n        assertEquals(routingTable.index(\"idx\").shard(0).shards().get(0).state(), INITIALIZING);\n        return clusterState;\n    }\n","date":"2020-04-01 03:52:01","endLine":180,"groupId":"102219","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"createInitialClusterState","params":"(AllocationServiceservice)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/78/148c65a5f499b0330693230077d2d10d16336c.src","preCode":"    private ClusterState createInitialClusterState(AllocationService service) {\n        MetaData.Builder metaBuilder = MetaData.builder();\n        metaBuilder.put(IndexMetaData.builder(\"idx\").settings(settings(Version.CURRENT)).numberOfShards(1).numberOfReplicas(0));\n        MetaData metaData = metaBuilder.build();\n        RoutingTable.Builder routingTableBuilder = RoutingTable.builder();\n        routingTableBuilder.addAsNew(metaData.index(\"idx\"));\n\n        RoutingTable routingTable = routingTableBuilder.build();\n        ClusterState clusterState = ClusterState.builder(org.elasticsearch.cluster.ClusterName.CLUSTER_NAME_SETTING\n            .getDefault(Settings.EMPTY))\n            .metaData(metaData).routingTable(routingTable).build();\n        clusterState = ClusterState.builder(clusterState).nodes(DiscoveryNodes.builder().add(newNode(\"node1\")).add(newNode(\"node2\")))\n            .build();\n        RoutingTable prevRoutingTable = routingTable;\n        routingTable = service.reroute(clusterState, \"reroute\").routingTable();\n        clusterState = ClusterState.builder(clusterState).routingTable(routingTable).build();\n\n        assertEquals(prevRoutingTable.index(\"idx\").shards().size(), 1);\n        assertEquals(prevRoutingTable.index(\"idx\").shard(0).shards().get(0).state(), UNASSIGNED);\n\n        assertEquals(routingTable.index(\"idx\").shards().size(), 1);\n        assertEquals(routingTable.index(\"idx\").shard(0).shards().get(0).state(), INITIALIZING);\n        return clusterState;\n    }\n","realPath":"server/src/test/java/org/elasticsearch/action/admin/cluster/reroute/ClusterRerouteTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":157,"status":"M"}],"commitId":"95a7eed9aa35f47b228e402508709b5bd6703cf4","commitMessage":"@@@Rename MetaData to Metadata in all of the places (#54519)\n\nThis is a simple naming change PR.  to fix the fact that \"metadata\" is a\nsingle English word.  and for too long we have not followed general\nnaming conventions for it. We are also not consistent about it.  for\nexample.  METADATA instead of META_DATA if we were trying to be\nconsistent with MetaData (although METADATA is correct when considered\nin the context of \"metadata\"). This was a simple find and replace across\nthe code base.  only taking a few minutes to fix this naming issue\nforever.","date":"2020-04-01 03:52:01","modifiedFileCount":"1712","status":"M","submitter":"Jason Tedor"}]
