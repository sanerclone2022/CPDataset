[{"authorTime":"2018-04-26 03:22:53","codes":[{"authorDate":"2018-04-26 03:22:53","commitOrder":1,"curCode":"    public void testTypeLevel() throws Exception {\n        String defaultMapping = Strings.toString(XContentFactory.jsonBuilder().startObject().startObject(\"type\").endObject().endObject());\n\n        DocumentMapper defaultMapper = createIndex(\"test\").mapperService().documentMapperParser().parse(\"type\", new CompressedXContent(defaultMapping));\n\n        ParsedDocument doc = defaultMapper.parse(SourceToParse.source(\"test\", \"type\", \"1\", BytesReference\n                .bytes(XContentFactory.jsonBuilder()\n                        .startObject().startObject(\"type\")\n                        .field(\"test1\", \"value1\")\n                        .field(\"test2\", \"value2\")\n                        .startObject(\"inner\").field(\"inner_field\", \"inner_value\").endObject()\n                        .endObject().endObject()),\n                XContentType.JSON));\n\n        assertThat(doc.rootDoc().get(\"type.test1\"), equalTo(\"value1\"));\n        assertThat(doc.rootDoc().get(\"type.test2\"), equalTo(\"value2\"));\n        assertThat(doc.rootDoc().get(\"type.inner.inner_field\"), equalTo(\"inner_value\"));\n    }\n","date":"2018-04-26 03:22:53","endLine":1106,"groupId":"17576","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testTypeLevel","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/11/f69c738e949d93045fcd94f9dee0b99ddc0359.src","preCode":"    public void testTypeLevel() throws Exception {\n        String defaultMapping = Strings.toString(XContentFactory.jsonBuilder().startObject().startObject(\"type\").endObject().endObject());\n\n        DocumentMapper defaultMapper = createIndex(\"test\").mapperService().documentMapperParser().parse(\"type\", new CompressedXContent(defaultMapping));\n\n        ParsedDocument doc = defaultMapper.parse(SourceToParse.source(\"test\", \"type\", \"1\", BytesReference\n                .bytes(XContentFactory.jsonBuilder()\n                        .startObject().startObject(\"type\")\n                        .field(\"test1\", \"value1\")\n                        .field(\"test2\", \"value2\")\n                        .startObject(\"inner\").field(\"inner_field\", \"inner_value\").endObject()\n                        .endObject().endObject()),\n                XContentType.JSON));\n\n        assertThat(doc.rootDoc().get(\"type.test1\"), equalTo(\"value1\"));\n        assertThat(doc.rootDoc().get(\"type.test2\"), equalTo(\"value2\"));\n        assertThat(doc.rootDoc().get(\"type.inner.inner_field\"), equalTo(\"inner_value\"));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/index/mapper/DocumentParserTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":1089,"status":"B"},{"authorDate":"2018-04-26 03:22:53","commitOrder":1,"curCode":"    public void testNoLevelWithFieldTypeAsObject() throws Exception {\n        String defaultMapping = Strings.toString(XContentFactory.jsonBuilder().startObject().startObject(\"type\").endObject().endObject());\n\n        DocumentMapper defaultMapper = createIndex(\"test\").mapperService().documentMapperParser().parse(\"type\", new CompressedXContent(defaultMapping));\n\n        ParsedDocument doc = defaultMapper.parse(SourceToParse.source(\"test\", \"type\", \"1\", BytesReference\n                .bytes(XContentFactory.jsonBuilder()\n                        .startObject()\n                        .startObject(\"type\").field(\"type_field\", \"type_value\").endObject()\n                        .field(\"test1\", \"value1\")\n                        .field(\"test2\", \"value2\")\n                        .startObject(\"inner\").field(\"inner_field\", \"inner_value\").endObject()\n                        .endObject()),\n                XContentType.JSON));\n\n        \r\n        assertThat(doc.rootDoc().get(\"type.type_field\"), equalTo(\"type_value\"));\n        assertThat(doc.rootDoc().get(\"test1\"), equalTo(\"value1\"));\n        assertThat(doc.rootDoc().get(\"test2\"), equalTo(\"value2\"));\n    }\n","date":"2018-04-26 03:22:53","endLine":1169,"groupId":"17580","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testNoLevelWithFieldTypeAsObject","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/11/f69c738e949d93045fcd94f9dee0b99ddc0359.src","preCode":"    public void testNoLevelWithFieldTypeAsObject() throws Exception {\n        String defaultMapping = Strings.toString(XContentFactory.jsonBuilder().startObject().startObject(\"type\").endObject().endObject());\n\n        DocumentMapper defaultMapper = createIndex(\"test\").mapperService().documentMapperParser().parse(\"type\", new CompressedXContent(defaultMapping));\n\n        ParsedDocument doc = defaultMapper.parse(SourceToParse.source(\"test\", \"type\", \"1\", BytesReference\n                .bytes(XContentFactory.jsonBuilder()\n                        .startObject()\n                        .startObject(\"type\").field(\"type_field\", \"type_value\").endObject()\n                        .field(\"test1\", \"value1\")\n                        .field(\"test2\", \"value2\")\n                        .startObject(\"inner\").field(\"inner_field\", \"inner_value\").endObject()\n                        .endObject()),\n                XContentType.JSON));\n\n        \r\n        assertThat(doc.rootDoc().get(\"type.type_field\"), equalTo(\"type_value\"));\n        assertThat(doc.rootDoc().get(\"test1\"), equalTo(\"value1\"));\n        assertThat(doc.rootDoc().get(\"test2\"), equalTo(\"value2\"));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/index/mapper/DocumentParserTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":1150,"status":"B"}],"commitId":"d74fb9eb4559077e2d20b19a9ed62d9ff825027a","commitMessage":"@@@Opened x-pack ILM code\n","date":"2018-04-26 03:22:53","modifiedFileCount":"0","status":"B","submitter":"Tal Levy"},{"authorTime":"2018-12-25 03:06:50","codes":[{"authorDate":"2018-12-25 03:06:50","commitOrder":2,"curCode":"    public void testTypeLevel() throws Exception {\n        String defaultMapping = Strings.toString(XContentFactory.jsonBuilder().startObject().startObject(\"type\").endObject().endObject());\n\n        DocumentMapper defaultMapper = createIndex(\"test\").mapperService().documentMapperParser()\n            .parse(\"type\", new CompressedXContent(defaultMapping));\n\n        ParsedDocument doc = defaultMapper.parse(new SourceToParse(\"test\", \"type\", \"1\", BytesReference\n                .bytes(XContentFactory.jsonBuilder()\n                        .startObject().startObject(\"type\")\n                        .field(\"test1\", \"value1\")\n                        .field(\"test2\", \"value2\")\n                        .startObject(\"inner\").field(\"inner_field\", \"inner_value\").endObject()\n                        .endObject().endObject()),\n                XContentType.JSON));\n\n        assertThat(doc.rootDoc().get(\"type.test1\"), equalTo(\"value1\"));\n        assertThat(doc.rootDoc().get(\"type.test2\"), equalTo(\"value2\"));\n        assertThat(doc.rootDoc().get(\"type.inner.inner_field\"), equalTo(\"inner_value\"));\n    }\n","date":"2018-12-25 03:06:50","endLine":1165,"groupId":"66660","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testTypeLevel","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/ff/db93474c0e954401f67f66f5529d7452db700a.src","preCode":"    public void testTypeLevel() throws Exception {\n        String defaultMapping = Strings.toString(XContentFactory.jsonBuilder().startObject().startObject(\"type\").endObject().endObject());\n\n        DocumentMapper defaultMapper = createIndex(\"test\").mapperService().documentMapperParser()\n            .parse(\"type\", new CompressedXContent(defaultMapping));\n\n        ParsedDocument doc = defaultMapper.parse(SourceToParse.source(\"test\", \"type\", \"1\", BytesReference\n                .bytes(XContentFactory.jsonBuilder()\n                        .startObject().startObject(\"type\")\n                        .field(\"test1\", \"value1\")\n                        .field(\"test2\", \"value2\")\n                        .startObject(\"inner\").field(\"inner_field\", \"inner_value\").endObject()\n                        .endObject().endObject()),\n                XContentType.JSON));\n\n        assertThat(doc.rootDoc().get(\"type.test1\"), equalTo(\"value1\"));\n        assertThat(doc.rootDoc().get(\"type.test2\"), equalTo(\"value2\"));\n        assertThat(doc.rootDoc().get(\"type.inner.inner_field\"), equalTo(\"inner_value\"));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/index/mapper/DocumentParserTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":1147,"status":"M"},{"authorDate":"2018-12-25 03:06:50","commitOrder":2,"curCode":"    public void testNoLevelWithFieldTypeAsObject() throws Exception {\n        String defaultMapping = Strings.toString(XContentFactory.jsonBuilder().startObject().startObject(\"type\").endObject().endObject());\n\n        DocumentMapper defaultMapper = createIndex(\"test\").mapperService().documentMapperParser()\n            .parse(\"type\", new CompressedXContent(defaultMapping));\n\n        ParsedDocument doc = defaultMapper.parse(new SourceToParse(\"test\", \"type\", \"1\", BytesReference\n                .bytes(XContentFactory.jsonBuilder()\n                        .startObject()\n                        .startObject(\"type\").field(\"type_field\", \"type_value\").endObject()\n                        .field(\"test1\", \"value1\")\n                        .field(\"test2\", \"value2\")\n                        .startObject(\"inner\").field(\"inner_field\", \"inner_value\").endObject()\n                        .endObject()),\n                XContentType.JSON));\n\n        \r\n        assertThat(doc.rootDoc().get(\"type.type_field\"), equalTo(\"type_value\"));\n        assertThat(doc.rootDoc().get(\"test1\"), equalTo(\"value1\"));\n        assertThat(doc.rootDoc().get(\"test2\"), equalTo(\"value2\"));\n    }\n","date":"2018-12-25 03:06:50","endLine":1231,"groupId":"18732","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testNoLevelWithFieldTypeAsObject","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/ff/db93474c0e954401f67f66f5529d7452db700a.src","preCode":"    public void testNoLevelWithFieldTypeAsObject() throws Exception {\n        String defaultMapping = Strings.toString(XContentFactory.jsonBuilder().startObject().startObject(\"type\").endObject().endObject());\n\n        DocumentMapper defaultMapper = createIndex(\"test\").mapperService().documentMapperParser()\n            .parse(\"type\", new CompressedXContent(defaultMapping));\n\n        ParsedDocument doc = defaultMapper.parse(SourceToParse.source(\"test\", \"type\", \"1\", BytesReference\n                .bytes(XContentFactory.jsonBuilder()\n                        .startObject()\n                        .startObject(\"type\").field(\"type_field\", \"type_value\").endObject()\n                        .field(\"test1\", \"value1\")\n                        .field(\"test2\", \"value2\")\n                        .startObject(\"inner\").field(\"inner_field\", \"inner_value\").endObject()\n                        .endObject()),\n                XContentType.JSON));\n\n        \r\n        assertThat(doc.rootDoc().get(\"type.type_field\"), equalTo(\"type_value\"));\n        assertThat(doc.rootDoc().get(\"test1\"), equalTo(\"value1\"));\n        assertThat(doc.rootDoc().get(\"test2\"), equalTo(\"value2\"));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/index/mapper/DocumentParserTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":1211,"status":"M"}],"commitId":"7580d9d925d864b25466d693637b3bd3092d44cf","commitMessage":"@@@Make SourceToParse immutable (#36971)\n\nToday the routing of a SourceToParse is assigned in a separate step\nafter the object is created. We can easily forget to set the routing.\nWith this commit.  the routing must be provided in the constructor of\nSourceToParse.\n\nRelates #36921","date":"2018-12-25 03:06:50","modifiedFileCount":"66","status":"M","submitter":"Nhat Nguyen"},{"authorTime":"2019-10-15 16:05:29","codes":[{"authorDate":"2019-10-15 16:05:29","commitOrder":3,"curCode":"    public void testTypeLevel() throws Exception {\n        String defaultMapping = Strings.toString(XContentFactory.jsonBuilder().startObject().startObject(\"type\").endObject().endObject());\n\n        DocumentMapper defaultMapper = createIndex(\"test\").mapperService().documentMapperParser()\n            .parse(\"type\", new CompressedXContent(defaultMapping));\n\n        ParsedDocument doc = defaultMapper.parse(new SourceToParse(\"test\", \"1\", BytesReference\n                .bytes(XContentFactory.jsonBuilder()\n                        .startObject().startObject(\"type\")\n                        .field(\"test1\", \"value1\")\n                        .field(\"test2\", \"value2\")\n                        .startObject(\"inner\").field(\"inner_field\", \"inner_value\").endObject()\n                        .endObject().endObject()),\n                XContentType.JSON));\n\n        assertThat(doc.rootDoc().get(\"type.test1\"), equalTo(\"value1\"));\n        assertThat(doc.rootDoc().get(\"type.test2\"), equalTo(\"value2\"));\n        assertThat(doc.rootDoc().get(\"type.inner.inner_field\"), equalTo(\"inner_value\"));\n    }\n","date":"2019-10-15 16:05:29","endLine":1275,"groupId":"6407","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testTypeLevel","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/d8/8518d073d058bcafb3785a743b3df978586b3d.src","preCode":"    public void testTypeLevel() throws Exception {\n        String defaultMapping = Strings.toString(XContentFactory.jsonBuilder().startObject().startObject(\"type\").endObject().endObject());\n\n        DocumentMapper defaultMapper = createIndex(\"test\").mapperService().documentMapperParser()\n            .parse(\"type\", new CompressedXContent(defaultMapping));\n\n        ParsedDocument doc = defaultMapper.parse(new SourceToParse(\"test\", \"type\", \"1\", BytesReference\n                .bytes(XContentFactory.jsonBuilder()\n                        .startObject().startObject(\"type\")\n                        .field(\"test1\", \"value1\")\n                        .field(\"test2\", \"value2\")\n                        .startObject(\"inner\").field(\"inner_field\", \"inner_value\").endObject()\n                        .endObject().endObject()),\n                XContentType.JSON));\n\n        assertThat(doc.rootDoc().get(\"type.test1\"), equalTo(\"value1\"));\n        assertThat(doc.rootDoc().get(\"type.test2\"), equalTo(\"value2\"));\n        assertThat(doc.rootDoc().get(\"type.inner.inner_field\"), equalTo(\"inner_value\"));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/index/mapper/DocumentParserTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":1257,"status":"M"},{"authorDate":"2019-10-15 16:05:29","commitOrder":3,"curCode":"    public void testNoLevelWithFieldTypeAsObject() throws Exception {\n        String defaultMapping = Strings.toString(XContentFactory.jsonBuilder().startObject().startObject(\"type\").endObject().endObject());\n\n        DocumentMapper defaultMapper = createIndex(\"test\").mapperService().documentMapperParser()\n            .parse(\"type\", new CompressedXContent(defaultMapping));\n\n        ParsedDocument doc = defaultMapper.parse(new SourceToParse(\"test\", \"1\", BytesReference\n                .bytes(XContentFactory.jsonBuilder()\n                        .startObject()\n                        .startObject(\"type\").field(\"type_field\", \"type_value\").endObject()\n                        .field(\"test1\", \"value1\")\n                        .field(\"test2\", \"value2\")\n                        .startObject(\"inner\").field(\"inner_field\", \"inner_value\").endObject()\n                        .endObject()),\n                XContentType.JSON));\n\n        \r\n        assertThat(doc.rootDoc().get(\"type.type_field\"), equalTo(\"type_value\"));\n        assertThat(doc.rootDoc().get(\"test1\"), equalTo(\"value1\"));\n        assertThat(doc.rootDoc().get(\"test2\"), equalTo(\"value2\"));\n    }\n","date":"2019-10-15 16:05:29","endLine":1341,"groupId":"6411","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testNoLevelWithFieldTypeAsObject","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/d8/8518d073d058bcafb3785a743b3df978586b3d.src","preCode":"    public void testNoLevelWithFieldTypeAsObject() throws Exception {\n        String defaultMapping = Strings.toString(XContentFactory.jsonBuilder().startObject().startObject(\"type\").endObject().endObject());\n\n        DocumentMapper defaultMapper = createIndex(\"test\").mapperService().documentMapperParser()\n            .parse(\"type\", new CompressedXContent(defaultMapping));\n\n        ParsedDocument doc = defaultMapper.parse(new SourceToParse(\"test\", \"type\", \"1\", BytesReference\n                .bytes(XContentFactory.jsonBuilder()\n                        .startObject()\n                        .startObject(\"type\").field(\"type_field\", \"type_value\").endObject()\n                        .field(\"test1\", \"value1\")\n                        .field(\"test2\", \"value2\")\n                        .startObject(\"inner\").field(\"inner_field\", \"inner_value\").endObject()\n                        .endObject()),\n                XContentType.JSON));\n\n        \r\n        assertThat(doc.rootDoc().get(\"type.type_field\"), equalTo(\"type_value\"));\n        assertThat(doc.rootDoc().get(\"test1\"), equalTo(\"value1\"));\n        assertThat(doc.rootDoc().get(\"test2\"), equalTo(\"value2\"));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/index/mapper/DocumentParserTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":1321,"status":"M"}],"commitId":"6531369f11d159896957b75a7eae0b7da214d01a","commitMessage":"@@@Don't persist type information to translog (#47229)\n\nWe no longer need to store type information in the translog.  given that an index\ncan only have a single type.\n\nRelates to #41059","date":"2019-10-15 16:05:29","modifiedFileCount":"100","status":"M","submitter":"Alan Woodward"},{"authorTime":"2020-09-09 00:25:01","codes":[{"authorDate":"2020-09-09 00:25:01","commitOrder":4,"curCode":"    public void testTypeLevel() throws Exception {\n        DocumentMapper defaultMapper = createDocumentMapper(mapping(b -> {}));\n\n        ParsedDocument doc = defaultMapper.parse(source(b -> {\n            b.startObject(\"type\");\n            {\n                b.field(\"test1\", \"value1\");\n                b.field(\"test2\", \"value2\");\n                b.startObject(\"inner\").field(\"inner_field\", \"inner_value\").endObject();\n            }\n            b.endObject();\n        }));\n\n        assertThat(doc.rootDoc().get(\"type.test1\"), equalTo(\"value1\"));\n        assertThat(doc.rootDoc().get(\"type.test2\"), equalTo(\"value2\"));\n        assertThat(doc.rootDoc().get(\"type.inner.inner_field\"), equalTo(\"inner_value\"));\n    }\n","date":"2020-09-09 00:25:01","endLine":1057,"groupId":"102861","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"testTypeLevel","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/39/40a9ae572a6047475b9316c7c3d4e34d1d3bca.src","preCode":"    public void testTypeLevel() throws Exception {\n        String defaultMapping = Strings.toString(XContentFactory.jsonBuilder().startObject().startObject(\"type\").endObject().endObject());\n\n        DocumentMapper defaultMapper = createIndex(\"test\").mapperService().documentMapperParser()\n            .parse(\"type\", new CompressedXContent(defaultMapping));\n\n        ParsedDocument doc = defaultMapper.parse(new SourceToParse(\"test\", \"1\", BytesReference\n                .bytes(XContentFactory.jsonBuilder()\n                        .startObject().startObject(\"type\")\n                        .field(\"test1\", \"value1\")\n                        .field(\"test2\", \"value2\")\n                        .startObject(\"inner\").field(\"inner_field\", \"inner_value\").endObject()\n                        .endObject().endObject()),\n                XContentType.JSON));\n\n        assertThat(doc.rootDoc().get(\"type.test1\"), equalTo(\"value1\"));\n        assertThat(doc.rootDoc().get(\"type.test2\"), equalTo(\"value2\"));\n        assertThat(doc.rootDoc().get(\"type.inner.inner_field\"), equalTo(\"inner_value\"));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/index/mapper/DocumentParserTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":1041,"status":"M"},{"authorDate":"2020-09-09 00:25:01","commitOrder":4,"curCode":"    public void testNoLevelWithFieldTypeAsObject() throws Exception {\n        DocumentMapper defaultMapper = createDocumentMapper(mapping(b -> {}));\n\n        ParsedDocument doc = defaultMapper.parse(source(b -> {\n            b.startObject(\"type\").field(\"type_field\", \"type_value\").endObject();\n            b.field(\"test1\", \"value1\");\n            b.field(\"test2\", \"value2\");\n            b.startObject(\"inner\").field(\"inner_field\", \"inner_value\").endObject();\n        }));\n\n        \r\n        assertThat(doc.rootDoc().get(\"type.type_field\"), equalTo(\"type_value\"));\n        assertThat(doc.rootDoc().get(\"test1\"), equalTo(\"value1\"));\n        assertThat(doc.rootDoc().get(\"test2\"), equalTo(\"value2\"));\n    }\n","date":"2020-09-09 00:25:01","endLine":1110,"groupId":"102861","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"testNoLevelWithFieldTypeAsObject","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/39/40a9ae572a6047475b9316c7c3d4e34d1d3bca.src","preCode":"    public void testNoLevelWithFieldTypeAsObject() throws Exception {\n        String defaultMapping = Strings.toString(XContentFactory.jsonBuilder().startObject().startObject(\"type\").endObject().endObject());\n\n        DocumentMapper defaultMapper = createIndex(\"test\").mapperService().documentMapperParser()\n            .parse(\"type\", new CompressedXContent(defaultMapping));\n\n        ParsedDocument doc = defaultMapper.parse(new SourceToParse(\"test\", \"1\", BytesReference\n                .bytes(XContentFactory.jsonBuilder()\n                        .startObject()\n                        .startObject(\"type\").field(\"type_field\", \"type_value\").endObject()\n                        .field(\"test1\", \"value1\")\n                        .field(\"test2\", \"value2\")\n                        .startObject(\"inner\").field(\"inner_field\", \"inner_value\").endObject()\n                        .endObject()),\n                XContentType.JSON));\n\n        \r\n        assertThat(doc.rootDoc().get(\"type.type_field\"), equalTo(\"type_value\"));\n        assertThat(doc.rootDoc().get(\"test1\"), equalTo(\"value1\"));\n        assertThat(doc.rootDoc().get(\"test2\"), equalTo(\"value2\"));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/index/mapper/DocumentParserTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":1096,"status":"M"}],"commitId":"98590517f5ecb504874ca24c9d01b5d092b79360","commitMessage":"@@@Convert some more mapping tests to MapperServiceTestCase (#62089)\n\nWe don't need to extend ESSingleNodeTestCase for all these tests.","date":"2020-09-09 00:25:01","modifiedFileCount":"7","status":"M","submitter":"Alan Woodward"}]
