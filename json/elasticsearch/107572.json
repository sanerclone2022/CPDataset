[{"authorTime":"2020-03-27 21:56:29","codes":[{"authorDate":"2020-03-24 20:09:59","commitOrder":3,"curCode":"    public void putComponentTemplate(final String cause, final boolean create, final String name, final TimeValue masterTimeout,\n                                     final ComponentTemplate template, final ActionListener<AcknowledgedResponse> listener) {\n        clusterService.submitStateUpdateTask(\"create-component-template [\" + name + \"], cause [\" + cause + \"]\",\n            new ClusterStateUpdateTask(Priority.URGENT) {\n\n                @Override\n                public TimeValue timeout() {\n                    return masterTimeout;\n                }\n\n                @Override\n                public void onFailure(String source, Exception e) {\n                    listener.onFailure(e);\n                }\n\n                @Override\n                public ClusterState execute(ClusterState currentState) throws Exception {\n                    return addComponentTemplate(currentState, create, name, template);\n                }\n\n                @Override\n                public void clusterStateProcessed(String source, ClusterState oldState, ClusterState newState) {\n                    listener.onResponse(new AcknowledgedResponse(true));\n                }\n            });\n    }\n","date":"2020-03-24 20:09:59","endLine":167,"groupId":"55042","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"putComponentTemplate","params":"(finalStringcause@finalbooleancreate@finalStringname@finalTimeValuemasterTimeout@finalComponentTemplatetemplate@finalActionListener<AcknowledgedResponse>listener)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/21/b7333eeace7a836e82287147870a0cea363abf.src","preCode":"    public void putComponentTemplate(final String cause, final boolean create, final String name, final TimeValue masterTimeout,\n                                     final ComponentTemplate template, final ActionListener<AcknowledgedResponse> listener) {\n        clusterService.submitStateUpdateTask(\"create-component-template [\" + name + \"], cause [\" + cause + \"]\",\n            new ClusterStateUpdateTask(Priority.URGENT) {\n\n                @Override\n                public TimeValue timeout() {\n                    return masterTimeout;\n                }\n\n                @Override\n                public void onFailure(String source, Exception e) {\n                    listener.onFailure(e);\n                }\n\n                @Override\n                public ClusterState execute(ClusterState currentState) throws Exception {\n                    return addComponentTemplate(currentState, create, name, template);\n                }\n\n                @Override\n                public void clusterStateProcessed(String source, ClusterState oldState, ClusterState newState) {\n                    listener.onResponse(new AcknowledgedResponse(true));\n                }\n            });\n    }\n","realPath":"server/src/main/java/org/elasticsearch/cluster/metadata/MetaDataIndexTemplateService.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":142,"status":"NB"},{"authorDate":"2020-03-27 21:56:29","commitOrder":3,"curCode":"    public void putIndexTemplateV2(final String cause, final boolean create, final String name, final TimeValue masterTimeout,\n                                   final IndexTemplateV2 template, final ActionListener<AcknowledgedResponse> listener) {\n        clusterService.submitStateUpdateTask(\"create-index-template-v2 [\" + name + \"], cause [\" + cause + \"]\",\n            new ClusterStateUpdateTask(Priority.URGENT) {\n\n                @Override\n                public TimeValue timeout() {\n                    return masterTimeout;\n                }\n\n                @Override\n                public void onFailure(String source, Exception e) {\n                    listener.onFailure(e);\n                }\n\n                @Override\n                public ClusterState execute(ClusterState currentState) {\n                    return addIndexTemplateV2(currentState, create, name, template);\n                }\n\n                @Override\n                public void clusterStateProcessed(String source, ClusterState oldState, ClusterState newState) {\n                    listener.onResponse(new AcknowledgedResponse(true));\n                }\n            });\n    }\n","date":"2020-03-27 21:56:29","endLine":266,"groupId":"55046","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"putIndexTemplateV2","params":"(finalStringcause@finalbooleancreate@finalStringname@finalTimeValuemasterTimeout@finalIndexTemplateV2template@finalActionListener<AcknowledgedResponse>listener)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/a0/d3acd0a1b0eae125cb89d77cd728819d41aaa4.src","preCode":"    public void putIndexTemplateV2(final String cause, final boolean create, final String name, final TimeValue masterTimeout,\n                                   final IndexTemplateV2 template, final ActionListener<AcknowledgedResponse> listener) {\n        clusterService.submitStateUpdateTask(\"create-index-template-v2 [\" + name + \"], cause [\" + cause + \"]\",\n            new ClusterStateUpdateTask(Priority.URGENT) {\n\n                @Override\n                public TimeValue timeout() {\n                    return masterTimeout;\n                }\n\n                @Override\n                public void onFailure(String source, Exception e) {\n                    listener.onFailure(e);\n                }\n\n                @Override\n                public ClusterState execute(ClusterState currentState) {\n                    return addIndexTemplateV2(currentState, create, name, template);\n                }\n\n                @Override\n                public void clusterStateProcessed(String source, ClusterState oldState, ClusterState newState) {\n                    listener.onResponse(new AcknowledgedResponse(true));\n                }\n            });\n    }\n","realPath":"server/src/main/java/org/elasticsearch/cluster/metadata/MetaDataIndexTemplateService.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":241,"status":"B"}],"commitId":"e89e916738ff132cd2b2be7da06f5dd3a38b14ca","commitMessage":"@@@Add REST APIs for IndexTemplateV2Metadata CRUD (#54039)\n\n* Add REST APIs for IndexTemplateV2Metadata CRUD\n\nThis commit adds the get/put/delete APIs for interacting with the now v2 versions of index\ntemplates.\n\nThese APIs are behind the existing `es.itv2_feature_flag_registered` system property feature flag.\n\nRelates to #53101\n\n* Add exceptions for HLRC tests\n\n* Add skips for 7.x versions\n\n* Use index_template instead of template_v2 in action names\n\n* Add test for MetaDataIndexTemplateService.addIndexTemplateV2\n\n* Move removal to static method and add test\n\n* Add unit tests for request classes (implement hashCode & equals)\n\nCo-authored-by: Elastic Machine <elasticmachine@users.noreply.github.com>","date":"2020-03-27 21:56:29","modifiedFileCount":"5","status":"M","submitter":"Lee Hinman"},{"authorTime":"2020-04-03 23:34:50","codes":[{"authorDate":"2020-03-24 20:09:59","commitOrder":4,"curCode":"    public void putComponentTemplate(final String cause, final boolean create, final String name, final TimeValue masterTimeout,\n                                     final ComponentTemplate template, final ActionListener<AcknowledgedResponse> listener) {\n        clusterService.submitStateUpdateTask(\"create-component-template [\" + name + \"], cause [\" + cause + \"]\",\n            new ClusterStateUpdateTask(Priority.URGENT) {\n\n                @Override\n                public TimeValue timeout() {\n                    return masterTimeout;\n                }\n\n                @Override\n                public void onFailure(String source, Exception e) {\n                    listener.onFailure(e);\n                }\n\n                @Override\n                public ClusterState execute(ClusterState currentState) throws Exception {\n                    return addComponentTemplate(currentState, create, name, template);\n                }\n\n                @Override\n                public void clusterStateProcessed(String source, ClusterState oldState, ClusterState newState) {\n                    listener.onResponse(new AcknowledgedResponse(true));\n                }\n            });\n    }\n","date":"2020-03-24 20:09:59","endLine":167,"groupId":"55042","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"putComponentTemplate","params":"(finalStringcause@finalbooleancreate@finalStringname@finalTimeValuemasterTimeout@finalComponentTemplatetemplate@finalActionListener<AcknowledgedResponse>listener)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/21/b7333eeace7a836e82287147870a0cea363abf.src","preCode":"    public void putComponentTemplate(final String cause, final boolean create, final String name, final TimeValue masterTimeout,\n                                     final ComponentTemplate template, final ActionListener<AcknowledgedResponse> listener) {\n        clusterService.submitStateUpdateTask(\"create-component-template [\" + name + \"], cause [\" + cause + \"]\",\n            new ClusterStateUpdateTask(Priority.URGENT) {\n\n                @Override\n                public TimeValue timeout() {\n                    return masterTimeout;\n                }\n\n                @Override\n                public void onFailure(String source, Exception e) {\n                    listener.onFailure(e);\n                }\n\n                @Override\n                public ClusterState execute(ClusterState currentState) throws Exception {\n                    return addComponentTemplate(currentState, create, name, template);\n                }\n\n                @Override\n                public void clusterStateProcessed(String source, ClusterState oldState, ClusterState newState) {\n                    listener.onResponse(new AcknowledgedResponse(true));\n                }\n            });\n    }\n","realPath":"server/src/main/java/org/elasticsearch/cluster/metadata/MetaDataIndexTemplateService.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":142,"status":"N"},{"authorDate":"2020-04-03 23:34:50","commitOrder":4,"curCode":"    public void putIndexTemplateV2(final String cause, final boolean create, final String name, final TimeValue masterTimeout,\n                                   final IndexTemplateV2 template, final ActionListener<AcknowledgedResponse> listener) {\n        clusterService.submitStateUpdateTask(\"create-index-template-v2 [\" + name + \"], cause [\" + cause + \"]\",\n            new ClusterStateUpdateTask(Priority.URGENT) {\n\n                @Override\n                public TimeValue timeout() {\n                    return masterTimeout;\n                }\n\n                @Override\n                public void onFailure(String source, Exception e) {\n                    listener.onFailure(e);\n                }\n\n                @Override\n                public ClusterState execute(ClusterState currentState) throws Exception {\n                    return addIndexTemplateV2(currentState, create, name, template);\n                }\n\n                @Override\n                public void clusterStateProcessed(String source, ClusterState oldState, ClusterState newState) {\n                    listener.onResponse(new AcknowledgedResponse(true));\n                }\n            });\n    }\n","date":"2020-04-03 23:34:50","endLine":299,"groupId":"55046","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"putIndexTemplateV2","params":"(finalStringcause@finalbooleancreate@finalStringname@finalTimeValuemasterTimeout@finalIndexTemplateV2template@finalActionListener<AcknowledgedResponse>listener)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/c3/96000d863f2ad85ad55df87511d8f591d30f38.src","preCode":"    public void putIndexTemplateV2(final String cause, final boolean create, final String name, final TimeValue masterTimeout,\n                                   final IndexTemplateV2 template, final ActionListener<AcknowledgedResponse> listener) {\n        clusterService.submitStateUpdateTask(\"create-index-template-v2 [\" + name + \"], cause [\" + cause + \"]\",\n            new ClusterStateUpdateTask(Priority.URGENT) {\n\n                @Override\n                public TimeValue timeout() {\n                    return masterTimeout;\n                }\n\n                @Override\n                public void onFailure(String source, Exception e) {\n                    listener.onFailure(e);\n                }\n\n                @Override\n                public ClusterState execute(ClusterState currentState) {\n                    return addIndexTemplateV2(currentState, create, name, template);\n                }\n\n                @Override\n                public void clusterStateProcessed(String source, ClusterState oldState, ClusterState newState) {\n                    listener.onResponse(new AcknowledgedResponse(true));\n                }\n            });\n    }\n","realPath":"server/src/main/java/org/elasticsearch/cluster/metadata/MetadataIndexTemplateService.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":274,"status":"M"}],"commitId":"9f9ade7dcb04c1ffc66e92357f6cd32721dcda38","commitMessage":"@@@Use V2 index templates during index creation (#54669)\n\n* Use V2 index templates during index creation\n\nThis commit changes our index creation code to use (and favor!) V2 index templates during index\ncreation. The creation precedence goes like so.  in order of precedence:\n\n- Existing source `IndexMetadata` - for example.  when recovering from a peer or a shrink/split/clone\n  where index templates should not be applied\n- A matching V2 index template.  if one is found\n  - When a V2 template is found.  all component templates (in the `composed_of` field) are applied\n    in the order that they appear.  with the index template having the 2nd highest precedence (the\n    create index request always has the top priority when it comes to index settings)\n- All matching V1 templates (the old style)\n\nThis also adds index template validation when `PUT`-ing a new v2 index template (because this was\nrequired) and ensures that all index and component templates specify *no* top-level mapping type (it\nis automatically added when the template is added to the cluster state).\n\nThis does not yet implement fine-grained component template merging of mappings.  where we favor\nmerging only a single field's configuration.  that will be done in subsequent work.\n\nThis also keeps the existing hidden index behavior present for v1 templates.  where a hidden index\nwill match v2 index templates unless they are global (`*`) templates.\n\nRelates to #53101","date":"2020-04-03 23:34:50","modifiedFileCount":"11","status":"M","submitter":"Lee Hinman"},{"authorTime":"2020-04-21 18:23:54","codes":[{"authorDate":"2020-03-24 20:09:59","commitOrder":5,"curCode":"    public void putComponentTemplate(final String cause, final boolean create, final String name, final TimeValue masterTimeout,\n                                     final ComponentTemplate template, final ActionListener<AcknowledgedResponse> listener) {\n        clusterService.submitStateUpdateTask(\"create-component-template [\" + name + \"], cause [\" + cause + \"]\",\n            new ClusterStateUpdateTask(Priority.URGENT) {\n\n                @Override\n                public TimeValue timeout() {\n                    return masterTimeout;\n                }\n\n                @Override\n                public void onFailure(String source, Exception e) {\n                    listener.onFailure(e);\n                }\n\n                @Override\n                public ClusterState execute(ClusterState currentState) throws Exception {\n                    return addComponentTemplate(currentState, create, name, template);\n                }\n\n                @Override\n                public void clusterStateProcessed(String source, ClusterState oldState, ClusterState newState) {\n                    listener.onResponse(new AcknowledgedResponse(true));\n                }\n            });\n    }\n","date":"2020-03-24 20:09:59","endLine":167,"groupId":"55042","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"putComponentTemplate","params":"(finalStringcause@finalbooleancreate@finalStringname@finalTimeValuemasterTimeout@finalComponentTemplatetemplate@finalActionListener<AcknowledgedResponse>listener)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/21/b7333eeace7a836e82287147870a0cea363abf.src","preCode":"    public void putComponentTemplate(final String cause, final boolean create, final String name, final TimeValue masterTimeout,\n                                     final ComponentTemplate template, final ActionListener<AcknowledgedResponse> listener) {\n        clusterService.submitStateUpdateTask(\"create-component-template [\" + name + \"], cause [\" + cause + \"]\",\n            new ClusterStateUpdateTask(Priority.URGENT) {\n\n                @Override\n                public TimeValue timeout() {\n                    return masterTimeout;\n                }\n\n                @Override\n                public void onFailure(String source, Exception e) {\n                    listener.onFailure(e);\n                }\n\n                @Override\n                public ClusterState execute(ClusterState currentState) throws Exception {\n                    return addComponentTemplate(currentState, create, name, template);\n                }\n\n                @Override\n                public void clusterStateProcessed(String source, ClusterState oldState, ClusterState newState) {\n                    listener.onResponse(new AcknowledgedResponse(true));\n                }\n            });\n    }\n","realPath":"server/src/main/java/org/elasticsearch/cluster/metadata/MetaDataIndexTemplateService.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":142,"status":"N"},{"authorDate":"2020-04-21 18:23:54","commitOrder":5,"curCode":"    public void putIndexTemplateV2(final String cause, final boolean create, final String name, final TimeValue masterTimeout,\n                                   final IndexTemplateV2 template, final ActionListener<AcknowledgedResponse> listener) {\n        validateV2TemplateRequest(clusterService.state().metadata(), name, template);\n        clusterService.submitStateUpdateTask(\"create-index-template-v2 [\" + name + \"], cause [\" + cause + \"]\",\n            new ClusterStateUpdateTask(Priority.URGENT) {\n\n                @Override\n                public TimeValue timeout() {\n                    return masterTimeout;\n                }\n\n                @Override\n                public void onFailure(String source, Exception e) {\n                    listener.onFailure(e);\n                }\n\n                @Override\n                public ClusterState execute(ClusterState currentState) throws Exception {\n                    return addIndexTemplateV2(currentState, create, name, template);\n                }\n\n                @Override\n                public void clusterStateProcessed(String source, ClusterState oldState, ClusterState newState) {\n                    listener.onResponse(new AcknowledgedResponse(true));\n                }\n            });\n    }\n","date":"2020-04-21 18:23:54","endLine":323,"groupId":"55046","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"putIndexTemplateV2","params":"(finalStringcause@finalbooleancreate@finalStringname@finalTimeValuemasterTimeout@finalIndexTemplateV2template@finalActionListener<AcknowledgedResponse>listener)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/d8/194b171b1b4107d0db47d4eb63d663dfd89295.src","preCode":"    public void putIndexTemplateV2(final String cause, final boolean create, final String name, final TimeValue masterTimeout,\n                                   final IndexTemplateV2 template, final ActionListener<AcknowledgedResponse> listener) {\n        clusterService.submitStateUpdateTask(\"create-index-template-v2 [\" + name + \"], cause [\" + cause + \"]\",\n            new ClusterStateUpdateTask(Priority.URGENT) {\n\n                @Override\n                public TimeValue timeout() {\n                    return masterTimeout;\n                }\n\n                @Override\n                public void onFailure(String source, Exception e) {\n                    listener.onFailure(e);\n                }\n\n                @Override\n                public ClusterState execute(ClusterState currentState) throws Exception {\n                    return addIndexTemplateV2(currentState, create, name, template);\n                }\n\n                @Override\n                public void clusterStateProcessed(String source, ClusterState oldState, ClusterState newState) {\n                    listener.onResponse(new AcknowledgedResponse(true));\n                }\n            });\n    }\n","realPath":"server/src/main/java/org/elasticsearch/cluster/metadata/MetadataIndexTemplateService.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":297,"status":"M"}],"commitId":"2e768981809887649f49d265d039f056985f7e6a","commitMessage":"@@@Validate global V2 templates don't set index.hidden (#55010)\n\nValidate adding global V2 templates don't configure the index.hidden setting.\nThis also prevents updating the component template to add the index.hidden\nsetting if that component template is referenced by a global index template.\n\n","date":"2020-04-21 18:23:54","modifiedFileCount":"4","status":"M","submitter":"Andrei Dan"},{"authorTime":"2020-05-27 23:32:10","codes":[{"authorDate":"2020-03-24 20:09:59","commitOrder":6,"curCode":"    public void putComponentTemplate(final String cause, final boolean create, final String name, final TimeValue masterTimeout,\n                                     final ComponentTemplate template, final ActionListener<AcknowledgedResponse> listener) {\n        clusterService.submitStateUpdateTask(\"create-component-template [\" + name + \"], cause [\" + cause + \"]\",\n            new ClusterStateUpdateTask(Priority.URGENT) {\n\n                @Override\n                public TimeValue timeout() {\n                    return masterTimeout;\n                }\n\n                @Override\n                public void onFailure(String source, Exception e) {\n                    listener.onFailure(e);\n                }\n\n                @Override\n                public ClusterState execute(ClusterState currentState) throws Exception {\n                    return addComponentTemplate(currentState, create, name, template);\n                }\n\n                @Override\n                public void clusterStateProcessed(String source, ClusterState oldState, ClusterState newState) {\n                    listener.onResponse(new AcknowledgedResponse(true));\n                }\n            });\n    }\n","date":"2020-03-24 20:09:59","endLine":167,"groupId":"55042","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"putComponentTemplate","params":"(finalStringcause@finalbooleancreate@finalStringname@finalTimeValuemasterTimeout@finalComponentTemplatetemplate@finalActionListener<AcknowledgedResponse>listener)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/21/b7333eeace7a836e82287147870a0cea363abf.src","preCode":"    public void putComponentTemplate(final String cause, final boolean create, final String name, final TimeValue masterTimeout,\n                                     final ComponentTemplate template, final ActionListener<AcknowledgedResponse> listener) {\n        clusterService.submitStateUpdateTask(\"create-component-template [\" + name + \"], cause [\" + cause + \"]\",\n            new ClusterStateUpdateTask(Priority.URGENT) {\n\n                @Override\n                public TimeValue timeout() {\n                    return masterTimeout;\n                }\n\n                @Override\n                public void onFailure(String source, Exception e) {\n                    listener.onFailure(e);\n                }\n\n                @Override\n                public ClusterState execute(ClusterState currentState) throws Exception {\n                    return addComponentTemplate(currentState, create, name, template);\n                }\n\n                @Override\n                public void clusterStateProcessed(String source, ClusterState oldState, ClusterState newState) {\n                    listener.onResponse(new AcknowledgedResponse(true));\n                }\n            });\n    }\n","realPath":"server/src/main/java/org/elasticsearch/cluster/metadata/MetaDataIndexTemplateService.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":142,"status":"N"},{"authorDate":"2020-05-27 23:32:10","commitOrder":6,"curCode":"    public void putIndexTemplateV2(final String cause, final boolean create, final String name, final TimeValue masterTimeout,\n                                   final ComposableIndexTemplate template, final ActionListener<AcknowledgedResponse> listener) {\n        validateV2TemplateRequest(clusterService.state().metadata(), name, template);\n        clusterService.submitStateUpdateTask(\"create-index-template-v2 [\" + name + \"], cause [\" + cause + \"]\",\n            new ClusterStateUpdateTask(Priority.URGENT) {\n\n                @Override\n                public TimeValue timeout() {\n                    return masterTimeout;\n                }\n\n                @Override\n                public void onFailure(String source, Exception e) {\n                    listener.onFailure(e);\n                }\n\n                @Override\n                public ClusterState execute(ClusterState currentState) throws Exception {\n                    return addIndexTemplateV2(currentState, create, name, template);\n                }\n\n                @Override\n                public void clusterStateProcessed(String source, ClusterState oldState, ClusterState newState) {\n                    listener.onResponse(new AcknowledgedResponse(true));\n                }\n            });\n    }\n","date":"2020-05-27 23:32:10","endLine":353,"groupId":"55046","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"putIndexTemplateV2","params":"(finalStringcause@finalbooleancreate@finalStringname@finalTimeValuemasterTimeout@finalComposableIndexTemplatetemplate@finalActionListener<AcknowledgedResponse>listener)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/83/5219b54345c7177f4c74456f31d65668757658.src","preCode":"    public void putIndexTemplateV2(final String cause, final boolean create, final String name, final TimeValue masterTimeout,\n                                   final IndexTemplateV2 template, final ActionListener<AcknowledgedResponse> listener) {\n        validateV2TemplateRequest(clusterService.state().metadata(), name, template);\n        clusterService.submitStateUpdateTask(\"create-index-template-v2 [\" + name + \"], cause [\" + cause + \"]\",\n            new ClusterStateUpdateTask(Priority.URGENT) {\n\n                @Override\n                public TimeValue timeout() {\n                    return masterTimeout;\n                }\n\n                @Override\n                public void onFailure(String source, Exception e) {\n                    listener.onFailure(e);\n                }\n\n                @Override\n                public ClusterState execute(ClusterState currentState) throws Exception {\n                    return addIndexTemplateV2(currentState, create, name, template);\n                }\n\n                @Override\n                public void clusterStateProcessed(String source, ClusterState oldState, ClusterState newState) {\n                    listener.onResponse(new AcknowledgedResponse(true));\n                }\n            });\n    }\n","realPath":"server/src/main/java/org/elasticsearch/cluster/metadata/MetadataIndexTemplateService.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":327,"status":"M"}],"commitId":"4dc32611fcdc4ffc6ad27373103b636ee53941a8","commitMessage":"@@@Rename template V2 classes to ComposableTemplate (#57183)\n\nThis PR changes the name of the Index Template V2 classes to \"Composable Templates\".  it also ensures there are no mentions of \"V2\" in the documentation or error/warning messages. V1 templates are referred to as \"legacy\" templates.\n\nResolves #56609","date":"2020-05-27 23:32:10","modifiedFileCount":"28","status":"M","submitter":"Lee Hinman"},{"authorTime":"2020-10-09 14:52:34","codes":[{"authorDate":"2020-10-09 14:52:34","commitOrder":7,"curCode":"    public void putComponentTemplate(final String cause, final boolean create, final String name, final TimeValue masterTimeout,\n                                     final ComponentTemplate template, final ActionListener<AcknowledgedResponse> listener) {\n        clusterService.submitStateUpdateTask(\"create-component-template [\" + name + \"], cause [\" + cause + \"]\",\n            new ClusterStateUpdateTask(Priority.URGENT) {\n\n                @Override\n                public TimeValue timeout() {\n                    return masterTimeout;\n                }\n\n                @Override\n                public void onFailure(String source, Exception e) {\n                    listener.onFailure(e);\n                }\n\n                @Override\n                public ClusterState execute(ClusterState currentState) throws Exception {\n                    return addComponentTemplate(currentState, create, name, template);\n                }\n\n                @Override\n                public void clusterStateProcessed(String source, ClusterState oldState, ClusterState newState) {\n                    listener.onResponse(AcknowledgedResponse.TRUE);\n                }\n            });\n    }\n","date":"2020-10-09 14:52:34","endLine":194,"groupId":"55042","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"putComponentTemplate","params":"(finalStringcause@finalbooleancreate@finalStringname@finalTimeValuemasterTimeout@finalComponentTemplatetemplate@finalActionListener<AcknowledgedResponse>listener)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/4d/52f580b4cbe288b2b58d4b0bc37d2d446b1fb4.src","preCode":"    public void putComponentTemplate(final String cause, final boolean create, final String name, final TimeValue masterTimeout,\n                                     final ComponentTemplate template, final ActionListener<AcknowledgedResponse> listener) {\n        clusterService.submitStateUpdateTask(\"create-component-template [\" + name + \"], cause [\" + cause + \"]\",\n            new ClusterStateUpdateTask(Priority.URGENT) {\n\n                @Override\n                public TimeValue timeout() {\n                    return masterTimeout;\n                }\n\n                @Override\n                public void onFailure(String source, Exception e) {\n                    listener.onFailure(e);\n                }\n\n                @Override\n                public ClusterState execute(ClusterState currentState) throws Exception {\n                    return addComponentTemplate(currentState, create, name, template);\n                }\n\n                @Override\n                public void clusterStateProcessed(String source, ClusterState oldState, ClusterState newState) {\n                    listener.onResponse(new AcknowledgedResponse(true));\n                }\n            });\n    }\n","realPath":"server/src/main/java/org/elasticsearch/cluster/metadata/MetadataIndexTemplateService.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":169,"status":"M"},{"authorDate":"2020-10-09 14:52:34","commitOrder":7,"curCode":"    public void putIndexTemplateV2(final String cause, final boolean create, final String name, final TimeValue masterTimeout,\n                                   final ComposableIndexTemplate template, final ActionListener<AcknowledgedResponse> listener) {\n        validateV2TemplateRequest(clusterService.state().metadata(), name, template);\n        clusterService.submitStateUpdateTask(\"create-index-template-v2 [\" + name + \"], cause [\" + cause + \"]\",\n            new ClusterStateUpdateTask(Priority.URGENT) {\n\n                @Override\n                public TimeValue timeout() {\n                    return masterTimeout;\n                }\n\n                @Override\n                public void onFailure(String source, Exception e) {\n                    listener.onFailure(e);\n                }\n\n                @Override\n                public ClusterState execute(ClusterState currentState) throws Exception {\n                    return addIndexTemplateV2(currentState, create, name, template);\n                }\n\n                @Override\n                public void clusterStateProcessed(String source, ClusterState oldState, ClusterState newState) {\n                    listener.onResponse(AcknowledgedResponse.TRUE);\n                }\n            });\n    }\n","date":"2020-10-09 14:52:34","endLine":425,"groupId":"55046","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"putIndexTemplateV2","params":"(finalStringcause@finalbooleancreate@finalStringname@finalTimeValuemasterTimeout@finalComposableIndexTemplatetemplate@finalActionListener<AcknowledgedResponse>listener)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/4d/52f580b4cbe288b2b58d4b0bc37d2d446b1fb4.src","preCode":"    public void putIndexTemplateV2(final String cause, final boolean create, final String name, final TimeValue masterTimeout,\n                                   final ComposableIndexTemplate template, final ActionListener<AcknowledgedResponse> listener) {\n        validateV2TemplateRequest(clusterService.state().metadata(), name, template);\n        clusterService.submitStateUpdateTask(\"create-index-template-v2 [\" + name + \"], cause [\" + cause + \"]\",\n            new ClusterStateUpdateTask(Priority.URGENT) {\n\n                @Override\n                public TimeValue timeout() {\n                    return masterTimeout;\n                }\n\n                @Override\n                public void onFailure(String source, Exception e) {\n                    listener.onFailure(e);\n                }\n\n                @Override\n                public ClusterState execute(ClusterState currentState) throws Exception {\n                    return addIndexTemplateV2(currentState, create, name, template);\n                }\n\n                @Override\n                public void clusterStateProcessed(String source, ClusterState oldState, ClusterState newState) {\n                    listener.onResponse(new AcknowledgedResponse(true));\n                }\n            });\n    }\n","realPath":"server/src/main/java/org/elasticsearch/cluster/metadata/MetadataIndexTemplateService.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":399,"status":"M"}],"commitId":"4e740c2e4a544c7e99963ccd9f64686b1f0531e1","commitMessage":"@@@Dry up AcknowledgedResponse Handling (#63335)\n\n1. `AcknowledgedResponse` should really be two singletons to make things clearer and save some objects and code size.\n2. We were duplicating reading this type over and over  in a bunch of transport master node actions so I dried that up","date":"2020-10-09 14:52:34","modifiedFileCount":"145","status":"M","submitter":"Armin Braun"},{"authorTime":"2020-10-28 21:26:53","codes":[{"authorDate":"2020-10-28 21:26:53","commitOrder":8,"curCode":"    public void putComponentTemplate(final String cause, final boolean create, final String name, final TimeValue masterTimeout,\n                                     final ComponentTemplate template, final ActionListener<AcknowledgedResponse> listener) {\n        clusterService.submitStateUpdateTask(\"create-component-template [\" + name + \"], cause [\" + cause + \"]\",\n            new ClusterStateUpdateTask(Priority.URGENT, masterTimeout) {\n\n                @Override\n                public void onFailure(String source, Exception e) {\n                    listener.onFailure(e);\n                }\n\n                @Override\n                public ClusterState execute(ClusterState currentState) throws Exception {\n                    return addComponentTemplate(currentState, create, name, template);\n                }\n\n                @Override\n                public void clusterStateProcessed(String source, ClusterState oldState, ClusterState newState) {\n                    listener.onResponse(AcknowledgedResponse.TRUE);\n                }\n            });\n    }\n","date":"2020-10-28 21:26:53","endLine":185,"groupId":"107572","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"putComponentTemplate","params":"(finalStringcause@finalbooleancreate@finalStringname@finalTimeValuemasterTimeout@finalComponentTemplatetemplate@finalActionListener<AcknowledgedResponse>listener)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/19/b9e83fd06a4f5feb5b22bdf54caaa115227ff6.src","preCode":"    public void putComponentTemplate(final String cause, final boolean create, final String name, final TimeValue masterTimeout,\n                                     final ComponentTemplate template, final ActionListener<AcknowledgedResponse> listener) {\n        clusterService.submitStateUpdateTask(\"create-component-template [\" + name + \"], cause [\" + cause + \"]\",\n            new ClusterStateUpdateTask(Priority.URGENT) {\n\n                @Override\n                public TimeValue timeout() {\n                    return masterTimeout;\n                }\n\n                @Override\n                public void onFailure(String source, Exception e) {\n                    listener.onFailure(e);\n                }\n\n                @Override\n                public ClusterState execute(ClusterState currentState) throws Exception {\n                    return addComponentTemplate(currentState, create, name, template);\n                }\n\n                @Override\n                public void clusterStateProcessed(String source, ClusterState oldState, ClusterState newState) {\n                    listener.onResponse(AcknowledgedResponse.TRUE);\n                }\n            });\n    }\n","realPath":"server/src/main/java/org/elasticsearch/cluster/metadata/MetadataIndexTemplateService.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":165,"status":"M"},{"authorDate":"2020-10-28 21:26:53","commitOrder":8,"curCode":"    public void putIndexTemplateV2(final String cause, final boolean create, final String name, final TimeValue masterTimeout,\n                                   final ComposableIndexTemplate template, final ActionListener<AcknowledgedResponse> listener) {\n        validateV2TemplateRequest(clusterService.state().metadata(), name, template);\n        clusterService.submitStateUpdateTask(\"create-index-template-v2 [\" + name + \"], cause [\" + cause + \"]\",\n            new ClusterStateUpdateTask(Priority.URGENT, masterTimeout) {\n\n                @Override\n                public void onFailure(String source, Exception e) {\n                    listener.onFailure(e);\n                }\n\n                @Override\n                public ClusterState execute(ClusterState currentState) throws Exception {\n                    return addIndexTemplateV2(currentState, create, name, template);\n                }\n\n                @Override\n                public void clusterStateProcessed(String source, ClusterState oldState, ClusterState newState) {\n                    listener.onResponse(AcknowledgedResponse.TRUE);\n                }\n            });\n    }\n","date":"2020-10-28 21:26:53","endLine":406,"groupId":"107572","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"putIndexTemplateV2","params":"(finalStringcause@finalbooleancreate@finalStringname@finalTimeValuemasterTimeout@finalComposableIndexTemplatetemplate@finalActionListener<AcknowledgedResponse>listener)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/19/b9e83fd06a4f5feb5b22bdf54caaa115227ff6.src","preCode":"    public void putIndexTemplateV2(final String cause, final boolean create, final String name, final TimeValue masterTimeout,\n                                   final ComposableIndexTemplate template, final ActionListener<AcknowledgedResponse> listener) {\n        validateV2TemplateRequest(clusterService.state().metadata(), name, template);\n        clusterService.submitStateUpdateTask(\"create-index-template-v2 [\" + name + \"], cause [\" + cause + \"]\",\n            new ClusterStateUpdateTask(Priority.URGENT) {\n\n                @Override\n                public TimeValue timeout() {\n                    return masterTimeout;\n                }\n\n                @Override\n                public void onFailure(String source, Exception e) {\n                    listener.onFailure(e);\n                }\n\n                @Override\n                public ClusterState execute(ClusterState currentState) throws Exception {\n                    return addIndexTemplateV2(currentState, create, name, template);\n                }\n\n                @Override\n                public void clusterStateProcessed(String source, ClusterState oldState, ClusterState newState) {\n                    listener.onResponse(AcknowledgedResponse.TRUE);\n                }\n            });\n    }\n","realPath":"server/src/main/java/org/elasticsearch/cluster/metadata/MetadataIndexTemplateService.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":385,"status":"M"}],"commitId":"ef4ea4ae1030f2ca6dc55e7011bd3397512a32a5","commitMessage":"@@@Simplify ClusterStateUpdateTask Timeout Handling (#64117)\n\nIt's confusing and slightly error prone (see #64116) to handle the timeouts\nvia overrides but the priority via a field. This simplifies the code to to avoid future\nissues and save over 100 LOC.\n\nAlso this fixes a bug in `TransportVotingConfigExclusionsAction` where trying to instantiate a time value with a negative time could throw and unexpected exception and as a result leak a listener.","date":"2020-10-28 21:26:53","modifiedFileCount":"15","status":"M","submitter":"Armin Braun"}]
