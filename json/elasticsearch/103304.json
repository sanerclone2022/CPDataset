[{"authorTime":"2018-04-26 03:22:53","codes":[{"authorDate":"2018-04-26 03:22:53","commitOrder":1,"curCode":"    public void testToQueryBoosts() throws Exception {\n        assumeTrue(\"test runs only when at least a type is registered\", getCurrentTypes().length > 0);\n        QueryShardContext shardContext = createShardContext();\n        QueryStringQueryBuilder queryStringQuery = queryStringQuery(STRING_FIELD_NAME + \":boosted^2\");\n        Query query = queryStringQuery.toQuery(shardContext);\n        assertThat(query, instanceOf(BoostQuery.class));\n        BoostQuery boostQuery = (BoostQuery) query;\n        assertThat(boostQuery.getBoost(), equalTo(2.0f));\n        assertThat(boostQuery.getQuery(), instanceOf(TermQuery.class));\n        assertThat(((TermQuery) boostQuery.getQuery()).getTerm(), equalTo(new Term(STRING_FIELD_NAME, \"boosted\")));\n        queryStringQuery.boost(2.0f);\n        query = queryStringQuery.toQuery(shardContext);\n        assertThat(query, instanceOf(BoostQuery.class));\n        boostQuery = (BoostQuery) query;\n        assertThat(boostQuery.getBoost(), equalTo(2.0f));\n        assertThat(boostQuery   .getQuery(), instanceOf(BoostQuery.class));\n        boostQuery = (BoostQuery) boostQuery.getQuery();\n        assertThat(boostQuery.getBoost(), equalTo(2.0f));\n\n        queryStringQuery =\n            queryStringQuery(\"((\" + STRING_FIELD_NAME + \":boosted^2) AND (\" + STRING_FIELD_NAME + \":foo^1.5))^3\");\n        query = queryStringQuery.toQuery(shardContext);\n        assertThat(query, instanceOf(BoostQuery.class));\n        boostQuery = (BoostQuery) query;\n        assertThat(boostQuery.getBoost(), equalTo(3.0f));\n        BoostQuery boostQuery1 = assertBooleanSubQuery(boostQuery.getQuery(), BoostQuery.class, 0);\n        assertThat(boostQuery1.getBoost(), equalTo(2.0f));\n        assertThat(boostQuery1.getQuery(), instanceOf(TermQuery.class));\n        assertThat(((TermQuery)boostQuery1.getQuery()).getTerm(), equalTo(new Term(STRING_FIELD_NAME, \"boosted\")));\n        BoostQuery boostQuery2 = assertBooleanSubQuery(boostQuery.getQuery(), BoostQuery.class, 1);\n        assertThat(boostQuery2.getBoost(), equalTo(1.5f));\n        assertThat(boostQuery2.getQuery(), instanceOf(TermQuery.class));\n        assertThat(((TermQuery)boostQuery2.getQuery()).getTerm(), equalTo(new Term(STRING_FIELD_NAME, \"foo\")));\n        queryStringQuery.boost(2.0f);\n        query = queryStringQuery.toQuery(shardContext);\n        assertThat(query, instanceOf(BoostQuery.class));\n        boostQuery = (BoostQuery) query;\n        assertThat(boostQuery.getBoost(), equalTo(2.0f));\n    }\n","date":"2018-04-26 03:22:53","endLine":466,"groupId":"58152","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testToQueryBoosts","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/aa/fc66b3985e19e663446f001ab216edcf8db93e.src","preCode":"    public void testToQueryBoosts() throws Exception {\n        assumeTrue(\"test runs only when at least a type is registered\", getCurrentTypes().length > 0);\n        QueryShardContext shardContext = createShardContext();\n        QueryStringQueryBuilder queryStringQuery = queryStringQuery(STRING_FIELD_NAME + \":boosted^2\");\n        Query query = queryStringQuery.toQuery(shardContext);\n        assertThat(query, instanceOf(BoostQuery.class));\n        BoostQuery boostQuery = (BoostQuery) query;\n        assertThat(boostQuery.getBoost(), equalTo(2.0f));\n        assertThat(boostQuery.getQuery(), instanceOf(TermQuery.class));\n        assertThat(((TermQuery) boostQuery.getQuery()).getTerm(), equalTo(new Term(STRING_FIELD_NAME, \"boosted\")));\n        queryStringQuery.boost(2.0f);\n        query = queryStringQuery.toQuery(shardContext);\n        assertThat(query, instanceOf(BoostQuery.class));\n        boostQuery = (BoostQuery) query;\n        assertThat(boostQuery.getBoost(), equalTo(2.0f));\n        assertThat(boostQuery   .getQuery(), instanceOf(BoostQuery.class));\n        boostQuery = (BoostQuery) boostQuery.getQuery();\n        assertThat(boostQuery.getBoost(), equalTo(2.0f));\n\n        queryStringQuery =\n            queryStringQuery(\"((\" + STRING_FIELD_NAME + \":boosted^2) AND (\" + STRING_FIELD_NAME + \":foo^1.5))^3\");\n        query = queryStringQuery.toQuery(shardContext);\n        assertThat(query, instanceOf(BoostQuery.class));\n        boostQuery = (BoostQuery) query;\n        assertThat(boostQuery.getBoost(), equalTo(3.0f));\n        BoostQuery boostQuery1 = assertBooleanSubQuery(boostQuery.getQuery(), BoostQuery.class, 0);\n        assertThat(boostQuery1.getBoost(), equalTo(2.0f));\n        assertThat(boostQuery1.getQuery(), instanceOf(TermQuery.class));\n        assertThat(((TermQuery)boostQuery1.getQuery()).getTerm(), equalTo(new Term(STRING_FIELD_NAME, \"boosted\")));\n        BoostQuery boostQuery2 = assertBooleanSubQuery(boostQuery.getQuery(), BoostQuery.class, 1);\n        assertThat(boostQuery2.getBoost(), equalTo(1.5f));\n        assertThat(boostQuery2.getQuery(), instanceOf(TermQuery.class));\n        assertThat(((TermQuery)boostQuery2.getQuery()).getTerm(), equalTo(new Term(STRING_FIELD_NAME, \"foo\")));\n        queryStringQuery.boost(2.0f);\n        query = queryStringQuery.toQuery(shardContext);\n        assertThat(query, instanceOf(BoostQuery.class));\n        boostQuery = (BoostQuery) query;\n        assertThat(boostQuery.getBoost(), equalTo(2.0f));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/index/query/QueryStringQueryBuilderTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":428,"status":"B"},{"authorDate":"2018-04-26 03:22:53","commitOrder":1,"curCode":"    public void testToQueryPhraseQueryBoostAndSlop() throws IOException {\n        assumeTrue(\"test runs only when at least a type is registered\", getCurrentTypes().length > 0);\n        QueryStringQueryBuilder queryStringQueryBuilder =\n            new QueryStringQueryBuilder(\"\\\"test phrase\\\"~2\").field(STRING_FIELD_NAME, 5f);\n        Query query = queryStringQueryBuilder.toQuery(createShardContext());\n        assertThat(query, instanceOf(BoostQuery.class));\n        BoostQuery boostQuery = (BoostQuery) query;\n        assertThat(boostQuery.getBoost(), equalTo(5f));\n        assertThat(boostQuery.getQuery(), instanceOf(PhraseQuery.class));\n        PhraseQuery phraseQuery = (PhraseQuery) boostQuery.getQuery();\n        assertThat(phraseQuery.getSlop(), Matchers.equalTo(2));\n        assertThat(phraseQuery.getTerms().length, equalTo(2));\n    }\n","date":"2018-04-26 03:22:53","endLine":900,"groupId":"54035","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testToQueryPhraseQueryBoostAndSlop","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/aa/fc66b3985e19e663446f001ab216edcf8db93e.src","preCode":"    public void testToQueryPhraseQueryBoostAndSlop() throws IOException {\n        assumeTrue(\"test runs only when at least a type is registered\", getCurrentTypes().length > 0);\n        QueryStringQueryBuilder queryStringQueryBuilder =\n            new QueryStringQueryBuilder(\"\\\"test phrase\\\"~2\").field(STRING_FIELD_NAME, 5f);\n        Query query = queryStringQueryBuilder.toQuery(createShardContext());\n        assertThat(query, instanceOf(BoostQuery.class));\n        BoostQuery boostQuery = (BoostQuery) query;\n        assertThat(boostQuery.getBoost(), equalTo(5f));\n        assertThat(boostQuery.getQuery(), instanceOf(PhraseQuery.class));\n        PhraseQuery phraseQuery = (PhraseQuery) boostQuery.getQuery();\n        assertThat(phraseQuery.getSlop(), Matchers.equalTo(2));\n        assertThat(phraseQuery.getTerms().length, equalTo(2));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/index/query/QueryStringQueryBuilderTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":888,"status":"B"}],"commitId":"d74fb9eb4559077e2d20b19a9ed62d9ff825027a","commitMessage":"@@@Opened x-pack ILM code\n","date":"2018-04-26 03:22:53","modifiedFileCount":"0","status":"B","submitter":"Tal Levy"},{"authorTime":"2018-07-27 17:51:09","codes":[{"authorDate":"2018-07-27 17:51:09","commitOrder":2,"curCode":"    public void testToQueryBoosts() throws Exception {\n        QueryShardContext shardContext = createShardContext();\n        QueryStringQueryBuilder queryStringQuery = queryStringQuery(STRING_FIELD_NAME + \":boosted^2\");\n        Query query = queryStringQuery.toQuery(shardContext);\n        assertThat(query, instanceOf(BoostQuery.class));\n        BoostQuery boostQuery = (BoostQuery) query;\n        assertThat(boostQuery.getBoost(), equalTo(2.0f));\n        assertThat(boostQuery.getQuery(), instanceOf(TermQuery.class));\n        assertThat(((TermQuery) boostQuery.getQuery()).getTerm(), equalTo(new Term(STRING_FIELD_NAME, \"boosted\")));\n        queryStringQuery.boost(2.0f);\n        query = queryStringQuery.toQuery(shardContext);\n        assertThat(query, instanceOf(BoostQuery.class));\n        boostQuery = (BoostQuery) query;\n        assertThat(boostQuery.getBoost(), equalTo(2.0f));\n        assertThat(boostQuery   .getQuery(), instanceOf(BoostQuery.class));\n        boostQuery = (BoostQuery) boostQuery.getQuery();\n        assertThat(boostQuery.getBoost(), equalTo(2.0f));\n\n        queryStringQuery =\n            queryStringQuery(\"((\" + STRING_FIELD_NAME + \":boosted^2) AND (\" + STRING_FIELD_NAME + \":foo^1.5))^3\");\n        query = queryStringQuery.toQuery(shardContext);\n        assertThat(query, instanceOf(BoostQuery.class));\n        boostQuery = (BoostQuery) query;\n        assertThat(boostQuery.getBoost(), equalTo(3.0f));\n        BoostQuery boostQuery1 = assertBooleanSubQuery(boostQuery.getQuery(), BoostQuery.class, 0);\n        assertThat(boostQuery1.getBoost(), equalTo(2.0f));\n        assertThat(boostQuery1.getQuery(), instanceOf(TermQuery.class));\n        assertThat(((TermQuery)boostQuery1.getQuery()).getTerm(), equalTo(new Term(STRING_FIELD_NAME, \"boosted\")));\n        BoostQuery boostQuery2 = assertBooleanSubQuery(boostQuery.getQuery(), BoostQuery.class, 1);\n        assertThat(boostQuery2.getBoost(), equalTo(1.5f));\n        assertThat(boostQuery2.getQuery(), instanceOf(TermQuery.class));\n        assertThat(((TermQuery)boostQuery2.getQuery()).getTerm(), equalTo(new Term(STRING_FIELD_NAME, \"foo\")));\n        queryStringQuery.boost(2.0f);\n        query = queryStringQuery.toQuery(shardContext);\n        assertThat(query, instanceOf(BoostQuery.class));\n        boostQuery = (BoostQuery) query;\n        assertThat(boostQuery.getBoost(), equalTo(2.0f));\n    }\n","date":"2018-07-27 17:51:09","endLine":460,"groupId":"58152","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testToQueryBoosts","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/87/197b662d142956ef2108dfad7672add3fb9657.src","preCode":"    public void testToQueryBoosts() throws Exception {\n        assumeTrue(\"test runs only when at least a type is registered\", getCurrentTypes().length > 0);\n        QueryShardContext shardContext = createShardContext();\n        QueryStringQueryBuilder queryStringQuery = queryStringQuery(STRING_FIELD_NAME + \":boosted^2\");\n        Query query = queryStringQuery.toQuery(shardContext);\n        assertThat(query, instanceOf(BoostQuery.class));\n        BoostQuery boostQuery = (BoostQuery) query;\n        assertThat(boostQuery.getBoost(), equalTo(2.0f));\n        assertThat(boostQuery.getQuery(), instanceOf(TermQuery.class));\n        assertThat(((TermQuery) boostQuery.getQuery()).getTerm(), equalTo(new Term(STRING_FIELD_NAME, \"boosted\")));\n        queryStringQuery.boost(2.0f);\n        query = queryStringQuery.toQuery(shardContext);\n        assertThat(query, instanceOf(BoostQuery.class));\n        boostQuery = (BoostQuery) query;\n        assertThat(boostQuery.getBoost(), equalTo(2.0f));\n        assertThat(boostQuery   .getQuery(), instanceOf(BoostQuery.class));\n        boostQuery = (BoostQuery) boostQuery.getQuery();\n        assertThat(boostQuery.getBoost(), equalTo(2.0f));\n\n        queryStringQuery =\n            queryStringQuery(\"((\" + STRING_FIELD_NAME + \":boosted^2) AND (\" + STRING_FIELD_NAME + \":foo^1.5))^3\");\n        query = queryStringQuery.toQuery(shardContext);\n        assertThat(query, instanceOf(BoostQuery.class));\n        boostQuery = (BoostQuery) query;\n        assertThat(boostQuery.getBoost(), equalTo(3.0f));\n        BoostQuery boostQuery1 = assertBooleanSubQuery(boostQuery.getQuery(), BoostQuery.class, 0);\n        assertThat(boostQuery1.getBoost(), equalTo(2.0f));\n        assertThat(boostQuery1.getQuery(), instanceOf(TermQuery.class));\n        assertThat(((TermQuery)boostQuery1.getQuery()).getTerm(), equalTo(new Term(STRING_FIELD_NAME, \"boosted\")));\n        BoostQuery boostQuery2 = assertBooleanSubQuery(boostQuery.getQuery(), BoostQuery.class, 1);\n        assertThat(boostQuery2.getBoost(), equalTo(1.5f));\n        assertThat(boostQuery2.getQuery(), instanceOf(TermQuery.class));\n        assertThat(((TermQuery)boostQuery2.getQuery()).getTerm(), equalTo(new Term(STRING_FIELD_NAME, \"foo\")));\n        queryStringQuery.boost(2.0f);\n        query = queryStringQuery.toQuery(shardContext);\n        assertThat(query, instanceOf(BoostQuery.class));\n        boostQuery = (BoostQuery) query;\n        assertThat(boostQuery.getBoost(), equalTo(2.0f));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/index/query/QueryStringQueryBuilderTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":423,"status":"M"},{"authorDate":"2018-07-27 17:51:09","commitOrder":2,"curCode":"    public void testToQueryPhraseQueryBoostAndSlop() throws IOException {\n        QueryStringQueryBuilder queryStringQueryBuilder =\n            new QueryStringQueryBuilder(\"\\\"test phrase\\\"~2\").field(STRING_FIELD_NAME, 5f);\n        Query query = queryStringQueryBuilder.toQuery(createShardContext());\n        assertThat(query, instanceOf(BoostQuery.class));\n        BoostQuery boostQuery = (BoostQuery) query;\n        assertThat(boostQuery.getBoost(), equalTo(5f));\n        assertThat(boostQuery.getQuery(), instanceOf(PhraseQuery.class));\n        PhraseQuery phraseQuery = (PhraseQuery) boostQuery.getQuery();\n        assertThat(phraseQuery.getSlop(), Matchers.equalTo(2));\n        assertThat(phraseQuery.getTerms().length, equalTo(2));\n    }\n","date":"2018-07-27 17:51:09","endLine":876,"groupId":"54035","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testToQueryPhraseQueryBoostAndSlop","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/87/197b662d142956ef2108dfad7672add3fb9657.src","preCode":"    public void testToQueryPhraseQueryBoostAndSlop() throws IOException {\n        assumeTrue(\"test runs only when at least a type is registered\", getCurrentTypes().length > 0);\n        QueryStringQueryBuilder queryStringQueryBuilder =\n            new QueryStringQueryBuilder(\"\\\"test phrase\\\"~2\").field(STRING_FIELD_NAME, 5f);\n        Query query = queryStringQueryBuilder.toQuery(createShardContext());\n        assertThat(query, instanceOf(BoostQuery.class));\n        BoostQuery boostQuery = (BoostQuery) query;\n        assertThat(boostQuery.getBoost(), equalTo(5f));\n        assertThat(boostQuery.getQuery(), instanceOf(PhraseQuery.class));\n        PhraseQuery phraseQuery = (PhraseQuery) boostQuery.getQuery();\n        assertThat(phraseQuery.getSlop(), Matchers.equalTo(2));\n        assertThat(phraseQuery.getTerms().length, equalTo(2));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/index/query/QueryStringQueryBuilderTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":865,"status":"M"}],"commitId":"dfb277cfb7969ad543a31dea234579d0e886a73a","commitMessage":"@@@Merge branch 'master' into index-lifecycle\n","date":"2018-07-27 17:51:09","modifiedFileCount":"105","status":"M","submitter":"Colin Goodheart-Smithe"},{"authorTime":"2020-04-03 22:00:46","codes":[{"authorDate":"2020-04-03 22:00:46","commitOrder":3,"curCode":"    public void testToQueryBoosts() throws Exception {\n        QueryShardContext shardContext = createShardContext();\n        QueryStringQueryBuilder queryStringQuery = queryStringQuery(TEXT_FIELD_NAME + \":boosted^2\");\n        Query query = queryStringQuery.toQuery(shardContext);\n        assertThat(query, instanceOf(BoostQuery.class));\n        BoostQuery boostQuery = (BoostQuery) query;\n        assertThat(boostQuery.getBoost(), equalTo(2.0f));\n        assertThat(boostQuery.getQuery(), instanceOf(TermQuery.class));\n        assertThat(((TermQuery) boostQuery.getQuery()).getTerm(), equalTo(new Term(TEXT_FIELD_NAME, \"boosted\")));\n        queryStringQuery.boost(2.0f);\n        query = queryStringQuery.toQuery(shardContext);\n        assertThat(query, instanceOf(BoostQuery.class));\n        boostQuery = (BoostQuery) query;\n        assertThat(boostQuery.getBoost(), equalTo(2.0f));\n        assertThat(boostQuery   .getQuery(), instanceOf(BoostQuery.class));\n        boostQuery = (BoostQuery) boostQuery.getQuery();\n        assertThat(boostQuery.getBoost(), equalTo(2.0f));\n\n        queryStringQuery =\n            queryStringQuery(\"((\" + TEXT_FIELD_NAME + \":boosted^2) AND (\" + TEXT_FIELD_NAME + \":foo^1.5))^3\");\n        query = queryStringQuery.toQuery(shardContext);\n        assertThat(query, instanceOf(BoostQuery.class));\n        boostQuery = (BoostQuery) query;\n        assertThat(boostQuery.getBoost(), equalTo(3.0f));\n        BoostQuery boostQuery1 = assertBooleanSubQuery(boostQuery.getQuery(), BoostQuery.class, 0);\n        assertThat(boostQuery1.getBoost(), equalTo(2.0f));\n        assertThat(boostQuery1.getQuery(), instanceOf(TermQuery.class));\n        assertThat(((TermQuery)boostQuery1.getQuery()).getTerm(), equalTo(new Term(TEXT_FIELD_NAME, \"boosted\")));\n        BoostQuery boostQuery2 = assertBooleanSubQuery(boostQuery.getQuery(), BoostQuery.class, 1);\n        assertThat(boostQuery2.getBoost(), equalTo(1.5f));\n        assertThat(boostQuery2.getQuery(), instanceOf(TermQuery.class));\n        assertThat(((TermQuery)boostQuery2.getQuery()).getTerm(), equalTo(new Term(TEXT_FIELD_NAME, \"foo\")));\n        queryStringQuery.boost(2.0f);\n        query = queryStringQuery.toQuery(shardContext);\n        assertThat(query, instanceOf(BoostQuery.class));\n        boostQuery = (BoostQuery) query;\n        assertThat(boostQuery.getBoost(), equalTo(2.0f));\n    }\n","date":"2020-04-03 22:00:46","endLine":478,"groupId":"58152","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testToQueryBoosts","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/a2/7bce5edab3d92a09f5d9650631122009f57a11.src","preCode":"    public void testToQueryBoosts() throws Exception {\n        QueryShardContext shardContext = createShardContext();\n        QueryStringQueryBuilder queryStringQuery = queryStringQuery(STRING_FIELD_NAME + \":boosted^2\");\n        Query query = queryStringQuery.toQuery(shardContext);\n        assertThat(query, instanceOf(BoostQuery.class));\n        BoostQuery boostQuery = (BoostQuery) query;\n        assertThat(boostQuery.getBoost(), equalTo(2.0f));\n        assertThat(boostQuery.getQuery(), instanceOf(TermQuery.class));\n        assertThat(((TermQuery) boostQuery.getQuery()).getTerm(), equalTo(new Term(STRING_FIELD_NAME, \"boosted\")));\n        queryStringQuery.boost(2.0f);\n        query = queryStringQuery.toQuery(shardContext);\n        assertThat(query, instanceOf(BoostQuery.class));\n        boostQuery = (BoostQuery) query;\n        assertThat(boostQuery.getBoost(), equalTo(2.0f));\n        assertThat(boostQuery   .getQuery(), instanceOf(BoostQuery.class));\n        boostQuery = (BoostQuery) boostQuery.getQuery();\n        assertThat(boostQuery.getBoost(), equalTo(2.0f));\n\n        queryStringQuery =\n            queryStringQuery(\"((\" + STRING_FIELD_NAME + \":boosted^2) AND (\" + STRING_FIELD_NAME + \":foo^1.5))^3\");\n        query = queryStringQuery.toQuery(shardContext);\n        assertThat(query, instanceOf(BoostQuery.class));\n        boostQuery = (BoostQuery) query;\n        assertThat(boostQuery.getBoost(), equalTo(3.0f));\n        BoostQuery boostQuery1 = assertBooleanSubQuery(boostQuery.getQuery(), BoostQuery.class, 0);\n        assertThat(boostQuery1.getBoost(), equalTo(2.0f));\n        assertThat(boostQuery1.getQuery(), instanceOf(TermQuery.class));\n        assertThat(((TermQuery)boostQuery1.getQuery()).getTerm(), equalTo(new Term(STRING_FIELD_NAME, \"boosted\")));\n        BoostQuery boostQuery2 = assertBooleanSubQuery(boostQuery.getQuery(), BoostQuery.class, 1);\n        assertThat(boostQuery2.getBoost(), equalTo(1.5f));\n        assertThat(boostQuery2.getQuery(), instanceOf(TermQuery.class));\n        assertThat(((TermQuery)boostQuery2.getQuery()).getTerm(), equalTo(new Term(STRING_FIELD_NAME, \"foo\")));\n        queryStringQuery.boost(2.0f);\n        query = queryStringQuery.toQuery(shardContext);\n        assertThat(query, instanceOf(BoostQuery.class));\n        boostQuery = (BoostQuery) query;\n        assertThat(boostQuery.getBoost(), equalTo(2.0f));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/index/query/QueryStringQueryBuilderTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":441,"status":"M"},{"authorDate":"2020-04-03 22:00:46","commitOrder":3,"curCode":"    public void testToQueryPhraseQueryBoostAndSlop() throws IOException {\n        QueryStringQueryBuilder queryStringQueryBuilder =\n            new QueryStringQueryBuilder(\"\\\"test phrase\\\"~2\").field(TEXT_FIELD_NAME, 5f);\n        Query query = queryStringQueryBuilder.toQuery(createShardContext());\n        assertThat(query, instanceOf(BoostQuery.class));\n        BoostQuery boostQuery = (BoostQuery) query;\n        assertThat(boostQuery.getBoost(), equalTo(5f));\n        assertThat(boostQuery.getQuery(), instanceOf(PhraseQuery.class));\n        PhraseQuery phraseQuery = (PhraseQuery) boostQuery.getQuery();\n        assertThat(phraseQuery.getSlop(), Matchers.equalTo(2));\n        assertThat(phraseQuery.getTerms().length, equalTo(2));\n    }\n","date":"2020-04-03 22:00:46","endLine":903,"groupId":"54035","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testToQueryPhraseQueryBoostAndSlop","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/a2/7bce5edab3d92a09f5d9650631122009f57a11.src","preCode":"    public void testToQueryPhraseQueryBoostAndSlop() throws IOException {\n        QueryStringQueryBuilder queryStringQueryBuilder =\n            new QueryStringQueryBuilder(\"\\\"test phrase\\\"~2\").field(STRING_FIELD_NAME, 5f);\n        Query query = queryStringQueryBuilder.toQuery(createShardContext());\n        assertThat(query, instanceOf(BoostQuery.class));\n        BoostQuery boostQuery = (BoostQuery) query;\n        assertThat(boostQuery.getBoost(), equalTo(5f));\n        assertThat(boostQuery.getQuery(), instanceOf(PhraseQuery.class));\n        PhraseQuery phraseQuery = (PhraseQuery) boostQuery.getQuery();\n        assertThat(phraseQuery.getSlop(), Matchers.equalTo(2));\n        assertThat(phraseQuery.getTerms().length, equalTo(2));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/index/query/QueryStringQueryBuilderTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":892,"status":"M"}],"commitId":"f5759bb2092f1a957e79626c872c3f5707c1ee04","commitMessage":"@@@Rename field name constants in AbstractBuilderTestCase (#53234)\n\nSome field name constants were not updaten when we moved from \"string\" to \"text\"\nand \"keyword\" fields. Renaming them makes it easier and faster to know which\nfield type is used in test subclassing this base test case.","date":"2020-04-03 22:00:46","modifiedFileCount":"34","status":"M","submitter":"Christoph B?scher"},{"authorTime":"2021-01-15 01:11:59","codes":[{"authorDate":"2021-01-15 01:11:59","commitOrder":4,"curCode":"    public void testToQueryBoosts() throws Exception {\n        SearchExecutionContext searchExecutionContext = createSearchExecutionContext();\n        QueryStringQueryBuilder queryStringQuery = queryStringQuery(TEXT_FIELD_NAME + \":boosted^2\");\n        Query query = queryStringQuery.toQuery(searchExecutionContext);\n        assertThat(query, instanceOf(BoostQuery.class));\n        BoostQuery boostQuery = (BoostQuery) query;\n        assertThat(boostQuery.getBoost(), equalTo(2.0f));\n        assertThat(boostQuery.getQuery(), instanceOf(TermQuery.class));\n        assertThat(((TermQuery) boostQuery.getQuery()).getTerm(), equalTo(new Term(TEXT_FIELD_NAME, \"boosted\")));\n        queryStringQuery.boost(2.0f);\n        query = queryStringQuery.toQuery(searchExecutionContext);\n        assertThat(query, instanceOf(BoostQuery.class));\n        boostQuery = (BoostQuery) query;\n        assertThat(boostQuery.getBoost(), equalTo(2.0f));\n        assertThat(boostQuery   .getQuery(), instanceOf(BoostQuery.class));\n        boostQuery = (BoostQuery) boostQuery.getQuery();\n        assertThat(boostQuery.getBoost(), equalTo(2.0f));\n\n        queryStringQuery =\n            queryStringQuery(\"((\" + TEXT_FIELD_NAME + \":boosted^2) AND (\" + TEXT_FIELD_NAME + \":foo^1.5))^3\");\n        query = queryStringQuery.toQuery(searchExecutionContext);\n        assertThat(query, instanceOf(BoostQuery.class));\n        boostQuery = (BoostQuery) query;\n        assertThat(boostQuery.getBoost(), equalTo(3.0f));\n        BoostQuery boostQuery1 = assertBooleanSubQuery(boostQuery.getQuery(), BoostQuery.class, 0);\n        assertThat(boostQuery1.getBoost(), equalTo(2.0f));\n        assertThat(boostQuery1.getQuery(), instanceOf(TermQuery.class));\n        assertThat(((TermQuery)boostQuery1.getQuery()).getTerm(), equalTo(new Term(TEXT_FIELD_NAME, \"boosted\")));\n        BoostQuery boostQuery2 = assertBooleanSubQuery(boostQuery.getQuery(), BoostQuery.class, 1);\n        assertThat(boostQuery2.getBoost(), equalTo(1.5f));\n        assertThat(boostQuery2.getQuery(), instanceOf(TermQuery.class));\n        assertThat(((TermQuery)boostQuery2.getQuery()).getTerm(), equalTo(new Term(TEXT_FIELD_NAME, \"foo\")));\n        queryStringQuery.boost(2.0f);\n        query = queryStringQuery.toQuery(searchExecutionContext);\n        assertThat(query, instanceOf(BoostQuery.class));\n        boostQuery = (BoostQuery) query;\n        assertThat(boostQuery.getBoost(), equalTo(2.0f));\n    }\n","date":"2021-01-15 01:11:59","endLine":481,"groupId":"103304","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"testToQueryBoosts","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/c3/f2b7c45a7bb331c91e314966d9eec736b3e669.src","preCode":"    public void testToQueryBoosts() throws Exception {\n        QueryShardContext shardContext = createShardContext();\n        QueryStringQueryBuilder queryStringQuery = queryStringQuery(TEXT_FIELD_NAME + \":boosted^2\");\n        Query query = queryStringQuery.toQuery(shardContext);\n        assertThat(query, instanceOf(BoostQuery.class));\n        BoostQuery boostQuery = (BoostQuery) query;\n        assertThat(boostQuery.getBoost(), equalTo(2.0f));\n        assertThat(boostQuery.getQuery(), instanceOf(TermQuery.class));\n        assertThat(((TermQuery) boostQuery.getQuery()).getTerm(), equalTo(new Term(TEXT_FIELD_NAME, \"boosted\")));\n        queryStringQuery.boost(2.0f);\n        query = queryStringQuery.toQuery(shardContext);\n        assertThat(query, instanceOf(BoostQuery.class));\n        boostQuery = (BoostQuery) query;\n        assertThat(boostQuery.getBoost(), equalTo(2.0f));\n        assertThat(boostQuery   .getQuery(), instanceOf(BoostQuery.class));\n        boostQuery = (BoostQuery) boostQuery.getQuery();\n        assertThat(boostQuery.getBoost(), equalTo(2.0f));\n\n        queryStringQuery =\n            queryStringQuery(\"((\" + TEXT_FIELD_NAME + \":boosted^2) AND (\" + TEXT_FIELD_NAME + \":foo^1.5))^3\");\n        query = queryStringQuery.toQuery(shardContext);\n        assertThat(query, instanceOf(BoostQuery.class));\n        boostQuery = (BoostQuery) query;\n        assertThat(boostQuery.getBoost(), equalTo(3.0f));\n        BoostQuery boostQuery1 = assertBooleanSubQuery(boostQuery.getQuery(), BoostQuery.class, 0);\n        assertThat(boostQuery1.getBoost(), equalTo(2.0f));\n        assertThat(boostQuery1.getQuery(), instanceOf(TermQuery.class));\n        assertThat(((TermQuery)boostQuery1.getQuery()).getTerm(), equalTo(new Term(TEXT_FIELD_NAME, \"boosted\")));\n        BoostQuery boostQuery2 = assertBooleanSubQuery(boostQuery.getQuery(), BoostQuery.class, 1);\n        assertThat(boostQuery2.getBoost(), equalTo(1.5f));\n        assertThat(boostQuery2.getQuery(), instanceOf(TermQuery.class));\n        assertThat(((TermQuery)boostQuery2.getQuery()).getTerm(), equalTo(new Term(TEXT_FIELD_NAME, \"foo\")));\n        queryStringQuery.boost(2.0f);\n        query = queryStringQuery.toQuery(shardContext);\n        assertThat(query, instanceOf(BoostQuery.class));\n        boostQuery = (BoostQuery) query;\n        assertThat(boostQuery.getBoost(), equalTo(2.0f));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/index/query/QueryStringQueryBuilderTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":444,"status":"M"},{"authorDate":"2021-01-15 01:11:59","commitOrder":4,"curCode":"    public void testToQueryPhraseQueryBoostAndSlop() throws IOException {\n        QueryStringQueryBuilder queryStringQueryBuilder =\n            new QueryStringQueryBuilder(\"\\\"test phrase\\\"~2\").field(TEXT_FIELD_NAME, 5f);\n        Query query = queryStringQueryBuilder.toQuery(createSearchExecutionContext());\n        assertThat(query, instanceOf(BoostQuery.class));\n        BoostQuery boostQuery = (BoostQuery) query;\n        assertThat(boostQuery.getBoost(), equalTo(5f));\n        assertThat(boostQuery.getQuery(), instanceOf(PhraseQuery.class));\n        PhraseQuery phraseQuery = (PhraseQuery) boostQuery.getQuery();\n        assertThat(phraseQuery.getSlop(), Matchers.equalTo(2));\n        assertThat(phraseQuery.getTerms().length, equalTo(2));\n    }\n","date":"2021-01-15 01:11:59","endLine":947,"groupId":"103304","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"testToQueryPhraseQueryBoostAndSlop","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/c3/f2b7c45a7bb331c91e314966d9eec736b3e669.src","preCode":"    public void testToQueryPhraseQueryBoostAndSlop() throws IOException {\n        QueryStringQueryBuilder queryStringQueryBuilder =\n            new QueryStringQueryBuilder(\"\\\"test phrase\\\"~2\").field(TEXT_FIELD_NAME, 5f);\n        Query query = queryStringQueryBuilder.toQuery(createShardContext());\n        assertThat(query, instanceOf(BoostQuery.class));\n        BoostQuery boostQuery = (BoostQuery) query;\n        assertThat(boostQuery.getBoost(), equalTo(5f));\n        assertThat(boostQuery.getQuery(), instanceOf(PhraseQuery.class));\n        PhraseQuery phraseQuery = (PhraseQuery) boostQuery.getQuery();\n        assertThat(phraseQuery.getSlop(), Matchers.equalTo(2));\n        assertThat(phraseQuery.getTerms().length, equalTo(2));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/index/query/QueryStringQueryBuilderTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":936,"status":"M"}],"commitId":"5852fbedf52c77b0a76c2c731fdd4982fb65cd87","commitMessage":"@@@Rename QueryShardContext -> SearchExecutionContext. (#67490)\n\nWe decided to rename `QueryShardContext` to clarify that it supports all parts\nof search request execution. Before there was confusion over whether it should\nonly be used for building queries.  or maybe only used in the query phase. This\nPR also updates the javadocs.\n\nCloses #64740.","date":"2021-01-15 01:11:59","modifiedFileCount":"357","status":"M","submitter":"Julie Tibshirani"}]
