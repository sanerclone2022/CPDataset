[{"authorTime":"2019-11-28 00:33:11","codes":[{"authorDate":"2019-10-15 16:05:29","commitOrder":5,"curCode":"    public void testNullValue() throws Exception {\n        String mapping = Strings.toString(XContentFactory.jsonBuilder().startObject().startObject(\"type\")\n            .startObject(\"properties\").startObject(\"location\")\n            .field(\"type\", \"geo_point\")\n            .field(NULL_VALUE, \"1,2\")\n            .endObject().endObject()\n            .endObject().endObject());\n\n        DocumentMapper defaultMapper = createIndex(\"test\").mapperService().documentMapperParser()\n            .parse(\"type\", new CompressedXContent(mapping));\n        Mapper fieldMapper = defaultMapper.mappers().getMapper(\"location\");\n        assertThat(fieldMapper, instanceOf(GeoPointFieldMapper.class));\n\n        Object nullValue = ((GeoPointFieldMapper) fieldMapper).fieldType().nullValue();\n        assertThat(nullValue, equalTo(new GeoPoint(1, 2)));\n\n        ParsedDocument doc = defaultMapper.parse(new SourceToParse(\"test\", \"1\",\n            BytesReference.bytes(XContentFactory.jsonBuilder()\n                    .startObject()\n                    .nullField(\"location\")\n                    .endObject()),\n            XContentType.JSON));\n\n        assertThat(doc.rootDoc().getField(\"location\"), notNullValue());\n        BytesRef defaultValue = doc.rootDoc().getField(\"location\").binaryValue();\n\n        doc = defaultMapper.parse(new SourceToParse(\"test\", \"1\",\n            BytesReference.bytes(XContentFactory.jsonBuilder()\n                    .startObject()\n                    .field(\"location\", \"1, 2\")\n                    .endObject()),\n            XContentType.JSON));\n        \r\n        assertThat(defaultValue, equalTo(doc.rootDoc().getField(\"location\").binaryValue()));\n\n        doc = defaultMapper.parse(new SourceToParse(\"test\", \"1\",\n            BytesReference.bytes(XContentFactory.jsonBuilder()\n                    .startObject()\n                    .field(\"location\", \"3, 4\")\n                    .endObject()),\n            XContentType.JSON));\n        \r\n        assertThat(defaultValue, not(equalTo(doc.rootDoc().getField(\"location\").binaryValue())));\n    }\n","date":"2019-10-15 16:05:29","endLine":428,"groupId":"7122","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testNullValue","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/63/78442989a12049eb924642c443b6881fe15a47.src","preCode":"    public void testNullValue() throws Exception {\n        String mapping = Strings.toString(XContentFactory.jsonBuilder().startObject().startObject(\"type\")\n            .startObject(\"properties\").startObject(\"location\")\n            .field(\"type\", \"geo_point\")\n            .field(NULL_VALUE, \"1,2\")\n            .endObject().endObject()\n            .endObject().endObject());\n\n        DocumentMapper defaultMapper = createIndex(\"test\").mapperService().documentMapperParser()\n            .parse(\"type\", new CompressedXContent(mapping));\n        Mapper fieldMapper = defaultMapper.mappers().getMapper(\"location\");\n        assertThat(fieldMapper, instanceOf(GeoPointFieldMapper.class));\n\n        Object nullValue = ((GeoPointFieldMapper) fieldMapper).fieldType().nullValue();\n        assertThat(nullValue, equalTo(new GeoPoint(1, 2)));\n\n        ParsedDocument doc = defaultMapper.parse(new SourceToParse(\"test\", \"1\",\n            BytesReference.bytes(XContentFactory.jsonBuilder()\n                    .startObject()\n                    .nullField(\"location\")\n                    .endObject()),\n            XContentType.JSON));\n\n        assertThat(doc.rootDoc().getField(\"location\"), notNullValue());\n        BytesRef defaultValue = doc.rootDoc().getField(\"location\").binaryValue();\n\n        doc = defaultMapper.parse(new SourceToParse(\"test\", \"1\",\n            BytesReference.bytes(XContentFactory.jsonBuilder()\n                    .startObject()\n                    .field(\"location\", \"1, 2\")\n                    .endObject()),\n            XContentType.JSON));\n        \r\n        assertThat(defaultValue, equalTo(doc.rootDoc().getField(\"location\").binaryValue()));\n\n        doc = defaultMapper.parse(new SourceToParse(\"test\", \"1\",\n            BytesReference.bytes(XContentFactory.jsonBuilder()\n                    .startObject()\n                    .field(\"location\", \"3, 4\")\n                    .endObject()),\n            XContentType.JSON));\n        \r\n        assertThat(defaultValue, not(equalTo(doc.rootDoc().getField(\"location\").binaryValue())));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/index/mapper/GeoPointFieldMapperTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":385,"status":"NB"},{"authorDate":"2019-11-28 00:33:11","commitOrder":5,"curCode":"    public void testNullValueWithIgnoreMalformed() throws Exception {\n        \r\n        String mapping = Strings.toString(XContentFactory.jsonBuilder()\n            .startObject().startObject(\"type\")\n                .startObject(\"properties\").startObject(\"location\")\n                    .field(\"type\", \"geo_point\")\n                    .field(IGNORE_Z_VALUE.getPreferredName(), false)\n                    .field(IGNORE_MALFORMED, true)\n                    .field(NULL_VALUE, \"91,181\")\n                .endObject().endObject()\n            .endObject().endObject());\n\n        DocumentMapper defaultMapper = createIndex(\"test\").mapperService().documentMapperParser()\n            .parse(\"type\", new CompressedXContent(mapping));\n        Mapper fieldMapper = defaultMapper.mappers().getMapper(\"location\");\n        assertThat(fieldMapper, instanceOf(GeoPointFieldMapper.class));\n\n        Object nullValue = ((GeoPointFieldMapper) fieldMapper).fieldType().nullValue();\n        \r\n        assertThat(nullValue, equalTo(new GeoPoint(89, 1)));\n    }\n","date":"2019-11-28 00:33:11","endLine":455,"groupId":"31116","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testNullValueWithIgnoreMalformed","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/3f/f6eda1fd7fabae69608e39338b8ac8518590ad.src","preCode":"    public void testNullValueWithIgnoreMalformed() throws Exception {\n        \r\n        String mapping = Strings.toString(XContentFactory.jsonBuilder()\n            .startObject().startObject(\"type\")\n                .startObject(\"properties\").startObject(\"location\")\n                    .field(\"type\", \"geo_point\")\n                    .field(IGNORE_Z_VALUE.getPreferredName(), false)\n                    .field(IGNORE_MALFORMED, true)\n                    .field(NULL_VALUE, \"91,181\")\n                .endObject().endObject()\n            .endObject().endObject());\n\n        DocumentMapper defaultMapper = createIndex(\"test\").mapperService().documentMapperParser()\n            .parse(\"type\", new CompressedXContent(mapping));\n        Mapper fieldMapper = defaultMapper.mappers().getMapper(\"location\");\n        assertThat(fieldMapper, instanceOf(GeoPointFieldMapper.class));\n\n        Object nullValue = ((GeoPointFieldMapper) fieldMapper).fieldType().nullValue();\n        \r\n        assertThat(nullValue, equalTo(new GeoPoint(89, 1)));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/index/mapper/GeoPointFieldMapperTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":435,"status":"B"}],"commitId":"4b16d50cd4b7abf9789ea5e60517c37777ac805c","commitMessage":"@@@Fix typo when assigning null_value in GeoPointFieldMapper  (#49645)\n\nThis PR fixes a trivial typo error that affects assigning null_value in the GeoPointFieldMapper","date":"2019-11-28 00:33:11","modifiedFileCount":"2","status":"M","submitter":"Christos Soulios"},{"authorTime":"2020-04-24 00:40:04","codes":[{"authorDate":"2020-04-24 00:40:04","commitOrder":6,"curCode":"    public void testNullValue() throws Exception {\n        String mapping = Strings.toString(XContentFactory.jsonBuilder().startObject().startObject(\"type\")\n            .startObject(\"properties\").startObject(\"location\")\n            .field(\"type\", \"geo_point\")\n            .field(NULL_VALUE.getPreferredName(), \"1,2\")\n            .endObject().endObject()\n            .endObject().endObject());\n\n        DocumentMapper defaultMapper = createIndex(\"test\").mapperService().documentMapperParser()\n            .parse(\"type\", new CompressedXContent(mapping));\n        Mapper fieldMapper = defaultMapper.mappers().getMapper(\"location\");\n        assertThat(fieldMapper, instanceOf(GeoPointFieldMapper.class));\n\n        Object nullValue = ((GeoPointFieldMapper) fieldMapper).fieldType().nullValue();\n        assertThat(nullValue, equalTo(new GeoPoint(1, 2)));\n\n        ParsedDocument doc = defaultMapper.parse(new SourceToParse(\"test\", \"1\",\n            BytesReference.bytes(XContentFactory.jsonBuilder()\n                    .startObject()\n                    .nullField(\"location\")\n                    .endObject()),\n            XContentType.JSON));\n\n        assertThat(doc.rootDoc().getField(\"location\"), notNullValue());\n        BytesRef defaultValue = doc.rootDoc().getField(\"location\").binaryValue();\n\n        doc = defaultMapper.parse(new SourceToParse(\"test\", \"1\",\n            BytesReference.bytes(XContentFactory.jsonBuilder()\n                    .startObject()\n                    .field(\"location\", \"1, 2\")\n                    .endObject()),\n            XContentType.JSON));\n        \r\n        assertThat(defaultValue, equalTo(doc.rootDoc().getField(\"location\").binaryValue()));\n\n        doc = defaultMapper.parse(new SourceToParse(\"test\", \"1\",\n            BytesReference.bytes(XContentFactory.jsonBuilder()\n                    .startObject()\n                    .field(\"location\", \"3, 4\")\n                    .endObject()),\n            XContentType.JSON));\n        \r\n        assertThat(defaultValue, not(equalTo(doc.rootDoc().getField(\"location\").binaryValue())));\n    }\n","date":"2020-04-24 00:40:04","endLine":429,"groupId":"7122","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testNullValue","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/80/2cbbeda441ed20b6b65bcdf70a3ae95e3ce485.src","preCode":"    public void testNullValue() throws Exception {\n        String mapping = Strings.toString(XContentFactory.jsonBuilder().startObject().startObject(\"type\")\n            .startObject(\"properties\").startObject(\"location\")\n            .field(\"type\", \"geo_point\")\n            .field(NULL_VALUE, \"1,2\")\n            .endObject().endObject()\n            .endObject().endObject());\n\n        DocumentMapper defaultMapper = createIndex(\"test\").mapperService().documentMapperParser()\n            .parse(\"type\", new CompressedXContent(mapping));\n        Mapper fieldMapper = defaultMapper.mappers().getMapper(\"location\");\n        assertThat(fieldMapper, instanceOf(GeoPointFieldMapper.class));\n\n        Object nullValue = ((GeoPointFieldMapper) fieldMapper).fieldType().nullValue();\n        assertThat(nullValue, equalTo(new GeoPoint(1, 2)));\n\n        ParsedDocument doc = defaultMapper.parse(new SourceToParse(\"test\", \"1\",\n            BytesReference.bytes(XContentFactory.jsonBuilder()\n                    .startObject()\n                    .nullField(\"location\")\n                    .endObject()),\n            XContentType.JSON));\n\n        assertThat(doc.rootDoc().getField(\"location\"), notNullValue());\n        BytesRef defaultValue = doc.rootDoc().getField(\"location\").binaryValue();\n\n        doc = defaultMapper.parse(new SourceToParse(\"test\", \"1\",\n            BytesReference.bytes(XContentFactory.jsonBuilder()\n                    .startObject()\n                    .field(\"location\", \"1, 2\")\n                    .endObject()),\n            XContentType.JSON));\n        \r\n        assertThat(defaultValue, equalTo(doc.rootDoc().getField(\"location\").binaryValue()));\n\n        doc = defaultMapper.parse(new SourceToParse(\"test\", \"1\",\n            BytesReference.bytes(XContentFactory.jsonBuilder()\n                    .startObject()\n                    .field(\"location\", \"3, 4\")\n                    .endObject()),\n            XContentType.JSON));\n        \r\n        assertThat(defaultValue, not(equalTo(doc.rootDoc().getField(\"location\").binaryValue())));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/index/mapper/GeoPointFieldMapperTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":386,"status":"M"},{"authorDate":"2020-04-24 00:40:04","commitOrder":6,"curCode":"    public void testNullValueWithIgnoreMalformed() throws Exception {\n        \r\n        String mapping = Strings.toString(XContentFactory.jsonBuilder()\n            .startObject().startObject(\"type\")\n                .startObject(\"properties\").startObject(\"location\")\n                    .field(\"type\", \"geo_point\")\n                    .field(IGNORE_Z_VALUE.getPreferredName(), false)\n                    .field(IGNORE_MALFORMED.getPreferredName(), true)\n                    .field(NULL_VALUE.getPreferredName(), \"91,181\")\n                .endObject().endObject()\n            .endObject().endObject());\n\n        DocumentMapper defaultMapper = createIndex(\"test\").mapperService().documentMapperParser()\n            .parse(\"type\", new CompressedXContent(mapping));\n        Mapper fieldMapper = defaultMapper.mappers().getMapper(\"location\");\n        assertThat(fieldMapper, instanceOf(GeoPointFieldMapper.class));\n\n        Object nullValue = ((GeoPointFieldMapper) fieldMapper).fieldType().nullValue();\n        \r\n        assertThat(nullValue, equalTo(new GeoPoint(89, 1)));\n    }\n","date":"2020-04-24 00:40:04","endLine":455,"groupId":"38912","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testNullValueWithIgnoreMalformed","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/80/2cbbeda441ed20b6b65bcdf70a3ae95e3ce485.src","preCode":"    public void testNullValueWithIgnoreMalformed() throws Exception {\n        \r\n        String mapping = Strings.toString(XContentFactory.jsonBuilder()\n            .startObject().startObject(\"type\")\n                .startObject(\"properties\").startObject(\"location\")\n                    .field(\"type\", \"geo_point\")\n                    .field(IGNORE_Z_VALUE.getPreferredName(), false)\n                    .field(IGNORE_MALFORMED, true)\n                    .field(NULL_VALUE, \"91,181\")\n                .endObject().endObject()\n            .endObject().endObject());\n\n        DocumentMapper defaultMapper = createIndex(\"test\").mapperService().documentMapperParser()\n            .parse(\"type\", new CompressedXContent(mapping));\n        Mapper fieldMapper = defaultMapper.mappers().getMapper(\"location\");\n        assertThat(fieldMapper, instanceOf(GeoPointFieldMapper.class));\n\n        Object nullValue = ((GeoPointFieldMapper) fieldMapper).fieldType().nullValue();\n        \r\n        assertThat(nullValue, equalTo(new GeoPoint(89, 1)));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/index/mapper/GeoPointFieldMapperTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":435,"status":"M"}],"commitId":"eb0b2c8f6996ff90becc8875f20ac34b925f5795","commitMessage":"@@@Refactor Spatial Field Mappers (#55621)\n\nThis commit refactors all spatial Field Mappers to a common \nAbstractGeometryFieldMapper that implements shared parameter functionality \n(e.g..  ignore_malformed.  ignore_z_value) and provides a common framework for \noverriding type parsing.  and building in xpack. Common shape functionality is \nimplemented in a new AbstractShapeGeometryFieldMapper that is reused and \noverridden in GeoShapeFieldMapper.  GeoShapeFieldMapperWithDocValues.  \nLegacyGeoShapeFieldMapper.  and ShapeFieldMapper. This abstraction provides a \nreusable foundation for adding new xpack features; such as coordinate reference \nsystem support.","date":"2020-04-24 00:40:04","modifiedFileCount":"30","status":"M","submitter":"Nick Knize"},{"authorTime":"2020-04-24 00:40:04","codes":[{"authorDate":"2020-05-12 02:14:16","commitOrder":7,"curCode":"    public void testNullValue() throws Exception {\n        String mapping = Strings.toString(XContentFactory.jsonBuilder().startObject().startObject(\"type\")\n            .startObject(\"properties\").startObject(\"location\")\n            .field(\"type\", \"geo_point\")\n            .field(NULL_VALUE.getPreferredName(), \"1,2\")\n            .endObject().endObject()\n            .endObject().endObject());\n\n        DocumentMapper defaultMapper = createIndex(\"test\").mapperService().documentMapperParser()\n            .parse(\"type\", new CompressedXContent(mapping));\n        Mapper fieldMapper = defaultMapper.mappers().getMapper(\"location\");\n        assertThat(fieldMapper, instanceOf(GeoPointFieldMapper.class));\n\n        Object nullValue = ((GeoPointFieldMapper) fieldMapper).fieldType().nullValue();\n        assertThat(nullValue, equalTo(new GeoPoint(1, 2)));\n\n        ParsedDocument doc = defaultMapper.parse(new SourceToParse(\"test\", \"1\",\n            BytesReference.bytes(XContentFactory.jsonBuilder()\n                    .startObject()\n                    .nullField(\"location\")\n                    .endObject()),\n            XContentType.JSON));\n\n        assertThat(doc.rootDoc().getField(\"location\"), notNullValue());\n        BytesRef defaultValue = doc.rootDoc().getBinaryValue(\"location\");\n\n        doc = defaultMapper.parse(new SourceToParse(\"test\", \"1\",\n            BytesReference.bytes(XContentFactory.jsonBuilder()\n                    .startObject()\n                    .field(\"location\", \"1, 2\")\n                    .endObject()),\n            XContentType.JSON));\n        \r\n        assertThat(defaultValue, equalTo(doc.rootDoc().getBinaryValue(\"location\")));\n\n        doc = defaultMapper.parse(new SourceToParse(\"test\", \"1\",\n            BytesReference.bytes(XContentFactory.jsonBuilder()\n                    .startObject()\n                    .field(\"location\", \"3, 4\")\n                    .endObject()),\n            XContentType.JSON));\n        \r\n        assertThat(defaultValue, not(equalTo(doc.rootDoc().getBinaryValue(\"location\"))));\n    }\n","date":"2020-05-12 02:14:16","endLine":429,"groupId":"19109","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testNullValue","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/b9/0999283b6c7d70c2a89ff88ea47a1b8c6297a4.src","preCode":"    public void testNullValue() throws Exception {\n        String mapping = Strings.toString(XContentFactory.jsonBuilder().startObject().startObject(\"type\")\n            .startObject(\"properties\").startObject(\"location\")\n            .field(\"type\", \"geo_point\")\n            .field(NULL_VALUE.getPreferredName(), \"1,2\")\n            .endObject().endObject()\n            .endObject().endObject());\n\n        DocumentMapper defaultMapper = createIndex(\"test\").mapperService().documentMapperParser()\n            .parse(\"type\", new CompressedXContent(mapping));\n        Mapper fieldMapper = defaultMapper.mappers().getMapper(\"location\");\n        assertThat(fieldMapper, instanceOf(GeoPointFieldMapper.class));\n\n        Object nullValue = ((GeoPointFieldMapper) fieldMapper).fieldType().nullValue();\n        assertThat(nullValue, equalTo(new GeoPoint(1, 2)));\n\n        ParsedDocument doc = defaultMapper.parse(new SourceToParse(\"test\", \"1\",\n            BytesReference.bytes(XContentFactory.jsonBuilder()\n                    .startObject()\n                    .nullField(\"location\")\n                    .endObject()),\n            XContentType.JSON));\n\n        assertThat(doc.rootDoc().getField(\"location\"), notNullValue());\n        BytesRef defaultValue = doc.rootDoc().getField(\"location\").binaryValue();\n\n        doc = defaultMapper.parse(new SourceToParse(\"test\", \"1\",\n            BytesReference.bytes(XContentFactory.jsonBuilder()\n                    .startObject()\n                    .field(\"location\", \"1, 2\")\n                    .endObject()),\n            XContentType.JSON));\n        \r\n        assertThat(defaultValue, equalTo(doc.rootDoc().getField(\"location\").binaryValue()));\n\n        doc = defaultMapper.parse(new SourceToParse(\"test\", \"1\",\n            BytesReference.bytes(XContentFactory.jsonBuilder()\n                    .startObject()\n                    .field(\"location\", \"3, 4\")\n                    .endObject()),\n            XContentType.JSON));\n        \r\n        assertThat(defaultValue, not(equalTo(doc.rootDoc().getField(\"location\").binaryValue())));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/index/mapper/GeoPointFieldMapperTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":386,"status":"M"},{"authorDate":"2020-04-24 00:40:04","commitOrder":7,"curCode":"    public void testNullValueWithIgnoreMalformed() throws Exception {\n        \r\n        String mapping = Strings.toString(XContentFactory.jsonBuilder()\n            .startObject().startObject(\"type\")\n                .startObject(\"properties\").startObject(\"location\")\n                    .field(\"type\", \"geo_point\")\n                    .field(IGNORE_Z_VALUE.getPreferredName(), false)\n                    .field(IGNORE_MALFORMED.getPreferredName(), true)\n                    .field(NULL_VALUE.getPreferredName(), \"91,181\")\n                .endObject().endObject()\n            .endObject().endObject());\n\n        DocumentMapper defaultMapper = createIndex(\"test\").mapperService().documentMapperParser()\n            .parse(\"type\", new CompressedXContent(mapping));\n        Mapper fieldMapper = defaultMapper.mappers().getMapper(\"location\");\n        assertThat(fieldMapper, instanceOf(GeoPointFieldMapper.class));\n\n        Object nullValue = ((GeoPointFieldMapper) fieldMapper).fieldType().nullValue();\n        \r\n        assertThat(nullValue, equalTo(new GeoPoint(89, 1)));\n    }\n","date":"2020-04-24 00:40:04","endLine":455,"groupId":"38912","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testNullValueWithIgnoreMalformed","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/80/2cbbeda441ed20b6b65bcdf70a3ae95e3ce485.src","preCode":"    public void testNullValueWithIgnoreMalformed() throws Exception {\n        \r\n        String mapping = Strings.toString(XContentFactory.jsonBuilder()\n            .startObject().startObject(\"type\")\n                .startObject(\"properties\").startObject(\"location\")\n                    .field(\"type\", \"geo_point\")\n                    .field(IGNORE_Z_VALUE.getPreferredName(), false)\n                    .field(IGNORE_MALFORMED.getPreferredName(), true)\n                    .field(NULL_VALUE.getPreferredName(), \"91,181\")\n                .endObject().endObject()\n            .endObject().endObject());\n\n        DocumentMapper defaultMapper = createIndex(\"test\").mapperService().documentMapperParser()\n            .parse(\"type\", new CompressedXContent(mapping));\n        Mapper fieldMapper = defaultMapper.mappers().getMapper(\"location\");\n        assertThat(fieldMapper, instanceOf(GeoPointFieldMapper.class));\n\n        Object nullValue = ((GeoPointFieldMapper) fieldMapper).fieldType().nullValue();\n        \r\n        assertThat(nullValue, equalTo(new GeoPoint(89, 1)));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/index/mapper/GeoPointFieldMapperTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":435,"status":"N"}],"commitId":"a01d2bd24b0e849af034b88b563897a692a87bd8","commitMessage":"@@@[Geo] Refactor Point Field Mappers (#56060)\n\nThis commit refactors the following:\n  * GeoPointFieldMapper and PointFieldMapper to\n    AbstractPointGeometryFieldMapper derived from AbstractGeometryFieldMapper.\n  * .setupFieldType moved up to AbstractGeometryFieldMapper\n  * lucene indexing moved up to AbstractGeometryFieldMapper.parse\n  * new addStoredFields.  addDocValuesFields abstract methods for implementing\n    stored field and doc values field indexing in the concrete field mappers\n\nThis refactor is the next phase for setting up a framework for extending\nspatial field mapper functionality in x-pack.","date":"2020-05-12 02:14:16","modifiedFileCount":"25","status":"M","submitter":"Nick Knize"},{"authorTime":"2020-06-16 00:47:15","codes":[{"authorDate":"2020-06-16 00:47:15","commitOrder":8,"curCode":"    public void testNullValue() throws Exception {\n        String mapping = Strings.toString(XContentFactory.jsonBuilder().startObject().startObject(\"type\")\n            .startObject(\"properties\").startObject(\"location\")\n            .field(\"type\", \"geo_point\")\n            .field(NULL_VALUE.getPreferredName(), \"1,2\")\n            .endObject().endObject()\n            .endObject().endObject());\n\n        DocumentMapper defaultMapper = createIndex(\"test\").mapperService().documentMapperParser()\n            .parse(\"type\", new CompressedXContent(mapping));\n        Mapper fieldMapper = defaultMapper.mappers().getMapper(\"location\");\n        assertThat(fieldMapper, instanceOf(GeoPointFieldMapper.class));\n\n        AbstractPointGeometryFieldMapper.ParsedPoint nullValue = ((GeoPointFieldMapper) fieldMapper).nullValue;\n        assertThat(nullValue, equalTo(new GeoPoint(1, 2)));\n\n        ParsedDocument doc = defaultMapper.parse(new SourceToParse(\"test\", \"1\",\n            BytesReference.bytes(XContentFactory.jsonBuilder()\n                    .startObject()\n                    .nullField(\"location\")\n                    .endObject()),\n            XContentType.JSON));\n\n        assertThat(doc.rootDoc().getField(\"location\"), notNullValue());\n        BytesRef defaultValue = doc.rootDoc().getBinaryValue(\"location\");\n\n        doc = defaultMapper.parse(new SourceToParse(\"test\", \"1\",\n            BytesReference.bytes(XContentFactory.jsonBuilder()\n                    .startObject()\n                    .field(\"location\", \"1, 2\")\n                    .endObject()),\n            XContentType.JSON));\n        \r\n        assertThat(defaultValue, equalTo(doc.rootDoc().getBinaryValue(\"location\")));\n\n        doc = defaultMapper.parse(new SourceToParse(\"test\", \"1\",\n            BytesReference.bytes(XContentFactory.jsonBuilder()\n                    .startObject()\n                    .field(\"location\", \"3, 4\")\n                    .endObject()),\n            XContentType.JSON));\n        \r\n        assertThat(defaultValue, not(equalTo(doc.rootDoc().getBinaryValue(\"location\"))));\n    }\n","date":"2020-06-16 00:47:15","endLine":436,"groupId":"60778","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"testNullValue","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/ab/e4805bce0889e2f898dd283d98278fe46f6f14.src","preCode":"    public void testNullValue() throws Exception {\n        String mapping = Strings.toString(XContentFactory.jsonBuilder().startObject().startObject(\"type\")\n            .startObject(\"properties\").startObject(\"location\")\n            .field(\"type\", \"geo_point\")\n            .field(NULL_VALUE.getPreferredName(), \"1,2\")\n            .endObject().endObject()\n            .endObject().endObject());\n\n        DocumentMapper defaultMapper = createIndex(\"test\").mapperService().documentMapperParser()\n            .parse(\"type\", new CompressedXContent(mapping));\n        Mapper fieldMapper = defaultMapper.mappers().getMapper(\"location\");\n        assertThat(fieldMapper, instanceOf(GeoPointFieldMapper.class));\n\n        Object nullValue = ((GeoPointFieldMapper) fieldMapper).fieldType().nullValue();\n        assertThat(nullValue, equalTo(new GeoPoint(1, 2)));\n\n        ParsedDocument doc = defaultMapper.parse(new SourceToParse(\"test\", \"1\",\n            BytesReference.bytes(XContentFactory.jsonBuilder()\n                    .startObject()\n                    .nullField(\"location\")\n                    .endObject()),\n            XContentType.JSON));\n\n        assertThat(doc.rootDoc().getField(\"location\"), notNullValue());\n        BytesRef defaultValue = doc.rootDoc().getBinaryValue(\"location\");\n\n        doc = defaultMapper.parse(new SourceToParse(\"test\", \"1\",\n            BytesReference.bytes(XContentFactory.jsonBuilder()\n                    .startObject()\n                    .field(\"location\", \"1, 2\")\n                    .endObject()),\n            XContentType.JSON));\n        \r\n        assertThat(defaultValue, equalTo(doc.rootDoc().getBinaryValue(\"location\")));\n\n        doc = defaultMapper.parse(new SourceToParse(\"test\", \"1\",\n            BytesReference.bytes(XContentFactory.jsonBuilder()\n                    .startObject()\n                    .field(\"location\", \"3, 4\")\n                    .endObject()),\n            XContentType.JSON));\n        \r\n        assertThat(defaultValue, not(equalTo(doc.rootDoc().getBinaryValue(\"location\"))));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/index/mapper/GeoPointFieldMapperTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":393,"status":"M"},{"authorDate":"2020-06-16 00:47:15","commitOrder":8,"curCode":"    public void testNullValueWithIgnoreMalformed() throws Exception {\n        \r\n        String mapping = Strings.toString(XContentFactory.jsonBuilder()\n            .startObject().startObject(\"type\")\n                .startObject(\"properties\").startObject(\"location\")\n                    .field(\"type\", \"geo_point\")\n                    .field(IGNORE_Z_VALUE.getPreferredName(), false)\n                    .field(IGNORE_MALFORMED.getPreferredName(), true)\n                    .field(NULL_VALUE.getPreferredName(), \"91,181\")\n                .endObject().endObject()\n            .endObject().endObject());\n\n        DocumentMapper defaultMapper = createIndex(\"test\").mapperService().documentMapperParser()\n            .parse(\"type\", new CompressedXContent(mapping));\n        Mapper fieldMapper = defaultMapper.mappers().getMapper(\"location\");\n        assertThat(fieldMapper, instanceOf(GeoPointFieldMapper.class));\n\n        AbstractPointGeometryFieldMapper.ParsedPoint nullValue = ((GeoPointFieldMapper) fieldMapper).nullValue;\n        \r\n        assertThat(nullValue, equalTo(new GeoPoint(89, 1)));\n    }\n","date":"2020-06-16 00:47:15","endLine":462,"groupId":"38912","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"testNullValueWithIgnoreMalformed","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/ab/e4805bce0889e2f898dd283d98278fe46f6f14.src","preCode":"    public void testNullValueWithIgnoreMalformed() throws Exception {\n        \r\n        String mapping = Strings.toString(XContentFactory.jsonBuilder()\n            .startObject().startObject(\"type\")\n                .startObject(\"properties\").startObject(\"location\")\n                    .field(\"type\", \"geo_point\")\n                    .field(IGNORE_Z_VALUE.getPreferredName(), false)\n                    .field(IGNORE_MALFORMED.getPreferredName(), true)\n                    .field(NULL_VALUE.getPreferredName(), \"91,181\")\n                .endObject().endObject()\n            .endObject().endObject());\n\n        DocumentMapper defaultMapper = createIndex(\"test\").mapperService().documentMapperParser()\n            .parse(\"type\", new CompressedXContent(mapping));\n        Mapper fieldMapper = defaultMapper.mappers().getMapper(\"location\");\n        assertThat(fieldMapper, instanceOf(GeoPointFieldMapper.class));\n\n        Object nullValue = ((GeoPointFieldMapper) fieldMapper).fieldType().nullValue();\n        \r\n        assertThat(nullValue, equalTo(new GeoPoint(89, 1)));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/index/mapper/GeoPointFieldMapperTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":442,"status":"M"}],"commitId":"3b696828ada5953bb1669b972a353736383edf08","commitMessage":"@@@MappedFieldType should not extend FieldType (#57666)\n\nMappedFieldType is a combination of two concerns:\n\n* an extension of lucene's FieldType.  defining how a field should be indexed\n* a set of query factory methods.  defining how a field should be searched\n\nWe want to break these two concerns apart. This commit is a first step to doing this.  breaking\nthe inheritance relationship between MappedFieldType and FieldType. MappedFieldType \ninstead has a series of boolean flags defining whether or not the field is searchable or \naggregatable.  and FieldMapper has a separate FieldType passed to its constructor defining \nhow indexing should be done.\n\nRelates to #56814","date":"2020-06-16 00:47:15","modifiedFileCount":"257","status":"M","submitter":"Alan Woodward"},{"authorTime":"2020-08-25 01:10:47","codes":[{"authorDate":"2020-08-25 01:10:47","commitOrder":9,"curCode":"    public void testNullValue() throws Exception {\n        DocumentMapper mapper = createDocumentMapper(fieldMapping(b -> b.field(\"type\", \"geo_point\").field(\"null_value\", \"1,2\")));\n        Mapper fieldMapper = mapper.mappers().getMapper(\"field\");\n        assertThat(fieldMapper, instanceOf(GeoPointFieldMapper.class));\n\n        AbstractPointGeometryFieldMapper.ParsedPoint nullValue = ((GeoPointFieldMapper) fieldMapper).nullValue;\n        assertThat(nullValue, equalTo(new GeoPoint(1, 2)));\n\n        ParsedDocument doc = mapper.parse(source(b -> b.nullField(\"field\")));\n        assertThat(doc.rootDoc().getField(\"field\"), notNullValue());\n        BytesRef defaultValue = doc.rootDoc().getBinaryValue(\"field\");\n\n        \r\n        doc = mapper.parse(source(b -> b.field(\"field\", \"1, 2\")));\n        assertThat(defaultValue, equalTo(doc.rootDoc().getBinaryValue(\"field\")));\n\n        doc = mapper.parse(source(b -> b.field(\"field\", \"3, 4\")));\n        assertThat(defaultValue, not(equalTo(doc.rootDoc().getBinaryValue(\"field\"))));\n    }\n","date":"2020-08-25 01:10:47","endLine":226,"groupId":"6903","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"testNullValue","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/19/a0776b199a5f99e823fbafa9c05611fb8b5411.src","preCode":"    public void testNullValue() throws Exception {\n        String mapping = Strings.toString(XContentFactory.jsonBuilder().startObject().startObject(\"type\")\n            .startObject(\"properties\").startObject(\"location\")\n            .field(\"type\", \"geo_point\")\n            .field(NULL_VALUE.getPreferredName(), \"1,2\")\n            .endObject().endObject()\n            .endObject().endObject());\n\n        DocumentMapper defaultMapper = createIndex(\"test\").mapperService().documentMapperParser()\n            .parse(\"type\", new CompressedXContent(mapping));\n        Mapper fieldMapper = defaultMapper.mappers().getMapper(\"location\");\n        assertThat(fieldMapper, instanceOf(GeoPointFieldMapper.class));\n\n        AbstractPointGeometryFieldMapper.ParsedPoint nullValue = ((GeoPointFieldMapper) fieldMapper).nullValue;\n        assertThat(nullValue, equalTo(new GeoPoint(1, 2)));\n\n        ParsedDocument doc = defaultMapper.parse(new SourceToParse(\"test\", \"1\",\n            BytesReference.bytes(XContentFactory.jsonBuilder()\n                    .startObject()\n                    .nullField(\"location\")\n                    .endObject()),\n            XContentType.JSON));\n\n        assertThat(doc.rootDoc().getField(\"location\"), notNullValue());\n        BytesRef defaultValue = doc.rootDoc().getBinaryValue(\"location\");\n\n        doc = defaultMapper.parse(new SourceToParse(\"test\", \"1\",\n            BytesReference.bytes(XContentFactory.jsonBuilder()\n                    .startObject()\n                    .field(\"location\", \"1, 2\")\n                    .endObject()),\n            XContentType.JSON));\n        \r\n        assertThat(defaultValue, equalTo(doc.rootDoc().getBinaryValue(\"location\")));\n\n        doc = defaultMapper.parse(new SourceToParse(\"test\", \"1\",\n            BytesReference.bytes(XContentFactory.jsonBuilder()\n                    .startObject()\n                    .field(\"location\", \"3, 4\")\n                    .endObject()),\n            XContentType.JSON));\n        \r\n        assertThat(defaultValue, not(equalTo(doc.rootDoc().getBinaryValue(\"location\"))));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/index/mapper/GeoPointFieldMapperTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":208,"status":"M"},{"authorDate":"2020-08-25 01:10:47","commitOrder":9,"curCode":"    public void testNullValueWithIgnoreMalformed() throws Exception {\n        \r\n        DocumentMapper mapper = createDocumentMapper(\n            fieldMapping(\n                b -> b.field(\"type\", \"geo_point\")\n                    .field(\"ignore_z_value\", false)\n                    .field(\"ignore_malformed\", true)\n                    .field(\"null_value\", \"91,181\")\n            )\n        );\n        Mapper fieldMapper = mapper.mappers().getMapper(\"field\");\n        assertThat(fieldMapper, instanceOf(GeoPointFieldMapper.class));\n\n        AbstractPointGeometryFieldMapper.ParsedPoint nullValue = ((GeoPointFieldMapper) fieldMapper).nullValue;\n        \r\n        assertThat(nullValue, equalTo(new GeoPoint(89, 1)));\n    }\n","date":"2020-08-25 01:10:47","endLine":248,"groupId":"61100","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"testNullValueWithIgnoreMalformed","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/19/a0776b199a5f99e823fbafa9c05611fb8b5411.src","preCode":"    public void testNullValueWithIgnoreMalformed() throws Exception {\n        \r\n        String mapping = Strings.toString(XContentFactory.jsonBuilder()\n            .startObject().startObject(\"type\")\n                .startObject(\"properties\").startObject(\"location\")\n                    .field(\"type\", \"geo_point\")\n                    .field(IGNORE_Z_VALUE.getPreferredName(), false)\n                    .field(IGNORE_MALFORMED.getPreferredName(), true)\n                    .field(NULL_VALUE.getPreferredName(), \"91,181\")\n                .endObject().endObject()\n            .endObject().endObject());\n\n        DocumentMapper defaultMapper = createIndex(\"test\").mapperService().documentMapperParser()\n            .parse(\"type\", new CompressedXContent(mapping));\n        Mapper fieldMapper = defaultMapper.mappers().getMapper(\"location\");\n        assertThat(fieldMapper, instanceOf(GeoPointFieldMapper.class));\n\n        AbstractPointGeometryFieldMapper.ParsedPoint nullValue = ((GeoPointFieldMapper) fieldMapper).nullValue;\n        \r\n        assertThat(nullValue, equalTo(new GeoPoint(89, 1)));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/index/mapper/GeoPointFieldMapperTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":232,"status":"M"}],"commitId":"e2dd0bde26e6c1f9f1a5137a5bf432d348e4205e","commitMessage":"@@@Merge branch 'master' into feature/runtime_fields\n","date":"2020-08-25 01:10:47","modifiedFileCount":"48","status":"M","submitter":"Nik Everett"},{"authorTime":"2020-08-25 01:10:47","codes":[{"authorDate":"2020-11-24 17:22:41","commitOrder":10,"curCode":"    public void testNullValue() throws Exception {\n        DocumentMapper mapper = createDocumentMapper(\n            fieldMapping(b -> b.field(\"type\", \"geo_point\"))\n        );\n        Mapper fieldMapper = mapper.mappers().getMapper(\"field\");\n        assertThat(fieldMapper, instanceOf(GeoPointFieldMapper.class));\n\n        ParsedDocument doc = mapper.parse(source(b -> b.nullField(\"field\")));\n        assertThat(doc.rootDoc().getField(\"field\"), nullValue());\n        assertThat(doc.rootDoc().getFields(FieldNamesFieldMapper.NAME).length, equalTo(0));\n\n        mapper = createDocumentMapper(\n            fieldMapping(b -> b.field(\"type\", \"geo_point\").field(\"doc_values\", false))\n        );\n        fieldMapper = mapper.mappers().getMapper(\"field\");\n        assertThat(fieldMapper, instanceOf(GeoPointFieldMapper.class));\n\n        doc = mapper.parse(source(b -> b.nullField(\"field\")));\n        assertThat(doc.rootDoc().getField(\"field\"), nullValue());\n        assertThat(doc.rootDoc().getFields(FieldNamesFieldMapper.NAME).length, equalTo(0));\n\n        mapper = createDocumentMapper(\n            fieldMapping(b -> b.field(\"type\", \"geo_point\").field(\"null_value\", \"1,2\"))\n        );\n        fieldMapper = mapper.mappers().getMapper(\"field\");\n        assertThat(fieldMapper, instanceOf(GeoPointFieldMapper.class));\n\n        AbstractPointGeometryFieldMapper.ParsedPoint nullValue = ((GeoPointFieldMapper) fieldMapper).nullValue;\n        assertThat(nullValue, equalTo(new GeoPoint(1, 2)));\n\n        doc = mapper.parse(source(b -> b.nullField(\"field\")));\n        assertThat(doc.rootDoc().getField(\"field\"), notNullValue());\n        BytesRef defaultValue = doc.rootDoc().getBinaryValue(\"field\");\n\n        \r\n        doc = mapper.parse(source(b -> b.field(\"field\", \"1, 2\")));\n        assertThat(defaultValue, equalTo(doc.rootDoc().getBinaryValue(\"field\")));\n\n        doc = mapper.parse(source(b -> b.field(\"field\", \"3, 4\")));\n        assertThat(defaultValue, not(equalTo(doc.rootDoc().getBinaryValue(\"field\"))));\n    }\n","date":"2020-11-24 17:22:41","endLine":265,"groupId":"62831","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"testNullValue","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/19/fc27afa622966cbfd0211b6f0a5129cc03d42b.src","preCode":"    public void testNullValue() throws Exception {\n        DocumentMapper mapper = createDocumentMapper(fieldMapping(b -> b.field(\"type\", \"geo_point\").field(\"null_value\", \"1,2\")));\n        Mapper fieldMapper = mapper.mappers().getMapper(\"field\");\n        assertThat(fieldMapper, instanceOf(GeoPointFieldMapper.class));\n\n        AbstractPointGeometryFieldMapper.ParsedPoint nullValue = ((GeoPointFieldMapper) fieldMapper).nullValue;\n        assertThat(nullValue, equalTo(new GeoPoint(1, 2)));\n\n        ParsedDocument doc = mapper.parse(source(b -> b.nullField(\"field\")));\n        assertThat(doc.rootDoc().getField(\"field\"), notNullValue());\n        BytesRef defaultValue = doc.rootDoc().getBinaryValue(\"field\");\n\n        \r\n        doc = mapper.parse(source(b -> b.field(\"field\", \"1, 2\")));\n        assertThat(defaultValue, equalTo(doc.rootDoc().getBinaryValue(\"field\")));\n\n        doc = mapper.parse(source(b -> b.field(\"field\", \"3, 4\")));\n        assertThat(defaultValue, not(equalTo(doc.rootDoc().getBinaryValue(\"field\"))));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/index/mapper/GeoPointFieldMapperTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":225,"status":"M"},{"authorDate":"2020-08-25 01:10:47","commitOrder":10,"curCode":"    public void testNullValueWithIgnoreMalformed() throws Exception {\n        \r\n        DocumentMapper mapper = createDocumentMapper(\n            fieldMapping(\n                b -> b.field(\"type\", \"geo_point\")\n                    .field(\"ignore_z_value\", false)\n                    .field(\"ignore_malformed\", true)\n                    .field(\"null_value\", \"91,181\")\n            )\n        );\n        Mapper fieldMapper = mapper.mappers().getMapper(\"field\");\n        assertThat(fieldMapper, instanceOf(GeoPointFieldMapper.class));\n\n        AbstractPointGeometryFieldMapper.ParsedPoint nullValue = ((GeoPointFieldMapper) fieldMapper).nullValue;\n        \r\n        assertThat(nullValue, equalTo(new GeoPoint(89, 1)));\n    }\n","date":"2020-08-25 01:10:47","endLine":248,"groupId":"61100","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"testNullValueWithIgnoreMalformed","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/19/a0776b199a5f99e823fbafa9c05611fb8b5411.src","preCode":"    public void testNullValueWithIgnoreMalformed() throws Exception {\n        \r\n        DocumentMapper mapper = createDocumentMapper(\n            fieldMapping(\n                b -> b.field(\"type\", \"geo_point\")\n                    .field(\"ignore_z_value\", false)\n                    .field(\"ignore_malformed\", true)\n                    .field(\"null_value\", \"91,181\")\n            )\n        );\n        Mapper fieldMapper = mapper.mappers().getMapper(\"field\");\n        assertThat(fieldMapper, instanceOf(GeoPointFieldMapper.class));\n\n        AbstractPointGeometryFieldMapper.ParsedPoint nullValue = ((GeoPointFieldMapper) fieldMapper).nullValue;\n        \r\n        assertThat(nullValue, equalTo(new GeoPoint(89, 1)));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/index/mapper/GeoPointFieldMapperTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":232,"status":"N"}],"commitId":"cf148cda5be5adb08c77e4495104498df0d34561","commitMessage":"@@@Fix handling of null values in geo_point (#65307)\n\nA bug was introduced in 7.10 that causes explicit `null` values to be indexed in the _field_names\nfield. This change fixes this bug for newly ingested data but `null` values ingested with 7.10 will\ncontinue to match `exists` query so a reindex is required.\n\nFixes #65306","date":"2020-11-24 17:22:41","modifiedFileCount":"2","status":"M","submitter":"Jim Ferenczi"},{"authorTime":"2021-06-07 17:00:50","codes":[{"authorDate":"2021-06-07 17:00:50","commitOrder":11,"curCode":"    public void testNullValue() throws Exception {\n        DocumentMapper mapper = createDocumentMapper(\n            fieldMapping(b -> b.field(\"type\", \"geo_point\"))\n        );\n        Mapper fieldMapper = mapper.mappers().getMapper(\"field\");\n        assertThat(fieldMapper, instanceOf(GeoPointFieldMapper.class));\n\n        ParsedDocument doc = mapper.parse(source(b -> b.nullField(\"field\")));\n        assertThat(doc.rootDoc().getField(\"field\"), nullValue());\n        assertThat(doc.rootDoc().getFields(FieldNamesFieldMapper.NAME).length, equalTo(0));\n\n        mapper = createDocumentMapper(\n            fieldMapping(b -> b.field(\"type\", \"geo_point\").field(\"doc_values\", false))\n        );\n        fieldMapper = mapper.mappers().getMapper(\"field\");\n        assertThat(fieldMapper, instanceOf(GeoPointFieldMapper.class));\n\n        doc = mapper.parse(source(b -> b.nullField(\"field\")));\n        assertThat(doc.rootDoc().getField(\"field\"), nullValue());\n        assertThat(doc.rootDoc().getFields(FieldNamesFieldMapper.NAME).length, equalTo(0));\n\n        mapper = createDocumentMapper(\n            fieldMapping(b -> b.field(\"type\", \"geo_point\").field(\"null_value\", \"1,2\"))\n        );\n        fieldMapper = mapper.mappers().getMapper(\"field\");\n        assertThat(fieldMapper, instanceOf(GeoPointFieldMapper.class));\n\n        GeoPoint nullValue = ((GeoPointFieldMapper) fieldMapper).nullValue;\n        assertThat(nullValue, equalTo(new GeoPoint(1, 2)));\n\n        doc = mapper.parse(source(b -> b.nullField(\"field\")));\n        assertThat(doc.rootDoc().getField(\"field\"), notNullValue());\n        BytesRef defaultValue = doc.rootDoc().getBinaryValue(\"field\");\n\n        \r\n        doc = mapper.parse(source(b -> b.field(\"field\", \"1, 2\")));\n        assertThat(defaultValue, equalTo(doc.rootDoc().getBinaryValue(\"field\")));\n\n        doc = mapper.parse(source(b -> b.field(\"field\", \"3, 4\")));\n        assertThat(defaultValue, not(equalTo(doc.rootDoc().getBinaryValue(\"field\"))));\n    }\n","date":"2021-06-07 17:00:50","endLine":278,"groupId":"103196","id":13,"instanceNumber":1,"isCurCommit":0,"methodName":"testNullValue","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/c4/aa06686c795f9f225860a81f26665d9b90d682.src","preCode":"    public void testNullValue() throws Exception {\n        DocumentMapper mapper = createDocumentMapper(\n            fieldMapping(b -> b.field(\"type\", \"geo_point\"))\n        );\n        Mapper fieldMapper = mapper.mappers().getMapper(\"field\");\n        assertThat(fieldMapper, instanceOf(GeoPointFieldMapper.class));\n\n        ParsedDocument doc = mapper.parse(source(b -> b.nullField(\"field\")));\n        assertThat(doc.rootDoc().getField(\"field\"), nullValue());\n        assertThat(doc.rootDoc().getFields(FieldNamesFieldMapper.NAME).length, equalTo(0));\n\n        mapper = createDocumentMapper(\n            fieldMapping(b -> b.field(\"type\", \"geo_point\").field(\"doc_values\", false))\n        );\n        fieldMapper = mapper.mappers().getMapper(\"field\");\n        assertThat(fieldMapper, instanceOf(GeoPointFieldMapper.class));\n\n        doc = mapper.parse(source(b -> b.nullField(\"field\")));\n        assertThat(doc.rootDoc().getField(\"field\"), nullValue());\n        assertThat(doc.rootDoc().getFields(FieldNamesFieldMapper.NAME).length, equalTo(0));\n\n        mapper = createDocumentMapper(\n            fieldMapping(b -> b.field(\"type\", \"geo_point\").field(\"null_value\", \"1,2\"))\n        );\n        fieldMapper = mapper.mappers().getMapper(\"field\");\n        assertThat(fieldMapper, instanceOf(GeoPointFieldMapper.class));\n\n        AbstractPointGeometryFieldMapper.ParsedPoint nullValue = ((GeoPointFieldMapper) fieldMapper).nullValue;\n        assertThat(nullValue, equalTo(new GeoPoint(1, 2)));\n\n        doc = mapper.parse(source(b -> b.nullField(\"field\")));\n        assertThat(doc.rootDoc().getField(\"field\"), notNullValue());\n        BytesRef defaultValue = doc.rootDoc().getBinaryValue(\"field\");\n\n        \r\n        doc = mapper.parse(source(b -> b.field(\"field\", \"1, 2\")));\n        assertThat(defaultValue, equalTo(doc.rootDoc().getBinaryValue(\"field\")));\n\n        doc = mapper.parse(source(b -> b.field(\"field\", \"3, 4\")));\n        assertThat(defaultValue, not(equalTo(doc.rootDoc().getBinaryValue(\"field\"))));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/index/mapper/GeoPointFieldMapperTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":238,"status":"M"},{"authorDate":"2021-06-07 17:00:50","commitOrder":11,"curCode":"    public void testNullValueWithIgnoreMalformed() throws Exception {\n        \r\n        DocumentMapper mapper = createDocumentMapper(\n            fieldMapping(\n                b -> b.field(\"type\", \"geo_point\")\n                    .field(\"ignore_z_value\", false)\n                    .field(\"ignore_malformed\", true)\n                    .field(\"null_value\", \"91,181\")\n            )\n        );\n        Mapper fieldMapper = mapper.mappers().getMapper(\"field\");\n        assertThat(fieldMapper, instanceOf(GeoPointFieldMapper.class));\n\n        GeoPoint nullValue = ((GeoPointFieldMapper) fieldMapper).nullValue;\n        \r\n        assertThat(nullValue, equalTo(new GeoPoint(89, 1)));\n    }\n","date":"2021-06-07 17:00:50","endLine":300,"groupId":"103196","id":14,"instanceNumber":2,"isCurCommit":0,"methodName":"testNullValueWithIgnoreMalformed","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/c4/aa06686c795f9f225860a81f26665d9b90d682.src","preCode":"    public void testNullValueWithIgnoreMalformed() throws Exception {\n        \r\n        DocumentMapper mapper = createDocumentMapper(\n            fieldMapping(\n                b -> b.field(\"type\", \"geo_point\")\n                    .field(\"ignore_z_value\", false)\n                    .field(\"ignore_malformed\", true)\n                    .field(\"null_value\", \"91,181\")\n            )\n        );\n        Mapper fieldMapper = mapper.mappers().getMapper(\"field\");\n        assertThat(fieldMapper, instanceOf(GeoPointFieldMapper.class));\n\n        AbstractPointGeometryFieldMapper.ParsedPoint nullValue = ((GeoPointFieldMapper) fieldMapper).nullValue;\n        \r\n        assertThat(nullValue, equalTo(new GeoPoint(89, 1)));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/index/mapper/GeoPointFieldMapperTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":284,"status":"M"}],"commitId":"9cbc5f7e8fd4a73255d4ed35d4935410b52b9bcd","commitMessage":"@@@Merge branch 'master' into feature/vector-tiles\n","date":"2021-06-07 17:00:50","modifiedFileCount":"192","status":"M","submitter":"iverase"}]
