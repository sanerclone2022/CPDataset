[{"authorTime":"2021-06-18 07:33:58","codes":[{"authorDate":"2021-06-18 07:33:58","commitOrder":1,"curCode":"    private void doTestSortOrder(String repoName, Collection<String> allSnapshotNames, SortOrder order) {\n        final List<SnapshotInfo> defaultSorting = clusterAdmin().prepareGetSnapshots(repoName).setOrder(order).get().getSnapshots(repoName);\n        assertSnapshotListSorted(defaultSorting, null, order);\n        assertSnapshotListSorted(\n            allSnapshotsSorted(allSnapshotNames, repoName, GetSnapshotsRequest.SortBy.NAME, order),\n            GetSnapshotsRequest.SortBy.NAME,\n            order\n        );\n        assertSnapshotListSorted(\n            allSnapshotsSorted(allSnapshotNames, repoName, GetSnapshotsRequest.SortBy.DURATION, order),\n            GetSnapshotsRequest.SortBy.DURATION,\n            order\n        );\n        assertSnapshotListSorted(\n            allSnapshotsSorted(allSnapshotNames, repoName, GetSnapshotsRequest.SortBy.INDICES, order),\n            GetSnapshotsRequest.SortBy.INDICES,\n            order\n        );\n        assertSnapshotListSorted(\n            allSnapshotsSorted(allSnapshotNames, repoName, GetSnapshotsRequest.SortBy.START_TIME, order),\n            GetSnapshotsRequest.SortBy.START_TIME,\n            order\n        );\n    }\n","date":"2021-06-18 07:33:58","endLine":80,"groupId":"71136","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"doTestSortOrder","params":"(StringrepoName@Collection<String>allSnapshotNames@SortOrderorder)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/2c/12224472a73e05001369d606246eeec793cad8.src","preCode":"    private void doTestSortOrder(String repoName, Collection<String> allSnapshotNames, SortOrder order) {\n        final List<SnapshotInfo> defaultSorting = clusterAdmin().prepareGetSnapshots(repoName).setOrder(order).get().getSnapshots(repoName);\n        assertSnapshotListSorted(defaultSorting, null, order);\n        assertSnapshotListSorted(\n            allSnapshotsSorted(allSnapshotNames, repoName, GetSnapshotsRequest.SortBy.NAME, order),\n            GetSnapshotsRequest.SortBy.NAME,\n            order\n        );\n        assertSnapshotListSorted(\n            allSnapshotsSorted(allSnapshotNames, repoName, GetSnapshotsRequest.SortBy.DURATION, order),\n            GetSnapshotsRequest.SortBy.DURATION,\n            order\n        );\n        assertSnapshotListSorted(\n            allSnapshotsSorted(allSnapshotNames, repoName, GetSnapshotsRequest.SortBy.INDICES, order),\n            GetSnapshotsRequest.SortBy.INDICES,\n            order\n        );\n        assertSnapshotListSorted(\n            allSnapshotsSorted(allSnapshotNames, repoName, GetSnapshotsRequest.SortBy.START_TIME, order),\n            GetSnapshotsRequest.SortBy.START_TIME,\n            order\n        );\n    }\n","realPath":"server/src/internalClusterTest/java/org/elasticsearch/snapshots/GetSnapshotsIT.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":57,"status":"B"},{"authorDate":"2021-06-18 07:33:58","commitOrder":1,"curCode":"    private void doTestSortOrder(String repoName, Collection<String> allSnapshotNames, SortOrder order) throws IOException {\n        final List<SnapshotInfo> defaultSorting =\n            clusterAdmin().prepareGetSnapshots(repoName).setOrder(order).get().getSnapshots(repoName);\n        assertSnapshotListSorted(defaultSorting, null, order);\n        assertSnapshotListSorted(\n                allSnapshotsSorted(allSnapshotNames, repoName, GetSnapshotsRequest.SortBy.NAME, order),\n                GetSnapshotsRequest.SortBy.NAME,\n                order\n        );\n        assertSnapshotListSorted(\n                allSnapshotsSorted(allSnapshotNames, repoName, GetSnapshotsRequest.SortBy.DURATION, order),\n                GetSnapshotsRequest.SortBy.DURATION,\n                order\n        );\n        assertSnapshotListSorted(\n                allSnapshotsSorted(allSnapshotNames, repoName, GetSnapshotsRequest.SortBy.INDICES, order),\n                GetSnapshotsRequest.SortBy.INDICES,\n                order\n        );\n        assertSnapshotListSorted(\n                allSnapshotsSorted(allSnapshotNames, repoName, GetSnapshotsRequest.SortBy.START_TIME, order),\n                GetSnapshotsRequest.SortBy.START_TIME,\n                order\n        );\n    }\n","date":"2021-06-18 07:33:58","endLine":90,"groupId":"71136","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"doTestSortOrder","params":"(StringrepoName@Collection<String>allSnapshotNames@SortOrderorder)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/72/514beed85042539e5a4505478ea77339f5818f.src","preCode":"    private void doTestSortOrder(String repoName, Collection<String> allSnapshotNames, SortOrder order) throws IOException {\n        final List<SnapshotInfo> defaultSorting =\n            clusterAdmin().prepareGetSnapshots(repoName).setOrder(order).get().getSnapshots(repoName);\n        assertSnapshotListSorted(defaultSorting, null, order);\n        assertSnapshotListSorted(\n                allSnapshotsSorted(allSnapshotNames, repoName, GetSnapshotsRequest.SortBy.NAME, order),\n                GetSnapshotsRequest.SortBy.NAME,\n                order\n        );\n        assertSnapshotListSorted(\n                allSnapshotsSorted(allSnapshotNames, repoName, GetSnapshotsRequest.SortBy.DURATION, order),\n                GetSnapshotsRequest.SortBy.DURATION,\n                order\n        );\n        assertSnapshotListSorted(\n                allSnapshotsSorted(allSnapshotNames, repoName, GetSnapshotsRequest.SortBy.INDICES, order),\n                GetSnapshotsRequest.SortBy.INDICES,\n                order\n        );\n        assertSnapshotListSorted(\n                allSnapshotsSorted(allSnapshotNames, repoName, GetSnapshotsRequest.SortBy.START_TIME, order),\n                GetSnapshotsRequest.SortBy.START_TIME,\n                order\n        );\n    }\n","realPath":"qa/smoke-test-http/src/test/java/org/elasticsearch/http/snapshots/RestGetSnapshotsIT.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":66,"status":"B"}],"commitId":"82ae6742eba59c58a93bf9e32ea37220d01ab75c","commitMessage":"@@@Merge branch 'master' into feature/vector-tiles","date":"2021-06-18 07:33:58","modifiedFileCount":"125","status":"B","submitter":"Elastic Machine"},{"authorTime":"2021-06-24 22:58:33","codes":[{"authorDate":"2021-06-24 22:58:33","commitOrder":2,"curCode":"    private void doTestSortOrder(String repoName, Collection<String> allSnapshotNames, SortOrder order) {\n        final List<SnapshotInfo> defaultSorting = clusterAdmin().prepareGetSnapshots(repoName).setOrder(order).get().getSnapshots();\n        assertSnapshotListSorted(defaultSorting, null, order);\n        assertSnapshotListSorted(\n            allSnapshotsSorted(allSnapshotNames, repoName, GetSnapshotsRequest.SortBy.NAME, order),\n            GetSnapshotsRequest.SortBy.NAME,\n            order\n        );\n        assertSnapshotListSorted(\n            allSnapshotsSorted(allSnapshotNames, repoName, GetSnapshotsRequest.SortBy.DURATION, order),\n            GetSnapshotsRequest.SortBy.DURATION,\n            order\n        );\n        assertSnapshotListSorted(\n            allSnapshotsSorted(allSnapshotNames, repoName, GetSnapshotsRequest.SortBy.INDICES, order),\n            GetSnapshotsRequest.SortBy.INDICES,\n            order\n        );\n        assertSnapshotListSorted(\n            allSnapshotsSorted(allSnapshotNames, repoName, GetSnapshotsRequest.SortBy.START_TIME, order),\n            GetSnapshotsRequest.SortBy.START_TIME,\n            order\n        );\n    }\n","date":"2021-06-24 22:58:33","endLine":80,"groupId":"71136","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"doTestSortOrder","params":"(StringrepoName@Collection<String>allSnapshotNames@SortOrderorder)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/bd/4f81fac1b229b40743064cb1cf0364b840ecc0.src","preCode":"    private void doTestSortOrder(String repoName, Collection<String> allSnapshotNames, SortOrder order) {\n        final List<SnapshotInfo> defaultSorting = clusterAdmin().prepareGetSnapshots(repoName).setOrder(order).get().getSnapshots(repoName);\n        assertSnapshotListSorted(defaultSorting, null, order);\n        assertSnapshotListSorted(\n            allSnapshotsSorted(allSnapshotNames, repoName, GetSnapshotsRequest.SortBy.NAME, order),\n            GetSnapshotsRequest.SortBy.NAME,\n            order\n        );\n        assertSnapshotListSorted(\n            allSnapshotsSorted(allSnapshotNames, repoName, GetSnapshotsRequest.SortBy.DURATION, order),\n            GetSnapshotsRequest.SortBy.DURATION,\n            order\n        );\n        assertSnapshotListSorted(\n            allSnapshotsSorted(allSnapshotNames, repoName, GetSnapshotsRequest.SortBy.INDICES, order),\n            GetSnapshotsRequest.SortBy.INDICES,\n            order\n        );\n        assertSnapshotListSorted(\n            allSnapshotsSorted(allSnapshotNames, repoName, GetSnapshotsRequest.SortBy.START_TIME, order),\n            GetSnapshotsRequest.SortBy.START_TIME,\n            order\n        );\n    }\n","realPath":"server/src/internalClusterTest/java/org/elasticsearch/snapshots/GetSnapshotsIT.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":57,"status":"M"},{"authorDate":"2021-06-24 22:58:33","commitOrder":2,"curCode":"    private void doTestSortOrder(String repoName, Collection<String> allSnapshotNames, SortOrder order) throws IOException {\n        final List<SnapshotInfo> defaultSorting =\n            clusterAdmin().prepareGetSnapshots(repoName).setOrder(order).get().getSnapshots();\n        assertSnapshotListSorted(defaultSorting, null, order);\n        assertSnapshotListSorted(\n                allSnapshotsSorted(allSnapshotNames, repoName, GetSnapshotsRequest.SortBy.NAME, order),\n                GetSnapshotsRequest.SortBy.NAME,\n                order\n        );\n        assertSnapshotListSorted(\n                allSnapshotsSorted(allSnapshotNames, repoName, GetSnapshotsRequest.SortBy.DURATION, order),\n                GetSnapshotsRequest.SortBy.DURATION,\n                order\n        );\n        assertSnapshotListSorted(\n                allSnapshotsSorted(allSnapshotNames, repoName, GetSnapshotsRequest.SortBy.INDICES, order),\n                GetSnapshotsRequest.SortBy.INDICES,\n                order\n        );\n        assertSnapshotListSorted(\n                allSnapshotsSorted(allSnapshotNames, repoName, GetSnapshotsRequest.SortBy.START_TIME, order),\n                GetSnapshotsRequest.SortBy.START_TIME,\n                order\n        );\n    }\n","date":"2021-06-24 22:58:33","endLine":90,"groupId":"71136","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"doTestSortOrder","params":"(StringrepoName@Collection<String>allSnapshotNames@SortOrderorder)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/3b/4ae8a6707e089896a8737231e27a695bbb57ec.src","preCode":"    private void doTestSortOrder(String repoName, Collection<String> allSnapshotNames, SortOrder order) throws IOException {\n        final List<SnapshotInfo> defaultSorting =\n            clusterAdmin().prepareGetSnapshots(repoName).setOrder(order).get().getSnapshots(repoName);\n        assertSnapshotListSorted(defaultSorting, null, order);\n        assertSnapshotListSorted(\n                allSnapshotsSorted(allSnapshotNames, repoName, GetSnapshotsRequest.SortBy.NAME, order),\n                GetSnapshotsRequest.SortBy.NAME,\n                order\n        );\n        assertSnapshotListSorted(\n                allSnapshotsSorted(allSnapshotNames, repoName, GetSnapshotsRequest.SortBy.DURATION, order),\n                GetSnapshotsRequest.SortBy.DURATION,\n                order\n        );\n        assertSnapshotListSorted(\n                allSnapshotsSorted(allSnapshotNames, repoName, GetSnapshotsRequest.SortBy.INDICES, order),\n                GetSnapshotsRequest.SortBy.INDICES,\n                order\n        );\n        assertSnapshotListSorted(\n                allSnapshotsSorted(allSnapshotNames, repoName, GetSnapshotsRequest.SortBy.START_TIME, order),\n                GetSnapshotsRequest.SortBy.START_TIME,\n                order\n        );\n    }\n","realPath":"qa/smoke-test-http/src/test/java/org/elasticsearch/http/snapshots/RestGetSnapshotsIT.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":66,"status":"M"}],"commitId":"cbf48e06330c07b838cef50a6f8b9305d4f3516b","commitMessage":"@@@Flatten Get Snapshots Response (#74451)\n\nThis PR returns the get snapshots API to the 7.x format (and transport client behavior) and enhances it for requests that ask for multiple repositories.\nThe changes for requests that target multiple repositories are:\n* Add `repository` field to `SnapshotInfo` and REST response\n* Add `failures` map alongside `snapshots` list instead of returning just an exception response as done for single repo requests\n* Pagination now works across repositories instead of being per repository for multi-repository requests\n\ncloses #69108\ncloses #43462","date":"2021-06-24 22:58:33","modifiedFileCount":"53","status":"M","submitter":"Armin Braun"},{"authorTime":"2021-08-30 19:39:51","codes":[{"authorDate":"2021-08-30 19:39:51","commitOrder":3,"curCode":"    private void doTestSortOrder(String repoName, Collection<String> allSnapshotNames, SortOrder order) {\n        final List<SnapshotInfo> defaultSorting = clusterAdmin().prepareGetSnapshots(repoName).setOrder(order).get().getSnapshots();\n        assertSnapshotListSorted(defaultSorting, null, order);\n        assertSnapshotListSorted(\n            allSnapshotsSorted(allSnapshotNames, repoName, GetSnapshotsRequest.SortBy.NAME, order),\n            GetSnapshotsRequest.SortBy.NAME,\n            order\n        );\n        assertSnapshotListSorted(\n            allSnapshotsSorted(allSnapshotNames, repoName, GetSnapshotsRequest.SortBy.DURATION, order),\n            GetSnapshotsRequest.SortBy.DURATION,\n            order\n        );\n        assertSnapshotListSorted(\n            allSnapshotsSorted(allSnapshotNames, repoName, GetSnapshotsRequest.SortBy.INDICES, order),\n            GetSnapshotsRequest.SortBy.INDICES,\n            order\n        );\n        assertSnapshotListSorted(\n            allSnapshotsSorted(allSnapshotNames, repoName, GetSnapshotsRequest.SortBy.START_TIME, order),\n            GetSnapshotsRequest.SortBy.START_TIME,\n            order\n        );\n        assertSnapshotListSorted(\n            allSnapshotsSorted(allSnapshotNames, repoName, GetSnapshotsRequest.SortBy.SHARDS, order),\n            GetSnapshotsRequest.SortBy.SHARDS,\n            order\n        );\n        assertSnapshotListSorted(\n            allSnapshotsSorted(allSnapshotNames, repoName, GetSnapshotsRequest.SortBy.FAILED_SHARDS, order),\n            GetSnapshotsRequest.SortBy.FAILED_SHARDS,\n            order\n        );\n    }\n","date":"2021-08-30 19:39:51","endLine":91,"groupId":"71136","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"doTestSortOrder","params":"(StringrepoName@Collection<String>allSnapshotNames@SortOrderorder)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/0c/6d1f4d1d9fa7d8b26889e8f68ca13a3a4f732b.src","preCode":"    private void doTestSortOrder(String repoName, Collection<String> allSnapshotNames, SortOrder order) {\n        final List<SnapshotInfo> defaultSorting = clusterAdmin().prepareGetSnapshots(repoName).setOrder(order).get().getSnapshots();\n        assertSnapshotListSorted(defaultSorting, null, order);\n        assertSnapshotListSorted(\n            allSnapshotsSorted(allSnapshotNames, repoName, GetSnapshotsRequest.SortBy.NAME, order),\n            GetSnapshotsRequest.SortBy.NAME,\n            order\n        );\n        assertSnapshotListSorted(\n            allSnapshotsSorted(allSnapshotNames, repoName, GetSnapshotsRequest.SortBy.DURATION, order),\n            GetSnapshotsRequest.SortBy.DURATION,\n            order\n        );\n        assertSnapshotListSorted(\n            allSnapshotsSorted(allSnapshotNames, repoName, GetSnapshotsRequest.SortBy.INDICES, order),\n            GetSnapshotsRequest.SortBy.INDICES,\n            order\n        );\n        assertSnapshotListSorted(\n            allSnapshotsSorted(allSnapshotNames, repoName, GetSnapshotsRequest.SortBy.START_TIME, order),\n            GetSnapshotsRequest.SortBy.START_TIME,\n            order\n        );\n    }\n","realPath":"server/src/internalClusterTest/java/org/elasticsearch/snapshots/GetSnapshotsIT.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":58,"status":"M"},{"authorDate":"2021-08-30 19:39:51","commitOrder":3,"curCode":"    private void doTestSortOrder(String repoName, Collection<String> allSnapshotNames, SortOrder order) throws IOException {\n        final List<SnapshotInfo> defaultSorting = clusterAdmin().prepareGetSnapshots(repoName).setOrder(order).get().getSnapshots();\n        assertSnapshotListSorted(defaultSorting, null, order);\n        assertSnapshotListSorted(\n                allSnapshotsSorted(allSnapshotNames, repoName, GetSnapshotsRequest.SortBy.NAME, order),\n                GetSnapshotsRequest.SortBy.NAME,\n                order\n        );\n        assertSnapshotListSorted(\n                allSnapshotsSorted(allSnapshotNames, repoName, GetSnapshotsRequest.SortBy.DURATION, order),\n                GetSnapshotsRequest.SortBy.DURATION,\n                order\n        );\n        assertSnapshotListSorted(\n                allSnapshotsSorted(allSnapshotNames, repoName, GetSnapshotsRequest.SortBy.INDICES, order),\n                GetSnapshotsRequest.SortBy.INDICES,\n                order\n        );\n        assertSnapshotListSorted(\n                allSnapshotsSorted(allSnapshotNames, repoName, GetSnapshotsRequest.SortBy.START_TIME, order),\n                GetSnapshotsRequest.SortBy.START_TIME,\n                order\n        );\n        assertSnapshotListSorted(\n                allSnapshotsSorted(allSnapshotNames, repoName, GetSnapshotsRequest.SortBy.SHARDS, order),\n                GetSnapshotsRequest.SortBy.SHARDS,\n                order\n        );\n        assertSnapshotListSorted(\n                allSnapshotsSorted(allSnapshotNames, repoName, GetSnapshotsRequest.SortBy.FAILED_SHARDS, order),\n                GetSnapshotsRequest.SortBy.FAILED_SHARDS,\n                order\n        );\n    }\n","date":"2021-08-30 19:39:51","endLine":99,"groupId":"71136","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"doTestSortOrder","params":"(StringrepoName@Collection<String>allSnapshotNames@SortOrderorder)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/1c/e13280f594f78017db6fa399b48c7b82c2b19f.src","preCode":"    private void doTestSortOrder(String repoName, Collection<String> allSnapshotNames, SortOrder order) throws IOException {\n        final List<SnapshotInfo> defaultSorting = clusterAdmin().prepareGetSnapshots(repoName).setOrder(order).get().getSnapshots();\n        assertSnapshotListSorted(defaultSorting, null, order);\n        assertSnapshotListSorted(\n                allSnapshotsSorted(allSnapshotNames, repoName, GetSnapshotsRequest.SortBy.NAME, order),\n                GetSnapshotsRequest.SortBy.NAME,\n                order\n        );\n        assertSnapshotListSorted(\n                allSnapshotsSorted(allSnapshotNames, repoName, GetSnapshotsRequest.SortBy.DURATION, order),\n                GetSnapshotsRequest.SortBy.DURATION,\n                order\n        );\n        assertSnapshotListSorted(\n                allSnapshotsSorted(allSnapshotNames, repoName, GetSnapshotsRequest.SortBy.INDICES, order),\n                GetSnapshotsRequest.SortBy.INDICES,\n                order\n        );\n        assertSnapshotListSorted(\n                allSnapshotsSorted(allSnapshotNames, repoName, GetSnapshotsRequest.SortBy.START_TIME, order),\n                GetSnapshotsRequest.SortBy.START_TIME,\n                order\n        );\n    }\n","realPath":"qa/smoke-test-http/src/test/java/org/elasticsearch/http/snapshots/RestGetSnapshotsIT.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":66,"status":"M"}],"commitId":"48f3784a6df01d638281d2f559ffbe87860d9758","commitMessage":"@@@Add Sort By Shard Count and Failed Shard Count to Get Snapshots API (#77011)\n\nIt's in the title. As requested by the Kibana team.  adding these two additional sort columns.\n\nrelates #74350","date":"2021-08-30 19:39:51","modifiedFileCount":"5","status":"M","submitter":"Armin Braun"},{"authorTime":"2021-09-01 19:01:58","codes":[{"authorDate":"2021-09-01 19:01:58","commitOrder":4,"curCode":"    private void doTestSortOrder(String repoName, Collection<String> allSnapshotNames, SortOrder order) {\n        final List<SnapshotInfo> defaultSorting = clusterAdmin().prepareGetSnapshots(repoName).setOrder(order).get().getSnapshots();\n        assertSnapshotListSorted(defaultSorting, null, order);\n        assertSnapshotListSorted(\n            allSnapshotsSorted(allSnapshotNames, repoName, GetSnapshotsRequest.SortBy.NAME, order),\n            GetSnapshotsRequest.SortBy.NAME,\n            order\n        );\n        assertSnapshotListSorted(\n            allSnapshotsSorted(allSnapshotNames, repoName, GetSnapshotsRequest.SortBy.DURATION, order),\n            GetSnapshotsRequest.SortBy.DURATION,\n            order\n        );\n        assertSnapshotListSorted(\n            allSnapshotsSorted(allSnapshotNames, repoName, GetSnapshotsRequest.SortBy.INDICES, order),\n            GetSnapshotsRequest.SortBy.INDICES,\n            order\n        );\n        assertSnapshotListSorted(\n            allSnapshotsSorted(allSnapshotNames, repoName, GetSnapshotsRequest.SortBy.START_TIME, order),\n            GetSnapshotsRequest.SortBy.START_TIME,\n            order\n        );\n        assertSnapshotListSorted(\n            allSnapshotsSorted(allSnapshotNames, repoName, GetSnapshotsRequest.SortBy.SHARDS, order),\n            GetSnapshotsRequest.SortBy.SHARDS,\n            order\n        );\n        assertSnapshotListSorted(\n            allSnapshotsSorted(allSnapshotNames, repoName, GetSnapshotsRequest.SortBy.FAILED_SHARDS, order),\n            GetSnapshotsRequest.SortBy.FAILED_SHARDS,\n            order\n        );\n        assertSnapshotListSorted(\n            allSnapshotsSorted(allSnapshotNames, repoName, GetSnapshotsRequest.SortBy.REPOSITORY, order),\n            GetSnapshotsRequest.SortBy.REPOSITORY,\n            order\n        );\n    }\n","date":"2021-09-01 19:01:58","endLine":111,"groupId":"71136","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"doTestSortOrder","params":"(StringrepoName@Collection<String>allSnapshotNames@SortOrderorder)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/e5/58dfbd0bcacd816ae629fc435f8d07e08c9f87.src","preCode":"    private void doTestSortOrder(String repoName, Collection<String> allSnapshotNames, SortOrder order) {\n        final List<SnapshotInfo> defaultSorting = clusterAdmin().prepareGetSnapshots(repoName).setOrder(order).get().getSnapshots();\n        assertSnapshotListSorted(defaultSorting, null, order);\n        assertSnapshotListSorted(\n            allSnapshotsSorted(allSnapshotNames, repoName, GetSnapshotsRequest.SortBy.NAME, order),\n            GetSnapshotsRequest.SortBy.NAME,\n            order\n        );\n        assertSnapshotListSorted(\n            allSnapshotsSorted(allSnapshotNames, repoName, GetSnapshotsRequest.SortBy.DURATION, order),\n            GetSnapshotsRequest.SortBy.DURATION,\n            order\n        );\n        assertSnapshotListSorted(\n            allSnapshotsSorted(allSnapshotNames, repoName, GetSnapshotsRequest.SortBy.INDICES, order),\n            GetSnapshotsRequest.SortBy.INDICES,\n            order\n        );\n        assertSnapshotListSorted(\n            allSnapshotsSorted(allSnapshotNames, repoName, GetSnapshotsRequest.SortBy.START_TIME, order),\n            GetSnapshotsRequest.SortBy.START_TIME,\n            order\n        );\n        assertSnapshotListSorted(\n            allSnapshotsSorted(allSnapshotNames, repoName, GetSnapshotsRequest.SortBy.SHARDS, order),\n            GetSnapshotsRequest.SortBy.SHARDS,\n            order\n        );\n        assertSnapshotListSorted(\n            allSnapshotsSorted(allSnapshotNames, repoName, GetSnapshotsRequest.SortBy.FAILED_SHARDS, order),\n            GetSnapshotsRequest.SortBy.FAILED_SHARDS,\n            order\n        );\n    }\n","realPath":"server/src/internalClusterTest/java/org/elasticsearch/snapshots/GetSnapshotsIT.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":73,"status":"M"},{"authorDate":"2021-09-01 19:01:58","commitOrder":4,"curCode":"    private void doTestSortOrder(String repoName, Collection<String> allSnapshotNames, SortOrder order) throws IOException {\n        final List<SnapshotInfo> defaultSorting = clusterAdmin().prepareGetSnapshots(repoName).setOrder(order).get().getSnapshots();\n        assertSnapshotListSorted(defaultSorting, null, order);\n        assertSnapshotListSorted(\n                allSnapshotsSorted(allSnapshotNames, repoName, GetSnapshotsRequest.SortBy.NAME, order),\n                GetSnapshotsRequest.SortBy.NAME,\n                order\n        );\n        assertSnapshotListSorted(\n                allSnapshotsSorted(allSnapshotNames, repoName, GetSnapshotsRequest.SortBy.DURATION, order),\n                GetSnapshotsRequest.SortBy.DURATION,\n                order\n        );\n        assertSnapshotListSorted(\n                allSnapshotsSorted(allSnapshotNames, repoName, GetSnapshotsRequest.SortBy.INDICES, order),\n                GetSnapshotsRequest.SortBy.INDICES,\n                order\n        );\n        assertSnapshotListSorted(\n                allSnapshotsSorted(allSnapshotNames, repoName, GetSnapshotsRequest.SortBy.START_TIME, order),\n                GetSnapshotsRequest.SortBy.START_TIME,\n                order\n        );\n        assertSnapshotListSorted(\n                allSnapshotsSorted(allSnapshotNames, repoName, GetSnapshotsRequest.SortBy.SHARDS, order),\n                GetSnapshotsRequest.SortBy.SHARDS,\n                order\n        );\n        assertSnapshotListSorted(\n                allSnapshotsSorted(allSnapshotNames, repoName, GetSnapshotsRequest.SortBy.FAILED_SHARDS, order),\n                GetSnapshotsRequest.SortBy.FAILED_SHARDS,\n                order\n        );\n        assertSnapshotListSorted(\n                allSnapshotsSorted(allSnapshotNames, repoName, GetSnapshotsRequest.SortBy.REPOSITORY, order),\n                GetSnapshotsRequest.SortBy.REPOSITORY,\n                order\n        );\n    }\n","date":"2021-09-01 19:01:58","endLine":104,"groupId":"71136","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"doTestSortOrder","params":"(StringrepoName@Collection<String>allSnapshotNames@SortOrderorder)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/3c/dc32029babd64e1100a50d05bc56e71da1433f.src","preCode":"    private void doTestSortOrder(String repoName, Collection<String> allSnapshotNames, SortOrder order) throws IOException {\n        final List<SnapshotInfo> defaultSorting = clusterAdmin().prepareGetSnapshots(repoName).setOrder(order).get().getSnapshots();\n        assertSnapshotListSorted(defaultSorting, null, order);\n        assertSnapshotListSorted(\n                allSnapshotsSorted(allSnapshotNames, repoName, GetSnapshotsRequest.SortBy.NAME, order),\n                GetSnapshotsRequest.SortBy.NAME,\n                order\n        );\n        assertSnapshotListSorted(\n                allSnapshotsSorted(allSnapshotNames, repoName, GetSnapshotsRequest.SortBy.DURATION, order),\n                GetSnapshotsRequest.SortBy.DURATION,\n                order\n        );\n        assertSnapshotListSorted(\n                allSnapshotsSorted(allSnapshotNames, repoName, GetSnapshotsRequest.SortBy.INDICES, order),\n                GetSnapshotsRequest.SortBy.INDICES,\n                order\n        );\n        assertSnapshotListSorted(\n                allSnapshotsSorted(allSnapshotNames, repoName, GetSnapshotsRequest.SortBy.START_TIME, order),\n                GetSnapshotsRequest.SortBy.START_TIME,\n                order\n        );\n        assertSnapshotListSorted(\n                allSnapshotsSorted(allSnapshotNames, repoName, GetSnapshotsRequest.SortBy.SHARDS, order),\n                GetSnapshotsRequest.SortBy.SHARDS,\n                order\n        );\n        assertSnapshotListSorted(\n                allSnapshotsSorted(allSnapshotNames, repoName, GetSnapshotsRequest.SortBy.FAILED_SHARDS, order),\n                GetSnapshotsRequest.SortBy.FAILED_SHARDS,\n                order\n        );\n    }\n","realPath":"qa/smoke-test-http/src/test/java/org/elasticsearch/http/snapshots/RestGetSnapshotsIT.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":66,"status":"M"}],"commitId":"0920e21445dbec22f3ea95a4ed3c7536a04452b4","commitMessage":"@@@Implement Sort By Repository Name in Get Snapshots API (#77049)\n\nThis one is the last sort column not yet implemented but used by Kibana.","date":"2021-09-01 19:01:58","modifiedFileCount":"5","status":"M","submitter":"Armin Braun"},{"authorTime":"2021-09-01 19:01:58","codes":[{"authorDate":"2021-09-10 21:00:44","commitOrder":5,"curCode":"    private void doTestSortOrder(String repoName, Collection<String> allSnapshotNames, SortOrder order) {\n        final List<SnapshotInfo> defaultSorting = clusterAdmin().prepareGetSnapshots(repoName).setOrder(order).get().getSnapshots();\n        assertSnapshotListSorted(defaultSorting, null, order);\n        final String[] repos = { repoName };\n        assertSnapshotListSorted(\n            allSnapshotsSorted(allSnapshotNames, repos, GetSnapshotsRequest.SortBy.NAME, order),\n            GetSnapshotsRequest.SortBy.NAME,\n            order\n        );\n        assertSnapshotListSorted(\n            allSnapshotsSorted(allSnapshotNames, repos, GetSnapshotsRequest.SortBy.DURATION, order),\n            GetSnapshotsRequest.SortBy.DURATION,\n            order\n        );\n        assertSnapshotListSorted(\n            allSnapshotsSorted(allSnapshotNames, repos, GetSnapshotsRequest.SortBy.INDICES, order),\n            GetSnapshotsRequest.SortBy.INDICES,\n            order\n        );\n        assertSnapshotListSorted(\n            allSnapshotsSorted(allSnapshotNames, repos, GetSnapshotsRequest.SortBy.START_TIME, order),\n            GetSnapshotsRequest.SortBy.START_TIME,\n            order\n        );\n        assertSnapshotListSorted(\n            allSnapshotsSorted(allSnapshotNames, repos, GetSnapshotsRequest.SortBy.SHARDS, order),\n            GetSnapshotsRequest.SortBy.SHARDS,\n            order\n        );\n        assertSnapshotListSorted(\n            allSnapshotsSorted(allSnapshotNames, repos, GetSnapshotsRequest.SortBy.FAILED_SHARDS, order),\n            GetSnapshotsRequest.SortBy.FAILED_SHARDS,\n            order\n        );\n        assertSnapshotListSorted(\n            allSnapshotsSorted(allSnapshotNames, repos, GetSnapshotsRequest.SortBy.REPOSITORY, order),\n            GetSnapshotsRequest.SortBy.REPOSITORY,\n            order\n        );\n    }\n","date":"2021-09-10 21:00:44","endLine":117,"groupId":"106295","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"doTestSortOrder","params":"(StringrepoName@Collection<String>allSnapshotNames@SortOrderorder)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/d6/a124ff8f5876a469afd2ec1d3982fc177544c8.src","preCode":"    private void doTestSortOrder(String repoName, Collection<String> allSnapshotNames, SortOrder order) {\n        final List<SnapshotInfo> defaultSorting = clusterAdmin().prepareGetSnapshots(repoName).setOrder(order).get().getSnapshots();\n        assertSnapshotListSorted(defaultSorting, null, order);\n        assertSnapshotListSorted(\n            allSnapshotsSorted(allSnapshotNames, repoName, GetSnapshotsRequest.SortBy.NAME, order),\n            GetSnapshotsRequest.SortBy.NAME,\n            order\n        );\n        assertSnapshotListSorted(\n            allSnapshotsSorted(allSnapshotNames, repoName, GetSnapshotsRequest.SortBy.DURATION, order),\n            GetSnapshotsRequest.SortBy.DURATION,\n            order\n        );\n        assertSnapshotListSorted(\n            allSnapshotsSorted(allSnapshotNames, repoName, GetSnapshotsRequest.SortBy.INDICES, order),\n            GetSnapshotsRequest.SortBy.INDICES,\n            order\n        );\n        assertSnapshotListSorted(\n            allSnapshotsSorted(allSnapshotNames, repoName, GetSnapshotsRequest.SortBy.START_TIME, order),\n            GetSnapshotsRequest.SortBy.START_TIME,\n            order\n        );\n        assertSnapshotListSorted(\n            allSnapshotsSorted(allSnapshotNames, repoName, GetSnapshotsRequest.SortBy.SHARDS, order),\n            GetSnapshotsRequest.SortBy.SHARDS,\n            order\n        );\n        assertSnapshotListSorted(\n            allSnapshotsSorted(allSnapshotNames, repoName, GetSnapshotsRequest.SortBy.FAILED_SHARDS, order),\n            GetSnapshotsRequest.SortBy.FAILED_SHARDS,\n            order\n        );\n        assertSnapshotListSorted(\n            allSnapshotsSorted(allSnapshotNames, repoName, GetSnapshotsRequest.SortBy.REPOSITORY, order),\n            GetSnapshotsRequest.SortBy.REPOSITORY,\n            order\n        );\n    }\n","realPath":"server/src/internalClusterTest/java/org/elasticsearch/snapshots/GetSnapshotsIT.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":78,"status":"M"},{"authorDate":"2021-09-01 19:01:58","commitOrder":5,"curCode":"    private void doTestSortOrder(String repoName, Collection<String> allSnapshotNames, SortOrder order) throws IOException {\n        final List<SnapshotInfo> defaultSorting = clusterAdmin().prepareGetSnapshots(repoName).setOrder(order).get().getSnapshots();\n        assertSnapshotListSorted(defaultSorting, null, order);\n        assertSnapshotListSorted(\n                allSnapshotsSorted(allSnapshotNames, repoName, GetSnapshotsRequest.SortBy.NAME, order),\n                GetSnapshotsRequest.SortBy.NAME,\n                order\n        );\n        assertSnapshotListSorted(\n                allSnapshotsSorted(allSnapshotNames, repoName, GetSnapshotsRequest.SortBy.DURATION, order),\n                GetSnapshotsRequest.SortBy.DURATION,\n                order\n        );\n        assertSnapshotListSorted(\n                allSnapshotsSorted(allSnapshotNames, repoName, GetSnapshotsRequest.SortBy.INDICES, order),\n                GetSnapshotsRequest.SortBy.INDICES,\n                order\n        );\n        assertSnapshotListSorted(\n                allSnapshotsSorted(allSnapshotNames, repoName, GetSnapshotsRequest.SortBy.START_TIME, order),\n                GetSnapshotsRequest.SortBy.START_TIME,\n                order\n        );\n        assertSnapshotListSorted(\n                allSnapshotsSorted(allSnapshotNames, repoName, GetSnapshotsRequest.SortBy.SHARDS, order),\n                GetSnapshotsRequest.SortBy.SHARDS,\n                order\n        );\n        assertSnapshotListSorted(\n                allSnapshotsSorted(allSnapshotNames, repoName, GetSnapshotsRequest.SortBy.FAILED_SHARDS, order),\n                GetSnapshotsRequest.SortBy.FAILED_SHARDS,\n                order\n        );\n        assertSnapshotListSorted(\n                allSnapshotsSorted(allSnapshotNames, repoName, GetSnapshotsRequest.SortBy.REPOSITORY, order),\n                GetSnapshotsRequest.SortBy.REPOSITORY,\n                order\n        );\n    }\n","date":"2021-09-01 19:01:58","endLine":104,"groupId":"106295","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"doTestSortOrder","params":"(StringrepoName@Collection<String>allSnapshotNames@SortOrderorder)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/3c/dc32029babd64e1100a50d05bc56e71da1433f.src","preCode":"    private void doTestSortOrder(String repoName, Collection<String> allSnapshotNames, SortOrder order) throws IOException {\n        final List<SnapshotInfo> defaultSorting = clusterAdmin().prepareGetSnapshots(repoName).setOrder(order).get().getSnapshots();\n        assertSnapshotListSorted(defaultSorting, null, order);\n        assertSnapshotListSorted(\n                allSnapshotsSorted(allSnapshotNames, repoName, GetSnapshotsRequest.SortBy.NAME, order),\n                GetSnapshotsRequest.SortBy.NAME,\n                order\n        );\n        assertSnapshotListSorted(\n                allSnapshotsSorted(allSnapshotNames, repoName, GetSnapshotsRequest.SortBy.DURATION, order),\n                GetSnapshotsRequest.SortBy.DURATION,\n                order\n        );\n        assertSnapshotListSorted(\n                allSnapshotsSorted(allSnapshotNames, repoName, GetSnapshotsRequest.SortBy.INDICES, order),\n                GetSnapshotsRequest.SortBy.INDICES,\n                order\n        );\n        assertSnapshotListSorted(\n                allSnapshotsSorted(allSnapshotNames, repoName, GetSnapshotsRequest.SortBy.START_TIME, order),\n                GetSnapshotsRequest.SortBy.START_TIME,\n                order\n        );\n        assertSnapshotListSorted(\n                allSnapshotsSorted(allSnapshotNames, repoName, GetSnapshotsRequest.SortBy.SHARDS, order),\n                GetSnapshotsRequest.SortBy.SHARDS,\n                order\n        );\n        assertSnapshotListSorted(\n                allSnapshotsSorted(allSnapshotNames, repoName, GetSnapshotsRequest.SortBy.FAILED_SHARDS, order),\n                GetSnapshotsRequest.SortBy.FAILED_SHARDS,\n                order\n        );\n        assertSnapshotListSorted(\n                allSnapshotsSorted(allSnapshotNames, repoName, GetSnapshotsRequest.SortBy.REPOSITORY, order),\n                GetSnapshotsRequest.SortBy.REPOSITORY,\n                order\n        );\n    }\n","realPath":"qa/smoke-test-http/src/test/java/org/elasticsearch/http/snapshots/RestGetSnapshotsIT.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":66,"status":"N"}],"commitId":"f1a4551e9363d2633b7807ab770029482d9efe53","commitMessage":"@@@Implement Exclude Patterns for Snapshot- and Repository Names in Get Snapshots API (#77308)\n\nIt's in the title. Adds support for exclude patterns combined with wildcard requests\nsimilar to what we support for index names.\n","date":"2021-09-10 21:00:44","modifiedFileCount":"5","status":"M","submitter":"Armin Braun"}]
