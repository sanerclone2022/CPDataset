[{"authorTime":"2018-05-07 06:17:36","codes":[{"authorDate":"2018-05-14 17:10:33","commitOrder":3,"curCode":"    protected Map<String, Class<?>> getTokenizers() {\n        Map<String, Class<?>> tokenizers = new TreeMap<>(super.getTokenizers());\n        tokenizers.put(\"simplepattern\", SimplePatternTokenizerFactory.class);\n        tokenizers.put(\"simplepatternsplit\", SimplePatternSplitTokenizerFactory.class);\n        tokenizers.put(\"thai\", ThaiTokenizerFactory.class);\n        tokenizers.put(\"ngram\", NGramTokenizerFactory.class);\n        tokenizers.put(\"edgengram\", EdgeNGramTokenizerFactory.class);\n        tokenizers.put(\"classic\", ClassicTokenizerFactory.class);\n        tokenizers.put(\"letter\", LetterTokenizerFactory.class);\n        tokenizers.put(\"lowercase\", LowerCaseTokenizerFactory.class);\n        tokenizers.put(\"pathhierarchy\", PathHierarchyTokenizerFactory.class);\n        tokenizers.put(\"pattern\", PatternTokenizerFactory.class);\n        tokenizers.put(\"uax29urlemail\", UAX29URLEmailTokenizerFactory.class);\n        tokenizers.put(\"whitespace\", WhitespaceTokenizerFactory.class);\n        return tokenizers;\n    }\n","date":"2018-05-14 17:10:33","endLine":60,"groupId":"3366","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"getTokenizers","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/7d/eadcbcc25f61f8e64d8c873acfd908dfa70612.src","preCode":"    protected Map<String, Class<?>> getTokenizers() {\n        Map<String, Class<?>> tokenizers = new TreeMap<>(super.getTokenizers());\n        tokenizers.put(\"simplepattern\", SimplePatternTokenizerFactory.class);\n        tokenizers.put(\"simplepatternsplit\", SimplePatternSplitTokenizerFactory.class);\n        tokenizers.put(\"thai\", ThaiTokenizerFactory.class);\n        tokenizers.put(\"ngram\", NGramTokenizerFactory.class);\n        tokenizers.put(\"edgengram\", EdgeNGramTokenizerFactory.class);\n        tokenizers.put(\"classic\", ClassicTokenizerFactory.class);\n        tokenizers.put(\"letter\", LetterTokenizerFactory.class);\n        tokenizers.put(\"lowercase\", LowerCaseTokenizerFactory.class);\n        tokenizers.put(\"pathhierarchy\", PathHierarchyTokenizerFactory.class);\n        tokenizers.put(\"pattern\", PatternTokenizerFactory.class);\n        tokenizers.put(\"uax29urlemail\", UAX29URLEmailTokenizerFactory.class);\n        tokenizers.put(\"whitespace\", WhitespaceTokenizerFactory.class);\n        return tokenizers;\n    }\n","realPath":"modules/analysis-common/src/test/java/org/elasticsearch/analysis/common/CommonAnalysisFactoryTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":45,"status":"B"},{"authorDate":"2018-05-07 06:17:36","commitOrder":3,"curCode":"    protected Map<String, Class<?>> getTokenFilters() {\n        Map<String, Class<?>> filters = new TreeMap<>(super.getTokenFilters());\n        filters.put(\"asciifolding\", ASCIIFoldingTokenFilterFactory.class);\n        filters.put(\"keywordmarker\", KeywordMarkerTokenFilterFactory.class);\n        filters.put(\"porterstem\", PorterStemTokenFilterFactory.class);\n        filters.put(\"snowballporter\", SnowballTokenFilterFactory.class);\n        filters.put(\"trim\", TrimTokenFilterFactory.class);\n        filters.put(\"worddelimiter\", WordDelimiterTokenFilterFactory.class);\n        filters.put(\"worddelimitergraph\", WordDelimiterGraphTokenFilterFactory.class);\n        filters.put(\"flattengraph\", FlattenGraphTokenFilterFactory.class);\n        filters.put(\"length\", LengthTokenFilterFactory.class);\n        filters.put(\"greeklowercase\", LowerCaseTokenFilterFactory.class);\n        filters.put(\"irishlowercase\", LowerCaseTokenFilterFactory.class);\n        filters.put(\"lowercase\", LowerCaseTokenFilterFactory.class);\n        filters.put(\"turkishlowercase\", LowerCaseTokenFilterFactory.class);\n        filters.put(\"uppercase\", UpperCaseTokenFilterFactory.class);\n        filters.put(\"ngram\", NGramTokenFilterFactory.class);\n        filters.put(\"edgengram\", EdgeNGramTokenFilterFactory.class);\n        filters.put(\"bengalistem\", StemmerTokenFilterFactory.class);\n        filters.put(\"bulgarianstem\", StemmerTokenFilterFactory.class);\n        filters.put(\"englishminimalstem\", StemmerTokenFilterFactory.class);\n        filters.put(\"englishpossessive\", StemmerTokenFilterFactory.class);\n        filters.put(\"finnishlightstem\", StemmerTokenFilterFactory.class);\n        filters.put(\"frenchlightstem\", StemmerTokenFilterFactory.class);\n        filters.put(\"frenchminimalstem\", StemmerTokenFilterFactory.class);\n        filters.put(\"galicianminimalstem\", StemmerTokenFilterFactory.class);\n        filters.put(\"galicianstem\", StemmerTokenFilterFactory.class);\n        filters.put(\"germanlightstem\", StemmerTokenFilterFactory.class);\n        filters.put(\"germanminimalstem\", StemmerTokenFilterFactory.class);\n        filters.put(\"greekstem\", StemmerTokenFilterFactory.class);\n        filters.put(\"hindistem\", StemmerTokenFilterFactory.class);\n        filters.put(\"hungarianlightstem\", StemmerTokenFilterFactory.class);\n        filters.put(\"indonesianstem\", StemmerTokenFilterFactory.class);\n        filters.put(\"italianlightstem\", StemmerTokenFilterFactory.class);\n        filters.put(\"latvianstem\", StemmerTokenFilterFactory.class);\n        filters.put(\"norwegianlightstem\", StemmerTokenFilterFactory.class);\n        filters.put(\"norwegianminimalstem\", StemmerTokenFilterFactory.class);\n        filters.put(\"portuguesestem\", StemmerTokenFilterFactory.class);\n        filters.put(\"portugueselightstem\", StemmerTokenFilterFactory.class);\n        filters.put(\"portugueseminimalstem\", StemmerTokenFilterFactory.class);\n        filters.put(\"russianlightstem\", StemmerTokenFilterFactory.class);\n        filters.put(\"soranistem\", StemmerTokenFilterFactory.class);\n        filters.put(\"spanishlightstem\", StemmerTokenFilterFactory.class);\n        filters.put(\"swedishlightstem\", StemmerTokenFilterFactory.class);\n        filters.put(\"stemmeroverride\", StemmerOverrideTokenFilterFactory.class);\n        filters.put(\"kstem\", KStemTokenFilterFactory.class);\n        filters.put(\"synonym\", SynonymTokenFilterFactory.class);\n        filters.put(\"dictionarycompoundword\", DictionaryCompoundWordTokenFilterFactory.class);\n        filters.put(\"hyphenationcompoundword\", HyphenationCompoundWordTokenFilterFactory.class);\n        filters.put(\"reversestring\", ReverseTokenFilterFactory.class);\n        filters.put(\"elision\", ElisionTokenFilterFactory.class);\n        filters.put(\"truncate\", TruncateTokenFilterFactory.class);\n        filters.put(\"limittokencount\", LimitTokenCountFilterFactory.class);\n        filters.put(\"commongrams\", CommonGramsTokenFilterFactory.class);\n        filters.put(\"commongramsquery\", CommonGramsTokenFilterFactory.class);\n        filters.put(\"patternreplace\", PatternReplaceTokenFilterFactory.class);\n        filters.put(\"patterncapturegroup\", PatternCaptureGroupTokenFilterFactory.class);\n        filters.put(\"arabicnormalization\", ArabicNormalizationFilterFactory.class);\n        filters.put(\"bengalinormalization\", BengaliNormalizationFilterFactory.class);\n        filters.put(\"germannormalization\", GermanNormalizationFilterFactory.class);\n        filters.put(\"hindinormalization\", HindiNormalizationFilterFactory.class);\n        filters.put(\"indicnormalization\", IndicNormalizationFilterFactory.class);\n        filters.put(\"persiannormalization\", PersianNormalizationFilterFactory.class);\n        filters.put(\"scandinaviannormalization\", ScandinavianNormalizationFilterFactory.class);\n        filters.put(\"serbiannormalization\", SerbianNormalizationFilterFactory.class);\n        filters.put(\"soraninormalization\", SoraniNormalizationFilterFactory.class);\n        filters.put(\"cjkwidth\", CJKWidthFilterFactory.class);\n        filters.put(\"cjkbigram\", CJKBigramFilterFactory.class);\n        filters.put(\"delimitedpayload\", DelimitedPayloadTokenFilterFactory.class);\n        filters.put(\"keepword\", KeepWordFilterFactory.class);\n        filters.put(\"type\", KeepTypesFilterFactory.class);\n        filters.put(\"classic\", ClassicFilterFactory.class);\n        filters.put(\"apostrophe\", ApostropheFilterFactory.class);\n        filters.put(\"decimaldigit\", DecimalDigitFilterFactory.class);\n        filters.put(\"fingerprint\", FingerprintTokenFilterFactory.class);\n        filters.put(\"minhash\", MinHashTokenFilterFactory.class);\n        filters.put(\"scandinavianfolding\", ScandinavianFoldingFilterFactory.class);\n        filters.put(\"arabicstem\", ArabicStemTokenFilterFactory.class);\n        filters.put(\"brazilianstem\", BrazilianStemTokenFilterFactory.class);\n        filters.put(\"czechstem\", CzechStemTokenFilterFactory.class);\n        filters.put(\"germanstem\", GermanStemTokenFilterFactory.class);\n        \r\n        filters.put(\"fixedshingle\", Void.class);\n        return filters;\n    }\n","date":"2018-05-07 06:17:36","endLine":136,"groupId":"3910","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"getTokenFilters","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/be/fd26296a5c86007a1fd3f0e06c96a9911ef741.src","preCode":"    protected Map<String, Class<?>> getTokenFilters() {\n        Map<String, Class<?>> filters = new TreeMap<>(super.getTokenFilters());\n        filters.put(\"asciifolding\", ASCIIFoldingTokenFilterFactory.class);\n        filters.put(\"keywordmarker\", KeywordMarkerTokenFilterFactory.class);\n        filters.put(\"porterstem\", PorterStemTokenFilterFactory.class);\n        filters.put(\"snowballporter\", SnowballTokenFilterFactory.class);\n        filters.put(\"trim\", TrimTokenFilterFactory.class);\n        filters.put(\"worddelimiter\", WordDelimiterTokenFilterFactory.class);\n        filters.put(\"worddelimitergraph\", WordDelimiterGraphTokenFilterFactory.class);\n        filters.put(\"flattengraph\", FlattenGraphTokenFilterFactory.class);\n        filters.put(\"length\", LengthTokenFilterFactory.class);\n        filters.put(\"greeklowercase\", LowerCaseTokenFilterFactory.class);\n        filters.put(\"irishlowercase\", LowerCaseTokenFilterFactory.class);\n        filters.put(\"lowercase\", LowerCaseTokenFilterFactory.class);\n        filters.put(\"turkishlowercase\", LowerCaseTokenFilterFactory.class);\n        filters.put(\"uppercase\", UpperCaseTokenFilterFactory.class);\n        filters.put(\"ngram\", NGramTokenFilterFactory.class);\n        filters.put(\"edgengram\", EdgeNGramTokenFilterFactory.class);\n        filters.put(\"bengalistem\", StemmerTokenFilterFactory.class);\n        filters.put(\"bulgarianstem\", StemmerTokenFilterFactory.class);\n        filters.put(\"englishminimalstem\", StemmerTokenFilterFactory.class);\n        filters.put(\"englishpossessive\", StemmerTokenFilterFactory.class);\n        filters.put(\"finnishlightstem\", StemmerTokenFilterFactory.class);\n        filters.put(\"frenchlightstem\", StemmerTokenFilterFactory.class);\n        filters.put(\"frenchminimalstem\", StemmerTokenFilterFactory.class);\n        filters.put(\"galicianminimalstem\", StemmerTokenFilterFactory.class);\n        filters.put(\"galicianstem\", StemmerTokenFilterFactory.class);\n        filters.put(\"germanlightstem\", StemmerTokenFilterFactory.class);\n        filters.put(\"germanminimalstem\", StemmerTokenFilterFactory.class);\n        filters.put(\"greekstem\", StemmerTokenFilterFactory.class);\n        filters.put(\"hindistem\", StemmerTokenFilterFactory.class);\n        filters.put(\"hungarianlightstem\", StemmerTokenFilterFactory.class);\n        filters.put(\"indonesianstem\", StemmerTokenFilterFactory.class);\n        filters.put(\"italianlightstem\", StemmerTokenFilterFactory.class);\n        filters.put(\"latvianstem\", StemmerTokenFilterFactory.class);\n        filters.put(\"norwegianlightstem\", StemmerTokenFilterFactory.class);\n        filters.put(\"norwegianminimalstem\", StemmerTokenFilterFactory.class);\n        filters.put(\"portuguesestem\", StemmerTokenFilterFactory.class);\n        filters.put(\"portugueselightstem\", StemmerTokenFilterFactory.class);\n        filters.put(\"portugueseminimalstem\", StemmerTokenFilterFactory.class);\n        filters.put(\"russianlightstem\", StemmerTokenFilterFactory.class);\n        filters.put(\"soranistem\", StemmerTokenFilterFactory.class);\n        filters.put(\"spanishlightstem\", StemmerTokenFilterFactory.class);\n        filters.put(\"swedishlightstem\", StemmerTokenFilterFactory.class);\n        filters.put(\"stemmeroverride\", StemmerOverrideTokenFilterFactory.class);\n        filters.put(\"kstem\", KStemTokenFilterFactory.class);\n        filters.put(\"synonym\", SynonymTokenFilterFactory.class);\n        filters.put(\"dictionarycompoundword\", DictionaryCompoundWordTokenFilterFactory.class);\n        filters.put(\"hyphenationcompoundword\", HyphenationCompoundWordTokenFilterFactory.class);\n        filters.put(\"reversestring\", ReverseTokenFilterFactory.class);\n        filters.put(\"elision\", ElisionTokenFilterFactory.class);\n        filters.put(\"truncate\", TruncateTokenFilterFactory.class);\n        filters.put(\"limittokencount\", LimitTokenCountFilterFactory.class);\n        filters.put(\"commongrams\", CommonGramsTokenFilterFactory.class);\n        filters.put(\"commongramsquery\", CommonGramsTokenFilterFactory.class);\n        filters.put(\"patternreplace\", PatternReplaceTokenFilterFactory.class);\n        filters.put(\"patterncapturegroup\", PatternCaptureGroupTokenFilterFactory.class);\n        filters.put(\"arabicnormalization\", ArabicNormalizationFilterFactory.class);\n        filters.put(\"bengalinormalization\", BengaliNormalizationFilterFactory.class);\n        filters.put(\"germannormalization\", GermanNormalizationFilterFactory.class);\n        filters.put(\"hindinormalization\", HindiNormalizationFilterFactory.class);\n        filters.put(\"indicnormalization\", IndicNormalizationFilterFactory.class);\n        filters.put(\"persiannormalization\", PersianNormalizationFilterFactory.class);\n        filters.put(\"scandinaviannormalization\", ScandinavianNormalizationFilterFactory.class);\n        filters.put(\"serbiannormalization\", SerbianNormalizationFilterFactory.class);\n        filters.put(\"soraninormalization\", SoraniNormalizationFilterFactory.class);\n        filters.put(\"cjkwidth\", CJKWidthFilterFactory.class);\n        filters.put(\"cjkbigram\", CJKBigramFilterFactory.class);\n        filters.put(\"delimitedpayload\", DelimitedPayloadTokenFilterFactory.class);\n        filters.put(\"keepword\", KeepWordFilterFactory.class);\n        filters.put(\"type\", KeepTypesFilterFactory.class);\n        filters.put(\"classic\", ClassicFilterFactory.class);\n        filters.put(\"apostrophe\", ApostropheFilterFactory.class);\n        filters.put(\"decimaldigit\", DecimalDigitFilterFactory.class);\n        filters.put(\"fingerprint\", FingerprintTokenFilterFactory.class);\n        filters.put(\"minhash\", MinHashTokenFilterFactory.class);\n        filters.put(\"scandinavianfolding\", ScandinavianFoldingFilterFactory.class);\n        filters.put(\"arabicstem\", ArabicStemTokenFilterFactory.class);\n        filters.put(\"brazilianstem\", BrazilianStemTokenFilterFactory.class);\n        filters.put(\"czechstem\", CzechStemTokenFilterFactory.class);\n        filters.put(\"germanstem\", GermanStemTokenFilterFactory.class);\n        \r\n        filters.put(\"fixedshingle\", Void.class);\n        return filters;\n    }\n","realPath":"modules/analysis-common/src/test/java/org/elasticsearch/analysis/common/CommonAnalysisFactoryTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":52,"status":"NB"}],"commitId":"b08d7c872b45a88ee1d093487d9213462b95033f","commitMessage":"@@@Merge branch 'master' into index-lifecycle\n","date":"2018-05-14 17:10:33","modifiedFileCount":"43","status":"M","submitter":"Colin Goodheart-Smithe"},{"authorTime":"2018-05-07 06:17:36","codes":[{"authorDate":"2018-05-30 03:29:53","commitOrder":4,"curCode":"    protected Map<String, Class<?>> getTokenizers() {\n        Map<String, Class<?>> tokenizers = new TreeMap<>(super.getTokenizers());\n        tokenizers.put(\"simplepattern\", SimplePatternTokenizerFactory.class);\n        tokenizers.put(\"simplepatternsplit\", SimplePatternSplitTokenizerFactory.class);\n        tokenizers.put(\"thai\", ThaiTokenizerFactory.class);\n        tokenizers.put(\"ngram\", NGramTokenizerFactory.class);\n        tokenizers.put(\"edgengram\", EdgeNGramTokenizerFactory.class);\n        tokenizers.put(\"classic\", ClassicTokenizerFactory.class);\n        tokenizers.put(\"letter\", LetterTokenizerFactory.class);\n        tokenizers.put(\"lowercase\", LowerCaseTokenizerFactory.class);\n        tokenizers.put(\"pathhierarchy\", PathHierarchyTokenizerFactory.class);\n        tokenizers.put(\"pattern\", PatternTokenizerFactory.class);\n        tokenizers.put(\"uax29urlemail\", UAX29URLEmailTokenizerFactory.class);\n        tokenizers.put(\"whitespace\", WhitespaceTokenizerFactory.class);\n        tokenizers.put(\"keyword\", KeywordTokenizerFactory.class);\n        return tokenizers;\n    }\n","date":"2018-05-30 03:29:53","endLine":60,"groupId":"3366","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"getTokenizers","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/50/84306587847ae6baa425bfc8904ea2e989c3a9.src","preCode":"    protected Map<String, Class<?>> getTokenizers() {\n        Map<String, Class<?>> tokenizers = new TreeMap<>(super.getTokenizers());\n        tokenizers.put(\"simplepattern\", SimplePatternTokenizerFactory.class);\n        tokenizers.put(\"simplepatternsplit\", SimplePatternSplitTokenizerFactory.class);\n        tokenizers.put(\"thai\", ThaiTokenizerFactory.class);\n        tokenizers.put(\"ngram\", NGramTokenizerFactory.class);\n        tokenizers.put(\"edgengram\", EdgeNGramTokenizerFactory.class);\n        tokenizers.put(\"classic\", ClassicTokenizerFactory.class);\n        tokenizers.put(\"letter\", LetterTokenizerFactory.class);\n        tokenizers.put(\"lowercase\", LowerCaseTokenizerFactory.class);\n        tokenizers.put(\"pathhierarchy\", PathHierarchyTokenizerFactory.class);\n        tokenizers.put(\"pattern\", PatternTokenizerFactory.class);\n        tokenizers.put(\"uax29urlemail\", UAX29URLEmailTokenizerFactory.class);\n        tokenizers.put(\"whitespace\", WhitespaceTokenizerFactory.class);\n        return tokenizers;\n    }\n","realPath":"modules/analysis-common/src/test/java/org/elasticsearch/analysis/common/CommonAnalysisFactoryTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":44,"status":"M"},{"authorDate":"2018-05-07 06:17:36","commitOrder":4,"curCode":"    protected Map<String, Class<?>> getTokenFilters() {\n        Map<String, Class<?>> filters = new TreeMap<>(super.getTokenFilters());\n        filters.put(\"asciifolding\", ASCIIFoldingTokenFilterFactory.class);\n        filters.put(\"keywordmarker\", KeywordMarkerTokenFilterFactory.class);\n        filters.put(\"porterstem\", PorterStemTokenFilterFactory.class);\n        filters.put(\"snowballporter\", SnowballTokenFilterFactory.class);\n        filters.put(\"trim\", TrimTokenFilterFactory.class);\n        filters.put(\"worddelimiter\", WordDelimiterTokenFilterFactory.class);\n        filters.put(\"worddelimitergraph\", WordDelimiterGraphTokenFilterFactory.class);\n        filters.put(\"flattengraph\", FlattenGraphTokenFilterFactory.class);\n        filters.put(\"length\", LengthTokenFilterFactory.class);\n        filters.put(\"greeklowercase\", LowerCaseTokenFilterFactory.class);\n        filters.put(\"irishlowercase\", LowerCaseTokenFilterFactory.class);\n        filters.put(\"lowercase\", LowerCaseTokenFilterFactory.class);\n        filters.put(\"turkishlowercase\", LowerCaseTokenFilterFactory.class);\n        filters.put(\"uppercase\", UpperCaseTokenFilterFactory.class);\n        filters.put(\"ngram\", NGramTokenFilterFactory.class);\n        filters.put(\"edgengram\", EdgeNGramTokenFilterFactory.class);\n        filters.put(\"bengalistem\", StemmerTokenFilterFactory.class);\n        filters.put(\"bulgarianstem\", StemmerTokenFilterFactory.class);\n        filters.put(\"englishminimalstem\", StemmerTokenFilterFactory.class);\n        filters.put(\"englishpossessive\", StemmerTokenFilterFactory.class);\n        filters.put(\"finnishlightstem\", StemmerTokenFilterFactory.class);\n        filters.put(\"frenchlightstem\", StemmerTokenFilterFactory.class);\n        filters.put(\"frenchminimalstem\", StemmerTokenFilterFactory.class);\n        filters.put(\"galicianminimalstem\", StemmerTokenFilterFactory.class);\n        filters.put(\"galicianstem\", StemmerTokenFilterFactory.class);\n        filters.put(\"germanlightstem\", StemmerTokenFilterFactory.class);\n        filters.put(\"germanminimalstem\", StemmerTokenFilterFactory.class);\n        filters.put(\"greekstem\", StemmerTokenFilterFactory.class);\n        filters.put(\"hindistem\", StemmerTokenFilterFactory.class);\n        filters.put(\"hungarianlightstem\", StemmerTokenFilterFactory.class);\n        filters.put(\"indonesianstem\", StemmerTokenFilterFactory.class);\n        filters.put(\"italianlightstem\", StemmerTokenFilterFactory.class);\n        filters.put(\"latvianstem\", StemmerTokenFilterFactory.class);\n        filters.put(\"norwegianlightstem\", StemmerTokenFilterFactory.class);\n        filters.put(\"norwegianminimalstem\", StemmerTokenFilterFactory.class);\n        filters.put(\"portuguesestem\", StemmerTokenFilterFactory.class);\n        filters.put(\"portugueselightstem\", StemmerTokenFilterFactory.class);\n        filters.put(\"portugueseminimalstem\", StemmerTokenFilterFactory.class);\n        filters.put(\"russianlightstem\", StemmerTokenFilterFactory.class);\n        filters.put(\"soranistem\", StemmerTokenFilterFactory.class);\n        filters.put(\"spanishlightstem\", StemmerTokenFilterFactory.class);\n        filters.put(\"swedishlightstem\", StemmerTokenFilterFactory.class);\n        filters.put(\"stemmeroverride\", StemmerOverrideTokenFilterFactory.class);\n        filters.put(\"kstem\", KStemTokenFilterFactory.class);\n        filters.put(\"synonym\", SynonymTokenFilterFactory.class);\n        filters.put(\"dictionarycompoundword\", DictionaryCompoundWordTokenFilterFactory.class);\n        filters.put(\"hyphenationcompoundword\", HyphenationCompoundWordTokenFilterFactory.class);\n        filters.put(\"reversestring\", ReverseTokenFilterFactory.class);\n        filters.put(\"elision\", ElisionTokenFilterFactory.class);\n        filters.put(\"truncate\", TruncateTokenFilterFactory.class);\n        filters.put(\"limittokencount\", LimitTokenCountFilterFactory.class);\n        filters.put(\"commongrams\", CommonGramsTokenFilterFactory.class);\n        filters.put(\"commongramsquery\", CommonGramsTokenFilterFactory.class);\n        filters.put(\"patternreplace\", PatternReplaceTokenFilterFactory.class);\n        filters.put(\"patterncapturegroup\", PatternCaptureGroupTokenFilterFactory.class);\n        filters.put(\"arabicnormalization\", ArabicNormalizationFilterFactory.class);\n        filters.put(\"bengalinormalization\", BengaliNormalizationFilterFactory.class);\n        filters.put(\"germannormalization\", GermanNormalizationFilterFactory.class);\n        filters.put(\"hindinormalization\", HindiNormalizationFilterFactory.class);\n        filters.put(\"indicnormalization\", IndicNormalizationFilterFactory.class);\n        filters.put(\"persiannormalization\", PersianNormalizationFilterFactory.class);\n        filters.put(\"scandinaviannormalization\", ScandinavianNormalizationFilterFactory.class);\n        filters.put(\"serbiannormalization\", SerbianNormalizationFilterFactory.class);\n        filters.put(\"soraninormalization\", SoraniNormalizationFilterFactory.class);\n        filters.put(\"cjkwidth\", CJKWidthFilterFactory.class);\n        filters.put(\"cjkbigram\", CJKBigramFilterFactory.class);\n        filters.put(\"delimitedpayload\", DelimitedPayloadTokenFilterFactory.class);\n        filters.put(\"keepword\", KeepWordFilterFactory.class);\n        filters.put(\"type\", KeepTypesFilterFactory.class);\n        filters.put(\"classic\", ClassicFilterFactory.class);\n        filters.put(\"apostrophe\", ApostropheFilterFactory.class);\n        filters.put(\"decimaldigit\", DecimalDigitFilterFactory.class);\n        filters.put(\"fingerprint\", FingerprintTokenFilterFactory.class);\n        filters.put(\"minhash\", MinHashTokenFilterFactory.class);\n        filters.put(\"scandinavianfolding\", ScandinavianFoldingFilterFactory.class);\n        filters.put(\"arabicstem\", ArabicStemTokenFilterFactory.class);\n        filters.put(\"brazilianstem\", BrazilianStemTokenFilterFactory.class);\n        filters.put(\"czechstem\", CzechStemTokenFilterFactory.class);\n        filters.put(\"germanstem\", GermanStemTokenFilterFactory.class);\n        \r\n        filters.put(\"fixedshingle\", Void.class);\n        return filters;\n    }\n","date":"2018-05-07 06:17:36","endLine":136,"groupId":"3910","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"getTokenFilters","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/be/fd26296a5c86007a1fd3f0e06c96a9911ef741.src","preCode":"    protected Map<String, Class<?>> getTokenFilters() {\n        Map<String, Class<?>> filters = new TreeMap<>(super.getTokenFilters());\n        filters.put(\"asciifolding\", ASCIIFoldingTokenFilterFactory.class);\n        filters.put(\"keywordmarker\", KeywordMarkerTokenFilterFactory.class);\n        filters.put(\"porterstem\", PorterStemTokenFilterFactory.class);\n        filters.put(\"snowballporter\", SnowballTokenFilterFactory.class);\n        filters.put(\"trim\", TrimTokenFilterFactory.class);\n        filters.put(\"worddelimiter\", WordDelimiterTokenFilterFactory.class);\n        filters.put(\"worddelimitergraph\", WordDelimiterGraphTokenFilterFactory.class);\n        filters.put(\"flattengraph\", FlattenGraphTokenFilterFactory.class);\n        filters.put(\"length\", LengthTokenFilterFactory.class);\n        filters.put(\"greeklowercase\", LowerCaseTokenFilterFactory.class);\n        filters.put(\"irishlowercase\", LowerCaseTokenFilterFactory.class);\n        filters.put(\"lowercase\", LowerCaseTokenFilterFactory.class);\n        filters.put(\"turkishlowercase\", LowerCaseTokenFilterFactory.class);\n        filters.put(\"uppercase\", UpperCaseTokenFilterFactory.class);\n        filters.put(\"ngram\", NGramTokenFilterFactory.class);\n        filters.put(\"edgengram\", EdgeNGramTokenFilterFactory.class);\n        filters.put(\"bengalistem\", StemmerTokenFilterFactory.class);\n        filters.put(\"bulgarianstem\", StemmerTokenFilterFactory.class);\n        filters.put(\"englishminimalstem\", StemmerTokenFilterFactory.class);\n        filters.put(\"englishpossessive\", StemmerTokenFilterFactory.class);\n        filters.put(\"finnishlightstem\", StemmerTokenFilterFactory.class);\n        filters.put(\"frenchlightstem\", StemmerTokenFilterFactory.class);\n        filters.put(\"frenchminimalstem\", StemmerTokenFilterFactory.class);\n        filters.put(\"galicianminimalstem\", StemmerTokenFilterFactory.class);\n        filters.put(\"galicianstem\", StemmerTokenFilterFactory.class);\n        filters.put(\"germanlightstem\", StemmerTokenFilterFactory.class);\n        filters.put(\"germanminimalstem\", StemmerTokenFilterFactory.class);\n        filters.put(\"greekstem\", StemmerTokenFilterFactory.class);\n        filters.put(\"hindistem\", StemmerTokenFilterFactory.class);\n        filters.put(\"hungarianlightstem\", StemmerTokenFilterFactory.class);\n        filters.put(\"indonesianstem\", StemmerTokenFilterFactory.class);\n        filters.put(\"italianlightstem\", StemmerTokenFilterFactory.class);\n        filters.put(\"latvianstem\", StemmerTokenFilterFactory.class);\n        filters.put(\"norwegianlightstem\", StemmerTokenFilterFactory.class);\n        filters.put(\"norwegianminimalstem\", StemmerTokenFilterFactory.class);\n        filters.put(\"portuguesestem\", StemmerTokenFilterFactory.class);\n        filters.put(\"portugueselightstem\", StemmerTokenFilterFactory.class);\n        filters.put(\"portugueseminimalstem\", StemmerTokenFilterFactory.class);\n        filters.put(\"russianlightstem\", StemmerTokenFilterFactory.class);\n        filters.put(\"soranistem\", StemmerTokenFilterFactory.class);\n        filters.put(\"spanishlightstem\", StemmerTokenFilterFactory.class);\n        filters.put(\"swedishlightstem\", StemmerTokenFilterFactory.class);\n        filters.put(\"stemmeroverride\", StemmerOverrideTokenFilterFactory.class);\n        filters.put(\"kstem\", KStemTokenFilterFactory.class);\n        filters.put(\"synonym\", SynonymTokenFilterFactory.class);\n        filters.put(\"dictionarycompoundword\", DictionaryCompoundWordTokenFilterFactory.class);\n        filters.put(\"hyphenationcompoundword\", HyphenationCompoundWordTokenFilterFactory.class);\n        filters.put(\"reversestring\", ReverseTokenFilterFactory.class);\n        filters.put(\"elision\", ElisionTokenFilterFactory.class);\n        filters.put(\"truncate\", TruncateTokenFilterFactory.class);\n        filters.put(\"limittokencount\", LimitTokenCountFilterFactory.class);\n        filters.put(\"commongrams\", CommonGramsTokenFilterFactory.class);\n        filters.put(\"commongramsquery\", CommonGramsTokenFilterFactory.class);\n        filters.put(\"patternreplace\", PatternReplaceTokenFilterFactory.class);\n        filters.put(\"patterncapturegroup\", PatternCaptureGroupTokenFilterFactory.class);\n        filters.put(\"arabicnormalization\", ArabicNormalizationFilterFactory.class);\n        filters.put(\"bengalinormalization\", BengaliNormalizationFilterFactory.class);\n        filters.put(\"germannormalization\", GermanNormalizationFilterFactory.class);\n        filters.put(\"hindinormalization\", HindiNormalizationFilterFactory.class);\n        filters.put(\"indicnormalization\", IndicNormalizationFilterFactory.class);\n        filters.put(\"persiannormalization\", PersianNormalizationFilterFactory.class);\n        filters.put(\"scandinaviannormalization\", ScandinavianNormalizationFilterFactory.class);\n        filters.put(\"serbiannormalization\", SerbianNormalizationFilterFactory.class);\n        filters.put(\"soraninormalization\", SoraniNormalizationFilterFactory.class);\n        filters.put(\"cjkwidth\", CJKWidthFilterFactory.class);\n        filters.put(\"cjkbigram\", CJKBigramFilterFactory.class);\n        filters.put(\"delimitedpayload\", DelimitedPayloadTokenFilterFactory.class);\n        filters.put(\"keepword\", KeepWordFilterFactory.class);\n        filters.put(\"type\", KeepTypesFilterFactory.class);\n        filters.put(\"classic\", ClassicFilterFactory.class);\n        filters.put(\"apostrophe\", ApostropheFilterFactory.class);\n        filters.put(\"decimaldigit\", DecimalDigitFilterFactory.class);\n        filters.put(\"fingerprint\", FingerprintTokenFilterFactory.class);\n        filters.put(\"minhash\", MinHashTokenFilterFactory.class);\n        filters.put(\"scandinavianfolding\", ScandinavianFoldingFilterFactory.class);\n        filters.put(\"arabicstem\", ArabicStemTokenFilterFactory.class);\n        filters.put(\"brazilianstem\", BrazilianStemTokenFilterFactory.class);\n        filters.put(\"czechstem\", CzechStemTokenFilterFactory.class);\n        filters.put(\"germanstem\", GermanStemTokenFilterFactory.class);\n        \r\n        filters.put(\"fixedshingle\", Void.class);\n        return filters;\n    }\n","realPath":"modules/analysis-common/src/test/java/org/elasticsearch/analysis/common/CommonAnalysisFactoryTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":52,"status":"N"}],"commitId":"bdf70e4f2fdbfe73c7fd7eb7a8b8aaf87e3eb80b","commitMessage":"@@@Merge branch 'master' into index-lifecycle\n","date":"2018-05-30 03:29:53","modifiedFileCount":"70","status":"M","submitter":"Tal Levy"},{"authorTime":"2018-09-29 05:40:12","codes":[{"authorDate":"2018-05-30 03:29:53","commitOrder":5,"curCode":"    protected Map<String, Class<?>> getTokenizers() {\n        Map<String, Class<?>> tokenizers = new TreeMap<>(super.getTokenizers());\n        tokenizers.put(\"simplepattern\", SimplePatternTokenizerFactory.class);\n        tokenizers.put(\"simplepatternsplit\", SimplePatternSplitTokenizerFactory.class);\n        tokenizers.put(\"thai\", ThaiTokenizerFactory.class);\n        tokenizers.put(\"ngram\", NGramTokenizerFactory.class);\n        tokenizers.put(\"edgengram\", EdgeNGramTokenizerFactory.class);\n        tokenizers.put(\"classic\", ClassicTokenizerFactory.class);\n        tokenizers.put(\"letter\", LetterTokenizerFactory.class);\n        tokenizers.put(\"lowercase\", LowerCaseTokenizerFactory.class);\n        tokenizers.put(\"pathhierarchy\", PathHierarchyTokenizerFactory.class);\n        tokenizers.put(\"pattern\", PatternTokenizerFactory.class);\n        tokenizers.put(\"uax29urlemail\", UAX29URLEmailTokenizerFactory.class);\n        tokenizers.put(\"whitespace\", WhitespaceTokenizerFactory.class);\n        tokenizers.put(\"keyword\", KeywordTokenizerFactory.class);\n        return tokenizers;\n    }\n","date":"2018-05-30 03:29:53","endLine":60,"groupId":"3366","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"getTokenizers","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/50/84306587847ae6baa425bfc8904ea2e989c3a9.src","preCode":"    protected Map<String, Class<?>> getTokenizers() {\n        Map<String, Class<?>> tokenizers = new TreeMap<>(super.getTokenizers());\n        tokenizers.put(\"simplepattern\", SimplePatternTokenizerFactory.class);\n        tokenizers.put(\"simplepatternsplit\", SimplePatternSplitTokenizerFactory.class);\n        tokenizers.put(\"thai\", ThaiTokenizerFactory.class);\n        tokenizers.put(\"ngram\", NGramTokenizerFactory.class);\n        tokenizers.put(\"edgengram\", EdgeNGramTokenizerFactory.class);\n        tokenizers.put(\"classic\", ClassicTokenizerFactory.class);\n        tokenizers.put(\"letter\", LetterTokenizerFactory.class);\n        tokenizers.put(\"lowercase\", LowerCaseTokenizerFactory.class);\n        tokenizers.put(\"pathhierarchy\", PathHierarchyTokenizerFactory.class);\n        tokenizers.put(\"pattern\", PatternTokenizerFactory.class);\n        tokenizers.put(\"uax29urlemail\", UAX29URLEmailTokenizerFactory.class);\n        tokenizers.put(\"whitespace\", WhitespaceTokenizerFactory.class);\n        tokenizers.put(\"keyword\", KeywordTokenizerFactory.class);\n        return tokenizers;\n    }\n","realPath":"modules/analysis-common/src/test/java/org/elasticsearch/analysis/common/CommonAnalysisFactoryTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":44,"status":"N"},{"authorDate":"2018-09-29 05:40:12","commitOrder":5,"curCode":"    protected Map<String, Class<?>> getTokenFilters() {\n        Map<String, Class<?>> filters = new TreeMap<>(super.getTokenFilters());\n        filters.put(\"asciifolding\", ASCIIFoldingTokenFilterFactory.class);\n        filters.put(\"keywordmarker\", KeywordMarkerTokenFilterFactory.class);\n        filters.put(\"porterstem\", PorterStemTokenFilterFactory.class);\n        filters.put(\"snowballporter\", SnowballTokenFilterFactory.class);\n        filters.put(\"trim\", TrimTokenFilterFactory.class);\n        filters.put(\"worddelimiter\", WordDelimiterTokenFilterFactory.class);\n        filters.put(\"worddelimitergraph\", WordDelimiterGraphTokenFilterFactory.class);\n        filters.put(\"flattengraph\", FlattenGraphTokenFilterFactory.class);\n        filters.put(\"length\", LengthTokenFilterFactory.class);\n        filters.put(\"greeklowercase\", LowerCaseTokenFilterFactory.class);\n        filters.put(\"irishlowercase\", LowerCaseTokenFilterFactory.class);\n        filters.put(\"lowercase\", LowerCaseTokenFilterFactory.class);\n        filters.put(\"turkishlowercase\", LowerCaseTokenFilterFactory.class);\n        filters.put(\"uppercase\", UpperCaseTokenFilterFactory.class);\n        filters.put(\"ngram\", NGramTokenFilterFactory.class);\n        filters.put(\"edgengram\", EdgeNGramTokenFilterFactory.class);\n        filters.put(\"bengalistem\", StemmerTokenFilterFactory.class);\n        filters.put(\"bulgarianstem\", StemmerTokenFilterFactory.class);\n        filters.put(\"englishminimalstem\", StemmerTokenFilterFactory.class);\n        filters.put(\"englishpossessive\", StemmerTokenFilterFactory.class);\n        filters.put(\"finnishlightstem\", StemmerTokenFilterFactory.class);\n        filters.put(\"frenchlightstem\", StemmerTokenFilterFactory.class);\n        filters.put(\"frenchminimalstem\", StemmerTokenFilterFactory.class);\n        filters.put(\"galicianminimalstem\", StemmerTokenFilterFactory.class);\n        filters.put(\"galicianstem\", StemmerTokenFilterFactory.class);\n        filters.put(\"germanlightstem\", StemmerTokenFilterFactory.class);\n        filters.put(\"germanminimalstem\", StemmerTokenFilterFactory.class);\n        filters.put(\"greekstem\", StemmerTokenFilterFactory.class);\n        filters.put(\"hindistem\", StemmerTokenFilterFactory.class);\n        filters.put(\"hungarianlightstem\", StemmerTokenFilterFactory.class);\n        filters.put(\"indonesianstem\", StemmerTokenFilterFactory.class);\n        filters.put(\"italianlightstem\", StemmerTokenFilterFactory.class);\n        filters.put(\"latvianstem\", StemmerTokenFilterFactory.class);\n        filters.put(\"norwegianlightstem\", StemmerTokenFilterFactory.class);\n        filters.put(\"norwegianminimalstem\", StemmerTokenFilterFactory.class);\n        filters.put(\"portuguesestem\", StemmerTokenFilterFactory.class);\n        filters.put(\"portugueselightstem\", StemmerTokenFilterFactory.class);\n        filters.put(\"portugueseminimalstem\", StemmerTokenFilterFactory.class);\n        filters.put(\"russianlightstem\", StemmerTokenFilterFactory.class);\n        filters.put(\"soranistem\", StemmerTokenFilterFactory.class);\n        filters.put(\"spanishlightstem\", StemmerTokenFilterFactory.class);\n        filters.put(\"swedishlightstem\", StemmerTokenFilterFactory.class);\n        filters.put(\"stemmeroverride\", StemmerOverrideTokenFilterFactory.class);\n        filters.put(\"kstem\", KStemTokenFilterFactory.class);\n        filters.put(\"synonym\", SynonymTokenFilterFactory.class);\n        filters.put(\"synonymgraph\", SynonymGraphTokenFilterFactory.class);\n        filters.put(\"dictionarycompoundword\", DictionaryCompoundWordTokenFilterFactory.class);\n        filters.put(\"hyphenationcompoundword\", HyphenationCompoundWordTokenFilterFactory.class);\n        filters.put(\"reversestring\", ReverseTokenFilterFactory.class);\n        filters.put(\"elision\", ElisionTokenFilterFactory.class);\n        filters.put(\"truncate\", TruncateTokenFilterFactory.class);\n        filters.put(\"limittokencount\", LimitTokenCountFilterFactory.class);\n        filters.put(\"commongrams\", CommonGramsTokenFilterFactory.class);\n        filters.put(\"commongramsquery\", CommonGramsTokenFilterFactory.class);\n        filters.put(\"patternreplace\", PatternReplaceTokenFilterFactory.class);\n        filters.put(\"patterncapturegroup\", PatternCaptureGroupTokenFilterFactory.class);\n        filters.put(\"arabicnormalization\", ArabicNormalizationFilterFactory.class);\n        filters.put(\"bengalinormalization\", BengaliNormalizationFilterFactory.class);\n        filters.put(\"germannormalization\", GermanNormalizationFilterFactory.class);\n        filters.put(\"hindinormalization\", HindiNormalizationFilterFactory.class);\n        filters.put(\"indicnormalization\", IndicNormalizationFilterFactory.class);\n        filters.put(\"persiannormalization\", PersianNormalizationFilterFactory.class);\n        filters.put(\"scandinaviannormalization\", ScandinavianNormalizationFilterFactory.class);\n        filters.put(\"serbiannormalization\", SerbianNormalizationFilterFactory.class);\n        filters.put(\"soraninormalization\", SoraniNormalizationFilterFactory.class);\n        filters.put(\"cjkwidth\", CJKWidthFilterFactory.class);\n        filters.put(\"cjkbigram\", CJKBigramFilterFactory.class);\n        filters.put(\"delimitedpayload\", DelimitedPayloadTokenFilterFactory.class);\n        filters.put(\"keepword\", KeepWordFilterFactory.class);\n        filters.put(\"type\", KeepTypesFilterFactory.class);\n        filters.put(\"classic\", ClassicFilterFactory.class);\n        filters.put(\"apostrophe\", ApostropheFilterFactory.class);\n        filters.put(\"decimaldigit\", DecimalDigitFilterFactory.class);\n        filters.put(\"fingerprint\", FingerprintTokenFilterFactory.class);\n        filters.put(\"minhash\", MinHashTokenFilterFactory.class);\n        filters.put(\"scandinavianfolding\", ScandinavianFoldingFilterFactory.class);\n        filters.put(\"arabicstem\", ArabicStemTokenFilterFactory.class);\n        filters.put(\"brazilianstem\", BrazilianStemTokenFilterFactory.class);\n        filters.put(\"czechstem\", CzechStemTokenFilterFactory.class);\n        filters.put(\"germanstem\", GermanStemTokenFilterFactory.class);\n        \r\n        filters.put(\"fixedshingle\", Void.class);\n        return filters;\n    }\n","date":"2018-09-29 05:40:12","endLine":146,"groupId":"3910","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"getTokenFilters","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/f9/fca66cc54a1e2f32608468f00bec1b3dc49922.src","preCode":"    protected Map<String, Class<?>> getTokenFilters() {\n        Map<String, Class<?>> filters = new TreeMap<>(super.getTokenFilters());\n        filters.put(\"asciifolding\", ASCIIFoldingTokenFilterFactory.class);\n        filters.put(\"keywordmarker\", KeywordMarkerTokenFilterFactory.class);\n        filters.put(\"porterstem\", PorterStemTokenFilterFactory.class);\n        filters.put(\"snowballporter\", SnowballTokenFilterFactory.class);\n        filters.put(\"trim\", TrimTokenFilterFactory.class);\n        filters.put(\"worddelimiter\", WordDelimiterTokenFilterFactory.class);\n        filters.put(\"worddelimitergraph\", WordDelimiterGraphTokenFilterFactory.class);\n        filters.put(\"flattengraph\", FlattenGraphTokenFilterFactory.class);\n        filters.put(\"length\", LengthTokenFilterFactory.class);\n        filters.put(\"greeklowercase\", LowerCaseTokenFilterFactory.class);\n        filters.put(\"irishlowercase\", LowerCaseTokenFilterFactory.class);\n        filters.put(\"lowercase\", LowerCaseTokenFilterFactory.class);\n        filters.put(\"turkishlowercase\", LowerCaseTokenFilterFactory.class);\n        filters.put(\"uppercase\", UpperCaseTokenFilterFactory.class);\n        filters.put(\"ngram\", NGramTokenFilterFactory.class);\n        filters.put(\"edgengram\", EdgeNGramTokenFilterFactory.class);\n        filters.put(\"bengalistem\", StemmerTokenFilterFactory.class);\n        filters.put(\"bulgarianstem\", StemmerTokenFilterFactory.class);\n        filters.put(\"englishminimalstem\", StemmerTokenFilterFactory.class);\n        filters.put(\"englishpossessive\", StemmerTokenFilterFactory.class);\n        filters.put(\"finnishlightstem\", StemmerTokenFilterFactory.class);\n        filters.put(\"frenchlightstem\", StemmerTokenFilterFactory.class);\n        filters.put(\"frenchminimalstem\", StemmerTokenFilterFactory.class);\n        filters.put(\"galicianminimalstem\", StemmerTokenFilterFactory.class);\n        filters.put(\"galicianstem\", StemmerTokenFilterFactory.class);\n        filters.put(\"germanlightstem\", StemmerTokenFilterFactory.class);\n        filters.put(\"germanminimalstem\", StemmerTokenFilterFactory.class);\n        filters.put(\"greekstem\", StemmerTokenFilterFactory.class);\n        filters.put(\"hindistem\", StemmerTokenFilterFactory.class);\n        filters.put(\"hungarianlightstem\", StemmerTokenFilterFactory.class);\n        filters.put(\"indonesianstem\", StemmerTokenFilterFactory.class);\n        filters.put(\"italianlightstem\", StemmerTokenFilterFactory.class);\n        filters.put(\"latvianstem\", StemmerTokenFilterFactory.class);\n        filters.put(\"norwegianlightstem\", StemmerTokenFilterFactory.class);\n        filters.put(\"norwegianminimalstem\", StemmerTokenFilterFactory.class);\n        filters.put(\"portuguesestem\", StemmerTokenFilterFactory.class);\n        filters.put(\"portugueselightstem\", StemmerTokenFilterFactory.class);\n        filters.put(\"portugueseminimalstem\", StemmerTokenFilterFactory.class);\n        filters.put(\"russianlightstem\", StemmerTokenFilterFactory.class);\n        filters.put(\"soranistem\", StemmerTokenFilterFactory.class);\n        filters.put(\"spanishlightstem\", StemmerTokenFilterFactory.class);\n        filters.put(\"swedishlightstem\", StemmerTokenFilterFactory.class);\n        filters.put(\"stemmeroverride\", StemmerOverrideTokenFilterFactory.class);\n        filters.put(\"kstem\", KStemTokenFilterFactory.class);\n        filters.put(\"synonym\", SynonymTokenFilterFactory.class);\n        filters.put(\"dictionarycompoundword\", DictionaryCompoundWordTokenFilterFactory.class);\n        filters.put(\"hyphenationcompoundword\", HyphenationCompoundWordTokenFilterFactory.class);\n        filters.put(\"reversestring\", ReverseTokenFilterFactory.class);\n        filters.put(\"elision\", ElisionTokenFilterFactory.class);\n        filters.put(\"truncate\", TruncateTokenFilterFactory.class);\n        filters.put(\"limittokencount\", LimitTokenCountFilterFactory.class);\n        filters.put(\"commongrams\", CommonGramsTokenFilterFactory.class);\n        filters.put(\"commongramsquery\", CommonGramsTokenFilterFactory.class);\n        filters.put(\"patternreplace\", PatternReplaceTokenFilterFactory.class);\n        filters.put(\"patterncapturegroup\", PatternCaptureGroupTokenFilterFactory.class);\n        filters.put(\"arabicnormalization\", ArabicNormalizationFilterFactory.class);\n        filters.put(\"bengalinormalization\", BengaliNormalizationFilterFactory.class);\n        filters.put(\"germannormalization\", GermanNormalizationFilterFactory.class);\n        filters.put(\"hindinormalization\", HindiNormalizationFilterFactory.class);\n        filters.put(\"indicnormalization\", IndicNormalizationFilterFactory.class);\n        filters.put(\"persiannormalization\", PersianNormalizationFilterFactory.class);\n        filters.put(\"scandinaviannormalization\", ScandinavianNormalizationFilterFactory.class);\n        filters.put(\"serbiannormalization\", SerbianNormalizationFilterFactory.class);\n        filters.put(\"soraninormalization\", SoraniNormalizationFilterFactory.class);\n        filters.put(\"cjkwidth\", CJKWidthFilterFactory.class);\n        filters.put(\"cjkbigram\", CJKBigramFilterFactory.class);\n        filters.put(\"delimitedpayload\", DelimitedPayloadTokenFilterFactory.class);\n        filters.put(\"keepword\", KeepWordFilterFactory.class);\n        filters.put(\"type\", KeepTypesFilterFactory.class);\n        filters.put(\"classic\", ClassicFilterFactory.class);\n        filters.put(\"apostrophe\", ApostropheFilterFactory.class);\n        filters.put(\"decimaldigit\", DecimalDigitFilterFactory.class);\n        filters.put(\"fingerprint\", FingerprintTokenFilterFactory.class);\n        filters.put(\"minhash\", MinHashTokenFilterFactory.class);\n        filters.put(\"scandinavianfolding\", ScandinavianFoldingFilterFactory.class);\n        filters.put(\"arabicstem\", ArabicStemTokenFilterFactory.class);\n        filters.put(\"brazilianstem\", BrazilianStemTokenFilterFactory.class);\n        filters.put(\"czechstem\", CzechStemTokenFilterFactory.class);\n        filters.put(\"germanstem\", GermanStemTokenFilterFactory.class);\n        \r\n        filters.put(\"fixedshingle\", Void.class);\n        return filters;\n    }\n","realPath":"modules/analysis-common/src/test/java/org/elasticsearch/analysis/common/CommonAnalysisFactoryTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":61,"status":"M"}],"commitId":"6ea396a476ada0c6d5ff0f27a3e5526b42ff1502","commitMessage":"@@@Merge remote-tracking branch 'origin/master' into index-lifecycle\n","date":"2018-09-29 05:40:12","modifiedFileCount":"333","status":"M","submitter":"Lee Hinman"},{"authorTime":"2018-09-29 05:40:12","codes":[{"authorDate":"2018-11-06 18:55:23","commitOrder":6,"curCode":"    protected Map<String, Class<?>> getTokenizers() {\n        Map<String, Class<?>> tokenizers = new TreeMap<>(super.getTokenizers());\n        tokenizers.put(\"simplepattern\", SimplePatternTokenizerFactory.class);\n        tokenizers.put(\"simplepatternsplit\", SimplePatternSplitTokenizerFactory.class);\n        tokenizers.put(\"thai\", ThaiTokenizerFactory.class);\n        tokenizers.put(\"ngram\", NGramTokenizerFactory.class);\n        tokenizers.put(\"edgengram\", EdgeNGramTokenizerFactory.class);\n        tokenizers.put(\"classic\", ClassicTokenizerFactory.class);\n        tokenizers.put(\"letter\", LetterTokenizerFactory.class);\n        \r\n        tokenizers.put(\"pathhierarchy\", PathHierarchyTokenizerFactory.class);\n        tokenizers.put(\"pattern\", PatternTokenizerFactory.class);\n        tokenizers.put(\"uax29urlemail\", UAX29URLEmailTokenizerFactory.class);\n        tokenizers.put(\"whitespace\", WhitespaceTokenizerFactory.class);\n        tokenizers.put(\"keyword\", KeywordTokenizerFactory.class);\n        return tokenizers;\n    }\n","date":"2018-11-06 18:55:23","endLine":58,"groupId":"3366","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"getTokenizers","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/99/e882c6220852d6aad4053dbc82c8099b4ab6cd.src","preCode":"    protected Map<String, Class<?>> getTokenizers() {\n        Map<String, Class<?>> tokenizers = new TreeMap<>(super.getTokenizers());\n        tokenizers.put(\"simplepattern\", SimplePatternTokenizerFactory.class);\n        tokenizers.put(\"simplepatternsplit\", SimplePatternSplitTokenizerFactory.class);\n        tokenizers.put(\"thai\", ThaiTokenizerFactory.class);\n        tokenizers.put(\"ngram\", NGramTokenizerFactory.class);\n        tokenizers.put(\"edgengram\", EdgeNGramTokenizerFactory.class);\n        tokenizers.put(\"classic\", ClassicTokenizerFactory.class);\n        tokenizers.put(\"letter\", LetterTokenizerFactory.class);\n        tokenizers.put(\"lowercase\", LowerCaseTokenizerFactory.class);\n        tokenizers.put(\"pathhierarchy\", PathHierarchyTokenizerFactory.class);\n        tokenizers.put(\"pattern\", PatternTokenizerFactory.class);\n        tokenizers.put(\"uax29urlemail\", UAX29URLEmailTokenizerFactory.class);\n        tokenizers.put(\"whitespace\", WhitespaceTokenizerFactory.class);\n        tokenizers.put(\"keyword\", KeywordTokenizerFactory.class);\n        return tokenizers;\n    }\n","realPath":"modules/analysis-common/src/test/java/org/elasticsearch/analysis/common/CommonAnalysisFactoryTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":42,"status":"M"},{"authorDate":"2018-09-29 05:40:12","commitOrder":6,"curCode":"    protected Map<String, Class<?>> getTokenFilters() {\n        Map<String, Class<?>> filters = new TreeMap<>(super.getTokenFilters());\n        filters.put(\"asciifolding\", ASCIIFoldingTokenFilterFactory.class);\n        filters.put(\"keywordmarker\", KeywordMarkerTokenFilterFactory.class);\n        filters.put(\"porterstem\", PorterStemTokenFilterFactory.class);\n        filters.put(\"snowballporter\", SnowballTokenFilterFactory.class);\n        filters.put(\"trim\", TrimTokenFilterFactory.class);\n        filters.put(\"worddelimiter\", WordDelimiterTokenFilterFactory.class);\n        filters.put(\"worddelimitergraph\", WordDelimiterGraphTokenFilterFactory.class);\n        filters.put(\"flattengraph\", FlattenGraphTokenFilterFactory.class);\n        filters.put(\"length\", LengthTokenFilterFactory.class);\n        filters.put(\"greeklowercase\", LowerCaseTokenFilterFactory.class);\n        filters.put(\"irishlowercase\", LowerCaseTokenFilterFactory.class);\n        filters.put(\"lowercase\", LowerCaseTokenFilterFactory.class);\n        filters.put(\"turkishlowercase\", LowerCaseTokenFilterFactory.class);\n        filters.put(\"uppercase\", UpperCaseTokenFilterFactory.class);\n        filters.put(\"ngram\", NGramTokenFilterFactory.class);\n        filters.put(\"edgengram\", EdgeNGramTokenFilterFactory.class);\n        filters.put(\"bengalistem\", StemmerTokenFilterFactory.class);\n        filters.put(\"bulgarianstem\", StemmerTokenFilterFactory.class);\n        filters.put(\"englishminimalstem\", StemmerTokenFilterFactory.class);\n        filters.put(\"englishpossessive\", StemmerTokenFilterFactory.class);\n        filters.put(\"finnishlightstem\", StemmerTokenFilterFactory.class);\n        filters.put(\"frenchlightstem\", StemmerTokenFilterFactory.class);\n        filters.put(\"frenchminimalstem\", StemmerTokenFilterFactory.class);\n        filters.put(\"galicianminimalstem\", StemmerTokenFilterFactory.class);\n        filters.put(\"galicianstem\", StemmerTokenFilterFactory.class);\n        filters.put(\"germanlightstem\", StemmerTokenFilterFactory.class);\n        filters.put(\"germanminimalstem\", StemmerTokenFilterFactory.class);\n        filters.put(\"greekstem\", StemmerTokenFilterFactory.class);\n        filters.put(\"hindistem\", StemmerTokenFilterFactory.class);\n        filters.put(\"hungarianlightstem\", StemmerTokenFilterFactory.class);\n        filters.put(\"indonesianstem\", StemmerTokenFilterFactory.class);\n        filters.put(\"italianlightstem\", StemmerTokenFilterFactory.class);\n        filters.put(\"latvianstem\", StemmerTokenFilterFactory.class);\n        filters.put(\"norwegianlightstem\", StemmerTokenFilterFactory.class);\n        filters.put(\"norwegianminimalstem\", StemmerTokenFilterFactory.class);\n        filters.put(\"portuguesestem\", StemmerTokenFilterFactory.class);\n        filters.put(\"portugueselightstem\", StemmerTokenFilterFactory.class);\n        filters.put(\"portugueseminimalstem\", StemmerTokenFilterFactory.class);\n        filters.put(\"russianlightstem\", StemmerTokenFilterFactory.class);\n        filters.put(\"soranistem\", StemmerTokenFilterFactory.class);\n        filters.put(\"spanishlightstem\", StemmerTokenFilterFactory.class);\n        filters.put(\"swedishlightstem\", StemmerTokenFilterFactory.class);\n        filters.put(\"stemmeroverride\", StemmerOverrideTokenFilterFactory.class);\n        filters.put(\"kstem\", KStemTokenFilterFactory.class);\n        filters.put(\"synonym\", SynonymTokenFilterFactory.class);\n        filters.put(\"synonymgraph\", SynonymGraphTokenFilterFactory.class);\n        filters.put(\"dictionarycompoundword\", DictionaryCompoundWordTokenFilterFactory.class);\n        filters.put(\"hyphenationcompoundword\", HyphenationCompoundWordTokenFilterFactory.class);\n        filters.put(\"reversestring\", ReverseTokenFilterFactory.class);\n        filters.put(\"elision\", ElisionTokenFilterFactory.class);\n        filters.put(\"truncate\", TruncateTokenFilterFactory.class);\n        filters.put(\"limittokencount\", LimitTokenCountFilterFactory.class);\n        filters.put(\"commongrams\", CommonGramsTokenFilterFactory.class);\n        filters.put(\"commongramsquery\", CommonGramsTokenFilterFactory.class);\n        filters.put(\"patternreplace\", PatternReplaceTokenFilterFactory.class);\n        filters.put(\"patterncapturegroup\", PatternCaptureGroupTokenFilterFactory.class);\n        filters.put(\"arabicnormalization\", ArabicNormalizationFilterFactory.class);\n        filters.put(\"bengalinormalization\", BengaliNormalizationFilterFactory.class);\n        filters.put(\"germannormalization\", GermanNormalizationFilterFactory.class);\n        filters.put(\"hindinormalization\", HindiNormalizationFilterFactory.class);\n        filters.put(\"indicnormalization\", IndicNormalizationFilterFactory.class);\n        filters.put(\"persiannormalization\", PersianNormalizationFilterFactory.class);\n        filters.put(\"scandinaviannormalization\", ScandinavianNormalizationFilterFactory.class);\n        filters.put(\"serbiannormalization\", SerbianNormalizationFilterFactory.class);\n        filters.put(\"soraninormalization\", SoraniNormalizationFilterFactory.class);\n        filters.put(\"cjkwidth\", CJKWidthFilterFactory.class);\n        filters.put(\"cjkbigram\", CJKBigramFilterFactory.class);\n        filters.put(\"delimitedpayload\", DelimitedPayloadTokenFilterFactory.class);\n        filters.put(\"keepword\", KeepWordFilterFactory.class);\n        filters.put(\"type\", KeepTypesFilterFactory.class);\n        filters.put(\"classic\", ClassicFilterFactory.class);\n        filters.put(\"apostrophe\", ApostropheFilterFactory.class);\n        filters.put(\"decimaldigit\", DecimalDigitFilterFactory.class);\n        filters.put(\"fingerprint\", FingerprintTokenFilterFactory.class);\n        filters.put(\"minhash\", MinHashTokenFilterFactory.class);\n        filters.put(\"scandinavianfolding\", ScandinavianFoldingFilterFactory.class);\n        filters.put(\"arabicstem\", ArabicStemTokenFilterFactory.class);\n        filters.put(\"brazilianstem\", BrazilianStemTokenFilterFactory.class);\n        filters.put(\"czechstem\", CzechStemTokenFilterFactory.class);\n        filters.put(\"germanstem\", GermanStemTokenFilterFactory.class);\n        \r\n        filters.put(\"fixedshingle\", Void.class);\n        return filters;\n    }\n","date":"2018-09-29 05:40:12","endLine":146,"groupId":"3910","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"getTokenFilters","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/f9/fca66cc54a1e2f32608468f00bec1b3dc49922.src","preCode":"    protected Map<String, Class<?>> getTokenFilters() {\n        Map<String, Class<?>> filters = new TreeMap<>(super.getTokenFilters());\n        filters.put(\"asciifolding\", ASCIIFoldingTokenFilterFactory.class);\n        filters.put(\"keywordmarker\", KeywordMarkerTokenFilterFactory.class);\n        filters.put(\"porterstem\", PorterStemTokenFilterFactory.class);\n        filters.put(\"snowballporter\", SnowballTokenFilterFactory.class);\n        filters.put(\"trim\", TrimTokenFilterFactory.class);\n        filters.put(\"worddelimiter\", WordDelimiterTokenFilterFactory.class);\n        filters.put(\"worddelimitergraph\", WordDelimiterGraphTokenFilterFactory.class);\n        filters.put(\"flattengraph\", FlattenGraphTokenFilterFactory.class);\n        filters.put(\"length\", LengthTokenFilterFactory.class);\n        filters.put(\"greeklowercase\", LowerCaseTokenFilterFactory.class);\n        filters.put(\"irishlowercase\", LowerCaseTokenFilterFactory.class);\n        filters.put(\"lowercase\", LowerCaseTokenFilterFactory.class);\n        filters.put(\"turkishlowercase\", LowerCaseTokenFilterFactory.class);\n        filters.put(\"uppercase\", UpperCaseTokenFilterFactory.class);\n        filters.put(\"ngram\", NGramTokenFilterFactory.class);\n        filters.put(\"edgengram\", EdgeNGramTokenFilterFactory.class);\n        filters.put(\"bengalistem\", StemmerTokenFilterFactory.class);\n        filters.put(\"bulgarianstem\", StemmerTokenFilterFactory.class);\n        filters.put(\"englishminimalstem\", StemmerTokenFilterFactory.class);\n        filters.put(\"englishpossessive\", StemmerTokenFilterFactory.class);\n        filters.put(\"finnishlightstem\", StemmerTokenFilterFactory.class);\n        filters.put(\"frenchlightstem\", StemmerTokenFilterFactory.class);\n        filters.put(\"frenchminimalstem\", StemmerTokenFilterFactory.class);\n        filters.put(\"galicianminimalstem\", StemmerTokenFilterFactory.class);\n        filters.put(\"galicianstem\", StemmerTokenFilterFactory.class);\n        filters.put(\"germanlightstem\", StemmerTokenFilterFactory.class);\n        filters.put(\"germanminimalstem\", StemmerTokenFilterFactory.class);\n        filters.put(\"greekstem\", StemmerTokenFilterFactory.class);\n        filters.put(\"hindistem\", StemmerTokenFilterFactory.class);\n        filters.put(\"hungarianlightstem\", StemmerTokenFilterFactory.class);\n        filters.put(\"indonesianstem\", StemmerTokenFilterFactory.class);\n        filters.put(\"italianlightstem\", StemmerTokenFilterFactory.class);\n        filters.put(\"latvianstem\", StemmerTokenFilterFactory.class);\n        filters.put(\"norwegianlightstem\", StemmerTokenFilterFactory.class);\n        filters.put(\"norwegianminimalstem\", StemmerTokenFilterFactory.class);\n        filters.put(\"portuguesestem\", StemmerTokenFilterFactory.class);\n        filters.put(\"portugueselightstem\", StemmerTokenFilterFactory.class);\n        filters.put(\"portugueseminimalstem\", StemmerTokenFilterFactory.class);\n        filters.put(\"russianlightstem\", StemmerTokenFilterFactory.class);\n        filters.put(\"soranistem\", StemmerTokenFilterFactory.class);\n        filters.put(\"spanishlightstem\", StemmerTokenFilterFactory.class);\n        filters.put(\"swedishlightstem\", StemmerTokenFilterFactory.class);\n        filters.put(\"stemmeroverride\", StemmerOverrideTokenFilterFactory.class);\n        filters.put(\"kstem\", KStemTokenFilterFactory.class);\n        filters.put(\"synonym\", SynonymTokenFilterFactory.class);\n        filters.put(\"synonymgraph\", SynonymGraphTokenFilterFactory.class);\n        filters.put(\"dictionarycompoundword\", DictionaryCompoundWordTokenFilterFactory.class);\n        filters.put(\"hyphenationcompoundword\", HyphenationCompoundWordTokenFilterFactory.class);\n        filters.put(\"reversestring\", ReverseTokenFilterFactory.class);\n        filters.put(\"elision\", ElisionTokenFilterFactory.class);\n        filters.put(\"truncate\", TruncateTokenFilterFactory.class);\n        filters.put(\"limittokencount\", LimitTokenCountFilterFactory.class);\n        filters.put(\"commongrams\", CommonGramsTokenFilterFactory.class);\n        filters.put(\"commongramsquery\", CommonGramsTokenFilterFactory.class);\n        filters.put(\"patternreplace\", PatternReplaceTokenFilterFactory.class);\n        filters.put(\"patterncapturegroup\", PatternCaptureGroupTokenFilterFactory.class);\n        filters.put(\"arabicnormalization\", ArabicNormalizationFilterFactory.class);\n        filters.put(\"bengalinormalization\", BengaliNormalizationFilterFactory.class);\n        filters.put(\"germannormalization\", GermanNormalizationFilterFactory.class);\n        filters.put(\"hindinormalization\", HindiNormalizationFilterFactory.class);\n        filters.put(\"indicnormalization\", IndicNormalizationFilterFactory.class);\n        filters.put(\"persiannormalization\", PersianNormalizationFilterFactory.class);\n        filters.put(\"scandinaviannormalization\", ScandinavianNormalizationFilterFactory.class);\n        filters.put(\"serbiannormalization\", SerbianNormalizationFilterFactory.class);\n        filters.put(\"soraninormalization\", SoraniNormalizationFilterFactory.class);\n        filters.put(\"cjkwidth\", CJKWidthFilterFactory.class);\n        filters.put(\"cjkbigram\", CJKBigramFilterFactory.class);\n        filters.put(\"delimitedpayload\", DelimitedPayloadTokenFilterFactory.class);\n        filters.put(\"keepword\", KeepWordFilterFactory.class);\n        filters.put(\"type\", KeepTypesFilterFactory.class);\n        filters.put(\"classic\", ClassicFilterFactory.class);\n        filters.put(\"apostrophe\", ApostropheFilterFactory.class);\n        filters.put(\"decimaldigit\", DecimalDigitFilterFactory.class);\n        filters.put(\"fingerprint\", FingerprintTokenFilterFactory.class);\n        filters.put(\"minhash\", MinHashTokenFilterFactory.class);\n        filters.put(\"scandinavianfolding\", ScandinavianFoldingFilterFactory.class);\n        filters.put(\"arabicstem\", ArabicStemTokenFilterFactory.class);\n        filters.put(\"brazilianstem\", BrazilianStemTokenFilterFactory.class);\n        filters.put(\"czechstem\", CzechStemTokenFilterFactory.class);\n        filters.put(\"germanstem\", GermanStemTokenFilterFactory.class);\n        \r\n        filters.put(\"fixedshingle\", Void.class);\n        return filters;\n    }\n","realPath":"modules/analysis-common/src/test/java/org/elasticsearch/analysis/common/CommonAnalysisFactoryTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":61,"status":"N"}],"commitId":"a5e1f4d3a2b6f03f5b6268555ebb4271ea3c153b","commitMessage":"@@@Upgrade to lucene-8.0.0-snapshot-31d7dfe6b1 (#35224)\n\n\n","date":"2018-11-06 18:55:23","modifiedFileCount":"30","status":"M","submitter":"Nick Knize"},{"authorTime":"2021-09-17 00:23:18","codes":[{"authorDate":"2018-11-06 18:55:23","commitOrder":7,"curCode":"    protected Map<String, Class<?>> getTokenizers() {\n        Map<String, Class<?>> tokenizers = new TreeMap<>(super.getTokenizers());\n        tokenizers.put(\"simplepattern\", SimplePatternTokenizerFactory.class);\n        tokenizers.put(\"simplepatternsplit\", SimplePatternSplitTokenizerFactory.class);\n        tokenizers.put(\"thai\", ThaiTokenizerFactory.class);\n        tokenizers.put(\"ngram\", NGramTokenizerFactory.class);\n        tokenizers.put(\"edgengram\", EdgeNGramTokenizerFactory.class);\n        tokenizers.put(\"classic\", ClassicTokenizerFactory.class);\n        tokenizers.put(\"letter\", LetterTokenizerFactory.class);\n        \r\n        tokenizers.put(\"pathhierarchy\", PathHierarchyTokenizerFactory.class);\n        tokenizers.put(\"pattern\", PatternTokenizerFactory.class);\n        tokenizers.put(\"uax29urlemail\", UAX29URLEmailTokenizerFactory.class);\n        tokenizers.put(\"whitespace\", WhitespaceTokenizerFactory.class);\n        tokenizers.put(\"keyword\", KeywordTokenizerFactory.class);\n        return tokenizers;\n    }\n","date":"2018-11-06 18:55:23","endLine":58,"groupId":"10701","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"getTokenizers","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/99/e882c6220852d6aad4053dbc82c8099b4ab6cd.src","preCode":"    protected Map<String, Class<?>> getTokenizers() {\n        Map<String, Class<?>> tokenizers = new TreeMap<>(super.getTokenizers());\n        tokenizers.put(\"simplepattern\", SimplePatternTokenizerFactory.class);\n        tokenizers.put(\"simplepatternsplit\", SimplePatternSplitTokenizerFactory.class);\n        tokenizers.put(\"thai\", ThaiTokenizerFactory.class);\n        tokenizers.put(\"ngram\", NGramTokenizerFactory.class);\n        tokenizers.put(\"edgengram\", EdgeNGramTokenizerFactory.class);\n        tokenizers.put(\"classic\", ClassicTokenizerFactory.class);\n        tokenizers.put(\"letter\", LetterTokenizerFactory.class);\n        \r\n        tokenizers.put(\"pathhierarchy\", PathHierarchyTokenizerFactory.class);\n        tokenizers.put(\"pattern\", PatternTokenizerFactory.class);\n        tokenizers.put(\"uax29urlemail\", UAX29URLEmailTokenizerFactory.class);\n        tokenizers.put(\"whitespace\", WhitespaceTokenizerFactory.class);\n        tokenizers.put(\"keyword\", KeywordTokenizerFactory.class);\n        return tokenizers;\n    }\n","realPath":"modules/analysis-common/src/test/java/org/elasticsearch/analysis/common/CommonAnalysisFactoryTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":42,"status":"N"},{"authorDate":"2021-09-17 00:23:18","commitOrder":7,"curCode":"    protected Map<String, Class<?>> getTokenFilters() {\n        Map<String, Class<?>> filters = new TreeMap<>(super.getTokenFilters());\n        filters.put(\"asciifolding\", ASCIIFoldingTokenFilterFactory.class);\n        filters.put(\"keywordmarker\", KeywordMarkerTokenFilterFactory.class);\n        filters.put(\"porterstem\", PorterStemTokenFilterFactory.class);\n        filters.put(\"snowballporter\", SnowballTokenFilterFactory.class);\n        filters.put(\"trim\", TrimTokenFilterFactory.class);\n        filters.put(\"worddelimiter\", WordDelimiterTokenFilterFactory.class);\n        filters.put(\"worddelimitergraph\", WordDelimiterGraphTokenFilterFactory.class);\n        filters.put(\"flattengraph\", FlattenGraphTokenFilterFactory.class);\n        filters.put(\"length\", LengthTokenFilterFactory.class);\n        filters.put(\"greeklowercase\", LowerCaseTokenFilterFactory.class);\n        filters.put(\"irishlowercase\", LowerCaseTokenFilterFactory.class);\n        filters.put(\"lowercase\", LowerCaseTokenFilterFactory.class);\n        filters.put(\"turkishlowercase\", LowerCaseTokenFilterFactory.class);\n        filters.put(\"uppercase\", UpperCaseTokenFilterFactory.class);\n        filters.put(\"ngram\", NGramTokenFilterFactory.class);\n        filters.put(\"edgengram\", EdgeNGramTokenFilterFactory.class);\n        filters.put(\"bengalistem\", StemmerTokenFilterFactory.class);\n        filters.put(\"bulgarianstem\", StemmerTokenFilterFactory.class);\n        filters.put(\"englishminimalstem\", StemmerTokenFilterFactory.class);\n        filters.put(\"englishpossessive\", StemmerTokenFilterFactory.class);\n        filters.put(\"finnishlightstem\", StemmerTokenFilterFactory.class);\n        filters.put(\"frenchlightstem\", StemmerTokenFilterFactory.class);\n        filters.put(\"frenchminimalstem\", StemmerTokenFilterFactory.class);\n        filters.put(\"galicianminimalstem\", StemmerTokenFilterFactory.class);\n        filters.put(\"galicianstem\", StemmerTokenFilterFactory.class);\n        filters.put(\"germanlightstem\", StemmerTokenFilterFactory.class);\n        filters.put(\"germanminimalstem\", StemmerTokenFilterFactory.class);\n        filters.put(\"greekstem\", StemmerTokenFilterFactory.class);\n        filters.put(\"hindistem\", StemmerTokenFilterFactory.class);\n        filters.put(\"hungarianlightstem\", StemmerTokenFilterFactory.class);\n        filters.put(\"indonesianstem\", StemmerTokenFilterFactory.class);\n        filters.put(\"italianlightstem\", StemmerTokenFilterFactory.class);\n        filters.put(\"latvianstem\", StemmerTokenFilterFactory.class);\n        filters.put(\"norwegianlightstem\", StemmerTokenFilterFactory.class);\n        filters.put(\"norwegianminimalstem\", StemmerTokenFilterFactory.class);\n        filters.put(\"portuguesestem\", StemmerTokenFilterFactory.class);\n        filters.put(\"portugueselightstem\", StemmerTokenFilterFactory.class);\n        filters.put(\"portugueseminimalstem\", StemmerTokenFilterFactory.class);\n        filters.put(\"russianlightstem\", StemmerTokenFilterFactory.class);\n        filters.put(\"soranistem\", StemmerTokenFilterFactory.class);\n        filters.put(\"spanishlightstem\", StemmerTokenFilterFactory.class);\n        filters.put(\"swedishlightstem\", StemmerTokenFilterFactory.class);\n        filters.put(\"stemmeroverride\", StemmerOverrideTokenFilterFactory.class);\n        filters.put(\"kstem\", KStemTokenFilterFactory.class);\n        filters.put(\"synonym\", SynonymTokenFilterFactory.class);\n        filters.put(\"synonymgraph\", SynonymGraphTokenFilterFactory.class);\n        filters.put(\"dictionarycompoundword\", DictionaryCompoundWordTokenFilterFactory.class);\n        filters.put(\"hyphenationcompoundword\", HyphenationCompoundWordTokenFilterFactory.class);\n        filters.put(\"reversestring\", ReverseTokenFilterFactory.class);\n        filters.put(\"elision\", ElisionTokenFilterFactory.class);\n        filters.put(\"truncate\", TruncateTokenFilterFactory.class);\n        filters.put(\"limittokencount\", LimitTokenCountFilterFactory.class);\n        filters.put(\"commongrams\", CommonGramsTokenFilterFactory.class);\n        filters.put(\"commongramsquery\", CommonGramsTokenFilterFactory.class);\n        filters.put(\"patternreplace\", PatternReplaceTokenFilterFactory.class);\n        filters.put(\"patterncapturegroup\", PatternCaptureGroupTokenFilterFactory.class);\n        filters.put(\"arabicnormalization\", ArabicNormalizationFilterFactory.class);\n        filters.put(\"bengalinormalization\", BengaliNormalizationFilterFactory.class);\n        filters.put(\"germannormalization\", GermanNormalizationFilterFactory.class);\n        filters.put(\"hindinormalization\", HindiNormalizationFilterFactory.class);\n        filters.put(\"indicnormalization\", IndicNormalizationFilterFactory.class);\n        filters.put(\"persiannormalization\", PersianNormalizationFilterFactory.class);\n        filters.put(\"scandinaviannormalization\", ScandinavianNormalizationFilterFactory.class);\n        filters.put(\"serbiannormalization\", SerbianNormalizationFilterFactory.class);\n        filters.put(\"soraninormalization\", SoraniNormalizationFilterFactory.class);\n        filters.put(\"cjkwidth\", CJKWidthFilterFactory.class);\n        filters.put(\"cjkbigram\", CJKBigramFilterFactory.class);\n        filters.put(\"delimitedpayload\", DelimitedPayloadTokenFilterFactory.class);\n        filters.put(\"keepword\", KeepWordFilterFactory.class);\n        filters.put(\"type\", KeepTypesFilterFactory.class);\n        filters.put(\"classic\", ClassicFilterFactory.class);\n        filters.put(\"apostrophe\", ApostropheFilterFactory.class);\n        filters.put(\"decimaldigit\", DecimalDigitFilterFactory.class);\n        filters.put(\"fingerprint\", FingerprintTokenFilterFactory.class);\n        filters.put(\"minhash\", MinHashTokenFilterFactory.class);\n        filters.put(\"scandinavianfolding\", ScandinavianFoldingFilterFactory.class);\n        filters.put(\"arabicstem\", ArabicStemTokenFilterFactory.class);\n        filters.put(\"brazilianstem\", BrazilianStemTokenFilterFactory.class);\n        filters.put(\"czechstem\", CzechStemTokenFilterFactory.class);\n        filters.put(\"germanstem\", GermanStemTokenFilterFactory.class);\n        filters.put(\"telugunormalization\", TeluguNormalizationFilterFactory.class);\n        filters.put(\"telugustem\", TeluguStemFilterFactory.class);\n        \r\n        filters.put(\"fixedshingle\", Void.class);\n        return filters;\n    }\n","date":"2021-09-17 00:23:18","endLine":139,"groupId":"10701","id":10,"instanceNumber":2,"isCurCommit":1,"methodName":"getTokenFilters","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/5e/5bc79b2c1457c0075a5460b910e0c77f9ac958.src","preCode":"    protected Map<String, Class<?>> getTokenFilters() {\n        Map<String, Class<?>> filters = new TreeMap<>(super.getTokenFilters());\n        filters.put(\"asciifolding\", ASCIIFoldingTokenFilterFactory.class);\n        filters.put(\"keywordmarker\", KeywordMarkerTokenFilterFactory.class);\n        filters.put(\"porterstem\", PorterStemTokenFilterFactory.class);\n        filters.put(\"snowballporter\", SnowballTokenFilterFactory.class);\n        filters.put(\"trim\", TrimTokenFilterFactory.class);\n        filters.put(\"worddelimiter\", WordDelimiterTokenFilterFactory.class);\n        filters.put(\"worddelimitergraph\", WordDelimiterGraphTokenFilterFactory.class);\n        filters.put(\"flattengraph\", FlattenGraphTokenFilterFactory.class);\n        filters.put(\"length\", LengthTokenFilterFactory.class);\n        filters.put(\"greeklowercase\", LowerCaseTokenFilterFactory.class);\n        filters.put(\"irishlowercase\", LowerCaseTokenFilterFactory.class);\n        filters.put(\"lowercase\", LowerCaseTokenFilterFactory.class);\n        filters.put(\"turkishlowercase\", LowerCaseTokenFilterFactory.class);\n        filters.put(\"uppercase\", UpperCaseTokenFilterFactory.class);\n        filters.put(\"ngram\", NGramTokenFilterFactory.class);\n        filters.put(\"edgengram\", EdgeNGramTokenFilterFactory.class);\n        filters.put(\"bengalistem\", StemmerTokenFilterFactory.class);\n        filters.put(\"bulgarianstem\", StemmerTokenFilterFactory.class);\n        filters.put(\"englishminimalstem\", StemmerTokenFilterFactory.class);\n        filters.put(\"englishpossessive\", StemmerTokenFilterFactory.class);\n        filters.put(\"finnishlightstem\", StemmerTokenFilterFactory.class);\n        filters.put(\"frenchlightstem\", StemmerTokenFilterFactory.class);\n        filters.put(\"frenchminimalstem\", StemmerTokenFilterFactory.class);\n        filters.put(\"galicianminimalstem\", StemmerTokenFilterFactory.class);\n        filters.put(\"galicianstem\", StemmerTokenFilterFactory.class);\n        filters.put(\"germanlightstem\", StemmerTokenFilterFactory.class);\n        filters.put(\"germanminimalstem\", StemmerTokenFilterFactory.class);\n        filters.put(\"greekstem\", StemmerTokenFilterFactory.class);\n        filters.put(\"hindistem\", StemmerTokenFilterFactory.class);\n        filters.put(\"hungarianlightstem\", StemmerTokenFilterFactory.class);\n        filters.put(\"indonesianstem\", StemmerTokenFilterFactory.class);\n        filters.put(\"italianlightstem\", StemmerTokenFilterFactory.class);\n        filters.put(\"latvianstem\", StemmerTokenFilterFactory.class);\n        filters.put(\"norwegianlightstem\", StemmerTokenFilterFactory.class);\n        filters.put(\"norwegianminimalstem\", StemmerTokenFilterFactory.class);\n        filters.put(\"portuguesestem\", StemmerTokenFilterFactory.class);\n        filters.put(\"portugueselightstem\", StemmerTokenFilterFactory.class);\n        filters.put(\"portugueseminimalstem\", StemmerTokenFilterFactory.class);\n        filters.put(\"russianlightstem\", StemmerTokenFilterFactory.class);\n        filters.put(\"soranistem\", StemmerTokenFilterFactory.class);\n        filters.put(\"spanishlightstem\", StemmerTokenFilterFactory.class);\n        filters.put(\"swedishlightstem\", StemmerTokenFilterFactory.class);\n        filters.put(\"stemmeroverride\", StemmerOverrideTokenFilterFactory.class);\n        filters.put(\"kstem\", KStemTokenFilterFactory.class);\n        filters.put(\"synonym\", SynonymTokenFilterFactory.class);\n        filters.put(\"synonymgraph\", SynonymGraphTokenFilterFactory.class);\n        filters.put(\"dictionarycompoundword\", DictionaryCompoundWordTokenFilterFactory.class);\n        filters.put(\"hyphenationcompoundword\", HyphenationCompoundWordTokenFilterFactory.class);\n        filters.put(\"reversestring\", ReverseTokenFilterFactory.class);\n        filters.put(\"elision\", ElisionTokenFilterFactory.class);\n        filters.put(\"truncate\", TruncateTokenFilterFactory.class);\n        filters.put(\"limittokencount\", LimitTokenCountFilterFactory.class);\n        filters.put(\"commongrams\", CommonGramsTokenFilterFactory.class);\n        filters.put(\"commongramsquery\", CommonGramsTokenFilterFactory.class);\n        filters.put(\"patternreplace\", PatternReplaceTokenFilterFactory.class);\n        filters.put(\"patterncapturegroup\", PatternCaptureGroupTokenFilterFactory.class);\n        filters.put(\"arabicnormalization\", ArabicNormalizationFilterFactory.class);\n        filters.put(\"bengalinormalization\", BengaliNormalizationFilterFactory.class);\n        filters.put(\"germannormalization\", GermanNormalizationFilterFactory.class);\n        filters.put(\"hindinormalization\", HindiNormalizationFilterFactory.class);\n        filters.put(\"indicnormalization\", IndicNormalizationFilterFactory.class);\n        filters.put(\"persiannormalization\", PersianNormalizationFilterFactory.class);\n        filters.put(\"scandinaviannormalization\", ScandinavianNormalizationFilterFactory.class);\n        filters.put(\"serbiannormalization\", SerbianNormalizationFilterFactory.class);\n        filters.put(\"soraninormalization\", SoraniNormalizationFilterFactory.class);\n        filters.put(\"cjkwidth\", CJKWidthFilterFactory.class);\n        filters.put(\"cjkbigram\", CJKBigramFilterFactory.class);\n        filters.put(\"delimitedpayload\", DelimitedPayloadTokenFilterFactory.class);\n        filters.put(\"keepword\", KeepWordFilterFactory.class);\n        filters.put(\"type\", KeepTypesFilterFactory.class);\n        filters.put(\"classic\", ClassicFilterFactory.class);\n        filters.put(\"apostrophe\", ApostropheFilterFactory.class);\n        filters.put(\"decimaldigit\", DecimalDigitFilterFactory.class);\n        filters.put(\"fingerprint\", FingerprintTokenFilterFactory.class);\n        filters.put(\"minhash\", MinHashTokenFilterFactory.class);\n        filters.put(\"scandinavianfolding\", ScandinavianFoldingFilterFactory.class);\n        filters.put(\"arabicstem\", ArabicStemTokenFilterFactory.class);\n        filters.put(\"brazilianstem\", BrazilianStemTokenFilterFactory.class);\n        filters.put(\"czechstem\", CzechStemTokenFilterFactory.class);\n        filters.put(\"germanstem\", GermanStemTokenFilterFactory.class);\n        \r\n        filters.put(\"fixedshingle\", Void.class);\n        return filters;\n    }\n","realPath":"modules/analysis-common/src/test/java/org/elasticsearch/analysis/common/CommonAnalysisFactoryTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":52,"status":"M"}],"commitId":"05c25e4b0a78abe08a3bf8a966c5c476ea3e0978","commitMessage":"@@@Upgrade to Lucene-8.10.0-snapshot-bf2fcb53079 (#77801)\n\nTo include LUCENE-10106.","date":"2021-09-17 00:23:18","modifiedFileCount":"23","status":"M","submitter":"Nhat Nguyen"}]
