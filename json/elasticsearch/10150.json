[{"authorTime":"2018-12-22 20:21:49","codes":[{"authorDate":"2018-12-22 20:21:49","commitOrder":1,"curCode":"    private Map<String, Object> retrieveCityGeoData(InetAddress ipAddress) {\n        SpecialPermission.check();\n        CityResponse response = AccessController.doPrivileged((PrivilegedAction<CityResponse>) () ->\n            cache.putIfAbsent(ipAddress, CityResponse.class, ip -> {\n                try {\n                    return lazyLoader.get().city(ip);\n                } catch (AddressNotFoundException e) {\n                    throw new AddressNotFoundRuntimeException(e);\n                } catch (Exception e) {\n                    throw new RuntimeException(e);\n                }\n            }));\n\n        Country country = response.getCountry();\n        City city = response.getCity();\n        Location location = response.getLocation();\n        Continent continent = response.getContinent();\n        Subdivision subdivision = response.getMostSpecificSubdivision();\n\n        Map<String, Object> geoData = new HashMap<>();\n        for (Property property : this.properties) {\n            switch (property) {\n                case IP:\n                    geoData.put(\"ip\", NetworkAddress.format(ipAddress));\n                    break;\n                case COUNTRY_ISO_CODE:\n                    String countryIsoCode = country.getIsoCode();\n                    if (countryIsoCode != null) {\n                        geoData.put(\"country_iso_code\", countryIsoCode);\n                    }\n                    break;\n                case COUNTRY_NAME:\n                    String countryName = country.getName();\n                    if (countryName != null) {\n                        geoData.put(\"country_name\", countryName);\n                    }\n                    break;\n                case CONTINENT_NAME:\n                    String continentName = continent.getName();\n                    if (continentName != null) {\n                        geoData.put(\"continent_name\", continentName);\n                    }\n                    break;\n                case REGION_ISO_CODE:\n                    \r\n                    \r\n                    String countryIso = country.getIsoCode();\n                    String subdivisionIso = subdivision.getIsoCode();\n                    if (countryIso != null && subdivisionIso != null) {\n                        String regionIsoCode = countryIso + \"-\" + subdivisionIso;\n                        geoData.put(\"region_iso_code\", regionIsoCode);\n                    }\n                    break;\n                case REGION_NAME:\n                    String subdivisionName = subdivision.getName();\n                    if (subdivisionName != null) {\n                        geoData.put(\"region_name\", subdivisionName);\n                    }\n                    break;\n                case CITY_NAME:\n                    String cityName = city.getName();\n                    if (cityName != null) {\n                        geoData.put(\"city_name\", cityName);\n                    }\n                    break;\n                case TIMEZONE:\n                    String locationTimeZone = location.getTimeZone();\n                    if (locationTimeZone != null) {\n                        geoData.put(\"timezone\", locationTimeZone);\n                    }\n                    break;\n                case LOCATION:\n                    Double latitude = location.getLatitude();\n                    Double longitude = location.getLongitude();\n                    if (latitude != null && longitude != null) {\n                        Map<String, Object> locationObject = new HashMap<>();\n                        locationObject.put(\"lat\", latitude);\n                        locationObject.put(\"lon\", longitude);\n                        geoData.put(\"location\", locationObject);\n                    }\n                    break;\n            }\n        }\n        return geoData;\n    }\n","date":"2018-12-22 20:21:49","endLine":252,"groupId":"52278","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"retrieveCityGeoData","params":"(InetAddressipAddress)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/5c/82c68d93032c7571780695f160c10a84cd5ffa.src","preCode":"    private Map<String, Object> retrieveCityGeoData(InetAddress ipAddress) {\n        SpecialPermission.check();\n        CityResponse response = AccessController.doPrivileged((PrivilegedAction<CityResponse>) () ->\n            cache.putIfAbsent(ipAddress, CityResponse.class, ip -> {\n                try {\n                    return lazyLoader.get().city(ip);\n                } catch (AddressNotFoundException e) {\n                    throw new AddressNotFoundRuntimeException(e);\n                } catch (Exception e) {\n                    throw new RuntimeException(e);\n                }\n            }));\n\n        Country country = response.getCountry();\n        City city = response.getCity();\n        Location location = response.getLocation();\n        Continent continent = response.getContinent();\n        Subdivision subdivision = response.getMostSpecificSubdivision();\n\n        Map<String, Object> geoData = new HashMap<>();\n        for (Property property : this.properties) {\n            switch (property) {\n                case IP:\n                    geoData.put(\"ip\", NetworkAddress.format(ipAddress));\n                    break;\n                case COUNTRY_ISO_CODE:\n                    String countryIsoCode = country.getIsoCode();\n                    if (countryIsoCode != null) {\n                        geoData.put(\"country_iso_code\", countryIsoCode);\n                    }\n                    break;\n                case COUNTRY_NAME:\n                    String countryName = country.getName();\n                    if (countryName != null) {\n                        geoData.put(\"country_name\", countryName);\n                    }\n                    break;\n                case CONTINENT_NAME:\n                    String continentName = continent.getName();\n                    if (continentName != null) {\n                        geoData.put(\"continent_name\", continentName);\n                    }\n                    break;\n                case REGION_ISO_CODE:\n                    \r\n                    \r\n                    String countryIso = country.getIsoCode();\n                    String subdivisionIso = subdivision.getIsoCode();\n                    if (countryIso != null && subdivisionIso != null) {\n                        String regionIsoCode = countryIso + \"-\" + subdivisionIso;\n                        geoData.put(\"region_iso_code\", regionIsoCode);\n                    }\n                    break;\n                case REGION_NAME:\n                    String subdivisionName = subdivision.getName();\n                    if (subdivisionName != null) {\n                        geoData.put(\"region_name\", subdivisionName);\n                    }\n                    break;\n                case CITY_NAME:\n                    String cityName = city.getName();\n                    if (cityName != null) {\n                        geoData.put(\"city_name\", cityName);\n                    }\n                    break;\n                case TIMEZONE:\n                    String locationTimeZone = location.getTimeZone();\n                    if (locationTimeZone != null) {\n                        geoData.put(\"timezone\", locationTimeZone);\n                    }\n                    break;\n                case LOCATION:\n                    Double latitude = location.getLatitude();\n                    Double longitude = location.getLongitude();\n                    if (latitude != null && longitude != null) {\n                        Map<String, Object> locationObject = new HashMap<>();\n                        locationObject.put(\"lat\", latitude);\n                        locationObject.put(\"lon\", longitude);\n                        geoData.put(\"location\", locationObject);\n                    }\n                    break;\n            }\n        }\n        return geoData;\n    }\n","realPath":"modules/ingest-geoip/src/main/java/org/elasticsearch/ingest/geoip/GeoIpProcessor.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":168,"status":"B"},{"authorDate":"2018-12-22 20:21:49","commitOrder":1,"curCode":"    private Map<String, Object> retrieveCountryGeoData(InetAddress ipAddress) {\n        SpecialPermission.check();\n        CountryResponse response = AccessController.doPrivileged((PrivilegedAction<CountryResponse>) () ->\n            cache.putIfAbsent(ipAddress, CountryResponse.class, ip -> {\n                try {\n                    return lazyLoader.get().country(ip);\n                } catch (AddressNotFoundException e) {\n                    throw new AddressNotFoundRuntimeException(e);\n                } catch (Exception e) {\n                    throw new RuntimeException(e);\n                }\n            }));\n\n        Country country = response.getCountry();\n        Continent continent = response.getContinent();\n\n        Map<String, Object> geoData = new HashMap<>();\n        for (Property property : this.properties) {\n            switch (property) {\n                case IP:\n                    geoData.put(\"ip\", NetworkAddress.format(ipAddress));\n                    break;\n                case COUNTRY_ISO_CODE:\n                    String countryIsoCode = country.getIsoCode();\n                    if (countryIsoCode != null) {\n                        geoData.put(\"country_iso_code\", countryIsoCode);\n                    }\n                    break;\n                case COUNTRY_NAME:\n                    String countryName = country.getName();\n                    if (countryName != null) {\n                        geoData.put(\"country_name\", countryName);\n                    }\n                    break;\n                case CONTINENT_NAME:\n                    String continentName = continent.getName();\n                    if (continentName != null) {\n                        geoData.put(\"continent_name\", continentName);\n                    }\n                    break;\n            }\n        }\n        return geoData;\n    }\n","date":"2018-12-22 20:21:49","endLine":297,"groupId":"52278","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"retrieveCountryGeoData","params":"(InetAddressipAddress)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/5c/82c68d93032c7571780695f160c10a84cd5ffa.src","preCode":"    private Map<String, Object> retrieveCountryGeoData(InetAddress ipAddress) {\n        SpecialPermission.check();\n        CountryResponse response = AccessController.doPrivileged((PrivilegedAction<CountryResponse>) () ->\n            cache.putIfAbsent(ipAddress, CountryResponse.class, ip -> {\n                try {\n                    return lazyLoader.get().country(ip);\n                } catch (AddressNotFoundException e) {\n                    throw new AddressNotFoundRuntimeException(e);\n                } catch (Exception e) {\n                    throw new RuntimeException(e);\n                }\n            }));\n\n        Country country = response.getCountry();\n        Continent continent = response.getContinent();\n\n        Map<String, Object> geoData = new HashMap<>();\n        for (Property property : this.properties) {\n            switch (property) {\n                case IP:\n                    geoData.put(\"ip\", NetworkAddress.format(ipAddress));\n                    break;\n                case COUNTRY_ISO_CODE:\n                    String countryIsoCode = country.getIsoCode();\n                    if (countryIsoCode != null) {\n                        geoData.put(\"country_iso_code\", countryIsoCode);\n                    }\n                    break;\n                case COUNTRY_NAME:\n                    String countryName = country.getName();\n                    if (countryName != null) {\n                        geoData.put(\"country_name\", countryName);\n                    }\n                    break;\n                case CONTINENT_NAME:\n                    String continentName = continent.getName();\n                    if (continentName != null) {\n                        geoData.put(\"continent_name\", continentName);\n                    }\n                    break;\n            }\n        }\n        return geoData;\n    }\n","realPath":"modules/ingest-geoip/src/main/java/org/elasticsearch/ingest/geoip/GeoIpProcessor.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":254,"status":"B"}],"commitId":"e1717df0ac814caa26d3ecba54e8bc95a905628a","commitMessage":"@@@Package ingest-geoip as a module (#36898)\n\nThis commit moves ingest-geoip from being a plugin to being a module\nthat is packaged with Elasticsearch distributions.","date":"2018-12-22 20:21:49","modifiedFileCount":"4","status":"B","submitter":"Jason Tedor"},{"authorTime":"2021-02-11 17:15:19","codes":[{"authorDate":"2021-02-11 17:15:19","commitOrder":2,"curCode":"    private Map<String, Object> retrieveCityGeoData(InetAddress ipAddress) {\n        CityResponse response = lazyLoader.getCity(ipAddress);\n        Country country = response.getCountry();\n        City city = response.getCity();\n        Location location = response.getLocation();\n        Continent continent = response.getContinent();\n        Subdivision subdivision = response.getMostSpecificSubdivision();\n\n        Map<String, Object> geoData = new HashMap<>();\n        for (Property property : this.properties) {\n            switch (property) {\n                case IP:\n                    geoData.put(\"ip\", NetworkAddress.format(ipAddress));\n                    break;\n                case COUNTRY_ISO_CODE:\n                    String countryIsoCode = country.getIsoCode();\n                    if (countryIsoCode != null) {\n                        geoData.put(\"country_iso_code\", countryIsoCode);\n                    }\n                    break;\n                case COUNTRY_NAME:\n                    String countryName = country.getName();\n                    if (countryName != null) {\n                        geoData.put(\"country_name\", countryName);\n                    }\n                    break;\n                case CONTINENT_NAME:\n                    String continentName = continent.getName();\n                    if (continentName != null) {\n                        geoData.put(\"continent_name\", continentName);\n                    }\n                    break;\n                case REGION_ISO_CODE:\n                    \r\n                    \r\n                    String countryIso = country.getIsoCode();\n                    String subdivisionIso = subdivision.getIsoCode();\n                    if (countryIso != null && subdivisionIso != null) {\n                        String regionIsoCode = countryIso + \"-\" + subdivisionIso;\n                        geoData.put(\"region_iso_code\", regionIsoCode);\n                    }\n                    break;\n                case REGION_NAME:\n                    String subdivisionName = subdivision.getName();\n                    if (subdivisionName != null) {\n                        geoData.put(\"region_name\", subdivisionName);\n                    }\n                    break;\n                case CITY_NAME:\n                    String cityName = city.getName();\n                    if (cityName != null) {\n                        geoData.put(\"city_name\", cityName);\n                    }\n                    break;\n                case TIMEZONE:\n                    String locationTimeZone = location.getTimeZone();\n                    if (locationTimeZone != null) {\n                        geoData.put(\"timezone\", locationTimeZone);\n                    }\n                    break;\n                case LOCATION:\n                    Double latitude = location.getLatitude();\n                    Double longitude = location.getLongitude();\n                    if (latitude != null && longitude != null) {\n                        Map<String, Object> locationObject = new HashMap<>();\n                        locationObject.put(\"lat\", latitude);\n                        locationObject.put(\"lon\", longitude);\n                        geoData.put(\"location\", locationObject);\n                    }\n                    break;\n            }\n        }\n        return geoData;\n    }\n","date":"2021-02-11 17:15:19","endLine":256,"groupId":"52278","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"retrieveCityGeoData","params":"(InetAddressipAddress)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/0b/397d18908d8dac3a8dc3ed8cea91509f4e1379.src","preCode":"    private Map<String, Object> retrieveCityGeoData(InetAddress ipAddress) {\n        SpecialPermission.check();\n        CityResponse response = AccessController.doPrivileged((PrivilegedAction<CityResponse>) () ->\n            cache.putIfAbsent(ipAddress, CityResponse.class, ip -> {\n                try {\n                    return lazyLoader.get().city(ip);\n                } catch (AddressNotFoundException e) {\n                    throw new AddressNotFoundRuntimeException(e);\n                } catch (Exception e) {\n                    throw new RuntimeException(e);\n                }\n            }));\n\n        Country country = response.getCountry();\n        City city = response.getCity();\n        Location location = response.getLocation();\n        Continent continent = response.getContinent();\n        Subdivision subdivision = response.getMostSpecificSubdivision();\n\n        Map<String, Object> geoData = new HashMap<>();\n        for (Property property : this.properties) {\n            switch (property) {\n                case IP:\n                    geoData.put(\"ip\", NetworkAddress.format(ipAddress));\n                    break;\n                case COUNTRY_ISO_CODE:\n                    String countryIsoCode = country.getIsoCode();\n                    if (countryIsoCode != null) {\n                        geoData.put(\"country_iso_code\", countryIsoCode);\n                    }\n                    break;\n                case COUNTRY_NAME:\n                    String countryName = country.getName();\n                    if (countryName != null) {\n                        geoData.put(\"country_name\", countryName);\n                    }\n                    break;\n                case CONTINENT_NAME:\n                    String continentName = continent.getName();\n                    if (continentName != null) {\n                        geoData.put(\"continent_name\", continentName);\n                    }\n                    break;\n                case REGION_ISO_CODE:\n                    \r\n                    \r\n                    String countryIso = country.getIsoCode();\n                    String subdivisionIso = subdivision.getIsoCode();\n                    if (countryIso != null && subdivisionIso != null) {\n                        String regionIsoCode = countryIso + \"-\" + subdivisionIso;\n                        geoData.put(\"region_iso_code\", regionIsoCode);\n                    }\n                    break;\n                case REGION_NAME:\n                    String subdivisionName = subdivision.getName();\n                    if (subdivisionName != null) {\n                        geoData.put(\"region_name\", subdivisionName);\n                    }\n                    break;\n                case CITY_NAME:\n                    String cityName = city.getName();\n                    if (cityName != null) {\n                        geoData.put(\"city_name\", cityName);\n                    }\n                    break;\n                case TIMEZONE:\n                    String locationTimeZone = location.getTimeZone();\n                    if (locationTimeZone != null) {\n                        geoData.put(\"timezone\", locationTimeZone);\n                    }\n                    break;\n                case LOCATION:\n                    Double latitude = location.getLatitude();\n                    Double longitude = location.getLongitude();\n                    if (latitude != null && longitude != null) {\n                        Map<String, Object> locationObject = new HashMap<>();\n                        locationObject.put(\"lat\", latitude);\n                        locationObject.put(\"lon\", longitude);\n                        geoData.put(\"location\", locationObject);\n                    }\n                    break;\n            }\n        }\n        return geoData;\n    }\n","realPath":"modules/ingest-geoip/src/main/java/org/elasticsearch/ingest/geoip/GeoIpProcessor.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":183,"status":"M"},{"authorDate":"2021-02-11 17:15:19","commitOrder":2,"curCode":"    private Map<String, Object> retrieveCountryGeoData(InetAddress ipAddress) {\n        CountryResponse response = lazyLoader.getCountry(ipAddress);\n        Country country = response.getCountry();\n        Continent continent = response.getContinent();\n\n        Map<String, Object> geoData = new HashMap<>();\n        for (Property property : this.properties) {\n            switch (property) {\n                case IP:\n                    geoData.put(\"ip\", NetworkAddress.format(ipAddress));\n                    break;\n                case COUNTRY_ISO_CODE:\n                    String countryIsoCode = country.getIsoCode();\n                    if (countryIsoCode != null) {\n                        geoData.put(\"country_iso_code\", countryIsoCode);\n                    }\n                    break;\n                case COUNTRY_NAME:\n                    String countryName = country.getName();\n                    if (countryName != null) {\n                        geoData.put(\"country_name\", countryName);\n                    }\n                    break;\n                case CONTINENT_NAME:\n                    String continentName = continent.getName();\n                    if (continentName != null) {\n                        geoData.put(\"continent_name\", continentName);\n                    }\n                    break;\n            }\n        }\n        return geoData;\n    }\n","date":"2021-02-11 17:15:19","endLine":290,"groupId":"52278","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"retrieveCountryGeoData","params":"(InetAddressipAddress)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/0b/397d18908d8dac3a8dc3ed8cea91509f4e1379.src","preCode":"    private Map<String, Object> retrieveCountryGeoData(InetAddress ipAddress) {\n        SpecialPermission.check();\n        CountryResponse response = AccessController.doPrivileged((PrivilegedAction<CountryResponse>) () ->\n            cache.putIfAbsent(ipAddress, CountryResponse.class, ip -> {\n                try {\n                    return lazyLoader.get().country(ip);\n                } catch (AddressNotFoundException e) {\n                    throw new AddressNotFoundRuntimeException(e);\n                } catch (Exception e) {\n                    throw new RuntimeException(e);\n                }\n            }));\n\n        Country country = response.getCountry();\n        Continent continent = response.getContinent();\n\n        Map<String, Object> geoData = new HashMap<>();\n        for (Property property : this.properties) {\n            switch (property) {\n                case IP:\n                    geoData.put(\"ip\", NetworkAddress.format(ipAddress));\n                    break;\n                case COUNTRY_ISO_CODE:\n                    String countryIsoCode = country.getIsoCode();\n                    if (countryIsoCode != null) {\n                        geoData.put(\"country_iso_code\", countryIsoCode);\n                    }\n                    break;\n                case COUNTRY_NAME:\n                    String countryName = country.getName();\n                    if (countryName != null) {\n                        geoData.put(\"country_name\", countryName);\n                    }\n                    break;\n                case CONTINENT_NAME:\n                    String continentName = continent.getName();\n                    if (continentName != null) {\n                        geoData.put(\"continent_name\", continentName);\n                    }\n                    break;\n            }\n        }\n        return geoData;\n    }\n","realPath":"modules/ingest-geoip/src/main/java/org/elasticsearch/ingest/geoip/GeoIpProcessor.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":258,"status":"M"}],"commitId":"5529b3d583773eb2725ce8253856092787af383c","commitMessage":"@@@Changed how geoip cache is integrated with geoip processor. (#68581)\n\nThis change helps facilitate allowing maxmind databases to be updated at runtime.\nThis will make is easier to purge the cache if a database changes.\n\nMade the following changes:\n* Changed how geoip processor integrates with the cache. The cache is moved from the geoip processor to DatabaseReaderLazyLoader class.\n* Changed the cache key from ip + response class to ip + database_path.\n* Moved GeoIpCache from IngestGeoIpPlugin class to be a top level class.","date":"2021-02-11 17:15:19","modifiedFileCount":"5","status":"M","submitter":"Martijn van Groningen"},{"authorTime":"2021-02-23 22:16:52","codes":[{"authorDate":"2021-02-23 22:16:52","commitOrder":3,"curCode":"    private Map<String, Object> retrieveCityGeoData(DatabaseReaderLazyLoader lazyLoader, InetAddress ipAddress) {\n        CityResponse response = lazyLoader.getCity(ipAddress);\n        Country country = response.getCountry();\n        City city = response.getCity();\n        Location location = response.getLocation();\n        Continent continent = response.getContinent();\n        Subdivision subdivision = response.getMostSpecificSubdivision();\n\n        Map<String, Object> geoData = new HashMap<>();\n        for (Property property : this.properties) {\n            switch (property) {\n                case IP:\n                    geoData.put(\"ip\", NetworkAddress.format(ipAddress));\n                    break;\n                case COUNTRY_ISO_CODE:\n                    String countryIsoCode = country.getIsoCode();\n                    if (countryIsoCode != null) {\n                        geoData.put(\"country_iso_code\", countryIsoCode);\n                    }\n                    break;\n                case COUNTRY_NAME:\n                    String countryName = country.getName();\n                    if (countryName != null) {\n                        geoData.put(\"country_name\", countryName);\n                    }\n                    break;\n                case CONTINENT_NAME:\n                    String continentName = continent.getName();\n                    if (continentName != null) {\n                        geoData.put(\"continent_name\", continentName);\n                    }\n                    break;\n                case REGION_ISO_CODE:\n                    \r\n                    \r\n                    String countryIso = country.getIsoCode();\n                    String subdivisionIso = subdivision.getIsoCode();\n                    if (countryIso != null && subdivisionIso != null) {\n                        String regionIsoCode = countryIso + \"-\" + subdivisionIso;\n                        geoData.put(\"region_iso_code\", regionIsoCode);\n                    }\n                    break;\n                case REGION_NAME:\n                    String subdivisionName = subdivision.getName();\n                    if (subdivisionName != null) {\n                        geoData.put(\"region_name\", subdivisionName);\n                    }\n                    break;\n                case CITY_NAME:\n                    String cityName = city.getName();\n                    if (cityName != null) {\n                        geoData.put(\"city_name\", cityName);\n                    }\n                    break;\n                case TIMEZONE:\n                    String locationTimeZone = location.getTimeZone();\n                    if (locationTimeZone != null) {\n                        geoData.put(\"timezone\", locationTimeZone);\n                    }\n                    break;\n                case LOCATION:\n                    Double latitude = location.getLatitude();\n                    Double longitude = location.getLongitude();\n                    if (latitude != null && longitude != null) {\n                        Map<String, Object> locationObject = new HashMap<>();\n                        locationObject.put(\"lat\", latitude);\n                        locationObject.put(\"lon\", longitude);\n                        geoData.put(\"location\", locationObject);\n                    }\n                    break;\n            }\n        }\n        return geoData;\n    }\n","date":"2021-02-23 22:16:52","endLine":264,"groupId":"10150","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"retrieveCityGeoData","params":"(DatabaseReaderLazyLoaderlazyLoader@InetAddressipAddress)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/07/fb6a18da4a4c9766c6dc0597a8befa2e392f5b.src","preCode":"    private Map<String, Object> retrieveCityGeoData(InetAddress ipAddress) {\n        CityResponse response = lazyLoader.getCity(ipAddress);\n        Country country = response.getCountry();\n        City city = response.getCity();\n        Location location = response.getLocation();\n        Continent continent = response.getContinent();\n        Subdivision subdivision = response.getMostSpecificSubdivision();\n\n        Map<String, Object> geoData = new HashMap<>();\n        for (Property property : this.properties) {\n            switch (property) {\n                case IP:\n                    geoData.put(\"ip\", NetworkAddress.format(ipAddress));\n                    break;\n                case COUNTRY_ISO_CODE:\n                    String countryIsoCode = country.getIsoCode();\n                    if (countryIsoCode != null) {\n                        geoData.put(\"country_iso_code\", countryIsoCode);\n                    }\n                    break;\n                case COUNTRY_NAME:\n                    String countryName = country.getName();\n                    if (countryName != null) {\n                        geoData.put(\"country_name\", countryName);\n                    }\n                    break;\n                case CONTINENT_NAME:\n                    String continentName = continent.getName();\n                    if (continentName != null) {\n                        geoData.put(\"continent_name\", continentName);\n                    }\n                    break;\n                case REGION_ISO_CODE:\n                    \r\n                    \r\n                    String countryIso = country.getIsoCode();\n                    String subdivisionIso = subdivision.getIsoCode();\n                    if (countryIso != null && subdivisionIso != null) {\n                        String regionIsoCode = countryIso + \"-\" + subdivisionIso;\n                        geoData.put(\"region_iso_code\", regionIsoCode);\n                    }\n                    break;\n                case REGION_NAME:\n                    String subdivisionName = subdivision.getName();\n                    if (subdivisionName != null) {\n                        geoData.put(\"region_name\", subdivisionName);\n                    }\n                    break;\n                case CITY_NAME:\n                    String cityName = city.getName();\n                    if (cityName != null) {\n                        geoData.put(\"city_name\", cityName);\n                    }\n                    break;\n                case TIMEZONE:\n                    String locationTimeZone = location.getTimeZone();\n                    if (locationTimeZone != null) {\n                        geoData.put(\"timezone\", locationTimeZone);\n                    }\n                    break;\n                case LOCATION:\n                    Double latitude = location.getLatitude();\n                    Double longitude = location.getLongitude();\n                    if (latitude != null && longitude != null) {\n                        Map<String, Object> locationObject = new HashMap<>();\n                        locationObject.put(\"lat\", latitude);\n                        locationObject.put(\"lon\", longitude);\n                        geoData.put(\"location\", locationObject);\n                    }\n                    break;\n            }\n        }\n        return geoData;\n    }\n","realPath":"modules/ingest-geoip/src/main/java/org/elasticsearch/ingest/geoip/GeoIpProcessor.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":191,"status":"M"},{"authorDate":"2021-02-23 22:16:52","commitOrder":3,"curCode":"    private Map<String, Object> retrieveCountryGeoData(DatabaseReaderLazyLoader lazyLoader, InetAddress ipAddress) {\n        CountryResponse response = lazyLoader.getCountry(ipAddress);\n        Country country = response.getCountry();\n        Continent continent = response.getContinent();\n\n        Map<String, Object> geoData = new HashMap<>();\n        for (Property property : this.properties) {\n            switch (property) {\n                case IP:\n                    geoData.put(\"ip\", NetworkAddress.format(ipAddress));\n                    break;\n                case COUNTRY_ISO_CODE:\n                    String countryIsoCode = country.getIsoCode();\n                    if (countryIsoCode != null) {\n                        geoData.put(\"country_iso_code\", countryIsoCode);\n                    }\n                    break;\n                case COUNTRY_NAME:\n                    String countryName = country.getName();\n                    if (countryName != null) {\n                        geoData.put(\"country_name\", countryName);\n                    }\n                    break;\n                case CONTINENT_NAME:\n                    String continentName = continent.getName();\n                    if (continentName != null) {\n                        geoData.put(\"continent_name\", continentName);\n                    }\n                    break;\n            }\n        }\n        return geoData;\n    }\n","date":"2021-02-23 22:16:52","endLine":298,"groupId":"10150","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"retrieveCountryGeoData","params":"(DatabaseReaderLazyLoaderlazyLoader@InetAddressipAddress)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/07/fb6a18da4a4c9766c6dc0597a8befa2e392f5b.src","preCode":"    private Map<String, Object> retrieveCountryGeoData(InetAddress ipAddress) {\n        CountryResponse response = lazyLoader.getCountry(ipAddress);\n        Country country = response.getCountry();\n        Continent continent = response.getContinent();\n\n        Map<String, Object> geoData = new HashMap<>();\n        for (Property property : this.properties) {\n            switch (property) {\n                case IP:\n                    geoData.put(\"ip\", NetworkAddress.format(ipAddress));\n                    break;\n                case COUNTRY_ISO_CODE:\n                    String countryIsoCode = country.getIsoCode();\n                    if (countryIsoCode != null) {\n                        geoData.put(\"country_iso_code\", countryIsoCode);\n                    }\n                    break;\n                case COUNTRY_NAME:\n                    String countryName = country.getName();\n                    if (countryName != null) {\n                        geoData.put(\"country_name\", countryName);\n                    }\n                    break;\n                case CONTINENT_NAME:\n                    String continentName = continent.getName();\n                    if (continentName != null) {\n                        geoData.put(\"continent_name\", continentName);\n                    }\n                    break;\n            }\n        }\n        return geoData;\n    }\n","realPath":"modules/ingest-geoip/src/main/java/org/elasticsearch/ingest/geoip/GeoIpProcessor.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":266,"status":"M"}],"commitId":"683a14c504119361f5dc0bd1c557bd81f49377a6","commitMessage":"@@@Allow custom geoip databases to be updated at runtime. (#68901)\n\nCustom geoip databases can be provided via the config/ingest-geoip directory. \nwhich are loaded at node startup time. This change adds the functionality\nthat reloads custom databases at runtime.\n\nAdded reference counting when getting a DatabaseReaderLazyLoader instance. \nthis to avoid closing a maxmind db reader while it is still being used.\nThere is a small window of time where this might happen during a database update.\n\nA DatabaseReaderLazyLoader instance (which wraps a Maxmind db reader) from config database directory:\n* Is closed immediately if there are no usages of it by any geoip processor instance as part of the database reload.\n* When there are usages.  then it is not closed immediately after a database reload. It is closed by the caller that did the last geoip lookup using this DatabaseReaderLazyLoader instance.","date":"2021-02-23 22:16:52","modifiedFileCount":"7","status":"M","submitter":"Martijn van Groningen"}]
