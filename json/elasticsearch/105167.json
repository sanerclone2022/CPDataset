[{"authorTime":"2018-04-26 03:22:53","codes":[{"authorDate":"2018-04-26 03:22:53","commitOrder":1,"curCode":"    public void testLongTermsAggregator() throws Exception {\n        BiFunction<Long, Boolean, IndexableField> luceneFieldFactory = (val, mv) -> {\n            if (mv) {\n                return new SortedNumericDocValuesField(\"field\", val);\n            } else {\n                return new NumericDocValuesField(\"field\", val);\n            }\n        };\n        MappedFieldType fieldType = new NumberFieldMapper.NumberFieldType(NumberFieldMapper.NumberType.LONG);\n        termsAggregator(ValueType.LONG, fieldType, Integer::longValue, Long::compareTo, luceneFieldFactory);\n        termsAggregatorWithNestedMaxAgg(ValueType.LONG, fieldType, Integer::longValue, val -> new NumericDocValuesField(\"field\", val));\n    }\n","date":"2018-04-26 03:22:53","endLine":515,"groupId":"21793","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testLongTermsAggregator","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/4f/f3c5fc5b4841cbd6814c304bf9a4c1297c6420.src","preCode":"    public void testLongTermsAggregator() throws Exception {\n        BiFunction<Long, Boolean, IndexableField> luceneFieldFactory = (val, mv) -> {\n            if (mv) {\n                return new SortedNumericDocValuesField(\"field\", val);\n            } else {\n                return new NumericDocValuesField(\"field\", val);\n            }\n        };\n        MappedFieldType fieldType = new NumberFieldMapper.NumberFieldType(NumberFieldMapper.NumberType.LONG);\n        termsAggregator(ValueType.LONG, fieldType, Integer::longValue, Long::compareTo, luceneFieldFactory);\n        termsAggregatorWithNestedMaxAgg(ValueType.LONG, fieldType, Integer::longValue, val -> new NumericDocValuesField(\"field\", val));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/search/aggregations/bucket/terms/TermsAggregatorTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":504,"status":"B"},{"authorDate":"2018-04-26 03:22:53","commitOrder":1,"curCode":"    public void testDoubleTermsAggregator() throws Exception {\n        BiFunction<Double, Boolean, IndexableField> luceneFieldFactory = (val, mv) -> {\n            if (mv) {\n                return new SortedNumericDocValuesField(\"field\", Double.doubleToRawLongBits(val));\n            } else {\n                return new NumericDocValuesField(\"field\", Double.doubleToRawLongBits(val));\n            }\n        };\n        MappedFieldType fieldType = new NumberFieldMapper.NumberFieldType(NumberFieldMapper.NumberType.DOUBLE);\n        termsAggregator(ValueType.DOUBLE, fieldType, Integer::doubleValue, Double::compareTo, luceneFieldFactory);\n        termsAggregatorWithNestedMaxAgg(ValueType.DOUBLE, fieldType, Integer::doubleValue,\n            val -> new NumericDocValuesField(\"field\", Double.doubleToRawLongBits(val)));\n    }\n","date":"2018-04-26 03:22:53","endLine":529,"groupId":"39915","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testDoubleTermsAggregator","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/4f/f3c5fc5b4841cbd6814c304bf9a4c1297c6420.src","preCode":"    public void testDoubleTermsAggregator() throws Exception {\n        BiFunction<Double, Boolean, IndexableField> luceneFieldFactory = (val, mv) -> {\n            if (mv) {\n                return new SortedNumericDocValuesField(\"field\", Double.doubleToRawLongBits(val));\n            } else {\n                return new NumericDocValuesField(\"field\", Double.doubleToRawLongBits(val));\n            }\n        };\n        MappedFieldType fieldType = new NumberFieldMapper.NumberFieldType(NumberFieldMapper.NumberType.DOUBLE);\n        termsAggregator(ValueType.DOUBLE, fieldType, Integer::doubleValue, Double::compareTo, luceneFieldFactory);\n        termsAggregatorWithNestedMaxAgg(ValueType.DOUBLE, fieldType, Integer::doubleValue,\n            val -> new NumericDocValuesField(\"field\", Double.doubleToRawLongBits(val)));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/search/aggregations/bucket/terms/TermsAggregatorTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":517,"status":"B"}],"commitId":"d74fb9eb4559077e2d20b19a9ed62d9ff825027a","commitMessage":"@@@Opened x-pack ILM code\n","date":"2018-04-26 03:22:53","modifiedFileCount":"0","status":"B","submitter":"Tal Levy"},{"authorTime":"2020-06-16 00:47:15","codes":[{"authorDate":"2020-06-16 00:47:15","commitOrder":2,"curCode":"    public void testLongTermsAggregator() throws Exception {\n        BiFunction<Long, Boolean, IndexableField> luceneFieldFactory = (val, mv) -> {\n            if (mv) {\n                return new SortedNumericDocValuesField(\"field\", val);\n            } else {\n                return new NumericDocValuesField(\"field\", val);\n            }\n        };\n        MappedFieldType fieldType\n            = new NumberFieldMapper.NumberFieldType(\"field\", NumberFieldMapper.NumberType.LONG);\n        termsAggregator(ValueType.LONG, fieldType, Integer::longValue, Long::compareTo, luceneFieldFactory);\n        termsAggregatorWithNestedMaxAgg(ValueType.LONG, fieldType, Integer::longValue, val -> new NumericDocValuesField(\"field\", val));\n    }\n","date":"2020-06-16 00:47:15","endLine":604,"groupId":"21793","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testLongTermsAggregator","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/ad/2304c58d9f5f424e260d947bed4713ee000994.src","preCode":"    public void testLongTermsAggregator() throws Exception {\n        BiFunction<Long, Boolean, IndexableField> luceneFieldFactory = (val, mv) -> {\n            if (mv) {\n                return new SortedNumericDocValuesField(\"field\", val);\n            } else {\n                return new NumericDocValuesField(\"field\", val);\n            }\n        };\n        MappedFieldType fieldType = new NumberFieldMapper.NumberFieldType(NumberFieldMapper.NumberType.LONG);\n        termsAggregator(ValueType.LONG, fieldType, Integer::longValue, Long::compareTo, luceneFieldFactory);\n        termsAggregatorWithNestedMaxAgg(ValueType.LONG, fieldType, Integer::longValue, val -> new NumericDocValuesField(\"field\", val));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/search/aggregations/bucket/terms/TermsAggregatorTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":592,"status":"M"},{"authorDate":"2020-06-16 00:47:15","commitOrder":2,"curCode":"    public void testDoubleTermsAggregator() throws Exception {\n        BiFunction<Double, Boolean, IndexableField> luceneFieldFactory = (val, mv) -> {\n            if (mv) {\n                return new SortedNumericDocValuesField(\"field\", Double.doubleToRawLongBits(val));\n            } else {\n                return new NumericDocValuesField(\"field\", Double.doubleToRawLongBits(val));\n            }\n        };\n        MappedFieldType fieldType\n            = new NumberFieldMapper.NumberFieldType(\"field\", NumberFieldMapper.NumberType.DOUBLE);\n        termsAggregator(ValueType.DOUBLE, fieldType, Integer::doubleValue, Double::compareTo, luceneFieldFactory);\n        termsAggregatorWithNestedMaxAgg(ValueType.DOUBLE, fieldType, Integer::doubleValue,\n            val -> new NumericDocValuesField(\"field\", Double.doubleToRawLongBits(val)));\n    }\n","date":"2020-06-16 00:47:15","endLine":619,"groupId":"1564","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testDoubleTermsAggregator","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/ad/2304c58d9f5f424e260d947bed4713ee000994.src","preCode":"    public void testDoubleTermsAggregator() throws Exception {\n        BiFunction<Double, Boolean, IndexableField> luceneFieldFactory = (val, mv) -> {\n            if (mv) {\n                return new SortedNumericDocValuesField(\"field\", Double.doubleToRawLongBits(val));\n            } else {\n                return new NumericDocValuesField(\"field\", Double.doubleToRawLongBits(val));\n            }\n        };\n        MappedFieldType fieldType = new NumberFieldMapper.NumberFieldType(NumberFieldMapper.NumberType.DOUBLE);\n        termsAggregator(ValueType.DOUBLE, fieldType, Integer::doubleValue, Double::compareTo, luceneFieldFactory);\n        termsAggregatorWithNestedMaxAgg(ValueType.DOUBLE, fieldType, Integer::doubleValue,\n            val -> new NumericDocValuesField(\"field\", Double.doubleToRawLongBits(val)));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/search/aggregations/bucket/terms/TermsAggregatorTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":606,"status":"M"}],"commitId":"3b696828ada5953bb1669b972a353736383edf08","commitMessage":"@@@MappedFieldType should not extend FieldType (#57666)\n\nMappedFieldType is a combination of two concerns:\n\n* an extension of lucene's FieldType.  defining how a field should be indexed\n* a set of query factory methods.  defining how a field should be searched\n\nWe want to break these two concerns apart. This commit is a first step to doing this.  breaking\nthe inheritance relationship between MappedFieldType and FieldType. MappedFieldType \ninstead has a series of boolean flags defining whether or not the field is searchable or \naggregatable.  and FieldMapper has a separate FieldType passed to its constructor defining \nhow indexing should be done.\n\nRelates to #56814","date":"2020-06-16 00:47:15","modifiedFileCount":"257","status":"M","submitter":"Alan Woodward"},{"authorTime":"2021-02-20 06:16:24","codes":[{"authorDate":"2021-02-20 06:16:24","commitOrder":3,"curCode":"    public void testLongTermsAggregator() throws Exception {\n        BiFunction<Long, Boolean, List<IndexableField>> luceneFieldFactory = (val, mv) -> {\n            if (mv) {\n                return List.of(new SortedNumericDocValuesField(\"field\", val));\n            } else {\n                return List.of(new NumericDocValuesField(\"field\", val));\n            }\n        };\n        MappedFieldType fieldType\n            = new NumberFieldMapper.NumberFieldType(\"field\", NumberFieldMapper.NumberType.LONG);\n        termsAggregator(ValueType.LONG, fieldType, Integer::longValue, Long::compareTo, luceneFieldFactory);\n        termsAggregatorWithNestedMaxAgg(ValueType.LONG, fieldType, Integer::longValue, val -> new NumericDocValuesField(\"field\", val));\n    }\n","date":"2021-02-20 06:16:24","endLine":643,"groupId":"39594","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testLongTermsAggregator","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/95/24b52f25cb65318b8da8dd394973c5f585d968.src","preCode":"    public void testLongTermsAggregator() throws Exception {\n        BiFunction<Long, Boolean, IndexableField> luceneFieldFactory = (val, mv) -> {\n            if (mv) {\n                return new SortedNumericDocValuesField(\"field\", val);\n            } else {\n                return new NumericDocValuesField(\"field\", val);\n            }\n        };\n        MappedFieldType fieldType\n            = new NumberFieldMapper.NumberFieldType(\"field\", NumberFieldMapper.NumberType.LONG);\n        termsAggregator(ValueType.LONG, fieldType, Integer::longValue, Long::compareTo, luceneFieldFactory);\n        termsAggregatorWithNestedMaxAgg(ValueType.LONG, fieldType, Integer::longValue, val -> new NumericDocValuesField(\"field\", val));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/search/aggregations/bucket/terms/TermsAggregatorTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":631,"status":"M"},{"authorDate":"2021-02-20 06:16:24","commitOrder":3,"curCode":"    public void testDoubleTermsAggregator() throws Exception {\n        BiFunction<Double, Boolean, List<IndexableField>> luceneFieldFactory = (val, mv) -> {\n            if (mv) {\n                return List.of(new SortedNumericDocValuesField(\"field\", Double.doubleToRawLongBits(val)));\n            } else {\n                return List.of(new NumericDocValuesField(\"field\", Double.doubleToRawLongBits(val)));\n            }\n        };\n        MappedFieldType fieldType\n            = new NumberFieldMapper.NumberFieldType(\"field\", NumberFieldMapper.NumberType.DOUBLE);\n        termsAggregator(ValueType.DOUBLE, fieldType, Integer::doubleValue, Double::compareTo, luceneFieldFactory);\n        termsAggregatorWithNestedMaxAgg(ValueType.DOUBLE, fieldType, Integer::doubleValue,\n            val -> new NumericDocValuesField(\"field\", Double.doubleToRawLongBits(val)));\n    }\n","date":"2021-02-20 06:16:24","endLine":658,"groupId":"58326","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testDoubleTermsAggregator","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/95/24b52f25cb65318b8da8dd394973c5f585d968.src","preCode":"    public void testDoubleTermsAggregator() throws Exception {\n        BiFunction<Double, Boolean, IndexableField> luceneFieldFactory = (val, mv) -> {\n            if (mv) {\n                return new SortedNumericDocValuesField(\"field\", Double.doubleToRawLongBits(val));\n            } else {\n                return new NumericDocValuesField(\"field\", Double.doubleToRawLongBits(val));\n            }\n        };\n        MappedFieldType fieldType\n            = new NumberFieldMapper.NumberFieldType(\"field\", NumberFieldMapper.NumberType.DOUBLE);\n        termsAggregator(ValueType.DOUBLE, fieldType, Integer::doubleValue, Double::compareTo, luceneFieldFactory);\n        termsAggregatorWithNestedMaxAgg(ValueType.DOUBLE, fieldType, Integer::doubleValue,\n            val -> new NumericDocValuesField(\"field\", Double.doubleToRawLongBits(val)));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/search/aggregations/bucket/terms/TermsAggregatorTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":645,"status":"M"}],"commitId":"f2d6c25732544c9dfaf8045f09348e71ce612aac","commitMessage":"@@@Allow terms to run as filters (#68871)\n\nThis adds yet another terms aggregator that uses `term` filters to run\nin similar speed to specialized low cardinality terms aggregator. It is\nmostly useful as a stepping stone for some additional optimizations that\nwe can make later. So it doesn't have to be faster on its own. Just not\n*slower*. And its about the same speed.\n","date":"2021-02-20 06:16:24","modifiedFileCount":"13","status":"M","submitter":"Nik Everett"},{"authorTime":"2021-03-04 07:04:47","codes":[{"authorDate":"2021-03-04 07:04:47","commitOrder":4,"curCode":"    public void testLongTermsAggregator() throws Exception {\n        BiFunction<Long, Boolean, List<IndexableField>> luceneFieldFactory = (val, mv) -> {\n            if (mv) {\n                return List.of(new SortedNumericDocValuesField(\"field\", val));\n            } else {\n                return List.of(new NumericDocValuesField(\"field\", val));\n            }\n        };\n        MappedFieldType fieldType\n            = new NumberFieldMapper.NumberFieldType(\"field\", NumberFieldMapper.NumberType.LONG);\n        termsAggregator(ValueType.LONG, fieldType, Integer::longValue, Long::compareTo, luceneFieldFactory);\n        termsAggregatorWithNestedMaxAgg(ValueType.LONG, fieldType, Integer::longValue, val -> luceneFieldFactory.apply(val, false));\n    }\n","date":"2021-03-04 07:04:47","endLine":679,"groupId":"105167","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"testLongTermsAggregator","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/90/bbbcaed1adcc5fe613505c426239ac04b7c44a.src","preCode":"    public void testLongTermsAggregator() throws Exception {\n        BiFunction<Long, Boolean, List<IndexableField>> luceneFieldFactory = (val, mv) -> {\n            if (mv) {\n                return List.of(new SortedNumericDocValuesField(\"field\", val));\n            } else {\n                return List.of(new NumericDocValuesField(\"field\", val));\n            }\n        };\n        MappedFieldType fieldType\n            = new NumberFieldMapper.NumberFieldType(\"field\", NumberFieldMapper.NumberType.LONG);\n        termsAggregator(ValueType.LONG, fieldType, Integer::longValue, Long::compareTo, luceneFieldFactory);\n        termsAggregatorWithNestedMaxAgg(ValueType.LONG, fieldType, Integer::longValue, val -> new NumericDocValuesField(\"field\", val));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/search/aggregations/bucket/terms/TermsAggregatorTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":667,"status":"M"},{"authorDate":"2021-03-04 07:04:47","commitOrder":4,"curCode":"    public void testDoubleTermsAggregator() throws Exception {\n        BiFunction<Double, Boolean, List<IndexableField>> luceneFieldFactory = (val, mv) -> {\n            if (mv) {\n                return List.of(new SortedNumericDocValuesField(\"field\", Double.doubleToRawLongBits(val)));\n            } else {\n                return List.of(new NumericDocValuesField(\"field\", Double.doubleToRawLongBits(val)));\n            }\n        };\n        MappedFieldType fieldType\n            = new NumberFieldMapper.NumberFieldType(\"field\", NumberFieldMapper.NumberType.DOUBLE);\n        termsAggregator(ValueType.DOUBLE, fieldType, Integer::doubleValue, Double::compareTo, luceneFieldFactory);\n        termsAggregatorWithNestedMaxAgg(ValueType.DOUBLE, fieldType, Integer::doubleValue,\n            val -> luceneFieldFactory.apply(val, false));\n    }\n","date":"2021-03-04 07:04:47","endLine":694,"groupId":"105167","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"testDoubleTermsAggregator","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/90/bbbcaed1adcc5fe613505c426239ac04b7c44a.src","preCode":"    public void testDoubleTermsAggregator() throws Exception {\n        BiFunction<Double, Boolean, List<IndexableField>> luceneFieldFactory = (val, mv) -> {\n            if (mv) {\n                return List.of(new SortedNumericDocValuesField(\"field\", Double.doubleToRawLongBits(val)));\n            } else {\n                return List.of(new NumericDocValuesField(\"field\", Double.doubleToRawLongBits(val)));\n            }\n        };\n        MappedFieldType fieldType\n            = new NumberFieldMapper.NumberFieldType(\"field\", NumberFieldMapper.NumberType.DOUBLE);\n        termsAggregator(ValueType.DOUBLE, fieldType, Integer::doubleValue, Double::compareTo, luceneFieldFactory);\n        termsAggregatorWithNestedMaxAgg(ValueType.DOUBLE, fieldType, Integer::doubleValue,\n            val -> new NumericDocValuesField(\"field\", Double.doubleToRawLongBits(val)));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/search/aggregations/bucket/terms/TermsAggregatorTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":681,"status":"M"}],"commitId":"10e2f90560f3ee5027fa1213968b0e13e5c0d357","commitMessage":"@@@Speed up aggs with sub-aggregations (#69806)\n\nThis allows many of the optimizations added in #63643 and #68871 to run\non aggregations with sub-aggregations. This should:\n* Speed up `terms` aggregations on fields with less than 1000 values that\n  also have sub-aggregations. Locally I see 2 second searches run in 1.2\n  seconds.\n* Applies that same speedup to `range` and `date_histogram` aggregations but\n  it feels less impressive because the point range queries are a little\n  slower to get up and go.\n* Massively speed up `filters` aggregations with sub-aggregations that\n  don't have a `parent` aggregation or collect \"other\" buckets. Also\n  save a ton of memory while collecting them.\n","date":"2021-03-04 07:04:47","modifiedFileCount":"15","status":"M","submitter":"Nik Everett"}]
