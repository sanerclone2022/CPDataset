[{"authorTime":"2018-04-26 03:22:53","codes":[{"authorDate":"2018-04-26 03:22:53","commitOrder":1,"curCode":"    public void testNumericDetectionEnabled() throws Exception {\n        String mapping = Strings.toString(XContentFactory.jsonBuilder().startObject().startObject(\"type\")\n                .field(\"numeric_detection\", true)\n                .endObject().endObject());\n\n        IndexService index = createIndex(\"test\");\n        client().admin().indices().preparePutMapping(\"test\").setType(\"type\").setSource(mapping, XContentType.JSON).get();\n        DocumentMapper defaultMapper = index.mapperService().documentMapper(\"type\");\n\n        ParsedDocument doc = defaultMapper.parse(SourceToParse.source(\"test\", \"type\", \"1\", BytesReference\n                .bytes(XContentFactory.jsonBuilder()\n                        .startObject()\n                        .field(\"s_long\", \"100\")\n                        .field(\"s_double\", \"100.0\")\n                        .endObject()),\n                XContentType.JSON));\n        assertNotNull(doc.dynamicMappingsUpdate());\n        client().admin().indices().preparePutMapping(\"test\").setType(\"type\")\n            .setSource(doc.dynamicMappingsUpdate().toString(), XContentType.JSON).get();\n\n        defaultMapper = index.mapperService().documentMapper(\"type\");\n        FieldMapper mapper = defaultMapper.mappers().smartNameFieldMapper(\"s_long\");\n        assertThat(mapper.fieldType().typeName(), equalTo(\"long\"));\n\n        mapper = defaultMapper.mappers().smartNameFieldMapper(\"s_double\");\n        assertThat(mapper.fieldType().typeName(), equalTo(\"float\"));\n    }\n","date":"2018-04-26 03:22:53","endLine":633,"groupId":"39134","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testNumericDetectionEnabled","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/30/923b5a6559b3c04973d69991a6df48107bd5e3.src","preCode":"    public void testNumericDetectionEnabled() throws Exception {\n        String mapping = Strings.toString(XContentFactory.jsonBuilder().startObject().startObject(\"type\")\n                .field(\"numeric_detection\", true)\n                .endObject().endObject());\n\n        IndexService index = createIndex(\"test\");\n        client().admin().indices().preparePutMapping(\"test\").setType(\"type\").setSource(mapping, XContentType.JSON).get();\n        DocumentMapper defaultMapper = index.mapperService().documentMapper(\"type\");\n\n        ParsedDocument doc = defaultMapper.parse(SourceToParse.source(\"test\", \"type\", \"1\", BytesReference\n                .bytes(XContentFactory.jsonBuilder()\n                        .startObject()\n                        .field(\"s_long\", \"100\")\n                        .field(\"s_double\", \"100.0\")\n                        .endObject()),\n                XContentType.JSON));\n        assertNotNull(doc.dynamicMappingsUpdate());\n        client().admin().indices().preparePutMapping(\"test\").setType(\"type\")\n            .setSource(doc.dynamicMappingsUpdate().toString(), XContentType.JSON).get();\n\n        defaultMapper = index.mapperService().documentMapper(\"type\");\n        FieldMapper mapper = defaultMapper.mappers().smartNameFieldMapper(\"s_long\");\n        assertThat(mapper.fieldType().typeName(), equalTo(\"long\"));\n\n        mapper = defaultMapper.mappers().smartNameFieldMapper(\"s_double\");\n        assertThat(mapper.fieldType().typeName(), equalTo(\"float\"));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/index/mapper/DynamicMappingTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":607,"status":"B"},{"authorDate":"2018-04-26 03:22:53","commitOrder":1,"curCode":"    public void testNumericDetectionDefault() throws Exception {\n        String mapping = Strings.toString(XContentFactory.jsonBuilder().startObject().startObject(\"type\")\n                .endObject().endObject());\n\n        IndexService index = createIndex(\"test\");\n        client().admin().indices().preparePutMapping(\"test\").setType(\"type\").setSource(mapping, XContentType.JSON).get();\n        DocumentMapper defaultMapper = index.mapperService().documentMapper(\"type\");\n\n        ParsedDocument doc = defaultMapper.parse(SourceToParse.source(\"test\", \"type\", \"1\", BytesReference\n                .bytes(XContentFactory.jsonBuilder()\n                        .startObject()\n                        .field(\"s_long\", \"100\")\n                        .field(\"s_double\", \"100.0\")\n                        .endObject()),\n                XContentType.JSON));\n        assertNotNull(doc.dynamicMappingsUpdate());\n        assertAcked(client().admin().indices().preparePutMapping(\"test\").setType(\"type\")\n            .setSource(doc.dynamicMappingsUpdate().toString(), XContentType.JSON).get());\n\n        defaultMapper = index.mapperService().documentMapper(\"type\");\n        FieldMapper mapper = defaultMapper.mappers().smartNameFieldMapper(\"s_long\");\n        assertThat(mapper, instanceOf(TextFieldMapper.class));\n\n        mapper = defaultMapper.mappers().smartNameFieldMapper(\"s_double\");\n        assertThat(mapper, instanceOf(TextFieldMapper.class));\n    }\n","date":"2018-04-26 03:22:53","endLine":660,"groupId":"19877","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testNumericDetectionDefault","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/30/923b5a6559b3c04973d69991a6df48107bd5e3.src","preCode":"    public void testNumericDetectionDefault() throws Exception {\n        String mapping = Strings.toString(XContentFactory.jsonBuilder().startObject().startObject(\"type\")\n                .endObject().endObject());\n\n        IndexService index = createIndex(\"test\");\n        client().admin().indices().preparePutMapping(\"test\").setType(\"type\").setSource(mapping, XContentType.JSON).get();\n        DocumentMapper defaultMapper = index.mapperService().documentMapper(\"type\");\n\n        ParsedDocument doc = defaultMapper.parse(SourceToParse.source(\"test\", \"type\", \"1\", BytesReference\n                .bytes(XContentFactory.jsonBuilder()\n                        .startObject()\n                        .field(\"s_long\", \"100\")\n                        .field(\"s_double\", \"100.0\")\n                        .endObject()),\n                XContentType.JSON));\n        assertNotNull(doc.dynamicMappingsUpdate());\n        assertAcked(client().admin().indices().preparePutMapping(\"test\").setType(\"type\")\n            .setSource(doc.dynamicMappingsUpdate().toString(), XContentType.JSON).get());\n\n        defaultMapper = index.mapperService().documentMapper(\"type\");\n        FieldMapper mapper = defaultMapper.mappers().smartNameFieldMapper(\"s_long\");\n        assertThat(mapper, instanceOf(TextFieldMapper.class));\n\n        mapper = defaultMapper.mappers().smartNameFieldMapper(\"s_double\");\n        assertThat(mapper, instanceOf(TextFieldMapper.class));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/index/mapper/DynamicMappingTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":635,"status":"B"}],"commitId":"d74fb9eb4559077e2d20b19a9ed62d9ff825027a","commitMessage":"@@@Opened x-pack ILM code\n","date":"2018-04-26 03:22:53","modifiedFileCount":"0","status":"B","submitter":"Tal Levy"},{"authorTime":"2018-06-11 16:47:26","codes":[{"authorDate":"2018-06-11 16:47:26","commitOrder":2,"curCode":"    public void testNumericDetectionEnabled() throws Exception {\n        String mapping = Strings.toString(XContentFactory.jsonBuilder().startObject().startObject(\"type\")\n                .field(\"numeric_detection\", true)\n                .endObject().endObject());\n\n        IndexService index = createIndex(\"test\");\n        client().admin().indices().preparePutMapping(\"test\").setType(\"type\").setSource(mapping, XContentType.JSON).get();\n        DocumentMapper defaultMapper = index.mapperService().documentMapper(\"type\");\n\n        ParsedDocument doc = defaultMapper.parse(SourceToParse.source(\"test\", \"type\", \"1\", BytesReference\n                .bytes(XContentFactory.jsonBuilder()\n                        .startObject()\n                        .field(\"s_long\", \"100\")\n                        .field(\"s_double\", \"100.0\")\n                        .endObject()),\n                XContentType.JSON));\n        assertNotNull(doc.dynamicMappingsUpdate());\n        client().admin().indices().preparePutMapping(\"test\").setType(\"type\")\n            .setSource(doc.dynamicMappingsUpdate().toString(), XContentType.JSON).get();\n\n        defaultMapper = index.mapperService().documentMapper(\"type\");\n        FieldMapper mapper = defaultMapper.mappers().getMapper(\"s_long\");\n        assertThat(mapper.fieldType().typeName(), equalTo(\"long\"));\n\n        mapper = defaultMapper.mappers().getMapper(\"s_double\");\n        assertThat(mapper.fieldType().typeName(), equalTo(\"float\"));\n    }\n","date":"2018-06-11 16:47:26","endLine":633,"groupId":"39134","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testNumericDetectionEnabled","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/0d/7dde415aaa874e8fb128a06cc0ec974ce84623.src","preCode":"    public void testNumericDetectionEnabled() throws Exception {\n        String mapping = Strings.toString(XContentFactory.jsonBuilder().startObject().startObject(\"type\")\n                .field(\"numeric_detection\", true)\n                .endObject().endObject());\n\n        IndexService index = createIndex(\"test\");\n        client().admin().indices().preparePutMapping(\"test\").setType(\"type\").setSource(mapping, XContentType.JSON).get();\n        DocumentMapper defaultMapper = index.mapperService().documentMapper(\"type\");\n\n        ParsedDocument doc = defaultMapper.parse(SourceToParse.source(\"test\", \"type\", \"1\", BytesReference\n                .bytes(XContentFactory.jsonBuilder()\n                        .startObject()\n                        .field(\"s_long\", \"100\")\n                        .field(\"s_double\", \"100.0\")\n                        .endObject()),\n                XContentType.JSON));\n        assertNotNull(doc.dynamicMappingsUpdate());\n        client().admin().indices().preparePutMapping(\"test\").setType(\"type\")\n            .setSource(doc.dynamicMappingsUpdate().toString(), XContentType.JSON).get();\n\n        defaultMapper = index.mapperService().documentMapper(\"type\");\n        FieldMapper mapper = defaultMapper.mappers().smartNameFieldMapper(\"s_long\");\n        assertThat(mapper.fieldType().typeName(), equalTo(\"long\"));\n\n        mapper = defaultMapper.mappers().smartNameFieldMapper(\"s_double\");\n        assertThat(mapper.fieldType().typeName(), equalTo(\"float\"));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/index/mapper/DynamicMappingTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":607,"status":"M"},{"authorDate":"2018-06-11 16:47:26","commitOrder":2,"curCode":"    public void testNumericDetectionDefault() throws Exception {\n        String mapping = Strings.toString(XContentFactory.jsonBuilder().startObject().startObject(\"type\")\n                .endObject().endObject());\n\n        IndexService index = createIndex(\"test\");\n        client().admin().indices().preparePutMapping(\"test\").setType(\"type\").setSource(mapping, XContentType.JSON).get();\n        DocumentMapper defaultMapper = index.mapperService().documentMapper(\"type\");\n\n        ParsedDocument doc = defaultMapper.parse(SourceToParse.source(\"test\", \"type\", \"1\", BytesReference\n                .bytes(XContentFactory.jsonBuilder()\n                        .startObject()\n                        .field(\"s_long\", \"100\")\n                        .field(\"s_double\", \"100.0\")\n                        .endObject()),\n                XContentType.JSON));\n        assertNotNull(doc.dynamicMappingsUpdate());\n        assertAcked(client().admin().indices().preparePutMapping(\"test\").setType(\"type\")\n            .setSource(doc.dynamicMappingsUpdate().toString(), XContentType.JSON).get());\n\n        defaultMapper = index.mapperService().documentMapper(\"type\");\n        FieldMapper mapper = defaultMapper.mappers().getMapper(\"s_long\");\n        assertThat(mapper, instanceOf(TextFieldMapper.class));\n\n        mapper = defaultMapper.mappers().getMapper(\"s_double\");\n        assertThat(mapper, instanceOf(TextFieldMapper.class));\n    }\n","date":"2018-06-11 16:47:26","endLine":660,"groupId":"19877","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testNumericDetectionDefault","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/0d/7dde415aaa874e8fb128a06cc0ec974ce84623.src","preCode":"    public void testNumericDetectionDefault() throws Exception {\n        String mapping = Strings.toString(XContentFactory.jsonBuilder().startObject().startObject(\"type\")\n                .endObject().endObject());\n\n        IndexService index = createIndex(\"test\");\n        client().admin().indices().preparePutMapping(\"test\").setType(\"type\").setSource(mapping, XContentType.JSON).get();\n        DocumentMapper defaultMapper = index.mapperService().documentMapper(\"type\");\n\n        ParsedDocument doc = defaultMapper.parse(SourceToParse.source(\"test\", \"type\", \"1\", BytesReference\n                .bytes(XContentFactory.jsonBuilder()\n                        .startObject()\n                        .field(\"s_long\", \"100\")\n                        .field(\"s_double\", \"100.0\")\n                        .endObject()),\n                XContentType.JSON));\n        assertNotNull(doc.dynamicMappingsUpdate());\n        assertAcked(client().admin().indices().preparePutMapping(\"test\").setType(\"type\")\n            .setSource(doc.dynamicMappingsUpdate().toString(), XContentType.JSON).get());\n\n        defaultMapper = index.mapperService().documentMapper(\"type\");\n        FieldMapper mapper = defaultMapper.mappers().smartNameFieldMapper(\"s_long\");\n        assertThat(mapper, instanceOf(TextFieldMapper.class));\n\n        mapper = defaultMapper.mappers().smartNameFieldMapper(\"s_double\");\n        assertThat(mapper, instanceOf(TextFieldMapper.class));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/index/mapper/DynamicMappingTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":635,"status":"M"}],"commitId":"9ee492a3f0768a3790671bfe46223e700082730a","commitMessage":"@@@Merge branch 'master' into index-lifecycle\n","date":"2018-06-11 16:47:26","modifiedFileCount":"192","status":"M","submitter":"Colin Goodheart-Smithe"},{"authorTime":"2018-07-19 02:10:12","codes":[{"authorDate":"2018-07-19 02:10:12","commitOrder":3,"curCode":"    public void testNumericDetectionEnabled() throws Exception {\n        String mapping = Strings.toString(XContentFactory.jsonBuilder().startObject().startObject(\"type\")\n                .field(\"numeric_detection\", true)\n                .endObject().endObject());\n\n        IndexService index = createIndex(\"test\");\n        client().admin().indices().preparePutMapping(\"test\").setType(\"type\").setSource(mapping, XContentType.JSON).get();\n        DocumentMapper defaultMapper = index.mapperService().documentMapper(\"type\");\n\n        ParsedDocument doc = defaultMapper.parse(SourceToParse.source(\"test\", \"type\", \"1\", BytesReference\n                .bytes(XContentFactory.jsonBuilder()\n                        .startObject()\n                        .field(\"s_long\", \"100\")\n                        .field(\"s_double\", \"100.0\")\n                        .endObject()),\n                XContentType.JSON));\n        assertNotNull(doc.dynamicMappingsUpdate());\n        client().admin().indices().preparePutMapping(\"test\").setType(\"type\")\n            .setSource(doc.dynamicMappingsUpdate().toString(), XContentType.JSON).get();\n\n        defaultMapper = index.mapperService().documentMapper(\"type\");\n        Mapper mapper = defaultMapper.mappers().getMapper(\"s_long\");\n        assertThat(mapper.typeName(), equalTo(\"long\"));\n\n        mapper = defaultMapper.mappers().getMapper(\"s_double\");\n        assertThat(mapper.typeName(), equalTo(\"float\"));\n    }\n","date":"2018-07-19 02:10:12","endLine":633,"groupId":"39134","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testNumericDetectionEnabled","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/7d/022b5545443e253502e195bc04eb3c98e483a8.src","preCode":"    public void testNumericDetectionEnabled() throws Exception {\n        String mapping = Strings.toString(XContentFactory.jsonBuilder().startObject().startObject(\"type\")\n                .field(\"numeric_detection\", true)\n                .endObject().endObject());\n\n        IndexService index = createIndex(\"test\");\n        client().admin().indices().preparePutMapping(\"test\").setType(\"type\").setSource(mapping, XContentType.JSON).get();\n        DocumentMapper defaultMapper = index.mapperService().documentMapper(\"type\");\n\n        ParsedDocument doc = defaultMapper.parse(SourceToParse.source(\"test\", \"type\", \"1\", BytesReference\n                .bytes(XContentFactory.jsonBuilder()\n                        .startObject()\n                        .field(\"s_long\", \"100\")\n                        .field(\"s_double\", \"100.0\")\n                        .endObject()),\n                XContentType.JSON));\n        assertNotNull(doc.dynamicMappingsUpdate());\n        client().admin().indices().preparePutMapping(\"test\").setType(\"type\")\n            .setSource(doc.dynamicMappingsUpdate().toString(), XContentType.JSON).get();\n\n        defaultMapper = index.mapperService().documentMapper(\"type\");\n        FieldMapper mapper = defaultMapper.mappers().getMapper(\"s_long\");\n        assertThat(mapper.fieldType().typeName(), equalTo(\"long\"));\n\n        mapper = defaultMapper.mappers().getMapper(\"s_double\");\n        assertThat(mapper.fieldType().typeName(), equalTo(\"float\"));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/index/mapper/DynamicMappingTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":607,"status":"M"},{"authorDate":"2018-07-19 02:10:12","commitOrder":3,"curCode":"    public void testNumericDetectionDefault() throws Exception {\n        String mapping = Strings.toString(XContentFactory.jsonBuilder().startObject().startObject(\"type\")\n                .endObject().endObject());\n\n        IndexService index = createIndex(\"test\");\n        client().admin().indices().preparePutMapping(\"test\").setType(\"type\").setSource(mapping, XContentType.JSON).get();\n        DocumentMapper defaultMapper = index.mapperService().documentMapper(\"type\");\n\n        ParsedDocument doc = defaultMapper.parse(SourceToParse.source(\"test\", \"type\", \"1\", BytesReference\n                .bytes(XContentFactory.jsonBuilder()\n                        .startObject()\n                        .field(\"s_long\", \"100\")\n                        .field(\"s_double\", \"100.0\")\n                        .endObject()),\n                XContentType.JSON));\n        assertNotNull(doc.dynamicMappingsUpdate());\n        assertAcked(client().admin().indices().preparePutMapping(\"test\").setType(\"type\")\n            .setSource(doc.dynamicMappingsUpdate().toString(), XContentType.JSON).get());\n\n        defaultMapper = index.mapperService().documentMapper(\"type\");\n        Mapper mapper = defaultMapper.mappers().getMapper(\"s_long\");\n        assertThat(mapper, instanceOf(TextFieldMapper.class));\n\n        mapper = defaultMapper.mappers().getMapper(\"s_double\");\n        assertThat(mapper, instanceOf(TextFieldMapper.class));\n    }\n","date":"2018-07-19 02:10:12","endLine":660,"groupId":"19877","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testNumericDetectionDefault","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/7d/022b5545443e253502e195bc04eb3c98e483a8.src","preCode":"    public void testNumericDetectionDefault() throws Exception {\n        String mapping = Strings.toString(XContentFactory.jsonBuilder().startObject().startObject(\"type\")\n                .endObject().endObject());\n\n        IndexService index = createIndex(\"test\");\n        client().admin().indices().preparePutMapping(\"test\").setType(\"type\").setSource(mapping, XContentType.JSON).get();\n        DocumentMapper defaultMapper = index.mapperService().documentMapper(\"type\");\n\n        ParsedDocument doc = defaultMapper.parse(SourceToParse.source(\"test\", \"type\", \"1\", BytesReference\n                .bytes(XContentFactory.jsonBuilder()\n                        .startObject()\n                        .field(\"s_long\", \"100\")\n                        .field(\"s_double\", \"100.0\")\n                        .endObject()),\n                XContentType.JSON));\n        assertNotNull(doc.dynamicMappingsUpdate());\n        assertAcked(client().admin().indices().preparePutMapping(\"test\").setType(\"type\")\n            .setSource(doc.dynamicMappingsUpdate().toString(), XContentType.JSON).get());\n\n        defaultMapper = index.mapperService().documentMapper(\"type\");\n        FieldMapper mapper = defaultMapper.mappers().getMapper(\"s_long\");\n        assertThat(mapper, instanceOf(TextFieldMapper.class));\n\n        mapper = defaultMapper.mappers().getMapper(\"s_double\");\n        assertThat(mapper, instanceOf(TextFieldMapper.class));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/index/mapper/DynamicMappingTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":635,"status":"M"}],"commitId":"a019e723b5475f0ca77063dab45fbcccd1d6559a","commitMessage":"@@@Merge branch 'master' into index-lifecycle\n","date":"2018-07-19 02:10:12","modifiedFileCount":"121","status":"M","submitter":"Tal Levy"},{"authorTime":"2018-12-25 03:06:50","codes":[{"authorDate":"2018-12-25 03:06:50","commitOrder":4,"curCode":"    public void testNumericDetectionEnabled() throws Exception {\n        String mapping = Strings.toString(XContentFactory.jsonBuilder().startObject().startObject(\"type\")\n                .field(\"numeric_detection\", true)\n                .endObject().endObject());\n\n        IndexService index = createIndex(\"test\");\n        client().admin().indices().preparePutMapping(\"test\").setType(\"type\").setSource(mapping, XContentType.JSON).get();\n        DocumentMapper defaultMapper = index.mapperService().documentMapper(\"type\");\n\n        ParsedDocument doc = defaultMapper.parse(new SourceToParse(\"test\", \"type\", \"1\", BytesReference\n                .bytes(XContentFactory.jsonBuilder()\n                        .startObject()\n                        .field(\"s_long\", \"100\")\n                        .field(\"s_double\", \"100.0\")\n                        .endObject()),\n                XContentType.JSON));\n        assertNotNull(doc.dynamicMappingsUpdate());\n        client().admin().indices().preparePutMapping(\"test\").setType(\"type\")\n            .setSource(doc.dynamicMappingsUpdate().toString(), XContentType.JSON).get();\n\n        defaultMapper = index.mapperService().documentMapper(\"type\");\n        Mapper mapper = defaultMapper.mappers().getMapper(\"s_long\");\n        assertThat(mapper.typeName(), equalTo(\"long\"));\n\n        mapper = defaultMapper.mappers().getMapper(\"s_double\");\n        assertThat(mapper.typeName(), equalTo(\"float\"));\n    }\n","date":"2018-12-25 03:06:50","endLine":635,"groupId":"50018","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"testNumericDetectionEnabled","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/56/e6f5e4c6b04c431ec6406ba1e2b1d33672b8b2.src","preCode":"    public void testNumericDetectionEnabled() throws Exception {\n        String mapping = Strings.toString(XContentFactory.jsonBuilder().startObject().startObject(\"type\")\n                .field(\"numeric_detection\", true)\n                .endObject().endObject());\n\n        IndexService index = createIndex(\"test\");\n        client().admin().indices().preparePutMapping(\"test\").setType(\"type\").setSource(mapping, XContentType.JSON).get();\n        DocumentMapper defaultMapper = index.mapperService().documentMapper(\"type\");\n\n        ParsedDocument doc = defaultMapper.parse(SourceToParse.source(\"test\", \"type\", \"1\", BytesReference\n                .bytes(XContentFactory.jsonBuilder()\n                        .startObject()\n                        .field(\"s_long\", \"100\")\n                        .field(\"s_double\", \"100.0\")\n                        .endObject()),\n                XContentType.JSON));\n        assertNotNull(doc.dynamicMappingsUpdate());\n        client().admin().indices().preparePutMapping(\"test\").setType(\"type\")\n            .setSource(doc.dynamicMappingsUpdate().toString(), XContentType.JSON).get();\n\n        defaultMapper = index.mapperService().documentMapper(\"type\");\n        Mapper mapper = defaultMapper.mappers().getMapper(\"s_long\");\n        assertThat(mapper.typeName(), equalTo(\"long\"));\n\n        mapper = defaultMapper.mappers().getMapper(\"s_double\");\n        assertThat(mapper.typeName(), equalTo(\"float\"));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/index/mapper/DynamicMappingTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":609,"status":"M"},{"authorDate":"2018-12-25 03:06:50","commitOrder":4,"curCode":"    public void testNumericDetectionDefault() throws Exception {\n        String mapping = Strings.toString(XContentFactory.jsonBuilder().startObject().startObject(\"type\")\n                .endObject().endObject());\n\n        IndexService index = createIndex(\"test\");\n        client().admin().indices().preparePutMapping(\"test\").setType(\"type\").setSource(mapping, XContentType.JSON).get();\n        DocumentMapper defaultMapper = index.mapperService().documentMapper(\"type\");\n\n        ParsedDocument doc = defaultMapper.parse(new SourceToParse(\"test\", \"type\", \"1\", BytesReference\n                .bytes(XContentFactory.jsonBuilder()\n                        .startObject()\n                        .field(\"s_long\", \"100\")\n                        .field(\"s_double\", \"100.0\")\n                        .endObject()),\n                XContentType.JSON));\n        assertNotNull(doc.dynamicMappingsUpdate());\n        assertAcked(client().admin().indices().preparePutMapping(\"test\").setType(\"type\")\n            .setSource(doc.dynamicMappingsUpdate().toString(), XContentType.JSON).get());\n\n        defaultMapper = index.mapperService().documentMapper(\"type\");\n        Mapper mapper = defaultMapper.mappers().getMapper(\"s_long\");\n        assertThat(mapper, instanceOf(TextFieldMapper.class));\n\n        mapper = defaultMapper.mappers().getMapper(\"s_double\");\n        assertThat(mapper, instanceOf(TextFieldMapper.class));\n    }\n","date":"2018-12-25 03:06:50","endLine":662,"groupId":"16389","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"testNumericDetectionDefault","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/56/e6f5e4c6b04c431ec6406ba1e2b1d33672b8b2.src","preCode":"    public void testNumericDetectionDefault() throws Exception {\n        String mapping = Strings.toString(XContentFactory.jsonBuilder().startObject().startObject(\"type\")\n                .endObject().endObject());\n\n        IndexService index = createIndex(\"test\");\n        client().admin().indices().preparePutMapping(\"test\").setType(\"type\").setSource(mapping, XContentType.JSON).get();\n        DocumentMapper defaultMapper = index.mapperService().documentMapper(\"type\");\n\n        ParsedDocument doc = defaultMapper.parse(SourceToParse.source(\"test\", \"type\", \"1\", BytesReference\n                .bytes(XContentFactory.jsonBuilder()\n                        .startObject()\n                        .field(\"s_long\", \"100\")\n                        .field(\"s_double\", \"100.0\")\n                        .endObject()),\n                XContentType.JSON));\n        assertNotNull(doc.dynamicMappingsUpdate());\n        assertAcked(client().admin().indices().preparePutMapping(\"test\").setType(\"type\")\n            .setSource(doc.dynamicMappingsUpdate().toString(), XContentType.JSON).get());\n\n        defaultMapper = index.mapperService().documentMapper(\"type\");\n        Mapper mapper = defaultMapper.mappers().getMapper(\"s_long\");\n        assertThat(mapper, instanceOf(TextFieldMapper.class));\n\n        mapper = defaultMapper.mappers().getMapper(\"s_double\");\n        assertThat(mapper, instanceOf(TextFieldMapper.class));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/index/mapper/DynamicMappingTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":637,"status":"M"}],"commitId":"7580d9d925d864b25466d693637b3bd3092d44cf","commitMessage":"@@@Make SourceToParse immutable (#36971)\n\nToday the routing of a SourceToParse is assigned in a separate step\nafter the object is created. We can easily forget to set the routing.\nWith this commit.  the routing must be provided in the constructor of\nSourceToParse.\n\nRelates #36921","date":"2018-12-25 03:06:50","modifiedFileCount":"66","status":"M","submitter":"Nhat Nguyen"},{"authorTime":"2019-10-15 16:05:29","codes":[{"authorDate":"2019-10-15 16:05:29","commitOrder":5,"curCode":"    public void testNumericDetectionEnabled() throws Exception {\n        String mapping = Strings.toString(XContentFactory.jsonBuilder().startObject().startObject(\"type\")\n                .field(\"numeric_detection\", true)\n                .endObject().endObject());\n\n        IndexService index = createIndex(\"test\");\n        client().admin().indices().preparePutMapping(\"test\").setType(\"type\").setSource(mapping, XContentType.JSON).get();\n        DocumentMapper defaultMapper = index.mapperService().documentMapper(\"type\");\n\n        ParsedDocument doc = defaultMapper.parse(new SourceToParse(\"test\", \"1\", BytesReference\n                .bytes(XContentFactory.jsonBuilder()\n                        .startObject()\n                        .field(\"s_long\", \"100\")\n                        .field(\"s_double\", \"100.0\")\n                        .endObject()),\n                XContentType.JSON));\n        assertNotNull(doc.dynamicMappingsUpdate());\n        client().admin().indices().preparePutMapping(\"test\").setType(\"type\")\n            .setSource(doc.dynamicMappingsUpdate().toString(), XContentType.JSON).get();\n\n        defaultMapper = index.mapperService().documentMapper(\"type\");\n        Mapper mapper = defaultMapper.mappers().getMapper(\"s_long\");\n        assertThat(mapper.typeName(), equalTo(\"long\"));\n\n        mapper = defaultMapper.mappers().getMapper(\"s_double\");\n        assertThat(mapper.typeName(), equalTo(\"float\"));\n    }\n","date":"2019-10-15 16:05:29","endLine":636,"groupId":"50018","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"testNumericDetectionEnabled","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/f5/1f2be635808f44100e5d3c31c35a0e42e68dc7.src","preCode":"    public void testNumericDetectionEnabled() throws Exception {\n        String mapping = Strings.toString(XContentFactory.jsonBuilder().startObject().startObject(\"type\")\n                .field(\"numeric_detection\", true)\n                .endObject().endObject());\n\n        IndexService index = createIndex(\"test\");\n        client().admin().indices().preparePutMapping(\"test\").setType(\"type\").setSource(mapping, XContentType.JSON).get();\n        DocumentMapper defaultMapper = index.mapperService().documentMapper(\"type\");\n\n        ParsedDocument doc = defaultMapper.parse(new SourceToParse(\"test\", \"type\", \"1\", BytesReference\n                .bytes(XContentFactory.jsonBuilder()\n                        .startObject()\n                        .field(\"s_long\", \"100\")\n                        .field(\"s_double\", \"100.0\")\n                        .endObject()),\n                XContentType.JSON));\n        assertNotNull(doc.dynamicMappingsUpdate());\n        client().admin().indices().preparePutMapping(\"test\").setType(\"type\")\n            .setSource(doc.dynamicMappingsUpdate().toString(), XContentType.JSON).get();\n\n        defaultMapper = index.mapperService().documentMapper(\"type\");\n        Mapper mapper = defaultMapper.mappers().getMapper(\"s_long\");\n        assertThat(mapper.typeName(), equalTo(\"long\"));\n\n        mapper = defaultMapper.mappers().getMapper(\"s_double\");\n        assertThat(mapper.typeName(), equalTo(\"float\"));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/index/mapper/DynamicMappingTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":610,"status":"M"},{"authorDate":"2019-10-15 16:05:29","commitOrder":5,"curCode":"    public void testNumericDetectionDefault() throws Exception {\n        String mapping = Strings.toString(XContentFactory.jsonBuilder().startObject().startObject(\"type\")\n                .endObject().endObject());\n\n        IndexService index = createIndex(\"test\");\n        client().admin().indices().preparePutMapping(\"test\").setType(\"type\").setSource(mapping, XContentType.JSON).get();\n        DocumentMapper defaultMapper = index.mapperService().documentMapper(\"type\");\n\n        ParsedDocument doc = defaultMapper.parse(new SourceToParse(\"test\", \"1\", BytesReference\n                .bytes(XContentFactory.jsonBuilder()\n                        .startObject()\n                        .field(\"s_long\", \"100\")\n                        .field(\"s_double\", \"100.0\")\n                        .endObject()),\n                XContentType.JSON));\n        assertNotNull(doc.dynamicMappingsUpdate());\n        assertAcked(client().admin().indices().preparePutMapping(\"test\").setType(\"type\")\n            .setSource(doc.dynamicMappingsUpdate().toString(), XContentType.JSON).get());\n\n        defaultMapper = index.mapperService().documentMapper(\"type\");\n        Mapper mapper = defaultMapper.mappers().getMapper(\"s_long\");\n        assertThat(mapper, instanceOf(TextFieldMapper.class));\n\n        mapper = defaultMapper.mappers().getMapper(\"s_double\");\n        assertThat(mapper, instanceOf(TextFieldMapper.class));\n    }\n","date":"2019-10-15 16:05:29","endLine":663,"groupId":"33828","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"testNumericDetectionDefault","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/f5/1f2be635808f44100e5d3c31c35a0e42e68dc7.src","preCode":"    public void testNumericDetectionDefault() throws Exception {\n        String mapping = Strings.toString(XContentFactory.jsonBuilder().startObject().startObject(\"type\")\n                .endObject().endObject());\n\n        IndexService index = createIndex(\"test\");\n        client().admin().indices().preparePutMapping(\"test\").setType(\"type\").setSource(mapping, XContentType.JSON).get();\n        DocumentMapper defaultMapper = index.mapperService().documentMapper(\"type\");\n\n        ParsedDocument doc = defaultMapper.parse(new SourceToParse(\"test\", \"type\", \"1\", BytesReference\n                .bytes(XContentFactory.jsonBuilder()\n                        .startObject()\n                        .field(\"s_long\", \"100\")\n                        .field(\"s_double\", \"100.0\")\n                        .endObject()),\n                XContentType.JSON));\n        assertNotNull(doc.dynamicMappingsUpdate());\n        assertAcked(client().admin().indices().preparePutMapping(\"test\").setType(\"type\")\n            .setSource(doc.dynamicMappingsUpdate().toString(), XContentType.JSON).get());\n\n        defaultMapper = index.mapperService().documentMapper(\"type\");\n        Mapper mapper = defaultMapper.mappers().getMapper(\"s_long\");\n        assertThat(mapper, instanceOf(TextFieldMapper.class));\n\n        mapper = defaultMapper.mappers().getMapper(\"s_double\");\n        assertThat(mapper, instanceOf(TextFieldMapper.class));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/index/mapper/DynamicMappingTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":638,"status":"M"}],"commitId":"6531369f11d159896957b75a7eae0b7da214d01a","commitMessage":"@@@Don't persist type information to translog (#47229)\n\nWe no longer need to store type information in the translog.  given that an index\ncan only have a single type.\n\nRelates to #41059","date":"2019-10-15 16:05:29","modifiedFileCount":"100","status":"M","submitter":"Alan Woodward"},{"authorTime":"2019-10-30 17:50:23","codes":[{"authorDate":"2019-10-30 17:50:23","commitOrder":6,"curCode":"    public void testNumericDetectionEnabled() throws Exception {\n        String mapping = Strings.toString(XContentFactory.jsonBuilder().startObject().startObject(\"type\")\n                .field(\"numeric_detection\", true)\n                .endObject().endObject());\n\n        IndexService index = createIndex(\"test\");\n        client().admin().indices().preparePutMapping(\"test\").setType(\"type\").setSource(mapping, XContentType.JSON).get();\n        DocumentMapper defaultMapper = index.mapperService().documentMapper();\n\n        ParsedDocument doc = defaultMapper.parse(new SourceToParse(\"test\", \"1\", BytesReference\n                .bytes(XContentFactory.jsonBuilder()\n                        .startObject()\n                        .field(\"s_long\", \"100\")\n                        .field(\"s_double\", \"100.0\")\n                        .endObject()),\n                XContentType.JSON));\n        assertNotNull(doc.dynamicMappingsUpdate());\n        client().admin().indices().preparePutMapping(\"test\").setType(\"type\")\n            .setSource(doc.dynamicMappingsUpdate().toString(), XContentType.JSON).get();\n\n        defaultMapper = index.mapperService().documentMapper();\n        Mapper mapper = defaultMapper.mappers().getMapper(\"s_long\");\n        assertThat(mapper.typeName(), equalTo(\"long\"));\n\n        mapper = defaultMapper.mappers().getMapper(\"s_double\");\n        assertThat(mapper.typeName(), equalTo(\"float\"));\n    }\n","date":"2019-10-30 17:50:23","endLine":566,"groupId":"50018","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"testNumericDetectionEnabled","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/92/8e6932eb02112f8abfc90fa904697fea0222ee.src","preCode":"    public void testNumericDetectionEnabled() throws Exception {\n        String mapping = Strings.toString(XContentFactory.jsonBuilder().startObject().startObject(\"type\")\n                .field(\"numeric_detection\", true)\n                .endObject().endObject());\n\n        IndexService index = createIndex(\"test\");\n        client().admin().indices().preparePutMapping(\"test\").setType(\"type\").setSource(mapping, XContentType.JSON).get();\n        DocumentMapper defaultMapper = index.mapperService().documentMapper(\"type\");\n\n        ParsedDocument doc = defaultMapper.parse(new SourceToParse(\"test\", \"1\", BytesReference\n                .bytes(XContentFactory.jsonBuilder()\n                        .startObject()\n                        .field(\"s_long\", \"100\")\n                        .field(\"s_double\", \"100.0\")\n                        .endObject()),\n                XContentType.JSON));\n        assertNotNull(doc.dynamicMappingsUpdate());\n        client().admin().indices().preparePutMapping(\"test\").setType(\"type\")\n            .setSource(doc.dynamicMappingsUpdate().toString(), XContentType.JSON).get();\n\n        defaultMapper = index.mapperService().documentMapper(\"type\");\n        Mapper mapper = defaultMapper.mappers().getMapper(\"s_long\");\n        assertThat(mapper.typeName(), equalTo(\"long\"));\n\n        mapper = defaultMapper.mappers().getMapper(\"s_double\");\n        assertThat(mapper.typeName(), equalTo(\"float\"));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/index/mapper/DynamicMappingTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":540,"status":"M"},{"authorDate":"2019-10-30 17:50:23","commitOrder":6,"curCode":"    public void testNumericDetectionDefault() throws Exception {\n        String mapping = Strings.toString(XContentFactory.jsonBuilder().startObject().startObject(\"type\")\n                .endObject().endObject());\n\n        IndexService index = createIndex(\"test\");\n        client().admin().indices().preparePutMapping(\"test\").setType(\"type\").setSource(mapping, XContentType.JSON).get();\n        DocumentMapper defaultMapper = index.mapperService().documentMapper();\n\n        ParsedDocument doc = defaultMapper.parse(new SourceToParse(\"test\", \"1\", BytesReference\n                .bytes(XContentFactory.jsonBuilder()\n                        .startObject()\n                        .field(\"s_long\", \"100\")\n                        .field(\"s_double\", \"100.0\")\n                        .endObject()),\n                XContentType.JSON));\n        assertNotNull(doc.dynamicMappingsUpdate());\n        assertAcked(client().admin().indices().preparePutMapping(\"test\").setType(\"type\")\n            .setSource(doc.dynamicMappingsUpdate().toString(), XContentType.JSON).get());\n\n        defaultMapper = index.mapperService().documentMapper();\n        Mapper mapper = defaultMapper.mappers().getMapper(\"s_long\");\n        assertThat(mapper, instanceOf(TextFieldMapper.class));\n\n        mapper = defaultMapper.mappers().getMapper(\"s_double\");\n        assertThat(mapper, instanceOf(TextFieldMapper.class));\n    }\n","date":"2019-10-30 17:50:23","endLine":593,"groupId":"0","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"testNumericDetectionDefault","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/92/8e6932eb02112f8abfc90fa904697fea0222ee.src","preCode":"    public void testNumericDetectionDefault() throws Exception {\n        String mapping = Strings.toString(XContentFactory.jsonBuilder().startObject().startObject(\"type\")\n                .endObject().endObject());\n\n        IndexService index = createIndex(\"test\");\n        client().admin().indices().preparePutMapping(\"test\").setType(\"type\").setSource(mapping, XContentType.JSON).get();\n        DocumentMapper defaultMapper = index.mapperService().documentMapper(\"type\");\n\n        ParsedDocument doc = defaultMapper.parse(new SourceToParse(\"test\", \"1\", BytesReference\n                .bytes(XContentFactory.jsonBuilder()\n                        .startObject()\n                        .field(\"s_long\", \"100\")\n                        .field(\"s_double\", \"100.0\")\n                        .endObject()),\n                XContentType.JSON));\n        assertNotNull(doc.dynamicMappingsUpdate());\n        assertAcked(client().admin().indices().preparePutMapping(\"test\").setType(\"type\")\n            .setSource(doc.dynamicMappingsUpdate().toString(), XContentType.JSON).get());\n\n        defaultMapper = index.mapperService().documentMapper(\"type\");\n        Mapper mapper = defaultMapper.mappers().getMapper(\"s_long\");\n        assertThat(mapper, instanceOf(TextFieldMapper.class));\n\n        mapper = defaultMapper.mappers().getMapper(\"s_double\");\n        assertThat(mapper, instanceOf(TextFieldMapper.class));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/index/mapper/DynamicMappingTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":568,"status":"M"}],"commitId":"dbd33f776436c3267a4f0886fbfe168f7f856edd","commitMessage":"@@@Remove type parameter from MapperService.documentMapper() (#48593)\n\nWe only have a single mapper per MapperService now anyway.  so the extra\ntype parameter is surplus to requirements.\n\nRelates to #41059\n","date":"2019-10-30 17:50:23","modifiedFileCount":"24","status":"M","submitter":"Alan Woodward"},{"authorTime":"2019-11-14 21:20:39","codes":[{"authorDate":"2019-11-14 21:20:39","commitOrder":7,"curCode":"    public void testNumericDetectionEnabled() throws Exception {\n        String mapping = Strings.toString(XContentFactory.jsonBuilder().startObject().startObject(\"_doc\")\n                .field(\"numeric_detection\", true)\n                .endObject().endObject());\n\n        IndexService index = createIndex(\"test\");\n        client().admin().indices().preparePutMapping(\"test\").setSource(mapping, XContentType.JSON).get();\n        DocumentMapper defaultMapper = index.mapperService().documentMapper();\n\n        ParsedDocument doc = defaultMapper.parse(new SourceToParse(\"test\", \"1\", BytesReference\n                .bytes(XContentFactory.jsonBuilder()\n                        .startObject()\n                        .field(\"s_long\", \"100\")\n                        .field(\"s_double\", \"100.0\")\n                        .endObject()),\n                XContentType.JSON));\n        assertNotNull(doc.dynamicMappingsUpdate());\n        client().admin().indices().preparePutMapping(\"test\")\n            .setSource(doc.dynamicMappingsUpdate().toString(), XContentType.JSON).get();\n\n        defaultMapper = index.mapperService().documentMapper();\n        Mapper mapper = defaultMapper.mappers().getMapper(\"s_long\");\n        assertThat(mapper.typeName(), equalTo(\"long\"));\n\n        mapper = defaultMapper.mappers().getMapper(\"s_double\");\n        assertThat(mapper.typeName(), equalTo(\"float\"));\n    }\n","date":"2019-11-14 21:20:39","endLine":566,"groupId":"61585","id":13,"instanceNumber":1,"isCurCommit":0,"methodName":"testNumericDetectionEnabled","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/ca/194be00531dbcd4ed09b8b35fc7ada84434695.src","preCode":"    public void testNumericDetectionEnabled() throws Exception {\n        String mapping = Strings.toString(XContentFactory.jsonBuilder().startObject().startObject(\"type\")\n                .field(\"numeric_detection\", true)\n                .endObject().endObject());\n\n        IndexService index = createIndex(\"test\");\n        client().admin().indices().preparePutMapping(\"test\").setType(\"type\").setSource(mapping, XContentType.JSON).get();\n        DocumentMapper defaultMapper = index.mapperService().documentMapper();\n\n        ParsedDocument doc = defaultMapper.parse(new SourceToParse(\"test\", \"1\", BytesReference\n                .bytes(XContentFactory.jsonBuilder()\n                        .startObject()\n                        .field(\"s_long\", \"100\")\n                        .field(\"s_double\", \"100.0\")\n                        .endObject()),\n                XContentType.JSON));\n        assertNotNull(doc.dynamicMappingsUpdate());\n        client().admin().indices().preparePutMapping(\"test\").setType(\"type\")\n            .setSource(doc.dynamicMappingsUpdate().toString(), XContentType.JSON).get();\n\n        defaultMapper = index.mapperService().documentMapper();\n        Mapper mapper = defaultMapper.mappers().getMapper(\"s_long\");\n        assertThat(mapper.typeName(), equalTo(\"long\"));\n\n        mapper = defaultMapper.mappers().getMapper(\"s_double\");\n        assertThat(mapper.typeName(), equalTo(\"float\"));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/index/mapper/DynamicMappingTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":540,"status":"M"},{"authorDate":"2019-11-14 21:20:39","commitOrder":7,"curCode":"    public void testNumericDetectionDefault() throws Exception {\n        String mapping = Strings.toString(XContentFactory.jsonBuilder().startObject().startObject(\"_doc\")\n                .endObject().endObject());\n\n        IndexService index = createIndex(\"test\");\n        client().admin().indices().preparePutMapping(\"test\").setSource(mapping, XContentType.JSON).get();\n        DocumentMapper defaultMapper = index.mapperService().documentMapper();\n\n        ParsedDocument doc = defaultMapper.parse(new SourceToParse(\"test\", \"1\", BytesReference\n                .bytes(XContentFactory.jsonBuilder()\n                        .startObject()\n                        .field(\"s_long\", \"100\")\n                        .field(\"s_double\", \"100.0\")\n                        .endObject()),\n                XContentType.JSON));\n        assertNotNull(doc.dynamicMappingsUpdate());\n        assertAcked(client().admin().indices().preparePutMapping(\"test\")\n            .setSource(doc.dynamicMappingsUpdate().toString(), XContentType.JSON).get());\n\n        defaultMapper = index.mapperService().documentMapper();\n        Mapper mapper = defaultMapper.mappers().getMapper(\"s_long\");\n        assertThat(mapper, instanceOf(TextFieldMapper.class));\n\n        mapper = defaultMapper.mappers().getMapper(\"s_double\");\n        assertThat(mapper, instanceOf(TextFieldMapper.class));\n    }\n","date":"2019-11-14 21:20:39","endLine":593,"groupId":"33705","id":14,"instanceNumber":2,"isCurCommit":0,"methodName":"testNumericDetectionDefault","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/ca/194be00531dbcd4ed09b8b35fc7ada84434695.src","preCode":"    public void testNumericDetectionDefault() throws Exception {\n        String mapping = Strings.toString(XContentFactory.jsonBuilder().startObject().startObject(\"type\")\n                .endObject().endObject());\n\n        IndexService index = createIndex(\"test\");\n        client().admin().indices().preparePutMapping(\"test\").setType(\"type\").setSource(mapping, XContentType.JSON).get();\n        DocumentMapper defaultMapper = index.mapperService().documentMapper();\n\n        ParsedDocument doc = defaultMapper.parse(new SourceToParse(\"test\", \"1\", BytesReference\n                .bytes(XContentFactory.jsonBuilder()\n                        .startObject()\n                        .field(\"s_long\", \"100\")\n                        .field(\"s_double\", \"100.0\")\n                        .endObject()),\n                XContentType.JSON));\n        assertNotNull(doc.dynamicMappingsUpdate());\n        assertAcked(client().admin().indices().preparePutMapping(\"test\").setType(\"type\")\n            .setSource(doc.dynamicMappingsUpdate().toString(), XContentType.JSON).get());\n\n        defaultMapper = index.mapperService().documentMapper();\n        Mapper mapper = defaultMapper.mappers().getMapper(\"s_long\");\n        assertThat(mapper, instanceOf(TextFieldMapper.class));\n\n        mapper = defaultMapper.mappers().getMapper(\"s_double\");\n        assertThat(mapper, instanceOf(TextFieldMapper.class));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/index/mapper/DynamicMappingTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":568,"status":"M"}],"commitId":"c1c7fa5d9c8f8423c848e196682273828bf50b3e","commitMessage":"@@@Remove type field from internal PutMappingRequest (#48793)\n\nExternal API requests can no longer include types.  so we have no need to pass this\ninformation along in internal PutMappingClusterStateUpdateRequest objects.  or on\nPutMappingRequests used by the internal node client.\n\nRelates to #41059","date":"2019-11-14 21:20:39","modifiedFileCount":"66","status":"M","submitter":"Alan Woodward"},{"authorTime":"2020-09-14 22:32:35","codes":[{"authorDate":"2020-09-14 22:32:35","commitOrder":8,"curCode":"    public void testNumericDetectionEnabled() throws Exception {\n        MapperService mapperService = createMapperService(topMapping(b -> b.field(\"numeric_detection\", true)));\n\n        ParsedDocument doc = mapperService.documentMapper().parse(source(b -> {\n            b.field(\"s_long\", \"100\");\n            b.field(\"s_double\", \"100.0\");\n        }));\n        assertNotNull(doc.dynamicMappingsUpdate());\n        merge(mapperService, dynamicMapping(doc.dynamicMappingsUpdate()));\n\n        Mapper mapper = mapperService.documentMapper().mappers().getMapper(\"s_long\");\n        assertThat(mapper.typeName(), equalTo(\"long\"));\n\n        mapper = mapperService.documentMapper().mappers().getMapper(\"s_double\");\n        assertThat(mapper.typeName(), equalTo(\"float\"));\n    }\n","date":"2020-09-14 22:32:35","endLine":372,"groupId":"103088","id":15,"instanceNumber":1,"isCurCommit":0,"methodName":"testNumericDetectionEnabled","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/de/8bb034b500089a09b97bf03fc2360a32029655.src","preCode":"    public void testNumericDetectionEnabled() throws Exception {\n        String mapping = Strings.toString(XContentFactory.jsonBuilder().startObject().startObject(\"_doc\")\n                .field(\"numeric_detection\", true)\n                .endObject().endObject());\n\n        IndexService index = createIndex(\"test\");\n        client().admin().indices().preparePutMapping(\"test\").setSource(mapping, XContentType.JSON).get();\n        DocumentMapper defaultMapper = index.mapperService().documentMapper();\n\n        ParsedDocument doc = defaultMapper.parse(new SourceToParse(\"test\", \"1\", BytesReference\n                .bytes(XContentFactory.jsonBuilder()\n                        .startObject()\n                        .field(\"s_long\", \"100\")\n                        .field(\"s_double\", \"100.0\")\n                        .endObject()),\n                XContentType.JSON));\n        assertNotNull(doc.dynamicMappingsUpdate());\n        client().admin().indices().preparePutMapping(\"test\")\n            .setSource(doc.dynamicMappingsUpdate().toString(), XContentType.JSON).get();\n\n        defaultMapper = index.mapperService().documentMapper();\n        Mapper mapper = defaultMapper.mappers().getMapper(\"s_long\");\n        assertThat(mapper.typeName(), equalTo(\"long\"));\n\n        mapper = defaultMapper.mappers().getMapper(\"s_double\");\n        assertThat(mapper.typeName(), equalTo(\"float\"));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/index/mapper/DynamicMappingTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":357,"status":"M"},{"authorDate":"2020-09-14 22:32:35","commitOrder":8,"curCode":"    public void testNumericDetectionDefault() throws Exception {\n\n        MapperService mapperService = createMapperService(mapping(b -> {}));\n\n        ParsedDocument doc = mapperService.documentMapper().parse(source(b -> {\n            b.field(\"s_long\", \"100\");\n            b.field(\"s_double\", \"100.0\");\n        }));\n        assertNotNull(doc.dynamicMappingsUpdate());\n        merge(mapperService, dynamicMapping(doc.dynamicMappingsUpdate()));\n\n        Mapper mapper = mapperService.documentMapper().mappers().getMapper(\"s_long\");\n        assertThat(mapper, instanceOf(TextFieldMapper.class));\n\n        mapper = mapperService.documentMapper().mappers().getMapper(\"s_double\");\n        assertThat(mapper, instanceOf(TextFieldMapper.class));\n    }\n","date":"2020-09-14 22:32:35","endLine":390,"groupId":"103088","id":16,"instanceNumber":2,"isCurCommit":0,"methodName":"testNumericDetectionDefault","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/de/8bb034b500089a09b97bf03fc2360a32029655.src","preCode":"    public void testNumericDetectionDefault() throws Exception {\n        String mapping = Strings.toString(XContentFactory.jsonBuilder().startObject().startObject(\"_doc\")\n                .endObject().endObject());\n\n        IndexService index = createIndex(\"test\");\n        client().admin().indices().preparePutMapping(\"test\").setSource(mapping, XContentType.JSON).get();\n        DocumentMapper defaultMapper = index.mapperService().documentMapper();\n\n        ParsedDocument doc = defaultMapper.parse(new SourceToParse(\"test\", \"1\", BytesReference\n                .bytes(XContentFactory.jsonBuilder()\n                        .startObject()\n                        .field(\"s_long\", \"100\")\n                        .field(\"s_double\", \"100.0\")\n                        .endObject()),\n                XContentType.JSON));\n        assertNotNull(doc.dynamicMappingsUpdate());\n        assertAcked(client().admin().indices().preparePutMapping(\"test\")\n            .setSource(doc.dynamicMappingsUpdate().toString(), XContentType.JSON).get());\n\n        defaultMapper = index.mapperService().documentMapper();\n        Mapper mapper = defaultMapper.mappers().getMapper(\"s_long\");\n        assertThat(mapper, instanceOf(TextFieldMapper.class));\n\n        mapper = defaultMapper.mappers().getMapper(\"s_double\");\n        assertThat(mapper, instanceOf(TextFieldMapper.class));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/index/mapper/DynamicMappingTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":374,"status":"M"}],"commitId":"8447b7a0e6cc47ff065846279ebe6ee4228e2da0","commitMessage":"@@@Cut over more mapping tests to MapperServiceTestCase (#62312)\n\nShaves a few more seconds off the build.","date":"2020-09-14 22:32:35","modifiedFileCount":"6","status":"M","submitter":"Alan Woodward"}]
