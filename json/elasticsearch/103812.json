[{"authorTime":"2019-02-18 17:47:51","codes":[{"authorDate":"2018-05-03 15:54:15","commitOrder":3,"curCode":"    private static Settings.Builder baseSettings() {\n        final Path tempDir = createTempDir();\n        return Settings.builder()\n                .put(ClusterName.CLUSTER_NAME_SETTING.getKey(), InternalTestCluster.clusterName(\"single-node-cluster\", randomLong()))\n                .put(Environment.PATH_HOME_SETTING.getKey(), tempDir)\n                .put(NetworkModule.TRANSPORT_TYPE_KEY, getTestTransportType())\n                .put(Node.NODE_DATA_SETTING.getKey(), true);\n    }\n","date":"2018-05-03 15:54:15","endLine":169,"groupId":"7828","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"baseSettings","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/1f/a86d3f4b828d6844657e03f3eed617b11e0a17.src","preCode":"    private static Settings.Builder baseSettings() {\n        final Path tempDir = createTempDir();\n        return Settings.builder()\n                .put(ClusterName.CLUSTER_NAME_SETTING.getKey(), InternalTestCluster.clusterName(\"single-node-cluster\", randomLong()))\n                .put(Environment.PATH_HOME_SETTING.getKey(), tempDir)\n                .put(NetworkModule.TRANSPORT_TYPE_KEY, getTestTransportType())\n                .put(Node.NODE_DATA_SETTING.getKey(), true);\n    }\n","realPath":"server/src/test/java/org/elasticsearch/node/NodeTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":162,"status":"NB"},{"authorDate":"2019-02-18 17:47:51","commitOrder":3,"curCode":"    private Node startNode() throws NodeValidationException {\n        final Path tempDir = createTempDir();\n        String nodeName = \"node_s_0\";\n        Settings settings = Settings.builder()\n            .put(ClusterName.CLUSTER_NAME_SETTING.getKey(), InternalTestCluster.clusterName(\"single-node-cluster\", random().nextLong()))\n            .put(Environment.PATH_HOME_SETTING.getKey(), tempDir)\n            .put(Environment.PATH_REPO_SETTING.getKey(), tempDir.resolve(\"repo\"))\n            .put(Environment.PATH_SHARED_DATA_SETTING.getKey(), createTempDir().getParent())\n            .put(Node.NODE_NAME_SETTING.getKey(), nodeName)\n            .put(ScriptService.SCRIPT_MAX_COMPILATIONS_RATE.getKey(), \"1000/1m\")\n            .put(EsExecutors.PROCESSORS_SETTING.getKey(), 1) \r\n            .put(\"transport.type\", getTestTransportType())\n            .put(Node.NODE_DATA_SETTING.getKey(), true)\n            .put(NodeEnvironment.NODE_ID_SEED_SETTING.getKey(), random().nextLong())\n            \r\n            .put(DiskThresholdSettings.CLUSTER_ROUTING_ALLOCATION_LOW_DISK_WATERMARK_SETTING.getKey(), \"1b\")\n            .put(DiskThresholdSettings.CLUSTER_ROUTING_ALLOCATION_HIGH_DISK_WATERMARK_SETTING.getKey(), \"1b\")\n            .put(DiskThresholdSettings.CLUSTER_ROUTING_ALLOCATION_DISK_FLOOD_STAGE_WATERMARK_SETTING.getKey(), \"1b\")\n            \r\n            \r\n            .put(HierarchyCircuitBreakerService.USE_REAL_MEMORY_USAGE_SETTING.getKey(), false)\n            .putList(DISCOVERY_SEED_HOSTS_SETTING.getKey()) \r\n            .putList(INITIAL_MASTER_NODES_SETTING.getKey(), nodeName)\n            .build();\n\n        Node node = new MockNode(settings, Arrays.asList(MockNioTransportPlugin.class, MockHttpTransport.TestPlugin.class), true);\n        node.start();\n        return node;\n    }\n","date":"2019-02-18 17:47:51","endLine":79,"groupId":"49596","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"startNode","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/99/90d7b082e5c748042745c3718122da17282aad.src","preCode":"    private Node startNode() throws NodeValidationException {\n        final Path tempDir = createTempDir();\n        String nodeName = \"node_s_0\";\n        Settings settings = Settings.builder()\n            .put(ClusterName.CLUSTER_NAME_SETTING.getKey(), InternalTestCluster.clusterName(\"single-node-cluster\", random().nextLong()))\n            .put(Environment.PATH_HOME_SETTING.getKey(), tempDir)\n            .put(Environment.PATH_REPO_SETTING.getKey(), tempDir.resolve(\"repo\"))\n            .put(Environment.PATH_SHARED_DATA_SETTING.getKey(), createTempDir().getParent())\n            .put(Node.NODE_NAME_SETTING.getKey(), nodeName)\n            .put(ScriptService.SCRIPT_MAX_COMPILATIONS_RATE.getKey(), \"1000/1m\")\n            .put(EsExecutors.PROCESSORS_SETTING.getKey(), 1) \r\n            .put(\"transport.type\", getTestTransportType())\n            .put(Node.NODE_DATA_SETTING.getKey(), true)\n            .put(NodeEnvironment.NODE_ID_SEED_SETTING.getKey(), random().nextLong())\n            \r\n            .put(DiskThresholdSettings.CLUSTER_ROUTING_ALLOCATION_LOW_DISK_WATERMARK_SETTING.getKey(), \"1b\")\n            .put(DiskThresholdSettings.CLUSTER_ROUTING_ALLOCATION_HIGH_DISK_WATERMARK_SETTING.getKey(), \"1b\")\n            .put(DiskThresholdSettings.CLUSTER_ROUTING_ALLOCATION_DISK_FLOOD_STAGE_WATERMARK_SETTING.getKey(), \"1b\")\n            \r\n            \r\n            .put(HierarchyCircuitBreakerService.USE_REAL_MEMORY_USAGE_SETTING.getKey(), false)\n            .putList(DISCOVERY_SEED_HOSTS_SETTING.getKey()) \r\n            .putList(INITIAL_MASTER_NODES_SETTING.getKey(), nodeName)\n            .build();\n\n        Node node = new MockNode(settings, Arrays.asList(MockNioTransportPlugin.class, MockHttpTransport.TestPlugin.class), true);\n        node.start();\n        return node;\n    }\n","realPath":"server/src/test/java/org/elasticsearch/indices/IndicesServiceCloseTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":51,"status":"B"}],"commitId":"580a71c2411ac4913a1ac60b3d9649353a08ae76","commitMessage":"@@@Don't close caches while there might still be in-flight requests. (#38958)\n\nMany of our index components use ref-counting so that in the event that a shard\nis closed while there are still ongoing requests.  then the index reader and the\nstore only effectively get closed when ongoing requests have finished. However\nwe don't apply the same principle to the request and query caches.  which might\nget closed while there are still in-flight requests.\n\nThis commit adds ref-counting to `IndicesService` so that the caches and other\ncomponents it maintains only get closed when all shards are effectively closed.\n\nCloses #37117\n","date":"2019-02-18 17:47:51","modifiedFileCount":"5","status":"M","submitter":"Adrien Grand"},{"authorTime":"2019-03-04 15:43:17","codes":[{"authorDate":"2018-05-03 15:54:15","commitOrder":4,"curCode":"    private static Settings.Builder baseSettings() {\n        final Path tempDir = createTempDir();\n        return Settings.builder()\n                .put(ClusterName.CLUSTER_NAME_SETTING.getKey(), InternalTestCluster.clusterName(\"single-node-cluster\", randomLong()))\n                .put(Environment.PATH_HOME_SETTING.getKey(), tempDir)\n                .put(NetworkModule.TRANSPORT_TYPE_KEY, getTestTransportType())\n                .put(Node.NODE_DATA_SETTING.getKey(), true);\n    }\n","date":"2018-05-03 15:54:15","endLine":169,"groupId":"7828","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"baseSettings","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/1f/a86d3f4b828d6844657e03f3eed617b11e0a17.src","preCode":"    private static Settings.Builder baseSettings() {\n        final Path tempDir = createTempDir();\n        return Settings.builder()\n                .put(ClusterName.CLUSTER_NAME_SETTING.getKey(), InternalTestCluster.clusterName(\"single-node-cluster\", randomLong()))\n                .put(Environment.PATH_HOME_SETTING.getKey(), tempDir)\n                .put(NetworkModule.TRANSPORT_TYPE_KEY, getTestTransportType())\n                .put(Node.NODE_DATA_SETTING.getKey(), true);\n    }\n","realPath":"server/src/test/java/org/elasticsearch/node/NodeTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":162,"status":"N"},{"authorDate":"2019-03-04 15:43:17","commitOrder":4,"curCode":"    private Node startNode() throws NodeValidationException {\n        final Path tempDir = createTempDir();\n        String nodeName = \"node_s_0\";\n        Settings settings = Settings.builder()\n            .put(ClusterName.CLUSTER_NAME_SETTING.getKey(), InternalTestCluster.clusterName(\"single-node-cluster\", random().nextLong()))\n            .put(Environment.PATH_HOME_SETTING.getKey(), tempDir)\n            .put(Environment.PATH_REPO_SETTING.getKey(), tempDir.resolve(\"repo\"))\n            .put(Environment.PATH_SHARED_DATA_SETTING.getKey(), createTempDir().getParent())\n            .put(Node.NODE_NAME_SETTING.getKey(), nodeName)\n            .put(ScriptService.SCRIPT_MAX_COMPILATIONS_RATE.getKey(), \"1000/1m\")\n            .put(EsExecutors.PROCESSORS_SETTING.getKey(), 1) \r\n            .put(\"transport.type\", getTestTransportType())\n            .put(Node.NODE_DATA_SETTING.getKey(), true)\n            .put(NodeEnvironment.NODE_ID_SEED_SETTING.getKey(), random().nextLong())\n            \r\n            .put(DiskThresholdSettings.CLUSTER_ROUTING_ALLOCATION_LOW_DISK_WATERMARK_SETTING.getKey(), \"1b\")\n            .put(DiskThresholdSettings.CLUSTER_ROUTING_ALLOCATION_HIGH_DISK_WATERMARK_SETTING.getKey(), \"1b\")\n            .put(DiskThresholdSettings.CLUSTER_ROUTING_ALLOCATION_DISK_FLOOD_STAGE_WATERMARK_SETTING.getKey(), \"1b\")\n            \r\n            \r\n            .put(HierarchyCircuitBreakerService.USE_REAL_MEMORY_USAGE_SETTING.getKey(), false)\n            .putList(DISCOVERY_SEED_HOSTS_SETTING.getKey()) \r\n            .putList(INITIAL_MASTER_NODES_SETTING.getKey(), nodeName)\n            .put(IndicesQueryCache.INDICES_QUERIES_CACHE_ALL_SEGMENTS_SETTING.getKey(), true)\n            .build();\n\n        Node node = new MockNode(settings,\n                Arrays.asList(MockNioTransportPlugin.class, MockHttpTransport.TestPlugin.class, InternalSettingsPlugin.class), true);\n        node.start();\n        return node;\n    }\n","date":"2019-03-04 15:43:17","endLine":92,"groupId":"49596","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"startNode","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/15/b45330530d38e5398bd1e65b3a31dc83386d8e.src","preCode":"    private Node startNode() throws NodeValidationException {\n        final Path tempDir = createTempDir();\n        String nodeName = \"node_s_0\";\n        Settings settings = Settings.builder()\n            .put(ClusterName.CLUSTER_NAME_SETTING.getKey(), InternalTestCluster.clusterName(\"single-node-cluster\", random().nextLong()))\n            .put(Environment.PATH_HOME_SETTING.getKey(), tempDir)\n            .put(Environment.PATH_REPO_SETTING.getKey(), tempDir.resolve(\"repo\"))\n            .put(Environment.PATH_SHARED_DATA_SETTING.getKey(), createTempDir().getParent())\n            .put(Node.NODE_NAME_SETTING.getKey(), nodeName)\n            .put(ScriptService.SCRIPT_MAX_COMPILATIONS_RATE.getKey(), \"1000/1m\")\n            .put(EsExecutors.PROCESSORS_SETTING.getKey(), 1) \r\n            .put(\"transport.type\", getTestTransportType())\n            .put(Node.NODE_DATA_SETTING.getKey(), true)\n            .put(NodeEnvironment.NODE_ID_SEED_SETTING.getKey(), random().nextLong())\n            \r\n            .put(DiskThresholdSettings.CLUSTER_ROUTING_ALLOCATION_LOW_DISK_WATERMARK_SETTING.getKey(), \"1b\")\n            .put(DiskThresholdSettings.CLUSTER_ROUTING_ALLOCATION_HIGH_DISK_WATERMARK_SETTING.getKey(), \"1b\")\n            .put(DiskThresholdSettings.CLUSTER_ROUTING_ALLOCATION_DISK_FLOOD_STAGE_WATERMARK_SETTING.getKey(), \"1b\")\n            \r\n            \r\n            .put(HierarchyCircuitBreakerService.USE_REAL_MEMORY_USAGE_SETTING.getKey(), false)\n            .putList(DISCOVERY_SEED_HOSTS_SETTING.getKey()) \r\n            .putList(INITIAL_MASTER_NODES_SETTING.getKey(), nodeName)\n            .build();\n\n        Node node = new MockNode(settings, Arrays.asList(MockNioTransportPlugin.class, MockHttpTransport.TestPlugin.class), true);\n        node.start();\n        return node;\n    }\n","realPath":"server/src/test/java/org/elasticsearch/indices/IndicesServiceCloseTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":62,"status":"M"}],"commitId":"c24e4ae8e1246416e1477f2f6ffafabf20c71eca","commitMessage":"@@@Enhancements to IndicesQueryCache. (#39099)\n\nThis commit adds the following:\n - more tests to IndicesServiceCloseTests.  one of them found a bug in the order\n   in which `IndicesQueryCache#onClose` and\n   `IndicesService.indicesRefCount#decRef` are called.\n - made `IndicesQueryCache.stats2` a synchronized map. All writes to it are\n   already protected by the lock of the Lucene cache.  but the final read from\n   an assertion in `IndicesQueryCache#close()` was not so this change should\n   avoid any potential visibility issues.\n - human-readable `toString`s to make debugging easier.\n\nRelates #37117","date":"2019-03-04 15:43:17","modifiedFileCount":"3","status":"M","submitter":"Adrien Grand"},{"authorTime":"2019-08-23 05:19:40","codes":[{"authorDate":"2018-05-03 15:54:15","commitOrder":5,"curCode":"    private static Settings.Builder baseSettings() {\n        final Path tempDir = createTempDir();\n        return Settings.builder()\n                .put(ClusterName.CLUSTER_NAME_SETTING.getKey(), InternalTestCluster.clusterName(\"single-node-cluster\", randomLong()))\n                .put(Environment.PATH_HOME_SETTING.getKey(), tempDir)\n                .put(NetworkModule.TRANSPORT_TYPE_KEY, getTestTransportType())\n                .put(Node.NODE_DATA_SETTING.getKey(), true);\n    }\n","date":"2018-05-03 15:54:15","endLine":169,"groupId":"7828","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"baseSettings","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/1f/a86d3f4b828d6844657e03f3eed617b11e0a17.src","preCode":"    private static Settings.Builder baseSettings() {\n        final Path tempDir = createTempDir();\n        return Settings.builder()\n                .put(ClusterName.CLUSTER_NAME_SETTING.getKey(), InternalTestCluster.clusterName(\"single-node-cluster\", randomLong()))\n                .put(Environment.PATH_HOME_SETTING.getKey(), tempDir)\n                .put(NetworkModule.TRANSPORT_TYPE_KEY, getTestTransportType())\n                .put(Node.NODE_DATA_SETTING.getKey(), true);\n    }\n","realPath":"server/src/test/java/org/elasticsearch/node/NodeTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":162,"status":"N"},{"authorDate":"2019-08-23 05:19:40","commitOrder":5,"curCode":"    private Node startNode() throws NodeValidationException {\n        final Path tempDir = createTempDir();\n        String nodeName = \"node_s_0\";\n        Settings settings = Settings.builder()\n            .put(ClusterName.CLUSTER_NAME_SETTING.getKey(), InternalTestCluster.clusterName(\"single-node-cluster\", random().nextLong()))\n            .put(Environment.PATH_HOME_SETTING.getKey(), tempDir)\n            .put(Environment.PATH_REPO_SETTING.getKey(), tempDir.resolve(\"repo\"))\n            .put(Environment.PATH_SHARED_DATA_SETTING.getKey(), createTempDir().getParent())\n            .put(Node.NODE_NAME_SETTING.getKey(), nodeName)\n            .put(ScriptService.SCRIPT_MAX_COMPILATIONS_RATE.getKey(), \"1000/1m\")\n            .put(EsExecutors.NODE_PROCESSORS_SETTING.getKey(), 1) \r\n            .put(\"transport.type\", getTestTransportType())\n            .put(Node.NODE_DATA_SETTING.getKey(), true)\n            .put(NodeEnvironment.NODE_ID_SEED_SETTING.getKey(), random().nextLong())\n            \r\n            .put(DiskThresholdSettings.CLUSTER_ROUTING_ALLOCATION_LOW_DISK_WATERMARK_SETTING.getKey(), \"1b\")\n            .put(DiskThresholdSettings.CLUSTER_ROUTING_ALLOCATION_HIGH_DISK_WATERMARK_SETTING.getKey(), \"1b\")\n            .put(DiskThresholdSettings.CLUSTER_ROUTING_ALLOCATION_DISK_FLOOD_STAGE_WATERMARK_SETTING.getKey(), \"1b\")\n            \r\n            \r\n            .put(HierarchyCircuitBreakerService.USE_REAL_MEMORY_USAGE_SETTING.getKey(), false)\n            .putList(DISCOVERY_SEED_HOSTS_SETTING.getKey()) \r\n            .putList(INITIAL_MASTER_NODES_SETTING.getKey(), nodeName)\n            .put(IndicesQueryCache.INDICES_QUERIES_CACHE_ALL_SEGMENTS_SETTING.getKey(), true)\n            .build();\n\n        Node node = new MockNode(settings,\n                Arrays.asList(MockNioTransportPlugin.class, MockHttpTransport.TestPlugin.class, InternalSettingsPlugin.class), true);\n        node.start();\n        return node;\n    }\n","date":"2019-08-23 05:19:40","endLine":93,"groupId":"49596","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"startNode","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/e2/2acfca3ae71547f856575be52dee0389b92805.src","preCode":"    private Node startNode() throws NodeValidationException {\n        final Path tempDir = createTempDir();\n        String nodeName = \"node_s_0\";\n        Settings settings = Settings.builder()\n            .put(ClusterName.CLUSTER_NAME_SETTING.getKey(), InternalTestCluster.clusterName(\"single-node-cluster\", random().nextLong()))\n            .put(Environment.PATH_HOME_SETTING.getKey(), tempDir)\n            .put(Environment.PATH_REPO_SETTING.getKey(), tempDir.resolve(\"repo\"))\n            .put(Environment.PATH_SHARED_DATA_SETTING.getKey(), createTempDir().getParent())\n            .put(Node.NODE_NAME_SETTING.getKey(), nodeName)\n            .put(ScriptService.SCRIPT_MAX_COMPILATIONS_RATE.getKey(), \"1000/1m\")\n            .put(EsExecutors.PROCESSORS_SETTING.getKey(), 1) \r\n            .put(\"transport.type\", getTestTransportType())\n            .put(Node.NODE_DATA_SETTING.getKey(), true)\n            .put(NodeEnvironment.NODE_ID_SEED_SETTING.getKey(), random().nextLong())\n            \r\n            .put(DiskThresholdSettings.CLUSTER_ROUTING_ALLOCATION_LOW_DISK_WATERMARK_SETTING.getKey(), \"1b\")\n            .put(DiskThresholdSettings.CLUSTER_ROUTING_ALLOCATION_HIGH_DISK_WATERMARK_SETTING.getKey(), \"1b\")\n            .put(DiskThresholdSettings.CLUSTER_ROUTING_ALLOCATION_DISK_FLOOD_STAGE_WATERMARK_SETTING.getKey(), \"1b\")\n            \r\n            \r\n            .put(HierarchyCircuitBreakerService.USE_REAL_MEMORY_USAGE_SETTING.getKey(), false)\n            .putList(DISCOVERY_SEED_HOSTS_SETTING.getKey()) \r\n            .putList(INITIAL_MASTER_NODES_SETTING.getKey(), nodeName)\n            .put(IndicesQueryCache.INDICES_QUERIES_CACHE_ALL_SEGMENTS_SETTING.getKey(), true)\n            .build();\n\n        Node node = new MockNode(settings,\n                Arrays.asList(MockNioTransportPlugin.class, MockHttpTransport.TestPlugin.class, InternalSettingsPlugin.class), true);\n        node.start();\n        return node;\n    }\n","realPath":"server/src/test/java/org/elasticsearch/indices/IndicesServiceCloseTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":63,"status":"M"}],"commitId":"d05101b9e5356db2667bebd8fb0960945915d5f2","commitMessage":"@@@Add node.processors setting in favor of processors (#45855)\n\nThis commit namespaces the existing processors setting under the \"node\"\nnamespace. In doing so.  we deprecate the existing processors setting in\nfavor of node.processors.","date":"2019-08-23 05:19:40","modifiedFileCount":"13","status":"M","submitter":"Jason Tedor"},{"authorTime":"2020-03-19 02:31:30","codes":[{"authorDate":"2018-05-03 15:54:15","commitOrder":6,"curCode":"    private static Settings.Builder baseSettings() {\n        final Path tempDir = createTempDir();\n        return Settings.builder()\n                .put(ClusterName.CLUSTER_NAME_SETTING.getKey(), InternalTestCluster.clusterName(\"single-node-cluster\", randomLong()))\n                .put(Environment.PATH_HOME_SETTING.getKey(), tempDir)\n                .put(NetworkModule.TRANSPORT_TYPE_KEY, getTestTransportType())\n                .put(Node.NODE_DATA_SETTING.getKey(), true);\n    }\n","date":"2018-05-03 15:54:15","endLine":169,"groupId":"7828","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"baseSettings","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/1f/a86d3f4b828d6844657e03f3eed617b11e0a17.src","preCode":"    private static Settings.Builder baseSettings() {\n        final Path tempDir = createTempDir();\n        return Settings.builder()\n                .put(ClusterName.CLUSTER_NAME_SETTING.getKey(), InternalTestCluster.clusterName(\"single-node-cluster\", randomLong()))\n                .put(Environment.PATH_HOME_SETTING.getKey(), tempDir)\n                .put(NetworkModule.TRANSPORT_TYPE_KEY, getTestTransportType())\n                .put(Node.NODE_DATA_SETTING.getKey(), true);\n    }\n","realPath":"server/src/test/java/org/elasticsearch/node/NodeTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":162,"status":"N"},{"authorDate":"2020-03-19 02:31:30","commitOrder":6,"curCode":"    private Node startNode() throws NodeValidationException {\n        final Path tempDir = createTempDir();\n        String nodeName = \"node_s_0\";\n        Settings settings = Settings.builder()\n            .put(ClusterName.CLUSTER_NAME_SETTING.getKey(), InternalTestCluster.clusterName(\"single-node-cluster\", random().nextLong()))\n            .put(Environment.PATH_HOME_SETTING.getKey(), tempDir)\n            .put(Environment.PATH_REPO_SETTING.getKey(), tempDir.resolve(\"repo\"))\n            .put(Environment.PATH_SHARED_DATA_SETTING.getKey(), createTempDir().getParent())\n            .put(Node.NODE_NAME_SETTING.getKey(), nodeName)\n            .put(ScriptService.SCRIPT_GENERAL_MAX_COMPILATIONS_RATE_SETTING.getKey(), \"1000/1m\")\n            .put(EsExecutors.NODE_PROCESSORS_SETTING.getKey(), 1) \r\n            .put(\"transport.type\", getTestTransportType())\n            .put(Node.NODE_DATA_SETTING.getKey(), true)\n            .put(NodeEnvironment.NODE_ID_SEED_SETTING.getKey(), random().nextLong())\n            \r\n            .put(DiskThresholdSettings.CLUSTER_ROUTING_ALLOCATION_LOW_DISK_WATERMARK_SETTING.getKey(), \"1b\")\n            .put(DiskThresholdSettings.CLUSTER_ROUTING_ALLOCATION_HIGH_DISK_WATERMARK_SETTING.getKey(), \"1b\")\n            .put(DiskThresholdSettings.CLUSTER_ROUTING_ALLOCATION_DISK_FLOOD_STAGE_WATERMARK_SETTING.getKey(), \"1b\")\n            \r\n            \r\n            .put(HierarchyCircuitBreakerService.USE_REAL_MEMORY_USAGE_SETTING.getKey(), false)\n            .putList(DISCOVERY_SEED_HOSTS_SETTING.getKey()) \r\n            .putList(INITIAL_MASTER_NODES_SETTING.getKey(), nodeName)\n            .put(IndicesQueryCache.INDICES_QUERIES_CACHE_ALL_SEGMENTS_SETTING.getKey(), true)\n            .build();\n\n        Node node = new MockNode(settings,\n                Arrays.asList(MockNioTransportPlugin.class, MockHttpTransport.TestPlugin.class, InternalSettingsPlugin.class), true);\n        node.start();\n        return node;\n    }\n","date":"2020-03-19 02:31:30","endLine":93,"groupId":"60572","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"startNode","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/29/b9f124844704cba6fabec33d3a3ba3c1be5f0b.src","preCode":"    private Node startNode() throws NodeValidationException {\n        final Path tempDir = createTempDir();\n        String nodeName = \"node_s_0\";\n        Settings settings = Settings.builder()\n            .put(ClusterName.CLUSTER_NAME_SETTING.getKey(), InternalTestCluster.clusterName(\"single-node-cluster\", random().nextLong()))\n            .put(Environment.PATH_HOME_SETTING.getKey(), tempDir)\n            .put(Environment.PATH_REPO_SETTING.getKey(), tempDir.resolve(\"repo\"))\n            .put(Environment.PATH_SHARED_DATA_SETTING.getKey(), createTempDir().getParent())\n            .put(Node.NODE_NAME_SETTING.getKey(), nodeName)\n            .put(ScriptService.SCRIPT_MAX_COMPILATIONS_RATE.getKey(), \"1000/1m\")\n            .put(EsExecutors.NODE_PROCESSORS_SETTING.getKey(), 1) \r\n            .put(\"transport.type\", getTestTransportType())\n            .put(Node.NODE_DATA_SETTING.getKey(), true)\n            .put(NodeEnvironment.NODE_ID_SEED_SETTING.getKey(), random().nextLong())\n            \r\n            .put(DiskThresholdSettings.CLUSTER_ROUTING_ALLOCATION_LOW_DISK_WATERMARK_SETTING.getKey(), \"1b\")\n            .put(DiskThresholdSettings.CLUSTER_ROUTING_ALLOCATION_HIGH_DISK_WATERMARK_SETTING.getKey(), \"1b\")\n            .put(DiskThresholdSettings.CLUSTER_ROUTING_ALLOCATION_DISK_FLOOD_STAGE_WATERMARK_SETTING.getKey(), \"1b\")\n            \r\n            \r\n            .put(HierarchyCircuitBreakerService.USE_REAL_MEMORY_USAGE_SETTING.getKey(), false)\n            .putList(DISCOVERY_SEED_HOSTS_SETTING.getKey()) \r\n            .putList(INITIAL_MASTER_NODES_SETTING.getKey(), nodeName)\n            .put(IndicesQueryCache.INDICES_QUERIES_CACHE_ALL_SEGMENTS_SETTING.getKey(), true)\n            .build();\n\n        Node node = new MockNode(settings,\n                Arrays.asList(MockNioTransportPlugin.class, MockHttpTransport.TestPlugin.class, InternalSettingsPlugin.class), true);\n        node.start();\n        return node;\n    }\n","realPath":"server/src/test/java/org/elasticsearch/indices/IndicesServiceCloseTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":63,"status":"M"}],"commitId":"070ea7eff1d67a054bc23a6557ea081ebdff57d4","commitMessage":"@@@Scripting: Per-context script cache.  default off (#52855)\n\n* Adds per context settings:\n  `script.context.${CONTEXT}.cache_max_size` ~\n  `script.cache.max_size`\n\n  `script.context.${CONTEXT}.cache_expire` ~\n  `script.cache.expire`\n\n  `script.context.${CONTEXT}.max_compilations_rate` ~\n  `script.max_compilations_rate`\n\n* Context cache is used if:\n  `script.max_compilations_rate=use-context`.  This\n  value is dynamically updatable.  so users can\n  switch back to the general cache if desired.\n\n* Settings for context caches take the first value \n  that applies:\n  1) Context specific settings if set.  eg\n     `script.context.ingest.cache_max_size`\n  2) Correlated general setting is set to the non-default \n     value.  eg `script.cache.max_size`\n  3) Context default\n\nThe reason for 2's inclusion is to allow an easy\ntransition for users who've customized their general\ncache settings.\n\nUsing the general cache settings for the context caches\nresults in higher effective settings.  since they are \nmultiplied across the number of contexts.  So a general\ncache max size of 200 will become 200 * # of contexts.\nHowever.  this behavior it will avoid users snapping to a\nvalue that is too low for them.\n\n\nRefs: #50152\n","date":"2020-03-19 02:31:30","modifiedFileCount":"12","status":"M","submitter":"Stuart Tettemer"},{"authorTime":"2020-04-23 02:33:33","codes":[{"authorDate":"2018-05-03 15:54:15","commitOrder":7,"curCode":"    private static Settings.Builder baseSettings() {\n        final Path tempDir = createTempDir();\n        return Settings.builder()\n                .put(ClusterName.CLUSTER_NAME_SETTING.getKey(), InternalTestCluster.clusterName(\"single-node-cluster\", randomLong()))\n                .put(Environment.PATH_HOME_SETTING.getKey(), tempDir)\n                .put(NetworkModule.TRANSPORT_TYPE_KEY, getTestTransportType())\n                .put(Node.NODE_DATA_SETTING.getKey(), true);\n    }\n","date":"2018-05-03 15:54:15","endLine":169,"groupId":"7828","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"baseSettings","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/1f/a86d3f4b828d6844657e03f3eed617b11e0a17.src","preCode":"    private static Settings.Builder baseSettings() {\n        final Path tempDir = createTempDir();\n        return Settings.builder()\n                .put(ClusterName.CLUSTER_NAME_SETTING.getKey(), InternalTestCluster.clusterName(\"single-node-cluster\", randomLong()))\n                .put(Environment.PATH_HOME_SETTING.getKey(), tempDir)\n                .put(NetworkModule.TRANSPORT_TYPE_KEY, getTestTransportType())\n                .put(Node.NODE_DATA_SETTING.getKey(), true);\n    }\n","realPath":"server/src/test/java/org/elasticsearch/node/NodeTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":162,"status":"N"},{"authorDate":"2020-04-23 02:33:33","commitOrder":7,"curCode":"    private Node startNode() throws NodeValidationException {\n        final Path tempDir = createTempDir();\n        String nodeName = \"node_s_0\";\n        Settings settings = Settings.builder()\n            .put(ClusterName.CLUSTER_NAME_SETTING.getKey(), InternalTestCluster.clusterName(\"single-node-cluster\", random().nextLong()))\n            .put(Environment.PATH_HOME_SETTING.getKey(), tempDir)\n            .put(Environment.PATH_REPO_SETTING.getKey(), tempDir.resolve(\"repo\"))\n            .put(Environment.PATH_SHARED_DATA_SETTING.getKey(), createTempDir().getParent())\n            .put(Node.NODE_NAME_SETTING.getKey(), nodeName)\n            .put(EsExecutors.NODE_PROCESSORS_SETTING.getKey(), 1) \r\n            .put(\"transport.type\", getTestTransportType())\n            .put(Node.NODE_DATA_SETTING.getKey(), true)\n            .put(NodeEnvironment.NODE_ID_SEED_SETTING.getKey(), random().nextLong())\n            \r\n            .put(DiskThresholdSettings.CLUSTER_ROUTING_ALLOCATION_LOW_DISK_WATERMARK_SETTING.getKey(), \"1b\")\n            .put(DiskThresholdSettings.CLUSTER_ROUTING_ALLOCATION_HIGH_DISK_WATERMARK_SETTING.getKey(), \"1b\")\n            .put(DiskThresholdSettings.CLUSTER_ROUTING_ALLOCATION_DISK_FLOOD_STAGE_WATERMARK_SETTING.getKey(), \"1b\")\n            \r\n            \r\n            .put(HierarchyCircuitBreakerService.USE_REAL_MEMORY_USAGE_SETTING.getKey(), false)\n            .putList(DISCOVERY_SEED_HOSTS_SETTING.getKey()) \r\n            .putList(INITIAL_MASTER_NODES_SETTING.getKey(), nodeName)\n            .put(IndicesQueryCache.INDICES_QUERIES_CACHE_ALL_SEGMENTS_SETTING.getKey(), true)\n            .build();\n\n        Node node = new MockNode(settings,\n                Arrays.asList(MockNioTransportPlugin.class, MockHttpTransport.TestPlugin.class, InternalSettingsPlugin.class), true);\n        node.start();\n        return node;\n    }\n","date":"2020-04-23 02:33:33","endLine":91,"groupId":"0","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"startNode","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/b6/bebb7a9b80d8ecf12203574d99bcb1f074eb22.src","preCode":"    private Node startNode() throws NodeValidationException {\n        final Path tempDir = createTempDir();\n        String nodeName = \"node_s_0\";\n        Settings settings = Settings.builder()\n            .put(ClusterName.CLUSTER_NAME_SETTING.getKey(), InternalTestCluster.clusterName(\"single-node-cluster\", random().nextLong()))\n            .put(Environment.PATH_HOME_SETTING.getKey(), tempDir)\n            .put(Environment.PATH_REPO_SETTING.getKey(), tempDir.resolve(\"repo\"))\n            .put(Environment.PATH_SHARED_DATA_SETTING.getKey(), createTempDir().getParent())\n            .put(Node.NODE_NAME_SETTING.getKey(), nodeName)\n            .put(ScriptService.SCRIPT_GENERAL_MAX_COMPILATIONS_RATE_SETTING.getKey(), \"1000/1m\")\n            .put(EsExecutors.NODE_PROCESSORS_SETTING.getKey(), 1) \r\n            .put(\"transport.type\", getTestTransportType())\n            .put(Node.NODE_DATA_SETTING.getKey(), true)\n            .put(NodeEnvironment.NODE_ID_SEED_SETTING.getKey(), random().nextLong())\n            \r\n            .put(DiskThresholdSettings.CLUSTER_ROUTING_ALLOCATION_LOW_DISK_WATERMARK_SETTING.getKey(), \"1b\")\n            .put(DiskThresholdSettings.CLUSTER_ROUTING_ALLOCATION_HIGH_DISK_WATERMARK_SETTING.getKey(), \"1b\")\n            .put(DiskThresholdSettings.CLUSTER_ROUTING_ALLOCATION_DISK_FLOOD_STAGE_WATERMARK_SETTING.getKey(), \"1b\")\n            \r\n            \r\n            .put(HierarchyCircuitBreakerService.USE_REAL_MEMORY_USAGE_SETTING.getKey(), false)\n            .putList(DISCOVERY_SEED_HOSTS_SETTING.getKey()) \r\n            .putList(INITIAL_MASTER_NODES_SETTING.getKey(), nodeName)\n            .put(IndicesQueryCache.INDICES_QUERIES_CACHE_ALL_SEGMENTS_SETTING.getKey(), true)\n            .build();\n\n        Node node = new MockNode(settings,\n                Arrays.asList(MockNioTransportPlugin.class, MockHttpTransport.TestPlugin.class, InternalSettingsPlugin.class), true);\n        node.start();\n        return node;\n    }\n","realPath":"server/src/test/java/org/elasticsearch/indices/IndicesServiceCloseTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":62,"status":"M"}],"commitId":"bd64da096088af2a52cea7b9e48252a27294d27b","commitMessage":"@@@Scripting: Deprecate general cache settings (#55038)\n\n* Scripting: Deprecate general cache settings\n\n* Add script.disable_max_compilations_rate setting\n\n* Move construction to ScriptCache\n\n* Use ScriptService to do updates of CacheHolder\n\n* Remove fallbacks\n\n* Add SCRIPT_DISABLE_MAX_COMPILATIONS_RATE_SETTING to ClusterSettings\n\n* Node scope\n\n* Use back compat\n\n* 8.0 for bwc\n\n* script.max_compilations_rate=2048/1m -> script.disable_max_compilations_rate=true in docker compose\n\n* do not guard in esnode\n\n* Doc update\n\n* isSnapshotBuild() -> systemProperty 'es.script.disable_max_compilations_rate'.  'true'\n\n* Do not use snapshot in gradle to set max_compilations_rate\n\n* Expose cacheHolder as package private\n\n* monospace 75/5m in cbreaker docs.  single space in using\n\n* More detail in general compilation rate error\n\n* Test: don't modify defaultConfig on upgrade","date":"2020-04-23 02:33:33","modifiedFileCount":"7","status":"M","submitter":"Stuart Tettemer"},{"authorTime":"2020-06-26 22:33:37","codes":[{"authorDate":"2020-06-26 22:33:37","commitOrder":8,"curCode":"    private static Settings.Builder baseSettings() {\n        final Path tempDir = createTempDir();\n        return Settings.builder()\n                .put(ClusterName.CLUSTER_NAME_SETTING.getKey(), InternalTestCluster.clusterName(\"single-node-cluster\", randomLong()))\n                .put(Environment.PATH_HOME_SETTING.getKey(), tempDir)\n                .put(NetworkModule.TRANSPORT_TYPE_KEY, getTestTransportType())\n                .put(dataNode());\n    }\n","date":"2020-06-26 22:33:37","endLine":160,"groupId":"103812","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"baseSettings","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/d2/98a5010366e0d8efaeee6ac638b28254ed9a89.src","preCode":"    private static Settings.Builder baseSettings() {\n        final Path tempDir = createTempDir();\n        return Settings.builder()\n                .put(ClusterName.CLUSTER_NAME_SETTING.getKey(), InternalTestCluster.clusterName(\"single-node-cluster\", randomLong()))\n                .put(Environment.PATH_HOME_SETTING.getKey(), tempDir)\n                .put(NetworkModule.TRANSPORT_TYPE_KEY, getTestTransportType())\n                .put(Node.NODE_DATA_SETTING.getKey(), true);\n    }\n","realPath":"server/src/test/java/org/elasticsearch/node/NodeTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":153,"status":"M"},{"authorDate":"2020-06-26 22:33:37","commitOrder":8,"curCode":"    private Node startNode() throws NodeValidationException {\n        final Path tempDir = createTempDir();\n        String nodeName = \"node_s_0\";\n        Settings settings = Settings.builder()\n            .put(ClusterName.CLUSTER_NAME_SETTING.getKey(), InternalTestCluster.clusterName(\"single-node-cluster\", random().nextLong()))\n            .put(Environment.PATH_HOME_SETTING.getKey(), tempDir)\n            .put(Environment.PATH_REPO_SETTING.getKey(), tempDir.resolve(\"repo\"))\n            .put(Environment.PATH_SHARED_DATA_SETTING.getKey(), createTempDir().getParent())\n            .put(Node.NODE_NAME_SETTING.getKey(), nodeName)\n            .put(EsExecutors.NODE_PROCESSORS_SETTING.getKey(), 1) \r\n            .put(\"transport.type\", getTestTransportType())\n            .put(dataNode())\n            .put(NodeEnvironment.NODE_ID_SEED_SETTING.getKey(), random().nextLong())\n            \r\n            .put(DiskThresholdSettings.CLUSTER_ROUTING_ALLOCATION_LOW_DISK_WATERMARK_SETTING.getKey(), \"1b\")\n            .put(DiskThresholdSettings.CLUSTER_ROUTING_ALLOCATION_HIGH_DISK_WATERMARK_SETTING.getKey(), \"1b\")\n            .put(DiskThresholdSettings.CLUSTER_ROUTING_ALLOCATION_DISK_FLOOD_STAGE_WATERMARK_SETTING.getKey(), \"1b\")\n            \r\n            \r\n            .put(HierarchyCircuitBreakerService.USE_REAL_MEMORY_USAGE_SETTING.getKey(), false)\n            .putList(DISCOVERY_SEED_HOSTS_SETTING.getKey()) \r\n            .putList(INITIAL_MASTER_NODES_SETTING.getKey(), nodeName)\n            .put(IndicesQueryCache.INDICES_QUERIES_CACHE_ALL_SEGMENTS_SETTING.getKey(), true)\n            .build();\n\n        Node node = new MockNode(settings,\n                Arrays.asList(MockNioTransportPlugin.class, MockHttpTransport.TestPlugin.class, InternalSettingsPlugin.class), true);\n        node.start();\n        return node;\n    }\n","date":"2020-06-26 22:33:37","endLine":92,"groupId":"103812","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"startNode","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/dc/a5b1e819651457b41ed2c0ce08e619aab61bc2.src","preCode":"    private Node startNode() throws NodeValidationException {\n        final Path tempDir = createTempDir();\n        String nodeName = \"node_s_0\";\n        Settings settings = Settings.builder()\n            .put(ClusterName.CLUSTER_NAME_SETTING.getKey(), InternalTestCluster.clusterName(\"single-node-cluster\", random().nextLong()))\n            .put(Environment.PATH_HOME_SETTING.getKey(), tempDir)\n            .put(Environment.PATH_REPO_SETTING.getKey(), tempDir.resolve(\"repo\"))\n            .put(Environment.PATH_SHARED_DATA_SETTING.getKey(), createTempDir().getParent())\n            .put(Node.NODE_NAME_SETTING.getKey(), nodeName)\n            .put(EsExecutors.NODE_PROCESSORS_SETTING.getKey(), 1) \r\n            .put(\"transport.type\", getTestTransportType())\n            .put(Node.NODE_DATA_SETTING.getKey(), true)\n            .put(NodeEnvironment.NODE_ID_SEED_SETTING.getKey(), random().nextLong())\n            \r\n            .put(DiskThresholdSettings.CLUSTER_ROUTING_ALLOCATION_LOW_DISK_WATERMARK_SETTING.getKey(), \"1b\")\n            .put(DiskThresholdSettings.CLUSTER_ROUTING_ALLOCATION_HIGH_DISK_WATERMARK_SETTING.getKey(), \"1b\")\n            .put(DiskThresholdSettings.CLUSTER_ROUTING_ALLOCATION_DISK_FLOOD_STAGE_WATERMARK_SETTING.getKey(), \"1b\")\n            \r\n            \r\n            .put(HierarchyCircuitBreakerService.USE_REAL_MEMORY_USAGE_SETTING.getKey(), false)\n            .putList(DISCOVERY_SEED_HOSTS_SETTING.getKey()) \r\n            .putList(INITIAL_MASTER_NODES_SETTING.getKey(), nodeName)\n            .put(IndicesQueryCache.INDICES_QUERIES_CACHE_ALL_SEGMENTS_SETTING.getKey(), true)\n            .build();\n\n        Node node = new MockNode(settings,\n                Arrays.asList(MockNioTransportPlugin.class, MockHttpTransport.TestPlugin.class, InternalSettingsPlugin.class), true);\n        node.start();\n        return node;\n    }\n","realPath":"server/src/test/java/org/elasticsearch/indices/IndicesServiceCloseTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":63,"status":"M"}],"commitId":"cac5f29cee7572a3695e2b8d17d0a0cb7ac473dd","commitMessage":"@@@Merge branch 'master' into feature/runtime_fields\n","date":"2020-06-26 22:33:37","modifiedFileCount":"731","status":"M","submitter":"Nik Everett"}]
