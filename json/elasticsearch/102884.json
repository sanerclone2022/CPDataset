[{"authorTime":"2020-07-29 01:14:40","codes":[{"authorDate":"2020-07-29 01:14:40","commitOrder":1,"curCode":"    public void testSourcePathWithMultiFields() {\n        Mapper.BuilderContext context = new Mapper.BuilderContext(\n            MockFieldMapper.DEFAULT_SETTINGS, new ContentPath());\n\n        MockFieldMapper field = new MockFieldMapper.Builder(\"field\")\n            .addMultiField(new MockFieldMapper.Builder(\"field.subfield1\"))\n            .addMultiField(new MockFieldMapper.Builder(\"field.subfield2\"))\n            .build(context);\n\n        FieldTypeLookup lookup = new FieldTypeLookup(singletonList(field), emptyList());\n\n        assertEquals(Set.of(\"field\"), lookup.sourcePaths(\"field\"));\n        assertEquals(Set.of(\"field\"), lookup.sourcePaths(\"field.subfield1\"));\n        assertEquals(Set.of(\"field\"), lookup.sourcePaths(\"field.subfield2\"));\n    }\n","date":"2020-07-29 01:42:59","endLine":96,"groupId":"1849","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testSourcePathWithMultiFields","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/2b/8b1c2679f95dd59d61b749fac562f17e07ed18.src","preCode":"    public void testSourcePathWithMultiFields() {\n        Mapper.BuilderContext context = new Mapper.BuilderContext(\n            MockFieldMapper.DEFAULT_SETTINGS, new ContentPath());\n\n        MockFieldMapper field = new MockFieldMapper.Builder(\"field\")\n            .addMultiField(new MockFieldMapper.Builder(\"field.subfield1\"))\n            .addMultiField(new MockFieldMapper.Builder(\"field.subfield2\"))\n            .build(context);\n\n        FieldTypeLookup lookup = new FieldTypeLookup(singletonList(field), emptyList());\n\n        assertEquals(Set.of(\"field\"), lookup.sourcePaths(\"field\"));\n        assertEquals(Set.of(\"field\"), lookup.sourcePaths(\"field.subfield1\"));\n        assertEquals(Set.of(\"field\"), lookup.sourcePaths(\"field.subfield2\"));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/index/mapper/FieldTypeLookupTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":82,"status":"B"},{"authorDate":"2020-07-29 01:14:40","commitOrder":1,"curCode":"    public void testSourcePathsWithCopyTo() {\n        Mapper.BuilderContext context = new Mapper.BuilderContext(\n            MockFieldMapper.DEFAULT_SETTINGS, new ContentPath());\n\n        MockFieldMapper field = new MockFieldMapper.Builder(\"field\")\n            .addMultiField(new MockFieldMapper.Builder(\"field.subfield1\"))\n            .build(context);\n\n        MockFieldMapper otherField = new MockFieldMapper.Builder(\"other_field\")\n            .copyTo(new FieldMapper.CopyTo.Builder()\n                .add(\"field\")\n                .build())\n            .build(context);\n\n        FieldTypeLookup lookup = new FieldTypeLookup(Arrays.asList(field, otherField), emptyList());\n\n        assertEquals(Set.of(\"other_field\", \"field\"), lookup.sourcePaths(\"field\"));\n        assertEquals(Set.of(\"other_field\", \"field\"), lookup.sourcePaths(\"field.subfield1\"));\n    }\n","date":"2020-07-29 01:42:59","endLine":133,"groupId":"52396","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testSourcePathsWithCopyTo","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/2b/8b1c2679f95dd59d61b749fac562f17e07ed18.src","preCode":"    public void testSourcePathsWithCopyTo() {\n        Mapper.BuilderContext context = new Mapper.BuilderContext(\n            MockFieldMapper.DEFAULT_SETTINGS, new ContentPath());\n\n        MockFieldMapper field = new MockFieldMapper.Builder(\"field\")\n            .addMultiField(new MockFieldMapper.Builder(\"field.subfield1\"))\n            .build(context);\n\n        MockFieldMapper otherField = new MockFieldMapper.Builder(\"other_field\")\n            .copyTo(new FieldMapper.CopyTo.Builder()\n                .add(\"field\")\n                .build())\n            .build(context);\n\n        FieldTypeLookup lookup = new FieldTypeLookup(Arrays.asList(field, otherField), emptyList());\n\n        assertEquals(Set.of(\"other_field\", \"field\"), lookup.sourcePaths(\"field\"));\n        assertEquals(Set.of(\"other_field\", \"field\"), lookup.sourcePaths(\"field.subfield1\"));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/index/mapper/FieldTypeLookupTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":115,"status":"B"}],"commitId":"e3bbb3bed4ed9430ab43eb4a3e8276ae503c13ab","commitMessage":"@@@Merge branch 'master' into feature/runtime_fields\n","date":"2020-07-29 01:42:59","modifiedFileCount":"261","status":"B","submitter":"Nik Everett"},{"authorTime":"2020-09-30 23:56:44","codes":[{"authorDate":"2020-07-29 01:14:40","commitOrder":2,"curCode":"    public void testSourcePathWithMultiFields() {\n        Mapper.BuilderContext context = new Mapper.BuilderContext(\n            MockFieldMapper.DEFAULT_SETTINGS, new ContentPath());\n\n        MockFieldMapper field = new MockFieldMapper.Builder(\"field\")\n            .addMultiField(new MockFieldMapper.Builder(\"field.subfield1\"))\n            .addMultiField(new MockFieldMapper.Builder(\"field.subfield2\"))\n            .build(context);\n\n        FieldTypeLookup lookup = new FieldTypeLookup(singletonList(field), emptyList());\n\n        assertEquals(Set.of(\"field\"), lookup.sourcePaths(\"field\"));\n        assertEquals(Set.of(\"field\"), lookup.sourcePaths(\"field.subfield1\"));\n        assertEquals(Set.of(\"field\"), lookup.sourcePaths(\"field.subfield2\"));\n    }\n","date":"2020-07-29 01:42:59","endLine":96,"groupId":"1849","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testSourcePathWithMultiFields","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/2b/8b1c2679f95dd59d61b749fac562f17e07ed18.src","preCode":"    public void testSourcePathWithMultiFields() {\n        Mapper.BuilderContext context = new Mapper.BuilderContext(\n            MockFieldMapper.DEFAULT_SETTINGS, new ContentPath());\n\n        MockFieldMapper field = new MockFieldMapper.Builder(\"field\")\n            .addMultiField(new MockFieldMapper.Builder(\"field.subfield1\"))\n            .addMultiField(new MockFieldMapper.Builder(\"field.subfield2\"))\n            .build(context);\n\n        FieldTypeLookup lookup = new FieldTypeLookup(singletonList(field), emptyList());\n\n        assertEquals(Set.of(\"field\"), lookup.sourcePaths(\"field\"));\n        assertEquals(Set.of(\"field\"), lookup.sourcePaths(\"field.subfield1\"));\n        assertEquals(Set.of(\"field\"), lookup.sourcePaths(\"field.subfield2\"));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/index/mapper/FieldTypeLookupTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":82,"status":"N"},{"authorDate":"2020-09-30 23:56:44","commitOrder":2,"curCode":"    public void testSourcePathsWithCopyTo() {\n        Mapper.BuilderContext context = new Mapper.BuilderContext(\n            MockFieldMapper.DEFAULT_SETTINGS, new ContentPath());\n\n        MockFieldMapper field = new MockFieldMapper.Builder(\"field\")\n            .addMultiField(new MockFieldMapper.Builder(\"field.subfield1\"))\n            .build(context);\n\n        MockFieldMapper otherField = new MockFieldMapper.Builder(\"other_field\")\n            .copyTo(\"field\")\n            .build(context);\n\n        FieldTypeLookup lookup = new FieldTypeLookup(Arrays.asList(field, otherField), emptyList());\n\n        assertEquals(Set.of(\"other_field\", \"field\"), lookup.sourcePaths(\"field\"));\n        assertEquals(Set.of(\"other_field\", \"field\"), lookup.sourcePaths(\"field.subfield1\"));\n    }\n","date":"2020-09-30 23:56:44","endLine":114,"groupId":"1851","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testSourcePathsWithCopyTo","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/63/44691695d1ebd4f718bc7e6f2a481912467c81.src","preCode":"    public void testSourcePathsWithCopyTo() {\n        Mapper.BuilderContext context = new Mapper.BuilderContext(\n            MockFieldMapper.DEFAULT_SETTINGS, new ContentPath());\n\n        MockFieldMapper field = new MockFieldMapper.Builder(\"field\")\n            .addMultiField(new MockFieldMapper.Builder(\"field.subfield1\"))\n            .build(context);\n\n        MockFieldMapper otherField = new MockFieldMapper.Builder(\"other_field\")\n            .copyTo(new FieldMapper.CopyTo.Builder()\n                .add(\"field\")\n                .build())\n            .build(context);\n\n        FieldTypeLookup lookup = new FieldTypeLookup(Arrays.asList(field, otherField), emptyList());\n\n        assertEquals(Set.of(\"other_field\", \"field\"), lookup.sourcePaths(\"field\"));\n        assertEquals(Set.of(\"other_field\", \"field\"), lookup.sourcePaths(\"field.subfield1\"));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/index/mapper/FieldTypeLookupTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":98,"status":"M"}],"commitId":"059c15a30f8c5cbb0ab8dc43733c5ad8093ffc0d","commitMessage":"@@@Convert test field mappers to parametrized forms (#63018)\n\nRelates to #62988","date":"2020-09-30 23:56:44","modifiedFileCount":"6","status":"M","submitter":"Alan Woodward"},{"authorTime":"2020-11-05 18:48:39","codes":[{"authorDate":"2020-11-05 18:48:39","commitOrder":3,"curCode":"    public void testSourcePathWithMultiFields() {\n        MockFieldMapper field = new MockFieldMapper.Builder(\"field\")\n            .addMultiField(new MockFieldMapper.Builder(\"field.subfield1\"))\n            .addMultiField(new MockFieldMapper.Builder(\"field.subfield2\"))\n            .build(new ContentPath());\n\n        FieldTypeLookup lookup = new FieldTypeLookup(singletonList(field), emptyList());\n\n        assertEquals(Set.of(\"field\"), lookup.sourcePaths(\"field\"));\n        assertEquals(Set.of(\"field\"), lookup.sourcePaths(\"field.subfield1\"));\n        assertEquals(Set.of(\"field\"), lookup.sourcePaths(\"field.subfield2\"));\n    }\n","date":"2020-11-05 18:48:39","endLine":93,"groupId":"57654","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testSourcePathWithMultiFields","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/ca/5f330815d559d7060c83287319061c827d8972.src","preCode":"    public void testSourcePathWithMultiFields() {\n        Mapper.BuilderContext context = new Mapper.BuilderContext(\n            MockFieldMapper.DEFAULT_SETTINGS, new ContentPath());\n\n        MockFieldMapper field = new MockFieldMapper.Builder(\"field\")\n            .addMultiField(new MockFieldMapper.Builder(\"field.subfield1\"))\n            .addMultiField(new MockFieldMapper.Builder(\"field.subfield2\"))\n            .build(context);\n\n        FieldTypeLookup lookup = new FieldTypeLookup(singletonList(field), emptyList());\n\n        assertEquals(Set.of(\"field\"), lookup.sourcePaths(\"field\"));\n        assertEquals(Set.of(\"field\"), lookup.sourcePaths(\"field.subfield1\"));\n        assertEquals(Set.of(\"field\"), lookup.sourcePaths(\"field.subfield2\"));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/index/mapper/FieldTypeLookupTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":82,"status":"M"},{"authorDate":"2020-11-05 18:48:39","commitOrder":3,"curCode":"    public void testSourcePathsWithCopyTo() {\n        MockFieldMapper field = new MockFieldMapper.Builder(\"field\")\n            .addMultiField(new MockFieldMapper.Builder(\"field.subfield1\"))\n            .build(new ContentPath());\n\n        MockFieldMapper otherField = new MockFieldMapper.Builder(\"other_field\")\n            .copyTo(\"field\")\n            .build(new ContentPath());\n\n        FieldTypeLookup lookup = new FieldTypeLookup(Arrays.asList(field, otherField), emptyList());\n\n        assertEquals(Set.of(\"other_field\", \"field\"), lookup.sourcePaths(\"field\"));\n        assertEquals(Set.of(\"other_field\", \"field\"), lookup.sourcePaths(\"field.subfield1\"));\n    }\n","date":"2020-11-05 18:48:39","endLine":108,"groupId":"62046","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testSourcePathsWithCopyTo","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/ca/5f330815d559d7060c83287319061c827d8972.src","preCode":"    public void testSourcePathsWithCopyTo() {\n        Mapper.BuilderContext context = new Mapper.BuilderContext(\n            MockFieldMapper.DEFAULT_SETTINGS, new ContentPath());\n\n        MockFieldMapper field = new MockFieldMapper.Builder(\"field\")\n            .addMultiField(new MockFieldMapper.Builder(\"field.subfield1\"))\n            .build(context);\n\n        MockFieldMapper otherField = new MockFieldMapper.Builder(\"other_field\")\n            .copyTo(\"field\")\n            .build(context);\n\n        FieldTypeLookup lookup = new FieldTypeLookup(Arrays.asList(field, otherField), emptyList());\n\n        assertEquals(Set.of(\"other_field\", \"field\"), lookup.sourcePaths(\"field\"));\n        assertEquals(Set.of(\"other_field\", \"field\"), lookup.sourcePaths(\"field.subfield1\"));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/index/mapper/FieldTypeLookupTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":95,"status":"M"}],"commitId":"0fd70ae383620d587a36ea71baca9295da93a76a","commitMessage":"@@@Remove Mapper.BuilderContext (#64625)\n\nMapper.BuilderContext is a simple wrapper around two objects.  some\nIndexSettings and a ContentPath. The IndexSettings are the same as\nthose provided in the ParserContext.  so we can simplify things here\nby removing them and just passing ContentPath directly to\nMapper.Builder#build()","date":"2020-11-05 18:48:39","modifiedFileCount":"103","status":"M","submitter":"Alan Woodward"},{"authorTime":"2020-11-12 22:56:04","codes":[{"authorDate":"2020-11-12 22:56:04","commitOrder":4,"curCode":"    public void testSourcePathWithMultiFields() {\n        MockFieldMapper field = new MockFieldMapper.Builder(\"field\")\n            .addMultiField(new MockFieldMapper.Builder(\"field.subfield1\"))\n            .addMultiField(new MockFieldMapper.Builder(\"field.subfield2\"))\n            .build(new ContentPath());\n\n        FieldTypeLookup lookup = new FieldTypeLookup(singletonList(field), emptyList(), emptyList());\n\n        assertEquals(Set.of(\"field\"), lookup.sourcePaths(\"field\"));\n        assertEquals(Set.of(\"field\"), lookup.sourcePaths(\"field.subfield1\"));\n        assertEquals(Set.of(\"field\"), lookup.sourcePaths(\"field.subfield2\"));\n    }\n","date":"2020-11-12 22:56:04","endLine":124,"groupId":"57654","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"testSourcePathWithMultiFields","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/df/d9132fecfa98938a862b349c6882ef56222984.src","preCode":"    public void testSourcePathWithMultiFields() {\n        MockFieldMapper field = new MockFieldMapper.Builder(\"field\")\n            .addMultiField(new MockFieldMapper.Builder(\"field.subfield1\"))\n            .addMultiField(new MockFieldMapper.Builder(\"field.subfield2\"))\n            .build(new ContentPath());\n\n        FieldTypeLookup lookup = new FieldTypeLookup(singletonList(field), emptyList());\n\n        assertEquals(Set.of(\"field\"), lookup.sourcePaths(\"field\"));\n        assertEquals(Set.of(\"field\"), lookup.sourcePaths(\"field.subfield1\"));\n        assertEquals(Set.of(\"field\"), lookup.sourcePaths(\"field.subfield2\"));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/index/mapper/FieldTypeLookupTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":113,"status":"M"},{"authorDate":"2020-11-12 22:56:04","commitOrder":4,"curCode":"    public void testSourcePathsWithCopyTo() {\n        MockFieldMapper field = new MockFieldMapper.Builder(\"field\")\n            .addMultiField(new MockFieldMapper.Builder(\"field.subfield1\"))\n            .build(new ContentPath());\n\n        MockFieldMapper otherField = new MockFieldMapper.Builder(\"other_field\")\n            .copyTo(\"field\")\n            .build(new ContentPath());\n\n        FieldTypeLookup lookup = new FieldTypeLookup(Arrays.asList(field, otherField), emptyList(), emptyList());\n\n        assertEquals(Set.of(\"other_field\", \"field\"), lookup.sourcePaths(\"field\"));\n        assertEquals(Set.of(\"other_field\", \"field\"), lookup.sourcePaths(\"field.subfield1\"));\n    }\n","date":"2020-11-12 22:56:04","endLine":139,"groupId":"5990","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"testSourcePathsWithCopyTo","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/df/d9132fecfa98938a862b349c6882ef56222984.src","preCode":"    public void testSourcePathsWithCopyTo() {\n        MockFieldMapper field = new MockFieldMapper.Builder(\"field\")\n            .addMultiField(new MockFieldMapper.Builder(\"field.subfield1\"))\n            .build(new ContentPath());\n\n        MockFieldMapper otherField = new MockFieldMapper.Builder(\"other_field\")\n            .copyTo(\"field\")\n            .build(new ContentPath());\n\n        FieldTypeLookup lookup = new FieldTypeLookup(Arrays.asList(field, otherField), emptyList());\n\n        assertEquals(Set.of(\"other_field\", \"field\"), lookup.sourcePaths(\"field\"));\n        assertEquals(Set.of(\"other_field\", \"field\"), lookup.sourcePaths(\"field.subfield1\"));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/index/mapper/FieldTypeLookupTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":126,"status":"M"}],"commitId":"3101293165acc0db8ef0f9e499eb498a4be4d23a","commitMessage":"@@@Introduce runtime section in mappings (#62906)\n\nThe runtime section is at the same level as the existing properties section. Its purpose is to hold runtime fields only. With the introduction of the runtime section.  a runtime field can be defined by specifying its type (previously called runtime_type) and script.\n\n```\nPUT /my-index/_mappings\n{\n    \"runtime\" : {\n        \"day_of_week\" : {\n            \"type\" : \"keyword\". \n            \"script\" : {\n                \"source\" : \"emit(doc['timestamp'].value.dayOfWeekEnum.getDisplayName(TextStyle.FULL.  Locale.ROOT))\"\n            }\n        }\n    }. \n    \"properties\" : {\n        \"timestamp\" : {\n            \"type\" : \"date\"\n        }\n    }\n}\n```\n\nFields defined in the runtime section can be updated at any time as they are not present in the lucene index. They get replaced entirely when they get updated.\n\nThanks to the introduction of the runtime section.  runtime fields override existing mapped fields defined with the same name.  similarly to runtime fields defined in the search request.\n\nRelates to #59332 \n","date":"2020-11-12 22:56:04","modifiedFileCount":"51","status":"M","submitter":"Luca Cavanna"},{"authorTime":"2020-12-24 02:19:02","codes":[{"authorDate":"2020-12-24 02:19:02","commitOrder":5,"curCode":"    public void testSourcePathWithMultiFields() {\n        MockFieldMapper field = new MockFieldMapper.Builder(\"field\")\n            .addMultiField(new MockFieldMapper.Builder(\"field.subfield1\"))\n            .addMultiField(new MockFieldMapper.Builder(\"field.subfield2\"))\n            .build(new ContentPath());\n\n        FieldTypeLookup lookup = new FieldTypeLookup(\"_doc\", singletonList(field), emptyList(), emptyList());\n\n        assertEquals(Set.of(\"field\"), lookup.sourcePaths(\"field\"));\n        assertEquals(Set.of(\"field\"), lookup.sourcePaths(\"field.subfield1\"));\n        assertEquals(Set.of(\"field\"), lookup.sourcePaths(\"field.subfield2\"));\n    }\n","date":"2020-12-24 02:19:02","endLine":126,"groupId":"57654","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"testSourcePathWithMultiFields","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/7f/4e05f3a398b4c08da8fbd8a14db5855a37d9c9.src","preCode":"    public void testSourcePathWithMultiFields() {\n        MockFieldMapper field = new MockFieldMapper.Builder(\"field\")\n            .addMultiField(new MockFieldMapper.Builder(\"field.subfield1\"))\n            .addMultiField(new MockFieldMapper.Builder(\"field.subfield2\"))\n            .build(new ContentPath());\n\n        FieldTypeLookup lookup = new FieldTypeLookup(singletonList(field), emptyList(), emptyList());\n\n        assertEquals(Set.of(\"field\"), lookup.sourcePaths(\"field\"));\n        assertEquals(Set.of(\"field\"), lookup.sourcePaths(\"field.subfield1\"));\n        assertEquals(Set.of(\"field\"), lookup.sourcePaths(\"field.subfield2\"));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/index/mapper/FieldTypeLookupTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":115,"status":"M"},{"authorDate":"2020-12-24 02:19:02","commitOrder":5,"curCode":"    public void testSourcePathsWithCopyTo() {\n        MockFieldMapper field = new MockFieldMapper.Builder(\"field\")\n            .addMultiField(new MockFieldMapper.Builder(\"field.subfield1\"))\n            .build(new ContentPath());\n\n        MockFieldMapper otherField = new MockFieldMapper.Builder(\"other_field\")\n            .copyTo(\"field\")\n            .build(new ContentPath());\n\n        FieldTypeLookup lookup = new FieldTypeLookup(\"_doc\", Arrays.asList(field, otherField), emptyList(), emptyList());\n\n        assertEquals(Set.of(\"other_field\", \"field\"), lookup.sourcePaths(\"field\"));\n        assertEquals(Set.of(\"other_field\", \"field\"), lookup.sourcePaths(\"field.subfield1\"));\n    }\n","date":"2020-12-24 02:19:02","endLine":141,"groupId":"7824","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"testSourcePathsWithCopyTo","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/7f/4e05f3a398b4c08da8fbd8a14db5855a37d9c9.src","preCode":"    public void testSourcePathsWithCopyTo() {\n        MockFieldMapper field = new MockFieldMapper.Builder(\"field\")\n            .addMultiField(new MockFieldMapper.Builder(\"field.subfield1\"))\n            .build(new ContentPath());\n\n        MockFieldMapper otherField = new MockFieldMapper.Builder(\"other_field\")\n            .copyTo(\"field\")\n            .build(new ContentPath());\n\n        FieldTypeLookup lookup = new FieldTypeLookup(Arrays.asList(field, otherField), emptyList(), emptyList());\n\n        assertEquals(Set.of(\"other_field\", \"field\"), lookup.sourcePaths(\"field\"));\n        assertEquals(Set.of(\"other_field\", \"field\"), lookup.sourcePaths(\"field.subfield1\"));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/index/mapper/FieldTypeLookupTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":128,"status":"M"}],"commitId":"3e3152406a4fda2cebeceac3d7fdae4071ce7ea6","commitMessage":"@@@Bust the request cache when the mapping changes (#66295)\n\nThis makes sure that we only serve a hit from the request cache if it\nwas build using the same mapping and that the same mapping is used for\nthe entire \"query phase\" of the search.\n\nCloses #62033","date":"2020-12-24 02:19:02","modifiedFileCount":"41","status":"M","submitter":"Nik Everett"},{"authorTime":"2021-02-06 04:13:05","codes":[{"authorDate":"2021-02-06 04:13:05","commitOrder":6,"curCode":"    public void testSourcePathWithMultiFields() {\n        MockFieldMapper field = new MockFieldMapper.Builder(\"field\")\n            .addMultiField(new MockFieldMapper.Builder(\"field.subfield1\"))\n            .addMultiField(new MockFieldMapper.Builder(\"field.subfield2\"))\n            .build(new ContentPath());\n\n        FieldTypeLookup lookup = new FieldTypeLookup(singletonList(field), emptyList(), emptyList());\n\n        assertEquals(Set.of(\"field\"), lookup.sourcePaths(\"field\"));\n        assertEquals(Set.of(\"field\"), lookup.sourcePaths(\"field.subfield1\"));\n        assertEquals(Set.of(\"field\"), lookup.sourcePaths(\"field.subfield2\"));\n    }\n","date":"2021-02-06 04:13:05","endLine":115,"groupId":"57654","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"testSourcePathWithMultiFields","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/eb/8327f766d39449598e59a2b968a829b5f2cd26.src","preCode":"    public void testSourcePathWithMultiFields() {\n        MockFieldMapper field = new MockFieldMapper.Builder(\"field\")\n            .addMultiField(new MockFieldMapper.Builder(\"field.subfield1\"))\n            .addMultiField(new MockFieldMapper.Builder(\"field.subfield2\"))\n            .build(new ContentPath());\n\n        FieldTypeLookup lookup = new FieldTypeLookup(\"_doc\", singletonList(field), emptyList(), emptyList());\n\n        assertEquals(Set.of(\"field\"), lookup.sourcePaths(\"field\"));\n        assertEquals(Set.of(\"field\"), lookup.sourcePaths(\"field.subfield1\"));\n        assertEquals(Set.of(\"field\"), lookup.sourcePaths(\"field.subfield2\"));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/index/mapper/FieldTypeLookupTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":104,"status":"M"},{"authorDate":"2021-02-06 04:13:05","commitOrder":6,"curCode":"    public void testSourcePathsWithCopyTo() {\n        MockFieldMapper field = new MockFieldMapper.Builder(\"field\")\n            .addMultiField(new MockFieldMapper.Builder(\"field.subfield1\"))\n            .build(new ContentPath());\n\n        MockFieldMapper otherField = new MockFieldMapper.Builder(\"other_field\")\n            .copyTo(\"field\")\n            .build(new ContentPath());\n\n        FieldTypeLookup lookup = new FieldTypeLookup(Arrays.asList(field, otherField), emptyList(), emptyList());\n\n        assertEquals(Set.of(\"other_field\", \"field\"), lookup.sourcePaths(\"field\"));\n        assertEquals(Set.of(\"other_field\", \"field\"), lookup.sourcePaths(\"field.subfield1\"));\n    }\n","date":"2021-02-06 04:13:05","endLine":130,"groupId":"5990","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"testSourcePathsWithCopyTo","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/eb/8327f766d39449598e59a2b968a829b5f2cd26.src","preCode":"    public void testSourcePathsWithCopyTo() {\n        MockFieldMapper field = new MockFieldMapper.Builder(\"field\")\n            .addMultiField(new MockFieldMapper.Builder(\"field.subfield1\"))\n            .build(new ContentPath());\n\n        MockFieldMapper otherField = new MockFieldMapper.Builder(\"other_field\")\n            .copyTo(\"field\")\n            .build(new ContentPath());\n\n        FieldTypeLookup lookup = new FieldTypeLookup(\"_doc\", Arrays.asList(field, otherField), emptyList(), emptyList());\n\n        assertEquals(Set.of(\"other_field\", \"field\"), lookup.sourcePaths(\"field\"));\n        assertEquals(Set.of(\"other_field\", \"field\"), lookup.sourcePaths(\"field.subfield1\"));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/index/mapper/FieldTypeLookupTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":117,"status":"M"}],"commitId":"af1cc495b2d8d5a54327a596a9a6044d3aa8d3bc","commitMessage":"@@@Remove support for _type in searches (#68564)\n\nTypes are no longer allowed in requests in 8.0.  so we can remove support for\nusing the `_type` field within a search request.\n\nRelates to #41059.\nCloses #68311.","date":"2021-02-06 04:13:05","modifiedFileCount":"15","status":"M","submitter":"Julie Tibshirani"},{"authorTime":"2021-09-08 23:34:14","codes":[{"authorDate":"2021-09-08 23:34:14","commitOrder":7,"curCode":"    public void testSourcePathWithMultiFields() {\n        MockFieldMapper field = new MockFieldMapper.Builder(\"field\")\n            .addMultiField(new MockFieldMapper.Builder(\"field.subfield1\"))\n            .addMultiField(new MockFieldMapper.Builder(\"field.subfield2\"))\n            .build(MapperBuilderContext.ROOT);\n\n        FieldTypeLookup lookup = new FieldTypeLookup(singletonList(field), emptyList(), emptyList());\n\n        assertEquals(Set.of(\"field\"), lookup.sourcePaths(\"field\"));\n        assertEquals(Set.of(\"field\"), lookup.sourcePaths(\"field.subfield1\"));\n        assertEquals(Set.of(\"field\"), lookup.sourcePaths(\"field.subfield2\"));\n    }\n","date":"2021-09-08 23:34:14","endLine":120,"groupId":"102884","id":13,"instanceNumber":1,"isCurCommit":1,"methodName":"testSourcePathWithMultiFields","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/85/f866606e3764cd927eeb908461b890ba0933a9.src","preCode":"    public void testSourcePathWithMultiFields() {\n        MockFieldMapper field = new MockFieldMapper.Builder(\"field\")\n            .addMultiField(new MockFieldMapper.Builder(\"field.subfield1\"))\n            .addMultiField(new MockFieldMapper.Builder(\"field.subfield2\"))\n            .build(new ContentPath());\n\n        FieldTypeLookup lookup = new FieldTypeLookup(singletonList(field), emptyList(), emptyList());\n\n        assertEquals(Set.of(\"field\"), lookup.sourcePaths(\"field\"));\n        assertEquals(Set.of(\"field\"), lookup.sourcePaths(\"field.subfield1\"));\n        assertEquals(Set.of(\"field\"), lookup.sourcePaths(\"field.subfield2\"));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/index/mapper/FieldTypeLookupTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":109,"status":"M"},{"authorDate":"2021-09-08 23:34:14","commitOrder":7,"curCode":"    public void testSourcePathsWithCopyTo() {\n        MockFieldMapper field = new MockFieldMapper.Builder(\"field\")\n            .addMultiField(new MockFieldMapper.Builder(\"field.subfield1\"))\n            .build(MapperBuilderContext.ROOT);\n\n        MockFieldMapper otherField = new MockFieldMapper.Builder(\"other_field\")\n            .copyTo(\"field\")\n            .build(MapperBuilderContext.ROOT);\n\n        FieldTypeLookup lookup = new FieldTypeLookup(Arrays.asList(field, otherField), emptyList(), emptyList());\n\n        assertEquals(Set.of(\"other_field\", \"field\"), lookup.sourcePaths(\"field\"));\n        assertEquals(Set.of(\"other_field\", \"field\"), lookup.sourcePaths(\"field.subfield1\"));\n    }\n","date":"2021-09-08 23:34:14","endLine":135,"groupId":"102884","id":14,"instanceNumber":2,"isCurCommit":1,"methodName":"testSourcePathsWithCopyTo","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/85/f866606e3764cd927eeb908461b890ba0933a9.src","preCode":"    public void testSourcePathsWithCopyTo() {\n        MockFieldMapper field = new MockFieldMapper.Builder(\"field\")\n            .addMultiField(new MockFieldMapper.Builder(\"field.subfield1\"))\n            .build(new ContentPath());\n\n        MockFieldMapper otherField = new MockFieldMapper.Builder(\"other_field\")\n            .copyTo(\"field\")\n            .build(new ContentPath());\n\n        FieldTypeLookup lookup = new FieldTypeLookup(Arrays.asList(field, otherField), emptyList(), emptyList());\n\n        assertEquals(Set.of(\"other_field\", \"field\"), lookup.sourcePaths(\"field\"));\n        assertEquals(Set.of(\"other_field\", \"field\"), lookup.sourcePaths(\"field.subfield1\"));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/index/mapper/FieldTypeLookupTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":122,"status":"M"}],"commitId":"9312eba5ed2a4174e0ac1ce823e98f47a19b4fc1","commitMessage":"@@@Change Mapper.build() to take a context object (#77108)\n\nMapper.build() currently takes a ContentPath object that it can use to generate\nfield type names that will include its parent names. We would like to expand field types\nto include more information about their parents.  and ContentPath does not hold this\ninformation. This commit replaces the ContentPath parameter with a new\nMapperBuilderContext.  which currently holds only the content path information but\ncan be expanded in future to hold parent relationship information.\n\nRelates to #75474","date":"2021-09-08 23:34:14","modifiedFileCount":"97","status":"M","submitter":"Alan Woodward"}]
