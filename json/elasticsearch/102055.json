[{"authorTime":"2018-06-16 01:16:05","codes":[{"authorDate":"2018-06-16 01:16:05","commitOrder":1,"curCode":"    public void testAddWriteOnlyWithNoExistingAliases() {\n        ClusterState before = createIndex(ClusterState.builder(ClusterName.DEFAULT).build(), \"test\");\n\n        ClusterState after = service.innerExecute(before, Arrays.asList(\n            new AliasAction.Add(\"test\", \"alias\", null, null, null, false)));\n        assertFalse(after.metaData().index(\"test\").getAliases().get(\"alias\").writeIndex());\n        assertThat(((AliasOrIndex.Alias) after.metaData().getAliasAndIndexLookup().get(\"alias\")).getWriteIndex(),\n            equalTo(after.metaData().index(\"test\")));\n\n        after = service.innerExecute(before, Arrays.asList(\n            new AliasAction.Add(\"test\", \"alias\", null, null, null, null)));\n        assertNull(after.metaData().index(\"test\").getAliases().get(\"alias\").writeIndex());\n        assertThat(((AliasOrIndex.Alias) after.metaData().getAliasAndIndexLookup().get(\"alias\")).getWriteIndex(),\n            equalTo(after.metaData().index(\"test\")));\n\n        after = service.innerExecute(before, Arrays.asList(\n            new AliasAction.Add(\"test\", \"alias\", null, null, null, true)));\n        assertTrue(after.metaData().index(\"test\").getAliases().get(\"alias\").writeIndex());\n        assertThat(((AliasOrIndex.Alias) after.metaData().getAliasAndIndexLookup().get(\"alias\")).getWriteIndex(),\n            equalTo(after.metaData().index(\"test\")));\n    }\n","date":"2018-06-16 01:16:05","endLine":153,"groupId":"23055","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testAddWriteOnlyWithNoExistingAliases","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/81/2dfd8f6f6867752f68857c1801bc7e0b4d51fa.src","preCode":"    public void testAddWriteOnlyWithNoExistingAliases() {\n        ClusterState before = createIndex(ClusterState.builder(ClusterName.DEFAULT).build(), \"test\");\n\n        ClusterState after = service.innerExecute(before, Arrays.asList(\n            new AliasAction.Add(\"test\", \"alias\", null, null, null, false)));\n        assertFalse(after.metaData().index(\"test\").getAliases().get(\"alias\").writeIndex());\n        assertThat(((AliasOrIndex.Alias) after.metaData().getAliasAndIndexLookup().get(\"alias\")).getWriteIndex(),\n            equalTo(after.metaData().index(\"test\")));\n\n        after = service.innerExecute(before, Arrays.asList(\n            new AliasAction.Add(\"test\", \"alias\", null, null, null, null)));\n        assertNull(after.metaData().index(\"test\").getAliases().get(\"alias\").writeIndex());\n        assertThat(((AliasOrIndex.Alias) after.metaData().getAliasAndIndexLookup().get(\"alias\")).getWriteIndex(),\n            equalTo(after.metaData().index(\"test\")));\n\n        after = service.innerExecute(before, Arrays.asList(\n            new AliasAction.Add(\"test\", \"alias\", null, null, null, true)));\n        assertTrue(after.metaData().index(\"test\").getAliases().get(\"alias\").writeIndex());\n        assertThat(((AliasOrIndex.Alias) after.metaData().getAliasAndIndexLookup().get(\"alias\")).getWriteIndex(),\n            equalTo(after.metaData().index(\"test\")));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/cluster/metadata/MetaDataIndexAliasesServiceTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":133,"status":"B"},{"authorDate":"2018-06-16 01:16:05","commitOrder":1,"curCode":"    public void testAddWriteOnlyWithExistingWriteIndex() {\n        IndexMetaData.Builder indexMetaData = IndexMetaData.builder(\"test\")\n            .settings(settings(Version.CURRENT)).numberOfShards(1).numberOfReplicas(1);\n        IndexMetaData.Builder indexMetaData2 = IndexMetaData.builder(\"test2\")\n            .putAlias(AliasMetaData.builder(\"alias\").writeIndex(true).build())\n            .settings(settings(Version.CURRENT)).numberOfShards(1).numberOfReplicas(1);\n        ClusterState before = ClusterState.builder(ClusterName.DEFAULT)\n            .metaData(MetaData.builder().put(indexMetaData).put(indexMetaData2)).build();\n\n        ClusterState after = service.innerExecute(before, Arrays.asList(\n            new AliasAction.Add(\"test\", \"alias\", null, null, null, null)));\n        assertNull(after.metaData().index(\"test\").getAliases().get(\"alias\").writeIndex());\n        assertThat(((AliasOrIndex.Alias) after.metaData().getAliasAndIndexLookup().get(\"alias\")).getWriteIndex(),\n            equalTo(after.metaData().index(\"test2\")));\n\n        Exception exception = expectThrows(IllegalStateException.class, () -> service.innerExecute(before, Arrays.asList(\n            new AliasAction.Add(\"test\", \"alias\", null, null, null, true))));\n        assertThat(exception.getMessage(), startsWith(\"alias [alias] has more than one write index [\"));\n    }\n","date":"2018-06-16 01:16:05","endLine":173,"groupId":"22670","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testAddWriteOnlyWithExistingWriteIndex","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/81/2dfd8f6f6867752f68857c1801bc7e0b4d51fa.src","preCode":"    public void testAddWriteOnlyWithExistingWriteIndex() {\n        IndexMetaData.Builder indexMetaData = IndexMetaData.builder(\"test\")\n            .settings(settings(Version.CURRENT)).numberOfShards(1).numberOfReplicas(1);\n        IndexMetaData.Builder indexMetaData2 = IndexMetaData.builder(\"test2\")\n            .putAlias(AliasMetaData.builder(\"alias\").writeIndex(true).build())\n            .settings(settings(Version.CURRENT)).numberOfShards(1).numberOfReplicas(1);\n        ClusterState before = ClusterState.builder(ClusterName.DEFAULT)\n            .metaData(MetaData.builder().put(indexMetaData).put(indexMetaData2)).build();\n\n        ClusterState after = service.innerExecute(before, Arrays.asList(\n            new AliasAction.Add(\"test\", \"alias\", null, null, null, null)));\n        assertNull(after.metaData().index(\"test\").getAliases().get(\"alias\").writeIndex());\n        assertThat(((AliasOrIndex.Alias) after.metaData().getAliasAndIndexLookup().get(\"alias\")).getWriteIndex(),\n            equalTo(after.metaData().index(\"test2\")));\n\n        Exception exception = expectThrows(IllegalStateException.class, () -> service.innerExecute(before, Arrays.asList(\n            new AliasAction.Add(\"test\", \"alias\", null, null, null, true))));\n        assertThat(exception.getMessage(), startsWith(\"alias [alias] has more than one write index [\"));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/cluster/metadata/MetaDataIndexAliasesServiceTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":155,"status":"B"}],"commitId":"c54937731e9abbc1a0ae8145416fab34a3393198","commitMessage":"@@@Merge branch 'master' into index-lifecycle\n","date":"2018-06-16 01:16:05","modifiedFileCount":"33","status":"B","submitter":"Tal Levy"},{"authorTime":"2018-06-16 01:16:05","codes":[{"authorDate":"2018-07-10 07:44:12","commitOrder":2,"curCode":"    public void testAddWriteOnlyWithNoExistingAliases() {\n        ClusterState before = createIndex(ClusterState.builder(ClusterName.DEFAULT).build(), \"test\");\n\n        ClusterState after = service.innerExecute(before, Arrays.asList(\n            new AliasAction.Add(\"test\", \"alias\", null, null, null, false)));\n        assertFalse(after.metaData().index(\"test\").getAliases().get(\"alias\").writeIndex());\n        assertNull(((AliasOrIndex.Alias) after.metaData().getAliasAndIndexLookup().get(\"alias\")).getWriteIndex());\n\n        after = service.innerExecute(before, Arrays.asList(\n            new AliasAction.Add(\"test\", \"alias\", null, null, null, null)));\n        assertNull(after.metaData().index(\"test\").getAliases().get(\"alias\").writeIndex());\n        assertThat(((AliasOrIndex.Alias) after.metaData().getAliasAndIndexLookup().get(\"alias\")).getWriteIndex(),\n            equalTo(after.metaData().index(\"test\")));\n\n        after = service.innerExecute(before, Arrays.asList(\n            new AliasAction.Add(\"test\", \"alias\", null, null, null, true)));\n        assertTrue(after.metaData().index(\"test\").getAliases().get(\"alias\").writeIndex());\n        assertThat(((AliasOrIndex.Alias) after.metaData().getAliasAndIndexLookup().get(\"alias\")).getWriteIndex(),\n            equalTo(after.metaData().index(\"test\")));\n    }\n","date":"2018-07-10 07:44:12","endLine":152,"groupId":"23055","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testAddWriteOnlyWithNoExistingAliases","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/e1/fbc47c4a02216ec79df9a080ff0d69a422021d.src","preCode":"    public void testAddWriteOnlyWithNoExistingAliases() {\n        ClusterState before = createIndex(ClusterState.builder(ClusterName.DEFAULT).build(), \"test\");\n\n        ClusterState after = service.innerExecute(before, Arrays.asList(\n            new AliasAction.Add(\"test\", \"alias\", null, null, null, false)));\n        assertFalse(after.metaData().index(\"test\").getAliases().get(\"alias\").writeIndex());\n        assertThat(((AliasOrIndex.Alias) after.metaData().getAliasAndIndexLookup().get(\"alias\")).getWriteIndex(),\n            equalTo(after.metaData().index(\"test\")));\n\n        after = service.innerExecute(before, Arrays.asList(\n            new AliasAction.Add(\"test\", \"alias\", null, null, null, null)));\n        assertNull(after.metaData().index(\"test\").getAliases().get(\"alias\").writeIndex());\n        assertThat(((AliasOrIndex.Alias) after.metaData().getAliasAndIndexLookup().get(\"alias\")).getWriteIndex(),\n            equalTo(after.metaData().index(\"test\")));\n\n        after = service.innerExecute(before, Arrays.asList(\n            new AliasAction.Add(\"test\", \"alias\", null, null, null, true)));\n        assertTrue(after.metaData().index(\"test\").getAliases().get(\"alias\").writeIndex());\n        assertThat(((AliasOrIndex.Alias) after.metaData().getAliasAndIndexLookup().get(\"alias\")).getWriteIndex(),\n            equalTo(after.metaData().index(\"test\")));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/cluster/metadata/MetaDataIndexAliasesServiceTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":133,"status":"M"},{"authorDate":"2018-06-16 01:16:05","commitOrder":2,"curCode":"    public void testAddWriteOnlyWithExistingWriteIndex() {\n        IndexMetaData.Builder indexMetaData = IndexMetaData.builder(\"test\")\n            .settings(settings(Version.CURRENT)).numberOfShards(1).numberOfReplicas(1);\n        IndexMetaData.Builder indexMetaData2 = IndexMetaData.builder(\"test2\")\n            .putAlias(AliasMetaData.builder(\"alias\").writeIndex(true).build())\n            .settings(settings(Version.CURRENT)).numberOfShards(1).numberOfReplicas(1);\n        ClusterState before = ClusterState.builder(ClusterName.DEFAULT)\n            .metaData(MetaData.builder().put(indexMetaData).put(indexMetaData2)).build();\n\n        ClusterState after = service.innerExecute(before, Arrays.asList(\n            new AliasAction.Add(\"test\", \"alias\", null, null, null, null)));\n        assertNull(after.metaData().index(\"test\").getAliases().get(\"alias\").writeIndex());\n        assertThat(((AliasOrIndex.Alias) after.metaData().getAliasAndIndexLookup().get(\"alias\")).getWriteIndex(),\n            equalTo(after.metaData().index(\"test2\")));\n\n        Exception exception = expectThrows(IllegalStateException.class, () -> service.innerExecute(before, Arrays.asList(\n            new AliasAction.Add(\"test\", \"alias\", null, null, null, true))));\n        assertThat(exception.getMessage(), startsWith(\"alias [alias] has more than one write index [\"));\n    }\n","date":"2018-06-16 01:16:05","endLine":173,"groupId":"22670","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testAddWriteOnlyWithExistingWriteIndex","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/81/2dfd8f6f6867752f68857c1801bc7e0b4d51fa.src","preCode":"    public void testAddWriteOnlyWithExistingWriteIndex() {\n        IndexMetaData.Builder indexMetaData = IndexMetaData.builder(\"test\")\n            .settings(settings(Version.CURRENT)).numberOfShards(1).numberOfReplicas(1);\n        IndexMetaData.Builder indexMetaData2 = IndexMetaData.builder(\"test2\")\n            .putAlias(AliasMetaData.builder(\"alias\").writeIndex(true).build())\n            .settings(settings(Version.CURRENT)).numberOfShards(1).numberOfReplicas(1);\n        ClusterState before = ClusterState.builder(ClusterName.DEFAULT)\n            .metaData(MetaData.builder().put(indexMetaData).put(indexMetaData2)).build();\n\n        ClusterState after = service.innerExecute(before, Arrays.asList(\n            new AliasAction.Add(\"test\", \"alias\", null, null, null, null)));\n        assertNull(after.metaData().index(\"test\").getAliases().get(\"alias\").writeIndex());\n        assertThat(((AliasOrIndex.Alias) after.metaData().getAliasAndIndexLookup().get(\"alias\")).getWriteIndex(),\n            equalTo(after.metaData().index(\"test2\")));\n\n        Exception exception = expectThrows(IllegalStateException.class, () -> service.innerExecute(before, Arrays.asList(\n            new AliasAction.Add(\"test\", \"alias\", null, null, null, true))));\n        assertThat(exception.getMessage(), startsWith(\"alias [alias] has more than one write index [\"));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/cluster/metadata/MetaDataIndexAliasesServiceTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":155,"status":"N"}],"commitId":"e9cd0556c167b257bb588af5547923e5f13a99ca","commitMessage":"@@@Merge branch 'master' into index-lifecycle\n","date":"2018-07-10 07:44:12","modifiedFileCount":"627","status":"M","submitter":"Tal Levy"},{"authorTime":"2019-04-23 23:55:27","codes":[{"authorDate":"2019-04-23 23:55:27","commitOrder":3,"curCode":"    public void testAddWriteOnlyWithNoExistingAliases() {\n        ClusterState before = createIndex(ClusterState.builder(ClusterName.DEFAULT).build(), \"test\");\n\n        ClusterState after = service.innerExecute(before, Arrays.asList(\n            new AliasAction.Add(\"test\", \"alias\", null, null, null, false)));\n        assertFalse(after.metaData().index(\"test\").getAliases().get(\"alias\").writeIndex());\n        assertNull(((AliasOrIndex.Alias) after.metaData().getAliasAndIndexLookup().get(\"alias\")).getWriteIndex());\n        assertAliasesVersionIncreased(\"test\", before, after);\n\n        after = service.innerExecute(before, Arrays.asList(\n            new AliasAction.Add(\"test\", \"alias\", null, null, null, null)));\n        assertNull(after.metaData().index(\"test\").getAliases().get(\"alias\").writeIndex());\n        assertThat(((AliasOrIndex.Alias) after.metaData().getAliasAndIndexLookup().get(\"alias\")).getWriteIndex(),\n            equalTo(after.metaData().index(\"test\")));\n        assertAliasesVersionIncreased(\"test\", before, after);\n\n        after = service.innerExecute(before, Arrays.asList(\n            new AliasAction.Add(\"test\", \"alias\", null, null, null, true)));\n        assertTrue(after.metaData().index(\"test\").getAliases().get(\"alias\").writeIndex());\n        assertThat(((AliasOrIndex.Alias) after.metaData().getAliasAndIndexLookup().get(\"alias\")).getWriteIndex(),\n            equalTo(after.metaData().index(\"test\")));\n        assertAliasesVersionIncreased(\"test\", before, after);\n    }\n","date":"2019-04-23 23:55:27","endLine":250,"groupId":"22656","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testAddWriteOnlyWithNoExistingAliases","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/e0/7865f308ef504f499128970a733ea63572bb22.src","preCode":"    public void testAddWriteOnlyWithNoExistingAliases() {\n        ClusterState before = createIndex(ClusterState.builder(ClusterName.DEFAULT).build(), \"test\");\n\n        ClusterState after = service.innerExecute(before, Arrays.asList(\n            new AliasAction.Add(\"test\", \"alias\", null, null, null, false)));\n        assertFalse(after.metaData().index(\"test\").getAliases().get(\"alias\").writeIndex());\n        assertNull(((AliasOrIndex.Alias) after.metaData().getAliasAndIndexLookup().get(\"alias\")).getWriteIndex());\n\n        after = service.innerExecute(before, Arrays.asList(\n            new AliasAction.Add(\"test\", \"alias\", null, null, null, null)));\n        assertNull(after.metaData().index(\"test\").getAliases().get(\"alias\").writeIndex());\n        assertThat(((AliasOrIndex.Alias) after.metaData().getAliasAndIndexLookup().get(\"alias\")).getWriteIndex(),\n            equalTo(after.metaData().index(\"test\")));\n\n        after = service.innerExecute(before, Arrays.asList(\n            new AliasAction.Add(\"test\", \"alias\", null, null, null, true)));\n        assertTrue(after.metaData().index(\"test\").getAliases().get(\"alias\").writeIndex());\n        assertThat(((AliasOrIndex.Alias) after.metaData().getAliasAndIndexLookup().get(\"alias\")).getWriteIndex(),\n            equalTo(after.metaData().index(\"test\")));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/cluster/metadata/MetaDataIndexAliasesServiceTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":228,"status":"M"},{"authorDate":"2019-04-23 23:55:27","commitOrder":3,"curCode":"    public void testAddWriteOnlyWithExistingWriteIndex() {\n        IndexMetaData.Builder indexMetaData = IndexMetaData.builder(\"test\")\n            .settings(settings(Version.CURRENT)).numberOfShards(1).numberOfReplicas(1);\n        IndexMetaData.Builder indexMetaData2 = IndexMetaData.builder(\"test2\")\n            .putAlias(AliasMetaData.builder(\"alias\").writeIndex(true).build())\n            .settings(settings(Version.CURRENT)).numberOfShards(1).numberOfReplicas(1);\n        ClusterState before = ClusterState.builder(ClusterName.DEFAULT)\n            .metaData(MetaData.builder().put(indexMetaData).put(indexMetaData2)).build();\n\n        ClusterState after = service.innerExecute(before, Arrays.asList(\n            new AliasAction.Add(\"test\", \"alias\", null, null, null, null)));\n        assertNull(after.metaData().index(\"test\").getAliases().get(\"alias\").writeIndex());\n        assertThat(((AliasOrIndex.Alias) after.metaData().getAliasAndIndexLookup().get(\"alias\")).getWriteIndex(),\n            equalTo(after.metaData().index(\"test2\")));\n        assertAliasesVersionIncreased(\"test\", before, after);\n        assertAliasesVersionUnchanged(\"test2\", before, after);\n\n        Exception exception = expectThrows(IllegalStateException.class, () -> service.innerExecute(before, Arrays.asList(\n            new AliasAction.Add(\"test\", \"alias\", null, null, null, true))));\n        assertThat(exception.getMessage(), startsWith(\"alias [alias] has more than one write index [\"));\n    }\n","date":"2019-04-23 23:55:27","endLine":272,"groupId":"22670","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testAddWriteOnlyWithExistingWriteIndex","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/e0/7865f308ef504f499128970a733ea63572bb22.src","preCode":"    public void testAddWriteOnlyWithExistingWriteIndex() {\n        IndexMetaData.Builder indexMetaData = IndexMetaData.builder(\"test\")\n            .settings(settings(Version.CURRENT)).numberOfShards(1).numberOfReplicas(1);\n        IndexMetaData.Builder indexMetaData2 = IndexMetaData.builder(\"test2\")\n            .putAlias(AliasMetaData.builder(\"alias\").writeIndex(true).build())\n            .settings(settings(Version.CURRENT)).numberOfShards(1).numberOfReplicas(1);\n        ClusterState before = ClusterState.builder(ClusterName.DEFAULT)\n            .metaData(MetaData.builder().put(indexMetaData).put(indexMetaData2)).build();\n\n        ClusterState after = service.innerExecute(before, Arrays.asList(\n            new AliasAction.Add(\"test\", \"alias\", null, null, null, null)));\n        assertNull(after.metaData().index(\"test\").getAliases().get(\"alias\").writeIndex());\n        assertThat(((AliasOrIndex.Alias) after.metaData().getAliasAndIndexLookup().get(\"alias\")).getWriteIndex(),\n            equalTo(after.metaData().index(\"test2\")));\n\n        Exception exception = expectThrows(IllegalStateException.class, () -> service.innerExecute(before, Arrays.asList(\n            new AliasAction.Add(\"test\", \"alias\", null, null, null, true))));\n        assertThat(exception.getMessage(), startsWith(\"alias [alias] has more than one write index [\"));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/cluster/metadata/MetaDataIndexAliasesServiceTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":252,"status":"M"}],"commitId":"ce5e0762d8184794e0b8de012223559d6047684a","commitMessage":"@@@Introduce aliases version (#41397)\n\nThis commit introduces aliases versions to index metadata. This will be\nuseful in CCR when we replicate aliases.","date":"2019-04-23 23:55:27","modifiedFileCount":"6","status":"M","submitter":"Jason Tedor"},{"authorTime":"2019-12-21 00:29:37","codes":[{"authorDate":"2019-12-21 00:29:37","commitOrder":4,"curCode":"    public void testAddWriteOnlyWithNoExistingAliases() {\n        ClusterState before = createIndex(ClusterState.builder(ClusterName.DEFAULT).build(), \"test\");\n\n        ClusterState after = service.applyAliasActions(before, Arrays.asList(\n            new AliasAction.Add(\"test\", \"alias\", null, null, null, false)));\n        assertFalse(after.metaData().index(\"test\").getAliases().get(\"alias\").writeIndex());\n        assertNull(((AliasOrIndex.Alias) after.metaData().getAliasAndIndexLookup().get(\"alias\")).getWriteIndex());\n        assertAliasesVersionIncreased(\"test\", before, after);\n\n        after = service.applyAliasActions(before, Arrays.asList(\n            new AliasAction.Add(\"test\", \"alias\", null, null, null, null)));\n        assertNull(after.metaData().index(\"test\").getAliases().get(\"alias\").writeIndex());\n        assertThat(((AliasOrIndex.Alias) after.metaData().getAliasAndIndexLookup().get(\"alias\")).getWriteIndex(),\n            equalTo(after.metaData().index(\"test\")));\n        assertAliasesVersionIncreased(\"test\", before, after);\n\n        after = service.applyAliasActions(before, Arrays.asList(\n            new AliasAction.Add(\"test\", \"alias\", null, null, null, true)));\n        assertTrue(after.metaData().index(\"test\").getAliases().get(\"alias\").writeIndex());\n        assertThat(((AliasOrIndex.Alias) after.metaData().getAliasAndIndexLookup().get(\"alias\")).getWriteIndex(),\n            equalTo(after.metaData().index(\"test\")));\n        assertAliasesVersionIncreased(\"test\", before, after);\n    }\n","date":"2019-12-21 00:29:37","endLine":250,"groupId":"22656","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"testAddWriteOnlyWithNoExistingAliases","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/9b/320ae9f27e796aa1161c41e025cbc2cfa576fe.src","preCode":"    public void testAddWriteOnlyWithNoExistingAliases() {\n        ClusterState before = createIndex(ClusterState.builder(ClusterName.DEFAULT).build(), \"test\");\n\n        ClusterState after = service.innerExecute(before, Arrays.asList(\n            new AliasAction.Add(\"test\", \"alias\", null, null, null, false)));\n        assertFalse(after.metaData().index(\"test\").getAliases().get(\"alias\").writeIndex());\n        assertNull(((AliasOrIndex.Alias) after.metaData().getAliasAndIndexLookup().get(\"alias\")).getWriteIndex());\n        assertAliasesVersionIncreased(\"test\", before, after);\n\n        after = service.innerExecute(before, Arrays.asList(\n            new AliasAction.Add(\"test\", \"alias\", null, null, null, null)));\n        assertNull(after.metaData().index(\"test\").getAliases().get(\"alias\").writeIndex());\n        assertThat(((AliasOrIndex.Alias) after.metaData().getAliasAndIndexLookup().get(\"alias\")).getWriteIndex(),\n            equalTo(after.metaData().index(\"test\")));\n        assertAliasesVersionIncreased(\"test\", before, after);\n\n        after = service.innerExecute(before, Arrays.asList(\n            new AliasAction.Add(\"test\", \"alias\", null, null, null, true)));\n        assertTrue(after.metaData().index(\"test\").getAliases().get(\"alias\").writeIndex());\n        assertThat(((AliasOrIndex.Alias) after.metaData().getAliasAndIndexLookup().get(\"alias\")).getWriteIndex(),\n            equalTo(after.metaData().index(\"test\")));\n        assertAliasesVersionIncreased(\"test\", before, after);\n    }\n","realPath":"server/src/test/java/org/elasticsearch/cluster/metadata/MetaDataIndexAliasesServiceTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":228,"status":"M"},{"authorDate":"2019-12-21 00:29:37","commitOrder":4,"curCode":"    public void testAddWriteOnlyWithExistingWriteIndex() {\n        IndexMetaData.Builder indexMetaData = IndexMetaData.builder(\"test\")\n            .settings(settings(Version.CURRENT)).numberOfShards(1).numberOfReplicas(1);\n        IndexMetaData.Builder indexMetaData2 = IndexMetaData.builder(\"test2\")\n            .putAlias(AliasMetaData.builder(\"alias\").writeIndex(true).build())\n            .settings(settings(Version.CURRENT)).numberOfShards(1).numberOfReplicas(1);\n        ClusterState before = ClusterState.builder(ClusterName.DEFAULT)\n            .metaData(MetaData.builder().put(indexMetaData).put(indexMetaData2)).build();\n\n        ClusterState after = service.applyAliasActions(before, Arrays.asList(\n            new AliasAction.Add(\"test\", \"alias\", null, null, null, null)));\n        assertNull(after.metaData().index(\"test\").getAliases().get(\"alias\").writeIndex());\n        assertThat(((AliasOrIndex.Alias) after.metaData().getAliasAndIndexLookup().get(\"alias\")).getWriteIndex(),\n            equalTo(after.metaData().index(\"test2\")));\n        assertAliasesVersionIncreased(\"test\", before, after);\n        assertAliasesVersionUnchanged(\"test2\", before, after);\n\n        Exception exception = expectThrows(IllegalStateException.class, () -> service.applyAliasActions(before, Arrays.asList(\n            new AliasAction.Add(\"test\", \"alias\", null, null, null, true))));\n        assertThat(exception.getMessage(), startsWith(\"alias [alias] has more than one write index [\"));\n    }\n","date":"2019-12-21 00:29:37","endLine":272,"groupId":"22670","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"testAddWriteOnlyWithExistingWriteIndex","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/9b/320ae9f27e796aa1161c41e025cbc2cfa576fe.src","preCode":"    public void testAddWriteOnlyWithExistingWriteIndex() {\n        IndexMetaData.Builder indexMetaData = IndexMetaData.builder(\"test\")\n            .settings(settings(Version.CURRENT)).numberOfShards(1).numberOfReplicas(1);\n        IndexMetaData.Builder indexMetaData2 = IndexMetaData.builder(\"test2\")\n            .putAlias(AliasMetaData.builder(\"alias\").writeIndex(true).build())\n            .settings(settings(Version.CURRENT)).numberOfShards(1).numberOfReplicas(1);\n        ClusterState before = ClusterState.builder(ClusterName.DEFAULT)\n            .metaData(MetaData.builder().put(indexMetaData).put(indexMetaData2)).build();\n\n        ClusterState after = service.innerExecute(before, Arrays.asList(\n            new AliasAction.Add(\"test\", \"alias\", null, null, null, null)));\n        assertNull(after.metaData().index(\"test\").getAliases().get(\"alias\").writeIndex());\n        assertThat(((AliasOrIndex.Alias) after.metaData().getAliasAndIndexLookup().get(\"alias\")).getWriteIndex(),\n            equalTo(after.metaData().index(\"test2\")));\n        assertAliasesVersionIncreased(\"test\", before, after);\n        assertAliasesVersionUnchanged(\"test2\", before, after);\n\n        Exception exception = expectThrows(IllegalStateException.class, () -> service.innerExecute(before, Arrays.asList(\n            new AliasAction.Add(\"test\", \"alias\", null, null, null, true))));\n        assertThat(exception.getMessage(), startsWith(\"alias [alias] has more than one write index [\"));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/cluster/metadata/MetaDataIndexAliasesServiceTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":252,"status":"M"}],"commitId":"1ba4339a0c73ef3354b8c8b44b628fc55f1dbc78","commitMessage":"@@@Make the TransportRolloverAction execute in one cluster state update (#50388)\n\nThis commit makes the TransportRolloverAction more resilient.  by having it execute\nonly one cluster state update that creates the new (rollover index).  rolls over\nthe alias from the source to the target index and set the RolloverInfo on the\nsource index. Before these 3 steps were represented as 3 chained cluster state\nupdates.  which would've seen the user manually intervene if.  say.  the alias\nrollover cluster state update (second in the chain) failed but the creation of\nthe rollover index (first in the chain) update succeeded\n\n* Rename innerExecute to applyAliasActions\n\nCo-authored-by: Elastic Machine <elasticmachine@users.noreply.github.com>\n","date":"2019-12-21 00:29:37","modifiedFileCount":"5","status":"M","submitter":"Andrei Dan"},{"authorTime":"2020-03-04 07:30:22","codes":[{"authorDate":"2020-03-04 07:30:22","commitOrder":5,"curCode":"    public void testAddWriteOnlyWithNoExistingAliases() {\n        ClusterState before = createIndex(ClusterState.builder(ClusterName.DEFAULT).build(), \"test\");\n\n        ClusterState after = service.applyAliasActions(before, Arrays.asList(\n            new AliasAction.Add(\"test\", \"alias\", null, null, null, false, null)));\n        assertFalse(after.metaData().index(\"test\").getAliases().get(\"alias\").writeIndex());\n        assertNull(((AliasOrIndex.Alias) after.metaData().getAliasAndIndexLookup().get(\"alias\")).getWriteIndex());\n        assertAliasesVersionIncreased(\"test\", before, after);\n\n        after = service.applyAliasActions(before, Arrays.asList(\n            new AliasAction.Add(\"test\", \"alias\", null, null, null, null, null)));\n        assertNull(after.metaData().index(\"test\").getAliases().get(\"alias\").writeIndex());\n        assertThat(((AliasOrIndex.Alias) after.metaData().getAliasAndIndexLookup().get(\"alias\")).getWriteIndex(),\n            equalTo(after.metaData().index(\"test\")));\n        assertAliasesVersionIncreased(\"test\", before, after);\n\n        after = service.applyAliasActions(before, Arrays.asList(\n            new AliasAction.Add(\"test\", \"alias\", null, null, null, true, null)));\n        assertTrue(after.metaData().index(\"test\").getAliases().get(\"alias\").writeIndex());\n        assertThat(((AliasOrIndex.Alias) after.metaData().getAliasAndIndexLookup().get(\"alias\")).getWriteIndex(),\n            equalTo(after.metaData().index(\"test\")));\n        assertAliasesVersionIncreased(\"test\", before, after);\n    }\n","date":"2020-03-04 07:30:22","endLine":253,"groupId":"22656","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"testAddWriteOnlyWithNoExistingAliases","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/c0/10927bf5c83c43755eae3da09cd2a8360ccc2f.src","preCode":"    public void testAddWriteOnlyWithNoExistingAliases() {\n        ClusterState before = createIndex(ClusterState.builder(ClusterName.DEFAULT).build(), \"test\");\n\n        ClusterState after = service.applyAliasActions(before, Arrays.asList(\n            new AliasAction.Add(\"test\", \"alias\", null, null, null, false)));\n        assertFalse(after.metaData().index(\"test\").getAliases().get(\"alias\").writeIndex());\n        assertNull(((AliasOrIndex.Alias) after.metaData().getAliasAndIndexLookup().get(\"alias\")).getWriteIndex());\n        assertAliasesVersionIncreased(\"test\", before, after);\n\n        after = service.applyAliasActions(before, Arrays.asList(\n            new AliasAction.Add(\"test\", \"alias\", null, null, null, null)));\n        assertNull(after.metaData().index(\"test\").getAliases().get(\"alias\").writeIndex());\n        assertThat(((AliasOrIndex.Alias) after.metaData().getAliasAndIndexLookup().get(\"alias\")).getWriteIndex(),\n            equalTo(after.metaData().index(\"test\")));\n        assertAliasesVersionIncreased(\"test\", before, after);\n\n        after = service.applyAliasActions(before, Arrays.asList(\n            new AliasAction.Add(\"test\", \"alias\", null, null, null, true)));\n        assertTrue(after.metaData().index(\"test\").getAliases().get(\"alias\").writeIndex());\n        assertThat(((AliasOrIndex.Alias) after.metaData().getAliasAndIndexLookup().get(\"alias\")).getWriteIndex(),\n            equalTo(after.metaData().index(\"test\")));\n        assertAliasesVersionIncreased(\"test\", before, after);\n    }\n","realPath":"server/src/test/java/org/elasticsearch/cluster/metadata/MetaDataIndexAliasesServiceTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":231,"status":"M"},{"authorDate":"2020-03-04 07:30:22","commitOrder":5,"curCode":"    public void testAddWriteOnlyWithExistingWriteIndex() {\n        IndexMetaData.Builder indexMetaData = IndexMetaData.builder(\"test\")\n            .settings(settings(Version.CURRENT)).numberOfShards(1).numberOfReplicas(1);\n        IndexMetaData.Builder indexMetaData2 = IndexMetaData.builder(\"test2\")\n            .putAlias(AliasMetaData.builder(\"alias\").writeIndex(true).build())\n            .settings(settings(Version.CURRENT)).numberOfShards(1).numberOfReplicas(1);\n        ClusterState before = ClusterState.builder(ClusterName.DEFAULT)\n            .metaData(MetaData.builder().put(indexMetaData).put(indexMetaData2)).build();\n\n        ClusterState after = service.applyAliasActions(before, Arrays.asList(\n            new AliasAction.Add(\"test\", \"alias\", null, null, null, null, null)));\n        assertNull(after.metaData().index(\"test\").getAliases().get(\"alias\").writeIndex());\n        assertThat(((AliasOrIndex.Alias) after.metaData().getAliasAndIndexLookup().get(\"alias\")).getWriteIndex(),\n            equalTo(after.metaData().index(\"test2\")));\n        assertAliasesVersionIncreased(\"test\", before, after);\n        assertAliasesVersionUnchanged(\"test2\", before, after);\n\n        Exception exception = expectThrows(IllegalStateException.class, () -> service.applyAliasActions(before, Arrays.asList(\n            new AliasAction.Add(\"test\", \"alias\", null, null, null, true, null))));\n        assertThat(exception.getMessage(), startsWith(\"alias [alias] has more than one write index [\"));\n    }\n","date":"2020-03-04 07:30:22","endLine":275,"groupId":"22670","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"testAddWriteOnlyWithExistingWriteIndex","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/c0/10927bf5c83c43755eae3da09cd2a8360ccc2f.src","preCode":"    public void testAddWriteOnlyWithExistingWriteIndex() {\n        IndexMetaData.Builder indexMetaData = IndexMetaData.builder(\"test\")\n            .settings(settings(Version.CURRENT)).numberOfShards(1).numberOfReplicas(1);\n        IndexMetaData.Builder indexMetaData2 = IndexMetaData.builder(\"test2\")\n            .putAlias(AliasMetaData.builder(\"alias\").writeIndex(true).build())\n            .settings(settings(Version.CURRENT)).numberOfShards(1).numberOfReplicas(1);\n        ClusterState before = ClusterState.builder(ClusterName.DEFAULT)\n            .metaData(MetaData.builder().put(indexMetaData).put(indexMetaData2)).build();\n\n        ClusterState after = service.applyAliasActions(before, Arrays.asList(\n            new AliasAction.Add(\"test\", \"alias\", null, null, null, null)));\n        assertNull(after.metaData().index(\"test\").getAliases().get(\"alias\").writeIndex());\n        assertThat(((AliasOrIndex.Alias) after.metaData().getAliasAndIndexLookup().get(\"alias\")).getWriteIndex(),\n            equalTo(after.metaData().index(\"test2\")));\n        assertAliasesVersionIncreased(\"test\", before, after);\n        assertAliasesVersionUnchanged(\"test2\", before, after);\n\n        Exception exception = expectThrows(IllegalStateException.class, () -> service.applyAliasActions(before, Arrays.asList(\n            new AliasAction.Add(\"test\", \"alias\", null, null, null, true))));\n        assertThat(exception.getMessage(), startsWith(\"alias [alias] has more than one write index [\"));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/cluster/metadata/MetaDataIndexAliasesServiceTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":255,"status":"M"}],"commitId":"351c2f9d40951703951e19f95d3c11ac2d12d29c","commitMessage":"@@@Implement hidden aliases (#52547)\n\nThis commit introduces hidden aliases. These are similar to hidden\nindices.  in that they are not visible by default.  unless explicitly\nspecified by name or by indicating that hidden indices/aliases are\ndesired.\n\nThe new alias property.  `is_hidden` is implemented similarly to\n`is_write_index`.  except that it must be consistent across all indices\nwith a given alias - that is.  all indices with a given alias must\nspecify the alias as either hidden.  or all specify it as non-hidden. \neither explicitly or by omitting the `is_hidden` property.","date":"2020-03-04 07:30:22","modifiedFileCount":"19","status":"M","submitter":"Gordon Brown"},{"authorTime":"2020-03-30 14:10:07","codes":[{"authorDate":"2020-03-30 14:10:07","commitOrder":6,"curCode":"    public void testAddWriteOnlyWithNoExistingAliases() {\n        ClusterState before = createIndex(ClusterState.builder(ClusterName.DEFAULT).build(), \"test\");\n\n        ClusterState after = service.applyAliasActions(before, Arrays.asList(\n            new AliasAction.Add(\"test\", \"alias\", null, null, null, false, null)));\n        assertFalse(after.metaData().index(\"test\").getAliases().get(\"alias\").writeIndex());\n        assertNull(after.metaData().getIndicesLookup().get(\"alias\").getWriteIndex());\n        assertAliasesVersionIncreased(\"test\", before, after);\n\n        after = service.applyAliasActions(before, Arrays.asList(\n            new AliasAction.Add(\"test\", \"alias\", null, null, null, null, null)));\n        assertNull(after.metaData().index(\"test\").getAliases().get(\"alias\").writeIndex());\n        assertThat(after.metaData().getIndicesLookup().get(\"alias\").getWriteIndex(),\n            equalTo(after.metaData().index(\"test\")));\n        assertAliasesVersionIncreased(\"test\", before, after);\n\n        after = service.applyAliasActions(before, Arrays.asList(\n            new AliasAction.Add(\"test\", \"alias\", null, null, null, true, null)));\n        assertTrue(after.metaData().index(\"test\").getAliases().get(\"alias\").writeIndex());\n        assertThat(after.metaData().getIndicesLookup().get(\"alias\").getWriteIndex(),\n            equalTo(after.metaData().index(\"test\")));\n        assertAliasesVersionIncreased(\"test\", before, after);\n    }\n","date":"2020-03-30 14:10:07","endLine":253,"groupId":"22656","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"testAddWriteOnlyWithNoExistingAliases","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/d9/5d6eb97356059c5d55d9188ce94803cb1af33f.src","preCode":"    public void testAddWriteOnlyWithNoExistingAliases() {\n        ClusterState before = createIndex(ClusterState.builder(ClusterName.DEFAULT).build(), \"test\");\n\n        ClusterState after = service.applyAliasActions(before, Arrays.asList(\n            new AliasAction.Add(\"test\", \"alias\", null, null, null, false, null)));\n        assertFalse(after.metaData().index(\"test\").getAliases().get(\"alias\").writeIndex());\n        assertNull(((AliasOrIndex.Alias) after.metaData().getAliasAndIndexLookup().get(\"alias\")).getWriteIndex());\n        assertAliasesVersionIncreased(\"test\", before, after);\n\n        after = service.applyAliasActions(before, Arrays.asList(\n            new AliasAction.Add(\"test\", \"alias\", null, null, null, null, null)));\n        assertNull(after.metaData().index(\"test\").getAliases().get(\"alias\").writeIndex());\n        assertThat(((AliasOrIndex.Alias) after.metaData().getAliasAndIndexLookup().get(\"alias\")).getWriteIndex(),\n            equalTo(after.metaData().index(\"test\")));\n        assertAliasesVersionIncreased(\"test\", before, after);\n\n        after = service.applyAliasActions(before, Arrays.asList(\n            new AliasAction.Add(\"test\", \"alias\", null, null, null, true, null)));\n        assertTrue(after.metaData().index(\"test\").getAliases().get(\"alias\").writeIndex());\n        assertThat(((AliasOrIndex.Alias) after.metaData().getAliasAndIndexLookup().get(\"alias\")).getWriteIndex(),\n            equalTo(after.metaData().index(\"test\")));\n        assertAliasesVersionIncreased(\"test\", before, after);\n    }\n","realPath":"server/src/test/java/org/elasticsearch/cluster/metadata/MetaDataIndexAliasesServiceTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":231,"status":"M"},{"authorDate":"2020-03-30 14:10:07","commitOrder":6,"curCode":"    public void testAddWriteOnlyWithExistingWriteIndex() {\n        IndexMetaData.Builder indexMetaData = IndexMetaData.builder(\"test\")\n            .settings(settings(Version.CURRENT)).numberOfShards(1).numberOfReplicas(1);\n        IndexMetaData.Builder indexMetaData2 = IndexMetaData.builder(\"test2\")\n            .putAlias(AliasMetaData.builder(\"alias\").writeIndex(true).build())\n            .settings(settings(Version.CURRENT)).numberOfShards(1).numberOfReplicas(1);\n        ClusterState before = ClusterState.builder(ClusterName.DEFAULT)\n            .metaData(MetaData.builder().put(indexMetaData).put(indexMetaData2)).build();\n\n        ClusterState after = service.applyAliasActions(before, Arrays.asList(\n            new AliasAction.Add(\"test\", \"alias\", null, null, null, null, null)));\n        assertNull(after.metaData().index(\"test\").getAliases().get(\"alias\").writeIndex());\n        assertThat(after.metaData().getIndicesLookup().get(\"alias\").getWriteIndex(),\n            equalTo(after.metaData().index(\"test2\")));\n        assertAliasesVersionIncreased(\"test\", before, after);\n        assertAliasesVersionUnchanged(\"test2\", before, after);\n\n        Exception exception = expectThrows(IllegalStateException.class, () -> service.applyAliasActions(before, Arrays.asList(\n            new AliasAction.Add(\"test\", \"alias\", null, null, null, true, null))));\n        assertThat(exception.getMessage(), startsWith(\"alias [alias] has more than one write index [\"));\n    }\n","date":"2020-03-30 14:10:07","endLine":275,"groupId":"22670","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"testAddWriteOnlyWithExistingWriteIndex","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/d9/5d6eb97356059c5d55d9188ce94803cb1af33f.src","preCode":"    public void testAddWriteOnlyWithExistingWriteIndex() {\n        IndexMetaData.Builder indexMetaData = IndexMetaData.builder(\"test\")\n            .settings(settings(Version.CURRENT)).numberOfShards(1).numberOfReplicas(1);\n        IndexMetaData.Builder indexMetaData2 = IndexMetaData.builder(\"test2\")\n            .putAlias(AliasMetaData.builder(\"alias\").writeIndex(true).build())\n            .settings(settings(Version.CURRENT)).numberOfShards(1).numberOfReplicas(1);\n        ClusterState before = ClusterState.builder(ClusterName.DEFAULT)\n            .metaData(MetaData.builder().put(indexMetaData).put(indexMetaData2)).build();\n\n        ClusterState after = service.applyAliasActions(before, Arrays.asList(\n            new AliasAction.Add(\"test\", \"alias\", null, null, null, null, null)));\n        assertNull(after.metaData().index(\"test\").getAliases().get(\"alias\").writeIndex());\n        assertThat(((AliasOrIndex.Alias) after.metaData().getAliasAndIndexLookup().get(\"alias\")).getWriteIndex(),\n            equalTo(after.metaData().index(\"test2\")));\n        assertAliasesVersionIncreased(\"test\", before, after);\n        assertAliasesVersionUnchanged(\"test2\", before, after);\n\n        Exception exception = expectThrows(IllegalStateException.class, () -> service.applyAliasActions(before, Arrays.asList(\n            new AliasAction.Add(\"test\", \"alias\", null, null, null, true, null))));\n        assertThat(exception.getMessage(), startsWith(\"alias [alias] has more than one write index [\"));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/cluster/metadata/MetaDataIndexAliasesServiceTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":255,"status":"M"}],"commitId":"b7af8524228891c305b8868ff7f748ec10cf724c","commitMessage":"@@@Refactor AliasOrIndex abstraction. (#53982)\n\nIn order to prepare the `AliasOrIndex` abstraction for the introduction of data streams. \nthe abstraction needs to be made more flexible.  because currently it really can be only\nan alias or an index.\n\n* Renamed `AliasOrIndex` to `IndexAbstraction`.\n* Introduced a `IndexAbstraction.Type` enum to indicate what a `IndexAbstraction` instance is.\n* Replaced the `isAlias()` method that returns a boolean with the `getType()` method that returns the new Type enum.\n* Moved `getWriteIndex()` up from the `IndexAbstraction.Alias` to the `IndexAbstraction` interface.\n* Moved `getAliasName()` up from the `IndexAbstraction.Alias` to the `IndexAbstraction` interface and renamed it to `getName()`.\n* Removed unnecessary casting to `IndexAbstraction.Alias` by just checking the `getType()` method.\n\nRelates to #53100 ","date":"2020-03-30 14:10:07","modifiedFileCount":"39","status":"M","submitter":"Martijn van Groningen"},{"authorTime":"2020-04-01 03:52:01","codes":[{"authorDate":"2020-04-01 03:52:01","commitOrder":7,"curCode":"    public void testAddWriteOnlyWithNoExistingAliases() {\n        ClusterState before = createIndex(ClusterState.builder(ClusterName.DEFAULT).build(), \"test\");\n\n        ClusterState after = service.applyAliasActions(before, Arrays.asList(\n            new AliasAction.Add(\"test\", \"alias\", null, null, null, false, null)));\n        assertFalse(after.metadata().index(\"test\").getAliases().get(\"alias\").writeIndex());\n        assertNull(after.metadata().getIndicesLookup().get(\"alias\").getWriteIndex());\n        assertAliasesVersionIncreased(\"test\", before, after);\n\n        after = service.applyAliasActions(before, Arrays.asList(\n            new AliasAction.Add(\"test\", \"alias\", null, null, null, null, null)));\n        assertNull(after.metadata().index(\"test\").getAliases().get(\"alias\").writeIndex());\n        assertThat(after.metadata().getIndicesLookup().get(\"alias\").getWriteIndex(),\n            equalTo(after.metadata().index(\"test\")));\n        assertAliasesVersionIncreased(\"test\", before, after);\n\n        after = service.applyAliasActions(before, Arrays.asList(\n            new AliasAction.Add(\"test\", \"alias\", null, null, null, true, null)));\n        assertTrue(after.metadata().index(\"test\").getAliases().get(\"alias\").writeIndex());\n        assertThat(after.metadata().getIndicesLookup().get(\"alias\").getWriteIndex(),\n            equalTo(after.metadata().index(\"test\")));\n        assertAliasesVersionIncreased(\"test\", before, after);\n    }\n","date":"2020-04-01 03:52:01","endLine":253,"groupId":"102055","id":13,"instanceNumber":1,"isCurCommit":0,"methodName":"testAddWriteOnlyWithNoExistingAliases","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/58/c904aa42e4d2da13063a532d548185cfad1795.src","preCode":"    public void testAddWriteOnlyWithNoExistingAliases() {\n        ClusterState before = createIndex(ClusterState.builder(ClusterName.DEFAULT).build(), \"test\");\n\n        ClusterState after = service.applyAliasActions(before, Arrays.asList(\n            new AliasAction.Add(\"test\", \"alias\", null, null, null, false, null)));\n        assertFalse(after.metaData().index(\"test\").getAliases().get(\"alias\").writeIndex());\n        assertNull(after.metaData().getIndicesLookup().get(\"alias\").getWriteIndex());\n        assertAliasesVersionIncreased(\"test\", before, after);\n\n        after = service.applyAliasActions(before, Arrays.asList(\n            new AliasAction.Add(\"test\", \"alias\", null, null, null, null, null)));\n        assertNull(after.metaData().index(\"test\").getAliases().get(\"alias\").writeIndex());\n        assertThat(after.metaData().getIndicesLookup().get(\"alias\").getWriteIndex(),\n            equalTo(after.metaData().index(\"test\")));\n        assertAliasesVersionIncreased(\"test\", before, after);\n\n        after = service.applyAliasActions(before, Arrays.asList(\n            new AliasAction.Add(\"test\", \"alias\", null, null, null, true, null)));\n        assertTrue(after.metaData().index(\"test\").getAliases().get(\"alias\").writeIndex());\n        assertThat(after.metaData().getIndicesLookup().get(\"alias\").getWriteIndex(),\n            equalTo(after.metaData().index(\"test\")));\n        assertAliasesVersionIncreased(\"test\", before, after);\n    }\n","realPath":"server/src/test/java/org/elasticsearch/cluster/metadata/MetadataIndexAliasesServiceTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":231,"status":"M"},{"authorDate":"2020-04-01 03:52:01","commitOrder":7,"curCode":"    public void testAddWriteOnlyWithExistingWriteIndex() {\n        IndexMetadata.Builder indexMetadata = IndexMetadata.builder(\"test\")\n            .settings(settings(Version.CURRENT)).numberOfShards(1).numberOfReplicas(1);\n        IndexMetadata.Builder indexMetadata2 = IndexMetadata.builder(\"test2\")\n            .putAlias(AliasMetadata.builder(\"alias\").writeIndex(true).build())\n            .settings(settings(Version.CURRENT)).numberOfShards(1).numberOfReplicas(1);\n        ClusterState before = ClusterState.builder(ClusterName.DEFAULT)\n            .metadata(Metadata.builder().put(indexMetadata).put(indexMetadata2)).build();\n\n        ClusterState after = service.applyAliasActions(before, Arrays.asList(\n            new AliasAction.Add(\"test\", \"alias\", null, null, null, null, null)));\n        assertNull(after.metadata().index(\"test\").getAliases().get(\"alias\").writeIndex());\n        assertThat(after.metadata().getIndicesLookup().get(\"alias\").getWriteIndex(),\n            equalTo(after.metadata().index(\"test2\")));\n        assertAliasesVersionIncreased(\"test\", before, after);\n        assertAliasesVersionUnchanged(\"test2\", before, after);\n\n        Exception exception = expectThrows(IllegalStateException.class, () -> service.applyAliasActions(before, Arrays.asList(\n            new AliasAction.Add(\"test\", \"alias\", null, null, null, true, null))));\n        assertThat(exception.getMessage(), startsWith(\"alias [alias] has more than one write index [\"));\n    }\n","date":"2020-04-01 03:52:01","endLine":275,"groupId":"102055","id":14,"instanceNumber":2,"isCurCommit":0,"methodName":"testAddWriteOnlyWithExistingWriteIndex","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/58/c904aa42e4d2da13063a532d548185cfad1795.src","preCode":"    public void testAddWriteOnlyWithExistingWriteIndex() {\n        IndexMetaData.Builder indexMetaData = IndexMetaData.builder(\"test\")\n            .settings(settings(Version.CURRENT)).numberOfShards(1).numberOfReplicas(1);\n        IndexMetaData.Builder indexMetaData2 = IndexMetaData.builder(\"test2\")\n            .putAlias(AliasMetaData.builder(\"alias\").writeIndex(true).build())\n            .settings(settings(Version.CURRENT)).numberOfShards(1).numberOfReplicas(1);\n        ClusterState before = ClusterState.builder(ClusterName.DEFAULT)\n            .metaData(MetaData.builder().put(indexMetaData).put(indexMetaData2)).build();\n\n        ClusterState after = service.applyAliasActions(before, Arrays.asList(\n            new AliasAction.Add(\"test\", \"alias\", null, null, null, null, null)));\n        assertNull(after.metaData().index(\"test\").getAliases().get(\"alias\").writeIndex());\n        assertThat(after.metaData().getIndicesLookup().get(\"alias\").getWriteIndex(),\n            equalTo(after.metaData().index(\"test2\")));\n        assertAliasesVersionIncreased(\"test\", before, after);\n        assertAliasesVersionUnchanged(\"test2\", before, after);\n\n        Exception exception = expectThrows(IllegalStateException.class, () -> service.applyAliasActions(before, Arrays.asList(\n            new AliasAction.Add(\"test\", \"alias\", null, null, null, true, null))));\n        assertThat(exception.getMessage(), startsWith(\"alias [alias] has more than one write index [\"));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/cluster/metadata/MetadataIndexAliasesServiceTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":255,"status":"M"}],"commitId":"95a7eed9aa35f47b228e402508709b5bd6703cf4","commitMessage":"@@@Rename MetaData to Metadata in all of the places (#54519)\n\nThis is a simple naming change PR.  to fix the fact that \"metadata\" is a\nsingle English word.  and for too long we have not followed general\nnaming conventions for it. We are also not consistent about it.  for\nexample.  METADATA instead of META_DATA if we were trying to be\nconsistent with MetaData (although METADATA is correct when considered\nin the context of \"metadata\"). This was a simple find and replace across\nthe code base.  only taking a few minutes to fix this naming issue\nforever.","date":"2020-04-01 03:52:01","modifiedFileCount":"1712","status":"M","submitter":"Jason Tedor"}]
