[{"authorTime":"2019-01-16 02:33:25","codes":[{"authorDate":"2018-12-06 15:31:46","commitOrder":2,"curCode":"    public void testRemoveStateNotRecoveredBlock() {\n        final MetaData.Builder metaDataBuilder = MetaData.builder()\n                .persistentSettings(Settings.builder().put(\"test\", \"test\").build());\n        final IndexMetaData indexMetaData = createIndexMetaData(\"test\", Settings.EMPTY);\n        metaDataBuilder.put(indexMetaData, false);\n\n        final ClusterState initialState = ClusterState\n                .builder(ClusterState.EMPTY_STATE)\n                .metaData(metaDataBuilder)\n                .blocks(ClusterBlocks.builder().addGlobalBlock(STATE_NOT_RECOVERED_BLOCK).build())\n                .build();\n        assertTrue(initialState.blocks().hasGlobalBlock(STATE_NOT_RECOVERED_BLOCK));\n\n        final ClusterState newState = removeStateNotRecoveredBlock(initialState);\n\n        assertMetaDataEquals(initialState, newState);\n        assertFalse(newState.blocks().hasGlobalBlock(STATE_NOT_RECOVERED_BLOCK));\n    }\n","date":"2018-12-06 15:31:46","endLine":183,"groupId":"16632","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testRemoveStateNotRecoveredBlock","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/36/f462fd90e79614098c9e3a73d33e8b2168fd4f.src","preCode":"    public void testRemoveStateNotRecoveredBlock() {\n        final MetaData.Builder metaDataBuilder = MetaData.builder()\n                .persistentSettings(Settings.builder().put(\"test\", \"test\").build());\n        final IndexMetaData indexMetaData = createIndexMetaData(\"test\", Settings.EMPTY);\n        metaDataBuilder.put(indexMetaData, false);\n\n        final ClusterState initialState = ClusterState\n                .builder(ClusterState.EMPTY_STATE)\n                .metaData(metaDataBuilder)\n                .blocks(ClusterBlocks.builder().addGlobalBlock(STATE_NOT_RECOVERED_BLOCK).build())\n                .build();\n        assertTrue(initialState.blocks().hasGlobalBlock(STATE_NOT_RECOVERED_BLOCK));\n\n        final ClusterState newState = removeStateNotRecoveredBlock(initialState);\n\n        assertMetaDataEquals(initialState, newState);\n        assertFalse(newState.blocks().hasGlobalBlock(STATE_NOT_RECOVERED_BLOCK));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/gateway/ClusterStateUpdatersTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":166,"status":"NB"},{"authorDate":"2019-01-16 02:33:25","commitOrder":2,"curCode":"    public void testAddStateNotRecoveredBlock() {\n        final MetaData.Builder metaDataBuilder = MetaData.builder()\n                .persistentSettings(Settings.builder().put(\"test\", \"test\").build());\n        final IndexMetaData indexMetaData = createIndexMetaData(\"test\", Settings.EMPTY);\n        metaDataBuilder.put(indexMetaData, false);\n\n        final ClusterState initialState = ClusterState\n                .builder(ClusterState.EMPTY_STATE)\n                .metaData(metaDataBuilder)\n                .build();\n        assertFalse(initialState.blocks().hasGlobalBlock(STATE_NOT_RECOVERED_BLOCK));\n\n        final ClusterState newState = addStateNotRecoveredBlock(initialState);\n\n        assertMetaDataEquals(initialState, newState);\n        assertTrue(newState.blocks().hasGlobalBlock(STATE_NOT_RECOVERED_BLOCK));\n    }\n","date":"2019-01-16 02:33:25","endLine":202,"groupId":"16632","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testAddStateNotRecoveredBlock","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/b3/4bcf87bdbd8888abc519c39b4a5d4d0a5cb1ed.src","preCode":"    public void testAddStateNotRecoveredBlock() {\n        final MetaData.Builder metaDataBuilder = MetaData.builder()\n                .persistentSettings(Settings.builder().put(\"test\", \"test\").build());\n        final IndexMetaData indexMetaData = createIndexMetaData(\"test\", Settings.EMPTY);\n        metaDataBuilder.put(indexMetaData, false);\n\n        final ClusterState initialState = ClusterState\n                .builder(ClusterState.EMPTY_STATE)\n                .metaData(metaDataBuilder)\n                .build();\n        assertFalse(initialState.blocks().hasGlobalBlock(STATE_NOT_RECOVERED_BLOCK));\n\n        final ClusterState newState = addStateNotRecoveredBlock(initialState);\n\n        assertMetaDataEquals(initialState, newState);\n        assertTrue(newState.blocks().hasGlobalBlock(STATE_NOT_RECOVERED_BLOCK));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/gateway/ClusterStateUpdatersTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":186,"status":"B"}],"commitId":"42fd68ed389b6e3c72d5dd2108a5dc7fbe429399","commitMessage":"@@@Use GatewayMetaState in CoordinatorTests rarely (#36897)\n\nThis commit adds one more underlying implementation of MockPersistedState.\nPreviously only InMemoryPersistentState was used.  not GatewayMetaState\nis used rarely.\nWhen adding GatewayMetaState support the main question was: do we want to\nemulate exceptions as we do today in MockPersistedState before\ndelegating to GatewayMetaState or do we want these exceptions to\npropagate from the lower level.  i.e. file system exceptions?\nOn the one hand.  lower level exception propagation is already tested in\nGatewayMetaStateTests.  so this won't improve the coverage.\nOn the other hand.  the benefit of low-level exceptions is to see how all these\ncomponents work in conjunction. Finally.  we abandoned the idea of low-level\nexceptions because we don't have a way to deal with IOError today in\nCoordinatorTests.  but hacking GatewayMetaState not to throw\nIOError seems unnatural.\nSo MockPersistedState rarely throws an exception before delegating to\nGatewayMetaState.  which is not supposed to throw the exception.\n\nThis commit required two changes:\n\nMove GatewayMetaStateUT to upper-level from\nGatewayMetaStatePersistedStateTests.  because otherwise.  it's not easy\nto construct GatewayMetaState instance in CoordinatorTests.\nMove addition of STATE_NOT_RECOVERED_BLOCK from GatewayMetaState\nconstructor to GatewayMetaState.applyClusterUpdaters.  because\nCoordinatorTests class assumes that there is no such block and most of\nthem fail.","date":"2019-01-16 02:33:25","modifiedFileCount":"5","status":"M","submitter":"Andrey Ershov"},{"authorTime":"2020-04-01 03:52:01","codes":[{"authorDate":"2020-04-01 03:52:01","commitOrder":3,"curCode":"    public void testRemoveStateNotRecoveredBlock() {\n        final Metadata.Builder metadataBuilder = Metadata.builder()\n                .persistentSettings(Settings.builder().put(\"test\", \"test\").build());\n        final IndexMetadata indexMetadata = createIndexMetadata(\"test\", Settings.EMPTY);\n        metadataBuilder.put(indexMetadata, false);\n\n        final ClusterState initialState = ClusterState\n                .builder(ClusterState.EMPTY_STATE)\n                .metadata(metadataBuilder)\n                .blocks(ClusterBlocks.builder().addGlobalBlock(STATE_NOT_RECOVERED_BLOCK).build())\n                .build();\n        assertTrue(initialState.blocks().hasGlobalBlock(STATE_NOT_RECOVERED_BLOCK));\n\n        final ClusterState newState = removeStateNotRecoveredBlock(initialState);\n\n        assertMetadataEquals(initialState, newState);\n        assertFalse(newState.blocks().hasGlobalBlock(STATE_NOT_RECOVERED_BLOCK));\n    }\n","date":"2020-04-01 03:52:01","endLine":181,"groupId":"103710","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testRemoveStateNotRecoveredBlock","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/87/b2fe5ac09dfb6dc068b0a7e624ce257959e79a.src","preCode":"    public void testRemoveStateNotRecoveredBlock() {\n        final MetaData.Builder metaDataBuilder = MetaData.builder()\n                .persistentSettings(Settings.builder().put(\"test\", \"test\").build());\n        final IndexMetaData indexMetaData = createIndexMetaData(\"test\", Settings.EMPTY);\n        metaDataBuilder.put(indexMetaData, false);\n\n        final ClusterState initialState = ClusterState\n                .builder(ClusterState.EMPTY_STATE)\n                .metaData(metaDataBuilder)\n                .blocks(ClusterBlocks.builder().addGlobalBlock(STATE_NOT_RECOVERED_BLOCK).build())\n                .build();\n        assertTrue(initialState.blocks().hasGlobalBlock(STATE_NOT_RECOVERED_BLOCK));\n\n        final ClusterState newState = removeStateNotRecoveredBlock(initialState);\n\n        assertMetaDataEquals(initialState, newState);\n        assertFalse(newState.blocks().hasGlobalBlock(STATE_NOT_RECOVERED_BLOCK));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/gateway/ClusterStateUpdatersTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":164,"status":"M"},{"authorDate":"2020-04-01 03:52:01","commitOrder":3,"curCode":"    public void testAddStateNotRecoveredBlock() {\n        final Metadata.Builder metadataBuilder = Metadata.builder()\n                .persistentSettings(Settings.builder().put(\"test\", \"test\").build());\n        final IndexMetadata indexMetadata = createIndexMetadata(\"test\", Settings.EMPTY);\n        metadataBuilder.put(indexMetadata, false);\n\n        final ClusterState initialState = ClusterState\n                .builder(ClusterState.EMPTY_STATE)\n                .metadata(metadataBuilder)\n                .build();\n        assertFalse(initialState.blocks().hasGlobalBlock(STATE_NOT_RECOVERED_BLOCK));\n\n        final ClusterState newState = addStateNotRecoveredBlock(initialState);\n\n        assertMetadataEquals(initialState, newState);\n        assertTrue(newState.blocks().hasGlobalBlock(STATE_NOT_RECOVERED_BLOCK));\n    }\n","date":"2020-04-01 03:52:01","endLine":199,"groupId":"103710","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testAddStateNotRecoveredBlock","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/87/b2fe5ac09dfb6dc068b0a7e624ce257959e79a.src","preCode":"    public void testAddStateNotRecoveredBlock() {\n        final MetaData.Builder metaDataBuilder = MetaData.builder()\n                .persistentSettings(Settings.builder().put(\"test\", \"test\").build());\n        final IndexMetaData indexMetaData = createIndexMetaData(\"test\", Settings.EMPTY);\n        metaDataBuilder.put(indexMetaData, false);\n\n        final ClusterState initialState = ClusterState\n                .builder(ClusterState.EMPTY_STATE)\n                .metaData(metaDataBuilder)\n                .build();\n        assertFalse(initialState.blocks().hasGlobalBlock(STATE_NOT_RECOVERED_BLOCK));\n\n        final ClusterState newState = addStateNotRecoveredBlock(initialState);\n\n        assertMetaDataEquals(initialState, newState);\n        assertTrue(newState.blocks().hasGlobalBlock(STATE_NOT_RECOVERED_BLOCK));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/gateway/ClusterStateUpdatersTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":183,"status":"M"}],"commitId":"95a7eed9aa35f47b228e402508709b5bd6703cf4","commitMessage":"@@@Rename MetaData to Metadata in all of the places (#54519)\n\nThis is a simple naming change PR.  to fix the fact that \"metadata\" is a\nsingle English word.  and for too long we have not followed general\nnaming conventions for it. We are also not consistent about it.  for\nexample.  METADATA instead of META_DATA if we were trying to be\nconsistent with MetaData (although METADATA is correct when considered\nin the context of \"metadata\"). This was a simple find and replace across\nthe code base.  only taking a few minutes to fix this naming issue\nforever.","date":"2020-04-01 03:52:01","modifiedFileCount":"1712","status":"M","submitter":"Jason Tedor"}]
