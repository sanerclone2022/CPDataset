[{"authorTime":"2021-06-18 07:33:58","codes":[{"authorDate":"2021-06-18 07:33:58","commitOrder":1,"curCode":"    private static List<SnapshotInfo> allSnapshotsSorted(\n        Collection<String> allSnapshotNames,\n        String repoName,\n        GetSnapshotsRequest.SortBy sortBy,\n        SortOrder order\n    ) {\n        final List<SnapshotInfo> snapshotInfos = sortedWithLimit(repoName, sortBy, null, GetSnapshotsRequest.NO_LIMIT, order);\n        assertEquals(snapshotInfos.size(), allSnapshotNames.size());\n        for (SnapshotInfo snapshotInfo : snapshotInfos) {\n            assertThat(snapshotInfo.snapshotId().getName(), is(in(allSnapshotNames)));\n        }\n        return snapshotInfos;\n    }\n","date":"2021-06-18 07:33:58","endLine":205,"groupId":"14818","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"allSnapshotsSorted","params":"(Collection<String>allSnapshotNames@StringrepoName@GetSnapshotsRequest.SortBysortBy@SortOrderorder)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/2c/12224472a73e05001369d606246eeec793cad8.src","preCode":"    private static List<SnapshotInfo> allSnapshotsSorted(\n        Collection<String> allSnapshotNames,\n        String repoName,\n        GetSnapshotsRequest.SortBy sortBy,\n        SortOrder order\n    ) {\n        final List<SnapshotInfo> snapshotInfos = sortedWithLimit(repoName, sortBy, null, GetSnapshotsRequest.NO_LIMIT, order);\n        assertEquals(snapshotInfos.size(), allSnapshotNames.size());\n        for (SnapshotInfo snapshotInfo : snapshotInfos) {\n            assertThat(snapshotInfo.snapshotId().getName(), is(in(allSnapshotNames)));\n        }\n        return snapshotInfos;\n    }\n","realPath":"server/src/internalClusterTest/java/org/elasticsearch/snapshots/GetSnapshotsIT.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":193,"status":"B"},{"authorDate":"2021-06-18 07:33:58","commitOrder":1,"curCode":"    private static List<SnapshotInfo> allSnapshotsSorted(Collection<String> allSnapshotNames,\n                                                         String repoName,\n                                                         GetSnapshotsRequest.SortBy sortBy,\n                                                         SortOrder order) throws IOException {\n        final Request request = baseGetSnapshotsRequest(repoName);\n        request.addParameter(\"sort\", sortBy.toString());\n        if (order == SortOrder.DESC || randomBoolean()) {\n            request.addParameter(\"order\", order.toString());\n        }\n        final Response response = getRestClient().performRequest(request);\n        final List<SnapshotInfo> snapshotInfos = readSnapshotInfos(repoName, response);\n        assertEquals(snapshotInfos.size(), allSnapshotNames.size());\n        for (SnapshotInfo snapshotInfo : snapshotInfos) {\n            assertThat(snapshotInfo.snapshotId().getName(), is(in(allSnapshotNames)));\n        }\n        return snapshotInfos;\n    }\n","date":"2021-06-18 07:33:58","endLine":205,"groupId":"14818","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"allSnapshotsSorted","params":"(Collection<String>allSnapshotNames@StringrepoName@GetSnapshotsRequest.SortBysortBy@SortOrderorder)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/72/514beed85042539e5a4505478ea77339f5818f.src","preCode":"    private static List<SnapshotInfo> allSnapshotsSorted(Collection<String> allSnapshotNames,\n                                                         String repoName,\n                                                         GetSnapshotsRequest.SortBy sortBy,\n                                                         SortOrder order) throws IOException {\n        final Request request = baseGetSnapshotsRequest(repoName);\n        request.addParameter(\"sort\", sortBy.toString());\n        if (order == SortOrder.DESC || randomBoolean()) {\n            request.addParameter(\"order\", order.toString());\n        }\n        final Response response = getRestClient().performRequest(request);\n        final List<SnapshotInfo> snapshotInfos = readSnapshotInfos(repoName, response);\n        assertEquals(snapshotInfos.size(), allSnapshotNames.size());\n        for (SnapshotInfo snapshotInfo : snapshotInfos) {\n            assertThat(snapshotInfo.snapshotId().getName(), is(in(allSnapshotNames)));\n        }\n        return snapshotInfos;\n    }\n","realPath":"qa/smoke-test-http/src/test/java/org/elasticsearch/http/snapshots/RestGetSnapshotsIT.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":189,"status":"B"}],"commitId":"82ae6742eba59c58a93bf9e32ea37220d01ab75c","commitMessage":"@@@Merge branch 'master' into feature/vector-tiles","date":"2021-06-18 07:33:58","modifiedFileCount":"125","status":"B","submitter":"Elastic Machine"},{"authorTime":"2021-06-24 22:58:33","codes":[{"authorDate":"2021-06-18 07:33:58","commitOrder":2,"curCode":"    private static List<SnapshotInfo> allSnapshotsSorted(\n        Collection<String> allSnapshotNames,\n        String repoName,\n        GetSnapshotsRequest.SortBy sortBy,\n        SortOrder order\n    ) {\n        final List<SnapshotInfo> snapshotInfos = sortedWithLimit(repoName, sortBy, null, GetSnapshotsRequest.NO_LIMIT, order);\n        assertEquals(snapshotInfos.size(), allSnapshotNames.size());\n        for (SnapshotInfo snapshotInfo : snapshotInfos) {\n            assertThat(snapshotInfo.snapshotId().getName(), is(in(allSnapshotNames)));\n        }\n        return snapshotInfos;\n    }\n","date":"2021-06-18 07:33:58","endLine":205,"groupId":"14818","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"allSnapshotsSorted","params":"(Collection<String>allSnapshotNames@StringrepoName@GetSnapshotsRequest.SortBysortBy@SortOrderorder)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/2c/12224472a73e05001369d606246eeec793cad8.src","preCode":"    private static List<SnapshotInfo> allSnapshotsSorted(\n        Collection<String> allSnapshotNames,\n        String repoName,\n        GetSnapshotsRequest.SortBy sortBy,\n        SortOrder order\n    ) {\n        final List<SnapshotInfo> snapshotInfos = sortedWithLimit(repoName, sortBy, null, GetSnapshotsRequest.NO_LIMIT, order);\n        assertEquals(snapshotInfos.size(), allSnapshotNames.size());\n        for (SnapshotInfo snapshotInfo : snapshotInfos) {\n            assertThat(snapshotInfo.snapshotId().getName(), is(in(allSnapshotNames)));\n        }\n        return snapshotInfos;\n    }\n","realPath":"server/src/internalClusterTest/java/org/elasticsearch/snapshots/GetSnapshotsIT.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":193,"status":"N"},{"authorDate":"2021-06-24 22:58:33","commitOrder":2,"curCode":"    private static List<SnapshotInfo> allSnapshotsSorted(Collection<String> allSnapshotNames,\n                                                         String repoName,\n                                                         GetSnapshotsRequest.SortBy sortBy,\n                                                         SortOrder order) throws IOException {\n        final Request request = baseGetSnapshotsRequest(repoName);\n        request.addParameter(\"sort\", sortBy.toString());\n        if (order == SortOrder.DESC || randomBoolean()) {\n            request.addParameter(\"order\", order.toString());\n        }\n        final Response response = getRestClient().performRequest(request);\n        final List<SnapshotInfo> snapshotInfos = readSnapshotInfos(response);\n        assertEquals(snapshotInfos.size(), allSnapshotNames.size());\n        for (SnapshotInfo snapshotInfo : snapshotInfos) {\n            assertThat(snapshotInfo.snapshotId().getName(), is(in(allSnapshotNames)));\n        }\n        return snapshotInfos;\n    }\n","date":"2021-06-24 22:58:33","endLine":205,"groupId":"14818","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"allSnapshotsSorted","params":"(Collection<String>allSnapshotNames@StringrepoName@GetSnapshotsRequest.SortBysortBy@SortOrderorder)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/3b/4ae8a6707e089896a8737231e27a695bbb57ec.src","preCode":"    private static List<SnapshotInfo> allSnapshotsSorted(Collection<String> allSnapshotNames,\n                                                         String repoName,\n                                                         GetSnapshotsRequest.SortBy sortBy,\n                                                         SortOrder order) throws IOException {\n        final Request request = baseGetSnapshotsRequest(repoName);\n        request.addParameter(\"sort\", sortBy.toString());\n        if (order == SortOrder.DESC || randomBoolean()) {\n            request.addParameter(\"order\", order.toString());\n        }\n        final Response response = getRestClient().performRequest(request);\n        final List<SnapshotInfo> snapshotInfos = readSnapshotInfos(repoName, response);\n        assertEquals(snapshotInfos.size(), allSnapshotNames.size());\n        for (SnapshotInfo snapshotInfo : snapshotInfos) {\n            assertThat(snapshotInfo.snapshotId().getName(), is(in(allSnapshotNames)));\n        }\n        return snapshotInfos;\n    }\n","realPath":"qa/smoke-test-http/src/test/java/org/elasticsearch/http/snapshots/RestGetSnapshotsIT.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":189,"status":"M"}],"commitId":"cbf48e06330c07b838cef50a6f8b9305d4f3516b","commitMessage":"@@@Flatten Get Snapshots Response (#74451)\n\nThis PR returns the get snapshots API to the 7.x format (and transport client behavior) and enhances it for requests that ask for multiple repositories.\nThe changes for requests that target multiple repositories are:\n* Add `repository` field to `SnapshotInfo` and REST response\n* Add `failures` map alongside `snapshots` list instead of returning just an exception response as done for single repo requests\n* Pagination now works across repositories instead of being per repository for multi-repository requests\n\ncloses #69108\ncloses #43462","date":"2021-06-24 22:58:33","modifiedFileCount":"53","status":"M","submitter":"Armin Braun"},{"authorTime":"2021-06-29 04:28:30","codes":[{"authorDate":"2021-06-29 04:28:30","commitOrder":3,"curCode":"    private static List<SnapshotInfo> allSnapshotsSorted(\n        Collection<String> allSnapshotNames,\n        String repoName,\n        GetSnapshotsRequest.SortBy sortBy,\n        SortOrder order\n    ) {\n        final List<SnapshotInfo> snapshotInfos = sortedWithLimit(repoName, sortBy, null, GetSnapshotsRequest.NO_LIMIT, order).v2();\n        assertEquals(snapshotInfos.size(), allSnapshotNames.size());\n        for (SnapshotInfo snapshotInfo : snapshotInfos) {\n            assertThat(snapshotInfo.snapshotId().getName(), is(in(allSnapshotNames)));\n        }\n        return snapshotInfos;\n    }\n","date":"2021-06-29 04:28:30","endLine":221,"groupId":"14818","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"allSnapshotsSorted","params":"(Collection<String>allSnapshotNames@StringrepoName@GetSnapshotsRequest.SortBysortBy@SortOrderorder)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/93/c217e3cd6a03e99dc1dae7bd3752893b3e48cc.src","preCode":"    private static List<SnapshotInfo> allSnapshotsSorted(\n        Collection<String> allSnapshotNames,\n        String repoName,\n        GetSnapshotsRequest.SortBy sortBy,\n        SortOrder order\n    ) {\n        final List<SnapshotInfo> snapshotInfos = sortedWithLimit(repoName, sortBy, null, GetSnapshotsRequest.NO_LIMIT, order);\n        assertEquals(snapshotInfos.size(), allSnapshotNames.size());\n        for (SnapshotInfo snapshotInfo : snapshotInfos) {\n            assertThat(snapshotInfo.snapshotId().getName(), is(in(allSnapshotNames)));\n        }\n        return snapshotInfos;\n    }\n","realPath":"server/src/internalClusterTest/java/org/elasticsearch/snapshots/GetSnapshotsIT.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":209,"status":"M"},{"authorDate":"2021-06-29 04:28:30","commitOrder":3,"curCode":"    private static List<SnapshotInfo> allSnapshotsSorted(Collection<String> allSnapshotNames,\n                                                         String repoName,\n                                                         GetSnapshotsRequest.SortBy sortBy,\n                                                         SortOrder order) throws IOException {\n        final Request request = baseGetSnapshotsRequest(repoName);\n        request.addParameter(\"sort\", sortBy.toString());\n        if (order == SortOrder.DESC || randomBoolean()) {\n            request.addParameter(\"order\", order.toString());\n        }\n        final Response response = getRestClient().performRequest(request);\n        final List<SnapshotInfo> snapshotInfos = readSnapshotInfos(response).v2();\n        assertEquals(snapshotInfos.size(), allSnapshotNames.size());\n        for (SnapshotInfo snapshotInfo : snapshotInfos) {\n            assertThat(snapshotInfo.snapshotId().getName(), is(in(allSnapshotNames)));\n        }\n        return snapshotInfos;\n    }\n","date":"2021-06-29 04:28:30","endLine":213,"groupId":"14818","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"allSnapshotsSorted","params":"(Collection<String>allSnapshotNames@StringrepoName@GetSnapshotsRequest.SortBysortBy@SortOrderorder)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/95/496e3e537c6beda053c6a82fa0e55750172b91.src","preCode":"    private static List<SnapshotInfo> allSnapshotsSorted(Collection<String> allSnapshotNames,\n                                                         String repoName,\n                                                         GetSnapshotsRequest.SortBy sortBy,\n                                                         SortOrder order) throws IOException {\n        final Request request = baseGetSnapshotsRequest(repoName);\n        request.addParameter(\"sort\", sortBy.toString());\n        if (order == SortOrder.DESC || randomBoolean()) {\n            request.addParameter(\"order\", order.toString());\n        }\n        final Response response = getRestClient().performRequest(request);\n        final List<SnapshotInfo> snapshotInfos = readSnapshotInfos(response);\n        assertEquals(snapshotInfos.size(), allSnapshotNames.size());\n        for (SnapshotInfo snapshotInfo : snapshotInfos) {\n            assertThat(snapshotInfo.snapshotId().getName(), is(in(allSnapshotNames)));\n        }\n        return snapshotInfos;\n    }\n","realPath":"qa/smoke-test-http/src/test/java/org/elasticsearch/http/snapshots/RestGetSnapshotsIT.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":197,"status":"M"}],"commitId":"5f89f8be3ff96ba9593838ff85731cd860138bcf","commitMessage":"@@@Introduce Next Field in Paginated GetSnapshots Response (#74236)\n\nFollow up to #73952 adding documentation for the `after` query parameter\nand the related `next` response field.\n\n","date":"2021-06-29 04:28:30","modifiedFileCount":"10","status":"M","submitter":"Armin Braun"},{"authorTime":"2021-08-09 17:34:24","codes":[{"authorDate":"2021-08-09 17:34:24","commitOrder":4,"curCode":"    private static List<SnapshotInfo> allSnapshotsSorted(\n        Collection<String> allSnapshotNames,\n        String repoName,\n        GetSnapshotsRequest.SortBy sortBy,\n        SortOrder order\n    ) {\n        final GetSnapshotsResponse getSnapshotsResponse = sortedWithLimit(repoName, sortBy, null, GetSnapshotsRequest.NO_LIMIT, order);\n        final List<SnapshotInfo> snapshotInfos = getSnapshotsResponse.getSnapshots();\n        assertEquals(snapshotInfos.size(), allSnapshotNames.size());\n        assertEquals(getSnapshotsResponse.totalCount(), allSnapshotNames.size());\n        assertEquals(0, getSnapshotsResponse.remaining());\n        for (SnapshotInfo snapshotInfo : snapshotInfos) {\n            assertThat(snapshotInfo.snapshotId().getName(), is(in(allSnapshotNames)));\n        }\n        return snapshotInfos;\n    }\n","date":"2021-08-09 17:34:24","endLine":224,"groupId":"14818","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"allSnapshotsSorted","params":"(Collection<String>allSnapshotNames@StringrepoName@GetSnapshotsRequest.SortBysortBy@SortOrderorder)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/0e/e1be41b78495fc39b8befc0fdbae16eabaa607.src","preCode":"    private static List<SnapshotInfo> allSnapshotsSorted(\n        Collection<String> allSnapshotNames,\n        String repoName,\n        GetSnapshotsRequest.SortBy sortBy,\n        SortOrder order\n    ) {\n        final List<SnapshotInfo> snapshotInfos = sortedWithLimit(repoName, sortBy, null, GetSnapshotsRequest.NO_LIMIT, order).v2();\n        assertEquals(snapshotInfos.size(), allSnapshotNames.size());\n        for (SnapshotInfo snapshotInfo : snapshotInfos) {\n            assertThat(snapshotInfo.snapshotId().getName(), is(in(allSnapshotNames)));\n        }\n        return snapshotInfos;\n    }\n","realPath":"server/src/internalClusterTest/java/org/elasticsearch/snapshots/GetSnapshotsIT.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":209,"status":"M"},{"authorDate":"2021-08-09 17:34:24","commitOrder":4,"curCode":"    private static List<SnapshotInfo> allSnapshotsSorted(Collection<String> allSnapshotNames,\n                                                         String repoName,\n                                                         GetSnapshotsRequest.SortBy sortBy,\n                                                         SortOrder order) throws IOException {\n        final Request request = baseGetSnapshotsRequest(repoName);\n        request.addParameter(\"sort\", sortBy.toString());\n        if (order == SortOrder.DESC || randomBoolean()) {\n            request.addParameter(\"order\", order.toString());\n        }\n        final GetSnapshotsResponse getSnapshotsResponse = readSnapshotInfos(getRestClient().performRequest(request));\n        final List<SnapshotInfo> snapshotInfos = getSnapshotsResponse.getSnapshots();\n        assertEquals(snapshotInfos.size(), allSnapshotNames.size());\n        assertEquals(getSnapshotsResponse.totalCount(), allSnapshotNames.size());\n        assertEquals(0, getSnapshotsResponse.remaining());\n        for (SnapshotInfo snapshotInfo : snapshotInfos) {\n            assertThat(snapshotInfo.snapshotId().getName(), is(in(allSnapshotNames)));\n        }\n        return snapshotInfos;\n    }\n","date":"2021-08-09 17:34:24","endLine":220,"groupId":"14818","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"allSnapshotsSorted","params":"(Collection<String>allSnapshotNames@StringrepoName@GetSnapshotsRequest.SortBysortBy@SortOrderorder)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/d3/949e6a98e13088ac79c8af60e94368c851df93.src","preCode":"    private static List<SnapshotInfo> allSnapshotsSorted(Collection<String> allSnapshotNames,\n                                                         String repoName,\n                                                         GetSnapshotsRequest.SortBy sortBy,\n                                                         SortOrder order) throws IOException {\n        final Request request = baseGetSnapshotsRequest(repoName);\n        request.addParameter(\"sort\", sortBy.toString());\n        if (order == SortOrder.DESC || randomBoolean()) {\n            request.addParameter(\"order\", order.toString());\n        }\n        final Response response = getRestClient().performRequest(request);\n        final List<SnapshotInfo> snapshotInfos = readSnapshotInfos(response).v2();\n        assertEquals(snapshotInfos.size(), allSnapshotNames.size());\n        for (SnapshotInfo snapshotInfo : snapshotInfos) {\n            assertThat(snapshotInfo.snapshotId().getName(), is(in(allSnapshotNames)));\n        }\n        return snapshotInfos;\n    }\n","realPath":"qa/smoke-test-http/src/test/java/org/elasticsearch/http/snapshots/RestGetSnapshotsIT.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":202,"status":"M"}],"commitId":"a4983f5ab9812e0cc79d0914aee8a61c6fae0680","commitMessage":"@@@Return Total Result Count and Remaining Count in Get Snapshots Response (#76150)\n\nAdd total result count and remaining count to get snapshots response.","date":"2021-08-09 17:34:24","modifiedFileCount":"7","status":"M","submitter":"Armin Braun"},{"authorTime":"2021-08-09 17:34:24","codes":[{"authorDate":"2021-09-10 21:00:44","commitOrder":5,"curCode":"    private static List<SnapshotInfo> allSnapshotsSorted(\n        Collection<String> allSnapshotNames,\n        String[] repoNames,\n        GetSnapshotsRequest.SortBy sortBy,\n        SortOrder order,\n        String... namePatterns\n    ) {\n        final GetSnapshotsResponse getSnapshotsResponse = sortedWithLimit(\n            repoNames,\n            sortBy,\n            null,\n            GetSnapshotsRequest.NO_LIMIT,\n            order,\n            namePatterns\n        );\n        final List<SnapshotInfo> snapshotInfos = getSnapshotsResponse.getSnapshots();\n        assertEquals(snapshotInfos.size(), allSnapshotNames.size());\n        assertEquals(getSnapshotsResponse.totalCount(), allSnapshotNames.size());\n        assertEquals(0, getSnapshotsResponse.remaining());\n        for (SnapshotInfo snapshotInfo : snapshotInfos) {\n            assertThat(snapshotInfo.snapshotId().getName(), is(in(allSnapshotNames)));\n        }\n        return snapshotInfos;\n    }\n","date":"2021-09-10 21:00:44","endLine":518,"groupId":"106300","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"allSnapshotsSorted","params":"(Collection<String>allSnapshotNames@String[]repoNames@GetSnapshotsRequest.SortBysortBy@SortOrderorder@String...namePatterns)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/d6/a124ff8f5876a469afd2ec1d3982fc177544c8.src","preCode":"    private static List<SnapshotInfo> allSnapshotsSorted(\n        Collection<String> allSnapshotNames,\n        String repoName,\n        GetSnapshotsRequest.SortBy sortBy,\n        SortOrder order\n    ) {\n        final GetSnapshotsResponse getSnapshotsResponse = sortedWithLimit(repoName, sortBy, null, GetSnapshotsRequest.NO_LIMIT, order);\n        final List<SnapshotInfo> snapshotInfos = getSnapshotsResponse.getSnapshots();\n        assertEquals(snapshotInfos.size(), allSnapshotNames.size());\n        assertEquals(getSnapshotsResponse.totalCount(), allSnapshotNames.size());\n        assertEquals(0, getSnapshotsResponse.remaining());\n        for (SnapshotInfo snapshotInfo : snapshotInfos) {\n            assertThat(snapshotInfo.snapshotId().getName(), is(in(allSnapshotNames)));\n        }\n        return snapshotInfos;\n    }\n","realPath":"server/src/internalClusterTest/java/org/elasticsearch/snapshots/GetSnapshotsIT.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":495,"status":"M"},{"authorDate":"2021-08-09 17:34:24","commitOrder":5,"curCode":"    private static List<SnapshotInfo> allSnapshotsSorted(Collection<String> allSnapshotNames,\n                                                         String repoName,\n                                                         GetSnapshotsRequest.SortBy sortBy,\n                                                         SortOrder order) throws IOException {\n        final Request request = baseGetSnapshotsRequest(repoName);\n        request.addParameter(\"sort\", sortBy.toString());\n        if (order == SortOrder.DESC || randomBoolean()) {\n            request.addParameter(\"order\", order.toString());\n        }\n        final GetSnapshotsResponse getSnapshotsResponse = readSnapshotInfos(getRestClient().performRequest(request));\n        final List<SnapshotInfo> snapshotInfos = getSnapshotsResponse.getSnapshots();\n        assertEquals(snapshotInfos.size(), allSnapshotNames.size());\n        assertEquals(getSnapshotsResponse.totalCount(), allSnapshotNames.size());\n        assertEquals(0, getSnapshotsResponse.remaining());\n        for (SnapshotInfo snapshotInfo : snapshotInfos) {\n            assertThat(snapshotInfo.snapshotId().getName(), is(in(allSnapshotNames)));\n        }\n        return snapshotInfos;\n    }\n","date":"2021-08-09 17:34:24","endLine":220,"groupId":"106300","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"allSnapshotsSorted","params":"(Collection<String>allSnapshotNames@StringrepoName@GetSnapshotsRequest.SortBysortBy@SortOrderorder)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/d3/949e6a98e13088ac79c8af60e94368c851df93.src","preCode":"    private static List<SnapshotInfo> allSnapshotsSorted(Collection<String> allSnapshotNames,\n                                                         String repoName,\n                                                         GetSnapshotsRequest.SortBy sortBy,\n                                                         SortOrder order) throws IOException {\n        final Request request = baseGetSnapshotsRequest(repoName);\n        request.addParameter(\"sort\", sortBy.toString());\n        if (order == SortOrder.DESC || randomBoolean()) {\n            request.addParameter(\"order\", order.toString());\n        }\n        final GetSnapshotsResponse getSnapshotsResponse = readSnapshotInfos(getRestClient().performRequest(request));\n        final List<SnapshotInfo> snapshotInfos = getSnapshotsResponse.getSnapshots();\n        assertEquals(snapshotInfos.size(), allSnapshotNames.size());\n        assertEquals(getSnapshotsResponse.totalCount(), allSnapshotNames.size());\n        assertEquals(0, getSnapshotsResponse.remaining());\n        for (SnapshotInfo snapshotInfo : snapshotInfos) {\n            assertThat(snapshotInfo.snapshotId().getName(), is(in(allSnapshotNames)));\n        }\n        return snapshotInfos;\n    }\n","realPath":"qa/smoke-test-http/src/test/java/org/elasticsearch/http/snapshots/RestGetSnapshotsIT.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":202,"status":"N"}],"commitId":"f1a4551e9363d2633b7807ab770029482d9efe53","commitMessage":"@@@Implement Exclude Patterns for Snapshot- and Repository Names in Get Snapshots API (#77308)\n\nIt's in the title. Adds support for exclude patterns combined with wildcard requests\nsimilar to what we support for index names.\n","date":"2021-09-10 21:00:44","modifiedFileCount":"5","status":"M","submitter":"Armin Braun"}]
