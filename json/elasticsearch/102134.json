[{"authorTime":"2018-04-26 03:22:53","codes":[{"authorDate":"2018-04-26 03:22:53","commitOrder":1,"curCode":"    public void testNodeLeave() {\n        AllocationService allocation = createAllocationService();\n        MetaData metaData = MetaData.builder()\n                .put(IndexMetaData.builder(\"test\").settings(settings(Version.CURRENT)).numberOfShards(1).numberOfReplicas(1))\n                .build();\n        ClusterState clusterState = ClusterState.builder(ClusterName.CLUSTER_NAME_SETTING.getDefault(Settings.EMPTY))\n                .metaData(metaData)\n                .routingTable(RoutingTable.builder().addAsNew(metaData.index(\"test\")).build()).build();\n        clusterState = ClusterState.builder(clusterState).nodes(DiscoveryNodes.builder().add(newNode(\"node1\")).add(newNode(\"node2\"))).build();\n        clusterState = allocation.reroute(clusterState, \"reroute\");\n        \r\n        clusterState = allocation.applyStartedShards(clusterState, clusterState.getRoutingNodes().shardsWithState(INITIALIZING));\n        \r\n        clusterState = allocation.applyStartedShards(clusterState, clusterState.getRoutingNodes().shardsWithState(INITIALIZING));\n        assertThat(clusterState.getRoutingNodes().unassigned().size() > 0, equalTo(false));\n        \r\n        clusterState = ClusterState.builder(clusterState).nodes(DiscoveryNodes.builder(clusterState.nodes()).remove(\"node2\")).build();\n        clusterState = allocation.deassociateDeadNodes(clusterState, true, \"reroute\");\n        \r\n        assertThat(clusterState.getRoutingNodes().unassigned().size() > 0, equalTo(true));\n        assertThat(clusterState.getRoutingNodes().shardsWithState(UNASSIGNED).size(), equalTo(1));\n        assertThat(clusterState.getRoutingNodes().shardsWithState(UNASSIGNED).get(0).unassignedInfo(), notNullValue());\n        assertThat(clusterState.getRoutingNodes().shardsWithState(UNASSIGNED).get(0).unassignedInfo().getReason(), equalTo(UnassignedInfo.Reason.NODE_LEFT));\n        assertThat(clusterState.getRoutingNodes().shardsWithState(UNASSIGNED).get(0).unassignedInfo().getUnassignedTimeInMillis(), greaterThan(0L));\n    }\n","date":"2018-04-26 03:22:53","endLine":235,"groupId":"19068","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testNodeLeave","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/d8/f7f6552f90862bea13248d907495febd555b2a.src","preCode":"    public void testNodeLeave() {\n        AllocationService allocation = createAllocationService();\n        MetaData metaData = MetaData.builder()\n                .put(IndexMetaData.builder(\"test\").settings(settings(Version.CURRENT)).numberOfShards(1).numberOfReplicas(1))\n                .build();\n        ClusterState clusterState = ClusterState.builder(ClusterName.CLUSTER_NAME_SETTING.getDefault(Settings.EMPTY))\n                .metaData(metaData)\n                .routingTable(RoutingTable.builder().addAsNew(metaData.index(\"test\")).build()).build();\n        clusterState = ClusterState.builder(clusterState).nodes(DiscoveryNodes.builder().add(newNode(\"node1\")).add(newNode(\"node2\"))).build();\n        clusterState = allocation.reroute(clusterState, \"reroute\");\n        \r\n        clusterState = allocation.applyStartedShards(clusterState, clusterState.getRoutingNodes().shardsWithState(INITIALIZING));\n        \r\n        clusterState = allocation.applyStartedShards(clusterState, clusterState.getRoutingNodes().shardsWithState(INITIALIZING));\n        assertThat(clusterState.getRoutingNodes().unassigned().size() > 0, equalTo(false));\n        \r\n        clusterState = ClusterState.builder(clusterState).nodes(DiscoveryNodes.builder(clusterState.nodes()).remove(\"node2\")).build();\n        clusterState = allocation.deassociateDeadNodes(clusterState, true, \"reroute\");\n        \r\n        assertThat(clusterState.getRoutingNodes().unassigned().size() > 0, equalTo(true));\n        assertThat(clusterState.getRoutingNodes().shardsWithState(UNASSIGNED).size(), equalTo(1));\n        assertThat(clusterState.getRoutingNodes().shardsWithState(UNASSIGNED).get(0).unassignedInfo(), notNullValue());\n        assertThat(clusterState.getRoutingNodes().shardsWithState(UNASSIGNED).get(0).unassignedInfo().getReason(), equalTo(UnassignedInfo.Reason.NODE_LEFT));\n        assertThat(clusterState.getRoutingNodes().shardsWithState(UNASSIGNED).get(0).unassignedInfo().getUnassignedTimeInMillis(), greaterThan(0L));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/cluster/routing/UnassignedInfoTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":211,"status":"B"},{"authorDate":"2018-04-26 03:22:53","commitOrder":1,"curCode":"    public void testFailedShard() {\n        AllocationService allocation = createAllocationService();\n        MetaData metaData = MetaData.builder()\n                .put(IndexMetaData.builder(\"test\").settings(settings(Version.CURRENT)).numberOfShards(1).numberOfReplicas(1))\n                .build();\n        ClusterState clusterState = ClusterState.builder(ClusterName.CLUSTER_NAME_SETTING.getDefault(Settings.EMPTY))\n                .metaData(metaData)\n                .routingTable(RoutingTable.builder().addAsNew(metaData.index(\"test\")).build()).build();\n        clusterState = ClusterState.builder(clusterState).nodes(DiscoveryNodes.builder().add(newNode(\"node1\")).add(newNode(\"node2\"))).build();\n        clusterState = allocation.reroute(clusterState, \"reroute\");\n        \r\n        clusterState = allocation.applyStartedShards(clusterState, clusterState.getRoutingNodes().shardsWithState(INITIALIZING));\n        \r\n        clusterState = allocation.applyStartedShards(clusterState, clusterState.getRoutingNodes().shardsWithState(INITIALIZING));\n        assertThat(clusterState.getRoutingNodes().unassigned().size() > 0, equalTo(false));\n        \r\n        ShardRouting shardToFail = clusterState.getRoutingNodes().shardsWithState(STARTED).get(0);\n        clusterState = allocation.applyFailedShards(clusterState, Collections.singletonList(new FailedShard(shardToFail, \"test fail\", null, randomBoolean())));\n        \r\n        assertThat(clusterState.getRoutingNodes().unassigned().size() > 0, equalTo(true));\n        assertThat(clusterState.getRoutingNodes().shardsWithState(UNASSIGNED).size(), equalTo(1));\n        assertThat(clusterState.getRoutingNodes().shardsWithState(UNASSIGNED).get(0).unassignedInfo(), notNullValue());\n        assertThat(clusterState.getRoutingNodes().shardsWithState(UNASSIGNED).get(0).unassignedInfo().getReason(), equalTo(UnassignedInfo.Reason.ALLOCATION_FAILED));\n        assertThat(clusterState.getRoutingNodes().shardsWithState(UNASSIGNED).get(0).unassignedInfo().getMessage(), equalTo(\"failed shard on node [\" + shardToFail.currentNodeId() + \"]: test fail\"));\n        assertThat(clusterState.getRoutingNodes().shardsWithState(UNASSIGNED).get(0).unassignedInfo().getDetails(), equalTo(\"failed shard on node [\" + shardToFail.currentNodeId() + \"]: test fail\"));\n        assertThat(clusterState.getRoutingNodes().shardsWithState(UNASSIGNED).get(0).unassignedInfo().getUnassignedTimeInMillis(), greaterThan(0L));\n    }\n","date":"2018-04-26 03:22:53","endLine":266,"groupId":"12379","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testFailedShard","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/d8/f7f6552f90862bea13248d907495febd555b2a.src","preCode":"    public void testFailedShard() {\n        AllocationService allocation = createAllocationService();\n        MetaData metaData = MetaData.builder()\n                .put(IndexMetaData.builder(\"test\").settings(settings(Version.CURRENT)).numberOfShards(1).numberOfReplicas(1))\n                .build();\n        ClusterState clusterState = ClusterState.builder(ClusterName.CLUSTER_NAME_SETTING.getDefault(Settings.EMPTY))\n                .metaData(metaData)\n                .routingTable(RoutingTable.builder().addAsNew(metaData.index(\"test\")).build()).build();\n        clusterState = ClusterState.builder(clusterState).nodes(DiscoveryNodes.builder().add(newNode(\"node1\")).add(newNode(\"node2\"))).build();\n        clusterState = allocation.reroute(clusterState, \"reroute\");\n        \r\n        clusterState = allocation.applyStartedShards(clusterState, clusterState.getRoutingNodes().shardsWithState(INITIALIZING));\n        \r\n        clusterState = allocation.applyStartedShards(clusterState, clusterState.getRoutingNodes().shardsWithState(INITIALIZING));\n        assertThat(clusterState.getRoutingNodes().unassigned().size() > 0, equalTo(false));\n        \r\n        ShardRouting shardToFail = clusterState.getRoutingNodes().shardsWithState(STARTED).get(0);\n        clusterState = allocation.applyFailedShards(clusterState, Collections.singletonList(new FailedShard(shardToFail, \"test fail\", null, randomBoolean())));\n        \r\n        assertThat(clusterState.getRoutingNodes().unassigned().size() > 0, equalTo(true));\n        assertThat(clusterState.getRoutingNodes().shardsWithState(UNASSIGNED).size(), equalTo(1));\n        assertThat(clusterState.getRoutingNodes().shardsWithState(UNASSIGNED).get(0).unassignedInfo(), notNullValue());\n        assertThat(clusterState.getRoutingNodes().shardsWithState(UNASSIGNED).get(0).unassignedInfo().getReason(), equalTo(UnassignedInfo.Reason.ALLOCATION_FAILED));\n        assertThat(clusterState.getRoutingNodes().shardsWithState(UNASSIGNED).get(0).unassignedInfo().getMessage(), equalTo(\"failed shard on node [\" + shardToFail.currentNodeId() + \"]: test fail\"));\n        assertThat(clusterState.getRoutingNodes().shardsWithState(UNASSIGNED).get(0).unassignedInfo().getDetails(), equalTo(\"failed shard on node [\" + shardToFail.currentNodeId() + \"]: test fail\"));\n        assertThat(clusterState.getRoutingNodes().shardsWithState(UNASSIGNED).get(0).unassignedInfo().getUnassignedTimeInMillis(), greaterThan(0L));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/cluster/routing/UnassignedInfoTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":240,"status":"B"}],"commitId":"d74fb9eb4559077e2d20b19a9ed62d9ff825027a","commitMessage":"@@@Opened x-pack ILM code\n","date":"2018-04-26 03:22:53","modifiedFileCount":"0","status":"B","submitter":"Tal Levy"},{"authorTime":"2018-04-26 03:22:53","codes":[{"authorDate":"2019-01-24 00:06:25","commitOrder":2,"curCode":"    public void testNodeLeave() {\n        AllocationService allocation = createAllocationService();\n        MetaData metaData = MetaData.builder()\n                .put(IndexMetaData.builder(\"test\").settings(settings(Version.CURRENT)).numberOfShards(1).numberOfReplicas(1))\n                .build();\n        ClusterState clusterState = ClusterState.builder(ClusterName.CLUSTER_NAME_SETTING.getDefault(Settings.EMPTY))\n                .metaData(metaData)\n                .routingTable(RoutingTable.builder().addAsNew(metaData.index(\"test\")).build()).build();\n        clusterState = ClusterState.builder(clusterState)\n            .nodes(DiscoveryNodes.builder().add(newNode(\"node1\")).add(newNode(\"node2\"))).build();\n        clusterState = allocation.reroute(clusterState, \"reroute\");\n        \r\n        clusterState = allocation.applyStartedShards(clusterState, clusterState.getRoutingNodes().shardsWithState(INITIALIZING));\n        \r\n        clusterState = allocation.applyStartedShards(clusterState, clusterState.getRoutingNodes().shardsWithState(INITIALIZING));\n        assertThat(clusterState.getRoutingNodes().unassigned().size() > 0, equalTo(false));\n        \r\n        clusterState = ClusterState.builder(clusterState).nodes(DiscoveryNodes.builder(clusterState.nodes()).remove(\"node2\")).build();\n        clusterState = allocation.disassociateDeadNodes(clusterState, true, \"reroute\");\n        \r\n        assertThat(clusterState.getRoutingNodes().unassigned().size() > 0, equalTo(true));\n        assertThat(clusterState.getRoutingNodes().shardsWithState(UNASSIGNED).size(), equalTo(1));\n        assertThat(clusterState.getRoutingNodes().shardsWithState(UNASSIGNED).get(0).unassignedInfo(), notNullValue());\n        assertThat(clusterState.getRoutingNodes().shardsWithState(UNASSIGNED).get(0).unassignedInfo().getReason(),\n            equalTo(UnassignedInfo.Reason.NODE_LEFT));\n        assertThat(clusterState.getRoutingNodes().shardsWithState(UNASSIGNED).get(0).unassignedInfo().getUnassignedTimeInMillis(),\n            greaterThan(0L));\n    }\n","date":"2019-01-24 00:06:25","endLine":253,"groupId":"19068","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testNodeLeave","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/16/cde1a9909078fde0ee9f45017f8e92311f11fb.src","preCode":"    public void testNodeLeave() {\n        AllocationService allocation = createAllocationService();\n        MetaData metaData = MetaData.builder()\n                .put(IndexMetaData.builder(\"test\").settings(settings(Version.CURRENT)).numberOfShards(1).numberOfReplicas(1))\n                .build();\n        ClusterState clusterState = ClusterState.builder(ClusterName.CLUSTER_NAME_SETTING.getDefault(Settings.EMPTY))\n                .metaData(metaData)\n                .routingTable(RoutingTable.builder().addAsNew(metaData.index(\"test\")).build()).build();\n        clusterState = ClusterState.builder(clusterState)\n            .nodes(DiscoveryNodes.builder().add(newNode(\"node1\")).add(newNode(\"node2\"))).build();\n        clusterState = allocation.reroute(clusterState, \"reroute\");\n        \r\n        clusterState = allocation.applyStartedShards(clusterState, clusterState.getRoutingNodes().shardsWithState(INITIALIZING));\n        \r\n        clusterState = allocation.applyStartedShards(clusterState, clusterState.getRoutingNodes().shardsWithState(INITIALIZING));\n        assertThat(clusterState.getRoutingNodes().unassigned().size() > 0, equalTo(false));\n        \r\n        clusterState = ClusterState.builder(clusterState).nodes(DiscoveryNodes.builder(clusterState.nodes()).remove(\"node2\")).build();\n        clusterState = allocation.deassociateDeadNodes(clusterState, true, \"reroute\");\n        \r\n        assertThat(clusterState.getRoutingNodes().unassigned().size() > 0, equalTo(true));\n        assertThat(clusterState.getRoutingNodes().shardsWithState(UNASSIGNED).size(), equalTo(1));\n        assertThat(clusterState.getRoutingNodes().shardsWithState(UNASSIGNED).get(0).unassignedInfo(), notNullValue());\n        assertThat(clusterState.getRoutingNodes().shardsWithState(UNASSIGNED).get(0).unassignedInfo().getReason(),\n            equalTo(UnassignedInfo.Reason.NODE_LEFT));\n        assertThat(clusterState.getRoutingNodes().shardsWithState(UNASSIGNED).get(0).unassignedInfo().getUnassignedTimeInMillis(),\n            greaterThan(0L));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/cluster/routing/UnassignedInfoTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":226,"status":"M"},{"authorDate":"2018-04-26 03:22:53","commitOrder":2,"curCode":"    public void testFailedShard() {\n        AllocationService allocation = createAllocationService();\n        MetaData metaData = MetaData.builder()\n                .put(IndexMetaData.builder(\"test\").settings(settings(Version.CURRENT)).numberOfShards(1).numberOfReplicas(1))\n                .build();\n        ClusterState clusterState = ClusterState.builder(ClusterName.CLUSTER_NAME_SETTING.getDefault(Settings.EMPTY))\n                .metaData(metaData)\n                .routingTable(RoutingTable.builder().addAsNew(metaData.index(\"test\")).build()).build();\n        clusterState = ClusterState.builder(clusterState).nodes(DiscoveryNodes.builder().add(newNode(\"node1\")).add(newNode(\"node2\"))).build();\n        clusterState = allocation.reroute(clusterState, \"reroute\");\n        \r\n        clusterState = allocation.applyStartedShards(clusterState, clusterState.getRoutingNodes().shardsWithState(INITIALIZING));\n        \r\n        clusterState = allocation.applyStartedShards(clusterState, clusterState.getRoutingNodes().shardsWithState(INITIALIZING));\n        assertThat(clusterState.getRoutingNodes().unassigned().size() > 0, equalTo(false));\n        \r\n        ShardRouting shardToFail = clusterState.getRoutingNodes().shardsWithState(STARTED).get(0);\n        clusterState = allocation.applyFailedShards(clusterState, Collections.singletonList(new FailedShard(shardToFail, \"test fail\", null, randomBoolean())));\n        \r\n        assertThat(clusterState.getRoutingNodes().unassigned().size() > 0, equalTo(true));\n        assertThat(clusterState.getRoutingNodes().shardsWithState(UNASSIGNED).size(), equalTo(1));\n        assertThat(clusterState.getRoutingNodes().shardsWithState(UNASSIGNED).get(0).unassignedInfo(), notNullValue());\n        assertThat(clusterState.getRoutingNodes().shardsWithState(UNASSIGNED).get(0).unassignedInfo().getReason(), equalTo(UnassignedInfo.Reason.ALLOCATION_FAILED));\n        assertThat(clusterState.getRoutingNodes().shardsWithState(UNASSIGNED).get(0).unassignedInfo().getMessage(), equalTo(\"failed shard on node [\" + shardToFail.currentNodeId() + \"]: test fail\"));\n        assertThat(clusterState.getRoutingNodes().shardsWithState(UNASSIGNED).get(0).unassignedInfo().getDetails(), equalTo(\"failed shard on node [\" + shardToFail.currentNodeId() + \"]: test fail\"));\n        assertThat(clusterState.getRoutingNodes().shardsWithState(UNASSIGNED).get(0).unassignedInfo().getUnassignedTimeInMillis(), greaterThan(0L));\n    }\n","date":"2018-04-26 03:22:53","endLine":266,"groupId":"12379","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testFailedShard","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/d8/f7f6552f90862bea13248d907495febd555b2a.src","preCode":"    public void testFailedShard() {\n        AllocationService allocation = createAllocationService();\n        MetaData metaData = MetaData.builder()\n                .put(IndexMetaData.builder(\"test\").settings(settings(Version.CURRENT)).numberOfShards(1).numberOfReplicas(1))\n                .build();\n        ClusterState clusterState = ClusterState.builder(ClusterName.CLUSTER_NAME_SETTING.getDefault(Settings.EMPTY))\n                .metaData(metaData)\n                .routingTable(RoutingTable.builder().addAsNew(metaData.index(\"test\")).build()).build();\n        clusterState = ClusterState.builder(clusterState).nodes(DiscoveryNodes.builder().add(newNode(\"node1\")).add(newNode(\"node2\"))).build();\n        clusterState = allocation.reroute(clusterState, \"reroute\");\n        \r\n        clusterState = allocation.applyStartedShards(clusterState, clusterState.getRoutingNodes().shardsWithState(INITIALIZING));\n        \r\n        clusterState = allocation.applyStartedShards(clusterState, clusterState.getRoutingNodes().shardsWithState(INITIALIZING));\n        assertThat(clusterState.getRoutingNodes().unassigned().size() > 0, equalTo(false));\n        \r\n        ShardRouting shardToFail = clusterState.getRoutingNodes().shardsWithState(STARTED).get(0);\n        clusterState = allocation.applyFailedShards(clusterState, Collections.singletonList(new FailedShard(shardToFail, \"test fail\", null, randomBoolean())));\n        \r\n        assertThat(clusterState.getRoutingNodes().unassigned().size() > 0, equalTo(true));\n        assertThat(clusterState.getRoutingNodes().shardsWithState(UNASSIGNED).size(), equalTo(1));\n        assertThat(clusterState.getRoutingNodes().shardsWithState(UNASSIGNED).get(0).unassignedInfo(), notNullValue());\n        assertThat(clusterState.getRoutingNodes().shardsWithState(UNASSIGNED).get(0).unassignedInfo().getReason(), equalTo(UnassignedInfo.Reason.ALLOCATION_FAILED));\n        assertThat(clusterState.getRoutingNodes().shardsWithState(UNASSIGNED).get(0).unassignedInfo().getMessage(), equalTo(\"failed shard on node [\" + shardToFail.currentNodeId() + \"]: test fail\"));\n        assertThat(clusterState.getRoutingNodes().shardsWithState(UNASSIGNED).get(0).unassignedInfo().getDetails(), equalTo(\"failed shard on node [\" + shardToFail.currentNodeId() + \"]: test fail\"));\n        assertThat(clusterState.getRoutingNodes().shardsWithState(UNASSIGNED).get(0).unassignedInfo().getUnassignedTimeInMillis(), greaterThan(0L));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/cluster/routing/UnassignedInfoTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":240,"status":"N"}],"commitId":"d193ca8aaecbba7ae2ee7c62855d0e062742cc58","commitMessage":"@@@Use disassociate in preference to deassociate (#37704)\n\n","date":"2019-01-24 00:06:25","modifiedFileCount":"25","status":"M","submitter":"David Kyle"},{"authorTime":"2019-07-18 13:39:24","codes":[{"authorDate":"2019-07-18 13:39:24","commitOrder":3,"curCode":"    public void testNodeLeave() {\n        AllocationService allocation = createAllocationService();\n        MetaData metaData = MetaData.builder()\n                .put(IndexMetaData.builder(\"test\").settings(settings(Version.CURRENT)).numberOfShards(1).numberOfReplicas(1))\n                .build();\n        ClusterState clusterState = ClusterState.builder(ClusterName.CLUSTER_NAME_SETTING.getDefault(Settings.EMPTY))\n                .metaData(metaData)\n                .routingTable(RoutingTable.builder().addAsNew(metaData.index(\"test\")).build()).build();\n        clusterState = ClusterState.builder(clusterState)\n            .nodes(DiscoveryNodes.builder().add(newNode(\"node1\")).add(newNode(\"node2\"))).build();\n        clusterState = allocation.reroute(clusterState, \"reroute\");\n        \r\n        clusterState = startInitializingShardsAndReroute(allocation, clusterState);\n        \r\n        clusterState = startInitializingShardsAndReroute(allocation, clusterState);\n        assertThat(clusterState.getRoutingNodes().unassigned().size() > 0, equalTo(false));\n        \r\n        clusterState = ClusterState.builder(clusterState).nodes(DiscoveryNodes.builder(clusterState.nodes()).remove(\"node2\")).build();\n        clusterState = allocation.disassociateDeadNodes(clusterState, true, \"reroute\");\n        \r\n        assertThat(clusterState.getRoutingNodes().unassigned().size() > 0, equalTo(true));\n        assertThat(clusterState.getRoutingNodes().shardsWithState(UNASSIGNED).size(), equalTo(1));\n        assertThat(clusterState.getRoutingNodes().shardsWithState(UNASSIGNED).get(0).unassignedInfo(), notNullValue());\n        assertThat(clusterState.getRoutingNodes().shardsWithState(UNASSIGNED).get(0).unassignedInfo().getReason(),\n            equalTo(UnassignedInfo.Reason.NODE_LEFT));\n        assertThat(clusterState.getRoutingNodes().shardsWithState(UNASSIGNED).get(0).unassignedInfo().getUnassignedTimeInMillis(),\n            greaterThan(0L));\n    }\n","date":"2019-07-18 13:39:24","endLine":254,"groupId":"53058","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testNodeLeave","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/20/216af9bf38efe79b7da89115c8b1d508306a91.src","preCode":"    public void testNodeLeave() {\n        AllocationService allocation = createAllocationService();\n        MetaData metaData = MetaData.builder()\n                .put(IndexMetaData.builder(\"test\").settings(settings(Version.CURRENT)).numberOfShards(1).numberOfReplicas(1))\n                .build();\n        ClusterState clusterState = ClusterState.builder(ClusterName.CLUSTER_NAME_SETTING.getDefault(Settings.EMPTY))\n                .metaData(metaData)\n                .routingTable(RoutingTable.builder().addAsNew(metaData.index(\"test\")).build()).build();\n        clusterState = ClusterState.builder(clusterState)\n            .nodes(DiscoveryNodes.builder().add(newNode(\"node1\")).add(newNode(\"node2\"))).build();\n        clusterState = allocation.reroute(clusterState, \"reroute\");\n        \r\n        clusterState = allocation.applyStartedShards(clusterState, clusterState.getRoutingNodes().shardsWithState(INITIALIZING));\n        \r\n        clusterState = allocation.applyStartedShards(clusterState, clusterState.getRoutingNodes().shardsWithState(INITIALIZING));\n        assertThat(clusterState.getRoutingNodes().unassigned().size() > 0, equalTo(false));\n        \r\n        clusterState = ClusterState.builder(clusterState).nodes(DiscoveryNodes.builder(clusterState.nodes()).remove(\"node2\")).build();\n        clusterState = allocation.disassociateDeadNodes(clusterState, true, \"reroute\");\n        \r\n        assertThat(clusterState.getRoutingNodes().unassigned().size() > 0, equalTo(true));\n        assertThat(clusterState.getRoutingNodes().shardsWithState(UNASSIGNED).size(), equalTo(1));\n        assertThat(clusterState.getRoutingNodes().shardsWithState(UNASSIGNED).get(0).unassignedInfo(), notNullValue());\n        assertThat(clusterState.getRoutingNodes().shardsWithState(UNASSIGNED).get(0).unassignedInfo().getReason(),\n            equalTo(UnassignedInfo.Reason.NODE_LEFT));\n        assertThat(clusterState.getRoutingNodes().shardsWithState(UNASSIGNED).get(0).unassignedInfo().getUnassignedTimeInMillis(),\n            greaterThan(0L));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/cluster/routing/UnassignedInfoTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":227,"status":"M"},{"authorDate":"2019-07-18 13:39:24","commitOrder":3,"curCode":"    public void testFailedShard() {\n        AllocationService allocation = createAllocationService();\n        MetaData metaData = MetaData.builder()\n                .put(IndexMetaData.builder(\"test\").settings(settings(Version.CURRENT)).numberOfShards(1).numberOfReplicas(1))\n                .build();\n        ClusterState clusterState = ClusterState.builder(ClusterName.CLUSTER_NAME_SETTING.getDefault(Settings.EMPTY))\n                .metaData(metaData)\n                .routingTable(RoutingTable.builder().addAsNew(metaData.index(\"test\")).build()).build();\n        clusterState = ClusterState.builder(clusterState)\n            .nodes(DiscoveryNodes.builder().add(newNode(\"node1\")).add(newNode(\"node2\"))).build();\n        clusterState = allocation.reroute(clusterState, \"reroute\");\n        \r\n        clusterState = startInitializingShardsAndReroute(allocation, clusterState);\n        \r\n        clusterState = startInitializingShardsAndReroute(allocation, clusterState);\n        assertThat(clusterState.getRoutingNodes().unassigned().size() > 0, equalTo(false));\n        \r\n        ShardRouting shardToFail = clusterState.getRoutingNodes().shardsWithState(STARTED).get(0);\n        clusterState = allocation.applyFailedShards(clusterState,\n            Collections.singletonList(new FailedShard(shardToFail, \"test fail\", null, randomBoolean())));\n        \r\n        assertThat(clusterState.getRoutingNodes().unassigned().size() > 0, equalTo(true));\n        assertThat(clusterState.getRoutingNodes().shardsWithState(UNASSIGNED).size(), equalTo(1));\n        assertThat(clusterState.getRoutingNodes().shardsWithState(UNASSIGNED).get(0).unassignedInfo(), notNullValue());\n        assertThat(clusterState.getRoutingNodes().shardsWithState(UNASSIGNED).get(0).unassignedInfo().getReason(),\n            equalTo(UnassignedInfo.Reason.ALLOCATION_FAILED));\n        assertThat(clusterState.getRoutingNodes().shardsWithState(UNASSIGNED).get(0).unassignedInfo().getMessage(),\n            equalTo(\"failed shard on node [\" + shardToFail.currentNodeId() + \"]: test fail\"));\n        assertThat(clusterState.getRoutingNodes().shardsWithState(UNASSIGNED).get(0).unassignedInfo().getDetails(),\n            equalTo(\"failed shard on node [\" + shardToFail.currentNodeId() + \"]: test fail\"));\n        assertThat(clusterState.getRoutingNodes().shardsWithState(UNASSIGNED).get(0).unassignedInfo().getUnassignedTimeInMillis(),\n            greaterThan(0L));\n    }\n","date":"2019-07-18 13:39:24","endLine":291,"groupId":"53059","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testFailedShard","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/20/216af9bf38efe79b7da89115c8b1d508306a91.src","preCode":"    public void testFailedShard() {\n        AllocationService allocation = createAllocationService();\n        MetaData metaData = MetaData.builder()\n                .put(IndexMetaData.builder(\"test\").settings(settings(Version.CURRENT)).numberOfShards(1).numberOfReplicas(1))\n                .build();\n        ClusterState clusterState = ClusterState.builder(ClusterName.CLUSTER_NAME_SETTING.getDefault(Settings.EMPTY))\n                .metaData(metaData)\n                .routingTable(RoutingTable.builder().addAsNew(metaData.index(\"test\")).build()).build();\n        clusterState = ClusterState.builder(clusterState)\n            .nodes(DiscoveryNodes.builder().add(newNode(\"node1\")).add(newNode(\"node2\"))).build();\n        clusterState = allocation.reroute(clusterState, \"reroute\");\n        \r\n        clusterState = allocation.applyStartedShards(clusterState, clusterState.getRoutingNodes().shardsWithState(INITIALIZING));\n        \r\n        clusterState = allocation.applyStartedShards(clusterState, clusterState.getRoutingNodes().shardsWithState(INITIALIZING));\n        assertThat(clusterState.getRoutingNodes().unassigned().size() > 0, equalTo(false));\n        \r\n        ShardRouting shardToFail = clusterState.getRoutingNodes().shardsWithState(STARTED).get(0);\n        clusterState = allocation.applyFailedShards(clusterState,\n            Collections.singletonList(new FailedShard(shardToFail, \"test fail\", null, randomBoolean())));\n        \r\n        assertThat(clusterState.getRoutingNodes().unassigned().size() > 0, equalTo(true));\n        assertThat(clusterState.getRoutingNodes().shardsWithState(UNASSIGNED).size(), equalTo(1));\n        assertThat(clusterState.getRoutingNodes().shardsWithState(UNASSIGNED).get(0).unassignedInfo(), notNullValue());\n        assertThat(clusterState.getRoutingNodes().shardsWithState(UNASSIGNED).get(0).unassignedInfo().getReason(),\n            equalTo(UnassignedInfo.Reason.ALLOCATION_FAILED));\n        assertThat(clusterState.getRoutingNodes().shardsWithState(UNASSIGNED).get(0).unassignedInfo().getMessage(),\n            equalTo(\"failed shard on node [\" + shardToFail.currentNodeId() + \"]: test fail\"));\n        assertThat(clusterState.getRoutingNodes().shardsWithState(UNASSIGNED).get(0).unassignedInfo().getDetails(),\n            equalTo(\"failed shard on node [\" + shardToFail.currentNodeId() + \"]: test fail\"));\n        assertThat(clusterState.getRoutingNodes().shardsWithState(UNASSIGNED).get(0).unassignedInfo().getUnassignedTimeInMillis(),\n            greaterThan(0L));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/cluster/routing/UnassignedInfoTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":259,"status":"M"}],"commitId":"51fb95ef83f7a1aa6cbc5207e504b03ccee724ee","commitMessage":"@@@Defer reroute when starting shards (#44433)\n\n* Defer reroute when starting shards\n\nToday we reroute the cluster as part of the process of starting a shard.  which\nruns at `URGENT` priority. In large clusters.  rerouting may take some time to\ncomplete.  and this means that a mere trickle of shard-started events can cause\nstarvation for other.  lower-priority.  tasks that are pending on the master.\n\nHowever.  it isn't really necessary to perform a reroute when starting a shard. \nas long as one occurs eventually. This commit removes the inline reroute from\nthe process of starting a shard and replaces it with a deferred one that runs\nat `NORMAL` priority.  avoiding starvation of higher-priority tasks.\n\nThis may improve some of the situations related to #42738 and #42105.\n\n* Specific test case for followup priority setting\n\nWe cannot set the priority in all InternalTestClusters because the deprecation\nwarning makes some tests unhappy. This commit adds a specific test instead.\n\n* Checkstyle\n\n* Cluster state always changed here\n\n* Assert consistency of routing nodes\n\n* Restrict setting only to reasonable priorities\n","date":"2019-07-18 13:39:24","modifiedFileCount":"60","status":"M","submitter":"David Turner"},{"authorTime":"2020-04-01 03:52:01","codes":[{"authorDate":"2020-04-01 03:52:01","commitOrder":4,"curCode":"    public void testNodeLeave() {\n        AllocationService allocation = createAllocationService();\n        Metadata metadata = Metadata.builder()\n                .put(IndexMetadata.builder(\"test\").settings(settings(Version.CURRENT)).numberOfShards(1).numberOfReplicas(1))\n                .build();\n        ClusterState clusterState = ClusterState.builder(ClusterName.CLUSTER_NAME_SETTING.getDefault(Settings.EMPTY))\n                .metadata(metadata)\n                .routingTable(RoutingTable.builder().addAsNew(metadata.index(\"test\")).build()).build();\n        clusterState = ClusterState.builder(clusterState)\n            .nodes(DiscoveryNodes.builder().add(newNode(\"node1\")).add(newNode(\"node2\"))).build();\n        clusterState = allocation.reroute(clusterState, \"reroute\");\n        \r\n        clusterState = startInitializingShardsAndReroute(allocation, clusterState);\n        \r\n        clusterState = startInitializingShardsAndReroute(allocation, clusterState);\n        assertThat(clusterState.getRoutingNodes().unassigned().size() > 0, equalTo(false));\n        \r\n        clusterState = ClusterState.builder(clusterState).nodes(DiscoveryNodes.builder(clusterState.nodes()).remove(\"node2\")).build();\n        clusterState = allocation.disassociateDeadNodes(clusterState, true, \"reroute\");\n        \r\n        assertThat(clusterState.getRoutingNodes().unassigned().size() > 0, equalTo(true));\n        assertThat(clusterState.getRoutingNodes().shardsWithState(UNASSIGNED).size(), equalTo(1));\n        assertThat(clusterState.getRoutingNodes().shardsWithState(UNASSIGNED).get(0).unassignedInfo(), notNullValue());\n        assertThat(clusterState.getRoutingNodes().shardsWithState(UNASSIGNED).get(0).unassignedInfo().getReason(),\n            equalTo(UnassignedInfo.Reason.NODE_LEFT));\n        assertThat(clusterState.getRoutingNodes().shardsWithState(UNASSIGNED).get(0).unassignedInfo().getUnassignedTimeInMillis(),\n            greaterThan(0L));\n    }\n","date":"2020-04-01 03:52:01","endLine":264,"groupId":"102134","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"testNodeLeave","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/12/41f43409c2bbbf4ede34b7feff1bf4e6d98e3b.src","preCode":"    public void testNodeLeave() {\n        AllocationService allocation = createAllocationService();\n        MetaData metaData = MetaData.builder()\n                .put(IndexMetaData.builder(\"test\").settings(settings(Version.CURRENT)).numberOfShards(1).numberOfReplicas(1))\n                .build();\n        ClusterState clusterState = ClusterState.builder(ClusterName.CLUSTER_NAME_SETTING.getDefault(Settings.EMPTY))\n                .metaData(metaData)\n                .routingTable(RoutingTable.builder().addAsNew(metaData.index(\"test\")).build()).build();\n        clusterState = ClusterState.builder(clusterState)\n            .nodes(DiscoveryNodes.builder().add(newNode(\"node1\")).add(newNode(\"node2\"))).build();\n        clusterState = allocation.reroute(clusterState, \"reroute\");\n        \r\n        clusterState = startInitializingShardsAndReroute(allocation, clusterState);\n        \r\n        clusterState = startInitializingShardsAndReroute(allocation, clusterState);\n        assertThat(clusterState.getRoutingNodes().unassigned().size() > 0, equalTo(false));\n        \r\n        clusterState = ClusterState.builder(clusterState).nodes(DiscoveryNodes.builder(clusterState.nodes()).remove(\"node2\")).build();\n        clusterState = allocation.disassociateDeadNodes(clusterState, true, \"reroute\");\n        \r\n        assertThat(clusterState.getRoutingNodes().unassigned().size() > 0, equalTo(true));\n        assertThat(clusterState.getRoutingNodes().shardsWithState(UNASSIGNED).size(), equalTo(1));\n        assertThat(clusterState.getRoutingNodes().shardsWithState(UNASSIGNED).get(0).unassignedInfo(), notNullValue());\n        assertThat(clusterState.getRoutingNodes().shardsWithState(UNASSIGNED).get(0).unassignedInfo().getReason(),\n            equalTo(UnassignedInfo.Reason.NODE_LEFT));\n        assertThat(clusterState.getRoutingNodes().shardsWithState(UNASSIGNED).get(0).unassignedInfo().getUnassignedTimeInMillis(),\n            greaterThan(0L));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/cluster/routing/UnassignedInfoTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":237,"status":"M"},{"authorDate":"2020-04-01 03:52:01","commitOrder":4,"curCode":"    public void testFailedShard() {\n        AllocationService allocation = createAllocationService();\n        Metadata metadata = Metadata.builder()\n                .put(IndexMetadata.builder(\"test\").settings(settings(Version.CURRENT)).numberOfShards(1).numberOfReplicas(1))\n                .build();\n        ClusterState clusterState = ClusterState.builder(ClusterName.CLUSTER_NAME_SETTING.getDefault(Settings.EMPTY))\n                .metadata(metadata)\n                .routingTable(RoutingTable.builder().addAsNew(metadata.index(\"test\")).build()).build();\n        clusterState = ClusterState.builder(clusterState)\n            .nodes(DiscoveryNodes.builder().add(newNode(\"node1\")).add(newNode(\"node2\"))).build();\n        clusterState = allocation.reroute(clusterState, \"reroute\");\n        \r\n        clusterState = startInitializingShardsAndReroute(allocation, clusterState);\n        \r\n        clusterState = startInitializingShardsAndReroute(allocation, clusterState);\n        assertThat(clusterState.getRoutingNodes().unassigned().size() > 0, equalTo(false));\n        \r\n        ShardRouting shardToFail = clusterState.getRoutingNodes().shardsWithState(STARTED).get(0);\n        clusterState = allocation.applyFailedShards(clusterState,\n            Collections.singletonList(new FailedShard(shardToFail, \"test fail\", null, randomBoolean())));\n        \r\n        assertThat(clusterState.getRoutingNodes().unassigned().size() > 0, equalTo(true));\n        assertThat(clusterState.getRoutingNodes().shardsWithState(UNASSIGNED).size(), equalTo(1));\n        assertThat(clusterState.getRoutingNodes().shardsWithState(UNASSIGNED).get(0).unassignedInfo(), notNullValue());\n        assertThat(clusterState.getRoutingNodes().shardsWithState(UNASSIGNED).get(0).unassignedInfo().getReason(),\n            equalTo(UnassignedInfo.Reason.ALLOCATION_FAILED));\n        assertThat(clusterState.getRoutingNodes().shardsWithState(UNASSIGNED).get(0).unassignedInfo().getMessage(),\n            equalTo(\"failed shard on node [\" + shardToFail.currentNodeId() + \"]: test fail\"));\n        assertThat(clusterState.getRoutingNodes().shardsWithState(UNASSIGNED).get(0).unassignedInfo().getDetails(),\n            equalTo(\"failed shard on node [\" + shardToFail.currentNodeId() + \"]: test fail\"));\n        assertThat(clusterState.getRoutingNodes().shardsWithState(UNASSIGNED).get(0).unassignedInfo().getUnassignedTimeInMillis(),\n            greaterThan(0L));\n    }\n","date":"2020-04-01 03:52:01","endLine":301,"groupId":"102134","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"testFailedShard","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/12/41f43409c2bbbf4ede34b7feff1bf4e6d98e3b.src","preCode":"    public void testFailedShard() {\n        AllocationService allocation = createAllocationService();\n        MetaData metaData = MetaData.builder()\n                .put(IndexMetaData.builder(\"test\").settings(settings(Version.CURRENT)).numberOfShards(1).numberOfReplicas(1))\n                .build();\n        ClusterState clusterState = ClusterState.builder(ClusterName.CLUSTER_NAME_SETTING.getDefault(Settings.EMPTY))\n                .metaData(metaData)\n                .routingTable(RoutingTable.builder().addAsNew(metaData.index(\"test\")).build()).build();\n        clusterState = ClusterState.builder(clusterState)\n            .nodes(DiscoveryNodes.builder().add(newNode(\"node1\")).add(newNode(\"node2\"))).build();\n        clusterState = allocation.reroute(clusterState, \"reroute\");\n        \r\n        clusterState = startInitializingShardsAndReroute(allocation, clusterState);\n        \r\n        clusterState = startInitializingShardsAndReroute(allocation, clusterState);\n        assertThat(clusterState.getRoutingNodes().unassigned().size() > 0, equalTo(false));\n        \r\n        ShardRouting shardToFail = clusterState.getRoutingNodes().shardsWithState(STARTED).get(0);\n        clusterState = allocation.applyFailedShards(clusterState,\n            Collections.singletonList(new FailedShard(shardToFail, \"test fail\", null, randomBoolean())));\n        \r\n        assertThat(clusterState.getRoutingNodes().unassigned().size() > 0, equalTo(true));\n        assertThat(clusterState.getRoutingNodes().shardsWithState(UNASSIGNED).size(), equalTo(1));\n        assertThat(clusterState.getRoutingNodes().shardsWithState(UNASSIGNED).get(0).unassignedInfo(), notNullValue());\n        assertThat(clusterState.getRoutingNodes().shardsWithState(UNASSIGNED).get(0).unassignedInfo().getReason(),\n            equalTo(UnassignedInfo.Reason.ALLOCATION_FAILED));\n        assertThat(clusterState.getRoutingNodes().shardsWithState(UNASSIGNED).get(0).unassignedInfo().getMessage(),\n            equalTo(\"failed shard on node [\" + shardToFail.currentNodeId() + \"]: test fail\"));\n        assertThat(clusterState.getRoutingNodes().shardsWithState(UNASSIGNED).get(0).unassignedInfo().getDetails(),\n            equalTo(\"failed shard on node [\" + shardToFail.currentNodeId() + \"]: test fail\"));\n        assertThat(clusterState.getRoutingNodes().shardsWithState(UNASSIGNED).get(0).unassignedInfo().getUnassignedTimeInMillis(),\n            greaterThan(0L));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/cluster/routing/UnassignedInfoTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":269,"status":"M"}],"commitId":"95a7eed9aa35f47b228e402508709b5bd6703cf4","commitMessage":"@@@Rename MetaData to Metadata in all of the places (#54519)\n\nThis is a simple naming change PR.  to fix the fact that \"metadata\" is a\nsingle English word.  and for too long we have not followed general\nnaming conventions for it. We are also not consistent about it.  for\nexample.  METADATA instead of META_DATA if we were trying to be\nconsistent with MetaData (although METADATA is correct when considered\nin the context of \"metadata\"). This was a simple find and replace across\nthe code base.  only taking a few minutes to fix this naming issue\nforever.","date":"2020-04-01 03:52:01","modifiedFileCount":"1712","status":"M","submitter":"Jason Tedor"}]
