[{"authorTime":"2020-05-07 08:20:26","codes":[{"authorDate":"2020-05-07 08:20:26","commitOrder":1,"curCode":"    public void testBadPercents() throws Exception {\n        double[] badPercents = {-1.0, 110.0};\n\n        try {\n            client().prepareSearch(\"idx\")\n                    .addAggregation(terms(\"terms\").field(\"tag\").subAggregation(sum(\"sum\").field(SINGLE_VALUED_FIELD_NAME)))\n                    .addAggregation(percentilesBucket(\"percentiles_bucket\", \"terms>sum\")\n                            .setPercents(badPercents)).get();\n\n            fail(\"Illegal percent's were provided but no exception was thrown.\");\n        } catch (Exception e) {\n            Throwable cause = ExceptionsHelper.unwrapCause(e);\n            if (cause == null) {\n                throw e;\n            } else if (cause instanceof SearchPhaseExecutionException) {\n                SearchPhaseExecutionException spee = (SearchPhaseExecutionException) e;\n                Throwable rootCause = spee.getRootCause();\n                if (!(rootCause instanceof IllegalArgumentException)) {\n                    throw e;\n                }\n            } else if (!(cause instanceof IllegalArgumentException)) {\n                throw e;\n            }\n        }\n\n    }\n","date":"2020-05-07 08:20:26","endLine":427,"groupId":"15458","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testBadPercents","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/50/d06b13fa7df6553afd1998abe49f183e654a74.src","preCode":"    public void testBadPercents() throws Exception {\n        double[] badPercents = {-1.0, 110.0};\n\n        try {\n            client().prepareSearch(\"idx\")\n                    .addAggregation(terms(\"terms\").field(\"tag\").subAggregation(sum(\"sum\").field(SINGLE_VALUED_FIELD_NAME)))\n                    .addAggregation(percentilesBucket(\"percentiles_bucket\", \"terms>sum\")\n                            .setPercents(badPercents)).get();\n\n            fail(\"Illegal percent's were provided but no exception was thrown.\");\n        } catch (Exception e) {\n            Throwable cause = ExceptionsHelper.unwrapCause(e);\n            if (cause == null) {\n                throw e;\n            } else if (cause instanceof SearchPhaseExecutionException) {\n                SearchPhaseExecutionException spee = (SearchPhaseExecutionException) e;\n                Throwable rootCause = spee.getRootCause();\n                if (!(rootCause instanceof IllegalArgumentException)) {\n                    throw e;\n                }\n            } else if (!(cause instanceof IllegalArgumentException)) {\n                throw e;\n            }\n        }\n\n    }\n","realPath":"server/src/internalClusterTest/java/org/elasticsearch/search/aggregations/pipeline/PercentilesBucketIT.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":402,"status":"B"},{"authorDate":"2020-05-07 08:20:26","commitOrder":1,"curCode":"    public void testBadPercents_asSubAgg() throws Exception {\n        double[] badPercents = {-1.0, 110.0};\n\n        try {\n            client()\n                .prepareSearch(\"idx\")\n                .addAggregation(\n                        terms(\"terms\")\n                                .field(\"tag\")\n                                .order(BucketOrder.key(true))\n                                .subAggregation(\n                                        histogram(\"histo\").field(SINGLE_VALUED_FIELD_NAME).interval(interval)\n                                                .extendedBounds(minRandomValue, maxRandomValue))\n                                .subAggregation(percentilesBucket(\"percentiles_bucket\", \"histo>_count\")\n                                        .setPercents(badPercents))).get();\n\n            fail(\"Illegal percent's were provided but no exception was thrown.\");\n        } catch (Exception e) {\n            Throwable cause = ExceptionsHelper.unwrapCause(e);\n            if (cause == null) {\n                throw e;\n            } else if (cause instanceof SearchPhaseExecutionException) {\n                SearchPhaseExecutionException spee = (SearchPhaseExecutionException) e;\n                Throwable rootCause = spee.getRootCause();\n                if (!(rootCause instanceof IllegalArgumentException)) {\n                    throw e;\n                }\n            } else if (!(cause instanceof IllegalArgumentException)) {\n                throw e;\n            }\n        }\n\n    }\n","date":"2020-05-07 08:20:26","endLine":461,"groupId":"15456","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testBadPercents_asSubAgg","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/50/d06b13fa7df6553afd1998abe49f183e654a74.src","preCode":"    public void testBadPercents_asSubAgg() throws Exception {\n        double[] badPercents = {-1.0, 110.0};\n\n        try {\n            client()\n                .prepareSearch(\"idx\")\n                .addAggregation(\n                        terms(\"terms\")\n                                .field(\"tag\")\n                                .order(BucketOrder.key(true))\n                                .subAggregation(\n                                        histogram(\"histo\").field(SINGLE_VALUED_FIELD_NAME).interval(interval)\n                                                .extendedBounds(minRandomValue, maxRandomValue))\n                                .subAggregation(percentilesBucket(\"percentiles_bucket\", \"histo>_count\")\n                                        .setPercents(badPercents))).get();\n\n            fail(\"Illegal percent's were provided but no exception was thrown.\");\n        } catch (Exception e) {\n            Throwable cause = ExceptionsHelper.unwrapCause(e);\n            if (cause == null) {\n                throw e;\n            } else if (cause instanceof SearchPhaseExecutionException) {\n                SearchPhaseExecutionException spee = (SearchPhaseExecutionException) e;\n                Throwable rootCause = spee.getRootCause();\n                if (!(rootCause instanceof IllegalArgumentException)) {\n                    throw e;\n                }\n            } else if (!(cause instanceof IllegalArgumentException)) {\n                throw e;\n            }\n        }\n\n    }\n","realPath":"server/src/internalClusterTest/java/org/elasticsearch/search/aggregations/pipeline/PercentilesBucketIT.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":429,"status":"B"}],"commitId":"cabe6a330514f0f80f3b95be8763082b25efce89","commitMessage":"@@@Create plugin for internalClusterTest task (#55896)\n\nThis commit creates a new gradle plugin to provide a separate task name\nand source set for running ESIntegTestCase tests. The only project\nconverted to use the new plugin in this PR is server.  as an example. The\nremaining cases in x-pack will be handled in followups.","date":"2020-05-07 08:20:26","modifiedFileCount":"5","status":"B","submitter":"Ryan Ernst"},{"authorTime":"2021-01-29 21:51:41","codes":[{"authorDate":"2021-01-29 21:51:41","commitOrder":2,"curCode":"    public void testBadPercents() throws Exception {\n        double[] badPercents = {-1.0, 110.0};\n\n        try {\n            client().prepareSearch(\"idx\")\n                    .addAggregation(terms(\"terms\").field(\"tag\").subAggregation(sum(\"sum\").field(SINGLE_VALUED_FIELD_NAME)))\n                    .addAggregation(percentilesBucket(\"percentiles_bucket\", \"terms>sum\")\n                            .setPercents(badPercents)).get();\n\n            fail(\"Illegal percent's were provided but no exception was thrown.\");\n        } catch (Exception e) {\n            Throwable cause = ExceptionsHelper.unwrapCause(e);\n            if (cause == null) {\n                throw e;\n            } else if (cause instanceof SearchPhaseExecutionException) {\n                SearchPhaseExecutionException spee = (SearchPhaseExecutionException) e;\n                Throwable rootCause = spee.getRootCause();\n                if ((rootCause instanceof IllegalArgumentException) == false) {\n                    throw e;\n                }\n            } else if ((cause instanceof IllegalArgumentException) == false) {\n                throw e;\n            }\n        }\n\n    }\n","date":"2021-01-29 21:51:41","endLine":427,"groupId":"15458","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testBadPercents","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/f7/891e27592ad96dbe5888e552b0a110e441f9a6.src","preCode":"    public void testBadPercents() throws Exception {\n        double[] badPercents = {-1.0, 110.0};\n\n        try {\n            client().prepareSearch(\"idx\")\n                    .addAggregation(terms(\"terms\").field(\"tag\").subAggregation(sum(\"sum\").field(SINGLE_VALUED_FIELD_NAME)))\n                    .addAggregation(percentilesBucket(\"percentiles_bucket\", \"terms>sum\")\n                            .setPercents(badPercents)).get();\n\n            fail(\"Illegal percent's were provided but no exception was thrown.\");\n        } catch (Exception e) {\n            Throwable cause = ExceptionsHelper.unwrapCause(e);\n            if (cause == null) {\n                throw e;\n            } else if (cause instanceof SearchPhaseExecutionException) {\n                SearchPhaseExecutionException spee = (SearchPhaseExecutionException) e;\n                Throwable rootCause = spee.getRootCause();\n                if (!(rootCause instanceof IllegalArgumentException)) {\n                    throw e;\n                }\n            } else if (!(cause instanceof IllegalArgumentException)) {\n                throw e;\n            }\n        }\n\n    }\n","realPath":"server/src/internalClusterTest/java/org/elasticsearch/search/aggregations/pipeline/PercentilesBucketIT.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":402,"status":"M"},{"authorDate":"2021-01-29 21:51:41","commitOrder":2,"curCode":"    public void testBadPercents_asSubAgg() throws Exception {\n        double[] badPercents = {-1.0, 110.0};\n\n        try {\n            client()\n                .prepareSearch(\"idx\")\n                .addAggregation(\n                        terms(\"terms\")\n                                .field(\"tag\")\n                                .order(BucketOrder.key(true))\n                                .subAggregation(\n                                        histogram(\"histo\").field(SINGLE_VALUED_FIELD_NAME).interval(interval)\n                                                .extendedBounds(minRandomValue, maxRandomValue))\n                                .subAggregation(percentilesBucket(\"percentiles_bucket\", \"histo>_count\")\n                                        .setPercents(badPercents))).get();\n\n            fail(\"Illegal percent's were provided but no exception was thrown.\");\n        } catch (Exception e) {\n            Throwable cause = ExceptionsHelper.unwrapCause(e);\n            if (cause == null) {\n                throw e;\n            } else if (cause instanceof SearchPhaseExecutionException) {\n                SearchPhaseExecutionException spee = (SearchPhaseExecutionException) e;\n                Throwable rootCause = spee.getRootCause();\n                if ((rootCause instanceof IllegalArgumentException) == false) {\n                    throw e;\n                }\n            } else if ((cause instanceof IllegalArgumentException) == false) {\n                throw e;\n            }\n        }\n\n    }\n","date":"2021-01-29 21:51:41","endLine":461,"groupId":"15456","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testBadPercents_asSubAgg","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/f7/891e27592ad96dbe5888e552b0a110e441f9a6.src","preCode":"    public void testBadPercents_asSubAgg() throws Exception {\n        double[] badPercents = {-1.0, 110.0};\n\n        try {\n            client()\n                .prepareSearch(\"idx\")\n                .addAggregation(\n                        terms(\"terms\")\n                                .field(\"tag\")\n                                .order(BucketOrder.key(true))\n                                .subAggregation(\n                                        histogram(\"histo\").field(SINGLE_VALUED_FIELD_NAME).interval(interval)\n                                                .extendedBounds(minRandomValue, maxRandomValue))\n                                .subAggregation(percentilesBucket(\"percentiles_bucket\", \"histo>_count\")\n                                        .setPercents(badPercents))).get();\n\n            fail(\"Illegal percent's were provided but no exception was thrown.\");\n        } catch (Exception e) {\n            Throwable cause = ExceptionsHelper.unwrapCause(e);\n            if (cause == null) {\n                throw e;\n            } else if (cause instanceof SearchPhaseExecutionException) {\n                SearchPhaseExecutionException spee = (SearchPhaseExecutionException) e;\n                Throwable rootCause = spee.getRootCause();\n                if (!(rootCause instanceof IllegalArgumentException)) {\n                    throw e;\n                }\n            } else if (!(cause instanceof IllegalArgumentException)) {\n                throw e;\n            }\n        }\n\n    }\n","realPath":"server/src/internalClusterTest/java/org/elasticsearch/search/aggregations/pipeline/PercentilesBucketIT.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":429,"status":"M"}],"commitId":"d5c5f9e9a6916c38818817b60a23f268bdd67fa5","commitMessage":"@@@Replace NOT operator with explicit `false` check (#68124)\n\nPart 3.\n\nWe have an in-house rule to compare explicitly against `false` instead\nof using the logical not operator (`!`). However.  this hasn't\nhistorically been enforced.  meaning that there are many violations in\nthe source at present.\n\nWe now have a Checkstyle rule that can detect these cases.  but before we\ncan turn it on.  we need to fix the existing violations. This is being\ndone over a series of PRs.  since there are a lot to fix.","date":"2021-01-29 21:51:41","modifiedFileCount":"101","status":"M","submitter":"Rory Hunter"},{"authorTime":"2021-09-16 13:46:30","codes":[{"authorDate":"2021-09-16 13:46:30","commitOrder":3,"curCode":"    public void testBadPercents() throws Exception {\n        double[] badPercents = { -1.0, 110.0 };\n\n        try {\n            client().prepareSearch(\"idx\")\n                .addAggregation(terms(termsName).field(\"tag\").subAggregation(sum(\"sum\").field(SINGLE_VALUED_FIELD_NAME)))\n                .addAggregation(percentilesBucket(\"percentiles_bucket\", termsName + \">sum\").setPercents(badPercents))\n                .get();\n\n            fail(\"Illegal percent's were provided but no exception was thrown.\");\n        } catch (Exception e) {\n            Throwable cause = ExceptionsHelper.unwrapCause(e);\n            if (cause == null) {\n                throw e;\n            } else if (cause instanceof SearchPhaseExecutionException) {\n                SearchPhaseExecutionException spee = (SearchPhaseExecutionException) e;\n                Throwable rootCause = spee.getRootCause();\n                if ((rootCause instanceof IllegalArgumentException) == false) {\n                    throw e;\n                }\n            } else if ((cause instanceof IllegalArgumentException) == false) {\n                throw e;\n            }\n        }\n\n    }\n","date":"2021-09-16 13:46:30","endLine":158,"groupId":"107181","id":5,"instanceNumber":1,"isCurCommit":1,"methodName":"testBadPercents","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/6c/432a13815e4dcbf67b77a70e3efc114335cc3c.src","preCode":"    public void testBadPercents() throws Exception {\n        double[] badPercents = { -1.0, 110.0 };\n\n        try {\n            client().prepareSearch(\"idx\")\n                .addAggregation(terms(\"terms\").field(\"tag\").subAggregation(sum(\"sum\").field(SINGLE_VALUED_FIELD_NAME)))\n                .addAggregation(percentilesBucket(\"percentiles_bucket\", \"terms>sum\").setPercents(badPercents))\n                .get();\n\n            fail(\"Illegal percent's were provided but no exception was thrown.\");\n        } catch (Exception e) {\n            Throwable cause = ExceptionsHelper.unwrapCause(e);\n            if (cause == null) {\n                throw e;\n            } else if (cause instanceof SearchPhaseExecutionException) {\n                SearchPhaseExecutionException spee = (SearchPhaseExecutionException) e;\n                Throwable rootCause = spee.getRootCause();\n                if ((rootCause instanceof IllegalArgumentException) == false) {\n                    throw e;\n                }\n            } else if ((cause instanceof IllegalArgumentException) == false) {\n                throw e;\n            }\n        }\n\n    }\n","realPath":"server/src/internalClusterTest/java/org/elasticsearch/search/aggregations/pipeline/PercentilesBucketIT.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":133,"status":"M"},{"authorDate":"2021-09-16 13:46:30","commitOrder":3,"curCode":"    public void testBadPercents_asSubAgg() throws Exception {\n        double[] badPercents = { -1.0, 110.0 };\n\n        try {\n            client().prepareSearch(\"idx\")\n                .addAggregation(\n                    terms(termsName).field(\"tag\")\n                        .order(BucketOrder.key(true))\n                        .subAggregation(\n                            histogram(histoName).field(SINGLE_VALUED_FIELD_NAME)\n                                .interval(interval)\n                                .extendedBounds(minRandomValue, maxRandomValue)\n                        )\n                        .subAggregation(percentilesBucket(\"percentiles_bucket\", histoName + \">_count\").setPercents(badPercents))\n                )\n                .get();\n\n            fail(\"Illegal percent's were provided but no exception was thrown.\");\n        } catch (Exception e) {\n            Throwable cause = ExceptionsHelper.unwrapCause(e);\n            if (cause == null) {\n                throw e;\n            } else if (cause instanceof SearchPhaseExecutionException) {\n                SearchPhaseExecutionException spee = (SearchPhaseExecutionException) e;\n                Throwable rootCause = spee.getRootCause();\n                if ((rootCause instanceof IllegalArgumentException) == false) {\n                    throw e;\n                }\n            } else if ((cause instanceof IllegalArgumentException) == false) {\n                throw e;\n            }\n        }\n\n    }\n","date":"2021-09-16 13:46:30","endLine":193,"groupId":"107181","id":6,"instanceNumber":2,"isCurCommit":1,"methodName":"testBadPercents_asSubAgg","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/6c/432a13815e4dcbf67b77a70e3efc114335cc3c.src","preCode":"    public void testBadPercents_asSubAgg() throws Exception {\n        double[] badPercents = { -1.0, 110.0 };\n\n        try {\n            client().prepareSearch(\"idx\")\n                .addAggregation(\n                    terms(\"terms\").field(\"tag\")\n                        .order(BucketOrder.key(true))\n                        .subAggregation(\n                            histogram(\"histo\").field(SINGLE_VALUED_FIELD_NAME)\n                                .interval(interval)\n                                .extendedBounds(minRandomValue, maxRandomValue)\n                        )\n                        .subAggregation(percentilesBucket(\"percentiles_bucket\", \"histo>_count\").setPercents(badPercents))\n                )\n                .get();\n\n            fail(\"Illegal percent's were provided but no exception was thrown.\");\n        } catch (Exception e) {\n            Throwable cause = ExceptionsHelper.unwrapCause(e);\n            if (cause == null) {\n                throw e;\n            } else if (cause instanceof SearchPhaseExecutionException) {\n                SearchPhaseExecutionException spee = (SearchPhaseExecutionException) e;\n                Throwable rootCause = spee.getRootCause();\n                if ((rootCause instanceof IllegalArgumentException) == false) {\n                    throw e;\n                }\n            } else if ((cause instanceof IllegalArgumentException) == false) {\n                throw e;\n            }\n        }\n\n    }\n","realPath":"server/src/internalClusterTest/java/org/elasticsearch/search/aggregations/pipeline/PercentilesBucketIT.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":160,"status":"M"}],"commitId":"514352101236c94fcf5bee4f286f004c10b7da0b","commitMessage":"@@@Refactor metric PipelineAggregation integration test (#77548)\n\nThis commit extracts BucketMetricsPipeLineAggregationTestCase and simplifies the testing of several \npipeline aggregations.","date":"2021-09-16 13:46:30","modifiedFileCount":"7","status":"M","submitter":"Ignacio Vera"}]
