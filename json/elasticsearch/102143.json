[{"authorTime":"2018-04-26 03:22:53","codes":[{"authorDate":"2018-04-26 03:22:53","commitOrder":1,"curCode":"    private void applyRerouteResult(ClusterState newClusterState) {\n        ClusterState previousClusterState = this.clusterState;\n        ClusterState.Builder builder = ClusterState.builder(newClusterState).incrementVersion();\n        if (previousClusterState.routingTable() != newClusterState.routingTable()) {\n            builder.routingTable(RoutingTable.builder(newClusterState.routingTable()).version(newClusterState.routingTable().version() + 1)\n                    .build());\n        }\n        if (previousClusterState.metaData() != newClusterState.metaData()) {\n            builder.metaData(MetaData.builder(newClusterState.metaData()).version(newClusterState.metaData().version() + 1));\n        }\n        this.clusterState = builder.build();\n        final ClusterStateHealth clusterHealth = new ClusterStateHealth(clusterState);\n        logger.info(\"applied reroute. active shards: p [{}], t [{}], init shards: [{}], relocating: [{}]\",\n                clusterHealth.getActivePrimaryShards(), clusterHealth.getActiveShards(),\n                clusterHealth.getInitializingShards(), clusterHealth.getRelocatingShards());\n    }\n","date":"2018-04-26 03:22:53","endLine":136,"groupId":"56232","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"applyRerouteResult","params":"(ClusterStatenewClusterState)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/65/526896864d6bbbc05a1a3c5b9a16d68b651401.src","preCode":"    private void applyRerouteResult(ClusterState newClusterState) {\n        ClusterState previousClusterState = this.clusterState;\n        ClusterState.Builder builder = ClusterState.builder(newClusterState).incrementVersion();\n        if (previousClusterState.routingTable() != newClusterState.routingTable()) {\n            builder.routingTable(RoutingTable.builder(newClusterState.routingTable()).version(newClusterState.routingTable().version() + 1)\n                    .build());\n        }\n        if (previousClusterState.metaData() != newClusterState.metaData()) {\n            builder.metaData(MetaData.builder(newClusterState.metaData()).version(newClusterState.metaData().version() + 1));\n        }\n        this.clusterState = builder.build();\n        final ClusterStateHealth clusterHealth = new ClusterStateHealth(clusterState);\n        logger.info(\"applied reroute. active shards: p [{}], t [{}], init shards: [{}], relocating: [{}]\",\n                clusterHealth.getActivePrimaryShards(), clusterHealth.getActiveShards(),\n                clusterHealth.getInitializingShards(), clusterHealth.getRelocatingShards());\n    }\n","realPath":"server/src/test/java/org/elasticsearch/cluster/routing/PrimaryTermsTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":121,"status":"B"},{"authorDate":"2018-04-26 03:22:53","commitOrder":1,"curCode":"    private ClusterState patchVersions(ClusterState previousClusterState, ClusterTasksResult<?> executionResult) {\n        ClusterState newClusterState = executionResult.resultingState;\n\n        if (previousClusterState != newClusterState) {\n            \r\n            Builder builder = ClusterState.builder(newClusterState).incrementVersion();\n            if (previousClusterState.routingTable() != newClusterState.routingTable()) {\n                builder.routingTable(RoutingTable.builder(newClusterState.routingTable())\n                    .version(newClusterState.routingTable().version() + 1).build());\n            }\n            if (previousClusterState.metaData() != newClusterState.metaData()) {\n                builder.metaData(MetaData.builder(newClusterState.metaData()).version(newClusterState.metaData().version() + 1));\n            }\n\n            newClusterState = builder.build();\n        }\n\n        return newClusterState;\n    }\n","date":"2018-04-26 03:22:53","endLine":291,"groupId":"56232","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"patchVersions","params":"(ClusterStatepreviousClusterState@ClusterTasksResult<?>executionResult)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/20/a6602b5c5ad0a6e4380feab1a8b7fef78e7470.src","preCode":"    private ClusterState patchVersions(ClusterState previousClusterState, ClusterTasksResult<?> executionResult) {\n        ClusterState newClusterState = executionResult.resultingState;\n\n        if (previousClusterState != newClusterState) {\n            \r\n            Builder builder = ClusterState.builder(newClusterState).incrementVersion();\n            if (previousClusterState.routingTable() != newClusterState.routingTable()) {\n                builder.routingTable(RoutingTable.builder(newClusterState.routingTable())\n                    .version(newClusterState.routingTable().version() + 1).build());\n            }\n            if (previousClusterState.metaData() != newClusterState.metaData()) {\n                builder.metaData(MetaData.builder(newClusterState.metaData()).version(newClusterState.metaData().version() + 1));\n            }\n\n            newClusterState = builder.build();\n        }\n\n        return newClusterState;\n    }\n","realPath":"server/src/main/java/org/elasticsearch/cluster/service/MasterService.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":273,"status":"B"}],"commitId":"d74fb9eb4559077e2d20b19a9ed62d9ff825027a","commitMessage":"@@@Opened x-pack ILM code\n","date":"2018-04-26 03:22:53","modifiedFileCount":"0","status":"B","submitter":"Tal Levy"},{"authorTime":"2018-12-06 15:31:46","codes":[{"authorDate":"2018-04-26 03:22:53","commitOrder":2,"curCode":"    private void applyRerouteResult(ClusterState newClusterState) {\n        ClusterState previousClusterState = this.clusterState;\n        ClusterState.Builder builder = ClusterState.builder(newClusterState).incrementVersion();\n        if (previousClusterState.routingTable() != newClusterState.routingTable()) {\n            builder.routingTable(RoutingTable.builder(newClusterState.routingTable()).version(newClusterState.routingTable().version() + 1)\n                    .build());\n        }\n        if (previousClusterState.metaData() != newClusterState.metaData()) {\n            builder.metaData(MetaData.builder(newClusterState.metaData()).version(newClusterState.metaData().version() + 1));\n        }\n        this.clusterState = builder.build();\n        final ClusterStateHealth clusterHealth = new ClusterStateHealth(clusterState);\n        logger.info(\"applied reroute. active shards: p [{}], t [{}], init shards: [{}], relocating: [{}]\",\n                clusterHealth.getActivePrimaryShards(), clusterHealth.getActiveShards(),\n                clusterHealth.getInitializingShards(), clusterHealth.getRelocatingShards());\n    }\n","date":"2018-04-26 03:22:53","endLine":136,"groupId":"56232","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"applyRerouteResult","params":"(ClusterStatenewClusterState)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/65/526896864d6bbbc05a1a3c5b9a16d68b651401.src","preCode":"    private void applyRerouteResult(ClusterState newClusterState) {\n        ClusterState previousClusterState = this.clusterState;\n        ClusterState.Builder builder = ClusterState.builder(newClusterState).incrementVersion();\n        if (previousClusterState.routingTable() != newClusterState.routingTable()) {\n            builder.routingTable(RoutingTable.builder(newClusterState.routingTable()).version(newClusterState.routingTable().version() + 1)\n                    .build());\n        }\n        if (previousClusterState.metaData() != newClusterState.metaData()) {\n            builder.metaData(MetaData.builder(newClusterState.metaData()).version(newClusterState.metaData().version() + 1));\n        }\n        this.clusterState = builder.build();\n        final ClusterStateHealth clusterHealth = new ClusterStateHealth(clusterState);\n        logger.info(\"applied reroute. active shards: p [{}], t [{}], init shards: [{}], relocating: [{}]\",\n                clusterHealth.getActivePrimaryShards(), clusterHealth.getActiveShards(),\n                clusterHealth.getInitializingShards(), clusterHealth.getRelocatingShards());\n    }\n","realPath":"server/src/test/java/org/elasticsearch/cluster/routing/PrimaryTermsTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":121,"status":"N"},{"authorDate":"2018-12-06 15:31:46","commitOrder":2,"curCode":"    private ClusterState patchVersions(ClusterState previousClusterState, ClusterTasksResult<?> executionResult) {\n        ClusterState newClusterState = executionResult.resultingState;\n\n        if (previousClusterState != newClusterState) {\n            \r\n            Builder builder = incrementVersion(newClusterState);\n            if (previousClusterState.routingTable() != newClusterState.routingTable()) {\n                builder.routingTable(RoutingTable.builder(newClusterState.routingTable())\n                    .version(newClusterState.routingTable().version() + 1).build());\n            }\n            if (previousClusterState.metaData() != newClusterState.metaData()) {\n                builder.metaData(MetaData.builder(newClusterState.metaData()).version(newClusterState.metaData().version() + 1));\n            }\n\n            newClusterState = builder.build();\n        }\n\n        return newClusterState;\n    }\n","date":"2018-12-06 15:31:46","endLine":334,"groupId":"56232","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"patchVersions","params":"(ClusterStatepreviousClusterState@ClusterTasksResult<?>executionResult)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/fb/c1a08182109fa342ec69004378aa89971bbaab.src","preCode":"    private ClusterState patchVersions(ClusterState previousClusterState, ClusterTasksResult<?> executionResult) {\n        ClusterState newClusterState = executionResult.resultingState;\n\n        if (previousClusterState != newClusterState) {\n            \r\n            Builder builder = ClusterState.builder(newClusterState).incrementVersion();\n            if (previousClusterState.routingTable() != newClusterState.routingTable()) {\n                builder.routingTable(RoutingTable.builder(newClusterState.routingTable())\n                    .version(newClusterState.routingTable().version() + 1).build());\n            }\n            if (previousClusterState.metaData() != newClusterState.metaData()) {\n                builder.metaData(MetaData.builder(newClusterState.metaData()).version(newClusterState.metaData().version() + 1));\n            }\n\n            newClusterState = builder.build();\n        }\n\n        return newClusterState;\n    }\n","realPath":"server/src/main/java/org/elasticsearch/cluster/service/MasterService.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":316,"status":"M"}],"commitId":"ee05ef131286eead295cf58ed4393af56f0d7ade","commitMessage":"@@@Merge branch 'zen2'\n","date":"2018-12-06 15:31:46","modifiedFileCount":"122","status":"M","submitter":"Yannick Welsch"},{"authorTime":"2020-04-01 03:52:01","codes":[{"authorDate":"2020-04-01 03:52:01","commitOrder":3,"curCode":"    private void applyRerouteResult(ClusterState newClusterState) {\n        ClusterState previousClusterState = this.clusterState;\n        ClusterState.Builder builder = ClusterState.builder(newClusterState).incrementVersion();\n        if (previousClusterState.routingTable() != newClusterState.routingTable()) {\n            builder.routingTable(RoutingTable.builder(newClusterState.routingTable()).version(newClusterState.routingTable().version() + 1)\n                    .build());\n        }\n        if (previousClusterState.metadata() != newClusterState.metadata()) {\n            builder.metadata(Metadata.builder(newClusterState.metadata()).version(newClusterState.metadata().version() + 1));\n        }\n        this.clusterState = builder.build();\n        final ClusterStateHealth clusterHealth = new ClusterStateHealth(clusterState);\n        logger.info(\"applied reroute. active shards: p [{}], t [{}], init shards: [{}], relocating: [{}]\",\n                clusterHealth.getActivePrimaryShards(), clusterHealth.getActiveShards(),\n                clusterHealth.getInitializingShards(), clusterHealth.getRelocatingShards());\n    }\n","date":"2020-04-01 03:52:01","endLine":136,"groupId":"102143","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"applyRerouteResult","params":"(ClusterStatenewClusterState)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/3d/9f42d88151a5caabf35f58fd8bda3e6407cfd1.src","preCode":"    private void applyRerouteResult(ClusterState newClusterState) {\n        ClusterState previousClusterState = this.clusterState;\n        ClusterState.Builder builder = ClusterState.builder(newClusterState).incrementVersion();\n        if (previousClusterState.routingTable() != newClusterState.routingTable()) {\n            builder.routingTable(RoutingTable.builder(newClusterState.routingTable()).version(newClusterState.routingTable().version() + 1)\n                    .build());\n        }\n        if (previousClusterState.metaData() != newClusterState.metaData()) {\n            builder.metaData(MetaData.builder(newClusterState.metaData()).version(newClusterState.metaData().version() + 1));\n        }\n        this.clusterState = builder.build();\n        final ClusterStateHealth clusterHealth = new ClusterStateHealth(clusterState);\n        logger.info(\"applied reroute. active shards: p [{}], t [{}], init shards: [{}], relocating: [{}]\",\n                clusterHealth.getActivePrimaryShards(), clusterHealth.getActiveShards(),\n                clusterHealth.getInitializingShards(), clusterHealth.getRelocatingShards());\n    }\n","realPath":"server/src/test/java/org/elasticsearch/cluster/routing/PrimaryTermsTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":121,"status":"M"},{"authorDate":"2020-04-01 03:52:01","commitOrder":3,"curCode":"    private ClusterState patchVersions(ClusterState previousClusterState, ClusterTasksResult<?> executionResult) {\n        ClusterState newClusterState = executionResult.resultingState;\n\n        if (previousClusterState != newClusterState) {\n            \r\n            Builder builder = incrementVersion(newClusterState);\n            if (previousClusterState.routingTable() != newClusterState.routingTable()) {\n                builder.routingTable(RoutingTable.builder(newClusterState.routingTable())\n                    .version(newClusterState.routingTable().version() + 1).build());\n            }\n            if (previousClusterState.metadata() != newClusterState.metadata()) {\n                builder.metadata(Metadata.builder(newClusterState.metadata()).version(newClusterState.metadata().version() + 1));\n            }\n\n            newClusterState = builder.build();\n        }\n\n        return newClusterState;\n    }\n","date":"2020-04-01 03:52:01","endLine":343,"groupId":"102143","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"patchVersions","params":"(ClusterStatepreviousClusterState@ClusterTasksResult<?>executionResult)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/b8/779e78268b72b5fe1137412bc5bd5353457f3c.src","preCode":"    private ClusterState patchVersions(ClusterState previousClusterState, ClusterTasksResult<?> executionResult) {\n        ClusterState newClusterState = executionResult.resultingState;\n\n        if (previousClusterState != newClusterState) {\n            \r\n            Builder builder = incrementVersion(newClusterState);\n            if (previousClusterState.routingTable() != newClusterState.routingTable()) {\n                builder.routingTable(RoutingTable.builder(newClusterState.routingTable())\n                    .version(newClusterState.routingTable().version() + 1).build());\n            }\n            if (previousClusterState.metaData() != newClusterState.metaData()) {\n                builder.metaData(MetaData.builder(newClusterState.metaData()).version(newClusterState.metaData().version() + 1));\n            }\n\n            newClusterState = builder.build();\n        }\n\n        return newClusterState;\n    }\n","realPath":"server/src/main/java/org/elasticsearch/cluster/service/MasterService.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":325,"status":"M"}],"commitId":"95a7eed9aa35f47b228e402508709b5bd6703cf4","commitMessage":"@@@Rename MetaData to Metadata in all of the places (#54519)\n\nThis is a simple naming change PR.  to fix the fact that \"metadata\" is a\nsingle English word.  and for too long we have not followed general\nnaming conventions for it. We are also not consistent about it.  for\nexample.  METADATA instead of META_DATA if we were trying to be\nconsistent with MetaData (although METADATA is correct when considered\nin the context of \"metadata\"). This was a simple find and replace across\nthe code base.  only taking a few minutes to fix this naming issue\nforever.","date":"2020-04-01 03:52:01","modifiedFileCount":"1712","status":"M","submitter":"Jason Tedor"}]
