[{"authorTime":"2018-04-26 03:22:53","codes":[{"authorDate":"2018-04-26 03:22:53","commitOrder":1,"curCode":"    public void testFromXContent() throws Exception {\n        for (int runs = 0; runs < 20; runs++) {\n            SearchAfterBuilder searchAfterBuilder = randomJsonSearchFromBuilder();\n            XContentBuilder builder = XContentFactory.contentBuilder(randomFrom(XContentType.values()));\n            if (randomBoolean()) {\n                builder.prettyPrint();\n            }\n            builder.startObject();\n            searchAfterBuilder.innerToXContent(builder);\n            builder.endObject();\n            XContentParser parser = createParser(shuffleXContent(builder));\n            parser.nextToken();\n            parser.nextToken();\n            parser.nextToken();\n            SearchAfterBuilder secondSearchAfterBuilder = SearchAfterBuilder.fromXContent(parser);\n            assertNotSame(searchAfterBuilder, secondSearchAfterBuilder);\n            assertEquals(searchAfterBuilder, secondSearchAfterBuilder);\n            assertEquals(searchAfterBuilder.hashCode(), secondSearchAfterBuilder.hashCode());\n        }\n    }\n","date":"2018-04-26 03:22:53","endLine":186,"groupId":"53224","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testFromXContent","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/53/bd9da2ff1de35e7b7001cbf19868ff3401e0bd.src","preCode":"    public void testFromXContent() throws Exception {\n        for (int runs = 0; runs < 20; runs++) {\n            SearchAfterBuilder searchAfterBuilder = randomJsonSearchFromBuilder();\n            XContentBuilder builder = XContentFactory.contentBuilder(randomFrom(XContentType.values()));\n            if (randomBoolean()) {\n                builder.prettyPrint();\n            }\n            builder.startObject();\n            searchAfterBuilder.innerToXContent(builder);\n            builder.endObject();\n            XContentParser parser = createParser(shuffleXContent(builder));\n            parser.nextToken();\n            parser.nextToken();\n            parser.nextToken();\n            SearchAfterBuilder secondSearchAfterBuilder = SearchAfterBuilder.fromXContent(parser);\n            assertNotSame(searchAfterBuilder, secondSearchAfterBuilder);\n            assertEquals(searchAfterBuilder, secondSearchAfterBuilder);\n            assertEquals(searchAfterBuilder.hashCode(), secondSearchAfterBuilder.hashCode());\n        }\n    }\n","realPath":"server/src/test/java/org/elasticsearch/search/searchafter/SearchAfterBuilderTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":167,"status":"B"},{"authorDate":"2018-04-26 03:22:53","commitOrder":1,"curCode":"    public void testFromXContent() throws IOException {\n        for (int runs = 0; runs < NUMBER_OF_RUNS; runs++) {\n            SuggestBuilder suggestBuilder = randomSuggestBuilder();\n            XContentBuilder xContentBuilder = XContentFactory.contentBuilder(randomFrom(XContentType.values()));\n            if (randomBoolean()) {\n                xContentBuilder.prettyPrint();\n            }\n            suggestBuilder.toXContent(xContentBuilder, ToXContent.EMPTY_PARAMS);\n            XContentParser parser = createParser(xContentBuilder);\n            SuggestBuilder secondSuggestBuilder = SuggestBuilder.fromXContent(parser);\n            assertNotSame(suggestBuilder, secondSuggestBuilder);\n            assertEquals(suggestBuilder, secondSuggestBuilder);\n            assertEquals(suggestBuilder.hashCode(), secondSuggestBuilder.hashCode());\n        }\n    }\n","date":"2018-04-26 03:22:53","endLine":84,"groupId":"5261","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testFromXContent","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/7c/63b59ffc61a74f3dbe6803badad64d4bda9348.src","preCode":"    public void testFromXContent() throws IOException {\n        for (int runs = 0; runs < NUMBER_OF_RUNS; runs++) {\n            SuggestBuilder suggestBuilder = randomSuggestBuilder();\n            XContentBuilder xContentBuilder = XContentFactory.contentBuilder(randomFrom(XContentType.values()));\n            if (randomBoolean()) {\n                xContentBuilder.prettyPrint();\n            }\n            suggestBuilder.toXContent(xContentBuilder, ToXContent.EMPTY_PARAMS);\n            XContentParser parser = createParser(xContentBuilder);\n            SuggestBuilder secondSuggestBuilder = SuggestBuilder.fromXContent(parser);\n            assertNotSame(suggestBuilder, secondSuggestBuilder);\n            assertEquals(suggestBuilder, secondSuggestBuilder);\n            assertEquals(suggestBuilder.hashCode(), secondSuggestBuilder.hashCode());\n        }\n    }\n","realPath":"server/src/test/java/org/elasticsearch/search/suggest/SuggestBuilderTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":70,"status":"B"}],"commitId":"d74fb9eb4559077e2d20b19a9ed62d9ff825027a","commitMessage":"@@@Opened x-pack ILM code\n","date":"2018-04-26 03:22:53","modifiedFileCount":"0","status":"B","submitter":"Tal Levy"},{"authorTime":"2018-06-25 03:39:56","codes":[{"authorDate":"2018-06-25 03:39:56","commitOrder":2,"curCode":"    public void testFromXContent() throws Exception {\n        for (int runs = 0; runs < 20; runs++) {\n            SearchAfterBuilder searchAfterBuilder = randomJsonSearchFromBuilder();\n            XContentBuilder builder = XContentFactory.contentBuilder(randomFrom(XContentType.values()));\n            if (randomBoolean()) {\n                builder.prettyPrint();\n            }\n            builder.startObject();\n            searchAfterBuilder.innerToXContent(builder);\n            builder.endObject();\n            try (XContentParser parser = createParser(shuffleXContent(builder))) {\n                parser.nextToken();\n                parser.nextToken();\n                parser.nextToken();\n                SearchAfterBuilder secondSearchAfterBuilder = SearchAfterBuilder.fromXContent(parser);\n                assertNotSame(searchAfterBuilder, secondSearchAfterBuilder);\n                assertEquals(searchAfterBuilder, secondSearchAfterBuilder);\n                assertEquals(searchAfterBuilder.hashCode(), secondSearchAfterBuilder.hashCode());\n            }\n        }\n    }\n","date":"2018-06-25 16:41:24","endLine":188,"groupId":"104717","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testFromXContent","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/f7/457d965744ae075684e9ad6f675af772d4faec.src","preCode":"    public void testFromXContent() throws Exception {\n        for (int runs = 0; runs < 20; runs++) {\n            SearchAfterBuilder searchAfterBuilder = randomJsonSearchFromBuilder();\n            XContentBuilder builder = XContentFactory.contentBuilder(randomFrom(XContentType.values()));\n            if (randomBoolean()) {\n                builder.prettyPrint();\n            }\n            builder.startObject();\n            searchAfterBuilder.innerToXContent(builder);\n            builder.endObject();\n            XContentParser parser = createParser(shuffleXContent(builder));\n            parser.nextToken();\n            parser.nextToken();\n            parser.nextToken();\n            SearchAfterBuilder secondSearchAfterBuilder = SearchAfterBuilder.fromXContent(parser);\n            assertNotSame(searchAfterBuilder, secondSearchAfterBuilder);\n            assertEquals(searchAfterBuilder, secondSearchAfterBuilder);\n            assertEquals(searchAfterBuilder.hashCode(), secondSearchAfterBuilder.hashCode());\n        }\n    }\n","realPath":"server/src/test/java/org/elasticsearch/search/searchafter/SearchAfterBuilderTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":168,"status":"M"},{"authorDate":"2018-06-25 03:39:56","commitOrder":2,"curCode":"    public void testFromXContent() throws IOException {\n        for (int runs = 0; runs < NUMBER_OF_RUNS; runs++) {\n            SuggestBuilder suggestBuilder = randomSuggestBuilder();\n            XContentBuilder xContentBuilder = XContentFactory.contentBuilder(randomFrom(XContentType.values()));\n            if (randomBoolean()) {\n                xContentBuilder.prettyPrint();\n            }\n            suggestBuilder.toXContent(xContentBuilder, ToXContent.EMPTY_PARAMS);\n            try (XContentParser parser = createParser(xContentBuilder)) {\n                SuggestBuilder secondSuggestBuilder = SuggestBuilder.fromXContent(parser);\n                assertNotSame(suggestBuilder, secondSuggestBuilder);\n                assertEquals(suggestBuilder, secondSuggestBuilder);\n                assertEquals(suggestBuilder.hashCode(), secondSuggestBuilder.hashCode());\n            }\n        }\n    }\n","date":"2018-06-25 16:41:24","endLine":84,"groupId":"104717","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testFromXContent","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/2b/99c62185b7c72e3834150675dbd5604c25dd02.src","preCode":"    public void testFromXContent() throws IOException {\n        for (int runs = 0; runs < NUMBER_OF_RUNS; runs++) {\n            SuggestBuilder suggestBuilder = randomSuggestBuilder();\n            XContentBuilder xContentBuilder = XContentFactory.contentBuilder(randomFrom(XContentType.values()));\n            if (randomBoolean()) {\n                xContentBuilder.prettyPrint();\n            }\n            suggestBuilder.toXContent(xContentBuilder, ToXContent.EMPTY_PARAMS);\n            XContentParser parser = createParser(xContentBuilder);\n            SuggestBuilder secondSuggestBuilder = SuggestBuilder.fromXContent(parser);\n            assertNotSame(suggestBuilder, secondSuggestBuilder);\n            assertEquals(suggestBuilder, secondSuggestBuilder);\n            assertEquals(suggestBuilder.hashCode(), secondSuggestBuilder.hashCode());\n        }\n    }\n","realPath":"server/src/test/java/org/elasticsearch/search/suggest/SuggestBuilderTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":69,"status":"M"}],"commitId":"e6dc01d2b7d36b6d2a6aa11289afb70c9568c986","commitMessage":"@@@Close xcontent parsers (partial) (#31513)\n\nPartial pass at closing XContentParsers in server.  This mostly involved adding try-with-resources statements around the usage of XContentParsers.","date":"2018-06-25 16:41:24","modifiedFileCount":"53","status":"M","submitter":"Tom Callahan"}]
