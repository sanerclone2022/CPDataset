[{"authorTime":"2018-04-26 03:22:53","codes":[{"authorDate":"2018-09-06 03:56:58","commitOrder":2,"curCode":"    public void testMaxSizeExceededOnResize() throws Exception {\n        for (String type : Arrays.asList(\"Byte\", \"Int\", \"Long\", \"Float\", \"Double\", \"Object\")) {\n            final int maxSize = randomIntBetween(1 << 10, 1 << 22);\n            HierarchyCircuitBreakerService hcbs = new HierarchyCircuitBreakerService(\n                    Settings.builder()\n                            .put(REQUEST_CIRCUIT_BREAKER_LIMIT_SETTING.getKey(), maxSize, ByteSizeUnit.BYTES)\n                            .build(),\n                    new ClusterSettings(Settings.EMPTY, ClusterSettings.BUILT_IN_CLUSTER_SETTINGS));\n            BigArrays bigArrays = new BigArrays(null, hcbs, false).withCircuitBreaking();\n            Method create = BigArrays.class.getMethod(\"new\" + type + \"Array\", long.class);\n            final int size = scaledRandomIntBetween(10, maxSize / 8);\n            BigArray array = (BigArray) create.invoke(bigArrays, size);\n            Method resize = BigArrays.class.getMethod(\"resize\", array.getClass().getInterfaces()[0], long.class);\n            final long newSize = maxSize + 1;\n            InvocationTargetException e = expectThrows(InvocationTargetException.class, () -> resize.invoke(bigArrays, array, newSize));\n            assertTrue(e.getCause() instanceof CircuitBreakingException);\n            assertEquals(array.ramBytesUsed(), hcbs.getBreaker(CircuitBreaker.REQUEST).getUsed());\n            array.close();\n            assertEquals(0, hcbs.getBreaker(CircuitBreaker.REQUEST).getUsed());\n        }\n    }\n","date":"2018-09-06 03:56:58","endLine":372,"groupId":"68481","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testMaxSizeExceededOnResize","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/ba/92ba47827e31d257663c9a71c81f0f78798dfb.src","preCode":"    public void testMaxSizeExceededOnResize() throws Exception {\n        for (String type : Arrays.asList(\"Byte\", \"Int\", \"Long\", \"Float\", \"Double\", \"Object\")) {\n            final int maxSize = randomIntBetween(1 << 10, 1 << 22);\n            HierarchyCircuitBreakerService hcbs = new HierarchyCircuitBreakerService(\n                    Settings.builder()\n                            .put(REQUEST_CIRCUIT_BREAKER_LIMIT_SETTING.getKey(), maxSize, ByteSizeUnit.BYTES)\n                            .build(),\n                    new ClusterSettings(Settings.EMPTY, ClusterSettings.BUILT_IN_CLUSTER_SETTINGS));\n            BigArrays bigArrays = new BigArrays(null, hcbs, false).withCircuitBreaking();\n            Method create = BigArrays.class.getMethod(\"new\" + type + \"Array\", long.class);\n            final int size = scaledRandomIntBetween(10, maxSize / 8);\n            BigArray array = (BigArray) create.invoke(bigArrays, size);\n            Method resize = BigArrays.class.getMethod(\"resize\", array.getClass().getInterfaces()[0], long.class);\n            final long newSize = maxSize + 1;\n            InvocationTargetException e = expectThrows(InvocationTargetException.class, () -> resize.invoke(bigArrays, array, newSize));\n            assertTrue(e.getCause() instanceof CircuitBreakingException);\n            assertEquals(array.ramBytesUsed(), hcbs.getBreaker(CircuitBreaker.REQUEST).getUsed());\n            array.close();\n            assertEquals(0, hcbs.getBreaker(CircuitBreaker.REQUEST).getUsed());\n        }\n    }\n","realPath":"server/src/test/java/org/elasticsearch/common/util/BigArraysTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":352,"status":"MB"},{"authorDate":"2018-04-26 03:22:53","commitOrder":2,"curCode":"    private BigArrays newBigArraysInstance(final long maxSize, final boolean withBreaking) {\n        HierarchyCircuitBreakerService hcbs = new HierarchyCircuitBreakerService(\n            Settings.builder()\n                .put(REQUEST_CIRCUIT_BREAKER_LIMIT_SETTING.getKey(), maxSize, ByteSizeUnit.BYTES)\n                .build(),\n            new ClusterSettings(Settings.EMPTY, ClusterSettings.BUILT_IN_CLUSTER_SETTINGS));\n        BigArrays bigArrays = new BigArrays(null, hcbs, false);\n        return (withBreaking ? bigArrays.withCircuitBreaking() : bigArrays);\n    }\n","date":"2018-04-26 03:22:53","endLine":425,"groupId":"68481","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"newBigArraysInstance","params":"(finallongmaxSize@finalbooleanwithBreaking)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/f2/80b9a80bf4b2869cb1e14dac8cbe1152e52a60.src","preCode":"    private BigArrays newBigArraysInstance(final long maxSize, final boolean withBreaking) {\n        HierarchyCircuitBreakerService hcbs = new HierarchyCircuitBreakerService(\n            Settings.builder()\n                .put(REQUEST_CIRCUIT_BREAKER_LIMIT_SETTING.getKey(), maxSize, ByteSizeUnit.BYTES)\n                .build(),\n            new ClusterSettings(Settings.EMPTY, ClusterSettings.BUILT_IN_CLUSTER_SETTINGS));\n        BigArrays bigArrays = new BigArrays(null, hcbs, false);\n        return (withBreaking ? bigArrays.withCircuitBreaking() : bigArrays);\n    }\n","realPath":"server/src/test/java/org/elasticsearch/common/util/BigArraysTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":417,"status":"NB"}],"commitId":"b5f7fb688251d198525a0dd75852a2e91aee46fb","commitMessage":"@@@Merge branch 'master' into index-lifecycle\n","date":"2018-09-06 03:56:58","modifiedFileCount":"114","status":"M","submitter":"Tal Levy"},{"authorTime":"2018-09-18 00:41:10","codes":[{"authorDate":"2018-09-18 00:41:10","commitOrder":3,"curCode":"    public void testMaxSizeExceededOnResize() throws Exception {\n        for (String type : Arrays.asList(\"Byte\", \"Int\", \"Long\", \"Float\", \"Double\", \"Object\")) {\n            final int maxSize = randomIntBetween(1 << 10, 1 << 22);\n            HierarchyCircuitBreakerService hcbs = new HierarchyCircuitBreakerService(\n                    Settings.builder()\n                            .put(REQUEST_CIRCUIT_BREAKER_LIMIT_SETTING.getKey(), maxSize, ByteSizeUnit.BYTES)\n                            .put(HierarchyCircuitBreakerService.USE_REAL_MEMORY_USAGE_SETTING.getKey(), false)\n                            .build(),\n                    new ClusterSettings(Settings.EMPTY, ClusterSettings.BUILT_IN_CLUSTER_SETTINGS));\n            BigArrays bigArrays = new BigArrays(null, hcbs, false).withCircuitBreaking();\n            Method create = BigArrays.class.getMethod(\"new\" + type + \"Array\", long.class);\n            final int size = scaledRandomIntBetween(10, maxSize / 8);\n            BigArray array = (BigArray) create.invoke(bigArrays, size);\n            Method resize = BigArrays.class.getMethod(\"resize\", array.getClass().getInterfaces()[0], long.class);\n            final long newSize = maxSize + 1;\n            InvocationTargetException e = expectThrows(InvocationTargetException.class, () -> resize.invoke(bigArrays, array, newSize));\n            assertTrue(e.getCause() instanceof CircuitBreakingException);\n            assertEquals(array.ramBytesUsed(), hcbs.getBreaker(CircuitBreaker.REQUEST).getUsed());\n            array.close();\n            assertEquals(0, hcbs.getBreaker(CircuitBreaker.REQUEST).getUsed());\n        }\n    }\n","date":"2018-09-18 00:41:10","endLine":373,"groupId":"68481","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testMaxSizeExceededOnResize","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/d0/c051e03bcab48bd6339d80ea36b7b3104abaf6.src","preCode":"    public void testMaxSizeExceededOnResize() throws Exception {\n        for (String type : Arrays.asList(\"Byte\", \"Int\", \"Long\", \"Float\", \"Double\", \"Object\")) {\n            final int maxSize = randomIntBetween(1 << 10, 1 << 22);\n            HierarchyCircuitBreakerService hcbs = new HierarchyCircuitBreakerService(\n                    Settings.builder()\n                            .put(REQUEST_CIRCUIT_BREAKER_LIMIT_SETTING.getKey(), maxSize, ByteSizeUnit.BYTES)\n                            .build(),\n                    new ClusterSettings(Settings.EMPTY, ClusterSettings.BUILT_IN_CLUSTER_SETTINGS));\n            BigArrays bigArrays = new BigArrays(null, hcbs, false).withCircuitBreaking();\n            Method create = BigArrays.class.getMethod(\"new\" + type + \"Array\", long.class);\n            final int size = scaledRandomIntBetween(10, maxSize / 8);\n            BigArray array = (BigArray) create.invoke(bigArrays, size);\n            Method resize = BigArrays.class.getMethod(\"resize\", array.getClass().getInterfaces()[0], long.class);\n            final long newSize = maxSize + 1;\n            InvocationTargetException e = expectThrows(InvocationTargetException.class, () -> resize.invoke(bigArrays, array, newSize));\n            assertTrue(e.getCause() instanceof CircuitBreakingException);\n            assertEquals(array.ramBytesUsed(), hcbs.getBreaker(CircuitBreaker.REQUEST).getUsed());\n            array.close();\n            assertEquals(0, hcbs.getBreaker(CircuitBreaker.REQUEST).getUsed());\n        }\n    }\n","realPath":"server/src/test/java/org/elasticsearch/common/util/BigArraysTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":352,"status":"M"},{"authorDate":"2018-09-18 00:41:10","commitOrder":3,"curCode":"    private BigArrays newBigArraysInstance(final long maxSize, final boolean withBreaking) {\n        HierarchyCircuitBreakerService hcbs = new HierarchyCircuitBreakerService(\n            Settings.builder()\n                .put(REQUEST_CIRCUIT_BREAKER_LIMIT_SETTING.getKey(), maxSize, ByteSizeUnit.BYTES)\n                .put(HierarchyCircuitBreakerService.USE_REAL_MEMORY_USAGE_SETTING.getKey(), false)\n                .build(),\n            new ClusterSettings(Settings.EMPTY, ClusterSettings.BUILT_IN_CLUSTER_SETTINGS));\n        BigArrays bigArrays = new BigArrays(null, hcbs, false);\n        return (withBreaking ? bigArrays.withCircuitBreaking() : bigArrays);\n    }\n","date":"2018-09-18 00:41:10","endLine":421,"groupId":"68481","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"newBigArraysInstance","params":"(finallongmaxSize@finalbooleanwithBreaking)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/d0/c051e03bcab48bd6339d80ea36b7b3104abaf6.src","preCode":"    private BigArrays newBigArraysInstance(final long maxSize, final boolean withBreaking) {\n        HierarchyCircuitBreakerService hcbs = new HierarchyCircuitBreakerService(\n            Settings.builder()\n                .put(REQUEST_CIRCUIT_BREAKER_LIMIT_SETTING.getKey(), maxSize, ByteSizeUnit.BYTES)\n                .build(),\n            new ClusterSettings(Settings.EMPTY, ClusterSettings.BUILT_IN_CLUSTER_SETTINGS));\n        BigArrays bigArrays = new BigArrays(null, hcbs, false);\n        return (withBreaking ? bigArrays.withCircuitBreaking() : bigArrays);\n    }\n","realPath":"server/src/test/java/org/elasticsearch/common/util/BigArraysTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":412,"status":"M"}],"commitId":"7ff11b4ae1c84b8190b919d5ddb7d6e63efe5062","commitMessage":"@@@Merge remote-tracking branch 'origin/master' into index-lifecycle\n","date":"2018-09-18 00:41:10","modifiedFileCount":"73","status":"M","submitter":"Lee Hinman"},{"authorTime":"2018-09-18 00:41:10","codes":[{"authorDate":"2018-10-15 23:03:37","commitOrder":4,"curCode":"    public void testMaxSizeExceededOnResize() throws Exception {\n        for (String type : Arrays.asList(\"Byte\", \"Int\", \"Long\", \"Float\", \"Double\", \"Object\")) {\n            final int maxSize = randomIntBetween(1 << 8, 1 << 14);\n            HierarchyCircuitBreakerService hcbs = new HierarchyCircuitBreakerService(\n                    Settings.builder()\n                            .put(REQUEST_CIRCUIT_BREAKER_LIMIT_SETTING.getKey(), maxSize, ByteSizeUnit.BYTES)\n                            .put(HierarchyCircuitBreakerService.USE_REAL_MEMORY_USAGE_SETTING.getKey(), false)\n                            .build(),\n                    new ClusterSettings(Settings.EMPTY, ClusterSettings.BUILT_IN_CLUSTER_SETTINGS));\n            BigArrays bigArrays = new BigArrays(null, hcbs, false).withCircuitBreaking();\n            Method create = BigArrays.class.getMethod(\"new\" + type + \"Array\", long.class);\n            final int size = scaledRandomIntBetween(10, maxSize / 16);\n            BigArray array = (BigArray) create.invoke(bigArrays, size);\n            Method resize = BigArrays.class.getMethod(\"resize\", array.getClass().getInterfaces()[0], long.class);\n            while (true) {\n                long newSize = array.size() * 2;\n                try {\n                    array = (BigArray) resize.invoke(bigArrays, array, newSize);\n                } catch (InvocationTargetException e) {\n                    assertTrue(e.getCause() instanceof CircuitBreakingException);\n                    break;\n                }\n            }\n            assertEquals(array.ramBytesUsed(), hcbs.getBreaker(CircuitBreaker.REQUEST).getUsed());\n            array.close();\n            assertEquals(0, hcbs.getBreaker(CircuitBreaker.REQUEST).getUsed());\n        }\n    }\n","date":"2018-10-15 23:03:37","endLine":379,"groupId":"68481","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testMaxSizeExceededOnResize","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/9b/6816e2ee8fcf7b62273dc1765b19ff25f4979f.src","preCode":"    public void testMaxSizeExceededOnResize() throws Exception {\n        for (String type : Arrays.asList(\"Byte\", \"Int\", \"Long\", \"Float\", \"Double\", \"Object\")) {\n            final int maxSize = randomIntBetween(1 << 10, 1 << 22);\n            HierarchyCircuitBreakerService hcbs = new HierarchyCircuitBreakerService(\n                    Settings.builder()\n                            .put(REQUEST_CIRCUIT_BREAKER_LIMIT_SETTING.getKey(), maxSize, ByteSizeUnit.BYTES)\n                            .put(HierarchyCircuitBreakerService.USE_REAL_MEMORY_USAGE_SETTING.getKey(), false)\n                            .build(),\n                    new ClusterSettings(Settings.EMPTY, ClusterSettings.BUILT_IN_CLUSTER_SETTINGS));\n            BigArrays bigArrays = new BigArrays(null, hcbs, false).withCircuitBreaking();\n            Method create = BigArrays.class.getMethod(\"new\" + type + \"Array\", long.class);\n            final int size = scaledRandomIntBetween(10, maxSize / 8);\n            BigArray array = (BigArray) create.invoke(bigArrays, size);\n            Method resize = BigArrays.class.getMethod(\"resize\", array.getClass().getInterfaces()[0], long.class);\n            final long newSize = maxSize + 1;\n            InvocationTargetException e = expectThrows(InvocationTargetException.class, () -> resize.invoke(bigArrays, array, newSize));\n            assertTrue(e.getCause() instanceof CircuitBreakingException);\n            assertEquals(array.ramBytesUsed(), hcbs.getBreaker(CircuitBreaker.REQUEST).getUsed());\n            array.close();\n            assertEquals(0, hcbs.getBreaker(CircuitBreaker.REQUEST).getUsed());\n        }\n    }\n","realPath":"server/src/test/java/org/elasticsearch/common/util/BigArraysTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":352,"status":"M"},{"authorDate":"2018-09-18 00:41:10","commitOrder":4,"curCode":"    private BigArrays newBigArraysInstance(final long maxSize, final boolean withBreaking) {\n        HierarchyCircuitBreakerService hcbs = new HierarchyCircuitBreakerService(\n            Settings.builder()\n                .put(REQUEST_CIRCUIT_BREAKER_LIMIT_SETTING.getKey(), maxSize, ByteSizeUnit.BYTES)\n                .put(HierarchyCircuitBreakerService.USE_REAL_MEMORY_USAGE_SETTING.getKey(), false)\n                .build(),\n            new ClusterSettings(Settings.EMPTY, ClusterSettings.BUILT_IN_CLUSTER_SETTINGS));\n        BigArrays bigArrays = new BigArrays(null, hcbs, false);\n        return (withBreaking ? bigArrays.withCircuitBreaking() : bigArrays);\n    }\n","date":"2018-09-18 00:41:10","endLine":421,"groupId":"68481","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"newBigArraysInstance","params":"(finallongmaxSize@finalbooleanwithBreaking)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/d0/c051e03bcab48bd6339d80ea36b7b3104abaf6.src","preCode":"    private BigArrays newBigArraysInstance(final long maxSize, final boolean withBreaking) {\n        HierarchyCircuitBreakerService hcbs = new HierarchyCircuitBreakerService(\n            Settings.builder()\n                .put(REQUEST_CIRCUIT_BREAKER_LIMIT_SETTING.getKey(), maxSize, ByteSizeUnit.BYTES)\n                .put(HierarchyCircuitBreakerService.USE_REAL_MEMORY_USAGE_SETTING.getKey(), false)\n                .build(),\n            new ClusterSettings(Settings.EMPTY, ClusterSettings.BUILT_IN_CLUSTER_SETTINGS));\n        BigArrays bigArrays = new BigArrays(null, hcbs, false);\n        return (withBreaking ? bigArrays.withCircuitBreaking() : bigArrays);\n    }\n","realPath":"server/src/test/java/org/elasticsearch/common/util/BigArraysTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":412,"status":"N"}],"commitId":"0b42eda0e360d17975460a0d1efd0c6e6b494ca5","commitMessage":"@@@Merge branch 'master' into index-lifecycle\n","date":"2018-10-15 23:03:37","modifiedFileCount":"331","status":"M","submitter":"Colin Goodheart-Smithe"},{"authorTime":"2018-12-12 02:55:41","codes":[{"authorDate":"2018-12-12 02:55:41","commitOrder":5,"curCode":"    public void testMaxSizeExceededOnResize() throws Exception {\n        for (String type : Arrays.asList(\"Byte\", \"Int\", \"Long\", \"Float\", \"Double\", \"Object\")) {\n            final int maxSize = randomIntBetween(1 << 8, 1 << 14);\n            HierarchyCircuitBreakerService hcbs = new HierarchyCircuitBreakerService(\n                    Settings.builder()\n                            .put(REQUEST_CIRCUIT_BREAKER_LIMIT_SETTING.getKey(), maxSize, ByteSizeUnit.BYTES)\n                            .put(HierarchyCircuitBreakerService.USE_REAL_MEMORY_USAGE_SETTING.getKey(), false)\n                            .build(),\n                    new ClusterSettings(Settings.EMPTY, ClusterSettings.BUILT_IN_CLUSTER_SETTINGS));\n            BigArrays bigArrays = new BigArrays(null, hcbs, CircuitBreaker.REQUEST).withCircuitBreaking();\n            Method create = BigArrays.class.getMethod(\"new\" + type + \"Array\", long.class);\n            final int size = scaledRandomIntBetween(10, maxSize / 16);\n            BigArray array = (BigArray) create.invoke(bigArrays, size);\n            Method resize = BigArrays.class.getMethod(\"resize\", array.getClass().getInterfaces()[0], long.class);\n            while (true) {\n                long newSize = array.size() * 2;\n                try {\n                    array = (BigArray) resize.invoke(bigArrays, array, newSize);\n                } catch (InvocationTargetException e) {\n                    assertTrue(e.getCause() instanceof CircuitBreakingException);\n                    break;\n                }\n            }\n            assertEquals(array.ramBytesUsed(), hcbs.getBreaker(CircuitBreaker.REQUEST).getUsed());\n            array.close();\n            assertEquals(0, hcbs.getBreaker(CircuitBreaker.REQUEST).getUsed());\n        }\n    }\n","date":"2018-12-12 02:55:41","endLine":379,"groupId":"68481","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"testMaxSizeExceededOnResize","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/83/ad34da096f72648d188c01018e2e3008ba48a2.src","preCode":"    public void testMaxSizeExceededOnResize() throws Exception {\n        for (String type : Arrays.asList(\"Byte\", \"Int\", \"Long\", \"Float\", \"Double\", \"Object\")) {\n            final int maxSize = randomIntBetween(1 << 8, 1 << 14);\n            HierarchyCircuitBreakerService hcbs = new HierarchyCircuitBreakerService(\n                    Settings.builder()\n                            .put(REQUEST_CIRCUIT_BREAKER_LIMIT_SETTING.getKey(), maxSize, ByteSizeUnit.BYTES)\n                            .put(HierarchyCircuitBreakerService.USE_REAL_MEMORY_USAGE_SETTING.getKey(), false)\n                            .build(),\n                    new ClusterSettings(Settings.EMPTY, ClusterSettings.BUILT_IN_CLUSTER_SETTINGS));\n            BigArrays bigArrays = new BigArrays(null, hcbs, false).withCircuitBreaking();\n            Method create = BigArrays.class.getMethod(\"new\" + type + \"Array\", long.class);\n            final int size = scaledRandomIntBetween(10, maxSize / 16);\n            BigArray array = (BigArray) create.invoke(bigArrays, size);\n            Method resize = BigArrays.class.getMethod(\"resize\", array.getClass().getInterfaces()[0], long.class);\n            while (true) {\n                long newSize = array.size() * 2;\n                try {\n                    array = (BigArray) resize.invoke(bigArrays, array, newSize);\n                } catch (InvocationTargetException e) {\n                    assertTrue(e.getCause() instanceof CircuitBreakingException);\n                    break;\n                }\n            }\n            assertEquals(array.ramBytesUsed(), hcbs.getBreaker(CircuitBreaker.REQUEST).getUsed());\n            array.close();\n            assertEquals(0, hcbs.getBreaker(CircuitBreaker.REQUEST).getUsed());\n        }\n    }\n","realPath":"server/src/test/java/org/elasticsearch/common/util/BigArraysTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":352,"status":"M"},{"authorDate":"2018-12-12 02:55:41","commitOrder":5,"curCode":"    private BigArrays newBigArraysInstance(final long maxSize, final boolean withBreaking) {\n        HierarchyCircuitBreakerService hcbs = new HierarchyCircuitBreakerService(\n            Settings.builder()\n                .put(REQUEST_CIRCUIT_BREAKER_LIMIT_SETTING.getKey(), maxSize, ByteSizeUnit.BYTES)\n                .put(HierarchyCircuitBreakerService.USE_REAL_MEMORY_USAGE_SETTING.getKey(), false)\n                .build(),\n            new ClusterSettings(Settings.EMPTY, ClusterSettings.BUILT_IN_CLUSTER_SETTINGS));\n        BigArrays bigArrays = new BigArrays(null, hcbs, CircuitBreaker.REQUEST);\n        return (withBreaking ? bigArrays.withCircuitBreaking() : bigArrays);\n    }\n","date":"2018-12-12 02:55:41","endLine":427,"groupId":"68481","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"newBigArraysInstance","params":"(finallongmaxSize@finalbooleanwithBreaking)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/83/ad34da096f72648d188c01018e2e3008ba48a2.src","preCode":"    private BigArrays newBigArraysInstance(final long maxSize, final boolean withBreaking) {\n        HierarchyCircuitBreakerService hcbs = new HierarchyCircuitBreakerService(\n            Settings.builder()\n                .put(REQUEST_CIRCUIT_BREAKER_LIMIT_SETTING.getKey(), maxSize, ByteSizeUnit.BYTES)\n                .put(HierarchyCircuitBreakerService.USE_REAL_MEMORY_USAGE_SETTING.getKey(), false)\n                .build(),\n            new ClusterSettings(Settings.EMPTY, ClusterSettings.BUILT_IN_CLUSTER_SETTINGS));\n        BigArrays bigArrays = new BigArrays(null, hcbs, false);\n        return (withBreaking ? bigArrays.withCircuitBreaking() : bigArrays);\n    }\n","realPath":"server/src/test/java/org/elasticsearch/common/util/BigArraysTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":418,"status":"M"}],"commitId":"790f8102e9c808ec1e497f77bb0e93dc5534d346","commitMessage":"@@@Modify `BigArrays` to take name of circuit breaker (#36461)\n\nThis commit modifies BigArrays to take a circuit breaker name and\nthe circuit breaking service. The default instance of BigArrays that\nis passed around everywhere always uses the request breaker. At the\nnetwork level.  we want to be using the inflight request breaker. So this\nchange will allow that.\n\nAdditionally.  as this change moves away from a single instance of\nBigArrays.  the class is modified to not be a Releasable anymore.\nReleasing big arrays was always dispatching to the PageCacheRecycler. \nso this change makes the PageCacheRecycler the class that needs to be\nmanaged and torn-down.\n\nFinally.  this commit closes #31435 be making the serialization of\ntransport messages use the inflight request breaker. With this change. \nwe no longer push the global BigArrays instnace to the network level.","date":"2018-12-12 02:55:41","modifiedFileCount":"38","status":"M","submitter":"Tim Brooks"},{"authorTime":"2020-05-29 21:12:22","codes":[{"authorDate":"2020-05-29 21:12:22","commitOrder":6,"curCode":"    public void testMaxSizeExceededOnResize() throws Exception {\n        for (String type : Arrays.asList(\"Byte\", \"Int\", \"Long\", \"Float\", \"Double\", \"Object\")) {\n            final int maxSize = randomIntBetween(1 << 8, 1 << 14);\n            HierarchyCircuitBreakerService hcbs = new HierarchyCircuitBreakerService(\n                    Settings.builder()\n                            .put(REQUEST_CIRCUIT_BREAKER_LIMIT_SETTING.getKey(), maxSize, ByteSizeUnit.BYTES)\n                            .put(HierarchyCircuitBreakerService.USE_REAL_MEMORY_USAGE_SETTING.getKey(), false)\n                            .build(),\n                    Collections.emptyList(),\n                    new ClusterSettings(Settings.EMPTY, ClusterSettings.BUILT_IN_CLUSTER_SETTINGS));\n            BigArrays bigArrays = new BigArrays(null, hcbs, CircuitBreaker.REQUEST).withCircuitBreaking();\n            Method create = BigArrays.class.getMethod(\"new\" + type + \"Array\", long.class);\n            final int size = scaledRandomIntBetween(10, maxSize / 16);\n            BigArray array = (BigArray) create.invoke(bigArrays, size);\n            Method resize = BigArrays.class.getMethod(\"resize\", array.getClass().getInterfaces()[0], long.class);\n            while (true) {\n                long newSize = array.size() * 2;\n                try {\n                    array = (BigArray) resize.invoke(bigArrays, array, newSize);\n                } catch (InvocationTargetException e) {\n                    assertTrue(e.getCause() instanceof CircuitBreakingException);\n                    break;\n                }\n            }\n            assertEquals(array.ramBytesUsed(), hcbs.getBreaker(CircuitBreaker.REQUEST).getUsed());\n            array.close();\n            assertEquals(0, hcbs.getBreaker(CircuitBreaker.REQUEST).getUsed());\n        }\n    }\n","date":"2020-05-29 21:12:22","endLine":381,"groupId":"104069","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"testMaxSizeExceededOnResize","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/15/276f1ee4cea0e605c4eb11f58130edead32fa0.src","preCode":"    public void testMaxSizeExceededOnResize() throws Exception {\n        for (String type : Arrays.asList(\"Byte\", \"Int\", \"Long\", \"Float\", \"Double\", \"Object\")) {\n            final int maxSize = randomIntBetween(1 << 8, 1 << 14);\n            HierarchyCircuitBreakerService hcbs = new HierarchyCircuitBreakerService(\n                    Settings.builder()\n                            .put(REQUEST_CIRCUIT_BREAKER_LIMIT_SETTING.getKey(), maxSize, ByteSizeUnit.BYTES)\n                            .put(HierarchyCircuitBreakerService.USE_REAL_MEMORY_USAGE_SETTING.getKey(), false)\n                            .build(),\n                    new ClusterSettings(Settings.EMPTY, ClusterSettings.BUILT_IN_CLUSTER_SETTINGS));\n            BigArrays bigArrays = new BigArrays(null, hcbs, CircuitBreaker.REQUEST).withCircuitBreaking();\n            Method create = BigArrays.class.getMethod(\"new\" + type + \"Array\", long.class);\n            final int size = scaledRandomIntBetween(10, maxSize / 16);\n            BigArray array = (BigArray) create.invoke(bigArrays, size);\n            Method resize = BigArrays.class.getMethod(\"resize\", array.getClass().getInterfaces()[0], long.class);\n            while (true) {\n                long newSize = array.size() * 2;\n                try {\n                    array = (BigArray) resize.invoke(bigArrays, array, newSize);\n                } catch (InvocationTargetException e) {\n                    assertTrue(e.getCause() instanceof CircuitBreakingException);\n                    break;\n                }\n            }\n            assertEquals(array.ramBytesUsed(), hcbs.getBreaker(CircuitBreaker.REQUEST).getUsed());\n            array.close();\n            assertEquals(0, hcbs.getBreaker(CircuitBreaker.REQUEST).getUsed());\n        }\n    }\n","realPath":"server/src/test/java/org/elasticsearch/common/util/BigArraysTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":353,"status":"M"},{"authorDate":"2020-05-29 21:12:22","commitOrder":6,"curCode":"    private BigArrays newBigArraysInstance(final long maxSize, final boolean withBreaking) {\n        HierarchyCircuitBreakerService hcbs = new HierarchyCircuitBreakerService(\n            Settings.builder()\n                .put(REQUEST_CIRCUIT_BREAKER_LIMIT_SETTING.getKey(), maxSize, ByteSizeUnit.BYTES)\n                .put(HierarchyCircuitBreakerService.USE_REAL_MEMORY_USAGE_SETTING.getKey(), false)\n                .build(),\n            Collections.emptyList(),\n            new ClusterSettings(Settings.EMPTY, ClusterSettings.BUILT_IN_CLUSTER_SETTINGS));\n        BigArrays bigArrays = new BigArrays(null, hcbs, CircuitBreaker.REQUEST);\n        return (withBreaking ? bigArrays.withCircuitBreaking() : bigArrays);\n    }\n","date":"2020-05-29 21:12:22","endLine":430,"groupId":"104069","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"newBigArraysInstance","params":"(finallongmaxSize@finalbooleanwithBreaking)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/15/276f1ee4cea0e605c4eb11f58130edead32fa0.src","preCode":"    private BigArrays newBigArraysInstance(final long maxSize, final boolean withBreaking) {\n        HierarchyCircuitBreakerService hcbs = new HierarchyCircuitBreakerService(\n            Settings.builder()\n                .put(REQUEST_CIRCUIT_BREAKER_LIMIT_SETTING.getKey(), maxSize, ByteSizeUnit.BYTES)\n                .put(HierarchyCircuitBreakerService.USE_REAL_MEMORY_USAGE_SETTING.getKey(), false)\n                .build(),\n            new ClusterSettings(Settings.EMPTY, ClusterSettings.BUILT_IN_CLUSTER_SETTINGS));\n        BigArrays bigArrays = new BigArrays(null, hcbs, CircuitBreaker.REQUEST);\n        return (withBreaking ? bigArrays.withCircuitBreaking() : bigArrays);\n    }\n","realPath":"server/src/test/java/org/elasticsearch/common/util/BigArraysTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":420,"status":"M"}],"commitId":"f0e2086e69ae0a5d00da3080a6824b81c0f8219e","commitMessage":"@@@Add new circuitbreaker plugin and refactor CircuitBreakerService (#55695)\n\nThis commit lays the ground work for plugins supplying their own circuit breakers. \n\nIt adds a new interface: `CircuitBreakerPlugin`.\n\nThis interface provides methods for providing custom child CircuitBreaker objects. There are also facilities for allowing dynamic settings for the custom breakers.\n\nWith the refactor.  circuit breakers are no longer replaced on setting changes. Instead.  the two mutable settings themselves are `volatile`. Plugins that want to use their custom circuit breaker should keep a reference of their constructed breaker.","date":"2020-05-29 21:12:22","modifiedFileCount":"19","status":"M","submitter":"Benjamin Trent"}]
