[{"authorTime":"2018-09-29 05:40:12","codes":[{"authorDate":"2018-09-29 05:40:12","commitOrder":1,"curCode":"    public TokenFilterFactory getChainAwareTokenFilterFactory(TokenizerFactory tokenizer, List<CharFilterFactory> charFilters,\n                                                              List<TokenFilterFactory> previousTokenFilters,\n                                                              Function<String, TokenFilterFactory> allFilters) {\n        final Analyzer analyzer = buildSynonymAnalyzer(tokenizer, charFilters, previousTokenFilters);\n        final SynonymMap synonyms = buildSynonyms(analyzer, getRulesFromSettings(environment));\n        final String name = name();\n        return new TokenFilterFactory() {\n            @Override\n            public String name() {\n                return name;\n            }\n\n            @Override\n            public TokenStream create(TokenStream tokenStream) {\n                return synonyms.fst == null ? tokenStream : new SynonymFilter(tokenStream, synonyms, false);\n            }\n        };\n    }\n","date":"2018-09-29 05:40:12","endLine":89,"groupId":"55536","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"getChainAwareTokenFilterFactory","params":"(TokenizerFactorytokenizer@List<CharFilterFactory>charFilters@List<TokenFilterFactory>previousTokenFilters@Function<String@TokenFilterFactory>allFilters)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/99/810432cd8d9dfa998c7ddeb639d22380232caf.src","preCode":"    public TokenFilterFactory getChainAwareTokenFilterFactory(TokenizerFactory tokenizer, List<CharFilterFactory> charFilters,\n                                                              List<TokenFilterFactory> previousTokenFilters,\n                                                              Function<String, TokenFilterFactory> allFilters) {\n        final Analyzer analyzer = buildSynonymAnalyzer(tokenizer, charFilters, previousTokenFilters);\n        final SynonymMap synonyms = buildSynonyms(analyzer, getRulesFromSettings(environment));\n        final String name = name();\n        return new TokenFilterFactory() {\n            @Override\n            public String name() {\n                return name;\n            }\n\n            @Override\n            public TokenStream create(TokenStream tokenStream) {\n                return synonyms.fst == null ? tokenStream : new SynonymFilter(tokenStream, synonyms, false);\n            }\n        };\n    }\n","realPath":"modules/analysis-common/src/main/java/org/elasticsearch/analysis/common/SynonymTokenFilterFactory.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":72,"status":"B"},{"authorDate":"2018-09-29 05:40:12","commitOrder":1,"curCode":"    public TokenFilterFactory getChainAwareTokenFilterFactory(TokenizerFactory tokenizer, List<CharFilterFactory> charFilters,\n                                                              List<TokenFilterFactory> previousTokenFilters,\n                                                              Function<String, TokenFilterFactory> allFilters) {\n        final Analyzer analyzer = buildSynonymAnalyzer(tokenizer, charFilters, previousTokenFilters);\n        final SynonymMap synonyms = buildSynonyms(analyzer, getRulesFromSettings(environment));\n        final String name = name();\n        return new TokenFilterFactory() {\n            @Override\n            public String name() {\n                return name;\n            }\n\n            @Override\n            public TokenStream create(TokenStream tokenStream) {\n                return synonyms.fst == null ? tokenStream : new SynonymGraphFilter(tokenStream, synonyms, false);\n            }\n        };\n    }\n","date":"2018-09-29 05:40:12","endLine":66,"groupId":"55536","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"getChainAwareTokenFilterFactory","params":"(TokenizerFactorytokenizer@List<CharFilterFactory>charFilters@List<TokenFilterFactory>previousTokenFilters@Function<String@TokenFilterFactory>allFilters)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/cc/cfdc8d7b7e9177c55bb1def4a8953fab942ec3.src","preCode":"    public TokenFilterFactory getChainAwareTokenFilterFactory(TokenizerFactory tokenizer, List<CharFilterFactory> charFilters,\n                                                              List<TokenFilterFactory> previousTokenFilters,\n                                                              Function<String, TokenFilterFactory> allFilters) {\n        final Analyzer analyzer = buildSynonymAnalyzer(tokenizer, charFilters, previousTokenFilters);\n        final SynonymMap synonyms = buildSynonyms(analyzer, getRulesFromSettings(environment));\n        final String name = name();\n        return new TokenFilterFactory() {\n            @Override\n            public String name() {\n                return name;\n            }\n\n            @Override\n            public TokenStream create(TokenStream tokenStream) {\n                return synonyms.fst == null ? tokenStream : new SynonymGraphFilter(tokenStream, synonyms, false);\n            }\n        };\n    }\n","realPath":"modules/analysis-common/src/main/java/org/elasticsearch/analysis/common/SynonymGraphTokenFilterFactory.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":49,"status":"B"}],"commitId":"6ea396a476ada0c6d5ff0f27a3e5526b42ff1502","commitMessage":"@@@Merge remote-tracking branch 'origin/master' into index-lifecycle\n","date":"2018-09-29 05:40:12","modifiedFileCount":"333","status":"B","submitter":"Lee Hinman"},{"authorTime":"2018-11-29 18:35:38","codes":[{"authorDate":"2018-11-29 18:35:38","commitOrder":2,"curCode":"    public TokenFilterFactory getChainAwareTokenFilterFactory(TokenizerFactory tokenizer, List<CharFilterFactory> charFilters,\n                                                              List<TokenFilterFactory> previousTokenFilters,\n                                                              Function<String, TokenFilterFactory> allFilters) {\n        final Analyzer analyzer = buildSynonymAnalyzer(tokenizer, charFilters, previousTokenFilters, allFilters);\n        final SynonymMap synonyms = buildSynonyms(analyzer, getRulesFromSettings(environment));\n        final String name = name();\n        return new TokenFilterFactory() {\n            @Override\n            public String name() {\n                return name;\n            }\n\n            @Override\n            public TokenStream create(TokenStream tokenStream) {\n                return synonyms.fst == null ? tokenStream : new SynonymFilter(tokenStream, synonyms, false);\n            }\n\n            @Override\n            public TokenFilterFactory getSynonymFilter() {\n                \r\n                \r\n                \r\n                return IDENTITY_FILTER;\n            }\n        };\n    }\n","date":"2018-11-29 18:35:38","endLine":102,"groupId":"55536","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"getChainAwareTokenFilterFactory","params":"(TokenizerFactorytokenizer@List<CharFilterFactory>charFilters@List<TokenFilterFactory>previousTokenFilters@Function<String@TokenFilterFactory>allFilters)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/75/d4eca4254f816048d894cbeb935db08353fd62.src","preCode":"    public TokenFilterFactory getChainAwareTokenFilterFactory(TokenizerFactory tokenizer, List<CharFilterFactory> charFilters,\n                                                              List<TokenFilterFactory> previousTokenFilters,\n                                                              Function<String, TokenFilterFactory> allFilters) {\n        final Analyzer analyzer = buildSynonymAnalyzer(tokenizer, charFilters, previousTokenFilters);\n        final SynonymMap synonyms = buildSynonyms(analyzer, getRulesFromSettings(environment));\n        final String name = name();\n        return new TokenFilterFactory() {\n            @Override\n            public String name() {\n                return name;\n            }\n\n            @Override\n            public TokenStream create(TokenStream tokenStream) {\n                return synonyms.fst == null ? tokenStream : new SynonymFilter(tokenStream, synonyms, false);\n            }\n        };\n    }\n","realPath":"modules/analysis-common/src/main/java/org/elasticsearch/analysis/common/SynonymTokenFilterFactory.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":77,"status":"M"},{"authorDate":"2018-11-29 18:35:38","commitOrder":2,"curCode":"    public TokenFilterFactory getChainAwareTokenFilterFactory(TokenizerFactory tokenizer, List<CharFilterFactory> charFilters,\n                                                              List<TokenFilterFactory> previousTokenFilters,\n                                                              Function<String, TokenFilterFactory> allFilters) {\n        final Analyzer analyzer = buildSynonymAnalyzer(tokenizer, charFilters, previousTokenFilters, allFilters);\n        final SynonymMap synonyms = buildSynonyms(analyzer, getRulesFromSettings(environment));\n        final String name = name();\n        return new TokenFilterFactory() {\n            @Override\n            public String name() {\n                return name;\n            }\n\n            @Override\n            public TokenStream create(TokenStream tokenStream) {\n                return synonyms.fst == null ? tokenStream : new SynonymGraphFilter(tokenStream, synonyms, false);\n            }\n        };\n    }\n","date":"2018-11-29 18:35:38","endLine":66,"groupId":"55536","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"getChainAwareTokenFilterFactory","params":"(TokenizerFactorytokenizer@List<CharFilterFactory>charFilters@List<TokenFilterFactory>previousTokenFilters@Function<String@TokenFilterFactory>allFilters)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/e4/fd18bcba647c6aac3fc2be7b748b3a80a1a13c.src","preCode":"    public TokenFilterFactory getChainAwareTokenFilterFactory(TokenizerFactory tokenizer, List<CharFilterFactory> charFilters,\n                                                              List<TokenFilterFactory> previousTokenFilters,\n                                                              Function<String, TokenFilterFactory> allFilters) {\n        final Analyzer analyzer = buildSynonymAnalyzer(tokenizer, charFilters, previousTokenFilters);\n        final SynonymMap synonyms = buildSynonyms(analyzer, getRulesFromSettings(environment));\n        final String name = name();\n        return new TokenFilterFactory() {\n            @Override\n            public String name() {\n                return name;\n            }\n\n            @Override\n            public TokenStream create(TokenStream tokenStream) {\n                return synonyms.fst == null ? tokenStream : new SynonymGraphFilter(tokenStream, synonyms, false);\n            }\n        };\n    }\n","realPath":"modules/analysis-common/src/main/java/org/elasticsearch/analysis/common/SynonymGraphTokenFilterFactory.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":49,"status":"M"}],"commitId":"a646f85a999c087668ef088387f1b918f4f3a8a3","commitMessage":"@@@Ensure TokenFilters only produce single tokens when parsing synonyms (#34331)\n\nA number of tokenfilters can produce multiple tokens at the same position.  This\nis a problem when using token chains to parse synonym files.  as the SynonymMap\nrequires that there are no stacked tokens in its input.\n\nThis commit ensures that when used to parse synonyms.  these tokenfilters either produce\na single version of their input token.  or that they throw an error when mappings are \ngenerated.  In indexes created in elasticsearch 6.x deprecation warnings are emitted in place \nof the error. \n\n* asciifolding and cjk_bigram produce only the folded or bigrammed token\n* decompounders.  synonyms and keyword_repeat are skipped\n* n-grams.  word-delimiter-filter.  multiplexer.  fingerprint and phonetic throw errors\n\nFixes #34298\n","date":"2018-11-29 18:35:38","modifiedFileCount":"19","status":"M","submitter":"Alan Woodward"},{"authorTime":"2018-11-29 18:35:38","codes":[{"authorDate":"2019-06-28 00:27:11","commitOrder":3,"curCode":"    public TokenFilterFactory getChainAwareTokenFilterFactory(TokenizerFactory tokenizer, List<CharFilterFactory> charFilters,\n                                                              List<TokenFilterFactory> previousTokenFilters,\n                                                              Function<String, TokenFilterFactory> allFilters) {\n        final Analyzer analyzer = buildSynonymAnalyzer(tokenizer, charFilters, previousTokenFilters, allFilters);\n        final SynonymMap synonyms = buildSynonyms(analyzer, getRulesFromSettings(environment));\n        final String name = name();\n        return new TokenFilterFactory() {\n            @Override\n            public String name() {\n                return name;\n            }\n\n            @Override\n            public TokenStream create(TokenStream tokenStream) {\n                return synonyms.fst == null ? tokenStream : new SynonymFilter(tokenStream, synonyms, false);\n            }\n\n            @Override\n            public TokenFilterFactory getSynonymFilter() {\n                \r\n                \r\n                \r\n                return IDENTITY_FILTER;\n            }\n\n            @Override\n            public AnalysisMode getAnalysisMode() {\n                return updateable ? AnalysisMode.SEARCH_TIME : AnalysisMode.ALL;\n            }\n        };\n    }\n","date":"2019-06-28 00:27:11","endLine":115,"groupId":"55536","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"getChainAwareTokenFilterFactory","params":"(TokenizerFactorytokenizer@List<CharFilterFactory>charFilters@List<TokenFilterFactory>previousTokenFilters@Function<String@TokenFilterFactory>allFilters)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/5d/6135549b88277dd9da74b86322c65a8eb844de.src","preCode":"    public TokenFilterFactory getChainAwareTokenFilterFactory(TokenizerFactory tokenizer, List<CharFilterFactory> charFilters,\n                                                              List<TokenFilterFactory> previousTokenFilters,\n                                                              Function<String, TokenFilterFactory> allFilters) {\n        final Analyzer analyzer = buildSynonymAnalyzer(tokenizer, charFilters, previousTokenFilters, allFilters);\n        final SynonymMap synonyms = buildSynonyms(analyzer, getRulesFromSettings(environment));\n        final String name = name();\n        return new TokenFilterFactory() {\n            @Override\n            public String name() {\n                return name;\n            }\n\n            @Override\n            public TokenStream create(TokenStream tokenStream) {\n                return synonyms.fst == null ? tokenStream : new SynonymFilter(tokenStream, synonyms, false);\n            }\n\n            @Override\n            public TokenFilterFactory getSynonymFilter() {\n                \r\n                \r\n                \r\n                return IDENTITY_FILTER;\n            }\n        };\n    }\n","realPath":"modules/analysis-common/src/main/java/org/elasticsearch/analysis/common/SynonymTokenFilterFactory.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":85,"status":"M"},{"authorDate":"2018-11-29 18:35:38","commitOrder":3,"curCode":"    public TokenFilterFactory getChainAwareTokenFilterFactory(TokenizerFactory tokenizer, List<CharFilterFactory> charFilters,\n                                                              List<TokenFilterFactory> previousTokenFilters,\n                                                              Function<String, TokenFilterFactory> allFilters) {\n        final Analyzer analyzer = buildSynonymAnalyzer(tokenizer, charFilters, previousTokenFilters, allFilters);\n        final SynonymMap synonyms = buildSynonyms(analyzer, getRulesFromSettings(environment));\n        final String name = name();\n        return new TokenFilterFactory() {\n            @Override\n            public String name() {\n                return name;\n            }\n\n            @Override\n            public TokenStream create(TokenStream tokenStream) {\n                return synonyms.fst == null ? tokenStream : new SynonymGraphFilter(tokenStream, synonyms, false);\n            }\n        };\n    }\n","date":"2018-11-29 18:35:38","endLine":66,"groupId":"55536","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"getChainAwareTokenFilterFactory","params":"(TokenizerFactorytokenizer@List<CharFilterFactory>charFilters@List<TokenFilterFactory>previousTokenFilters@Function<String@TokenFilterFactory>allFilters)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/e4/fd18bcba647c6aac3fc2be7b748b3a80a1a13c.src","preCode":"    public TokenFilterFactory getChainAwareTokenFilterFactory(TokenizerFactory tokenizer, List<CharFilterFactory> charFilters,\n                                                              List<TokenFilterFactory> previousTokenFilters,\n                                                              Function<String, TokenFilterFactory> allFilters) {\n        final Analyzer analyzer = buildSynonymAnalyzer(tokenizer, charFilters, previousTokenFilters, allFilters);\n        final SynonymMap synonyms = buildSynonyms(analyzer, getRulesFromSettings(environment));\n        final String name = name();\n        return new TokenFilterFactory() {\n            @Override\n            public String name() {\n                return name;\n            }\n\n            @Override\n            public TokenStream create(TokenStream tokenStream) {\n                return synonyms.fst == null ? tokenStream : new SynonymGraphFilter(tokenStream, synonyms, false);\n            }\n        };\n    }\n","realPath":"modules/analysis-common/src/main/java/org/elasticsearch/analysis/common/SynonymGraphTokenFilterFactory.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":49,"status":"N"}],"commitId":"56ee1a5e007e86153f2b43cf9739921041f996c9","commitMessage":"@@@Allow reloading of search time analyzers (#43313)\n\nCurrently changing resources (like dictionaries.  synonym files etc...) of search\ntime analyzers is only possible by closing an index.  changing the underlying\nresource (e.g. synonym files) and then re-opening the index for the change to\ntake effect.\n\nThis PR adds a new API endpoint that allows triggering reloading of certain\nanalysis resources (currently token filters) that will then pick up changes in\nunderlying file resources. To achieve this we introduce a new type of custom\nanalyzer (ReloadableCustomAnalyzer) that uses a ReuseStrategy that allows\nswapping out analysis components. Custom analyzers that contain filters that are\nmarkes as \"updateable\" will automatically choose this implementation. This PR\nalso adds this capability to `synonym` token filters for use in search time\nanalyzers.\n\nRelates to #29051","date":"2019-06-28 00:27:11","modifiedFileCount":"21","status":"M","submitter":"Christoph B?scher"},{"authorTime":"2019-08-02 20:34:22","codes":[{"authorDate":"2019-08-02 20:34:22","commitOrder":4,"curCode":"    public TokenFilterFactory getChainAwareTokenFilterFactory(TokenizerFactory tokenizer, List<CharFilterFactory> charFilters,\n                                                              List<TokenFilterFactory> previousTokenFilters,\n                                                              Function<String, TokenFilterFactory> allFilters) {\n        final Analyzer analyzer = buildSynonymAnalyzer(tokenizer, charFilters, previousTokenFilters, allFilters);\n        final SynonymMap synonyms = buildSynonyms(analyzer, getRulesFromSettings(environment));\n        final String name = name();\n        return new TokenFilterFactory() {\n            @Override\n            public String name() {\n                return name;\n            }\n\n            @Override\n            public TokenStream create(TokenStream tokenStream) {\n                return synonyms.fst == null ? tokenStream : new SynonymFilter(tokenStream, synonyms, false);\n            }\n\n            @Override\n            public TokenFilterFactory getSynonymFilter() {\n                \r\n                \r\n                \r\n                return IDENTITY_FILTER;\n            }\n\n            @Override\n            public AnalysisMode getAnalysisMode() {\n                return analysisMode;\n            }\n        };\n    }\n","date":"2019-08-02 20:34:22","endLine":116,"groupId":"10764","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"getChainAwareTokenFilterFactory","params":"(TokenizerFactorytokenizer@List<CharFilterFactory>charFilters@List<TokenFilterFactory>previousTokenFilters@Function<String@TokenFilterFactory>allFilters)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/0d/7dd672b5afe07cdda82d14487b4fe32df96e47.src","preCode":"    public TokenFilterFactory getChainAwareTokenFilterFactory(TokenizerFactory tokenizer, List<CharFilterFactory> charFilters,\n                                                              List<TokenFilterFactory> previousTokenFilters,\n                                                              Function<String, TokenFilterFactory> allFilters) {\n        final Analyzer analyzer = buildSynonymAnalyzer(tokenizer, charFilters, previousTokenFilters, allFilters);\n        final SynonymMap synonyms = buildSynonyms(analyzer, getRulesFromSettings(environment));\n        final String name = name();\n        return new TokenFilterFactory() {\n            @Override\n            public String name() {\n                return name;\n            }\n\n            @Override\n            public TokenStream create(TokenStream tokenStream) {\n                return synonyms.fst == null ? tokenStream : new SynonymFilter(tokenStream, synonyms, false);\n            }\n\n            @Override\n            public TokenFilterFactory getSynonymFilter() {\n                \r\n                \r\n                \r\n                return IDENTITY_FILTER;\n            }\n\n            @Override\n            public AnalysisMode getAnalysisMode() {\n                return updateable ? AnalysisMode.SEARCH_TIME : AnalysisMode.ALL;\n            }\n        };\n    }\n","realPath":"modules/analysis-common/src/main/java/org/elasticsearch/analysis/common/SynonymTokenFilterFactory.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":86,"status":"M"},{"authorDate":"2019-08-02 20:34:22","commitOrder":4,"curCode":"    public TokenFilterFactory getChainAwareTokenFilterFactory(TokenizerFactory tokenizer, List<CharFilterFactory> charFilters,\n                                                              List<TokenFilterFactory> previousTokenFilters,\n                                                              Function<String, TokenFilterFactory> allFilters) {\n        final Analyzer analyzer = buildSynonymAnalyzer(tokenizer, charFilters, previousTokenFilters, allFilters);\n        final SynonymMap synonyms = buildSynonyms(analyzer, getRulesFromSettings(environment));\n        final String name = name();\n        return new TokenFilterFactory() {\n            @Override\n            public String name() {\n                return name;\n            }\n\n            @Override\n            public TokenStream create(TokenStream tokenStream) {\n                return synonyms.fst == null ? tokenStream : new SynonymGraphFilter(tokenStream, synonyms, false);\n            }\n\n            @Override\n            public AnalysisMode getAnalysisMode() {\n                return analysisMode;\n            }\n        };\n    }\n","date":"2019-08-02 20:34:22","endLine":72,"groupId":"10764","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"getChainAwareTokenFilterFactory","params":"(TokenizerFactorytokenizer@List<CharFilterFactory>charFilters@List<TokenFilterFactory>previousTokenFilters@Function<String@TokenFilterFactory>allFilters)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/67/2c4377da1fa6c48090734fe8662e883d5bd925.src","preCode":"    public TokenFilterFactory getChainAwareTokenFilterFactory(TokenizerFactory tokenizer, List<CharFilterFactory> charFilters,\n                                                              List<TokenFilterFactory> previousTokenFilters,\n                                                              Function<String, TokenFilterFactory> allFilters) {\n        final Analyzer analyzer = buildSynonymAnalyzer(tokenizer, charFilters, previousTokenFilters, allFilters);\n        final SynonymMap synonyms = buildSynonyms(analyzer, getRulesFromSettings(environment));\n        final String name = name();\n        return new TokenFilterFactory() {\n            @Override\n            public String name() {\n                return name;\n            }\n\n            @Override\n            public TokenStream create(TokenStream tokenStream) {\n                return synonyms.fst == null ? tokenStream : new SynonymGraphFilter(tokenStream, synonyms, false);\n            }\n        };\n    }\n","realPath":"modules/analysis-common/src/main/java/org/elasticsearch/analysis/common/SynonymGraphTokenFilterFactory.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":50,"status":"M"}],"commitId":"bd25a52604752903b05dbdf562c2bf2bada2438c","commitMessage":"@@@Enable reloading of synonym_graph filters (#45135)\n\nReloading of synonym_graph filter doesn't work currently because the search time\nAnalysisMode doesn't get propagated to the TokenFilterFactory emitted by the\ngraph filters getChainAwareTokenFilterFactory() method. This change fixes that.\n\nCloses #45127","date":"2019-08-02 20:34:22","modifiedFileCount":"3","status":"M","submitter":"Christoph B?scher"}]
