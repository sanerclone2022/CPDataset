[{"authorTime":"2020-08-24 20:15:41","codes":[{"authorDate":"2020-08-24 20:15:41","commitOrder":1,"curCode":"    public ValueFetcher valueFetcher(MapperService mapperService, String format) {\n        if (format != null) {\n            throw new IllegalArgumentException(\"Field [\" + name() + \"] of type [\" + typeName() + \"] doesn't support formats.\");\n        }\n        return new SourceValueFetcher(name(), mapperService, parsesArrayValue()) {\n            @Override\n            protected Float parseSourceValue(Object value) {\n                return objectToFloat(value);\n            }\n        };\n    }\n","date":"2020-08-24 20:15:41","endLine":196,"groupId":"17331","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"valueFetcher","params":"(MapperServicemapperService@Stringformat)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/35/13406d2ae754d0ab16f85d5558c11a4c35970b.src","preCode":"    public ValueFetcher valueFetcher(MapperService mapperService, String format) {\n        if (format != null) {\n            throw new IllegalArgumentException(\"Field [\" + name() + \"] of type [\" + typeName() + \"] doesn't support formats.\");\n        }\n        return new SourceValueFetcher(name(), mapperService, parsesArrayValue()) {\n            @Override\n            protected Float parseSourceValue(Object value) {\n                return objectToFloat(value);\n            }\n        };\n    }\n","realPath":"modules/mapper-extras/src/main/java/org/elasticsearch/index/mapper/RankFeatureFieldMapper.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":186,"status":"B"},{"authorDate":"2020-08-24 20:15:41","commitOrder":1,"curCode":"    public ValueFetcher valueFetcher(MapperService mapperService, String format) {\n        if (format != null) {\n            throw new IllegalArgumentException(\"Field [\" + name() + \"] of type [\" + typeName() + \"] doesn't support formats.\");\n        }\n\n        return new SourceValueFetcher(name(), mapperService, parsesArrayValue()) {\n            @Override\n            protected List<?> parseSourceValue(Object value) {\n                if (value instanceof List) {\n                    return (List<?>) value;\n                } else {\n                    return List.of(value);\n                }\n            }\n        };\n    }\n","date":"2020-08-24 20:15:41","endLine":555,"groupId":"17331","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"valueFetcher","params":"(MapperServicemapperService@Stringformat)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/f1/f12295a0155cd365d3b5fd8bc3c86726f24540.src","preCode":"    public ValueFetcher valueFetcher(MapperService mapperService, String format) {\n        if (format != null) {\n            throw new IllegalArgumentException(\"Field [\" + name() + \"] of type [\" + typeName() + \"] doesn't support formats.\");\n        }\n\n        return new SourceValueFetcher(name(), mapperService, parsesArrayValue()) {\n            @Override\n            protected List<?> parseSourceValue(Object value) {\n                if (value instanceof List) {\n                    return (List<?>) value;\n                } else {\n                    return List.of(value);\n                }\n            }\n        };\n    }\n","realPath":"server/src/main/java/org/elasticsearch/index/mapper/CompletionFieldMapper.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":540,"status":"B"}],"commitId":"6a9dde599f5fc11205e3f71f339a37bac9a259dc","commitMessage":"@@@Merge branch 'master' into feature/runtime_fields\n","date":"2020-08-24 20:15:41","modifiedFileCount":"171","status":"B","submitter":"Luca Cavanna"},{"authorTime":"2020-09-16 15:07:19","codes":[{"authorDate":"2020-09-16 15:07:19","commitOrder":2,"curCode":"    public ValueFetcher valueFetcher(MapperService mapperService, SearchLookup searchLookup, String format) {\n        if (format != null) {\n            throw new IllegalArgumentException(\"Field [\" + name() + \"] of type [\" + typeName() + \"] doesn't support formats.\");\n        }\n        return new SourceValueFetcher(name(), mapperService, parsesArrayValue()) {\n            @Override\n            protected Float parseSourceValue(Object value) {\n                return objectToFloat(value);\n            }\n        };\n    }\n","date":"2020-09-16 15:07:19","endLine":196,"groupId":"17331","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"valueFetcher","params":"(MapperServicemapperService@SearchLookupsearchLookup@Stringformat)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/70/5d3efd4632110ee2dd11a0ac569810f82f03a8.src","preCode":"    public ValueFetcher valueFetcher(MapperService mapperService, String format) {\n        if (format != null) {\n            throw new IllegalArgumentException(\"Field [\" + name() + \"] of type [\" + typeName() + \"] doesn't support formats.\");\n        }\n        return new SourceValueFetcher(name(), mapperService, parsesArrayValue()) {\n            @Override\n            protected Float parseSourceValue(Object value) {\n                return objectToFloat(value);\n            }\n        };\n    }\n","realPath":"modules/mapper-extras/src/main/java/org/elasticsearch/index/mapper/RankFeatureFieldMapper.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":186,"status":"M"},{"authorDate":"2020-09-16 15:07:19","commitOrder":2,"curCode":"    public ValueFetcher valueFetcher(MapperService mapperService, SearchLookup searchLookup, String format) {\n        if (format != null) {\n            throw new IllegalArgumentException(\"Field [\" + name() + \"] of type [\" + typeName() + \"] doesn't support formats.\");\n        }\n\n        return new SourceValueFetcher(name(), mapperService, parsesArrayValue()) {\n            @Override\n            protected List<?> parseSourceValue(Object value) {\n                if (value instanceof List) {\n                    return (List<?>) value;\n                } else {\n                    return List.of(value);\n                }\n            }\n        };\n    }\n","date":"2020-09-16 15:07:19","endLine":559,"groupId":"17331","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"valueFetcher","params":"(MapperServicemapperService@SearchLookupsearchLookup@Stringformat)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/7a/8c7b6529d20c934632905edc7f8a8e5378033a.src","preCode":"    public ValueFetcher valueFetcher(MapperService mapperService, String format) {\n        if (format != null) {\n            throw new IllegalArgumentException(\"Field [\" + name() + \"] of type [\" + typeName() + \"] doesn't support formats.\");\n        }\n\n        return new SourceValueFetcher(name(), mapperService, parsesArrayValue()) {\n            @Override\n            protected List<?> parseSourceValue(Object value) {\n                if (value instanceof List) {\n                    return (List<?>) value;\n                } else {\n                    return List.of(value);\n                }\n            }\n        };\n    }\n","realPath":"server/src/main/java/org/elasticsearch/index/mapper/CompletionFieldMapper.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":544,"status":"M"}],"commitId":"c016868ab957380607ff8bcec6f6b04de9089e5a","commitMessage":"@@@Merge branch 'master' of https://github.com/elastic/elasticsearch into APIresponse\n","date":"2020-09-16 15:07:19","modifiedFileCount":"121","status":"M","submitter":"BigPandaToo"},{"authorTime":"2020-10-04 17:47:04","codes":[{"authorDate":"2020-10-04 17:47:04","commitOrder":3,"curCode":"        public ValueFetcher valueFetcher(MapperService mapperService, SearchLookup searchLookup, String format) {\n            if (format != null) {\n                throw new IllegalArgumentException(\"Field [\" + name() + \"] of type [\" + typeName() + \"] doesn't support formats.\");\n            }\n            return new SourceValueFetcher(name(), mapperService, false) {\n                @Override\n                protected Float parseSourceValue(Object value) {\n                    return objectToFloat(value);\n                }\n            };\n        }\n","date":"2020-10-04 17:47:04","endLine":127,"groupId":"63082","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"valueFetcher","params":"(MapperServicemapperService@SearchLookupsearchLookup@Stringformat)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/4e/58cee640861bca0eb06794609f5d0eed8ecd7d.src","preCode":"    public ValueFetcher valueFetcher(MapperService mapperService, SearchLookup searchLookup, String format) {\n        if (format != null) {\n            throw new IllegalArgumentException(\"Field [\" + name() + \"] of type [\" + typeName() + \"] doesn't support formats.\");\n        }\n        return new SourceValueFetcher(name(), mapperService, parsesArrayValue()) {\n            @Override\n            protected Float parseSourceValue(Object value) {\n                return objectToFloat(value);\n            }\n        };\n    }\n","realPath":"modules/mapper-extras/src/main/java/org/elasticsearch/index/mapper/RankFeatureFieldMapper.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":117,"status":"M"},{"authorDate":"2020-10-04 17:47:04","commitOrder":3,"curCode":"        public ValueFetcher valueFetcher(MapperService mapperService, SearchLookup searchLookup, String format) {\n            if (format != null) {\n                throw new IllegalArgumentException(\"Field [\" + name() + \"] of type [\" + typeName() + \"] doesn't support formats.\");\n            }\n\n            return new SourceValueFetcher(name(), mapperService, true) {\n                @Override\n                protected List<?> parseSourceValue(Object value) {\n                    if (value instanceof List) {\n                        return (List<?>) value;\n                    } else {\n                        return List.of(value);\n                    }\n                }\n            };\n        }\n","date":"2020-10-04 17:47:04","endLine":324,"groupId":"0","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"valueFetcher","params":"(MapperServicemapperService@SearchLookupsearchLookup@Stringformat)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/51/53b58b2fc5be459aff53402c8fafdf51693c41.src","preCode":"    public ValueFetcher valueFetcher(MapperService mapperService, SearchLookup searchLookup, String format) {\n        if (format != null) {\n            throw new IllegalArgumentException(\"Field [\" + name() + \"] of type [\" + typeName() + \"] doesn't support formats.\");\n        }\n\n        return new SourceValueFetcher(name(), mapperService, parsesArrayValue()) {\n            @Override\n            protected List<?> parseSourceValue(Object value) {\n                if (value instanceof List) {\n                    return (List<?>) value;\n                } else {\n                    return List.of(value);\n                }\n            }\n        };\n    }\n","realPath":"server/src/main/java/org/elasticsearch/index/mapper/CompletionFieldMapper.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":309,"status":"M"}],"commitId":"ce649d07d772a17d5b5b3506044a408f6bef72c6","commitMessage":"@@@Move FieldMapper#valueFetcher to MappedFieldType (#62974)\n\nFor runtime fields.  we will want to do all search-time interaction with\na field definition via a MappedFieldType.  rather than a FieldMapper.  to\navoid interfering with the logic of document parsing. Currently.  fetching\nvalues for runtime scripts and for building top hits responses need to\ncall a method on FieldMapper. This commit moves this method to\nMappedFieldType.  incidentally simplifying the current call sites and freeing\nus up to implement runtime fields as pure MappedFieldType objects.","date":"2020-10-04 17:47:04","modifiedFileCount":"110","status":"M","submitter":"Alan Woodward"},{"authorTime":"2020-10-07 05:42:03","codes":[{"authorDate":"2020-10-07 05:42:03","commitOrder":4,"curCode":"        public ValueFetcher valueFetcher(MapperService mapperService, SearchLookup searchLookup, String format) {\n            if (format != null) {\n                throw new IllegalArgumentException(\"Field [\" + name() + \"] of type [\" + typeName() + \"] doesn't support formats.\");\n            }\n            return new SourceValueFetcher(name(), mapperService) {\n                @Override\n                protected Float parseSourceValue(Object value) {\n                    return objectToFloat(value);\n                }\n            };\n        }\n","date":"2020-10-07 05:42:03","endLine":127,"groupId":"18071","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"valueFetcher","params":"(MapperServicemapperService@SearchLookupsearchLookup@Stringformat)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/a6/4e5ae190114b8b0bf281ec6e54af90b5159595.src","preCode":"        public ValueFetcher valueFetcher(MapperService mapperService, SearchLookup searchLookup, String format) {\n            if (format != null) {\n                throw new IllegalArgumentException(\"Field [\" + name() + \"] of type [\" + typeName() + \"] doesn't support formats.\");\n            }\n            return new SourceValueFetcher(name(), mapperService, false) {\n                @Override\n                protected Float parseSourceValue(Object value) {\n                    return objectToFloat(value);\n                }\n            };\n        }\n","realPath":"modules/mapper-extras/src/main/java/org/elasticsearch/index/mapper/RankFeatureFieldMapper.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":117,"status":"M"},{"authorDate":"2020-10-07 05:42:03","commitOrder":4,"curCode":"        public ValueFetcher valueFetcher(MapperService mapperService, SearchLookup searchLookup, String format) {\n            if (format != null) {\n                throw new IllegalArgumentException(\"Field [\" + name() + \"] of type [\" + typeName() + \"] doesn't support formats.\");\n            }\n\n            return new ArraySourceValueFetcher(name(), mapperService) {\n                @Override\n                protected List<?> parseSourceValue(Object value) {\n                    if (value instanceof List) {\n                        return (List<?>) value;\n                    } else {\n                        return List.of(value);\n                    }\n                }\n            };\n        }\n","date":"2020-10-07 05:42:03","endLine":324,"groupId":"18071","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"valueFetcher","params":"(MapperServicemapperService@SearchLookupsearchLookup@Stringformat)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/30/d1f44b01b9e76fef1646e3dec229296ef7ebec.src","preCode":"        public ValueFetcher valueFetcher(MapperService mapperService, SearchLookup searchLookup, String format) {\n            if (format != null) {\n                throw new IllegalArgumentException(\"Field [\" + name() + \"] of type [\" + typeName() + \"] doesn't support formats.\");\n            }\n\n            return new SourceValueFetcher(name(), mapperService, true) {\n                @Override\n                protected List<?> parseSourceValue(Object value) {\n                    if (value instanceof List) {\n                        return (List<?>) value;\n                    } else {\n                        return List.of(value);\n                    }\n                }\n            };\n        }\n","realPath":"server/src/main/java/org/elasticsearch/index/mapper/CompletionFieldMapper.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":309,"status":"M"}],"commitId":"cc09b6b6a06e212c1dcc3da9e7b50f7b37a3d1bf","commitMessage":"@@@Make array value parsing flag more robust. (#63354)\n\nWhen constructing a value fetcher.  the 'parsesArrayValue' flag must match\n`FieldMapper#parsesArrayValue`. However there is nothing in code or tests to\nhelp enforce this.\n\nThis PR reworks the value fetcher constructors so that `parsesArrayValue` is\n'false' by default. Just as for `FieldMapper#parsesArrayValue`.  field types must\nexplicitly set it to true and ensure the behavior is covered by tests.\n\nFollow-up to #62974.","date":"2020-10-07 05:42:03","modifiedFileCount":"27","status":"M","submitter":"Julie Tibshirani"},{"authorTime":"2020-11-04 19:08:34","codes":[{"authorDate":"2020-11-04 19:08:34","commitOrder":5,"curCode":"        public ValueFetcher valueFetcher(QueryShardContext context, SearchLookup searchLookup, String format) {\n            if (format != null) {\n                throw new IllegalArgumentException(\"Field [\" + name() + \"] of type [\" + typeName() + \"] doesn't support formats.\");\n            }\n            return new SourceValueFetcher(name(), context) {\n                @Override\n                protected Float parseSourceValue(Object value) {\n                    return objectToFloat(value);\n                }\n            };\n        }\n","date":"2020-11-04 19:08:34","endLine":127,"groupId":"50921","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"valueFetcher","params":"(QueryShardContextcontext@SearchLookupsearchLookup@Stringformat)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/1a/d4aff24977ba1aa88695ad2e77ec8608cf87f0.src","preCode":"        public ValueFetcher valueFetcher(MapperService mapperService, SearchLookup searchLookup, String format) {\n            if (format != null) {\n                throw new IllegalArgumentException(\"Field [\" + name() + \"] of type [\" + typeName() + \"] doesn't support formats.\");\n            }\n            return new SourceValueFetcher(name(), mapperService) {\n                @Override\n                protected Float parseSourceValue(Object value) {\n                    return objectToFloat(value);\n                }\n            };\n        }\n","realPath":"modules/mapper-extras/src/main/java/org/elasticsearch/index/mapper/RankFeatureFieldMapper.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":117,"status":"M"},{"authorDate":"2020-11-04 19:08:34","commitOrder":5,"curCode":"        public ValueFetcher valueFetcher(QueryShardContext context, SearchLookup searchLookup, String format) {\n            if (format != null) {\n                throw new IllegalArgumentException(\"Field [\" + name() + \"] of type [\" + typeName() + \"] doesn't support formats.\");\n            }\n\n            return new ArraySourceValueFetcher(name(), context) {\n                @Override\n                protected List<?> parseSourceValue(Object value) {\n                    if (value instanceof List) {\n                        return (List<?>) value;\n                    } else {\n                        return List.of(value);\n                    }\n                }\n            };\n        }\n","date":"2020-11-04 19:08:34","endLine":325,"groupId":"50921","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"valueFetcher","params":"(QueryShardContextcontext@SearchLookupsearchLookup@Stringformat)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/1c/007fb6f40652e003c45103c74718820ef2b4e9.src","preCode":"        public ValueFetcher valueFetcher(MapperService mapperService, SearchLookup searchLookup, String format) {\n            if (format != null) {\n                throw new IllegalArgumentException(\"Field [\" + name() + \"] of type [\" + typeName() + \"] doesn't support formats.\");\n            }\n\n            return new ArraySourceValueFetcher(name(), mapperService) {\n                @Override\n                protected List<?> parseSourceValue(Object value) {\n                    if (value instanceof List) {\n                        return (List<?>) value;\n                    } else {\n                        return List.of(value);\n                    }\n                }\n            };\n        }\n","realPath":"server/src/main/java/org/elasticsearch/index/mapper/CompletionFieldMapper.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":310,"status":"M"}],"commitId":"344ad33a16523a05c403a3a94cfc57087d41c98e","commitMessage":"@@@Remove ValueFetcher depedendency from MapperService (#64524)\n\nThe signature of MappedFieldType#valueFetcher requires MapperService as an argument which is unfortunate as that is one of the reasons why FetchContext exposes the whole MapperService.\n\nSuch use of MapperService can be replaced with exposing the QueryShardContext which encapsulates the MapperService.","date":"2020-11-04 19:08:34","modifiedFileCount":"58","status":"M","submitter":"Luca Cavanna"},{"authorTime":"2020-11-21 06:09:41","codes":[{"authorDate":"2020-11-21 06:09:41","commitOrder":6,"curCode":"        public ValueFetcher valueFetcher(QueryShardContext context, String format) {\n            if (format != null) {\n                throw new IllegalArgumentException(\"Field [\" + name() + \"] of type [\" + typeName() + \"] doesn't support formats.\");\n            }\n            return new SourceValueFetcher(name(), context) {\n                @Override\n                protected Float parseSourceValue(Object value) {\n                    return objectToFloat(value);\n                }\n            };\n        }\n","date":"2020-11-21 06:09:41","endLine":126,"groupId":"50921","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"valueFetcher","params":"(QueryShardContextcontext@Stringformat)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/11/91c3db06bdbed6f72cd8be0a0085c973e74505.src","preCode":"        public ValueFetcher valueFetcher(QueryShardContext context, SearchLookup searchLookup, String format) {\n            if (format != null) {\n                throw new IllegalArgumentException(\"Field [\" + name() + \"] of type [\" + typeName() + \"] doesn't support formats.\");\n            }\n            return new SourceValueFetcher(name(), context) {\n                @Override\n                protected Float parseSourceValue(Object value) {\n                    return objectToFloat(value);\n                }\n            };\n        }\n","realPath":"modules/mapper-extras/src/main/java/org/elasticsearch/index/mapper/RankFeatureFieldMapper.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":116,"status":"M"},{"authorDate":"2020-11-21 06:09:41","commitOrder":6,"curCode":"        public ValueFetcher valueFetcher(QueryShardContext context, String format) {\n            if (format != null) {\n                throw new IllegalArgumentException(\"Field [\" + name() + \"] of type [\" + typeName() + \"] doesn't support formats.\");\n            }\n\n            return new ArraySourceValueFetcher(name(), context) {\n                @Override\n                protected List<?> parseSourceValue(Object value) {\n                    if (value instanceof List) {\n                        return (List<?>) value;\n                    } else {\n                        return List.of(value);\n                    }\n                }\n            };\n        }\n","date":"2020-11-21 06:09:41","endLine":304,"groupId":"50921","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"valueFetcher","params":"(QueryShardContextcontext@Stringformat)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/a0/8f9862aa452c62335379ee3c80448bf55a1a6e.src","preCode":"        public ValueFetcher valueFetcher(QueryShardContext context, SearchLookup searchLookup, String format) {\n            if (format != null) {\n                throw new IllegalArgumentException(\"Field [\" + name() + \"] of type [\" + typeName() + \"] doesn't support formats.\");\n            }\n\n            return new ArraySourceValueFetcher(name(), context) {\n                @Override\n                protected List<?> parseSourceValue(Object value) {\n                    if (value instanceof List) {\n                        return (List<?>) value;\n                    } else {\n                        return List.of(value);\n                    }\n                }\n            };\n        }\n","realPath":"server/src/main/java/org/elasticsearch/index/mapper/CompletionFieldMapper.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":289,"status":"M"}],"commitId":"f4a462d05e76a4a7275de18e39dd40119a9fada2","commitMessage":"@@@Simplify how source is passed to fetch subphases. (#65292)\n\nThis PR simplifies how the document source is passed to each fetch subphase. A summary of the strategy:\n* For each document.  we try to eagerly load the source and store it on `HitContext`. Most subphases that access source.  like source filtering and highlighting.  use `HitContext`. For nested hits.  we filter the parent source and also store this source on `HitContext`.\n* Only for non-nested documents.  we also store the loaded source on `QueryShardContext#lookup`. This allows subphases that access source through `SearchLookup` to use the pre-loaded source when possible. This is now a common occurrence.  since runtime fields are supported in the 'fields' option and may soon be supported in highlighting.\n\nThere is no longer a special `SearchLookup` just for the fetch phase. This was not necessary and was mostly caused by a misunderstanding of how `QueryShardContext` should be used.\n\nAddresses #62511.","date":"2020-11-21 06:09:41","modifiedFileCount":"67","status":"M","submitter":"Julie Tibshirani"},{"authorTime":"2021-01-15 01:11:59","codes":[{"authorDate":"2021-01-15 01:11:59","commitOrder":7,"curCode":"        public ValueFetcher valueFetcher(SearchExecutionContext context, String format) {\n            if (format != null) {\n                throw new IllegalArgumentException(\"Field [\" + name() + \"] of type [\" + typeName() + \"] doesn't support formats.\");\n            }\n            return new SourceValueFetcher(name(), context) {\n                @Override\n                protected Float parseSourceValue(Object value) {\n                    return objectToFloat(value);\n                }\n            };\n        }\n","date":"2021-01-15 01:11:59","endLine":126,"groupId":"10217","id":13,"instanceNumber":1,"isCurCommit":0,"methodName":"valueFetcher","params":"(SearchExecutionContextcontext@Stringformat)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/1c/c27c4243bfdd7dec38e737299222439eb6a9b0.src","preCode":"        public ValueFetcher valueFetcher(QueryShardContext context, String format) {\n            if (format != null) {\n                throw new IllegalArgumentException(\"Field [\" + name() + \"] of type [\" + typeName() + \"] doesn't support formats.\");\n            }\n            return new SourceValueFetcher(name(), context) {\n                @Override\n                protected Float parseSourceValue(Object value) {\n                    return objectToFloat(value);\n                }\n            };\n        }\n","realPath":"modules/mapper-extras/src/main/java/org/elasticsearch/index/mapper/RankFeatureFieldMapper.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":116,"status":"M"},{"authorDate":"2021-01-15 01:11:59","commitOrder":7,"curCode":"        public ValueFetcher valueFetcher(SearchExecutionContext context, String format) {\n            if (format != null) {\n                throw new IllegalArgumentException(\"Field [\" + name() + \"] of type [\" + typeName() + \"] doesn't support formats.\");\n            }\n\n            return new ArraySourceValueFetcher(name(), context) {\n                @Override\n                protected List<?> parseSourceValue(Object value) {\n                    if (value instanceof List) {\n                        return (List<?>) value;\n                    } else {\n                        return List.of(value);\n                    }\n                }\n            };\n        }\n","date":"2021-01-15 01:11:59","endLine":304,"groupId":"10217","id":14,"instanceNumber":2,"isCurCommit":0,"methodName":"valueFetcher","params":"(SearchExecutionContextcontext@Stringformat)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/7c/b6472b35f5a9448aae3c32342473c72578c5da.src","preCode":"        public ValueFetcher valueFetcher(QueryShardContext context, String format) {\n            if (format != null) {\n                throw new IllegalArgumentException(\"Field [\" + name() + \"] of type [\" + typeName() + \"] doesn't support formats.\");\n            }\n\n            return new ArraySourceValueFetcher(name(), context) {\n                @Override\n                protected List<?> parseSourceValue(Object value) {\n                    if (value instanceof List) {\n                        return (List<?>) value;\n                    } else {\n                        return List.of(value);\n                    }\n                }\n            };\n        }\n","realPath":"server/src/main/java/org/elasticsearch/index/mapper/CompletionFieldMapper.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":289,"status":"M"}],"commitId":"5852fbedf52c77b0a76c2c731fdd4982fb65cd87","commitMessage":"@@@Rename QueryShardContext -> SearchExecutionContext. (#67490)\n\nWe decided to rename `QueryShardContext` to clarify that it supports all parts\nof search request execution. Before there was confusion over whether it should\nonly be used for building queries.  or maybe only used in the query phase. This\nPR also updates the javadocs.\n\nCloses #64740.","date":"2021-01-15 01:11:59","modifiedFileCount":"357","status":"M","submitter":"Julie Tibshirani"}]
