[{"authorTime":"2018-04-26 03:22:53","codes":[{"authorDate":"2018-04-26 03:22:53","commitOrder":1,"curCode":"    private Query existsQuery(String fieldName) {\n        final FieldNamesFieldMapper.FieldNamesFieldType fieldNamesFieldType =\n            (FieldNamesFieldMapper.FieldNamesFieldType) context.getMapperService().fullName(FieldNamesFieldMapper.NAME);\n        if (fieldNamesFieldType == null) {\n            return new MatchNoDocsQuery(\"No mappings yet\");\n        }\n        if (fieldNamesFieldType.isEnabled() == false) {\n            \r\n            return new WildcardQuery(new Term(fieldName, \"*\"));\n        }\n\n        return ExistsQueryBuilder.newFilter(context, fieldName);\n    }\n","date":"2018-04-26 03:22:53","endLine":613,"groupId":"32665","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"existsQuery","params":"(StringfieldName)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/39/8f2240a5c43573cf03e0233600fd5867b71319.src","preCode":"    private Query existsQuery(String fieldName) {\n        final FieldNamesFieldMapper.FieldNamesFieldType fieldNamesFieldType =\n            (FieldNamesFieldMapper.FieldNamesFieldType) context.getMapperService().fullName(FieldNamesFieldMapper.NAME);\n        if (fieldNamesFieldType == null) {\n            return new MatchNoDocsQuery(\"No mappings yet\");\n        }\n        if (fieldNamesFieldType.isEnabled() == false) {\n            \r\n            return new WildcardQuery(new Term(fieldName, \"*\"));\n        }\n\n        return ExistsQueryBuilder.newFilter(context, fieldName);\n    }\n","realPath":"server/src/main/java/org/elasticsearch/index/search/QueryStringQueryParser.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":601,"status":"B"},{"authorDate":"2018-04-26 03:22:53","commitOrder":1,"curCode":"    protected Query doToQuery(QueryShardContext context) throws IOException {\n        if (from == null && to == null) {\n            \r\n\r\n\n            final FieldNamesFieldMapper.FieldNamesFieldType fieldNamesFieldType =\n                (FieldNamesFieldMapper.FieldNamesFieldType) context.getMapperService().fullName(FieldNamesFieldMapper.NAME);\n            if (fieldNamesFieldType == null) {\n                return new MatchNoDocsQuery(\"No mappings yet\");\n            }\n            \r\n            if (fieldNamesFieldType.isEnabled()) {\n                return ExistsQueryBuilder.newFilter(context, fieldName);\n            }\n        }\n        Query query = null;\n        MappedFieldType mapper = context.fieldMapper(this.fieldName);\n        if (mapper != null) {\n            DateMathParser forcedDateParser = getForceDateParser();\n            query = mapper.rangeQuery(\n                    from, to, includeLower, includeUpper,\n                    relation, timeZone, forcedDateParser, context);\n        } else {\n            if (timeZone != null) {\n                throw new QueryShardException(context, \"[range] time_zone can not be applied to non unmapped field [\"\n                        + fieldName + \"]\");\n            }\n        }\n\n        if (query == null) {\n            query = new TermRangeQuery(this.fieldName,\n                    BytesRefs.toBytesRef(from), BytesRefs.toBytesRef(to),\n                    includeLower, includeUpper);\n        }\n        return query;\n    }\n","date":"2018-04-26 03:22:53","endLine":525,"groupId":"57035","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"doToQuery","params":"(QueryShardContextcontext)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/48/f7f9335ab1312eae268d275338e5e59f7d1ab3.src","preCode":"    protected Query doToQuery(QueryShardContext context) throws IOException {\n        if (from == null && to == null) {\n            \r\n\r\n\n            final FieldNamesFieldMapper.FieldNamesFieldType fieldNamesFieldType =\n                (FieldNamesFieldMapper.FieldNamesFieldType) context.getMapperService().fullName(FieldNamesFieldMapper.NAME);\n            if (fieldNamesFieldType == null) {\n                return new MatchNoDocsQuery(\"No mappings yet\");\n            }\n            \r\n            if (fieldNamesFieldType.isEnabled()) {\n                return ExistsQueryBuilder.newFilter(context, fieldName);\n            }\n        }\n        Query query = null;\n        MappedFieldType mapper = context.fieldMapper(this.fieldName);\n        if (mapper != null) {\n            DateMathParser forcedDateParser = getForceDateParser();\n            query = mapper.rangeQuery(\n                    from, to, includeLower, includeUpper,\n                    relation, timeZone, forcedDateParser, context);\n        } else {\n            if (timeZone != null) {\n                throw new QueryShardException(context, \"[range] time_zone can not be applied to non unmapped field [\"\n                        + fieldName + \"]\");\n            }\n        }\n\n        if (query == null) {\n            query = new TermRangeQuery(this.fieldName,\n                    BytesRefs.toBytesRef(from), BytesRefs.toBytesRef(to),\n                    includeLower, includeUpper);\n        }\n        return query;\n    }\n","realPath":"server/src/main/java/org/elasticsearch/index/query/RangeQueryBuilder.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":489,"status":"B"}],"commitId":"d74fb9eb4559077e2d20b19a9ed62d9ff825027a","commitMessage":"@@@Opened x-pack ILM code\n","date":"2018-04-26 03:22:53","modifiedFileCount":"0","status":"B","submitter":"Tal Levy"},{"authorTime":"2020-02-08 02:16:53","codes":[{"authorDate":"2020-02-08 02:16:53","commitOrder":2,"curCode":"    private Query existsQuery(String fieldName) {\n        final FieldNamesFieldMapper.FieldNamesFieldType fieldNamesFieldType =\n            (FieldNamesFieldMapper.FieldNamesFieldType) context.getMapperService().fieldType(FieldNamesFieldMapper.NAME);\n        if (fieldNamesFieldType == null) {\n            return new MatchNoDocsQuery(\"No mappings yet\");\n        }\n        if (fieldNamesFieldType.isEnabled() == false) {\n            \r\n            return new WildcardQuery(new Term(fieldName, \"*\"));\n        }\n\n        return ExistsQueryBuilder.newFilter(context, fieldName);\n    }\n","date":"2020-02-08 02:16:53","endLine":626,"groupId":"32665","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"existsQuery","params":"(StringfieldName)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/a6/beaf02d2e8c98c89426089ef1e54335d389243.src","preCode":"    private Query existsQuery(String fieldName) {\n        final FieldNamesFieldMapper.FieldNamesFieldType fieldNamesFieldType =\n            (FieldNamesFieldMapper.FieldNamesFieldType) context.getMapperService().fullName(FieldNamesFieldMapper.NAME);\n        if (fieldNamesFieldType == null) {\n            return new MatchNoDocsQuery(\"No mappings yet\");\n        }\n        if (fieldNamesFieldType.isEnabled() == false) {\n            \r\n            return new WildcardQuery(new Term(fieldName, \"*\"));\n        }\n\n        return ExistsQueryBuilder.newFilter(context, fieldName);\n    }\n","realPath":"server/src/main/java/org/elasticsearch/index/search/QueryStringQueryParser.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":614,"status":"M"},{"authorDate":"2020-02-08 02:16:53","commitOrder":2,"curCode":"    protected Query doToQuery(QueryShardContext context) throws IOException {\n        if (from == null && to == null) {\n            \r\n\r\n\n            final FieldNamesFieldMapper.FieldNamesFieldType fieldNamesFieldType =\n                (FieldNamesFieldMapper.FieldNamesFieldType) context.getMapperService().fieldType(FieldNamesFieldMapper.NAME);\n            if (fieldNamesFieldType == null) {\n                return new MatchNoDocsQuery(\"No mappings yet\");\n            }\n            \r\n            if (fieldNamesFieldType.isEnabled()) {\n                return ExistsQueryBuilder.newFilter(context, fieldName);\n            }\n        }\n        Query query = null;\n        MappedFieldType mapper = context.fieldMapper(this.fieldName);\n        if (mapper != null) {\n            DateMathParser forcedDateParser = getForceDateParser();\n            query = mapper.rangeQuery(\n                    from, to, includeLower, includeUpper,\n                    relation, timeZone, forcedDateParser, context);\n        } else {\n            if (timeZone != null) {\n                throw new QueryShardException(context, \"[range] time_zone can not be applied to non unmapped field [\"\n                        + fieldName + \"]\");\n            }\n        }\n\n        if (query == null) {\n            query = new TermRangeQuery(this.fieldName,\n                    BytesRefs.toBytesRef(from), BytesRefs.toBytesRef(to),\n                    includeLower, includeUpper);\n        }\n        return query;\n    }\n","date":"2020-02-08 02:16:53","endLine":523,"groupId":"57035","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"doToQuery","params":"(QueryShardContextcontext)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/02/19c782d06af0787ed6ccea2032452354fa0327.src","preCode":"    protected Query doToQuery(QueryShardContext context) throws IOException {\n        if (from == null && to == null) {\n            \r\n\r\n\n            final FieldNamesFieldMapper.FieldNamesFieldType fieldNamesFieldType =\n                (FieldNamesFieldMapper.FieldNamesFieldType) context.getMapperService().fullName(FieldNamesFieldMapper.NAME);\n            if (fieldNamesFieldType == null) {\n                return new MatchNoDocsQuery(\"No mappings yet\");\n            }\n            \r\n            if (fieldNamesFieldType.isEnabled()) {\n                return ExistsQueryBuilder.newFilter(context, fieldName);\n            }\n        }\n        Query query = null;\n        MappedFieldType mapper = context.fieldMapper(this.fieldName);\n        if (mapper != null) {\n            DateMathParser forcedDateParser = getForceDateParser();\n            query = mapper.rangeQuery(\n                    from, to, includeLower, includeUpper,\n                    relation, timeZone, forcedDateParser, context);\n        } else {\n            if (timeZone != null) {\n                throw new QueryShardException(context, \"[range] time_zone can not be applied to non unmapped field [\"\n                        + fieldName + \"]\");\n            }\n        }\n\n        if (query == null) {\n            query = new TermRangeQuery(this.fieldName,\n                    BytesRefs.toBytesRef(from), BytesRefs.toBytesRef(to),\n                    includeLower, includeUpper);\n        }\n        return query;\n    }\n","realPath":"server/src/main/java/org/elasticsearch/index/query/RangeQueryBuilder.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":487,"status":"M"}],"commitId":"e0b3ea041671e7600e8a1b76491f91041940a386","commitMessage":"@@@Rename MapperService#fullName to fieldType. (#52025)\n\nThe new name more accurately describes what the method returns.","date":"2020-02-08 02:16:53","modifiedFileCount":"83","status":"M","submitter":"Julie Tibshirani"},{"authorTime":"2020-02-26 17:25:38","codes":[{"authorDate":"2020-02-08 02:16:53","commitOrder":3,"curCode":"    private Query existsQuery(String fieldName) {\n        final FieldNamesFieldMapper.FieldNamesFieldType fieldNamesFieldType =\n            (FieldNamesFieldMapper.FieldNamesFieldType) context.getMapperService().fieldType(FieldNamesFieldMapper.NAME);\n        if (fieldNamesFieldType == null) {\n            return new MatchNoDocsQuery(\"No mappings yet\");\n        }\n        if (fieldNamesFieldType.isEnabled() == false) {\n            \r\n            return new WildcardQuery(new Term(fieldName, \"*\"));\n        }\n\n        return ExistsQueryBuilder.newFilter(context, fieldName);\n    }\n","date":"2020-02-08 02:16:53","endLine":626,"groupId":"32665","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"existsQuery","params":"(StringfieldName)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/a6/beaf02d2e8c98c89426089ef1e54335d389243.src","preCode":"    private Query existsQuery(String fieldName) {\n        final FieldNamesFieldMapper.FieldNamesFieldType fieldNamesFieldType =\n            (FieldNamesFieldMapper.FieldNamesFieldType) context.getMapperService().fieldType(FieldNamesFieldMapper.NAME);\n        if (fieldNamesFieldType == null) {\n            return new MatchNoDocsQuery(\"No mappings yet\");\n        }\n        if (fieldNamesFieldType.isEnabled() == false) {\n            \r\n            return new WildcardQuery(new Term(fieldName, \"*\"));\n        }\n\n        return ExistsQueryBuilder.newFilter(context, fieldName);\n    }\n","realPath":"server/src/main/java/org/elasticsearch/index/search/QueryStringQueryParser.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":614,"status":"N"},{"authorDate":"2020-02-26 17:25:38","commitOrder":3,"curCode":"    protected Query doToQuery(QueryShardContext context) throws IOException {\n        if (from == null && to == null) {\n            \r\n\r\n\n            final FieldNamesFieldMapper.FieldNamesFieldType fieldNamesFieldType =\n                (FieldNamesFieldMapper.FieldNamesFieldType) context.getMapperService().fieldType(FieldNamesFieldMapper.NAME);\n            if (fieldNamesFieldType == null) {\n                return new MatchNoDocsQuery(\"No mappings yet\");\n            }\n            \r\n            if (fieldNamesFieldType.isEnabled()) {\n                return ExistsQueryBuilder.newFilter(context, fieldName);\n            }\n        }\n        MappedFieldType mapper = context.fieldMapper(this.fieldName);\n        if (mapper == null) {\n            throw new IllegalStateException(\"Rewrite first\");\n        }\n        DateMathParser forcedDateParser = getForceDateParser();\n        return mapper.rangeQuery(\n                from, to, includeLower, includeUpper,\n                relation, timeZone, forcedDateParser, context);\n    }\n","date":"2020-02-26 17:25:37","endLine":500,"groupId":"0","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"doToQuery","params":"(QueryShardContextcontext)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/6c/b1704611ba09e8947d2447c4b0ea962356b0a9.src","preCode":"    protected Query doToQuery(QueryShardContext context) throws IOException {\n        if (from == null && to == null) {\n            \r\n\r\n\n            final FieldNamesFieldMapper.FieldNamesFieldType fieldNamesFieldType =\n                (FieldNamesFieldMapper.FieldNamesFieldType) context.getMapperService().fieldType(FieldNamesFieldMapper.NAME);\n            if (fieldNamesFieldType == null) {\n                return new MatchNoDocsQuery(\"No mappings yet\");\n            }\n            \r\n            if (fieldNamesFieldType.isEnabled()) {\n                return ExistsQueryBuilder.newFilter(context, fieldName);\n            }\n        }\n        Query query = null;\n        MappedFieldType mapper = context.fieldMapper(this.fieldName);\n        if (mapper != null) {\n            DateMathParser forcedDateParser = getForceDateParser();\n            query = mapper.rangeQuery(\n                    from, to, includeLower, includeUpper,\n                    relation, timeZone, forcedDateParser, context);\n        } else {\n            if (timeZone != null) {\n                throw new QueryShardException(context, \"[range] time_zone can not be applied to non unmapped field [\"\n                        + fieldName + \"]\");\n            }\n        }\n\n        if (query == null) {\n            query = new TermRangeQuery(this.fieldName,\n                    BytesRefs.toBytesRef(from), BytesRefs.toBytesRef(to),\n                    includeLower, includeUpper);\n        }\n        return query;\n    }\n","realPath":"server/src/main/java/org/elasticsearch/index/query/RangeQueryBuilder.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":476,"status":"M"}],"commitId":"8830eb6b9a8da0202806791f29f049b764ad19af","commitMessage":"@@@Generalize how queries on `_index` are handled at rewrite time (#52486)\n\n#49713 aims at introducing a new constant_keyword field which.  like _index.  always rewrites queries to a MatchAllQueryBuilder or a MatchNoneQueryBuilder in order to skip shards in the can_match phase. This change introduces a new ConstantFieldType marker class that helps get this functionality with any field and not just _index.\n\nSince this change refactors rewrites.  I also took it as an opportunity to adrress #49254: instead of returning the same queries you would get on a keyword field when a field is unmapped.  queries get rewritten to a MatchNoDocsQueryBuilder.\n\nThis change exposed a couple bugs.  like the fact that the percolator doesn't rewrite queries at query time.  or that the significant_terms aggregation doesn't rewrite its inner filter.  which I fixed.\n\nCloses #49254","date":"2020-02-26 17:25:37","modifiedFileCount":"36","status":"M","submitter":"Adrien Grand"},{"authorTime":"2020-07-06 16:42:47","codes":[{"authorDate":"2020-07-06 16:42:47","commitOrder":4,"curCode":"    private Query existsQuery(String fieldName) {\n        final FieldNamesFieldMapper.FieldNamesFieldType fieldNamesFieldType =\n            (FieldNamesFieldMapper.FieldNamesFieldType) context.getMapperService().fieldType(FieldNamesFieldMapper.NAME);\n        if (fieldNamesFieldType == null) {\n            return new MatchNoDocsQuery(\"No mappings yet\");\n        }\n        if (fieldNamesFieldType.isEnabled() == false) {\n            \r\n            return new WildcardQuery(new Term(fieldName, \"*\"));\n        }\n\n        return ExistsQueryBuilder.newFilter(context, fieldName, false);\n    }\n","date":"2020-07-06 16:42:47","endLine":636,"groupId":"32665","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"existsQuery","params":"(StringfieldName)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/16/b33c30dceeb085394e2a4f41d47bc32bc7b5c4.src","preCode":"    private Query existsQuery(String fieldName) {\n        final FieldNamesFieldMapper.FieldNamesFieldType fieldNamesFieldType =\n            (FieldNamesFieldMapper.FieldNamesFieldType) context.getMapperService().fieldType(FieldNamesFieldMapper.NAME);\n        if (fieldNamesFieldType == null) {\n            return new MatchNoDocsQuery(\"No mappings yet\");\n        }\n        if (fieldNamesFieldType.isEnabled() == false) {\n            \r\n            return new WildcardQuery(new Term(fieldName, \"*\"));\n        }\n\n        return ExistsQueryBuilder.newFilter(context, fieldName);\n    }\n","realPath":"server/src/main/java/org/elasticsearch/index/search/QueryStringQueryParser.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":624,"status":"M"},{"authorDate":"2020-07-06 16:42:47","commitOrder":4,"curCode":"    protected Query doToQuery(QueryShardContext context) throws IOException {\n        if (from == null && to == null) {\n            \r\n\r\n\n            final FieldNamesFieldMapper.FieldNamesFieldType fieldNamesFieldType =\n                (FieldNamesFieldMapper.FieldNamesFieldType) context.getMapperService().fieldType(FieldNamesFieldMapper.NAME);\n            if (fieldNamesFieldType == null) {\n                return new MatchNoDocsQuery(\"No mappings yet\");\n            }\n            \r\n            if (fieldNamesFieldType.isEnabled()) {\n                return ExistsQueryBuilder.newFilter(context, fieldName, false);\n            }\n        }\n        MappedFieldType mapper = context.fieldMapper(this.fieldName);\n        if (mapper == null) {\n            throw new IllegalStateException(\"Rewrite first\");\n        }\n        DateMathParser forcedDateParser = getForceDateParser();\n        return mapper.rangeQuery(\n                from, to, includeLower, includeUpper,\n                relation, timeZone, forcedDateParser, context);\n    }\n","date":"2020-07-06 16:42:47","endLine":500,"groupId":"25307","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"doToQuery","params":"(QueryShardContextcontext)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/e8/482866e7d38923dacaaf2b3a76ea977815cbeb.src","preCode":"    protected Query doToQuery(QueryShardContext context) throws IOException {\n        if (from == null && to == null) {\n            \r\n\r\n\n            final FieldNamesFieldMapper.FieldNamesFieldType fieldNamesFieldType =\n                (FieldNamesFieldMapper.FieldNamesFieldType) context.getMapperService().fieldType(FieldNamesFieldMapper.NAME);\n            if (fieldNamesFieldType == null) {\n                return new MatchNoDocsQuery(\"No mappings yet\");\n            }\n            \r\n            if (fieldNamesFieldType.isEnabled()) {\n                return ExistsQueryBuilder.newFilter(context, fieldName);\n            }\n        }\n        MappedFieldType mapper = context.fieldMapper(this.fieldName);\n        if (mapper == null) {\n            throw new IllegalStateException(\"Rewrite first\");\n        }\n        DateMathParser forcedDateParser = getForceDateParser();\n        return mapper.rangeQuery(\n                from, to, includeLower, includeUpper,\n                relation, timeZone, forcedDateParser, context);\n    }\n","realPath":"server/src/main/java/org/elasticsearch/index/query/RangeQueryBuilder.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":476,"status":"M"}],"commitId":"2ba8e2e98bf4b7c54929c0a19046deba61951817","commitMessage":"@@@Merge branch 'master' into feature/runtime_fields\n","date":"2020-07-06 16:42:47","modifiedFileCount":"330","status":"M","submitter":"Luca Cavanna"},{"authorTime":"2020-10-06 00:02:55","codes":[{"authorDate":"2020-10-06 00:02:55","commitOrder":5,"curCode":"    private Query existsQuery(String fieldName) {\n        final FieldNamesFieldMapper.FieldNamesFieldType fieldNamesFieldType =\n            (FieldNamesFieldMapper.FieldNamesFieldType) context.fieldMapper(FieldNamesFieldMapper.NAME);\n        if (fieldNamesFieldType == null) {\n            return new MatchNoDocsQuery(\"No mappings yet\");\n        }\n        if (fieldNamesFieldType.isEnabled() == false) {\n            \r\n            return new WildcardQuery(new Term(fieldName, \"*\"));\n        }\n\n        return ExistsQueryBuilder.newFilter(context, fieldName, false);\n    }\n","date":"2020-10-06 00:02:55","endLine":637,"groupId":"32665","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"existsQuery","params":"(StringfieldName)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/ce/8ce11203993beb8af79353ee4c83c127eca9d6.src","preCode":"    private Query existsQuery(String fieldName) {\n        final FieldNamesFieldMapper.FieldNamesFieldType fieldNamesFieldType =\n            (FieldNamesFieldMapper.FieldNamesFieldType) context.getMapperService().fieldType(FieldNamesFieldMapper.NAME);\n        if (fieldNamesFieldType == null) {\n            return new MatchNoDocsQuery(\"No mappings yet\");\n        }\n        if (fieldNamesFieldType.isEnabled() == false) {\n            \r\n            return new WildcardQuery(new Term(fieldName, \"*\"));\n        }\n\n        return ExistsQueryBuilder.newFilter(context, fieldName, false);\n    }\n","realPath":"server/src/main/java/org/elasticsearch/index/search/QueryStringQueryParser.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":625,"status":"M"},{"authorDate":"2020-10-06 00:02:55","commitOrder":5,"curCode":"    protected Query doToQuery(QueryShardContext context) throws IOException {\n        if (from == null && to == null) {\n            \r\n\r\n\n            final FieldNamesFieldMapper.FieldNamesFieldType fieldNamesFieldType =\n                (FieldNamesFieldMapper.FieldNamesFieldType) context.fieldMapper(FieldNamesFieldMapper.NAME);\n            if (fieldNamesFieldType == null) {\n                return new MatchNoDocsQuery(\"No mappings yet\");\n            }\n            \r\n            if (fieldNamesFieldType.isEnabled()) {\n                return ExistsQueryBuilder.newFilter(context, fieldName, false);\n            }\n        }\n        MappedFieldType mapper = context.fieldMapper(this.fieldName);\n        if (mapper == null) {\n            throw new IllegalStateException(\"Rewrite first\");\n        }\n        DateMathParser forcedDateParser = getForceDateParser();\n        return mapper.rangeQuery(\n                from, to, includeLower, includeUpper,\n                relation, timeZone, forcedDateParser, context);\n    }\n","date":"2020-10-06 00:02:55","endLine":500,"groupId":"25307","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"doToQuery","params":"(QueryShardContextcontext)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/67/246ea143a7dd97b4860262d6a7db39df751732.src","preCode":"    protected Query doToQuery(QueryShardContext context) throws IOException {\n        if (from == null && to == null) {\n            \r\n\r\n\n            final FieldNamesFieldMapper.FieldNamesFieldType fieldNamesFieldType =\n                (FieldNamesFieldMapper.FieldNamesFieldType) context.getMapperService().fieldType(FieldNamesFieldMapper.NAME);\n            if (fieldNamesFieldType == null) {\n                return new MatchNoDocsQuery(\"No mappings yet\");\n            }\n            \r\n            if (fieldNamesFieldType.isEnabled()) {\n                return ExistsQueryBuilder.newFilter(context, fieldName, false);\n            }\n        }\n        MappedFieldType mapper = context.fieldMapper(this.fieldName);\n        if (mapper == null) {\n            throw new IllegalStateException(\"Rewrite first\");\n        }\n        DateMathParser forcedDateParser = getForceDateParser();\n        return mapper.rangeQuery(\n                from, to, includeLower, includeUpper,\n                relation, timeZone, forcedDateParser, context);\n    }\n","realPath":"server/src/main/java/org/elasticsearch/index/query/RangeQueryBuilder.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":476,"status":"M"}],"commitId":"cf130f386e5a83e35508f08a1c75352d3b071a08","commitMessage":"@@@Replace some usages of QueryShardContext#getMapperService (#63239)\n\nQueryShardContext has a getter that allows to have access to MapperService. In many cases.  it is misused to lookup field types which QueryShardContext has a specific method for. This commit replaces those usages with a function String -> MappedFieldType.\n\nThere are also a few other places where MapperService is retrieved to call methods that are also available directly on QueryShardContext.  which are replaced as part of this commit too.","date":"2020-10-06 00:02:55","modifiedFileCount":"41","status":"M","submitter":"Luca Cavanna"},{"authorTime":"2020-10-07 16:08:55","codes":[{"authorDate":"2020-10-07 16:08:55","commitOrder":6,"curCode":"    private Query existsQuery(String fieldName) {\n        if (context.isFieldMapped(FieldNamesFieldMapper.NAME) == false) {\n            return new MatchNoDocsQuery(\"No mappings yet\");\n        }\n        final FieldNamesFieldMapper.FieldNamesFieldType fieldNamesFieldType =\n            (FieldNamesFieldMapper.FieldNamesFieldType) context.fieldMapper(FieldNamesFieldMapper.NAME);\n        if (fieldNamesFieldType.isEnabled() == false) {\n            \r\n            return new WildcardQuery(new Term(fieldName, \"*\"));\n        }\n        return ExistsQueryBuilder.newFilter(context, fieldName, false);\n    }\n","date":"2020-10-07 16:08:55","endLine":636,"groupId":"72902","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"existsQuery","params":"(StringfieldName)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/ce/f3f95228dfaac3b1a3727c55b33a3b31235217.src","preCode":"    private Query existsQuery(String fieldName) {\n        final FieldNamesFieldMapper.FieldNamesFieldType fieldNamesFieldType =\n            (FieldNamesFieldMapper.FieldNamesFieldType) context.fieldMapper(FieldNamesFieldMapper.NAME);\n        if (fieldNamesFieldType == null) {\n            return new MatchNoDocsQuery(\"No mappings yet\");\n        }\n        if (fieldNamesFieldType.isEnabled() == false) {\n            \r\n            return new WildcardQuery(new Term(fieldName, \"*\"));\n        }\n\n        return ExistsQueryBuilder.newFilter(context, fieldName, false);\n    }\n","realPath":"server/src/main/java/org/elasticsearch/index/search/QueryStringQueryParser.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":625,"status":"M"},{"authorDate":"2020-10-07 16:08:55","commitOrder":6,"curCode":"    protected Query doToQuery(QueryShardContext context) throws IOException {\n        if (from == null && to == null) {\n            \r\n\r\n\r\n\n            if (context.isFieldMapped(FieldNamesFieldMapper.NAME) == false) {\n                return new MatchNoDocsQuery(\"No mappings yet\");\n            }\n            final FieldNamesFieldMapper.FieldNamesFieldType fieldNamesFieldType =\n                (FieldNamesFieldMapper.FieldNamesFieldType) context.fieldMapper(FieldNamesFieldMapper.NAME);\n            \r\n            if (fieldNamesFieldType.isEnabled()) {\n                return ExistsQueryBuilder.newFilter(context, fieldName, false);\n            }\n        }\n        MappedFieldType mapper = context.fieldMapper(this.fieldName);\n        if (mapper == null) {\n            throw new IllegalStateException(\"Rewrite first\");\n        }\n        DateMathParser forcedDateParser = getForceDateParser();\n        return mapper.rangeQuery(\n                from, to, includeLower, includeUpper,\n                relation, timeZone, forcedDateParser, context);\n    }\n","date":"2020-10-07 16:08:55","endLine":500,"groupId":"0","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"doToQuery","params":"(QueryShardContextcontext)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/bf/79b33e486cc62a50777e14121ec557f7f328d9.src","preCode":"    protected Query doToQuery(QueryShardContext context) throws IOException {\n        if (from == null && to == null) {\n            \r\n\r\n\n            final FieldNamesFieldMapper.FieldNamesFieldType fieldNamesFieldType =\n                (FieldNamesFieldMapper.FieldNamesFieldType) context.fieldMapper(FieldNamesFieldMapper.NAME);\n            if (fieldNamesFieldType == null) {\n                return new MatchNoDocsQuery(\"No mappings yet\");\n            }\n            \r\n            if (fieldNamesFieldType.isEnabled()) {\n                return ExistsQueryBuilder.newFilter(context, fieldName, false);\n            }\n        }\n        MappedFieldType mapper = context.fieldMapper(this.fieldName);\n        if (mapper == null) {\n            throw new IllegalStateException(\"Rewrite first\");\n        }\n        DateMathParser forcedDateParser = getForceDateParser();\n        return mapper.rangeQuery(\n                from, to, includeLower, includeUpper,\n                relation, timeZone, forcedDateParser, context);\n    }\n","realPath":"server/src/main/java/org/elasticsearch/index/query/RangeQueryBuilder.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":476,"status":"M"}],"commitId":"b21b79d4a533507b03a756aa79ccb7a4c4601f07","commitMessage":"@@@Add isFieldMapped method to QueryShardContext (#63322)\n\nAs part of #63239 we have moved some usages of QueryShardContext#getMapperService that were looking up a field type through the fieldType method.  to use the existing QueryShardContext#fieldMapper. The latter though has additional handling for unmapped fields when the functionality is enabled.  and may throw exception if the field is not mapped. This additional behaviour is not desirable and may cause issues in cases where the callers have their own specific handling for situations where the field is not mapped.\n\nTo address this we introduce an additional isFieldMapped method to QueryShardContext that allows to check if a field is mapped or not.\n\nrelates to #63239","date":"2020-10-07 16:08:55","modifiedFileCount":"19","status":"M","submitter":"Luca Cavanna"},{"authorTime":"2020-10-07 22:11:53","codes":[{"authorDate":"2020-10-07 22:11:53","commitOrder":7,"curCode":"    private Query existsQuery(String fieldName) {\n        if (context.isFieldMapped(FieldNamesFieldMapper.NAME) == false) {\n            return new MatchNoDocsQuery(\"No mappings yet\");\n        }\n        final FieldNamesFieldMapper.FieldNamesFieldType fieldNamesFieldType =\n            (FieldNamesFieldMapper.FieldNamesFieldType) context.getFieldType(FieldNamesFieldMapper.NAME);\n        if (fieldNamesFieldType.isEnabled() == false) {\n            \r\n            return new WildcardQuery(new Term(fieldName, \"*\"));\n        }\n        return ExistsQueryBuilder.newFilter(context, fieldName, false);\n    }\n","date":"2020-10-07 22:11:53","endLine":636,"groupId":"72902","id":13,"instanceNumber":1,"isCurCommit":0,"methodName":"existsQuery","params":"(StringfieldName)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/17/80c47916ab05838530a042d7097753495c438a.src","preCode":"    private Query existsQuery(String fieldName) {\n        if (context.isFieldMapped(FieldNamesFieldMapper.NAME) == false) {\n            return new MatchNoDocsQuery(\"No mappings yet\");\n        }\n        final FieldNamesFieldMapper.FieldNamesFieldType fieldNamesFieldType =\n            (FieldNamesFieldMapper.FieldNamesFieldType) context.fieldMapper(FieldNamesFieldMapper.NAME);\n        if (fieldNamesFieldType.isEnabled() == false) {\n            \r\n            return new WildcardQuery(new Term(fieldName, \"*\"));\n        }\n        return ExistsQueryBuilder.newFilter(context, fieldName, false);\n    }\n","realPath":"server/src/main/java/org/elasticsearch/index/search/QueryStringQueryParser.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":625,"status":"M"},{"authorDate":"2020-10-07 22:11:53","commitOrder":7,"curCode":"    protected Query doToQuery(QueryShardContext context) throws IOException {\n        if (from == null && to == null) {\n            \r\n\r\n\r\n\n            if (context.isFieldMapped(FieldNamesFieldMapper.NAME) == false) {\n                return new MatchNoDocsQuery(\"No mappings yet\");\n            }\n            final FieldNamesFieldMapper.FieldNamesFieldType fieldNamesFieldType =\n                (FieldNamesFieldMapper.FieldNamesFieldType) context.getFieldType(FieldNamesFieldMapper.NAME);\n            \r\n            if (fieldNamesFieldType.isEnabled()) {\n                return ExistsQueryBuilder.newFilter(context, fieldName, false);\n            }\n        }\n        MappedFieldType mapper = context.getFieldType(this.fieldName);\n        if (mapper == null) {\n            throw new IllegalStateException(\"Rewrite first\");\n        }\n        DateMathParser forcedDateParser = getForceDateParser();\n        return mapper.rangeQuery(\n                from, to, includeLower, includeUpper,\n                relation, timeZone, forcedDateParser, context);\n    }\n","date":"2020-10-07 22:11:53","endLine":500,"groupId":"1154","id":14,"instanceNumber":2,"isCurCommit":0,"methodName":"doToQuery","params":"(QueryShardContextcontext)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/2c/3cc5797fca3ac44423e197a2640ac4739e5aab.src","preCode":"    protected Query doToQuery(QueryShardContext context) throws IOException {\n        if (from == null && to == null) {\n            \r\n\r\n\r\n\n            if (context.isFieldMapped(FieldNamesFieldMapper.NAME) == false) {\n                return new MatchNoDocsQuery(\"No mappings yet\");\n            }\n            final FieldNamesFieldMapper.FieldNamesFieldType fieldNamesFieldType =\n                (FieldNamesFieldMapper.FieldNamesFieldType) context.fieldMapper(FieldNamesFieldMapper.NAME);\n            \r\n            if (fieldNamesFieldType.isEnabled()) {\n                return ExistsQueryBuilder.newFilter(context, fieldName, false);\n            }\n        }\n        MappedFieldType mapper = context.fieldMapper(this.fieldName);\n        if (mapper == null) {\n            throw new IllegalStateException(\"Rewrite first\");\n        }\n        DateMathParser forcedDateParser = getForceDateParser();\n        return mapper.rangeQuery(\n                from, to, includeLower, includeUpper,\n                relation, timeZone, forcedDateParser, context);\n    }\n","realPath":"server/src/main/java/org/elasticsearch/index/query/RangeQueryBuilder.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":476,"status":"M"}],"commitId":"95582da9a57086c1bf519b300ffc420d03448e28","commitMessage":"@@@Rename QueryShardContext#fieldMapper to getFieldType (#63399)\n\nGiven that we have a class called `FieldMapper` and that the `fieldMapper` method exposed by `QueryShardContext` actually allows to get a `MappedFieldType` given its name.  this commit renames such method to `getFieldType`","date":"2020-10-07 22:11:53","modifiedFileCount":"72","status":"M","submitter":"Luca Cavanna"},{"authorTime":"2021-01-15 01:11:59","codes":[{"authorDate":"2020-10-07 22:11:53","commitOrder":8,"curCode":"    private Query existsQuery(String fieldName) {\n        if (context.isFieldMapped(FieldNamesFieldMapper.NAME) == false) {\n            return new MatchNoDocsQuery(\"No mappings yet\");\n        }\n        final FieldNamesFieldMapper.FieldNamesFieldType fieldNamesFieldType =\n            (FieldNamesFieldMapper.FieldNamesFieldType) context.getFieldType(FieldNamesFieldMapper.NAME);\n        if (fieldNamesFieldType.isEnabled() == false) {\n            \r\n            return new WildcardQuery(new Term(fieldName, \"*\"));\n        }\n        return ExistsQueryBuilder.newFilter(context, fieldName, false);\n    }\n","date":"2020-10-07 22:11:53","endLine":636,"groupId":"107749","id":15,"instanceNumber":1,"isCurCommit":0,"methodName":"existsQuery","params":"(StringfieldName)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/17/80c47916ab05838530a042d7097753495c438a.src","preCode":"    private Query existsQuery(String fieldName) {\n        if (context.isFieldMapped(FieldNamesFieldMapper.NAME) == false) {\n            return new MatchNoDocsQuery(\"No mappings yet\");\n        }\n        final FieldNamesFieldMapper.FieldNamesFieldType fieldNamesFieldType =\n            (FieldNamesFieldMapper.FieldNamesFieldType) context.getFieldType(FieldNamesFieldMapper.NAME);\n        if (fieldNamesFieldType.isEnabled() == false) {\n            \r\n            return new WildcardQuery(new Term(fieldName, \"*\"));\n        }\n        return ExistsQueryBuilder.newFilter(context, fieldName, false);\n    }\n","realPath":"server/src/main/java/org/elasticsearch/index/search/QueryStringQueryParser.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":625,"status":"N"},{"authorDate":"2021-01-15 01:11:59","commitOrder":8,"curCode":"    protected Query doToQuery(SearchExecutionContext context) throws IOException {\n        if (from == null && to == null) {\n            \r\n\r\n\r\n\n            if (context.isFieldMapped(FieldNamesFieldMapper.NAME) == false) {\n                return new MatchNoDocsQuery(\"No mappings yet\");\n            }\n            final FieldNamesFieldMapper.FieldNamesFieldType fieldNamesFieldType =\n                (FieldNamesFieldMapper.FieldNamesFieldType) context.getFieldType(FieldNamesFieldMapper.NAME);\n            \r\n            if (fieldNamesFieldType.isEnabled()) {\n                return ExistsQueryBuilder.newFilter(context, fieldName, false);\n            }\n        }\n        MappedFieldType mapper = context.getFieldType(this.fieldName);\n        if (mapper == null) {\n            throw new IllegalStateException(\"Rewrite first\");\n        }\n        DateMathParser forcedDateParser = getForceDateParser();\n        return mapper.rangeQuery(\n                from, to, includeLower, includeUpper,\n                relation, timeZone, forcedDateParser, context);\n    }\n","date":"2021-01-15 01:11:59","endLine":517,"groupId":"107749","id":16,"instanceNumber":2,"isCurCommit":0,"methodName":"doToQuery","params":"(SearchExecutionContextcontext)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/30/b5f3dfd2e2e5bd8fdd6b5169cf7124eba36500.src","preCode":"    protected Query doToQuery(QueryShardContext context) throws IOException {\n        if (from == null && to == null) {\n            \r\n\r\n\r\n\n            if (context.isFieldMapped(FieldNamesFieldMapper.NAME) == false) {\n                return new MatchNoDocsQuery(\"No mappings yet\");\n            }\n            final FieldNamesFieldMapper.FieldNamesFieldType fieldNamesFieldType =\n                (FieldNamesFieldMapper.FieldNamesFieldType) context.getFieldType(FieldNamesFieldMapper.NAME);\n            \r\n            if (fieldNamesFieldType.isEnabled()) {\n                return ExistsQueryBuilder.newFilter(context, fieldName, false);\n            }\n        }\n        MappedFieldType mapper = context.getFieldType(this.fieldName);\n        if (mapper == null) {\n            throw new IllegalStateException(\"Rewrite first\");\n        }\n        DateMathParser forcedDateParser = getForceDateParser();\n        return mapper.rangeQuery(\n                from, to, includeLower, includeUpper,\n                relation, timeZone, forcedDateParser, context);\n    }\n","realPath":"server/src/main/java/org/elasticsearch/index/query/RangeQueryBuilder.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":493,"status":"M"}],"commitId":"5852fbedf52c77b0a76c2c731fdd4982fb65cd87","commitMessage":"@@@Rename QueryShardContext -> SearchExecutionContext. (#67490)\n\nWe decided to rename `QueryShardContext` to clarify that it supports all parts\nof search request execution. Before there was confusion over whether it should\nonly be used for building queries.  or maybe only used in the query phase. This\nPR also updates the javadocs.\n\nCloses #64740.","date":"2021-01-15 01:11:59","modifiedFileCount":"357","status":"M","submitter":"Julie Tibshirani"}]
