[{"authorTime":"2018-04-26 03:22:53","codes":[{"authorDate":"2018-04-26 03:22:53","commitOrder":1,"curCode":"    public static FieldDoc readFieldDoc(StreamInput in) throws IOException {\n        Comparable[] cFields = new Comparable[in.readVInt()];\n        for (int j = 0; j < cFields.length; j++) {\n            byte type = in.readByte();\n            if (type == 0) {\n                cFields[j] = null;\n            } else if (type == 1) {\n                cFields[j] = in.readString();\n            } else if (type == 2) {\n                cFields[j] = in.readInt();\n            } else if (type == 3) {\n                cFields[j] = in.readLong();\n            } else if (type == 4) {\n                cFields[j] = in.readFloat();\n            } else if (type == 5) {\n                cFields[j] = in.readDouble();\n            } else if (type == 6) {\n                cFields[j] = in.readByte();\n            } else if (type == 7) {\n                cFields[j] = in.readShort();\n            } else if (type == 8) {\n                cFields[j] = in.readBoolean();\n            } else if (type == 9) {\n                cFields[j] = in.readBytesRef();\n            } else {\n                throw new IOException(\"Can't match type [\" + type + \"]\");\n            }\n        }\n        return new FieldDoc(in.readVInt(), in.readFloat(), cFields);\n    }\n","date":"2018-04-26 03:22:53","endLine":343,"groupId":"13746","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"readFieldDoc","params":"(StreamInputin)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/5b/ef7bee4f10b2570fb593e8e90b52c2cc0432a9.src","preCode":"    public static FieldDoc readFieldDoc(StreamInput in) throws IOException {\n        Comparable[] cFields = new Comparable[in.readVInt()];\n        for (int j = 0; j < cFields.length; j++) {\n            byte type = in.readByte();\n            if (type == 0) {\n                cFields[j] = null;\n            } else if (type == 1) {\n                cFields[j] = in.readString();\n            } else if (type == 2) {\n                cFields[j] = in.readInt();\n            } else if (type == 3) {\n                cFields[j] = in.readLong();\n            } else if (type == 4) {\n                cFields[j] = in.readFloat();\n            } else if (type == 5) {\n                cFields[j] = in.readDouble();\n            } else if (type == 6) {\n                cFields[j] = in.readByte();\n            } else if (type == 7) {\n                cFields[j] = in.readShort();\n            } else if (type == 8) {\n                cFields[j] = in.readBoolean();\n            } else if (type == 9) {\n                cFields[j] = in.readBytesRef();\n            } else {\n                throw new IOException(\"Can't match type [\" + type + \"]\");\n            }\n        }\n        return new FieldDoc(in.readVInt(), in.readFloat(), cFields);\n    }\n","realPath":"server/src/main/java/org/elasticsearch/common/lucene/Lucene.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":314,"status":"B"},{"authorDate":"2018-04-26 03:22:53","commitOrder":1,"curCode":"    private static Comparable readSortValue(StreamInput in) throws IOException {\n        byte type = in.readByte();\n        if (type == 0) {\n            return null;\n        } else if (type == 1) {\n            return in.readString();\n        } else if (type == 2) {\n            return in.readInt();\n        } else if (type == 3) {\n            return in.readLong();\n        } else if (type == 4) {\n            return in.readFloat();\n        } else if (type == 5) {\n            return in.readDouble();\n        } else if (type == 6) {\n            return in.readByte();\n        } else if (type == 7) {\n            return in.readShort();\n        } else if (type == 8) {\n            return in.readBoolean();\n        } else if (type == 9) {\n            return in.readBytesRef();\n        } else {\n            throw new IOException(\"Can't match type [\" + type + \"]\");\n        }\n    }\n","date":"2018-04-26 03:22:53","endLine":370,"groupId":"18987","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"readSortValue","params":"(StreamInputin)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/5b/ef7bee4f10b2570fb593e8e90b52c2cc0432a9.src","preCode":"    private static Comparable readSortValue(StreamInput in) throws IOException {\n        byte type = in.readByte();\n        if (type == 0) {\n            return null;\n        } else if (type == 1) {\n            return in.readString();\n        } else if (type == 2) {\n            return in.readInt();\n        } else if (type == 3) {\n            return in.readLong();\n        } else if (type == 4) {\n            return in.readFloat();\n        } else if (type == 5) {\n            return in.readDouble();\n        } else if (type == 6) {\n            return in.readByte();\n        } else if (type == 7) {\n            return in.readShort();\n        } else if (type == 8) {\n            return in.readBoolean();\n        } else if (type == 9) {\n            return in.readBytesRef();\n        } else {\n            throw new IOException(\"Can't match type [\" + type + \"]\");\n        }\n    }\n","realPath":"server/src/main/java/org/elasticsearch/common/lucene/Lucene.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":345,"status":"B"}],"commitId":"d74fb9eb4559077e2d20b19a9ed62d9ff825027a","commitMessage":"@@@Opened x-pack ILM code\n","date":"2018-04-26 03:22:53","modifiedFileCount":"0","status":"B","submitter":"Tal Levy"},{"authorTime":"2018-12-14 19:22:54","codes":[{"authorDate":"2018-04-26 03:22:53","commitOrder":2,"curCode":"    public static FieldDoc readFieldDoc(StreamInput in) throws IOException {\n        Comparable[] cFields = new Comparable[in.readVInt()];\n        for (int j = 0; j < cFields.length; j++) {\n            byte type = in.readByte();\n            if (type == 0) {\n                cFields[j] = null;\n            } else if (type == 1) {\n                cFields[j] = in.readString();\n            } else if (type == 2) {\n                cFields[j] = in.readInt();\n            } else if (type == 3) {\n                cFields[j] = in.readLong();\n            } else if (type == 4) {\n                cFields[j] = in.readFloat();\n            } else if (type == 5) {\n                cFields[j] = in.readDouble();\n            } else if (type == 6) {\n                cFields[j] = in.readByte();\n            } else if (type == 7) {\n                cFields[j] = in.readShort();\n            } else if (type == 8) {\n                cFields[j] = in.readBoolean();\n            } else if (type == 9) {\n                cFields[j] = in.readBytesRef();\n            } else {\n                throw new IOException(\"Can't match type [\" + type + \"]\");\n            }\n        }\n        return new FieldDoc(in.readVInt(), in.readFloat(), cFields);\n    }\n","date":"2018-04-26 03:22:53","endLine":343,"groupId":"13746","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"readFieldDoc","params":"(StreamInputin)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/5b/ef7bee4f10b2570fb593e8e90b52c2cc0432a9.src","preCode":"    public static FieldDoc readFieldDoc(StreamInput in) throws IOException {\n        Comparable[] cFields = new Comparable[in.readVInt()];\n        for (int j = 0; j < cFields.length; j++) {\n            byte type = in.readByte();\n            if (type == 0) {\n                cFields[j] = null;\n            } else if (type == 1) {\n                cFields[j] = in.readString();\n            } else if (type == 2) {\n                cFields[j] = in.readInt();\n            } else if (type == 3) {\n                cFields[j] = in.readLong();\n            } else if (type == 4) {\n                cFields[j] = in.readFloat();\n            } else if (type == 5) {\n                cFields[j] = in.readDouble();\n            } else if (type == 6) {\n                cFields[j] = in.readByte();\n            } else if (type == 7) {\n                cFields[j] = in.readShort();\n            } else if (type == 8) {\n                cFields[j] = in.readBoolean();\n            } else if (type == 9) {\n                cFields[j] = in.readBytesRef();\n            } else {\n                throw new IOException(\"Can't match type [\" + type + \"]\");\n            }\n        }\n        return new FieldDoc(in.readVInt(), in.readFloat(), cFields);\n    }\n","realPath":"server/src/main/java/org/elasticsearch/common/lucene/Lucene.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":314,"status":"N"},{"authorDate":"2018-12-14 19:22:54","commitOrder":2,"curCode":"    public static Comparable readSortValue(StreamInput in) throws IOException {\n        byte type = in.readByte();\n        if (type == 0) {\n            return null;\n        } else if (type == 1) {\n            return in.readString();\n        } else if (type == 2) {\n            return in.readInt();\n        } else if (type == 3) {\n            return in.readLong();\n        } else if (type == 4) {\n            return in.readFloat();\n        } else if (type == 5) {\n            return in.readDouble();\n        } else if (type == 6) {\n            return in.readByte();\n        } else if (type == 7) {\n            return in.readShort();\n        } else if (type == 8) {\n            return in.readBoolean();\n        } else if (type == 9) {\n            return in.readBytesRef();\n        } else {\n            throw new IOException(\"Can't match type [\" + type + \"]\");\n        }\n    }\n","date":"2018-12-14 19:22:54","endLine":408,"groupId":"18987","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"readSortValue","params":"(StreamInputin)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/4d/4a2d838dbd384f5877fa4c8b35b4f9bfad38ed.src","preCode":"    private static Comparable readSortValue(StreamInput in) throws IOException {\n        byte type = in.readByte();\n        if (type == 0) {\n            return null;\n        } else if (type == 1) {\n            return in.readString();\n        } else if (type == 2) {\n            return in.readInt();\n        } else if (type == 3) {\n            return in.readLong();\n        } else if (type == 4) {\n            return in.readFloat();\n        } else if (type == 5) {\n            return in.readDouble();\n        } else if (type == 6) {\n            return in.readByte();\n        } else if (type == 7) {\n            return in.readShort();\n        } else if (type == 8) {\n            return in.readBoolean();\n        } else if (type == 9) {\n            return in.readBytesRef();\n        } else {\n            throw new IOException(\"Can't match type [\" + type + \"]\");\n        }\n    }\n","realPath":"server/src/main/java/org/elasticsearch/common/lucene/Lucene.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":383,"status":"M"}],"commitId":"7dc3d3b78b97c534280c38cff07bf8fd10a83f9f","commitMessage":"@@@Add sort and collapse info to SearchHits transport serialization (#36555)\n\nIn order for CCS alternate execution mode (see #32125) to be able to do the final reduction step on the CCS coordinating node.  we need to serialize additional info in the transport layer as part of the `SearchHits`.  specifically:\n\n- lucene `SortField[]` which contains info about the fields that sorting was performed on and their type.  which depends on mappings (that the CCS node does not know about)\n- collapse field (`String`) that field collapsing was executed on.  if requested\n- collapse values (`Object[]`) that field collapsing was based on.  if requested\n\nThis info is needed to be able to reconstruct the `TopFieldDocs` or `CollapseFieldTopDocs` in the CCS coordinating node to feed the `mergeTopDocs` method and reduce multiple search responses received (one per cluster) into one.\n\nThis commit adds such information to the `SearchHits` class. It's nullable info that is not serialized through the REST layer. `SearchPhaseController` sets such info at the end of the hits reduction phase.","date":"2018-12-14 19:22:54","modifiedFileCount":"12","status":"M","submitter":"Luca Cavanna"},{"authorTime":"2019-11-12 18:21:41","codes":[{"authorDate":"2019-11-12 18:21:41","commitOrder":3,"curCode":"    public static FieldDoc readFieldDoc(StreamInput in) throws IOException {\n        Comparable<?>[] cFields = new Comparable<?>[in.readVInt()];\n        for (int j = 0; j < cFields.length; j++) {\n            byte type = in.readByte();\n            if (type == 0) {\n                cFields[j] = null;\n            } else if (type == 1) {\n                cFields[j] = in.readString();\n            } else if (type == 2) {\n                cFields[j] = in.readInt();\n            } else if (type == 3) {\n                cFields[j] = in.readLong();\n            } else if (type == 4) {\n                cFields[j] = in.readFloat();\n            } else if (type == 5) {\n                cFields[j] = in.readDouble();\n            } else if (type == 6) {\n                cFields[j] = in.readByte();\n            } else if (type == 7) {\n                cFields[j] = in.readShort();\n            } else if (type == 8) {\n                cFields[j] = in.readBoolean();\n            } else if (type == 9) {\n                cFields[j] = in.readBytesRef();\n            } else {\n                throw new IOException(\"Can't match type [\" + type + \"]\");\n            }\n        }\n        return new FieldDoc(in.readVInt(), in.readFloat(), cFields);\n    }\n","date":"2019-11-12 18:21:41","endLine":376,"groupId":"13746","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"readFieldDoc","params":"(StreamInputin)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/fc/ab160108b29c61c7a9e99b5a1c36eeced28166.src","preCode":"    public static FieldDoc readFieldDoc(StreamInput in) throws IOException {\n        Comparable[] cFields = new Comparable[in.readVInt()];\n        for (int j = 0; j < cFields.length; j++) {\n            byte type = in.readByte();\n            if (type == 0) {\n                cFields[j] = null;\n            } else if (type == 1) {\n                cFields[j] = in.readString();\n            } else if (type == 2) {\n                cFields[j] = in.readInt();\n            } else if (type == 3) {\n                cFields[j] = in.readLong();\n            } else if (type == 4) {\n                cFields[j] = in.readFloat();\n            } else if (type == 5) {\n                cFields[j] = in.readDouble();\n            } else if (type == 6) {\n                cFields[j] = in.readByte();\n            } else if (type == 7) {\n                cFields[j] = in.readShort();\n            } else if (type == 8) {\n                cFields[j] = in.readBoolean();\n            } else if (type == 9) {\n                cFields[j] = in.readBytesRef();\n            } else {\n                throw new IOException(\"Can't match type [\" + type + \"]\");\n            }\n        }\n        return new FieldDoc(in.readVInt(), in.readFloat(), cFields);\n    }\n","realPath":"server/src/main/java/org/elasticsearch/common/lucene/Lucene.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":347,"status":"M"},{"authorDate":"2019-11-12 18:21:41","commitOrder":3,"curCode":"    public static Comparable<?> readSortValue(StreamInput in) throws IOException {\n        byte type = in.readByte();\n        if (type == 0) {\n            return null;\n        } else if (type == 1) {\n            return in.readString();\n        } else if (type == 2) {\n            return in.readInt();\n        } else if (type == 3) {\n            return in.readLong();\n        } else if (type == 4) {\n            return in.readFloat();\n        } else if (type == 5) {\n            return in.readDouble();\n        } else if (type == 6) {\n            return in.readByte();\n        } else if (type == 7) {\n            return in.readShort();\n        } else if (type == 8) {\n            return in.readBoolean();\n        } else if (type == 9) {\n            return in.readBytesRef();\n        } else {\n            throw new IOException(\"Can't match type [\" + type + \"]\");\n        }\n    }\n","date":"2019-11-12 18:21:41","endLine":403,"groupId":"18987","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"readSortValue","params":"(StreamInputin)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/fc/ab160108b29c61c7a9e99b5a1c36eeced28166.src","preCode":"    public static Comparable readSortValue(StreamInput in) throws IOException {\n        byte type = in.readByte();\n        if (type == 0) {\n            return null;\n        } else if (type == 1) {\n            return in.readString();\n        } else if (type == 2) {\n            return in.readInt();\n        } else if (type == 3) {\n            return in.readLong();\n        } else if (type == 4) {\n            return in.readFloat();\n        } else if (type == 5) {\n            return in.readDouble();\n        } else if (type == 6) {\n            return in.readByte();\n        } else if (type == 7) {\n            return in.readShort();\n        } else if (type == 8) {\n            return in.readBoolean();\n        } else if (type == 9) {\n            return in.readBytesRef();\n        } else {\n            throw new IOException(\"Can't match type [\" + type + \"]\");\n        }\n    }\n","realPath":"server/src/main/java/org/elasticsearch/common/lucene/Lucene.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":378,"status":"M"}],"commitId":"293648b4ee71e513305cc6dcec53a75f3ae833e6","commitMessage":"@@@[#40366] Silence some lint warnings in server project (#48927)\n\nPart of #40366. Silence a number of lint warnings in the :server\nproject.  which arise when re-enabling suppressed warnings in\nserver/build.gradle.","date":"2019-11-12 18:21:41","modifiedFileCount":"29","status":"M","submitter":"Rory Hunter"},{"authorTime":"2019-11-12 18:21:41","codes":[{"authorDate":"2020-09-24 00:06:21","commitOrder":4,"curCode":"    public static FieldDoc readFieldDoc(StreamInput in) throws IOException {\n        Comparable<?>[] cFields = new Comparable<?>[in.readVInt()];\n        for (int j = 0; j < cFields.length; j++) {\n            byte type = in.readByte();\n            if (type == 0) {\n                cFields[j] = null;\n            } else if (type == 1) {\n                cFields[j] = in.readString();\n            } else if (type == 2) {\n                cFields[j] = in.readInt();\n            } else if (type == 3) {\n                cFields[j] = in.readLong();\n            } else if (type == 4) {\n                cFields[j] = in.readFloat();\n            } else if (type == 5) {\n                cFields[j] = in.readDouble();\n            } else if (type == 6) {\n                cFields[j] = in.readByte();\n            } else if (type == 7) {\n                cFields[j] = in.readShort();\n            } else if (type == 8) {\n                cFields[j] = in.readBoolean();\n            } else if (type == 9) {\n                cFields[j] = in.readBytesRef();\n            } else if (type == 10) {\n                cFields[j] = new BigInteger(in.readString());\n            } else {\n                throw new IOException(\"Can't match type [\" + type + \"]\");\n            }\n        }\n        return new FieldDoc(in.readVInt(), in.readFloat(), cFields);\n    }\n","date":"2020-09-24 00:06:21","endLine":377,"groupId":"13746","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"readFieldDoc","params":"(StreamInputin)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/8a/2aa15a8803b679799e17c43bc91e016811628d.src","preCode":"    public static FieldDoc readFieldDoc(StreamInput in) throws IOException {\n        Comparable<?>[] cFields = new Comparable<?>[in.readVInt()];\n        for (int j = 0; j < cFields.length; j++) {\n            byte type = in.readByte();\n            if (type == 0) {\n                cFields[j] = null;\n            } else if (type == 1) {\n                cFields[j] = in.readString();\n            } else if (type == 2) {\n                cFields[j] = in.readInt();\n            } else if (type == 3) {\n                cFields[j] = in.readLong();\n            } else if (type == 4) {\n                cFields[j] = in.readFloat();\n            } else if (type == 5) {\n                cFields[j] = in.readDouble();\n            } else if (type == 6) {\n                cFields[j] = in.readByte();\n            } else if (type == 7) {\n                cFields[j] = in.readShort();\n            } else if (type == 8) {\n                cFields[j] = in.readBoolean();\n            } else if (type == 9) {\n                cFields[j] = in.readBytesRef();\n            } else {\n                throw new IOException(\"Can't match type [\" + type + \"]\");\n            }\n        }\n        return new FieldDoc(in.readVInt(), in.readFloat(), cFields);\n    }\n","realPath":"server/src/main/java/org/elasticsearch/common/lucene/Lucene.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":346,"status":"M"},{"authorDate":"2019-11-12 18:21:41","commitOrder":4,"curCode":"    public static Comparable<?> readSortValue(StreamInput in) throws IOException {\n        byte type = in.readByte();\n        if (type == 0) {\n            return null;\n        } else if (type == 1) {\n            return in.readString();\n        } else if (type == 2) {\n            return in.readInt();\n        } else if (type == 3) {\n            return in.readLong();\n        } else if (type == 4) {\n            return in.readFloat();\n        } else if (type == 5) {\n            return in.readDouble();\n        } else if (type == 6) {\n            return in.readByte();\n        } else if (type == 7) {\n            return in.readShort();\n        } else if (type == 8) {\n            return in.readBoolean();\n        } else if (type == 9) {\n            return in.readBytesRef();\n        } else {\n            throw new IOException(\"Can't match type [\" + type + \"]\");\n        }\n    }\n","date":"2019-11-12 18:21:41","endLine":403,"groupId":"18987","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"readSortValue","params":"(StreamInputin)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/fc/ab160108b29c61c7a9e99b5a1c36eeced28166.src","preCode":"    public static Comparable<?> readSortValue(StreamInput in) throws IOException {\n        byte type = in.readByte();\n        if (type == 0) {\n            return null;\n        } else if (type == 1) {\n            return in.readString();\n        } else if (type == 2) {\n            return in.readInt();\n        } else if (type == 3) {\n            return in.readLong();\n        } else if (type == 4) {\n            return in.readFloat();\n        } else if (type == 5) {\n            return in.readDouble();\n        } else if (type == 6) {\n            return in.readByte();\n        } else if (type == 7) {\n            return in.readShort();\n        } else if (type == 8) {\n            return in.readBoolean();\n        } else if (type == 9) {\n            return in.readBytesRef();\n        } else {\n            throw new IOException(\"Can't match type [\" + type + \"]\");\n        }\n    }\n","realPath":"server/src/main/java/org/elasticsearch/common/lucene/Lucene.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":378,"status":"N"}],"commitId":"ff55296f7ad39d7fbfa919f8f8233c58bd6d8620","commitMessage":"@@@Introduce 64-bit unsigned long field type (#60050)\n\nThis field type supports\n- indexing of integer values from [0.  18446744073709551615]\n- precise queries (term.  range)\n- precise sort and terms aggregations\n- other aggregations are based on conversion of long values\n  to double and can be imprecise for large values.\n\nCloses #32434","date":"2020-09-24 00:06:21","modifiedFileCount":"14","status":"M","submitter":"Mayya Sharipova"},{"authorTime":"2020-09-30 20:52:26","codes":[{"authorDate":"2020-09-24 00:06:21","commitOrder":5,"curCode":"    public static FieldDoc readFieldDoc(StreamInput in) throws IOException {\n        Comparable<?>[] cFields = new Comparable<?>[in.readVInt()];\n        for (int j = 0; j < cFields.length; j++) {\n            byte type = in.readByte();\n            if (type == 0) {\n                cFields[j] = null;\n            } else if (type == 1) {\n                cFields[j] = in.readString();\n            } else if (type == 2) {\n                cFields[j] = in.readInt();\n            } else if (type == 3) {\n                cFields[j] = in.readLong();\n            } else if (type == 4) {\n                cFields[j] = in.readFloat();\n            } else if (type == 5) {\n                cFields[j] = in.readDouble();\n            } else if (type == 6) {\n                cFields[j] = in.readByte();\n            } else if (type == 7) {\n                cFields[j] = in.readShort();\n            } else if (type == 8) {\n                cFields[j] = in.readBoolean();\n            } else if (type == 9) {\n                cFields[j] = in.readBytesRef();\n            } else if (type == 10) {\n                cFields[j] = new BigInteger(in.readString());\n            } else {\n                throw new IOException(\"Can't match type [\" + type + \"]\");\n            }\n        }\n        return new FieldDoc(in.readVInt(), in.readFloat(), cFields);\n    }\n","date":"2020-09-24 00:06:21","endLine":377,"groupId":"108124","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"readFieldDoc","params":"(StreamInputin)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/8a/2aa15a8803b679799e17c43bc91e016811628d.src","preCode":"    public static FieldDoc readFieldDoc(StreamInput in) throws IOException {\n        Comparable<?>[] cFields = new Comparable<?>[in.readVInt()];\n        for (int j = 0; j < cFields.length; j++) {\n            byte type = in.readByte();\n            if (type == 0) {\n                cFields[j] = null;\n            } else if (type == 1) {\n                cFields[j] = in.readString();\n            } else if (type == 2) {\n                cFields[j] = in.readInt();\n            } else if (type == 3) {\n                cFields[j] = in.readLong();\n            } else if (type == 4) {\n                cFields[j] = in.readFloat();\n            } else if (type == 5) {\n                cFields[j] = in.readDouble();\n            } else if (type == 6) {\n                cFields[j] = in.readByte();\n            } else if (type == 7) {\n                cFields[j] = in.readShort();\n            } else if (type == 8) {\n                cFields[j] = in.readBoolean();\n            } else if (type == 9) {\n                cFields[j] = in.readBytesRef();\n            } else if (type == 10) {\n                cFields[j] = new BigInteger(in.readString());\n            } else {\n                throw new IOException(\"Can't match type [\" + type + \"]\");\n            }\n        }\n        return new FieldDoc(in.readVInt(), in.readFloat(), cFields);\n    }\n","realPath":"server/src/main/java/org/elasticsearch/common/lucene/Lucene.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":346,"status":"N"},{"authorDate":"2020-09-30 20:52:26","commitOrder":5,"curCode":"    public static Comparable<?> readSortValue(StreamInput in) throws IOException {\n        byte type = in.readByte();\n        if (type == 0) {\n            return null;\n        } else if (type == 1) {\n            return in.readString();\n        } else if (type == 2) {\n            return in.readInt();\n        } else if (type == 3) {\n            return in.readLong();\n        } else if (type == 4) {\n            return in.readFloat();\n        } else if (type == 5) {\n            return in.readDouble();\n        } else if (type == 6) {\n            return in.readByte();\n        } else if (type == 7) {\n            return in.readShort();\n        } else if (type == 8) {\n            return in.readBoolean();\n        } else if (type == 9) {\n            return in.readBytesRef();\n        } else if (type == 10) {\n            return new BigInteger(in.readString());\n        } else {\n            throw new IOException(\"Can't match type [\" + type + \"]\");\n        }\n    }\n","date":"2020-09-30 20:52:26","endLine":406,"groupId":"108124","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"readSortValue","params":"(StreamInputin)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/b9/f8bb98b4273cbcd3962abb6c52b90f5524c370.src","preCode":"    public static Comparable<?> readSortValue(StreamInput in) throws IOException {\n        byte type = in.readByte();\n        if (type == 0) {\n            return null;\n        } else if (type == 1) {\n            return in.readString();\n        } else if (type == 2) {\n            return in.readInt();\n        } else if (type == 3) {\n            return in.readLong();\n        } else if (type == 4) {\n            return in.readFloat();\n        } else if (type == 5) {\n            return in.readDouble();\n        } else if (type == 6) {\n            return in.readByte();\n        } else if (type == 7) {\n            return in.readShort();\n        } else if (type == 8) {\n            return in.readBoolean();\n        } else if (type == 9) {\n            return in.readBytesRef();\n        } else {\n            throw new IOException(\"Can't match type [\" + type + \"]\");\n        }\n    }\n","realPath":"server/src/main/java/org/elasticsearch/common/lucene/Lucene.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":379,"status":"M"}],"commitId":"40d528995ef51151d150cf3ecabf25fcaa51f493","commitMessage":"@@@Small refactoring of unsinged_long (#62904)\n\n- Modify Lucene::readSortValue to read BigInteger as a sortValue.\nIn #60050 writeSortValue was modified.  but readSortValue was forgotten.\n\n- Adjust yml tests to v7.10 asr unsigned_long has been backported\n\n- Change MapperTests to use proper document IDs\n\nRelates to #60050","date":"2020-09-30 20:52:26","modifiedFileCount":"2","status":"M","submitter":"Mayya Sharipova"}]
