[{"authorTime":"2018-04-26 03:22:53","codes":[{"authorDate":"2018-04-26 03:22:53","commitOrder":1,"curCode":"    public void testEmpty() throws Exception {\n        Directory directory = newDirectory();\n        RandomIndexWriter indexWriter = new RandomIndexWriter(random(), directory);\n        indexWriter.close();\n        IndexReader indexReader = DirectoryReader.open(directory);\n        IndexSearcher indexSearcher = newSearcher(indexReader, true, true);\n        int numFilters = randomIntBetween(1, 10);\n        QueryBuilder[] filters = new QueryBuilder[numFilters];\n        for (int i = 0; i < filters.length; i++) {\n            filters[i] = QueryBuilders.termQuery(\"field\", randomAlphaOfLength(5));\n        }\n        FiltersAggregationBuilder builder = new FiltersAggregationBuilder(\"test\", filters);\n        builder.otherBucketKey(\"other\");\n        InternalFilters response = search(indexSearcher, new MatchAllDocsQuery(), builder, fieldType);\n        assertEquals(response.getBuckets().size(), numFilters);\n        for (InternalFilters.InternalBucket filter : response.getBuckets()) {\n            assertEquals(filter.getDocCount(), 0);\n        }\n        indexReader.close();\n        directory.close();\n    }\n","date":"2018-04-26 03:22:53","endLine":79,"groupId":"22422","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testEmpty","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/6f/df207249f432d199f0dfe93dc53bd8f0e74e40.src","preCode":"    public void testEmpty() throws Exception {\n        Directory directory = newDirectory();\n        RandomIndexWriter indexWriter = new RandomIndexWriter(random(), directory);\n        indexWriter.close();\n        IndexReader indexReader = DirectoryReader.open(directory);\n        IndexSearcher indexSearcher = newSearcher(indexReader, true, true);\n        int numFilters = randomIntBetween(1, 10);\n        QueryBuilder[] filters = new QueryBuilder[numFilters];\n        for (int i = 0; i < filters.length; i++) {\n            filters[i] = QueryBuilders.termQuery(\"field\", randomAlphaOfLength(5));\n        }\n        FiltersAggregationBuilder builder = new FiltersAggregationBuilder(\"test\", filters);\n        builder.otherBucketKey(\"other\");\n        InternalFilters response = search(indexSearcher, new MatchAllDocsQuery(), builder, fieldType);\n        assertEquals(response.getBuckets().size(), numFilters);\n        for (InternalFilters.InternalBucket filter : response.getBuckets()) {\n            assertEquals(filter.getDocCount(), 0);\n        }\n        indexReader.close();\n        directory.close();\n    }\n","realPath":"server/src/test/java/org/elasticsearch/search/aggregations/bucket/filter/FiltersAggregatorTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":59,"status":"B"},{"authorDate":"2018-04-26 03:22:53","commitOrder":1,"curCode":"    public void testEmpty() throws Exception {\n        Directory directory = newDirectory();\n        RandomIndexWriter indexWriter = new RandomIndexWriter(random(), directory);\n        indexWriter.close();\n        IndexReader indexReader = DirectoryReader.open(directory);\n        IndexSearcher indexSearcher = newSearcher(indexReader, true, true);\n        QueryBuilder filter = QueryBuilders.termQuery(\"field\", randomAlphaOfLength(5));\n        FilterAggregationBuilder builder = new FilterAggregationBuilder(\"test\", filter);\n        InternalFilter response = search(indexSearcher, new MatchAllDocsQuery(), builder,\n                fieldType);\n        assertEquals(response.getDocCount(), 0);\n        indexReader.close();\n        directory.close();\n    }\n","date":"2018-04-26 03:22:53","endLine":69,"groupId":"10722","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testEmpty","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/f3/d057d8e8cd09886f7ff45b77d5d88fc77029db.src","preCode":"    public void testEmpty() throws Exception {\n        Directory directory = newDirectory();\n        RandomIndexWriter indexWriter = new RandomIndexWriter(random(), directory);\n        indexWriter.close();\n        IndexReader indexReader = DirectoryReader.open(directory);\n        IndexSearcher indexSearcher = newSearcher(indexReader, true, true);\n        QueryBuilder filter = QueryBuilders.termQuery(\"field\", randomAlphaOfLength(5));\n        FilterAggregationBuilder builder = new FilterAggregationBuilder(\"test\", filter);\n        InternalFilter response = search(indexSearcher, new MatchAllDocsQuery(), builder,\n                fieldType);\n        assertEquals(response.getDocCount(), 0);\n        indexReader.close();\n        directory.close();\n    }\n","realPath":"server/src/test/java/org/elasticsearch/search/aggregations/bucket/filter/FilterAggregatorTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":56,"status":"B"}],"commitId":"d74fb9eb4559077e2d20b19a9ed62d9ff825027a","commitMessage":"@@@Opened x-pack ILM code\n","date":"2018-04-26 03:22:53","modifiedFileCount":"0","status":"B","submitter":"Tal Levy"},{"authorTime":"2019-01-23 01:38:55","codes":[{"authorDate":"2019-01-23 01:38:55","commitOrder":2,"curCode":"    public void testEmpty() throws Exception {\n        Directory directory = newDirectory();\n        RandomIndexWriter indexWriter = new RandomIndexWriter(random(), directory);\n        indexWriter.close();\n        IndexReader indexReader = DirectoryReader.open(directory);\n        IndexSearcher indexSearcher = newSearcher(indexReader, true, true);\n        int numFilters = randomIntBetween(1, 10);\n        QueryBuilder[] filters = new QueryBuilder[numFilters];\n        for (int i = 0; i < filters.length; i++) {\n            filters[i] = QueryBuilders.termQuery(\"field\", randomAlphaOfLength(5));\n        }\n        FiltersAggregationBuilder builder = new FiltersAggregationBuilder(\"test\", filters);\n        builder.otherBucketKey(\"other\");\n        InternalFilters response = search(indexSearcher, new MatchAllDocsQuery(), builder, fieldType);\n        assertEquals(response.getBuckets().size(), numFilters);\n        for (InternalFilters.InternalBucket filter : response.getBuckets()) {\n            assertEquals(filter.getDocCount(), 0);\n        }\n        assertFalse(AggregationInspectionHelper.hasValue(response));\n        indexReader.close();\n        directory.close();\n    }\n","date":"2019-01-23 01:38:55","endLine":75,"groupId":"22422","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testEmpty","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/ff/5cb84482db013d570745ea5ba5fb706a459f8e.src","preCode":"    public void testEmpty() throws Exception {\n        Directory directory = newDirectory();\n        RandomIndexWriter indexWriter = new RandomIndexWriter(random(), directory);\n        indexWriter.close();\n        IndexReader indexReader = DirectoryReader.open(directory);\n        IndexSearcher indexSearcher = newSearcher(indexReader, true, true);\n        int numFilters = randomIntBetween(1, 10);\n        QueryBuilder[] filters = new QueryBuilder[numFilters];\n        for (int i = 0; i < filters.length; i++) {\n            filters[i] = QueryBuilders.termQuery(\"field\", randomAlphaOfLength(5));\n        }\n        FiltersAggregationBuilder builder = new FiltersAggregationBuilder(\"test\", filters);\n        builder.otherBucketKey(\"other\");\n        InternalFilters response = search(indexSearcher, new MatchAllDocsQuery(), builder, fieldType);\n        assertEquals(response.getBuckets().size(), numFilters);\n        for (InternalFilters.InternalBucket filter : response.getBuckets()) {\n            assertEquals(filter.getDocCount(), 0);\n        }\n        indexReader.close();\n        directory.close();\n    }\n","realPath":"server/src/test/java/org/elasticsearch/search/aggregations/bucket/filter/FiltersAggregatorTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":54,"status":"M"},{"authorDate":"2019-01-23 01:38:55","commitOrder":2,"curCode":"    public void testEmpty() throws Exception {\n        Directory directory = newDirectory();\n        RandomIndexWriter indexWriter = new RandomIndexWriter(random(), directory);\n        indexWriter.close();\n        IndexReader indexReader = DirectoryReader.open(directory);\n        IndexSearcher indexSearcher = newSearcher(indexReader, true, true);\n        QueryBuilder filter = QueryBuilders.termQuery(\"field\", randomAlphaOfLength(5));\n        FilterAggregationBuilder builder = new FilterAggregationBuilder(\"test\", filter);\n        InternalFilter response = search(indexSearcher, new MatchAllDocsQuery(), builder,\n                fieldType);\n        assertEquals(response.getDocCount(), 0);\n        assertFalse(AggregationInspectionHelper.hasValue(response));\n        indexReader.close();\n        directory.close();\n    }\n","date":"2019-01-23 01:38:55","endLine":64,"groupId":"10722","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testEmpty","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/f5/b5d187e41877f71c15e4dbefaaa3d8fba7fdfa.src","preCode":"    public void testEmpty() throws Exception {\n        Directory directory = newDirectory();\n        RandomIndexWriter indexWriter = new RandomIndexWriter(random(), directory);\n        indexWriter.close();\n        IndexReader indexReader = DirectoryReader.open(directory);\n        IndexSearcher indexSearcher = newSearcher(indexReader, true, true);\n        QueryBuilder filter = QueryBuilders.termQuery(\"field\", randomAlphaOfLength(5));\n        FilterAggregationBuilder builder = new FilterAggregationBuilder(\"test\", filter);\n        InternalFilter response = search(indexSearcher, new MatchAllDocsQuery(), builder,\n                fieldType);\n        assertEquals(response.getDocCount(), 0);\n        indexReader.close();\n        directory.close();\n    }\n","realPath":"server/src/test/java/org/elasticsearch/search/aggregations/bucket/filter/FilterAggregatorTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":50,"status":"M"}],"commitId":"2ba9e361aba7df6e9c0b5fa8fae3d219d50ddf09","commitMessage":"@@@Add helper classes to determine if aggs have a value (#36020)\n\nThis adds a set of helper classes to determine if an agg \"has a value\". \nThis is needed because InternalAggs represent \"empty\" in different \nmanners according to convention. Some use `NaN`.  `+/- Inf`.  `0.0`.  etc.\n\nA user can pass the Internal agg type to one of these helper methods\nand it will report if the agg contains a value or not.  which allows the\nuser to differentiate \"empty\" from a real `NaN`.\n\nThese helpers are best-effort in some cases.  For example.  several\npipeline aggs share a single return class but use different conventions\nto mark \"empty\".  so the helper uses the loosest definition that applies\nto all the aggs that use the class.\n\nSums in particular are unreliable.  The InternalSum simply returns 0.0\nif the agg is empty (which is correct.  no values == sum of zero).  But this\nalso means the helper cannot differentiate from \"empty\" and `+1 + -1`.","date":"2019-01-23 01:38:55","modifiedFileCount":"45","status":"M","submitter":"Zachary Tong"},{"authorTime":"2020-08-07 05:14:20","codes":[{"authorDate":"2020-08-07 05:14:20","commitOrder":3,"curCode":"    public void testEmpty() throws Exception {\n        Directory directory = newDirectory();\n        RandomIndexWriter indexWriter = new RandomIndexWriter(random(), directory);\n        indexWriter.close();\n        IndexReader indexReader = DirectoryReader.open(directory);\n        IndexSearcher indexSearcher = newSearcher(indexReader, true, true);\n        int numFilters = randomIntBetween(1, 10);\n        QueryBuilder[] filters = new QueryBuilder[numFilters];\n        for (int i = 0; i < filters.length; i++) {\n            filters[i] = QueryBuilders.termQuery(\"field\", randomAlphaOfLength(5));\n        }\n        FiltersAggregationBuilder builder = new FiltersAggregationBuilder(\"test\", filters);\n        builder.otherBucketKey(\"other\");\n        InternalFilters response = searchAndReduce(indexSearcher, new MatchAllDocsQuery(), builder, fieldType);\n        assertEquals(response.getBuckets().size(), numFilters);\n        for (InternalFilters.InternalBucket filter : response.getBuckets()) {\n            assertEquals(filter.getDocCount(), 0);\n        }\n        assertFalse(AggregationInspectionHelper.hasValue(response));\n        indexReader.close();\n        directory.close();\n    }\n","date":"2020-08-07 05:14:20","endLine":71,"groupId":"71261","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testEmpty","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/61/7eec9799a4d2ffa60c0bebcd1b6125a38466a0.src","preCode":"    public void testEmpty() throws Exception {\n        Directory directory = newDirectory();\n        RandomIndexWriter indexWriter = new RandomIndexWriter(random(), directory);\n        indexWriter.close();\n        IndexReader indexReader = DirectoryReader.open(directory);\n        IndexSearcher indexSearcher = newSearcher(indexReader, true, true);\n        int numFilters = randomIntBetween(1, 10);\n        QueryBuilder[] filters = new QueryBuilder[numFilters];\n        for (int i = 0; i < filters.length; i++) {\n            filters[i] = QueryBuilders.termQuery(\"field\", randomAlphaOfLength(5));\n        }\n        FiltersAggregationBuilder builder = new FiltersAggregationBuilder(\"test\", filters);\n        builder.otherBucketKey(\"other\");\n        InternalFilters response = search(indexSearcher, new MatchAllDocsQuery(), builder, fieldType);\n        assertEquals(response.getBuckets().size(), numFilters);\n        for (InternalFilters.InternalBucket filter : response.getBuckets()) {\n            assertEquals(filter.getDocCount(), 0);\n        }\n        assertFalse(AggregationInspectionHelper.hasValue(response));\n        indexReader.close();\n        directory.close();\n    }\n","realPath":"server/src/test/java/org/elasticsearch/search/aggregations/bucket/filter/FiltersAggregatorTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":50,"status":"M"},{"authorDate":"2020-08-07 05:14:20","commitOrder":3,"curCode":"    public void testEmpty() throws Exception {\n        Directory directory = newDirectory();\n        RandomIndexWriter indexWriter = new RandomIndexWriter(random(), directory);\n        indexWriter.close();\n        IndexReader indexReader = DirectoryReader.open(directory);\n        IndexSearcher indexSearcher = newSearcher(indexReader, true, true);\n        QueryBuilder filter = QueryBuilders.termQuery(\"field\", randomAlphaOfLength(5));\n        FilterAggregationBuilder builder = new FilterAggregationBuilder(\"test\", filter);\n        InternalFilter response = searchAndReduce(indexSearcher, new MatchAllDocsQuery(), builder,\n                fieldType);\n        assertEquals(response.getDocCount(), 0);\n        assertFalse(AggregationInspectionHelper.hasValue(response));\n        indexReader.close();\n        directory.close();\n    }\n","date":"2020-08-07 05:14:20","endLine":71,"groupId":"23069","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testEmpty","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/e1/b1e951df470fa3f821f59553db20b2293baaa0.src","preCode":"    public void testEmpty() throws Exception {\n        Directory directory = newDirectory();\n        RandomIndexWriter indexWriter = new RandomIndexWriter(random(), directory);\n        indexWriter.close();\n        IndexReader indexReader = DirectoryReader.open(directory);\n        IndexSearcher indexSearcher = newSearcher(indexReader, true, true);\n        QueryBuilder filter = QueryBuilders.termQuery(\"field\", randomAlphaOfLength(5));\n        FilterAggregationBuilder builder = new FilterAggregationBuilder(\"test\", filter);\n        InternalFilter response = search(indexSearcher, new MatchAllDocsQuery(), builder,\n                fieldType);\n        assertEquals(response.getDocCount(), 0);\n        assertFalse(AggregationInspectionHelper.hasValue(response));\n        indexReader.close();\n        directory.close();\n    }\n","realPath":"server/src/test/java/org/elasticsearch/search/aggregations/bucket/filter/FilterAggregatorTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":57,"status":"M"}],"commitId":"5e3ea6eb11c68bdcc9adda51715a6e1fea9186d6","commitMessage":"@@@Merge branch 'master' into feature/runtime_fields\n","date":"2020-08-07 05:14:20","modifiedFileCount":"73","status":"M","submitter":"Nik Everett"},{"authorTime":"2020-08-07 05:14:20","codes":[{"authorDate":"2021-05-26 14:46:59","commitOrder":4,"curCode":"    public void testEmpty() throws Exception {\n        Directory directory = newDirectory();\n        RandomIndexWriter indexWriter = new RandomIndexWriter(random(), directory);\n        indexWriter.close();\n        IndexReader indexReader = DirectoryReader.open(directory);\n        IndexSearcher indexSearcher = newSearcher(indexReader, true, true);\n        int numFilters = randomIntBetween(1, 10);\n        QueryBuilder[] filters = new QueryBuilder[numFilters];\n        for (int i = 0; i < filters.length; i++) {\n            filters[i] = QueryBuilders.termQuery(\"field\", randomAlphaOfLength(5));\n        }\n        FiltersAggregationBuilder builder = new FiltersAggregationBuilder(\"test\", filters);\n        builder.otherBucketKey(\"other\");\n        InternalFilters response = searchAndReduce(\n            indexSearcher,\n            new MatchAllDocsQuery(),\n            builder,\n            new KeywordFieldMapper.KeywordFieldType(\"field\")\n        );\n        assertEquals(response.getBuckets().size(), numFilters);\n        for (InternalFilters.InternalBucket filter : response.getBuckets()) {\n            assertEquals(filter.getDocCount(), 0);\n        }\n        assertFalse(AggregationInspectionHelper.hasValue(response));\n        indexReader.close();\n        directory.close();\n    }\n","date":"2021-05-26 14:46:59","endLine":118,"groupId":"105205","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"testEmpty","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/57/4cd25c3d7d4b70574ba51efee1f15919d8082a.src","preCode":"    public void testEmpty() throws Exception {\n        Directory directory = newDirectory();\n        RandomIndexWriter indexWriter = new RandomIndexWriter(random(), directory);\n        indexWriter.close();\n        IndexReader indexReader = DirectoryReader.open(directory);\n        IndexSearcher indexSearcher = newSearcher(indexReader, true, true);\n        int numFilters = randomIntBetween(1, 10);\n        QueryBuilder[] filters = new QueryBuilder[numFilters];\n        for (int i = 0; i < filters.length; i++) {\n            filters[i] = QueryBuilders.termQuery(\"field\", randomAlphaOfLength(5));\n        }\n        FiltersAggregationBuilder builder = new FiltersAggregationBuilder(\"test\", filters);\n        builder.otherBucketKey(\"other\");\n        InternalFilters response = searchAndReduce(indexSearcher, new MatchAllDocsQuery(), builder, fieldType);\n        assertEquals(response.getBuckets().size(), numFilters);\n        for (InternalFilters.InternalBucket filter : response.getBuckets()) {\n            assertEquals(filter.getDocCount(), 0);\n        }\n        assertFalse(AggregationInspectionHelper.hasValue(response));\n        indexReader.close();\n        directory.close();\n    }\n","realPath":"server/src/test/java/org/elasticsearch/search/aggregations/bucket/filter/FiltersAggregatorTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":92,"status":"M"},{"authorDate":"2020-08-07 05:14:20","commitOrder":4,"curCode":"    public void testEmpty() throws Exception {\n        Directory directory = newDirectory();\n        RandomIndexWriter indexWriter = new RandomIndexWriter(random(), directory);\n        indexWriter.close();\n        IndexReader indexReader = DirectoryReader.open(directory);\n        IndexSearcher indexSearcher = newSearcher(indexReader, true, true);\n        QueryBuilder filter = QueryBuilders.termQuery(\"field\", randomAlphaOfLength(5));\n        FilterAggregationBuilder builder = new FilterAggregationBuilder(\"test\", filter);\n        InternalFilter response = searchAndReduce(indexSearcher, new MatchAllDocsQuery(), builder,\n                fieldType);\n        assertEquals(response.getDocCount(), 0);\n        assertFalse(AggregationInspectionHelper.hasValue(response));\n        indexReader.close();\n        directory.close();\n    }\n","date":"2020-08-07 05:14:20","endLine":71,"groupId":"105205","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"testEmpty","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/e1/b1e951df470fa3f821f59553db20b2293baaa0.src","preCode":"    public void testEmpty() throws Exception {\n        Directory directory = newDirectory();\n        RandomIndexWriter indexWriter = new RandomIndexWriter(random(), directory);\n        indexWriter.close();\n        IndexReader indexReader = DirectoryReader.open(directory);\n        IndexSearcher indexSearcher = newSearcher(indexReader, true, true);\n        QueryBuilder filter = QueryBuilders.termQuery(\"field\", randomAlphaOfLength(5));\n        FilterAggregationBuilder builder = new FilterAggregationBuilder(\"test\", filter);\n        InternalFilter response = searchAndReduce(indexSearcher, new MatchAllDocsQuery(), builder,\n                fieldType);\n        assertEquals(response.getDocCount(), 0);\n        assertFalse(AggregationInspectionHelper.hasValue(response));\n        indexReader.close();\n        directory.close();\n    }\n","realPath":"server/src/test/java/org/elasticsearch/search/aggregations/bucket/filter/FilterAggregatorTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":57,"status":"N"}],"commitId":"18e30d98bbd2c5825f40e8aa659217bbaab8eb00","commitMessage":"@@@Merge branch 'master' into feature/vector-tiles\n","date":"2021-05-26 14:46:59","modifiedFileCount":"317","status":"M","submitter":"iverase"}]
