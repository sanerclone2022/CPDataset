[{"authorTime":"2018-04-26 03:22:53","codes":[{"authorDate":"2018-04-26 03:22:53","commitOrder":1,"curCode":"    public void testIndexingWithSimpleContexts() throws Exception {\n        String mapping = Strings.toString(jsonBuilder().startObject().startObject(\"type1\")\n                .startObject(\"properties\").startObject(\"completion\")\n                .field(\"type\", \"completion\")\n                .startArray(\"contexts\")\n                .startObject()\n                .field(\"name\", \"ctx\")\n                .field(\"type\", \"category\")\n                .endObject()\n                .endArray()\n                .endObject().endObject()\n                .endObject().endObject());\n\n        DocumentMapper defaultMapper = createIndex(\"test\").mapperService().documentMapperParser().parse(\"type1\", new CompressedXContent(mapping));\n        FieldMapper fieldMapper = defaultMapper.mappers().getMapper(\"completion\");\n        MappedFieldType completionFieldType = fieldMapper.fieldType();\n        ParsedDocument parsedDocument = defaultMapper.parse(SourceToParse.source(\"test\", \"type1\", \"1\", BytesReference\n                .bytes(jsonBuilder()\n                        .startObject()\n                        .startArray(\"completion\")\n                        .startObject()\n                        .array(\"input\", \"suggestion5\", \"suggestion6\", \"suggestion7\")\n                        .startObject(\"contexts\")\n                        .field(\"ctx\", \"ctx1\")\n                        .endObject()\n                        .field(\"weight\", 5)\n                        .endObject()\n                        .endArray()\n                        .endObject()),\n                XContentType.JSON));\n        IndexableField[] fields = parsedDocument.rootDoc().getFields(completionFieldType.name());\n        assertContextSuggestFields(fields, 3);\n    }\n","date":"2018-04-26 03:22:53","endLine":135,"groupId":"63343","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testIndexingWithSimpleContexts","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/b9/da305e132f52514653b9f4c15f1c47ba2e0c69.src","preCode":"    public void testIndexingWithSimpleContexts() throws Exception {\n        String mapping = Strings.toString(jsonBuilder().startObject().startObject(\"type1\")\n                .startObject(\"properties\").startObject(\"completion\")\n                .field(\"type\", \"completion\")\n                .startArray(\"contexts\")\n                .startObject()\n                .field(\"name\", \"ctx\")\n                .field(\"type\", \"category\")\n                .endObject()\n                .endArray()\n                .endObject().endObject()\n                .endObject().endObject());\n\n        DocumentMapper defaultMapper = createIndex(\"test\").mapperService().documentMapperParser().parse(\"type1\", new CompressedXContent(mapping));\n        FieldMapper fieldMapper = defaultMapper.mappers().getMapper(\"completion\");\n        MappedFieldType completionFieldType = fieldMapper.fieldType();\n        ParsedDocument parsedDocument = defaultMapper.parse(SourceToParse.source(\"test\", \"type1\", \"1\", BytesReference\n                .bytes(jsonBuilder()\n                        .startObject()\n                        .startArray(\"completion\")\n                        .startObject()\n                        .array(\"input\", \"suggestion5\", \"suggestion6\", \"suggestion7\")\n                        .startObject(\"contexts\")\n                        .field(\"ctx\", \"ctx1\")\n                        .endObject()\n                        .field(\"weight\", 5)\n                        .endObject()\n                        .endArray()\n                        .endObject()),\n                XContentType.JSON));\n        IndexableField[] fields = parsedDocument.rootDoc().getFields(completionFieldType.name());\n        assertContextSuggestFields(fields, 3);\n    }\n","realPath":"server/src/test/java/org/elasticsearch/search/suggest/completion/CategoryContextMappingTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":103,"status":"B"},{"authorDate":"2018-04-26 03:22:53","commitOrder":1,"curCode":"    public void testIndexingWithSimpleBooleanContexts() throws Exception {\n        String mapping = Strings.toString(jsonBuilder().startObject().startObject(\"type1\")\n                .startObject(\"properties\").startObject(\"completion\")\n                .field(\"type\", \"completion\")\n                .startArray(\"contexts\")\n                .startObject()\n                .field(\"name\", \"ctx\")\n                .field(\"type\", \"category\")\n                .endObject()\n                .endArray()\n                .endObject().endObject()\n                .endObject().endObject());\n\n        DocumentMapper defaultMapper = createIndex(\"test\").mapperService().documentMapperParser().parse(\"type1\", new CompressedXContent(mapping));\n        FieldMapper fieldMapper = defaultMapper.mappers().getMapper(\"completion\");\n        MappedFieldType completionFieldType = fieldMapper.fieldType();\n        ParsedDocument parsedDocument = defaultMapper.parse(SourceToParse.source(\"test\", \"type1\", \"1\", BytesReference\n                .bytes(jsonBuilder()\n                        .startObject()\n                        .startArray(\"completion\")\n                        .startObject()\n                        .array(\"input\", \"suggestion5\", \"suggestion6\", \"suggestion7\")\n                        .startObject(\"contexts\")\n                        .field(\"ctx\", true)\n                        .endObject()\n                        .field(\"weight\", 5)\n                        .endObject()\n                        .endArray()\n                        .endObject()),\n            XContentType.JSON));\n        IndexableField[] fields = parsedDocument.rootDoc().getFields(completionFieldType.name());\n        assertContextSuggestFields(fields, 3);\n    }\n","date":"2018-04-26 03:22:53","endLine":203,"groupId":"63343","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testIndexingWithSimpleBooleanContexts","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/b9/da305e132f52514653b9f4c15f1c47ba2e0c69.src","preCode":"    public void testIndexingWithSimpleBooleanContexts() throws Exception {\n        String mapping = Strings.toString(jsonBuilder().startObject().startObject(\"type1\")\n                .startObject(\"properties\").startObject(\"completion\")\n                .field(\"type\", \"completion\")\n                .startArray(\"contexts\")\n                .startObject()\n                .field(\"name\", \"ctx\")\n                .field(\"type\", \"category\")\n                .endObject()\n                .endArray()\n                .endObject().endObject()\n                .endObject().endObject());\n\n        DocumentMapper defaultMapper = createIndex(\"test\").mapperService().documentMapperParser().parse(\"type1\", new CompressedXContent(mapping));\n        FieldMapper fieldMapper = defaultMapper.mappers().getMapper(\"completion\");\n        MappedFieldType completionFieldType = fieldMapper.fieldType();\n        ParsedDocument parsedDocument = defaultMapper.parse(SourceToParse.source(\"test\", \"type1\", \"1\", BytesReference\n                .bytes(jsonBuilder()\n                        .startObject()\n                        .startArray(\"completion\")\n                        .startObject()\n                        .array(\"input\", \"suggestion5\", \"suggestion6\", \"suggestion7\")\n                        .startObject(\"contexts\")\n                        .field(\"ctx\", true)\n                        .endObject()\n                        .field(\"weight\", 5)\n                        .endObject()\n                        .endArray()\n                        .endObject()),\n            XContentType.JSON));\n        IndexableField[] fields = parsedDocument.rootDoc().getFields(completionFieldType.name());\n        assertContextSuggestFields(fields, 3);\n    }\n","realPath":"server/src/test/java/org/elasticsearch/search/suggest/completion/CategoryContextMappingTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":171,"status":"B"}],"commitId":"d74fb9eb4559077e2d20b19a9ed62d9ff825027a","commitMessage":"@@@Opened x-pack ILM code\n","date":"2018-04-26 03:22:53","modifiedFileCount":"0","status":"B","submitter":"Tal Levy"},{"authorTime":"2018-07-19 02:10:12","codes":[{"authorDate":"2018-07-19 02:10:12","commitOrder":2,"curCode":"    public void testIndexingWithSimpleContexts() throws Exception {\n        String mapping = Strings.toString(jsonBuilder().startObject().startObject(\"type1\")\n                .startObject(\"properties\").startObject(\"completion\")\n                .field(\"type\", \"completion\")\n                .startArray(\"contexts\")\n                .startObject()\n                .field(\"name\", \"ctx\")\n                .field(\"type\", \"category\")\n                .endObject()\n                .endArray()\n                .endObject().endObject()\n                .endObject().endObject());\n\n        DocumentMapper defaultMapper = createIndex(\"test\").mapperService().documentMapperParser().parse(\"type1\", new CompressedXContent(mapping));\n        Mapper fieldMapper = defaultMapper.mappers().getMapper(\"completion\");\n        ParsedDocument parsedDocument = defaultMapper.parse(SourceToParse.source(\"test\", \"type1\", \"1\", BytesReference\n                .bytes(jsonBuilder()\n                        .startObject()\n                        .startArray(\"completion\")\n                        .startObject()\n                        .array(\"input\", \"suggestion5\", \"suggestion6\", \"suggestion7\")\n                        .startObject(\"contexts\")\n                        .field(\"ctx\", \"ctx1\")\n                        .endObject()\n                        .field(\"weight\", 5)\n                        .endObject()\n                        .endArray()\n                        .endObject()),\n                XContentType.JSON));\n        IndexableField[] fields = parsedDocument.rootDoc().getFields(fieldMapper.name());\n        assertContextSuggestFields(fields, 3);\n    }\n","date":"2018-07-19 02:10:12","endLine":133,"groupId":"3342","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testIndexingWithSimpleContexts","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/f9/b252f0e136b06b2f81f0c3d047060e5bb183be.src","preCode":"    public void testIndexingWithSimpleContexts() throws Exception {\n        String mapping = Strings.toString(jsonBuilder().startObject().startObject(\"type1\")\n                .startObject(\"properties\").startObject(\"completion\")\n                .field(\"type\", \"completion\")\n                .startArray(\"contexts\")\n                .startObject()\n                .field(\"name\", \"ctx\")\n                .field(\"type\", \"category\")\n                .endObject()\n                .endArray()\n                .endObject().endObject()\n                .endObject().endObject());\n\n        DocumentMapper defaultMapper = createIndex(\"test\").mapperService().documentMapperParser().parse(\"type1\", new CompressedXContent(mapping));\n        FieldMapper fieldMapper = defaultMapper.mappers().getMapper(\"completion\");\n        MappedFieldType completionFieldType = fieldMapper.fieldType();\n        ParsedDocument parsedDocument = defaultMapper.parse(SourceToParse.source(\"test\", \"type1\", \"1\", BytesReference\n                .bytes(jsonBuilder()\n                        .startObject()\n                        .startArray(\"completion\")\n                        .startObject()\n                        .array(\"input\", \"suggestion5\", \"suggestion6\", \"suggestion7\")\n                        .startObject(\"contexts\")\n                        .field(\"ctx\", \"ctx1\")\n                        .endObject()\n                        .field(\"weight\", 5)\n                        .endObject()\n                        .endArray()\n                        .endObject()),\n                XContentType.JSON));\n        IndexableField[] fields = parsedDocument.rootDoc().getFields(completionFieldType.name());\n        assertContextSuggestFields(fields, 3);\n    }\n","realPath":"server/src/test/java/org/elasticsearch/search/suggest/completion/CategoryContextMappingTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":102,"status":"M"},{"authorDate":"2018-07-19 02:10:12","commitOrder":2,"curCode":"    public void testIndexingWithSimpleBooleanContexts() throws Exception {\n        String mapping = Strings.toString(jsonBuilder().startObject().startObject(\"type1\")\n                .startObject(\"properties\").startObject(\"completion\")\n                .field(\"type\", \"completion\")\n                .startArray(\"contexts\")\n                .startObject()\n                .field(\"name\", \"ctx\")\n                .field(\"type\", \"category\")\n                .endObject()\n                .endArray()\n                .endObject().endObject()\n                .endObject().endObject());\n\n        DocumentMapper defaultMapper = createIndex(\"test\").mapperService().documentMapperParser().parse(\"type1\", new CompressedXContent(mapping));\n        Mapper fieldMapper = defaultMapper.mappers().getMapper(\"completion\");\n        ParsedDocument parsedDocument = defaultMapper.parse(SourceToParse.source(\"test\", \"type1\", \"1\", BytesReference\n                .bytes(jsonBuilder()\n                        .startObject()\n                        .startArray(\"completion\")\n                        .startObject()\n                        .array(\"input\", \"suggestion5\", \"suggestion6\", \"suggestion7\")\n                        .startObject(\"contexts\")\n                        .field(\"ctx\", true)\n                        .endObject()\n                        .field(\"weight\", 5)\n                        .endObject()\n                        .endArray()\n                        .endObject()),\n            XContentType.JSON));\n        IndexableField[] fields = parsedDocument.rootDoc().getFields(fieldMapper.name());\n        assertContextSuggestFields(fields, 3);\n    }\n","date":"2018-07-19 02:10:12","endLine":199,"groupId":"3342","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testIndexingWithSimpleBooleanContexts","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/f9/b252f0e136b06b2f81f0c3d047060e5bb183be.src","preCode":"    public void testIndexingWithSimpleBooleanContexts() throws Exception {\n        String mapping = Strings.toString(jsonBuilder().startObject().startObject(\"type1\")\n                .startObject(\"properties\").startObject(\"completion\")\n                .field(\"type\", \"completion\")\n                .startArray(\"contexts\")\n                .startObject()\n                .field(\"name\", \"ctx\")\n                .field(\"type\", \"category\")\n                .endObject()\n                .endArray()\n                .endObject().endObject()\n                .endObject().endObject());\n\n        DocumentMapper defaultMapper = createIndex(\"test\").mapperService().documentMapperParser().parse(\"type1\", new CompressedXContent(mapping));\n        FieldMapper fieldMapper = defaultMapper.mappers().getMapper(\"completion\");\n        MappedFieldType completionFieldType = fieldMapper.fieldType();\n        ParsedDocument parsedDocument = defaultMapper.parse(SourceToParse.source(\"test\", \"type1\", \"1\", BytesReference\n                .bytes(jsonBuilder()\n                        .startObject()\n                        .startArray(\"completion\")\n                        .startObject()\n                        .array(\"input\", \"suggestion5\", \"suggestion6\", \"suggestion7\")\n                        .startObject(\"contexts\")\n                        .field(\"ctx\", true)\n                        .endObject()\n                        .field(\"weight\", 5)\n                        .endObject()\n                        .endArray()\n                        .endObject()),\n            XContentType.JSON));\n        IndexableField[] fields = parsedDocument.rootDoc().getFields(completionFieldType.name());\n        assertContextSuggestFields(fields, 3);\n    }\n","realPath":"server/src/test/java/org/elasticsearch/search/suggest/completion/CategoryContextMappingTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":168,"status":"M"}],"commitId":"a019e723b5475f0ca77063dab45fbcccd1d6559a","commitMessage":"@@@Merge branch 'master' into index-lifecycle\n","date":"2018-07-19 02:10:12","modifiedFileCount":"121","status":"M","submitter":"Tal Levy"},{"authorTime":"2018-12-25 03:06:50","codes":[{"authorDate":"2018-12-25 03:06:50","commitOrder":3,"curCode":"    public void testIndexingWithSimpleContexts() throws Exception {\n        String mapping = Strings.toString(jsonBuilder().startObject().startObject(\"type1\")\n                .startObject(\"properties\").startObject(\"completion\")\n                .field(\"type\", \"completion\")\n                .startArray(\"contexts\")\n                .startObject()\n                .field(\"name\", \"ctx\")\n                .field(\"type\", \"category\")\n                .endObject()\n                .endArray()\n                .endObject().endObject()\n                .endObject().endObject());\n\n        DocumentMapper defaultMapper = createIndex(\"test\").mapperService().documentMapperParser()\n                .parse(\"type1\", new CompressedXContent(mapping));\n        Mapper fieldMapper = defaultMapper.mappers().getMapper(\"completion\");\n        ParsedDocument parsedDocument = defaultMapper.parse(new SourceToParse(\"test\", \"type1\", \"1\", BytesReference\n                .bytes(jsonBuilder()\n                        .startObject()\n                        .startArray(\"completion\")\n                        .startObject()\n                        .array(\"input\", \"suggestion5\", \"suggestion6\", \"suggestion7\")\n                        .startObject(\"contexts\")\n                        .field(\"ctx\", \"ctx1\")\n                        .endObject()\n                        .field(\"weight\", 5)\n                        .endObject()\n                        .endArray()\n                        .endObject()),\n                XContentType.JSON));\n        IndexableField[] fields = parsedDocument.rootDoc().getFields(fieldMapper.name());\n        assertContextSuggestFields(fields, 3);\n    }\n","date":"2018-12-25 03:06:50","endLine":135,"groupId":"17276","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testIndexingWithSimpleContexts","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/81/2735092ba448eb9d35cfc0961c7dcdc2ecd1bc.src","preCode":"    public void testIndexingWithSimpleContexts() throws Exception {\n        String mapping = Strings.toString(jsonBuilder().startObject().startObject(\"type1\")\n                .startObject(\"properties\").startObject(\"completion\")\n                .field(\"type\", \"completion\")\n                .startArray(\"contexts\")\n                .startObject()\n                .field(\"name\", \"ctx\")\n                .field(\"type\", \"category\")\n                .endObject()\n                .endArray()\n                .endObject().endObject()\n                .endObject().endObject());\n\n        DocumentMapper defaultMapper = createIndex(\"test\").mapperService().documentMapperParser()\n                .parse(\"type1\", new CompressedXContent(mapping));\n        Mapper fieldMapper = defaultMapper.mappers().getMapper(\"completion\");\n        ParsedDocument parsedDocument = defaultMapper.parse(SourceToParse.source(\"test\", \"type1\", \"1\", BytesReference\n                .bytes(jsonBuilder()\n                        .startObject()\n                        .startArray(\"completion\")\n                        .startObject()\n                        .array(\"input\", \"suggestion5\", \"suggestion6\", \"suggestion7\")\n                        .startObject(\"contexts\")\n                        .field(\"ctx\", \"ctx1\")\n                        .endObject()\n                        .field(\"weight\", 5)\n                        .endObject()\n                        .endArray()\n                        .endObject()),\n                XContentType.JSON));\n        IndexableField[] fields = parsedDocument.rootDoc().getFields(fieldMapper.name());\n        assertContextSuggestFields(fields, 3);\n    }\n","realPath":"server/src/test/java/org/elasticsearch/search/suggest/completion/CategoryContextMappingTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":103,"status":"M"},{"authorDate":"2018-12-25 03:06:50","commitOrder":3,"curCode":"    public void testIndexingWithSimpleBooleanContexts() throws Exception {\n        String mapping = Strings.toString(jsonBuilder().startObject().startObject(\"type1\")\n                .startObject(\"properties\").startObject(\"completion\")\n                .field(\"type\", \"completion\")\n                .startArray(\"contexts\")\n                .startObject()\n                .field(\"name\", \"ctx\")\n                .field(\"type\", \"category\")\n                .endObject()\n                .endArray()\n                .endObject().endObject()\n                .endObject().endObject());\n\n        DocumentMapper defaultMapper = createIndex(\"test\").mapperService().documentMapperParser()\n                .parse(\"type1\", new CompressedXContent(mapping));\n        Mapper fieldMapper = defaultMapper.mappers().getMapper(\"completion\");\n        ParsedDocument parsedDocument = defaultMapper.parse(new SourceToParse(\"test\", \"type1\", \"1\", BytesReference\n                .bytes(jsonBuilder()\n                        .startObject()\n                        .startArray(\"completion\")\n                        .startObject()\n                        .array(\"input\", \"suggestion5\", \"suggestion6\", \"suggestion7\")\n                        .startObject(\"contexts\")\n                        .field(\"ctx\", true)\n                        .endObject()\n                        .field(\"weight\", 5)\n                        .endObject()\n                        .endArray()\n                        .endObject()),\n            XContentType.JSON));\n        IndexableField[] fields = parsedDocument.rootDoc().getFields(fieldMapper.name());\n        assertContextSuggestFields(fields, 3);\n    }\n","date":"2018-12-25 03:06:50","endLine":203,"groupId":"17276","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testIndexingWithSimpleBooleanContexts","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/81/2735092ba448eb9d35cfc0961c7dcdc2ecd1bc.src","preCode":"    public void testIndexingWithSimpleBooleanContexts() throws Exception {\n        String mapping = Strings.toString(jsonBuilder().startObject().startObject(\"type1\")\n                .startObject(\"properties\").startObject(\"completion\")\n                .field(\"type\", \"completion\")\n                .startArray(\"contexts\")\n                .startObject()\n                .field(\"name\", \"ctx\")\n                .field(\"type\", \"category\")\n                .endObject()\n                .endArray()\n                .endObject().endObject()\n                .endObject().endObject());\n\n        DocumentMapper defaultMapper = createIndex(\"test\").mapperService().documentMapperParser()\n                .parse(\"type1\", new CompressedXContent(mapping));\n        Mapper fieldMapper = defaultMapper.mappers().getMapper(\"completion\");\n        ParsedDocument parsedDocument = defaultMapper.parse(SourceToParse.source(\"test\", \"type1\", \"1\", BytesReference\n                .bytes(jsonBuilder()\n                        .startObject()\n                        .startArray(\"completion\")\n                        .startObject()\n                        .array(\"input\", \"suggestion5\", \"suggestion6\", \"suggestion7\")\n                        .startObject(\"contexts\")\n                        .field(\"ctx\", true)\n                        .endObject()\n                        .field(\"weight\", 5)\n                        .endObject()\n                        .endArray()\n                        .endObject()),\n            XContentType.JSON));\n        IndexableField[] fields = parsedDocument.rootDoc().getFields(fieldMapper.name());\n        assertContextSuggestFields(fields, 3);\n    }\n","realPath":"server/src/test/java/org/elasticsearch/search/suggest/completion/CategoryContextMappingTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":171,"status":"M"}],"commitId":"7580d9d925d864b25466d693637b3bd3092d44cf","commitMessage":"@@@Make SourceToParse immutable (#36971)\n\nToday the routing of a SourceToParse is assigned in a separate step\nafter the object is created. We can easily forget to set the routing.\nWith this commit.  the routing must be provided in the constructor of\nSourceToParse.\n\nRelates #36921","date":"2018-12-25 03:06:50","modifiedFileCount":"66","status":"M","submitter":"Nhat Nguyen"},{"authorTime":"2019-10-15 16:05:29","codes":[{"authorDate":"2019-10-15 16:05:29","commitOrder":4,"curCode":"    public void testIndexingWithSimpleContexts() throws Exception {\n        String mapping = Strings.toString(jsonBuilder().startObject().startObject(\"type1\")\n                .startObject(\"properties\").startObject(\"completion\")\n                .field(\"type\", \"completion\")\n                .startArray(\"contexts\")\n                .startObject()\n                .field(\"name\", \"ctx\")\n                .field(\"type\", \"category\")\n                .endObject()\n                .endArray()\n                .endObject().endObject()\n                .endObject().endObject());\n\n        DocumentMapper defaultMapper = createIndex(\"test\").mapperService().documentMapperParser()\n                .parse(\"type1\", new CompressedXContent(mapping));\n        Mapper fieldMapper = defaultMapper.mappers().getMapper(\"completion\");\n        ParsedDocument parsedDocument = defaultMapper.parse(new SourceToParse(\"test\", \"1\", BytesReference\n                .bytes(jsonBuilder()\n                        .startObject()\n                        .startArray(\"completion\")\n                        .startObject()\n                        .array(\"input\", \"suggestion5\", \"suggestion6\", \"suggestion7\")\n                        .startObject(\"contexts\")\n                        .field(\"ctx\", \"ctx1\")\n                        .endObject()\n                        .field(\"weight\", 5)\n                        .endObject()\n                        .endArray()\n                        .endObject()),\n                XContentType.JSON));\n        IndexableField[] fields = parsedDocument.rootDoc().getFields(fieldMapper.name());\n        assertContextSuggestFields(fields, 3);\n    }\n","date":"2019-10-15 16:05:29","endLine":134,"groupId":"56675","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"testIndexingWithSimpleContexts","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/62/8f58e92548fa705678cd79eefc54d177b76afc.src","preCode":"    public void testIndexingWithSimpleContexts() throws Exception {\n        String mapping = Strings.toString(jsonBuilder().startObject().startObject(\"type1\")\n                .startObject(\"properties\").startObject(\"completion\")\n                .field(\"type\", \"completion\")\n                .startArray(\"contexts\")\n                .startObject()\n                .field(\"name\", \"ctx\")\n                .field(\"type\", \"category\")\n                .endObject()\n                .endArray()\n                .endObject().endObject()\n                .endObject().endObject());\n\n        DocumentMapper defaultMapper = createIndex(\"test\").mapperService().documentMapperParser()\n                .parse(\"type1\", new CompressedXContent(mapping));\n        Mapper fieldMapper = defaultMapper.mappers().getMapper(\"completion\");\n        ParsedDocument parsedDocument = defaultMapper.parse(new SourceToParse(\"test\", \"type1\", \"1\", BytesReference\n                .bytes(jsonBuilder()\n                        .startObject()\n                        .startArray(\"completion\")\n                        .startObject()\n                        .array(\"input\", \"suggestion5\", \"suggestion6\", \"suggestion7\")\n                        .startObject(\"contexts\")\n                        .field(\"ctx\", \"ctx1\")\n                        .endObject()\n                        .field(\"weight\", 5)\n                        .endObject()\n                        .endArray()\n                        .endObject()),\n                XContentType.JSON));\n        IndexableField[] fields = parsedDocument.rootDoc().getFields(fieldMapper.name());\n        assertContextSuggestFields(fields, 3);\n    }\n","realPath":"server/src/test/java/org/elasticsearch/search/suggest/completion/CategoryContextMappingTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":102,"status":"M"},{"authorDate":"2019-10-15 16:05:29","commitOrder":4,"curCode":"    public void testIndexingWithSimpleBooleanContexts() throws Exception {\n        String mapping = Strings.toString(jsonBuilder().startObject().startObject(\"type1\")\n                .startObject(\"properties\").startObject(\"completion\")\n                .field(\"type\", \"completion\")\n                .startArray(\"contexts\")\n                .startObject()\n                .field(\"name\", \"ctx\")\n                .field(\"type\", \"category\")\n                .endObject()\n                .endArray()\n                .endObject().endObject()\n                .endObject().endObject());\n\n        DocumentMapper defaultMapper = createIndex(\"test\").mapperService().documentMapperParser()\n                .parse(\"type1\", new CompressedXContent(mapping));\n        Mapper fieldMapper = defaultMapper.mappers().getMapper(\"completion\");\n        ParsedDocument parsedDocument = defaultMapper.parse(new SourceToParse(\"test\", \"1\", BytesReference\n                .bytes(jsonBuilder()\n                        .startObject()\n                        .startArray(\"completion\")\n                        .startObject()\n                        .array(\"input\", \"suggestion5\", \"suggestion6\", \"suggestion7\")\n                        .startObject(\"contexts\")\n                        .field(\"ctx\", true)\n                        .endObject()\n                        .field(\"weight\", 5)\n                        .endObject()\n                        .endArray()\n                        .endObject()),\n            XContentType.JSON));\n        IndexableField[] fields = parsedDocument.rootDoc().getFields(fieldMapper.name());\n        assertContextSuggestFields(fields, 3);\n    }\n","date":"2019-10-15 16:05:29","endLine":202,"groupId":"56675","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"testIndexingWithSimpleBooleanContexts","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/62/8f58e92548fa705678cd79eefc54d177b76afc.src","preCode":"    public void testIndexingWithSimpleBooleanContexts() throws Exception {\n        String mapping = Strings.toString(jsonBuilder().startObject().startObject(\"type1\")\n                .startObject(\"properties\").startObject(\"completion\")\n                .field(\"type\", \"completion\")\n                .startArray(\"contexts\")\n                .startObject()\n                .field(\"name\", \"ctx\")\n                .field(\"type\", \"category\")\n                .endObject()\n                .endArray()\n                .endObject().endObject()\n                .endObject().endObject());\n\n        DocumentMapper defaultMapper = createIndex(\"test\").mapperService().documentMapperParser()\n                .parse(\"type1\", new CompressedXContent(mapping));\n        Mapper fieldMapper = defaultMapper.mappers().getMapper(\"completion\");\n        ParsedDocument parsedDocument = defaultMapper.parse(new SourceToParse(\"test\", \"type1\", \"1\", BytesReference\n                .bytes(jsonBuilder()\n                        .startObject()\n                        .startArray(\"completion\")\n                        .startObject()\n                        .array(\"input\", \"suggestion5\", \"suggestion6\", \"suggestion7\")\n                        .startObject(\"contexts\")\n                        .field(\"ctx\", true)\n                        .endObject()\n                        .field(\"weight\", 5)\n                        .endObject()\n                        .endArray()\n                        .endObject()),\n            XContentType.JSON));\n        IndexableField[] fields = parsedDocument.rootDoc().getFields(fieldMapper.name());\n        assertContextSuggestFields(fields, 3);\n    }\n","realPath":"server/src/test/java/org/elasticsearch/search/suggest/completion/CategoryContextMappingTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":170,"status":"M"}],"commitId":"6531369f11d159896957b75a7eae0b7da214d01a","commitMessage":"@@@Don't persist type information to translog (#47229)\n\nWe no longer need to store type information in the translog.  given that an index\ncan only have a single type.\n\nRelates to #41059","date":"2019-10-15 16:05:29","modifiedFileCount":"100","status":"M","submitter":"Alan Woodward"},{"authorTime":"2020-10-21 02:11:29","codes":[{"authorDate":"2020-10-21 02:11:29","commitOrder":5,"curCode":"    public void testIndexingWithSimpleContexts() throws Exception {\n        String mapping = Strings.toString(jsonBuilder().startObject().startObject(\"type1\")\n                .startObject(\"properties\").startObject(\"completion\")\n                .field(\"type\", \"completion\")\n                .startArray(\"contexts\")\n                .startObject()\n                .field(\"name\", \"ctx\")\n                .field(\"type\", \"category\")\n                .endObject()\n                .endArray()\n                .endObject().endObject()\n                .endObject().endObject());\n\n        DocumentMapper defaultMapper = createIndex(\"test\").mapperService().parse(\"type1\", new CompressedXContent(mapping));\n        Mapper fieldMapper = defaultMapper.mappers().getMapper(\"completion\");\n        ParsedDocument parsedDocument = defaultMapper.parse(new SourceToParse(\"test\", \"1\", BytesReference\n                .bytes(jsonBuilder()\n                        .startObject()\n                        .startArray(\"completion\")\n                        .startObject()\n                        .array(\"input\", \"suggestion5\", \"suggestion6\", \"suggestion7\")\n                        .startObject(\"contexts\")\n                        .field(\"ctx\", \"ctx1\")\n                        .endObject()\n                        .field(\"weight\", 5)\n                        .endObject()\n                        .endArray()\n                        .endObject()),\n                XContentType.JSON));\n        IndexableField[] fields = parsedDocument.rootDoc().getFields(fieldMapper.name());\n        assertContextSuggestFields(fields, 3);\n    }\n","date":"2020-10-21 02:11:29","endLine":133,"groupId":"72004","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"testIndexingWithSimpleContexts","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/cc/0e68582ea95d460bfbf9b3bf117a126eb4c8f3.src","preCode":"    public void testIndexingWithSimpleContexts() throws Exception {\n        String mapping = Strings.toString(jsonBuilder().startObject().startObject(\"type1\")\n                .startObject(\"properties\").startObject(\"completion\")\n                .field(\"type\", \"completion\")\n                .startArray(\"contexts\")\n                .startObject()\n                .field(\"name\", \"ctx\")\n                .field(\"type\", \"category\")\n                .endObject()\n                .endArray()\n                .endObject().endObject()\n                .endObject().endObject());\n\n        DocumentMapper defaultMapper = createIndex(\"test\").mapperService().documentMapperParser()\n                .parse(\"type1\", new CompressedXContent(mapping));\n        Mapper fieldMapper = defaultMapper.mappers().getMapper(\"completion\");\n        ParsedDocument parsedDocument = defaultMapper.parse(new SourceToParse(\"test\", \"1\", BytesReference\n                .bytes(jsonBuilder()\n                        .startObject()\n                        .startArray(\"completion\")\n                        .startObject()\n                        .array(\"input\", \"suggestion5\", \"suggestion6\", \"suggestion7\")\n                        .startObject(\"contexts\")\n                        .field(\"ctx\", \"ctx1\")\n                        .endObject()\n                        .field(\"weight\", 5)\n                        .endObject()\n                        .endArray()\n                        .endObject()),\n                XContentType.JSON));\n        IndexableField[] fields = parsedDocument.rootDoc().getFields(fieldMapper.name());\n        assertContextSuggestFields(fields, 3);\n    }\n","realPath":"server/src/test/java/org/elasticsearch/search/suggest/completion/CategoryContextMappingTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":102,"status":"M"},{"authorDate":"2020-10-21 02:11:29","commitOrder":5,"curCode":"    public void testIndexingWithSimpleBooleanContexts() throws Exception {\n        String mapping = Strings.toString(jsonBuilder().startObject().startObject(\"type1\")\n                .startObject(\"properties\").startObject(\"completion\")\n                .field(\"type\", \"completion\")\n                .startArray(\"contexts\")\n                .startObject()\n                .field(\"name\", \"ctx\")\n                .field(\"type\", \"category\")\n                .endObject()\n                .endArray()\n                .endObject().endObject()\n                .endObject().endObject());\n\n        DocumentMapper defaultMapper = createIndex(\"test\").mapperService().parse(\"type1\", new CompressedXContent(mapping));\n        Mapper fieldMapper = defaultMapper.mappers().getMapper(\"completion\");\n        ParsedDocument parsedDocument = defaultMapper.parse(new SourceToParse(\"test\", \"1\", BytesReference\n                .bytes(jsonBuilder()\n                        .startObject()\n                        .startArray(\"completion\")\n                        .startObject()\n                        .array(\"input\", \"suggestion5\", \"suggestion6\", \"suggestion7\")\n                        .startObject(\"contexts\")\n                        .field(\"ctx\", true)\n                        .endObject()\n                        .field(\"weight\", 5)\n                        .endObject()\n                        .endArray()\n                        .endObject()),\n            XContentType.JSON));\n        IndexableField[] fields = parsedDocument.rootDoc().getFields(fieldMapper.name());\n        assertContextSuggestFields(fields, 3);\n    }\n","date":"2020-10-21 02:11:29","endLine":199,"groupId":"72004","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"testIndexingWithSimpleBooleanContexts","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/cc/0e68582ea95d460bfbf9b3bf117a126eb4c8f3.src","preCode":"    public void testIndexingWithSimpleBooleanContexts() throws Exception {\n        String mapping = Strings.toString(jsonBuilder().startObject().startObject(\"type1\")\n                .startObject(\"properties\").startObject(\"completion\")\n                .field(\"type\", \"completion\")\n                .startArray(\"contexts\")\n                .startObject()\n                .field(\"name\", \"ctx\")\n                .field(\"type\", \"category\")\n                .endObject()\n                .endArray()\n                .endObject().endObject()\n                .endObject().endObject());\n\n        DocumentMapper defaultMapper = createIndex(\"test\").mapperService().documentMapperParser()\n                .parse(\"type1\", new CompressedXContent(mapping));\n        Mapper fieldMapper = defaultMapper.mappers().getMapper(\"completion\");\n        ParsedDocument parsedDocument = defaultMapper.parse(new SourceToParse(\"test\", \"1\", BytesReference\n                .bytes(jsonBuilder()\n                        .startObject()\n                        .startArray(\"completion\")\n                        .startObject()\n                        .array(\"input\", \"suggestion5\", \"suggestion6\", \"suggestion7\")\n                        .startObject(\"contexts\")\n                        .field(\"ctx\", true)\n                        .endObject()\n                        .field(\"weight\", 5)\n                        .endObject()\n                        .endArray()\n                        .endObject()),\n            XContentType.JSON));\n        IndexableField[] fields = parsedDocument.rootDoc().getFields(fieldMapper.name());\n        assertContextSuggestFields(fields, 3);\n    }\n","realPath":"server/src/test/java/org/elasticsearch/search/suggest/completion/CategoryContextMappingTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":168,"status":"M"}],"commitId":"b96f26eba2049ffafb3197fbbb1942b3cdf8733a","commitMessage":"@@@Remove documentMapperParser method from MapperService (#63938)\n\nMapperService allows to retrieve its internal DocumentMapperParser instance. Such method is only used in tests.  and always to parse mappings which is already exposed by MapperService through a specific parse method.\n\nThis commit removes the getter for DocumentMapperParser from MapperService in favour of calling MapperService#parse","date":"2020-10-21 02:11:29","modifiedFileCount":"27","status":"M","submitter":"Luca Cavanna"},{"authorTime":"2021-04-27 19:31:29","codes":[{"authorDate":"2021-04-27 19:31:29","commitOrder":6,"curCode":"    public void testIndexingWithSimpleContexts() throws Exception {\n        String mapping = Strings.toString(jsonBuilder().startObject().startObject(\"type1\")\n                .startObject(\"properties\").startObject(\"completion\")\n                .field(\"type\", \"completion\")\n                .startArray(\"contexts\")\n                .startObject()\n                .field(\"name\", \"ctx\")\n                .field(\"type\", \"category\")\n                .endObject()\n                .endArray()\n                .endObject().endObject()\n                .endObject().endObject());\n\n        DocumentMapper defaultMapper = createIndex(\"test\").mapperService().merge(\"type1\", new CompressedXContent(mapping),\n            MapperService.MergeReason.MAPPING_UPDATE);\n        Mapper fieldMapper = defaultMapper.mappers().getMapper(\"completion\");\n        ParsedDocument parsedDocument = defaultMapper.parse(new SourceToParse(\"test\", \"1\", BytesReference\n                .bytes(jsonBuilder()\n                        .startObject()\n                        .startArray(\"completion\")\n                        .startObject()\n                        .array(\"input\", \"suggestion5\", \"suggestion6\", \"suggestion7\")\n                        .startObject(\"contexts\")\n                        .field(\"ctx\", \"ctx1\")\n                        .endObject()\n                        .field(\"weight\", 5)\n                        .endObject()\n                        .endArray()\n                        .endObject()),\n                XContentType.JSON));\n        IndexableField[] fields = parsedDocument.rootDoc().getFields(fieldMapper.name());\n        assertContextSuggestFields(fields, 3);\n    }\n","date":"2021-04-27 19:31:29","endLine":124,"groupId":"104689","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"testIndexingWithSimpleContexts","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/84/23b49beb57a08fac9e3eac7aa3c060d5c89bda.src","preCode":"    public void testIndexingWithSimpleContexts() throws Exception {\n        String mapping = Strings.toString(jsonBuilder().startObject().startObject(\"type1\")\n                .startObject(\"properties\").startObject(\"completion\")\n                .field(\"type\", \"completion\")\n                .startArray(\"contexts\")\n                .startObject()\n                .field(\"name\", \"ctx\")\n                .field(\"type\", \"category\")\n                .endObject()\n                .endArray()\n                .endObject().endObject()\n                .endObject().endObject());\n\n        DocumentMapper defaultMapper = createIndex(\"test\").mapperService().parse(\"type1\", new CompressedXContent(mapping));\n        Mapper fieldMapper = defaultMapper.mappers().getMapper(\"completion\");\n        ParsedDocument parsedDocument = defaultMapper.parse(new SourceToParse(\"test\", \"1\", BytesReference\n                .bytes(jsonBuilder()\n                        .startObject()\n                        .startArray(\"completion\")\n                        .startObject()\n                        .array(\"input\", \"suggestion5\", \"suggestion6\", \"suggestion7\")\n                        .startObject(\"contexts\")\n                        .field(\"ctx\", \"ctx1\")\n                        .endObject()\n                        .field(\"weight\", 5)\n                        .endObject()\n                        .endArray()\n                        .endObject()),\n                XContentType.JSON));\n        IndexableField[] fields = parsedDocument.rootDoc().getFields(fieldMapper.name());\n        assertContextSuggestFields(fields, 3);\n    }\n","realPath":"server/src/test/java/org/elasticsearch/search/suggest/completion/CategoryContextMappingTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":92,"status":"M"},{"authorDate":"2021-04-27 19:31:29","commitOrder":6,"curCode":"    public void testIndexingWithSimpleBooleanContexts() throws Exception {\n        String mapping = Strings.toString(jsonBuilder().startObject().startObject(\"type1\")\n                .startObject(\"properties\").startObject(\"completion\")\n                .field(\"type\", \"completion\")\n                .startArray(\"contexts\")\n                .startObject()\n                .field(\"name\", \"ctx\")\n                .field(\"type\", \"category\")\n                .endObject()\n                .endArray()\n                .endObject().endObject()\n                .endObject().endObject());\n\n        DocumentMapper defaultMapper = createIndex(\"test\").mapperService().merge(\"type1\", new CompressedXContent(mapping),\n            MapperService.MergeReason.MAPPING_UPDATE);\n        Mapper fieldMapper = defaultMapper.mappers().getMapper(\"completion\");\n        ParsedDocument parsedDocument = defaultMapper.parse(new SourceToParse(\"test\", \"1\", BytesReference\n                .bytes(jsonBuilder()\n                        .startObject()\n                        .startArray(\"completion\")\n                        .startObject()\n                        .array(\"input\", \"suggestion5\", \"suggestion6\", \"suggestion7\")\n                        .startObject(\"contexts\")\n                        .field(\"ctx\", true)\n                        .endObject()\n                        .field(\"weight\", 5)\n                        .endObject()\n                        .endArray()\n                        .endObject()),\n            XContentType.JSON));\n        IndexableField[] fields = parsedDocument.rootDoc().getFields(fieldMapper.name());\n        assertContextSuggestFields(fields, 3);\n    }\n","date":"2021-04-27 19:31:29","endLine":192,"groupId":"104689","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"testIndexingWithSimpleBooleanContexts","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/84/23b49beb57a08fac9e3eac7aa3c060d5c89bda.src","preCode":"    public void testIndexingWithSimpleBooleanContexts() throws Exception {\n        String mapping = Strings.toString(jsonBuilder().startObject().startObject(\"type1\")\n                .startObject(\"properties\").startObject(\"completion\")\n                .field(\"type\", \"completion\")\n                .startArray(\"contexts\")\n                .startObject()\n                .field(\"name\", \"ctx\")\n                .field(\"type\", \"category\")\n                .endObject()\n                .endArray()\n                .endObject().endObject()\n                .endObject().endObject());\n\n        DocumentMapper defaultMapper = createIndex(\"test\").mapperService().parse(\"type1\", new CompressedXContent(mapping));\n        Mapper fieldMapper = defaultMapper.mappers().getMapper(\"completion\");\n        ParsedDocument parsedDocument = defaultMapper.parse(new SourceToParse(\"test\", \"1\", BytesReference\n                .bytes(jsonBuilder()\n                        .startObject()\n                        .startArray(\"completion\")\n                        .startObject()\n                        .array(\"input\", \"suggestion5\", \"suggestion6\", \"suggestion7\")\n                        .startObject(\"contexts\")\n                        .field(\"ctx\", true)\n                        .endObject()\n                        .field(\"weight\", 5)\n                        .endObject()\n                        .endArray()\n                        .endObject()),\n            XContentType.JSON));\n        IndexableField[] fields = parsedDocument.rootDoc().getFields(fieldMapper.name());\n        assertContextSuggestFields(fields, 3);\n    }\n","realPath":"server/src/test/java/org/elasticsearch/search/suggest/completion/CategoryContextMappingTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":160,"status":"M"}],"commitId":"cf360cefb68002fb5871d879f3a07643209904dc","commitMessage":"@@@Merge branch 'master' into feature/vector-tiles\n","date":"2021-04-27 19:31:29","modifiedFileCount":"260","status":"M","submitter":"iverase"}]
