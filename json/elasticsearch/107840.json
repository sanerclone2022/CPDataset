[{"authorTime":"2018-04-26 03:22:53","codes":[{"authorDate":"2018-04-26 03:22:53","commitOrder":1,"curCode":"    static BytesRef encodeLongRanges(Set<RangeFieldMapper.Range> ranges) throws IOException {\n        List<RangeFieldMapper.Range> sortedRanges = new ArrayList<>(ranges);\n        Comparator<RangeFieldMapper.Range> fromComparator = Comparator.comparingLong(range -> ((Number) range.from).longValue());\n        Comparator<RangeFieldMapper.Range> toComparator = Comparator.comparingLong(range -> ((Number) range.to).longValue());\n        sortedRanges.sort(fromComparator.thenComparing(toComparator));\n\n        final byte[] encoded = new byte[5 + (9 * 2) * sortedRanges.size()];\n        ByteArrayDataOutput out = new ByteArrayDataOutput(encoded);\n        out.writeVInt(sortedRanges.size());\n        for (RangeFieldMapper.Range range : sortedRanges) {\n            byte[] encodedFrom = encodeLong(((Number) range.from).longValue());\n            out.writeBytes(encodedFrom, encodedFrom.length);\n            byte[] encodedTo = encodeLong(((Number) range.to).longValue());\n            out.writeBytes(encodedTo, encodedTo.length);\n        }\n        return new BytesRef(encoded, 0, out.getPosition());\n    }\n","date":"2018-04-26 03:22:53","endLine":52,"groupId":"70040","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"encodeLongRanges","params":"(Set<RangeFieldMapper.Range>ranges)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/b5/8c6deba8cd3eb891310b33f43fc816a7becd2a.src","preCode":"    static BytesRef encodeLongRanges(Set<RangeFieldMapper.Range> ranges) throws IOException {\n        List<RangeFieldMapper.Range> sortedRanges = new ArrayList<>(ranges);\n        Comparator<RangeFieldMapper.Range> fromComparator = Comparator.comparingLong(range -> ((Number) range.from).longValue());\n        Comparator<RangeFieldMapper.Range> toComparator = Comparator.comparingLong(range -> ((Number) range.to).longValue());\n        sortedRanges.sort(fromComparator.thenComparing(toComparator));\n\n        final byte[] encoded = new byte[5 + (9 * 2) * sortedRanges.size()];\n        ByteArrayDataOutput out = new ByteArrayDataOutput(encoded);\n        out.writeVInt(sortedRanges.size());\n        for (RangeFieldMapper.Range range : sortedRanges) {\n            byte[] encodedFrom = encodeLong(((Number) range.from).longValue());\n            out.writeBytes(encodedFrom, encodedFrom.length);\n            byte[] encodedTo = encodeLong(((Number) range.to).longValue());\n            out.writeBytes(encodedTo, encodedTo.length);\n        }\n        return new BytesRef(encoded, 0, out.getPosition());\n    }\n","realPath":"server/src/main/java/org/elasticsearch/index/mapper/BinaryRangeUtil.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":36,"status":"B"},{"authorDate":"2018-04-26 03:22:53","commitOrder":1,"curCode":"    static BytesRef encodeDoubleRanges(Set<RangeFieldMapper.Range> ranges) throws IOException {\n        List<RangeFieldMapper.Range> sortedRanges = new ArrayList<>(ranges);\n        Comparator<RangeFieldMapper.Range> fromComparator = Comparator.comparingDouble(range -> ((Number) range.from).doubleValue());\n        Comparator<RangeFieldMapper.Range> toComparator = Comparator.comparingDouble(range -> ((Number) range.to).doubleValue());\n        sortedRanges.sort(fromComparator.thenComparing(toComparator));\n\n        final byte[] encoded = new byte[5 + (8 * 2) * sortedRanges.size()];\n        ByteArrayDataOutput out = new ByteArrayDataOutput(encoded);\n        out.writeVInt(sortedRanges.size());\n        for (RangeFieldMapper.Range range : sortedRanges) {\n            byte[] encodedFrom = encodeDouble(((Number) range.from).doubleValue());\n            out.writeBytes(encodedFrom, encodedFrom.length);\n            byte[] encodedTo = encodeDouble(((Number) range.to).doubleValue());\n            out.writeBytes(encodedTo, encodedTo.length);\n        }\n        return new BytesRef(encoded, 0, out.getPosition());\n    }\n","date":"2018-04-26 03:22:53","endLine":70,"groupId":"70039","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"encodeDoubleRanges","params":"(Set<RangeFieldMapper.Range>ranges)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/b5/8c6deba8cd3eb891310b33f43fc816a7becd2a.src","preCode":"    static BytesRef encodeDoubleRanges(Set<RangeFieldMapper.Range> ranges) throws IOException {\n        List<RangeFieldMapper.Range> sortedRanges = new ArrayList<>(ranges);\n        Comparator<RangeFieldMapper.Range> fromComparator = Comparator.comparingDouble(range -> ((Number) range.from).doubleValue());\n        Comparator<RangeFieldMapper.Range> toComparator = Comparator.comparingDouble(range -> ((Number) range.to).doubleValue());\n        sortedRanges.sort(fromComparator.thenComparing(toComparator));\n\n        final byte[] encoded = new byte[5 + (8 * 2) * sortedRanges.size()];\n        ByteArrayDataOutput out = new ByteArrayDataOutput(encoded);\n        out.writeVInt(sortedRanges.size());\n        for (RangeFieldMapper.Range range : sortedRanges) {\n            byte[] encodedFrom = encodeDouble(((Number) range.from).doubleValue());\n            out.writeBytes(encodedFrom, encodedFrom.length);\n            byte[] encodedTo = encodeDouble(((Number) range.to).doubleValue());\n            out.writeBytes(encodedTo, encodedTo.length);\n        }\n        return new BytesRef(encoded, 0, out.getPosition());\n    }\n","realPath":"server/src/main/java/org/elasticsearch/index/mapper/BinaryRangeUtil.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":54,"status":"B"}],"commitId":"d74fb9eb4559077e2d20b19a9ed62d9ff825027a","commitMessage":"@@@Opened x-pack ILM code\n","date":"2018-04-26 03:22:53","modifiedFileCount":"0","status":"B","submitter":"Tal Levy"},{"authorTime":"2021-09-01 23:21:26","codes":[{"authorDate":"2021-09-01 23:21:26","commitOrder":2,"curCode":"    static BytesRef encodeLongRanges(Set<RangeFieldMapper.Range> ranges) throws IOException {\n        List<RangeFieldMapper.Range> sortedRanges = new ArrayList<>(ranges);\n        Comparator<RangeFieldMapper.Range> fromComparator = Comparator.comparingLong(range -> ((Number) range.from).longValue());\n        Comparator<RangeFieldMapper.Range> toComparator = Comparator.comparingLong(range -> ((Number) range.to).longValue());\n        sortedRanges.sort(fromComparator.thenComparing(toComparator));\n\n        BytesStreamOutput out = new BytesStreamOutput(5 + (9 * 2) * sortedRanges.size());\n        out.writeVInt(sortedRanges.size());\n        for (RangeFieldMapper.Range range : sortedRanges) {\n            byte[] encodedFrom = encodeLong(((Number) range.from).longValue());\n            out.writeBytes(encodedFrom, encodedFrom.length);\n            byte[] encodedTo = encodeLong(((Number) range.to).longValue());\n            out.writeBytes(encodedTo, encodedTo.length);\n        }\n        return out.bytes().toBytesRef();\n    }\n","date":"2021-09-01 23:21:26","endLine":70,"groupId":"107840","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"encodeLongRanges","params":"(Set<RangeFieldMapper.Range>ranges)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/68/748623e46d34efbf7f5158045360f5622a1ed0.src","preCode":"    static BytesRef encodeLongRanges(Set<RangeFieldMapper.Range> ranges) throws IOException {\n        List<RangeFieldMapper.Range> sortedRanges = new ArrayList<>(ranges);\n        Comparator<RangeFieldMapper.Range> fromComparator = Comparator.comparingLong(range -> ((Number) range.from).longValue());\n        Comparator<RangeFieldMapper.Range> toComparator = Comparator.comparingLong(range -> ((Number) range.to).longValue());\n        sortedRanges.sort(fromComparator.thenComparing(toComparator));\n\n        final byte[] encoded = new byte[5 + (9 * 2) * sortedRanges.size()];\n        ByteArrayDataOutput out = new ByteArrayDataOutput(encoded);\n        out.writeVInt(sortedRanges.size());\n        for (RangeFieldMapper.Range range : sortedRanges) {\n            byte[] encodedFrom = encodeLong(((Number) range.from).longValue());\n            out.writeBytes(encodedFrom, encodedFrom.length);\n            byte[] encodedTo = encodeLong(((Number) range.to).longValue());\n            out.writeBytes(encodedTo, encodedTo.length);\n        }\n        return new BytesRef(encoded, 0, out.getPosition());\n    }\n","realPath":"server/src/main/java/org/elasticsearch/index/mapper/BinaryRangeUtil.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":55,"status":"M"},{"authorDate":"2021-09-01 23:21:26","commitOrder":2,"curCode":"    static BytesRef encodeDoubleRanges(Set<RangeFieldMapper.Range> ranges) throws IOException {\n        List<RangeFieldMapper.Range> sortedRanges = new ArrayList<>(ranges);\n        Comparator<RangeFieldMapper.Range> fromComparator = Comparator.comparingDouble(range -> ((Number) range.from).doubleValue());\n        Comparator<RangeFieldMapper.Range> toComparator = Comparator.comparingDouble(range -> ((Number) range.to).doubleValue());\n        sortedRanges.sort(fromComparator.thenComparing(toComparator));\n\n        BytesStreamOutput out = new BytesStreamOutput(5 + (8 * 2) * sortedRanges.size());\n        out.writeVInt(sortedRanges.size());\n        for (RangeFieldMapper.Range range : sortedRanges) {\n            byte[] encodedFrom = encodeDouble(((Number) range.from).doubleValue());\n            out.writeBytes(encodedFrom, encodedFrom.length);\n            byte[] encodedTo = encodeDouble(((Number) range.to).doubleValue());\n            out.writeBytes(encodedTo, encodedTo.length);\n        }\n        return out.bytes().toBytesRef();\n    }\n","date":"2021-09-01 23:21:26","endLine":92,"groupId":"107840","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"encodeDoubleRanges","params":"(Set<RangeFieldMapper.Range>ranges)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/68/748623e46d34efbf7f5158045360f5622a1ed0.src","preCode":"    static BytesRef encodeDoubleRanges(Set<RangeFieldMapper.Range> ranges) throws IOException {\n        List<RangeFieldMapper.Range> sortedRanges = new ArrayList<>(ranges);\n        Comparator<RangeFieldMapper.Range> fromComparator = Comparator.comparingDouble(range -> ((Number) range.from).doubleValue());\n        Comparator<RangeFieldMapper.Range> toComparator = Comparator.comparingDouble(range -> ((Number) range.to).doubleValue());\n        sortedRanges.sort(fromComparator.thenComparing(toComparator));\n\n        final byte[] encoded = new byte[5 + (8 * 2) * sortedRanges.size()];\n        ByteArrayDataOutput out = new ByteArrayDataOutput(encoded);\n        out.writeVInt(sortedRanges.size());\n        for (RangeFieldMapper.Range range : sortedRanges) {\n            byte[] encodedFrom = encodeDouble(((Number) range.from).doubleValue());\n            out.writeBytes(encodedFrom, encodedFrom.length);\n            byte[] encodedTo = encodeDouble(((Number) range.to).doubleValue());\n            out.writeBytes(encodedTo, encodedTo.length);\n        }\n        return new BytesRef(encoded, 0, out.getPosition());\n    }\n","realPath":"server/src/main/java/org/elasticsearch/index/mapper/BinaryRangeUtil.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":77,"status":"M"}],"commitId":"5d48fdc741f06205518e0f5d9374c6a0058b8248","commitMessage":"@@@Replace Lucene DataInput/DataOutput with Elasticsearch StreamInput/StreamOutput (#77118)\n\nIn a number of places.  we read and write binary data into byte arrays using lucene's\nDataInput and DataOutput abstractions. In lucene 9 these abstractions are changing\nthe endianness of their read/writeInt methods. To avoid dealing with this formatting\nchange.  this commit changes things to use elasticsearch StreamInput/StreamOutput\nabstractions instead.  which have basically the same API but will preserve endianness.\n\nRelates to #73324","date":"2021-09-01 23:21:26","modifiedFileCount":"10","status":"M","submitter":"Alan Woodward"}]
