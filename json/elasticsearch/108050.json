[{"authorTime":"2019-01-25 21:22:48","codes":[{"authorDate":"2019-01-22 20:27:12","commitOrder":2,"curCode":"    private void ensureNoShardData(final NodePath[] nodePaths) throws IOException {\n        List<Path> shardDataPaths = new ArrayList<>();\n        for (NodePath nodePath : nodePaths) {\n            Path indicesPath = nodePath.indicesPath;\n            if (Files.isDirectory(indicesPath)) {\n                try (DirectoryStream<Path> indexStream = Files.newDirectoryStream(indicesPath)) {\n                    for (Path indexPath : indexStream) {\n                        if (Files.isDirectory(indexPath)) {\n                            try (Stream<Path> shardStream = Files.list(indexPath)) {\n                                shardStream.filter(this::isShardPath)\n                                    .map(Path::toAbsolutePath)\n                                    .forEach(shardDataPaths::add);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n\n        if (shardDataPaths.isEmpty() == false) {\n            throw new IllegalStateException(\"Node is started with \"\n                + Node.NODE_DATA_SETTING.getKey()\n                + \"=false, but has shard data: \"\n                + shardDataPaths);\n        }\n    }\n","date":"2019-01-22 20:27:12","endLine":1064,"groupId":"3799","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"ensureNoShardData","params":"(finalNodePath[]nodePaths)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/2f/676eb8467707e3e2cc9ba4ce0c8118f608d303.src","preCode":"    private void ensureNoShardData(final NodePath[] nodePaths) throws IOException {\n        List<Path> shardDataPaths = new ArrayList<>();\n        for (NodePath nodePath : nodePaths) {\n            Path indicesPath = nodePath.indicesPath;\n            if (Files.isDirectory(indicesPath)) {\n                try (DirectoryStream<Path> indexStream = Files.newDirectoryStream(indicesPath)) {\n                    for (Path indexPath : indexStream) {\n                        if (Files.isDirectory(indexPath)) {\n                            try (Stream<Path> shardStream = Files.list(indexPath)) {\n                                shardStream.filter(this::isShardPath)\n                                    .map(Path::toAbsolutePath)\n                                    .forEach(shardDataPaths::add);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n\n        if (shardDataPaths.isEmpty() == false) {\n            throw new IllegalStateException(\"Node is started with \"\n                + Node.NODE_DATA_SETTING.getKey()\n                + \"=false, but has shard data: \"\n                + shardDataPaths);\n        }\n    }\n","realPath":"server/src/main/java/org/elasticsearch/env/NodeEnvironment.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":1039,"status":"NB"},{"authorDate":"2019-01-25 21:22:48","commitOrder":2,"curCode":"    private void ensureNoIndexMetaData(final NodePath[] nodePaths) throws IOException {\n        List<Path> indexMetaDataPaths = collectIndexSubPaths(nodePaths, this::isIndexMetaDataPath);\n        if (indexMetaDataPaths.isEmpty() == false) {\n            throw new IllegalStateException(\"Node is started with \"\n                + Node.NODE_DATA_SETTING.getKey()\n                + \"=false and \"\n                + Node.NODE_MASTER_SETTING.getKey()\n                + \"=false, but has index metadata: \"\n                + indexMetaDataPaths);\n        }\n    }\n","date":"2019-01-25 21:22:48","endLine":1063,"groupId":"57205","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"ensureNoIndexMetaData","params":"(finalNodePath[]nodePaths)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/39/7d1ee1763ddf4143a58a1257e7241667c49e8d.src","preCode":"    private void ensureNoIndexMetaData(final NodePath[] nodePaths) throws IOException {\n        List<Path> indexMetaDataPaths = collectIndexSubPaths(nodePaths, this::isIndexMetaDataPath);\n        if (indexMetaDataPaths.isEmpty() == false) {\n            throw new IllegalStateException(\"Node is started with \"\n                + Node.NODE_DATA_SETTING.getKey()\n                + \"=false and \"\n                + Node.NODE_MASTER_SETTING.getKey()\n                + \"=false, but has index metadata: \"\n                + indexMetaDataPaths);\n        }\n    }\n","realPath":"server/src/main/java/org/elasticsearch/env/NodeEnvironment.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":1053,"status":"B"}],"commitId":"49073dd2f680c0fde81c810b8da28a0af33f63e5","commitMessage":"@@@Fail start on invalid index metadata (#37748)\n\nNode started with node.data=false and node.master=false can no longer\nstart if they have index metadata. This avoids resurrecting old indexes\ninto the cluster and ensures metadata is cleaned out before\nre-purposing a node that was previously master or data node.\n\nIssue #27073","date":"2019-01-25 21:22:48","modifiedFileCount":"3","status":"M","submitter":"Henning Andersen"},{"authorTime":"2019-03-19 18:50:21","codes":[{"authorDate":"2019-01-22 20:27:12","commitOrder":3,"curCode":"    private void ensureNoShardData(final NodePath[] nodePaths) throws IOException {\n        List<Path> shardDataPaths = new ArrayList<>();\n        for (NodePath nodePath : nodePaths) {\n            Path indicesPath = nodePath.indicesPath;\n            if (Files.isDirectory(indicesPath)) {\n                try (DirectoryStream<Path> indexStream = Files.newDirectoryStream(indicesPath)) {\n                    for (Path indexPath : indexStream) {\n                        if (Files.isDirectory(indexPath)) {\n                            try (Stream<Path> shardStream = Files.list(indexPath)) {\n                                shardStream.filter(this::isShardPath)\n                                    .map(Path::toAbsolutePath)\n                                    .forEach(shardDataPaths::add);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n\n        if (shardDataPaths.isEmpty() == false) {\n            throw new IllegalStateException(\"Node is started with \"\n                + Node.NODE_DATA_SETTING.getKey()\n                + \"=false, but has shard data: \"\n                + shardDataPaths);\n        }\n    }\n","date":"2019-01-22 20:27:12","endLine":1064,"groupId":"3799","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"ensureNoShardData","params":"(finalNodePath[]nodePaths)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/2f/676eb8467707e3e2cc9ba4ce0c8118f608d303.src","preCode":"    private void ensureNoShardData(final NodePath[] nodePaths) throws IOException {\n        List<Path> shardDataPaths = new ArrayList<>();\n        for (NodePath nodePath : nodePaths) {\n            Path indicesPath = nodePath.indicesPath;\n            if (Files.isDirectory(indicesPath)) {\n                try (DirectoryStream<Path> indexStream = Files.newDirectoryStream(indicesPath)) {\n                    for (Path indexPath : indexStream) {\n                        if (Files.isDirectory(indexPath)) {\n                            try (Stream<Path> shardStream = Files.list(indexPath)) {\n                                shardStream.filter(this::isShardPath)\n                                    .map(Path::toAbsolutePath)\n                                    .forEach(shardDataPaths::add);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n\n        if (shardDataPaths.isEmpty() == false) {\n            throw new IllegalStateException(\"Node is started with \"\n                + Node.NODE_DATA_SETTING.getKey()\n                + \"=false, but has shard data: \"\n                + shardDataPaths);\n        }\n    }\n","realPath":"server/src/main/java/org/elasticsearch/env/NodeEnvironment.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":1039,"status":"N"},{"authorDate":"2019-03-19 18:50:21","commitOrder":3,"curCode":"    private void ensureNoIndexMetaData(final NodePath[] nodePaths) throws IOException {\n        List<Path> indexMetaDataPaths = collectIndexMetaDataPaths(nodePaths);\n        if (indexMetaDataPaths.isEmpty() == false) {\n            throw new IllegalStateException(\"Node is started with \"\n                + Node.NODE_DATA_SETTING.getKey()\n                + \"=false and \"\n                + Node.NODE_MASTER_SETTING.getKey()\n                + \"=false, but has index metadata: \"\n                + indexMetaDataPaths\n                + \". Use 'elasticsearch-node repurpose' tool to clean up\"\n            );\n        }\n    }\n","date":"2019-03-19 18:50:21","endLine":1080,"groupId":"57205","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"ensureNoIndexMetaData","params":"(finalNodePath[]nodePaths)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/f7/e6f8e949b379d450ffd6b6b033b3bed433b54c.src","preCode":"    private void ensureNoIndexMetaData(final NodePath[] nodePaths) throws IOException {\n        List<Path> indexMetaDataPaths = collectIndexSubPaths(nodePaths, this::isIndexMetaDataPath);\n        if (indexMetaDataPaths.isEmpty() == false) {\n            throw new IllegalStateException(\"Node is started with \"\n                + Node.NODE_DATA_SETTING.getKey()\n                + \"=false and \"\n                + Node.NODE_MASTER_SETTING.getKey()\n                + \"=false, but has index metadata: \"\n                + indexMetaDataPaths);\n        }\n    }\n","realPath":"server/src/main/java/org/elasticsearch/env/NodeEnvironment.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":1068,"status":"M"}],"commitId":"bd04b4f361c4a879eb47aca432afac66104c26c3","commitMessage":"@@@Node repurpose tool (#39403)\n\nWhen a node is repurposed to master/no-data or no-master/no-data.  v7.x\nwill not start (see #37748 and #37347). The `elasticsearch repurpose`\ntool can fix this by cleaning up the problematic data.","date":"2019-03-19 18:50:21","modifiedFileCount":"6","status":"M","submitter":"Henning Andersen"},{"authorTime":"2020-04-01 03:52:01","codes":[{"authorDate":"2019-01-22 20:27:12","commitOrder":4,"curCode":"    private void ensureNoShardData(final NodePath[] nodePaths) throws IOException {\n        List<Path> shardDataPaths = new ArrayList<>();\n        for (NodePath nodePath : nodePaths) {\n            Path indicesPath = nodePath.indicesPath;\n            if (Files.isDirectory(indicesPath)) {\n                try (DirectoryStream<Path> indexStream = Files.newDirectoryStream(indicesPath)) {\n                    for (Path indexPath : indexStream) {\n                        if (Files.isDirectory(indexPath)) {\n                            try (Stream<Path> shardStream = Files.list(indexPath)) {\n                                shardStream.filter(this::isShardPath)\n                                    .map(Path::toAbsolutePath)\n                                    .forEach(shardDataPaths::add);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n\n        if (shardDataPaths.isEmpty() == false) {\n            throw new IllegalStateException(\"Node is started with \"\n                + Node.NODE_DATA_SETTING.getKey()\n                + \"=false, but has shard data: \"\n                + shardDataPaths);\n        }\n    }\n","date":"2019-01-22 20:27:12","endLine":1064,"groupId":"3799","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"ensureNoShardData","params":"(finalNodePath[]nodePaths)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/2f/676eb8467707e3e2cc9ba4ce0c8118f608d303.src","preCode":"    private void ensureNoShardData(final NodePath[] nodePaths) throws IOException {\n        List<Path> shardDataPaths = new ArrayList<>();\n        for (NodePath nodePath : nodePaths) {\n            Path indicesPath = nodePath.indicesPath;\n            if (Files.isDirectory(indicesPath)) {\n                try (DirectoryStream<Path> indexStream = Files.newDirectoryStream(indicesPath)) {\n                    for (Path indexPath : indexStream) {\n                        if (Files.isDirectory(indexPath)) {\n                            try (Stream<Path> shardStream = Files.list(indexPath)) {\n                                shardStream.filter(this::isShardPath)\n                                    .map(Path::toAbsolutePath)\n                                    .forEach(shardDataPaths::add);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n\n        if (shardDataPaths.isEmpty() == false) {\n            throw new IllegalStateException(\"Node is started with \"\n                + Node.NODE_DATA_SETTING.getKey()\n                + \"=false, but has shard data: \"\n                + shardDataPaths);\n        }\n    }\n","realPath":"server/src/main/java/org/elasticsearch/env/NodeEnvironment.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":1039,"status":"N"},{"authorDate":"2020-04-01 03:52:01","commitOrder":4,"curCode":"    private void ensureNoIndexMetadata(final NodePath[] nodePaths) throws IOException {\n        List<Path> indexMetadataPaths = collectIndexMetadataPaths(nodePaths);\n        if (indexMetadataPaths.isEmpty() == false) {\n            throw new IllegalStateException(\"Node is started with \"\n                + Node.NODE_DATA_SETTING.getKey()\n                + \"=false and \"\n                + Node.NODE_MASTER_SETTING.getKey()\n                + \"=false, but has index metadata: \"\n                + indexMetadataPaths\n                + \". Use 'elasticsearch-node repurpose' tool to clean up\"\n            );\n        }\n    }\n","date":"2020-04-01 03:52:01","endLine":1185,"groupId":"57205","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"ensureNoIndexMetadata","params":"(finalNodePath[]nodePaths)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/9e/71420cfb2d0a5f8b63ac5e5293582a389fb6fd.src","preCode":"    private void ensureNoIndexMetaData(final NodePath[] nodePaths) throws IOException {\n        List<Path> indexMetaDataPaths = collectIndexMetaDataPaths(nodePaths);\n        if (indexMetaDataPaths.isEmpty() == false) {\n            throw new IllegalStateException(\"Node is started with \"\n                + Node.NODE_DATA_SETTING.getKey()\n                + \"=false and \"\n                + Node.NODE_MASTER_SETTING.getKey()\n                + \"=false, but has index metadata: \"\n                + indexMetaDataPaths\n                + \". Use 'elasticsearch-node repurpose' tool to clean up\"\n            );\n        }\n    }\n","realPath":"server/src/main/java/org/elasticsearch/env/NodeEnvironment.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":1173,"status":"M"}],"commitId":"95a7eed9aa35f47b228e402508709b5bd6703cf4","commitMessage":"@@@Rename MetaData to Metadata in all of the places (#54519)\n\nThis is a simple naming change PR.  to fix the fact that \"metadata\" is a\nsingle English word.  and for too long we have not followed general\nnaming conventions for it. We are also not consistent about it.  for\nexample.  METADATA instead of META_DATA if we were trying to be\nconsistent with MetaData (although METADATA is correct when considered\nin the context of \"metadata\"). This was a simple find and replace across\nthe code base.  only taking a few minutes to fix this naming issue\nforever.","date":"2020-04-01 03:52:01","modifiedFileCount":"1712","status":"M","submitter":"Jason Tedor"},{"authorTime":"2020-06-26 22:33:37","codes":[{"authorDate":"2020-06-26 22:33:37","commitOrder":5,"curCode":"    private void ensureNoShardData(final NodePath[] nodePaths) throws IOException {\n        List<Path> shardDataPaths = collectShardDataPaths(nodePaths);\n        if (shardDataPaths.isEmpty() == false) {\n            final String message = String.format(\n                Locale.ROOT,\n                \"node does not have the %s role but has shard data: %s. Use 'elasticsearch-node repurpose' tool to clean up\",\n                DiscoveryNodeRole.DATA_ROLE.roleName(),\n                shardDataPaths\n            );\n            throw new IllegalStateException(message);\n        }\n    }\n","date":"2020-06-26 22:33:37","endLine":1170,"groupId":"41886","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"ensureNoShardData","params":"(finalNodePath[]nodePaths)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/e4/da0885b4618158393999923d14ca33dc657aa6.src","preCode":"    private void ensureNoShardData(final NodePath[] nodePaths) throws IOException {\n        List<Path> shardDataPaths = new ArrayList<>();\n        for (NodePath nodePath : nodePaths) {\n            Path indicesPath = nodePath.indicesPath;\n            if (Files.isDirectory(indicesPath)) {\n                try (DirectoryStream<Path> indexStream = Files.newDirectoryStream(indicesPath)) {\n                    for (Path indexPath : indexStream) {\n                        if (Files.isDirectory(indexPath)) {\n                            try (Stream<Path> shardStream = Files.list(indexPath)) {\n                                shardStream.filter(this::isShardPath)\n                                    .map(Path::toAbsolutePath)\n                                    .forEach(shardDataPaths::add);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n\n        if (shardDataPaths.isEmpty() == false) {\n            throw new IllegalStateException(\"Node is started with \"\n                + Node.NODE_DATA_SETTING.getKey()\n                + \"=false, but has shard data: \"\n                + shardDataPaths);\n        }\n    }\n","realPath":"server/src/main/java/org/elasticsearch/env/NodeEnvironment.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":1159,"status":"M"},{"authorDate":"2020-06-26 22:33:37","commitOrder":5,"curCode":"    private void ensureNoIndexMetadata(final NodePath[] nodePaths) throws IOException {\n        List<Path> indexMetadataPaths = collectIndexMetadataPaths(nodePaths);\n        if (indexMetadataPaths.isEmpty() == false) {\n            final String message = String.format(\n                Locale.ROOT,\n                \"node does not have the %s and %s roles but has index metadata: %s. Use 'elasticsearch-node repurpose' tool to clean up\",\n                DiscoveryNodeRole.DATA_ROLE.roleName(),\n                DiscoveryNodeRole.MASTER_ROLE.roleName(),\n                indexMetadataPaths\n            );\n            throw new IllegalStateException(message);\n        }\n    }\n","date":"2020-06-26 22:33:37","endLine":1184,"groupId":"41886","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"ensureNoIndexMetadata","params":"(finalNodePath[]nodePaths)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/e4/da0885b4618158393999923d14ca33dc657aa6.src","preCode":"    private void ensureNoIndexMetadata(final NodePath[] nodePaths) throws IOException {\n        List<Path> indexMetadataPaths = collectIndexMetadataPaths(nodePaths);\n        if (indexMetadataPaths.isEmpty() == false) {\n            throw new IllegalStateException(\"Node is started with \"\n                + Node.NODE_DATA_SETTING.getKey()\n                + \"=false and \"\n                + Node.NODE_MASTER_SETTING.getKey()\n                + \"=false, but has index metadata: \"\n                + indexMetadataPaths\n                + \". Use 'elasticsearch-node repurpose' tool to clean up\"\n            );\n        }\n    }\n","realPath":"server/src/main/java/org/elasticsearch/env/NodeEnvironment.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":1172,"status":"M"}],"commitId":"cac5f29cee7572a3695e2b8d17d0a0cb7ac473dd","commitMessage":"@@@Merge branch 'master' into feature/runtime_fields\n","date":"2020-06-26 22:33:37","modifiedFileCount":"731","status":"M","submitter":"Nik Everett"},{"authorTime":"2021-05-12 20:50:26","codes":[{"authorDate":"2021-05-12 20:50:26","commitOrder":6,"curCode":"    private void ensureNoShardData(final NodePath nodePath) throws IOException {\n        List<Path> shardDataPaths = collectShardDataPaths(nodePath);\n        if (shardDataPaths.isEmpty() == false) {\n            final String message = String.format(\n                Locale.ROOT,\n                \"node does not have the %s role but has shard data: %s. Use 'elasticsearch-node repurpose' tool to clean up\",\n                DiscoveryNodeRole.DATA_ROLE.roleName(),\n                shardDataPaths\n            );\n            throw new IllegalStateException(message);\n        }\n    }\n","date":"2021-05-12 20:50:26","endLine":1079,"groupId":"108050","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"ensureNoShardData","params":"(finalNodePathnodePath)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/e3/c90240b5e8d911bd3e4157a9029c54f804f053.src","preCode":"    private void ensureNoShardData(final NodePath[] nodePaths) throws IOException {\n        List<Path> shardDataPaths = collectShardDataPaths(nodePaths);\n        if (shardDataPaths.isEmpty() == false) {\n            final String message = String.format(\n                Locale.ROOT,\n                \"node does not have the %s role but has shard data: %s. Use 'elasticsearch-node repurpose' tool to clean up\",\n                DiscoveryNodeRole.DATA_ROLE.roleName(),\n                shardDataPaths\n            );\n            throw new IllegalStateException(message);\n        }\n    }\n","realPath":"server/src/main/java/org/elasticsearch/env/NodeEnvironment.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":1068,"status":"M"},{"authorDate":"2021-05-12 20:50:26","commitOrder":6,"curCode":"    private void ensureNoIndexMetadata(final NodePath nodePath) throws IOException {\n        List<Path> indexMetadataPaths = collectIndexMetadataPaths(nodePath);\n        if (indexMetadataPaths.isEmpty() == false) {\n            final String message = String.format(\n                Locale.ROOT,\n                \"node does not have the %s and %s roles but has index metadata: %s. Use 'elasticsearch-node repurpose' tool to clean up\",\n                DiscoveryNodeRole.DATA_ROLE.roleName(),\n                DiscoveryNodeRole.MASTER_ROLE.roleName(),\n                indexMetadataPaths\n            );\n            throw new IllegalStateException(message);\n        }\n    }\n","date":"2021-05-12 20:50:26","endLine":1093,"groupId":"108050","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"ensureNoIndexMetadata","params":"(finalNodePathnodePath)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/e3/c90240b5e8d911bd3e4157a9029c54f804f053.src","preCode":"    private void ensureNoIndexMetadata(final NodePath[] nodePaths) throws IOException {\n        List<Path> indexMetadataPaths = collectIndexMetadataPaths(nodePaths);\n        if (indexMetadataPaths.isEmpty() == false) {\n            final String message = String.format(\n                Locale.ROOT,\n                \"node does not have the %s and %s roles but has index metadata: %s. Use 'elasticsearch-node repurpose' tool to clean up\",\n                DiscoveryNodeRole.DATA_ROLE.roleName(),\n                DiscoveryNodeRole.MASTER_ROLE.roleName(),\n                indexMetadataPaths\n            );\n            throw new IllegalStateException(message);\n        }\n    }\n","realPath":"server/src/main/java/org/elasticsearch/env/NodeEnvironment.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":1081,"status":"M"}],"commitId":"4528e780c48ada91fd452b9c51dc1a37772c5f07","commitMessage":"@@@Merge branch 'master' into feature/vector-tiles\n\n# Conflicts:\n#\tx-pack/plugin/spatial/build.gradle\n#\tx-pack/plugin/spatial/src/main/java/org/elasticsearch/xpack/spatial/SpatialPlugin.java\n","date":"2021-05-12 20:50:26","modifiedFileCount":"564","status":"M","submitter":"iverase"}]
