[{"authorTime":"2018-04-26 03:22:53","codes":[{"authorDate":"2018-04-26 03:22:53","commitOrder":1,"curCode":"    public void testToQueryBoost() throws IOException {\n        assumeTrue(\"test runs only when at least a type is registered\", getCurrentTypes().length > 0);\n        QueryShardContext shardContext = createShardContext();\n        SimpleQueryStringBuilder simpleQueryStringBuilder = new SimpleQueryStringBuilder(\"test\");\n        simpleQueryStringBuilder.field(STRING_FIELD_NAME, 5);\n        Query query = simpleQueryStringBuilder.toQuery(shardContext);\n        assertThat(query, instanceOf(BoostQuery.class));\n        BoostQuery boostQuery = (BoostQuery) query;\n        assertThat(boostQuery.getBoost(), equalTo(5f));\n        assertThat(boostQuery.getQuery(), instanceOf(TermQuery.class));\n\n        simpleQueryStringBuilder = new SimpleQueryStringBuilder(\"test\");\n        simpleQueryStringBuilder.field(STRING_FIELD_NAME, 5);\n        simpleQueryStringBuilder.boost(2);\n        query = simpleQueryStringBuilder.toQuery(shardContext);\n        boostQuery = (BoostQuery) query;\n        assertThat(boostQuery.getBoost(), equalTo(2f));\n        assertThat(boostQuery.getQuery(), instanceOf(BoostQuery.class));\n        boostQuery = (BoostQuery) boostQuery.getQuery();\n        assertThat(boostQuery.getBoost(), equalTo(5f));\n        assertThat(boostQuery.getQuery(), instanceOf(TermQuery.class));\n    }\n","date":"2018-04-26 03:22:53","endLine":338,"groupId":"54035","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testToQueryBoost","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/7f/f2b7ec12285f87fca47f39377f9738f00fba9c.src","preCode":"    public void testToQueryBoost() throws IOException {\n        assumeTrue(\"test runs only when at least a type is registered\", getCurrentTypes().length > 0);\n        QueryShardContext shardContext = createShardContext();\n        SimpleQueryStringBuilder simpleQueryStringBuilder = new SimpleQueryStringBuilder(\"test\");\n        simpleQueryStringBuilder.field(STRING_FIELD_NAME, 5);\n        Query query = simpleQueryStringBuilder.toQuery(shardContext);\n        assertThat(query, instanceOf(BoostQuery.class));\n        BoostQuery boostQuery = (BoostQuery) query;\n        assertThat(boostQuery.getBoost(), equalTo(5f));\n        assertThat(boostQuery.getQuery(), instanceOf(TermQuery.class));\n\n        simpleQueryStringBuilder = new SimpleQueryStringBuilder(\"test\");\n        simpleQueryStringBuilder.field(STRING_FIELD_NAME, 5);\n        simpleQueryStringBuilder.boost(2);\n        query = simpleQueryStringBuilder.toQuery(shardContext);\n        boostQuery = (BoostQuery) query;\n        assertThat(boostQuery.getBoost(), equalTo(2f));\n        assertThat(boostQuery.getQuery(), instanceOf(BoostQuery.class));\n        boostQuery = (BoostQuery) boostQuery.getQuery();\n        assertThat(boostQuery.getBoost(), equalTo(5f));\n        assertThat(boostQuery.getQuery(), instanceOf(TermQuery.class));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/index/query/SimpleQueryStringBuilderTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":317,"status":"B"},{"authorDate":"2018-04-26 03:22:53","commitOrder":1,"curCode":"    public void testToQueryBoost() throws IOException {\n        assumeTrue(\"test runs only when at least a type is registered\", getCurrentTypes().length > 0);\n        QueryShardContext shardContext = createShardContext();\n        MultiMatchQueryBuilder multiMatchQueryBuilder = new MultiMatchQueryBuilder(\"test\");\n        multiMatchQueryBuilder.field(STRING_FIELD_NAME, 5f);\n        Query query = multiMatchQueryBuilder.toQuery(shardContext);\n        assertTermOrBoostQuery(query, STRING_FIELD_NAME, \"test\", 5f);\n\n        multiMatchQueryBuilder = new MultiMatchQueryBuilder(\"test\");\n        multiMatchQueryBuilder.field(STRING_FIELD_NAME, 5f);\n        multiMatchQueryBuilder.boost(2f);\n        query = multiMatchQueryBuilder.toQuery(shardContext);\n        assertThat(query, instanceOf(BoostQuery.class));\n        BoostQuery boostQuery = (BoostQuery) query;\n        assertThat(boostQuery.getBoost(), equalTo(2f));\n        assertTermOrBoostQuery(boostQuery.getQuery(), STRING_FIELD_NAME, \"test\", 5f);\n    }\n","date":"2018-04-26 03:22:53","endLine":191,"groupId":"26054","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testToQueryBoost","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/b6/d4816b01f4a975e26ad4031e1a10f0accb1346.src","preCode":"    public void testToQueryBoost() throws IOException {\n        assumeTrue(\"test runs only when at least a type is registered\", getCurrentTypes().length > 0);\n        QueryShardContext shardContext = createShardContext();\n        MultiMatchQueryBuilder multiMatchQueryBuilder = new MultiMatchQueryBuilder(\"test\");\n        multiMatchQueryBuilder.field(STRING_FIELD_NAME, 5f);\n        Query query = multiMatchQueryBuilder.toQuery(shardContext);\n        assertTermOrBoostQuery(query, STRING_FIELD_NAME, \"test\", 5f);\n\n        multiMatchQueryBuilder = new MultiMatchQueryBuilder(\"test\");\n        multiMatchQueryBuilder.field(STRING_FIELD_NAME, 5f);\n        multiMatchQueryBuilder.boost(2f);\n        query = multiMatchQueryBuilder.toQuery(shardContext);\n        assertThat(query, instanceOf(BoostQuery.class));\n        BoostQuery boostQuery = (BoostQuery) query;\n        assertThat(boostQuery.getBoost(), equalTo(2f));\n        assertTermOrBoostQuery(boostQuery.getQuery(), STRING_FIELD_NAME, \"test\", 5f);\n    }\n","realPath":"server/src/test/java/org/elasticsearch/index/query/MultiMatchQueryBuilderTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":175,"status":"B"}],"commitId":"d74fb9eb4559077e2d20b19a9ed62d9ff825027a","commitMessage":"@@@Opened x-pack ILM code\n","date":"2018-04-26 03:22:53","modifiedFileCount":"0","status":"B","submitter":"Tal Levy"},{"authorTime":"2018-07-27 17:51:09","codes":[{"authorDate":"2018-07-27 17:51:09","commitOrder":2,"curCode":"    public void testToQueryBoost() throws IOException {\n        QueryShardContext shardContext = createShardContext();\n        SimpleQueryStringBuilder simpleQueryStringBuilder = new SimpleQueryStringBuilder(\"test\");\n        simpleQueryStringBuilder.field(STRING_FIELD_NAME, 5);\n        Query query = simpleQueryStringBuilder.toQuery(shardContext);\n        assertThat(query, instanceOf(BoostQuery.class));\n        BoostQuery boostQuery = (BoostQuery) query;\n        assertThat(boostQuery.getBoost(), equalTo(5f));\n        assertThat(boostQuery.getQuery(), instanceOf(TermQuery.class));\n\n        simpleQueryStringBuilder = new SimpleQueryStringBuilder(\"test\");\n        simpleQueryStringBuilder.field(STRING_FIELD_NAME, 5);\n        simpleQueryStringBuilder.boost(2);\n        query = simpleQueryStringBuilder.toQuery(shardContext);\n        boostQuery = (BoostQuery) query;\n        assertThat(boostQuery.getBoost(), equalTo(2f));\n        assertThat(boostQuery.getQuery(), instanceOf(BoostQuery.class));\n        boostQuery = (BoostQuery) boostQuery.getQuery();\n        assertThat(boostQuery.getBoost(), equalTo(5f));\n        assertThat(boostQuery.getQuery(), instanceOf(TermQuery.class));\n    }\n","date":"2018-07-27 17:51:09","endLine":334,"groupId":"54035","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testToQueryBoost","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/a2/d6e3ab361b755a02b8edda861c1b0ce76e7279.src","preCode":"    public void testToQueryBoost() throws IOException {\n        assumeTrue(\"test runs only when at least a type is registered\", getCurrentTypes().length > 0);\n        QueryShardContext shardContext = createShardContext();\n        SimpleQueryStringBuilder simpleQueryStringBuilder = new SimpleQueryStringBuilder(\"test\");\n        simpleQueryStringBuilder.field(STRING_FIELD_NAME, 5);\n        Query query = simpleQueryStringBuilder.toQuery(shardContext);\n        assertThat(query, instanceOf(BoostQuery.class));\n        BoostQuery boostQuery = (BoostQuery) query;\n        assertThat(boostQuery.getBoost(), equalTo(5f));\n        assertThat(boostQuery.getQuery(), instanceOf(TermQuery.class));\n\n        simpleQueryStringBuilder = new SimpleQueryStringBuilder(\"test\");\n        simpleQueryStringBuilder.field(STRING_FIELD_NAME, 5);\n        simpleQueryStringBuilder.boost(2);\n        query = simpleQueryStringBuilder.toQuery(shardContext);\n        boostQuery = (BoostQuery) query;\n        assertThat(boostQuery.getBoost(), equalTo(2f));\n        assertThat(boostQuery.getQuery(), instanceOf(BoostQuery.class));\n        boostQuery = (BoostQuery) boostQuery.getQuery();\n        assertThat(boostQuery.getBoost(), equalTo(5f));\n        assertThat(boostQuery.getQuery(), instanceOf(TermQuery.class));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/index/query/SimpleQueryStringBuilderTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":314,"status":"M"},{"authorDate":"2018-07-27 17:51:09","commitOrder":2,"curCode":"    public void testToQueryBoost() throws IOException {\n        QueryShardContext shardContext = createShardContext();\n        MultiMatchQueryBuilder multiMatchQueryBuilder = new MultiMatchQueryBuilder(\"test\");\n        multiMatchQueryBuilder.field(STRING_FIELD_NAME, 5f);\n        Query query = multiMatchQueryBuilder.toQuery(shardContext);\n        assertTermOrBoostQuery(query, STRING_FIELD_NAME, \"test\", 5f);\n\n        multiMatchQueryBuilder = new MultiMatchQueryBuilder(\"test\");\n        multiMatchQueryBuilder.field(STRING_FIELD_NAME, 5f);\n        multiMatchQueryBuilder.boost(2f);\n        query = multiMatchQueryBuilder.toQuery(shardContext);\n        assertThat(query, instanceOf(BoostQuery.class));\n        BoostQuery boostQuery = (BoostQuery) query;\n        assertThat(boostQuery.getBoost(), equalTo(2f));\n        assertTermOrBoostQuery(boostQuery.getQuery(), STRING_FIELD_NAME, \"test\", 5f);\n    }\n","date":"2018-07-27 17:51:09","endLine":187,"groupId":"26054","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testToQueryBoost","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/e3/0cdaca40204ff2535233ebe1e814f7ff60e954.src","preCode":"    public void testToQueryBoost() throws IOException {\n        assumeTrue(\"test runs only when at least a type is registered\", getCurrentTypes().length > 0);\n        QueryShardContext shardContext = createShardContext();\n        MultiMatchQueryBuilder multiMatchQueryBuilder = new MultiMatchQueryBuilder(\"test\");\n        multiMatchQueryBuilder.field(STRING_FIELD_NAME, 5f);\n        Query query = multiMatchQueryBuilder.toQuery(shardContext);\n        assertTermOrBoostQuery(query, STRING_FIELD_NAME, \"test\", 5f);\n\n        multiMatchQueryBuilder = new MultiMatchQueryBuilder(\"test\");\n        multiMatchQueryBuilder.field(STRING_FIELD_NAME, 5f);\n        multiMatchQueryBuilder.boost(2f);\n        query = multiMatchQueryBuilder.toQuery(shardContext);\n        assertThat(query, instanceOf(BoostQuery.class));\n        BoostQuery boostQuery = (BoostQuery) query;\n        assertThat(boostQuery.getBoost(), equalTo(2f));\n        assertTermOrBoostQuery(boostQuery.getQuery(), STRING_FIELD_NAME, \"test\", 5f);\n    }\n","realPath":"server/src/test/java/org/elasticsearch/index/query/MultiMatchQueryBuilderTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":172,"status":"M"}],"commitId":"dfb277cfb7969ad543a31dea234579d0e886a73a","commitMessage":"@@@Merge branch 'master' into index-lifecycle\n","date":"2018-07-27 17:51:09","modifiedFileCount":"105","status":"M","submitter":"Colin Goodheart-Smithe"},{"authorTime":"2020-04-03 22:00:46","codes":[{"authorDate":"2020-04-03 22:00:46","commitOrder":3,"curCode":"    public void testToQueryBoost() throws IOException {\n        QueryShardContext shardContext = createShardContext();\n        SimpleQueryStringBuilder simpleQueryStringBuilder = new SimpleQueryStringBuilder(\"test\");\n        simpleQueryStringBuilder.field(TEXT_FIELD_NAME, 5);\n        Query query = simpleQueryStringBuilder.toQuery(shardContext);\n        assertThat(query, instanceOf(BoostQuery.class));\n        BoostQuery boostQuery = (BoostQuery) query;\n        assertThat(boostQuery.getBoost(), equalTo(5f));\n        assertThat(boostQuery.getQuery(), instanceOf(TermQuery.class));\n\n        simpleQueryStringBuilder = new SimpleQueryStringBuilder(\"test\");\n        simpleQueryStringBuilder.field(TEXT_FIELD_NAME, 5);\n        simpleQueryStringBuilder.boost(2);\n        query = simpleQueryStringBuilder.toQuery(shardContext);\n        boostQuery = (BoostQuery) query;\n        assertThat(boostQuery.getBoost(), equalTo(2f));\n        assertThat(boostQuery.getQuery(), instanceOf(BoostQuery.class));\n        boostQuery = (BoostQuery) boostQuery.getQuery();\n        assertThat(boostQuery.getBoost(), equalTo(5f));\n        assertThat(boostQuery.getQuery(), instanceOf(TermQuery.class));\n    }\n","date":"2020-04-03 22:00:46","endLine":335,"groupId":"54035","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testToQueryBoost","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/c0/24a79cf526a32058b972c3f07aea4d4785190f.src","preCode":"    public void testToQueryBoost() throws IOException {\n        QueryShardContext shardContext = createShardContext();\n        SimpleQueryStringBuilder simpleQueryStringBuilder = new SimpleQueryStringBuilder(\"test\");\n        simpleQueryStringBuilder.field(STRING_FIELD_NAME, 5);\n        Query query = simpleQueryStringBuilder.toQuery(shardContext);\n        assertThat(query, instanceOf(BoostQuery.class));\n        BoostQuery boostQuery = (BoostQuery) query;\n        assertThat(boostQuery.getBoost(), equalTo(5f));\n        assertThat(boostQuery.getQuery(), instanceOf(TermQuery.class));\n\n        simpleQueryStringBuilder = new SimpleQueryStringBuilder(\"test\");\n        simpleQueryStringBuilder.field(STRING_FIELD_NAME, 5);\n        simpleQueryStringBuilder.boost(2);\n        query = simpleQueryStringBuilder.toQuery(shardContext);\n        boostQuery = (BoostQuery) query;\n        assertThat(boostQuery.getBoost(), equalTo(2f));\n        assertThat(boostQuery.getQuery(), instanceOf(BoostQuery.class));\n        boostQuery = (BoostQuery) boostQuery.getQuery();\n        assertThat(boostQuery.getBoost(), equalTo(5f));\n        assertThat(boostQuery.getQuery(), instanceOf(TermQuery.class));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/index/query/SimpleQueryStringBuilderTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":315,"status":"M"},{"authorDate":"2020-04-03 22:00:46","commitOrder":3,"curCode":"    public void testToQueryBoost() throws IOException {\n        QueryShardContext shardContext = createShardContext();\n        MultiMatchQueryBuilder multiMatchQueryBuilder = new MultiMatchQueryBuilder(\"test\");\n        multiMatchQueryBuilder.field(TEXT_FIELD_NAME, 5f);\n        Query query = multiMatchQueryBuilder.toQuery(shardContext);\n        assertTermOrBoostQuery(query, TEXT_FIELD_NAME, \"test\", 5f);\n\n        multiMatchQueryBuilder = new MultiMatchQueryBuilder(\"test\");\n        multiMatchQueryBuilder.field(TEXT_FIELD_NAME, 5f);\n        multiMatchQueryBuilder.boost(2f);\n        query = multiMatchQueryBuilder.toQuery(shardContext);\n        assertThat(query, instanceOf(BoostQuery.class));\n        BoostQuery boostQuery = (BoostQuery) query;\n        assertThat(boostQuery.getBoost(), equalTo(2f));\n        assertTermOrBoostQuery(boostQuery.getQuery(), TEXT_FIELD_NAME, \"test\", 5f);\n    }\n","date":"2020-04-03 22:00:46","endLine":197,"groupId":"26054","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testToQueryBoost","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/4b/227541b3a9d022dfdc905e2b00e19d548e5786.src","preCode":"    public void testToQueryBoost() throws IOException {\n        QueryShardContext shardContext = createShardContext();\n        MultiMatchQueryBuilder multiMatchQueryBuilder = new MultiMatchQueryBuilder(\"test\");\n        multiMatchQueryBuilder.field(STRING_FIELD_NAME, 5f);\n        Query query = multiMatchQueryBuilder.toQuery(shardContext);\n        assertTermOrBoostQuery(query, STRING_FIELD_NAME, \"test\", 5f);\n\n        multiMatchQueryBuilder = new MultiMatchQueryBuilder(\"test\");\n        multiMatchQueryBuilder.field(STRING_FIELD_NAME, 5f);\n        multiMatchQueryBuilder.boost(2f);\n        query = multiMatchQueryBuilder.toQuery(shardContext);\n        assertThat(query, instanceOf(BoostQuery.class));\n        BoostQuery boostQuery = (BoostQuery) query;\n        assertThat(boostQuery.getBoost(), equalTo(2f));\n        assertTermOrBoostQuery(boostQuery.getQuery(), STRING_FIELD_NAME, \"test\", 5f);\n    }\n","realPath":"server/src/test/java/org/elasticsearch/index/query/MultiMatchQueryBuilderTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":182,"status":"M"}],"commitId":"f5759bb2092f1a957e79626c872c3f5707c1ee04","commitMessage":"@@@Rename field name constants in AbstractBuilderTestCase (#53234)\n\nSome field name constants were not updaten when we moved from \"string\" to \"text\"\nand \"keyword\" fields. Renaming them makes it easier and faster to know which\nfield type is used in test subclassing this base test case.","date":"2020-04-03 22:00:46","modifiedFileCount":"34","status":"M","submitter":"Christoph B?scher"},{"authorTime":"2021-01-15 01:11:59","codes":[{"authorDate":"2021-01-15 01:11:59","commitOrder":4,"curCode":"    public void testToQueryBoost() throws IOException {\n        SearchExecutionContext searchExecutionContext = createSearchExecutionContext();\n        SimpleQueryStringBuilder simpleQueryStringBuilder = new SimpleQueryStringBuilder(\"test\");\n        simpleQueryStringBuilder.field(TEXT_FIELD_NAME, 5);\n        Query query = simpleQueryStringBuilder.toQuery(searchExecutionContext);\n        assertThat(query, instanceOf(BoostQuery.class));\n        BoostQuery boostQuery = (BoostQuery) query;\n        assertThat(boostQuery.getBoost(), equalTo(5f));\n        assertThat(boostQuery.getQuery(), instanceOf(TermQuery.class));\n\n        simpleQueryStringBuilder = new SimpleQueryStringBuilder(\"test\");\n        simpleQueryStringBuilder.field(TEXT_FIELD_NAME, 5);\n        simpleQueryStringBuilder.boost(2);\n        query = simpleQueryStringBuilder.toQuery(searchExecutionContext);\n        boostQuery = (BoostQuery) query;\n        assertThat(boostQuery.getBoost(), equalTo(2f));\n        assertThat(boostQuery.getQuery(), instanceOf(BoostQuery.class));\n        boostQuery = (BoostQuery) boostQuery.getQuery();\n        assertThat(boostQuery.getBoost(), equalTo(5f));\n        assertThat(boostQuery.getQuery(), instanceOf(TermQuery.class));\n    }\n","date":"2021-01-15 01:11:59","endLine":335,"groupId":"103297","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"testToQueryBoost","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/f6/a18686011df0b5c9401cd81a33ca2570763708.src","preCode":"    public void testToQueryBoost() throws IOException {\n        QueryShardContext shardContext = createShardContext();\n        SimpleQueryStringBuilder simpleQueryStringBuilder = new SimpleQueryStringBuilder(\"test\");\n        simpleQueryStringBuilder.field(TEXT_FIELD_NAME, 5);\n        Query query = simpleQueryStringBuilder.toQuery(shardContext);\n        assertThat(query, instanceOf(BoostQuery.class));\n        BoostQuery boostQuery = (BoostQuery) query;\n        assertThat(boostQuery.getBoost(), equalTo(5f));\n        assertThat(boostQuery.getQuery(), instanceOf(TermQuery.class));\n\n        simpleQueryStringBuilder = new SimpleQueryStringBuilder(\"test\");\n        simpleQueryStringBuilder.field(TEXT_FIELD_NAME, 5);\n        simpleQueryStringBuilder.boost(2);\n        query = simpleQueryStringBuilder.toQuery(shardContext);\n        boostQuery = (BoostQuery) query;\n        assertThat(boostQuery.getBoost(), equalTo(2f));\n        assertThat(boostQuery.getQuery(), instanceOf(BoostQuery.class));\n        boostQuery = (BoostQuery) boostQuery.getQuery();\n        assertThat(boostQuery.getBoost(), equalTo(5f));\n        assertThat(boostQuery.getQuery(), instanceOf(TermQuery.class));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/index/query/SimpleQueryStringBuilderTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":315,"status":"M"},{"authorDate":"2021-01-15 01:11:59","commitOrder":4,"curCode":"    public void testToQueryBoost() throws IOException {\n        SearchExecutionContext searchExecutionContext = createSearchExecutionContext();\n        MultiMatchQueryBuilder multiMatchQueryBuilder = new MultiMatchQueryBuilder(\"test\");\n        multiMatchQueryBuilder.field(TEXT_FIELD_NAME, 5f);\n        Query query = multiMatchQueryBuilder.toQuery(searchExecutionContext);\n        assertTermOrBoostQuery(query, TEXT_FIELD_NAME, \"test\", 5f);\n\n        multiMatchQueryBuilder = new MultiMatchQueryBuilder(\"test\");\n        multiMatchQueryBuilder.field(TEXT_FIELD_NAME, 5f);\n        multiMatchQueryBuilder.boost(2f);\n        query = multiMatchQueryBuilder.toQuery(searchExecutionContext);\n        assertThat(query, instanceOf(BoostQuery.class));\n        BoostQuery boostQuery = (BoostQuery) query;\n        assertThat(boostQuery.getBoost(), equalTo(2f));\n        assertTermOrBoostQuery(boostQuery.getQuery(), TEXT_FIELD_NAME, \"test\", 5f);\n    }\n","date":"2021-01-15 01:11:59","endLine":198,"groupId":"103297","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"testToQueryBoost","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/d2/c52824fefbdd7894f0f7f5324cc199b7229240.src","preCode":"    public void testToQueryBoost() throws IOException {\n        QueryShardContext shardContext = createShardContext();\n        MultiMatchQueryBuilder multiMatchQueryBuilder = new MultiMatchQueryBuilder(\"test\");\n        multiMatchQueryBuilder.field(TEXT_FIELD_NAME, 5f);\n        Query query = multiMatchQueryBuilder.toQuery(shardContext);\n        assertTermOrBoostQuery(query, TEXT_FIELD_NAME, \"test\", 5f);\n\n        multiMatchQueryBuilder = new MultiMatchQueryBuilder(\"test\");\n        multiMatchQueryBuilder.field(TEXT_FIELD_NAME, 5f);\n        multiMatchQueryBuilder.boost(2f);\n        query = multiMatchQueryBuilder.toQuery(shardContext);\n        assertThat(query, instanceOf(BoostQuery.class));\n        BoostQuery boostQuery = (BoostQuery) query;\n        assertThat(boostQuery.getBoost(), equalTo(2f));\n        assertTermOrBoostQuery(boostQuery.getQuery(), TEXT_FIELD_NAME, \"test\", 5f);\n    }\n","realPath":"server/src/test/java/org/elasticsearch/index/query/MultiMatchQueryBuilderTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":183,"status":"M"}],"commitId":"5852fbedf52c77b0a76c2c731fdd4982fb65cd87","commitMessage":"@@@Rename QueryShardContext -> SearchExecutionContext. (#67490)\n\nWe decided to rename `QueryShardContext` to clarify that it supports all parts\nof search request execution. Before there was confusion over whether it should\nonly be used for building queries.  or maybe only used in the query phase. This\nPR also updates the javadocs.\n\nCloses #64740.","date":"2021-01-15 01:11:59","modifiedFileCount":"357","status":"M","submitter":"Julie Tibshirani"}]
