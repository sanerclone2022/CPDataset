[{"authorTime":"2018-04-26 03:22:53","codes":[{"authorDate":"2018-04-26 03:22:53","commitOrder":1,"curCode":"    public void testBasics() throws Exception {\n        indexRandom(true,\n                client().prepareIndex(\"test\", \"test\", \"1\").setSource(\"foo\", \"a\"),\n                client().prepareIndex(\"test\", \"test\", \"2\").setSource(\"foo\", \"a\"),\n                client().prepareIndex(\"test\", \"test\", \"3\").setSource(\"foo\", \"b\"),\n                client().prepareIndex(\"test\", \"test\", \"4\").setSource(\"foo\", \"c\"),\n                client().prepareIndex(\"test\", \"test\", \"5\").setSource(\"foo\", \"d\"),\n                client().prepareIndex(\"test\", \"test\", \"6\").setSource(\"foo\", \"e\"),\n                client().prepareIndex(\"test\", \"test\", \"7\").setSource(\"foo\", \"f\")\n        );\n\n        assertHitCount(client().prepareSearch(\"test\").setTypes(\"test\").setSize(0).get(), 7);\n\n        \r\n        assertThat(deleteByQuery().source(\"test\").filter(termQuery(\"foo\", \"a\")).refresh(true).get(), matcher().deleted(2));\n        assertHitCount(client().prepareSearch(\"test\").setTypes(\"test\").setSize(0).get(), 5);\n\n        \r\n        DeleteByQueryRequestBuilder request = deleteByQuery().source(\"test\").filter(QueryBuilders.matchAllQuery()).size(2).refresh(true);\n        request.source().addSort(\"foo.keyword\", SortOrder.ASC);\n        assertThat(request.get(), matcher().deleted(2));\n        assertHitCount(client().prepareSearch(\"test\").setTypes(\"test\").setSize(0).get(), 3);\n\n        \r\n        assertThat(deleteByQuery().source(\"test\").filter(termQuery(\"foo\", \"no_match\")).refresh(true).get(), matcher().deleted(0));\n        assertHitCount(client().prepareSearch(\"test\").setTypes(\"test\").setSize(0).get(), 3);\n\n        \r\n        assertThat(deleteByQuery().source(\"test\").filter(QueryBuilders.matchAllQuery()).refresh(true).get(), matcher().deleted(3));\n        assertHitCount(client().prepareSearch(\"test\").setTypes(\"test\").setSize(0).get(), 0);\n    }\n","date":"2018-04-26 03:22:53","endLine":86,"groupId":"57621","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testBasics","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/df/165ca12e7a4dba16f50c1ad37aebce4c20a569.src","preCode":"    public void testBasics() throws Exception {\n        indexRandom(true,\n                client().prepareIndex(\"test\", \"test\", \"1\").setSource(\"foo\", \"a\"),\n                client().prepareIndex(\"test\", \"test\", \"2\").setSource(\"foo\", \"a\"),\n                client().prepareIndex(\"test\", \"test\", \"3\").setSource(\"foo\", \"b\"),\n                client().prepareIndex(\"test\", \"test\", \"4\").setSource(\"foo\", \"c\"),\n                client().prepareIndex(\"test\", \"test\", \"5\").setSource(\"foo\", \"d\"),\n                client().prepareIndex(\"test\", \"test\", \"6\").setSource(\"foo\", \"e\"),\n                client().prepareIndex(\"test\", \"test\", \"7\").setSource(\"foo\", \"f\")\n        );\n\n        assertHitCount(client().prepareSearch(\"test\").setTypes(\"test\").setSize(0).get(), 7);\n\n        \r\n        assertThat(deleteByQuery().source(\"test\").filter(termQuery(\"foo\", \"a\")).refresh(true).get(), matcher().deleted(2));\n        assertHitCount(client().prepareSearch(\"test\").setTypes(\"test\").setSize(0).get(), 5);\n\n        \r\n        DeleteByQueryRequestBuilder request = deleteByQuery().source(\"test\").filter(QueryBuilders.matchAllQuery()).size(2).refresh(true);\n        request.source().addSort(\"foo.keyword\", SortOrder.ASC);\n        assertThat(request.get(), matcher().deleted(2));\n        assertHitCount(client().prepareSearch(\"test\").setTypes(\"test\").setSize(0).get(), 3);\n\n        \r\n        assertThat(deleteByQuery().source(\"test\").filter(termQuery(\"foo\", \"no_match\")).refresh(true).get(), matcher().deleted(0));\n        assertHitCount(client().prepareSearch(\"test\").setTypes(\"test\").setSize(0).get(), 3);\n\n        \r\n        assertThat(deleteByQuery().source(\"test\").filter(QueryBuilders.matchAllQuery()).refresh(true).get(), matcher().deleted(3));\n        assertHitCount(client().prepareSearch(\"test\").setTypes(\"test\").setSize(0).get(), 0);\n    }\n","realPath":"modules/reindex/src/test/java/org/elasticsearch/index/reindex/DeleteByQueryBasicTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":56,"status":"B"},{"authorDate":"2018-04-26 03:22:53","commitOrder":1,"curCode":"    public void testSlices() throws Exception {\n        indexRandom(true,\n                client().prepareIndex(\"test\", \"test\", \"1\").setSource(\"foo\", \"a\"),\n                client().prepareIndex(\"test\", \"test\", \"2\").setSource(\"foo\", \"a\"),\n                client().prepareIndex(\"test\", \"test\", \"3\").setSource(\"foo\", \"b\"),\n                client().prepareIndex(\"test\", \"test\", \"4\").setSource(\"foo\", \"c\"),\n                client().prepareIndex(\"test\", \"test\", \"5\").setSource(\"foo\", \"d\"),\n                client().prepareIndex(\"test\", \"test\", \"6\").setSource(\"foo\", \"e\"),\n                client().prepareIndex(\"test\", \"test\", \"7\").setSource(\"foo\", \"f\")\n        );\n        assertHitCount(client().prepareSearch(\"test\").setTypes(\"test\").setSize(0).get(), 7);\n\n        int slices = randomSlices();\n        int expectedSlices = expectedSliceStatuses(slices, \"test\");\n\n        \r\n        assertThat(\n            deleteByQuery()\n                .source(\"test\")\n                .filter(termQuery(\"foo\", \"a\"))\n                .refresh(true)\n                .setSlices(slices).get(),\n            matcher()\n                .deleted(2)\n                .slices(hasSize(expectedSlices)));\n        assertHitCount(client().prepareSearch(\"test\").setTypes(\"test\").setSize(0).get(), 5);\n\n        \r\n        assertThat(\n            deleteByQuery()\n                .source(\"test\")\n                .filter(QueryBuilders.matchAllQuery())\n                .refresh(true)\n                .setSlices(slices).get(),\n            matcher()\n                .deleted(5)\n                .slices(hasSize(expectedSlices)));\n        assertHitCount(client().prepareSearch(\"test\").setTypes(\"test\").setSize(0).get(), 0);\n    }\n","date":"2018-04-26 03:22:53","endLine":268,"groupId":"57621","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testSlices","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/df/165ca12e7a4dba16f50c1ad37aebce4c20a569.src","preCode":"    public void testSlices() throws Exception {\n        indexRandom(true,\n                client().prepareIndex(\"test\", \"test\", \"1\").setSource(\"foo\", \"a\"),\n                client().prepareIndex(\"test\", \"test\", \"2\").setSource(\"foo\", \"a\"),\n                client().prepareIndex(\"test\", \"test\", \"3\").setSource(\"foo\", \"b\"),\n                client().prepareIndex(\"test\", \"test\", \"4\").setSource(\"foo\", \"c\"),\n                client().prepareIndex(\"test\", \"test\", \"5\").setSource(\"foo\", \"d\"),\n                client().prepareIndex(\"test\", \"test\", \"6\").setSource(\"foo\", \"e\"),\n                client().prepareIndex(\"test\", \"test\", \"7\").setSource(\"foo\", \"f\")\n        );\n        assertHitCount(client().prepareSearch(\"test\").setTypes(\"test\").setSize(0).get(), 7);\n\n        int slices = randomSlices();\n        int expectedSlices = expectedSliceStatuses(slices, \"test\");\n\n        \r\n        assertThat(\n            deleteByQuery()\n                .source(\"test\")\n                .filter(termQuery(\"foo\", \"a\"))\n                .refresh(true)\n                .setSlices(slices).get(),\n            matcher()\n                .deleted(2)\n                .slices(hasSize(expectedSlices)));\n        assertHitCount(client().prepareSearch(\"test\").setTypes(\"test\").setSize(0).get(), 5);\n\n        \r\n        assertThat(\n            deleteByQuery()\n                .source(\"test\")\n                .filter(QueryBuilders.matchAllQuery())\n                .refresh(true)\n                .setSlices(slices).get(),\n            matcher()\n                .deleted(5)\n                .slices(hasSize(expectedSlices)));\n        assertHitCount(client().prepareSearch(\"test\").setTypes(\"test\").setSize(0).get(), 0);\n    }\n","realPath":"modules/reindex/src/test/java/org/elasticsearch/index/reindex/DeleteByQueryBasicTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":230,"status":"B"}],"commitId":"d74fb9eb4559077e2d20b19a9ed62d9ff825027a","commitMessage":"@@@Opened x-pack ILM code\n","date":"2018-04-26 03:22:53","modifiedFileCount":"0","status":"B","submitter":"Tal Levy"},{"authorTime":"2019-05-29 15:50:30","codes":[{"authorDate":"2019-05-29 15:50:30","commitOrder":2,"curCode":"    public void testBasics() throws Exception {\n        indexRandom(true,\n                client().prepareIndex(\"test\", \"test\", \"1\").setSource(\"foo\", \"a\"),\n                client().prepareIndex(\"test\", \"test\", \"2\").setSource(\"foo\", \"a\"),\n                client().prepareIndex(\"test\", \"test\", \"3\").setSource(\"foo\", \"b\"),\n                client().prepareIndex(\"test\", \"test\", \"4\").setSource(\"foo\", \"c\"),\n                client().prepareIndex(\"test\", \"test\", \"5\").setSource(\"foo\", \"d\"),\n                client().prepareIndex(\"test\", \"test\", \"6\").setSource(\"foo\", \"e\"),\n                client().prepareIndex(\"test\", \"test\", \"7\").setSource(\"foo\", \"f\")\n        );\n\n        assertHitCount(client().prepareSearch(\"test\").setSize(0).get(), 7);\n\n        \r\n        assertThat(deleteByQuery().source(\"test\").filter(termQuery(\"foo\", \"a\")).refresh(true).get(), matcher().deleted(2));\n        assertHitCount(client().prepareSearch(\"test\").setSize(0).get(), 5);\n\n        \r\n        DeleteByQueryRequestBuilder request = deleteByQuery().source(\"test\").filter(QueryBuilders.matchAllQuery()).size(2).refresh(true);\n        request.source().addSort(\"foo.keyword\", SortOrder.ASC);\n        assertThat(request.get(), matcher().deleted(2));\n        assertHitCount(client().prepareSearch(\"test\").setSize(0).get(), 3);\n\n        \r\n        assertThat(deleteByQuery().source(\"test\").filter(termQuery(\"foo\", \"no_match\")).refresh(true).get(), matcher().deleted(0));\n        assertHitCount(client().prepareSearch(\"test\").setSize(0).get(), 3);\n\n        \r\n        assertThat(deleteByQuery().source(\"test\").filter(QueryBuilders.matchAllQuery()).refresh(true).get(), matcher().deleted(3));\n        assertHitCount(client().prepareSearch(\"test\").setSize(0).get(), 0);\n    }\n","date":"2019-05-29 15:50:30","endLine":85,"groupId":"45097","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testBasics","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/7d/115ecef4ea9384da992a460f99c885340bb976.src","preCode":"    public void testBasics() throws Exception {\n        indexRandom(true,\n                client().prepareIndex(\"test\", \"test\", \"1\").setSource(\"foo\", \"a\"),\n                client().prepareIndex(\"test\", \"test\", \"2\").setSource(\"foo\", \"a\"),\n                client().prepareIndex(\"test\", \"test\", \"3\").setSource(\"foo\", \"b\"),\n                client().prepareIndex(\"test\", \"test\", \"4\").setSource(\"foo\", \"c\"),\n                client().prepareIndex(\"test\", \"test\", \"5\").setSource(\"foo\", \"d\"),\n                client().prepareIndex(\"test\", \"test\", \"6\").setSource(\"foo\", \"e\"),\n                client().prepareIndex(\"test\", \"test\", \"7\").setSource(\"foo\", \"f\")\n        );\n\n        assertHitCount(client().prepareSearch(\"test\").setTypes(\"test\").setSize(0).get(), 7);\n\n        \r\n        assertThat(deleteByQuery().source(\"test\").filter(termQuery(\"foo\", \"a\")).refresh(true).get(), matcher().deleted(2));\n        assertHitCount(client().prepareSearch(\"test\").setTypes(\"test\").setSize(0).get(), 5);\n\n        \r\n        DeleteByQueryRequestBuilder request = deleteByQuery().source(\"test\").filter(QueryBuilders.matchAllQuery()).size(2).refresh(true);\n        request.source().addSort(\"foo.keyword\", SortOrder.ASC);\n        assertThat(request.get(), matcher().deleted(2));\n        assertHitCount(client().prepareSearch(\"test\").setTypes(\"test\").setSize(0).get(), 3);\n\n        \r\n        assertThat(deleteByQuery().source(\"test\").filter(termQuery(\"foo\", \"no_match\")).refresh(true).get(), matcher().deleted(0));\n        assertHitCount(client().prepareSearch(\"test\").setTypes(\"test\").setSize(0).get(), 3);\n\n        \r\n        assertThat(deleteByQuery().source(\"test\").filter(QueryBuilders.matchAllQuery()).refresh(true).get(), matcher().deleted(3));\n        assertHitCount(client().prepareSearch(\"test\").setTypes(\"test\").setSize(0).get(), 0);\n    }\n","realPath":"modules/reindex/src/test/java/org/elasticsearch/index/reindex/DeleteByQueryBasicTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":55,"status":"M"},{"authorDate":"2019-05-29 15:50:30","commitOrder":2,"curCode":"    public void testSlices() throws Exception {\n        indexRandom(true,\n                client().prepareIndex(\"test\", \"test\", \"1\").setSource(\"foo\", \"a\"),\n                client().prepareIndex(\"test\", \"test\", \"2\").setSource(\"foo\", \"a\"),\n                client().prepareIndex(\"test\", \"test\", \"3\").setSource(\"foo\", \"b\"),\n                client().prepareIndex(\"test\", \"test\", \"4\").setSource(\"foo\", \"c\"),\n                client().prepareIndex(\"test\", \"test\", \"5\").setSource(\"foo\", \"d\"),\n                client().prepareIndex(\"test\", \"test\", \"6\").setSource(\"foo\", \"e\"),\n                client().prepareIndex(\"test\", \"test\", \"7\").setSource(\"foo\", \"f\")\n        );\n        assertHitCount(client().prepareSearch(\"test\").setSize(0).get(), 7);\n\n        int slices = randomSlices();\n        int expectedSlices = expectedSliceStatuses(slices, \"test\");\n\n        \r\n        assertThat(\n            deleteByQuery()\n                .source(\"test\")\n                .filter(termQuery(\"foo\", \"a\"))\n                .refresh(true)\n                .setSlices(slices).get(),\n            matcher()\n                .deleted(2)\n                .slices(hasSize(expectedSlices)));\n        assertHitCount(client().prepareSearch(\"test\").setSize(0).get(), 5);\n\n        \r\n        assertThat(\n            deleteByQuery()\n                .source(\"test\")\n                .filter(QueryBuilders.matchAllQuery())\n                .refresh(true)\n                .setSlices(slices).get(),\n            matcher()\n                .deleted(5)\n                .slices(hasSize(expectedSlices)));\n        assertHitCount(client().prepareSearch(\"test\").setSize(0).get(), 0);\n    }\n","date":"2019-05-29 15:50:30","endLine":267,"groupId":"45105","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testSlices","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/7d/115ecef4ea9384da992a460f99c885340bb976.src","preCode":"    public void testSlices() throws Exception {\n        indexRandom(true,\n                client().prepareIndex(\"test\", \"test\", \"1\").setSource(\"foo\", \"a\"),\n                client().prepareIndex(\"test\", \"test\", \"2\").setSource(\"foo\", \"a\"),\n                client().prepareIndex(\"test\", \"test\", \"3\").setSource(\"foo\", \"b\"),\n                client().prepareIndex(\"test\", \"test\", \"4\").setSource(\"foo\", \"c\"),\n                client().prepareIndex(\"test\", \"test\", \"5\").setSource(\"foo\", \"d\"),\n                client().prepareIndex(\"test\", \"test\", \"6\").setSource(\"foo\", \"e\"),\n                client().prepareIndex(\"test\", \"test\", \"7\").setSource(\"foo\", \"f\")\n        );\n        assertHitCount(client().prepareSearch(\"test\").setTypes(\"test\").setSize(0).get(), 7);\n\n        int slices = randomSlices();\n        int expectedSlices = expectedSliceStatuses(slices, \"test\");\n\n        \r\n        assertThat(\n            deleteByQuery()\n                .source(\"test\")\n                .filter(termQuery(\"foo\", \"a\"))\n                .refresh(true)\n                .setSlices(slices).get(),\n            matcher()\n                .deleted(2)\n                .slices(hasSize(expectedSlices)));\n        assertHitCount(client().prepareSearch(\"test\").setTypes(\"test\").setSize(0).get(), 5);\n\n        \r\n        assertThat(\n            deleteByQuery()\n                .source(\"test\")\n                .filter(QueryBuilders.matchAllQuery())\n                .refresh(true)\n                .setSlices(slices).get(),\n            matcher()\n                .deleted(5)\n                .slices(hasSize(expectedSlices)));\n        assertHitCount(client().prepareSearch(\"test\").setTypes(\"test\").setSize(0).get(), 0);\n    }\n","realPath":"modules/reindex/src/test/java/org/elasticsearch/index/reindex/DeleteByQueryBasicTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":229,"status":"M"}],"commitId":"3f10cea87ac658b037a256bbf99b62e5dcae05b3","commitMessage":"@@@Removes types from SearchRequest and QueryShardContext (#42112)\n\n\n","date":"2019-05-29 15:50:30","modifiedFileCount":"112","status":"M","submitter":"Colin Goodheart-Smithe"},{"authorTime":"2019-10-25 18:09:52","codes":[{"authorDate":"2019-10-25 18:09:52","commitOrder":3,"curCode":"    public void testBasics() throws Exception {\n        indexRandom(true,\n                client().prepareIndex(\"test\").setId(\"1\").setSource(\"foo\", \"a\"),\n                client().prepareIndex(\"test\").setId(\"2\").setSource(\"foo\", \"a\"),\n                client().prepareIndex(\"test\").setId(\"3\").setSource(\"foo\", \"b\"),\n                client().prepareIndex(\"test\").setId(\"4\").setSource(\"foo\", \"c\"),\n                client().prepareIndex(\"test\").setId(\"5\").setSource(\"foo\", \"d\"),\n                client().prepareIndex(\"test\").setId(\"6\").setSource(\"foo\", \"e\"),\n                client().prepareIndex(\"test\").setId(\"7\").setSource(\"foo\", \"f\")\n        );\n\n        assertHitCount(client().prepareSearch(\"test\").setSize(0).get(), 7);\n\n        \r\n        assertThat(deleteByQuery().source(\"test\").filter(termQuery(\"foo\", \"a\")).refresh(true).get(), matcher().deleted(2));\n        assertHitCount(client().prepareSearch(\"test\").setSize(0).get(), 5);\n\n        \r\n        DeleteByQueryRequestBuilder request = deleteByQuery().source(\"test\").filter(QueryBuilders.matchAllQuery()).size(2).refresh(true);\n        request.source().addSort(\"foo.keyword\", SortOrder.ASC);\n        assertThat(request.get(), matcher().deleted(2));\n        assertHitCount(client().prepareSearch(\"test\").setSize(0).get(), 3);\n\n        \r\n        assertThat(deleteByQuery().source(\"test\").filter(termQuery(\"foo\", \"no_match\")).refresh(true).get(), matcher().deleted(0));\n        assertHitCount(client().prepareSearch(\"test\").setSize(0).get(), 3);\n\n        \r\n        assertThat(deleteByQuery().source(\"test\").filter(QueryBuilders.matchAllQuery()).refresh(true).get(), matcher().deleted(3));\n        assertHitCount(client().prepareSearch(\"test\").setSize(0).get(), 0);\n    }\n","date":"2019-10-25 18:09:52","endLine":85,"groupId":"10249","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testBasics","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/7d/e95cafda3e6a04828b9cf01c12e706fd22a4c8.src","preCode":"    public void testBasics() throws Exception {\n        indexRandom(true,\n                client().prepareIndex(\"test\", \"test\", \"1\").setSource(\"foo\", \"a\"),\n                client().prepareIndex(\"test\", \"test\", \"2\").setSource(\"foo\", \"a\"),\n                client().prepareIndex(\"test\", \"test\", \"3\").setSource(\"foo\", \"b\"),\n                client().prepareIndex(\"test\", \"test\", \"4\").setSource(\"foo\", \"c\"),\n                client().prepareIndex(\"test\", \"test\", \"5\").setSource(\"foo\", \"d\"),\n                client().prepareIndex(\"test\", \"test\", \"6\").setSource(\"foo\", \"e\"),\n                client().prepareIndex(\"test\", \"test\", \"7\").setSource(\"foo\", \"f\")\n        );\n\n        assertHitCount(client().prepareSearch(\"test\").setSize(0).get(), 7);\n\n        \r\n        assertThat(deleteByQuery().source(\"test\").filter(termQuery(\"foo\", \"a\")).refresh(true).get(), matcher().deleted(2));\n        assertHitCount(client().prepareSearch(\"test\").setSize(0).get(), 5);\n\n        \r\n        DeleteByQueryRequestBuilder request = deleteByQuery().source(\"test\").filter(QueryBuilders.matchAllQuery()).size(2).refresh(true);\n        request.source().addSort(\"foo.keyword\", SortOrder.ASC);\n        assertThat(request.get(), matcher().deleted(2));\n        assertHitCount(client().prepareSearch(\"test\").setSize(0).get(), 3);\n\n        \r\n        assertThat(deleteByQuery().source(\"test\").filter(termQuery(\"foo\", \"no_match\")).refresh(true).get(), matcher().deleted(0));\n        assertHitCount(client().prepareSearch(\"test\").setSize(0).get(), 3);\n\n        \r\n        assertThat(deleteByQuery().source(\"test\").filter(QueryBuilders.matchAllQuery()).refresh(true).get(), matcher().deleted(3));\n        assertHitCount(client().prepareSearch(\"test\").setSize(0).get(), 0);\n    }\n","realPath":"modules/reindex/src/test/java/org/elasticsearch/index/reindex/DeleteByQueryBasicTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":55,"status":"M"},{"authorDate":"2019-10-25 18:09:52","commitOrder":3,"curCode":"    public void testSlices() throws Exception {\n        indexRandom(true,\n                client().prepareIndex(\"test\").setId(\"1\").setSource(\"foo\", \"a\"),\n                client().prepareIndex(\"test\").setId(\"2\").setSource(\"foo\", \"a\"),\n                client().prepareIndex(\"test\").setId(\"3\").setSource(\"foo\", \"b\"),\n                client().prepareIndex(\"test\").setId(\"4\").setSource(\"foo\", \"c\"),\n                client().prepareIndex(\"test\").setId(\"5\").setSource(\"foo\", \"d\"),\n                client().prepareIndex(\"test\").setId(\"6\").setSource(\"foo\", \"e\"),\n                client().prepareIndex(\"test\").setId(\"7\").setSource(\"foo\", \"f\")\n        );\n        assertHitCount(client().prepareSearch(\"test\").setSize(0).get(), 7);\n\n        int slices = randomSlices();\n        int expectedSlices = expectedSliceStatuses(slices, \"test\");\n\n        \r\n        assertThat(\n            deleteByQuery()\n                .source(\"test\")\n                .filter(termQuery(\"foo\", \"a\"))\n                .refresh(true)\n                .setSlices(slices).get(),\n            matcher()\n                .deleted(2)\n                .slices(hasSize(expectedSlices)));\n        assertHitCount(client().prepareSearch(\"test\").setSize(0).get(), 5);\n\n        \r\n        assertThat(\n            deleteByQuery()\n                .source(\"test\")\n                .filter(QueryBuilders.matchAllQuery())\n                .refresh(true)\n                .setSlices(slices).get(),\n            matcher()\n                .deleted(5)\n                .slices(hasSize(expectedSlices)));\n        assertHitCount(client().prepareSearch(\"test\").setSize(0).get(), 0);\n    }\n","date":"2019-10-25 18:09:52","endLine":267,"groupId":"10249","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testSlices","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/7d/e95cafda3e6a04828b9cf01c12e706fd22a4c8.src","preCode":"    public void testSlices() throws Exception {\n        indexRandom(true,\n                client().prepareIndex(\"test\", \"test\", \"1\").setSource(\"foo\", \"a\"),\n                client().prepareIndex(\"test\", \"test\", \"2\").setSource(\"foo\", \"a\"),\n                client().prepareIndex(\"test\", \"test\", \"3\").setSource(\"foo\", \"b\"),\n                client().prepareIndex(\"test\", \"test\", \"4\").setSource(\"foo\", \"c\"),\n                client().prepareIndex(\"test\", \"test\", \"5\").setSource(\"foo\", \"d\"),\n                client().prepareIndex(\"test\", \"test\", \"6\").setSource(\"foo\", \"e\"),\n                client().prepareIndex(\"test\", \"test\", \"7\").setSource(\"foo\", \"f\")\n        );\n        assertHitCount(client().prepareSearch(\"test\").setSize(0).get(), 7);\n\n        int slices = randomSlices();\n        int expectedSlices = expectedSliceStatuses(slices, \"test\");\n\n        \r\n        assertThat(\n            deleteByQuery()\n                .source(\"test\")\n                .filter(termQuery(\"foo\", \"a\"))\n                .refresh(true)\n                .setSlices(slices).get(),\n            matcher()\n                .deleted(2)\n                .slices(hasSize(expectedSlices)));\n        assertHitCount(client().prepareSearch(\"test\").setSize(0).get(), 5);\n\n        \r\n        assertThat(\n            deleteByQuery()\n                .source(\"test\")\n                .filter(QueryBuilders.matchAllQuery())\n                .refresh(true)\n                .setSlices(slices).get(),\n            matcher()\n                .deleted(5)\n                .slices(hasSize(expectedSlices)));\n        assertHitCount(client().prepareSearch(\"test\").setSize(0).get(), 0);\n    }\n","realPath":"modules/reindex/src/test/java/org/elasticsearch/index/reindex/DeleteByQueryBasicTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":229,"status":"M"}],"commitId":"750c6d8bb1c751774f01fd12778f8bcc0a6f4d57","commitMessage":"@@@Remove Client.prepareIndex(index.  type.  id) method (#48443)\n\nAs types are no longer used in index requests.  we can remove the type parameter\nfrom `prepareIndex` methods in the `Client` interface. However.  just changing the signature\nof `prepareIndex(index.  type.  id)` to `prepareIndex(index.  id)` risks confusion when\nupgrading with the previous (now removed) `prepareIndex(index.  type)` method -\njust changing the dependency version of java code would end up silently changing the\nsemantics of the method call. Instead we should just remove this method entirely.  and\nreplace it by calling `prepareIndex(index).setId(id)`","date":"2019-10-25 18:09:52","modifiedFileCount":"267","status":"M","submitter":"Alan Woodward"}]
