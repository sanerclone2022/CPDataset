[{"authorTime":"2019-04-15 22:35:20","codes":[{"authorDate":"2019-04-15 22:35:20","commitOrder":1,"curCode":"    public void testReturnsObjectArray() {\n\n        MultiBucketsAggregation agg = new MultiBucketsAggregation() {\n            @Override\n            public List<? extends Bucket> getBuckets() {\n                return null;\n            }\n\n            @Override\n            public String getName() {\n                return \"foo\";\n            }\n\n            @Override\n            public String getType() {\n                return null;\n            }\n\n            @Override\n            public Map<String, Object> getMetaData() {\n                return null;\n            }\n\n            @Override\n            public XContentBuilder toXContent(XContentBuilder builder, Params params) throws IOException {\n                return null;\n            }\n        };\n\n        InternalMultiBucketAggregation.InternalBucket bucket = new InternalMultiBucketAggregation.InternalBucket() {\n            @Override\n            public void writeTo(StreamOutput out) throws IOException {\n\n            }\n\n            @Override\n            public Object getKey() {\n                return null;\n            }\n\n            @Override\n            public String getKeyAsString() {\n                return null;\n            }\n\n            @Override\n            public long getDocCount() {\n                return 0;\n            }\n\n            @Override\n            public Aggregations getAggregations() {\n                return null;\n            }\n\n            @Override\n            public XContentBuilder toXContent(XContentBuilder builder, Params params) throws IOException {\n                return null;\n            }\n\n            @Override\n            public Object getProperty(String containingAggName, List<String> path) {\n                return new Object[0];\n            }\n        };\n\n        AggregationExecutionException e = expectThrows(AggregationExecutionException.class,\n            () -> BucketHelpers.resolveBucketValue(agg, bucket, \"foo>bar\", BucketHelpers.GapPolicy.SKIP));\n\n        assertThat(e.getMessage(), equalTo(\"buckets_path must reference either a number value or a single value numeric \" +\n            \"metric aggregation, got: [Object[]] at aggregation [foo]\"));\n    }\n","date":"2019-04-15 22:35:20","endLine":111,"groupId":"26358","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testReturnsObjectArray","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/fb/f8ad9d65a2193bf50d03cd98258e633fe584d3.src","preCode":"    public void testReturnsObjectArray() {\n\n        MultiBucketsAggregation agg = new MultiBucketsAggregation() {\n            @Override\n            public List<? extends Bucket> getBuckets() {\n                return null;\n            }\n\n            @Override\n            public String getName() {\n                return \"foo\";\n            }\n\n            @Override\n            public String getType() {\n                return null;\n            }\n\n            @Override\n            public Map<String, Object> getMetaData() {\n                return null;\n            }\n\n            @Override\n            public XContentBuilder toXContent(XContentBuilder builder, Params params) throws IOException {\n                return null;\n            }\n        };\n\n        InternalMultiBucketAggregation.InternalBucket bucket = new InternalMultiBucketAggregation.InternalBucket() {\n            @Override\n            public void writeTo(StreamOutput out) throws IOException {\n\n            }\n\n            @Override\n            public Object getKey() {\n                return null;\n            }\n\n            @Override\n            public String getKeyAsString() {\n                return null;\n            }\n\n            @Override\n            public long getDocCount() {\n                return 0;\n            }\n\n            @Override\n            public Aggregations getAggregations() {\n                return null;\n            }\n\n            @Override\n            public XContentBuilder toXContent(XContentBuilder builder, Params params) throws IOException {\n                return null;\n            }\n\n            @Override\n            public Object getProperty(String containingAggName, List<String> path) {\n                return new Object[0];\n            }\n        };\n\n        AggregationExecutionException e = expectThrows(AggregationExecutionException.class,\n            () -> BucketHelpers.resolveBucketValue(agg, bucket, \"foo>bar\", BucketHelpers.GapPolicy.SKIP));\n\n        assertThat(e.getMessage(), equalTo(\"buckets_path must reference either a number value or a single value numeric \" +\n            \"metric aggregation, got: [Object[]] at aggregation [foo]\"));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/search/aggregations/pipeline/BucketHelpersTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":40,"status":"B"},{"authorDate":"2019-04-15 22:35:20","commitOrder":1,"curCode":"    public void testReturnMultiValueObject() {\n\n        MultiBucketsAggregation agg = new MultiBucketsAggregation() {\n            @Override\n            public List<? extends Bucket> getBuckets() {\n                return null;\n            }\n\n            @Override\n            public String getName() {\n                return \"foo\";\n            }\n\n            @Override\n            public String getType() {\n                return null;\n            }\n\n            @Override\n            public Map<String, Object> getMetaData() {\n                return null;\n            }\n\n            @Override\n            public XContentBuilder toXContent(XContentBuilder builder, Params params) throws IOException {\n                return null;\n            }\n        };\n\n        InternalMultiBucketAggregation.InternalBucket bucket = new InternalMultiBucketAggregation.InternalBucket() {\n            @Override\n            public void writeTo(StreamOutput out) throws IOException {\n\n            }\n\n            @Override\n            public Object getKey() {\n                return null;\n            }\n\n            @Override\n            public String getKeyAsString() {\n                return null;\n            }\n\n            @Override\n            public long getDocCount() {\n                return 0;\n            }\n\n            @Override\n            public Aggregations getAggregations() {\n                return null;\n            }\n\n            @Override\n            public XContentBuilder toXContent(XContentBuilder builder, Params params) throws IOException {\n                return null;\n            }\n\n            @Override\n            public Object getProperty(String containingAggName, List<String> path) {\n                return mock(InternalTDigestPercentiles.class);\n            }\n        };\n\n        AggregationExecutionException e = expectThrows(AggregationExecutionException.class,\n            () -> BucketHelpers.resolveBucketValue(agg, bucket, \"foo>bar\", BucketHelpers.GapPolicy.SKIP));\n\n        assertThat(e.getMessage(), equalTo(\"buckets_path must reference either a number value or a single value numeric \" +\n            \"metric aggregation, but [foo] contains multiple values. Please specify which to use.\"));\n    }\n","date":"2019-04-15 22:35:20","endLine":184,"groupId":"26358","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testReturnMultiValueObject","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/fb/f8ad9d65a2193bf50d03cd98258e633fe584d3.src","preCode":"    public void testReturnMultiValueObject() {\n\n        MultiBucketsAggregation agg = new MultiBucketsAggregation() {\n            @Override\n            public List<? extends Bucket> getBuckets() {\n                return null;\n            }\n\n            @Override\n            public String getName() {\n                return \"foo\";\n            }\n\n            @Override\n            public String getType() {\n                return null;\n            }\n\n            @Override\n            public Map<String, Object> getMetaData() {\n                return null;\n            }\n\n            @Override\n            public XContentBuilder toXContent(XContentBuilder builder, Params params) throws IOException {\n                return null;\n            }\n        };\n\n        InternalMultiBucketAggregation.InternalBucket bucket = new InternalMultiBucketAggregation.InternalBucket() {\n            @Override\n            public void writeTo(StreamOutput out) throws IOException {\n\n            }\n\n            @Override\n            public Object getKey() {\n                return null;\n            }\n\n            @Override\n            public String getKeyAsString() {\n                return null;\n            }\n\n            @Override\n            public long getDocCount() {\n                return 0;\n            }\n\n            @Override\n            public Aggregations getAggregations() {\n                return null;\n            }\n\n            @Override\n            public XContentBuilder toXContent(XContentBuilder builder, Params params) throws IOException {\n                return null;\n            }\n\n            @Override\n            public Object getProperty(String containingAggName, List<String> path) {\n                return mock(InternalTDigestPercentiles.class);\n            }\n        };\n\n        AggregationExecutionException e = expectThrows(AggregationExecutionException.class,\n            () -> BucketHelpers.resolveBucketValue(agg, bucket, \"foo>bar\", BucketHelpers.GapPolicy.SKIP));\n\n        assertThat(e.getMessage(), equalTo(\"buckets_path must reference either a number value or a single value numeric \" +\n            \"metric aggregation, but [foo] contains multiple values. Please specify which to use.\"));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/search/aggregations/pipeline/BucketHelpersTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":113,"status":"B"}],"commitId":"2619d8f5b4e500b4ec29b33339a09d7c94cf4800","commitMessage":"@@@Better error messages when pipelines reference incompatible aggs (#40068)\n\nPipelines require single-valued agg or a numeric to be returned.\nIf they don't get that.  they throw an exception.  Unfortunately.  this\nexception text is very confusing to users because it usually arises\nfrom pathing \"through\" multiple terms aggs.  The final target is a numeric. \nbut it's the intermediary aggs that cause the problem.\n\nThis commit adds the current agg name to the exception message\nso the user knows which \"level\" is the issue.\n","date":"2019-04-15 22:35:20","modifiedFileCount":"1","status":"B","submitter":"Zachary Tong"},{"authorTime":"2020-04-01 03:52:01","codes":[{"authorDate":"2020-04-01 03:52:01","commitOrder":2,"curCode":"    public void testReturnsObjectArray() {\n\n        MultiBucketsAggregation agg = new MultiBucketsAggregation() {\n            @Override\n            public List<? extends Bucket> getBuckets() {\n                return null;\n            }\n\n            @Override\n            public String getName() {\n                return \"foo\";\n            }\n\n            @Override\n            public String getType() {\n                return null;\n            }\n\n            @Override\n            public Map<String, Object> getMetadata() {\n                return null;\n            }\n\n            @Override\n            public XContentBuilder toXContent(XContentBuilder builder, Params params) throws IOException {\n                return null;\n            }\n        };\n\n        InternalMultiBucketAggregation.InternalBucket bucket = new InternalMultiBucketAggregation.InternalBucket() {\n            @Override\n            public void writeTo(StreamOutput out) throws IOException {\n\n            }\n\n            @Override\n            public Object getKey() {\n                return null;\n            }\n\n            @Override\n            public String getKeyAsString() {\n                return null;\n            }\n\n            @Override\n            public long getDocCount() {\n                return 0;\n            }\n\n            @Override\n            public Aggregations getAggregations() {\n                return null;\n            }\n\n            @Override\n            public XContentBuilder toXContent(XContentBuilder builder, Params params) throws IOException {\n                return null;\n            }\n\n            @Override\n            public Object getProperty(String containingAggName, List<String> path) {\n                return new Object[0];\n            }\n        };\n\n        AggregationExecutionException e = expectThrows(AggregationExecutionException.class,\n            () -> BucketHelpers.resolveBucketValue(agg, bucket, \"foo>bar\", BucketHelpers.GapPolicy.SKIP));\n\n        assertThat(e.getMessage(), equalTo(\"buckets_path must reference either a number value or a single value numeric \" +\n            \"metric aggregation, got: [Object[]] at aggregation [foo]\"));\n    }\n","date":"2020-04-01 03:52:01","endLine":111,"groupId":"105575","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testReturnsObjectArray","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/d3/e83ac950f4309a2445834e54729437abc0d91c.src","preCode":"    public void testReturnsObjectArray() {\n\n        MultiBucketsAggregation agg = new MultiBucketsAggregation() {\n            @Override\n            public List<? extends Bucket> getBuckets() {\n                return null;\n            }\n\n            @Override\n            public String getName() {\n                return \"foo\";\n            }\n\n            @Override\n            public String getType() {\n                return null;\n            }\n\n            @Override\n            public Map<String, Object> getMetaData() {\n                return null;\n            }\n\n            @Override\n            public XContentBuilder toXContent(XContentBuilder builder, Params params) throws IOException {\n                return null;\n            }\n        };\n\n        InternalMultiBucketAggregation.InternalBucket bucket = new InternalMultiBucketAggregation.InternalBucket() {\n            @Override\n            public void writeTo(StreamOutput out) throws IOException {\n\n            }\n\n            @Override\n            public Object getKey() {\n                return null;\n            }\n\n            @Override\n            public String getKeyAsString() {\n                return null;\n            }\n\n            @Override\n            public long getDocCount() {\n                return 0;\n            }\n\n            @Override\n            public Aggregations getAggregations() {\n                return null;\n            }\n\n            @Override\n            public XContentBuilder toXContent(XContentBuilder builder, Params params) throws IOException {\n                return null;\n            }\n\n            @Override\n            public Object getProperty(String containingAggName, List<String> path) {\n                return new Object[0];\n            }\n        };\n\n        AggregationExecutionException e = expectThrows(AggregationExecutionException.class,\n            () -> BucketHelpers.resolveBucketValue(agg, bucket, \"foo>bar\", BucketHelpers.GapPolicy.SKIP));\n\n        assertThat(e.getMessage(), equalTo(\"buckets_path must reference either a number value or a single value numeric \" +\n            \"metric aggregation, got: [Object[]] at aggregation [foo]\"));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/search/aggregations/pipeline/BucketHelpersTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":40,"status":"M"},{"authorDate":"2020-04-01 03:52:01","commitOrder":2,"curCode":"    public void testReturnMultiValueObject() {\n\n        MultiBucketsAggregation agg = new MultiBucketsAggregation() {\n            @Override\n            public List<? extends Bucket> getBuckets() {\n                return null;\n            }\n\n            @Override\n            public String getName() {\n                return \"foo\";\n            }\n\n            @Override\n            public String getType() {\n                return null;\n            }\n\n            @Override\n            public Map<String, Object> getMetadata() {\n                return null;\n            }\n\n            @Override\n            public XContentBuilder toXContent(XContentBuilder builder, Params params) throws IOException {\n                return null;\n            }\n        };\n\n        InternalMultiBucketAggregation.InternalBucket bucket = new InternalMultiBucketAggregation.InternalBucket() {\n            @Override\n            public void writeTo(StreamOutput out) throws IOException {\n\n            }\n\n            @Override\n            public Object getKey() {\n                return null;\n            }\n\n            @Override\n            public String getKeyAsString() {\n                return null;\n            }\n\n            @Override\n            public long getDocCount() {\n                return 0;\n            }\n\n            @Override\n            public Aggregations getAggregations() {\n                return null;\n            }\n\n            @Override\n            public XContentBuilder toXContent(XContentBuilder builder, Params params) throws IOException {\n                return null;\n            }\n\n            @Override\n            public Object getProperty(String containingAggName, List<String> path) {\n                return mock(InternalTDigestPercentiles.class);\n            }\n        };\n\n        AggregationExecutionException e = expectThrows(AggregationExecutionException.class,\n            () -> BucketHelpers.resolveBucketValue(agg, bucket, \"foo>bar\", BucketHelpers.GapPolicy.SKIP));\n\n        assertThat(e.getMessage(), equalTo(\"buckets_path must reference either a number value or a single value numeric \" +\n            \"metric aggregation, but [foo] contains multiple values. Please specify which to use.\"));\n    }\n","date":"2020-04-01 03:52:01","endLine":184,"groupId":"105575","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testReturnMultiValueObject","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/d3/e83ac950f4309a2445834e54729437abc0d91c.src","preCode":"    public void testReturnMultiValueObject() {\n\n        MultiBucketsAggregation agg = new MultiBucketsAggregation() {\n            @Override\n            public List<? extends Bucket> getBuckets() {\n                return null;\n            }\n\n            @Override\n            public String getName() {\n                return \"foo\";\n            }\n\n            @Override\n            public String getType() {\n                return null;\n            }\n\n            @Override\n            public Map<String, Object> getMetaData() {\n                return null;\n            }\n\n            @Override\n            public XContentBuilder toXContent(XContentBuilder builder, Params params) throws IOException {\n                return null;\n            }\n        };\n\n        InternalMultiBucketAggregation.InternalBucket bucket = new InternalMultiBucketAggregation.InternalBucket() {\n            @Override\n            public void writeTo(StreamOutput out) throws IOException {\n\n            }\n\n            @Override\n            public Object getKey() {\n                return null;\n            }\n\n            @Override\n            public String getKeyAsString() {\n                return null;\n            }\n\n            @Override\n            public long getDocCount() {\n                return 0;\n            }\n\n            @Override\n            public Aggregations getAggregations() {\n                return null;\n            }\n\n            @Override\n            public XContentBuilder toXContent(XContentBuilder builder, Params params) throws IOException {\n                return null;\n            }\n\n            @Override\n            public Object getProperty(String containingAggName, List<String> path) {\n                return mock(InternalTDigestPercentiles.class);\n            }\n        };\n\n        AggregationExecutionException e = expectThrows(AggregationExecutionException.class,\n            () -> BucketHelpers.resolveBucketValue(agg, bucket, \"foo>bar\", BucketHelpers.GapPolicy.SKIP));\n\n        assertThat(e.getMessage(), equalTo(\"buckets_path must reference either a number value or a single value numeric \" +\n            \"metric aggregation, but [foo] contains multiple values. Please specify which to use.\"));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/search/aggregations/pipeline/BucketHelpersTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":113,"status":"M"}],"commitId":"95a7eed9aa35f47b228e402508709b5bd6703cf4","commitMessage":"@@@Rename MetaData to Metadata in all of the places (#54519)\n\nThis is a simple naming change PR.  to fix the fact that \"metadata\" is a\nsingle English word.  and for too long we have not followed general\nnaming conventions for it. We are also not consistent about it.  for\nexample.  METADATA instead of META_DATA if we were trying to be\nconsistent with MetaData (although METADATA is correct when considered\nin the context of \"metadata\"). This was a simple find and replace across\nthe code base.  only taking a few minutes to fix this naming issue\nforever.","date":"2020-04-01 03:52:01","modifiedFileCount":"1712","status":"M","submitter":"Jason Tedor"}]
