[{"authorTime":"2018-04-26 03:22:53","codes":[{"authorDate":"2018-04-26 03:22:53","commitOrder":1,"curCode":"    public void testIndexReopened() {\n        MetaData metaData = MetaData.builder()\n                .put(IndexMetaData.builder(\"test\").settings(settings(Version.CURRENT)).numberOfShards(randomIntBetween(1, 3)).numberOfReplicas(randomIntBetween(0, 3)))\n                .build();\n        ClusterState clusterState = ClusterState.builder(ClusterName.CLUSTER_NAME_SETTING.getDefault(Settings.EMPTY))\n                .metaData(metaData)\n                .routingTable(RoutingTable.builder().addAsFromCloseToOpen(metaData.index(\"test\")).build()).build();\n        for (ShardRouting shard : clusterState.getRoutingNodes().shardsWithState(UNASSIGNED)) {\n            assertThat(shard.unassignedInfo().getReason(), equalTo(UnassignedInfo.Reason.INDEX_REOPENED));\n        }\n    }\n","date":"2018-04-26 03:22:53","endLine":132,"groupId":"12378","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testIndexReopened","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/d8/f7f6552f90862bea13248d907495febd555b2a.src","preCode":"    public void testIndexReopened() {\n        MetaData metaData = MetaData.builder()\n                .put(IndexMetaData.builder(\"test\").settings(settings(Version.CURRENT)).numberOfShards(randomIntBetween(1, 3)).numberOfReplicas(randomIntBetween(0, 3)))\n                .build();\n        ClusterState clusterState = ClusterState.builder(ClusterName.CLUSTER_NAME_SETTING.getDefault(Settings.EMPTY))\n                .metaData(metaData)\n                .routingTable(RoutingTable.builder().addAsFromCloseToOpen(metaData.index(\"test\")).build()).build();\n        for (ShardRouting shard : clusterState.getRoutingNodes().shardsWithState(UNASSIGNED)) {\n            assertThat(shard.unassignedInfo().getReason(), equalTo(UnassignedInfo.Reason.INDEX_REOPENED));\n        }\n    }\n","realPath":"server/src/test/java/org/elasticsearch/cluster/routing/UnassignedInfoTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":122,"status":"B"},{"authorDate":"2018-04-26 03:22:53","commitOrder":1,"curCode":"    public void testNewIndexRestored() {\n        MetaData metaData = MetaData.builder()\n                .put(IndexMetaData.builder(\"test\").settings(settings(Version.CURRENT)).numberOfShards(randomIntBetween(1, 3)).numberOfReplicas(randomIntBetween(0, 3)))\n                .build();\n        ClusterState clusterState = ClusterState.builder(ClusterName.CLUSTER_NAME_SETTING.getDefault(Settings.EMPTY))\n                .metaData(metaData)\n                .routingTable(RoutingTable.builder().addAsNewRestore(metaData.index(\"test\"), new SnapshotRecoverySource(new Snapshot(\"rep1\", new SnapshotId(\"snp1\", UUIDs.randomBase64UUID())), Version.CURRENT, \"test\"), new IntHashSet()).build()).build();\n        for (ShardRouting shard : clusterState.getRoutingNodes().shardsWithState(UNASSIGNED)) {\n            assertThat(shard.unassignedInfo().getReason(), equalTo(UnassignedInfo.Reason.NEW_INDEX_RESTORED));\n        }\n    }\n","date":"2018-04-26 03:22:53","endLine":144,"groupId":"20032","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testNewIndexRestored","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/d8/f7f6552f90862bea13248d907495febd555b2a.src","preCode":"    public void testNewIndexRestored() {\n        MetaData metaData = MetaData.builder()\n                .put(IndexMetaData.builder(\"test\").settings(settings(Version.CURRENT)).numberOfShards(randomIntBetween(1, 3)).numberOfReplicas(randomIntBetween(0, 3)))\n                .build();\n        ClusterState clusterState = ClusterState.builder(ClusterName.CLUSTER_NAME_SETTING.getDefault(Settings.EMPTY))\n                .metaData(metaData)\n                .routingTable(RoutingTable.builder().addAsNewRestore(metaData.index(\"test\"), new SnapshotRecoverySource(new Snapshot(\"rep1\", new SnapshotId(\"snp1\", UUIDs.randomBase64UUID())), Version.CURRENT, \"test\"), new IntHashSet()).build()).build();\n        for (ShardRouting shard : clusterState.getRoutingNodes().shardsWithState(UNASSIGNED)) {\n            assertThat(shard.unassignedInfo().getReason(), equalTo(UnassignedInfo.Reason.NEW_INDEX_RESTORED));\n        }\n    }\n","realPath":"server/src/test/java/org/elasticsearch/cluster/routing/UnassignedInfoTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":134,"status":"B"}],"commitId":"d74fb9eb4559077e2d20b19a9ed62d9ff825027a","commitMessage":"@@@Opened x-pack ILM code\n","date":"2018-04-26 03:22:53","modifiedFileCount":"0","status":"B","submitter":"Tal Levy"},{"authorTime":"2018-12-14 18:39:23","codes":[{"authorDate":"2018-04-26 03:22:53","commitOrder":2,"curCode":"    public void testIndexReopened() {\n        MetaData metaData = MetaData.builder()\n                .put(IndexMetaData.builder(\"test\").settings(settings(Version.CURRENT)).numberOfShards(randomIntBetween(1, 3)).numberOfReplicas(randomIntBetween(0, 3)))\n                .build();\n        ClusterState clusterState = ClusterState.builder(ClusterName.CLUSTER_NAME_SETTING.getDefault(Settings.EMPTY))\n                .metaData(metaData)\n                .routingTable(RoutingTable.builder().addAsFromCloseToOpen(metaData.index(\"test\")).build()).build();\n        for (ShardRouting shard : clusterState.getRoutingNodes().shardsWithState(UNASSIGNED)) {\n            assertThat(shard.unassignedInfo().getReason(), equalTo(UnassignedInfo.Reason.INDEX_REOPENED));\n        }\n    }\n","date":"2018-04-26 03:22:53","endLine":132,"groupId":"12378","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testIndexReopened","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/d8/f7f6552f90862bea13248d907495febd555b2a.src","preCode":"    public void testIndexReopened() {\n        MetaData metaData = MetaData.builder()\n                .put(IndexMetaData.builder(\"test\").settings(settings(Version.CURRENT)).numberOfShards(randomIntBetween(1, 3)).numberOfReplicas(randomIntBetween(0, 3)))\n                .build();\n        ClusterState clusterState = ClusterState.builder(ClusterName.CLUSTER_NAME_SETTING.getDefault(Settings.EMPTY))\n                .metaData(metaData)\n                .routingTable(RoutingTable.builder().addAsFromCloseToOpen(metaData.index(\"test\")).build()).build();\n        for (ShardRouting shard : clusterState.getRoutingNodes().shardsWithState(UNASSIGNED)) {\n            assertThat(shard.unassignedInfo().getReason(), equalTo(UnassignedInfo.Reason.INDEX_REOPENED));\n        }\n    }\n","realPath":"server/src/test/java/org/elasticsearch/cluster/routing/UnassignedInfoTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":122,"status":"N"},{"authorDate":"2018-12-14 18:39:23","commitOrder":2,"curCode":"    public void testNewIndexRestored() {\n        MetaData metaData = MetaData.builder()\n                .put(IndexMetaData.builder(\"test\").settings(settings(Version.CURRENT))\n                    .numberOfShards(randomIntBetween(1, 3)).numberOfReplicas(randomIntBetween(0, 3)))\n                .build();\n        ClusterState clusterState = ClusterState.builder(ClusterName.CLUSTER_NAME_SETTING.getDefault(Settings.EMPTY))\n                .metaData(metaData)\n                .routingTable(RoutingTable.builder().addAsNewRestore(metaData.index(\"test\"), new SnapshotRecoverySource(\n                    UUIDs.randomBase64UUID(),\n                    new Snapshot(\"rep1\", new SnapshotId(\"snp1\", UUIDs.randomBase64UUID())), Version.CURRENT, \"test\"),\n                    new IntHashSet()).build()).build();\n        for (ShardRouting shard : clusterState.getRoutingNodes().shardsWithState(UNASSIGNED)) {\n            assertThat(shard.unassignedInfo().getReason(), equalTo(UnassignedInfo.Reason.NEW_INDEX_RESTORED));\n        }\n    }\n","date":"2018-12-14 18:39:23","endLine":151,"groupId":"43494","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testNewIndexRestored","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/9c/f4ef447093d5ca396d33a4ad8f0775b9fdf3c0.src","preCode":"    public void testNewIndexRestored() {\n        MetaData metaData = MetaData.builder()\n                .put(IndexMetaData.builder(\"test\").settings(settings(Version.CURRENT))\n                    .numberOfShards(randomIntBetween(1, 3)).numberOfReplicas(randomIntBetween(0, 3)))\n                .build();\n        ClusterState clusterState = ClusterState.builder(ClusterName.CLUSTER_NAME_SETTING.getDefault(Settings.EMPTY))\n                .metaData(metaData)\n                .routingTable(RoutingTable.builder().addAsNewRestore(metaData.index(\"test\"), new SnapshotRecoverySource(\n                    new Snapshot(\"rep1\", new SnapshotId(\"snp1\", UUIDs.randomBase64UUID())), Version.CURRENT, \"test\"),\n                    new IntHashSet()).build()).build();\n        for (ShardRouting shard : clusterState.getRoutingNodes().shardsWithState(UNASSIGNED)) {\n            assertThat(shard.unassignedInfo().getReason(), equalTo(UnassignedInfo.Reason.NEW_INDEX_RESTORED));\n        }\n    }\n","realPath":"server/src/test/java/org/elasticsearch/cluster/routing/UnassignedInfoTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":137,"status":"M"}],"commitId":"c5b3ac557857da9d8571e4fdcb8eaf6d4a7b7b11","commitMessage":"@@@SNAPSHOTS: Allow Parallel Restore Operations (#36397)\n\n* Enable parallel restore operations\n* Add uuid to restore in progress entries to uniquely identify them\n* Adjust restore in progress entries to be a map in cluster state\n* Added tests for:\n   * Parallel restore from two different snapshots\n   * Parallel restore from a single snapshot to different indices to test uuid identifiers are correctly used by `RestoreService` and routing allocator\n   * Parallel restore with waiting for completion to test transport actions correctly use uuid identifiers","date":"2018-12-14 18:39:23","modifiedFileCount":"22","status":"M","submitter":"Armin Braun"},{"authorTime":"2020-02-07 22:24:54","codes":[{"authorDate":"2018-04-26 03:22:53","commitOrder":3,"curCode":"    public void testIndexReopened() {\n        MetaData metaData = MetaData.builder()\n                .put(IndexMetaData.builder(\"test\").settings(settings(Version.CURRENT)).numberOfShards(randomIntBetween(1, 3)).numberOfReplicas(randomIntBetween(0, 3)))\n                .build();\n        ClusterState clusterState = ClusterState.builder(ClusterName.CLUSTER_NAME_SETTING.getDefault(Settings.EMPTY))\n                .metaData(metaData)\n                .routingTable(RoutingTable.builder().addAsFromCloseToOpen(metaData.index(\"test\")).build()).build();\n        for (ShardRouting shard : clusterState.getRoutingNodes().shardsWithState(UNASSIGNED)) {\n            assertThat(shard.unassignedInfo().getReason(), equalTo(UnassignedInfo.Reason.INDEX_REOPENED));\n        }\n    }\n","date":"2018-04-26 03:22:53","endLine":132,"groupId":"12378","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testIndexReopened","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/d8/f7f6552f90862bea13248d907495febd555b2a.src","preCode":"    public void testIndexReopened() {\n        MetaData metaData = MetaData.builder()\n                .put(IndexMetaData.builder(\"test\").settings(settings(Version.CURRENT)).numberOfShards(randomIntBetween(1, 3)).numberOfReplicas(randomIntBetween(0, 3)))\n                .build();\n        ClusterState clusterState = ClusterState.builder(ClusterName.CLUSTER_NAME_SETTING.getDefault(Settings.EMPTY))\n                .metaData(metaData)\n                .routingTable(RoutingTable.builder().addAsFromCloseToOpen(metaData.index(\"test\")).build()).build();\n        for (ShardRouting shard : clusterState.getRoutingNodes().shardsWithState(UNASSIGNED)) {\n            assertThat(shard.unassignedInfo().getReason(), equalTo(UnassignedInfo.Reason.INDEX_REOPENED));\n        }\n    }\n","realPath":"server/src/test/java/org/elasticsearch/cluster/routing/UnassignedInfoTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":122,"status":"N"},{"authorDate":"2020-02-07 22:24:54","commitOrder":3,"curCode":"    public void testNewIndexRestored() {\n        MetaData metaData = MetaData.builder()\n                .put(IndexMetaData.builder(\"test\").settings(settings(Version.CURRENT))\n                    .numberOfShards(randomIntBetween(1, 3)).numberOfReplicas(randomIntBetween(0, 3)))\n                .build();\n        ClusterState clusterState = ClusterState.builder(ClusterName.CLUSTER_NAME_SETTING.getDefault(Settings.EMPTY))\n                .metaData(metaData)\n                .routingTable(RoutingTable.builder().addAsNewRestore(metaData.index(\"test\"), new SnapshotRecoverySource(\n                    UUIDs.randomBase64UUID(),\n                    new Snapshot(\"rep1\", new SnapshotId(\"snp1\", UUIDs.randomBase64UUID())), Version.CURRENT,\n                        new IndexId(\"test\", UUIDs.randomBase64UUID(random()))),\n                    new IntHashSet()).build()).build();\n        for (ShardRouting shard : clusterState.getRoutingNodes().shardsWithState(UNASSIGNED)) {\n            assertThat(shard.unassignedInfo().getReason(), equalTo(UnassignedInfo.Reason.NEW_INDEX_RESTORED));\n        }\n    }\n","date":"2020-02-07 22:24:53","endLine":161,"groupId":"43494","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testNewIndexRestored","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/da/872fffb6b1bb95e0486c17c26705022bf5516f.src","preCode":"    public void testNewIndexRestored() {\n        MetaData metaData = MetaData.builder()\n                .put(IndexMetaData.builder(\"test\").settings(settings(Version.CURRENT))\n                    .numberOfShards(randomIntBetween(1, 3)).numberOfReplicas(randomIntBetween(0, 3)))\n                .build();\n        ClusterState clusterState = ClusterState.builder(ClusterName.CLUSTER_NAME_SETTING.getDefault(Settings.EMPTY))\n                .metaData(metaData)\n                .routingTable(RoutingTable.builder().addAsNewRestore(metaData.index(\"test\"), new SnapshotRecoverySource(\n                    UUIDs.randomBase64UUID(),\n                    new Snapshot(\"rep1\", new SnapshotId(\"snp1\", UUIDs.randomBase64UUID())), Version.CURRENT, \"test\"),\n                    new IntHashSet()).build()).build();\n        for (ShardRouting shard : clusterState.getRoutingNodes().shardsWithState(UNASSIGNED)) {\n            assertThat(shard.unassignedInfo().getReason(), equalTo(UnassignedInfo.Reason.NEW_INDEX_RESTORED));\n        }\n    }\n","realPath":"server/src/test/java/org/elasticsearch/cluster/routing/UnassignedInfoTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":146,"status":"M"}],"commitId":"e79e6d9c1d0626b8ab05379eb22393d797023c86","commitMessage":"@@@Remove Redundant Loading of RepositoryData during Restore (#51977)\n\nWe can just put the `IndexId` instead of just the index name into the recovery soruce and\nsave one load of `RepositoryData` on each shard restore that way.\n\n","date":"2020-02-07 22:24:53","modifiedFileCount":"17","status":"M","submitter":"Armin Braun"},{"authorTime":"2020-04-01 03:52:01","codes":[{"authorDate":"2020-04-01 03:52:01","commitOrder":4,"curCode":"    public void testIndexReopened() {\n        Metadata metadata = Metadata.builder()\n                .put(IndexMetadata.builder(\"test\").settings(settings(Version.CURRENT))\n                    .numberOfShards(randomIntBetween(1, 3)).numberOfReplicas(randomIntBetween(0, 3)))\n                .build();\n        ClusterState clusterState = ClusterState.builder(ClusterName.CLUSTER_NAME_SETTING.getDefault(Settings.EMPTY))\n                .metadata(metadata)\n                .routingTable(RoutingTable.builder().addAsFromCloseToOpen(metadata.index(\"test\")).build()).build();\n        for (ShardRouting shard : clusterState.getRoutingNodes().shardsWithState(UNASSIGNED)) {\n            assertThat(shard.unassignedInfo().getReason(), equalTo(UnassignedInfo.Reason.INDEX_REOPENED));\n        }\n    }\n","date":"2020-04-01 03:52:01","endLine":144,"groupId":"102131","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"testIndexReopened","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/12/41f43409c2bbbf4ede34b7feff1bf4e6d98e3b.src","preCode":"    public void testIndexReopened() {\n        MetaData metaData = MetaData.builder()\n                .put(IndexMetaData.builder(\"test\").settings(settings(Version.CURRENT))\n                    .numberOfShards(randomIntBetween(1, 3)).numberOfReplicas(randomIntBetween(0, 3)))\n                .build();\n        ClusterState clusterState = ClusterState.builder(ClusterName.CLUSTER_NAME_SETTING.getDefault(Settings.EMPTY))\n                .metaData(metaData)\n                .routingTable(RoutingTable.builder().addAsFromCloseToOpen(metaData.index(\"test\")).build()).build();\n        for (ShardRouting shard : clusterState.getRoutingNodes().shardsWithState(UNASSIGNED)) {\n            assertThat(shard.unassignedInfo().getReason(), equalTo(UnassignedInfo.Reason.INDEX_REOPENED));\n        }\n    }\n","realPath":"server/src/test/java/org/elasticsearch/cluster/routing/UnassignedInfoTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":133,"status":"M"},{"authorDate":"2020-04-01 03:52:01","commitOrder":4,"curCode":"    public void testNewIndexRestored() {\n        Metadata metadata = Metadata.builder()\n                .put(IndexMetadata.builder(\"test\").settings(settings(Version.CURRENT))\n                    .numberOfShards(randomIntBetween(1, 3)).numberOfReplicas(randomIntBetween(0, 3)))\n                .build();\n        ClusterState clusterState = ClusterState.builder(ClusterName.CLUSTER_NAME_SETTING.getDefault(Settings.EMPTY))\n                .metadata(metadata)\n                .routingTable(RoutingTable.builder().addAsNewRestore(metadata.index(\"test\"), new SnapshotRecoverySource(\n                    UUIDs.randomBase64UUID(),\n                    new Snapshot(\"rep1\", new SnapshotId(\"snp1\", UUIDs.randomBase64UUID())), Version.CURRENT,\n                        new IndexId(\"test\", UUIDs.randomBase64UUID(random()))),\n                    new IntHashSet()).build()).build();\n        for (ShardRouting shard : clusterState.getRoutingNodes().shardsWithState(UNASSIGNED)) {\n            assertThat(shard.unassignedInfo().getReason(), equalTo(UnassignedInfo.Reason.NEW_INDEX_RESTORED));\n        }\n    }\n","date":"2020-04-01 03:52:01","endLine":161,"groupId":"102131","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"testNewIndexRestored","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/12/41f43409c2bbbf4ede34b7feff1bf4e6d98e3b.src","preCode":"    public void testNewIndexRestored() {\n        MetaData metaData = MetaData.builder()\n                .put(IndexMetaData.builder(\"test\").settings(settings(Version.CURRENT))\n                    .numberOfShards(randomIntBetween(1, 3)).numberOfReplicas(randomIntBetween(0, 3)))\n                .build();\n        ClusterState clusterState = ClusterState.builder(ClusterName.CLUSTER_NAME_SETTING.getDefault(Settings.EMPTY))\n                .metaData(metaData)\n                .routingTable(RoutingTable.builder().addAsNewRestore(metaData.index(\"test\"), new SnapshotRecoverySource(\n                    UUIDs.randomBase64UUID(),\n                    new Snapshot(\"rep1\", new SnapshotId(\"snp1\", UUIDs.randomBase64UUID())), Version.CURRENT,\n                        new IndexId(\"test\", UUIDs.randomBase64UUID(random()))),\n                    new IntHashSet()).build()).build();\n        for (ShardRouting shard : clusterState.getRoutingNodes().shardsWithState(UNASSIGNED)) {\n            assertThat(shard.unassignedInfo().getReason(), equalTo(UnassignedInfo.Reason.NEW_INDEX_RESTORED));\n        }\n    }\n","realPath":"server/src/test/java/org/elasticsearch/cluster/routing/UnassignedInfoTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":146,"status":"M"}],"commitId":"95a7eed9aa35f47b228e402508709b5bd6703cf4","commitMessage":"@@@Rename MetaData to Metadata in all of the places (#54519)\n\nThis is a simple naming change PR.  to fix the fact that \"metadata\" is a\nsingle English word.  and for too long we have not followed general\nnaming conventions for it. We are also not consistent about it.  for\nexample.  METADATA instead of META_DATA if we were trying to be\nconsistent with MetaData (although METADATA is correct when considered\nin the context of \"metadata\"). This was a simple find and replace across\nthe code base.  only taking a few minutes to fix this naming issue\nforever.","date":"2020-04-01 03:52:01","modifiedFileCount":"1712","status":"M","submitter":"Jason Tedor"}]
