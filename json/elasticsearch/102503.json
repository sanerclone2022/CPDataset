[{"authorTime":"2018-04-26 03:22:53","codes":[{"authorDate":"2018-04-26 03:22:53","commitOrder":1,"curCode":"    public void testSettings() {\n        CodecService codecService = new CodecService(null, logger);\n        LiveIndexWriterConfig currentIndexWriterConfig = engine.getCurrentIndexWriterConfig();\n\n        assertEquals(engine.config().getCodec().getName(), codecService.codec(codecName).getName());\n        assertEquals(currentIndexWriterConfig.getCodec().getName(), codecService.codec(codecName).getName());\n    }\n","date":"2018-04-26 03:22:53","endLine":2377,"groupId":"11696","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testSettings","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/ea/4b53f16c0031978564b8ac55007607824634ea.src","preCode":"    public void testSettings() {\n        CodecService codecService = new CodecService(null, logger);\n        LiveIndexWriterConfig currentIndexWriterConfig = engine.getCurrentIndexWriterConfig();\n\n        assertEquals(engine.config().getCodec().getName(), codecService.codec(codecName).getName());\n        assertEquals(currentIndexWriterConfig.getCodec().getName(), codecService.codec(codecName).getName());\n    }\n","realPath":"server/src/test/java/org/elasticsearch/index/engine/InternalEngineTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":2371,"status":"B"},{"authorDate":"2018-04-26 03:22:53","commitOrder":1,"curCode":"    public void setUp() throws Exception {\n        super.setUp();\n        primaryTerm.set(randomLongBetween(1, Long.MAX_VALUE));\n        CodecService codecService = new CodecService(null, logger);\n        String name = Codec.getDefault().getName();\n        if (Arrays.asList(codecService.availableCodecs()).contains(name)) {\n            \r\n            \r\n            codecName = name;\n        } else {\n            codecName = \"default\";\n        }\n        defaultSettings = IndexSettingsModule.newIndexSettings(\"test\", Settings.builder()\n                .put(IndexSettings.INDEX_GC_DELETES_SETTING.getKey(), \"1h\") \r\n                .put(EngineConfig.INDEX_CODEC_SETTING.getKey(), codecName)\n                .put(IndexMetaData.SETTING_VERSION_CREATED, Version.CURRENT)\n                .put(IndexSettings.MAX_REFRESH_LISTENERS_PER_SHARD.getKey(),\n                        between(10, 10 * IndexSettings.MAX_REFRESH_LISTENERS_PER_SHARD.get(Settings.EMPTY)))\n                .build()); \r\n        threadPool = new TestThreadPool(getClass().getName());\n        store = createStore();\n        storeReplica = createStore();\n        Lucene.cleanLuceneIndex(store.directory());\n        Lucene.cleanLuceneIndex(storeReplica.directory());\n        primaryTranslogDir = createTempDir(\"translog-primary\");\n        engine = createEngine(store, primaryTranslogDir);\n        LiveIndexWriterConfig currentIndexWriterConfig = engine.getCurrentIndexWriterConfig();\n\n        assertEquals(engine.config().getCodec().getName(), codecService.codec(codecName).getName());\n        assertEquals(currentIndexWriterConfig.getCodec().getName(), codecService.codec(codecName).getName());\n        if (randomBoolean()) {\n            engine.config().setEnableGcDeletes(false);\n        }\n        replicaTranslogDir = createTempDir(\"translog-replica\");\n        replicaEngine = createEngine(storeReplica, replicaTranslogDir);\n        currentIndexWriterConfig = replicaEngine.getCurrentIndexWriterConfig();\n\n        assertEquals(replicaEngine.config().getCodec().getName(), codecService.codec(codecName).getName());\n        assertEquals(currentIndexWriterConfig.getCodec().getName(), codecService.codec(codecName).getName());\n        if (randomBoolean()) {\n            engine.config().setEnableGcDeletes(false);\n        }\n    }\n","date":"2018-04-26 03:22:53","endLine":176,"groupId":"11696","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"setUp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/8f/ff17900b07244074a2e7d04bc77f4926a55c86.src","preCode":"    public void setUp() throws Exception {\n        super.setUp();\n        primaryTerm.set(randomLongBetween(1, Long.MAX_VALUE));\n        CodecService codecService = new CodecService(null, logger);\n        String name = Codec.getDefault().getName();\n        if (Arrays.asList(codecService.availableCodecs()).contains(name)) {\n            \r\n            \r\n            codecName = name;\n        } else {\n            codecName = \"default\";\n        }\n        defaultSettings = IndexSettingsModule.newIndexSettings(\"test\", Settings.builder()\n                .put(IndexSettings.INDEX_GC_DELETES_SETTING.getKey(), \"1h\") \r\n                .put(EngineConfig.INDEX_CODEC_SETTING.getKey(), codecName)\n                .put(IndexMetaData.SETTING_VERSION_CREATED, Version.CURRENT)\n                .put(IndexSettings.MAX_REFRESH_LISTENERS_PER_SHARD.getKey(),\n                        between(10, 10 * IndexSettings.MAX_REFRESH_LISTENERS_PER_SHARD.get(Settings.EMPTY)))\n                .build()); \r\n        threadPool = new TestThreadPool(getClass().getName());\n        store = createStore();\n        storeReplica = createStore();\n        Lucene.cleanLuceneIndex(store.directory());\n        Lucene.cleanLuceneIndex(storeReplica.directory());\n        primaryTranslogDir = createTempDir(\"translog-primary\");\n        engine = createEngine(store, primaryTranslogDir);\n        LiveIndexWriterConfig currentIndexWriterConfig = engine.getCurrentIndexWriterConfig();\n\n        assertEquals(engine.config().getCodec().getName(), codecService.codec(codecName).getName());\n        assertEquals(currentIndexWriterConfig.getCodec().getName(), codecService.codec(codecName).getName());\n        if (randomBoolean()) {\n            engine.config().setEnableGcDeletes(false);\n        }\n        replicaTranslogDir = createTempDir(\"translog-replica\");\n        replicaEngine = createEngine(storeReplica, replicaTranslogDir);\n        currentIndexWriterConfig = replicaEngine.getCurrentIndexWriterConfig();\n\n        assertEquals(replicaEngine.config().getCodec().getName(), codecService.codec(codecName).getName());\n        assertEquals(currentIndexWriterConfig.getCodec().getName(), codecService.codec(codecName).getName());\n        if (randomBoolean()) {\n            engine.config().setEnableGcDeletes(false);\n        }\n    }\n","realPath":"test/framework/src/main/java/org/elasticsearch/index/engine/EngineTestCase.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":134,"status":"B"}],"commitId":"d74fb9eb4559077e2d20b19a9ed62d9ff825027a","commitMessage":"@@@Opened x-pack ILM code\n","date":"2018-04-26 03:22:53","modifiedFileCount":"0","status":"B","submitter":"Tal Levy"},{"authorTime":"2018-08-31 21:45:22","codes":[{"authorDate":"2018-04-26 03:22:53","commitOrder":2,"curCode":"    public void testSettings() {\n        CodecService codecService = new CodecService(null, logger);\n        LiveIndexWriterConfig currentIndexWriterConfig = engine.getCurrentIndexWriterConfig();\n\n        assertEquals(engine.config().getCodec().getName(), codecService.codec(codecName).getName());\n        assertEquals(currentIndexWriterConfig.getCodec().getName(), codecService.codec(codecName).getName());\n    }\n","date":"2018-04-26 03:22:53","endLine":2377,"groupId":"11696","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testSettings","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/ea/4b53f16c0031978564b8ac55007607824634ea.src","preCode":"    public void testSettings() {\n        CodecService codecService = new CodecService(null, logger);\n        LiveIndexWriterConfig currentIndexWriterConfig = engine.getCurrentIndexWriterConfig();\n\n        assertEquals(engine.config().getCodec().getName(), codecService.codec(codecName).getName());\n        assertEquals(currentIndexWriterConfig.getCodec().getName(), codecService.codec(codecName).getName());\n    }\n","realPath":"server/src/test/java/org/elasticsearch/index/engine/InternalEngineTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":2371,"status":"N"},{"authorDate":"2018-08-31 21:45:22","commitOrder":2,"curCode":"    public void setUp() throws Exception {\n        super.setUp();\n        primaryTerm.set(randomLongBetween(1, Long.MAX_VALUE));\n        CodecService codecService = new CodecService(null, logger);\n        String name = Codec.getDefault().getName();\n        if (Arrays.asList(codecService.availableCodecs()).contains(name)) {\n            \r\n            \r\n            codecName = name;\n        } else {\n            codecName = \"default\";\n        }\n        defaultSettings = IndexSettingsModule.newIndexSettings(\"test\", indexSettings());\n        threadPool = new TestThreadPool(getClass().getName());\n        store = createStore();\n        storeReplica = createStore();\n        Lucene.cleanLuceneIndex(store.directory());\n        Lucene.cleanLuceneIndex(storeReplica.directory());\n        primaryTranslogDir = createTempDir(\"translog-primary\");\n        engine = createEngine(store, primaryTranslogDir);\n        LiveIndexWriterConfig currentIndexWriterConfig = engine.getCurrentIndexWriterConfig();\n\n        assertEquals(engine.config().getCodec().getName(), codecService.codec(codecName).getName());\n        assertEquals(currentIndexWriterConfig.getCodec().getName(), codecService.codec(codecName).getName());\n        if (randomBoolean()) {\n            engine.config().setEnableGcDeletes(false);\n        }\n        replicaTranslogDir = createTempDir(\"translog-replica\");\n        replicaEngine = createEngine(storeReplica, replicaTranslogDir);\n        currentIndexWriterConfig = replicaEngine.getCurrentIndexWriterConfig();\n\n        assertEquals(replicaEngine.config().getCodec().getName(), codecService.codec(codecName).getName());\n        assertEquals(currentIndexWriterConfig.getCodec().getName(), codecService.codec(codecName).getName());\n        if (randomBoolean()) {\n            engine.config().setEnableGcDeletes(false);\n        }\n    }\n","date":"2018-08-31 21:45:22","endLine":209,"groupId":"11696","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"setUp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/b5/58cd1ba90001f6ab19ba6d2493078270b14cf8.src","preCode":"    public void setUp() throws Exception {\n        super.setUp();\n        primaryTerm.set(randomLongBetween(1, Long.MAX_VALUE));\n        CodecService codecService = new CodecService(null, logger);\n        String name = Codec.getDefault().getName();\n        if (Arrays.asList(codecService.availableCodecs()).contains(name)) {\n            \r\n            \r\n            codecName = name;\n        } else {\n            codecName = \"default\";\n        }\n        defaultSettings = IndexSettingsModule.newIndexSettings(\"test\", Settings.builder()\n                .put(IndexSettings.INDEX_GC_DELETES_SETTING.getKey(), \"1h\") \r\n                .put(EngineConfig.INDEX_CODEC_SETTING.getKey(), codecName)\n                .put(IndexMetaData.SETTING_VERSION_CREATED, Version.CURRENT)\n                .put(IndexSettings.MAX_REFRESH_LISTENERS_PER_SHARD.getKey(),\n                        between(10, 10 * IndexSettings.MAX_REFRESH_LISTENERS_PER_SHARD.get(Settings.EMPTY)))\n                .build()); \r\n        threadPool = new TestThreadPool(getClass().getName());\n        store = createStore();\n        storeReplica = createStore();\n        Lucene.cleanLuceneIndex(store.directory());\n        Lucene.cleanLuceneIndex(storeReplica.directory());\n        primaryTranslogDir = createTempDir(\"translog-primary\");\n        engine = createEngine(store, primaryTranslogDir);\n        LiveIndexWriterConfig currentIndexWriterConfig = engine.getCurrentIndexWriterConfig();\n\n        assertEquals(engine.config().getCodec().getName(), codecService.codec(codecName).getName());\n        assertEquals(currentIndexWriterConfig.getCodec().getName(), codecService.codec(codecName).getName());\n        if (randomBoolean()) {\n            engine.config().setEnableGcDeletes(false);\n        }\n        replicaTranslogDir = createTempDir(\"translog-replica\");\n        replicaEngine = createEngine(storeReplica, replicaTranslogDir);\n        currentIndexWriterConfig = replicaEngine.getCurrentIndexWriterConfig();\n\n        assertEquals(replicaEngine.config().getCodec().getName(), codecService.codec(codecName).getName());\n        assertEquals(currentIndexWriterConfig.getCodec().getName(), codecService.codec(codecName).getName());\n        if (randomBoolean()) {\n            engine.config().setEnableGcDeletes(false);\n        }\n    }\n","realPath":"test/framework/src/main/java/org/elasticsearch/index/engine/EngineTestCase.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":173,"status":"M"}],"commitId":"3eef74d5d582c19c29d7a297a120004bf4d38930","commitMessage":"@@@Merge branch 'master' into index-lifecycle\n","date":"2018-08-31 21:45:22","modifiedFileCount":"108","status":"M","submitter":"Colin Goodheart-Smithe"},{"authorTime":"2018-09-07 17:59:10","codes":[{"authorDate":"2018-04-26 03:22:53","commitOrder":3,"curCode":"    public void testSettings() {\n        CodecService codecService = new CodecService(null, logger);\n        LiveIndexWriterConfig currentIndexWriterConfig = engine.getCurrentIndexWriterConfig();\n\n        assertEquals(engine.config().getCodec().getName(), codecService.codec(codecName).getName());\n        assertEquals(currentIndexWriterConfig.getCodec().getName(), codecService.codec(codecName).getName());\n    }\n","date":"2018-04-26 03:22:53","endLine":2377,"groupId":"11696","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testSettings","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/ea/4b53f16c0031978564b8ac55007607824634ea.src","preCode":"    public void testSettings() {\n        CodecService codecService = new CodecService(null, logger);\n        LiveIndexWriterConfig currentIndexWriterConfig = engine.getCurrentIndexWriterConfig();\n\n        assertEquals(engine.config().getCodec().getName(), codecService.codec(codecName).getName());\n        assertEquals(currentIndexWriterConfig.getCodec().getName(), codecService.codec(codecName).getName());\n    }\n","realPath":"server/src/test/java/org/elasticsearch/index/engine/InternalEngineTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":2371,"status":"N"},{"authorDate":"2018-09-07 17:59:10","commitOrder":3,"curCode":"    public void setUp() throws Exception {\n        super.setUp();\n        primaryTerm.set(randomLongBetween(1, Long.MAX_VALUE));\n        CodecService codecService = new CodecService(null, logger);\n        String name = Codec.getDefault().getName();\n        if (Arrays.asList(codecService.availableCodecs()).contains(name)) {\n            \r\n            \r\n            codecName = name;\n        } else {\n            codecName = \"default\";\n        }\n        defaultSettings = IndexSettingsModule.newIndexSettings(\"test\", indexSettings());\n        threadPool = new TestThreadPool(getClass().getName());\n        store = createStore();\n        storeReplica = createStore();\n        Lucene.cleanLuceneIndex(store.directory());\n        Lucene.cleanLuceneIndex(storeReplica.directory());\n        primaryTranslogDir = createTempDir(\"translog-primary\");\n        translogHandler = createTranslogHandler(defaultSettings);\n        engine = createEngine(store, primaryTranslogDir);\n        LiveIndexWriterConfig currentIndexWriterConfig = engine.getCurrentIndexWriterConfig();\n\n        assertEquals(engine.config().getCodec().getName(), codecService.codec(codecName).getName());\n        assertEquals(currentIndexWriterConfig.getCodec().getName(), codecService.codec(codecName).getName());\n        if (randomBoolean()) {\n            engine.config().setEnableGcDeletes(false);\n        }\n        replicaTranslogDir = createTempDir(\"translog-replica\");\n        replicaEngine = createEngine(storeReplica, replicaTranslogDir);\n        currentIndexWriterConfig = replicaEngine.getCurrentIndexWriterConfig();\n\n        assertEquals(replicaEngine.config().getCodec().getName(), codecService.codec(codecName).getName());\n        assertEquals(currentIndexWriterConfig.getCodec().getName(), codecService.codec(codecName).getName());\n        if (randomBoolean()) {\n            engine.config().setEnableGcDeletes(false);\n        }\n    }\n","date":"2018-09-07 17:59:10","endLine":211,"groupId":"11696","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"setUp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/0e/22d0a7eda2af5f34281ff8a912f3531305e075.src","preCode":"    public void setUp() throws Exception {\n        super.setUp();\n        primaryTerm.set(randomLongBetween(1, Long.MAX_VALUE));\n        CodecService codecService = new CodecService(null, logger);\n        String name = Codec.getDefault().getName();\n        if (Arrays.asList(codecService.availableCodecs()).contains(name)) {\n            \r\n            \r\n            codecName = name;\n        } else {\n            codecName = \"default\";\n        }\n        defaultSettings = IndexSettingsModule.newIndexSettings(\"test\", indexSettings());\n        threadPool = new TestThreadPool(getClass().getName());\n        store = createStore();\n        storeReplica = createStore();\n        Lucene.cleanLuceneIndex(store.directory());\n        Lucene.cleanLuceneIndex(storeReplica.directory());\n        primaryTranslogDir = createTempDir(\"translog-primary\");\n        engine = createEngine(store, primaryTranslogDir);\n        LiveIndexWriterConfig currentIndexWriterConfig = engine.getCurrentIndexWriterConfig();\n\n        assertEquals(engine.config().getCodec().getName(), codecService.codec(codecName).getName());\n        assertEquals(currentIndexWriterConfig.getCodec().getName(), codecService.codec(codecName).getName());\n        if (randomBoolean()) {\n            engine.config().setEnableGcDeletes(false);\n        }\n        replicaTranslogDir = createTempDir(\"translog-replica\");\n        replicaEngine = createEngine(storeReplica, replicaTranslogDir);\n        currentIndexWriterConfig = replicaEngine.getCurrentIndexWriterConfig();\n\n        assertEquals(replicaEngine.config().getCodec().getName(), codecService.codec(codecName).getName());\n        assertEquals(currentIndexWriterConfig.getCodec().getName(), codecService.codec(codecName).getName());\n        if (randomBoolean()) {\n            engine.config().setEnableGcDeletes(false);\n        }\n    }\n","realPath":"test/framework/src/main/java/org/elasticsearch/index/engine/EngineTestCase.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":174,"status":"M"}],"commitId":"017ffe5d127ce0fb33feb8fc4e5fededb8cbfda1","commitMessage":"@@@Merge branch 'master' into index-lifecycle\n","date":"2018-09-07 17:59:10","modifiedFileCount":"370","status":"M","submitter":"Colin Goodheart-Smithe"},{"authorTime":"2021-09-03 21:54:43","codes":[{"authorDate":"2021-09-03 21:54:43","commitOrder":4,"curCode":"    public void testSettings() {\n        CodecService codecService = new CodecService(null);\n        LiveIndexWriterConfig currentIndexWriterConfig = engine.getCurrentIndexWriterConfig();\n\n        assertEquals(engine.config().getCodec().getName(), codecService.codec(codecName).getName());\n        assertEquals(currentIndexWriterConfig.getCodec().getName(), codecService.codec(codecName).getName());\n    }\n","date":"2021-09-03 21:54:43","endLine":2611,"groupId":"102503","id":7,"instanceNumber":1,"isCurCommit":1,"methodName":"testSettings","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/89/7b5d0789f90eba001f1eea0637f86c74a4fa21.src","preCode":"    public void testSettings() {\n        CodecService codecService = new CodecService(null, logger);\n        LiveIndexWriterConfig currentIndexWriterConfig = engine.getCurrentIndexWriterConfig();\n\n        assertEquals(engine.config().getCodec().getName(), codecService.codec(codecName).getName());\n        assertEquals(currentIndexWriterConfig.getCodec().getName(), codecService.codec(codecName).getName());\n    }\n","realPath":"server/src/test/java/org/elasticsearch/index/engine/InternalEngineTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":2605,"status":"M"},{"authorDate":"2021-09-03 21:54:43","commitOrder":4,"curCode":"    public void setUp() throws Exception {\n        super.setUp();\n        primaryTerm.set(randomLongBetween(1, Long.MAX_VALUE));\n        CodecService codecService = new CodecService(null);\n        String name = Codec.getDefault().getName();\n        if (Arrays.asList(codecService.availableCodecs()).contains(name)) {\n            \r\n            \r\n            codecName = name;\n        } else {\n            codecName = \"default\";\n        }\n        defaultSettings = IndexSettingsModule.newIndexSettings(\"test\", indexSettings());\n        threadPool = new TestThreadPool(getClass().getName());\n        store = createStore();\n        storeReplica = createStore();\n        Lucene.cleanLuceneIndex(store.directory());\n        Lucene.cleanLuceneIndex(storeReplica.directory());\n        primaryTranslogDir = createTempDir(\"translog-primary\");\n        translogHandler = createTranslogHandler(defaultSettings);\n        engine = createEngine(store, primaryTranslogDir);\n        LiveIndexWriterConfig currentIndexWriterConfig = engine.getCurrentIndexWriterConfig();\n\n        assertEquals(engine.config().getCodec().getName(), codecService.codec(codecName).getName());\n        assertEquals(currentIndexWriterConfig.getCodec().getName(), codecService.codec(codecName).getName());\n        if (randomBoolean()) {\n            engine.config().setEnableGcDeletes(false);\n        }\n        replicaTranslogDir = createTempDir(\"translog-replica\");\n        replicaEngine = createEngine(storeReplica, replicaTranslogDir);\n        currentIndexWriterConfig = replicaEngine.getCurrentIndexWriterConfig();\n\n        assertEquals(replicaEngine.config().getCodec().getName(), codecService.codec(codecName).getName());\n        assertEquals(currentIndexWriterConfig.getCodec().getName(), codecService.codec(codecName).getName());\n        if (randomBoolean()) {\n            engine.config().setEnableGcDeletes(false);\n        }\n    }\n","date":"2021-09-03 21:54:43","endLine":232,"groupId":"102503","id":8,"instanceNumber":2,"isCurCommit":1,"methodName":"setUp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/43/abc30d8eb5a7d84dd952b2ecd51287e94e0f53.src","preCode":"    public void setUp() throws Exception {\n        super.setUp();\n        primaryTerm.set(randomLongBetween(1, Long.MAX_VALUE));\n        CodecService codecService = new CodecService(null, logger);\n        String name = Codec.getDefault().getName();\n        if (Arrays.asList(codecService.availableCodecs()).contains(name)) {\n            \r\n            \r\n            codecName = name;\n        } else {\n            codecName = \"default\";\n        }\n        defaultSettings = IndexSettingsModule.newIndexSettings(\"test\", indexSettings());\n        threadPool = new TestThreadPool(getClass().getName());\n        store = createStore();\n        storeReplica = createStore();\n        Lucene.cleanLuceneIndex(store.directory());\n        Lucene.cleanLuceneIndex(storeReplica.directory());\n        primaryTranslogDir = createTempDir(\"translog-primary\");\n        translogHandler = createTranslogHandler(defaultSettings);\n        engine = createEngine(store, primaryTranslogDir);\n        LiveIndexWriterConfig currentIndexWriterConfig = engine.getCurrentIndexWriterConfig();\n\n        assertEquals(engine.config().getCodec().getName(), codecService.codec(codecName).getName());\n        assertEquals(currentIndexWriterConfig.getCodec().getName(), codecService.codec(codecName).getName());\n        if (randomBoolean()) {\n            engine.config().setEnableGcDeletes(false);\n        }\n        replicaTranslogDir = createTempDir(\"translog-replica\");\n        replicaEngine = createEngine(storeReplica, replicaTranslogDir);\n        currentIndexWriterConfig = replicaEngine.getCurrentIndexWriterConfig();\n\n        assertEquals(replicaEngine.config().getCodec().getName(), codecService.codec(codecName).getName());\n        assertEquals(currentIndexWriterConfig.getCodec().getName(), codecService.codec(codecName).getName());\n        if (randomBoolean()) {\n            engine.config().setEnableGcDeletes(false);\n        }\n    }\n","realPath":"test/framework/src/main/java/org/elasticsearch/index/engine/EngineTestCase.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":195,"status":"M"}],"commitId":"385b97f92b2ba14d72caed9afd4c1b7f2023d78b","commitMessage":"@@@Choose postings format from FieldMapper instead of MappedFieldType (#77234)\n\nCurrently we configure per-field postings formats by asking the MapperService\nfor the MappedFieldType of the field in question.  and then checking to see if it\nis a completion field. If no MappedFieldType is available.  we emit a warning.\nHowever.  MappedFieldTypes are for search fields only.  and so we end up emitting\nwarnings for hidden sub-fields that have no corresponding field type.  such as\nprefix or phrase accelerator fields on text mappers.\n\nThis commit reworks things so that the MappingLookup is responsible for defining\nper-field postings formats.  and will detect CompletionFieldMappers at build time.\nAll fields that are not mapped to a completion field will just get the default postings\nformat. This also means that we no longer need a logger instance on CodecService.\n\nFixes #77183","date":"2021-09-03 21:54:43","modifiedFileCount":"14","status":"M","submitter":"Alan Woodward"}]
