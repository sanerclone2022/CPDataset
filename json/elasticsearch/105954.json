[{"authorTime":"2018-04-26 03:22:53","codes":[{"authorDate":"2018-04-26 03:22:53","commitOrder":1,"curCode":"    public void testPassNumRoutingShards() {\n        ClusterState clusterState = ClusterState.builder(createClusterState(\"source\", 1, 0,\n            Settings.builder().put(\"index.blocks.write\", true).build())).nodes(DiscoveryNodes.builder().add(newNode(\"node1\")))\n            .build();\n        AllocationService service = new AllocationService(Settings.builder().build(), new AllocationDeciders(Settings.EMPTY,\n            Collections.singleton(new MaxRetryAllocationDecider(Settings.EMPTY))),\n            new TestGatewayAllocator(), new BalancedShardsAllocator(Settings.EMPTY), EmptyClusterInfoService.INSTANCE);\n\n        RoutingTable routingTable = service.reroute(clusterState, \"reroute\").routingTable();\n        clusterState = ClusterState.builder(clusterState).routingTable(routingTable).build();\n        \r\n        routingTable = service.applyStartedShards(clusterState,\n            routingTable.index(\"source\").shardsWithState(ShardRoutingState.INITIALIZING)).routingTable();\n        clusterState = ClusterState.builder(clusterState).routingTable(routingTable).build();\n\n        ResizeRequest resizeRequest = new ResizeRequest(\"target\", \"source\");\n        resizeRequest.setResizeType(ResizeType.SPLIT);\n        resizeRequest.getTargetIndexRequest()\n            .settings(Settings.builder().put(\"index.number_of_shards\", 2).build());\n        TransportResizeAction.prepareCreateIndexRequest(resizeRequest, clusterState, null, \"source\", \"target\");\n\n        resizeRequest.getTargetIndexRequest()\n            .settings(Settings.builder()\n                .put(\"index.number_of_routing_shards\", randomIntBetween(2, 10))\n                .put(\"index.number_of_shards\", 2)\n                .build());\n        TransportResizeAction.prepareCreateIndexRequest(resizeRequest, clusterState, null, \"source\", \"target\");\n    }\n","date":"2018-04-26 03:22:53","endLine":141,"groupId":"30061","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testPassNumRoutingShards","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/bd/43182f00756e970fe439b28a22d5f69e140aed.src","preCode":"    public void testPassNumRoutingShards() {\n        ClusterState clusterState = ClusterState.builder(createClusterState(\"source\", 1, 0,\n            Settings.builder().put(\"index.blocks.write\", true).build())).nodes(DiscoveryNodes.builder().add(newNode(\"node1\")))\n            .build();\n        AllocationService service = new AllocationService(Settings.builder().build(), new AllocationDeciders(Settings.EMPTY,\n            Collections.singleton(new MaxRetryAllocationDecider(Settings.EMPTY))),\n            new TestGatewayAllocator(), new BalancedShardsAllocator(Settings.EMPTY), EmptyClusterInfoService.INSTANCE);\n\n        RoutingTable routingTable = service.reroute(clusterState, \"reroute\").routingTable();\n        clusterState = ClusterState.builder(clusterState).routingTable(routingTable).build();\n        \r\n        routingTable = service.applyStartedShards(clusterState,\n            routingTable.index(\"source\").shardsWithState(ShardRoutingState.INITIALIZING)).routingTable();\n        clusterState = ClusterState.builder(clusterState).routingTable(routingTable).build();\n\n        ResizeRequest resizeRequest = new ResizeRequest(\"target\", \"source\");\n        resizeRequest.setResizeType(ResizeType.SPLIT);\n        resizeRequest.getTargetIndexRequest()\n            .settings(Settings.builder().put(\"index.number_of_shards\", 2).build());\n        TransportResizeAction.prepareCreateIndexRequest(resizeRequest, clusterState, null, \"source\", \"target\");\n\n        resizeRequest.getTargetIndexRequest()\n            .settings(Settings.builder()\n                .put(\"index.number_of_routing_shards\", randomIntBetween(2, 10))\n                .put(\"index.number_of_shards\", 2)\n                .build());\n        TransportResizeAction.prepareCreateIndexRequest(resizeRequest, clusterState, null, \"source\", \"target\");\n    }\n","realPath":"server/src/test/java/org/elasticsearch/action/admin/indices/shrink/TransportResizeActionTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":114,"status":"B"},{"authorDate":"2018-04-26 03:22:53","commitOrder":1,"curCode":"    public void testPassNumRoutingShardsAndFail() {\n        int numShards = randomIntBetween(2, 100);\n        ClusterState clusterState = ClusterState.builder(createClusterState(\"source\", numShards, 0, numShards * 4,\n            Settings.builder().put(\"index.blocks.write\", true).build())).nodes(DiscoveryNodes.builder().add(newNode(\"node1\")))\n            .build();\n        AllocationService service = new AllocationService(Settings.builder().build(), new AllocationDeciders(Settings.EMPTY,\n            Collections.singleton(new MaxRetryAllocationDecider(Settings.EMPTY))),\n            new TestGatewayAllocator(), new BalancedShardsAllocator(Settings.EMPTY), EmptyClusterInfoService.INSTANCE);\n\n        RoutingTable routingTable = service.reroute(clusterState, \"reroute\").routingTable();\n        clusterState = ClusterState.builder(clusterState).routingTable(routingTable).build();\n        \r\n        routingTable = service.applyStartedShards(clusterState,\n            routingTable.index(\"source\").shardsWithState(ShardRoutingState.INITIALIZING)).routingTable();\n        clusterState = ClusterState.builder(clusterState).routingTable(routingTable).build();\n\n        ResizeRequest resizeRequest = new ResizeRequest(\"target\", \"source\");\n        resizeRequest.setResizeType(ResizeType.SPLIT);\n        resizeRequest.getTargetIndexRequest()\n            .settings(Settings.builder().put(\"index.number_of_shards\", numShards * 2).build());\n        TransportResizeAction.prepareCreateIndexRequest(resizeRequest, clusterState, null, \"source\", \"target\");\n\n        resizeRequest.getTargetIndexRequest()\n            .settings(Settings.builder()\n                .put(\"index.number_of_shards\", numShards * 2)\n                .put(\"index.number_of_routing_shards\", numShards * 2).build());\n        ClusterState finalState = clusterState;\n        IllegalArgumentException iae = expectThrows(IllegalArgumentException.class,\n            () -> TransportResizeAction.prepareCreateIndexRequest(resizeRequest, finalState, null, \"source\", \"target\"));\n        assertEquals(\"cannot provide index.number_of_routing_shards on resize\", iae.getMessage());\n    }\n","date":"2018-04-26 03:22:53","endLine":173,"groupId":"30061","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testPassNumRoutingShardsAndFail","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/bd/43182f00756e970fe439b28a22d5f69e140aed.src","preCode":"    public void testPassNumRoutingShardsAndFail() {\n        int numShards = randomIntBetween(2, 100);\n        ClusterState clusterState = ClusterState.builder(createClusterState(\"source\", numShards, 0, numShards * 4,\n            Settings.builder().put(\"index.blocks.write\", true).build())).nodes(DiscoveryNodes.builder().add(newNode(\"node1\")))\n            .build();\n        AllocationService service = new AllocationService(Settings.builder().build(), new AllocationDeciders(Settings.EMPTY,\n            Collections.singleton(new MaxRetryAllocationDecider(Settings.EMPTY))),\n            new TestGatewayAllocator(), new BalancedShardsAllocator(Settings.EMPTY), EmptyClusterInfoService.INSTANCE);\n\n        RoutingTable routingTable = service.reroute(clusterState, \"reroute\").routingTable();\n        clusterState = ClusterState.builder(clusterState).routingTable(routingTable).build();\n        \r\n        routingTable = service.applyStartedShards(clusterState,\n            routingTable.index(\"source\").shardsWithState(ShardRoutingState.INITIALIZING)).routingTable();\n        clusterState = ClusterState.builder(clusterState).routingTable(routingTable).build();\n\n        ResizeRequest resizeRequest = new ResizeRequest(\"target\", \"source\");\n        resizeRequest.setResizeType(ResizeType.SPLIT);\n        resizeRequest.getTargetIndexRequest()\n            .settings(Settings.builder().put(\"index.number_of_shards\", numShards * 2).build());\n        TransportResizeAction.prepareCreateIndexRequest(resizeRequest, clusterState, null, \"source\", \"target\");\n\n        resizeRequest.getTargetIndexRequest()\n            .settings(Settings.builder()\n                .put(\"index.number_of_shards\", numShards * 2)\n                .put(\"index.number_of_routing_shards\", numShards * 2).build());\n        ClusterState finalState = clusterState;\n        IllegalArgumentException iae = expectThrows(IllegalArgumentException.class,\n            () -> TransportResizeAction.prepareCreateIndexRequest(resizeRequest, finalState, null, \"source\", \"target\"));\n        assertEquals(\"cannot provide index.number_of_routing_shards on resize\", iae.getMessage());\n    }\n","realPath":"server/src/test/java/org/elasticsearch/action/admin/indices/shrink/TransportResizeActionTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":143,"status":"B"}],"commitId":"d74fb9eb4559077e2d20b19a9ed62d9ff825027a","commitMessage":"@@@Opened x-pack ILM code\n","date":"2018-04-26 03:22:53","modifiedFileCount":"0","status":"B","submitter":"Tal Levy"},{"authorTime":"2018-11-02 00:05:41","codes":[{"authorDate":"2018-11-02 00:05:41","commitOrder":2,"curCode":"    public void testPassNumRoutingShards() {\n        ClusterState clusterState = ClusterState.builder(createClusterState(\"source\", 1, 0,\n            Settings.builder().put(\"index.blocks.write\", true).build())).nodes(DiscoveryNodes.builder().add(newNode(\"node1\")))\n            .build();\n        AllocationService service = new AllocationService(new AllocationDeciders(\n            Collections.singleton(new MaxRetryAllocationDecider())),\n            new TestGatewayAllocator(), new BalancedShardsAllocator(Settings.EMPTY), EmptyClusterInfoService.INSTANCE);\n\n        RoutingTable routingTable = service.reroute(clusterState, \"reroute\").routingTable();\n        clusterState = ClusterState.builder(clusterState).routingTable(routingTable).build();\n        \r\n        routingTable = service.applyStartedShards(clusterState,\n            routingTable.index(\"source\").shardsWithState(ShardRoutingState.INITIALIZING)).routingTable();\n        clusterState = ClusterState.builder(clusterState).routingTable(routingTable).build();\n\n        ResizeRequest resizeRequest = new ResizeRequest(\"target\", \"source\");\n        resizeRequest.setResizeType(ResizeType.SPLIT);\n        resizeRequest.getTargetIndexRequest()\n            .settings(Settings.builder().put(\"index.number_of_shards\", 2).build());\n        TransportResizeAction.prepareCreateIndexRequest(resizeRequest, clusterState, null, \"source\", \"target\");\n\n        resizeRequest.getTargetIndexRequest()\n            .settings(Settings.builder()\n                .put(\"index.number_of_routing_shards\", randomIntBetween(2, 10))\n                .put(\"index.number_of_shards\", 2)\n                .build());\n        TransportResizeAction.prepareCreateIndexRequest(resizeRequest, clusterState, null, \"source\", \"target\");\n    }\n","date":"2018-11-02 01:13:02","endLine":152,"groupId":"30061","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testPassNumRoutingShards","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/8f/2db1281485dc95f177028eae13dfe62458cd97.src","preCode":"    public void testPassNumRoutingShards() {\n        ClusterState clusterState = ClusterState.builder(createClusterState(\"source\", 1, 0,\n            Settings.builder().put(\"index.blocks.write\", true).build())).nodes(DiscoveryNodes.builder().add(newNode(\"node1\")))\n            .build();\n        AllocationService service = new AllocationService(Settings.builder().build(), new AllocationDeciders(Settings.EMPTY,\n            Collections.singleton(new MaxRetryAllocationDecider(Settings.EMPTY))),\n            new TestGatewayAllocator(), new BalancedShardsAllocator(Settings.EMPTY), EmptyClusterInfoService.INSTANCE);\n\n        RoutingTable routingTable = service.reroute(clusterState, \"reroute\").routingTable();\n        clusterState = ClusterState.builder(clusterState).routingTable(routingTable).build();\n        \r\n        routingTable = service.applyStartedShards(clusterState,\n            routingTable.index(\"source\").shardsWithState(ShardRoutingState.INITIALIZING)).routingTable();\n        clusterState = ClusterState.builder(clusterState).routingTable(routingTable).build();\n\n        ResizeRequest resizeRequest = new ResizeRequest(\"target\", \"source\");\n        resizeRequest.setResizeType(ResizeType.SPLIT);\n        resizeRequest.getTargetIndexRequest()\n            .settings(Settings.builder().put(\"index.number_of_shards\", 2).build());\n        TransportResizeAction.prepareCreateIndexRequest(resizeRequest, clusterState, null, \"source\", \"target\");\n\n        resizeRequest.getTargetIndexRequest()\n            .settings(Settings.builder()\n                .put(\"index.number_of_routing_shards\", randomIntBetween(2, 10))\n                .put(\"index.number_of_shards\", 2)\n                .build());\n        TransportResizeAction.prepareCreateIndexRequest(resizeRequest, clusterState, null, \"source\", \"target\");\n    }\n","realPath":"server/src/test/java/org/elasticsearch/action/admin/indices/shrink/TransportResizeActionTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":125,"status":"M"},{"authorDate":"2018-11-02 00:05:41","commitOrder":2,"curCode":"    public void testPassNumRoutingShardsAndFail() {\n        int numShards = randomIntBetween(2, 100);\n        ClusterState clusterState = ClusterState.builder(createClusterState(\"source\", numShards, 0, numShards * 4,\n            Settings.builder().put(\"index.blocks.write\", true).build())).nodes(DiscoveryNodes.builder().add(newNode(\"node1\")))\n            .build();\n        AllocationService service = new AllocationService(new AllocationDeciders(\n            Collections.singleton(new MaxRetryAllocationDecider())),\n            new TestGatewayAllocator(), new BalancedShardsAllocator(Settings.EMPTY), EmptyClusterInfoService.INSTANCE);\n\n        RoutingTable routingTable = service.reroute(clusterState, \"reroute\").routingTable();\n        clusterState = ClusterState.builder(clusterState).routingTable(routingTable).build();\n        \r\n        routingTable = service.applyStartedShards(clusterState,\n            routingTable.index(\"source\").shardsWithState(ShardRoutingState.INITIALIZING)).routingTable();\n        clusterState = ClusterState.builder(clusterState).routingTable(routingTable).build();\n\n        ResizeRequest resizeRequest = new ResizeRequest(\"target\", \"source\");\n        resizeRequest.setResizeType(ResizeType.SPLIT);\n        resizeRequest.getTargetIndexRequest()\n            .settings(Settings.builder().put(\"index.number_of_shards\", numShards * 2).build());\n        TransportResizeAction.prepareCreateIndexRequest(resizeRequest, clusterState, null, \"source\", \"target\");\n\n        resizeRequest.getTargetIndexRequest()\n            .settings(Settings.builder()\n                .put(\"index.number_of_shards\", numShards * 2)\n                .put(\"index.number_of_routing_shards\", numShards * 2).build());\n        ClusterState finalState = clusterState;\n        IllegalArgumentException iae = expectThrows(IllegalArgumentException.class,\n            () -> TransportResizeAction.prepareCreateIndexRequest(resizeRequest, finalState, null, \"source\", \"target\"));\n        assertEquals(\"cannot provide index.number_of_routing_shards on resize\", iae.getMessage());\n    }\n","date":"2018-11-02 01:13:02","endLine":184,"groupId":"30061","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testPassNumRoutingShardsAndFail","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/8f/2db1281485dc95f177028eae13dfe62458cd97.src","preCode":"    public void testPassNumRoutingShardsAndFail() {\n        int numShards = randomIntBetween(2, 100);\n        ClusterState clusterState = ClusterState.builder(createClusterState(\"source\", numShards, 0, numShards * 4,\n            Settings.builder().put(\"index.blocks.write\", true).build())).nodes(DiscoveryNodes.builder().add(newNode(\"node1\")))\n            .build();\n        AllocationService service = new AllocationService(Settings.builder().build(), new AllocationDeciders(Settings.EMPTY,\n            Collections.singleton(new MaxRetryAllocationDecider(Settings.EMPTY))),\n            new TestGatewayAllocator(), new BalancedShardsAllocator(Settings.EMPTY), EmptyClusterInfoService.INSTANCE);\n\n        RoutingTable routingTable = service.reroute(clusterState, \"reroute\").routingTable();\n        clusterState = ClusterState.builder(clusterState).routingTable(routingTable).build();\n        \r\n        routingTable = service.applyStartedShards(clusterState,\n            routingTable.index(\"source\").shardsWithState(ShardRoutingState.INITIALIZING)).routingTable();\n        clusterState = ClusterState.builder(clusterState).routingTable(routingTable).build();\n\n        ResizeRequest resizeRequest = new ResizeRequest(\"target\", \"source\");\n        resizeRequest.setResizeType(ResizeType.SPLIT);\n        resizeRequest.getTargetIndexRequest()\n            .settings(Settings.builder().put(\"index.number_of_shards\", numShards * 2).build());\n        TransportResizeAction.prepareCreateIndexRequest(resizeRequest, clusterState, null, \"source\", \"target\");\n\n        resizeRequest.getTargetIndexRequest()\n            .settings(Settings.builder()\n                .put(\"index.number_of_shards\", numShards * 2)\n                .put(\"index.number_of_routing_shards\", numShards * 2).build());\n        ClusterState finalState = clusterState;\n        IllegalArgumentException iae = expectThrows(IllegalArgumentException.class,\n            () -> TransportResizeAction.prepareCreateIndexRequest(resizeRequest, finalState, null, \"source\", \"target\"));\n        assertEquals(\"cannot provide index.number_of_routing_shards on resize\", iae.getMessage());\n    }\n","realPath":"server/src/test/java/org/elasticsearch/action/admin/indices/shrink/TransportResizeActionTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":154,"status":"M"}],"commitId":"c3cf7dd305b3d4636405c292659dbff05307f146","commitMessage":"@@@Merge remote-tracking branch 'upstream/master' into index-lifecycle\n","date":"2018-11-02 01:13:02","modifiedFileCount":"456","status":"M","submitter":"Tal Levy"},{"authorTime":"2019-07-18 13:39:24","codes":[{"authorDate":"2019-07-18 13:39:24","commitOrder":3,"curCode":"    public void testPassNumRoutingShards() {\n        ClusterState clusterState = ClusterState.builder(createClusterState(\"source\", 1, 0,\n            Settings.builder().put(\"index.blocks.write\", true).build())).nodes(DiscoveryNodes.builder().add(newNode(\"node1\")))\n            .build();\n        AllocationService service = new AllocationService(new AllocationDeciders(\n            Collections.singleton(new MaxRetryAllocationDecider())),\n            new TestGatewayAllocator(), new BalancedShardsAllocator(Settings.EMPTY), EmptyClusterInfoService.INSTANCE);\n\n        RoutingTable routingTable = service.reroute(clusterState, \"reroute\").routingTable();\n        clusterState = ClusterState.builder(clusterState).routingTable(routingTable).build();\n        \r\n        routingTable = ESAllocationTestCase.startInitializingShardsAndReroute(service, clusterState, \"source\").routingTable();\n        clusterState = ClusterState.builder(clusterState).routingTable(routingTable).build();\n\n        ResizeRequest resizeRequest = new ResizeRequest(\"target\", \"source\");\n        resizeRequest.setResizeType(ResizeType.SPLIT);\n        resizeRequest.getTargetIndexRequest()\n            .settings(Settings.builder().put(\"index.number_of_shards\", 2).build());\n        TransportResizeAction.prepareCreateIndexRequest(resizeRequest, clusterState, null, \"source\", \"target\");\n\n        resizeRequest.getTargetIndexRequest()\n            .settings(Settings.builder()\n                .put(\"index.number_of_routing_shards\", randomIntBetween(2, 10))\n                .put(\"index.number_of_shards\", 2)\n                .build());\n        TransportResizeAction.prepareCreateIndexRequest(resizeRequest, clusterState, null, \"source\", \"target\");\n    }\n","date":"2019-07-18 13:39:24","endLine":150,"groupId":"30061","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testPassNumRoutingShards","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/49/faaa1f0d25e7066bebf54f84567a89f0f76f45.src","preCode":"    public void testPassNumRoutingShards() {\n        ClusterState clusterState = ClusterState.builder(createClusterState(\"source\", 1, 0,\n            Settings.builder().put(\"index.blocks.write\", true).build())).nodes(DiscoveryNodes.builder().add(newNode(\"node1\")))\n            .build();\n        AllocationService service = new AllocationService(new AllocationDeciders(\n            Collections.singleton(new MaxRetryAllocationDecider())),\n            new TestGatewayAllocator(), new BalancedShardsAllocator(Settings.EMPTY), EmptyClusterInfoService.INSTANCE);\n\n        RoutingTable routingTable = service.reroute(clusterState, \"reroute\").routingTable();\n        clusterState = ClusterState.builder(clusterState).routingTable(routingTable).build();\n        \r\n        routingTable = service.applyStartedShards(clusterState,\n            routingTable.index(\"source\").shardsWithState(ShardRoutingState.INITIALIZING)).routingTable();\n        clusterState = ClusterState.builder(clusterState).routingTable(routingTable).build();\n\n        ResizeRequest resizeRequest = new ResizeRequest(\"target\", \"source\");\n        resizeRequest.setResizeType(ResizeType.SPLIT);\n        resizeRequest.getTargetIndexRequest()\n            .settings(Settings.builder().put(\"index.number_of_shards\", 2).build());\n        TransportResizeAction.prepareCreateIndexRequest(resizeRequest, clusterState, null, \"source\", \"target\");\n\n        resizeRequest.getTargetIndexRequest()\n            .settings(Settings.builder()\n                .put(\"index.number_of_routing_shards\", randomIntBetween(2, 10))\n                .put(\"index.number_of_shards\", 2)\n                .build());\n        TransportResizeAction.prepareCreateIndexRequest(resizeRequest, clusterState, null, \"source\", \"target\");\n    }\n","realPath":"server/src/test/java/org/elasticsearch/action/admin/indices/shrink/TransportResizeActionTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":124,"status":"M"},{"authorDate":"2019-07-18 13:39:24","commitOrder":3,"curCode":"    public void testPassNumRoutingShardsAndFail() {\n        int numShards = randomIntBetween(2, 100);\n        ClusterState clusterState = ClusterState.builder(createClusterState(\"source\", numShards, 0, numShards * 4,\n            Settings.builder().put(\"index.blocks.write\", true).build())).nodes(DiscoveryNodes.builder().add(newNode(\"node1\")))\n            .build();\n        AllocationService service = new AllocationService(new AllocationDeciders(\n            Collections.singleton(new MaxRetryAllocationDecider())),\n            new TestGatewayAllocator(), new BalancedShardsAllocator(Settings.EMPTY), EmptyClusterInfoService.INSTANCE);\n\n        RoutingTable routingTable = service.reroute(clusterState, \"reroute\").routingTable();\n        clusterState = ClusterState.builder(clusterState).routingTable(routingTable).build();\n        \r\n        routingTable = ESAllocationTestCase.startInitializingShardsAndReroute(service, clusterState, \"source\").routingTable();\n        clusterState = ClusterState.builder(clusterState).routingTable(routingTable).build();\n\n        ResizeRequest resizeRequest = new ResizeRequest(\"target\", \"source\");\n        resizeRequest.setResizeType(ResizeType.SPLIT);\n        resizeRequest.getTargetIndexRequest()\n            .settings(Settings.builder().put(\"index.number_of_shards\", numShards * 2).build());\n        TransportResizeAction.prepareCreateIndexRequest(resizeRequest, clusterState, null, \"source\", \"target\");\n\n        resizeRequest.getTargetIndexRequest()\n            .settings(Settings.builder()\n                .put(\"index.number_of_shards\", numShards * 2)\n                .put(\"index.number_of_routing_shards\", numShards * 2).build());\n        ClusterState finalState = clusterState;\n        IllegalArgumentException iae = expectThrows(IllegalArgumentException.class,\n            () -> TransportResizeAction.prepareCreateIndexRequest(resizeRequest, finalState, null, \"source\", \"target\"));\n        assertEquals(\"cannot provide index.number_of_routing_shards on resize\", iae.getMessage());\n    }\n","date":"2019-07-18 13:39:24","endLine":181,"groupId":"30061","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testPassNumRoutingShardsAndFail","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/49/faaa1f0d25e7066bebf54f84567a89f0f76f45.src","preCode":"    public void testPassNumRoutingShardsAndFail() {\n        int numShards = randomIntBetween(2, 100);\n        ClusterState clusterState = ClusterState.builder(createClusterState(\"source\", numShards, 0, numShards * 4,\n            Settings.builder().put(\"index.blocks.write\", true).build())).nodes(DiscoveryNodes.builder().add(newNode(\"node1\")))\n            .build();\n        AllocationService service = new AllocationService(new AllocationDeciders(\n            Collections.singleton(new MaxRetryAllocationDecider())),\n            new TestGatewayAllocator(), new BalancedShardsAllocator(Settings.EMPTY), EmptyClusterInfoService.INSTANCE);\n\n        RoutingTable routingTable = service.reroute(clusterState, \"reroute\").routingTable();\n        clusterState = ClusterState.builder(clusterState).routingTable(routingTable).build();\n        \r\n        routingTable = service.applyStartedShards(clusterState,\n            routingTable.index(\"source\").shardsWithState(ShardRoutingState.INITIALIZING)).routingTable();\n        clusterState = ClusterState.builder(clusterState).routingTable(routingTable).build();\n\n        ResizeRequest resizeRequest = new ResizeRequest(\"target\", \"source\");\n        resizeRequest.setResizeType(ResizeType.SPLIT);\n        resizeRequest.getTargetIndexRequest()\n            .settings(Settings.builder().put(\"index.number_of_shards\", numShards * 2).build());\n        TransportResizeAction.prepareCreateIndexRequest(resizeRequest, clusterState, null, \"source\", \"target\");\n\n        resizeRequest.getTargetIndexRequest()\n            .settings(Settings.builder()\n                .put(\"index.number_of_shards\", numShards * 2)\n                .put(\"index.number_of_routing_shards\", numShards * 2).build());\n        ClusterState finalState = clusterState;\n        IllegalArgumentException iae = expectThrows(IllegalArgumentException.class,\n            () -> TransportResizeAction.prepareCreateIndexRequest(resizeRequest, finalState, null, \"source\", \"target\"));\n        assertEquals(\"cannot provide index.number_of_routing_shards on resize\", iae.getMessage());\n    }\n","realPath":"server/src/test/java/org/elasticsearch/action/admin/indices/shrink/TransportResizeActionTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":152,"status":"M"}],"commitId":"51fb95ef83f7a1aa6cbc5207e504b03ccee724ee","commitMessage":"@@@Defer reroute when starting shards (#44433)\n\n* Defer reroute when starting shards\n\nToday we reroute the cluster as part of the process of starting a shard.  which\nruns at `URGENT` priority. In large clusters.  rerouting may take some time to\ncomplete.  and this means that a mere trickle of shard-started events can cause\nstarvation for other.  lower-priority.  tasks that are pending on the master.\n\nHowever.  it isn't really necessary to perform a reroute when starting a shard. \nas long as one occurs eventually. This commit removes the inline reroute from\nthe process of starting a shard and replaces it with a deferred one that runs\nat `NORMAL` priority.  avoiding starvation of higher-priority tasks.\n\nThis may improve some of the situations related to #42738 and #42105.\n\n* Specific test case for followup priority setting\n\nWe cannot set the priority in all InternalTestClusters because the deprecation\nwarning makes some tests unhappy. This commit adds a specific test instead.\n\n* Checkstyle\n\n* Cluster state always changed here\n\n* Assert consistency of routing nodes\n\n* Restrict setting only to reasonable priorities\n","date":"2019-07-18 13:39:24","modifiedFileCount":"60","status":"M","submitter":"David Turner"},{"authorTime":"2020-10-06 23:29:42","codes":[{"authorDate":"2020-10-06 23:29:42","commitOrder":4,"curCode":"    public void testPassNumRoutingShards() {\n        ClusterState clusterState = ClusterState.builder(createClusterState(\"source\", 1, 0,\n            Settings.builder().put(\"index.blocks.write\", true).build())).nodes(DiscoveryNodes.builder().add(newNode(\"node1\")))\n            .build();\n        AllocationService service = new AllocationService(new AllocationDeciders(\n            Collections.singleton(new MaxRetryAllocationDecider())),\n            new TestGatewayAllocator(), new BalancedShardsAllocator(Settings.EMPTY), EmptyClusterInfoService.INSTANCE,\n            EmptySnapshotsInfoService.INSTANCE);\n\n        RoutingTable routingTable = service.reroute(clusterState, \"reroute\").routingTable();\n        clusterState = ClusterState.builder(clusterState).routingTable(routingTable).build();\n        \r\n        routingTable = ESAllocationTestCase.startInitializingShardsAndReroute(service, clusterState, \"source\").routingTable();\n        clusterState = ClusterState.builder(clusterState).routingTable(routingTable).build();\n\n        ResizeRequest resizeRequest = new ResizeRequest(\"target\", \"source\");\n        resizeRequest.setResizeType(ResizeType.SPLIT);\n        resizeRequest.getTargetIndexRequest()\n            .settings(Settings.builder().put(\"index.number_of_shards\", 2).build());\n        TransportResizeAction.prepareCreateIndexRequest(resizeRequest, clusterState, null, \"source\", \"target\");\n\n        resizeRequest.getTargetIndexRequest()\n            .settings(Settings.builder()\n                .put(\"index.number_of_routing_shards\", randomIntBetween(2, 10))\n                .put(\"index.number_of_shards\", 2)\n                .build());\n        TransportResizeAction.prepareCreateIndexRequest(resizeRequest, clusterState, null, \"source\", \"target\");\n    }\n","date":"2020-10-06 23:29:42","endLine":153,"groupId":"30061","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"testPassNumRoutingShards","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/0e/c48b376cb9dfceb479a405970083f239cd4280.src","preCode":"    public void testPassNumRoutingShards() {\n        ClusterState clusterState = ClusterState.builder(createClusterState(\"source\", 1, 0,\n            Settings.builder().put(\"index.blocks.write\", true).build())).nodes(DiscoveryNodes.builder().add(newNode(\"node1\")))\n            .build();\n        AllocationService service = new AllocationService(new AllocationDeciders(\n            Collections.singleton(new MaxRetryAllocationDecider())),\n            new TestGatewayAllocator(), new BalancedShardsAllocator(Settings.EMPTY), EmptyClusterInfoService.INSTANCE);\n\n        RoutingTable routingTable = service.reroute(clusterState, \"reroute\").routingTable();\n        clusterState = ClusterState.builder(clusterState).routingTable(routingTable).build();\n        \r\n        routingTable = ESAllocationTestCase.startInitializingShardsAndReroute(service, clusterState, \"source\").routingTable();\n        clusterState = ClusterState.builder(clusterState).routingTable(routingTable).build();\n\n        ResizeRequest resizeRequest = new ResizeRequest(\"target\", \"source\");\n        resizeRequest.setResizeType(ResizeType.SPLIT);\n        resizeRequest.getTargetIndexRequest()\n            .settings(Settings.builder().put(\"index.number_of_shards\", 2).build());\n        TransportResizeAction.prepareCreateIndexRequest(resizeRequest, clusterState, null, \"source\", \"target\");\n\n        resizeRequest.getTargetIndexRequest()\n            .settings(Settings.builder()\n                .put(\"index.number_of_routing_shards\", randomIntBetween(2, 10))\n                .put(\"index.number_of_shards\", 2)\n                .build());\n        TransportResizeAction.prepareCreateIndexRequest(resizeRequest, clusterState, null, \"source\", \"target\");\n    }\n","realPath":"server/src/test/java/org/elasticsearch/action/admin/indices/shrink/TransportResizeActionTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":126,"status":"M"},{"authorDate":"2020-10-06 23:29:42","commitOrder":4,"curCode":"    public void testPassNumRoutingShardsAndFail() {\n        int numShards = randomIntBetween(2, 100);\n        ClusterState clusterState = ClusterState.builder(createClusterState(\"source\", numShards, 0, numShards * 4,\n            Settings.builder().put(\"index.blocks.write\", true).build())).nodes(DiscoveryNodes.builder().add(newNode(\"node1\")))\n            .build();\n        AllocationService service = new AllocationService(new AllocationDeciders(\n            Collections.singleton(new MaxRetryAllocationDecider())),\n            new TestGatewayAllocator(), new BalancedShardsAllocator(Settings.EMPTY), EmptyClusterInfoService.INSTANCE,\n            EmptySnapshotsInfoService.INSTANCE);\n\n        RoutingTable routingTable = service.reroute(clusterState, \"reroute\").routingTable();\n        clusterState = ClusterState.builder(clusterState).routingTable(routingTable).build();\n        \r\n        routingTable = ESAllocationTestCase.startInitializingShardsAndReroute(service, clusterState, \"source\").routingTable();\n        clusterState = ClusterState.builder(clusterState).routingTable(routingTable).build();\n\n        ResizeRequest resizeRequest = new ResizeRequest(\"target\", \"source\");\n        resizeRequest.setResizeType(ResizeType.SPLIT);\n        resizeRequest.getTargetIndexRequest()\n            .settings(Settings.builder().put(\"index.number_of_shards\", numShards * 2).build());\n        TransportResizeAction.prepareCreateIndexRequest(resizeRequest, clusterState, null, \"source\", \"target\");\n\n        resizeRequest.getTargetIndexRequest()\n            .settings(Settings.builder()\n                .put(\"index.number_of_shards\", numShards * 2)\n                .put(\"index.number_of_routing_shards\", numShards * 2).build());\n        ClusterState finalState = clusterState;\n        IllegalArgumentException iae = expectThrows(IllegalArgumentException.class,\n            () -> TransportResizeAction.prepareCreateIndexRequest(resizeRequest, finalState, null, \"source\", \"target\"));\n        assertEquals(\"cannot provide index.number_of_routing_shards on resize\", iae.getMessage());\n    }\n","date":"2020-10-06 23:29:42","endLine":185,"groupId":"30061","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"testPassNumRoutingShardsAndFail","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/0e/c48b376cb9dfceb479a405970083f239cd4280.src","preCode":"    public void testPassNumRoutingShardsAndFail() {\n        int numShards = randomIntBetween(2, 100);\n        ClusterState clusterState = ClusterState.builder(createClusterState(\"source\", numShards, 0, numShards * 4,\n            Settings.builder().put(\"index.blocks.write\", true).build())).nodes(DiscoveryNodes.builder().add(newNode(\"node1\")))\n            .build();\n        AllocationService service = new AllocationService(new AllocationDeciders(\n            Collections.singleton(new MaxRetryAllocationDecider())),\n            new TestGatewayAllocator(), new BalancedShardsAllocator(Settings.EMPTY), EmptyClusterInfoService.INSTANCE);\n\n        RoutingTable routingTable = service.reroute(clusterState, \"reroute\").routingTable();\n        clusterState = ClusterState.builder(clusterState).routingTable(routingTable).build();\n        \r\n        routingTable = ESAllocationTestCase.startInitializingShardsAndReroute(service, clusterState, \"source\").routingTable();\n        clusterState = ClusterState.builder(clusterState).routingTable(routingTable).build();\n\n        ResizeRequest resizeRequest = new ResizeRequest(\"target\", \"source\");\n        resizeRequest.setResizeType(ResizeType.SPLIT);\n        resizeRequest.getTargetIndexRequest()\n            .settings(Settings.builder().put(\"index.number_of_shards\", numShards * 2).build());\n        TransportResizeAction.prepareCreateIndexRequest(resizeRequest, clusterState, null, \"source\", \"target\");\n\n        resizeRequest.getTargetIndexRequest()\n            .settings(Settings.builder()\n                .put(\"index.number_of_shards\", numShards * 2)\n                .put(\"index.number_of_routing_shards\", numShards * 2).build());\n        ClusterState finalState = clusterState;\n        IllegalArgumentException iae = expectThrows(IllegalArgumentException.class,\n            () -> TransportResizeAction.prepareCreateIndexRequest(resizeRequest, finalState, null, \"source\", \"target\"));\n        assertEquals(\"cannot provide index.number_of_routing_shards on resize\", iae.getMessage());\n    }\n","realPath":"server/src/test/java/org/elasticsearch/action/admin/indices/shrink/TransportResizeActionTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":155,"status":"M"}],"commitId":"2afec0d916c7de33c9a6c3cbe30a8a2ee61be765","commitMessage":"@@@Determine shard size before allocating shards recovering from snapshots (#61906)\n\nDetermines the shard size of shards before allocating shards that are \nrecovering from snapshots. It ensures during shard allocation that the \ntarget node that is selected as recovery target will have enough free \ndisk space for the recovery event. This applies to regular restores.  \nCCR bootstrap from remote.  as well as mounting searchable snapshots.\n\nThe InternalSnapshotInfoService is responsible for fetching snapshot \nshard sizes from repositories. It provides a getShardSize() method \nto other components of the system that can be used to retrieve the \nlatest known shard size. If the latest snapshot shard size retrieval \nfailed.  the getShardSize() returns \nShardRouting.UNAVAILABLE_EXPECTED_SHARD_SIZE. While \nwe'd like a better way to handle such failures.  returning this value \nallows to keep the existing behavior for now.\n\nNote that this PR does not address an issues (we already have today) \nwhere a replica is being allocated without knowing how much disk \nspace is being used by the primary. ","date":"2020-10-06 23:29:42","modifiedFileCount":"49","status":"M","submitter":"Yannick Welsch"},{"authorTime":"2020-12-01 07:48:34","codes":[{"authorDate":"2020-12-01 07:48:34","commitOrder":5,"curCode":"    public void testPassNumRoutingShards() {\n        ClusterState clusterState = ClusterState.builder(createClusterState(\"source\", 1, 0,\n            Settings.builder().put(\"index.blocks.write\", true).build())).nodes(DiscoveryNodes.builder().add(newNode(\"node1\")))\n            .build();\n        AllocationService service = new AllocationService(new AllocationDeciders(\n            Collections.singleton(new MaxRetryAllocationDecider())),\n            new TestGatewayAllocator(), new BalancedShardsAllocator(Settings.EMPTY), EmptyClusterInfoService.INSTANCE,\n            EmptySnapshotsInfoService.INSTANCE);\n\n        RoutingTable routingTable = service.reroute(clusterState, \"reroute\").routingTable();\n        clusterState = ClusterState.builder(clusterState).routingTable(routingTable).build();\n        \r\n        routingTable = ESAllocationTestCase.startInitializingShardsAndReroute(service, clusterState, \"source\").routingTable();\n        clusterState = ClusterState.builder(clusterState).routingTable(routingTable).build();\n\n        ResizeRequest resizeRequest = new ResizeRequest(\"target\", \"source\");\n        resizeRequest.setResizeType(ResizeType.SPLIT);\n        resizeRequest.getTargetIndexRequest()\n            .settings(Settings.builder().put(\"index.number_of_shards\", 2).build());\n        IndexMetadata indexMetadata = clusterState.metadata().index(\"source\");\n        TransportResizeAction.prepareCreateIndexRequest(resizeRequest, indexMetadata, null, \"target\");\n\n        resizeRequest.getTargetIndexRequest()\n            .settings(Settings.builder()\n                .put(\"index.number_of_routing_shards\", randomIntBetween(2, 10))\n                .put(\"index.number_of_shards\", 2)\n                .build());\n        TransportResizeAction.prepareCreateIndexRequest(resizeRequest, indexMetadata, null, \"target\");\n    }\n","date":"2020-12-01 07:48:34","endLine":155,"groupId":"30061","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"testPassNumRoutingShards","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/bd/ef84709cb457121f023c9ec84d1b592e521038.src","preCode":"    public void testPassNumRoutingShards() {\n        ClusterState clusterState = ClusterState.builder(createClusterState(\"source\", 1, 0,\n            Settings.builder().put(\"index.blocks.write\", true).build())).nodes(DiscoveryNodes.builder().add(newNode(\"node1\")))\n            .build();\n        AllocationService service = new AllocationService(new AllocationDeciders(\n            Collections.singleton(new MaxRetryAllocationDecider())),\n            new TestGatewayAllocator(), new BalancedShardsAllocator(Settings.EMPTY), EmptyClusterInfoService.INSTANCE,\n            EmptySnapshotsInfoService.INSTANCE);\n\n        RoutingTable routingTable = service.reroute(clusterState, \"reroute\").routingTable();\n        clusterState = ClusterState.builder(clusterState).routingTable(routingTable).build();\n        \r\n        routingTable = ESAllocationTestCase.startInitializingShardsAndReroute(service, clusterState, \"source\").routingTable();\n        clusterState = ClusterState.builder(clusterState).routingTable(routingTable).build();\n\n        ResizeRequest resizeRequest = new ResizeRequest(\"target\", \"source\");\n        resizeRequest.setResizeType(ResizeType.SPLIT);\n        resizeRequest.getTargetIndexRequest()\n            .settings(Settings.builder().put(\"index.number_of_shards\", 2).build());\n        TransportResizeAction.prepareCreateIndexRequest(resizeRequest, clusterState, null, \"source\", \"target\");\n\n        resizeRequest.getTargetIndexRequest()\n            .settings(Settings.builder()\n                .put(\"index.number_of_routing_shards\", randomIntBetween(2, 10))\n                .put(\"index.number_of_shards\", 2)\n                .build());\n        TransportResizeAction.prepareCreateIndexRequest(resizeRequest, clusterState, null, \"source\", \"target\");\n    }\n","realPath":"server/src/test/java/org/elasticsearch/action/admin/indices/shrink/TransportResizeActionTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":127,"status":"M"},{"authorDate":"2020-12-01 07:48:34","commitOrder":5,"curCode":"    public void testPassNumRoutingShardsAndFail() {\n        int numShards = randomIntBetween(2, 100);\n        ClusterState clusterState = ClusterState.builder(createClusterState(\"source\", numShards, 0, numShards * 4,\n            Settings.builder().put(\"index.blocks.write\", true).build())).nodes(DiscoveryNodes.builder().add(newNode(\"node1\")))\n            .build();\n        AllocationService service = new AllocationService(new AllocationDeciders(\n            Collections.singleton(new MaxRetryAllocationDecider())),\n            new TestGatewayAllocator(), new BalancedShardsAllocator(Settings.EMPTY), EmptyClusterInfoService.INSTANCE,\n            EmptySnapshotsInfoService.INSTANCE);\n\n        RoutingTable routingTable = service.reroute(clusterState, \"reroute\").routingTable();\n        clusterState = ClusterState.builder(clusterState).routingTable(routingTable).build();\n        \r\n        routingTable = ESAllocationTestCase.startInitializingShardsAndReroute(service, clusterState, \"source\").routingTable();\n        clusterState = ClusterState.builder(clusterState).routingTable(routingTable).build();\n\n        ResizeRequest resizeRequest = new ResizeRequest(\"target\", \"source\");\n        resizeRequest.setResizeType(ResizeType.SPLIT);\n        resizeRequest.getTargetIndexRequest()\n            .settings(Settings.builder().put(\"index.number_of_shards\", numShards * 2).build());\n        TransportResizeAction.prepareCreateIndexRequest(resizeRequest, clusterState.metadata().index(\"source\"), null, \"target\");\n\n        resizeRequest.getTargetIndexRequest()\n            .settings(Settings.builder()\n                .put(\"index.number_of_shards\", numShards * 2)\n                .put(\"index.number_of_routing_shards\", numShards * 2).build());\n        ClusterState finalState = clusterState;\n        IllegalArgumentException iae = expectThrows(IllegalArgumentException.class,\n            () -> TransportResizeAction.prepareCreateIndexRequest(resizeRequest, finalState.metadata().index(\"source\"), null, \"target\"));\n        assertEquals(\"cannot provide index.number_of_routing_shards on resize\", iae.getMessage());\n    }\n","date":"2020-12-01 07:48:34","endLine":187,"groupId":"30061","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"testPassNumRoutingShardsAndFail","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/bd/ef84709cb457121f023c9ec84d1b592e521038.src","preCode":"    public void testPassNumRoutingShardsAndFail() {\n        int numShards = randomIntBetween(2, 100);\n        ClusterState clusterState = ClusterState.builder(createClusterState(\"source\", numShards, 0, numShards * 4,\n            Settings.builder().put(\"index.blocks.write\", true).build())).nodes(DiscoveryNodes.builder().add(newNode(\"node1\")))\n            .build();\n        AllocationService service = new AllocationService(new AllocationDeciders(\n            Collections.singleton(new MaxRetryAllocationDecider())),\n            new TestGatewayAllocator(), new BalancedShardsAllocator(Settings.EMPTY), EmptyClusterInfoService.INSTANCE,\n            EmptySnapshotsInfoService.INSTANCE);\n\n        RoutingTable routingTable = service.reroute(clusterState, \"reroute\").routingTable();\n        clusterState = ClusterState.builder(clusterState).routingTable(routingTable).build();\n        \r\n        routingTable = ESAllocationTestCase.startInitializingShardsAndReroute(service, clusterState, \"source\").routingTable();\n        clusterState = ClusterState.builder(clusterState).routingTable(routingTable).build();\n\n        ResizeRequest resizeRequest = new ResizeRequest(\"target\", \"source\");\n        resizeRequest.setResizeType(ResizeType.SPLIT);\n        resizeRequest.getTargetIndexRequest()\n            .settings(Settings.builder().put(\"index.number_of_shards\", numShards * 2).build());\n        TransportResizeAction.prepareCreateIndexRequest(resizeRequest, clusterState, null, \"source\", \"target\");\n\n        resizeRequest.getTargetIndexRequest()\n            .settings(Settings.builder()\n                .put(\"index.number_of_shards\", numShards * 2)\n                .put(\"index.number_of_routing_shards\", numShards * 2).build());\n        ClusterState finalState = clusterState;\n        IllegalArgumentException iae = expectThrows(IllegalArgumentException.class,\n            () -> TransportResizeAction.prepareCreateIndexRequest(resizeRequest, finalState, null, \"source\", \"target\"));\n        assertEquals(\"cannot provide index.number_of_routing_shards on resize\", iae.getMessage());\n    }\n","realPath":"server/src/test/java/org/elasticsearch/action/admin/indices/shrink/TransportResizeActionTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":157,"status":"M"}],"commitId":"80468992da6ba4dc7ad39f10a913b1c05335356e","commitMessage":"@@@Fix AbstractClient#execute Listener Leak (#65415)\n\nThis was observed in #65405 due to trying to locally execute a\ntask whose parent was already cancelled but is a general issue.\n\nWe should not throw from APIs that consume a listener as this may\nlike in this case leak the listener in that case.\nRather than fixing the specific case of #65405 this fixes the\nabstract client overall to avoid other such leaks.\n\nCloses #65405\n","date":"2020-12-01 07:48:34","modifiedFileCount":"10","status":"M","submitter":"Armin Braun"},{"authorTime":"2021-01-30 04:29:45","codes":[{"authorDate":"2021-01-30 04:29:45","commitOrder":6,"curCode":"    public void testPassNumRoutingShards() {\n        ClusterState clusterState = ClusterState.builder(createClusterState(\"source\", 1, 0,\n            Settings.builder().put(\"index.blocks.write\", true).build())).nodes(DiscoveryNodes.builder().add(newNode(\"node1\")))\n            .build();\n        AllocationService service = new AllocationService(new AllocationDeciders(\n            Collections.singleton(new MaxRetryAllocationDecider())),\n            new TestGatewayAllocator(), new BalancedShardsAllocator(Settings.EMPTY), EmptyClusterInfoService.INSTANCE,\n            EmptySnapshotsInfoService.INSTANCE);\n\n        RoutingTable routingTable = service.reroute(clusterState, \"reroute\").routingTable();\n        clusterState = ClusterState.builder(clusterState).routingTable(routingTable).build();\n        \r\n        routingTable = ESAllocationTestCase.startInitializingShardsAndReroute(service, clusterState, \"source\").routingTable();\n        clusterState = ClusterState.builder(clusterState).routingTable(routingTable).build();\n\n        ResizeRequest resizeRequest = new ResizeRequest(\"target\", \"source\");\n        resizeRequest.setResizeType(ResizeType.SPLIT);\n        resizeRequest.getTargetIndexRequest()\n            .settings(Settings.builder().put(\"index.number_of_shards\", 2).build());\n        IndexMetadata indexMetadata = clusterState.metadata().index(\"source\");\n        TransportResizeAction.prepareCreateIndexRequest(resizeRequest, indexMetadata, new StoreStats(between(1, 100), between(1, 100)),\n            null, \"target\");\n\n        resizeRequest.getTargetIndexRequest()\n            .settings(Settings.builder()\n                .put(\"index.number_of_routing_shards\", randomIntBetween(2, 10))\n                .put(\"index.number_of_shards\", 2)\n                .build());\n        TransportResizeAction.prepareCreateIndexRequest(resizeRequest, indexMetadata, new StoreStats(between(1, 100), between(1, 100)),\n            null, \"target\");\n    }\n","date":"2021-01-30 04:29:45","endLine":163,"groupId":"30061","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"testPassNumRoutingShards","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/f9/68f8598641bf883395a0ec62a80597101fcf59.src","preCode":"    public void testPassNumRoutingShards() {\n        ClusterState clusterState = ClusterState.builder(createClusterState(\"source\", 1, 0,\n            Settings.builder().put(\"index.blocks.write\", true).build())).nodes(DiscoveryNodes.builder().add(newNode(\"node1\")))\n            .build();\n        AllocationService service = new AllocationService(new AllocationDeciders(\n            Collections.singleton(new MaxRetryAllocationDecider())),\n            new TestGatewayAllocator(), new BalancedShardsAllocator(Settings.EMPTY), EmptyClusterInfoService.INSTANCE,\n            EmptySnapshotsInfoService.INSTANCE);\n\n        RoutingTable routingTable = service.reroute(clusterState, \"reroute\").routingTable();\n        clusterState = ClusterState.builder(clusterState).routingTable(routingTable).build();\n        \r\n        routingTable = ESAllocationTestCase.startInitializingShardsAndReroute(service, clusterState, \"source\").routingTable();\n        clusterState = ClusterState.builder(clusterState).routingTable(routingTable).build();\n\n        ResizeRequest resizeRequest = new ResizeRequest(\"target\", \"source\");\n        resizeRequest.setResizeType(ResizeType.SPLIT);\n        resizeRequest.getTargetIndexRequest()\n            .settings(Settings.builder().put(\"index.number_of_shards\", 2).build());\n        IndexMetadata indexMetadata = clusterState.metadata().index(\"source\");\n        TransportResizeAction.prepareCreateIndexRequest(resizeRequest, indexMetadata, null, \"target\");\n\n        resizeRequest.getTargetIndexRequest()\n            .settings(Settings.builder()\n                .put(\"index.number_of_routing_shards\", randomIntBetween(2, 10))\n                .put(\"index.number_of_shards\", 2)\n                .build());\n        TransportResizeAction.prepareCreateIndexRequest(resizeRequest, indexMetadata, null, \"target\");\n    }\n","realPath":"server/src/test/java/org/elasticsearch/action/admin/indices/shrink/TransportResizeActionTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":133,"status":"M"},{"authorDate":"2021-01-30 04:29:45","commitOrder":6,"curCode":"    public void testPassNumRoutingShardsAndFail() {\n        int numShards = randomIntBetween(2, 100);\n        ClusterState clusterState = ClusterState.builder(createClusterState(\"source\", numShards, 0, numShards * 4,\n            Settings.builder().put(\"index.blocks.write\", true).build())).nodes(DiscoveryNodes.builder().add(newNode(\"node1\")))\n            .build();\n        AllocationService service = new AllocationService(new AllocationDeciders(\n            Collections.singleton(new MaxRetryAllocationDecider())),\n            new TestGatewayAllocator(), new BalancedShardsAllocator(Settings.EMPTY), EmptyClusterInfoService.INSTANCE,\n            EmptySnapshotsInfoService.INSTANCE);\n\n        RoutingTable routingTable = service.reroute(clusterState, \"reroute\").routingTable();\n        clusterState = ClusterState.builder(clusterState).routingTable(routingTable).build();\n        \r\n        routingTable = ESAllocationTestCase.startInitializingShardsAndReroute(service, clusterState, \"source\").routingTable();\n        clusterState = ClusterState.builder(clusterState).routingTable(routingTable).build();\n\n        ResizeRequest resizeRequest = new ResizeRequest(\"target\", \"source\");\n        resizeRequest.setResizeType(ResizeType.SPLIT);\n        resizeRequest.getTargetIndexRequest()\n            .settings(Settings.builder().put(\"index.number_of_shards\", numShards * 2).build());\n        TransportResizeAction.prepareCreateIndexRequest(resizeRequest, clusterState.metadata().index(\"source\"),\n            new StoreStats(between(1, 100), between(1, 100)), null, \"target\");\n\n        resizeRequest.getTargetIndexRequest()\n            .settings(Settings.builder()\n                .put(\"index.number_of_shards\", numShards * 2)\n                .put(\"index.number_of_routing_shards\", numShards * 2).build());\n        ClusterState finalState = clusterState;\n        IllegalArgumentException iae = expectThrows(IllegalArgumentException.class,\n            () -> TransportResizeAction.prepareCreateIndexRequest(resizeRequest, finalState.metadata().index(\"source\"),\n                new StoreStats(between(1, 100), between(1, 100)), null, \"target\"));\n        assertEquals(\"cannot provide index.number_of_routing_shards on resize\", iae.getMessage());\n    }\n","date":"2021-01-30 04:29:45","endLine":197,"groupId":"30061","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"testPassNumRoutingShardsAndFail","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/f9/68f8598641bf883395a0ec62a80597101fcf59.src","preCode":"    public void testPassNumRoutingShardsAndFail() {\n        int numShards = randomIntBetween(2, 100);\n        ClusterState clusterState = ClusterState.builder(createClusterState(\"source\", numShards, 0, numShards * 4,\n            Settings.builder().put(\"index.blocks.write\", true).build())).nodes(DiscoveryNodes.builder().add(newNode(\"node1\")))\n            .build();\n        AllocationService service = new AllocationService(new AllocationDeciders(\n            Collections.singleton(new MaxRetryAllocationDecider())),\n            new TestGatewayAllocator(), new BalancedShardsAllocator(Settings.EMPTY), EmptyClusterInfoService.INSTANCE,\n            EmptySnapshotsInfoService.INSTANCE);\n\n        RoutingTable routingTable = service.reroute(clusterState, \"reroute\").routingTable();\n        clusterState = ClusterState.builder(clusterState).routingTable(routingTable).build();\n        \r\n        routingTable = ESAllocationTestCase.startInitializingShardsAndReroute(service, clusterState, \"source\").routingTable();\n        clusterState = ClusterState.builder(clusterState).routingTable(routingTable).build();\n\n        ResizeRequest resizeRequest = new ResizeRequest(\"target\", \"source\");\n        resizeRequest.setResizeType(ResizeType.SPLIT);\n        resizeRequest.getTargetIndexRequest()\n            .settings(Settings.builder().put(\"index.number_of_shards\", numShards * 2).build());\n        TransportResizeAction.prepareCreateIndexRequest(resizeRequest, clusterState.metadata().index(\"source\"), null, \"target\");\n\n        resizeRequest.getTargetIndexRequest()\n            .settings(Settings.builder()\n                .put(\"index.number_of_shards\", numShards * 2)\n                .put(\"index.number_of_routing_shards\", numShards * 2).build());\n        ClusterState finalState = clusterState;\n        IllegalArgumentException iae = expectThrows(IllegalArgumentException.class,\n            () -> TransportResizeAction.prepareCreateIndexRequest(resizeRequest, finalState.metadata().index(\"source\"), null, \"target\"));\n        assertEquals(\"cannot provide index.number_of_routing_shards on resize\", iae.getMessage());\n    }\n","realPath":"server/src/test/java/org/elasticsearch/action/admin/indices/shrink/TransportResizeActionTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":165,"status":"M"}],"commitId":"d69c03359f09a4fd2defd19a57ab8196d66e0c3c","commitMessage":"@@@Support max_single_primary_size in Resize Action and exposed in ILM (#67705)\n\n","date":"2021-01-30 04:29:45","modifiedFileCount":"25","status":"M","submitter":"bellengao"},{"authorTime":"2021-03-30 21:23:29","codes":[{"authorDate":"2021-03-30 21:23:29","commitOrder":7,"curCode":"    public void testPassNumRoutingShards() {\n        ClusterState clusterState = ClusterState.builder(createClusterState(\"source\", 1, 0,\n            Settings.builder().put(\"index.blocks.write\", true).build())).nodes(DiscoveryNodes.builder().add(newNode(\"node1\")))\n            .build();\n        AllocationService service = new AllocationService(new AllocationDeciders(\n            Collections.singleton(new MaxRetryAllocationDecider())),\n            new TestGatewayAllocator(), new BalancedShardsAllocator(Settings.EMPTY), EmptyClusterInfoService.INSTANCE,\n            EmptySnapshotsInfoService.INSTANCE);\n\n        RoutingTable routingTable = service.reroute(clusterState, \"reroute\").routingTable();\n        clusterState = ClusterState.builder(clusterState).routingTable(routingTable).build();\n        \r\n        routingTable = ESAllocationTestCase.startInitializingShardsAndReroute(service, clusterState, \"source\").routingTable();\n        clusterState = ClusterState.builder(clusterState).routingTable(routingTable).build();\n\n        ResizeRequest resizeRequest = new ResizeRequest(\"target\", \"source\");\n        resizeRequest.setResizeType(ResizeType.SPLIT);\n        resizeRequest.getTargetIndexRequest()\n            .settings(Settings.builder().put(\"index.number_of_shards\", 2).build());\n        IndexMetadata indexMetadata = clusterState.metadata().index(\"source\");\n        TransportResizeAction.prepareCreateIndexRequest(resizeRequest, indexMetadata,\n            new StoreStats(between(1, 100), between(0, 100), between(1, 100)),\n            null, \"target\");\n\n        resizeRequest.getTargetIndexRequest()\n            .settings(Settings.builder()\n                .put(\"index.number_of_routing_shards\", randomIntBetween(2, 10))\n                .put(\"index.number_of_shards\", 2)\n                .build());\n        TransportResizeAction.prepareCreateIndexRequest(resizeRequest, indexMetadata,\n            new StoreStats(between(1, 100), between(0, 100), between(1, 100)),\n            null, \"target\");\n    }\n","date":"2021-03-30 21:23:29","endLine":155,"groupId":"105954","id":13,"instanceNumber":1,"isCurCommit":1,"methodName":"testPassNumRoutingShards","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/df/71262558a4682db8c9b4509b5d298f10d334dc.src","preCode":"    public void testPassNumRoutingShards() {\n        ClusterState clusterState = ClusterState.builder(createClusterState(\"source\", 1, 0,\n            Settings.builder().put(\"index.blocks.write\", true).build())).nodes(DiscoveryNodes.builder().add(newNode(\"node1\")))\n            .build();\n        AllocationService service = new AllocationService(new AllocationDeciders(\n            Collections.singleton(new MaxRetryAllocationDecider())),\n            new TestGatewayAllocator(), new BalancedShardsAllocator(Settings.EMPTY), EmptyClusterInfoService.INSTANCE,\n            EmptySnapshotsInfoService.INSTANCE);\n\n        RoutingTable routingTable = service.reroute(clusterState, \"reroute\").routingTable();\n        clusterState = ClusterState.builder(clusterState).routingTable(routingTable).build();\n        \r\n        routingTable = ESAllocationTestCase.startInitializingShardsAndReroute(service, clusterState, \"source\").routingTable();\n        clusterState = ClusterState.builder(clusterState).routingTable(routingTable).build();\n\n        ResizeRequest resizeRequest = new ResizeRequest(\"target\", \"source\");\n        resizeRequest.setResizeType(ResizeType.SPLIT);\n        resizeRequest.getTargetIndexRequest()\n            .settings(Settings.builder().put(\"index.number_of_shards\", 2).build());\n        IndexMetadata indexMetadata = clusterState.metadata().index(\"source\");\n        TransportResizeAction.prepareCreateIndexRequest(resizeRequest, indexMetadata, new StoreStats(between(1, 100), between(1, 100)),\n            null, \"target\");\n\n        resizeRequest.getTargetIndexRequest()\n            .settings(Settings.builder()\n                .put(\"index.number_of_routing_shards\", randomIntBetween(2, 10))\n                .put(\"index.number_of_shards\", 2)\n                .build());\n        TransportResizeAction.prepareCreateIndexRequest(resizeRequest, indexMetadata, new StoreStats(between(1, 100), between(1, 100)),\n            null, \"target\");\n    }\n","realPath":"server/src/test/java/org/elasticsearch/action/admin/indices/shrink/TransportResizeActionTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":123,"status":"M"},{"authorDate":"2021-03-30 21:23:29","commitOrder":7,"curCode":"    public void testPassNumRoutingShardsAndFail() {\n        int numShards = randomIntBetween(2, 100);\n        ClusterState clusterState = ClusterState.builder(createClusterState(\"source\", numShards, 0, numShards * 4,\n            Settings.builder().put(\"index.blocks.write\", true).build())).nodes(DiscoveryNodes.builder().add(newNode(\"node1\")))\n            .build();\n        AllocationService service = new AllocationService(new AllocationDeciders(\n            Collections.singleton(new MaxRetryAllocationDecider())),\n            new TestGatewayAllocator(), new BalancedShardsAllocator(Settings.EMPTY), EmptyClusterInfoService.INSTANCE,\n            EmptySnapshotsInfoService.INSTANCE);\n\n        RoutingTable routingTable = service.reroute(clusterState, \"reroute\").routingTable();\n        clusterState = ClusterState.builder(clusterState).routingTable(routingTable).build();\n        \r\n        routingTable = ESAllocationTestCase.startInitializingShardsAndReroute(service, clusterState, \"source\").routingTable();\n        clusterState = ClusterState.builder(clusterState).routingTable(routingTable).build();\n\n        ResizeRequest resizeRequest = new ResizeRequest(\"target\", \"source\");\n        resizeRequest.setResizeType(ResizeType.SPLIT);\n        resizeRequest.getTargetIndexRequest()\n            .settings(Settings.builder().put(\"index.number_of_shards\", numShards * 2).build());\n        TransportResizeAction.prepareCreateIndexRequest(resizeRequest, clusterState.metadata().index(\"source\"),\n            new StoreStats(between(1, 100), between(0, 100), between(1, 100)), null, \"target\");\n\n        resizeRequest.getTargetIndexRequest()\n            .settings(Settings.builder()\n                .put(\"index.number_of_shards\", numShards * 2)\n                .put(\"index.number_of_routing_shards\", numShards * 2).build());\n        ClusterState finalState = clusterState;\n        IllegalArgumentException iae = expectThrows(IllegalArgumentException.class,\n            () -> TransportResizeAction.prepareCreateIndexRequest(resizeRequest, finalState.metadata().index(\"source\"),\n                new StoreStats(between(1, 100), between(0, 100), between(1, 100)), null, \"target\"));\n        assertEquals(\"cannot provide index.number_of_routing_shards on resize\", iae.getMessage());\n    }\n","date":"2021-03-30 21:23:29","endLine":189,"groupId":"105954","id":14,"instanceNumber":2,"isCurCommit":1,"methodName":"testPassNumRoutingShardsAndFail","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/df/71262558a4682db8c9b4509b5d298f10d334dc.src","preCode":"    public void testPassNumRoutingShardsAndFail() {\n        int numShards = randomIntBetween(2, 100);\n        ClusterState clusterState = ClusterState.builder(createClusterState(\"source\", numShards, 0, numShards * 4,\n            Settings.builder().put(\"index.blocks.write\", true).build())).nodes(DiscoveryNodes.builder().add(newNode(\"node1\")))\n            .build();\n        AllocationService service = new AllocationService(new AllocationDeciders(\n            Collections.singleton(new MaxRetryAllocationDecider())),\n            new TestGatewayAllocator(), new BalancedShardsAllocator(Settings.EMPTY), EmptyClusterInfoService.INSTANCE,\n            EmptySnapshotsInfoService.INSTANCE);\n\n        RoutingTable routingTable = service.reroute(clusterState, \"reroute\").routingTable();\n        clusterState = ClusterState.builder(clusterState).routingTable(routingTable).build();\n        \r\n        routingTable = ESAllocationTestCase.startInitializingShardsAndReroute(service, clusterState, \"source\").routingTable();\n        clusterState = ClusterState.builder(clusterState).routingTable(routingTable).build();\n\n        ResizeRequest resizeRequest = new ResizeRequest(\"target\", \"source\");\n        resizeRequest.setResizeType(ResizeType.SPLIT);\n        resizeRequest.getTargetIndexRequest()\n            .settings(Settings.builder().put(\"index.number_of_shards\", numShards * 2).build());\n        TransportResizeAction.prepareCreateIndexRequest(resizeRequest, clusterState.metadata().index(\"source\"),\n            new StoreStats(between(1, 100), between(1, 100)), null, \"target\");\n\n        resizeRequest.getTargetIndexRequest()\n            .settings(Settings.builder()\n                .put(\"index.number_of_shards\", numShards * 2)\n                .put(\"index.number_of_routing_shards\", numShards * 2).build());\n        ClusterState finalState = clusterState;\n        IllegalArgumentException iae = expectThrows(IllegalArgumentException.class,\n            () -> TransportResizeAction.prepareCreateIndexRequest(resizeRequest, finalState.metadata().index(\"source\"),\n                new StoreStats(between(1, 100), between(1, 100)), null, \"target\"));\n        assertEquals(\"cannot provide index.number_of_routing_shards on resize\", iae.getMessage());\n    }\n","realPath":"server/src/test/java/org/elasticsearch/action/admin/indices/shrink/TransportResizeActionTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":157,"status":"M"}],"commitId":"0f28e97857e1145b35566cf634ec4785c81b9e6a","commitMessage":"@@@Total data set size in stats (#70625)\n\nWith shared cache searchable snapshots we have shards that have a size\nin S3 that differs from the locally occupied disk space. This commit\nintroduces `store.total_data_set_size` to node and indices stats.  allowing to\ndiffer between the two.\n\nRelates #69820","date":"2021-03-30 21:23:29","modifiedFileCount":"13","status":"M","submitter":"Henning Andersen"}]
