[{"authorTime":"2018-11-22 01:15:01","codes":[{"authorDate":"2018-11-22 01:15:01","commitOrder":1,"curCode":"    public static void assertMultiPolygon(Object shape, boolean useJTS) {\n        if (useJTS) {\n            assertTrue(\"expected MultiPolygon but found \" + unwrapJTS(shape).getClass().getName(),\n                unwrapJTS(shape) instanceof MultiPolygon);\n        } else {\n            assertTrue(\"expected Polygon[] but found \" + shape.getClass().getName(),\n                shape instanceof org.apache.lucene.geo.Polygon[]);\n        }\n    }\n","date":"2018-11-22 01:15:01","endLine":247,"groupId":"24435","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"assertMultiPolygon","params":"(Objectshape@booleanuseJTS)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/da/a04442535eb5832b057723ba75a533e9150967.src","preCode":"    public static void assertMultiPolygon(Object shape, boolean useJTS) {\n        if (useJTS) {\n            assertTrue(\"expected MultiPolygon but found \" + unwrapJTS(shape).getClass().getName(),\n                unwrapJTS(shape) instanceof MultiPolygon);\n        } else {\n            assertTrue(\"expected Polygon[] but found \" + shape.getClass().getName(),\n                shape instanceof org.apache.lucene.geo.Polygon[]);\n        }\n    }\n","realPath":"server/src/test/java/org/elasticsearch/test/hamcrest/ElasticsearchGeoAssertions.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":239,"status":"B"},{"authorDate":"2018-11-22 01:15:01","commitOrder":1,"curCode":"    public static void assertPolygon(Object shape, boolean useJTS) {\n        if (useJTS) {\n            assertTrue(\"expected Polygon but found \"\n                + unwrapJTS(shape).getClass().getName(), unwrapJTS(shape) instanceof Polygon);\n        } else {\n            assertTrue(\"expected Polygon but found \" + shape.getClass().getName(),\n                shape instanceof org.apache.lucene.geo.Polygon);\n        }\n    }\n","date":"2018-11-22 01:15:01","endLine":257,"groupId":"24435","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"assertPolygon","params":"(Objectshape@booleanuseJTS)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/da/a04442535eb5832b057723ba75a533e9150967.src","preCode":"    public static void assertPolygon(Object shape, boolean useJTS) {\n        if (useJTS) {\n            assertTrue(\"expected Polygon but found \"\n                + unwrapJTS(shape).getClass().getName(), unwrapJTS(shape) instanceof Polygon);\n        } else {\n            assertTrue(\"expected Polygon but found \" + shape.getClass().getName(),\n                shape instanceof org.apache.lucene.geo.Polygon);\n        }\n    }\n","realPath":"server/src/test/java/org/elasticsearch/test/hamcrest/ElasticsearchGeoAssertions.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":249,"status":"B"}],"commitId":"3bee25cb700208311ef751b1f460342bdba4ec70","commitMessage":"@@@[GEO] Add support to ShapeBuilders for building Lucene geometry (#35707)\n\n* [GEO] Add support to ShapeBuilders for building Lucene geometry\n\nThis commit adds support for building lucene geometry from the ShapeBuilders.\nThis is needed for integrating LatLonShape as the primary indexing approach\nfor geo_shape field types. All unit and integration tests are updated to\nadd randomization for testing both jts/s4j shapes and lucene shapes.\n","date":"2018-11-22 01:15:01","modifiedFileCount":"25","status":"B","submitter":"Nick Knize"},{"authorTime":"2019-01-26 00:37:27","codes":[{"authorDate":"2019-01-26 00:37:27","commitOrder":2,"curCode":"    public static void assertMultiPolygon(Object shape, boolean useJTS) {\n        if (useJTS) {\n            assertTrue(\"expected MultiPolygon but found \" + unwrapJTS(shape).getClass().getName(),\n                unwrapJTS(shape) instanceof MultiPolygon);\n        } else {\n            assertTrue(\"expected Polygon[] but found \" + shape.getClass().getName(),\n                shape instanceof org.elasticsearch.geo.geometry.MultiPolygon);\n        }\n    }\n","date":"2019-01-26 00:37:27","endLine":250,"groupId":"24435","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"assertMultiPolygon","params":"(Objectshape@booleanuseJTS)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/a5/b64597181cfce19dcbc6f9393dbef8eaef75b1.src","preCode":"    public static void assertMultiPolygon(Object shape, boolean useJTS) {\n        if (useJTS) {\n            assertTrue(\"expected MultiPolygon but found \" + unwrapJTS(shape).getClass().getName(),\n                unwrapJTS(shape) instanceof MultiPolygon);\n        } else {\n            assertTrue(\"expected Polygon[] but found \" + shape.getClass().getName(),\n                shape instanceof org.apache.lucene.geo.Polygon[]);\n        }\n    }\n","realPath":"server/src/test/java/org/elasticsearch/test/hamcrest/ElasticsearchGeoAssertions.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":242,"status":"M"},{"authorDate":"2019-01-26 00:37:27","commitOrder":2,"curCode":"    public static void assertPolygon(Object shape, boolean useJTS) {\n        if (useJTS) {\n            assertTrue(\"expected Polygon but found \"\n                + unwrapJTS(shape).getClass().getName(), unwrapJTS(shape) instanceof Polygon);\n        } else {\n            assertTrue(\"expected Polygon but found \" + shape.getClass().getName(),\n                shape instanceof org.elasticsearch.geo.geometry.Polygon);\n        }\n    }\n","date":"2019-01-26 00:37:27","endLine":260,"groupId":"24435","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"assertPolygon","params":"(Objectshape@booleanuseJTS)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/a5/b64597181cfce19dcbc6f9393dbef8eaef75b1.src","preCode":"    public static void assertPolygon(Object shape, boolean useJTS) {\n        if (useJTS) {\n            assertTrue(\"expected Polygon but found \"\n                + unwrapJTS(shape).getClass().getName(), unwrapJTS(shape) instanceof Polygon);\n        } else {\n            assertTrue(\"expected Polygon but found \" + shape.getClass().getName(),\n                shape instanceof org.apache.lucene.geo.Polygon);\n        }\n    }\n","realPath":"server/src/test/java/org/elasticsearch/test/hamcrest/ElasticsearchGeoAssertions.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":252,"status":"M"}],"commitId":"68149b6058a720ec891974e8a6982c5e480fb9f1","commitMessage":"@@@Geo: replace intermediate geo objects with libs/geo (#37721)\n\nReplaces intermediate geo objects built by ShapeBuilders with\nobjects from the libs/geo hierarchy. This should allow us to build\nall geo functionality around a single hierarchy.\n\nFollow up for #35320","date":"2019-01-26 00:37:27","modifiedFileCount":"27","status":"M","submitter":"Igor Motov"},{"authorTime":"2019-08-10 01:22:00","codes":[{"authorDate":"2019-08-10 01:22:00","commitOrder":3,"curCode":"    public static void assertMultiPolygon(Object shape, boolean useJTS) {\n        if (useJTS) {\n            assertTrue(\"expected MultiPolygon but found \" + unwrapJTS(shape).getClass().getName(),\n                unwrapJTS(shape) instanceof MultiPolygon);\n        } else {\n            assertTrue(\"expected Polygon[] but found \" + shape.getClass().getName(),\n                shape instanceof org.elasticsearch.geometry.MultiPolygon);\n        }\n    }\n","date":"2019-08-10 01:22:00","endLine":251,"groupId":"104361","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"assertMultiPolygon","params":"(Objectshape@booleanuseJTS)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/40/b09e378a717156e31534111e3c0dc2bfcb32cf.src","preCode":"    public static void assertMultiPolygon(Object shape, boolean useJTS) {\n        if (useJTS) {\n            assertTrue(\"expected MultiPolygon but found \" + unwrapJTS(shape).getClass().getName(),\n                unwrapJTS(shape) instanceof MultiPolygon);\n        } else {\n            assertTrue(\"expected Polygon[] but found \" + shape.getClass().getName(),\n                shape instanceof org.elasticsearch.geo.geometry.MultiPolygon);\n        }\n    }\n","realPath":"server/src/test/java/org/elasticsearch/test/hamcrest/ElasticsearchGeoAssertions.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":243,"status":"M"},{"authorDate":"2019-08-10 01:22:00","commitOrder":3,"curCode":"    public static void assertPolygon(Object shape, boolean useJTS) {\n        if (useJTS) {\n            assertTrue(\"expected Polygon but found \"\n                + unwrapJTS(shape).getClass().getName(), unwrapJTS(shape) instanceof Polygon);\n        } else {\n            assertTrue(\"expected Polygon but found \" + shape.getClass().getName(),\n                shape instanceof org.elasticsearch.geometry.Polygon);\n        }\n    }\n","date":"2019-08-10 01:22:00","endLine":261,"groupId":"104361","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"assertPolygon","params":"(Objectshape@booleanuseJTS)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/40/b09e378a717156e31534111e3c0dc2bfcb32cf.src","preCode":"    public static void assertPolygon(Object shape, boolean useJTS) {\n        if (useJTS) {\n            assertTrue(\"expected Polygon but found \"\n                + unwrapJTS(shape).getClass().getName(), unwrapJTS(shape) instanceof Polygon);\n        } else {\n            assertTrue(\"expected Polygon but found \" + shape.getClass().getName(),\n                shape instanceof org.elasticsearch.geo.geometry.Polygon);\n        }\n    }\n","realPath":"server/src/test/java/org/elasticsearch/test/hamcrest/ElasticsearchGeoAssertions.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":253,"status":"M"}],"commitId":"13a8835e5a8615aeb8304b48fd9e543a83361e13","commitMessage":"@@@Geo: Change order of parameter in Geometries to lon.  lat (#45332)\n\nChanges the order of parameters in Geometries from lat.  lon to lon.  lat\nand moves all Geometry classes are moved to the\norg.elasticsearch.geomtery package.\n\nCloses #45048","date":"2019-08-10 01:22:00","modifiedFileCount":"65","status":"M","submitter":"Igor Motov"}]
