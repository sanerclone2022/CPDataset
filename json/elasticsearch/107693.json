[{"authorTime":"2018-04-26 03:22:53","codes":[{"authorDate":"2018-04-26 03:22:53","commitOrder":1,"curCode":"        public void shardStarted(ShardRouting initializingShard, ShardRouting startedShard) {\n            \r\n            if (initializingShard.primary()) {\n                RecoverySource recoverySource = initializingShard.recoverySource();\n                if (recoverySource.getType() == RecoverySource.Type.SNAPSHOT) {\n                    Snapshot snapshot = ((SnapshotRecoverySource) recoverySource).snapshot();\n                    changes(snapshot).shards.put(initializingShard.shardId(),\n                        new ShardRestoreStatus(initializingShard.currentNodeId(), RestoreInProgress.State.SUCCESS));\n                }\n            }\n        }\n","date":"2018-04-26 03:22:53","endLine":555,"groupId":"22007","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"shardStarted","params":"(ShardRoutinginitializingShard@ShardRoutingstartedShard)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/63/079fd63ce240dec67355a8355b3819f3704880.src","preCode":"        public void shardStarted(ShardRouting initializingShard, ShardRouting startedShard) {\n            \r\n            if (initializingShard.primary()) {\n                RecoverySource recoverySource = initializingShard.recoverySource();\n                if (recoverySource.getType() == RecoverySource.Type.SNAPSHOT) {\n                    Snapshot snapshot = ((SnapshotRecoverySource) recoverySource).snapshot();\n                    changes(snapshot).shards.put(initializingShard.shardId(),\n                        new ShardRestoreStatus(initializingShard.currentNodeId(), RestoreInProgress.State.SUCCESS));\n                }\n            }\n        }\n","realPath":"server/src/main/java/org/elasticsearch/snapshots/RestoreService.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":545,"status":"B"},{"authorDate":"2018-04-26 03:22:53","commitOrder":1,"curCode":"        public void shardFailed(ShardRouting failedShard, UnassignedInfo unassignedInfo) {\n            if (failedShard.primary() && failedShard.initializing()) {\n                RecoverySource recoverySource = failedShard.recoverySource();\n                if (recoverySource.getType() == RecoverySource.Type.SNAPSHOT) {\n                    Snapshot snapshot = ((SnapshotRecoverySource) recoverySource).snapshot();\n                    \r\n                    \r\n                    \r\n                    if (unassignedInfo.getFailure() != null && Lucene.isCorruptionException(unassignedInfo.getFailure().getCause())) {\n                        changes(snapshot).shards.put(failedShard.shardId(), new ShardRestoreStatus(failedShard.currentNodeId(),\n                            RestoreInProgress.State.FAILURE, unassignedInfo.getFailure().getCause().getMessage()));\n                    }\n                }\n            }\n        }\n","date":"2018-04-26 03:22:53","endLine":572,"groupId":"11143","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"shardFailed","params":"(ShardRoutingfailedShard@UnassignedInfounassignedInfo)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/63/079fd63ce240dec67355a8355b3819f3704880.src","preCode":"        public void shardFailed(ShardRouting failedShard, UnassignedInfo unassignedInfo) {\n            if (failedShard.primary() && failedShard.initializing()) {\n                RecoverySource recoverySource = failedShard.recoverySource();\n                if (recoverySource.getType() == RecoverySource.Type.SNAPSHOT) {\n                    Snapshot snapshot = ((SnapshotRecoverySource) recoverySource).snapshot();\n                    \r\n                    \r\n                    \r\n                    if (unassignedInfo.getFailure() != null && Lucene.isCorruptionException(unassignedInfo.getFailure().getCause())) {\n                        changes(snapshot).shards.put(failedShard.shardId(), new ShardRestoreStatus(failedShard.currentNodeId(),\n                            RestoreInProgress.State.FAILURE, unassignedInfo.getFailure().getCause().getMessage()));\n                    }\n                }\n            }\n        }\n","realPath":"server/src/main/java/org/elasticsearch/snapshots/RestoreService.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":558,"status":"B"}],"commitId":"d74fb9eb4559077e2d20b19a9ed62d9ff825027a","commitMessage":"@@@Opened x-pack ILM code\n","date":"2018-04-26 03:22:53","modifiedFileCount":"0","status":"B","submitter":"Tal Levy"},{"authorTime":"2018-12-14 18:39:23","codes":[{"authorDate":"2018-12-14 18:39:23","commitOrder":2,"curCode":"        public void shardStarted(ShardRouting initializingShard, ShardRouting startedShard) {\n            \r\n            if (initializingShard.primary()) {\n                RecoverySource recoverySource = initializingShard.recoverySource();\n                if (recoverySource.getType() == RecoverySource.Type.SNAPSHOT) {\n                    changes(recoverySource).shards.put(\n                        initializingShard.shardId(),\n                        new ShardRestoreStatus(initializingShard.currentNodeId(), RestoreInProgress.State.SUCCESS));\n                }\n            }\n        }\n","date":"2018-12-14 18:39:23","endLine":579,"groupId":"50761","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"shardStarted","params":"(ShardRoutinginitializingShard@ShardRoutingstartedShard)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/4c/6090758dd206e2c7bb737c62adca4f9997d1b7.src","preCode":"        public void shardStarted(ShardRouting initializingShard, ShardRouting startedShard) {\n            \r\n            if (initializingShard.primary()) {\n                RecoverySource recoverySource = initializingShard.recoverySource();\n                if (recoverySource.getType() == RecoverySource.Type.SNAPSHOT) {\n                    Snapshot snapshot = ((SnapshotRecoverySource) recoverySource).snapshot();\n                    changes(snapshot).shards.put(initializingShard.shardId(),\n                        new ShardRestoreStatus(initializingShard.currentNodeId(), RestoreInProgress.State.SUCCESS));\n                }\n            }\n        }\n","realPath":"server/src/main/java/org/elasticsearch/snapshots/RestoreService.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":569,"status":"M"},{"authorDate":"2018-12-14 18:39:23","commitOrder":2,"curCode":"        public void shardFailed(ShardRouting failedShard, UnassignedInfo unassignedInfo) {\n            if (failedShard.primary() && failedShard.initializing()) {\n                RecoverySource recoverySource = failedShard.recoverySource();\n                if (recoverySource.getType() == RecoverySource.Type.SNAPSHOT) {\n                    \r\n                    \r\n                    \r\n                    if (unassignedInfo.getFailure() != null && Lucene.isCorruptionException(unassignedInfo.getFailure().getCause())) {\n                        changes(recoverySource).shards.put(\n                            failedShard.shardId(), new ShardRestoreStatus(failedShard.currentNodeId(),\n                                RestoreInProgress.State.FAILURE, unassignedInfo.getFailure().getCause().getMessage()));\n                    }\n                }\n            }\n        }\n","date":"2018-12-14 18:39:23","endLine":596,"groupId":"3257","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"shardFailed","params":"(ShardRoutingfailedShard@UnassignedInfounassignedInfo)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/4c/6090758dd206e2c7bb737c62adca4f9997d1b7.src","preCode":"        public void shardFailed(ShardRouting failedShard, UnassignedInfo unassignedInfo) {\n            if (failedShard.primary() && failedShard.initializing()) {\n                RecoverySource recoverySource = failedShard.recoverySource();\n                if (recoverySource.getType() == RecoverySource.Type.SNAPSHOT) {\n                    Snapshot snapshot = ((SnapshotRecoverySource) recoverySource).snapshot();\n                    \r\n                    \r\n                    \r\n                    if (unassignedInfo.getFailure() != null && Lucene.isCorruptionException(unassignedInfo.getFailure().getCause())) {\n                        changes(snapshot).shards.put(failedShard.shardId(), new ShardRestoreStatus(failedShard.currentNodeId(),\n                            RestoreInProgress.State.FAILURE, unassignedInfo.getFailure().getCause().getMessage()));\n                    }\n                }\n            }\n        }\n","realPath":"server/src/main/java/org/elasticsearch/snapshots/RestoreService.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":582,"status":"M"}],"commitId":"c5b3ac557857da9d8571e4fdcb8eaf6d4a7b7b11","commitMessage":"@@@SNAPSHOTS: Allow Parallel Restore Operations (#36397)\n\n* Enable parallel restore operations\n* Add uuid to restore in progress entries to uniquely identify them\n* Adjust restore in progress entries to be a map in cluster state\n* Added tests for:\n   * Parallel restore from two different snapshots\n   * Parallel restore from a single snapshot to different indices to test uuid identifiers are correctly used by `RestoreService` and routing allocator\n   * Parallel restore with waiting for completion to test transport actions correctly use uuid identifiers","date":"2018-12-14 18:39:23","modifiedFileCount":"22","status":"M","submitter":"Armin Braun"},{"authorTime":"2019-04-16 22:45:00","codes":[{"authorDate":"2019-04-16 22:45:00","commitOrder":3,"curCode":"        public void shardStarted(ShardRouting initializingShard, ShardRouting startedShard) {\n            \r\n            if (initializingShard.primary()) {\n                RecoverySource recoverySource = initializingShard.recoverySource();\n                if (recoverySource.getType() == RecoverySource.Type.SNAPSHOT) {\n                    changes(recoverySource).put(\n                        initializingShard.shardId(),\n                        new ShardRestoreStatus(initializingShard.currentNodeId(), RestoreInProgress.State.SUCCESS));\n                }\n            }\n        }\n","date":"2019-04-16 22:45:00","endLine":612,"groupId":"107693","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"shardStarted","params":"(ShardRoutinginitializingShard@ShardRoutingstartedShard)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/3a/81a9956870ada28def110dda75f815b2922467.src","preCode":"        public void shardStarted(ShardRouting initializingShard, ShardRouting startedShard) {\n            \r\n            if (initializingShard.primary()) {\n                RecoverySource recoverySource = initializingShard.recoverySource();\n                if (recoverySource.getType() == RecoverySource.Type.SNAPSHOT) {\n                    changes(recoverySource).shards.put(\n                        initializingShard.shardId(),\n                        new ShardRestoreStatus(initializingShard.currentNodeId(), RestoreInProgress.State.SUCCESS));\n                }\n            }\n        }\n","realPath":"server/src/main/java/org/elasticsearch/snapshots/RestoreService.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":602,"status":"M"},{"authorDate":"2019-04-16 22:45:00","commitOrder":3,"curCode":"        public void shardFailed(ShardRouting failedShard, UnassignedInfo unassignedInfo) {\n            if (failedShard.primary() && failedShard.initializing()) {\n                RecoverySource recoverySource = failedShard.recoverySource();\n                if (recoverySource.getType() == RecoverySource.Type.SNAPSHOT) {\n                    \r\n                    \r\n                    \r\n                    if (unassignedInfo.getFailure() != null && Lucene.isCorruptionException(unassignedInfo.getFailure().getCause())) {\n                        changes(recoverySource).put(\n                            failedShard.shardId(), new ShardRestoreStatus(failedShard.currentNodeId(),\n                                RestoreInProgress.State.FAILURE, unassignedInfo.getFailure().getCause().getMessage()));\n                    }\n                }\n            }\n        }\n","date":"2019-04-16 22:45:00","endLine":629,"groupId":"107693","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"shardFailed","params":"(ShardRoutingfailedShard@UnassignedInfounassignedInfo)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/3a/81a9956870ada28def110dda75f815b2922467.src","preCode":"        public void shardFailed(ShardRouting failedShard, UnassignedInfo unassignedInfo) {\n            if (failedShard.primary() && failedShard.initializing()) {\n                RecoverySource recoverySource = failedShard.recoverySource();\n                if (recoverySource.getType() == RecoverySource.Type.SNAPSHOT) {\n                    \r\n                    \r\n                    \r\n                    if (unassignedInfo.getFailure() != null && Lucene.isCorruptionException(unassignedInfo.getFailure().getCause())) {\n                        changes(recoverySource).shards.put(\n                            failedShard.shardId(), new ShardRestoreStatus(failedShard.currentNodeId(),\n                                RestoreInProgress.State.FAILURE, unassignedInfo.getFailure().getCause().getMessage()));\n                    }\n                }\n            }\n        }\n","realPath":"server/src/main/java/org/elasticsearch/snapshots/RestoreService.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":615,"status":"M"}],"commitId":"dac6c47aa1064b26cd1d6d16a9d4ea65a0ef51ad","commitMessage":"@@@Some Minor Cleanups in o.e.snapshots (#40962)\n\n* Some Minor Cleanups in o.e.snapshots\n\n* Some minor obvious cleanups that became possible now tht we're on JDK11\n* Removing redundant `Updates` internal class\n","date":"2019-04-16 22:45:00","modifiedFileCount":"10","status":"M","submitter":"Armin Braun"}]
