[{"authorTime":"2020-05-14 03:59:35","codes":[{"authorDate":"2020-05-14 03:59:35","commitOrder":1,"curCode":"    private void indexDocuments(IndexWriter writer, TextFieldType textFieldType) throws IOException {\n        for (int i = 0; i < 10; i++) {\n            Document doc = new Document();\n            StringBuilder text = new StringBuilder(\"common \");\n            if (i % 2 == 0) {\n                text.append(\"odd \");\n            } else {\n                text.append(\"even separator\" + i + \" duplicate duplicate duplicate duplicate duplicate duplicate \");\n            }\n\n            doc.add(new Field(\"text\", text.toString(), textFieldType));\n            String json =\"{ \\\"text\\\" : \\\"\" + text.toString() + \"\\\",\"+\n                \" \\\"json_only_field\\\" : \\\"\" + text.toString() + \"\\\"\" +\n                \" }\";\n            doc.add(new StoredField(\"_source\", new BytesRef(json)));\n            writer.addDocument(doc);\n        }\n    }\n","date":"2020-05-14 03:59:35","endLine":214,"groupId":"53442","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"indexDocuments","params":"(IndexWriterwriter@TextFieldTypetextFieldType)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/1b/ffc3083b70b6dfe4df9df22fd1e242d764f636.src","preCode":"    private void indexDocuments(IndexWriter writer, TextFieldType textFieldType) throws IOException {\n        for (int i = 0; i < 10; i++) {\n            Document doc = new Document();\n            StringBuilder text = new StringBuilder(\"common \");\n            if (i % 2 == 0) {\n                text.append(\"odd \");\n            } else {\n                text.append(\"even separator\" + i + \" duplicate duplicate duplicate duplicate duplicate duplicate \");\n            }\n\n            doc.add(new Field(\"text\", text.toString(), textFieldType));\n            String json =\"{ \\\"text\\\" : \\\"\" + text.toString() + \"\\\",\"+\n                \" \\\"json_only_field\\\" : \\\"\" + text.toString() + \"\\\"\" +\n                \" }\";\n            doc.add(new StoredField(\"_source\", new BytesRef(json)));\n            writer.addDocument(doc);\n        }\n    }\n","realPath":"server/src/test/java/org/elasticsearch/search/aggregations/bucket/terms/SignificantTextAggregatorTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":197,"status":"B"},{"authorDate":"2020-05-14 03:59:35","commitOrder":1,"curCode":"    private void addMixedTextDocs(TextFieldType textFieldType, IndexWriter w) throws IOException {\n        for (int i = 0; i < 10; i++) {\n            Document doc = new Document();\n            StringBuilder text = new StringBuilder(\"common \");\n            if (i % 2 == 0) {\n                text.append(\"odd \");\n            } else {\n                text.append(\"even \");\n            }\n\n            doc.add(new Field(\"text\", text.toString(), textFieldType));\n            String json = \"{ \\\"text\\\" : \\\"\" + text.toString() + \"\\\" }\";\n            doc.add(new StoredField(\"_source\", new BytesRef(json)));\n\n            w.addDocument(doc);\n        }\n    }\n","date":"2020-05-14 03:59:35","endLine":391,"groupId":"8330","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"addMixedTextDocs","params":"(TextFieldTypetextFieldType@IndexWriterw)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/8d/e4bef64dd7d56a5449f096dbbd6220db80be2a.src","preCode":"    private void addMixedTextDocs(TextFieldType textFieldType, IndexWriter w) throws IOException {\n        for (int i = 0; i < 10; i++) {\n            Document doc = new Document();\n            StringBuilder text = new StringBuilder(\"common \");\n            if (i % 2 == 0) {\n                text.append(\"odd \");\n            } else {\n                text.append(\"even \");\n            }\n\n            doc.add(new Field(\"text\", text.toString(), textFieldType));\n            String json = \"{ \\\"text\\\" : \\\"\" + text.toString() + \"\\\" }\";\n            doc.add(new StoredField(\"_source\", new BytesRef(json)));\n\n            w.addDocument(doc);\n        }\n    }\n","realPath":"server/src/test/java/org/elasticsearch/search/aggregations/bucket/terms/SignificantTermsAggregatorTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":375,"status":"B"}],"commitId":"b84a6ed5e6fc1e057f8c0f4d6758a80b3d2a51fd","commitMessage":"@@@Merge significant_terms into the terms package (#56699)\n\nThis merges the code for the `significant_terms` agg into the package\nfor the code for the `terms` agg. They are *super* entangled already. \nthis mostly just admits that to ourselves.\n\nPrecondition for the terms work in #56487\n\n","date":"2020-05-14 03:59:35","modifiedFileCount":"20","status":"B","submitter":"Nik Everett"},{"authorTime":"2020-06-16 00:47:15","codes":[{"authorDate":"2020-06-16 00:47:15","commitOrder":2,"curCode":"    private void indexDocuments(IndexWriter writer, TextFieldType textFieldType) throws IOException {\n        for (int i = 0; i < 10; i++) {\n            Document doc = new Document();\n            StringBuilder text = new StringBuilder(\"common \");\n            if (i % 2 == 0) {\n                text.append(\"odd \");\n            } else {\n                text.append(\"even separator\" + i + \" duplicate duplicate duplicate duplicate duplicate duplicate \");\n            }\n\n            doc.add(new Field(\"text\", text.toString(), TextFieldMapper.Defaults.FIELD_TYPE));\n            String json =\"{ \\\"text\\\" : \\\"\" + text.toString() + \"\\\",\"+\n                \" \\\"json_only_field\\\" : \\\"\" + text.toString() + \"\\\"\" +\n                \" }\";\n            doc.add(new StoredField(\"_source\", new BytesRef(json)));\n            writer.addDocument(doc);\n        }\n    }\n","date":"2020-06-16 00:47:15","endLine":213,"groupId":"53442","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"indexDocuments","params":"(IndexWriterwriter@TextFieldTypetextFieldType)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/db/39925db9da9be3a110192d16f9c6fd6ff34237.src","preCode":"    private void indexDocuments(IndexWriter writer, TextFieldType textFieldType) throws IOException {\n        for (int i = 0; i < 10; i++) {\n            Document doc = new Document();\n            StringBuilder text = new StringBuilder(\"common \");\n            if (i % 2 == 0) {\n                text.append(\"odd \");\n            } else {\n                text.append(\"even separator\" + i + \" duplicate duplicate duplicate duplicate duplicate duplicate \");\n            }\n\n            doc.add(new Field(\"text\", text.toString(), textFieldType));\n            String json =\"{ \\\"text\\\" : \\\"\" + text.toString() + \"\\\",\"+\n                \" \\\"json_only_field\\\" : \\\"\" + text.toString() + \"\\\"\" +\n                \" }\";\n            doc.add(new StoredField(\"_source\", new BytesRef(json)));\n            writer.addDocument(doc);\n        }\n    }\n","realPath":"server/src/test/java/org/elasticsearch/search/aggregations/bucket/terms/SignificantTextAggregatorTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":196,"status":"M"},{"authorDate":"2020-06-16 00:47:15","commitOrder":2,"curCode":"    private void addMixedTextDocs(TextFieldType textFieldType, IndexWriter w) throws IOException {\n        for (int i = 0; i < 10; i++) {\n            Document doc = new Document();\n            StringBuilder text = new StringBuilder(\"common \");\n            if (i % 2 == 0) {\n                text.append(\"odd \");\n            } else {\n                text.append(\"even \");\n            }\n\n            doc.add(new Field(\"text\", text.toString(), TextFieldMapper.Defaults.FIELD_TYPE));\n            String json = \"{ \\\"text\\\" : \\\"\" + text.toString() + \"\\\" }\";\n            doc.add(new StoredField(\"_source\", new BytesRef(json)));\n\n            w.addDocument(doc);\n        }\n    }\n","date":"2020-06-16 00:47:15","endLine":606,"groupId":"4607","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"addMixedTextDocs","params":"(TextFieldTypetextFieldType@IndexWriterw)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/28/efafacff9bfdd9ae75d729e8e14d03877ca487.src","preCode":"    private void addMixedTextDocs(TextFieldType textFieldType, IndexWriter w) throws IOException {\n        for (int i = 0; i < 10; i++) {\n            Document doc = new Document();\n            StringBuilder text = new StringBuilder(\"common \");\n            if (i % 2 == 0) {\n                text.append(\"odd \");\n            } else {\n                text.append(\"even \");\n            }\n\n            doc.add(new Field(\"text\", text.toString(), textFieldType));\n            String json = \"{ \\\"text\\\" : \\\"\" + text.toString() + \"\\\" }\";\n            doc.add(new StoredField(\"_source\", new BytesRef(json)));\n\n            w.addDocument(doc);\n        }\n    }\n","realPath":"server/src/test/java/org/elasticsearch/search/aggregations/bucket/terms/SignificantTermsAggregatorTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":590,"status":"M"}],"commitId":"3b696828ada5953bb1669b972a353736383edf08","commitMessage":"@@@MappedFieldType should not extend FieldType (#57666)\n\nMappedFieldType is a combination of two concerns:\n\n* an extension of lucene's FieldType.  defining how a field should be indexed\n* a set of query factory methods.  defining how a field should be searched\n\nWe want to break these two concerns apart. This commit is a first step to doing this.  breaking\nthe inheritance relationship between MappedFieldType and FieldType. MappedFieldType \ninstead has a series of boolean flags defining whether or not the field is searchable or \naggregatable.  and FieldMapper has a separate FieldType passed to its constructor defining \nhow indexing should be done.\n\nRelates to #56814","date":"2020-06-16 00:47:15","modifiedFileCount":"257","status":"M","submitter":"Alan Woodward"},{"authorTime":"2020-06-16 00:47:15","codes":[{"authorDate":"2020-06-26 22:33:37","commitOrder":3,"curCode":"    private void indexDocuments(IndexWriter writer) throws IOException {\n        for (int i = 0; i < 10; i++) {\n            Document doc = new Document();\n            StringBuilder text = new StringBuilder(\"common \");\n            if (i % 2 == 0) {\n                text.append(\"even separator\" + i + \" duplicate duplicate duplicate duplicate duplicate duplicate \");\n            } else {\n                text.append(\"odd \");\n            }\n\n            doc.add(new Field(\"text\", text.toString(), TextFieldMapper.Defaults.FIELD_TYPE));\n            String json =\"{ \\\"text\\\" : \\\"\" + text.toString() + \"\\\",\"+\n                \" \\\"json_only_field\\\" : \\\"\" + text.toString() + \"\\\"\" +\n                \" }\";\n            doc.add(new StoredField(\"_source\", new BytesRef(json)));\n            doc.add(new SortedSetDocValuesField(\"kwd\", i % 2 == 0 ? new BytesRef(\"even\") : new BytesRef(\"odd\")));\n            writer.addDocument(doc);\n        }\n    }\n","date":"2020-06-26 22:33:37","endLine":252,"groupId":"68078","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"indexDocuments","params":"(IndexWriterwriter)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/54/3c9429cdd3664df1513848696bf431af2c1baf.src","preCode":"    private void indexDocuments(IndexWriter writer, TextFieldType textFieldType) throws IOException {\n        for (int i = 0; i < 10; i++) {\n            Document doc = new Document();\n            StringBuilder text = new StringBuilder(\"common \");\n            if (i % 2 == 0) {\n                text.append(\"odd \");\n            } else {\n                text.append(\"even separator\" + i + \" duplicate duplicate duplicate duplicate duplicate duplicate \");\n            }\n\n            doc.add(new Field(\"text\", text.toString(), TextFieldMapper.Defaults.FIELD_TYPE));\n            String json =\"{ \\\"text\\\" : \\\"\" + text.toString() + \"\\\",\"+\n                \" \\\"json_only_field\\\" : \\\"\" + text.toString() + \"\\\"\" +\n                \" }\";\n            doc.add(new StoredField(\"_source\", new BytesRef(json)));\n            writer.addDocument(doc);\n        }\n    }\n","realPath":"server/src/test/java/org/elasticsearch/search/aggregations/bucket/terms/SignificantTextAggregatorTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":234,"status":"M"},{"authorDate":"2020-06-16 00:47:15","commitOrder":3,"curCode":"    private void addMixedTextDocs(TextFieldType textFieldType, IndexWriter w) throws IOException {\n        for (int i = 0; i < 10; i++) {\n            Document doc = new Document();\n            StringBuilder text = new StringBuilder(\"common \");\n            if (i % 2 == 0) {\n                text.append(\"odd \");\n            } else {\n                text.append(\"even \");\n            }\n\n            doc.add(new Field(\"text\", text.toString(), TextFieldMapper.Defaults.FIELD_TYPE));\n            String json = \"{ \\\"text\\\" : \\\"\" + text.toString() + \"\\\" }\";\n            doc.add(new StoredField(\"_source\", new BytesRef(json)));\n\n            w.addDocument(doc);\n        }\n    }\n","date":"2020-06-16 00:47:15","endLine":606,"groupId":"4607","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"addMixedTextDocs","params":"(TextFieldTypetextFieldType@IndexWriterw)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/28/efafacff9bfdd9ae75d729e8e14d03877ca487.src","preCode":"    private void addMixedTextDocs(TextFieldType textFieldType, IndexWriter w) throws IOException {\n        for (int i = 0; i < 10; i++) {\n            Document doc = new Document();\n            StringBuilder text = new StringBuilder(\"common \");\n            if (i % 2 == 0) {\n                text.append(\"odd \");\n            } else {\n                text.append(\"even \");\n            }\n\n            doc.add(new Field(\"text\", text.toString(), TextFieldMapper.Defaults.FIELD_TYPE));\n            String json = \"{ \\\"text\\\" : \\\"\" + text.toString() + \"\\\" }\";\n            doc.add(new StoredField(\"_source\", new BytesRef(json)));\n\n            w.addDocument(doc);\n        }\n    }\n","realPath":"server/src/test/java/org/elasticsearch/search/aggregations/bucket/terms/SignificantTermsAggregatorTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":590,"status":"N"}],"commitId":"cac5f29cee7572a3695e2b8d17d0a0cb7ac473dd","commitMessage":"@@@Merge branch 'master' into feature/runtime_fields\n","date":"2020-06-26 22:33:37","modifiedFileCount":"731","status":"M","submitter":"Nik Everett"},{"authorTime":"2020-08-07 05:14:20","codes":[{"authorDate":"2020-06-26 22:33:37","commitOrder":4,"curCode":"    private void indexDocuments(IndexWriter writer) throws IOException {\n        for (int i = 0; i < 10; i++) {\n            Document doc = new Document();\n            StringBuilder text = new StringBuilder(\"common \");\n            if (i % 2 == 0) {\n                text.append(\"even separator\" + i + \" duplicate duplicate duplicate duplicate duplicate duplicate \");\n            } else {\n                text.append(\"odd \");\n            }\n\n            doc.add(new Field(\"text\", text.toString(), TextFieldMapper.Defaults.FIELD_TYPE));\n            String json =\"{ \\\"text\\\" : \\\"\" + text.toString() + \"\\\",\"+\n                \" \\\"json_only_field\\\" : \\\"\" + text.toString() + \"\\\"\" +\n                \" }\";\n            doc.add(new StoredField(\"_source\", new BytesRef(json)));\n            doc.add(new SortedSetDocValuesField(\"kwd\", i % 2 == 0 ? new BytesRef(\"even\") : new BytesRef(\"odd\")));\n            writer.addDocument(doc);\n        }\n    }\n","date":"2020-06-26 22:33:37","endLine":252,"groupId":"68078","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"indexDocuments","params":"(IndexWriterwriter)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/54/3c9429cdd3664df1513848696bf431af2c1baf.src","preCode":"    private void indexDocuments(IndexWriter writer) throws IOException {\n        for (int i = 0; i < 10; i++) {\n            Document doc = new Document();\n            StringBuilder text = new StringBuilder(\"common \");\n            if (i % 2 == 0) {\n                text.append(\"even separator\" + i + \" duplicate duplicate duplicate duplicate duplicate duplicate \");\n            } else {\n                text.append(\"odd \");\n            }\n\n            doc.add(new Field(\"text\", text.toString(), TextFieldMapper.Defaults.FIELD_TYPE));\n            String json =\"{ \\\"text\\\" : \\\"\" + text.toString() + \"\\\",\"+\n                \" \\\"json_only_field\\\" : \\\"\" + text.toString() + \"\\\"\" +\n                \" }\";\n            doc.add(new StoredField(\"_source\", new BytesRef(json)));\n            doc.add(new SortedSetDocValuesField(\"kwd\", i % 2 == 0 ? new BytesRef(\"even\") : new BytesRef(\"odd\")));\n            writer.addDocument(doc);\n        }\n    }\n","realPath":"server/src/test/java/org/elasticsearch/search/aggregations/bucket/terms/SignificantTextAggregatorTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":234,"status":"N"},{"authorDate":"2020-08-07 05:14:20","commitOrder":4,"curCode":"    private void addMixedTextDocs(IndexWriter w) throws IOException {\n        for (int i = 0; i < 10; i++) {\n            Document doc = new Document();\n            StringBuilder text = new StringBuilder(\"common \");\n            if (i % 2 == 0) {\n                text.append(\"odd \");\n            } else {\n                text.append(\"even \");\n            }\n\n            doc.add(new Field(\"text\", text.toString(), TextFieldMapper.Defaults.FIELD_TYPE));\n            String json = \"{ \\\"text\\\" : \\\"\" + text.toString() + \"\\\" }\";\n            doc.add(new StoredField(\"_source\", new BytesRef(json)));\n\n            w.addDocument(doc);\n        }\n    }\n","date":"2020-08-07 05:14:20","endLine":598,"groupId":"4607","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"addMixedTextDocs","params":"(IndexWriterw)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/e9/92eab92bf0403d6c1136e9e4da2d058db35b7c.src","preCode":"    private void addMixedTextDocs(TextFieldType textFieldType, IndexWriter w) throws IOException {\n        for (int i = 0; i < 10; i++) {\n            Document doc = new Document();\n            StringBuilder text = new StringBuilder(\"common \");\n            if (i % 2 == 0) {\n                text.append(\"odd \");\n            } else {\n                text.append(\"even \");\n            }\n\n            doc.add(new Field(\"text\", text.toString(), TextFieldMapper.Defaults.FIELD_TYPE));\n            String json = \"{ \\\"text\\\" : \\\"\" + text.toString() + \"\\\" }\";\n            doc.add(new StoredField(\"_source\", new BytesRef(json)));\n\n            w.addDocument(doc);\n        }\n    }\n","realPath":"server/src/test/java/org/elasticsearch/search/aggregations/bucket/terms/SignificantTermsAggregatorTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":582,"status":"M"}],"commitId":"5e3ea6eb11c68bdcc9adda51715a6e1fea9186d6","commitMessage":"@@@Merge branch 'master' into feature/runtime_fields\n","date":"2020-08-07 05:14:20","modifiedFileCount":"73","status":"M","submitter":"Nik Everett"},{"authorTime":"2020-08-07 05:14:20","codes":[{"authorDate":"2021-03-04 07:04:47","commitOrder":5,"curCode":"    private void indexDocuments(IndexWriter writer) throws IOException {\n        for (int i = 0; i < 10; i++) {\n            Document doc = new Document();\n            StringBuilder text = new StringBuilder(\"common \");\n            if (i % 2 == 0) {\n                text.append(\"even separator\" + i + \" duplicate duplicate duplicate duplicate duplicate duplicate \");\n            } else {\n                text.append(\"odd \");\n            }\n\n            doc.add(new Field(\"text\", text.toString(), TextFieldMapper.Defaults.FIELD_TYPE));\n            String json =\"{ \\\"text\\\" : \\\"\" + text.toString() + \"\\\",\"+\n                \" \\\"json_only_field\\\" : \\\"\" + text.toString() + \"\\\"\" +\n                \" }\";\n            doc.add(new StoredField(\"_source\", new BytesRef(json)));\n            doc.add(new SortedSetDocValuesField(\"kwd\", i % 2 == 0 ? new BytesRef(\"even\") : new BytesRef(\"odd\")));\n            doc.add(new Field(\"kwd\", i % 2 == 0 ? new BytesRef(\"even\") : new BytesRef(\"odd\"), KeywordFieldMapper.Defaults.FIELD_TYPE));\n            writer.addDocument(doc);\n        }\n    }\n","date":"2021-03-04 07:04:47","endLine":312,"groupId":"105196","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"indexDocuments","params":"(IndexWriterwriter)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/93/07991a34798ecb17777a6d9a2e744098054b6d.src","preCode":"    private void indexDocuments(IndexWriter writer) throws IOException {\n        for (int i = 0; i < 10; i++) {\n            Document doc = new Document();\n            StringBuilder text = new StringBuilder(\"common \");\n            if (i % 2 == 0) {\n                text.append(\"even separator\" + i + \" duplicate duplicate duplicate duplicate duplicate duplicate \");\n            } else {\n                text.append(\"odd \");\n            }\n\n            doc.add(new Field(\"text\", text.toString(), TextFieldMapper.Defaults.FIELD_TYPE));\n            String json =\"{ \\\"text\\\" : \\\"\" + text.toString() + \"\\\",\"+\n                \" \\\"json_only_field\\\" : \\\"\" + text.toString() + \"\\\"\" +\n                \" }\";\n            doc.add(new StoredField(\"_source\", new BytesRef(json)));\n            doc.add(new SortedSetDocValuesField(\"kwd\", i % 2 == 0 ? new BytesRef(\"even\") : new BytesRef(\"odd\")));\n            writer.addDocument(doc);\n        }\n    }\n","realPath":"server/src/test/java/org/elasticsearch/search/aggregations/bucket/terms/SignificantTextAggregatorTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":293,"status":"M"},{"authorDate":"2020-08-07 05:14:20","commitOrder":5,"curCode":"    private void addMixedTextDocs(IndexWriter w) throws IOException {\n        for (int i = 0; i < 10; i++) {\n            Document doc = new Document();\n            StringBuilder text = new StringBuilder(\"common \");\n            if (i % 2 == 0) {\n                text.append(\"odd \");\n            } else {\n                text.append(\"even \");\n            }\n\n            doc.add(new Field(\"text\", text.toString(), TextFieldMapper.Defaults.FIELD_TYPE));\n            String json = \"{ \\\"text\\\" : \\\"\" + text.toString() + \"\\\" }\";\n            doc.add(new StoredField(\"_source\", new BytesRef(json)));\n\n            w.addDocument(doc);\n        }\n    }\n","date":"2020-08-07 05:14:20","endLine":598,"groupId":"105196","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"addMixedTextDocs","params":"(IndexWriterw)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/e9/92eab92bf0403d6c1136e9e4da2d058db35b7c.src","preCode":"    private void addMixedTextDocs(IndexWriter w) throws IOException {\n        for (int i = 0; i < 10; i++) {\n            Document doc = new Document();\n            StringBuilder text = new StringBuilder(\"common \");\n            if (i % 2 == 0) {\n                text.append(\"odd \");\n            } else {\n                text.append(\"even \");\n            }\n\n            doc.add(new Field(\"text\", text.toString(), TextFieldMapper.Defaults.FIELD_TYPE));\n            String json = \"{ \\\"text\\\" : \\\"\" + text.toString() + \"\\\" }\";\n            doc.add(new StoredField(\"_source\", new BytesRef(json)));\n\n            w.addDocument(doc);\n        }\n    }\n","realPath":"server/src/test/java/org/elasticsearch/search/aggregations/bucket/terms/SignificantTermsAggregatorTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":582,"status":"N"}],"commitId":"10e2f90560f3ee5027fa1213968b0e13e5c0d357","commitMessage":"@@@Speed up aggs with sub-aggregations (#69806)\n\nThis allows many of the optimizations added in #63643 and #68871 to run\non aggregations with sub-aggregations. This should:\n* Speed up `terms` aggregations on fields with less than 1000 values that\n  also have sub-aggregations. Locally I see 2 second searches run in 1.2\n  seconds.\n* Applies that same speedup to `range` and `date_histogram` aggregations but\n  it feels less impressive because the point range queries are a little\n  slower to get up and go.\n* Massively speed up `filters` aggregations with sub-aggregations that\n  don't have a `parent` aggregation or collect \"other\" buckets. Also\n  save a ton of memory while collecting them.\n","date":"2021-03-04 07:04:47","modifiedFileCount":"15","status":"M","submitter":"Nik Everett"}]
