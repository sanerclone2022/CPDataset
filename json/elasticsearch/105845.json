[{"authorTime":"2018-04-26 03:22:53","codes":[{"authorDate":"2018-04-26 03:22:53","commitOrder":1,"curCode":"    public void testDfsWith2Shards() throws IOException {\n        AtomicArray<DfsSearchResult> results = new AtomicArray<>(2);\n        AtomicReference<AtomicArray<SearchPhaseResult>> responseRef = new AtomicReference<>();\n        results.set(0, newSearchResult(0, 1, new SearchShardTarget(\"node1\", new Index(\"test\", \"na\"), 0, null)));\n        results.set(1, newSearchResult(1, 2, new SearchShardTarget(\"node2\", new Index(\"test\", \"na\"), 0, null)));\n        results.get(0).termsStatistics(new Term[0], new TermStatistics[0]);\n        results.get(1).termsStatistics(new Term[0], new TermStatistics[0]);\n\n        SearchPhaseController controller = new SearchPhaseController(Settings.EMPTY,\n            (b) -> new InternalAggregation.ReduceContext(BigArrays.NON_RECYCLING_INSTANCE, null, b));\n        SearchTransportService searchTransportService = new SearchTransportService(\n            Settings.builder().put(\"search.remote.connect\", false).build(), null, null) {\n\n            @Override\n            public void sendExecuteQuery(Transport.Connection connection, QuerySearchRequest request, SearchTask task,\n                                         SearchActionListener<QuerySearchResult> listener) {\n                if (request.id() == 1) {\n                    QuerySearchResult queryResult = new QuerySearchResult(123, new SearchShardTarget(\"node1\", new Index(\"test\", \"na\"), 0,\n                        null));\n                    queryResult.topDocs(new TopDocs(1, new ScoreDoc[] {new ScoreDoc(42, 1.0F)}, 2.0F), new DocValueFormat[0]);\n                    queryResult.size(2); \r\n                    listener.onResponse(queryResult);\n                } else if (request.id() == 2) {\n                    QuerySearchResult queryResult = new QuerySearchResult(123, new SearchShardTarget(\"node2\", new Index(\"test\", \"na\"), 0,\n                        null));\n                    queryResult.topDocs(new TopDocs(1, new ScoreDoc[] {new ScoreDoc(84, 2.0F)}, 2.0F), new DocValueFormat[0]);\n                    queryResult.size(2); \r\n                    listener.onResponse(queryResult);\n                } else {\n                    fail(\"no such request ID: \" + request.id());\n                }\n            }\n        };\n        MockSearchPhaseContext mockSearchPhaseContext = new MockSearchPhaseContext(2);\n        mockSearchPhaseContext.searchTransport = searchTransportService;\n        DfsQueryPhase phase = new DfsQueryPhase(results, controller,\n            (response) -> new SearchPhase(\"test\") {\n            @Override\n            public void run() throws IOException {\n                responseRef.set(response.results);\n            }\n        }, mockSearchPhaseContext);\n        assertEquals(\"dfs_query\", phase.getName());\n        phase.run();\n        mockSearchPhaseContext.assertNoFailure();\n        assertNotNull(responseRef.get());\n        assertNotNull(responseRef.get().get(0));\n        assertNull(responseRef.get().get(0).fetchResult());\n        assertEquals(1, responseRef.get().get(0).queryResult().topDocs().totalHits);\n        assertEquals(42, responseRef.get().get(0).queryResult().topDocs().scoreDocs[0].doc);\n        assertNotNull(responseRef.get().get(1));\n        assertNull(responseRef.get().get(1).fetchResult());\n        assertEquals(1, responseRef.get().get(1).queryResult().topDocs().totalHits);\n        assertEquals(84, responseRef.get().get(1).queryResult().topDocs().scoreDocs[0].doc);\n        assertTrue(mockSearchPhaseContext.releasedSearchContexts.isEmpty());\n        assertEquals(2, mockSearchPhaseContext.numSuccess.get());\n    }\n","date":"2018-04-26 03:22:53","endLine":108,"groupId":"35151","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testDfsWith2Shards","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/c1/f729a12ca2b4396bebfc0df1e224c9e05b9d9b.src","preCode":"    public void testDfsWith2Shards() throws IOException {\n        AtomicArray<DfsSearchResult> results = new AtomicArray<>(2);\n        AtomicReference<AtomicArray<SearchPhaseResult>> responseRef = new AtomicReference<>();\n        results.set(0, newSearchResult(0, 1, new SearchShardTarget(\"node1\", new Index(\"test\", \"na\"), 0, null)));\n        results.set(1, newSearchResult(1, 2, new SearchShardTarget(\"node2\", new Index(\"test\", \"na\"), 0, null)));\n        results.get(0).termsStatistics(new Term[0], new TermStatistics[0]);\n        results.get(1).termsStatistics(new Term[0], new TermStatistics[0]);\n\n        SearchPhaseController controller = new SearchPhaseController(Settings.EMPTY,\n            (b) -> new InternalAggregation.ReduceContext(BigArrays.NON_RECYCLING_INSTANCE, null, b));\n        SearchTransportService searchTransportService = new SearchTransportService(\n            Settings.builder().put(\"search.remote.connect\", false).build(), null, null) {\n\n            @Override\n            public void sendExecuteQuery(Transport.Connection connection, QuerySearchRequest request, SearchTask task,\n                                         SearchActionListener<QuerySearchResult> listener) {\n                if (request.id() == 1) {\n                    QuerySearchResult queryResult = new QuerySearchResult(123, new SearchShardTarget(\"node1\", new Index(\"test\", \"na\"), 0,\n                        null));\n                    queryResult.topDocs(new TopDocs(1, new ScoreDoc[] {new ScoreDoc(42, 1.0F)}, 2.0F), new DocValueFormat[0]);\n                    queryResult.size(2); \r\n                    listener.onResponse(queryResult);\n                } else if (request.id() == 2) {\n                    QuerySearchResult queryResult = new QuerySearchResult(123, new SearchShardTarget(\"node2\", new Index(\"test\", \"na\"), 0,\n                        null));\n                    queryResult.topDocs(new TopDocs(1, new ScoreDoc[] {new ScoreDoc(84, 2.0F)}, 2.0F), new DocValueFormat[0]);\n                    queryResult.size(2); \r\n                    listener.onResponse(queryResult);\n                } else {\n                    fail(\"no such request ID: \" + request.id());\n                }\n            }\n        };\n        MockSearchPhaseContext mockSearchPhaseContext = new MockSearchPhaseContext(2);\n        mockSearchPhaseContext.searchTransport = searchTransportService;\n        DfsQueryPhase phase = new DfsQueryPhase(results, controller,\n            (response) -> new SearchPhase(\"test\") {\n            @Override\n            public void run() throws IOException {\n                responseRef.set(response.results);\n            }\n        }, mockSearchPhaseContext);\n        assertEquals(\"dfs_query\", phase.getName());\n        phase.run();\n        mockSearchPhaseContext.assertNoFailure();\n        assertNotNull(responseRef.get());\n        assertNotNull(responseRef.get().get(0));\n        assertNull(responseRef.get().get(0).fetchResult());\n        assertEquals(1, responseRef.get().get(0).queryResult().topDocs().totalHits);\n        assertEquals(42, responseRef.get().get(0).queryResult().topDocs().scoreDocs[0].doc);\n        assertNotNull(responseRef.get().get(1));\n        assertNull(responseRef.get().get(1).fetchResult());\n        assertEquals(1, responseRef.get().get(1).queryResult().topDocs().totalHits);\n        assertEquals(84, responseRef.get().get(1).queryResult().topDocs().scoreDocs[0].doc);\n        assertTrue(mockSearchPhaseContext.releasedSearchContexts.isEmpty());\n        assertEquals(2, mockSearchPhaseContext.numSuccess.get());\n    }\n","realPath":"server/src/test/java/org/elasticsearch/action/search/DfsQueryPhaseTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":52,"status":"B"},{"authorDate":"2018-04-26 03:22:53","commitOrder":1,"curCode":"    public void testFailPhaseOnException() throws IOException {\n        AtomicArray<DfsSearchResult> results = new AtomicArray<>(2);\n        AtomicReference<AtomicArray<SearchPhaseResult>> responseRef = new AtomicReference<>();\n        results.set(0, newSearchResult(0, 1, new SearchShardTarget(\"node1\", new Index(\"test\", \"na\"), 0, null)));\n        results.set(1, newSearchResult(1, 2, new SearchShardTarget(\"node2\", new Index(\"test\", \"na\"), 0, null)));\n        results.get(0).termsStatistics(new Term[0], new TermStatistics[0]);\n        results.get(1).termsStatistics(new Term[0], new TermStatistics[0]);\n\n        SearchPhaseController controller = new SearchPhaseController(Settings.EMPTY,\n            (b) -> new InternalAggregation.ReduceContext(BigArrays.NON_RECYCLING_INSTANCE, null, b));\n        SearchTransportService searchTransportService = new SearchTransportService(\n            Settings.builder().put(\"search.remote.connect\", false).build(), null, null) {\n\n            @Override\n            public void sendExecuteQuery(Transport.Connection connection, QuerySearchRequest request, SearchTask task,\n                                         SearchActionListener<QuerySearchResult> listener) {\n                if (request.id() == 1) {\n                    QuerySearchResult queryResult = new QuerySearchResult(123, new SearchShardTarget(\"node1\", new Index(\"test\", \"na\"), 0,\n                        null));\n                    queryResult.topDocs(new TopDocs(1, new ScoreDoc[] {new ScoreDoc(42, 1.0F)}, 2.0F), new DocValueFormat[0]);\n                    queryResult.size(2); \r\n                    listener.onResponse(queryResult);\n                } else if (request.id() == 2) {\n                   throw new UncheckedIOException(new MockDirectoryWrapper.FakeIOException());\n                } else {\n                    fail(\"no such request ID: \" + request.id());\n                }\n            }\n        };\n        MockSearchPhaseContext mockSearchPhaseContext = new MockSearchPhaseContext(2);\n        mockSearchPhaseContext.searchTransport = searchTransportService;\n        DfsQueryPhase phase = new DfsQueryPhase(results, controller,\n            (response) -> new SearchPhase(\"test\") {\n                @Override\n                public void run() throws IOException {\n                    responseRef.set(response.results);\n                }\n            }, mockSearchPhaseContext);\n        assertEquals(\"dfs_query\", phase.getName());\n        expectThrows(UncheckedIOException.class, () -> phase.run());\n        assertTrue(mockSearchPhaseContext.releasedSearchContexts.isEmpty()); \r\n    }\n","date":"2018-04-26 03:22:53","endLine":208,"groupId":"35151","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testFailPhaseOnException","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/c1/f729a12ca2b4396bebfc0df1e224c9e05b9d9b.src","preCode":"    public void testFailPhaseOnException() throws IOException {\n        AtomicArray<DfsSearchResult> results = new AtomicArray<>(2);\n        AtomicReference<AtomicArray<SearchPhaseResult>> responseRef = new AtomicReference<>();\n        results.set(0, newSearchResult(0, 1, new SearchShardTarget(\"node1\", new Index(\"test\", \"na\"), 0, null)));\n        results.set(1, newSearchResult(1, 2, new SearchShardTarget(\"node2\", new Index(\"test\", \"na\"), 0, null)));\n        results.get(0).termsStatistics(new Term[0], new TermStatistics[0]);\n        results.get(1).termsStatistics(new Term[0], new TermStatistics[0]);\n\n        SearchPhaseController controller = new SearchPhaseController(Settings.EMPTY,\n            (b) -> new InternalAggregation.ReduceContext(BigArrays.NON_RECYCLING_INSTANCE, null, b));\n        SearchTransportService searchTransportService = new SearchTransportService(\n            Settings.builder().put(\"search.remote.connect\", false).build(), null, null) {\n\n            @Override\n            public void sendExecuteQuery(Transport.Connection connection, QuerySearchRequest request, SearchTask task,\n                                         SearchActionListener<QuerySearchResult> listener) {\n                if (request.id() == 1) {\n                    QuerySearchResult queryResult = new QuerySearchResult(123, new SearchShardTarget(\"node1\", new Index(\"test\", \"na\"), 0,\n                        null));\n                    queryResult.topDocs(new TopDocs(1, new ScoreDoc[] {new ScoreDoc(42, 1.0F)}, 2.0F), new DocValueFormat[0]);\n                    queryResult.size(2); \r\n                    listener.onResponse(queryResult);\n                } else if (request.id() == 2) {\n                   throw new UncheckedIOException(new MockDirectoryWrapper.FakeIOException());\n                } else {\n                    fail(\"no such request ID: \" + request.id());\n                }\n            }\n        };\n        MockSearchPhaseContext mockSearchPhaseContext = new MockSearchPhaseContext(2);\n        mockSearchPhaseContext.searchTransport = searchTransportService;\n        DfsQueryPhase phase = new DfsQueryPhase(results, controller,\n            (response) -> new SearchPhase(\"test\") {\n                @Override\n                public void run() throws IOException {\n                    responseRef.set(response.results);\n                }\n            }, mockSearchPhaseContext);\n        assertEquals(\"dfs_query\", phase.getName());\n        expectThrows(UncheckedIOException.class, () -> phase.run());\n        assertTrue(mockSearchPhaseContext.releasedSearchContexts.isEmpty()); \r\n    }\n","realPath":"server/src/test/java/org/elasticsearch/action/search/DfsQueryPhaseTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":167,"status":"B"}],"commitId":"d74fb9eb4559077e2d20b19a9ed62d9ff825027a","commitMessage":"@@@Opened x-pack ILM code\n","date":"2018-04-26 03:22:53","modifiedFileCount":"0","status":"B","submitter":"Tal Levy"},{"authorTime":"2018-09-06 15:17:40","codes":[{"authorDate":"2018-09-06 15:17:40","commitOrder":2,"curCode":"    public void testDfsWith2Shards() throws IOException {\n        AtomicArray<DfsSearchResult> results = new AtomicArray<>(2);\n        AtomicReference<AtomicArray<SearchPhaseResult>> responseRef = new AtomicReference<>();\n        results.set(0, newSearchResult(0, 1, new SearchShardTarget(\"node1\", new Index(\"test\", \"na\"), 0, null)));\n        results.set(1, newSearchResult(1, 2, new SearchShardTarget(\"node2\", new Index(\"test\", \"na\"), 0, null)));\n        results.get(0).termsStatistics(new Term[0], new TermStatistics[0]);\n        results.get(1).termsStatistics(new Term[0], new TermStatistics[0]);\n\n        SearchPhaseController controller = new SearchPhaseController(Settings.EMPTY,\n            (b) -> new InternalAggregation.ReduceContext(BigArrays.NON_RECYCLING_INSTANCE, null, b));\n        SearchTransportService searchTransportService = new SearchTransportService(\n            Settings.builder().put(\"cluster.remote.connect\", false).build(), null, null) {\n\n            @Override\n            public void sendExecuteQuery(Transport.Connection connection, QuerySearchRequest request, SearchTask task,\n                                         SearchActionListener<QuerySearchResult> listener) {\n                if (request.id() == 1) {\n                    QuerySearchResult queryResult = new QuerySearchResult(123, new SearchShardTarget(\"node1\", new Index(\"test\", \"na\"), 0,\n                        null));\n                    queryResult.topDocs(new TopDocs(1, new ScoreDoc[] {new ScoreDoc(42, 1.0F)}, 2.0F), new DocValueFormat[0]);\n                    queryResult.size(2); \r\n                    listener.onResponse(queryResult);\n                } else if (request.id() == 2) {\n                    QuerySearchResult queryResult = new QuerySearchResult(123, new SearchShardTarget(\"node2\", new Index(\"test\", \"na\"), 0,\n                        null));\n                    queryResult.topDocs(new TopDocs(1, new ScoreDoc[] {new ScoreDoc(84, 2.0F)}, 2.0F), new DocValueFormat[0]);\n                    queryResult.size(2); \r\n                    listener.onResponse(queryResult);\n                } else {\n                    fail(\"no such request ID: \" + request.id());\n                }\n            }\n        };\n        MockSearchPhaseContext mockSearchPhaseContext = new MockSearchPhaseContext(2);\n        mockSearchPhaseContext.searchTransport = searchTransportService;\n        DfsQueryPhase phase = new DfsQueryPhase(results, controller,\n            (response) -> new SearchPhase(\"test\") {\n            @Override\n            public void run() throws IOException {\n                responseRef.set(response.results);\n            }\n        }, mockSearchPhaseContext);\n        assertEquals(\"dfs_query\", phase.getName());\n        phase.run();\n        mockSearchPhaseContext.assertNoFailure();\n        assertNotNull(responseRef.get());\n        assertNotNull(responseRef.get().get(0));\n        assertNull(responseRef.get().get(0).fetchResult());\n        assertEquals(1, responseRef.get().get(0).queryResult().topDocs().totalHits);\n        assertEquals(42, responseRef.get().get(0).queryResult().topDocs().scoreDocs[0].doc);\n        assertNotNull(responseRef.get().get(1));\n        assertNull(responseRef.get().get(1).fetchResult());\n        assertEquals(1, responseRef.get().get(1).queryResult().topDocs().totalHits);\n        assertEquals(84, responseRef.get().get(1).queryResult().topDocs().scoreDocs[0].doc);\n        assertTrue(mockSearchPhaseContext.releasedSearchContexts.isEmpty());\n        assertEquals(2, mockSearchPhaseContext.numSuccess.get());\n    }\n","date":"2018-09-06 15:17:40","endLine":108,"groupId":"35151","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testDfsWith2Shards","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/c1/bdf901a6d1b88b738965da8c69c1df9ed5bd14.src","preCode":"    public void testDfsWith2Shards() throws IOException {\n        AtomicArray<DfsSearchResult> results = new AtomicArray<>(2);\n        AtomicReference<AtomicArray<SearchPhaseResult>> responseRef = new AtomicReference<>();\n        results.set(0, newSearchResult(0, 1, new SearchShardTarget(\"node1\", new Index(\"test\", \"na\"), 0, null)));\n        results.set(1, newSearchResult(1, 2, new SearchShardTarget(\"node2\", new Index(\"test\", \"na\"), 0, null)));\n        results.get(0).termsStatistics(new Term[0], new TermStatistics[0]);\n        results.get(1).termsStatistics(new Term[0], new TermStatistics[0]);\n\n        SearchPhaseController controller = new SearchPhaseController(Settings.EMPTY,\n            (b) -> new InternalAggregation.ReduceContext(BigArrays.NON_RECYCLING_INSTANCE, null, b));\n        SearchTransportService searchTransportService = new SearchTransportService(\n            Settings.builder().put(\"search.remote.connect\", false).build(), null, null) {\n\n            @Override\n            public void sendExecuteQuery(Transport.Connection connection, QuerySearchRequest request, SearchTask task,\n                                         SearchActionListener<QuerySearchResult> listener) {\n                if (request.id() == 1) {\n                    QuerySearchResult queryResult = new QuerySearchResult(123, new SearchShardTarget(\"node1\", new Index(\"test\", \"na\"), 0,\n                        null));\n                    queryResult.topDocs(new TopDocs(1, new ScoreDoc[] {new ScoreDoc(42, 1.0F)}, 2.0F), new DocValueFormat[0]);\n                    queryResult.size(2); \r\n                    listener.onResponse(queryResult);\n                } else if (request.id() == 2) {\n                    QuerySearchResult queryResult = new QuerySearchResult(123, new SearchShardTarget(\"node2\", new Index(\"test\", \"na\"), 0,\n                        null));\n                    queryResult.topDocs(new TopDocs(1, new ScoreDoc[] {new ScoreDoc(84, 2.0F)}, 2.0F), new DocValueFormat[0]);\n                    queryResult.size(2); \r\n                    listener.onResponse(queryResult);\n                } else {\n                    fail(\"no such request ID: \" + request.id());\n                }\n            }\n        };\n        MockSearchPhaseContext mockSearchPhaseContext = new MockSearchPhaseContext(2);\n        mockSearchPhaseContext.searchTransport = searchTransportService;\n        DfsQueryPhase phase = new DfsQueryPhase(results, controller,\n            (response) -> new SearchPhase(\"test\") {\n            @Override\n            public void run() throws IOException {\n                responseRef.set(response.results);\n            }\n        }, mockSearchPhaseContext);\n        assertEquals(\"dfs_query\", phase.getName());\n        phase.run();\n        mockSearchPhaseContext.assertNoFailure();\n        assertNotNull(responseRef.get());\n        assertNotNull(responseRef.get().get(0));\n        assertNull(responseRef.get().get(0).fetchResult());\n        assertEquals(1, responseRef.get().get(0).queryResult().topDocs().totalHits);\n        assertEquals(42, responseRef.get().get(0).queryResult().topDocs().scoreDocs[0].doc);\n        assertNotNull(responseRef.get().get(1));\n        assertNull(responseRef.get().get(1).fetchResult());\n        assertEquals(1, responseRef.get().get(1).queryResult().topDocs().totalHits);\n        assertEquals(84, responseRef.get().get(1).queryResult().topDocs().scoreDocs[0].doc);\n        assertTrue(mockSearchPhaseContext.releasedSearchContexts.isEmpty());\n        assertEquals(2, mockSearchPhaseContext.numSuccess.get());\n    }\n","realPath":"server/src/test/java/org/elasticsearch/action/search/DfsQueryPhaseTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":52,"status":"M"},{"authorDate":"2018-09-06 15:17:40","commitOrder":2,"curCode":"    public void testFailPhaseOnException() throws IOException {\n        AtomicArray<DfsSearchResult> results = new AtomicArray<>(2);\n        AtomicReference<AtomicArray<SearchPhaseResult>> responseRef = new AtomicReference<>();\n        results.set(0, newSearchResult(0, 1, new SearchShardTarget(\"node1\", new Index(\"test\", \"na\"), 0, null)));\n        results.set(1, newSearchResult(1, 2, new SearchShardTarget(\"node2\", new Index(\"test\", \"na\"), 0, null)));\n        results.get(0).termsStatistics(new Term[0], new TermStatistics[0]);\n        results.get(1).termsStatistics(new Term[0], new TermStatistics[0]);\n\n        SearchPhaseController controller = new SearchPhaseController(Settings.EMPTY,\n            (b) -> new InternalAggregation.ReduceContext(BigArrays.NON_RECYCLING_INSTANCE, null, b));\n        SearchTransportService searchTransportService = new SearchTransportService(\n            Settings.builder().put(\"cluster.remote.connect\", false).build(), null, null) {\n\n            @Override\n            public void sendExecuteQuery(Transport.Connection connection, QuerySearchRequest request, SearchTask task,\n                                         SearchActionListener<QuerySearchResult> listener) {\n                if (request.id() == 1) {\n                    QuerySearchResult queryResult = new QuerySearchResult(123, new SearchShardTarget(\"node1\", new Index(\"test\", \"na\"), 0,\n                        null));\n                    queryResult.topDocs(new TopDocs(1, new ScoreDoc[] {new ScoreDoc(42, 1.0F)}, 2.0F), new DocValueFormat[0]);\n                    queryResult.size(2); \r\n                    listener.onResponse(queryResult);\n                } else if (request.id() == 2) {\n                   throw new UncheckedIOException(new MockDirectoryWrapper.FakeIOException());\n                } else {\n                    fail(\"no such request ID: \" + request.id());\n                }\n            }\n        };\n        MockSearchPhaseContext mockSearchPhaseContext = new MockSearchPhaseContext(2);\n        mockSearchPhaseContext.searchTransport = searchTransportService;\n        DfsQueryPhase phase = new DfsQueryPhase(results, controller,\n            (response) -> new SearchPhase(\"test\") {\n                @Override\n                public void run() throws IOException {\n                    responseRef.set(response.results);\n                }\n            }, mockSearchPhaseContext);\n        assertEquals(\"dfs_query\", phase.getName());\n        expectThrows(UncheckedIOException.class, () -> phase.run());\n        assertTrue(mockSearchPhaseContext.releasedSearchContexts.isEmpty()); \r\n    }\n","date":"2018-09-06 15:17:40","endLine":208,"groupId":"35151","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testFailPhaseOnException","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/c1/bdf901a6d1b88b738965da8c69c1df9ed5bd14.src","preCode":"    public void testFailPhaseOnException() throws IOException {\n        AtomicArray<DfsSearchResult> results = new AtomicArray<>(2);\n        AtomicReference<AtomicArray<SearchPhaseResult>> responseRef = new AtomicReference<>();\n        results.set(0, newSearchResult(0, 1, new SearchShardTarget(\"node1\", new Index(\"test\", \"na\"), 0, null)));\n        results.set(1, newSearchResult(1, 2, new SearchShardTarget(\"node2\", new Index(\"test\", \"na\"), 0, null)));\n        results.get(0).termsStatistics(new Term[0], new TermStatistics[0]);\n        results.get(1).termsStatistics(new Term[0], new TermStatistics[0]);\n\n        SearchPhaseController controller = new SearchPhaseController(Settings.EMPTY,\n            (b) -> new InternalAggregation.ReduceContext(BigArrays.NON_RECYCLING_INSTANCE, null, b));\n        SearchTransportService searchTransportService = new SearchTransportService(\n            Settings.builder().put(\"search.remote.connect\", false).build(), null, null) {\n\n            @Override\n            public void sendExecuteQuery(Transport.Connection connection, QuerySearchRequest request, SearchTask task,\n                                         SearchActionListener<QuerySearchResult> listener) {\n                if (request.id() == 1) {\n                    QuerySearchResult queryResult = new QuerySearchResult(123, new SearchShardTarget(\"node1\", new Index(\"test\", \"na\"), 0,\n                        null));\n                    queryResult.topDocs(new TopDocs(1, new ScoreDoc[] {new ScoreDoc(42, 1.0F)}, 2.0F), new DocValueFormat[0]);\n                    queryResult.size(2); \r\n                    listener.onResponse(queryResult);\n                } else if (request.id() == 2) {\n                   throw new UncheckedIOException(new MockDirectoryWrapper.FakeIOException());\n                } else {\n                    fail(\"no such request ID: \" + request.id());\n                }\n            }\n        };\n        MockSearchPhaseContext mockSearchPhaseContext = new MockSearchPhaseContext(2);\n        mockSearchPhaseContext.searchTransport = searchTransportService;\n        DfsQueryPhase phase = new DfsQueryPhase(results, controller,\n            (response) -> new SearchPhase(\"test\") {\n                @Override\n                public void run() throws IOException {\n                    responseRef.set(response.results);\n                }\n            }, mockSearchPhaseContext);\n        assertEquals(\"dfs_query\", phase.getName());\n        expectThrows(UncheckedIOException.class, () -> phase.run());\n        assertTrue(mockSearchPhaseContext.releasedSearchContexts.isEmpty()); \r\n    }\n","realPath":"server/src/test/java/org/elasticsearch/action/search/DfsQueryPhaseTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":167,"status":"M"}],"commitId":"b1257d873bc8541b15d7c933a383344c151a1333","commitMessage":"@@@Merge branch 'master' into index-lifecycle\n","date":"2018-09-06 15:17:40","modifiedFileCount":"43","status":"M","submitter":"Colin Goodheart-Smithe"},{"authorTime":"2018-09-07 17:59:10","codes":[{"authorDate":"2018-09-07 17:59:10","commitOrder":3,"curCode":"    public void testDfsWith2Shards() throws IOException {\n        AtomicArray<DfsSearchResult> results = new AtomicArray<>(2);\n        AtomicReference<AtomicArray<SearchPhaseResult>> responseRef = new AtomicReference<>();\n        results.set(0, newSearchResult(0, 1, new SearchShardTarget(\"node1\", new Index(\"test\", \"na\"), 0, null)));\n        results.set(1, newSearchResult(1, 2, new SearchShardTarget(\"node2\", new Index(\"test\", \"na\"), 0, null)));\n        results.get(0).termsStatistics(new Term[0], new TermStatistics[0]);\n        results.get(1).termsStatistics(new Term[0], new TermStatistics[0]);\n\n        SearchPhaseController controller = new SearchPhaseController(Settings.EMPTY,\n            (b) -> new InternalAggregation.ReduceContext(BigArrays.NON_RECYCLING_INSTANCE, null, b));\n        SearchTransportService searchTransportService = new SearchTransportService(\n            Settings.builder().put(\"cluster.remote.connect\", false).build(), null, null) {\n\n            @Override\n            public void sendExecuteQuery(Transport.Connection connection, QuerySearchRequest request, SearchTask task,\n                                         SearchActionListener<QuerySearchResult> listener) {\n                if (request.id() == 1) {\n                    QuerySearchResult queryResult = new QuerySearchResult(123, new SearchShardTarget(\"node1\", new Index(\"test\", \"na\"), 0,\n                        null));\n                    queryResult.topDocs(new TopDocsAndMaxScore(\n                            new TopDocs(new TotalHits(1, TotalHits.Relation.EQUAL_TO),\n                                    new ScoreDoc[] {new ScoreDoc(42, 1.0F)}), 2.0F), new DocValueFormat[0]);\n                    queryResult.size(2); \r\n                    listener.onResponse(queryResult);\n                } else if (request.id() == 2) {\n                    QuerySearchResult queryResult = new QuerySearchResult(123, new SearchShardTarget(\"node2\", new Index(\"test\", \"na\"), 0,\n                        null));\n                    queryResult.topDocs(new TopDocsAndMaxScore(\n                            new TopDocs(new TotalHits(1, TotalHits.Relation.EQUAL_TO), new ScoreDoc[] {new ScoreDoc(84, 2.0F)}), 2.0F),\n                            new DocValueFormat[0]);\n                    queryResult.size(2); \r\n                    listener.onResponse(queryResult);\n                } else {\n                    fail(\"no such request ID: \" + request.id());\n                }\n            }\n        };\n        MockSearchPhaseContext mockSearchPhaseContext = new MockSearchPhaseContext(2);\n        mockSearchPhaseContext.searchTransport = searchTransportService;\n        DfsQueryPhase phase = new DfsQueryPhase(results, controller,\n            (response) -> new SearchPhase(\"test\") {\n            @Override\n            public void run() throws IOException {\n                responseRef.set(response.results);\n            }\n        }, mockSearchPhaseContext);\n        assertEquals(\"dfs_query\", phase.getName());\n        phase.run();\n        mockSearchPhaseContext.assertNoFailure();\n        assertNotNull(responseRef.get());\n        assertNotNull(responseRef.get().get(0));\n        assertNull(responseRef.get().get(0).fetchResult());\n        assertEquals(1, responseRef.get().get(0).queryResult().topDocs().topDocs.totalHits.value);\n        assertEquals(42, responseRef.get().get(0).queryResult().topDocs().topDocs.scoreDocs[0].doc);\n        assertNotNull(responseRef.get().get(1));\n        assertNull(responseRef.get().get(1).fetchResult());\n        assertEquals(1, responseRef.get().get(1).queryResult().topDocs().topDocs.totalHits.value);\n        assertEquals(84, responseRef.get().get(1).queryResult().topDocs().topDocs.scoreDocs[0].doc);\n        assertTrue(mockSearchPhaseContext.releasedSearchContexts.isEmpty());\n        assertEquals(2, mockSearchPhaseContext.numSuccess.get());\n    }\n","date":"2018-09-07 17:59:10","endLine":114,"groupId":"63166","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testDfsWith2Shards","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/fe/9be2a06e27f9d96ded75fdd366845ee6fb0474.src","preCode":"    public void testDfsWith2Shards() throws IOException {\n        AtomicArray<DfsSearchResult> results = new AtomicArray<>(2);\n        AtomicReference<AtomicArray<SearchPhaseResult>> responseRef = new AtomicReference<>();\n        results.set(0, newSearchResult(0, 1, new SearchShardTarget(\"node1\", new Index(\"test\", \"na\"), 0, null)));\n        results.set(1, newSearchResult(1, 2, new SearchShardTarget(\"node2\", new Index(\"test\", \"na\"), 0, null)));\n        results.get(0).termsStatistics(new Term[0], new TermStatistics[0]);\n        results.get(1).termsStatistics(new Term[0], new TermStatistics[0]);\n\n        SearchPhaseController controller = new SearchPhaseController(Settings.EMPTY,\n            (b) -> new InternalAggregation.ReduceContext(BigArrays.NON_RECYCLING_INSTANCE, null, b));\n        SearchTransportService searchTransportService = new SearchTransportService(\n            Settings.builder().put(\"cluster.remote.connect\", false).build(), null, null) {\n\n            @Override\n            public void sendExecuteQuery(Transport.Connection connection, QuerySearchRequest request, SearchTask task,\n                                         SearchActionListener<QuerySearchResult> listener) {\n                if (request.id() == 1) {\n                    QuerySearchResult queryResult = new QuerySearchResult(123, new SearchShardTarget(\"node1\", new Index(\"test\", \"na\"), 0,\n                        null));\n                    queryResult.topDocs(new TopDocs(1, new ScoreDoc[] {new ScoreDoc(42, 1.0F)}, 2.0F), new DocValueFormat[0]);\n                    queryResult.size(2); \r\n                    listener.onResponse(queryResult);\n                } else if (request.id() == 2) {\n                    QuerySearchResult queryResult = new QuerySearchResult(123, new SearchShardTarget(\"node2\", new Index(\"test\", \"na\"), 0,\n                        null));\n                    queryResult.topDocs(new TopDocs(1, new ScoreDoc[] {new ScoreDoc(84, 2.0F)}, 2.0F), new DocValueFormat[0]);\n                    queryResult.size(2); \r\n                    listener.onResponse(queryResult);\n                } else {\n                    fail(\"no such request ID: \" + request.id());\n                }\n            }\n        };\n        MockSearchPhaseContext mockSearchPhaseContext = new MockSearchPhaseContext(2);\n        mockSearchPhaseContext.searchTransport = searchTransportService;\n        DfsQueryPhase phase = new DfsQueryPhase(results, controller,\n            (response) -> new SearchPhase(\"test\") {\n            @Override\n            public void run() throws IOException {\n                responseRef.set(response.results);\n            }\n        }, mockSearchPhaseContext);\n        assertEquals(\"dfs_query\", phase.getName());\n        phase.run();\n        mockSearchPhaseContext.assertNoFailure();\n        assertNotNull(responseRef.get());\n        assertNotNull(responseRef.get().get(0));\n        assertNull(responseRef.get().get(0).fetchResult());\n        assertEquals(1, responseRef.get().get(0).queryResult().topDocs().totalHits);\n        assertEquals(42, responseRef.get().get(0).queryResult().topDocs().scoreDocs[0].doc);\n        assertNotNull(responseRef.get().get(1));\n        assertNull(responseRef.get().get(1).fetchResult());\n        assertEquals(1, responseRef.get().get(1).queryResult().topDocs().totalHits);\n        assertEquals(84, responseRef.get().get(1).queryResult().topDocs().scoreDocs[0].doc);\n        assertTrue(mockSearchPhaseContext.releasedSearchContexts.isEmpty());\n        assertEquals(2, mockSearchPhaseContext.numSuccess.get());\n    }\n","realPath":"server/src/test/java/org/elasticsearch/action/search/DfsQueryPhaseTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":54,"status":"M"},{"authorDate":"2018-09-07 17:59:10","commitOrder":3,"curCode":"    public void testFailPhaseOnException() throws IOException {\n        AtomicArray<DfsSearchResult> results = new AtomicArray<>(2);\n        AtomicReference<AtomicArray<SearchPhaseResult>> responseRef = new AtomicReference<>();\n        results.set(0, newSearchResult(0, 1, new SearchShardTarget(\"node1\", new Index(\"test\", \"na\"), 0, null)));\n        results.set(1, newSearchResult(1, 2, new SearchShardTarget(\"node2\", new Index(\"test\", \"na\"), 0, null)));\n        results.get(0).termsStatistics(new Term[0], new TermStatistics[0]);\n        results.get(1).termsStatistics(new Term[0], new TermStatistics[0]);\n\n        SearchPhaseController controller = new SearchPhaseController(Settings.EMPTY,\n            (b) -> new InternalAggregation.ReduceContext(BigArrays.NON_RECYCLING_INSTANCE, null, b));\n        SearchTransportService searchTransportService = new SearchTransportService(\n            Settings.builder().put(\"cluster.remote.connect\", false).build(), null, null) {\n\n            @Override\n            public void sendExecuteQuery(Transport.Connection connection, QuerySearchRequest request, SearchTask task,\n                                         SearchActionListener<QuerySearchResult> listener) {\n                if (request.id() == 1) {\n                    QuerySearchResult queryResult = new QuerySearchResult(123, new SearchShardTarget(\"node1\", new Index(\"test\", \"na\"), 0,\n                        null));\n                    queryResult.topDocs(new TopDocsAndMaxScore(\n                            new TopDocs(new TotalHits(1, TotalHits.Relation.EQUAL_TO),\n                                    new ScoreDoc[] {new ScoreDoc(42, 1.0F)}), 2.0F), new DocValueFormat[0]);\n                    queryResult.size(2); \r\n                    listener.onResponse(queryResult);\n                } else if (request.id() == 2) {\n                   throw new UncheckedIOException(new MockDirectoryWrapper.FakeIOException());\n                } else {\n                    fail(\"no such request ID: \" + request.id());\n                }\n            }\n        };\n        MockSearchPhaseContext mockSearchPhaseContext = new MockSearchPhaseContext(2);\n        mockSearchPhaseContext.searchTransport = searchTransportService;\n        DfsQueryPhase phase = new DfsQueryPhase(results, controller,\n            (response) -> new SearchPhase(\"test\") {\n                @Override\n                public void run() throws IOException {\n                    responseRef.set(response.results);\n                }\n            }, mockSearchPhaseContext);\n        assertEquals(\"dfs_query\", phase.getName());\n        expectThrows(UncheckedIOException.class, () -> phase.run());\n        assertTrue(mockSearchPhaseContext.releasedSearchContexts.isEmpty()); \r\n    }\n","date":"2018-09-07 17:59:10","endLine":218,"groupId":"63172","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testFailPhaseOnException","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/fe/9be2a06e27f9d96ded75fdd366845ee6fb0474.src","preCode":"    public void testFailPhaseOnException() throws IOException {\n        AtomicArray<DfsSearchResult> results = new AtomicArray<>(2);\n        AtomicReference<AtomicArray<SearchPhaseResult>> responseRef = new AtomicReference<>();\n        results.set(0, newSearchResult(0, 1, new SearchShardTarget(\"node1\", new Index(\"test\", \"na\"), 0, null)));\n        results.set(1, newSearchResult(1, 2, new SearchShardTarget(\"node2\", new Index(\"test\", \"na\"), 0, null)));\n        results.get(0).termsStatistics(new Term[0], new TermStatistics[0]);\n        results.get(1).termsStatistics(new Term[0], new TermStatistics[0]);\n\n        SearchPhaseController controller = new SearchPhaseController(Settings.EMPTY,\n            (b) -> new InternalAggregation.ReduceContext(BigArrays.NON_RECYCLING_INSTANCE, null, b));\n        SearchTransportService searchTransportService = new SearchTransportService(\n            Settings.builder().put(\"cluster.remote.connect\", false).build(), null, null) {\n\n            @Override\n            public void sendExecuteQuery(Transport.Connection connection, QuerySearchRequest request, SearchTask task,\n                                         SearchActionListener<QuerySearchResult> listener) {\n                if (request.id() == 1) {\n                    QuerySearchResult queryResult = new QuerySearchResult(123, new SearchShardTarget(\"node1\", new Index(\"test\", \"na\"), 0,\n                        null));\n                    queryResult.topDocs(new TopDocs(1, new ScoreDoc[] {new ScoreDoc(42, 1.0F)}, 2.0F), new DocValueFormat[0]);\n                    queryResult.size(2); \r\n                    listener.onResponse(queryResult);\n                } else if (request.id() == 2) {\n                   throw new UncheckedIOException(new MockDirectoryWrapper.FakeIOException());\n                } else {\n                    fail(\"no such request ID: \" + request.id());\n                }\n            }\n        };\n        MockSearchPhaseContext mockSearchPhaseContext = new MockSearchPhaseContext(2);\n        mockSearchPhaseContext.searchTransport = searchTransportService;\n        DfsQueryPhase phase = new DfsQueryPhase(results, controller,\n            (response) -> new SearchPhase(\"test\") {\n                @Override\n                public void run() throws IOException {\n                    responseRef.set(response.results);\n                }\n            }, mockSearchPhaseContext);\n        assertEquals(\"dfs_query\", phase.getName());\n        expectThrows(UncheckedIOException.class, () -> phase.run());\n        assertTrue(mockSearchPhaseContext.releasedSearchContexts.isEmpty()); \r\n    }\n","realPath":"server/src/test/java/org/elasticsearch/action/search/DfsQueryPhaseTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":175,"status":"M"}],"commitId":"017ffe5d127ce0fb33feb8fc4e5fededb8cbfda1","commitMessage":"@@@Merge branch 'master' into index-lifecycle\n","date":"2018-09-07 17:59:10","modifiedFileCount":"370","status":"M","submitter":"Colin Goodheart-Smithe"},{"authorTime":"2018-11-02 00:05:41","codes":[{"authorDate":"2018-11-02 00:05:41","commitOrder":4,"curCode":"    public void testDfsWith2Shards() throws IOException {\n        AtomicArray<DfsSearchResult> results = new AtomicArray<>(2);\n        AtomicReference<AtomicArray<SearchPhaseResult>> responseRef = new AtomicReference<>();\n        results.set(0, newSearchResult(0, 1, new SearchShardTarget(\"node1\", new Index(\"test\", \"na\"), 0, null)));\n        results.set(1, newSearchResult(1, 2, new SearchShardTarget(\"node2\", new Index(\"test\", \"na\"), 0, null)));\n        results.get(0).termsStatistics(new Term[0], new TermStatistics[0]);\n        results.get(1).termsStatistics(new Term[0], new TermStatistics[0]);\n\n        SearchPhaseController controller = new SearchPhaseController(\n            (b) -> new InternalAggregation.ReduceContext(BigArrays.NON_RECYCLING_INSTANCE, null, b));\n        SearchTransportService searchTransportService = new SearchTransportService(null, null) {\n            @Override\n            public void sendExecuteQuery(Transport.Connection connection, QuerySearchRequest request, SearchTask task,\n                                         SearchActionListener<QuerySearchResult> listener) {\n                if (request.id() == 1) {\n                    QuerySearchResult queryResult = new QuerySearchResult(123, new SearchShardTarget(\"node1\", new Index(\"test\", \"na\"), 0,\n                        null));\n                    queryResult.topDocs(new TopDocsAndMaxScore(\n                            new TopDocs(new TotalHits(1, TotalHits.Relation.EQUAL_TO),\n                                    new ScoreDoc[] {new ScoreDoc(42, 1.0F)}), 2.0F), new DocValueFormat[0]);\n                    queryResult.size(2); \r\n                    listener.onResponse(queryResult);\n                } else if (request.id() == 2) {\n                    QuerySearchResult queryResult = new QuerySearchResult(123, new SearchShardTarget(\"node2\", new Index(\"test\", \"na\"), 0,\n                        null));\n                    queryResult.topDocs(new TopDocsAndMaxScore(\n                            new TopDocs(new TotalHits(1, TotalHits.Relation.EQUAL_TO), new ScoreDoc[] {new ScoreDoc(84, 2.0F)}), 2.0F),\n                            new DocValueFormat[0]);\n                    queryResult.size(2); \r\n                    listener.onResponse(queryResult);\n                } else {\n                    fail(\"no such request ID: \" + request.id());\n                }\n            }\n        };\n        MockSearchPhaseContext mockSearchPhaseContext = new MockSearchPhaseContext(2);\n        mockSearchPhaseContext.searchTransport = searchTransportService;\n        DfsQueryPhase phase = new DfsQueryPhase(results, controller,\n            (response) -> new SearchPhase(\"test\") {\n            @Override\n            public void run() throws IOException {\n                responseRef.set(response.results);\n            }\n        }, mockSearchPhaseContext);\n        assertEquals(\"dfs_query\", phase.getName());\n        phase.run();\n        mockSearchPhaseContext.assertNoFailure();\n        assertNotNull(responseRef.get());\n        assertNotNull(responseRef.get().get(0));\n        assertNull(responseRef.get().get(0).fetchResult());\n        assertEquals(1, responseRef.get().get(0).queryResult().topDocs().topDocs.totalHits.value);\n        assertEquals(42, responseRef.get().get(0).queryResult().topDocs().topDocs.scoreDocs[0].doc);\n        assertNotNull(responseRef.get().get(1));\n        assertNull(responseRef.get().get(1).fetchResult());\n        assertEquals(1, responseRef.get().get(1).queryResult().topDocs().topDocs.totalHits.value);\n        assertEquals(84, responseRef.get().get(1).queryResult().topDocs().topDocs.scoreDocs[0].doc);\n        assertTrue(mockSearchPhaseContext.releasedSearchContexts.isEmpty());\n        assertEquals(2, mockSearchPhaseContext.numSuccess.get());\n    }\n","date":"2018-11-02 01:13:02","endLine":111,"groupId":"63166","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"testDfsWith2Shards","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/c7/a3137230405b2a7344a5688942586130aa5413.src","preCode":"    public void testDfsWith2Shards() throws IOException {\n        AtomicArray<DfsSearchResult> results = new AtomicArray<>(2);\n        AtomicReference<AtomicArray<SearchPhaseResult>> responseRef = new AtomicReference<>();\n        results.set(0, newSearchResult(0, 1, new SearchShardTarget(\"node1\", new Index(\"test\", \"na\"), 0, null)));\n        results.set(1, newSearchResult(1, 2, new SearchShardTarget(\"node2\", new Index(\"test\", \"na\"), 0, null)));\n        results.get(0).termsStatistics(new Term[0], new TermStatistics[0]);\n        results.get(1).termsStatistics(new Term[0], new TermStatistics[0]);\n\n        SearchPhaseController controller = new SearchPhaseController(Settings.EMPTY,\n            (b) -> new InternalAggregation.ReduceContext(BigArrays.NON_RECYCLING_INSTANCE, null, b));\n        SearchTransportService searchTransportService = new SearchTransportService(\n            Settings.builder().put(\"cluster.remote.connect\", false).build(), null, null) {\n\n            @Override\n            public void sendExecuteQuery(Transport.Connection connection, QuerySearchRequest request, SearchTask task,\n                                         SearchActionListener<QuerySearchResult> listener) {\n                if (request.id() == 1) {\n                    QuerySearchResult queryResult = new QuerySearchResult(123, new SearchShardTarget(\"node1\", new Index(\"test\", \"na\"), 0,\n                        null));\n                    queryResult.topDocs(new TopDocsAndMaxScore(\n                            new TopDocs(new TotalHits(1, TotalHits.Relation.EQUAL_TO),\n                                    new ScoreDoc[] {new ScoreDoc(42, 1.0F)}), 2.0F), new DocValueFormat[0]);\n                    queryResult.size(2); \r\n                    listener.onResponse(queryResult);\n                } else if (request.id() == 2) {\n                    QuerySearchResult queryResult = new QuerySearchResult(123, new SearchShardTarget(\"node2\", new Index(\"test\", \"na\"), 0,\n                        null));\n                    queryResult.topDocs(new TopDocsAndMaxScore(\n                            new TopDocs(new TotalHits(1, TotalHits.Relation.EQUAL_TO), new ScoreDoc[] {new ScoreDoc(84, 2.0F)}), 2.0F),\n                            new DocValueFormat[0]);\n                    queryResult.size(2); \r\n                    listener.onResponse(queryResult);\n                } else {\n                    fail(\"no such request ID: \" + request.id());\n                }\n            }\n        };\n        MockSearchPhaseContext mockSearchPhaseContext = new MockSearchPhaseContext(2);\n        mockSearchPhaseContext.searchTransport = searchTransportService;\n        DfsQueryPhase phase = new DfsQueryPhase(results, controller,\n            (response) -> new SearchPhase(\"test\") {\n            @Override\n            public void run() throws IOException {\n                responseRef.set(response.results);\n            }\n        }, mockSearchPhaseContext);\n        assertEquals(\"dfs_query\", phase.getName());\n        phase.run();\n        mockSearchPhaseContext.assertNoFailure();\n        assertNotNull(responseRef.get());\n        assertNotNull(responseRef.get().get(0));\n        assertNull(responseRef.get().get(0).fetchResult());\n        assertEquals(1, responseRef.get().get(0).queryResult().topDocs().topDocs.totalHits.value);\n        assertEquals(42, responseRef.get().get(0).queryResult().topDocs().topDocs.scoreDocs[0].doc);\n        assertNotNull(responseRef.get().get(1));\n        assertNull(responseRef.get().get(1).fetchResult());\n        assertEquals(1, responseRef.get().get(1).queryResult().topDocs().topDocs.totalHits.value);\n        assertEquals(84, responseRef.get().get(1).queryResult().topDocs().topDocs.scoreDocs[0].doc);\n        assertTrue(mockSearchPhaseContext.releasedSearchContexts.isEmpty());\n        assertEquals(2, mockSearchPhaseContext.numSuccess.get());\n    }\n","realPath":"server/src/test/java/org/elasticsearch/action/search/DfsQueryPhaseTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":53,"status":"M"},{"authorDate":"2018-11-02 00:05:41","commitOrder":4,"curCode":"    public void testFailPhaseOnException() throws IOException {\n        AtomicArray<DfsSearchResult> results = new AtomicArray<>(2);\n        AtomicReference<AtomicArray<SearchPhaseResult>> responseRef = new AtomicReference<>();\n        results.set(0, newSearchResult(0, 1, new SearchShardTarget(\"node1\", new Index(\"test\", \"na\"), 0, null)));\n        results.set(1, newSearchResult(1, 2, new SearchShardTarget(\"node2\", new Index(\"test\", \"na\"), 0, null)));\n        results.get(0).termsStatistics(new Term[0], new TermStatistics[0]);\n        results.get(1).termsStatistics(new Term[0], new TermStatistics[0]);\n\n        SearchPhaseController controller = new SearchPhaseController(\n            (b) -> new InternalAggregation.ReduceContext(BigArrays.NON_RECYCLING_INSTANCE, null, b));\n        SearchTransportService searchTransportService = new SearchTransportService(null, null) {\n            @Override\n            public void sendExecuteQuery(Transport.Connection connection, QuerySearchRequest request, SearchTask task,\n                                         SearchActionListener<QuerySearchResult> listener) {\n                if (request.id() == 1) {\n                    QuerySearchResult queryResult = new QuerySearchResult(123, new SearchShardTarget(\"node1\", new Index(\"test\", \"na\"), 0,\n                        null));\n                    queryResult.topDocs(new TopDocsAndMaxScore(\n                            new TopDocs(new TotalHits(1, TotalHits.Relation.EQUAL_TO),\n                                    new ScoreDoc[] {new ScoreDoc(42, 1.0F)}), 2.0F), new DocValueFormat[0]);\n                    queryResult.size(2); \r\n                    listener.onResponse(queryResult);\n                } else if (request.id() == 2) {\n                   throw new UncheckedIOException(new MockDirectoryWrapper.FakeIOException());\n                } else {\n                    fail(\"no such request ID: \" + request.id());\n                }\n            }\n        };\n        MockSearchPhaseContext mockSearchPhaseContext = new MockSearchPhaseContext(2);\n        mockSearchPhaseContext.searchTransport = searchTransportService;\n        DfsQueryPhase phase = new DfsQueryPhase(results, controller,\n            (response) -> new SearchPhase(\"test\") {\n                @Override\n                public void run() throws IOException {\n                    responseRef.set(response.results);\n                }\n            }, mockSearchPhaseContext);\n        assertEquals(\"dfs_query\", phase.getName());\n        expectThrows(UncheckedIOException.class, () -> phase.run());\n        assertTrue(mockSearchPhaseContext.releasedSearchContexts.isEmpty()); \r\n    }\n","date":"2018-11-02 01:13:02","endLine":211,"groupId":"63172","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"testFailPhaseOnException","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/c7/a3137230405b2a7344a5688942586130aa5413.src","preCode":"    public void testFailPhaseOnException() throws IOException {\n        AtomicArray<DfsSearchResult> results = new AtomicArray<>(2);\n        AtomicReference<AtomicArray<SearchPhaseResult>> responseRef = new AtomicReference<>();\n        results.set(0, newSearchResult(0, 1, new SearchShardTarget(\"node1\", new Index(\"test\", \"na\"), 0, null)));\n        results.set(1, newSearchResult(1, 2, new SearchShardTarget(\"node2\", new Index(\"test\", \"na\"), 0, null)));\n        results.get(0).termsStatistics(new Term[0], new TermStatistics[0]);\n        results.get(1).termsStatistics(new Term[0], new TermStatistics[0]);\n\n        SearchPhaseController controller = new SearchPhaseController(Settings.EMPTY,\n            (b) -> new InternalAggregation.ReduceContext(BigArrays.NON_RECYCLING_INSTANCE, null, b));\n        SearchTransportService searchTransportService = new SearchTransportService(\n            Settings.builder().put(\"cluster.remote.connect\", false).build(), null, null) {\n\n            @Override\n            public void sendExecuteQuery(Transport.Connection connection, QuerySearchRequest request, SearchTask task,\n                                         SearchActionListener<QuerySearchResult> listener) {\n                if (request.id() == 1) {\n                    QuerySearchResult queryResult = new QuerySearchResult(123, new SearchShardTarget(\"node1\", new Index(\"test\", \"na\"), 0,\n                        null));\n                    queryResult.topDocs(new TopDocsAndMaxScore(\n                            new TopDocs(new TotalHits(1, TotalHits.Relation.EQUAL_TO),\n                                    new ScoreDoc[] {new ScoreDoc(42, 1.0F)}), 2.0F), new DocValueFormat[0]);\n                    queryResult.size(2); \r\n                    listener.onResponse(queryResult);\n                } else if (request.id() == 2) {\n                   throw new UncheckedIOException(new MockDirectoryWrapper.FakeIOException());\n                } else {\n                    fail(\"no such request ID: \" + request.id());\n                }\n            }\n        };\n        MockSearchPhaseContext mockSearchPhaseContext = new MockSearchPhaseContext(2);\n        mockSearchPhaseContext.searchTransport = searchTransportService;\n        DfsQueryPhase phase = new DfsQueryPhase(results, controller,\n            (response) -> new SearchPhase(\"test\") {\n                @Override\n                public void run() throws IOException {\n                    responseRef.set(response.results);\n                }\n            }, mockSearchPhaseContext);\n        assertEquals(\"dfs_query\", phase.getName());\n        expectThrows(UncheckedIOException.class, () -> phase.run());\n        assertTrue(mockSearchPhaseContext.releasedSearchContexts.isEmpty()); \r\n    }\n","realPath":"server/src/test/java/org/elasticsearch/action/search/DfsQueryPhaseTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":170,"status":"M"}],"commitId":"c3cf7dd305b3d4636405c292659dbff05307f146","commitMessage":"@@@Merge remote-tracking branch 'upstream/master' into index-lifecycle\n","date":"2018-11-02 01:13:02","modifiedFileCount":"456","status":"M","submitter":"Tal Levy"},{"authorTime":"2019-01-29 21:58:11","codes":[{"authorDate":"2019-01-29 21:58:11","commitOrder":5,"curCode":"    public void testDfsWith2Shards() throws IOException {\n        AtomicArray<DfsSearchResult> results = new AtomicArray<>(2);\n        AtomicReference<AtomicArray<SearchPhaseResult>> responseRef = new AtomicReference<>();\n        results.set(0, newSearchResult(0, 1, new SearchShardTarget(\"node1\", new ShardId(\"test\", \"na\", 0), null, OriginalIndices.NONE)));\n        results.set(1, newSearchResult(1, 2, new SearchShardTarget(\"node2\", new ShardId(\"test\", \"na\", 0), null, OriginalIndices.NONE)));\n        results.get(0).termsStatistics(new Term[0], new TermStatistics[0]);\n        results.get(1).termsStatistics(new Term[0], new TermStatistics[0]);\n\n        SearchPhaseController controller = new SearchPhaseController(\n            (b) -> new InternalAggregation.ReduceContext(BigArrays.NON_RECYCLING_INSTANCE, null, b));\n        SearchTransportService searchTransportService = new SearchTransportService(null, null) {\n            @Override\n            public void sendExecuteQuery(Transport.Connection connection, QuerySearchRequest request, SearchTask task,\n                                         SearchActionListener<QuerySearchResult> listener) {\n                if (request.id() == 1) {\n                    QuerySearchResult queryResult = new QuerySearchResult(123, new SearchShardTarget(\"node1\", new ShardId(\"test\", \"na\", 0),\n                        null, OriginalIndices.NONE));\n                    queryResult.topDocs(new TopDocsAndMaxScore(\n                            new TopDocs(new TotalHits(1, TotalHits.Relation.EQUAL_TO),\n                                    new ScoreDoc[] {new ScoreDoc(42, 1.0F)}), 2.0F), new DocValueFormat[0]);\n                    queryResult.size(2); \r\n                    listener.onResponse(queryResult);\n                } else if (request.id() == 2) {\n                    QuerySearchResult queryResult = new QuerySearchResult(123, new SearchShardTarget(\"node2\", new ShardId(\"test\", \"na\", 0),\n                        null, OriginalIndices.NONE));\n                    queryResult.topDocs(new TopDocsAndMaxScore(\n                            new TopDocs(new TotalHits(1, TotalHits.Relation.EQUAL_TO), new ScoreDoc[] {new ScoreDoc(84, 2.0F)}), 2.0F),\n                            new DocValueFormat[0]);\n                    queryResult.size(2); \r\n                    listener.onResponse(queryResult);\n                } else {\n                    fail(\"no such request ID: \" + request.id());\n                }\n            }\n        };\n        MockSearchPhaseContext mockSearchPhaseContext = new MockSearchPhaseContext(2);\n        mockSearchPhaseContext.searchTransport = searchTransportService;\n        DfsQueryPhase phase = new DfsQueryPhase(results, controller,\n            (response) -> new SearchPhase(\"test\") {\n            @Override\n            public void run() throws IOException {\n                responseRef.set(response.results);\n            }\n        }, mockSearchPhaseContext);\n        assertEquals(\"dfs_query\", phase.getName());\n        phase.run();\n        mockSearchPhaseContext.assertNoFailure();\n        assertNotNull(responseRef.get());\n        assertNotNull(responseRef.get().get(0));\n        assertNull(responseRef.get().get(0).fetchResult());\n        assertEquals(1, responseRef.get().get(0).queryResult().topDocs().topDocs.totalHits.value);\n        assertEquals(42, responseRef.get().get(0).queryResult().topDocs().topDocs.scoreDocs[0].doc);\n        assertNotNull(responseRef.get().get(1));\n        assertNull(responseRef.get().get(1).fetchResult());\n        assertEquals(1, responseRef.get().get(1).queryResult().topDocs().topDocs.totalHits.value);\n        assertEquals(84, responseRef.get().get(1).queryResult().topDocs().topDocs.scoreDocs[0].doc);\n        assertTrue(mockSearchPhaseContext.releasedSearchContexts.isEmpty());\n        assertEquals(2, mockSearchPhaseContext.numSuccess.get());\n    }\n","date":"2019-01-29 21:58:11","endLine":112,"groupId":"0","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"testDfsWith2Shards","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/8a/8e28e15f20d895c60d90a0914006735b2cb802.src","preCode":"    public void testDfsWith2Shards() throws IOException {\n        AtomicArray<DfsSearchResult> results = new AtomicArray<>(2);\n        AtomicReference<AtomicArray<SearchPhaseResult>> responseRef = new AtomicReference<>();\n        results.set(0, newSearchResult(0, 1, new SearchShardTarget(\"node1\", new Index(\"test\", \"na\"), 0, null)));\n        results.set(1, newSearchResult(1, 2, new SearchShardTarget(\"node2\", new Index(\"test\", \"na\"), 0, null)));\n        results.get(0).termsStatistics(new Term[0], new TermStatistics[0]);\n        results.get(1).termsStatistics(new Term[0], new TermStatistics[0]);\n\n        SearchPhaseController controller = new SearchPhaseController(\n            (b) -> new InternalAggregation.ReduceContext(BigArrays.NON_RECYCLING_INSTANCE, null, b));\n        SearchTransportService searchTransportService = new SearchTransportService(null, null) {\n            @Override\n            public void sendExecuteQuery(Transport.Connection connection, QuerySearchRequest request, SearchTask task,\n                                         SearchActionListener<QuerySearchResult> listener) {\n                if (request.id() == 1) {\n                    QuerySearchResult queryResult = new QuerySearchResult(123, new SearchShardTarget(\"node1\", new Index(\"test\", \"na\"), 0,\n                        null));\n                    queryResult.topDocs(new TopDocsAndMaxScore(\n                            new TopDocs(new TotalHits(1, TotalHits.Relation.EQUAL_TO),\n                                    new ScoreDoc[] {new ScoreDoc(42, 1.0F)}), 2.0F), new DocValueFormat[0]);\n                    queryResult.size(2); \r\n                    listener.onResponse(queryResult);\n                } else if (request.id() == 2) {\n                    QuerySearchResult queryResult = new QuerySearchResult(123, new SearchShardTarget(\"node2\", new Index(\"test\", \"na\"), 0,\n                        null));\n                    queryResult.topDocs(new TopDocsAndMaxScore(\n                            new TopDocs(new TotalHits(1, TotalHits.Relation.EQUAL_TO), new ScoreDoc[] {new ScoreDoc(84, 2.0F)}), 2.0F),\n                            new DocValueFormat[0]);\n                    queryResult.size(2); \r\n                    listener.onResponse(queryResult);\n                } else {\n                    fail(\"no such request ID: \" + request.id());\n                }\n            }\n        };\n        MockSearchPhaseContext mockSearchPhaseContext = new MockSearchPhaseContext(2);\n        mockSearchPhaseContext.searchTransport = searchTransportService;\n        DfsQueryPhase phase = new DfsQueryPhase(results, controller,\n            (response) -> new SearchPhase(\"test\") {\n            @Override\n            public void run() throws IOException {\n                responseRef.set(response.results);\n            }\n        }, mockSearchPhaseContext);\n        assertEquals(\"dfs_query\", phase.getName());\n        phase.run();\n        mockSearchPhaseContext.assertNoFailure();\n        assertNotNull(responseRef.get());\n        assertNotNull(responseRef.get().get(0));\n        assertNull(responseRef.get().get(0).fetchResult());\n        assertEquals(1, responseRef.get().get(0).queryResult().topDocs().topDocs.totalHits.value);\n        assertEquals(42, responseRef.get().get(0).queryResult().topDocs().topDocs.scoreDocs[0].doc);\n        assertNotNull(responseRef.get().get(1));\n        assertNull(responseRef.get().get(1).fetchResult());\n        assertEquals(1, responseRef.get().get(1).queryResult().topDocs().topDocs.totalHits.value);\n        assertEquals(84, responseRef.get().get(1).queryResult().topDocs().topDocs.scoreDocs[0].doc);\n        assertTrue(mockSearchPhaseContext.releasedSearchContexts.isEmpty());\n        assertEquals(2, mockSearchPhaseContext.numSuccess.get());\n    }\n","realPath":"server/src/test/java/org/elasticsearch/action/search/DfsQueryPhaseTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":54,"status":"M"},{"authorDate":"2019-01-29 21:58:11","commitOrder":5,"curCode":"    public void testFailPhaseOnException() throws IOException {\n        AtomicArray<DfsSearchResult> results = new AtomicArray<>(2);\n        AtomicReference<AtomicArray<SearchPhaseResult>> responseRef = new AtomicReference<>();\n        results.set(0, newSearchResult(0, 1, new SearchShardTarget(\"node1\", new ShardId(\"test\", \"na\", 0), null, OriginalIndices.NONE)));\n        results.set(1, newSearchResult(1, 2, new SearchShardTarget(\"node2\", new ShardId(\"test\", \"na\", 0), null, OriginalIndices.NONE)));\n        results.get(0).termsStatistics(new Term[0], new TermStatistics[0]);\n        results.get(1).termsStatistics(new Term[0], new TermStatistics[0]);\n\n        SearchPhaseController controller = new SearchPhaseController(\n            (b) -> new InternalAggregation.ReduceContext(BigArrays.NON_RECYCLING_INSTANCE, null, b));\n        SearchTransportService searchTransportService = new SearchTransportService(null, null) {\n            @Override\n            public void sendExecuteQuery(Transport.Connection connection, QuerySearchRequest request, SearchTask task,\n                                         SearchActionListener<QuerySearchResult> listener) {\n                if (request.id() == 1) {\n                    QuerySearchResult queryResult = new QuerySearchResult(123, new SearchShardTarget(\"node1\", new ShardId(\"test\", \"na\", 0),\n                        null, OriginalIndices.NONE));\n                    queryResult.topDocs(new TopDocsAndMaxScore(\n                            new TopDocs(new TotalHits(1, TotalHits.Relation.EQUAL_TO),\n                                    new ScoreDoc[] {new ScoreDoc(42, 1.0F)}), 2.0F), new DocValueFormat[0]);\n                    queryResult.size(2); \r\n                    listener.onResponse(queryResult);\n                } else if (request.id() == 2) {\n                   throw new UncheckedIOException(new MockDirectoryWrapper.FakeIOException());\n                } else {\n                    fail(\"no such request ID: \" + request.id());\n                }\n            }\n        };\n        MockSearchPhaseContext mockSearchPhaseContext = new MockSearchPhaseContext(2);\n        mockSearchPhaseContext.searchTransport = searchTransportService;\n        DfsQueryPhase phase = new DfsQueryPhase(results, controller,\n            (response) -> new SearchPhase(\"test\") {\n                @Override\n                public void run() throws IOException {\n                    responseRef.set(response.results);\n                }\n            }, mockSearchPhaseContext);\n        assertEquals(\"dfs_query\", phase.getName());\n        expectThrows(UncheckedIOException.class, phase::run);\n        assertTrue(mockSearchPhaseContext.releasedSearchContexts.isEmpty()); \r\n    }\n","date":"2019-01-29 21:58:11","endLine":212,"groupId":"9282","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"testFailPhaseOnException","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/8a/8e28e15f20d895c60d90a0914006735b2cb802.src","preCode":"    public void testFailPhaseOnException() throws IOException {\n        AtomicArray<DfsSearchResult> results = new AtomicArray<>(2);\n        AtomicReference<AtomicArray<SearchPhaseResult>> responseRef = new AtomicReference<>();\n        results.set(0, newSearchResult(0, 1, new SearchShardTarget(\"node1\", new Index(\"test\", \"na\"), 0, null)));\n        results.set(1, newSearchResult(1, 2, new SearchShardTarget(\"node2\", new Index(\"test\", \"na\"), 0, null)));\n        results.get(0).termsStatistics(new Term[0], new TermStatistics[0]);\n        results.get(1).termsStatistics(new Term[0], new TermStatistics[0]);\n\n        SearchPhaseController controller = new SearchPhaseController(\n            (b) -> new InternalAggregation.ReduceContext(BigArrays.NON_RECYCLING_INSTANCE, null, b));\n        SearchTransportService searchTransportService = new SearchTransportService(null, null) {\n            @Override\n            public void sendExecuteQuery(Transport.Connection connection, QuerySearchRequest request, SearchTask task,\n                                         SearchActionListener<QuerySearchResult> listener) {\n                if (request.id() == 1) {\n                    QuerySearchResult queryResult = new QuerySearchResult(123, new SearchShardTarget(\"node1\", new Index(\"test\", \"na\"), 0,\n                        null));\n                    queryResult.topDocs(new TopDocsAndMaxScore(\n                            new TopDocs(new TotalHits(1, TotalHits.Relation.EQUAL_TO),\n                                    new ScoreDoc[] {new ScoreDoc(42, 1.0F)}), 2.0F), new DocValueFormat[0]);\n                    queryResult.size(2); \r\n                    listener.onResponse(queryResult);\n                } else if (request.id() == 2) {\n                   throw new UncheckedIOException(new MockDirectoryWrapper.FakeIOException());\n                } else {\n                    fail(\"no such request ID: \" + request.id());\n                }\n            }\n        };\n        MockSearchPhaseContext mockSearchPhaseContext = new MockSearchPhaseContext(2);\n        mockSearchPhaseContext.searchTransport = searchTransportService;\n        DfsQueryPhase phase = new DfsQueryPhase(results, controller,\n            (response) -> new SearchPhase(\"test\") {\n                @Override\n                public void run() throws IOException {\n                    responseRef.set(response.results);\n                }\n            }, mockSearchPhaseContext);\n        assertEquals(\"dfs_query\", phase.getName());\n        expectThrows(UncheckedIOException.class, () -> phase.run());\n        assertTrue(mockSearchPhaseContext.releasedSearchContexts.isEmpty()); \r\n    }\n","realPath":"server/src/test/java/org/elasticsearch/action/search/DfsQueryPhaseTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":171,"status":"M"}],"commitId":"2325fb9cb3530607475233e7c7281e5ff7241001","commitMessage":"@@@Remove test only SearchShardTarget constructor (#37912)\n\nRemove SearchShardTarget test only constructor and replace all the usages with calls to the other constructor that accepts a ShardId.","date":"2019-01-29 21:58:11","modifiedFileCount":"21","status":"M","submitter":"Luca Cavanna"},{"authorTime":"2020-03-09 23:59:30","codes":[{"authorDate":"2020-03-09 23:59:30","commitOrder":6,"curCode":"    public void testDfsWith2Shards() throws IOException {\n        AtomicArray<DfsSearchResult> results = new AtomicArray<>(2);\n        AtomicReference<AtomicArray<SearchPhaseResult>> responseRef = new AtomicReference<>();\n        results.set(0, newSearchResult(0, new SearchContextId(UUIDs.randomBase64UUID(), 1),\n            new SearchShardTarget(\"node1\", new ShardId(\"test\", \"na\", 0), null, OriginalIndices.NONE)));\n        results.set(1, newSearchResult(1, new SearchContextId(UUIDs.randomBase64UUID(), 2),\n            new SearchShardTarget(\"node2\", new ShardId(\"test\", \"na\", 0), null, OriginalIndices.NONE)));\n        results.get(0).termsStatistics(new Term[0], new TermStatistics[0]);\n        results.get(1).termsStatistics(new Term[0], new TermStatistics[0]);\n\n        SearchPhaseController controller = new SearchPhaseController(\n            (b) -> new InternalAggregation.ReduceContext(BigArrays.NON_RECYCLING_INSTANCE, null, b));\n        SearchTransportService searchTransportService = new SearchTransportService(null, null) {\n            @Override\n            public void sendExecuteQuery(Transport.Connection connection, QuerySearchRequest request, SearchTask task,\n                                         SearchActionListener<QuerySearchResult> listener) {\n                if (request.contextId().getId() == 1) {\n                    QuerySearchResult queryResult = new QuerySearchResult(new SearchContextId(UUIDs.randomBase64UUID(), 123),\n                        new SearchShardTarget(\"node1\", new ShardId(\"test\", \"na\", 0), null, OriginalIndices.NONE));\n                    queryResult.topDocs(new TopDocsAndMaxScore(\n                            new TopDocs(new TotalHits(1, TotalHits.Relation.EQUAL_TO),\n                                    new ScoreDoc[] {new ScoreDoc(42, 1.0F)}), 2.0F), new DocValueFormat[0]);\n                    queryResult.size(2); \r\n                    listener.onResponse(queryResult);\n                } else if (request.contextId().getId() == 2) {\n                    QuerySearchResult queryResult = new QuerySearchResult(new SearchContextId(UUIDs.randomBase64UUID(), 123),\n                        new SearchShardTarget(\"node2\", new ShardId(\"test\", \"na\", 0), null, OriginalIndices.NONE));\n                    queryResult.topDocs(new TopDocsAndMaxScore(\n                            new TopDocs(new TotalHits(1, TotalHits.Relation.EQUAL_TO), new ScoreDoc[] {new ScoreDoc(84, 2.0F)}), 2.0F),\n                            new DocValueFormat[0]);\n                    queryResult.size(2); \r\n                    listener.onResponse(queryResult);\n                } else {\n                    fail(\"no such request ID: \" + request.contextId());\n                }\n            }\n        };\n        MockSearchPhaseContext mockSearchPhaseContext = new MockSearchPhaseContext(2);\n        mockSearchPhaseContext.searchTransport = searchTransportService;\n        DfsQueryPhase phase = new DfsQueryPhase(results, controller,\n            (response) -> new SearchPhase(\"test\") {\n            @Override\n            public void run() throws IOException {\n                responseRef.set(response.results);\n            }\n        }, mockSearchPhaseContext);\n        assertEquals(\"dfs_query\", phase.getName());\n        phase.run();\n        mockSearchPhaseContext.assertNoFailure();\n        assertNotNull(responseRef.get());\n        assertNotNull(responseRef.get().get(0));\n        assertNull(responseRef.get().get(0).fetchResult());\n        assertEquals(1, responseRef.get().get(0).queryResult().topDocs().topDocs.totalHits.value);\n        assertEquals(42, responseRef.get().get(0).queryResult().topDocs().topDocs.scoreDocs[0].doc);\n        assertNotNull(responseRef.get().get(1));\n        assertNull(responseRef.get().get(1).fetchResult());\n        assertEquals(1, responseRef.get().get(1).queryResult().topDocs().topDocs.totalHits.value);\n        assertEquals(84, responseRef.get().get(1).queryResult().topDocs().topDocs.scoreDocs[0].doc);\n        assertTrue(mockSearchPhaseContext.releasedSearchContexts.isEmpty());\n        assertEquals(2, mockSearchPhaseContext.numSuccess.get());\n    }\n","date":"2020-03-09 23:59:30","endLine":116,"groupId":"15397","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"testDfsWith2Shards","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/a2/496c19d2a9ff23cd3ce7d1b4551d863e1a234d.src","preCode":"    public void testDfsWith2Shards() throws IOException {\n        AtomicArray<DfsSearchResult> results = new AtomicArray<>(2);\n        AtomicReference<AtomicArray<SearchPhaseResult>> responseRef = new AtomicReference<>();\n        results.set(0, newSearchResult(0, 1, new SearchShardTarget(\"node1\", new ShardId(\"test\", \"na\", 0), null, OriginalIndices.NONE)));\n        results.set(1, newSearchResult(1, 2, new SearchShardTarget(\"node2\", new ShardId(\"test\", \"na\", 0), null, OriginalIndices.NONE)));\n        results.get(0).termsStatistics(new Term[0], new TermStatistics[0]);\n        results.get(1).termsStatistics(new Term[0], new TermStatistics[0]);\n\n        SearchPhaseController controller = new SearchPhaseController(\n            (b) -> new InternalAggregation.ReduceContext(BigArrays.NON_RECYCLING_INSTANCE, null, b));\n        SearchTransportService searchTransportService = new SearchTransportService(null, null) {\n            @Override\n            public void sendExecuteQuery(Transport.Connection connection, QuerySearchRequest request, SearchTask task,\n                                         SearchActionListener<QuerySearchResult> listener) {\n                if (request.id() == 1) {\n                    QuerySearchResult queryResult = new QuerySearchResult(123, new SearchShardTarget(\"node1\", new ShardId(\"test\", \"na\", 0),\n                        null, OriginalIndices.NONE));\n                    queryResult.topDocs(new TopDocsAndMaxScore(\n                            new TopDocs(new TotalHits(1, TotalHits.Relation.EQUAL_TO),\n                                    new ScoreDoc[] {new ScoreDoc(42, 1.0F)}), 2.0F), new DocValueFormat[0]);\n                    queryResult.size(2); \r\n                    listener.onResponse(queryResult);\n                } else if (request.id() == 2) {\n                    QuerySearchResult queryResult = new QuerySearchResult(123, new SearchShardTarget(\"node2\", new ShardId(\"test\", \"na\", 0),\n                        null, OriginalIndices.NONE));\n                    queryResult.topDocs(new TopDocsAndMaxScore(\n                            new TopDocs(new TotalHits(1, TotalHits.Relation.EQUAL_TO), new ScoreDoc[] {new ScoreDoc(84, 2.0F)}), 2.0F),\n                            new DocValueFormat[0]);\n                    queryResult.size(2); \r\n                    listener.onResponse(queryResult);\n                } else {\n                    fail(\"no such request ID: \" + request.id());\n                }\n            }\n        };\n        MockSearchPhaseContext mockSearchPhaseContext = new MockSearchPhaseContext(2);\n        mockSearchPhaseContext.searchTransport = searchTransportService;\n        DfsQueryPhase phase = new DfsQueryPhase(results, controller,\n            (response) -> new SearchPhase(\"test\") {\n            @Override\n            public void run() throws IOException {\n                responseRef.set(response.results);\n            }\n        }, mockSearchPhaseContext);\n        assertEquals(\"dfs_query\", phase.getName());\n        phase.run();\n        mockSearchPhaseContext.assertNoFailure();\n        assertNotNull(responseRef.get());\n        assertNotNull(responseRef.get().get(0));\n        assertNull(responseRef.get().get(0).fetchResult());\n        assertEquals(1, responseRef.get().get(0).queryResult().topDocs().topDocs.totalHits.value);\n        assertEquals(42, responseRef.get().get(0).queryResult().topDocs().topDocs.scoreDocs[0].doc);\n        assertNotNull(responseRef.get().get(1));\n        assertNull(responseRef.get().get(1).fetchResult());\n        assertEquals(1, responseRef.get().get(1).queryResult().topDocs().topDocs.totalHits.value);\n        assertEquals(84, responseRef.get().get(1).queryResult().topDocs().topDocs.scoreDocs[0].doc);\n        assertTrue(mockSearchPhaseContext.releasedSearchContexts.isEmpty());\n        assertEquals(2, mockSearchPhaseContext.numSuccess.get());\n    }\n","realPath":"server/src/test/java/org/elasticsearch/action/search/DfsQueryPhaseTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":56,"status":"M"},{"authorDate":"2020-03-09 23:59:30","commitOrder":6,"curCode":"    public void testFailPhaseOnException() throws IOException {\n        AtomicArray<DfsSearchResult> results = new AtomicArray<>(2);\n        AtomicReference<AtomicArray<SearchPhaseResult>> responseRef = new AtomicReference<>();\n        results.set(0, newSearchResult(0, new SearchContextId(UUIDs.randomBase64UUID(), 1),\n            new SearchShardTarget(\"node1\", new ShardId(\"test\", \"na\", 0), null, OriginalIndices.NONE)));\n        results.set(1, newSearchResult(1, new SearchContextId(UUIDs.randomBase64UUID(), 2),\n            new SearchShardTarget(\"node2\", new ShardId(\"test\", \"na\", 0), null, OriginalIndices.NONE)));\n        results.get(0).termsStatistics(new Term[0], new TermStatistics[0]);\n        results.get(1).termsStatistics(new Term[0], new TermStatistics[0]);\n\n        SearchPhaseController controller = new SearchPhaseController(\n            (b) -> new InternalAggregation.ReduceContext(BigArrays.NON_RECYCLING_INSTANCE, null, b));\n        SearchTransportService searchTransportService = new SearchTransportService(null, null) {\n            @Override\n            public void sendExecuteQuery(Transport.Connection connection, QuerySearchRequest request, SearchTask task,\n                                         SearchActionListener<QuerySearchResult> listener) {\n                if (request.contextId().getId() == 1) {\n                    QuerySearchResult queryResult = new QuerySearchResult(new SearchContextId(UUIDs.randomBase64UUID(), 123),\n                        new SearchShardTarget(\"node1\", new ShardId(\"test\", \"na\", 0), null, OriginalIndices.NONE));\n                    queryResult.topDocs(new TopDocsAndMaxScore(\n                            new TopDocs(new TotalHits(1, TotalHits.Relation.EQUAL_TO),\n                                    new ScoreDoc[] {new ScoreDoc(42, 1.0F)}), 2.0F), new DocValueFormat[0]);\n                    queryResult.size(2); \r\n                    listener.onResponse(queryResult);\n                } else if (request.contextId().getId() == 2) {\n                   throw new UncheckedIOException(new MockDirectoryWrapper.FakeIOException());\n                } else {\n                    fail(\"no such request ID: \" + request.contextId());\n                }\n            }\n        };\n        MockSearchPhaseContext mockSearchPhaseContext = new MockSearchPhaseContext(2);\n        mockSearchPhaseContext.searchTransport = searchTransportService;\n        DfsQueryPhase phase = new DfsQueryPhase(results, controller,\n            (response) -> new SearchPhase(\"test\") {\n                @Override\n                public void run() throws IOException {\n                    responseRef.set(response.results);\n                }\n            }, mockSearchPhaseContext);\n        assertEquals(\"dfs_query\", phase.getName());\n        expectThrows(UncheckedIOException.class, phase::run);\n        assertTrue(mockSearchPhaseContext.releasedSearchContexts.isEmpty()); \r\n    }\n","date":"2020-03-09 23:59:30","endLine":220,"groupId":"15397","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"testFailPhaseOnException","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/a2/496c19d2a9ff23cd3ce7d1b4551d863e1a234d.src","preCode":"    public void testFailPhaseOnException() throws IOException {\n        AtomicArray<DfsSearchResult> results = new AtomicArray<>(2);\n        AtomicReference<AtomicArray<SearchPhaseResult>> responseRef = new AtomicReference<>();\n        results.set(0, newSearchResult(0, 1, new SearchShardTarget(\"node1\", new ShardId(\"test\", \"na\", 0), null, OriginalIndices.NONE)));\n        results.set(1, newSearchResult(1, 2, new SearchShardTarget(\"node2\", new ShardId(\"test\", \"na\", 0), null, OriginalIndices.NONE)));\n        results.get(0).termsStatistics(new Term[0], new TermStatistics[0]);\n        results.get(1).termsStatistics(new Term[0], new TermStatistics[0]);\n\n        SearchPhaseController controller = new SearchPhaseController(\n            (b) -> new InternalAggregation.ReduceContext(BigArrays.NON_RECYCLING_INSTANCE, null, b));\n        SearchTransportService searchTransportService = new SearchTransportService(null, null) {\n            @Override\n            public void sendExecuteQuery(Transport.Connection connection, QuerySearchRequest request, SearchTask task,\n                                         SearchActionListener<QuerySearchResult> listener) {\n                if (request.id() == 1) {\n                    QuerySearchResult queryResult = new QuerySearchResult(123, new SearchShardTarget(\"node1\", new ShardId(\"test\", \"na\", 0),\n                        null, OriginalIndices.NONE));\n                    queryResult.topDocs(new TopDocsAndMaxScore(\n                            new TopDocs(new TotalHits(1, TotalHits.Relation.EQUAL_TO),\n                                    new ScoreDoc[] {new ScoreDoc(42, 1.0F)}), 2.0F), new DocValueFormat[0]);\n                    queryResult.size(2); \r\n                    listener.onResponse(queryResult);\n                } else if (request.id() == 2) {\n                   throw new UncheckedIOException(new MockDirectoryWrapper.FakeIOException());\n                } else {\n                    fail(\"no such request ID: \" + request.id());\n                }\n            }\n        };\n        MockSearchPhaseContext mockSearchPhaseContext = new MockSearchPhaseContext(2);\n        mockSearchPhaseContext.searchTransport = searchTransportService;\n        DfsQueryPhase phase = new DfsQueryPhase(results, controller,\n            (response) -> new SearchPhase(\"test\") {\n                @Override\n                public void run() throws IOException {\n                    responseRef.set(response.results);\n                }\n            }, mockSearchPhaseContext);\n        assertEquals(\"dfs_query\", phase.getName());\n        expectThrows(UncheckedIOException.class, phase::run);\n        assertTrue(mockSearchPhaseContext.releasedSearchContexts.isEmpty()); \r\n    }\n","realPath":"server/src/test/java/org/elasticsearch/action/search/DfsQueryPhaseTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":177,"status":"M"}],"commitId":"b2ea32959103b93c03cc487ce475adde792f21e3","commitMessage":"@@@Harden search context id (#53143)\n\nUsing a Long alone is not strong enough for the id of search contexts \nbecause we reset the id generator whenever a data node is restarted.\nThis can lead to two issues:\n\n1. Fetch phase can fetch documents from another index\n2. A scroll search can return documents from another index\n\nThis commit avoids these issues by adding a UUID to SearchContexId.","date":"2020-03-09 23:59:30","modifiedFileCount":"49","status":"M","submitter":"Nhat Nguyen"},{"authorTime":"2020-03-17 02:51:54","codes":[{"authorDate":"2020-03-17 02:51:54","commitOrder":7,"curCode":"    public void testDfsWith2Shards() throws IOException {\n        AtomicArray<DfsSearchResult> results = new AtomicArray<>(2);\n        AtomicReference<AtomicArray<SearchPhaseResult>> responseRef = new AtomicReference<>();\n        results.set(0, newSearchResult(0, new SearchContextId(UUIDs.randomBase64UUID(), 1),\n            new SearchShardTarget(\"node1\", new ShardId(\"test\", \"na\", 0), null, OriginalIndices.NONE)));\n        results.set(1, newSearchResult(1, new SearchContextId(UUIDs.randomBase64UUID(), 2),\n            new SearchShardTarget(\"node2\", new ShardId(\"test\", \"na\", 0), null, OriginalIndices.NONE)));\n        results.get(0).termsStatistics(new Term[0], new TermStatistics[0]);\n        results.get(1).termsStatistics(new Term[0], new TermStatistics[0]);\n\n        SearchTransportService searchTransportService = new SearchTransportService(null, null) {\n            @Override\n            public void sendExecuteQuery(Transport.Connection connection, QuerySearchRequest request, SearchTask task,\n                                         SearchActionListener<QuerySearchResult> listener) {\n                if (request.contextId().getId() == 1) {\n                    QuerySearchResult queryResult = new QuerySearchResult(new SearchContextId(UUIDs.randomBase64UUID(), 123),\n                        new SearchShardTarget(\"node1\", new ShardId(\"test\", \"na\", 0), null, OriginalIndices.NONE));\n                    queryResult.topDocs(new TopDocsAndMaxScore(\n                            new TopDocs(new TotalHits(1, TotalHits.Relation.EQUAL_TO),\n                                    new ScoreDoc[] {new ScoreDoc(42, 1.0F)}), 2.0F), new DocValueFormat[0]);\n                    queryResult.size(2); \r\n                    listener.onResponse(queryResult);\n                } else if (request.contextId().getId() == 2) {\n                    QuerySearchResult queryResult = new QuerySearchResult(new SearchContextId(UUIDs.randomBase64UUID(), 123),\n                        new SearchShardTarget(\"node2\", new ShardId(\"test\", \"na\", 0), null, OriginalIndices.NONE));\n                    queryResult.topDocs(new TopDocsAndMaxScore(\n                            new TopDocs(new TotalHits(1, TotalHits.Relation.EQUAL_TO), new ScoreDoc[] {new ScoreDoc(84, 2.0F)}), 2.0F),\n                            new DocValueFormat[0]);\n                    queryResult.size(2); \r\n                    listener.onResponse(queryResult);\n                } else {\n                    fail(\"no such request ID: \" + request.contextId());\n                }\n            }\n        };\n        MockSearchPhaseContext mockSearchPhaseContext = new MockSearchPhaseContext(2);\n        mockSearchPhaseContext.searchTransport = searchTransportService;\n        DfsQueryPhase phase = new DfsQueryPhase(results, searchPhaseController(),\n            (response) -> new SearchPhase(\"test\") {\n            @Override\n            public void run() throws IOException {\n                responseRef.set(response.results);\n            }\n        }, mockSearchPhaseContext);\n        assertEquals(\"dfs_query\", phase.getName());\n        phase.run();\n        mockSearchPhaseContext.assertNoFailure();\n        assertNotNull(responseRef.get());\n        assertNotNull(responseRef.get().get(0));\n        assertNull(responseRef.get().get(0).fetchResult());\n        assertEquals(1, responseRef.get().get(0).queryResult().topDocs().topDocs.totalHits.value);\n        assertEquals(42, responseRef.get().get(0).queryResult().topDocs().topDocs.scoreDocs[0].doc);\n        assertNotNull(responseRef.get().get(1));\n        assertNull(responseRef.get().get(1).fetchResult());\n        assertEquals(1, responseRef.get().get(1).queryResult().topDocs().topDocs.totalHits.value);\n        assertEquals(84, responseRef.get().get(1).queryResult().topDocs().topDocs.scoreDocs[0].doc);\n        assertTrue(mockSearchPhaseContext.releasedSearchContexts.isEmpty());\n        assertEquals(2, mockSearchPhaseContext.numSuccess.get());\n    }\n","date":"2020-03-17 02:51:54","endLine":113,"groupId":"15397","id":13,"instanceNumber":1,"isCurCommit":0,"methodName":"testDfsWith2Shards","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/a0/9a81aa54349f36e8df9d52c75905efb1893082.src","preCode":"    public void testDfsWith2Shards() throws IOException {\n        AtomicArray<DfsSearchResult> results = new AtomicArray<>(2);\n        AtomicReference<AtomicArray<SearchPhaseResult>> responseRef = new AtomicReference<>();\n        results.set(0, newSearchResult(0, new SearchContextId(UUIDs.randomBase64UUID(), 1),\n            new SearchShardTarget(\"node1\", new ShardId(\"test\", \"na\", 0), null, OriginalIndices.NONE)));\n        results.set(1, newSearchResult(1, new SearchContextId(UUIDs.randomBase64UUID(), 2),\n            new SearchShardTarget(\"node2\", new ShardId(\"test\", \"na\", 0), null, OriginalIndices.NONE)));\n        results.get(0).termsStatistics(new Term[0], new TermStatistics[0]);\n        results.get(1).termsStatistics(new Term[0], new TermStatistics[0]);\n\n        SearchPhaseController controller = new SearchPhaseController(\n            (b) -> new InternalAggregation.ReduceContext(BigArrays.NON_RECYCLING_INSTANCE, null, b));\n        SearchTransportService searchTransportService = new SearchTransportService(null, null) {\n            @Override\n            public void sendExecuteQuery(Transport.Connection connection, QuerySearchRequest request, SearchTask task,\n                                         SearchActionListener<QuerySearchResult> listener) {\n                if (request.contextId().getId() == 1) {\n                    QuerySearchResult queryResult = new QuerySearchResult(new SearchContextId(UUIDs.randomBase64UUID(), 123),\n                        new SearchShardTarget(\"node1\", new ShardId(\"test\", \"na\", 0), null, OriginalIndices.NONE));\n                    queryResult.topDocs(new TopDocsAndMaxScore(\n                            new TopDocs(new TotalHits(1, TotalHits.Relation.EQUAL_TO),\n                                    new ScoreDoc[] {new ScoreDoc(42, 1.0F)}), 2.0F), new DocValueFormat[0]);\n                    queryResult.size(2); \r\n                    listener.onResponse(queryResult);\n                } else if (request.contextId().getId() == 2) {\n                    QuerySearchResult queryResult = new QuerySearchResult(new SearchContextId(UUIDs.randomBase64UUID(), 123),\n                        new SearchShardTarget(\"node2\", new ShardId(\"test\", \"na\", 0), null, OriginalIndices.NONE));\n                    queryResult.topDocs(new TopDocsAndMaxScore(\n                            new TopDocs(new TotalHits(1, TotalHits.Relation.EQUAL_TO), new ScoreDoc[] {new ScoreDoc(84, 2.0F)}), 2.0F),\n                            new DocValueFormat[0]);\n                    queryResult.size(2); \r\n                    listener.onResponse(queryResult);\n                } else {\n                    fail(\"no such request ID: \" + request.contextId());\n                }\n            }\n        };\n        MockSearchPhaseContext mockSearchPhaseContext = new MockSearchPhaseContext(2);\n        mockSearchPhaseContext.searchTransport = searchTransportService;\n        DfsQueryPhase phase = new DfsQueryPhase(results, controller,\n            (response) -> new SearchPhase(\"test\") {\n            @Override\n            public void run() throws IOException {\n                responseRef.set(response.results);\n            }\n        }, mockSearchPhaseContext);\n        assertEquals(\"dfs_query\", phase.getName());\n        phase.run();\n        mockSearchPhaseContext.assertNoFailure();\n        assertNotNull(responseRef.get());\n        assertNotNull(responseRef.get().get(0));\n        assertNull(responseRef.get().get(0).fetchResult());\n        assertEquals(1, responseRef.get().get(0).queryResult().topDocs().topDocs.totalHits.value);\n        assertEquals(42, responseRef.get().get(0).queryResult().topDocs().topDocs.scoreDocs[0].doc);\n        assertNotNull(responseRef.get().get(1));\n        assertNull(responseRef.get().get(1).fetchResult());\n        assertEquals(1, responseRef.get().get(1).queryResult().topDocs().topDocs.totalHits.value);\n        assertEquals(84, responseRef.get().get(1).queryResult().topDocs().topDocs.scoreDocs[0].doc);\n        assertTrue(mockSearchPhaseContext.releasedSearchContexts.isEmpty());\n        assertEquals(2, mockSearchPhaseContext.numSuccess.get());\n    }\n","realPath":"server/src/test/java/org/elasticsearch/action/search/DfsQueryPhaseTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":55,"status":"M"},{"authorDate":"2020-03-17 02:51:54","commitOrder":7,"curCode":"    public void testFailPhaseOnException() throws IOException {\n        AtomicArray<DfsSearchResult> results = new AtomicArray<>(2);\n        AtomicReference<AtomicArray<SearchPhaseResult>> responseRef = new AtomicReference<>();\n        results.set(0, newSearchResult(0, new SearchContextId(UUIDs.randomBase64UUID(), 1),\n            new SearchShardTarget(\"node1\", new ShardId(\"test\", \"na\", 0), null, OriginalIndices.NONE)));\n        results.set(1, newSearchResult(1, new SearchContextId(UUIDs.randomBase64UUID(), 2),\n            new SearchShardTarget(\"node2\", new ShardId(\"test\", \"na\", 0), null, OriginalIndices.NONE)));\n        results.get(0).termsStatistics(new Term[0], new TermStatistics[0]);\n        results.get(1).termsStatistics(new Term[0], new TermStatistics[0]);\n\n        SearchTransportService searchTransportService = new SearchTransportService(null, null) {\n            @Override\n            public void sendExecuteQuery(Transport.Connection connection, QuerySearchRequest request, SearchTask task,\n                                         SearchActionListener<QuerySearchResult> listener) {\n                if (request.contextId().getId() == 1) {\n                    QuerySearchResult queryResult = new QuerySearchResult(new SearchContextId(UUIDs.randomBase64UUID(), 123),\n                        new SearchShardTarget(\"node1\", new ShardId(\"test\", \"na\", 0), null, OriginalIndices.NONE));\n                    queryResult.topDocs(new TopDocsAndMaxScore(\n                            new TopDocs(new TotalHits(1, TotalHits.Relation.EQUAL_TO),\n                                    new ScoreDoc[] {new ScoreDoc(42, 1.0F)}), 2.0F), new DocValueFormat[0]);\n                    queryResult.size(2); \r\n                    listener.onResponse(queryResult);\n                } else if (request.contextId().getId() == 2) {\n                   throw new UncheckedIOException(new MockDirectoryWrapper.FakeIOException());\n                } else {\n                    fail(\"no such request ID: \" + request.contextId());\n                }\n            }\n        };\n        MockSearchPhaseContext mockSearchPhaseContext = new MockSearchPhaseContext(2);\n        mockSearchPhaseContext.searchTransport = searchTransportService;\n        DfsQueryPhase phase = new DfsQueryPhase(results, searchPhaseController(),\n            (response) -> new SearchPhase(\"test\") {\n                @Override\n                public void run() throws IOException {\n                    responseRef.set(response.results);\n                }\n            }, mockSearchPhaseContext);\n        assertEquals(\"dfs_query\", phase.getName());\n        expectThrows(UncheckedIOException.class, phase::run);\n        assertTrue(mockSearchPhaseContext.releasedSearchContexts.isEmpty()); \r\n    }\n","date":"2020-03-17 02:51:54","endLine":213,"groupId":"15397","id":14,"instanceNumber":2,"isCurCommit":0,"methodName":"testFailPhaseOnException","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/a0/9a81aa54349f36e8df9d52c75905efb1893082.src","preCode":"    public void testFailPhaseOnException() throws IOException {\n        AtomicArray<DfsSearchResult> results = new AtomicArray<>(2);\n        AtomicReference<AtomicArray<SearchPhaseResult>> responseRef = new AtomicReference<>();\n        results.set(0, newSearchResult(0, new SearchContextId(UUIDs.randomBase64UUID(), 1),\n            new SearchShardTarget(\"node1\", new ShardId(\"test\", \"na\", 0), null, OriginalIndices.NONE)));\n        results.set(1, newSearchResult(1, new SearchContextId(UUIDs.randomBase64UUID(), 2),\n            new SearchShardTarget(\"node2\", new ShardId(\"test\", \"na\", 0), null, OriginalIndices.NONE)));\n        results.get(0).termsStatistics(new Term[0], new TermStatistics[0]);\n        results.get(1).termsStatistics(new Term[0], new TermStatistics[0]);\n\n        SearchPhaseController controller = new SearchPhaseController(\n            (b) -> new InternalAggregation.ReduceContext(BigArrays.NON_RECYCLING_INSTANCE, null, b));\n        SearchTransportService searchTransportService = new SearchTransportService(null, null) {\n            @Override\n            public void sendExecuteQuery(Transport.Connection connection, QuerySearchRequest request, SearchTask task,\n                                         SearchActionListener<QuerySearchResult> listener) {\n                if (request.contextId().getId() == 1) {\n                    QuerySearchResult queryResult = new QuerySearchResult(new SearchContextId(UUIDs.randomBase64UUID(), 123),\n                        new SearchShardTarget(\"node1\", new ShardId(\"test\", \"na\", 0), null, OriginalIndices.NONE));\n                    queryResult.topDocs(new TopDocsAndMaxScore(\n                            new TopDocs(new TotalHits(1, TotalHits.Relation.EQUAL_TO),\n                                    new ScoreDoc[] {new ScoreDoc(42, 1.0F)}), 2.0F), new DocValueFormat[0]);\n                    queryResult.size(2); \r\n                    listener.onResponse(queryResult);\n                } else if (request.contextId().getId() == 2) {\n                   throw new UncheckedIOException(new MockDirectoryWrapper.FakeIOException());\n                } else {\n                    fail(\"no such request ID: \" + request.contextId());\n                }\n            }\n        };\n        MockSearchPhaseContext mockSearchPhaseContext = new MockSearchPhaseContext(2);\n        mockSearchPhaseContext.searchTransport = searchTransportService;\n        DfsQueryPhase phase = new DfsQueryPhase(results, controller,\n            (response) -> new SearchPhase(\"test\") {\n                @Override\n                public void run() throws IOException {\n                    responseRef.set(response.results);\n                }\n            }, mockSearchPhaseContext);\n        assertEquals(\"dfs_query\", phase.getName());\n        expectThrows(UncheckedIOException.class, phase::run);\n        assertTrue(mockSearchPhaseContext.releasedSearchContexts.isEmpty()); \r\n    }\n","realPath":"server/src/test/java/org/elasticsearch/action/search/DfsQueryPhaseTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":172,"status":"M"}],"commitId":"4d81edb6257732a73adc3e5bc5157ad01d1a42c4","commitMessage":"@@@Stop using round-tripped PipelineAggregators (#53423)\n\nThis begins to clean up how `PipelineAggregator`s and executed.\nPreviously.  we would create the `PipelineAggregator`s on the data nodes\nand embed them in the aggregation tree. When it came time to execute the\npipeline aggregation we'd use the `PipelineAggregator`s that were on the\nfirst shard's results. This is inefficient because:\n1. The data node needs to make the `PipelineAggregator` only to\n   serialize it and then throw it away.\n2. The coordinating node needs to deserialize all of the\n   `PipelineAggregator`s even though it only needs one of them.\n3. You end up with many `PipelineAggregator` instances when you only\n   really *need* one per pipeline.\n4. `PipelineAggregator` needs to implement serialization.\n\nThis begins to undo these by building the `PipelineAggregator`s directly\non the coordinating node and using those instead of the\n`PipelineAggregator`s in the aggregtion tree. In a follow up change\nwe'll stop serializing the `PipelineAggregator`s to node versions that\nsupport this behavior. And.  one day.  we'll be able to remove\n`PipelineAggregator` from the aggregation result tree entirely.\n\nImportantly.  this doesn't change how pipeline aggregations are declared\nor parsed or requested. They are still part of the `AggregationBuilder`\ntree because *that* makes sense.\n","date":"2020-03-17 02:51:54","modifiedFileCount":"35","status":"M","submitter":"Nik Everett"},{"authorTime":"2020-07-29 01:14:40","codes":[{"authorDate":"2020-07-29 01:14:40","commitOrder":8,"curCode":"    public void testDfsWith2Shards() throws IOException {\n        AtomicArray<DfsSearchResult> results = new AtomicArray<>(2);\n        AtomicReference<AtomicArray<SearchPhaseResult>> responseRef = new AtomicReference<>();\n        results.set(0, newSearchResult(0, new SearchContextId(UUIDs.randomBase64UUID(), 1),\n            new SearchShardTarget(\"node1\", new ShardId(\"test\", \"na\", 0), null, OriginalIndices.NONE)));\n        results.set(1, newSearchResult(1, new SearchContextId(UUIDs.randomBase64UUID(), 2),\n            new SearchShardTarget(\"node2\", new ShardId(\"test\", \"na\", 0), null, OriginalIndices.NONE)));\n        results.get(0).termsStatistics(new Term[0], new TermStatistics[0]);\n        results.get(1).termsStatistics(new Term[0], new TermStatistics[0]);\n\n        SearchTransportService searchTransportService = new SearchTransportService(null, null) {\n            @Override\n            public void sendExecuteQuery(Transport.Connection connection, QuerySearchRequest request, SearchTask task,\n                                         SearchActionListener<QuerySearchResult> listener) {\n                if (request.contextId().getId() == 1) {\n                    QuerySearchResult queryResult = new QuerySearchResult(new SearchContextId(UUIDs.randomBase64UUID(), 123),\n                        new SearchShardTarget(\"node1\", new ShardId(\"test\", \"na\", 0), null, OriginalIndices.NONE));\n                    queryResult.topDocs(new TopDocsAndMaxScore(\n                            new TopDocs(new TotalHits(1, TotalHits.Relation.EQUAL_TO),\n                                    new ScoreDoc[] {new ScoreDoc(42, 1.0F)}), 2.0F), new DocValueFormat[0]);\n                    queryResult.size(2); \r\n                    listener.onResponse(queryResult);\n                } else if (request.contextId().getId() == 2) {\n                    QuerySearchResult queryResult = new QuerySearchResult(new SearchContextId(UUIDs.randomBase64UUID(), 123),\n                        new SearchShardTarget(\"node2\", new ShardId(\"test\", \"na\", 0), null, OriginalIndices.NONE));\n                    queryResult.topDocs(new TopDocsAndMaxScore(\n                            new TopDocs(new TotalHits(1, TotalHits.Relation.EQUAL_TO), new ScoreDoc[] {new ScoreDoc(84, 2.0F)}), 2.0F),\n                            new DocValueFormat[0]);\n                    queryResult.size(2); \r\n                    listener.onResponse(queryResult);\n                } else {\n                    fail(\"no such request ID: \" + request.contextId());\n                }\n            }\n        };\n        MockSearchPhaseContext mockSearchPhaseContext = new MockSearchPhaseContext(2);\n        mockSearchPhaseContext.searchTransport = searchTransportService;\n        DfsQueryPhase phase = new DfsQueryPhase(results, searchPhaseController(),\n            (response) -> new SearchPhase(\"test\") {\n            @Override\n            public void run() throws IOException {\n                responseRef.set(response.results);\n            }\n        }, mockSearchPhaseContext, exc ->  {});\n        assertEquals(\"dfs_query\", phase.getName());\n        phase.run();\n        mockSearchPhaseContext.assertNoFailure();\n        assertNotNull(responseRef.get());\n        assertNotNull(responseRef.get().get(0));\n        assertNull(responseRef.get().get(0).fetchResult());\n        assertEquals(1, responseRef.get().get(0).queryResult().topDocs().topDocs.totalHits.value);\n        assertEquals(42, responseRef.get().get(0).queryResult().topDocs().topDocs.scoreDocs[0].doc);\n        assertNotNull(responseRef.get().get(1));\n        assertNull(responseRef.get().get(1).fetchResult());\n        assertEquals(1, responseRef.get().get(1).queryResult().topDocs().topDocs.totalHits.value);\n        assertEquals(84, responseRef.get().get(1).queryResult().topDocs().topDocs.scoreDocs[0].doc);\n        assertTrue(mockSearchPhaseContext.releasedSearchContexts.isEmpty());\n        assertEquals(2, mockSearchPhaseContext.numSuccess.get());\n    }\n","date":"2020-07-29 01:42:59","endLine":113,"groupId":"15397","id":15,"instanceNumber":1,"isCurCommit":0,"methodName":"testDfsWith2Shards","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/dd/7ca786c7738f023a2f0853713f6c803f6f3f8d.src","preCode":"    public void testDfsWith2Shards() throws IOException {\n        AtomicArray<DfsSearchResult> results = new AtomicArray<>(2);\n        AtomicReference<AtomicArray<SearchPhaseResult>> responseRef = new AtomicReference<>();\n        results.set(0, newSearchResult(0, new SearchContextId(UUIDs.randomBase64UUID(), 1),\n            new SearchShardTarget(\"node1\", new ShardId(\"test\", \"na\", 0), null, OriginalIndices.NONE)));\n        results.set(1, newSearchResult(1, new SearchContextId(UUIDs.randomBase64UUID(), 2),\n            new SearchShardTarget(\"node2\", new ShardId(\"test\", \"na\", 0), null, OriginalIndices.NONE)));\n        results.get(0).termsStatistics(new Term[0], new TermStatistics[0]);\n        results.get(1).termsStatistics(new Term[0], new TermStatistics[0]);\n\n        SearchTransportService searchTransportService = new SearchTransportService(null, null) {\n            @Override\n            public void sendExecuteQuery(Transport.Connection connection, QuerySearchRequest request, SearchTask task,\n                                         SearchActionListener<QuerySearchResult> listener) {\n                if (request.contextId().getId() == 1) {\n                    QuerySearchResult queryResult = new QuerySearchResult(new SearchContextId(UUIDs.randomBase64UUID(), 123),\n                        new SearchShardTarget(\"node1\", new ShardId(\"test\", \"na\", 0), null, OriginalIndices.NONE));\n                    queryResult.topDocs(new TopDocsAndMaxScore(\n                            new TopDocs(new TotalHits(1, TotalHits.Relation.EQUAL_TO),\n                                    new ScoreDoc[] {new ScoreDoc(42, 1.0F)}), 2.0F), new DocValueFormat[0]);\n                    queryResult.size(2); \r\n                    listener.onResponse(queryResult);\n                } else if (request.contextId().getId() == 2) {\n                    QuerySearchResult queryResult = new QuerySearchResult(new SearchContextId(UUIDs.randomBase64UUID(), 123),\n                        new SearchShardTarget(\"node2\", new ShardId(\"test\", \"na\", 0), null, OriginalIndices.NONE));\n                    queryResult.topDocs(new TopDocsAndMaxScore(\n                            new TopDocs(new TotalHits(1, TotalHits.Relation.EQUAL_TO), new ScoreDoc[] {new ScoreDoc(84, 2.0F)}), 2.0F),\n                            new DocValueFormat[0]);\n                    queryResult.size(2); \r\n                    listener.onResponse(queryResult);\n                } else {\n                    fail(\"no such request ID: \" + request.contextId());\n                }\n            }\n        };\n        MockSearchPhaseContext mockSearchPhaseContext = new MockSearchPhaseContext(2);\n        mockSearchPhaseContext.searchTransport = searchTransportService;\n        DfsQueryPhase phase = new DfsQueryPhase(results, searchPhaseController(),\n            (response) -> new SearchPhase(\"test\") {\n            @Override\n            public void run() throws IOException {\n                responseRef.set(response.results);\n            }\n        }, mockSearchPhaseContext);\n        assertEquals(\"dfs_query\", phase.getName());\n        phase.run();\n        mockSearchPhaseContext.assertNoFailure();\n        assertNotNull(responseRef.get());\n        assertNotNull(responseRef.get().get(0));\n        assertNull(responseRef.get().get(0).fetchResult());\n        assertEquals(1, responseRef.get().get(0).queryResult().topDocs().topDocs.totalHits.value);\n        assertEquals(42, responseRef.get().get(0).queryResult().topDocs().topDocs.scoreDocs[0].doc);\n        assertNotNull(responseRef.get().get(1));\n        assertNull(responseRef.get().get(1).fetchResult());\n        assertEquals(1, responseRef.get().get(1).queryResult().topDocs().topDocs.totalHits.value);\n        assertEquals(84, responseRef.get().get(1).queryResult().topDocs().topDocs.scoreDocs[0].doc);\n        assertTrue(mockSearchPhaseContext.releasedSearchContexts.isEmpty());\n        assertEquals(2, mockSearchPhaseContext.numSuccess.get());\n    }\n","realPath":"server/src/test/java/org/elasticsearch/action/search/DfsQueryPhaseTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":55,"status":"M"},{"authorDate":"2020-07-29 01:14:40","commitOrder":8,"curCode":"    public void testFailPhaseOnException() throws IOException {\n        AtomicArray<DfsSearchResult> results = new AtomicArray<>(2);\n        AtomicReference<AtomicArray<SearchPhaseResult>> responseRef = new AtomicReference<>();\n        results.set(0, newSearchResult(0, new SearchContextId(UUIDs.randomBase64UUID(), 1),\n            new SearchShardTarget(\"node1\", new ShardId(\"test\", \"na\", 0), null, OriginalIndices.NONE)));\n        results.set(1, newSearchResult(1, new SearchContextId(UUIDs.randomBase64UUID(), 2),\n            new SearchShardTarget(\"node2\", new ShardId(\"test\", \"na\", 0), null, OriginalIndices.NONE)));\n        results.get(0).termsStatistics(new Term[0], new TermStatistics[0]);\n        results.get(1).termsStatistics(new Term[0], new TermStatistics[0]);\n\n        SearchTransportService searchTransportService = new SearchTransportService(null, null) {\n            @Override\n            public void sendExecuteQuery(Transport.Connection connection, QuerySearchRequest request, SearchTask task,\n                                         SearchActionListener<QuerySearchResult> listener) {\n                if (request.contextId().getId() == 1) {\n                    QuerySearchResult queryResult = new QuerySearchResult(new SearchContextId(UUIDs.randomBase64UUID(), 123),\n                        new SearchShardTarget(\"node1\", new ShardId(\"test\", \"na\", 0), null, OriginalIndices.NONE));\n                    queryResult.topDocs(new TopDocsAndMaxScore(\n                            new TopDocs(new TotalHits(1, TotalHits.Relation.EQUAL_TO),\n                                    new ScoreDoc[] {new ScoreDoc(42, 1.0F)}), 2.0F), new DocValueFormat[0]);\n                    queryResult.size(2); \r\n                    listener.onResponse(queryResult);\n                } else if (request.contextId().getId() == 2) {\n                   throw new UncheckedIOException(new MockDirectoryWrapper.FakeIOException());\n                } else {\n                    fail(\"no such request ID: \" + request.contextId());\n                }\n            }\n        };\n        MockSearchPhaseContext mockSearchPhaseContext = new MockSearchPhaseContext(2);\n        mockSearchPhaseContext.searchTransport = searchTransportService;\n        DfsQueryPhase phase = new DfsQueryPhase(results, searchPhaseController(),\n            (response) -> new SearchPhase(\"test\") {\n                @Override\n                public void run() throws IOException {\n                    responseRef.set(response.results);\n                }\n            }, mockSearchPhaseContext, exc  -> {});\n        assertEquals(\"dfs_query\", phase.getName());\n        expectThrows(UncheckedIOException.class, phase::run);\n        assertTrue(mockSearchPhaseContext.releasedSearchContexts.isEmpty()); \r\n    }\n","date":"2020-07-29 01:42:59","endLine":213,"groupId":"15397","id":16,"instanceNumber":2,"isCurCommit":0,"methodName":"testFailPhaseOnException","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/dd/7ca786c7738f023a2f0853713f6c803f6f3f8d.src","preCode":"    public void testFailPhaseOnException() throws IOException {\n        AtomicArray<DfsSearchResult> results = new AtomicArray<>(2);\n        AtomicReference<AtomicArray<SearchPhaseResult>> responseRef = new AtomicReference<>();\n        results.set(0, newSearchResult(0, new SearchContextId(UUIDs.randomBase64UUID(), 1),\n            new SearchShardTarget(\"node1\", new ShardId(\"test\", \"na\", 0), null, OriginalIndices.NONE)));\n        results.set(1, newSearchResult(1, new SearchContextId(UUIDs.randomBase64UUID(), 2),\n            new SearchShardTarget(\"node2\", new ShardId(\"test\", \"na\", 0), null, OriginalIndices.NONE)));\n        results.get(0).termsStatistics(new Term[0], new TermStatistics[0]);\n        results.get(1).termsStatistics(new Term[0], new TermStatistics[0]);\n\n        SearchTransportService searchTransportService = new SearchTransportService(null, null) {\n            @Override\n            public void sendExecuteQuery(Transport.Connection connection, QuerySearchRequest request, SearchTask task,\n                                         SearchActionListener<QuerySearchResult> listener) {\n                if (request.contextId().getId() == 1) {\n                    QuerySearchResult queryResult = new QuerySearchResult(new SearchContextId(UUIDs.randomBase64UUID(), 123),\n                        new SearchShardTarget(\"node1\", new ShardId(\"test\", \"na\", 0), null, OriginalIndices.NONE));\n                    queryResult.topDocs(new TopDocsAndMaxScore(\n                            new TopDocs(new TotalHits(1, TotalHits.Relation.EQUAL_TO),\n                                    new ScoreDoc[] {new ScoreDoc(42, 1.0F)}), 2.0F), new DocValueFormat[0]);\n                    queryResult.size(2); \r\n                    listener.onResponse(queryResult);\n                } else if (request.contextId().getId() == 2) {\n                   throw new UncheckedIOException(new MockDirectoryWrapper.FakeIOException());\n                } else {\n                    fail(\"no such request ID: \" + request.contextId());\n                }\n            }\n        };\n        MockSearchPhaseContext mockSearchPhaseContext = new MockSearchPhaseContext(2);\n        mockSearchPhaseContext.searchTransport = searchTransportService;\n        DfsQueryPhase phase = new DfsQueryPhase(results, searchPhaseController(),\n            (response) -> new SearchPhase(\"test\") {\n                @Override\n                public void run() throws IOException {\n                    responseRef.set(response.results);\n                }\n            }, mockSearchPhaseContext);\n        assertEquals(\"dfs_query\", phase.getName());\n        expectThrows(UncheckedIOException.class, phase::run);\n        assertTrue(mockSearchPhaseContext.releasedSearchContexts.isEmpty()); \r\n    }\n","realPath":"server/src/test/java/org/elasticsearch/action/search/DfsQueryPhaseTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":172,"status":"M"}],"commitId":"e3bbb3bed4ed9430ab43eb4a3e8276ae503c13ab","commitMessage":"@@@Merge branch 'master' into feature/runtime_fields\n","date":"2020-07-29 01:42:59","modifiedFileCount":"261","status":"M","submitter":"Nik Everett"},{"authorTime":"2020-08-27 20:29:24","codes":[{"authorDate":"2020-08-27 20:29:24","commitOrder":9,"curCode":"    public void testDfsWith2Shards() throws IOException {\n        AtomicArray<DfsSearchResult> results = new AtomicArray<>(2);\n        AtomicReference<AtomicArray<SearchPhaseResult>> responseRef = new AtomicReference<>();\n        results.set(0, newSearchResult(0, new ShardSearchContextId(\"\", 1),\n            new SearchShardTarget(\"node1\", new ShardId(\"test\", \"na\", 0), null, OriginalIndices.NONE)));\n        results.set(1, newSearchResult(1, new ShardSearchContextId(\"\", 2),\n            new SearchShardTarget(\"node2\", new ShardId(\"test\", \"na\", 0), null, OriginalIndices.NONE)));\n        results.get(0).termsStatistics(new Term[0], new TermStatistics[0]);\n        results.get(1).termsStatistics(new Term[0], new TermStatistics[0]);\n\n        SearchTransportService searchTransportService = new SearchTransportService(null, null) {\n            @Override\n            public void sendExecuteQuery(Transport.Connection connection, QuerySearchRequest request, SearchTask task,\n                                         SearchActionListener<QuerySearchResult> listener) {\n                if (request.contextId().getId() == 1) {\n                    QuerySearchResult queryResult = new QuerySearchResult(new ShardSearchContextId(\"\", 123),\n                        new SearchShardTarget(\"node1\", new ShardId(\"test\", \"na\", 0), null, OriginalIndices.NONE), null);\n                    queryResult.topDocs(new TopDocsAndMaxScore(\n                            new TopDocs(new TotalHits(1, TotalHits.Relation.EQUAL_TO),\n                                    new ScoreDoc[] {new ScoreDoc(42, 1.0F)}), 2.0F), new DocValueFormat[0]);\n                    queryResult.size(2); \r\n                    listener.onResponse(queryResult);\n                } else if (request.contextId().getId() == 2) {\n                    QuerySearchResult queryResult = new QuerySearchResult(new ShardSearchContextId(\"\", 123),\n                        new SearchShardTarget(\"node2\", new ShardId(\"test\", \"na\", 0), null, OriginalIndices.NONE), null);\n                    queryResult.topDocs(new TopDocsAndMaxScore(\n                            new TopDocs(new TotalHits(1, TotalHits.Relation.EQUAL_TO), new ScoreDoc[] {new ScoreDoc(84, 2.0F)}), 2.0F),\n                            new DocValueFormat[0]);\n                    queryResult.size(2); \r\n                    listener.onResponse(queryResult);\n                } else {\n                    fail(\"no such request ID: \" + request.contextId());\n                }\n            }\n        };\n        MockSearchPhaseContext mockSearchPhaseContext = new MockSearchPhaseContext(2);\n        mockSearchPhaseContext.searchTransport = searchTransportService;\n        DfsQueryPhase phase = new DfsQueryPhase(results.asList(), null, searchPhaseController(),\n            (response) -> new SearchPhase(\"test\") {\n            @Override\n            public void run() throws IOException {\n                responseRef.set(response.results);\n            }\n        }, mockSearchPhaseContext, exc ->  {});\n        assertEquals(\"dfs_query\", phase.getName());\n        phase.run();\n        mockSearchPhaseContext.assertNoFailure();\n        assertNotNull(responseRef.get());\n        assertNotNull(responseRef.get().get(0));\n        assertNull(responseRef.get().get(0).fetchResult());\n        assertEquals(1, responseRef.get().get(0).queryResult().topDocs().topDocs.totalHits.value);\n        assertEquals(42, responseRef.get().get(0).queryResult().topDocs().topDocs.scoreDocs[0].doc);\n        assertNotNull(responseRef.get().get(1));\n        assertNull(responseRef.get().get(1).fetchResult());\n        assertEquals(1, responseRef.get().get(1).queryResult().topDocs().topDocs.totalHits.value);\n        assertEquals(84, responseRef.get().get(1).queryResult().topDocs().topDocs.scoreDocs[0].doc);\n        assertTrue(mockSearchPhaseContext.releasedSearchContexts.isEmpty());\n        assertEquals(2, mockSearchPhaseContext.numSuccess.get());\n    }\n","date":"2020-08-27 20:29:24","endLine":112,"groupId":"61624","id":17,"instanceNumber":1,"isCurCommit":0,"methodName":"testDfsWith2Shards","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/14/0d28c47fd9af41f2ada2d8384269d7715d45fc.src","preCode":"    public void testDfsWith2Shards() throws IOException {\n        AtomicArray<DfsSearchResult> results = new AtomicArray<>(2);\n        AtomicReference<AtomicArray<SearchPhaseResult>> responseRef = new AtomicReference<>();\n        results.set(0, newSearchResult(0, new SearchContextId(UUIDs.randomBase64UUID(), 1),\n            new SearchShardTarget(\"node1\", new ShardId(\"test\", \"na\", 0), null, OriginalIndices.NONE)));\n        results.set(1, newSearchResult(1, new SearchContextId(UUIDs.randomBase64UUID(), 2),\n            new SearchShardTarget(\"node2\", new ShardId(\"test\", \"na\", 0), null, OriginalIndices.NONE)));\n        results.get(0).termsStatistics(new Term[0], new TermStatistics[0]);\n        results.get(1).termsStatistics(new Term[0], new TermStatistics[0]);\n\n        SearchTransportService searchTransportService = new SearchTransportService(null, null) {\n            @Override\n            public void sendExecuteQuery(Transport.Connection connection, QuerySearchRequest request, SearchTask task,\n                                         SearchActionListener<QuerySearchResult> listener) {\n                if (request.contextId().getId() == 1) {\n                    QuerySearchResult queryResult = new QuerySearchResult(new SearchContextId(UUIDs.randomBase64UUID(), 123),\n                        new SearchShardTarget(\"node1\", new ShardId(\"test\", \"na\", 0), null, OriginalIndices.NONE));\n                    queryResult.topDocs(new TopDocsAndMaxScore(\n                            new TopDocs(new TotalHits(1, TotalHits.Relation.EQUAL_TO),\n                                    new ScoreDoc[] {new ScoreDoc(42, 1.0F)}), 2.0F), new DocValueFormat[0]);\n                    queryResult.size(2); \r\n                    listener.onResponse(queryResult);\n                } else if (request.contextId().getId() == 2) {\n                    QuerySearchResult queryResult = new QuerySearchResult(new SearchContextId(UUIDs.randomBase64UUID(), 123),\n                        new SearchShardTarget(\"node2\", new ShardId(\"test\", \"na\", 0), null, OriginalIndices.NONE));\n                    queryResult.topDocs(new TopDocsAndMaxScore(\n                            new TopDocs(new TotalHits(1, TotalHits.Relation.EQUAL_TO), new ScoreDoc[] {new ScoreDoc(84, 2.0F)}), 2.0F),\n                            new DocValueFormat[0]);\n                    queryResult.size(2); \r\n                    listener.onResponse(queryResult);\n                } else {\n                    fail(\"no such request ID: \" + request.contextId());\n                }\n            }\n        };\n        MockSearchPhaseContext mockSearchPhaseContext = new MockSearchPhaseContext(2);\n        mockSearchPhaseContext.searchTransport = searchTransportService;\n        DfsQueryPhase phase = new DfsQueryPhase(results, searchPhaseController(),\n            (response) -> new SearchPhase(\"test\") {\n            @Override\n            public void run() throws IOException {\n                responseRef.set(response.results);\n            }\n        }, mockSearchPhaseContext, exc ->  {});\n        assertEquals(\"dfs_query\", phase.getName());\n        phase.run();\n        mockSearchPhaseContext.assertNoFailure();\n        assertNotNull(responseRef.get());\n        assertNotNull(responseRef.get().get(0));\n        assertNull(responseRef.get().get(0).fetchResult());\n        assertEquals(1, responseRef.get().get(0).queryResult().topDocs().topDocs.totalHits.value);\n        assertEquals(42, responseRef.get().get(0).queryResult().topDocs().topDocs.scoreDocs[0].doc);\n        assertNotNull(responseRef.get().get(1));\n        assertNull(responseRef.get().get(1).fetchResult());\n        assertEquals(1, responseRef.get().get(1).queryResult().topDocs().topDocs.totalHits.value);\n        assertEquals(84, responseRef.get().get(1).queryResult().topDocs().topDocs.scoreDocs[0].doc);\n        assertTrue(mockSearchPhaseContext.releasedSearchContexts.isEmpty());\n        assertEquals(2, mockSearchPhaseContext.numSuccess.get());\n    }\n","realPath":"server/src/test/java/org/elasticsearch/action/search/DfsQueryPhaseTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":54,"status":"M"},{"authorDate":"2020-08-27 20:29:24","commitOrder":9,"curCode":"    public void testFailPhaseOnException() throws IOException {\n        AtomicArray<DfsSearchResult> results = new AtomicArray<>(2);\n        AtomicReference<AtomicArray<SearchPhaseResult>> responseRef = new AtomicReference<>();\n        results.set(0, newSearchResult(0, new ShardSearchContextId(\"\", 1),\n            new SearchShardTarget(\"node1\", new ShardId(\"test\", \"na\", 0), null, OriginalIndices.NONE)));\n        results.set(1, newSearchResult(1, new ShardSearchContextId(\"\", 2),\n            new SearchShardTarget(\"node2\", new ShardId(\"test\", \"na\", 0), null, OriginalIndices.NONE)));\n        results.get(0).termsStatistics(new Term[0], new TermStatistics[0]);\n        results.get(1).termsStatistics(new Term[0], new TermStatistics[0]);\n\n        SearchTransportService searchTransportService = new SearchTransportService(null, null) {\n            @Override\n            public void sendExecuteQuery(Transport.Connection connection, QuerySearchRequest request, SearchTask task,\n                                         SearchActionListener<QuerySearchResult> listener) {\n                if (request.contextId().getId() == 1) {\n                    QuerySearchResult queryResult = new QuerySearchResult(new ShardSearchContextId(\"\", 123),\n                        new SearchShardTarget(\"node1\", new ShardId(\"test\", \"na\", 0), null, OriginalIndices.NONE), null);\n                    queryResult.topDocs(new TopDocsAndMaxScore(\n                            new TopDocs(new TotalHits(1, TotalHits.Relation.EQUAL_TO),\n                                    new ScoreDoc[] {new ScoreDoc(42, 1.0F)}), 2.0F), new DocValueFormat[0]);\n                    queryResult.size(2); \r\n                    listener.onResponse(queryResult);\n                } else if (request.contextId().getId() == 2) {\n                   throw new UncheckedIOException(new MockDirectoryWrapper.FakeIOException());\n                } else {\n                    fail(\"no such request ID: \" + request.contextId());\n                }\n            }\n        };\n        MockSearchPhaseContext mockSearchPhaseContext = new MockSearchPhaseContext(2);\n        mockSearchPhaseContext.searchTransport = searchTransportService;\n        DfsQueryPhase phase = new DfsQueryPhase(results.asList(), null, searchPhaseController(),\n            (response) -> new SearchPhase(\"test\") {\n                @Override\n                public void run() throws IOException {\n                    responseRef.set(response.results);\n                }\n            }, mockSearchPhaseContext, exc  -> {});\n        assertEquals(\"dfs_query\", phase.getName());\n        expectThrows(UncheckedIOException.class, phase::run);\n        assertTrue(mockSearchPhaseContext.releasedSearchContexts.isEmpty()); \r\n    }\n","date":"2020-08-27 20:29:24","endLine":213,"groupId":"61623","id":18,"instanceNumber":2,"isCurCommit":0,"methodName":"testFailPhaseOnException","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/14/0d28c47fd9af41f2ada2d8384269d7715d45fc.src","preCode":"    public void testFailPhaseOnException() throws IOException {\n        AtomicArray<DfsSearchResult> results = new AtomicArray<>(2);\n        AtomicReference<AtomicArray<SearchPhaseResult>> responseRef = new AtomicReference<>();\n        results.set(0, newSearchResult(0, new SearchContextId(UUIDs.randomBase64UUID(), 1),\n            new SearchShardTarget(\"node1\", new ShardId(\"test\", \"na\", 0), null, OriginalIndices.NONE)));\n        results.set(1, newSearchResult(1, new SearchContextId(UUIDs.randomBase64UUID(), 2),\n            new SearchShardTarget(\"node2\", new ShardId(\"test\", \"na\", 0), null, OriginalIndices.NONE)));\n        results.get(0).termsStatistics(new Term[0], new TermStatistics[0]);\n        results.get(1).termsStatistics(new Term[0], new TermStatistics[0]);\n\n        SearchTransportService searchTransportService = new SearchTransportService(null, null) {\n            @Override\n            public void sendExecuteQuery(Transport.Connection connection, QuerySearchRequest request, SearchTask task,\n                                         SearchActionListener<QuerySearchResult> listener) {\n                if (request.contextId().getId() == 1) {\n                    QuerySearchResult queryResult = new QuerySearchResult(new SearchContextId(UUIDs.randomBase64UUID(), 123),\n                        new SearchShardTarget(\"node1\", new ShardId(\"test\", \"na\", 0), null, OriginalIndices.NONE));\n                    queryResult.topDocs(new TopDocsAndMaxScore(\n                            new TopDocs(new TotalHits(1, TotalHits.Relation.EQUAL_TO),\n                                    new ScoreDoc[] {new ScoreDoc(42, 1.0F)}), 2.0F), new DocValueFormat[0]);\n                    queryResult.size(2); \r\n                    listener.onResponse(queryResult);\n                } else if (request.contextId().getId() == 2) {\n                   throw new UncheckedIOException(new MockDirectoryWrapper.FakeIOException());\n                } else {\n                    fail(\"no such request ID: \" + request.contextId());\n                }\n            }\n        };\n        MockSearchPhaseContext mockSearchPhaseContext = new MockSearchPhaseContext(2);\n        mockSearchPhaseContext.searchTransport = searchTransportService;\n        DfsQueryPhase phase = new DfsQueryPhase(results, searchPhaseController(),\n            (response) -> new SearchPhase(\"test\") {\n                @Override\n                public void run() throws IOException {\n                    responseRef.set(response.results);\n                }\n            }, mockSearchPhaseContext, exc  -> {});\n        assertEquals(\"dfs_query\", phase.getName());\n        expectThrows(UncheckedIOException.class, phase::run);\n        assertTrue(mockSearchPhaseContext.releasedSearchContexts.isEmpty()); \r\n    }\n","realPath":"server/src/test/java/org/elasticsearch/action/search/DfsQueryPhaseTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":172,"status":"M"}],"commitId":"0a3d3919a141e6e3c9bbddc43d046a4c9211b6be","commitMessage":"@@@Merge branch 'master' into feature/runtime_fields\n","date":"2020-08-27 20:29:24","modifiedFileCount":"256","status":"M","submitter":"Luca Cavanna"},{"authorTime":"2020-09-24 20:02:49","codes":[{"authorDate":"2020-09-24 20:02:49","commitOrder":10,"curCode":"    public void testDfsWith2Shards() throws IOException {\n        AtomicArray<DfsSearchResult> results = new AtomicArray<>(2);\n        AtomicReference<AtomicArray<SearchPhaseResult>> responseRef = new AtomicReference<>();\n        results.set(0, newSearchResult(0, new ShardSearchContextId(\"\", 1),\n            new SearchShardTarget(\"node1\", new ShardId(\"test\", \"na\", 0), null, OriginalIndices.NONE)));\n        results.set(1, newSearchResult(1, new ShardSearchContextId(\"\", 2),\n            new SearchShardTarget(\"node2\", new ShardId(\"test\", \"na\", 0), null, OriginalIndices.NONE)));\n        results.get(0).termsStatistics(new Term[0], new TermStatistics[0]);\n        results.get(1).termsStatistics(new Term[0], new TermStatistics[0]);\n\n        SearchTransportService searchTransportService = new SearchTransportService(null, null) {\n            @Override\n            public void sendExecuteQuery(Transport.Connection connection, QuerySearchRequest request, SearchTask task,\n                                         SearchActionListener<QuerySearchResult> listener) {\n                if (request.contextId().getId() == 1) {\n                    QuerySearchResult queryResult = new QuerySearchResult(new ShardSearchContextId(\"\", 123),\n                        new SearchShardTarget(\"node1\", new ShardId(\"test\", \"na\", 0), null, OriginalIndices.NONE), null);\n                    queryResult.topDocs(new TopDocsAndMaxScore(\n                            new TopDocs(new TotalHits(1, TotalHits.Relation.EQUAL_TO),\n                                    new ScoreDoc[] {new ScoreDoc(42, 1.0F)}), 2.0F), new DocValueFormat[0]);\n                    queryResult.size(2); \r\n                    listener.onResponse(queryResult);\n                } else if (request.contextId().getId() == 2) {\n                    QuerySearchResult queryResult = new QuerySearchResult(new ShardSearchContextId(\"\", 123),\n                        new SearchShardTarget(\"node2\", new ShardId(\"test\", \"na\", 0), null, OriginalIndices.NONE), null);\n                    queryResult.topDocs(new TopDocsAndMaxScore(\n                            new TopDocs(new TotalHits(1, TotalHits.Relation.EQUAL_TO), new ScoreDoc[] {new ScoreDoc(84, 2.0F)}), 2.0F),\n                            new DocValueFormat[0]);\n                    queryResult.size(2); \r\n                    listener.onResponse(queryResult);\n                } else {\n                    fail(\"no such request ID: \" + request.contextId());\n                }\n            }\n        };\n        SearchPhaseController searchPhaseController = searchPhaseController();\n        MockSearchPhaseContext mockSearchPhaseContext = new MockSearchPhaseContext(2);\n        mockSearchPhaseContext.searchTransport = searchTransportService;\n        QueryPhaseResultConsumer consumer = searchPhaseController.newSearchPhaseResults(EsExecutors.newDirectExecutorService(),\n            new NoopCircuitBreaker(CircuitBreaker.REQUEST), SearchProgressListener.NOOP, mockSearchPhaseContext.searchRequest,\n            results.length(), exc -> {});\n        DfsQueryPhase phase = new DfsQueryPhase(results.asList(), null, consumer,\n            (response) -> new SearchPhase(\"test\") {\n            @Override\n            public void run() throws IOException {\n                responseRef.set(response.results);\n            }\n        }, mockSearchPhaseContext);\n        assertEquals(\"dfs_query\", phase.getName());\n        phase.run();\n        mockSearchPhaseContext.assertNoFailure();\n        assertNotNull(responseRef.get());\n        assertNotNull(responseRef.get().get(0));\n        assertNull(responseRef.get().get(0).fetchResult());\n        assertEquals(1, responseRef.get().get(0).queryResult().topDocs().topDocs.totalHits.value);\n        assertEquals(42, responseRef.get().get(0).queryResult().topDocs().topDocs.scoreDocs[0].doc);\n        assertNotNull(responseRef.get().get(1));\n        assertNull(responseRef.get().get(1).fetchResult());\n        assertEquals(1, responseRef.get().get(1).queryResult().topDocs().topDocs.totalHits.value);\n        assertEquals(84, responseRef.get().get(1).queryResult().topDocs().topDocs.scoreDocs[0].doc);\n        assertTrue(mockSearchPhaseContext.releasedSearchContexts.isEmpty());\n        assertEquals(2, mockSearchPhaseContext.numSuccess.get());\n    }\n","date":"2020-09-24 20:02:49","endLine":119,"groupId":"61624","id":19,"instanceNumber":1,"isCurCommit":0,"methodName":"testDfsWith2Shards","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/d7/1b14f3d12f3b81ea16db0394329d328ca0eefa.src","preCode":"    public void testDfsWith2Shards() throws IOException {\n        AtomicArray<DfsSearchResult> results = new AtomicArray<>(2);\n        AtomicReference<AtomicArray<SearchPhaseResult>> responseRef = new AtomicReference<>();\n        results.set(0, newSearchResult(0, new ShardSearchContextId(\"\", 1),\n            new SearchShardTarget(\"node1\", new ShardId(\"test\", \"na\", 0), null, OriginalIndices.NONE)));\n        results.set(1, newSearchResult(1, new ShardSearchContextId(\"\", 2),\n            new SearchShardTarget(\"node2\", new ShardId(\"test\", \"na\", 0), null, OriginalIndices.NONE)));\n        results.get(0).termsStatistics(new Term[0], new TermStatistics[0]);\n        results.get(1).termsStatistics(new Term[0], new TermStatistics[0]);\n\n        SearchTransportService searchTransportService = new SearchTransportService(null, null) {\n            @Override\n            public void sendExecuteQuery(Transport.Connection connection, QuerySearchRequest request, SearchTask task,\n                                         SearchActionListener<QuerySearchResult> listener) {\n                if (request.contextId().getId() == 1) {\n                    QuerySearchResult queryResult = new QuerySearchResult(new ShardSearchContextId(\"\", 123),\n                        new SearchShardTarget(\"node1\", new ShardId(\"test\", \"na\", 0), null, OriginalIndices.NONE), null);\n                    queryResult.topDocs(new TopDocsAndMaxScore(\n                            new TopDocs(new TotalHits(1, TotalHits.Relation.EQUAL_TO),\n                                    new ScoreDoc[] {new ScoreDoc(42, 1.0F)}), 2.0F), new DocValueFormat[0]);\n                    queryResult.size(2); \r\n                    listener.onResponse(queryResult);\n                } else if (request.contextId().getId() == 2) {\n                    QuerySearchResult queryResult = new QuerySearchResult(new ShardSearchContextId(\"\", 123),\n                        new SearchShardTarget(\"node2\", new ShardId(\"test\", \"na\", 0), null, OriginalIndices.NONE), null);\n                    queryResult.topDocs(new TopDocsAndMaxScore(\n                            new TopDocs(new TotalHits(1, TotalHits.Relation.EQUAL_TO), new ScoreDoc[] {new ScoreDoc(84, 2.0F)}), 2.0F),\n                            new DocValueFormat[0]);\n                    queryResult.size(2); \r\n                    listener.onResponse(queryResult);\n                } else {\n                    fail(\"no such request ID: \" + request.contextId());\n                }\n            }\n        };\n        MockSearchPhaseContext mockSearchPhaseContext = new MockSearchPhaseContext(2);\n        mockSearchPhaseContext.searchTransport = searchTransportService;\n        DfsQueryPhase phase = new DfsQueryPhase(results.asList(), null, searchPhaseController(),\n            (response) -> new SearchPhase(\"test\") {\n            @Override\n            public void run() throws IOException {\n                responseRef.set(response.results);\n            }\n        }, mockSearchPhaseContext, exc ->  {});\n        assertEquals(\"dfs_query\", phase.getName());\n        phase.run();\n        mockSearchPhaseContext.assertNoFailure();\n        assertNotNull(responseRef.get());\n        assertNotNull(responseRef.get().get(0));\n        assertNull(responseRef.get().get(0).fetchResult());\n        assertEquals(1, responseRef.get().get(0).queryResult().topDocs().topDocs.totalHits.value);\n        assertEquals(42, responseRef.get().get(0).queryResult().topDocs().topDocs.scoreDocs[0].doc);\n        assertNotNull(responseRef.get().get(1));\n        assertNull(responseRef.get().get(1).fetchResult());\n        assertEquals(1, responseRef.get().get(1).queryResult().topDocs().topDocs.totalHits.value);\n        assertEquals(84, responseRef.get().get(1).queryResult().topDocs().topDocs.scoreDocs[0].doc);\n        assertTrue(mockSearchPhaseContext.releasedSearchContexts.isEmpty());\n        assertEquals(2, mockSearchPhaseContext.numSuccess.get());\n    }\n","realPath":"server/src/test/java/org/elasticsearch/action/search/DfsQueryPhaseTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":57,"status":"M"},{"authorDate":"2020-09-24 20:02:49","commitOrder":10,"curCode":"    public void testFailPhaseOnException() throws IOException {\n        AtomicArray<DfsSearchResult> results = new AtomicArray<>(2);\n        AtomicReference<AtomicArray<SearchPhaseResult>> responseRef = new AtomicReference<>();\n        results.set(0, newSearchResult(0, new ShardSearchContextId(\"\", 1),\n            new SearchShardTarget(\"node1\", new ShardId(\"test\", \"na\", 0), null, OriginalIndices.NONE)));\n        results.set(1, newSearchResult(1, new ShardSearchContextId(\"\", 2),\n            new SearchShardTarget(\"node2\", new ShardId(\"test\", \"na\", 0), null, OriginalIndices.NONE)));\n        results.get(0).termsStatistics(new Term[0], new TermStatistics[0]);\n        results.get(1).termsStatistics(new Term[0], new TermStatistics[0]);\n\n        SearchTransportService searchTransportService = new SearchTransportService(null, null) {\n            @Override\n            public void sendExecuteQuery(Transport.Connection connection, QuerySearchRequest request, SearchTask task,\n                                         SearchActionListener<QuerySearchResult> listener) {\n                if (request.contextId().getId() == 1) {\n                    QuerySearchResult queryResult = new QuerySearchResult(new ShardSearchContextId(\"\", 123),\n                        new SearchShardTarget(\"node1\", new ShardId(\"test\", \"na\", 0), null, OriginalIndices.NONE), null);\n                    queryResult.topDocs(new TopDocsAndMaxScore(\n                            new TopDocs(new TotalHits(1, TotalHits.Relation.EQUAL_TO),\n                                    new ScoreDoc[] {new ScoreDoc(42, 1.0F)}), 2.0F), new DocValueFormat[0]);\n                    queryResult.size(2); \r\n                    listener.onResponse(queryResult);\n                } else if (request.contextId().getId() == 2) {\n                   throw new UncheckedIOException(new MockDirectoryWrapper.FakeIOException());\n                } else {\n                    fail(\"no such request ID: \" + request.contextId());\n                }\n            }\n        };\n        SearchPhaseController searchPhaseController = searchPhaseController();\n        MockSearchPhaseContext mockSearchPhaseContext = new MockSearchPhaseContext(2);\n        mockSearchPhaseContext.searchTransport = searchTransportService;\n        QueryPhaseResultConsumer consumer = searchPhaseController.newSearchPhaseResults(EsExecutors.newDirectExecutorService(),\n            new NoopCircuitBreaker(CircuitBreaker.REQUEST), SearchProgressListener.NOOP, mockSearchPhaseContext.searchRequest,\n            results.length(), exc -> {});\n        DfsQueryPhase phase = new DfsQueryPhase(results.asList(), null, consumer,\n            (response) -> new SearchPhase(\"test\") {\n                @Override\n                public void run() throws IOException {\n                    responseRef.set(response.results);\n                }\n            }, mockSearchPhaseContext);\n        assertEquals(\"dfs_query\", phase.getName());\n        expectThrows(UncheckedIOException.class, phase::run);\n        assertTrue(mockSearchPhaseContext.releasedSearchContexts.isEmpty()); \r\n    }\n","date":"2020-09-24 20:02:49","endLine":228,"groupId":"61623","id":20,"instanceNumber":2,"isCurCommit":0,"methodName":"testFailPhaseOnException","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/d7/1b14f3d12f3b81ea16db0394329d328ca0eefa.src","preCode":"    public void testFailPhaseOnException() throws IOException {\n        AtomicArray<DfsSearchResult> results = new AtomicArray<>(2);\n        AtomicReference<AtomicArray<SearchPhaseResult>> responseRef = new AtomicReference<>();\n        results.set(0, newSearchResult(0, new ShardSearchContextId(\"\", 1),\n            new SearchShardTarget(\"node1\", new ShardId(\"test\", \"na\", 0), null, OriginalIndices.NONE)));\n        results.set(1, newSearchResult(1, new ShardSearchContextId(\"\", 2),\n            new SearchShardTarget(\"node2\", new ShardId(\"test\", \"na\", 0), null, OriginalIndices.NONE)));\n        results.get(0).termsStatistics(new Term[0], new TermStatistics[0]);\n        results.get(1).termsStatistics(new Term[0], new TermStatistics[0]);\n\n        SearchTransportService searchTransportService = new SearchTransportService(null, null) {\n            @Override\n            public void sendExecuteQuery(Transport.Connection connection, QuerySearchRequest request, SearchTask task,\n                                         SearchActionListener<QuerySearchResult> listener) {\n                if (request.contextId().getId() == 1) {\n                    QuerySearchResult queryResult = new QuerySearchResult(new ShardSearchContextId(\"\", 123),\n                        new SearchShardTarget(\"node1\", new ShardId(\"test\", \"na\", 0), null, OriginalIndices.NONE), null);\n                    queryResult.topDocs(new TopDocsAndMaxScore(\n                            new TopDocs(new TotalHits(1, TotalHits.Relation.EQUAL_TO),\n                                    new ScoreDoc[] {new ScoreDoc(42, 1.0F)}), 2.0F), new DocValueFormat[0]);\n                    queryResult.size(2); \r\n                    listener.onResponse(queryResult);\n                } else if (request.contextId().getId() == 2) {\n                   throw new UncheckedIOException(new MockDirectoryWrapper.FakeIOException());\n                } else {\n                    fail(\"no such request ID: \" + request.contextId());\n                }\n            }\n        };\n        MockSearchPhaseContext mockSearchPhaseContext = new MockSearchPhaseContext(2);\n        mockSearchPhaseContext.searchTransport = searchTransportService;\n        DfsQueryPhase phase = new DfsQueryPhase(results.asList(), null, searchPhaseController(),\n            (response) -> new SearchPhase(\"test\") {\n                @Override\n                public void run() throws IOException {\n                    responseRef.set(response.results);\n                }\n            }, mockSearchPhaseContext, exc  -> {});\n        assertEquals(\"dfs_query\", phase.getName());\n        expectThrows(UncheckedIOException.class, phase::run);\n        assertTrue(mockSearchPhaseContext.releasedSearchContexts.isEmpty()); \r\n    }\n","realPath":"server/src/test/java/org/elasticsearch/action/search/DfsQueryPhaseTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":183,"status":"M"}],"commitId":"fbed2a1709c7657a1104379fba5687d7f94d0afa","commitMessage":"@@@Request-level circuit breaker support on coordinating nodes (#62223)\n\nThis commit allows coordinating node to account the memory used to perform partial and final reduce of\naggregations in the request circuit breaker. The search coordinator adds the memory that it used to save\nand reduce the results of shard aggregations in the request circuit breaker. Before any partial or final\nreduce.  the memory needed to reduce the aggregations is estimated and a CircuitBreakingException} is thrown\nif exceeds the maximum memory allowed in this breaker.\nThis size is estimated as roughly 1.5 times the size of the serialized aggregations that need to be reduced.\nThis estimation can be completely off for some aggregations but it is corrected with the real size after\nthe reduce completes.\nIf the reduce is successful.  we update the circuit breaker to remove the size of the source aggregations\nand replace the estimation with the serialized size of the newly reduced result.\n\nAs a follow up we could trigger partial reduces based on the memory accounted in the circuit breaker instead\nof relying on a static number of shard responses. A simpler follow up that could be done in the mean time is\nto [reduce the default batch reduce size](https://github.com/elastic/elasticsearch/issues/51857) of blocking\nsearch request to a more sane number.\n\nCloses #37182","date":"2020-09-24 20:02:49","modifiedFileCount":"25","status":"M","submitter":"Jim Ferenczi"},{"authorTime":"2020-10-15 00:13:36","codes":[{"authorDate":"2020-10-15 00:13:36","commitOrder":11,"curCode":"    public void testDfsWith2Shards() throws IOException {\n        AtomicArray<DfsSearchResult> results = new AtomicArray<>(2);\n        AtomicReference<AtomicArray<SearchPhaseResult>> responseRef = new AtomicReference<>();\n        results.set(0, newSearchResult(0, new ShardSearchContextId(\"\", 1),\n            new SearchShardTarget(\"node1\", new ShardId(\"test\", \"na\", 0), null, OriginalIndices.NONE)));\n        results.set(1, newSearchResult(1, new ShardSearchContextId(\"\", 2),\n            new SearchShardTarget(\"node2\", new ShardId(\"test\", \"na\", 0), null, OriginalIndices.NONE)));\n        results.get(0).termsStatistics(new Term[0], new TermStatistics[0]);\n        results.get(1).termsStatistics(new Term[0], new TermStatistics[0]);\n\n        SearchTransportService searchTransportService = new SearchTransportService(null, null, null) {\n            @Override\n            public void sendExecuteQuery(Transport.Connection connection, QuerySearchRequest request, SearchTask task,\n                                         SearchActionListener<QuerySearchResult> listener) {\n                if (request.contextId().getId() == 1) {\n                    QuerySearchResult queryResult = new QuerySearchResult(new ShardSearchContextId(\"\", 123),\n                        new SearchShardTarget(\"node1\", new ShardId(\"test\", \"na\", 0), null, OriginalIndices.NONE), null);\n                    queryResult.topDocs(new TopDocsAndMaxScore(\n                            new TopDocs(new TotalHits(1, TotalHits.Relation.EQUAL_TO),\n                                    new ScoreDoc[] {new ScoreDoc(42, 1.0F)}), 2.0F), new DocValueFormat[0]);\n                    queryResult.size(2); \r\n                    listener.onResponse(queryResult);\n                } else if (request.contextId().getId() == 2) {\n                    QuerySearchResult queryResult = new QuerySearchResult(new ShardSearchContextId(\"\", 123),\n                        new SearchShardTarget(\"node2\", new ShardId(\"test\", \"na\", 0), null, OriginalIndices.NONE), null);\n                    queryResult.topDocs(new TopDocsAndMaxScore(\n                            new TopDocs(new TotalHits(1, TotalHits.Relation.EQUAL_TO), new ScoreDoc[] {new ScoreDoc(84, 2.0F)}), 2.0F),\n                            new DocValueFormat[0]);\n                    queryResult.size(2); \r\n                    listener.onResponse(queryResult);\n                } else {\n                    fail(\"no such request ID: \" + request.contextId());\n                }\n            }\n        };\n        SearchPhaseController searchPhaseController = searchPhaseController();\n        MockSearchPhaseContext mockSearchPhaseContext = new MockSearchPhaseContext(2);\n        mockSearchPhaseContext.searchTransport = searchTransportService;\n        QueryPhaseResultConsumer consumer = searchPhaseController.newSearchPhaseResults(EsExecutors.newDirectExecutorService(),\n            new NoopCircuitBreaker(CircuitBreaker.REQUEST), SearchProgressListener.NOOP, mockSearchPhaseContext.searchRequest,\n            results.length(), exc -> {});\n        DfsQueryPhase phase = new DfsQueryPhase(results.asList(), null, consumer,\n            (response) -> new SearchPhase(\"test\") {\n            @Override\n            public void run() throws IOException {\n                responseRef.set(response.results);\n            }\n        }, mockSearchPhaseContext);\n        assertEquals(\"dfs_query\", phase.getName());\n        phase.run();\n        mockSearchPhaseContext.assertNoFailure();\n        assertNotNull(responseRef.get());\n        assertNotNull(responseRef.get().get(0));\n        assertNull(responseRef.get().get(0).fetchResult());\n        assertEquals(1, responseRef.get().get(0).queryResult().topDocs().topDocs.totalHits.value);\n        assertEquals(42, responseRef.get().get(0).queryResult().topDocs().topDocs.scoreDocs[0].doc);\n        assertNotNull(responseRef.get().get(1));\n        assertNull(responseRef.get().get(1).fetchResult());\n        assertEquals(1, responseRef.get().get(1).queryResult().topDocs().topDocs.totalHits.value);\n        assertEquals(84, responseRef.get().get(1).queryResult().topDocs().topDocs.scoreDocs[0].doc);\n        assertTrue(mockSearchPhaseContext.releasedSearchContexts.isEmpty());\n        assertEquals(2, mockSearchPhaseContext.numSuccess.get());\n    }\n","date":"2020-10-15 00:13:36","endLine":119,"groupId":"61624","id":21,"instanceNumber":1,"isCurCommit":0,"methodName":"testDfsWith2Shards","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/ca/367866906a2ec7956ddc8f56fa32047a900bcc.src","preCode":"    public void testDfsWith2Shards() throws IOException {\n        AtomicArray<DfsSearchResult> results = new AtomicArray<>(2);\n        AtomicReference<AtomicArray<SearchPhaseResult>> responseRef = new AtomicReference<>();\n        results.set(0, newSearchResult(0, new ShardSearchContextId(\"\", 1),\n            new SearchShardTarget(\"node1\", new ShardId(\"test\", \"na\", 0), null, OriginalIndices.NONE)));\n        results.set(1, newSearchResult(1, new ShardSearchContextId(\"\", 2),\n            new SearchShardTarget(\"node2\", new ShardId(\"test\", \"na\", 0), null, OriginalIndices.NONE)));\n        results.get(0).termsStatistics(new Term[0], new TermStatistics[0]);\n        results.get(1).termsStatistics(new Term[0], new TermStatistics[0]);\n\n        SearchTransportService searchTransportService = new SearchTransportService(null, null) {\n            @Override\n            public void sendExecuteQuery(Transport.Connection connection, QuerySearchRequest request, SearchTask task,\n                                         SearchActionListener<QuerySearchResult> listener) {\n                if (request.contextId().getId() == 1) {\n                    QuerySearchResult queryResult = new QuerySearchResult(new ShardSearchContextId(\"\", 123),\n                        new SearchShardTarget(\"node1\", new ShardId(\"test\", \"na\", 0), null, OriginalIndices.NONE), null);\n                    queryResult.topDocs(new TopDocsAndMaxScore(\n                            new TopDocs(new TotalHits(1, TotalHits.Relation.EQUAL_TO),\n                                    new ScoreDoc[] {new ScoreDoc(42, 1.0F)}), 2.0F), new DocValueFormat[0]);\n                    queryResult.size(2); \r\n                    listener.onResponse(queryResult);\n                } else if (request.contextId().getId() == 2) {\n                    QuerySearchResult queryResult = new QuerySearchResult(new ShardSearchContextId(\"\", 123),\n                        new SearchShardTarget(\"node2\", new ShardId(\"test\", \"na\", 0), null, OriginalIndices.NONE), null);\n                    queryResult.topDocs(new TopDocsAndMaxScore(\n                            new TopDocs(new TotalHits(1, TotalHits.Relation.EQUAL_TO), new ScoreDoc[] {new ScoreDoc(84, 2.0F)}), 2.0F),\n                            new DocValueFormat[0]);\n                    queryResult.size(2); \r\n                    listener.onResponse(queryResult);\n                } else {\n                    fail(\"no such request ID: \" + request.contextId());\n                }\n            }\n        };\n        SearchPhaseController searchPhaseController = searchPhaseController();\n        MockSearchPhaseContext mockSearchPhaseContext = new MockSearchPhaseContext(2);\n        mockSearchPhaseContext.searchTransport = searchTransportService;\n        QueryPhaseResultConsumer consumer = searchPhaseController.newSearchPhaseResults(EsExecutors.newDirectExecutorService(),\n            new NoopCircuitBreaker(CircuitBreaker.REQUEST), SearchProgressListener.NOOP, mockSearchPhaseContext.searchRequest,\n            results.length(), exc -> {});\n        DfsQueryPhase phase = new DfsQueryPhase(results.asList(), null, consumer,\n            (response) -> new SearchPhase(\"test\") {\n            @Override\n            public void run() throws IOException {\n                responseRef.set(response.results);\n            }\n        }, mockSearchPhaseContext);\n        assertEquals(\"dfs_query\", phase.getName());\n        phase.run();\n        mockSearchPhaseContext.assertNoFailure();\n        assertNotNull(responseRef.get());\n        assertNotNull(responseRef.get().get(0));\n        assertNull(responseRef.get().get(0).fetchResult());\n        assertEquals(1, responseRef.get().get(0).queryResult().topDocs().topDocs.totalHits.value);\n        assertEquals(42, responseRef.get().get(0).queryResult().topDocs().topDocs.scoreDocs[0].doc);\n        assertNotNull(responseRef.get().get(1));\n        assertNull(responseRef.get().get(1).fetchResult());\n        assertEquals(1, responseRef.get().get(1).queryResult().topDocs().topDocs.totalHits.value);\n        assertEquals(84, responseRef.get().get(1).queryResult().topDocs().topDocs.scoreDocs[0].doc);\n        assertTrue(mockSearchPhaseContext.releasedSearchContexts.isEmpty());\n        assertEquals(2, mockSearchPhaseContext.numSuccess.get());\n    }\n","realPath":"server/src/test/java/org/elasticsearch/action/search/DfsQueryPhaseTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":57,"status":"M"},{"authorDate":"2020-10-15 00:13:36","commitOrder":11,"curCode":"    public void testFailPhaseOnException() throws IOException {\n        AtomicArray<DfsSearchResult> results = new AtomicArray<>(2);\n        AtomicReference<AtomicArray<SearchPhaseResult>> responseRef = new AtomicReference<>();\n        results.set(0, newSearchResult(0, new ShardSearchContextId(\"\", 1),\n            new SearchShardTarget(\"node1\", new ShardId(\"test\", \"na\", 0), null, OriginalIndices.NONE)));\n        results.set(1, newSearchResult(1, new ShardSearchContextId(\"\", 2),\n            new SearchShardTarget(\"node2\", new ShardId(\"test\", \"na\", 0), null, OriginalIndices.NONE)));\n        results.get(0).termsStatistics(new Term[0], new TermStatistics[0]);\n        results.get(1).termsStatistics(new Term[0], new TermStatistics[0]);\n\n        SearchTransportService searchTransportService = new SearchTransportService(null, null, null) {\n            @Override\n            public void sendExecuteQuery(Transport.Connection connection, QuerySearchRequest request, SearchTask task,\n                                         SearchActionListener<QuerySearchResult> listener) {\n                if (request.contextId().getId() == 1) {\n                    QuerySearchResult queryResult = new QuerySearchResult(new ShardSearchContextId(\"\", 123),\n                        new SearchShardTarget(\"node1\", new ShardId(\"test\", \"na\", 0), null, OriginalIndices.NONE), null);\n                    queryResult.topDocs(new TopDocsAndMaxScore(\n                            new TopDocs(new TotalHits(1, TotalHits.Relation.EQUAL_TO),\n                                    new ScoreDoc[] {new ScoreDoc(42, 1.0F)}), 2.0F), new DocValueFormat[0]);\n                    queryResult.size(2); \r\n                    listener.onResponse(queryResult);\n                } else if (request.contextId().getId() == 2) {\n                   throw new UncheckedIOException(new MockDirectoryWrapper.FakeIOException());\n                } else {\n                    fail(\"no such request ID: \" + request.contextId());\n                }\n            }\n        };\n        SearchPhaseController searchPhaseController = searchPhaseController();\n        MockSearchPhaseContext mockSearchPhaseContext = new MockSearchPhaseContext(2);\n        mockSearchPhaseContext.searchTransport = searchTransportService;\n        QueryPhaseResultConsumer consumer = searchPhaseController.newSearchPhaseResults(EsExecutors.newDirectExecutorService(),\n            new NoopCircuitBreaker(CircuitBreaker.REQUEST), SearchProgressListener.NOOP, mockSearchPhaseContext.searchRequest,\n            results.length(), exc -> {});\n        DfsQueryPhase phase = new DfsQueryPhase(results.asList(), null, consumer,\n            (response) -> new SearchPhase(\"test\") {\n                @Override\n                public void run() throws IOException {\n                    responseRef.set(response.results);\n                }\n            }, mockSearchPhaseContext);\n        assertEquals(\"dfs_query\", phase.getName());\n        expectThrows(UncheckedIOException.class, phase::run);\n        assertTrue(mockSearchPhaseContext.releasedSearchContexts.isEmpty()); \r\n    }\n","date":"2020-10-15 00:13:36","endLine":228,"groupId":"68214","id":22,"instanceNumber":2,"isCurCommit":0,"methodName":"testFailPhaseOnException","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/ca/367866906a2ec7956ddc8f56fa32047a900bcc.src","preCode":"    public void testFailPhaseOnException() throws IOException {\n        AtomicArray<DfsSearchResult> results = new AtomicArray<>(2);\n        AtomicReference<AtomicArray<SearchPhaseResult>> responseRef = new AtomicReference<>();\n        results.set(0, newSearchResult(0, new ShardSearchContextId(\"\", 1),\n            new SearchShardTarget(\"node1\", new ShardId(\"test\", \"na\", 0), null, OriginalIndices.NONE)));\n        results.set(1, newSearchResult(1, new ShardSearchContextId(\"\", 2),\n            new SearchShardTarget(\"node2\", new ShardId(\"test\", \"na\", 0), null, OriginalIndices.NONE)));\n        results.get(0).termsStatistics(new Term[0], new TermStatistics[0]);\n        results.get(1).termsStatistics(new Term[0], new TermStatistics[0]);\n\n        SearchTransportService searchTransportService = new SearchTransportService(null, null) {\n            @Override\n            public void sendExecuteQuery(Transport.Connection connection, QuerySearchRequest request, SearchTask task,\n                                         SearchActionListener<QuerySearchResult> listener) {\n                if (request.contextId().getId() == 1) {\n                    QuerySearchResult queryResult = new QuerySearchResult(new ShardSearchContextId(\"\", 123),\n                        new SearchShardTarget(\"node1\", new ShardId(\"test\", \"na\", 0), null, OriginalIndices.NONE), null);\n                    queryResult.topDocs(new TopDocsAndMaxScore(\n                            new TopDocs(new TotalHits(1, TotalHits.Relation.EQUAL_TO),\n                                    new ScoreDoc[] {new ScoreDoc(42, 1.0F)}), 2.0F), new DocValueFormat[0]);\n                    queryResult.size(2); \r\n                    listener.onResponse(queryResult);\n                } else if (request.contextId().getId() == 2) {\n                   throw new UncheckedIOException(new MockDirectoryWrapper.FakeIOException());\n                } else {\n                    fail(\"no such request ID: \" + request.contextId());\n                }\n            }\n        };\n        SearchPhaseController searchPhaseController = searchPhaseController();\n        MockSearchPhaseContext mockSearchPhaseContext = new MockSearchPhaseContext(2);\n        mockSearchPhaseContext.searchTransport = searchTransportService;\n        QueryPhaseResultConsumer consumer = searchPhaseController.newSearchPhaseResults(EsExecutors.newDirectExecutorService(),\n            new NoopCircuitBreaker(CircuitBreaker.REQUEST), SearchProgressListener.NOOP, mockSearchPhaseContext.searchRequest,\n            results.length(), exc -> {});\n        DfsQueryPhase phase = new DfsQueryPhase(results.asList(), null, consumer,\n            (response) -> new SearchPhase(\"test\") {\n                @Override\n                public void run() throws IOException {\n                    responseRef.set(response.results);\n                }\n            }, mockSearchPhaseContext);\n        assertEquals(\"dfs_query\", phase.getName());\n        expectThrows(UncheckedIOException.class, phase::run);\n        assertTrue(mockSearchPhaseContext.releasedSearchContexts.isEmpty()); \r\n    }\n","realPath":"server/src/test/java/org/elasticsearch/action/search/DfsQueryPhaseTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":183,"status":"M"}],"commitId":"4ee18cd9ae1a73739b30a91afd06ae7ecd20a499","commitMessage":"@@@Cancel search on shard failure when partial results disallowed (#63520)\n\nIf the partial results parameter is false (which defaults to true).  then \nwe should cancel the search request when it hits a shard failure because \nthe caller won't consume the partial results.\n\nCloses #60278","date":"2020-10-15 00:13:36","modifiedFileCount":"13","status":"M","submitter":"Nhat Nguyen"},{"authorTime":"2021-04-27 19:31:29","codes":[{"authorDate":"2021-04-27 19:31:29","commitOrder":12,"curCode":"    public void testDfsWith2Shards() throws IOException {\n        AtomicArray<DfsSearchResult> results = new AtomicArray<>(2);\n        AtomicReference<AtomicArray<SearchPhaseResult>> responseRef = new AtomicReference<>();\n        results.set(0, newSearchResult(0, new ShardSearchContextId(\"\", 1),\n            new SearchShardTarget(\"node1\", new ShardId(\"test\", \"na\", 0), null, OriginalIndices.NONE)));\n        results.set(1, newSearchResult(1, new ShardSearchContextId(\"\", 2),\n            new SearchShardTarget(\"node2\", new ShardId(\"test\", \"na\", 0), null, OriginalIndices.NONE)));\n        results.get(0).termsStatistics(new Term[0], new TermStatistics[0]);\n        results.get(1).termsStatistics(new Term[0], new TermStatistics[0]);\n\n        SearchTransportService searchTransportService = new SearchTransportService(null, null, null) {\n            @Override\n            public void sendExecuteQuery(Transport.Connection connection, QuerySearchRequest request, SearchTask task,\n                                         SearchActionListener<QuerySearchResult> listener) {\n                if (request.contextId().getId() == 1) {\n                    QuerySearchResult queryResult = new QuerySearchResult(new ShardSearchContextId(\"\", 123),\n                        new SearchShardTarget(\"node1\", new ShardId(\"test\", \"na\", 0), null, OriginalIndices.NONE), null);\n                    queryResult.topDocs(new TopDocsAndMaxScore(\n                            new TopDocs(new TotalHits(1, TotalHits.Relation.EQUAL_TO),\n                                    new ScoreDoc[] {new ScoreDoc(42, 1.0F)}), 2.0F), new DocValueFormat[0]);\n                    queryResult.size(2); \r\n                    listener.onResponse(queryResult);\n                } else if (request.contextId().getId() == 2) {\n                    QuerySearchResult queryResult = new QuerySearchResult(new ShardSearchContextId(\"\", 123),\n                        new SearchShardTarget(\"node2\", new ShardId(\"test\", \"na\", 0), null, OriginalIndices.NONE), null);\n                    queryResult.topDocs(new TopDocsAndMaxScore(\n                            new TopDocs(new TotalHits(1, TotalHits.Relation.EQUAL_TO), new ScoreDoc[] {new ScoreDoc(84, 2.0F)}), 2.0F),\n                            new DocValueFormat[0]);\n                    queryResult.size(2); \r\n                    listener.onResponse(queryResult);\n                } else {\n                    fail(\"no such request ID: \" + request.contextId());\n                }\n            }\n        };\n        SearchPhaseController searchPhaseController = searchPhaseController();\n        MockSearchPhaseContext mockSearchPhaseContext = new MockSearchPhaseContext(2);\n        mockSearchPhaseContext.searchTransport = searchTransportService;\n        QueryPhaseResultConsumer consumer = searchPhaseController.newSearchPhaseResults(EsExecutors.DIRECT_EXECUTOR_SERVICE,\n            new NoopCircuitBreaker(CircuitBreaker.REQUEST), SearchProgressListener.NOOP, mockSearchPhaseContext.searchRequest,\n            results.length(), exc -> {});\n        DfsQueryPhase phase = new DfsQueryPhase(results.asList(), null, consumer,\n            (response) -> new SearchPhase(\"test\") {\n            @Override\n            public void run() throws IOException {\n                responseRef.set(response.results);\n            }\n        }, mockSearchPhaseContext);\n        assertEquals(\"dfs_query\", phase.getName());\n        phase.run();\n        mockSearchPhaseContext.assertNoFailure();\n        assertNotNull(responseRef.get());\n        assertNotNull(responseRef.get().get(0));\n        assertNull(responseRef.get().get(0).fetchResult());\n        assertEquals(1, responseRef.get().get(0).queryResult().topDocs().topDocs.totalHits.value);\n        assertEquals(42, responseRef.get().get(0).queryResult().topDocs().topDocs.scoreDocs[0].doc);\n        assertNotNull(responseRef.get().get(1));\n        assertNull(responseRef.get().get(1).fetchResult());\n        assertEquals(1, responseRef.get().get(1).queryResult().topDocs().topDocs.totalHits.value);\n        assertEquals(84, responseRef.get().get(1).queryResult().topDocs().topDocs.scoreDocs[0].doc);\n        assertTrue(mockSearchPhaseContext.releasedSearchContexts.isEmpty());\n        assertEquals(2, mockSearchPhaseContext.numSuccess.get());\n    }\n","date":"2021-04-27 19:31:29","endLine":108,"groupId":"105845","id":23,"instanceNumber":1,"isCurCommit":0,"methodName":"testDfsWith2Shards","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/e2/9590591ab98e9a7489f5d47e5a582379251d43.src","preCode":"    public void testDfsWith2Shards() throws IOException {\n        AtomicArray<DfsSearchResult> results = new AtomicArray<>(2);\n        AtomicReference<AtomicArray<SearchPhaseResult>> responseRef = new AtomicReference<>();\n        results.set(0, newSearchResult(0, new ShardSearchContextId(\"\", 1),\n            new SearchShardTarget(\"node1\", new ShardId(\"test\", \"na\", 0), null, OriginalIndices.NONE)));\n        results.set(1, newSearchResult(1, new ShardSearchContextId(\"\", 2),\n            new SearchShardTarget(\"node2\", new ShardId(\"test\", \"na\", 0), null, OriginalIndices.NONE)));\n        results.get(0).termsStatistics(new Term[0], new TermStatistics[0]);\n        results.get(1).termsStatistics(new Term[0], new TermStatistics[0]);\n\n        SearchTransportService searchTransportService = new SearchTransportService(null, null, null) {\n            @Override\n            public void sendExecuteQuery(Transport.Connection connection, QuerySearchRequest request, SearchTask task,\n                                         SearchActionListener<QuerySearchResult> listener) {\n                if (request.contextId().getId() == 1) {\n                    QuerySearchResult queryResult = new QuerySearchResult(new ShardSearchContextId(\"\", 123),\n                        new SearchShardTarget(\"node1\", new ShardId(\"test\", \"na\", 0), null, OriginalIndices.NONE), null);\n                    queryResult.topDocs(new TopDocsAndMaxScore(\n                            new TopDocs(new TotalHits(1, TotalHits.Relation.EQUAL_TO),\n                                    new ScoreDoc[] {new ScoreDoc(42, 1.0F)}), 2.0F), new DocValueFormat[0]);\n                    queryResult.size(2); \r\n                    listener.onResponse(queryResult);\n                } else if (request.contextId().getId() == 2) {\n                    QuerySearchResult queryResult = new QuerySearchResult(new ShardSearchContextId(\"\", 123),\n                        new SearchShardTarget(\"node2\", new ShardId(\"test\", \"na\", 0), null, OriginalIndices.NONE), null);\n                    queryResult.topDocs(new TopDocsAndMaxScore(\n                            new TopDocs(new TotalHits(1, TotalHits.Relation.EQUAL_TO), new ScoreDoc[] {new ScoreDoc(84, 2.0F)}), 2.0F),\n                            new DocValueFormat[0]);\n                    queryResult.size(2); \r\n                    listener.onResponse(queryResult);\n                } else {\n                    fail(\"no such request ID: \" + request.contextId());\n                }\n            }\n        };\n        SearchPhaseController searchPhaseController = searchPhaseController();\n        MockSearchPhaseContext mockSearchPhaseContext = new MockSearchPhaseContext(2);\n        mockSearchPhaseContext.searchTransport = searchTransportService;\n        QueryPhaseResultConsumer consumer = searchPhaseController.newSearchPhaseResults(EsExecutors.newDirectExecutorService(),\n            new NoopCircuitBreaker(CircuitBreaker.REQUEST), SearchProgressListener.NOOP, mockSearchPhaseContext.searchRequest,\n            results.length(), exc -> {});\n        DfsQueryPhase phase = new DfsQueryPhase(results.asList(), null, consumer,\n            (response) -> new SearchPhase(\"test\") {\n            @Override\n            public void run() throws IOException {\n                responseRef.set(response.results);\n            }\n        }, mockSearchPhaseContext);\n        assertEquals(\"dfs_query\", phase.getName());\n        phase.run();\n        mockSearchPhaseContext.assertNoFailure();\n        assertNotNull(responseRef.get());\n        assertNotNull(responseRef.get().get(0));\n        assertNull(responseRef.get().get(0).fetchResult());\n        assertEquals(1, responseRef.get().get(0).queryResult().topDocs().topDocs.totalHits.value);\n        assertEquals(42, responseRef.get().get(0).queryResult().topDocs().topDocs.scoreDocs[0].doc);\n        assertNotNull(responseRef.get().get(1));\n        assertNull(responseRef.get().get(1).fetchResult());\n        assertEquals(1, responseRef.get().get(1).queryResult().topDocs().topDocs.totalHits.value);\n        assertEquals(84, responseRef.get().get(1).queryResult().topDocs().topDocs.scoreDocs[0].doc);\n        assertTrue(mockSearchPhaseContext.releasedSearchContexts.isEmpty());\n        assertEquals(2, mockSearchPhaseContext.numSuccess.get());\n    }\n","realPath":"server/src/test/java/org/elasticsearch/action/search/DfsQueryPhaseTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":46,"status":"M"},{"authorDate":"2021-04-27 19:31:29","commitOrder":12,"curCode":"    public void testFailPhaseOnException() throws IOException {\n        AtomicArray<DfsSearchResult> results = new AtomicArray<>(2);\n        AtomicReference<AtomicArray<SearchPhaseResult>> responseRef = new AtomicReference<>();\n        results.set(0, newSearchResult(0, new ShardSearchContextId(\"\", 1),\n            new SearchShardTarget(\"node1\", new ShardId(\"test\", \"na\", 0), null, OriginalIndices.NONE)));\n        results.set(1, newSearchResult(1, new ShardSearchContextId(\"\", 2),\n            new SearchShardTarget(\"node2\", new ShardId(\"test\", \"na\", 0), null, OriginalIndices.NONE)));\n        results.get(0).termsStatistics(new Term[0], new TermStatistics[0]);\n        results.get(1).termsStatistics(new Term[0], new TermStatistics[0]);\n\n        SearchTransportService searchTransportService = new SearchTransportService(null, null, null) {\n            @Override\n            public void sendExecuteQuery(Transport.Connection connection, QuerySearchRequest request, SearchTask task,\n                                         SearchActionListener<QuerySearchResult> listener) {\n                if (request.contextId().getId() == 1) {\n                    QuerySearchResult queryResult = new QuerySearchResult(new ShardSearchContextId(\"\", 123),\n                        new SearchShardTarget(\"node1\", new ShardId(\"test\", \"na\", 0), null, OriginalIndices.NONE), null);\n                    queryResult.topDocs(new TopDocsAndMaxScore(\n                            new TopDocs(new TotalHits(1, TotalHits.Relation.EQUAL_TO),\n                                    new ScoreDoc[] {new ScoreDoc(42, 1.0F)}), 2.0F), new DocValueFormat[0]);\n                    queryResult.size(2); \r\n                    listener.onResponse(queryResult);\n                } else if (request.contextId().getId() == 2) {\n                   throw new UncheckedIOException(new MockDirectoryWrapper.FakeIOException());\n                } else {\n                    fail(\"no such request ID: \" + request.contextId());\n                }\n            }\n        };\n        SearchPhaseController searchPhaseController = searchPhaseController();\n        MockSearchPhaseContext mockSearchPhaseContext = new MockSearchPhaseContext(2);\n        mockSearchPhaseContext.searchTransport = searchTransportService;\n        QueryPhaseResultConsumer consumer = searchPhaseController.newSearchPhaseResults(EsExecutors.DIRECT_EXECUTOR_SERVICE,\n            new NoopCircuitBreaker(CircuitBreaker.REQUEST), SearchProgressListener.NOOP, mockSearchPhaseContext.searchRequest,\n            results.length(), exc -> {});\n        DfsQueryPhase phase = new DfsQueryPhase(results.asList(), null, consumer,\n            (response) -> new SearchPhase(\"test\") {\n                @Override\n                public void run() throws IOException {\n                    responseRef.set(response.results);\n                }\n            }, mockSearchPhaseContext);\n        assertEquals(\"dfs_query\", phase.getName());\n        expectThrows(UncheckedIOException.class, phase::run);\n        assertTrue(mockSearchPhaseContext.releasedSearchContexts.isEmpty()); \r\n    }\n","date":"2021-04-27 19:31:29","endLine":217,"groupId":"105845","id":24,"instanceNumber":2,"isCurCommit":0,"methodName":"testFailPhaseOnException","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/e2/9590591ab98e9a7489f5d47e5a582379251d43.src","preCode":"    public void testFailPhaseOnException() throws IOException {\n        AtomicArray<DfsSearchResult> results = new AtomicArray<>(2);\n        AtomicReference<AtomicArray<SearchPhaseResult>> responseRef = new AtomicReference<>();\n        results.set(0, newSearchResult(0, new ShardSearchContextId(\"\", 1),\n            new SearchShardTarget(\"node1\", new ShardId(\"test\", \"na\", 0), null, OriginalIndices.NONE)));\n        results.set(1, newSearchResult(1, new ShardSearchContextId(\"\", 2),\n            new SearchShardTarget(\"node2\", new ShardId(\"test\", \"na\", 0), null, OriginalIndices.NONE)));\n        results.get(0).termsStatistics(new Term[0], new TermStatistics[0]);\n        results.get(1).termsStatistics(new Term[0], new TermStatistics[0]);\n\n        SearchTransportService searchTransportService = new SearchTransportService(null, null, null) {\n            @Override\n            public void sendExecuteQuery(Transport.Connection connection, QuerySearchRequest request, SearchTask task,\n                                         SearchActionListener<QuerySearchResult> listener) {\n                if (request.contextId().getId() == 1) {\n                    QuerySearchResult queryResult = new QuerySearchResult(new ShardSearchContextId(\"\", 123),\n                        new SearchShardTarget(\"node1\", new ShardId(\"test\", \"na\", 0), null, OriginalIndices.NONE), null);\n                    queryResult.topDocs(new TopDocsAndMaxScore(\n                            new TopDocs(new TotalHits(1, TotalHits.Relation.EQUAL_TO),\n                                    new ScoreDoc[] {new ScoreDoc(42, 1.0F)}), 2.0F), new DocValueFormat[0]);\n                    queryResult.size(2); \r\n                    listener.onResponse(queryResult);\n                } else if (request.contextId().getId() == 2) {\n                   throw new UncheckedIOException(new MockDirectoryWrapper.FakeIOException());\n                } else {\n                    fail(\"no such request ID: \" + request.contextId());\n                }\n            }\n        };\n        SearchPhaseController searchPhaseController = searchPhaseController();\n        MockSearchPhaseContext mockSearchPhaseContext = new MockSearchPhaseContext(2);\n        mockSearchPhaseContext.searchTransport = searchTransportService;\n        QueryPhaseResultConsumer consumer = searchPhaseController.newSearchPhaseResults(EsExecutors.newDirectExecutorService(),\n            new NoopCircuitBreaker(CircuitBreaker.REQUEST), SearchProgressListener.NOOP, mockSearchPhaseContext.searchRequest,\n            results.length(), exc -> {});\n        DfsQueryPhase phase = new DfsQueryPhase(results.asList(), null, consumer,\n            (response) -> new SearchPhase(\"test\") {\n                @Override\n                public void run() throws IOException {\n                    responseRef.set(response.results);\n                }\n            }, mockSearchPhaseContext);\n        assertEquals(\"dfs_query\", phase.getName());\n        expectThrows(UncheckedIOException.class, phase::run);\n        assertTrue(mockSearchPhaseContext.releasedSearchContexts.isEmpty()); \r\n    }\n","realPath":"server/src/test/java/org/elasticsearch/action/search/DfsQueryPhaseTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":172,"status":"M"}],"commitId":"cf360cefb68002fb5871d879f3a07643209904dc","commitMessage":"@@@Merge branch 'master' into feature/vector-tiles\n","date":"2021-04-27 19:31:29","modifiedFileCount":"260","status":"M","submitter":"iverase"}]
