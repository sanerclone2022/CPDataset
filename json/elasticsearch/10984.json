[{"authorTime":"2018-04-26 03:22:53","codes":[{"authorDate":"2018-04-26 03:22:53","commitOrder":1,"curCode":"    public void testNullGuardEq() throws Throwable {\n        DefBootstrap.MIC site = (DefBootstrap.MIC) DefBootstrap.bootstrap(definition,\n                                                                          MethodHandles.publicLookup(),\n                                                                          \"eq\",\n                                                                          MethodType.methodType(boolean.class, Object.class, Object.class),\n                                                                          0,\n                                                                          DefBootstrap.BINARY_OPERATOR,\n                                                                          DefBootstrap.OPERATOR_ALLOWS_NULL);\n        MethodHandle handle = site.dynamicInvoker();\n        assertFalse((boolean) handle.invokeExact((Object)null, (Object)\"test\"));\n        assertTrue((boolean) handle.invokeExact((Object)null, (Object)null));\n    }\n","date":"2018-04-26 03:22:53","endLine":176,"groupId":"8959","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testNullGuardEq","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/8f/d96d67d5b5312e14517091f5b7c76e70f56a30.src","preCode":"    public void testNullGuardEq() throws Throwable {\n        DefBootstrap.MIC site = (DefBootstrap.MIC) DefBootstrap.bootstrap(definition,\n                                                                          MethodHandles.publicLookup(),\n                                                                          \"eq\",\n                                                                          MethodType.methodType(boolean.class, Object.class, Object.class),\n                                                                          0,\n                                                                          DefBootstrap.BINARY_OPERATOR,\n                                                                          DefBootstrap.OPERATOR_ALLOWS_NULL);\n        MethodHandle handle = site.dynamicInvoker();\n        assertFalse((boolean) handle.invokeExact((Object)null, (Object)\"test\"));\n        assertTrue((boolean) handle.invokeExact((Object)null, (Object)null));\n    }\n","realPath":"modules/lang-painless/src/test/java/org/elasticsearch/painless/DefBootstrapTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":165,"status":"B"},{"authorDate":"2018-04-26 03:22:53","commitOrder":1,"curCode":"    public void testNullGuardEqWhenCached() throws Throwable {\n        DefBootstrap.MIC site = (DefBootstrap.MIC) DefBootstrap.bootstrap(definition,\n                                                                          MethodHandles.publicLookup(),\n                                                                          \"eq\",\n                                                                          MethodType.methodType(boolean.class, Object.class, Object.class),\n                                                                          0,\n                                                                          DefBootstrap.BINARY_OPERATOR,\n                                                                          DefBootstrap.OPERATOR_ALLOWS_NULL);\n        MethodHandle handle = site.dynamicInvoker();\n        assertTrue((boolean) handle.invokeExact((Object)1, (Object)1));\n        assertFalse((boolean) handle.invokeExact((Object)null, (Object)\"test\"));\n        assertTrue((boolean) handle.invokeExact((Object)null, (Object)null));\n    }\n","date":"2018-04-26 03:22:53","endLine":190,"groupId":"8959","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testNullGuardEqWhenCached","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/8f/d96d67d5b5312e14517091f5b7c76e70f56a30.src","preCode":"    public void testNullGuardEqWhenCached() throws Throwable {\n        DefBootstrap.MIC site = (DefBootstrap.MIC) DefBootstrap.bootstrap(definition,\n                                                                          MethodHandles.publicLookup(),\n                                                                          \"eq\",\n                                                                          MethodType.methodType(boolean.class, Object.class, Object.class),\n                                                                          0,\n                                                                          DefBootstrap.BINARY_OPERATOR,\n                                                                          DefBootstrap.OPERATOR_ALLOWS_NULL);\n        MethodHandle handle = site.dynamicInvoker();\n        assertTrue((boolean) handle.invokeExact((Object)1, (Object)1));\n        assertFalse((boolean) handle.invokeExact((Object)null, (Object)\"test\"));\n        assertTrue((boolean) handle.invokeExact((Object)null, (Object)null));\n    }\n","realPath":"modules/lang-painless/src/test/java/org/elasticsearch/painless/DefBootstrapTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":178,"status":"B"}],"commitId":"d74fb9eb4559077e2d20b19a9ed62d9ff825027a","commitMessage":"@@@Opened x-pack ILM code\n","date":"2018-04-26 03:22:53","modifiedFileCount":"0","status":"B","submitter":"Tal Levy"},{"authorTime":"2018-07-10 07:44:12","codes":[{"authorDate":"2018-07-10 07:44:12","commitOrder":2,"curCode":"    public void testNullGuardEq() throws Throwable {\n        DefBootstrap.MIC site = (DefBootstrap.MIC) DefBootstrap.bootstrap(painlessLookup,\n                                                                          MethodHandles.publicLookup(),\n                                                                          \"eq\",\n                                                                          MethodType.methodType(boolean.class, Object.class, Object.class),\n                                                                          0,\n                                                                          DefBootstrap.BINARY_OPERATOR,\n                                                                          DefBootstrap.OPERATOR_ALLOWS_NULL);\n        MethodHandle handle = site.dynamicInvoker();\n        assertFalse((boolean) handle.invokeExact((Object)null, (Object)\"test\"));\n        assertTrue((boolean) handle.invokeExact((Object)null, (Object)null));\n    }\n","date":"2018-07-10 07:44:12","endLine":177,"groupId":"8959","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testNullGuardEq","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/ab/4844dd58bd96c3bb407428f7603552abc6a364.src","preCode":"    public void testNullGuardEq() throws Throwable {\n        DefBootstrap.MIC site = (DefBootstrap.MIC) DefBootstrap.bootstrap(definition,\n                                                                          MethodHandles.publicLookup(),\n                                                                          \"eq\",\n                                                                          MethodType.methodType(boolean.class, Object.class, Object.class),\n                                                                          0,\n                                                                          DefBootstrap.BINARY_OPERATOR,\n                                                                          DefBootstrap.OPERATOR_ALLOWS_NULL);\n        MethodHandle handle = site.dynamicInvoker();\n        assertFalse((boolean) handle.invokeExact((Object)null, (Object)\"test\"));\n        assertTrue((boolean) handle.invokeExact((Object)null, (Object)null));\n    }\n","realPath":"modules/lang-painless/src/test/java/org/elasticsearch/painless/DefBootstrapTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":166,"status":"M"},{"authorDate":"2018-07-10 07:44:12","commitOrder":2,"curCode":"    public void testNullGuardEqWhenCached() throws Throwable {\n        DefBootstrap.MIC site = (DefBootstrap.MIC) DefBootstrap.bootstrap(painlessLookup,\n                                                                          MethodHandles.publicLookup(),\n                                                                          \"eq\",\n                                                                          MethodType.methodType(boolean.class, Object.class, Object.class),\n                                                                          0,\n                                                                          DefBootstrap.BINARY_OPERATOR,\n                                                                          DefBootstrap.OPERATOR_ALLOWS_NULL);\n        MethodHandle handle = site.dynamicInvoker();\n        assertTrue((boolean) handle.invokeExact((Object)1, (Object)1));\n        assertFalse((boolean) handle.invokeExact((Object)null, (Object)\"test\"));\n        assertTrue((boolean) handle.invokeExact((Object)null, (Object)null));\n    }\n","date":"2018-07-10 07:44:12","endLine":191,"groupId":"8959","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testNullGuardEqWhenCached","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/ab/4844dd58bd96c3bb407428f7603552abc6a364.src","preCode":"    public void testNullGuardEqWhenCached() throws Throwable {\n        DefBootstrap.MIC site = (DefBootstrap.MIC) DefBootstrap.bootstrap(definition,\n                                                                          MethodHandles.publicLookup(),\n                                                                          \"eq\",\n                                                                          MethodType.methodType(boolean.class, Object.class, Object.class),\n                                                                          0,\n                                                                          DefBootstrap.BINARY_OPERATOR,\n                                                                          DefBootstrap.OPERATOR_ALLOWS_NULL);\n        MethodHandle handle = site.dynamicInvoker();\n        assertTrue((boolean) handle.invokeExact((Object)1, (Object)1));\n        assertFalse((boolean) handle.invokeExact((Object)null, (Object)\"test\"));\n        assertTrue((boolean) handle.invokeExact((Object)null, (Object)null));\n    }\n","realPath":"modules/lang-painless/src/test/java/org/elasticsearch/painless/DefBootstrapTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":179,"status":"M"}],"commitId":"e9cd0556c167b257bb588af5547923e5f13a99ca","commitMessage":"@@@Merge branch 'master' into index-lifecycle\n","date":"2018-07-10 07:44:12","modifiedFileCount":"627","status":"M","submitter":"Tal Levy"},{"authorTime":"2018-08-06 17:31:33","codes":[{"authorDate":"2018-08-06 17:31:33","commitOrder":3,"curCode":"    public void testNullGuardEq() throws Throwable {\n        DefBootstrap.MIC site = (DefBootstrap.MIC) DefBootstrap.bootstrap(painlessLookup,\n                                                                          Collections.emptyMap(),\n                                                                          MethodHandles.publicLookup(),\n                                                                          \"eq\",\n                                                                          MethodType.methodType(boolean.class, Object.class, Object.class),\n                                                                          0,\n                                                                          DefBootstrap.BINARY_OPERATOR,\n                                                                          DefBootstrap.OPERATOR_ALLOWS_NULL);\n        MethodHandle handle = site.dynamicInvoker();\n        assertFalse((boolean) handle.invokeExact((Object)null, (Object)\"test\"));\n        assertTrue((boolean) handle.invokeExact((Object)null, (Object)null));\n    }\n","date":"2018-08-06 17:31:33","endLine":185,"groupId":"8959","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testNullGuardEq","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/a9/861341a84f5307423c1e63225c5abe3c988c47.src","preCode":"    public void testNullGuardEq() throws Throwable {\n        DefBootstrap.MIC site = (DefBootstrap.MIC) DefBootstrap.bootstrap(painlessLookup,\n                                                                          MethodHandles.publicLookup(),\n                                                                          \"eq\",\n                                                                          MethodType.methodType(boolean.class, Object.class, Object.class),\n                                                                          0,\n                                                                          DefBootstrap.BINARY_OPERATOR,\n                                                                          DefBootstrap.OPERATOR_ALLOWS_NULL);\n        MethodHandle handle = site.dynamicInvoker();\n        assertFalse((boolean) handle.invokeExact((Object)null, (Object)\"test\"));\n        assertTrue((boolean) handle.invokeExact((Object)null, (Object)null));\n    }\n","realPath":"modules/lang-painless/src/test/java/org/elasticsearch/painless/DefBootstrapTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":173,"status":"M"},{"authorDate":"2018-08-06 17:31:33","commitOrder":3,"curCode":"    public void testNullGuardEqWhenCached() throws Throwable {\n        DefBootstrap.MIC site = (DefBootstrap.MIC) DefBootstrap.bootstrap(painlessLookup,\n                                                                          Collections.emptyMap(),\n                                                                          MethodHandles.publicLookup(),\n                                                                          \"eq\",\n                                                                          MethodType.methodType(boolean.class, Object.class, Object.class),\n                                                                          0,\n                                                                          DefBootstrap.BINARY_OPERATOR,\n                                                                          DefBootstrap.OPERATOR_ALLOWS_NULL);\n        MethodHandle handle = site.dynamicInvoker();\n        assertTrue((boolean) handle.invokeExact((Object)1, (Object)1));\n        assertFalse((boolean) handle.invokeExact((Object)null, (Object)\"test\"));\n        assertTrue((boolean) handle.invokeExact((Object)null, (Object)null));\n    }\n","date":"2018-08-06 17:31:33","endLine":200,"groupId":"8959","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testNullGuardEqWhenCached","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/a9/861341a84f5307423c1e63225c5abe3c988c47.src","preCode":"    public void testNullGuardEqWhenCached() throws Throwable {\n        DefBootstrap.MIC site = (DefBootstrap.MIC) DefBootstrap.bootstrap(painlessLookup,\n                                                                          MethodHandles.publicLookup(),\n                                                                          \"eq\",\n                                                                          MethodType.methodType(boolean.class, Object.class, Object.class),\n                                                                          0,\n                                                                          DefBootstrap.BINARY_OPERATOR,\n                                                                          DefBootstrap.OPERATOR_ALLOWS_NULL);\n        MethodHandle handle = site.dynamicInvoker();\n        assertTrue((boolean) handle.invokeExact((Object)1, (Object)1));\n        assertFalse((boolean) handle.invokeExact((Object)null, (Object)\"test\"));\n        assertTrue((boolean) handle.invokeExact((Object)null, (Object)null));\n    }\n","realPath":"modules/lang-painless/src/test/java/org/elasticsearch/painless/DefBootstrapTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":187,"status":"M"}],"commitId":"c13b85d6d38a303e3506667a2b3e732912a2f1de","commitMessage":"@@@Merge branch 'master' into index-lifecycle\n","date":"2018-08-06 17:31:33","modifiedFileCount":"25","status":"M","submitter":"Colin Goodheart-Smithe"},{"authorTime":"2019-09-30 23:18:34","codes":[{"authorDate":"2019-09-30 23:18:34","commitOrder":4,"curCode":"    public void testNullGuardEq() throws Throwable {\n        DefBootstrap.MIC site = (DefBootstrap.MIC) DefBootstrap.bootstrap(painlessLookup,\n                                                                          new FunctionTable(),\n                                                                          MethodHandles.publicLookup(),\n                                                                          \"eq\",\n                                                                          MethodType.methodType(boolean.class, Object.class, Object.class),\n                                                                          0,\n                                                                          DefBootstrap.BINARY_OPERATOR,\n                                                                          DefBootstrap.OPERATOR_ALLOWS_NULL);\n        MethodHandle handle = site.dynamicInvoker();\n        assertFalse((boolean) handle.invokeExact((Object)null, (Object)\"test\"));\n        assertTrue((boolean) handle.invokeExact((Object)null, (Object)null));\n    }\n","date":"2019-09-30 23:18:34","endLine":186,"groupId":"8959","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"testNullGuardEq","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/c9/e77080cfcb9a5d7be1e222c4064ed85a9ad919.src","preCode":"    public void testNullGuardEq() throws Throwable {\n        DefBootstrap.MIC site = (DefBootstrap.MIC) DefBootstrap.bootstrap(painlessLookup,\n                                                                          Collections.emptyMap(),\n                                                                          MethodHandles.publicLookup(),\n                                                                          \"eq\",\n                                                                          MethodType.methodType(boolean.class, Object.class, Object.class),\n                                                                          0,\n                                                                          DefBootstrap.BINARY_OPERATOR,\n                                                                          DefBootstrap.OPERATOR_ALLOWS_NULL);\n        MethodHandle handle = site.dynamicInvoker();\n        assertFalse((boolean) handle.invokeExact((Object)null, (Object)\"test\"));\n        assertTrue((boolean) handle.invokeExact((Object)null, (Object)null));\n    }\n","realPath":"modules/lang-painless/src/test/java/org/elasticsearch/painless/DefBootstrapTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":174,"status":"M"},{"authorDate":"2019-09-30 23:18:34","commitOrder":4,"curCode":"    public void testNullGuardEqWhenCached() throws Throwable {\n        DefBootstrap.MIC site = (DefBootstrap.MIC) DefBootstrap.bootstrap(painlessLookup,\n                                                                          new FunctionTable(),\n                                                                          MethodHandles.publicLookup(),\n                                                                          \"eq\",\n                                                                          MethodType.methodType(boolean.class, Object.class, Object.class),\n                                                                          0,\n                                                                          DefBootstrap.BINARY_OPERATOR,\n                                                                          DefBootstrap.OPERATOR_ALLOWS_NULL);\n        MethodHandle handle = site.dynamicInvoker();\n        assertTrue((boolean) handle.invokeExact((Object)1, (Object)1));\n        assertFalse((boolean) handle.invokeExact((Object)null, (Object)\"test\"));\n        assertTrue((boolean) handle.invokeExact((Object)null, (Object)null));\n    }\n","date":"2019-09-30 23:18:34","endLine":201,"groupId":"8959","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"testNullGuardEqWhenCached","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/c9/e77080cfcb9a5d7be1e222c4064ed85a9ad919.src","preCode":"    public void testNullGuardEqWhenCached() throws Throwable {\n        DefBootstrap.MIC site = (DefBootstrap.MIC) DefBootstrap.bootstrap(painlessLookup,\n                                                                          Collections.emptyMap(),\n                                                                          MethodHandles.publicLookup(),\n                                                                          \"eq\",\n                                                                          MethodType.methodType(boolean.class, Object.class, Object.class),\n                                                                          0,\n                                                                          DefBootstrap.BINARY_OPERATOR,\n                                                                          DefBootstrap.OPERATOR_ALLOWS_NULL);\n        MethodHandle handle = site.dynamicInvoker();\n        assertTrue((boolean) handle.invokeExact((Object)1, (Object)1));\n        assertFalse((boolean) handle.invokeExact((Object)null, (Object)\"test\"));\n        assertTrue((boolean) handle.invokeExact((Object)null, (Object)null));\n    }\n","realPath":"modules/lang-painless/src/test/java/org/elasticsearch/painless/DefBootstrapTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":188,"status":"M"}],"commitId":"1c705bc4b3ec11a66ee2e4440ea4e5633d5fc8e7","commitMessage":"@@@Move Painless local methods to a dedicated FunctionTable (#46889)\n\nThis moves the way Painless maintains function headers for use across compilation into its own class - FunctionTable. This allows us to store a dedicated object for function lookup at runtime for the def type instead of a loose Map of functions.","date":"2019-09-30 23:18:34","modifiedFileCount":"72","status":"M","submitter":"Jack Conradson"},{"authorTime":"2020-10-05 22:15:14","codes":[{"authorDate":"2020-10-05 22:15:14","commitOrder":5,"curCode":"    public void testNullGuardEq() throws Throwable {\n        DefBootstrap.MIC site = (DefBootstrap.MIC) DefBootstrap.bootstrap(painlessLookup,\n                                                                          new FunctionTable(),\n                                                                          Collections.emptyMap(),\n                                                                          MethodHandles.publicLookup(),\n                                                                          \"eq\",\n                                                                          MethodType.methodType(boolean.class, Object.class, Object.class),\n                                                                          0,\n                                                                          DefBootstrap.BINARY_OPERATOR,\n                                                                          DefBootstrap.OPERATOR_ALLOWS_NULL);\n        MethodHandle handle = site.dynamicInvoker();\n        assertFalse((boolean) handle.invokeExact((Object)null, (Object)\"test\"));\n        assertTrue((boolean) handle.invokeExact((Object)null, (Object)null));\n    }\n","date":"2020-10-05 22:15:14","endLine":193,"groupId":"10984","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"testNullGuardEq","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/a6/40e2b5c6a570e4389ed41588843a72b7db78bb.src","preCode":"    public void testNullGuardEq() throws Throwable {\n        DefBootstrap.MIC site = (DefBootstrap.MIC) DefBootstrap.bootstrap(painlessLookup,\n                                                                          new FunctionTable(),\n                                                                          MethodHandles.publicLookup(),\n                                                                          \"eq\",\n                                                                          MethodType.methodType(boolean.class, Object.class, Object.class),\n                                                                          0,\n                                                                          DefBootstrap.BINARY_OPERATOR,\n                                                                          DefBootstrap.OPERATOR_ALLOWS_NULL);\n        MethodHandle handle = site.dynamicInvoker();\n        assertFalse((boolean) handle.invokeExact((Object)null, (Object)\"test\"));\n        assertTrue((boolean) handle.invokeExact((Object)null, (Object)null));\n    }\n","realPath":"modules/lang-painless/src/test/java/org/elasticsearch/painless/DefBootstrapTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":180,"status":"M"},{"authorDate":"2020-10-05 22:15:14","commitOrder":5,"curCode":"    public void testNullGuardEqWhenCached() throws Throwable {\n        DefBootstrap.MIC site = (DefBootstrap.MIC) DefBootstrap.bootstrap(painlessLookup,\n                                                                          new FunctionTable(),\n                                                                          Collections.emptyMap(),\n                                                                          MethodHandles.publicLookup(),\n                                                                          \"eq\",\n                                                                          MethodType.methodType(boolean.class, Object.class, Object.class),\n                                                                          0,\n                                                                          DefBootstrap.BINARY_OPERATOR,\n                                                                          DefBootstrap.OPERATOR_ALLOWS_NULL);\n        MethodHandle handle = site.dynamicInvoker();\n        assertTrue((boolean) handle.invokeExact((Object)1, (Object)1));\n        assertFalse((boolean) handle.invokeExact((Object)null, (Object)\"test\"));\n        assertTrue((boolean) handle.invokeExact((Object)null, (Object)null));\n    }\n","date":"2020-10-05 22:15:14","endLine":209,"groupId":"10984","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"testNullGuardEqWhenCached","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/a6/40e2b5c6a570e4389ed41588843a72b7db78bb.src","preCode":"    public void testNullGuardEqWhenCached() throws Throwable {\n        DefBootstrap.MIC site = (DefBootstrap.MIC) DefBootstrap.bootstrap(painlessLookup,\n                                                                          new FunctionTable(),\n                                                                          MethodHandles.publicLookup(),\n                                                                          \"eq\",\n                                                                          MethodType.methodType(boolean.class, Object.class, Object.class),\n                                                                          0,\n                                                                          DefBootstrap.BINARY_OPERATOR,\n                                                                          DefBootstrap.OPERATOR_ALLOWS_NULL);\n        MethodHandle handle = site.dynamicInvoker();\n        assertTrue((boolean) handle.invokeExact((Object)1, (Object)1));\n        assertFalse((boolean) handle.invokeExact((Object)null, (Object)\"test\"));\n        assertTrue((boolean) handle.invokeExact((Object)null, (Object)null));\n    }\n","realPath":"modules/lang-painless/src/test/java/org/elasticsearch/painless/DefBootstrapTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":195,"status":"M"}],"commitId":"93f29a4f18b0326da16186a741c30bf248e2d65b","commitMessage":"@@@Scripting: enable regular expressions by default (#63029)\n\n* Setting `script.painless.regex.enabled` has a new option. \n  `use-factor`.  the default.  This defaults to using regular\n  expressions but limiting the complexity of the regular\n  expressions.\n\n  In addition to `use-factor`.  the setting can be `true`.  as\n  before.  which enables regular expressions without limiting them.\n\n  `false` totally disables regular expressions.  which was the\n  old default.\n\n* New setting `script.painless.regex.limit-factor`.  This limits\n  regular expression complexity by limiting the number characters\n  a regular expression can consider based on input length.\n\n  The default is `6`.  so a regular expression can consider\n  `6` * input length number of characters.  With input\n  `foobarbaz` (length `9`).  for example.  the regular expression\n  can consider `54` (`6 * 9`) characters.\n\n  This reduces the impact of exponential backtracking in Java's\n  regular expression engine.\n\n* add `@inject_constant` annotation to whitelist.\n\n  This annotation signals that a compiler settings will\n  be injected at the beginning of a whitelisted method.\n\n  The format is `argnum=settingname`:\n  `1=foo_setting 2=bar_setting`.\n\n  Argument numbers must start at one and must be sequential.\n\n* Augment\n  `Pattern.split(CharSequence)`\n  `Pattern.split(CharSequence.  int)`. \n  `Pattern.splitAsStream(CharSequence)`\n  `Pattern.matcher(CharSequence)`\n  to take the value of `script.painless.regex.limit-factor` as a\n  an injected parameter.  limiting as explained above when this\n  setting is in use.\n\nFixes: #49873","date":"2020-10-05 22:15:14","modifiedFileCount":"23","status":"M","submitter":"Stuart Tettemer"}]
