[{"authorTime":"2019-10-25 01:13:06","codes":[{"authorDate":"2019-10-25 01:13:06","commitOrder":1,"curCode":"    public void testStrategyChangeMeansThatStrategyMustBeRebuilt() {\n        ConnectionManager connectionManager = new ConnectionManager(Settings.EMPTY, mock(Transport.class));\n        RemoteConnectionManager remoteConnectionManager = new RemoteConnectionManager(\"cluster-alias\", connectionManager);\n        FakeConnectionStrategy first = new FakeConnectionStrategy(\"cluster-alias\", mock(TransportService.class), remoteConnectionManager,\n            RemoteConnectionStrategy.ConnectionStrategy.SIMPLE);\n        Settings newSettings = Settings.builder()\n            .put(RemoteConnectionStrategy.REMOTE_CONNECTION_MODE.getConcreteSettingForNamespace(\"cluster-alias\").getKey(), \"sniff\")\n            .build();\n        assertTrue(first.shouldRebuildConnection(newSettings));\n    }\n","date":"2019-10-25 01:13:06","endLine":41,"groupId":"1927","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testStrategyChangeMeansThatStrategyMustBeRebuilt","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/e6/69cfb1956a443039c095d460b7261bc65382e3.src","preCode":"    public void testStrategyChangeMeansThatStrategyMustBeRebuilt() {\n        ConnectionManager connectionManager = new ConnectionManager(Settings.EMPTY, mock(Transport.class));\n        RemoteConnectionManager remoteConnectionManager = new RemoteConnectionManager(\"cluster-alias\", connectionManager);\n        FakeConnectionStrategy first = new FakeConnectionStrategy(\"cluster-alias\", mock(TransportService.class), remoteConnectionManager,\n            RemoteConnectionStrategy.ConnectionStrategy.SIMPLE);\n        Settings newSettings = Settings.builder()\n            .put(RemoteConnectionStrategy.REMOTE_CONNECTION_MODE.getConcreteSettingForNamespace(\"cluster-alias\").getKey(), \"sniff\")\n            .build();\n        assertTrue(first.shouldRebuildConnection(newSettings));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/transport/RemoteConnectionStrategyTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":32,"status":"B"},{"authorDate":"2019-10-25 01:13:06","commitOrder":1,"curCode":"    public void testSameStrategyChangeMeansThatStrategyDoesNotNeedToBeRebuilt() {\n        ConnectionManager connectionManager = new ConnectionManager(Settings.EMPTY, mock(Transport.class));\n        RemoteConnectionManager remoteConnectionManager = new RemoteConnectionManager(\"cluster-alias\", connectionManager);\n        FakeConnectionStrategy first = new FakeConnectionStrategy(\"cluster-alias\", mock(TransportService.class), remoteConnectionManager,\n            RemoteConnectionStrategy.ConnectionStrategy.SIMPLE);\n        Settings newSettings = Settings.builder()\n            .put(RemoteConnectionStrategy.REMOTE_CONNECTION_MODE.getConcreteSettingForNamespace(\"cluster-alias\").getKey(), \"simple\")\n            .build();\n        assertFalse(first.shouldRebuildConnection(newSettings));\n    }\n","date":"2019-10-25 01:13:06","endLine":52,"groupId":"1927","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testSameStrategyChangeMeansThatStrategyDoesNotNeedToBeRebuilt","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/e6/69cfb1956a443039c095d460b7261bc65382e3.src","preCode":"    public void testSameStrategyChangeMeansThatStrategyDoesNotNeedToBeRebuilt() {\n        ConnectionManager connectionManager = new ConnectionManager(Settings.EMPTY, mock(Transport.class));\n        RemoteConnectionManager remoteConnectionManager = new RemoteConnectionManager(\"cluster-alias\", connectionManager);\n        FakeConnectionStrategy first = new FakeConnectionStrategy(\"cluster-alias\", mock(TransportService.class), remoteConnectionManager,\n            RemoteConnectionStrategy.ConnectionStrategy.SIMPLE);\n        Settings newSettings = Settings.builder()\n            .put(RemoteConnectionStrategy.REMOTE_CONNECTION_MODE.getConcreteSettingForNamespace(\"cluster-alias\").getKey(), \"simple\")\n            .build();\n        assertFalse(first.shouldRebuildConnection(newSettings));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/transport/RemoteConnectionStrategyTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":43,"status":"B"}],"commitId":"0600e6587815a2172417bca83b3403271f19a04c","commitMessage":"@@@Make remote setting updates support diff strategies (#47891)\n\nCurrently the entire remote cluster settings infrastructure is designed\naround the sniff strategy. As we introduce an additional conneciton\nstrategy this infrastructure needs to be modified to support it. This\ncommit modifies the code so that the strategy implementations will tell\nthe service if the connection needs to be torn down and rebuilt.\n\nAs part of this commit.  we will wait 10 seconds for new clusters to\nconnect when they are added through the \"update\" settings\ninfrastructure.","date":"2019-10-25 01:13:06","modifiedFileCount":"14","status":"B","submitter":"Tim Brooks"},{"authorTime":"2019-12-20 00:31:28","codes":[{"authorDate":"2019-12-20 00:31:28","commitOrder":2,"curCode":"    public void testStrategyChangeMeansThatStrategyMustBeRebuilt() {\n        ConnectionManager connectionManager = new ConnectionManager(Settings.EMPTY, mock(Transport.class));\n        RemoteConnectionManager remoteConnectionManager = new RemoteConnectionManager(\"cluster-alias\", connectionManager);\n        FakeConnectionStrategy first = new FakeConnectionStrategy(\"cluster-alias\", mock(TransportService.class), remoteConnectionManager,\n            RemoteConnectionStrategy.ConnectionStrategy.PROXY);\n        Settings newSettings = Settings.builder()\n            .put(RemoteConnectionStrategy.REMOTE_CONNECTION_MODE.getConcreteSettingForNamespace(\"cluster-alias\").getKey(), \"sniff\")\n            .build();\n        assertTrue(first.shouldRebuildConnection(newSettings));\n    }\n","date":"2019-12-20 00:31:28","endLine":41,"groupId":"1927","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testStrategyChangeMeansThatStrategyMustBeRebuilt","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/81/4a3bd1913b196c8bd257775ac734447b81cb22.src","preCode":"    public void testStrategyChangeMeansThatStrategyMustBeRebuilt() {\n        ConnectionManager connectionManager = new ConnectionManager(Settings.EMPTY, mock(Transport.class));\n        RemoteConnectionManager remoteConnectionManager = new RemoteConnectionManager(\"cluster-alias\", connectionManager);\n        FakeConnectionStrategy first = new FakeConnectionStrategy(\"cluster-alias\", mock(TransportService.class), remoteConnectionManager,\n            RemoteConnectionStrategy.ConnectionStrategy.SIMPLE);\n        Settings newSettings = Settings.builder()\n            .put(RemoteConnectionStrategy.REMOTE_CONNECTION_MODE.getConcreteSettingForNamespace(\"cluster-alias\").getKey(), \"sniff\")\n            .build();\n        assertTrue(first.shouldRebuildConnection(newSettings));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/transport/RemoteConnectionStrategyTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":32,"status":"M"},{"authorDate":"2019-12-20 00:31:28","commitOrder":2,"curCode":"    public void testSameStrategyChangeMeansThatStrategyDoesNotNeedToBeRebuilt() {\n        ConnectionManager connectionManager = new ConnectionManager(Settings.EMPTY, mock(Transport.class));\n        RemoteConnectionManager remoteConnectionManager = new RemoteConnectionManager(\"cluster-alias\", connectionManager);\n        FakeConnectionStrategy first = new FakeConnectionStrategy(\"cluster-alias\", mock(TransportService.class), remoteConnectionManager,\n            RemoteConnectionStrategy.ConnectionStrategy.PROXY);\n        Settings newSettings = Settings.builder()\n            .put(RemoteConnectionStrategy.REMOTE_CONNECTION_MODE.getConcreteSettingForNamespace(\"cluster-alias\").getKey(), \"proxy\")\n            .build();\n        assertFalse(first.shouldRebuildConnection(newSettings));\n    }\n","date":"2019-12-20 00:31:28","endLine":52,"groupId":"1927","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testSameStrategyChangeMeansThatStrategyDoesNotNeedToBeRebuilt","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/81/4a3bd1913b196c8bd257775ac734447b81cb22.src","preCode":"    public void testSameStrategyChangeMeansThatStrategyDoesNotNeedToBeRebuilt() {\n        ConnectionManager connectionManager = new ConnectionManager(Settings.EMPTY, mock(Transport.class));\n        RemoteConnectionManager remoteConnectionManager = new RemoteConnectionManager(\"cluster-alias\", connectionManager);\n        FakeConnectionStrategy first = new FakeConnectionStrategy(\"cluster-alias\", mock(TransportService.class), remoteConnectionManager,\n            RemoteConnectionStrategy.ConnectionStrategy.SIMPLE);\n        Settings newSettings = Settings.builder()\n            .put(RemoteConnectionStrategy.REMOTE_CONNECTION_MODE.getConcreteSettingForNamespace(\"cluster-alias\").getKey(), \"simple\")\n            .build();\n        assertFalse(first.shouldRebuildConnection(newSettings));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/transport/RemoteConnectionStrategyTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":43,"status":"M"}],"commitId":"342a2920a9659ec9c5a8042ddb1d4b6aef965a71","commitMessage":"@@@Rename the remote connection mode simple to proxy (#50291)\n\nThis commit renames the simple connection mode to the proxy connection\nmode for remote cluster connections. In order to do this.  the mode specific\nsettings which we namespaced by their mode (ex: sniff.seed and\nproxy.addresses) have been reverted.","date":"2019-12-20 00:31:28","modifiedFileCount":"16","status":"M","submitter":"Tim Brooks"},{"authorTime":"2020-02-01 00:43:25","codes":[{"authorDate":"2020-02-01 00:43:25","commitOrder":3,"curCode":"    public void testStrategyChangeMeansThatStrategyMustBeRebuilt() {\n        ClusterConnectionManager connectionManager = new ClusterConnectionManager(Settings.EMPTY, mock(Transport.class));\n        RemoteConnectionManager remoteConnectionManager = new RemoteConnectionManager(\"cluster-alias\", connectionManager);\n        FakeConnectionStrategy first = new FakeConnectionStrategy(\"cluster-alias\", mock(TransportService.class), remoteConnectionManager,\n            RemoteConnectionStrategy.ConnectionStrategy.PROXY);\n        Settings newSettings = Settings.builder()\n            .put(RemoteConnectionStrategy.REMOTE_CONNECTION_MODE.getConcreteSettingForNamespace(\"cluster-alias\").getKey(), \"sniff\")\n            .build();\n        assertTrue(first.shouldRebuildConnection(newSettings));\n    }\n","date":"2020-02-01 00:43:25","endLine":41,"groupId":"1927","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testStrategyChangeMeansThatStrategyMustBeRebuilt","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/c9/ce9a4c9a6dfa686b8e47100d1977c5907730dd.src","preCode":"    public void testStrategyChangeMeansThatStrategyMustBeRebuilt() {\n        ConnectionManager connectionManager = new ConnectionManager(Settings.EMPTY, mock(Transport.class));\n        RemoteConnectionManager remoteConnectionManager = new RemoteConnectionManager(\"cluster-alias\", connectionManager);\n        FakeConnectionStrategy first = new FakeConnectionStrategy(\"cluster-alias\", mock(TransportService.class), remoteConnectionManager,\n            RemoteConnectionStrategy.ConnectionStrategy.PROXY);\n        Settings newSettings = Settings.builder()\n            .put(RemoteConnectionStrategy.REMOTE_CONNECTION_MODE.getConcreteSettingForNamespace(\"cluster-alias\").getKey(), \"sniff\")\n            .build();\n        assertTrue(first.shouldRebuildConnection(newSettings));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/transport/RemoteConnectionStrategyTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":32,"status":"M"},{"authorDate":"2020-02-01 00:43:25","commitOrder":3,"curCode":"    public void testSameStrategyChangeMeansThatStrategyDoesNotNeedToBeRebuilt() {\n        ClusterConnectionManager connectionManager = new ClusterConnectionManager(Settings.EMPTY, mock(Transport.class));\n        RemoteConnectionManager remoteConnectionManager = new RemoteConnectionManager(\"cluster-alias\", connectionManager);\n        FakeConnectionStrategy first = new FakeConnectionStrategy(\"cluster-alias\", mock(TransportService.class), remoteConnectionManager,\n            RemoteConnectionStrategy.ConnectionStrategy.PROXY);\n        Settings newSettings = Settings.builder()\n            .put(RemoteConnectionStrategy.REMOTE_CONNECTION_MODE.getConcreteSettingForNamespace(\"cluster-alias\").getKey(), \"proxy\")\n            .build();\n        assertFalse(first.shouldRebuildConnection(newSettings));\n    }\n","date":"2020-02-01 00:43:25","endLine":52,"groupId":"1927","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testSameStrategyChangeMeansThatStrategyDoesNotNeedToBeRebuilt","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/c9/ce9a4c9a6dfa686b8e47100d1977c5907730dd.src","preCode":"    public void testSameStrategyChangeMeansThatStrategyDoesNotNeedToBeRebuilt() {\n        ConnectionManager connectionManager = new ConnectionManager(Settings.EMPTY, mock(Transport.class));\n        RemoteConnectionManager remoteConnectionManager = new RemoteConnectionManager(\"cluster-alias\", connectionManager);\n        FakeConnectionStrategy first = new FakeConnectionStrategy(\"cluster-alias\", mock(TransportService.class), remoteConnectionManager,\n            RemoteConnectionStrategy.ConnectionStrategy.PROXY);\n        Settings newSettings = Settings.builder()\n            .put(RemoteConnectionStrategy.REMOTE_CONNECTION_MODE.getConcreteSettingForNamespace(\"cluster-alias\").getKey(), \"proxy\")\n            .build();\n        assertFalse(first.shouldRebuildConnection(newSettings));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/transport/RemoteConnectionStrategyTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":43,"status":"M"}],"commitId":"9dbd9ba757f63441c990e9812dfd3129498a5f18","commitMessage":"@@@Extract a ConnectionManager interface (#51722)\n\nCurrently we have three different implementations representing a\n`ConnectionManager`. There is the basic `ConnectionManager` which\nholds all connections for a cluster. And a remote connection manager\nwhich support proxy behavior. And a stubbable connection manager for\ntests. The remote and stubbable instances use the delegate pattern. \nso this commit extracts an interface for them all to implement.","date":"2020-02-01 00:43:25","modifiedFileCount":"15","status":"M","submitter":"Tim Brooks"},{"authorTime":"2020-02-26 23:12:41","codes":[{"authorDate":"2020-02-26 23:12:41","commitOrder":4,"curCode":"    public void testStrategyChangeMeansThatStrategyMustBeRebuilt() {\n        ClusterConnectionManager connectionManager = new ClusterConnectionManager(Settings.EMPTY, mock(Transport.class));\n        RemoteConnectionManager remoteConnectionManager = new RemoteConnectionManager(\"cluster-alias\", connectionManager);\n        FakeConnectionStrategy first = new FakeConnectionStrategy(\"cluster-alias\", mock(TransportService.class), remoteConnectionManager,\n            RemoteConnectionStrategy.ConnectionStrategy.PROXY);\n        Settings newSettings = Settings.builder()\n            .put(RemoteConnectionStrategy.REMOTE_CONNECTION_MODE.getConcreteSettingForNamespace(\"cluster-alias\").getKey(), \"sniff\")\n            .put(SniffConnectionStrategy.REMOTE_CLUSTER_SEEDS.getConcreteSettingForNamespace(\"cluster-alias\").getKey(), \"127.0.0.1:9300\")\n            .build();\n        assertTrue(first.shouldRebuildConnection(newSettings));\n    }\n","date":"2020-02-26 23:12:41","endLine":42,"groupId":"104375","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"testStrategyChangeMeansThatStrategyMustBeRebuilt","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/cb/4a4fb7189bf88374d88eba6eca3b255c997714.src","preCode":"    public void testStrategyChangeMeansThatStrategyMustBeRebuilt() {\n        ClusterConnectionManager connectionManager = new ClusterConnectionManager(Settings.EMPTY, mock(Transport.class));\n        RemoteConnectionManager remoteConnectionManager = new RemoteConnectionManager(\"cluster-alias\", connectionManager);\n        FakeConnectionStrategy first = new FakeConnectionStrategy(\"cluster-alias\", mock(TransportService.class), remoteConnectionManager,\n            RemoteConnectionStrategy.ConnectionStrategy.PROXY);\n        Settings newSettings = Settings.builder()\n            .put(RemoteConnectionStrategy.REMOTE_CONNECTION_MODE.getConcreteSettingForNamespace(\"cluster-alias\").getKey(), \"sniff\")\n            .build();\n        assertTrue(first.shouldRebuildConnection(newSettings));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/transport/RemoteConnectionStrategyTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":32,"status":"M"},{"authorDate":"2020-02-26 23:12:41","commitOrder":4,"curCode":"    public void testSameStrategyChangeMeansThatStrategyDoesNotNeedToBeRebuilt() {\n        ClusterConnectionManager connectionManager = new ClusterConnectionManager(Settings.EMPTY, mock(Transport.class));\n        RemoteConnectionManager remoteConnectionManager = new RemoteConnectionManager(\"cluster-alias\", connectionManager);\n        FakeConnectionStrategy first = new FakeConnectionStrategy(\"cluster-alias\", mock(TransportService.class), remoteConnectionManager,\n            RemoteConnectionStrategy.ConnectionStrategy.PROXY);\n        Settings newSettings = Settings.builder()\n            .put(RemoteConnectionStrategy.REMOTE_CONNECTION_MODE.getConcreteSettingForNamespace(\"cluster-alias\").getKey(), \"proxy\")\n            .put(ProxyConnectionStrategy.PROXY_ADDRESS.getConcreteSettingForNamespace(\"cluster-alias\").getKey(), \"127.0.0.1:9300\")\n            .build();\n        assertFalse(first.shouldRebuildConnection(newSettings));\n    }\n","date":"2020-02-26 23:12:41","endLine":54,"groupId":"104375","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"testSameStrategyChangeMeansThatStrategyDoesNotNeedToBeRebuilt","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/cb/4a4fb7189bf88374d88eba6eca3b255c997714.src","preCode":"    public void testSameStrategyChangeMeansThatStrategyDoesNotNeedToBeRebuilt() {\n        ClusterConnectionManager connectionManager = new ClusterConnectionManager(Settings.EMPTY, mock(Transport.class));\n        RemoteConnectionManager remoteConnectionManager = new RemoteConnectionManager(\"cluster-alias\", connectionManager);\n        FakeConnectionStrategy first = new FakeConnectionStrategy(\"cluster-alias\", mock(TransportService.class), remoteConnectionManager,\n            RemoteConnectionStrategy.ConnectionStrategy.PROXY);\n        Settings newSettings = Settings.builder()\n            .put(RemoteConnectionStrategy.REMOTE_CONNECTION_MODE.getConcreteSettingForNamespace(\"cluster-alias\").getKey(), \"proxy\")\n            .build();\n        assertFalse(first.shouldRebuildConnection(newSettings));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/transport/RemoteConnectionStrategyTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":44,"status":"M"}],"commitId":"94f5accfed855cf2c31f98a398901adcef0a1caf","commitMessage":"@@@Remove seeds depedency for remote cluster settings (#52796)\n\nCurrently 3 remote cluster settings (ping interval.  skip unavailable. \nand compression) have a dependency on the seeds setting being\ncomfigured. With proxy mode.  it is now possible that these settings the\nseeds setting has not been configured. This commit removes this\ndependency and adds new validation for these settings.","date":"2020-02-26 23:12:41","modifiedFileCount":"11","status":"M","submitter":"Tim Brooks"}]
