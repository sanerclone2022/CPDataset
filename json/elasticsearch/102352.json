[{"authorTime":"2018-12-06 15:31:46","codes":[{"authorDate":"2018-12-06 15:31:46","commitOrder":1,"curCode":"    public void testJoinElectedLeader() {\n        DiscoveryNode node0 = newNode(0, true);\n        DiscoveryNode node1 = newNode(1, true);\n        long initialTerm = randomLongBetween(1, 10);\n        long initialVersion = randomLongBetween(1, 10);\n        setupFakeMasterServiceAndCoordinator(initialTerm, initialState(node0, initialTerm, initialVersion,\n            new VotingConfiguration(Collections.singleton(node0.getId()))));\n        assertFalse(isLocalNodeElectedMaster());\n        long newTerm = initialTerm + randomLongBetween(1, 10);\n        joinNodeAndRun(new JoinRequest(node0, Optional.of(new Join(node0, node0, newTerm, initialTerm, initialVersion))));\n        assertTrue(isLocalNodeElectedMaster());\n        assertFalse(clusterStateHasNode(node1));\n        joinNodeAndRun(new JoinRequest(node1, Optional.of(new Join(node1, node0, newTerm, initialTerm, initialVersion))));\n        assertTrue(isLocalNodeElectedMaster());\n        assertTrue(clusterStateHasNode(node1));\n    }\n","date":"2018-12-06 15:31:46","endLine":326,"groupId":"9757","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testJoinElectedLeader","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/ea/45eb42d89a31e75162c437c91f615e90fd2fd6.src","preCode":"    public void testJoinElectedLeader() {\n        DiscoveryNode node0 = newNode(0, true);\n        DiscoveryNode node1 = newNode(1, true);\n        long initialTerm = randomLongBetween(1, 10);\n        long initialVersion = randomLongBetween(1, 10);\n        setupFakeMasterServiceAndCoordinator(initialTerm, initialState(node0, initialTerm, initialVersion,\n            new VotingConfiguration(Collections.singleton(node0.getId()))));\n        assertFalse(isLocalNodeElectedMaster());\n        long newTerm = initialTerm + randomLongBetween(1, 10);\n        joinNodeAndRun(new JoinRequest(node0, Optional.of(new Join(node0, node0, newTerm, initialTerm, initialVersion))));\n        assertTrue(isLocalNodeElectedMaster());\n        assertFalse(clusterStateHasNode(node1));\n        joinNodeAndRun(new JoinRequest(node1, Optional.of(new Join(node1, node0, newTerm, initialTerm, initialVersion))));\n        assertTrue(isLocalNodeElectedMaster());\n        assertTrue(clusterStateHasNode(node1));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/cluster/coordination/NodeJoinTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":311,"status":"B"},{"authorDate":"2018-12-06 15:31:46","commitOrder":1,"curCode":"    public void testJoinFollowerFails() {\n        DiscoveryNode node0 = newNode(0, true);\n        DiscoveryNode node1 = newNode(1, true);\n        long initialTerm = randomLongBetween(1, 10);\n        long initialVersion = randomLongBetween(1, 10);\n        setupFakeMasterServiceAndCoordinator(initialTerm, initialState(node0, initialTerm, initialVersion,\n            new VotingConfiguration(Collections.singleton(node0.getId()))));\n        long newTerm = initialTerm + randomLongBetween(1, 10);\n        coordinator.coordinationState.get().handleStartJoin(new StartJoinRequest(node1, newTerm));\n        synchronized (coordinator.mutex) {\n            coordinator.becomeFollower(\"test\", node1);\n        }\n        assertFalse(isLocalNodeElectedMaster());\n        assertThat(expectThrows(CoordinationStateRejectedException.class,\n            () -> joinNodeAndRun(new JoinRequest(node1, Optional.empty()))).getMessage(),\n            containsString(\"join target is a follower\"));\n        assertFalse(isLocalNodeElectedMaster());\n    }\n","date":"2018-12-06 15:31:46","endLine":392,"groupId":"70799","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testJoinFollowerFails","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/ea/45eb42d89a31e75162c437c91f615e90fd2fd6.src","preCode":"    public void testJoinFollowerFails() {\n        DiscoveryNode node0 = newNode(0, true);\n        DiscoveryNode node1 = newNode(1, true);\n        long initialTerm = randomLongBetween(1, 10);\n        long initialVersion = randomLongBetween(1, 10);\n        setupFakeMasterServiceAndCoordinator(initialTerm, initialState(node0, initialTerm, initialVersion,\n            new VotingConfiguration(Collections.singleton(node0.getId()))));\n        long newTerm = initialTerm + randomLongBetween(1, 10);\n        coordinator.coordinationState.get().handleStartJoin(new StartJoinRequest(node1, newTerm));\n        synchronized (coordinator.mutex) {\n            coordinator.becomeFollower(\"test\", node1);\n        }\n        assertFalse(isLocalNodeElectedMaster());\n        assertThat(expectThrows(CoordinationStateRejectedException.class,\n            () -> joinNodeAndRun(new JoinRequest(node1, Optional.empty()))).getMessage(),\n            containsString(\"join target is a follower\"));\n        assertFalse(isLocalNodeElectedMaster());\n    }\n","realPath":"server/src/test/java/org/elasticsearch/cluster/coordination/NodeJoinTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":375,"status":"B"}],"commitId":"ee05ef131286eead295cf58ed4393af56f0d7ade","commitMessage":"@@@Merge branch 'zen2'\n","date":"2018-12-06 15:31:46","modifiedFileCount":"122","status":"B","submitter":"Yannick Welsch"},{"authorTime":"2018-12-28 15:37:04","codes":[{"authorDate":"2018-12-06 15:31:46","commitOrder":2,"curCode":"    public void testJoinElectedLeader() {\n        DiscoveryNode node0 = newNode(0, true);\n        DiscoveryNode node1 = newNode(1, true);\n        long initialTerm = randomLongBetween(1, 10);\n        long initialVersion = randomLongBetween(1, 10);\n        setupFakeMasterServiceAndCoordinator(initialTerm, initialState(node0, initialTerm, initialVersion,\n            new VotingConfiguration(Collections.singleton(node0.getId()))));\n        assertFalse(isLocalNodeElectedMaster());\n        long newTerm = initialTerm + randomLongBetween(1, 10);\n        joinNodeAndRun(new JoinRequest(node0, Optional.of(new Join(node0, node0, newTerm, initialTerm, initialVersion))));\n        assertTrue(isLocalNodeElectedMaster());\n        assertFalse(clusterStateHasNode(node1));\n        joinNodeAndRun(new JoinRequest(node1, Optional.of(new Join(node1, node0, newTerm, initialTerm, initialVersion))));\n        assertTrue(isLocalNodeElectedMaster());\n        assertTrue(clusterStateHasNode(node1));\n    }\n","date":"2018-12-06 15:31:46","endLine":326,"groupId":"9757","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testJoinElectedLeader","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/ea/45eb42d89a31e75162c437c91f615e90fd2fd6.src","preCode":"    public void testJoinElectedLeader() {\n        DiscoveryNode node0 = newNode(0, true);\n        DiscoveryNode node1 = newNode(1, true);\n        long initialTerm = randomLongBetween(1, 10);\n        long initialVersion = randomLongBetween(1, 10);\n        setupFakeMasterServiceAndCoordinator(initialTerm, initialState(node0, initialTerm, initialVersion,\n            new VotingConfiguration(Collections.singleton(node0.getId()))));\n        assertFalse(isLocalNodeElectedMaster());\n        long newTerm = initialTerm + randomLongBetween(1, 10);\n        joinNodeAndRun(new JoinRequest(node0, Optional.of(new Join(node0, node0, newTerm, initialTerm, initialVersion))));\n        assertTrue(isLocalNodeElectedMaster());\n        assertFalse(clusterStateHasNode(node1));\n        joinNodeAndRun(new JoinRequest(node1, Optional.of(new Join(node1, node0, newTerm, initialTerm, initialVersion))));\n        assertTrue(isLocalNodeElectedMaster());\n        assertTrue(clusterStateHasNode(node1));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/cluster/coordination/NodeJoinTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":311,"status":"N"},{"authorDate":"2018-12-28 15:37:04","commitOrder":2,"curCode":"    public void testJoinFollowerFails() throws Exception {\n        DiscoveryNode node0 = newNode(0, true);\n        DiscoveryNode node1 = newNode(1, true);\n        long initialTerm = randomLongBetween(1, 10);\n        long initialVersion = randomLongBetween(1, 10);\n        setupFakeMasterServiceAndCoordinator(initialTerm, initialState(node0, initialTerm, initialVersion,\n            new VotingConfiguration(Collections.singleton(node0.getId()))));\n        long newTerm = initialTerm + randomLongBetween(1, 10);\n        handleStartJoinFrom(node1, newTerm);\n        handleFollowerCheckFrom(node1, newTerm);\n        assertThat(expectThrows(CoordinationStateRejectedException.class,\n            () -> joinNodeAndRun(new JoinRequest(node1, Optional.empty()))).getMessage(),\n            containsString(\"join target is a follower\"));\n        assertFalse(isLocalNodeElectedMaster());\n    }\n","date":"2018-12-28 15:37:04","endLine":449,"groupId":"61512","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testJoinFollowerFails","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/21/4174d2a52faa26cd8c50d3b18b882c6f67ded1.src","preCode":"    public void testJoinFollowerFails() {\n        DiscoveryNode node0 = newNode(0, true);\n        DiscoveryNode node1 = newNode(1, true);\n        long initialTerm = randomLongBetween(1, 10);\n        long initialVersion = randomLongBetween(1, 10);\n        setupFakeMasterServiceAndCoordinator(initialTerm, initialState(node0, initialTerm, initialVersion,\n            new VotingConfiguration(Collections.singleton(node0.getId()))));\n        long newTerm = initialTerm + randomLongBetween(1, 10);\n        coordinator.coordinationState.get().handleStartJoin(new StartJoinRequest(node1, newTerm));\n        synchronized (coordinator.mutex) {\n            coordinator.becomeFollower(\"test\", node1);\n        }\n        assertFalse(isLocalNodeElectedMaster());\n        assertThat(expectThrows(CoordinationStateRejectedException.class,\n            () -> joinNodeAndRun(new JoinRequest(node1, Optional.empty()))).getMessage(),\n            containsString(\"join target is a follower\"));\n        assertFalse(isLocalNodeElectedMaster());\n    }\n","realPath":"server/src/test/java/org/elasticsearch/cluster/coordination/NodeJoinTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":435,"status":"M"}],"commitId":"935c2e98b0cec6fa560cd7cb65939cbe5ca7c895","commitMessage":"@@@Zen2: Turn to follower on follower check when no state accepted yet from new leader (#37003)\n\nImproves on #36449 which did not cover the situation where a node had bumped its term during\nthe election.  and not when receiving the first follower check. This was uncovered while refactoring\nNodeJoinTests so that they don't need to access to an internal field of Coordinator anymore (which\ncan now be made private).","date":"2018-12-28 15:37:04","modifiedFileCount":"2","status":"M","submitter":"Yannick Welsch"},{"authorTime":"2020-03-11 17:03:54","codes":[{"authorDate":"2020-03-11 17:03:54","commitOrder":3,"curCode":"    public void testJoinElectedLeader() {\n        DiscoveryNode node0 = newNode(0, true);\n        DiscoveryNode node1 = newNode(1, true);\n        long initialTerm = randomLongBetween(1, 10);\n        long initialVersion = randomLongBetween(1, 10);\n        setupFakeMasterServiceAndCoordinator(initialTerm, initialState(node0, initialTerm, initialVersion,\n            new VotingConfiguration(Collections.singleton(node0.getId()))));\n        assertFalse(isLocalNodeElectedMaster());\n        long newTerm = initialTerm + randomLongBetween(1, 10);\n        joinNodeAndRun(new JoinRequest(node0, newTerm, Optional.of(new Join(node0, node0, newTerm, initialTerm, initialVersion))));\n        assertTrue(isLocalNodeElectedMaster());\n        assertFalse(clusterStateHasNode(node1));\n        joinNodeAndRun(new JoinRequest(node1, newTerm, Optional.of(new Join(node1, node0, newTerm, initialTerm, initialVersion))));\n        assertTrue(isLocalNodeElectedMaster());\n        assertTrue(clusterStateHasNode(node1));\n    }\n","date":"2020-03-11 17:03:54","endLine":337,"groupId":"9757","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testJoinElectedLeader","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/ac/3075597dc57202f2d874d46d9ed75dc27044c0.src","preCode":"    public void testJoinElectedLeader() {\n        DiscoveryNode node0 = newNode(0, true);\n        DiscoveryNode node1 = newNode(1, true);\n        long initialTerm = randomLongBetween(1, 10);\n        long initialVersion = randomLongBetween(1, 10);\n        setupFakeMasterServiceAndCoordinator(initialTerm, initialState(node0, initialTerm, initialVersion,\n            new VotingConfiguration(Collections.singleton(node0.getId()))));\n        assertFalse(isLocalNodeElectedMaster());\n        long newTerm = initialTerm + randomLongBetween(1, 10);\n        joinNodeAndRun(new JoinRequest(node0, Optional.of(new Join(node0, node0, newTerm, initialTerm, initialVersion))));\n        assertTrue(isLocalNodeElectedMaster());\n        assertFalse(clusterStateHasNode(node1));\n        joinNodeAndRun(new JoinRequest(node1, Optional.of(new Join(node1, node0, newTerm, initialTerm, initialVersion))));\n        assertTrue(isLocalNodeElectedMaster());\n        assertTrue(clusterStateHasNode(node1));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/cluster/coordination/NodeJoinTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":322,"status":"M"},{"authorDate":"2020-03-11 17:03:54","commitOrder":3,"curCode":"    public void testJoinFollowerFails() throws Exception {\n        DiscoveryNode node0 = newNode(0, true);\n        DiscoveryNode node1 = newNode(1, true);\n        long initialTerm = randomLongBetween(1, 10);\n        long initialVersion = randomLongBetween(1, 10);\n        setupFakeMasterServiceAndCoordinator(initialTerm, initialState(node0, initialTerm, initialVersion,\n            new VotingConfiguration(Collections.singleton(node0.getId()))));\n        long newTerm = initialTerm + randomLongBetween(1, 10);\n        handleStartJoinFrom(node1, newTerm);\n        handleFollowerCheckFrom(node1, newTerm);\n        assertThat(expectThrows(CoordinationStateRejectedException.class,\n            () -> joinNodeAndRun(new JoinRequest(node1, newTerm, Optional.empty()))).getMessage(),\n            containsString(\"join target is a follower\"));\n        assertFalse(isLocalNodeElectedMaster());\n    }\n","date":"2020-03-11 17:03:54","endLine":474,"groupId":"61512","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testJoinFollowerFails","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/ac/3075597dc57202f2d874d46d9ed75dc27044c0.src","preCode":"    public void testJoinFollowerFails() throws Exception {\n        DiscoveryNode node0 = newNode(0, true);\n        DiscoveryNode node1 = newNode(1, true);\n        long initialTerm = randomLongBetween(1, 10);\n        long initialVersion = randomLongBetween(1, 10);\n        setupFakeMasterServiceAndCoordinator(initialTerm, initialState(node0, initialTerm, initialVersion,\n            new VotingConfiguration(Collections.singleton(node0.getId()))));\n        long newTerm = initialTerm + randomLongBetween(1, 10);\n        handleStartJoinFrom(node1, newTerm);\n        handleFollowerCheckFrom(node1, newTerm);\n        assertThat(expectThrows(CoordinationStateRejectedException.class,\n            () -> joinNodeAndRun(new JoinRequest(node1, Optional.empty()))).getMessage(),\n            containsString(\"join target is a follower\"));\n        assertFalse(isLocalNodeElectedMaster());\n    }\n","realPath":"server/src/test/java/org/elasticsearch/cluster/coordination/NodeJoinTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":460,"status":"M"}],"commitId":"9dcd88ee1e8b5b13384a041326c42f6fcf5f7abf","commitMessage":"@@@Allow joining node to trigger term bump (#53338)\n\nIn rare circumstances it is possible for an isolated node to have a greater\nterm than the currently-elected leader. Today such a node will attempt to join\nthe cluster but will not offer a vote to the leader and will reject its cluster\nstate publications due to their stale term. This situation persists since there\nis no mechanism for the joining node to inform the leader that its term is\nstale and a new election is required.\n\nThis commit adds the current term of the joining node to the join request. Once\nthe join has been validated.  the leader will perform another election to\nincrease its term far enough to allow the isolated node to join properly.\n\nFixes #53271","date":"2020-03-11 17:03:54","modifiedFileCount":"7","status":"M","submitter":"David Turner"},{"authorTime":"2020-04-01 02:05:47","codes":[{"authorDate":"2020-04-01 02:05:47","commitOrder":4,"curCode":"    public void testJoinElectedLeader() {\n        DiscoveryNode node0 = newNode(0, true);\n        DiscoveryNode node1 = newNode(1, true);\n        long initialTerm = randomLongBetween(1, 10);\n        long initialVersion = randomLongBetween(1, 10);\n        setupFakeMasterServiceAndCoordinator(initialTerm, initialState(node0, initialTerm, initialVersion,\n            VotingConfiguration.of(node0)));\n        assertFalse(isLocalNodeElectedMaster());\n        long newTerm = initialTerm + randomLongBetween(1, 10);\n        joinNodeAndRun(new JoinRequest(node0, newTerm, Optional.of(new Join(node0, node0, newTerm, initialTerm, initialVersion))));\n        assertTrue(isLocalNodeElectedMaster());\n        assertFalse(clusterStateHasNode(node1));\n        joinNodeAndRun(new JoinRequest(node1, newTerm, Optional.of(new Join(node1, node0, newTerm, initialTerm, initialVersion))));\n        assertTrue(isLocalNodeElectedMaster());\n        assertTrue(clusterStateHasNode(node1));\n    }\n","date":"2020-04-01 02:05:47","endLine":338,"groupId":"4664","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"testJoinElectedLeader","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/b2/705239ecd506314d7609a45f078029584fa35d.src","preCode":"    public void testJoinElectedLeader() {\n        DiscoveryNode node0 = newNode(0, true);\n        DiscoveryNode node1 = newNode(1, true);\n        long initialTerm = randomLongBetween(1, 10);\n        long initialVersion = randomLongBetween(1, 10);\n        setupFakeMasterServiceAndCoordinator(initialTerm, initialState(node0, initialTerm, initialVersion,\n            new VotingConfiguration(Collections.singleton(node0.getId()))));\n        assertFalse(isLocalNodeElectedMaster());\n        long newTerm = initialTerm + randomLongBetween(1, 10);\n        joinNodeAndRun(new JoinRequest(node0, newTerm, Optional.of(new Join(node0, node0, newTerm, initialTerm, initialVersion))));\n        assertTrue(isLocalNodeElectedMaster());\n        assertFalse(clusterStateHasNode(node1));\n        joinNodeAndRun(new JoinRequest(node1, newTerm, Optional.of(new Join(node1, node0, newTerm, initialTerm, initialVersion))));\n        assertTrue(isLocalNodeElectedMaster());\n        assertTrue(clusterStateHasNode(node1));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/cluster/coordination/NodeJoinTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":323,"status":"M"},{"authorDate":"2020-04-01 02:05:47","commitOrder":4,"curCode":"    public void testJoinFollowerFails() throws Exception {\n        DiscoveryNode node0 = newNode(0, true);\n        DiscoveryNode node1 = newNode(1, true);\n        long initialTerm = randomLongBetween(1, 10);\n        long initialVersion = randomLongBetween(1, 10);\n        setupFakeMasterServiceAndCoordinator(initialTerm, initialState(node0, initialTerm, initialVersion,\n            VotingConfiguration.of(node0)));\n        long newTerm = initialTerm + randomLongBetween(1, 10);\n        handleStartJoinFrom(node1, newTerm);\n        handleFollowerCheckFrom(node1, newTerm);\n        assertThat(expectThrows(CoordinationStateRejectedException.class,\n            () -> joinNodeAndRun(new JoinRequest(node1, newTerm, Optional.empty()))).getMessage(),\n            containsString(\"join target is a follower\"));\n        assertFalse(isLocalNodeElectedMaster());\n    }\n","date":"2020-04-01 02:05:47","endLine":475,"groupId":"4659","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"testJoinFollowerFails","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/b2/705239ecd506314d7609a45f078029584fa35d.src","preCode":"    public void testJoinFollowerFails() throws Exception {\n        DiscoveryNode node0 = newNode(0, true);\n        DiscoveryNode node1 = newNode(1, true);\n        long initialTerm = randomLongBetween(1, 10);\n        long initialVersion = randomLongBetween(1, 10);\n        setupFakeMasterServiceAndCoordinator(initialTerm, initialState(node0, initialTerm, initialVersion,\n            new VotingConfiguration(Collections.singleton(node0.getId()))));\n        long newTerm = initialTerm + randomLongBetween(1, 10);\n        handleStartJoinFrom(node1, newTerm);\n        handleFollowerCheckFrom(node1, newTerm);\n        assertThat(expectThrows(CoordinationStateRejectedException.class,\n            () -> joinNodeAndRun(new JoinRequest(node1, newTerm, Optional.empty()))).getMessage(),\n            containsString(\"join target is a follower\"));\n        assertFalse(isLocalNodeElectedMaster());\n    }\n","realPath":"server/src/test/java/org/elasticsearch/cluster/coordination/NodeJoinTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":461,"status":"M"}],"commitId":"2073d8c4b9003a6d8f3d7fac7cec22d0e5d47aa2","commitMessage":"@@@Use VotingConfiguration#of where possible (#54507)\n\nThis resolves a longstanding TODO in the cluster coordination subsystem.\n\nRelates #32006","date":"2020-04-01 02:05:47","modifiedFileCount":"6","status":"M","submitter":"David Turner"},{"authorTime":"2020-07-10 21:44:56","codes":[{"authorDate":"2020-07-10 21:44:56","commitOrder":5,"curCode":"    public void testJoinElectedLeader() {\n        DiscoveryNode node0 = newNode(0, true);\n        DiscoveryNode node1 = newNode(1, true);\n        long initialTerm = randomLongBetween(1, 10);\n        long initialVersion = randomLongBetween(1, 10);\n        setupFakeMasterServiceAndCoordinator(initialTerm, initialState(node0, initialTerm, initialVersion,\n            VotingConfiguration.of(node0)), () -> new StatusInfo(HEALTHY, \"healthy-info\"));\n        assertFalse(isLocalNodeElectedMaster());\n        long newTerm = initialTerm + randomLongBetween(1, 10);\n        joinNodeAndRun(new JoinRequest(node0, newTerm, Optional.of(new Join(node0, node0, newTerm, initialTerm, initialVersion))));\n        assertTrue(isLocalNodeElectedMaster());\n        assertFalse(clusterStateHasNode(node1));\n        joinNodeAndRun(new JoinRequest(node1, newTerm, Optional.of(new Join(node1, node0, newTerm, initialTerm, initialVersion))));\n        assertTrue(isLocalNodeElectedMaster());\n        assertTrue(clusterStateHasNode(node1));\n    }\n","date":"2020-07-10 21:44:56","endLine":337,"groupId":"102352","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"testJoinElectedLeader","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/82/a2b2ee1923f9e993fc4485e0272bc7c777f2a1.src","preCode":"    public void testJoinElectedLeader() {\n        DiscoveryNode node0 = newNode(0, true);\n        DiscoveryNode node1 = newNode(1, true);\n        long initialTerm = randomLongBetween(1, 10);\n        long initialVersion = randomLongBetween(1, 10);\n        setupFakeMasterServiceAndCoordinator(initialTerm, initialState(node0, initialTerm, initialVersion,\n            VotingConfiguration.of(node0)));\n        assertFalse(isLocalNodeElectedMaster());\n        long newTerm = initialTerm + randomLongBetween(1, 10);\n        joinNodeAndRun(new JoinRequest(node0, newTerm, Optional.of(new Join(node0, node0, newTerm, initialTerm, initialVersion))));\n        assertTrue(isLocalNodeElectedMaster());\n        assertFalse(clusterStateHasNode(node1));\n        joinNodeAndRun(new JoinRequest(node1, newTerm, Optional.of(new Join(node1, node0, newTerm, initialTerm, initialVersion))));\n        assertTrue(isLocalNodeElectedMaster());\n        assertTrue(clusterStateHasNode(node1));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/cluster/coordination/NodeJoinTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":322,"status":"M"},{"authorDate":"2020-07-10 21:44:56","commitOrder":5,"curCode":"    public void testJoinFollowerFails() throws Exception {\n        DiscoveryNode node0 = newNode(0, true);\n        DiscoveryNode node1 = newNode(1, true);\n        long initialTerm = randomLongBetween(1, 10);\n        long initialVersion = randomLongBetween(1, 10);\n        setupFakeMasterServiceAndCoordinator(initialTerm, initialState(node0, initialTerm, initialVersion,\n            VotingConfiguration.of(node0)), () -> new StatusInfo(HEALTHY, \"healthy-info\"));\n        long newTerm = initialTerm + randomLongBetween(1, 10);\n        handleStartJoinFrom(node1, newTerm);\n        handleFollowerCheckFrom(node1, newTerm);\n        assertThat(expectThrows(CoordinationStateRejectedException.class,\n            () -> joinNodeAndRun(new JoinRequest(node1, newTerm, Optional.empty()))).getMessage(),\n            containsString(\"join target is a follower\"));\n        assertFalse(isLocalNodeElectedMaster());\n    }\n","date":"2020-07-10 21:44:56","endLine":495,"groupId":"102352","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"testJoinFollowerFails","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/82/a2b2ee1923f9e993fc4485e0272bc7c777f2a1.src","preCode":"    public void testJoinFollowerFails() throws Exception {\n        DiscoveryNode node0 = newNode(0, true);\n        DiscoveryNode node1 = newNode(1, true);\n        long initialTerm = randomLongBetween(1, 10);\n        long initialVersion = randomLongBetween(1, 10);\n        setupFakeMasterServiceAndCoordinator(initialTerm, initialState(node0, initialTerm, initialVersion,\n            VotingConfiguration.of(node0)));\n        long newTerm = initialTerm + randomLongBetween(1, 10);\n        handleStartJoinFrom(node1, newTerm);\n        handleFollowerCheckFrom(node1, newTerm);\n        assertThat(expectThrows(CoordinationStateRejectedException.class,\n            () -> joinNodeAndRun(new JoinRequest(node1, newTerm, Optional.empty()))).getMessage(),\n            containsString(\"join target is a follower\"));\n        assertFalse(isLocalNodeElectedMaster());\n    }\n","realPath":"server/src/test/java/org/elasticsearch/cluster/coordination/NodeJoinTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":481,"status":"M"}],"commitId":"366ca378a8644d6654417988820c67f4feb714fe","commitMessage":"@@@Merge branch 'master' into feature/runtime_fields\n","date":"2020-07-10 21:44:56","modifiedFileCount":"565","status":"M","submitter":"Luca Cavanna"}]
