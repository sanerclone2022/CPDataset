[{"authorTime":"2020-04-17 00:18:09","codes":[{"authorDate":"2019-10-15 22:26:13","commitOrder":7,"curCode":"    public void testDefaultConfiguration() throws IOException {\n        String mapping = Strings.toString(XContentFactory.jsonBuilder().startObject().startObject(\"type1\")\n            .startObject(\"properties\").startObject(\"location\")\n            .field(\"type\", \"geo_shape\")\n            .endObject().endObject()\n            .endObject().endObject());\n\n        DocumentMapper defaultMapper = createIndex(\"test\").mapperService().documentMapperParser()\n            .parse(\"type1\", new CompressedXContent(mapping));\n        Mapper fieldMapper = defaultMapper.mappers().getMapper(\"location\");\n        assertThat(fieldMapper, instanceOf(GeoShapeFieldMapper.class));\n\n        GeoShapeFieldMapper geoShapeFieldMapper = (GeoShapeFieldMapper) fieldMapper;\n        assertThat(geoShapeFieldMapper.fieldType().orientation(),\n            equalTo(GeoShapeFieldMapper.Defaults.ORIENTATION.value()));\n        assertThat(geoShapeFieldMapper.fieldType.hasDocValues(), equalTo(false));\n    }\n","date":"2019-10-15 22:26:13","endLine":64,"groupId":"65131","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testDefaultConfiguration","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/e1/4d04eb7d66462cd10b7fcd7d2812461345ccf7.src","preCode":"    public void testDefaultConfiguration() throws IOException {\n        String mapping = Strings.toString(XContentFactory.jsonBuilder().startObject().startObject(\"type1\")\n            .startObject(\"properties\").startObject(\"location\")\n            .field(\"type\", \"geo_shape\")\n            .endObject().endObject()\n            .endObject().endObject());\n\n        DocumentMapper defaultMapper = createIndex(\"test\").mapperService().documentMapperParser()\n            .parse(\"type1\", new CompressedXContent(mapping));\n        Mapper fieldMapper = defaultMapper.mappers().getMapper(\"location\");\n        assertThat(fieldMapper, instanceOf(GeoShapeFieldMapper.class));\n\n        GeoShapeFieldMapper geoShapeFieldMapper = (GeoShapeFieldMapper) fieldMapper;\n        assertThat(geoShapeFieldMapper.fieldType().orientation(),\n            equalTo(GeoShapeFieldMapper.Defaults.ORIENTATION.value()));\n        assertThat(geoShapeFieldMapper.fieldType.hasDocValues(), equalTo(false));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/index/mapper/GeoShapeFieldMapperTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":48,"status":"NB"},{"authorDate":"2020-04-17 00:18:09","commitOrder":7,"curCode":"    public void testDefaultConfiguration() throws IOException {\n        String mapping = Strings.toString(XContentFactory.jsonBuilder().startObject().startObject(\"type1\")\n            .startObject(\"properties\").startObject(\"location\")\n            .field(\"type\", \"geo_shape\")\n            .endObject().endObject()\n            .endObject().endObject());\n\n        DocumentMapper defaultMapper = createIndex(\"test\").mapperService().documentMapperParser()\n            .parse(\"type1\", new CompressedXContent(mapping));\n        Mapper fieldMapper = defaultMapper.mappers().getMapper(\"location\");\n        assertThat(fieldMapper, instanceOf(GeoShapeWithDocValuesFieldMapper.class));\n\n        GeoShapeWithDocValuesFieldMapper geoShapeFieldMapper = (GeoShapeWithDocValuesFieldMapper) fieldMapper;\n        assertThat(geoShapeFieldMapper.fieldType().orientation(),\n            equalTo(org.elasticsearch.index.mapper.GeoShapeFieldMapper.Defaults.ORIENTATION.value()));\n        assertFalse(geoShapeFieldMapper.docValues().explicit());\n        assertTrue(geoShapeFieldMapper.docValues().value());\n        assertTrue(geoShapeFieldMapper.fieldType().hasDocValues());\n    }\n","date":"2020-04-17 00:18:09","endLine":86,"groupId":"65131","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testDefaultConfiguration","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/1b/734e3dbba3ed674decfad8d723d0ecc5c51d83.src","preCode":"    public void testDefaultConfiguration() throws IOException {\n        String mapping = Strings.toString(XContentFactory.jsonBuilder().startObject().startObject(\"type1\")\n            .startObject(\"properties\").startObject(\"location\")\n            .field(\"type\", \"geo_shape\")\n            .endObject().endObject()\n            .endObject().endObject());\n\n        DocumentMapper defaultMapper = createIndex(\"test\").mapperService().documentMapperParser()\n            .parse(\"type1\", new CompressedXContent(mapping));\n        Mapper fieldMapper = defaultMapper.mappers().getMapper(\"location\");\n        assertThat(fieldMapper, instanceOf(GeoShapeWithDocValuesFieldMapper.class));\n\n        GeoShapeWithDocValuesFieldMapper geoShapeFieldMapper = (GeoShapeWithDocValuesFieldMapper) fieldMapper;\n        assertThat(geoShapeFieldMapper.fieldType().orientation(),\n            equalTo(org.elasticsearch.index.mapper.GeoShapeFieldMapper.Defaults.ORIENTATION.value()));\n        assertFalse(geoShapeFieldMapper.docValues().explicit());\n        assertTrue(geoShapeFieldMapper.docValues().value());\n        assertTrue(geoShapeFieldMapper.fieldType().hasDocValues());\n    }\n","realPath":"x-pack/plugin/spatial/src/test/java/org/elasticsearch/xpack/spatial/index/mapper/GeoShapeWithDocValuesFieldMapperTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":68,"status":"B"}],"commitId":"b78dfb07ae1f79300cfb9a99a740bf5cdd0e2f9b","commitMessage":"@@@Add geo_shape mapper supporting doc-values in Spatial Plugin (#55037)\n\nAfter #53562.  the `geo_shape` field mapper is registered within\na module. This opens the door for introducing a new `geo_shape`\nfield mapper into the Spatial Plugin that has doc-values support.\n\nThis is very much an extension of server's GeoShapeFieldMapper. \nbut with the addition of the doc values implementation.","date":"2020-04-17 00:18:09","modifiedFileCount":"11","status":"M","submitter":"Tal Levy"},{"authorTime":"2020-06-16 00:47:15","codes":[{"authorDate":"2020-06-16 00:47:15","commitOrder":8,"curCode":"    public void testDefaultConfiguration() throws IOException {\n        String mapping = Strings.toString(XContentFactory.jsonBuilder().startObject().startObject(\"type1\")\n            .startObject(\"properties\").startObject(\"location\")\n            .field(\"type\", \"geo_shape\")\n            .endObject().endObject()\n            .endObject().endObject());\n\n        DocumentMapper defaultMapper = createIndex(\"test\").mapperService().documentMapperParser()\n            .parse(\"type1\", new CompressedXContent(mapping));\n        Mapper fieldMapper = defaultMapper.mappers().getMapper(\"location\");\n        assertThat(fieldMapper, instanceOf(GeoShapeFieldMapper.class));\n\n        GeoShapeFieldMapper geoShapeFieldMapper = (GeoShapeFieldMapper) fieldMapper;\n        assertThat(geoShapeFieldMapper.fieldType().orientation(),\n            equalTo(GeoShapeFieldMapper.Defaults.ORIENTATION.value()));\n        assertThat(geoShapeFieldMapper.fieldType().hasDocValues(), equalTo(false));\n    }\n","date":"2020-06-16 00:47:15","endLine":84,"groupId":"65131","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testDefaultConfiguration","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/fa/faa1f7b393ac46038bab9c52d78f847176efdc.src","preCode":"    public void testDefaultConfiguration() throws IOException {\n        String mapping = Strings.toString(XContentFactory.jsonBuilder().startObject().startObject(\"type1\")\n            .startObject(\"properties\").startObject(\"location\")\n            .field(\"type\", \"geo_shape\")\n            .endObject().endObject()\n            .endObject().endObject());\n\n        DocumentMapper defaultMapper = createIndex(\"test\").mapperService().documentMapperParser()\n            .parse(\"type1\", new CompressedXContent(mapping));\n        Mapper fieldMapper = defaultMapper.mappers().getMapper(\"location\");\n        assertThat(fieldMapper, instanceOf(GeoShapeFieldMapper.class));\n\n        GeoShapeFieldMapper geoShapeFieldMapper = (GeoShapeFieldMapper) fieldMapper;\n        assertThat(geoShapeFieldMapper.fieldType().orientation(),\n            equalTo(GeoShapeFieldMapper.Defaults.ORIENTATION.value()));\n        assertThat(geoShapeFieldMapper.fieldType.hasDocValues(), equalTo(false));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/index/mapper/GeoShapeFieldMapperTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":68,"status":"M"},{"authorDate":"2020-06-16 00:47:15","commitOrder":8,"curCode":"    public void testDefaultConfiguration() throws IOException {\n        String mapping = Strings.toString(XContentFactory.jsonBuilder().startObject().startObject(\"type1\")\n            .startObject(\"properties\").startObject(\"location\")\n            .field(\"type\", \"geo_shape\")\n            .endObject().endObject()\n            .endObject().endObject());\n\n        DocumentMapper defaultMapper = createIndex(\"test\").mapperService().documentMapperParser()\n            .parse(\"type1\", new CompressedXContent(mapping));\n        Mapper fieldMapper = defaultMapper.mappers().getMapper(\"location\");\n        assertThat(fieldMapper, instanceOf(GeoShapeWithDocValuesFieldMapper.class));\n\n        GeoShapeWithDocValuesFieldMapper geoShapeFieldMapper = (GeoShapeWithDocValuesFieldMapper) fieldMapper;\n        assertThat(geoShapeFieldMapper.fieldType().orientation(),\n            equalTo(org.elasticsearch.index.mapper.GeoShapeFieldMapper.Defaults.ORIENTATION.value()));\n        assertTrue(geoShapeFieldMapper.fieldType().hasDocValues());\n    }\n","date":"2020-06-16 00:47:15","endLine":104,"groupId":"65131","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testDefaultConfiguration","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/87/4d1de94653c799460f3a7f7268e767da2ce6a3.src","preCode":"    public void testDefaultConfiguration() throws IOException {\n        String mapping = Strings.toString(XContentFactory.jsonBuilder().startObject().startObject(\"type1\")\n            .startObject(\"properties\").startObject(\"location\")\n            .field(\"type\", \"geo_shape\")\n            .endObject().endObject()\n            .endObject().endObject());\n\n        DocumentMapper defaultMapper = createIndex(\"test\").mapperService().documentMapperParser()\n            .parse(\"type1\", new CompressedXContent(mapping));\n        Mapper fieldMapper = defaultMapper.mappers().getMapper(\"location\");\n        assertThat(fieldMapper, instanceOf(GeoShapeWithDocValuesFieldMapper.class));\n\n        GeoShapeWithDocValuesFieldMapper geoShapeFieldMapper = (GeoShapeWithDocValuesFieldMapper) fieldMapper;\n        assertThat(geoShapeFieldMapper.fieldType().orientation(),\n            equalTo(org.elasticsearch.index.mapper.GeoShapeFieldMapper.Defaults.ORIENTATION.value()));\n        assertFalse(geoShapeFieldMapper.docValues().explicit());\n        assertTrue(geoShapeFieldMapper.docValues().value());\n        assertTrue(geoShapeFieldMapper.fieldType().hasDocValues());\n    }\n","realPath":"x-pack/plugin/spatial/src/test/java/org/elasticsearch/xpack/spatial/index/mapper/GeoShapeWithDocValuesFieldMapperTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":88,"status":"M"}],"commitId":"3b696828ada5953bb1669b972a353736383edf08","commitMessage":"@@@MappedFieldType should not extend FieldType (#57666)\n\nMappedFieldType is a combination of two concerns:\n\n* an extension of lucene's FieldType.  defining how a field should be indexed\n* a set of query factory methods.  defining how a field should be searched\n\nWe want to break these two concerns apart. This commit is a first step to doing this.  breaking\nthe inheritance relationship between MappedFieldType and FieldType. MappedFieldType \ninstead has a series of boolean flags defining whether or not the field is searchable or \naggregatable.  and FieldMapper has a separate FieldType passed to its constructor defining \nhow indexing should be done.\n\nRelates to #56814","date":"2020-06-16 00:47:15","modifiedFileCount":"257","status":"M","submitter":"Alan Woodward"},{"authorTime":"2020-06-16 00:47:15","codes":[{"authorDate":"2020-08-25 01:10:47","commitOrder":9,"curCode":"    public void testDefaultConfiguration() throws IOException {\n        DocumentMapper mapper = createDocumentMapper(fieldMapping(this::minimalMapping));\n        Mapper fieldMapper = mapper.mappers().getMapper(\"field\");\n        assertThat(fieldMapper, instanceOf(GeoShapeFieldMapper.class));\n        GeoShapeFieldMapper geoShapeFieldMapper = (GeoShapeFieldMapper) fieldMapper;\n        assertThat(geoShapeFieldMapper.fieldType().orientation(),\n            equalTo(GeoShapeFieldMapper.Defaults.ORIENTATION.value()));\n        assertThat(geoShapeFieldMapper.fieldType().hasDocValues(), equalTo(false));\n    }\n","date":"2020-08-25 01:10:47","endLine":83,"groupId":"65131","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testDefaultConfiguration","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/79/72c5250d4325af263d43b2cb48ccc974e5c03c.src","preCode":"    public void testDefaultConfiguration() throws IOException {\n        String mapping = Strings.toString(XContentFactory.jsonBuilder().startObject().startObject(\"type1\")\n            .startObject(\"properties\").startObject(\"location\")\n            .field(\"type\", \"geo_shape\")\n            .endObject().endObject()\n            .endObject().endObject());\n\n        DocumentMapper defaultMapper = createIndex(\"test\").mapperService().documentMapperParser()\n            .parse(\"type1\", new CompressedXContent(mapping));\n        Mapper fieldMapper = defaultMapper.mappers().getMapper(\"location\");\n        assertThat(fieldMapper, instanceOf(GeoShapeFieldMapper.class));\n\n        GeoShapeFieldMapper geoShapeFieldMapper = (GeoShapeFieldMapper) fieldMapper;\n        assertThat(geoShapeFieldMapper.fieldType().orientation(),\n            equalTo(GeoShapeFieldMapper.Defaults.ORIENTATION.value()));\n        assertThat(geoShapeFieldMapper.fieldType().hasDocValues(), equalTo(false));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/index/mapper/GeoShapeFieldMapperTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":75,"status":"M"},{"authorDate":"2020-06-16 00:47:15","commitOrder":9,"curCode":"    public void testDefaultConfiguration() throws IOException {\n        String mapping = Strings.toString(XContentFactory.jsonBuilder().startObject().startObject(\"type1\")\n            .startObject(\"properties\").startObject(\"location\")\n            .field(\"type\", \"geo_shape\")\n            .endObject().endObject()\n            .endObject().endObject());\n\n        DocumentMapper defaultMapper = createIndex(\"test\").mapperService().documentMapperParser()\n            .parse(\"type1\", new CompressedXContent(mapping));\n        Mapper fieldMapper = defaultMapper.mappers().getMapper(\"location\");\n        assertThat(fieldMapper, instanceOf(GeoShapeWithDocValuesFieldMapper.class));\n\n        GeoShapeWithDocValuesFieldMapper geoShapeFieldMapper = (GeoShapeWithDocValuesFieldMapper) fieldMapper;\n        assertThat(geoShapeFieldMapper.fieldType().orientation(),\n            equalTo(org.elasticsearch.index.mapper.GeoShapeFieldMapper.Defaults.ORIENTATION.value()));\n        assertTrue(geoShapeFieldMapper.fieldType().hasDocValues());\n    }\n","date":"2020-06-16 00:47:15","endLine":104,"groupId":"65131","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testDefaultConfiguration","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/87/4d1de94653c799460f3a7f7268e767da2ce6a3.src","preCode":"    public void testDefaultConfiguration() throws IOException {\n        String mapping = Strings.toString(XContentFactory.jsonBuilder().startObject().startObject(\"type1\")\n            .startObject(\"properties\").startObject(\"location\")\n            .field(\"type\", \"geo_shape\")\n            .endObject().endObject()\n            .endObject().endObject());\n\n        DocumentMapper defaultMapper = createIndex(\"test\").mapperService().documentMapperParser()\n            .parse(\"type1\", new CompressedXContent(mapping));\n        Mapper fieldMapper = defaultMapper.mappers().getMapper(\"location\");\n        assertThat(fieldMapper, instanceOf(GeoShapeWithDocValuesFieldMapper.class));\n\n        GeoShapeWithDocValuesFieldMapper geoShapeFieldMapper = (GeoShapeWithDocValuesFieldMapper) fieldMapper;\n        assertThat(geoShapeFieldMapper.fieldType().orientation(),\n            equalTo(org.elasticsearch.index.mapper.GeoShapeFieldMapper.Defaults.ORIENTATION.value()));\n        assertTrue(geoShapeFieldMapper.fieldType().hasDocValues());\n    }\n","realPath":"x-pack/plugin/spatial/src/test/java/org/elasticsearch/xpack/spatial/index/mapper/GeoShapeWithDocValuesFieldMapperTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":88,"status":"N"}],"commitId":"e2dd0bde26e6c1f9f1a5137a5bf432d348e4205e","commitMessage":"@@@Merge branch 'master' into feature/runtime_fields\n","date":"2020-08-25 01:10:47","modifiedFileCount":"48","status":"M","submitter":"Nik Everett"},{"authorTime":"2020-06-16 00:47:15","codes":[{"authorDate":"2020-10-22 16:11:41","commitOrder":10,"curCode":"    public void testDefaultConfiguration() throws IOException {\n        DocumentMapper mapper = createDocumentMapper(fieldMapping(this::minimalMapping));\n        Mapper fieldMapper = mapper.mappers().getMapper(\"field\");\n        assertThat(fieldMapper, instanceOf(GeoShapeFieldMapper.class));\n        GeoShapeFieldMapper geoShapeFieldMapper = (GeoShapeFieldMapper) fieldMapper;\n        assertThat(geoShapeFieldMapper.fieldType().orientation(),\n            equalTo(ShapeBuilder.Orientation.RIGHT));\n        assertThat(geoShapeFieldMapper.fieldType().hasDocValues(), equalTo(false));\n    }\n","date":"2020-10-22 16:11:41","endLine":83,"groupId":"65131","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"testDefaultConfiguration","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/ff/1f1ebad3dd8ddb0a3a377034bf3095fbd9cba6.src","preCode":"    public void testDefaultConfiguration() throws IOException {\n        DocumentMapper mapper = createDocumentMapper(fieldMapping(this::minimalMapping));\n        Mapper fieldMapper = mapper.mappers().getMapper(\"field\");\n        assertThat(fieldMapper, instanceOf(GeoShapeFieldMapper.class));\n        GeoShapeFieldMapper geoShapeFieldMapper = (GeoShapeFieldMapper) fieldMapper;\n        assertThat(geoShapeFieldMapper.fieldType().orientation(),\n            equalTo(GeoShapeFieldMapper.Defaults.ORIENTATION.value()));\n        assertThat(geoShapeFieldMapper.fieldType().hasDocValues(), equalTo(false));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/index/mapper/GeoShapeFieldMapperTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":75,"status":"M"},{"authorDate":"2020-06-16 00:47:15","commitOrder":10,"curCode":"    public void testDefaultConfiguration() throws IOException {\n        String mapping = Strings.toString(XContentFactory.jsonBuilder().startObject().startObject(\"type1\")\n            .startObject(\"properties\").startObject(\"location\")\n            .field(\"type\", \"geo_shape\")\n            .endObject().endObject()\n            .endObject().endObject());\n\n        DocumentMapper defaultMapper = createIndex(\"test\").mapperService().documentMapperParser()\n            .parse(\"type1\", new CompressedXContent(mapping));\n        Mapper fieldMapper = defaultMapper.mappers().getMapper(\"location\");\n        assertThat(fieldMapper, instanceOf(GeoShapeWithDocValuesFieldMapper.class));\n\n        GeoShapeWithDocValuesFieldMapper geoShapeFieldMapper = (GeoShapeWithDocValuesFieldMapper) fieldMapper;\n        assertThat(geoShapeFieldMapper.fieldType().orientation(),\n            equalTo(org.elasticsearch.index.mapper.GeoShapeFieldMapper.Defaults.ORIENTATION.value()));\n        assertTrue(geoShapeFieldMapper.fieldType().hasDocValues());\n    }\n","date":"2020-06-16 00:47:15","endLine":104,"groupId":"65131","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"testDefaultConfiguration","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/87/4d1de94653c799460f3a7f7268e767da2ce6a3.src","preCode":"    public void testDefaultConfiguration() throws IOException {\n        String mapping = Strings.toString(XContentFactory.jsonBuilder().startObject().startObject(\"type1\")\n            .startObject(\"properties\").startObject(\"location\")\n            .field(\"type\", \"geo_shape\")\n            .endObject().endObject()\n            .endObject().endObject());\n\n        DocumentMapper defaultMapper = createIndex(\"test\").mapperService().documentMapperParser()\n            .parse(\"type1\", new CompressedXContent(mapping));\n        Mapper fieldMapper = defaultMapper.mappers().getMapper(\"location\");\n        assertThat(fieldMapper, instanceOf(GeoShapeWithDocValuesFieldMapper.class));\n\n        GeoShapeWithDocValuesFieldMapper geoShapeFieldMapper = (GeoShapeWithDocValuesFieldMapper) fieldMapper;\n        assertThat(geoShapeFieldMapper.fieldType().orientation(),\n            equalTo(org.elasticsearch.index.mapper.GeoShapeFieldMapper.Defaults.ORIENTATION.value()));\n        assertTrue(geoShapeFieldMapper.fieldType().hasDocValues());\n    }\n","realPath":"x-pack/plugin/spatial/src/test/java/org/elasticsearch/xpack/spatial/index/mapper/GeoShapeWithDocValuesFieldMapperTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":88,"status":"N"}],"commitId":"bfaf3040c6e5245b6d3367483ba86c676dd09bd2","commitMessage":"@@@Convert geo field mappers to Parametrized form (#63836)\n\nRelates to #62988","date":"2020-10-22 16:11:41","modifiedFileCount":"42","status":"M","submitter":"Alan Woodward"},{"authorTime":"2020-11-06 23:20:25","codes":[{"authorDate":"2020-10-22 16:11:41","commitOrder":11,"curCode":"    public void testDefaultConfiguration() throws IOException {\n        DocumentMapper mapper = createDocumentMapper(fieldMapping(this::minimalMapping));\n        Mapper fieldMapper = mapper.mappers().getMapper(\"field\");\n        assertThat(fieldMapper, instanceOf(GeoShapeFieldMapper.class));\n        GeoShapeFieldMapper geoShapeFieldMapper = (GeoShapeFieldMapper) fieldMapper;\n        assertThat(geoShapeFieldMapper.fieldType().orientation(),\n            equalTo(ShapeBuilder.Orientation.RIGHT));\n        assertThat(geoShapeFieldMapper.fieldType().hasDocValues(), equalTo(false));\n    }\n","date":"2020-10-22 16:11:41","endLine":83,"groupId":"65131","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"testDefaultConfiguration","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/ff/1f1ebad3dd8ddb0a3a377034bf3095fbd9cba6.src","preCode":"    public void testDefaultConfiguration() throws IOException {\n        DocumentMapper mapper = createDocumentMapper(fieldMapping(this::minimalMapping));\n        Mapper fieldMapper = mapper.mappers().getMapper(\"field\");\n        assertThat(fieldMapper, instanceOf(GeoShapeFieldMapper.class));\n        GeoShapeFieldMapper geoShapeFieldMapper = (GeoShapeFieldMapper) fieldMapper;\n        assertThat(geoShapeFieldMapper.fieldType().orientation(),\n            equalTo(ShapeBuilder.Orientation.RIGHT));\n        assertThat(geoShapeFieldMapper.fieldType().hasDocValues(), equalTo(false));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/index/mapper/GeoShapeFieldMapperTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":75,"status":"N"},{"authorDate":"2020-11-06 23:20:25","commitOrder":11,"curCode":"    public void testDefaultConfiguration() throws IOException {\n\n        DocumentMapper mapper = createDocumentMapper(fieldMapping(this::minimalMapping));\n        Mapper fieldMapper = mapper.mappers().getMapper(\"field\");\n        assertThat(fieldMapper, instanceOf(GeoShapeWithDocValuesFieldMapper.class));\n\n        GeoShapeWithDocValuesFieldMapper geoShapeFieldMapper = (GeoShapeWithDocValuesFieldMapper) fieldMapper;\n        assertThat(geoShapeFieldMapper.fieldType().orientation(), equalTo(ShapeBuilder.Orientation.RIGHT));\n        assertTrue(geoShapeFieldMapper.fieldType().hasDocValues());\n    }\n","date":"2020-11-06 23:20:25","endLine":103,"groupId":"65131","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"testDefaultConfiguration","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/92/e7d0659f7b61103e260fdbf9d45d62ac7b437a.src","preCode":"    public void testDefaultConfiguration() throws IOException {\n        String mapping = Strings.toString(XContentFactory.jsonBuilder().startObject().startObject(\"type1\")\n            .startObject(\"properties\").startObject(\"location\")\n            .field(\"type\", \"geo_shape\")\n            .endObject().endObject()\n            .endObject().endObject());\n\n        DocumentMapper defaultMapper = createIndex(\"test\").mapperService().documentMapperParser()\n            .parse(\"type1\", new CompressedXContent(mapping));\n        Mapper fieldMapper = defaultMapper.mappers().getMapper(\"location\");\n        assertThat(fieldMapper, instanceOf(GeoShapeWithDocValuesFieldMapper.class));\n\n        GeoShapeWithDocValuesFieldMapper geoShapeFieldMapper = (GeoShapeWithDocValuesFieldMapper) fieldMapper;\n        assertThat(geoShapeFieldMapper.fieldType().orientation(),\n            equalTo(org.elasticsearch.index.mapper.GeoShapeFieldMapper.Defaults.ORIENTATION.value()));\n        assertTrue(geoShapeFieldMapper.fieldType().hasDocValues());\n    }\n","realPath":"x-pack/plugin/spatial/src/test/java/org/elasticsearch/xpack/spatial/index/mapper/GeoShapeWithDocValuesFieldMapperTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":94,"status":"M"}],"commitId":"038fc354abe932c3fc7615beb4e3b991f1219533","commitMessage":"@@@Use MapperTestCase for cartesian mappers tests (#64705)\n\nThis commit changes the cartesian mapper tests (point and shape fields) so that they use MapperTestCase. ","date":"2020-11-06 23:20:25","modifiedFileCount":"0","status":"M","submitter":"Ignacio Vera"},{"authorTime":"2021-06-17 05:31:31","codes":[{"authorDate":"2021-06-17 05:31:31","commitOrder":12,"curCode":"    public void testDefaultConfiguration() throws IOException {\n        DocumentMapper mapper = createDocumentMapper(fieldMapping(this::minimalMapping));\n        Mapper fieldMapper = mapper.mappers().getMapper(\"field\");\n        assertThat(fieldMapper, instanceOf(GeoShapeFieldMapper.class));\n        GeoShapeFieldMapper geoShapeFieldMapper = (GeoShapeFieldMapper) fieldMapper;\n        assertThat(geoShapeFieldMapper.fieldType().orientation(),\n            equalTo(Orientation.RIGHT));\n        assertThat(geoShapeFieldMapper.fieldType().hasDocValues(), equalTo(false));\n    }\n","date":"2021-06-17 05:31:31","endLine":79,"groupId":"102979","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"testDefaultConfiguration","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/11/10849e29abc48342b1b0f7495f79f6dec47afa.src","preCode":"    public void testDefaultConfiguration() throws IOException {\n        DocumentMapper mapper = createDocumentMapper(fieldMapping(this::minimalMapping));\n        Mapper fieldMapper = mapper.mappers().getMapper(\"field\");\n        assertThat(fieldMapper, instanceOf(GeoShapeFieldMapper.class));\n        GeoShapeFieldMapper geoShapeFieldMapper = (GeoShapeFieldMapper) fieldMapper;\n        assertThat(geoShapeFieldMapper.fieldType().orientation(),\n            equalTo(ShapeBuilder.Orientation.RIGHT));\n        assertThat(geoShapeFieldMapper.fieldType().hasDocValues(), equalTo(false));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/index/mapper/GeoShapeFieldMapperTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":71,"status":"M"},{"authorDate":"2021-06-17 05:31:31","commitOrder":12,"curCode":"    public void testDefaultConfiguration() throws IOException {\n\n        DocumentMapper mapper = createDocumentMapper(fieldMapping(this::minimalMapping));\n        Mapper fieldMapper = mapper.mappers().getMapper(\"field\");\n        assertThat(fieldMapper, instanceOf(GeoShapeWithDocValuesFieldMapper.class));\n\n        GeoShapeWithDocValuesFieldMapper geoShapeFieldMapper = (GeoShapeWithDocValuesFieldMapper) fieldMapper;\n        assertThat(geoShapeFieldMapper.fieldType().orientation(), equalTo(Orientation.RIGHT));\n        assertTrue(geoShapeFieldMapper.fieldType().hasDocValues());\n    }\n","date":"2021-06-17 05:31:31","endLine":105,"groupId":"102979","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"testDefaultConfiguration","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/6a/0abebb5f372fbeab5d97c11b5dc9fdcfc10827.src","preCode":"    public void testDefaultConfiguration() throws IOException {\n\n        DocumentMapper mapper = createDocumentMapper(fieldMapping(this::minimalMapping));\n        Mapper fieldMapper = mapper.mappers().getMapper(\"field\");\n        assertThat(fieldMapper, instanceOf(GeoShapeWithDocValuesFieldMapper.class));\n\n        GeoShapeWithDocValuesFieldMapper geoShapeFieldMapper = (GeoShapeWithDocValuesFieldMapper) fieldMapper;\n        assertThat(geoShapeFieldMapper.fieldType().orientation(), equalTo(ShapeBuilder.Orientation.RIGHT));\n        assertTrue(geoShapeFieldMapper.fieldType().hasDocValues());\n    }\n","realPath":"x-pack/plugin/spatial/src/test/java/org/elasticsearch/xpack/spatial/index/mapper/GeoShapeWithDocValuesFieldMapperTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":96,"status":"M"}],"commitId":"6a8f8f3f718bd21bf14176049c9e1f1def13463b","commitMessage":"@@@Merge remote-tracking branch 'elastic/master' into feature/vector-tiles\n","date":"2021-06-17 05:31:31","modifiedFileCount":"4429","status":"M","submitter":"Igor Motov"}]
