[{"authorTime":"2018-04-26 03:22:53","codes":[{"authorDate":"2018-04-26 03:22:53","commitOrder":1,"curCode":"    public void testToQueryMultipleFieldsBooleanQuery() throws Exception {\n        assumeTrue(\"test runs only when at least a type is registered\", getCurrentTypes().length > 0);\n        Query query = queryStringQuery(\"test\").field(STRING_FIELD_NAME)\n            .field(STRING_FIELD_NAME_2)\n            .toQuery(createShardContext());\n        assertThat(query, instanceOf(DisjunctionMaxQuery.class));\n        DisjunctionMaxQuery bQuery = (DisjunctionMaxQuery) query;\n        assertThat(bQuery.getDisjuncts().size(), equalTo(2));\n        assertThat(assertDisjunctionSubQuery(query, TermQuery.class, 0).getTerm(),\n            equalTo(new Term(STRING_FIELD_NAME, \"test\")));\n        assertThat(assertDisjunctionSubQuery(query, TermQuery.class, 1).getTerm(),\n            equalTo(new Term(STRING_FIELD_NAME_2, \"test\")));\n    }\n","date":"2018-04-26 03:22:53","endLine":493,"groupId":"21336","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testToQueryMultipleFieldsBooleanQuery","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/aa/fc66b3985e19e663446f001ab216edcf8db93e.src","preCode":"    public void testToQueryMultipleFieldsBooleanQuery() throws Exception {\n        assumeTrue(\"test runs only when at least a type is registered\", getCurrentTypes().length > 0);\n        Query query = queryStringQuery(\"test\").field(STRING_FIELD_NAME)\n            .field(STRING_FIELD_NAME_2)\n            .toQuery(createShardContext());\n        assertThat(query, instanceOf(DisjunctionMaxQuery.class));\n        DisjunctionMaxQuery bQuery = (DisjunctionMaxQuery) query;\n        assertThat(bQuery.getDisjuncts().size(), equalTo(2));\n        assertThat(assertDisjunctionSubQuery(query, TermQuery.class, 0).getTerm(),\n            equalTo(new Term(STRING_FIELD_NAME, \"test\")));\n        assertThat(assertDisjunctionSubQuery(query, TermQuery.class, 1).getTerm(),\n            equalTo(new Term(STRING_FIELD_NAME_2, \"test\")));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/index/query/QueryStringQueryBuilderTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":481,"status":"B"},{"authorDate":"2018-04-26 03:22:53","commitOrder":1,"curCode":"    public void testToQueryMultipleFieldsDisMaxQuery() throws Exception {\n        assumeTrue(\"test runs only when at least a type is registered\", getCurrentTypes().length > 0);\n        Query query = queryStringQuery(\"test\").field(STRING_FIELD_NAME).field(STRING_FIELD_NAME_2)\n            .toQuery(createShardContext());\n        assertThat(query, instanceOf(DisjunctionMaxQuery.class));\n        DisjunctionMaxQuery disMaxQuery = (DisjunctionMaxQuery) query;\n        List<Query> disjuncts = disMaxQuery.getDisjuncts();\n        assertThat(((TermQuery) disjuncts.get(0)).getTerm(), equalTo(new Term(STRING_FIELD_NAME, \"test\")));\n        assertThat(((TermQuery) disjuncts.get(1)).getTerm(), equalTo(new Term(STRING_FIELD_NAME_2, \"test\")));\n    }\n","date":"2018-04-26 03:22:53","endLine":504,"groupId":"70965","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testToQueryMultipleFieldsDisMaxQuery","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/aa/fc66b3985e19e663446f001ab216edcf8db93e.src","preCode":"    public void testToQueryMultipleFieldsDisMaxQuery() throws Exception {\n        assumeTrue(\"test runs only when at least a type is registered\", getCurrentTypes().length > 0);\n        Query query = queryStringQuery(\"test\").field(STRING_FIELD_NAME).field(STRING_FIELD_NAME_2)\n            .toQuery(createShardContext());\n        assertThat(query, instanceOf(DisjunctionMaxQuery.class));\n        DisjunctionMaxQuery disMaxQuery = (DisjunctionMaxQuery) query;\n        List<Query> disjuncts = disMaxQuery.getDisjuncts();\n        assertThat(((TermQuery) disjuncts.get(0)).getTerm(), equalTo(new Term(STRING_FIELD_NAME, \"test\")));\n        assertThat(((TermQuery) disjuncts.get(1)).getTerm(), equalTo(new Term(STRING_FIELD_NAME_2, \"test\")));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/index/query/QueryStringQueryBuilderTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":495,"status":"B"}],"commitId":"d74fb9eb4559077e2d20b19a9ed62d9ff825027a","commitMessage":"@@@Opened x-pack ILM code\n","date":"2018-04-26 03:22:53","modifiedFileCount":"0","status":"B","submitter":"Tal Levy"},{"authorTime":"2018-07-27 17:51:09","codes":[{"authorDate":"2018-07-27 17:51:09","commitOrder":2,"curCode":"    public void testToQueryMultipleFieldsBooleanQuery() throws Exception {\n        Query query = queryStringQuery(\"test\").field(STRING_FIELD_NAME)\n            .field(STRING_FIELD_NAME_2)\n            .toQuery(createShardContext());\n        assertThat(query, instanceOf(DisjunctionMaxQuery.class));\n        DisjunctionMaxQuery bQuery = (DisjunctionMaxQuery) query;\n        assertThat(bQuery.getDisjuncts().size(), equalTo(2));\n        assertThat(assertDisjunctionSubQuery(query, TermQuery.class, 0).getTerm(),\n            equalTo(new Term(STRING_FIELD_NAME, \"test\")));\n        assertThat(assertDisjunctionSubQuery(query, TermQuery.class, 1).getTerm(),\n            equalTo(new Term(STRING_FIELD_NAME_2, \"test\")));\n    }\n","date":"2018-07-27 17:51:09","endLine":485,"groupId":"21336","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testToQueryMultipleFieldsBooleanQuery","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/87/197b662d142956ef2108dfad7672add3fb9657.src","preCode":"    public void testToQueryMultipleFieldsBooleanQuery() throws Exception {\n        assumeTrue(\"test runs only when at least a type is registered\", getCurrentTypes().length > 0);\n        Query query = queryStringQuery(\"test\").field(STRING_FIELD_NAME)\n            .field(STRING_FIELD_NAME_2)\n            .toQuery(createShardContext());\n        assertThat(query, instanceOf(DisjunctionMaxQuery.class));\n        DisjunctionMaxQuery bQuery = (DisjunctionMaxQuery) query;\n        assertThat(bQuery.getDisjuncts().size(), equalTo(2));\n        assertThat(assertDisjunctionSubQuery(query, TermQuery.class, 0).getTerm(),\n            equalTo(new Term(STRING_FIELD_NAME, \"test\")));\n        assertThat(assertDisjunctionSubQuery(query, TermQuery.class, 1).getTerm(),\n            equalTo(new Term(STRING_FIELD_NAME_2, \"test\")));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/index/query/QueryStringQueryBuilderTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":474,"status":"M"},{"authorDate":"2018-07-27 17:51:09","commitOrder":2,"curCode":"    public void testToQueryMultipleFieldsDisMaxQuery() throws Exception {\n        Query query = queryStringQuery(\"test\").field(STRING_FIELD_NAME).field(STRING_FIELD_NAME_2)\n            .toQuery(createShardContext());\n        assertThat(query, instanceOf(DisjunctionMaxQuery.class));\n        DisjunctionMaxQuery disMaxQuery = (DisjunctionMaxQuery) query;\n        List<Query> disjuncts = disMaxQuery.getDisjuncts();\n        assertThat(((TermQuery) disjuncts.get(0)).getTerm(), equalTo(new Term(STRING_FIELD_NAME, \"test\")));\n        assertThat(((TermQuery) disjuncts.get(1)).getTerm(), equalTo(new Term(STRING_FIELD_NAME_2, \"test\")));\n    }\n","date":"2018-07-27 17:51:09","endLine":495,"groupId":"70965","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testToQueryMultipleFieldsDisMaxQuery","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/87/197b662d142956ef2108dfad7672add3fb9657.src","preCode":"    public void testToQueryMultipleFieldsDisMaxQuery() throws Exception {\n        assumeTrue(\"test runs only when at least a type is registered\", getCurrentTypes().length > 0);\n        Query query = queryStringQuery(\"test\").field(STRING_FIELD_NAME).field(STRING_FIELD_NAME_2)\n            .toQuery(createShardContext());\n        assertThat(query, instanceOf(DisjunctionMaxQuery.class));\n        DisjunctionMaxQuery disMaxQuery = (DisjunctionMaxQuery) query;\n        List<Query> disjuncts = disMaxQuery.getDisjuncts();\n        assertThat(((TermQuery) disjuncts.get(0)).getTerm(), equalTo(new Term(STRING_FIELD_NAME, \"test\")));\n        assertThat(((TermQuery) disjuncts.get(1)).getTerm(), equalTo(new Term(STRING_FIELD_NAME_2, \"test\")));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/index/query/QueryStringQueryBuilderTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":487,"status":"M"}],"commitId":"dfb277cfb7969ad543a31dea234579d0e886a73a","commitMessage":"@@@Merge branch 'master' into index-lifecycle\n","date":"2018-07-27 17:51:09","modifiedFileCount":"105","status":"M","submitter":"Colin Goodheart-Smithe"},{"authorTime":"2020-04-03 22:00:46","codes":[{"authorDate":"2020-04-03 22:00:46","commitOrder":3,"curCode":"    public void testToQueryMultipleFieldsBooleanQuery() throws Exception {\n        Query query = queryStringQuery(\"test\").field(TEXT_FIELD_NAME)\n            .field(KEYWORD_FIELD_NAME)\n            .toQuery(createShardContext());\n        assertThat(query, instanceOf(DisjunctionMaxQuery.class));\n        DisjunctionMaxQuery bQuery = (DisjunctionMaxQuery) query;\n        assertThat(bQuery.getDisjuncts().size(), equalTo(2));\n        assertThat(assertDisjunctionSubQuery(query, TermQuery.class, 0).getTerm(),\n            equalTo(new Term(TEXT_FIELD_NAME, \"test\")));\n        assertThat(assertDisjunctionSubQuery(query, TermQuery.class, 1).getTerm(),\n            equalTo(new Term(KEYWORD_FIELD_NAME, \"test\")));\n    }\n","date":"2020-04-03 22:00:46","endLine":503,"groupId":"21336","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testToQueryMultipleFieldsBooleanQuery","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/a2/7bce5edab3d92a09f5d9650631122009f57a11.src","preCode":"    public void testToQueryMultipleFieldsBooleanQuery() throws Exception {\n        Query query = queryStringQuery(\"test\").field(STRING_FIELD_NAME)\n            .field(STRING_FIELD_NAME_2)\n            .toQuery(createShardContext());\n        assertThat(query, instanceOf(DisjunctionMaxQuery.class));\n        DisjunctionMaxQuery bQuery = (DisjunctionMaxQuery) query;\n        assertThat(bQuery.getDisjuncts().size(), equalTo(2));\n        assertThat(assertDisjunctionSubQuery(query, TermQuery.class, 0).getTerm(),\n            equalTo(new Term(STRING_FIELD_NAME, \"test\")));\n        assertThat(assertDisjunctionSubQuery(query, TermQuery.class, 1).getTerm(),\n            equalTo(new Term(STRING_FIELD_NAME_2, \"test\")));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/index/query/QueryStringQueryBuilderTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":492,"status":"M"},{"authorDate":"2020-04-03 22:00:46","commitOrder":3,"curCode":"    public void testToQueryMultipleFieldsDisMaxQuery() throws Exception {\n        Query query = queryStringQuery(\"test\").field(TEXT_FIELD_NAME).field(KEYWORD_FIELD_NAME)\n            .toQuery(createShardContext());\n        assertThat(query, instanceOf(DisjunctionMaxQuery.class));\n        DisjunctionMaxQuery disMaxQuery = (DisjunctionMaxQuery) query;\n        List<Query> disjuncts = disMaxQuery.getDisjuncts();\n        assertThat(((TermQuery) disjuncts.get(0)).getTerm(), equalTo(new Term(TEXT_FIELD_NAME, \"test\")));\n        assertThat(((TermQuery) disjuncts.get(1)).getTerm(), equalTo(new Term(KEYWORD_FIELD_NAME, \"test\")));\n    }\n","date":"2020-04-03 22:00:46","endLine":513,"groupId":"70965","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testToQueryMultipleFieldsDisMaxQuery","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/a2/7bce5edab3d92a09f5d9650631122009f57a11.src","preCode":"    public void testToQueryMultipleFieldsDisMaxQuery() throws Exception {\n        Query query = queryStringQuery(\"test\").field(STRING_FIELD_NAME).field(STRING_FIELD_NAME_2)\n            .toQuery(createShardContext());\n        assertThat(query, instanceOf(DisjunctionMaxQuery.class));\n        DisjunctionMaxQuery disMaxQuery = (DisjunctionMaxQuery) query;\n        List<Query> disjuncts = disMaxQuery.getDisjuncts();\n        assertThat(((TermQuery) disjuncts.get(0)).getTerm(), equalTo(new Term(STRING_FIELD_NAME, \"test\")));\n        assertThat(((TermQuery) disjuncts.get(1)).getTerm(), equalTo(new Term(STRING_FIELD_NAME_2, \"test\")));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/index/query/QueryStringQueryBuilderTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":505,"status":"M"}],"commitId":"f5759bb2092f1a957e79626c872c3f5707c1ee04","commitMessage":"@@@Rename field name constants in AbstractBuilderTestCase (#53234)\n\nSome field name constants were not updaten when we moved from \"string\" to \"text\"\nand \"keyword\" fields. Renaming them makes it easier and faster to know which\nfield type is used in test subclassing this base test case.","date":"2020-04-03 22:00:46","modifiedFileCount":"34","status":"M","submitter":"Christoph B?scher"},{"authorTime":"2021-01-15 01:11:59","codes":[{"authorDate":"2021-01-15 01:11:59","commitOrder":4,"curCode":"    public void testToQueryMultipleFieldsBooleanQuery() throws Exception {\n        Query query = queryStringQuery(\"test\").field(TEXT_FIELD_NAME)\n            .field(KEYWORD_FIELD_NAME)\n            .toQuery(createSearchExecutionContext());\n        assertThat(query, instanceOf(DisjunctionMaxQuery.class));\n        DisjunctionMaxQuery bQuery = (DisjunctionMaxQuery) query;\n        assertThat(bQuery.getDisjuncts().size(), equalTo(2));\n        assertThat(assertDisjunctionSubQuery(query, TermQuery.class, 0).getTerm(),\n            equalTo(new Term(TEXT_FIELD_NAME, \"test\")));\n        assertThat(assertDisjunctionSubQuery(query, TermQuery.class, 1).getTerm(),\n            equalTo(new Term(KEYWORD_FIELD_NAME, \"test\")));\n    }\n","date":"2021-01-15 01:11:59","endLine":506,"groupId":"21336","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"testToQueryMultipleFieldsBooleanQuery","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/c3/f2b7c45a7bb331c91e314966d9eec736b3e669.src","preCode":"    public void testToQueryMultipleFieldsBooleanQuery() throws Exception {\n        Query query = queryStringQuery(\"test\").field(TEXT_FIELD_NAME)\n            .field(KEYWORD_FIELD_NAME)\n            .toQuery(createShardContext());\n        assertThat(query, instanceOf(DisjunctionMaxQuery.class));\n        DisjunctionMaxQuery bQuery = (DisjunctionMaxQuery) query;\n        assertThat(bQuery.getDisjuncts().size(), equalTo(2));\n        assertThat(assertDisjunctionSubQuery(query, TermQuery.class, 0).getTerm(),\n            equalTo(new Term(TEXT_FIELD_NAME, \"test\")));\n        assertThat(assertDisjunctionSubQuery(query, TermQuery.class, 1).getTerm(),\n            equalTo(new Term(KEYWORD_FIELD_NAME, \"test\")));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/index/query/QueryStringQueryBuilderTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":495,"status":"M"},{"authorDate":"2021-01-15 01:11:59","commitOrder":4,"curCode":"    public void testToQueryMultipleFieldsDisMaxQuery() throws Exception {\n        Query query = queryStringQuery(\"test\").field(TEXT_FIELD_NAME).field(KEYWORD_FIELD_NAME)\n            .toQuery(createSearchExecutionContext());\n        assertThat(query, instanceOf(DisjunctionMaxQuery.class));\n        DisjunctionMaxQuery disMaxQuery = (DisjunctionMaxQuery) query;\n        List<Query> disjuncts = disMaxQuery.getDisjuncts();\n        assertThat(((TermQuery) disjuncts.get(0)).getTerm(), equalTo(new Term(TEXT_FIELD_NAME, \"test\")));\n        assertThat(((TermQuery) disjuncts.get(1)).getTerm(), equalTo(new Term(KEYWORD_FIELD_NAME, \"test\")));\n    }\n","date":"2021-01-15 01:11:59","endLine":516,"groupId":"70965","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"testToQueryMultipleFieldsDisMaxQuery","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/c3/f2b7c45a7bb331c91e314966d9eec736b3e669.src","preCode":"    public void testToQueryMultipleFieldsDisMaxQuery() throws Exception {\n        Query query = queryStringQuery(\"test\").field(TEXT_FIELD_NAME).field(KEYWORD_FIELD_NAME)\n            .toQuery(createShardContext());\n        assertThat(query, instanceOf(DisjunctionMaxQuery.class));\n        DisjunctionMaxQuery disMaxQuery = (DisjunctionMaxQuery) query;\n        List<Query> disjuncts = disMaxQuery.getDisjuncts();\n        assertThat(((TermQuery) disjuncts.get(0)).getTerm(), equalTo(new Term(TEXT_FIELD_NAME, \"test\")));\n        assertThat(((TermQuery) disjuncts.get(1)).getTerm(), equalTo(new Term(KEYWORD_FIELD_NAME, \"test\")));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/index/query/QueryStringQueryBuilderTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":508,"status":"M"}],"commitId":"5852fbedf52c77b0a76c2c731fdd4982fb65cd87","commitMessage":"@@@Rename QueryShardContext -> SearchExecutionContext. (#67490)\n\nWe decided to rename `QueryShardContext` to clarify that it supports all parts\nof search request execution. Before there was confusion over whether it should\nonly be used for building queries.  or maybe only used in the query phase. This\nPR also updates the javadocs.\n\nCloses #64740.","date":"2021-01-15 01:11:59","modifiedFileCount":"357","status":"M","submitter":"Julie Tibshirani"},{"authorTime":"2021-06-17 05:31:31","codes":[{"authorDate":"2021-06-17 05:31:31","commitOrder":5,"curCode":"    public void testToQueryMultipleFieldsBooleanQuery() throws Exception {\n        Query query = queryStringQuery(\"test\").field(TEXT_FIELD_NAME)\n            .field(KEYWORD_FIELD_NAME)\n            .toQuery(createSearchExecutionContext());\n        assertThat(query, instanceOf(DisjunctionMaxQuery.class));\n        DisjunctionMaxQuery dQuery = (DisjunctionMaxQuery) query;\n        assertThat(dQuery.getDisjuncts().size(), equalTo(2));\n        assertThat(dQuery.getDisjuncts(),\n            hasItems(new TermQuery(new Term(TEXT_FIELD_NAME, \"test\")), new TermQuery(new Term(KEYWORD_FIELD_NAME, \"test\"))));\n    }\n","date":"2021-06-17 05:31:31","endLine":497,"groupId":"103477","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"testToQueryMultipleFieldsBooleanQuery","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/3c/6f5c1d4b3a341cf234c2188b63d85bd812e23b.src","preCode":"    public void testToQueryMultipleFieldsBooleanQuery() throws Exception {\n        Query query = queryStringQuery(\"test\").field(TEXT_FIELD_NAME)\n            .field(KEYWORD_FIELD_NAME)\n            .toQuery(createSearchExecutionContext());\n        assertThat(query, instanceOf(DisjunctionMaxQuery.class));\n        DisjunctionMaxQuery bQuery = (DisjunctionMaxQuery) query;\n        assertThat(bQuery.getDisjuncts().size(), equalTo(2));\n        assertThat(assertDisjunctionSubQuery(query, TermQuery.class, 0).getTerm(),\n            equalTo(new Term(TEXT_FIELD_NAME, \"test\")));\n        assertThat(assertDisjunctionSubQuery(query, TermQuery.class, 1).getTerm(),\n            equalTo(new Term(KEYWORD_FIELD_NAME, \"test\")));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/index/query/QueryStringQueryBuilderTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":488,"status":"M"},{"authorDate":"2021-06-17 05:31:31","commitOrder":5,"curCode":"    public void testToQueryMultipleFieldsDisMaxQuery() throws Exception {\n        Query query = queryStringQuery(\"test\").field(TEXT_FIELD_NAME).field(KEYWORD_FIELD_NAME)\n            .toQuery(createSearchExecutionContext());\n        assertThat(query, instanceOf(DisjunctionMaxQuery.class));\n        DisjunctionMaxQuery disMaxQuery = (DisjunctionMaxQuery) query;\n        assertThat(disMaxQuery.getDisjuncts(),\n            hasItems(new TermQuery(new Term(TEXT_FIELD_NAME, \"test\")), new TermQuery(new Term(KEYWORD_FIELD_NAME, \"test\"))));\n    }\n","date":"2021-06-17 05:31:31","endLine":506,"groupId":"103477","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"testToQueryMultipleFieldsDisMaxQuery","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/3c/6f5c1d4b3a341cf234c2188b63d85bd812e23b.src","preCode":"    public void testToQueryMultipleFieldsDisMaxQuery() throws Exception {\n        Query query = queryStringQuery(\"test\").field(TEXT_FIELD_NAME).field(KEYWORD_FIELD_NAME)\n            .toQuery(createSearchExecutionContext());\n        assertThat(query, instanceOf(DisjunctionMaxQuery.class));\n        DisjunctionMaxQuery disMaxQuery = (DisjunctionMaxQuery) query;\n        List<Query> disjuncts = disMaxQuery.getDisjuncts();\n        assertThat(((TermQuery) disjuncts.get(0)).getTerm(), equalTo(new Term(TEXT_FIELD_NAME, \"test\")));\n        assertThat(((TermQuery) disjuncts.get(1)).getTerm(), equalTo(new Term(KEYWORD_FIELD_NAME, \"test\")));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/index/query/QueryStringQueryBuilderTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":499,"status":"M"}],"commitId":"6a8f8f3f718bd21bf14176049c9e1f1def13463b","commitMessage":"@@@Merge remote-tracking branch 'elastic/master' into feature/vector-tiles\n","date":"2021-06-17 05:31:31","modifiedFileCount":"4429","status":"M","submitter":"Igor Motov"}]
