[{"authorTime":"2018-04-26 03:22:53","codes":[{"authorDate":"2018-04-26 03:22:53","commitOrder":1,"curCode":"    public void testNoMetaDataUpgrade() throws Exception {\n        MetaData metaData = randomMetaData(new CustomMetaData1(\"data\"));\n        MetaDataUpgrader metaDataUpgrader = new MetaDataUpgrader(Collections.emptyList(), Collections.emptyList());\n        MetaData upgrade = GatewayMetaState.upgradeMetaData(metaData, new MockMetaDataIndexUpgradeService(false), metaDataUpgrader);\n        assertTrue(upgrade == metaData);\n        assertTrue(MetaData.isGlobalStateEquals(upgrade, metaData));\n        for (IndexMetaData indexMetaData : upgrade) {\n            assertTrue(metaData.hasIndexMetaData(indexMetaData));\n        }\n    }\n","date":"2018-04-26 03:22:53","endLine":332,"groupId":"67166","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testNoMetaDataUpgrade","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/ce/f3502a077c54c35abe5c9d95d8857314049e15.src","preCode":"    public void testNoMetaDataUpgrade() throws Exception {\n        MetaData metaData = randomMetaData(new CustomMetaData1(\"data\"));\n        MetaDataUpgrader metaDataUpgrader = new MetaDataUpgrader(Collections.emptyList(), Collections.emptyList());\n        MetaData upgrade = GatewayMetaState.upgradeMetaData(metaData, new MockMetaDataIndexUpgradeService(false), metaDataUpgrader);\n        assertTrue(upgrade == metaData);\n        assertTrue(MetaData.isGlobalStateEquals(upgrade, metaData));\n        for (IndexMetaData indexMetaData : upgrade) {\n            assertTrue(metaData.hasIndexMetaData(indexMetaData));\n        }\n    }\n","realPath":"server/src/test/java/org/elasticsearch/gateway/GatewayMetaStateTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":323,"status":"B"},{"authorDate":"2018-04-26 03:22:53","commitOrder":1,"curCode":"    public void testIndexMetaDataUpgrade() throws Exception {\n        MetaData metaData = randomMetaData();\n        MetaDataUpgrader metaDataUpgrader = new MetaDataUpgrader(Collections.emptyList(), Collections.emptyList());\n        MetaData upgrade = GatewayMetaState.upgradeMetaData(metaData, new MockMetaDataIndexUpgradeService(true), metaDataUpgrader);\n        assertTrue(upgrade != metaData);\n        assertTrue(MetaData.isGlobalStateEquals(upgrade, metaData));\n        for (IndexMetaData indexMetaData : upgrade) {\n            assertFalse(metaData.hasIndexMetaData(indexMetaData));\n        }\n    }\n","date":"2018-04-26 03:22:53","endLine":395,"groupId":"2692","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testIndexMetaDataUpgrade","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/ce/f3502a077c54c35abe5c9d95d8857314049e15.src","preCode":"    public void testIndexMetaDataUpgrade() throws Exception {\n        MetaData metaData = randomMetaData();\n        MetaDataUpgrader metaDataUpgrader = new MetaDataUpgrader(Collections.emptyList(), Collections.emptyList());\n        MetaData upgrade = GatewayMetaState.upgradeMetaData(metaData, new MockMetaDataIndexUpgradeService(true), metaDataUpgrader);\n        assertTrue(upgrade != metaData);\n        assertTrue(MetaData.isGlobalStateEquals(upgrade, metaData));\n        for (IndexMetaData indexMetaData : upgrade) {\n            assertFalse(metaData.hasIndexMetaData(indexMetaData));\n        }\n    }\n","realPath":"server/src/test/java/org/elasticsearch/gateway/GatewayMetaStateTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":386,"status":"B"}],"commitId":"d74fb9eb4559077e2d20b19a9ed62d9ff825027a","commitMessage":"@@@Opened x-pack ILM code\n","date":"2018-04-26 03:22:53","modifiedFileCount":"0","status":"B","submitter":"Tal Levy"},{"authorTime":"2019-09-30 23:57:56","codes":[{"authorDate":"2019-09-30 23:57:56","commitOrder":2,"curCode":"    public void testNoMetaDataUpgrade() {\n        MetaData metaData = randomMetaData(new CustomMetaData1(\"data\"));\n        MetaDataUpgrader metaDataUpgrader = new MetaDataUpgrader(Collections.emptyList());\n        MetaData upgrade = GatewayMetaState.upgradeMetaData(metaData, new MockMetaDataIndexUpgradeService(false), metaDataUpgrader);\n        assertSame(upgrade, metaData);\n        assertTrue(MetaData.isGlobalStateEquals(upgrade, metaData));\n        for (IndexMetaData indexMetaData : upgrade) {\n            assertTrue(metaData.hasIndexMetaData(indexMetaData));\n        }\n    }\n","date":"2019-09-30 23:57:56","endLine":68,"groupId":"67166","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testNoMetaDataUpgrade","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/df/d2aff4ada0de2212c7b5bcd83df42017f53721.src","preCode":"    public void testNoMetaDataUpgrade() throws Exception {\n        MetaData metaData = randomMetaData(new CustomMetaData1(\"data\"));\n        MetaDataUpgrader metaDataUpgrader = new MetaDataUpgrader(Collections.emptyList(), Collections.emptyList());\n        MetaData upgrade = GatewayMetaState.upgradeMetaData(metaData, new MockMetaDataIndexUpgradeService(false), metaDataUpgrader);\n        assertTrue(upgrade == metaData);\n        assertTrue(MetaData.isGlobalStateEquals(upgrade, metaData));\n        for (IndexMetaData indexMetaData : upgrade) {\n            assertTrue(metaData.hasIndexMetaData(indexMetaData));\n        }\n    }\n","realPath":"server/src/test/java/org/elasticsearch/gateway/GatewayMetaStateTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":59,"status":"M"},{"authorDate":"2019-09-30 23:57:56","commitOrder":2,"curCode":"    public void testIndexMetaDataUpgrade() {\n        MetaData metaData = randomMetaData();\n        MetaDataUpgrader metaDataUpgrader = new MetaDataUpgrader(Collections.emptyList());\n        MetaData upgrade = GatewayMetaState.upgradeMetaData(metaData, new MockMetaDataIndexUpgradeService(true), metaDataUpgrader);\n        assertNotSame(upgrade, metaData);\n        assertTrue(MetaData.isGlobalStateEquals(upgrade, metaData));\n        for (IndexMetaData indexMetaData : upgrade) {\n            assertFalse(metaData.hasIndexMetaData(indexMetaData));\n        }\n    }\n","date":"2019-09-30 23:57:56","endLine":89,"groupId":"10345","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testIndexMetaDataUpgrade","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/df/d2aff4ada0de2212c7b5bcd83df42017f53721.src","preCode":"    public void testIndexMetaDataUpgrade() throws Exception {\n        MetaData metaData = randomMetaData();\n        MetaDataUpgrader metaDataUpgrader = new MetaDataUpgrader(Collections.emptyList(), Collections.emptyList());\n        MetaData upgrade = GatewayMetaState.upgradeMetaData(metaData, new MockMetaDataIndexUpgradeService(true), metaDataUpgrader);\n        assertTrue(upgrade != metaData);\n        assertTrue(MetaData.isGlobalStateEquals(upgrade, metaData));\n        for (IndexMetaData indexMetaData : upgrade) {\n            assertFalse(metaData.hasIndexMetaData(indexMetaData));\n        }\n    }\n","realPath":"server/src/test/java/org/elasticsearch/gateway/GatewayMetaStateTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":80,"status":"M"}],"commitId":"cb800aba63f1e5dbd46e5f4b34f2749b48f64620","commitMessage":"@@@Remove unused pluggable metadata upgraders (#47297)\n\nToday plugins may provide upgraders for custom metadata and index metadata.  but\nthese upgraders are bypassed during a rolling restart. Fortunately this\nextension mechanism is unused by all known plugins. This commit removes these\nextension points.","date":"2019-09-30 23:57:56","modifiedFileCount":"9","status":"M","submitter":"David Turner"},{"authorTime":"2020-04-01 03:52:01","codes":[{"authorDate":"2020-04-01 03:52:01","commitOrder":3,"curCode":"    public void testNoMetadataUpgrade() {\n        Metadata metadata = randomMetadata(new CustomMetadata1(\"data\"));\n        MetadataUpgrader metadataUpgrader = new MetadataUpgrader(Collections.emptyList());\n        Metadata upgrade = GatewayMetaState.upgradeMetadata(metadata, new MockMetadataIndexUpgradeService(false), metadataUpgrader);\n        assertSame(upgrade, metadata);\n        assertTrue(Metadata.isGlobalStateEquals(upgrade, metadata));\n        for (IndexMetadata indexMetadata : upgrade) {\n            assertTrue(metadata.hasIndexMetadata(indexMetadata));\n        }\n    }\n","date":"2020-04-01 03:52:01","endLine":68,"groupId":"67166","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testNoMetadataUpgrade","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/f8/1af5d712ac68734834d5e7dd056d902a75c0a8.src","preCode":"    public void testNoMetaDataUpgrade() {\n        MetaData metaData = randomMetaData(new CustomMetaData1(\"data\"));\n        MetaDataUpgrader metaDataUpgrader = new MetaDataUpgrader(Collections.emptyList());\n        MetaData upgrade = GatewayMetaState.upgradeMetaData(metaData, new MockMetaDataIndexUpgradeService(false), metaDataUpgrader);\n        assertSame(upgrade, metaData);\n        assertTrue(MetaData.isGlobalStateEquals(upgrade, metaData));\n        for (IndexMetaData indexMetaData : upgrade) {\n            assertTrue(metaData.hasIndexMetaData(indexMetaData));\n        }\n    }\n","realPath":"server/src/test/java/org/elasticsearch/gateway/GatewayMetaStateTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":59,"status":"M"},{"authorDate":"2020-04-01 03:52:01","commitOrder":3,"curCode":"    public void testIndexMetadataUpgrade() {\n        Metadata metadata = randomMetadata();\n        MetadataUpgrader metadataUpgrader = new MetadataUpgrader(Collections.emptyList());\n        Metadata upgrade = GatewayMetaState.upgradeMetadata(metadata, new MockMetadataIndexUpgradeService(true), metadataUpgrader);\n        assertNotSame(upgrade, metadata);\n        assertTrue(Metadata.isGlobalStateEquals(upgrade, metadata));\n        for (IndexMetadata indexMetadata : upgrade) {\n            assertFalse(metadata.hasIndexMetadata(indexMetadata));\n        }\n    }\n","date":"2020-04-01 03:52:01","endLine":89,"groupId":"10345","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testIndexMetadataUpgrade","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/f8/1af5d712ac68734834d5e7dd056d902a75c0a8.src","preCode":"    public void testIndexMetaDataUpgrade() {\n        MetaData metaData = randomMetaData();\n        MetaDataUpgrader metaDataUpgrader = new MetaDataUpgrader(Collections.emptyList());\n        MetaData upgrade = GatewayMetaState.upgradeMetaData(metaData, new MockMetaDataIndexUpgradeService(true), metaDataUpgrader);\n        assertNotSame(upgrade, metaData);\n        assertTrue(MetaData.isGlobalStateEquals(upgrade, metaData));\n        for (IndexMetaData indexMetaData : upgrade) {\n            assertFalse(metaData.hasIndexMetaData(indexMetaData));\n        }\n    }\n","realPath":"server/src/test/java/org/elasticsearch/gateway/GatewayMetaStateTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":80,"status":"M"}],"commitId":"95a7eed9aa35f47b228e402508709b5bd6703cf4","commitMessage":"@@@Rename MetaData to Metadata in all of the places (#54519)\n\nThis is a simple naming change PR.  to fix the fact that \"metadata\" is a\nsingle English word.  and for too long we have not followed general\nnaming conventions for it. We are also not consistent about it.  for\nexample.  METADATA instead of META_DATA if we were trying to be\nconsistent with MetaData (although METADATA is correct when considered\nin the context of \"metadata\"). This was a simple find and replace across\nthe code base.  only taking a few minutes to fix this naming issue\nforever.","date":"2020-04-01 03:52:01","modifiedFileCount":"1712","status":"M","submitter":"Jason Tedor"},{"authorTime":"2021-02-03 01:14:13","codes":[{"authorDate":"2021-02-03 01:14:13","commitOrder":4,"curCode":"    public void testNoMetadataUpgrade() {\n        Metadata metadata = randomMetadata(new CustomMetadata1(\"data\"));\n        MetadataUpgrader metadataUpgrader = new MetadataUpgrader(Collections.emptyList());\n        Metadata upgrade = GatewayMetaState.upgradeMetadata(metadata, new MockIndexMetadataVerifier(false), metadataUpgrader);\n        assertSame(upgrade, metadata);\n        assertTrue(Metadata.isGlobalStateEquals(upgrade, metadata));\n        for (IndexMetadata indexMetadata : upgrade) {\n            assertTrue(metadata.hasIndexMetadata(indexMetadata));\n        }\n    }\n","date":"2021-02-03 01:14:13","endLine":68,"groupId":"103657","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"testNoMetadataUpgrade","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/18/b78858527e34c8684c1e930cee8f52e3653417.src","preCode":"    public void testNoMetadataUpgrade() {\n        Metadata metadata = randomMetadata(new CustomMetadata1(\"data\"));\n        MetadataUpgrader metadataUpgrader = new MetadataUpgrader(Collections.emptyList());\n        Metadata upgrade = GatewayMetaState.upgradeMetadata(metadata, new MockMetadataIndexUpgradeService(false), metadataUpgrader);\n        assertSame(upgrade, metadata);\n        assertTrue(Metadata.isGlobalStateEquals(upgrade, metadata));\n        for (IndexMetadata indexMetadata : upgrade) {\n            assertTrue(metadata.hasIndexMetadata(indexMetadata));\n        }\n    }\n","realPath":"server/src/test/java/org/elasticsearch/gateway/GatewayMetaStateTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":59,"status":"M"},{"authorDate":"2021-02-03 01:14:13","commitOrder":4,"curCode":"    public void testIndexMetadataUpgrade() {\n        Metadata metadata = randomMetadata();\n        MetadataUpgrader metadataUpgrader = new MetadataUpgrader(Collections.emptyList());\n        Metadata upgrade = GatewayMetaState.upgradeMetadata(metadata, new MockIndexMetadataVerifier(true), metadataUpgrader);\n        assertNotSame(upgrade, metadata);\n        assertTrue(Metadata.isGlobalStateEquals(upgrade, metadata));\n        for (IndexMetadata indexMetadata : upgrade) {\n            assertFalse(metadata.hasIndexMetadata(indexMetadata));\n        }\n    }\n","date":"2021-02-03 01:14:13","endLine":89,"groupId":"103657","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"testIndexMetadataUpgrade","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/18/b78858527e34c8684c1e930cee8f52e3653417.src","preCode":"    public void testIndexMetadataUpgrade() {\n        Metadata metadata = randomMetadata();\n        MetadataUpgrader metadataUpgrader = new MetadataUpgrader(Collections.emptyList());\n        Metadata upgrade = GatewayMetaState.upgradeMetadata(metadata, new MockMetadataIndexUpgradeService(true), metadataUpgrader);\n        assertNotSame(upgrade, metadata);\n        assertTrue(Metadata.isGlobalStateEquals(upgrade, metadata));\n        for (IndexMetadata indexMetadata : upgrade) {\n            assertFalse(metadata.hasIndexMetadata(indexMetadata));\n        }\n    }\n","realPath":"server/src/test/java/org/elasticsearch/gateway/GatewayMetaStateTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":80,"status":"M"}],"commitId":"6be3a507f62fbdc2d2bd11db582219d22c8ff9f7","commitMessage":"@@@Refactor IndexMetadataUpgradeService to IndexMetadataVerifier (#67547)\n\nThis PR removes support for index metadata upgrades:\n* Stop using the `index.version.upgrade` setting and deprecate it.\n* Remove `MetadataIndexUpgradeService` and other references to upgrades.\n\nIn addition to supporting upgrades.  `MetadataIndexUpgradeService` verified\ncertain aspects of the metadata.  like index version compatibility. This logic\nis important to keep.  so `MetadataIndexUpgradeService` was reworked to\n`IndexMetadataVerifier` instead of being removed completely.\n\nCloses #66143.","date":"2021-02-03 01:14:13","modifiedFileCount":"14","status":"M","submitter":"Julie Tibshirani"}]
