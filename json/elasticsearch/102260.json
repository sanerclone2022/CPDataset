[{"authorTime":"2019-01-22 20:53:10","codes":[{"authorDate":"2018-04-26 03:22:53","commitOrder":2,"curCode":"    private static List<DiscoveryNode> randomNodes(final int numNodes) {\n        List<DiscoveryNode> nodesList = new ArrayList<>();\n        for (int i = 0; i < numNodes; i++) {\n            Map<String, String> attributes = new HashMap<>();\n            if (frequently()) {\n                attributes.put(\"custom\", randomBoolean() ? \"match\" : randomAlphaOfLengthBetween(3, 5));\n            }\n            final DiscoveryNode node = newNode(idGenerator.getAndIncrement(), attributes,\n                new HashSet<>(randomSubsetOf(Arrays.asList(DiscoveryNode.Role.values()))));\n            nodesList.add(node);\n        }\n        return nodesList;\n    }\n","date":"2018-04-26 03:22:53","endLine":227,"groupId":"39155","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"randomNodes","params":"(finalintnumNodes)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/80/f2401ed7735d07a3dcbdcee9d03793d2f49d76.src","preCode":"    private static List<DiscoveryNode> randomNodes(final int numNodes) {\n        List<DiscoveryNode> nodesList = new ArrayList<>();\n        for (int i = 0; i < numNodes; i++) {\n            Map<String, String> attributes = new HashMap<>();\n            if (frequently()) {\n                attributes.put(\"custom\", randomBoolean() ? \"match\" : randomAlphaOfLengthBetween(3, 5));\n            }\n            final DiscoveryNode node = newNode(idGenerator.getAndIncrement(), attributes,\n                new HashSet<>(randomSubsetOf(Arrays.asList(DiscoveryNode.Role.values()))));\n            nodesList.add(node);\n        }\n        return nodesList;\n    }\n","realPath":"server/src/test/java/org/elasticsearch/cluster/node/DiscoveryNodesTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":215,"status":"NB"},{"authorDate":"2019-01-22 20:53:10","commitOrder":2,"curCode":"    private static List<DiscoveryNode> randomNodes(final int numNodes) {\n        List<DiscoveryNode> nodesList = new ArrayList<>();\n        for (int i = 0; i < numNodes; i++) {\n            Map<String, String> attributes = new HashMap<>();\n            if (frequently()) {\n                attributes.put(\"custom\", randomBoolean() ? \"match\" : randomAlphaOfLengthBetween(3, 5));\n            }\n            final DiscoveryNode node = newNode(i, attributes,\n                new HashSet<>(randomSubsetOf(Arrays.asList(DiscoveryNode.Role.values()))));\n            nodesList.add(node);\n        }\n        return nodesList;\n    }\n","date":"2019-01-22 20:53:10","endLine":584,"groupId":"69658","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"randomNodes","params":"(finalintnumNodes)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/4f/1016847c8872a2f94edbc786be77fe62416bc8.src","preCode":"    private static List<DiscoveryNode> randomNodes(final int numNodes) {\n        List<DiscoveryNode> nodesList = new ArrayList<>();\n        for (int i = 0; i < numNodes; i++) {\n            Map<String, String> attributes = new HashMap<>();\n            if (frequently()) {\n                attributes.put(\"custom\", randomBoolean() ? \"match\" : randomAlphaOfLengthBetween(3, 5));\n            }\n            final DiscoveryNode node = newNode(i, attributes,\n                new HashSet<>(randomSubsetOf(Arrays.asList(DiscoveryNode.Role.values()))));\n            nodesList.add(node);\n        }\n        return nodesList;\n    }\n","realPath":"server/src/test/java/org/elasticsearch/cluster/coordination/FollowersCheckerTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":572,"status":"B"}],"commitId":"23ba9008409444a0f1a48f6fd73b545307efe192","commitMessage":"@@@Publish to masters first (#37673)\n\nPrefer publishing to master-eligible nodes first.  so that cluster state updates are committed more\nquickly.  and master-eligible nodes also turned more quickly into followers after a leader election.","date":"2019-01-22 20:53:10","modifiedFileCount":"6","status":"M","submitter":"Yannick Welsch"},{"authorTime":"2019-06-14 02:43:14","codes":[{"authorDate":"2019-06-14 02:43:14","commitOrder":3,"curCode":"    private static List<DiscoveryNode> randomNodes(final int numNodes) {\n        List<DiscoveryNode> nodesList = new ArrayList<>();\n        for (int i = 0; i < numNodes; i++) {\n            Map<String, String> attributes = new HashMap<>();\n            if (frequently()) {\n                attributes.put(\"custom\", randomBoolean() ? \"match\" : randomAlphaOfLengthBetween(3, 5));\n            }\n            final DiscoveryNode node = newNode(idGenerator.getAndIncrement(), attributes,\n                new HashSet<>(randomSubsetOf(DiscoveryNodeRole.BUILT_IN_ROLES)));\n            nodesList.add(node);\n        }\n        return nodesList;\n    }\n","date":"2019-06-14 02:43:14","endLine":248,"groupId":"39155","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"randomNodes","params":"(finalintnumNodes)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/9a/5186618b33357d612b94e1bc2364534a396005.src","preCode":"    private static List<DiscoveryNode> randomNodes(final int numNodes) {\n        List<DiscoveryNode> nodesList = new ArrayList<>();\n        for (int i = 0; i < numNodes; i++) {\n            Map<String, String> attributes = new HashMap<>();\n            if (frequently()) {\n                attributes.put(\"custom\", randomBoolean() ? \"match\" : randomAlphaOfLengthBetween(3, 5));\n            }\n            final DiscoveryNode node = newNode(idGenerator.getAndIncrement(), attributes,\n                new HashSet<>(randomSubsetOf(Arrays.asList(DiscoveryNode.Role.values()))));\n            nodesList.add(node);\n        }\n        return nodesList;\n    }\n","realPath":"server/src/test/java/org/elasticsearch/cluster/node/DiscoveryNodesTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":236,"status":"M"},{"authorDate":"2019-06-14 02:43:14","commitOrder":3,"curCode":"    private static List<DiscoveryNode> randomNodes(final int numNodes) {\n        List<DiscoveryNode> nodesList = new ArrayList<>();\n        for (int i = 0; i < numNodes; i++) {\n            Map<String, String> attributes = new HashMap<>();\n            if (frequently()) {\n                attributes.put(\"custom\", randomBoolean() ? \"match\" : randomAlphaOfLengthBetween(3, 5));\n            }\n            final DiscoveryNode node = newNode(i, attributes,\n                new HashSet<>(randomSubsetOf(DiscoveryNodeRole.BUILT_IN_ROLES)));\n            nodesList.add(node);\n        }\n        return nodesList;\n    }\n","date":"2019-06-14 02:43:14","endLine":584,"groupId":"69658","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"randomNodes","params":"(finalintnumNodes)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/dc/763f403d2575f39f1e494bc2504c62fc212105.src","preCode":"    private static List<DiscoveryNode> randomNodes(final int numNodes) {\n        List<DiscoveryNode> nodesList = new ArrayList<>();\n        for (int i = 0; i < numNodes; i++) {\n            Map<String, String> attributes = new HashMap<>();\n            if (frequently()) {\n                attributes.put(\"custom\", randomBoolean() ? \"match\" : randomAlphaOfLengthBetween(3, 5));\n            }\n            final DiscoveryNode node = newNode(i, attributes,\n                new HashSet<>(randomSubsetOf(Arrays.asList(DiscoveryNode.Role.values()))));\n            nodesList.add(node);\n        }\n        return nodesList;\n    }\n","realPath":"server/src/test/java/org/elasticsearch/cluster/coordination/FollowersCheckerTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":572,"status":"M"}],"commitId":"aa12af8a3c4022c1b7c1eeab1a400645e603a07d","commitMessage":"@@@Enable node roles to be pluggable (#43175)\n\nThis commit introduces the possibility for a plugin to introduce\nadditional node roles.","date":"2019-06-14 02:43:14","modifiedFileCount":"67","status":"M","submitter":"Jason Tedor"},{"authorTime":"2019-06-14 02:43:14","codes":[{"authorDate":"2019-06-25 23:29:30","commitOrder":4,"curCode":"    private static List<DiscoveryNode> randomNodes(final int numNodes) {\n        List<DiscoveryNode> nodesList = new ArrayList<>();\n        for (int i = 0; i < numNodes; i++) {\n            Map<String, String> attributes = new HashMap<>();\n            if (frequently()) {\n                attributes.put(\"custom\", randomBoolean() ? \"match\" : randomAlphaOfLengthBetween(3, 5));\n            }\n            final Set<DiscoveryNodeRole> roles = new HashSet<>(randomSubsetOf(DiscoveryNodeRole.BUILT_IN_ROLES));\n            if (frequently()) {\n                roles.add(new DiscoveryNodeRole(\"custom_role\", \"cr\") {\n                    @Override\n                    protected Setting<Boolean> roleSetting() {\n                        return null;\n                    }\n                });\n            }\n            final DiscoveryNode node = newNode(idGenerator.getAndIncrement(), attributes, roles);\n            nodesList.add(node);\n        }\n        return nodesList;\n    }\n","date":"2019-06-25 23:29:30","endLine":257,"groupId":"39155","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"randomNodes","params":"(finalintnumNodes)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/2c/dbd95fc63582fd3fa86c495b0d81d02389db3a.src","preCode":"    private static List<DiscoveryNode> randomNodes(final int numNodes) {\n        List<DiscoveryNode> nodesList = new ArrayList<>();\n        for (int i = 0; i < numNodes; i++) {\n            Map<String, String> attributes = new HashMap<>();\n            if (frequently()) {\n                attributes.put(\"custom\", randomBoolean() ? \"match\" : randomAlphaOfLengthBetween(3, 5));\n            }\n            final DiscoveryNode node = newNode(idGenerator.getAndIncrement(), attributes,\n                new HashSet<>(randomSubsetOf(DiscoveryNodeRole.BUILT_IN_ROLES)));\n            nodesList.add(node);\n        }\n        return nodesList;\n    }\n","realPath":"server/src/test/java/org/elasticsearch/cluster/node/DiscoveryNodesTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":237,"status":"M"},{"authorDate":"2019-06-14 02:43:14","commitOrder":4,"curCode":"    private static List<DiscoveryNode> randomNodes(final int numNodes) {\n        List<DiscoveryNode> nodesList = new ArrayList<>();\n        for (int i = 0; i < numNodes; i++) {\n            Map<String, String> attributes = new HashMap<>();\n            if (frequently()) {\n                attributes.put(\"custom\", randomBoolean() ? \"match\" : randomAlphaOfLengthBetween(3, 5));\n            }\n            final DiscoveryNode node = newNode(i, attributes,\n                new HashSet<>(randomSubsetOf(DiscoveryNodeRole.BUILT_IN_ROLES)));\n            nodesList.add(node);\n        }\n        return nodesList;\n    }\n","date":"2019-06-14 02:43:14","endLine":584,"groupId":"69658","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"randomNodes","params":"(finalintnumNodes)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/dc/763f403d2575f39f1e494bc2504c62fc212105.src","preCode":"    private static List<DiscoveryNode> randomNodes(final int numNodes) {\n        List<DiscoveryNode> nodesList = new ArrayList<>();\n        for (int i = 0; i < numNodes; i++) {\n            Map<String, String> attributes = new HashMap<>();\n            if (frequently()) {\n                attributes.put(\"custom\", randomBoolean() ? \"match\" : randomAlphaOfLengthBetween(3, 5));\n            }\n            final DiscoveryNode node = newNode(i, attributes,\n                new HashSet<>(randomSubsetOf(DiscoveryNodeRole.BUILT_IN_ROLES)));\n            nodesList.add(node);\n        }\n        return nodesList;\n    }\n","realPath":"server/src/test/java/org/elasticsearch/cluster/coordination/FollowersCheckerTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":572,"status":"N"}],"commitId":"e689b20eba8a583c0a3a7783e06b00a97cbdee63","commitMessage":"@@@Add voting-only master node (#43410)\n\nA voting-only master-eligible node is a node that can participate in master elections but will not act\nas a master in the cluster. In particular.  a voting-only node can help elect another master-eligible\nnode as master.  and can serve as a tiebreaker in elections. High availability (HA) clusters require at\nleast three master-eligible nodes.  so that if one of the three nodes is down.  then the remaining two\ncan still elect a master amongst them-selves. This only requires one of the two remaining nodes to\nhave the capability to act as master.  but both need to have voting powers. This means that one of\nthe three master-eligible nodes can be made as voting-only. If this voting-only node is a dedicated\nmaster.  a less powerful machine or a smaller heap-size can be chosen for this node. Alternatively.  a\nvoting-only non-dedicated master node can play the role of the third master-eligible node.  which\nallows running an HA cluster with only two dedicated master nodes.\n\nCloses #14340\n\nCo-authored-by: David Turner <david.turner@elastic.co>","date":"2019-06-25 23:29:30","modifiedFileCount":"22","status":"M","submitter":"Yannick Welsch"},{"authorTime":"2019-06-14 02:43:14","codes":[{"authorDate":"2020-06-26 22:33:37","commitOrder":5,"curCode":"    private static List<DiscoveryNode> randomNodes(final int numNodes) {\n        List<DiscoveryNode> nodesList = new ArrayList<>();\n        for (int i = 0; i < numNodes; i++) {\n            Map<String, String> attributes = new HashMap<>();\n            if (frequently()) {\n                attributes.put(\"custom\", randomBoolean() ? \"match\" : randomAlphaOfLengthBetween(3, 5));\n            }\n            final Set<DiscoveryNodeRole> roles = new HashSet<>(randomSubsetOf(DiscoveryNodeRole.BUILT_IN_ROLES));\n            if (frequently()) {\n                roles.add(new DiscoveryNodeRole(\"custom_role\", \"cr\") {\n\n                    @Override\n                    public Setting<Boolean> legacySetting() {\n                        return null;\n                    }\n\n                });\n            }\n            final DiscoveryNode node = newNode(idGenerator.getAndIncrement(), attributes, roles);\n            nodesList.add(node);\n        }\n        return nodesList;\n    }\n","date":"2020-06-26 22:33:37","endLine":289,"groupId":"39155","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"randomNodes","params":"(finalintnumNodes)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/14/da84d49719ad2c5df8fc2f6d0f7e49ff3c39dc.src","preCode":"    private static List<DiscoveryNode> randomNodes(final int numNodes) {\n        List<DiscoveryNode> nodesList = new ArrayList<>();\n        for (int i = 0; i < numNodes; i++) {\n            Map<String, String> attributes = new HashMap<>();\n            if (frequently()) {\n                attributes.put(\"custom\", randomBoolean() ? \"match\" : randomAlphaOfLengthBetween(3, 5));\n            }\n            final Set<DiscoveryNodeRole> roles = new HashSet<>(randomSubsetOf(DiscoveryNodeRole.BUILT_IN_ROLES));\n            if (frequently()) {\n                roles.add(new DiscoveryNodeRole(\"custom_role\", \"cr\") {\n                    @Override\n                    protected Setting<Boolean> roleSetting() {\n                        return null;\n                    }\n                });\n            }\n            final DiscoveryNode node = newNode(idGenerator.getAndIncrement(), attributes, roles);\n            nodesList.add(node);\n        }\n        return nodesList;\n    }\n","realPath":"server/src/test/java/org/elasticsearch/cluster/node/DiscoveryNodesTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":267,"status":"M"},{"authorDate":"2019-06-14 02:43:14","commitOrder":5,"curCode":"    private static List<DiscoveryNode> randomNodes(final int numNodes) {\n        List<DiscoveryNode> nodesList = new ArrayList<>();\n        for (int i = 0; i < numNodes; i++) {\n            Map<String, String> attributes = new HashMap<>();\n            if (frequently()) {\n                attributes.put(\"custom\", randomBoolean() ? \"match\" : randomAlphaOfLengthBetween(3, 5));\n            }\n            final DiscoveryNode node = newNode(i, attributes,\n                new HashSet<>(randomSubsetOf(DiscoveryNodeRole.BUILT_IN_ROLES)));\n            nodesList.add(node);\n        }\n        return nodesList;\n    }\n","date":"2019-06-14 02:43:14","endLine":584,"groupId":"69658","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"randomNodes","params":"(finalintnumNodes)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/dc/763f403d2575f39f1e494bc2504c62fc212105.src","preCode":"    private static List<DiscoveryNode> randomNodes(final int numNodes) {\n        List<DiscoveryNode> nodesList = new ArrayList<>();\n        for (int i = 0; i < numNodes; i++) {\n            Map<String, String> attributes = new HashMap<>();\n            if (frequently()) {\n                attributes.put(\"custom\", randomBoolean() ? \"match\" : randomAlphaOfLengthBetween(3, 5));\n            }\n            final DiscoveryNode node = newNode(i, attributes,\n                new HashSet<>(randomSubsetOf(DiscoveryNodeRole.BUILT_IN_ROLES)));\n            nodesList.add(node);\n        }\n        return nodesList;\n    }\n","realPath":"server/src/test/java/org/elasticsearch/cluster/coordination/FollowersCheckerTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":572,"status":"N"}],"commitId":"cac5f29cee7572a3695e2b8d17d0a0cb7ac473dd","commitMessage":"@@@Merge branch 'master' into feature/runtime_fields\n","date":"2020-06-26 22:33:37","modifiedFileCount":"731","status":"M","submitter":"Nik Everett"},{"authorTime":"2021-04-21 21:28:12","codes":[{"authorDate":"2021-04-21 21:28:12","commitOrder":6,"curCode":"    private static List<DiscoveryNode> randomNodes(final int numNodes) {\n        List<DiscoveryNode> nodesList = new ArrayList<>();\n        for (int i = 0; i < numNodes; i++) {\n            Map<String, String> attributes = new HashMap<>();\n            if (frequently()) {\n                attributes.put(\"custom\", randomBoolean() ? \"match\" : randomAlphaOfLengthBetween(3, 5));\n            }\n            final Set<DiscoveryNodeRole> roles = new HashSet<>(randomSubsetOf(DiscoveryNodeRole.roles()));\n            if (frequently()) {\n                roles.add(new DiscoveryNodeRole(\"custom_role\", \"cr\"));\n            }\n            final DiscoveryNode node = newNode(idGenerator.getAndIncrement(), attributes, roles);\n            nodesList.add(node);\n        }\n        return nodesList;\n    }\n","date":"2021-04-21 21:28:12","endLine":279,"groupId":"102260","id":9,"instanceNumber":1,"isCurCommit":1,"methodName":"randomNodes","params":"(finalintnumNodes)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/91/b38a88f7f62a1b255a3c4f62bc5a0cab4a378f.src","preCode":"    private static List<DiscoveryNode> randomNodes(final int numNodes) {\n        List<DiscoveryNode> nodesList = new ArrayList<>();\n        for (int i = 0; i < numNodes; i++) {\n            Map<String, String> attributes = new HashMap<>();\n            if (frequently()) {\n                attributes.put(\"custom\", randomBoolean() ? \"match\" : randomAlphaOfLengthBetween(3, 5));\n            }\n            final Set<DiscoveryNodeRole> roles = new HashSet<>(randomSubsetOf(DiscoveryNodeRole.BUILT_IN_ROLES));\n            if (frequently()) {\n                roles.add(new DiscoveryNodeRole(\"custom_role\", \"cr\") {\n\n                    @Override\n                    public Setting<Boolean> legacySetting() {\n                        return null;\n                    }\n\n                });\n            }\n            final DiscoveryNode node = newNode(idGenerator.getAndIncrement(), attributes, roles);\n            nodesList.add(node);\n        }\n        return nodesList;\n    }\n","realPath":"server/src/test/java/org/elasticsearch/cluster/node/DiscoveryNodesTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":264,"status":"M"},{"authorDate":"2021-04-21 21:28:12","commitOrder":6,"curCode":"    private static List<DiscoveryNode> randomNodes(final int numNodes) {\n        List<DiscoveryNode> nodesList = new ArrayList<>();\n        for (int i = 0; i < numNodes; i++) {\n            Map<String, String> attributes = new HashMap<>();\n            if (frequently()) {\n                attributes.put(\"custom\", randomBoolean() ? \"match\" : randomAlphaOfLengthBetween(3, 5));\n            }\n            final DiscoveryNode node = newNode(i, attributes,\n                new HashSet<>(randomSubsetOf(DiscoveryNodeRole.roles())));\n            nodesList.add(node);\n        }\n        return nodesList;\n    }\n","date":"2021-04-21 21:28:12","endLine":597,"groupId":"102260","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"randomNodes","params":"(finalintnumNodes)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/28/31f189c6625d642fd30e72538827f241503c3f.src","preCode":"    private static List<DiscoveryNode> randomNodes(final int numNodes) {\n        List<DiscoveryNode> nodesList = new ArrayList<>();\n        for (int i = 0; i < numNodes; i++) {\n            Map<String, String> attributes = new HashMap<>();\n            if (frequently()) {\n                attributes.put(\"custom\", randomBoolean() ? \"match\" : randomAlphaOfLengthBetween(3, 5));\n            }\n            final DiscoveryNode node = newNode(i, attributes,\n                new HashSet<>(randomSubsetOf(DiscoveryNodeRole.BUILT_IN_ROLES)));\n            nodesList.add(node);\n        }\n        return nodesList;\n    }\n","realPath":"server/src/test/java/org/elasticsearch/cluster/coordination/FollowersCheckerTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":585,"status":"M"}],"commitId":"9a86dde3572a6f3999eea75bc3ce30b965837ba3","commitMessage":"@@@Merge branch 'master' into feature/vector-tiles\n","date":"2021-04-21 21:28:12","modifiedFileCount":"1285","status":"M","submitter":"iverase"}]
