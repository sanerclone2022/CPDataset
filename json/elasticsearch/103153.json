[{"authorTime":"2018-04-26 03:22:53","codes":[{"authorDate":"2018-04-26 03:22:53","commitOrder":1,"curCode":"    public void testCopyToDynamicInnerObjectParsing() throws Exception {\n        String mapping = Strings.toString(jsonBuilder().startObject().startObject(\"type1\")\n            .startObject(\"properties\")\n                .startObject(\"copy_test\")\n                    .field(\"type\", \"text\")\n                    .field(\"copy_to\", \"very.inner.field\")\n                .endObject()\n            .endObject()\n            .endObject().endObject());\n\n        DocumentMapper docMapper = createIndex(\"test\").mapperService().documentMapperParser().parse(\"type1\", new CompressedXContent(mapping));\n\n        BytesReference json = BytesReference.bytes(jsonBuilder().startObject()\n                .field(\"copy_test\", \"foo\")\n                .field(\"new_field\", \"bar\")\n                .endObject());\n\n        ParseContext.Document doc = docMapper.parse(SourceToParse.source(\"test\", \"type1\", \"1\", json,\n                XContentType.JSON)).rootDoc();\n        assertThat(doc.getFields(\"copy_test\").length, equalTo(1));\n        assertThat(doc.getFields(\"copy_test\")[0].stringValue(), equalTo(\"foo\"));\n\n        assertThat(doc.getFields(\"very.inner.field\").length, equalTo(1));\n        assertThat(doc.getFields(\"very.inner.field\")[0].stringValue(), equalTo(\"foo\"));\n\n        assertThat(doc.getFields(\"new_field\").length, equalTo(1));\n        assertThat(doc.getFields(\"new_field\")[0].stringValue(), equalTo(\"bar\"));\n    }\n","date":"2018-04-26 03:22:53","endLine":192,"groupId":"48648","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testCopyToDynamicInnerObjectParsing","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/ef/f6222e6c6ff24d604253a97cac83dde6a865d8.src","preCode":"    public void testCopyToDynamicInnerObjectParsing() throws Exception {\n        String mapping = Strings.toString(jsonBuilder().startObject().startObject(\"type1\")\n            .startObject(\"properties\")\n                .startObject(\"copy_test\")\n                    .field(\"type\", \"text\")\n                    .field(\"copy_to\", \"very.inner.field\")\n                .endObject()\n            .endObject()\n            .endObject().endObject());\n\n        DocumentMapper docMapper = createIndex(\"test\").mapperService().documentMapperParser().parse(\"type1\", new CompressedXContent(mapping));\n\n        BytesReference json = BytesReference.bytes(jsonBuilder().startObject()\n                .field(\"copy_test\", \"foo\")\n                .field(\"new_field\", \"bar\")\n                .endObject());\n\n        ParseContext.Document doc = docMapper.parse(SourceToParse.source(\"test\", \"type1\", \"1\", json,\n                XContentType.JSON)).rootDoc();\n        assertThat(doc.getFields(\"copy_test\").length, equalTo(1));\n        assertThat(doc.getFields(\"copy_test\")[0].stringValue(), equalTo(\"foo\"));\n\n        assertThat(doc.getFields(\"very.inner.field\").length, equalTo(1));\n        assertThat(doc.getFields(\"very.inner.field\")[0].stringValue(), equalTo(\"foo\"));\n\n        assertThat(doc.getFields(\"new_field\").length, equalTo(1));\n        assertThat(doc.getFields(\"new_field\")[0].stringValue(), equalTo(\"bar\"));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/index/mapper/CopyToMapperTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":165,"status":"B"},{"authorDate":"2018-04-26 03:22:53","commitOrder":1,"curCode":"    public void testCopyToDynamicInnerInnerObjectParsing() throws Exception {\n        String mapping = Strings.toString(jsonBuilder().startObject().startObject(\"type1\")\n            .startObject(\"properties\")\n                .startObject(\"copy_test\")\n                    .field(\"type\", \"text\")\n                    .field(\"copy_to\", \"very.far.inner.field\")\n                .endObject()\n                .startObject(\"very\")\n                    .field(\"type\", \"object\")\n                    .startObject(\"properties\")\n                        .startObject(\"far\")\n                            .field(\"type\", \"object\")\n                        .endObject()\n                    .endObject()\n                .endObject()\n            .endObject()\n            .endObject().endObject());\n\n        DocumentMapper docMapper = createIndex(\"test\").mapperService().documentMapperParser().parse(\"type1\", new CompressedXContent(mapping));\n\n        BytesReference json = BytesReference.bytes(jsonBuilder().startObject()\n            .field(\"copy_test\", \"foo\")\n            .field(\"new_field\", \"bar\")\n            .endObject());\n\n        ParseContext.Document doc = docMapper.parse(SourceToParse.source(\"test\", \"type1\", \"1\", json,\n                XContentType.JSON)).rootDoc();\n        assertThat(doc.getFields(\"copy_test\").length, equalTo(1));\n        assertThat(doc.getFields(\"copy_test\")[0].stringValue(), equalTo(\"foo\"));\n\n        assertThat(doc.getFields(\"very.far.inner.field\").length, equalTo(1));\n        assertThat(doc.getFields(\"very.far.inner.field\")[0].stringValue(), equalTo(\"foo\"));\n\n        assertThat(doc.getFields(\"new_field\").length, equalTo(1));\n        assertThat(doc.getFields(\"new_field\")[0].stringValue(), equalTo(\"bar\"));\n    }\n","date":"2018-04-26 03:22:53","endLine":229,"groupId":"48648","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testCopyToDynamicInnerInnerObjectParsing","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/ef/f6222e6c6ff24d604253a97cac83dde6a865d8.src","preCode":"    public void testCopyToDynamicInnerInnerObjectParsing() throws Exception {\n        String mapping = Strings.toString(jsonBuilder().startObject().startObject(\"type1\")\n            .startObject(\"properties\")\n                .startObject(\"copy_test\")\n                    .field(\"type\", \"text\")\n                    .field(\"copy_to\", \"very.far.inner.field\")\n                .endObject()\n                .startObject(\"very\")\n                    .field(\"type\", \"object\")\n                    .startObject(\"properties\")\n                        .startObject(\"far\")\n                            .field(\"type\", \"object\")\n                        .endObject()\n                    .endObject()\n                .endObject()\n            .endObject()\n            .endObject().endObject());\n\n        DocumentMapper docMapper = createIndex(\"test\").mapperService().documentMapperParser().parse(\"type1\", new CompressedXContent(mapping));\n\n        BytesReference json = BytesReference.bytes(jsonBuilder().startObject()\n            .field(\"copy_test\", \"foo\")\n            .field(\"new_field\", \"bar\")\n            .endObject());\n\n        ParseContext.Document doc = docMapper.parse(SourceToParse.source(\"test\", \"type1\", \"1\", json,\n                XContentType.JSON)).rootDoc();\n        assertThat(doc.getFields(\"copy_test\").length, equalTo(1));\n        assertThat(doc.getFields(\"copy_test\")[0].stringValue(), equalTo(\"foo\"));\n\n        assertThat(doc.getFields(\"very.far.inner.field\").length, equalTo(1));\n        assertThat(doc.getFields(\"very.far.inner.field\")[0].stringValue(), equalTo(\"foo\"));\n\n        assertThat(doc.getFields(\"new_field\").length, equalTo(1));\n        assertThat(doc.getFields(\"new_field\")[0].stringValue(), equalTo(\"bar\"));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/index/mapper/CopyToMapperTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":194,"status":"B"}],"commitId":"d74fb9eb4559077e2d20b19a9ed62d9ff825027a","commitMessage":"@@@Opened x-pack ILM code\n","date":"2018-04-26 03:22:53","modifiedFileCount":"0","status":"B","submitter":"Tal Levy"},{"authorTime":"2018-12-25 03:06:50","codes":[{"authorDate":"2018-12-25 03:06:50","commitOrder":2,"curCode":"    public void testCopyToDynamicInnerObjectParsing() throws Exception {\n        String mapping = Strings.toString(jsonBuilder().startObject().startObject(\"type1\")\n            .startObject(\"properties\")\n                .startObject(\"copy_test\")\n                    .field(\"type\", \"text\")\n                    .field(\"copy_to\", \"very.inner.field\")\n                .endObject()\n            .endObject()\n            .endObject().endObject());\n\n        DocumentMapper docMapper = createIndex(\"test\").mapperService().documentMapperParser()\n            .parse(\"type1\", new CompressedXContent(mapping));\n\n        BytesReference json = BytesReference.bytes(jsonBuilder().startObject()\n                .field(\"copy_test\", \"foo\")\n                .field(\"new_field\", \"bar\")\n                .endObject());\n\n        ParseContext.Document doc = docMapper.parse(new SourceToParse(\"test\", \"type1\", \"1\", json,\n                XContentType.JSON)).rootDoc();\n        assertThat(doc.getFields(\"copy_test\").length, equalTo(1));\n        assertThat(doc.getFields(\"copy_test\")[0].stringValue(), equalTo(\"foo\"));\n\n        assertThat(doc.getFields(\"very.inner.field\").length, equalTo(1));\n        assertThat(doc.getFields(\"very.inner.field\")[0].stringValue(), equalTo(\"foo\"));\n\n        assertThat(doc.getFields(\"new_field\").length, equalTo(1));\n        assertThat(doc.getFields(\"new_field\")[0].stringValue(), equalTo(\"bar\"));\n    }\n","date":"2018-12-25 03:06:50","endLine":194,"groupId":"48648","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testCopyToDynamicInnerObjectParsing","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/8a/7a42e18f040f3e00e27fa16a1fd64812f09963.src","preCode":"    public void testCopyToDynamicInnerObjectParsing() throws Exception {\n        String mapping = Strings.toString(jsonBuilder().startObject().startObject(\"type1\")\n            .startObject(\"properties\")\n                .startObject(\"copy_test\")\n                    .field(\"type\", \"text\")\n                    .field(\"copy_to\", \"very.inner.field\")\n                .endObject()\n            .endObject()\n            .endObject().endObject());\n\n        DocumentMapper docMapper = createIndex(\"test\").mapperService().documentMapperParser()\n            .parse(\"type1\", new CompressedXContent(mapping));\n\n        BytesReference json = BytesReference.bytes(jsonBuilder().startObject()\n                .field(\"copy_test\", \"foo\")\n                .field(\"new_field\", \"bar\")\n                .endObject());\n\n        ParseContext.Document doc = docMapper.parse(SourceToParse.source(\"test\", \"type1\", \"1\", json,\n                XContentType.JSON)).rootDoc();\n        assertThat(doc.getFields(\"copy_test\").length, equalTo(1));\n        assertThat(doc.getFields(\"copy_test\")[0].stringValue(), equalTo(\"foo\"));\n\n        assertThat(doc.getFields(\"very.inner.field\").length, equalTo(1));\n        assertThat(doc.getFields(\"very.inner.field\")[0].stringValue(), equalTo(\"foo\"));\n\n        assertThat(doc.getFields(\"new_field\").length, equalTo(1));\n        assertThat(doc.getFields(\"new_field\")[0].stringValue(), equalTo(\"bar\"));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/index/mapper/CopyToMapperTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":166,"status":"M"},{"authorDate":"2018-12-25 03:06:50","commitOrder":2,"curCode":"    public void testCopyToDynamicInnerInnerObjectParsing() throws Exception {\n        String mapping = Strings.toString(jsonBuilder().startObject().startObject(\"type1\")\n            .startObject(\"properties\")\n                .startObject(\"copy_test\")\n                    .field(\"type\", \"text\")\n                    .field(\"copy_to\", \"very.far.inner.field\")\n                .endObject()\n                .startObject(\"very\")\n                    .field(\"type\", \"object\")\n                    .startObject(\"properties\")\n                        .startObject(\"far\")\n                            .field(\"type\", \"object\")\n                        .endObject()\n                    .endObject()\n                .endObject()\n            .endObject()\n            .endObject().endObject());\n\n        DocumentMapper docMapper = createIndex(\"test\").mapperService().documentMapperParser()\n            .parse(\"type1\", new CompressedXContent(mapping));\n\n        BytesReference json = BytesReference.bytes(jsonBuilder().startObject()\n            .field(\"copy_test\", \"foo\")\n            .field(\"new_field\", \"bar\")\n            .endObject());\n\n        ParseContext.Document doc = docMapper.parse(new SourceToParse(\"test\", \"type1\", \"1\", json,\n                XContentType.JSON)).rootDoc();\n        assertThat(doc.getFields(\"copy_test\").length, equalTo(1));\n        assertThat(doc.getFields(\"copy_test\")[0].stringValue(), equalTo(\"foo\"));\n\n        assertThat(doc.getFields(\"very.far.inner.field\").length, equalTo(1));\n        assertThat(doc.getFields(\"very.far.inner.field\")[0].stringValue(), equalTo(\"foo\"));\n\n        assertThat(doc.getFields(\"new_field\").length, equalTo(1));\n        assertThat(doc.getFields(\"new_field\")[0].stringValue(), equalTo(\"bar\"));\n    }\n","date":"2018-12-25 03:06:50","endLine":232,"groupId":"48648","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testCopyToDynamicInnerInnerObjectParsing","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/8a/7a42e18f040f3e00e27fa16a1fd64812f09963.src","preCode":"    public void testCopyToDynamicInnerInnerObjectParsing() throws Exception {\n        String mapping = Strings.toString(jsonBuilder().startObject().startObject(\"type1\")\n            .startObject(\"properties\")\n                .startObject(\"copy_test\")\n                    .field(\"type\", \"text\")\n                    .field(\"copy_to\", \"very.far.inner.field\")\n                .endObject()\n                .startObject(\"very\")\n                    .field(\"type\", \"object\")\n                    .startObject(\"properties\")\n                        .startObject(\"far\")\n                            .field(\"type\", \"object\")\n                        .endObject()\n                    .endObject()\n                .endObject()\n            .endObject()\n            .endObject().endObject());\n\n        DocumentMapper docMapper = createIndex(\"test\").mapperService().documentMapperParser()\n            .parse(\"type1\", new CompressedXContent(mapping));\n\n        BytesReference json = BytesReference.bytes(jsonBuilder().startObject()\n            .field(\"copy_test\", \"foo\")\n            .field(\"new_field\", \"bar\")\n            .endObject());\n\n        ParseContext.Document doc = docMapper.parse(SourceToParse.source(\"test\", \"type1\", \"1\", json,\n                XContentType.JSON)).rootDoc();\n        assertThat(doc.getFields(\"copy_test\").length, equalTo(1));\n        assertThat(doc.getFields(\"copy_test\")[0].stringValue(), equalTo(\"foo\"));\n\n        assertThat(doc.getFields(\"very.far.inner.field\").length, equalTo(1));\n        assertThat(doc.getFields(\"very.far.inner.field\")[0].stringValue(), equalTo(\"foo\"));\n\n        assertThat(doc.getFields(\"new_field\").length, equalTo(1));\n        assertThat(doc.getFields(\"new_field\")[0].stringValue(), equalTo(\"bar\"));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/index/mapper/CopyToMapperTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":196,"status":"M"}],"commitId":"7580d9d925d864b25466d693637b3bd3092d44cf","commitMessage":"@@@Make SourceToParse immutable (#36971)\n\nToday the routing of a SourceToParse is assigned in a separate step\nafter the object is created. We can easily forget to set the routing.\nWith this commit.  the routing must be provided in the constructor of\nSourceToParse.\n\nRelates #36921","date":"2018-12-25 03:06:50","modifiedFileCount":"66","status":"M","submitter":"Nhat Nguyen"},{"authorTime":"2019-10-15 16:05:29","codes":[{"authorDate":"2019-10-15 16:05:29","commitOrder":3,"curCode":"    public void testCopyToDynamicInnerObjectParsing() throws Exception {\n        String mapping = Strings.toString(jsonBuilder().startObject().startObject(\"type1\")\n            .startObject(\"properties\")\n                .startObject(\"copy_test\")\n                    .field(\"type\", \"text\")\n                    .field(\"copy_to\", \"very.inner.field\")\n                .endObject()\n            .endObject()\n            .endObject().endObject());\n\n        DocumentMapper docMapper = createIndex(\"test\").mapperService().documentMapperParser()\n            .parse(\"type1\", new CompressedXContent(mapping));\n\n        BytesReference json = BytesReference.bytes(jsonBuilder().startObject()\n                .field(\"copy_test\", \"foo\")\n                .field(\"new_field\", \"bar\")\n                .endObject());\n\n        ParseContext.Document doc = docMapper.parse(new SourceToParse(\"test\", \"1\", json,\n                XContentType.JSON)).rootDoc();\n        assertThat(doc.getFields(\"copy_test\").length, equalTo(1));\n        assertThat(doc.getFields(\"copy_test\")[0].stringValue(), equalTo(\"foo\"));\n\n        assertThat(doc.getFields(\"very.inner.field\").length, equalTo(1));\n        assertThat(doc.getFields(\"very.inner.field\")[0].stringValue(), equalTo(\"foo\"));\n\n        assertThat(doc.getFields(\"new_field\").length, equalTo(1));\n        assertThat(doc.getFields(\"new_field\")[0].stringValue(), equalTo(\"bar\"));\n    }\n","date":"2019-10-15 16:05:29","endLine":194,"groupId":"48648","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testCopyToDynamicInnerObjectParsing","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/7b/a505eee3189ae8735fd69700869cc8ef792de0.src","preCode":"    public void testCopyToDynamicInnerObjectParsing() throws Exception {\n        String mapping = Strings.toString(jsonBuilder().startObject().startObject(\"type1\")\n            .startObject(\"properties\")\n                .startObject(\"copy_test\")\n                    .field(\"type\", \"text\")\n                    .field(\"copy_to\", \"very.inner.field\")\n                .endObject()\n            .endObject()\n            .endObject().endObject());\n\n        DocumentMapper docMapper = createIndex(\"test\").mapperService().documentMapperParser()\n            .parse(\"type1\", new CompressedXContent(mapping));\n\n        BytesReference json = BytesReference.bytes(jsonBuilder().startObject()\n                .field(\"copy_test\", \"foo\")\n                .field(\"new_field\", \"bar\")\n                .endObject());\n\n        ParseContext.Document doc = docMapper.parse(new SourceToParse(\"test\", \"type1\", \"1\", json,\n                XContentType.JSON)).rootDoc();\n        assertThat(doc.getFields(\"copy_test\").length, equalTo(1));\n        assertThat(doc.getFields(\"copy_test\")[0].stringValue(), equalTo(\"foo\"));\n\n        assertThat(doc.getFields(\"very.inner.field\").length, equalTo(1));\n        assertThat(doc.getFields(\"very.inner.field\")[0].stringValue(), equalTo(\"foo\"));\n\n        assertThat(doc.getFields(\"new_field\").length, equalTo(1));\n        assertThat(doc.getFields(\"new_field\")[0].stringValue(), equalTo(\"bar\"));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/index/mapper/CopyToMapperTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":166,"status":"M"},{"authorDate":"2019-10-15 16:05:29","commitOrder":3,"curCode":"    public void testCopyToDynamicInnerInnerObjectParsing() throws Exception {\n        String mapping = Strings.toString(jsonBuilder().startObject().startObject(\"type1\")\n            .startObject(\"properties\")\n                .startObject(\"copy_test\")\n                    .field(\"type\", \"text\")\n                    .field(\"copy_to\", \"very.far.inner.field\")\n                .endObject()\n                .startObject(\"very\")\n                    .field(\"type\", \"object\")\n                    .startObject(\"properties\")\n                        .startObject(\"far\")\n                            .field(\"type\", \"object\")\n                        .endObject()\n                    .endObject()\n                .endObject()\n            .endObject()\n            .endObject().endObject());\n\n        DocumentMapper docMapper = createIndex(\"test\").mapperService().documentMapperParser()\n            .parse(\"type1\", new CompressedXContent(mapping));\n\n        BytesReference json = BytesReference.bytes(jsonBuilder().startObject()\n            .field(\"copy_test\", \"foo\")\n            .field(\"new_field\", \"bar\")\n            .endObject());\n\n        ParseContext.Document doc = docMapper.parse(new SourceToParse(\"test\", \"1\", json,\n                XContentType.JSON)).rootDoc();\n        assertThat(doc.getFields(\"copy_test\").length, equalTo(1));\n        assertThat(doc.getFields(\"copy_test\")[0].stringValue(), equalTo(\"foo\"));\n\n        assertThat(doc.getFields(\"very.far.inner.field\").length, equalTo(1));\n        assertThat(doc.getFields(\"very.far.inner.field\")[0].stringValue(), equalTo(\"foo\"));\n\n        assertThat(doc.getFields(\"new_field\").length, equalTo(1));\n        assertThat(doc.getFields(\"new_field\")[0].stringValue(), equalTo(\"bar\"));\n    }\n","date":"2019-10-15 16:05:29","endLine":232,"groupId":"48648","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testCopyToDynamicInnerInnerObjectParsing","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/7b/a505eee3189ae8735fd69700869cc8ef792de0.src","preCode":"    public void testCopyToDynamicInnerInnerObjectParsing() throws Exception {\n        String mapping = Strings.toString(jsonBuilder().startObject().startObject(\"type1\")\n            .startObject(\"properties\")\n                .startObject(\"copy_test\")\n                    .field(\"type\", \"text\")\n                    .field(\"copy_to\", \"very.far.inner.field\")\n                .endObject()\n                .startObject(\"very\")\n                    .field(\"type\", \"object\")\n                    .startObject(\"properties\")\n                        .startObject(\"far\")\n                            .field(\"type\", \"object\")\n                        .endObject()\n                    .endObject()\n                .endObject()\n            .endObject()\n            .endObject().endObject());\n\n        DocumentMapper docMapper = createIndex(\"test\").mapperService().documentMapperParser()\n            .parse(\"type1\", new CompressedXContent(mapping));\n\n        BytesReference json = BytesReference.bytes(jsonBuilder().startObject()\n            .field(\"copy_test\", \"foo\")\n            .field(\"new_field\", \"bar\")\n            .endObject());\n\n        ParseContext.Document doc = docMapper.parse(new SourceToParse(\"test\", \"type1\", \"1\", json,\n                XContentType.JSON)).rootDoc();\n        assertThat(doc.getFields(\"copy_test\").length, equalTo(1));\n        assertThat(doc.getFields(\"copy_test\")[0].stringValue(), equalTo(\"foo\"));\n\n        assertThat(doc.getFields(\"very.far.inner.field\").length, equalTo(1));\n        assertThat(doc.getFields(\"very.far.inner.field\")[0].stringValue(), equalTo(\"foo\"));\n\n        assertThat(doc.getFields(\"new_field\").length, equalTo(1));\n        assertThat(doc.getFields(\"new_field\")[0].stringValue(), equalTo(\"bar\"));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/index/mapper/CopyToMapperTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":196,"status":"M"}],"commitId":"6531369f11d159896957b75a7eae0b7da214d01a","commitMessage":"@@@Don't persist type information to translog (#47229)\n\nWe no longer need to store type information in the translog.  given that an index\ncan only have a single type.\n\nRelates to #41059","date":"2019-10-15 16:05:29","modifiedFileCount":"100","status":"M","submitter":"Alan Woodward"},{"authorTime":"2020-09-09 00:25:01","codes":[{"authorDate":"2020-09-09 00:25:01","commitOrder":4,"curCode":"    public void testCopyToDynamicInnerObjectParsing() throws Exception {\n\n        DocumentMapper docMapper = createDocumentMapper(mapping(b -> {\n            b.startObject(\"copy_test\");\n            {\n                b.field(\"type\", \"text\");\n                b.field(\"copy_to\", \"very.inner.field\");\n            }\n            b.endObject();\n        }));\n\n        ParseContext.Document doc = docMapper.parse(source(b -> {\n            b.field(\"copy_test\", \"foo\");\n            b.field(\"new_field\", \"bar\");\n        })).rootDoc();\n\n        assertThat(doc.getFields(\"copy_test\").length, equalTo(1));\n        assertThat(doc.getFields(\"copy_test\")[0].stringValue(), equalTo(\"foo\"));\n\n        assertThat(doc.getFields(\"very.inner.field\").length, equalTo(1));\n        assertThat(doc.getFields(\"very.inner.field\")[0].stringValue(), equalTo(\"foo\"));\n\n        assertThat(doc.getFields(\"new_field\").length, equalTo(1));\n        assertThat(doc.getFields(\"new_field\")[0].stringValue(), equalTo(\"bar\"));\n    }\n","date":"2020-09-09 00:25:01","endLine":180,"groupId":"64729","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"testCopyToDynamicInnerObjectParsing","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/ac/1da59324453cda90b4632ca0b9a9248818fac9.src","preCode":"    public void testCopyToDynamicInnerObjectParsing() throws Exception {\n        String mapping = Strings.toString(jsonBuilder().startObject().startObject(\"type1\")\n            .startObject(\"properties\")\n                .startObject(\"copy_test\")\n                    .field(\"type\", \"text\")\n                    .field(\"copy_to\", \"very.inner.field\")\n                .endObject()\n            .endObject()\n            .endObject().endObject());\n\n        DocumentMapper docMapper = createIndex(\"test\").mapperService().documentMapperParser()\n            .parse(\"type1\", new CompressedXContent(mapping));\n\n        BytesReference json = BytesReference.bytes(jsonBuilder().startObject()\n                .field(\"copy_test\", \"foo\")\n                .field(\"new_field\", \"bar\")\n                .endObject());\n\n        ParseContext.Document doc = docMapper.parse(new SourceToParse(\"test\", \"1\", json,\n                XContentType.JSON)).rootDoc();\n        assertThat(doc.getFields(\"copy_test\").length, equalTo(1));\n        assertThat(doc.getFields(\"copy_test\")[0].stringValue(), equalTo(\"foo\"));\n\n        assertThat(doc.getFields(\"very.inner.field\").length, equalTo(1));\n        assertThat(doc.getFields(\"very.inner.field\")[0].stringValue(), equalTo(\"foo\"));\n\n        assertThat(doc.getFields(\"new_field\").length, equalTo(1));\n        assertThat(doc.getFields(\"new_field\")[0].stringValue(), equalTo(\"bar\"));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/index/mapper/CopyToMapperTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":156,"status":"M"},{"authorDate":"2020-09-09 00:25:01","commitOrder":4,"curCode":"    public void testCopyToDynamicInnerInnerObjectParsing() throws Exception {\n\n        DocumentMapper docMapper = createDocumentMapper(mapping(b -> {\n            b.startObject(\"copy_test\");\n            {\n                b.field(\"type\", \"text\");\n                b.field(\"copy_to\", \"very.far.inner.field\");\n            }\n            b.endObject();\n            b.startObject(\"very\");\n            {\n                b.field(\"type\", \"object\");\n                b.startObject(\"properties\");\n                {\n                    b.startObject(\"far\").field(\"type\", \"object\").endObject();\n                }\n                b.endObject();\n            }\n            b.endObject();\n        }));\n\n        ParseContext.Document doc = docMapper.parse(source(b -> {\n            b.field(\"copy_test\", \"foo\");\n            b.field(\"new_field\", \"bar\");\n        })).rootDoc();\n\n        assertThat(doc.getFields(\"copy_test\").length, equalTo(1));\n        assertThat(doc.getFields(\"copy_test\")[0].stringValue(), equalTo(\"foo\"));\n\n        assertThat(doc.getFields(\"very.far.inner.field\").length, equalTo(1));\n        assertThat(doc.getFields(\"very.far.inner.field\")[0].stringValue(), equalTo(\"foo\"));\n\n        assertThat(doc.getFields(\"new_field\").length, equalTo(1));\n        assertThat(doc.getFields(\"new_field\")[0].stringValue(), equalTo(\"bar\"));\n    }\n","date":"2020-09-09 00:25:01","endLine":216,"groupId":"64729","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"testCopyToDynamicInnerInnerObjectParsing","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/ac/1da59324453cda90b4632ca0b9a9248818fac9.src","preCode":"    public void testCopyToDynamicInnerInnerObjectParsing() throws Exception {\n        String mapping = Strings.toString(jsonBuilder().startObject().startObject(\"type1\")\n            .startObject(\"properties\")\n                .startObject(\"copy_test\")\n                    .field(\"type\", \"text\")\n                    .field(\"copy_to\", \"very.far.inner.field\")\n                .endObject()\n                .startObject(\"very\")\n                    .field(\"type\", \"object\")\n                    .startObject(\"properties\")\n                        .startObject(\"far\")\n                            .field(\"type\", \"object\")\n                        .endObject()\n                    .endObject()\n                .endObject()\n            .endObject()\n            .endObject().endObject());\n\n        DocumentMapper docMapper = createIndex(\"test\").mapperService().documentMapperParser()\n            .parse(\"type1\", new CompressedXContent(mapping));\n\n        BytesReference json = BytesReference.bytes(jsonBuilder().startObject()\n            .field(\"copy_test\", \"foo\")\n            .field(\"new_field\", \"bar\")\n            .endObject());\n\n        ParseContext.Document doc = docMapper.parse(new SourceToParse(\"test\", \"1\", json,\n                XContentType.JSON)).rootDoc();\n        assertThat(doc.getFields(\"copy_test\").length, equalTo(1));\n        assertThat(doc.getFields(\"copy_test\")[0].stringValue(), equalTo(\"foo\"));\n\n        assertThat(doc.getFields(\"very.far.inner.field\").length, equalTo(1));\n        assertThat(doc.getFields(\"very.far.inner.field\")[0].stringValue(), equalTo(\"foo\"));\n\n        assertThat(doc.getFields(\"new_field\").length, equalTo(1));\n        assertThat(doc.getFields(\"new_field\")[0].stringValue(), equalTo(\"bar\"));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/index/mapper/CopyToMapperTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":182,"status":"M"}],"commitId":"98590517f5ecb504874ca24c9d01b5d092b79360","commitMessage":"@@@Convert some more mapping tests to MapperServiceTestCase (#62089)\n\nWe don't need to extend ESSingleNodeTestCase for all these tests.","date":"2020-09-09 00:25:01","modifiedFileCount":"7","status":"M","submitter":"Alan Woodward"},{"authorTime":"2021-06-24 16:56:30","codes":[{"authorDate":"2021-06-24 16:56:30","commitOrder":5,"curCode":"    public void testCopyToDynamicInnerObjectParsing() throws Exception {\n\n        DocumentMapper docMapper = createDocumentMapper(mapping(b -> {\n            b.startObject(\"copy_test\");\n            {\n                b.field(\"type\", \"text\");\n                b.field(\"copy_to\", \"very.inner.field\");\n            }\n            b.endObject();\n        }));\n\n        LuceneDocument doc = docMapper.parse(source(b -> {\n            b.field(\"copy_test\", \"foo\");\n            b.field(\"new_field\", \"bar\");\n        })).rootDoc();\n\n        assertThat(doc.getFields(\"copy_test\").length, equalTo(1));\n        assertThat(doc.getFields(\"copy_test\")[0].stringValue(), equalTo(\"foo\"));\n\n        assertThat(doc.getFields(\"very.inner.field\").length, equalTo(1));\n        assertThat(doc.getFields(\"very.inner.field\")[0].stringValue(), equalTo(\"foo\"));\n\n        assertThat(doc.getFields(\"new_field\").length, equalTo(1));\n        assertThat(doc.getFields(\"new_field\")[0].stringValue(), equalTo(\"bar\"));\n    }\n","date":"2021-06-24 16:56:30","endLine":169,"groupId":"103153","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"testCopyToDynamicInnerObjectParsing","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/ee/7cae6255a8f65ddada72132719aef3bfcfab44.src","preCode":"    public void testCopyToDynamicInnerObjectParsing() throws Exception {\n\n        DocumentMapper docMapper = createDocumentMapper(mapping(b -> {\n            b.startObject(\"copy_test\");\n            {\n                b.field(\"type\", \"text\");\n                b.field(\"copy_to\", \"very.inner.field\");\n            }\n            b.endObject();\n        }));\n\n        ParseContext.Document doc = docMapper.parse(source(b -> {\n            b.field(\"copy_test\", \"foo\");\n            b.field(\"new_field\", \"bar\");\n        })).rootDoc();\n\n        assertThat(doc.getFields(\"copy_test\").length, equalTo(1));\n        assertThat(doc.getFields(\"copy_test\")[0].stringValue(), equalTo(\"foo\"));\n\n        assertThat(doc.getFields(\"very.inner.field\").length, equalTo(1));\n        assertThat(doc.getFields(\"very.inner.field\")[0].stringValue(), equalTo(\"foo\"));\n\n        assertThat(doc.getFields(\"new_field\").length, equalTo(1));\n        assertThat(doc.getFields(\"new_field\")[0].stringValue(), equalTo(\"bar\"));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/index/mapper/CopyToMapperTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":145,"status":"M"},{"authorDate":"2021-06-24 16:56:30","commitOrder":5,"curCode":"    public void testCopyToDynamicInnerInnerObjectParsing() throws Exception {\n\n        DocumentMapper docMapper = createDocumentMapper(mapping(b -> {\n            b.startObject(\"copy_test\");\n            {\n                b.field(\"type\", \"text\");\n                b.field(\"copy_to\", \"very.far.inner.field\");\n            }\n            b.endObject();\n            b.startObject(\"very\");\n            {\n                b.field(\"type\", \"object\");\n                b.startObject(\"properties\");\n                {\n                    b.startObject(\"far\").field(\"type\", \"object\").endObject();\n                }\n                b.endObject();\n            }\n            b.endObject();\n        }));\n\n        LuceneDocument doc = docMapper.parse(source(b -> {\n            b.field(\"copy_test\", \"foo\");\n            b.field(\"new_field\", \"bar\");\n        })).rootDoc();\n\n        assertThat(doc.getFields(\"copy_test\").length, equalTo(1));\n        assertThat(doc.getFields(\"copy_test\")[0].stringValue(), equalTo(\"foo\"));\n\n        assertThat(doc.getFields(\"very.far.inner.field\").length, equalTo(1));\n        assertThat(doc.getFields(\"very.far.inner.field\")[0].stringValue(), equalTo(\"foo\"));\n\n        assertThat(doc.getFields(\"new_field\").length, equalTo(1));\n        assertThat(doc.getFields(\"new_field\")[0].stringValue(), equalTo(\"bar\"));\n    }\n","date":"2021-06-24 16:56:30","endLine":205,"groupId":"103153","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"testCopyToDynamicInnerInnerObjectParsing","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/ee/7cae6255a8f65ddada72132719aef3bfcfab44.src","preCode":"    public void testCopyToDynamicInnerInnerObjectParsing() throws Exception {\n\n        DocumentMapper docMapper = createDocumentMapper(mapping(b -> {\n            b.startObject(\"copy_test\");\n            {\n                b.field(\"type\", \"text\");\n                b.field(\"copy_to\", \"very.far.inner.field\");\n            }\n            b.endObject();\n            b.startObject(\"very\");\n            {\n                b.field(\"type\", \"object\");\n                b.startObject(\"properties\");\n                {\n                    b.startObject(\"far\").field(\"type\", \"object\").endObject();\n                }\n                b.endObject();\n            }\n            b.endObject();\n        }));\n\n        ParseContext.Document doc = docMapper.parse(source(b -> {\n            b.field(\"copy_test\", \"foo\");\n            b.field(\"new_field\", \"bar\");\n        })).rootDoc();\n\n        assertThat(doc.getFields(\"copy_test\").length, equalTo(1));\n        assertThat(doc.getFields(\"copy_test\")[0].stringValue(), equalTo(\"foo\"));\n\n        assertThat(doc.getFields(\"very.far.inner.field\").length, equalTo(1));\n        assertThat(doc.getFields(\"very.far.inner.field\")[0].stringValue(), equalTo(\"foo\"));\n\n        assertThat(doc.getFields(\"new_field\").length, equalTo(1));\n        assertThat(doc.getFields(\"new_field\")[0].stringValue(), equalTo(\"bar\"));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/index/mapper/CopyToMapperTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":171,"status":"M"}],"commitId":"7cedc3ec3a109f02f54b9e12a7ca8a3470b67e80","commitMessage":"@@@Make Document a top-level class (#74472)\n\nThere is no reason for Document to be an inner class of ParseContext.  especially as it is public and accessed directly from many different places.\n\nThis commit takes it out to its own top-level class file.  which has the advantage of simplifying ParseContext which could use some love too.\n","date":"2021-06-24 16:56:30","modifiedFileCount":"46","status":"M","submitter":"Luca Cavanna"}]
