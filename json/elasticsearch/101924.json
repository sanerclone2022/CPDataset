[{"authorTime":"2020-05-28 19:11:15","codes":[{"authorDate":"2020-05-28 19:11:15","commitOrder":2,"curCode":"    public void testCreateDataStreamStartingWithPeriod() throws Exception {\n        final MetadataCreateIndexService metadataCreateIndexService = getMetadataCreateIndexService();\n        final String dataStreamName = \".may_not_start_with_period\";\n        ClusterState cs = ClusterState.builder(new ClusterName(\"_name\")).build();\n        CreateDataStreamClusterStateUpdateRequest req =\n            new CreateDataStreamClusterStateUpdateRequest(dataStreamName, TimeValue.ZERO, TimeValue.ZERO);\n        IllegalArgumentException e = expectThrows(IllegalArgumentException.class,\n            () -> MetadataCreateDataStreamService.createDataStream(metadataCreateIndexService, cs, req));\n        assertThat(e.getMessage(), containsString(\"data_stream [\" + dataStreamName + \"] must not start with '.'\"));\n    }\n","date":"2020-05-28 19:11:15","endLine":108,"groupId":"36388","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testCreateDataStreamStartingWithPeriod","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/36/7225bf4ce12e0fc1890eeafa6cb443cd208f1d.src","preCode":"    public void testCreateDataStreamStartingWithPeriod() throws Exception {\n        final MetadataCreateIndexService metadataCreateIndexService = getMetadataCreateIndexService();\n        final String dataStreamName = \".may_not_start_with_period\";\n        ClusterState cs = ClusterState.builder(new ClusterName(\"_name\")).build();\n        CreateDataStreamClusterStateUpdateRequest req =\n            new CreateDataStreamClusterStateUpdateRequest(dataStreamName, TimeValue.ZERO, TimeValue.ZERO);\n        IllegalArgumentException e = expectThrows(IllegalArgumentException.class,\n            () -> MetadataCreateDataStreamService.createDataStream(metadataCreateIndexService, cs, req));\n        assertThat(e.getMessage(), containsString(\"data_stream [\" + dataStreamName + \"] must not start with '.'\"));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/cluster/metadata/MetadataCreateDataStreamServiceTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":99,"status":"MB"},{"authorDate":"2020-05-28 19:11:15","commitOrder":2,"curCode":"    public void testCreateDataStreamNoTemplate() throws Exception {\n        final MetadataCreateIndexService metadataCreateIndexService = getMetadataCreateIndexService();\n        final String dataStreamName = \"my-data-stream\";\n        ClusterState cs = ClusterState.builder(new ClusterName(\"_name\"))\n            .build();\n        CreateDataStreamClusterStateUpdateRequest req =\n            new CreateDataStreamClusterStateUpdateRequest(dataStreamName, TimeValue.ZERO, TimeValue.ZERO);\n        Exception e = expectThrows(IllegalArgumentException.class,\n            () -> MetadataCreateDataStreamService.createDataStream(metadataCreateIndexService, cs, req));\n        assertThat(e.getMessage(), equalTo(\"no matching index template found for data stream [my-data-stream]\"));\n    }\n","date":"2020-05-28 19:11:15","endLine":120,"groupId":"36388","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testCreateDataStreamNoTemplate","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/36/7225bf4ce12e0fc1890eeafa6cb443cd208f1d.src","preCode":"    public void testCreateDataStreamNoTemplate() throws Exception {\n        final MetadataCreateIndexService metadataCreateIndexService = getMetadataCreateIndexService();\n        final String dataStreamName = \"my-data-stream\";\n        ClusterState cs = ClusterState.builder(new ClusterName(\"_name\"))\n            .build();\n        CreateDataStreamClusterStateUpdateRequest req =\n            new CreateDataStreamClusterStateUpdateRequest(dataStreamName, TimeValue.ZERO, TimeValue.ZERO);\n        Exception e = expectThrows(IllegalArgumentException.class,\n            () -> MetadataCreateDataStreamService.createDataStream(metadataCreateIndexService, cs, req));\n        assertThat(e.getMessage(), equalTo(\"no matching index template found for data stream [my-data-stream]\"));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/cluster/metadata/MetadataCreateDataStreamServiceTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":110,"status":"B"}],"commitId":"f8b090b6418c8babaa402d0c210eb7f3c248a59f","commitMessage":"@@@Ensure template exists when creating data stream (#56888)\n\nLimit the creation of data streams only for namespaces that have a composable template with a data stream definition.\n\nThis way we ensure that mappings/settings have been specified and will be used at data stream creation and data stream rollover.\n\nAlso remove `timestamp_field` parameter from create data stream request and\nlet the create data stream api resolve the timestamp field\nfrom the data stream definition snippet inside a composable template.\n\nRelates to #53100","date":"2020-05-28 19:11:15","modifiedFileCount":"10","status":"M","submitter":"Martijn van Groningen"},{"authorTime":"2020-05-28 19:11:15","codes":[{"authorDate":"2020-10-30 18:41:58","commitOrder":3,"curCode":"    public void testCreateDataStreamStartingWithPeriod() throws Exception {\n        final MetadataCreateIndexService metadataCreateIndexService = getMetadataCreateIndexService();\n        final String dataStreamName = \".ds-may_not_start_with_ds\";\n        ClusterState cs = ClusterState.builder(new ClusterName(\"_name\")).build();\n        CreateDataStreamClusterStateUpdateRequest req =\n            new CreateDataStreamClusterStateUpdateRequest(dataStreamName, TimeValue.ZERO, TimeValue.ZERO);\n        IllegalArgumentException e = expectThrows(IllegalArgumentException.class,\n            () -> MetadataCreateDataStreamService.createDataStream(metadataCreateIndexService, cs, req));\n        assertThat(e.getMessage(), containsString(\"data_stream [\" + dataStreamName + \"] must not start with '.ds-'\"));\n    }\n","date":"2020-10-30 18:41:58","endLine":112,"groupId":"36388","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testCreateDataStreamStartingWithPeriod","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/b8/abd6182d5cf714bb96766e167cf7527cbbb7f0.src","preCode":"    public void testCreateDataStreamStartingWithPeriod() throws Exception {\n        final MetadataCreateIndexService metadataCreateIndexService = getMetadataCreateIndexService();\n        final String dataStreamName = \".may_not_start_with_period\";\n        ClusterState cs = ClusterState.builder(new ClusterName(\"_name\")).build();\n        CreateDataStreamClusterStateUpdateRequest req =\n            new CreateDataStreamClusterStateUpdateRequest(dataStreamName, TimeValue.ZERO, TimeValue.ZERO);\n        IllegalArgumentException e = expectThrows(IllegalArgumentException.class,\n            () -> MetadataCreateDataStreamService.createDataStream(metadataCreateIndexService, cs, req));\n        assertThat(e.getMessage(), containsString(\"data_stream [\" + dataStreamName + \"] must not start with '.'\"));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/cluster/metadata/MetadataCreateDataStreamServiceTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":103,"status":"M"},{"authorDate":"2020-05-28 19:11:15","commitOrder":3,"curCode":"    public void testCreateDataStreamNoTemplate() throws Exception {\n        final MetadataCreateIndexService metadataCreateIndexService = getMetadataCreateIndexService();\n        final String dataStreamName = \"my-data-stream\";\n        ClusterState cs = ClusterState.builder(new ClusterName(\"_name\"))\n            .build();\n        CreateDataStreamClusterStateUpdateRequest req =\n            new CreateDataStreamClusterStateUpdateRequest(dataStreamName, TimeValue.ZERO, TimeValue.ZERO);\n        Exception e = expectThrows(IllegalArgumentException.class,\n            () -> MetadataCreateDataStreamService.createDataStream(metadataCreateIndexService, cs, req));\n        assertThat(e.getMessage(), equalTo(\"no matching index template found for data stream [my-data-stream]\"));\n    }\n","date":"2020-05-28 19:11:15","endLine":120,"groupId":"36388","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testCreateDataStreamNoTemplate","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/36/7225bf4ce12e0fc1890eeafa6cb443cd208f1d.src","preCode":"    public void testCreateDataStreamNoTemplate() throws Exception {\n        final MetadataCreateIndexService metadataCreateIndexService = getMetadataCreateIndexService();\n        final String dataStreamName = \"my-data-stream\";\n        ClusterState cs = ClusterState.builder(new ClusterName(\"_name\"))\n            .build();\n        CreateDataStreamClusterStateUpdateRequest req =\n            new CreateDataStreamClusterStateUpdateRequest(dataStreamName, TimeValue.ZERO, TimeValue.ZERO);\n        Exception e = expectThrows(IllegalArgumentException.class,\n            () -> MetadataCreateDataStreamService.createDataStream(metadataCreateIndexService, cs, req));\n        assertThat(e.getMessage(), equalTo(\"no matching index template found for data stream [my-data-stream]\"));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/cluster/metadata/MetadataCreateDataStreamServiceTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":110,"status":"N"}],"commitId":"0e81fc641a827082ac2dd411c67f6f7519e39849","commitMessage":"@@@Hidden data streams (#63987)\n\n* Hidden data streams\n\n* whitespace reverted\n\n* stricter ds name\n\n* Revert \"stricter ds name\"\n\nThis reverts commit 100dba5f3c9561a2e8bc5c52bffa5881c114b6c7.\n\n* String.format removed\n\n* fix test\n\n* fix GetDataStream action\n\n* fix test\n\n* fix test\n\n* rest test\n\n* rest test\n\n* spotless\n\n* tests\n\n* Delete a.json\n\n* added expand_wildcards for GetDataStream and DeleteDataStream\n\n* unused imports\n\n* add hidden setting to data stream template\n\n* fix expand_wildcards\n\n* spotless\n\n* fix compilation\n\n* unused import\n\n* yaml test\n\n* fix test\n\n* fix cleanup\n\n* review\n\n* compilation fix\n\n* fix javadoc\n\n* fix javadoc","date":"2020-10-30 18:41:58","modifiedFileCount":"17","status":"M","submitter":"Przemko Robakowski"},{"authorTime":"2021-09-14 17:13:58","codes":[{"authorDate":"2021-09-14 17:13:58","commitOrder":4,"curCode":"    public void testCreateDataStreamStartingWithPeriod() throws Exception {\n        final MetadataCreateIndexService metadataCreateIndexService = getMetadataCreateIndexService();\n        final String dataStreamName = \".ds-may_not_start_with_ds\";\n        ClusterState cs = ClusterState.builder(new ClusterName(\"_name\")).build();\n        CreateDataStreamClusterStateUpdateRequest req = new CreateDataStreamClusterStateUpdateRequest(dataStreamName);\n        IllegalArgumentException e = expectThrows(IllegalArgumentException.class,\n            () -> MetadataCreateDataStreamService.createDataStream(metadataCreateIndexService, cs, req));\n        assertThat(e.getMessage(), containsString(\"data_stream [\" + dataStreamName + \"] must not start with '.ds-'\"));\n    }\n","date":"2021-09-14 17:13:58","endLine":255,"groupId":"101924","id":5,"instanceNumber":1,"isCurCommit":1,"methodName":"testCreateDataStreamStartingWithPeriod","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/0a/b1cd9fdd89f257a70c73af17b08137d7ffde16.src","preCode":"    public void testCreateDataStreamStartingWithPeriod() throws Exception {\n        final MetadataCreateIndexService metadataCreateIndexService = getMetadataCreateIndexService();\n        final String dataStreamName = \".ds-may_not_start_with_ds\";\n        ClusterState cs = ClusterState.builder(new ClusterName(\"_name\")).build();\n        CreateDataStreamClusterStateUpdateRequest req =\n            new CreateDataStreamClusterStateUpdateRequest(dataStreamName, TimeValue.ZERO, TimeValue.ZERO);\n        IllegalArgumentException e = expectThrows(IllegalArgumentException.class,\n            () -> MetadataCreateDataStreamService.createDataStream(metadataCreateIndexService, cs, req));\n        assertThat(e.getMessage(), containsString(\"data_stream [\" + dataStreamName + \"] must not start with '.ds-'\"));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/cluster/metadata/MetadataCreateDataStreamServiceTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":247,"status":"M"},{"authorDate":"2021-09-14 17:13:58","commitOrder":4,"curCode":"    public void testCreateDataStreamNoTemplate() throws Exception {\n        final MetadataCreateIndexService metadataCreateIndexService = getMetadataCreateIndexService();\n        final String dataStreamName = \"my-data-stream\";\n        ClusterState cs = ClusterState.builder(new ClusterName(\"_name\"))\n            .build();\n        CreateDataStreamClusterStateUpdateRequest req = new CreateDataStreamClusterStateUpdateRequest(dataStreamName);\n        Exception e = expectThrows(IllegalArgumentException.class,\n            () -> MetadataCreateDataStreamService.createDataStream(metadataCreateIndexService, cs, req));\n        assertThat(e.getMessage(), equalTo(\"no matching index template found for data stream [my-data-stream]\"));\n    }\n","date":"2021-09-14 17:13:58","endLine":266,"groupId":"101924","id":6,"instanceNumber":2,"isCurCommit":1,"methodName":"testCreateDataStreamNoTemplate","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/0a/b1cd9fdd89f257a70c73af17b08137d7ffde16.src","preCode":"    public void testCreateDataStreamNoTemplate() throws Exception {\n        final MetadataCreateIndexService metadataCreateIndexService = getMetadataCreateIndexService();\n        final String dataStreamName = \"my-data-stream\";\n        ClusterState cs = ClusterState.builder(new ClusterName(\"_name\"))\n            .build();\n        CreateDataStreamClusterStateUpdateRequest req =\n            new CreateDataStreamClusterStateUpdateRequest(dataStreamName, TimeValue.ZERO, TimeValue.ZERO);\n        Exception e = expectThrows(IllegalArgumentException.class,\n            () -> MetadataCreateDataStreamService.createDataStream(metadataCreateIndexService, cs, req));\n        assertThat(e.getMessage(), equalTo(\"no matching index template found for data stream [my-data-stream]\"));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/cluster/metadata/MetadataCreateDataStreamServiceTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":257,"status":"M"}],"commitId":"bb675924912a0ed4e30b0234003f5e28df4a008c","commitMessage":"@@@Add startTime field to create data stream action request class. (#77660)\n\nThe startTime field only exists for testing purposes. In order\nto reliable control the name of the backing index being created\nas part of this action. Note this field is not exposed on the\nrest layer.\n\nChange DataStreamIT#testCreatingDataStreamAndFirstBackingIndexExistsFails() to\nuse this new field.\n\nOther changes:\n* Removed testAutoCreatingDataStreamAndFirstBackingIndexExistsFails() test.\n  This test also tests what testCreatingDataStreamAndFirstBackingIndexExistsFails()\n  is testing and in order to test it properly we would need to change the index action\n  request in the same way the create data stream action request is changed.\n* Use `backingIndexEqualTo([name].  [gen])` over\n  `equalTo(DataStream.getDefaultBackingIndexName([name].  [gen]))` where possible.\n  This way of asserting isn't prone to timing and is easier to use.\n\nCloses #77307","date":"2021-09-14 17:13:58","modifiedFileCount":"6","status":"M","submitter":"Martijn van Groningen"}]
