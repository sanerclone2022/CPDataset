[{"authorTime":"2018-04-26 03:22:53","codes":[{"authorDate":"2018-04-26 03:22:53","commitOrder":1,"curCode":"    protected InternalRange createTestInstance(String name,\n                                               List<PipelineAggregator> pipelineAggregators,\n                                               Map<String, Object> metaData,\n                                               InternalAggregations aggregations,\n                                               boolean keyed) {\n        final List<InternalRange.Bucket> buckets = new ArrayList<>();\n        for (int i = 0; i < ranges.size(); ++i) {\n            Tuple<Double, Double> range = ranges.get(i);\n            int docCount = randomIntBetween(0, 1000);\n            double from = range.v1();\n            double to = range.v2();\n            buckets.add(new InternalRange.Bucket(\"range_\" + i, from, to, docCount, aggregations, keyed, format));\n        }\n        return new InternalRange<>(name, buckets, format, keyed, pipelineAggregators, metaData);\n    }\n","date":"2018-04-26 03:22:53","endLine":93,"groupId":"36099","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"createTestInstance","params":"(Stringname@List<PipelineAggregator>pipelineAggregators@Map<String@Object>metaData@InternalAggregationsaggregations@booleankeyed)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/8a/e762a54c8e52eaab5f4d1e57fdaf8853f72d8e.src","preCode":"    protected InternalRange createTestInstance(String name,\n                                               List<PipelineAggregator> pipelineAggregators,\n                                               Map<String, Object> metaData,\n                                               InternalAggregations aggregations,\n                                               boolean keyed) {\n        final List<InternalRange.Bucket> buckets = new ArrayList<>();\n        for (int i = 0; i < ranges.size(); ++i) {\n            Tuple<Double, Double> range = ranges.get(i);\n            int docCount = randomIntBetween(0, 1000);\n            double from = range.v1();\n            double to = range.v2();\n            buckets.add(new InternalRange.Bucket(\"range_\" + i, from, to, docCount, aggregations, keyed, format));\n        }\n        return new InternalRange<>(name, buckets, format, keyed, pipelineAggregators, metaData);\n    }\n","realPath":"server/src/test/java/org/elasticsearch/search/aggregations/bucket/range/InternalRangeTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":79,"status":"B"},{"authorDate":"2018-04-26 03:22:53","commitOrder":1,"curCode":"    protected InternalDateRange createTestInstance(String name,\n                                                   List<PipelineAggregator> pipelineAggregators,\n                                                   Map<String, Object> metaData,\n                                                   InternalAggregations aggregations,\n                                                   boolean keyed) {\n        final List<InternalDateRange.Bucket> buckets = new ArrayList<>();\n        for (int i = 0; i < dateRanges.size(); ++i) {\n            Tuple<Double, Double> range = dateRanges.get(i);\n            int docCount = randomIntBetween(0, 1000);\n            double from = range.v1();\n            double to = range.v2();\n            buckets.add(new InternalDateRange.Bucket(\"range_\" + i, from, to, docCount, aggregations, keyed, format));\n        }\n        return new InternalDateRange(name, buckets, format, keyed, pipelineAggregators, metaData);\n    }\n","date":"2018-04-26 03:22:53","endLine":93,"groupId":"36099","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"createTestInstance","params":"(Stringname@List<PipelineAggregator>pipelineAggregators@Map<String@Object>metaData@InternalAggregationsaggregations@booleankeyed)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/e1/09f176b820d122fe9011363d900419a640aab2.src","preCode":"    protected InternalDateRange createTestInstance(String name,\n                                                   List<PipelineAggregator> pipelineAggregators,\n                                                   Map<String, Object> metaData,\n                                                   InternalAggregations aggregations,\n                                                   boolean keyed) {\n        final List<InternalDateRange.Bucket> buckets = new ArrayList<>();\n        for (int i = 0; i < dateRanges.size(); ++i) {\n            Tuple<Double, Double> range = dateRanges.get(i);\n            int docCount = randomIntBetween(0, 1000);\n            double from = range.v1();\n            double to = range.v2();\n            buckets.add(new InternalDateRange.Bucket(\"range_\" + i, from, to, docCount, aggregations, keyed, format));\n        }\n        return new InternalDateRange(name, buckets, format, keyed, pipelineAggregators, metaData);\n    }\n","realPath":"server/src/test/java/org/elasticsearch/search/aggregations/bucket/range/InternalDateRangeTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":79,"status":"B"}],"commitId":"d74fb9eb4559077e2d20b19a9ed62d9ff825027a","commitMessage":"@@@Opened x-pack ILM code\n","date":"2018-04-26 03:22:53","modifiedFileCount":"0","status":"B","submitter":"Tal Levy"},{"authorTime":"2020-04-01 03:52:01","codes":[{"authorDate":"2020-04-01 03:52:01","commitOrder":2,"curCode":"    protected InternalRange createTestInstance(String name,\n                                               List<PipelineAggregator> pipelineAggregators,\n                                               Map<String, Object> metadata,\n                                               InternalAggregations aggregations,\n                                               boolean keyed) {\n        final List<InternalRange.Bucket> buckets = new ArrayList<>();\n        for (int i = 0; i < ranges.size(); ++i) {\n            Tuple<Double, Double> range = ranges.get(i);\n            int docCount = randomIntBetween(0, 1000);\n            double from = range.v1();\n            double to = range.v2();\n            buckets.add(new InternalRange.Bucket(\"range_\" + i, from, to, docCount, aggregations, keyed, format));\n        }\n        return new InternalRange<>(name, buckets, format, keyed, pipelineAggregators, metadata);\n    }\n","date":"2020-04-01 03:52:01","endLine":93,"groupId":"36099","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"createTestInstance","params":"(Stringname@List<PipelineAggregator>pipelineAggregators@Map<String@Object>metadata@InternalAggregationsaggregations@booleankeyed)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/77/0c0be8b08f634041d17c03e47a87fd749e22da.src","preCode":"    protected InternalRange createTestInstance(String name,\n                                               List<PipelineAggregator> pipelineAggregators,\n                                               Map<String, Object> metaData,\n                                               InternalAggregations aggregations,\n                                               boolean keyed) {\n        final List<InternalRange.Bucket> buckets = new ArrayList<>();\n        for (int i = 0; i < ranges.size(); ++i) {\n            Tuple<Double, Double> range = ranges.get(i);\n            int docCount = randomIntBetween(0, 1000);\n            double from = range.v1();\n            double to = range.v2();\n            buckets.add(new InternalRange.Bucket(\"range_\" + i, from, to, docCount, aggregations, keyed, format));\n        }\n        return new InternalRange<>(name, buckets, format, keyed, pipelineAggregators, metaData);\n    }\n","realPath":"server/src/test/java/org/elasticsearch/search/aggregations/bucket/range/InternalRangeTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":79,"status":"M"},{"authorDate":"2020-04-01 03:52:01","commitOrder":2,"curCode":"    protected InternalDateRange createTestInstance(String name,\n                                                   List<PipelineAggregator> pipelineAggregators,\n                                                   Map<String, Object> metadata,\n                                                   InternalAggregations aggregations,\n                                                   boolean keyed) {\n        final List<InternalDateRange.Bucket> buckets = new ArrayList<>();\n        for (int i = 0; i < dateRanges.size(); ++i) {\n            Tuple<Double, Double> range = dateRanges.get(i);\n            int docCount = randomIntBetween(0, 1000);\n            double from = range.v1();\n            double to = range.v2();\n            buckets.add(new InternalDateRange.Bucket(\"range_\" + i, from, to, docCount, aggregations, keyed, format));\n        }\n        return new InternalDateRange(name, buckets, format, keyed, pipelineAggregators, metadata);\n    }\n","date":"2020-04-01 03:52:01","endLine":93,"groupId":"36099","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"createTestInstance","params":"(Stringname@List<PipelineAggregator>pipelineAggregators@Map<String@Object>metadata@InternalAggregationsaggregations@booleankeyed)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/53/c05f7bca39c70a9ece7e6687d431b6bd70282d.src","preCode":"    protected InternalDateRange createTestInstance(String name,\n                                                   List<PipelineAggregator> pipelineAggregators,\n                                                   Map<String, Object> metaData,\n                                                   InternalAggregations aggregations,\n                                                   boolean keyed) {\n        final List<InternalDateRange.Bucket> buckets = new ArrayList<>();\n        for (int i = 0; i < dateRanges.size(); ++i) {\n            Tuple<Double, Double> range = dateRanges.get(i);\n            int docCount = randomIntBetween(0, 1000);\n            double from = range.v1();\n            double to = range.v2();\n            buckets.add(new InternalDateRange.Bucket(\"range_\" + i, from, to, docCount, aggregations, keyed, format));\n        }\n        return new InternalDateRange(name, buckets, format, keyed, pipelineAggregators, metaData);\n    }\n","realPath":"server/src/test/java/org/elasticsearch/search/aggregations/bucket/range/InternalDateRangeTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":79,"status":"M"}],"commitId":"95a7eed9aa35f47b228e402508709b5bd6703cf4","commitMessage":"@@@Rename MetaData to Metadata in all of the places (#54519)\n\nThis is a simple naming change PR.  to fix the fact that \"metadata\" is a\nsingle English word.  and for too long we have not followed general\nnaming conventions for it. We are also not consistent about it.  for\nexample.  METADATA instead of META_DATA if we were trying to be\nconsistent with MetaData (although METADATA is correct when considered\nin the context of \"metadata\"). This was a simple find and replace across\nthe code base.  only taking a few minutes to fix this naming issue\nforever.","date":"2020-04-01 03:52:01","modifiedFileCount":"1712","status":"M","submitter":"Jason Tedor"},{"authorTime":"2020-04-02 22:39:30","codes":[{"authorDate":"2020-04-02 22:39:30","commitOrder":3,"curCode":"    protected InternalRange createTestInstance(String name,\n                                               Map<String, Object> metadata,\n                                               InternalAggregations aggregations,\n                                               boolean keyed) {\n        final List<InternalRange.Bucket> buckets = new ArrayList<>();\n        for (int i = 0; i < ranges.size(); ++i) {\n            Tuple<Double, Double> range = ranges.get(i);\n            int docCount = randomIntBetween(0, 1000);\n            double from = range.v1();\n            double to = range.v2();\n            buckets.add(new InternalRange.Bucket(\"range_\" + i, from, to, docCount, aggregations, keyed, format));\n        }\n        return new InternalRange<>(name, buckets, format, keyed, metadata);\n    }\n","date":"2020-04-02 22:39:30","endLine":91,"groupId":"36099","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"createTestInstance","params":"(Stringname@Map<String@Object>metadata@InternalAggregationsaggregations@booleankeyed)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/35/8e7e820e91130ed162ae2ca83c58a2549e1789.src","preCode":"    protected InternalRange createTestInstance(String name,\n                                               List<PipelineAggregator> pipelineAggregators,\n                                               Map<String, Object> metadata,\n                                               InternalAggregations aggregations,\n                                               boolean keyed) {\n        final List<InternalRange.Bucket> buckets = new ArrayList<>();\n        for (int i = 0; i < ranges.size(); ++i) {\n            Tuple<Double, Double> range = ranges.get(i);\n            int docCount = randomIntBetween(0, 1000);\n            double from = range.v1();\n            double to = range.v2();\n            buckets.add(new InternalRange.Bucket(\"range_\" + i, from, to, docCount, aggregations, keyed, format));\n        }\n        return new InternalRange<>(name, buckets, format, keyed, pipelineAggregators, metadata);\n    }\n","realPath":"server/src/test/java/org/elasticsearch/search/aggregations/bucket/range/InternalRangeTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":78,"status":"M"},{"authorDate":"2020-04-02 22:39:30","commitOrder":3,"curCode":"    protected InternalDateRange createTestInstance(String name,\n                                                   Map<String, Object> metadata,\n                                                   InternalAggregations aggregations,\n                                                   boolean keyed) {\n        final List<InternalDateRange.Bucket> buckets = new ArrayList<>();\n        for (int i = 0; i < dateRanges.size(); ++i) {\n            Tuple<Double, Double> range = dateRanges.get(i);\n            int docCount = randomIntBetween(0, 1000);\n            double from = range.v1();\n            double to = range.v2();\n            buckets.add(new InternalDateRange.Bucket(\"range_\" + i, from, to, docCount, aggregations, keyed, format));\n        }\n        return new InternalDateRange(name, buckets, format, keyed, metadata);\n    }\n","date":"2020-04-02 22:39:30","endLine":91,"groupId":"36099","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"createTestInstance","params":"(Stringname@Map<String@Object>metadata@InternalAggregationsaggregations@booleankeyed)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/9d/2c4489fac782bb358fa015a767700e491f93ba.src","preCode":"    protected InternalDateRange createTestInstance(String name,\n                                                   List<PipelineAggregator> pipelineAggregators,\n                                                   Map<String, Object> metadata,\n                                                   InternalAggregations aggregations,\n                                                   boolean keyed) {\n        final List<InternalDateRange.Bucket> buckets = new ArrayList<>();\n        for (int i = 0; i < dateRanges.size(); ++i) {\n            Tuple<Double, Double> range = dateRanges.get(i);\n            int docCount = randomIntBetween(0, 1000);\n            double from = range.v1();\n            double to = range.v2();\n            buckets.add(new InternalDateRange.Bucket(\"range_\" + i, from, to, docCount, aggregations, keyed, format));\n        }\n        return new InternalDateRange(name, buckets, format, keyed, pipelineAggregators, metadata);\n    }\n","realPath":"server/src/test/java/org/elasticsearch/search/aggregations/bucket/range/InternalDateRangeTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":78,"status":"M"}],"commitId":"dbe9b48b830c4aea5c59abac322e77ca5f98a8af","commitMessage":"@@@Begin to drop pipeline aggs from the result tree (#54311)\n\nRemoves pipeline aggregations from the aggregation result tree as they\nare no longer used. This stops us from building the pipeline aggregators\nat all on data nodes except for backwards compatibility serialization.\nThis will save a tiny bit of space in the aggregation tree which is\nlovely.  but the biggest benefit is that it is a step towards simplifying\npipeline aggregators.\n\nThis only does about half of the work to remove the pipeline aggs from\nthe tree. Removing all of it would.  well.  double the size of the change\nand make it harder to review.\n","date":"2020-04-02 22:39:30","modifiedFileCount":"158","status":"M","submitter":"Nik Everett"},{"authorTime":"2020-04-02 22:39:30","codes":[{"authorDate":"2021-08-11 23:15:30","commitOrder":4,"curCode":"    protected InternalRange<InternalRange.Bucket, ?> createTestInstance(String name,\n                                               Map<String, Object> metadata,\n                                               InternalAggregations aggregations,\n                                               boolean keyed) {\n        final List<InternalRange.Bucket> buckets = new ArrayList<>();\n        for (int i = 0; i < ranges.size(); ++i) {\n            Tuple<Double, Double> range = ranges.get(i);\n            int docCount = randomIntBetween(0, 1000);\n            double from = range.v1();\n            double to = range.v2();\n            buckets.add(new InternalRange.Bucket(\"range_\" + i, from, to, docCount, aggregations, keyed, format));\n        }\n        return new InternalRange<>(name, buckets, format, keyed, metadata);\n    }\n","date":"2021-08-11 23:15:30","endLine":79,"groupId":"104835","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"createTestInstance","params":"(Stringname@Map<String@Object>metadata@InternalAggregationsaggregations@booleankeyed)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/d3/2f506dc183f8b3d3cfc3577edc92d041f9fb9c.src","preCode":"    protected InternalRange createTestInstance(String name,\n                                               Map<String, Object> metadata,\n                                               InternalAggregations aggregations,\n                                               boolean keyed) {\n        final List<InternalRange.Bucket> buckets = new ArrayList<>();\n        for (int i = 0; i < ranges.size(); ++i) {\n            Tuple<Double, Double> range = ranges.get(i);\n            int docCount = randomIntBetween(0, 1000);\n            double from = range.v1();\n            double to = range.v2();\n            buckets.add(new InternalRange.Bucket(\"range_\" + i, from, to, docCount, aggregations, keyed, format));\n        }\n        return new InternalRange<>(name, buckets, format, keyed, metadata);\n    }\n","realPath":"server/src/test/java/org/elasticsearch/search/aggregations/bucket/range/InternalRangeTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":66,"status":"M"},{"authorDate":"2020-04-02 22:39:30","commitOrder":4,"curCode":"    protected InternalDateRange createTestInstance(String name,\n                                                   Map<String, Object> metadata,\n                                                   InternalAggregations aggregations,\n                                                   boolean keyed) {\n        final List<InternalDateRange.Bucket> buckets = new ArrayList<>();\n        for (int i = 0; i < dateRanges.size(); ++i) {\n            Tuple<Double, Double> range = dateRanges.get(i);\n            int docCount = randomIntBetween(0, 1000);\n            double from = range.v1();\n            double to = range.v2();\n            buckets.add(new InternalDateRange.Bucket(\"range_\" + i, from, to, docCount, aggregations, keyed, format));\n        }\n        return new InternalDateRange(name, buckets, format, keyed, metadata);\n    }\n","date":"2020-04-02 22:39:30","endLine":91,"groupId":"104835","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"createTestInstance","params":"(Stringname@Map<String@Object>metadata@InternalAggregationsaggregations@booleankeyed)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/9d/2c4489fac782bb358fa015a767700e491f93ba.src","preCode":"    protected InternalDateRange createTestInstance(String name,\n                                                   Map<String, Object> metadata,\n                                                   InternalAggregations aggregations,\n                                                   boolean keyed) {\n        final List<InternalDateRange.Bucket> buckets = new ArrayList<>();\n        for (int i = 0; i < dateRanges.size(); ++i) {\n            Tuple<Double, Double> range = dateRanges.get(i);\n            int docCount = randomIntBetween(0, 1000);\n            double from = range.v1();\n            double to = range.v2();\n            buckets.add(new InternalDateRange.Bucket(\"range_\" + i, from, to, docCount, aggregations, keyed, format));\n        }\n        return new InternalDateRange(name, buckets, format, keyed, metadata);\n    }\n","realPath":"server/src/test/java/org/elasticsearch/search/aggregations/bucket/range/InternalDateRangeTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":78,"status":"N"}],"commitId":"4137d110796f6308126ee2c573eebc5c3ebaa26a","commitMessage":"@@@Fix compiler warnings in :server - part 4 (#76302)\n\nCloses #40366.\n\nFix the last remaining javac issues when linting is enforced in `server/`.","date":"2021-08-11 23:15:30","modifiedFileCount":"81","status":"M","submitter":"Rory Hunter"}]
