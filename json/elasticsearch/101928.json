[{"authorTime":"2018-04-26 03:22:53","codes":[{"authorDate":"2018-04-26 03:22:53","commitOrder":1,"curCode":"    public void testConcreteIndicesIgnoreIndicesOneMissingIndex() {\n        MetaData.Builder mdBuilder = MetaData.builder()\n                .put(indexBuilder(\"testXXX\"))\n                .put(indexBuilder(\"kuku\"));\n        ClusterState state = ClusterState.builder(new ClusterName(\"_name\")).metaData(mdBuilder).build();\n        IndexNameExpressionResolver.Context context = new IndexNameExpressionResolver.Context(state, IndicesOptions.strictExpandOpen());\n\n        IndexNotFoundException infe = expectThrows(IndexNotFoundException.class,\n                () -> indexNameExpressionResolver.concreteIndexNames(context, \"testZZZ\"));\n        assertThat(infe.getMessage(), is(\"no such index\"));\n    }\n","date":"2018-04-26 03:22:53","endLine":526,"groupId":"30933","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testConcreteIndicesIgnoreIndicesOneMissingIndex","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/05/30bd617af631ed9d1d8e707dae59c4b00577ec.src","preCode":"    public void testConcreteIndicesIgnoreIndicesOneMissingIndex() {\n        MetaData.Builder mdBuilder = MetaData.builder()\n                .put(indexBuilder(\"testXXX\"))\n                .put(indexBuilder(\"kuku\"));\n        ClusterState state = ClusterState.builder(new ClusterName(\"_name\")).metaData(mdBuilder).build();\n        IndexNameExpressionResolver.Context context = new IndexNameExpressionResolver.Context(state, IndicesOptions.strictExpandOpen());\n\n        IndexNotFoundException infe = expectThrows(IndexNotFoundException.class,\n                () -> indexNameExpressionResolver.concreteIndexNames(context, \"testZZZ\"));\n        assertThat(infe.getMessage(), is(\"no such index\"));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/cluster/metadata/IndexNameExpressionResolverTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":516,"status":"B"},{"authorDate":"2018-04-26 03:22:53","commitOrder":1,"curCode":"    public void testConcreteIndicesIgnoreIndicesOneMissingIndexOtherFound() {\n        MetaData.Builder mdBuilder = MetaData.builder()\n                .put(indexBuilder(\"testXXX\"))\n                .put(indexBuilder(\"kuku\"));\n        ClusterState state = ClusterState.builder(new ClusterName(\"_name\")).metaData(mdBuilder).build();\n        IndexNameExpressionResolver.Context context = new IndexNameExpressionResolver.Context(state, IndicesOptions.lenientExpandOpen());\n\n        assertThat(newHashSet(indexNameExpressionResolver.concreteIndexNames(context, \"testXXX\", \"testZZZ\")), equalTo(newHashSet(\"testXXX\")));\n    }\n","date":"2018-04-26 03:22:53","endLine":536,"groupId":"30933","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testConcreteIndicesIgnoreIndicesOneMissingIndexOtherFound","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/05/30bd617af631ed9d1d8e707dae59c4b00577ec.src","preCode":"    public void testConcreteIndicesIgnoreIndicesOneMissingIndexOtherFound() {\n        MetaData.Builder mdBuilder = MetaData.builder()\n                .put(indexBuilder(\"testXXX\"))\n                .put(indexBuilder(\"kuku\"));\n        ClusterState state = ClusterState.builder(new ClusterName(\"_name\")).metaData(mdBuilder).build();\n        IndexNameExpressionResolver.Context context = new IndexNameExpressionResolver.Context(state, IndicesOptions.lenientExpandOpen());\n\n        assertThat(newHashSet(indexNameExpressionResolver.concreteIndexNames(context, \"testXXX\", \"testZZZ\")), equalTo(newHashSet(\"testXXX\")));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/cluster/metadata/IndexNameExpressionResolverTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":528,"status":"B"}],"commitId":"d74fb9eb4559077e2d20b19a9ed62d9ff825027a","commitMessage":"@@@Opened x-pack ILM code\n","date":"2018-04-26 03:22:53","modifiedFileCount":"0","status":"B","submitter":"Tal Levy"},{"authorTime":"2018-04-26 03:22:53","codes":[{"authorDate":"2018-10-26 01:00:36","commitOrder":2,"curCode":"    public void testConcreteIndicesIgnoreIndicesOneMissingIndex() {\n        MetaData.Builder mdBuilder = MetaData.builder()\n                .put(indexBuilder(\"testXXX\"))\n                .put(indexBuilder(\"kuku\"));\n        ClusterState state = ClusterState.builder(new ClusterName(\"_name\")).metaData(mdBuilder).build();\n        IndexNameExpressionResolver.Context context = new IndexNameExpressionResolver.Context(state, IndicesOptions.strictExpandOpen());\n\n        IndexNotFoundException infe = expectThrows(IndexNotFoundException.class,\n                () -> indexNameExpressionResolver.concreteIndexNames(context, \"testZZZ\"));\n        assertThat(infe.getMessage(), is(\"no such index [testZZZ]\"));\n    }\n","date":"2018-10-26 01:00:36","endLine":534,"groupId":"30933","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testConcreteIndicesIgnoreIndicesOneMissingIndex","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/08/32df7c896d91a0e7d63869d828d912b498e2c2.src","preCode":"    public void testConcreteIndicesIgnoreIndicesOneMissingIndex() {\n        MetaData.Builder mdBuilder = MetaData.builder()\n                .put(indexBuilder(\"testXXX\"))\n                .put(indexBuilder(\"kuku\"));\n        ClusterState state = ClusterState.builder(new ClusterName(\"_name\")).metaData(mdBuilder).build();\n        IndexNameExpressionResolver.Context context = new IndexNameExpressionResolver.Context(state, IndicesOptions.strictExpandOpen());\n\n        IndexNotFoundException infe = expectThrows(IndexNotFoundException.class,\n                () -> indexNameExpressionResolver.concreteIndexNames(context, \"testZZZ\"));\n        assertThat(infe.getMessage(), is(\"no such index\"));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/cluster/metadata/IndexNameExpressionResolverTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":524,"status":"M"},{"authorDate":"2018-04-26 03:22:53","commitOrder":2,"curCode":"    public void testConcreteIndicesIgnoreIndicesOneMissingIndexOtherFound() {\n        MetaData.Builder mdBuilder = MetaData.builder()\n                .put(indexBuilder(\"testXXX\"))\n                .put(indexBuilder(\"kuku\"));\n        ClusterState state = ClusterState.builder(new ClusterName(\"_name\")).metaData(mdBuilder).build();\n        IndexNameExpressionResolver.Context context = new IndexNameExpressionResolver.Context(state, IndicesOptions.lenientExpandOpen());\n\n        assertThat(newHashSet(indexNameExpressionResolver.concreteIndexNames(context, \"testXXX\", \"testZZZ\")), equalTo(newHashSet(\"testXXX\")));\n    }\n","date":"2018-04-26 03:22:53","endLine":536,"groupId":"30933","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testConcreteIndicesIgnoreIndicesOneMissingIndexOtherFound","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/05/30bd617af631ed9d1d8e707dae59c4b00577ec.src","preCode":"    public void testConcreteIndicesIgnoreIndicesOneMissingIndexOtherFound() {\n        MetaData.Builder mdBuilder = MetaData.builder()\n                .put(indexBuilder(\"testXXX\"))\n                .put(indexBuilder(\"kuku\"));\n        ClusterState state = ClusterState.builder(new ClusterName(\"_name\")).metaData(mdBuilder).build();\n        IndexNameExpressionResolver.Context context = new IndexNameExpressionResolver.Context(state, IndicesOptions.lenientExpandOpen());\n\n        assertThat(newHashSet(indexNameExpressionResolver.concreteIndexNames(context, \"testXXX\", \"testZZZ\")), equalTo(newHashSet(\"testXXX\")));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/cluster/metadata/IndexNameExpressionResolverTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":528,"status":"N"}],"commitId":"3e7042832acfffad4de4214ad6491b147f5157b0","commitMessage":"@@@Merge remote-tracking branch 'origin/master' into index-lifecycle\n","date":"2018-10-26 01:00:36","modifiedFileCount":"350","status":"M","submitter":"Lee Hinman"},{"authorTime":"2020-04-01 03:52:01","codes":[{"authorDate":"2020-04-01 03:52:01","commitOrder":3,"curCode":"    public void testConcreteIndicesIgnoreIndicesOneMissingIndex() {\n        Metadata.Builder mdBuilder = Metadata.builder()\n                .put(indexBuilder(\"testXXX\"))\n                .put(indexBuilder(\"kuku\"));\n        ClusterState state = ClusterState.builder(new ClusterName(\"_name\")).metadata(mdBuilder).build();\n        IndexNameExpressionResolver.Context context = new IndexNameExpressionResolver.Context(state, IndicesOptions.strictExpandOpen());\n\n        IndexNotFoundException infe = expectThrows(IndexNotFoundException.class,\n                () -> indexNameExpressionResolver.concreteIndexNames(context, \"testZZZ\"));\n        assertThat(infe.getMessage(), is(\"no such index [testZZZ]\"));\n    }\n","date":"2020-04-01 03:52:01","endLine":698,"groupId":"30933","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testConcreteIndicesIgnoreIndicesOneMissingIndex","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/bb/e0c2bf71209309a8f8fa82ff1ea045183631d8.src","preCode":"    public void testConcreteIndicesIgnoreIndicesOneMissingIndex() {\n        MetaData.Builder mdBuilder = MetaData.builder()\n                .put(indexBuilder(\"testXXX\"))\n                .put(indexBuilder(\"kuku\"));\n        ClusterState state = ClusterState.builder(new ClusterName(\"_name\")).metaData(mdBuilder).build();\n        IndexNameExpressionResolver.Context context = new IndexNameExpressionResolver.Context(state, IndicesOptions.strictExpandOpen());\n\n        IndexNotFoundException infe = expectThrows(IndexNotFoundException.class,\n                () -> indexNameExpressionResolver.concreteIndexNames(context, \"testZZZ\"));\n        assertThat(infe.getMessage(), is(\"no such index [testZZZ]\"));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/cluster/metadata/IndexNameExpressionResolverTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":688,"status":"M"},{"authorDate":"2020-04-01 03:52:01","commitOrder":3,"curCode":"    public void testConcreteIndicesIgnoreIndicesOneMissingIndexOtherFound() {\n        Metadata.Builder mdBuilder = Metadata.builder()\n                .put(indexBuilder(\"testXXX\"))\n                .put(indexBuilder(\"kuku\"));\n        ClusterState state = ClusterState.builder(new ClusterName(\"_name\")).metadata(mdBuilder).build();\n        IndexNameExpressionResolver.Context context = new IndexNameExpressionResolver.Context(state, IndicesOptions.lenientExpandOpen());\n\n        assertThat(newHashSet(indexNameExpressionResolver.concreteIndexNames(context, \"testXXX\", \"testZZZ\")),\n            equalTo(newHashSet(\"testXXX\")));\n    }\n","date":"2020-04-01 03:52:01","endLine":709,"groupId":"30933","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testConcreteIndicesIgnoreIndicesOneMissingIndexOtherFound","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/bb/e0c2bf71209309a8f8fa82ff1ea045183631d8.src","preCode":"    public void testConcreteIndicesIgnoreIndicesOneMissingIndexOtherFound() {\n        MetaData.Builder mdBuilder = MetaData.builder()\n                .put(indexBuilder(\"testXXX\"))\n                .put(indexBuilder(\"kuku\"));\n        ClusterState state = ClusterState.builder(new ClusterName(\"_name\")).metaData(mdBuilder).build();\n        IndexNameExpressionResolver.Context context = new IndexNameExpressionResolver.Context(state, IndicesOptions.lenientExpandOpen());\n\n        assertThat(newHashSet(indexNameExpressionResolver.concreteIndexNames(context, \"testXXX\", \"testZZZ\")),\n            equalTo(newHashSet(\"testXXX\")));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/cluster/metadata/IndexNameExpressionResolverTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":700,"status":"M"}],"commitId":"95a7eed9aa35f47b228e402508709b5bd6703cf4","commitMessage":"@@@Rename MetaData to Metadata in all of the places (#54519)\n\nThis is a simple naming change PR.  to fix the fact that \"metadata\" is a\nsingle English word.  and for too long we have not followed general\nnaming conventions for it. We are also not consistent about it.  for\nexample.  METADATA instead of META_DATA if we were trying to be\nconsistent with MetaData (although METADATA is correct when considered\nin the context of \"metadata\"). This was a simple find and replace across\nthe code base.  only taking a few minutes to fix this naming issue\nforever.","date":"2020-04-01 03:52:01","modifiedFileCount":"1712","status":"M","submitter":"Jason Tedor"},{"authorTime":"2020-10-07 01:13:48","codes":[{"authorDate":"2020-10-07 01:13:48","commitOrder":4,"curCode":"    public void testConcreteIndicesIgnoreIndicesOneMissingIndex() {\n        Metadata.Builder mdBuilder = Metadata.builder()\n                .put(indexBuilder(\"testXXX\"))\n                .put(indexBuilder(\"kuku\"));\n        ClusterState state = ClusterState.builder(new ClusterName(\"_name\")).metadata(mdBuilder).build();\n        IndexNameExpressionResolver.Context context =\n            new IndexNameExpressionResolver.Context(state, IndicesOptions.strictExpandOpen(), false);\n\n        IndexNotFoundException infe = expectThrows(IndexNotFoundException.class,\n                () -> indexNameExpressionResolver.concreteIndexNames(context, \"testZZZ\"));\n        assertThat(infe.getMessage(), is(\"no such index [testZZZ]\"));\n    }\n","date":"2020-10-07 01:13:48","endLine":713,"groupId":"44426","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"testConcreteIndicesIgnoreIndicesOneMissingIndex","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/ad/e851cf15f9d774c9a6b6cc8eff4505feab4ca7.src","preCode":"    public void testConcreteIndicesIgnoreIndicesOneMissingIndex() {\n        Metadata.Builder mdBuilder = Metadata.builder()\n                .put(indexBuilder(\"testXXX\"))\n                .put(indexBuilder(\"kuku\"));\n        ClusterState state = ClusterState.builder(new ClusterName(\"_name\")).metadata(mdBuilder).build();\n        IndexNameExpressionResolver.Context context = new IndexNameExpressionResolver.Context(state, IndicesOptions.strictExpandOpen());\n\n        IndexNotFoundException infe = expectThrows(IndexNotFoundException.class,\n                () -> indexNameExpressionResolver.concreteIndexNames(context, \"testZZZ\"));\n        assertThat(infe.getMessage(), is(\"no such index [testZZZ]\"));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/cluster/metadata/IndexNameExpressionResolverTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":702,"status":"M"},{"authorDate":"2020-10-07 01:13:48","commitOrder":4,"curCode":"    public void testConcreteIndicesIgnoreIndicesOneMissingIndexOtherFound() {\n        Metadata.Builder mdBuilder = Metadata.builder()\n                .put(indexBuilder(\"testXXX\"))\n                .put(indexBuilder(\"kuku\"));\n        ClusterState state = ClusterState.builder(new ClusterName(\"_name\")).metadata(mdBuilder).build();\n        IndexNameExpressionResolver.Context context =\n            new IndexNameExpressionResolver.Context(state, IndicesOptions.lenientExpandOpen(), false);\n\n        assertThat(newHashSet(indexNameExpressionResolver.concreteIndexNames(context, \"testXXX\", \"testZZZ\")),\n            equalTo(newHashSet(\"testXXX\")));\n    }\n","date":"2020-10-07 01:13:48","endLine":725,"groupId":"44426","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"testConcreteIndicesIgnoreIndicesOneMissingIndexOtherFound","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/ad/e851cf15f9d774c9a6b6cc8eff4505feab4ca7.src","preCode":"    public void testConcreteIndicesIgnoreIndicesOneMissingIndexOtherFound() {\n        Metadata.Builder mdBuilder = Metadata.builder()\n                .put(indexBuilder(\"testXXX\"))\n                .put(indexBuilder(\"kuku\"));\n        ClusterState state = ClusterState.builder(new ClusterName(\"_name\")).metadata(mdBuilder).build();\n        IndexNameExpressionResolver.Context context = new IndexNameExpressionResolver.Context(state, IndicesOptions.lenientExpandOpen());\n\n        assertThat(newHashSet(indexNameExpressionResolver.concreteIndexNames(context, \"testXXX\", \"testZZZ\")),\n            equalTo(newHashSet(\"testXXX\")));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/cluster/metadata/IndexNameExpressionResolverTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":715,"status":"M"}],"commitId":"91f4b58bf71249cf81562bd6069c64aafa46591b","commitMessage":"@@@Deprecate REST access to System Indices (#60945)\n\nThis PR adds deprecation warnings when accessing System Indices via the REST layer. At this time.  these warnings are only enabled for Snapshot builds by default.  to allow projects external to Elasticsearch additional time to adjust their access patterns.\n\nDeprecation warnings will be triggered by all REST requests which access registered System Indices.  except for purpose-specific APIs which access System Indices as an implementation detail a few specific APIs which will continue to allow access to system indices by default:\n\n- `GET _cluster/health`\n- `GET {index}/_recovery`\n- `GET _cluster/allocation/explain`\n- `GET _cluster/state`\n- `POST _cluster/reroute`\n- `GET {index}/_stats`\n- `GET {index}/_segments`\n- `GET {index}/_shard_stores`\n- `GET _cat/[indices. aliases. health. recovery. shards. segments]`\n\nDeprecation warnings for accessing system indices take the form:\n```\nthis request accesses system indices: [.some_system_index].  but in a future major version.  direct access to system indices will be prevented by default\n```","date":"2020-10-07 01:13:48","modifiedFileCount":"132","status":"M","submitter":"Gordon Brown"},{"authorTime":"2021-03-02 01:38:53","codes":[{"authorDate":"2021-03-02 01:38:53","commitOrder":5,"curCode":"    public void testConcreteIndicesIgnoreIndicesOneMissingIndex() {\n        Metadata.Builder mdBuilder = Metadata.builder()\n                .put(indexBuilder(\"testXXX\"))\n                .put(indexBuilder(\"kuku\"));\n        ClusterState state = ClusterState.builder(new ClusterName(\"_name\")).metadata(mdBuilder).build();\n        IndexNameExpressionResolver.Context context =\n            new IndexNameExpressionResolver.Context(state, IndicesOptions.strictExpandOpen(), NONE);\n\n        IndexNotFoundException infe = expectThrows(IndexNotFoundException.class,\n                () -> indexNameExpressionResolver.concreteIndexNames(context, \"testZZZ\"));\n        assertThat(infe.getMessage(), is(\"no such index [testZZZ]\"));\n    }\n","date":"2021-03-02 01:38:53","endLine":713,"groupId":"44426","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"testConcreteIndicesIgnoreIndicesOneMissingIndex","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/1f/27ae7a39ac0b0bfc35eba14cfc4bd7eb2cde12.src","preCode":"    public void testConcreteIndicesIgnoreIndicesOneMissingIndex() {\n        Metadata.Builder mdBuilder = Metadata.builder()\n                .put(indexBuilder(\"testXXX\"))\n                .put(indexBuilder(\"kuku\"));\n        ClusterState state = ClusterState.builder(new ClusterName(\"_name\")).metadata(mdBuilder).build();\n        IndexNameExpressionResolver.Context context =\n            new IndexNameExpressionResolver.Context(state, IndicesOptions.strictExpandOpen(), false);\n\n        IndexNotFoundException infe = expectThrows(IndexNotFoundException.class,\n                () -> indexNameExpressionResolver.concreteIndexNames(context, \"testZZZ\"));\n        assertThat(infe.getMessage(), is(\"no such index [testZZZ]\"));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/cluster/metadata/IndexNameExpressionResolverTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":702,"status":"M"},{"authorDate":"2021-03-02 01:38:53","commitOrder":5,"curCode":"    public void testConcreteIndicesIgnoreIndicesOneMissingIndexOtherFound() {\n        Metadata.Builder mdBuilder = Metadata.builder()\n                .put(indexBuilder(\"testXXX\"))\n                .put(indexBuilder(\"kuku\"));\n        ClusterState state = ClusterState.builder(new ClusterName(\"_name\")).metadata(mdBuilder).build();\n        IndexNameExpressionResolver.Context context =\n            new IndexNameExpressionResolver.Context(state, IndicesOptions.lenientExpandOpen(), NONE);\n\n        assertThat(newHashSet(indexNameExpressionResolver.concreteIndexNames(context, \"testXXX\", \"testZZZ\")),\n            equalTo(newHashSet(\"testXXX\")));\n    }\n","date":"2021-03-02 01:38:53","endLine":725,"groupId":"44426","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"testConcreteIndicesIgnoreIndicesOneMissingIndexOtherFound","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/1f/27ae7a39ac0b0bfc35eba14cfc4bd7eb2cde12.src","preCode":"    public void testConcreteIndicesIgnoreIndicesOneMissingIndexOtherFound() {\n        Metadata.Builder mdBuilder = Metadata.builder()\n                .put(indexBuilder(\"testXXX\"))\n                .put(indexBuilder(\"kuku\"));\n        ClusterState state = ClusterState.builder(new ClusterName(\"_name\")).metadata(mdBuilder).build();\n        IndexNameExpressionResolver.Context context =\n            new IndexNameExpressionResolver.Context(state, IndicesOptions.lenientExpandOpen(), false);\n\n        assertThat(newHashSet(indexNameExpressionResolver.concreteIndexNames(context, \"testXXX\", \"testZZZ\")),\n            equalTo(newHashSet(\"testXXX\")));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/cluster/metadata/IndexNameExpressionResolverTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":715,"status":"M"}],"commitId":"1487a5a991e78dc17eebb349b105409b51b63b36","commitMessage":"@@@Introduce system index types including external (#68919)\n\nThis commit introduces system index types that will be used to\ndifferentiate behavior. Previously system indices were all treated the\nsame regardless of whether they belonged to Elasticsearch.  a stack\ncomponent.  or one of our solutions. Upon further discussion and\nanalysis this decision was not in the best interest of the various\nteams and instead a new type of system index was needed. These system\nindices will be referred to as external system indices. Within external\nsystem indices.  an option exists for these indices to be managed by\nElasticsearch or to be managed by the external product.\n\nIn order to represent this within Elasticsearch.  each system index will\nhave a type and this type will be used to control behavior.\n\nCloses #67383","date":"2021-03-02 01:38:53","modifiedFileCount":"87","status":"M","submitter":"Jay Modi"},{"authorTime":"2021-06-25 02:13:57","codes":[{"authorDate":"2021-06-25 02:13:57","commitOrder":6,"curCode":"    public void testConcreteIndicesIgnoreIndicesOneMissingIndex() {\n        Metadata.Builder mdBuilder = Metadata.builder()\n                .put(indexBuilder(\"testXXX\"))\n                .put(indexBuilder(\"kuku\"));\n        ClusterState state = ClusterState.builder(new ClusterName(\"_name\")).metadata(mdBuilder).build();\n        IndexNameExpressionResolver.Context context =\n            new IndexNameExpressionResolver.Context(state, IndicesOptions.strictExpandOpen(), SystemIndexAccessLevel.NONE);\n\n        IndexNotFoundException infe = expectThrows(IndexNotFoundException.class,\n                () -> indexNameExpressionResolver.concreteIndexNames(context, \"testZZZ\"));\n        assertThat(infe.getMessage(), is(\"no such index [testZZZ]\"));\n    }\n","date":"2021-06-25 02:13:57","endLine":728,"groupId":"101928","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"testConcreteIndicesIgnoreIndicesOneMissingIndex","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/c1/c9332a0ec071e8eb49201a8b9c88d0a8881bff.src","preCode":"    public void testConcreteIndicesIgnoreIndicesOneMissingIndex() {\n        Metadata.Builder mdBuilder = Metadata.builder()\n                .put(indexBuilder(\"testXXX\"))\n                .put(indexBuilder(\"kuku\"));\n        ClusterState state = ClusterState.builder(new ClusterName(\"_name\")).metadata(mdBuilder).build();\n        IndexNameExpressionResolver.Context context =\n            new IndexNameExpressionResolver.Context(state, IndicesOptions.strictExpandOpen(), NONE);\n\n        IndexNotFoundException infe = expectThrows(IndexNotFoundException.class,\n                () -> indexNameExpressionResolver.concreteIndexNames(context, \"testZZZ\"));\n        assertThat(infe.getMessage(), is(\"no such index [testZZZ]\"));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/cluster/metadata/IndexNameExpressionResolverTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":717,"status":"M"},{"authorDate":"2021-06-25 02:13:57","commitOrder":6,"curCode":"    public void testConcreteIndicesIgnoreIndicesOneMissingIndexOtherFound() {\n        Metadata.Builder mdBuilder = Metadata.builder()\n                .put(indexBuilder(\"testXXX\"))\n                .put(indexBuilder(\"kuku\"));\n        ClusterState state = ClusterState.builder(new ClusterName(\"_name\")).metadata(mdBuilder).build();\n        IndexNameExpressionResolver.Context context =\n            new IndexNameExpressionResolver.Context(state, IndicesOptions.lenientExpandOpen(), SystemIndexAccessLevel.NONE);\n\n        assertThat(newHashSet(indexNameExpressionResolver.concreteIndexNames(context, \"testXXX\", \"testZZZ\")),\n            equalTo(newHashSet(\"testXXX\")));\n    }\n","date":"2021-06-25 02:13:57","endLine":740,"groupId":"101928","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"testConcreteIndicesIgnoreIndicesOneMissingIndexOtherFound","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/c1/c9332a0ec071e8eb49201a8b9c88d0a8881bff.src","preCode":"    public void testConcreteIndicesIgnoreIndicesOneMissingIndexOtherFound() {\n        Metadata.Builder mdBuilder = Metadata.builder()\n                .put(indexBuilder(\"testXXX\"))\n                .put(indexBuilder(\"kuku\"));\n        ClusterState state = ClusterState.builder(new ClusterName(\"_name\")).metadata(mdBuilder).build();\n        IndexNameExpressionResolver.Context context =\n            new IndexNameExpressionResolver.Context(state, IndicesOptions.lenientExpandOpen(), NONE);\n\n        assertThat(newHashSet(indexNameExpressionResolver.concreteIndexNames(context, \"testXXX\", \"testZZZ\")),\n            equalTo(newHashSet(\"testXXX\")));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/cluster/metadata/IndexNameExpressionResolverTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":730,"status":"M"}],"commitId":"d4afd6a216ff786da2887afe388d9638816927ed","commitMessage":"@@@Protect newly introduced system indices fully (#74186)\n\nThis change updates the way we handle net new system indices.  which are\nthose that have been newly introduced and do not require any BWC\nguarantees around non-system access. These indices will not be included\nin wildcard expansions for user searches and operations. Direct access\nto these indices will also not be allowed for user searches.\n\nThe first index of this type is the GeoIp index.  which this change sets\nthe new flag on.\n\nCloses #72572","date":"2021-06-25 02:13:57","modifiedFileCount":"17","status":"M","submitter":"Jay Modi"}]
