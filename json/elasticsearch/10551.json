[{"authorTime":"2018-04-26 03:22:53","codes":[{"authorDate":"2018-04-26 03:22:53","commitOrder":1,"curCode":"    public void testDefaults() throws Exception {\n        DateIndexNameProcessor.Factory factory = new DateIndexNameProcessor.Factory();\n        Map<String, Object> config = new HashMap<>();\n        config.put(\"field\", \"_field\");\n        config.put(\"date_rounding\", \"y\");\n\n        DateIndexNameProcessor processor = factory.create(null, null, config);\n        assertThat(processor.getDateFormats().size(), Matchers.equalTo(1));\n        assertThat(processor.getField(), Matchers.equalTo(\"_field\"));\n        assertThat(processor.getIndexNamePrefix(), Matchers.equalTo(\"\"));\n        assertThat(processor.getDateRounding(), Matchers.equalTo(\"y\"));\n        assertThat(processor.getIndexNameFormat(), Matchers.equalTo(\"yyyy-MM-dd\"));\n        assertThat(processor.getTimezone(), Matchers.equalTo(DateTimeZone.UTC));\n    }\n","date":"2018-04-26 03:22:53","endLine":46,"groupId":"25730","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testDefaults","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/3b/9e2121c95112f256354fec27f292c3b7ae391f.src","preCode":"    public void testDefaults() throws Exception {\n        DateIndexNameProcessor.Factory factory = new DateIndexNameProcessor.Factory();\n        Map<String, Object> config = new HashMap<>();\n        config.put(\"field\", \"_field\");\n        config.put(\"date_rounding\", \"y\");\n\n        DateIndexNameProcessor processor = factory.create(null, null, config);\n        assertThat(processor.getDateFormats().size(), Matchers.equalTo(1));\n        assertThat(processor.getField(), Matchers.equalTo(\"_field\"));\n        assertThat(processor.getIndexNamePrefix(), Matchers.equalTo(\"\"));\n        assertThat(processor.getDateRounding(), Matchers.equalTo(\"y\"));\n        assertThat(processor.getIndexNameFormat(), Matchers.equalTo(\"yyyy-MM-dd\"));\n        assertThat(processor.getTimezone(), Matchers.equalTo(DateTimeZone.UTC));\n    }\n","realPath":"modules/ingest-common/src/test/java/org/elasticsearch/ingest/common/DateIndexNameFactoryTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":33,"status":"B"},{"authorDate":"2018-04-26 03:22:53","commitOrder":1,"curCode":"    public void testSpecifyOptionalSettings() throws Exception {\n        DateIndexNameProcessor.Factory factory = new DateIndexNameProcessor.Factory();\n        Map<String, Object> config = new HashMap<>();\n        config.put(\"field\", \"_field\");\n        config.put(\"index_name_prefix\", \"_prefix\");\n        config.put(\"date_rounding\", \"y\");\n        config.put(\"date_formats\", Arrays.asList(\"UNIX\", \"UNIX_MS\"));\n\n        DateIndexNameProcessor processor = factory.create(null, null, config);\n        assertThat(processor.getDateFormats().size(), Matchers.equalTo(2));\n\n        config = new HashMap<>();\n        config.put(\"field\", \"_field\");\n        config.put(\"index_name_prefix\", \"_prefix\");\n        config.put(\"date_rounding\", \"y\");\n        config.put(\"index_name_format\", \"yyyyMMdd\");\n\n        processor = factory.create(null, null, config);\n        assertThat(processor.getIndexNameFormat(), Matchers.equalTo(\"yyyyMMdd\"));\n\n        config = new HashMap<>();\n        config.put(\"field\", \"_field\");\n        config.put(\"index_name_prefix\", \"_prefix\");\n        config.put(\"date_rounding\", \"y\");\n        config.put(\"timezone\", \"+02:00\");\n\n        processor = factory.create(null, null, config);\n        assertThat(processor.getTimezone(), Matchers.equalTo(DateTimeZone.forOffsetHours(2)));\n\n        config = new HashMap<>();\n        config.put(\"field\", \"_field\");\n        config.put(\"index_name_prefix\", \"_prefix\");\n        config.put(\"date_rounding\", \"y\");\n\n        processor = factory.create(null, null, config);\n        assertThat(processor.getIndexNamePrefix(), Matchers.equalTo(\"_prefix\"));\n    }\n","date":"2018-04-26 03:22:53","endLine":84,"groupId":"46570","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testSpecifyOptionalSettings","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/3b/9e2121c95112f256354fec27f292c3b7ae391f.src","preCode":"    public void testSpecifyOptionalSettings() throws Exception {\n        DateIndexNameProcessor.Factory factory = new DateIndexNameProcessor.Factory();\n        Map<String, Object> config = new HashMap<>();\n        config.put(\"field\", \"_field\");\n        config.put(\"index_name_prefix\", \"_prefix\");\n        config.put(\"date_rounding\", \"y\");\n        config.put(\"date_formats\", Arrays.asList(\"UNIX\", \"UNIX_MS\"));\n\n        DateIndexNameProcessor processor = factory.create(null, null, config);\n        assertThat(processor.getDateFormats().size(), Matchers.equalTo(2));\n\n        config = new HashMap<>();\n        config.put(\"field\", \"_field\");\n        config.put(\"index_name_prefix\", \"_prefix\");\n        config.put(\"date_rounding\", \"y\");\n        config.put(\"index_name_format\", \"yyyyMMdd\");\n\n        processor = factory.create(null, null, config);\n        assertThat(processor.getIndexNameFormat(), Matchers.equalTo(\"yyyyMMdd\"));\n\n        config = new HashMap<>();\n        config.put(\"field\", \"_field\");\n        config.put(\"index_name_prefix\", \"_prefix\");\n        config.put(\"date_rounding\", \"y\");\n        config.put(\"timezone\", \"+02:00\");\n\n        processor = factory.create(null, null, config);\n        assertThat(processor.getTimezone(), Matchers.equalTo(DateTimeZone.forOffsetHours(2)));\n\n        config = new HashMap<>();\n        config.put(\"field\", \"_field\");\n        config.put(\"index_name_prefix\", \"_prefix\");\n        config.put(\"date_rounding\", \"y\");\n\n        processor = factory.create(null, null, config);\n        assertThat(processor.getIndexNamePrefix(), Matchers.equalTo(\"_prefix\"));\n    }\n","realPath":"modules/ingest-common/src/test/java/org/elasticsearch/ingest/common/DateIndexNameFactoryTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":48,"status":"B"}],"commitId":"d74fb9eb4559077e2d20b19a9ed62d9ff825027a","commitMessage":"@@@Opened x-pack ILM code\n","date":"2018-04-26 03:22:53","modifiedFileCount":"0","status":"B","submitter":"Tal Levy"},{"authorTime":"2018-07-12 15:57:39","codes":[{"authorDate":"2018-07-12 15:57:39","commitOrder":2,"curCode":"    public void testDefaults() throws Exception {\n        DateIndexNameProcessor.Factory factory = new DateIndexNameProcessor.Factory(TestTemplateService.instance());\n        Map<String, Object> config = new HashMap<>();\n        config.put(\"field\", \"_field\");\n        config.put(\"date_rounding\", \"y\");\n\n        DateIndexNameProcessor processor = factory.create(null, null, config);\n        assertThat(processor.getDateFormats().size(), Matchers.equalTo(1));\n        assertThat(processor.getField(), Matchers.equalTo(\"_field\"));\n        assertThat(processor.getIndexNamePrefixTemplate().newInstance(Collections.emptyMap()).execute(), Matchers.equalTo(\"\"));\n        assertThat(processor.getDateRoundingTemplate().newInstance(Collections.emptyMap()).execute(), Matchers.equalTo(\"y\"));\n        assertThat(processor.getIndexNameFormatTemplate().newInstance(Collections.emptyMap()).execute(), Matchers.equalTo(\"yyyy-MM-dd\"));\n        assertThat(processor.getTimezone(), Matchers.equalTo(DateTimeZone.UTC));\n    }\n","date":"2018-07-12 15:57:39","endLine":48,"groupId":"25730","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testDefaults","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/27/35cf55776b073a624e23853340d832f6f0ab60.src","preCode":"    public void testDefaults() throws Exception {\n        DateIndexNameProcessor.Factory factory = new DateIndexNameProcessor.Factory();\n        Map<String, Object> config = new HashMap<>();\n        config.put(\"field\", \"_field\");\n        config.put(\"date_rounding\", \"y\");\n\n        DateIndexNameProcessor processor = factory.create(null, null, config);\n        assertThat(processor.getDateFormats().size(), Matchers.equalTo(1));\n        assertThat(processor.getField(), Matchers.equalTo(\"_field\"));\n        assertThat(processor.getIndexNamePrefix(), Matchers.equalTo(\"\"));\n        assertThat(processor.getDateRounding(), Matchers.equalTo(\"y\"));\n        assertThat(processor.getIndexNameFormat(), Matchers.equalTo(\"yyyy-MM-dd\"));\n        assertThat(processor.getTimezone(), Matchers.equalTo(DateTimeZone.UTC));\n    }\n","realPath":"modules/ingest-common/src/test/java/org/elasticsearch/ingest/common/DateIndexNameFactoryTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":35,"status":"M"},{"authorDate":"2018-07-12 15:57:39","commitOrder":2,"curCode":"    public void testSpecifyOptionalSettings() throws Exception {\n        DateIndexNameProcessor.Factory factory = new DateIndexNameProcessor.Factory(TestTemplateService.instance());\n        Map<String, Object> config = new HashMap<>();\n        config.put(\"field\", \"_field\");\n        config.put(\"index_name_prefix\", \"_prefix\");\n        config.put(\"date_rounding\", \"y\");\n        config.put(\"date_formats\", Arrays.asList(\"UNIX\", \"UNIX_MS\"));\n\n        DateIndexNameProcessor processor = factory.create(null, null, config);\n        assertThat(processor.getDateFormats().size(), Matchers.equalTo(2));\n\n        config = new HashMap<>();\n        config.put(\"field\", \"_field\");\n        config.put(\"index_name_prefix\", \"_prefix\");\n        config.put(\"date_rounding\", \"y\");\n        config.put(\"index_name_format\", \"yyyyMMdd\");\n\n        processor = factory.create(null, null, config);\n        assertThat(processor.getIndexNameFormatTemplate().newInstance(Collections.emptyMap()).execute(), Matchers.equalTo(\"yyyyMMdd\"));\n\n        config = new HashMap<>();\n        config.put(\"field\", \"_field\");\n        config.put(\"index_name_prefix\", \"_prefix\");\n        config.put(\"date_rounding\", \"y\");\n        config.put(\"timezone\", \"+02:00\");\n\n        processor = factory.create(null, null, config);\n        assertThat(processor.getTimezone(), Matchers.equalTo(DateTimeZone.forOffsetHours(2)));\n\n        config = new HashMap<>();\n        config.put(\"field\", \"_field\");\n        config.put(\"index_name_prefix\", \"_prefix\");\n        config.put(\"date_rounding\", \"y\");\n\n        processor = factory.create(null, null, config);\n        assertThat(processor.getIndexNamePrefixTemplate().newInstance(Collections.emptyMap()).execute(), Matchers.equalTo(\"_prefix\"));\n    }\n","date":"2018-07-12 15:57:39","endLine":86,"groupId":"46570","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testSpecifyOptionalSettings","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/27/35cf55776b073a624e23853340d832f6f0ab60.src","preCode":"    public void testSpecifyOptionalSettings() throws Exception {\n        DateIndexNameProcessor.Factory factory = new DateIndexNameProcessor.Factory();\n        Map<String, Object> config = new HashMap<>();\n        config.put(\"field\", \"_field\");\n        config.put(\"index_name_prefix\", \"_prefix\");\n        config.put(\"date_rounding\", \"y\");\n        config.put(\"date_formats\", Arrays.asList(\"UNIX\", \"UNIX_MS\"));\n\n        DateIndexNameProcessor processor = factory.create(null, null, config);\n        assertThat(processor.getDateFormats().size(), Matchers.equalTo(2));\n\n        config = new HashMap<>();\n        config.put(\"field\", \"_field\");\n        config.put(\"index_name_prefix\", \"_prefix\");\n        config.put(\"date_rounding\", \"y\");\n        config.put(\"index_name_format\", \"yyyyMMdd\");\n\n        processor = factory.create(null, null, config);\n        assertThat(processor.getIndexNameFormat(), Matchers.equalTo(\"yyyyMMdd\"));\n\n        config = new HashMap<>();\n        config.put(\"field\", \"_field\");\n        config.put(\"index_name_prefix\", \"_prefix\");\n        config.put(\"date_rounding\", \"y\");\n        config.put(\"timezone\", \"+02:00\");\n\n        processor = factory.create(null, null, config);\n        assertThat(processor.getTimezone(), Matchers.equalTo(DateTimeZone.forOffsetHours(2)));\n\n        config = new HashMap<>();\n        config.put(\"field\", \"_field\");\n        config.put(\"index_name_prefix\", \"_prefix\");\n        config.put(\"date_rounding\", \"y\");\n\n        processor = factory.create(null, null, config);\n        assertThat(processor.getIndexNamePrefix(), Matchers.equalTo(\"_prefix\"));\n    }\n","realPath":"modules/ingest-common/src/test/java/org/elasticsearch/ingest/common/DateIndexNameFactoryTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":50,"status":"M"}],"commitId":"4192f387b41fd02114bae3dba743f701e8bf61e2","commitMessage":"@@@Merge branch 'master' into index-lifecycle\n","date":"2018-07-12 15:57:39","modifiedFileCount":"60","status":"M","submitter":"Colin Goodheart-Smithe"},{"authorTime":"2019-02-01 17:15:18","codes":[{"authorDate":"2019-02-01 17:15:18","commitOrder":3,"curCode":"    public void testDefaults() throws Exception {\n        DateIndexNameProcessor.Factory factory = new DateIndexNameProcessor.Factory(TestTemplateService.instance());\n        Map<String, Object> config = new HashMap<>();\n        config.put(\"field\", \"_field\");\n        config.put(\"date_rounding\", \"y\");\n\n        DateIndexNameProcessor processor = factory.create(null, null, config);\n        assertThat(processor.getDateFormats().size(), Matchers.equalTo(1));\n        assertThat(processor.getField(), Matchers.equalTo(\"_field\"));\n        assertThat(processor.getIndexNamePrefixTemplate().newInstance(Collections.emptyMap()).execute(), Matchers.equalTo(\"\"));\n        assertThat(processor.getDateRoundingTemplate().newInstance(Collections.emptyMap()).execute(), Matchers.equalTo(\"y\"));\n        assertThat(processor.getIndexNameFormatTemplate().newInstance(Collections.emptyMap()).execute(), Matchers.equalTo(\"yyyy-MM-dd\"));\n        assertThat(processor.getTimezone(), Matchers.equalTo(ZoneOffset.UTC));\n    }\n","date":"2019-02-01 17:15:18","endLine":48,"groupId":"25730","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testDefaults","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/67/027f6ab6784def98b5f51180f790bb0b126a17.src","preCode":"    public void testDefaults() throws Exception {\n        DateIndexNameProcessor.Factory factory = new DateIndexNameProcessor.Factory(TestTemplateService.instance());\n        Map<String, Object> config = new HashMap<>();\n        config.put(\"field\", \"_field\");\n        config.put(\"date_rounding\", \"y\");\n\n        DateIndexNameProcessor processor = factory.create(null, null, config);\n        assertThat(processor.getDateFormats().size(), Matchers.equalTo(1));\n        assertThat(processor.getField(), Matchers.equalTo(\"_field\"));\n        assertThat(processor.getIndexNamePrefixTemplate().newInstance(Collections.emptyMap()).execute(), Matchers.equalTo(\"\"));\n        assertThat(processor.getDateRoundingTemplate().newInstance(Collections.emptyMap()).execute(), Matchers.equalTo(\"y\"));\n        assertThat(processor.getIndexNameFormatTemplate().newInstance(Collections.emptyMap()).execute(), Matchers.equalTo(\"yyyy-MM-dd\"));\n        assertThat(processor.getTimezone(), Matchers.equalTo(DateTimeZone.UTC));\n    }\n","realPath":"modules/ingest-common/src/test/java/org/elasticsearch/ingest/common/DateIndexNameFactoryTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":35,"status":"M"},{"authorDate":"2019-02-01 17:15:18","commitOrder":3,"curCode":"    public void testSpecifyOptionalSettings() throws Exception {\n        DateIndexNameProcessor.Factory factory = new DateIndexNameProcessor.Factory(TestTemplateService.instance());\n        Map<String, Object> config = new HashMap<>();\n        config.put(\"field\", \"_field\");\n        config.put(\"index_name_prefix\", \"_prefix\");\n        config.put(\"date_rounding\", \"y\");\n        config.put(\"date_formats\", Arrays.asList(\"UNIX\", \"UNIX_MS\"));\n\n        DateIndexNameProcessor processor = factory.create(null, null, config);\n        assertThat(processor.getDateFormats().size(), Matchers.equalTo(2));\n\n        config = new HashMap<>();\n        config.put(\"field\", \"_field\");\n        config.put(\"index_name_prefix\", \"_prefix\");\n        config.put(\"date_rounding\", \"y\");\n        config.put(\"index_name_format\", \"yyyyMMdd\");\n\n        processor = factory.create(null, null, config);\n        assertThat(processor.getIndexNameFormatTemplate().newInstance(Collections.emptyMap()).execute(), Matchers.equalTo(\"yyyyMMdd\"));\n\n        config = new HashMap<>();\n        config.put(\"field\", \"_field\");\n        config.put(\"index_name_prefix\", \"_prefix\");\n        config.put(\"date_rounding\", \"y\");\n        config.put(\"timezone\", \"+02:00\");\n\n        processor = factory.create(null, null, config);\n        assertThat(processor.getTimezone(), Matchers.equalTo(ZoneOffset.ofHours(2)));\n\n        config = new HashMap<>();\n        config.put(\"field\", \"_field\");\n        config.put(\"index_name_prefix\", \"_prefix\");\n        config.put(\"date_rounding\", \"y\");\n\n        processor = factory.create(null, null, config);\n        assertThat(processor.getIndexNamePrefixTemplate().newInstance(Collections.emptyMap()).execute(), Matchers.equalTo(\"_prefix\"));\n    }\n","date":"2019-02-01 17:15:18","endLine":86,"groupId":"46570","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testSpecifyOptionalSettings","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/67/027f6ab6784def98b5f51180f790bb0b126a17.src","preCode":"    public void testSpecifyOptionalSettings() throws Exception {\n        DateIndexNameProcessor.Factory factory = new DateIndexNameProcessor.Factory(TestTemplateService.instance());\n        Map<String, Object> config = new HashMap<>();\n        config.put(\"field\", \"_field\");\n        config.put(\"index_name_prefix\", \"_prefix\");\n        config.put(\"date_rounding\", \"y\");\n        config.put(\"date_formats\", Arrays.asList(\"UNIX\", \"UNIX_MS\"));\n\n        DateIndexNameProcessor processor = factory.create(null, null, config);\n        assertThat(processor.getDateFormats().size(), Matchers.equalTo(2));\n\n        config = new HashMap<>();\n        config.put(\"field\", \"_field\");\n        config.put(\"index_name_prefix\", \"_prefix\");\n        config.put(\"date_rounding\", \"y\");\n        config.put(\"index_name_format\", \"yyyyMMdd\");\n\n        processor = factory.create(null, null, config);\n        assertThat(processor.getIndexNameFormatTemplate().newInstance(Collections.emptyMap()).execute(), Matchers.equalTo(\"yyyyMMdd\"));\n\n        config = new HashMap<>();\n        config.put(\"field\", \"_field\");\n        config.put(\"index_name_prefix\", \"_prefix\");\n        config.put(\"date_rounding\", \"y\");\n        config.put(\"timezone\", \"+02:00\");\n\n        processor = factory.create(null, null, config);\n        assertThat(processor.getTimezone(), Matchers.equalTo(DateTimeZone.forOffsetHours(2)));\n\n        config = new HashMap<>();\n        config.put(\"field\", \"_field\");\n        config.put(\"index_name_prefix\", \"_prefix\");\n        config.put(\"date_rounding\", \"y\");\n\n        processor = factory.create(null, null, config);\n        assertThat(processor.getIndexNamePrefixTemplate().newInstance(Collections.emptyMap()).execute(), Matchers.equalTo(\"_prefix\"));\n    }\n","realPath":"modules/ingest-common/src/test/java/org/elasticsearch/ingest/common/DateIndexNameFactoryTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":50,"status":"M"}],"commitId":"6c5a7387af086381da34db6103fc711dd8350b14","commitMessage":"@@@Replace joda time in ingest-common module (#38088)\n\nThis commit fully replaces any remaining joda time time classes with\njava time implementations.\n\nRelates #27330\n","date":"2019-02-01 17:15:18","modifiedFileCount":"8","status":"M","submitter":"Alexander Reelsen"},{"authorTime":"2020-06-16 05:08:29","codes":[{"authorDate":"2020-06-16 05:08:29","commitOrder":4,"curCode":"    public void testDefaults() throws Exception {\n        DateIndexNameProcessor.Factory factory = new DateIndexNameProcessor.Factory(TestTemplateService.instance());\n        Map<String, Object> config = new HashMap<>();\n        config.put(\"field\", \"_field\");\n        config.put(\"date_rounding\", \"y\");\n\n        DateIndexNameProcessor processor = factory.create(null, null, null, config);\n        assertThat(processor.getDateFormats().size(), Matchers.equalTo(1));\n        assertThat(processor.getField(), Matchers.equalTo(\"_field\"));\n        assertThat(processor.getIndexNamePrefixTemplate().newInstance(Collections.emptyMap()).execute(), Matchers.equalTo(\"\"));\n        assertThat(processor.getDateRoundingTemplate().newInstance(Collections.emptyMap()).execute(), Matchers.equalTo(\"y\"));\n        assertThat(processor.getIndexNameFormatTemplate().newInstance(Collections.emptyMap()).execute(), Matchers.equalTo(\"yyyy-MM-dd\"));\n        assertThat(processor.getTimezone(), Matchers.equalTo(ZoneOffset.UTC));\n    }\n","date":"2020-06-16 05:08:29","endLine":48,"groupId":"10551","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"testDefaults","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/cd/3e597f21a7f0a0ded47d714be8e7f1dc72398f.src","preCode":"    public void testDefaults() throws Exception {\n        DateIndexNameProcessor.Factory factory = new DateIndexNameProcessor.Factory(TestTemplateService.instance());\n        Map<String, Object> config = new HashMap<>();\n        config.put(\"field\", \"_field\");\n        config.put(\"date_rounding\", \"y\");\n\n        DateIndexNameProcessor processor = factory.create(null, null, config);\n        assertThat(processor.getDateFormats().size(), Matchers.equalTo(1));\n        assertThat(processor.getField(), Matchers.equalTo(\"_field\"));\n        assertThat(processor.getIndexNamePrefixTemplate().newInstance(Collections.emptyMap()).execute(), Matchers.equalTo(\"\"));\n        assertThat(processor.getDateRoundingTemplate().newInstance(Collections.emptyMap()).execute(), Matchers.equalTo(\"y\"));\n        assertThat(processor.getIndexNameFormatTemplate().newInstance(Collections.emptyMap()).execute(), Matchers.equalTo(\"yyyy-MM-dd\"));\n        assertThat(processor.getTimezone(), Matchers.equalTo(ZoneOffset.UTC));\n    }\n","realPath":"modules/ingest-common/src/test/java/org/elasticsearch/ingest/common/DateIndexNameFactoryTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":35,"status":"M"},{"authorDate":"2020-06-16 05:08:29","commitOrder":4,"curCode":"    public void testSpecifyOptionalSettings() throws Exception {\n        DateIndexNameProcessor.Factory factory = new DateIndexNameProcessor.Factory(TestTemplateService.instance());\n        Map<String, Object> config = new HashMap<>();\n        config.put(\"field\", \"_field\");\n        config.put(\"index_name_prefix\", \"_prefix\");\n        config.put(\"date_rounding\", \"y\");\n        config.put(\"date_formats\", Arrays.asList(\"UNIX\", \"UNIX_MS\"));\n\n        DateIndexNameProcessor processor = factory.create(null, null, null, config);\n        assertThat(processor.getDateFormats().size(), Matchers.equalTo(2));\n\n        config = new HashMap<>();\n        config.put(\"field\", \"_field\");\n        config.put(\"index_name_prefix\", \"_prefix\");\n        config.put(\"date_rounding\", \"y\");\n        config.put(\"index_name_format\", \"yyyyMMdd\");\n\n        processor = factory.create(null, null, null, config);\n        assertThat(processor.getIndexNameFormatTemplate().newInstance(Collections.emptyMap()).execute(), Matchers.equalTo(\"yyyyMMdd\"));\n\n        config = new HashMap<>();\n        config.put(\"field\", \"_field\");\n        config.put(\"index_name_prefix\", \"_prefix\");\n        config.put(\"date_rounding\", \"y\");\n        config.put(\"timezone\", \"+02:00\");\n\n        processor = factory.create(null, null, null, config);\n        assertThat(processor.getTimezone(), Matchers.equalTo(ZoneOffset.ofHours(2)));\n\n        config = new HashMap<>();\n        config.put(\"field\", \"_field\");\n        config.put(\"index_name_prefix\", \"_prefix\");\n        config.put(\"date_rounding\", \"y\");\n\n        processor = factory.create(null, null, null, config);\n        assertThat(processor.getIndexNamePrefixTemplate().newInstance(Collections.emptyMap()).execute(), Matchers.equalTo(\"_prefix\"));\n    }\n","date":"2020-06-16 05:08:29","endLine":86,"groupId":"10551","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"testSpecifyOptionalSettings","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/cd/3e597f21a7f0a0ded47d714be8e7f1dc72398f.src","preCode":"    public void testSpecifyOptionalSettings() throws Exception {\n        DateIndexNameProcessor.Factory factory = new DateIndexNameProcessor.Factory(TestTemplateService.instance());\n        Map<String, Object> config = new HashMap<>();\n        config.put(\"field\", \"_field\");\n        config.put(\"index_name_prefix\", \"_prefix\");\n        config.put(\"date_rounding\", \"y\");\n        config.put(\"date_formats\", Arrays.asList(\"UNIX\", \"UNIX_MS\"));\n\n        DateIndexNameProcessor processor = factory.create(null, null, config);\n        assertThat(processor.getDateFormats().size(), Matchers.equalTo(2));\n\n        config = new HashMap<>();\n        config.put(\"field\", \"_field\");\n        config.put(\"index_name_prefix\", \"_prefix\");\n        config.put(\"date_rounding\", \"y\");\n        config.put(\"index_name_format\", \"yyyyMMdd\");\n\n        processor = factory.create(null, null, config);\n        assertThat(processor.getIndexNameFormatTemplate().newInstance(Collections.emptyMap()).execute(), Matchers.equalTo(\"yyyyMMdd\"));\n\n        config = new HashMap<>();\n        config.put(\"field\", \"_field\");\n        config.put(\"index_name_prefix\", \"_prefix\");\n        config.put(\"date_rounding\", \"y\");\n        config.put(\"timezone\", \"+02:00\");\n\n        processor = factory.create(null, null, config);\n        assertThat(processor.getTimezone(), Matchers.equalTo(ZoneOffset.ofHours(2)));\n\n        config = new HashMap<>();\n        config.put(\"field\", \"_field\");\n        config.put(\"index_name_prefix\", \"_prefix\");\n        config.put(\"date_rounding\", \"y\");\n\n        processor = factory.create(null, null, config);\n        assertThat(processor.getIndexNamePrefixTemplate().newInstance(Collections.emptyMap()).execute(), Matchers.equalTo(\"_prefix\"));\n    }\n","realPath":"modules/ingest-common/src/test/java/org/elasticsearch/ingest/common/DateIndexNameFactoryTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":50,"status":"M"}],"commitId":"69a6a18d8dc3f95001cfe6f55c1451ac616f7e84","commitMessage":"@@@Add optional description parameter to ingest processors. (#57906)\n\nThis commit adds an optional field.  `description`.  to all ingest processors\nso that users can explain the purpose of the specific processor instance.\n\nCloses #56000.","date":"2020-06-16 05:08:29","modifiedFileCount":"125","status":"M","submitter":"Tal Levy"}]
