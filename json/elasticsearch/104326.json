[{"authorTime":"2018-04-26 03:22:53","codes":[{"authorDate":"2018-04-26 03:22:53","commitOrder":1,"curCode":"    public void testActions() {\n\n        \r\n        \r\n        \r\n        \r\n\n        \r\n        client.prepareGet(\"idx\", \"type\", \"id\").execute(new AssertingActionListener<>(GetAction.NAME, client.threadPool()));\n        client.prepareSearch().execute(new AssertingActionListener<>(SearchAction.NAME, client.threadPool()));\n        client.prepareDelete(\"idx\", \"type\", \"id\").execute(new AssertingActionListener<>(DeleteAction.NAME, client.threadPool()));\n        client.admin().cluster().prepareDeleteStoredScript(\"id\").execute(new AssertingActionListener<>(DeleteStoredScriptAction.NAME, client.threadPool()));\n        client.prepareIndex(\"idx\", \"type\", \"id\").setSource(\"source\", XContentType.JSON).execute(new AssertingActionListener<>(IndexAction.NAME, client.threadPool()));\n\n        \r\n        client.admin().cluster().prepareClusterStats().execute(new AssertingActionListener<>(ClusterStatsAction.NAME, client.threadPool()));\n        client.admin().cluster().prepareCreateSnapshot(\"repo\", \"bck\").execute(new AssertingActionListener<>(CreateSnapshotAction.NAME, client.threadPool()));\n        client.admin().cluster().prepareReroute().execute(new AssertingActionListener<>(ClusterRerouteAction.NAME, client.threadPool()));\n\n        \r\n        client.admin().indices().prepareCreate(\"idx\").execute(new AssertingActionListener<>(CreateIndexAction.NAME, client.threadPool()));\n        client.admin().indices().prepareStats().execute(new AssertingActionListener<>(IndicesStatsAction.NAME, client.threadPool()));\n        client.admin().indices().prepareClearCache(\"idx1\", \"idx2\").execute(new AssertingActionListener<>(ClearIndicesCacheAction.NAME, client.threadPool()));\n        client.admin().indices().prepareFlush().execute(new AssertingActionListener<>(FlushAction.NAME, client.threadPool()));\n    }\n","date":"2018-04-26 03:22:53","endLine":122,"groupId":"69471","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testActions","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/8c/1b22f7fb171308d17e5afe0a0d0cd55d256c5e.src","preCode":"    public void testActions() {\n\n        \r\n        \r\n        \r\n        \r\n\n        \r\n        client.prepareGet(\"idx\", \"type\", \"id\").execute(new AssertingActionListener<>(GetAction.NAME, client.threadPool()));\n        client.prepareSearch().execute(new AssertingActionListener<>(SearchAction.NAME, client.threadPool()));\n        client.prepareDelete(\"idx\", \"type\", \"id\").execute(new AssertingActionListener<>(DeleteAction.NAME, client.threadPool()));\n        client.admin().cluster().prepareDeleteStoredScript(\"id\").execute(new AssertingActionListener<>(DeleteStoredScriptAction.NAME, client.threadPool()));\n        client.prepareIndex(\"idx\", \"type\", \"id\").setSource(\"source\", XContentType.JSON).execute(new AssertingActionListener<>(IndexAction.NAME, client.threadPool()));\n\n        \r\n        client.admin().cluster().prepareClusterStats().execute(new AssertingActionListener<>(ClusterStatsAction.NAME, client.threadPool()));\n        client.admin().cluster().prepareCreateSnapshot(\"repo\", \"bck\").execute(new AssertingActionListener<>(CreateSnapshotAction.NAME, client.threadPool()));\n        client.admin().cluster().prepareReroute().execute(new AssertingActionListener<>(ClusterRerouteAction.NAME, client.threadPool()));\n\n        \r\n        client.admin().indices().prepareCreate(\"idx\").execute(new AssertingActionListener<>(CreateIndexAction.NAME, client.threadPool()));\n        client.admin().indices().prepareStats().execute(new AssertingActionListener<>(IndicesStatsAction.NAME, client.threadPool()));\n        client.admin().indices().prepareClearCache(\"idx1\", \"idx2\").execute(new AssertingActionListener<>(ClearIndicesCacheAction.NAME, client.threadPool()));\n        client.admin().indices().prepareFlush().execute(new AssertingActionListener<>(FlushAction.NAME, client.threadPool()));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/client/AbstractClientHeadersTestCase.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":98,"status":"B"},{"authorDate":"2018-04-26 03:22:53","commitOrder":1,"curCode":"    public void testOverrideHeader() throws Exception {\n        String key1Val = randomAlphaOfLength(5);\n        Map<String, String> expected = new HashMap<>();\n        expected.put(\"key1\", key1Val);\n        expected.put(\"key2\", \"val 2\");\n        client.threadPool().getThreadContext().putHeader(\"key1\", key1Val);\n        client.prepareGet(\"idx\", \"type\", \"id\")\n                .execute(new AssertingActionListener<>(GetAction.NAME, expected, client.threadPool()));\n\n        client.admin().cluster().prepareClusterStats()\n                .execute(new AssertingActionListener<>(ClusterStatsAction.NAME, expected, client.threadPool()));\n\n        client.admin().indices().prepareCreate(\"idx\")\n                .execute(new AssertingActionListener<>(CreateIndexAction.NAME, expected, client.threadPool()));\n    }\n","date":"2018-04-26 03:22:53","endLine":138,"groupId":"54209","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testOverrideHeader","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/8c/1b22f7fb171308d17e5afe0a0d0cd55d256c5e.src","preCode":"    public void testOverrideHeader() throws Exception {\n        String key1Val = randomAlphaOfLength(5);\n        Map<String, String> expected = new HashMap<>();\n        expected.put(\"key1\", key1Val);\n        expected.put(\"key2\", \"val 2\");\n        client.threadPool().getThreadContext().putHeader(\"key1\", key1Val);\n        client.prepareGet(\"idx\", \"type\", \"id\")\n                .execute(new AssertingActionListener<>(GetAction.NAME, expected, client.threadPool()));\n\n        client.admin().cluster().prepareClusterStats()\n                .execute(new AssertingActionListener<>(ClusterStatsAction.NAME, expected, client.threadPool()));\n\n        client.admin().indices().prepareCreate(\"idx\")\n                .execute(new AssertingActionListener<>(CreateIndexAction.NAME, expected, client.threadPool()));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/client/AbstractClientHeadersTestCase.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":124,"status":"B"}],"commitId":"d74fb9eb4559077e2d20b19a9ed62d9ff825027a","commitMessage":"@@@Opened x-pack ILM code\n","date":"2018-04-26 03:22:53","modifiedFileCount":"0","status":"B","submitter":"Tal Levy"},{"authorTime":"2019-09-20 21:22:57","codes":[{"authorDate":"2019-09-20 21:22:57","commitOrder":2,"curCode":"    public void testActions() {\n\n        \r\n        \r\n        \r\n        \r\n\n        \r\n        client.prepareGet(\"idx\", \"id\").execute(new AssertingActionListener<>(GetAction.NAME, client.threadPool()));\n        client.prepareSearch().execute(new AssertingActionListener<>(SearchAction.NAME, client.threadPool()));\n        client.prepareDelete(\"idx\", \"type\", \"id\").execute(new AssertingActionListener<>(DeleteAction.NAME, client.threadPool()));\n        client.admin().cluster().prepareDeleteStoredScript(\"id\")\n            .execute(new AssertingActionListener<>(DeleteStoredScriptAction.NAME, client.threadPool()));\n        client.prepareIndex(\"idx\", \"type\", \"id\").setSource(\"source\", XContentType.JSON)\n            .execute(new AssertingActionListener<>(IndexAction.NAME, client.threadPool()));\n\n        \r\n        client.admin().cluster().prepareClusterStats().execute(new AssertingActionListener<>(ClusterStatsAction.NAME, client.threadPool()));\n        client.admin().cluster().prepareCreateSnapshot(\"repo\", \"bck\")\n            .execute(new AssertingActionListener<>(CreateSnapshotAction.NAME, client.threadPool()));\n        client.admin().cluster().prepareReroute().execute(new AssertingActionListener<>(ClusterRerouteAction.NAME, client.threadPool()));\n\n        \r\n        client.admin().indices().prepareCreate(\"idx\").execute(new AssertingActionListener<>(CreateIndexAction.NAME, client.threadPool()));\n        client.admin().indices().prepareStats().execute(new AssertingActionListener<>(IndicesStatsAction.NAME, client.threadPool()));\n        client.admin().indices().prepareClearCache(\"idx1\", \"idx2\")\n            .execute(new AssertingActionListener<>(ClearIndicesCacheAction.NAME, client.threadPool()));\n        client.admin().indices().prepareFlush().execute(new AssertingActionListener<>(FlushAction.NAME, client.threadPool()));\n    }\n","date":"2019-09-20 21:22:57","endLine":126,"groupId":"69471","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testActions","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/f6/533dce36014fc6087f09f392ba6d9d6cca278f.src","preCode":"    public void testActions() {\n\n        \r\n        \r\n        \r\n        \r\n\n        \r\n        client.prepareGet(\"idx\", \"type\", \"id\").execute(new AssertingActionListener<>(GetAction.NAME, client.threadPool()));\n        client.prepareSearch().execute(new AssertingActionListener<>(SearchAction.NAME, client.threadPool()));\n        client.prepareDelete(\"idx\", \"type\", \"id\").execute(new AssertingActionListener<>(DeleteAction.NAME, client.threadPool()));\n        client.admin().cluster().prepareDeleteStoredScript(\"id\")\n            .execute(new AssertingActionListener<>(DeleteStoredScriptAction.NAME, client.threadPool()));\n        client.prepareIndex(\"idx\", \"type\", \"id\").setSource(\"source\", XContentType.JSON)\n            .execute(new AssertingActionListener<>(IndexAction.NAME, client.threadPool()));\n\n        \r\n        client.admin().cluster().prepareClusterStats().execute(new AssertingActionListener<>(ClusterStatsAction.NAME, client.threadPool()));\n        client.admin().cluster().prepareCreateSnapshot(\"repo\", \"bck\")\n            .execute(new AssertingActionListener<>(CreateSnapshotAction.NAME, client.threadPool()));\n        client.admin().cluster().prepareReroute().execute(new AssertingActionListener<>(ClusterRerouteAction.NAME, client.threadPool()));\n\n        \r\n        client.admin().indices().prepareCreate(\"idx\").execute(new AssertingActionListener<>(CreateIndexAction.NAME, client.threadPool()));\n        client.admin().indices().prepareStats().execute(new AssertingActionListener<>(IndicesStatsAction.NAME, client.threadPool()));\n        client.admin().indices().prepareClearCache(\"idx1\", \"idx2\")\n            .execute(new AssertingActionListener<>(ClearIndicesCacheAction.NAME, client.threadPool()));\n        client.admin().indices().prepareFlush().execute(new AssertingActionListener<>(FlushAction.NAME, client.threadPool()));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/client/AbstractClientHeadersTestCase.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":98,"status":"M"},{"authorDate":"2019-09-20 21:22:57","commitOrder":2,"curCode":"    public void testOverrideHeader() throws Exception {\n        String key1Val = randomAlphaOfLength(5);\n        Map<String, String> expected = new HashMap<>();\n        expected.put(\"key1\", key1Val);\n        expected.put(\"key2\", \"val 2\");\n        client.threadPool().getThreadContext().putHeader(\"key1\", key1Val);\n        client.prepareGet(\"idx\", \"id\")\n                .execute(new AssertingActionListener<>(GetAction.NAME, expected, client.threadPool()));\n\n        client.admin().cluster().prepareClusterStats()\n                .execute(new AssertingActionListener<>(ClusterStatsAction.NAME, expected, client.threadPool()));\n\n        client.admin().indices().prepareCreate(\"idx\")\n                .execute(new AssertingActionListener<>(CreateIndexAction.NAME, expected, client.threadPool()));\n    }\n","date":"2019-09-20 21:22:57","endLine":142,"groupId":"69475","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testOverrideHeader","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/f6/533dce36014fc6087f09f392ba6d9d6cca278f.src","preCode":"    public void testOverrideHeader() throws Exception {\n        String key1Val = randomAlphaOfLength(5);\n        Map<String, String> expected = new HashMap<>();\n        expected.put(\"key1\", key1Val);\n        expected.put(\"key2\", \"val 2\");\n        client.threadPool().getThreadContext().putHeader(\"key1\", key1Val);\n        client.prepareGet(\"idx\", \"type\", \"id\")\n                .execute(new AssertingActionListener<>(GetAction.NAME, expected, client.threadPool()));\n\n        client.admin().cluster().prepareClusterStats()\n                .execute(new AssertingActionListener<>(ClusterStatsAction.NAME, expected, client.threadPool()));\n\n        client.admin().indices().prepareCreate(\"idx\")\n                .execute(new AssertingActionListener<>(CreateIndexAction.NAME, expected, client.threadPool()));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/client/AbstractClientHeadersTestCase.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":128,"status":"M"}],"commitId":"7c90801aff398d9b73e4fa24933550d2320a5a4d","commitMessage":"@@@Remove types from Get/MultiGet (#46587)\n\nThis commit removes types from the ShardGetService.  and propagates this API change\nup through the Transport and Rest actions for Get and MultiGet\n\nRelates to #41059","date":"2019-09-20 21:22:57","modifiedFileCount":"136","status":"M","submitter":"Alan Woodward"},{"authorTime":"2019-09-20 21:22:57","codes":[{"authorDate":"2019-10-23 23:58:08","commitOrder":3,"curCode":"    public void testActions() {\n\n        \r\n        \r\n        \r\n        \r\n\n        \r\n        client.prepareGet(\"idx\", \"id\").execute(new AssertingActionListener<>(GetAction.NAME, client.threadPool()));\n        client.prepareSearch().execute(new AssertingActionListener<>(SearchAction.NAME, client.threadPool()));\n        client.prepareDelete(\"idx\", \"id\").execute(new AssertingActionListener<>(DeleteAction.NAME, client.threadPool()));\n        client.admin().cluster().prepareDeleteStoredScript(\"id\")\n            .execute(new AssertingActionListener<>(DeleteStoredScriptAction.NAME, client.threadPool()));\n        client.prepareIndex(\"idx\", \"type\", \"id\").setSource(\"source\", XContentType.JSON)\n            .execute(new AssertingActionListener<>(IndexAction.NAME, client.threadPool()));\n\n        \r\n        client.admin().cluster().prepareClusterStats().execute(new AssertingActionListener<>(ClusterStatsAction.NAME, client.threadPool()));\n        client.admin().cluster().prepareCreateSnapshot(\"repo\", \"bck\")\n            .execute(new AssertingActionListener<>(CreateSnapshotAction.NAME, client.threadPool()));\n        client.admin().cluster().prepareReroute().execute(new AssertingActionListener<>(ClusterRerouteAction.NAME, client.threadPool()));\n\n        \r\n        client.admin().indices().prepareCreate(\"idx\").execute(new AssertingActionListener<>(CreateIndexAction.NAME, client.threadPool()));\n        client.admin().indices().prepareStats().execute(new AssertingActionListener<>(IndicesStatsAction.NAME, client.threadPool()));\n        client.admin().indices().prepareClearCache(\"idx1\", \"idx2\")\n            .execute(new AssertingActionListener<>(ClearIndicesCacheAction.NAME, client.threadPool()));\n        client.admin().indices().prepareFlush().execute(new AssertingActionListener<>(FlushAction.NAME, client.threadPool()));\n    }\n","date":"2019-10-23 23:58:08","endLine":126,"groupId":"69471","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testActions","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/42/e38e2de546430273b77fdeaa066a3220a04f4b.src","preCode":"    public void testActions() {\n\n        \r\n        \r\n        \r\n        \r\n\n        \r\n        client.prepareGet(\"idx\", \"id\").execute(new AssertingActionListener<>(GetAction.NAME, client.threadPool()));\n        client.prepareSearch().execute(new AssertingActionListener<>(SearchAction.NAME, client.threadPool()));\n        client.prepareDelete(\"idx\", \"type\", \"id\").execute(new AssertingActionListener<>(DeleteAction.NAME, client.threadPool()));\n        client.admin().cluster().prepareDeleteStoredScript(\"id\")\n            .execute(new AssertingActionListener<>(DeleteStoredScriptAction.NAME, client.threadPool()));\n        client.prepareIndex(\"idx\", \"type\", \"id\").setSource(\"source\", XContentType.JSON)\n            .execute(new AssertingActionListener<>(IndexAction.NAME, client.threadPool()));\n\n        \r\n        client.admin().cluster().prepareClusterStats().execute(new AssertingActionListener<>(ClusterStatsAction.NAME, client.threadPool()));\n        client.admin().cluster().prepareCreateSnapshot(\"repo\", \"bck\")\n            .execute(new AssertingActionListener<>(CreateSnapshotAction.NAME, client.threadPool()));\n        client.admin().cluster().prepareReroute().execute(new AssertingActionListener<>(ClusterRerouteAction.NAME, client.threadPool()));\n\n        \r\n        client.admin().indices().prepareCreate(\"idx\").execute(new AssertingActionListener<>(CreateIndexAction.NAME, client.threadPool()));\n        client.admin().indices().prepareStats().execute(new AssertingActionListener<>(IndicesStatsAction.NAME, client.threadPool()));\n        client.admin().indices().prepareClearCache(\"idx1\", \"idx2\")\n            .execute(new AssertingActionListener<>(ClearIndicesCacheAction.NAME, client.threadPool()));\n        client.admin().indices().prepareFlush().execute(new AssertingActionListener<>(FlushAction.NAME, client.threadPool()));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/client/AbstractClientHeadersTestCase.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":98,"status":"M"},{"authorDate":"2019-09-20 21:22:57","commitOrder":3,"curCode":"    public void testOverrideHeader() throws Exception {\n        String key1Val = randomAlphaOfLength(5);\n        Map<String, String> expected = new HashMap<>();\n        expected.put(\"key1\", key1Val);\n        expected.put(\"key2\", \"val 2\");\n        client.threadPool().getThreadContext().putHeader(\"key1\", key1Val);\n        client.prepareGet(\"idx\", \"id\")\n                .execute(new AssertingActionListener<>(GetAction.NAME, expected, client.threadPool()));\n\n        client.admin().cluster().prepareClusterStats()\n                .execute(new AssertingActionListener<>(ClusterStatsAction.NAME, expected, client.threadPool()));\n\n        client.admin().indices().prepareCreate(\"idx\")\n                .execute(new AssertingActionListener<>(CreateIndexAction.NAME, expected, client.threadPool()));\n    }\n","date":"2019-09-20 21:22:57","endLine":142,"groupId":"69475","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testOverrideHeader","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/f6/533dce36014fc6087f09f392ba6d9d6cca278f.src","preCode":"    public void testOverrideHeader() throws Exception {\n        String key1Val = randomAlphaOfLength(5);\n        Map<String, String> expected = new HashMap<>();\n        expected.put(\"key1\", key1Val);\n        expected.put(\"key2\", \"val 2\");\n        client.threadPool().getThreadContext().putHeader(\"key1\", key1Val);\n        client.prepareGet(\"idx\", \"id\")\n                .execute(new AssertingActionListener<>(GetAction.NAME, expected, client.threadPool()));\n\n        client.admin().cluster().prepareClusterStats()\n                .execute(new AssertingActionListener<>(ClusterStatsAction.NAME, expected, client.threadPool()));\n\n        client.admin().indices().prepareCreate(\"idx\")\n                .execute(new AssertingActionListener<>(CreateIndexAction.NAME, expected, client.threadPool()));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/client/AbstractClientHeadersTestCase.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":128,"status":"N"}],"commitId":"e85e3a8a636487245e92d67601f8da3a698b0c6c","commitMessage":"@@@Remove type parameter from Client.prepareIndex/Delete/Update(index.  type) (#48185)\n\nTypes are no longer used in IndexRequest.  DeleteRequest or UpdateRequest; \nthis commit removes them from the prepareX(index.  type) methods on Client.  as well as removing setType() and deprecated constructors on XRequestBuilder objects.\n\nNote that Client.prepareIndex(index.  type.  id) is not affected by this PR and will be removed\nin a followup.\n\nRelates to #41059","date":"2019-10-23 23:58:08","modifiedFileCount":"169","status":"M","submitter":"Alan Woodward"},{"authorTime":"2019-09-20 21:22:57","codes":[{"authorDate":"2019-10-25 18:09:52","commitOrder":4,"curCode":"    public void testActions() {\n\n        \r\n        \r\n        \r\n        \r\n\n        \r\n        client.prepareGet(\"idx\", \"id\").execute(new AssertingActionListener<>(GetAction.NAME, client.threadPool()));\n        client.prepareSearch().execute(new AssertingActionListener<>(SearchAction.NAME, client.threadPool()));\n        client.prepareDelete(\"idx\", \"id\").execute(new AssertingActionListener<>(DeleteAction.NAME, client.threadPool()));\n        client.admin().cluster().prepareDeleteStoredScript(\"id\")\n            .execute(new AssertingActionListener<>(DeleteStoredScriptAction.NAME, client.threadPool()));\n        client.prepareIndex(\"idx\").setId(\"id\").setSource(\"source\", XContentType.JSON)\n            .execute(new AssertingActionListener<>(IndexAction.NAME, client.threadPool()));\n\n        \r\n        client.admin().cluster().prepareClusterStats().execute(new AssertingActionListener<>(ClusterStatsAction.NAME, client.threadPool()));\n        client.admin().cluster().prepareCreateSnapshot(\"repo\", \"bck\")\n            .execute(new AssertingActionListener<>(CreateSnapshotAction.NAME, client.threadPool()));\n        client.admin().cluster().prepareReroute().execute(new AssertingActionListener<>(ClusterRerouteAction.NAME, client.threadPool()));\n\n        \r\n        client.admin().indices().prepareCreate(\"idx\").execute(new AssertingActionListener<>(CreateIndexAction.NAME, client.threadPool()));\n        client.admin().indices().prepareStats().execute(new AssertingActionListener<>(IndicesStatsAction.NAME, client.threadPool()));\n        client.admin().indices().prepareClearCache(\"idx1\", \"idx2\")\n            .execute(new AssertingActionListener<>(ClearIndicesCacheAction.NAME, client.threadPool()));\n        client.admin().indices().prepareFlush().execute(new AssertingActionListener<>(FlushAction.NAME, client.threadPool()));\n    }\n","date":"2019-10-25 18:09:52","endLine":126,"groupId":"104326","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"testActions","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/ff/884960e90062598aba1c150f81469e05ab4570.src","preCode":"    public void testActions() {\n\n        \r\n        \r\n        \r\n        \r\n\n        \r\n        client.prepareGet(\"idx\", \"id\").execute(new AssertingActionListener<>(GetAction.NAME, client.threadPool()));\n        client.prepareSearch().execute(new AssertingActionListener<>(SearchAction.NAME, client.threadPool()));\n        client.prepareDelete(\"idx\", \"id\").execute(new AssertingActionListener<>(DeleteAction.NAME, client.threadPool()));\n        client.admin().cluster().prepareDeleteStoredScript(\"id\")\n            .execute(new AssertingActionListener<>(DeleteStoredScriptAction.NAME, client.threadPool()));\n        client.prepareIndex(\"idx\", \"type\", \"id\").setSource(\"source\", XContentType.JSON)\n            .execute(new AssertingActionListener<>(IndexAction.NAME, client.threadPool()));\n\n        \r\n        client.admin().cluster().prepareClusterStats().execute(new AssertingActionListener<>(ClusterStatsAction.NAME, client.threadPool()));\n        client.admin().cluster().prepareCreateSnapshot(\"repo\", \"bck\")\n            .execute(new AssertingActionListener<>(CreateSnapshotAction.NAME, client.threadPool()));\n        client.admin().cluster().prepareReroute().execute(new AssertingActionListener<>(ClusterRerouteAction.NAME, client.threadPool()));\n\n        \r\n        client.admin().indices().prepareCreate(\"idx\").execute(new AssertingActionListener<>(CreateIndexAction.NAME, client.threadPool()));\n        client.admin().indices().prepareStats().execute(new AssertingActionListener<>(IndicesStatsAction.NAME, client.threadPool()));\n        client.admin().indices().prepareClearCache(\"idx1\", \"idx2\")\n            .execute(new AssertingActionListener<>(ClearIndicesCacheAction.NAME, client.threadPool()));\n        client.admin().indices().prepareFlush().execute(new AssertingActionListener<>(FlushAction.NAME, client.threadPool()));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/client/AbstractClientHeadersTestCase.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":98,"status":"M"},{"authorDate":"2019-09-20 21:22:57","commitOrder":4,"curCode":"    public void testOverrideHeader() throws Exception {\n        String key1Val = randomAlphaOfLength(5);\n        Map<String, String> expected = new HashMap<>();\n        expected.put(\"key1\", key1Val);\n        expected.put(\"key2\", \"val 2\");\n        client.threadPool().getThreadContext().putHeader(\"key1\", key1Val);\n        client.prepareGet(\"idx\", \"id\")\n                .execute(new AssertingActionListener<>(GetAction.NAME, expected, client.threadPool()));\n\n        client.admin().cluster().prepareClusterStats()\n                .execute(new AssertingActionListener<>(ClusterStatsAction.NAME, expected, client.threadPool()));\n\n        client.admin().indices().prepareCreate(\"idx\")\n                .execute(new AssertingActionListener<>(CreateIndexAction.NAME, expected, client.threadPool()));\n    }\n","date":"2019-09-20 21:22:57","endLine":142,"groupId":"104326","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"testOverrideHeader","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/f6/533dce36014fc6087f09f392ba6d9d6cca278f.src","preCode":"    public void testOverrideHeader() throws Exception {\n        String key1Val = randomAlphaOfLength(5);\n        Map<String, String> expected = new HashMap<>();\n        expected.put(\"key1\", key1Val);\n        expected.put(\"key2\", \"val 2\");\n        client.threadPool().getThreadContext().putHeader(\"key1\", key1Val);\n        client.prepareGet(\"idx\", \"id\")\n                .execute(new AssertingActionListener<>(GetAction.NAME, expected, client.threadPool()));\n\n        client.admin().cluster().prepareClusterStats()\n                .execute(new AssertingActionListener<>(ClusterStatsAction.NAME, expected, client.threadPool()));\n\n        client.admin().indices().prepareCreate(\"idx\")\n                .execute(new AssertingActionListener<>(CreateIndexAction.NAME, expected, client.threadPool()));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/client/AbstractClientHeadersTestCase.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":128,"status":"N"}],"commitId":"750c6d8bb1c751774f01fd12778f8bcc0a6f4d57","commitMessage":"@@@Remove Client.prepareIndex(index.  type.  id) method (#48443)\n\nAs types are no longer used in index requests.  we can remove the type parameter\nfrom `prepareIndex` methods in the `Client` interface. However.  just changing the signature\nof `prepareIndex(index.  type.  id)` to `prepareIndex(index.  id)` risks confusion when\nupgrading with the previous (now removed) `prepareIndex(index.  type)` method -\njust changing the dependency version of java code would end up silently changing the\nsemantics of the method call. Instead we should just remove this method entirely.  and\nreplace it by calling `prepareIndex(index).setId(id)`","date":"2019-10-25 18:09:52","modifiedFileCount":"267","status":"M","submitter":"Alan Woodward"}]
