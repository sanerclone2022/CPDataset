[{"authorTime":"2018-04-26 03:22:53","codes":[{"authorDate":"2018-04-26 03:22:53","commitOrder":1,"curCode":"    public void testPostFilterDisablesCountOptimization() throws Exception {\n        Directory dir = newDirectory();\n        final Sort sort = new Sort(new SortField(\"rank\", SortField.Type.INT));\n        IndexWriterConfig iwc = newIndexWriterConfig()\n            .setIndexSort(sort);\n        RandomIndexWriter w = new RandomIndexWriter(random(), dir, iwc);\n        Document doc = new Document();\n        w.addDocument(doc);\n        w.close();\n\n        IndexReader reader = DirectoryReader.open(dir);\n        IndexSearcher contextSearcher = getAssertingEarlyTerminationSearcher(reader, 0);\n        TestSearchContext context = new TestSearchContext(null, indexShard);\n        context.setTask(new SearchTask(123L, \"\", \"\", \"\", null, Collections.emptyMap()));\n        context.parsedQuery(new ParsedQuery(new MatchAllDocsQuery()));\n\n        QueryPhase.execute(context, contextSearcher, checkCancelled -> {});\n        assertEquals(1, context.queryResult().topDocs().totalHits);\n\n        contextSearcher = new IndexSearcher(reader);\n        context.parsedPostFilter(new ParsedQuery(new MatchNoDocsQuery()));\n        QueryPhase.execute(context, contextSearcher, checkCancelled -> {});\n        assertEquals(0, context.queryResult().topDocs().totalHits);\n        reader.close();\n        dir.close();\n    }\n","date":"2018-04-26 03:22:53","endLine":182,"groupId":"21166","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testPostFilterDisablesCountOptimization","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/16/365d829a83b9ed0cfb45ea98b1ef9000149702.src","preCode":"    public void testPostFilterDisablesCountOptimization() throws Exception {\n        Directory dir = newDirectory();\n        final Sort sort = new Sort(new SortField(\"rank\", SortField.Type.INT));\n        IndexWriterConfig iwc = newIndexWriterConfig()\n            .setIndexSort(sort);\n        RandomIndexWriter w = new RandomIndexWriter(random(), dir, iwc);\n        Document doc = new Document();\n        w.addDocument(doc);\n        w.close();\n\n        IndexReader reader = DirectoryReader.open(dir);\n        IndexSearcher contextSearcher = getAssertingEarlyTerminationSearcher(reader, 0);\n        TestSearchContext context = new TestSearchContext(null, indexShard);\n        context.setTask(new SearchTask(123L, \"\", \"\", \"\", null, Collections.emptyMap()));\n        context.parsedQuery(new ParsedQuery(new MatchAllDocsQuery()));\n\n        QueryPhase.execute(context, contextSearcher, checkCancelled -> {});\n        assertEquals(1, context.queryResult().topDocs().totalHits);\n\n        contextSearcher = new IndexSearcher(reader);\n        context.parsedPostFilter(new ParsedQuery(new MatchNoDocsQuery()));\n        QueryPhase.execute(context, contextSearcher, checkCancelled -> {});\n        assertEquals(0, context.queryResult().topDocs().totalHits);\n        reader.close();\n        dir.close();\n    }\n","realPath":"server/src/test/java/org/elasticsearch/search/query/QueryPhaseTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":157,"status":"B"},{"authorDate":"2018-04-26 03:22:53","commitOrder":1,"curCode":"    public void testMinScoreDisablesCountOptimization() throws Exception {\n        Directory dir = newDirectory();\n        final Sort sort = new Sort(new SortField(\"rank\", SortField.Type.INT));\n        IndexWriterConfig iwc = newIndexWriterConfig()\n            .setIndexSort(sort);\n        RandomIndexWriter w = new RandomIndexWriter(random(), dir, iwc);\n        Document doc = new Document();\n        w.addDocument(doc);\n        w.close();\n\n        IndexReader reader = DirectoryReader.open(dir);\n        IndexSearcher contextSearcher = getAssertingEarlyTerminationSearcher(reader, 0);\n        TestSearchContext context = new TestSearchContext(null, indexShard);\n        context.parsedQuery(new ParsedQuery(new MatchAllDocsQuery()));\n        context.setSize(0);\n        context.setTask(new SearchTask(123L, \"\", \"\", \"\", null, Collections.emptyMap()));\n        QueryPhase.execute(context, contextSearcher, checkCancelled -> {});\n        assertEquals(1, context.queryResult().topDocs().totalHits);\n\n        contextSearcher = new IndexSearcher(reader);\n        context.minimumScore(100);\n        QueryPhase.execute(context, contextSearcher, checkCancelled -> {});\n        assertEquals(0, context.queryResult().topDocs().totalHits);\n        reader.close();\n        dir.close();\n    }\n","date":"2018-04-26 03:22:53","endLine":240,"groupId":"21159","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testMinScoreDisablesCountOptimization","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/16/365d829a83b9ed0cfb45ea98b1ef9000149702.src","preCode":"    public void testMinScoreDisablesCountOptimization() throws Exception {\n        Directory dir = newDirectory();\n        final Sort sort = new Sort(new SortField(\"rank\", SortField.Type.INT));\n        IndexWriterConfig iwc = newIndexWriterConfig()\n            .setIndexSort(sort);\n        RandomIndexWriter w = new RandomIndexWriter(random(), dir, iwc);\n        Document doc = new Document();\n        w.addDocument(doc);\n        w.close();\n\n        IndexReader reader = DirectoryReader.open(dir);\n        IndexSearcher contextSearcher = getAssertingEarlyTerminationSearcher(reader, 0);\n        TestSearchContext context = new TestSearchContext(null, indexShard);\n        context.parsedQuery(new ParsedQuery(new MatchAllDocsQuery()));\n        context.setSize(0);\n        context.setTask(new SearchTask(123L, \"\", \"\", \"\", null, Collections.emptyMap()));\n        QueryPhase.execute(context, contextSearcher, checkCancelled -> {});\n        assertEquals(1, context.queryResult().topDocs().totalHits);\n\n        contextSearcher = new IndexSearcher(reader);\n        context.minimumScore(100);\n        QueryPhase.execute(context, contextSearcher, checkCancelled -> {});\n        assertEquals(0, context.queryResult().topDocs().totalHits);\n        reader.close();\n        dir.close();\n    }\n","realPath":"server/src/test/java/org/elasticsearch/search/query/QueryPhaseTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":215,"status":"B"}],"commitId":"d74fb9eb4559077e2d20b19a9ed62d9ff825027a","commitMessage":"@@@Opened x-pack ILM code\n","date":"2018-04-26 03:22:53","modifiedFileCount":"0","status":"B","submitter":"Tal Levy"},{"authorTime":"2018-08-24 01:52:59","codes":[{"authorDate":"2018-08-24 01:52:59","commitOrder":2,"curCode":"    public void testPostFilterDisablesCountOptimization() throws Exception {\n        Directory dir = newDirectory();\n        final Sort sort = new Sort(new SortField(\"rank\", SortField.Type.INT));\n        IndexWriterConfig iwc = newIndexWriterConfig()\n            .setIndexSort(sort);\n        RandomIndexWriter w = new RandomIndexWriter(random(), dir, iwc);\n        Document doc = new Document();\n        w.addDocument(doc);\n        w.close();\n\n        IndexReader reader = DirectoryReader.open(dir);\n        IndexSearcher contextSearcher = getAssertingEarlyTerminationSearcher(reader, 0);\n        TestSearchContext context = new TestSearchContext(null, indexShard);\n        context.setTask(new SearchTask(123L, \"\", \"\", \"\", null, Collections.emptyMap()));\n        context.parsedQuery(new ParsedQuery(new MatchAllDocsQuery()));\n\n        QueryPhase.execute(context, contextSearcher, checkCancelled -> {});\n        assertEquals(1, context.queryResult().topDocs().totalHits);\n        assertThat(context.queryResult().topDocs().scoreDocs.length, equalTo(0));\n        assertThat(context.queryResult().topDocs().getMaxScore(), equalTo(Float.NaN));\n\n        contextSearcher = new IndexSearcher(reader);\n        context.parsedPostFilter(new ParsedQuery(new MatchNoDocsQuery()));\n        QueryPhase.execute(context, contextSearcher, checkCancelled -> {});\n        assertEquals(0, context.queryResult().topDocs().totalHits);\n        assertThat(context.queryResult().topDocs().getMaxScore(), equalTo(Float.NaN));\n        reader.close();\n        dir.close();\n    }\n","date":"2018-08-24 01:52:59","endLine":187,"groupId":"21166","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testPostFilterDisablesCountOptimization","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/87/2267417c37d8b7315a4ee8d40b1c90bbd2a93e.src","preCode":"    public void testPostFilterDisablesCountOptimization() throws Exception {\n        Directory dir = newDirectory();\n        final Sort sort = new Sort(new SortField(\"rank\", SortField.Type.INT));\n        IndexWriterConfig iwc = newIndexWriterConfig()\n            .setIndexSort(sort);\n        RandomIndexWriter w = new RandomIndexWriter(random(), dir, iwc);\n        Document doc = new Document();\n        w.addDocument(doc);\n        w.close();\n\n        IndexReader reader = DirectoryReader.open(dir);\n        IndexSearcher contextSearcher = getAssertingEarlyTerminationSearcher(reader, 0);\n        TestSearchContext context = new TestSearchContext(null, indexShard);\n        context.setTask(new SearchTask(123L, \"\", \"\", \"\", null, Collections.emptyMap()));\n        context.parsedQuery(new ParsedQuery(new MatchAllDocsQuery()));\n\n        QueryPhase.execute(context, contextSearcher, checkCancelled -> {});\n        assertEquals(1, context.queryResult().topDocs().totalHits);\n\n        contextSearcher = new IndexSearcher(reader);\n        context.parsedPostFilter(new ParsedQuery(new MatchNoDocsQuery()));\n        QueryPhase.execute(context, contextSearcher, checkCancelled -> {});\n        assertEquals(0, context.queryResult().topDocs().totalHits);\n        reader.close();\n        dir.close();\n    }\n","realPath":"server/src/test/java/org/elasticsearch/search/query/QueryPhaseTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":159,"status":"M"},{"authorDate":"2018-08-24 01:52:59","commitOrder":2,"curCode":"    public void testMinScoreDisablesCountOptimization() throws Exception {\n        Directory dir = newDirectory();\n        final Sort sort = new Sort(new SortField(\"rank\", SortField.Type.INT));\n        IndexWriterConfig iwc = newIndexWriterConfig()\n            .setIndexSort(sort);\n        RandomIndexWriter w = new RandomIndexWriter(random(), dir, iwc);\n        Document doc = new Document();\n        w.addDocument(doc);\n        w.close();\n\n        IndexReader reader = DirectoryReader.open(dir);\n        IndexSearcher contextSearcher = getAssertingEarlyTerminationSearcher(reader, 0);\n        TestSearchContext context = new TestSearchContext(null, indexShard);\n        context.parsedQuery(new ParsedQuery(new MatchAllDocsQuery()));\n        context.setSize(0);\n        context.setTask(new SearchTask(123L, \"\", \"\", \"\", null, Collections.emptyMap()));\n        QueryPhase.execute(context, contextSearcher, checkCancelled -> {});\n        assertEquals(1, context.queryResult().topDocs().totalHits);\n        assertThat(context.queryResult().topDocs().getMaxScore(), equalTo(Float.NaN));\n\n        contextSearcher = new IndexSearcher(reader);\n        context.minimumScore(100);\n        QueryPhase.execute(context, contextSearcher, checkCancelled -> {});\n        assertEquals(0, context.queryResult().topDocs().totalHits);\n        assertThat(context.queryResult().topDocs().getMaxScore(), equalTo(Float.NaN));\n        reader.close();\n        dir.close();\n    }\n","date":"2018-08-24 01:52:59","endLine":247,"groupId":"21159","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testMinScoreDisablesCountOptimization","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/87/2267417c37d8b7315a4ee8d40b1c90bbd2a93e.src","preCode":"    public void testMinScoreDisablesCountOptimization() throws Exception {\n        Directory dir = newDirectory();\n        final Sort sort = new Sort(new SortField(\"rank\", SortField.Type.INT));\n        IndexWriterConfig iwc = newIndexWriterConfig()\n            .setIndexSort(sort);\n        RandomIndexWriter w = new RandomIndexWriter(random(), dir, iwc);\n        Document doc = new Document();\n        w.addDocument(doc);\n        w.close();\n\n        IndexReader reader = DirectoryReader.open(dir);\n        IndexSearcher contextSearcher = getAssertingEarlyTerminationSearcher(reader, 0);\n        TestSearchContext context = new TestSearchContext(null, indexShard);\n        context.parsedQuery(new ParsedQuery(new MatchAllDocsQuery()));\n        context.setSize(0);\n        context.setTask(new SearchTask(123L, \"\", \"\", \"\", null, Collections.emptyMap()));\n        QueryPhase.execute(context, contextSearcher, checkCancelled -> {});\n        assertEquals(1, context.queryResult().topDocs().totalHits);\n\n        contextSearcher = new IndexSearcher(reader);\n        context.minimumScore(100);\n        QueryPhase.execute(context, contextSearcher, checkCancelled -> {});\n        assertEquals(0, context.queryResult().topDocs().totalHits);\n        reader.close();\n        dir.close();\n    }\n","realPath":"server/src/test/java/org/elasticsearch/search/query/QueryPhaseTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":220,"status":"M"}],"commitId":"1f13c77b49f46f13b7a2dd40581d942f5ccedb05","commitMessage":"@@@Merge branch 'master' into index-lifecycle\n","date":"2018-08-24 01:52:59","modifiedFileCount":"111","status":"M","submitter":"Gordon Brown"},{"authorTime":"2018-09-07 17:59:10","codes":[{"authorDate":"2018-09-07 17:59:10","commitOrder":3,"curCode":"    public void testPostFilterDisablesCountOptimization() throws Exception {\n        Directory dir = newDirectory();\n        final Sort sort = new Sort(new SortField(\"rank\", SortField.Type.INT));\n        IndexWriterConfig iwc = newIndexWriterConfig()\n            .setIndexSort(sort);\n        RandomIndexWriter w = new RandomIndexWriter(random(), dir, iwc);\n        Document doc = new Document();\n        w.addDocument(doc);\n        w.close();\n\n        IndexReader reader = DirectoryReader.open(dir);\n        IndexSearcher contextSearcher = getAssertingEarlyTerminationSearcher(reader, 0);\n        TestSearchContext context = new TestSearchContext(null, indexShard);\n        context.setTask(new SearchTask(123L, \"\", \"\", \"\", null, Collections.emptyMap()));\n        context.parsedQuery(new ParsedQuery(new MatchAllDocsQuery()));\n\n        QueryPhase.execute(context, contextSearcher, checkCancelled -> {});\n        assertEquals(1, context.queryResult().topDocs().topDocs.totalHits.value);\n\n        contextSearcher = new IndexSearcher(reader);\n        context.parsedPostFilter(new ParsedQuery(new MatchNoDocsQuery()));\n        QueryPhase.execute(context, contextSearcher, checkCancelled -> {});\n        assertEquals(0, context.queryResult().topDocs().topDocs.totalHits.value);\n        reader.close();\n        dir.close();\n    }\n","date":"2018-09-07 17:59:10","endLine":182,"groupId":"21166","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testPostFilterDisablesCountOptimization","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/7e/9c0153b728fdfeebbc737497ff73699110782b.src","preCode":"    public void testPostFilterDisablesCountOptimization() throws Exception {\n        Directory dir = newDirectory();\n        final Sort sort = new Sort(new SortField(\"rank\", SortField.Type.INT));\n        IndexWriterConfig iwc = newIndexWriterConfig()\n            .setIndexSort(sort);\n        RandomIndexWriter w = new RandomIndexWriter(random(), dir, iwc);\n        Document doc = new Document();\n        w.addDocument(doc);\n        w.close();\n\n        IndexReader reader = DirectoryReader.open(dir);\n        IndexSearcher contextSearcher = getAssertingEarlyTerminationSearcher(reader, 0);\n        TestSearchContext context = new TestSearchContext(null, indexShard);\n        context.setTask(new SearchTask(123L, \"\", \"\", \"\", null, Collections.emptyMap()));\n        context.parsedQuery(new ParsedQuery(new MatchAllDocsQuery()));\n\n        QueryPhase.execute(context, contextSearcher, checkCancelled -> {});\n        assertEquals(1, context.queryResult().topDocs().totalHits);\n        assertThat(context.queryResult().topDocs().scoreDocs.length, equalTo(0));\n        assertThat(context.queryResult().topDocs().getMaxScore(), equalTo(Float.NaN));\n\n        contextSearcher = new IndexSearcher(reader);\n        context.parsedPostFilter(new ParsedQuery(new MatchNoDocsQuery()));\n        QueryPhase.execute(context, contextSearcher, checkCancelled -> {});\n        assertEquals(0, context.queryResult().topDocs().totalHits);\n        assertThat(context.queryResult().topDocs().getMaxScore(), equalTo(Float.NaN));\n        reader.close();\n        dir.close();\n    }\n","realPath":"server/src/test/java/org/elasticsearch/search/query/QueryPhaseTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":157,"status":"M"},{"authorDate":"2018-09-07 17:59:10","commitOrder":3,"curCode":"    public void testMinScoreDisablesCountOptimization() throws Exception {\n        Directory dir = newDirectory();\n        final Sort sort = new Sort(new SortField(\"rank\", SortField.Type.INT));\n        IndexWriterConfig iwc = newIndexWriterConfig()\n            .setIndexSort(sort);\n        RandomIndexWriter w = new RandomIndexWriter(random(), dir, iwc);\n        Document doc = new Document();\n        w.addDocument(doc);\n        w.close();\n\n        IndexReader reader = DirectoryReader.open(dir);\n        IndexSearcher contextSearcher = getAssertingEarlyTerminationSearcher(reader, 0);\n        TestSearchContext context = new TestSearchContext(null, indexShard);\n        context.parsedQuery(new ParsedQuery(new MatchAllDocsQuery()));\n        context.setSize(0);\n        context.setTask(new SearchTask(123L, \"\", \"\", \"\", null, Collections.emptyMap()));\n        QueryPhase.execute(context, contextSearcher, checkCancelled -> {});\n        assertEquals(1, context.queryResult().topDocs().topDocs.totalHits.value);\n\n        contextSearcher = new IndexSearcher(reader);\n        context.minimumScore(100);\n        QueryPhase.execute(context, contextSearcher, checkCancelled -> {});\n        assertEquals(0, context.queryResult().topDocs().topDocs.totalHits.value);\n        reader.close();\n        dir.close();\n    }\n","date":"2018-09-07 17:59:10","endLine":239,"groupId":"21159","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testMinScoreDisablesCountOptimization","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/7e/9c0153b728fdfeebbc737497ff73699110782b.src","preCode":"    public void testMinScoreDisablesCountOptimization() throws Exception {\n        Directory dir = newDirectory();\n        final Sort sort = new Sort(new SortField(\"rank\", SortField.Type.INT));\n        IndexWriterConfig iwc = newIndexWriterConfig()\n            .setIndexSort(sort);\n        RandomIndexWriter w = new RandomIndexWriter(random(), dir, iwc);\n        Document doc = new Document();\n        w.addDocument(doc);\n        w.close();\n\n        IndexReader reader = DirectoryReader.open(dir);\n        IndexSearcher contextSearcher = getAssertingEarlyTerminationSearcher(reader, 0);\n        TestSearchContext context = new TestSearchContext(null, indexShard);\n        context.parsedQuery(new ParsedQuery(new MatchAllDocsQuery()));\n        context.setSize(0);\n        context.setTask(new SearchTask(123L, \"\", \"\", \"\", null, Collections.emptyMap()));\n        QueryPhase.execute(context, contextSearcher, checkCancelled -> {});\n        assertEquals(1, context.queryResult().topDocs().totalHits);\n        assertThat(context.queryResult().topDocs().getMaxScore(), equalTo(Float.NaN));\n\n        contextSearcher = new IndexSearcher(reader);\n        context.minimumScore(100);\n        QueryPhase.execute(context, contextSearcher, checkCancelled -> {});\n        assertEquals(0, context.queryResult().topDocs().totalHits);\n        assertThat(context.queryResult().topDocs().getMaxScore(), equalTo(Float.NaN));\n        reader.close();\n        dir.close();\n    }\n","realPath":"server/src/test/java/org/elasticsearch/search/query/QueryPhaseTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":214,"status":"M"}],"commitId":"017ffe5d127ce0fb33feb8fc4e5fededb8cbfda1","commitMessage":"@@@Merge branch 'master' into index-lifecycle\n","date":"2018-09-07 17:59:10","modifiedFileCount":"370","status":"M","submitter":"Colin Goodheart-Smithe"},{"authorTime":"2019-11-26 22:07:39","codes":[{"authorDate":"2019-11-26 22:07:39","commitOrder":4,"curCode":"    public void testPostFilterDisablesCountOptimization() throws Exception {\n        Directory dir = newDirectory();\n        final Sort sort = new Sort(new SortField(\"rank\", SortField.Type.INT));\n        IndexWriterConfig iwc = newIndexWriterConfig()\n            .setIndexSort(sort);\n        RandomIndexWriter w = new RandomIndexWriter(random(), dir, iwc);\n        Document doc = new Document();\n        w.addDocument(doc);\n        w.close();\n\n        IndexReader reader = DirectoryReader.open(dir);\n        TestSearchContext context =\n            new TestSearchContext(null, indexShard, newEarlyTerminationContextSearcher(reader, 0));\n        context.setTask(new SearchTask(123L, \"\", \"\", \"\", null, Collections.emptyMap()));\n        context.parsedQuery(new ParsedQuery(new MatchAllDocsQuery()));\n\n        QueryPhase.executeInternal(context);\n        assertEquals(1, context.queryResult().topDocs().topDocs.totalHits.value);\n\n        context.setSearcher(newContextSearcher(reader));\n        context.parsedPostFilter(new ParsedQuery(new MatchNoDocsQuery()));\n        QueryPhase.executeInternal(context);\n        assertEquals(0, context.queryResult().topDocs().topDocs.totalHits.value);\n        reader.close();\n        dir.close();\n    }\n","date":"2019-11-26 22:07:39","endLine":228,"groupId":"28545","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"testPostFilterDisablesCountOptimization","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/3f/83848620462edd2eb7bc5a8666a1c264fc6ad6.src","preCode":"    public void testPostFilterDisablesCountOptimization() throws Exception {\n        Directory dir = newDirectory();\n        final Sort sort = new Sort(new SortField(\"rank\", SortField.Type.INT));\n        IndexWriterConfig iwc = newIndexWriterConfig()\n            .setIndexSort(sort);\n        RandomIndexWriter w = new RandomIndexWriter(random(), dir, iwc);\n        Document doc = new Document();\n        w.addDocument(doc);\n        w.close();\n\n        IndexReader reader = DirectoryReader.open(dir);\n        IndexSearcher contextSearcher = getAssertingEarlyTerminationSearcher(reader, 0);\n        TestSearchContext context = new TestSearchContext(null, indexShard);\n        context.setTask(new SearchTask(123L, \"\", \"\", \"\", null, Collections.emptyMap()));\n        context.parsedQuery(new ParsedQuery(new MatchAllDocsQuery()));\n\n        QueryPhase.execute(context, contextSearcher, checkCancelled -> {});\n        assertEquals(1, context.queryResult().topDocs().topDocs.totalHits.value);\n\n        contextSearcher = new IndexSearcher(reader);\n        context.parsedPostFilter(new ParsedQuery(new MatchNoDocsQuery()));\n        QueryPhase.execute(context, contextSearcher, checkCancelled -> {});\n        assertEquals(0, context.queryResult().topDocs().topDocs.totalHits.value);\n        reader.close();\n        dir.close();\n    }\n","realPath":"server/src/test/java/org/elasticsearch/search/query/QueryPhaseTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":203,"status":"M"},{"authorDate":"2019-11-26 22:07:39","commitOrder":4,"curCode":"    public void testMinScoreDisablesCountOptimization() throws Exception {\n        Directory dir = newDirectory();\n        final Sort sort = new Sort(new SortField(\"rank\", SortField.Type.INT));\n        IndexWriterConfig iwc = newIndexWriterConfig()\n            .setIndexSort(sort);\n        RandomIndexWriter w = new RandomIndexWriter(random(), dir, iwc);\n        Document doc = new Document();\n        w.addDocument(doc);\n        w.close();\n\n        IndexReader reader = DirectoryReader.open(dir);\n        TestSearchContext context =\n            new TestSearchContext(null, indexShard, newEarlyTerminationContextSearcher(reader, 0));\n        context.parsedQuery(new ParsedQuery(new MatchAllDocsQuery()));\n        context.setSize(0);\n        context.setTask(new SearchTask(123L, \"\", \"\", \"\", null, Collections.emptyMap()));\n        QueryPhase.executeInternal(context);\n        assertEquals(1, context.queryResult().topDocs().topDocs.totalHits.value);\n\n        context.minimumScore(100);\n        QueryPhase.executeInternal(context);\n        assertEquals(0, context.queryResult().topDocs().topDocs.totalHits.value);\n        reader.close();\n        dir.close();\n    }\n","date":"2019-11-26 22:07:39","endLine":283,"groupId":"68024","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"testMinScoreDisablesCountOptimization","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/3f/83848620462edd2eb7bc5a8666a1c264fc6ad6.src","preCode":"    public void testMinScoreDisablesCountOptimization() throws Exception {\n        Directory dir = newDirectory();\n        final Sort sort = new Sort(new SortField(\"rank\", SortField.Type.INT));\n        IndexWriterConfig iwc = newIndexWriterConfig()\n            .setIndexSort(sort);\n        RandomIndexWriter w = new RandomIndexWriter(random(), dir, iwc);\n        Document doc = new Document();\n        w.addDocument(doc);\n        w.close();\n\n        IndexReader reader = DirectoryReader.open(dir);\n        IndexSearcher contextSearcher = getAssertingEarlyTerminationSearcher(reader, 0);\n        TestSearchContext context = new TestSearchContext(null, indexShard);\n        context.parsedQuery(new ParsedQuery(new MatchAllDocsQuery()));\n        context.setSize(0);\n        context.setTask(new SearchTask(123L, \"\", \"\", \"\", null, Collections.emptyMap()));\n        QueryPhase.execute(context, contextSearcher, checkCancelled -> {});\n        assertEquals(1, context.queryResult().topDocs().topDocs.totalHits.value);\n\n        contextSearcher = new IndexSearcher(reader);\n        context.minimumScore(100);\n        QueryPhase.execute(context, contextSearcher, checkCancelled -> {});\n        assertEquals(0, context.queryResult().topDocs().topDocs.totalHits.value);\n        reader.close();\n        dir.close();\n    }\n","realPath":"server/src/test/java/org/elasticsearch/search/query/QueryPhaseTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":259,"status":"M"}],"commitId":"79d9b365c4cd5a7e00b389f43c06380d9040a02d","commitMessage":"@@@Optimize sort on long field (#48804)\n\n* Optimize sort on numeric long and date fields (#39770)\n\nOptimize sort on numeric long and date fields.  when \nthe system property `es.search.long_sort_optimized` is true.\n\n* Skip optimization if the index has duplicate data (#43121)\n\nSkip sort optimization if the index has 50% or more data\nwith the same value.\nWhen index has a lot of docs with the same value.  sort\noptimization doesn't make sense.  as DistanceFeatureQuery\nwill produce same scores for these docs.  and Lucene\nwill use the second sort to tie-break. This could be slower\nthan usual sorting.\n\n* Sort leaves on search according to the primary numeric sort field (#44021)\n\nThis change pre-sort the index reader leaves (segment) prior to search\nwhen the primary sort is a numeric field eligible to the distance feature\noptimization. It also adds a tie breaker on `_doc` to the rewritten sort\nin order to bypass the fact that leaves will be collected in a random order.\nI ran this patch on the http_logs benchmark and the results are very promising:\n\n```\n|                                       50th percentile latency | desc_sort_timestamp |    220.706 |      136544 |   136324 |     ms |\n|                                       90th percentile latency | desc_sort_timestamp |    244.847 |      162084 |   161839 |     ms |\n|                                       99th percentile latency | desc_sort_timestamp |    316.627 |      172005 |   171688 |     ms |\n|                                      100th percentile latency | desc_sort_timestamp |    335.306 |      173325 |   172989 |     ms |\n|                                  50th percentile service time | desc_sort_timestamp |    218.369 |     1968.11 |  1749.74 |     ms |\n|                                  90th percentile service time | desc_sort_timestamp |    244.182 |      2447.2 |  2203.02 |     ms |\n|                                  99th percentile service time | desc_sort_timestamp |    313.176 |     2950.85 |  2637.67 |     ms |\n|                                 100th percentile service time | desc_sort_timestamp |    332.924 |     2959.38 |  2626.45 |     ms |\n|                                                    error rate | desc_sort_timestamp |          0 |           0 |        0 |      % |\n|                                                Min Throughput |  asc_sort_timestamp |   0.801824 |    0.800855 | -0.00097 |  ops/s |\n|                                             Median Throughput |  asc_sort_timestamp |   0.802595 |    0.801104 | -0.00149 |  ops/s |\n|                                                Max Throughput |  asc_sort_timestamp |   0.803282 |    0.801351 | -0.00193 |  ops/s |\n|                                       50th percentile latency |  asc_sort_timestamp |    220.761 |     824.098 |  603.336 |     ms |\n|                                       90th percentile latency |  asc_sort_timestamp |    251.741 |     853.984 |  602.243 |     ms |\n|                                       99th percentile latency |  asc_sort_timestamp |    368.761 |     893.943 |  525.182 |     ms |\n|                                      100th percentile latency |  asc_sort_timestamp |    431.042 |      908.85 |  477.808 |     ms |\n|                                  50th percentile service time |  asc_sort_timestamp |    218.547 |     820.757 |  602.211 |     ms |\n|                                  90th percentile service time |  asc_sort_timestamp |    249.578 |     849.886 |  600.308 |     ms |\n|                                  99th percentile service time |  asc_sort_timestamp |    366.317 |     888.894 |  522.577 |     ms |\n|                                 100th percentile service time |  asc_sort_timestamp |    430.952 |     908.401 |   477.45 |     ms |\n|                                                    error rate |  asc_sort_timestamp |          0 |           0 |        0 |      % |\n```\n\nSo roughly 10x faster for the descending sort and 2-3x faster in the ascending case. Note\nthat I indexed the http_logs with a single client in order to simulate real time-based indices\nwhere document are indexed in their timestamp order.\n\nRelates #37043\n\n* Remove nested collector in docs response\n\nAs we don't use cancellableCollector anymore.  it should be removed from\nthe expected docs response.\n\n* Use collector manager for search when necessary (#45829)\n\nWhen we optimize sort.  we sort segments by their min/max value.\nAs a collector expects to have segments in order. \nwe can not use a single collector for sorted segments.\nThus for such a case.  we use collectorManager. \nwhere for every segment a dedicated collector will be created.\n\n* Use shared TopFieldCollector manager\n\nUse shared TopFieldCollector manager for sort optimization.\nThis collector manager is able to exchange minimum competitive\nscore between collectors\n\n* Correct calculation of avg value to avoid overflow\n\n* Optimize calculating if index has duplicate data\n","date":"2019-11-26 22:07:39","modifiedFileCount":"9","status":"M","submitter":"Mayya Sharipova"},{"authorTime":"2019-11-26 22:23:27","codes":[{"authorDate":"2019-11-26 22:23:27","commitOrder":5,"curCode":"    public void testPostFilterDisablesCountOptimization() throws Exception {\n        Directory dir = newDirectory();\n        final Sort sort = new Sort(new SortField(\"rank\", SortField.Type.INT));\n        IndexWriterConfig iwc = newIndexWriterConfig()\n            .setIndexSort(sort);\n        RandomIndexWriter w = new RandomIndexWriter(random(), dir, iwc);\n        Document doc = new Document();\n        w.addDocument(doc);\n        w.close();\n\n        IndexReader reader = DirectoryReader.open(dir);\n        IndexSearcher contextSearcher = getAssertingEarlyTerminationSearcher(reader, 0);\n        TestSearchContext context = new TestSearchContext(null, indexShard);\n        context.setTask(new SearchTask(123L, \"\", \"\", \"\", null, Collections.emptyMap()));\n        context.parsedQuery(new ParsedQuery(new MatchAllDocsQuery()));\n\n        QueryPhase.execute(context, contextSearcher, checkCancelled -> {});\n        assertEquals(1, context.queryResult().topDocs().topDocs.totalHits.value);\n\n        contextSearcher = new IndexSearcher(reader);\n        context.parsedPostFilter(new ParsedQuery(new MatchNoDocsQuery()));\n        QueryPhase.execute(context, contextSearcher, checkCancelled -> {});\n        assertEquals(0, context.queryResult().topDocs().topDocs.totalHits.value);\n        reader.close();\n        dir.close();\n    }\n","date":"2019-11-26 22:23:27","endLine":213,"groupId":"21166","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"testPostFilterDisablesCountOptimization","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/21/90e573707e637f469de736a6d3563805d3a240.src","preCode":"    public void testPostFilterDisablesCountOptimization() throws Exception {\n        Directory dir = newDirectory();\n        final Sort sort = new Sort(new SortField(\"rank\", SortField.Type.INT));\n        IndexWriterConfig iwc = newIndexWriterConfig()\n            .setIndexSort(sort);\n        RandomIndexWriter w = new RandomIndexWriter(random(), dir, iwc);\n        Document doc = new Document();\n        w.addDocument(doc);\n        w.close();\n\n        IndexReader reader = DirectoryReader.open(dir);\n        TestSearchContext context =\n            new TestSearchContext(null, indexShard, newEarlyTerminationContextSearcher(reader, 0));\n        context.setTask(new SearchTask(123L, \"\", \"\", \"\", null, Collections.emptyMap()));\n        context.parsedQuery(new ParsedQuery(new MatchAllDocsQuery()));\n\n        QueryPhase.executeInternal(context);\n        assertEquals(1, context.queryResult().topDocs().topDocs.totalHits.value);\n\n        context.setSearcher(newContextSearcher(reader));\n        context.parsedPostFilter(new ParsedQuery(new MatchNoDocsQuery()));\n        QueryPhase.executeInternal(context);\n        assertEquals(0, context.queryResult().topDocs().topDocs.totalHits.value);\n        reader.close();\n        dir.close();\n    }\n","realPath":"server/src/test/java/org/elasticsearch/search/query/QueryPhaseTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":188,"status":"M"},{"authorDate":"2019-11-26 22:23:27","commitOrder":5,"curCode":"    public void testMinScoreDisablesCountOptimization() throws Exception {\n        Directory dir = newDirectory();\n        final Sort sort = new Sort(new SortField(\"rank\", SortField.Type.INT));\n        IndexWriterConfig iwc = newIndexWriterConfig()\n            .setIndexSort(sort);\n        RandomIndexWriter w = new RandomIndexWriter(random(), dir, iwc);\n        Document doc = new Document();\n        w.addDocument(doc);\n        w.close();\n\n        IndexReader reader = DirectoryReader.open(dir);\n        IndexSearcher contextSearcher = getAssertingEarlyTerminationSearcher(reader, 0);\n        TestSearchContext context = new TestSearchContext(null, indexShard);\n        context.parsedQuery(new ParsedQuery(new MatchAllDocsQuery()));\n        context.setSize(0);\n        context.setTask(new SearchTask(123L, \"\", \"\", \"\", null, Collections.emptyMap()));\n        QueryPhase.execute(context, contextSearcher, checkCancelled -> {});\n        assertEquals(1, context.queryResult().topDocs().topDocs.totalHits.value);\n\n        contextSearcher = new IndexSearcher(reader);\n        context.minimumScore(100);\n        QueryPhase.execute(context, contextSearcher, checkCancelled -> {});\n        assertEquals(0, context.queryResult().topDocs().topDocs.totalHits.value);\n        reader.close();\n        dir.close();\n    }\n","date":"2019-11-26 22:23:27","endLine":270,"groupId":"21159","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"testMinScoreDisablesCountOptimization","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/21/90e573707e637f469de736a6d3563805d3a240.src","preCode":"    public void testMinScoreDisablesCountOptimization() throws Exception {\n        Directory dir = newDirectory();\n        final Sort sort = new Sort(new SortField(\"rank\", SortField.Type.INT));\n        IndexWriterConfig iwc = newIndexWriterConfig()\n            .setIndexSort(sort);\n        RandomIndexWriter w = new RandomIndexWriter(random(), dir, iwc);\n        Document doc = new Document();\n        w.addDocument(doc);\n        w.close();\n\n        IndexReader reader = DirectoryReader.open(dir);\n        TestSearchContext context =\n            new TestSearchContext(null, indexShard, newEarlyTerminationContextSearcher(reader, 0));\n        context.parsedQuery(new ParsedQuery(new MatchAllDocsQuery()));\n        context.setSize(0);\n        context.setTask(new SearchTask(123L, \"\", \"\", \"\", null, Collections.emptyMap()));\n        QueryPhase.executeInternal(context);\n        assertEquals(1, context.queryResult().topDocs().topDocs.totalHits.value);\n\n        context.minimumScore(100);\n        QueryPhase.executeInternal(context);\n        assertEquals(0, context.queryResult().topDocs().topDocs.totalHits.value);\n        reader.close();\n        dir.close();\n    }\n","realPath":"server/src/test/java/org/elasticsearch/search/query/QueryPhaseTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":245,"status":"M"}],"commitId":"e9ba2521768c03669d305b9340404f723289563a","commitMessage":"@@@Revert \"Optimize sort on long field (#48804)\"\n\nThis reverts commit 79d9b365c4cd5a7e00b389f43c06380d9040a02d.\n","date":"2019-11-26 22:23:27","modifiedFileCount":"9","status":"M","submitter":"Mayya Sharipova"},{"authorTime":"2019-11-26 22:07:39","codes":[{"authorDate":"2019-11-26 22:07:39","commitOrder":6,"curCode":"    public void testPostFilterDisablesCountOptimization() throws Exception {\n        Directory dir = newDirectory();\n        final Sort sort = new Sort(new SortField(\"rank\", SortField.Type.INT));\n        IndexWriterConfig iwc = newIndexWriterConfig()\n            .setIndexSort(sort);\n        RandomIndexWriter w = new RandomIndexWriter(random(), dir, iwc);\n        Document doc = new Document();\n        w.addDocument(doc);\n        w.close();\n\n        IndexReader reader = DirectoryReader.open(dir);\n        TestSearchContext context =\n            new TestSearchContext(null, indexShard, newEarlyTerminationContextSearcher(reader, 0));\n        context.setTask(new SearchTask(123L, \"\", \"\", \"\", null, Collections.emptyMap()));\n        context.parsedQuery(new ParsedQuery(new MatchAllDocsQuery()));\n\n        QueryPhase.executeInternal(context);\n        assertEquals(1, context.queryResult().topDocs().topDocs.totalHits.value);\n\n        context.setSearcher(newContextSearcher(reader));\n        context.parsedPostFilter(new ParsedQuery(new MatchNoDocsQuery()));\n        QueryPhase.executeInternal(context);\n        assertEquals(0, context.queryResult().topDocs().topDocs.totalHits.value);\n        reader.close();\n        dir.close();\n    }\n","date":"2019-11-26 22:24:25","endLine":228,"groupId":"28545","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"testPostFilterDisablesCountOptimization","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/3f/83848620462edd2eb7bc5a8666a1c264fc6ad6.src","preCode":"    public void testPostFilterDisablesCountOptimization() throws Exception {\n        Directory dir = newDirectory();\n        final Sort sort = new Sort(new SortField(\"rank\", SortField.Type.INT));\n        IndexWriterConfig iwc = newIndexWriterConfig()\n            .setIndexSort(sort);\n        RandomIndexWriter w = new RandomIndexWriter(random(), dir, iwc);\n        Document doc = new Document();\n        w.addDocument(doc);\n        w.close();\n\n        IndexReader reader = DirectoryReader.open(dir);\n        IndexSearcher contextSearcher = getAssertingEarlyTerminationSearcher(reader, 0);\n        TestSearchContext context = new TestSearchContext(null, indexShard);\n        context.setTask(new SearchTask(123L, \"\", \"\", \"\", null, Collections.emptyMap()));\n        context.parsedQuery(new ParsedQuery(new MatchAllDocsQuery()));\n\n        QueryPhase.execute(context, contextSearcher, checkCancelled -> {});\n        assertEquals(1, context.queryResult().topDocs().topDocs.totalHits.value);\n\n        contextSearcher = new IndexSearcher(reader);\n        context.parsedPostFilter(new ParsedQuery(new MatchNoDocsQuery()));\n        QueryPhase.execute(context, contextSearcher, checkCancelled -> {});\n        assertEquals(0, context.queryResult().topDocs().topDocs.totalHits.value);\n        reader.close();\n        dir.close();\n    }\n","realPath":"server/src/test/java/org/elasticsearch/search/query/QueryPhaseTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":203,"status":"M"},{"authorDate":"2019-11-26 22:07:39","commitOrder":6,"curCode":"    public void testMinScoreDisablesCountOptimization() throws Exception {\n        Directory dir = newDirectory();\n        final Sort sort = new Sort(new SortField(\"rank\", SortField.Type.INT));\n        IndexWriterConfig iwc = newIndexWriterConfig()\n            .setIndexSort(sort);\n        RandomIndexWriter w = new RandomIndexWriter(random(), dir, iwc);\n        Document doc = new Document();\n        w.addDocument(doc);\n        w.close();\n\n        IndexReader reader = DirectoryReader.open(dir);\n        TestSearchContext context =\n            new TestSearchContext(null, indexShard, newEarlyTerminationContextSearcher(reader, 0));\n        context.parsedQuery(new ParsedQuery(new MatchAllDocsQuery()));\n        context.setSize(0);\n        context.setTask(new SearchTask(123L, \"\", \"\", \"\", null, Collections.emptyMap()));\n        QueryPhase.executeInternal(context);\n        assertEquals(1, context.queryResult().topDocs().topDocs.totalHits.value);\n\n        context.minimumScore(100);\n        QueryPhase.executeInternal(context);\n        assertEquals(0, context.queryResult().topDocs().topDocs.totalHits.value);\n        reader.close();\n        dir.close();\n    }\n","date":"2019-11-26 22:24:25","endLine":283,"groupId":"68024","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"testMinScoreDisablesCountOptimization","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/3f/83848620462edd2eb7bc5a8666a1c264fc6ad6.src","preCode":"    public void testMinScoreDisablesCountOptimization() throws Exception {\n        Directory dir = newDirectory();\n        final Sort sort = new Sort(new SortField(\"rank\", SortField.Type.INT));\n        IndexWriterConfig iwc = newIndexWriterConfig()\n            .setIndexSort(sort);\n        RandomIndexWriter w = new RandomIndexWriter(random(), dir, iwc);\n        Document doc = new Document();\n        w.addDocument(doc);\n        w.close();\n\n        IndexReader reader = DirectoryReader.open(dir);\n        IndexSearcher contextSearcher = getAssertingEarlyTerminationSearcher(reader, 0);\n        TestSearchContext context = new TestSearchContext(null, indexShard);\n        context.parsedQuery(new ParsedQuery(new MatchAllDocsQuery()));\n        context.setSize(0);\n        context.setTask(new SearchTask(123L, \"\", \"\", \"\", null, Collections.emptyMap()));\n        QueryPhase.execute(context, contextSearcher, checkCancelled -> {});\n        assertEquals(1, context.queryResult().topDocs().topDocs.totalHits.value);\n\n        contextSearcher = new IndexSearcher(reader);\n        context.minimumScore(100);\n        QueryPhase.execute(context, contextSearcher, checkCancelled -> {});\n        assertEquals(0, context.queryResult().topDocs().topDocs.totalHits.value);\n        reader.close();\n        dir.close();\n    }\n","realPath":"server/src/test/java/org/elasticsearch/search/query/QueryPhaseTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":259,"status":"M"}],"commitId":"fa8b48deefbec1eb58161252552628a1a0866e5f","commitMessage":"@@@Optimize sort on numeric long and date fields.\n\nThis rewrites long sort as a `DistanceFeatureQuery`.  which can\nefficiently skip non-competitive blocks and segments of documents.\nDepending on the dataset.  the speedups can be 2 - 10 times.\n\nThe optimization can be disabled with setting the system property\n`es.search.rewrite_sort` to `false`.\n\nOptimization is skipped when an index has 50% or more data with\nthe same value.\n\nOptimization is done through:\n1. Rewriting sort as `DistanceFeatureQuery` which can\nefficiently skip non-competitive blocks and segments of documents.\n\n2. Sorting segments according to the primary numeric sort field(#44021)\nThis allows to skip non-competitive segments.\n\n3. Using collector manager.\nWhen we optimize sort.  we sort segments by their min/max value.\nAs a collector expects to have segments in order. \nwe can not use a single collector for sorted segments.\nWe use collectorManager.  where for every segment a dedicated collector\nwill be created.\n\n4. Using Lucene's shared TopFieldCollector manager\nThis collector manager is able to exchange minimum competitive\nscore between collectors.  which allows us to efficiently skip\nthe whole segments that don't contain competitive scores.\n\n5. When index is force merged to a single segment.  #48533 interleaving\nold and new segments allows for this optimization as well. \nas blocks with non-competitive docs can be skipped.\n\nCloses #37043\n\nCo-authored-by: Jim Ferenczi <jim.ferenczi@elastic.co>\n","date":"2019-11-26 22:24:25","modifiedFileCount":"9","status":"M","submitter":"Mayya Sharipova"},{"authorTime":"2019-11-28 21:35:35","codes":[{"authorDate":"2019-11-28 21:35:35","commitOrder":7,"curCode":"    public void testPostFilterDisablesCountOptimization() throws Exception {\n        Directory dir = newDirectory();\n        final Sort sort = new Sort(new SortField(\"rank\", SortField.Type.INT));\n        IndexWriterConfig iwc = newIndexWriterConfig()\n            .setIndexSort(sort);\n        RandomIndexWriter w = new RandomIndexWriter(random(), dir, iwc);\n        Document doc = new Document();\n        w.addDocument(doc);\n        w.close();\n\n        IndexReader reader = DirectoryReader.open(dir);\n        TestSearchContext context =\n            new TestSearchContext(null, indexShard, newEarlyTerminationContextSearcher(reader, 0));\n        context.setTask(new SearchShardTask(123L, \"\", \"\", \"\", null, Collections.emptyMap()));\n        context.parsedQuery(new ParsedQuery(new MatchAllDocsQuery()));\n\n        QueryPhase.executeInternal(context);\n        assertEquals(1, context.queryResult().topDocs().topDocs.totalHits.value);\n\n        context.setSearcher(newContextSearcher(reader));\n        context.parsedPostFilter(new ParsedQuery(new MatchNoDocsQuery()));\n        QueryPhase.executeInternal(context);\n        assertEquals(0, context.queryResult().topDocs().topDocs.totalHits.value);\n        reader.close();\n        dir.close();\n    }\n","date":"2019-11-28 21:35:35","endLine":228,"groupId":"104742","id":13,"instanceNumber":1,"isCurCommit":0,"methodName":"testPostFilterDisablesCountOptimization","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/2c/9fc90c22cabe2ba3c8ee25c8f4481c56b0095d.src","preCode":"    public void testPostFilterDisablesCountOptimization() throws Exception {\n        Directory dir = newDirectory();\n        final Sort sort = new Sort(new SortField(\"rank\", SortField.Type.INT));\n        IndexWriterConfig iwc = newIndexWriterConfig()\n            .setIndexSort(sort);\n        RandomIndexWriter w = new RandomIndexWriter(random(), dir, iwc);\n        Document doc = new Document();\n        w.addDocument(doc);\n        w.close();\n\n        IndexReader reader = DirectoryReader.open(dir);\n        TestSearchContext context =\n            new TestSearchContext(null, indexShard, newEarlyTerminationContextSearcher(reader, 0));\n        context.setTask(new SearchTask(123L, \"\", \"\", \"\", null, Collections.emptyMap()));\n        context.parsedQuery(new ParsedQuery(new MatchAllDocsQuery()));\n\n        QueryPhase.executeInternal(context);\n        assertEquals(1, context.queryResult().topDocs().topDocs.totalHits.value);\n\n        context.setSearcher(newContextSearcher(reader));\n        context.parsedPostFilter(new ParsedQuery(new MatchNoDocsQuery()));\n        QueryPhase.executeInternal(context);\n        assertEquals(0, context.queryResult().topDocs().topDocs.totalHits.value);\n        reader.close();\n        dir.close();\n    }\n","realPath":"server/src/test/java/org/elasticsearch/search/query/QueryPhaseTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":203,"status":"M"},{"authorDate":"2019-11-28 21:35:35","commitOrder":7,"curCode":"    public void testMinScoreDisablesCountOptimization() throws Exception {\n        Directory dir = newDirectory();\n        final Sort sort = new Sort(new SortField(\"rank\", SortField.Type.INT));\n        IndexWriterConfig iwc = newIndexWriterConfig()\n            .setIndexSort(sort);\n        RandomIndexWriter w = new RandomIndexWriter(random(), dir, iwc);\n        Document doc = new Document();\n        w.addDocument(doc);\n        w.close();\n\n        IndexReader reader = DirectoryReader.open(dir);\n        TestSearchContext context =\n            new TestSearchContext(null, indexShard, newEarlyTerminationContextSearcher(reader, 0));\n        context.parsedQuery(new ParsedQuery(new MatchAllDocsQuery()));\n        context.setSize(0);\n        context.setTask(new SearchShardTask(123L, \"\", \"\", \"\", null, Collections.emptyMap()));\n        QueryPhase.executeInternal(context);\n        assertEquals(1, context.queryResult().topDocs().topDocs.totalHits.value);\n\n        context.minimumScore(100);\n        QueryPhase.executeInternal(context);\n        assertEquals(0, context.queryResult().topDocs().topDocs.totalHits.value);\n        reader.close();\n        dir.close();\n    }\n","date":"2019-11-28 21:35:35","endLine":283,"groupId":"104742","id":14,"instanceNumber":2,"isCurCommit":0,"methodName":"testMinScoreDisablesCountOptimization","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/2c/9fc90c22cabe2ba3c8ee25c8f4481c56b0095d.src","preCode":"    public void testMinScoreDisablesCountOptimization() throws Exception {\n        Directory dir = newDirectory();\n        final Sort sort = new Sort(new SortField(\"rank\", SortField.Type.INT));\n        IndexWriterConfig iwc = newIndexWriterConfig()\n            .setIndexSort(sort);\n        RandomIndexWriter w = new RandomIndexWriter(random(), dir, iwc);\n        Document doc = new Document();\n        w.addDocument(doc);\n        w.close();\n\n        IndexReader reader = DirectoryReader.open(dir);\n        TestSearchContext context =\n            new TestSearchContext(null, indexShard, newEarlyTerminationContextSearcher(reader, 0));\n        context.parsedQuery(new ParsedQuery(new MatchAllDocsQuery()));\n        context.setSize(0);\n        context.setTask(new SearchTask(123L, \"\", \"\", \"\", null, Collections.emptyMap()));\n        QueryPhase.executeInternal(context);\n        assertEquals(1, context.queryResult().topDocs().topDocs.totalHits.value);\n\n        context.minimumScore(100);\n        QueryPhase.executeInternal(context);\n        assertEquals(0, context.queryResult().topDocs().topDocs.totalHits.value);\n        reader.close();\n        dir.close();\n    }\n","realPath":"server/src/test/java/org/elasticsearch/search/query/QueryPhaseTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":259,"status":"M"}],"commitId":"cab99c036a665f6864dbb38fdf7059b03b0ea767","commitMessage":"@@@Add a listener to track the progress of a search request locally (#49471)\n\nThis commit adds a function in NodeClient that allows to track the progress\nof a search request locally. Progress is tracked through a SearchProgressListener\nthat exposes query and fetch responses as well as partial and final reduces.\nThis new method can be used by modules/plugins inside a node in order to track the\nprogress of a local search request.\n\nRelates #49091","date":"2019-11-28 21:35:35","modifiedFileCount":"28","status":"M","submitter":"Jim Ferenczi"}]
