[{"authorTime":"2021-06-08 06:05:30","codes":[{"authorDate":"2021-06-08 06:05:30","commitOrder":5,"curCode":"        public RootObjectMapper.Builder parse(String name, Map<String, Object> node, ParserContext parserContext)\n            throws MapperParsingException {\n            RootObjectMapper.Builder builder = new Builder(name);\n            Iterator<Map.Entry<String, Object>> iterator = node.entrySet().iterator();\n            while (iterator.hasNext()) {\n                Map.Entry<String, Object> entry = iterator.next();\n                String fieldName = entry.getKey();\n                Object fieldNode = entry.getValue();\n                if (parseObjectOrDocumentTypeProperties(fieldName, fieldNode, parserContext, builder)\n                        || processField(builder, fieldName, fieldNode, parserContext)) {\n                    iterator.remove();\n                }\n            }\n            return builder;\n        }\n","date":"2021-06-08 06:05:30","endLine":124,"groupId":"9999","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"parse","params":"(Stringname@Map<String@Object>node@ParserContextparserContext)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/db/fde93c7863497020b4be1749bd31d10ae949a6.src","preCode":"        public RootObjectMapper.Builder parse(String name, Map<String, Object> node, ParserContext parserContext)\n            throws MapperParsingException {\n            RootObjectMapper.Builder builder = new Builder(name);\n            Iterator<Map.Entry<String, Object>> iterator = node.entrySet().iterator();\n            while (iterator.hasNext()) {\n                Map.Entry<String, Object> entry = iterator.next();\n                String fieldName = entry.getKey();\n                Object fieldNode = entry.getValue();\n                if (parseObjectOrDocumentTypeProperties(fieldName, fieldNode, parserContext, builder)\n                        || processField(builder, fieldName, fieldNode, parserContext)) {\n                    iterator.remove();\n                }\n            }\n            return builder;\n        }\n","realPath":"server/src/main/java/org/elasticsearch/index/mapper/RootObjectMapper.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":110,"status":"MB"},{"authorDate":"2021-06-08 06:05:30","commitOrder":5,"curCode":"        public Mapper.Builder parse(String name, Map<String, Object> node, ParserContext parserContext) throws MapperParsingException {\n            NestedObjectMapper.Builder builder = new NestedObjectMapper.Builder(name, parserContext.indexVersionCreated());\n            parseNested(name, node, builder);\n            for (Iterator<Map.Entry<String, Object>> iterator = node.entrySet().iterator(); iterator.hasNext();) {\n                Map.Entry<String, Object> entry = iterator.next();\n                String fieldName = entry.getKey();\n                Object fieldNode = entry.getValue();\n                if (parseObjectOrDocumentTypeProperties(fieldName, fieldNode, parserContext, builder)) {\n                    iterator.remove();\n                }\n            }\n            return builder;\n        }\n","date":"2021-06-08 06:05:30","endLine":92,"groupId":"60004","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"parse","params":"(Stringname@Map<String@Object>node@ParserContextparserContext)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/bf/a454dfee69d0b4c8a10e64067dfbd502af58f9.src","preCode":"        public Mapper.Builder parse(String name, Map<String, Object> node, ParserContext parserContext) throws MapperParsingException {\n            NestedObjectMapper.Builder builder = new NestedObjectMapper.Builder(name, parserContext.indexVersionCreated());\n            parseNested(name, node, builder);\n            for (Iterator<Map.Entry<String, Object>> iterator = node.entrySet().iterator(); iterator.hasNext();) {\n                Map.Entry<String, Object> entry = iterator.next();\n                String fieldName = entry.getKey();\n                Object fieldNode = entry.getValue();\n                if (parseObjectOrDocumentTypeProperties(fieldName, fieldNode, parserContext, builder)) {\n                    iterator.remove();\n                }\n            }\n            return builder;\n        }\n","realPath":"server/src/main/java/org/elasticsearch/index/mapper/NestedObjectMapper.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":80,"status":"B"}],"commitId":"ad111598867545d0dbeae60c6d24dfcd502c0c26","commitMessage":"@@@Merge remote-tracking branch 'elastic/master' into feature/vector-tiles\n","date":"2021-06-08 06:05:30","modifiedFileCount":"156","status":"M","submitter":"Igor Motov"},{"authorTime":"2021-06-08 06:05:30","codes":[{"authorDate":"2021-06-17 05:31:31","commitOrder":6,"curCode":"        public RootObjectMapper.Builder parse(String name, Map<String, Object> node, ParserContext parserContext)\n            throws MapperParsingException {\n            RootObjectMapper.Builder builder = new Builder(name, parserContext.indexVersionCreated());\n            Iterator<Map.Entry<String, Object>> iterator = node.entrySet().iterator();\n            while (iterator.hasNext()) {\n                Map.Entry<String, Object> entry = iterator.next();\n                String fieldName = entry.getKey();\n                Object fieldNode = entry.getValue();\n                if (parseObjectOrDocumentTypeProperties(fieldName, fieldNode, parserContext, builder)\n                        || processField(builder, fieldName, fieldNode, parserContext)) {\n                    iterator.remove();\n                }\n            }\n            return builder;\n        }\n","date":"2021-06-17 05:31:31","endLine":159,"groupId":"9999","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"parse","params":"(Stringname@Map<String@Object>node@ParserContextparserContext)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/b5/6b9cadb40a115846d4d090210592f9e34c7694.src","preCode":"        public RootObjectMapper.Builder parse(String name, Map<String, Object> node, ParserContext parserContext)\n            throws MapperParsingException {\n            RootObjectMapper.Builder builder = new Builder(name);\n            Iterator<Map.Entry<String, Object>> iterator = node.entrySet().iterator();\n            while (iterator.hasNext()) {\n                Map.Entry<String, Object> entry = iterator.next();\n                String fieldName = entry.getKey();\n                Object fieldNode = entry.getValue();\n                if (parseObjectOrDocumentTypeProperties(fieldName, fieldNode, parserContext, builder)\n                        || processField(builder, fieldName, fieldNode, parserContext)) {\n                    iterator.remove();\n                }\n            }\n            return builder;\n        }\n","realPath":"server/src/main/java/org/elasticsearch/index/mapper/RootObjectMapper.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":145,"status":"M"},{"authorDate":"2021-06-08 06:05:30","commitOrder":6,"curCode":"        public Mapper.Builder parse(String name, Map<String, Object> node, ParserContext parserContext) throws MapperParsingException {\n            NestedObjectMapper.Builder builder = new NestedObjectMapper.Builder(name, parserContext.indexVersionCreated());\n            parseNested(name, node, builder);\n            for (Iterator<Map.Entry<String, Object>> iterator = node.entrySet().iterator(); iterator.hasNext();) {\n                Map.Entry<String, Object> entry = iterator.next();\n                String fieldName = entry.getKey();\n                Object fieldNode = entry.getValue();\n                if (parseObjectOrDocumentTypeProperties(fieldName, fieldNode, parserContext, builder)) {\n                    iterator.remove();\n                }\n            }\n            return builder;\n        }\n","date":"2021-06-08 06:05:30","endLine":92,"groupId":"60004","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"parse","params":"(Stringname@Map<String@Object>node@ParserContextparserContext)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/bf/a454dfee69d0b4c8a10e64067dfbd502af58f9.src","preCode":"        public Mapper.Builder parse(String name, Map<String, Object> node, ParserContext parserContext) throws MapperParsingException {\n            NestedObjectMapper.Builder builder = new NestedObjectMapper.Builder(name, parserContext.indexVersionCreated());\n            parseNested(name, node, builder);\n            for (Iterator<Map.Entry<String, Object>> iterator = node.entrySet().iterator(); iterator.hasNext();) {\n                Map.Entry<String, Object> entry = iterator.next();\n                String fieldName = entry.getKey();\n                Object fieldNode = entry.getValue();\n                if (parseObjectOrDocumentTypeProperties(fieldName, fieldNode, parserContext, builder)) {\n                    iterator.remove();\n                }\n            }\n            return builder;\n        }\n","realPath":"server/src/main/java/org/elasticsearch/index/mapper/NestedObjectMapper.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":80,"status":"N"}],"commitId":"6a8f8f3f718bd21bf14176049c9e1f1def13463b","commitMessage":"@@@Merge remote-tracking branch 'elastic/master' into feature/vector-tiles\n","date":"2021-06-17 05:31:31","modifiedFileCount":"4429","status":"M","submitter":"Igor Motov"},{"authorTime":"2021-06-08 06:05:30","codes":[{"authorDate":"2021-06-23 15:28:56","commitOrder":7,"curCode":"        public RootObjectMapper.Builder parse(String name, Map<String, Object> node, MappingParserContext parserContext)\n            throws MapperParsingException {\n            RootObjectMapper.Builder builder = new Builder(name, parserContext.indexVersionCreated());\n            Iterator<Map.Entry<String, Object>> iterator = node.entrySet().iterator();\n            while (iterator.hasNext()) {\n                Map.Entry<String, Object> entry = iterator.next();\n                String fieldName = entry.getKey();\n                Object fieldNode = entry.getValue();\n                if (parseObjectOrDocumentTypeProperties(fieldName, fieldNode, parserContext, builder)\n                        || processField(builder, fieldName, fieldNode, parserContext)) {\n                    iterator.remove();\n                }\n            }\n            return builder;\n        }\n","date":"2021-06-23 15:28:56","endLine":159,"groupId":"9999","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"parse","params":"(Stringname@Map<String@Object>node@MappingParserContextparserContext)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/2a/c7e97011037a4479d13713595bdfd45d32083e.src","preCode":"        public RootObjectMapper.Builder parse(String name, Map<String, Object> node, ParserContext parserContext)\n            throws MapperParsingException {\n            RootObjectMapper.Builder builder = new Builder(name, parserContext.indexVersionCreated());\n            Iterator<Map.Entry<String, Object>> iterator = node.entrySet().iterator();\n            while (iterator.hasNext()) {\n                Map.Entry<String, Object> entry = iterator.next();\n                String fieldName = entry.getKey();\n                Object fieldNode = entry.getValue();\n                if (parseObjectOrDocumentTypeProperties(fieldName, fieldNode, parserContext, builder)\n                        || processField(builder, fieldName, fieldNode, parserContext)) {\n                    iterator.remove();\n                }\n            }\n            return builder;\n        }\n","realPath":"server/src/main/java/org/elasticsearch/index/mapper/RootObjectMapper.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":145,"status":"M"},{"authorDate":"2021-06-08 06:05:30","commitOrder":7,"curCode":"        public Mapper.Builder parse(String name, Map<String, Object> node, ParserContext parserContext) throws MapperParsingException {\n            NestedObjectMapper.Builder builder = new NestedObjectMapper.Builder(name, parserContext.indexVersionCreated());\n            parseNested(name, node, builder);\n            for (Iterator<Map.Entry<String, Object>> iterator = node.entrySet().iterator(); iterator.hasNext();) {\n                Map.Entry<String, Object> entry = iterator.next();\n                String fieldName = entry.getKey();\n                Object fieldNode = entry.getValue();\n                if (parseObjectOrDocumentTypeProperties(fieldName, fieldNode, parserContext, builder)) {\n                    iterator.remove();\n                }\n            }\n            return builder;\n        }\n","date":"2021-06-08 06:05:30","endLine":92,"groupId":"60004","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"parse","params":"(Stringname@Map<String@Object>node@ParserContextparserContext)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/bf/a454dfee69d0b4c8a10e64067dfbd502af58f9.src","preCode":"        public Mapper.Builder parse(String name, Map<String, Object> node, ParserContext parserContext) throws MapperParsingException {\n            NestedObjectMapper.Builder builder = new NestedObjectMapper.Builder(name, parserContext.indexVersionCreated());\n            parseNested(name, node, builder);\n            for (Iterator<Map.Entry<String, Object>> iterator = node.entrySet().iterator(); iterator.hasNext();) {\n                Map.Entry<String, Object> entry = iterator.next();\n                String fieldName = entry.getKey();\n                Object fieldNode = entry.getValue();\n                if (parseObjectOrDocumentTypeProperties(fieldName, fieldNode, parserContext, builder)) {\n                    iterator.remove();\n                }\n            }\n            return builder;\n        }\n","realPath":"server/src/main/java/org/elasticsearch/index/mapper/NestedObjectMapper.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":80,"status":"N"}],"commitId":"0d0e403258fe5817da4cda5ed60e769dccdc2ee1","commitMessage":"@@@Move and rename ParserContext (#74402)\n\nParserContext is an inner class of Mapper.TypeParser but is used outside of the context of parsing mappers.  for instance also to parse runtime fields. Its purpose is to be used to parse mappings in general.  and its name is confusing as it differs ever so slightly from ParseContext which is used for parsing incoming documents.\n\nThis commit moves ParserContext to be a top-level class.  and renames it to MappingParserContext.\n","date":"2021-06-23 15:28:56","modifiedFileCount":"25","status":"M","submitter":"Luca Cavanna"},{"authorTime":"2021-07-19 16:44:48","codes":[{"authorDate":"2021-07-19 16:44:48","commitOrder":8,"curCode":"        public RootObjectMapper.Builder parse(String name, Map<String, Object> node, MappingParserContext parserContext)\n            throws MapperParsingException {\n            RootObjectMapper.Builder builder = new Builder(name);\n            Iterator<Map.Entry<String, Object>> iterator = node.entrySet().iterator();\n            while (iterator.hasNext()) {\n                Map.Entry<String, Object> entry = iterator.next();\n                String fieldName = entry.getKey();\n                Object fieldNode = entry.getValue();\n                if (parseObjectOrDocumentTypeProperties(fieldName, fieldNode, parserContext, builder)\n                        || processField(builder, fieldName, fieldNode, parserContext)) {\n                    iterator.remove();\n                }\n            }\n            return builder;\n        }\n","date":"2021-07-19 16:44:48","endLine":155,"groupId":"107816","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"parse","params":"(Stringname@Map<String@Object>node@MappingParserContextparserContext)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/a9/6bed13a69c1861e35fbab0781e3ad267135697.src","preCode":"        public RootObjectMapper.Builder parse(String name, Map<String, Object> node, MappingParserContext parserContext)\n            throws MapperParsingException {\n            RootObjectMapper.Builder builder = new Builder(name, parserContext.indexVersionCreated());\n            Iterator<Map.Entry<String, Object>> iterator = node.entrySet().iterator();\n            while (iterator.hasNext()) {\n                Map.Entry<String, Object> entry = iterator.next();\n                String fieldName = entry.getKey();\n                Object fieldNode = entry.getValue();\n                if (parseObjectOrDocumentTypeProperties(fieldName, fieldNode, parserContext, builder)\n                        || processField(builder, fieldName, fieldNode, parserContext)) {\n                    iterator.remove();\n                }\n            }\n            return builder;\n        }\n","realPath":"server/src/main/java/org/elasticsearch/index/mapper/RootObjectMapper.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":141,"status":"M"},{"authorDate":"2021-07-19 16:44:48","commitOrder":8,"curCode":"        public Mapper.Builder parse(\n            String name,\n            Map<String, Object> node,\n            MappingParserContext parserContext\n        ) throws MapperParsingException {\n            NestedObjectMapper.Builder builder = new NestedObjectMapper.Builder(name, parserContext.indexVersionCreated());\n            parseNested(name, node, builder);\n            for (Iterator<Map.Entry<String, Object>> iterator = node.entrySet().iterator(); iterator.hasNext();) {\n                Map.Entry<String, Object> entry = iterator.next();\n                String fieldName = entry.getKey();\n                Object fieldNode = entry.getValue();\n                if (parseObjectOrDocumentTypeProperties(fieldName, fieldNode, parserContext, builder)) {\n                    iterator.remove();\n                }\n            }\n            return builder;\n        }\n","date":"2021-07-19 16:44:48","endLine":75,"groupId":"107816","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"parse","params":"(Stringname@Map<String@Object>node@MappingParserContextparserContext)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/30/279f565d55b9c9a209e775af4e1d90d8d0e33c.src","preCode":"        public Mapper.Builder parse(String name, Map<String, Object> node, ParserContext parserContext) throws MapperParsingException {\n            NestedObjectMapper.Builder builder = new NestedObjectMapper.Builder(name, parserContext.indexVersionCreated());\n            parseNested(name, node, builder);\n            for (Iterator<Map.Entry<String, Object>> iterator = node.entrySet().iterator(); iterator.hasNext();) {\n                Map.Entry<String, Object> entry = iterator.next();\n                String fieldName = entry.getKey();\n                Object fieldNode = entry.getValue();\n                if (parseObjectOrDocumentTypeProperties(fieldName, fieldNode, parserContext, builder)) {\n                    iterator.remove();\n                }\n            }\n            return builder;\n        }\n","realPath":"server/src/main/java/org/elasticsearch/index/mapper/NestedObjectMapper.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":59,"status":"M"}],"commitId":"cf575f4766e3b3d7a58698be0d91559664f1bd80","commitMessage":"@@@Make NestedObjectMapper its own class (#74410)\n\nNested objects are implemented via a Nested class directly on object mappers. \neven though nested and non-nested objects have quite different semantics. In\naddition.  most call-sites that need to get an object mapper in fact need a nested\nobject mapper. To make it clearer that nested and object mappers are different\nbeasts with different implementations and different requirements.  we should\nsplit them into different classes.","date":"2021-07-19 16:44:48","modifiedFileCount":"39","status":"M","submitter":"Alan Woodward"}]
