[{"authorTime":"2019-08-10 01:22:00","codes":[{"authorDate":"2019-08-10 01:22:00","commitOrder":1,"curCode":"    public void testBasicSerialization() throws IOException, ParseException {\n        WellKnownText wkt = new WellKnownText(true, new GeographyValidator(true));\n        assertEquals(\"linestring (3.0 1.0, 4.0 2.0)\", wkt.toWKT(new Line(new double[]{3, 4}, new double[]{1, 2})));\n        assertEquals(new Line(new double[]{3, 4}, new double[]{1, 2}), wkt.fromWKT(\"linestring (3 1, 4 2)\"));\n\n        assertEquals(\"linestring (3.0 1.0 5.0, 4.0 2.0 6.0)\", wkt.toWKT(new Line(new double[]{3, 4}, new double[]{1, 2},\n            new double[]{5, 6})));\n        assertEquals(new Line(new double[]{3, 4}, new double[]{1, 2}, new double[]{6, 5}),\n            wkt.fromWKT(\"linestring (3 1 6, 4 2 5)\"));\n\n        assertEquals(\"linestring EMPTY\", wkt.toWKT(Line.EMPTY));\n        assertEquals(Line.EMPTY, wkt.fromWKT(\"linestring EMPTY)\"));\n    }\n","date":"2019-08-10 01:22:00","endLine":49,"groupId":"57052","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testBasicSerialization","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/73/42e0b562d196bff59838bb93ef01258cfb60d0.src","preCode":"    public void testBasicSerialization() throws IOException, ParseException {\n        WellKnownText wkt = new WellKnownText(true, new GeographyValidator(true));\n        assertEquals(\"linestring (3.0 1.0, 4.0 2.0)\", wkt.toWKT(new Line(new double[]{3, 4}, new double[]{1, 2})));\n        assertEquals(new Line(new double[]{3, 4}, new double[]{1, 2}), wkt.fromWKT(\"linestring (3 1, 4 2)\"));\n\n        assertEquals(\"linestring (3.0 1.0 5.0, 4.0 2.0 6.0)\", wkt.toWKT(new Line(new double[]{3, 4}, new double[]{1, 2},\n            new double[]{5, 6})));\n        assertEquals(new Line(new double[]{3, 4}, new double[]{1, 2}, new double[]{6, 5}),\n            wkt.fromWKT(\"linestring (3 1 6, 4 2 5)\"));\n\n        assertEquals(\"linestring EMPTY\", wkt.toWKT(Line.EMPTY));\n        assertEquals(Line.EMPTY, wkt.fromWKT(\"linestring EMPTY)\"));\n    }\n","realPath":"libs/geo/src/test/java/org/elasticsearch/geometry/LineTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":37,"status":"B"},{"authorDate":"2019-08-10 01:22:00","commitOrder":1,"curCode":"    public void testBasicSerialization() throws IOException, ParseException {\n        WellKnownText wkt = new WellKnownText(true, new GeographyValidator(true));\n        assertEquals(\"multilinestring ((3.0 1.0, 4.0 2.0))\", wkt.toWKT(\n            new MultiLine(Collections.singletonList(new Line(new double[]{3, 4}, new double[]{1, 2})))));\n        assertEquals(new MultiLine(Collections.singletonList(new Line(new double[]{3, 4}, new double[]{1, 2}))),\n            wkt.fromWKT(\"multilinestring ((3 1, 4 2))\"));\n\n        assertEquals(\"multilinestring EMPTY\", wkt.toWKT(MultiLine.EMPTY));\n        assertEquals(MultiLine.EMPTY, wkt.fromWKT(\"multilinestring EMPTY)\"));\n    }\n","date":"2019-08-10 01:22:00","endLine":54,"groupId":"21968","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testBasicSerialization","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/46/10932e0afbff7b673dbbf865285f3eadfa7eb7.src","preCode":"    public void testBasicSerialization() throws IOException, ParseException {\n        WellKnownText wkt = new WellKnownText(true, new GeographyValidator(true));\n        assertEquals(\"multilinestring ((3.0 1.0, 4.0 2.0))\", wkt.toWKT(\n            new MultiLine(Collections.singletonList(new Line(new double[]{3, 4}, new double[]{1, 2})))));\n        assertEquals(new MultiLine(Collections.singletonList(new Line(new double[]{3, 4}, new double[]{1, 2}))),\n            wkt.fromWKT(\"multilinestring ((3 1, 4 2))\"));\n\n        assertEquals(\"multilinestring EMPTY\", wkt.toWKT(MultiLine.EMPTY));\n        assertEquals(MultiLine.EMPTY, wkt.fromWKT(\"multilinestring EMPTY)\"));\n    }\n","realPath":"libs/geo/src/test/java/org/elasticsearch/geometry/MultiLineTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":45,"status":"B"}],"commitId":"13a8835e5a8615aeb8304b48fd9e543a83361e13","commitMessage":"@@@Geo: Change order of parameter in Geometries to lon.  lat (#45332)\n\nChanges the order of parameters in Geometries from lat.  lon to lon.  lat\nand moves all Geometry classes are moved to the\norg.elasticsearch.geomtery package.\n\nCloses #45048","date":"2019-08-10 01:22:00","modifiedFileCount":"65","status":"B","submitter":"Igor Motov"},{"authorTime":"2019-12-19 01:28:56","codes":[{"authorDate":"2019-12-19 01:28:56","commitOrder":2,"curCode":"    public void testBasicSerialization() throws IOException, ParseException {\n        WellKnownText wkt = new WellKnownText(true, new GeographyValidator(true));\n        assertEquals(\"LINESTRING (3.0 1.0, 4.0 2.0)\", wkt.toWKT(new Line(new double[]{3, 4}, new double[]{1, 2})));\n        assertEquals(new Line(new double[]{3, 4}, new double[]{1, 2}), wkt.fromWKT(\"LINESTRING (3 1, 4 2)\"));\n\n        assertEquals(\"LINESTRING (3.0 1.0 5.0, 4.0 2.0 6.0)\", wkt.toWKT(new Line(new double[]{3, 4}, new double[]{1, 2},\n            new double[]{5, 6})));\n        assertEquals(new Line(new double[]{3, 4}, new double[]{1, 2}, new double[]{6, 5}),\n            wkt.fromWKT(\"LINESTRING (3 1 6, 4 2 5)\"));\n\n        assertEquals(\"LINESTRING EMPTY\", wkt.toWKT(Line.EMPTY));\n        assertEquals(Line.EMPTY, wkt.fromWKT(\"LINESTRING EMPTY)\"));\n    }\n","date":"2019-12-19 01:28:56","endLine":49,"groupId":"57052","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testBasicSerialization","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/0c/a38c185ef46d0fd422ad9863a57cfb44e9265c.src","preCode":"    public void testBasicSerialization() throws IOException, ParseException {\n        WellKnownText wkt = new WellKnownText(true, new GeographyValidator(true));\n        assertEquals(\"linestring (3.0 1.0, 4.0 2.0)\", wkt.toWKT(new Line(new double[]{3, 4}, new double[]{1, 2})));\n        assertEquals(new Line(new double[]{3, 4}, new double[]{1, 2}), wkt.fromWKT(\"linestring (3 1, 4 2)\"));\n\n        assertEquals(\"linestring (3.0 1.0 5.0, 4.0 2.0 6.0)\", wkt.toWKT(new Line(new double[]{3, 4}, new double[]{1, 2},\n            new double[]{5, 6})));\n        assertEquals(new Line(new double[]{3, 4}, new double[]{1, 2}, new double[]{6, 5}),\n            wkt.fromWKT(\"linestring (3 1 6, 4 2 5)\"));\n\n        assertEquals(\"linestring EMPTY\", wkt.toWKT(Line.EMPTY));\n        assertEquals(Line.EMPTY, wkt.fromWKT(\"linestring EMPTY)\"));\n    }\n","realPath":"libs/geo/src/test/java/org/elasticsearch/geometry/LineTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":37,"status":"M"},{"authorDate":"2019-12-19 01:28:56","commitOrder":2,"curCode":"    public void testBasicSerialization() throws IOException, ParseException {\n        WellKnownText wkt = new WellKnownText(true, new GeographyValidator(true));\n        assertEquals(\"MULTILINESTRING ((3.0 1.0, 4.0 2.0))\", wkt.toWKT(\n            new MultiLine(Collections.singletonList(new Line(new double[]{3, 4}, new double[]{1, 2})))));\n        assertEquals(new MultiLine(Collections.singletonList(new Line(new double[]{3, 4}, new double[]{1, 2}))),\n            wkt.fromWKT(\"MULTILINESTRING ((3 1, 4 2))\"));\n\n        assertEquals(\"MULTILINESTRING EMPTY\", wkt.toWKT(MultiLine.EMPTY));\n        assertEquals(MultiLine.EMPTY, wkt.fromWKT(\"MULTILINESTRING EMPTY)\"));\n    }\n","date":"2019-12-19 01:28:56","endLine":54,"groupId":"21968","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testBasicSerialization","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/26/0eb5facf4625c51c08bb8edc42b369bd71e2c4.src","preCode":"    public void testBasicSerialization() throws IOException, ParseException {\n        WellKnownText wkt = new WellKnownText(true, new GeographyValidator(true));\n        assertEquals(\"multilinestring ((3.0 1.0, 4.0 2.0))\", wkt.toWKT(\n            new MultiLine(Collections.singletonList(new Line(new double[]{3, 4}, new double[]{1, 2})))));\n        assertEquals(new MultiLine(Collections.singletonList(new Line(new double[]{3, 4}, new double[]{1, 2}))),\n            wkt.fromWKT(\"multilinestring ((3 1, 4 2))\"));\n\n        assertEquals(\"multilinestring EMPTY\", wkt.toWKT(MultiLine.EMPTY));\n        assertEquals(MultiLine.EMPTY, wkt.fromWKT(\"multilinestring EMPTY)\"));\n    }\n","realPath":"libs/geo/src/test/java/org/elasticsearch/geometry/MultiLineTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":45,"status":"M"}],"commitId":"a26e4d1e5e17d9033ba1bb1d3272cdee8709d8bd","commitMessage":"@@@Geo: Switch generated WKT to upper case (#50285)\n\nSwitches generated WKT to upper case to\nconform to the standard recommendation.\n\nRelates #49568\n","date":"2019-12-19 01:28:56","modifiedFileCount":"14","status":"M","submitter":"Igor Motov"},{"authorTime":"2021-06-17 05:31:31","codes":[{"authorDate":"2021-06-17 05:31:31","commitOrder":3,"curCode":"    public void testBasicSerialization() throws IOException, ParseException {\n        GeometryValidator validator = GeographyValidator.instance(true);\n        assertEquals(\"LINESTRING (3.0 1.0, 4.0 2.0)\", WellKnownText.toWKT(new Line(new double[]{3, 4}, new double[]{1, 2})));\n        assertEquals(new Line(new double[]{3, 4}, new double[]{1, 2}), WellKnownText.fromWKT(validator, true, \"LINESTRING (3 1, 4 2)\"));\n\n        assertEquals(\"LINESTRING (3.0 1.0 5.0, 4.0 2.0 6.0)\", WellKnownText.toWKT(new Line(new double[]{3, 4}, new double[]{1, 2},\n            new double[]{5, 6})));\n        assertEquals(new Line(new double[]{3, 4}, new double[]{1, 2}, new double[]{6, 5}),\n            WellKnownText.fromWKT(validator, true, \"LINESTRING (3 1 6, 4 2 5)\"));\n\n        assertEquals(\"LINESTRING EMPTY\", WellKnownText.toWKT(Line.EMPTY));\n        assertEquals(Line.EMPTY, WellKnownText.fromWKT(validator, true, \"LINESTRING EMPTY)\"));\n    }\n","date":"2021-06-17 05:31:31","endLine":38,"groupId":"101809","id":5,"instanceNumber":1,"isCurCommit":1,"methodName":"testBasicSerialization","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/b2/9dd7adbbde2f08fc2fe04edc197cb0531c3d1b.src","preCode":"    public void testBasicSerialization() throws IOException, ParseException {\n        WellKnownText wkt = new WellKnownText(true, new GeographyValidator(true));\n        assertEquals(\"LINESTRING (3.0 1.0, 4.0 2.0)\", wkt.toWKT(new Line(new double[]{3, 4}, new double[]{1, 2})));\n        assertEquals(new Line(new double[]{3, 4}, new double[]{1, 2}), wkt.fromWKT(\"LINESTRING (3 1, 4 2)\"));\n\n        assertEquals(\"LINESTRING (3.0 1.0 5.0, 4.0 2.0 6.0)\", wkt.toWKT(new Line(new double[]{3, 4}, new double[]{1, 2},\n            new double[]{5, 6})));\n        assertEquals(new Line(new double[]{3, 4}, new double[]{1, 2}, new double[]{6, 5}),\n            wkt.fromWKT(\"LINESTRING (3 1 6, 4 2 5)\"));\n\n        assertEquals(\"LINESTRING EMPTY\", wkt.toWKT(Line.EMPTY));\n        assertEquals(Line.EMPTY, wkt.fromWKT(\"LINESTRING EMPTY)\"));\n    }\n","realPath":"libs/geo/src/test/java/org/elasticsearch/geometry/LineTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":26,"status":"M"},{"authorDate":"2021-06-17 05:31:31","commitOrder":3,"curCode":"    public void testBasicSerialization() throws IOException, ParseException {\n        GeometryValidator validator = GeographyValidator.instance(true);\n        assertEquals(\"MULTILINESTRING ((3.0 1.0, 4.0 2.0))\", WellKnownText.toWKT(\n            new MultiLine(Collections.singletonList(new Line(new double[]{3, 4}, new double[]{1, 2})))));\n        assertEquals(new MultiLine(Collections.singletonList(new Line(new double[]{3, 4}, new double[]{1, 2}))),\n            WellKnownText.fromWKT(validator, true, \"MULTILINESTRING ((3 1, 4 2))\"));\n\n        assertEquals(\"MULTILINESTRING EMPTY\", WellKnownText.toWKT(MultiLine.EMPTY));\n        assertEquals(MultiLine.EMPTY, WellKnownText.fromWKT(validator, true, \"MULTILINESTRING EMPTY)\"));\n    }\n","date":"2021-06-17 05:31:31","endLine":44,"groupId":"101809","id":6,"instanceNumber":2,"isCurCommit":1,"methodName":"testBasicSerialization","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/2a/0264adc73ac1014d1fb7dcf91a8f6378745fb3.src","preCode":"    public void testBasicSerialization() throws IOException, ParseException {\n        WellKnownText wkt = new WellKnownText(true, new GeographyValidator(true));\n        assertEquals(\"MULTILINESTRING ((3.0 1.0, 4.0 2.0))\", wkt.toWKT(\n            new MultiLine(Collections.singletonList(new Line(new double[]{3, 4}, new double[]{1, 2})))));\n        assertEquals(new MultiLine(Collections.singletonList(new Line(new double[]{3, 4}, new double[]{1, 2}))),\n            wkt.fromWKT(\"MULTILINESTRING ((3 1, 4 2))\"));\n\n        assertEquals(\"MULTILINESTRING EMPTY\", wkt.toWKT(MultiLine.EMPTY));\n        assertEquals(MultiLine.EMPTY, wkt.fromWKT(\"MULTILINESTRING EMPTY)\"));\n    }\n","realPath":"libs/geo/src/test/java/org/elasticsearch/geometry/MultiLineTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":35,"status":"M"}],"commitId":"6a8f8f3f718bd21bf14176049c9e1f1def13463b","commitMessage":"@@@Merge remote-tracking branch 'elastic/master' into feature/vector-tiles\n","date":"2021-06-17 05:31:31","modifiedFileCount":"4429","status":"M","submitter":"Igor Motov"}]
