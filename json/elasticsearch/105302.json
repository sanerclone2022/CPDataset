[{"authorTime":"2019-01-23 01:38:55","codes":[{"authorDate":"2019-12-17 00:14:45","commitOrder":3,"curCode":"    public void testQueryFiltering() throws IOException {\n        testCase(IntPoint.newRangeQuery(\"number\", 0, 3), iw -> {\n            iw.addDocument(Arrays.asList(new IntPoint(\"number\", 7), new SortedNumericDocValuesField(\"number\", 7)));\n            iw.addDocument(Arrays.asList(new IntPoint(\"number\", 1), new SortedNumericDocValuesField(\"number\", 1)));\n            iw.addDocument(Arrays.asList(new IntPoint(\"number\", 3), new SortedNumericDocValuesField(\"number\", 3)));\n        }, min -> {\n            assertEquals(1, min.getValue(), 0);\n            assertTrue(AggregationInspectionHelper.hasValue(min));\n        });\n    }\n","date":"2019-12-17 00:14:45","endLine":242,"groupId":"25201","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testQueryFiltering","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/92/2536a76544a8bfd0b6cba2ecbedb0f63c53b71.src","preCode":"    public void testQueryFiltering() throws IOException {\n        testCase(IntPoint.newRangeQuery(\"number\", 0, 3), iw -> {\n            iw.addDocument(Arrays.asList(new IntPoint(\"number\", 7), new SortedNumericDocValuesField(\"number\", 7)));\n            iw.addDocument(Arrays.asList(new IntPoint(\"number\", 1), new SortedNumericDocValuesField(\"number\", 1)));\n            iw.addDocument(Arrays.asList(new IntPoint(\"number\", 3), new SortedNumericDocValuesField(\"number\", 3)));\n        }, min -> {\n            assertEquals(1, min.getValue(), 0);\n            assertTrue(AggregationInspectionHelper.hasValue(min));\n        });\n    }\n","realPath":"server/src/test/java/org/elasticsearch/search/aggregations/metrics/MinAggregatorTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":233,"status":"B"},{"authorDate":"2019-01-23 01:38:55","commitOrder":3,"curCode":"    public void testQueryFiltering() throws IOException {\n        testCase(IntPoint.newRangeQuery(\"number\", 0, 5), iw -> {\n            iw.addDocument(Arrays.asList(new IntPoint(\"number\", 7), new SortedNumericDocValuesField(\"number\", 7)));\n            iw.addDocument(Arrays.asList(new IntPoint(\"number\", 1), new SortedNumericDocValuesField(\"number\", 1)));\n        }, max -> {\n            assertEquals(1, max.getValue(), 0);\n            assertTrue(AggregationInspectionHelper.hasValue(max));\n        });\n    }\n","date":"2019-01-23 01:38:55","endLine":115,"groupId":"25201","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testQueryFiltering","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/d9/6217866127214af0a9c80155145b887aed6aad.src","preCode":"    public void testQueryFiltering() throws IOException {\n        testCase(IntPoint.newRangeQuery(\"number\", 0, 5), iw -> {\n            iw.addDocument(Arrays.asList(new IntPoint(\"number\", 7), new SortedNumericDocValuesField(\"number\", 7)));\n            iw.addDocument(Arrays.asList(new IntPoint(\"number\", 1), new SortedNumericDocValuesField(\"number\", 1)));\n        }, max -> {\n            assertEquals(1, max.getValue(), 0);\n            assertTrue(AggregationInspectionHelper.hasValue(max));\n        });\n    }\n","realPath":"server/src/test/java/org/elasticsearch/search/aggregations/metrics/MaxAggregatorTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":107,"status":"NB"}],"commitId":"9dec99678bf05dacf57c6bd1150bb1bf256b149e","commitMessage":"@@@Migrate MinAggregator integration tests to AggregatorTestCase (#50053)\n\nAlso renames MinTests to MinAggregationBuilderTests\n\n","date":"2019-12-17 00:14:45","modifiedFileCount":"1","status":"M","submitter":"Zachary Tong"},{"authorTime":"2020-04-29 21:24:07","codes":[{"authorDate":"2019-12-17 00:14:45","commitOrder":4,"curCode":"    public void testQueryFiltering() throws IOException {\n        testCase(IntPoint.newRangeQuery(\"number\", 0, 3), iw -> {\n            iw.addDocument(Arrays.asList(new IntPoint(\"number\", 7), new SortedNumericDocValuesField(\"number\", 7)));\n            iw.addDocument(Arrays.asList(new IntPoint(\"number\", 1), new SortedNumericDocValuesField(\"number\", 1)));\n            iw.addDocument(Arrays.asList(new IntPoint(\"number\", 3), new SortedNumericDocValuesField(\"number\", 3)));\n        }, min -> {\n            assertEquals(1, min.getValue(), 0);\n            assertTrue(AggregationInspectionHelper.hasValue(min));\n        });\n    }\n","date":"2019-12-17 00:14:45","endLine":242,"groupId":"105302","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testQueryFiltering","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/92/2536a76544a8bfd0b6cba2ecbedb0f63c53b71.src","preCode":"    public void testQueryFiltering() throws IOException {\n        testCase(IntPoint.newRangeQuery(\"number\", 0, 3), iw -> {\n            iw.addDocument(Arrays.asList(new IntPoint(\"number\", 7), new SortedNumericDocValuesField(\"number\", 7)));\n            iw.addDocument(Arrays.asList(new IntPoint(\"number\", 1), new SortedNumericDocValuesField(\"number\", 1)));\n            iw.addDocument(Arrays.asList(new IntPoint(\"number\", 3), new SortedNumericDocValuesField(\"number\", 3)));\n        }, min -> {\n            assertEquals(1, min.getValue(), 0);\n            assertTrue(AggregationInspectionHelper.hasValue(min));\n        });\n    }\n","realPath":"server/src/test/java/org/elasticsearch/search/aggregations/metrics/MinAggregatorTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":233,"status":"N"},{"authorDate":"2020-04-29 21:24:07","commitOrder":4,"curCode":"    public void testQueryFiltering() throws IOException {\n        testAggregation(IntPoint.newRangeQuery(\"number\", 0, 5), iw -> {\n            iw.addDocument(Arrays.asList(new IntPoint(\"number\", 7), new SortedNumericDocValuesField(\"number\", 7)));\n            iw.addDocument(Arrays.asList(new IntPoint(\"number\", 1), new SortedNumericDocValuesField(\"number\", 1)));\n        }, max -> {\n            assertEquals(1, max.getValue(), 0);\n            assertTrue(AggregationInspectionHelper.hasValue(max));\n        });\n    }\n","date":"2020-04-29 21:24:07","endLine":222,"groupId":"105302","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testQueryFiltering","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/8f/cd034ed7f9400863945758e5d51f394c9ed6be.src","preCode":"    public void testQueryFiltering() throws IOException {\n        testCase(IntPoint.newRangeQuery(\"number\", 0, 5), iw -> {\n            iw.addDocument(Arrays.asList(new IntPoint(\"number\", 7), new SortedNumericDocValuesField(\"number\", 7)));\n            iw.addDocument(Arrays.asList(new IntPoint(\"number\", 1), new SortedNumericDocValuesField(\"number\", 1)));\n        }, max -> {\n            assertEquals(1, max.getValue(), 0);\n            assertTrue(AggregationInspectionHelper.hasValue(max));\n        });\n    }\n","realPath":"server/src/test/java/org/elasticsearch/search/aggregations/metrics/MaxAggregatorTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":214,"status":"M"}],"commitId":"ceb6e6227fb48cf6986f1124014df4cbc6f82a40","commitMessage":"@@@Modified searchAndReduce() to return empty agg when no docs exist  (#55826)\n\nModified AggregatorTestCase.searchAndReduce() method so that it returns an empty aggregation result when no documents have been inserted.\n\nAlso refactored several aggregation tests so they do not re-implement method AggregatorTestCase.testCase()\n\nFixes #55824","date":"2020-04-29 21:24:07","modifiedFileCount":"12","status":"M","submitter":"Christos Soulios"}]
