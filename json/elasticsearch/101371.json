[{"authorTime":"2020-07-22 18:29:36","codes":[{"authorDate":"2020-07-22 18:29:36","commitOrder":1,"curCode":"    public void testAliases() throws IOException {\n        Request request = new Request(\"PUT\", \"/_kibana/.kibana-1\");\n        Response response = client().performRequest(request);\n        assertThat(response.getStatusLine().getStatusCode(), is(200));\n\n        request = new Request(\"PUT\", \"/_kibana/.kibana-1/_alias/.kibana\");\n        response = client().performRequest(request);\n        assertThat(response.getStatusLine().getStatusCode(), is(200));\n\n        request = new Request(\"GET\", \"/_kibana/_aliases\");\n        response = client().performRequest(request);\n        assertThat(response.getStatusLine().getStatusCode(), is(200));\n        assertThat(EntityUtils.toString(response.getEntity()), containsString(\".kibana\"));\n    }\n","date":"2020-07-22 18:29:36","endLine":56,"groupId":"10003","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testAliases","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/df/6e894db2776c2a31304b0c8fa755200824ca2c.src","preCode":"    public void testAliases() throws IOException {\n        Request request = new Request(\"PUT\", \"/_kibana/.kibana-1\");\n        Response response = client().performRequest(request);\n        assertThat(response.getStatusLine().getStatusCode(), is(200));\n\n        request = new Request(\"PUT\", \"/_kibana/.kibana-1/_alias/.kibana\");\n        response = client().performRequest(request);\n        assertThat(response.getStatusLine().getStatusCode(), is(200));\n\n        request = new Request(\"GET\", \"/_kibana/_aliases\");\n        response = client().performRequest(request);\n        assertThat(response.getStatusLine().getStatusCode(), is(200));\n        assertThat(EntityUtils.toString(response.getEntity()), containsString(\".kibana\"));\n    }\n","realPath":"modules/kibana/src/javaRestTest/java/org/elasticsearch/kibana/KibanaSystemIndexIT.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":43,"status":"B"},{"authorDate":"2020-07-22 18:29:36","commitOrder":1,"curCode":"    public void testGetIndex() throws IOException {\n        Request request = new Request(\"PUT\", \"/_kibana/.kibana-1\");\n        Response response = client().performRequest(request);\n        assertThat(response.getStatusLine().getStatusCode(), is(200));\n\n        request = new Request(\"GET\", \"/_kibana/.kibana-1\");\n        response = client().performRequest(request);\n        assertThat(response.getStatusLine().getStatusCode(), is(200));\n        assertThat(EntityUtils.toString(response.getEntity()), containsString(\".kibana-1\"));\n    }\n","date":"2020-07-22 18:29:36","endLine":198,"groupId":"49538","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testGetIndex","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/df/6e894db2776c2a31304b0c8fa755200824ca2c.src","preCode":"    public void testGetIndex() throws IOException {\n        Request request = new Request(\"PUT\", \"/_kibana/.kibana-1\");\n        Response response = client().performRequest(request);\n        assertThat(response.getStatusLine().getStatusCode(), is(200));\n\n        request = new Request(\"GET\", \"/_kibana/.kibana-1\");\n        response = client().performRequest(request);\n        assertThat(response.getStatusLine().getStatusCode(), is(200));\n        assertThat(EntityUtils.toString(response.getEntity()), containsString(\".kibana-1\"));\n    }\n","realPath":"modules/kibana/src/javaRestTest/java/org/elasticsearch/kibana/KibanaSystemIndexIT.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":189,"status":"B"}],"commitId":"5fcef9a90090b170ef0e963f3e3e56b6fdeaf2d9","commitMessage":"@@@Merge branch 'master' into feature/runtime_fields\n","date":"2020-07-22 18:29:36","modifiedFileCount":"81","status":"B","submitter":"Luca Cavanna"},{"authorTime":"2020-10-20 05:18:15","codes":[{"authorDate":"2020-10-20 05:18:15","commitOrder":2,"curCode":"    public void testAliases() throws IOException {\n        assumeFalse(\"In this test, .kibana is the alias name\", \".kibana\".equals(indexName));\n        Request request = new Request(\"PUT\", \"/_kibana/\" + indexName);\n        Response response = client().performRequest(request);\n        assertThat(response.getStatusLine().getStatusCode(), is(200));\n\n        request = new Request(\"PUT\", \"/_kibana/\" + indexName + \"/_alias/.kibana\");\n        response = client().performRequest(request);\n        assertThat(response.getStatusLine().getStatusCode(), is(200));\n\n        request = new Request(\"GET\", \"/_kibana/_aliases\");\n        response = client().performRequest(request);\n        assertThat(response.getStatusLine().getStatusCode(), is(200));\n        assertThat(EntityUtils.toString(response.getEntity()), containsString(\".kibana\"));\n    }\n","date":"2020-10-20 05:18:15","endLine":76,"groupId":"66882","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testAliases","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/92/a4ee7d5b431834bc6b0538e9487699e84faa68.src","preCode":"    public void testAliases() throws IOException {\n        Request request = new Request(\"PUT\", \"/_kibana/.kibana-1\");\n        Response response = client().performRequest(request);\n        assertThat(response.getStatusLine().getStatusCode(), is(200));\n\n        request = new Request(\"PUT\", \"/_kibana/.kibana-1/_alias/.kibana\");\n        response = client().performRequest(request);\n        assertThat(response.getStatusLine().getStatusCode(), is(200));\n\n        request = new Request(\"GET\", \"/_kibana/_aliases\");\n        response = client().performRequest(request);\n        assertThat(response.getStatusLine().getStatusCode(), is(200));\n        assertThat(EntityUtils.toString(response.getEntity()), containsString(\".kibana\"));\n    }\n","realPath":"modules/kibana/src/javaRestTest/java/org/elasticsearch/kibana/KibanaSystemIndexIT.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":62,"status":"M"},{"authorDate":"2020-10-20 05:18:15","commitOrder":2,"curCode":"    public void testGetIndex() throws IOException {\n        Request request = new Request(\"PUT\", \"/_kibana/\" + indexName);\n        Response response = client().performRequest(request);\n        assertThat(response.getStatusLine().getStatusCode(), is(200));\n\n        request = new Request(\"GET\", \"/_kibana/\" + indexName);\n        response = client().performRequest(request);\n        assertThat(response.getStatusLine().getStatusCode(), is(200));\n        assertThat(EntityUtils.toString(response.getEntity()), containsString(indexName));\n    }\n","date":"2020-10-20 05:18:15","endLine":239,"groupId":"66886","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testGetIndex","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/92/a4ee7d5b431834bc6b0538e9487699e84faa68.src","preCode":"    public void testGetIndex() throws IOException {\n        Request request = new Request(\"PUT\", \"/_kibana/.kibana-1\");\n        Response response = client().performRequest(request);\n        assertThat(response.getStatusLine().getStatusCode(), is(200));\n\n        request = new Request(\"GET\", \"/_kibana/.kibana-1\");\n        response = client().performRequest(request);\n        assertThat(response.getStatusLine().getStatusCode(), is(200));\n        assertThat(EntityUtils.toString(response.getEntity()), containsString(\".kibana-1\"));\n    }\n","realPath":"modules/kibana/src/javaRestTest/java/org/elasticsearch/kibana/KibanaSystemIndexIT.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":230,"status":"M"}],"commitId":"7f2930e67a9e734ea2c025e1d72e1e40e1526c7b","commitMessage":"@@@Add APM configuration index to Kibana system indices (#63756)\n\n* Add APM index to Kibana system indices.  making it \naccessible through the _kibana endpoint and giving it the\nsame access privileges as the other Kibana system indices.\n* Parameterize kibana system index tests by index name","date":"2020-10-20 05:18:15","modifiedFileCount":"3","status":"M","submitter":"William Brafford"},{"authorTime":"2021-03-02 01:38:53","codes":[{"authorDate":"2021-03-02 01:38:53","commitOrder":3,"curCode":"    public void testAliases() throws IOException {\n        assumeFalse(\"In this test, .kibana is the alias name\", \".kibana\".equals(indexName));\n        Request request = request(\"PUT\", \"/\" + indexName);\n        Response response = client().performRequest(request);\n        assertThat(response.getStatusLine().getStatusCode(), is(200));\n\n        request = request(\"PUT\", \"/\" + indexName + \"/_alias/.kibana\");\n        response = client().performRequest(request);\n        assertThat(response.getStatusLine().getStatusCode(), is(200));\n\n        request = request(\"GET\", \"/_aliases\");\n        response = client().performRequest(request);\n        assertThat(response.getStatusLine().getStatusCode(), is(200));\n        assertThat(EntityUtils.toString(response.getEntity()), containsString(\".kibana\"));\n    }\n","date":"2021-03-02 01:38:53","endLine":66,"groupId":"101371","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testAliases","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/05/379770793d0fa8394c925891a7d168a46e3c75.src","preCode":"    public void testAliases() throws IOException {\n        assumeFalse(\"In this test, .kibana is the alias name\", \".kibana\".equals(indexName));\n        Request request = new Request(\"PUT\", \"/_kibana/\" + indexName);\n        Response response = client().performRequest(request);\n        assertThat(response.getStatusLine().getStatusCode(), is(200));\n\n        request = new Request(\"PUT\", \"/_kibana/\" + indexName + \"/_alias/.kibana\");\n        response = client().performRequest(request);\n        assertThat(response.getStatusLine().getStatusCode(), is(200));\n\n        request = new Request(\"GET\", \"/_kibana/_aliases\");\n        response = client().performRequest(request);\n        assertThat(response.getStatusLine().getStatusCode(), is(200));\n        assertThat(EntityUtils.toString(response.getEntity()), containsString(\".kibana\"));\n    }\n","realPath":"modules/kibana/src/javaRestTest/java/org/elasticsearch/kibana/KibanaSystemIndexIT.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":52,"status":"M"},{"authorDate":"2021-03-02 01:38:53","commitOrder":3,"curCode":"    public void testGetIndex() throws IOException {\n        Request request = request(\"PUT\", \"/\" + indexName);\n        Response response = client().performRequest(request);\n        assertThat(response.getStatusLine().getStatusCode(), is(200));\n\n        request = request(\"GET\", \"/\" + indexName);\n        response = client().performRequest(request);\n        assertThat(response.getStatusLine().getStatusCode(), is(200));\n        assertThat(EntityUtils.toString(response.getEntity()), containsString(indexName));\n    }\n","date":"2021-03-02 01:38:53","endLine":229,"groupId":"101371","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testGetIndex","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/05/379770793d0fa8394c925891a7d168a46e3c75.src","preCode":"    public void testGetIndex() throws IOException {\n        Request request = new Request(\"PUT\", \"/_kibana/\" + indexName);\n        Response response = client().performRequest(request);\n        assertThat(response.getStatusLine().getStatusCode(), is(200));\n\n        request = new Request(\"GET\", \"/_kibana/\" + indexName);\n        response = client().performRequest(request);\n        assertThat(response.getStatusLine().getStatusCode(), is(200));\n        assertThat(EntityUtils.toString(response.getEntity()), containsString(indexName));\n    }\n","realPath":"modules/kibana/src/javaRestTest/java/org/elasticsearch/kibana/KibanaSystemIndexIT.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":220,"status":"M"}],"commitId":"1487a5a991e78dc17eebb349b105409b51b63b36","commitMessage":"@@@Introduce system index types including external (#68919)\n\nThis commit introduces system index types that will be used to\ndifferentiate behavior. Previously system indices were all treated the\nsame regardless of whether they belonged to Elasticsearch.  a stack\ncomponent.  or one of our solutions. Upon further discussion and\nanalysis this decision was not in the best interest of the various\nteams and instead a new type of system index was needed. These system\nindices will be referred to as external system indices. Within external\nsystem indices.  an option exists for these indices to be managed by\nElasticsearch or to be managed by the external product.\n\nIn order to represent this within Elasticsearch.  each system index will\nhave a type and this type will be used to control behavior.\n\nCloses #67383","date":"2021-03-02 01:38:53","modifiedFileCount":"87","status":"M","submitter":"Jay Modi"}]
