[{"authorTime":"2019-07-04 02:16:22","codes":[{"authorDate":"2019-07-04 02:16:22","commitOrder":1,"curCode":"    public void testUnmappedMissingGeoPoint() throws IOException {\n        CardinalityAggregationBuilder aggregationBuilder = new CardinalityAggregationBuilder(\"name\", null)\n            .field(\"number\").missing(new GeoPoint(42.39561, -71.13051));\n\n        testCase(aggregationBuilder, new MatchAllDocsQuery(), iw -> {\n            iw.addDocument(singleton(new NumericDocValuesField(\"unrelatedField\", 7)));\n            iw.addDocument(singleton(new NumericDocValuesField(\"unrelatedField\", 8)));\n            iw.addDocument(singleton(new NumericDocValuesField(\"unrelatedField\", 9)));\n        }, card -> {\n            assertEquals(1, card.getValue(), 0);\n            assertTrue(AggregationInspectionHelper.hasValue(card));\n        }, null);\n    }\n","date":"2019-07-04 02:16:22","endLine":151,"groupId":"10739","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testUnmappedMissingGeoPoint","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/6c/c2aa1a4593e186f5d7d7f8771bd5bf308eac22.src","preCode":"    public void testUnmappedMissingGeoPoint() throws IOException {\n        CardinalityAggregationBuilder aggregationBuilder = new CardinalityAggregationBuilder(\"name\", null)\n            .field(\"number\").missing(new GeoPoint(42.39561, -71.13051));\n\n        testCase(aggregationBuilder, new MatchAllDocsQuery(), iw -> {\n            iw.addDocument(singleton(new NumericDocValuesField(\"unrelatedField\", 7)));\n            iw.addDocument(singleton(new NumericDocValuesField(\"unrelatedField\", 8)));\n            iw.addDocument(singleton(new NumericDocValuesField(\"unrelatedField\", 9)));\n        }, card -> {\n            assertEquals(1, card.getValue(), 0);\n            assertTrue(AggregationInspectionHelper.hasValue(card));\n        }, null);\n    }\n","realPath":"server/src/test/java/org/elasticsearch/search/aggregations/metrics/CardinalityAggregatorTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":139,"status":"B"},{"authorDate":"2019-07-04 02:16:22","commitOrder":1,"curCode":"    public void testUnmappedMissingGeoPoint() throws IOException {\n        ValueCountAggregationBuilder aggregationBuilder = new ValueCountAggregationBuilder(\"name\", null)\n            .field(\"number\").missing(new GeoPoint(42.39561, -71.13051));\n\n        testCase(aggregationBuilder, new MatchAllDocsQuery(), iw -> {\n            iw.addDocument(singleton(new NumericDocValuesField(\"unrelatedField\", 7)));\n            iw.addDocument(singleton(new NumericDocValuesField(\"unrelatedField\", 8)));\n            iw.addDocument(singleton(new NumericDocValuesField(\"unrelatedField\", 9)));\n        }, card -> {\n            assertEquals(3, card.getValue(), 0);\n            assertTrue(AggregationInspectionHelper.hasValue(card));\n        }, null);\n    }\n","date":"2019-07-04 02:16:22","endLine":163,"groupId":"10739","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testUnmappedMissingGeoPoint","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/fd/3b930e407d566a1bdaea639f9f5ae34fdd996f.src","preCode":"    public void testUnmappedMissingGeoPoint() throws IOException {\n        ValueCountAggregationBuilder aggregationBuilder = new ValueCountAggregationBuilder(\"name\", null)\n            .field(\"number\").missing(new GeoPoint(42.39561, -71.13051));\n\n        testCase(aggregationBuilder, new MatchAllDocsQuery(), iw -> {\n            iw.addDocument(singleton(new NumericDocValuesField(\"unrelatedField\", 7)));\n            iw.addDocument(singleton(new NumericDocValuesField(\"unrelatedField\", 8)));\n            iw.addDocument(singleton(new NumericDocValuesField(\"unrelatedField\", 9)));\n        }, card -> {\n            assertEquals(3, card.getValue(), 0);\n            assertTrue(AggregationInspectionHelper.hasValue(card));\n        }, null);\n    }\n","realPath":"server/src/test/java/org/elasticsearch/search/aggregations/metrics/ValueCountAggregatorTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":151,"status":"B"}],"commitId":"e84a79a8fb309d608f7ebb9fefb6f1a9ec61304e","commitMessage":"@@@Enable validating user-supplied missing values on unmapped fields (#43718)\n\nProvides a hook for aggregations to introspect the `ValuesSourceType` for a user supplied Missing value on an unmapped field.  when the type would otherwise be `ANY`.  Mapped field behavior is unchanged.  and still applies the `ValuesSourceType` of the field.  This PR just provides the hook for doing this.  no existing aggregations have their behavior changed.","date":"2019-07-04 02:16:22","modifiedFileCount":"8","status":"B","submitter":"Mark Tozzi"},{"authorTime":"2020-03-27 03:01:07","codes":[{"authorDate":"2020-03-27 03:01:07","commitOrder":2,"curCode":"    public void testUnmappedMissingGeoPoint() throws IOException {\n        CardinalityAggregationBuilder aggregationBuilder = new CardinalityAggregationBuilder(\"name\")\n            .field(\"number\").missing(new GeoPoint(42.39561, -71.13051));\n\n        testCase(aggregationBuilder, new MatchAllDocsQuery(), iw -> {\n            iw.addDocument(singleton(new NumericDocValuesField(\"unrelatedField\", 7)));\n            iw.addDocument(singleton(new NumericDocValuesField(\"unrelatedField\", 8)));\n            iw.addDocument(singleton(new NumericDocValuesField(\"unrelatedField\", 9)));\n        }, card -> {\n            assertEquals(1, card.getValue(), 0);\n            assertTrue(AggregationInspectionHelper.hasValue(card));\n        }, null);\n    }\n","date":"2020-03-27 03:01:07","endLine":173,"groupId":"10739","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testUnmappedMissingGeoPoint","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/48/315fec2c51f614bd38bf5e0d3f22da3e5910c1.src","preCode":"    public void testUnmappedMissingGeoPoint() throws IOException {\n        CardinalityAggregationBuilder aggregationBuilder = new CardinalityAggregationBuilder(\"name\", null)\n            .field(\"number\").missing(new GeoPoint(42.39561, -71.13051));\n\n        testCase(aggregationBuilder, new MatchAllDocsQuery(), iw -> {\n            iw.addDocument(singleton(new NumericDocValuesField(\"unrelatedField\", 7)));\n            iw.addDocument(singleton(new NumericDocValuesField(\"unrelatedField\", 8)));\n            iw.addDocument(singleton(new NumericDocValuesField(\"unrelatedField\", 9)));\n        }, card -> {\n            assertEquals(1, card.getValue(), 0);\n            assertTrue(AggregationInspectionHelper.hasValue(card));\n        }, null);\n    }\n","realPath":"server/src/test/java/org/elasticsearch/search/aggregations/metrics/CardinalityAggregatorTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":161,"status":"M"},{"authorDate":"2020-03-27 03:01:07","commitOrder":2,"curCode":"    public void testUnmappedMissingGeoPoint() throws IOException {\n        ValueCountAggregationBuilder aggregationBuilder = new ValueCountAggregationBuilder(\"name\")\n            .field(\"number\").missing(new GeoPoint(42.39561, -71.13051));\n\n        testCase(aggregationBuilder, new MatchAllDocsQuery(), iw -> {\n            iw.addDocument(singleton(new NumericDocValuesField(\"unrelatedField\", 7)));\n            iw.addDocument(singleton(new NumericDocValuesField(\"unrelatedField\", 8)));\n            iw.addDocument(singleton(new NumericDocValuesField(\"unrelatedField\", 9)));\n        }, card -> {\n            assertEquals(3, card.getValue(), 0);\n            assertTrue(AggregationInspectionHelper.hasValue(card));\n        }, null);\n    }\n","date":"2020-03-27 03:01:07","endLine":218,"groupId":"10739","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testUnmappedMissingGeoPoint","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/09/4a4b093cf343d0c55549e45682d43045a790c8.src","preCode":"    public void testUnmappedMissingGeoPoint() throws IOException {\n        ValueCountAggregationBuilder aggregationBuilder = new ValueCountAggregationBuilder(\"name\", null)\n            .field(\"number\").missing(new GeoPoint(42.39561, -71.13051));\n\n        testCase(aggregationBuilder, new MatchAllDocsQuery(), iw -> {\n            iw.addDocument(singleton(new NumericDocValuesField(\"unrelatedField\", 7)));\n            iw.addDocument(singleton(new NumericDocValuesField(\"unrelatedField\", 8)));\n            iw.addDocument(singleton(new NumericDocValuesField(\"unrelatedField\", 9)));\n        }, card -> {\n            assertEquals(3, card.getValue(), 0);\n            assertTrue(AggregationInspectionHelper.hasValue(card));\n        }, null);\n    }\n","realPath":"server/src/test/java/org/elasticsearch/search/aggregations/metrics/ValueCountAggregatorTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":206,"status":"M"}],"commitId":"a90c1de8745681356a6516f4f22a8c40f71f6b12","commitMessage":"@@@Add ValuesSource Registry and associated logic (#54281)\n\n* Remove ValuesSourceType argument to ValuesSourceAggregationBuilder (#48638)\n\n* ValuesSourceRegistry Prototype (#48758)\n\n* Remove generics from ValuesSource related classes (#49606)\n\n* fix percentile aggregation tests (#50712)\n\n* Basic thread safety for ValuesSourceRegistry (#50340)\n\n* Remove target value type from ValuesSourceAggregationBuilder (#49943)\n\n* Cleanup default values source type (#50992)\n\n* CoreValuesSourceType no longer implements Writable (#51276)\n\n* Remove genereics & hard coded ValuesSource references from Matrix Stats (#51131)\n\n* Put values source types on fields (#51503)\n\n* Remove VST Any (#51539)\n\n* Rewire terms agg to use new VS registry (#51182)\n\nAlso adds some basic AggTestCases for untested code\npaths (and boilerplate for future tests once the IT are\nconverted over)\n\n* Wire Cardinality aggregation to work with the ValuesSourceRegistry (#51337)\n\n* Wire Percentiles aggregator into new VS framework (#51639)\n\nThis required a bit of a refactor to percentiles itself.  Before. \nthe Builder would switch on the chosen algo to generate an\nalgo-specific factory.  This doesn't work (or at least.  would be\ndifficult) in the new VS framework.\n\nThis refactor consolidates both factories together and introduces\na PercentilesConfig object to act as a standardized way to pass\nalgo-specific parameters through the factory.  This object\nis then used when deciding which kind of aggregator to create\n\nNote: CoreValuesSourceType.HISTOGRAM still lives in core.  and will\nbe moved in a subsequent PR.\n\n* Remove generics and target value type from MultiVSAB (#51647)\n\n* fix checkstyle after merge (#52008)\n\n* Plumb ValuesSourceRegistry through to QuerySearchContext (#51710)\n\n* Convert RareTerms to new VS registry (#52166)\n\n* Wire up Value Count (#52225)\n\n* Wire up Max & Min aggregations (#52219)\n\n* ValuesSource refactoring: Wire up Sum aggregation (#52571)\n\n* ValuesSource refactoring: Wire up SigTerms aggregation (#52590)\n\n* Soft immutability for VSConfig (#52729)\n\n* Unmute testSupportedFieldTypes.  fix Percentiles/Ranks/Terms tests (#52734)\n\nAlso fixes Percentiles which was incorrectly specified to only accept\nnumeric.  but in fact also accepts Boolean and Date (because those are\nnumeric on master - thanks `testSupportedFieldTypes` for catching it!)\n\n* VS refactoring: Wire up stats aggregation (#52891)\n\n* ValuesSource refactoring: Wire up string_stats aggregation (#52875)\n\n* VS refactoring: Wire up median (MAD) aggregation (#52945)\n\n* fix valuesourcetype issue with constant_keyword field (#53041)\n\nthis commit implements `getValuesSourceType` for\nthe ConstantKeyword field type.\n\nmaster was merged into feature/extensible-values-source\nintroducing a new field type that was not implementing\n`getValuesSourceType`.\n\n* ValuesSource refactoring: Wire up Avg aggregation (#52752)\n\n* Wire PercentileRanks aggregator into new VS framework  (#51693)\n\n* Add a VSConfig resolver for aggregations not using the registry (#53038)\n\n* Vs refactor wire up ranges and date ranges (#52918)\n\n* Wire up geo_bounds aggregation to ValuesSourceRegistry (#53034)\n\nThis commit updates the geo_bounds aggregation to depend\non registering itself in the ValuesSourceRegistry\n\nrelates #42949.\n\n* VS refactoring: convert Boxplot to new registry (#53132)\n\n* Wire-up geotile_grid and geohash_grid to ValuesSourceRegistry (#53037)\n\nThis commit updates the geo*_grid aggregations to depend\non registering itself in the ValuesSourceRegistry\n\nrelates to the values-source refactoring meta issue #42949.\n\n* Wire-up geo_centroid agg to ValuesSourceRegistry (#53040)\n\nThis commit updates the geo_centroid aggregation to depend\non registering itself in the ValuesSourceRegistry.\n\nrelates to the values-source refactoring meta issue #42949.\n\n* Fix type tests for Missing aggregation (#53501)\n\n* ValuesSource Refactor: move histo VSType into XPack module (#53298)\n\n- Introduces a new API (`getBareAggregatorRegistrar()`) which allows plugins to register aggregations against existing agg definitions defined in Core.\n- This moves the histogram VSType over to XPack where it belongs. `getHistogramValues()` still remains as a Core concept\n- Moves the histo-specific bits over to xpack (e.g. the actual aggregator logic). This requires extra boilerplate since we need to create a new \"Analytics\" Percentile/Rank aggregators to deal with the histo field. Doubly-so since percentiles/ranks are extra boiler-plate'y... should be much lighter for other aggs\n\n* Wire up DateHistogram to the ValuesSourceRegistry (#53484)\n\n* Vs refactor parser cleanup (#53198)\n\nCo-authored-by: Zachary Tong <polyfractal@elastic.co>\nCo-authored-by: Zachary Tong <zach@elastic.co>\nCo-authored-by: Christos Soulios <1561376+csoulios@users.noreply.github.com>\nCo-authored-by: Tal Levy <JubBoy333@gmail.com>","date":"2020-03-27 03:01:07","modifiedFileCount":"214","status":"M","submitter":"Mark Tozzi"},{"authorTime":"2020-04-14 14:38:04","codes":[{"authorDate":"2020-03-27 03:01:07","commitOrder":3,"curCode":"    public void testUnmappedMissingGeoPoint() throws IOException {\n        CardinalityAggregationBuilder aggregationBuilder = new CardinalityAggregationBuilder(\"name\")\n            .field(\"number\").missing(new GeoPoint(42.39561, -71.13051));\n\n        testCase(aggregationBuilder, new MatchAllDocsQuery(), iw -> {\n            iw.addDocument(singleton(new NumericDocValuesField(\"unrelatedField\", 7)));\n            iw.addDocument(singleton(new NumericDocValuesField(\"unrelatedField\", 8)));\n            iw.addDocument(singleton(new NumericDocValuesField(\"unrelatedField\", 9)));\n        }, card -> {\n            assertEquals(1, card.getValue(), 0);\n            assertTrue(AggregationInspectionHelper.hasValue(card));\n        }, null);\n    }\n","date":"2020-03-27 03:01:07","endLine":173,"groupId":"10739","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testUnmappedMissingGeoPoint","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/48/315fec2c51f614bd38bf5e0d3f22da3e5910c1.src","preCode":"    public void testUnmappedMissingGeoPoint() throws IOException {\n        CardinalityAggregationBuilder aggregationBuilder = new CardinalityAggregationBuilder(\"name\")\n            .field(\"number\").missing(new GeoPoint(42.39561, -71.13051));\n\n        testCase(aggregationBuilder, new MatchAllDocsQuery(), iw -> {\n            iw.addDocument(singleton(new NumericDocValuesField(\"unrelatedField\", 7)));\n            iw.addDocument(singleton(new NumericDocValuesField(\"unrelatedField\", 8)));\n            iw.addDocument(singleton(new NumericDocValuesField(\"unrelatedField\", 9)));\n        }, card -> {\n            assertEquals(1, card.getValue(), 0);\n            assertTrue(AggregationInspectionHelper.hasValue(card));\n        }, null);\n    }\n","realPath":"server/src/test/java/org/elasticsearch/search/aggregations/metrics/CardinalityAggregatorTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":161,"status":"N"},{"authorDate":"2020-04-14 14:38:04","commitOrder":3,"curCode":"    public void testUnmappedMissingGeoPoint() throws IOException {\n        ValueCountAggregationBuilder aggregationBuilder = new ValueCountAggregationBuilder(\"name\")\n            .field(\"number\").missing(new GeoPoint(42.39561, -71.13051));\n\n        testCase(aggregationBuilder, new MatchAllDocsQuery(), iw -> {\n            iw.addDocument(singleton(new NumericDocValuesField(\"unrelatedField\", 7)));\n            iw.addDocument(singleton(new NumericDocValuesField(\"unrelatedField\", 8)));\n            iw.addDocument(singleton(new NumericDocValuesField(\"unrelatedField\", 9)));\n        }, valueCount -> {\n            assertEquals(3, valueCount.getValue(), 0);\n            assertTrue(AggregationInspectionHelper.hasValue(valueCount));\n        }, null);\n    }\n","date":"2020-04-14 14:38:04","endLine":253,"groupId":"10739","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testUnmappedMissingGeoPoint","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/11/c1e3a825cd5d36605a5d3b509cd011348604e3.src","preCode":"    public void testUnmappedMissingGeoPoint() throws IOException {\n        ValueCountAggregationBuilder aggregationBuilder = new ValueCountAggregationBuilder(\"name\")\n            .field(\"number\").missing(new GeoPoint(42.39561, -71.13051));\n\n        testCase(aggregationBuilder, new MatchAllDocsQuery(), iw -> {\n            iw.addDocument(singleton(new NumericDocValuesField(\"unrelatedField\", 7)));\n            iw.addDocument(singleton(new NumericDocValuesField(\"unrelatedField\", 8)));\n            iw.addDocument(singleton(new NumericDocValuesField(\"unrelatedField\", 9)));\n        }, card -> {\n            assertEquals(3, card.getValue(), 0);\n            assertTrue(AggregationInspectionHelper.hasValue(card));\n        }, null);\n    }\n","realPath":"server/src/test/java/org/elasticsearch/search/aggregations/metrics/ValueCountAggregatorTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":241,"status":"M"}],"commitId":"a862dff26c67744d63076f9d5d8a774ca17e7fe9","commitMessage":"@@@Add tests to MedianAbsoluteDeviationAggregator (#54884)\n\n","date":"2020-04-14 14:38:04","modifiedFileCount":"3","status":"M","submitter":"Christos Soulios"},{"authorTime":"2020-04-29 21:24:07","codes":[{"authorDate":"2020-04-29 21:24:07","commitOrder":4,"curCode":"    public void testUnmappedMissingGeoPoint() throws IOException {\n        CardinalityAggregationBuilder aggregationBuilder = new CardinalityAggregationBuilder(\"name\")\n            .field(\"number\").missing(new GeoPoint(42.39561, -71.13051));\n\n        testAggregation(aggregationBuilder, new MatchAllDocsQuery(), iw -> {\n            iw.addDocument(singleton(new NumericDocValuesField(\"unrelatedField\", 7)));\n            iw.addDocument(singleton(new NumericDocValuesField(\"unrelatedField\", 8)));\n            iw.addDocument(singleton(new NumericDocValuesField(\"unrelatedField\", 9)));\n        }, card -> {\n            assertEquals(1, card.getValue(), 0);\n            assertTrue(AggregationInspectionHelper.hasValue(card));\n        }, null);\n    }\n","date":"2020-04-29 21:24:07","endLine":171,"groupId":"10739","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"testUnmappedMissingGeoPoint","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/f8/d302754197fe3810533ab2f1dff32e137026a6.src","preCode":"    public void testUnmappedMissingGeoPoint() throws IOException {\n        CardinalityAggregationBuilder aggregationBuilder = new CardinalityAggregationBuilder(\"name\")\n            .field(\"number\").missing(new GeoPoint(42.39561, -71.13051));\n\n        testCase(aggregationBuilder, new MatchAllDocsQuery(), iw -> {\n            iw.addDocument(singleton(new NumericDocValuesField(\"unrelatedField\", 7)));\n            iw.addDocument(singleton(new NumericDocValuesField(\"unrelatedField\", 8)));\n            iw.addDocument(singleton(new NumericDocValuesField(\"unrelatedField\", 9)));\n        }, card -> {\n            assertEquals(1, card.getValue(), 0);\n            assertTrue(AggregationInspectionHelper.hasValue(card));\n        }, null);\n    }\n","realPath":"server/src/test/java/org/elasticsearch/search/aggregations/metrics/CardinalityAggregatorTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":159,"status":"M"},{"authorDate":"2020-04-29 21:24:07","commitOrder":4,"curCode":"    public void testUnmappedMissingGeoPoint() throws IOException {\n        ValueCountAggregationBuilder aggregationBuilder = new ValueCountAggregationBuilder(\"name\")\n            .field(\"number\").missing(new GeoPoint(42.39561, -71.13051));\n\n        testAggregation(aggregationBuilder, new MatchAllDocsQuery(), iw -> {\n            iw.addDocument(singleton(new NumericDocValuesField(\"unrelatedField\", 7)));\n            iw.addDocument(singleton(new NumericDocValuesField(\"unrelatedField\", 8)));\n            iw.addDocument(singleton(new NumericDocValuesField(\"unrelatedField\", 9)));\n        }, valueCount -> {\n            assertEquals(3, valueCount.getValue(), 0);\n            assertTrue(AggregationInspectionHelper.hasValue(valueCount));\n        },  null);\n    }\n","date":"2020-04-29 21:24:07","endLine":249,"groupId":"10739","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"testUnmappedMissingGeoPoint","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/05/c8678317bf7e9b5f3f84cb74a73dbbedf2b62f.src","preCode":"    public void testUnmappedMissingGeoPoint() throws IOException {\n        ValueCountAggregationBuilder aggregationBuilder = new ValueCountAggregationBuilder(\"name\")\n            .field(\"number\").missing(new GeoPoint(42.39561, -71.13051));\n\n        testCase(aggregationBuilder, new MatchAllDocsQuery(), iw -> {\n            iw.addDocument(singleton(new NumericDocValuesField(\"unrelatedField\", 7)));\n            iw.addDocument(singleton(new NumericDocValuesField(\"unrelatedField\", 8)));\n            iw.addDocument(singleton(new NumericDocValuesField(\"unrelatedField\", 9)));\n        }, valueCount -> {\n            assertEquals(3, valueCount.getValue(), 0);\n            assertTrue(AggregationInspectionHelper.hasValue(valueCount));\n        }, null);\n    }\n","realPath":"server/src/test/java/org/elasticsearch/search/aggregations/metrics/ValueCountAggregatorTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":237,"status":"M"}],"commitId":"ceb6e6227fb48cf6986f1124014df4cbc6f82a40","commitMessage":"@@@Modified searchAndReduce() to return empty agg when no docs exist  (#55826)\n\nModified AggregatorTestCase.searchAndReduce() method so that it returns an empty aggregation result when no documents have been inserted.\n\nAlso refactored several aggregation tests so they do not re-implement method AggregatorTestCase.testCase()\n\nFixes #55824","date":"2020-04-29 21:24:07","modifiedFileCount":"12","status":"M","submitter":"Christos Soulios"},{"authorTime":"2020-12-15 23:56:20","codes":[{"authorDate":"2020-12-15 23:56:20","commitOrder":5,"curCode":"    public void testUnmappedMissingGeoPoint() throws IOException {\n        CardinalityAggregationBuilder aggregationBuilder = new CardinalityAggregationBuilder(\"name\")\n            .field(\"number\").missing(new GeoPoint(42.39561, -71.13051));\n\n        testAggregation(aggregationBuilder, new MatchAllDocsQuery(), iw -> {\n            iw.addDocument(singleton(new NumericDocValuesField(\"unrelatedField\", 7)));\n            iw.addDocument(singleton(new NumericDocValuesField(\"unrelatedField\", 8)));\n            iw.addDocument(singleton(new NumericDocValuesField(\"unrelatedField\", 9)));\n        }, card -> {\n            assertEquals(1, card.getValue(), 0);\n            assertTrue(AggregationInspectionHelper.hasValue(card));\n        });\n    }\n","date":"2020-12-15 23:56:20","endLine":170,"groupId":"105496","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"testUnmappedMissingGeoPoint","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/ef/394d06c260ab705070651d95f63c96e324bef2.src","preCode":"    public void testUnmappedMissingGeoPoint() throws IOException {\n        CardinalityAggregationBuilder aggregationBuilder = new CardinalityAggregationBuilder(\"name\")\n            .field(\"number\").missing(new GeoPoint(42.39561, -71.13051));\n\n        testAggregation(aggregationBuilder, new MatchAllDocsQuery(), iw -> {\n            iw.addDocument(singleton(new NumericDocValuesField(\"unrelatedField\", 7)));\n            iw.addDocument(singleton(new NumericDocValuesField(\"unrelatedField\", 8)));\n            iw.addDocument(singleton(new NumericDocValuesField(\"unrelatedField\", 9)));\n        }, card -> {\n            assertEquals(1, card.getValue(), 0);\n            assertTrue(AggregationInspectionHelper.hasValue(card));\n        }, null);\n    }\n","realPath":"server/src/test/java/org/elasticsearch/search/aggregations/metrics/CardinalityAggregatorTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":158,"status":"M"},{"authorDate":"2020-12-15 23:56:20","commitOrder":5,"curCode":"    public void testUnmappedMissingGeoPoint() throws IOException {\n        ValueCountAggregationBuilder aggregationBuilder = new ValueCountAggregationBuilder(\"name\")\n            .field(\"number\").missing(new GeoPoint(42.39561, -71.13051));\n\n        testAggregation(aggregationBuilder, new MatchAllDocsQuery(), iw -> {\n            iw.addDocument(singleton(new NumericDocValuesField(\"unrelatedField\", 7)));\n            iw.addDocument(singleton(new NumericDocValuesField(\"unrelatedField\", 8)));\n            iw.addDocument(singleton(new NumericDocValuesField(\"unrelatedField\", 9)));\n        }, valueCount -> {\n            assertEquals(3, valueCount.getValue(), 0);\n            assertTrue(AggregationInspectionHelper.hasValue(valueCount));\n        });\n    }\n","date":"2020-12-15 23:56:20","endLine":252,"groupId":"105496","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"testUnmappedMissingGeoPoint","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/f5/edfceec03da8362dd14f67858b367715b7d115.src","preCode":"    public void testUnmappedMissingGeoPoint() throws IOException {\n        ValueCountAggregationBuilder aggregationBuilder = new ValueCountAggregationBuilder(\"name\")\n            .field(\"number\").missing(new GeoPoint(42.39561, -71.13051));\n\n        testAggregation(aggregationBuilder, new MatchAllDocsQuery(), iw -> {\n            iw.addDocument(singleton(new NumericDocValuesField(\"unrelatedField\", 7)));\n            iw.addDocument(singleton(new NumericDocValuesField(\"unrelatedField\", 8)));\n            iw.addDocument(singleton(new NumericDocValuesField(\"unrelatedField\", 9)));\n        }, valueCount -> {\n            assertEquals(3, valueCount.getValue(), 0);\n            assertTrue(AggregationInspectionHelper.hasValue(valueCount));\n        },  null);\n    }\n","realPath":"server/src/test/java/org/elasticsearch/search/aggregations/metrics/ValueCountAggregatorTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":240,"status":"M"}],"commitId":"79d32e544dea8bb5f652b59d9d258e39dcbf73b6","commitMessage":"@@@Clean up some AggregatorTests (#66291)\n\nThis cleans up some tests around aggregations.  specifically because I\nbumped into them while working on something else and was quite confused.\n\nThis removes support for passing `null` `MappedFieldTypes` to\n`AggregatorTestCase` and instead passes an empty array.\n\nIt also removes `getFieldAliases` from `AggregatorTestCase` and instead\naliases all fields to `<name>-alias` to encourage everyone to test\naliases all the time. We override it several times.  always copy and\npasting the code. Node we just do that by default.","date":"2020-12-15 23:56:20","modifiedFileCount":"13","status":"M","submitter":"Nik Everett"}]
