[{"authorTime":"2018-07-10 22:55:50","codes":[{"authorDate":"2018-07-10 22:55:50","commitOrder":1,"curCode":"    public void testDuellingFormatsValidParsing() {\n        assertSameDate(\"1522332219\", \"epoch_second\");\n        assertSameDate(\"1522332219321\", \"epoch_millis\");\n\n        assertSameDate(\"20181126\", \"basic_date\");\n        assertSameDate(\"20181126T121212.123Z\", \"basic_date_time\");\n        assertSameDate(\"20181126T121212.123+10:00\", \"basic_date_time\");\n        assertSameDate(\"20181126T121212.123-0800\", \"basic_date_time\");\n\n        assertSameDate(\"20181126T121212Z\", \"basic_date_time_no_millis\");\n        assertSameDate(\"2018363\", \"basic_ordinal_date\");\n        assertSameDate(\"2018363T121212.123Z\", \"basic_ordinal_date_time\");\n        assertSameDate(\"2018363T121212Z\", \"basic_ordinal_date_time_no_millis\");\n        assertSameDate(\"121212.123Z\", \"basic_time\");\n        assertSameDate(\"121212Z\", \"basic_time_no_millis\");\n        assertSameDate(\"T121212.123Z\", \"basic_t_time\");\n        assertSameDate(\"T121212Z\", \"basic_t_time_no_millis\");\n        assertSameDate(\"2018W313\", \"basic_week_date\");\n        assertSameDate(\"1W313\", \"basic_week_date\");\n        assertSameDate(\"18W313\", \"basic_week_date\");\n        assertSameDate(\"2018W313T121212.123Z\", \"basic_week_date_time\");\n        assertSameDate(\"2018W313T121212Z\", \"basic_week_date_time_no_millis\");\n\n        assertSameDate(\"2018-12-31\", \"date\");\n        assertSameDate(\"18-5-6\", \"date\");\n\n        assertSameDate(\"2018-12-31T12\", \"date_hour\");\n        assertSameDate(\"2018-12-31T8\", \"date_hour\");\n\n        assertSameDate(\"2018-12-31T12:12\", \"date_hour_minute\");\n        assertSameDate(\"2018-12-31T8:3\", \"date_hour_minute\");\n\n        assertSameDate(\"2018-12-31T12:12:12\", \"date_hour_minute_second\");\n        assertSameDate(\"2018-12-31T12:12:1\", \"date_hour_minute_second\");\n\n        assertSameDate(\"2018-12-31T12:12:12.123\", \"date_hour_minute_second_fraction\");\n        assertSameDate(\"2018-12-31T12:12:12.123\", \"date_hour_minute_second_millis\");\n        assertSameDate(\"2018-12-31T12:12:12.1\", \"date_hour_minute_second_millis\");\n        assertSameDate(\"2018-12-31T12:12:12.1\", \"date_hour_minute_second_fraction\");\n\n        assertSameDate(\"2018-12-31\", \"date_optional_time\");\n        assertSameDate(\"2018-12-1\", \"date_optional_time\");\n        assertSameDate(\"2018-12-31T10:15:30\", \"date_optional_time\");\n        assertSameDate(\"2018-12-31T10:15:3\", \"date_optional_time\");\n        assertSameDate(\"2018-12-31T10:5:30\", \"date_optional_time\");\n        assertSameDate(\"2018-12-31T1:15:30\", \"date_optional_time\");\n\n        assertSameDate(\"2018-12-31T10:15:30.123Z\", \"date_time\");\n        assertSameDate(\"2018-12-31T10:15:30.11Z\", \"date_time\");\n        assertSameDate(\"2018-12-31T10:15:3.123Z\", \"date_time\");\n\n        assertSameDate(\"2018-12-31T10:15:30Z\", \"date_time_no_millis\");\n        assertSameDate(\"2018-12-31T10:5:30Z\", \"date_time_no_millis\");\n        assertSameDate(\"2018-12-31T10:15:3Z\", \"date_time_no_millis\");\n        assertSameDate(\"2018-12-31T1:15:30Z\", \"date_time_no_millis\");\n\n        assertSameDate(\"12\", \"hour\");\n        assertSameDate(\"01\", \"hour\");\n        assertSameDate(\"1\", \"hour\");\n\n        assertSameDate(\"12:12\", \"hour_minute\");\n        assertSameDate(\"12:01\", \"hour_minute\");\n        assertSameDate(\"12:1\", \"hour_minute\");\n\n        assertSameDate(\"12:12:12\", \"hour_minute_second\");\n        assertSameDate(\"12:12:01\", \"hour_minute_second\");\n        assertSameDate(\"12:12:1\", \"hour_minute_second\");\n\n        assertSameDate(\"12:12:12.123\", \"hour_minute_second_fraction\");\n        assertSameDate(\"12:12:12.1\", \"hour_minute_second_fraction\");\n        assertParseException(\"12:12:12\", \"hour_minute_second_fraction\");\n        assertSameDate(\"12:12:12.123\", \"hour_minute_second_millis\");\n        assertSameDate(\"12:12:12.1\", \"hour_minute_second_millis\");\n        assertParseException(\"12:12:12\", \"hour_minute_second_millis\");\n\n        assertSameDate(\"2018-128\", \"ordinal_date\");\n        assertSameDate(\"2018-1\", \"ordinal_date\");\n\n        assertSameDate(\"2018-128T10:15:30.123Z\", \"ordinal_date_time\");\n        assertSameDate(\"2018-1T10:15:30.123Z\", \"ordinal_date_time\");\n\n        assertSameDate(\"2018-128T10:15:30Z\", \"ordinal_date_time_no_millis\");\n        assertSameDate(\"2018-1T10:15:30Z\", \"ordinal_date_time_no_millis\");\n\n        assertSameDate(\"10:15:30.123Z\", \"time\");\n        assertSameDate(\"1:15:30.123Z\", \"time\");\n        assertSameDate(\"10:1:30.123Z\", \"time\");\n        assertSameDate(\"10:15:3.123Z\", \"time\");\n        assertParseException(\"10:15:3.1\", \"time\");\n        assertParseException(\"10:15:3Z\", \"time\");\n\n        assertSameDate(\"10:15:30Z\", \"time_no_millis\");\n        assertSameDate(\"01:15:30Z\", \"time_no_millis\");\n        assertSameDate(\"1:15:30Z\", \"time_no_millis\");\n        assertSameDate(\"10:5:30Z\", \"time_no_millis\");\n        assertSameDate(\"10:15:3Z\", \"time_no_millis\");\n        assertParseException(\"10:15:3\", \"time_no_millis\");\n\n        assertSameDate(\"T10:15:30.123Z\", \"t_time\");\n        assertSameDate(\"T1:15:30.123Z\", \"t_time\");\n        assertSameDate(\"T10:1:30.123Z\", \"t_time\");\n        assertSameDate(\"T10:15:3.123Z\", \"t_time\");\n        assertParseException(\"T10:15:3.1\", \"t_time\");\n        assertParseException(\"T10:15:3Z\", \"t_time\");\n\n        assertSameDate(\"T10:15:30Z\", \"t_time_no_millis\");\n        assertSameDate(\"T1:15:30Z\", \"t_time_no_millis\");\n        assertSameDate(\"T10:1:30Z\", \"t_time_no_millis\");\n        assertSameDate(\"T10:15:3Z\", \"t_time_no_millis\");\n        assertParseException(\"T10:15:3\", \"t_time_no_millis\");\n\n        assertSameDate(\"2012-W48-6\", \"week_date\");\n        assertSameDate(\"2012-W01-6\", \"week_date\");\n        assertSameDate(\"2012-W1-6\", \"week_date\");\n        \r\n        assertJodaParseException(\"2012-W1-8\", \"week_date\",\n            \"Cannot parse \\\"2012-W1-8\\\": Value 8 for dayOfWeek must be in the range [1,7]\");\n        assertJavaTimeParseException(\"2012-W1-8\", \"week_date\", \"Text '2012-W1-8' could not be parsed\");\n\n        assertSameDate(\"2012-W48-6T10:15:30.123Z\", \"week_date_time\");\n        assertSameDate(\"2012-W1-6T10:15:30.123Z\", \"week_date_time\");\n\n        assertSameDate(\"2012-W48-6T10:15:30Z\", \"week_date_time_no_millis\");\n        assertSameDate(\"2012-W1-6T10:15:30Z\", \"week_date_time_no_millis\");\n\n        assertSameDate(\"2012\", \"year\");\n        assertSameDate(\"1\", \"year\");\n        assertSameDate(\"-2000\", \"year\");\n\n        assertSameDate(\"2012-12\", \"yearMonth\");\n        assertSameDate(\"1-1\", \"yearMonth\");\n\n        assertSameDate(\"2012-12-31\", \"yearMonthDay\");\n        assertSameDate(\"1-12-31\", \"yearMonthDay\");\n        assertSameDate(\"2012-1-31\", \"yearMonthDay\");\n        assertSameDate(\"2012-12-1\", \"yearMonthDay\");\n\n        assertSameDate(\"2018\", \"week_year\");\n        assertSameDate(\"1\", \"week_year\");\n        assertSameDate(\"2017\", \"week_year\");\n\n        assertSameDate(\"2018-W29\", \"weekyear_week\");\n        assertSameDate(\"2018-W1\", \"weekyear_week\");\n\n        assertSameDate(\"2012-W31-5\", \"weekyear_week_day\");\n        assertSameDate(\"2012-W1-1\", \"weekyear_week_day\");\n    }\n","date":"2018-07-10 22:55:50","endLine":216,"groupId":"28896","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testDuellingFormatsValidParsing","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/7c/6f0872288300248d142d2c4aaf95b345824d3e.src","preCode":"    public void testDuellingFormatsValidParsing() {\n        assertSameDate(\"1522332219\", \"epoch_second\");\n        assertSameDate(\"1522332219321\", \"epoch_millis\");\n\n        assertSameDate(\"20181126\", \"basic_date\");\n        assertSameDate(\"20181126T121212.123Z\", \"basic_date_time\");\n        assertSameDate(\"20181126T121212.123+10:00\", \"basic_date_time\");\n        assertSameDate(\"20181126T121212.123-0800\", \"basic_date_time\");\n\n        assertSameDate(\"20181126T121212Z\", \"basic_date_time_no_millis\");\n        assertSameDate(\"2018363\", \"basic_ordinal_date\");\n        assertSameDate(\"2018363T121212.123Z\", \"basic_ordinal_date_time\");\n        assertSameDate(\"2018363T121212Z\", \"basic_ordinal_date_time_no_millis\");\n        assertSameDate(\"121212.123Z\", \"basic_time\");\n        assertSameDate(\"121212Z\", \"basic_time_no_millis\");\n        assertSameDate(\"T121212.123Z\", \"basic_t_time\");\n        assertSameDate(\"T121212Z\", \"basic_t_time_no_millis\");\n        assertSameDate(\"2018W313\", \"basic_week_date\");\n        assertSameDate(\"1W313\", \"basic_week_date\");\n        assertSameDate(\"18W313\", \"basic_week_date\");\n        assertSameDate(\"2018W313T121212.123Z\", \"basic_week_date_time\");\n        assertSameDate(\"2018W313T121212Z\", \"basic_week_date_time_no_millis\");\n\n        assertSameDate(\"2018-12-31\", \"date\");\n        assertSameDate(\"18-5-6\", \"date\");\n\n        assertSameDate(\"2018-12-31T12\", \"date_hour\");\n        assertSameDate(\"2018-12-31T8\", \"date_hour\");\n\n        assertSameDate(\"2018-12-31T12:12\", \"date_hour_minute\");\n        assertSameDate(\"2018-12-31T8:3\", \"date_hour_minute\");\n\n        assertSameDate(\"2018-12-31T12:12:12\", \"date_hour_minute_second\");\n        assertSameDate(\"2018-12-31T12:12:1\", \"date_hour_minute_second\");\n\n        assertSameDate(\"2018-12-31T12:12:12.123\", \"date_hour_minute_second_fraction\");\n        assertSameDate(\"2018-12-31T12:12:12.123\", \"date_hour_minute_second_millis\");\n        assertSameDate(\"2018-12-31T12:12:12.1\", \"date_hour_minute_second_millis\");\n        assertSameDate(\"2018-12-31T12:12:12.1\", \"date_hour_minute_second_fraction\");\n\n        assertSameDate(\"2018-12-31\", \"date_optional_time\");\n        assertSameDate(\"2018-12-1\", \"date_optional_time\");\n        assertSameDate(\"2018-12-31T10:15:30\", \"date_optional_time\");\n        assertSameDate(\"2018-12-31T10:15:3\", \"date_optional_time\");\n        assertSameDate(\"2018-12-31T10:5:30\", \"date_optional_time\");\n        assertSameDate(\"2018-12-31T1:15:30\", \"date_optional_time\");\n\n        assertSameDate(\"2018-12-31T10:15:30.123Z\", \"date_time\");\n        assertSameDate(\"2018-12-31T10:15:30.11Z\", \"date_time\");\n        assertSameDate(\"2018-12-31T10:15:3.123Z\", \"date_time\");\n\n        assertSameDate(\"2018-12-31T10:15:30Z\", \"date_time_no_millis\");\n        assertSameDate(\"2018-12-31T10:5:30Z\", \"date_time_no_millis\");\n        assertSameDate(\"2018-12-31T10:15:3Z\", \"date_time_no_millis\");\n        assertSameDate(\"2018-12-31T1:15:30Z\", \"date_time_no_millis\");\n\n        assertSameDate(\"12\", \"hour\");\n        assertSameDate(\"01\", \"hour\");\n        assertSameDate(\"1\", \"hour\");\n\n        assertSameDate(\"12:12\", \"hour_minute\");\n        assertSameDate(\"12:01\", \"hour_minute\");\n        assertSameDate(\"12:1\", \"hour_minute\");\n\n        assertSameDate(\"12:12:12\", \"hour_minute_second\");\n        assertSameDate(\"12:12:01\", \"hour_minute_second\");\n        assertSameDate(\"12:12:1\", \"hour_minute_second\");\n\n        assertSameDate(\"12:12:12.123\", \"hour_minute_second_fraction\");\n        assertSameDate(\"12:12:12.1\", \"hour_minute_second_fraction\");\n        assertParseException(\"12:12:12\", \"hour_minute_second_fraction\");\n        assertSameDate(\"12:12:12.123\", \"hour_minute_second_millis\");\n        assertSameDate(\"12:12:12.1\", \"hour_minute_second_millis\");\n        assertParseException(\"12:12:12\", \"hour_minute_second_millis\");\n\n        assertSameDate(\"2018-128\", \"ordinal_date\");\n        assertSameDate(\"2018-1\", \"ordinal_date\");\n\n        assertSameDate(\"2018-128T10:15:30.123Z\", \"ordinal_date_time\");\n        assertSameDate(\"2018-1T10:15:30.123Z\", \"ordinal_date_time\");\n\n        assertSameDate(\"2018-128T10:15:30Z\", \"ordinal_date_time_no_millis\");\n        assertSameDate(\"2018-1T10:15:30Z\", \"ordinal_date_time_no_millis\");\n\n        assertSameDate(\"10:15:30.123Z\", \"time\");\n        assertSameDate(\"1:15:30.123Z\", \"time\");\n        assertSameDate(\"10:1:30.123Z\", \"time\");\n        assertSameDate(\"10:15:3.123Z\", \"time\");\n        assertParseException(\"10:15:3.1\", \"time\");\n        assertParseException(\"10:15:3Z\", \"time\");\n\n        assertSameDate(\"10:15:30Z\", \"time_no_millis\");\n        assertSameDate(\"01:15:30Z\", \"time_no_millis\");\n        assertSameDate(\"1:15:30Z\", \"time_no_millis\");\n        assertSameDate(\"10:5:30Z\", \"time_no_millis\");\n        assertSameDate(\"10:15:3Z\", \"time_no_millis\");\n        assertParseException(\"10:15:3\", \"time_no_millis\");\n\n        assertSameDate(\"T10:15:30.123Z\", \"t_time\");\n        assertSameDate(\"T1:15:30.123Z\", \"t_time\");\n        assertSameDate(\"T10:1:30.123Z\", \"t_time\");\n        assertSameDate(\"T10:15:3.123Z\", \"t_time\");\n        assertParseException(\"T10:15:3.1\", \"t_time\");\n        assertParseException(\"T10:15:3Z\", \"t_time\");\n\n        assertSameDate(\"T10:15:30Z\", \"t_time_no_millis\");\n        assertSameDate(\"T1:15:30Z\", \"t_time_no_millis\");\n        assertSameDate(\"T10:1:30Z\", \"t_time_no_millis\");\n        assertSameDate(\"T10:15:3Z\", \"t_time_no_millis\");\n        assertParseException(\"T10:15:3\", \"t_time_no_millis\");\n\n        assertSameDate(\"2012-W48-6\", \"week_date\");\n        assertSameDate(\"2012-W01-6\", \"week_date\");\n        assertSameDate(\"2012-W1-6\", \"week_date\");\n        \r\n        assertJodaParseException(\"2012-W1-8\", \"week_date\",\n            \"Cannot parse \\\"2012-W1-8\\\": Value 8 for dayOfWeek must be in the range [1,7]\");\n        assertJavaTimeParseException(\"2012-W1-8\", \"week_date\", \"Text '2012-W1-8' could not be parsed\");\n\n        assertSameDate(\"2012-W48-6T10:15:30.123Z\", \"week_date_time\");\n        assertSameDate(\"2012-W1-6T10:15:30.123Z\", \"week_date_time\");\n\n        assertSameDate(\"2012-W48-6T10:15:30Z\", \"week_date_time_no_millis\");\n        assertSameDate(\"2012-W1-6T10:15:30Z\", \"week_date_time_no_millis\");\n\n        assertSameDate(\"2012\", \"year\");\n        assertSameDate(\"1\", \"year\");\n        assertSameDate(\"-2000\", \"year\");\n\n        assertSameDate(\"2012-12\", \"yearMonth\");\n        assertSameDate(\"1-1\", \"yearMonth\");\n\n        assertSameDate(\"2012-12-31\", \"yearMonthDay\");\n        assertSameDate(\"1-12-31\", \"yearMonthDay\");\n        assertSameDate(\"2012-1-31\", \"yearMonthDay\");\n        assertSameDate(\"2012-12-1\", \"yearMonthDay\");\n\n        assertSameDate(\"2018\", \"week_year\");\n        assertSameDate(\"1\", \"week_year\");\n        assertSameDate(\"2017\", \"week_year\");\n\n        assertSameDate(\"2018-W29\", \"weekyear_week\");\n        assertSameDate(\"2018-W1\", \"weekyear_week\");\n\n        assertSameDate(\"2012-W31-5\", \"weekyear_week_day\");\n        assertSameDate(\"2012-W1-1\", \"weekyear_week_day\");\n    }\n","realPath":"server/src/test/java/org/elasticsearch/common/joda/JavaJodaTimeDuellingTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":70,"status":"B"},{"authorDate":"2018-07-10 22:55:50","commitOrder":1,"curCode":"    public void testDuelingStrictParsing() {\n        assertSameDate(\"2018W313\", \"strict_basic_week_date\");\n        assertParseException(\"18W313\", \"strict_basic_week_date\");\n        assertSameDate(\"2018W313T121212.123Z\", \"strict_basic_week_date_time\");\n        assertParseException(\"2018W313T12128.123Z\", \"strict_basic_week_date_time\");\n        assertParseException(\"2018W313T81212.123Z\", \"strict_basic_week_date_time\");\n        assertParseException(\"2018W313T12812.123Z\", \"strict_basic_week_date_time\");\n        assertParseException(\"2018W313T12812.1Z\", \"strict_basic_week_date_time\");\n        assertSameDate(\"2018W313T121212Z\", \"strict_basic_week_date_time_no_millis\");\n        assertParseException(\"2018W313T12128Z\", \"strict_basic_week_date_time_no_millis\");\n        assertParseException(\"2018W313T81212Z\", \"strict_basic_week_date_time_no_millis\");\n        assertParseException(\"2018W313T12812Z\", \"strict_basic_week_date_time_no_millis\");\n        assertSameDate(\"2018-12-31\", \"strict_date\");\n        assertParseException(\"2018-8-31\", \"strict_date\");\n        assertSameDate(\"2018-12-31T12\", \"strict_date_hour\");\n        assertParseException(\"2018-12-31T8\", \"strict_date_hour\");\n        assertSameDate(\"2018-12-31T12:12\", \"strict_date_hour_minute\");\n        assertParseException(\"2018-12-31T8:3\", \"strict_date_hour_minute\");\n        assertSameDate(\"2018-12-31T12:12:12\", \"strict_date_hour_minute_second\");\n        assertParseException(\"2018-12-31T12:12:1\", \"strict_date_hour_minute_second\");\n        assertSameDate(\"2018-12-31T12:12:12.123\", \"strict_date_hour_minute_second_fraction\");\n        assertSameDate(\"2018-12-31T12:12:12.123\", \"strict_date_hour_minute_second_millis\");\n        assertSameDate(\"2018-12-31T12:12:12.1\", \"strict_date_hour_minute_second_millis\");\n        assertSameDate(\"2018-12-31T12:12:12.1\", \"strict_date_hour_minute_second_fraction\");\n        assertParseException(\"2018-12-31T12:12:12\", \"strict_date_hour_minute_second_millis\");\n        assertParseException(\"2018-12-31T12:12:12\", \"strict_date_hour_minute_second_fraction\");\n        assertSameDate(\"2018-12-31\", \"strict_date_optional_time\");\n        assertParseException(\"2018-12-1\", \"strict_date_optional_time\");\n        assertParseException(\"2018-1-31\", \"strict_date_optional_time\");\n        assertSameDate(\"2018-12-31T10:15:30\", \"strict_date_optional_time\");\n        assertParseException(\"2018-12-31T10:15:3\", \"strict_date_optional_time\");\n        assertParseException(\"2018-12-31T10:5:30\", \"strict_date_optional_time\");\n        assertParseException(\"2018-12-31T9:15:30\", \"strict_date_optional_time\");\n        assertSameDate(\"2018-12-31T10:15:30.123Z\", \"strict_date_time\");\n        assertSameDate(\"2018-12-31T10:15:30.11Z\", \"strict_date_time\");\n        assertParseException(\"2018-12-31T10:15:3.123Z\", \"strict_date_time\");\n        assertParseException(\"2018-12-31T10:5:30.123Z\", \"strict_date_time\");\n        assertParseException(\"2018-12-31T1:15:30.123Z\", \"strict_date_time\");\n        assertSameDate(\"2018-12-31T10:15:30Z\", \"strict_date_time_no_millis\");\n        assertParseException(\"2018-12-31T10:5:30Z\", \"strict_date_time_no_millis\");\n        assertParseException(\"2018-12-31T10:15:3Z\", \"strict_date_time_no_millis\");\n        assertParseException(\"2018-12-31T1:15:30Z\", \"strict_date_time_no_millis\");\n        assertSameDate(\"12\", \"strict_hour\");\n        assertSameDate(\"01\", \"strict_hour\");\n        assertParseException(\"1\", \"strict_hour\");\n        assertSameDate(\"12:12\", \"strict_hour_minute\");\n        assertSameDate(\"12:01\", \"strict_hour_minute\");\n        assertParseException(\"12:1\", \"strict_hour_minute\");\n        assertSameDate(\"12:12:12\", \"strict_hour_minute_second\");\n        assertSameDate(\"12:12:01\", \"strict_hour_minute_second\");\n        assertParseException(\"12:12:1\", \"strict_hour_minute_second\");\n        assertSameDate(\"12:12:12.123\", \"strict_hour_minute_second_fraction\");\n        assertSameDate(\"12:12:12.1\", \"strict_hour_minute_second_fraction\");\n        assertParseException(\"12:12:12\", \"strict_hour_minute_second_fraction\");\n        assertSameDate(\"12:12:12.123\", \"strict_hour_minute_second_millis\");\n        assertSameDate(\"12:12:12.1\", \"strict_hour_minute_second_millis\");\n        assertParseException(\"12:12:12\", \"strict_hour_minute_second_millis\");\n        assertSameDate(\"2018-128\", \"strict_ordinal_date\");\n        assertParseException(\"2018-1\", \"strict_ordinal_date\");\n\n        assertSameDate(\"2018-128T10:15:30.123Z\", \"strict_ordinal_date_time\");\n        assertParseException(\"2018-1T10:15:30.123Z\", \"strict_ordinal_date_time\");\n\n        assertSameDate(\"2018-128T10:15:30Z\", \"strict_ordinal_date_time_no_millis\");\n        assertParseException(\"2018-1T10:15:30Z\", \"strict_ordinal_date_time_no_millis\");\n\n        assertSameDate(\"10:15:30.123Z\", \"strict_time\");\n        assertParseException(\"1:15:30.123Z\", \"strict_time\");\n        assertParseException(\"10:1:30.123Z\", \"strict_time\");\n        assertParseException(\"10:15:3.123Z\", \"strict_time\");\n        assertParseException(\"10:15:3.1\", \"strict_time\");\n        assertParseException(\"10:15:3Z\", \"strict_time\");\n\n        assertSameDate(\"10:15:30Z\", \"strict_time_no_millis\");\n        assertSameDate(\"01:15:30Z\", \"strict_time_no_millis\");\n        assertParseException(\"1:15:30Z\", \"strict_time_no_millis\");\n        assertParseException(\"10:5:30Z\", \"strict_time_no_millis\");\n        assertParseException(\"10:15:3Z\", \"strict_time_no_millis\");\n        assertParseException(\"10:15:3\", \"strict_time_no_millis\");\n\n        assertSameDate(\"T10:15:30.123Z\", \"strict_t_time\");\n        assertParseException(\"T1:15:30.123Z\", \"strict_t_time\");\n        assertParseException(\"T10:1:30.123Z\", \"strict_t_time\");\n        assertParseException(\"T10:15:3.123Z\", \"strict_t_time\");\n        assertParseException(\"T10:15:3.1\", \"strict_t_time\");\n        assertParseException(\"T10:15:3Z\", \"strict_t_time\");\n\n        assertSameDate(\"T10:15:30Z\", \"strict_t_time_no_millis\");\n        assertParseException(\"T1:15:30Z\", \"strict_t_time_no_millis\");\n        assertParseException(\"T10:1:30Z\", \"strict_t_time_no_millis\");\n        assertParseException(\"T10:15:3Z\", \"strict_t_time_no_millis\");\n        assertParseException(\"T10:15:3\", \"strict_t_time_no_millis\");\n\n        assertSameDate(\"2012-W48-6\", \"strict_week_date\");\n        assertSameDate(\"2012-W01-6\", \"strict_week_date\");\n        assertParseException(\"2012-W1-6\", \"strict_week_date\");\n        assertParseException(\"2012-W1-8\", \"strict_week_date\");\n\n        assertSameDate(\"2012-W48-6\", \"strict_week_date\");\n        assertSameDate(\"2012-W01-6\", \"strict_week_date\");\n        assertParseException(\"2012-W1-6\", \"strict_week_date\");\n        \r\n        assertJodaParseException(\"2012-W01-8\", \"strict_week_date\",\n            \"Cannot parse \\\"2012-W01-8\\\": Value 8 for dayOfWeek must be in the range [1,7]\");\n        assertJavaTimeParseException(\"2012-W01-8\", \"strict_week_date\", \"Text '2012-W01-8' could not be parsed\");\n\n        assertSameDate(\"2012-W48-6T10:15:30.123Z\", \"strict_week_date_time\");\n        assertParseException(\"2012-W1-6T10:15:30.123Z\", \"strict_week_date_time\");\n\n        assertSameDate(\"2012-W48-6T10:15:30Z\", \"strict_week_date_time_no_millis\");\n        assertParseException(\"2012-W1-6T10:15:30Z\", \"strict_week_date_time_no_millis\");\n\n        assertSameDate(\"2012\", \"strict_year\");\n        assertParseException(\"1\", \"strict_year\");\n        assertSameDate(\"-2000\", \"strict_year\");\n\n        assertSameDate(\"2012-12\", \"strict_year_month\");\n        assertParseException(\"1-1\", \"strict_year_month\");\n\n        assertSameDate(\"2012-12-31\", \"strict_year_month_day\");\n        assertParseException(\"1-12-31\", \"strict_year_month_day\");\n        assertParseException(\"2012-1-31\", \"strict_year_month_day\");\n        assertParseException(\"2012-12-1\", \"strict_year_month_day\");\n\n        assertSameDate(\"2018\", \"strict_weekyear\");\n        assertParseException(\"1\", \"strict_weekyear\");\n\n        assertSameDate(\"2018\", \"strict_weekyear\");\n        assertSameDate(\"2017\", \"strict_weekyear\");\n        assertParseException(\"1\", \"strict_weekyear\");\n\n        assertSameDate(\"2018-W29\", \"strict_weekyear_week\");\n        assertSameDate(\"2018-W01\", \"strict_weekyear_week\");\n        assertParseException(\"2018-W1\", \"strict_weekyear_week\");\n\n        assertSameDate(\"2012-W31-5\", \"strict_weekyear_week_day\");\n        assertParseException(\"2012-W1-1\", \"strict_weekyear_week_day\");\n    }\n","date":"2018-07-10 22:55:50","endLine":355,"groupId":"17876","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testDuelingStrictParsing","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/7c/6f0872288300248d142d2c4aaf95b345824d3e.src","preCode":"    public void testDuelingStrictParsing() {\n        assertSameDate(\"2018W313\", \"strict_basic_week_date\");\n        assertParseException(\"18W313\", \"strict_basic_week_date\");\n        assertSameDate(\"2018W313T121212.123Z\", \"strict_basic_week_date_time\");\n        assertParseException(\"2018W313T12128.123Z\", \"strict_basic_week_date_time\");\n        assertParseException(\"2018W313T81212.123Z\", \"strict_basic_week_date_time\");\n        assertParseException(\"2018W313T12812.123Z\", \"strict_basic_week_date_time\");\n        assertParseException(\"2018W313T12812.1Z\", \"strict_basic_week_date_time\");\n        assertSameDate(\"2018W313T121212Z\", \"strict_basic_week_date_time_no_millis\");\n        assertParseException(\"2018W313T12128Z\", \"strict_basic_week_date_time_no_millis\");\n        assertParseException(\"2018W313T81212Z\", \"strict_basic_week_date_time_no_millis\");\n        assertParseException(\"2018W313T12812Z\", \"strict_basic_week_date_time_no_millis\");\n        assertSameDate(\"2018-12-31\", \"strict_date\");\n        assertParseException(\"2018-8-31\", \"strict_date\");\n        assertSameDate(\"2018-12-31T12\", \"strict_date_hour\");\n        assertParseException(\"2018-12-31T8\", \"strict_date_hour\");\n        assertSameDate(\"2018-12-31T12:12\", \"strict_date_hour_minute\");\n        assertParseException(\"2018-12-31T8:3\", \"strict_date_hour_minute\");\n        assertSameDate(\"2018-12-31T12:12:12\", \"strict_date_hour_minute_second\");\n        assertParseException(\"2018-12-31T12:12:1\", \"strict_date_hour_minute_second\");\n        assertSameDate(\"2018-12-31T12:12:12.123\", \"strict_date_hour_minute_second_fraction\");\n        assertSameDate(\"2018-12-31T12:12:12.123\", \"strict_date_hour_minute_second_millis\");\n        assertSameDate(\"2018-12-31T12:12:12.1\", \"strict_date_hour_minute_second_millis\");\n        assertSameDate(\"2018-12-31T12:12:12.1\", \"strict_date_hour_minute_second_fraction\");\n        assertParseException(\"2018-12-31T12:12:12\", \"strict_date_hour_minute_second_millis\");\n        assertParseException(\"2018-12-31T12:12:12\", \"strict_date_hour_minute_second_fraction\");\n        assertSameDate(\"2018-12-31\", \"strict_date_optional_time\");\n        assertParseException(\"2018-12-1\", \"strict_date_optional_time\");\n        assertParseException(\"2018-1-31\", \"strict_date_optional_time\");\n        assertSameDate(\"2018-12-31T10:15:30\", \"strict_date_optional_time\");\n        assertParseException(\"2018-12-31T10:15:3\", \"strict_date_optional_time\");\n        assertParseException(\"2018-12-31T10:5:30\", \"strict_date_optional_time\");\n        assertParseException(\"2018-12-31T9:15:30\", \"strict_date_optional_time\");\n        assertSameDate(\"2018-12-31T10:15:30.123Z\", \"strict_date_time\");\n        assertSameDate(\"2018-12-31T10:15:30.11Z\", \"strict_date_time\");\n        assertParseException(\"2018-12-31T10:15:3.123Z\", \"strict_date_time\");\n        assertParseException(\"2018-12-31T10:5:30.123Z\", \"strict_date_time\");\n        assertParseException(\"2018-12-31T1:15:30.123Z\", \"strict_date_time\");\n        assertSameDate(\"2018-12-31T10:15:30Z\", \"strict_date_time_no_millis\");\n        assertParseException(\"2018-12-31T10:5:30Z\", \"strict_date_time_no_millis\");\n        assertParseException(\"2018-12-31T10:15:3Z\", \"strict_date_time_no_millis\");\n        assertParseException(\"2018-12-31T1:15:30Z\", \"strict_date_time_no_millis\");\n        assertSameDate(\"12\", \"strict_hour\");\n        assertSameDate(\"01\", \"strict_hour\");\n        assertParseException(\"1\", \"strict_hour\");\n        assertSameDate(\"12:12\", \"strict_hour_minute\");\n        assertSameDate(\"12:01\", \"strict_hour_minute\");\n        assertParseException(\"12:1\", \"strict_hour_minute\");\n        assertSameDate(\"12:12:12\", \"strict_hour_minute_second\");\n        assertSameDate(\"12:12:01\", \"strict_hour_minute_second\");\n        assertParseException(\"12:12:1\", \"strict_hour_minute_second\");\n        assertSameDate(\"12:12:12.123\", \"strict_hour_minute_second_fraction\");\n        assertSameDate(\"12:12:12.1\", \"strict_hour_minute_second_fraction\");\n        assertParseException(\"12:12:12\", \"strict_hour_minute_second_fraction\");\n        assertSameDate(\"12:12:12.123\", \"strict_hour_minute_second_millis\");\n        assertSameDate(\"12:12:12.1\", \"strict_hour_minute_second_millis\");\n        assertParseException(\"12:12:12\", \"strict_hour_minute_second_millis\");\n        assertSameDate(\"2018-128\", \"strict_ordinal_date\");\n        assertParseException(\"2018-1\", \"strict_ordinal_date\");\n\n        assertSameDate(\"2018-128T10:15:30.123Z\", \"strict_ordinal_date_time\");\n        assertParseException(\"2018-1T10:15:30.123Z\", \"strict_ordinal_date_time\");\n\n        assertSameDate(\"2018-128T10:15:30Z\", \"strict_ordinal_date_time_no_millis\");\n        assertParseException(\"2018-1T10:15:30Z\", \"strict_ordinal_date_time_no_millis\");\n\n        assertSameDate(\"10:15:30.123Z\", \"strict_time\");\n        assertParseException(\"1:15:30.123Z\", \"strict_time\");\n        assertParseException(\"10:1:30.123Z\", \"strict_time\");\n        assertParseException(\"10:15:3.123Z\", \"strict_time\");\n        assertParseException(\"10:15:3.1\", \"strict_time\");\n        assertParseException(\"10:15:3Z\", \"strict_time\");\n\n        assertSameDate(\"10:15:30Z\", \"strict_time_no_millis\");\n        assertSameDate(\"01:15:30Z\", \"strict_time_no_millis\");\n        assertParseException(\"1:15:30Z\", \"strict_time_no_millis\");\n        assertParseException(\"10:5:30Z\", \"strict_time_no_millis\");\n        assertParseException(\"10:15:3Z\", \"strict_time_no_millis\");\n        assertParseException(\"10:15:3\", \"strict_time_no_millis\");\n\n        assertSameDate(\"T10:15:30.123Z\", \"strict_t_time\");\n        assertParseException(\"T1:15:30.123Z\", \"strict_t_time\");\n        assertParseException(\"T10:1:30.123Z\", \"strict_t_time\");\n        assertParseException(\"T10:15:3.123Z\", \"strict_t_time\");\n        assertParseException(\"T10:15:3.1\", \"strict_t_time\");\n        assertParseException(\"T10:15:3Z\", \"strict_t_time\");\n\n        assertSameDate(\"T10:15:30Z\", \"strict_t_time_no_millis\");\n        assertParseException(\"T1:15:30Z\", \"strict_t_time_no_millis\");\n        assertParseException(\"T10:1:30Z\", \"strict_t_time_no_millis\");\n        assertParseException(\"T10:15:3Z\", \"strict_t_time_no_millis\");\n        assertParseException(\"T10:15:3\", \"strict_t_time_no_millis\");\n\n        assertSameDate(\"2012-W48-6\", \"strict_week_date\");\n        assertSameDate(\"2012-W01-6\", \"strict_week_date\");\n        assertParseException(\"2012-W1-6\", \"strict_week_date\");\n        assertParseException(\"2012-W1-8\", \"strict_week_date\");\n\n        assertSameDate(\"2012-W48-6\", \"strict_week_date\");\n        assertSameDate(\"2012-W01-6\", \"strict_week_date\");\n        assertParseException(\"2012-W1-6\", \"strict_week_date\");\n        \r\n        assertJodaParseException(\"2012-W01-8\", \"strict_week_date\",\n            \"Cannot parse \\\"2012-W01-8\\\": Value 8 for dayOfWeek must be in the range [1,7]\");\n        assertJavaTimeParseException(\"2012-W01-8\", \"strict_week_date\", \"Text '2012-W01-8' could not be parsed\");\n\n        assertSameDate(\"2012-W48-6T10:15:30.123Z\", \"strict_week_date_time\");\n        assertParseException(\"2012-W1-6T10:15:30.123Z\", \"strict_week_date_time\");\n\n        assertSameDate(\"2012-W48-6T10:15:30Z\", \"strict_week_date_time_no_millis\");\n        assertParseException(\"2012-W1-6T10:15:30Z\", \"strict_week_date_time_no_millis\");\n\n        assertSameDate(\"2012\", \"strict_year\");\n        assertParseException(\"1\", \"strict_year\");\n        assertSameDate(\"-2000\", \"strict_year\");\n\n        assertSameDate(\"2012-12\", \"strict_year_month\");\n        assertParseException(\"1-1\", \"strict_year_month\");\n\n        assertSameDate(\"2012-12-31\", \"strict_year_month_day\");\n        assertParseException(\"1-12-31\", \"strict_year_month_day\");\n        assertParseException(\"2012-1-31\", \"strict_year_month_day\");\n        assertParseException(\"2012-12-1\", \"strict_year_month_day\");\n\n        assertSameDate(\"2018\", \"strict_weekyear\");\n        assertParseException(\"1\", \"strict_weekyear\");\n\n        assertSameDate(\"2018\", \"strict_weekyear\");\n        assertSameDate(\"2017\", \"strict_weekyear\");\n        assertParseException(\"1\", \"strict_weekyear\");\n\n        assertSameDate(\"2018-W29\", \"strict_weekyear_week\");\n        assertSameDate(\"2018-W01\", \"strict_weekyear_week\");\n        assertParseException(\"2018-W1\", \"strict_weekyear_week\");\n\n        assertSameDate(\"2012-W31-5\", \"strict_weekyear_week_day\");\n        assertParseException(\"2012-W1-1\", \"strict_weekyear_week_day\");\n    }\n","realPath":"server/src/test/java/org/elasticsearch/common/joda/JavaJodaTimeDuellingTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":218,"status":"B"}],"commitId":"952859d87d21eb9cd30f7ead393b96da206887c4","commitMessage":"@@@Merge branch 'master' into index-lifecycle\n","date":"2018-07-10 22:55:50","modifiedFileCount":"12","status":"B","submitter":"Tal Levy"},{"authorTime":"2018-08-11 01:23:14","codes":[{"authorDate":"2018-08-11 01:23:14","commitOrder":2,"curCode":"    public void testDuellingFormatsValidParsing() {\n        assertSameDate(\"1522332219\", \"epoch_second\");\n        assertSameDate(\"1522332219321\", \"epoch_millis\");\n\n        assertSameDate(\"20181126\", \"basic_date\");\n        assertSameDate(\"20181126T121212.123Z\", \"basic_date_time\");\n        assertSameDate(\"20181126T121212.123+10:00\", \"basic_date_time\");\n        assertSameDate(\"20181126T121212.123-0800\", \"basic_date_time\");\n\n        assertSameDate(\"20181126T121212Z\", \"basic_date_time_no_millis\");\n        assertSameDate(\"2018363\", \"basic_ordinal_date\");\n        assertSameDate(\"2018363T121212.123Z\", \"basic_ordinal_date_time\");\n        assertSameDate(\"2018363T121212Z\", \"basic_ordinal_date_time_no_millis\");\n        assertSameDate(\"121212.123Z\", \"basic_time\");\n        assertSameDate(\"121212Z\", \"basic_time_no_millis\");\n        assertSameDate(\"T121212.123Z\", \"basic_t_time\");\n        assertSameDate(\"T121212Z\", \"basic_t_time_no_millis\");\n        assertSameDate(\"2018W313\", \"basic_week_date\");\n        assertSameDate(\"1W313\", \"basic_week_date\");\n        assertSameDate(\"18W313\", \"basic_week_date\");\n        assertSameDate(\"2018W313T121212.123Z\", \"basic_week_date_time\");\n        assertSameDate(\"2018W313T121212Z\", \"basic_week_date_time_no_millis\");\n\n        assertSameDate(\"2018-12-31\", \"date\");\n        assertSameDate(\"18-5-6\", \"date\");\n        assertSameDate(\"10000-5-6\", \"date\");\n\n        assertSameDate(\"2018-12-31T12\", \"date_hour\");\n        assertSameDate(\"2018-12-31T8\", \"date_hour\");\n\n        assertSameDate(\"2018-12-31T12:12\", \"date_hour_minute\");\n        assertSameDate(\"2018-12-31T8:3\", \"date_hour_minute\");\n\n        assertSameDate(\"2018-12-31T12:12:12\", \"date_hour_minute_second\");\n        assertSameDate(\"2018-12-31T12:12:1\", \"date_hour_minute_second\");\n\n        assertSameDate(\"2018-12-31T12:12:12.123\", \"date_hour_minute_second_fraction\");\n        assertSameDate(\"2018-12-31T12:12:12.123\", \"date_hour_minute_second_millis\");\n        assertSameDate(\"2018-12-31T12:12:12.1\", \"date_hour_minute_second_millis\");\n        assertSameDate(\"2018-12-31T12:12:12.1\", \"date_hour_minute_second_fraction\");\n\n        assertSameDate(\"10000\", \"date_optional_time\");\n        assertSameDate(\"10000T\", \"date_optional_time\");\n        assertSameDate(\"2018\", \"date_optional_time\");\n        assertSameDate(\"2018T\", \"date_optional_time\");\n        assertSameDate(\"2018-05\", \"date_optional_time\");\n        assertSameDate(\"2018-05-30\", \"date_optional_time\");\n        assertSameDate(\"2018-05-30T20\", \"date_optional_time\");\n        assertSameDate(\"2018-05-30T20:21\", \"date_optional_time\");\n        assertSameDate(\"2018-05-30T20:21:23\", \"date_optional_time\");\n        assertSameDate(\"2018-05-30T20:21:23.123\", \"date_optional_time\");\n        assertSameDate(\"2018-12-1\", \"date_optional_time\");\n        assertSameDate(\"2018-12-31T10:15:30\", \"date_optional_time\");\n        assertSameDate(\"2018-12-31T10:15:3\", \"date_optional_time\");\n        assertSameDate(\"2018-12-31T10:5:30\", \"date_optional_time\");\n        assertSameDate(\"2018-12-31T1:15:30\", \"date_optional_time\");\n\n        assertSameDate(\"2018-12-31T10:15:30.123Z\", \"date_time\");\n        assertSameDate(\"2018-12-31T10:15:30.11Z\", \"date_time\");\n        assertSameDate(\"2018-12-31T10:15:3.123Z\", \"date_time\");\n\n        assertSameDate(\"2018-12-31T10:15:30Z\", \"date_time_no_millis\");\n        assertSameDate(\"2018-12-31T10:5:30Z\", \"date_time_no_millis\");\n        assertSameDate(\"2018-12-31T10:15:3Z\", \"date_time_no_millis\");\n        assertSameDate(\"2018-12-31T1:15:30Z\", \"date_time_no_millis\");\n\n        assertSameDate(\"12\", \"hour\");\n        assertSameDate(\"01\", \"hour\");\n        assertSameDate(\"1\", \"hour\");\n\n        assertSameDate(\"12:12\", \"hour_minute\");\n        assertSameDate(\"12:01\", \"hour_minute\");\n        assertSameDate(\"12:1\", \"hour_minute\");\n\n        assertSameDate(\"12:12:12\", \"hour_minute_second\");\n        assertSameDate(\"12:12:01\", \"hour_minute_second\");\n        assertSameDate(\"12:12:1\", \"hour_minute_second\");\n\n        assertSameDate(\"12:12:12.123\", \"hour_minute_second_fraction\");\n        assertSameDate(\"12:12:12.1\", \"hour_minute_second_fraction\");\n        assertParseException(\"12:12:12\", \"hour_minute_second_fraction\");\n        assertSameDate(\"12:12:12.123\", \"hour_minute_second_millis\");\n        assertSameDate(\"12:12:12.1\", \"hour_minute_second_millis\");\n        assertParseException(\"12:12:12\", \"hour_minute_second_millis\");\n\n        assertSameDate(\"2018-128\", \"ordinal_date\");\n        assertSameDate(\"2018-1\", \"ordinal_date\");\n\n        assertSameDate(\"2018-128T10:15:30.123Z\", \"ordinal_date_time\");\n        assertSameDate(\"2018-1T10:15:30.123Z\", \"ordinal_date_time\");\n\n        assertSameDate(\"2018-128T10:15:30Z\", \"ordinal_date_time_no_millis\");\n        assertSameDate(\"2018-1T10:15:30Z\", \"ordinal_date_time_no_millis\");\n\n        assertSameDate(\"10:15:30.123Z\", \"time\");\n        assertSameDate(\"1:15:30.123Z\", \"time\");\n        assertSameDate(\"10:1:30.123Z\", \"time\");\n        assertSameDate(\"10:15:3.123Z\", \"time\");\n        assertParseException(\"10:15:3.1\", \"time\");\n        assertParseException(\"10:15:3Z\", \"time\");\n\n        assertSameDate(\"10:15:30Z\", \"time_no_millis\");\n        assertSameDate(\"01:15:30Z\", \"time_no_millis\");\n        assertSameDate(\"1:15:30Z\", \"time_no_millis\");\n        assertSameDate(\"10:5:30Z\", \"time_no_millis\");\n        assertSameDate(\"10:15:3Z\", \"time_no_millis\");\n        assertParseException(\"10:15:3\", \"time_no_millis\");\n\n        assertSameDate(\"T10:15:30.123Z\", \"t_time\");\n        assertSameDate(\"T1:15:30.123Z\", \"t_time\");\n        assertSameDate(\"T10:1:30.123Z\", \"t_time\");\n        assertSameDate(\"T10:15:3.123Z\", \"t_time\");\n        assertParseException(\"T10:15:3.1\", \"t_time\");\n        assertParseException(\"T10:15:3Z\", \"t_time\");\n\n        assertSameDate(\"T10:15:30Z\", \"t_time_no_millis\");\n        assertSameDate(\"T1:15:30Z\", \"t_time_no_millis\");\n        assertSameDate(\"T10:1:30Z\", \"t_time_no_millis\");\n        assertSameDate(\"T10:15:3Z\", \"t_time_no_millis\");\n        assertParseException(\"T10:15:3\", \"t_time_no_millis\");\n\n        assertSameDate(\"2012-W48-6\", \"week_date\");\n        assertSameDate(\"2012-W01-6\", \"week_date\");\n        assertSameDate(\"2012-W1-6\", \"week_date\");\n        \r\n        assertJodaParseException(\"2012-W1-8\", \"week_date\",\n            \"Cannot parse \\\"2012-W1-8\\\": Value 8 for dayOfWeek must be in the range [1,7]\");\n        assertJavaTimeParseException(\"2012-W1-8\", \"week_date\", \"Text '2012-W1-8' could not be parsed\");\n\n        assertSameDate(\"2012-W48-6T10:15:30.123Z\", \"week_date_time\");\n        assertSameDate(\"2012-W1-6T10:15:30.123Z\", \"week_date_time\");\n\n        assertSameDate(\"2012-W48-6T10:15:30Z\", \"week_date_time_no_millis\");\n        assertSameDate(\"2012-W1-6T10:15:30Z\", \"week_date_time_no_millis\");\n\n        assertSameDate(\"2012\", \"year\");\n        assertSameDate(\"1\", \"year\");\n        assertSameDate(\"-2000\", \"year\");\n\n        assertSameDate(\"2012-12\", \"yearMonth\");\n        assertSameDate(\"1-1\", \"yearMonth\");\n\n        assertSameDate(\"2012-12-31\", \"yearMonthDay\");\n        assertSameDate(\"1-12-31\", \"yearMonthDay\");\n        assertSameDate(\"2012-1-31\", \"yearMonthDay\");\n        assertSameDate(\"2012-12-1\", \"yearMonthDay\");\n\n        assertSameDate(\"2018\", \"week_year\");\n        assertSameDate(\"1\", \"week_year\");\n        assertSameDate(\"2017\", \"week_year\");\n\n        assertSameDate(\"2018-W29\", \"weekyear_week\");\n        assertSameDate(\"2018-W1\", \"weekyear_week\");\n\n        assertSameDate(\"2012-W31-5\", \"weekyear_week_day\");\n        assertSameDate(\"2012-W1-1\", \"weekyear_week_day\");\n    }\n","date":"2018-08-11 01:23:14","endLine":228,"groupId":"28896","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testDuellingFormatsValidParsing","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/15/51a315b26d93122145fe520885ac8289a2f003.src","preCode":"    public void testDuellingFormatsValidParsing() {\n        assertSameDate(\"1522332219\", \"epoch_second\");\n        assertSameDate(\"1522332219321\", \"epoch_millis\");\n\n        assertSameDate(\"20181126\", \"basic_date\");\n        assertSameDate(\"20181126T121212.123Z\", \"basic_date_time\");\n        assertSameDate(\"20181126T121212.123+10:00\", \"basic_date_time\");\n        assertSameDate(\"20181126T121212.123-0800\", \"basic_date_time\");\n\n        assertSameDate(\"20181126T121212Z\", \"basic_date_time_no_millis\");\n        assertSameDate(\"2018363\", \"basic_ordinal_date\");\n        assertSameDate(\"2018363T121212.123Z\", \"basic_ordinal_date_time\");\n        assertSameDate(\"2018363T121212Z\", \"basic_ordinal_date_time_no_millis\");\n        assertSameDate(\"121212.123Z\", \"basic_time\");\n        assertSameDate(\"121212Z\", \"basic_time_no_millis\");\n        assertSameDate(\"T121212.123Z\", \"basic_t_time\");\n        assertSameDate(\"T121212Z\", \"basic_t_time_no_millis\");\n        assertSameDate(\"2018W313\", \"basic_week_date\");\n        assertSameDate(\"1W313\", \"basic_week_date\");\n        assertSameDate(\"18W313\", \"basic_week_date\");\n        assertSameDate(\"2018W313T121212.123Z\", \"basic_week_date_time\");\n        assertSameDate(\"2018W313T121212Z\", \"basic_week_date_time_no_millis\");\n\n        assertSameDate(\"2018-12-31\", \"date\");\n        assertSameDate(\"18-5-6\", \"date\");\n\n        assertSameDate(\"2018-12-31T12\", \"date_hour\");\n        assertSameDate(\"2018-12-31T8\", \"date_hour\");\n\n        assertSameDate(\"2018-12-31T12:12\", \"date_hour_minute\");\n        assertSameDate(\"2018-12-31T8:3\", \"date_hour_minute\");\n\n        assertSameDate(\"2018-12-31T12:12:12\", \"date_hour_minute_second\");\n        assertSameDate(\"2018-12-31T12:12:1\", \"date_hour_minute_second\");\n\n        assertSameDate(\"2018-12-31T12:12:12.123\", \"date_hour_minute_second_fraction\");\n        assertSameDate(\"2018-12-31T12:12:12.123\", \"date_hour_minute_second_millis\");\n        assertSameDate(\"2018-12-31T12:12:12.1\", \"date_hour_minute_second_millis\");\n        assertSameDate(\"2018-12-31T12:12:12.1\", \"date_hour_minute_second_fraction\");\n\n        assertSameDate(\"2018-12-31\", \"date_optional_time\");\n        assertSameDate(\"2018-12-1\", \"date_optional_time\");\n        assertSameDate(\"2018-12-31T10:15:30\", \"date_optional_time\");\n        assertSameDate(\"2018-12-31T10:15:3\", \"date_optional_time\");\n        assertSameDate(\"2018-12-31T10:5:30\", \"date_optional_time\");\n        assertSameDate(\"2018-12-31T1:15:30\", \"date_optional_time\");\n\n        assertSameDate(\"2018-12-31T10:15:30.123Z\", \"date_time\");\n        assertSameDate(\"2018-12-31T10:15:30.11Z\", \"date_time\");\n        assertSameDate(\"2018-12-31T10:15:3.123Z\", \"date_time\");\n\n        assertSameDate(\"2018-12-31T10:15:30Z\", \"date_time_no_millis\");\n        assertSameDate(\"2018-12-31T10:5:30Z\", \"date_time_no_millis\");\n        assertSameDate(\"2018-12-31T10:15:3Z\", \"date_time_no_millis\");\n        assertSameDate(\"2018-12-31T1:15:30Z\", \"date_time_no_millis\");\n\n        assertSameDate(\"12\", \"hour\");\n        assertSameDate(\"01\", \"hour\");\n        assertSameDate(\"1\", \"hour\");\n\n        assertSameDate(\"12:12\", \"hour_minute\");\n        assertSameDate(\"12:01\", \"hour_minute\");\n        assertSameDate(\"12:1\", \"hour_minute\");\n\n        assertSameDate(\"12:12:12\", \"hour_minute_second\");\n        assertSameDate(\"12:12:01\", \"hour_minute_second\");\n        assertSameDate(\"12:12:1\", \"hour_minute_second\");\n\n        assertSameDate(\"12:12:12.123\", \"hour_minute_second_fraction\");\n        assertSameDate(\"12:12:12.1\", \"hour_minute_second_fraction\");\n        assertParseException(\"12:12:12\", \"hour_minute_second_fraction\");\n        assertSameDate(\"12:12:12.123\", \"hour_minute_second_millis\");\n        assertSameDate(\"12:12:12.1\", \"hour_minute_second_millis\");\n        assertParseException(\"12:12:12\", \"hour_minute_second_millis\");\n\n        assertSameDate(\"2018-128\", \"ordinal_date\");\n        assertSameDate(\"2018-1\", \"ordinal_date\");\n\n        assertSameDate(\"2018-128T10:15:30.123Z\", \"ordinal_date_time\");\n        assertSameDate(\"2018-1T10:15:30.123Z\", \"ordinal_date_time\");\n\n        assertSameDate(\"2018-128T10:15:30Z\", \"ordinal_date_time_no_millis\");\n        assertSameDate(\"2018-1T10:15:30Z\", \"ordinal_date_time_no_millis\");\n\n        assertSameDate(\"10:15:30.123Z\", \"time\");\n        assertSameDate(\"1:15:30.123Z\", \"time\");\n        assertSameDate(\"10:1:30.123Z\", \"time\");\n        assertSameDate(\"10:15:3.123Z\", \"time\");\n        assertParseException(\"10:15:3.1\", \"time\");\n        assertParseException(\"10:15:3Z\", \"time\");\n\n        assertSameDate(\"10:15:30Z\", \"time_no_millis\");\n        assertSameDate(\"01:15:30Z\", \"time_no_millis\");\n        assertSameDate(\"1:15:30Z\", \"time_no_millis\");\n        assertSameDate(\"10:5:30Z\", \"time_no_millis\");\n        assertSameDate(\"10:15:3Z\", \"time_no_millis\");\n        assertParseException(\"10:15:3\", \"time_no_millis\");\n\n        assertSameDate(\"T10:15:30.123Z\", \"t_time\");\n        assertSameDate(\"T1:15:30.123Z\", \"t_time\");\n        assertSameDate(\"T10:1:30.123Z\", \"t_time\");\n        assertSameDate(\"T10:15:3.123Z\", \"t_time\");\n        assertParseException(\"T10:15:3.1\", \"t_time\");\n        assertParseException(\"T10:15:3Z\", \"t_time\");\n\n        assertSameDate(\"T10:15:30Z\", \"t_time_no_millis\");\n        assertSameDate(\"T1:15:30Z\", \"t_time_no_millis\");\n        assertSameDate(\"T10:1:30Z\", \"t_time_no_millis\");\n        assertSameDate(\"T10:15:3Z\", \"t_time_no_millis\");\n        assertParseException(\"T10:15:3\", \"t_time_no_millis\");\n\n        assertSameDate(\"2012-W48-6\", \"week_date\");\n        assertSameDate(\"2012-W01-6\", \"week_date\");\n        assertSameDate(\"2012-W1-6\", \"week_date\");\n        \r\n        assertJodaParseException(\"2012-W1-8\", \"week_date\",\n            \"Cannot parse \\\"2012-W1-8\\\": Value 8 for dayOfWeek must be in the range [1,7]\");\n        assertJavaTimeParseException(\"2012-W1-8\", \"week_date\", \"Text '2012-W1-8' could not be parsed\");\n\n        assertSameDate(\"2012-W48-6T10:15:30.123Z\", \"week_date_time\");\n        assertSameDate(\"2012-W1-6T10:15:30.123Z\", \"week_date_time\");\n\n        assertSameDate(\"2012-W48-6T10:15:30Z\", \"week_date_time_no_millis\");\n        assertSameDate(\"2012-W1-6T10:15:30Z\", \"week_date_time_no_millis\");\n\n        assertSameDate(\"2012\", \"year\");\n        assertSameDate(\"1\", \"year\");\n        assertSameDate(\"-2000\", \"year\");\n\n        assertSameDate(\"2012-12\", \"yearMonth\");\n        assertSameDate(\"1-1\", \"yearMonth\");\n\n        assertSameDate(\"2012-12-31\", \"yearMonthDay\");\n        assertSameDate(\"1-12-31\", \"yearMonthDay\");\n        assertSameDate(\"2012-1-31\", \"yearMonthDay\");\n        assertSameDate(\"2012-12-1\", \"yearMonthDay\");\n\n        assertSameDate(\"2018\", \"week_year\");\n        assertSameDate(\"1\", \"week_year\");\n        assertSameDate(\"2017\", \"week_year\");\n\n        assertSameDate(\"2018-W29\", \"weekyear_week\");\n        assertSameDate(\"2018-W1\", \"weekyear_week\");\n\n        assertSameDate(\"2012-W31-5\", \"weekyear_week_day\");\n        assertSameDate(\"2012-W1-1\", \"weekyear_week_day\");\n    }\n","realPath":"server/src/test/java/org/elasticsearch/common/joda/JavaJodaTimeDuellingTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":72,"status":"M"},{"authorDate":"2018-08-11 01:23:14","commitOrder":2,"curCode":"    public void testDuelingStrictParsing() {\n        assertSameDate(\"2018W313\", \"strict_basic_week_date\");\n        assertParseException(\"18W313\", \"strict_basic_week_date\");\n        assertSameDate(\"2018W313T121212.123Z\", \"strict_basic_week_date_time\");\n        assertParseException(\"2018W313T12128.123Z\", \"strict_basic_week_date_time\");\n        assertParseException(\"2018W313T81212.123Z\", \"strict_basic_week_date_time\");\n        assertParseException(\"2018W313T12812.123Z\", \"strict_basic_week_date_time\");\n        assertParseException(\"2018W313T12812.1Z\", \"strict_basic_week_date_time\");\n        assertSameDate(\"2018W313T121212Z\", \"strict_basic_week_date_time_no_millis\");\n        assertParseException(\"2018W313T12128Z\", \"strict_basic_week_date_time_no_millis\");\n        assertParseException(\"2018W313T81212Z\", \"strict_basic_week_date_time_no_millis\");\n        assertParseException(\"2018W313T12812Z\", \"strict_basic_week_date_time_no_millis\");\n        assertSameDate(\"2018-12-31\", \"strict_date\");\n        assertParseException(\"10000-12-31\", \"strict_date\");\n        assertParseException(\"2018-8-31\", \"strict_date\");\n        assertSameDate(\"2018-12-31T12\", \"strict_date_hour\");\n        assertParseException(\"2018-12-31T8\", \"strict_date_hour\");\n        assertSameDate(\"2018-12-31T12:12\", \"strict_date_hour_minute\");\n        assertParseException(\"2018-12-31T8:3\", \"strict_date_hour_minute\");\n        assertSameDate(\"2018-12-31T12:12:12\", \"strict_date_hour_minute_second\");\n        assertParseException(\"2018-12-31T12:12:1\", \"strict_date_hour_minute_second\");\n        assertSameDate(\"2018-12-31T12:12:12.123\", \"strict_date_hour_minute_second_fraction\");\n        assertSameDate(\"2018-12-31T12:12:12.123\", \"strict_date_hour_minute_second_millis\");\n        assertSameDate(\"2018-12-31T12:12:12.1\", \"strict_date_hour_minute_second_millis\");\n        assertSameDate(\"2018-12-31T12:12:12.1\", \"strict_date_hour_minute_second_fraction\");\n        assertParseException(\"2018-12-31T12:12:12\", \"strict_date_hour_minute_second_millis\");\n        assertParseException(\"2018-12-31T12:12:12\", \"strict_date_hour_minute_second_fraction\");\n        assertSameDate(\"2018-12-31\", \"strict_date_optional_time\");\n        assertParseException(\"2018-12-1\", \"strict_date_optional_time\");\n        assertParseException(\"2018-1-31\", \"strict_date_optional_time\");\n        assertParseException(\"10000-01-31\", \"strict_date_optional_time\");\n        assertSameDate(\"2018-12-31T10:15:30\", \"strict_date_optional_time\");\n        assertParseException(\"2018-12-31T10:15:3\", \"strict_date_optional_time\");\n        assertParseException(\"2018-12-31T10:5:30\", \"strict_date_optional_time\");\n        assertParseException(\"2018-12-31T9:15:30\", \"strict_date_optional_time\");\n        assertSameDate(\"2018-12-31T10:15:30.123Z\", \"strict_date_time\");\n        assertSameDate(\"2018-12-31T10:15:30.11Z\", \"strict_date_time\");\n        assertParseException(\"2018-12-31T10:15:3.123Z\", \"strict_date_time\");\n        assertParseException(\"2018-12-31T10:5:30.123Z\", \"strict_date_time\");\n        assertParseException(\"2018-12-31T1:15:30.123Z\", \"strict_date_time\");\n        assertSameDate(\"2018-12-31T10:15:30Z\", \"strict_date_time_no_millis\");\n        assertParseException(\"2018-12-31T10:5:30Z\", \"strict_date_time_no_millis\");\n        assertParseException(\"2018-12-31T10:15:3Z\", \"strict_date_time_no_millis\");\n        assertParseException(\"2018-12-31T1:15:30Z\", \"strict_date_time_no_millis\");\n        assertSameDate(\"12\", \"strict_hour\");\n        assertSameDate(\"01\", \"strict_hour\");\n        assertParseException(\"1\", \"strict_hour\");\n        assertSameDate(\"12:12\", \"strict_hour_minute\");\n        assertSameDate(\"12:01\", \"strict_hour_minute\");\n        assertParseException(\"12:1\", \"strict_hour_minute\");\n        assertSameDate(\"12:12:12\", \"strict_hour_minute_second\");\n        assertSameDate(\"12:12:01\", \"strict_hour_minute_second\");\n        assertParseException(\"12:12:1\", \"strict_hour_minute_second\");\n        assertSameDate(\"12:12:12.123\", \"strict_hour_minute_second_fraction\");\n        assertSameDate(\"12:12:12.1\", \"strict_hour_minute_second_fraction\");\n        assertParseException(\"12:12:12\", \"strict_hour_minute_second_fraction\");\n        assertSameDate(\"12:12:12.123\", \"strict_hour_minute_second_millis\");\n        assertSameDate(\"12:12:12.1\", \"strict_hour_minute_second_millis\");\n        assertParseException(\"12:12:12\", \"strict_hour_minute_second_millis\");\n        assertSameDate(\"2018-128\", \"strict_ordinal_date\");\n        assertParseException(\"2018-1\", \"strict_ordinal_date\");\n\n        assertSameDate(\"2018-128T10:15:30.123Z\", \"strict_ordinal_date_time\");\n        assertParseException(\"2018-1T10:15:30.123Z\", \"strict_ordinal_date_time\");\n\n        assertSameDate(\"2018-128T10:15:30Z\", \"strict_ordinal_date_time_no_millis\");\n        assertParseException(\"2018-1T10:15:30Z\", \"strict_ordinal_date_time_no_millis\");\n\n        assertSameDate(\"10:15:30.123Z\", \"strict_time\");\n        assertParseException(\"1:15:30.123Z\", \"strict_time\");\n        assertParseException(\"10:1:30.123Z\", \"strict_time\");\n        assertParseException(\"10:15:3.123Z\", \"strict_time\");\n        assertParseException(\"10:15:3.1\", \"strict_time\");\n        assertParseException(\"10:15:3Z\", \"strict_time\");\n\n        assertSameDate(\"10:15:30Z\", \"strict_time_no_millis\");\n        assertSameDate(\"01:15:30Z\", \"strict_time_no_millis\");\n        assertParseException(\"1:15:30Z\", \"strict_time_no_millis\");\n        assertParseException(\"10:5:30Z\", \"strict_time_no_millis\");\n        assertParseException(\"10:15:3Z\", \"strict_time_no_millis\");\n        assertParseException(\"10:15:3\", \"strict_time_no_millis\");\n\n        assertSameDate(\"T10:15:30.123Z\", \"strict_t_time\");\n        assertParseException(\"T1:15:30.123Z\", \"strict_t_time\");\n        assertParseException(\"T10:1:30.123Z\", \"strict_t_time\");\n        assertParseException(\"T10:15:3.123Z\", \"strict_t_time\");\n        assertParseException(\"T10:15:3.1\", \"strict_t_time\");\n        assertParseException(\"T10:15:3Z\", \"strict_t_time\");\n\n        assertSameDate(\"T10:15:30Z\", \"strict_t_time_no_millis\");\n        assertParseException(\"T1:15:30Z\", \"strict_t_time_no_millis\");\n        assertParseException(\"T10:1:30Z\", \"strict_t_time_no_millis\");\n        assertParseException(\"T10:15:3Z\", \"strict_t_time_no_millis\");\n        assertParseException(\"T10:15:3\", \"strict_t_time_no_millis\");\n\n        assertSameDate(\"2012-W48-6\", \"strict_week_date\");\n        assertSameDate(\"2012-W01-6\", \"strict_week_date\");\n        assertParseException(\"2012-W1-6\", \"strict_week_date\");\n        assertParseException(\"2012-W1-8\", \"strict_week_date\");\n\n        assertSameDate(\"2012-W48-6\", \"strict_week_date\");\n        assertSameDate(\"2012-W01-6\", \"strict_week_date\");\n        assertParseException(\"2012-W1-6\", \"strict_week_date\");\n        \r\n        assertJodaParseException(\"2012-W01-8\", \"strict_week_date\",\n            \"Cannot parse \\\"2012-W01-8\\\": Value 8 for dayOfWeek must be in the range [1,7]\");\n        assertJavaTimeParseException(\"2012-W01-8\", \"strict_week_date\", \"Text '2012-W01-8' could not be parsed\");\n\n        assertSameDate(\"2012-W48-6T10:15:30.123Z\", \"strict_week_date_time\");\n        assertParseException(\"2012-W1-6T10:15:30.123Z\", \"strict_week_date_time\");\n\n        assertSameDate(\"2012-W48-6T10:15:30Z\", \"strict_week_date_time_no_millis\");\n        assertParseException(\"2012-W1-6T10:15:30Z\", \"strict_week_date_time_no_millis\");\n\n        assertSameDate(\"2012\", \"strict_year\");\n        assertParseException(\"1\", \"strict_year\");\n        assertSameDate(\"-2000\", \"strict_year\");\n\n        assertSameDate(\"2012-12\", \"strict_year_month\");\n        assertParseException(\"1-1\", \"strict_year_month\");\n\n        assertSameDate(\"2012-12-31\", \"strict_year_month_day\");\n        assertParseException(\"1-12-31\", \"strict_year_month_day\");\n        assertParseException(\"2012-1-31\", \"strict_year_month_day\");\n        assertParseException(\"2012-12-1\", \"strict_year_month_day\");\n\n        assertSameDate(\"2018\", \"strict_weekyear\");\n        assertParseException(\"1\", \"strict_weekyear\");\n\n        assertSameDate(\"2018\", \"strict_weekyear\");\n        assertSameDate(\"2017\", \"strict_weekyear\");\n        assertParseException(\"1\", \"strict_weekyear\");\n\n        assertSameDate(\"2018-W29\", \"strict_weekyear_week\");\n        assertSameDate(\"2018-W01\", \"strict_weekyear_week\");\n        assertParseException(\"2018-W1\", \"strict_weekyear_week\");\n\n        assertSameDate(\"2012-W31-5\", \"strict_weekyear_week_day\");\n        assertParseException(\"2012-W1-1\", \"strict_weekyear_week_day\");\n    }\n","date":"2018-08-11 01:23:14","endLine":369,"groupId":"17876","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testDuelingStrictParsing","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/15/51a315b26d93122145fe520885ac8289a2f003.src","preCode":"    public void testDuelingStrictParsing() {\n        assertSameDate(\"2018W313\", \"strict_basic_week_date\");\n        assertParseException(\"18W313\", \"strict_basic_week_date\");\n        assertSameDate(\"2018W313T121212.123Z\", \"strict_basic_week_date_time\");\n        assertParseException(\"2018W313T12128.123Z\", \"strict_basic_week_date_time\");\n        assertParseException(\"2018W313T81212.123Z\", \"strict_basic_week_date_time\");\n        assertParseException(\"2018W313T12812.123Z\", \"strict_basic_week_date_time\");\n        assertParseException(\"2018W313T12812.1Z\", \"strict_basic_week_date_time\");\n        assertSameDate(\"2018W313T121212Z\", \"strict_basic_week_date_time_no_millis\");\n        assertParseException(\"2018W313T12128Z\", \"strict_basic_week_date_time_no_millis\");\n        assertParseException(\"2018W313T81212Z\", \"strict_basic_week_date_time_no_millis\");\n        assertParseException(\"2018W313T12812Z\", \"strict_basic_week_date_time_no_millis\");\n        assertSameDate(\"2018-12-31\", \"strict_date\");\n        assertParseException(\"2018-8-31\", \"strict_date\");\n        assertSameDate(\"2018-12-31T12\", \"strict_date_hour\");\n        assertParseException(\"2018-12-31T8\", \"strict_date_hour\");\n        assertSameDate(\"2018-12-31T12:12\", \"strict_date_hour_minute\");\n        assertParseException(\"2018-12-31T8:3\", \"strict_date_hour_minute\");\n        assertSameDate(\"2018-12-31T12:12:12\", \"strict_date_hour_minute_second\");\n        assertParseException(\"2018-12-31T12:12:1\", \"strict_date_hour_minute_second\");\n        assertSameDate(\"2018-12-31T12:12:12.123\", \"strict_date_hour_minute_second_fraction\");\n        assertSameDate(\"2018-12-31T12:12:12.123\", \"strict_date_hour_minute_second_millis\");\n        assertSameDate(\"2018-12-31T12:12:12.1\", \"strict_date_hour_minute_second_millis\");\n        assertSameDate(\"2018-12-31T12:12:12.1\", \"strict_date_hour_minute_second_fraction\");\n        assertParseException(\"2018-12-31T12:12:12\", \"strict_date_hour_minute_second_millis\");\n        assertParseException(\"2018-12-31T12:12:12\", \"strict_date_hour_minute_second_fraction\");\n        assertSameDate(\"2018-12-31\", \"strict_date_optional_time\");\n        assertParseException(\"2018-12-1\", \"strict_date_optional_time\");\n        assertParseException(\"2018-1-31\", \"strict_date_optional_time\");\n        assertSameDate(\"2018-12-31T10:15:30\", \"strict_date_optional_time\");\n        assertParseException(\"2018-12-31T10:15:3\", \"strict_date_optional_time\");\n        assertParseException(\"2018-12-31T10:5:30\", \"strict_date_optional_time\");\n        assertParseException(\"2018-12-31T9:15:30\", \"strict_date_optional_time\");\n        assertSameDate(\"2018-12-31T10:15:30.123Z\", \"strict_date_time\");\n        assertSameDate(\"2018-12-31T10:15:30.11Z\", \"strict_date_time\");\n        assertParseException(\"2018-12-31T10:15:3.123Z\", \"strict_date_time\");\n        assertParseException(\"2018-12-31T10:5:30.123Z\", \"strict_date_time\");\n        assertParseException(\"2018-12-31T1:15:30.123Z\", \"strict_date_time\");\n        assertSameDate(\"2018-12-31T10:15:30Z\", \"strict_date_time_no_millis\");\n        assertParseException(\"2018-12-31T10:5:30Z\", \"strict_date_time_no_millis\");\n        assertParseException(\"2018-12-31T10:15:3Z\", \"strict_date_time_no_millis\");\n        assertParseException(\"2018-12-31T1:15:30Z\", \"strict_date_time_no_millis\");\n        assertSameDate(\"12\", \"strict_hour\");\n        assertSameDate(\"01\", \"strict_hour\");\n        assertParseException(\"1\", \"strict_hour\");\n        assertSameDate(\"12:12\", \"strict_hour_minute\");\n        assertSameDate(\"12:01\", \"strict_hour_minute\");\n        assertParseException(\"12:1\", \"strict_hour_minute\");\n        assertSameDate(\"12:12:12\", \"strict_hour_minute_second\");\n        assertSameDate(\"12:12:01\", \"strict_hour_minute_second\");\n        assertParseException(\"12:12:1\", \"strict_hour_minute_second\");\n        assertSameDate(\"12:12:12.123\", \"strict_hour_minute_second_fraction\");\n        assertSameDate(\"12:12:12.1\", \"strict_hour_minute_second_fraction\");\n        assertParseException(\"12:12:12\", \"strict_hour_minute_second_fraction\");\n        assertSameDate(\"12:12:12.123\", \"strict_hour_minute_second_millis\");\n        assertSameDate(\"12:12:12.1\", \"strict_hour_minute_second_millis\");\n        assertParseException(\"12:12:12\", \"strict_hour_minute_second_millis\");\n        assertSameDate(\"2018-128\", \"strict_ordinal_date\");\n        assertParseException(\"2018-1\", \"strict_ordinal_date\");\n\n        assertSameDate(\"2018-128T10:15:30.123Z\", \"strict_ordinal_date_time\");\n        assertParseException(\"2018-1T10:15:30.123Z\", \"strict_ordinal_date_time\");\n\n        assertSameDate(\"2018-128T10:15:30Z\", \"strict_ordinal_date_time_no_millis\");\n        assertParseException(\"2018-1T10:15:30Z\", \"strict_ordinal_date_time_no_millis\");\n\n        assertSameDate(\"10:15:30.123Z\", \"strict_time\");\n        assertParseException(\"1:15:30.123Z\", \"strict_time\");\n        assertParseException(\"10:1:30.123Z\", \"strict_time\");\n        assertParseException(\"10:15:3.123Z\", \"strict_time\");\n        assertParseException(\"10:15:3.1\", \"strict_time\");\n        assertParseException(\"10:15:3Z\", \"strict_time\");\n\n        assertSameDate(\"10:15:30Z\", \"strict_time_no_millis\");\n        assertSameDate(\"01:15:30Z\", \"strict_time_no_millis\");\n        assertParseException(\"1:15:30Z\", \"strict_time_no_millis\");\n        assertParseException(\"10:5:30Z\", \"strict_time_no_millis\");\n        assertParseException(\"10:15:3Z\", \"strict_time_no_millis\");\n        assertParseException(\"10:15:3\", \"strict_time_no_millis\");\n\n        assertSameDate(\"T10:15:30.123Z\", \"strict_t_time\");\n        assertParseException(\"T1:15:30.123Z\", \"strict_t_time\");\n        assertParseException(\"T10:1:30.123Z\", \"strict_t_time\");\n        assertParseException(\"T10:15:3.123Z\", \"strict_t_time\");\n        assertParseException(\"T10:15:3.1\", \"strict_t_time\");\n        assertParseException(\"T10:15:3Z\", \"strict_t_time\");\n\n        assertSameDate(\"T10:15:30Z\", \"strict_t_time_no_millis\");\n        assertParseException(\"T1:15:30Z\", \"strict_t_time_no_millis\");\n        assertParseException(\"T10:1:30Z\", \"strict_t_time_no_millis\");\n        assertParseException(\"T10:15:3Z\", \"strict_t_time_no_millis\");\n        assertParseException(\"T10:15:3\", \"strict_t_time_no_millis\");\n\n        assertSameDate(\"2012-W48-6\", \"strict_week_date\");\n        assertSameDate(\"2012-W01-6\", \"strict_week_date\");\n        assertParseException(\"2012-W1-6\", \"strict_week_date\");\n        assertParseException(\"2012-W1-8\", \"strict_week_date\");\n\n        assertSameDate(\"2012-W48-6\", \"strict_week_date\");\n        assertSameDate(\"2012-W01-6\", \"strict_week_date\");\n        assertParseException(\"2012-W1-6\", \"strict_week_date\");\n        \r\n        assertJodaParseException(\"2012-W01-8\", \"strict_week_date\",\n            \"Cannot parse \\\"2012-W01-8\\\": Value 8 for dayOfWeek must be in the range [1,7]\");\n        assertJavaTimeParseException(\"2012-W01-8\", \"strict_week_date\", \"Text '2012-W01-8' could not be parsed\");\n\n        assertSameDate(\"2012-W48-6T10:15:30.123Z\", \"strict_week_date_time\");\n        assertParseException(\"2012-W1-6T10:15:30.123Z\", \"strict_week_date_time\");\n\n        assertSameDate(\"2012-W48-6T10:15:30Z\", \"strict_week_date_time_no_millis\");\n        assertParseException(\"2012-W1-6T10:15:30Z\", \"strict_week_date_time_no_millis\");\n\n        assertSameDate(\"2012\", \"strict_year\");\n        assertParseException(\"1\", \"strict_year\");\n        assertSameDate(\"-2000\", \"strict_year\");\n\n        assertSameDate(\"2012-12\", \"strict_year_month\");\n        assertParseException(\"1-1\", \"strict_year_month\");\n\n        assertSameDate(\"2012-12-31\", \"strict_year_month_day\");\n        assertParseException(\"1-12-31\", \"strict_year_month_day\");\n        assertParseException(\"2012-1-31\", \"strict_year_month_day\");\n        assertParseException(\"2012-12-1\", \"strict_year_month_day\");\n\n        assertSameDate(\"2018\", \"strict_weekyear\");\n        assertParseException(\"1\", \"strict_weekyear\");\n\n        assertSameDate(\"2018\", \"strict_weekyear\");\n        assertSameDate(\"2017\", \"strict_weekyear\");\n        assertParseException(\"1\", \"strict_weekyear\");\n\n        assertSameDate(\"2018-W29\", \"strict_weekyear_week\");\n        assertSameDate(\"2018-W01\", \"strict_weekyear_week\");\n        assertParseException(\"2018-W1\", \"strict_weekyear_week\");\n\n        assertSameDate(\"2012-W31-5\", \"strict_weekyear_week_day\");\n        assertParseException(\"2012-W1-1\", \"strict_weekyear_week_day\");\n    }\n","realPath":"server/src/test/java/org/elasticsearch/common/joda/JavaJodaTimeDuellingTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":230,"status":"M"}],"commitId":"93637e2135fe449dbc4addcc871055e5ed2a00c4","commitMessage":"@@@Merge branch 'master' into index-lifecycle\n","date":"2018-08-11 01:23:14","modifiedFileCount":"38","status":"M","submitter":"Tal Levy"},{"authorTime":"2018-08-11 01:23:14","codes":[{"authorDate":"2018-09-04 17:34:49","commitOrder":3,"curCode":"    public void testDuellingFormatsValidParsing() {\n        assertSameDate(\"1522332219\", \"epoch_second\");\n        assertSameDate(\"0\", \"epoch_second\");\n        assertSameDate(\"1\", \"epoch_second\");\n        assertSameDate(\"-1\", \"epoch_second\");\n        assertSameDate(\"-1522332219\", \"epoch_second\");\n        assertSameDate(\"1522332219321\", \"epoch_millis\");\n        assertSameDate(\"0\", \"epoch_millis\");\n        assertSameDate(\"1\", \"epoch_millis\");\n        assertSameDate(\"-1\", \"epoch_millis\");\n        assertSameDate(\"-1522332219321\", \"epoch_millis\");\n\n        assertSameDate(\"20181126\", \"basic_date\");\n        assertSameDate(\"20181126T121212.123Z\", \"basic_date_time\");\n        assertSameDate(\"20181126T121212.123+10:00\", \"basic_date_time\");\n        assertSameDate(\"20181126T121212.123-0800\", \"basic_date_time\");\n\n        assertSameDate(\"20181126T121212Z\", \"basic_date_time_no_millis\");\n        assertSameDate(\"2018363\", \"basic_ordinal_date\");\n        assertSameDate(\"2018363T121212.123Z\", \"basic_ordinal_date_time\");\n        assertSameDate(\"2018363T121212Z\", \"basic_ordinal_date_time_no_millis\");\n        assertSameDate(\"121212.123Z\", \"basic_time\");\n        assertSameDate(\"121212Z\", \"basic_time_no_millis\");\n        assertSameDate(\"T121212.123Z\", \"basic_t_time\");\n        assertSameDate(\"T121212Z\", \"basic_t_time_no_millis\");\n        assertSameDate(\"2018W313\", \"basic_week_date\");\n        assertSameDate(\"1W313\", \"basic_week_date\");\n        assertSameDate(\"18W313\", \"basic_week_date\");\n        assertSameDate(\"2018W313T121212.123Z\", \"basic_week_date_time\");\n        assertSameDate(\"2018W313T121212Z\", \"basic_week_date_time_no_millis\");\n\n        assertSameDate(\"2018-12-31\", \"date\");\n        assertSameDate(\"18-5-6\", \"date\");\n        assertSameDate(\"10000-5-6\", \"date\");\n\n        assertSameDate(\"2018-12-31T12\", \"date_hour\");\n        assertSameDate(\"2018-12-31T8\", \"date_hour\");\n\n        assertSameDate(\"2018-12-31T12:12\", \"date_hour_minute\");\n        assertSameDate(\"2018-12-31T8:3\", \"date_hour_minute\");\n\n        assertSameDate(\"2018-12-31T12:12:12\", \"date_hour_minute_second\");\n        assertSameDate(\"2018-12-31T12:12:1\", \"date_hour_minute_second\");\n\n        assertSameDate(\"2018-12-31T12:12:12.123\", \"date_hour_minute_second_fraction\");\n        assertSameDate(\"2018-12-31T12:12:12.123\", \"date_hour_minute_second_millis\");\n        assertSameDate(\"2018-12-31T12:12:12.1\", \"date_hour_minute_second_millis\");\n        assertSameDate(\"2018-12-31T12:12:12.1\", \"date_hour_minute_second_fraction\");\n\n        assertSameDate(\"10000\", \"date_optional_time\");\n        assertSameDate(\"10000T\", \"date_optional_time\");\n        assertSameDate(\"2018\", \"date_optional_time\");\n        assertSameDate(\"2018T\", \"date_optional_time\");\n        assertSameDate(\"2018-05\", \"date_optional_time\");\n        assertSameDate(\"2018-05-30\", \"date_optional_time\");\n        assertSameDate(\"2018-05-30T20\", \"date_optional_time\");\n        assertSameDate(\"2018-05-30T20:21\", \"date_optional_time\");\n        assertSameDate(\"2018-05-30T20:21:23\", \"date_optional_time\");\n        assertSameDate(\"2018-05-30T20:21:23.123\", \"date_optional_time\");\n        assertSameDate(\"2018-12-1\", \"date_optional_time\");\n        assertSameDate(\"2018-12-31T10:15:30\", \"date_optional_time\");\n        assertSameDate(\"2018-12-31T10:15:3\", \"date_optional_time\");\n        assertSameDate(\"2018-12-31T10:5:30\", \"date_optional_time\");\n        assertSameDate(\"2018-12-31T1:15:30\", \"date_optional_time\");\n\n        assertSameDate(\"2018-12-31T10:15:30.123Z\", \"date_time\");\n        assertSameDate(\"2018-12-31T10:15:30.11Z\", \"date_time\");\n        assertSameDate(\"2018-12-31T10:15:3.123Z\", \"date_time\");\n\n        assertSameDate(\"2018-12-31T10:15:30Z\", \"date_time_no_millis\");\n        assertSameDate(\"2018-12-31T10:5:30Z\", \"date_time_no_millis\");\n        assertSameDate(\"2018-12-31T10:15:3Z\", \"date_time_no_millis\");\n        assertSameDate(\"2018-12-31T1:15:30Z\", \"date_time_no_millis\");\n\n        assertSameDate(\"12\", \"hour\");\n        assertSameDate(\"01\", \"hour\");\n        assertSameDate(\"1\", \"hour\");\n\n        assertSameDate(\"12:12\", \"hour_minute\");\n        assertSameDate(\"12:01\", \"hour_minute\");\n        assertSameDate(\"12:1\", \"hour_minute\");\n\n        assertSameDate(\"12:12:12\", \"hour_minute_second\");\n        assertSameDate(\"12:12:01\", \"hour_minute_second\");\n        assertSameDate(\"12:12:1\", \"hour_minute_second\");\n\n        assertSameDate(\"12:12:12.123\", \"hour_minute_second_fraction\");\n        assertSameDate(\"12:12:12.1\", \"hour_minute_second_fraction\");\n        assertParseException(\"12:12:12\", \"hour_minute_second_fraction\");\n        assertSameDate(\"12:12:12.123\", \"hour_minute_second_millis\");\n        assertSameDate(\"12:12:12.1\", \"hour_minute_second_millis\");\n        assertParseException(\"12:12:12\", \"hour_minute_second_millis\");\n\n        assertSameDate(\"2018-128\", \"ordinal_date\");\n        assertSameDate(\"2018-1\", \"ordinal_date\");\n\n        assertSameDate(\"2018-128T10:15:30.123Z\", \"ordinal_date_time\");\n        assertSameDate(\"2018-1T10:15:30.123Z\", \"ordinal_date_time\");\n\n        assertSameDate(\"2018-128T10:15:30Z\", \"ordinal_date_time_no_millis\");\n        assertSameDate(\"2018-1T10:15:30Z\", \"ordinal_date_time_no_millis\");\n\n        assertSameDate(\"10:15:30.123Z\", \"time\");\n        assertSameDate(\"1:15:30.123Z\", \"time\");\n        assertSameDate(\"10:1:30.123Z\", \"time\");\n        assertSameDate(\"10:15:3.123Z\", \"time\");\n        assertParseException(\"10:15:3.1\", \"time\");\n        assertParseException(\"10:15:3Z\", \"time\");\n\n        assertSameDate(\"10:15:30Z\", \"time_no_millis\");\n        assertSameDate(\"01:15:30Z\", \"time_no_millis\");\n        assertSameDate(\"1:15:30Z\", \"time_no_millis\");\n        assertSameDate(\"10:5:30Z\", \"time_no_millis\");\n        assertSameDate(\"10:15:3Z\", \"time_no_millis\");\n        assertParseException(\"10:15:3\", \"time_no_millis\");\n\n        assertSameDate(\"T10:15:30.123Z\", \"t_time\");\n        assertSameDate(\"T1:15:30.123Z\", \"t_time\");\n        assertSameDate(\"T10:1:30.123Z\", \"t_time\");\n        assertSameDate(\"T10:15:3.123Z\", \"t_time\");\n        assertParseException(\"T10:15:3.1\", \"t_time\");\n        assertParseException(\"T10:15:3Z\", \"t_time\");\n\n        assertSameDate(\"T10:15:30Z\", \"t_time_no_millis\");\n        assertSameDate(\"T1:15:30Z\", \"t_time_no_millis\");\n        assertSameDate(\"T10:1:30Z\", \"t_time_no_millis\");\n        assertSameDate(\"T10:15:3Z\", \"t_time_no_millis\");\n        assertParseException(\"T10:15:3\", \"t_time_no_millis\");\n\n        assertSameDate(\"2012-W48-6\", \"week_date\");\n        assertSameDate(\"2012-W01-6\", \"week_date\");\n        assertSameDate(\"2012-W1-6\", \"week_date\");\n        \r\n        assertJodaParseException(\"2012-W1-8\", \"week_date\",\n            \"Cannot parse \\\"2012-W1-8\\\": Value 8 for dayOfWeek must be in the range [1,7]\");\n        assertJavaTimeParseException(\"2012-W1-8\", \"week_date\", \"Text '2012-W1-8' could not be parsed\");\n\n        assertSameDate(\"2012-W48-6T10:15:30.123Z\", \"week_date_time\");\n        assertSameDate(\"2012-W1-6T10:15:30.123Z\", \"week_date_time\");\n\n        assertSameDate(\"2012-W48-6T10:15:30Z\", \"week_date_time_no_millis\");\n        assertSameDate(\"2012-W1-6T10:15:30Z\", \"week_date_time_no_millis\");\n\n        assertSameDate(\"2012\", \"year\");\n        assertSameDate(\"1\", \"year\");\n        assertSameDate(\"-2000\", \"year\");\n\n        assertSameDate(\"2012-12\", \"yearMonth\");\n        assertSameDate(\"1-1\", \"yearMonth\");\n\n        assertSameDate(\"2012-12-31\", \"yearMonthDay\");\n        assertSameDate(\"1-12-31\", \"yearMonthDay\");\n        assertSameDate(\"2012-1-31\", \"yearMonthDay\");\n        assertSameDate(\"2012-12-1\", \"yearMonthDay\");\n\n        assertSameDate(\"2018\", \"week_year\");\n        assertSameDate(\"1\", \"week_year\");\n        assertSameDate(\"2017\", \"week_year\");\n\n        assertSameDate(\"2018-W29\", \"weekyear_week\");\n        assertSameDate(\"2018-W1\", \"weekyear_week\");\n\n        assertSameDate(\"2012-W31-5\", \"weekyear_week_day\");\n        assertSameDate(\"2012-W1-1\", \"weekyear_week_day\");\n    }\n","date":"2018-09-04 17:34:49","endLine":236,"groupId":"28896","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testDuellingFormatsValidParsing","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/ce/a83bfbccfdc7ee9aa108a3245d246743977af3.src","preCode":"    public void testDuellingFormatsValidParsing() {\n        assertSameDate(\"1522332219\", \"epoch_second\");\n        assertSameDate(\"1522332219321\", \"epoch_millis\");\n\n        assertSameDate(\"20181126\", \"basic_date\");\n        assertSameDate(\"20181126T121212.123Z\", \"basic_date_time\");\n        assertSameDate(\"20181126T121212.123+10:00\", \"basic_date_time\");\n        assertSameDate(\"20181126T121212.123-0800\", \"basic_date_time\");\n\n        assertSameDate(\"20181126T121212Z\", \"basic_date_time_no_millis\");\n        assertSameDate(\"2018363\", \"basic_ordinal_date\");\n        assertSameDate(\"2018363T121212.123Z\", \"basic_ordinal_date_time\");\n        assertSameDate(\"2018363T121212Z\", \"basic_ordinal_date_time_no_millis\");\n        assertSameDate(\"121212.123Z\", \"basic_time\");\n        assertSameDate(\"121212Z\", \"basic_time_no_millis\");\n        assertSameDate(\"T121212.123Z\", \"basic_t_time\");\n        assertSameDate(\"T121212Z\", \"basic_t_time_no_millis\");\n        assertSameDate(\"2018W313\", \"basic_week_date\");\n        assertSameDate(\"1W313\", \"basic_week_date\");\n        assertSameDate(\"18W313\", \"basic_week_date\");\n        assertSameDate(\"2018W313T121212.123Z\", \"basic_week_date_time\");\n        assertSameDate(\"2018W313T121212Z\", \"basic_week_date_time_no_millis\");\n\n        assertSameDate(\"2018-12-31\", \"date\");\n        assertSameDate(\"18-5-6\", \"date\");\n        assertSameDate(\"10000-5-6\", \"date\");\n\n        assertSameDate(\"2018-12-31T12\", \"date_hour\");\n        assertSameDate(\"2018-12-31T8\", \"date_hour\");\n\n        assertSameDate(\"2018-12-31T12:12\", \"date_hour_minute\");\n        assertSameDate(\"2018-12-31T8:3\", \"date_hour_minute\");\n\n        assertSameDate(\"2018-12-31T12:12:12\", \"date_hour_minute_second\");\n        assertSameDate(\"2018-12-31T12:12:1\", \"date_hour_minute_second\");\n\n        assertSameDate(\"2018-12-31T12:12:12.123\", \"date_hour_minute_second_fraction\");\n        assertSameDate(\"2018-12-31T12:12:12.123\", \"date_hour_minute_second_millis\");\n        assertSameDate(\"2018-12-31T12:12:12.1\", \"date_hour_minute_second_millis\");\n        assertSameDate(\"2018-12-31T12:12:12.1\", \"date_hour_minute_second_fraction\");\n\n        assertSameDate(\"10000\", \"date_optional_time\");\n        assertSameDate(\"10000T\", \"date_optional_time\");\n        assertSameDate(\"2018\", \"date_optional_time\");\n        assertSameDate(\"2018T\", \"date_optional_time\");\n        assertSameDate(\"2018-05\", \"date_optional_time\");\n        assertSameDate(\"2018-05-30\", \"date_optional_time\");\n        assertSameDate(\"2018-05-30T20\", \"date_optional_time\");\n        assertSameDate(\"2018-05-30T20:21\", \"date_optional_time\");\n        assertSameDate(\"2018-05-30T20:21:23\", \"date_optional_time\");\n        assertSameDate(\"2018-05-30T20:21:23.123\", \"date_optional_time\");\n        assertSameDate(\"2018-12-1\", \"date_optional_time\");\n        assertSameDate(\"2018-12-31T10:15:30\", \"date_optional_time\");\n        assertSameDate(\"2018-12-31T10:15:3\", \"date_optional_time\");\n        assertSameDate(\"2018-12-31T10:5:30\", \"date_optional_time\");\n        assertSameDate(\"2018-12-31T1:15:30\", \"date_optional_time\");\n\n        assertSameDate(\"2018-12-31T10:15:30.123Z\", \"date_time\");\n        assertSameDate(\"2018-12-31T10:15:30.11Z\", \"date_time\");\n        assertSameDate(\"2018-12-31T10:15:3.123Z\", \"date_time\");\n\n        assertSameDate(\"2018-12-31T10:15:30Z\", \"date_time_no_millis\");\n        assertSameDate(\"2018-12-31T10:5:30Z\", \"date_time_no_millis\");\n        assertSameDate(\"2018-12-31T10:15:3Z\", \"date_time_no_millis\");\n        assertSameDate(\"2018-12-31T1:15:30Z\", \"date_time_no_millis\");\n\n        assertSameDate(\"12\", \"hour\");\n        assertSameDate(\"01\", \"hour\");\n        assertSameDate(\"1\", \"hour\");\n\n        assertSameDate(\"12:12\", \"hour_minute\");\n        assertSameDate(\"12:01\", \"hour_minute\");\n        assertSameDate(\"12:1\", \"hour_minute\");\n\n        assertSameDate(\"12:12:12\", \"hour_minute_second\");\n        assertSameDate(\"12:12:01\", \"hour_minute_second\");\n        assertSameDate(\"12:12:1\", \"hour_minute_second\");\n\n        assertSameDate(\"12:12:12.123\", \"hour_minute_second_fraction\");\n        assertSameDate(\"12:12:12.1\", \"hour_minute_second_fraction\");\n        assertParseException(\"12:12:12\", \"hour_minute_second_fraction\");\n        assertSameDate(\"12:12:12.123\", \"hour_minute_second_millis\");\n        assertSameDate(\"12:12:12.1\", \"hour_minute_second_millis\");\n        assertParseException(\"12:12:12\", \"hour_minute_second_millis\");\n\n        assertSameDate(\"2018-128\", \"ordinal_date\");\n        assertSameDate(\"2018-1\", \"ordinal_date\");\n\n        assertSameDate(\"2018-128T10:15:30.123Z\", \"ordinal_date_time\");\n        assertSameDate(\"2018-1T10:15:30.123Z\", \"ordinal_date_time\");\n\n        assertSameDate(\"2018-128T10:15:30Z\", \"ordinal_date_time_no_millis\");\n        assertSameDate(\"2018-1T10:15:30Z\", \"ordinal_date_time_no_millis\");\n\n        assertSameDate(\"10:15:30.123Z\", \"time\");\n        assertSameDate(\"1:15:30.123Z\", \"time\");\n        assertSameDate(\"10:1:30.123Z\", \"time\");\n        assertSameDate(\"10:15:3.123Z\", \"time\");\n        assertParseException(\"10:15:3.1\", \"time\");\n        assertParseException(\"10:15:3Z\", \"time\");\n\n        assertSameDate(\"10:15:30Z\", \"time_no_millis\");\n        assertSameDate(\"01:15:30Z\", \"time_no_millis\");\n        assertSameDate(\"1:15:30Z\", \"time_no_millis\");\n        assertSameDate(\"10:5:30Z\", \"time_no_millis\");\n        assertSameDate(\"10:15:3Z\", \"time_no_millis\");\n        assertParseException(\"10:15:3\", \"time_no_millis\");\n\n        assertSameDate(\"T10:15:30.123Z\", \"t_time\");\n        assertSameDate(\"T1:15:30.123Z\", \"t_time\");\n        assertSameDate(\"T10:1:30.123Z\", \"t_time\");\n        assertSameDate(\"T10:15:3.123Z\", \"t_time\");\n        assertParseException(\"T10:15:3.1\", \"t_time\");\n        assertParseException(\"T10:15:3Z\", \"t_time\");\n\n        assertSameDate(\"T10:15:30Z\", \"t_time_no_millis\");\n        assertSameDate(\"T1:15:30Z\", \"t_time_no_millis\");\n        assertSameDate(\"T10:1:30Z\", \"t_time_no_millis\");\n        assertSameDate(\"T10:15:3Z\", \"t_time_no_millis\");\n        assertParseException(\"T10:15:3\", \"t_time_no_millis\");\n\n        assertSameDate(\"2012-W48-6\", \"week_date\");\n        assertSameDate(\"2012-W01-6\", \"week_date\");\n        assertSameDate(\"2012-W1-6\", \"week_date\");\n        \r\n        assertJodaParseException(\"2012-W1-8\", \"week_date\",\n            \"Cannot parse \\\"2012-W1-8\\\": Value 8 for dayOfWeek must be in the range [1,7]\");\n        assertJavaTimeParseException(\"2012-W1-8\", \"week_date\", \"Text '2012-W1-8' could not be parsed\");\n\n        assertSameDate(\"2012-W48-6T10:15:30.123Z\", \"week_date_time\");\n        assertSameDate(\"2012-W1-6T10:15:30.123Z\", \"week_date_time\");\n\n        assertSameDate(\"2012-W48-6T10:15:30Z\", \"week_date_time_no_millis\");\n        assertSameDate(\"2012-W1-6T10:15:30Z\", \"week_date_time_no_millis\");\n\n        assertSameDate(\"2012\", \"year\");\n        assertSameDate(\"1\", \"year\");\n        assertSameDate(\"-2000\", \"year\");\n\n        assertSameDate(\"2012-12\", \"yearMonth\");\n        assertSameDate(\"1-1\", \"yearMonth\");\n\n        assertSameDate(\"2012-12-31\", \"yearMonthDay\");\n        assertSameDate(\"1-12-31\", \"yearMonthDay\");\n        assertSameDate(\"2012-1-31\", \"yearMonthDay\");\n        assertSameDate(\"2012-12-1\", \"yearMonthDay\");\n\n        assertSameDate(\"2018\", \"week_year\");\n        assertSameDate(\"1\", \"week_year\");\n        assertSameDate(\"2017\", \"week_year\");\n\n        assertSameDate(\"2018-W29\", \"weekyear_week\");\n        assertSameDate(\"2018-W1\", \"weekyear_week\");\n\n        assertSameDate(\"2012-W31-5\", \"weekyear_week_day\");\n        assertSameDate(\"2012-W1-1\", \"weekyear_week_day\");\n    }\n","realPath":"server/src/test/java/org/elasticsearch/common/joda/JavaJodaTimeDuellingTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":72,"status":"M"},{"authorDate":"2018-08-11 01:23:14","commitOrder":3,"curCode":"    public void testDuelingStrictParsing() {\n        assertSameDate(\"2018W313\", \"strict_basic_week_date\");\n        assertParseException(\"18W313\", \"strict_basic_week_date\");\n        assertSameDate(\"2018W313T121212.123Z\", \"strict_basic_week_date_time\");\n        assertParseException(\"2018W313T12128.123Z\", \"strict_basic_week_date_time\");\n        assertParseException(\"2018W313T81212.123Z\", \"strict_basic_week_date_time\");\n        assertParseException(\"2018W313T12812.123Z\", \"strict_basic_week_date_time\");\n        assertParseException(\"2018W313T12812.1Z\", \"strict_basic_week_date_time\");\n        assertSameDate(\"2018W313T121212Z\", \"strict_basic_week_date_time_no_millis\");\n        assertParseException(\"2018W313T12128Z\", \"strict_basic_week_date_time_no_millis\");\n        assertParseException(\"2018W313T81212Z\", \"strict_basic_week_date_time_no_millis\");\n        assertParseException(\"2018W313T12812Z\", \"strict_basic_week_date_time_no_millis\");\n        assertSameDate(\"2018-12-31\", \"strict_date\");\n        assertParseException(\"10000-12-31\", \"strict_date\");\n        assertParseException(\"2018-8-31\", \"strict_date\");\n        assertSameDate(\"2018-12-31T12\", \"strict_date_hour\");\n        assertParseException(\"2018-12-31T8\", \"strict_date_hour\");\n        assertSameDate(\"2018-12-31T12:12\", \"strict_date_hour_minute\");\n        assertParseException(\"2018-12-31T8:3\", \"strict_date_hour_minute\");\n        assertSameDate(\"2018-12-31T12:12:12\", \"strict_date_hour_minute_second\");\n        assertParseException(\"2018-12-31T12:12:1\", \"strict_date_hour_minute_second\");\n        assertSameDate(\"2018-12-31T12:12:12.123\", \"strict_date_hour_minute_second_fraction\");\n        assertSameDate(\"2018-12-31T12:12:12.123\", \"strict_date_hour_minute_second_millis\");\n        assertSameDate(\"2018-12-31T12:12:12.1\", \"strict_date_hour_minute_second_millis\");\n        assertSameDate(\"2018-12-31T12:12:12.1\", \"strict_date_hour_minute_second_fraction\");\n        assertParseException(\"2018-12-31T12:12:12\", \"strict_date_hour_minute_second_millis\");\n        assertParseException(\"2018-12-31T12:12:12\", \"strict_date_hour_minute_second_fraction\");\n        assertSameDate(\"2018-12-31\", \"strict_date_optional_time\");\n        assertParseException(\"2018-12-1\", \"strict_date_optional_time\");\n        assertParseException(\"2018-1-31\", \"strict_date_optional_time\");\n        assertParseException(\"10000-01-31\", \"strict_date_optional_time\");\n        assertSameDate(\"2018-12-31T10:15:30\", \"strict_date_optional_time\");\n        assertParseException(\"2018-12-31T10:15:3\", \"strict_date_optional_time\");\n        assertParseException(\"2018-12-31T10:5:30\", \"strict_date_optional_time\");\n        assertParseException(\"2018-12-31T9:15:30\", \"strict_date_optional_time\");\n        assertSameDate(\"2018-12-31T10:15:30.123Z\", \"strict_date_time\");\n        assertSameDate(\"2018-12-31T10:15:30.11Z\", \"strict_date_time\");\n        assertParseException(\"2018-12-31T10:15:3.123Z\", \"strict_date_time\");\n        assertParseException(\"2018-12-31T10:5:30.123Z\", \"strict_date_time\");\n        assertParseException(\"2018-12-31T1:15:30.123Z\", \"strict_date_time\");\n        assertSameDate(\"2018-12-31T10:15:30Z\", \"strict_date_time_no_millis\");\n        assertParseException(\"2018-12-31T10:5:30Z\", \"strict_date_time_no_millis\");\n        assertParseException(\"2018-12-31T10:15:3Z\", \"strict_date_time_no_millis\");\n        assertParseException(\"2018-12-31T1:15:30Z\", \"strict_date_time_no_millis\");\n        assertSameDate(\"12\", \"strict_hour\");\n        assertSameDate(\"01\", \"strict_hour\");\n        assertParseException(\"1\", \"strict_hour\");\n        assertSameDate(\"12:12\", \"strict_hour_minute\");\n        assertSameDate(\"12:01\", \"strict_hour_minute\");\n        assertParseException(\"12:1\", \"strict_hour_minute\");\n        assertSameDate(\"12:12:12\", \"strict_hour_minute_second\");\n        assertSameDate(\"12:12:01\", \"strict_hour_minute_second\");\n        assertParseException(\"12:12:1\", \"strict_hour_minute_second\");\n        assertSameDate(\"12:12:12.123\", \"strict_hour_minute_second_fraction\");\n        assertSameDate(\"12:12:12.1\", \"strict_hour_minute_second_fraction\");\n        assertParseException(\"12:12:12\", \"strict_hour_minute_second_fraction\");\n        assertSameDate(\"12:12:12.123\", \"strict_hour_minute_second_millis\");\n        assertSameDate(\"12:12:12.1\", \"strict_hour_minute_second_millis\");\n        assertParseException(\"12:12:12\", \"strict_hour_minute_second_millis\");\n        assertSameDate(\"2018-128\", \"strict_ordinal_date\");\n        assertParseException(\"2018-1\", \"strict_ordinal_date\");\n\n        assertSameDate(\"2018-128T10:15:30.123Z\", \"strict_ordinal_date_time\");\n        assertParseException(\"2018-1T10:15:30.123Z\", \"strict_ordinal_date_time\");\n\n        assertSameDate(\"2018-128T10:15:30Z\", \"strict_ordinal_date_time_no_millis\");\n        assertParseException(\"2018-1T10:15:30Z\", \"strict_ordinal_date_time_no_millis\");\n\n        assertSameDate(\"10:15:30.123Z\", \"strict_time\");\n        assertParseException(\"1:15:30.123Z\", \"strict_time\");\n        assertParseException(\"10:1:30.123Z\", \"strict_time\");\n        assertParseException(\"10:15:3.123Z\", \"strict_time\");\n        assertParseException(\"10:15:3.1\", \"strict_time\");\n        assertParseException(\"10:15:3Z\", \"strict_time\");\n\n        assertSameDate(\"10:15:30Z\", \"strict_time_no_millis\");\n        assertSameDate(\"01:15:30Z\", \"strict_time_no_millis\");\n        assertParseException(\"1:15:30Z\", \"strict_time_no_millis\");\n        assertParseException(\"10:5:30Z\", \"strict_time_no_millis\");\n        assertParseException(\"10:15:3Z\", \"strict_time_no_millis\");\n        assertParseException(\"10:15:3\", \"strict_time_no_millis\");\n\n        assertSameDate(\"T10:15:30.123Z\", \"strict_t_time\");\n        assertParseException(\"T1:15:30.123Z\", \"strict_t_time\");\n        assertParseException(\"T10:1:30.123Z\", \"strict_t_time\");\n        assertParseException(\"T10:15:3.123Z\", \"strict_t_time\");\n        assertParseException(\"T10:15:3.1\", \"strict_t_time\");\n        assertParseException(\"T10:15:3Z\", \"strict_t_time\");\n\n        assertSameDate(\"T10:15:30Z\", \"strict_t_time_no_millis\");\n        assertParseException(\"T1:15:30Z\", \"strict_t_time_no_millis\");\n        assertParseException(\"T10:1:30Z\", \"strict_t_time_no_millis\");\n        assertParseException(\"T10:15:3Z\", \"strict_t_time_no_millis\");\n        assertParseException(\"T10:15:3\", \"strict_t_time_no_millis\");\n\n        assertSameDate(\"2012-W48-6\", \"strict_week_date\");\n        assertSameDate(\"2012-W01-6\", \"strict_week_date\");\n        assertParseException(\"2012-W1-6\", \"strict_week_date\");\n        assertParseException(\"2012-W1-8\", \"strict_week_date\");\n\n        assertSameDate(\"2012-W48-6\", \"strict_week_date\");\n        assertSameDate(\"2012-W01-6\", \"strict_week_date\");\n        assertParseException(\"2012-W1-6\", \"strict_week_date\");\n        \r\n        assertJodaParseException(\"2012-W01-8\", \"strict_week_date\",\n            \"Cannot parse \\\"2012-W01-8\\\": Value 8 for dayOfWeek must be in the range [1,7]\");\n        assertJavaTimeParseException(\"2012-W01-8\", \"strict_week_date\", \"Text '2012-W01-8' could not be parsed\");\n\n        assertSameDate(\"2012-W48-6T10:15:30.123Z\", \"strict_week_date_time\");\n        assertParseException(\"2012-W1-6T10:15:30.123Z\", \"strict_week_date_time\");\n\n        assertSameDate(\"2012-W48-6T10:15:30Z\", \"strict_week_date_time_no_millis\");\n        assertParseException(\"2012-W1-6T10:15:30Z\", \"strict_week_date_time_no_millis\");\n\n        assertSameDate(\"2012\", \"strict_year\");\n        assertParseException(\"1\", \"strict_year\");\n        assertSameDate(\"-2000\", \"strict_year\");\n\n        assertSameDate(\"2012-12\", \"strict_year_month\");\n        assertParseException(\"1-1\", \"strict_year_month\");\n\n        assertSameDate(\"2012-12-31\", \"strict_year_month_day\");\n        assertParseException(\"1-12-31\", \"strict_year_month_day\");\n        assertParseException(\"2012-1-31\", \"strict_year_month_day\");\n        assertParseException(\"2012-12-1\", \"strict_year_month_day\");\n\n        assertSameDate(\"2018\", \"strict_weekyear\");\n        assertParseException(\"1\", \"strict_weekyear\");\n\n        assertSameDate(\"2018\", \"strict_weekyear\");\n        assertSameDate(\"2017\", \"strict_weekyear\");\n        assertParseException(\"1\", \"strict_weekyear\");\n\n        assertSameDate(\"2018-W29\", \"strict_weekyear_week\");\n        assertSameDate(\"2018-W01\", \"strict_weekyear_week\");\n        assertParseException(\"2018-W1\", \"strict_weekyear_week\");\n\n        assertSameDate(\"2012-W31-5\", \"strict_weekyear_week_day\");\n        assertParseException(\"2012-W1-1\", \"strict_weekyear_week_day\");\n    }\n","date":"2018-08-11 01:23:14","endLine":369,"groupId":"17876","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testDuelingStrictParsing","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/15/51a315b26d93122145fe520885ac8289a2f003.src","preCode":"    public void testDuelingStrictParsing() {\n        assertSameDate(\"2018W313\", \"strict_basic_week_date\");\n        assertParseException(\"18W313\", \"strict_basic_week_date\");\n        assertSameDate(\"2018W313T121212.123Z\", \"strict_basic_week_date_time\");\n        assertParseException(\"2018W313T12128.123Z\", \"strict_basic_week_date_time\");\n        assertParseException(\"2018W313T81212.123Z\", \"strict_basic_week_date_time\");\n        assertParseException(\"2018W313T12812.123Z\", \"strict_basic_week_date_time\");\n        assertParseException(\"2018W313T12812.1Z\", \"strict_basic_week_date_time\");\n        assertSameDate(\"2018W313T121212Z\", \"strict_basic_week_date_time_no_millis\");\n        assertParseException(\"2018W313T12128Z\", \"strict_basic_week_date_time_no_millis\");\n        assertParseException(\"2018W313T81212Z\", \"strict_basic_week_date_time_no_millis\");\n        assertParseException(\"2018W313T12812Z\", \"strict_basic_week_date_time_no_millis\");\n        assertSameDate(\"2018-12-31\", \"strict_date\");\n        assertParseException(\"10000-12-31\", \"strict_date\");\n        assertParseException(\"2018-8-31\", \"strict_date\");\n        assertSameDate(\"2018-12-31T12\", \"strict_date_hour\");\n        assertParseException(\"2018-12-31T8\", \"strict_date_hour\");\n        assertSameDate(\"2018-12-31T12:12\", \"strict_date_hour_minute\");\n        assertParseException(\"2018-12-31T8:3\", \"strict_date_hour_minute\");\n        assertSameDate(\"2018-12-31T12:12:12\", \"strict_date_hour_minute_second\");\n        assertParseException(\"2018-12-31T12:12:1\", \"strict_date_hour_minute_second\");\n        assertSameDate(\"2018-12-31T12:12:12.123\", \"strict_date_hour_minute_second_fraction\");\n        assertSameDate(\"2018-12-31T12:12:12.123\", \"strict_date_hour_minute_second_millis\");\n        assertSameDate(\"2018-12-31T12:12:12.1\", \"strict_date_hour_minute_second_millis\");\n        assertSameDate(\"2018-12-31T12:12:12.1\", \"strict_date_hour_minute_second_fraction\");\n        assertParseException(\"2018-12-31T12:12:12\", \"strict_date_hour_minute_second_millis\");\n        assertParseException(\"2018-12-31T12:12:12\", \"strict_date_hour_minute_second_fraction\");\n        assertSameDate(\"2018-12-31\", \"strict_date_optional_time\");\n        assertParseException(\"2018-12-1\", \"strict_date_optional_time\");\n        assertParseException(\"2018-1-31\", \"strict_date_optional_time\");\n        assertParseException(\"10000-01-31\", \"strict_date_optional_time\");\n        assertSameDate(\"2018-12-31T10:15:30\", \"strict_date_optional_time\");\n        assertParseException(\"2018-12-31T10:15:3\", \"strict_date_optional_time\");\n        assertParseException(\"2018-12-31T10:5:30\", \"strict_date_optional_time\");\n        assertParseException(\"2018-12-31T9:15:30\", \"strict_date_optional_time\");\n        assertSameDate(\"2018-12-31T10:15:30.123Z\", \"strict_date_time\");\n        assertSameDate(\"2018-12-31T10:15:30.11Z\", \"strict_date_time\");\n        assertParseException(\"2018-12-31T10:15:3.123Z\", \"strict_date_time\");\n        assertParseException(\"2018-12-31T10:5:30.123Z\", \"strict_date_time\");\n        assertParseException(\"2018-12-31T1:15:30.123Z\", \"strict_date_time\");\n        assertSameDate(\"2018-12-31T10:15:30Z\", \"strict_date_time_no_millis\");\n        assertParseException(\"2018-12-31T10:5:30Z\", \"strict_date_time_no_millis\");\n        assertParseException(\"2018-12-31T10:15:3Z\", \"strict_date_time_no_millis\");\n        assertParseException(\"2018-12-31T1:15:30Z\", \"strict_date_time_no_millis\");\n        assertSameDate(\"12\", \"strict_hour\");\n        assertSameDate(\"01\", \"strict_hour\");\n        assertParseException(\"1\", \"strict_hour\");\n        assertSameDate(\"12:12\", \"strict_hour_minute\");\n        assertSameDate(\"12:01\", \"strict_hour_minute\");\n        assertParseException(\"12:1\", \"strict_hour_minute\");\n        assertSameDate(\"12:12:12\", \"strict_hour_minute_second\");\n        assertSameDate(\"12:12:01\", \"strict_hour_minute_second\");\n        assertParseException(\"12:12:1\", \"strict_hour_minute_second\");\n        assertSameDate(\"12:12:12.123\", \"strict_hour_minute_second_fraction\");\n        assertSameDate(\"12:12:12.1\", \"strict_hour_minute_second_fraction\");\n        assertParseException(\"12:12:12\", \"strict_hour_minute_second_fraction\");\n        assertSameDate(\"12:12:12.123\", \"strict_hour_minute_second_millis\");\n        assertSameDate(\"12:12:12.1\", \"strict_hour_minute_second_millis\");\n        assertParseException(\"12:12:12\", \"strict_hour_minute_second_millis\");\n        assertSameDate(\"2018-128\", \"strict_ordinal_date\");\n        assertParseException(\"2018-1\", \"strict_ordinal_date\");\n\n        assertSameDate(\"2018-128T10:15:30.123Z\", \"strict_ordinal_date_time\");\n        assertParseException(\"2018-1T10:15:30.123Z\", \"strict_ordinal_date_time\");\n\n        assertSameDate(\"2018-128T10:15:30Z\", \"strict_ordinal_date_time_no_millis\");\n        assertParseException(\"2018-1T10:15:30Z\", \"strict_ordinal_date_time_no_millis\");\n\n        assertSameDate(\"10:15:30.123Z\", \"strict_time\");\n        assertParseException(\"1:15:30.123Z\", \"strict_time\");\n        assertParseException(\"10:1:30.123Z\", \"strict_time\");\n        assertParseException(\"10:15:3.123Z\", \"strict_time\");\n        assertParseException(\"10:15:3.1\", \"strict_time\");\n        assertParseException(\"10:15:3Z\", \"strict_time\");\n\n        assertSameDate(\"10:15:30Z\", \"strict_time_no_millis\");\n        assertSameDate(\"01:15:30Z\", \"strict_time_no_millis\");\n        assertParseException(\"1:15:30Z\", \"strict_time_no_millis\");\n        assertParseException(\"10:5:30Z\", \"strict_time_no_millis\");\n        assertParseException(\"10:15:3Z\", \"strict_time_no_millis\");\n        assertParseException(\"10:15:3\", \"strict_time_no_millis\");\n\n        assertSameDate(\"T10:15:30.123Z\", \"strict_t_time\");\n        assertParseException(\"T1:15:30.123Z\", \"strict_t_time\");\n        assertParseException(\"T10:1:30.123Z\", \"strict_t_time\");\n        assertParseException(\"T10:15:3.123Z\", \"strict_t_time\");\n        assertParseException(\"T10:15:3.1\", \"strict_t_time\");\n        assertParseException(\"T10:15:3Z\", \"strict_t_time\");\n\n        assertSameDate(\"T10:15:30Z\", \"strict_t_time_no_millis\");\n        assertParseException(\"T1:15:30Z\", \"strict_t_time_no_millis\");\n        assertParseException(\"T10:1:30Z\", \"strict_t_time_no_millis\");\n        assertParseException(\"T10:15:3Z\", \"strict_t_time_no_millis\");\n        assertParseException(\"T10:15:3\", \"strict_t_time_no_millis\");\n\n        assertSameDate(\"2012-W48-6\", \"strict_week_date\");\n        assertSameDate(\"2012-W01-6\", \"strict_week_date\");\n        assertParseException(\"2012-W1-6\", \"strict_week_date\");\n        assertParseException(\"2012-W1-8\", \"strict_week_date\");\n\n        assertSameDate(\"2012-W48-6\", \"strict_week_date\");\n        assertSameDate(\"2012-W01-6\", \"strict_week_date\");\n        assertParseException(\"2012-W1-6\", \"strict_week_date\");\n        \r\n        assertJodaParseException(\"2012-W01-8\", \"strict_week_date\",\n            \"Cannot parse \\\"2012-W01-8\\\": Value 8 for dayOfWeek must be in the range [1,7]\");\n        assertJavaTimeParseException(\"2012-W01-8\", \"strict_week_date\", \"Text '2012-W01-8' could not be parsed\");\n\n        assertSameDate(\"2012-W48-6T10:15:30.123Z\", \"strict_week_date_time\");\n        assertParseException(\"2012-W1-6T10:15:30.123Z\", \"strict_week_date_time\");\n\n        assertSameDate(\"2012-W48-6T10:15:30Z\", \"strict_week_date_time_no_millis\");\n        assertParseException(\"2012-W1-6T10:15:30Z\", \"strict_week_date_time_no_millis\");\n\n        assertSameDate(\"2012\", \"strict_year\");\n        assertParseException(\"1\", \"strict_year\");\n        assertSameDate(\"-2000\", \"strict_year\");\n\n        assertSameDate(\"2012-12\", \"strict_year_month\");\n        assertParseException(\"1-1\", \"strict_year_month\");\n\n        assertSameDate(\"2012-12-31\", \"strict_year_month_day\");\n        assertParseException(\"1-12-31\", \"strict_year_month_day\");\n        assertParseException(\"2012-1-31\", \"strict_year_month_day\");\n        assertParseException(\"2012-12-1\", \"strict_year_month_day\");\n\n        assertSameDate(\"2018\", \"strict_weekyear\");\n        assertParseException(\"1\", \"strict_weekyear\");\n\n        assertSameDate(\"2018\", \"strict_weekyear\");\n        assertSameDate(\"2017\", \"strict_weekyear\");\n        assertParseException(\"1\", \"strict_weekyear\");\n\n        assertSameDate(\"2018-W29\", \"strict_weekyear_week\");\n        assertSameDate(\"2018-W01\", \"strict_weekyear_week\");\n        assertParseException(\"2018-W1\", \"strict_weekyear_week\");\n\n        assertSameDate(\"2012-W31-5\", \"strict_weekyear_week_day\");\n        assertParseException(\"2012-W1-1\", \"strict_weekyear_week_day\");\n    }\n","realPath":"server/src/test/java/org/elasticsearch/common/joda/JavaJodaTimeDuellingTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":230,"status":"N"}],"commitId":"92ab442aee06dc0304ff4bff4835c7032720d069","commitMessage":"@@@Merge branch 'master' into index-lifecycle\n","date":"2018-09-04 17:34:49","modifiedFileCount":"14","status":"M","submitter":"Colin Goodheart-Smithe"},{"authorTime":"2018-08-11 01:23:14","codes":[{"authorDate":"2018-09-29 05:40:12","commitOrder":4,"curCode":"    public void testDuellingFormatsValidParsing() {\n        assertSameDate(\"1522332219\", \"epoch_second\");\n        assertSameDate(\"1522332219.\", \"epoch_second\");\n        assertSameDate(\"1522332219.0\", \"epoch_second\");\n        assertSameDate(\"0\", \"epoch_second\");\n        assertSameDate(\"1\", \"epoch_second\");\n        assertSameDate(\"-1\", \"epoch_second\");\n        assertSameDate(\"-1522332219\", \"epoch_second\");\n        assertSameDate(\"1522332219321\", \"epoch_millis\");\n        assertSameDate(\"0\", \"epoch_millis\");\n        assertSameDate(\"1\", \"epoch_millis\");\n        assertSameDate(\"-1\", \"epoch_millis\");\n        assertSameDate(\"-1522332219321\", \"epoch_millis\");\n\n        assertSameDate(\"20181126\", \"basic_date\");\n        assertSameDate(\"20181126T121212.123Z\", \"basic_date_time\");\n        assertSameDate(\"20181126T121212.123+10:00\", \"basic_date_time\");\n        assertSameDate(\"20181126T121212.123-0800\", \"basic_date_time\");\n\n        assertSameDate(\"20181126T121212Z\", \"basic_date_time_no_millis\");\n        assertSameDate(\"2018363\", \"basic_ordinal_date\");\n        assertSameDate(\"2018363T121212.123Z\", \"basic_ordinal_date_time\");\n        assertSameDate(\"2018363T121212Z\", \"basic_ordinal_date_time_no_millis\");\n        assertSameDate(\"121212.123Z\", \"basic_time\");\n        assertSameDate(\"121212Z\", \"basic_time_no_millis\");\n        assertSameDate(\"T121212.123Z\", \"basic_t_time\");\n        assertSameDate(\"T121212Z\", \"basic_t_time_no_millis\");\n        assertSameDate(\"2018W313\", \"basic_week_date\");\n        assertSameDate(\"1W313\", \"basic_week_date\");\n        assertSameDate(\"18W313\", \"basic_week_date\");\n        assertSameDate(\"2018W313T121212.123Z\", \"basic_week_date_time\");\n        assertSameDate(\"2018W313T121212Z\", \"basic_week_date_time_no_millis\");\n\n        assertSameDate(\"2018-12-31\", \"date\");\n        assertSameDate(\"18-5-6\", \"date\");\n        assertSameDate(\"10000-5-6\", \"date\");\n\n        assertSameDate(\"2018-12-31T12\", \"date_hour\");\n        assertSameDate(\"2018-12-31T8\", \"date_hour\");\n\n        assertSameDate(\"2018-12-31T12:12\", \"date_hour_minute\");\n        assertSameDate(\"2018-12-31T8:3\", \"date_hour_minute\");\n\n        assertSameDate(\"2018-12-31T12:12:12\", \"date_hour_minute_second\");\n        assertSameDate(\"2018-12-31T12:12:1\", \"date_hour_minute_second\");\n\n        assertSameDate(\"2018-12-31T12:12:12.123\", \"date_hour_minute_second_fraction\");\n        assertSameDate(\"2018-12-31T12:12:12.123\", \"date_hour_minute_second_millis\");\n        assertSameDate(\"2018-12-31T12:12:12.1\", \"date_hour_minute_second_millis\");\n        assertSameDate(\"2018-12-31T12:12:12.1\", \"date_hour_minute_second_fraction\");\n\n        assertSameDate(\"10000\", \"date_optional_time\");\n        assertSameDate(\"10000T\", \"date_optional_time\");\n        assertSameDate(\"2018\", \"date_optional_time\");\n        assertSameDate(\"2018T\", \"date_optional_time\");\n        assertSameDate(\"2018-05\", \"date_optional_time\");\n        assertSameDate(\"2018-05-30\", \"date_optional_time\");\n        assertSameDate(\"2018-05-30T20\", \"date_optional_time\");\n        assertSameDate(\"2018-05-30T20:21\", \"date_optional_time\");\n        assertSameDate(\"2018-05-30T20:21:23\", \"date_optional_time\");\n        assertSameDate(\"2018-05-30T20:21:23.123\", \"date_optional_time\");\n        assertSameDate(\"2018-12-1\", \"date_optional_time\");\n        assertSameDate(\"2018-12-31T10:15:30\", \"date_optional_time\");\n        assertSameDate(\"2018-12-31T10:15:3\", \"date_optional_time\");\n        assertSameDate(\"2018-12-31T10:5:30\", \"date_optional_time\");\n        assertSameDate(\"2018-12-31T1:15:30\", \"date_optional_time\");\n\n        assertSameDate(\"2018-12-31T10:15:30.123Z\", \"date_time\");\n        assertSameDate(\"2018-12-31T10:15:30.11Z\", \"date_time\");\n        assertSameDate(\"2018-12-31T10:15:3.123Z\", \"date_time\");\n\n        assertSameDate(\"2018-12-31T10:15:30Z\", \"date_time_no_millis\");\n        assertSameDate(\"2018-12-31T10:5:30Z\", \"date_time_no_millis\");\n        assertSameDate(\"2018-12-31T10:15:3Z\", \"date_time_no_millis\");\n        assertSameDate(\"2018-12-31T1:15:30Z\", \"date_time_no_millis\");\n\n        assertSameDate(\"12\", \"hour\");\n        assertSameDate(\"01\", \"hour\");\n        assertSameDate(\"1\", \"hour\");\n\n        assertSameDate(\"12:12\", \"hour_minute\");\n        assertSameDate(\"12:01\", \"hour_minute\");\n        assertSameDate(\"12:1\", \"hour_minute\");\n\n        assertSameDate(\"12:12:12\", \"hour_minute_second\");\n        assertSameDate(\"12:12:01\", \"hour_minute_second\");\n        assertSameDate(\"12:12:1\", \"hour_minute_second\");\n\n        assertSameDate(\"12:12:12.123\", \"hour_minute_second_fraction\");\n        assertSameDate(\"12:12:12.1\", \"hour_minute_second_fraction\");\n        assertParseException(\"12:12:12\", \"hour_minute_second_fraction\");\n        assertSameDate(\"12:12:12.123\", \"hour_minute_second_millis\");\n        assertSameDate(\"12:12:12.1\", \"hour_minute_second_millis\");\n        assertParseException(\"12:12:12\", \"hour_minute_second_millis\");\n\n        assertSameDate(\"2018-128\", \"ordinal_date\");\n        assertSameDate(\"2018-1\", \"ordinal_date\");\n\n        assertSameDate(\"2018-128T10:15:30.123Z\", \"ordinal_date_time\");\n        assertSameDate(\"2018-1T10:15:30.123Z\", \"ordinal_date_time\");\n\n        assertSameDate(\"2018-128T10:15:30Z\", \"ordinal_date_time_no_millis\");\n        assertSameDate(\"2018-1T10:15:30Z\", \"ordinal_date_time_no_millis\");\n\n        assertSameDate(\"10:15:30.123Z\", \"time\");\n        assertSameDate(\"1:15:30.123Z\", \"time\");\n        assertSameDate(\"10:1:30.123Z\", \"time\");\n        assertSameDate(\"10:15:3.123Z\", \"time\");\n        assertParseException(\"10:15:3.1\", \"time\");\n        assertParseException(\"10:15:3Z\", \"time\");\n\n        assertSameDate(\"10:15:30Z\", \"time_no_millis\");\n        assertSameDate(\"01:15:30Z\", \"time_no_millis\");\n        assertSameDate(\"1:15:30Z\", \"time_no_millis\");\n        assertSameDate(\"10:5:30Z\", \"time_no_millis\");\n        assertSameDate(\"10:15:3Z\", \"time_no_millis\");\n        assertParseException(\"10:15:3\", \"time_no_millis\");\n\n        assertSameDate(\"T10:15:30.123Z\", \"t_time\");\n        assertSameDate(\"T1:15:30.123Z\", \"t_time\");\n        assertSameDate(\"T10:1:30.123Z\", \"t_time\");\n        assertSameDate(\"T10:15:3.123Z\", \"t_time\");\n        assertParseException(\"T10:15:3.1\", \"t_time\");\n        assertParseException(\"T10:15:3Z\", \"t_time\");\n\n        assertSameDate(\"T10:15:30Z\", \"t_time_no_millis\");\n        assertSameDate(\"T1:15:30Z\", \"t_time_no_millis\");\n        assertSameDate(\"T10:1:30Z\", \"t_time_no_millis\");\n        assertSameDate(\"T10:15:3Z\", \"t_time_no_millis\");\n        assertParseException(\"T10:15:3\", \"t_time_no_millis\");\n\n        assertSameDate(\"2012-W48-6\", \"week_date\");\n        assertSameDate(\"2012-W01-6\", \"week_date\");\n        assertSameDate(\"2012-W1-6\", \"week_date\");\n        \r\n        assertJodaParseException(\"2012-W1-8\", \"week_date\",\n            \"Cannot parse \\\"2012-W1-8\\\": Value 8 for dayOfWeek must be in the range [1,7]\");\n        assertJavaTimeParseException(\"2012-W1-8\", \"week_date\", \"Text '2012-W1-8' could not be parsed\");\n\n        assertSameDate(\"2012-W48-6T10:15:30.123Z\", \"week_date_time\");\n        assertSameDate(\"2012-W1-6T10:15:30.123Z\", \"week_date_time\");\n\n        assertSameDate(\"2012-W48-6T10:15:30Z\", \"week_date_time_no_millis\");\n        assertSameDate(\"2012-W1-6T10:15:30Z\", \"week_date_time_no_millis\");\n\n        assertSameDate(\"2012\", \"year\");\n        assertSameDate(\"1\", \"year\");\n        assertSameDate(\"-2000\", \"year\");\n\n        assertSameDate(\"2012-12\", \"yearMonth\");\n        assertSameDate(\"1-1\", \"yearMonth\");\n\n        assertSameDate(\"2012-12-31\", \"yearMonthDay\");\n        assertSameDate(\"1-12-31\", \"yearMonthDay\");\n        assertSameDate(\"2012-1-31\", \"yearMonthDay\");\n        assertSameDate(\"2012-12-1\", \"yearMonthDay\");\n\n        assertSameDate(\"2018\", \"week_year\");\n        assertSameDate(\"1\", \"week_year\");\n        assertSameDate(\"2017\", \"week_year\");\n\n        assertSameDate(\"2018-W29\", \"weekyear_week\");\n        assertSameDate(\"2018-W1\", \"weekyear_week\");\n\n        assertSameDate(\"2012-W31-5\", \"weekyear_week_day\");\n        assertSameDate(\"2012-W1-1\", \"weekyear_week_day\");\n    }\n","date":"2018-09-29 05:40:12","endLine":238,"groupId":"28896","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"testDuellingFormatsValidParsing","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/61/aa7dc4a46645a638fd682aa8c2ee566dde902a.src","preCode":"    public void testDuellingFormatsValidParsing() {\n        assertSameDate(\"1522332219\", \"epoch_second\");\n        assertSameDate(\"0\", \"epoch_second\");\n        assertSameDate(\"1\", \"epoch_second\");\n        assertSameDate(\"-1\", \"epoch_second\");\n        assertSameDate(\"-1522332219\", \"epoch_second\");\n        assertSameDate(\"1522332219321\", \"epoch_millis\");\n        assertSameDate(\"0\", \"epoch_millis\");\n        assertSameDate(\"1\", \"epoch_millis\");\n        assertSameDate(\"-1\", \"epoch_millis\");\n        assertSameDate(\"-1522332219321\", \"epoch_millis\");\n\n        assertSameDate(\"20181126\", \"basic_date\");\n        assertSameDate(\"20181126T121212.123Z\", \"basic_date_time\");\n        assertSameDate(\"20181126T121212.123+10:00\", \"basic_date_time\");\n        assertSameDate(\"20181126T121212.123-0800\", \"basic_date_time\");\n\n        assertSameDate(\"20181126T121212Z\", \"basic_date_time_no_millis\");\n        assertSameDate(\"2018363\", \"basic_ordinal_date\");\n        assertSameDate(\"2018363T121212.123Z\", \"basic_ordinal_date_time\");\n        assertSameDate(\"2018363T121212Z\", \"basic_ordinal_date_time_no_millis\");\n        assertSameDate(\"121212.123Z\", \"basic_time\");\n        assertSameDate(\"121212Z\", \"basic_time_no_millis\");\n        assertSameDate(\"T121212.123Z\", \"basic_t_time\");\n        assertSameDate(\"T121212Z\", \"basic_t_time_no_millis\");\n        assertSameDate(\"2018W313\", \"basic_week_date\");\n        assertSameDate(\"1W313\", \"basic_week_date\");\n        assertSameDate(\"18W313\", \"basic_week_date\");\n        assertSameDate(\"2018W313T121212.123Z\", \"basic_week_date_time\");\n        assertSameDate(\"2018W313T121212Z\", \"basic_week_date_time_no_millis\");\n\n        assertSameDate(\"2018-12-31\", \"date\");\n        assertSameDate(\"18-5-6\", \"date\");\n        assertSameDate(\"10000-5-6\", \"date\");\n\n        assertSameDate(\"2018-12-31T12\", \"date_hour\");\n        assertSameDate(\"2018-12-31T8\", \"date_hour\");\n\n        assertSameDate(\"2018-12-31T12:12\", \"date_hour_minute\");\n        assertSameDate(\"2018-12-31T8:3\", \"date_hour_minute\");\n\n        assertSameDate(\"2018-12-31T12:12:12\", \"date_hour_minute_second\");\n        assertSameDate(\"2018-12-31T12:12:1\", \"date_hour_minute_second\");\n\n        assertSameDate(\"2018-12-31T12:12:12.123\", \"date_hour_minute_second_fraction\");\n        assertSameDate(\"2018-12-31T12:12:12.123\", \"date_hour_minute_second_millis\");\n        assertSameDate(\"2018-12-31T12:12:12.1\", \"date_hour_minute_second_millis\");\n        assertSameDate(\"2018-12-31T12:12:12.1\", \"date_hour_minute_second_fraction\");\n\n        assertSameDate(\"10000\", \"date_optional_time\");\n        assertSameDate(\"10000T\", \"date_optional_time\");\n        assertSameDate(\"2018\", \"date_optional_time\");\n        assertSameDate(\"2018T\", \"date_optional_time\");\n        assertSameDate(\"2018-05\", \"date_optional_time\");\n        assertSameDate(\"2018-05-30\", \"date_optional_time\");\n        assertSameDate(\"2018-05-30T20\", \"date_optional_time\");\n        assertSameDate(\"2018-05-30T20:21\", \"date_optional_time\");\n        assertSameDate(\"2018-05-30T20:21:23\", \"date_optional_time\");\n        assertSameDate(\"2018-05-30T20:21:23.123\", \"date_optional_time\");\n        assertSameDate(\"2018-12-1\", \"date_optional_time\");\n        assertSameDate(\"2018-12-31T10:15:30\", \"date_optional_time\");\n        assertSameDate(\"2018-12-31T10:15:3\", \"date_optional_time\");\n        assertSameDate(\"2018-12-31T10:5:30\", \"date_optional_time\");\n        assertSameDate(\"2018-12-31T1:15:30\", \"date_optional_time\");\n\n        assertSameDate(\"2018-12-31T10:15:30.123Z\", \"date_time\");\n        assertSameDate(\"2018-12-31T10:15:30.11Z\", \"date_time\");\n        assertSameDate(\"2018-12-31T10:15:3.123Z\", \"date_time\");\n\n        assertSameDate(\"2018-12-31T10:15:30Z\", \"date_time_no_millis\");\n        assertSameDate(\"2018-12-31T10:5:30Z\", \"date_time_no_millis\");\n        assertSameDate(\"2018-12-31T10:15:3Z\", \"date_time_no_millis\");\n        assertSameDate(\"2018-12-31T1:15:30Z\", \"date_time_no_millis\");\n\n        assertSameDate(\"12\", \"hour\");\n        assertSameDate(\"01\", \"hour\");\n        assertSameDate(\"1\", \"hour\");\n\n        assertSameDate(\"12:12\", \"hour_minute\");\n        assertSameDate(\"12:01\", \"hour_minute\");\n        assertSameDate(\"12:1\", \"hour_minute\");\n\n        assertSameDate(\"12:12:12\", \"hour_minute_second\");\n        assertSameDate(\"12:12:01\", \"hour_minute_second\");\n        assertSameDate(\"12:12:1\", \"hour_minute_second\");\n\n        assertSameDate(\"12:12:12.123\", \"hour_minute_second_fraction\");\n        assertSameDate(\"12:12:12.1\", \"hour_minute_second_fraction\");\n        assertParseException(\"12:12:12\", \"hour_minute_second_fraction\");\n        assertSameDate(\"12:12:12.123\", \"hour_minute_second_millis\");\n        assertSameDate(\"12:12:12.1\", \"hour_minute_second_millis\");\n        assertParseException(\"12:12:12\", \"hour_minute_second_millis\");\n\n        assertSameDate(\"2018-128\", \"ordinal_date\");\n        assertSameDate(\"2018-1\", \"ordinal_date\");\n\n        assertSameDate(\"2018-128T10:15:30.123Z\", \"ordinal_date_time\");\n        assertSameDate(\"2018-1T10:15:30.123Z\", \"ordinal_date_time\");\n\n        assertSameDate(\"2018-128T10:15:30Z\", \"ordinal_date_time_no_millis\");\n        assertSameDate(\"2018-1T10:15:30Z\", \"ordinal_date_time_no_millis\");\n\n        assertSameDate(\"10:15:30.123Z\", \"time\");\n        assertSameDate(\"1:15:30.123Z\", \"time\");\n        assertSameDate(\"10:1:30.123Z\", \"time\");\n        assertSameDate(\"10:15:3.123Z\", \"time\");\n        assertParseException(\"10:15:3.1\", \"time\");\n        assertParseException(\"10:15:3Z\", \"time\");\n\n        assertSameDate(\"10:15:30Z\", \"time_no_millis\");\n        assertSameDate(\"01:15:30Z\", \"time_no_millis\");\n        assertSameDate(\"1:15:30Z\", \"time_no_millis\");\n        assertSameDate(\"10:5:30Z\", \"time_no_millis\");\n        assertSameDate(\"10:15:3Z\", \"time_no_millis\");\n        assertParseException(\"10:15:3\", \"time_no_millis\");\n\n        assertSameDate(\"T10:15:30.123Z\", \"t_time\");\n        assertSameDate(\"T1:15:30.123Z\", \"t_time\");\n        assertSameDate(\"T10:1:30.123Z\", \"t_time\");\n        assertSameDate(\"T10:15:3.123Z\", \"t_time\");\n        assertParseException(\"T10:15:3.1\", \"t_time\");\n        assertParseException(\"T10:15:3Z\", \"t_time\");\n\n        assertSameDate(\"T10:15:30Z\", \"t_time_no_millis\");\n        assertSameDate(\"T1:15:30Z\", \"t_time_no_millis\");\n        assertSameDate(\"T10:1:30Z\", \"t_time_no_millis\");\n        assertSameDate(\"T10:15:3Z\", \"t_time_no_millis\");\n        assertParseException(\"T10:15:3\", \"t_time_no_millis\");\n\n        assertSameDate(\"2012-W48-6\", \"week_date\");\n        assertSameDate(\"2012-W01-6\", \"week_date\");\n        assertSameDate(\"2012-W1-6\", \"week_date\");\n        \r\n        assertJodaParseException(\"2012-W1-8\", \"week_date\",\n            \"Cannot parse \\\"2012-W1-8\\\": Value 8 for dayOfWeek must be in the range [1,7]\");\n        assertJavaTimeParseException(\"2012-W1-8\", \"week_date\", \"Text '2012-W1-8' could not be parsed\");\n\n        assertSameDate(\"2012-W48-6T10:15:30.123Z\", \"week_date_time\");\n        assertSameDate(\"2012-W1-6T10:15:30.123Z\", \"week_date_time\");\n\n        assertSameDate(\"2012-W48-6T10:15:30Z\", \"week_date_time_no_millis\");\n        assertSameDate(\"2012-W1-6T10:15:30Z\", \"week_date_time_no_millis\");\n\n        assertSameDate(\"2012\", \"year\");\n        assertSameDate(\"1\", \"year\");\n        assertSameDate(\"-2000\", \"year\");\n\n        assertSameDate(\"2012-12\", \"yearMonth\");\n        assertSameDate(\"1-1\", \"yearMonth\");\n\n        assertSameDate(\"2012-12-31\", \"yearMonthDay\");\n        assertSameDate(\"1-12-31\", \"yearMonthDay\");\n        assertSameDate(\"2012-1-31\", \"yearMonthDay\");\n        assertSameDate(\"2012-12-1\", \"yearMonthDay\");\n\n        assertSameDate(\"2018\", \"week_year\");\n        assertSameDate(\"1\", \"week_year\");\n        assertSameDate(\"2017\", \"week_year\");\n\n        assertSameDate(\"2018-W29\", \"weekyear_week\");\n        assertSameDate(\"2018-W1\", \"weekyear_week\");\n\n        assertSameDate(\"2012-W31-5\", \"weekyear_week_day\");\n        assertSameDate(\"2012-W1-1\", \"weekyear_week_day\");\n    }\n","realPath":"server/src/test/java/org/elasticsearch/common/joda/JavaJodaTimeDuellingTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":72,"status":"M"},{"authorDate":"2018-08-11 01:23:14","commitOrder":4,"curCode":"    public void testDuelingStrictParsing() {\n        assertSameDate(\"2018W313\", \"strict_basic_week_date\");\n        assertParseException(\"18W313\", \"strict_basic_week_date\");\n        assertSameDate(\"2018W313T121212.123Z\", \"strict_basic_week_date_time\");\n        assertParseException(\"2018W313T12128.123Z\", \"strict_basic_week_date_time\");\n        assertParseException(\"2018W313T81212.123Z\", \"strict_basic_week_date_time\");\n        assertParseException(\"2018W313T12812.123Z\", \"strict_basic_week_date_time\");\n        assertParseException(\"2018W313T12812.1Z\", \"strict_basic_week_date_time\");\n        assertSameDate(\"2018W313T121212Z\", \"strict_basic_week_date_time_no_millis\");\n        assertParseException(\"2018W313T12128Z\", \"strict_basic_week_date_time_no_millis\");\n        assertParseException(\"2018W313T81212Z\", \"strict_basic_week_date_time_no_millis\");\n        assertParseException(\"2018W313T12812Z\", \"strict_basic_week_date_time_no_millis\");\n        assertSameDate(\"2018-12-31\", \"strict_date\");\n        assertParseException(\"10000-12-31\", \"strict_date\");\n        assertParseException(\"2018-8-31\", \"strict_date\");\n        assertSameDate(\"2018-12-31T12\", \"strict_date_hour\");\n        assertParseException(\"2018-12-31T8\", \"strict_date_hour\");\n        assertSameDate(\"2018-12-31T12:12\", \"strict_date_hour_minute\");\n        assertParseException(\"2018-12-31T8:3\", \"strict_date_hour_minute\");\n        assertSameDate(\"2018-12-31T12:12:12\", \"strict_date_hour_minute_second\");\n        assertParseException(\"2018-12-31T12:12:1\", \"strict_date_hour_minute_second\");\n        assertSameDate(\"2018-12-31T12:12:12.123\", \"strict_date_hour_minute_second_fraction\");\n        assertSameDate(\"2018-12-31T12:12:12.123\", \"strict_date_hour_minute_second_millis\");\n        assertSameDate(\"2018-12-31T12:12:12.1\", \"strict_date_hour_minute_second_millis\");\n        assertSameDate(\"2018-12-31T12:12:12.1\", \"strict_date_hour_minute_second_fraction\");\n        assertParseException(\"2018-12-31T12:12:12\", \"strict_date_hour_minute_second_millis\");\n        assertParseException(\"2018-12-31T12:12:12\", \"strict_date_hour_minute_second_fraction\");\n        assertSameDate(\"2018-12-31\", \"strict_date_optional_time\");\n        assertParseException(\"2018-12-1\", \"strict_date_optional_time\");\n        assertParseException(\"2018-1-31\", \"strict_date_optional_time\");\n        assertParseException(\"10000-01-31\", \"strict_date_optional_time\");\n        assertSameDate(\"2018-12-31T10:15:30\", \"strict_date_optional_time\");\n        assertParseException(\"2018-12-31T10:15:3\", \"strict_date_optional_time\");\n        assertParseException(\"2018-12-31T10:5:30\", \"strict_date_optional_time\");\n        assertParseException(\"2018-12-31T9:15:30\", \"strict_date_optional_time\");\n        assertSameDate(\"2018-12-31T10:15:30.123Z\", \"strict_date_time\");\n        assertSameDate(\"2018-12-31T10:15:30.11Z\", \"strict_date_time\");\n        assertParseException(\"2018-12-31T10:15:3.123Z\", \"strict_date_time\");\n        assertParseException(\"2018-12-31T10:5:30.123Z\", \"strict_date_time\");\n        assertParseException(\"2018-12-31T1:15:30.123Z\", \"strict_date_time\");\n        assertSameDate(\"2018-12-31T10:15:30Z\", \"strict_date_time_no_millis\");\n        assertParseException(\"2018-12-31T10:5:30Z\", \"strict_date_time_no_millis\");\n        assertParseException(\"2018-12-31T10:15:3Z\", \"strict_date_time_no_millis\");\n        assertParseException(\"2018-12-31T1:15:30Z\", \"strict_date_time_no_millis\");\n        assertSameDate(\"12\", \"strict_hour\");\n        assertSameDate(\"01\", \"strict_hour\");\n        assertParseException(\"1\", \"strict_hour\");\n        assertSameDate(\"12:12\", \"strict_hour_minute\");\n        assertSameDate(\"12:01\", \"strict_hour_minute\");\n        assertParseException(\"12:1\", \"strict_hour_minute\");\n        assertSameDate(\"12:12:12\", \"strict_hour_minute_second\");\n        assertSameDate(\"12:12:01\", \"strict_hour_minute_second\");\n        assertParseException(\"12:12:1\", \"strict_hour_minute_second\");\n        assertSameDate(\"12:12:12.123\", \"strict_hour_minute_second_fraction\");\n        assertSameDate(\"12:12:12.1\", \"strict_hour_minute_second_fraction\");\n        assertParseException(\"12:12:12\", \"strict_hour_minute_second_fraction\");\n        assertSameDate(\"12:12:12.123\", \"strict_hour_minute_second_millis\");\n        assertSameDate(\"12:12:12.1\", \"strict_hour_minute_second_millis\");\n        assertParseException(\"12:12:12\", \"strict_hour_minute_second_millis\");\n        assertSameDate(\"2018-128\", \"strict_ordinal_date\");\n        assertParseException(\"2018-1\", \"strict_ordinal_date\");\n\n        assertSameDate(\"2018-128T10:15:30.123Z\", \"strict_ordinal_date_time\");\n        assertParseException(\"2018-1T10:15:30.123Z\", \"strict_ordinal_date_time\");\n\n        assertSameDate(\"2018-128T10:15:30Z\", \"strict_ordinal_date_time_no_millis\");\n        assertParseException(\"2018-1T10:15:30Z\", \"strict_ordinal_date_time_no_millis\");\n\n        assertSameDate(\"10:15:30.123Z\", \"strict_time\");\n        assertParseException(\"1:15:30.123Z\", \"strict_time\");\n        assertParseException(\"10:1:30.123Z\", \"strict_time\");\n        assertParseException(\"10:15:3.123Z\", \"strict_time\");\n        assertParseException(\"10:15:3.1\", \"strict_time\");\n        assertParseException(\"10:15:3Z\", \"strict_time\");\n\n        assertSameDate(\"10:15:30Z\", \"strict_time_no_millis\");\n        assertSameDate(\"01:15:30Z\", \"strict_time_no_millis\");\n        assertParseException(\"1:15:30Z\", \"strict_time_no_millis\");\n        assertParseException(\"10:5:30Z\", \"strict_time_no_millis\");\n        assertParseException(\"10:15:3Z\", \"strict_time_no_millis\");\n        assertParseException(\"10:15:3\", \"strict_time_no_millis\");\n\n        assertSameDate(\"T10:15:30.123Z\", \"strict_t_time\");\n        assertParseException(\"T1:15:30.123Z\", \"strict_t_time\");\n        assertParseException(\"T10:1:30.123Z\", \"strict_t_time\");\n        assertParseException(\"T10:15:3.123Z\", \"strict_t_time\");\n        assertParseException(\"T10:15:3.1\", \"strict_t_time\");\n        assertParseException(\"T10:15:3Z\", \"strict_t_time\");\n\n        assertSameDate(\"T10:15:30Z\", \"strict_t_time_no_millis\");\n        assertParseException(\"T1:15:30Z\", \"strict_t_time_no_millis\");\n        assertParseException(\"T10:1:30Z\", \"strict_t_time_no_millis\");\n        assertParseException(\"T10:15:3Z\", \"strict_t_time_no_millis\");\n        assertParseException(\"T10:15:3\", \"strict_t_time_no_millis\");\n\n        assertSameDate(\"2012-W48-6\", \"strict_week_date\");\n        assertSameDate(\"2012-W01-6\", \"strict_week_date\");\n        assertParseException(\"2012-W1-6\", \"strict_week_date\");\n        assertParseException(\"2012-W1-8\", \"strict_week_date\");\n\n        assertSameDate(\"2012-W48-6\", \"strict_week_date\");\n        assertSameDate(\"2012-W01-6\", \"strict_week_date\");\n        assertParseException(\"2012-W1-6\", \"strict_week_date\");\n        \r\n        assertJodaParseException(\"2012-W01-8\", \"strict_week_date\",\n            \"Cannot parse \\\"2012-W01-8\\\": Value 8 for dayOfWeek must be in the range [1,7]\");\n        assertJavaTimeParseException(\"2012-W01-8\", \"strict_week_date\", \"Text '2012-W01-8' could not be parsed\");\n\n        assertSameDate(\"2012-W48-6T10:15:30.123Z\", \"strict_week_date_time\");\n        assertParseException(\"2012-W1-6T10:15:30.123Z\", \"strict_week_date_time\");\n\n        assertSameDate(\"2012-W48-6T10:15:30Z\", \"strict_week_date_time_no_millis\");\n        assertParseException(\"2012-W1-6T10:15:30Z\", \"strict_week_date_time_no_millis\");\n\n        assertSameDate(\"2012\", \"strict_year\");\n        assertParseException(\"1\", \"strict_year\");\n        assertSameDate(\"-2000\", \"strict_year\");\n\n        assertSameDate(\"2012-12\", \"strict_year_month\");\n        assertParseException(\"1-1\", \"strict_year_month\");\n\n        assertSameDate(\"2012-12-31\", \"strict_year_month_day\");\n        assertParseException(\"1-12-31\", \"strict_year_month_day\");\n        assertParseException(\"2012-1-31\", \"strict_year_month_day\");\n        assertParseException(\"2012-12-1\", \"strict_year_month_day\");\n\n        assertSameDate(\"2018\", \"strict_weekyear\");\n        assertParseException(\"1\", \"strict_weekyear\");\n\n        assertSameDate(\"2018\", \"strict_weekyear\");\n        assertSameDate(\"2017\", \"strict_weekyear\");\n        assertParseException(\"1\", \"strict_weekyear\");\n\n        assertSameDate(\"2018-W29\", \"strict_weekyear_week\");\n        assertSameDate(\"2018-W01\", \"strict_weekyear_week\");\n        assertParseException(\"2018-W1\", \"strict_weekyear_week\");\n\n        assertSameDate(\"2012-W31-5\", \"strict_weekyear_week_day\");\n        assertParseException(\"2012-W1-1\", \"strict_weekyear_week_day\");\n    }\n","date":"2018-08-11 01:23:14","endLine":369,"groupId":"17876","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"testDuelingStrictParsing","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/15/51a315b26d93122145fe520885ac8289a2f003.src","preCode":"    public void testDuelingStrictParsing() {\n        assertSameDate(\"2018W313\", \"strict_basic_week_date\");\n        assertParseException(\"18W313\", \"strict_basic_week_date\");\n        assertSameDate(\"2018W313T121212.123Z\", \"strict_basic_week_date_time\");\n        assertParseException(\"2018W313T12128.123Z\", \"strict_basic_week_date_time\");\n        assertParseException(\"2018W313T81212.123Z\", \"strict_basic_week_date_time\");\n        assertParseException(\"2018W313T12812.123Z\", \"strict_basic_week_date_time\");\n        assertParseException(\"2018W313T12812.1Z\", \"strict_basic_week_date_time\");\n        assertSameDate(\"2018W313T121212Z\", \"strict_basic_week_date_time_no_millis\");\n        assertParseException(\"2018W313T12128Z\", \"strict_basic_week_date_time_no_millis\");\n        assertParseException(\"2018W313T81212Z\", \"strict_basic_week_date_time_no_millis\");\n        assertParseException(\"2018W313T12812Z\", \"strict_basic_week_date_time_no_millis\");\n        assertSameDate(\"2018-12-31\", \"strict_date\");\n        assertParseException(\"10000-12-31\", \"strict_date\");\n        assertParseException(\"2018-8-31\", \"strict_date\");\n        assertSameDate(\"2018-12-31T12\", \"strict_date_hour\");\n        assertParseException(\"2018-12-31T8\", \"strict_date_hour\");\n        assertSameDate(\"2018-12-31T12:12\", \"strict_date_hour_minute\");\n        assertParseException(\"2018-12-31T8:3\", \"strict_date_hour_minute\");\n        assertSameDate(\"2018-12-31T12:12:12\", \"strict_date_hour_minute_second\");\n        assertParseException(\"2018-12-31T12:12:1\", \"strict_date_hour_minute_second\");\n        assertSameDate(\"2018-12-31T12:12:12.123\", \"strict_date_hour_minute_second_fraction\");\n        assertSameDate(\"2018-12-31T12:12:12.123\", \"strict_date_hour_minute_second_millis\");\n        assertSameDate(\"2018-12-31T12:12:12.1\", \"strict_date_hour_minute_second_millis\");\n        assertSameDate(\"2018-12-31T12:12:12.1\", \"strict_date_hour_minute_second_fraction\");\n        assertParseException(\"2018-12-31T12:12:12\", \"strict_date_hour_minute_second_millis\");\n        assertParseException(\"2018-12-31T12:12:12\", \"strict_date_hour_minute_second_fraction\");\n        assertSameDate(\"2018-12-31\", \"strict_date_optional_time\");\n        assertParseException(\"2018-12-1\", \"strict_date_optional_time\");\n        assertParseException(\"2018-1-31\", \"strict_date_optional_time\");\n        assertParseException(\"10000-01-31\", \"strict_date_optional_time\");\n        assertSameDate(\"2018-12-31T10:15:30\", \"strict_date_optional_time\");\n        assertParseException(\"2018-12-31T10:15:3\", \"strict_date_optional_time\");\n        assertParseException(\"2018-12-31T10:5:30\", \"strict_date_optional_time\");\n        assertParseException(\"2018-12-31T9:15:30\", \"strict_date_optional_time\");\n        assertSameDate(\"2018-12-31T10:15:30.123Z\", \"strict_date_time\");\n        assertSameDate(\"2018-12-31T10:15:30.11Z\", \"strict_date_time\");\n        assertParseException(\"2018-12-31T10:15:3.123Z\", \"strict_date_time\");\n        assertParseException(\"2018-12-31T10:5:30.123Z\", \"strict_date_time\");\n        assertParseException(\"2018-12-31T1:15:30.123Z\", \"strict_date_time\");\n        assertSameDate(\"2018-12-31T10:15:30Z\", \"strict_date_time_no_millis\");\n        assertParseException(\"2018-12-31T10:5:30Z\", \"strict_date_time_no_millis\");\n        assertParseException(\"2018-12-31T10:15:3Z\", \"strict_date_time_no_millis\");\n        assertParseException(\"2018-12-31T1:15:30Z\", \"strict_date_time_no_millis\");\n        assertSameDate(\"12\", \"strict_hour\");\n        assertSameDate(\"01\", \"strict_hour\");\n        assertParseException(\"1\", \"strict_hour\");\n        assertSameDate(\"12:12\", \"strict_hour_minute\");\n        assertSameDate(\"12:01\", \"strict_hour_minute\");\n        assertParseException(\"12:1\", \"strict_hour_minute\");\n        assertSameDate(\"12:12:12\", \"strict_hour_minute_second\");\n        assertSameDate(\"12:12:01\", \"strict_hour_minute_second\");\n        assertParseException(\"12:12:1\", \"strict_hour_minute_second\");\n        assertSameDate(\"12:12:12.123\", \"strict_hour_minute_second_fraction\");\n        assertSameDate(\"12:12:12.1\", \"strict_hour_minute_second_fraction\");\n        assertParseException(\"12:12:12\", \"strict_hour_minute_second_fraction\");\n        assertSameDate(\"12:12:12.123\", \"strict_hour_minute_second_millis\");\n        assertSameDate(\"12:12:12.1\", \"strict_hour_minute_second_millis\");\n        assertParseException(\"12:12:12\", \"strict_hour_minute_second_millis\");\n        assertSameDate(\"2018-128\", \"strict_ordinal_date\");\n        assertParseException(\"2018-1\", \"strict_ordinal_date\");\n\n        assertSameDate(\"2018-128T10:15:30.123Z\", \"strict_ordinal_date_time\");\n        assertParseException(\"2018-1T10:15:30.123Z\", \"strict_ordinal_date_time\");\n\n        assertSameDate(\"2018-128T10:15:30Z\", \"strict_ordinal_date_time_no_millis\");\n        assertParseException(\"2018-1T10:15:30Z\", \"strict_ordinal_date_time_no_millis\");\n\n        assertSameDate(\"10:15:30.123Z\", \"strict_time\");\n        assertParseException(\"1:15:30.123Z\", \"strict_time\");\n        assertParseException(\"10:1:30.123Z\", \"strict_time\");\n        assertParseException(\"10:15:3.123Z\", \"strict_time\");\n        assertParseException(\"10:15:3.1\", \"strict_time\");\n        assertParseException(\"10:15:3Z\", \"strict_time\");\n\n        assertSameDate(\"10:15:30Z\", \"strict_time_no_millis\");\n        assertSameDate(\"01:15:30Z\", \"strict_time_no_millis\");\n        assertParseException(\"1:15:30Z\", \"strict_time_no_millis\");\n        assertParseException(\"10:5:30Z\", \"strict_time_no_millis\");\n        assertParseException(\"10:15:3Z\", \"strict_time_no_millis\");\n        assertParseException(\"10:15:3\", \"strict_time_no_millis\");\n\n        assertSameDate(\"T10:15:30.123Z\", \"strict_t_time\");\n        assertParseException(\"T1:15:30.123Z\", \"strict_t_time\");\n        assertParseException(\"T10:1:30.123Z\", \"strict_t_time\");\n        assertParseException(\"T10:15:3.123Z\", \"strict_t_time\");\n        assertParseException(\"T10:15:3.1\", \"strict_t_time\");\n        assertParseException(\"T10:15:3Z\", \"strict_t_time\");\n\n        assertSameDate(\"T10:15:30Z\", \"strict_t_time_no_millis\");\n        assertParseException(\"T1:15:30Z\", \"strict_t_time_no_millis\");\n        assertParseException(\"T10:1:30Z\", \"strict_t_time_no_millis\");\n        assertParseException(\"T10:15:3Z\", \"strict_t_time_no_millis\");\n        assertParseException(\"T10:15:3\", \"strict_t_time_no_millis\");\n\n        assertSameDate(\"2012-W48-6\", \"strict_week_date\");\n        assertSameDate(\"2012-W01-6\", \"strict_week_date\");\n        assertParseException(\"2012-W1-6\", \"strict_week_date\");\n        assertParseException(\"2012-W1-8\", \"strict_week_date\");\n\n        assertSameDate(\"2012-W48-6\", \"strict_week_date\");\n        assertSameDate(\"2012-W01-6\", \"strict_week_date\");\n        assertParseException(\"2012-W1-6\", \"strict_week_date\");\n        \r\n        assertJodaParseException(\"2012-W01-8\", \"strict_week_date\",\n            \"Cannot parse \\\"2012-W01-8\\\": Value 8 for dayOfWeek must be in the range [1,7]\");\n        assertJavaTimeParseException(\"2012-W01-8\", \"strict_week_date\", \"Text '2012-W01-8' could not be parsed\");\n\n        assertSameDate(\"2012-W48-6T10:15:30.123Z\", \"strict_week_date_time\");\n        assertParseException(\"2012-W1-6T10:15:30.123Z\", \"strict_week_date_time\");\n\n        assertSameDate(\"2012-W48-6T10:15:30Z\", \"strict_week_date_time_no_millis\");\n        assertParseException(\"2012-W1-6T10:15:30Z\", \"strict_week_date_time_no_millis\");\n\n        assertSameDate(\"2012\", \"strict_year\");\n        assertParseException(\"1\", \"strict_year\");\n        assertSameDate(\"-2000\", \"strict_year\");\n\n        assertSameDate(\"2012-12\", \"strict_year_month\");\n        assertParseException(\"1-1\", \"strict_year_month\");\n\n        assertSameDate(\"2012-12-31\", \"strict_year_month_day\");\n        assertParseException(\"1-12-31\", \"strict_year_month_day\");\n        assertParseException(\"2012-1-31\", \"strict_year_month_day\");\n        assertParseException(\"2012-12-1\", \"strict_year_month_day\");\n\n        assertSameDate(\"2018\", \"strict_weekyear\");\n        assertParseException(\"1\", \"strict_weekyear\");\n\n        assertSameDate(\"2018\", \"strict_weekyear\");\n        assertSameDate(\"2017\", \"strict_weekyear\");\n        assertParseException(\"1\", \"strict_weekyear\");\n\n        assertSameDate(\"2018-W29\", \"strict_weekyear_week\");\n        assertSameDate(\"2018-W01\", \"strict_weekyear_week\");\n        assertParseException(\"2018-W1\", \"strict_weekyear_week\");\n\n        assertSameDate(\"2012-W31-5\", \"strict_weekyear_week_day\");\n        assertParseException(\"2012-W1-1\", \"strict_weekyear_week_day\");\n    }\n","realPath":"server/src/test/java/org/elasticsearch/common/joda/JavaJodaTimeDuellingTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":230,"status":"N"}],"commitId":"6ea396a476ada0c6d5ff0f27a3e5526b42ff1502","commitMessage":"@@@Merge remote-tracking branch 'origin/master' into index-lifecycle\n","date":"2018-09-29 05:40:12","modifiedFileCount":"333","status":"M","submitter":"Lee Hinman"},{"authorTime":"2018-08-11 01:23:14","codes":[{"authorDate":"2018-10-19 20:24:04","commitOrder":5,"curCode":"    public void testDuellingFormatsValidParsing() {\n        assertSameDate(\"1522332219\", \"epoch_second\");\n        assertSameDate(\"1522332219.\", \"epoch_second\");\n        assertSameDate(\"1522332219.0\", \"epoch_second\");\n        assertSameDate(\"0\", \"epoch_second\");\n        assertSameDate(\"1\", \"epoch_second\");\n        assertSameDate(\"-1\", \"epoch_second\");\n        assertSameDate(\"-1522332219\", \"epoch_second\");\n        assertSameDate(\"1.0e3\", \"epoch_second\");\n        assertSameDate(\"1522332219321\", \"epoch_millis\");\n        assertSameDate(\"0\", \"epoch_millis\");\n        assertSameDate(\"1\", \"epoch_millis\");\n        assertSameDate(\"-1\", \"epoch_millis\");\n        assertSameDate(\"-1522332219321\", \"epoch_millis\");\n        assertSameDate(\"1.0e3\", \"epoch_millis\");\n\n        assertSameDate(\"20181126\", \"basic_date\");\n        assertSameDate(\"20181126T121212.123Z\", \"basic_date_time\");\n        assertSameDate(\"20181126T121212.123+10:00\", \"basic_date_time\");\n        assertSameDate(\"20181126T121212.123-0800\", \"basic_date_time\");\n\n        assertSameDate(\"20181126T121212Z\", \"basic_date_time_no_millis\");\n        assertSameDate(\"2018363\", \"basic_ordinal_date\");\n        assertSameDate(\"2018363T121212.123Z\", \"basic_ordinal_date_time\");\n        assertSameDate(\"2018363T121212Z\", \"basic_ordinal_date_time_no_millis\");\n        assertSameDate(\"121212.123Z\", \"basic_time\");\n        assertSameDate(\"121212Z\", \"basic_time_no_millis\");\n        assertSameDate(\"T121212.123Z\", \"basic_t_time\");\n        assertSameDate(\"T121212Z\", \"basic_t_time_no_millis\");\n        assertSameDate(\"2018W313\", \"basic_week_date\");\n        assertSameDate(\"1W313\", \"basic_week_date\");\n        assertSameDate(\"18W313\", \"basic_week_date\");\n        assertSameDate(\"2018W313T121212.123Z\", \"basic_week_date_time\");\n        assertSameDate(\"2018W313T121212Z\", \"basic_week_date_time_no_millis\");\n\n        assertSameDate(\"2018-12-31\", \"date\");\n        assertSameDate(\"18-5-6\", \"date\");\n        assertSameDate(\"10000-5-6\", \"date\");\n\n        assertSameDate(\"2018-12-31T12\", \"date_hour\");\n        assertSameDate(\"2018-12-31T8\", \"date_hour\");\n\n        assertSameDate(\"2018-12-31T12:12\", \"date_hour_minute\");\n        assertSameDate(\"2018-12-31T8:3\", \"date_hour_minute\");\n\n        assertSameDate(\"2018-12-31T12:12:12\", \"date_hour_minute_second\");\n        assertSameDate(\"2018-12-31T12:12:1\", \"date_hour_minute_second\");\n\n        assertSameDate(\"2018-12-31T12:12:12.123\", \"date_hour_minute_second_fraction\");\n        assertSameDate(\"2018-12-31T12:12:12.123\", \"date_hour_minute_second_millis\");\n        assertSameDate(\"2018-12-31T12:12:12.1\", \"date_hour_minute_second_millis\");\n        assertSameDate(\"2018-12-31T12:12:12.1\", \"date_hour_minute_second_fraction\");\n\n        assertSameDate(\"10000\", \"date_optional_time\");\n        assertSameDate(\"10000T\", \"date_optional_time\");\n        assertSameDate(\"2018\", \"date_optional_time\");\n        assertSameDate(\"2018T\", \"date_optional_time\");\n        assertSameDate(\"2018-05\", \"date_optional_time\");\n        assertSameDate(\"2018-05-30\", \"date_optional_time\");\n        assertSameDate(\"2018-05-30T20\", \"date_optional_time\");\n        assertSameDate(\"2018-05-30T20:21\", \"date_optional_time\");\n        assertSameDate(\"2018-05-30T20:21:23\", \"date_optional_time\");\n        assertSameDate(\"2018-05-30T20:21:23.123\", \"date_optional_time\");\n        assertSameDate(\"2018-12-1\", \"date_optional_time\");\n        assertSameDate(\"2018-12-31T10:15:30\", \"date_optional_time\");\n        assertSameDate(\"2018-12-31T10:15:3\", \"date_optional_time\");\n        assertSameDate(\"2018-12-31T10:5:30\", \"date_optional_time\");\n        assertSameDate(\"2018-12-31T1:15:30\", \"date_optional_time\");\n\n        assertSameDate(\"2018-12-31T10:15:30.123Z\", \"date_time\");\n        assertSameDate(\"2018-12-31T10:15:30.11Z\", \"date_time\");\n        assertSameDate(\"2018-12-31T10:15:3.123Z\", \"date_time\");\n\n        assertSameDate(\"2018-12-31T10:15:30Z\", \"date_time_no_millis\");\n        assertSameDate(\"2018-12-31T10:5:30Z\", \"date_time_no_millis\");\n        assertSameDate(\"2018-12-31T10:15:3Z\", \"date_time_no_millis\");\n        assertSameDate(\"2018-12-31T1:15:30Z\", \"date_time_no_millis\");\n\n        assertSameDate(\"12\", \"hour\");\n        assertSameDate(\"01\", \"hour\");\n        assertSameDate(\"1\", \"hour\");\n\n        assertSameDate(\"12:12\", \"hour_minute\");\n        assertSameDate(\"12:01\", \"hour_minute\");\n        assertSameDate(\"12:1\", \"hour_minute\");\n\n        assertSameDate(\"12:12:12\", \"hour_minute_second\");\n        assertSameDate(\"12:12:01\", \"hour_minute_second\");\n        assertSameDate(\"12:12:1\", \"hour_minute_second\");\n\n        assertSameDate(\"12:12:12.123\", \"hour_minute_second_fraction\");\n        assertSameDate(\"12:12:12.1\", \"hour_minute_second_fraction\");\n        assertParseException(\"12:12:12\", \"hour_minute_second_fraction\");\n        assertSameDate(\"12:12:12.123\", \"hour_minute_second_millis\");\n        assertSameDate(\"12:12:12.1\", \"hour_minute_second_millis\");\n        assertParseException(\"12:12:12\", \"hour_minute_second_millis\");\n\n        assertSameDate(\"2018-128\", \"ordinal_date\");\n        assertSameDate(\"2018-1\", \"ordinal_date\");\n\n        assertSameDate(\"2018-128T10:15:30.123Z\", \"ordinal_date_time\");\n        assertSameDate(\"2018-1T10:15:30.123Z\", \"ordinal_date_time\");\n\n        assertSameDate(\"2018-128T10:15:30Z\", \"ordinal_date_time_no_millis\");\n        assertSameDate(\"2018-1T10:15:30Z\", \"ordinal_date_time_no_millis\");\n\n        assertSameDate(\"10:15:30.123Z\", \"time\");\n        assertSameDate(\"1:15:30.123Z\", \"time\");\n        assertSameDate(\"10:1:30.123Z\", \"time\");\n        assertSameDate(\"10:15:3.123Z\", \"time\");\n        assertParseException(\"10:15:3.1\", \"time\");\n        assertParseException(\"10:15:3Z\", \"time\");\n\n        assertSameDate(\"10:15:30Z\", \"time_no_millis\");\n        assertSameDate(\"01:15:30Z\", \"time_no_millis\");\n        assertSameDate(\"1:15:30Z\", \"time_no_millis\");\n        assertSameDate(\"10:5:30Z\", \"time_no_millis\");\n        assertSameDate(\"10:15:3Z\", \"time_no_millis\");\n        assertParseException(\"10:15:3\", \"time_no_millis\");\n\n        assertSameDate(\"T10:15:30.123Z\", \"t_time\");\n        assertSameDate(\"T1:15:30.123Z\", \"t_time\");\n        assertSameDate(\"T10:1:30.123Z\", \"t_time\");\n        assertSameDate(\"T10:15:3.123Z\", \"t_time\");\n        assertParseException(\"T10:15:3.1\", \"t_time\");\n        assertParseException(\"T10:15:3Z\", \"t_time\");\n\n        assertSameDate(\"T10:15:30Z\", \"t_time_no_millis\");\n        assertSameDate(\"T1:15:30Z\", \"t_time_no_millis\");\n        assertSameDate(\"T10:1:30Z\", \"t_time_no_millis\");\n        assertSameDate(\"T10:15:3Z\", \"t_time_no_millis\");\n        assertParseException(\"T10:15:3\", \"t_time_no_millis\");\n\n        assertSameDate(\"2012-W48-6\", \"week_date\");\n        assertSameDate(\"2012-W01-6\", \"week_date\");\n        assertSameDate(\"2012-W1-6\", \"week_date\");\n        \r\n        assertJodaParseException(\"2012-W1-8\", \"week_date\",\n            \"Cannot parse \\\"2012-W1-8\\\": Value 8 for dayOfWeek must be in the range [1,7]\");\n        assertJavaTimeParseException(\"2012-W1-8\", \"week_date\", \"Text '2012-W1-8' could not be parsed\");\n\n        assertSameDate(\"2012-W48-6T10:15:30.123Z\", \"week_date_time\");\n        assertSameDate(\"2012-W1-6T10:15:30.123Z\", \"week_date_time\");\n\n        assertSameDate(\"2012-W48-6T10:15:30Z\", \"week_date_time_no_millis\");\n        assertSameDate(\"2012-W1-6T10:15:30Z\", \"week_date_time_no_millis\");\n\n        assertSameDate(\"2012\", \"year\");\n        assertSameDate(\"1\", \"year\");\n        assertSameDate(\"-2000\", \"year\");\n\n        assertSameDate(\"2012-12\", \"yearMonth\");\n        assertSameDate(\"1-1\", \"yearMonth\");\n\n        assertSameDate(\"2012-12-31\", \"yearMonthDay\");\n        assertSameDate(\"1-12-31\", \"yearMonthDay\");\n        assertSameDate(\"2012-1-31\", \"yearMonthDay\");\n        assertSameDate(\"2012-12-1\", \"yearMonthDay\");\n\n        assertSameDate(\"2018\", \"week_year\");\n        assertSameDate(\"1\", \"week_year\");\n        assertSameDate(\"2017\", \"week_year\");\n\n        assertSameDate(\"2018-W29\", \"weekyear_week\");\n        assertSameDate(\"2018-W1\", \"weekyear_week\");\n\n        assertSameDate(\"2012-W31-5\", \"weekyear_week_day\");\n        assertSameDate(\"2012-W1-1\", \"weekyear_week_day\");\n    }\n","date":"2018-10-19 20:24:04","endLine":240,"groupId":"28896","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"testDuellingFormatsValidParsing","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/c4/efa78378d5e016c3321cfee9f26dacae4d4550.src","preCode":"    public void testDuellingFormatsValidParsing() {\n        assertSameDate(\"1522332219\", \"epoch_second\");\n        assertSameDate(\"1522332219.\", \"epoch_second\");\n        assertSameDate(\"1522332219.0\", \"epoch_second\");\n        assertSameDate(\"0\", \"epoch_second\");\n        assertSameDate(\"1\", \"epoch_second\");\n        assertSameDate(\"-1\", \"epoch_second\");\n        assertSameDate(\"-1522332219\", \"epoch_second\");\n        assertSameDate(\"1522332219321\", \"epoch_millis\");\n        assertSameDate(\"0\", \"epoch_millis\");\n        assertSameDate(\"1\", \"epoch_millis\");\n        assertSameDate(\"-1\", \"epoch_millis\");\n        assertSameDate(\"-1522332219321\", \"epoch_millis\");\n\n        assertSameDate(\"20181126\", \"basic_date\");\n        assertSameDate(\"20181126T121212.123Z\", \"basic_date_time\");\n        assertSameDate(\"20181126T121212.123+10:00\", \"basic_date_time\");\n        assertSameDate(\"20181126T121212.123-0800\", \"basic_date_time\");\n\n        assertSameDate(\"20181126T121212Z\", \"basic_date_time_no_millis\");\n        assertSameDate(\"2018363\", \"basic_ordinal_date\");\n        assertSameDate(\"2018363T121212.123Z\", \"basic_ordinal_date_time\");\n        assertSameDate(\"2018363T121212Z\", \"basic_ordinal_date_time_no_millis\");\n        assertSameDate(\"121212.123Z\", \"basic_time\");\n        assertSameDate(\"121212Z\", \"basic_time_no_millis\");\n        assertSameDate(\"T121212.123Z\", \"basic_t_time\");\n        assertSameDate(\"T121212Z\", \"basic_t_time_no_millis\");\n        assertSameDate(\"2018W313\", \"basic_week_date\");\n        assertSameDate(\"1W313\", \"basic_week_date\");\n        assertSameDate(\"18W313\", \"basic_week_date\");\n        assertSameDate(\"2018W313T121212.123Z\", \"basic_week_date_time\");\n        assertSameDate(\"2018W313T121212Z\", \"basic_week_date_time_no_millis\");\n\n        assertSameDate(\"2018-12-31\", \"date\");\n        assertSameDate(\"18-5-6\", \"date\");\n        assertSameDate(\"10000-5-6\", \"date\");\n\n        assertSameDate(\"2018-12-31T12\", \"date_hour\");\n        assertSameDate(\"2018-12-31T8\", \"date_hour\");\n\n        assertSameDate(\"2018-12-31T12:12\", \"date_hour_minute\");\n        assertSameDate(\"2018-12-31T8:3\", \"date_hour_minute\");\n\n        assertSameDate(\"2018-12-31T12:12:12\", \"date_hour_minute_second\");\n        assertSameDate(\"2018-12-31T12:12:1\", \"date_hour_minute_second\");\n\n        assertSameDate(\"2018-12-31T12:12:12.123\", \"date_hour_minute_second_fraction\");\n        assertSameDate(\"2018-12-31T12:12:12.123\", \"date_hour_minute_second_millis\");\n        assertSameDate(\"2018-12-31T12:12:12.1\", \"date_hour_minute_second_millis\");\n        assertSameDate(\"2018-12-31T12:12:12.1\", \"date_hour_minute_second_fraction\");\n\n        assertSameDate(\"10000\", \"date_optional_time\");\n        assertSameDate(\"10000T\", \"date_optional_time\");\n        assertSameDate(\"2018\", \"date_optional_time\");\n        assertSameDate(\"2018T\", \"date_optional_time\");\n        assertSameDate(\"2018-05\", \"date_optional_time\");\n        assertSameDate(\"2018-05-30\", \"date_optional_time\");\n        assertSameDate(\"2018-05-30T20\", \"date_optional_time\");\n        assertSameDate(\"2018-05-30T20:21\", \"date_optional_time\");\n        assertSameDate(\"2018-05-30T20:21:23\", \"date_optional_time\");\n        assertSameDate(\"2018-05-30T20:21:23.123\", \"date_optional_time\");\n        assertSameDate(\"2018-12-1\", \"date_optional_time\");\n        assertSameDate(\"2018-12-31T10:15:30\", \"date_optional_time\");\n        assertSameDate(\"2018-12-31T10:15:3\", \"date_optional_time\");\n        assertSameDate(\"2018-12-31T10:5:30\", \"date_optional_time\");\n        assertSameDate(\"2018-12-31T1:15:30\", \"date_optional_time\");\n\n        assertSameDate(\"2018-12-31T10:15:30.123Z\", \"date_time\");\n        assertSameDate(\"2018-12-31T10:15:30.11Z\", \"date_time\");\n        assertSameDate(\"2018-12-31T10:15:3.123Z\", \"date_time\");\n\n        assertSameDate(\"2018-12-31T10:15:30Z\", \"date_time_no_millis\");\n        assertSameDate(\"2018-12-31T10:5:30Z\", \"date_time_no_millis\");\n        assertSameDate(\"2018-12-31T10:15:3Z\", \"date_time_no_millis\");\n        assertSameDate(\"2018-12-31T1:15:30Z\", \"date_time_no_millis\");\n\n        assertSameDate(\"12\", \"hour\");\n        assertSameDate(\"01\", \"hour\");\n        assertSameDate(\"1\", \"hour\");\n\n        assertSameDate(\"12:12\", \"hour_minute\");\n        assertSameDate(\"12:01\", \"hour_minute\");\n        assertSameDate(\"12:1\", \"hour_minute\");\n\n        assertSameDate(\"12:12:12\", \"hour_minute_second\");\n        assertSameDate(\"12:12:01\", \"hour_minute_second\");\n        assertSameDate(\"12:12:1\", \"hour_minute_second\");\n\n        assertSameDate(\"12:12:12.123\", \"hour_minute_second_fraction\");\n        assertSameDate(\"12:12:12.1\", \"hour_minute_second_fraction\");\n        assertParseException(\"12:12:12\", \"hour_minute_second_fraction\");\n        assertSameDate(\"12:12:12.123\", \"hour_minute_second_millis\");\n        assertSameDate(\"12:12:12.1\", \"hour_minute_second_millis\");\n        assertParseException(\"12:12:12\", \"hour_minute_second_millis\");\n\n        assertSameDate(\"2018-128\", \"ordinal_date\");\n        assertSameDate(\"2018-1\", \"ordinal_date\");\n\n        assertSameDate(\"2018-128T10:15:30.123Z\", \"ordinal_date_time\");\n        assertSameDate(\"2018-1T10:15:30.123Z\", \"ordinal_date_time\");\n\n        assertSameDate(\"2018-128T10:15:30Z\", \"ordinal_date_time_no_millis\");\n        assertSameDate(\"2018-1T10:15:30Z\", \"ordinal_date_time_no_millis\");\n\n        assertSameDate(\"10:15:30.123Z\", \"time\");\n        assertSameDate(\"1:15:30.123Z\", \"time\");\n        assertSameDate(\"10:1:30.123Z\", \"time\");\n        assertSameDate(\"10:15:3.123Z\", \"time\");\n        assertParseException(\"10:15:3.1\", \"time\");\n        assertParseException(\"10:15:3Z\", \"time\");\n\n        assertSameDate(\"10:15:30Z\", \"time_no_millis\");\n        assertSameDate(\"01:15:30Z\", \"time_no_millis\");\n        assertSameDate(\"1:15:30Z\", \"time_no_millis\");\n        assertSameDate(\"10:5:30Z\", \"time_no_millis\");\n        assertSameDate(\"10:15:3Z\", \"time_no_millis\");\n        assertParseException(\"10:15:3\", \"time_no_millis\");\n\n        assertSameDate(\"T10:15:30.123Z\", \"t_time\");\n        assertSameDate(\"T1:15:30.123Z\", \"t_time\");\n        assertSameDate(\"T10:1:30.123Z\", \"t_time\");\n        assertSameDate(\"T10:15:3.123Z\", \"t_time\");\n        assertParseException(\"T10:15:3.1\", \"t_time\");\n        assertParseException(\"T10:15:3Z\", \"t_time\");\n\n        assertSameDate(\"T10:15:30Z\", \"t_time_no_millis\");\n        assertSameDate(\"T1:15:30Z\", \"t_time_no_millis\");\n        assertSameDate(\"T10:1:30Z\", \"t_time_no_millis\");\n        assertSameDate(\"T10:15:3Z\", \"t_time_no_millis\");\n        assertParseException(\"T10:15:3\", \"t_time_no_millis\");\n\n        assertSameDate(\"2012-W48-6\", \"week_date\");\n        assertSameDate(\"2012-W01-6\", \"week_date\");\n        assertSameDate(\"2012-W1-6\", \"week_date\");\n        \r\n        assertJodaParseException(\"2012-W1-8\", \"week_date\",\n            \"Cannot parse \\\"2012-W1-8\\\": Value 8 for dayOfWeek must be in the range [1,7]\");\n        assertJavaTimeParseException(\"2012-W1-8\", \"week_date\", \"Text '2012-W1-8' could not be parsed\");\n\n        assertSameDate(\"2012-W48-6T10:15:30.123Z\", \"week_date_time\");\n        assertSameDate(\"2012-W1-6T10:15:30.123Z\", \"week_date_time\");\n\n        assertSameDate(\"2012-W48-6T10:15:30Z\", \"week_date_time_no_millis\");\n        assertSameDate(\"2012-W1-6T10:15:30Z\", \"week_date_time_no_millis\");\n\n        assertSameDate(\"2012\", \"year\");\n        assertSameDate(\"1\", \"year\");\n        assertSameDate(\"-2000\", \"year\");\n\n        assertSameDate(\"2012-12\", \"yearMonth\");\n        assertSameDate(\"1-1\", \"yearMonth\");\n\n        assertSameDate(\"2012-12-31\", \"yearMonthDay\");\n        assertSameDate(\"1-12-31\", \"yearMonthDay\");\n        assertSameDate(\"2012-1-31\", \"yearMonthDay\");\n        assertSameDate(\"2012-12-1\", \"yearMonthDay\");\n\n        assertSameDate(\"2018\", \"week_year\");\n        assertSameDate(\"1\", \"week_year\");\n        assertSameDate(\"2017\", \"week_year\");\n\n        assertSameDate(\"2018-W29\", \"weekyear_week\");\n        assertSameDate(\"2018-W1\", \"weekyear_week\");\n\n        assertSameDate(\"2012-W31-5\", \"weekyear_week_day\");\n        assertSameDate(\"2012-W1-1\", \"weekyear_week_day\");\n    }\n","realPath":"server/src/test/java/org/elasticsearch/common/joda/JavaJodaTimeDuellingTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":72,"status":"M"},{"authorDate":"2018-08-11 01:23:14","commitOrder":5,"curCode":"    public void testDuelingStrictParsing() {\n        assertSameDate(\"2018W313\", \"strict_basic_week_date\");\n        assertParseException(\"18W313\", \"strict_basic_week_date\");\n        assertSameDate(\"2018W313T121212.123Z\", \"strict_basic_week_date_time\");\n        assertParseException(\"2018W313T12128.123Z\", \"strict_basic_week_date_time\");\n        assertParseException(\"2018W313T81212.123Z\", \"strict_basic_week_date_time\");\n        assertParseException(\"2018W313T12812.123Z\", \"strict_basic_week_date_time\");\n        assertParseException(\"2018W313T12812.1Z\", \"strict_basic_week_date_time\");\n        assertSameDate(\"2018W313T121212Z\", \"strict_basic_week_date_time_no_millis\");\n        assertParseException(\"2018W313T12128Z\", \"strict_basic_week_date_time_no_millis\");\n        assertParseException(\"2018W313T81212Z\", \"strict_basic_week_date_time_no_millis\");\n        assertParseException(\"2018W313T12812Z\", \"strict_basic_week_date_time_no_millis\");\n        assertSameDate(\"2018-12-31\", \"strict_date\");\n        assertParseException(\"10000-12-31\", \"strict_date\");\n        assertParseException(\"2018-8-31\", \"strict_date\");\n        assertSameDate(\"2018-12-31T12\", \"strict_date_hour\");\n        assertParseException(\"2018-12-31T8\", \"strict_date_hour\");\n        assertSameDate(\"2018-12-31T12:12\", \"strict_date_hour_minute\");\n        assertParseException(\"2018-12-31T8:3\", \"strict_date_hour_minute\");\n        assertSameDate(\"2018-12-31T12:12:12\", \"strict_date_hour_minute_second\");\n        assertParseException(\"2018-12-31T12:12:1\", \"strict_date_hour_minute_second\");\n        assertSameDate(\"2018-12-31T12:12:12.123\", \"strict_date_hour_minute_second_fraction\");\n        assertSameDate(\"2018-12-31T12:12:12.123\", \"strict_date_hour_minute_second_millis\");\n        assertSameDate(\"2018-12-31T12:12:12.1\", \"strict_date_hour_minute_second_millis\");\n        assertSameDate(\"2018-12-31T12:12:12.1\", \"strict_date_hour_minute_second_fraction\");\n        assertParseException(\"2018-12-31T12:12:12\", \"strict_date_hour_minute_second_millis\");\n        assertParseException(\"2018-12-31T12:12:12\", \"strict_date_hour_minute_second_fraction\");\n        assertSameDate(\"2018-12-31\", \"strict_date_optional_time\");\n        assertParseException(\"2018-12-1\", \"strict_date_optional_time\");\n        assertParseException(\"2018-1-31\", \"strict_date_optional_time\");\n        assertParseException(\"10000-01-31\", \"strict_date_optional_time\");\n        assertSameDate(\"2018-12-31T10:15:30\", \"strict_date_optional_time\");\n        assertParseException(\"2018-12-31T10:15:3\", \"strict_date_optional_time\");\n        assertParseException(\"2018-12-31T10:5:30\", \"strict_date_optional_time\");\n        assertParseException(\"2018-12-31T9:15:30\", \"strict_date_optional_time\");\n        assertSameDate(\"2018-12-31T10:15:30.123Z\", \"strict_date_time\");\n        assertSameDate(\"2018-12-31T10:15:30.11Z\", \"strict_date_time\");\n        assertParseException(\"2018-12-31T10:15:3.123Z\", \"strict_date_time\");\n        assertParseException(\"2018-12-31T10:5:30.123Z\", \"strict_date_time\");\n        assertParseException(\"2018-12-31T1:15:30.123Z\", \"strict_date_time\");\n        assertSameDate(\"2018-12-31T10:15:30Z\", \"strict_date_time_no_millis\");\n        assertParseException(\"2018-12-31T10:5:30Z\", \"strict_date_time_no_millis\");\n        assertParseException(\"2018-12-31T10:15:3Z\", \"strict_date_time_no_millis\");\n        assertParseException(\"2018-12-31T1:15:30Z\", \"strict_date_time_no_millis\");\n        assertSameDate(\"12\", \"strict_hour\");\n        assertSameDate(\"01\", \"strict_hour\");\n        assertParseException(\"1\", \"strict_hour\");\n        assertSameDate(\"12:12\", \"strict_hour_minute\");\n        assertSameDate(\"12:01\", \"strict_hour_minute\");\n        assertParseException(\"12:1\", \"strict_hour_minute\");\n        assertSameDate(\"12:12:12\", \"strict_hour_minute_second\");\n        assertSameDate(\"12:12:01\", \"strict_hour_minute_second\");\n        assertParseException(\"12:12:1\", \"strict_hour_minute_second\");\n        assertSameDate(\"12:12:12.123\", \"strict_hour_minute_second_fraction\");\n        assertSameDate(\"12:12:12.1\", \"strict_hour_minute_second_fraction\");\n        assertParseException(\"12:12:12\", \"strict_hour_minute_second_fraction\");\n        assertSameDate(\"12:12:12.123\", \"strict_hour_minute_second_millis\");\n        assertSameDate(\"12:12:12.1\", \"strict_hour_minute_second_millis\");\n        assertParseException(\"12:12:12\", \"strict_hour_minute_second_millis\");\n        assertSameDate(\"2018-128\", \"strict_ordinal_date\");\n        assertParseException(\"2018-1\", \"strict_ordinal_date\");\n\n        assertSameDate(\"2018-128T10:15:30.123Z\", \"strict_ordinal_date_time\");\n        assertParseException(\"2018-1T10:15:30.123Z\", \"strict_ordinal_date_time\");\n\n        assertSameDate(\"2018-128T10:15:30Z\", \"strict_ordinal_date_time_no_millis\");\n        assertParseException(\"2018-1T10:15:30Z\", \"strict_ordinal_date_time_no_millis\");\n\n        assertSameDate(\"10:15:30.123Z\", \"strict_time\");\n        assertParseException(\"1:15:30.123Z\", \"strict_time\");\n        assertParseException(\"10:1:30.123Z\", \"strict_time\");\n        assertParseException(\"10:15:3.123Z\", \"strict_time\");\n        assertParseException(\"10:15:3.1\", \"strict_time\");\n        assertParseException(\"10:15:3Z\", \"strict_time\");\n\n        assertSameDate(\"10:15:30Z\", \"strict_time_no_millis\");\n        assertSameDate(\"01:15:30Z\", \"strict_time_no_millis\");\n        assertParseException(\"1:15:30Z\", \"strict_time_no_millis\");\n        assertParseException(\"10:5:30Z\", \"strict_time_no_millis\");\n        assertParseException(\"10:15:3Z\", \"strict_time_no_millis\");\n        assertParseException(\"10:15:3\", \"strict_time_no_millis\");\n\n        assertSameDate(\"T10:15:30.123Z\", \"strict_t_time\");\n        assertParseException(\"T1:15:30.123Z\", \"strict_t_time\");\n        assertParseException(\"T10:1:30.123Z\", \"strict_t_time\");\n        assertParseException(\"T10:15:3.123Z\", \"strict_t_time\");\n        assertParseException(\"T10:15:3.1\", \"strict_t_time\");\n        assertParseException(\"T10:15:3Z\", \"strict_t_time\");\n\n        assertSameDate(\"T10:15:30Z\", \"strict_t_time_no_millis\");\n        assertParseException(\"T1:15:30Z\", \"strict_t_time_no_millis\");\n        assertParseException(\"T10:1:30Z\", \"strict_t_time_no_millis\");\n        assertParseException(\"T10:15:3Z\", \"strict_t_time_no_millis\");\n        assertParseException(\"T10:15:3\", \"strict_t_time_no_millis\");\n\n        assertSameDate(\"2012-W48-6\", \"strict_week_date\");\n        assertSameDate(\"2012-W01-6\", \"strict_week_date\");\n        assertParseException(\"2012-W1-6\", \"strict_week_date\");\n        assertParseException(\"2012-W1-8\", \"strict_week_date\");\n\n        assertSameDate(\"2012-W48-6\", \"strict_week_date\");\n        assertSameDate(\"2012-W01-6\", \"strict_week_date\");\n        assertParseException(\"2012-W1-6\", \"strict_week_date\");\n        \r\n        assertJodaParseException(\"2012-W01-8\", \"strict_week_date\",\n            \"Cannot parse \\\"2012-W01-8\\\": Value 8 for dayOfWeek must be in the range [1,7]\");\n        assertJavaTimeParseException(\"2012-W01-8\", \"strict_week_date\", \"Text '2012-W01-8' could not be parsed\");\n\n        assertSameDate(\"2012-W48-6T10:15:30.123Z\", \"strict_week_date_time\");\n        assertParseException(\"2012-W1-6T10:15:30.123Z\", \"strict_week_date_time\");\n\n        assertSameDate(\"2012-W48-6T10:15:30Z\", \"strict_week_date_time_no_millis\");\n        assertParseException(\"2012-W1-6T10:15:30Z\", \"strict_week_date_time_no_millis\");\n\n        assertSameDate(\"2012\", \"strict_year\");\n        assertParseException(\"1\", \"strict_year\");\n        assertSameDate(\"-2000\", \"strict_year\");\n\n        assertSameDate(\"2012-12\", \"strict_year_month\");\n        assertParseException(\"1-1\", \"strict_year_month\");\n\n        assertSameDate(\"2012-12-31\", \"strict_year_month_day\");\n        assertParseException(\"1-12-31\", \"strict_year_month_day\");\n        assertParseException(\"2012-1-31\", \"strict_year_month_day\");\n        assertParseException(\"2012-12-1\", \"strict_year_month_day\");\n\n        assertSameDate(\"2018\", \"strict_weekyear\");\n        assertParseException(\"1\", \"strict_weekyear\");\n\n        assertSameDate(\"2018\", \"strict_weekyear\");\n        assertSameDate(\"2017\", \"strict_weekyear\");\n        assertParseException(\"1\", \"strict_weekyear\");\n\n        assertSameDate(\"2018-W29\", \"strict_weekyear_week\");\n        assertSameDate(\"2018-W01\", \"strict_weekyear_week\");\n        assertParseException(\"2018-W1\", \"strict_weekyear_week\");\n\n        assertSameDate(\"2012-W31-5\", \"strict_weekyear_week_day\");\n        assertParseException(\"2012-W1-1\", \"strict_weekyear_week_day\");\n    }\n","date":"2018-08-11 01:23:14","endLine":369,"groupId":"17876","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"testDuelingStrictParsing","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/15/51a315b26d93122145fe520885ac8289a2f003.src","preCode":"    public void testDuelingStrictParsing() {\n        assertSameDate(\"2018W313\", \"strict_basic_week_date\");\n        assertParseException(\"18W313\", \"strict_basic_week_date\");\n        assertSameDate(\"2018W313T121212.123Z\", \"strict_basic_week_date_time\");\n        assertParseException(\"2018W313T12128.123Z\", \"strict_basic_week_date_time\");\n        assertParseException(\"2018W313T81212.123Z\", \"strict_basic_week_date_time\");\n        assertParseException(\"2018W313T12812.123Z\", \"strict_basic_week_date_time\");\n        assertParseException(\"2018W313T12812.1Z\", \"strict_basic_week_date_time\");\n        assertSameDate(\"2018W313T121212Z\", \"strict_basic_week_date_time_no_millis\");\n        assertParseException(\"2018W313T12128Z\", \"strict_basic_week_date_time_no_millis\");\n        assertParseException(\"2018W313T81212Z\", \"strict_basic_week_date_time_no_millis\");\n        assertParseException(\"2018W313T12812Z\", \"strict_basic_week_date_time_no_millis\");\n        assertSameDate(\"2018-12-31\", \"strict_date\");\n        assertParseException(\"10000-12-31\", \"strict_date\");\n        assertParseException(\"2018-8-31\", \"strict_date\");\n        assertSameDate(\"2018-12-31T12\", \"strict_date_hour\");\n        assertParseException(\"2018-12-31T8\", \"strict_date_hour\");\n        assertSameDate(\"2018-12-31T12:12\", \"strict_date_hour_minute\");\n        assertParseException(\"2018-12-31T8:3\", \"strict_date_hour_minute\");\n        assertSameDate(\"2018-12-31T12:12:12\", \"strict_date_hour_minute_second\");\n        assertParseException(\"2018-12-31T12:12:1\", \"strict_date_hour_minute_second\");\n        assertSameDate(\"2018-12-31T12:12:12.123\", \"strict_date_hour_minute_second_fraction\");\n        assertSameDate(\"2018-12-31T12:12:12.123\", \"strict_date_hour_minute_second_millis\");\n        assertSameDate(\"2018-12-31T12:12:12.1\", \"strict_date_hour_minute_second_millis\");\n        assertSameDate(\"2018-12-31T12:12:12.1\", \"strict_date_hour_minute_second_fraction\");\n        assertParseException(\"2018-12-31T12:12:12\", \"strict_date_hour_minute_second_millis\");\n        assertParseException(\"2018-12-31T12:12:12\", \"strict_date_hour_minute_second_fraction\");\n        assertSameDate(\"2018-12-31\", \"strict_date_optional_time\");\n        assertParseException(\"2018-12-1\", \"strict_date_optional_time\");\n        assertParseException(\"2018-1-31\", \"strict_date_optional_time\");\n        assertParseException(\"10000-01-31\", \"strict_date_optional_time\");\n        assertSameDate(\"2018-12-31T10:15:30\", \"strict_date_optional_time\");\n        assertParseException(\"2018-12-31T10:15:3\", \"strict_date_optional_time\");\n        assertParseException(\"2018-12-31T10:5:30\", \"strict_date_optional_time\");\n        assertParseException(\"2018-12-31T9:15:30\", \"strict_date_optional_time\");\n        assertSameDate(\"2018-12-31T10:15:30.123Z\", \"strict_date_time\");\n        assertSameDate(\"2018-12-31T10:15:30.11Z\", \"strict_date_time\");\n        assertParseException(\"2018-12-31T10:15:3.123Z\", \"strict_date_time\");\n        assertParseException(\"2018-12-31T10:5:30.123Z\", \"strict_date_time\");\n        assertParseException(\"2018-12-31T1:15:30.123Z\", \"strict_date_time\");\n        assertSameDate(\"2018-12-31T10:15:30Z\", \"strict_date_time_no_millis\");\n        assertParseException(\"2018-12-31T10:5:30Z\", \"strict_date_time_no_millis\");\n        assertParseException(\"2018-12-31T10:15:3Z\", \"strict_date_time_no_millis\");\n        assertParseException(\"2018-12-31T1:15:30Z\", \"strict_date_time_no_millis\");\n        assertSameDate(\"12\", \"strict_hour\");\n        assertSameDate(\"01\", \"strict_hour\");\n        assertParseException(\"1\", \"strict_hour\");\n        assertSameDate(\"12:12\", \"strict_hour_minute\");\n        assertSameDate(\"12:01\", \"strict_hour_minute\");\n        assertParseException(\"12:1\", \"strict_hour_minute\");\n        assertSameDate(\"12:12:12\", \"strict_hour_minute_second\");\n        assertSameDate(\"12:12:01\", \"strict_hour_minute_second\");\n        assertParseException(\"12:12:1\", \"strict_hour_minute_second\");\n        assertSameDate(\"12:12:12.123\", \"strict_hour_minute_second_fraction\");\n        assertSameDate(\"12:12:12.1\", \"strict_hour_minute_second_fraction\");\n        assertParseException(\"12:12:12\", \"strict_hour_minute_second_fraction\");\n        assertSameDate(\"12:12:12.123\", \"strict_hour_minute_second_millis\");\n        assertSameDate(\"12:12:12.1\", \"strict_hour_minute_second_millis\");\n        assertParseException(\"12:12:12\", \"strict_hour_minute_second_millis\");\n        assertSameDate(\"2018-128\", \"strict_ordinal_date\");\n        assertParseException(\"2018-1\", \"strict_ordinal_date\");\n\n        assertSameDate(\"2018-128T10:15:30.123Z\", \"strict_ordinal_date_time\");\n        assertParseException(\"2018-1T10:15:30.123Z\", \"strict_ordinal_date_time\");\n\n        assertSameDate(\"2018-128T10:15:30Z\", \"strict_ordinal_date_time_no_millis\");\n        assertParseException(\"2018-1T10:15:30Z\", \"strict_ordinal_date_time_no_millis\");\n\n        assertSameDate(\"10:15:30.123Z\", \"strict_time\");\n        assertParseException(\"1:15:30.123Z\", \"strict_time\");\n        assertParseException(\"10:1:30.123Z\", \"strict_time\");\n        assertParseException(\"10:15:3.123Z\", \"strict_time\");\n        assertParseException(\"10:15:3.1\", \"strict_time\");\n        assertParseException(\"10:15:3Z\", \"strict_time\");\n\n        assertSameDate(\"10:15:30Z\", \"strict_time_no_millis\");\n        assertSameDate(\"01:15:30Z\", \"strict_time_no_millis\");\n        assertParseException(\"1:15:30Z\", \"strict_time_no_millis\");\n        assertParseException(\"10:5:30Z\", \"strict_time_no_millis\");\n        assertParseException(\"10:15:3Z\", \"strict_time_no_millis\");\n        assertParseException(\"10:15:3\", \"strict_time_no_millis\");\n\n        assertSameDate(\"T10:15:30.123Z\", \"strict_t_time\");\n        assertParseException(\"T1:15:30.123Z\", \"strict_t_time\");\n        assertParseException(\"T10:1:30.123Z\", \"strict_t_time\");\n        assertParseException(\"T10:15:3.123Z\", \"strict_t_time\");\n        assertParseException(\"T10:15:3.1\", \"strict_t_time\");\n        assertParseException(\"T10:15:3Z\", \"strict_t_time\");\n\n        assertSameDate(\"T10:15:30Z\", \"strict_t_time_no_millis\");\n        assertParseException(\"T1:15:30Z\", \"strict_t_time_no_millis\");\n        assertParseException(\"T10:1:30Z\", \"strict_t_time_no_millis\");\n        assertParseException(\"T10:15:3Z\", \"strict_t_time_no_millis\");\n        assertParseException(\"T10:15:3\", \"strict_t_time_no_millis\");\n\n        assertSameDate(\"2012-W48-6\", \"strict_week_date\");\n        assertSameDate(\"2012-W01-6\", \"strict_week_date\");\n        assertParseException(\"2012-W1-6\", \"strict_week_date\");\n        assertParseException(\"2012-W1-8\", \"strict_week_date\");\n\n        assertSameDate(\"2012-W48-6\", \"strict_week_date\");\n        assertSameDate(\"2012-W01-6\", \"strict_week_date\");\n        assertParseException(\"2012-W1-6\", \"strict_week_date\");\n        \r\n        assertJodaParseException(\"2012-W01-8\", \"strict_week_date\",\n            \"Cannot parse \\\"2012-W01-8\\\": Value 8 for dayOfWeek must be in the range [1,7]\");\n        assertJavaTimeParseException(\"2012-W01-8\", \"strict_week_date\", \"Text '2012-W01-8' could not be parsed\");\n\n        assertSameDate(\"2012-W48-6T10:15:30.123Z\", \"strict_week_date_time\");\n        assertParseException(\"2012-W1-6T10:15:30.123Z\", \"strict_week_date_time\");\n\n        assertSameDate(\"2012-W48-6T10:15:30Z\", \"strict_week_date_time_no_millis\");\n        assertParseException(\"2012-W1-6T10:15:30Z\", \"strict_week_date_time_no_millis\");\n\n        assertSameDate(\"2012\", \"strict_year\");\n        assertParseException(\"1\", \"strict_year\");\n        assertSameDate(\"-2000\", \"strict_year\");\n\n        assertSameDate(\"2012-12\", \"strict_year_month\");\n        assertParseException(\"1-1\", \"strict_year_month\");\n\n        assertSameDate(\"2012-12-31\", \"strict_year_month_day\");\n        assertParseException(\"1-12-31\", \"strict_year_month_day\");\n        assertParseException(\"2012-1-31\", \"strict_year_month_day\");\n        assertParseException(\"2012-12-1\", \"strict_year_month_day\");\n\n        assertSameDate(\"2018\", \"strict_weekyear\");\n        assertParseException(\"1\", \"strict_weekyear\");\n\n        assertSameDate(\"2018\", \"strict_weekyear\");\n        assertSameDate(\"2017\", \"strict_weekyear\");\n        assertParseException(\"1\", \"strict_weekyear\");\n\n        assertSameDate(\"2018-W29\", \"strict_weekyear_week\");\n        assertSameDate(\"2018-W01\", \"strict_weekyear_week\");\n        assertParseException(\"2018-W1\", \"strict_weekyear_week\");\n\n        assertSameDate(\"2012-W31-5\", \"strict_weekyear_week_day\");\n        assertParseException(\"2012-W1-1\", \"strict_weekyear_week_day\");\n    }\n","realPath":"server/src/test/java/org/elasticsearch/common/joda/JavaJodaTimeDuellingTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":230,"status":"N"}],"commitId":"84ef91529cf7dd9ec8c78f299d8c89dfd64a2106","commitMessage":"@@@Merge branch 'master' into index-lifecycle\n","date":"2018-10-19 20:24:04","modifiedFileCount":"154","status":"M","submitter":"Colin Goodheart-Smithe"},{"authorTime":"2018-08-11 01:23:14","codes":[{"authorDate":"2018-12-19 01:51:03","commitOrder":6,"curCode":"    public void testDuellingFormatsValidParsing() {\n        assertSameDate(\"1522332219\", \"epoch_second\");\n        assertSameDate(\"1522332219.\", \"epoch_second\");\n        assertSameDate(\"1522332219.0\", \"epoch_second\");\n        assertSameDate(\"0\", \"epoch_second\");\n        assertSameDate(\"1\", \"epoch_second\");\n        assertSameDate(\"-1\", \"epoch_second\");\n        assertSameDate(\"-1522332219\", \"epoch_second\");\n        assertSameDate(\"1522332219321\", \"epoch_millis\");\n        assertSameDate(\"0\", \"epoch_millis\");\n        assertSameDate(\"1\", \"epoch_millis\");\n        assertSameDate(\"-1\", \"epoch_millis\");\n        assertSameDate(\"-1522332219321\", \"epoch_millis\");\n\n        assertSameDate(\"20181126\", \"basic_date\");\n        assertSameDate(\"20181126T121212.123Z\", \"basic_date_time\");\n        assertSameDate(\"20181126T121212.123+10:00\", \"basic_date_time\");\n        assertSameDate(\"20181126T121212.123-0800\", \"basic_date_time\");\n\n        assertSameDate(\"20181126T121212Z\", \"basic_date_time_no_millis\");\n        assertSameDate(\"2018363\", \"basic_ordinal_date\");\n        assertSameDate(\"2018363T121212.123Z\", \"basic_ordinal_date_time\");\n        assertSameDate(\"2018363T121212Z\", \"basic_ordinal_date_time_no_millis\");\n        assertSameDate(\"121212.123Z\", \"basic_time\");\n        assertSameDate(\"121212Z\", \"basic_time_no_millis\");\n        assertSameDate(\"T121212.123Z\", \"basic_t_time\");\n        assertSameDate(\"T121212Z\", \"basic_t_time_no_millis\");\n        assertSameDate(\"2018W313\", \"basic_week_date\");\n        assertSameDate(\"1W313\", \"basic_week_date\");\n        assertSameDate(\"18W313\", \"basic_week_date\");\n        assertSameDate(\"2018W313T121212.123Z\", \"basic_week_date_time\");\n        assertSameDate(\"2018W313T121212Z\", \"basic_week_date_time_no_millis\");\n\n        assertSameDate(\"2018-12-31\", \"date\");\n        assertSameDate(\"18-5-6\", \"date\");\n        assertSameDate(\"10000-5-6\", \"date\");\n\n        assertSameDate(\"2018-12-31T12\", \"date_hour\");\n        assertSameDate(\"2018-12-31T8\", \"date_hour\");\n\n        assertSameDate(\"2018-12-31T12:12\", \"date_hour_minute\");\n        assertSameDate(\"2018-12-31T8:3\", \"date_hour_minute\");\n\n        assertSameDate(\"2018-12-31T12:12:12\", \"date_hour_minute_second\");\n        assertSameDate(\"2018-12-31T12:12:1\", \"date_hour_minute_second\");\n\n        assertSameDate(\"2018-12-31T12:12:12.123\", \"date_hour_minute_second_fraction\");\n        assertSameDate(\"2018-12-31T12:12:12.123\", \"date_hour_minute_second_millis\");\n        assertSameDate(\"2018-12-31T12:12:12.1\", \"date_hour_minute_second_millis\");\n        assertSameDate(\"2018-12-31T12:12:12.1\", \"date_hour_minute_second_fraction\");\n\n        assertSameDate(\"10000\", \"date_optional_time\");\n        assertSameDate(\"10000T\", \"date_optional_time\");\n        assertSameDate(\"2018\", \"date_optional_time\");\n        assertSameDate(\"2018T\", \"date_optional_time\");\n        assertSameDate(\"2018-05\", \"date_optional_time\");\n        assertSameDate(\"2018-05-30\", \"date_optional_time\");\n        assertSameDate(\"2018-05-30T20\", \"date_optional_time\");\n        assertSameDate(\"2018-05-30T20:21\", \"date_optional_time\");\n        assertSameDate(\"2018-05-30T20:21:23\", \"date_optional_time\");\n        assertSameDate(\"2018-05-30T20:21:23.123\", \"date_optional_time\");\n        assertSameDate(\"2018-12-1\", \"date_optional_time\");\n        assertSameDate(\"2018-12-31T10:15:30\", \"date_optional_time\");\n        assertSameDate(\"2018-12-31T10:15:3\", \"date_optional_time\");\n        assertSameDate(\"2018-12-31T10:5:30\", \"date_optional_time\");\n        assertSameDate(\"2018-12-31T1:15:30\", \"date_optional_time\");\n\n        assertSameDate(\"2018-12-31T10:15:30.123Z\", \"date_time\");\n        assertSameDate(\"2018-12-31T10:15:30.11Z\", \"date_time\");\n        assertSameDate(\"2018-12-31T10:15:3.123Z\", \"date_time\");\n\n        assertSameDate(\"2018-12-31T10:15:30Z\", \"date_time_no_millis\");\n        assertSameDate(\"2018-12-31T10:5:30Z\", \"date_time_no_millis\");\n        assertSameDate(\"2018-12-31T10:15:3Z\", \"date_time_no_millis\");\n        assertSameDate(\"2018-12-31T1:15:30Z\", \"date_time_no_millis\");\n\n        assertSameDate(\"12\", \"hour\");\n        assertSameDate(\"01\", \"hour\");\n        assertSameDate(\"1\", \"hour\");\n\n        assertSameDate(\"12:12\", \"hour_minute\");\n        assertSameDate(\"12:01\", \"hour_minute\");\n        assertSameDate(\"12:1\", \"hour_minute\");\n\n        assertSameDate(\"12:12:12\", \"hour_minute_second\");\n        assertSameDate(\"12:12:01\", \"hour_minute_second\");\n        assertSameDate(\"12:12:1\", \"hour_minute_second\");\n\n        assertSameDate(\"12:12:12.123\", \"hour_minute_second_fraction\");\n        assertSameDate(\"12:12:12.1\", \"hour_minute_second_fraction\");\n        assertParseException(\"12:12:12\", \"hour_minute_second_fraction\");\n        assertSameDate(\"12:12:12.123\", \"hour_minute_second_millis\");\n        assertSameDate(\"12:12:12.1\", \"hour_minute_second_millis\");\n        assertParseException(\"12:12:12\", \"hour_minute_second_millis\");\n\n        assertSameDate(\"2018-128\", \"ordinal_date\");\n        assertSameDate(\"2018-1\", \"ordinal_date\");\n\n        assertSameDate(\"2018-128T10:15:30.123Z\", \"ordinal_date_time\");\n        assertSameDate(\"2018-1T10:15:30.123Z\", \"ordinal_date_time\");\n\n        assertSameDate(\"2018-128T10:15:30Z\", \"ordinal_date_time_no_millis\");\n        assertSameDate(\"2018-1T10:15:30Z\", \"ordinal_date_time_no_millis\");\n\n        assertSameDate(\"10:15:30.123Z\", \"time\");\n        assertSameDate(\"1:15:30.123Z\", \"time\");\n        assertSameDate(\"10:1:30.123Z\", \"time\");\n        assertSameDate(\"10:15:3.123Z\", \"time\");\n        assertParseException(\"10:15:3.1\", \"time\");\n        assertParseException(\"10:15:3Z\", \"time\");\n\n        assertSameDate(\"10:15:30Z\", \"time_no_millis\");\n        assertSameDate(\"01:15:30Z\", \"time_no_millis\");\n        assertSameDate(\"1:15:30Z\", \"time_no_millis\");\n        assertSameDate(\"10:5:30Z\", \"time_no_millis\");\n        assertSameDate(\"10:15:3Z\", \"time_no_millis\");\n        assertParseException(\"10:15:3\", \"time_no_millis\");\n\n        assertSameDate(\"T10:15:30.123Z\", \"t_time\");\n        assertSameDate(\"T1:15:30.123Z\", \"t_time\");\n        assertSameDate(\"T10:1:30.123Z\", \"t_time\");\n        assertSameDate(\"T10:15:3.123Z\", \"t_time\");\n        assertParseException(\"T10:15:3.1\", \"t_time\");\n        assertParseException(\"T10:15:3Z\", \"t_time\");\n\n        assertSameDate(\"T10:15:30Z\", \"t_time_no_millis\");\n        assertSameDate(\"T1:15:30Z\", \"t_time_no_millis\");\n        assertSameDate(\"T10:1:30Z\", \"t_time_no_millis\");\n        assertSameDate(\"T10:15:3Z\", \"t_time_no_millis\");\n        assertParseException(\"T10:15:3\", \"t_time_no_millis\");\n\n        assertSameDate(\"2012-W48-6\", \"week_date\");\n        assertSameDate(\"2012-W01-6\", \"week_date\");\n        assertSameDate(\"2012-W1-6\", \"week_date\");\n        \r\n        assertJodaParseException(\"2012-W1-8\", \"week_date\",\n            \"Cannot parse \\\"2012-W1-8\\\": Value 8 for dayOfWeek must be in the range [1,7]\");\n        assertJavaTimeParseException(\"2012-W1-8\", \"week_date\", \"Text '2012-W1-8' could not be parsed\");\n\n        assertSameDate(\"2012-W48-6T10:15:30.123Z\", \"week_date_time\");\n        assertSameDate(\"2012-W1-6T10:15:30.123Z\", \"week_date_time\");\n\n        assertSameDate(\"2012-W48-6T10:15:30Z\", \"week_date_time_no_millis\");\n        assertSameDate(\"2012-W1-6T10:15:30Z\", \"week_date_time_no_millis\");\n\n        assertSameDate(\"2012\", \"year\");\n        assertSameDate(\"1\", \"year\");\n        assertSameDate(\"-2000\", \"year\");\n\n        assertSameDate(\"2012-12\", \"yearMonth\");\n        assertSameDate(\"1-1\", \"yearMonth\");\n\n        assertSameDate(\"2012-12-31\", \"yearMonthDay\");\n        assertSameDate(\"1-12-31\", \"yearMonthDay\");\n        assertSameDate(\"2012-1-31\", \"yearMonthDay\");\n        assertSameDate(\"2012-12-1\", \"yearMonthDay\");\n\n        assertSameDate(\"2018\", \"week_year\");\n        assertSameDate(\"1\", \"week_year\");\n        assertSameDate(\"2017\", \"week_year\");\n\n        assertSameDate(\"2018-W29\", \"weekyear_week\");\n        assertSameDate(\"2018-W1\", \"weekyear_week\");\n\n        assertSameDate(\"2012-W31-5\", \"weekyear_week_day\");\n        assertSameDate(\"2012-W1-1\", \"weekyear_week_day\");\n    }\n","date":"2018-12-19 01:51:03","endLine":238,"groupId":"28896","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"testDuellingFormatsValidParsing","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/c8/5d303cf293fd224ee0347963ea953af49e856d.src","preCode":"    public void testDuellingFormatsValidParsing() {\n        assertSameDate(\"1522332219\", \"epoch_second\");\n        assertSameDate(\"1522332219.\", \"epoch_second\");\n        assertSameDate(\"1522332219.0\", \"epoch_second\");\n        assertSameDate(\"0\", \"epoch_second\");\n        assertSameDate(\"1\", \"epoch_second\");\n        assertSameDate(\"-1\", \"epoch_second\");\n        assertSameDate(\"-1522332219\", \"epoch_second\");\n        assertSameDate(\"1.0e3\", \"epoch_second\");\n        assertSameDate(\"1522332219321\", \"epoch_millis\");\n        assertSameDate(\"0\", \"epoch_millis\");\n        assertSameDate(\"1\", \"epoch_millis\");\n        assertSameDate(\"-1\", \"epoch_millis\");\n        assertSameDate(\"-1522332219321\", \"epoch_millis\");\n        assertSameDate(\"1.0e3\", \"epoch_millis\");\n\n        assertSameDate(\"20181126\", \"basic_date\");\n        assertSameDate(\"20181126T121212.123Z\", \"basic_date_time\");\n        assertSameDate(\"20181126T121212.123+10:00\", \"basic_date_time\");\n        assertSameDate(\"20181126T121212.123-0800\", \"basic_date_time\");\n\n        assertSameDate(\"20181126T121212Z\", \"basic_date_time_no_millis\");\n        assertSameDate(\"2018363\", \"basic_ordinal_date\");\n        assertSameDate(\"2018363T121212.123Z\", \"basic_ordinal_date_time\");\n        assertSameDate(\"2018363T121212Z\", \"basic_ordinal_date_time_no_millis\");\n        assertSameDate(\"121212.123Z\", \"basic_time\");\n        assertSameDate(\"121212Z\", \"basic_time_no_millis\");\n        assertSameDate(\"T121212.123Z\", \"basic_t_time\");\n        assertSameDate(\"T121212Z\", \"basic_t_time_no_millis\");\n        assertSameDate(\"2018W313\", \"basic_week_date\");\n        assertSameDate(\"1W313\", \"basic_week_date\");\n        assertSameDate(\"18W313\", \"basic_week_date\");\n        assertSameDate(\"2018W313T121212.123Z\", \"basic_week_date_time\");\n        assertSameDate(\"2018W313T121212Z\", \"basic_week_date_time_no_millis\");\n\n        assertSameDate(\"2018-12-31\", \"date\");\n        assertSameDate(\"18-5-6\", \"date\");\n        assertSameDate(\"10000-5-6\", \"date\");\n\n        assertSameDate(\"2018-12-31T12\", \"date_hour\");\n        assertSameDate(\"2018-12-31T8\", \"date_hour\");\n\n        assertSameDate(\"2018-12-31T12:12\", \"date_hour_minute\");\n        assertSameDate(\"2018-12-31T8:3\", \"date_hour_minute\");\n\n        assertSameDate(\"2018-12-31T12:12:12\", \"date_hour_minute_second\");\n        assertSameDate(\"2018-12-31T12:12:1\", \"date_hour_minute_second\");\n\n        assertSameDate(\"2018-12-31T12:12:12.123\", \"date_hour_minute_second_fraction\");\n        assertSameDate(\"2018-12-31T12:12:12.123\", \"date_hour_minute_second_millis\");\n        assertSameDate(\"2018-12-31T12:12:12.1\", \"date_hour_minute_second_millis\");\n        assertSameDate(\"2018-12-31T12:12:12.1\", \"date_hour_minute_second_fraction\");\n\n        assertSameDate(\"10000\", \"date_optional_time\");\n        assertSameDate(\"10000T\", \"date_optional_time\");\n        assertSameDate(\"2018\", \"date_optional_time\");\n        assertSameDate(\"2018T\", \"date_optional_time\");\n        assertSameDate(\"2018-05\", \"date_optional_time\");\n        assertSameDate(\"2018-05-30\", \"date_optional_time\");\n        assertSameDate(\"2018-05-30T20\", \"date_optional_time\");\n        assertSameDate(\"2018-05-30T20:21\", \"date_optional_time\");\n        assertSameDate(\"2018-05-30T20:21:23\", \"date_optional_time\");\n        assertSameDate(\"2018-05-30T20:21:23.123\", \"date_optional_time\");\n        assertSameDate(\"2018-12-1\", \"date_optional_time\");\n        assertSameDate(\"2018-12-31T10:15:30\", \"date_optional_time\");\n        assertSameDate(\"2018-12-31T10:15:3\", \"date_optional_time\");\n        assertSameDate(\"2018-12-31T10:5:30\", \"date_optional_time\");\n        assertSameDate(\"2018-12-31T1:15:30\", \"date_optional_time\");\n\n        assertSameDate(\"2018-12-31T10:15:30.123Z\", \"date_time\");\n        assertSameDate(\"2018-12-31T10:15:30.11Z\", \"date_time\");\n        assertSameDate(\"2018-12-31T10:15:3.123Z\", \"date_time\");\n\n        assertSameDate(\"2018-12-31T10:15:30Z\", \"date_time_no_millis\");\n        assertSameDate(\"2018-12-31T10:5:30Z\", \"date_time_no_millis\");\n        assertSameDate(\"2018-12-31T10:15:3Z\", \"date_time_no_millis\");\n        assertSameDate(\"2018-12-31T1:15:30Z\", \"date_time_no_millis\");\n\n        assertSameDate(\"12\", \"hour\");\n        assertSameDate(\"01\", \"hour\");\n        assertSameDate(\"1\", \"hour\");\n\n        assertSameDate(\"12:12\", \"hour_minute\");\n        assertSameDate(\"12:01\", \"hour_minute\");\n        assertSameDate(\"12:1\", \"hour_minute\");\n\n        assertSameDate(\"12:12:12\", \"hour_minute_second\");\n        assertSameDate(\"12:12:01\", \"hour_minute_second\");\n        assertSameDate(\"12:12:1\", \"hour_minute_second\");\n\n        assertSameDate(\"12:12:12.123\", \"hour_minute_second_fraction\");\n        assertSameDate(\"12:12:12.1\", \"hour_minute_second_fraction\");\n        assertParseException(\"12:12:12\", \"hour_minute_second_fraction\");\n        assertSameDate(\"12:12:12.123\", \"hour_minute_second_millis\");\n        assertSameDate(\"12:12:12.1\", \"hour_minute_second_millis\");\n        assertParseException(\"12:12:12\", \"hour_minute_second_millis\");\n\n        assertSameDate(\"2018-128\", \"ordinal_date\");\n        assertSameDate(\"2018-1\", \"ordinal_date\");\n\n        assertSameDate(\"2018-128T10:15:30.123Z\", \"ordinal_date_time\");\n        assertSameDate(\"2018-1T10:15:30.123Z\", \"ordinal_date_time\");\n\n        assertSameDate(\"2018-128T10:15:30Z\", \"ordinal_date_time_no_millis\");\n        assertSameDate(\"2018-1T10:15:30Z\", \"ordinal_date_time_no_millis\");\n\n        assertSameDate(\"10:15:30.123Z\", \"time\");\n        assertSameDate(\"1:15:30.123Z\", \"time\");\n        assertSameDate(\"10:1:30.123Z\", \"time\");\n        assertSameDate(\"10:15:3.123Z\", \"time\");\n        assertParseException(\"10:15:3.1\", \"time\");\n        assertParseException(\"10:15:3Z\", \"time\");\n\n        assertSameDate(\"10:15:30Z\", \"time_no_millis\");\n        assertSameDate(\"01:15:30Z\", \"time_no_millis\");\n        assertSameDate(\"1:15:30Z\", \"time_no_millis\");\n        assertSameDate(\"10:5:30Z\", \"time_no_millis\");\n        assertSameDate(\"10:15:3Z\", \"time_no_millis\");\n        assertParseException(\"10:15:3\", \"time_no_millis\");\n\n        assertSameDate(\"T10:15:30.123Z\", \"t_time\");\n        assertSameDate(\"T1:15:30.123Z\", \"t_time\");\n        assertSameDate(\"T10:1:30.123Z\", \"t_time\");\n        assertSameDate(\"T10:15:3.123Z\", \"t_time\");\n        assertParseException(\"T10:15:3.1\", \"t_time\");\n        assertParseException(\"T10:15:3Z\", \"t_time\");\n\n        assertSameDate(\"T10:15:30Z\", \"t_time_no_millis\");\n        assertSameDate(\"T1:15:30Z\", \"t_time_no_millis\");\n        assertSameDate(\"T10:1:30Z\", \"t_time_no_millis\");\n        assertSameDate(\"T10:15:3Z\", \"t_time_no_millis\");\n        assertParseException(\"T10:15:3\", \"t_time_no_millis\");\n\n        assertSameDate(\"2012-W48-6\", \"week_date\");\n        assertSameDate(\"2012-W01-6\", \"week_date\");\n        assertSameDate(\"2012-W1-6\", \"week_date\");\n        \r\n        assertJodaParseException(\"2012-W1-8\", \"week_date\",\n            \"Cannot parse \\\"2012-W1-8\\\": Value 8 for dayOfWeek must be in the range [1,7]\");\n        assertJavaTimeParseException(\"2012-W1-8\", \"week_date\", \"Text '2012-W1-8' could not be parsed\");\n\n        assertSameDate(\"2012-W48-6T10:15:30.123Z\", \"week_date_time\");\n        assertSameDate(\"2012-W1-6T10:15:30.123Z\", \"week_date_time\");\n\n        assertSameDate(\"2012-W48-6T10:15:30Z\", \"week_date_time_no_millis\");\n        assertSameDate(\"2012-W1-6T10:15:30Z\", \"week_date_time_no_millis\");\n\n        assertSameDate(\"2012\", \"year\");\n        assertSameDate(\"1\", \"year\");\n        assertSameDate(\"-2000\", \"year\");\n\n        assertSameDate(\"2012-12\", \"yearMonth\");\n        assertSameDate(\"1-1\", \"yearMonth\");\n\n        assertSameDate(\"2012-12-31\", \"yearMonthDay\");\n        assertSameDate(\"1-12-31\", \"yearMonthDay\");\n        assertSameDate(\"2012-1-31\", \"yearMonthDay\");\n        assertSameDate(\"2012-12-1\", \"yearMonthDay\");\n\n        assertSameDate(\"2018\", \"week_year\");\n        assertSameDate(\"1\", \"week_year\");\n        assertSameDate(\"2017\", \"week_year\");\n\n        assertSameDate(\"2018-W29\", \"weekyear_week\");\n        assertSameDate(\"2018-W1\", \"weekyear_week\");\n\n        assertSameDate(\"2012-W31-5\", \"weekyear_week_day\");\n        assertSameDate(\"2012-W1-1\", \"weekyear_week_day\");\n    }\n","realPath":"server/src/test/java/org/elasticsearch/common/joda/JavaJodaTimeDuellingTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":72,"status":"M"},{"authorDate":"2018-08-11 01:23:14","commitOrder":6,"curCode":"    public void testDuelingStrictParsing() {\n        assertSameDate(\"2018W313\", \"strict_basic_week_date\");\n        assertParseException(\"18W313\", \"strict_basic_week_date\");\n        assertSameDate(\"2018W313T121212.123Z\", \"strict_basic_week_date_time\");\n        assertParseException(\"2018W313T12128.123Z\", \"strict_basic_week_date_time\");\n        assertParseException(\"2018W313T81212.123Z\", \"strict_basic_week_date_time\");\n        assertParseException(\"2018W313T12812.123Z\", \"strict_basic_week_date_time\");\n        assertParseException(\"2018W313T12812.1Z\", \"strict_basic_week_date_time\");\n        assertSameDate(\"2018W313T121212Z\", \"strict_basic_week_date_time_no_millis\");\n        assertParseException(\"2018W313T12128Z\", \"strict_basic_week_date_time_no_millis\");\n        assertParseException(\"2018W313T81212Z\", \"strict_basic_week_date_time_no_millis\");\n        assertParseException(\"2018W313T12812Z\", \"strict_basic_week_date_time_no_millis\");\n        assertSameDate(\"2018-12-31\", \"strict_date\");\n        assertParseException(\"10000-12-31\", \"strict_date\");\n        assertParseException(\"2018-8-31\", \"strict_date\");\n        assertSameDate(\"2018-12-31T12\", \"strict_date_hour\");\n        assertParseException(\"2018-12-31T8\", \"strict_date_hour\");\n        assertSameDate(\"2018-12-31T12:12\", \"strict_date_hour_minute\");\n        assertParseException(\"2018-12-31T8:3\", \"strict_date_hour_minute\");\n        assertSameDate(\"2018-12-31T12:12:12\", \"strict_date_hour_minute_second\");\n        assertParseException(\"2018-12-31T12:12:1\", \"strict_date_hour_minute_second\");\n        assertSameDate(\"2018-12-31T12:12:12.123\", \"strict_date_hour_minute_second_fraction\");\n        assertSameDate(\"2018-12-31T12:12:12.123\", \"strict_date_hour_minute_second_millis\");\n        assertSameDate(\"2018-12-31T12:12:12.1\", \"strict_date_hour_minute_second_millis\");\n        assertSameDate(\"2018-12-31T12:12:12.1\", \"strict_date_hour_minute_second_fraction\");\n        assertParseException(\"2018-12-31T12:12:12\", \"strict_date_hour_minute_second_millis\");\n        assertParseException(\"2018-12-31T12:12:12\", \"strict_date_hour_minute_second_fraction\");\n        assertSameDate(\"2018-12-31\", \"strict_date_optional_time\");\n        assertParseException(\"2018-12-1\", \"strict_date_optional_time\");\n        assertParseException(\"2018-1-31\", \"strict_date_optional_time\");\n        assertParseException(\"10000-01-31\", \"strict_date_optional_time\");\n        assertSameDate(\"2018-12-31T10:15:30\", \"strict_date_optional_time\");\n        assertParseException(\"2018-12-31T10:15:3\", \"strict_date_optional_time\");\n        assertParseException(\"2018-12-31T10:5:30\", \"strict_date_optional_time\");\n        assertParseException(\"2018-12-31T9:15:30\", \"strict_date_optional_time\");\n        assertSameDate(\"2018-12-31T10:15:30.123Z\", \"strict_date_time\");\n        assertSameDate(\"2018-12-31T10:15:30.11Z\", \"strict_date_time\");\n        assertParseException(\"2018-12-31T10:15:3.123Z\", \"strict_date_time\");\n        assertParseException(\"2018-12-31T10:5:30.123Z\", \"strict_date_time\");\n        assertParseException(\"2018-12-31T1:15:30.123Z\", \"strict_date_time\");\n        assertSameDate(\"2018-12-31T10:15:30Z\", \"strict_date_time_no_millis\");\n        assertParseException(\"2018-12-31T10:5:30Z\", \"strict_date_time_no_millis\");\n        assertParseException(\"2018-12-31T10:15:3Z\", \"strict_date_time_no_millis\");\n        assertParseException(\"2018-12-31T1:15:30Z\", \"strict_date_time_no_millis\");\n        assertSameDate(\"12\", \"strict_hour\");\n        assertSameDate(\"01\", \"strict_hour\");\n        assertParseException(\"1\", \"strict_hour\");\n        assertSameDate(\"12:12\", \"strict_hour_minute\");\n        assertSameDate(\"12:01\", \"strict_hour_minute\");\n        assertParseException(\"12:1\", \"strict_hour_minute\");\n        assertSameDate(\"12:12:12\", \"strict_hour_minute_second\");\n        assertSameDate(\"12:12:01\", \"strict_hour_minute_second\");\n        assertParseException(\"12:12:1\", \"strict_hour_minute_second\");\n        assertSameDate(\"12:12:12.123\", \"strict_hour_minute_second_fraction\");\n        assertSameDate(\"12:12:12.1\", \"strict_hour_minute_second_fraction\");\n        assertParseException(\"12:12:12\", \"strict_hour_minute_second_fraction\");\n        assertSameDate(\"12:12:12.123\", \"strict_hour_minute_second_millis\");\n        assertSameDate(\"12:12:12.1\", \"strict_hour_minute_second_millis\");\n        assertParseException(\"12:12:12\", \"strict_hour_minute_second_millis\");\n        assertSameDate(\"2018-128\", \"strict_ordinal_date\");\n        assertParseException(\"2018-1\", \"strict_ordinal_date\");\n\n        assertSameDate(\"2018-128T10:15:30.123Z\", \"strict_ordinal_date_time\");\n        assertParseException(\"2018-1T10:15:30.123Z\", \"strict_ordinal_date_time\");\n\n        assertSameDate(\"2018-128T10:15:30Z\", \"strict_ordinal_date_time_no_millis\");\n        assertParseException(\"2018-1T10:15:30Z\", \"strict_ordinal_date_time_no_millis\");\n\n        assertSameDate(\"10:15:30.123Z\", \"strict_time\");\n        assertParseException(\"1:15:30.123Z\", \"strict_time\");\n        assertParseException(\"10:1:30.123Z\", \"strict_time\");\n        assertParseException(\"10:15:3.123Z\", \"strict_time\");\n        assertParseException(\"10:15:3.1\", \"strict_time\");\n        assertParseException(\"10:15:3Z\", \"strict_time\");\n\n        assertSameDate(\"10:15:30Z\", \"strict_time_no_millis\");\n        assertSameDate(\"01:15:30Z\", \"strict_time_no_millis\");\n        assertParseException(\"1:15:30Z\", \"strict_time_no_millis\");\n        assertParseException(\"10:5:30Z\", \"strict_time_no_millis\");\n        assertParseException(\"10:15:3Z\", \"strict_time_no_millis\");\n        assertParseException(\"10:15:3\", \"strict_time_no_millis\");\n\n        assertSameDate(\"T10:15:30.123Z\", \"strict_t_time\");\n        assertParseException(\"T1:15:30.123Z\", \"strict_t_time\");\n        assertParseException(\"T10:1:30.123Z\", \"strict_t_time\");\n        assertParseException(\"T10:15:3.123Z\", \"strict_t_time\");\n        assertParseException(\"T10:15:3.1\", \"strict_t_time\");\n        assertParseException(\"T10:15:3Z\", \"strict_t_time\");\n\n        assertSameDate(\"T10:15:30Z\", \"strict_t_time_no_millis\");\n        assertParseException(\"T1:15:30Z\", \"strict_t_time_no_millis\");\n        assertParseException(\"T10:1:30Z\", \"strict_t_time_no_millis\");\n        assertParseException(\"T10:15:3Z\", \"strict_t_time_no_millis\");\n        assertParseException(\"T10:15:3\", \"strict_t_time_no_millis\");\n\n        assertSameDate(\"2012-W48-6\", \"strict_week_date\");\n        assertSameDate(\"2012-W01-6\", \"strict_week_date\");\n        assertParseException(\"2012-W1-6\", \"strict_week_date\");\n        assertParseException(\"2012-W1-8\", \"strict_week_date\");\n\n        assertSameDate(\"2012-W48-6\", \"strict_week_date\");\n        assertSameDate(\"2012-W01-6\", \"strict_week_date\");\n        assertParseException(\"2012-W1-6\", \"strict_week_date\");\n        \r\n        assertJodaParseException(\"2012-W01-8\", \"strict_week_date\",\n            \"Cannot parse \\\"2012-W01-8\\\": Value 8 for dayOfWeek must be in the range [1,7]\");\n        assertJavaTimeParseException(\"2012-W01-8\", \"strict_week_date\", \"Text '2012-W01-8' could not be parsed\");\n\n        assertSameDate(\"2012-W48-6T10:15:30.123Z\", \"strict_week_date_time\");\n        assertParseException(\"2012-W1-6T10:15:30.123Z\", \"strict_week_date_time\");\n\n        assertSameDate(\"2012-W48-6T10:15:30Z\", \"strict_week_date_time_no_millis\");\n        assertParseException(\"2012-W1-6T10:15:30Z\", \"strict_week_date_time_no_millis\");\n\n        assertSameDate(\"2012\", \"strict_year\");\n        assertParseException(\"1\", \"strict_year\");\n        assertSameDate(\"-2000\", \"strict_year\");\n\n        assertSameDate(\"2012-12\", \"strict_year_month\");\n        assertParseException(\"1-1\", \"strict_year_month\");\n\n        assertSameDate(\"2012-12-31\", \"strict_year_month_day\");\n        assertParseException(\"1-12-31\", \"strict_year_month_day\");\n        assertParseException(\"2012-1-31\", \"strict_year_month_day\");\n        assertParseException(\"2012-12-1\", \"strict_year_month_day\");\n\n        assertSameDate(\"2018\", \"strict_weekyear\");\n        assertParseException(\"1\", \"strict_weekyear\");\n\n        assertSameDate(\"2018\", \"strict_weekyear\");\n        assertSameDate(\"2017\", \"strict_weekyear\");\n        assertParseException(\"1\", \"strict_weekyear\");\n\n        assertSameDate(\"2018-W29\", \"strict_weekyear_week\");\n        assertSameDate(\"2018-W01\", \"strict_weekyear_week\");\n        assertParseException(\"2018-W1\", \"strict_weekyear_week\");\n\n        assertSameDate(\"2012-W31-5\", \"strict_weekyear_week_day\");\n        assertParseException(\"2012-W1-1\", \"strict_weekyear_week_day\");\n    }\n","date":"2018-08-11 01:23:14","endLine":369,"groupId":"17876","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"testDuelingStrictParsing","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/15/51a315b26d93122145fe520885ac8289a2f003.src","preCode":"    public void testDuelingStrictParsing() {\n        assertSameDate(\"2018W313\", \"strict_basic_week_date\");\n        assertParseException(\"18W313\", \"strict_basic_week_date\");\n        assertSameDate(\"2018W313T121212.123Z\", \"strict_basic_week_date_time\");\n        assertParseException(\"2018W313T12128.123Z\", \"strict_basic_week_date_time\");\n        assertParseException(\"2018W313T81212.123Z\", \"strict_basic_week_date_time\");\n        assertParseException(\"2018W313T12812.123Z\", \"strict_basic_week_date_time\");\n        assertParseException(\"2018W313T12812.1Z\", \"strict_basic_week_date_time\");\n        assertSameDate(\"2018W313T121212Z\", \"strict_basic_week_date_time_no_millis\");\n        assertParseException(\"2018W313T12128Z\", \"strict_basic_week_date_time_no_millis\");\n        assertParseException(\"2018W313T81212Z\", \"strict_basic_week_date_time_no_millis\");\n        assertParseException(\"2018W313T12812Z\", \"strict_basic_week_date_time_no_millis\");\n        assertSameDate(\"2018-12-31\", \"strict_date\");\n        assertParseException(\"10000-12-31\", \"strict_date\");\n        assertParseException(\"2018-8-31\", \"strict_date\");\n        assertSameDate(\"2018-12-31T12\", \"strict_date_hour\");\n        assertParseException(\"2018-12-31T8\", \"strict_date_hour\");\n        assertSameDate(\"2018-12-31T12:12\", \"strict_date_hour_minute\");\n        assertParseException(\"2018-12-31T8:3\", \"strict_date_hour_minute\");\n        assertSameDate(\"2018-12-31T12:12:12\", \"strict_date_hour_minute_second\");\n        assertParseException(\"2018-12-31T12:12:1\", \"strict_date_hour_minute_second\");\n        assertSameDate(\"2018-12-31T12:12:12.123\", \"strict_date_hour_minute_second_fraction\");\n        assertSameDate(\"2018-12-31T12:12:12.123\", \"strict_date_hour_minute_second_millis\");\n        assertSameDate(\"2018-12-31T12:12:12.1\", \"strict_date_hour_minute_second_millis\");\n        assertSameDate(\"2018-12-31T12:12:12.1\", \"strict_date_hour_minute_second_fraction\");\n        assertParseException(\"2018-12-31T12:12:12\", \"strict_date_hour_minute_second_millis\");\n        assertParseException(\"2018-12-31T12:12:12\", \"strict_date_hour_minute_second_fraction\");\n        assertSameDate(\"2018-12-31\", \"strict_date_optional_time\");\n        assertParseException(\"2018-12-1\", \"strict_date_optional_time\");\n        assertParseException(\"2018-1-31\", \"strict_date_optional_time\");\n        assertParseException(\"10000-01-31\", \"strict_date_optional_time\");\n        assertSameDate(\"2018-12-31T10:15:30\", \"strict_date_optional_time\");\n        assertParseException(\"2018-12-31T10:15:3\", \"strict_date_optional_time\");\n        assertParseException(\"2018-12-31T10:5:30\", \"strict_date_optional_time\");\n        assertParseException(\"2018-12-31T9:15:30\", \"strict_date_optional_time\");\n        assertSameDate(\"2018-12-31T10:15:30.123Z\", \"strict_date_time\");\n        assertSameDate(\"2018-12-31T10:15:30.11Z\", \"strict_date_time\");\n        assertParseException(\"2018-12-31T10:15:3.123Z\", \"strict_date_time\");\n        assertParseException(\"2018-12-31T10:5:30.123Z\", \"strict_date_time\");\n        assertParseException(\"2018-12-31T1:15:30.123Z\", \"strict_date_time\");\n        assertSameDate(\"2018-12-31T10:15:30Z\", \"strict_date_time_no_millis\");\n        assertParseException(\"2018-12-31T10:5:30Z\", \"strict_date_time_no_millis\");\n        assertParseException(\"2018-12-31T10:15:3Z\", \"strict_date_time_no_millis\");\n        assertParseException(\"2018-12-31T1:15:30Z\", \"strict_date_time_no_millis\");\n        assertSameDate(\"12\", \"strict_hour\");\n        assertSameDate(\"01\", \"strict_hour\");\n        assertParseException(\"1\", \"strict_hour\");\n        assertSameDate(\"12:12\", \"strict_hour_minute\");\n        assertSameDate(\"12:01\", \"strict_hour_minute\");\n        assertParseException(\"12:1\", \"strict_hour_minute\");\n        assertSameDate(\"12:12:12\", \"strict_hour_minute_second\");\n        assertSameDate(\"12:12:01\", \"strict_hour_minute_second\");\n        assertParseException(\"12:12:1\", \"strict_hour_minute_second\");\n        assertSameDate(\"12:12:12.123\", \"strict_hour_minute_second_fraction\");\n        assertSameDate(\"12:12:12.1\", \"strict_hour_minute_second_fraction\");\n        assertParseException(\"12:12:12\", \"strict_hour_minute_second_fraction\");\n        assertSameDate(\"12:12:12.123\", \"strict_hour_minute_second_millis\");\n        assertSameDate(\"12:12:12.1\", \"strict_hour_minute_second_millis\");\n        assertParseException(\"12:12:12\", \"strict_hour_minute_second_millis\");\n        assertSameDate(\"2018-128\", \"strict_ordinal_date\");\n        assertParseException(\"2018-1\", \"strict_ordinal_date\");\n\n        assertSameDate(\"2018-128T10:15:30.123Z\", \"strict_ordinal_date_time\");\n        assertParseException(\"2018-1T10:15:30.123Z\", \"strict_ordinal_date_time\");\n\n        assertSameDate(\"2018-128T10:15:30Z\", \"strict_ordinal_date_time_no_millis\");\n        assertParseException(\"2018-1T10:15:30Z\", \"strict_ordinal_date_time_no_millis\");\n\n        assertSameDate(\"10:15:30.123Z\", \"strict_time\");\n        assertParseException(\"1:15:30.123Z\", \"strict_time\");\n        assertParseException(\"10:1:30.123Z\", \"strict_time\");\n        assertParseException(\"10:15:3.123Z\", \"strict_time\");\n        assertParseException(\"10:15:3.1\", \"strict_time\");\n        assertParseException(\"10:15:3Z\", \"strict_time\");\n\n        assertSameDate(\"10:15:30Z\", \"strict_time_no_millis\");\n        assertSameDate(\"01:15:30Z\", \"strict_time_no_millis\");\n        assertParseException(\"1:15:30Z\", \"strict_time_no_millis\");\n        assertParseException(\"10:5:30Z\", \"strict_time_no_millis\");\n        assertParseException(\"10:15:3Z\", \"strict_time_no_millis\");\n        assertParseException(\"10:15:3\", \"strict_time_no_millis\");\n\n        assertSameDate(\"T10:15:30.123Z\", \"strict_t_time\");\n        assertParseException(\"T1:15:30.123Z\", \"strict_t_time\");\n        assertParseException(\"T10:1:30.123Z\", \"strict_t_time\");\n        assertParseException(\"T10:15:3.123Z\", \"strict_t_time\");\n        assertParseException(\"T10:15:3.1\", \"strict_t_time\");\n        assertParseException(\"T10:15:3Z\", \"strict_t_time\");\n\n        assertSameDate(\"T10:15:30Z\", \"strict_t_time_no_millis\");\n        assertParseException(\"T1:15:30Z\", \"strict_t_time_no_millis\");\n        assertParseException(\"T10:1:30Z\", \"strict_t_time_no_millis\");\n        assertParseException(\"T10:15:3Z\", \"strict_t_time_no_millis\");\n        assertParseException(\"T10:15:3\", \"strict_t_time_no_millis\");\n\n        assertSameDate(\"2012-W48-6\", \"strict_week_date\");\n        assertSameDate(\"2012-W01-6\", \"strict_week_date\");\n        assertParseException(\"2012-W1-6\", \"strict_week_date\");\n        assertParseException(\"2012-W1-8\", \"strict_week_date\");\n\n        assertSameDate(\"2012-W48-6\", \"strict_week_date\");\n        assertSameDate(\"2012-W01-6\", \"strict_week_date\");\n        assertParseException(\"2012-W1-6\", \"strict_week_date\");\n        \r\n        assertJodaParseException(\"2012-W01-8\", \"strict_week_date\",\n            \"Cannot parse \\\"2012-W01-8\\\": Value 8 for dayOfWeek must be in the range [1,7]\");\n        assertJavaTimeParseException(\"2012-W01-8\", \"strict_week_date\", \"Text '2012-W01-8' could not be parsed\");\n\n        assertSameDate(\"2012-W48-6T10:15:30.123Z\", \"strict_week_date_time\");\n        assertParseException(\"2012-W1-6T10:15:30.123Z\", \"strict_week_date_time\");\n\n        assertSameDate(\"2012-W48-6T10:15:30Z\", \"strict_week_date_time_no_millis\");\n        assertParseException(\"2012-W1-6T10:15:30Z\", \"strict_week_date_time_no_millis\");\n\n        assertSameDate(\"2012\", \"strict_year\");\n        assertParseException(\"1\", \"strict_year\");\n        assertSameDate(\"-2000\", \"strict_year\");\n\n        assertSameDate(\"2012-12\", \"strict_year_month\");\n        assertParseException(\"1-1\", \"strict_year_month\");\n\n        assertSameDate(\"2012-12-31\", \"strict_year_month_day\");\n        assertParseException(\"1-12-31\", \"strict_year_month_day\");\n        assertParseException(\"2012-1-31\", \"strict_year_month_day\");\n        assertParseException(\"2012-12-1\", \"strict_year_month_day\");\n\n        assertSameDate(\"2018\", \"strict_weekyear\");\n        assertParseException(\"1\", \"strict_weekyear\");\n\n        assertSameDate(\"2018\", \"strict_weekyear\");\n        assertSameDate(\"2017\", \"strict_weekyear\");\n        assertParseException(\"1\", \"strict_weekyear\");\n\n        assertSameDate(\"2018-W29\", \"strict_weekyear_week\");\n        assertSameDate(\"2018-W01\", \"strict_weekyear_week\");\n        assertParseException(\"2018-W1\", \"strict_weekyear_week\");\n\n        assertSameDate(\"2012-W31-5\", \"strict_weekyear_week_day\");\n        assertParseException(\"2012-W1-1\", \"strict_weekyear_week_day\");\n    }\n","realPath":"server/src/test/java/org/elasticsearch/common/joda/JavaJodaTimeDuellingTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":230,"status":"N"}],"commitId":"0b22ca3a0f911bdb60023cc88003838c5ebeabfb","commitMessage":"@@@Core: Deprecate use of scientific notation in epoch time parsing (#36691)\n\nThe joda epoch parsing code currently supports passing epoch time as a\nnumber in scientific notation. However.  no systems appear to exist which\noutput timestamps in scientific notation. In java time.  it is\nparticularly complex to implement scientific notation timestamp parsing\nwithin a DateTimeFormatter. This commit adds a deprecation warning when\nthe epoch time parsers in joda parse scientific notation.  so that it can\nbe removed when switching to java time.\njoda are passed a time in scientific notation.\n","date":"2018-12-19 01:51:03","modifiedFileCount":"3","status":"M","submitter":"Ryan Ernst"},{"authorTime":"2018-08-11 01:23:14","codes":[{"authorDate":"2018-12-20 16:17:06","commitOrder":7,"curCode":"    public void testDuellingFormatsValidParsing() {\n        assertSameDate(\"1522332219\", \"epoch_second\");\n        assertSameDate(\"1522332219.\", \"epoch_second\");\n        assertSameDate(\"1522332219.0\", \"epoch_second\");\n        assertSameDate(\"0\", \"epoch_second\");\n        assertSameDate(\"1\", \"epoch_second\");\n        assertSameDate(\"1522332219321\", \"epoch_millis\");\n        assertSameDate(\"0\", \"epoch_millis\");\n        assertSameDate(\"1\", \"epoch_millis\");\n\n        assertSameDate(\"20181126\", \"basic_date\");\n        assertSameDate(\"20181126T121212.123Z\", \"basic_date_time\");\n        assertSameDate(\"20181126T121212.123+10:00\", \"basic_date_time\");\n        assertSameDate(\"20181126T121212.123-0800\", \"basic_date_time\");\n\n        assertSameDate(\"20181126T121212Z\", \"basic_date_time_no_millis\");\n        assertSameDate(\"2018363\", \"basic_ordinal_date\");\n        assertSameDate(\"2018363T121212.123Z\", \"basic_ordinal_date_time\");\n        assertSameDate(\"2018363T121212Z\", \"basic_ordinal_date_time_no_millis\");\n        assertSameDate(\"121212.123Z\", \"basic_time\");\n        assertSameDate(\"121212Z\", \"basic_time_no_millis\");\n        assertSameDate(\"T121212.123Z\", \"basic_t_time\");\n        assertSameDate(\"T121212Z\", \"basic_t_time_no_millis\");\n        assertSameDate(\"2018W313\", \"basic_week_date\");\n        assertSameDate(\"1W313\", \"basic_week_date\");\n        assertSameDate(\"18W313\", \"basic_week_date\");\n        assertSameDate(\"2018W313T121212.123Z\", \"basic_week_date_time\");\n        assertSameDate(\"2018W313T121212Z\", \"basic_week_date_time_no_millis\");\n\n        assertSameDate(\"2018-12-31\", \"date\");\n        assertSameDate(\"18-5-6\", \"date\");\n        assertSameDate(\"10000-5-6\", \"date\");\n\n        assertSameDate(\"2018-12-31T12\", \"date_hour\");\n        assertSameDate(\"2018-12-31T8\", \"date_hour\");\n\n        assertSameDate(\"2018-12-31T12:12\", \"date_hour_minute\");\n        assertSameDate(\"2018-12-31T8:3\", \"date_hour_minute\");\n\n        assertSameDate(\"2018-12-31T12:12:12\", \"date_hour_minute_second\");\n        assertSameDate(\"2018-12-31T12:12:1\", \"date_hour_minute_second\");\n\n        assertSameDate(\"2018-12-31T12:12:12.123\", \"date_hour_minute_second_fraction\");\n        assertSameDate(\"2018-12-31T12:12:12.123\", \"date_hour_minute_second_millis\");\n        assertSameDate(\"2018-12-31T12:12:12.1\", \"date_hour_minute_second_millis\");\n        assertSameDate(\"2018-12-31T12:12:12.1\", \"date_hour_minute_second_fraction\");\n\n        assertSameDate(\"10000\", \"date_optional_time\");\n        assertSameDate(\"10000T\", \"date_optional_time\");\n        assertSameDate(\"2018\", \"date_optional_time\");\n        assertSameDate(\"2018T\", \"date_optional_time\");\n        assertSameDate(\"2018-05\", \"date_optional_time\");\n        assertSameDate(\"2018-05-30\", \"date_optional_time\");\n        assertSameDate(\"2018-05-30T20\", \"date_optional_time\");\n        assertSameDate(\"2018-05-30T20:21\", \"date_optional_time\");\n        assertSameDate(\"2018-05-30T20:21:23\", \"date_optional_time\");\n        assertSameDate(\"2018-05-30T20:21:23.123\", \"date_optional_time\");\n        assertSameDate(\"2018-12-1\", \"date_optional_time\");\n        assertSameDate(\"2018-12-31T10:15:30\", \"date_optional_time\");\n        assertSameDate(\"2018-12-31T10:15:3\", \"date_optional_time\");\n        assertSameDate(\"2018-12-31T10:5:30\", \"date_optional_time\");\n        assertSameDate(\"2018-12-31T1:15:30\", \"date_optional_time\");\n\n        assertSameDate(\"2018-12-31T10:15:30.123Z\", \"date_time\");\n        assertSameDate(\"2018-12-31T10:15:30.11Z\", \"date_time\");\n        assertSameDate(\"2018-12-31T10:15:3.123Z\", \"date_time\");\n\n        assertSameDate(\"2018-12-31T10:15:30Z\", \"date_time_no_millis\");\n        assertSameDate(\"2018-12-31T10:5:30Z\", \"date_time_no_millis\");\n        assertSameDate(\"2018-12-31T10:15:3Z\", \"date_time_no_millis\");\n        assertSameDate(\"2018-12-31T1:15:30Z\", \"date_time_no_millis\");\n\n        assertSameDate(\"12\", \"hour\");\n        assertSameDate(\"01\", \"hour\");\n        assertSameDate(\"1\", \"hour\");\n\n        assertSameDate(\"12:12\", \"hour_minute\");\n        assertSameDate(\"12:01\", \"hour_minute\");\n        assertSameDate(\"12:1\", \"hour_minute\");\n\n        assertSameDate(\"12:12:12\", \"hour_minute_second\");\n        assertSameDate(\"12:12:01\", \"hour_minute_second\");\n        assertSameDate(\"12:12:1\", \"hour_minute_second\");\n\n        assertSameDate(\"12:12:12.123\", \"hour_minute_second_fraction\");\n        assertSameDate(\"12:12:12.1\", \"hour_minute_second_fraction\");\n        assertParseException(\"12:12:12\", \"hour_minute_second_fraction\");\n        assertSameDate(\"12:12:12.123\", \"hour_minute_second_millis\");\n        assertSameDate(\"12:12:12.1\", \"hour_minute_second_millis\");\n        assertParseException(\"12:12:12\", \"hour_minute_second_millis\");\n\n        assertSameDate(\"2018-128\", \"ordinal_date\");\n        assertSameDate(\"2018-1\", \"ordinal_date\");\n\n        assertSameDate(\"2018-128T10:15:30.123Z\", \"ordinal_date_time\");\n        assertSameDate(\"2018-1T10:15:30.123Z\", \"ordinal_date_time\");\n\n        assertSameDate(\"2018-128T10:15:30Z\", \"ordinal_date_time_no_millis\");\n        assertSameDate(\"2018-1T10:15:30Z\", \"ordinal_date_time_no_millis\");\n\n        assertSameDate(\"10:15:30.123Z\", \"time\");\n        assertSameDate(\"1:15:30.123Z\", \"time\");\n        assertSameDate(\"10:1:30.123Z\", \"time\");\n        assertSameDate(\"10:15:3.123Z\", \"time\");\n        assertParseException(\"10:15:3.1\", \"time\");\n        assertParseException(\"10:15:3Z\", \"time\");\n\n        assertSameDate(\"10:15:30Z\", \"time_no_millis\");\n        assertSameDate(\"01:15:30Z\", \"time_no_millis\");\n        assertSameDate(\"1:15:30Z\", \"time_no_millis\");\n        assertSameDate(\"10:5:30Z\", \"time_no_millis\");\n        assertSameDate(\"10:15:3Z\", \"time_no_millis\");\n        assertParseException(\"10:15:3\", \"time_no_millis\");\n\n        assertSameDate(\"T10:15:30.123Z\", \"t_time\");\n        assertSameDate(\"T1:15:30.123Z\", \"t_time\");\n        assertSameDate(\"T10:1:30.123Z\", \"t_time\");\n        assertSameDate(\"T10:15:3.123Z\", \"t_time\");\n        assertParseException(\"T10:15:3.1\", \"t_time\");\n        assertParseException(\"T10:15:3Z\", \"t_time\");\n\n        assertSameDate(\"T10:15:30Z\", \"t_time_no_millis\");\n        assertSameDate(\"T1:15:30Z\", \"t_time_no_millis\");\n        assertSameDate(\"T10:1:30Z\", \"t_time_no_millis\");\n        assertSameDate(\"T10:15:3Z\", \"t_time_no_millis\");\n        assertParseException(\"T10:15:3\", \"t_time_no_millis\");\n\n        assertSameDate(\"2012-W48-6\", \"week_date\");\n        assertSameDate(\"2012-W01-6\", \"week_date\");\n        assertSameDate(\"2012-W1-6\", \"week_date\");\n        \r\n        assertJodaParseException(\"2012-W1-8\", \"week_date\",\n            \"Cannot parse \\\"2012-W1-8\\\": Value 8 for dayOfWeek must be in the range [1,7]\");\n        assertJavaTimeParseException(\"2012-W1-8\", \"week_date\", \"Text '2012-W1-8' could not be parsed\");\n\n        assertSameDate(\"2012-W48-6T10:15:30.123Z\", \"week_date_time\");\n        assertSameDate(\"2012-W1-6T10:15:30.123Z\", \"week_date_time\");\n\n        assertSameDate(\"2012-W48-6T10:15:30Z\", \"week_date_time_no_millis\");\n        assertSameDate(\"2012-W1-6T10:15:30Z\", \"week_date_time_no_millis\");\n\n        assertSameDate(\"2012\", \"year\");\n        assertSameDate(\"1\", \"year\");\n        assertSameDate(\"-2000\", \"year\");\n\n        assertSameDate(\"2012-12\", \"yearMonth\");\n        assertSameDate(\"1-1\", \"yearMonth\");\n\n        assertSameDate(\"2012-12-31\", \"yearMonthDay\");\n        assertSameDate(\"1-12-31\", \"yearMonthDay\");\n        assertSameDate(\"2012-1-31\", \"yearMonthDay\");\n        assertSameDate(\"2012-12-1\", \"yearMonthDay\");\n\n        assertSameDate(\"2018\", \"week_year\");\n        assertSameDate(\"1\", \"week_year\");\n        assertSameDate(\"2017\", \"week_year\");\n\n        assertSameDate(\"2018-W29\", \"weekyear_week\");\n        assertSameDate(\"2018-W1\", \"weekyear_week\");\n\n        assertSameDate(\"2012-W31-5\", \"weekyear_week_day\");\n        assertSameDate(\"2012-W1-1\", \"weekyear_week_day\");\n    }\n","date":"2018-12-20 16:17:06","endLine":234,"groupId":"28896","id":13,"instanceNumber":1,"isCurCommit":0,"methodName":"testDuellingFormatsValidParsing","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/58/40f7ef60191c9a8d3f75d149df2af4574c1fd0.src","preCode":"    public void testDuellingFormatsValidParsing() {\n        assertSameDate(\"1522332219\", \"epoch_second\");\n        assertSameDate(\"1522332219.\", \"epoch_second\");\n        assertSameDate(\"1522332219.0\", \"epoch_second\");\n        assertSameDate(\"0\", \"epoch_second\");\n        assertSameDate(\"1\", \"epoch_second\");\n        assertSameDate(\"-1\", \"epoch_second\");\n        assertSameDate(\"-1522332219\", \"epoch_second\");\n        assertSameDate(\"1522332219321\", \"epoch_millis\");\n        assertSameDate(\"0\", \"epoch_millis\");\n        assertSameDate(\"1\", \"epoch_millis\");\n        assertSameDate(\"-1\", \"epoch_millis\");\n        assertSameDate(\"-1522332219321\", \"epoch_millis\");\n\n        assertSameDate(\"20181126\", \"basic_date\");\n        assertSameDate(\"20181126T121212.123Z\", \"basic_date_time\");\n        assertSameDate(\"20181126T121212.123+10:00\", \"basic_date_time\");\n        assertSameDate(\"20181126T121212.123-0800\", \"basic_date_time\");\n\n        assertSameDate(\"20181126T121212Z\", \"basic_date_time_no_millis\");\n        assertSameDate(\"2018363\", \"basic_ordinal_date\");\n        assertSameDate(\"2018363T121212.123Z\", \"basic_ordinal_date_time\");\n        assertSameDate(\"2018363T121212Z\", \"basic_ordinal_date_time_no_millis\");\n        assertSameDate(\"121212.123Z\", \"basic_time\");\n        assertSameDate(\"121212Z\", \"basic_time_no_millis\");\n        assertSameDate(\"T121212.123Z\", \"basic_t_time\");\n        assertSameDate(\"T121212Z\", \"basic_t_time_no_millis\");\n        assertSameDate(\"2018W313\", \"basic_week_date\");\n        assertSameDate(\"1W313\", \"basic_week_date\");\n        assertSameDate(\"18W313\", \"basic_week_date\");\n        assertSameDate(\"2018W313T121212.123Z\", \"basic_week_date_time\");\n        assertSameDate(\"2018W313T121212Z\", \"basic_week_date_time_no_millis\");\n\n        assertSameDate(\"2018-12-31\", \"date\");\n        assertSameDate(\"18-5-6\", \"date\");\n        assertSameDate(\"10000-5-6\", \"date\");\n\n        assertSameDate(\"2018-12-31T12\", \"date_hour\");\n        assertSameDate(\"2018-12-31T8\", \"date_hour\");\n\n        assertSameDate(\"2018-12-31T12:12\", \"date_hour_minute\");\n        assertSameDate(\"2018-12-31T8:3\", \"date_hour_minute\");\n\n        assertSameDate(\"2018-12-31T12:12:12\", \"date_hour_minute_second\");\n        assertSameDate(\"2018-12-31T12:12:1\", \"date_hour_minute_second\");\n\n        assertSameDate(\"2018-12-31T12:12:12.123\", \"date_hour_minute_second_fraction\");\n        assertSameDate(\"2018-12-31T12:12:12.123\", \"date_hour_minute_second_millis\");\n        assertSameDate(\"2018-12-31T12:12:12.1\", \"date_hour_minute_second_millis\");\n        assertSameDate(\"2018-12-31T12:12:12.1\", \"date_hour_minute_second_fraction\");\n\n        assertSameDate(\"10000\", \"date_optional_time\");\n        assertSameDate(\"10000T\", \"date_optional_time\");\n        assertSameDate(\"2018\", \"date_optional_time\");\n        assertSameDate(\"2018T\", \"date_optional_time\");\n        assertSameDate(\"2018-05\", \"date_optional_time\");\n        assertSameDate(\"2018-05-30\", \"date_optional_time\");\n        assertSameDate(\"2018-05-30T20\", \"date_optional_time\");\n        assertSameDate(\"2018-05-30T20:21\", \"date_optional_time\");\n        assertSameDate(\"2018-05-30T20:21:23\", \"date_optional_time\");\n        assertSameDate(\"2018-05-30T20:21:23.123\", \"date_optional_time\");\n        assertSameDate(\"2018-12-1\", \"date_optional_time\");\n        assertSameDate(\"2018-12-31T10:15:30\", \"date_optional_time\");\n        assertSameDate(\"2018-12-31T10:15:3\", \"date_optional_time\");\n        assertSameDate(\"2018-12-31T10:5:30\", \"date_optional_time\");\n        assertSameDate(\"2018-12-31T1:15:30\", \"date_optional_time\");\n\n        assertSameDate(\"2018-12-31T10:15:30.123Z\", \"date_time\");\n        assertSameDate(\"2018-12-31T10:15:30.11Z\", \"date_time\");\n        assertSameDate(\"2018-12-31T10:15:3.123Z\", \"date_time\");\n\n        assertSameDate(\"2018-12-31T10:15:30Z\", \"date_time_no_millis\");\n        assertSameDate(\"2018-12-31T10:5:30Z\", \"date_time_no_millis\");\n        assertSameDate(\"2018-12-31T10:15:3Z\", \"date_time_no_millis\");\n        assertSameDate(\"2018-12-31T1:15:30Z\", \"date_time_no_millis\");\n\n        assertSameDate(\"12\", \"hour\");\n        assertSameDate(\"01\", \"hour\");\n        assertSameDate(\"1\", \"hour\");\n\n        assertSameDate(\"12:12\", \"hour_minute\");\n        assertSameDate(\"12:01\", \"hour_minute\");\n        assertSameDate(\"12:1\", \"hour_minute\");\n\n        assertSameDate(\"12:12:12\", \"hour_minute_second\");\n        assertSameDate(\"12:12:01\", \"hour_minute_second\");\n        assertSameDate(\"12:12:1\", \"hour_minute_second\");\n\n        assertSameDate(\"12:12:12.123\", \"hour_minute_second_fraction\");\n        assertSameDate(\"12:12:12.1\", \"hour_minute_second_fraction\");\n        assertParseException(\"12:12:12\", \"hour_minute_second_fraction\");\n        assertSameDate(\"12:12:12.123\", \"hour_minute_second_millis\");\n        assertSameDate(\"12:12:12.1\", \"hour_minute_second_millis\");\n        assertParseException(\"12:12:12\", \"hour_minute_second_millis\");\n\n        assertSameDate(\"2018-128\", \"ordinal_date\");\n        assertSameDate(\"2018-1\", \"ordinal_date\");\n\n        assertSameDate(\"2018-128T10:15:30.123Z\", \"ordinal_date_time\");\n        assertSameDate(\"2018-1T10:15:30.123Z\", \"ordinal_date_time\");\n\n        assertSameDate(\"2018-128T10:15:30Z\", \"ordinal_date_time_no_millis\");\n        assertSameDate(\"2018-1T10:15:30Z\", \"ordinal_date_time_no_millis\");\n\n        assertSameDate(\"10:15:30.123Z\", \"time\");\n        assertSameDate(\"1:15:30.123Z\", \"time\");\n        assertSameDate(\"10:1:30.123Z\", \"time\");\n        assertSameDate(\"10:15:3.123Z\", \"time\");\n        assertParseException(\"10:15:3.1\", \"time\");\n        assertParseException(\"10:15:3Z\", \"time\");\n\n        assertSameDate(\"10:15:30Z\", \"time_no_millis\");\n        assertSameDate(\"01:15:30Z\", \"time_no_millis\");\n        assertSameDate(\"1:15:30Z\", \"time_no_millis\");\n        assertSameDate(\"10:5:30Z\", \"time_no_millis\");\n        assertSameDate(\"10:15:3Z\", \"time_no_millis\");\n        assertParseException(\"10:15:3\", \"time_no_millis\");\n\n        assertSameDate(\"T10:15:30.123Z\", \"t_time\");\n        assertSameDate(\"T1:15:30.123Z\", \"t_time\");\n        assertSameDate(\"T10:1:30.123Z\", \"t_time\");\n        assertSameDate(\"T10:15:3.123Z\", \"t_time\");\n        assertParseException(\"T10:15:3.1\", \"t_time\");\n        assertParseException(\"T10:15:3Z\", \"t_time\");\n\n        assertSameDate(\"T10:15:30Z\", \"t_time_no_millis\");\n        assertSameDate(\"T1:15:30Z\", \"t_time_no_millis\");\n        assertSameDate(\"T10:1:30Z\", \"t_time_no_millis\");\n        assertSameDate(\"T10:15:3Z\", \"t_time_no_millis\");\n        assertParseException(\"T10:15:3\", \"t_time_no_millis\");\n\n        assertSameDate(\"2012-W48-6\", \"week_date\");\n        assertSameDate(\"2012-W01-6\", \"week_date\");\n        assertSameDate(\"2012-W1-6\", \"week_date\");\n        \r\n        assertJodaParseException(\"2012-W1-8\", \"week_date\",\n            \"Cannot parse \\\"2012-W1-8\\\": Value 8 for dayOfWeek must be in the range [1,7]\");\n        assertJavaTimeParseException(\"2012-W1-8\", \"week_date\", \"Text '2012-W1-8' could not be parsed\");\n\n        assertSameDate(\"2012-W48-6T10:15:30.123Z\", \"week_date_time\");\n        assertSameDate(\"2012-W1-6T10:15:30.123Z\", \"week_date_time\");\n\n        assertSameDate(\"2012-W48-6T10:15:30Z\", \"week_date_time_no_millis\");\n        assertSameDate(\"2012-W1-6T10:15:30Z\", \"week_date_time_no_millis\");\n\n        assertSameDate(\"2012\", \"year\");\n        assertSameDate(\"1\", \"year\");\n        assertSameDate(\"-2000\", \"year\");\n\n        assertSameDate(\"2012-12\", \"yearMonth\");\n        assertSameDate(\"1-1\", \"yearMonth\");\n\n        assertSameDate(\"2012-12-31\", \"yearMonthDay\");\n        assertSameDate(\"1-12-31\", \"yearMonthDay\");\n        assertSameDate(\"2012-1-31\", \"yearMonthDay\");\n        assertSameDate(\"2012-12-1\", \"yearMonthDay\");\n\n        assertSameDate(\"2018\", \"week_year\");\n        assertSameDate(\"1\", \"week_year\");\n        assertSameDate(\"2017\", \"week_year\");\n\n        assertSameDate(\"2018-W29\", \"weekyear_week\");\n        assertSameDate(\"2018-W1\", \"weekyear_week\");\n\n        assertSameDate(\"2012-W31-5\", \"weekyear_week_day\");\n        assertSameDate(\"2012-W1-1\", \"weekyear_week_day\");\n    }\n","realPath":"server/src/test/java/org/elasticsearch/common/joda/JavaJodaTimeDuellingTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":72,"status":"M"},{"authorDate":"2018-08-11 01:23:14","commitOrder":7,"curCode":"    public void testDuelingStrictParsing() {\n        assertSameDate(\"2018W313\", \"strict_basic_week_date\");\n        assertParseException(\"18W313\", \"strict_basic_week_date\");\n        assertSameDate(\"2018W313T121212.123Z\", \"strict_basic_week_date_time\");\n        assertParseException(\"2018W313T12128.123Z\", \"strict_basic_week_date_time\");\n        assertParseException(\"2018W313T81212.123Z\", \"strict_basic_week_date_time\");\n        assertParseException(\"2018W313T12812.123Z\", \"strict_basic_week_date_time\");\n        assertParseException(\"2018W313T12812.1Z\", \"strict_basic_week_date_time\");\n        assertSameDate(\"2018W313T121212Z\", \"strict_basic_week_date_time_no_millis\");\n        assertParseException(\"2018W313T12128Z\", \"strict_basic_week_date_time_no_millis\");\n        assertParseException(\"2018W313T81212Z\", \"strict_basic_week_date_time_no_millis\");\n        assertParseException(\"2018W313T12812Z\", \"strict_basic_week_date_time_no_millis\");\n        assertSameDate(\"2018-12-31\", \"strict_date\");\n        assertParseException(\"10000-12-31\", \"strict_date\");\n        assertParseException(\"2018-8-31\", \"strict_date\");\n        assertSameDate(\"2018-12-31T12\", \"strict_date_hour\");\n        assertParseException(\"2018-12-31T8\", \"strict_date_hour\");\n        assertSameDate(\"2018-12-31T12:12\", \"strict_date_hour_minute\");\n        assertParseException(\"2018-12-31T8:3\", \"strict_date_hour_minute\");\n        assertSameDate(\"2018-12-31T12:12:12\", \"strict_date_hour_minute_second\");\n        assertParseException(\"2018-12-31T12:12:1\", \"strict_date_hour_minute_second\");\n        assertSameDate(\"2018-12-31T12:12:12.123\", \"strict_date_hour_minute_second_fraction\");\n        assertSameDate(\"2018-12-31T12:12:12.123\", \"strict_date_hour_minute_second_millis\");\n        assertSameDate(\"2018-12-31T12:12:12.1\", \"strict_date_hour_minute_second_millis\");\n        assertSameDate(\"2018-12-31T12:12:12.1\", \"strict_date_hour_minute_second_fraction\");\n        assertParseException(\"2018-12-31T12:12:12\", \"strict_date_hour_minute_second_millis\");\n        assertParseException(\"2018-12-31T12:12:12\", \"strict_date_hour_minute_second_fraction\");\n        assertSameDate(\"2018-12-31\", \"strict_date_optional_time\");\n        assertParseException(\"2018-12-1\", \"strict_date_optional_time\");\n        assertParseException(\"2018-1-31\", \"strict_date_optional_time\");\n        assertParseException(\"10000-01-31\", \"strict_date_optional_time\");\n        assertSameDate(\"2018-12-31T10:15:30\", \"strict_date_optional_time\");\n        assertParseException(\"2018-12-31T10:15:3\", \"strict_date_optional_time\");\n        assertParseException(\"2018-12-31T10:5:30\", \"strict_date_optional_time\");\n        assertParseException(\"2018-12-31T9:15:30\", \"strict_date_optional_time\");\n        assertSameDate(\"2018-12-31T10:15:30.123Z\", \"strict_date_time\");\n        assertSameDate(\"2018-12-31T10:15:30.11Z\", \"strict_date_time\");\n        assertParseException(\"2018-12-31T10:15:3.123Z\", \"strict_date_time\");\n        assertParseException(\"2018-12-31T10:5:30.123Z\", \"strict_date_time\");\n        assertParseException(\"2018-12-31T1:15:30.123Z\", \"strict_date_time\");\n        assertSameDate(\"2018-12-31T10:15:30Z\", \"strict_date_time_no_millis\");\n        assertParseException(\"2018-12-31T10:5:30Z\", \"strict_date_time_no_millis\");\n        assertParseException(\"2018-12-31T10:15:3Z\", \"strict_date_time_no_millis\");\n        assertParseException(\"2018-12-31T1:15:30Z\", \"strict_date_time_no_millis\");\n        assertSameDate(\"12\", \"strict_hour\");\n        assertSameDate(\"01\", \"strict_hour\");\n        assertParseException(\"1\", \"strict_hour\");\n        assertSameDate(\"12:12\", \"strict_hour_minute\");\n        assertSameDate(\"12:01\", \"strict_hour_minute\");\n        assertParseException(\"12:1\", \"strict_hour_minute\");\n        assertSameDate(\"12:12:12\", \"strict_hour_minute_second\");\n        assertSameDate(\"12:12:01\", \"strict_hour_minute_second\");\n        assertParseException(\"12:12:1\", \"strict_hour_minute_second\");\n        assertSameDate(\"12:12:12.123\", \"strict_hour_minute_second_fraction\");\n        assertSameDate(\"12:12:12.1\", \"strict_hour_minute_second_fraction\");\n        assertParseException(\"12:12:12\", \"strict_hour_minute_second_fraction\");\n        assertSameDate(\"12:12:12.123\", \"strict_hour_minute_second_millis\");\n        assertSameDate(\"12:12:12.1\", \"strict_hour_minute_second_millis\");\n        assertParseException(\"12:12:12\", \"strict_hour_minute_second_millis\");\n        assertSameDate(\"2018-128\", \"strict_ordinal_date\");\n        assertParseException(\"2018-1\", \"strict_ordinal_date\");\n\n        assertSameDate(\"2018-128T10:15:30.123Z\", \"strict_ordinal_date_time\");\n        assertParseException(\"2018-1T10:15:30.123Z\", \"strict_ordinal_date_time\");\n\n        assertSameDate(\"2018-128T10:15:30Z\", \"strict_ordinal_date_time_no_millis\");\n        assertParseException(\"2018-1T10:15:30Z\", \"strict_ordinal_date_time_no_millis\");\n\n        assertSameDate(\"10:15:30.123Z\", \"strict_time\");\n        assertParseException(\"1:15:30.123Z\", \"strict_time\");\n        assertParseException(\"10:1:30.123Z\", \"strict_time\");\n        assertParseException(\"10:15:3.123Z\", \"strict_time\");\n        assertParseException(\"10:15:3.1\", \"strict_time\");\n        assertParseException(\"10:15:3Z\", \"strict_time\");\n\n        assertSameDate(\"10:15:30Z\", \"strict_time_no_millis\");\n        assertSameDate(\"01:15:30Z\", \"strict_time_no_millis\");\n        assertParseException(\"1:15:30Z\", \"strict_time_no_millis\");\n        assertParseException(\"10:5:30Z\", \"strict_time_no_millis\");\n        assertParseException(\"10:15:3Z\", \"strict_time_no_millis\");\n        assertParseException(\"10:15:3\", \"strict_time_no_millis\");\n\n        assertSameDate(\"T10:15:30.123Z\", \"strict_t_time\");\n        assertParseException(\"T1:15:30.123Z\", \"strict_t_time\");\n        assertParseException(\"T10:1:30.123Z\", \"strict_t_time\");\n        assertParseException(\"T10:15:3.123Z\", \"strict_t_time\");\n        assertParseException(\"T10:15:3.1\", \"strict_t_time\");\n        assertParseException(\"T10:15:3Z\", \"strict_t_time\");\n\n        assertSameDate(\"T10:15:30Z\", \"strict_t_time_no_millis\");\n        assertParseException(\"T1:15:30Z\", \"strict_t_time_no_millis\");\n        assertParseException(\"T10:1:30Z\", \"strict_t_time_no_millis\");\n        assertParseException(\"T10:15:3Z\", \"strict_t_time_no_millis\");\n        assertParseException(\"T10:15:3\", \"strict_t_time_no_millis\");\n\n        assertSameDate(\"2012-W48-6\", \"strict_week_date\");\n        assertSameDate(\"2012-W01-6\", \"strict_week_date\");\n        assertParseException(\"2012-W1-6\", \"strict_week_date\");\n        assertParseException(\"2012-W1-8\", \"strict_week_date\");\n\n        assertSameDate(\"2012-W48-6\", \"strict_week_date\");\n        assertSameDate(\"2012-W01-6\", \"strict_week_date\");\n        assertParseException(\"2012-W1-6\", \"strict_week_date\");\n        \r\n        assertJodaParseException(\"2012-W01-8\", \"strict_week_date\",\n            \"Cannot parse \\\"2012-W01-8\\\": Value 8 for dayOfWeek must be in the range [1,7]\");\n        assertJavaTimeParseException(\"2012-W01-8\", \"strict_week_date\", \"Text '2012-W01-8' could not be parsed\");\n\n        assertSameDate(\"2012-W48-6T10:15:30.123Z\", \"strict_week_date_time\");\n        assertParseException(\"2012-W1-6T10:15:30.123Z\", \"strict_week_date_time\");\n\n        assertSameDate(\"2012-W48-6T10:15:30Z\", \"strict_week_date_time_no_millis\");\n        assertParseException(\"2012-W1-6T10:15:30Z\", \"strict_week_date_time_no_millis\");\n\n        assertSameDate(\"2012\", \"strict_year\");\n        assertParseException(\"1\", \"strict_year\");\n        assertSameDate(\"-2000\", \"strict_year\");\n\n        assertSameDate(\"2012-12\", \"strict_year_month\");\n        assertParseException(\"1-1\", \"strict_year_month\");\n\n        assertSameDate(\"2012-12-31\", \"strict_year_month_day\");\n        assertParseException(\"1-12-31\", \"strict_year_month_day\");\n        assertParseException(\"2012-1-31\", \"strict_year_month_day\");\n        assertParseException(\"2012-12-1\", \"strict_year_month_day\");\n\n        assertSameDate(\"2018\", \"strict_weekyear\");\n        assertParseException(\"1\", \"strict_weekyear\");\n\n        assertSameDate(\"2018\", \"strict_weekyear\");\n        assertSameDate(\"2017\", \"strict_weekyear\");\n        assertParseException(\"1\", \"strict_weekyear\");\n\n        assertSameDate(\"2018-W29\", \"strict_weekyear_week\");\n        assertSameDate(\"2018-W01\", \"strict_weekyear_week\");\n        assertParseException(\"2018-W1\", \"strict_weekyear_week\");\n\n        assertSameDate(\"2012-W31-5\", \"strict_weekyear_week_day\");\n        assertParseException(\"2012-W1-1\", \"strict_weekyear_week_day\");\n    }\n","date":"2018-08-11 01:23:14","endLine":369,"groupId":"17876","id":14,"instanceNumber":2,"isCurCommit":0,"methodName":"testDuelingStrictParsing","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/15/51a315b26d93122145fe520885ac8289a2f003.src","preCode":"    public void testDuelingStrictParsing() {\n        assertSameDate(\"2018W313\", \"strict_basic_week_date\");\n        assertParseException(\"18W313\", \"strict_basic_week_date\");\n        assertSameDate(\"2018W313T121212.123Z\", \"strict_basic_week_date_time\");\n        assertParseException(\"2018W313T12128.123Z\", \"strict_basic_week_date_time\");\n        assertParseException(\"2018W313T81212.123Z\", \"strict_basic_week_date_time\");\n        assertParseException(\"2018W313T12812.123Z\", \"strict_basic_week_date_time\");\n        assertParseException(\"2018W313T12812.1Z\", \"strict_basic_week_date_time\");\n        assertSameDate(\"2018W313T121212Z\", \"strict_basic_week_date_time_no_millis\");\n        assertParseException(\"2018W313T12128Z\", \"strict_basic_week_date_time_no_millis\");\n        assertParseException(\"2018W313T81212Z\", \"strict_basic_week_date_time_no_millis\");\n        assertParseException(\"2018W313T12812Z\", \"strict_basic_week_date_time_no_millis\");\n        assertSameDate(\"2018-12-31\", \"strict_date\");\n        assertParseException(\"10000-12-31\", \"strict_date\");\n        assertParseException(\"2018-8-31\", \"strict_date\");\n        assertSameDate(\"2018-12-31T12\", \"strict_date_hour\");\n        assertParseException(\"2018-12-31T8\", \"strict_date_hour\");\n        assertSameDate(\"2018-12-31T12:12\", \"strict_date_hour_minute\");\n        assertParseException(\"2018-12-31T8:3\", \"strict_date_hour_minute\");\n        assertSameDate(\"2018-12-31T12:12:12\", \"strict_date_hour_minute_second\");\n        assertParseException(\"2018-12-31T12:12:1\", \"strict_date_hour_minute_second\");\n        assertSameDate(\"2018-12-31T12:12:12.123\", \"strict_date_hour_minute_second_fraction\");\n        assertSameDate(\"2018-12-31T12:12:12.123\", \"strict_date_hour_minute_second_millis\");\n        assertSameDate(\"2018-12-31T12:12:12.1\", \"strict_date_hour_minute_second_millis\");\n        assertSameDate(\"2018-12-31T12:12:12.1\", \"strict_date_hour_minute_second_fraction\");\n        assertParseException(\"2018-12-31T12:12:12\", \"strict_date_hour_minute_second_millis\");\n        assertParseException(\"2018-12-31T12:12:12\", \"strict_date_hour_minute_second_fraction\");\n        assertSameDate(\"2018-12-31\", \"strict_date_optional_time\");\n        assertParseException(\"2018-12-1\", \"strict_date_optional_time\");\n        assertParseException(\"2018-1-31\", \"strict_date_optional_time\");\n        assertParseException(\"10000-01-31\", \"strict_date_optional_time\");\n        assertSameDate(\"2018-12-31T10:15:30\", \"strict_date_optional_time\");\n        assertParseException(\"2018-12-31T10:15:3\", \"strict_date_optional_time\");\n        assertParseException(\"2018-12-31T10:5:30\", \"strict_date_optional_time\");\n        assertParseException(\"2018-12-31T9:15:30\", \"strict_date_optional_time\");\n        assertSameDate(\"2018-12-31T10:15:30.123Z\", \"strict_date_time\");\n        assertSameDate(\"2018-12-31T10:15:30.11Z\", \"strict_date_time\");\n        assertParseException(\"2018-12-31T10:15:3.123Z\", \"strict_date_time\");\n        assertParseException(\"2018-12-31T10:5:30.123Z\", \"strict_date_time\");\n        assertParseException(\"2018-12-31T1:15:30.123Z\", \"strict_date_time\");\n        assertSameDate(\"2018-12-31T10:15:30Z\", \"strict_date_time_no_millis\");\n        assertParseException(\"2018-12-31T10:5:30Z\", \"strict_date_time_no_millis\");\n        assertParseException(\"2018-12-31T10:15:3Z\", \"strict_date_time_no_millis\");\n        assertParseException(\"2018-12-31T1:15:30Z\", \"strict_date_time_no_millis\");\n        assertSameDate(\"12\", \"strict_hour\");\n        assertSameDate(\"01\", \"strict_hour\");\n        assertParseException(\"1\", \"strict_hour\");\n        assertSameDate(\"12:12\", \"strict_hour_minute\");\n        assertSameDate(\"12:01\", \"strict_hour_minute\");\n        assertParseException(\"12:1\", \"strict_hour_minute\");\n        assertSameDate(\"12:12:12\", \"strict_hour_minute_second\");\n        assertSameDate(\"12:12:01\", \"strict_hour_minute_second\");\n        assertParseException(\"12:12:1\", \"strict_hour_minute_second\");\n        assertSameDate(\"12:12:12.123\", \"strict_hour_minute_second_fraction\");\n        assertSameDate(\"12:12:12.1\", \"strict_hour_minute_second_fraction\");\n        assertParseException(\"12:12:12\", \"strict_hour_minute_second_fraction\");\n        assertSameDate(\"12:12:12.123\", \"strict_hour_minute_second_millis\");\n        assertSameDate(\"12:12:12.1\", \"strict_hour_minute_second_millis\");\n        assertParseException(\"12:12:12\", \"strict_hour_minute_second_millis\");\n        assertSameDate(\"2018-128\", \"strict_ordinal_date\");\n        assertParseException(\"2018-1\", \"strict_ordinal_date\");\n\n        assertSameDate(\"2018-128T10:15:30.123Z\", \"strict_ordinal_date_time\");\n        assertParseException(\"2018-1T10:15:30.123Z\", \"strict_ordinal_date_time\");\n\n        assertSameDate(\"2018-128T10:15:30Z\", \"strict_ordinal_date_time_no_millis\");\n        assertParseException(\"2018-1T10:15:30Z\", \"strict_ordinal_date_time_no_millis\");\n\n        assertSameDate(\"10:15:30.123Z\", \"strict_time\");\n        assertParseException(\"1:15:30.123Z\", \"strict_time\");\n        assertParseException(\"10:1:30.123Z\", \"strict_time\");\n        assertParseException(\"10:15:3.123Z\", \"strict_time\");\n        assertParseException(\"10:15:3.1\", \"strict_time\");\n        assertParseException(\"10:15:3Z\", \"strict_time\");\n\n        assertSameDate(\"10:15:30Z\", \"strict_time_no_millis\");\n        assertSameDate(\"01:15:30Z\", \"strict_time_no_millis\");\n        assertParseException(\"1:15:30Z\", \"strict_time_no_millis\");\n        assertParseException(\"10:5:30Z\", \"strict_time_no_millis\");\n        assertParseException(\"10:15:3Z\", \"strict_time_no_millis\");\n        assertParseException(\"10:15:3\", \"strict_time_no_millis\");\n\n        assertSameDate(\"T10:15:30.123Z\", \"strict_t_time\");\n        assertParseException(\"T1:15:30.123Z\", \"strict_t_time\");\n        assertParseException(\"T10:1:30.123Z\", \"strict_t_time\");\n        assertParseException(\"T10:15:3.123Z\", \"strict_t_time\");\n        assertParseException(\"T10:15:3.1\", \"strict_t_time\");\n        assertParseException(\"T10:15:3Z\", \"strict_t_time\");\n\n        assertSameDate(\"T10:15:30Z\", \"strict_t_time_no_millis\");\n        assertParseException(\"T1:15:30Z\", \"strict_t_time_no_millis\");\n        assertParseException(\"T10:1:30Z\", \"strict_t_time_no_millis\");\n        assertParseException(\"T10:15:3Z\", \"strict_t_time_no_millis\");\n        assertParseException(\"T10:15:3\", \"strict_t_time_no_millis\");\n\n        assertSameDate(\"2012-W48-6\", \"strict_week_date\");\n        assertSameDate(\"2012-W01-6\", \"strict_week_date\");\n        assertParseException(\"2012-W1-6\", \"strict_week_date\");\n        assertParseException(\"2012-W1-8\", \"strict_week_date\");\n\n        assertSameDate(\"2012-W48-6\", \"strict_week_date\");\n        assertSameDate(\"2012-W01-6\", \"strict_week_date\");\n        assertParseException(\"2012-W1-6\", \"strict_week_date\");\n        \r\n        assertJodaParseException(\"2012-W01-8\", \"strict_week_date\",\n            \"Cannot parse \\\"2012-W01-8\\\": Value 8 for dayOfWeek must be in the range [1,7]\");\n        assertJavaTimeParseException(\"2012-W01-8\", \"strict_week_date\", \"Text '2012-W01-8' could not be parsed\");\n\n        assertSameDate(\"2012-W48-6T10:15:30.123Z\", \"strict_week_date_time\");\n        assertParseException(\"2012-W1-6T10:15:30.123Z\", \"strict_week_date_time\");\n\n        assertSameDate(\"2012-W48-6T10:15:30Z\", \"strict_week_date_time_no_millis\");\n        assertParseException(\"2012-W1-6T10:15:30Z\", \"strict_week_date_time_no_millis\");\n\n        assertSameDate(\"2012\", \"strict_year\");\n        assertParseException(\"1\", \"strict_year\");\n        assertSameDate(\"-2000\", \"strict_year\");\n\n        assertSameDate(\"2012-12\", \"strict_year_month\");\n        assertParseException(\"1-1\", \"strict_year_month\");\n\n        assertSameDate(\"2012-12-31\", \"strict_year_month_day\");\n        assertParseException(\"1-12-31\", \"strict_year_month_day\");\n        assertParseException(\"2012-1-31\", \"strict_year_month_day\");\n        assertParseException(\"2012-12-1\", \"strict_year_month_day\");\n\n        assertSameDate(\"2018\", \"strict_weekyear\");\n        assertParseException(\"1\", \"strict_weekyear\");\n\n        assertSameDate(\"2018\", \"strict_weekyear\");\n        assertSameDate(\"2017\", \"strict_weekyear\");\n        assertParseException(\"1\", \"strict_weekyear\");\n\n        assertSameDate(\"2018-W29\", \"strict_weekyear_week\");\n        assertSameDate(\"2018-W01\", \"strict_weekyear_week\");\n        assertParseException(\"2018-W1\", \"strict_weekyear_week\");\n\n        assertSameDate(\"2012-W31-5\", \"strict_weekyear_week_day\");\n        assertParseException(\"2012-W1-1\", \"strict_weekyear_week_day\");\n    }\n","realPath":"server/src/test/java/org/elasticsearch/common/joda/JavaJodaTimeDuellingTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":230,"status":"N"}],"commitId":"cfc0a47232a7c567d4a2d07b159d1a0a8021e7de","commitMessage":"@@@Core: Deprecate negative epoch timestamps (#36793)\n\nNegative timestamps are currently supported in joda time. These are\ndates before epoch. However.  it doesn't really make sense to have a\nnegative timestamp.  since this is a modern format. Any dates before\nepoch can be represented with normal date formats.  like ISO8601.\nAdditionally.  implementing negative epoch timestamp parsing in java time\nhas an edge case which would more than double the code required. This\ncommit deprecates use of negative epoch timestamps.\n","date":"2018-12-20 16:17:06","modifiedFileCount":"5","status":"M","submitter":"Ryan Ernst"},{"authorTime":"2019-01-10 16:26:01","codes":[{"authorDate":"2019-01-10 16:26:01","commitOrder":8,"curCode":"    public void testDuellingFormatsValidParsing() {\n        assertSameDate(\"1522332219\", \"epoch_second\");\n        assertSameDate(\"1522332219.\", \"epoch_second\");\n        assertSameDate(\"1522332219.0\", \"epoch_second\");\n        assertSameDate(\"0\", \"epoch_second\");\n        assertSameDate(\"1\", \"epoch_second\");\n        assertSameDate(\"1522332219321\", \"epoch_millis\");\n        assertSameDate(\"0\", \"epoch_millis\");\n        assertSameDate(\"1\", \"epoch_millis\");\n\n        assertSameDate(\"20181126\", \"basic_date\");\n        assertSameDate(\"20181126T121212.123Z\", \"basic_date_time\");\n        assertSameDate(\"20181126T121212.123+10:00\", \"basic_date_time\");\n        assertSameDate(\"20181126T121212.123-0800\", \"basic_date_time\");\n\n        assertSameDate(\"20181126T121212Z\", \"basic_date_time_no_millis\");\n        assertSameDate(\"20181126T121212+01:00\", \"basic_date_time_no_millis\");\n        assertSameDate(\"20181126T121212+0100\", \"basic_date_time_no_millis\");\n        assertSameDate(\"2018363\", \"basic_ordinal_date\");\n        assertSameDate(\"2018363T121212.123Z\", \"basic_ordinal_date_time\");\n        assertSameDate(\"2018363T121212.123+0100\", \"basic_ordinal_date_time\");\n        assertSameDate(\"2018363T121212.123+01:00\", \"basic_ordinal_date_time\");\n        assertSameDate(\"2018363T121212Z\", \"basic_ordinal_date_time_no_millis\");\n        assertSameDate(\"2018363T121212+0100\", \"basic_ordinal_date_time_no_millis\");\n        assertSameDate(\"2018363T121212+01:00\", \"basic_ordinal_date_time_no_millis\");\n        assertSameDate(\"121212.123Z\", \"basic_time\");\n        assertSameDate(\"121212.123+0100\", \"basic_time\");\n        assertSameDate(\"121212.123+01:00\", \"basic_time\");\n        assertSameDate(\"121212Z\", \"basic_time_no_millis\");\n        assertSameDate(\"121212+0100\", \"basic_time_no_millis\");\n        assertSameDate(\"121212+01:00\", \"basic_time_no_millis\");\n        assertSameDate(\"T121212.123Z\", \"basic_t_time\");\n        assertSameDate(\"T121212.123+0100\", \"basic_t_time\");\n        assertSameDate(\"T121212.123+01:00\", \"basic_t_time\");\n        assertSameDate(\"T121212Z\", \"basic_t_time_no_millis\");\n        assertSameDate(\"T121212+0100\", \"basic_t_time_no_millis\");\n        assertSameDate(\"T121212+01:00\", \"basic_t_time_no_millis\");\n        assertSameDate(\"2018W313\", \"basic_week_date\");\n        assertSameDate(\"1W313\", \"basic_week_date\");\n        assertSameDate(\"18W313\", \"basic_week_date\");\n        assertSameDate(\"2018W313T121212.123Z\", \"basic_week_date_time\");\n        assertSameDate(\"2018W313T121212.123+0100\", \"basic_week_date_time\");\n        assertSameDate(\"2018W313T121212.123+01:00\", \"basic_week_date_time\");\n        assertSameDate(\"2018W313T121212Z\", \"basic_week_date_time_no_millis\");\n        assertSameDate(\"2018W313T121212+0100\", \"basic_week_date_time_no_millis\");\n        assertSameDate(\"2018W313T121212+01:00\", \"basic_week_date_time_no_millis\");\n\n        assertSameDate(\"2018-12-31\", \"date\");\n        assertSameDate(\"18-5-6\", \"date\");\n        assertSameDate(\"10000-5-6\", \"date\");\n\n        assertSameDate(\"2018-12-31T12\", \"date_hour\");\n        assertSameDate(\"2018-12-31T8\", \"date_hour\");\n\n        assertSameDate(\"2018-12-31T12:12\", \"date_hour_minute\");\n        assertSameDate(\"2018-12-31T8:3\", \"date_hour_minute\");\n\n        assertSameDate(\"2018-12-31T12:12:12\", \"date_hour_minute_second\");\n        assertSameDate(\"2018-12-31T12:12:1\", \"date_hour_minute_second\");\n\n        assertSameDate(\"2018-12-31T12:12:12.123\", \"date_hour_minute_second_fraction\");\n        assertSameDate(\"2018-12-31T12:12:12.123\", \"date_hour_minute_second_millis\");\n        assertSameDate(\"2018-12-31T12:12:12.1\", \"date_hour_minute_second_millis\");\n        assertSameDate(\"2018-12-31T12:12:12.1\", \"date_hour_minute_second_fraction\");\n\n        assertSameDate(\"10000\", \"date_optional_time\");\n        assertSameDate(\"10000T\", \"date_optional_time\");\n        assertSameDate(\"2018\", \"date_optional_time\");\n        assertSameDate(\"2018T\", \"date_optional_time\");\n        assertSameDate(\"2018-05\", \"date_optional_time\");\n        assertSameDate(\"2018-05-30\", \"date_optional_time\");\n        assertSameDate(\"2018-05-30T20\", \"date_optional_time\");\n        assertSameDate(\"2018-05-30T20:21\", \"date_optional_time\");\n        assertSameDate(\"2018-05-30T20:21:23\", \"date_optional_time\");\n        assertSameDate(\"2018-05-30T20:21:23.123\", \"date_optional_time\");\n        assertSameDate(\"2018-05-30T20:21:23.123Z\", \"date_optional_time\");\n        assertSameDate(\"2018-05-30T20:21:23.123+0100\", \"date_optional_time\");\n        assertSameDate(\"2018-05-30T20:21:23.123+01:00\", \"date_optional_time\");\n        assertSameDate(\"2018-12-1\", \"date_optional_time\");\n        assertSameDate(\"2018-12-31T10:15:30\", \"date_optional_time\");\n        assertSameDate(\"2018-12-31T10:15:3\", \"date_optional_time\");\n        assertSameDate(\"2018-12-31T10:5:30\", \"date_optional_time\");\n        assertSameDate(\"2018-12-31T1:15:30\", \"date_optional_time\");\n\n        assertSameDate(\"2018-12-31T10:15:30.123Z\", \"date_time\");\n        assertSameDate(\"2018-12-31T10:15:30.123+0100\", \"date_time\");\n        assertSameDate(\"2018-12-31T10:15:30.123+01:00\", \"date_time\");\n        assertSameDate(\"2018-12-31T10:15:30.11Z\", \"date_time\");\n        assertSameDate(\"2018-12-31T10:15:30.11+0100\", \"date_time\");\n        assertSameDate(\"2018-12-31T10:15:30.11+01:00\", \"date_time\");\n        assertSameDate(\"2018-12-31T10:15:3.123Z\", \"date_time\");\n        assertSameDate(\"2018-12-31T10:15:3.123+0100\", \"date_time\");\n        assertSameDate(\"2018-12-31T10:15:3.123+01:00\", \"date_time\");\n\n        assertSameDate(\"2018-12-31T10:15:30Z\", \"date_time_no_millis\");\n        assertSameDate(\"2018-12-31T10:15:30+0100\", \"date_time_no_millis\");\n        assertSameDate(\"2018-12-31T10:15:30+01:00\", \"date_time_no_millis\");\n        assertSameDate(\"2018-12-31T10:5:30Z\", \"date_time_no_millis\");\n        assertSameDate(\"2018-12-31T10:5:30+0100\", \"date_time_no_millis\");\n        assertSameDate(\"2018-12-31T10:5:30+01:00\", \"date_time_no_millis\");\n        assertSameDate(\"2018-12-31T10:15:3Z\", \"date_time_no_millis\");\n        assertSameDate(\"2018-12-31T10:15:3+0100\", \"date_time_no_millis\");\n        assertSameDate(\"2018-12-31T10:15:3+01:00\", \"date_time_no_millis\");\n        assertSameDate(\"2018-12-31T1:15:30Z\", \"date_time_no_millis\");\n        assertSameDate(\"2018-12-31T1:15:30+0100\", \"date_time_no_millis\");\n        assertSameDate(\"2018-12-31T1:15:30+01:00\", \"date_time_no_millis\");\n\n        assertSameDate(\"12\", \"hour\");\n        assertSameDate(\"01\", \"hour\");\n        assertSameDate(\"1\", \"hour\");\n\n        assertSameDate(\"12:12\", \"hour_minute\");\n        assertSameDate(\"12:01\", \"hour_minute\");\n        assertSameDate(\"12:1\", \"hour_minute\");\n\n        assertSameDate(\"12:12:12\", \"hour_minute_second\");\n        assertSameDate(\"12:12:01\", \"hour_minute_second\");\n        assertSameDate(\"12:12:1\", \"hour_minute_second\");\n\n        assertSameDate(\"12:12:12.123\", \"hour_minute_second_fraction\");\n        assertSameDate(\"12:12:12.1\", \"hour_minute_second_fraction\");\n        assertParseException(\"12:12:12\", \"hour_minute_second_fraction\");\n        assertSameDate(\"12:12:12.123\", \"hour_minute_second_millis\");\n        assertSameDate(\"12:12:12.1\", \"hour_minute_second_millis\");\n        assertParseException(\"12:12:12\", \"hour_minute_second_millis\");\n\n        assertSameDate(\"2018-128\", \"ordinal_date\");\n        assertSameDate(\"2018-1\", \"ordinal_date\");\n\n        assertSameDate(\"2018-128T10:15:30.123Z\", \"ordinal_date_time\");\n        assertSameDate(\"2018-128T10:15:30.123+0100\", \"ordinal_date_time\");\n        assertSameDate(\"2018-128T10:15:30.123+01:00\", \"ordinal_date_time\");\n        assertSameDate(\"2018-1T10:15:30.123Z\", \"ordinal_date_time\");\n        assertSameDate(\"2018-1T10:15:30.123+0100\", \"ordinal_date_time\");\n        assertSameDate(\"2018-1T10:15:30.123+01:00\", \"ordinal_date_time\");\n\n        assertSameDate(\"2018-128T10:15:30Z\", \"ordinal_date_time_no_millis\");\n        assertSameDate(\"2018-128T10:15:30+0100\", \"ordinal_date_time_no_millis\");\n        assertSameDate(\"2018-128T10:15:30+01:00\", \"ordinal_date_time_no_millis\");\n        assertSameDate(\"2018-1T10:15:30Z\", \"ordinal_date_time_no_millis\");\n        assertSameDate(\"2018-1T10:15:30+0100\", \"ordinal_date_time_no_millis\");\n        assertSameDate(\"2018-1T10:15:30+01:00\", \"ordinal_date_time_no_millis\");\n\n        assertSameDate(\"10:15:30.123Z\", \"time\");\n        assertSameDate(\"10:15:30.123+0100\", \"time\");\n        assertSameDate(\"10:15:30.123+01:00\", \"time\");\n        assertSameDate(\"1:15:30.123Z\", \"time\");\n        assertSameDate(\"1:15:30.123+0100\", \"time\");\n        assertSameDate(\"1:15:30.123+01:00\", \"time\");\n        assertSameDate(\"10:1:30.123Z\", \"time\");\n        assertSameDate(\"10:1:30.123+0100\", \"time\");\n        assertSameDate(\"10:1:30.123+01:00\", \"time\");\n        assertSameDate(\"10:15:3.123Z\", \"time\");\n        assertSameDate(\"10:15:3.123+0100\", \"time\");\n        assertSameDate(\"10:15:3.123+01:00\", \"time\");\n        assertParseException(\"10:15:3.1\", \"time\");\n        assertParseException(\"10:15:3Z\", \"time\");\n\n        assertSameDate(\"10:15:30Z\", \"time_no_millis\");\n        assertSameDate(\"10:15:30+0100\", \"time_no_millis\");\n        assertSameDate(\"10:15:30+01:00\", \"time_no_millis\");\n        assertSameDate(\"01:15:30Z\", \"time_no_millis\");\n        assertSameDate(\"01:15:30+0100\", \"time_no_millis\");\n        assertSameDate(\"01:15:30+01:00\", \"time_no_millis\");\n        assertSameDate(\"1:15:30Z\", \"time_no_millis\");\n        assertSameDate(\"1:15:30+0100\", \"time_no_millis\");\n        assertSameDate(\"1:15:30+01:00\", \"time_no_millis\");\n        assertSameDate(\"10:5:30Z\", \"time_no_millis\");\n        assertSameDate(\"10:5:30+0100\", \"time_no_millis\");\n        assertSameDate(\"10:5:30+01:00\", \"time_no_millis\");\n        assertSameDate(\"10:15:3Z\", \"time_no_millis\");\n        assertSameDate(\"10:15:3+0100\", \"time_no_millis\");\n        assertSameDate(\"10:15:3+01:00\", \"time_no_millis\");\n        assertParseException(\"10:15:3\", \"time_no_millis\");\n\n        assertSameDate(\"T10:15:30.123Z\", \"t_time\");\n        assertSameDate(\"T10:15:30.123+0100\", \"t_time\");\n        assertSameDate(\"T10:15:30.123+01:00\", \"t_time\");\n        assertSameDate(\"T1:15:30.123Z\", \"t_time\");\n        assertSameDate(\"T1:15:30.123+0100\", \"t_time\");\n        assertSameDate(\"T1:15:30.123+01:00\", \"t_time\");\n        assertSameDate(\"T10:1:30.123Z\", \"t_time\");\n        assertSameDate(\"T10:1:30.123+0100\", \"t_time\");\n        assertSameDate(\"T10:1:30.123+01:00\", \"t_time\");\n        assertSameDate(\"T10:15:3.123Z\", \"t_time\");\n        assertSameDate(\"T10:15:3.123+0100\", \"t_time\");\n        assertSameDate(\"T10:15:3.123+01:00\", \"t_time\");\n        assertParseException(\"T10:15:3.1\", \"t_time\");\n        assertParseException(\"T10:15:3Z\", \"t_time\");\n\n        assertSameDate(\"T10:15:30Z\", \"t_time_no_millis\");\n        assertSameDate(\"T10:15:30+0100\", \"t_time_no_millis\");\n        assertSameDate(\"T10:15:30+01:00\", \"t_time_no_millis\");\n        assertSameDate(\"T1:15:30Z\", \"t_time_no_millis\");\n        assertSameDate(\"T1:15:30+0100\", \"t_time_no_millis\");\n        assertSameDate(\"T1:15:30+01:00\", \"t_time_no_millis\");\n        assertSameDate(\"T10:1:30Z\", \"t_time_no_millis\");\n        assertSameDate(\"T10:1:30+0100\", \"t_time_no_millis\");\n        assertSameDate(\"T10:1:30+01:00\", \"t_time_no_millis\");\n        assertSameDate(\"T10:15:3Z\", \"t_time_no_millis\");\n        assertSameDate(\"T10:15:3+0100\", \"t_time_no_millis\");\n        assertSameDate(\"T10:15:3+01:00\", \"t_time_no_millis\");\n        assertParseException(\"T10:15:3\", \"t_time_no_millis\");\n\n        assertSameDate(\"2012-W48-6\", \"week_date\");\n        assertSameDate(\"2012-W01-6\", \"week_date\");\n        assertSameDate(\"2012-W1-6\", \"week_date\");\n        \r\n        assertJodaParseException(\"2012-W1-8\", \"week_date\",\n            \"Cannot parse \\\"2012-W1-8\\\": Value 8 for dayOfWeek must be in the range [1,7]\");\n        assertJavaTimeParseException(\"2012-W1-8\", \"week_date\", \"Text '2012-W1-8' could not be parsed\");\n\n        assertSameDate(\"2012-W48-6T10:15:30.123Z\", \"week_date_time\");\n        assertSameDate(\"2012-W48-6T10:15:30.123+0100\", \"week_date_time\");\n        assertSameDate(\"2012-W48-6T10:15:30.123+01:00\", \"week_date_time\");\n        assertSameDate(\"2012-W1-6T10:15:30.123Z\", \"week_date_time\");\n        assertSameDate(\"2012-W1-6T10:15:30.123+0100\", \"week_date_time\");\n        assertSameDate(\"2012-W1-6T10:15:30.123+01:00\", \"week_date_time\");\n\n        assertSameDate(\"2012-W48-6T10:15:30Z\", \"week_date_time_no_millis\");\n        assertSameDate(\"2012-W48-6T10:15:30+0100\", \"week_date_time_no_millis\");\n        assertSameDate(\"2012-W48-6T10:15:30+01:00\", \"week_date_time_no_millis\");\n        assertSameDate(\"2012-W1-6T10:15:30Z\", \"week_date_time_no_millis\");\n        assertSameDate(\"2012-W1-6T10:15:30+0100\", \"week_date_time_no_millis\");\n        assertSameDate(\"2012-W1-6T10:15:30+01:00\", \"week_date_time_no_millis\");\n\n        assertSameDate(\"2012\", \"year\");\n        assertSameDate(\"1\", \"year\");\n        assertSameDate(\"-2000\", \"year\");\n\n        assertSameDate(\"2012-12\", \"yearMonth\");\n        assertSameDate(\"1-1\", \"yearMonth\");\n\n        assertSameDate(\"2012-12-31\", \"yearMonthDay\");\n        assertSameDate(\"1-12-31\", \"yearMonthDay\");\n        assertSameDate(\"2012-1-31\", \"yearMonthDay\");\n        assertSameDate(\"2012-12-1\", \"yearMonthDay\");\n\n        assertSameDate(\"2018\", \"week_year\");\n        assertSameDate(\"1\", \"week_year\");\n        assertSameDate(\"2017\", \"week_year\");\n\n        assertSameDate(\"2018-W29\", \"weekyear_week\");\n        assertSameDate(\"2018-W1\", \"weekyear_week\");\n\n        assertSameDate(\"2012-W31-5\", \"weekyear_week_day\");\n        assertSameDate(\"2012-W1-1\", \"weekyear_week_day\");\n    }\n","date":"2019-01-10 16:26:01","endLine":320,"groupId":"48962","id":15,"instanceNumber":1,"isCurCommit":0,"methodName":"testDuellingFormatsValidParsing","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/a9/6fee5b6333eb64343d0da4652d6f3b06f94c10.src","preCode":"    public void testDuellingFormatsValidParsing() {\n        assertSameDate(\"1522332219\", \"epoch_second\");\n        assertSameDate(\"1522332219.\", \"epoch_second\");\n        assertSameDate(\"1522332219.0\", \"epoch_second\");\n        assertSameDate(\"0\", \"epoch_second\");\n        assertSameDate(\"1\", \"epoch_second\");\n        assertSameDate(\"1522332219321\", \"epoch_millis\");\n        assertSameDate(\"0\", \"epoch_millis\");\n        assertSameDate(\"1\", \"epoch_millis\");\n\n        assertSameDate(\"20181126\", \"basic_date\");\n        assertSameDate(\"20181126T121212.123Z\", \"basic_date_time\");\n        assertSameDate(\"20181126T121212.123+10:00\", \"basic_date_time\");\n        assertSameDate(\"20181126T121212.123-0800\", \"basic_date_time\");\n\n        assertSameDate(\"20181126T121212Z\", \"basic_date_time_no_millis\");\n        assertSameDate(\"2018363\", \"basic_ordinal_date\");\n        assertSameDate(\"2018363T121212.123Z\", \"basic_ordinal_date_time\");\n        assertSameDate(\"2018363T121212Z\", \"basic_ordinal_date_time_no_millis\");\n        assertSameDate(\"121212.123Z\", \"basic_time\");\n        assertSameDate(\"121212Z\", \"basic_time_no_millis\");\n        assertSameDate(\"T121212.123Z\", \"basic_t_time\");\n        assertSameDate(\"T121212Z\", \"basic_t_time_no_millis\");\n        assertSameDate(\"2018W313\", \"basic_week_date\");\n        assertSameDate(\"1W313\", \"basic_week_date\");\n        assertSameDate(\"18W313\", \"basic_week_date\");\n        assertSameDate(\"2018W313T121212.123Z\", \"basic_week_date_time\");\n        assertSameDate(\"2018W313T121212Z\", \"basic_week_date_time_no_millis\");\n\n        assertSameDate(\"2018-12-31\", \"date\");\n        assertSameDate(\"18-5-6\", \"date\");\n        assertSameDate(\"10000-5-6\", \"date\");\n\n        assertSameDate(\"2018-12-31T12\", \"date_hour\");\n        assertSameDate(\"2018-12-31T8\", \"date_hour\");\n\n        assertSameDate(\"2018-12-31T12:12\", \"date_hour_minute\");\n        assertSameDate(\"2018-12-31T8:3\", \"date_hour_minute\");\n\n        assertSameDate(\"2018-12-31T12:12:12\", \"date_hour_minute_second\");\n        assertSameDate(\"2018-12-31T12:12:1\", \"date_hour_minute_second\");\n\n        assertSameDate(\"2018-12-31T12:12:12.123\", \"date_hour_minute_second_fraction\");\n        assertSameDate(\"2018-12-31T12:12:12.123\", \"date_hour_minute_second_millis\");\n        assertSameDate(\"2018-12-31T12:12:12.1\", \"date_hour_minute_second_millis\");\n        assertSameDate(\"2018-12-31T12:12:12.1\", \"date_hour_minute_second_fraction\");\n\n        assertSameDate(\"10000\", \"date_optional_time\");\n        assertSameDate(\"10000T\", \"date_optional_time\");\n        assertSameDate(\"2018\", \"date_optional_time\");\n        assertSameDate(\"2018T\", \"date_optional_time\");\n        assertSameDate(\"2018-05\", \"date_optional_time\");\n        assertSameDate(\"2018-05-30\", \"date_optional_time\");\n        assertSameDate(\"2018-05-30T20\", \"date_optional_time\");\n        assertSameDate(\"2018-05-30T20:21\", \"date_optional_time\");\n        assertSameDate(\"2018-05-30T20:21:23\", \"date_optional_time\");\n        assertSameDate(\"2018-05-30T20:21:23.123\", \"date_optional_time\");\n        assertSameDate(\"2018-12-1\", \"date_optional_time\");\n        assertSameDate(\"2018-12-31T10:15:30\", \"date_optional_time\");\n        assertSameDate(\"2018-12-31T10:15:3\", \"date_optional_time\");\n        assertSameDate(\"2018-12-31T10:5:30\", \"date_optional_time\");\n        assertSameDate(\"2018-12-31T1:15:30\", \"date_optional_time\");\n\n        assertSameDate(\"2018-12-31T10:15:30.123Z\", \"date_time\");\n        assertSameDate(\"2018-12-31T10:15:30.11Z\", \"date_time\");\n        assertSameDate(\"2018-12-31T10:15:3.123Z\", \"date_time\");\n\n        assertSameDate(\"2018-12-31T10:15:30Z\", \"date_time_no_millis\");\n        assertSameDate(\"2018-12-31T10:5:30Z\", \"date_time_no_millis\");\n        assertSameDate(\"2018-12-31T10:15:3Z\", \"date_time_no_millis\");\n        assertSameDate(\"2018-12-31T1:15:30Z\", \"date_time_no_millis\");\n\n        assertSameDate(\"12\", \"hour\");\n        assertSameDate(\"01\", \"hour\");\n        assertSameDate(\"1\", \"hour\");\n\n        assertSameDate(\"12:12\", \"hour_minute\");\n        assertSameDate(\"12:01\", \"hour_minute\");\n        assertSameDate(\"12:1\", \"hour_minute\");\n\n        assertSameDate(\"12:12:12\", \"hour_minute_second\");\n        assertSameDate(\"12:12:01\", \"hour_minute_second\");\n        assertSameDate(\"12:12:1\", \"hour_minute_second\");\n\n        assertSameDate(\"12:12:12.123\", \"hour_minute_second_fraction\");\n        assertSameDate(\"12:12:12.1\", \"hour_minute_second_fraction\");\n        assertParseException(\"12:12:12\", \"hour_minute_second_fraction\");\n        assertSameDate(\"12:12:12.123\", \"hour_minute_second_millis\");\n        assertSameDate(\"12:12:12.1\", \"hour_minute_second_millis\");\n        assertParseException(\"12:12:12\", \"hour_minute_second_millis\");\n\n        assertSameDate(\"2018-128\", \"ordinal_date\");\n        assertSameDate(\"2018-1\", \"ordinal_date\");\n\n        assertSameDate(\"2018-128T10:15:30.123Z\", \"ordinal_date_time\");\n        assertSameDate(\"2018-1T10:15:30.123Z\", \"ordinal_date_time\");\n\n        assertSameDate(\"2018-128T10:15:30Z\", \"ordinal_date_time_no_millis\");\n        assertSameDate(\"2018-1T10:15:30Z\", \"ordinal_date_time_no_millis\");\n\n        assertSameDate(\"10:15:30.123Z\", \"time\");\n        assertSameDate(\"1:15:30.123Z\", \"time\");\n        assertSameDate(\"10:1:30.123Z\", \"time\");\n        assertSameDate(\"10:15:3.123Z\", \"time\");\n        assertParseException(\"10:15:3.1\", \"time\");\n        assertParseException(\"10:15:3Z\", \"time\");\n\n        assertSameDate(\"10:15:30Z\", \"time_no_millis\");\n        assertSameDate(\"01:15:30Z\", \"time_no_millis\");\n        assertSameDate(\"1:15:30Z\", \"time_no_millis\");\n        assertSameDate(\"10:5:30Z\", \"time_no_millis\");\n        assertSameDate(\"10:15:3Z\", \"time_no_millis\");\n        assertParseException(\"10:15:3\", \"time_no_millis\");\n\n        assertSameDate(\"T10:15:30.123Z\", \"t_time\");\n        assertSameDate(\"T1:15:30.123Z\", \"t_time\");\n        assertSameDate(\"T10:1:30.123Z\", \"t_time\");\n        assertSameDate(\"T10:15:3.123Z\", \"t_time\");\n        assertParseException(\"T10:15:3.1\", \"t_time\");\n        assertParseException(\"T10:15:3Z\", \"t_time\");\n\n        assertSameDate(\"T10:15:30Z\", \"t_time_no_millis\");\n        assertSameDate(\"T1:15:30Z\", \"t_time_no_millis\");\n        assertSameDate(\"T10:1:30Z\", \"t_time_no_millis\");\n        assertSameDate(\"T10:15:3Z\", \"t_time_no_millis\");\n        assertParseException(\"T10:15:3\", \"t_time_no_millis\");\n\n        assertSameDate(\"2012-W48-6\", \"week_date\");\n        assertSameDate(\"2012-W01-6\", \"week_date\");\n        assertSameDate(\"2012-W1-6\", \"week_date\");\n        \r\n        assertJodaParseException(\"2012-W1-8\", \"week_date\",\n            \"Cannot parse \\\"2012-W1-8\\\": Value 8 for dayOfWeek must be in the range [1,7]\");\n        assertJavaTimeParseException(\"2012-W1-8\", \"week_date\", \"Text '2012-W1-8' could not be parsed\");\n\n        assertSameDate(\"2012-W48-6T10:15:30.123Z\", \"week_date_time\");\n        assertSameDate(\"2012-W1-6T10:15:30.123Z\", \"week_date_time\");\n\n        assertSameDate(\"2012-W48-6T10:15:30Z\", \"week_date_time_no_millis\");\n        assertSameDate(\"2012-W1-6T10:15:30Z\", \"week_date_time_no_millis\");\n\n        assertSameDate(\"2012\", \"year\");\n        assertSameDate(\"1\", \"year\");\n        assertSameDate(\"-2000\", \"year\");\n\n        assertSameDate(\"2012-12\", \"yearMonth\");\n        assertSameDate(\"1-1\", \"yearMonth\");\n\n        assertSameDate(\"2012-12-31\", \"yearMonthDay\");\n        assertSameDate(\"1-12-31\", \"yearMonthDay\");\n        assertSameDate(\"2012-1-31\", \"yearMonthDay\");\n        assertSameDate(\"2012-12-1\", \"yearMonthDay\");\n\n        assertSameDate(\"2018\", \"week_year\");\n        assertSameDate(\"1\", \"week_year\");\n        assertSameDate(\"2017\", \"week_year\");\n\n        assertSameDate(\"2018-W29\", \"weekyear_week\");\n        assertSameDate(\"2018-W1\", \"weekyear_week\");\n\n        assertSameDate(\"2012-W31-5\", \"weekyear_week_day\");\n        assertSameDate(\"2012-W1-1\", \"weekyear_week_day\");\n    }\n","realPath":"server/src/test/java/org/elasticsearch/common/joda/JavaJodaTimeDuellingTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":73,"status":"M"},{"authorDate":"2019-01-10 16:26:01","commitOrder":8,"curCode":"    public void testDuelingStrictParsing() {\n        assertSameDate(\"2018W313\", \"strict_basic_week_date\");\n        assertParseException(\"18W313\", \"strict_basic_week_date\");\n        assertSameDate(\"2018W313T121212.123Z\", \"strict_basic_week_date_time\");\n        assertSameDate(\"2018W313T121212.123+0100\", \"strict_basic_week_date_time\");\n        assertSameDate(\"2018W313T121212.123+01:00\", \"strict_basic_week_date_time\");\n        assertParseException(\"2018W313T12128.123Z\", \"strict_basic_week_date_time\");\n        assertParseException(\"2018W313T81212.123Z\", \"strict_basic_week_date_time\");\n        assertParseException(\"2018W313T12812.123Z\", \"strict_basic_week_date_time\");\n        assertParseException(\"2018W313T12812.1Z\", \"strict_basic_week_date_time\");\n        assertSameDate(\"2018W313T121212Z\", \"strict_basic_week_date_time_no_millis\");\n        assertSameDate(\"2018W313T121212+0100\", \"strict_basic_week_date_time_no_millis\");\n        assertSameDate(\"2018W313T121212+01:00\", \"strict_basic_week_date_time_no_millis\");\n        assertParseException(\"2018W313T12128Z\", \"strict_basic_week_date_time_no_millis\");\n        assertParseException(\"2018W313T12128+0100\", \"strict_basic_week_date_time_no_millis\");\n        assertParseException(\"2018W313T12128+01:00\", \"strict_basic_week_date_time_no_millis\");\n        assertParseException(\"2018W313T81212Z\", \"strict_basic_week_date_time_no_millis\");\n        assertParseException(\"2018W313T81212+0100\", \"strict_basic_week_date_time_no_millis\");\n        assertParseException(\"2018W313T81212+01:00\", \"strict_basic_week_date_time_no_millis\");\n        assertParseException(\"2018W313T12812Z\", \"strict_basic_week_date_time_no_millis\");\n        assertParseException(\"2018W313T12812+0100\", \"strict_basic_week_date_time_no_millis\");\n        assertParseException(\"2018W313T12812+01:00\", \"strict_basic_week_date_time_no_millis\");\n        assertSameDate(\"2018-12-31\", \"strict_date\");\n        assertParseException(\"10000-12-31\", \"strict_date\");\n        assertParseException(\"2018-8-31\", \"strict_date\");\n        assertSameDate(\"2018-12-31T12\", \"strict_date_hour\");\n        assertParseException(\"2018-12-31T8\", \"strict_date_hour\");\n        assertSameDate(\"2018-12-31T12:12\", \"strict_date_hour_minute\");\n        assertParseException(\"2018-12-31T8:3\", \"strict_date_hour_minute\");\n        assertSameDate(\"2018-12-31T12:12:12\", \"strict_date_hour_minute_second\");\n        assertParseException(\"2018-12-31T12:12:1\", \"strict_date_hour_minute_second\");\n        assertSameDate(\"2018-12-31T12:12:12.123\", \"strict_date_hour_minute_second_fraction\");\n        assertSameDate(\"2018-12-31T12:12:12.123\", \"strict_date_hour_minute_second_millis\");\n        assertSameDate(\"2018-12-31T12:12:12.1\", \"strict_date_hour_minute_second_millis\");\n        assertSameDate(\"2018-12-31T12:12:12.1\", \"strict_date_hour_minute_second_fraction\");\n        assertParseException(\"2018-12-31T12:12:12\", \"strict_date_hour_minute_second_millis\");\n        assertParseException(\"2018-12-31T12:12:12\", \"strict_date_hour_minute_second_fraction\");\n        assertSameDate(\"2018-12-31\", \"strict_date_optional_time\");\n        assertParseException(\"2018-12-1\", \"strict_date_optional_time\");\n        assertParseException(\"2018-1-31\", \"strict_date_optional_time\");\n        assertParseException(\"10000-01-31\", \"strict_date_optional_time\");\n        assertSameDate(\"2018-12-31T10:15:30\", \"strict_date_optional_time\");\n        assertSameDate(\"2018-12-31T10:15:30Z\", \"strict_date_optional_time\");\n        assertSameDate(\"2018-12-31T10:15:30+0100\", \"strict_date_optional_time\");\n        assertSameDate(\"2018-12-31T10:15:30+01:00\", \"strict_date_optional_time\");\n        assertParseException(\"2018-12-31T10:15:3\", \"strict_date_optional_time\");\n        assertParseException(\"2018-12-31T10:5:30\", \"strict_date_optional_time\");\n        assertParseException(\"2018-12-31T9:15:30\", \"strict_date_optional_time\");\n        assertSameDate(\"2018-12-31T10:15:30.123Z\", \"strict_date_time\");\n        assertSameDate(\"2018-12-31T10:15:30.123+0100\", \"strict_date_time\");\n        assertSameDate(\"2018-12-31T10:15:30.123+01:00\", \"strict_date_time\");\n        assertSameDate(\"2018-12-31T10:15:30.11Z\", \"strict_date_time\");\n        assertSameDate(\"2018-12-31T10:15:30.11+0100\", \"strict_date_time\");\n        assertSameDate(\"2018-12-31T10:15:30.11+01:00\", \"strict_date_time\");\n        assertParseException(\"2018-12-31T10:15:3.123Z\", \"strict_date_time\");\n        assertParseException(\"2018-12-31T10:5:30.123Z\", \"strict_date_time\");\n        assertParseException(\"2018-12-31T1:15:30.123Z\", \"strict_date_time\");\n        assertSameDate(\"2018-12-31T10:15:30Z\", \"strict_date_time_no_millis\");\n        assertSameDate(\"2018-12-31T10:15:30+0100\", \"strict_date_time_no_millis\");\n        assertSameDate(\"2018-12-31T10:15:30+01:00\", \"strict_date_time_no_millis\");\n        assertParseException(\"2018-12-31T10:5:30Z\", \"strict_date_time_no_millis\");\n        assertParseException(\"2018-12-31T10:15:3Z\", \"strict_date_time_no_millis\");\n        assertParseException(\"2018-12-31T1:15:30Z\", \"strict_date_time_no_millis\");\n        assertSameDate(\"12\", \"strict_hour\");\n        assertSameDate(\"01\", \"strict_hour\");\n        assertParseException(\"1\", \"strict_hour\");\n        assertSameDate(\"12:12\", \"strict_hour_minute\");\n        assertSameDate(\"12:01\", \"strict_hour_minute\");\n        assertParseException(\"12:1\", \"strict_hour_minute\");\n        assertSameDate(\"12:12:12\", \"strict_hour_minute_second\");\n        assertSameDate(\"12:12:01\", \"strict_hour_minute_second\");\n        assertParseException(\"12:12:1\", \"strict_hour_minute_second\");\n        assertSameDate(\"12:12:12.123\", \"strict_hour_minute_second_fraction\");\n        assertSameDate(\"12:12:12.1\", \"strict_hour_minute_second_fraction\");\n        assertParseException(\"12:12:12\", \"strict_hour_minute_second_fraction\");\n        assertSameDate(\"12:12:12.123\", \"strict_hour_minute_second_millis\");\n        assertSameDate(\"12:12:12.1\", \"strict_hour_minute_second_millis\");\n        assertParseException(\"12:12:12\", \"strict_hour_minute_second_millis\");\n        assertSameDate(\"2018-128\", \"strict_ordinal_date\");\n        assertParseException(\"2018-1\", \"strict_ordinal_date\");\n\n        assertSameDate(\"2018-128T10:15:30.123Z\", \"strict_ordinal_date_time\");\n        assertSameDate(\"2018-128T10:15:30.123+0100\", \"strict_ordinal_date_time\");\n        assertSameDate(\"2018-128T10:15:30.123+01:00\", \"strict_ordinal_date_time\");\n        assertParseException(\"2018-1T10:15:30.123Z\", \"strict_ordinal_date_time\");\n\n        assertSameDate(\"2018-128T10:15:30Z\", \"strict_ordinal_date_time_no_millis\");\n        assertSameDate(\"2018-128T10:15:30+0100\", \"strict_ordinal_date_time_no_millis\");\n        assertSameDate(\"2018-128T10:15:30+01:00\", \"strict_ordinal_date_time_no_millis\");\n        assertParseException(\"2018-1T10:15:30Z\", \"strict_ordinal_date_time_no_millis\");\n\n        assertSameDate(\"10:15:30.123Z\", \"strict_time\");\n        assertSameDate(\"10:15:30.123+0100\", \"strict_time\");\n        assertSameDate(\"10:15:30.123+01:00\", \"strict_time\");\n        assertParseException(\"1:15:30.123Z\", \"strict_time\");\n        assertParseException(\"10:1:30.123Z\", \"strict_time\");\n        assertParseException(\"10:15:3.123Z\", \"strict_time\");\n        assertParseException(\"10:15:3.1\", \"strict_time\");\n        assertParseException(\"10:15:3Z\", \"strict_time\");\n\n        assertSameDate(\"10:15:30Z\", \"strict_time_no_millis\");\n        assertSameDate(\"10:15:30+0100\", \"strict_time_no_millis\");\n        assertSameDate(\"10:15:30+01:00\", \"strict_time_no_millis\");\n        assertSameDate(\"01:15:30Z\", \"strict_time_no_millis\");\n        assertSameDate(\"01:15:30+0100\", \"strict_time_no_millis\");\n        assertSameDate(\"01:15:30+01:00\", \"strict_time_no_millis\");\n        assertParseException(\"1:15:30Z\", \"strict_time_no_millis\");\n        assertParseException(\"10:5:30Z\", \"strict_time_no_millis\");\n        assertParseException(\"10:15:3Z\", \"strict_time_no_millis\");\n        assertParseException(\"10:15:3\", \"strict_time_no_millis\");\n\n        assertSameDate(\"T10:15:30.123Z\", \"strict_t_time\");\n        assertSameDate(\"T10:15:30.123+0100\", \"strict_t_time\");\n        assertSameDate(\"T10:15:30.123+01:00\", \"strict_t_time\");\n        assertParseException(\"T1:15:30.123Z\", \"strict_t_time\");\n        assertParseException(\"T10:1:30.123Z\", \"strict_t_time\");\n        assertParseException(\"T10:15:3.123Z\", \"strict_t_time\");\n        assertParseException(\"T10:15:3.1\", \"strict_t_time\");\n        assertParseException(\"T10:15:3Z\", \"strict_t_time\");\n\n        assertSameDate(\"T10:15:30Z\", \"strict_t_time_no_millis\");\n        assertSameDate(\"T10:15:30+0100\", \"strict_t_time_no_millis\");\n        assertSameDate(\"T10:15:30+01:00\", \"strict_t_time_no_millis\");\n        assertParseException(\"T1:15:30Z\", \"strict_t_time_no_millis\");\n        assertParseException(\"T10:1:30Z\", \"strict_t_time_no_millis\");\n        assertParseException(\"T10:15:3Z\", \"strict_t_time_no_millis\");\n        assertParseException(\"T10:15:3\", \"strict_t_time_no_millis\");\n\n        assertSameDate(\"2012-W48-6\", \"strict_week_date\");\n        assertSameDate(\"2012-W01-6\", \"strict_week_date\");\n        assertParseException(\"2012-W1-6\", \"strict_week_date\");\n        assertParseException(\"2012-W1-8\", \"strict_week_date\");\n\n        assertSameDate(\"2012-W48-6\", \"strict_week_date\");\n        assertSameDate(\"2012-W01-6\", \"strict_week_date\");\n        assertParseException(\"2012-W1-6\", \"strict_week_date\");\n        \r\n        assertJodaParseException(\"2012-W01-8\", \"strict_week_date\",\n            \"Cannot parse \\\"2012-W01-8\\\": Value 8 for dayOfWeek must be in the range [1,7]\");\n        assertJavaTimeParseException(\"2012-W01-8\", \"strict_week_date\", \"Text '2012-W01-8' could not be parsed\");\n\n        assertSameDate(\"2012-W48-6T10:15:30.123Z\", \"strict_week_date_time\");\n        assertSameDate(\"2012-W48-6T10:15:30.123+0100\", \"strict_week_date_time\");\n        assertSameDate(\"2012-W48-6T10:15:30.123+01:00\", \"strict_week_date_time\");\n        assertParseException(\"2012-W1-6T10:15:30.123Z\", \"strict_week_date_time\");\n\n        assertSameDate(\"2012-W48-6T10:15:30Z\", \"strict_week_date_time_no_millis\");\n        assertSameDate(\"2012-W48-6T10:15:30+0100\", \"strict_week_date_time_no_millis\");\n        assertSameDate(\"2012-W48-6T10:15:30+01:00\", \"strict_week_date_time_no_millis\");\n        assertParseException(\"2012-W1-6T10:15:30Z\", \"strict_week_date_time_no_millis\");\n\n        assertSameDate(\"2012\", \"strict_year\");\n        assertParseException(\"1\", \"strict_year\");\n        assertSameDate(\"-2000\", \"strict_year\");\n\n        assertSameDate(\"2012-12\", \"strict_year_month\");\n        assertParseException(\"1-1\", \"strict_year_month\");\n\n        assertSameDate(\"2012-12-31\", \"strict_year_month_day\");\n        assertParseException(\"1-12-31\", \"strict_year_month_day\");\n        assertParseException(\"2012-1-31\", \"strict_year_month_day\");\n        assertParseException(\"2012-12-1\", \"strict_year_month_day\");\n\n        assertSameDate(\"2018\", \"strict_weekyear\");\n        assertParseException(\"1\", \"strict_weekyear\");\n\n        assertSameDate(\"2018\", \"strict_weekyear\");\n        assertSameDate(\"2017\", \"strict_weekyear\");\n        assertParseException(\"1\", \"strict_weekyear\");\n\n        assertSameDate(\"2018-W29\", \"strict_weekyear_week\");\n        assertSameDate(\"2018-W01\", \"strict_weekyear_week\");\n        assertParseException(\"2018-W1\", \"strict_weekyear_week\");\n\n        assertSameDate(\"2012-W31-5\", \"strict_weekyear_week_day\");\n        assertParseException(\"2012-W1-1\", \"strict_weekyear_week_day\");\n    }\n","date":"2019-01-10 16:26:01","endLine":498,"groupId":"48965","id":16,"instanceNumber":2,"isCurCommit":0,"methodName":"testDuelingStrictParsing","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/a9/6fee5b6333eb64343d0da4652d6f3b06f94c10.src","preCode":"    public void testDuelingStrictParsing() {\n        assertSameDate(\"2018W313\", \"strict_basic_week_date\");\n        assertParseException(\"18W313\", \"strict_basic_week_date\");\n        assertSameDate(\"2018W313T121212.123Z\", \"strict_basic_week_date_time\");\n        assertParseException(\"2018W313T12128.123Z\", \"strict_basic_week_date_time\");\n        assertParseException(\"2018W313T81212.123Z\", \"strict_basic_week_date_time\");\n        assertParseException(\"2018W313T12812.123Z\", \"strict_basic_week_date_time\");\n        assertParseException(\"2018W313T12812.1Z\", \"strict_basic_week_date_time\");\n        assertSameDate(\"2018W313T121212Z\", \"strict_basic_week_date_time_no_millis\");\n        assertParseException(\"2018W313T12128Z\", \"strict_basic_week_date_time_no_millis\");\n        assertParseException(\"2018W313T81212Z\", \"strict_basic_week_date_time_no_millis\");\n        assertParseException(\"2018W313T12812Z\", \"strict_basic_week_date_time_no_millis\");\n        assertSameDate(\"2018-12-31\", \"strict_date\");\n        assertParseException(\"10000-12-31\", \"strict_date\");\n        assertParseException(\"2018-8-31\", \"strict_date\");\n        assertSameDate(\"2018-12-31T12\", \"strict_date_hour\");\n        assertParseException(\"2018-12-31T8\", \"strict_date_hour\");\n        assertSameDate(\"2018-12-31T12:12\", \"strict_date_hour_minute\");\n        assertParseException(\"2018-12-31T8:3\", \"strict_date_hour_minute\");\n        assertSameDate(\"2018-12-31T12:12:12\", \"strict_date_hour_minute_second\");\n        assertParseException(\"2018-12-31T12:12:1\", \"strict_date_hour_minute_second\");\n        assertSameDate(\"2018-12-31T12:12:12.123\", \"strict_date_hour_minute_second_fraction\");\n        assertSameDate(\"2018-12-31T12:12:12.123\", \"strict_date_hour_minute_second_millis\");\n        assertSameDate(\"2018-12-31T12:12:12.1\", \"strict_date_hour_minute_second_millis\");\n        assertSameDate(\"2018-12-31T12:12:12.1\", \"strict_date_hour_minute_second_fraction\");\n        assertParseException(\"2018-12-31T12:12:12\", \"strict_date_hour_minute_second_millis\");\n        assertParseException(\"2018-12-31T12:12:12\", \"strict_date_hour_minute_second_fraction\");\n        assertSameDate(\"2018-12-31\", \"strict_date_optional_time\");\n        assertParseException(\"2018-12-1\", \"strict_date_optional_time\");\n        assertParseException(\"2018-1-31\", \"strict_date_optional_time\");\n        assertParseException(\"10000-01-31\", \"strict_date_optional_time\");\n        assertSameDate(\"2018-12-31T10:15:30\", \"strict_date_optional_time\");\n        assertParseException(\"2018-12-31T10:15:3\", \"strict_date_optional_time\");\n        assertParseException(\"2018-12-31T10:5:30\", \"strict_date_optional_time\");\n        assertParseException(\"2018-12-31T9:15:30\", \"strict_date_optional_time\");\n        assertSameDate(\"2018-12-31T10:15:30.123Z\", \"strict_date_time\");\n        assertSameDate(\"2018-12-31T10:15:30.11Z\", \"strict_date_time\");\n        assertParseException(\"2018-12-31T10:15:3.123Z\", \"strict_date_time\");\n        assertParseException(\"2018-12-31T10:5:30.123Z\", \"strict_date_time\");\n        assertParseException(\"2018-12-31T1:15:30.123Z\", \"strict_date_time\");\n        assertSameDate(\"2018-12-31T10:15:30Z\", \"strict_date_time_no_millis\");\n        assertParseException(\"2018-12-31T10:5:30Z\", \"strict_date_time_no_millis\");\n        assertParseException(\"2018-12-31T10:15:3Z\", \"strict_date_time_no_millis\");\n        assertParseException(\"2018-12-31T1:15:30Z\", \"strict_date_time_no_millis\");\n        assertSameDate(\"12\", \"strict_hour\");\n        assertSameDate(\"01\", \"strict_hour\");\n        assertParseException(\"1\", \"strict_hour\");\n        assertSameDate(\"12:12\", \"strict_hour_minute\");\n        assertSameDate(\"12:01\", \"strict_hour_minute\");\n        assertParseException(\"12:1\", \"strict_hour_minute\");\n        assertSameDate(\"12:12:12\", \"strict_hour_minute_second\");\n        assertSameDate(\"12:12:01\", \"strict_hour_minute_second\");\n        assertParseException(\"12:12:1\", \"strict_hour_minute_second\");\n        assertSameDate(\"12:12:12.123\", \"strict_hour_minute_second_fraction\");\n        assertSameDate(\"12:12:12.1\", \"strict_hour_minute_second_fraction\");\n        assertParseException(\"12:12:12\", \"strict_hour_minute_second_fraction\");\n        assertSameDate(\"12:12:12.123\", \"strict_hour_minute_second_millis\");\n        assertSameDate(\"12:12:12.1\", \"strict_hour_minute_second_millis\");\n        assertParseException(\"12:12:12\", \"strict_hour_minute_second_millis\");\n        assertSameDate(\"2018-128\", \"strict_ordinal_date\");\n        assertParseException(\"2018-1\", \"strict_ordinal_date\");\n\n        assertSameDate(\"2018-128T10:15:30.123Z\", \"strict_ordinal_date_time\");\n        assertParseException(\"2018-1T10:15:30.123Z\", \"strict_ordinal_date_time\");\n\n        assertSameDate(\"2018-128T10:15:30Z\", \"strict_ordinal_date_time_no_millis\");\n        assertParseException(\"2018-1T10:15:30Z\", \"strict_ordinal_date_time_no_millis\");\n\n        assertSameDate(\"10:15:30.123Z\", \"strict_time\");\n        assertParseException(\"1:15:30.123Z\", \"strict_time\");\n        assertParseException(\"10:1:30.123Z\", \"strict_time\");\n        assertParseException(\"10:15:3.123Z\", \"strict_time\");\n        assertParseException(\"10:15:3.1\", \"strict_time\");\n        assertParseException(\"10:15:3Z\", \"strict_time\");\n\n        assertSameDate(\"10:15:30Z\", \"strict_time_no_millis\");\n        assertSameDate(\"01:15:30Z\", \"strict_time_no_millis\");\n        assertParseException(\"1:15:30Z\", \"strict_time_no_millis\");\n        assertParseException(\"10:5:30Z\", \"strict_time_no_millis\");\n        assertParseException(\"10:15:3Z\", \"strict_time_no_millis\");\n        assertParseException(\"10:15:3\", \"strict_time_no_millis\");\n\n        assertSameDate(\"T10:15:30.123Z\", \"strict_t_time\");\n        assertParseException(\"T1:15:30.123Z\", \"strict_t_time\");\n        assertParseException(\"T10:1:30.123Z\", \"strict_t_time\");\n        assertParseException(\"T10:15:3.123Z\", \"strict_t_time\");\n        assertParseException(\"T10:15:3.1\", \"strict_t_time\");\n        assertParseException(\"T10:15:3Z\", \"strict_t_time\");\n\n        assertSameDate(\"T10:15:30Z\", \"strict_t_time_no_millis\");\n        assertParseException(\"T1:15:30Z\", \"strict_t_time_no_millis\");\n        assertParseException(\"T10:1:30Z\", \"strict_t_time_no_millis\");\n        assertParseException(\"T10:15:3Z\", \"strict_t_time_no_millis\");\n        assertParseException(\"T10:15:3\", \"strict_t_time_no_millis\");\n\n        assertSameDate(\"2012-W48-6\", \"strict_week_date\");\n        assertSameDate(\"2012-W01-6\", \"strict_week_date\");\n        assertParseException(\"2012-W1-6\", \"strict_week_date\");\n        assertParseException(\"2012-W1-8\", \"strict_week_date\");\n\n        assertSameDate(\"2012-W48-6\", \"strict_week_date\");\n        assertSameDate(\"2012-W01-6\", \"strict_week_date\");\n        assertParseException(\"2012-W1-6\", \"strict_week_date\");\n        \r\n        assertJodaParseException(\"2012-W01-8\", \"strict_week_date\",\n            \"Cannot parse \\\"2012-W01-8\\\": Value 8 for dayOfWeek must be in the range [1,7]\");\n        assertJavaTimeParseException(\"2012-W01-8\", \"strict_week_date\", \"Text '2012-W01-8' could not be parsed\");\n\n        assertSameDate(\"2012-W48-6T10:15:30.123Z\", \"strict_week_date_time\");\n        assertParseException(\"2012-W1-6T10:15:30.123Z\", \"strict_week_date_time\");\n\n        assertSameDate(\"2012-W48-6T10:15:30Z\", \"strict_week_date_time_no_millis\");\n        assertParseException(\"2012-W1-6T10:15:30Z\", \"strict_week_date_time_no_millis\");\n\n        assertSameDate(\"2012\", \"strict_year\");\n        assertParseException(\"1\", \"strict_year\");\n        assertSameDate(\"-2000\", \"strict_year\");\n\n        assertSameDate(\"2012-12\", \"strict_year_month\");\n        assertParseException(\"1-1\", \"strict_year_month\");\n\n        assertSameDate(\"2012-12-31\", \"strict_year_month_day\");\n        assertParseException(\"1-12-31\", \"strict_year_month_day\");\n        assertParseException(\"2012-1-31\", \"strict_year_month_day\");\n        assertParseException(\"2012-12-1\", \"strict_year_month_day\");\n\n        assertSameDate(\"2018\", \"strict_weekyear\");\n        assertParseException(\"1\", \"strict_weekyear\");\n\n        assertSameDate(\"2018\", \"strict_weekyear\");\n        assertSameDate(\"2017\", \"strict_weekyear\");\n        assertParseException(\"1\", \"strict_weekyear\");\n\n        assertSameDate(\"2018-W29\", \"strict_weekyear_week\");\n        assertSameDate(\"2018-W01\", \"strict_weekyear_week\");\n        assertParseException(\"2018-W1\", \"strict_weekyear_week\");\n\n        assertSameDate(\"2012-W31-5\", \"strict_weekyear_week_day\");\n        assertParseException(\"2012-W1-1\", \"strict_weekyear_week_day\");\n    }\n","realPath":"server/src/test/java/org/elasticsearch/common/joda/JavaJodaTimeDuellingTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":322,"status":"M"}],"commitId":"eb12de550aeae0a4d88927183c7c8f3af8facf31","commitMessage":"@@@Java Time: Fix timezone parsing (#37262)\n\n* Java Time: Fix timezone parsing\n\nAn independent test uncovered an issue when parsing a timezone\ncontaining a colon like `01:00` - some formats did not properly support\nthis.\n\nThis commit adds test for all formats in the dueling tests and fixes a\nfew issues with existing date formatters.\n\n* fix tests.  so they run under java8\n","date":"2019-01-10 16:26:01","modifiedFileCount":"3","status":"M","submitter":"Alexander Reelsen"},{"authorTime":"2019-01-10 16:26:01","codes":[{"authorDate":"2019-01-11 16:25:05","commitOrder":9,"curCode":"    public void testDuellingFormatsValidParsing() {\n        assertSameDate(\"1522332219\", \"epoch_second\");\n        assertSameDate(\"0\", \"epoch_second\");\n        assertSameDate(\"1\", \"epoch_second\");\n        assertSameDate(\"1522332219321\", \"epoch_millis\");\n        assertSameDate(\"0\", \"epoch_millis\");\n        assertSameDate(\"1\", \"epoch_millis\");\n\n        assertSameDate(\"20181126\", \"basic_date\");\n        assertSameDate(\"20181126T121212.123Z\", \"basic_date_time\");\n        assertSameDate(\"20181126T121212.123+10:00\", \"basic_date_time\");\n        assertSameDate(\"20181126T121212.123-0800\", \"basic_date_time\");\n\n        assertSameDate(\"20181126T121212Z\", \"basic_date_time_no_millis\");\n        assertSameDate(\"20181126T121212+01:00\", \"basic_date_time_no_millis\");\n        assertSameDate(\"20181126T121212+0100\", \"basic_date_time_no_millis\");\n        assertSameDate(\"2018363\", \"basic_ordinal_date\");\n        assertSameDate(\"2018363T121212.123Z\", \"basic_ordinal_date_time\");\n        assertSameDate(\"2018363T121212.123+0100\", \"basic_ordinal_date_time\");\n        assertSameDate(\"2018363T121212.123+01:00\", \"basic_ordinal_date_time\");\n        assertSameDate(\"2018363T121212Z\", \"basic_ordinal_date_time_no_millis\");\n        assertSameDate(\"2018363T121212+0100\", \"basic_ordinal_date_time_no_millis\");\n        assertSameDate(\"2018363T121212+01:00\", \"basic_ordinal_date_time_no_millis\");\n        assertSameDate(\"121212.123Z\", \"basic_time\");\n        assertSameDate(\"121212.123+0100\", \"basic_time\");\n        assertSameDate(\"121212.123+01:00\", \"basic_time\");\n        assertSameDate(\"121212Z\", \"basic_time_no_millis\");\n        assertSameDate(\"121212+0100\", \"basic_time_no_millis\");\n        assertSameDate(\"121212+01:00\", \"basic_time_no_millis\");\n        assertSameDate(\"T121212.123Z\", \"basic_t_time\");\n        assertSameDate(\"T121212.123+0100\", \"basic_t_time\");\n        assertSameDate(\"T121212.123+01:00\", \"basic_t_time\");\n        assertSameDate(\"T121212Z\", \"basic_t_time_no_millis\");\n        assertSameDate(\"T121212+0100\", \"basic_t_time_no_millis\");\n        assertSameDate(\"T121212+01:00\", \"basic_t_time_no_millis\");\n        assertSameDate(\"2018W313\", \"basic_week_date\");\n        assertSameDate(\"1W313\", \"basic_week_date\");\n        assertSameDate(\"18W313\", \"basic_week_date\");\n        assertSameDate(\"2018W313T121212.123Z\", \"basic_week_date_time\");\n        assertSameDate(\"2018W313T121212.123+0100\", \"basic_week_date_time\");\n        assertSameDate(\"2018W313T121212.123+01:00\", \"basic_week_date_time\");\n        assertSameDate(\"2018W313T121212Z\", \"basic_week_date_time_no_millis\");\n        assertSameDate(\"2018W313T121212+0100\", \"basic_week_date_time_no_millis\");\n        assertSameDate(\"2018W313T121212+01:00\", \"basic_week_date_time_no_millis\");\n\n        assertSameDate(\"2018-12-31\", \"date\");\n        assertSameDate(\"18-5-6\", \"date\");\n        assertSameDate(\"10000-5-6\", \"date\");\n\n        assertSameDate(\"2018-12-31T12\", \"date_hour\");\n        assertSameDate(\"2018-12-31T8\", \"date_hour\");\n\n        assertSameDate(\"2018-12-31T12:12\", \"date_hour_minute\");\n        assertSameDate(\"2018-12-31T8:3\", \"date_hour_minute\");\n\n        assertSameDate(\"2018-12-31T12:12:12\", \"date_hour_minute_second\");\n        assertSameDate(\"2018-12-31T12:12:1\", \"date_hour_minute_second\");\n\n        assertSameDate(\"2018-12-31T12:12:12.123\", \"date_hour_minute_second_fraction\");\n        assertSameDate(\"2018-12-31T12:12:12.123\", \"date_hour_minute_second_millis\");\n        assertSameDate(\"2018-12-31T12:12:12.1\", \"date_hour_minute_second_millis\");\n        assertSameDate(\"2018-12-31T12:12:12.1\", \"date_hour_minute_second_fraction\");\n\n        assertSameDate(\"10000\", \"date_optional_time\");\n        assertSameDate(\"10000T\", \"date_optional_time\");\n        assertSameDate(\"2018\", \"date_optional_time\");\n        assertSameDate(\"2018T\", \"date_optional_time\");\n        assertSameDate(\"2018-05\", \"date_optional_time\");\n        assertSameDate(\"2018-05-30\", \"date_optional_time\");\n        assertSameDate(\"2018-05-30T20\", \"date_optional_time\");\n        assertSameDate(\"2018-05-30T20:21\", \"date_optional_time\");\n        assertSameDate(\"2018-05-30T20:21:23\", \"date_optional_time\");\n        assertSameDate(\"2018-05-30T20:21:23.123\", \"date_optional_time\");\n        assertSameDate(\"2018-05-30T20:21:23.123Z\", \"date_optional_time\");\n        assertSameDate(\"2018-05-30T20:21:23.123+0100\", \"date_optional_time\");\n        assertSameDate(\"2018-05-30T20:21:23.123+01:00\", \"date_optional_time\");\n        assertSameDate(\"2018-12-1\", \"date_optional_time\");\n        assertSameDate(\"2018-12-31T10:15:30\", \"date_optional_time\");\n        assertSameDate(\"2018-12-31T10:15:3\", \"date_optional_time\");\n        assertSameDate(\"2018-12-31T10:5:30\", \"date_optional_time\");\n        assertSameDate(\"2018-12-31T1:15:30\", \"date_optional_time\");\n\n        assertSameDate(\"2018-12-31T10:15:30.123Z\", \"date_time\");\n        assertSameDate(\"2018-12-31T10:15:30.123+0100\", \"date_time\");\n        assertSameDate(\"2018-12-31T10:15:30.123+01:00\", \"date_time\");\n        assertSameDate(\"2018-12-31T10:15:30.11Z\", \"date_time\");\n        assertSameDate(\"2018-12-31T10:15:30.11+0100\", \"date_time\");\n        assertSameDate(\"2018-12-31T10:15:30.11+01:00\", \"date_time\");\n        assertSameDate(\"2018-12-31T10:15:3.123Z\", \"date_time\");\n        assertSameDate(\"2018-12-31T10:15:3.123+0100\", \"date_time\");\n        assertSameDate(\"2018-12-31T10:15:3.123+01:00\", \"date_time\");\n\n        assertSameDate(\"2018-12-31T10:15:30Z\", \"date_time_no_millis\");\n        assertSameDate(\"2018-12-31T10:15:30+0100\", \"date_time_no_millis\");\n        assertSameDate(\"2018-12-31T10:15:30+01:00\", \"date_time_no_millis\");\n        assertSameDate(\"2018-12-31T10:5:30Z\", \"date_time_no_millis\");\n        assertSameDate(\"2018-12-31T10:5:30+0100\", \"date_time_no_millis\");\n        assertSameDate(\"2018-12-31T10:5:30+01:00\", \"date_time_no_millis\");\n        assertSameDate(\"2018-12-31T10:15:3Z\", \"date_time_no_millis\");\n        assertSameDate(\"2018-12-31T10:15:3+0100\", \"date_time_no_millis\");\n        assertSameDate(\"2018-12-31T10:15:3+01:00\", \"date_time_no_millis\");\n        assertSameDate(\"2018-12-31T1:15:30Z\", \"date_time_no_millis\");\n        assertSameDate(\"2018-12-31T1:15:30+0100\", \"date_time_no_millis\");\n        assertSameDate(\"2018-12-31T1:15:30+01:00\", \"date_time_no_millis\");\n\n        assertSameDate(\"12\", \"hour\");\n        assertSameDate(\"01\", \"hour\");\n        assertSameDate(\"1\", \"hour\");\n\n        assertSameDate(\"12:12\", \"hour_minute\");\n        assertSameDate(\"12:01\", \"hour_minute\");\n        assertSameDate(\"12:1\", \"hour_minute\");\n\n        assertSameDate(\"12:12:12\", \"hour_minute_second\");\n        assertSameDate(\"12:12:01\", \"hour_minute_second\");\n        assertSameDate(\"12:12:1\", \"hour_minute_second\");\n\n        assertSameDate(\"12:12:12.123\", \"hour_minute_second_fraction\");\n        assertSameDate(\"12:12:12.1\", \"hour_minute_second_fraction\");\n        assertParseException(\"12:12:12\", \"hour_minute_second_fraction\");\n        assertSameDate(\"12:12:12.123\", \"hour_minute_second_millis\");\n        assertSameDate(\"12:12:12.1\", \"hour_minute_second_millis\");\n        assertParseException(\"12:12:12\", \"hour_minute_second_millis\");\n\n        assertSameDate(\"2018-128\", \"ordinal_date\");\n        assertSameDate(\"2018-1\", \"ordinal_date\");\n\n        assertSameDate(\"2018-128T10:15:30.123Z\", \"ordinal_date_time\");\n        assertSameDate(\"2018-128T10:15:30.123+0100\", \"ordinal_date_time\");\n        assertSameDate(\"2018-128T10:15:30.123+01:00\", \"ordinal_date_time\");\n        assertSameDate(\"2018-1T10:15:30.123Z\", \"ordinal_date_time\");\n        assertSameDate(\"2018-1T10:15:30.123+0100\", \"ordinal_date_time\");\n        assertSameDate(\"2018-1T10:15:30.123+01:00\", \"ordinal_date_time\");\n\n        assertSameDate(\"2018-128T10:15:30Z\", \"ordinal_date_time_no_millis\");\n        assertSameDate(\"2018-128T10:15:30+0100\", \"ordinal_date_time_no_millis\");\n        assertSameDate(\"2018-128T10:15:30+01:00\", \"ordinal_date_time_no_millis\");\n        assertSameDate(\"2018-1T10:15:30Z\", \"ordinal_date_time_no_millis\");\n        assertSameDate(\"2018-1T10:15:30+0100\", \"ordinal_date_time_no_millis\");\n        assertSameDate(\"2018-1T10:15:30+01:00\", \"ordinal_date_time_no_millis\");\n\n        assertSameDate(\"10:15:30.123Z\", \"time\");\n        assertSameDate(\"10:15:30.123+0100\", \"time\");\n        assertSameDate(\"10:15:30.123+01:00\", \"time\");\n        assertSameDate(\"1:15:30.123Z\", \"time\");\n        assertSameDate(\"1:15:30.123+0100\", \"time\");\n        assertSameDate(\"1:15:30.123+01:00\", \"time\");\n        assertSameDate(\"10:1:30.123Z\", \"time\");\n        assertSameDate(\"10:1:30.123+0100\", \"time\");\n        assertSameDate(\"10:1:30.123+01:00\", \"time\");\n        assertSameDate(\"10:15:3.123Z\", \"time\");\n        assertSameDate(\"10:15:3.123+0100\", \"time\");\n        assertSameDate(\"10:15:3.123+01:00\", \"time\");\n        assertParseException(\"10:15:3.1\", \"time\");\n        assertParseException(\"10:15:3Z\", \"time\");\n\n        assertSameDate(\"10:15:30Z\", \"time_no_millis\");\n        assertSameDate(\"10:15:30+0100\", \"time_no_millis\");\n        assertSameDate(\"10:15:30+01:00\", \"time_no_millis\");\n        assertSameDate(\"01:15:30Z\", \"time_no_millis\");\n        assertSameDate(\"01:15:30+0100\", \"time_no_millis\");\n        assertSameDate(\"01:15:30+01:00\", \"time_no_millis\");\n        assertSameDate(\"1:15:30Z\", \"time_no_millis\");\n        assertSameDate(\"1:15:30+0100\", \"time_no_millis\");\n        assertSameDate(\"1:15:30+01:00\", \"time_no_millis\");\n        assertSameDate(\"10:5:30Z\", \"time_no_millis\");\n        assertSameDate(\"10:5:30+0100\", \"time_no_millis\");\n        assertSameDate(\"10:5:30+01:00\", \"time_no_millis\");\n        assertSameDate(\"10:15:3Z\", \"time_no_millis\");\n        assertSameDate(\"10:15:3+0100\", \"time_no_millis\");\n        assertSameDate(\"10:15:3+01:00\", \"time_no_millis\");\n        assertParseException(\"10:15:3\", \"time_no_millis\");\n\n        assertSameDate(\"T10:15:30.123Z\", \"t_time\");\n        assertSameDate(\"T10:15:30.123+0100\", \"t_time\");\n        assertSameDate(\"T10:15:30.123+01:00\", \"t_time\");\n        assertSameDate(\"T1:15:30.123Z\", \"t_time\");\n        assertSameDate(\"T1:15:30.123+0100\", \"t_time\");\n        assertSameDate(\"T1:15:30.123+01:00\", \"t_time\");\n        assertSameDate(\"T10:1:30.123Z\", \"t_time\");\n        assertSameDate(\"T10:1:30.123+0100\", \"t_time\");\n        assertSameDate(\"T10:1:30.123+01:00\", \"t_time\");\n        assertSameDate(\"T10:15:3.123Z\", \"t_time\");\n        assertSameDate(\"T10:15:3.123+0100\", \"t_time\");\n        assertSameDate(\"T10:15:3.123+01:00\", \"t_time\");\n        assertParseException(\"T10:15:3.1\", \"t_time\");\n        assertParseException(\"T10:15:3Z\", \"t_time\");\n\n        assertSameDate(\"T10:15:30Z\", \"t_time_no_millis\");\n        assertSameDate(\"T10:15:30+0100\", \"t_time_no_millis\");\n        assertSameDate(\"T10:15:30+01:00\", \"t_time_no_millis\");\n        assertSameDate(\"T1:15:30Z\", \"t_time_no_millis\");\n        assertSameDate(\"T1:15:30+0100\", \"t_time_no_millis\");\n        assertSameDate(\"T1:15:30+01:00\", \"t_time_no_millis\");\n        assertSameDate(\"T10:1:30Z\", \"t_time_no_millis\");\n        assertSameDate(\"T10:1:30+0100\", \"t_time_no_millis\");\n        assertSameDate(\"T10:1:30+01:00\", \"t_time_no_millis\");\n        assertSameDate(\"T10:15:3Z\", \"t_time_no_millis\");\n        assertSameDate(\"T10:15:3+0100\", \"t_time_no_millis\");\n        assertSameDate(\"T10:15:3+01:00\", \"t_time_no_millis\");\n        assertParseException(\"T10:15:3\", \"t_time_no_millis\");\n\n        assertSameDate(\"2012-W48-6\", \"week_date\");\n        assertSameDate(\"2012-W01-6\", \"week_date\");\n        assertSameDate(\"2012-W1-6\", \"week_date\");\n        \r\n        assertJodaParseException(\"2012-W1-8\", \"week_date\",\n            \"Cannot parse \\\"2012-W1-8\\\": Value 8 for dayOfWeek must be in the range [1,7]\");\n        assertJavaTimeParseException(\"2012-W1-8\", \"week_date\", \"Text '2012-W1-8' could not be parsed\");\n\n        assertSameDate(\"2012-W48-6T10:15:30.123Z\", \"week_date_time\");\n        assertSameDate(\"2012-W48-6T10:15:30.123+0100\", \"week_date_time\");\n        assertSameDate(\"2012-W48-6T10:15:30.123+01:00\", \"week_date_time\");\n        assertSameDate(\"2012-W1-6T10:15:30.123Z\", \"week_date_time\");\n        assertSameDate(\"2012-W1-6T10:15:30.123+0100\", \"week_date_time\");\n        assertSameDate(\"2012-W1-6T10:15:30.123+01:00\", \"week_date_time\");\n\n        assertSameDate(\"2012-W48-6T10:15:30Z\", \"week_date_time_no_millis\");\n        assertSameDate(\"2012-W48-6T10:15:30+0100\", \"week_date_time_no_millis\");\n        assertSameDate(\"2012-W48-6T10:15:30+01:00\", \"week_date_time_no_millis\");\n        assertSameDate(\"2012-W1-6T10:15:30Z\", \"week_date_time_no_millis\");\n        assertSameDate(\"2012-W1-6T10:15:30+0100\", \"week_date_time_no_millis\");\n        assertSameDate(\"2012-W1-6T10:15:30+01:00\", \"week_date_time_no_millis\");\n\n        assertSameDate(\"2012\", \"year\");\n        assertSameDate(\"1\", \"year\");\n        assertSameDate(\"-2000\", \"year\");\n\n        assertSameDate(\"2012-12\", \"yearMonth\");\n        assertSameDate(\"1-1\", \"yearMonth\");\n\n        assertSameDate(\"2012-12-31\", \"yearMonthDay\");\n        assertSameDate(\"1-12-31\", \"yearMonthDay\");\n        assertSameDate(\"2012-1-31\", \"yearMonthDay\");\n        assertSameDate(\"2012-12-1\", \"yearMonthDay\");\n\n        assertSameDate(\"2018\", \"week_year\");\n        assertSameDate(\"1\", \"week_year\");\n        assertSameDate(\"2017\", \"week_year\");\n\n        assertSameDate(\"2018-W29\", \"weekyear_week\");\n        assertSameDate(\"2018-W1\", \"weekyear_week\");\n\n        assertSameDate(\"2012-W31-5\", \"weekyear_week_day\");\n        assertSameDate(\"2012-W1-1\", \"weekyear_week_day\");\n    }\n","date":"2019-01-11 16:25:05","endLine":318,"groupId":"48962","id":17,"instanceNumber":1,"isCurCommit":0,"methodName":"testDuellingFormatsValidParsing","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/b2/370dadb604c1ab3f11a692469776be45427a95.src","preCode":"    public void testDuellingFormatsValidParsing() {\n        assertSameDate(\"1522332219\", \"epoch_second\");\n        assertSameDate(\"1522332219.\", \"epoch_second\");\n        assertSameDate(\"1522332219.0\", \"epoch_second\");\n        assertSameDate(\"0\", \"epoch_second\");\n        assertSameDate(\"1\", \"epoch_second\");\n        assertSameDate(\"1522332219321\", \"epoch_millis\");\n        assertSameDate(\"0\", \"epoch_millis\");\n        assertSameDate(\"1\", \"epoch_millis\");\n\n        assertSameDate(\"20181126\", \"basic_date\");\n        assertSameDate(\"20181126T121212.123Z\", \"basic_date_time\");\n        assertSameDate(\"20181126T121212.123+10:00\", \"basic_date_time\");\n        assertSameDate(\"20181126T121212.123-0800\", \"basic_date_time\");\n\n        assertSameDate(\"20181126T121212Z\", \"basic_date_time_no_millis\");\n        assertSameDate(\"20181126T121212+01:00\", \"basic_date_time_no_millis\");\n        assertSameDate(\"20181126T121212+0100\", \"basic_date_time_no_millis\");\n        assertSameDate(\"2018363\", \"basic_ordinal_date\");\n        assertSameDate(\"2018363T121212.123Z\", \"basic_ordinal_date_time\");\n        assertSameDate(\"2018363T121212.123+0100\", \"basic_ordinal_date_time\");\n        assertSameDate(\"2018363T121212.123+01:00\", \"basic_ordinal_date_time\");\n        assertSameDate(\"2018363T121212Z\", \"basic_ordinal_date_time_no_millis\");\n        assertSameDate(\"2018363T121212+0100\", \"basic_ordinal_date_time_no_millis\");\n        assertSameDate(\"2018363T121212+01:00\", \"basic_ordinal_date_time_no_millis\");\n        assertSameDate(\"121212.123Z\", \"basic_time\");\n        assertSameDate(\"121212.123+0100\", \"basic_time\");\n        assertSameDate(\"121212.123+01:00\", \"basic_time\");\n        assertSameDate(\"121212Z\", \"basic_time_no_millis\");\n        assertSameDate(\"121212+0100\", \"basic_time_no_millis\");\n        assertSameDate(\"121212+01:00\", \"basic_time_no_millis\");\n        assertSameDate(\"T121212.123Z\", \"basic_t_time\");\n        assertSameDate(\"T121212.123+0100\", \"basic_t_time\");\n        assertSameDate(\"T121212.123+01:00\", \"basic_t_time\");\n        assertSameDate(\"T121212Z\", \"basic_t_time_no_millis\");\n        assertSameDate(\"T121212+0100\", \"basic_t_time_no_millis\");\n        assertSameDate(\"T121212+01:00\", \"basic_t_time_no_millis\");\n        assertSameDate(\"2018W313\", \"basic_week_date\");\n        assertSameDate(\"1W313\", \"basic_week_date\");\n        assertSameDate(\"18W313\", \"basic_week_date\");\n        assertSameDate(\"2018W313T121212.123Z\", \"basic_week_date_time\");\n        assertSameDate(\"2018W313T121212.123+0100\", \"basic_week_date_time\");\n        assertSameDate(\"2018W313T121212.123+01:00\", \"basic_week_date_time\");\n        assertSameDate(\"2018W313T121212Z\", \"basic_week_date_time_no_millis\");\n        assertSameDate(\"2018W313T121212+0100\", \"basic_week_date_time_no_millis\");\n        assertSameDate(\"2018W313T121212+01:00\", \"basic_week_date_time_no_millis\");\n\n        assertSameDate(\"2018-12-31\", \"date\");\n        assertSameDate(\"18-5-6\", \"date\");\n        assertSameDate(\"10000-5-6\", \"date\");\n\n        assertSameDate(\"2018-12-31T12\", \"date_hour\");\n        assertSameDate(\"2018-12-31T8\", \"date_hour\");\n\n        assertSameDate(\"2018-12-31T12:12\", \"date_hour_minute\");\n        assertSameDate(\"2018-12-31T8:3\", \"date_hour_minute\");\n\n        assertSameDate(\"2018-12-31T12:12:12\", \"date_hour_minute_second\");\n        assertSameDate(\"2018-12-31T12:12:1\", \"date_hour_minute_second\");\n\n        assertSameDate(\"2018-12-31T12:12:12.123\", \"date_hour_minute_second_fraction\");\n        assertSameDate(\"2018-12-31T12:12:12.123\", \"date_hour_minute_second_millis\");\n        assertSameDate(\"2018-12-31T12:12:12.1\", \"date_hour_minute_second_millis\");\n        assertSameDate(\"2018-12-31T12:12:12.1\", \"date_hour_minute_second_fraction\");\n\n        assertSameDate(\"10000\", \"date_optional_time\");\n        assertSameDate(\"10000T\", \"date_optional_time\");\n        assertSameDate(\"2018\", \"date_optional_time\");\n        assertSameDate(\"2018T\", \"date_optional_time\");\n        assertSameDate(\"2018-05\", \"date_optional_time\");\n        assertSameDate(\"2018-05-30\", \"date_optional_time\");\n        assertSameDate(\"2018-05-30T20\", \"date_optional_time\");\n        assertSameDate(\"2018-05-30T20:21\", \"date_optional_time\");\n        assertSameDate(\"2018-05-30T20:21:23\", \"date_optional_time\");\n        assertSameDate(\"2018-05-30T20:21:23.123\", \"date_optional_time\");\n        assertSameDate(\"2018-05-30T20:21:23.123Z\", \"date_optional_time\");\n        assertSameDate(\"2018-05-30T20:21:23.123+0100\", \"date_optional_time\");\n        assertSameDate(\"2018-05-30T20:21:23.123+01:00\", \"date_optional_time\");\n        assertSameDate(\"2018-12-1\", \"date_optional_time\");\n        assertSameDate(\"2018-12-31T10:15:30\", \"date_optional_time\");\n        assertSameDate(\"2018-12-31T10:15:3\", \"date_optional_time\");\n        assertSameDate(\"2018-12-31T10:5:30\", \"date_optional_time\");\n        assertSameDate(\"2018-12-31T1:15:30\", \"date_optional_time\");\n\n        assertSameDate(\"2018-12-31T10:15:30.123Z\", \"date_time\");\n        assertSameDate(\"2018-12-31T10:15:30.123+0100\", \"date_time\");\n        assertSameDate(\"2018-12-31T10:15:30.123+01:00\", \"date_time\");\n        assertSameDate(\"2018-12-31T10:15:30.11Z\", \"date_time\");\n        assertSameDate(\"2018-12-31T10:15:30.11+0100\", \"date_time\");\n        assertSameDate(\"2018-12-31T10:15:30.11+01:00\", \"date_time\");\n        assertSameDate(\"2018-12-31T10:15:3.123Z\", \"date_time\");\n        assertSameDate(\"2018-12-31T10:15:3.123+0100\", \"date_time\");\n        assertSameDate(\"2018-12-31T10:15:3.123+01:00\", \"date_time\");\n\n        assertSameDate(\"2018-12-31T10:15:30Z\", \"date_time_no_millis\");\n        assertSameDate(\"2018-12-31T10:15:30+0100\", \"date_time_no_millis\");\n        assertSameDate(\"2018-12-31T10:15:30+01:00\", \"date_time_no_millis\");\n        assertSameDate(\"2018-12-31T10:5:30Z\", \"date_time_no_millis\");\n        assertSameDate(\"2018-12-31T10:5:30+0100\", \"date_time_no_millis\");\n        assertSameDate(\"2018-12-31T10:5:30+01:00\", \"date_time_no_millis\");\n        assertSameDate(\"2018-12-31T10:15:3Z\", \"date_time_no_millis\");\n        assertSameDate(\"2018-12-31T10:15:3+0100\", \"date_time_no_millis\");\n        assertSameDate(\"2018-12-31T10:15:3+01:00\", \"date_time_no_millis\");\n        assertSameDate(\"2018-12-31T1:15:30Z\", \"date_time_no_millis\");\n        assertSameDate(\"2018-12-31T1:15:30+0100\", \"date_time_no_millis\");\n        assertSameDate(\"2018-12-31T1:15:30+01:00\", \"date_time_no_millis\");\n\n        assertSameDate(\"12\", \"hour\");\n        assertSameDate(\"01\", \"hour\");\n        assertSameDate(\"1\", \"hour\");\n\n        assertSameDate(\"12:12\", \"hour_minute\");\n        assertSameDate(\"12:01\", \"hour_minute\");\n        assertSameDate(\"12:1\", \"hour_minute\");\n\n        assertSameDate(\"12:12:12\", \"hour_minute_second\");\n        assertSameDate(\"12:12:01\", \"hour_minute_second\");\n        assertSameDate(\"12:12:1\", \"hour_minute_second\");\n\n        assertSameDate(\"12:12:12.123\", \"hour_minute_second_fraction\");\n        assertSameDate(\"12:12:12.1\", \"hour_minute_second_fraction\");\n        assertParseException(\"12:12:12\", \"hour_minute_second_fraction\");\n        assertSameDate(\"12:12:12.123\", \"hour_minute_second_millis\");\n        assertSameDate(\"12:12:12.1\", \"hour_minute_second_millis\");\n        assertParseException(\"12:12:12\", \"hour_minute_second_millis\");\n\n        assertSameDate(\"2018-128\", \"ordinal_date\");\n        assertSameDate(\"2018-1\", \"ordinal_date\");\n\n        assertSameDate(\"2018-128T10:15:30.123Z\", \"ordinal_date_time\");\n        assertSameDate(\"2018-128T10:15:30.123+0100\", \"ordinal_date_time\");\n        assertSameDate(\"2018-128T10:15:30.123+01:00\", \"ordinal_date_time\");\n        assertSameDate(\"2018-1T10:15:30.123Z\", \"ordinal_date_time\");\n        assertSameDate(\"2018-1T10:15:30.123+0100\", \"ordinal_date_time\");\n        assertSameDate(\"2018-1T10:15:30.123+01:00\", \"ordinal_date_time\");\n\n        assertSameDate(\"2018-128T10:15:30Z\", \"ordinal_date_time_no_millis\");\n        assertSameDate(\"2018-128T10:15:30+0100\", \"ordinal_date_time_no_millis\");\n        assertSameDate(\"2018-128T10:15:30+01:00\", \"ordinal_date_time_no_millis\");\n        assertSameDate(\"2018-1T10:15:30Z\", \"ordinal_date_time_no_millis\");\n        assertSameDate(\"2018-1T10:15:30+0100\", \"ordinal_date_time_no_millis\");\n        assertSameDate(\"2018-1T10:15:30+01:00\", \"ordinal_date_time_no_millis\");\n\n        assertSameDate(\"10:15:30.123Z\", \"time\");\n        assertSameDate(\"10:15:30.123+0100\", \"time\");\n        assertSameDate(\"10:15:30.123+01:00\", \"time\");\n        assertSameDate(\"1:15:30.123Z\", \"time\");\n        assertSameDate(\"1:15:30.123+0100\", \"time\");\n        assertSameDate(\"1:15:30.123+01:00\", \"time\");\n        assertSameDate(\"10:1:30.123Z\", \"time\");\n        assertSameDate(\"10:1:30.123+0100\", \"time\");\n        assertSameDate(\"10:1:30.123+01:00\", \"time\");\n        assertSameDate(\"10:15:3.123Z\", \"time\");\n        assertSameDate(\"10:15:3.123+0100\", \"time\");\n        assertSameDate(\"10:15:3.123+01:00\", \"time\");\n        assertParseException(\"10:15:3.1\", \"time\");\n        assertParseException(\"10:15:3Z\", \"time\");\n\n        assertSameDate(\"10:15:30Z\", \"time_no_millis\");\n        assertSameDate(\"10:15:30+0100\", \"time_no_millis\");\n        assertSameDate(\"10:15:30+01:00\", \"time_no_millis\");\n        assertSameDate(\"01:15:30Z\", \"time_no_millis\");\n        assertSameDate(\"01:15:30+0100\", \"time_no_millis\");\n        assertSameDate(\"01:15:30+01:00\", \"time_no_millis\");\n        assertSameDate(\"1:15:30Z\", \"time_no_millis\");\n        assertSameDate(\"1:15:30+0100\", \"time_no_millis\");\n        assertSameDate(\"1:15:30+01:00\", \"time_no_millis\");\n        assertSameDate(\"10:5:30Z\", \"time_no_millis\");\n        assertSameDate(\"10:5:30+0100\", \"time_no_millis\");\n        assertSameDate(\"10:5:30+01:00\", \"time_no_millis\");\n        assertSameDate(\"10:15:3Z\", \"time_no_millis\");\n        assertSameDate(\"10:15:3+0100\", \"time_no_millis\");\n        assertSameDate(\"10:15:3+01:00\", \"time_no_millis\");\n        assertParseException(\"10:15:3\", \"time_no_millis\");\n\n        assertSameDate(\"T10:15:30.123Z\", \"t_time\");\n        assertSameDate(\"T10:15:30.123+0100\", \"t_time\");\n        assertSameDate(\"T10:15:30.123+01:00\", \"t_time\");\n        assertSameDate(\"T1:15:30.123Z\", \"t_time\");\n        assertSameDate(\"T1:15:30.123+0100\", \"t_time\");\n        assertSameDate(\"T1:15:30.123+01:00\", \"t_time\");\n        assertSameDate(\"T10:1:30.123Z\", \"t_time\");\n        assertSameDate(\"T10:1:30.123+0100\", \"t_time\");\n        assertSameDate(\"T10:1:30.123+01:00\", \"t_time\");\n        assertSameDate(\"T10:15:3.123Z\", \"t_time\");\n        assertSameDate(\"T10:15:3.123+0100\", \"t_time\");\n        assertSameDate(\"T10:15:3.123+01:00\", \"t_time\");\n        assertParseException(\"T10:15:3.1\", \"t_time\");\n        assertParseException(\"T10:15:3Z\", \"t_time\");\n\n        assertSameDate(\"T10:15:30Z\", \"t_time_no_millis\");\n        assertSameDate(\"T10:15:30+0100\", \"t_time_no_millis\");\n        assertSameDate(\"T10:15:30+01:00\", \"t_time_no_millis\");\n        assertSameDate(\"T1:15:30Z\", \"t_time_no_millis\");\n        assertSameDate(\"T1:15:30+0100\", \"t_time_no_millis\");\n        assertSameDate(\"T1:15:30+01:00\", \"t_time_no_millis\");\n        assertSameDate(\"T10:1:30Z\", \"t_time_no_millis\");\n        assertSameDate(\"T10:1:30+0100\", \"t_time_no_millis\");\n        assertSameDate(\"T10:1:30+01:00\", \"t_time_no_millis\");\n        assertSameDate(\"T10:15:3Z\", \"t_time_no_millis\");\n        assertSameDate(\"T10:15:3+0100\", \"t_time_no_millis\");\n        assertSameDate(\"T10:15:3+01:00\", \"t_time_no_millis\");\n        assertParseException(\"T10:15:3\", \"t_time_no_millis\");\n\n        assertSameDate(\"2012-W48-6\", \"week_date\");\n        assertSameDate(\"2012-W01-6\", \"week_date\");\n        assertSameDate(\"2012-W1-6\", \"week_date\");\n        \r\n        assertJodaParseException(\"2012-W1-8\", \"week_date\",\n            \"Cannot parse \\\"2012-W1-8\\\": Value 8 for dayOfWeek must be in the range [1,7]\");\n        assertJavaTimeParseException(\"2012-W1-8\", \"week_date\", \"Text '2012-W1-8' could not be parsed\");\n\n        assertSameDate(\"2012-W48-6T10:15:30.123Z\", \"week_date_time\");\n        assertSameDate(\"2012-W48-6T10:15:30.123+0100\", \"week_date_time\");\n        assertSameDate(\"2012-W48-6T10:15:30.123+01:00\", \"week_date_time\");\n        assertSameDate(\"2012-W1-6T10:15:30.123Z\", \"week_date_time\");\n        assertSameDate(\"2012-W1-6T10:15:30.123+0100\", \"week_date_time\");\n        assertSameDate(\"2012-W1-6T10:15:30.123+01:00\", \"week_date_time\");\n\n        assertSameDate(\"2012-W48-6T10:15:30Z\", \"week_date_time_no_millis\");\n        assertSameDate(\"2012-W48-6T10:15:30+0100\", \"week_date_time_no_millis\");\n        assertSameDate(\"2012-W48-6T10:15:30+01:00\", \"week_date_time_no_millis\");\n        assertSameDate(\"2012-W1-6T10:15:30Z\", \"week_date_time_no_millis\");\n        assertSameDate(\"2012-W1-6T10:15:30+0100\", \"week_date_time_no_millis\");\n        assertSameDate(\"2012-W1-6T10:15:30+01:00\", \"week_date_time_no_millis\");\n\n        assertSameDate(\"2012\", \"year\");\n        assertSameDate(\"1\", \"year\");\n        assertSameDate(\"-2000\", \"year\");\n\n        assertSameDate(\"2012-12\", \"yearMonth\");\n        assertSameDate(\"1-1\", \"yearMonth\");\n\n        assertSameDate(\"2012-12-31\", \"yearMonthDay\");\n        assertSameDate(\"1-12-31\", \"yearMonthDay\");\n        assertSameDate(\"2012-1-31\", \"yearMonthDay\");\n        assertSameDate(\"2012-12-1\", \"yearMonthDay\");\n\n        assertSameDate(\"2018\", \"week_year\");\n        assertSameDate(\"1\", \"week_year\");\n        assertSameDate(\"2017\", \"week_year\");\n\n        assertSameDate(\"2018-W29\", \"weekyear_week\");\n        assertSameDate(\"2018-W1\", \"weekyear_week\");\n\n        assertSameDate(\"2012-W31-5\", \"weekyear_week_day\");\n        assertSameDate(\"2012-W1-1\", \"weekyear_week_day\");\n    }\n","realPath":"server/src/test/java/org/elasticsearch/common/joda/JavaJodaTimeDuellingTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":73,"status":"M"},{"authorDate":"2019-01-10 16:26:01","commitOrder":9,"curCode":"    public void testDuelingStrictParsing() {\n        assertSameDate(\"2018W313\", \"strict_basic_week_date\");\n        assertParseException(\"18W313\", \"strict_basic_week_date\");\n        assertSameDate(\"2018W313T121212.123Z\", \"strict_basic_week_date_time\");\n        assertSameDate(\"2018W313T121212.123+0100\", \"strict_basic_week_date_time\");\n        assertSameDate(\"2018W313T121212.123+01:00\", \"strict_basic_week_date_time\");\n        assertParseException(\"2018W313T12128.123Z\", \"strict_basic_week_date_time\");\n        assertParseException(\"2018W313T81212.123Z\", \"strict_basic_week_date_time\");\n        assertParseException(\"2018W313T12812.123Z\", \"strict_basic_week_date_time\");\n        assertParseException(\"2018W313T12812.1Z\", \"strict_basic_week_date_time\");\n        assertSameDate(\"2018W313T121212Z\", \"strict_basic_week_date_time_no_millis\");\n        assertSameDate(\"2018W313T121212+0100\", \"strict_basic_week_date_time_no_millis\");\n        assertSameDate(\"2018W313T121212+01:00\", \"strict_basic_week_date_time_no_millis\");\n        assertParseException(\"2018W313T12128Z\", \"strict_basic_week_date_time_no_millis\");\n        assertParseException(\"2018W313T12128+0100\", \"strict_basic_week_date_time_no_millis\");\n        assertParseException(\"2018W313T12128+01:00\", \"strict_basic_week_date_time_no_millis\");\n        assertParseException(\"2018W313T81212Z\", \"strict_basic_week_date_time_no_millis\");\n        assertParseException(\"2018W313T81212+0100\", \"strict_basic_week_date_time_no_millis\");\n        assertParseException(\"2018W313T81212+01:00\", \"strict_basic_week_date_time_no_millis\");\n        assertParseException(\"2018W313T12812Z\", \"strict_basic_week_date_time_no_millis\");\n        assertParseException(\"2018W313T12812+0100\", \"strict_basic_week_date_time_no_millis\");\n        assertParseException(\"2018W313T12812+01:00\", \"strict_basic_week_date_time_no_millis\");\n        assertSameDate(\"2018-12-31\", \"strict_date\");\n        assertParseException(\"10000-12-31\", \"strict_date\");\n        assertParseException(\"2018-8-31\", \"strict_date\");\n        assertSameDate(\"2018-12-31T12\", \"strict_date_hour\");\n        assertParseException(\"2018-12-31T8\", \"strict_date_hour\");\n        assertSameDate(\"2018-12-31T12:12\", \"strict_date_hour_minute\");\n        assertParseException(\"2018-12-31T8:3\", \"strict_date_hour_minute\");\n        assertSameDate(\"2018-12-31T12:12:12\", \"strict_date_hour_minute_second\");\n        assertParseException(\"2018-12-31T12:12:1\", \"strict_date_hour_minute_second\");\n        assertSameDate(\"2018-12-31T12:12:12.123\", \"strict_date_hour_minute_second_fraction\");\n        assertSameDate(\"2018-12-31T12:12:12.123\", \"strict_date_hour_minute_second_millis\");\n        assertSameDate(\"2018-12-31T12:12:12.1\", \"strict_date_hour_minute_second_millis\");\n        assertSameDate(\"2018-12-31T12:12:12.1\", \"strict_date_hour_minute_second_fraction\");\n        assertParseException(\"2018-12-31T12:12:12\", \"strict_date_hour_minute_second_millis\");\n        assertParseException(\"2018-12-31T12:12:12\", \"strict_date_hour_minute_second_fraction\");\n        assertSameDate(\"2018-12-31\", \"strict_date_optional_time\");\n        assertParseException(\"2018-12-1\", \"strict_date_optional_time\");\n        assertParseException(\"2018-1-31\", \"strict_date_optional_time\");\n        assertParseException(\"10000-01-31\", \"strict_date_optional_time\");\n        assertSameDate(\"2018-12-31T10:15:30\", \"strict_date_optional_time\");\n        assertSameDate(\"2018-12-31T10:15:30Z\", \"strict_date_optional_time\");\n        assertSameDate(\"2018-12-31T10:15:30+0100\", \"strict_date_optional_time\");\n        assertSameDate(\"2018-12-31T10:15:30+01:00\", \"strict_date_optional_time\");\n        assertParseException(\"2018-12-31T10:15:3\", \"strict_date_optional_time\");\n        assertParseException(\"2018-12-31T10:5:30\", \"strict_date_optional_time\");\n        assertParseException(\"2018-12-31T9:15:30\", \"strict_date_optional_time\");\n        assertSameDate(\"2018-12-31T10:15:30.123Z\", \"strict_date_time\");\n        assertSameDate(\"2018-12-31T10:15:30.123+0100\", \"strict_date_time\");\n        assertSameDate(\"2018-12-31T10:15:30.123+01:00\", \"strict_date_time\");\n        assertSameDate(\"2018-12-31T10:15:30.11Z\", \"strict_date_time\");\n        assertSameDate(\"2018-12-31T10:15:30.11+0100\", \"strict_date_time\");\n        assertSameDate(\"2018-12-31T10:15:30.11+01:00\", \"strict_date_time\");\n        assertParseException(\"2018-12-31T10:15:3.123Z\", \"strict_date_time\");\n        assertParseException(\"2018-12-31T10:5:30.123Z\", \"strict_date_time\");\n        assertParseException(\"2018-12-31T1:15:30.123Z\", \"strict_date_time\");\n        assertSameDate(\"2018-12-31T10:15:30Z\", \"strict_date_time_no_millis\");\n        assertSameDate(\"2018-12-31T10:15:30+0100\", \"strict_date_time_no_millis\");\n        assertSameDate(\"2018-12-31T10:15:30+01:00\", \"strict_date_time_no_millis\");\n        assertParseException(\"2018-12-31T10:5:30Z\", \"strict_date_time_no_millis\");\n        assertParseException(\"2018-12-31T10:15:3Z\", \"strict_date_time_no_millis\");\n        assertParseException(\"2018-12-31T1:15:30Z\", \"strict_date_time_no_millis\");\n        assertSameDate(\"12\", \"strict_hour\");\n        assertSameDate(\"01\", \"strict_hour\");\n        assertParseException(\"1\", \"strict_hour\");\n        assertSameDate(\"12:12\", \"strict_hour_minute\");\n        assertSameDate(\"12:01\", \"strict_hour_minute\");\n        assertParseException(\"12:1\", \"strict_hour_minute\");\n        assertSameDate(\"12:12:12\", \"strict_hour_minute_second\");\n        assertSameDate(\"12:12:01\", \"strict_hour_minute_second\");\n        assertParseException(\"12:12:1\", \"strict_hour_minute_second\");\n        assertSameDate(\"12:12:12.123\", \"strict_hour_minute_second_fraction\");\n        assertSameDate(\"12:12:12.1\", \"strict_hour_minute_second_fraction\");\n        assertParseException(\"12:12:12\", \"strict_hour_minute_second_fraction\");\n        assertSameDate(\"12:12:12.123\", \"strict_hour_minute_second_millis\");\n        assertSameDate(\"12:12:12.1\", \"strict_hour_minute_second_millis\");\n        assertParseException(\"12:12:12\", \"strict_hour_minute_second_millis\");\n        assertSameDate(\"2018-128\", \"strict_ordinal_date\");\n        assertParseException(\"2018-1\", \"strict_ordinal_date\");\n\n        assertSameDate(\"2018-128T10:15:30.123Z\", \"strict_ordinal_date_time\");\n        assertSameDate(\"2018-128T10:15:30.123+0100\", \"strict_ordinal_date_time\");\n        assertSameDate(\"2018-128T10:15:30.123+01:00\", \"strict_ordinal_date_time\");\n        assertParseException(\"2018-1T10:15:30.123Z\", \"strict_ordinal_date_time\");\n\n        assertSameDate(\"2018-128T10:15:30Z\", \"strict_ordinal_date_time_no_millis\");\n        assertSameDate(\"2018-128T10:15:30+0100\", \"strict_ordinal_date_time_no_millis\");\n        assertSameDate(\"2018-128T10:15:30+01:00\", \"strict_ordinal_date_time_no_millis\");\n        assertParseException(\"2018-1T10:15:30Z\", \"strict_ordinal_date_time_no_millis\");\n\n        assertSameDate(\"10:15:30.123Z\", \"strict_time\");\n        assertSameDate(\"10:15:30.123+0100\", \"strict_time\");\n        assertSameDate(\"10:15:30.123+01:00\", \"strict_time\");\n        assertParseException(\"1:15:30.123Z\", \"strict_time\");\n        assertParseException(\"10:1:30.123Z\", \"strict_time\");\n        assertParseException(\"10:15:3.123Z\", \"strict_time\");\n        assertParseException(\"10:15:3.1\", \"strict_time\");\n        assertParseException(\"10:15:3Z\", \"strict_time\");\n\n        assertSameDate(\"10:15:30Z\", \"strict_time_no_millis\");\n        assertSameDate(\"10:15:30+0100\", \"strict_time_no_millis\");\n        assertSameDate(\"10:15:30+01:00\", \"strict_time_no_millis\");\n        assertSameDate(\"01:15:30Z\", \"strict_time_no_millis\");\n        assertSameDate(\"01:15:30+0100\", \"strict_time_no_millis\");\n        assertSameDate(\"01:15:30+01:00\", \"strict_time_no_millis\");\n        assertParseException(\"1:15:30Z\", \"strict_time_no_millis\");\n        assertParseException(\"10:5:30Z\", \"strict_time_no_millis\");\n        assertParseException(\"10:15:3Z\", \"strict_time_no_millis\");\n        assertParseException(\"10:15:3\", \"strict_time_no_millis\");\n\n        assertSameDate(\"T10:15:30.123Z\", \"strict_t_time\");\n        assertSameDate(\"T10:15:30.123+0100\", \"strict_t_time\");\n        assertSameDate(\"T10:15:30.123+01:00\", \"strict_t_time\");\n        assertParseException(\"T1:15:30.123Z\", \"strict_t_time\");\n        assertParseException(\"T10:1:30.123Z\", \"strict_t_time\");\n        assertParseException(\"T10:15:3.123Z\", \"strict_t_time\");\n        assertParseException(\"T10:15:3.1\", \"strict_t_time\");\n        assertParseException(\"T10:15:3Z\", \"strict_t_time\");\n\n        assertSameDate(\"T10:15:30Z\", \"strict_t_time_no_millis\");\n        assertSameDate(\"T10:15:30+0100\", \"strict_t_time_no_millis\");\n        assertSameDate(\"T10:15:30+01:00\", \"strict_t_time_no_millis\");\n        assertParseException(\"T1:15:30Z\", \"strict_t_time_no_millis\");\n        assertParseException(\"T10:1:30Z\", \"strict_t_time_no_millis\");\n        assertParseException(\"T10:15:3Z\", \"strict_t_time_no_millis\");\n        assertParseException(\"T10:15:3\", \"strict_t_time_no_millis\");\n\n        assertSameDate(\"2012-W48-6\", \"strict_week_date\");\n        assertSameDate(\"2012-W01-6\", \"strict_week_date\");\n        assertParseException(\"2012-W1-6\", \"strict_week_date\");\n        assertParseException(\"2012-W1-8\", \"strict_week_date\");\n\n        assertSameDate(\"2012-W48-6\", \"strict_week_date\");\n        assertSameDate(\"2012-W01-6\", \"strict_week_date\");\n        assertParseException(\"2012-W1-6\", \"strict_week_date\");\n        \r\n        assertJodaParseException(\"2012-W01-8\", \"strict_week_date\",\n            \"Cannot parse \\\"2012-W01-8\\\": Value 8 for dayOfWeek must be in the range [1,7]\");\n        assertJavaTimeParseException(\"2012-W01-8\", \"strict_week_date\", \"Text '2012-W01-8' could not be parsed\");\n\n        assertSameDate(\"2012-W48-6T10:15:30.123Z\", \"strict_week_date_time\");\n        assertSameDate(\"2012-W48-6T10:15:30.123+0100\", \"strict_week_date_time\");\n        assertSameDate(\"2012-W48-6T10:15:30.123+01:00\", \"strict_week_date_time\");\n        assertParseException(\"2012-W1-6T10:15:30.123Z\", \"strict_week_date_time\");\n\n        assertSameDate(\"2012-W48-6T10:15:30Z\", \"strict_week_date_time_no_millis\");\n        assertSameDate(\"2012-W48-6T10:15:30+0100\", \"strict_week_date_time_no_millis\");\n        assertSameDate(\"2012-W48-6T10:15:30+01:00\", \"strict_week_date_time_no_millis\");\n        assertParseException(\"2012-W1-6T10:15:30Z\", \"strict_week_date_time_no_millis\");\n\n        assertSameDate(\"2012\", \"strict_year\");\n        assertParseException(\"1\", \"strict_year\");\n        assertSameDate(\"-2000\", \"strict_year\");\n\n        assertSameDate(\"2012-12\", \"strict_year_month\");\n        assertParseException(\"1-1\", \"strict_year_month\");\n\n        assertSameDate(\"2012-12-31\", \"strict_year_month_day\");\n        assertParseException(\"1-12-31\", \"strict_year_month_day\");\n        assertParseException(\"2012-1-31\", \"strict_year_month_day\");\n        assertParseException(\"2012-12-1\", \"strict_year_month_day\");\n\n        assertSameDate(\"2018\", \"strict_weekyear\");\n        assertParseException(\"1\", \"strict_weekyear\");\n\n        assertSameDate(\"2018\", \"strict_weekyear\");\n        assertSameDate(\"2017\", \"strict_weekyear\");\n        assertParseException(\"1\", \"strict_weekyear\");\n\n        assertSameDate(\"2018-W29\", \"strict_weekyear_week\");\n        assertSameDate(\"2018-W01\", \"strict_weekyear_week\");\n        assertParseException(\"2018-W1\", \"strict_weekyear_week\");\n\n        assertSameDate(\"2012-W31-5\", \"strict_weekyear_week_day\");\n        assertParseException(\"2012-W1-1\", \"strict_weekyear_week_day\");\n    }\n","date":"2019-01-10 16:26:01","endLine":498,"groupId":"48965","id":18,"instanceNumber":2,"isCurCommit":0,"methodName":"testDuelingStrictParsing","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/a9/6fee5b6333eb64343d0da4652d6f3b06f94c10.src","preCode":"    public void testDuelingStrictParsing() {\n        assertSameDate(\"2018W313\", \"strict_basic_week_date\");\n        assertParseException(\"18W313\", \"strict_basic_week_date\");\n        assertSameDate(\"2018W313T121212.123Z\", \"strict_basic_week_date_time\");\n        assertSameDate(\"2018W313T121212.123+0100\", \"strict_basic_week_date_time\");\n        assertSameDate(\"2018W313T121212.123+01:00\", \"strict_basic_week_date_time\");\n        assertParseException(\"2018W313T12128.123Z\", \"strict_basic_week_date_time\");\n        assertParseException(\"2018W313T81212.123Z\", \"strict_basic_week_date_time\");\n        assertParseException(\"2018W313T12812.123Z\", \"strict_basic_week_date_time\");\n        assertParseException(\"2018W313T12812.1Z\", \"strict_basic_week_date_time\");\n        assertSameDate(\"2018W313T121212Z\", \"strict_basic_week_date_time_no_millis\");\n        assertSameDate(\"2018W313T121212+0100\", \"strict_basic_week_date_time_no_millis\");\n        assertSameDate(\"2018W313T121212+01:00\", \"strict_basic_week_date_time_no_millis\");\n        assertParseException(\"2018W313T12128Z\", \"strict_basic_week_date_time_no_millis\");\n        assertParseException(\"2018W313T12128+0100\", \"strict_basic_week_date_time_no_millis\");\n        assertParseException(\"2018W313T12128+01:00\", \"strict_basic_week_date_time_no_millis\");\n        assertParseException(\"2018W313T81212Z\", \"strict_basic_week_date_time_no_millis\");\n        assertParseException(\"2018W313T81212+0100\", \"strict_basic_week_date_time_no_millis\");\n        assertParseException(\"2018W313T81212+01:00\", \"strict_basic_week_date_time_no_millis\");\n        assertParseException(\"2018W313T12812Z\", \"strict_basic_week_date_time_no_millis\");\n        assertParseException(\"2018W313T12812+0100\", \"strict_basic_week_date_time_no_millis\");\n        assertParseException(\"2018W313T12812+01:00\", \"strict_basic_week_date_time_no_millis\");\n        assertSameDate(\"2018-12-31\", \"strict_date\");\n        assertParseException(\"10000-12-31\", \"strict_date\");\n        assertParseException(\"2018-8-31\", \"strict_date\");\n        assertSameDate(\"2018-12-31T12\", \"strict_date_hour\");\n        assertParseException(\"2018-12-31T8\", \"strict_date_hour\");\n        assertSameDate(\"2018-12-31T12:12\", \"strict_date_hour_minute\");\n        assertParseException(\"2018-12-31T8:3\", \"strict_date_hour_minute\");\n        assertSameDate(\"2018-12-31T12:12:12\", \"strict_date_hour_minute_second\");\n        assertParseException(\"2018-12-31T12:12:1\", \"strict_date_hour_minute_second\");\n        assertSameDate(\"2018-12-31T12:12:12.123\", \"strict_date_hour_minute_second_fraction\");\n        assertSameDate(\"2018-12-31T12:12:12.123\", \"strict_date_hour_minute_second_millis\");\n        assertSameDate(\"2018-12-31T12:12:12.1\", \"strict_date_hour_minute_second_millis\");\n        assertSameDate(\"2018-12-31T12:12:12.1\", \"strict_date_hour_minute_second_fraction\");\n        assertParseException(\"2018-12-31T12:12:12\", \"strict_date_hour_minute_second_millis\");\n        assertParseException(\"2018-12-31T12:12:12\", \"strict_date_hour_minute_second_fraction\");\n        assertSameDate(\"2018-12-31\", \"strict_date_optional_time\");\n        assertParseException(\"2018-12-1\", \"strict_date_optional_time\");\n        assertParseException(\"2018-1-31\", \"strict_date_optional_time\");\n        assertParseException(\"10000-01-31\", \"strict_date_optional_time\");\n        assertSameDate(\"2018-12-31T10:15:30\", \"strict_date_optional_time\");\n        assertSameDate(\"2018-12-31T10:15:30Z\", \"strict_date_optional_time\");\n        assertSameDate(\"2018-12-31T10:15:30+0100\", \"strict_date_optional_time\");\n        assertSameDate(\"2018-12-31T10:15:30+01:00\", \"strict_date_optional_time\");\n        assertParseException(\"2018-12-31T10:15:3\", \"strict_date_optional_time\");\n        assertParseException(\"2018-12-31T10:5:30\", \"strict_date_optional_time\");\n        assertParseException(\"2018-12-31T9:15:30\", \"strict_date_optional_time\");\n        assertSameDate(\"2018-12-31T10:15:30.123Z\", \"strict_date_time\");\n        assertSameDate(\"2018-12-31T10:15:30.123+0100\", \"strict_date_time\");\n        assertSameDate(\"2018-12-31T10:15:30.123+01:00\", \"strict_date_time\");\n        assertSameDate(\"2018-12-31T10:15:30.11Z\", \"strict_date_time\");\n        assertSameDate(\"2018-12-31T10:15:30.11+0100\", \"strict_date_time\");\n        assertSameDate(\"2018-12-31T10:15:30.11+01:00\", \"strict_date_time\");\n        assertParseException(\"2018-12-31T10:15:3.123Z\", \"strict_date_time\");\n        assertParseException(\"2018-12-31T10:5:30.123Z\", \"strict_date_time\");\n        assertParseException(\"2018-12-31T1:15:30.123Z\", \"strict_date_time\");\n        assertSameDate(\"2018-12-31T10:15:30Z\", \"strict_date_time_no_millis\");\n        assertSameDate(\"2018-12-31T10:15:30+0100\", \"strict_date_time_no_millis\");\n        assertSameDate(\"2018-12-31T10:15:30+01:00\", \"strict_date_time_no_millis\");\n        assertParseException(\"2018-12-31T10:5:30Z\", \"strict_date_time_no_millis\");\n        assertParseException(\"2018-12-31T10:15:3Z\", \"strict_date_time_no_millis\");\n        assertParseException(\"2018-12-31T1:15:30Z\", \"strict_date_time_no_millis\");\n        assertSameDate(\"12\", \"strict_hour\");\n        assertSameDate(\"01\", \"strict_hour\");\n        assertParseException(\"1\", \"strict_hour\");\n        assertSameDate(\"12:12\", \"strict_hour_minute\");\n        assertSameDate(\"12:01\", \"strict_hour_minute\");\n        assertParseException(\"12:1\", \"strict_hour_minute\");\n        assertSameDate(\"12:12:12\", \"strict_hour_minute_second\");\n        assertSameDate(\"12:12:01\", \"strict_hour_minute_second\");\n        assertParseException(\"12:12:1\", \"strict_hour_minute_second\");\n        assertSameDate(\"12:12:12.123\", \"strict_hour_minute_second_fraction\");\n        assertSameDate(\"12:12:12.1\", \"strict_hour_minute_second_fraction\");\n        assertParseException(\"12:12:12\", \"strict_hour_minute_second_fraction\");\n        assertSameDate(\"12:12:12.123\", \"strict_hour_minute_second_millis\");\n        assertSameDate(\"12:12:12.1\", \"strict_hour_minute_second_millis\");\n        assertParseException(\"12:12:12\", \"strict_hour_minute_second_millis\");\n        assertSameDate(\"2018-128\", \"strict_ordinal_date\");\n        assertParseException(\"2018-1\", \"strict_ordinal_date\");\n\n        assertSameDate(\"2018-128T10:15:30.123Z\", \"strict_ordinal_date_time\");\n        assertSameDate(\"2018-128T10:15:30.123+0100\", \"strict_ordinal_date_time\");\n        assertSameDate(\"2018-128T10:15:30.123+01:00\", \"strict_ordinal_date_time\");\n        assertParseException(\"2018-1T10:15:30.123Z\", \"strict_ordinal_date_time\");\n\n        assertSameDate(\"2018-128T10:15:30Z\", \"strict_ordinal_date_time_no_millis\");\n        assertSameDate(\"2018-128T10:15:30+0100\", \"strict_ordinal_date_time_no_millis\");\n        assertSameDate(\"2018-128T10:15:30+01:00\", \"strict_ordinal_date_time_no_millis\");\n        assertParseException(\"2018-1T10:15:30Z\", \"strict_ordinal_date_time_no_millis\");\n\n        assertSameDate(\"10:15:30.123Z\", \"strict_time\");\n        assertSameDate(\"10:15:30.123+0100\", \"strict_time\");\n        assertSameDate(\"10:15:30.123+01:00\", \"strict_time\");\n        assertParseException(\"1:15:30.123Z\", \"strict_time\");\n        assertParseException(\"10:1:30.123Z\", \"strict_time\");\n        assertParseException(\"10:15:3.123Z\", \"strict_time\");\n        assertParseException(\"10:15:3.1\", \"strict_time\");\n        assertParseException(\"10:15:3Z\", \"strict_time\");\n\n        assertSameDate(\"10:15:30Z\", \"strict_time_no_millis\");\n        assertSameDate(\"10:15:30+0100\", \"strict_time_no_millis\");\n        assertSameDate(\"10:15:30+01:00\", \"strict_time_no_millis\");\n        assertSameDate(\"01:15:30Z\", \"strict_time_no_millis\");\n        assertSameDate(\"01:15:30+0100\", \"strict_time_no_millis\");\n        assertSameDate(\"01:15:30+01:00\", \"strict_time_no_millis\");\n        assertParseException(\"1:15:30Z\", \"strict_time_no_millis\");\n        assertParseException(\"10:5:30Z\", \"strict_time_no_millis\");\n        assertParseException(\"10:15:3Z\", \"strict_time_no_millis\");\n        assertParseException(\"10:15:3\", \"strict_time_no_millis\");\n\n        assertSameDate(\"T10:15:30.123Z\", \"strict_t_time\");\n        assertSameDate(\"T10:15:30.123+0100\", \"strict_t_time\");\n        assertSameDate(\"T10:15:30.123+01:00\", \"strict_t_time\");\n        assertParseException(\"T1:15:30.123Z\", \"strict_t_time\");\n        assertParseException(\"T10:1:30.123Z\", \"strict_t_time\");\n        assertParseException(\"T10:15:3.123Z\", \"strict_t_time\");\n        assertParseException(\"T10:15:3.1\", \"strict_t_time\");\n        assertParseException(\"T10:15:3Z\", \"strict_t_time\");\n\n        assertSameDate(\"T10:15:30Z\", \"strict_t_time_no_millis\");\n        assertSameDate(\"T10:15:30+0100\", \"strict_t_time_no_millis\");\n        assertSameDate(\"T10:15:30+01:00\", \"strict_t_time_no_millis\");\n        assertParseException(\"T1:15:30Z\", \"strict_t_time_no_millis\");\n        assertParseException(\"T10:1:30Z\", \"strict_t_time_no_millis\");\n        assertParseException(\"T10:15:3Z\", \"strict_t_time_no_millis\");\n        assertParseException(\"T10:15:3\", \"strict_t_time_no_millis\");\n\n        assertSameDate(\"2012-W48-6\", \"strict_week_date\");\n        assertSameDate(\"2012-W01-6\", \"strict_week_date\");\n        assertParseException(\"2012-W1-6\", \"strict_week_date\");\n        assertParseException(\"2012-W1-8\", \"strict_week_date\");\n\n        assertSameDate(\"2012-W48-6\", \"strict_week_date\");\n        assertSameDate(\"2012-W01-6\", \"strict_week_date\");\n        assertParseException(\"2012-W1-6\", \"strict_week_date\");\n        \r\n        assertJodaParseException(\"2012-W01-8\", \"strict_week_date\",\n            \"Cannot parse \\\"2012-W01-8\\\": Value 8 for dayOfWeek must be in the range [1,7]\");\n        assertJavaTimeParseException(\"2012-W01-8\", \"strict_week_date\", \"Text '2012-W01-8' could not be parsed\");\n\n        assertSameDate(\"2012-W48-6T10:15:30.123Z\", \"strict_week_date_time\");\n        assertSameDate(\"2012-W48-6T10:15:30.123+0100\", \"strict_week_date_time\");\n        assertSameDate(\"2012-W48-6T10:15:30.123+01:00\", \"strict_week_date_time\");\n        assertParseException(\"2012-W1-6T10:15:30.123Z\", \"strict_week_date_time\");\n\n        assertSameDate(\"2012-W48-6T10:15:30Z\", \"strict_week_date_time_no_millis\");\n        assertSameDate(\"2012-W48-6T10:15:30+0100\", \"strict_week_date_time_no_millis\");\n        assertSameDate(\"2012-W48-6T10:15:30+01:00\", \"strict_week_date_time_no_millis\");\n        assertParseException(\"2012-W1-6T10:15:30Z\", \"strict_week_date_time_no_millis\");\n\n        assertSameDate(\"2012\", \"strict_year\");\n        assertParseException(\"1\", \"strict_year\");\n        assertSameDate(\"-2000\", \"strict_year\");\n\n        assertSameDate(\"2012-12\", \"strict_year_month\");\n        assertParseException(\"1-1\", \"strict_year_month\");\n\n        assertSameDate(\"2012-12-31\", \"strict_year_month_day\");\n        assertParseException(\"1-12-31\", \"strict_year_month_day\");\n        assertParseException(\"2012-1-31\", \"strict_year_month_day\");\n        assertParseException(\"2012-12-1\", \"strict_year_month_day\");\n\n        assertSameDate(\"2018\", \"strict_weekyear\");\n        assertParseException(\"1\", \"strict_weekyear\");\n\n        assertSameDate(\"2018\", \"strict_weekyear\");\n        assertSameDate(\"2017\", \"strict_weekyear\");\n        assertParseException(\"1\", \"strict_weekyear\");\n\n        assertSameDate(\"2018-W29\", \"strict_weekyear_week\");\n        assertSameDate(\"2018-W01\", \"strict_weekyear_week\");\n        assertParseException(\"2018-W1\", \"strict_weekyear_week\");\n\n        assertSameDate(\"2012-W31-5\", \"strict_weekyear_week_day\");\n        assertParseException(\"2012-W1-1\", \"strict_weekyear_week_day\");\n    }\n","realPath":"server/src/test/java/org/elasticsearch/common/joda/JavaJodaTimeDuellingTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":322,"status":"N"}],"commitId":"9f3da013d899f458ff56ded1a57fab4818f90e47","commitMessage":"@@@Date/Time parsing: Use java time API instead of exception handling (#37222)\n\n* Add benchmark\n\n* Use java time API instead of exception handling\n\nwhen several formatters are used.  the existing way of parsing those is\nto throw an exception catch it.  and try the next one. This is is\nconsiderably slower than the approach taken in joda time.  so that\nindexing is reduced when a date format like `x||y` is used and y is the\ndate format being used.\n\nThis commit now uses the java API to parse the date by appending the\ndate time formatters to each other and does not rely on exception\nhandling.\n\n* fix benchmark\n\n* fix tests by changing formatter.  also expose printer\n\n* restore optional printing logic to fix tests\n\n* fix tests\n\n* incorporate review comments\n","date":"2019-01-11 16:25:05","modifiedFileCount":"5","status":"M","submitter":"Alexander Reelsen"},{"authorTime":"2019-01-23 17:40:05","codes":[{"authorDate":"2019-01-23 17:40:05","commitOrder":10,"curCode":"    public void testDuellingFormatsValidParsing() {\n        assertSameDate(\"1522332219\", \"epoch_second\");\n        assertSameDate(\"0\", \"epoch_second\");\n        assertSameDate(\"1\", \"epoch_second\");\n        assertSameDate(\"1522332219321\", \"epoch_millis\");\n        assertSameDate(\"0\", \"epoch_millis\");\n        assertSameDate(\"1\", \"epoch_millis\");\n\n        assertSameDate(\"20181126\", \"basic_date\");\n        assertSameDate(\"20181126T121212.123Z\", \"basic_date_time\");\n        assertSameDate(\"20181126T121212.123+10:00\", \"basic_date_time\");\n        assertSameDate(\"20181126T121212.123-0800\", \"basic_date_time\");\n\n        assertSameDate(\"20181126T121212Z\", \"basic_date_time_no_millis\");\n        assertSameDate(\"20181126T121212+01:00\", \"basic_date_time_no_millis\");\n        assertSameDate(\"20181126T121212+0100\", \"basic_date_time_no_millis\");\n        assertSameDate(\"2018363\", \"basic_ordinal_date\");\n        assertSameDate(\"2018363T121212.123Z\", \"basic_ordinal_date_time\");\n        assertSameDate(\"2018363T121212.123+0100\", \"basic_ordinal_date_time\");\n        assertSameDate(\"2018363T121212.123+01:00\", \"basic_ordinal_date_time\");\n        assertSameDate(\"2018363T121212Z\", \"basic_ordinal_date_time_no_millis\");\n        assertSameDate(\"2018363T121212+0100\", \"basic_ordinal_date_time_no_millis\");\n        assertSameDate(\"2018363T121212+01:00\", \"basic_ordinal_date_time_no_millis\");\n        assertSameDate(\"121212.123Z\", \"basic_time\");\n        assertSameDate(\"121212.123+0100\", \"basic_time\");\n        assertSameDate(\"121212.123+01:00\", \"basic_time\");\n        assertSameDate(\"121212Z\", \"basic_time_no_millis\");\n        assertSameDate(\"121212+0100\", \"basic_time_no_millis\");\n        assertSameDate(\"121212+01:00\", \"basic_time_no_millis\");\n        assertSameDate(\"T121212.123Z\", \"basic_t_time\");\n        assertSameDate(\"T121212.123+0100\", \"basic_t_time\");\n        assertSameDate(\"T121212.123+01:00\", \"basic_t_time\");\n        assertSameDate(\"T121212Z\", \"basic_t_time_no_millis\");\n        assertSameDate(\"T121212+0100\", \"basic_t_time_no_millis\");\n        assertSameDate(\"T121212+01:00\", \"basic_t_time_no_millis\");\n        assertSameDate(\"2018W313\", \"basic_week_date\");\n        assertSameDate(\"1W313\", \"basic_week_date\");\n        assertSameDate(\"18W313\", \"basic_week_date\");\n        assertSameDate(\"2018W313T121212.123Z\", \"basic_week_date_time\");\n        assertSameDate(\"2018W313T121212.123+0100\", \"basic_week_date_time\");\n        assertSameDate(\"2018W313T121212.123+01:00\", \"basic_week_date_time\");\n        assertSameDate(\"2018W313T121212Z\", \"basic_week_date_time_no_millis\");\n        assertSameDate(\"2018W313T121212+0100\", \"basic_week_date_time_no_millis\");\n        assertSameDate(\"2018W313T121212+01:00\", \"basic_week_date_time_no_millis\");\n\n        assertSameDate(\"2018-12-31\", \"date\");\n        assertSameDate(\"18-5-6\", \"date\");\n        assertSameDate(\"10000-5-6\", \"date\");\n\n        assertSameDate(\"2018-12-31T12\", \"date_hour\");\n        assertSameDate(\"2018-12-31T8\", \"date_hour\");\n\n        assertSameDate(\"2018-12-31T12:12\", \"date_hour_minute\");\n        assertSameDate(\"2018-12-31T8:3\", \"date_hour_minute\");\n\n        assertSameDate(\"2018-12-31T12:12:12\", \"date_hour_minute_second\");\n        assertSameDate(\"2018-12-31T12:12:1\", \"date_hour_minute_second\");\n\n        assertSameDate(\"2018-12-31T12:12:12.123\", \"date_hour_minute_second_fraction\");\n        assertSameDate(\"2018-12-31T12:12:12.123\", \"date_hour_minute_second_millis\");\n        assertSameDate(\"2018-12-31T12:12:12.1\", \"date_hour_minute_second_millis\");\n        assertSameDate(\"2018-12-31T12:12:12.1\", \"date_hour_minute_second_fraction\");\n\n        assertSameDate(\"2018-05\", \"date_optional_time\");\n        assertSameDate(\"2018-05-30\", \"date_optional_time\");\n        assertSameDate(\"2018-05-30T20\", \"date_optional_time\");\n        assertSameDate(\"2018-05-30T20:21\", \"date_optional_time\");\n        assertSameDate(\"2018-05-30T20:21:23\", \"date_optional_time\");\n        assertSameDate(\"2018-05-30T20:21:23.123\", \"date_optional_time\");\n        assertSameDate(\"2018-05-30T20:21:23.123Z\", \"date_optional_time\");\n        assertSameDate(\"2018-05-30T20:21:23.123+0100\", \"date_optional_time\");\n        assertSameDate(\"2018-05-30T20:21:23.123+01:00\", \"date_optional_time\");\n        assertSameDate(\"2018-12-1\", \"date_optional_time\");\n        assertSameDate(\"2018-12-31T10:15:30\", \"date_optional_time\");\n        assertSameDate(\"2018-12-31T10:15:3\", \"date_optional_time\");\n        assertSameDate(\"2018-12-31T10:5:30\", \"date_optional_time\");\n        assertSameDate(\"2018-12-31T1:15:30\", \"date_optional_time\");\n\n        assertSameDate(\"2018-12-31T10:15:30.123Z\", \"date_time\");\n        assertSameDate(\"2018-12-31T10:15:30.123+0100\", \"date_time\");\n        assertSameDate(\"2018-12-31T10:15:30.123+01:00\", \"date_time\");\n        assertSameDate(\"2018-12-31T10:15:30.11Z\", \"date_time\");\n        assertSameDate(\"2018-12-31T10:15:30.11+0100\", \"date_time\");\n        assertSameDate(\"2018-12-31T10:15:30.11+01:00\", \"date_time\");\n        assertSameDate(\"2018-12-31T10:15:3.123Z\", \"date_time\");\n        assertSameDate(\"2018-12-31T10:15:3.123+0100\", \"date_time\");\n        assertSameDate(\"2018-12-31T10:15:3.123+01:00\", \"date_time\");\n\n        assertSameDate(\"2018-12-31T10:15:30Z\", \"date_time_no_millis\");\n        assertSameDate(\"2018-12-31T10:15:30+0100\", \"date_time_no_millis\");\n        assertSameDate(\"2018-12-31T10:15:30+01:00\", \"date_time_no_millis\");\n        assertSameDate(\"2018-12-31T10:5:30Z\", \"date_time_no_millis\");\n        assertSameDate(\"2018-12-31T10:5:30+0100\", \"date_time_no_millis\");\n        assertSameDate(\"2018-12-31T10:5:30+01:00\", \"date_time_no_millis\");\n        assertSameDate(\"2018-12-31T10:15:3Z\", \"date_time_no_millis\");\n        assertSameDate(\"2018-12-31T10:15:3+0100\", \"date_time_no_millis\");\n        assertSameDate(\"2018-12-31T10:15:3+01:00\", \"date_time_no_millis\");\n        assertSameDate(\"2018-12-31T1:15:30Z\", \"date_time_no_millis\");\n        assertSameDate(\"2018-12-31T1:15:30+0100\", \"date_time_no_millis\");\n        assertSameDate(\"2018-12-31T1:15:30+01:00\", \"date_time_no_millis\");\n\n        assertSameDate(\"12\", \"hour\");\n        assertSameDate(\"01\", \"hour\");\n        assertSameDate(\"1\", \"hour\");\n\n        assertSameDate(\"12:12\", \"hour_minute\");\n        assertSameDate(\"12:01\", \"hour_minute\");\n        assertSameDate(\"12:1\", \"hour_minute\");\n\n        assertSameDate(\"12:12:12\", \"hour_minute_second\");\n        assertSameDate(\"12:12:01\", \"hour_minute_second\");\n        assertSameDate(\"12:12:1\", \"hour_minute_second\");\n\n        assertSameDate(\"12:12:12.123\", \"hour_minute_second_fraction\");\n        assertSameDate(\"12:12:12.1\", \"hour_minute_second_fraction\");\n        assertParseException(\"12:12:12\", \"hour_minute_second_fraction\");\n        assertSameDate(\"12:12:12.123\", \"hour_minute_second_millis\");\n        assertSameDate(\"12:12:12.1\", \"hour_minute_second_millis\");\n        assertParseException(\"12:12:12\", \"hour_minute_second_millis\");\n\n        assertSameDate(\"2018-128\", \"ordinal_date\");\n        assertSameDate(\"2018-1\", \"ordinal_date\");\n\n        assertSameDate(\"2018-128T10:15:30.123Z\", \"ordinal_date_time\");\n        assertSameDate(\"2018-128T10:15:30.123+0100\", \"ordinal_date_time\");\n        assertSameDate(\"2018-128T10:15:30.123+01:00\", \"ordinal_date_time\");\n        assertSameDate(\"2018-1T10:15:30.123Z\", \"ordinal_date_time\");\n        assertSameDate(\"2018-1T10:15:30.123+0100\", \"ordinal_date_time\");\n        assertSameDate(\"2018-1T10:15:30.123+01:00\", \"ordinal_date_time\");\n\n        assertSameDate(\"2018-128T10:15:30Z\", \"ordinal_date_time_no_millis\");\n        assertSameDate(\"2018-128T10:15:30+0100\", \"ordinal_date_time_no_millis\");\n        assertSameDate(\"2018-128T10:15:30+01:00\", \"ordinal_date_time_no_millis\");\n        assertSameDate(\"2018-1T10:15:30Z\", \"ordinal_date_time_no_millis\");\n        assertSameDate(\"2018-1T10:15:30+0100\", \"ordinal_date_time_no_millis\");\n        assertSameDate(\"2018-1T10:15:30+01:00\", \"ordinal_date_time_no_millis\");\n\n        assertSameDate(\"10:15:30.123Z\", \"time\");\n        assertSameDate(\"10:15:30.123+0100\", \"time\");\n        assertSameDate(\"10:15:30.123+01:00\", \"time\");\n        assertSameDate(\"1:15:30.123Z\", \"time\");\n        assertSameDate(\"1:15:30.123+0100\", \"time\");\n        assertSameDate(\"1:15:30.123+01:00\", \"time\");\n        assertSameDate(\"10:1:30.123Z\", \"time\");\n        assertSameDate(\"10:1:30.123+0100\", \"time\");\n        assertSameDate(\"10:1:30.123+01:00\", \"time\");\n        assertSameDate(\"10:15:3.123Z\", \"time\");\n        assertSameDate(\"10:15:3.123+0100\", \"time\");\n        assertSameDate(\"10:15:3.123+01:00\", \"time\");\n        assertParseException(\"10:15:3.1\", \"time\");\n        assertParseException(\"10:15:3Z\", \"time\");\n\n        assertSameDate(\"10:15:30Z\", \"time_no_millis\");\n        assertSameDate(\"10:15:30+0100\", \"time_no_millis\");\n        assertSameDate(\"10:15:30+01:00\", \"time_no_millis\");\n        assertSameDate(\"01:15:30Z\", \"time_no_millis\");\n        assertSameDate(\"01:15:30+0100\", \"time_no_millis\");\n        assertSameDate(\"01:15:30+01:00\", \"time_no_millis\");\n        assertSameDate(\"1:15:30Z\", \"time_no_millis\");\n        assertSameDate(\"1:15:30+0100\", \"time_no_millis\");\n        assertSameDate(\"1:15:30+01:00\", \"time_no_millis\");\n        assertSameDate(\"10:5:30Z\", \"time_no_millis\");\n        assertSameDate(\"10:5:30+0100\", \"time_no_millis\");\n        assertSameDate(\"10:5:30+01:00\", \"time_no_millis\");\n        assertSameDate(\"10:15:3Z\", \"time_no_millis\");\n        assertSameDate(\"10:15:3+0100\", \"time_no_millis\");\n        assertSameDate(\"10:15:3+01:00\", \"time_no_millis\");\n        assertParseException(\"10:15:3\", \"time_no_millis\");\n\n        assertSameDate(\"T10:15:30.123Z\", \"t_time\");\n        assertSameDate(\"T10:15:30.123+0100\", \"t_time\");\n        assertSameDate(\"T10:15:30.123+01:00\", \"t_time\");\n        assertSameDate(\"T1:15:30.123Z\", \"t_time\");\n        assertSameDate(\"T1:15:30.123+0100\", \"t_time\");\n        assertSameDate(\"T1:15:30.123+01:00\", \"t_time\");\n        assertSameDate(\"T10:1:30.123Z\", \"t_time\");\n        assertSameDate(\"T10:1:30.123+0100\", \"t_time\");\n        assertSameDate(\"T10:1:30.123+01:00\", \"t_time\");\n        assertSameDate(\"T10:15:3.123Z\", \"t_time\");\n        assertSameDate(\"T10:15:3.123+0100\", \"t_time\");\n        assertSameDate(\"T10:15:3.123+01:00\", \"t_time\");\n        assertParseException(\"T10:15:3.1\", \"t_time\");\n        assertParseException(\"T10:15:3Z\", \"t_time\");\n\n        assertSameDate(\"T10:15:30Z\", \"t_time_no_millis\");\n        assertSameDate(\"T10:15:30+0100\", \"t_time_no_millis\");\n        assertSameDate(\"T10:15:30+01:00\", \"t_time_no_millis\");\n        assertSameDate(\"T1:15:30Z\", \"t_time_no_millis\");\n        assertSameDate(\"T1:15:30+0100\", \"t_time_no_millis\");\n        assertSameDate(\"T1:15:30+01:00\", \"t_time_no_millis\");\n        assertSameDate(\"T10:1:30Z\", \"t_time_no_millis\");\n        assertSameDate(\"T10:1:30+0100\", \"t_time_no_millis\");\n        assertSameDate(\"T10:1:30+01:00\", \"t_time_no_millis\");\n        assertSameDate(\"T10:15:3Z\", \"t_time_no_millis\");\n        assertSameDate(\"T10:15:3+0100\", \"t_time_no_millis\");\n        assertSameDate(\"T10:15:3+01:00\", \"t_time_no_millis\");\n        assertParseException(\"T10:15:3\", \"t_time_no_millis\");\n\n        assertSameDate(\"2012-W48-6\", \"week_date\");\n        assertSameDate(\"2012-W01-6\", \"week_date\");\n        assertSameDate(\"2012-W1-6\", \"week_date\");\n        \r\n        assertJodaParseException(\"2012-W1-8\", \"week_date\",\n            \"Cannot parse \\\"2012-W1-8\\\": Value 8 for dayOfWeek must be in the range [1,7]\");\n        assertJavaTimeParseException(\"2012-W1-8\", \"week_date\");\n\n        assertSameDate(\"2012-W48-6T10:15:30.123Z\", \"week_date_time\");\n        assertSameDate(\"2012-W48-6T10:15:30.123+0100\", \"week_date_time\");\n        assertSameDate(\"2012-W48-6T10:15:30.123+01:00\", \"week_date_time\");\n        assertSameDate(\"2012-W1-6T10:15:30.123Z\", \"week_date_time\");\n        assertSameDate(\"2012-W1-6T10:15:30.123+0100\", \"week_date_time\");\n        assertSameDate(\"2012-W1-6T10:15:30.123+01:00\", \"week_date_time\");\n\n        assertSameDate(\"2012-W48-6T10:15:30Z\", \"week_date_time_no_millis\");\n        assertSameDate(\"2012-W48-6T10:15:30+0100\", \"week_date_time_no_millis\");\n        assertSameDate(\"2012-W48-6T10:15:30+01:00\", \"week_date_time_no_millis\");\n        assertSameDate(\"2012-W1-6T10:15:30Z\", \"week_date_time_no_millis\");\n        assertSameDate(\"2012-W1-6T10:15:30+0100\", \"week_date_time_no_millis\");\n        assertSameDate(\"2012-W1-6T10:15:30+01:00\", \"week_date_time_no_millis\");\n\n        assertSameDate(\"2012\", \"year\");\n        assertSameDate(\"1\", \"year\");\n        assertSameDate(\"-2000\", \"year\");\n\n        assertSameDate(\"2012-12\", \"yearMonth\");\n        assertSameDate(\"1-1\", \"yearMonth\");\n\n        assertSameDate(\"2012-12-31\", \"yearMonthDay\");\n        assertSameDate(\"1-12-31\", \"yearMonthDay\");\n        assertSameDate(\"2012-1-31\", \"yearMonthDay\");\n        assertSameDate(\"2012-12-1\", \"yearMonthDay\");\n\n        assertSameDate(\"2018\", \"week_year\");\n        assertSameDate(\"1\", \"week_year\");\n        assertSameDate(\"2017\", \"week_year\");\n\n        assertSameDate(\"2018-W29\", \"weekyear_week\");\n        assertSameDate(\"2018-W1\", \"weekyear_week\");\n\n        assertSameDate(\"2012-W31-5\", \"weekyear_week_day\");\n        assertSameDate(\"2012-W1-1\", \"weekyear_week_day\");\n    }\n","date":"2019-01-23 17:40:05","endLine":323,"groupId":"48962","id":19,"instanceNumber":1,"isCurCommit":0,"methodName":"testDuellingFormatsValidParsing","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/c7/abea63be081bcbb1e22b9e1a812bd2b3934709.src","preCode":"    public void testDuellingFormatsValidParsing() {\n        assertSameDate(\"1522332219\", \"epoch_second\");\n        assertSameDate(\"0\", \"epoch_second\");\n        assertSameDate(\"1\", \"epoch_second\");\n        assertSameDate(\"1522332219321\", \"epoch_millis\");\n        assertSameDate(\"0\", \"epoch_millis\");\n        assertSameDate(\"1\", \"epoch_millis\");\n\n        assertSameDate(\"20181126\", \"basic_date\");\n        assertSameDate(\"20181126T121212.123Z\", \"basic_date_time\");\n        assertSameDate(\"20181126T121212.123+10:00\", \"basic_date_time\");\n        assertSameDate(\"20181126T121212.123-0800\", \"basic_date_time\");\n\n        assertSameDate(\"20181126T121212Z\", \"basic_date_time_no_millis\");\n        assertSameDate(\"20181126T121212+01:00\", \"basic_date_time_no_millis\");\n        assertSameDate(\"20181126T121212+0100\", \"basic_date_time_no_millis\");\n        assertSameDate(\"2018363\", \"basic_ordinal_date\");\n        assertSameDate(\"2018363T121212.123Z\", \"basic_ordinal_date_time\");\n        assertSameDate(\"2018363T121212.123+0100\", \"basic_ordinal_date_time\");\n        assertSameDate(\"2018363T121212.123+01:00\", \"basic_ordinal_date_time\");\n        assertSameDate(\"2018363T121212Z\", \"basic_ordinal_date_time_no_millis\");\n        assertSameDate(\"2018363T121212+0100\", \"basic_ordinal_date_time_no_millis\");\n        assertSameDate(\"2018363T121212+01:00\", \"basic_ordinal_date_time_no_millis\");\n        assertSameDate(\"121212.123Z\", \"basic_time\");\n        assertSameDate(\"121212.123+0100\", \"basic_time\");\n        assertSameDate(\"121212.123+01:00\", \"basic_time\");\n        assertSameDate(\"121212Z\", \"basic_time_no_millis\");\n        assertSameDate(\"121212+0100\", \"basic_time_no_millis\");\n        assertSameDate(\"121212+01:00\", \"basic_time_no_millis\");\n        assertSameDate(\"T121212.123Z\", \"basic_t_time\");\n        assertSameDate(\"T121212.123+0100\", \"basic_t_time\");\n        assertSameDate(\"T121212.123+01:00\", \"basic_t_time\");\n        assertSameDate(\"T121212Z\", \"basic_t_time_no_millis\");\n        assertSameDate(\"T121212+0100\", \"basic_t_time_no_millis\");\n        assertSameDate(\"T121212+01:00\", \"basic_t_time_no_millis\");\n        assertSameDate(\"2018W313\", \"basic_week_date\");\n        assertSameDate(\"1W313\", \"basic_week_date\");\n        assertSameDate(\"18W313\", \"basic_week_date\");\n        assertSameDate(\"2018W313T121212.123Z\", \"basic_week_date_time\");\n        assertSameDate(\"2018W313T121212.123+0100\", \"basic_week_date_time\");\n        assertSameDate(\"2018W313T121212.123+01:00\", \"basic_week_date_time\");\n        assertSameDate(\"2018W313T121212Z\", \"basic_week_date_time_no_millis\");\n        assertSameDate(\"2018W313T121212+0100\", \"basic_week_date_time_no_millis\");\n        assertSameDate(\"2018W313T121212+01:00\", \"basic_week_date_time_no_millis\");\n\n        assertSameDate(\"2018-12-31\", \"date\");\n        assertSameDate(\"18-5-6\", \"date\");\n        assertSameDate(\"10000-5-6\", \"date\");\n\n        assertSameDate(\"2018-12-31T12\", \"date_hour\");\n        assertSameDate(\"2018-12-31T8\", \"date_hour\");\n\n        assertSameDate(\"2018-12-31T12:12\", \"date_hour_minute\");\n        assertSameDate(\"2018-12-31T8:3\", \"date_hour_minute\");\n\n        assertSameDate(\"2018-12-31T12:12:12\", \"date_hour_minute_second\");\n        assertSameDate(\"2018-12-31T12:12:1\", \"date_hour_minute_second\");\n\n        assertSameDate(\"2018-12-31T12:12:12.123\", \"date_hour_minute_second_fraction\");\n        assertSameDate(\"2018-12-31T12:12:12.123\", \"date_hour_minute_second_millis\");\n        assertSameDate(\"2018-12-31T12:12:12.1\", \"date_hour_minute_second_millis\");\n        assertSameDate(\"2018-12-31T12:12:12.1\", \"date_hour_minute_second_fraction\");\n\n        assertSameDate(\"10000\", \"date_optional_time\");\n        assertSameDate(\"10000T\", \"date_optional_time\");\n        assertSameDate(\"2018\", \"date_optional_time\");\n        assertSameDate(\"2018T\", \"date_optional_time\");\n        assertSameDate(\"2018-05\", \"date_optional_time\");\n        assertSameDate(\"2018-05-30\", \"date_optional_time\");\n        assertSameDate(\"2018-05-30T20\", \"date_optional_time\");\n        assertSameDate(\"2018-05-30T20:21\", \"date_optional_time\");\n        assertSameDate(\"2018-05-30T20:21:23\", \"date_optional_time\");\n        assertSameDate(\"2018-05-30T20:21:23.123\", \"date_optional_time\");\n        assertSameDate(\"2018-05-30T20:21:23.123Z\", \"date_optional_time\");\n        assertSameDate(\"2018-05-30T20:21:23.123+0100\", \"date_optional_time\");\n        assertSameDate(\"2018-05-30T20:21:23.123+01:00\", \"date_optional_time\");\n        assertSameDate(\"2018-12-1\", \"date_optional_time\");\n        assertSameDate(\"2018-12-31T10:15:30\", \"date_optional_time\");\n        assertSameDate(\"2018-12-31T10:15:3\", \"date_optional_time\");\n        assertSameDate(\"2018-12-31T10:5:30\", \"date_optional_time\");\n        assertSameDate(\"2018-12-31T1:15:30\", \"date_optional_time\");\n\n        assertSameDate(\"2018-12-31T10:15:30.123Z\", \"date_time\");\n        assertSameDate(\"2018-12-31T10:15:30.123+0100\", \"date_time\");\n        assertSameDate(\"2018-12-31T10:15:30.123+01:00\", \"date_time\");\n        assertSameDate(\"2018-12-31T10:15:30.11Z\", \"date_time\");\n        assertSameDate(\"2018-12-31T10:15:30.11+0100\", \"date_time\");\n        assertSameDate(\"2018-12-31T10:15:30.11+01:00\", \"date_time\");\n        assertSameDate(\"2018-12-31T10:15:3.123Z\", \"date_time\");\n        assertSameDate(\"2018-12-31T10:15:3.123+0100\", \"date_time\");\n        assertSameDate(\"2018-12-31T10:15:3.123+01:00\", \"date_time\");\n\n        assertSameDate(\"2018-12-31T10:15:30Z\", \"date_time_no_millis\");\n        assertSameDate(\"2018-12-31T10:15:30+0100\", \"date_time_no_millis\");\n        assertSameDate(\"2018-12-31T10:15:30+01:00\", \"date_time_no_millis\");\n        assertSameDate(\"2018-12-31T10:5:30Z\", \"date_time_no_millis\");\n        assertSameDate(\"2018-12-31T10:5:30+0100\", \"date_time_no_millis\");\n        assertSameDate(\"2018-12-31T10:5:30+01:00\", \"date_time_no_millis\");\n        assertSameDate(\"2018-12-31T10:15:3Z\", \"date_time_no_millis\");\n        assertSameDate(\"2018-12-31T10:15:3+0100\", \"date_time_no_millis\");\n        assertSameDate(\"2018-12-31T10:15:3+01:00\", \"date_time_no_millis\");\n        assertSameDate(\"2018-12-31T1:15:30Z\", \"date_time_no_millis\");\n        assertSameDate(\"2018-12-31T1:15:30+0100\", \"date_time_no_millis\");\n        assertSameDate(\"2018-12-31T1:15:30+01:00\", \"date_time_no_millis\");\n\n        assertSameDate(\"12\", \"hour\");\n        assertSameDate(\"01\", \"hour\");\n        assertSameDate(\"1\", \"hour\");\n\n        assertSameDate(\"12:12\", \"hour_minute\");\n        assertSameDate(\"12:01\", \"hour_minute\");\n        assertSameDate(\"12:1\", \"hour_minute\");\n\n        assertSameDate(\"12:12:12\", \"hour_minute_second\");\n        assertSameDate(\"12:12:01\", \"hour_minute_second\");\n        assertSameDate(\"12:12:1\", \"hour_minute_second\");\n\n        assertSameDate(\"12:12:12.123\", \"hour_minute_second_fraction\");\n        assertSameDate(\"12:12:12.1\", \"hour_minute_second_fraction\");\n        assertParseException(\"12:12:12\", \"hour_minute_second_fraction\");\n        assertSameDate(\"12:12:12.123\", \"hour_minute_second_millis\");\n        assertSameDate(\"12:12:12.1\", \"hour_minute_second_millis\");\n        assertParseException(\"12:12:12\", \"hour_minute_second_millis\");\n\n        assertSameDate(\"2018-128\", \"ordinal_date\");\n        assertSameDate(\"2018-1\", \"ordinal_date\");\n\n        assertSameDate(\"2018-128T10:15:30.123Z\", \"ordinal_date_time\");\n        assertSameDate(\"2018-128T10:15:30.123+0100\", \"ordinal_date_time\");\n        assertSameDate(\"2018-128T10:15:30.123+01:00\", \"ordinal_date_time\");\n        assertSameDate(\"2018-1T10:15:30.123Z\", \"ordinal_date_time\");\n        assertSameDate(\"2018-1T10:15:30.123+0100\", \"ordinal_date_time\");\n        assertSameDate(\"2018-1T10:15:30.123+01:00\", \"ordinal_date_time\");\n\n        assertSameDate(\"2018-128T10:15:30Z\", \"ordinal_date_time_no_millis\");\n        assertSameDate(\"2018-128T10:15:30+0100\", \"ordinal_date_time_no_millis\");\n        assertSameDate(\"2018-128T10:15:30+01:00\", \"ordinal_date_time_no_millis\");\n        assertSameDate(\"2018-1T10:15:30Z\", \"ordinal_date_time_no_millis\");\n        assertSameDate(\"2018-1T10:15:30+0100\", \"ordinal_date_time_no_millis\");\n        assertSameDate(\"2018-1T10:15:30+01:00\", \"ordinal_date_time_no_millis\");\n\n        assertSameDate(\"10:15:30.123Z\", \"time\");\n        assertSameDate(\"10:15:30.123+0100\", \"time\");\n        assertSameDate(\"10:15:30.123+01:00\", \"time\");\n        assertSameDate(\"1:15:30.123Z\", \"time\");\n        assertSameDate(\"1:15:30.123+0100\", \"time\");\n        assertSameDate(\"1:15:30.123+01:00\", \"time\");\n        assertSameDate(\"10:1:30.123Z\", \"time\");\n        assertSameDate(\"10:1:30.123+0100\", \"time\");\n        assertSameDate(\"10:1:30.123+01:00\", \"time\");\n        assertSameDate(\"10:15:3.123Z\", \"time\");\n        assertSameDate(\"10:15:3.123+0100\", \"time\");\n        assertSameDate(\"10:15:3.123+01:00\", \"time\");\n        assertParseException(\"10:15:3.1\", \"time\");\n        assertParseException(\"10:15:3Z\", \"time\");\n\n        assertSameDate(\"10:15:30Z\", \"time_no_millis\");\n        assertSameDate(\"10:15:30+0100\", \"time_no_millis\");\n        assertSameDate(\"10:15:30+01:00\", \"time_no_millis\");\n        assertSameDate(\"01:15:30Z\", \"time_no_millis\");\n        assertSameDate(\"01:15:30+0100\", \"time_no_millis\");\n        assertSameDate(\"01:15:30+01:00\", \"time_no_millis\");\n        assertSameDate(\"1:15:30Z\", \"time_no_millis\");\n        assertSameDate(\"1:15:30+0100\", \"time_no_millis\");\n        assertSameDate(\"1:15:30+01:00\", \"time_no_millis\");\n        assertSameDate(\"10:5:30Z\", \"time_no_millis\");\n        assertSameDate(\"10:5:30+0100\", \"time_no_millis\");\n        assertSameDate(\"10:5:30+01:00\", \"time_no_millis\");\n        assertSameDate(\"10:15:3Z\", \"time_no_millis\");\n        assertSameDate(\"10:15:3+0100\", \"time_no_millis\");\n        assertSameDate(\"10:15:3+01:00\", \"time_no_millis\");\n        assertParseException(\"10:15:3\", \"time_no_millis\");\n\n        assertSameDate(\"T10:15:30.123Z\", \"t_time\");\n        assertSameDate(\"T10:15:30.123+0100\", \"t_time\");\n        assertSameDate(\"T10:15:30.123+01:00\", \"t_time\");\n        assertSameDate(\"T1:15:30.123Z\", \"t_time\");\n        assertSameDate(\"T1:15:30.123+0100\", \"t_time\");\n        assertSameDate(\"T1:15:30.123+01:00\", \"t_time\");\n        assertSameDate(\"T10:1:30.123Z\", \"t_time\");\n        assertSameDate(\"T10:1:30.123+0100\", \"t_time\");\n        assertSameDate(\"T10:1:30.123+01:00\", \"t_time\");\n        assertSameDate(\"T10:15:3.123Z\", \"t_time\");\n        assertSameDate(\"T10:15:3.123+0100\", \"t_time\");\n        assertSameDate(\"T10:15:3.123+01:00\", \"t_time\");\n        assertParseException(\"T10:15:3.1\", \"t_time\");\n        assertParseException(\"T10:15:3Z\", \"t_time\");\n\n        assertSameDate(\"T10:15:30Z\", \"t_time_no_millis\");\n        assertSameDate(\"T10:15:30+0100\", \"t_time_no_millis\");\n        assertSameDate(\"T10:15:30+01:00\", \"t_time_no_millis\");\n        assertSameDate(\"T1:15:30Z\", \"t_time_no_millis\");\n        assertSameDate(\"T1:15:30+0100\", \"t_time_no_millis\");\n        assertSameDate(\"T1:15:30+01:00\", \"t_time_no_millis\");\n        assertSameDate(\"T10:1:30Z\", \"t_time_no_millis\");\n        assertSameDate(\"T10:1:30+0100\", \"t_time_no_millis\");\n        assertSameDate(\"T10:1:30+01:00\", \"t_time_no_millis\");\n        assertSameDate(\"T10:15:3Z\", \"t_time_no_millis\");\n        assertSameDate(\"T10:15:3+0100\", \"t_time_no_millis\");\n        assertSameDate(\"T10:15:3+01:00\", \"t_time_no_millis\");\n        assertParseException(\"T10:15:3\", \"t_time_no_millis\");\n\n        assertSameDate(\"2012-W48-6\", \"week_date\");\n        assertSameDate(\"2012-W01-6\", \"week_date\");\n        assertSameDate(\"2012-W1-6\", \"week_date\");\n        \r\n        assertJodaParseException(\"2012-W1-8\", \"week_date\",\n            \"Cannot parse \\\"2012-W1-8\\\": Value 8 for dayOfWeek must be in the range [1,7]\");\n        assertJavaTimeParseException(\"2012-W1-8\", \"week_date\", \"Text '2012-W1-8' could not be parsed\");\n\n        assertSameDate(\"2012-W48-6T10:15:30.123Z\", \"week_date_time\");\n        assertSameDate(\"2012-W48-6T10:15:30.123+0100\", \"week_date_time\");\n        assertSameDate(\"2012-W48-6T10:15:30.123+01:00\", \"week_date_time\");\n        assertSameDate(\"2012-W1-6T10:15:30.123Z\", \"week_date_time\");\n        assertSameDate(\"2012-W1-6T10:15:30.123+0100\", \"week_date_time\");\n        assertSameDate(\"2012-W1-6T10:15:30.123+01:00\", \"week_date_time\");\n\n        assertSameDate(\"2012-W48-6T10:15:30Z\", \"week_date_time_no_millis\");\n        assertSameDate(\"2012-W48-6T10:15:30+0100\", \"week_date_time_no_millis\");\n        assertSameDate(\"2012-W48-6T10:15:30+01:00\", \"week_date_time_no_millis\");\n        assertSameDate(\"2012-W1-6T10:15:30Z\", \"week_date_time_no_millis\");\n        assertSameDate(\"2012-W1-6T10:15:30+0100\", \"week_date_time_no_millis\");\n        assertSameDate(\"2012-W1-6T10:15:30+01:00\", \"week_date_time_no_millis\");\n\n        assertSameDate(\"2012\", \"year\");\n        assertSameDate(\"1\", \"year\");\n        assertSameDate(\"-2000\", \"year\");\n\n        assertSameDate(\"2012-12\", \"yearMonth\");\n        assertSameDate(\"1-1\", \"yearMonth\");\n\n        assertSameDate(\"2012-12-31\", \"yearMonthDay\");\n        assertSameDate(\"1-12-31\", \"yearMonthDay\");\n        assertSameDate(\"2012-1-31\", \"yearMonthDay\");\n        assertSameDate(\"2012-12-1\", \"yearMonthDay\");\n\n        assertSameDate(\"2018\", \"week_year\");\n        assertSameDate(\"1\", \"week_year\");\n        assertSameDate(\"2017\", \"week_year\");\n\n        assertSameDate(\"2018-W29\", \"weekyear_week\");\n        assertSameDate(\"2018-W1\", \"weekyear_week\");\n\n        assertSameDate(\"2012-W31-5\", \"weekyear_week_day\");\n        assertSameDate(\"2012-W1-1\", \"weekyear_week_day\");\n    }\n","realPath":"server/src/test/java/org/elasticsearch/common/joda/JavaJodaTimeDuellingTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":82,"status":"M"},{"authorDate":"2019-01-23 17:40:05","commitOrder":10,"curCode":"    public void testDuelingStrictParsing() {\n        assertSameDate(\"2018W313\", \"strict_basic_week_date\");\n        assertParseException(\"18W313\", \"strict_basic_week_date\");\n        assertSameDate(\"2018W313T121212.123Z\", \"strict_basic_week_date_time\");\n        assertSameDate(\"2018W313T121212.123+0100\", \"strict_basic_week_date_time\");\n        assertSameDate(\"2018W313T121212.123+01:00\", \"strict_basic_week_date_time\");\n        assertParseException(\"2018W313T12128.123Z\", \"strict_basic_week_date_time\");\n        assertParseException(\"2018W313T81212.123Z\", \"strict_basic_week_date_time\");\n        assertParseException(\"2018W313T12812.123Z\", \"strict_basic_week_date_time\");\n        assertParseException(\"2018W313T12812.1Z\", \"strict_basic_week_date_time\");\n        assertSameDate(\"2018W313T121212Z\", \"strict_basic_week_date_time_no_millis\");\n        assertSameDate(\"2018W313T121212+0100\", \"strict_basic_week_date_time_no_millis\");\n        assertSameDate(\"2018W313T121212+01:00\", \"strict_basic_week_date_time_no_millis\");\n        assertParseException(\"2018W313T12128Z\", \"strict_basic_week_date_time_no_millis\");\n        assertParseException(\"2018W313T12128+0100\", \"strict_basic_week_date_time_no_millis\");\n        assertParseException(\"2018W313T12128+01:00\", \"strict_basic_week_date_time_no_millis\");\n        assertParseException(\"2018W313T81212Z\", \"strict_basic_week_date_time_no_millis\");\n        assertParseException(\"2018W313T81212+0100\", \"strict_basic_week_date_time_no_millis\");\n        assertParseException(\"2018W313T81212+01:00\", \"strict_basic_week_date_time_no_millis\");\n        assertParseException(\"2018W313T12812Z\", \"strict_basic_week_date_time_no_millis\");\n        assertParseException(\"2018W313T12812+0100\", \"strict_basic_week_date_time_no_millis\");\n        assertParseException(\"2018W313T12812+01:00\", \"strict_basic_week_date_time_no_millis\");\n        assertSameDate(\"2018-12-31\", \"strict_date\");\n        assertParseException(\"10000-12-31\", \"strict_date\");\n        assertParseException(\"2018-8-31\", \"strict_date\");\n        assertSameDate(\"2018-12-31T12\", \"strict_date_hour\");\n        assertParseException(\"2018-12-31T8\", \"strict_date_hour\");\n        assertSameDate(\"2018-12-31T12:12\", \"strict_date_hour_minute\");\n        assertParseException(\"2018-12-31T8:3\", \"strict_date_hour_minute\");\n        assertSameDate(\"2018-12-31T12:12:12\", \"strict_date_hour_minute_second\");\n        assertParseException(\"2018-12-31T12:12:1\", \"strict_date_hour_minute_second\");\n        assertSameDate(\"2018-12-31T12:12:12.123\", \"strict_date_hour_minute_second_fraction\");\n        assertSameDate(\"2018-12-31T12:12:12.123\", \"strict_date_hour_minute_second_millis\");\n        assertSameDate(\"2018-12-31T12:12:12.1\", \"strict_date_hour_minute_second_millis\");\n        assertSameDate(\"2018-12-31T12:12:12.1\", \"strict_date_hour_minute_second_fraction\");\n        assertParseException(\"2018-12-31T12:12:12\", \"strict_date_hour_minute_second_millis\");\n        assertParseException(\"2018-12-31T12:12:12\", \"strict_date_hour_minute_second_fraction\");\n        assertSameDate(\"2018-12-31\", \"strict_date_optional_time\");\n        assertParseException(\"2018-12-1\", \"strict_date_optional_time\");\n        assertParseException(\"2018-1-31\", \"strict_date_optional_time\");\n        assertParseException(\"10000-01-31\", \"strict_date_optional_time\");\n        assertSameDate(\"2010-01-05T02:00\", \"strict_date_optional_time\");\n        assertSameDate(\"2018-12-31T10:15:30\", \"strict_date_optional_time\");\n        assertSameDate(\"2018-12-31T10:15:30Z\", \"strict_date_optional_time\");\n        assertSameDate(\"2018-12-31T10:15:30+0100\", \"strict_date_optional_time\");\n        assertSameDate(\"2018-12-31T10:15:30+01:00\", \"strict_date_optional_time\");\n        assertParseException(\"2018-12-31T10:15:3\", \"strict_date_optional_time\");\n        assertParseException(\"2018-12-31T10:5:30\", \"strict_date_optional_time\");\n        assertParseException(\"2018-12-31T9:15:30\", \"strict_date_optional_time\");\n        assertSameDate(\"2015-01-04T00:00Z\", \"strict_date_optional_time\");\n        assertSameDate(\"2018-12-31T10:15:30.123Z\", \"strict_date_time\");\n        assertSameDate(\"2018-12-31T10:15:30.123+0100\", \"strict_date_time\");\n        assertSameDate(\"2018-12-31T10:15:30.123+01:00\", \"strict_date_time\");\n        assertSameDate(\"2018-12-31T10:15:30.11Z\", \"strict_date_time\");\n        assertSameDate(\"2018-12-31T10:15:30.11+0100\", \"strict_date_time\");\n        assertSameDate(\"2018-12-31T10:15:30.11+01:00\", \"strict_date_time\");\n        assertParseException(\"2018-12-31T10:15:3.123Z\", \"strict_date_time\");\n        assertParseException(\"2018-12-31T10:5:30.123Z\", \"strict_date_time\");\n        assertParseException(\"2018-12-31T1:15:30.123Z\", \"strict_date_time\");\n        assertSameDate(\"2018-12-31T10:15:30Z\", \"strict_date_time_no_millis\");\n        assertSameDate(\"2018-12-31T10:15:30+0100\", \"strict_date_time_no_millis\");\n        assertSameDate(\"2018-12-31T10:15:30+01:00\", \"strict_date_time_no_millis\");\n        assertParseException(\"2018-12-31T10:5:30Z\", \"strict_date_time_no_millis\");\n        assertParseException(\"2018-12-31T10:15:3Z\", \"strict_date_time_no_millis\");\n        assertParseException(\"2018-12-31T1:15:30Z\", \"strict_date_time_no_millis\");\n        assertSameDate(\"12\", \"strict_hour\");\n        assertSameDate(\"01\", \"strict_hour\");\n        assertParseException(\"1\", \"strict_hour\");\n        assertSameDate(\"12:12\", \"strict_hour_minute\");\n        assertSameDate(\"12:01\", \"strict_hour_minute\");\n        assertParseException(\"12:1\", \"strict_hour_minute\");\n        assertSameDate(\"12:12:12\", \"strict_hour_minute_second\");\n        assertSameDate(\"12:12:01\", \"strict_hour_minute_second\");\n        assertParseException(\"12:12:1\", \"strict_hour_minute_second\");\n        assertSameDate(\"12:12:12.123\", \"strict_hour_minute_second_fraction\");\n        assertSameDate(\"12:12:12.1\", \"strict_hour_minute_second_fraction\");\n        assertParseException(\"12:12:12\", \"strict_hour_minute_second_fraction\");\n        assertSameDate(\"12:12:12.123\", \"strict_hour_minute_second_millis\");\n        assertSameDate(\"12:12:12.1\", \"strict_hour_minute_second_millis\");\n        assertParseException(\"12:12:12\", \"strict_hour_minute_second_millis\");\n        assertSameDate(\"2018-128\", \"strict_ordinal_date\");\n        assertParseException(\"2018-1\", \"strict_ordinal_date\");\n\n        assertSameDate(\"2018-128T10:15:30.123Z\", \"strict_ordinal_date_time\");\n        assertSameDate(\"2018-128T10:15:30.123+0100\", \"strict_ordinal_date_time\");\n        assertSameDate(\"2018-128T10:15:30.123+01:00\", \"strict_ordinal_date_time\");\n        assertParseException(\"2018-1T10:15:30.123Z\", \"strict_ordinal_date_time\");\n\n        assertSameDate(\"2018-128T10:15:30Z\", \"strict_ordinal_date_time_no_millis\");\n        assertSameDate(\"2018-128T10:15:30+0100\", \"strict_ordinal_date_time_no_millis\");\n        assertSameDate(\"2018-128T10:15:30+01:00\", \"strict_ordinal_date_time_no_millis\");\n        assertParseException(\"2018-1T10:15:30Z\", \"strict_ordinal_date_time_no_millis\");\n\n        assertSameDate(\"10:15:30.123Z\", \"strict_time\");\n        assertSameDate(\"10:15:30.123+0100\", \"strict_time\");\n        assertSameDate(\"10:15:30.123+01:00\", \"strict_time\");\n        assertParseException(\"1:15:30.123Z\", \"strict_time\");\n        assertParseException(\"10:1:30.123Z\", \"strict_time\");\n        assertParseException(\"10:15:3.123Z\", \"strict_time\");\n        assertParseException(\"10:15:3.1\", \"strict_time\");\n        assertParseException(\"10:15:3Z\", \"strict_time\");\n\n        assertSameDate(\"10:15:30Z\", \"strict_time_no_millis\");\n        assertSameDate(\"10:15:30+0100\", \"strict_time_no_millis\");\n        assertSameDate(\"10:15:30+01:00\", \"strict_time_no_millis\");\n        assertSameDate(\"01:15:30Z\", \"strict_time_no_millis\");\n        assertSameDate(\"01:15:30+0100\", \"strict_time_no_millis\");\n        assertSameDate(\"01:15:30+01:00\", \"strict_time_no_millis\");\n        assertParseException(\"1:15:30Z\", \"strict_time_no_millis\");\n        assertParseException(\"10:5:30Z\", \"strict_time_no_millis\");\n        assertParseException(\"10:15:3Z\", \"strict_time_no_millis\");\n        assertParseException(\"10:15:3\", \"strict_time_no_millis\");\n\n        assertSameDate(\"T10:15:30.123Z\", \"strict_t_time\");\n        assertSameDate(\"T10:15:30.123+0100\", \"strict_t_time\");\n        assertSameDate(\"T10:15:30.123+01:00\", \"strict_t_time\");\n        assertParseException(\"T1:15:30.123Z\", \"strict_t_time\");\n        assertParseException(\"T10:1:30.123Z\", \"strict_t_time\");\n        assertParseException(\"T10:15:3.123Z\", \"strict_t_time\");\n        assertParseException(\"T10:15:3.1\", \"strict_t_time\");\n        assertParseException(\"T10:15:3Z\", \"strict_t_time\");\n\n        assertSameDate(\"T10:15:30Z\", \"strict_t_time_no_millis\");\n        assertSameDate(\"T10:15:30+0100\", \"strict_t_time_no_millis\");\n        assertSameDate(\"T10:15:30+01:00\", \"strict_t_time_no_millis\");\n        assertParseException(\"T1:15:30Z\", \"strict_t_time_no_millis\");\n        assertParseException(\"T10:1:30Z\", \"strict_t_time_no_millis\");\n        assertParseException(\"T10:15:3Z\", \"strict_t_time_no_millis\");\n        assertParseException(\"T10:15:3\", \"strict_t_time_no_millis\");\n\n        assertSameDate(\"2012-W48-6\", \"strict_week_date\");\n        assertSameDate(\"2012-W01-6\", \"strict_week_date\");\n        assertParseException(\"2012-W1-6\", \"strict_week_date\");\n        assertParseException(\"2012-W1-8\", \"strict_week_date\");\n\n        assertSameDate(\"2012-W48-6\", \"strict_week_date\");\n        assertSameDate(\"2012-W01-6\", \"strict_week_date\");\n        assertParseException(\"2012-W1-6\", \"strict_week_date\");\n        \r\n        assertJodaParseException(\"2012-W01-8\", \"strict_week_date\",\n            \"Cannot parse \\\"2012-W01-8\\\": Value 8 for dayOfWeek must be in the range [1,7]\");\n        assertJavaTimeParseException(\"2012-W01-8\", \"strict_week_date\");\n\n        assertSameDate(\"2012-W48-6T10:15:30.123Z\", \"strict_week_date_time\");\n        assertSameDate(\"2012-W48-6T10:15:30.123+0100\", \"strict_week_date_time\");\n        assertSameDate(\"2012-W48-6T10:15:30.123+01:00\", \"strict_week_date_time\");\n        assertParseException(\"2012-W1-6T10:15:30.123Z\", \"strict_week_date_time\");\n\n        assertSameDate(\"2012-W48-6T10:15:30Z\", \"strict_week_date_time_no_millis\");\n        assertSameDate(\"2012-W48-6T10:15:30+0100\", \"strict_week_date_time_no_millis\");\n        assertSameDate(\"2012-W48-6T10:15:30+01:00\", \"strict_week_date_time_no_millis\");\n        assertParseException(\"2012-W1-6T10:15:30Z\", \"strict_week_date_time_no_millis\");\n\n        assertSameDate(\"2012\", \"strict_year\");\n        assertParseException(\"1\", \"strict_year\");\n        assertSameDate(\"-2000\", \"strict_year\");\n\n        assertSameDate(\"2012-12\", \"strict_year_month\");\n        assertParseException(\"1-1\", \"strict_year_month\");\n\n        assertSameDate(\"2012-12-31\", \"strict_year_month_day\");\n        assertParseException(\"1-12-31\", \"strict_year_month_day\");\n        assertParseException(\"2012-1-31\", \"strict_year_month_day\");\n        assertParseException(\"2012-12-1\", \"strict_year_month_day\");\n\n        assertSameDate(\"2018\", \"strict_weekyear\");\n        assertParseException(\"1\", \"strict_weekyear\");\n\n        assertSameDate(\"2018\", \"strict_weekyear\");\n        assertSameDate(\"2017\", \"strict_weekyear\");\n        assertParseException(\"1\", \"strict_weekyear\");\n\n        assertSameDate(\"2018-W29\", \"strict_weekyear_week\");\n        assertSameDate(\"2018-W01\", \"strict_weekyear_week\");\n        assertParseException(\"2018-W1\", \"strict_weekyear_week\");\n\n        assertSameDate(\"2012-W31-5\", \"strict_weekyear_week_day\");\n        assertParseException(\"2012-W1-1\", \"strict_weekyear_week_day\");\n    }\n","date":"2019-01-23 17:40:05","endLine":503,"groupId":"48965","id":20,"instanceNumber":2,"isCurCommit":0,"methodName":"testDuelingStrictParsing","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/c7/abea63be081bcbb1e22b9e1a812bd2b3934709.src","preCode":"    public void testDuelingStrictParsing() {\n        assertSameDate(\"2018W313\", \"strict_basic_week_date\");\n        assertParseException(\"18W313\", \"strict_basic_week_date\");\n        assertSameDate(\"2018W313T121212.123Z\", \"strict_basic_week_date_time\");\n        assertSameDate(\"2018W313T121212.123+0100\", \"strict_basic_week_date_time\");\n        assertSameDate(\"2018W313T121212.123+01:00\", \"strict_basic_week_date_time\");\n        assertParseException(\"2018W313T12128.123Z\", \"strict_basic_week_date_time\");\n        assertParseException(\"2018W313T81212.123Z\", \"strict_basic_week_date_time\");\n        assertParseException(\"2018W313T12812.123Z\", \"strict_basic_week_date_time\");\n        assertParseException(\"2018W313T12812.1Z\", \"strict_basic_week_date_time\");\n        assertSameDate(\"2018W313T121212Z\", \"strict_basic_week_date_time_no_millis\");\n        assertSameDate(\"2018W313T121212+0100\", \"strict_basic_week_date_time_no_millis\");\n        assertSameDate(\"2018W313T121212+01:00\", \"strict_basic_week_date_time_no_millis\");\n        assertParseException(\"2018W313T12128Z\", \"strict_basic_week_date_time_no_millis\");\n        assertParseException(\"2018W313T12128+0100\", \"strict_basic_week_date_time_no_millis\");\n        assertParseException(\"2018W313T12128+01:00\", \"strict_basic_week_date_time_no_millis\");\n        assertParseException(\"2018W313T81212Z\", \"strict_basic_week_date_time_no_millis\");\n        assertParseException(\"2018W313T81212+0100\", \"strict_basic_week_date_time_no_millis\");\n        assertParseException(\"2018W313T81212+01:00\", \"strict_basic_week_date_time_no_millis\");\n        assertParseException(\"2018W313T12812Z\", \"strict_basic_week_date_time_no_millis\");\n        assertParseException(\"2018W313T12812+0100\", \"strict_basic_week_date_time_no_millis\");\n        assertParseException(\"2018W313T12812+01:00\", \"strict_basic_week_date_time_no_millis\");\n        assertSameDate(\"2018-12-31\", \"strict_date\");\n        assertParseException(\"10000-12-31\", \"strict_date\");\n        assertParseException(\"2018-8-31\", \"strict_date\");\n        assertSameDate(\"2018-12-31T12\", \"strict_date_hour\");\n        assertParseException(\"2018-12-31T8\", \"strict_date_hour\");\n        assertSameDate(\"2018-12-31T12:12\", \"strict_date_hour_minute\");\n        assertParseException(\"2018-12-31T8:3\", \"strict_date_hour_minute\");\n        assertSameDate(\"2018-12-31T12:12:12\", \"strict_date_hour_minute_second\");\n        assertParseException(\"2018-12-31T12:12:1\", \"strict_date_hour_minute_second\");\n        assertSameDate(\"2018-12-31T12:12:12.123\", \"strict_date_hour_minute_second_fraction\");\n        assertSameDate(\"2018-12-31T12:12:12.123\", \"strict_date_hour_minute_second_millis\");\n        assertSameDate(\"2018-12-31T12:12:12.1\", \"strict_date_hour_minute_second_millis\");\n        assertSameDate(\"2018-12-31T12:12:12.1\", \"strict_date_hour_minute_second_fraction\");\n        assertParseException(\"2018-12-31T12:12:12\", \"strict_date_hour_minute_second_millis\");\n        assertParseException(\"2018-12-31T12:12:12\", \"strict_date_hour_minute_second_fraction\");\n        assertSameDate(\"2018-12-31\", \"strict_date_optional_time\");\n        assertParseException(\"2018-12-1\", \"strict_date_optional_time\");\n        assertParseException(\"2018-1-31\", \"strict_date_optional_time\");\n        assertParseException(\"10000-01-31\", \"strict_date_optional_time\");\n        assertSameDate(\"2018-12-31T10:15:30\", \"strict_date_optional_time\");\n        assertSameDate(\"2018-12-31T10:15:30Z\", \"strict_date_optional_time\");\n        assertSameDate(\"2018-12-31T10:15:30+0100\", \"strict_date_optional_time\");\n        assertSameDate(\"2018-12-31T10:15:30+01:00\", \"strict_date_optional_time\");\n        assertParseException(\"2018-12-31T10:15:3\", \"strict_date_optional_time\");\n        assertParseException(\"2018-12-31T10:5:30\", \"strict_date_optional_time\");\n        assertParseException(\"2018-12-31T9:15:30\", \"strict_date_optional_time\");\n        assertSameDate(\"2018-12-31T10:15:30.123Z\", \"strict_date_time\");\n        assertSameDate(\"2018-12-31T10:15:30.123+0100\", \"strict_date_time\");\n        assertSameDate(\"2018-12-31T10:15:30.123+01:00\", \"strict_date_time\");\n        assertSameDate(\"2018-12-31T10:15:30.11Z\", \"strict_date_time\");\n        assertSameDate(\"2018-12-31T10:15:30.11+0100\", \"strict_date_time\");\n        assertSameDate(\"2018-12-31T10:15:30.11+01:00\", \"strict_date_time\");\n        assertParseException(\"2018-12-31T10:15:3.123Z\", \"strict_date_time\");\n        assertParseException(\"2018-12-31T10:5:30.123Z\", \"strict_date_time\");\n        assertParseException(\"2018-12-31T1:15:30.123Z\", \"strict_date_time\");\n        assertSameDate(\"2018-12-31T10:15:30Z\", \"strict_date_time_no_millis\");\n        assertSameDate(\"2018-12-31T10:15:30+0100\", \"strict_date_time_no_millis\");\n        assertSameDate(\"2018-12-31T10:15:30+01:00\", \"strict_date_time_no_millis\");\n        assertParseException(\"2018-12-31T10:5:30Z\", \"strict_date_time_no_millis\");\n        assertParseException(\"2018-12-31T10:15:3Z\", \"strict_date_time_no_millis\");\n        assertParseException(\"2018-12-31T1:15:30Z\", \"strict_date_time_no_millis\");\n        assertSameDate(\"12\", \"strict_hour\");\n        assertSameDate(\"01\", \"strict_hour\");\n        assertParseException(\"1\", \"strict_hour\");\n        assertSameDate(\"12:12\", \"strict_hour_minute\");\n        assertSameDate(\"12:01\", \"strict_hour_minute\");\n        assertParseException(\"12:1\", \"strict_hour_minute\");\n        assertSameDate(\"12:12:12\", \"strict_hour_minute_second\");\n        assertSameDate(\"12:12:01\", \"strict_hour_minute_second\");\n        assertParseException(\"12:12:1\", \"strict_hour_minute_second\");\n        assertSameDate(\"12:12:12.123\", \"strict_hour_minute_second_fraction\");\n        assertSameDate(\"12:12:12.1\", \"strict_hour_minute_second_fraction\");\n        assertParseException(\"12:12:12\", \"strict_hour_minute_second_fraction\");\n        assertSameDate(\"12:12:12.123\", \"strict_hour_minute_second_millis\");\n        assertSameDate(\"12:12:12.1\", \"strict_hour_minute_second_millis\");\n        assertParseException(\"12:12:12\", \"strict_hour_minute_second_millis\");\n        assertSameDate(\"2018-128\", \"strict_ordinal_date\");\n        assertParseException(\"2018-1\", \"strict_ordinal_date\");\n\n        assertSameDate(\"2018-128T10:15:30.123Z\", \"strict_ordinal_date_time\");\n        assertSameDate(\"2018-128T10:15:30.123+0100\", \"strict_ordinal_date_time\");\n        assertSameDate(\"2018-128T10:15:30.123+01:00\", \"strict_ordinal_date_time\");\n        assertParseException(\"2018-1T10:15:30.123Z\", \"strict_ordinal_date_time\");\n\n        assertSameDate(\"2018-128T10:15:30Z\", \"strict_ordinal_date_time_no_millis\");\n        assertSameDate(\"2018-128T10:15:30+0100\", \"strict_ordinal_date_time_no_millis\");\n        assertSameDate(\"2018-128T10:15:30+01:00\", \"strict_ordinal_date_time_no_millis\");\n        assertParseException(\"2018-1T10:15:30Z\", \"strict_ordinal_date_time_no_millis\");\n\n        assertSameDate(\"10:15:30.123Z\", \"strict_time\");\n        assertSameDate(\"10:15:30.123+0100\", \"strict_time\");\n        assertSameDate(\"10:15:30.123+01:00\", \"strict_time\");\n        assertParseException(\"1:15:30.123Z\", \"strict_time\");\n        assertParseException(\"10:1:30.123Z\", \"strict_time\");\n        assertParseException(\"10:15:3.123Z\", \"strict_time\");\n        assertParseException(\"10:15:3.1\", \"strict_time\");\n        assertParseException(\"10:15:3Z\", \"strict_time\");\n\n        assertSameDate(\"10:15:30Z\", \"strict_time_no_millis\");\n        assertSameDate(\"10:15:30+0100\", \"strict_time_no_millis\");\n        assertSameDate(\"10:15:30+01:00\", \"strict_time_no_millis\");\n        assertSameDate(\"01:15:30Z\", \"strict_time_no_millis\");\n        assertSameDate(\"01:15:30+0100\", \"strict_time_no_millis\");\n        assertSameDate(\"01:15:30+01:00\", \"strict_time_no_millis\");\n        assertParseException(\"1:15:30Z\", \"strict_time_no_millis\");\n        assertParseException(\"10:5:30Z\", \"strict_time_no_millis\");\n        assertParseException(\"10:15:3Z\", \"strict_time_no_millis\");\n        assertParseException(\"10:15:3\", \"strict_time_no_millis\");\n\n        assertSameDate(\"T10:15:30.123Z\", \"strict_t_time\");\n        assertSameDate(\"T10:15:30.123+0100\", \"strict_t_time\");\n        assertSameDate(\"T10:15:30.123+01:00\", \"strict_t_time\");\n        assertParseException(\"T1:15:30.123Z\", \"strict_t_time\");\n        assertParseException(\"T10:1:30.123Z\", \"strict_t_time\");\n        assertParseException(\"T10:15:3.123Z\", \"strict_t_time\");\n        assertParseException(\"T10:15:3.1\", \"strict_t_time\");\n        assertParseException(\"T10:15:3Z\", \"strict_t_time\");\n\n        assertSameDate(\"T10:15:30Z\", \"strict_t_time_no_millis\");\n        assertSameDate(\"T10:15:30+0100\", \"strict_t_time_no_millis\");\n        assertSameDate(\"T10:15:30+01:00\", \"strict_t_time_no_millis\");\n        assertParseException(\"T1:15:30Z\", \"strict_t_time_no_millis\");\n        assertParseException(\"T10:1:30Z\", \"strict_t_time_no_millis\");\n        assertParseException(\"T10:15:3Z\", \"strict_t_time_no_millis\");\n        assertParseException(\"T10:15:3\", \"strict_t_time_no_millis\");\n\n        assertSameDate(\"2012-W48-6\", \"strict_week_date\");\n        assertSameDate(\"2012-W01-6\", \"strict_week_date\");\n        assertParseException(\"2012-W1-6\", \"strict_week_date\");\n        assertParseException(\"2012-W1-8\", \"strict_week_date\");\n\n        assertSameDate(\"2012-W48-6\", \"strict_week_date\");\n        assertSameDate(\"2012-W01-6\", \"strict_week_date\");\n        assertParseException(\"2012-W1-6\", \"strict_week_date\");\n        \r\n        assertJodaParseException(\"2012-W01-8\", \"strict_week_date\",\n            \"Cannot parse \\\"2012-W01-8\\\": Value 8 for dayOfWeek must be in the range [1,7]\");\n        assertJavaTimeParseException(\"2012-W01-8\", \"strict_week_date\", \"Text '2012-W01-8' could not be parsed\");\n\n        assertSameDate(\"2012-W48-6T10:15:30.123Z\", \"strict_week_date_time\");\n        assertSameDate(\"2012-W48-6T10:15:30.123+0100\", \"strict_week_date_time\");\n        assertSameDate(\"2012-W48-6T10:15:30.123+01:00\", \"strict_week_date_time\");\n        assertParseException(\"2012-W1-6T10:15:30.123Z\", \"strict_week_date_time\");\n\n        assertSameDate(\"2012-W48-6T10:15:30Z\", \"strict_week_date_time_no_millis\");\n        assertSameDate(\"2012-W48-6T10:15:30+0100\", \"strict_week_date_time_no_millis\");\n        assertSameDate(\"2012-W48-6T10:15:30+01:00\", \"strict_week_date_time_no_millis\");\n        assertParseException(\"2012-W1-6T10:15:30Z\", \"strict_week_date_time_no_millis\");\n\n        assertSameDate(\"2012\", \"strict_year\");\n        assertParseException(\"1\", \"strict_year\");\n        assertSameDate(\"-2000\", \"strict_year\");\n\n        assertSameDate(\"2012-12\", \"strict_year_month\");\n        assertParseException(\"1-1\", \"strict_year_month\");\n\n        assertSameDate(\"2012-12-31\", \"strict_year_month_day\");\n        assertParseException(\"1-12-31\", \"strict_year_month_day\");\n        assertParseException(\"2012-1-31\", \"strict_year_month_day\");\n        assertParseException(\"2012-12-1\", \"strict_year_month_day\");\n\n        assertSameDate(\"2018\", \"strict_weekyear\");\n        assertParseException(\"1\", \"strict_weekyear\");\n\n        assertSameDate(\"2018\", \"strict_weekyear\");\n        assertSameDate(\"2017\", \"strict_weekyear\");\n        assertParseException(\"1\", \"strict_weekyear\");\n\n        assertSameDate(\"2018-W29\", \"strict_weekyear_week\");\n        assertSameDate(\"2018-W01\", \"strict_weekyear_week\");\n        assertParseException(\"2018-W1\", \"strict_weekyear_week\");\n\n        assertSameDate(\"2012-W31-5\", \"strict_weekyear_week_day\");\n        assertParseException(\"2012-W1-1\", \"strict_weekyear_week_day\");\n    }\n","realPath":"server/src/test/java/org/elasticsearch/common/joda/JavaJodaTimeDuellingTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":325,"status":"M"}],"commitId":"daa2ec8a605d385a65b9ab3e89d016b3fd0dffe2","commitMessage":"@@@Switch mapping/aggregations over to java time (#36363)\n\nThis commit moves the aggregation and mapping code from joda time to\njava time. This includes field mappers.  root object mappers.  aggregations with date\nhistograms.  query builders and a lot of changes within tests.\n\nThe cut-over to java time is a requirement so that we can support nanoseconds\nproperly in a future field mapper.\n\nRelates #27330","date":"2019-01-23 17:40:05","modifiedFileCount":"154","status":"M","submitter":"Alexander Reelsen"},{"authorTime":"2019-01-30 17:47:12","codes":[{"authorDate":"2019-01-30 17:47:12","commitOrder":11,"curCode":"    public void testDuellingFormatsValidParsing() {\n        assertSameDate(\"1522332219\", \"epoch_second\");\n        assertSameDate(\"0\", \"epoch_second\");\n        assertSameDate(\"1\", \"epoch_second\");\n        assertSameDate(\"1522332219321\", \"epoch_millis\");\n        assertSameDate(\"0\", \"epoch_millis\");\n        assertSameDate(\"1\", \"epoch_millis\");\n\n        assertSameDate(\"20181126\", \"basic_date\");\n        assertSameDate(\"20181126T121212.123Z\", \"basic_date_time\");\n        assertSameDate(\"20181126T121212.123+10:00\", \"basic_date_time\");\n        assertSameDate(\"20181126T121212.123-0800\", \"basic_date_time\");\n\n        assertSameDate(\"20181126T121212Z\", \"basic_date_time_no_millis\");\n        assertSameDate(\"20181126T121212+01:00\", \"basic_date_time_no_millis\");\n        assertSameDate(\"20181126T121212+0100\", \"basic_date_time_no_millis\");\n        assertSameDate(\"2018363\", \"basic_ordinal_date\");\n        assertSameDate(\"2018363T121212.123Z\", \"basic_ordinal_date_time\");\n        assertSameDate(\"2018363T121212.123456789Z\", \"basic_ordinal_date_time\");\n        assertSameDate(\"2018363T121212.123+0100\", \"basic_ordinal_date_time\");\n        assertSameDate(\"2018363T121212.123+01:00\", \"basic_ordinal_date_time\");\n        assertSameDate(\"2018363T121212Z\", \"basic_ordinal_date_time_no_millis\");\n        assertSameDate(\"2018363T121212+0100\", \"basic_ordinal_date_time_no_millis\");\n        assertSameDate(\"2018363T121212+01:00\", \"basic_ordinal_date_time_no_millis\");\n        assertSameDate(\"121212.123Z\", \"basic_time\");\n        assertSameDate(\"121212.123456789Z\", \"basic_time\");\n        assertSameDate(\"121212.123+0100\", \"basic_time\");\n        assertSameDate(\"121212.123+01:00\", \"basic_time\");\n        assertSameDate(\"121212Z\", \"basic_time_no_millis\");\n        assertSameDate(\"121212+0100\", \"basic_time_no_millis\");\n        assertSameDate(\"121212+01:00\", \"basic_time_no_millis\");\n        assertSameDate(\"T121212.123Z\", \"basic_t_time\");\n        assertSameDate(\"T121212.123456789Z\", \"basic_t_time\");\n        assertSameDate(\"T121212.123+0100\", \"basic_t_time\");\n        assertSameDate(\"T121212.123+01:00\", \"basic_t_time\");\n        assertSameDate(\"T121212Z\", \"basic_t_time_no_millis\");\n        assertSameDate(\"T121212+0100\", \"basic_t_time_no_millis\");\n        assertSameDate(\"T121212+01:00\", \"basic_t_time_no_millis\");\n        assertSameDate(\"2018W313\", \"basic_week_date\");\n        assertSameDate(\"1W313\", \"basic_week_date\");\n        assertSameDate(\"18W313\", \"basic_week_date\");\n        assertSameDate(\"2018W313T121212.123Z\", \"basic_week_date_time\");\n        assertSameDate(\"2018W313T121212.123456789Z\", \"basic_week_date_time\");\n        assertSameDate(\"2018W313T121212.123+0100\", \"basic_week_date_time\");\n        assertSameDate(\"2018W313T121212.123+01:00\", \"basic_week_date_time\");\n        assertSameDate(\"2018W313T121212Z\", \"basic_week_date_time_no_millis\");\n        assertSameDate(\"2018W313T121212+0100\", \"basic_week_date_time_no_millis\");\n        assertSameDate(\"2018W313T121212+01:00\", \"basic_week_date_time_no_millis\");\n\n        assertSameDate(\"2018-12-31\", \"date\");\n        assertSameDate(\"18-5-6\", \"date\");\n        assertSameDate(\"10000-5-6\", \"date\");\n\n        assertSameDate(\"2018-12-31T12\", \"date_hour\");\n        assertSameDate(\"2018-12-31T8\", \"date_hour\");\n\n        assertSameDate(\"2018-12-31T12:12\", \"date_hour_minute\");\n        assertSameDate(\"2018-12-31T8:3\", \"date_hour_minute\");\n\n        assertSameDate(\"2018-12-31T12:12:12\", \"date_hour_minute_second\");\n        assertSameDate(\"2018-12-31T12:12:1\", \"date_hour_minute_second\");\n\n        assertSameDate(\"2018-12-31T12:12:12.123\", \"date_hour_minute_second_fraction\");\n        assertSameDate(\"2018-12-31T12:12:12.123456789\", \"date_hour_minute_second_fraction\");\n        assertSameDate(\"2018-12-31T12:12:12.123\", \"date_hour_minute_second_millis\");\n        assertParseException(\"2018-12-31T12:12:12.123456789\", \"date_hour_minute_second_millis\");\n        assertSameDate(\"2018-12-31T12:12:12.1\", \"date_hour_minute_second_millis\");\n        assertSameDate(\"2018-12-31T12:12:12.1\", \"date_hour_minute_second_fraction\");\n\n        assertSameDate(\"2018-05\", \"date_optional_time\");\n        assertSameDate(\"2018-05-30\", \"date_optional_time\");\n        assertSameDate(\"2018-05-30T20\", \"date_optional_time\");\n        assertSameDate(\"2018-05-30T20:21\", \"date_optional_time\");\n        assertSameDate(\"2018-05-30T20:21:23\", \"date_optional_time\");\n        assertSameDate(\"2018-05-30T20:21:23.123\", \"date_optional_time\");\n        assertSameDate(\"2018-05-30T20:21:23.123456789\", \"date_optional_time\");\n        assertSameDate(\"2018-05-30T20:21:23.123Z\", \"date_optional_time\");\n        assertSameDate(\"2018-05-30T20:21:23.123456789Z\", \"date_optional_time\");\n        assertSameDate(\"2018-05-30T20:21:23.123+0100\", \"date_optional_time\");\n        assertSameDate(\"2018-05-30T20:21:23.123+01:00\", \"date_optional_time\");\n        assertSameDate(\"2018-12-1\", \"date_optional_time\");\n        assertSameDate(\"2018-12-31T10:15:30\", \"date_optional_time\");\n        assertSameDate(\"2018-12-31T10:15:3\", \"date_optional_time\");\n        assertSameDate(\"2018-12-31T10:5:30\", \"date_optional_time\");\n        assertSameDate(\"2018-12-31T1:15:30\", \"date_optional_time\");\n\n        assertSameDate(\"2018-12-31T10:15:30.123Z\", \"date_time\");\n        assertSameDate(\"2018-12-31T10:15:30.123456789Z\", \"date_time\");\n        assertSameDate(\"2018-12-31T10:15:30.123+0100\", \"date_time\");\n        assertSameDate(\"2018-12-31T10:15:30.123+01:00\", \"date_time\");\n        assertSameDate(\"2018-12-31T10:15:30.11Z\", \"date_time\");\n        assertSameDate(\"2018-12-31T10:15:30.11+0100\", \"date_time\");\n        assertSameDate(\"2018-12-31T10:15:30.11+01:00\", \"date_time\");\n        assertSameDate(\"2018-12-31T10:15:3.123Z\", \"date_time\");\n        assertSameDate(\"2018-12-31T10:15:3.123456789Z\", \"date_time\");\n        assertSameDate(\"2018-12-31T10:15:3.123+0100\", \"date_time\");\n        assertSameDate(\"2018-12-31T10:15:3.123+01:00\", \"date_time\");\n\n        assertSameDate(\"2018-12-31T10:15:30Z\", \"date_time_no_millis\");\n        assertSameDate(\"2018-12-31T10:15:30+0100\", \"date_time_no_millis\");\n        assertSameDate(\"2018-12-31T10:15:30+01:00\", \"date_time_no_millis\");\n        assertSameDate(\"2018-12-31T10:5:30Z\", \"date_time_no_millis\");\n        assertSameDate(\"2018-12-31T10:5:30+0100\", \"date_time_no_millis\");\n        assertSameDate(\"2018-12-31T10:5:30+01:00\", \"date_time_no_millis\");\n        assertSameDate(\"2018-12-31T10:15:3Z\", \"date_time_no_millis\");\n        assertSameDate(\"2018-12-31T10:15:3+0100\", \"date_time_no_millis\");\n        assertSameDate(\"2018-12-31T10:15:3+01:00\", \"date_time_no_millis\");\n        assertSameDate(\"2018-12-31T1:15:30Z\", \"date_time_no_millis\");\n        assertSameDate(\"2018-12-31T1:15:30+0100\", \"date_time_no_millis\");\n        assertSameDate(\"2018-12-31T1:15:30+01:00\", \"date_time_no_millis\");\n\n        assertSameDate(\"12\", \"hour\");\n        assertSameDate(\"01\", \"hour\");\n        assertSameDate(\"1\", \"hour\");\n\n        assertSameDate(\"12:12\", \"hour_minute\");\n        assertSameDate(\"12:01\", \"hour_minute\");\n        assertSameDate(\"12:1\", \"hour_minute\");\n\n        assertSameDate(\"12:12:12\", \"hour_minute_second\");\n        assertSameDate(\"12:12:01\", \"hour_minute_second\");\n        assertSameDate(\"12:12:1\", \"hour_minute_second\");\n\n        assertSameDate(\"12:12:12.123\", \"hour_minute_second_fraction\");\n        assertSameDate(\"12:12:12.123456789\", \"hour_minute_second_fraction\");\n        assertSameDate(\"12:12:12.1\", \"hour_minute_second_fraction\");\n        assertParseException(\"12:12:12\", \"hour_minute_second_fraction\");\n        assertSameDate(\"12:12:12.123\", \"hour_minute_second_millis\");\n        assertParseException(\"12:12:12.123456789\", \"hour_minute_second_millis\");\n        assertSameDate(\"12:12:12.1\", \"hour_minute_second_millis\");\n        assertParseException(\"12:12:12\", \"hour_minute_second_millis\");\n\n        assertSameDate(\"2018-128\", \"ordinal_date\");\n        assertSameDate(\"2018-1\", \"ordinal_date\");\n\n        assertSameDate(\"2018-128T10:15:30.123Z\", \"ordinal_date_time\");\n        assertSameDate(\"2018-128T10:15:30.123456789Z\", \"ordinal_date_time\");\n        assertSameDate(\"2018-128T10:15:30.123+0100\", \"ordinal_date_time\");\n        assertSameDate(\"2018-128T10:15:30.123+01:00\", \"ordinal_date_time\");\n        assertSameDate(\"2018-1T10:15:30.123Z\", \"ordinal_date_time\");\n        assertSameDate(\"2018-1T10:15:30.123456789Z\", \"ordinal_date_time\");\n        assertSameDate(\"2018-1T10:15:30.123+0100\", \"ordinal_date_time\");\n        assertSameDate(\"2018-1T10:15:30.123+01:00\", \"ordinal_date_time\");\n\n        assertSameDate(\"2018-128T10:15:30Z\", \"ordinal_date_time_no_millis\");\n        assertSameDate(\"2018-128T10:15:30+0100\", \"ordinal_date_time_no_millis\");\n        assertSameDate(\"2018-128T10:15:30+01:00\", \"ordinal_date_time_no_millis\");\n        assertSameDate(\"2018-1T10:15:30Z\", \"ordinal_date_time_no_millis\");\n        assertSameDate(\"2018-1T10:15:30+0100\", \"ordinal_date_time_no_millis\");\n        assertSameDate(\"2018-1T10:15:30+01:00\", \"ordinal_date_time_no_millis\");\n\n        assertSameDate(\"10:15:30.123Z\", \"time\");\n        assertSameDate(\"10:15:30.123456789Z\", \"time\");\n        assertSameDate(\"10:15:30.123+0100\", \"time\");\n        assertSameDate(\"10:15:30.123+01:00\", \"time\");\n        assertSameDate(\"1:15:30.123Z\", \"time\");\n        assertSameDate(\"1:15:30.123+0100\", \"time\");\n        assertSameDate(\"1:15:30.123+01:00\", \"time\");\n        assertSameDate(\"10:1:30.123Z\", \"time\");\n        assertSameDate(\"10:1:30.123+0100\", \"time\");\n        assertSameDate(\"10:1:30.123+01:00\", \"time\");\n        assertSameDate(\"10:15:3.123Z\", \"time\");\n        assertSameDate(\"10:15:3.123+0100\", \"time\");\n        assertSameDate(\"10:15:3.123+01:00\", \"time\");\n        assertParseException(\"10:15:3.1\", \"time\");\n        assertParseException(\"10:15:3Z\", \"time\");\n\n        assertSameDate(\"10:15:30Z\", \"time_no_millis\");\n        assertSameDate(\"10:15:30+0100\", \"time_no_millis\");\n        assertSameDate(\"10:15:30+01:00\", \"time_no_millis\");\n        assertSameDate(\"01:15:30Z\", \"time_no_millis\");\n        assertSameDate(\"01:15:30+0100\", \"time_no_millis\");\n        assertSameDate(\"01:15:30+01:00\", \"time_no_millis\");\n        assertSameDate(\"1:15:30Z\", \"time_no_millis\");\n        assertSameDate(\"1:15:30+0100\", \"time_no_millis\");\n        assertSameDate(\"1:15:30+01:00\", \"time_no_millis\");\n        assertSameDate(\"10:5:30Z\", \"time_no_millis\");\n        assertSameDate(\"10:5:30+0100\", \"time_no_millis\");\n        assertSameDate(\"10:5:30+01:00\", \"time_no_millis\");\n        assertSameDate(\"10:15:3Z\", \"time_no_millis\");\n        assertSameDate(\"10:15:3+0100\", \"time_no_millis\");\n        assertSameDate(\"10:15:3+01:00\", \"time_no_millis\");\n        assertParseException(\"10:15:3\", \"time_no_millis\");\n\n        assertSameDate(\"T10:15:30.123Z\", \"t_time\");\n        assertSameDate(\"T10:15:30.123456789Z\", \"t_time\");\n        assertSameDate(\"T10:15:30.123+0100\", \"t_time\");\n        assertSameDate(\"T10:15:30.123+01:00\", \"t_time\");\n        assertSameDate(\"T1:15:30.123Z\", \"t_time\");\n        assertSameDate(\"T1:15:30.123+0100\", \"t_time\");\n        assertSameDate(\"T1:15:30.123+01:00\", \"t_time\");\n        assertSameDate(\"T10:1:30.123Z\", \"t_time\");\n        assertSameDate(\"T10:1:30.123+0100\", \"t_time\");\n        assertSameDate(\"T10:1:30.123+01:00\", \"t_time\");\n        assertSameDate(\"T10:15:3.123Z\", \"t_time\");\n        assertSameDate(\"T10:15:3.123+0100\", \"t_time\");\n        assertSameDate(\"T10:15:3.123+01:00\", \"t_time\");\n        assertParseException(\"T10:15:3.1\", \"t_time\");\n        assertParseException(\"T10:15:3Z\", \"t_time\");\n\n        assertSameDate(\"T10:15:30Z\", \"t_time_no_millis\");\n        assertSameDate(\"T10:15:30+0100\", \"t_time_no_millis\");\n        assertSameDate(\"T10:15:30+01:00\", \"t_time_no_millis\");\n        assertSameDate(\"T1:15:30Z\", \"t_time_no_millis\");\n        assertSameDate(\"T1:15:30+0100\", \"t_time_no_millis\");\n        assertSameDate(\"T1:15:30+01:00\", \"t_time_no_millis\");\n        assertSameDate(\"T10:1:30Z\", \"t_time_no_millis\");\n        assertSameDate(\"T10:1:30+0100\", \"t_time_no_millis\");\n        assertSameDate(\"T10:1:30+01:00\", \"t_time_no_millis\");\n        assertSameDate(\"T10:15:3Z\", \"t_time_no_millis\");\n        assertSameDate(\"T10:15:3+0100\", \"t_time_no_millis\");\n        assertSameDate(\"T10:15:3+01:00\", \"t_time_no_millis\");\n        assertParseException(\"T10:15:3\", \"t_time_no_millis\");\n\n        assertSameDate(\"2012-W48-6\", \"week_date\");\n        assertSameDate(\"2012-W01-6\", \"week_date\");\n        assertSameDate(\"2012-W1-6\", \"week_date\");\n        \r\n        assertJodaParseException(\"2012-W1-8\", \"week_date\",\n            \"Cannot parse \\\"2012-W1-8\\\": Value 8 for dayOfWeek must be in the range [1,7]\");\n        assertJavaTimeParseException(\"2012-W1-8\", \"week_date\");\n\n        assertSameDate(\"2012-W48-6T10:15:30.123Z\", \"week_date_time\");\n        assertSameDate(\"2012-W48-6T10:15:30.123456789Z\", \"week_date_time\");\n        assertSameDate(\"2012-W48-6T10:15:30.123+0100\", \"week_date_time\");\n        assertSameDate(\"2012-W48-6T10:15:30.123+01:00\", \"week_date_time\");\n        assertSameDate(\"2012-W1-6T10:15:30.123Z\", \"week_date_time\");\n        assertSameDate(\"2012-W1-6T10:15:30.123+0100\", \"week_date_time\");\n        assertSameDate(\"2012-W1-6T10:15:30.123+01:00\", \"week_date_time\");\n\n        assertSameDate(\"2012-W48-6T10:15:30Z\", \"week_date_time_no_millis\");\n        assertSameDate(\"2012-W48-6T10:15:30+0100\", \"week_date_time_no_millis\");\n        assertSameDate(\"2012-W48-6T10:15:30+01:00\", \"week_date_time_no_millis\");\n        assertSameDate(\"2012-W1-6T10:15:30Z\", \"week_date_time_no_millis\");\n        assertSameDate(\"2012-W1-6T10:15:30+0100\", \"week_date_time_no_millis\");\n        assertSameDate(\"2012-W1-6T10:15:30+01:00\", \"week_date_time_no_millis\");\n\n        assertSameDate(\"2012\", \"year\");\n        assertSameDate(\"1\", \"year\");\n        assertSameDate(\"-2000\", \"year\");\n\n        assertSameDate(\"2012-12\", \"yearMonth\");\n        assertSameDate(\"1-1\", \"yearMonth\");\n\n        assertSameDate(\"2012-12-31\", \"yearMonthDay\");\n        assertSameDate(\"1-12-31\", \"yearMonthDay\");\n        assertSameDate(\"2012-1-31\", \"yearMonthDay\");\n        assertSameDate(\"2012-12-1\", \"yearMonthDay\");\n\n        assertSameDate(\"2018\", \"week_year\");\n        assertSameDate(\"1\", \"week_year\");\n        assertSameDate(\"2017\", \"week_year\");\n\n        assertSameDate(\"2018-W29\", \"weekyear_week\");\n        assertSameDate(\"2018-W1\", \"weekyear_week\");\n\n        assertSameDate(\"2012-W31-5\", \"weekyear_week_day\");\n        assertSameDate(\"2012-W1-1\", \"weekyear_week_day\");\n    }\n","date":"2019-01-30 17:47:12","endLine":340,"groupId":"65382","id":21,"instanceNumber":1,"isCurCommit":0,"methodName":"testDuellingFormatsValidParsing","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/42/3592d6d18d741fd2c66af7562e973b64282dc9.src","preCode":"    public void testDuellingFormatsValidParsing() {\n        assertSameDate(\"1522332219\", \"epoch_second\");\n        assertSameDate(\"0\", \"epoch_second\");\n        assertSameDate(\"1\", \"epoch_second\");\n        assertSameDate(\"1522332219321\", \"epoch_millis\");\n        assertSameDate(\"0\", \"epoch_millis\");\n        assertSameDate(\"1\", \"epoch_millis\");\n\n        assertSameDate(\"20181126\", \"basic_date\");\n        assertSameDate(\"20181126T121212.123Z\", \"basic_date_time\");\n        assertSameDate(\"20181126T121212.123+10:00\", \"basic_date_time\");\n        assertSameDate(\"20181126T121212.123-0800\", \"basic_date_time\");\n\n        assertSameDate(\"20181126T121212Z\", \"basic_date_time_no_millis\");\n        assertSameDate(\"20181126T121212+01:00\", \"basic_date_time_no_millis\");\n        assertSameDate(\"20181126T121212+0100\", \"basic_date_time_no_millis\");\n        assertSameDate(\"2018363\", \"basic_ordinal_date\");\n        assertSameDate(\"2018363T121212.123Z\", \"basic_ordinal_date_time\");\n        assertSameDate(\"2018363T121212.123+0100\", \"basic_ordinal_date_time\");\n        assertSameDate(\"2018363T121212.123+01:00\", \"basic_ordinal_date_time\");\n        assertSameDate(\"2018363T121212Z\", \"basic_ordinal_date_time_no_millis\");\n        assertSameDate(\"2018363T121212+0100\", \"basic_ordinal_date_time_no_millis\");\n        assertSameDate(\"2018363T121212+01:00\", \"basic_ordinal_date_time_no_millis\");\n        assertSameDate(\"121212.123Z\", \"basic_time\");\n        assertSameDate(\"121212.123+0100\", \"basic_time\");\n        assertSameDate(\"121212.123+01:00\", \"basic_time\");\n        assertSameDate(\"121212Z\", \"basic_time_no_millis\");\n        assertSameDate(\"121212+0100\", \"basic_time_no_millis\");\n        assertSameDate(\"121212+01:00\", \"basic_time_no_millis\");\n        assertSameDate(\"T121212.123Z\", \"basic_t_time\");\n        assertSameDate(\"T121212.123+0100\", \"basic_t_time\");\n        assertSameDate(\"T121212.123+01:00\", \"basic_t_time\");\n        assertSameDate(\"T121212Z\", \"basic_t_time_no_millis\");\n        assertSameDate(\"T121212+0100\", \"basic_t_time_no_millis\");\n        assertSameDate(\"T121212+01:00\", \"basic_t_time_no_millis\");\n        assertSameDate(\"2018W313\", \"basic_week_date\");\n        assertSameDate(\"1W313\", \"basic_week_date\");\n        assertSameDate(\"18W313\", \"basic_week_date\");\n        assertSameDate(\"2018W313T121212.123Z\", \"basic_week_date_time\");\n        assertSameDate(\"2018W313T121212.123+0100\", \"basic_week_date_time\");\n        assertSameDate(\"2018W313T121212.123+01:00\", \"basic_week_date_time\");\n        assertSameDate(\"2018W313T121212Z\", \"basic_week_date_time_no_millis\");\n        assertSameDate(\"2018W313T121212+0100\", \"basic_week_date_time_no_millis\");\n        assertSameDate(\"2018W313T121212+01:00\", \"basic_week_date_time_no_millis\");\n\n        assertSameDate(\"2018-12-31\", \"date\");\n        assertSameDate(\"18-5-6\", \"date\");\n        assertSameDate(\"10000-5-6\", \"date\");\n\n        assertSameDate(\"2018-12-31T12\", \"date_hour\");\n        assertSameDate(\"2018-12-31T8\", \"date_hour\");\n\n        assertSameDate(\"2018-12-31T12:12\", \"date_hour_minute\");\n        assertSameDate(\"2018-12-31T8:3\", \"date_hour_minute\");\n\n        assertSameDate(\"2018-12-31T12:12:12\", \"date_hour_minute_second\");\n        assertSameDate(\"2018-12-31T12:12:1\", \"date_hour_minute_second\");\n\n        assertSameDate(\"2018-12-31T12:12:12.123\", \"date_hour_minute_second_fraction\");\n        assertSameDate(\"2018-12-31T12:12:12.123\", \"date_hour_minute_second_millis\");\n        assertSameDate(\"2018-12-31T12:12:12.1\", \"date_hour_minute_second_millis\");\n        assertSameDate(\"2018-12-31T12:12:12.1\", \"date_hour_minute_second_fraction\");\n\n        assertSameDate(\"2018-05\", \"date_optional_time\");\n        assertSameDate(\"2018-05-30\", \"date_optional_time\");\n        assertSameDate(\"2018-05-30T20\", \"date_optional_time\");\n        assertSameDate(\"2018-05-30T20:21\", \"date_optional_time\");\n        assertSameDate(\"2018-05-30T20:21:23\", \"date_optional_time\");\n        assertSameDate(\"2018-05-30T20:21:23.123\", \"date_optional_time\");\n        assertSameDate(\"2018-05-30T20:21:23.123Z\", \"date_optional_time\");\n        assertSameDate(\"2018-05-30T20:21:23.123+0100\", \"date_optional_time\");\n        assertSameDate(\"2018-05-30T20:21:23.123+01:00\", \"date_optional_time\");\n        assertSameDate(\"2018-12-1\", \"date_optional_time\");\n        assertSameDate(\"2018-12-31T10:15:30\", \"date_optional_time\");\n        assertSameDate(\"2018-12-31T10:15:3\", \"date_optional_time\");\n        assertSameDate(\"2018-12-31T10:5:30\", \"date_optional_time\");\n        assertSameDate(\"2018-12-31T1:15:30\", \"date_optional_time\");\n\n        assertSameDate(\"2018-12-31T10:15:30.123Z\", \"date_time\");\n        assertSameDate(\"2018-12-31T10:15:30.123+0100\", \"date_time\");\n        assertSameDate(\"2018-12-31T10:15:30.123+01:00\", \"date_time\");\n        assertSameDate(\"2018-12-31T10:15:30.11Z\", \"date_time\");\n        assertSameDate(\"2018-12-31T10:15:30.11+0100\", \"date_time\");\n        assertSameDate(\"2018-12-31T10:15:30.11+01:00\", \"date_time\");\n        assertSameDate(\"2018-12-31T10:15:3.123Z\", \"date_time\");\n        assertSameDate(\"2018-12-31T10:15:3.123+0100\", \"date_time\");\n        assertSameDate(\"2018-12-31T10:15:3.123+01:00\", \"date_time\");\n\n        assertSameDate(\"2018-12-31T10:15:30Z\", \"date_time_no_millis\");\n        assertSameDate(\"2018-12-31T10:15:30+0100\", \"date_time_no_millis\");\n        assertSameDate(\"2018-12-31T10:15:30+01:00\", \"date_time_no_millis\");\n        assertSameDate(\"2018-12-31T10:5:30Z\", \"date_time_no_millis\");\n        assertSameDate(\"2018-12-31T10:5:30+0100\", \"date_time_no_millis\");\n        assertSameDate(\"2018-12-31T10:5:30+01:00\", \"date_time_no_millis\");\n        assertSameDate(\"2018-12-31T10:15:3Z\", \"date_time_no_millis\");\n        assertSameDate(\"2018-12-31T10:15:3+0100\", \"date_time_no_millis\");\n        assertSameDate(\"2018-12-31T10:15:3+01:00\", \"date_time_no_millis\");\n        assertSameDate(\"2018-12-31T1:15:30Z\", \"date_time_no_millis\");\n        assertSameDate(\"2018-12-31T1:15:30+0100\", \"date_time_no_millis\");\n        assertSameDate(\"2018-12-31T1:15:30+01:00\", \"date_time_no_millis\");\n\n        assertSameDate(\"12\", \"hour\");\n        assertSameDate(\"01\", \"hour\");\n        assertSameDate(\"1\", \"hour\");\n\n        assertSameDate(\"12:12\", \"hour_minute\");\n        assertSameDate(\"12:01\", \"hour_minute\");\n        assertSameDate(\"12:1\", \"hour_minute\");\n\n        assertSameDate(\"12:12:12\", \"hour_minute_second\");\n        assertSameDate(\"12:12:01\", \"hour_minute_second\");\n        assertSameDate(\"12:12:1\", \"hour_minute_second\");\n\n        assertSameDate(\"12:12:12.123\", \"hour_minute_second_fraction\");\n        assertSameDate(\"12:12:12.1\", \"hour_minute_second_fraction\");\n        assertParseException(\"12:12:12\", \"hour_minute_second_fraction\");\n        assertSameDate(\"12:12:12.123\", \"hour_minute_second_millis\");\n        assertSameDate(\"12:12:12.1\", \"hour_minute_second_millis\");\n        assertParseException(\"12:12:12\", \"hour_minute_second_millis\");\n\n        assertSameDate(\"2018-128\", \"ordinal_date\");\n        assertSameDate(\"2018-1\", \"ordinal_date\");\n\n        assertSameDate(\"2018-128T10:15:30.123Z\", \"ordinal_date_time\");\n        assertSameDate(\"2018-128T10:15:30.123+0100\", \"ordinal_date_time\");\n        assertSameDate(\"2018-128T10:15:30.123+01:00\", \"ordinal_date_time\");\n        assertSameDate(\"2018-1T10:15:30.123Z\", \"ordinal_date_time\");\n        assertSameDate(\"2018-1T10:15:30.123+0100\", \"ordinal_date_time\");\n        assertSameDate(\"2018-1T10:15:30.123+01:00\", \"ordinal_date_time\");\n\n        assertSameDate(\"2018-128T10:15:30Z\", \"ordinal_date_time_no_millis\");\n        assertSameDate(\"2018-128T10:15:30+0100\", \"ordinal_date_time_no_millis\");\n        assertSameDate(\"2018-128T10:15:30+01:00\", \"ordinal_date_time_no_millis\");\n        assertSameDate(\"2018-1T10:15:30Z\", \"ordinal_date_time_no_millis\");\n        assertSameDate(\"2018-1T10:15:30+0100\", \"ordinal_date_time_no_millis\");\n        assertSameDate(\"2018-1T10:15:30+01:00\", \"ordinal_date_time_no_millis\");\n\n        assertSameDate(\"10:15:30.123Z\", \"time\");\n        assertSameDate(\"10:15:30.123+0100\", \"time\");\n        assertSameDate(\"10:15:30.123+01:00\", \"time\");\n        assertSameDate(\"1:15:30.123Z\", \"time\");\n        assertSameDate(\"1:15:30.123+0100\", \"time\");\n        assertSameDate(\"1:15:30.123+01:00\", \"time\");\n        assertSameDate(\"10:1:30.123Z\", \"time\");\n        assertSameDate(\"10:1:30.123+0100\", \"time\");\n        assertSameDate(\"10:1:30.123+01:00\", \"time\");\n        assertSameDate(\"10:15:3.123Z\", \"time\");\n        assertSameDate(\"10:15:3.123+0100\", \"time\");\n        assertSameDate(\"10:15:3.123+01:00\", \"time\");\n        assertParseException(\"10:15:3.1\", \"time\");\n        assertParseException(\"10:15:3Z\", \"time\");\n\n        assertSameDate(\"10:15:30Z\", \"time_no_millis\");\n        assertSameDate(\"10:15:30+0100\", \"time_no_millis\");\n        assertSameDate(\"10:15:30+01:00\", \"time_no_millis\");\n        assertSameDate(\"01:15:30Z\", \"time_no_millis\");\n        assertSameDate(\"01:15:30+0100\", \"time_no_millis\");\n        assertSameDate(\"01:15:30+01:00\", \"time_no_millis\");\n        assertSameDate(\"1:15:30Z\", \"time_no_millis\");\n        assertSameDate(\"1:15:30+0100\", \"time_no_millis\");\n        assertSameDate(\"1:15:30+01:00\", \"time_no_millis\");\n        assertSameDate(\"10:5:30Z\", \"time_no_millis\");\n        assertSameDate(\"10:5:30+0100\", \"time_no_millis\");\n        assertSameDate(\"10:5:30+01:00\", \"time_no_millis\");\n        assertSameDate(\"10:15:3Z\", \"time_no_millis\");\n        assertSameDate(\"10:15:3+0100\", \"time_no_millis\");\n        assertSameDate(\"10:15:3+01:00\", \"time_no_millis\");\n        assertParseException(\"10:15:3\", \"time_no_millis\");\n\n        assertSameDate(\"T10:15:30.123Z\", \"t_time\");\n        assertSameDate(\"T10:15:30.123+0100\", \"t_time\");\n        assertSameDate(\"T10:15:30.123+01:00\", \"t_time\");\n        assertSameDate(\"T1:15:30.123Z\", \"t_time\");\n        assertSameDate(\"T1:15:30.123+0100\", \"t_time\");\n        assertSameDate(\"T1:15:30.123+01:00\", \"t_time\");\n        assertSameDate(\"T10:1:30.123Z\", \"t_time\");\n        assertSameDate(\"T10:1:30.123+0100\", \"t_time\");\n        assertSameDate(\"T10:1:30.123+01:00\", \"t_time\");\n        assertSameDate(\"T10:15:3.123Z\", \"t_time\");\n        assertSameDate(\"T10:15:3.123+0100\", \"t_time\");\n        assertSameDate(\"T10:15:3.123+01:00\", \"t_time\");\n        assertParseException(\"T10:15:3.1\", \"t_time\");\n        assertParseException(\"T10:15:3Z\", \"t_time\");\n\n        assertSameDate(\"T10:15:30Z\", \"t_time_no_millis\");\n        assertSameDate(\"T10:15:30+0100\", \"t_time_no_millis\");\n        assertSameDate(\"T10:15:30+01:00\", \"t_time_no_millis\");\n        assertSameDate(\"T1:15:30Z\", \"t_time_no_millis\");\n        assertSameDate(\"T1:15:30+0100\", \"t_time_no_millis\");\n        assertSameDate(\"T1:15:30+01:00\", \"t_time_no_millis\");\n        assertSameDate(\"T10:1:30Z\", \"t_time_no_millis\");\n        assertSameDate(\"T10:1:30+0100\", \"t_time_no_millis\");\n        assertSameDate(\"T10:1:30+01:00\", \"t_time_no_millis\");\n        assertSameDate(\"T10:15:3Z\", \"t_time_no_millis\");\n        assertSameDate(\"T10:15:3+0100\", \"t_time_no_millis\");\n        assertSameDate(\"T10:15:3+01:00\", \"t_time_no_millis\");\n        assertParseException(\"T10:15:3\", \"t_time_no_millis\");\n\n        assertSameDate(\"2012-W48-6\", \"week_date\");\n        assertSameDate(\"2012-W01-6\", \"week_date\");\n        assertSameDate(\"2012-W1-6\", \"week_date\");\n        \r\n        assertJodaParseException(\"2012-W1-8\", \"week_date\",\n            \"Cannot parse \\\"2012-W1-8\\\": Value 8 for dayOfWeek must be in the range [1,7]\");\n        assertJavaTimeParseException(\"2012-W1-8\", \"week_date\");\n\n        assertSameDate(\"2012-W48-6T10:15:30.123Z\", \"week_date_time\");\n        assertSameDate(\"2012-W48-6T10:15:30.123+0100\", \"week_date_time\");\n        assertSameDate(\"2012-W48-6T10:15:30.123+01:00\", \"week_date_time\");\n        assertSameDate(\"2012-W1-6T10:15:30.123Z\", \"week_date_time\");\n        assertSameDate(\"2012-W1-6T10:15:30.123+0100\", \"week_date_time\");\n        assertSameDate(\"2012-W1-6T10:15:30.123+01:00\", \"week_date_time\");\n\n        assertSameDate(\"2012-W48-6T10:15:30Z\", \"week_date_time_no_millis\");\n        assertSameDate(\"2012-W48-6T10:15:30+0100\", \"week_date_time_no_millis\");\n        assertSameDate(\"2012-W48-6T10:15:30+01:00\", \"week_date_time_no_millis\");\n        assertSameDate(\"2012-W1-6T10:15:30Z\", \"week_date_time_no_millis\");\n        assertSameDate(\"2012-W1-6T10:15:30+0100\", \"week_date_time_no_millis\");\n        assertSameDate(\"2012-W1-6T10:15:30+01:00\", \"week_date_time_no_millis\");\n\n        assertSameDate(\"2012\", \"year\");\n        assertSameDate(\"1\", \"year\");\n        assertSameDate(\"-2000\", \"year\");\n\n        assertSameDate(\"2012-12\", \"yearMonth\");\n        assertSameDate(\"1-1\", \"yearMonth\");\n\n        assertSameDate(\"2012-12-31\", \"yearMonthDay\");\n        assertSameDate(\"1-12-31\", \"yearMonthDay\");\n        assertSameDate(\"2012-1-31\", \"yearMonthDay\");\n        assertSameDate(\"2012-12-1\", \"yearMonthDay\");\n\n        assertSameDate(\"2018\", \"week_year\");\n        assertSameDate(\"1\", \"week_year\");\n        assertSameDate(\"2017\", \"week_year\");\n\n        assertSameDate(\"2018-W29\", \"weekyear_week\");\n        assertSameDate(\"2018-W1\", \"weekyear_week\");\n\n        assertSameDate(\"2012-W31-5\", \"weekyear_week_day\");\n        assertSameDate(\"2012-W1-1\", \"weekyear_week_day\");\n    }\n","realPath":"server/src/test/java/org/elasticsearch/common/joda/JavaJodaTimeDuellingTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":82,"status":"M"},{"authorDate":"2019-01-30 17:47:12","commitOrder":11,"curCode":"    public void testDuelingStrictParsing() {\n        assertSameDate(\"2018W313\", \"strict_basic_week_date\");\n        assertParseException(\"18W313\", \"strict_basic_week_date\");\n        assertSameDate(\"2018W313T121212.123Z\", \"strict_basic_week_date_time\");\n        assertSameDate(\"2018W313T121212.123456789Z\", \"strict_basic_week_date_time\");\n        assertSameDate(\"2018W313T121212.123+0100\", \"strict_basic_week_date_time\");\n        assertSameDate(\"2018W313T121212.123+01:00\", \"strict_basic_week_date_time\");\n        assertParseException(\"2018W313T12128.123Z\", \"strict_basic_week_date_time\");\n        assertParseException(\"2018W313T12128.123456789Z\", \"strict_basic_week_date_time\");\n        assertParseException(\"2018W313T81212.123Z\", \"strict_basic_week_date_time\");\n        assertParseException(\"2018W313T12812.123Z\", \"strict_basic_week_date_time\");\n        assertParseException(\"2018W313T12812.1Z\", \"strict_basic_week_date_time\");\n        assertSameDate(\"2018W313T121212Z\", \"strict_basic_week_date_time_no_millis\");\n        assertSameDate(\"2018W313T121212+0100\", \"strict_basic_week_date_time_no_millis\");\n        assertSameDate(\"2018W313T121212+01:00\", \"strict_basic_week_date_time_no_millis\");\n        assertParseException(\"2018W313T12128Z\", \"strict_basic_week_date_time_no_millis\");\n        assertParseException(\"2018W313T12128+0100\", \"strict_basic_week_date_time_no_millis\");\n        assertParseException(\"2018W313T12128+01:00\", \"strict_basic_week_date_time_no_millis\");\n        assertParseException(\"2018W313T81212Z\", \"strict_basic_week_date_time_no_millis\");\n        assertParseException(\"2018W313T81212+0100\", \"strict_basic_week_date_time_no_millis\");\n        assertParseException(\"2018W313T81212+01:00\", \"strict_basic_week_date_time_no_millis\");\n        assertParseException(\"2018W313T12812Z\", \"strict_basic_week_date_time_no_millis\");\n        assertParseException(\"2018W313T12812+0100\", \"strict_basic_week_date_time_no_millis\");\n        assertParseException(\"2018W313T12812+01:00\", \"strict_basic_week_date_time_no_millis\");\n        assertSameDate(\"2018-12-31\", \"strict_date\");\n        assertParseException(\"10000-12-31\", \"strict_date\");\n        assertParseException(\"2018-8-31\", \"strict_date\");\n        assertSameDate(\"2018-12-31T12\", \"strict_date_hour\");\n        assertParseException(\"2018-12-31T8\", \"strict_date_hour\");\n        assertSameDate(\"2018-12-31T12:12\", \"strict_date_hour_minute\");\n        assertParseException(\"2018-12-31T8:3\", \"strict_date_hour_minute\");\n        assertSameDate(\"2018-12-31T12:12:12\", \"strict_date_hour_minute_second\");\n        assertParseException(\"2018-12-31T12:12:1\", \"strict_date_hour_minute_second\");\n        assertSameDate(\"2018-12-31T12:12:12.123\", \"strict_date_hour_minute_second_fraction\");\n        assertSameDate(\"2018-12-31T12:12:12.123456789\", \"strict_date_hour_minute_second_fraction\");\n        assertSameDate(\"2018-12-31T12:12:12.123\", \"strict_date_hour_minute_second_millis\");\n        assertSameDate(\"2018-12-31T12:12:12.1\", \"strict_date_hour_minute_second_millis\");\n        assertSameDate(\"2018-12-31T12:12:12.1\", \"strict_date_hour_minute_second_fraction\");\n        assertParseException(\"2018-12-31T12:12:12\", \"strict_date_hour_minute_second_millis\");\n        assertParseException(\"2018-12-31T12:12:12\", \"strict_date_hour_minute_second_fraction\");\n        assertSameDate(\"2018-12-31\", \"strict_date_optional_time\");\n        assertParseException(\"2018-12-1\", \"strict_date_optional_time\");\n        assertParseException(\"2018-1-31\", \"strict_date_optional_time\");\n        assertParseException(\"10000-01-31\", \"strict_date_optional_time\");\n        assertSameDate(\"2010-01-05T02:00\", \"strict_date_optional_time\");\n        assertSameDate(\"2018-12-31T10:15:30\", \"strict_date_optional_time\");\n        assertSameDate(\"2018-12-31T10:15:30Z\", \"strict_date_optional_time\");\n        assertSameDate(\"2018-12-31T10:15:30+0100\", \"strict_date_optional_time\");\n        assertSameDate(\"2018-12-31T10:15:30+01:00\", \"strict_date_optional_time\");\n        assertParseException(\"2018-12-31T10:15:3\", \"strict_date_optional_time\");\n        assertParseException(\"2018-12-31T10:5:30\", \"strict_date_optional_time\");\n        assertParseException(\"2018-12-31T9:15:30\", \"strict_date_optional_time\");\n        assertSameDate(\"2015-01-04T00:00Z\", \"strict_date_optional_time\");\n        assertSameDate(\"2018-12-31T10:15:30.123Z\", \"strict_date_time\");\n        assertSameDate(\"2018-12-31T10:15:30.123456789Z\", \"strict_date_time\");\n        assertSameDate(\"2018-12-31T10:15:30.123+0100\", \"strict_date_time\");\n        assertSameDate(\"2018-12-31T10:15:30.123+01:00\", \"strict_date_time\");\n        assertSameDate(\"2018-12-31T10:15:30.11Z\", \"strict_date_time\");\n        assertSameDate(\"2018-12-31T10:15:30.11+0100\", \"strict_date_time\");\n        assertSameDate(\"2018-12-31T10:15:30.11+01:00\", \"strict_date_time\");\n        assertParseException(\"2018-12-31T10:15:3.123Z\", \"strict_date_time\");\n        assertParseException(\"2018-12-31T10:5:30.123Z\", \"strict_date_time\");\n        assertParseException(\"2018-12-31T1:15:30.123Z\", \"strict_date_time\");\n        assertSameDate(\"2018-12-31T10:15:30Z\", \"strict_date_time_no_millis\");\n        assertSameDate(\"2018-12-31T10:15:30+0100\", \"strict_date_time_no_millis\");\n        assertSameDate(\"2018-12-31T10:15:30+01:00\", \"strict_date_time_no_millis\");\n        assertParseException(\"2018-12-31T10:5:30Z\", \"strict_date_time_no_millis\");\n        assertParseException(\"2018-12-31T10:15:3Z\", \"strict_date_time_no_millis\");\n        assertParseException(\"2018-12-31T1:15:30Z\", \"strict_date_time_no_millis\");\n        assertSameDate(\"12\", \"strict_hour\");\n        assertSameDate(\"01\", \"strict_hour\");\n        assertParseException(\"1\", \"strict_hour\");\n        assertSameDate(\"12:12\", \"strict_hour_minute\");\n        assertSameDate(\"12:01\", \"strict_hour_minute\");\n        assertParseException(\"12:1\", \"strict_hour_minute\");\n        assertSameDate(\"12:12:12\", \"strict_hour_minute_second\");\n        assertSameDate(\"12:12:01\", \"strict_hour_minute_second\");\n        assertParseException(\"12:12:1\", \"strict_hour_minute_second\");\n        assertSameDate(\"12:12:12.123\", \"strict_hour_minute_second_fraction\");\n        assertSameDate(\"12:12:12.123456789\", \"strict_hour_minute_second_fraction\");\n        assertSameDate(\"12:12:12.1\", \"strict_hour_minute_second_fraction\");\n        assertParseException(\"12:12:12\", \"strict_hour_minute_second_fraction\");\n        assertSameDate(\"12:12:12.123\", \"strict_hour_minute_second_millis\");\n        assertSameDate(\"12:12:12.1\", \"strict_hour_minute_second_millis\");\n        assertParseException(\"12:12:12\", \"strict_hour_minute_second_millis\");\n        assertSameDate(\"2018-128\", \"strict_ordinal_date\");\n        assertParseException(\"2018-1\", \"strict_ordinal_date\");\n\n        assertSameDate(\"2018-128T10:15:30.123Z\", \"strict_ordinal_date_time\");\n        assertSameDate(\"2018-128T10:15:30.123456789Z\", \"strict_ordinal_date_time\");\n        assertSameDate(\"2018-128T10:15:30.123+0100\", \"strict_ordinal_date_time\");\n        assertSameDate(\"2018-128T10:15:30.123+01:00\", \"strict_ordinal_date_time\");\n        assertParseException(\"2018-1T10:15:30.123Z\", \"strict_ordinal_date_time\");\n\n        assertSameDate(\"2018-128T10:15:30Z\", \"strict_ordinal_date_time_no_millis\");\n        assertSameDate(\"2018-128T10:15:30+0100\", \"strict_ordinal_date_time_no_millis\");\n        assertSameDate(\"2018-128T10:15:30+01:00\", \"strict_ordinal_date_time_no_millis\");\n        assertParseException(\"2018-1T10:15:30Z\", \"strict_ordinal_date_time_no_millis\");\n\n        assertSameDate(\"10:15:30.123Z\", \"strict_time\");\n        assertSameDate(\"10:15:30.123456789Z\", \"strict_time\");\n        assertSameDate(\"10:15:30.123+0100\", \"strict_time\");\n        assertSameDate(\"10:15:30.123+01:00\", \"strict_time\");\n        assertParseException(\"1:15:30.123Z\", \"strict_time\");\n        assertParseException(\"10:1:30.123Z\", \"strict_time\");\n        assertParseException(\"10:15:3.123Z\", \"strict_time\");\n        assertParseException(\"10:15:3.1\", \"strict_time\");\n        assertParseException(\"10:15:3Z\", \"strict_time\");\n\n        assertSameDate(\"10:15:30Z\", \"strict_time_no_millis\");\n        assertSameDate(\"10:15:30+0100\", \"strict_time_no_millis\");\n        assertSameDate(\"10:15:30+01:00\", \"strict_time_no_millis\");\n        assertSameDate(\"01:15:30Z\", \"strict_time_no_millis\");\n        assertSameDate(\"01:15:30+0100\", \"strict_time_no_millis\");\n        assertSameDate(\"01:15:30+01:00\", \"strict_time_no_millis\");\n        assertParseException(\"1:15:30Z\", \"strict_time_no_millis\");\n        assertParseException(\"10:5:30Z\", \"strict_time_no_millis\");\n        assertParseException(\"10:15:3Z\", \"strict_time_no_millis\");\n        assertParseException(\"10:15:3\", \"strict_time_no_millis\");\n\n        assertSameDate(\"T10:15:30.123Z\", \"strict_t_time\");\n        assertSameDate(\"T10:15:30.123456789Z\", \"strict_t_time\");\n        assertSameDate(\"T10:15:30.123+0100\", \"strict_t_time\");\n        assertSameDate(\"T10:15:30.123+01:00\", \"strict_t_time\");\n        assertParseException(\"T1:15:30.123Z\", \"strict_t_time\");\n        assertParseException(\"T10:1:30.123Z\", \"strict_t_time\");\n        assertParseException(\"T10:15:3.123Z\", \"strict_t_time\");\n        assertParseException(\"T10:15:3.1\", \"strict_t_time\");\n        assertParseException(\"T10:15:3Z\", \"strict_t_time\");\n\n        assertSameDate(\"T10:15:30Z\", \"strict_t_time_no_millis\");\n        assertSameDate(\"T10:15:30+0100\", \"strict_t_time_no_millis\");\n        assertSameDate(\"T10:15:30+01:00\", \"strict_t_time_no_millis\");\n        assertParseException(\"T1:15:30Z\", \"strict_t_time_no_millis\");\n        assertParseException(\"T10:1:30Z\", \"strict_t_time_no_millis\");\n        assertParseException(\"T10:15:3Z\", \"strict_t_time_no_millis\");\n        assertParseException(\"T10:15:3\", \"strict_t_time_no_millis\");\n\n        assertSameDate(\"2012-W48-6\", \"strict_week_date\");\n        assertSameDate(\"2012-W01-6\", \"strict_week_date\");\n        assertParseException(\"2012-W1-6\", \"strict_week_date\");\n        assertParseException(\"2012-W1-8\", \"strict_week_date\");\n\n        assertSameDate(\"2012-W48-6\", \"strict_week_date\");\n        assertSameDate(\"2012-W01-6\", \"strict_week_date\");\n        assertParseException(\"2012-W1-6\", \"strict_week_date\");\n        \r\n        assertJodaParseException(\"2012-W01-8\", \"strict_week_date\",\n            \"Cannot parse \\\"2012-W01-8\\\": Value 8 for dayOfWeek must be in the range [1,7]\");\n        assertJavaTimeParseException(\"2012-W01-8\", \"strict_week_date\");\n\n        assertSameDate(\"2012-W48-6T10:15:30.123Z\", \"strict_week_date_time\");\n        assertSameDate(\"2012-W48-6T10:15:30.123456789Z\", \"strict_week_date_time\");\n        assertSameDate(\"2012-W48-6T10:15:30.123+0100\", \"strict_week_date_time\");\n        assertSameDate(\"2012-W48-6T10:15:30.123+01:00\", \"strict_week_date_time\");\n        assertParseException(\"2012-W1-6T10:15:30.123Z\", \"strict_week_date_time\");\n\n        assertSameDate(\"2012-W48-6T10:15:30Z\", \"strict_week_date_time_no_millis\");\n        assertSameDate(\"2012-W48-6T10:15:30+0100\", \"strict_week_date_time_no_millis\");\n        assertSameDate(\"2012-W48-6T10:15:30+01:00\", \"strict_week_date_time_no_millis\");\n        assertParseException(\"2012-W1-6T10:15:30Z\", \"strict_week_date_time_no_millis\");\n\n        assertSameDate(\"2012\", \"strict_year\");\n        assertParseException(\"1\", \"strict_year\");\n        assertSameDate(\"-2000\", \"strict_year\");\n\n        assertSameDate(\"2012-12\", \"strict_year_month\");\n        assertParseException(\"1-1\", \"strict_year_month\");\n\n        assertSameDate(\"2012-12-31\", \"strict_year_month_day\");\n        assertParseException(\"1-12-31\", \"strict_year_month_day\");\n        assertParseException(\"2012-1-31\", \"strict_year_month_day\");\n        assertParseException(\"2012-12-1\", \"strict_year_month_day\");\n\n        assertSameDate(\"2018\", \"strict_weekyear\");\n        assertParseException(\"1\", \"strict_weekyear\");\n\n        assertSameDate(\"2018\", \"strict_weekyear\");\n        assertSameDate(\"2017\", \"strict_weekyear\");\n        assertParseException(\"1\", \"strict_weekyear\");\n\n        assertSameDate(\"2018-W29\", \"strict_weekyear_week\");\n        assertSameDate(\"2018-W01\", \"strict_weekyear_week\");\n        assertParseException(\"2018-W1\", \"strict_weekyear_week\");\n\n        assertSameDate(\"2012-W31-5\", \"strict_weekyear_week_day\");\n        assertParseException(\"2012-W1-1\", \"strict_weekyear_week_day\");\n    }\n","date":"2019-01-30 17:47:12","endLine":529,"groupId":"47697","id":22,"instanceNumber":2,"isCurCommit":0,"methodName":"testDuelingStrictParsing","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/42/3592d6d18d741fd2c66af7562e973b64282dc9.src","preCode":"    public void testDuelingStrictParsing() {\n        assertSameDate(\"2018W313\", \"strict_basic_week_date\");\n        assertParseException(\"18W313\", \"strict_basic_week_date\");\n        assertSameDate(\"2018W313T121212.123Z\", \"strict_basic_week_date_time\");\n        assertSameDate(\"2018W313T121212.123+0100\", \"strict_basic_week_date_time\");\n        assertSameDate(\"2018W313T121212.123+01:00\", \"strict_basic_week_date_time\");\n        assertParseException(\"2018W313T12128.123Z\", \"strict_basic_week_date_time\");\n        assertParseException(\"2018W313T81212.123Z\", \"strict_basic_week_date_time\");\n        assertParseException(\"2018W313T12812.123Z\", \"strict_basic_week_date_time\");\n        assertParseException(\"2018W313T12812.1Z\", \"strict_basic_week_date_time\");\n        assertSameDate(\"2018W313T121212Z\", \"strict_basic_week_date_time_no_millis\");\n        assertSameDate(\"2018W313T121212+0100\", \"strict_basic_week_date_time_no_millis\");\n        assertSameDate(\"2018W313T121212+01:00\", \"strict_basic_week_date_time_no_millis\");\n        assertParseException(\"2018W313T12128Z\", \"strict_basic_week_date_time_no_millis\");\n        assertParseException(\"2018W313T12128+0100\", \"strict_basic_week_date_time_no_millis\");\n        assertParseException(\"2018W313T12128+01:00\", \"strict_basic_week_date_time_no_millis\");\n        assertParseException(\"2018W313T81212Z\", \"strict_basic_week_date_time_no_millis\");\n        assertParseException(\"2018W313T81212+0100\", \"strict_basic_week_date_time_no_millis\");\n        assertParseException(\"2018W313T81212+01:00\", \"strict_basic_week_date_time_no_millis\");\n        assertParseException(\"2018W313T12812Z\", \"strict_basic_week_date_time_no_millis\");\n        assertParseException(\"2018W313T12812+0100\", \"strict_basic_week_date_time_no_millis\");\n        assertParseException(\"2018W313T12812+01:00\", \"strict_basic_week_date_time_no_millis\");\n        assertSameDate(\"2018-12-31\", \"strict_date\");\n        assertParseException(\"10000-12-31\", \"strict_date\");\n        assertParseException(\"2018-8-31\", \"strict_date\");\n        assertSameDate(\"2018-12-31T12\", \"strict_date_hour\");\n        assertParseException(\"2018-12-31T8\", \"strict_date_hour\");\n        assertSameDate(\"2018-12-31T12:12\", \"strict_date_hour_minute\");\n        assertParseException(\"2018-12-31T8:3\", \"strict_date_hour_minute\");\n        assertSameDate(\"2018-12-31T12:12:12\", \"strict_date_hour_minute_second\");\n        assertParseException(\"2018-12-31T12:12:1\", \"strict_date_hour_minute_second\");\n        assertSameDate(\"2018-12-31T12:12:12.123\", \"strict_date_hour_minute_second_fraction\");\n        assertSameDate(\"2018-12-31T12:12:12.123\", \"strict_date_hour_minute_second_millis\");\n        assertSameDate(\"2018-12-31T12:12:12.1\", \"strict_date_hour_minute_second_millis\");\n        assertSameDate(\"2018-12-31T12:12:12.1\", \"strict_date_hour_minute_second_fraction\");\n        assertParseException(\"2018-12-31T12:12:12\", \"strict_date_hour_minute_second_millis\");\n        assertParseException(\"2018-12-31T12:12:12\", \"strict_date_hour_minute_second_fraction\");\n        assertSameDate(\"2018-12-31\", \"strict_date_optional_time\");\n        assertParseException(\"2018-12-1\", \"strict_date_optional_time\");\n        assertParseException(\"2018-1-31\", \"strict_date_optional_time\");\n        assertParseException(\"10000-01-31\", \"strict_date_optional_time\");\n        assertSameDate(\"2010-01-05T02:00\", \"strict_date_optional_time\");\n        assertSameDate(\"2018-12-31T10:15:30\", \"strict_date_optional_time\");\n        assertSameDate(\"2018-12-31T10:15:30Z\", \"strict_date_optional_time\");\n        assertSameDate(\"2018-12-31T10:15:30+0100\", \"strict_date_optional_time\");\n        assertSameDate(\"2018-12-31T10:15:30+01:00\", \"strict_date_optional_time\");\n        assertParseException(\"2018-12-31T10:15:3\", \"strict_date_optional_time\");\n        assertParseException(\"2018-12-31T10:5:30\", \"strict_date_optional_time\");\n        assertParseException(\"2018-12-31T9:15:30\", \"strict_date_optional_time\");\n        assertSameDate(\"2015-01-04T00:00Z\", \"strict_date_optional_time\");\n        assertSameDate(\"2018-12-31T10:15:30.123Z\", \"strict_date_time\");\n        assertSameDate(\"2018-12-31T10:15:30.123+0100\", \"strict_date_time\");\n        assertSameDate(\"2018-12-31T10:15:30.123+01:00\", \"strict_date_time\");\n        assertSameDate(\"2018-12-31T10:15:30.11Z\", \"strict_date_time\");\n        assertSameDate(\"2018-12-31T10:15:30.11+0100\", \"strict_date_time\");\n        assertSameDate(\"2018-12-31T10:15:30.11+01:00\", \"strict_date_time\");\n        assertParseException(\"2018-12-31T10:15:3.123Z\", \"strict_date_time\");\n        assertParseException(\"2018-12-31T10:5:30.123Z\", \"strict_date_time\");\n        assertParseException(\"2018-12-31T1:15:30.123Z\", \"strict_date_time\");\n        assertSameDate(\"2018-12-31T10:15:30Z\", \"strict_date_time_no_millis\");\n        assertSameDate(\"2018-12-31T10:15:30+0100\", \"strict_date_time_no_millis\");\n        assertSameDate(\"2018-12-31T10:15:30+01:00\", \"strict_date_time_no_millis\");\n        assertParseException(\"2018-12-31T10:5:30Z\", \"strict_date_time_no_millis\");\n        assertParseException(\"2018-12-31T10:15:3Z\", \"strict_date_time_no_millis\");\n        assertParseException(\"2018-12-31T1:15:30Z\", \"strict_date_time_no_millis\");\n        assertSameDate(\"12\", \"strict_hour\");\n        assertSameDate(\"01\", \"strict_hour\");\n        assertParseException(\"1\", \"strict_hour\");\n        assertSameDate(\"12:12\", \"strict_hour_minute\");\n        assertSameDate(\"12:01\", \"strict_hour_minute\");\n        assertParseException(\"12:1\", \"strict_hour_minute\");\n        assertSameDate(\"12:12:12\", \"strict_hour_minute_second\");\n        assertSameDate(\"12:12:01\", \"strict_hour_minute_second\");\n        assertParseException(\"12:12:1\", \"strict_hour_minute_second\");\n        assertSameDate(\"12:12:12.123\", \"strict_hour_minute_second_fraction\");\n        assertSameDate(\"12:12:12.1\", \"strict_hour_minute_second_fraction\");\n        assertParseException(\"12:12:12\", \"strict_hour_minute_second_fraction\");\n        assertSameDate(\"12:12:12.123\", \"strict_hour_minute_second_millis\");\n        assertSameDate(\"12:12:12.1\", \"strict_hour_minute_second_millis\");\n        assertParseException(\"12:12:12\", \"strict_hour_minute_second_millis\");\n        assertSameDate(\"2018-128\", \"strict_ordinal_date\");\n        assertParseException(\"2018-1\", \"strict_ordinal_date\");\n\n        assertSameDate(\"2018-128T10:15:30.123Z\", \"strict_ordinal_date_time\");\n        assertSameDate(\"2018-128T10:15:30.123+0100\", \"strict_ordinal_date_time\");\n        assertSameDate(\"2018-128T10:15:30.123+01:00\", \"strict_ordinal_date_time\");\n        assertParseException(\"2018-1T10:15:30.123Z\", \"strict_ordinal_date_time\");\n\n        assertSameDate(\"2018-128T10:15:30Z\", \"strict_ordinal_date_time_no_millis\");\n        assertSameDate(\"2018-128T10:15:30+0100\", \"strict_ordinal_date_time_no_millis\");\n        assertSameDate(\"2018-128T10:15:30+01:00\", \"strict_ordinal_date_time_no_millis\");\n        assertParseException(\"2018-1T10:15:30Z\", \"strict_ordinal_date_time_no_millis\");\n\n        assertSameDate(\"10:15:30.123Z\", \"strict_time\");\n        assertSameDate(\"10:15:30.123+0100\", \"strict_time\");\n        assertSameDate(\"10:15:30.123+01:00\", \"strict_time\");\n        assertParseException(\"1:15:30.123Z\", \"strict_time\");\n        assertParseException(\"10:1:30.123Z\", \"strict_time\");\n        assertParseException(\"10:15:3.123Z\", \"strict_time\");\n        assertParseException(\"10:15:3.1\", \"strict_time\");\n        assertParseException(\"10:15:3Z\", \"strict_time\");\n\n        assertSameDate(\"10:15:30Z\", \"strict_time_no_millis\");\n        assertSameDate(\"10:15:30+0100\", \"strict_time_no_millis\");\n        assertSameDate(\"10:15:30+01:00\", \"strict_time_no_millis\");\n        assertSameDate(\"01:15:30Z\", \"strict_time_no_millis\");\n        assertSameDate(\"01:15:30+0100\", \"strict_time_no_millis\");\n        assertSameDate(\"01:15:30+01:00\", \"strict_time_no_millis\");\n        assertParseException(\"1:15:30Z\", \"strict_time_no_millis\");\n        assertParseException(\"10:5:30Z\", \"strict_time_no_millis\");\n        assertParseException(\"10:15:3Z\", \"strict_time_no_millis\");\n        assertParseException(\"10:15:3\", \"strict_time_no_millis\");\n\n        assertSameDate(\"T10:15:30.123Z\", \"strict_t_time\");\n        assertSameDate(\"T10:15:30.123+0100\", \"strict_t_time\");\n        assertSameDate(\"T10:15:30.123+01:00\", \"strict_t_time\");\n        assertParseException(\"T1:15:30.123Z\", \"strict_t_time\");\n        assertParseException(\"T10:1:30.123Z\", \"strict_t_time\");\n        assertParseException(\"T10:15:3.123Z\", \"strict_t_time\");\n        assertParseException(\"T10:15:3.1\", \"strict_t_time\");\n        assertParseException(\"T10:15:3Z\", \"strict_t_time\");\n\n        assertSameDate(\"T10:15:30Z\", \"strict_t_time_no_millis\");\n        assertSameDate(\"T10:15:30+0100\", \"strict_t_time_no_millis\");\n        assertSameDate(\"T10:15:30+01:00\", \"strict_t_time_no_millis\");\n        assertParseException(\"T1:15:30Z\", \"strict_t_time_no_millis\");\n        assertParseException(\"T10:1:30Z\", \"strict_t_time_no_millis\");\n        assertParseException(\"T10:15:3Z\", \"strict_t_time_no_millis\");\n        assertParseException(\"T10:15:3\", \"strict_t_time_no_millis\");\n\n        assertSameDate(\"2012-W48-6\", \"strict_week_date\");\n        assertSameDate(\"2012-W01-6\", \"strict_week_date\");\n        assertParseException(\"2012-W1-6\", \"strict_week_date\");\n        assertParseException(\"2012-W1-8\", \"strict_week_date\");\n\n        assertSameDate(\"2012-W48-6\", \"strict_week_date\");\n        assertSameDate(\"2012-W01-6\", \"strict_week_date\");\n        assertParseException(\"2012-W1-6\", \"strict_week_date\");\n        \r\n        assertJodaParseException(\"2012-W01-8\", \"strict_week_date\",\n            \"Cannot parse \\\"2012-W01-8\\\": Value 8 for dayOfWeek must be in the range [1,7]\");\n        assertJavaTimeParseException(\"2012-W01-8\", \"strict_week_date\");\n\n        assertSameDate(\"2012-W48-6T10:15:30.123Z\", \"strict_week_date_time\");\n        assertSameDate(\"2012-W48-6T10:15:30.123+0100\", \"strict_week_date_time\");\n        assertSameDate(\"2012-W48-6T10:15:30.123+01:00\", \"strict_week_date_time\");\n        assertParseException(\"2012-W1-6T10:15:30.123Z\", \"strict_week_date_time\");\n\n        assertSameDate(\"2012-W48-6T10:15:30Z\", \"strict_week_date_time_no_millis\");\n        assertSameDate(\"2012-W48-6T10:15:30+0100\", \"strict_week_date_time_no_millis\");\n        assertSameDate(\"2012-W48-6T10:15:30+01:00\", \"strict_week_date_time_no_millis\");\n        assertParseException(\"2012-W1-6T10:15:30Z\", \"strict_week_date_time_no_millis\");\n\n        assertSameDate(\"2012\", \"strict_year\");\n        assertParseException(\"1\", \"strict_year\");\n        assertSameDate(\"-2000\", \"strict_year\");\n\n        assertSameDate(\"2012-12\", \"strict_year_month\");\n        assertParseException(\"1-1\", \"strict_year_month\");\n\n        assertSameDate(\"2012-12-31\", \"strict_year_month_day\");\n        assertParseException(\"1-12-31\", \"strict_year_month_day\");\n        assertParseException(\"2012-1-31\", \"strict_year_month_day\");\n        assertParseException(\"2012-12-1\", \"strict_year_month_day\");\n\n        assertSameDate(\"2018\", \"strict_weekyear\");\n        assertParseException(\"1\", \"strict_weekyear\");\n\n        assertSameDate(\"2018\", \"strict_weekyear\");\n        assertSameDate(\"2017\", \"strict_weekyear\");\n        assertParseException(\"1\", \"strict_weekyear\");\n\n        assertSameDate(\"2018-W29\", \"strict_weekyear_week\");\n        assertSameDate(\"2018-W01\", \"strict_weekyear_week\");\n        assertParseException(\"2018-W1\", \"strict_weekyear_week\");\n\n        assertSameDate(\"2012-W31-5\", \"strict_weekyear_week_day\");\n        assertParseException(\"2012-W1-1\", \"strict_weekyear_week_day\");\n    }\n","realPath":"server/src/test/java/org/elasticsearch/common/joda/JavaJodaTimeDuellingTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":342,"status":"M"}],"commitId":"9ec4abc31eeaf7f60a4ff3597addcb154b07a42e","commitMessage":"@@@Ensure date parsing BWC compatibility (#37929)\n\nIn order to retain BWC this changes the java date formatters to be able to\nparse nanoseconds resolution.  even if only milliseconds are supported.\nThis used to work on joda time as well so that a user could store a date\nlike `2018-10-03T14:42:44.613469+0000` and then just loose the precision\non anything lower than millisecond level.","date":"2019-01-30 17:47:12","modifiedFileCount":"2","status":"M","submitter":"Alexander Reelsen"},{"authorTime":"2019-04-02 16:26:54","codes":[{"authorDate":"2019-04-02 16:26:54","commitOrder":12,"curCode":"    public void testDuellingFormatsValidParsing() {\n        assertSameDate(\"1522332219\", \"epoch_second\");\n        assertSameDate(\"0\", \"epoch_second\");\n        assertSameDate(\"1\", \"epoch_second\");\n        assertSameDate(\"1522332219321\", \"epoch_millis\");\n        assertSameDate(\"0\", \"epoch_millis\");\n        assertSameDate(\"1\", \"epoch_millis\");\n\n        assertSameDate(\"20181126\", \"basic_date\");\n        assertSameDate(\"20181126T121212.123Z\", \"basic_date_time\");\n        assertSameDate(\"20181126T121212.123+10:00\", \"basic_date_time\");\n        assertSameDate(\"20181126T121212.123-0800\", \"basic_date_time\");\n\n        assertSameDate(\"20181126T121212Z\", \"basic_date_time_no_millis\");\n        assertSameDate(\"20181126T121212+01:00\", \"basic_date_time_no_millis\");\n        assertSameDate(\"20181126T121212+0100\", \"basic_date_time_no_millis\");\n        assertSameDate(\"2018363\", \"basic_ordinal_date\");\n        assertSameDate(\"2018363T121212.1Z\", \"basic_ordinal_date_time\");\n        assertSameDate(\"2018363T121212.123Z\", \"basic_ordinal_date_time\");\n        assertSameDate(\"2018363T121212.123456789Z\", \"basic_ordinal_date_time\");\n        assertSameDate(\"2018363T121212.123+0100\", \"basic_ordinal_date_time\");\n        assertSameDate(\"2018363T121212.123+01:00\", \"basic_ordinal_date_time\");\n        assertSameDate(\"2018363T121212Z\", \"basic_ordinal_date_time_no_millis\");\n        assertSameDate(\"2018363T121212+0100\", \"basic_ordinal_date_time_no_millis\");\n        assertSameDate(\"2018363T121212+01:00\", \"basic_ordinal_date_time_no_millis\");\n        assertSameDate(\"121212.1Z\", \"basic_time\");\n        assertSameDate(\"121212.123Z\", \"basic_time\");\n        assertSameDate(\"121212.123456789Z\", \"basic_time\");\n        assertSameDate(\"121212.1+0100\", \"basic_time\");\n        assertSameDate(\"121212.123+0100\", \"basic_time\");\n        assertSameDate(\"121212.123+01:00\", \"basic_time\");\n        assertSameDate(\"121212Z\", \"basic_time_no_millis\");\n        assertSameDate(\"121212+0100\", \"basic_time_no_millis\");\n        assertSameDate(\"121212+01:00\", \"basic_time_no_millis\");\n        assertSameDate(\"T121212.1Z\", \"basic_t_time\");\n        assertSameDate(\"T121212.123Z\", \"basic_t_time\");\n        assertSameDate(\"T121212.123456789Z\", \"basic_t_time\");\n        assertSameDate(\"T121212.1+0100\", \"basic_t_time\");\n        assertSameDate(\"T121212.123+0100\", \"basic_t_time\");\n        assertSameDate(\"T121212.123+01:00\", \"basic_t_time\");\n        assertSameDate(\"T121212Z\", \"basic_t_time_no_millis\");\n        assertSameDate(\"T121212+0100\", \"basic_t_time_no_millis\");\n        assertSameDate(\"T121212+01:00\", \"basic_t_time_no_millis\");\n        assertSameDate(\"2018W313\", \"basic_week_date\");\n        assertSameDate(\"1W313\", \"basic_week_date\");\n        assertSameDate(\"18W313\", \"basic_week_date\");\n        assertSameDate(\"2018W313T121212.1Z\", \"basic_week_date_time\");\n        assertSameDate(\"2018W313T121212.123Z\", \"basic_week_date_time\");\n        assertSameDate(\"2018W313T121212.123456789Z\", \"basic_week_date_time\");\n        assertSameDate(\"2018W313T121212.123+0100\", \"basic_week_date_time\");\n        assertSameDate(\"2018W313T121212.123+01:00\", \"basic_week_date_time\");\n        assertSameDate(\"2018W313T121212Z\", \"basic_week_date_time_no_millis\");\n        assertSameDate(\"2018W313T121212+0100\", \"basic_week_date_time_no_millis\");\n        assertSameDate(\"2018W313T121212+01:00\", \"basic_week_date_time_no_millis\");\n\n        assertSameDate(\"2018-12-31\", \"date\");\n        assertSameDate(\"18-5-6\", \"date\");\n        assertSameDate(\"10000-5-6\", \"date\");\n\n        assertSameDate(\"2018-12-31T12\", \"date_hour\");\n        assertSameDate(\"2018-12-31T8\", \"date_hour\");\n\n        assertSameDate(\"2018-12-31T12:12\", \"date_hour_minute\");\n        assertSameDate(\"2018-12-31T8:3\", \"date_hour_minute\");\n\n        assertSameDate(\"2018-12-31T12:12:12\", \"date_hour_minute_second\");\n        assertSameDate(\"2018-12-31T12:12:1\", \"date_hour_minute_second\");\n\n        assertSameDate(\"2018-12-31T12:12:12.1\", \"date_hour_minute_second_fraction\");\n        assertSameDate(\"2018-12-31T12:12:12.123\", \"date_hour_minute_second_fraction\");\n        assertSameDate(\"2018-12-31T12:12:12.123456789\", \"date_hour_minute_second_fraction\");\n        assertSameDate(\"2018-12-31T12:12:12.1\", \"date_hour_minute_second_millis\");\n        assertSameDate(\"2018-12-31T12:12:12.123\", \"date_hour_minute_second_millis\");\n        assertParseException(\"2018-12-31T12:12:12.123456789\", \"date_hour_minute_second_millis\");\n        assertSameDate(\"2018-12-31T12:12:12.1\", \"date_hour_minute_second_millis\");\n        assertSameDate(\"2018-12-31T12:12:12.1\", \"date_hour_minute_second_fraction\");\n\n        assertSameDate(\"2018-05\", \"date_optional_time\");\n        assertSameDate(\"2018-05-30\", \"date_optional_time\");\n        assertSameDate(\"2018-05-30T20\", \"date_optional_time\");\n        assertSameDate(\"2018-05-30T20:21\", \"date_optional_time\");\n        assertSameDate(\"2018-05-30T20:21:23\", \"date_optional_time\");\n        assertSameDate(\"2018-05-30T20:21:23.1\", \"date_optional_time\");\n        assertSameDate(\"2018-05-30T20:21:23.123\", \"date_optional_time\");\n        assertSameDate(\"2018-05-30T20:21:23.123456789\", \"date_optional_time\");\n        assertSameDate(\"2018-05-30T20:21:23.123Z\", \"date_optional_time\");\n        assertSameDate(\"2018-05-30T20:21:23.123456789Z\", \"date_optional_time\");\n        assertSameDate(\"2018-05-30T20:21:23.1+0100\", \"date_optional_time\");\n        assertSameDate(\"2018-05-30T20:21:23.123+0100\", \"date_optional_time\");\n        assertSameDate(\"2018-05-30T20:21:23.1+01:00\", \"date_optional_time\");\n        assertSameDate(\"2018-05-30T20:21:23.123+01:00\", \"date_optional_time\");\n        assertSameDate(\"2018-12-1\", \"date_optional_time\");\n        assertSameDate(\"2018-12-31T10:15:30\", \"date_optional_time\");\n        assertSameDate(\"2018-12-31T10:15:3\", \"date_optional_time\");\n        assertSameDate(\"2018-12-31T10:5:30\", \"date_optional_time\");\n        assertSameDate(\"2018-12-31T1:15:30\", \"date_optional_time\");\n\n        assertSameDate(\"2018-12-31T10:15:30.1Z\", \"date_time\");\n        assertSameDate(\"2018-12-31T10:15:30.123Z\", \"date_time\");\n        assertSameDate(\"2018-12-31T10:15:30.123456789Z\", \"date_time\");\n        assertSameDate(\"2018-12-31T10:15:30.1+0100\", \"date_time\");\n        assertSameDate(\"2018-12-31T10:15:30.123+0100\", \"date_time\");\n        assertSameDate(\"2018-12-31T10:15:30.123+01:00\", \"date_time\");\n        assertSameDate(\"2018-12-31T10:15:30.1+01:00\", \"date_time\");\n        assertSameDate(\"2018-12-31T10:15:30.11Z\", \"date_time\");\n        assertSameDate(\"2018-12-31T10:15:30.11+0100\", \"date_time\");\n        assertSameDate(\"2018-12-31T10:15:30.11+01:00\", \"date_time\");\n        assertSameDate(\"2018-12-31T10:15:3.1Z\", \"date_time\");\n        assertSameDate(\"2018-12-31T10:15:3.123Z\", \"date_time\");\n        assertSameDate(\"2018-12-31T10:15:3.123456789Z\", \"date_time\");\n        assertSameDate(\"2018-12-31T10:15:3.1+0100\", \"date_time\");\n        assertSameDate(\"2018-12-31T10:15:3.123+0100\", \"date_time\");\n        assertSameDate(\"2018-12-31T10:15:3.123+01:00\", \"date_time\");\n        assertSameDate(\"2018-12-31T10:15:3.1+01:00\", \"date_time\");\n\n        assertSameDate(\"2018-12-31T10:15:30Z\", \"date_time_no_millis\");\n        assertSameDate(\"2018-12-31T10:15:30+0100\", \"date_time_no_millis\");\n        assertSameDate(\"2018-12-31T10:15:30+01:00\", \"date_time_no_millis\");\n        assertSameDate(\"2018-12-31T10:5:30Z\", \"date_time_no_millis\");\n        assertSameDate(\"2018-12-31T10:5:30+0100\", \"date_time_no_millis\");\n        assertSameDate(\"2018-12-31T10:5:30+01:00\", \"date_time_no_millis\");\n        assertSameDate(\"2018-12-31T10:15:3Z\", \"date_time_no_millis\");\n        assertSameDate(\"2018-12-31T10:15:3+0100\", \"date_time_no_millis\");\n        assertSameDate(\"2018-12-31T10:15:3+01:00\", \"date_time_no_millis\");\n        assertSameDate(\"2018-12-31T1:15:30Z\", \"date_time_no_millis\");\n        assertSameDate(\"2018-12-31T1:15:30+0100\", \"date_time_no_millis\");\n        assertSameDate(\"2018-12-31T1:15:30+01:00\", \"date_time_no_millis\");\n\n        assertSameDate(\"12\", \"hour\");\n        assertSameDate(\"01\", \"hour\");\n        assertSameDate(\"1\", \"hour\");\n\n        assertSameDate(\"12:12\", \"hour_minute\");\n        assertSameDate(\"12:01\", \"hour_minute\");\n        assertSameDate(\"12:1\", \"hour_minute\");\n\n        assertSameDate(\"12:12:12\", \"hour_minute_second\");\n        assertSameDate(\"12:12:01\", \"hour_minute_second\");\n        assertSameDate(\"12:12:1\", \"hour_minute_second\");\n\n        assertSameDate(\"12:12:12.123\", \"hour_minute_second_fraction\");\n        assertSameDate(\"12:12:12.123456789\", \"hour_minute_second_fraction\");\n        assertSameDate(\"12:12:12.1\", \"hour_minute_second_fraction\");\n        assertParseException(\"12:12:12\", \"hour_minute_second_fraction\");\n        assertSameDate(\"12:12:12.123\", \"hour_minute_second_millis\");\n        assertParseException(\"12:12:12.123456789\", \"hour_minute_second_millis\");\n        assertSameDate(\"12:12:12.1\", \"hour_minute_second_millis\");\n        assertParseException(\"12:12:12\", \"hour_minute_second_millis\");\n\n        assertSameDate(\"2018-128\", \"ordinal_date\");\n        assertSameDate(\"2018-1\", \"ordinal_date\");\n\n        assertSameDate(\"2018-128T10:15:30.1Z\", \"ordinal_date_time\");\n        assertSameDate(\"2018-128T10:15:30.123Z\", \"ordinal_date_time\");\n        assertSameDate(\"2018-128T10:15:30.123456789Z\", \"ordinal_date_time\");\n        assertSameDate(\"2018-128T10:15:30.123+0100\", \"ordinal_date_time\");\n        assertSameDate(\"2018-128T10:15:30.123+01:00\", \"ordinal_date_time\");\n        assertSameDate(\"2018-1T10:15:30.1Z\", \"ordinal_date_time\");\n        assertSameDate(\"2018-1T10:15:30.123Z\", \"ordinal_date_time\");\n        assertSameDate(\"2018-1T10:15:30.123456789Z\", \"ordinal_date_time\");\n        assertSameDate(\"2018-1T10:15:30.123+0100\", \"ordinal_date_time\");\n        assertSameDate(\"2018-1T10:15:30.123+01:00\", \"ordinal_date_time\");\n\n        assertSameDate(\"2018-128T10:15:30Z\", \"ordinal_date_time_no_millis\");\n        assertSameDate(\"2018-128T10:15:30+0100\", \"ordinal_date_time_no_millis\");\n        assertSameDate(\"2018-128T10:15:30+01:00\", \"ordinal_date_time_no_millis\");\n        assertSameDate(\"2018-1T10:15:30Z\", \"ordinal_date_time_no_millis\");\n        assertSameDate(\"2018-1T10:15:30+0100\", \"ordinal_date_time_no_millis\");\n        assertSameDate(\"2018-1T10:15:30+01:00\", \"ordinal_date_time_no_millis\");\n\n        assertSameDate(\"10:15:30.1Z\", \"time\");\n        assertSameDate(\"10:15:30.123Z\", \"time\");\n        assertSameDate(\"10:15:30.123456789Z\", \"time\");\n        assertSameDate(\"10:15:30.123+0100\", \"time\");\n        assertSameDate(\"10:15:30.123+01:00\", \"time\");\n        assertSameDate(\"1:15:30.1Z\", \"time\");\n        assertSameDate(\"1:15:30.123Z\", \"time\");\n        assertSameDate(\"1:15:30.123+0100\", \"time\");\n        assertSameDate(\"1:15:30.123+01:00\", \"time\");\n        assertSameDate(\"10:1:30.1Z\", \"time\");\n        assertSameDate(\"10:1:30.123Z\", \"time\");\n        assertSameDate(\"10:1:30.123+0100\", \"time\");\n        assertSameDate(\"10:1:30.123+01:00\", \"time\");\n        assertSameDate(\"10:15:3.1Z\", \"time\");\n        assertSameDate(\"10:15:3.123Z\", \"time\");\n        assertSameDate(\"10:15:3.123+0100\", \"time\");\n        assertSameDate(\"10:15:3.123+01:00\", \"time\");\n        assertParseException(\"10:15:3.1\", \"time\");\n        assertParseException(\"10:15:3Z\", \"time\");\n\n        assertSameDate(\"10:15:30Z\", \"time_no_millis\");\n        assertSameDate(\"10:15:30+0100\", \"time_no_millis\");\n        assertSameDate(\"10:15:30+01:00\", \"time_no_millis\");\n        assertSameDate(\"01:15:30Z\", \"time_no_millis\");\n        assertSameDate(\"01:15:30+0100\", \"time_no_millis\");\n        assertSameDate(\"01:15:30+01:00\", \"time_no_millis\");\n        assertSameDate(\"1:15:30Z\", \"time_no_millis\");\n        assertSameDate(\"1:15:30+0100\", \"time_no_millis\");\n        assertSameDate(\"1:15:30+01:00\", \"time_no_millis\");\n        assertSameDate(\"10:5:30Z\", \"time_no_millis\");\n        assertSameDate(\"10:5:30+0100\", \"time_no_millis\");\n        assertSameDate(\"10:5:30+01:00\", \"time_no_millis\");\n        assertSameDate(\"10:15:3Z\", \"time_no_millis\");\n        assertSameDate(\"10:15:3+0100\", \"time_no_millis\");\n        assertSameDate(\"10:15:3+01:00\", \"time_no_millis\");\n        assertParseException(\"10:15:3\", \"time_no_millis\");\n\n        assertSameDate(\"T10:15:30.1Z\", \"t_time\");\n        assertSameDate(\"T10:15:30.123Z\", \"t_time\");\n        assertSameDate(\"T10:15:30.123456789Z\", \"t_time\");\n        assertSameDate(\"T10:15:30.1+0100\", \"t_time\");\n        assertSameDate(\"T10:15:30.123+0100\", \"t_time\");\n        assertSameDate(\"T10:15:30.123+01:00\", \"t_time\");\n        assertSameDate(\"T10:15:30.1+01:00\", \"t_time\");\n        assertSameDate(\"T1:15:30.123Z\", \"t_time\");\n        assertSameDate(\"T1:15:30.123+0100\", \"t_time\");\n        assertSameDate(\"T1:15:30.123+01:00\", \"t_time\");\n        assertSameDate(\"T10:1:30.123Z\", \"t_time\");\n        assertSameDate(\"T10:1:30.123+0100\", \"t_time\");\n        assertSameDate(\"T10:1:30.123+01:00\", \"t_time\");\n        assertSameDate(\"T10:15:3.123Z\", \"t_time\");\n        assertSameDate(\"T10:15:3.123+0100\", \"t_time\");\n        assertSameDate(\"T10:15:3.123+01:00\", \"t_time\");\n        assertParseException(\"T10:15:3.1\", \"t_time\");\n        assertParseException(\"T10:15:3Z\", \"t_time\");\n\n        assertSameDate(\"T10:15:30Z\", \"t_time_no_millis\");\n        assertSameDate(\"T10:15:30+0100\", \"t_time_no_millis\");\n        assertSameDate(\"T10:15:30+01:00\", \"t_time_no_millis\");\n        assertSameDate(\"T1:15:30Z\", \"t_time_no_millis\");\n        assertSameDate(\"T1:15:30+0100\", \"t_time_no_millis\");\n        assertSameDate(\"T1:15:30+01:00\", \"t_time_no_millis\");\n        assertSameDate(\"T10:1:30Z\", \"t_time_no_millis\");\n        assertSameDate(\"T10:1:30+0100\", \"t_time_no_millis\");\n        assertSameDate(\"T10:1:30+01:00\", \"t_time_no_millis\");\n        assertSameDate(\"T10:15:3Z\", \"t_time_no_millis\");\n        assertSameDate(\"T10:15:3+0100\", \"t_time_no_millis\");\n        assertSameDate(\"T10:15:3+01:00\", \"t_time_no_millis\");\n        assertParseException(\"T10:15:3\", \"t_time_no_millis\");\n\n        assertSameDate(\"2012-W48-6\", \"week_date\");\n        assertSameDate(\"2012-W01-6\", \"week_date\");\n        assertSameDate(\"2012-W1-6\", \"week_date\");\n        \r\n        assertJodaParseException(\"2012-W1-8\", \"week_date\",\n            \"Cannot parse \\\"2012-W1-8\\\": Value 8 for dayOfWeek must be in the range [1,7]\");\n        assertJavaTimeParseException(\"2012-W1-8\", \"week_date\");\n\n        assertSameDate(\"2012-W48-6T10:15:30.1Z\", \"week_date_time\");\n        assertSameDate(\"2012-W48-6T10:15:30.123Z\", \"week_date_time\");\n        assertSameDate(\"2012-W48-6T10:15:30.123456789Z\", \"week_date_time\");\n        assertSameDate(\"2012-W48-6T10:15:30.1+0100\", \"week_date_time\");\n        assertSameDate(\"2012-W48-6T10:15:30.123+0100\", \"week_date_time\");\n        assertSameDate(\"2012-W48-6T10:15:30.1+01:00\", \"week_date_time\");\n        assertSameDate(\"2012-W48-6T10:15:30.123+01:00\", \"week_date_time\");\n        assertSameDate(\"2012-W1-6T10:15:30.1Z\", \"week_date_time\");\n        assertSameDate(\"2012-W1-6T10:15:30.123Z\", \"week_date_time\");\n        assertSameDate(\"2012-W1-6T10:15:30.1+0100\", \"week_date_time\");\n        assertSameDate(\"2012-W1-6T10:15:30.123+0100\", \"week_date_time\");\n        assertSameDate(\"2012-W1-6T10:15:30.1+01:00\", \"week_date_time\");\n        assertSameDate(\"2012-W1-6T10:15:30.123+01:00\", \"week_date_time\");\n\n        assertSameDate(\"2012-W48-6T10:15:30Z\", \"week_date_time_no_millis\");\n        assertSameDate(\"2012-W48-6T10:15:30+0100\", \"week_date_time_no_millis\");\n        assertSameDate(\"2012-W48-6T10:15:30+01:00\", \"week_date_time_no_millis\");\n        assertSameDate(\"2012-W1-6T10:15:30Z\", \"week_date_time_no_millis\");\n        assertSameDate(\"2012-W1-6T10:15:30+0100\", \"week_date_time_no_millis\");\n        assertSameDate(\"2012-W1-6T10:15:30+01:00\", \"week_date_time_no_millis\");\n\n        assertSameDate(\"2012\", \"year\");\n        assertSameDate(\"1\", \"year\");\n        assertSameDate(\"-2000\", \"year\");\n\n        assertSameDate(\"2012-12\", \"yearMonth\");\n        assertSameDate(\"1-1\", \"yearMonth\");\n\n        assertSameDate(\"2012-12-31\", \"yearMonthDay\");\n        assertSameDate(\"1-12-31\", \"yearMonthDay\");\n        assertSameDate(\"2012-1-31\", \"yearMonthDay\");\n        assertSameDate(\"2012-12-1\", \"yearMonthDay\");\n\n        assertSameDate(\"2018\", \"week_year\");\n        assertSameDate(\"1\", \"week_year\");\n        assertSameDate(\"2017\", \"week_year\");\n\n        assertSameDate(\"2018-W29\", \"weekyear_week\");\n        assertSameDate(\"2018-W1\", \"weekyear_week\");\n\n        assertSameDate(\"2012-W31-5\", \"weekyear_week_day\");\n        assertSameDate(\"2012-W1-1\", \"weekyear_week_day\");\n    }\n","date":"2019-04-02 16:26:54","endLine":376,"groupId":"65382","id":23,"instanceNumber":1,"isCurCommit":0,"methodName":"testDuellingFormatsValidParsing","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/c3/a541fe87ec2e42bf47d0f440013c5534ba476c.src","preCode":"    public void testDuellingFormatsValidParsing() {\n        assertSameDate(\"1522332219\", \"epoch_second\");\n        assertSameDate(\"0\", \"epoch_second\");\n        assertSameDate(\"1\", \"epoch_second\");\n        assertSameDate(\"1522332219321\", \"epoch_millis\");\n        assertSameDate(\"0\", \"epoch_millis\");\n        assertSameDate(\"1\", \"epoch_millis\");\n\n        assertSameDate(\"20181126\", \"basic_date\");\n        assertSameDate(\"20181126T121212.123Z\", \"basic_date_time\");\n        assertSameDate(\"20181126T121212.123+10:00\", \"basic_date_time\");\n        assertSameDate(\"20181126T121212.123-0800\", \"basic_date_time\");\n\n        assertSameDate(\"20181126T121212Z\", \"basic_date_time_no_millis\");\n        assertSameDate(\"20181126T121212+01:00\", \"basic_date_time_no_millis\");\n        assertSameDate(\"20181126T121212+0100\", \"basic_date_time_no_millis\");\n        assertSameDate(\"2018363\", \"basic_ordinal_date\");\n        assertSameDate(\"2018363T121212.123Z\", \"basic_ordinal_date_time\");\n        assertSameDate(\"2018363T121212.123456789Z\", \"basic_ordinal_date_time\");\n        assertSameDate(\"2018363T121212.123+0100\", \"basic_ordinal_date_time\");\n        assertSameDate(\"2018363T121212.123+01:00\", \"basic_ordinal_date_time\");\n        assertSameDate(\"2018363T121212Z\", \"basic_ordinal_date_time_no_millis\");\n        assertSameDate(\"2018363T121212+0100\", \"basic_ordinal_date_time_no_millis\");\n        assertSameDate(\"2018363T121212+01:00\", \"basic_ordinal_date_time_no_millis\");\n        assertSameDate(\"121212.123Z\", \"basic_time\");\n        assertSameDate(\"121212.123456789Z\", \"basic_time\");\n        assertSameDate(\"121212.123+0100\", \"basic_time\");\n        assertSameDate(\"121212.123+01:00\", \"basic_time\");\n        assertSameDate(\"121212Z\", \"basic_time_no_millis\");\n        assertSameDate(\"121212+0100\", \"basic_time_no_millis\");\n        assertSameDate(\"121212+01:00\", \"basic_time_no_millis\");\n        assertSameDate(\"T121212.123Z\", \"basic_t_time\");\n        assertSameDate(\"T121212.123456789Z\", \"basic_t_time\");\n        assertSameDate(\"T121212.123+0100\", \"basic_t_time\");\n        assertSameDate(\"T121212.123+01:00\", \"basic_t_time\");\n        assertSameDate(\"T121212Z\", \"basic_t_time_no_millis\");\n        assertSameDate(\"T121212+0100\", \"basic_t_time_no_millis\");\n        assertSameDate(\"T121212+01:00\", \"basic_t_time_no_millis\");\n        assertSameDate(\"2018W313\", \"basic_week_date\");\n        assertSameDate(\"1W313\", \"basic_week_date\");\n        assertSameDate(\"18W313\", \"basic_week_date\");\n        assertSameDate(\"2018W313T121212.123Z\", \"basic_week_date_time\");\n        assertSameDate(\"2018W313T121212.123456789Z\", \"basic_week_date_time\");\n        assertSameDate(\"2018W313T121212.123+0100\", \"basic_week_date_time\");\n        assertSameDate(\"2018W313T121212.123+01:00\", \"basic_week_date_time\");\n        assertSameDate(\"2018W313T121212Z\", \"basic_week_date_time_no_millis\");\n        assertSameDate(\"2018W313T121212+0100\", \"basic_week_date_time_no_millis\");\n        assertSameDate(\"2018W313T121212+01:00\", \"basic_week_date_time_no_millis\");\n\n        assertSameDate(\"2018-12-31\", \"date\");\n        assertSameDate(\"18-5-6\", \"date\");\n        assertSameDate(\"10000-5-6\", \"date\");\n\n        assertSameDate(\"2018-12-31T12\", \"date_hour\");\n        assertSameDate(\"2018-12-31T8\", \"date_hour\");\n\n        assertSameDate(\"2018-12-31T12:12\", \"date_hour_minute\");\n        assertSameDate(\"2018-12-31T8:3\", \"date_hour_minute\");\n\n        assertSameDate(\"2018-12-31T12:12:12\", \"date_hour_minute_second\");\n        assertSameDate(\"2018-12-31T12:12:1\", \"date_hour_minute_second\");\n\n        assertSameDate(\"2018-12-31T12:12:12.123\", \"date_hour_minute_second_fraction\");\n        assertSameDate(\"2018-12-31T12:12:12.123456789\", \"date_hour_minute_second_fraction\");\n        assertSameDate(\"2018-12-31T12:12:12.123\", \"date_hour_minute_second_millis\");\n        assertParseException(\"2018-12-31T12:12:12.123456789\", \"date_hour_minute_second_millis\");\n        assertSameDate(\"2018-12-31T12:12:12.1\", \"date_hour_minute_second_millis\");\n        assertSameDate(\"2018-12-31T12:12:12.1\", \"date_hour_minute_second_fraction\");\n\n        assertSameDate(\"2018-05\", \"date_optional_time\");\n        assertSameDate(\"2018-05-30\", \"date_optional_time\");\n        assertSameDate(\"2018-05-30T20\", \"date_optional_time\");\n        assertSameDate(\"2018-05-30T20:21\", \"date_optional_time\");\n        assertSameDate(\"2018-05-30T20:21:23\", \"date_optional_time\");\n        assertSameDate(\"2018-05-30T20:21:23.123\", \"date_optional_time\");\n        assertSameDate(\"2018-05-30T20:21:23.123456789\", \"date_optional_time\");\n        assertSameDate(\"2018-05-30T20:21:23.123Z\", \"date_optional_time\");\n        assertSameDate(\"2018-05-30T20:21:23.123456789Z\", \"date_optional_time\");\n        assertSameDate(\"2018-05-30T20:21:23.123+0100\", \"date_optional_time\");\n        assertSameDate(\"2018-05-30T20:21:23.123+01:00\", \"date_optional_time\");\n        assertSameDate(\"2018-12-1\", \"date_optional_time\");\n        assertSameDate(\"2018-12-31T10:15:30\", \"date_optional_time\");\n        assertSameDate(\"2018-12-31T10:15:3\", \"date_optional_time\");\n        assertSameDate(\"2018-12-31T10:5:30\", \"date_optional_time\");\n        assertSameDate(\"2018-12-31T1:15:30\", \"date_optional_time\");\n\n        assertSameDate(\"2018-12-31T10:15:30.123Z\", \"date_time\");\n        assertSameDate(\"2018-12-31T10:15:30.123456789Z\", \"date_time\");\n        assertSameDate(\"2018-12-31T10:15:30.123+0100\", \"date_time\");\n        assertSameDate(\"2018-12-31T10:15:30.123+01:00\", \"date_time\");\n        assertSameDate(\"2018-12-31T10:15:30.11Z\", \"date_time\");\n        assertSameDate(\"2018-12-31T10:15:30.11+0100\", \"date_time\");\n        assertSameDate(\"2018-12-31T10:15:30.11+01:00\", \"date_time\");\n        assertSameDate(\"2018-12-31T10:15:3.123Z\", \"date_time\");\n        assertSameDate(\"2018-12-31T10:15:3.123456789Z\", \"date_time\");\n        assertSameDate(\"2018-12-31T10:15:3.123+0100\", \"date_time\");\n        assertSameDate(\"2018-12-31T10:15:3.123+01:00\", \"date_time\");\n\n        assertSameDate(\"2018-12-31T10:15:30Z\", \"date_time_no_millis\");\n        assertSameDate(\"2018-12-31T10:15:30+0100\", \"date_time_no_millis\");\n        assertSameDate(\"2018-12-31T10:15:30+01:00\", \"date_time_no_millis\");\n        assertSameDate(\"2018-12-31T10:5:30Z\", \"date_time_no_millis\");\n        assertSameDate(\"2018-12-31T10:5:30+0100\", \"date_time_no_millis\");\n        assertSameDate(\"2018-12-31T10:5:30+01:00\", \"date_time_no_millis\");\n        assertSameDate(\"2018-12-31T10:15:3Z\", \"date_time_no_millis\");\n        assertSameDate(\"2018-12-31T10:15:3+0100\", \"date_time_no_millis\");\n        assertSameDate(\"2018-12-31T10:15:3+01:00\", \"date_time_no_millis\");\n        assertSameDate(\"2018-12-31T1:15:30Z\", \"date_time_no_millis\");\n        assertSameDate(\"2018-12-31T1:15:30+0100\", \"date_time_no_millis\");\n        assertSameDate(\"2018-12-31T1:15:30+01:00\", \"date_time_no_millis\");\n\n        assertSameDate(\"12\", \"hour\");\n        assertSameDate(\"01\", \"hour\");\n        assertSameDate(\"1\", \"hour\");\n\n        assertSameDate(\"12:12\", \"hour_minute\");\n        assertSameDate(\"12:01\", \"hour_minute\");\n        assertSameDate(\"12:1\", \"hour_minute\");\n\n        assertSameDate(\"12:12:12\", \"hour_minute_second\");\n        assertSameDate(\"12:12:01\", \"hour_minute_second\");\n        assertSameDate(\"12:12:1\", \"hour_minute_second\");\n\n        assertSameDate(\"12:12:12.123\", \"hour_minute_second_fraction\");\n        assertSameDate(\"12:12:12.123456789\", \"hour_minute_second_fraction\");\n        assertSameDate(\"12:12:12.1\", \"hour_minute_second_fraction\");\n        assertParseException(\"12:12:12\", \"hour_minute_second_fraction\");\n        assertSameDate(\"12:12:12.123\", \"hour_minute_second_millis\");\n        assertParseException(\"12:12:12.123456789\", \"hour_minute_second_millis\");\n        assertSameDate(\"12:12:12.1\", \"hour_minute_second_millis\");\n        assertParseException(\"12:12:12\", \"hour_minute_second_millis\");\n\n        assertSameDate(\"2018-128\", \"ordinal_date\");\n        assertSameDate(\"2018-1\", \"ordinal_date\");\n\n        assertSameDate(\"2018-128T10:15:30.123Z\", \"ordinal_date_time\");\n        assertSameDate(\"2018-128T10:15:30.123456789Z\", \"ordinal_date_time\");\n        assertSameDate(\"2018-128T10:15:30.123+0100\", \"ordinal_date_time\");\n        assertSameDate(\"2018-128T10:15:30.123+01:00\", \"ordinal_date_time\");\n        assertSameDate(\"2018-1T10:15:30.123Z\", \"ordinal_date_time\");\n        assertSameDate(\"2018-1T10:15:30.123456789Z\", \"ordinal_date_time\");\n        assertSameDate(\"2018-1T10:15:30.123+0100\", \"ordinal_date_time\");\n        assertSameDate(\"2018-1T10:15:30.123+01:00\", \"ordinal_date_time\");\n\n        assertSameDate(\"2018-128T10:15:30Z\", \"ordinal_date_time_no_millis\");\n        assertSameDate(\"2018-128T10:15:30+0100\", \"ordinal_date_time_no_millis\");\n        assertSameDate(\"2018-128T10:15:30+01:00\", \"ordinal_date_time_no_millis\");\n        assertSameDate(\"2018-1T10:15:30Z\", \"ordinal_date_time_no_millis\");\n        assertSameDate(\"2018-1T10:15:30+0100\", \"ordinal_date_time_no_millis\");\n        assertSameDate(\"2018-1T10:15:30+01:00\", \"ordinal_date_time_no_millis\");\n\n        assertSameDate(\"10:15:30.123Z\", \"time\");\n        assertSameDate(\"10:15:30.123456789Z\", \"time\");\n        assertSameDate(\"10:15:30.123+0100\", \"time\");\n        assertSameDate(\"10:15:30.123+01:00\", \"time\");\n        assertSameDate(\"1:15:30.123Z\", \"time\");\n        assertSameDate(\"1:15:30.123+0100\", \"time\");\n        assertSameDate(\"1:15:30.123+01:00\", \"time\");\n        assertSameDate(\"10:1:30.123Z\", \"time\");\n        assertSameDate(\"10:1:30.123+0100\", \"time\");\n        assertSameDate(\"10:1:30.123+01:00\", \"time\");\n        assertSameDate(\"10:15:3.123Z\", \"time\");\n        assertSameDate(\"10:15:3.123+0100\", \"time\");\n        assertSameDate(\"10:15:3.123+01:00\", \"time\");\n        assertParseException(\"10:15:3.1\", \"time\");\n        assertParseException(\"10:15:3Z\", \"time\");\n\n        assertSameDate(\"10:15:30Z\", \"time_no_millis\");\n        assertSameDate(\"10:15:30+0100\", \"time_no_millis\");\n        assertSameDate(\"10:15:30+01:00\", \"time_no_millis\");\n        assertSameDate(\"01:15:30Z\", \"time_no_millis\");\n        assertSameDate(\"01:15:30+0100\", \"time_no_millis\");\n        assertSameDate(\"01:15:30+01:00\", \"time_no_millis\");\n        assertSameDate(\"1:15:30Z\", \"time_no_millis\");\n        assertSameDate(\"1:15:30+0100\", \"time_no_millis\");\n        assertSameDate(\"1:15:30+01:00\", \"time_no_millis\");\n        assertSameDate(\"10:5:30Z\", \"time_no_millis\");\n        assertSameDate(\"10:5:30+0100\", \"time_no_millis\");\n        assertSameDate(\"10:5:30+01:00\", \"time_no_millis\");\n        assertSameDate(\"10:15:3Z\", \"time_no_millis\");\n        assertSameDate(\"10:15:3+0100\", \"time_no_millis\");\n        assertSameDate(\"10:15:3+01:00\", \"time_no_millis\");\n        assertParseException(\"10:15:3\", \"time_no_millis\");\n\n        assertSameDate(\"T10:15:30.123Z\", \"t_time\");\n        assertSameDate(\"T10:15:30.123456789Z\", \"t_time\");\n        assertSameDate(\"T10:15:30.123+0100\", \"t_time\");\n        assertSameDate(\"T10:15:30.123+01:00\", \"t_time\");\n        assertSameDate(\"T1:15:30.123Z\", \"t_time\");\n        assertSameDate(\"T1:15:30.123+0100\", \"t_time\");\n        assertSameDate(\"T1:15:30.123+01:00\", \"t_time\");\n        assertSameDate(\"T10:1:30.123Z\", \"t_time\");\n        assertSameDate(\"T10:1:30.123+0100\", \"t_time\");\n        assertSameDate(\"T10:1:30.123+01:00\", \"t_time\");\n        assertSameDate(\"T10:15:3.123Z\", \"t_time\");\n        assertSameDate(\"T10:15:3.123+0100\", \"t_time\");\n        assertSameDate(\"T10:15:3.123+01:00\", \"t_time\");\n        assertParseException(\"T10:15:3.1\", \"t_time\");\n        assertParseException(\"T10:15:3Z\", \"t_time\");\n\n        assertSameDate(\"T10:15:30Z\", \"t_time_no_millis\");\n        assertSameDate(\"T10:15:30+0100\", \"t_time_no_millis\");\n        assertSameDate(\"T10:15:30+01:00\", \"t_time_no_millis\");\n        assertSameDate(\"T1:15:30Z\", \"t_time_no_millis\");\n        assertSameDate(\"T1:15:30+0100\", \"t_time_no_millis\");\n        assertSameDate(\"T1:15:30+01:00\", \"t_time_no_millis\");\n        assertSameDate(\"T10:1:30Z\", \"t_time_no_millis\");\n        assertSameDate(\"T10:1:30+0100\", \"t_time_no_millis\");\n        assertSameDate(\"T10:1:30+01:00\", \"t_time_no_millis\");\n        assertSameDate(\"T10:15:3Z\", \"t_time_no_millis\");\n        assertSameDate(\"T10:15:3+0100\", \"t_time_no_millis\");\n        assertSameDate(\"T10:15:3+01:00\", \"t_time_no_millis\");\n        assertParseException(\"T10:15:3\", \"t_time_no_millis\");\n\n        assertSameDate(\"2012-W48-6\", \"week_date\");\n        assertSameDate(\"2012-W01-6\", \"week_date\");\n        assertSameDate(\"2012-W1-6\", \"week_date\");\n        \r\n        assertJodaParseException(\"2012-W1-8\", \"week_date\",\n            \"Cannot parse \\\"2012-W1-8\\\": Value 8 for dayOfWeek must be in the range [1,7]\");\n        assertJavaTimeParseException(\"2012-W1-8\", \"week_date\");\n\n        assertSameDate(\"2012-W48-6T10:15:30.123Z\", \"week_date_time\");\n        assertSameDate(\"2012-W48-6T10:15:30.123456789Z\", \"week_date_time\");\n        assertSameDate(\"2012-W48-6T10:15:30.123+0100\", \"week_date_time\");\n        assertSameDate(\"2012-W48-6T10:15:30.123+01:00\", \"week_date_time\");\n        assertSameDate(\"2012-W1-6T10:15:30.123Z\", \"week_date_time\");\n        assertSameDate(\"2012-W1-6T10:15:30.123+0100\", \"week_date_time\");\n        assertSameDate(\"2012-W1-6T10:15:30.123+01:00\", \"week_date_time\");\n\n        assertSameDate(\"2012-W48-6T10:15:30Z\", \"week_date_time_no_millis\");\n        assertSameDate(\"2012-W48-6T10:15:30+0100\", \"week_date_time_no_millis\");\n        assertSameDate(\"2012-W48-6T10:15:30+01:00\", \"week_date_time_no_millis\");\n        assertSameDate(\"2012-W1-6T10:15:30Z\", \"week_date_time_no_millis\");\n        assertSameDate(\"2012-W1-6T10:15:30+0100\", \"week_date_time_no_millis\");\n        assertSameDate(\"2012-W1-6T10:15:30+01:00\", \"week_date_time_no_millis\");\n\n        assertSameDate(\"2012\", \"year\");\n        assertSameDate(\"1\", \"year\");\n        assertSameDate(\"-2000\", \"year\");\n\n        assertSameDate(\"2012-12\", \"yearMonth\");\n        assertSameDate(\"1-1\", \"yearMonth\");\n\n        assertSameDate(\"2012-12-31\", \"yearMonthDay\");\n        assertSameDate(\"1-12-31\", \"yearMonthDay\");\n        assertSameDate(\"2012-1-31\", \"yearMonthDay\");\n        assertSameDate(\"2012-12-1\", \"yearMonthDay\");\n\n        assertSameDate(\"2018\", \"week_year\");\n        assertSameDate(\"1\", \"week_year\");\n        assertSameDate(\"2017\", \"week_year\");\n\n        assertSameDate(\"2018-W29\", \"weekyear_week\");\n        assertSameDate(\"2018-W1\", \"weekyear_week\");\n\n        assertSameDate(\"2012-W31-5\", \"weekyear_week_day\");\n        assertSameDate(\"2012-W1-1\", \"weekyear_week_day\");\n    }\n","realPath":"server/src/test/java/org/elasticsearch/common/joda/JavaJodaTimeDuellingTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":86,"status":"M"},{"authorDate":"2019-04-02 16:26:54","commitOrder":12,"curCode":"    public void testDuelingStrictParsing() {\n        assertSameDate(\"2018W313\", \"strict_basic_week_date\");\n        assertParseException(\"18W313\", \"strict_basic_week_date\");\n        assertSameDate(\"2018W313T121212.1Z\", \"strict_basic_week_date_time\");\n        assertSameDate(\"2018W313T121212.123Z\", \"strict_basic_week_date_time\");\n        assertSameDate(\"2018W313T121212.123456789Z\", \"strict_basic_week_date_time\");\n        assertSameDate(\"2018W313T121212.1+0100\", \"strict_basic_week_date_time\");\n        assertSameDate(\"2018W313T121212.123+0100\", \"strict_basic_week_date_time\");\n        assertSameDate(\"2018W313T121212.1+01:00\", \"strict_basic_week_date_time\");\n        assertSameDate(\"2018W313T121212.123+01:00\", \"strict_basic_week_date_time\");\n        assertParseException(\"2018W313T12128.123Z\", \"strict_basic_week_date_time\");\n        assertParseException(\"2018W313T12128.123456789Z\", \"strict_basic_week_date_time\");\n        assertParseException(\"2018W313T81212.123Z\", \"strict_basic_week_date_time\");\n        assertParseException(\"2018W313T12812.123Z\", \"strict_basic_week_date_time\");\n        assertParseException(\"2018W313T12812.1Z\", \"strict_basic_week_date_time\");\n        assertSameDate(\"2018W313T121212Z\", \"strict_basic_week_date_time_no_millis\");\n        assertSameDate(\"2018W313T121212+0100\", \"strict_basic_week_date_time_no_millis\");\n        assertSameDate(\"2018W313T121212+01:00\", \"strict_basic_week_date_time_no_millis\");\n        assertParseException(\"2018W313T12128Z\", \"strict_basic_week_date_time_no_millis\");\n        assertParseException(\"2018W313T12128+0100\", \"strict_basic_week_date_time_no_millis\");\n        assertParseException(\"2018W313T12128+01:00\", \"strict_basic_week_date_time_no_millis\");\n        assertParseException(\"2018W313T81212Z\", \"strict_basic_week_date_time_no_millis\");\n        assertParseException(\"2018W313T81212+0100\", \"strict_basic_week_date_time_no_millis\");\n        assertParseException(\"2018W313T81212+01:00\", \"strict_basic_week_date_time_no_millis\");\n        assertParseException(\"2018W313T12812Z\", \"strict_basic_week_date_time_no_millis\");\n        assertParseException(\"2018W313T12812+0100\", \"strict_basic_week_date_time_no_millis\");\n        assertParseException(\"2018W313T12812+01:00\", \"strict_basic_week_date_time_no_millis\");\n        assertSameDate(\"2018-12-31\", \"strict_date\");\n        assertParseException(\"10000-12-31\", \"strict_date\");\n        assertParseException(\"2018-8-31\", \"strict_date\");\n        assertSameDate(\"2018-12-31T12\", \"strict_date_hour\");\n        assertParseException(\"2018-12-31T8\", \"strict_date_hour\");\n        assertSameDate(\"2018-12-31T12:12\", \"strict_date_hour_minute\");\n        assertParseException(\"2018-12-31T8:3\", \"strict_date_hour_minute\");\n        assertSameDate(\"2018-12-31T12:12:12\", \"strict_date_hour_minute_second\");\n        assertParseException(\"2018-12-31T12:12:1\", \"strict_date_hour_minute_second\");\n        assertSameDate(\"2018-12-31T12:12:12.1\", \"strict_date_hour_minute_second_fraction\");\n        assertSameDate(\"2018-12-31T12:12:12.123\", \"strict_date_hour_minute_second_fraction\");\n        assertSameDate(\"2018-12-31T12:12:12.123456789\", \"strict_date_hour_minute_second_fraction\");\n        assertSameDate(\"2018-12-31T12:12:12.123\", \"strict_date_hour_minute_second_millis\");\n        assertSameDate(\"2018-12-31T12:12:12.1\", \"strict_date_hour_minute_second_millis\");\n        assertSameDate(\"2018-12-31T12:12:12.1\", \"strict_date_hour_minute_second_fraction\");\n        assertParseException(\"2018-12-31T12:12:12\", \"strict_date_hour_minute_second_millis\");\n        assertParseException(\"2018-12-31T12:12:12\", \"strict_date_hour_minute_second_fraction\");\n        assertSameDate(\"2018-12-31\", \"strict_date_optional_time\");\n        assertParseException(\"2018-12-1\", \"strict_date_optional_time\");\n        assertParseException(\"2018-1-31\", \"strict_date_optional_time\");\n        assertParseException(\"10000-01-31\", \"strict_date_optional_time\");\n        assertSameDate(\"2010-01-05T02:00\", \"strict_date_optional_time\");\n        assertSameDate(\"2018-12-31T10:15:30\", \"strict_date_optional_time\");\n        assertSameDate(\"2018-12-31T10:15:30Z\", \"strict_date_optional_time\");\n        assertSameDate(\"2018-12-31T10:15:30+0100\", \"strict_date_optional_time\");\n        assertSameDate(\"2018-12-31T10:15:30+01:00\", \"strict_date_optional_time\");\n        assertParseException(\"2018-12-31T10:15:3\", \"strict_date_optional_time\");\n        assertParseException(\"2018-12-31T10:5:30\", \"strict_date_optional_time\");\n        assertParseException(\"2018-12-31T9:15:30\", \"strict_date_optional_time\");\n        assertSameDate(\"2015-01-04T00:00Z\", \"strict_date_optional_time\");\n        assertSameDate(\"2018-12-31T10:15:30.1Z\", \"strict_date_time\");\n        assertSameDate(\"2018-12-31T10:15:30.123Z\", \"strict_date_time\");\n        assertSameDate(\"2018-12-31T10:15:30.123456789Z\", \"strict_date_time\");\n        assertSameDate(\"2018-12-31T10:15:30.1+0100\", \"strict_date_time\");\n        assertSameDate(\"2018-12-31T10:15:30.123+0100\", \"strict_date_time\");\n        assertSameDate(\"2018-12-31T10:15:30.1+01:00\", \"strict_date_time\");\n        assertSameDate(\"2018-12-31T10:15:30.123+01:00\", \"strict_date_time\");\n        assertSameDate(\"2018-12-31T10:15:30.11Z\", \"strict_date_time\");\n        assertSameDate(\"2018-12-31T10:15:30.11+0100\", \"strict_date_time\");\n        assertSameDate(\"2018-12-31T10:15:30.11+01:00\", \"strict_date_time\");\n        assertParseException(\"2018-12-31T10:15:3.123Z\", \"strict_date_time\");\n        assertParseException(\"2018-12-31T10:5:30.123Z\", \"strict_date_time\");\n        assertParseException(\"2018-12-31T1:15:30.123Z\", \"strict_date_time\");\n        assertSameDate(\"2018-12-31T10:15:30Z\", \"strict_date_time_no_millis\");\n        assertSameDate(\"2018-12-31T10:15:30+0100\", \"strict_date_time_no_millis\");\n        assertSameDate(\"2018-12-31T10:15:30+01:00\", \"strict_date_time_no_millis\");\n        assertParseException(\"2018-12-31T10:5:30Z\", \"strict_date_time_no_millis\");\n        assertParseException(\"2018-12-31T10:15:3Z\", \"strict_date_time_no_millis\");\n        assertParseException(\"2018-12-31T1:15:30Z\", \"strict_date_time_no_millis\");\n        assertSameDate(\"12\", \"strict_hour\");\n        assertSameDate(\"01\", \"strict_hour\");\n        assertParseException(\"1\", \"strict_hour\");\n        assertSameDate(\"12:12\", \"strict_hour_minute\");\n        assertSameDate(\"12:01\", \"strict_hour_minute\");\n        assertParseException(\"12:1\", \"strict_hour_minute\");\n        assertSameDate(\"12:12:12\", \"strict_hour_minute_second\");\n        assertSameDate(\"12:12:01\", \"strict_hour_minute_second\");\n        assertParseException(\"12:12:1\", \"strict_hour_minute_second\");\n        assertSameDate(\"12:12:12.123\", \"strict_hour_minute_second_fraction\");\n        assertSameDate(\"12:12:12.123456789\", \"strict_hour_minute_second_fraction\");\n        assertSameDate(\"12:12:12.1\", \"strict_hour_minute_second_fraction\");\n        assertParseException(\"12:12:12\", \"strict_hour_minute_second_fraction\");\n        assertSameDate(\"12:12:12.123\", \"strict_hour_minute_second_millis\");\n        assertSameDate(\"12:12:12.1\", \"strict_hour_minute_second_millis\");\n        assertParseException(\"12:12:12\", \"strict_hour_minute_second_millis\");\n        assertSameDate(\"2018-128\", \"strict_ordinal_date\");\n        assertParseException(\"2018-1\", \"strict_ordinal_date\");\n\n        assertSameDate(\"2018-128T10:15:30.1Z\", \"strict_ordinal_date_time\");\n        assertSameDate(\"2018-128T10:15:30.123Z\", \"strict_ordinal_date_time\");\n        assertSameDate(\"2018-128T10:15:30.123456789Z\", \"strict_ordinal_date_time\");\n        assertSameDate(\"2018-128T10:15:30.1+0100\", \"strict_ordinal_date_time\");\n        assertSameDate(\"2018-128T10:15:30.123+0100\", \"strict_ordinal_date_time\");\n        assertSameDate(\"2018-128T10:15:30.1+01:00\", \"strict_ordinal_date_time\");\n        assertSameDate(\"2018-128T10:15:30.123+01:00\", \"strict_ordinal_date_time\");\n        assertParseException(\"2018-1T10:15:30.123Z\", \"strict_ordinal_date_time\");\n\n        assertSameDate(\"2018-128T10:15:30Z\", \"strict_ordinal_date_time_no_millis\");\n        assertSameDate(\"2018-128T10:15:30+0100\", \"strict_ordinal_date_time_no_millis\");\n        assertSameDate(\"2018-128T10:15:30+01:00\", \"strict_ordinal_date_time_no_millis\");\n        assertParseException(\"2018-1T10:15:30Z\", \"strict_ordinal_date_time_no_millis\");\n\n        assertSameDate(\"10:15:30.1Z\", \"strict_time\");\n        assertSameDate(\"10:15:30.123Z\", \"strict_time\");\n        assertSameDate(\"10:15:30.123456789Z\", \"strict_time\");\n        assertSameDate(\"10:15:30.123+0100\", \"strict_time\");\n        assertSameDate(\"10:15:30.123+01:00\", \"strict_time\");\n        assertParseException(\"1:15:30.123Z\", \"strict_time\");\n        assertParseException(\"10:1:30.123Z\", \"strict_time\");\n        assertParseException(\"10:15:3.123Z\", \"strict_time\");\n        assertParseException(\"10:15:3.1\", \"strict_time\");\n        assertParseException(\"10:15:3Z\", \"strict_time\");\n\n        assertSameDate(\"10:15:30Z\", \"strict_time_no_millis\");\n        assertSameDate(\"10:15:30+0100\", \"strict_time_no_millis\");\n        assertSameDate(\"10:15:30+01:00\", \"strict_time_no_millis\");\n        assertSameDate(\"01:15:30Z\", \"strict_time_no_millis\");\n        assertSameDate(\"01:15:30+0100\", \"strict_time_no_millis\");\n        assertSameDate(\"01:15:30+01:00\", \"strict_time_no_millis\");\n        assertParseException(\"1:15:30Z\", \"strict_time_no_millis\");\n        assertParseException(\"10:5:30Z\", \"strict_time_no_millis\");\n        assertParseException(\"10:15:3Z\", \"strict_time_no_millis\");\n        assertParseException(\"10:15:3\", \"strict_time_no_millis\");\n\n        assertSameDate(\"T10:15:30.1Z\", \"strict_t_time\");\n        assertSameDate(\"T10:15:30.123Z\", \"strict_t_time\");\n        assertSameDate(\"T10:15:30.123456789Z\", \"strict_t_time\");\n        assertSameDate(\"T10:15:30.1+0100\", \"strict_t_time\");\n        assertSameDate(\"T10:15:30.123+0100\", \"strict_t_time\");\n        assertSameDate(\"T10:15:30.1+01:00\", \"strict_t_time\");\n        assertSameDate(\"T10:15:30.123+01:00\", \"strict_t_time\");\n        assertParseException(\"T1:15:30.123Z\", \"strict_t_time\");\n        assertParseException(\"T10:1:30.123Z\", \"strict_t_time\");\n        assertParseException(\"T10:15:3.123Z\", \"strict_t_time\");\n        assertParseException(\"T10:15:3.1\", \"strict_t_time\");\n        assertParseException(\"T10:15:3Z\", \"strict_t_time\");\n\n        assertSameDate(\"T10:15:30Z\", \"strict_t_time_no_millis\");\n        assertSameDate(\"T10:15:30+0100\", \"strict_t_time_no_millis\");\n        assertSameDate(\"T10:15:30+01:00\", \"strict_t_time_no_millis\");\n        assertParseException(\"T1:15:30Z\", \"strict_t_time_no_millis\");\n        assertParseException(\"T10:1:30Z\", \"strict_t_time_no_millis\");\n        assertParseException(\"T10:15:3Z\", \"strict_t_time_no_millis\");\n        assertParseException(\"T10:15:3\", \"strict_t_time_no_millis\");\n\n        assertSameDate(\"2012-W48-6\", \"strict_week_date\");\n        assertSameDate(\"2012-W01-6\", \"strict_week_date\");\n        assertParseException(\"2012-W1-6\", \"strict_week_date\");\n        assertParseException(\"2012-W1-8\", \"strict_week_date\");\n\n        assertSameDate(\"2012-W48-6\", \"strict_week_date\");\n        assertSameDate(\"2012-W01-6\", \"strict_week_date\");\n        assertParseException(\"2012-W1-6\", \"strict_week_date\");\n        \r\n        assertJodaParseException(\"2012-W01-8\", \"strict_week_date\",\n            \"Cannot parse \\\"2012-W01-8\\\": Value 8 for dayOfWeek must be in the range [1,7]\");\n        assertJavaTimeParseException(\"2012-W01-8\", \"strict_week_date\");\n\n        assertSameDate(\"2012-W48-6T10:15:30.1Z\", \"strict_week_date_time\");\n        assertSameDate(\"2012-W48-6T10:15:30.123Z\", \"strict_week_date_time\");\n        assertSameDate(\"2012-W48-6T10:15:30.123456789Z\", \"strict_week_date_time\");\n        assertSameDate(\"2012-W48-6T10:15:30.1+0100\", \"strict_week_date_time\");\n        assertSameDate(\"2012-W48-6T10:15:30.123+0100\", \"strict_week_date_time\");\n        assertSameDate(\"2012-W48-6T10:15:30.1+01:00\", \"strict_week_date_time\");\n        assertSameDate(\"2012-W48-6T10:15:30.123+01:00\", \"strict_week_date_time\");\n        assertParseException(\"2012-W1-6T10:15:30.123Z\", \"strict_week_date_time\");\n\n        assertSameDate(\"2012-W48-6T10:15:30Z\", \"strict_week_date_time_no_millis\");\n        assertSameDate(\"2012-W48-6T10:15:30+0100\", \"strict_week_date_time_no_millis\");\n        assertSameDate(\"2012-W48-6T10:15:30+01:00\", \"strict_week_date_time_no_millis\");\n        assertParseException(\"2012-W1-6T10:15:30Z\", \"strict_week_date_time_no_millis\");\n\n        assertSameDate(\"2012\", \"strict_year\");\n        assertParseException(\"1\", \"strict_year\");\n        assertSameDate(\"-2000\", \"strict_year\");\n\n        assertSameDate(\"2012-12\", \"strict_year_month\");\n        assertParseException(\"1-1\", \"strict_year_month\");\n\n        assertSameDate(\"2012-12-31\", \"strict_year_month_day\");\n        assertParseException(\"1-12-31\", \"strict_year_month_day\");\n        assertParseException(\"2012-1-31\", \"strict_year_month_day\");\n        assertParseException(\"2012-12-1\", \"strict_year_month_day\");\n\n        assertSameDate(\"2018\", \"strict_weekyear\");\n        assertParseException(\"1\", \"strict_weekyear\");\n\n        assertSameDate(\"2018\", \"strict_weekyear\");\n        assertSameDate(\"2017\", \"strict_weekyear\");\n        assertParseException(\"1\", \"strict_weekyear\");\n\n        assertSameDate(\"2018-W29\", \"strict_weekyear_week\");\n        assertSameDate(\"2018-W01\", \"strict_weekyear_week\");\n        assertParseException(\"2018-W1\", \"strict_weekyear_week\");\n\n        assertSameDate(\"2012-W31-5\", \"strict_weekyear_week_day\");\n        assertParseException(\"2012-W1-1\", \"strict_weekyear_week_day\");\n    }\n","date":"2019-04-02 16:26:54","endLine":593,"groupId":"47697","id":24,"instanceNumber":2,"isCurCommit":0,"methodName":"testDuelingStrictParsing","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/c3/a541fe87ec2e42bf47d0f440013c5534ba476c.src","preCode":"    public void testDuelingStrictParsing() {\n        assertSameDate(\"2018W313\", \"strict_basic_week_date\");\n        assertParseException(\"18W313\", \"strict_basic_week_date\");\n        assertSameDate(\"2018W313T121212.123Z\", \"strict_basic_week_date_time\");\n        assertSameDate(\"2018W313T121212.123456789Z\", \"strict_basic_week_date_time\");\n        assertSameDate(\"2018W313T121212.123+0100\", \"strict_basic_week_date_time\");\n        assertSameDate(\"2018W313T121212.123+01:00\", \"strict_basic_week_date_time\");\n        assertParseException(\"2018W313T12128.123Z\", \"strict_basic_week_date_time\");\n        assertParseException(\"2018W313T12128.123456789Z\", \"strict_basic_week_date_time\");\n        assertParseException(\"2018W313T81212.123Z\", \"strict_basic_week_date_time\");\n        assertParseException(\"2018W313T12812.123Z\", \"strict_basic_week_date_time\");\n        assertParseException(\"2018W313T12812.1Z\", \"strict_basic_week_date_time\");\n        assertSameDate(\"2018W313T121212Z\", \"strict_basic_week_date_time_no_millis\");\n        assertSameDate(\"2018W313T121212+0100\", \"strict_basic_week_date_time_no_millis\");\n        assertSameDate(\"2018W313T121212+01:00\", \"strict_basic_week_date_time_no_millis\");\n        assertParseException(\"2018W313T12128Z\", \"strict_basic_week_date_time_no_millis\");\n        assertParseException(\"2018W313T12128+0100\", \"strict_basic_week_date_time_no_millis\");\n        assertParseException(\"2018W313T12128+01:00\", \"strict_basic_week_date_time_no_millis\");\n        assertParseException(\"2018W313T81212Z\", \"strict_basic_week_date_time_no_millis\");\n        assertParseException(\"2018W313T81212+0100\", \"strict_basic_week_date_time_no_millis\");\n        assertParseException(\"2018W313T81212+01:00\", \"strict_basic_week_date_time_no_millis\");\n        assertParseException(\"2018W313T12812Z\", \"strict_basic_week_date_time_no_millis\");\n        assertParseException(\"2018W313T12812+0100\", \"strict_basic_week_date_time_no_millis\");\n        assertParseException(\"2018W313T12812+01:00\", \"strict_basic_week_date_time_no_millis\");\n        assertSameDate(\"2018-12-31\", \"strict_date\");\n        assertParseException(\"10000-12-31\", \"strict_date\");\n        assertParseException(\"2018-8-31\", \"strict_date\");\n        assertSameDate(\"2018-12-31T12\", \"strict_date_hour\");\n        assertParseException(\"2018-12-31T8\", \"strict_date_hour\");\n        assertSameDate(\"2018-12-31T12:12\", \"strict_date_hour_minute\");\n        assertParseException(\"2018-12-31T8:3\", \"strict_date_hour_minute\");\n        assertSameDate(\"2018-12-31T12:12:12\", \"strict_date_hour_minute_second\");\n        assertParseException(\"2018-12-31T12:12:1\", \"strict_date_hour_minute_second\");\n        assertSameDate(\"2018-12-31T12:12:12.123\", \"strict_date_hour_minute_second_fraction\");\n        assertSameDate(\"2018-12-31T12:12:12.123456789\", \"strict_date_hour_minute_second_fraction\");\n        assertSameDate(\"2018-12-31T12:12:12.123\", \"strict_date_hour_minute_second_millis\");\n        assertSameDate(\"2018-12-31T12:12:12.1\", \"strict_date_hour_minute_second_millis\");\n        assertSameDate(\"2018-12-31T12:12:12.1\", \"strict_date_hour_minute_second_fraction\");\n        assertParseException(\"2018-12-31T12:12:12\", \"strict_date_hour_minute_second_millis\");\n        assertParseException(\"2018-12-31T12:12:12\", \"strict_date_hour_minute_second_fraction\");\n        assertSameDate(\"2018-12-31\", \"strict_date_optional_time\");\n        assertParseException(\"2018-12-1\", \"strict_date_optional_time\");\n        assertParseException(\"2018-1-31\", \"strict_date_optional_time\");\n        assertParseException(\"10000-01-31\", \"strict_date_optional_time\");\n        assertSameDate(\"2010-01-05T02:00\", \"strict_date_optional_time\");\n        assertSameDate(\"2018-12-31T10:15:30\", \"strict_date_optional_time\");\n        assertSameDate(\"2018-12-31T10:15:30Z\", \"strict_date_optional_time\");\n        assertSameDate(\"2018-12-31T10:15:30+0100\", \"strict_date_optional_time\");\n        assertSameDate(\"2018-12-31T10:15:30+01:00\", \"strict_date_optional_time\");\n        assertParseException(\"2018-12-31T10:15:3\", \"strict_date_optional_time\");\n        assertParseException(\"2018-12-31T10:5:30\", \"strict_date_optional_time\");\n        assertParseException(\"2018-12-31T9:15:30\", \"strict_date_optional_time\");\n        assertSameDate(\"2015-01-04T00:00Z\", \"strict_date_optional_time\");\n        assertSameDate(\"2018-12-31T10:15:30.123Z\", \"strict_date_time\");\n        assertSameDate(\"2018-12-31T10:15:30.123456789Z\", \"strict_date_time\");\n        assertSameDate(\"2018-12-31T10:15:30.123+0100\", \"strict_date_time\");\n        assertSameDate(\"2018-12-31T10:15:30.123+01:00\", \"strict_date_time\");\n        assertSameDate(\"2018-12-31T10:15:30.11Z\", \"strict_date_time\");\n        assertSameDate(\"2018-12-31T10:15:30.11+0100\", \"strict_date_time\");\n        assertSameDate(\"2018-12-31T10:15:30.11+01:00\", \"strict_date_time\");\n        assertParseException(\"2018-12-31T10:15:3.123Z\", \"strict_date_time\");\n        assertParseException(\"2018-12-31T10:5:30.123Z\", \"strict_date_time\");\n        assertParseException(\"2018-12-31T1:15:30.123Z\", \"strict_date_time\");\n        assertSameDate(\"2018-12-31T10:15:30Z\", \"strict_date_time_no_millis\");\n        assertSameDate(\"2018-12-31T10:15:30+0100\", \"strict_date_time_no_millis\");\n        assertSameDate(\"2018-12-31T10:15:30+01:00\", \"strict_date_time_no_millis\");\n        assertParseException(\"2018-12-31T10:5:30Z\", \"strict_date_time_no_millis\");\n        assertParseException(\"2018-12-31T10:15:3Z\", \"strict_date_time_no_millis\");\n        assertParseException(\"2018-12-31T1:15:30Z\", \"strict_date_time_no_millis\");\n        assertSameDate(\"12\", \"strict_hour\");\n        assertSameDate(\"01\", \"strict_hour\");\n        assertParseException(\"1\", \"strict_hour\");\n        assertSameDate(\"12:12\", \"strict_hour_minute\");\n        assertSameDate(\"12:01\", \"strict_hour_minute\");\n        assertParseException(\"12:1\", \"strict_hour_minute\");\n        assertSameDate(\"12:12:12\", \"strict_hour_minute_second\");\n        assertSameDate(\"12:12:01\", \"strict_hour_minute_second\");\n        assertParseException(\"12:12:1\", \"strict_hour_minute_second\");\n        assertSameDate(\"12:12:12.123\", \"strict_hour_minute_second_fraction\");\n        assertSameDate(\"12:12:12.123456789\", \"strict_hour_minute_second_fraction\");\n        assertSameDate(\"12:12:12.1\", \"strict_hour_minute_second_fraction\");\n        assertParseException(\"12:12:12\", \"strict_hour_minute_second_fraction\");\n        assertSameDate(\"12:12:12.123\", \"strict_hour_minute_second_millis\");\n        assertSameDate(\"12:12:12.1\", \"strict_hour_minute_second_millis\");\n        assertParseException(\"12:12:12\", \"strict_hour_minute_second_millis\");\n        assertSameDate(\"2018-128\", \"strict_ordinal_date\");\n        assertParseException(\"2018-1\", \"strict_ordinal_date\");\n\n        assertSameDate(\"2018-128T10:15:30.123Z\", \"strict_ordinal_date_time\");\n        assertSameDate(\"2018-128T10:15:30.123456789Z\", \"strict_ordinal_date_time\");\n        assertSameDate(\"2018-128T10:15:30.123+0100\", \"strict_ordinal_date_time\");\n        assertSameDate(\"2018-128T10:15:30.123+01:00\", \"strict_ordinal_date_time\");\n        assertParseException(\"2018-1T10:15:30.123Z\", \"strict_ordinal_date_time\");\n\n        assertSameDate(\"2018-128T10:15:30Z\", \"strict_ordinal_date_time_no_millis\");\n        assertSameDate(\"2018-128T10:15:30+0100\", \"strict_ordinal_date_time_no_millis\");\n        assertSameDate(\"2018-128T10:15:30+01:00\", \"strict_ordinal_date_time_no_millis\");\n        assertParseException(\"2018-1T10:15:30Z\", \"strict_ordinal_date_time_no_millis\");\n\n        assertSameDate(\"10:15:30.123Z\", \"strict_time\");\n        assertSameDate(\"10:15:30.123456789Z\", \"strict_time\");\n        assertSameDate(\"10:15:30.123+0100\", \"strict_time\");\n        assertSameDate(\"10:15:30.123+01:00\", \"strict_time\");\n        assertParseException(\"1:15:30.123Z\", \"strict_time\");\n        assertParseException(\"10:1:30.123Z\", \"strict_time\");\n        assertParseException(\"10:15:3.123Z\", \"strict_time\");\n        assertParseException(\"10:15:3.1\", \"strict_time\");\n        assertParseException(\"10:15:3Z\", \"strict_time\");\n\n        assertSameDate(\"10:15:30Z\", \"strict_time_no_millis\");\n        assertSameDate(\"10:15:30+0100\", \"strict_time_no_millis\");\n        assertSameDate(\"10:15:30+01:00\", \"strict_time_no_millis\");\n        assertSameDate(\"01:15:30Z\", \"strict_time_no_millis\");\n        assertSameDate(\"01:15:30+0100\", \"strict_time_no_millis\");\n        assertSameDate(\"01:15:30+01:00\", \"strict_time_no_millis\");\n        assertParseException(\"1:15:30Z\", \"strict_time_no_millis\");\n        assertParseException(\"10:5:30Z\", \"strict_time_no_millis\");\n        assertParseException(\"10:15:3Z\", \"strict_time_no_millis\");\n        assertParseException(\"10:15:3\", \"strict_time_no_millis\");\n\n        assertSameDate(\"T10:15:30.123Z\", \"strict_t_time\");\n        assertSameDate(\"T10:15:30.123456789Z\", \"strict_t_time\");\n        assertSameDate(\"T10:15:30.123+0100\", \"strict_t_time\");\n        assertSameDate(\"T10:15:30.123+01:00\", \"strict_t_time\");\n        assertParseException(\"T1:15:30.123Z\", \"strict_t_time\");\n        assertParseException(\"T10:1:30.123Z\", \"strict_t_time\");\n        assertParseException(\"T10:15:3.123Z\", \"strict_t_time\");\n        assertParseException(\"T10:15:3.1\", \"strict_t_time\");\n        assertParseException(\"T10:15:3Z\", \"strict_t_time\");\n\n        assertSameDate(\"T10:15:30Z\", \"strict_t_time_no_millis\");\n        assertSameDate(\"T10:15:30+0100\", \"strict_t_time_no_millis\");\n        assertSameDate(\"T10:15:30+01:00\", \"strict_t_time_no_millis\");\n        assertParseException(\"T1:15:30Z\", \"strict_t_time_no_millis\");\n        assertParseException(\"T10:1:30Z\", \"strict_t_time_no_millis\");\n        assertParseException(\"T10:15:3Z\", \"strict_t_time_no_millis\");\n        assertParseException(\"T10:15:3\", \"strict_t_time_no_millis\");\n\n        assertSameDate(\"2012-W48-6\", \"strict_week_date\");\n        assertSameDate(\"2012-W01-6\", \"strict_week_date\");\n        assertParseException(\"2012-W1-6\", \"strict_week_date\");\n        assertParseException(\"2012-W1-8\", \"strict_week_date\");\n\n        assertSameDate(\"2012-W48-6\", \"strict_week_date\");\n        assertSameDate(\"2012-W01-6\", \"strict_week_date\");\n        assertParseException(\"2012-W1-6\", \"strict_week_date\");\n        \r\n        assertJodaParseException(\"2012-W01-8\", \"strict_week_date\",\n            \"Cannot parse \\\"2012-W01-8\\\": Value 8 for dayOfWeek must be in the range [1,7]\");\n        assertJavaTimeParseException(\"2012-W01-8\", \"strict_week_date\");\n\n        assertSameDate(\"2012-W48-6T10:15:30.123Z\", \"strict_week_date_time\");\n        assertSameDate(\"2012-W48-6T10:15:30.123456789Z\", \"strict_week_date_time\");\n        assertSameDate(\"2012-W48-6T10:15:30.123+0100\", \"strict_week_date_time\");\n        assertSameDate(\"2012-W48-6T10:15:30.123+01:00\", \"strict_week_date_time\");\n        assertParseException(\"2012-W1-6T10:15:30.123Z\", \"strict_week_date_time\");\n\n        assertSameDate(\"2012-W48-6T10:15:30Z\", \"strict_week_date_time_no_millis\");\n        assertSameDate(\"2012-W48-6T10:15:30+0100\", \"strict_week_date_time_no_millis\");\n        assertSameDate(\"2012-W48-6T10:15:30+01:00\", \"strict_week_date_time_no_millis\");\n        assertParseException(\"2012-W1-6T10:15:30Z\", \"strict_week_date_time_no_millis\");\n\n        assertSameDate(\"2012\", \"strict_year\");\n        assertParseException(\"1\", \"strict_year\");\n        assertSameDate(\"-2000\", \"strict_year\");\n\n        assertSameDate(\"2012-12\", \"strict_year_month\");\n        assertParseException(\"1-1\", \"strict_year_month\");\n\n        assertSameDate(\"2012-12-31\", \"strict_year_month_day\");\n        assertParseException(\"1-12-31\", \"strict_year_month_day\");\n        assertParseException(\"2012-1-31\", \"strict_year_month_day\");\n        assertParseException(\"2012-12-1\", \"strict_year_month_day\");\n\n        assertSameDate(\"2018\", \"strict_weekyear\");\n        assertParseException(\"1\", \"strict_weekyear\");\n\n        assertSameDate(\"2018\", \"strict_weekyear\");\n        assertSameDate(\"2017\", \"strict_weekyear\");\n        assertParseException(\"1\", \"strict_weekyear\");\n\n        assertSameDate(\"2018-W29\", \"strict_weekyear_week\");\n        assertSameDate(\"2018-W01\", \"strict_weekyear_week\");\n        assertParseException(\"2018-W1\", \"strict_weekyear_week\");\n\n        assertSameDate(\"2012-W31-5\", \"strict_weekyear_week_day\");\n        assertParseException(\"2012-W1-1\", \"strict_weekyear_week_day\");\n    }\n","realPath":"server/src/test/java/org/elasticsearch/common/joda/JavaJodaTimeDuellingTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":389,"status":"M"}],"commitId":"517e33ad9d9f48b20dbb46de67facce1edd6862d","commitMessage":"@@@Allow single digit milliseconds in strict date parsing (#40676)\n\nIn order to remain compatible with the existing joda based\nimplementation the parsing of milliseconds should support parsing single\ndigits instead of relying on three.  even with strict formats.\n\nThis adds a few tests to duel against the existing joda based\nimplementation in order to ensure the parsing behaviour is the same.\n\nCloses #40403","date":"2019-04-02 16:26:54","modifiedFileCount":"2","status":"M","submitter":"Alexander Reelsen"},{"authorTime":"2019-04-02 16:26:54","codes":[{"authorDate":"2020-07-31 16:33:40","commitOrder":13,"curCode":"    public void testDuellingFormatsValidParsing() {\n        assertSameDate(\"1522332219\", \"epoch_second\");\n        assertSameDate(\"0\", \"epoch_second\");\n        assertSameDate(\"1\", \"epoch_second\");\n        assertSameDate(\"1522332219321\", \"epoch_millis\");\n        assertSameDate(\"0\", \"epoch_millis\");\n        assertSameDate(\"1\", \"epoch_millis\");\n\n        assertSameDate(\"20181126\", \"basic_date\");\n        assertSameDate(\"20181126T121212.123Z\", \"basic_date_time\");\n        assertSameDate(\"20181126T121212.123+10:00\", \"basic_date_time\");\n        assertSameDate(\"20181126T121212.123-0800\", \"basic_date_time\");\n\n        assertSameDate(\"20181126T121212Z\", \"basic_date_time_no_millis\");\n        assertSameDate(\"20181126T121212+01:00\", \"basic_date_time_no_millis\");\n        assertSameDate(\"20181126T121212+0100\", \"basic_date_time_no_millis\");\n        assertSameDate(\"2018363\", \"basic_ordinal_date\");\n        assertSameDate(\"2018363T121212.1Z\", \"basic_ordinal_date_time\");\n        assertSameDate(\"2018363T121212.123Z\", \"basic_ordinal_date_time\");\n        assertSameDate(\"2018363T121212.123456789Z\", \"basic_ordinal_date_time\");\n        assertSameDate(\"2018363T121212.123+0100\", \"basic_ordinal_date_time\");\n        assertSameDate(\"2018363T121212.123+01:00\", \"basic_ordinal_date_time\");\n        assertSameDate(\"2018363T121212Z\", \"basic_ordinal_date_time_no_millis\");\n        assertSameDate(\"2018363T121212+0100\", \"basic_ordinal_date_time_no_millis\");\n        assertSameDate(\"2018363T121212+01:00\", \"basic_ordinal_date_time_no_millis\");\n        assertSameDate(\"121212.1Z\", \"basic_time\");\n        assertSameDate(\"121212.123Z\", \"basic_time\");\n        assertSameDate(\"121212.123456789Z\", \"basic_time\");\n        assertSameDate(\"121212.1+0100\", \"basic_time\");\n        assertSameDate(\"121212.123+0100\", \"basic_time\");\n        assertSameDate(\"121212.123+01:00\", \"basic_time\");\n        assertSameDate(\"121212Z\", \"basic_time_no_millis\");\n        assertSameDate(\"121212+0100\", \"basic_time_no_millis\");\n        assertSameDate(\"121212+01:00\", \"basic_time_no_millis\");\n        assertSameDate(\"T121212.1Z\", \"basic_t_time\");\n        assertSameDate(\"T121212.123Z\", \"basic_t_time\");\n        assertSameDate(\"T121212.123456789Z\", \"basic_t_time\");\n        assertSameDate(\"T121212.1+0100\", \"basic_t_time\");\n        assertSameDate(\"T121212.123+0100\", \"basic_t_time\");\n        assertSameDate(\"T121212.123+01:00\", \"basic_t_time\");\n        assertSameDate(\"T121212Z\", \"basic_t_time_no_millis\");\n        assertSameDate(\"T121212+0100\", \"basic_t_time_no_millis\");\n        assertSameDate(\"T121212+01:00\", \"basic_t_time_no_millis\");\n        assertSameDate(\"2018W313\", \"basic_week_date\");\n        assertSameDate(\"1W313\", \"basic_week_date\");\n        assertSameDate(\"18W313\", \"basic_week_date\");\n        assertSameDate(\"2018W313T121212.1Z\", \"basic_week_date_time\");\n        assertSameDate(\"2018W313T121212.123Z\", \"basic_week_date_time\");\n        assertSameDate(\"2018W313T121212.123456789Z\", \"basic_week_date_time\");\n        assertSameDate(\"2018W313T121212.123+0100\", \"basic_week_date_time\");\n        assertSameDate(\"2018W313T121212.123+01:00\", \"basic_week_date_time\");\n        assertSameDate(\"2018W313T121212Z\", \"basic_week_date_time_no_millis\");\n        assertSameDate(\"2018W313T121212+0100\", \"basic_week_date_time_no_millis\");\n        assertSameDate(\"2018W313T121212+01:00\", \"basic_week_date_time_no_millis\");\n\n        assertSameDate(\"2018-12-31\", \"date\");\n        assertSameDate(\"18-5-6\", \"date\");\n        assertSameDate(\"10000-5-6\", \"date\");\n\n        assertSameDate(\"2018-12-31T12\", \"date_hour\");\n        assertSameDate(\"2018-12-31T8\", \"date_hour\");\n\n        assertSameDate(\"2018-12-31T12:12\", \"date_hour_minute\");\n        assertSameDate(\"2018-12-31T8:3\", \"date_hour_minute\");\n\n        assertSameDate(\"2018-12-31T12:12:12\", \"date_hour_minute_second\");\n        assertSameDate(\"2018-12-31T12:12:1\", \"date_hour_minute_second\");\n\n        assertSameDate(\"2018-12-31T12:12:12.1\", \"date_hour_minute_second_fraction\");\n        assertSameDate(\"2018-12-31T12:12:12.123\", \"date_hour_minute_second_fraction\");\n        assertSameDate(\"2018-12-31T12:12:12.123456789\", \"date_hour_minute_second_fraction\");\n        assertSameDate(\"2018-12-31T12:12:12.1\", \"date_hour_minute_second_millis\");\n        assertSameDate(\"2018-12-31T12:12:12.123\", \"date_hour_minute_second_millis\");\n        assertParseException(\"2018-12-31T12:12:12.123456789\", \"date_hour_minute_second_millis\");\n        assertSameDate(\"2018-12-31T12:12:12.1\", \"date_hour_minute_second_millis\");\n        assertSameDate(\"2018-12-31T12:12:12.1\", \"date_hour_minute_second_fraction\");\n\n        assertSameDate(\"2018-05\", \"date_optional_time\");\n        assertSameDate(\"2018-05-30\", \"date_optional_time\");\n        assertSameDate(\"2018-05-30T20\", \"date_optional_time\");\n        assertSameDate(\"2018-05-30T20:21\", \"date_optional_time\");\n        assertSameDate(\"2018-05-30T20:21:23\", \"date_optional_time\");\n        assertSameDate(\"2018-05-30T20:21:23.1\", \"date_optional_time\");\n        assertSameDate(\"2018-05-30T20:21:23.123\", \"date_optional_time\");\n        assertSameDate(\"2018-05-30T20:21:23.123456789\", \"date_optional_time\");\n        assertSameDate(\"2018-05-30T20:21:23.123Z\", \"date_optional_time\");\n        assertSameDate(\"2018-05-30T20:21:23.123456789Z\", \"date_optional_time\");\n        assertSameDate(\"2018-05-30T20:21:23.1+0100\", \"date_optional_time\");\n        assertSameDate(\"2018-05-30T20:21:23.123+0100\", \"date_optional_time\");\n        assertSameDate(\"2018-05-30T20:21:23.1+01:00\", \"date_optional_time\");\n        assertSameDate(\"2018-05-30T20:21:23.123+01:00\", \"date_optional_time\");\n        assertSameDate(\"2018-12-1\", \"date_optional_time\");\n        assertSameDate(\"2018-12-31T10:15:30\", \"date_optional_time\");\n        assertSameDate(\"2018-12-31T10:15:3\", \"date_optional_time\");\n        assertSameDate(\"2018-12-31T10:5:30\", \"date_optional_time\");\n        assertSameDate(\"2018-12-31T1:15:30\", \"date_optional_time\");\n\n        assertSameDate(\"2018-12-31T10:15:30.1Z\", \"date_time\");\n        assertSameDate(\"2018-12-31T10:15:30.123Z\", \"date_time\");\n        assertSameDate(\"2018-12-31T10:15:30.123456789Z\", \"date_time\");\n        assertSameDate(\"2018-12-31T10:15:30.1+0100\", \"date_time\");\n        assertSameDate(\"2018-12-31T10:15:30.123+0100\", \"date_time\");\n        assertSameDate(\"2018-12-31T10:15:30.123+01:00\", \"date_time\");\n        assertSameDate(\"2018-12-31T10:15:30.1+01:00\", \"date_time\");\n        assertSameDate(\"2018-12-31T10:15:30.11Z\", \"date_time\");\n        assertSameDate(\"2018-12-31T10:15:30.11+0100\", \"date_time\");\n        assertSameDate(\"2018-12-31T10:15:30.11+01:00\", \"date_time\");\n        assertSameDate(\"2018-12-31T10:15:3.1Z\", \"date_time\");\n        assertSameDate(\"2018-12-31T10:15:3.123Z\", \"date_time\");\n        assertSameDate(\"2018-12-31T10:15:3.123456789Z\", \"date_time\");\n        assertSameDate(\"2018-12-31T10:15:3.1+0100\", \"date_time\");\n        assertSameDate(\"2018-12-31T10:15:3.123+0100\", \"date_time\");\n        assertSameDate(\"2018-12-31T10:15:3.123+01:00\", \"date_time\");\n        assertSameDate(\"2018-12-31T10:15:3.1+01:00\", \"date_time\");\n\n        assertSameDate(\"2018-12-31T10:15:30Z\", \"date_time_no_millis\");\n        assertSameDate(\"2018-12-31T10:15:30+0100\", \"date_time_no_millis\");\n        assertSameDate(\"2018-12-31T10:15:30+01:00\", \"date_time_no_millis\");\n        assertSameDate(\"2018-12-31T10:5:30Z\", \"date_time_no_millis\");\n        assertSameDate(\"2018-12-31T10:5:30+0100\", \"date_time_no_millis\");\n        assertSameDate(\"2018-12-31T10:5:30+01:00\", \"date_time_no_millis\");\n        assertSameDate(\"2018-12-31T10:15:3Z\", \"date_time_no_millis\");\n        assertSameDate(\"2018-12-31T10:15:3+0100\", \"date_time_no_millis\");\n        assertSameDate(\"2018-12-31T10:15:3+01:00\", \"date_time_no_millis\");\n        assertSameDate(\"2018-12-31T1:15:30Z\", \"date_time_no_millis\");\n        assertSameDate(\"2018-12-31T1:15:30+0100\", \"date_time_no_millis\");\n        assertSameDate(\"2018-12-31T1:15:30+01:00\", \"date_time_no_millis\");\n\n        assertSameDate(\"12\", \"hour\");\n        assertSameDate(\"01\", \"hour\");\n        assertSameDate(\"1\", \"hour\");\n\n        assertSameDate(\"12:12\", \"hour_minute\");\n        assertSameDate(\"12:01\", \"hour_minute\");\n        assertSameDate(\"12:1\", \"hour_minute\");\n\n        assertSameDate(\"12:12:12\", \"hour_minute_second\");\n        assertSameDate(\"12:12:01\", \"hour_minute_second\");\n        assertSameDate(\"12:12:1\", \"hour_minute_second\");\n\n        assertSameDate(\"12:12:12.123\", \"hour_minute_second_fraction\");\n        assertSameDate(\"12:12:12.123456789\", \"hour_minute_second_fraction\");\n        assertSameDate(\"12:12:12.1\", \"hour_minute_second_fraction\");\n        assertParseException(\"12:12:12\", \"hour_minute_second_fraction\");\n        assertSameDate(\"12:12:12.123\", \"hour_minute_second_millis\");\n        assertParseException(\"12:12:12.123456789\", \"hour_minute_second_millis\");\n        assertSameDate(\"12:12:12.1\", \"hour_minute_second_millis\");\n        assertParseException(\"12:12:12\", \"hour_minute_second_millis\");\n\n        assertSameDate(\"2018-128\", \"ordinal_date\");\n        assertSameDate(\"2018-1\", \"ordinal_date\");\n\n        assertSameDate(\"2018-128T10:15:30.1Z\", \"ordinal_date_time\");\n        assertSameDate(\"2018-128T10:15:30.123Z\", \"ordinal_date_time\");\n        assertSameDate(\"2018-128T10:15:30.123456789Z\", \"ordinal_date_time\");\n        assertSameDate(\"2018-128T10:15:30.123+0100\", \"ordinal_date_time\");\n        assertSameDate(\"2018-128T10:15:30.123+01:00\", \"ordinal_date_time\");\n        assertSameDate(\"2018-1T10:15:30.1Z\", \"ordinal_date_time\");\n        assertSameDate(\"2018-1T10:15:30.123Z\", \"ordinal_date_time\");\n        assertSameDate(\"2018-1T10:15:30.123456789Z\", \"ordinal_date_time\");\n        assertSameDate(\"2018-1T10:15:30.123+0100\", \"ordinal_date_time\");\n        assertSameDate(\"2018-1T10:15:30.123+01:00\", \"ordinal_date_time\");\n\n        assertSameDate(\"2018-128T10:15:30Z\", \"ordinal_date_time_no_millis\");\n        assertSameDate(\"2018-128T10:15:30+0100\", \"ordinal_date_time_no_millis\");\n        assertSameDate(\"2018-128T10:15:30+01:00\", \"ordinal_date_time_no_millis\");\n        assertSameDate(\"2018-1T10:15:30Z\", \"ordinal_date_time_no_millis\");\n        assertSameDate(\"2018-1T10:15:30+0100\", \"ordinal_date_time_no_millis\");\n        assertSameDate(\"2018-1T10:15:30+01:00\", \"ordinal_date_time_no_millis\");\n\n        assertSameDate(\"10:15:30.1Z\", \"time\");\n        assertSameDate(\"10:15:30.123Z\", \"time\");\n        assertSameDate(\"10:15:30.123456789Z\", \"time\");\n        assertSameDate(\"10:15:30.123+0100\", \"time\");\n        assertSameDate(\"10:15:30.123+01:00\", \"time\");\n        assertSameDate(\"1:15:30.1Z\", \"time\");\n        assertSameDate(\"1:15:30.123Z\", \"time\");\n        assertSameDate(\"1:15:30.123+0100\", \"time\");\n        assertSameDate(\"1:15:30.123+01:00\", \"time\");\n        assertSameDate(\"10:1:30.1Z\", \"time\");\n        assertSameDate(\"10:1:30.123Z\", \"time\");\n        assertSameDate(\"10:1:30.123+0100\", \"time\");\n        assertSameDate(\"10:1:30.123+01:00\", \"time\");\n        assertSameDate(\"10:15:3.1Z\", \"time\");\n        assertSameDate(\"10:15:3.123Z\", \"time\");\n        assertSameDate(\"10:15:3.123+0100\", \"time\");\n        assertSameDate(\"10:15:3.123+01:00\", \"time\");\n        assertParseException(\"10:15:3.1\", \"time\");\n        assertParseException(\"10:15:3Z\", \"time\");\n\n        assertSameDate(\"10:15:30Z\", \"time_no_millis\");\n        assertSameDate(\"10:15:30+0100\", \"time_no_millis\");\n        assertSameDate(\"10:15:30+01:00\", \"time_no_millis\");\n        assertSameDate(\"01:15:30Z\", \"time_no_millis\");\n        assertSameDate(\"01:15:30+0100\", \"time_no_millis\");\n        assertSameDate(\"01:15:30+01:00\", \"time_no_millis\");\n        assertSameDate(\"1:15:30Z\", \"time_no_millis\");\n        assertSameDate(\"1:15:30+0100\", \"time_no_millis\");\n        assertSameDate(\"1:15:30+01:00\", \"time_no_millis\");\n        assertSameDate(\"10:5:30Z\", \"time_no_millis\");\n        assertSameDate(\"10:5:30+0100\", \"time_no_millis\");\n        assertSameDate(\"10:5:30+01:00\", \"time_no_millis\");\n        assertSameDate(\"10:15:3Z\", \"time_no_millis\");\n        assertSameDate(\"10:15:3+0100\", \"time_no_millis\");\n        assertSameDate(\"10:15:3+01:00\", \"time_no_millis\");\n        assertParseException(\"10:15:3\", \"time_no_millis\");\n\n        assertSameDate(\"T10:15:30.1Z\", \"t_time\");\n        assertSameDate(\"T10:15:30.123Z\", \"t_time\");\n        assertSameDate(\"T10:15:30.123456789Z\", \"t_time\");\n        assertSameDate(\"T10:15:30.1+0100\", \"t_time\");\n        assertSameDate(\"T10:15:30.123+0100\", \"t_time\");\n        assertSameDate(\"T10:15:30.123+01:00\", \"t_time\");\n        assertSameDate(\"T10:15:30.1+01:00\", \"t_time\");\n        assertSameDate(\"T1:15:30.123Z\", \"t_time\");\n        assertSameDate(\"T1:15:30.123+0100\", \"t_time\");\n        assertSameDate(\"T1:15:30.123+01:00\", \"t_time\");\n        assertSameDate(\"T10:1:30.123Z\", \"t_time\");\n        assertSameDate(\"T10:1:30.123+0100\", \"t_time\");\n        assertSameDate(\"T10:1:30.123+01:00\", \"t_time\");\n        assertSameDate(\"T10:15:3.123Z\", \"t_time\");\n        assertSameDate(\"T10:15:3.123+0100\", \"t_time\");\n        assertSameDate(\"T10:15:3.123+01:00\", \"t_time\");\n        assertParseException(\"T10:15:3.1\", \"t_time\");\n        assertParseException(\"T10:15:3Z\", \"t_time\");\n\n        assertSameDate(\"T10:15:30Z\", \"t_time_no_millis\");\n        assertSameDate(\"T10:15:30+0100\", \"t_time_no_millis\");\n        assertSameDate(\"T10:15:30+01:00\", \"t_time_no_millis\");\n        assertSameDate(\"T1:15:30Z\", \"t_time_no_millis\");\n        assertSameDate(\"T1:15:30+0100\", \"t_time_no_millis\");\n        assertSameDate(\"T1:15:30+01:00\", \"t_time_no_millis\");\n        assertSameDate(\"T10:1:30Z\", \"t_time_no_millis\");\n        assertSameDate(\"T10:1:30+0100\", \"t_time_no_millis\");\n        assertSameDate(\"T10:1:30+01:00\", \"t_time_no_millis\");\n        assertSameDate(\"T10:15:3Z\", \"t_time_no_millis\");\n        assertSameDate(\"T10:15:3+0100\", \"t_time_no_millis\");\n        assertSameDate(\"T10:15:3+01:00\", \"t_time_no_millis\");\n        assertParseException(\"T10:15:3\", \"t_time_no_millis\");\n\n        assertSameDate(\"2012-W48-6\", \"week_date\");\n        assertSameDate(\"2012-W01-6\", \"week_date\");\n        assertSameDate(\"2012-W1-6\", \"week_date\");\n        \r\n        assertJodaParseException(\"2012-W1-8\", \"week_date\",\n            \"Cannot parse \\\"2012-W1-8\\\": Value 8 for dayOfWeek must be in the range [1,7]\");\n        assertJavaTimeParseException(\"2012-W1-8\", \"week_date\");\n\n        assertSameDate(\"2012-W48-6T10:15:30.1Z\", \"week_date_time\");\n        assertSameDate(\"2012-W48-6T10:15:30.123Z\", \"week_date_time\");\n        assertSameDate(\"2012-W48-6T10:15:30.123456789Z\", \"week_date_time\");\n        assertSameDate(\"2012-W48-6T10:15:30.1+0100\", \"week_date_time\");\n        assertSameDate(\"2012-W48-6T10:15:30.123+0100\", \"week_date_time\");\n        assertSameDate(\"2012-W48-6T10:15:30.1+01:00\", \"week_date_time\");\n        assertSameDate(\"2012-W48-6T10:15:30.123+01:00\", \"week_date_time\");\n        assertSameDate(\"2012-W1-6T10:15:30.1Z\", \"week_date_time\");\n        assertSameDate(\"2012-W1-6T10:15:30.123Z\", \"week_date_time\");\n        assertSameDate(\"2012-W1-6T10:15:30.1+0100\", \"week_date_time\");\n        assertSameDate(\"2012-W1-6T10:15:30.123+0100\", \"week_date_time\");\n        assertSameDate(\"2012-W1-6T10:15:30.1+01:00\", \"week_date_time\");\n        assertSameDate(\"2012-W1-6T10:15:30.123+01:00\", \"week_date_time\");\n\n        assertSameDate(\"2012-W48-6T10:15:30Z\", \"week_date_time_no_millis\");\n        assertSameDate(\"2012-W48-6T10:15:30+0100\", \"week_date_time_no_millis\");\n        assertSameDate(\"2012-W48-6T10:15:30+01:00\", \"week_date_time_no_millis\");\n        assertSameDate(\"2012-W1-6T10:15:30Z\", \"week_date_time_no_millis\");\n        assertSameDate(\"2012-W1-6T10:15:30+0100\", \"week_date_time_no_millis\");\n        assertSameDate(\"2012-W1-6T10:15:30+01:00\", \"week_date_time_no_millis\");\n\n        assertSameDate(\"2012\", \"year\");\n        assertSameDate(\"1\", \"year\");\n        assertSameDate(\"-2000\", \"year\");\n\n        assertSameDate(\"2012-12\", \"year_month\");\n        assertSameDate(\"1-1\", \"year_month\");\n\n        assertSameDate(\"2012-12-31\", \"year_month_day\");\n        assertSameDate(\"1-12-31\", \"year_month_day\");\n        assertSameDate(\"2012-1-31\", \"year_month_day\");\n        assertSameDate(\"2012-12-1\", \"year_month_day\");\n\n        assertSameDate(\"2018\", \"week_year\");\n        assertSameDate(\"1\", \"week_year\");\n        assertSameDate(\"2017\", \"week_year\");\n\n        assertSameDate(\"2018-W29\", \"weekyear_week\");\n        assertSameDate(\"2018-W1\", \"weekyear_week\");\n\n        assertSameDate(\"2012-W31-5\", \"weekyear_week_day\");\n        assertSameDate(\"2012-W1-1\", \"weekyear_week_day\");\n    }\n","date":"2020-07-31 16:33:40","endLine":513,"groupId":"65382","id":25,"instanceNumber":1,"isCurCommit":0,"methodName":"testDuellingFormatsValidParsing","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/ea/bc4da859d3b6d2da26b34dc945a26f11bba9c8.src","preCode":"    public void testDuellingFormatsValidParsing() {\n        assertSameDate(\"1522332219\", \"epoch_second\");\n        assertSameDate(\"0\", \"epoch_second\");\n        assertSameDate(\"1\", \"epoch_second\");\n        assertSameDate(\"1522332219321\", \"epoch_millis\");\n        assertSameDate(\"0\", \"epoch_millis\");\n        assertSameDate(\"1\", \"epoch_millis\");\n\n        assertSameDate(\"20181126\", \"basic_date\");\n        assertSameDate(\"20181126T121212.123Z\", \"basic_date_time\");\n        assertSameDate(\"20181126T121212.123+10:00\", \"basic_date_time\");\n        assertSameDate(\"20181126T121212.123-0800\", \"basic_date_time\");\n\n        assertSameDate(\"20181126T121212Z\", \"basic_date_time_no_millis\");\n        assertSameDate(\"20181126T121212+01:00\", \"basic_date_time_no_millis\");\n        assertSameDate(\"20181126T121212+0100\", \"basic_date_time_no_millis\");\n        assertSameDate(\"2018363\", \"basic_ordinal_date\");\n        assertSameDate(\"2018363T121212.1Z\", \"basic_ordinal_date_time\");\n        assertSameDate(\"2018363T121212.123Z\", \"basic_ordinal_date_time\");\n        assertSameDate(\"2018363T121212.123456789Z\", \"basic_ordinal_date_time\");\n        assertSameDate(\"2018363T121212.123+0100\", \"basic_ordinal_date_time\");\n        assertSameDate(\"2018363T121212.123+01:00\", \"basic_ordinal_date_time\");\n        assertSameDate(\"2018363T121212Z\", \"basic_ordinal_date_time_no_millis\");\n        assertSameDate(\"2018363T121212+0100\", \"basic_ordinal_date_time_no_millis\");\n        assertSameDate(\"2018363T121212+01:00\", \"basic_ordinal_date_time_no_millis\");\n        assertSameDate(\"121212.1Z\", \"basic_time\");\n        assertSameDate(\"121212.123Z\", \"basic_time\");\n        assertSameDate(\"121212.123456789Z\", \"basic_time\");\n        assertSameDate(\"121212.1+0100\", \"basic_time\");\n        assertSameDate(\"121212.123+0100\", \"basic_time\");\n        assertSameDate(\"121212.123+01:00\", \"basic_time\");\n        assertSameDate(\"121212Z\", \"basic_time_no_millis\");\n        assertSameDate(\"121212+0100\", \"basic_time_no_millis\");\n        assertSameDate(\"121212+01:00\", \"basic_time_no_millis\");\n        assertSameDate(\"T121212.1Z\", \"basic_t_time\");\n        assertSameDate(\"T121212.123Z\", \"basic_t_time\");\n        assertSameDate(\"T121212.123456789Z\", \"basic_t_time\");\n        assertSameDate(\"T121212.1+0100\", \"basic_t_time\");\n        assertSameDate(\"T121212.123+0100\", \"basic_t_time\");\n        assertSameDate(\"T121212.123+01:00\", \"basic_t_time\");\n        assertSameDate(\"T121212Z\", \"basic_t_time_no_millis\");\n        assertSameDate(\"T121212+0100\", \"basic_t_time_no_millis\");\n        assertSameDate(\"T121212+01:00\", \"basic_t_time_no_millis\");\n        assertSameDate(\"2018W313\", \"basic_week_date\");\n        assertSameDate(\"1W313\", \"basic_week_date\");\n        assertSameDate(\"18W313\", \"basic_week_date\");\n        assertSameDate(\"2018W313T121212.1Z\", \"basic_week_date_time\");\n        assertSameDate(\"2018W313T121212.123Z\", \"basic_week_date_time\");\n        assertSameDate(\"2018W313T121212.123456789Z\", \"basic_week_date_time\");\n        assertSameDate(\"2018W313T121212.123+0100\", \"basic_week_date_time\");\n        assertSameDate(\"2018W313T121212.123+01:00\", \"basic_week_date_time\");\n        assertSameDate(\"2018W313T121212Z\", \"basic_week_date_time_no_millis\");\n        assertSameDate(\"2018W313T121212+0100\", \"basic_week_date_time_no_millis\");\n        assertSameDate(\"2018W313T121212+01:00\", \"basic_week_date_time_no_millis\");\n\n        assertSameDate(\"2018-12-31\", \"date\");\n        assertSameDate(\"18-5-6\", \"date\");\n        assertSameDate(\"10000-5-6\", \"date\");\n\n        assertSameDate(\"2018-12-31T12\", \"date_hour\");\n        assertSameDate(\"2018-12-31T8\", \"date_hour\");\n\n        assertSameDate(\"2018-12-31T12:12\", \"date_hour_minute\");\n        assertSameDate(\"2018-12-31T8:3\", \"date_hour_minute\");\n\n        assertSameDate(\"2018-12-31T12:12:12\", \"date_hour_minute_second\");\n        assertSameDate(\"2018-12-31T12:12:1\", \"date_hour_minute_second\");\n\n        assertSameDate(\"2018-12-31T12:12:12.1\", \"date_hour_minute_second_fraction\");\n        assertSameDate(\"2018-12-31T12:12:12.123\", \"date_hour_minute_second_fraction\");\n        assertSameDate(\"2018-12-31T12:12:12.123456789\", \"date_hour_minute_second_fraction\");\n        assertSameDate(\"2018-12-31T12:12:12.1\", \"date_hour_minute_second_millis\");\n        assertSameDate(\"2018-12-31T12:12:12.123\", \"date_hour_minute_second_millis\");\n        assertParseException(\"2018-12-31T12:12:12.123456789\", \"date_hour_minute_second_millis\");\n        assertSameDate(\"2018-12-31T12:12:12.1\", \"date_hour_minute_second_millis\");\n        assertSameDate(\"2018-12-31T12:12:12.1\", \"date_hour_minute_second_fraction\");\n\n        assertSameDate(\"2018-05\", \"date_optional_time\");\n        assertSameDate(\"2018-05-30\", \"date_optional_time\");\n        assertSameDate(\"2018-05-30T20\", \"date_optional_time\");\n        assertSameDate(\"2018-05-30T20:21\", \"date_optional_time\");\n        assertSameDate(\"2018-05-30T20:21:23\", \"date_optional_time\");\n        assertSameDate(\"2018-05-30T20:21:23.1\", \"date_optional_time\");\n        assertSameDate(\"2018-05-30T20:21:23.123\", \"date_optional_time\");\n        assertSameDate(\"2018-05-30T20:21:23.123456789\", \"date_optional_time\");\n        assertSameDate(\"2018-05-30T20:21:23.123Z\", \"date_optional_time\");\n        assertSameDate(\"2018-05-30T20:21:23.123456789Z\", \"date_optional_time\");\n        assertSameDate(\"2018-05-30T20:21:23.1+0100\", \"date_optional_time\");\n        assertSameDate(\"2018-05-30T20:21:23.123+0100\", \"date_optional_time\");\n        assertSameDate(\"2018-05-30T20:21:23.1+01:00\", \"date_optional_time\");\n        assertSameDate(\"2018-05-30T20:21:23.123+01:00\", \"date_optional_time\");\n        assertSameDate(\"2018-12-1\", \"date_optional_time\");\n        assertSameDate(\"2018-12-31T10:15:30\", \"date_optional_time\");\n        assertSameDate(\"2018-12-31T10:15:3\", \"date_optional_time\");\n        assertSameDate(\"2018-12-31T10:5:30\", \"date_optional_time\");\n        assertSameDate(\"2018-12-31T1:15:30\", \"date_optional_time\");\n\n        assertSameDate(\"2018-12-31T10:15:30.1Z\", \"date_time\");\n        assertSameDate(\"2018-12-31T10:15:30.123Z\", \"date_time\");\n        assertSameDate(\"2018-12-31T10:15:30.123456789Z\", \"date_time\");\n        assertSameDate(\"2018-12-31T10:15:30.1+0100\", \"date_time\");\n        assertSameDate(\"2018-12-31T10:15:30.123+0100\", \"date_time\");\n        assertSameDate(\"2018-12-31T10:15:30.123+01:00\", \"date_time\");\n        assertSameDate(\"2018-12-31T10:15:30.1+01:00\", \"date_time\");\n        assertSameDate(\"2018-12-31T10:15:30.11Z\", \"date_time\");\n        assertSameDate(\"2018-12-31T10:15:30.11+0100\", \"date_time\");\n        assertSameDate(\"2018-12-31T10:15:30.11+01:00\", \"date_time\");\n        assertSameDate(\"2018-12-31T10:15:3.1Z\", \"date_time\");\n        assertSameDate(\"2018-12-31T10:15:3.123Z\", \"date_time\");\n        assertSameDate(\"2018-12-31T10:15:3.123456789Z\", \"date_time\");\n        assertSameDate(\"2018-12-31T10:15:3.1+0100\", \"date_time\");\n        assertSameDate(\"2018-12-31T10:15:3.123+0100\", \"date_time\");\n        assertSameDate(\"2018-12-31T10:15:3.123+01:00\", \"date_time\");\n        assertSameDate(\"2018-12-31T10:15:3.1+01:00\", \"date_time\");\n\n        assertSameDate(\"2018-12-31T10:15:30Z\", \"date_time_no_millis\");\n        assertSameDate(\"2018-12-31T10:15:30+0100\", \"date_time_no_millis\");\n        assertSameDate(\"2018-12-31T10:15:30+01:00\", \"date_time_no_millis\");\n        assertSameDate(\"2018-12-31T10:5:30Z\", \"date_time_no_millis\");\n        assertSameDate(\"2018-12-31T10:5:30+0100\", \"date_time_no_millis\");\n        assertSameDate(\"2018-12-31T10:5:30+01:00\", \"date_time_no_millis\");\n        assertSameDate(\"2018-12-31T10:15:3Z\", \"date_time_no_millis\");\n        assertSameDate(\"2018-12-31T10:15:3+0100\", \"date_time_no_millis\");\n        assertSameDate(\"2018-12-31T10:15:3+01:00\", \"date_time_no_millis\");\n        assertSameDate(\"2018-12-31T1:15:30Z\", \"date_time_no_millis\");\n        assertSameDate(\"2018-12-31T1:15:30+0100\", \"date_time_no_millis\");\n        assertSameDate(\"2018-12-31T1:15:30+01:00\", \"date_time_no_millis\");\n\n        assertSameDate(\"12\", \"hour\");\n        assertSameDate(\"01\", \"hour\");\n        assertSameDate(\"1\", \"hour\");\n\n        assertSameDate(\"12:12\", \"hour_minute\");\n        assertSameDate(\"12:01\", \"hour_minute\");\n        assertSameDate(\"12:1\", \"hour_minute\");\n\n        assertSameDate(\"12:12:12\", \"hour_minute_second\");\n        assertSameDate(\"12:12:01\", \"hour_minute_second\");\n        assertSameDate(\"12:12:1\", \"hour_minute_second\");\n\n        assertSameDate(\"12:12:12.123\", \"hour_minute_second_fraction\");\n        assertSameDate(\"12:12:12.123456789\", \"hour_minute_second_fraction\");\n        assertSameDate(\"12:12:12.1\", \"hour_minute_second_fraction\");\n        assertParseException(\"12:12:12\", \"hour_minute_second_fraction\");\n        assertSameDate(\"12:12:12.123\", \"hour_minute_second_millis\");\n        assertParseException(\"12:12:12.123456789\", \"hour_minute_second_millis\");\n        assertSameDate(\"12:12:12.1\", \"hour_minute_second_millis\");\n        assertParseException(\"12:12:12\", \"hour_minute_second_millis\");\n\n        assertSameDate(\"2018-128\", \"ordinal_date\");\n        assertSameDate(\"2018-1\", \"ordinal_date\");\n\n        assertSameDate(\"2018-128T10:15:30.1Z\", \"ordinal_date_time\");\n        assertSameDate(\"2018-128T10:15:30.123Z\", \"ordinal_date_time\");\n        assertSameDate(\"2018-128T10:15:30.123456789Z\", \"ordinal_date_time\");\n        assertSameDate(\"2018-128T10:15:30.123+0100\", \"ordinal_date_time\");\n        assertSameDate(\"2018-128T10:15:30.123+01:00\", \"ordinal_date_time\");\n        assertSameDate(\"2018-1T10:15:30.1Z\", \"ordinal_date_time\");\n        assertSameDate(\"2018-1T10:15:30.123Z\", \"ordinal_date_time\");\n        assertSameDate(\"2018-1T10:15:30.123456789Z\", \"ordinal_date_time\");\n        assertSameDate(\"2018-1T10:15:30.123+0100\", \"ordinal_date_time\");\n        assertSameDate(\"2018-1T10:15:30.123+01:00\", \"ordinal_date_time\");\n\n        assertSameDate(\"2018-128T10:15:30Z\", \"ordinal_date_time_no_millis\");\n        assertSameDate(\"2018-128T10:15:30+0100\", \"ordinal_date_time_no_millis\");\n        assertSameDate(\"2018-128T10:15:30+01:00\", \"ordinal_date_time_no_millis\");\n        assertSameDate(\"2018-1T10:15:30Z\", \"ordinal_date_time_no_millis\");\n        assertSameDate(\"2018-1T10:15:30+0100\", \"ordinal_date_time_no_millis\");\n        assertSameDate(\"2018-1T10:15:30+01:00\", \"ordinal_date_time_no_millis\");\n\n        assertSameDate(\"10:15:30.1Z\", \"time\");\n        assertSameDate(\"10:15:30.123Z\", \"time\");\n        assertSameDate(\"10:15:30.123456789Z\", \"time\");\n        assertSameDate(\"10:15:30.123+0100\", \"time\");\n        assertSameDate(\"10:15:30.123+01:00\", \"time\");\n        assertSameDate(\"1:15:30.1Z\", \"time\");\n        assertSameDate(\"1:15:30.123Z\", \"time\");\n        assertSameDate(\"1:15:30.123+0100\", \"time\");\n        assertSameDate(\"1:15:30.123+01:00\", \"time\");\n        assertSameDate(\"10:1:30.1Z\", \"time\");\n        assertSameDate(\"10:1:30.123Z\", \"time\");\n        assertSameDate(\"10:1:30.123+0100\", \"time\");\n        assertSameDate(\"10:1:30.123+01:00\", \"time\");\n        assertSameDate(\"10:15:3.1Z\", \"time\");\n        assertSameDate(\"10:15:3.123Z\", \"time\");\n        assertSameDate(\"10:15:3.123+0100\", \"time\");\n        assertSameDate(\"10:15:3.123+01:00\", \"time\");\n        assertParseException(\"10:15:3.1\", \"time\");\n        assertParseException(\"10:15:3Z\", \"time\");\n\n        assertSameDate(\"10:15:30Z\", \"time_no_millis\");\n        assertSameDate(\"10:15:30+0100\", \"time_no_millis\");\n        assertSameDate(\"10:15:30+01:00\", \"time_no_millis\");\n        assertSameDate(\"01:15:30Z\", \"time_no_millis\");\n        assertSameDate(\"01:15:30+0100\", \"time_no_millis\");\n        assertSameDate(\"01:15:30+01:00\", \"time_no_millis\");\n        assertSameDate(\"1:15:30Z\", \"time_no_millis\");\n        assertSameDate(\"1:15:30+0100\", \"time_no_millis\");\n        assertSameDate(\"1:15:30+01:00\", \"time_no_millis\");\n        assertSameDate(\"10:5:30Z\", \"time_no_millis\");\n        assertSameDate(\"10:5:30+0100\", \"time_no_millis\");\n        assertSameDate(\"10:5:30+01:00\", \"time_no_millis\");\n        assertSameDate(\"10:15:3Z\", \"time_no_millis\");\n        assertSameDate(\"10:15:3+0100\", \"time_no_millis\");\n        assertSameDate(\"10:15:3+01:00\", \"time_no_millis\");\n        assertParseException(\"10:15:3\", \"time_no_millis\");\n\n        assertSameDate(\"T10:15:30.1Z\", \"t_time\");\n        assertSameDate(\"T10:15:30.123Z\", \"t_time\");\n        assertSameDate(\"T10:15:30.123456789Z\", \"t_time\");\n        assertSameDate(\"T10:15:30.1+0100\", \"t_time\");\n        assertSameDate(\"T10:15:30.123+0100\", \"t_time\");\n        assertSameDate(\"T10:15:30.123+01:00\", \"t_time\");\n        assertSameDate(\"T10:15:30.1+01:00\", \"t_time\");\n        assertSameDate(\"T1:15:30.123Z\", \"t_time\");\n        assertSameDate(\"T1:15:30.123+0100\", \"t_time\");\n        assertSameDate(\"T1:15:30.123+01:00\", \"t_time\");\n        assertSameDate(\"T10:1:30.123Z\", \"t_time\");\n        assertSameDate(\"T10:1:30.123+0100\", \"t_time\");\n        assertSameDate(\"T10:1:30.123+01:00\", \"t_time\");\n        assertSameDate(\"T10:15:3.123Z\", \"t_time\");\n        assertSameDate(\"T10:15:3.123+0100\", \"t_time\");\n        assertSameDate(\"T10:15:3.123+01:00\", \"t_time\");\n        assertParseException(\"T10:15:3.1\", \"t_time\");\n        assertParseException(\"T10:15:3Z\", \"t_time\");\n\n        assertSameDate(\"T10:15:30Z\", \"t_time_no_millis\");\n        assertSameDate(\"T10:15:30+0100\", \"t_time_no_millis\");\n        assertSameDate(\"T10:15:30+01:00\", \"t_time_no_millis\");\n        assertSameDate(\"T1:15:30Z\", \"t_time_no_millis\");\n        assertSameDate(\"T1:15:30+0100\", \"t_time_no_millis\");\n        assertSameDate(\"T1:15:30+01:00\", \"t_time_no_millis\");\n        assertSameDate(\"T10:1:30Z\", \"t_time_no_millis\");\n        assertSameDate(\"T10:1:30+0100\", \"t_time_no_millis\");\n        assertSameDate(\"T10:1:30+01:00\", \"t_time_no_millis\");\n        assertSameDate(\"T10:15:3Z\", \"t_time_no_millis\");\n        assertSameDate(\"T10:15:3+0100\", \"t_time_no_millis\");\n        assertSameDate(\"T10:15:3+01:00\", \"t_time_no_millis\");\n        assertParseException(\"T10:15:3\", \"t_time_no_millis\");\n\n        assertSameDate(\"2012-W48-6\", \"week_date\");\n        assertSameDate(\"2012-W01-6\", \"week_date\");\n        assertSameDate(\"2012-W1-6\", \"week_date\");\n        \r\n        assertJodaParseException(\"2012-W1-8\", \"week_date\",\n            \"Cannot parse \\\"2012-W1-8\\\": Value 8 for dayOfWeek must be in the range [1,7]\");\n        assertJavaTimeParseException(\"2012-W1-8\", \"week_date\");\n\n        assertSameDate(\"2012-W48-6T10:15:30.1Z\", \"week_date_time\");\n        assertSameDate(\"2012-W48-6T10:15:30.123Z\", \"week_date_time\");\n        assertSameDate(\"2012-W48-6T10:15:30.123456789Z\", \"week_date_time\");\n        assertSameDate(\"2012-W48-6T10:15:30.1+0100\", \"week_date_time\");\n        assertSameDate(\"2012-W48-6T10:15:30.123+0100\", \"week_date_time\");\n        assertSameDate(\"2012-W48-6T10:15:30.1+01:00\", \"week_date_time\");\n        assertSameDate(\"2012-W48-6T10:15:30.123+01:00\", \"week_date_time\");\n        assertSameDate(\"2012-W1-6T10:15:30.1Z\", \"week_date_time\");\n        assertSameDate(\"2012-W1-6T10:15:30.123Z\", \"week_date_time\");\n        assertSameDate(\"2012-W1-6T10:15:30.1+0100\", \"week_date_time\");\n        assertSameDate(\"2012-W1-6T10:15:30.123+0100\", \"week_date_time\");\n        assertSameDate(\"2012-W1-6T10:15:30.1+01:00\", \"week_date_time\");\n        assertSameDate(\"2012-W1-6T10:15:30.123+01:00\", \"week_date_time\");\n\n        assertSameDate(\"2012-W48-6T10:15:30Z\", \"week_date_time_no_millis\");\n        assertSameDate(\"2012-W48-6T10:15:30+0100\", \"week_date_time_no_millis\");\n        assertSameDate(\"2012-W48-6T10:15:30+01:00\", \"week_date_time_no_millis\");\n        assertSameDate(\"2012-W1-6T10:15:30Z\", \"week_date_time_no_millis\");\n        assertSameDate(\"2012-W1-6T10:15:30+0100\", \"week_date_time_no_millis\");\n        assertSameDate(\"2012-W1-6T10:15:30+01:00\", \"week_date_time_no_millis\");\n\n        assertSameDate(\"2012\", \"year\");\n        assertSameDate(\"1\", \"year\");\n        assertSameDate(\"-2000\", \"year\");\n\n        assertSameDate(\"2012-12\", \"yearMonth\");\n        assertSameDate(\"1-1\", \"yearMonth\");\n\n        assertSameDate(\"2012-12-31\", \"yearMonthDay\");\n        assertSameDate(\"1-12-31\", \"yearMonthDay\");\n        assertSameDate(\"2012-1-31\", \"yearMonthDay\");\n        assertSameDate(\"2012-12-1\", \"yearMonthDay\");\n\n        assertSameDate(\"2018\", \"week_year\");\n        assertSameDate(\"1\", \"week_year\");\n        assertSameDate(\"2017\", \"week_year\");\n\n        assertSameDate(\"2018-W29\", \"weekyear_week\");\n        assertSameDate(\"2018-W1\", \"weekyear_week\");\n\n        assertSameDate(\"2012-W31-5\", \"weekyear_week_day\");\n        assertSameDate(\"2012-W1-1\", \"weekyear_week_day\");\n    }\n","realPath":"server/src/test/java/org/elasticsearch/common/joda/JavaJodaTimeDuellingTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":223,"status":"M"},{"authorDate":"2019-04-02 16:26:54","commitOrder":13,"curCode":"    public void testDuelingStrictParsing() {\n        assertSameDate(\"2018W313\", \"strict_basic_week_date\");\n        assertParseException(\"18W313\", \"strict_basic_week_date\");\n        assertSameDate(\"2018W313T121212.1Z\", \"strict_basic_week_date_time\");\n        assertSameDate(\"2018W313T121212.123Z\", \"strict_basic_week_date_time\");\n        assertSameDate(\"2018W313T121212.123456789Z\", \"strict_basic_week_date_time\");\n        assertSameDate(\"2018W313T121212.1+0100\", \"strict_basic_week_date_time\");\n        assertSameDate(\"2018W313T121212.123+0100\", \"strict_basic_week_date_time\");\n        assertSameDate(\"2018W313T121212.1+01:00\", \"strict_basic_week_date_time\");\n        assertSameDate(\"2018W313T121212.123+01:00\", \"strict_basic_week_date_time\");\n        assertParseException(\"2018W313T12128.123Z\", \"strict_basic_week_date_time\");\n        assertParseException(\"2018W313T12128.123456789Z\", \"strict_basic_week_date_time\");\n        assertParseException(\"2018W313T81212.123Z\", \"strict_basic_week_date_time\");\n        assertParseException(\"2018W313T12812.123Z\", \"strict_basic_week_date_time\");\n        assertParseException(\"2018W313T12812.1Z\", \"strict_basic_week_date_time\");\n        assertSameDate(\"2018W313T121212Z\", \"strict_basic_week_date_time_no_millis\");\n        assertSameDate(\"2018W313T121212+0100\", \"strict_basic_week_date_time_no_millis\");\n        assertSameDate(\"2018W313T121212+01:00\", \"strict_basic_week_date_time_no_millis\");\n        assertParseException(\"2018W313T12128Z\", \"strict_basic_week_date_time_no_millis\");\n        assertParseException(\"2018W313T12128+0100\", \"strict_basic_week_date_time_no_millis\");\n        assertParseException(\"2018W313T12128+01:00\", \"strict_basic_week_date_time_no_millis\");\n        assertParseException(\"2018W313T81212Z\", \"strict_basic_week_date_time_no_millis\");\n        assertParseException(\"2018W313T81212+0100\", \"strict_basic_week_date_time_no_millis\");\n        assertParseException(\"2018W313T81212+01:00\", \"strict_basic_week_date_time_no_millis\");\n        assertParseException(\"2018W313T12812Z\", \"strict_basic_week_date_time_no_millis\");\n        assertParseException(\"2018W313T12812+0100\", \"strict_basic_week_date_time_no_millis\");\n        assertParseException(\"2018W313T12812+01:00\", \"strict_basic_week_date_time_no_millis\");\n        assertSameDate(\"2018-12-31\", \"strict_date\");\n        assertParseException(\"10000-12-31\", \"strict_date\");\n        assertParseException(\"2018-8-31\", \"strict_date\");\n        assertSameDate(\"2018-12-31T12\", \"strict_date_hour\");\n        assertParseException(\"2018-12-31T8\", \"strict_date_hour\");\n        assertSameDate(\"2018-12-31T12:12\", \"strict_date_hour_minute\");\n        assertParseException(\"2018-12-31T8:3\", \"strict_date_hour_minute\");\n        assertSameDate(\"2018-12-31T12:12:12\", \"strict_date_hour_minute_second\");\n        assertParseException(\"2018-12-31T12:12:1\", \"strict_date_hour_minute_second\");\n        assertSameDate(\"2018-12-31T12:12:12.1\", \"strict_date_hour_minute_second_fraction\");\n        assertSameDate(\"2018-12-31T12:12:12.123\", \"strict_date_hour_minute_second_fraction\");\n        assertSameDate(\"2018-12-31T12:12:12.123456789\", \"strict_date_hour_minute_second_fraction\");\n        assertSameDate(\"2018-12-31T12:12:12.123\", \"strict_date_hour_minute_second_millis\");\n        assertSameDate(\"2018-12-31T12:12:12.1\", \"strict_date_hour_minute_second_millis\");\n        assertSameDate(\"2018-12-31T12:12:12.1\", \"strict_date_hour_minute_second_fraction\");\n        assertParseException(\"2018-12-31T12:12:12\", \"strict_date_hour_minute_second_millis\");\n        assertParseException(\"2018-12-31T12:12:12\", \"strict_date_hour_minute_second_fraction\");\n        assertSameDate(\"2018-12-31\", \"strict_date_optional_time\");\n        assertParseException(\"2018-12-1\", \"strict_date_optional_time\");\n        assertParseException(\"2018-1-31\", \"strict_date_optional_time\");\n        assertParseException(\"10000-01-31\", \"strict_date_optional_time\");\n        assertSameDate(\"2010-01-05T02:00\", \"strict_date_optional_time\");\n        assertSameDate(\"2018-12-31T10:15:30\", \"strict_date_optional_time\");\n        assertSameDate(\"2018-12-31T10:15:30Z\", \"strict_date_optional_time\");\n        assertSameDate(\"2018-12-31T10:15:30+0100\", \"strict_date_optional_time\");\n        assertSameDate(\"2018-12-31T10:15:30+01:00\", \"strict_date_optional_time\");\n        assertParseException(\"2018-12-31T10:15:3\", \"strict_date_optional_time\");\n        assertParseException(\"2018-12-31T10:5:30\", \"strict_date_optional_time\");\n        assertParseException(\"2018-12-31T9:15:30\", \"strict_date_optional_time\");\n        assertSameDate(\"2015-01-04T00:00Z\", \"strict_date_optional_time\");\n        assertSameDate(\"2018-12-31T10:15:30.1Z\", \"strict_date_time\");\n        assertSameDate(\"2018-12-31T10:15:30.123Z\", \"strict_date_time\");\n        assertSameDate(\"2018-12-31T10:15:30.123456789Z\", \"strict_date_time\");\n        assertSameDate(\"2018-12-31T10:15:30.1+0100\", \"strict_date_time\");\n        assertSameDate(\"2018-12-31T10:15:30.123+0100\", \"strict_date_time\");\n        assertSameDate(\"2018-12-31T10:15:30.1+01:00\", \"strict_date_time\");\n        assertSameDate(\"2018-12-31T10:15:30.123+01:00\", \"strict_date_time\");\n        assertSameDate(\"2018-12-31T10:15:30.11Z\", \"strict_date_time\");\n        assertSameDate(\"2018-12-31T10:15:30.11+0100\", \"strict_date_time\");\n        assertSameDate(\"2018-12-31T10:15:30.11+01:00\", \"strict_date_time\");\n        assertParseException(\"2018-12-31T10:15:3.123Z\", \"strict_date_time\");\n        assertParseException(\"2018-12-31T10:5:30.123Z\", \"strict_date_time\");\n        assertParseException(\"2018-12-31T1:15:30.123Z\", \"strict_date_time\");\n        assertSameDate(\"2018-12-31T10:15:30Z\", \"strict_date_time_no_millis\");\n        assertSameDate(\"2018-12-31T10:15:30+0100\", \"strict_date_time_no_millis\");\n        assertSameDate(\"2018-12-31T10:15:30+01:00\", \"strict_date_time_no_millis\");\n        assertParseException(\"2018-12-31T10:5:30Z\", \"strict_date_time_no_millis\");\n        assertParseException(\"2018-12-31T10:15:3Z\", \"strict_date_time_no_millis\");\n        assertParseException(\"2018-12-31T1:15:30Z\", \"strict_date_time_no_millis\");\n        assertSameDate(\"12\", \"strict_hour\");\n        assertSameDate(\"01\", \"strict_hour\");\n        assertParseException(\"1\", \"strict_hour\");\n        assertSameDate(\"12:12\", \"strict_hour_minute\");\n        assertSameDate(\"12:01\", \"strict_hour_minute\");\n        assertParseException(\"12:1\", \"strict_hour_minute\");\n        assertSameDate(\"12:12:12\", \"strict_hour_minute_second\");\n        assertSameDate(\"12:12:01\", \"strict_hour_minute_second\");\n        assertParseException(\"12:12:1\", \"strict_hour_minute_second\");\n        assertSameDate(\"12:12:12.123\", \"strict_hour_minute_second_fraction\");\n        assertSameDate(\"12:12:12.123456789\", \"strict_hour_minute_second_fraction\");\n        assertSameDate(\"12:12:12.1\", \"strict_hour_minute_second_fraction\");\n        assertParseException(\"12:12:12\", \"strict_hour_minute_second_fraction\");\n        assertSameDate(\"12:12:12.123\", \"strict_hour_minute_second_millis\");\n        assertSameDate(\"12:12:12.1\", \"strict_hour_minute_second_millis\");\n        assertParseException(\"12:12:12\", \"strict_hour_minute_second_millis\");\n        assertSameDate(\"2018-128\", \"strict_ordinal_date\");\n        assertParseException(\"2018-1\", \"strict_ordinal_date\");\n\n        assertSameDate(\"2018-128T10:15:30.1Z\", \"strict_ordinal_date_time\");\n        assertSameDate(\"2018-128T10:15:30.123Z\", \"strict_ordinal_date_time\");\n        assertSameDate(\"2018-128T10:15:30.123456789Z\", \"strict_ordinal_date_time\");\n        assertSameDate(\"2018-128T10:15:30.1+0100\", \"strict_ordinal_date_time\");\n        assertSameDate(\"2018-128T10:15:30.123+0100\", \"strict_ordinal_date_time\");\n        assertSameDate(\"2018-128T10:15:30.1+01:00\", \"strict_ordinal_date_time\");\n        assertSameDate(\"2018-128T10:15:30.123+01:00\", \"strict_ordinal_date_time\");\n        assertParseException(\"2018-1T10:15:30.123Z\", \"strict_ordinal_date_time\");\n\n        assertSameDate(\"2018-128T10:15:30Z\", \"strict_ordinal_date_time_no_millis\");\n        assertSameDate(\"2018-128T10:15:30+0100\", \"strict_ordinal_date_time_no_millis\");\n        assertSameDate(\"2018-128T10:15:30+01:00\", \"strict_ordinal_date_time_no_millis\");\n        assertParseException(\"2018-1T10:15:30Z\", \"strict_ordinal_date_time_no_millis\");\n\n        assertSameDate(\"10:15:30.1Z\", \"strict_time\");\n        assertSameDate(\"10:15:30.123Z\", \"strict_time\");\n        assertSameDate(\"10:15:30.123456789Z\", \"strict_time\");\n        assertSameDate(\"10:15:30.123+0100\", \"strict_time\");\n        assertSameDate(\"10:15:30.123+01:00\", \"strict_time\");\n        assertParseException(\"1:15:30.123Z\", \"strict_time\");\n        assertParseException(\"10:1:30.123Z\", \"strict_time\");\n        assertParseException(\"10:15:3.123Z\", \"strict_time\");\n        assertParseException(\"10:15:3.1\", \"strict_time\");\n        assertParseException(\"10:15:3Z\", \"strict_time\");\n\n        assertSameDate(\"10:15:30Z\", \"strict_time_no_millis\");\n        assertSameDate(\"10:15:30+0100\", \"strict_time_no_millis\");\n        assertSameDate(\"10:15:30+01:00\", \"strict_time_no_millis\");\n        assertSameDate(\"01:15:30Z\", \"strict_time_no_millis\");\n        assertSameDate(\"01:15:30+0100\", \"strict_time_no_millis\");\n        assertSameDate(\"01:15:30+01:00\", \"strict_time_no_millis\");\n        assertParseException(\"1:15:30Z\", \"strict_time_no_millis\");\n        assertParseException(\"10:5:30Z\", \"strict_time_no_millis\");\n        assertParseException(\"10:15:3Z\", \"strict_time_no_millis\");\n        assertParseException(\"10:15:3\", \"strict_time_no_millis\");\n\n        assertSameDate(\"T10:15:30.1Z\", \"strict_t_time\");\n        assertSameDate(\"T10:15:30.123Z\", \"strict_t_time\");\n        assertSameDate(\"T10:15:30.123456789Z\", \"strict_t_time\");\n        assertSameDate(\"T10:15:30.1+0100\", \"strict_t_time\");\n        assertSameDate(\"T10:15:30.123+0100\", \"strict_t_time\");\n        assertSameDate(\"T10:15:30.1+01:00\", \"strict_t_time\");\n        assertSameDate(\"T10:15:30.123+01:00\", \"strict_t_time\");\n        assertParseException(\"T1:15:30.123Z\", \"strict_t_time\");\n        assertParseException(\"T10:1:30.123Z\", \"strict_t_time\");\n        assertParseException(\"T10:15:3.123Z\", \"strict_t_time\");\n        assertParseException(\"T10:15:3.1\", \"strict_t_time\");\n        assertParseException(\"T10:15:3Z\", \"strict_t_time\");\n\n        assertSameDate(\"T10:15:30Z\", \"strict_t_time_no_millis\");\n        assertSameDate(\"T10:15:30+0100\", \"strict_t_time_no_millis\");\n        assertSameDate(\"T10:15:30+01:00\", \"strict_t_time_no_millis\");\n        assertParseException(\"T1:15:30Z\", \"strict_t_time_no_millis\");\n        assertParseException(\"T10:1:30Z\", \"strict_t_time_no_millis\");\n        assertParseException(\"T10:15:3Z\", \"strict_t_time_no_millis\");\n        assertParseException(\"T10:15:3\", \"strict_t_time_no_millis\");\n\n        assertSameDate(\"2012-W48-6\", \"strict_week_date\");\n        assertSameDate(\"2012-W01-6\", \"strict_week_date\");\n        assertParseException(\"2012-W1-6\", \"strict_week_date\");\n        assertParseException(\"2012-W1-8\", \"strict_week_date\");\n\n        assertSameDate(\"2012-W48-6\", \"strict_week_date\");\n        assertSameDate(\"2012-W01-6\", \"strict_week_date\");\n        assertParseException(\"2012-W1-6\", \"strict_week_date\");\n        \r\n        assertJodaParseException(\"2012-W01-8\", \"strict_week_date\",\n            \"Cannot parse \\\"2012-W01-8\\\": Value 8 for dayOfWeek must be in the range [1,7]\");\n        assertJavaTimeParseException(\"2012-W01-8\", \"strict_week_date\");\n\n        assertSameDate(\"2012-W48-6T10:15:30.1Z\", \"strict_week_date_time\");\n        assertSameDate(\"2012-W48-6T10:15:30.123Z\", \"strict_week_date_time\");\n        assertSameDate(\"2012-W48-6T10:15:30.123456789Z\", \"strict_week_date_time\");\n        assertSameDate(\"2012-W48-6T10:15:30.1+0100\", \"strict_week_date_time\");\n        assertSameDate(\"2012-W48-6T10:15:30.123+0100\", \"strict_week_date_time\");\n        assertSameDate(\"2012-W48-6T10:15:30.1+01:00\", \"strict_week_date_time\");\n        assertSameDate(\"2012-W48-6T10:15:30.123+01:00\", \"strict_week_date_time\");\n        assertParseException(\"2012-W1-6T10:15:30.123Z\", \"strict_week_date_time\");\n\n        assertSameDate(\"2012-W48-6T10:15:30Z\", \"strict_week_date_time_no_millis\");\n        assertSameDate(\"2012-W48-6T10:15:30+0100\", \"strict_week_date_time_no_millis\");\n        assertSameDate(\"2012-W48-6T10:15:30+01:00\", \"strict_week_date_time_no_millis\");\n        assertParseException(\"2012-W1-6T10:15:30Z\", \"strict_week_date_time_no_millis\");\n\n        assertSameDate(\"2012\", \"strict_year\");\n        assertParseException(\"1\", \"strict_year\");\n        assertSameDate(\"-2000\", \"strict_year\");\n\n        assertSameDate(\"2012-12\", \"strict_year_month\");\n        assertParseException(\"1-1\", \"strict_year_month\");\n\n        assertSameDate(\"2012-12-31\", \"strict_year_month_day\");\n        assertParseException(\"1-12-31\", \"strict_year_month_day\");\n        assertParseException(\"2012-1-31\", \"strict_year_month_day\");\n        assertParseException(\"2012-12-1\", \"strict_year_month_day\");\n\n        assertSameDate(\"2018\", \"strict_weekyear\");\n        assertParseException(\"1\", \"strict_weekyear\");\n\n        assertSameDate(\"2018\", \"strict_weekyear\");\n        assertSameDate(\"2017\", \"strict_weekyear\");\n        assertParseException(\"1\", \"strict_weekyear\");\n\n        assertSameDate(\"2018-W29\", \"strict_weekyear_week\");\n        assertSameDate(\"2018-W01\", \"strict_weekyear_week\");\n        assertParseException(\"2018-W1\", \"strict_weekyear_week\");\n\n        assertSameDate(\"2012-W31-5\", \"strict_weekyear_week_day\");\n        assertParseException(\"2012-W1-1\", \"strict_weekyear_week_day\");\n    }\n","date":"2019-04-02 16:26:54","endLine":593,"groupId":"47697","id":26,"instanceNumber":2,"isCurCommit":0,"methodName":"testDuelingStrictParsing","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/c3/a541fe87ec2e42bf47d0f440013c5534ba476c.src","preCode":"    public void testDuelingStrictParsing() {\n        assertSameDate(\"2018W313\", \"strict_basic_week_date\");\n        assertParseException(\"18W313\", \"strict_basic_week_date\");\n        assertSameDate(\"2018W313T121212.1Z\", \"strict_basic_week_date_time\");\n        assertSameDate(\"2018W313T121212.123Z\", \"strict_basic_week_date_time\");\n        assertSameDate(\"2018W313T121212.123456789Z\", \"strict_basic_week_date_time\");\n        assertSameDate(\"2018W313T121212.1+0100\", \"strict_basic_week_date_time\");\n        assertSameDate(\"2018W313T121212.123+0100\", \"strict_basic_week_date_time\");\n        assertSameDate(\"2018W313T121212.1+01:00\", \"strict_basic_week_date_time\");\n        assertSameDate(\"2018W313T121212.123+01:00\", \"strict_basic_week_date_time\");\n        assertParseException(\"2018W313T12128.123Z\", \"strict_basic_week_date_time\");\n        assertParseException(\"2018W313T12128.123456789Z\", \"strict_basic_week_date_time\");\n        assertParseException(\"2018W313T81212.123Z\", \"strict_basic_week_date_time\");\n        assertParseException(\"2018W313T12812.123Z\", \"strict_basic_week_date_time\");\n        assertParseException(\"2018W313T12812.1Z\", \"strict_basic_week_date_time\");\n        assertSameDate(\"2018W313T121212Z\", \"strict_basic_week_date_time_no_millis\");\n        assertSameDate(\"2018W313T121212+0100\", \"strict_basic_week_date_time_no_millis\");\n        assertSameDate(\"2018W313T121212+01:00\", \"strict_basic_week_date_time_no_millis\");\n        assertParseException(\"2018W313T12128Z\", \"strict_basic_week_date_time_no_millis\");\n        assertParseException(\"2018W313T12128+0100\", \"strict_basic_week_date_time_no_millis\");\n        assertParseException(\"2018W313T12128+01:00\", \"strict_basic_week_date_time_no_millis\");\n        assertParseException(\"2018W313T81212Z\", \"strict_basic_week_date_time_no_millis\");\n        assertParseException(\"2018W313T81212+0100\", \"strict_basic_week_date_time_no_millis\");\n        assertParseException(\"2018W313T81212+01:00\", \"strict_basic_week_date_time_no_millis\");\n        assertParseException(\"2018W313T12812Z\", \"strict_basic_week_date_time_no_millis\");\n        assertParseException(\"2018W313T12812+0100\", \"strict_basic_week_date_time_no_millis\");\n        assertParseException(\"2018W313T12812+01:00\", \"strict_basic_week_date_time_no_millis\");\n        assertSameDate(\"2018-12-31\", \"strict_date\");\n        assertParseException(\"10000-12-31\", \"strict_date\");\n        assertParseException(\"2018-8-31\", \"strict_date\");\n        assertSameDate(\"2018-12-31T12\", \"strict_date_hour\");\n        assertParseException(\"2018-12-31T8\", \"strict_date_hour\");\n        assertSameDate(\"2018-12-31T12:12\", \"strict_date_hour_minute\");\n        assertParseException(\"2018-12-31T8:3\", \"strict_date_hour_minute\");\n        assertSameDate(\"2018-12-31T12:12:12\", \"strict_date_hour_minute_second\");\n        assertParseException(\"2018-12-31T12:12:1\", \"strict_date_hour_minute_second\");\n        assertSameDate(\"2018-12-31T12:12:12.1\", \"strict_date_hour_minute_second_fraction\");\n        assertSameDate(\"2018-12-31T12:12:12.123\", \"strict_date_hour_minute_second_fraction\");\n        assertSameDate(\"2018-12-31T12:12:12.123456789\", \"strict_date_hour_minute_second_fraction\");\n        assertSameDate(\"2018-12-31T12:12:12.123\", \"strict_date_hour_minute_second_millis\");\n        assertSameDate(\"2018-12-31T12:12:12.1\", \"strict_date_hour_minute_second_millis\");\n        assertSameDate(\"2018-12-31T12:12:12.1\", \"strict_date_hour_minute_second_fraction\");\n        assertParseException(\"2018-12-31T12:12:12\", \"strict_date_hour_minute_second_millis\");\n        assertParseException(\"2018-12-31T12:12:12\", \"strict_date_hour_minute_second_fraction\");\n        assertSameDate(\"2018-12-31\", \"strict_date_optional_time\");\n        assertParseException(\"2018-12-1\", \"strict_date_optional_time\");\n        assertParseException(\"2018-1-31\", \"strict_date_optional_time\");\n        assertParseException(\"10000-01-31\", \"strict_date_optional_time\");\n        assertSameDate(\"2010-01-05T02:00\", \"strict_date_optional_time\");\n        assertSameDate(\"2018-12-31T10:15:30\", \"strict_date_optional_time\");\n        assertSameDate(\"2018-12-31T10:15:30Z\", \"strict_date_optional_time\");\n        assertSameDate(\"2018-12-31T10:15:30+0100\", \"strict_date_optional_time\");\n        assertSameDate(\"2018-12-31T10:15:30+01:00\", \"strict_date_optional_time\");\n        assertParseException(\"2018-12-31T10:15:3\", \"strict_date_optional_time\");\n        assertParseException(\"2018-12-31T10:5:30\", \"strict_date_optional_time\");\n        assertParseException(\"2018-12-31T9:15:30\", \"strict_date_optional_time\");\n        assertSameDate(\"2015-01-04T00:00Z\", \"strict_date_optional_time\");\n        assertSameDate(\"2018-12-31T10:15:30.1Z\", \"strict_date_time\");\n        assertSameDate(\"2018-12-31T10:15:30.123Z\", \"strict_date_time\");\n        assertSameDate(\"2018-12-31T10:15:30.123456789Z\", \"strict_date_time\");\n        assertSameDate(\"2018-12-31T10:15:30.1+0100\", \"strict_date_time\");\n        assertSameDate(\"2018-12-31T10:15:30.123+0100\", \"strict_date_time\");\n        assertSameDate(\"2018-12-31T10:15:30.1+01:00\", \"strict_date_time\");\n        assertSameDate(\"2018-12-31T10:15:30.123+01:00\", \"strict_date_time\");\n        assertSameDate(\"2018-12-31T10:15:30.11Z\", \"strict_date_time\");\n        assertSameDate(\"2018-12-31T10:15:30.11+0100\", \"strict_date_time\");\n        assertSameDate(\"2018-12-31T10:15:30.11+01:00\", \"strict_date_time\");\n        assertParseException(\"2018-12-31T10:15:3.123Z\", \"strict_date_time\");\n        assertParseException(\"2018-12-31T10:5:30.123Z\", \"strict_date_time\");\n        assertParseException(\"2018-12-31T1:15:30.123Z\", \"strict_date_time\");\n        assertSameDate(\"2018-12-31T10:15:30Z\", \"strict_date_time_no_millis\");\n        assertSameDate(\"2018-12-31T10:15:30+0100\", \"strict_date_time_no_millis\");\n        assertSameDate(\"2018-12-31T10:15:30+01:00\", \"strict_date_time_no_millis\");\n        assertParseException(\"2018-12-31T10:5:30Z\", \"strict_date_time_no_millis\");\n        assertParseException(\"2018-12-31T10:15:3Z\", \"strict_date_time_no_millis\");\n        assertParseException(\"2018-12-31T1:15:30Z\", \"strict_date_time_no_millis\");\n        assertSameDate(\"12\", \"strict_hour\");\n        assertSameDate(\"01\", \"strict_hour\");\n        assertParseException(\"1\", \"strict_hour\");\n        assertSameDate(\"12:12\", \"strict_hour_minute\");\n        assertSameDate(\"12:01\", \"strict_hour_minute\");\n        assertParseException(\"12:1\", \"strict_hour_minute\");\n        assertSameDate(\"12:12:12\", \"strict_hour_minute_second\");\n        assertSameDate(\"12:12:01\", \"strict_hour_minute_second\");\n        assertParseException(\"12:12:1\", \"strict_hour_minute_second\");\n        assertSameDate(\"12:12:12.123\", \"strict_hour_minute_second_fraction\");\n        assertSameDate(\"12:12:12.123456789\", \"strict_hour_minute_second_fraction\");\n        assertSameDate(\"12:12:12.1\", \"strict_hour_minute_second_fraction\");\n        assertParseException(\"12:12:12\", \"strict_hour_minute_second_fraction\");\n        assertSameDate(\"12:12:12.123\", \"strict_hour_minute_second_millis\");\n        assertSameDate(\"12:12:12.1\", \"strict_hour_minute_second_millis\");\n        assertParseException(\"12:12:12\", \"strict_hour_minute_second_millis\");\n        assertSameDate(\"2018-128\", \"strict_ordinal_date\");\n        assertParseException(\"2018-1\", \"strict_ordinal_date\");\n\n        assertSameDate(\"2018-128T10:15:30.1Z\", \"strict_ordinal_date_time\");\n        assertSameDate(\"2018-128T10:15:30.123Z\", \"strict_ordinal_date_time\");\n        assertSameDate(\"2018-128T10:15:30.123456789Z\", \"strict_ordinal_date_time\");\n        assertSameDate(\"2018-128T10:15:30.1+0100\", \"strict_ordinal_date_time\");\n        assertSameDate(\"2018-128T10:15:30.123+0100\", \"strict_ordinal_date_time\");\n        assertSameDate(\"2018-128T10:15:30.1+01:00\", \"strict_ordinal_date_time\");\n        assertSameDate(\"2018-128T10:15:30.123+01:00\", \"strict_ordinal_date_time\");\n        assertParseException(\"2018-1T10:15:30.123Z\", \"strict_ordinal_date_time\");\n\n        assertSameDate(\"2018-128T10:15:30Z\", \"strict_ordinal_date_time_no_millis\");\n        assertSameDate(\"2018-128T10:15:30+0100\", \"strict_ordinal_date_time_no_millis\");\n        assertSameDate(\"2018-128T10:15:30+01:00\", \"strict_ordinal_date_time_no_millis\");\n        assertParseException(\"2018-1T10:15:30Z\", \"strict_ordinal_date_time_no_millis\");\n\n        assertSameDate(\"10:15:30.1Z\", \"strict_time\");\n        assertSameDate(\"10:15:30.123Z\", \"strict_time\");\n        assertSameDate(\"10:15:30.123456789Z\", \"strict_time\");\n        assertSameDate(\"10:15:30.123+0100\", \"strict_time\");\n        assertSameDate(\"10:15:30.123+01:00\", \"strict_time\");\n        assertParseException(\"1:15:30.123Z\", \"strict_time\");\n        assertParseException(\"10:1:30.123Z\", \"strict_time\");\n        assertParseException(\"10:15:3.123Z\", \"strict_time\");\n        assertParseException(\"10:15:3.1\", \"strict_time\");\n        assertParseException(\"10:15:3Z\", \"strict_time\");\n\n        assertSameDate(\"10:15:30Z\", \"strict_time_no_millis\");\n        assertSameDate(\"10:15:30+0100\", \"strict_time_no_millis\");\n        assertSameDate(\"10:15:30+01:00\", \"strict_time_no_millis\");\n        assertSameDate(\"01:15:30Z\", \"strict_time_no_millis\");\n        assertSameDate(\"01:15:30+0100\", \"strict_time_no_millis\");\n        assertSameDate(\"01:15:30+01:00\", \"strict_time_no_millis\");\n        assertParseException(\"1:15:30Z\", \"strict_time_no_millis\");\n        assertParseException(\"10:5:30Z\", \"strict_time_no_millis\");\n        assertParseException(\"10:15:3Z\", \"strict_time_no_millis\");\n        assertParseException(\"10:15:3\", \"strict_time_no_millis\");\n\n        assertSameDate(\"T10:15:30.1Z\", \"strict_t_time\");\n        assertSameDate(\"T10:15:30.123Z\", \"strict_t_time\");\n        assertSameDate(\"T10:15:30.123456789Z\", \"strict_t_time\");\n        assertSameDate(\"T10:15:30.1+0100\", \"strict_t_time\");\n        assertSameDate(\"T10:15:30.123+0100\", \"strict_t_time\");\n        assertSameDate(\"T10:15:30.1+01:00\", \"strict_t_time\");\n        assertSameDate(\"T10:15:30.123+01:00\", \"strict_t_time\");\n        assertParseException(\"T1:15:30.123Z\", \"strict_t_time\");\n        assertParseException(\"T10:1:30.123Z\", \"strict_t_time\");\n        assertParseException(\"T10:15:3.123Z\", \"strict_t_time\");\n        assertParseException(\"T10:15:3.1\", \"strict_t_time\");\n        assertParseException(\"T10:15:3Z\", \"strict_t_time\");\n\n        assertSameDate(\"T10:15:30Z\", \"strict_t_time_no_millis\");\n        assertSameDate(\"T10:15:30+0100\", \"strict_t_time_no_millis\");\n        assertSameDate(\"T10:15:30+01:00\", \"strict_t_time_no_millis\");\n        assertParseException(\"T1:15:30Z\", \"strict_t_time_no_millis\");\n        assertParseException(\"T10:1:30Z\", \"strict_t_time_no_millis\");\n        assertParseException(\"T10:15:3Z\", \"strict_t_time_no_millis\");\n        assertParseException(\"T10:15:3\", \"strict_t_time_no_millis\");\n\n        assertSameDate(\"2012-W48-6\", \"strict_week_date\");\n        assertSameDate(\"2012-W01-6\", \"strict_week_date\");\n        assertParseException(\"2012-W1-6\", \"strict_week_date\");\n        assertParseException(\"2012-W1-8\", \"strict_week_date\");\n\n        assertSameDate(\"2012-W48-6\", \"strict_week_date\");\n        assertSameDate(\"2012-W01-6\", \"strict_week_date\");\n        assertParseException(\"2012-W1-6\", \"strict_week_date\");\n        \r\n        assertJodaParseException(\"2012-W01-8\", \"strict_week_date\",\n            \"Cannot parse \\\"2012-W01-8\\\": Value 8 for dayOfWeek must be in the range [1,7]\");\n        assertJavaTimeParseException(\"2012-W01-8\", \"strict_week_date\");\n\n        assertSameDate(\"2012-W48-6T10:15:30.1Z\", \"strict_week_date_time\");\n        assertSameDate(\"2012-W48-6T10:15:30.123Z\", \"strict_week_date_time\");\n        assertSameDate(\"2012-W48-6T10:15:30.123456789Z\", \"strict_week_date_time\");\n        assertSameDate(\"2012-W48-6T10:15:30.1+0100\", \"strict_week_date_time\");\n        assertSameDate(\"2012-W48-6T10:15:30.123+0100\", \"strict_week_date_time\");\n        assertSameDate(\"2012-W48-6T10:15:30.1+01:00\", \"strict_week_date_time\");\n        assertSameDate(\"2012-W48-6T10:15:30.123+01:00\", \"strict_week_date_time\");\n        assertParseException(\"2012-W1-6T10:15:30.123Z\", \"strict_week_date_time\");\n\n        assertSameDate(\"2012-W48-6T10:15:30Z\", \"strict_week_date_time_no_millis\");\n        assertSameDate(\"2012-W48-6T10:15:30+0100\", \"strict_week_date_time_no_millis\");\n        assertSameDate(\"2012-W48-6T10:15:30+01:00\", \"strict_week_date_time_no_millis\");\n        assertParseException(\"2012-W1-6T10:15:30Z\", \"strict_week_date_time_no_millis\");\n\n        assertSameDate(\"2012\", \"strict_year\");\n        assertParseException(\"1\", \"strict_year\");\n        assertSameDate(\"-2000\", \"strict_year\");\n\n        assertSameDate(\"2012-12\", \"strict_year_month\");\n        assertParseException(\"1-1\", \"strict_year_month\");\n\n        assertSameDate(\"2012-12-31\", \"strict_year_month_day\");\n        assertParseException(\"1-12-31\", \"strict_year_month_day\");\n        assertParseException(\"2012-1-31\", \"strict_year_month_day\");\n        assertParseException(\"2012-12-1\", \"strict_year_month_day\");\n\n        assertSameDate(\"2018\", \"strict_weekyear\");\n        assertParseException(\"1\", \"strict_weekyear\");\n\n        assertSameDate(\"2018\", \"strict_weekyear\");\n        assertSameDate(\"2017\", \"strict_weekyear\");\n        assertParseException(\"1\", \"strict_weekyear\");\n\n        assertSameDate(\"2018-W29\", \"strict_weekyear_week\");\n        assertSameDate(\"2018-W01\", \"strict_weekyear_week\");\n        assertParseException(\"2018-W1\", \"strict_weekyear_week\");\n\n        assertSameDate(\"2012-W31-5\", \"strict_weekyear_week_day\");\n        assertParseException(\"2012-W1-1\", \"strict_weekyear_week_day\");\n    }\n","realPath":"server/src/test/java/org/elasticsearch/common/joda/JavaJodaTimeDuellingTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":389,"status":"N"}],"commitId":"28f6fd0c65a90e98ba536049b05cf263907cb947","commitMessage":"@@@Merge branch 'master' into feature/runtime_fields\n","date":"2020-07-31 16:33:40","modifiedFileCount":"151","status":"M","submitter":"Luca Cavanna"},{"authorTime":"2019-04-02 16:26:54","codes":[{"authorDate":"2020-10-07 15:15:53","commitOrder":14,"curCode":"    public void testDuellingFormatsValidParsing() {\n        assertSameDate(\"1522332219\", \"epoch_second\");\n        assertSameDate(\"0\", \"epoch_second\");\n        assertSameDate(\"1\", \"epoch_second\");\n        assertSameDate(\"1522332219321\", \"epoch_millis\");\n        assertSameDate(\"0\", \"epoch_millis\");\n        assertSameDate(\"1\", \"epoch_millis\");\n\n        assertSameDate(\"20181126\", \"basic_date\");\n        assertSameDate(\"20181126T121212.123Z\", \"basic_date_time\");\n        assertSameDate(\"20181126T121212.123+10:00\", \"basic_date_time\");\n        assertSameDate(\"20181126T121212.123-0800\", \"basic_date_time\");\n\n        assertSameDate(\"20181126T121212Z\", \"basic_date_time_no_millis\");\n        assertSameDate(\"20181126T121212+01:00\", \"basic_date_time_no_millis\");\n        assertSameDate(\"20181126T121212+0100\", \"basic_date_time_no_millis\");\n        assertSameDate(\"2018363\", \"basic_ordinal_date\");\n        assertSameDate(\"2018363T121212.1Z\", \"basic_ordinal_date_time\");\n        assertSameDate(\"2018363T121212.123Z\", \"basic_ordinal_date_time\");\n        assertSameDate(\"2018363T121212.123456789Z\", \"basic_ordinal_date_time\");\n        assertSameDate(\"2018363T121212.123+0100\", \"basic_ordinal_date_time\");\n        assertSameDate(\"2018363T121212.123+01:00\", \"basic_ordinal_date_time\");\n        assertSameDate(\"2018363T121212Z\", \"basic_ordinal_date_time_no_millis\");\n        assertSameDate(\"2018363T121212+0100\", \"basic_ordinal_date_time_no_millis\");\n        assertSameDate(\"2018363T121212+01:00\", \"basic_ordinal_date_time_no_millis\");\n        assertSameDate(\"121212.1Z\", \"basic_time\");\n        assertSameDate(\"121212.123Z\", \"basic_time\");\n        assertSameDate(\"121212.123456789Z\", \"basic_time\");\n        assertSameDate(\"121212.1+0100\", \"basic_time\");\n        assertSameDate(\"121212.123+0100\", \"basic_time\");\n        assertSameDate(\"121212.123+01:00\", \"basic_time\");\n        assertSameDate(\"121212Z\", \"basic_time_no_millis\");\n        assertSameDate(\"121212+0100\", \"basic_time_no_millis\");\n        assertSameDate(\"121212+01:00\", \"basic_time_no_millis\");\n        assertSameDate(\"T121212.1Z\", \"basic_t_time\");\n        assertSameDate(\"T121212.123Z\", \"basic_t_time\");\n        assertSameDate(\"T121212.123456789Z\", \"basic_t_time\");\n        assertSameDate(\"T121212.1+0100\", \"basic_t_time\");\n        assertSameDate(\"T121212.123+0100\", \"basic_t_time\");\n        assertSameDate(\"T121212.123+01:00\", \"basic_t_time\");\n        assertSameDate(\"T121212Z\", \"basic_t_time_no_millis\");\n        assertSameDate(\"T121212+0100\", \"basic_t_time_no_millis\");\n        assertSameDate(\"T121212+01:00\", \"basic_t_time_no_millis\");\n        assertSameDate(\"2018W313\", \"basic_week_date\");\n        assertSameDate(\"1W313\", \"basic_week_date\");\n        assertSameDate(\"18W313\", \"basic_week_date\");\n        assertSameDate(\"2018W313T121212.1Z\", \"basic_week_date_time\");\n        assertSameDate(\"2018W313T121212.123Z\", \"basic_week_date_time\");\n        assertSameDate(\"2018W313T121212.123456789Z\", \"basic_week_date_time\");\n        assertSameDate(\"2018W313T121212.123+0100\", \"basic_week_date_time\");\n        assertSameDate(\"2018W313T121212.123+01:00\", \"basic_week_date_time\");\n        assertSameDate(\"2018W313T121212Z\", \"basic_week_date_time_no_millis\");\n        assertSameDate(\"2018W313T121212+0100\", \"basic_week_date_time_no_millis\");\n        assertSameDate(\"2018W313T121212+01:00\", \"basic_week_date_time_no_millis\");\n\n        assertSameDate(\"2018-12-31\", \"date\");\n        assertSameDate(\"18-5-6\", \"date\");\n        assertSameDate(\"10000-5-6\", \"date\");\n\n        assertSameDate(\"2018-12-31T12\", \"date_hour\");\n        assertSameDate(\"2018-12-31T8\", \"date_hour\");\n\n        assertSameDate(\"2018-12-31T12:12\", \"date_hour_minute\");\n        assertSameDate(\"2018-12-31T8:3\", \"date_hour_minute\");\n\n        assertSameDate(\"2018-12-31T12:12:12\", \"date_hour_minute_second\");\n        assertSameDate(\"2018-12-31T12:12:1\", \"date_hour_minute_second\");\n\n        assertSameDate(\"2018-12-31T12:12:12.1\", \"date_hour_minute_second_fraction\");\n        assertSameDate(\"2018-12-31T12:12:12.123\", \"date_hour_minute_second_fraction\");\n        assertSameDate(\"2018-12-31T12:12:12.123456789\", \"date_hour_minute_second_fraction\");\n        assertSameDate(\"2018-12-31T12:12:12.1\", \"date_hour_minute_second_millis\");\n        assertSameDate(\"2018-12-31T12:12:12.123\", \"date_hour_minute_second_millis\");\n        assertParseException(\"2018-12-31T12:12:12.123456789\", \"date_hour_minute_second_millis\");\n        assertSameDate(\"2018-12-31T12:12:12.1\", \"date_hour_minute_second_millis\");\n        assertSameDate(\"2018-12-31T12:12:12.1\", \"date_hour_minute_second_fraction\");\n\n        assertSameDate(\"2018-05\", \"date_optional_time\");\n        assertSameDate(\"2018-05-30\", \"date_optional_time\");\n        assertSameDate(\"2018-05-30T20\", \"date_optional_time\");\n        assertSameDate(\"2018-05-30T20:21\", \"date_optional_time\");\n        assertSameDate(\"2018-05-30T20:21:23\", \"date_optional_time\");\n        assertSameDate(\"2018-05-30T20:21:23.1\", \"date_optional_time\");\n        assertSameDate(\"2018-05-30T20:21:23.123\", \"date_optional_time\");\n        assertSameDate(\"2018-05-30T20:21:23.123456789\", \"date_optional_time\");\n        assertSameDate(\"2018-05-30T20:21:23.123Z\", \"date_optional_time\");\n        assertSameDate(\"2018-05-30T20:21:23.123456789Z\", \"date_optional_time\");\n        assertSameDate(\"2018-05-30T20:21:23.1+0100\", \"date_optional_time\");\n        assertSameDate(\"2018-05-30T20:21:23.123+0100\", \"date_optional_time\");\n        assertSameDate(\"2018-05-30T20:21:23.1+01:00\", \"date_optional_time\");\n        assertSameDate(\"2018-05-30T20:21:23.123+01:00\", \"date_optional_time\");\n        assertSameDate(\"2018-12-1\", \"date_optional_time\");\n        assertSameDate(\"2018-12-31T10:15:30\", \"date_optional_time\");\n        assertSameDate(\"2018-12-31T10:15:3\", \"date_optional_time\");\n        assertSameDate(\"2018-12-31T10:5:30\", \"date_optional_time\");\n        assertSameDate(\"2018-12-31T1:15:30\", \"date_optional_time\");\n\n        assertSameDate(\"2018-12-31T10:15:30.1Z\", \"date_time\");\n        assertSameDate(\"2018-12-31T10:15:30.123Z\", \"date_time\");\n        assertSameDate(\"2018-12-31T10:15:30.123456789Z\", \"date_time\");\n        assertSameDate(\"2018-12-31T10:15:30.1+0100\", \"date_time\");\n        assertSameDate(\"2018-12-31T10:15:30.123+0100\", \"date_time\");\n        assertSameDate(\"2018-12-31T10:15:30.123+01:00\", \"date_time\");\n        assertSameDate(\"2018-12-31T10:15:30.1+01:00\", \"date_time\");\n        assertSameDate(\"2018-12-31T10:15:30.11Z\", \"date_time\");\n        assertSameDate(\"2018-12-31T10:15:30.11+0100\", \"date_time\");\n        assertSameDate(\"2018-12-31T10:15:30.11+01:00\", \"date_time\");\n        assertSameDate(\"2018-12-31T10:15:3.1Z\", \"date_time\");\n        assertSameDate(\"2018-12-31T10:15:3.123Z\", \"date_time\");\n        assertSameDate(\"2018-12-31T10:15:3.123456789Z\", \"date_time\");\n        assertSameDate(\"2018-12-31T10:15:3.1+0100\", \"date_time\");\n        assertSameDate(\"2018-12-31T10:15:3.123+0100\", \"date_time\");\n        assertSameDate(\"2018-12-31T10:15:3.123+01:00\", \"date_time\");\n        assertSameDate(\"2018-12-31T10:15:3.1+01:00\", \"date_time\");\n\n        assertSameDate(\"2018-12-31T10:15:30Z\", \"date_time_no_millis\");\n        assertSameDate(\"2018-12-31T10:15:30+0100\", \"date_time_no_millis\");\n        assertSameDate(\"2018-12-31T10:15:30+01:00\", \"date_time_no_millis\");\n        assertSameDate(\"2018-12-31T10:5:30Z\", \"date_time_no_millis\");\n        assertSameDate(\"2018-12-31T10:5:30+0100\", \"date_time_no_millis\");\n        assertSameDate(\"2018-12-31T10:5:30+01:00\", \"date_time_no_millis\");\n        assertSameDate(\"2018-12-31T10:15:3Z\", \"date_time_no_millis\");\n        assertSameDate(\"2018-12-31T10:15:3+0100\", \"date_time_no_millis\");\n        assertSameDate(\"2018-12-31T10:15:3+01:00\", \"date_time_no_millis\");\n        assertSameDate(\"2018-12-31T1:15:30Z\", \"date_time_no_millis\");\n        assertSameDate(\"2018-12-31T1:15:30+0100\", \"date_time_no_millis\");\n        assertSameDate(\"2018-12-31T1:15:30+01:00\", \"date_time_no_millis\");\n\n        assertSameDate(\"12\", \"hour\");\n        assertSameDate(\"01\", \"hour\");\n        assertSameDate(\"1\", \"hour\");\n\n        assertSameDate(\"12:12\", \"hour_minute\");\n        assertSameDate(\"12:01\", \"hour_minute\");\n        assertSameDate(\"12:1\", \"hour_minute\");\n\n        assertSameDate(\"12:12:12\", \"hour_minute_second\");\n        assertSameDate(\"12:12:01\", \"hour_minute_second\");\n        assertSameDate(\"12:12:1\", \"hour_minute_second\");\n\n        assertSameDate(\"12:12:12.123\", \"hour_minute_second_fraction\");\n        assertSameDate(\"12:12:12.123456789\", \"hour_minute_second_fraction\");\n        assertSameDate(\"12:12:12.1\", \"hour_minute_second_fraction\");\n        assertParseException(\"12:12:12\", \"hour_minute_second_fraction\");\n        assertSameDate(\"12:12:12.123\", \"hour_minute_second_millis\");\n        assertParseException(\"12:12:12.123456789\", \"hour_minute_second_millis\");\n        assertSameDate(\"12:12:12.1\", \"hour_minute_second_millis\");\n        assertParseException(\"12:12:12\", \"hour_minute_second_millis\");\n\n        assertSameDate(\"2018-128\", \"ordinal_date\");\n        assertSameDate(\"2018-1\", \"ordinal_date\");\n\n        assertSameDate(\"2018-128T10:15:30.1Z\", \"ordinal_date_time\");\n        assertSameDate(\"2018-128T10:15:30.123Z\", \"ordinal_date_time\");\n        assertSameDate(\"2018-128T10:15:30.123456789Z\", \"ordinal_date_time\");\n        assertSameDate(\"2018-128T10:15:30.123+0100\", \"ordinal_date_time\");\n        assertSameDate(\"2018-128T10:15:30.123+01:00\", \"ordinal_date_time\");\n        assertSameDate(\"2018-1T10:15:30.1Z\", \"ordinal_date_time\");\n        assertSameDate(\"2018-1T10:15:30.123Z\", \"ordinal_date_time\");\n        assertSameDate(\"2018-1T10:15:30.123456789Z\", \"ordinal_date_time\");\n        assertSameDate(\"2018-1T10:15:30.123+0100\", \"ordinal_date_time\");\n        assertSameDate(\"2018-1T10:15:30.123+01:00\", \"ordinal_date_time\");\n\n        assertSameDate(\"2018-128T10:15:30Z\", \"ordinal_date_time_no_millis\");\n        assertSameDate(\"2018-128T10:15:30+0100\", \"ordinal_date_time_no_millis\");\n        assertSameDate(\"2018-128T10:15:30+01:00\", \"ordinal_date_time_no_millis\");\n        assertSameDate(\"2018-1T10:15:30Z\", \"ordinal_date_time_no_millis\");\n        assertSameDate(\"2018-1T10:15:30+0100\", \"ordinal_date_time_no_millis\");\n        assertSameDate(\"2018-1T10:15:30+01:00\", \"ordinal_date_time_no_millis\");\n\n        assertSameDate(\"10:15:30.1Z\", \"time\");\n        assertSameDate(\"10:15:30.123Z\", \"time\");\n        assertSameDate(\"10:15:30.123456789Z\", \"time\");\n        assertSameDate(\"10:15:30.123+0100\", \"time\");\n        assertSameDate(\"10:15:30.123+01:00\", \"time\");\n        assertSameDate(\"1:15:30.1Z\", \"time\");\n        assertSameDate(\"1:15:30.123Z\", \"time\");\n        assertSameDate(\"1:15:30.123+0100\", \"time\");\n        assertSameDate(\"1:15:30.123+01:00\", \"time\");\n        assertSameDate(\"10:1:30.1Z\", \"time\");\n        assertSameDate(\"10:1:30.123Z\", \"time\");\n        assertSameDate(\"10:1:30.123+0100\", \"time\");\n        assertSameDate(\"10:1:30.123+01:00\", \"time\");\n        assertSameDate(\"10:15:3.1Z\", \"time\");\n        assertSameDate(\"10:15:3.123Z\", \"time\");\n        assertSameDate(\"10:15:3.123+0100\", \"time\");\n        assertSameDate(\"10:15:3.123+01:00\", \"time\");\n        assertParseException(\"10:15:3.1\", \"time\");\n        assertParseException(\"10:15:3Z\", \"time\");\n\n        assertSameDate(\"10:15:30Z\", \"time_no_millis\");\n        assertSameDate(\"10:15:30+0100\", \"time_no_millis\");\n        assertSameDate(\"10:15:30+01:00\", \"time_no_millis\");\n        assertSameDate(\"01:15:30Z\", \"time_no_millis\");\n        assertSameDate(\"01:15:30+0100\", \"time_no_millis\");\n        assertSameDate(\"01:15:30+01:00\", \"time_no_millis\");\n        assertSameDate(\"1:15:30Z\", \"time_no_millis\");\n        assertSameDate(\"1:15:30+0100\", \"time_no_millis\");\n        assertSameDate(\"1:15:30+01:00\", \"time_no_millis\");\n        assertSameDate(\"10:5:30Z\", \"time_no_millis\");\n        assertSameDate(\"10:5:30+0100\", \"time_no_millis\");\n        assertSameDate(\"10:5:30+01:00\", \"time_no_millis\");\n        assertSameDate(\"10:15:3Z\", \"time_no_millis\");\n        assertSameDate(\"10:15:3+0100\", \"time_no_millis\");\n        assertSameDate(\"10:15:3+01:00\", \"time_no_millis\");\n        assertParseException(\"10:15:3\", \"time_no_millis\");\n\n        assertSameDate(\"T10:15:30.1Z\", \"t_time\");\n        assertSameDate(\"T10:15:30.123Z\", \"t_time\");\n        assertSameDate(\"T10:15:30.123456789Z\", \"t_time\");\n        assertSameDate(\"T10:15:30.1+0100\", \"t_time\");\n        assertSameDate(\"T10:15:30.123+0100\", \"t_time\");\n        assertSameDate(\"T10:15:30.123+01:00\", \"t_time\");\n        assertSameDate(\"T10:15:30.1+01:00\", \"t_time\");\n        assertSameDate(\"T1:15:30.123Z\", \"t_time\");\n        assertSameDate(\"T1:15:30.123+0100\", \"t_time\");\n        assertSameDate(\"T1:15:30.123+01:00\", \"t_time\");\n        assertSameDate(\"T10:1:30.123Z\", \"t_time\");\n        assertSameDate(\"T10:1:30.123+0100\", \"t_time\");\n        assertSameDate(\"T10:1:30.123+01:00\", \"t_time\");\n        assertSameDate(\"T10:15:3.123Z\", \"t_time\");\n        assertSameDate(\"T10:15:3.123+0100\", \"t_time\");\n        assertSameDate(\"T10:15:3.123+01:00\", \"t_time\");\n        assertParseException(\"T10:15:3.1\", \"t_time\");\n        assertParseException(\"T10:15:3Z\", \"t_time\");\n\n        assertSameDate(\"T10:15:30Z\", \"t_time_no_millis\");\n        assertSameDate(\"T10:15:30+0100\", \"t_time_no_millis\");\n        assertSameDate(\"T10:15:30+01:00\", \"t_time_no_millis\");\n        assertSameDate(\"T1:15:30Z\", \"t_time_no_millis\");\n        assertSameDate(\"T1:15:30+0100\", \"t_time_no_millis\");\n        assertSameDate(\"T1:15:30+01:00\", \"t_time_no_millis\");\n        assertSameDate(\"T10:1:30Z\", \"t_time_no_millis\");\n        assertSameDate(\"T10:1:30+0100\", \"t_time_no_millis\");\n        assertSameDate(\"T10:1:30+01:00\", \"t_time_no_millis\");\n        assertSameDate(\"T10:15:3Z\", \"t_time_no_millis\");\n        assertSameDate(\"T10:15:3+0100\", \"t_time_no_millis\");\n        assertSameDate(\"T10:15:3+01:00\", \"t_time_no_millis\");\n        assertParseException(\"T10:15:3\", \"t_time_no_millis\");\n\n        assertSameDate(\"2012-W48-6\", \"week_date\");\n        assertSameDate(\"2012-W01-6\", \"week_date\");\n        assertSameDate(\"2012-W1-6\", \"week_date\");\n        \r\n        assertJodaParseException(\"2012-W1-8\", \"week_date\",\n            \"Cannot parse \\\"2012-W1-8\\\": Value 8 for dayOfWeek must be in the range [1,7]\");\n        assertJavaTimeParseException(\"2012-W1-8\", \"week_date\");\n\n        assertSameDate(\"2012-W48-6T10:15:30.1Z\", \"week_date_time\");\n        assertSameDate(\"2012-W48-6T10:15:30.123Z\", \"week_date_time\");\n        assertSameDate(\"2012-W48-6T10:15:30.123456789Z\", \"week_date_time\");\n        assertSameDate(\"2012-W48-6T10:15:30.1+0100\", \"week_date_time\");\n        assertSameDate(\"2012-W48-6T10:15:30.123+0100\", \"week_date_time\");\n        assertSameDate(\"2012-W48-6T10:15:30.1+01:00\", \"week_date_time\");\n        assertSameDate(\"2012-W48-6T10:15:30.123+01:00\", \"week_date_time\");\n        assertSameDate(\"2012-W1-6T10:15:30.1Z\", \"week_date_time\");\n        assertSameDate(\"2012-W1-6T10:15:30.123Z\", \"week_date_time\");\n        assertSameDate(\"2012-W1-6T10:15:30.1+0100\", \"week_date_time\");\n        assertSameDate(\"2012-W1-6T10:15:30.123+0100\", \"week_date_time\");\n        assertSameDate(\"2012-W1-6T10:15:30.1+01:00\", \"week_date_time\");\n        assertSameDate(\"2012-W1-6T10:15:30.123+01:00\", \"week_date_time\");\n\n        assertSameDate(\"2012-W48-6T10:15:30Z\", \"week_date_time_no_millis\");\n        assertSameDate(\"2012-W48-6T10:15:30+0100\", \"week_date_time_no_millis\");\n        assertSameDate(\"2012-W48-6T10:15:30+01:00\", \"week_date_time_no_millis\");\n        assertSameDate(\"2012-W1-6T10:15:30Z\", \"week_date_time_no_millis\");\n        assertSameDate(\"2012-W1-6T10:15:30+0100\", \"week_date_time_no_millis\");\n        assertSameDate(\"2012-W1-6T10:15:30+01:00\", \"week_date_time_no_millis\");\n\n        assertSameDate(\"2012\", \"year\");\n        assertSameDate(\"1\", \"year\");\n        assertSameDate(\"-2000\", \"year\");\n\n        assertSameDate(\"2012-12\", \"year_month\");\n        assertSameDate(\"1-1\", \"year_month\");\n\n        assertSameDate(\"2012-12-31\", \"year_month_day\");\n        assertSameDate(\"1-12-31\", \"year_month_day\");\n        assertSameDate(\"2012-1-31\", \"year_month_day\");\n        assertSameDate(\"2012-12-1\", \"year_month_day\");\n\n        assertSameDate(\"2018\", \"weekyear\");\n        assertSameDate(\"1\", \"weekyear\");\n        assertSameDate(\"2017\", \"weekyear\");\n\n        assertSameDate(\"2018-W29\", \"weekyear_week\");\n        assertSameDate(\"2018-W1\", \"weekyear_week\");\n\n        assertSameDate(\"2012-W31-5\", \"weekyear_week_day\");\n        assertSameDate(\"2012-W1-1\", \"weekyear_week_day\");\n    }\n","date":"2020-10-07 15:15:53","endLine":514,"groupId":"103936","id":27,"instanceNumber":1,"isCurCommit":0,"methodName":"testDuellingFormatsValidParsing","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/03/398645261b0255ec190391f86b4a3a2dac085e.src","preCode":"    public void testDuellingFormatsValidParsing() {\n        assertSameDate(\"1522332219\", \"epoch_second\");\n        assertSameDate(\"0\", \"epoch_second\");\n        assertSameDate(\"1\", \"epoch_second\");\n        assertSameDate(\"1522332219321\", \"epoch_millis\");\n        assertSameDate(\"0\", \"epoch_millis\");\n        assertSameDate(\"1\", \"epoch_millis\");\n\n        assertSameDate(\"20181126\", \"basic_date\");\n        assertSameDate(\"20181126T121212.123Z\", \"basic_date_time\");\n        assertSameDate(\"20181126T121212.123+10:00\", \"basic_date_time\");\n        assertSameDate(\"20181126T121212.123-0800\", \"basic_date_time\");\n\n        assertSameDate(\"20181126T121212Z\", \"basic_date_time_no_millis\");\n        assertSameDate(\"20181126T121212+01:00\", \"basic_date_time_no_millis\");\n        assertSameDate(\"20181126T121212+0100\", \"basic_date_time_no_millis\");\n        assertSameDate(\"2018363\", \"basic_ordinal_date\");\n        assertSameDate(\"2018363T121212.1Z\", \"basic_ordinal_date_time\");\n        assertSameDate(\"2018363T121212.123Z\", \"basic_ordinal_date_time\");\n        assertSameDate(\"2018363T121212.123456789Z\", \"basic_ordinal_date_time\");\n        assertSameDate(\"2018363T121212.123+0100\", \"basic_ordinal_date_time\");\n        assertSameDate(\"2018363T121212.123+01:00\", \"basic_ordinal_date_time\");\n        assertSameDate(\"2018363T121212Z\", \"basic_ordinal_date_time_no_millis\");\n        assertSameDate(\"2018363T121212+0100\", \"basic_ordinal_date_time_no_millis\");\n        assertSameDate(\"2018363T121212+01:00\", \"basic_ordinal_date_time_no_millis\");\n        assertSameDate(\"121212.1Z\", \"basic_time\");\n        assertSameDate(\"121212.123Z\", \"basic_time\");\n        assertSameDate(\"121212.123456789Z\", \"basic_time\");\n        assertSameDate(\"121212.1+0100\", \"basic_time\");\n        assertSameDate(\"121212.123+0100\", \"basic_time\");\n        assertSameDate(\"121212.123+01:00\", \"basic_time\");\n        assertSameDate(\"121212Z\", \"basic_time_no_millis\");\n        assertSameDate(\"121212+0100\", \"basic_time_no_millis\");\n        assertSameDate(\"121212+01:00\", \"basic_time_no_millis\");\n        assertSameDate(\"T121212.1Z\", \"basic_t_time\");\n        assertSameDate(\"T121212.123Z\", \"basic_t_time\");\n        assertSameDate(\"T121212.123456789Z\", \"basic_t_time\");\n        assertSameDate(\"T121212.1+0100\", \"basic_t_time\");\n        assertSameDate(\"T121212.123+0100\", \"basic_t_time\");\n        assertSameDate(\"T121212.123+01:00\", \"basic_t_time\");\n        assertSameDate(\"T121212Z\", \"basic_t_time_no_millis\");\n        assertSameDate(\"T121212+0100\", \"basic_t_time_no_millis\");\n        assertSameDate(\"T121212+01:00\", \"basic_t_time_no_millis\");\n        assertSameDate(\"2018W313\", \"basic_week_date\");\n        assertSameDate(\"1W313\", \"basic_week_date\");\n        assertSameDate(\"18W313\", \"basic_week_date\");\n        assertSameDate(\"2018W313T121212.1Z\", \"basic_week_date_time\");\n        assertSameDate(\"2018W313T121212.123Z\", \"basic_week_date_time\");\n        assertSameDate(\"2018W313T121212.123456789Z\", \"basic_week_date_time\");\n        assertSameDate(\"2018W313T121212.123+0100\", \"basic_week_date_time\");\n        assertSameDate(\"2018W313T121212.123+01:00\", \"basic_week_date_time\");\n        assertSameDate(\"2018W313T121212Z\", \"basic_week_date_time_no_millis\");\n        assertSameDate(\"2018W313T121212+0100\", \"basic_week_date_time_no_millis\");\n        assertSameDate(\"2018W313T121212+01:00\", \"basic_week_date_time_no_millis\");\n\n        assertSameDate(\"2018-12-31\", \"date\");\n        assertSameDate(\"18-5-6\", \"date\");\n        assertSameDate(\"10000-5-6\", \"date\");\n\n        assertSameDate(\"2018-12-31T12\", \"date_hour\");\n        assertSameDate(\"2018-12-31T8\", \"date_hour\");\n\n        assertSameDate(\"2018-12-31T12:12\", \"date_hour_minute\");\n        assertSameDate(\"2018-12-31T8:3\", \"date_hour_minute\");\n\n        assertSameDate(\"2018-12-31T12:12:12\", \"date_hour_minute_second\");\n        assertSameDate(\"2018-12-31T12:12:1\", \"date_hour_minute_second\");\n\n        assertSameDate(\"2018-12-31T12:12:12.1\", \"date_hour_minute_second_fraction\");\n        assertSameDate(\"2018-12-31T12:12:12.123\", \"date_hour_minute_second_fraction\");\n        assertSameDate(\"2018-12-31T12:12:12.123456789\", \"date_hour_minute_second_fraction\");\n        assertSameDate(\"2018-12-31T12:12:12.1\", \"date_hour_minute_second_millis\");\n        assertSameDate(\"2018-12-31T12:12:12.123\", \"date_hour_minute_second_millis\");\n        assertParseException(\"2018-12-31T12:12:12.123456789\", \"date_hour_minute_second_millis\");\n        assertSameDate(\"2018-12-31T12:12:12.1\", \"date_hour_minute_second_millis\");\n        assertSameDate(\"2018-12-31T12:12:12.1\", \"date_hour_minute_second_fraction\");\n\n        assertSameDate(\"2018-05\", \"date_optional_time\");\n        assertSameDate(\"2018-05-30\", \"date_optional_time\");\n        assertSameDate(\"2018-05-30T20\", \"date_optional_time\");\n        assertSameDate(\"2018-05-30T20:21\", \"date_optional_time\");\n        assertSameDate(\"2018-05-30T20:21:23\", \"date_optional_time\");\n        assertSameDate(\"2018-05-30T20:21:23.1\", \"date_optional_time\");\n        assertSameDate(\"2018-05-30T20:21:23.123\", \"date_optional_time\");\n        assertSameDate(\"2018-05-30T20:21:23.123456789\", \"date_optional_time\");\n        assertSameDate(\"2018-05-30T20:21:23.123Z\", \"date_optional_time\");\n        assertSameDate(\"2018-05-30T20:21:23.123456789Z\", \"date_optional_time\");\n        assertSameDate(\"2018-05-30T20:21:23.1+0100\", \"date_optional_time\");\n        assertSameDate(\"2018-05-30T20:21:23.123+0100\", \"date_optional_time\");\n        assertSameDate(\"2018-05-30T20:21:23.1+01:00\", \"date_optional_time\");\n        assertSameDate(\"2018-05-30T20:21:23.123+01:00\", \"date_optional_time\");\n        assertSameDate(\"2018-12-1\", \"date_optional_time\");\n        assertSameDate(\"2018-12-31T10:15:30\", \"date_optional_time\");\n        assertSameDate(\"2018-12-31T10:15:3\", \"date_optional_time\");\n        assertSameDate(\"2018-12-31T10:5:30\", \"date_optional_time\");\n        assertSameDate(\"2018-12-31T1:15:30\", \"date_optional_time\");\n\n        assertSameDate(\"2018-12-31T10:15:30.1Z\", \"date_time\");\n        assertSameDate(\"2018-12-31T10:15:30.123Z\", \"date_time\");\n        assertSameDate(\"2018-12-31T10:15:30.123456789Z\", \"date_time\");\n        assertSameDate(\"2018-12-31T10:15:30.1+0100\", \"date_time\");\n        assertSameDate(\"2018-12-31T10:15:30.123+0100\", \"date_time\");\n        assertSameDate(\"2018-12-31T10:15:30.123+01:00\", \"date_time\");\n        assertSameDate(\"2018-12-31T10:15:30.1+01:00\", \"date_time\");\n        assertSameDate(\"2018-12-31T10:15:30.11Z\", \"date_time\");\n        assertSameDate(\"2018-12-31T10:15:30.11+0100\", \"date_time\");\n        assertSameDate(\"2018-12-31T10:15:30.11+01:00\", \"date_time\");\n        assertSameDate(\"2018-12-31T10:15:3.1Z\", \"date_time\");\n        assertSameDate(\"2018-12-31T10:15:3.123Z\", \"date_time\");\n        assertSameDate(\"2018-12-31T10:15:3.123456789Z\", \"date_time\");\n        assertSameDate(\"2018-12-31T10:15:3.1+0100\", \"date_time\");\n        assertSameDate(\"2018-12-31T10:15:3.123+0100\", \"date_time\");\n        assertSameDate(\"2018-12-31T10:15:3.123+01:00\", \"date_time\");\n        assertSameDate(\"2018-12-31T10:15:3.1+01:00\", \"date_time\");\n\n        assertSameDate(\"2018-12-31T10:15:30Z\", \"date_time_no_millis\");\n        assertSameDate(\"2018-12-31T10:15:30+0100\", \"date_time_no_millis\");\n        assertSameDate(\"2018-12-31T10:15:30+01:00\", \"date_time_no_millis\");\n        assertSameDate(\"2018-12-31T10:5:30Z\", \"date_time_no_millis\");\n        assertSameDate(\"2018-12-31T10:5:30+0100\", \"date_time_no_millis\");\n        assertSameDate(\"2018-12-31T10:5:30+01:00\", \"date_time_no_millis\");\n        assertSameDate(\"2018-12-31T10:15:3Z\", \"date_time_no_millis\");\n        assertSameDate(\"2018-12-31T10:15:3+0100\", \"date_time_no_millis\");\n        assertSameDate(\"2018-12-31T10:15:3+01:00\", \"date_time_no_millis\");\n        assertSameDate(\"2018-12-31T1:15:30Z\", \"date_time_no_millis\");\n        assertSameDate(\"2018-12-31T1:15:30+0100\", \"date_time_no_millis\");\n        assertSameDate(\"2018-12-31T1:15:30+01:00\", \"date_time_no_millis\");\n\n        assertSameDate(\"12\", \"hour\");\n        assertSameDate(\"01\", \"hour\");\n        assertSameDate(\"1\", \"hour\");\n\n        assertSameDate(\"12:12\", \"hour_minute\");\n        assertSameDate(\"12:01\", \"hour_minute\");\n        assertSameDate(\"12:1\", \"hour_minute\");\n\n        assertSameDate(\"12:12:12\", \"hour_minute_second\");\n        assertSameDate(\"12:12:01\", \"hour_minute_second\");\n        assertSameDate(\"12:12:1\", \"hour_minute_second\");\n\n        assertSameDate(\"12:12:12.123\", \"hour_minute_second_fraction\");\n        assertSameDate(\"12:12:12.123456789\", \"hour_minute_second_fraction\");\n        assertSameDate(\"12:12:12.1\", \"hour_minute_second_fraction\");\n        assertParseException(\"12:12:12\", \"hour_minute_second_fraction\");\n        assertSameDate(\"12:12:12.123\", \"hour_minute_second_millis\");\n        assertParseException(\"12:12:12.123456789\", \"hour_minute_second_millis\");\n        assertSameDate(\"12:12:12.1\", \"hour_minute_second_millis\");\n        assertParseException(\"12:12:12\", \"hour_minute_second_millis\");\n\n        assertSameDate(\"2018-128\", \"ordinal_date\");\n        assertSameDate(\"2018-1\", \"ordinal_date\");\n\n        assertSameDate(\"2018-128T10:15:30.1Z\", \"ordinal_date_time\");\n        assertSameDate(\"2018-128T10:15:30.123Z\", \"ordinal_date_time\");\n        assertSameDate(\"2018-128T10:15:30.123456789Z\", \"ordinal_date_time\");\n        assertSameDate(\"2018-128T10:15:30.123+0100\", \"ordinal_date_time\");\n        assertSameDate(\"2018-128T10:15:30.123+01:00\", \"ordinal_date_time\");\n        assertSameDate(\"2018-1T10:15:30.1Z\", \"ordinal_date_time\");\n        assertSameDate(\"2018-1T10:15:30.123Z\", \"ordinal_date_time\");\n        assertSameDate(\"2018-1T10:15:30.123456789Z\", \"ordinal_date_time\");\n        assertSameDate(\"2018-1T10:15:30.123+0100\", \"ordinal_date_time\");\n        assertSameDate(\"2018-1T10:15:30.123+01:00\", \"ordinal_date_time\");\n\n        assertSameDate(\"2018-128T10:15:30Z\", \"ordinal_date_time_no_millis\");\n        assertSameDate(\"2018-128T10:15:30+0100\", \"ordinal_date_time_no_millis\");\n        assertSameDate(\"2018-128T10:15:30+01:00\", \"ordinal_date_time_no_millis\");\n        assertSameDate(\"2018-1T10:15:30Z\", \"ordinal_date_time_no_millis\");\n        assertSameDate(\"2018-1T10:15:30+0100\", \"ordinal_date_time_no_millis\");\n        assertSameDate(\"2018-1T10:15:30+01:00\", \"ordinal_date_time_no_millis\");\n\n        assertSameDate(\"10:15:30.1Z\", \"time\");\n        assertSameDate(\"10:15:30.123Z\", \"time\");\n        assertSameDate(\"10:15:30.123456789Z\", \"time\");\n        assertSameDate(\"10:15:30.123+0100\", \"time\");\n        assertSameDate(\"10:15:30.123+01:00\", \"time\");\n        assertSameDate(\"1:15:30.1Z\", \"time\");\n        assertSameDate(\"1:15:30.123Z\", \"time\");\n        assertSameDate(\"1:15:30.123+0100\", \"time\");\n        assertSameDate(\"1:15:30.123+01:00\", \"time\");\n        assertSameDate(\"10:1:30.1Z\", \"time\");\n        assertSameDate(\"10:1:30.123Z\", \"time\");\n        assertSameDate(\"10:1:30.123+0100\", \"time\");\n        assertSameDate(\"10:1:30.123+01:00\", \"time\");\n        assertSameDate(\"10:15:3.1Z\", \"time\");\n        assertSameDate(\"10:15:3.123Z\", \"time\");\n        assertSameDate(\"10:15:3.123+0100\", \"time\");\n        assertSameDate(\"10:15:3.123+01:00\", \"time\");\n        assertParseException(\"10:15:3.1\", \"time\");\n        assertParseException(\"10:15:3Z\", \"time\");\n\n        assertSameDate(\"10:15:30Z\", \"time_no_millis\");\n        assertSameDate(\"10:15:30+0100\", \"time_no_millis\");\n        assertSameDate(\"10:15:30+01:00\", \"time_no_millis\");\n        assertSameDate(\"01:15:30Z\", \"time_no_millis\");\n        assertSameDate(\"01:15:30+0100\", \"time_no_millis\");\n        assertSameDate(\"01:15:30+01:00\", \"time_no_millis\");\n        assertSameDate(\"1:15:30Z\", \"time_no_millis\");\n        assertSameDate(\"1:15:30+0100\", \"time_no_millis\");\n        assertSameDate(\"1:15:30+01:00\", \"time_no_millis\");\n        assertSameDate(\"10:5:30Z\", \"time_no_millis\");\n        assertSameDate(\"10:5:30+0100\", \"time_no_millis\");\n        assertSameDate(\"10:5:30+01:00\", \"time_no_millis\");\n        assertSameDate(\"10:15:3Z\", \"time_no_millis\");\n        assertSameDate(\"10:15:3+0100\", \"time_no_millis\");\n        assertSameDate(\"10:15:3+01:00\", \"time_no_millis\");\n        assertParseException(\"10:15:3\", \"time_no_millis\");\n\n        assertSameDate(\"T10:15:30.1Z\", \"t_time\");\n        assertSameDate(\"T10:15:30.123Z\", \"t_time\");\n        assertSameDate(\"T10:15:30.123456789Z\", \"t_time\");\n        assertSameDate(\"T10:15:30.1+0100\", \"t_time\");\n        assertSameDate(\"T10:15:30.123+0100\", \"t_time\");\n        assertSameDate(\"T10:15:30.123+01:00\", \"t_time\");\n        assertSameDate(\"T10:15:30.1+01:00\", \"t_time\");\n        assertSameDate(\"T1:15:30.123Z\", \"t_time\");\n        assertSameDate(\"T1:15:30.123+0100\", \"t_time\");\n        assertSameDate(\"T1:15:30.123+01:00\", \"t_time\");\n        assertSameDate(\"T10:1:30.123Z\", \"t_time\");\n        assertSameDate(\"T10:1:30.123+0100\", \"t_time\");\n        assertSameDate(\"T10:1:30.123+01:00\", \"t_time\");\n        assertSameDate(\"T10:15:3.123Z\", \"t_time\");\n        assertSameDate(\"T10:15:3.123+0100\", \"t_time\");\n        assertSameDate(\"T10:15:3.123+01:00\", \"t_time\");\n        assertParseException(\"T10:15:3.1\", \"t_time\");\n        assertParseException(\"T10:15:3Z\", \"t_time\");\n\n        assertSameDate(\"T10:15:30Z\", \"t_time_no_millis\");\n        assertSameDate(\"T10:15:30+0100\", \"t_time_no_millis\");\n        assertSameDate(\"T10:15:30+01:00\", \"t_time_no_millis\");\n        assertSameDate(\"T1:15:30Z\", \"t_time_no_millis\");\n        assertSameDate(\"T1:15:30+0100\", \"t_time_no_millis\");\n        assertSameDate(\"T1:15:30+01:00\", \"t_time_no_millis\");\n        assertSameDate(\"T10:1:30Z\", \"t_time_no_millis\");\n        assertSameDate(\"T10:1:30+0100\", \"t_time_no_millis\");\n        assertSameDate(\"T10:1:30+01:00\", \"t_time_no_millis\");\n        assertSameDate(\"T10:15:3Z\", \"t_time_no_millis\");\n        assertSameDate(\"T10:15:3+0100\", \"t_time_no_millis\");\n        assertSameDate(\"T10:15:3+01:00\", \"t_time_no_millis\");\n        assertParseException(\"T10:15:3\", \"t_time_no_millis\");\n\n        assertSameDate(\"2012-W48-6\", \"week_date\");\n        assertSameDate(\"2012-W01-6\", \"week_date\");\n        assertSameDate(\"2012-W1-6\", \"week_date\");\n        \r\n        assertJodaParseException(\"2012-W1-8\", \"week_date\",\n            \"Cannot parse \\\"2012-W1-8\\\": Value 8 for dayOfWeek must be in the range [1,7]\");\n        assertJavaTimeParseException(\"2012-W1-8\", \"week_date\");\n\n        assertSameDate(\"2012-W48-6T10:15:30.1Z\", \"week_date_time\");\n        assertSameDate(\"2012-W48-6T10:15:30.123Z\", \"week_date_time\");\n        assertSameDate(\"2012-W48-6T10:15:30.123456789Z\", \"week_date_time\");\n        assertSameDate(\"2012-W48-6T10:15:30.1+0100\", \"week_date_time\");\n        assertSameDate(\"2012-W48-6T10:15:30.123+0100\", \"week_date_time\");\n        assertSameDate(\"2012-W48-6T10:15:30.1+01:00\", \"week_date_time\");\n        assertSameDate(\"2012-W48-6T10:15:30.123+01:00\", \"week_date_time\");\n        assertSameDate(\"2012-W1-6T10:15:30.1Z\", \"week_date_time\");\n        assertSameDate(\"2012-W1-6T10:15:30.123Z\", \"week_date_time\");\n        assertSameDate(\"2012-W1-6T10:15:30.1+0100\", \"week_date_time\");\n        assertSameDate(\"2012-W1-6T10:15:30.123+0100\", \"week_date_time\");\n        assertSameDate(\"2012-W1-6T10:15:30.1+01:00\", \"week_date_time\");\n        assertSameDate(\"2012-W1-6T10:15:30.123+01:00\", \"week_date_time\");\n\n        assertSameDate(\"2012-W48-6T10:15:30Z\", \"week_date_time_no_millis\");\n        assertSameDate(\"2012-W48-6T10:15:30+0100\", \"week_date_time_no_millis\");\n        assertSameDate(\"2012-W48-6T10:15:30+01:00\", \"week_date_time_no_millis\");\n        assertSameDate(\"2012-W1-6T10:15:30Z\", \"week_date_time_no_millis\");\n        assertSameDate(\"2012-W1-6T10:15:30+0100\", \"week_date_time_no_millis\");\n        assertSameDate(\"2012-W1-6T10:15:30+01:00\", \"week_date_time_no_millis\");\n\n        assertSameDate(\"2012\", \"year\");\n        assertSameDate(\"1\", \"year\");\n        assertSameDate(\"-2000\", \"year\");\n\n        assertSameDate(\"2012-12\", \"year_month\");\n        assertSameDate(\"1-1\", \"year_month\");\n\n        assertSameDate(\"2012-12-31\", \"year_month_day\");\n        assertSameDate(\"1-12-31\", \"year_month_day\");\n        assertSameDate(\"2012-1-31\", \"year_month_day\");\n        assertSameDate(\"2012-12-1\", \"year_month_day\");\n\n        assertSameDate(\"2018\", \"week_year\");\n        assertSameDate(\"1\", \"week_year\");\n        assertSameDate(\"2017\", \"week_year\");\n\n        assertSameDate(\"2018-W29\", \"weekyear_week\");\n        assertSameDate(\"2018-W1\", \"weekyear_week\");\n\n        assertSameDate(\"2012-W31-5\", \"weekyear_week_day\");\n        assertSameDate(\"2012-W1-1\", \"weekyear_week_day\");\n    }\n","realPath":"server/src/test/java/org/elasticsearch/common/joda/JavaJodaTimeDuellingTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":224,"status":"M"},{"authorDate":"2019-04-02 16:26:54","commitOrder":14,"curCode":"    public void testDuelingStrictParsing() {\n        assertSameDate(\"2018W313\", \"strict_basic_week_date\");\n        assertParseException(\"18W313\", \"strict_basic_week_date\");\n        assertSameDate(\"2018W313T121212.1Z\", \"strict_basic_week_date_time\");\n        assertSameDate(\"2018W313T121212.123Z\", \"strict_basic_week_date_time\");\n        assertSameDate(\"2018W313T121212.123456789Z\", \"strict_basic_week_date_time\");\n        assertSameDate(\"2018W313T121212.1+0100\", \"strict_basic_week_date_time\");\n        assertSameDate(\"2018W313T121212.123+0100\", \"strict_basic_week_date_time\");\n        assertSameDate(\"2018W313T121212.1+01:00\", \"strict_basic_week_date_time\");\n        assertSameDate(\"2018W313T121212.123+01:00\", \"strict_basic_week_date_time\");\n        assertParseException(\"2018W313T12128.123Z\", \"strict_basic_week_date_time\");\n        assertParseException(\"2018W313T12128.123456789Z\", \"strict_basic_week_date_time\");\n        assertParseException(\"2018W313T81212.123Z\", \"strict_basic_week_date_time\");\n        assertParseException(\"2018W313T12812.123Z\", \"strict_basic_week_date_time\");\n        assertParseException(\"2018W313T12812.1Z\", \"strict_basic_week_date_time\");\n        assertSameDate(\"2018W313T121212Z\", \"strict_basic_week_date_time_no_millis\");\n        assertSameDate(\"2018W313T121212+0100\", \"strict_basic_week_date_time_no_millis\");\n        assertSameDate(\"2018W313T121212+01:00\", \"strict_basic_week_date_time_no_millis\");\n        assertParseException(\"2018W313T12128Z\", \"strict_basic_week_date_time_no_millis\");\n        assertParseException(\"2018W313T12128+0100\", \"strict_basic_week_date_time_no_millis\");\n        assertParseException(\"2018W313T12128+01:00\", \"strict_basic_week_date_time_no_millis\");\n        assertParseException(\"2018W313T81212Z\", \"strict_basic_week_date_time_no_millis\");\n        assertParseException(\"2018W313T81212+0100\", \"strict_basic_week_date_time_no_millis\");\n        assertParseException(\"2018W313T81212+01:00\", \"strict_basic_week_date_time_no_millis\");\n        assertParseException(\"2018W313T12812Z\", \"strict_basic_week_date_time_no_millis\");\n        assertParseException(\"2018W313T12812+0100\", \"strict_basic_week_date_time_no_millis\");\n        assertParseException(\"2018W313T12812+01:00\", \"strict_basic_week_date_time_no_millis\");\n        assertSameDate(\"2018-12-31\", \"strict_date\");\n        assertParseException(\"10000-12-31\", \"strict_date\");\n        assertParseException(\"2018-8-31\", \"strict_date\");\n        assertSameDate(\"2018-12-31T12\", \"strict_date_hour\");\n        assertParseException(\"2018-12-31T8\", \"strict_date_hour\");\n        assertSameDate(\"2018-12-31T12:12\", \"strict_date_hour_minute\");\n        assertParseException(\"2018-12-31T8:3\", \"strict_date_hour_minute\");\n        assertSameDate(\"2018-12-31T12:12:12\", \"strict_date_hour_minute_second\");\n        assertParseException(\"2018-12-31T12:12:1\", \"strict_date_hour_minute_second\");\n        assertSameDate(\"2018-12-31T12:12:12.1\", \"strict_date_hour_minute_second_fraction\");\n        assertSameDate(\"2018-12-31T12:12:12.123\", \"strict_date_hour_minute_second_fraction\");\n        assertSameDate(\"2018-12-31T12:12:12.123456789\", \"strict_date_hour_minute_second_fraction\");\n        assertSameDate(\"2018-12-31T12:12:12.123\", \"strict_date_hour_minute_second_millis\");\n        assertSameDate(\"2018-12-31T12:12:12.1\", \"strict_date_hour_minute_second_millis\");\n        assertSameDate(\"2018-12-31T12:12:12.1\", \"strict_date_hour_minute_second_fraction\");\n        assertParseException(\"2018-12-31T12:12:12\", \"strict_date_hour_minute_second_millis\");\n        assertParseException(\"2018-12-31T12:12:12\", \"strict_date_hour_minute_second_fraction\");\n        assertSameDate(\"2018-12-31\", \"strict_date_optional_time\");\n        assertParseException(\"2018-12-1\", \"strict_date_optional_time\");\n        assertParseException(\"2018-1-31\", \"strict_date_optional_time\");\n        assertParseException(\"10000-01-31\", \"strict_date_optional_time\");\n        assertSameDate(\"2010-01-05T02:00\", \"strict_date_optional_time\");\n        assertSameDate(\"2018-12-31T10:15:30\", \"strict_date_optional_time\");\n        assertSameDate(\"2018-12-31T10:15:30Z\", \"strict_date_optional_time\");\n        assertSameDate(\"2018-12-31T10:15:30+0100\", \"strict_date_optional_time\");\n        assertSameDate(\"2018-12-31T10:15:30+01:00\", \"strict_date_optional_time\");\n        assertParseException(\"2018-12-31T10:15:3\", \"strict_date_optional_time\");\n        assertParseException(\"2018-12-31T10:5:30\", \"strict_date_optional_time\");\n        assertParseException(\"2018-12-31T9:15:30\", \"strict_date_optional_time\");\n        assertSameDate(\"2015-01-04T00:00Z\", \"strict_date_optional_time\");\n        assertSameDate(\"2018-12-31T10:15:30.1Z\", \"strict_date_time\");\n        assertSameDate(\"2018-12-31T10:15:30.123Z\", \"strict_date_time\");\n        assertSameDate(\"2018-12-31T10:15:30.123456789Z\", \"strict_date_time\");\n        assertSameDate(\"2018-12-31T10:15:30.1+0100\", \"strict_date_time\");\n        assertSameDate(\"2018-12-31T10:15:30.123+0100\", \"strict_date_time\");\n        assertSameDate(\"2018-12-31T10:15:30.1+01:00\", \"strict_date_time\");\n        assertSameDate(\"2018-12-31T10:15:30.123+01:00\", \"strict_date_time\");\n        assertSameDate(\"2018-12-31T10:15:30.11Z\", \"strict_date_time\");\n        assertSameDate(\"2018-12-31T10:15:30.11+0100\", \"strict_date_time\");\n        assertSameDate(\"2018-12-31T10:15:30.11+01:00\", \"strict_date_time\");\n        assertParseException(\"2018-12-31T10:15:3.123Z\", \"strict_date_time\");\n        assertParseException(\"2018-12-31T10:5:30.123Z\", \"strict_date_time\");\n        assertParseException(\"2018-12-31T1:15:30.123Z\", \"strict_date_time\");\n        assertSameDate(\"2018-12-31T10:15:30Z\", \"strict_date_time_no_millis\");\n        assertSameDate(\"2018-12-31T10:15:30+0100\", \"strict_date_time_no_millis\");\n        assertSameDate(\"2018-12-31T10:15:30+01:00\", \"strict_date_time_no_millis\");\n        assertParseException(\"2018-12-31T10:5:30Z\", \"strict_date_time_no_millis\");\n        assertParseException(\"2018-12-31T10:15:3Z\", \"strict_date_time_no_millis\");\n        assertParseException(\"2018-12-31T1:15:30Z\", \"strict_date_time_no_millis\");\n        assertSameDate(\"12\", \"strict_hour\");\n        assertSameDate(\"01\", \"strict_hour\");\n        assertParseException(\"1\", \"strict_hour\");\n        assertSameDate(\"12:12\", \"strict_hour_minute\");\n        assertSameDate(\"12:01\", \"strict_hour_minute\");\n        assertParseException(\"12:1\", \"strict_hour_minute\");\n        assertSameDate(\"12:12:12\", \"strict_hour_minute_second\");\n        assertSameDate(\"12:12:01\", \"strict_hour_minute_second\");\n        assertParseException(\"12:12:1\", \"strict_hour_minute_second\");\n        assertSameDate(\"12:12:12.123\", \"strict_hour_minute_second_fraction\");\n        assertSameDate(\"12:12:12.123456789\", \"strict_hour_minute_second_fraction\");\n        assertSameDate(\"12:12:12.1\", \"strict_hour_minute_second_fraction\");\n        assertParseException(\"12:12:12\", \"strict_hour_minute_second_fraction\");\n        assertSameDate(\"12:12:12.123\", \"strict_hour_minute_second_millis\");\n        assertSameDate(\"12:12:12.1\", \"strict_hour_minute_second_millis\");\n        assertParseException(\"12:12:12\", \"strict_hour_minute_second_millis\");\n        assertSameDate(\"2018-128\", \"strict_ordinal_date\");\n        assertParseException(\"2018-1\", \"strict_ordinal_date\");\n\n        assertSameDate(\"2018-128T10:15:30.1Z\", \"strict_ordinal_date_time\");\n        assertSameDate(\"2018-128T10:15:30.123Z\", \"strict_ordinal_date_time\");\n        assertSameDate(\"2018-128T10:15:30.123456789Z\", \"strict_ordinal_date_time\");\n        assertSameDate(\"2018-128T10:15:30.1+0100\", \"strict_ordinal_date_time\");\n        assertSameDate(\"2018-128T10:15:30.123+0100\", \"strict_ordinal_date_time\");\n        assertSameDate(\"2018-128T10:15:30.1+01:00\", \"strict_ordinal_date_time\");\n        assertSameDate(\"2018-128T10:15:30.123+01:00\", \"strict_ordinal_date_time\");\n        assertParseException(\"2018-1T10:15:30.123Z\", \"strict_ordinal_date_time\");\n\n        assertSameDate(\"2018-128T10:15:30Z\", \"strict_ordinal_date_time_no_millis\");\n        assertSameDate(\"2018-128T10:15:30+0100\", \"strict_ordinal_date_time_no_millis\");\n        assertSameDate(\"2018-128T10:15:30+01:00\", \"strict_ordinal_date_time_no_millis\");\n        assertParseException(\"2018-1T10:15:30Z\", \"strict_ordinal_date_time_no_millis\");\n\n        assertSameDate(\"10:15:30.1Z\", \"strict_time\");\n        assertSameDate(\"10:15:30.123Z\", \"strict_time\");\n        assertSameDate(\"10:15:30.123456789Z\", \"strict_time\");\n        assertSameDate(\"10:15:30.123+0100\", \"strict_time\");\n        assertSameDate(\"10:15:30.123+01:00\", \"strict_time\");\n        assertParseException(\"1:15:30.123Z\", \"strict_time\");\n        assertParseException(\"10:1:30.123Z\", \"strict_time\");\n        assertParseException(\"10:15:3.123Z\", \"strict_time\");\n        assertParseException(\"10:15:3.1\", \"strict_time\");\n        assertParseException(\"10:15:3Z\", \"strict_time\");\n\n        assertSameDate(\"10:15:30Z\", \"strict_time_no_millis\");\n        assertSameDate(\"10:15:30+0100\", \"strict_time_no_millis\");\n        assertSameDate(\"10:15:30+01:00\", \"strict_time_no_millis\");\n        assertSameDate(\"01:15:30Z\", \"strict_time_no_millis\");\n        assertSameDate(\"01:15:30+0100\", \"strict_time_no_millis\");\n        assertSameDate(\"01:15:30+01:00\", \"strict_time_no_millis\");\n        assertParseException(\"1:15:30Z\", \"strict_time_no_millis\");\n        assertParseException(\"10:5:30Z\", \"strict_time_no_millis\");\n        assertParseException(\"10:15:3Z\", \"strict_time_no_millis\");\n        assertParseException(\"10:15:3\", \"strict_time_no_millis\");\n\n        assertSameDate(\"T10:15:30.1Z\", \"strict_t_time\");\n        assertSameDate(\"T10:15:30.123Z\", \"strict_t_time\");\n        assertSameDate(\"T10:15:30.123456789Z\", \"strict_t_time\");\n        assertSameDate(\"T10:15:30.1+0100\", \"strict_t_time\");\n        assertSameDate(\"T10:15:30.123+0100\", \"strict_t_time\");\n        assertSameDate(\"T10:15:30.1+01:00\", \"strict_t_time\");\n        assertSameDate(\"T10:15:30.123+01:00\", \"strict_t_time\");\n        assertParseException(\"T1:15:30.123Z\", \"strict_t_time\");\n        assertParseException(\"T10:1:30.123Z\", \"strict_t_time\");\n        assertParseException(\"T10:15:3.123Z\", \"strict_t_time\");\n        assertParseException(\"T10:15:3.1\", \"strict_t_time\");\n        assertParseException(\"T10:15:3Z\", \"strict_t_time\");\n\n        assertSameDate(\"T10:15:30Z\", \"strict_t_time_no_millis\");\n        assertSameDate(\"T10:15:30+0100\", \"strict_t_time_no_millis\");\n        assertSameDate(\"T10:15:30+01:00\", \"strict_t_time_no_millis\");\n        assertParseException(\"T1:15:30Z\", \"strict_t_time_no_millis\");\n        assertParseException(\"T10:1:30Z\", \"strict_t_time_no_millis\");\n        assertParseException(\"T10:15:3Z\", \"strict_t_time_no_millis\");\n        assertParseException(\"T10:15:3\", \"strict_t_time_no_millis\");\n\n        assertSameDate(\"2012-W48-6\", \"strict_week_date\");\n        assertSameDate(\"2012-W01-6\", \"strict_week_date\");\n        assertParseException(\"2012-W1-6\", \"strict_week_date\");\n        assertParseException(\"2012-W1-8\", \"strict_week_date\");\n\n        assertSameDate(\"2012-W48-6\", \"strict_week_date\");\n        assertSameDate(\"2012-W01-6\", \"strict_week_date\");\n        assertParseException(\"2012-W1-6\", \"strict_week_date\");\n        \r\n        assertJodaParseException(\"2012-W01-8\", \"strict_week_date\",\n            \"Cannot parse \\\"2012-W01-8\\\": Value 8 for dayOfWeek must be in the range [1,7]\");\n        assertJavaTimeParseException(\"2012-W01-8\", \"strict_week_date\");\n\n        assertSameDate(\"2012-W48-6T10:15:30.1Z\", \"strict_week_date_time\");\n        assertSameDate(\"2012-W48-6T10:15:30.123Z\", \"strict_week_date_time\");\n        assertSameDate(\"2012-W48-6T10:15:30.123456789Z\", \"strict_week_date_time\");\n        assertSameDate(\"2012-W48-6T10:15:30.1+0100\", \"strict_week_date_time\");\n        assertSameDate(\"2012-W48-6T10:15:30.123+0100\", \"strict_week_date_time\");\n        assertSameDate(\"2012-W48-6T10:15:30.1+01:00\", \"strict_week_date_time\");\n        assertSameDate(\"2012-W48-6T10:15:30.123+01:00\", \"strict_week_date_time\");\n        assertParseException(\"2012-W1-6T10:15:30.123Z\", \"strict_week_date_time\");\n\n        assertSameDate(\"2012-W48-6T10:15:30Z\", \"strict_week_date_time_no_millis\");\n        assertSameDate(\"2012-W48-6T10:15:30+0100\", \"strict_week_date_time_no_millis\");\n        assertSameDate(\"2012-W48-6T10:15:30+01:00\", \"strict_week_date_time_no_millis\");\n        assertParseException(\"2012-W1-6T10:15:30Z\", \"strict_week_date_time_no_millis\");\n\n        assertSameDate(\"2012\", \"strict_year\");\n        assertParseException(\"1\", \"strict_year\");\n        assertSameDate(\"-2000\", \"strict_year\");\n\n        assertSameDate(\"2012-12\", \"strict_year_month\");\n        assertParseException(\"1-1\", \"strict_year_month\");\n\n        assertSameDate(\"2012-12-31\", \"strict_year_month_day\");\n        assertParseException(\"1-12-31\", \"strict_year_month_day\");\n        assertParseException(\"2012-1-31\", \"strict_year_month_day\");\n        assertParseException(\"2012-12-1\", \"strict_year_month_day\");\n\n        assertSameDate(\"2018\", \"strict_weekyear\");\n        assertParseException(\"1\", \"strict_weekyear\");\n\n        assertSameDate(\"2018\", \"strict_weekyear\");\n        assertSameDate(\"2017\", \"strict_weekyear\");\n        assertParseException(\"1\", \"strict_weekyear\");\n\n        assertSameDate(\"2018-W29\", \"strict_weekyear_week\");\n        assertSameDate(\"2018-W01\", \"strict_weekyear_week\");\n        assertParseException(\"2018-W1\", \"strict_weekyear_week\");\n\n        assertSameDate(\"2012-W31-5\", \"strict_weekyear_week_day\");\n        assertParseException(\"2012-W1-1\", \"strict_weekyear_week_day\");\n    }\n","date":"2019-04-02 16:26:54","endLine":593,"groupId":"103936","id":28,"instanceNumber":2,"isCurCommit":0,"methodName":"testDuelingStrictParsing","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/c3/a541fe87ec2e42bf47d0f440013c5534ba476c.src","preCode":"    public void testDuelingStrictParsing() {\n        assertSameDate(\"2018W313\", \"strict_basic_week_date\");\n        assertParseException(\"18W313\", \"strict_basic_week_date\");\n        assertSameDate(\"2018W313T121212.1Z\", \"strict_basic_week_date_time\");\n        assertSameDate(\"2018W313T121212.123Z\", \"strict_basic_week_date_time\");\n        assertSameDate(\"2018W313T121212.123456789Z\", \"strict_basic_week_date_time\");\n        assertSameDate(\"2018W313T121212.1+0100\", \"strict_basic_week_date_time\");\n        assertSameDate(\"2018W313T121212.123+0100\", \"strict_basic_week_date_time\");\n        assertSameDate(\"2018W313T121212.1+01:00\", \"strict_basic_week_date_time\");\n        assertSameDate(\"2018W313T121212.123+01:00\", \"strict_basic_week_date_time\");\n        assertParseException(\"2018W313T12128.123Z\", \"strict_basic_week_date_time\");\n        assertParseException(\"2018W313T12128.123456789Z\", \"strict_basic_week_date_time\");\n        assertParseException(\"2018W313T81212.123Z\", \"strict_basic_week_date_time\");\n        assertParseException(\"2018W313T12812.123Z\", \"strict_basic_week_date_time\");\n        assertParseException(\"2018W313T12812.1Z\", \"strict_basic_week_date_time\");\n        assertSameDate(\"2018W313T121212Z\", \"strict_basic_week_date_time_no_millis\");\n        assertSameDate(\"2018W313T121212+0100\", \"strict_basic_week_date_time_no_millis\");\n        assertSameDate(\"2018W313T121212+01:00\", \"strict_basic_week_date_time_no_millis\");\n        assertParseException(\"2018W313T12128Z\", \"strict_basic_week_date_time_no_millis\");\n        assertParseException(\"2018W313T12128+0100\", \"strict_basic_week_date_time_no_millis\");\n        assertParseException(\"2018W313T12128+01:00\", \"strict_basic_week_date_time_no_millis\");\n        assertParseException(\"2018W313T81212Z\", \"strict_basic_week_date_time_no_millis\");\n        assertParseException(\"2018W313T81212+0100\", \"strict_basic_week_date_time_no_millis\");\n        assertParseException(\"2018W313T81212+01:00\", \"strict_basic_week_date_time_no_millis\");\n        assertParseException(\"2018W313T12812Z\", \"strict_basic_week_date_time_no_millis\");\n        assertParseException(\"2018W313T12812+0100\", \"strict_basic_week_date_time_no_millis\");\n        assertParseException(\"2018W313T12812+01:00\", \"strict_basic_week_date_time_no_millis\");\n        assertSameDate(\"2018-12-31\", \"strict_date\");\n        assertParseException(\"10000-12-31\", \"strict_date\");\n        assertParseException(\"2018-8-31\", \"strict_date\");\n        assertSameDate(\"2018-12-31T12\", \"strict_date_hour\");\n        assertParseException(\"2018-12-31T8\", \"strict_date_hour\");\n        assertSameDate(\"2018-12-31T12:12\", \"strict_date_hour_minute\");\n        assertParseException(\"2018-12-31T8:3\", \"strict_date_hour_minute\");\n        assertSameDate(\"2018-12-31T12:12:12\", \"strict_date_hour_minute_second\");\n        assertParseException(\"2018-12-31T12:12:1\", \"strict_date_hour_minute_second\");\n        assertSameDate(\"2018-12-31T12:12:12.1\", \"strict_date_hour_minute_second_fraction\");\n        assertSameDate(\"2018-12-31T12:12:12.123\", \"strict_date_hour_minute_second_fraction\");\n        assertSameDate(\"2018-12-31T12:12:12.123456789\", \"strict_date_hour_minute_second_fraction\");\n        assertSameDate(\"2018-12-31T12:12:12.123\", \"strict_date_hour_minute_second_millis\");\n        assertSameDate(\"2018-12-31T12:12:12.1\", \"strict_date_hour_minute_second_millis\");\n        assertSameDate(\"2018-12-31T12:12:12.1\", \"strict_date_hour_minute_second_fraction\");\n        assertParseException(\"2018-12-31T12:12:12\", \"strict_date_hour_minute_second_millis\");\n        assertParseException(\"2018-12-31T12:12:12\", \"strict_date_hour_minute_second_fraction\");\n        assertSameDate(\"2018-12-31\", \"strict_date_optional_time\");\n        assertParseException(\"2018-12-1\", \"strict_date_optional_time\");\n        assertParseException(\"2018-1-31\", \"strict_date_optional_time\");\n        assertParseException(\"10000-01-31\", \"strict_date_optional_time\");\n        assertSameDate(\"2010-01-05T02:00\", \"strict_date_optional_time\");\n        assertSameDate(\"2018-12-31T10:15:30\", \"strict_date_optional_time\");\n        assertSameDate(\"2018-12-31T10:15:30Z\", \"strict_date_optional_time\");\n        assertSameDate(\"2018-12-31T10:15:30+0100\", \"strict_date_optional_time\");\n        assertSameDate(\"2018-12-31T10:15:30+01:00\", \"strict_date_optional_time\");\n        assertParseException(\"2018-12-31T10:15:3\", \"strict_date_optional_time\");\n        assertParseException(\"2018-12-31T10:5:30\", \"strict_date_optional_time\");\n        assertParseException(\"2018-12-31T9:15:30\", \"strict_date_optional_time\");\n        assertSameDate(\"2015-01-04T00:00Z\", \"strict_date_optional_time\");\n        assertSameDate(\"2018-12-31T10:15:30.1Z\", \"strict_date_time\");\n        assertSameDate(\"2018-12-31T10:15:30.123Z\", \"strict_date_time\");\n        assertSameDate(\"2018-12-31T10:15:30.123456789Z\", \"strict_date_time\");\n        assertSameDate(\"2018-12-31T10:15:30.1+0100\", \"strict_date_time\");\n        assertSameDate(\"2018-12-31T10:15:30.123+0100\", \"strict_date_time\");\n        assertSameDate(\"2018-12-31T10:15:30.1+01:00\", \"strict_date_time\");\n        assertSameDate(\"2018-12-31T10:15:30.123+01:00\", \"strict_date_time\");\n        assertSameDate(\"2018-12-31T10:15:30.11Z\", \"strict_date_time\");\n        assertSameDate(\"2018-12-31T10:15:30.11+0100\", \"strict_date_time\");\n        assertSameDate(\"2018-12-31T10:15:30.11+01:00\", \"strict_date_time\");\n        assertParseException(\"2018-12-31T10:15:3.123Z\", \"strict_date_time\");\n        assertParseException(\"2018-12-31T10:5:30.123Z\", \"strict_date_time\");\n        assertParseException(\"2018-12-31T1:15:30.123Z\", \"strict_date_time\");\n        assertSameDate(\"2018-12-31T10:15:30Z\", \"strict_date_time_no_millis\");\n        assertSameDate(\"2018-12-31T10:15:30+0100\", \"strict_date_time_no_millis\");\n        assertSameDate(\"2018-12-31T10:15:30+01:00\", \"strict_date_time_no_millis\");\n        assertParseException(\"2018-12-31T10:5:30Z\", \"strict_date_time_no_millis\");\n        assertParseException(\"2018-12-31T10:15:3Z\", \"strict_date_time_no_millis\");\n        assertParseException(\"2018-12-31T1:15:30Z\", \"strict_date_time_no_millis\");\n        assertSameDate(\"12\", \"strict_hour\");\n        assertSameDate(\"01\", \"strict_hour\");\n        assertParseException(\"1\", \"strict_hour\");\n        assertSameDate(\"12:12\", \"strict_hour_minute\");\n        assertSameDate(\"12:01\", \"strict_hour_minute\");\n        assertParseException(\"12:1\", \"strict_hour_minute\");\n        assertSameDate(\"12:12:12\", \"strict_hour_minute_second\");\n        assertSameDate(\"12:12:01\", \"strict_hour_minute_second\");\n        assertParseException(\"12:12:1\", \"strict_hour_minute_second\");\n        assertSameDate(\"12:12:12.123\", \"strict_hour_minute_second_fraction\");\n        assertSameDate(\"12:12:12.123456789\", \"strict_hour_minute_second_fraction\");\n        assertSameDate(\"12:12:12.1\", \"strict_hour_minute_second_fraction\");\n        assertParseException(\"12:12:12\", \"strict_hour_minute_second_fraction\");\n        assertSameDate(\"12:12:12.123\", \"strict_hour_minute_second_millis\");\n        assertSameDate(\"12:12:12.1\", \"strict_hour_minute_second_millis\");\n        assertParseException(\"12:12:12\", \"strict_hour_minute_second_millis\");\n        assertSameDate(\"2018-128\", \"strict_ordinal_date\");\n        assertParseException(\"2018-1\", \"strict_ordinal_date\");\n\n        assertSameDate(\"2018-128T10:15:30.1Z\", \"strict_ordinal_date_time\");\n        assertSameDate(\"2018-128T10:15:30.123Z\", \"strict_ordinal_date_time\");\n        assertSameDate(\"2018-128T10:15:30.123456789Z\", \"strict_ordinal_date_time\");\n        assertSameDate(\"2018-128T10:15:30.1+0100\", \"strict_ordinal_date_time\");\n        assertSameDate(\"2018-128T10:15:30.123+0100\", \"strict_ordinal_date_time\");\n        assertSameDate(\"2018-128T10:15:30.1+01:00\", \"strict_ordinal_date_time\");\n        assertSameDate(\"2018-128T10:15:30.123+01:00\", \"strict_ordinal_date_time\");\n        assertParseException(\"2018-1T10:15:30.123Z\", \"strict_ordinal_date_time\");\n\n        assertSameDate(\"2018-128T10:15:30Z\", \"strict_ordinal_date_time_no_millis\");\n        assertSameDate(\"2018-128T10:15:30+0100\", \"strict_ordinal_date_time_no_millis\");\n        assertSameDate(\"2018-128T10:15:30+01:00\", \"strict_ordinal_date_time_no_millis\");\n        assertParseException(\"2018-1T10:15:30Z\", \"strict_ordinal_date_time_no_millis\");\n\n        assertSameDate(\"10:15:30.1Z\", \"strict_time\");\n        assertSameDate(\"10:15:30.123Z\", \"strict_time\");\n        assertSameDate(\"10:15:30.123456789Z\", \"strict_time\");\n        assertSameDate(\"10:15:30.123+0100\", \"strict_time\");\n        assertSameDate(\"10:15:30.123+01:00\", \"strict_time\");\n        assertParseException(\"1:15:30.123Z\", \"strict_time\");\n        assertParseException(\"10:1:30.123Z\", \"strict_time\");\n        assertParseException(\"10:15:3.123Z\", \"strict_time\");\n        assertParseException(\"10:15:3.1\", \"strict_time\");\n        assertParseException(\"10:15:3Z\", \"strict_time\");\n\n        assertSameDate(\"10:15:30Z\", \"strict_time_no_millis\");\n        assertSameDate(\"10:15:30+0100\", \"strict_time_no_millis\");\n        assertSameDate(\"10:15:30+01:00\", \"strict_time_no_millis\");\n        assertSameDate(\"01:15:30Z\", \"strict_time_no_millis\");\n        assertSameDate(\"01:15:30+0100\", \"strict_time_no_millis\");\n        assertSameDate(\"01:15:30+01:00\", \"strict_time_no_millis\");\n        assertParseException(\"1:15:30Z\", \"strict_time_no_millis\");\n        assertParseException(\"10:5:30Z\", \"strict_time_no_millis\");\n        assertParseException(\"10:15:3Z\", \"strict_time_no_millis\");\n        assertParseException(\"10:15:3\", \"strict_time_no_millis\");\n\n        assertSameDate(\"T10:15:30.1Z\", \"strict_t_time\");\n        assertSameDate(\"T10:15:30.123Z\", \"strict_t_time\");\n        assertSameDate(\"T10:15:30.123456789Z\", \"strict_t_time\");\n        assertSameDate(\"T10:15:30.1+0100\", \"strict_t_time\");\n        assertSameDate(\"T10:15:30.123+0100\", \"strict_t_time\");\n        assertSameDate(\"T10:15:30.1+01:00\", \"strict_t_time\");\n        assertSameDate(\"T10:15:30.123+01:00\", \"strict_t_time\");\n        assertParseException(\"T1:15:30.123Z\", \"strict_t_time\");\n        assertParseException(\"T10:1:30.123Z\", \"strict_t_time\");\n        assertParseException(\"T10:15:3.123Z\", \"strict_t_time\");\n        assertParseException(\"T10:15:3.1\", \"strict_t_time\");\n        assertParseException(\"T10:15:3Z\", \"strict_t_time\");\n\n        assertSameDate(\"T10:15:30Z\", \"strict_t_time_no_millis\");\n        assertSameDate(\"T10:15:30+0100\", \"strict_t_time_no_millis\");\n        assertSameDate(\"T10:15:30+01:00\", \"strict_t_time_no_millis\");\n        assertParseException(\"T1:15:30Z\", \"strict_t_time_no_millis\");\n        assertParseException(\"T10:1:30Z\", \"strict_t_time_no_millis\");\n        assertParseException(\"T10:15:3Z\", \"strict_t_time_no_millis\");\n        assertParseException(\"T10:15:3\", \"strict_t_time_no_millis\");\n\n        assertSameDate(\"2012-W48-6\", \"strict_week_date\");\n        assertSameDate(\"2012-W01-6\", \"strict_week_date\");\n        assertParseException(\"2012-W1-6\", \"strict_week_date\");\n        assertParseException(\"2012-W1-8\", \"strict_week_date\");\n\n        assertSameDate(\"2012-W48-6\", \"strict_week_date\");\n        assertSameDate(\"2012-W01-6\", \"strict_week_date\");\n        assertParseException(\"2012-W1-6\", \"strict_week_date\");\n        \r\n        assertJodaParseException(\"2012-W01-8\", \"strict_week_date\",\n            \"Cannot parse \\\"2012-W01-8\\\": Value 8 for dayOfWeek must be in the range [1,7]\");\n        assertJavaTimeParseException(\"2012-W01-8\", \"strict_week_date\");\n\n        assertSameDate(\"2012-W48-6T10:15:30.1Z\", \"strict_week_date_time\");\n        assertSameDate(\"2012-W48-6T10:15:30.123Z\", \"strict_week_date_time\");\n        assertSameDate(\"2012-W48-6T10:15:30.123456789Z\", \"strict_week_date_time\");\n        assertSameDate(\"2012-W48-6T10:15:30.1+0100\", \"strict_week_date_time\");\n        assertSameDate(\"2012-W48-6T10:15:30.123+0100\", \"strict_week_date_time\");\n        assertSameDate(\"2012-W48-6T10:15:30.1+01:00\", \"strict_week_date_time\");\n        assertSameDate(\"2012-W48-6T10:15:30.123+01:00\", \"strict_week_date_time\");\n        assertParseException(\"2012-W1-6T10:15:30.123Z\", \"strict_week_date_time\");\n\n        assertSameDate(\"2012-W48-6T10:15:30Z\", \"strict_week_date_time_no_millis\");\n        assertSameDate(\"2012-W48-6T10:15:30+0100\", \"strict_week_date_time_no_millis\");\n        assertSameDate(\"2012-W48-6T10:15:30+01:00\", \"strict_week_date_time_no_millis\");\n        assertParseException(\"2012-W1-6T10:15:30Z\", \"strict_week_date_time_no_millis\");\n\n        assertSameDate(\"2012\", \"strict_year\");\n        assertParseException(\"1\", \"strict_year\");\n        assertSameDate(\"-2000\", \"strict_year\");\n\n        assertSameDate(\"2012-12\", \"strict_year_month\");\n        assertParseException(\"1-1\", \"strict_year_month\");\n\n        assertSameDate(\"2012-12-31\", \"strict_year_month_day\");\n        assertParseException(\"1-12-31\", \"strict_year_month_day\");\n        assertParseException(\"2012-1-31\", \"strict_year_month_day\");\n        assertParseException(\"2012-12-1\", \"strict_year_month_day\");\n\n        assertSameDate(\"2018\", \"strict_weekyear\");\n        assertParseException(\"1\", \"strict_weekyear\");\n\n        assertSameDate(\"2018\", \"strict_weekyear\");\n        assertSameDate(\"2017\", \"strict_weekyear\");\n        assertParseException(\"1\", \"strict_weekyear\");\n\n        assertSameDate(\"2018-W29\", \"strict_weekyear_week\");\n        assertSameDate(\"2018-W01\", \"strict_weekyear_week\");\n        assertParseException(\"2018-W1\", \"strict_weekyear_week\");\n\n        assertSameDate(\"2012-W31-5\", \"strict_weekyear_week_day\");\n        assertParseException(\"2012-W1-1\", \"strict_weekyear_week_day\");\n    }\n","realPath":"server/src/test/java/org/elasticsearch/common/joda/JavaJodaTimeDuellingTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":389,"status":"N"}],"commitId":"233d8434fbd4512fbd9818d6f7bfd647f6a68dbd","commitMessage":"@@@Deprecate week_year in favour of weekyear date format (#63307)\n\nweek_year is misleading as the formatter only has a weekyear. A field\ncorresponding to 'Y'. 'weekyear' should be used instead\n\nrelates #60707","date":"2020-10-07 15:15:53","modifiedFileCount":"5","status":"M","submitter":"Przemyslaw Gomulka"}]
