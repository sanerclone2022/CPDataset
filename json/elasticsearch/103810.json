[{"authorTime":"2020-12-04 17:24:09","codes":[{"authorDate":"2020-12-04 17:24:09","commitOrder":1,"curCode":"    public void testPatternWithSimpleRange() {\n\n        final SystemIndices systemIndices = new SystemIndices(Map.of(\"test\", List.of(new SystemIndexDescriptor(\".test-[abc]\", \"\"))));\n\n        assertThat(systemIndices.isSystemIndex(\".test-a\"), equalTo(true));\n        assertThat(systemIndices.isSystemIndex(\".test-b\"), equalTo(true));\n        assertThat(systemIndices.isSystemIndex(\".test-c\"), equalTo(true));\n\n        assertThat(systemIndices.isSystemIndex(\".test-aa\"), equalTo(false));\n        assertThat(systemIndices.isSystemIndex(\".test-d\"), equalTo(false));\n        assertThat(systemIndices.isSystemIndex(\".test-\"), equalTo(false));\n        assertThat(systemIndices.isSystemIndex(\".test-=\"), equalTo(false));\n    }\n","date":"2020-12-04 17:24:09","endLine":116,"groupId":"21049","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testPatternWithSimpleRange","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/a6/1cb64e1b7444dbdf500ce4ebef825d524c3ff4.src","preCode":"    public void testPatternWithSimpleRange() {\n\n        final SystemIndices systemIndices = new SystemIndices(Map.of(\"test\", List.of(new SystemIndexDescriptor(\".test-[abc]\", \"\"))));\n\n        assertThat(systemIndices.isSystemIndex(\".test-a\"), equalTo(true));\n        assertThat(systemIndices.isSystemIndex(\".test-b\"), equalTo(true));\n        assertThat(systemIndices.isSystemIndex(\".test-c\"), equalTo(true));\n\n        assertThat(systemIndices.isSystemIndex(\".test-aa\"), equalTo(false));\n        assertThat(systemIndices.isSystemIndex(\".test-d\"), equalTo(false));\n        assertThat(systemIndices.isSystemIndex(\".test-\"), equalTo(false));\n        assertThat(systemIndices.isSystemIndex(\".test-=\"), equalTo(false));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/indices/SystemIndicesTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":104,"status":"B"},{"authorDate":"2020-12-04 17:24:09","commitOrder":1,"curCode":"    public void testPatternWithComplexRange() {\n        final SystemIndices systemIndices = new SystemIndices(Map.of(\"test\", List.of(new SystemIndexDescriptor(\".test-[a-c]\", \"\"))));\n\n        assertThat(systemIndices.isSystemIndex(\".test-a\"), equalTo(true));\n        assertThat(systemIndices.isSystemIndex(\".test-b\"), equalTo(true));\n        assertThat(systemIndices.isSystemIndex(\".test-c\"), equalTo(true));\n\n        assertThat(systemIndices.isSystemIndex(\".test-aa\"), equalTo(false));\n        assertThat(systemIndices.isSystemIndex(\".test-d\"), equalTo(false));\n        assertThat(systemIndices.isSystemIndex(\".test-\"), equalTo(false));\n        assertThat(systemIndices.isSystemIndex(\".test-=\"), equalTo(false));\n    }\n","date":"2020-12-04 17:24:09","endLine":139,"groupId":"21049","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testPatternWithComplexRange","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/a6/1cb64e1b7444dbdf500ce4ebef825d524c3ff4.src","preCode":"    public void testPatternWithComplexRange() {\n        final SystemIndices systemIndices = new SystemIndices(Map.of(\"test\", List.of(new SystemIndexDescriptor(\".test-[a-c]\", \"\"))));\n\n        assertThat(systemIndices.isSystemIndex(\".test-a\"), equalTo(true));\n        assertThat(systemIndices.isSystemIndex(\".test-b\"), equalTo(true));\n        assertThat(systemIndices.isSystemIndex(\".test-c\"), equalTo(true));\n\n        assertThat(systemIndices.isSystemIndex(\".test-aa\"), equalTo(false));\n        assertThat(systemIndices.isSystemIndex(\".test-d\"), equalTo(false));\n        assertThat(systemIndices.isSystemIndex(\".test-\"), equalTo(false));\n        assertThat(systemIndices.isSystemIndex(\".test-=\"), equalTo(false));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/indices/SystemIndicesTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":128,"status":"B"}],"commitId":"cbd5d1230cdddeea7e8acf2919bae9243c23da68","commitMessage":"@@@Add infrastructure for managing system indices (#65604)\n\nPart of #61656.\n\nAdd the necessary support for automatically creating and updating system\nindices. This works by making it possible to create a system index\ndescriptor with all the information needed to manage the mappings. \nsettings and aliases.\n\nFollow-up work will opt existing indices into this framework.","date":"2020-12-04 17:24:09","modifiedFileCount":"14","status":"B","submitter":"Rory Hunter"},{"authorTime":"2021-02-12 02:55:14","codes":[{"authorDate":"2021-02-12 02:55:14","commitOrder":2,"curCode":"    public void testPatternWithSimpleRange() {\n\n        final SystemIndices systemIndices = new SystemIndices(Map.of(\n            \"test\", new SystemIndices.Feature(\"test feature\", List.of(new SystemIndexDescriptor(\".test-[abc]\", \"\")))\n        ));\n\n        assertThat(systemIndices.isSystemIndex(\".test-a\"), equalTo(true));\n        assertThat(systemIndices.isSystemIndex(\".test-b\"), equalTo(true));\n        assertThat(systemIndices.isSystemIndex(\".test-c\"), equalTo(true));\n\n        assertThat(systemIndices.isSystemIndex(\".test-aa\"), equalTo(false));\n        assertThat(systemIndices.isSystemIndex(\".test-d\"), equalTo(false));\n        assertThat(systemIndices.isSystemIndex(\".test-\"), equalTo(false));\n        assertThat(systemIndices.isSystemIndex(\".test-=\"), equalTo(false));\n    }\n","date":"2021-02-12 02:55:14","endLine":107,"groupId":"21049","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testPatternWithSimpleRange","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/23/b48b42840356d46250f71f0c186045283bdb94.src","preCode":"    public void testPatternWithSimpleRange() {\n\n        final SystemIndices systemIndices = new SystemIndices(Map.of(\"test\", List.of(new SystemIndexDescriptor(\".test-[abc]\", \"\"))));\n\n        assertThat(systemIndices.isSystemIndex(\".test-a\"), equalTo(true));\n        assertThat(systemIndices.isSystemIndex(\".test-b\"), equalTo(true));\n        assertThat(systemIndices.isSystemIndex(\".test-c\"), equalTo(true));\n\n        assertThat(systemIndices.isSystemIndex(\".test-aa\"), equalTo(false));\n        assertThat(systemIndices.isSystemIndex(\".test-d\"), equalTo(false));\n        assertThat(systemIndices.isSystemIndex(\".test-\"), equalTo(false));\n        assertThat(systemIndices.isSystemIndex(\".test-=\"), equalTo(false));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/indices/SystemIndicesTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":93,"status":"M"},{"authorDate":"2021-02-12 02:55:14","commitOrder":2,"curCode":"    public void testPatternWithComplexRange() {\n        final SystemIndices systemIndices = new SystemIndices(Map.of(\n            \"test\", new SystemIndices.Feature(\"test feature\", List.of(new SystemIndexDescriptor(\".test-[a-c]\", \"\")))\n        ));\n\n        assertThat(systemIndices.isSystemIndex(\".test-a\"), equalTo(true));\n        assertThat(systemIndices.isSystemIndex(\".test-b\"), equalTo(true));\n        assertThat(systemIndices.isSystemIndex(\".test-c\"), equalTo(true));\n\n        assertThat(systemIndices.isSystemIndex(\".test-aa\"), equalTo(false));\n        assertThat(systemIndices.isSystemIndex(\".test-d\"), equalTo(false));\n        assertThat(systemIndices.isSystemIndex(\".test-\"), equalTo(false));\n        assertThat(systemIndices.isSystemIndex(\".test-=\"), equalTo(false));\n    }\n","date":"2021-02-12 02:55:14","endLine":134,"groupId":"21049","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testPatternWithComplexRange","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/23/b48b42840356d46250f71f0c186045283bdb94.src","preCode":"    public void testPatternWithComplexRange() {\n        final SystemIndices systemIndices = new SystemIndices(Map.of(\"test\", List.of(new SystemIndexDescriptor(\".test-[a-c]\", \"\"))));\n\n        assertThat(systemIndices.isSystemIndex(\".test-a\"), equalTo(true));\n        assertThat(systemIndices.isSystemIndex(\".test-b\"), equalTo(true));\n        assertThat(systemIndices.isSystemIndex(\".test-c\"), equalTo(true));\n\n        assertThat(systemIndices.isSystemIndex(\".test-aa\"), equalTo(false));\n        assertThat(systemIndices.isSystemIndex(\".test-d\"), equalTo(false));\n        assertThat(systemIndices.isSystemIndex(\".test-\"), equalTo(false));\n        assertThat(systemIndices.isSystemIndex(\".test-=\"), equalTo(false));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/indices/SystemIndicesTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":121,"status":"M"}],"commitId":"3f6472de748d9d7dff66c6ccacea57c08b539b7e","commitMessage":"@@@Introduce \"Feature States\" for managing snapshots of system indices (#63513)\n\nThis PR expands the meaning of `include_global_state` for snapshots to include system indices. If `include_global_state` is `true` on creation.  system indices will be included in the snapshot regardless of the contents of the `indices` field. If `include_global_state` is `true` on restoration.  system indices will be restored (if included in the snapshot).  regardless of the contents of the `indices` field. Index renaming is not applied to system indices.  as system indices rely on their names matching certain patterns. If restored system indices are already present.  they are automatically deleted prior to restoration from the snapshot to avoid conflicts.\n\nThis behavior can be overridden to an extent by including a new field in the snapshot creation or restoration call.  `feature_states`.  which contains an array of strings indicating the \"feature\" for which system indices should be snapshotted or restored. For example.  this call will only restore the `watcher` and `security` system indices (in addition to `index_1`):\n\n```\nPOST /_snapshot/my_repository/snapshot_2/_restore\n{\n  \"indices\": \"index_1\". \n  \"include_global_state\": true. \n  \"feature_states\": [\"watcher\".  \"security\"]\n}\n```\n\nIf `feature_states` is present.  the system indices associated with those features will be snapshotted or restored regardless of the value of `include_global_state`. All system indices can be omitted by providing a special value of `none` (`\"feature_states\": [\"none\"]`).  or included by omitting the field or explicitly providing an empty array (`\"feature_states\": []`).  similar to the `indices` field.\n\nThe list of currently available features can be retrieved via a new \"Get Snapshottable Features\" API:\n```\nGET /_snapshottable_features\n```\n\nwhich returns a response of the form:\n```\n{\n    \"features\": [\n        {\n            \"name\": \"tasks\". \n            \"description\": \"Manages task results\"\n        }. \n        {\n            \"name\": \"kibana\". \n            \"description\": \"Manages Kibana configuration and reports\"\n        }\n    ]\n}\n```\n\nFeatures currently map one-to-one with `SystemIndexPlugin`s.  but this should be considered an implementation detail. The Get Snapshottable Features API and snapshot creation rely upon all relevant plugins being installed on the master node.\n\nFurther.  the list of feature states included in a given snapshot is exposed by the Get Snapshot API.  which now includes a new field.  `feature_states`.  which contains a list of the feature states and their associated system indices which are included in the snapshot. All system indices in feature states are also included in the `indices` array for backwards compatibility.  although explicitly requesting system indices included in a feature state is deprecated. For example.  an excerpt from the Get Snapshot API showing `feature_states`:\n```\n\"feature_states\": [\n    {\n        \"feature_name\": \"tasks\". \n        \"indices\": [\n            \".tasks\"\n        ]\n    }\n]. \n\"indices\": [\n    \".tasks\". \n    \"test1\". \n    \"test2\"\n]\n```\n\nCo-authored-by: William Brafford <william.brafford@elastic.co>","date":"2021-02-12 02:55:14","modifiedFileCount":"79","status":"M","submitter":"Gordon Brown"},{"authorTime":"2021-03-18 04:14:34","codes":[{"authorDate":"2021-03-18 04:14:34","commitOrder":3,"curCode":"    public void testPatternWithSimpleRange() {\n\n        final SystemIndices systemIndices = new SystemIndices(Map.of(\n            \"test\", new SystemIndices.Feature(\"test\", \"test feature\", List.of(new SystemIndexDescriptor(\".test-[abc]\", \"\")))\n        ));\n\n        assertThat(systemIndices.isSystemIndex(\".test-a\"), equalTo(true));\n        assertThat(systemIndices.isSystemIndex(\".test-b\"), equalTo(true));\n        assertThat(systemIndices.isSystemIndex(\".test-c\"), equalTo(true));\n\n        assertThat(systemIndices.isSystemIndex(\".test-aa\"), equalTo(false));\n        assertThat(systemIndices.isSystemIndex(\".test-d\"), equalTo(false));\n        assertThat(systemIndices.isSystemIndex(\".test-\"), equalTo(false));\n        assertThat(systemIndices.isSystemIndex(\".test-=\"), equalTo(false));\n    }\n","date":"2021-03-18 04:14:34","endLine":108,"groupId":"103810","id":5,"instanceNumber":1,"isCurCommit":1,"methodName":"testPatternWithSimpleRange","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/99/9f09b9d1f60becb18bf00220e038e1ebcda932.src","preCode":"    public void testPatternWithSimpleRange() {\n\n        final SystemIndices systemIndices = new SystemIndices(Map.of(\n            \"test\", new SystemIndices.Feature(\"test feature\", List.of(new SystemIndexDescriptor(\".test-[abc]\", \"\")))\n        ));\n\n        assertThat(systemIndices.isSystemIndex(\".test-a\"), equalTo(true));\n        assertThat(systemIndices.isSystemIndex(\".test-b\"), equalTo(true));\n        assertThat(systemIndices.isSystemIndex(\".test-c\"), equalTo(true));\n\n        assertThat(systemIndices.isSystemIndex(\".test-aa\"), equalTo(false));\n        assertThat(systemIndices.isSystemIndex(\".test-d\"), equalTo(false));\n        assertThat(systemIndices.isSystemIndex(\".test-\"), equalTo(false));\n        assertThat(systemIndices.isSystemIndex(\".test-=\"), equalTo(false));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/indices/SystemIndicesTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":94,"status":"M"},{"authorDate":"2021-03-18 04:14:34","commitOrder":3,"curCode":"    public void testPatternWithComplexRange() {\n        final SystemIndices systemIndices = new SystemIndices(Map.of(\n            \"test\", new SystemIndices.Feature(\"test\", \"test feature\", List.of(new SystemIndexDescriptor(\".test-[a-c]\", \"\")))\n        ));\n\n        assertThat(systemIndices.isSystemIndex(\".test-a\"), equalTo(true));\n        assertThat(systemIndices.isSystemIndex(\".test-b\"), equalTo(true));\n        assertThat(systemIndices.isSystemIndex(\".test-c\"), equalTo(true));\n\n        assertThat(systemIndices.isSystemIndex(\".test-aa\"), equalTo(false));\n        assertThat(systemIndices.isSystemIndex(\".test-d\"), equalTo(false));\n        assertThat(systemIndices.isSystemIndex(\".test-\"), equalTo(false));\n        assertThat(systemIndices.isSystemIndex(\".test-=\"), equalTo(false));\n    }\n","date":"2021-03-18 04:14:34","endLine":135,"groupId":"103810","id":6,"instanceNumber":2,"isCurCommit":1,"methodName":"testPatternWithComplexRange","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/99/9f09b9d1f60becb18bf00220e038e1ebcda932.src","preCode":"    public void testPatternWithComplexRange() {\n        final SystemIndices systemIndices = new SystemIndices(Map.of(\n            \"test\", new SystemIndices.Feature(\"test feature\", List.of(new SystemIndexDescriptor(\".test-[a-c]\", \"\")))\n        ));\n\n        assertThat(systemIndices.isSystemIndex(\".test-a\"), equalTo(true));\n        assertThat(systemIndices.isSystemIndex(\".test-b\"), equalTo(true));\n        assertThat(systemIndices.isSystemIndex(\".test-c\"), equalTo(true));\n\n        assertThat(systemIndices.isSystemIndex(\".test-aa\"), equalTo(false));\n        assertThat(systemIndices.isSystemIndex(\".test-d\"), equalTo(false));\n        assertThat(systemIndices.isSystemIndex(\".test-\"), equalTo(false));\n        assertThat(systemIndices.isSystemIndex(\".test-=\"), equalTo(false));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/indices/SystemIndicesTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":122,"status":"M"}],"commitId":"624ee45a8ed1258e5f46b95b81e661a3cf60b8d9","commitMessage":"@@@Add API for resetting state of a `SystemIndexPlugin` (#69469)\n\nWhen we disable access to system indices.  plugins will still need\na way to erase their state. The obvious and most pressing use\ncase for this is in tests.  which need to be able to clean up the\nstate of a cluster in between groups of tests.\n\n* Use a HandledTransportAction for reset action\n\nMy initial cut used a TransportMasterNodeAction.  which requires code\nthat carefully manipulates cluster state. At least for the first cut and\ntesting.  it seems like it will be much easier to use a client within a\nHandledTransportAction.  which effectively makes the\nTransportResetFeatureStateAction a class that dispatches other transport\nactions to do the real work.\n\n* Clean up code by using a GroupedActionListener\n\n* ML feature state cleaner\n\n* Implement Transform feature state reset\n\n* Change _features/reset path to _features/_reset\n\nOut of an abundance of caution.  I think the \"reset\" part of this path\nshould have a leading underscore.  so that if there's ever a reason to\nimplement \"GET _features/<feature_id>\" we won't have to worry about\ndistinguishing \"reset\" from a feature name.\n\nCo-authored-by: Gordon Brown <gordon.brown@elastic.co>\nCo-authored-by: Elastic Machine <elasticmachine@users.noreply.github.com>","date":"2021-03-18 04:14:34","modifiedFileCount":"18","status":"M","submitter":"William Brafford"}]
