[{"authorTime":"2018-04-26 03:22:53","codes":[{"authorDate":"2018-04-26 03:22:53","commitOrder":1,"curCode":"    public void testNonResizeRouting() {\n        ClusterState clusterState = createInitialClusterState(true);\n        ResizeAllocationDecider resizeAllocationDecider = new ResizeAllocationDecider(Settings.EMPTY);\n        RoutingAllocation routingAllocation = new RoutingAllocation(null, null, clusterState, null, 0);\n        ShardRouting shardRouting = TestShardRouting.newShardRouting(\"non-resize\", 0, null, true, ShardRoutingState.UNASSIGNED);\n        assertEquals(Decision.ALWAYS, resizeAllocationDecider.canAllocate(shardRouting, routingAllocation));\n        assertEquals(Decision.ALWAYS, resizeAllocationDecider.canAllocate(shardRouting, clusterState.getRoutingNodes().node(\"node1\"),\n            routingAllocation));\n    }\n","date":"2018-04-26 03:22:53","endLine":119,"groupId":"31075","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testNonResizeRouting","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/20/22ecb945ba0dcb756d8a3796c8df6251f2bbe0.src","preCode":"    public void testNonResizeRouting() {\n        ClusterState clusterState = createInitialClusterState(true);\n        ResizeAllocationDecider resizeAllocationDecider = new ResizeAllocationDecider(Settings.EMPTY);\n        RoutingAllocation routingAllocation = new RoutingAllocation(null, null, clusterState, null, 0);\n        ShardRouting shardRouting = TestShardRouting.newShardRouting(\"non-resize\", 0, null, true, ShardRoutingState.UNASSIGNED);\n        assertEquals(Decision.ALWAYS, resizeAllocationDecider.canAllocate(shardRouting, routingAllocation));\n        assertEquals(Decision.ALWAYS, resizeAllocationDecider.canAllocate(shardRouting, clusterState.getRoutingNodes().node(\"node1\"),\n            routingAllocation));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/cluster/routing/allocation/ResizeAllocationDeciderTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":111,"status":"B"},{"authorDate":"2018-04-26 03:22:53","commitOrder":1,"curCode":"    public void testShrink() { \r\n        ClusterState clusterState = createInitialClusterState(true);\n        MetaData.Builder metaBuilder = MetaData.builder(clusterState.metaData());\n        metaBuilder.put(IndexMetaData.builder(\"target\").settings(settings(Version.CURRENT)\n            .put(IndexMetaData.INDEX_RESIZE_SOURCE_NAME.getKey(), \"source\")\n            .put(IndexMetaData.INDEX_RESIZE_SOURCE_UUID_KEY, IndexMetaData.INDEX_UUID_NA_VALUE))\n            .numberOfShards(1).numberOfReplicas(0));\n        MetaData metaData = metaBuilder.build();\n        RoutingTable.Builder routingTableBuilder = RoutingTable.builder(clusterState.routingTable());\n        routingTableBuilder.addAsNew(metaData.index(\"target\"));\n\n        clusterState = ClusterState.builder(clusterState)\n            .routingTable(routingTableBuilder.build())\n            .metaData(metaData).build();\n        Index idx = clusterState.metaData().index(\"target\").getIndex();\n\n        ResizeAllocationDecider resizeAllocationDecider = new ResizeAllocationDecider(Settings.EMPTY);\n        RoutingAllocation routingAllocation = new RoutingAllocation(null, null, clusterState, null, 0);\n        ShardRouting shardRouting = TestShardRouting.newShardRouting(new ShardId(idx, 0), null, true, RecoverySource\n            .LocalShardsRecoverySource.INSTANCE, ShardRoutingState.UNASSIGNED);\n        assertEquals(Decision.ALWAYS, resizeAllocationDecider.canAllocate(shardRouting, routingAllocation));\n        assertEquals(Decision.ALWAYS, resizeAllocationDecider.canAllocate(shardRouting, clusterState.getRoutingNodes().node(\"node1\"),\n            routingAllocation));\n        assertEquals(Decision.ALWAYS, resizeAllocationDecider.canAllocate(shardRouting, clusterState.getRoutingNodes().node(\"node2\"),\n            routingAllocation));\n    }\n","date":"2018-04-26 03:22:53","endLine":146,"groupId":"44754","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testShrink","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/20/22ecb945ba0dcb756d8a3796c8df6251f2bbe0.src","preCode":"    public void testShrink() { \r\n        ClusterState clusterState = createInitialClusterState(true);\n        MetaData.Builder metaBuilder = MetaData.builder(clusterState.metaData());\n        metaBuilder.put(IndexMetaData.builder(\"target\").settings(settings(Version.CURRENT)\n            .put(IndexMetaData.INDEX_RESIZE_SOURCE_NAME.getKey(), \"source\")\n            .put(IndexMetaData.INDEX_RESIZE_SOURCE_UUID_KEY, IndexMetaData.INDEX_UUID_NA_VALUE))\n            .numberOfShards(1).numberOfReplicas(0));\n        MetaData metaData = metaBuilder.build();\n        RoutingTable.Builder routingTableBuilder = RoutingTable.builder(clusterState.routingTable());\n        routingTableBuilder.addAsNew(metaData.index(\"target\"));\n\n        clusterState = ClusterState.builder(clusterState)\n            .routingTable(routingTableBuilder.build())\n            .metaData(metaData).build();\n        Index idx = clusterState.metaData().index(\"target\").getIndex();\n\n        ResizeAllocationDecider resizeAllocationDecider = new ResizeAllocationDecider(Settings.EMPTY);\n        RoutingAllocation routingAllocation = new RoutingAllocation(null, null, clusterState, null, 0);\n        ShardRouting shardRouting = TestShardRouting.newShardRouting(new ShardId(idx, 0), null, true, RecoverySource\n            .LocalShardsRecoverySource.INSTANCE, ShardRoutingState.UNASSIGNED);\n        assertEquals(Decision.ALWAYS, resizeAllocationDecider.canAllocate(shardRouting, routingAllocation));\n        assertEquals(Decision.ALWAYS, resizeAllocationDecider.canAllocate(shardRouting, clusterState.getRoutingNodes().node(\"node1\"),\n            routingAllocation));\n        assertEquals(Decision.ALWAYS, resizeAllocationDecider.canAllocate(shardRouting, clusterState.getRoutingNodes().node(\"node2\"),\n            routingAllocation));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/cluster/routing/allocation/ResizeAllocationDeciderTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":121,"status":"B"}],"commitId":"d74fb9eb4559077e2d20b19a9ed62d9ff825027a","commitMessage":"@@@Opened x-pack ILM code\n","date":"2018-04-26 03:22:53","modifiedFileCount":"0","status":"B","submitter":"Tal Levy"},{"authorTime":"2018-09-11 04:30:44","codes":[{"authorDate":"2018-04-26 03:22:53","commitOrder":2,"curCode":"    public void testNonResizeRouting() {\n        ClusterState clusterState = createInitialClusterState(true);\n        ResizeAllocationDecider resizeAllocationDecider = new ResizeAllocationDecider(Settings.EMPTY);\n        RoutingAllocation routingAllocation = new RoutingAllocation(null, null, clusterState, null, 0);\n        ShardRouting shardRouting = TestShardRouting.newShardRouting(\"non-resize\", 0, null, true, ShardRoutingState.UNASSIGNED);\n        assertEquals(Decision.ALWAYS, resizeAllocationDecider.canAllocate(shardRouting, routingAllocation));\n        assertEquals(Decision.ALWAYS, resizeAllocationDecider.canAllocate(shardRouting, clusterState.getRoutingNodes().node(\"node1\"),\n            routingAllocation));\n    }\n","date":"2018-04-26 03:22:53","endLine":119,"groupId":"31075","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testNonResizeRouting","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/20/22ecb945ba0dcb756d8a3796c8df6251f2bbe0.src","preCode":"    public void testNonResizeRouting() {\n        ClusterState clusterState = createInitialClusterState(true);\n        ResizeAllocationDecider resizeAllocationDecider = new ResizeAllocationDecider(Settings.EMPTY);\n        RoutingAllocation routingAllocation = new RoutingAllocation(null, null, clusterState, null, 0);\n        ShardRouting shardRouting = TestShardRouting.newShardRouting(\"non-resize\", 0, null, true, ShardRoutingState.UNASSIGNED);\n        assertEquals(Decision.ALWAYS, resizeAllocationDecider.canAllocate(shardRouting, routingAllocation));\n        assertEquals(Decision.ALWAYS, resizeAllocationDecider.canAllocate(shardRouting, clusterState.getRoutingNodes().node(\"node1\"),\n            routingAllocation));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/cluster/routing/allocation/ResizeAllocationDeciderTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":111,"status":"N"},{"authorDate":"2018-09-11 04:30:44","commitOrder":2,"curCode":"    public void testShrink() { \r\n        ClusterState clusterState = createInitialClusterState(true);\n        MetaData.Builder metaBuilder = MetaData.builder(clusterState.metaData());\n        metaBuilder.put(IndexMetaData.builder(\"target\").settings(settings(Version.CURRENT)\n            .put(IndexMetaData.INDEX_RESIZE_SOURCE_NAME.getKey(), \"source\")\n            .put(IndexMetaData.INDEX_RESIZE_SOURCE_UUID_KEY, IndexMetaData.INDEX_UUID_NA_VALUE))\n            .numberOfShards(1).numberOfReplicas(0));\n        MetaData metaData = metaBuilder.build();\n        RoutingTable.Builder routingTableBuilder = RoutingTable.builder(clusterState.routingTable());\n        routingTableBuilder.addAsNew(metaData.index(\"target\"));\n\n        clusterState = ClusterState.builder(clusterState)\n            .routingTable(routingTableBuilder.build())\n            .metaData(metaData).build();\n        Index idx = clusterState.metaData().index(\"target\").getIndex();\n\n        ResizeAllocationDecider resizeAllocationDecider = new ResizeAllocationDecider(Settings.EMPTY);\n        RoutingAllocation routingAllocation = new RoutingAllocation(null, null, clusterState, null, 0);\n        ShardRouting shardRouting = TestShardRouting.newShardRouting(new ShardId(idx, 0), null, true, ShardRoutingState.UNASSIGNED,\n            RecoverySource.LocalShardsRecoverySource.INSTANCE);\n        assertEquals(Decision.ALWAYS, resizeAllocationDecider.canAllocate(shardRouting, routingAllocation));\n        assertEquals(Decision.ALWAYS, resizeAllocationDecider.canAllocate(shardRouting, clusterState.getRoutingNodes().node(\"node1\"),\n            routingAllocation));\n        assertEquals(Decision.ALWAYS, resizeAllocationDecider.canAllocate(shardRouting, clusterState.getRoutingNodes().node(\"node2\"),\n            routingAllocation));\n    }\n","date":"2018-09-11 04:30:44","endLine":144,"groupId":"44754","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testShrink","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/ee/ec65f0e2e297cff04a8d80c46d38bb4b26633e.src","preCode":"    public void testShrink() { \r\n        ClusterState clusterState = createInitialClusterState(true);\n        MetaData.Builder metaBuilder = MetaData.builder(clusterState.metaData());\n        metaBuilder.put(IndexMetaData.builder(\"target\").settings(settings(Version.CURRENT)\n            .put(IndexMetaData.INDEX_RESIZE_SOURCE_NAME.getKey(), \"source\")\n            .put(IndexMetaData.INDEX_RESIZE_SOURCE_UUID_KEY, IndexMetaData.INDEX_UUID_NA_VALUE))\n            .numberOfShards(1).numberOfReplicas(0));\n        MetaData metaData = metaBuilder.build();\n        RoutingTable.Builder routingTableBuilder = RoutingTable.builder(clusterState.routingTable());\n        routingTableBuilder.addAsNew(metaData.index(\"target\"));\n\n        clusterState = ClusterState.builder(clusterState)\n            .routingTable(routingTableBuilder.build())\n            .metaData(metaData).build();\n        Index idx = clusterState.metaData().index(\"target\").getIndex();\n\n        ResizeAllocationDecider resizeAllocationDecider = new ResizeAllocationDecider(Settings.EMPTY);\n        RoutingAllocation routingAllocation = new RoutingAllocation(null, null, clusterState, null, 0);\n        ShardRouting shardRouting = TestShardRouting.newShardRouting(new ShardId(idx, 0), null, true, RecoverySource\n            .LocalShardsRecoverySource.INSTANCE, ShardRoutingState.UNASSIGNED);\n        assertEquals(Decision.ALWAYS, resizeAllocationDecider.canAllocate(shardRouting, routingAllocation));\n        assertEquals(Decision.ALWAYS, resizeAllocationDecider.canAllocate(shardRouting, clusterState.getRoutingNodes().node(\"node1\"),\n            routingAllocation));\n        assertEquals(Decision.ALWAYS, resizeAllocationDecider.canAllocate(shardRouting, clusterState.getRoutingNodes().node(\"node2\"),\n            routingAllocation));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/cluster/routing/allocation/ResizeAllocationDeciderTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":119,"status":"M"}],"commitId":"cdc4f57a773b588fe872f247ee62c3d5539e2faa","commitMessage":"@@@Merge branch 'master' into index-lifecycle\n","date":"2018-09-11 04:30:44","modifiedFileCount":"186","status":"M","submitter":"Colin Goodheart-Smithe"},{"authorTime":"2018-11-02 00:05:41","codes":[{"authorDate":"2018-11-02 00:05:41","commitOrder":3,"curCode":"    public void testNonResizeRouting() {\n        ClusterState clusterState = createInitialClusterState(true);\n        ResizeAllocationDecider resizeAllocationDecider = new ResizeAllocationDecider();\n        RoutingAllocation routingAllocation = new RoutingAllocation(null, null, clusterState, null, 0);\n        ShardRouting shardRouting = TestShardRouting.newShardRouting(\"non-resize\", 0, null, true, ShardRoutingState.UNASSIGNED);\n        assertEquals(Decision.ALWAYS, resizeAllocationDecider.canAllocate(shardRouting, routingAllocation));\n        assertEquals(Decision.ALWAYS, resizeAllocationDecider.canAllocate(shardRouting, clusterState.getRoutingNodes().node(\"node1\"),\n            routingAllocation));\n    }\n","date":"2018-11-02 01:13:02","endLine":117,"groupId":"31075","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testNonResizeRouting","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/c6/4bc51bd5b7cbfa96e80049aeed3d809fe1183c.src","preCode":"    public void testNonResizeRouting() {\n        ClusterState clusterState = createInitialClusterState(true);\n        ResizeAllocationDecider resizeAllocationDecider = new ResizeAllocationDecider(Settings.EMPTY);\n        RoutingAllocation routingAllocation = new RoutingAllocation(null, null, clusterState, null, 0);\n        ShardRouting shardRouting = TestShardRouting.newShardRouting(\"non-resize\", 0, null, true, ShardRoutingState.UNASSIGNED);\n        assertEquals(Decision.ALWAYS, resizeAllocationDecider.canAllocate(shardRouting, routingAllocation));\n        assertEquals(Decision.ALWAYS, resizeAllocationDecider.canAllocate(shardRouting, clusterState.getRoutingNodes().node(\"node1\"),\n            routingAllocation));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/cluster/routing/allocation/ResizeAllocationDeciderTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":109,"status":"M"},{"authorDate":"2018-11-02 00:05:41","commitOrder":3,"curCode":"    public void testShrink() { \r\n        ClusterState clusterState = createInitialClusterState(true);\n        MetaData.Builder metaBuilder = MetaData.builder(clusterState.metaData());\n        metaBuilder.put(IndexMetaData.builder(\"target\").settings(settings(Version.CURRENT)\n            .put(IndexMetaData.INDEX_RESIZE_SOURCE_NAME.getKey(), \"source\")\n            .put(IndexMetaData.INDEX_RESIZE_SOURCE_UUID_KEY, IndexMetaData.INDEX_UUID_NA_VALUE))\n            .numberOfShards(1).numberOfReplicas(0));\n        MetaData metaData = metaBuilder.build();\n        RoutingTable.Builder routingTableBuilder = RoutingTable.builder(clusterState.routingTable());\n        routingTableBuilder.addAsNew(metaData.index(\"target\"));\n\n        clusterState = ClusterState.builder(clusterState)\n            .routingTable(routingTableBuilder.build())\n            .metaData(metaData).build();\n        Index idx = clusterState.metaData().index(\"target\").getIndex();\n\n        ResizeAllocationDecider resizeAllocationDecider = new ResizeAllocationDecider();\n        RoutingAllocation routingAllocation = new RoutingAllocation(null, null, clusterState, null, 0);\n        ShardRouting shardRouting = TestShardRouting.newShardRouting(new ShardId(idx, 0), null, true, ShardRoutingState.UNASSIGNED,\n            RecoverySource.LocalShardsRecoverySource.INSTANCE);\n        assertEquals(Decision.ALWAYS, resizeAllocationDecider.canAllocate(shardRouting, routingAllocation));\n        assertEquals(Decision.ALWAYS, resizeAllocationDecider.canAllocate(shardRouting, clusterState.getRoutingNodes().node(\"node1\"),\n            routingAllocation));\n        assertEquals(Decision.ALWAYS, resizeAllocationDecider.canAllocate(shardRouting, clusterState.getRoutingNodes().node(\"node2\"),\n            routingAllocation));\n    }\n","date":"2018-11-02 01:13:02","endLine":144,"groupId":"31076","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testShrink","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/c6/4bc51bd5b7cbfa96e80049aeed3d809fe1183c.src","preCode":"    public void testShrink() { \r\n        ClusterState clusterState = createInitialClusterState(true);\n        MetaData.Builder metaBuilder = MetaData.builder(clusterState.metaData());\n        metaBuilder.put(IndexMetaData.builder(\"target\").settings(settings(Version.CURRENT)\n            .put(IndexMetaData.INDEX_RESIZE_SOURCE_NAME.getKey(), \"source\")\n            .put(IndexMetaData.INDEX_RESIZE_SOURCE_UUID_KEY, IndexMetaData.INDEX_UUID_NA_VALUE))\n            .numberOfShards(1).numberOfReplicas(0));\n        MetaData metaData = metaBuilder.build();\n        RoutingTable.Builder routingTableBuilder = RoutingTable.builder(clusterState.routingTable());\n        routingTableBuilder.addAsNew(metaData.index(\"target\"));\n\n        clusterState = ClusterState.builder(clusterState)\n            .routingTable(routingTableBuilder.build())\n            .metaData(metaData).build();\n        Index idx = clusterState.metaData().index(\"target\").getIndex();\n\n        ResizeAllocationDecider resizeAllocationDecider = new ResizeAllocationDecider(Settings.EMPTY);\n        RoutingAllocation routingAllocation = new RoutingAllocation(null, null, clusterState, null, 0);\n        ShardRouting shardRouting = TestShardRouting.newShardRouting(new ShardId(idx, 0), null, true, ShardRoutingState.UNASSIGNED,\n            RecoverySource.LocalShardsRecoverySource.INSTANCE);\n        assertEquals(Decision.ALWAYS, resizeAllocationDecider.canAllocate(shardRouting, routingAllocation));\n        assertEquals(Decision.ALWAYS, resizeAllocationDecider.canAllocate(shardRouting, clusterState.getRoutingNodes().node(\"node1\"),\n            routingAllocation));\n        assertEquals(Decision.ALWAYS, resizeAllocationDecider.canAllocate(shardRouting, clusterState.getRoutingNodes().node(\"node2\"),\n            routingAllocation));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/cluster/routing/allocation/ResizeAllocationDeciderTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":119,"status":"M"}],"commitId":"c3cf7dd305b3d4636405c292659dbff05307f146","commitMessage":"@@@Merge remote-tracking branch 'upstream/master' into index-lifecycle\n","date":"2018-11-02 01:13:02","modifiedFileCount":"456","status":"M","submitter":"Tal Levy"},{"authorTime":"2020-04-01 03:52:01","codes":[{"authorDate":"2018-11-02 00:05:41","commitOrder":4,"curCode":"    public void testNonResizeRouting() {\n        ClusterState clusterState = createInitialClusterState(true);\n        ResizeAllocationDecider resizeAllocationDecider = new ResizeAllocationDecider();\n        RoutingAllocation routingAllocation = new RoutingAllocation(null, null, clusterState, null, 0);\n        ShardRouting shardRouting = TestShardRouting.newShardRouting(\"non-resize\", 0, null, true, ShardRoutingState.UNASSIGNED);\n        assertEquals(Decision.ALWAYS, resizeAllocationDecider.canAllocate(shardRouting, routingAllocation));\n        assertEquals(Decision.ALWAYS, resizeAllocationDecider.canAllocate(shardRouting, clusterState.getRoutingNodes().node(\"node1\"),\n            routingAllocation));\n    }\n","date":"2018-11-02 01:13:02","endLine":117,"groupId":"31075","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"testNonResizeRouting","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/c6/4bc51bd5b7cbfa96e80049aeed3d809fe1183c.src","preCode":"    public void testNonResizeRouting() {\n        ClusterState clusterState = createInitialClusterState(true);\n        ResizeAllocationDecider resizeAllocationDecider = new ResizeAllocationDecider();\n        RoutingAllocation routingAllocation = new RoutingAllocation(null, null, clusterState, null, 0);\n        ShardRouting shardRouting = TestShardRouting.newShardRouting(\"non-resize\", 0, null, true, ShardRoutingState.UNASSIGNED);\n        assertEquals(Decision.ALWAYS, resizeAllocationDecider.canAllocate(shardRouting, routingAllocation));\n        assertEquals(Decision.ALWAYS, resizeAllocationDecider.canAllocate(shardRouting, clusterState.getRoutingNodes().node(\"node1\"),\n            routingAllocation));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/cluster/routing/allocation/ResizeAllocationDeciderTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":109,"status":"N"},{"authorDate":"2020-04-01 03:52:01","commitOrder":4,"curCode":"    public void testShrink() { \r\n        ClusterState clusterState = createInitialClusterState(true);\n        Metadata.Builder metaBuilder = Metadata.builder(clusterState.metadata());\n        metaBuilder.put(IndexMetadata.builder(\"target\").settings(settings(Version.CURRENT)\n            .put(IndexMetadata.INDEX_RESIZE_SOURCE_NAME.getKey(), \"source\")\n            .put(IndexMetadata.INDEX_RESIZE_SOURCE_UUID_KEY, IndexMetadata.INDEX_UUID_NA_VALUE))\n            .numberOfShards(1).numberOfReplicas(0));\n        Metadata metadata = metaBuilder.build();\n        RoutingTable.Builder routingTableBuilder = RoutingTable.builder(clusterState.routingTable());\n        routingTableBuilder.addAsNew(metadata.index(\"target\"));\n\n        clusterState = ClusterState.builder(clusterState)\n            .routingTable(routingTableBuilder.build())\n            .metadata(metadata).build();\n        Index idx = clusterState.metadata().index(\"target\").getIndex();\n\n        ResizeAllocationDecider resizeAllocationDecider = new ResizeAllocationDecider();\n        RoutingAllocation routingAllocation = new RoutingAllocation(null, null, clusterState, null, 0);\n        ShardRouting shardRouting = TestShardRouting.newShardRouting(new ShardId(idx, 0), null, true, ShardRoutingState.UNASSIGNED,\n            RecoverySource.LocalShardsRecoverySource.INSTANCE);\n        assertEquals(Decision.ALWAYS, resizeAllocationDecider.canAllocate(shardRouting, routingAllocation));\n        assertEquals(Decision.ALWAYS, resizeAllocationDecider.canAllocate(shardRouting, clusterState.getRoutingNodes().node(\"node1\"),\n            routingAllocation));\n        assertEquals(Decision.ALWAYS, resizeAllocationDecider.canAllocate(shardRouting, clusterState.getRoutingNodes().node(\"node2\"),\n            routingAllocation));\n    }\n","date":"2020-04-01 03:52:01","endLine":139,"groupId":"31076","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"testShrink","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/4a/f5d00422b45e3f0d3d41c6a6aa8dd34b44a4cd.src","preCode":"    public void testShrink() { \r\n        ClusterState clusterState = createInitialClusterState(true);\n        MetaData.Builder metaBuilder = MetaData.builder(clusterState.metaData());\n        metaBuilder.put(IndexMetaData.builder(\"target\").settings(settings(Version.CURRENT)\n            .put(IndexMetaData.INDEX_RESIZE_SOURCE_NAME.getKey(), \"source\")\n            .put(IndexMetaData.INDEX_RESIZE_SOURCE_UUID_KEY, IndexMetaData.INDEX_UUID_NA_VALUE))\n            .numberOfShards(1).numberOfReplicas(0));\n        MetaData metaData = metaBuilder.build();\n        RoutingTable.Builder routingTableBuilder = RoutingTable.builder(clusterState.routingTable());\n        routingTableBuilder.addAsNew(metaData.index(\"target\"));\n\n        clusterState = ClusterState.builder(clusterState)\n            .routingTable(routingTableBuilder.build())\n            .metaData(metaData).build();\n        Index idx = clusterState.metaData().index(\"target\").getIndex();\n\n        ResizeAllocationDecider resizeAllocationDecider = new ResizeAllocationDecider();\n        RoutingAllocation routingAllocation = new RoutingAllocation(null, null, clusterState, null, 0);\n        ShardRouting shardRouting = TestShardRouting.newShardRouting(new ShardId(idx, 0), null, true, ShardRoutingState.UNASSIGNED,\n            RecoverySource.LocalShardsRecoverySource.INSTANCE);\n        assertEquals(Decision.ALWAYS, resizeAllocationDecider.canAllocate(shardRouting, routingAllocation));\n        assertEquals(Decision.ALWAYS, resizeAllocationDecider.canAllocate(shardRouting, clusterState.getRoutingNodes().node(\"node1\"),\n            routingAllocation));\n        assertEquals(Decision.ALWAYS, resizeAllocationDecider.canAllocate(shardRouting, clusterState.getRoutingNodes().node(\"node2\"),\n            routingAllocation));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/cluster/routing/allocation/ResizeAllocationDeciderTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":114,"status":"M"}],"commitId":"95a7eed9aa35f47b228e402508709b5bd6703cf4","commitMessage":"@@@Rename MetaData to Metadata in all of the places (#54519)\n\nThis is a simple naming change PR.  to fix the fact that \"metadata\" is a\nsingle English word.  and for too long we have not followed general\nnaming conventions for it. We are also not consistent about it.  for\nexample.  METADATA instead of META_DATA if we were trying to be\nconsistent with MetaData (although METADATA is correct when considered\nin the context of \"metadata\"). This was a simple find and replace across\nthe code base.  only taking a few minutes to fix this naming issue\nforever.","date":"2020-04-01 03:52:01","modifiedFileCount":"1712","status":"M","submitter":"Jason Tedor"},{"authorTime":"2020-10-06 23:29:42","codes":[{"authorDate":"2020-10-06 23:29:42","commitOrder":5,"curCode":"    public void testNonResizeRouting() {\n        ClusterState clusterState = createInitialClusterState(true);\n        ResizeAllocationDecider resizeAllocationDecider = new ResizeAllocationDecider();\n        RoutingAllocation routingAllocation = new RoutingAllocation(null, null, clusterState, null, null, 0);\n        ShardRouting shardRouting = TestShardRouting.newShardRouting(\"non-resize\", 0, null, true, ShardRoutingState.UNASSIGNED);\n        assertEquals(Decision.ALWAYS, resizeAllocationDecider.canAllocate(shardRouting, routingAllocation));\n        assertEquals(Decision.ALWAYS, resizeAllocationDecider.canAllocate(shardRouting, clusterState.getRoutingNodes().node(\"node1\"),\n            routingAllocation));\n    }\n","date":"2020-10-06 23:29:42","endLine":114,"groupId":"102206","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"testNonResizeRouting","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/92/776fd53afd8d3fa569e9c06a711f633b6d6b28.src","preCode":"    public void testNonResizeRouting() {\n        ClusterState clusterState = createInitialClusterState(true);\n        ResizeAllocationDecider resizeAllocationDecider = new ResizeAllocationDecider();\n        RoutingAllocation routingAllocation = new RoutingAllocation(null, null, clusterState, null, 0);\n        ShardRouting shardRouting = TestShardRouting.newShardRouting(\"non-resize\", 0, null, true, ShardRoutingState.UNASSIGNED);\n        assertEquals(Decision.ALWAYS, resizeAllocationDecider.canAllocate(shardRouting, routingAllocation));\n        assertEquals(Decision.ALWAYS, resizeAllocationDecider.canAllocate(shardRouting, clusterState.getRoutingNodes().node(\"node1\"),\n            routingAllocation));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/cluster/routing/allocation/ResizeAllocationDeciderTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":106,"status":"M"},{"authorDate":"2020-10-06 23:29:42","commitOrder":5,"curCode":"    public void testShrink() { \r\n        ClusterState clusterState = createInitialClusterState(true);\n        Metadata.Builder metaBuilder = Metadata.builder(clusterState.metadata());\n        metaBuilder.put(IndexMetadata.builder(\"target\").settings(settings(Version.CURRENT)\n            .put(IndexMetadata.INDEX_RESIZE_SOURCE_NAME.getKey(), \"source\")\n            .put(IndexMetadata.INDEX_RESIZE_SOURCE_UUID_KEY, IndexMetadata.INDEX_UUID_NA_VALUE))\n            .numberOfShards(1).numberOfReplicas(0));\n        Metadata metadata = metaBuilder.build();\n        RoutingTable.Builder routingTableBuilder = RoutingTable.builder(clusterState.routingTable());\n        routingTableBuilder.addAsNew(metadata.index(\"target\"));\n\n        clusterState = ClusterState.builder(clusterState)\n            .routingTable(routingTableBuilder.build())\n            .metadata(metadata).build();\n        Index idx = clusterState.metadata().index(\"target\").getIndex();\n\n        ResizeAllocationDecider resizeAllocationDecider = new ResizeAllocationDecider();\n        RoutingAllocation routingAllocation = new RoutingAllocation(null, null, clusterState, null, null, 0);\n        ShardRouting shardRouting = TestShardRouting.newShardRouting(new ShardId(idx, 0), null, true, ShardRoutingState.UNASSIGNED,\n            RecoverySource.LocalShardsRecoverySource.INSTANCE);\n        assertEquals(Decision.ALWAYS, resizeAllocationDecider.canAllocate(shardRouting, routingAllocation));\n        assertEquals(Decision.ALWAYS, resizeAllocationDecider.canAllocate(shardRouting, clusterState.getRoutingNodes().node(\"node1\"),\n            routingAllocation));\n        assertEquals(Decision.ALWAYS, resizeAllocationDecider.canAllocate(shardRouting, clusterState.getRoutingNodes().node(\"node2\"),\n            routingAllocation));\n    }\n","date":"2020-10-06 23:29:42","endLine":141,"groupId":"102206","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"testShrink","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/92/776fd53afd8d3fa569e9c06a711f633b6d6b28.src","preCode":"    public void testShrink() { \r\n        ClusterState clusterState = createInitialClusterState(true);\n        Metadata.Builder metaBuilder = Metadata.builder(clusterState.metadata());\n        metaBuilder.put(IndexMetadata.builder(\"target\").settings(settings(Version.CURRENT)\n            .put(IndexMetadata.INDEX_RESIZE_SOURCE_NAME.getKey(), \"source\")\n            .put(IndexMetadata.INDEX_RESIZE_SOURCE_UUID_KEY, IndexMetadata.INDEX_UUID_NA_VALUE))\n            .numberOfShards(1).numberOfReplicas(0));\n        Metadata metadata = metaBuilder.build();\n        RoutingTable.Builder routingTableBuilder = RoutingTable.builder(clusterState.routingTable());\n        routingTableBuilder.addAsNew(metadata.index(\"target\"));\n\n        clusterState = ClusterState.builder(clusterState)\n            .routingTable(routingTableBuilder.build())\n            .metadata(metadata).build();\n        Index idx = clusterState.metadata().index(\"target\").getIndex();\n\n        ResizeAllocationDecider resizeAllocationDecider = new ResizeAllocationDecider();\n        RoutingAllocation routingAllocation = new RoutingAllocation(null, null, clusterState, null, 0);\n        ShardRouting shardRouting = TestShardRouting.newShardRouting(new ShardId(idx, 0), null, true, ShardRoutingState.UNASSIGNED,\n            RecoverySource.LocalShardsRecoverySource.INSTANCE);\n        assertEquals(Decision.ALWAYS, resizeAllocationDecider.canAllocate(shardRouting, routingAllocation));\n        assertEquals(Decision.ALWAYS, resizeAllocationDecider.canAllocate(shardRouting, clusterState.getRoutingNodes().node(\"node1\"),\n            routingAllocation));\n        assertEquals(Decision.ALWAYS, resizeAllocationDecider.canAllocate(shardRouting, clusterState.getRoutingNodes().node(\"node2\"),\n            routingAllocation));\n    }\n","realPath":"server/src/test/java/org/elasticsearch/cluster/routing/allocation/ResizeAllocationDeciderTests.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":116,"status":"M"}],"commitId":"2afec0d916c7de33c9a6c3cbe30a8a2ee61be765","commitMessage":"@@@Determine shard size before allocating shards recovering from snapshots (#61906)\n\nDetermines the shard size of shards before allocating shards that are \nrecovering from snapshots. It ensures during shard allocation that the \ntarget node that is selected as recovery target will have enough free \ndisk space for the recovery event. This applies to regular restores.  \nCCR bootstrap from remote.  as well as mounting searchable snapshots.\n\nThe InternalSnapshotInfoService is responsible for fetching snapshot \nshard sizes from repositories. It provides a getShardSize() method \nto other components of the system that can be used to retrieve the \nlatest known shard size. If the latest snapshot shard size retrieval \nfailed.  the getShardSize() returns \nShardRouting.UNAVAILABLE_EXPECTED_SHARD_SIZE. While \nwe'd like a better way to handle such failures.  returning this value \nallows to keep the existing behavior for now.\n\nNote that this PR does not address an issues (we already have today) \nwhere a replica is being allocated without knowing how much disk \nspace is being used by the primary. ","date":"2020-10-06 23:29:42","modifiedFileCount":"49","status":"M","submitter":"Yannick Welsch"}]
