[{"authorTime":"2018-04-26 03:22:53","codes":[{"authorDate":"2018-04-26 03:22:53","commitOrder":1,"curCode":"    public void onQueryPhase(SearchContext context, long tookInNanos) {\n        if (queryWarnThreshold >= 0 && tookInNanos > queryWarnThreshold) {\n            queryLogger.warn(\"{}\", new SlowLogSearchContextPrinter(context, tookInNanos));\n        } else if (queryInfoThreshold >= 0 && tookInNanos > queryInfoThreshold) {\n            queryLogger.info(\"{}\", new SlowLogSearchContextPrinter(context, tookInNanos));\n        } else if (queryDebugThreshold >= 0 && tookInNanos > queryDebugThreshold) {\n            queryLogger.debug(\"{}\", new SlowLogSearchContextPrinter(context, tookInNanos));\n        } else if (queryTraceThreshold >= 0 && tookInNanos > queryTraceThreshold) {\n            queryLogger.trace(\"{}\", new SlowLogSearchContextPrinter(context, tookInNanos));\n        }\n    }\n","date":"2018-04-26 03:22:53","endLine":125,"groupId":"10074","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"onQueryPhase","params":"(SearchContextcontext@longtookInNanos)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/f3/c5d07f1f2f485979f263dd8fefa945fa45ae28.src","preCode":"    public void onQueryPhase(SearchContext context, long tookInNanos) {\n        if (queryWarnThreshold >= 0 && tookInNanos > queryWarnThreshold) {\n            queryLogger.warn(\"{}\", new SlowLogSearchContextPrinter(context, tookInNanos));\n        } else if (queryInfoThreshold >= 0 && tookInNanos > queryInfoThreshold) {\n            queryLogger.info(\"{}\", new SlowLogSearchContextPrinter(context, tookInNanos));\n        } else if (queryDebugThreshold >= 0 && tookInNanos > queryDebugThreshold) {\n            queryLogger.debug(\"{}\", new SlowLogSearchContextPrinter(context, tookInNanos));\n        } else if (queryTraceThreshold >= 0 && tookInNanos > queryTraceThreshold) {\n            queryLogger.trace(\"{}\", new SlowLogSearchContextPrinter(context, tookInNanos));\n        }\n    }\n","realPath":"server/src/main/java/org/elasticsearch/index/SearchSlowLog.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":115,"status":"B"},{"authorDate":"2018-04-26 03:22:53","commitOrder":1,"curCode":"    public void postIndex(ShardId shardId, Engine.Index indexOperation, Engine.IndexResult result) {\n        if (result.hasFailure() == false) {\n            final ParsedDocument doc = indexOperation.parsedDoc();\n            final long tookInNanos = result.getTook();\n            if (indexWarnThreshold >= 0 && tookInNanos > indexWarnThreshold) {\n                indexLogger.warn(\"{}\", new SlowLogParsedDocumentPrinter(index, doc, tookInNanos, reformat, maxSourceCharsToLog));\n            } else if (indexInfoThreshold >= 0 && tookInNanos > indexInfoThreshold) {\n                indexLogger.info(\"{}\", new SlowLogParsedDocumentPrinter(index, doc, tookInNanos, reformat, maxSourceCharsToLog));\n            } else if (indexDebugThreshold >= 0 && tookInNanos > indexDebugThreshold) {\n                indexLogger.debug(\"{}\", new SlowLogParsedDocumentPrinter(index, doc, tookInNanos, reformat, maxSourceCharsToLog));\n            } else if (indexTraceThreshold >= 0 && tookInNanos > indexTraceThreshold) {\n                indexLogger.trace(\"{}\", new SlowLogParsedDocumentPrinter(index, doc, tookInNanos, reformat, maxSourceCharsToLog));\n            }\n        }\n    }\n","date":"2018-04-26 03:22:53","endLine":160,"groupId":"10074","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"postIndex","params":"(ShardIdshardId@Engine.IndexindexOperation@Engine.IndexResultresult)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/b7/5cda5b6ca709ac48462e98b43ea5968f946391.src","preCode":"    public void postIndex(ShardId shardId, Engine.Index indexOperation, Engine.IndexResult result) {\n        if (result.hasFailure() == false) {\n            final ParsedDocument doc = indexOperation.parsedDoc();\n            final long tookInNanos = result.getTook();\n            if (indexWarnThreshold >= 0 && tookInNanos > indexWarnThreshold) {\n                indexLogger.warn(\"{}\", new SlowLogParsedDocumentPrinter(index, doc, tookInNanos, reformat, maxSourceCharsToLog));\n            } else if (indexInfoThreshold >= 0 && tookInNanos > indexInfoThreshold) {\n                indexLogger.info(\"{}\", new SlowLogParsedDocumentPrinter(index, doc, tookInNanos, reformat, maxSourceCharsToLog));\n            } else if (indexDebugThreshold >= 0 && tookInNanos > indexDebugThreshold) {\n                indexLogger.debug(\"{}\", new SlowLogParsedDocumentPrinter(index, doc, tookInNanos, reformat, maxSourceCharsToLog));\n            } else if (indexTraceThreshold >= 0 && tookInNanos > indexTraceThreshold) {\n                indexLogger.trace(\"{}\", new SlowLogParsedDocumentPrinter(index, doc, tookInNanos, reformat, maxSourceCharsToLog));\n            }\n        }\n    }\n","realPath":"server/src/main/java/org/elasticsearch/index/IndexingSlowLog.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":146,"status":"B"}],"commitId":"d74fb9eb4559077e2d20b19a9ed62d9ff825027a","commitMessage":"@@@Opened x-pack ILM code\n","date":"2018-04-26 03:22:53","modifiedFileCount":"0","status":"B","submitter":"Tal Levy"},{"authorTime":"2018-05-01 16:21:57","codes":[{"authorDate":"2018-04-26 03:22:53","commitOrder":2,"curCode":"    public void onQueryPhase(SearchContext context, long tookInNanos) {\n        if (queryWarnThreshold >= 0 && tookInNanos > queryWarnThreshold) {\n            queryLogger.warn(\"{}\", new SlowLogSearchContextPrinter(context, tookInNanos));\n        } else if (queryInfoThreshold >= 0 && tookInNanos > queryInfoThreshold) {\n            queryLogger.info(\"{}\", new SlowLogSearchContextPrinter(context, tookInNanos));\n        } else if (queryDebugThreshold >= 0 && tookInNanos > queryDebugThreshold) {\n            queryLogger.debug(\"{}\", new SlowLogSearchContextPrinter(context, tookInNanos));\n        } else if (queryTraceThreshold >= 0 && tookInNanos > queryTraceThreshold) {\n            queryLogger.trace(\"{}\", new SlowLogSearchContextPrinter(context, tookInNanos));\n        }\n    }\n","date":"2018-04-26 03:22:53","endLine":125,"groupId":"10074","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"onQueryPhase","params":"(SearchContextcontext@longtookInNanos)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/f3/c5d07f1f2f485979f263dd8fefa945fa45ae28.src","preCode":"    public void onQueryPhase(SearchContext context, long tookInNanos) {\n        if (queryWarnThreshold >= 0 && tookInNanos > queryWarnThreshold) {\n            queryLogger.warn(\"{}\", new SlowLogSearchContextPrinter(context, tookInNanos));\n        } else if (queryInfoThreshold >= 0 && tookInNanos > queryInfoThreshold) {\n            queryLogger.info(\"{}\", new SlowLogSearchContextPrinter(context, tookInNanos));\n        } else if (queryDebugThreshold >= 0 && tookInNanos > queryDebugThreshold) {\n            queryLogger.debug(\"{}\", new SlowLogSearchContextPrinter(context, tookInNanos));\n        } else if (queryTraceThreshold >= 0 && tookInNanos > queryTraceThreshold) {\n            queryLogger.trace(\"{}\", new SlowLogSearchContextPrinter(context, tookInNanos));\n        }\n    }\n","realPath":"server/src/main/java/org/elasticsearch/index/SearchSlowLog.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":115,"status":"N"},{"authorDate":"2018-05-01 16:21:57","commitOrder":2,"curCode":"    public void postIndex(ShardId shardId, Engine.Index indexOperation, Engine.IndexResult result) {\n        if (result.getResultType() == Engine.Result.Type.SUCCESS) {\n            final ParsedDocument doc = indexOperation.parsedDoc();\n            final long tookInNanos = result.getTook();\n            if (indexWarnThreshold >= 0 && tookInNanos > indexWarnThreshold) {\n                indexLogger.warn(\"{}\", new SlowLogParsedDocumentPrinter(index, doc, tookInNanos, reformat, maxSourceCharsToLog));\n            } else if (indexInfoThreshold >= 0 && tookInNanos > indexInfoThreshold) {\n                indexLogger.info(\"{}\", new SlowLogParsedDocumentPrinter(index, doc, tookInNanos, reformat, maxSourceCharsToLog));\n            } else if (indexDebugThreshold >= 0 && tookInNanos > indexDebugThreshold) {\n                indexLogger.debug(\"{}\", new SlowLogParsedDocumentPrinter(index, doc, tookInNanos, reformat, maxSourceCharsToLog));\n            } else if (indexTraceThreshold >= 0 && tookInNanos > indexTraceThreshold) {\n                indexLogger.trace(\"{}\", new SlowLogParsedDocumentPrinter(index, doc, tookInNanos, reformat, maxSourceCharsToLog));\n            }\n        }\n    }\n","date":"2018-05-01 16:21:57","endLine":160,"groupId":"10074","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"postIndex","params":"(ShardIdshardId@Engine.IndexindexOperation@Engine.IndexResultresult)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/82/93f873c65eb2af801812e79cc4f6babed9a4e2.src","preCode":"    public void postIndex(ShardId shardId, Engine.Index indexOperation, Engine.IndexResult result) {\n        if (result.hasFailure() == false) {\n            final ParsedDocument doc = indexOperation.parsedDoc();\n            final long tookInNanos = result.getTook();\n            if (indexWarnThreshold >= 0 && tookInNanos > indexWarnThreshold) {\n                indexLogger.warn(\"{}\", new SlowLogParsedDocumentPrinter(index, doc, tookInNanos, reformat, maxSourceCharsToLog));\n            } else if (indexInfoThreshold >= 0 && tookInNanos > indexInfoThreshold) {\n                indexLogger.info(\"{}\", new SlowLogParsedDocumentPrinter(index, doc, tookInNanos, reformat, maxSourceCharsToLog));\n            } else if (indexDebugThreshold >= 0 && tookInNanos > indexDebugThreshold) {\n                indexLogger.debug(\"{}\", new SlowLogParsedDocumentPrinter(index, doc, tookInNanos, reformat, maxSourceCharsToLog));\n            } else if (indexTraceThreshold >= 0 && tookInNanos > indexTraceThreshold) {\n                indexLogger.trace(\"{}\", new SlowLogParsedDocumentPrinter(index, doc, tookInNanos, reformat, maxSourceCharsToLog));\n            }\n        }\n    }\n","realPath":"server/src/main/java/org/elasticsearch/index/IndexingSlowLog.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":146,"status":"M"}],"commitId":"a6b0f663af90525dd53e007dcc86cf72e38558b3","commitMessage":"@@@Merge branch 'master' into index-lifecycle\n","date":"2018-05-01 16:21:57","modifiedFileCount":"44","status":"M","submitter":"Colin Goodheart-Smithe"},{"authorTime":"2019-07-11 00:22:50","codes":[{"authorDate":"2019-07-11 00:22:50","commitOrder":3,"curCode":"    public void onQueryPhase(SearchContext context, long tookInNanos) {\n        if (queryWarnThreshold >= 0 && tookInNanos > queryWarnThreshold) {\n            queryLogger.warn(new SearchSlowLogMessage(context, tookInNanos));\n        } else if (queryInfoThreshold >= 0 && tookInNanos > queryInfoThreshold) {\n            queryLogger.info(new SearchSlowLogMessage(context, tookInNanos));\n        } else if (queryDebugThreshold >= 0 && tookInNanos > queryDebugThreshold) {\n            queryLogger.debug(new SearchSlowLogMessage(context, tookInNanos));\n        } else if (queryTraceThreshold >= 0 && tookInNanos > queryTraceThreshold) {\n            queryLogger.trace(new SearchSlowLogMessage(context, tookInNanos));\n        }\n    }\n","date":"2019-07-11 00:22:50","endLine":142,"groupId":"10074","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"onQueryPhase","params":"(SearchContextcontext@longtookInNanos)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/d3/c7638e2a85db14bd2fb31e557b45a19a12135b.src","preCode":"    public void onQueryPhase(SearchContext context, long tookInNanos) {\n        if (queryWarnThreshold >= 0 && tookInNanos > queryWarnThreshold) {\n            queryLogger.warn(\"{}\", new SlowLogSearchContextPrinter(context, tookInNanos));\n        } else if (queryInfoThreshold >= 0 && tookInNanos > queryInfoThreshold) {\n            queryLogger.info(\"{}\", new SlowLogSearchContextPrinter(context, tookInNanos));\n        } else if (queryDebugThreshold >= 0 && tookInNanos > queryDebugThreshold) {\n            queryLogger.debug(\"{}\", new SlowLogSearchContextPrinter(context, tookInNanos));\n        } else if (queryTraceThreshold >= 0 && tookInNanos > queryTraceThreshold) {\n            queryLogger.trace(\"{}\", new SlowLogSearchContextPrinter(context, tookInNanos));\n        }\n    }\n","realPath":"server/src/main/java/org/elasticsearch/index/SearchSlowLog.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":132,"status":"M"},{"authorDate":"2019-07-11 00:22:50","commitOrder":3,"curCode":"    public void postIndex(ShardId shardId, Engine.Index indexOperation, Engine.IndexResult result) {\n        if (result.getResultType() == Engine.Result.Type.SUCCESS) {\n            final ParsedDocument doc = indexOperation.parsedDoc();\n            final long tookInNanos = result.getTook();\n            if (indexWarnThreshold >= 0 && tookInNanos > indexWarnThreshold) {\n                indexLogger.warn( new IndexingSlowLogMessage(index, doc, tookInNanos, reformat, maxSourceCharsToLog));\n            } else if (indexInfoThreshold >= 0 && tookInNanos > indexInfoThreshold) {\n                indexLogger.info(new IndexingSlowLogMessage(index, doc, tookInNanos, reformat, maxSourceCharsToLog));\n            } else if (indexDebugThreshold >= 0 && tookInNanos > indexDebugThreshold) {\n                indexLogger.debug(new IndexingSlowLogMessage(index, doc, tookInNanos, reformat, maxSourceCharsToLog));\n            } else if (indexTraceThreshold >= 0 && tookInNanos > indexTraceThreshold) {\n                indexLogger.trace( new IndexingSlowLogMessage(index, doc, tookInNanos, reformat, maxSourceCharsToLog));\n            }\n        }\n    }\n","date":"2019-07-11 00:22:50","endLine":165,"groupId":"10074","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"postIndex","params":"(ShardIdshardId@Engine.IndexindexOperation@Engine.IndexResultresult)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/fa/eb9d3bc26e80e8b3d2aeb314023943de48ac25.src","preCode":"    public void postIndex(ShardId shardId, Engine.Index indexOperation, Engine.IndexResult result) {\n        if (result.getResultType() == Engine.Result.Type.SUCCESS) {\n            final ParsedDocument doc = indexOperation.parsedDoc();\n            final long tookInNanos = result.getTook();\n            if (indexWarnThreshold >= 0 && tookInNanos > indexWarnThreshold) {\n                indexLogger.warn(\"{}\", new SlowLogParsedDocumentPrinter(index, doc, tookInNanos, reformat, maxSourceCharsToLog));\n            } else if (indexInfoThreshold >= 0 && tookInNanos > indexInfoThreshold) {\n                indexLogger.info(\"{}\", new SlowLogParsedDocumentPrinter(index, doc, tookInNanos, reformat, maxSourceCharsToLog));\n            } else if (indexDebugThreshold >= 0 && tookInNanos > indexDebugThreshold) {\n                indexLogger.debug(\"{}\", new SlowLogParsedDocumentPrinter(index, doc, tookInNanos, reformat, maxSourceCharsToLog));\n            } else if (indexTraceThreshold >= 0 && tookInNanos > indexTraceThreshold) {\n                indexLogger.trace(\"{}\", new SlowLogParsedDocumentPrinter(index, doc, tookInNanos, reformat, maxSourceCharsToLog));\n            }\n        }\n    }\n","realPath":"server/src/main/java/org/elasticsearch/index/IndexingSlowLog.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":151,"status":"M"}],"commitId":"03f4e81fc39b20dd61a9a2f1383519bb331e1e40","commitMessage":"@@@JSON logging refactoring and X-Opaque-ID support (#41354)\n\nThis is a refactor to current JSON logging to make it more open for extensions\nand support for custom ES log messages used inDeprecationLogger IndexingSlowLog .  SearchSLowLog\nWe want to include x-opaque-id in deprecation logs. The easiest way to have this as an additional JSON field instead of part of the message is to create a custom DeprecatedMessage (extends ESLogMEssage)\n\nThese messages are regular log4j messages with a text.  but also carry a map of fields which can then populate the log pattern. The logic for this lives in ESJsonLayout and ESMessageFieldConverter.\n\nSimilar approach can be used to refactor IndexingSlowLog and SearchSlowLog JSON logs to contain fields previously only present as escaped JSON string in a message field.\n\ncloses #41350","date":"2019-07-11 00:22:50","modifiedFileCount":"13","status":"M","submitter":"Przemyslaw Gomulka"},{"authorTime":"2019-10-10 16:56:11","codes":[{"authorDate":"2019-10-10 16:56:11","commitOrder":4,"curCode":"    public void onQueryPhase(SearchContext context, long tookInNanos) {\n        if (queryWarnThreshold >= 0 && tookInNanos > queryWarnThreshold) {\n            queryLogger.warn(SearchSlowLogMessage.of(context, tookInNanos));\n        } else if (queryInfoThreshold >= 0 && tookInNanos > queryInfoThreshold) {\n            queryLogger.info(SearchSlowLogMessage.of(context, tookInNanos));\n        } else if (queryDebugThreshold >= 0 && tookInNanos > queryDebugThreshold) {\n            queryLogger.debug(SearchSlowLogMessage.of(context, tookInNanos));\n        } else if (queryTraceThreshold >= 0 && tookInNanos > queryTraceThreshold) {\n            queryLogger.trace(SearchSlowLogMessage.of(context, tookInNanos));\n        }\n    }\n","date":"2019-10-10 16:56:11","endLine":140,"groupId":"10074","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"onQueryPhase","params":"(SearchContextcontext@longtookInNanos)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/1e/16fb77493068634e9edcd58095b76b1d614087.src","preCode":"    public void onQueryPhase(SearchContext context, long tookInNanos) {\n        if (queryWarnThreshold >= 0 && tookInNanos > queryWarnThreshold) {\n            queryLogger.warn(new SearchSlowLogMessage(context, tookInNanos));\n        } else if (queryInfoThreshold >= 0 && tookInNanos > queryInfoThreshold) {\n            queryLogger.info(new SearchSlowLogMessage(context, tookInNanos));\n        } else if (queryDebugThreshold >= 0 && tookInNanos > queryDebugThreshold) {\n            queryLogger.debug(new SearchSlowLogMessage(context, tookInNanos));\n        } else if (queryTraceThreshold >= 0 && tookInNanos > queryTraceThreshold) {\n            queryLogger.trace(new SearchSlowLogMessage(context, tookInNanos));\n        }\n    }\n","realPath":"server/src/main/java/org/elasticsearch/index/SearchSlowLog.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":130,"status":"M"},{"authorDate":"2019-10-10 16:56:11","commitOrder":4,"curCode":"    public void postIndex(ShardId shardId, Engine.Index indexOperation, Engine.IndexResult result) {\n        if (result.getResultType() == Engine.Result.Type.SUCCESS) {\n            final ParsedDocument doc = indexOperation.parsedDoc();\n            final long tookInNanos = result.getTook();\n            if (indexWarnThreshold >= 0 && tookInNanos > indexWarnThreshold) {\n                indexLogger.warn(IndexingSlowLogMessage.of(index, doc, tookInNanos, reformat, maxSourceCharsToLog));\n            } else if (indexInfoThreshold >= 0 && tookInNanos > indexInfoThreshold) {\n                indexLogger.info(IndexingSlowLogMessage.of(index, doc, tookInNanos, reformat, maxSourceCharsToLog));\n            } else if (indexDebugThreshold >= 0 && tookInNanos > indexDebugThreshold) {\n                indexLogger.debug(IndexingSlowLogMessage.of(index, doc, tookInNanos, reformat, maxSourceCharsToLog));\n            } else if (indexTraceThreshold >= 0 && tookInNanos > indexTraceThreshold) {\n                indexLogger.trace(IndexingSlowLogMessage.of(index, doc, tookInNanos, reformat, maxSourceCharsToLog));\n            }\n        }\n    }\n","date":"2019-10-10 16:56:11","endLine":165,"groupId":"10074","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"postIndex","params":"(ShardIdshardId@Engine.IndexindexOperation@Engine.IndexResultresult)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/dc/69718927bde506c92ea36cd24996bd00740224.src","preCode":"    public void postIndex(ShardId shardId, Engine.Index indexOperation, Engine.IndexResult result) {\n        if (result.getResultType() == Engine.Result.Type.SUCCESS) {\n            final ParsedDocument doc = indexOperation.parsedDoc();\n            final long tookInNanos = result.getTook();\n            if (indexWarnThreshold >= 0 && tookInNanos > indexWarnThreshold) {\n                indexLogger.warn( new IndexingSlowLogMessage(index, doc, tookInNanos, reformat, maxSourceCharsToLog));\n            } else if (indexInfoThreshold >= 0 && tookInNanos > indexInfoThreshold) {\n                indexLogger.info(new IndexingSlowLogMessage(index, doc, tookInNanos, reformat, maxSourceCharsToLog));\n            } else if (indexDebugThreshold >= 0 && tookInNanos > indexDebugThreshold) {\n                indexLogger.debug(new IndexingSlowLogMessage(index, doc, tookInNanos, reformat, maxSourceCharsToLog));\n            } else if (indexTraceThreshold >= 0 && tookInNanos > indexTraceThreshold) {\n                indexLogger.trace( new IndexingSlowLogMessage(index, doc, tookInNanos, reformat, maxSourceCharsToLog));\n            }\n        }\n    }\n","realPath":"server/src/main/java/org/elasticsearch/index/IndexingSlowLog.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":151,"status":"M"}],"commitId":"a4a79670f85d5c135c1ad668c387808fffd733f7","commitMessage":"@@@Refactor ESLogMessage to not define fields upfront (#46702)\n\n* refactor ESLogMessage and overriding fields\n\n* rename esmessagefields to overrideFields\n\n* javadoc\n\n* simplify custom message class creation\n\n* line length\n\n* small cleanup and rename of ESJsonField\n\n* working with builder\n\n* parametrized map - basing on ecs\n\n* builder\n\n* refactoring and cleanup\n\n* cleanup\n\n* logger checker\n","date":"2019-10-10 16:56:11","modifiedFileCount":"14","status":"M","submitter":"Przemyslaw Gomulka"},{"authorTime":"2020-05-28 14:51:27","codes":[{"authorDate":"2020-05-28 14:51:27","commitOrder":5,"curCode":"    public void onQueryPhase(SearchContext context, long tookInNanos) {\n        if (queryWarnThreshold >= 0 && tookInNanos > queryWarnThreshold && level.isLevelEnabledFor(SlowLogLevel.WARN)) {\n            queryLogger.warn(SearchSlowLogMessage.of(context, tookInNanos));\n        } else if (queryInfoThreshold >= 0 && tookInNanos > queryInfoThreshold && level.isLevelEnabledFor(SlowLogLevel.INFO)) {\n            queryLogger.info(SearchSlowLogMessage.of(context, tookInNanos));\n        } else if (queryDebugThreshold >= 0 && tookInNanos > queryDebugThreshold && level.isLevelEnabledFor(SlowLogLevel.DEBUG)) {\n            queryLogger.debug(SearchSlowLogMessage.of(context, tookInNanos));\n        } else if (queryTraceThreshold >= 0 && tookInNanos > queryTraceThreshold && level.isLevelEnabledFor(SlowLogLevel.TRACE)) {\n            queryLogger.trace(SearchSlowLogMessage.of(context, tookInNanos));\n        }\n    }\n","date":"2020-05-28 14:51:27","endLine":141,"groupId":"10074","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"onQueryPhase","params":"(SearchContextcontext@longtookInNanos)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/d5/ac3af4bd43a56129d80aa41af37f896207e40a.src","preCode":"    public void onQueryPhase(SearchContext context, long tookInNanos) {\n        if (queryWarnThreshold >= 0 && tookInNanos > queryWarnThreshold) {\n            queryLogger.warn(SearchSlowLogMessage.of(context, tookInNanos));\n        } else if (queryInfoThreshold >= 0 && tookInNanos > queryInfoThreshold) {\n            queryLogger.info(SearchSlowLogMessage.of(context, tookInNanos));\n        } else if (queryDebugThreshold >= 0 && tookInNanos > queryDebugThreshold) {\n            queryLogger.debug(SearchSlowLogMessage.of(context, tookInNanos));\n        } else if (queryTraceThreshold >= 0 && tookInNanos > queryTraceThreshold) {\n            queryLogger.trace(SearchSlowLogMessage.of(context, tookInNanos));\n        }\n    }\n","realPath":"server/src/main/java/org/elasticsearch/index/SearchSlowLog.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":131,"status":"M"},{"authorDate":"2020-05-28 14:51:27","commitOrder":5,"curCode":"    public void postIndex(ShardId shardId, Engine.Index indexOperation, Engine.IndexResult result) {\n        if (result.getResultType() == Engine.Result.Type.SUCCESS) {\n            final ParsedDocument doc = indexOperation.parsedDoc();\n            final long tookInNanos = result.getTook();\n            \r\n            if (indexWarnThreshold >= 0 && tookInNanos > indexWarnThreshold && level.isLevelEnabledFor(SlowLogLevel.WARN)) {\n                indexLogger.warn(IndexingSlowLogMessage.of(index, doc, tookInNanos, reformat, maxSourceCharsToLog));\n            } else if (indexInfoThreshold >= 0 && tookInNanos > indexInfoThreshold && level.isLevelEnabledFor(SlowLogLevel.INFO)) {\n                indexLogger.info(IndexingSlowLogMessage.of(index, doc, tookInNanos, reformat, maxSourceCharsToLog));\n            } else if (indexDebugThreshold >= 0 && tookInNanos > indexDebugThreshold && level.isLevelEnabledFor(SlowLogLevel.DEBUG)) {\n                indexLogger.debug(IndexingSlowLogMessage.of(index, doc, tookInNanos, reformat, maxSourceCharsToLog));\n            } else if (indexTraceThreshold >= 0 && tookInNanos > indexTraceThreshold && level.isLevelEnabledFor(SlowLogLevel.TRACE)) {\n                indexLogger.trace(IndexingSlowLogMessage.of(index, doc, tookInNanos, reformat, maxSourceCharsToLog));\n            }\n        }\n    }\n","date":"2020-05-28 14:51:27","endLine":165,"groupId":"10074","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"postIndex","params":"(ShardIdshardId@Engine.IndexindexOperation@Engine.IndexResultresult)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/a8/6a94c743544b148d5fb7988618e6ded0ac4a3f.src","preCode":"    public void postIndex(ShardId shardId, Engine.Index indexOperation, Engine.IndexResult result) {\n        if (result.getResultType() == Engine.Result.Type.SUCCESS) {\n            final ParsedDocument doc = indexOperation.parsedDoc();\n            final long tookInNanos = result.getTook();\n            if (indexWarnThreshold >= 0 && tookInNanos > indexWarnThreshold) {\n                indexLogger.warn(IndexingSlowLogMessage.of(index, doc, tookInNanos, reformat, maxSourceCharsToLog));\n            } else if (indexInfoThreshold >= 0 && tookInNanos > indexInfoThreshold) {\n                indexLogger.info(IndexingSlowLogMessage.of(index, doc, tookInNanos, reformat, maxSourceCharsToLog));\n            } else if (indexDebugThreshold >= 0 && tookInNanos > indexDebugThreshold) {\n                indexLogger.debug(IndexingSlowLogMessage.of(index, doc, tookInNanos, reformat, maxSourceCharsToLog));\n            } else if (indexTraceThreshold >= 0 && tookInNanos > indexTraceThreshold) {\n                indexLogger.trace(IndexingSlowLogMessage.of(index, doc, tookInNanos, reformat, maxSourceCharsToLog));\n            }\n        }\n    }\n","realPath":"server/src/main/java/org/elasticsearch/index/IndexingSlowLog.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":150,"status":"M"}],"commitId":"184fd88abbfc5053b1c1353a9bcf1dc8fac6ba0e","commitMessage":"@@@SlowLoggers using single logger (#56708) (#57239)\n\nSlow loggers should use single shared logger as otherwise when index is\ndeleted the log4j logger will remain reachable (log4j is caching) and\nwill create a memory leak.\n\ncloses https://github.com/elastic/elasticsearch/issues/56171","date":"2020-05-28 14:51:27","modifiedFileCount":"6","status":"M","submitter":"Przemyslaw Gomulka"},{"authorTime":"2020-06-04 19:33:28","codes":[{"authorDate":"2020-06-04 19:33:28","commitOrder":6,"curCode":"    public void onQueryPhase(SearchContext context, long tookInNanos) {\n        if (queryWarnThreshold >= 0 && tookInNanos > queryWarnThreshold) {\n            queryLogger.warn(SearchSlowLogMessage.of(context, tookInNanos));\n        } else if (queryInfoThreshold >= 0 && tookInNanos > queryInfoThreshold) {\n            queryLogger.info(SearchSlowLogMessage.of(context, tookInNanos));\n        } else if (queryDebugThreshold >= 0 && tookInNanos > queryDebugThreshold) {\n            queryLogger.debug(SearchSlowLogMessage.of(context, tookInNanos));\n        } else if (queryTraceThreshold >= 0 && tookInNanos > queryTraceThreshold) {\n            queryLogger.trace(SearchSlowLogMessage.of(context, tookInNanos));\n        }\n    }\n","date":"2020-06-04 19:33:28","endLine":131,"groupId":"107701","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"onQueryPhase","params":"(SearchContextcontext@longtookInNanos)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/d3/ba58a7612f6080f3340456c9caaf6f7c90ba2d.src","preCode":"    public void onQueryPhase(SearchContext context, long tookInNanos) {\n        if (queryWarnThreshold >= 0 && tookInNanos > queryWarnThreshold && level.isLevelEnabledFor(SlowLogLevel.WARN)) {\n            queryLogger.warn(SearchSlowLogMessage.of(context, tookInNanos));\n        } else if (queryInfoThreshold >= 0 && tookInNanos > queryInfoThreshold && level.isLevelEnabledFor(SlowLogLevel.INFO)) {\n            queryLogger.info(SearchSlowLogMessage.of(context, tookInNanos));\n        } else if (queryDebugThreshold >= 0 && tookInNanos > queryDebugThreshold && level.isLevelEnabledFor(SlowLogLevel.DEBUG)) {\n            queryLogger.debug(SearchSlowLogMessage.of(context, tookInNanos));\n        } else if (queryTraceThreshold >= 0 && tookInNanos > queryTraceThreshold && level.isLevelEnabledFor(SlowLogLevel.TRACE)) {\n            queryLogger.trace(SearchSlowLogMessage.of(context, tookInNanos));\n        }\n    }\n","realPath":"server/src/main/java/org/elasticsearch/index/SearchSlowLog.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":121,"status":"M"},{"authorDate":"2020-06-04 19:33:28","commitOrder":6,"curCode":"    public void postIndex(ShardId shardId, Engine.Index indexOperation, Engine.IndexResult result) {\n        if (result.getResultType() == Engine.Result.Type.SUCCESS) {\n            final ParsedDocument doc = indexOperation.parsedDoc();\n            final long tookInNanos = result.getTook();\n            if (indexWarnThreshold >= 0 && tookInNanos > indexWarnThreshold) {\n                indexLogger.warn(IndexingSlowLogMessage.of(index, doc, tookInNanos, reformat, maxSourceCharsToLog));\n            } else if (indexInfoThreshold >= 0 && tookInNanos > indexInfoThreshold) {\n                indexLogger.info(IndexingSlowLogMessage.of(index, doc, tookInNanos, reformat, maxSourceCharsToLog));\n            } else if (indexDebugThreshold >= 0 && tookInNanos > indexDebugThreshold) {\n                indexLogger.debug(IndexingSlowLogMessage.of(index, doc, tookInNanos, reformat, maxSourceCharsToLog));\n            } else if (indexTraceThreshold >= 0 && tookInNanos > indexTraceThreshold) {\n                indexLogger.trace(IndexingSlowLogMessage.of(index, doc, tookInNanos, reformat, maxSourceCharsToLog));\n            }\n        }\n    }\n","date":"2020-06-04 19:33:28","endLine":155,"groupId":"107701","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"postIndex","params":"(ShardIdshardId@Engine.IndexindexOperation@Engine.IndexResultresult)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-elasticsearch-10-0.7/blobInfo/CC_OUT/blobs/c1/af3ce0220c5aaa8baa21c464dec7c803fee566.src","preCode":"    public void postIndex(ShardId shardId, Engine.Index indexOperation, Engine.IndexResult result) {\n        if (result.getResultType() == Engine.Result.Type.SUCCESS) {\n            final ParsedDocument doc = indexOperation.parsedDoc();\n            final long tookInNanos = result.getTook();\n            \r\n            if (indexWarnThreshold >= 0 && tookInNanos > indexWarnThreshold && level.isLevelEnabledFor(SlowLogLevel.WARN)) {\n                indexLogger.warn(IndexingSlowLogMessage.of(index, doc, tookInNanos, reformat, maxSourceCharsToLog));\n            } else if (indexInfoThreshold >= 0 && tookInNanos > indexInfoThreshold && level.isLevelEnabledFor(SlowLogLevel.INFO)) {\n                indexLogger.info(IndexingSlowLogMessage.of(index, doc, tookInNanos, reformat, maxSourceCharsToLog));\n            } else if (indexDebugThreshold >= 0 && tookInNanos > indexDebugThreshold && level.isLevelEnabledFor(SlowLogLevel.DEBUG)) {\n                indexLogger.debug(IndexingSlowLogMessage.of(index, doc, tookInNanos, reformat, maxSourceCharsToLog));\n            } else if (indexTraceThreshold >= 0 && tookInNanos > indexTraceThreshold && level.isLevelEnabledFor(SlowLogLevel.TRACE)) {\n                indexLogger.trace(IndexingSlowLogMessage.of(index, doc, tookInNanos, reformat, maxSourceCharsToLog));\n            }\n        }\n    }\n","realPath":"server/src/main/java/org/elasticsearch/index/IndexingSlowLog.java","repoName":"elasticsearch","snippetEndLine":0,"snippetStartLine":0,"startLine":141,"status":"M"}],"commitId":"0dfc83ab3df9cd70b95a5d67c370b0fa75fe3ef0","commitMessage":"@@@Remove slowlog level (#57591)\n\nSetting a slow log level requires an unnecessary conditional logic in SearchSlowLog and IndexingSlowLog\nThe behaviour of setting a level on a slow logger can be achieved with correct slow log threshold settings.\nThis PR is removing slow log and modifies tests to achieve the same behaviour with changing threshold.\nrelates #56171","date":"2020-06-04 19:33:28","modifiedFileCount":"6","status":"M","submitter":"Przemyslaw Gomulka"}]
