[{"authorTime":"2020-01-05 17:23:02","codes":[{"authorDate":"2018-07-01 21:53:09","commitOrder":2,"curCode":"  protected ContextHandler mockServerHandler(final int statusCode, final String response) {\n    ContextHandler context = new ContextHandler(\"/\");\n    context.setHandler(new AbstractHandler() {\n\n      @Override\n      public void handle(String target, Request baseRequest, HttpServletRequest request,\n          HttpServletResponse response) throws IOException, ServletException {\n\n        response.setContentType(\"text/plain;charset=UTF-8\");\n        response.setStatus(statusCode);\n        response.getWriter().println(response);\n        baseRequest.setHandled(true);\n      }\n    });\n    return context;\n  }\n","date":"2018-07-01 21:53:09","endLine":75,"groupId":"1668","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"mockServerHandler","params":"(finalintstatusCode@finalStringresponse)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-apollo-10-0.7/blobInfo/CC_OUT/blobs/07/d0c1ad5b5d22c90688c8ba302c240d5abb5ac7.src","preCode":"  protected ContextHandler mockServerHandler(final int statusCode, final String response) {\n    ContextHandler context = new ContextHandler(\"/\");\n    context.setHandler(new AbstractHandler() {\n\n      @Override\n      public void handle(String target, Request baseRequest, HttpServletRequest request,\n          HttpServletResponse response) throws IOException, ServletException {\n\n        response.setContentType(\"text/plain;charset=UTF-8\");\n        response.setStatus(statusCode);\n        response.getWriter().println(response);\n        baseRequest.setHandled(true);\n      }\n    });\n    return context;\n  }\n","realPath":"apollo-core/src/test/java/com/ctrip/framework/apollo/BaseIntegrationTest.java","repoName":"apollo","snippetEndLine":0,"snippetStartLine":0,"startLine":60,"status":"NB"},{"authorDate":"2020-01-05 17:23:02","commitOrder":2,"curCode":"  protected ContextHandler mockServerHandler(final int statusCode, final String response) {\n    ContextHandler context = new ContextHandler(\"/\");\n    context.setHandler(new AbstractHandler() {\n\n      @Override\n      public void handle(String target, Request baseRequest, HttpServletRequest request,\n          HttpServletResponse response) throws IOException, ServletException {\n\n        response.setContentType(\"text/plain;charset=UTF-8\");\n        response.setStatus(statusCode);\n        response.getWriter().println(response);\n        baseRequest.setHandled(true);\n      }\n    });\n    return context;\n  }\n","date":"2020-01-05 17:23:02","endLine":74,"groupId":"1668","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"mockServerHandler","params":"(finalintstatusCode@finalStringresponse)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-apollo-10-0.7/blobInfo/CC_OUT/blobs/49/b400573d49c1f46d01f30033c18769d0f78999.src","preCode":"  protected ContextHandler mockServerHandler(final int statusCode, final String response) {\n    ContextHandler context = new ContextHandler(\"/\");\n    context.setHandler(new AbstractHandler() {\n\n      @Override\n      public void handle(String target, Request baseRequest, HttpServletRequest request,\n          HttpServletResponse response) throws IOException, ServletException {\n\n        response.setContentType(\"text/plain;charset=UTF-8\");\n        response.setStatus(statusCode);\n        response.getWriter().println(response);\n        baseRequest.setHandled(true);\n      }\n    });\n    return context;\n  }\n","realPath":"apollo-portal/src/test/java/com/ctrip/framework/apollo/portal/environment/BaseIntegrationTest.java","repoName":"apollo","snippetEndLine":0,"snippetStartLine":0,"startLine":59,"status":"B"}],"commitId":"42edb9da963df986538edcda4ff58d474fb3abed","commitMessage":"@@@Dynamic environment for apollo-portal (#2867)\n\n\n","date":"2020-01-05 17:23:02","modifiedFileCount":"63","status":"M","submitter":"Anilople"},{"authorTime":"2020-03-14 21:50:23","codes":[{"authorDate":"2018-07-01 21:53:09","commitOrder":3,"curCode":"  protected ContextHandler mockServerHandler(final int statusCode, final String response) {\n    ContextHandler context = new ContextHandler(\"/\");\n    context.setHandler(new AbstractHandler() {\n\n      @Override\n      public void handle(String target, Request baseRequest, HttpServletRequest request,\n          HttpServletResponse response) throws IOException, ServletException {\n\n        response.setContentType(\"text/plain;charset=UTF-8\");\n        response.setStatus(statusCode);\n        response.getWriter().println(response);\n        baseRequest.setHandled(true);\n      }\n    });\n    return context;\n  }\n","date":"2018-07-01 21:53:09","endLine":75,"groupId":"10405","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"mockServerHandler","params":"(finalintstatusCode@finalStringresponse)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-apollo-10-0.7/blobInfo/CC_OUT/blobs/07/d0c1ad5b5d22c90688c8ba302c240d5abb5ac7.src","preCode":"  protected ContextHandler mockServerHandler(final int statusCode, final String response) {\n    ContextHandler context = new ContextHandler(\"/\");\n    context.setHandler(new AbstractHandler() {\n\n      @Override\n      public void handle(String target, Request baseRequest, HttpServletRequest request,\n          HttpServletResponse response) throws IOException, ServletException {\n\n        response.setContentType(\"text/plain;charset=UTF-8\");\n        response.setStatus(statusCode);\n        response.getWriter().println(response);\n        baseRequest.setHandled(true);\n      }\n    });\n    return context;\n  }\n","realPath":"apollo-core/src/test/java/com/ctrip/framework/apollo/BaseIntegrationTest.java","repoName":"apollo","snippetEndLine":0,"snippetStartLine":0,"startLine":60,"status":"N"},{"authorDate":"2020-03-14 21:50:23","commitOrder":3,"curCode":"  ContextHandler mockServerHandler(final int statusCode, final String response) {\n    ContextHandler context = new ContextHandler(\"/\");\n    context.setHandler(new AbstractHandler() {\n\n      @Override\n      public void handle(String target, Request baseRequest, HttpServletRequest request,\n          HttpServletResponse response) throws IOException, ServletException {\n\n        response.setContentType(\"text/plain;charset=UTF-8\");\n        response.setStatus(statusCode);\n        response.getWriter().println(response);\n        baseRequest.setHandled(true);\n      }\n    });\n    return context;\n  }\n","date":"2020-03-14 22:11:32","endLine":57,"groupId":"10405","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"mockServerHandler","params":"(finalintstatusCode@finalStringresponse)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-apollo-10-0.7/blobInfo/CC_OUT/blobs/03/7b7536a16ddb8812651a74b446be0c250d6ae5.src","preCode":"  protected ContextHandler mockServerHandler(final int statusCode, final String response) {\n    ContextHandler context = new ContextHandler(\"/\");\n    context.setHandler(new AbstractHandler() {\n\n      @Override\n      public void handle(String target, Request baseRequest, HttpServletRequest request,\n          HttpServletResponse response) throws IOException, ServletException {\n\n        response.setContentType(\"text/plain;charset=UTF-8\");\n        response.setStatus(statusCode);\n        response.getWriter().println(response);\n        baseRequest.setHandled(true);\n      }\n    });\n    return context;\n  }\n","realPath":"apollo-portal/src/test/java/com/ctrip/framework/apollo/portal/environment/BaseIntegrationTest.java","repoName":"apollo","snippetEndLine":0,"snippetStartLine":0,"startLine":42,"status":"M"}],"commitId":"7ca4247fa95b5f502683a15953cd7f51c2b13e0f","commitMessage":"@@@refactor portal meta server address logic a little bit\n","date":"2020-03-14 22:11:32","modifiedFileCount":"8","status":"M","submitter":"Jason Song"}]
