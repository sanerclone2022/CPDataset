[{"authorTime":"2020-01-21 08:22:12","codes":[{"authorDate":"2020-01-21 08:22:12","commitOrder":2,"curCode":"  public void setUp() throws Exception {\n    someNamespace = \"someName\";\n    MockInjector.reset();\n    when(propertiesFactory.getPropertiesInstance()).thenAnswer(new Answer<Properties>() {\n      @Override\n      public Properties answer(InvocationOnMock invocation) {\n        return new Properties();\n      }\n    });\n    MockInjector.setInstance(PropertiesFactory.class, propertiesFactory);\n  }\n","date":"2020-01-21 20:16:07","endLine":51,"groupId":"588","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"setUp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-apollo-10-0.7/blobInfo/CC_OUT/blobs/6e/ba33ab3687c8303c572a4dbbf55382670160c7.src","preCode":"  public void setUp() throws Exception {\n    someNamespace = \"someName\";\n    MockInjector.reset();\n    when(propertiesFactory.getPropertiesInstance()).thenAnswer(new Answer<Properties>() {\n      @Override\n      public Properties answer(InvocationOnMock invocation) {\n        return new Properties();\n      }\n    });\n    MockInjector.setInstance(PropertiesFactory.class, propertiesFactory);\n  }\n","realPath":"apollo-client/src/test/java/com/ctrip/framework/apollo/internals/PropertiesConfigFileTest.java","repoName":"apollo","snippetEndLine":0,"snippetStartLine":0,"startLine":41,"status":"B"},{"authorDate":"2020-01-21 08:22:12","commitOrder":2,"curCode":"  public void setUp() throws Exception {\n    someNamespace = \"someName\";\n\n    MockInjector.reset();\n    MockInjector.setInstance(YamlParser.class, yamlParser);\n\n    when(propertiesFactory.getPropertiesInstance()).thenAnswer(new Answer<Properties>() {\n      @Override\n      public Properties answer(InvocationOnMock invocation) {\n        return new Properties();\n      }\n    });\n    MockInjector.setInstance(PropertiesFactory.class, propertiesFactory);\n  }\n","date":"2020-01-21 20:16:07","endLine":49,"groupId":"588","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"setUp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-apollo-10-0.7/blobInfo/CC_OUT/blobs/aa/0dea2f773e5bf8a1aa0b8505b670a887553343.src","preCode":"  public void setUp() throws Exception {\n    someNamespace = \"someName\";\n\n    MockInjector.reset();\n    MockInjector.setInstance(YamlParser.class, yamlParser);\n\n    when(propertiesFactory.getPropertiesInstance()).thenAnswer(new Answer<Properties>() {\n      @Override\n      public Properties answer(InvocationOnMock invocation) {\n        return new Properties();\n      }\n    });\n    MockInjector.setInstance(PropertiesFactory.class, propertiesFactory);\n  }\n","realPath":"apollo-client/src/test/java/com/ctrip/framework/apollo/internals/YamlConfigFileTest.java","repoName":"apollo","snippetEndLine":0,"snippetStartLine":0,"startLine":36,"status":"MB"}],"commitId":"5fe54966f5f50e5f5e1c3b2e0f0d82b1d92f014d","commitMessage":"@@@use linked hash map to keep server side config order and do some refactoring to apollo-client\n","date":"2020-01-21 20:16:07","modifiedFileCount":"18","status":"M","submitter":"Jason Song"},{"authorTime":"2020-06-21 12:42:33","codes":[{"authorDate":"2020-06-21 12:42:33","commitOrder":3,"curCode":"  public void setUp() throws Exception {\n    someNamespace = \"someName\";\n    when(propertiesFactory.getPropertiesInstance()).thenAnswer(new Answer<Properties>() {\n      @Override\n      public Properties answer(InvocationOnMock invocation) {\n        return new Properties();\n      }\n    });\n    MockInjector.setInstance(PropertiesFactory.class, propertiesFactory);\n  }\n","date":"2020-06-21 14:13:02","endLine":51,"groupId":"10236","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"setUp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-apollo-10-0.7/blobInfo/CC_OUT/blobs/ea/bf187539889888bb543017d6b09334cc65bd67.src","preCode":"  public void setUp() throws Exception {\n    someNamespace = \"someName\";\n    MockInjector.reset();\n    when(propertiesFactory.getPropertiesInstance()).thenAnswer(new Answer<Properties>() {\n      @Override\n      public Properties answer(InvocationOnMock invocation) {\n        return new Properties();\n      }\n    });\n    MockInjector.setInstance(PropertiesFactory.class, propertiesFactory);\n  }\n","realPath":"apollo-client/src/test/java/com/ctrip/framework/apollo/internals/PropertiesConfigFileTest.java","repoName":"apollo","snippetEndLine":0,"snippetStartLine":0,"startLine":42,"status":"M"},{"authorDate":"2020-06-21 12:42:33","commitOrder":3,"curCode":"  public void setUp() throws Exception {\n    someNamespace = \"someName\";\n\n    MockInjector.setInstance(YamlParser.class, yamlParser);\n\n    when(propertiesFactory.getPropertiesInstance()).thenAnswer(new Answer<Properties>() {\n      @Override\n      public Properties answer(InvocationOnMock invocation) {\n        return new Properties();\n      }\n    });\n    MockInjector.setInstance(PropertiesFactory.class, propertiesFactory);\n  }\n","date":"2020-06-21 14:13:02","endLine":49,"groupId":"10236","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"setUp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-apollo-10-0.7/blobInfo/CC_OUT/blobs/f0/98ab6bd2fb44b0c886fedfc42290b5c84cba63.src","preCode":"  public void setUp() throws Exception {\n    someNamespace = \"someName\";\n\n    MockInjector.reset();\n    MockInjector.setInstance(YamlParser.class, yamlParser);\n\n    when(propertiesFactory.getPropertiesInstance()).thenAnswer(new Answer<Properties>() {\n      @Override\n      public Properties answer(InvocationOnMock invocation) {\n        return new Properties();\n      }\n    });\n    MockInjector.setInstance(PropertiesFactory.class, propertiesFactory);\n  }\n","realPath":"apollo-client/src/test/java/com/ctrip/framework/apollo/internals/YamlConfigFileTest.java","repoName":"apollo","snippetEndLine":0,"snippetStartLine":0,"startLine":37,"status":"M"}],"commitId":"4c2c12b7c8c209b3f12eda7b9f3b7d659523a901","commitMessage":"@@@reset mock inject in tear down phase to make sure the context is clean\n","date":"2020-06-21 14:13:02","modifiedFileCount":"17","status":"M","submitter":"Jason Song"}]
