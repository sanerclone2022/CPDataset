[{"authorTime":"2020-03-14 20:43:54","codes":[{"authorDate":"2018-08-07 21:27:48","commitOrder":3,"curCode":"  private static void schedulePeriodicRefresh() {\n    ScheduledExecutorService scheduledExecutorService =\n        Executors.newScheduledThreadPool(1, ApolloThreadFactory.create(\"MetaServiceLocator\", true));\n\n    scheduledExecutorService.scheduleAtFixedRate(new Runnable() {\n      @Override\n      public void run() {\n        try {\n          for (String metaServerAddresses : selectedMetaServerAddressCache.keySet()) {\n            updateMetaServerAddresses(metaServerAddresses);\n          }\n        } catch (Throwable ex) {\n          logger.warn(String.format(\"Refreshing meta server address failed, will retry in %d seconds\",\n              REFRESH_INTERVAL_IN_SECOND), ex);\n        }\n      }\n    }, REFRESH_INTERVAL_IN_SECOND, REFRESH_INTERVAL_IN_SECOND, TimeUnit.SECONDS);\n  }\n","date":"2018-08-07 21:27:48","endLine":203,"groupId":"844","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"schedulePeriodicRefresh","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-apollo-10-0.7/blobInfo/CC_OUT/blobs/f0/c0e80a3c857f282cb0794b9960cef3f8355185.src","preCode":"  private static void schedulePeriodicRefresh() {\n    ScheduledExecutorService scheduledExecutorService =\n        Executors.newScheduledThreadPool(1, ApolloThreadFactory.create(\"MetaServiceLocator\", true));\n\n    scheduledExecutorService.scheduleAtFixedRate(new Runnable() {\n      @Override\n      public void run() {\n        try {\n          for (String metaServerAddresses : selectedMetaServerAddressCache.keySet()) {\n            updateMetaServerAddresses(metaServerAddresses);\n          }\n        } catch (Throwable ex) {\n          logger.warn(String.format(\"Refreshing meta server address failed, will retry in %d seconds\",\n              REFRESH_INTERVAL_IN_SECOND), ex);\n        }\n      }\n    }, REFRESH_INTERVAL_IN_SECOND, REFRESH_INTERVAL_IN_SECOND, TimeUnit.SECONDS);\n  }\n","realPath":"apollo-core/src/main/java/com/ctrip/framework/apollo/core/MetaDomainConsts.java","repoName":"apollo","snippetEndLine":0,"snippetStartLine":0,"startLine":186,"status":"NB"},{"authorDate":"2020-03-14 20:43:54","commitOrder":3,"curCode":"    private static void schedulePeriodicRefresh() {\n        ScheduledExecutorService scheduledExecutorService =\n                Executors.newScheduledThreadPool(1, ApolloThreadFactory.create(\"MetaServiceLocator\", true));\n\n        scheduledExecutorService.scheduleAtFixedRate(new Runnable() {\n            @Override\n            public void run() {\n                try {\n                    for (String metaServerAddresses : selectedMetaServerAddressCache.keySet()) {\n                        updateMetaServerAddresses(metaServerAddresses);\n                    }\n                } catch (Throwable ex) {\n                    logger.warn(String.format(\"Refreshing meta server address failed, will retry in %d seconds\",\n                            REFRESH_INTERVAL_IN_SECOND), ex);\n                }\n            }\n        }, REFRESH_INTERVAL_IN_SECOND, REFRESH_INTERVAL_IN_SECOND, TimeUnit.SECONDS);\n    }\n","date":"2020-03-14 20:43:54","endLine":217,"groupId":"844","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"schedulePeriodicRefresh","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-apollo-10-0.7/blobInfo/CC_OUT/blobs/4f/3987ab0cc9033b8cb9ab21729dbe59b79416df.src","preCode":"    private static void schedulePeriodicRefresh() {\n        ScheduledExecutorService scheduledExecutorService =\n                Executors.newScheduledThreadPool(1, ApolloThreadFactory.create(\"MetaServiceLocator\", true));\n\n        scheduledExecutorService.scheduleAtFixedRate(new Runnable() {\n            @Override\n            public void run() {\n                try {\n                    for (String metaServerAddresses : selectedMetaServerAddressCache.keySet()) {\n                        updateMetaServerAddresses(metaServerAddresses);\n                    }\n                } catch (Throwable ex) {\n                    logger.warn(String.format(\"Refreshing meta server address failed, will retry in %d seconds\",\n                            REFRESH_INTERVAL_IN_SECOND), ex);\n                }\n            }\n        }, REFRESH_INTERVAL_IN_SECOND, REFRESH_INTERVAL_IN_SECOND, TimeUnit.SECONDS);\n    }\n","realPath":"apollo-portal/src/main/java/com/ctrip/framework/apollo/portal/environment/PortalMetaDomainService.java","repoName":"apollo","snippetEndLine":0,"snippetStartLine":0,"startLine":200,"status":"B"}],"commitId":"a81d7287014ab8bfc327040a66ac8a5d5510b7e9","commitMessage":"@@@feat(apollo-portal): read dynamic environment from key \"apollo.portal.meta.servers\" in PortalDB.ServerConfig (#2953)\n\n","date":"2020-03-14 20:43:54","modifiedFileCount":"8","status":"M","submitter":"Anilople"},{"authorTime":"2020-03-14 21:50:23","codes":[{"authorDate":"2018-08-07 21:27:48","commitOrder":4,"curCode":"  private static void schedulePeriodicRefresh() {\n    ScheduledExecutorService scheduledExecutorService =\n        Executors.newScheduledThreadPool(1, ApolloThreadFactory.create(\"MetaServiceLocator\", true));\n\n    scheduledExecutorService.scheduleAtFixedRate(new Runnable() {\n      @Override\n      public void run() {\n        try {\n          for (String metaServerAddresses : selectedMetaServerAddressCache.keySet()) {\n            updateMetaServerAddresses(metaServerAddresses);\n          }\n        } catch (Throwable ex) {\n          logger.warn(String.format(\"Refreshing meta server address failed, will retry in %d seconds\",\n              REFRESH_INTERVAL_IN_SECOND), ex);\n        }\n      }\n    }, REFRESH_INTERVAL_IN_SECOND, REFRESH_INTERVAL_IN_SECOND, TimeUnit.SECONDS);\n  }\n","date":"2018-08-07 21:27:48","endLine":203,"groupId":"844","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"schedulePeriodicRefresh","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-apollo-10-0.7/blobInfo/CC_OUT/blobs/f0/c0e80a3c857f282cb0794b9960cef3f8355185.src","preCode":"  private static void schedulePeriodicRefresh() {\n    ScheduledExecutorService scheduledExecutorService =\n        Executors.newScheduledThreadPool(1, ApolloThreadFactory.create(\"MetaServiceLocator\", true));\n\n    scheduledExecutorService.scheduleAtFixedRate(new Runnable() {\n      @Override\n      public void run() {\n        try {\n          for (String metaServerAddresses : selectedMetaServerAddressCache.keySet()) {\n            updateMetaServerAddresses(metaServerAddresses);\n          }\n        } catch (Throwable ex) {\n          logger.warn(String.format(\"Refreshing meta server address failed, will retry in %d seconds\",\n              REFRESH_INTERVAL_IN_SECOND), ex);\n        }\n      }\n    }, REFRESH_INTERVAL_IN_SECOND, REFRESH_INTERVAL_IN_SECOND, TimeUnit.SECONDS);\n  }\n","realPath":"apollo-core/src/main/java/com/ctrip/framework/apollo/core/MetaDomainConsts.java","repoName":"apollo","snippetEndLine":0,"snippetStartLine":0,"startLine":186,"status":"N"},{"authorDate":"2020-03-14 21:50:23","commitOrder":4,"curCode":"    private void schedulePeriodicRefresh() {\n        ScheduledExecutorService scheduledExecutorService =\n                Executors.newScheduledThreadPool(1, ApolloThreadFactory.create(\"MetaServiceLocator\", true));\n\n        scheduledExecutorService.scheduleAtFixedRate(new Runnable() {\n            @Override\n            public void run() {\n                try {\n                    for (String metaServerAddresses : selectedMetaServerAddressCache.keySet()) {\n                        updateMetaServerAddresses(metaServerAddresses);\n                    }\n                } catch (Throwable ex) {\n                    logger.warn(String.format(\"Refreshing meta server address failed, will retry in %d seconds\",\n                            REFRESH_INTERVAL_IN_SECOND), ex);\n                }\n            }\n        }, REFRESH_INTERVAL_IN_SECOND, REFRESH_INTERVAL_IN_SECOND, TimeUnit.SECONDS);\n    }\n","date":"2020-03-14 22:11:32","endLine":215,"groupId":"844","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"schedulePeriodicRefresh","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-apollo-10-0.7/blobInfo/CC_OUT/blobs/df/a8cd83c4ec1110cd2ea8f92d9a0c152fb23426.src","preCode":"    private static void schedulePeriodicRefresh() {\n        ScheduledExecutorService scheduledExecutorService =\n                Executors.newScheduledThreadPool(1, ApolloThreadFactory.create(\"MetaServiceLocator\", true));\n\n        scheduledExecutorService.scheduleAtFixedRate(new Runnable() {\n            @Override\n            public void run() {\n                try {\n                    for (String metaServerAddresses : selectedMetaServerAddressCache.keySet()) {\n                        updateMetaServerAddresses(metaServerAddresses);\n                    }\n                } catch (Throwable ex) {\n                    logger.warn(String.format(\"Refreshing meta server address failed, will retry in %d seconds\",\n                            REFRESH_INTERVAL_IN_SECOND), ex);\n                }\n            }\n        }, REFRESH_INTERVAL_IN_SECOND, REFRESH_INTERVAL_IN_SECOND, TimeUnit.SECONDS);\n    }\n","realPath":"apollo-portal/src/main/java/com/ctrip/framework/apollo/portal/environment/PortalMetaDomainService.java","repoName":"apollo","snippetEndLine":0,"snippetStartLine":0,"startLine":198,"status":"M"}],"commitId":"7ca4247fa95b5f502683a15953cd7f51c2b13e0f","commitMessage":"@@@refactor portal meta server address logic a little bit\n","date":"2020-03-14 22:11:32","modifiedFileCount":"8","status":"M","submitter":"Jason Song"},{"authorTime":"2021-09-11 10:27:34","codes":[{"authorDate":"2018-08-07 21:27:48","commitOrder":5,"curCode":"  private static void schedulePeriodicRefresh() {\n    ScheduledExecutorService scheduledExecutorService =\n        Executors.newScheduledThreadPool(1, ApolloThreadFactory.create(\"MetaServiceLocator\", true));\n\n    scheduledExecutorService.scheduleAtFixedRate(new Runnable() {\n      @Override\n      public void run() {\n        try {\n          for (String metaServerAddresses : selectedMetaServerAddressCache.keySet()) {\n            updateMetaServerAddresses(metaServerAddresses);\n          }\n        } catch (Throwable ex) {\n          logger.warn(String.format(\"Refreshing meta server address failed, will retry in %d seconds\",\n              REFRESH_INTERVAL_IN_SECOND), ex);\n        }\n      }\n    }, REFRESH_INTERVAL_IN_SECOND, REFRESH_INTERVAL_IN_SECOND, TimeUnit.SECONDS);\n  }\n","date":"2018-08-07 21:27:48","endLine":203,"groupId":"1087","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"schedulePeriodicRefresh","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-apollo-10-0.7/blobInfo/CC_OUT/blobs/f0/c0e80a3c857f282cb0794b9960cef3f8355185.src","preCode":"  private static void schedulePeriodicRefresh() {\n    ScheduledExecutorService scheduledExecutorService =\n        Executors.newScheduledThreadPool(1, ApolloThreadFactory.create(\"MetaServiceLocator\", true));\n\n    scheduledExecutorService.scheduleAtFixedRate(new Runnable() {\n      @Override\n      public void run() {\n        try {\n          for (String metaServerAddresses : selectedMetaServerAddressCache.keySet()) {\n            updateMetaServerAddresses(metaServerAddresses);\n          }\n        } catch (Throwable ex) {\n          logger.warn(String.format(\"Refreshing meta server address failed, will retry in %d seconds\",\n              REFRESH_INTERVAL_IN_SECOND), ex);\n        }\n      }\n    }, REFRESH_INTERVAL_IN_SECOND, REFRESH_INTERVAL_IN_SECOND, TimeUnit.SECONDS);\n  }\n","realPath":"apollo-core/src/main/java/com/ctrip/framework/apollo/core/MetaDomainConsts.java","repoName":"apollo","snippetEndLine":0,"snippetStartLine":0,"startLine":186,"status":"N"},{"authorDate":"2021-09-11 10:27:34","commitOrder":5,"curCode":"    private void schedulePeriodicRefresh() {\n        ScheduledExecutorService scheduledExecutorService =\n                Executors.newScheduledThreadPool(1, ApolloThreadFactory.create(\"MetaServiceLocator\", true));\n\n        scheduledExecutorService.scheduleAtFixedRate(() -> {\n            try {\n                for (String metaServerAddresses : selectedMetaServerAddressCache.keySet()) {\n                    updateMetaServerAddresses(metaServerAddresses);\n                }\n            } catch (Throwable ex) {\n                logger.warn(String.format(\"Refreshing meta server address failed, will retry in %d seconds\",\n                        REFRESH_INTERVAL_IN_SECOND), ex);\n            }\n        }, REFRESH_INTERVAL_IN_SECOND, REFRESH_INTERVAL_IN_SECOND, TimeUnit.SECONDS);\n    }\n","date":"2021-09-11 10:43:39","endLine":228,"groupId":"1087","id":6,"instanceNumber":2,"isCurCommit":1,"methodName":"schedulePeriodicRefresh","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-apollo-10-0.7/blobInfo/CC_OUT/blobs/9e/289ca17cb8abefca862e3637bcafa2b375ba48.src","preCode":"    private void schedulePeriodicRefresh() {\n        ScheduledExecutorService scheduledExecutorService =\n                Executors.newScheduledThreadPool(1, ApolloThreadFactory.create(\"MetaServiceLocator\", true));\n\n        scheduledExecutorService.scheduleAtFixedRate(new Runnable() {\n            @Override\n            public void run() {\n                try {\n                    for (String metaServerAddresses : selectedMetaServerAddressCache.keySet()) {\n                        updateMetaServerAddresses(metaServerAddresses);\n                    }\n                } catch (Throwable ex) {\n                    logger.warn(String.format(\"Refreshing meta server address failed, will retry in %d seconds\",\n                            REFRESH_INTERVAL_IN_SECOND), ex);\n                }\n            }\n        }, REFRESH_INTERVAL_IN_SECOND, REFRESH_INTERVAL_IN_SECOND, TimeUnit.SECONDS);\n    }\n","realPath":"apollo-portal/src/main/java/com/ctrip/framework/apollo/portal/environment/PortalMetaDomainService.java","repoName":"apollo","snippetEndLine":0,"snippetStartLine":0,"startLine":214,"status":"M"}],"commitId":"0b5d2277b5f3edf1e38f2c18ce284e88238ff732","commitMessage":"@@@Fixed some code smells in apollo-portal module\n\nSigned-off-by: WillardHu <wei.hu@daocloud.io>\n","date":"2021-09-11 10:43:39","modifiedFileCount":"16","status":"M","submitter":"WillardHu"}]
