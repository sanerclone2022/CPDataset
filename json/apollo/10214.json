[{"authorTime":"2016-07-20 15:44:22","codes":[{"authorDate":"2016-07-20 15:44:22","commitOrder":2,"curCode":"  public void setUp() throws Exception {\n    super.setUp();\n    someNamespace = \"someName\";\n\n    when(pollResponse.getStatusCode()).thenReturn(HttpServletResponse.SC_NOT_MODIFIED);\n\n    defineComponent(ConfigUtil.class, MockConfigUtil.class);\n    defineComponent(ConfigServiceLocator.class, MockConfigServiceLocator.class);\n    defineComponent(HttpUtil.class, MockHttpUtil.class);\n\n    remoteConfigLongPollService = lookup(RemoteConfigLongPollService.class);\n  }\n","date":"2016-07-20 15:44:22","endLine":72,"groupId":"1629","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"setUp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-apollo-10-0.7/blobInfo/CC_OUT/blobs/6f/d046706a7c540f9d5f5309c245af004829825a.src","preCode":"  public void setUp() throws Exception {\n    super.setUp();\n    someNamespace = \"someName\";\n\n    when(pollResponse.getStatusCode()).thenReturn(HttpServletResponse.SC_NOT_MODIFIED);\n\n    defineComponent(ConfigUtil.class, MockConfigUtil.class);\n    defineComponent(ConfigServiceLocator.class, MockConfigServiceLocator.class);\n    defineComponent(HttpUtil.class, MockHttpUtil.class);\n\n    remoteConfigLongPollService = lookup(RemoteConfigLongPollService.class);\n  }\n","realPath":"apollo-client/src/test/java/com/ctrip/framework/apollo/internals/RemoteConfigRepositoryTest.java","repoName":"apollo","snippetEndLine":0,"snippetStartLine":0,"startLine":61,"status":"MB"},{"authorDate":"2016-07-20 15:44:22","commitOrder":2,"curCode":"  public void setUp() throws Exception {\n    super.setUp();\n\n    defineComponent(ConfigUtil.class, MockConfigUtil.class);\n    defineComponent(ConfigServiceLocator.class, MockConfigServiceLocator.class);\n\n    remoteConfigLongPollService = lookup(RemoteConfigLongPollService.class);\n\n    ReflectionTestUtils.setField(remoteConfigLongPollService, \"m_httpUtil\", httpUtil);\n    responseType =\n        (Type) ReflectionTestUtils.getField(remoteConfigLongPollService, \"m_responseType\");\n\n    someServerUrl = \"http://someServer\";\n    someAppId = \"someAppId\";\n    someCluster = \"someCluster\";\n  }\n","date":"2016-07-20 15:44:22","endLine":75,"groupId":"632","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"setUp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-apollo-10-0.7/blobInfo/CC_OUT/blobs/a6/fd5598ae36240eac3783e158e29fa8e89f26a9.src","preCode":"  public void setUp() throws Exception {\n    super.setUp();\n\n    defineComponent(ConfigUtil.class, MockConfigUtil.class);\n    defineComponent(ConfigServiceLocator.class, MockConfigServiceLocator.class);\n\n    remoteConfigLongPollService = lookup(RemoteConfigLongPollService.class);\n\n    ReflectionTestUtils.setField(remoteConfigLongPollService, \"m_httpUtil\", httpUtil);\n    responseType =\n        (Type) ReflectionTestUtils.getField(remoteConfigLongPollService, \"m_responseType\");\n\n    someServerUrl = \"http://someServer\";\n    someAppId = \"someAppId\";\n    someCluster = \"someCluster\";\n  }\n","realPath":"apollo-client/src/test/java/com/ctrip/framework/apollo/internals/RemoteConfigLongPollServiceTest.java","repoName":"apollo","snippetEndLine":0,"snippetStartLine":0,"startLine":60,"status":"B"}],"commitId":"562bc9598147c3aede6fb64f509ab5a248ce03a5","commitMessage":"@@@Merge pull request #332 from nobodyiam/client-long-poll-refactor-merge\n\nmultiple namespaces reuse the same long poll connection","date":"2016-07-20 15:44:22","modifiedFileCount":"18","status":"M","submitter":"??"},{"authorTime":"2017-01-24 17:20:46","codes":[{"authorDate":"2017-01-24 17:20:46","commitOrder":3,"curCode":"  public void setUp() throws Exception {\n    super.tearDown();\r\n    super.setUp();\n    someNamespace = \"someName\";\n\n    when(pollResponse.getStatusCode()).thenReturn(HttpServletResponse.SC_NOT_MODIFIED);\n\n    defineComponent(ConfigUtil.class, MockConfigUtil.class);\n    defineComponent(ConfigServiceLocator.class, MockConfigServiceLocator.class);\n    defineComponent(HttpUtil.class, MockHttpUtil.class);\n\n    remoteConfigLongPollService = lookup(RemoteConfigLongPollService.class);\n  }\n","date":"2017-01-24 17:20:46","endLine":73,"groupId":"1629","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"setUp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-apollo-10-0.7/blobInfo/CC_OUT/blobs/79/7d213bec0d17a0aa586e64eec982d64d81f1e6.src","preCode":"  public void setUp() throws Exception {\n    super.setUp();\n    someNamespace = \"someName\";\n\n    when(pollResponse.getStatusCode()).thenReturn(HttpServletResponse.SC_NOT_MODIFIED);\n\n    defineComponent(ConfigUtil.class, MockConfigUtil.class);\n    defineComponent(ConfigServiceLocator.class, MockConfigServiceLocator.class);\n    defineComponent(HttpUtil.class, MockHttpUtil.class);\n\n    remoteConfigLongPollService = lookup(RemoteConfigLongPollService.class);\n  }\n","realPath":"apollo-client/src/test/java/com/ctrip/framework/apollo/internals/RemoteConfigRepositoryTest.java","repoName":"apollo","snippetEndLine":0,"snippetStartLine":0,"startLine":61,"status":"M"},{"authorDate":"2017-01-24 17:20:46","commitOrder":3,"curCode":"  public void setUp() throws Exception {\n    super.tearDown();\r\n    super.setUp();\n\n    defineComponent(ConfigUtil.class, MockConfigUtil.class);\n    defineComponent(ConfigServiceLocator.class, MockConfigServiceLocator.class);\n\n    remoteConfigLongPollService = lookup(RemoteConfigLongPollService.class);\n\n    ReflectionTestUtils.setField(remoteConfigLongPollService, \"m_httpUtil\", httpUtil);\n    responseType =\n        (Type) ReflectionTestUtils.getField(remoteConfigLongPollService, \"m_responseType\");\n\n    someServerUrl = \"http://someServer\";\n    someAppId = \"someAppId\";\n    someCluster = \"someCluster\";\n  }\n","date":"2017-01-24 17:20:46","endLine":76,"groupId":"632","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"setUp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-apollo-10-0.7/blobInfo/CC_OUT/blobs/ce/e418e70d05031bbb9845e0a3617f28e18f49ef.src","preCode":"  public void setUp() throws Exception {\n    super.setUp();\n\n    defineComponent(ConfigUtil.class, MockConfigUtil.class);\n    defineComponent(ConfigServiceLocator.class, MockConfigServiceLocator.class);\n\n    remoteConfigLongPollService = lookup(RemoteConfigLongPollService.class);\n\n    ReflectionTestUtils.setField(remoteConfigLongPollService, \"m_httpUtil\", httpUtil);\n    responseType =\n        (Type) ReflectionTestUtils.getField(remoteConfigLongPollService, \"m_responseType\");\n\n    someServerUrl = \"http://someServer\";\n    someAppId = \"someAppId\";\n    someCluster = \"someCluster\";\n  }\n","realPath":"apollo-client/src/test/java/com/ctrip/framework/apollo/internals/RemoteConfigLongPollServiceTest.java","repoName":"apollo","snippetEndLine":0,"snippetStartLine":0,"startLine":60,"status":"M"}],"commitId":"58351732b3b51e692a1dfeab9d177fc03e3465ce","commitMessage":"@@@Merge pull request #531 from nobodyiam/optimize-client-parse\n\nOptimize client parse performance","date":"2017-01-24 17:20:46","modifiedFileCount":"18","status":"M","submitter":"??"},{"authorTime":"2017-04-26 11:32:55","codes":[{"authorDate":"2017-04-26 11:32:55","commitOrder":4,"curCode":"  public void setUp() throws Exception {\n    someNamespace = \"someName\";\n\n    when(pollResponse.getStatusCode()).thenReturn(HttpServletResponse.SC_NOT_MODIFIED);\n\n    MockInjector.reset();\n    MockInjector.setInstance(ConfigUtil.class, new MockConfigUtil());\n\n    String someServerUrl = \"http://someServer\";\n\n    ServiceDTO serviceDTO = mock(ServiceDTO.class);\n\n    when(serviceDTO.getHomepageUrl()).thenReturn(someServerUrl);\n    when(configServiceLocator.getConfigServices()).thenReturn(Lists.newArrayList(serviceDTO));\n    MockInjector.setInstance(ConfigServiceLocator.class, configServiceLocator);\n\n    MockInjector.setInstance(HttpUtil.class, new MockHttpUtil());\n\n    remoteConfigLongPollService = new RemoteConfigLongPollService();\n\n    MockInjector.setInstance(RemoteConfigLongPollService.class, remoteConfigLongPollService);\n  }\n","date":"2017-04-26 11:32:55","endLine":80,"groupId":"762","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"setUp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-apollo-10-0.7/blobInfo/CC_OUT/blobs/81/937a93cf21d56466315a8c1a338d2a5745bf0a.src","preCode":"  public void setUp() throws Exception {\n    super.tearDown();\r\n    super.setUp();\n    someNamespace = \"someName\";\n\n    when(pollResponse.getStatusCode()).thenReturn(HttpServletResponse.SC_NOT_MODIFIED);\n\n    defineComponent(ConfigUtil.class, MockConfigUtil.class);\n    defineComponent(ConfigServiceLocator.class, MockConfigServiceLocator.class);\n    defineComponent(HttpUtil.class, MockHttpUtil.class);\n\n    remoteConfigLongPollService = lookup(RemoteConfigLongPollService.class);\n  }\n","realPath":"apollo-client/src/test/java/com/ctrip/framework/apollo/internals/RemoteConfigRepositoryTest.java","repoName":"apollo","snippetEndLine":0,"snippetStartLine":0,"startLine":59,"status":"M"},{"authorDate":"2017-04-26 11:32:55","commitOrder":4,"curCode":"  public void setUp() throws Exception {\n    MockInjector.reset();\n\n    MockInjector.setInstance(HttpUtil.class, httpUtil);\n\n    ServiceDTO serviceDTO = mock(ServiceDTO.class);\n    when(serviceDTO.getHomepageUrl()).thenReturn(someServerUrl);\n    when(configServiceLocator.getConfigServices()).thenReturn(Lists.newArrayList(serviceDTO));\n    MockInjector.setInstance(ConfigServiceLocator.class, configServiceLocator);\n\n    MockInjector.setInstance(ConfigUtil.class, new MockConfigUtil());\n\n    remoteConfigLongPollService = new RemoteConfigLongPollService();\n\n    responseType =\n        (Type) ReflectionTestUtils.getField(remoteConfigLongPollService, \"m_responseType\");\n\n    someServerUrl = \"http://someServer\";\n    someAppId = \"someAppId\";\n    someCluster = \"someCluster\";\n  }\n","date":"2017-04-26 11:32:55","endLine":80,"groupId":"4","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"setUp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-apollo-10-0.7/blobInfo/CC_OUT/blobs/5a/56df94112a26b74fc4dd0c0c803e69a75175c0.src","preCode":"  public void setUp() throws Exception {\n    super.tearDown();\r\n    super.setUp();\n\n    defineComponent(ConfigUtil.class, MockConfigUtil.class);\n    defineComponent(ConfigServiceLocator.class, MockConfigServiceLocator.class);\n\n    remoteConfigLongPollService = lookup(RemoteConfigLongPollService.class);\n\n    ReflectionTestUtils.setField(remoteConfigLongPollService, \"m_httpUtil\", httpUtil);\n    responseType =\n        (Type) ReflectionTestUtils.getField(remoteConfigLongPollService, \"m_responseType\");\n\n    someServerUrl = \"http://someServer\";\n    someAppId = \"someAppId\";\n    someCluster = \"someCluster\";\n  }\n","realPath":"apollo-client/src/test/java/com/ctrip/framework/apollo/internals/RemoteConfigLongPollServiceTest.java","repoName":"apollo","snippetEndLine":0,"snippetStartLine":0,"startLine":60,"status":"M"}],"commitId":"bc0e48466c4ab97a251d616fe1093f755505fb63","commitMessage":"@@@Merge pull request #599 from nobodyiam/use-guice-as-client-ioc\n\nuse guice as apollo-client ioc mechanism","date":"2017-04-26 11:32:55","modifiedFileCount":"53","status":"M","submitter":"??"},{"authorTime":"2017-06-12 10:16:19","codes":[{"authorDate":"2017-04-26 11:32:55","commitOrder":5,"curCode":"  public void setUp() throws Exception {\n    someNamespace = \"someName\";\n\n    when(pollResponse.getStatusCode()).thenReturn(HttpServletResponse.SC_NOT_MODIFIED);\n\n    MockInjector.reset();\n    MockInjector.setInstance(ConfigUtil.class, new MockConfigUtil());\n\n    String someServerUrl = \"http://someServer\";\n\n    ServiceDTO serviceDTO = mock(ServiceDTO.class);\n\n    when(serviceDTO.getHomepageUrl()).thenReturn(someServerUrl);\n    when(configServiceLocator.getConfigServices()).thenReturn(Lists.newArrayList(serviceDTO));\n    MockInjector.setInstance(ConfigServiceLocator.class, configServiceLocator);\n\n    MockInjector.setInstance(HttpUtil.class, new MockHttpUtil());\n\n    remoteConfigLongPollService = new RemoteConfigLongPollService();\n\n    MockInjector.setInstance(RemoteConfigLongPollService.class, remoteConfigLongPollService);\n  }\n","date":"2017-04-26 11:32:55","endLine":80,"groupId":"762","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"setUp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-apollo-10-0.7/blobInfo/CC_OUT/blobs/81/937a93cf21d56466315a8c1a338d2a5745bf0a.src","preCode":"  public void setUp() throws Exception {\n    someNamespace = \"someName\";\n\n    when(pollResponse.getStatusCode()).thenReturn(HttpServletResponse.SC_NOT_MODIFIED);\n\n    MockInjector.reset();\n    MockInjector.setInstance(ConfigUtil.class, new MockConfigUtil());\n\n    String someServerUrl = \"http://someServer\";\n\n    ServiceDTO serviceDTO = mock(ServiceDTO.class);\n\n    when(serviceDTO.getHomepageUrl()).thenReturn(someServerUrl);\n    when(configServiceLocator.getConfigServices()).thenReturn(Lists.newArrayList(serviceDTO));\n    MockInjector.setInstance(ConfigServiceLocator.class, configServiceLocator);\n\n    MockInjector.setInstance(HttpUtil.class, new MockHttpUtil());\n\n    remoteConfigLongPollService = new RemoteConfigLongPollService();\n\n    MockInjector.setInstance(RemoteConfigLongPollService.class, remoteConfigLongPollService);\n  }\n","realPath":"apollo-client/src/test/java/com/ctrip/framework/apollo/internals/RemoteConfigRepositoryTest.java","repoName":"apollo","snippetEndLine":0,"snippetStartLine":0,"startLine":59,"status":"N"},{"authorDate":"2017-06-12 10:16:19","commitOrder":5,"curCode":"  public void setUp() throws Exception {\n    MockInjector.reset();\n\n    MockInjector.setInstance(HttpUtil.class, httpUtil);\n\n    someServerUrl = \"http://someServer\";\n    ServiceDTO serviceDTO = mock(ServiceDTO.class);\n    when(serviceDTO.getHomepageUrl()).thenReturn(someServerUrl);\n    when(configServiceLocator.getConfigServices()).thenReturn(Lists.newArrayList(serviceDTO));\n    MockInjector.setInstance(ConfigServiceLocator.class, configServiceLocator);\n\n    MockInjector.setInstance(ConfigUtil.class, new MockConfigUtil());\n\n    remoteConfigLongPollService = new RemoteConfigLongPollService();\n\n    responseType =\n        (Type) ReflectionTestUtils.getField(remoteConfigLongPollService, \"m_responseType\");\n\n    someAppId = \"someAppId\";\n    someCluster = \"someCluster\";\n  }\n","date":"2017-06-12 10:16:19","endLine":80,"groupId":"4","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"setUp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-apollo-10-0.7/blobInfo/CC_OUT/blobs/c8/6f79746328d5be066830092e0988112a935067.src","preCode":"  public void setUp() throws Exception {\n    MockInjector.reset();\n\n    MockInjector.setInstance(HttpUtil.class, httpUtil);\n\n    ServiceDTO serviceDTO = mock(ServiceDTO.class);\n    when(serviceDTO.getHomepageUrl()).thenReturn(someServerUrl);\n    when(configServiceLocator.getConfigServices()).thenReturn(Lists.newArrayList(serviceDTO));\n    MockInjector.setInstance(ConfigServiceLocator.class, configServiceLocator);\n\n    MockInjector.setInstance(ConfigUtil.class, new MockConfigUtil());\n\n    remoteConfigLongPollService = new RemoteConfigLongPollService();\n\n    responseType =\n        (Type) ReflectionTestUtils.getField(remoteConfigLongPollService, \"m_responseType\");\n\n    someServerUrl = \"http://someServer\";\n    someAppId = \"someAppId\";\n    someCluster = \"someCluster\";\n  }\n","realPath":"apollo-client/src/test/java/com/ctrip/framework/apollo/internals/RemoteConfigLongPollServiceTest.java","repoName":"apollo","snippetEndLine":0,"snippetStartLine":0,"startLine":60,"status":"M"}],"commitId":"32f5fc8ba8890e403ef94566eca711733982e717","commitMessage":"@@@Merge pull request #638 from nobodyiam/misc-change-merge\n\nmisc changes","date":"2017-06-12 10:16:19","modifiedFileCount":"7","status":"M","submitter":"??"},{"authorTime":"2017-06-12 10:16:19","codes":[{"authorDate":"2017-08-27 23:57:50","commitOrder":6,"curCode":"  public void setUp() throws Exception {\n    someNamespace = \"someName\";\n\n    when(pollResponse.getStatusCode()).thenReturn(HttpServletResponse.SC_NOT_MODIFIED);\n\n    MockInjector.reset();\n    configUtil = new MockConfigUtil();\n    MockInjector.setInstance(ConfigUtil.class, configUtil);\n\n    someServerUrl = \"http://someServer\";\n\n    ServiceDTO serviceDTO = mock(ServiceDTO.class);\n\n    when(serviceDTO.getHomepageUrl()).thenReturn(someServerUrl);\n    when(configServiceLocator.getConfigServices()).thenReturn(Lists.newArrayList(serviceDTO));\n    MockInjector.setInstance(ConfigServiceLocator.class, configServiceLocator);\n\n    httpUtil = spy(new MockHttpUtil());\n    MockInjector.setInstance(HttpUtil.class, httpUtil);\n\n    remoteConfigLongPollService = new RemoteConfigLongPollService();\n\n    MockInjector.setInstance(RemoteConfigLongPollService.class, remoteConfigLongPollService);\n  }\n","date":"2017-08-27 23:57:50","endLine":90,"groupId":"588","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"setUp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-apollo-10-0.7/blobInfo/CC_OUT/blobs/1c/42d8837ae2498556909f715c6eec193a43cbf2.src","preCode":"  public void setUp() throws Exception {\n    someNamespace = \"someName\";\n\n    when(pollResponse.getStatusCode()).thenReturn(HttpServletResponse.SC_NOT_MODIFIED);\n\n    MockInjector.reset();\n    MockInjector.setInstance(ConfigUtil.class, new MockConfigUtil());\n\n    String someServerUrl = \"http://someServer\";\n\n    ServiceDTO serviceDTO = mock(ServiceDTO.class);\n\n    when(serviceDTO.getHomepageUrl()).thenReturn(someServerUrl);\n    when(configServiceLocator.getConfigServices()).thenReturn(Lists.newArrayList(serviceDTO));\n    MockInjector.setInstance(ConfigServiceLocator.class, configServiceLocator);\n\n    MockInjector.setInstance(HttpUtil.class, new MockHttpUtil());\n\n    remoteConfigLongPollService = new RemoteConfigLongPollService();\n\n    MockInjector.setInstance(RemoteConfigLongPollService.class, remoteConfigLongPollService);\n  }\n","realPath":"apollo-client/src/test/java/com/ctrip/framework/apollo/internals/RemoteConfigRepositoryTest.java","repoName":"apollo","snippetEndLine":0,"snippetStartLine":0,"startLine":67,"status":"M"},{"authorDate":"2017-06-12 10:16:19","commitOrder":6,"curCode":"  public void setUp() throws Exception {\n    MockInjector.reset();\n\n    MockInjector.setInstance(HttpUtil.class, httpUtil);\n\n    someServerUrl = \"http://someServer\";\n    ServiceDTO serviceDTO = mock(ServiceDTO.class);\n    when(serviceDTO.getHomepageUrl()).thenReturn(someServerUrl);\n    when(configServiceLocator.getConfigServices()).thenReturn(Lists.newArrayList(serviceDTO));\n    MockInjector.setInstance(ConfigServiceLocator.class, configServiceLocator);\n\n    MockInjector.setInstance(ConfigUtil.class, new MockConfigUtil());\n\n    remoteConfigLongPollService = new RemoteConfigLongPollService();\n\n    responseType =\n        (Type) ReflectionTestUtils.getField(remoteConfigLongPollService, \"m_responseType\");\n\n    someAppId = \"someAppId\";\n    someCluster = \"someCluster\";\n  }\n","date":"2017-06-12 10:16:19","endLine":80,"groupId":"4","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"setUp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-apollo-10-0.7/blobInfo/CC_OUT/blobs/c8/6f79746328d5be066830092e0988112a935067.src","preCode":"  public void setUp() throws Exception {\n    MockInjector.reset();\n\n    MockInjector.setInstance(HttpUtil.class, httpUtil);\n\n    someServerUrl = \"http://someServer\";\n    ServiceDTO serviceDTO = mock(ServiceDTO.class);\n    when(serviceDTO.getHomepageUrl()).thenReturn(someServerUrl);\n    when(configServiceLocator.getConfigServices()).thenReturn(Lists.newArrayList(serviceDTO));\n    MockInjector.setInstance(ConfigServiceLocator.class, configServiceLocator);\n\n    MockInjector.setInstance(ConfigUtil.class, new MockConfigUtil());\n\n    remoteConfigLongPollService = new RemoteConfigLongPollService();\n\n    responseType =\n        (Type) ReflectionTestUtils.getField(remoteConfigLongPollService, \"m_responseType\");\n\n    someAppId = \"someAppId\";\n    someCluster = \"someCluster\";\n  }\n","realPath":"apollo-client/src/test/java/com/ctrip/framework/apollo/internals/RemoteConfigLongPollServiceTest.java","repoName":"apollo","snippetEndLine":0,"snippetStartLine":0,"startLine":60,"status":"N"}],"commitId":"2a8348286501413e5768f984cbfe45f2b9dbd5f1","commitMessage":"@@@Merge pull request #719 from nobodyiam/configservice-cache-merge\n\nConfig service cache and namespace name normalization","date":"2017-08-27 23:57:50","modifiedFileCount":"32","status":"M","submitter":"??"},{"authorTime":"2017-06-12 10:16:19","codes":[{"authorDate":"2019-12-30 15:20:26","commitOrder":7,"curCode":"  public void setUp() throws Exception {\n    someNamespace = \"someName\";\n\n    when(pollResponse.getStatusCode()).thenReturn(HttpServletResponse.SC_NOT_MODIFIED);\n\n    MockInjector.reset();\n    configUtil = new MockConfigUtil();\n    MockInjector.setInstance(ConfigUtil.class, configUtil);\n\n    someServerUrl = \"http://someServer\";\n\n    ServiceDTO serviceDTO = mock(ServiceDTO.class);\n\n    when(serviceDTO.getHomepageUrl()).thenReturn(someServerUrl);\n    when(configServiceLocator.getConfigServices()).thenReturn(Lists.newArrayList(serviceDTO));\n    MockInjector.setInstance(ConfigServiceLocator.class, configServiceLocator);\n\n    httpUtil = spy(new MockHttpUtil());\n    MockInjector.setInstance(HttpUtil.class, httpUtil);\n\n    remoteConfigLongPollService = new RemoteConfigLongPollService();\n\n    MockInjector.setInstance(RemoteConfigLongPollService.class, remoteConfigLongPollService);\n\n    someAppId = \"someAppId\";\n    someCluster = \"someCluster\";\n  }\n","date":"2020-01-01 20:05:48","endLine":97,"groupId":"588","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"setUp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-apollo-10-0.7/blobInfo/CC_OUT/blobs/0f/a0c1e375a300e2ba3ad2408b249df6ce90ad0f.src","preCode":"  public void setUp() throws Exception {\n    someNamespace = \"someName\";\n\n    when(pollResponse.getStatusCode()).thenReturn(HttpServletResponse.SC_NOT_MODIFIED);\n\n    MockInjector.reset();\n    configUtil = new MockConfigUtil();\n    MockInjector.setInstance(ConfigUtil.class, configUtil);\n\n    someServerUrl = \"http://someServer\";\n\n    ServiceDTO serviceDTO = mock(ServiceDTO.class);\n\n    when(serviceDTO.getHomepageUrl()).thenReturn(someServerUrl);\n    when(configServiceLocator.getConfigServices()).thenReturn(Lists.newArrayList(serviceDTO));\n    MockInjector.setInstance(ConfigServiceLocator.class, configServiceLocator);\n\n    httpUtil = spy(new MockHttpUtil());\n    MockInjector.setInstance(HttpUtil.class, httpUtil);\n\n    remoteConfigLongPollService = new RemoteConfigLongPollService();\n\n    MockInjector.setInstance(RemoteConfigLongPollService.class, remoteConfigLongPollService);\n  }\n","realPath":"apollo-client/src/test/java/com/ctrip/framework/apollo/internals/RemoteConfigRepositoryTest.java","repoName":"apollo","snippetEndLine":0,"snippetStartLine":0,"startLine":71,"status":"M"},{"authorDate":"2017-06-12 10:16:19","commitOrder":7,"curCode":"  public void setUp() throws Exception {\n    MockInjector.reset();\n\n    MockInjector.setInstance(HttpUtil.class, httpUtil);\n\n    someServerUrl = \"http://someServer\";\n    ServiceDTO serviceDTO = mock(ServiceDTO.class);\n    when(serviceDTO.getHomepageUrl()).thenReturn(someServerUrl);\n    when(configServiceLocator.getConfigServices()).thenReturn(Lists.newArrayList(serviceDTO));\n    MockInjector.setInstance(ConfigServiceLocator.class, configServiceLocator);\n\n    MockInjector.setInstance(ConfigUtil.class, new MockConfigUtil());\n\n    remoteConfigLongPollService = new RemoteConfigLongPollService();\n\n    responseType =\n        (Type) ReflectionTestUtils.getField(remoteConfigLongPollService, \"m_responseType\");\n\n    someAppId = \"someAppId\";\n    someCluster = \"someCluster\";\n  }\n","date":"2017-06-12 10:16:19","endLine":80,"groupId":"4","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"setUp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-apollo-10-0.7/blobInfo/CC_OUT/blobs/c8/6f79746328d5be066830092e0988112a935067.src","preCode":"  public void setUp() throws Exception {\n    MockInjector.reset();\n\n    MockInjector.setInstance(HttpUtil.class, httpUtil);\n\n    someServerUrl = \"http://someServer\";\n    ServiceDTO serviceDTO = mock(ServiceDTO.class);\n    when(serviceDTO.getHomepageUrl()).thenReturn(someServerUrl);\n    when(configServiceLocator.getConfigServices()).thenReturn(Lists.newArrayList(serviceDTO));\n    MockInjector.setInstance(ConfigServiceLocator.class, configServiceLocator);\n\n    MockInjector.setInstance(ConfigUtil.class, new MockConfigUtil());\n\n    remoteConfigLongPollService = new RemoteConfigLongPollService();\n\n    responseType =\n        (Type) ReflectionTestUtils.getField(remoteConfigLongPollService, \"m_responseType\");\n\n    someAppId = \"someAppId\";\n    someCluster = \"someCluster\";\n  }\n","realPath":"apollo-client/src/test/java/com/ctrip/framework/apollo/internals/RemoteConfigLongPollServiceTest.java","repoName":"apollo","snippetEndLine":0,"snippetStartLine":0,"startLine":60,"status":"N"}],"commitId":"32aac0bd066a0f9a38253646ad2a195ca7d2ff35","commitMessage":"@@@Add apollo-client Authentication function\n\n\n","date":"2020-01-01 20:05:48","modifiedFileCount":"16","status":"M","submitter":"nisiyong"},{"authorTime":"2017-06-12 10:16:19","codes":[{"authorDate":"2020-01-21 09:08:45","commitOrder":8,"curCode":"  public void setUp() throws Exception {\n    someNamespace = \"someName\";\n\n    when(pollResponse.getStatusCode()).thenReturn(HttpServletResponse.SC_NOT_MODIFIED);\n\n    MockInjector.reset();\n    configUtil = new MockConfigUtil();\n    MockInjector.setInstance(ConfigUtil.class, configUtil);\n\n    someServerUrl = \"http://someServer\";\n\n    ServiceDTO serviceDTO = mock(ServiceDTO.class);\n\n    when(serviceDTO.getHomepageUrl()).thenReturn(someServerUrl);\n    when(configServiceLocator.getConfigServices()).thenReturn(Lists.newArrayList(serviceDTO));\n    MockInjector.setInstance(ConfigServiceLocator.class, configServiceLocator);\n\n    httpUtil = spy(new MockHttpUtil());\n    MockInjector.setInstance(HttpUtil.class, httpUtil);\n\n    remoteConfigLongPollService = new RemoteConfigLongPollService();\n\n    MockInjector.setInstance(RemoteConfigLongPollService.class, remoteConfigLongPollService);\n\n    System.setProperty(PropertiesFactory.APOLLO_PROPERTY_ORDER_ENABLE, \"true\");\n    PropertiesFactory propertiesFactory = new DefaultPropertiesFactory();\n    MockInjector.setInstance(PropertiesFactory.class, propertiesFactory);\n\n    someAppId = \"someAppId\";\n    someCluster = \"someCluster\";\n  }\n","date":"2020-01-21 09:08:45","endLine":107,"groupId":"588","id":13,"instanceNumber":1,"isCurCommit":0,"methodName":"setUp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-apollo-10-0.7/blobInfo/CC_OUT/blobs/ee/1fb018458b6d17d24101a37f9159db68828a5b.src","preCode":"  public void setUp() throws Exception {\n    someNamespace = \"someName\";\n\n    when(pollResponse.getStatusCode()).thenReturn(HttpServletResponse.SC_NOT_MODIFIED);\n\n    MockInjector.reset();\n    configUtil = new MockConfigUtil();\n    MockInjector.setInstance(ConfigUtil.class, configUtil);\n\n    someServerUrl = \"http://someServer\";\n\n    ServiceDTO serviceDTO = mock(ServiceDTO.class);\n\n    when(serviceDTO.getHomepageUrl()).thenReturn(someServerUrl);\n    when(configServiceLocator.getConfigServices()).thenReturn(Lists.newArrayList(serviceDTO));\n    MockInjector.setInstance(ConfigServiceLocator.class, configServiceLocator);\n\n    httpUtil = spy(new MockHttpUtil());\n    MockInjector.setInstance(HttpUtil.class, httpUtil);\n\n    remoteConfigLongPollService = new RemoteConfigLongPollService();\n\n    MockInjector.setInstance(RemoteConfigLongPollService.class, remoteConfigLongPollService);\n\n    someAppId = \"someAppId\";\n    someCluster = \"someCluster\";\n  }\n","realPath":"apollo-client/src/test/java/com/ctrip/framework/apollo/internals/RemoteConfigRepositoryTest.java","repoName":"apollo","snippetEndLine":0,"snippetStartLine":0,"startLine":77,"status":"M"},{"authorDate":"2017-06-12 10:16:19","commitOrder":8,"curCode":"  public void setUp() throws Exception {\n    MockInjector.reset();\n\n    MockInjector.setInstance(HttpUtil.class, httpUtil);\n\n    someServerUrl = \"http://someServer\";\n    ServiceDTO serviceDTO = mock(ServiceDTO.class);\n    when(serviceDTO.getHomepageUrl()).thenReturn(someServerUrl);\n    when(configServiceLocator.getConfigServices()).thenReturn(Lists.newArrayList(serviceDTO));\n    MockInjector.setInstance(ConfigServiceLocator.class, configServiceLocator);\n\n    MockInjector.setInstance(ConfigUtil.class, new MockConfigUtil());\n\n    remoteConfigLongPollService = new RemoteConfigLongPollService();\n\n    responseType =\n        (Type) ReflectionTestUtils.getField(remoteConfigLongPollService, \"m_responseType\");\n\n    someAppId = \"someAppId\";\n    someCluster = \"someCluster\";\n  }\n","date":"2017-06-12 10:16:19","endLine":80,"groupId":"4","id":14,"instanceNumber":2,"isCurCommit":0,"methodName":"setUp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-apollo-10-0.7/blobInfo/CC_OUT/blobs/c8/6f79746328d5be066830092e0988112a935067.src","preCode":"  public void setUp() throws Exception {\n    MockInjector.reset();\n\n    MockInjector.setInstance(HttpUtil.class, httpUtil);\n\n    someServerUrl = \"http://someServer\";\n    ServiceDTO serviceDTO = mock(ServiceDTO.class);\n    when(serviceDTO.getHomepageUrl()).thenReturn(someServerUrl);\n    when(configServiceLocator.getConfigServices()).thenReturn(Lists.newArrayList(serviceDTO));\n    MockInjector.setInstance(ConfigServiceLocator.class, configServiceLocator);\n\n    MockInjector.setInstance(ConfigUtil.class, new MockConfigUtil());\n\n    remoteConfigLongPollService = new RemoteConfigLongPollService();\n\n    responseType =\n        (Type) ReflectionTestUtils.getField(remoteConfigLongPollService, \"m_responseType\");\n\n    someAppId = \"someAppId\";\n    someCluster = \"someCluster\";\n  }\n","realPath":"apollo-client/src/test/java/com/ctrip/framework/apollo/internals/RemoteConfigLongPollServiceTest.java","repoName":"apollo","snippetEndLine":0,"snippetStartLine":0,"startLine":60,"status":"N"}],"commitId":"82790e5f4a38ed4c2534545686b641f224f0887a","commitMessage":"@@@Add OrderedProperties to keep the property order in apollo-client\n\n","date":"2020-01-21 09:08:45","modifiedFileCount":"22","status":"M","submitter":"songdragon"},{"authorTime":"2017-06-12 10:16:19","codes":[{"authorDate":"2020-01-21 08:22:12","commitOrder":9,"curCode":"  public void setUp() throws Exception {\n    someNamespace = \"someName\";\n\n    when(pollResponse.getStatusCode()).thenReturn(HttpServletResponse.SC_NOT_MODIFIED);\n\n    MockInjector.reset();\n    configUtil = new MockConfigUtil();\n    MockInjector.setInstance(ConfigUtil.class, configUtil);\n\n    someServerUrl = \"http://someServer\";\n\n    ServiceDTO serviceDTO = mock(ServiceDTO.class);\n\n    when(serviceDTO.getHomepageUrl()).thenReturn(someServerUrl);\n    when(configServiceLocator.getConfigServices()).thenReturn(Lists.newArrayList(serviceDTO));\n    MockInjector.setInstance(ConfigServiceLocator.class, configServiceLocator);\n\n    httpUtil = spy(new MockHttpUtil());\n    MockInjector.setInstance(HttpUtil.class, httpUtil);\n\n    remoteConfigLongPollService = new RemoteConfigLongPollService();\n\n    MockInjector.setInstance(RemoteConfigLongPollService.class, remoteConfigLongPollService);\n\n    when(propertiesFactory.getPropertiesInstance()).thenAnswer(new Answer<Properties>() {\n      @Override\n      public Properties answer(InvocationOnMock invocation) {\n        return new Properties();\n      }\n    });\n    MockInjector.setInstance(PropertiesFactory.class, propertiesFactory);\n\n    someAppId = \"someAppId\";\n    someCluster = \"someCluster\";\n  }\n","date":"2020-01-21 20:16:07","endLine":111,"groupId":"588","id":15,"instanceNumber":1,"isCurCommit":0,"methodName":"setUp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-apollo-10-0.7/blobInfo/CC_OUT/blobs/94/e9e4bea9e4e2457134334077aeec47f3c5ee62.src","preCode":"  public void setUp() throws Exception {\n    someNamespace = \"someName\";\n\n    when(pollResponse.getStatusCode()).thenReturn(HttpServletResponse.SC_NOT_MODIFIED);\n\n    MockInjector.reset();\n    configUtil = new MockConfigUtil();\n    MockInjector.setInstance(ConfigUtil.class, configUtil);\n\n    someServerUrl = \"http://someServer\";\n\n    ServiceDTO serviceDTO = mock(ServiceDTO.class);\n\n    when(serviceDTO.getHomepageUrl()).thenReturn(someServerUrl);\n    when(configServiceLocator.getConfigServices()).thenReturn(Lists.newArrayList(serviceDTO));\n    MockInjector.setInstance(ConfigServiceLocator.class, configServiceLocator);\n\n    httpUtil = spy(new MockHttpUtil());\n    MockInjector.setInstance(HttpUtil.class, httpUtil);\n\n    remoteConfigLongPollService = new RemoteConfigLongPollService();\n\n    MockInjector.setInstance(RemoteConfigLongPollService.class, remoteConfigLongPollService);\n\n    System.setProperty(PropertiesFactory.APOLLO_PROPERTY_ORDER_ENABLE, \"true\");\n    PropertiesFactory propertiesFactory = new DefaultPropertiesFactory();\n    MockInjector.setInstance(PropertiesFactory.class, propertiesFactory);\n\n    someAppId = \"someAppId\";\n    someCluster = \"someCluster\";\n  }\n","realPath":"apollo-client/src/test/java/com/ctrip/framework/apollo/internals/RemoteConfigRepositoryTest.java","repoName":"apollo","snippetEndLine":0,"snippetStartLine":0,"startLine":77,"status":"M"},{"authorDate":"2017-06-12 10:16:19","commitOrder":9,"curCode":"  public void setUp() throws Exception {\n    MockInjector.reset();\n\n    MockInjector.setInstance(HttpUtil.class, httpUtil);\n\n    someServerUrl = \"http://someServer\";\n    ServiceDTO serviceDTO = mock(ServiceDTO.class);\n    when(serviceDTO.getHomepageUrl()).thenReturn(someServerUrl);\n    when(configServiceLocator.getConfigServices()).thenReturn(Lists.newArrayList(serviceDTO));\n    MockInjector.setInstance(ConfigServiceLocator.class, configServiceLocator);\n\n    MockInjector.setInstance(ConfigUtil.class, new MockConfigUtil());\n\n    remoteConfigLongPollService = new RemoteConfigLongPollService();\n\n    responseType =\n        (Type) ReflectionTestUtils.getField(remoteConfigLongPollService, \"m_responseType\");\n\n    someAppId = \"someAppId\";\n    someCluster = \"someCluster\";\n  }\n","date":"2017-06-12 10:16:19","endLine":80,"groupId":"4","id":16,"instanceNumber":2,"isCurCommit":0,"methodName":"setUp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-apollo-10-0.7/blobInfo/CC_OUT/blobs/c8/6f79746328d5be066830092e0988112a935067.src","preCode":"  public void setUp() throws Exception {\n    MockInjector.reset();\n\n    MockInjector.setInstance(HttpUtil.class, httpUtil);\n\n    someServerUrl = \"http://someServer\";\n    ServiceDTO serviceDTO = mock(ServiceDTO.class);\n    when(serviceDTO.getHomepageUrl()).thenReturn(someServerUrl);\n    when(configServiceLocator.getConfigServices()).thenReturn(Lists.newArrayList(serviceDTO));\n    MockInjector.setInstance(ConfigServiceLocator.class, configServiceLocator);\n\n    MockInjector.setInstance(ConfigUtil.class, new MockConfigUtil());\n\n    remoteConfigLongPollService = new RemoteConfigLongPollService();\n\n    responseType =\n        (Type) ReflectionTestUtils.getField(remoteConfigLongPollService, \"m_responseType\");\n\n    someAppId = \"someAppId\";\n    someCluster = \"someCluster\";\n  }\n","realPath":"apollo-client/src/test/java/com/ctrip/framework/apollo/internals/RemoteConfigLongPollServiceTest.java","repoName":"apollo","snippetEndLine":0,"snippetStartLine":0,"startLine":60,"status":"N"}],"commitId":"5fe54966f5f50e5f5e1c3b2e0f0d82b1d92f014d","commitMessage":"@@@use linked hash map to keep server side config order and do some refactoring to apollo-client\n","date":"2020-01-21 20:16:07","modifiedFileCount":"18","status":"M","submitter":"Jason Song"},{"authorTime":"2020-06-21 12:42:33","codes":[{"authorDate":"2020-06-21 12:42:33","commitOrder":10,"curCode":"  public void setUp() throws Exception {\n    someNamespace = \"someName\";\n\n    when(pollResponse.getStatusCode()).thenReturn(HttpServletResponse.SC_NOT_MODIFIED);\n\n    configUtil = new MockConfigUtil();\n    MockInjector.setInstance(ConfigUtil.class, configUtil);\n\n    someServerUrl = \"http://someServer\";\n\n    ServiceDTO serviceDTO = mock(ServiceDTO.class);\n\n    when(serviceDTO.getHomepageUrl()).thenReturn(someServerUrl);\n    when(configServiceLocator.getConfigServices()).thenReturn(Lists.newArrayList(serviceDTO));\n    MockInjector.setInstance(ConfigServiceLocator.class, configServiceLocator);\n\n    httpUtil = spy(new MockHttpUtil());\n    MockInjector.setInstance(HttpUtil.class, httpUtil);\n\n    remoteConfigLongPollService = new RemoteConfigLongPollService();\n\n    MockInjector.setInstance(RemoteConfigLongPollService.class, remoteConfigLongPollService);\n\n    when(propertiesFactory.getPropertiesInstance()).thenAnswer(new Answer<Properties>() {\n      @Override\n      public Properties answer(InvocationOnMock invocation) {\n        return new Properties();\n      }\n    });\n    MockInjector.setInstance(PropertiesFactory.class, propertiesFactory);\n\n    someAppId = \"someAppId\";\n    someCluster = \"someCluster\";\n  }\n","date":"2020-06-21 14:13:02","endLine":112,"groupId":"588","id":17,"instanceNumber":1,"isCurCommit":0,"methodName":"setUp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-apollo-10-0.7/blobInfo/CC_OUT/blobs/da/f0ccaca593329d0af36fe0ddd3a7618c199c97.src","preCode":"  public void setUp() throws Exception {\n    someNamespace = \"someName\";\n\n    when(pollResponse.getStatusCode()).thenReturn(HttpServletResponse.SC_NOT_MODIFIED);\n\n    MockInjector.reset();\n    configUtil = new MockConfigUtil();\n    MockInjector.setInstance(ConfigUtil.class, configUtil);\n\n    someServerUrl = \"http://someServer\";\n\n    ServiceDTO serviceDTO = mock(ServiceDTO.class);\n\n    when(serviceDTO.getHomepageUrl()).thenReturn(someServerUrl);\n    when(configServiceLocator.getConfigServices()).thenReturn(Lists.newArrayList(serviceDTO));\n    MockInjector.setInstance(ConfigServiceLocator.class, configServiceLocator);\n\n    httpUtil = spy(new MockHttpUtil());\n    MockInjector.setInstance(HttpUtil.class, httpUtil);\n\n    remoteConfigLongPollService = new RemoteConfigLongPollService();\n\n    MockInjector.setInstance(RemoteConfigLongPollService.class, remoteConfigLongPollService);\n\n    when(propertiesFactory.getPropertiesInstance()).thenAnswer(new Answer<Properties>() {\n      @Override\n      public Properties answer(InvocationOnMock invocation) {\n        return new Properties();\n      }\n    });\n    MockInjector.setInstance(PropertiesFactory.class, propertiesFactory);\n\n    someAppId = \"someAppId\";\n    someCluster = \"someCluster\";\n  }\n","realPath":"apollo-client/src/test/java/com/ctrip/framework/apollo/internals/RemoteConfigRepositoryTest.java","repoName":"apollo","snippetEndLine":0,"snippetStartLine":0,"startLine":79,"status":"M"},{"authorDate":"2020-06-21 12:42:33","commitOrder":10,"curCode":"  public void setUp() throws Exception {\n    MockInjector.setInstance(HttpUtil.class, httpUtil);\n\n    someServerUrl = \"http://someServer\";\n    ServiceDTO serviceDTO = mock(ServiceDTO.class);\n    when(serviceDTO.getHomepageUrl()).thenReturn(someServerUrl);\n    when(configServiceLocator.getConfigServices()).thenReturn(Lists.newArrayList(serviceDTO));\n    MockInjector.setInstance(ConfigServiceLocator.class, configServiceLocator);\n\n    MockInjector.setInstance(ConfigUtil.class, new MockConfigUtil());\n\n    remoteConfigLongPollService = new RemoteConfigLongPollService();\n\n    responseType =\n        (Type) ReflectionTestUtils.getField(remoteConfigLongPollService, \"m_responseType\");\n\n    someAppId = \"someAppId\";\n    someCluster = \"someCluster\";\n  }\n","date":"2020-06-21 14:13:02","endLine":82,"groupId":"4","id":18,"instanceNumber":2,"isCurCommit":0,"methodName":"setUp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-apollo-10-0.7/blobInfo/CC_OUT/blobs/d4/af113c192d4f8de4bef3fda6c5b3e0c0ec231d.src","preCode":"  public void setUp() throws Exception {\n    MockInjector.reset();\n\n    MockInjector.setInstance(HttpUtil.class, httpUtil);\n\n    someServerUrl = \"http://someServer\";\n    ServiceDTO serviceDTO = mock(ServiceDTO.class);\n    when(serviceDTO.getHomepageUrl()).thenReturn(someServerUrl);\n    when(configServiceLocator.getConfigServices()).thenReturn(Lists.newArrayList(serviceDTO));\n    MockInjector.setInstance(ConfigServiceLocator.class, configServiceLocator);\n\n    MockInjector.setInstance(ConfigUtil.class, new MockConfigUtil());\n\n    remoteConfigLongPollService = new RemoteConfigLongPollService();\n\n    responseType =\n        (Type) ReflectionTestUtils.getField(remoteConfigLongPollService, \"m_responseType\");\n\n    someAppId = \"someAppId\";\n    someCluster = \"someCluster\";\n  }\n","realPath":"apollo-client/src/test/java/com/ctrip/framework/apollo/internals/RemoteConfigLongPollServiceTest.java","repoName":"apollo","snippetEndLine":0,"snippetStartLine":0,"startLine":64,"status":"M"}],"commitId":"4c2c12b7c8c209b3f12eda7b9f3b7d659523a901","commitMessage":"@@@reset mock inject in tear down phase to make sure the context is clean\n","date":"2020-06-21 14:13:02","modifiedFileCount":"17","status":"M","submitter":"Jason Song"},{"authorTime":"2021-03-16 08:20:13","codes":[{"authorDate":"2021-03-16 08:20:13","commitOrder":11,"curCode":"  public void setUp() throws Exception {\n    someNamespace = \"someName\";\n\n    when(pollResponse.getStatusCode()).thenReturn(HttpServletResponse.SC_NOT_MODIFIED);\n\n    configUtil = new MockConfigUtil();\n    MockInjector.setInstance(ConfigUtil.class, configUtil);\n\n    someServerUrl = \"http://someServer\";\n\n    ServiceDTO serviceDTO = mock(ServiceDTO.class);\n\n    when(serviceDTO.getHomepageUrl()).thenReturn(someServerUrl);\n    when(configServiceLocator.getConfigServices()).thenReturn(Lists.newArrayList(serviceDTO));\n    MockInjector.setInstance(ConfigServiceLocator.class, configServiceLocator);\n\n    httpClient = spy(new MockHttpClient());\n    MockInjector.setInstance(HttpClient.class, httpClient);\n\n    remoteConfigLongPollService = new RemoteConfigLongPollService();\n\n    MockInjector.setInstance(RemoteConfigLongPollService.class, remoteConfigLongPollService);\n\n    when(propertiesFactory.getPropertiesInstance()).thenAnswer(new Answer<Properties>() {\n      @Override\n      public Properties answer(InvocationOnMock invocation) {\n        return new Properties();\n      }\n    });\n    MockInjector.setInstance(PropertiesFactory.class, propertiesFactory);\n\n    someAppId = \"someAppId\";\n    someCluster = \"someCluster\";\n  }\n","date":"2021-03-16 08:20:13","endLine":113,"groupId":"10214","id":19,"instanceNumber":1,"isCurCommit":0,"methodName":"setUp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-apollo-10-0.7/blobInfo/CC_OUT/blobs/2e/46cb4c8710a040e2e38d76872b4170a6fdc4c0.src","preCode":"  public void setUp() throws Exception {\n    someNamespace = \"someName\";\n\n    when(pollResponse.getStatusCode()).thenReturn(HttpServletResponse.SC_NOT_MODIFIED);\n\n    configUtil = new MockConfigUtil();\n    MockInjector.setInstance(ConfigUtil.class, configUtil);\n\n    someServerUrl = \"http://someServer\";\n\n    ServiceDTO serviceDTO = mock(ServiceDTO.class);\n\n    when(serviceDTO.getHomepageUrl()).thenReturn(someServerUrl);\n    when(configServiceLocator.getConfigServices()).thenReturn(Lists.newArrayList(serviceDTO));\n    MockInjector.setInstance(ConfigServiceLocator.class, configServiceLocator);\n\n    httpUtil = spy(new MockHttpUtil());\n    MockInjector.setInstance(HttpUtil.class, httpUtil);\n\n    remoteConfigLongPollService = new RemoteConfigLongPollService();\n\n    MockInjector.setInstance(RemoteConfigLongPollService.class, remoteConfigLongPollService);\n\n    when(propertiesFactory.getPropertiesInstance()).thenAnswer(new Answer<Properties>() {\n      @Override\n      public Properties answer(InvocationOnMock invocation) {\n        return new Properties();\n      }\n    });\n    MockInjector.setInstance(PropertiesFactory.class, propertiesFactory);\n\n    someAppId = \"someAppId\";\n    someCluster = \"someCluster\";\n  }\n","realPath":"apollo-client/src/test/java/com/ctrip/framework/apollo/internals/RemoteConfigRepositoryTest.java","repoName":"apollo","snippetEndLine":0,"snippetStartLine":0,"startLine":80,"status":"M"},{"authorDate":"2021-03-16 08:20:13","commitOrder":11,"curCode":"  public void setUp() throws Exception {\n    MockInjector.setInstance(HttpClient.class, httpClient);\n\n    someServerUrl = \"http://someServer\";\n    ServiceDTO serviceDTO = mock(ServiceDTO.class);\n    when(serviceDTO.getHomepageUrl()).thenReturn(someServerUrl);\n    when(configServiceLocator.getConfigServices()).thenReturn(Lists.newArrayList(serviceDTO));\n    MockInjector.setInstance(ConfigServiceLocator.class, configServiceLocator);\n\n    MockInjector.setInstance(ConfigUtil.class, new MockConfigUtil());\n\n    remoteConfigLongPollService = new RemoteConfigLongPollService();\n\n    responseType =\n        (Type) ReflectionTestUtils.getField(remoteConfigLongPollService, \"m_responseType\");\n\n    someAppId = \"someAppId\";\n    someCluster = \"someCluster\";\n  }\n","date":"2021-03-16 08:20:13","endLine":83,"groupId":"10214","id":20,"instanceNumber":2,"isCurCommit":0,"methodName":"setUp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-apollo-10-0.7/blobInfo/CC_OUT/blobs/54/85d65d304b573a0ffda9fd835d513c92eb5f5e.src","preCode":"  public void setUp() throws Exception {\n    MockInjector.setInstance(HttpUtil.class, httpUtil);\n\n    someServerUrl = \"http://someServer\";\n    ServiceDTO serviceDTO = mock(ServiceDTO.class);\n    when(serviceDTO.getHomepageUrl()).thenReturn(someServerUrl);\n    when(configServiceLocator.getConfigServices()).thenReturn(Lists.newArrayList(serviceDTO));\n    MockInjector.setInstance(ConfigServiceLocator.class, configServiceLocator);\n\n    MockInjector.setInstance(ConfigUtil.class, new MockConfigUtil());\n\n    remoteConfigLongPollService = new RemoteConfigLongPollService();\n\n    responseType =\n        (Type) ReflectionTestUtils.getField(remoteConfigLongPollService, \"m_responseType\");\n\n    someAppId = \"someAppId\";\n    someCluster = \"someCluster\";\n  }\n","realPath":"apollo-client/src/test/java/com/ctrip/framework/apollo/internals/RemoteConfigLongPollServiceTest.java","repoName":"apollo","snippetEndLine":0,"snippetStartLine":0,"startLine":65,"status":"M"}],"commitId":"9f3d315e7e115220f6bbb836a1a8cfb4f4619d2f","commitMessage":"@@@replace http client implementation with interface (#3594)\n\n","date":"2021-03-16 08:20:13","modifiedFileCount":"7","status":"M","submitter":"vdisk-group"}]
