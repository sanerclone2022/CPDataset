[{"authorTime":"2016-11-22 15:47:36","codes":[{"authorDate":"2019-12-28 16:07:49","commitOrder":3,"curCode":"  public NamespaceDTO get(@PathVariable(\"appId\") String appId,\n                          @PathVariable(\"clusterName\") String clusterName,\n                          @PathVariable(\"namespaceName\") String namespaceName) {\n    Namespace namespace = namespaceService.findOne(appId, clusterName, namespaceName);\n    if (namespace == null) {\n        throw new NotFoundException(\n                String.format(\"namespace not found for %s %s %s\", appId, clusterName, namespaceName));\n    }\n    return BeanUtils.transform(NamespaceDTO.class, namespace);\n  }\n","date":"2019-12-28 16:07:49","endLine":84,"groupId":"1175","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"get","params":"(@PathVariable(\"appId\")StringappId@@PathVariable(\"clusterName\")StringclusterName@@PathVariable(\"namespaceName\")StringnamespaceName)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-apollo-10-0.7/blobInfo/CC_OUT/blobs/f3/ae55fe6d515ad320c096a9f82998e00d947a7e.src","preCode":"  public NamespaceDTO get(@PathVariable(\"appId\") String appId,\n                          @PathVariable(\"clusterName\") String clusterName,\n                          @PathVariable(\"namespaceName\") String namespaceName) {\n    Namespace namespace = namespaceService.findOne(appId, clusterName, namespaceName);\n    if (namespace == null) {\n        throw new NotFoundException(\n                String.format(\"namespace not found for %s %s %s\", appId, clusterName, namespaceName));\n    }\n    return BeanUtils.transform(NamespaceDTO.class, namespace);\n  }\n","realPath":"apollo-adminservice/src/main/java/com/ctrip/framework/apollo/adminservice/controller/NamespaceController.java","repoName":"apollo","snippetEndLine":0,"snippetStartLine":0,"startLine":75,"status":"B"},{"authorDate":"2016-11-22 15:47:36","commitOrder":3,"curCode":"  public Item findOne(String appId, String clusterName, String namespaceName, String key) {\n    Namespace namespace = namespaceService.findOne(appId, clusterName, namespaceName);\n    if (namespace == null) {\n      throw new NotFoundException(\n          String.format(\"namespace not found for %s %s %s\", appId, clusterName, namespaceName));\n    }\n    Item item = itemRepository.findByNamespaceIdAndKey(namespace.getId(), key);\n    return item;\n  }\n","date":"2016-11-22 15:47:36","endLine":63,"groupId":"1175","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"findOne","params":"(StringappId@StringclusterName@StringnamespaceName@Stringkey)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-apollo-10-0.7/blobInfo/CC_OUT/blobs/d0/a2d71ef47c13b507de9b6b8309ea528bcfb0ae.src","preCode":"  public Item findOne(String appId, String clusterName, String namespaceName, String key) {\n    Namespace namespace = namespaceService.findOne(appId, clusterName, namespaceName);\n    if (namespace == null) {\n      throw new NotFoundException(\n          String.format(\"namespace not found for %s %s %s\", appId, clusterName, namespaceName));\n    }\n    Item item = itemRepository.findByNamespaceIdAndKey(namespace.getId(), key);\n    return item;\n  }\n","realPath":"apollo-biz/src/main/java/com/ctrip/framework/apollo/biz/service/ItemService.java","repoName":"apollo","snippetEndLine":0,"snippetStartLine":0,"startLine":55,"status":"NB"}],"commitId":"8cb5b3aa14e16b0d3d28c0e456c9042141ca9787","commitMessage":"@@@[Style] Add curly braces after `if` statements\n\n","date":"2019-12-28 16:07:49","modifiedFileCount":"4","status":"M","submitter":"Lei Jiang"},{"authorTime":"2020-08-22 16:05:14","codes":[{"authorDate":"2019-12-28 16:07:49","commitOrder":4,"curCode":"  public NamespaceDTO get(@PathVariable(\"appId\") String appId,\n                          @PathVariable(\"clusterName\") String clusterName,\n                          @PathVariable(\"namespaceName\") String namespaceName) {\n    Namespace namespace = namespaceService.findOne(appId, clusterName, namespaceName);\n    if (namespace == null) {\n        throw new NotFoundException(\n                String.format(\"namespace not found for %s %s %s\", appId, clusterName, namespaceName));\n    }\n    return BeanUtils.transform(NamespaceDTO.class, namespace);\n  }\n","date":"2019-12-28 16:07:49","endLine":84,"groupId":"1037","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"get","params":"(@PathVariable(\"appId\")StringappId@@PathVariable(\"clusterName\")StringclusterName@@PathVariable(\"namespaceName\")StringnamespaceName)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-apollo-10-0.7/blobInfo/CC_OUT/blobs/f3/ae55fe6d515ad320c096a9f82998e00d947a7e.src","preCode":"  public NamespaceDTO get(@PathVariable(\"appId\") String appId,\n                          @PathVariable(\"clusterName\") String clusterName,\n                          @PathVariable(\"namespaceName\") String namespaceName) {\n    Namespace namespace = namespaceService.findOne(appId, clusterName, namespaceName);\n    if (namespace == null) {\n        throw new NotFoundException(\n                String.format(\"namespace not found for %s %s %s\", appId, clusterName, namespaceName));\n    }\n    return BeanUtils.transform(NamespaceDTO.class, namespace);\n  }\n","realPath":"apollo-adminservice/src/main/java/com/ctrip/framework/apollo/adminservice/controller/NamespaceController.java","repoName":"apollo","snippetEndLine":0,"snippetStartLine":0,"startLine":75,"status":"N"},{"authorDate":"2020-08-22 16:05:14","commitOrder":4,"curCode":"  public Item findOne(String appId, String clusterName, String namespaceName, String key) {\n    Namespace namespace = namespaceService.findOne(appId, clusterName, namespaceName);\n    if (namespace == null) {\n      throw new NotFoundException(\n          String.format(\"namespace not found for %s %s %s\", appId, clusterName, namespaceName));\n    }\n    return itemRepository.findByNamespaceIdAndKey(namespace.getId(), key);\n  }\n","date":"2020-08-22 16:05:14","endLine":70,"groupId":"1037","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"findOne","params":"(StringappId@StringclusterName@StringnamespaceName@Stringkey)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-apollo-10-0.7/blobInfo/CC_OUT/blobs/97/a4a3b313b8d37e94965c50639850bca3046442.src","preCode":"  public Item findOne(String appId, String clusterName, String namespaceName, String key) {\n    Namespace namespace = namespaceService.findOne(appId, clusterName, namespaceName);\n    if (namespace == null) {\n      throw new NotFoundException(\n          String.format(\"namespace not found for %s %s %s\", appId, clusterName, namespaceName));\n    }\n    Item item = itemRepository.findByNamespaceIdAndKey(namespace.getId(), key);\n    return item;\n  }\n","realPath":"apollo-biz/src/main/java/com/ctrip/framework/apollo/biz/service/ItemService.java","repoName":"apollo","snippetEndLine":0,"snippetStartLine":0,"startLine":63,"status":"M"}],"commitId":"077b1762845af5842d1af6d18cf117c273f483bf","commitMessage":"@@@polish some code (#3249)\n\n","date":"2020-08-22 16:05:14","modifiedFileCount":"34","status":"M","submitter":"Jared Tan"}]
