[{"authorTime":"2018-09-24 15:19:33","codes":[{"authorDate":"2018-09-24 15:19:33","commitOrder":1,"curCode":"  public void updateItem(String appId, String env, String clusterName, String namespaceName, OpenItemDTO itemDTO) {\n    if (Strings.isNullOrEmpty(clusterName)) {\n      clusterName = ConfigConsts.CLUSTER_NAME_DEFAULT;\n    }\n    if (Strings.isNullOrEmpty(namespaceName)) {\n      namespaceName = ConfigConsts.NAMESPACE_APPLICATION;\n    }\n\n    checkNotEmpty(appId, \"App id\");\n    checkNotEmpty(env, \"Env\");\n    checkNotEmpty(itemDTO.getKey(), \"Item key\");\n    checkNotEmpty(itemDTO.getValue(), \"Item value\");\n    checkNotEmpty(itemDTO.getDataChangeLastModifiedBy(), \"Item modified by\");\n\n    String path = String.format(\"envs/%s/apps/%s/clusters/%s/namespaces/%s/items/%s\",\n        escapePath(env), escapePath(appId), escapePath(clusterName), escapePath(namespaceName),\n        escapePath(itemDTO.getKey()));\n\n    try (CloseableHttpResponse ignored = put(path, itemDTO)) {\n    } catch (Throwable ex) {\n      throw new RuntimeException(String\n          .format(\"Update item: %s for appId: %s, cluster: %s, namespace: %s in env: %s failed\", itemDTO.getKey(),\n              appId, clusterName, namespaceName, env), ex);\n    }\n  }\n","date":"2018-09-24 15:19:33","endLine":67,"groupId":"1476","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"updateItem","params":"(StringappId@Stringenv@StringclusterName@StringnamespaceName@OpenItemDTOitemDTO)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-apollo-10-0.7/blobInfo/CC_OUT/blobs/dd/81c5bd428bad65e66de1538aae5138d5724203.src","preCode":"  public void updateItem(String appId, String env, String clusterName, String namespaceName, OpenItemDTO itemDTO) {\n    if (Strings.isNullOrEmpty(clusterName)) {\n      clusterName = ConfigConsts.CLUSTER_NAME_DEFAULT;\n    }\n    if (Strings.isNullOrEmpty(namespaceName)) {\n      namespaceName = ConfigConsts.NAMESPACE_APPLICATION;\n    }\n\n    checkNotEmpty(appId, \"App id\");\n    checkNotEmpty(env, \"Env\");\n    checkNotEmpty(itemDTO.getKey(), \"Item key\");\n    checkNotEmpty(itemDTO.getValue(), \"Item value\");\n    checkNotEmpty(itemDTO.getDataChangeLastModifiedBy(), \"Item modified by\");\n\n    String path = String.format(\"envs/%s/apps/%s/clusters/%s/namespaces/%s/items/%s\",\n        escapePath(env), escapePath(appId), escapePath(clusterName), escapePath(namespaceName),\n        escapePath(itemDTO.getKey()));\n\n    try (CloseableHttpResponse ignored = put(path, itemDTO)) {\n    } catch (Throwable ex) {\n      throw new RuntimeException(String\n          .format(\"Update item: %s for appId: %s, cluster: %s, namespace: %s in env: %s failed\", itemDTO.getKey(),\n              appId, clusterName, namespaceName, env), ex);\n    }\n  }\n","realPath":"apollo-openapi/src/main/java/com/ctrip/framework/apollo/openapi/client/service/ItemOpenApiService.java","repoName":"apollo","snippetEndLine":0,"snippetStartLine":0,"startLine":43,"status":"B"},{"authorDate":"2018-09-24 15:19:33","commitOrder":1,"curCode":"  public void createOrUpdateItem(String appId, String env, String clusterName, String namespaceName, OpenItemDTO itemDTO) {\n    if (Strings.isNullOrEmpty(clusterName)) {\n      clusterName = ConfigConsts.CLUSTER_NAME_DEFAULT;\n    }\n    if (Strings.isNullOrEmpty(namespaceName)) {\n      namespaceName = ConfigConsts.NAMESPACE_APPLICATION;\n    }\n\n    checkNotEmpty(appId, \"App id\");\n    checkNotEmpty(env, \"Env\");\n    checkNotEmpty(itemDTO.getKey(), \"Item key\");\n    checkNotEmpty(itemDTO.getValue(), \"Item value\");\n    checkNotEmpty(itemDTO.getDataChangeCreatedBy(), \"Item created by\");\n\n    if (Strings.isNullOrEmpty(itemDTO.getDataChangeLastModifiedBy())) {\n      itemDTO.setDataChangeLastModifiedBy(itemDTO.getDataChangeCreatedBy());\n    }\n\n    String path = String.format(\"envs/%s/apps/%s/clusters/%s/namespaces/%s/items/%s?createIfNotExists=true\",\n        escapePath(env), escapePath(appId), escapePath(clusterName), escapePath(namespaceName),\n        escapePath(itemDTO.getKey()));\n\n    try (CloseableHttpResponse ignored = put(path, itemDTO)) {\n    } catch (Throwable ex) {\n      throw new RuntimeException(String\n          .format(\"CreateOrUpdate item: %s for appId: %s, cluster: %s, namespace: %s in env: %s failed\", itemDTO.getKey(),\n              appId, clusterName, namespaceName, env), ex);\n    }\n  }\n","date":"2018-09-24 15:19:33","endLine":97,"groupId":"1477","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"createOrUpdateItem","params":"(StringappId@Stringenv@StringclusterName@StringnamespaceName@OpenItemDTOitemDTO)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-apollo-10-0.7/blobInfo/CC_OUT/blobs/dd/81c5bd428bad65e66de1538aae5138d5724203.src","preCode":"  public void createOrUpdateItem(String appId, String env, String clusterName, String namespaceName, OpenItemDTO itemDTO) {\n    if (Strings.isNullOrEmpty(clusterName)) {\n      clusterName = ConfigConsts.CLUSTER_NAME_DEFAULT;\n    }\n    if (Strings.isNullOrEmpty(namespaceName)) {\n      namespaceName = ConfigConsts.NAMESPACE_APPLICATION;\n    }\n\n    checkNotEmpty(appId, \"App id\");\n    checkNotEmpty(env, \"Env\");\n    checkNotEmpty(itemDTO.getKey(), \"Item key\");\n    checkNotEmpty(itemDTO.getValue(), \"Item value\");\n    checkNotEmpty(itemDTO.getDataChangeCreatedBy(), \"Item created by\");\n\n    if (Strings.isNullOrEmpty(itemDTO.getDataChangeLastModifiedBy())) {\n      itemDTO.setDataChangeLastModifiedBy(itemDTO.getDataChangeCreatedBy());\n    }\n\n    String path = String.format(\"envs/%s/apps/%s/clusters/%s/namespaces/%s/items/%s?createIfNotExists=true\",\n        escapePath(env), escapePath(appId), escapePath(clusterName), escapePath(namespaceName),\n        escapePath(itemDTO.getKey()));\n\n    try (CloseableHttpResponse ignored = put(path, itemDTO)) {\n    } catch (Throwable ex) {\n      throw new RuntimeException(String\n          .format(\"CreateOrUpdate item: %s for appId: %s, cluster: %s, namespace: %s in env: %s failed\", itemDTO.getKey(),\n              appId, clusterName, namespaceName, env), ex);\n    }\n  }\n","realPath":"apollo-openapi/src/main/java/com/ctrip/framework/apollo/openapi/client/service/ItemOpenApiService.java","repoName":"apollo","snippetEndLine":0,"snippetStartLine":0,"startLine":69,"status":"B"}],"commitId":"0d32276855a0121324e6ab6219311ddcf6b0526a","commitMessage":"@@@Merge pull request #1508 from nobodyiam/apollo-open-api\n\nadd apollo-openapi client","date":"2018-09-24 15:19:33","modifiedFileCount":"5","status":"B","submitter":"Jason Song"},{"authorTime":"2019-01-13 16:42:46","codes":[{"authorDate":"2019-01-13 16:42:46","commitOrder":2,"curCode":"  public void updateItem(String appId, String env, String clusterName, String namespaceName, OpenItemDTO itemDTO) {\n    if (Strings.isNullOrEmpty(clusterName)) {\n      clusterName = ConfigConsts.CLUSTER_NAME_DEFAULT;\n    }\n    if (Strings.isNullOrEmpty(namespaceName)) {\n      namespaceName = ConfigConsts.NAMESPACE_APPLICATION;\n    }\n\n    checkNotEmpty(appId, \"App id\");\n    checkNotEmpty(env, \"Env\");\n    checkNotEmpty(itemDTO.getKey(), \"Item key\");\n    checkNotEmpty(itemDTO.getDataChangeLastModifiedBy(), \"Item modified by\");\n\n    String path = String.format(\"envs/%s/apps/%s/clusters/%s/namespaces/%s/items/%s\",\n        escapePath(env), escapePath(appId), escapePath(clusterName), escapePath(namespaceName),\n        escapePath(itemDTO.getKey()));\n\n    try (CloseableHttpResponse ignored = put(path, itemDTO)) {\n    } catch (Throwable ex) {\n      throw new RuntimeException(String\n          .format(\"Update item: %s for appId: %s, cluster: %s, namespace: %s in env: %s failed\", itemDTO.getKey(),\n              appId, clusterName, namespaceName, env), ex);\n    }\n  }\n","date":"2019-01-13 16:42:46","endLine":94,"groupId":"977","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"updateItem","params":"(StringappId@Stringenv@StringclusterName@StringnamespaceName@OpenItemDTOitemDTO)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-apollo-10-0.7/blobInfo/CC_OUT/blobs/83/adbfd7a740f877f9c31d394314bb4719da8464.src","preCode":"  public void updateItem(String appId, String env, String clusterName, String namespaceName, OpenItemDTO itemDTO) {\n    if (Strings.isNullOrEmpty(clusterName)) {\n      clusterName = ConfigConsts.CLUSTER_NAME_DEFAULT;\n    }\n    if (Strings.isNullOrEmpty(namespaceName)) {\n      namespaceName = ConfigConsts.NAMESPACE_APPLICATION;\n    }\n\n    checkNotEmpty(appId, \"App id\");\n    checkNotEmpty(env, \"Env\");\n    checkNotEmpty(itemDTO.getKey(), \"Item key\");\n    checkNotEmpty(itemDTO.getValue(), \"Item value\");\n    checkNotEmpty(itemDTO.getDataChangeLastModifiedBy(), \"Item modified by\");\n\n    String path = String.format(\"envs/%s/apps/%s/clusters/%s/namespaces/%s/items/%s\",\n        escapePath(env), escapePath(appId), escapePath(clusterName), escapePath(namespaceName),\n        escapePath(itemDTO.getKey()));\n\n    try (CloseableHttpResponse ignored = put(path, itemDTO)) {\n    } catch (Throwable ex) {\n      throw new RuntimeException(String\n          .format(\"Update item: %s for appId: %s, cluster: %s, namespace: %s in env: %s failed\", itemDTO.getKey(),\n              appId, clusterName, namespaceName, env), ex);\n    }\n  }\n","realPath":"apollo-openapi/src/main/java/com/ctrip/framework/apollo/openapi/client/service/ItemOpenApiService.java","repoName":"apollo","snippetEndLine":0,"snippetStartLine":0,"startLine":71,"status":"M"},{"authorDate":"2019-01-13 16:42:46","commitOrder":2,"curCode":"  public void createOrUpdateItem(String appId, String env, String clusterName, String namespaceName, OpenItemDTO itemDTO) {\n    if (Strings.isNullOrEmpty(clusterName)) {\n      clusterName = ConfigConsts.CLUSTER_NAME_DEFAULT;\n    }\n    if (Strings.isNullOrEmpty(namespaceName)) {\n      namespaceName = ConfigConsts.NAMESPACE_APPLICATION;\n    }\n\n    checkNotEmpty(appId, \"App id\");\n    checkNotEmpty(env, \"Env\");\n    checkNotEmpty(itemDTO.getKey(), \"Item key\");\n    checkNotEmpty(itemDTO.getDataChangeCreatedBy(), \"Item created by\");\n\n    if (Strings.isNullOrEmpty(itemDTO.getDataChangeLastModifiedBy())) {\n      itemDTO.setDataChangeLastModifiedBy(itemDTO.getDataChangeCreatedBy());\n    }\n\n    String path = String.format(\"envs/%s/apps/%s/clusters/%s/namespaces/%s/items/%s?createIfNotExists=true\",\n        escapePath(env), escapePath(appId), escapePath(clusterName), escapePath(namespaceName),\n        escapePath(itemDTO.getKey()));\n\n    try (CloseableHttpResponse ignored = put(path, itemDTO)) {\n    } catch (Throwable ex) {\n      throw new RuntimeException(String\n          .format(\"CreateOrUpdate item: %s for appId: %s, cluster: %s, namespace: %s in env: %s failed\", itemDTO.getKey(),\n              appId, clusterName, namespaceName, env), ex);\n    }\n  }\n","date":"2019-01-13 16:42:46","endLine":123,"groupId":"110","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"createOrUpdateItem","params":"(StringappId@Stringenv@StringclusterName@StringnamespaceName@OpenItemDTOitemDTO)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-apollo-10-0.7/blobInfo/CC_OUT/blobs/83/adbfd7a740f877f9c31d394314bb4719da8464.src","preCode":"  public void createOrUpdateItem(String appId, String env, String clusterName, String namespaceName, OpenItemDTO itemDTO) {\n    if (Strings.isNullOrEmpty(clusterName)) {\n      clusterName = ConfigConsts.CLUSTER_NAME_DEFAULT;\n    }\n    if (Strings.isNullOrEmpty(namespaceName)) {\n      namespaceName = ConfigConsts.NAMESPACE_APPLICATION;\n    }\n\n    checkNotEmpty(appId, \"App id\");\n    checkNotEmpty(env, \"Env\");\n    checkNotEmpty(itemDTO.getKey(), \"Item key\");\n    checkNotEmpty(itemDTO.getValue(), \"Item value\");\n    checkNotEmpty(itemDTO.getDataChangeCreatedBy(), \"Item created by\");\n\n    if (Strings.isNullOrEmpty(itemDTO.getDataChangeLastModifiedBy())) {\n      itemDTO.setDataChangeLastModifiedBy(itemDTO.getDataChangeCreatedBy());\n    }\n\n    String path = String.format(\"envs/%s/apps/%s/clusters/%s/namespaces/%s/items/%s?createIfNotExists=true\",\n        escapePath(env), escapePath(appId), escapePath(clusterName), escapePath(namespaceName),\n        escapePath(itemDTO.getKey()));\n\n    try (CloseableHttpResponse ignored = put(path, itemDTO)) {\n    } catch (Throwable ex) {\n      throw new RuntimeException(String\n          .format(\"CreateOrUpdate item: %s for appId: %s, cluster: %s, namespace: %s in env: %s failed\", itemDTO.getKey(),\n              appId, clusterName, namespaceName, env), ex);\n    }\n  }\n","realPath":"apollo-openapi/src/main/java/com/ctrip/framework/apollo/openapi/client/service/ItemOpenApiService.java","repoName":"apollo","snippetEndLine":0,"snippetStartLine":0,"startLine":96,"status":"M"}],"commitId":"b76adf9cb454902b7d20d262ff918947cac6fdae","commitMessage":"@@@fixes #1841 (#1852)\n\n","date":"2019-01-13 16:42:46","modifiedFileCount":"2","status":"M","submitter":"kezhenxu94"},{"authorTime":"2021-09-14 20:40:08","codes":[{"authorDate":"2021-09-14 20:40:08","commitOrder":3,"curCode":"  public void updateItem(String appId, String env, String clusterName, String namespaceName, OpenItemDTO itemDTO) {\n    if (Strings.isNullOrEmpty(clusterName)) {\n      clusterName = ConfigConsts.CLUSTER_NAME_DEFAULT;\n    }\n    if (Strings.isNullOrEmpty(namespaceName)) {\n      namespaceName = ConfigConsts.NAMESPACE_APPLICATION;\n    }\n\n    checkNotEmpty(appId, \"App id\");\n    checkNotEmpty(env, \"Env\");\n    checkNotEmpty(itemDTO.getKey(), \"Item key\");\n    checkNotEmpty(itemDTO.getDataChangeLastModifiedBy(), \"Item modified by\");\n\n    OpenApiPathBuilder pathBuilder = OpenApiPathBuilder.newBuilder()\n        .envsPathVal(env)\n        .appsPathVal(appId)\n        .clustersPathVal(clusterName)\n        .namespacesPathVal(namespaceName)\n        .itemsPathVal(itemDTO.getKey());\n\n    try (CloseableHttpResponse ignored = put(pathBuilder, itemDTO)) {\n    } catch (Throwable ex) {\n      throw new RuntimeException(String\n          .format(\"Update item: %s for appId: %s, cluster: %s, namespace: %s in env: %s failed\", itemDTO.getKey(),\n              appId, clusterName, namespaceName, env), ex);\n    }\n  }\n","date":"2021-09-14 20:40:08","endLine":122,"groupId":"1065","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"updateItem","params":"(StringappId@Stringenv@StringclusterName@StringnamespaceName@OpenItemDTOitemDTO)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-apollo-10-0.7/blobInfo/CC_OUT/blobs/1d/d6c0ec7512331bd4bfab719679aff025297687.src","preCode":"  public void updateItem(String appId, String env, String clusterName, String namespaceName, OpenItemDTO itemDTO) {\n    if (Strings.isNullOrEmpty(clusterName)) {\n      clusterName = ConfigConsts.CLUSTER_NAME_DEFAULT;\n    }\n    if (Strings.isNullOrEmpty(namespaceName)) {\n      namespaceName = ConfigConsts.NAMESPACE_APPLICATION;\n    }\n\n    checkNotEmpty(appId, \"App id\");\n    checkNotEmpty(env, \"Env\");\n    checkNotEmpty(itemDTO.getKey(), \"Item key\");\n    checkNotEmpty(itemDTO.getDataChangeLastModifiedBy(), \"Item modified by\");\n\n    String path = String.format(\"envs/%s/apps/%s/clusters/%s/namespaces/%s/items/%s\",\n        escapePath(env), escapePath(appId), escapePath(clusterName), escapePath(namespaceName),\n        escapePath(itemDTO.getKey()));\n\n    try (CloseableHttpResponse ignored = put(path, itemDTO)) {\n    } catch (Throwable ex) {\n      throw new RuntimeException(String\n          .format(\"Update item: %s for appId: %s, cluster: %s, namespace: %s in env: %s failed\", itemDTO.getKey(),\n              appId, clusterName, namespaceName, env), ex);\n    }\n  }\n","realPath":"apollo-openapi/src/main/java/com/ctrip/framework/apollo/openapi/client/service/ItemOpenApiService.java","repoName":"apollo","snippetEndLine":0,"snippetStartLine":0,"startLine":96,"status":"M"},{"authorDate":"2021-09-14 20:40:08","commitOrder":3,"curCode":"  public void createOrUpdateItem(String appId, String env, String clusterName, String namespaceName, OpenItemDTO itemDTO) {\n    if (Strings.isNullOrEmpty(clusterName)) {\n      clusterName = ConfigConsts.CLUSTER_NAME_DEFAULT;\n    }\n    if (Strings.isNullOrEmpty(namespaceName)) {\n      namespaceName = ConfigConsts.NAMESPACE_APPLICATION;\n    }\n\n    checkNotEmpty(appId, \"App id\");\n    checkNotEmpty(env, \"Env\");\n    checkNotEmpty(itemDTO.getKey(), \"Item key\");\n    checkNotEmpty(itemDTO.getDataChangeCreatedBy(), \"Item created by\");\n\n    if (Strings.isNullOrEmpty(itemDTO.getDataChangeLastModifiedBy())) {\n      itemDTO.setDataChangeLastModifiedBy(itemDTO.getDataChangeCreatedBy());\n    }\n\n    OpenApiPathBuilder pathBuilder = OpenApiPathBuilder.newBuilder()\n        .envsPathVal(env)\n        .appsPathVal(appId)\n        .clustersPathVal(clusterName)\n        .namespacesPathVal(namespaceName)\n        .itemsPathVal(itemDTO.getKey())\n        .addParam(\"createIfNotExists\", \"true\");\n\n    try (CloseableHttpResponse ignored = put(pathBuilder, itemDTO)) {\n    } catch (Throwable ex) {\n      throw new RuntimeException(String\n          .format(\"CreateOrUpdate item: %s for appId: %s, cluster: %s, namespace: %s in env: %s failed\", itemDTO.getKey(),\n              appId, clusterName, namespaceName, env), ex);\n    }\n  }\n","date":"2021-09-14 20:40:08","endLine":155,"groupId":"1065","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"createOrUpdateItem","params":"(StringappId@Stringenv@StringclusterName@StringnamespaceName@OpenItemDTOitemDTO)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-apollo-10-0.7/blobInfo/CC_OUT/blobs/1d/d6c0ec7512331bd4bfab719679aff025297687.src","preCode":"  public void createOrUpdateItem(String appId, String env, String clusterName, String namespaceName, OpenItemDTO itemDTO) {\n    if (Strings.isNullOrEmpty(clusterName)) {\n      clusterName = ConfigConsts.CLUSTER_NAME_DEFAULT;\n    }\n    if (Strings.isNullOrEmpty(namespaceName)) {\n      namespaceName = ConfigConsts.NAMESPACE_APPLICATION;\n    }\n\n    checkNotEmpty(appId, \"App id\");\n    checkNotEmpty(env, \"Env\");\n    checkNotEmpty(itemDTO.getKey(), \"Item key\");\n    checkNotEmpty(itemDTO.getDataChangeCreatedBy(), \"Item created by\");\n\n    if (Strings.isNullOrEmpty(itemDTO.getDataChangeLastModifiedBy())) {\n      itemDTO.setDataChangeLastModifiedBy(itemDTO.getDataChangeCreatedBy());\n    }\n\n    String path = String.format(\"envs/%s/apps/%s/clusters/%s/namespaces/%s/items/%s?createIfNotExists=true\",\n        escapePath(env), escapePath(appId), escapePath(clusterName), escapePath(namespaceName),\n        escapePath(itemDTO.getKey()));\n\n    try (CloseableHttpResponse ignored = put(path, itemDTO)) {\n    } catch (Throwable ex) {\n      throw new RuntimeException(String\n          .format(\"CreateOrUpdate item: %s for appId: %s, cluster: %s, namespace: %s in env: %s failed\", itemDTO.getKey(),\n              appId, clusterName, namespaceName, env), ex);\n    }\n  }\n","realPath":"apollo-openapi/src/main/java/com/ctrip/framework/apollo/openapi/client/service/ItemOpenApiService.java","repoName":"apollo","snippetEndLine":0,"snippetStartLine":0,"startLine":124,"status":"M"}],"commitId":"d5931784dcdf1c414183bc816010a209463ec287","commitMessage":"@@@fix: replace String.format() with newly created class OpenApiPathBuilder (#3982)\n\nSigned-off-by: WillardHu <wei.hu@daocloud.io>\n\nCo-authored-by: Jason Song <nobodyiam@gmail.com>","date":"2021-09-14 20:40:08","modifiedFileCount":"7","status":"M","submitter":"Willard"}]
