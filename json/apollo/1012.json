[{"authorTime":"2016-07-15 15:47:12","codes":[{"authorDate":"2016-07-15 15:47:12","commitOrder":1,"curCode":"  public void acquireLockWithNamespaceIdSwitchOn(){\n\n    when(apolloSwitcher.isNamespaceLockSwitchOff()).thenReturn(false);\n    when(namespaceService.findOne(NAMESPACE_ID)).thenReturn(mockNamespace());\n    when(namespaceLockService.findLock(NAMESPACE_ID)).thenReturn(null);\n\n    namespaceLockAspect.acquireLock(NAMESPACE_ID, CURRENT_USER);\n\n    verify(apolloSwitcher).isNamespaceLockSwitchOff();\n    verify(namespaceService).findOne(NAMESPACE_ID);\n    verify(namespaceLockService).findLock(NAMESPACE_ID);\n    verify(namespaceLockService).tryLock(any());\n  }\n","date":"2016-07-15 15:47:12","endLine":114,"groupId":"783","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"acquireLockWithNamespaceIdSwitchOn","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-apollo-10-0.7/blobInfo/CC_OUT/blobs/12/a790c9bac48f348b45d991955e3353bf1c2fce.src","preCode":"  public void acquireLockWithNamespaceIdSwitchOn(){\n\n    when(apolloSwitcher.isNamespaceLockSwitchOff()).thenReturn(false);\n    when(namespaceService.findOne(NAMESPACE_ID)).thenReturn(mockNamespace());\n    when(namespaceLockService.findLock(NAMESPACE_ID)).thenReturn(null);\n\n    namespaceLockAspect.acquireLock(NAMESPACE_ID, CURRENT_USER);\n\n    verify(apolloSwitcher).isNamespaceLockSwitchOff();\n    verify(namespaceService).findOne(NAMESPACE_ID);\n    verify(namespaceLockService).findLock(NAMESPACE_ID);\n    verify(namespaceLockService).tryLock(any());\n  }\n","realPath":"apollo-adminservice/src/test/java/com/ctrip/framework/apollo/adminservice/aop/NamespaceLockTest.java","repoName":"apollo","snippetEndLine":0,"snippetStartLine":0,"startLine":102,"status":"B"},{"authorDate":"2016-07-15 15:47:12","commitOrder":1,"curCode":"  public void testDuplicateLock(){\n\n    when(apolloSwitcher.isNamespaceLockSwitchOff()).thenReturn(false);\n    when(namespaceService.findOne(NAMESPACE_ID)).thenReturn(mockNamespace());\n    when(namespaceLockService.findLock(NAMESPACE_ID)).thenReturn(null);\n    when(namespaceLockService.tryLock(any())).thenThrow(DataIntegrityViolationException.class);\n\n    namespaceLockAspect.acquireLock(NAMESPACE_ID, CURRENT_USER);\n\n    verify(apolloSwitcher).isNamespaceLockSwitchOff();\n    verify(namespaceService).findOne(NAMESPACE_ID);\n    verify(namespaceLockService, times(2)).findLock(NAMESPACE_ID);\n    verify(namespaceLockService).tryLock(any());\n\n  }\n","date":"2016-07-15 15:47:12","endLine":131,"groupId":"784","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testDuplicateLock","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-apollo-10-0.7/blobInfo/CC_OUT/blobs/12/a790c9bac48f348b45d991955e3353bf1c2fce.src","preCode":"  public void testDuplicateLock(){\n\n    when(apolloSwitcher.isNamespaceLockSwitchOff()).thenReturn(false);\n    when(namespaceService.findOne(NAMESPACE_ID)).thenReturn(mockNamespace());\n    when(namespaceLockService.findLock(NAMESPACE_ID)).thenReturn(null);\n    when(namespaceLockService.tryLock(any())).thenThrow(DataIntegrityViolationException.class);\n\n    namespaceLockAspect.acquireLock(NAMESPACE_ID, CURRENT_USER);\n\n    verify(apolloSwitcher).isNamespaceLockSwitchOff();\n    verify(namespaceService).findOne(NAMESPACE_ID);\n    verify(namespaceLockService, times(2)).findLock(NAMESPACE_ID);\n    verify(namespaceLockService).tryLock(any());\n\n  }\n","realPath":"apollo-adminservice/src/test/java/com/ctrip/framework/apollo/adminservice/aop/NamespaceLockTest.java","repoName":"apollo","snippetEndLine":0,"snippetStartLine":0,"startLine":117,"status":"B"}],"commitId":"4c64de670370ead7df77da72f379e7a366a4431a","commitMessage":"@@@Merge pull request #326 from lepdou/ut\n\nut","date":"2016-07-15 15:47:12","modifiedFileCount":"8","status":"B","submitter":"Jason Song"},{"authorTime":"2016-12-19 17:55:32","codes":[{"authorDate":"2016-12-19 17:55:32","commitOrder":2,"curCode":"  public void acquireLockWithNamespaceIdSwitchOn(){\n\n    when(bizConfig.isNamespaceLockSwitchOff()).thenReturn(false);\n    when(namespaceService.findOne(NAMESPACE_ID)).thenReturn(mockNamespace());\n    when(namespaceLockService.findLock(NAMESPACE_ID)).thenReturn(null);\n\n    namespaceLockAspect.acquireLock(NAMESPACE_ID, CURRENT_USER);\n\n    verify(bizConfig).isNamespaceLockSwitchOff();\n    verify(namespaceService).findOne(NAMESPACE_ID);\n    verify(namespaceLockService).findLock(NAMESPACE_ID);\n    verify(namespaceLockService).tryLock(any());\n  }\n","date":"2016-12-19 17:55:32","endLine":114,"groupId":"1012","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"acquireLockWithNamespaceIdSwitchOn","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-apollo-10-0.7/blobInfo/CC_OUT/blobs/b6/7a24f90e74d05b67287f87a6a53c6a49858be9.src","preCode":"  public void acquireLockWithNamespaceIdSwitchOn(){\n\n    when(apolloSwitcher.isNamespaceLockSwitchOff()).thenReturn(false);\n    when(namespaceService.findOne(NAMESPACE_ID)).thenReturn(mockNamespace());\n    when(namespaceLockService.findLock(NAMESPACE_ID)).thenReturn(null);\n\n    namespaceLockAspect.acquireLock(NAMESPACE_ID, CURRENT_USER);\n\n    verify(apolloSwitcher).isNamespaceLockSwitchOff();\n    verify(namespaceService).findOne(NAMESPACE_ID);\n    verify(namespaceLockService).findLock(NAMESPACE_ID);\n    verify(namespaceLockService).tryLock(any());\n  }\n","realPath":"apollo-adminservice/src/test/java/com/ctrip/framework/apollo/adminservice/aop/NamespaceLockTest.java","repoName":"apollo","snippetEndLine":0,"snippetStartLine":0,"startLine":102,"status":"M"},{"authorDate":"2016-12-19 17:55:32","commitOrder":2,"curCode":"  public void testDuplicateLock(){\n\n    when(bizConfig.isNamespaceLockSwitchOff()).thenReturn(false);\n    when(namespaceService.findOne(NAMESPACE_ID)).thenReturn(mockNamespace());\n    when(namespaceLockService.findLock(NAMESPACE_ID)).thenReturn(null);\n    when(namespaceLockService.tryLock(any())).thenThrow(DataIntegrityViolationException.class);\n\n    namespaceLockAspect.acquireLock(NAMESPACE_ID, CURRENT_USER);\n\n    verify(bizConfig).isNamespaceLockSwitchOff();\n    verify(namespaceService).findOne(NAMESPACE_ID);\n    verify(namespaceLockService, times(2)).findLock(NAMESPACE_ID);\n    verify(namespaceLockService).tryLock(any());\n\n  }\n","date":"2016-12-19 17:55:32","endLine":131,"groupId":"1012","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testDuplicateLock","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-apollo-10-0.7/blobInfo/CC_OUT/blobs/b6/7a24f90e74d05b67287f87a6a53c6a49858be9.src","preCode":"  public void testDuplicateLock(){\n\n    when(apolloSwitcher.isNamespaceLockSwitchOff()).thenReturn(false);\n    when(namespaceService.findOne(NAMESPACE_ID)).thenReturn(mockNamespace());\n    when(namespaceLockService.findLock(NAMESPACE_ID)).thenReturn(null);\n    when(namespaceLockService.tryLock(any())).thenThrow(DataIntegrityViolationException.class);\n\n    namespaceLockAspect.acquireLock(NAMESPACE_ID, CURRENT_USER);\n\n    verify(apolloSwitcher).isNamespaceLockSwitchOff();\n    verify(namespaceService).findOne(NAMESPACE_ID);\n    verify(namespaceLockService, times(2)).findLock(NAMESPACE_ID);\n    verify(namespaceLockService).tryLock(any());\n\n  }\n","realPath":"apollo-adminservice/src/test/java/com/ctrip/framework/apollo/adminservice/aop/NamespaceLockTest.java","repoName":"apollo","snippetEndLine":0,"snippetStartLine":0,"startLine":117,"status":"M"}],"commitId":"0f88331327a44a245670a7d4114af27a129882d7","commitMessage":"@@@Merge pull request #490 from lepdou/config\n\nrefactor project config","date":"2016-12-19 17:55:32","modifiedFileCount":"27","status":"M","submitter":"Jason Song"}]
