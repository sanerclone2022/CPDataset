[{"authorTime":"2018-08-07 21:27:48","codes":[{"authorDate":"2018-08-07 21:27:48","commitOrder":1,"curCode":"  public void testFillFromEnvironment() throws Exception {\n    String someAppId = \"someAppId\";\n    String someCluster = \"someCluster\";\n    String someCacheDir = \"someCacheDir\";\n    String someApolloMeta = \"someApolloMeta\";\n\n    ConfigurableEnvironment environment = mock(ConfigurableEnvironment.class);\n\n    when(environment.getProperty(\"app.id\")).thenReturn(someAppId);\n    when(environment.getProperty(ConfigConsts.APOLLO_CLUSTER_KEY)).thenReturn(someCluster);\n    when(environment.getProperty(\"apollo.cacheDir\")).thenReturn(someCacheDir);\n    when(environment.getProperty(ConfigConsts.APOLLO_META_KEY)).thenReturn(someApolloMeta);\n\n    apolloApplicationContextInitializer.initializeSystemProperty(environment);\n\n    assertEquals(someAppId, System.getProperty(\"app.id\"));\n    assertEquals(someCluster, System.getProperty(ConfigConsts.APOLLO_CLUSTER_KEY));\n    assertEquals(someCacheDir, System.getProperty(\"apollo.cacheDir\"));\n    assertEquals(someApolloMeta, System.getProperty(ConfigConsts.APOLLO_META_KEY));\n  }\n","date":"2018-08-07 21:27:48","endLine":50,"groupId":"1303","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testFillFromEnvironment","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-apollo-10-0.7/blobInfo/CC_OUT/blobs/ac/929482c48ed353bf4940cf651b98f6ad9aa779.src","preCode":"  public void testFillFromEnvironment() throws Exception {\n    String someAppId = \"someAppId\";\n    String someCluster = \"someCluster\";\n    String someCacheDir = \"someCacheDir\";\n    String someApolloMeta = \"someApolloMeta\";\n\n    ConfigurableEnvironment environment = mock(ConfigurableEnvironment.class);\n\n    when(environment.getProperty(\"app.id\")).thenReturn(someAppId);\n    when(environment.getProperty(ConfigConsts.APOLLO_CLUSTER_KEY)).thenReturn(someCluster);\n    when(environment.getProperty(\"apollo.cacheDir\")).thenReturn(someCacheDir);\n    when(environment.getProperty(ConfigConsts.APOLLO_META_KEY)).thenReturn(someApolloMeta);\n\n    apolloApplicationContextInitializer.initializeSystemProperty(environment);\n\n    assertEquals(someAppId, System.getProperty(\"app.id\"));\n    assertEquals(someCluster, System.getProperty(ConfigConsts.APOLLO_CLUSTER_KEY));\n    assertEquals(someCacheDir, System.getProperty(\"apollo.cacheDir\"));\n    assertEquals(someApolloMeta, System.getProperty(ConfigConsts.APOLLO_META_KEY));\n  }\n","realPath":"apollo-client/src/test/java/com/ctrip/framework/apollo/spring/boot/ApolloApplicationContextInitializerTest.java","repoName":"apollo","snippetEndLine":0,"snippetStartLine":0,"startLine":31,"status":"B"},{"authorDate":"2018-08-07 21:27:48","commitOrder":1,"curCode":"  public void testFillFromEnvironmentWithSystemPropertyAlreadyFilled() throws Exception {\n    String someAppId = \"someAppId\";\n    String someCluster = \"someCluster\";\n    String someCacheDir = \"someCacheDir\";\n    String someApolloMeta = \"someApolloMeta\";\n\n    System.setProperty(\"app.id\", someAppId);\n    System.setProperty(ConfigConsts.APOLLO_CLUSTER_KEY, someCluster);\n    System.setProperty(\"apollo.cacheDir\", someCacheDir);\n    System.setProperty(ConfigConsts.APOLLO_META_KEY, someApolloMeta);\n\n    String anotherAppId = \"anotherAppId\";\n    String anotherCluster = \"anotherCluster\";\n    String anotherCacheDir = \"anotherCacheDir\";\n    String anotherApolloMeta = \"anotherApolloMeta\";\n\n    ConfigurableEnvironment environment = mock(ConfigurableEnvironment.class);\n\n    when(environment.getProperty(\"app.id\")).thenReturn(anotherAppId);\n    when(environment.getProperty(ConfigConsts.APOLLO_CLUSTER_KEY)).thenReturn(anotherCluster);\n    when(environment.getProperty(\"apollo.cacheDir\")).thenReturn(anotherCacheDir);\n    when(environment.getProperty(ConfigConsts.APOLLO_META_KEY)).thenReturn(anotherApolloMeta);\n\n    apolloApplicationContextInitializer.initializeSystemProperty(environment);\n\n    assertEquals(someAppId, System.getProperty(\"app.id\"));\n    assertEquals(someCluster, System.getProperty(ConfigConsts.APOLLO_CLUSTER_KEY));\n    assertEquals(someCacheDir, System.getProperty(\"apollo.cacheDir\"));\n    assertEquals(someApolloMeta, System.getProperty(ConfigConsts.APOLLO_META_KEY));\n  }\n","date":"2018-08-07 21:27:48","endLine":82,"groupId":"1303","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testFillFromEnvironmentWithSystemPropertyAlreadyFilled","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-apollo-10-0.7/blobInfo/CC_OUT/blobs/ac/929482c48ed353bf4940cf651b98f6ad9aa779.src","preCode":"  public void testFillFromEnvironmentWithSystemPropertyAlreadyFilled() throws Exception {\n    String someAppId = \"someAppId\";\n    String someCluster = \"someCluster\";\n    String someCacheDir = \"someCacheDir\";\n    String someApolloMeta = \"someApolloMeta\";\n\n    System.setProperty(\"app.id\", someAppId);\n    System.setProperty(ConfigConsts.APOLLO_CLUSTER_KEY, someCluster);\n    System.setProperty(\"apollo.cacheDir\", someCacheDir);\n    System.setProperty(ConfigConsts.APOLLO_META_KEY, someApolloMeta);\n\n    String anotherAppId = \"anotherAppId\";\n    String anotherCluster = \"anotherCluster\";\n    String anotherCacheDir = \"anotherCacheDir\";\n    String anotherApolloMeta = \"anotherApolloMeta\";\n\n    ConfigurableEnvironment environment = mock(ConfigurableEnvironment.class);\n\n    when(environment.getProperty(\"app.id\")).thenReturn(anotherAppId);\n    when(environment.getProperty(ConfigConsts.APOLLO_CLUSTER_KEY)).thenReturn(anotherCluster);\n    when(environment.getProperty(\"apollo.cacheDir\")).thenReturn(anotherCacheDir);\n    when(environment.getProperty(ConfigConsts.APOLLO_META_KEY)).thenReturn(anotherApolloMeta);\n\n    apolloApplicationContextInitializer.initializeSystemProperty(environment);\n\n    assertEquals(someAppId, System.getProperty(\"app.id\"));\n    assertEquals(someCluster, System.getProperty(ConfigConsts.APOLLO_CLUSTER_KEY));\n    assertEquals(someCacheDir, System.getProperty(\"apollo.cacheDir\"));\n    assertEquals(someApolloMeta, System.getProperty(ConfigConsts.APOLLO_META_KEY));\n  }\n","realPath":"apollo-client/src/test/java/com/ctrip/framework/apollo/spring/boot/ApolloApplicationContextInitializerTest.java","repoName":"apollo","snippetEndLine":0,"snippetStartLine":0,"startLine":53,"status":"B"}],"commitId":"8e6ed96853b491eb8767c2aecc31e0bfc3c0838d","commitMessage":"@@@Merge pull request #1340 from ctripcorp/1.x\n\nmerge 1.x to master","date":"2018-08-07 21:27:48","modifiedFileCount":"22","status":"B","submitter":"Jason Song"},{"authorTime":"2021-06-26 21:10:49","codes":[{"authorDate":"2021-06-26 21:10:49","commitOrder":2,"curCode":"  public void testFillFromEnvironment() throws Exception {\n    String someAppId = \"someAppId\";\n    String someCluster = \"someCluster\";\n    String someCacheDir = \"someCacheDir\";\n    String someApolloMeta = \"someApolloMeta\";\n\n    ConfigurableEnvironment environment = mock(ConfigurableEnvironment.class);\n\n    when(environment.getProperty(ApolloClientSystemConsts.APP_ID)).thenReturn(someAppId);\n    when(environment.getProperty(ConfigConsts.APOLLO_CLUSTER_KEY)).thenReturn(someCluster);\n    when(environment.getProperty(ApolloClientSystemConsts.APOLLO_CACHE_DIR)).thenReturn(someCacheDir);\n    when(environment.getProperty(ConfigConsts.APOLLO_META_KEY)).thenReturn(someApolloMeta);\n\n    apolloApplicationContextInitializer.initializeSystemProperty(environment);\n\n    assertEquals(someAppId, System.getProperty(ApolloClientSystemConsts.APP_ID));\n    assertEquals(someCluster, System.getProperty(ConfigConsts.APOLLO_CLUSTER_KEY));\n    assertEquals(someCacheDir, System.getProperty(ApolloClientSystemConsts.APOLLO_CACHE_DIR));\n    assertEquals(someApolloMeta, System.getProperty(ConfigConsts.APOLLO_META_KEY));\n  }\n","date":"2021-06-26 21:10:49","endLine":67,"groupId":"10395","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testFillFromEnvironment","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-apollo-10-0.7/blobInfo/CC_OUT/blobs/31/6ad5476e401e9196d634b6b8247b2ca7d864e2.src","preCode":"  public void testFillFromEnvironment() throws Exception {\n    String someAppId = \"someAppId\";\n    String someCluster = \"someCluster\";\n    String someCacheDir = \"someCacheDir\";\n    String someApolloMeta = \"someApolloMeta\";\n\n    ConfigurableEnvironment environment = mock(ConfigurableEnvironment.class);\n\n    when(environment.getProperty(\"app.id\")).thenReturn(someAppId);\n    when(environment.getProperty(ConfigConsts.APOLLO_CLUSTER_KEY)).thenReturn(someCluster);\n    when(environment.getProperty(\"apollo.cacheDir\")).thenReturn(someCacheDir);\n    when(environment.getProperty(ConfigConsts.APOLLO_META_KEY)).thenReturn(someApolloMeta);\n\n    apolloApplicationContextInitializer.initializeSystemProperty(environment);\n\n    assertEquals(someAppId, System.getProperty(\"app.id\"));\n    assertEquals(someCluster, System.getProperty(ConfigConsts.APOLLO_CLUSTER_KEY));\n    assertEquals(someCacheDir, System.getProperty(\"apollo.cacheDir\"));\n    assertEquals(someApolloMeta, System.getProperty(ConfigConsts.APOLLO_META_KEY));\n  }\n","realPath":"apollo-client/src/test/java/com/ctrip/framework/apollo/spring/boot/ApolloApplicationContextInitializerTest.java","repoName":"apollo","snippetEndLine":0,"snippetStartLine":0,"startLine":48,"status":"M"},{"authorDate":"2021-06-26 21:10:49","commitOrder":2,"curCode":"  public void testFillFromEnvironmentWithSystemPropertyAlreadyFilled() throws Exception {\n    String someAppId = \"someAppId\";\n    String someCluster = \"someCluster\";\n    String someCacheDir = \"someCacheDir\";\n    String someApolloMeta = \"someApolloMeta\";\n\n    System.setProperty(ApolloClientSystemConsts.APP_ID, someAppId);\n    System.setProperty(ConfigConsts.APOLLO_CLUSTER_KEY, someCluster);\n    System.setProperty(ApolloClientSystemConsts.APOLLO_CACHE_DIR, someCacheDir);\n    System.setProperty(ConfigConsts.APOLLO_META_KEY, someApolloMeta);\n\n    String anotherAppId = \"anotherAppId\";\n    String anotherCluster = \"anotherCluster\";\n    String anotherCacheDir = \"anotherCacheDir\";\n    String anotherApolloMeta = \"anotherApolloMeta\";\n\n    ConfigurableEnvironment environment = mock(ConfigurableEnvironment.class);\n\n    when(environment.getProperty(ApolloClientSystemConsts.APP_ID)).thenReturn(anotherAppId);\n    when(environment.getProperty(ConfigConsts.APOLLO_CLUSTER_KEY)).thenReturn(anotherCluster);\n    when(environment.getProperty(ApolloClientSystemConsts.APOLLO_CACHE_DIR)).thenReturn(anotherCacheDir);\n    when(environment.getProperty(ConfigConsts.APOLLO_META_KEY)).thenReturn(anotherApolloMeta);\n\n    apolloApplicationContextInitializer.initializeSystemProperty(environment);\n\n    assertEquals(someAppId, System.getProperty(ApolloClientSystemConsts.APP_ID));\n    assertEquals(someCluster, System.getProperty(ConfigConsts.APOLLO_CLUSTER_KEY));\n    assertEquals(someCacheDir, System.getProperty(ApolloClientSystemConsts.APOLLO_CACHE_DIR));\n    assertEquals(someApolloMeta, System.getProperty(ConfigConsts.APOLLO_META_KEY));\n  }\n","date":"2021-06-26 21:10:49","endLine":99,"groupId":"10395","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testFillFromEnvironmentWithSystemPropertyAlreadyFilled","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-apollo-10-0.7/blobInfo/CC_OUT/blobs/31/6ad5476e401e9196d634b6b8247b2ca7d864e2.src","preCode":"  public void testFillFromEnvironmentWithSystemPropertyAlreadyFilled() throws Exception {\n    String someAppId = \"someAppId\";\n    String someCluster = \"someCluster\";\n    String someCacheDir = \"someCacheDir\";\n    String someApolloMeta = \"someApolloMeta\";\n\n    System.setProperty(\"app.id\", someAppId);\n    System.setProperty(ConfigConsts.APOLLO_CLUSTER_KEY, someCluster);\n    System.setProperty(\"apollo.cacheDir\", someCacheDir);\n    System.setProperty(ConfigConsts.APOLLO_META_KEY, someApolloMeta);\n\n    String anotherAppId = \"anotherAppId\";\n    String anotherCluster = \"anotherCluster\";\n    String anotherCacheDir = \"anotherCacheDir\";\n    String anotherApolloMeta = \"anotherApolloMeta\";\n\n    ConfigurableEnvironment environment = mock(ConfigurableEnvironment.class);\n\n    when(environment.getProperty(\"app.id\")).thenReturn(anotherAppId);\n    when(environment.getProperty(ConfigConsts.APOLLO_CLUSTER_KEY)).thenReturn(anotherCluster);\n    when(environment.getProperty(\"apollo.cacheDir\")).thenReturn(anotherCacheDir);\n    when(environment.getProperty(ConfigConsts.APOLLO_META_KEY)).thenReturn(anotherApolloMeta);\n\n    apolloApplicationContextInitializer.initializeSystemProperty(environment);\n\n    assertEquals(someAppId, System.getProperty(\"app.id\"));\n    assertEquals(someCluster, System.getProperty(ConfigConsts.APOLLO_CLUSTER_KEY));\n    assertEquals(someCacheDir, System.getProperty(\"apollo.cacheDir\"));\n    assertEquals(someApolloMeta, System.getProperty(ConfigConsts.APOLLO_META_KEY));\n  }\n","realPath":"apollo-client/src/test/java/com/ctrip/framework/apollo/spring/boot/ApolloApplicationContextInitializerTest.java","repoName":"apollo","snippetEndLine":0,"snippetStartLine":0,"startLine":70,"status":"M"}],"commitId":"9a6f8e277f678fa583a23f551ed1648d5e13bdfa","commitMessage":"@@@feature: add Spring Boot 2.4 config data loader support (#3754)\n\n* config-data\n\n* config-data move\n\n* config-data commont\n\n* config-data change name\n\n* config-data adjust\n\n* config-data listening type\n\n* config-data fill system property\n\n* config-data rename\n\n* config-data log\n\n* config-data comment\n\n* config-data lazy log message\n\n* spi\n\n* rename\n\n* move\n\n* rename\n\n* add license\n\n* webflux optional\n\n* adjust ApolloClientProperties\n\n* unit test\n\n* rename\n\n* remove kebab case convert\n\n* add test\n\n* make apollo system properties valid as kebab case\n\n* apollo.config-service\n\n* adjust test\n\n* format pom\n\n* format code\n\n* test compatible\n\n* adjust test\n\n* add configuration-metadata\n\n* fix HttpBasicFilter\n\n* add HttpBasicFilter test\n\n* move\n\n* format pom\n\n* adjust pom for test\n\n* consts add environment variables key\n\n* compatible apollo.cacheDir\n\n* compatible apollo.accesskey.secret\n\n* compatible apollo.configServices\n\n* add license\n\n* deferred logger\n\n* adjust loader logic\n\n* add PropertySourcesProcessor\n\n* add comment\n\n* adjust order\n\n* adjust code\n\n* remove authentication\n\n* adjust pom\n\n* remove authentication filter\n\n* update user guide\n\n* remove authentication properties bean\n\n* add changes log\n\n* add user guide\n\n* remove authentication enum\n\n* replay deferred log on failed\n\n* force disable apollo bootstrap to avoid conflict\n\n* add warn to force disable apollo bootstrap\n\n* fix unit test\n\n* add warn to bootstrap eager load\n\n* move WebApplicationType detect to listener\n\n* clean up code of ApolloConfigDataLoader\n\n* Update apollo-client-config-data/src/main/java/com/ctrip/framework/apollo/config/data/importer/ApolloConfigDataLoaderInitializer.java\n\nCo-authored-by: wxq <Anilople@outlook.com>\n\n* Update apollo-client-config-data/src/main/java/com/ctrip/framework/apollo/config/data/importer/ApolloConfigDataLoaderInitializer.java\n\nCo-authored-by: wxq <Anilople@outlook.com>\n\n* Update apollo-core/src/main/java/com/ctrip/framework/apollo/core/utils/DeprecatedPropertyNotifyUtil.java\n\nCo-authored-by: wxq <Anilople@outlook.com>\n\n* clean up the no use code\n\n* impl equals and hashCode\n\n* add compatible unit test for apollo.configService\n\n* cleanup unit test\n\n* cleanup test pom\n\n* fix unit test\n\nCo-authored-by: wxq <Anilople@outlook.com>","date":"2021-06-26 21:10:49","modifiedFileCount":"15","status":"M","submitter":"vdisk-group"}]
