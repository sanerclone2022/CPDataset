[{"authorTime":"2016-06-16 14:58:03","codes":[{"authorDate":"2018-07-24 02:11:59","commitOrder":2,"curCode":"  public NamespaceEnvRolesAssignedUsers getNamespaceEnvRoles(@PathVariable String appId, @PathVariable String env, @PathVariable String namespaceName) {\n\n    \r\n    if (null == EnvUtils.transformEnv(env)) {\n      throw new BadRequestException(\"env is illegal\");\n    }\n\n    NamespaceEnvRolesAssignedUsers assignedUsers = new NamespaceEnvRolesAssignedUsers();\n    assignedUsers.setNamespaceName(namespaceName);\n    assignedUsers.setAppId(appId);\n    assignedUsers.setEnv(Env.fromString(env));\n\n    Set<UserInfo> releaseNamespaceUsers =\n        rolePermissionService.queryUsersWithRole(RoleUtils.buildReleaseNamespaceRoleName(appId, namespaceName, env));\n    assignedUsers.setReleaseRoleUsers(releaseNamespaceUsers);\n\n    Set<UserInfo> modifyNamespaceUsers =\n        rolePermissionService.queryUsersWithRole(RoleUtils.buildModifyNamespaceRoleName(appId, namespaceName, env));\n    assignedUsers.setModifyRoleUsers(modifyNamespaceUsers);\n\n    return assignedUsers;\n  }\n","date":"2018-07-24 02:11:59","endLine":119,"groupId":"759","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"getNamespaceEnvRoles","params":"(@PathVariableStringappId@@PathVariableStringenv@@PathVariableStringnamespaceName)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-apollo-10-0.7/blobInfo/CC_OUT/blobs/73/ddce86285ab191b215ab939f98b6cf2019d1c8.src","preCode":"  public NamespaceEnvRolesAssignedUsers getNamespaceEnvRoles(@PathVariable String appId, @PathVariable String env, @PathVariable String namespaceName) {\n\n    \r\n    if (null == EnvUtils.transformEnv(env)) {\n      throw new BadRequestException(\"env is illegal\");\n    }\n\n    NamespaceEnvRolesAssignedUsers assignedUsers = new NamespaceEnvRolesAssignedUsers();\n    assignedUsers.setNamespaceName(namespaceName);\n    assignedUsers.setAppId(appId);\n    assignedUsers.setEnv(Env.fromString(env));\n\n    Set<UserInfo> releaseNamespaceUsers =\n        rolePermissionService.queryUsersWithRole(RoleUtils.buildReleaseNamespaceRoleName(appId, namespaceName, env));\n    assignedUsers.setReleaseRoleUsers(releaseNamespaceUsers);\n\n    Set<UserInfo> modifyNamespaceUsers =\n        rolePermissionService.queryUsersWithRole(RoleUtils.buildModifyNamespaceRoleName(appId, namespaceName, env));\n    assignedUsers.setModifyRoleUsers(modifyNamespaceUsers);\n\n    return assignedUsers;\n  }\n","realPath":"apollo-portal/src/main/java/com/ctrip/framework/apollo/portal/controller/PermissionController.java","repoName":"apollo","snippetEndLine":0,"snippetStartLine":0,"startLine":98,"status":"B"},{"authorDate":"2016-06-16 14:58:03","commitOrder":2,"curCode":"  public NamespaceRolesAssignedUsers getNamespaceRoles(@PathVariable String appId, @PathVariable String namespaceName){\n\n    NamespaceRolesAssignedUsers assignedUsers = new NamespaceRolesAssignedUsers();\n    assignedUsers.setNamespaceName(namespaceName);\n    assignedUsers.setAppId(appId);\n\n    Set<UserInfo> releaseNamespaceUsers =\n        rolePermissionService.queryUsersWithRole(RoleUtils.buildReleaseNamespaceRoleName(appId, namespaceName));\n    assignedUsers.setReleaseRoleUsers(releaseNamespaceUsers);\n\n    Set<UserInfo> modifyNamespaceUsers =\n        rolePermissionService.queryUsersWithRole(RoleUtils.buildModifyNamespaceRoleName(appId, namespaceName));\n    assignedUsers.setModifyRoleUsers(modifyNamespaceUsers);\n\n    return assignedUsers;\n  }\n","date":"2016-06-16 14:58:03","endLine":77,"groupId":"1880","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"getNamespaceRoles","params":"(@PathVariableStringappId@@PathVariableStringnamespaceName)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-apollo-10-0.7/blobInfo/CC_OUT/blobs/f8/4eb48da8834095b01004211435f13121f75597.src","preCode":"  public NamespaceRolesAssignedUsers getNamespaceRoles(@PathVariable String appId, @PathVariable String namespaceName){\n\n    NamespaceRolesAssignedUsers assignedUsers = new NamespaceRolesAssignedUsers();\n    assignedUsers.setNamespaceName(namespaceName);\n    assignedUsers.setAppId(appId);\n\n    Set<UserInfo> releaseNamespaceUsers =\n        rolePermissionService.queryUsersWithRole(RoleUtils.buildReleaseNamespaceRoleName(appId, namespaceName));\n    assignedUsers.setReleaseRoleUsers(releaseNamespaceUsers);\n\n    Set<UserInfo> modifyNamespaceUsers =\n        rolePermissionService.queryUsersWithRole(RoleUtils.buildModifyNamespaceRoleName(appId, namespaceName));\n    assignedUsers.setModifyRoleUsers(modifyNamespaceUsers);\n\n    return assignedUsers;\n  }\n","realPath":"apollo-portal/src/main/java/com/ctrip/framework/apollo/portal/controller/PermissionController.java","repoName":"apollo","snippetEndLine":0,"snippetStartLine":0,"startLine":62,"status":"NB"}],"commitId":"0bc91cc11464b1a27ef5dd227615995cb8db00a1","commitMessage":"@@@Merge pull request #1282 from nobodyiam/branch_env_permission\n\nSupport role permissions per environment","date":"2018-07-24 02:11:59","modifiedFileCount":"19","status":"M","submitter":"Jason Song"},{"authorTime":"2016-06-16 14:58:03","codes":[{"authorDate":"2018-08-07 21:27:48","commitOrder":3,"curCode":"  public NamespaceEnvRolesAssignedUsers getNamespaceEnvRoles(@PathVariable String appId, @PathVariable String env, @PathVariable String namespaceName) {\n\n    \r\n    if (Env.UNKNOWN == EnvUtils.transformEnv(env)) {\n      throw new BadRequestException(\"env is illegal\");\n    }\n\n    NamespaceEnvRolesAssignedUsers assignedUsers = new NamespaceEnvRolesAssignedUsers();\n    assignedUsers.setNamespaceName(namespaceName);\n    assignedUsers.setAppId(appId);\n    assignedUsers.setEnv(Env.fromString(env));\n\n    Set<UserInfo> releaseNamespaceUsers =\n        rolePermissionService.queryUsersWithRole(RoleUtils.buildReleaseNamespaceRoleName(appId, namespaceName, env));\n    assignedUsers.setReleaseRoleUsers(releaseNamespaceUsers);\n\n    Set<UserInfo> modifyNamespaceUsers =\n        rolePermissionService.queryUsersWithRole(RoleUtils.buildModifyNamespaceRoleName(appId, namespaceName, env));\n    assignedUsers.setModifyRoleUsers(modifyNamespaceUsers);\n\n    return assignedUsers;\n  }\n","date":"2018-08-07 21:27:48","endLine":119,"groupId":"759","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"getNamespaceEnvRoles","params":"(@PathVariableStringappId@@PathVariableStringenv@@PathVariableStringnamespaceName)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-apollo-10-0.7/blobInfo/CC_OUT/blobs/6c/29b417a8c27da2a89dc3166e164e0437da61d8.src","preCode":"  public NamespaceEnvRolesAssignedUsers getNamespaceEnvRoles(@PathVariable String appId, @PathVariable String env, @PathVariable String namespaceName) {\n\n    \r\n    if (null == EnvUtils.transformEnv(env)) {\n      throw new BadRequestException(\"env is illegal\");\n    }\n\n    NamespaceEnvRolesAssignedUsers assignedUsers = new NamespaceEnvRolesAssignedUsers();\n    assignedUsers.setNamespaceName(namespaceName);\n    assignedUsers.setAppId(appId);\n    assignedUsers.setEnv(Env.fromString(env));\n\n    Set<UserInfo> releaseNamespaceUsers =\n        rolePermissionService.queryUsersWithRole(RoleUtils.buildReleaseNamespaceRoleName(appId, namespaceName, env));\n    assignedUsers.setReleaseRoleUsers(releaseNamespaceUsers);\n\n    Set<UserInfo> modifyNamespaceUsers =\n        rolePermissionService.queryUsersWithRole(RoleUtils.buildModifyNamespaceRoleName(appId, namespaceName, env));\n    assignedUsers.setModifyRoleUsers(modifyNamespaceUsers);\n\n    return assignedUsers;\n  }\n","realPath":"apollo-portal/src/main/java/com/ctrip/framework/apollo/portal/controller/PermissionController.java","repoName":"apollo","snippetEndLine":0,"snippetStartLine":0,"startLine":98,"status":"M"},{"authorDate":"2016-06-16 14:58:03","commitOrder":3,"curCode":"  public NamespaceRolesAssignedUsers getNamespaceRoles(@PathVariable String appId, @PathVariable String namespaceName){\n\n    NamespaceRolesAssignedUsers assignedUsers = new NamespaceRolesAssignedUsers();\n    assignedUsers.setNamespaceName(namespaceName);\n    assignedUsers.setAppId(appId);\n\n    Set<UserInfo> releaseNamespaceUsers =\n        rolePermissionService.queryUsersWithRole(RoleUtils.buildReleaseNamespaceRoleName(appId, namespaceName));\n    assignedUsers.setReleaseRoleUsers(releaseNamespaceUsers);\n\n    Set<UserInfo> modifyNamespaceUsers =\n        rolePermissionService.queryUsersWithRole(RoleUtils.buildModifyNamespaceRoleName(appId, namespaceName));\n    assignedUsers.setModifyRoleUsers(modifyNamespaceUsers);\n\n    return assignedUsers;\n  }\n","date":"2016-06-16 14:58:03","endLine":77,"groupId":"1880","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"getNamespaceRoles","params":"(@PathVariableStringappId@@PathVariableStringnamespaceName)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-apollo-10-0.7/blobInfo/CC_OUT/blobs/f8/4eb48da8834095b01004211435f13121f75597.src","preCode":"  public NamespaceRolesAssignedUsers getNamespaceRoles(@PathVariable String appId, @PathVariable String namespaceName){\n\n    NamespaceRolesAssignedUsers assignedUsers = new NamespaceRolesAssignedUsers();\n    assignedUsers.setNamespaceName(namespaceName);\n    assignedUsers.setAppId(appId);\n\n    Set<UserInfo> releaseNamespaceUsers =\n        rolePermissionService.queryUsersWithRole(RoleUtils.buildReleaseNamespaceRoleName(appId, namespaceName));\n    assignedUsers.setReleaseRoleUsers(releaseNamespaceUsers);\n\n    Set<UserInfo> modifyNamespaceUsers =\n        rolePermissionService.queryUsersWithRole(RoleUtils.buildModifyNamespaceRoleName(appId, namespaceName));\n    assignedUsers.setModifyRoleUsers(modifyNamespaceUsers);\n\n    return assignedUsers;\n  }\n","realPath":"apollo-portal/src/main/java/com/ctrip/framework/apollo/portal/controller/PermissionController.java","repoName":"apollo","snippetEndLine":0,"snippetStartLine":0,"startLine":62,"status":"N"}],"commitId":"8e6ed96853b491eb8767c2aecc31e0bfc3c0838d","commitMessage":"@@@Merge pull request #1340 from ctripcorp/1.x\n\nmerge 1.x to master","date":"2018-08-07 21:27:48","modifiedFileCount":"22","status":"M","submitter":"Jason Song"},{"authorTime":"2016-06-16 14:58:03","codes":[{"authorDate":"2020-01-05 17:23:02","commitOrder":4,"curCode":"  public NamespaceEnvRolesAssignedUsers getNamespaceEnvRoles(@PathVariable String appId, @PathVariable String env, @PathVariable String namespaceName) {\n\n    \r\n    if (Env.UNKNOWN == Env.transformEnv(env)) {\n      throw new BadRequestException(\"env is illegal\");\n    }\n\n    NamespaceEnvRolesAssignedUsers assignedUsers = new NamespaceEnvRolesAssignedUsers();\n    assignedUsers.setNamespaceName(namespaceName);\n    assignedUsers.setAppId(appId);\n    assignedUsers.setEnv(Env.fromString(env));\n\n    Set<UserInfo> releaseNamespaceUsers =\n        rolePermissionService.queryUsersWithRole(RoleUtils.buildReleaseNamespaceRoleName(appId, namespaceName, env));\n    assignedUsers.setReleaseRoleUsers(releaseNamespaceUsers);\n\n    Set<UserInfo> modifyNamespaceUsers =\n        rolePermissionService.queryUsersWithRole(RoleUtils.buildModifyNamespaceRoleName(appId, namespaceName, env));\n    assignedUsers.setModifyRoleUsers(modifyNamespaceUsers);\n\n    return assignedUsers;\n  }\n","date":"2020-01-05 17:23:02","endLine":132,"groupId":"759","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"getNamespaceEnvRoles","params":"(@PathVariableStringappId@@PathVariableStringenv@@PathVariableStringnamespaceName)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-apollo-10-0.7/blobInfo/CC_OUT/blobs/c6/a3cbacc8eb60091b7fb58267fbfcb2e68027e7.src","preCode":"  public NamespaceEnvRolesAssignedUsers getNamespaceEnvRoles(@PathVariable String appId, @PathVariable String env, @PathVariable String namespaceName) {\n\n    \r\n    if (Env.UNKNOWN == EnvUtils.transformEnv(env)) {\n      throw new BadRequestException(\"env is illegal\");\n    }\n\n    NamespaceEnvRolesAssignedUsers assignedUsers = new NamespaceEnvRolesAssignedUsers();\n    assignedUsers.setNamespaceName(namespaceName);\n    assignedUsers.setAppId(appId);\n    assignedUsers.setEnv(Env.fromString(env));\n\n    Set<UserInfo> releaseNamespaceUsers =\n        rolePermissionService.queryUsersWithRole(RoleUtils.buildReleaseNamespaceRoleName(appId, namespaceName, env));\n    assignedUsers.setReleaseRoleUsers(releaseNamespaceUsers);\n\n    Set<UserInfo> modifyNamespaceUsers =\n        rolePermissionService.queryUsersWithRole(RoleUtils.buildModifyNamespaceRoleName(appId, namespaceName, env));\n    assignedUsers.setModifyRoleUsers(modifyNamespaceUsers);\n\n    return assignedUsers;\n  }\n","realPath":"apollo-portal/src/main/java/com/ctrip/framework/apollo/portal/controller/PermissionController.java","repoName":"apollo","snippetEndLine":0,"snippetStartLine":0,"startLine":111,"status":"M"},{"authorDate":"2016-06-16 14:58:03","commitOrder":4,"curCode":"  public NamespaceRolesAssignedUsers getNamespaceRoles(@PathVariable String appId, @PathVariable String namespaceName){\n\n    NamespaceRolesAssignedUsers assignedUsers = new NamespaceRolesAssignedUsers();\n    assignedUsers.setNamespaceName(namespaceName);\n    assignedUsers.setAppId(appId);\n\n    Set<UserInfo> releaseNamespaceUsers =\n        rolePermissionService.queryUsersWithRole(RoleUtils.buildReleaseNamespaceRoleName(appId, namespaceName));\n    assignedUsers.setReleaseRoleUsers(releaseNamespaceUsers);\n\n    Set<UserInfo> modifyNamespaceUsers =\n        rolePermissionService.queryUsersWithRole(RoleUtils.buildModifyNamespaceRoleName(appId, namespaceName));\n    assignedUsers.setModifyRoleUsers(modifyNamespaceUsers);\n\n    return assignedUsers;\n  }\n","date":"2016-06-16 14:58:03","endLine":77,"groupId":"1880","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"getNamespaceRoles","params":"(@PathVariableStringappId@@PathVariableStringnamespaceName)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-apollo-10-0.7/blobInfo/CC_OUT/blobs/f8/4eb48da8834095b01004211435f13121f75597.src","preCode":"  public NamespaceRolesAssignedUsers getNamespaceRoles(@PathVariable String appId, @PathVariable String namespaceName){\n\n    NamespaceRolesAssignedUsers assignedUsers = new NamespaceRolesAssignedUsers();\n    assignedUsers.setNamespaceName(namespaceName);\n    assignedUsers.setAppId(appId);\n\n    Set<UserInfo> releaseNamespaceUsers =\n        rolePermissionService.queryUsersWithRole(RoleUtils.buildReleaseNamespaceRoleName(appId, namespaceName));\n    assignedUsers.setReleaseRoleUsers(releaseNamespaceUsers);\n\n    Set<UserInfo> modifyNamespaceUsers =\n        rolePermissionService.queryUsersWithRole(RoleUtils.buildModifyNamespaceRoleName(appId, namespaceName));\n    assignedUsers.setModifyRoleUsers(modifyNamespaceUsers);\n\n    return assignedUsers;\n  }\n","realPath":"apollo-portal/src/main/java/com/ctrip/framework/apollo/portal/controller/PermissionController.java","repoName":"apollo","snippetEndLine":0,"snippetStartLine":0,"startLine":62,"status":"N"}],"commitId":"42edb9da963df986538edcda4ff58d474fb3abed","commitMessage":"@@@Dynamic environment for apollo-portal (#2867)\n\n\n","date":"2020-01-05 17:23:02","modifiedFileCount":"63","status":"M","submitter":"Anilople"},{"authorTime":"2016-06-16 14:58:03","codes":[{"authorDate":"2020-09-11 20:01:31","commitOrder":5,"curCode":"  public NamespaceEnvRolesAssignedUsers getNamespaceEnvRoles(@PathVariable String appId, @PathVariable String env, @PathVariable String namespaceName) {\n\n    \r\n    if (Env.UNKNOWN == Env.transformEnv(env)) {\n      throw new BadRequestException(\"env is illegal\");\n    }\n\n    NamespaceEnvRolesAssignedUsers assignedUsers = new NamespaceEnvRolesAssignedUsers();\n    assignedUsers.setNamespaceName(namespaceName);\n    assignedUsers.setAppId(appId);\n    assignedUsers.setEnv(Env.valueOf(env));\n\n    Set<UserInfo> releaseNamespaceUsers =\n        rolePermissionService.queryUsersWithRole(RoleUtils.buildReleaseNamespaceRoleName(appId, namespaceName, env));\n    assignedUsers.setReleaseRoleUsers(releaseNamespaceUsers);\n\n    Set<UserInfo> modifyNamespaceUsers =\n        rolePermissionService.queryUsersWithRole(RoleUtils.buildModifyNamespaceRoleName(appId, namespaceName, env));\n    assignedUsers.setModifyRoleUsers(modifyNamespaceUsers);\n\n    return assignedUsers;\n  }\n","date":"2020-09-11 20:01:31","endLine":132,"groupId":"10167","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"getNamespaceEnvRoles","params":"(@PathVariableStringappId@@PathVariableStringenv@@PathVariableStringnamespaceName)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-apollo-10-0.7/blobInfo/CC_OUT/blobs/1d/8a4d9049bd7f8ca714c5aec3b930cda0a1157c.src","preCode":"  public NamespaceEnvRolesAssignedUsers getNamespaceEnvRoles(@PathVariable String appId, @PathVariable String env, @PathVariable String namespaceName) {\n\n    \r\n    if (Env.UNKNOWN == Env.transformEnv(env)) {\n      throw new BadRequestException(\"env is illegal\");\n    }\n\n    NamespaceEnvRolesAssignedUsers assignedUsers = new NamespaceEnvRolesAssignedUsers();\n    assignedUsers.setNamespaceName(namespaceName);\n    assignedUsers.setAppId(appId);\n    assignedUsers.setEnv(Env.fromString(env));\n\n    Set<UserInfo> releaseNamespaceUsers =\n        rolePermissionService.queryUsersWithRole(RoleUtils.buildReleaseNamespaceRoleName(appId, namespaceName, env));\n    assignedUsers.setReleaseRoleUsers(releaseNamespaceUsers);\n\n    Set<UserInfo> modifyNamespaceUsers =\n        rolePermissionService.queryUsersWithRole(RoleUtils.buildModifyNamespaceRoleName(appId, namespaceName, env));\n    assignedUsers.setModifyRoleUsers(modifyNamespaceUsers);\n\n    return assignedUsers;\n  }\n","realPath":"apollo-portal/src/main/java/com/ctrip/framework/apollo/portal/controller/PermissionController.java","repoName":"apollo","snippetEndLine":0,"snippetStartLine":0,"startLine":111,"status":"M"},{"authorDate":"2016-06-16 14:58:03","commitOrder":5,"curCode":"  public NamespaceRolesAssignedUsers getNamespaceRoles(@PathVariable String appId, @PathVariable String namespaceName){\n\n    NamespaceRolesAssignedUsers assignedUsers = new NamespaceRolesAssignedUsers();\n    assignedUsers.setNamespaceName(namespaceName);\n    assignedUsers.setAppId(appId);\n\n    Set<UserInfo> releaseNamespaceUsers =\n        rolePermissionService.queryUsersWithRole(RoleUtils.buildReleaseNamespaceRoleName(appId, namespaceName));\n    assignedUsers.setReleaseRoleUsers(releaseNamespaceUsers);\n\n    Set<UserInfo> modifyNamespaceUsers =\n        rolePermissionService.queryUsersWithRole(RoleUtils.buildModifyNamespaceRoleName(appId, namespaceName));\n    assignedUsers.setModifyRoleUsers(modifyNamespaceUsers);\n\n    return assignedUsers;\n  }\n","date":"2016-06-16 14:58:03","endLine":77,"groupId":"10167","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"getNamespaceRoles","params":"(@PathVariableStringappId@@PathVariableStringnamespaceName)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-apollo-10-0.7/blobInfo/CC_OUT/blobs/f8/4eb48da8834095b01004211435f13121f75597.src","preCode":"  public NamespaceRolesAssignedUsers getNamespaceRoles(@PathVariable String appId, @PathVariable String namespaceName){\n\n    NamespaceRolesAssignedUsers assignedUsers = new NamespaceRolesAssignedUsers();\n    assignedUsers.setNamespaceName(namespaceName);\n    assignedUsers.setAppId(appId);\n\n    Set<UserInfo> releaseNamespaceUsers =\n        rolePermissionService.queryUsersWithRole(RoleUtils.buildReleaseNamespaceRoleName(appId, namespaceName));\n    assignedUsers.setReleaseRoleUsers(releaseNamespaceUsers);\n\n    Set<UserInfo> modifyNamespaceUsers =\n        rolePermissionService.queryUsersWithRole(RoleUtils.buildModifyNamespaceRoleName(appId, namespaceName));\n    assignedUsers.setModifyRoleUsers(modifyNamespaceUsers);\n\n    return assignedUsers;\n  }\n","realPath":"apollo-portal/src/main/java/com/ctrip/framework/apollo/portal/controller/PermissionController.java","repoName":"apollo","snippetEndLine":0,"snippetStartLine":0,"startLine":62,"status":"N"}],"commitId":"e321a8e7f315b2be45d38923e9bec3e3145332fe","commitMessage":"@@@Simplify code (#3290)\n\n","date":"2020-09-11 20:01:31","modifiedFileCount":"87","status":"M","submitter":"waters"}]
