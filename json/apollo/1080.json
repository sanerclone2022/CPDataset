[{"authorTime":"2020-03-14 20:43:54","codes":[{"authorDate":"2018-08-07 21:27:48","commitOrder":2,"curCode":"  public void testWithSystemProperty() throws Exception {\n    String someDevMetaAddress = \"someMetaAddress\";\n    String someFatMetaAddress = \"someFatMetaAddress\";\n    System.setProperty(\"dev_meta\", someDevMetaAddress);\n    System.setProperty(\"fat_meta\", someFatMetaAddress);\n\n    LegacyMetaServerProvider legacyMetaServerProvider = new LegacyMetaServerProvider();\n\n    assertEquals(someDevMetaAddress, legacyMetaServerProvider.getMetaServerAddress(Env.DEV));\n    assertEquals(someFatMetaAddress, legacyMetaServerProvider.getMetaServerAddress(Env.FAT));\n  }\n","date":"2018-08-07 21:27:48","endLine":35,"groupId":"1561","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testWithSystemProperty","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-apollo-10-0.7/blobInfo/CC_OUT/blobs/44/45e6a3d5be50c60423a9b7ffe38947f7900b80.src","preCode":"  public void testWithSystemProperty() throws Exception {\n    String someDevMetaAddress = \"someMetaAddress\";\n    String someFatMetaAddress = \"someFatMetaAddress\";\n    System.setProperty(\"dev_meta\", someDevMetaAddress);\n    System.setProperty(\"fat_meta\", someFatMetaAddress);\n\n    LegacyMetaServerProvider legacyMetaServerProvider = new LegacyMetaServerProvider();\n\n    assertEquals(someDevMetaAddress, legacyMetaServerProvider.getMetaServerAddress(Env.DEV));\n    assertEquals(someFatMetaAddress, legacyMetaServerProvider.getMetaServerAddress(Env.FAT));\n  }\n","realPath":"apollo-core/src/test/java/com/ctrip/framework/apollo/core/internals/LegacyMetaServerProviderTest.java","repoName":"apollo","snippetEndLine":0,"snippetStartLine":0,"startLine":25,"status":"NB"},{"authorDate":"2020-03-14 20:43:54","commitOrder":2,"curCode":"  public void testDynamicEnvironmentFromSystemProperty() {\n    String someDevMetaAddress = \"someMetaAddress\";\n    String someFatMetaAddress = \"someFatMetaAddress\";\n    System.setProperty(\"dev_meta\", someDevMetaAddress);\n    System.setProperty(\"fat_meta\", someFatMetaAddress);\n    \r\n    defaultPortalMetaServerProvider.reload();\n    assertEquals(someDevMetaAddress, defaultPortalMetaServerProvider.getMetaServerAddress(Env.DEV));\n    assertEquals(someFatMetaAddress, defaultPortalMetaServerProvider.getMetaServerAddress(Env.FAT));\n\n    String randomAddress = \"randomAddress\";\n    String randomEnvironment = \"randomEnvironment\";\n    System.setProperty(randomEnvironment + \"_meta\", randomAddress);\n    \r\n    defaultPortalMetaServerProvider.reload();\n    assertEquals(randomAddress,\n        defaultPortalMetaServerProvider.getMetaServerAddress(Env.valueOf(randomEnvironment)));\n\n    \r\n    System.clearProperty(randomEnvironment + \"_meta\");\n  }\n","date":"2020-03-14 20:43:54","endLine":52,"groupId":"1561","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testDynamicEnvironmentFromSystemProperty","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-apollo-10-0.7/blobInfo/CC_OUT/blobs/36/121e0c4627092246fe2825ee6385e1ef45ca3b.src","preCode":"  public void testDynamicEnvironmentFromSystemProperty() {\n    String someDevMetaAddress = \"someMetaAddress\";\n    String someFatMetaAddress = \"someFatMetaAddress\";\n    System.setProperty(\"dev_meta\", someDevMetaAddress);\n    System.setProperty(\"fat_meta\", someFatMetaAddress);\n    \r\n    defaultPortalMetaServerProvider.reload();\n    assertEquals(someDevMetaAddress, defaultPortalMetaServerProvider.getMetaServerAddress(Env.DEV));\n    assertEquals(someFatMetaAddress, defaultPortalMetaServerProvider.getMetaServerAddress(Env.FAT));\n\n    String randomAddress = \"randomAddress\";\n    String randomEnvironment = \"randomEnvironment\";\n    System.setProperty(randomEnvironment + \"_meta\", randomAddress);\n    \r\n    defaultPortalMetaServerProvider.reload();\n    assertEquals(randomAddress,\n        defaultPortalMetaServerProvider.getMetaServerAddress(Env.valueOf(randomEnvironment)));\n\n    \r\n    System.clearProperty(randomEnvironment + \"_meta\");\n  }\n","realPath":"apollo-portal/src/test/java/com/ctrip/framework/apollo/portal/environment/DefaultPortalMetaServerProviderTest.java","repoName":"apollo","snippetEndLine":0,"snippetStartLine":0,"startLine":32,"status":"B"}],"commitId":"a81d7287014ab8bfc327040a66ac8a5d5510b7e9","commitMessage":"@@@feat(apollo-portal): read dynamic environment from key \"apollo.portal.meta.servers\" in PortalDB.ServerConfig (#2953)\n\n","date":"2020-03-14 20:43:54","modifiedFileCount":"8","status":"M","submitter":"Anilople"},{"authorTime":"2020-03-14 21:50:23","codes":[{"authorDate":"2018-08-07 21:27:48","commitOrder":3,"curCode":"  public void testWithSystemProperty() throws Exception {\n    String someDevMetaAddress = \"someMetaAddress\";\n    String someFatMetaAddress = \"someFatMetaAddress\";\n    System.setProperty(\"dev_meta\", someDevMetaAddress);\n    System.setProperty(\"fat_meta\", someFatMetaAddress);\n\n    LegacyMetaServerProvider legacyMetaServerProvider = new LegacyMetaServerProvider();\n\n    assertEquals(someDevMetaAddress, legacyMetaServerProvider.getMetaServerAddress(Env.DEV));\n    assertEquals(someFatMetaAddress, legacyMetaServerProvider.getMetaServerAddress(Env.FAT));\n  }\n","date":"2018-08-07 21:27:48","endLine":35,"groupId":"1080","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testWithSystemProperty","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-apollo-10-0.7/blobInfo/CC_OUT/blobs/44/45e6a3d5be50c60423a9b7ffe38947f7900b80.src","preCode":"  public void testWithSystemProperty() throws Exception {\n    String someDevMetaAddress = \"someMetaAddress\";\n    String someFatMetaAddress = \"someFatMetaAddress\";\n    System.setProperty(\"dev_meta\", someDevMetaAddress);\n    System.setProperty(\"fat_meta\", someFatMetaAddress);\n\n    LegacyMetaServerProvider legacyMetaServerProvider = new LegacyMetaServerProvider();\n\n    assertEquals(someDevMetaAddress, legacyMetaServerProvider.getMetaServerAddress(Env.DEV));\n    assertEquals(someFatMetaAddress, legacyMetaServerProvider.getMetaServerAddress(Env.FAT));\n  }\n","realPath":"apollo-core/src/test/java/com/ctrip/framework/apollo/core/internals/LegacyMetaServerProviderTest.java","repoName":"apollo","snippetEndLine":0,"snippetStartLine":0,"startLine":25,"status":"N"},{"authorDate":"2020-03-14 21:50:23","commitOrder":3,"curCode":"  public void testDynamicEnvironmentFromSystemProperty() {\n    String someDevMetaAddress = \"someMetaAddress\";\n    String someFatMetaAddress = \"someFatMetaAddress\";\n    System.setProperty(\"dev_meta\", someDevMetaAddress);\n    System.setProperty(\"fat_meta\", someFatMetaAddress);\n    \r\n    defaultPortalMetaServerProvider.reload();\n    assertEquals(someDevMetaAddress, defaultPortalMetaServerProvider.getMetaServerAddress(Env.DEV));\n    assertEquals(someFatMetaAddress, defaultPortalMetaServerProvider.getMetaServerAddress(Env.FAT));\n\n    String randomAddress = \"randomAddress\";\n    String randomEnvironment = \"randomEnvironment\";\n    System.setProperty(randomEnvironment + \"_meta\", randomAddress);\n    assertFalse(defaultPortalMetaServerProvider.exists(Env.addEnvironment(randomEnvironment)));\n    \r\n    defaultPortalMetaServerProvider.reload();\n    assertEquals(randomAddress,\n        defaultPortalMetaServerProvider.getMetaServerAddress(Env.valueOf(randomEnvironment)));\n    assertTrue(defaultPortalMetaServerProvider.exists(Env.addEnvironment(randomEnvironment)));\n\n    \r\n    System.clearProperty(randomEnvironment + \"_meta\");\n  }\n","date":"2020-03-14 22:11:32","endLine":60,"groupId":"1080","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testDynamicEnvironmentFromSystemProperty","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-apollo-10-0.7/blobInfo/CC_OUT/blobs/73/0da37fa1db63919db6e5d55781dc6b0e650dfd.src","preCode":"  public void testDynamicEnvironmentFromSystemProperty() {\n    String someDevMetaAddress = \"someMetaAddress\";\n    String someFatMetaAddress = \"someFatMetaAddress\";\n    System.setProperty(\"dev_meta\", someDevMetaAddress);\n    System.setProperty(\"fat_meta\", someFatMetaAddress);\n    \r\n    defaultPortalMetaServerProvider.reload();\n    assertEquals(someDevMetaAddress, defaultPortalMetaServerProvider.getMetaServerAddress(Env.DEV));\n    assertEquals(someFatMetaAddress, defaultPortalMetaServerProvider.getMetaServerAddress(Env.FAT));\n\n    String randomAddress = \"randomAddress\";\n    String randomEnvironment = \"randomEnvironment\";\n    System.setProperty(randomEnvironment + \"_meta\", randomAddress);\n    \r\n    defaultPortalMetaServerProvider.reload();\n    assertEquals(randomAddress,\n        defaultPortalMetaServerProvider.getMetaServerAddress(Env.valueOf(randomEnvironment)));\n\n    \r\n    System.clearProperty(randomEnvironment + \"_meta\");\n  }\n","realPath":"apollo-portal/src/test/java/com/ctrip/framework/apollo/portal/environment/DefaultPortalMetaServerProviderTest.java","repoName":"apollo","snippetEndLine":0,"snippetStartLine":0,"startLine":38,"status":"M"}],"commitId":"7ca4247fa95b5f502683a15953cd7f51c2b13e0f","commitMessage":"@@@refactor portal meta server address logic a little bit\n","date":"2020-03-14 22:11:32","modifiedFileCount":"8","status":"M","submitter":"Jason Song"}]
