[{"authorTime":"2018-07-24 20:55:04","codes":[{"authorDate":"2017-09-07 18:51:25","commitOrder":3,"curCode":"  public List<UserInfo> searchUsers(String keyword, int offset, int limit) {\n    List<UserPO> users;\n    if (StringUtils.isEmpty(keyword)) {\n      users = userRepository.findFirst20ByEnabled(1);\n    } else {\n      users = userRepository.findByUsernameLikeAndEnabled(\"%\" + keyword + \"%\", 1);\n    }\n\n    List<UserInfo> result = Lists.newArrayList();\n    if (CollectionUtils.isEmpty(users)) {\n      return result;\n    }\n\n    result.addAll(users.stream().map(UserPO::toUserInfo).collect(Collectors.toList()));\n\n    return result;\n  }\n","date":"2017-09-07 18:51:25","endLine":75,"groupId":"550","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"searchUsers","params":"(Stringkeyword@intoffset@intlimit)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-apollo-10-0.7/blobInfo/CC_OUT/blobs/d8/84a66c474a86df1212d456a9a4fbbfa3accc24.src","preCode":"  public List<UserInfo> searchUsers(String keyword, int offset, int limit) {\n    List<UserPO> users;\n    if (StringUtils.isEmpty(keyword)) {\n      users = userRepository.findFirst20ByEnabled(1);\n    } else {\n      users = userRepository.findByUsernameLikeAndEnabled(\"%\" + keyword + \"%\", 1);\n    }\n\n    List<UserInfo> result = Lists.newArrayList();\n    if (CollectionUtils.isEmpty(users)) {\n      return result;\n    }\n\n    result.addAll(users.stream().map(UserPO::toUserInfo).collect(Collectors.toList()));\n\n    return result;\n  }\n","realPath":"apollo-portal/src/main/java/com/ctrip/framework/apollo/portal/spi/springsecurity/SpringSecurityUserService.java","repoName":"apollo","snippetEndLine":0,"snippetStartLine":0,"startLine":59,"status":"NB"},{"authorDate":"2018-07-24 20:55:04","commitOrder":3,"curCode":"  public List<UserInfo> findByUserIds(List<String> userIds) {\n    List<UserPO> users = userRepository.findByUsernameIn(userIds);\n\n    if (CollectionUtils.isEmpty(users)) {\n      return Collections.emptyList();\n    }\n\n    List<UserInfo> result = Lists.newArrayList();\n\n    result.addAll(users.stream().map(UserPO::toUserInfo).collect(Collectors.toList()));\n\n    return result;\n  }\n","date":"2018-07-24 20:55:04","endLine":103,"groupId":"774","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"findByUserIds","params":"(List<String>userIds)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-apollo-10-0.7/blobInfo/CC_OUT/blobs/26/67e82ee8018eec3faf6538834898f8221f983d.src","preCode":"  public List<UserInfo> findByUserIds(List<String> userIds) {\n    List<UserPO> users = userRepository.findByUsernameIn(userIds);\n\n    if (CollectionUtils.isEmpty(users)) {\n      return Collections.emptyList();\n    }\n\n    List<UserInfo> result = Lists.newArrayList();\n\n    result.addAll(users.stream().map(UserPO::toUserInfo).collect(Collectors.toList()));\n\n    return result;\n  }\n","realPath":"apollo-portal/src/main/java/com/ctrip/framework/apollo/portal/spi/springsecurity/SpringSecurityUserService.java","repoName":"apollo","snippetEndLine":0,"snippetStartLine":0,"startLine":91,"status":"B"}],"commitId":"9deb531eacc8e4ae349428b74d5a4f9e72e27ec1","commitMessage":"@@@Merge pull request #1283 from nobodyiam/fix-spring-security-find-users\n\nimplement find users for spring security user service","date":"2018-07-24 20:55:04","modifiedFileCount":"2","status":"M","submitter":"Jason Song"},{"authorTime":"2018-07-24 20:55:04","codes":[{"authorDate":"2021-05-25 19:36:30","commitOrder":4,"curCode":"  public List<UserInfo> searchUsers(String keyword, int offset, int limit) {\n    List<UserPO> users = this.findUsers(keyword);\n    if (CollectionUtils.isEmpty(users)) {\n      return Collections.emptyList();\n    }\n    return users.stream().map(UserPO::toUserInfo)\n        .collect(Collectors.toList());\n  }\n","date":"2021-05-25 19:36:30","endLine":90,"groupId":"22","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"searchUsers","params":"(Stringkeyword@intoffset@intlimit)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-apollo-10-0.7/blobInfo/CC_OUT/blobs/50/60e2c965756821c1aff8ea648354189fec9e3b.src","preCode":"  public List<UserInfo> searchUsers(String keyword, int offset, int limit) {\n    List<UserPO> users;\n    if (StringUtils.isEmpty(keyword)) {\n      users = userRepository.findFirst20ByEnabled(1);\n    } else {\n      users = userRepository.findByUsernameLikeAndEnabled(\"%\" + keyword + \"%\", 1);\n    }\n\n    List<UserInfo> result = Lists.newArrayList();\n    if (CollectionUtils.isEmpty(users)) {\n      return result;\n    }\n\n    result.addAll(users.stream().map(UserPO::toUserInfo).collect(Collectors.toList()));\n\n    return result;\n  }\n","realPath":"apollo-portal/src/main/java/com/ctrip/framework/apollo/portal/spi/springsecurity/SpringSecurityUserService.java","repoName":"apollo","snippetEndLine":0,"snippetStartLine":0,"startLine":83,"status":"M"},{"authorDate":"2018-07-24 20:55:04","commitOrder":4,"curCode":"  public List<UserInfo> findByUserIds(List<String> userIds) {\n    List<UserPO> users = userRepository.findByUsernameIn(userIds);\n\n    if (CollectionUtils.isEmpty(users)) {\n      return Collections.emptyList();\n    }\n\n    List<UserInfo> result = Lists.newArrayList();\n\n    result.addAll(users.stream().map(UserPO::toUserInfo).collect(Collectors.toList()));\n\n    return result;\n  }\n","date":"2018-07-24 20:55:04","endLine":103,"groupId":"774","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"findByUserIds","params":"(List<String>userIds)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-apollo-10-0.7/blobInfo/CC_OUT/blobs/26/67e82ee8018eec3faf6538834898f8221f983d.src","preCode":"  public List<UserInfo> findByUserIds(List<String> userIds) {\n    List<UserPO> users = userRepository.findByUsernameIn(userIds);\n\n    if (CollectionUtils.isEmpty(users)) {\n      return Collections.emptyList();\n    }\n\n    List<UserInfo> result = Lists.newArrayList();\n\n    result.addAll(users.stream().map(UserPO::toUserInfo).collect(Collectors.toList()));\n\n    return result;\n  }\n","realPath":"apollo-portal/src/main/java/com/ctrip/framework/apollo/portal/spi/springsecurity/SpringSecurityUserService.java","repoName":"apollo","snippetEndLine":0,"snippetStartLine":0,"startLine":91,"status":"N"}],"commitId":"150955f0b0f8a479cc50bc096a83258f7f349c18","commitMessage":"@@@add Oidc preferred username (#3629)\n\n","date":"2021-05-25 19:36:30","modifiedFileCount":"19","status":"M","submitter":"vdisk-group"},{"authorTime":"2021-07-10 16:12:20","codes":[{"authorDate":"2021-05-25 19:36:30","commitOrder":5,"curCode":"  public List<UserInfo> searchUsers(String keyword, int offset, int limit) {\n    List<UserPO> users = this.findUsers(keyword);\n    if (CollectionUtils.isEmpty(users)) {\n      return Collections.emptyList();\n    }\n    return users.stream().map(UserPO::toUserInfo)\n        .collect(Collectors.toList());\n  }\n","date":"2021-05-25 19:36:30","endLine":90,"groupId":"10189","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"searchUsers","params":"(Stringkeyword@intoffset@intlimit)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-apollo-10-0.7/blobInfo/CC_OUT/blobs/50/60e2c965756821c1aff8ea648354189fec9e3b.src","preCode":"  public List<UserInfo> searchUsers(String keyword, int offset, int limit) {\n    List<UserPO> users = this.findUsers(keyword);\n    if (CollectionUtils.isEmpty(users)) {\n      return Collections.emptyList();\n    }\n    return users.stream().map(UserPO::toUserInfo)\n        .collect(Collectors.toList());\n  }\n","realPath":"apollo-portal/src/main/java/com/ctrip/framework/apollo/portal/spi/springsecurity/SpringSecurityUserService.java","repoName":"apollo","snippetEndLine":0,"snippetStartLine":0,"startLine":83,"status":"N"},{"authorDate":"2021-07-10 16:12:20","commitOrder":5,"curCode":"  public List<UserInfo> findByUserIds(List<String> userIds) {\n    List<UserPO> users = userRepository.findByUsernameIn(userIds);\n\n    if (CollectionUtils.isEmpty(users)) {\n      return Collections.emptyList();\n    }\n\n    return users.stream().map(UserPO::toUserInfo).collect(Collectors.toList());\n  }\n","date":"2021-07-10 16:12:20","endLine":124,"groupId":"10189","id":6,"instanceNumber":2,"isCurCommit":1,"methodName":"findByUserIds","params":"(List<String>userIds)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-apollo-10-0.7/blobInfo/CC_OUT/blobs/8f/54680f8fd161c80b33d67ad96fa3844ddc17d0.src","preCode":"  public List<UserInfo> findByUserIds(List<String> userIds) {\n    List<UserPO> users = userRepository.findByUsernameIn(userIds);\n\n    if (CollectionUtils.isEmpty(users)) {\n      return Collections.emptyList();\n    }\n\n    List<UserInfo> result = Lists.newArrayList();\n\n    result.addAll(users.stream().map(UserPO::toUserInfo).collect(Collectors.toList()));\n\n    return result;\n  }\n","realPath":"apollo-portal/src/main/java/com/ctrip/framework/apollo/portal/spi/springsecurity/SpringSecurityUserService.java","repoName":"apollo","snippetEndLine":0,"snippetStartLine":0,"startLine":116,"status":"M"}],"commitId":"72a04989d049e182dd409e2a76e5c0e4448a8a2d","commitMessage":"@@@feature: add the delegating password encoder for apollo-portal simple auth (#3804)\n\n* DelegatingPasswordEncoder\n\n* sql\n\n* extend Password to 512\n\n* update CHANGES.md\n\n* add an adapter for old password\n\n* fix the unit test NullPointerException\n\n* only throws Exception on password has an id\n\n* mark add prefix for `Users`.`Password` optional\n\n* modify unit test\n\n* remove {bcrypt} prefix on sql","date":"2021-07-10 16:12:20","modifiedFileCount":"4","status":"M","submitter":"vdisk-group"}]
