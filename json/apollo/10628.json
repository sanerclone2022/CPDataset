[{"authorTime":"2018-09-29 22:44:06","codes":[{"authorDate":"2017-01-19 16:28:42","commitOrder":3,"curCode":"  public Release publish(Namespace namespace, String releaseName, String releaseComment,\n                         String operator, boolean isEmergencyPublish) {\n\n    checkLock(namespace, isEmergencyPublish, operator);\n\n    Map<String, String> operateNamespaceItems = getNamespaceItems(namespace);\n\n    Namespace parentNamespace = namespaceService.findParentNamespace(namespace);\n\n    \r\n    if (parentNamespace != null) {\n      return publishBranchNamespace(parentNamespace, namespace, operateNamespaceItems,\n                                    releaseName, releaseComment, operator, isEmergencyPublish);\n    }\n\n    Namespace childNamespace = namespaceService.findChildNamespace(namespace);\n\n    Release previousRelease = null;\n    if (childNamespace != null) {\n      previousRelease = findLatestActiveRelease(namespace);\n    }\n\n    \r\n    Map<String, Object> operationContext = Maps.newHashMap();\n    operationContext.put(ReleaseOperationContext.IS_EMERGENCY_PUBLISH, isEmergencyPublish);\n\n    Release release = masterRelease(namespace, releaseName, releaseComment, operateNamespaceItems,\n                                    operator, ReleaseOperation.NORMAL_RELEASE, operationContext);\n\n    \r\n    if (childNamespace != null) {\n      mergeFromMasterAndPublishBranch(namespace, childNamespace, operateNamespaceItems,\n                                      releaseName, releaseComment, operator, previousRelease,\n                                      release, isEmergencyPublish);\n    }\n\n    return release;\n  }\n","date":"2017-01-19 16:28:42","endLine":188,"groupId":"700","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"publish","params":"(Namespacenamespace@StringreleaseName@StringreleaseComment@Stringoperator@booleanisEmergencyPublish)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-apollo-10-0.7/blobInfo/CC_OUT/blobs/2a/29d009e652717824b881d07cc198fa728e921a.src","preCode":"  public Release publish(Namespace namespace, String releaseName, String releaseComment,\n                         String operator, boolean isEmergencyPublish) {\n\n    checkLock(namespace, isEmergencyPublish, operator);\n\n    Map<String, String> operateNamespaceItems = getNamespaceItems(namespace);\n\n    Namespace parentNamespace = namespaceService.findParentNamespace(namespace);\n\n    \r\n    if (parentNamespace != null) {\n      return publishBranchNamespace(parentNamespace, namespace, operateNamespaceItems,\n                                    releaseName, releaseComment, operator, isEmergencyPublish);\n    }\n\n    Namespace childNamespace = namespaceService.findChildNamespace(namespace);\n\n    Release previousRelease = null;\n    if (childNamespace != null) {\n      previousRelease = findLatestActiveRelease(namespace);\n    }\n\n    \r\n    Map<String, Object> operationContext = Maps.newHashMap();\n    operationContext.put(ReleaseOperationContext.IS_EMERGENCY_PUBLISH, isEmergencyPublish);\n\n    Release release = masterRelease(namespace, releaseName, releaseComment, operateNamespaceItems,\n                                    operator, ReleaseOperation.NORMAL_RELEASE, operationContext);\n\n    \r\n    if (childNamespace != null) {\n      mergeFromMasterAndPublishBranch(namespace, childNamespace, operateNamespaceItems,\n                                      releaseName, releaseComment, operator, previousRelease,\n                                      release, isEmergencyPublish);\n    }\n\n    return release;\n  }\n","realPath":"apollo-biz/src/main/java/com/ctrip/framework/apollo/biz/service/ReleaseService.java","repoName":"apollo","snippetEndLine":0,"snippetStartLine":0,"startLine":151,"status":"NB"},{"authorDate":"2018-09-29 22:44:06","commitOrder":3,"curCode":"  public Release grayDeletionPublish(Namespace namespace, String releaseName, String releaseComment,\n                                     String operator, boolean isEmergencyPublish, Set<String> grayDelKeys) {\n\n    checkLock(namespace, isEmergencyPublish, operator);\n\n    Map<String, String> operateNamespaceItems = getNamespaceItems(namespace);\n\n    Namespace parentNamespace = namespaceService.findParentNamespace(namespace);\n\n    \r\n    if (parentNamespace != null) {\n      return publishBranchNamespace(parentNamespace, namespace, operateNamespaceItems,\n              releaseName, releaseComment, operator, isEmergencyPublish, grayDelKeys);\n    }else {\n      throw new NotFoundException(\"Parent namespace not found\");\n    }\n  }\n","date":"2018-09-29 22:44:06","endLine":229,"groupId":"700","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"grayDeletionPublish","params":"(Namespacenamespace@StringreleaseName@StringreleaseComment@Stringoperator@booleanisEmergencyPublish@Set<String>grayDelKeys)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-apollo-10-0.7/blobInfo/CC_OUT/blobs/55/d8dbf8615c93cd7378d56325477a13614a82ad.src","preCode":"  public Release grayDeletionPublish(Namespace namespace, String releaseName, String releaseComment,\n                                     String operator, boolean isEmergencyPublish, Set<String> grayDelKeys) {\n\n    checkLock(namespace, isEmergencyPublish, operator);\n\n    Map<String, String> operateNamespaceItems = getNamespaceItems(namespace);\n\n    Namespace parentNamespace = namespaceService.findParentNamespace(namespace);\n\n    \r\n    if (parentNamespace != null) {\n      return publishBranchNamespace(parentNamespace, namespace, operateNamespaceItems,\n              releaseName, releaseComment, operator, isEmergencyPublish, grayDelKeys);\n    }else {\n      throw new NotFoundException(\"Parent namespace not found\");\n    }\n  }\n","realPath":"apollo-biz/src/main/java/com/ctrip/framework/apollo/biz/service/ReleaseService.java","repoName":"apollo","snippetEndLine":0,"snippetStartLine":0,"startLine":213,"status":"B"}],"commitId":"7c435bd5e0308d05097a9e69614e73ee33f099ca","commitMessage":"@@@Merge pull request #1518 from jieqian/gray_release_4_openapi\n\nfeature: add gray operation on Open API","date":"2018-09-29 22:44:06","modifiedFileCount":"7","status":"M","submitter":"Jason Song"},{"authorTime":"2019-12-27 08:40:30","codes":[{"authorDate":"2017-01-19 16:28:42","commitOrder":4,"curCode":"  public Release publish(Namespace namespace, String releaseName, String releaseComment,\n                         String operator, boolean isEmergencyPublish) {\n\n    checkLock(namespace, isEmergencyPublish, operator);\n\n    Map<String, String> operateNamespaceItems = getNamespaceItems(namespace);\n\n    Namespace parentNamespace = namespaceService.findParentNamespace(namespace);\n\n    \r\n    if (parentNamespace != null) {\n      return publishBranchNamespace(parentNamespace, namespace, operateNamespaceItems,\n                                    releaseName, releaseComment, operator, isEmergencyPublish);\n    }\n\n    Namespace childNamespace = namespaceService.findChildNamespace(namespace);\n\n    Release previousRelease = null;\n    if (childNamespace != null) {\n      previousRelease = findLatestActiveRelease(namespace);\n    }\n\n    \r\n    Map<String, Object> operationContext = Maps.newHashMap();\n    operationContext.put(ReleaseOperationContext.IS_EMERGENCY_PUBLISH, isEmergencyPublish);\n\n    Release release = masterRelease(namespace, releaseName, releaseComment, operateNamespaceItems,\n                                    operator, ReleaseOperation.NORMAL_RELEASE, operationContext);\n\n    \r\n    if (childNamespace != null) {\n      mergeFromMasterAndPublishBranch(namespace, childNamespace, operateNamespaceItems,\n                                      releaseName, releaseComment, operator, previousRelease,\n                                      release, isEmergencyPublish);\n    }\n\n    return release;\n  }\n","date":"2017-01-19 16:28:42","endLine":188,"groupId":"700","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"publish","params":"(Namespacenamespace@StringreleaseName@StringreleaseComment@Stringoperator@booleanisEmergencyPublish)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-apollo-10-0.7/blobInfo/CC_OUT/blobs/2a/29d009e652717824b881d07cc198fa728e921a.src","preCode":"  public Release publish(Namespace namespace, String releaseName, String releaseComment,\n                         String operator, boolean isEmergencyPublish) {\n\n    checkLock(namespace, isEmergencyPublish, operator);\n\n    Map<String, String> operateNamespaceItems = getNamespaceItems(namespace);\n\n    Namespace parentNamespace = namespaceService.findParentNamespace(namespace);\n\n    \r\n    if (parentNamespace != null) {\n      return publishBranchNamespace(parentNamespace, namespace, operateNamespaceItems,\n                                    releaseName, releaseComment, operator, isEmergencyPublish);\n    }\n\n    Namespace childNamespace = namespaceService.findChildNamespace(namespace);\n\n    Release previousRelease = null;\n    if (childNamespace != null) {\n      previousRelease = findLatestActiveRelease(namespace);\n    }\n\n    \r\n    Map<String, Object> operationContext = Maps.newHashMap();\n    operationContext.put(ReleaseOperationContext.IS_EMERGENCY_PUBLISH, isEmergencyPublish);\n\n    Release release = masterRelease(namespace, releaseName, releaseComment, operateNamespaceItems,\n                                    operator, ReleaseOperation.NORMAL_RELEASE, operationContext);\n\n    \r\n    if (childNamespace != null) {\n      mergeFromMasterAndPublishBranch(namespace, childNamespace, operateNamespaceItems,\n                                      releaseName, releaseComment, operator, previousRelease,\n                                      release, isEmergencyPublish);\n    }\n\n    return release;\n  }\n","realPath":"apollo-biz/src/main/java/com/ctrip/framework/apollo/biz/service/ReleaseService.java","repoName":"apollo","snippetEndLine":0,"snippetStartLine":0,"startLine":151,"status":"N"},{"authorDate":"2019-12-27 08:40:30","commitOrder":4,"curCode":"  public Release grayDeletionPublish(Namespace namespace, String releaseName, String releaseComment,\n                                     String operator, boolean isEmergencyPublish, Set<String> grayDelKeys) {\n\n    checkLock(namespace, isEmergencyPublish, operator);\n\n    Map<String, String> operateNamespaceItems = getNamespaceItems(namespace);\n\n    Namespace parentNamespace = namespaceService.findParentNamespace(namespace);\n\n    \r\n    if (parentNamespace != null) {\n      return publishBranchNamespace(parentNamespace, namespace, operateNamespaceItems,\n              releaseName, releaseComment, operator, isEmergencyPublish, grayDelKeys);\n    }\n    throw new NotFoundException(\"Parent namespace not found\");\n  }\n","date":"2019-12-27 08:40:30","endLine":247,"groupId":"700","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"grayDeletionPublish","params":"(Namespacenamespace@StringreleaseName@StringreleaseComment@Stringoperator@booleanisEmergencyPublish@Set<String>grayDelKeys)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-apollo-10-0.7/blobInfo/CC_OUT/blobs/ce/a011ea8142a72ec35b0f2a0428504e1d5d2dc8.src","preCode":"  public Release grayDeletionPublish(Namespace namespace, String releaseName, String releaseComment,\n                                     String operator, boolean isEmergencyPublish, Set<String> grayDelKeys) {\n\n    checkLock(namespace, isEmergencyPublish, operator);\n\n    Map<String, String> operateNamespaceItems = getNamespaceItems(namespace);\n\n    Namespace parentNamespace = namespaceService.findParentNamespace(namespace);\n\n    \r\n    if (parentNamespace != null) {\n      return publishBranchNamespace(parentNamespace, namespace, operateNamespaceItems,\n              releaseName, releaseComment, operator, isEmergencyPublish, grayDelKeys);\n    }else {\n      throw new NotFoundException(\"Parent namespace not found\");\n    }\n  }\n","realPath":"apollo-biz/src/main/java/com/ctrip/framework/apollo/biz/service/ReleaseService.java","repoName":"apollo","snippetEndLine":0,"snippetStartLine":0,"startLine":232,"status":"M"}],"commitId":"99a6f5dd21869968b2e056b14915b932aa89a540","commitMessage":"@@@Refactor/remove redundant else (#2864)\n\n\n","date":"2019-12-27 08:40:30","modifiedFileCount":"25","status":"M","submitter":"waters"},{"authorTime":"2019-12-27 08:40:30","codes":[{"authorDate":"2020-01-21 08:22:12","commitOrder":5,"curCode":"  public Release publish(Namespace namespace, String releaseName, String releaseComment,\n                         String operator, boolean isEmergencyPublish) {\n\n    checkLock(namespace, isEmergencyPublish, operator);\n\n    Map<String, String> operateNamespaceItems = getNamespaceItems(namespace);\n\n    Namespace parentNamespace = namespaceService.findParentNamespace(namespace);\n\n    \r\n    if (parentNamespace != null) {\n      return publishBranchNamespace(parentNamespace, namespace, operateNamespaceItems,\n                                    releaseName, releaseComment, operator, isEmergencyPublish);\n    }\n\n    Namespace childNamespace = namespaceService.findChildNamespace(namespace);\n\n    Release previousRelease = null;\n    if (childNamespace != null) {\n      previousRelease = findLatestActiveRelease(namespace);\n    }\n\n    \r\n    Map<String, Object> operationContext = Maps.newLinkedHashMap();\n    operationContext.put(ReleaseOperationContext.IS_EMERGENCY_PUBLISH, isEmergencyPublish);\n\n    Release release = masterRelease(namespace, releaseName, releaseComment, operateNamespaceItems,\n                                    operator, ReleaseOperation.NORMAL_RELEASE, operationContext);\n\n    \r\n    if (childNamespace != null) {\n      mergeFromMasterAndPublishBranch(namespace, childNamespace, operateNamespaceItems,\n                                      releaseName, releaseComment, operator, previousRelease,\n                                      release, isEmergencyPublish);\n    }\n\n    return release;\n  }\n","date":"2020-01-21 20:16:07","endLine":198,"groupId":"10628","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"publish","params":"(Namespacenamespace@StringreleaseName@StringreleaseComment@Stringoperator@booleanisEmergencyPublish)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-apollo-10-0.7/blobInfo/CC_OUT/blobs/6f/551ad309846c4896f7419e7605a441179a3944.src","preCode":"  public Release publish(Namespace namespace, String releaseName, String releaseComment,\n                         String operator, boolean isEmergencyPublish) {\n\n    checkLock(namespace, isEmergencyPublish, operator);\n\n    Map<String, String> operateNamespaceItems = getNamespaceItems(namespace);\n\n    Namespace parentNamespace = namespaceService.findParentNamespace(namespace);\n\n    \r\n    if (parentNamespace != null) {\n      return publishBranchNamespace(parentNamespace, namespace, operateNamespaceItems,\n                                    releaseName, releaseComment, operator, isEmergencyPublish);\n    }\n\n    Namespace childNamespace = namespaceService.findChildNamespace(namespace);\n\n    Release previousRelease = null;\n    if (childNamespace != null) {\n      previousRelease = findLatestActiveRelease(namespace);\n    }\n\n    \r\n    Map<String, Object> operationContext = Maps.newHashMap();\n    operationContext.put(ReleaseOperationContext.IS_EMERGENCY_PUBLISH, isEmergencyPublish);\n\n    Release release = masterRelease(namespace, releaseName, releaseComment, operateNamespaceItems,\n                                    operator, ReleaseOperation.NORMAL_RELEASE, operationContext);\n\n    \r\n    if (childNamespace != null) {\n      mergeFromMasterAndPublishBranch(namespace, childNamespace, operateNamespaceItems,\n                                      releaseName, releaseComment, operator, previousRelease,\n                                      release, isEmergencyPublish);\n    }\n\n    return release;\n  }\n","realPath":"apollo-biz/src/main/java/com/ctrip/framework/apollo/biz/service/ReleaseService.java","repoName":"apollo","snippetEndLine":0,"snippetStartLine":0,"startLine":161,"status":"M"},{"authorDate":"2019-12-27 08:40:30","commitOrder":5,"curCode":"  public Release grayDeletionPublish(Namespace namespace, String releaseName, String releaseComment,\n                                     String operator, boolean isEmergencyPublish, Set<String> grayDelKeys) {\n\n    checkLock(namespace, isEmergencyPublish, operator);\n\n    Map<String, String> operateNamespaceItems = getNamespaceItems(namespace);\n\n    Namespace parentNamespace = namespaceService.findParentNamespace(namespace);\n\n    \r\n    if (parentNamespace != null) {\n      return publishBranchNamespace(parentNamespace, namespace, operateNamespaceItems,\n              releaseName, releaseComment, operator, isEmergencyPublish, grayDelKeys);\n    }\n    throw new NotFoundException(\"Parent namespace not found\");\n  }\n","date":"2019-12-27 08:40:30","endLine":247,"groupId":"10628","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"grayDeletionPublish","params":"(Namespacenamespace@StringreleaseName@StringreleaseComment@Stringoperator@booleanisEmergencyPublish@Set<String>grayDelKeys)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-apollo-10-0.7/blobInfo/CC_OUT/blobs/ce/a011ea8142a72ec35b0f2a0428504e1d5d2dc8.src","preCode":"  public Release grayDeletionPublish(Namespace namespace, String releaseName, String releaseComment,\n                                     String operator, boolean isEmergencyPublish, Set<String> grayDelKeys) {\n\n    checkLock(namespace, isEmergencyPublish, operator);\n\n    Map<String, String> operateNamespaceItems = getNamespaceItems(namespace);\n\n    Namespace parentNamespace = namespaceService.findParentNamespace(namespace);\n\n    \r\n    if (parentNamespace != null) {\n      return publishBranchNamespace(parentNamespace, namespace, operateNamespaceItems,\n              releaseName, releaseComment, operator, isEmergencyPublish, grayDelKeys);\n    }\n    throw new NotFoundException(\"Parent namespace not found\");\n  }\n","realPath":"apollo-biz/src/main/java/com/ctrip/framework/apollo/biz/service/ReleaseService.java","repoName":"apollo","snippetEndLine":0,"snippetStartLine":0,"startLine":232,"status":"N"}],"commitId":"5fe54966f5f50e5f5e1c3b2e0f0d82b1d92f014d","commitMessage":"@@@use linked hash map to keep server side config order and do some refactoring to apollo-client\n","date":"2020-01-21 20:16:07","modifiedFileCount":"18","status":"M","submitter":"Jason Song"}]
