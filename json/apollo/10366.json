[{"authorTime":"2018-08-07 21:27:48","codes":[{"authorDate":"2018-08-07 21:27:48","commitOrder":1,"curCode":"  public void testApolloConfigChangeListenerWithInterestedKeys() throws Exception {\n    Config applicationConfig = mock(Config.class);\n    Config fxApolloConfig = mock(Config.class);\n\n    mockConfig(ConfigConsts.NAMESPACE_APPLICATION, applicationConfig);\n    mockConfig(FX_APOLLO_NAMESPACE, fxApolloConfig);\n\n    TestApolloConfigChangeListenerWithInterestedKeysBean bean = getBean(\n        TestApolloConfigChangeListenerWithInterestedKeysBean.class, AppConfig8.class);\n\n    final ArgumentCaptor<Set> applicationConfigInterestedKeys = ArgumentCaptor.forClass(Set.class);\n    final ArgumentCaptor<Set> fxApolloConfigInterestedKeys = ArgumentCaptor.forClass(Set.class);\n\n    verify(applicationConfig, times(2))\n        .addChangeListener(any(ConfigChangeListener.class), applicationConfigInterestedKeys.capture());\n\n    verify(fxApolloConfig, times(1))\n        .addChangeListener(any(ConfigChangeListener.class), fxApolloConfigInterestedKeys.capture());\n\n    assertEquals(2, applicationConfigInterestedKeys.getAllValues().size());\n\n    Set<String> result = Sets.newHashSet();\n    for (Set interestedKeys : applicationConfigInterestedKeys.getAllValues()) {\n      result.addAll(interestedKeys);\n    }\n    assertEquals(Sets.newHashSet(\"someKey\", \"anotherKey\"), result);\n\n    assertEquals(1, fxApolloConfigInterestedKeys.getAllValues().size());\n\n    assertEquals(asList(Sets.newHashSet(\"anotherKey\")), fxApolloConfigInterestedKeys.getAllValues());\n  }\n","date":"2018-08-07 21:27:48","endLine":238,"groupId":"1909","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testApolloConfigChangeListenerWithInterestedKeys","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-apollo-10-0.7/blobInfo/CC_OUT/blobs/09/c452ad88e66a3476f5fbcd1942a05466d5190c.src","preCode":"  public void testApolloConfigChangeListenerWithInterestedKeys() throws Exception {\n    Config applicationConfig = mock(Config.class);\n    Config fxApolloConfig = mock(Config.class);\n\n    mockConfig(ConfigConsts.NAMESPACE_APPLICATION, applicationConfig);\n    mockConfig(FX_APOLLO_NAMESPACE, fxApolloConfig);\n\n    TestApolloConfigChangeListenerWithInterestedKeysBean bean = getBean(\n        TestApolloConfigChangeListenerWithInterestedKeysBean.class, AppConfig8.class);\n\n    final ArgumentCaptor<Set> applicationConfigInterestedKeys = ArgumentCaptor.forClass(Set.class);\n    final ArgumentCaptor<Set> fxApolloConfigInterestedKeys = ArgumentCaptor.forClass(Set.class);\n\n    verify(applicationConfig, times(2))\n        .addChangeListener(any(ConfigChangeListener.class), applicationConfigInterestedKeys.capture());\n\n    verify(fxApolloConfig, times(1))\n        .addChangeListener(any(ConfigChangeListener.class), fxApolloConfigInterestedKeys.capture());\n\n    assertEquals(2, applicationConfigInterestedKeys.getAllValues().size());\n\n    Set<String> result = Sets.newHashSet();\n    for (Set interestedKeys : applicationConfigInterestedKeys.getAllValues()) {\n      result.addAll(interestedKeys);\n    }\n    assertEquals(Sets.newHashSet(\"someKey\", \"anotherKey\"), result);\n\n    assertEquals(1, fxApolloConfigInterestedKeys.getAllValues().size());\n\n    assertEquals(asList(Sets.newHashSet(\"anotherKey\")), fxApolloConfigInterestedKeys.getAllValues());\n  }\n","realPath":"apollo-client/src/test/java/com/ctrip/framework/apollo/spring/JavaConfigAnnotationTest.java","repoName":"apollo","snippetEndLine":0,"snippetStartLine":0,"startLine":208,"status":"B"},{"authorDate":"2018-08-07 21:27:48","commitOrder":1,"curCode":"  public void testApolloConfigChangeListenerWithInterestedKeys() throws Exception {\n    Config applicationConfig = mock(Config.class);\n    Config fxApolloConfig = mock(Config.class);\n\n    mockConfig(ConfigConsts.NAMESPACE_APPLICATION, applicationConfig);\n    mockConfig(FX_APOLLO_NAMESPACE, fxApolloConfig);\n\n    TestApolloConfigChangeListenerWithInterestedKeysBean bean = getBean(\n        \"spring/XmlConfigAnnotationTest6.xml\", TestApolloConfigChangeListenerWithInterestedKeysBean.class);\n\n    final ArgumentCaptor<Set> applicationConfigInterestedKeys = ArgumentCaptor.forClass(Set.class);\n    final ArgumentCaptor<Set> fxApolloConfigInterestedKeys = ArgumentCaptor.forClass(Set.class);\n\n    verify(applicationConfig, times(2))\n        .addChangeListener(any(ConfigChangeListener.class), applicationConfigInterestedKeys.capture());\n\n    verify(fxApolloConfig, times(1))\n        .addChangeListener(any(ConfigChangeListener.class), fxApolloConfigInterestedKeys.capture());\n\n    assertEquals(2, applicationConfigInterestedKeys.getAllValues().size());\n\n    Set<String> result = Sets.newHashSet();\n    for (Set interestedKeys : applicationConfigInterestedKeys.getAllValues()) {\n      result.addAll(interestedKeys);\n    }\n    assertEquals(Sets.newHashSet(\"someKey\", \"anotherKey\"), result);\n\n    assertEquals(1, fxApolloConfigInterestedKeys.getAllValues().size());\n\n    assertEquals(asList(Sets.newHashSet(\"anotherKey\")), fxApolloConfigInterestedKeys.getAllValues());\n  }\n","date":"2018-08-07 21:27:48","endLine":165,"groupId":"1909","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testApolloConfigChangeListenerWithInterestedKeys","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-apollo-10-0.7/blobInfo/CC_OUT/blobs/00/10a00dee846a2a596a0e3689d157f66d01d0ba.src","preCode":"  public void testApolloConfigChangeListenerWithInterestedKeys() throws Exception {\n    Config applicationConfig = mock(Config.class);\n    Config fxApolloConfig = mock(Config.class);\n\n    mockConfig(ConfigConsts.NAMESPACE_APPLICATION, applicationConfig);\n    mockConfig(FX_APOLLO_NAMESPACE, fxApolloConfig);\n\n    TestApolloConfigChangeListenerWithInterestedKeysBean bean = getBean(\n        \"spring/XmlConfigAnnotationTest6.xml\", TestApolloConfigChangeListenerWithInterestedKeysBean.class);\n\n    final ArgumentCaptor<Set> applicationConfigInterestedKeys = ArgumentCaptor.forClass(Set.class);\n    final ArgumentCaptor<Set> fxApolloConfigInterestedKeys = ArgumentCaptor.forClass(Set.class);\n\n    verify(applicationConfig, times(2))\n        .addChangeListener(any(ConfigChangeListener.class), applicationConfigInterestedKeys.capture());\n\n    verify(fxApolloConfig, times(1))\n        .addChangeListener(any(ConfigChangeListener.class), fxApolloConfigInterestedKeys.capture());\n\n    assertEquals(2, applicationConfigInterestedKeys.getAllValues().size());\n\n    Set<String> result = Sets.newHashSet();\n    for (Set interestedKeys : applicationConfigInterestedKeys.getAllValues()) {\n      result.addAll(interestedKeys);\n    }\n    assertEquals(Sets.newHashSet(\"someKey\", \"anotherKey\"), result);\n\n    assertEquals(1, fxApolloConfigInterestedKeys.getAllValues().size());\n\n    assertEquals(asList(Sets.newHashSet(\"anotherKey\")), fxApolloConfigInterestedKeys.getAllValues());\n  }\n","realPath":"apollo-client/src/test/java/com/ctrip/framework/apollo/spring/XMLConfigAnnotationTest.java","repoName":"apollo","snippetEndLine":0,"snippetStartLine":0,"startLine":135,"status":"B"}],"commitId":"8e6ed96853b491eb8767c2aecc31e0bfc3c0838d","commitMessage":"@@@Merge pull request #1340 from ctripcorp/1.x\n\nmerge 1.x to master","date":"2018-08-07 21:27:48","modifiedFileCount":"22","status":"B","submitter":"Jason Song"},{"authorTime":"2019-01-20 19:06:23","codes":[{"authorDate":"2019-01-20 19:06:23","commitOrder":2,"curCode":"  public void testApolloConfigChangeListenerWithInterestedKeys() throws Exception {\n    Config applicationConfig = mock(Config.class);\n    Config fxApolloConfig = mock(Config.class);\n\n    mockConfig(ConfigConsts.NAMESPACE_APPLICATION, applicationConfig);\n    mockConfig(FX_APOLLO_NAMESPACE, fxApolloConfig);\n\n    TestApolloConfigChangeListenerWithInterestedKeysBean bean = getBean(\n        TestApolloConfigChangeListenerWithInterestedKeysBean.class, AppConfig8.class);\n\n    final ArgumentCaptor<Set> applicationConfigInterestedKeys = ArgumentCaptor.forClass(Set.class);\n    final ArgumentCaptor<Set> fxApolloConfigInterestedKeys = ArgumentCaptor.forClass(Set.class);\n\n    verify(applicationConfig, times(2))\n        .addChangeListener(any(ConfigChangeListener.class), applicationConfigInterestedKeys.capture(), anySetOf(String.class));\n\n    verify(fxApolloConfig, times(1))\n        .addChangeListener(any(ConfigChangeListener.class), fxApolloConfigInterestedKeys.capture(), anySetOf(String.class));\n\n    assertEquals(2, applicationConfigInterestedKeys.getAllValues().size());\n\n    Set<String> result = Sets.newHashSet();\n    for (Set interestedKeys : applicationConfigInterestedKeys.getAllValues()) {\n      result.addAll(interestedKeys);\n    }\n    assertEquals(Sets.newHashSet(\"someKey\", \"anotherKey\"), result);\n\n    assertEquals(1, fxApolloConfigInterestedKeys.getAllValues().size());\n\n    assertEquals(asList(Sets.newHashSet(\"anotherKey\")), fxApolloConfigInterestedKeys.getAllValues());\n  }\n","date":"2019-01-20 19:06:23","endLine":240,"groupId":"902","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testApolloConfigChangeListenerWithInterestedKeys","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-apollo-10-0.7/blobInfo/CC_OUT/blobs/f8/f94b932846f60c849ad16281331e7125af0fee.src","preCode":"  public void testApolloConfigChangeListenerWithInterestedKeys() throws Exception {\n    Config applicationConfig = mock(Config.class);\n    Config fxApolloConfig = mock(Config.class);\n\n    mockConfig(ConfigConsts.NAMESPACE_APPLICATION, applicationConfig);\n    mockConfig(FX_APOLLO_NAMESPACE, fxApolloConfig);\n\n    TestApolloConfigChangeListenerWithInterestedKeysBean bean = getBean(\n        TestApolloConfigChangeListenerWithInterestedKeysBean.class, AppConfig8.class);\n\n    final ArgumentCaptor<Set> applicationConfigInterestedKeys = ArgumentCaptor.forClass(Set.class);\n    final ArgumentCaptor<Set> fxApolloConfigInterestedKeys = ArgumentCaptor.forClass(Set.class);\n\n    verify(applicationConfig, times(2))\n        .addChangeListener(any(ConfigChangeListener.class), applicationConfigInterestedKeys.capture());\n\n    verify(fxApolloConfig, times(1))\n        .addChangeListener(any(ConfigChangeListener.class), fxApolloConfigInterestedKeys.capture());\n\n    assertEquals(2, applicationConfigInterestedKeys.getAllValues().size());\n\n    Set<String> result = Sets.newHashSet();\n    for (Set interestedKeys : applicationConfigInterestedKeys.getAllValues()) {\n      result.addAll(interestedKeys);\n    }\n    assertEquals(Sets.newHashSet(\"someKey\", \"anotherKey\"), result);\n\n    assertEquals(1, fxApolloConfigInterestedKeys.getAllValues().size());\n\n    assertEquals(asList(Sets.newHashSet(\"anotherKey\")), fxApolloConfigInterestedKeys.getAllValues());\n  }\n","realPath":"apollo-client/src/test/java/com/ctrip/framework/apollo/spring/JavaConfigAnnotationTest.java","repoName":"apollo","snippetEndLine":0,"snippetStartLine":0,"startLine":210,"status":"M"},{"authorDate":"2019-01-20 19:06:23","commitOrder":2,"curCode":"  public void testApolloConfigChangeListenerWithInterestedKeys() throws Exception {\n    Config applicationConfig = mock(Config.class);\n    Config fxApolloConfig = mock(Config.class);\n\n    mockConfig(ConfigConsts.NAMESPACE_APPLICATION, applicationConfig);\n    mockConfig(FX_APOLLO_NAMESPACE, fxApolloConfig);\n\n    TestApolloConfigChangeListenerWithInterestedKeysBean bean = getBean(\n        \"spring/XmlConfigAnnotationTest6.xml\", TestApolloConfigChangeListenerWithInterestedKeysBean.class);\n\n    final ArgumentCaptor<Set> applicationConfigInterestedKeys = ArgumentCaptor.forClass(Set.class);\n    final ArgumentCaptor<Set> fxApolloConfigInterestedKeys = ArgumentCaptor.forClass(Set.class);\n\n    verify(applicationConfig, times(2))\n        .addChangeListener(any(ConfigChangeListener.class), applicationConfigInterestedKeys.capture(), anySetOf(String.class));\n\n    verify(fxApolloConfig, times(1))\n        .addChangeListener(any(ConfigChangeListener.class), fxApolloConfigInterestedKeys.capture(), anySetOf(String.class));\n\n    assertEquals(2, applicationConfigInterestedKeys.getAllValues().size());\n\n    Set<String> result = Sets.newHashSet();\n    for (Set interestedKeys : applicationConfigInterestedKeys.getAllValues()) {\n      result.addAll(interestedKeys);\n    }\n    assertEquals(Sets.newHashSet(\"someKey\", \"anotherKey\"), result);\n\n    assertEquals(1, fxApolloConfigInterestedKeys.getAllValues().size());\n\n    assertEquals(asList(Sets.newHashSet(\"anotherKey\")), fxApolloConfigInterestedKeys.getAllValues());\n  }\n","date":"2019-01-20 19:06:23","endLine":166,"groupId":"902","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testApolloConfigChangeListenerWithInterestedKeys","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-apollo-10-0.7/blobInfo/CC_OUT/blobs/49/264951bcd967d48ed6d5e40fe1cef279c56553.src","preCode":"  public void testApolloConfigChangeListenerWithInterestedKeys() throws Exception {\n    Config applicationConfig = mock(Config.class);\n    Config fxApolloConfig = mock(Config.class);\n\n    mockConfig(ConfigConsts.NAMESPACE_APPLICATION, applicationConfig);\n    mockConfig(FX_APOLLO_NAMESPACE, fxApolloConfig);\n\n    TestApolloConfigChangeListenerWithInterestedKeysBean bean = getBean(\n        \"spring/XmlConfigAnnotationTest6.xml\", TestApolloConfigChangeListenerWithInterestedKeysBean.class);\n\n    final ArgumentCaptor<Set> applicationConfigInterestedKeys = ArgumentCaptor.forClass(Set.class);\n    final ArgumentCaptor<Set> fxApolloConfigInterestedKeys = ArgumentCaptor.forClass(Set.class);\n\n    verify(applicationConfig, times(2))\n        .addChangeListener(any(ConfigChangeListener.class), applicationConfigInterestedKeys.capture());\n\n    verify(fxApolloConfig, times(1))\n        .addChangeListener(any(ConfigChangeListener.class), fxApolloConfigInterestedKeys.capture());\n\n    assertEquals(2, applicationConfigInterestedKeys.getAllValues().size());\n\n    Set<String> result = Sets.newHashSet();\n    for (Set interestedKeys : applicationConfigInterestedKeys.getAllValues()) {\n      result.addAll(interestedKeys);\n    }\n    assertEquals(Sets.newHashSet(\"someKey\", \"anotherKey\"), result);\n\n    assertEquals(1, fxApolloConfigInterestedKeys.getAllValues().size());\n\n    assertEquals(asList(Sets.newHashSet(\"anotherKey\")), fxApolloConfigInterestedKeys.getAllValues());\n  }\n","realPath":"apollo-client/src/test/java/com/ctrip/framework/apollo/spring/XMLConfigAnnotationTest.java","repoName":"apollo","snippetEndLine":0,"snippetStartLine":0,"startLine":136,"status":"M"}],"commitId":"4fa65a1d4a8eb7591c0a71d8a01a898ebf654ae8","commitMessage":"@@@feature: support listeners on events based on key patterns. #1461 (#1871)\n\nfeature: support listeners on events based on key patterns. #1461\n","date":"2019-01-20 19:06:23","modifiedFileCount":"8","status":"M","submitter":"kezhenxu94"},{"authorTime":"2020-09-11 20:01:31","codes":[{"authorDate":"2020-09-11 20:01:31","commitOrder":3,"curCode":"  public void testApolloConfigChangeListenerWithInterestedKeys() throws Exception {\n    Config applicationConfig = mock(Config.class);\n    Config fxApolloConfig = mock(Config.class);\n\n    mockConfig(ConfigConsts.NAMESPACE_APPLICATION, applicationConfig);\n    mockConfig(FX_APOLLO_NAMESPACE, fxApolloConfig);\n\n    TestApolloConfigChangeListenerWithInterestedKeysBean bean = getBean(\n        TestApolloConfigChangeListenerWithInterestedKeysBean.class, AppConfig8.class);\n\n    final ArgumentCaptor<Set> applicationConfigInterestedKeys = ArgumentCaptor.forClass(Set.class);\n    final ArgumentCaptor<Set> fxApolloConfigInterestedKeys = ArgumentCaptor.forClass(Set.class);\n\n    verify(applicationConfig, times(2))\n        .addChangeListener(any(ConfigChangeListener.class), applicationConfigInterestedKeys.capture(), anySetOf(String.class));\n\n    verify(fxApolloConfig, times(1))\n        .addChangeListener(any(ConfigChangeListener.class), fxApolloConfigInterestedKeys.capture(), anySetOf(String.class));\n\n    assertEquals(2, applicationConfigInterestedKeys.getAllValues().size());\n\n    Set<String> result = Sets.newHashSet();\n    for (Set interestedKeys : applicationConfigInterestedKeys.getAllValues()) {\n      result.addAll(interestedKeys);\n    }\n    assertEquals(Sets.newHashSet(\"someKey\", \"anotherKey\"), result);\n\n    assertEquals(1, fxApolloConfigInterestedKeys.getAllValues().size());\n\n    assertEquals(Collections.singletonList(Sets.newHashSet(\"anotherKey\")), fxApolloConfigInterestedKeys.getAllValues());\n  }\n","date":"2020-09-11 20:01:31","endLine":255,"groupId":"10366","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testApolloConfigChangeListenerWithInterestedKeys","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-apollo-10-0.7/blobInfo/CC_OUT/blobs/5d/fa270eeabcbb7c5eddbff5c96e2ca26757272e.src","preCode":"  public void testApolloConfigChangeListenerWithInterestedKeys() throws Exception {\n    Config applicationConfig = mock(Config.class);\n    Config fxApolloConfig = mock(Config.class);\n\n    mockConfig(ConfigConsts.NAMESPACE_APPLICATION, applicationConfig);\n    mockConfig(FX_APOLLO_NAMESPACE, fxApolloConfig);\n\n    TestApolloConfigChangeListenerWithInterestedKeysBean bean = getBean(\n        TestApolloConfigChangeListenerWithInterestedKeysBean.class, AppConfig8.class);\n\n    final ArgumentCaptor<Set> applicationConfigInterestedKeys = ArgumentCaptor.forClass(Set.class);\n    final ArgumentCaptor<Set> fxApolloConfigInterestedKeys = ArgumentCaptor.forClass(Set.class);\n\n    verify(applicationConfig, times(2))\n        .addChangeListener(any(ConfigChangeListener.class), applicationConfigInterestedKeys.capture(), anySetOf(String.class));\n\n    verify(fxApolloConfig, times(1))\n        .addChangeListener(any(ConfigChangeListener.class), fxApolloConfigInterestedKeys.capture(), anySetOf(String.class));\n\n    assertEquals(2, applicationConfigInterestedKeys.getAllValues().size());\n\n    Set<String> result = Sets.newHashSet();\n    for (Set interestedKeys : applicationConfigInterestedKeys.getAllValues()) {\n      result.addAll(interestedKeys);\n    }\n    assertEquals(Sets.newHashSet(\"someKey\", \"anotherKey\"), result);\n\n    assertEquals(1, fxApolloConfigInterestedKeys.getAllValues().size());\n\n    assertEquals(asList(Sets.newHashSet(\"anotherKey\")), fxApolloConfigInterestedKeys.getAllValues());\n  }\n","realPath":"apollo-client/src/test/java/com/ctrip/framework/apollo/spring/JavaConfigAnnotationTest.java","repoName":"apollo","snippetEndLine":0,"snippetStartLine":0,"startLine":225,"status":"M"},{"authorDate":"2020-09-11 20:01:31","commitOrder":3,"curCode":"  public void testApolloConfigChangeListenerWithInterestedKeys() throws Exception {\n    Config applicationConfig = mock(Config.class);\n    Config fxApolloConfig = mock(Config.class);\n\n    mockConfig(ConfigConsts.NAMESPACE_APPLICATION, applicationConfig);\n    mockConfig(FX_APOLLO_NAMESPACE, fxApolloConfig);\n\n    TestApolloConfigChangeListenerWithInterestedKeysBean bean = getBean(\n        \"spring/XmlConfigAnnotationTest6.xml\", TestApolloConfigChangeListenerWithInterestedKeysBean.class);\n\n    final ArgumentCaptor<Set> applicationConfigInterestedKeys = ArgumentCaptor.forClass(Set.class);\n    final ArgumentCaptor<Set> fxApolloConfigInterestedKeys = ArgumentCaptor.forClass(Set.class);\n\n    verify(applicationConfig, times(2))\n        .addChangeListener(any(ConfigChangeListener.class), applicationConfigInterestedKeys.capture(), anySetOf(String.class));\n\n    verify(fxApolloConfig, times(1))\n        .addChangeListener(any(ConfigChangeListener.class), fxApolloConfigInterestedKeys.capture(), anySetOf(String.class));\n\n    assertEquals(2, applicationConfigInterestedKeys.getAllValues().size());\n\n    Set<String> result = Sets.newHashSet();\n    for (Set interestedKeys : applicationConfigInterestedKeys.getAllValues()) {\n      result.addAll(interestedKeys);\n    }\n    assertEquals(Sets.newHashSet(\"someKey\", \"anotherKey\"), result);\n\n    assertEquals(1, fxApolloConfigInterestedKeys.getAllValues().size());\n\n    assertEquals(Collections.singletonList(Sets.newHashSet(\"anotherKey\")), fxApolloConfigInterestedKeys.getAllValues());\n  }\n","date":"2020-09-11 20:01:31","endLine":167,"groupId":"10366","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testApolloConfigChangeListenerWithInterestedKeys","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-apollo-10-0.7/blobInfo/CC_OUT/blobs/82/3251693a5bbd0c95435f272b355aa58c6eea2a.src","preCode":"  public void testApolloConfigChangeListenerWithInterestedKeys() throws Exception {\n    Config applicationConfig = mock(Config.class);\n    Config fxApolloConfig = mock(Config.class);\n\n    mockConfig(ConfigConsts.NAMESPACE_APPLICATION, applicationConfig);\n    mockConfig(FX_APOLLO_NAMESPACE, fxApolloConfig);\n\n    TestApolloConfigChangeListenerWithInterestedKeysBean bean = getBean(\n        \"spring/XmlConfigAnnotationTest6.xml\", TestApolloConfigChangeListenerWithInterestedKeysBean.class);\n\n    final ArgumentCaptor<Set> applicationConfigInterestedKeys = ArgumentCaptor.forClass(Set.class);\n    final ArgumentCaptor<Set> fxApolloConfigInterestedKeys = ArgumentCaptor.forClass(Set.class);\n\n    verify(applicationConfig, times(2))\n        .addChangeListener(any(ConfigChangeListener.class), applicationConfigInterestedKeys.capture(), anySetOf(String.class));\n\n    verify(fxApolloConfig, times(1))\n        .addChangeListener(any(ConfigChangeListener.class), fxApolloConfigInterestedKeys.capture(), anySetOf(String.class));\n\n    assertEquals(2, applicationConfigInterestedKeys.getAllValues().size());\n\n    Set<String> result = Sets.newHashSet();\n    for (Set interestedKeys : applicationConfigInterestedKeys.getAllValues()) {\n      result.addAll(interestedKeys);\n    }\n    assertEquals(Sets.newHashSet(\"someKey\", \"anotherKey\"), result);\n\n    assertEquals(1, fxApolloConfigInterestedKeys.getAllValues().size());\n\n    assertEquals(asList(Sets.newHashSet(\"anotherKey\")), fxApolloConfigInterestedKeys.getAllValues());\n  }\n","realPath":"apollo-client/src/test/java/com/ctrip/framework/apollo/spring/XMLConfigAnnotationTest.java","repoName":"apollo","snippetEndLine":0,"snippetStartLine":0,"startLine":137,"status":"M"}],"commitId":"e321a8e7f315b2be45d38923e9bec3e3145332fe","commitMessage":"@@@Simplify code (#3290)\n\n","date":"2020-09-11 20:01:31","modifiedFileCount":"87","status":"M","submitter":"waters"}]
