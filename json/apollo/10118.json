[{"authorTime":"2016-07-15 15:47:12","codes":[{"authorDate":"2016-07-15 15:47:12","commitOrder":1,"curCode":"  public void testCompareTargetNamespaceHasNoItems(){\n    ItemDTO sourceItem1 = new ItemDTO(\"a\",\"b\",\"comment\",1);\n    List<ItemDTO> sourceItems = Arrays.asList(sourceItem1);\n\n    String appId = \"6666\", env = \"LOCAL\", clusterName = ConfigConsts.CLUSTER_NAME_DEFAULT,\n        namespaceName = ConfigConsts.NAMESPACE_APPLICATION;\n    List<NamespaceIdentifer> namespaceIdentifers = generateNamespaceIdentifer(appId, env, clusterName, namespaceName);\n    NamespaceDTO namespaceDTO = generateNamespaceDTO(appId, clusterName, namespaceName);\n\n    when(namespaceAPI.loadNamespace(appId, Env.valueOf(env), clusterName, namespaceName)).thenReturn(namespaceDTO);\n    when(itemAPI.findItems(appId, Env.valueOf(env), clusterName, namespaceName)).thenReturn(null);\n\n    UserInfo userInfo = new UserInfo();\n    userInfo.setUserId(\"test\");\n    when(userInfoHolder.getUser()).thenReturn(userInfo);\n\n    List<ItemDiffs> itemDiffses = configService.compare(namespaceIdentifers, sourceItems);\n\n    assertEquals(1,itemDiffses.size());\n    ItemDiffs itemDiffs = itemDiffses.get(0);\n    ItemChangeSets changeSets = itemDiffs.getDiffs();\n    assertEquals(0, changeSets.getUpdateItems().size());\n    assertEquals(0, changeSets.getDeleteItems().size());\n\n    List<ItemDTO> createItems = changeSets.getCreateItems();\n    ItemDTO createItem = createItems.get(0);\n    assertEquals(1, createItem.getLineNum());\n    assertEquals(\"a\", createItem.getKey());\n    assertEquals(\"b\", createItem.getValue());\n    assertEquals(\"comment\", createItem.getComment());\n  }\n","date":"2016-07-15 15:47:12","endLine":128,"groupId":"982","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testCompareTargetNamespaceHasNoItems","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-apollo-10-0.7/blobInfo/CC_OUT/blobs/61/04b076185ac4fc10c1a1fd220865e296c2da10.src","preCode":"  public void testCompareTargetNamespaceHasNoItems(){\n    ItemDTO sourceItem1 = new ItemDTO(\"a\",\"b\",\"comment\",1);\n    List<ItemDTO> sourceItems = Arrays.asList(sourceItem1);\n\n    String appId = \"6666\", env = \"LOCAL\", clusterName = ConfigConsts.CLUSTER_NAME_DEFAULT,\n        namespaceName = ConfigConsts.NAMESPACE_APPLICATION;\n    List<NamespaceIdentifer> namespaceIdentifers = generateNamespaceIdentifer(appId, env, clusterName, namespaceName);\n    NamespaceDTO namespaceDTO = generateNamespaceDTO(appId, clusterName, namespaceName);\n\n    when(namespaceAPI.loadNamespace(appId, Env.valueOf(env), clusterName, namespaceName)).thenReturn(namespaceDTO);\n    when(itemAPI.findItems(appId, Env.valueOf(env), clusterName, namespaceName)).thenReturn(null);\n\n    UserInfo userInfo = new UserInfo();\n    userInfo.setUserId(\"test\");\n    when(userInfoHolder.getUser()).thenReturn(userInfo);\n\n    List<ItemDiffs> itemDiffses = configService.compare(namespaceIdentifers, sourceItems);\n\n    assertEquals(1,itemDiffses.size());\n    ItemDiffs itemDiffs = itemDiffses.get(0);\n    ItemChangeSets changeSets = itemDiffs.getDiffs();\n    assertEquals(0, changeSets.getUpdateItems().size());\n    assertEquals(0, changeSets.getDeleteItems().size());\n\n    List<ItemDTO> createItems = changeSets.getCreateItems();\n    ItemDTO createItem = createItems.get(0);\n    assertEquals(1, createItem.getLineNum());\n    assertEquals(\"a\", createItem.getKey());\n    assertEquals(\"b\", createItem.getValue());\n    assertEquals(\"comment\", createItem.getComment());\n  }\n","realPath":"apollo-portal/src/test/java/com/ctrip/framework/apollo/portal/service/ConfigServiceTest.java","repoName":"apollo","snippetEndLine":0,"snippetStartLine":0,"startLine":98,"status":"B"},{"authorDate":"2016-07-15 15:47:12","commitOrder":1,"curCode":"  public void testCompare(){\n    ItemDTO sourceItem1 = new ItemDTO(\"a\",\"b\",\"comment\",1);\r\n    ItemDTO sourceItem2 = new ItemDTO(\"newKey\",\"c\",\"comment\",2);\r\n    ItemDTO sourceItem3 = new ItemDTO(\"c\",\"newValue\",\"comment\",3);\r\n    ItemDTO sourceItem4 = new ItemDTO(\"d\",\"b\",\"newComment\",4);\r\n    List<ItemDTO> sourceItems = Arrays.asList(sourceItem1, sourceItem2, sourceItem3, sourceItem4);\n\n    ItemDTO targetItem1 = new ItemDTO(\"a\",\"b\",\"comment\",1);\n    ItemDTO targetItem2 = new ItemDTO(\"c\",\"oldValue\",\"comment\",2);\n    ItemDTO targetItem3 = new ItemDTO(\"d\",\"b\",\"oldComment\",3);\n    List<ItemDTO> targetItems = Arrays.asList(targetItem1, targetItem2, targetItem3);\n\n    String appId = \"6666\", env = \"LOCAL\", clusterName = ConfigConsts.CLUSTER_NAME_DEFAULT,\n        namespaceName = ConfigConsts.NAMESPACE_APPLICATION;\n    List<NamespaceIdentifer> namespaceIdentifers = generateNamespaceIdentifer(appId, env, clusterName, namespaceName);\n    NamespaceDTO namespaceDTO = generateNamespaceDTO(appId, clusterName, namespaceName);\n\n    when(namespaceAPI.loadNamespace(appId, Env.valueOf(env), clusterName, namespaceName)).thenReturn(namespaceDTO);\n    when(itemAPI.findItems(appId, Env.valueOf(env), clusterName, namespaceName)).thenReturn(targetItems);\n\n    UserInfo userInfo = new UserInfo();\n    userInfo.setUserId(\"test\");\n    when(userInfoHolder.getUser()).thenReturn(userInfo);\n\n    List<ItemDiffs> itemDiffses = configService.compare(namespaceIdentifers, sourceItems);\n    assertEquals(1, itemDiffses.size());\n\n    ItemDiffs itemDiffs = itemDiffses.get(0);\n\n    ItemChangeSets changeSets = itemDiffs.getDiffs();\n    assertEquals(0, changeSets.getDeleteItems().size());\n    assertEquals(2, changeSets.getUpdateItems().size());\n    assertEquals(1, changeSets.getCreateItems().size());\n\n    NamespaceIdentifer namespaceIdentifer = itemDiffs.getNamespace();\n    assertEquals(appId, namespaceIdentifer.getAppId());\n    assertEquals(Env.valueOf(\"LOCAL\"), namespaceIdentifer.getEnv());\n    assertEquals(clusterName, namespaceIdentifer.getClusterName());\n    assertEquals(namespaceName, namespaceIdentifer.getNamespaceName());\n\n    ItemDTO createdItem = changeSets.getCreateItems().get(0);\n    assertEquals(\"newKey\", createdItem.getKey());\n    assertEquals(\"c\", createdItem.getValue());\n    assertEquals(\"comment\", createdItem.getComment());\n    assertEquals(4, createdItem.getLineNum());\n\n    List<ItemDTO> updateItems = changeSets.getUpdateItems();\n    ItemDTO updateItem1 = updateItems.get(0);\n    ItemDTO updateItem2 = updateItems.get(1);\n    assertEquals(\"c\", updateItem1.getKey());\n    assertEquals(\"newValue\", updateItem1.getValue());\n    assertEquals(\"comment\", updateItem1.getComment());\n    assertEquals(2, updateItem1.getLineNum());\n\n    assertEquals(\"d\", updateItem2.getKey());\n    assertEquals(\"b\", updateItem2.getValue());\n    assertEquals(\"newComment\", updateItem2.getComment());\n    assertEquals(3, updateItem2.getLineNum());\n\n\n  }\n","date":"2016-07-15 15:47:12","endLine":191,"groupId":"901","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testCompare","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-apollo-10-0.7/blobInfo/CC_OUT/blobs/61/04b076185ac4fc10c1a1fd220865e296c2da10.src","preCode":"  public void testCompare(){\n    ItemDTO sourceItem1 = new ItemDTO(\"a\",\"b\",\"comment\",1);\r\n    ItemDTO sourceItem2 = new ItemDTO(\"newKey\",\"c\",\"comment\",2);\r\n    ItemDTO sourceItem3 = new ItemDTO(\"c\",\"newValue\",\"comment\",3);\r\n    ItemDTO sourceItem4 = new ItemDTO(\"d\",\"b\",\"newComment\",4);\r\n    List<ItemDTO> sourceItems = Arrays.asList(sourceItem1, sourceItem2, sourceItem3, sourceItem4);\n\n    ItemDTO targetItem1 = new ItemDTO(\"a\",\"b\",\"comment\",1);\n    ItemDTO targetItem2 = new ItemDTO(\"c\",\"oldValue\",\"comment\",2);\n    ItemDTO targetItem3 = new ItemDTO(\"d\",\"b\",\"oldComment\",3);\n    List<ItemDTO> targetItems = Arrays.asList(targetItem1, targetItem2, targetItem3);\n\n    String appId = \"6666\", env = \"LOCAL\", clusterName = ConfigConsts.CLUSTER_NAME_DEFAULT,\n        namespaceName = ConfigConsts.NAMESPACE_APPLICATION;\n    List<NamespaceIdentifer> namespaceIdentifers = generateNamespaceIdentifer(appId, env, clusterName, namespaceName);\n    NamespaceDTO namespaceDTO = generateNamespaceDTO(appId, clusterName, namespaceName);\n\n    when(namespaceAPI.loadNamespace(appId, Env.valueOf(env), clusterName, namespaceName)).thenReturn(namespaceDTO);\n    when(itemAPI.findItems(appId, Env.valueOf(env), clusterName, namespaceName)).thenReturn(targetItems);\n\n    UserInfo userInfo = new UserInfo();\n    userInfo.setUserId(\"test\");\n    when(userInfoHolder.getUser()).thenReturn(userInfo);\n\n    List<ItemDiffs> itemDiffses = configService.compare(namespaceIdentifers, sourceItems);\n    assertEquals(1, itemDiffses.size());\n\n    ItemDiffs itemDiffs = itemDiffses.get(0);\n\n    ItemChangeSets changeSets = itemDiffs.getDiffs();\n    assertEquals(0, changeSets.getDeleteItems().size());\n    assertEquals(2, changeSets.getUpdateItems().size());\n    assertEquals(1, changeSets.getCreateItems().size());\n\n    NamespaceIdentifer namespaceIdentifer = itemDiffs.getNamespace();\n    assertEquals(appId, namespaceIdentifer.getAppId());\n    assertEquals(Env.valueOf(\"LOCAL\"), namespaceIdentifer.getEnv());\n    assertEquals(clusterName, namespaceIdentifer.getClusterName());\n    assertEquals(namespaceName, namespaceIdentifer.getNamespaceName());\n\n    ItemDTO createdItem = changeSets.getCreateItems().get(0);\n    assertEquals(\"newKey\", createdItem.getKey());\n    assertEquals(\"c\", createdItem.getValue());\n    assertEquals(\"comment\", createdItem.getComment());\n    assertEquals(4, createdItem.getLineNum());\n\n    List<ItemDTO> updateItems = changeSets.getUpdateItems();\n    ItemDTO updateItem1 = updateItems.get(0);\n    ItemDTO updateItem2 = updateItems.get(1);\n    assertEquals(\"c\", updateItem1.getKey());\n    assertEquals(\"newValue\", updateItem1.getValue());\n    assertEquals(\"comment\", updateItem1.getComment());\n    assertEquals(2, updateItem1.getLineNum());\n\n    assertEquals(\"d\", updateItem2.getKey());\n    assertEquals(\"b\", updateItem2.getValue());\n    assertEquals(\"newComment\", updateItem2.getComment());\n    assertEquals(3, updateItem2.getLineNum());\n\n\n  }\n","realPath":"apollo-portal/src/test/java/com/ctrip/framework/apollo/portal/service/ConfigServiceTest.java","repoName":"apollo","snippetEndLine":0,"snippetStartLine":0,"startLine":131,"status":"B"}],"commitId":"4c64de670370ead7df77da72f379e7a366a4431a","commitMessage":"@@@Merge pull request #326 from lepdou/ut\n\nut","date":"2016-07-15 15:47:12","modifiedFileCount":"8","status":"B","submitter":"Jason Song"},{"authorTime":"2016-08-15 14:43:02","codes":[{"authorDate":"2016-08-15 14:43:02","commitOrder":2,"curCode":"  public void testCompareTargetNamespaceHasNoItems(){\n    ItemDTO sourceItem1 = new ItemDTO(\"a\",\"b\",\"comment\",1);\n    List<ItemDTO> sourceItems = Arrays.asList(sourceItem1);\n\n    String appId = \"6666\", env = \"LOCAL\", clusterName = ConfigConsts.CLUSTER_NAME_DEFAULT,\n        namespaceName = ConfigConsts.NAMESPACE_APPLICATION;\n    List<NamespaceIdentifier> namespaceIdentifiers = generateNamespaceIdentifer(appId, env, clusterName, namespaceName);\n    NamespaceDTO namespaceDTO = generateNamespaceDTO(appId, clusterName, namespaceName);\n\n    when(namespaceAPI.loadNamespace(appId, Env.valueOf(env), clusterName, namespaceName)).thenReturn(namespaceDTO);\n    when(itemAPI.findItems(appId, Env.valueOf(env), clusterName, namespaceName)).thenReturn(null);\n\n    UserInfo userInfo = new UserInfo();\n    userInfo.setUserId(\"test\");\n    when(userInfoHolder.getUser()).thenReturn(userInfo);\n\n    List<ItemDiffs> itemDiffses = configService.compare(namespaceIdentifiers, sourceItems);\n\n    assertEquals(1,itemDiffses.size());\n    ItemDiffs itemDiffs = itemDiffses.get(0);\n    ItemChangeSets changeSets = itemDiffs.getDiffs();\n    assertEquals(0, changeSets.getUpdateItems().size());\n    assertEquals(0, changeSets.getDeleteItems().size());\n\n    List<ItemDTO> createItems = changeSets.getCreateItems();\n    ItemDTO createItem = createItems.get(0);\n    assertEquals(1, createItem.getLineNum());\n    assertEquals(\"a\", createItem.getKey());\n    assertEquals(\"b\", createItem.getValue());\n    assertEquals(\"comment\", createItem.getComment());\n  }\n","date":"2016-08-15 14:43:02","endLine":127,"groupId":"982","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testCompareTargetNamespaceHasNoItems","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-apollo-10-0.7/blobInfo/CC_OUT/blobs/19/c767f4c470d82eefe193e57354670340507d29.src","preCode":"  public void testCompareTargetNamespaceHasNoItems(){\n    ItemDTO sourceItem1 = new ItemDTO(\"a\",\"b\",\"comment\",1);\n    List<ItemDTO> sourceItems = Arrays.asList(sourceItem1);\n\n    String appId = \"6666\", env = \"LOCAL\", clusterName = ConfigConsts.CLUSTER_NAME_DEFAULT,\n        namespaceName = ConfigConsts.NAMESPACE_APPLICATION;\n    List<NamespaceIdentifer> namespaceIdentifers = generateNamespaceIdentifer(appId, env, clusterName, namespaceName);\n    NamespaceDTO namespaceDTO = generateNamespaceDTO(appId, clusterName, namespaceName);\n\n    when(namespaceAPI.loadNamespace(appId, Env.valueOf(env), clusterName, namespaceName)).thenReturn(namespaceDTO);\n    when(itemAPI.findItems(appId, Env.valueOf(env), clusterName, namespaceName)).thenReturn(null);\n\n    UserInfo userInfo = new UserInfo();\n    userInfo.setUserId(\"test\");\n    when(userInfoHolder.getUser()).thenReturn(userInfo);\n\n    List<ItemDiffs> itemDiffses = configService.compare(namespaceIdentifers, sourceItems);\n\n    assertEquals(1,itemDiffses.size());\n    ItemDiffs itemDiffs = itemDiffses.get(0);\n    ItemChangeSets changeSets = itemDiffs.getDiffs();\n    assertEquals(0, changeSets.getUpdateItems().size());\n    assertEquals(0, changeSets.getDeleteItems().size());\n\n    List<ItemDTO> createItems = changeSets.getCreateItems();\n    ItemDTO createItem = createItems.get(0);\n    assertEquals(1, createItem.getLineNum());\n    assertEquals(\"a\", createItem.getKey());\n    assertEquals(\"b\", createItem.getValue());\n    assertEquals(\"comment\", createItem.getComment());\n  }\n","realPath":"apollo-portal/src/test/java/com/ctrip/framework/apollo/portal/service/ConfigServiceTest.java","repoName":"apollo","snippetEndLine":0,"snippetStartLine":0,"startLine":97,"status":"M"},{"authorDate":"2016-08-15 14:43:02","commitOrder":2,"curCode":"  public void testCompare(){\n    ItemDTO sourceItem1 = new ItemDTO(\"a\",\"b\",\"comment\",1);\r\n    ItemDTO sourceItem2 = new ItemDTO(\"newKey\",\"c\",\"comment\",2);\r\n    ItemDTO sourceItem3 = new ItemDTO(\"c\",\"newValue\",\"comment\",3);\r\n    ItemDTO sourceItem4 = new ItemDTO(\"d\",\"b\",\"newComment\",4);\r\n    List<ItemDTO> sourceItems = Arrays.asList(sourceItem1, sourceItem2, sourceItem3, sourceItem4);\n\n    ItemDTO targetItem1 = new ItemDTO(\"a\",\"b\",\"comment\",1);\n    ItemDTO targetItem2 = new ItemDTO(\"c\",\"oldValue\",\"comment\",2);\n    ItemDTO targetItem3 = new ItemDTO(\"d\",\"b\",\"oldComment\",3);\n    List<ItemDTO> targetItems = Arrays.asList(targetItem1, targetItem2, targetItem3);\n\n    String appId = \"6666\", env = \"LOCAL\", clusterName = ConfigConsts.CLUSTER_NAME_DEFAULT,\n        namespaceName = ConfigConsts.NAMESPACE_APPLICATION;\n    List<NamespaceIdentifier> namespaceIdentifiers = generateNamespaceIdentifer(appId, env, clusterName, namespaceName);\n    NamespaceDTO namespaceDTO = generateNamespaceDTO(appId, clusterName, namespaceName);\n\n    when(namespaceAPI.loadNamespace(appId, Env.valueOf(env), clusterName, namespaceName)).thenReturn(namespaceDTO);\n    when(itemAPI.findItems(appId, Env.valueOf(env), clusterName, namespaceName)).thenReturn(targetItems);\n\n    UserInfo userInfo = new UserInfo();\n    userInfo.setUserId(\"test\");\n    when(userInfoHolder.getUser()).thenReturn(userInfo);\n\n    List<ItemDiffs> itemDiffses = configService.compare(namespaceIdentifiers, sourceItems);\n    assertEquals(1, itemDiffses.size());\n\n    ItemDiffs itemDiffs = itemDiffses.get(0);\n\n    ItemChangeSets changeSets = itemDiffs.getDiffs();\n    assertEquals(0, changeSets.getDeleteItems().size());\n    assertEquals(2, changeSets.getUpdateItems().size());\n    assertEquals(1, changeSets.getCreateItems().size());\n\n    NamespaceIdentifier namespaceIdentifier = itemDiffs.getNamespace();\n    assertEquals(appId, namespaceIdentifier.getAppId());\n    assertEquals(Env.valueOf(\"LOCAL\"), namespaceIdentifier.getEnv());\n    assertEquals(clusterName, namespaceIdentifier.getClusterName());\n    assertEquals(namespaceName, namespaceIdentifier.getNamespaceName());\n\n    ItemDTO createdItem = changeSets.getCreateItems().get(0);\n    assertEquals(\"newKey\", createdItem.getKey());\n    assertEquals(\"c\", createdItem.getValue());\n    assertEquals(\"comment\", createdItem.getComment());\n    assertEquals(4, createdItem.getLineNum());\n\n    List<ItemDTO> updateItems = changeSets.getUpdateItems();\n    ItemDTO updateItem1 = updateItems.get(0);\n    ItemDTO updateItem2 = updateItems.get(1);\n    assertEquals(\"c\", updateItem1.getKey());\n    assertEquals(\"newValue\", updateItem1.getValue());\n    assertEquals(\"comment\", updateItem1.getComment());\n    assertEquals(2, updateItem1.getLineNum());\n\n    assertEquals(\"d\", updateItem2.getKey());\n    assertEquals(\"b\", updateItem2.getValue());\n    assertEquals(\"newComment\", updateItem2.getComment());\n    assertEquals(3, updateItem2.getLineNum());\n\n\n  }\n","date":"2016-08-15 14:43:02","endLine":190,"groupId":"901","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testCompare","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-apollo-10-0.7/blobInfo/CC_OUT/blobs/19/c767f4c470d82eefe193e57354670340507d29.src","preCode":"  public void testCompare(){\n    ItemDTO sourceItem1 = new ItemDTO(\"a\",\"b\",\"comment\",1);\r\n    ItemDTO sourceItem2 = new ItemDTO(\"newKey\",\"c\",\"comment\",2);\r\n    ItemDTO sourceItem3 = new ItemDTO(\"c\",\"newValue\",\"comment\",3);\r\n    ItemDTO sourceItem4 = new ItemDTO(\"d\",\"b\",\"newComment\",4);\r\n    List<ItemDTO> sourceItems = Arrays.asList(sourceItem1, sourceItem2, sourceItem3, sourceItem4);\n\n    ItemDTO targetItem1 = new ItemDTO(\"a\",\"b\",\"comment\",1);\n    ItemDTO targetItem2 = new ItemDTO(\"c\",\"oldValue\",\"comment\",2);\n    ItemDTO targetItem3 = new ItemDTO(\"d\",\"b\",\"oldComment\",3);\n    List<ItemDTO> targetItems = Arrays.asList(targetItem1, targetItem2, targetItem3);\n\n    String appId = \"6666\", env = \"LOCAL\", clusterName = ConfigConsts.CLUSTER_NAME_DEFAULT,\n        namespaceName = ConfigConsts.NAMESPACE_APPLICATION;\n    List<NamespaceIdentifer> namespaceIdentifers = generateNamespaceIdentifer(appId, env, clusterName, namespaceName);\n    NamespaceDTO namespaceDTO = generateNamespaceDTO(appId, clusterName, namespaceName);\n\n    when(namespaceAPI.loadNamespace(appId, Env.valueOf(env), clusterName, namespaceName)).thenReturn(namespaceDTO);\n    when(itemAPI.findItems(appId, Env.valueOf(env), clusterName, namespaceName)).thenReturn(targetItems);\n\n    UserInfo userInfo = new UserInfo();\n    userInfo.setUserId(\"test\");\n    when(userInfoHolder.getUser()).thenReturn(userInfo);\n\n    List<ItemDiffs> itemDiffses = configService.compare(namespaceIdentifers, sourceItems);\n    assertEquals(1, itemDiffses.size());\n\n    ItemDiffs itemDiffs = itemDiffses.get(0);\n\n    ItemChangeSets changeSets = itemDiffs.getDiffs();\n    assertEquals(0, changeSets.getDeleteItems().size());\n    assertEquals(2, changeSets.getUpdateItems().size());\n    assertEquals(1, changeSets.getCreateItems().size());\n\n    NamespaceIdentifer namespaceIdentifer = itemDiffs.getNamespace();\n    assertEquals(appId, namespaceIdentifer.getAppId());\n    assertEquals(Env.valueOf(\"LOCAL\"), namespaceIdentifer.getEnv());\n    assertEquals(clusterName, namespaceIdentifer.getClusterName());\n    assertEquals(namespaceName, namespaceIdentifer.getNamespaceName());\n\n    ItemDTO createdItem = changeSets.getCreateItems().get(0);\n    assertEquals(\"newKey\", createdItem.getKey());\n    assertEquals(\"c\", createdItem.getValue());\n    assertEquals(\"comment\", createdItem.getComment());\n    assertEquals(4, createdItem.getLineNum());\n\n    List<ItemDTO> updateItems = changeSets.getUpdateItems();\n    ItemDTO updateItem1 = updateItems.get(0);\n    ItemDTO updateItem2 = updateItems.get(1);\n    assertEquals(\"c\", updateItem1.getKey());\n    assertEquals(\"newValue\", updateItem1.getValue());\n    assertEquals(\"comment\", updateItem1.getComment());\n    assertEquals(2, updateItem1.getLineNum());\n\n    assertEquals(\"d\", updateItem2.getKey());\n    assertEquals(\"b\", updateItem2.getValue());\n    assertEquals(\"newComment\", updateItem2.getComment());\n    assertEquals(3, updateItem2.getLineNum());\n\n\n  }\n","realPath":"apollo-portal/src/test/java/com/ctrip/framework/apollo/portal/service/ConfigServiceTest.java","repoName":"apollo","snippetEndLine":0,"snippetStartLine":0,"startLine":130,"status":"M"}],"commitId":"b87ed8ef334932b136f8ba1fe81eeb1d1bc0afc4","commitMessage":"@@@Merge branch 'master' into 'release'\n\nMaster2Release\n\n\n\nSee merge request !15","date":"2016-08-15 14:43:02","modifiedFileCount":"65","status":"M","submitter":"vss??"},{"authorTime":"2017-02-09 16:53:52","codes":[{"authorDate":"2017-02-09 16:53:52","commitOrder":3,"curCode":"  public void testCompareTargetNamespaceHasNoItems() {\n    ItemDTO sourceItem1 = new ItemDTO(\"a\", \"b\", \"comment\", 1);\n    List<ItemDTO> sourceItems = Arrays.asList(sourceItem1);\n\n    String appId = \"6666\", env = \"LOCAL\", clusterName = ConfigConsts.CLUSTER_NAME_DEFAULT,\n        namespaceName = ConfigConsts.NAMESPACE_APPLICATION;\n    List<NamespaceIdentifier>\n        namespaceIdentifiers =\n        generateNamespaceIdentifier(appId, env, clusterName, namespaceName);\n    NamespaceDTO namespaceDTO = generateNamespaceDTO(appId, clusterName, namespaceName);\n\n    when(namespaceAPI.loadNamespace(appId, Env.valueOf(env), clusterName, namespaceName)).thenReturn(namespaceDTO);\n    when(itemAPI.findItems(appId, Env.valueOf(env), clusterName, namespaceName)).thenReturn(null);\n\n    UserInfo userInfo = new UserInfo();\n    userInfo.setUserId(\"test\");\n    when(userInfoHolder.getUser()).thenReturn(userInfo);\n\n    List<ItemDiffs> itemDiffses = configService.compare(namespaceIdentifiers, sourceItems);\n\n    assertEquals(1, itemDiffses.size());\n    ItemDiffs itemDiffs = itemDiffses.get(0);\n    ItemChangeSets changeSets = itemDiffs.getDiffs();\n    assertEquals(0, changeSets.getUpdateItems().size());\n    assertEquals(0, changeSets.getDeleteItems().size());\n\n    List<ItemDTO> createItems = changeSets.getCreateItems();\n    ItemDTO createItem = createItems.get(0);\n    assertEquals(1, createItem.getLineNum());\n    assertEquals(\"a\", createItem.getKey());\n    assertEquals(\"b\", createItem.getValue());\n    assertEquals(\"comment\", createItem.getComment());\n  }\n","date":"2017-02-09 16:53:52","endLine":127,"groupId":"982","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testCompareTargetNamespaceHasNoItems","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-apollo-10-0.7/blobInfo/CC_OUT/blobs/6b/30f09cd168e7de38f966864ab745c50236a94b.src","preCode":"  public void testCompareTargetNamespaceHasNoItems(){\n    ItemDTO sourceItem1 = new ItemDTO(\"a\",\"b\",\"comment\",1);\n    List<ItemDTO> sourceItems = Arrays.asList(sourceItem1);\n\n    String appId = \"6666\", env = \"LOCAL\", clusterName = ConfigConsts.CLUSTER_NAME_DEFAULT,\n        namespaceName = ConfigConsts.NAMESPACE_APPLICATION;\n    List<NamespaceIdentifier> namespaceIdentifiers = generateNamespaceIdentifer(appId, env, clusterName, namespaceName);\n    NamespaceDTO namespaceDTO = generateNamespaceDTO(appId, clusterName, namespaceName);\n\n    when(namespaceAPI.loadNamespace(appId, Env.valueOf(env), clusterName, namespaceName)).thenReturn(namespaceDTO);\n    when(itemAPI.findItems(appId, Env.valueOf(env), clusterName, namespaceName)).thenReturn(null);\n\n    UserInfo userInfo = new UserInfo();\n    userInfo.setUserId(\"test\");\n    when(userInfoHolder.getUser()).thenReturn(userInfo);\n\n    List<ItemDiffs> itemDiffses = configService.compare(namespaceIdentifiers, sourceItems);\n\n    assertEquals(1,itemDiffses.size());\n    ItemDiffs itemDiffs = itemDiffses.get(0);\n    ItemChangeSets changeSets = itemDiffs.getDiffs();\n    assertEquals(0, changeSets.getUpdateItems().size());\n    assertEquals(0, changeSets.getDeleteItems().size());\n\n    List<ItemDTO> createItems = changeSets.getCreateItems();\n    ItemDTO createItem = createItems.get(0);\n    assertEquals(1, createItem.getLineNum());\n    assertEquals(\"a\", createItem.getKey());\n    assertEquals(\"b\", createItem.getValue());\n    assertEquals(\"comment\", createItem.getComment());\n  }\n","realPath":"apollo-portal/src/test/java/com/ctrip/framework/apollo/portal/service/ConfigServiceTest.java","repoName":"apollo","snippetEndLine":0,"snippetStartLine":0,"startLine":95,"status":"M"},{"authorDate":"2017-02-09 16:53:52","commitOrder":3,"curCode":"  public void testCompare() {\n    ItemDTO sourceItem1 = new ItemDTO(\"a\", \"b\", \"comment\", 1);\r\n    ItemDTO sourceItem2 = new ItemDTO(\"newKey\", \"c\", \"comment\", 2);\r\n    ItemDTO sourceItem3 = new ItemDTO(\"c\", \"newValue\", \"comment\", 3);\r\n    ItemDTO sourceItem4 = new ItemDTO(\"d\", \"b\", \"newComment\", 4);\r\n    List<ItemDTO> sourceItems = Arrays.asList(sourceItem1, sourceItem2, sourceItem3, sourceItem4);\n\n    ItemDTO targetItem1 = new ItemDTO(\"a\", \"b\", \"comment\", 1);\n    ItemDTO targetItem2 = new ItemDTO(\"c\", \"oldValue\", \"comment\", 2);\n    ItemDTO targetItem3 = new ItemDTO(\"d\", \"b\", \"oldComment\", 3);\n    List<ItemDTO> targetItems = Arrays.asList(targetItem1, targetItem2, targetItem3);\n\n    String appId = \"6666\", env = \"LOCAL\", clusterName = ConfigConsts.CLUSTER_NAME_DEFAULT,\n        namespaceName = ConfigConsts.NAMESPACE_APPLICATION;\n    List<NamespaceIdentifier>\n        namespaceIdentifiers =\n        generateNamespaceIdentifier(appId, env, clusterName, namespaceName);\n    NamespaceDTO namespaceDTO = generateNamespaceDTO(appId, clusterName, namespaceName);\n\n    when(namespaceAPI.loadNamespace(appId, Env.valueOf(env), clusterName, namespaceName)).thenReturn(namespaceDTO);\n    when(itemAPI.findItems(appId, Env.valueOf(env), clusterName, namespaceName)).thenReturn(targetItems);\n\n    UserInfo userInfo = new UserInfo();\n    userInfo.setUserId(\"test\");\n    when(userInfoHolder.getUser()).thenReturn(userInfo);\n\n    List<ItemDiffs> itemDiffses = configService.compare(namespaceIdentifiers, sourceItems);\n    assertEquals(1, itemDiffses.size());\n\n    ItemDiffs itemDiffs = itemDiffses.get(0);\n\n    ItemChangeSets changeSets = itemDiffs.getDiffs();\n    assertEquals(0, changeSets.getDeleteItems().size());\n    assertEquals(2, changeSets.getUpdateItems().size());\n    assertEquals(1, changeSets.getCreateItems().size());\n\n    NamespaceIdentifier namespaceIdentifier = itemDiffs.getNamespace();\n    assertEquals(appId, namespaceIdentifier.getAppId());\n    assertEquals(Env.valueOf(\"LOCAL\"), namespaceIdentifier.getEnv());\n    assertEquals(clusterName, namespaceIdentifier.getClusterName());\n    assertEquals(namespaceName, namespaceIdentifier.getNamespaceName());\n\n    ItemDTO createdItem = changeSets.getCreateItems().get(0);\n    assertEquals(\"newKey\", createdItem.getKey());\n    assertEquals(\"c\", createdItem.getValue());\n    assertEquals(\"comment\", createdItem.getComment());\n    assertEquals(4, createdItem.getLineNum());\n\n    List<ItemDTO> updateItems = changeSets.getUpdateItems();\n    ItemDTO updateItem1 = updateItems.get(0);\n    ItemDTO updateItem2 = updateItems.get(1);\n    assertEquals(\"c\", updateItem1.getKey());\n    assertEquals(\"newValue\", updateItem1.getValue());\n    assertEquals(\"comment\", updateItem1.getComment());\n    assertEquals(2, updateItem1.getLineNum());\n\n    assertEquals(\"d\", updateItem2.getKey());\n    assertEquals(\"b\", updateItem2.getValue());\n    assertEquals(\"newComment\", updateItem2.getComment());\n    assertEquals(3, updateItem2.getLineNum());\n\n\n  }\n","date":"2017-02-09 16:53:52","endLine":192,"groupId":"901","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testCompare","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-apollo-10-0.7/blobInfo/CC_OUT/blobs/6b/30f09cd168e7de38f966864ab745c50236a94b.src","preCode":"  public void testCompare(){\n    ItemDTO sourceItem1 = new ItemDTO(\"a\",\"b\",\"comment\",1);\r\n    ItemDTO sourceItem2 = new ItemDTO(\"newKey\",\"c\",\"comment\",2);\r\n    ItemDTO sourceItem3 = new ItemDTO(\"c\",\"newValue\",\"comment\",3);\r\n    ItemDTO sourceItem4 = new ItemDTO(\"d\",\"b\",\"newComment\",4);\r\n    List<ItemDTO> sourceItems = Arrays.asList(sourceItem1, sourceItem2, sourceItem3, sourceItem4);\n\n    ItemDTO targetItem1 = new ItemDTO(\"a\",\"b\",\"comment\",1);\n    ItemDTO targetItem2 = new ItemDTO(\"c\",\"oldValue\",\"comment\",2);\n    ItemDTO targetItem3 = new ItemDTO(\"d\",\"b\",\"oldComment\",3);\n    List<ItemDTO> targetItems = Arrays.asList(targetItem1, targetItem2, targetItem3);\n\n    String appId = \"6666\", env = \"LOCAL\", clusterName = ConfigConsts.CLUSTER_NAME_DEFAULT,\n        namespaceName = ConfigConsts.NAMESPACE_APPLICATION;\n    List<NamespaceIdentifier> namespaceIdentifiers = generateNamespaceIdentifer(appId, env, clusterName, namespaceName);\n    NamespaceDTO namespaceDTO = generateNamespaceDTO(appId, clusterName, namespaceName);\n\n    when(namespaceAPI.loadNamespace(appId, Env.valueOf(env), clusterName, namespaceName)).thenReturn(namespaceDTO);\n    when(itemAPI.findItems(appId, Env.valueOf(env), clusterName, namespaceName)).thenReturn(targetItems);\n\n    UserInfo userInfo = new UserInfo();\n    userInfo.setUserId(\"test\");\n    when(userInfoHolder.getUser()).thenReturn(userInfo);\n\n    List<ItemDiffs> itemDiffses = configService.compare(namespaceIdentifiers, sourceItems);\n    assertEquals(1, itemDiffses.size());\n\n    ItemDiffs itemDiffs = itemDiffses.get(0);\n\n    ItemChangeSets changeSets = itemDiffs.getDiffs();\n    assertEquals(0, changeSets.getDeleteItems().size());\n    assertEquals(2, changeSets.getUpdateItems().size());\n    assertEquals(1, changeSets.getCreateItems().size());\n\n    NamespaceIdentifier namespaceIdentifier = itemDiffs.getNamespace();\n    assertEquals(appId, namespaceIdentifier.getAppId());\n    assertEquals(Env.valueOf(\"LOCAL\"), namespaceIdentifier.getEnv());\n    assertEquals(clusterName, namespaceIdentifier.getClusterName());\n    assertEquals(namespaceName, namespaceIdentifier.getNamespaceName());\n\n    ItemDTO createdItem = changeSets.getCreateItems().get(0);\n    assertEquals(\"newKey\", createdItem.getKey());\n    assertEquals(\"c\", createdItem.getValue());\n    assertEquals(\"comment\", createdItem.getComment());\n    assertEquals(4, createdItem.getLineNum());\n\n    List<ItemDTO> updateItems = changeSets.getUpdateItems();\n    ItemDTO updateItem1 = updateItems.get(0);\n    ItemDTO updateItem2 = updateItems.get(1);\n    assertEquals(\"c\", updateItem1.getKey());\n    assertEquals(\"newValue\", updateItem1.getValue());\n    assertEquals(\"comment\", updateItem1.getComment());\n    assertEquals(2, updateItem1.getLineNum());\n\n    assertEquals(\"d\", updateItem2.getKey());\n    assertEquals(\"b\", updateItem2.getValue());\n    assertEquals(\"newComment\", updateItem2.getComment());\n    assertEquals(3, updateItem2.getLineNum());\n\n\n  }\n","realPath":"apollo-portal/src/test/java/com/ctrip/framework/apollo/portal/service/ConfigServiceTest.java","repoName":"apollo","snippetEndLine":0,"snippetStartLine":0,"startLine":130,"status":"M"}],"commitId":"d3e0fdb7277b27005058596edde9aabe5c0e6c13","commitMessage":"@@@Merge pull request #536 from lepdou/delete_namespace\n\ndelete namespace","date":"2017-02-09 16:53:52","modifiedFileCount":"16","status":"M","submitter":"Jason Song"},{"authorTime":"2017-02-09 16:53:52","codes":[{"authorDate":"2020-09-11 20:01:31","commitOrder":4,"curCode":"  public void testCompareTargetNamespaceHasNoItems() {\n    ItemDTO sourceItem1 = new ItemDTO(\"a\", \"b\", \"comment\", 1);\n    List<ItemDTO> sourceItems = Collections.singletonList(sourceItem1);\n\n    String appId = \"6666\", env = \"LOCAL\", clusterName = ConfigConsts.CLUSTER_NAME_DEFAULT,\n        namespaceName = ConfigConsts.NAMESPACE_APPLICATION;\n    List<NamespaceIdentifier>\n        namespaceIdentifiers =\n        generateNamespaceIdentifier(appId, env, clusterName, namespaceName);\n    NamespaceDTO namespaceDTO = generateNamespaceDTO(appId, clusterName, namespaceName);\n\n    when(namespaceAPI.loadNamespace(appId, Env.valueOf(env), clusterName, namespaceName)).thenReturn(namespaceDTO);\n    when(itemAPI.findItems(appId, Env.valueOf(env), clusterName, namespaceName)).thenReturn(null);\n\n    UserInfo userInfo = new UserInfo();\n    userInfo.setUserId(\"test\");\n    when(userInfoHolder.getUser()).thenReturn(userInfo);\n\n    List<ItemDiffs> itemDiffses = configService.compare(namespaceIdentifiers, sourceItems);\n\n    assertEquals(1, itemDiffses.size());\n    ItemDiffs itemDiffs = itemDiffses.get(0);\n    ItemChangeSets changeSets = itemDiffs.getDiffs();\n    assertEquals(0, changeSets.getUpdateItems().size());\n    assertEquals(0, changeSets.getDeleteItems().size());\n\n    List<ItemDTO> createItems = changeSets.getCreateItems();\n    ItemDTO createItem = createItems.get(0);\n    assertEquals(1, createItem.getLineNum());\n    assertEquals(\"a\", createItem.getKey());\n    assertEquals(\"b\", createItem.getValue());\n    assertEquals(\"comment\", createItem.getComment());\n  }\n","date":"2020-09-11 20:01:31","endLine":134,"groupId":"10118","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"testCompareTargetNamespaceHasNoItems","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-apollo-10-0.7/blobInfo/CC_OUT/blobs/e8/4fc4491ad9f58e782e025cd81886bf9eb13ad7.src","preCode":"  public void testCompareTargetNamespaceHasNoItems() {\n    ItemDTO sourceItem1 = new ItemDTO(\"a\", \"b\", \"comment\", 1);\n    List<ItemDTO> sourceItems = Arrays.asList(sourceItem1);\n\n    String appId = \"6666\", env = \"LOCAL\", clusterName = ConfigConsts.CLUSTER_NAME_DEFAULT,\n        namespaceName = ConfigConsts.NAMESPACE_APPLICATION;\n    List<NamespaceIdentifier>\n        namespaceIdentifiers =\n        generateNamespaceIdentifier(appId, env, clusterName, namespaceName);\n    NamespaceDTO namespaceDTO = generateNamespaceDTO(appId, clusterName, namespaceName);\n\n    when(namespaceAPI.loadNamespace(appId, Env.valueOf(env), clusterName, namespaceName)).thenReturn(namespaceDTO);\n    when(itemAPI.findItems(appId, Env.valueOf(env), clusterName, namespaceName)).thenReturn(null);\n\n    UserInfo userInfo = new UserInfo();\n    userInfo.setUserId(\"test\");\n    when(userInfoHolder.getUser()).thenReturn(userInfo);\n\n    List<ItemDiffs> itemDiffses = configService.compare(namespaceIdentifiers, sourceItems);\n\n    assertEquals(1, itemDiffses.size());\n    ItemDiffs itemDiffs = itemDiffses.get(0);\n    ItemChangeSets changeSets = itemDiffs.getDiffs();\n    assertEquals(0, changeSets.getUpdateItems().size());\n    assertEquals(0, changeSets.getDeleteItems().size());\n\n    List<ItemDTO> createItems = changeSets.getCreateItems();\n    ItemDTO createItem = createItems.get(0);\n    assertEquals(1, createItem.getLineNum());\n    assertEquals(\"a\", createItem.getKey());\n    assertEquals(\"b\", createItem.getValue());\n    assertEquals(\"comment\", createItem.getComment());\n  }\n","realPath":"apollo-portal/src/test/java/com/ctrip/framework/apollo/portal/service/ConfigServiceTest.java","repoName":"apollo","snippetEndLine":0,"snippetStartLine":0,"startLine":102,"status":"M"},{"authorDate":"2017-02-09 16:53:52","commitOrder":4,"curCode":"  public void testCompare() {\n    ItemDTO sourceItem1 = new ItemDTO(\"a\", \"b\", \"comment\", 1);\r\n    ItemDTO sourceItem2 = new ItemDTO(\"newKey\", \"c\", \"comment\", 2);\r\n    ItemDTO sourceItem3 = new ItemDTO(\"c\", \"newValue\", \"comment\", 3);\r\n    ItemDTO sourceItem4 = new ItemDTO(\"d\", \"b\", \"newComment\", 4);\r\n    List<ItemDTO> sourceItems = Arrays.asList(sourceItem1, sourceItem2, sourceItem3, sourceItem4);\n\n    ItemDTO targetItem1 = new ItemDTO(\"a\", \"b\", \"comment\", 1);\n    ItemDTO targetItem2 = new ItemDTO(\"c\", \"oldValue\", \"comment\", 2);\n    ItemDTO targetItem3 = new ItemDTO(\"d\", \"b\", \"oldComment\", 3);\n    List<ItemDTO> targetItems = Arrays.asList(targetItem1, targetItem2, targetItem3);\n\n    String appId = \"6666\", env = \"LOCAL\", clusterName = ConfigConsts.CLUSTER_NAME_DEFAULT,\n        namespaceName = ConfigConsts.NAMESPACE_APPLICATION;\n    List<NamespaceIdentifier>\n        namespaceIdentifiers =\n        generateNamespaceIdentifier(appId, env, clusterName, namespaceName);\n    NamespaceDTO namespaceDTO = generateNamespaceDTO(appId, clusterName, namespaceName);\n\n    when(namespaceAPI.loadNamespace(appId, Env.valueOf(env), clusterName, namespaceName)).thenReturn(namespaceDTO);\n    when(itemAPI.findItems(appId, Env.valueOf(env), clusterName, namespaceName)).thenReturn(targetItems);\n\n    UserInfo userInfo = new UserInfo();\n    userInfo.setUserId(\"test\");\n    when(userInfoHolder.getUser()).thenReturn(userInfo);\n\n    List<ItemDiffs> itemDiffses = configService.compare(namespaceIdentifiers, sourceItems);\n    assertEquals(1, itemDiffses.size());\n\n    ItemDiffs itemDiffs = itemDiffses.get(0);\n\n    ItemChangeSets changeSets = itemDiffs.getDiffs();\n    assertEquals(0, changeSets.getDeleteItems().size());\n    assertEquals(2, changeSets.getUpdateItems().size());\n    assertEquals(1, changeSets.getCreateItems().size());\n\n    NamespaceIdentifier namespaceIdentifier = itemDiffs.getNamespace();\n    assertEquals(appId, namespaceIdentifier.getAppId());\n    assertEquals(Env.valueOf(\"LOCAL\"), namespaceIdentifier.getEnv());\n    assertEquals(clusterName, namespaceIdentifier.getClusterName());\n    assertEquals(namespaceName, namespaceIdentifier.getNamespaceName());\n\n    ItemDTO createdItem = changeSets.getCreateItems().get(0);\n    assertEquals(\"newKey\", createdItem.getKey());\n    assertEquals(\"c\", createdItem.getValue());\n    assertEquals(\"comment\", createdItem.getComment());\n    assertEquals(4, createdItem.getLineNum());\n\n    List<ItemDTO> updateItems = changeSets.getUpdateItems();\n    ItemDTO updateItem1 = updateItems.get(0);\n    ItemDTO updateItem2 = updateItems.get(1);\n    assertEquals(\"c\", updateItem1.getKey());\n    assertEquals(\"newValue\", updateItem1.getValue());\n    assertEquals(\"comment\", updateItem1.getComment());\n    assertEquals(2, updateItem1.getLineNum());\n\n    assertEquals(\"d\", updateItem2.getKey());\n    assertEquals(\"b\", updateItem2.getValue());\n    assertEquals(\"newComment\", updateItem2.getComment());\n    assertEquals(3, updateItem2.getLineNum());\n\n\n  }\n","date":"2017-02-09 16:53:52","endLine":192,"groupId":"10118","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"testCompare","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-apollo-10-0.7/blobInfo/CC_OUT/blobs/6b/30f09cd168e7de38f966864ab745c50236a94b.src","preCode":"  public void testCompare() {\n    ItemDTO sourceItem1 = new ItemDTO(\"a\", \"b\", \"comment\", 1);\r\n    ItemDTO sourceItem2 = new ItemDTO(\"newKey\", \"c\", \"comment\", 2);\r\n    ItemDTO sourceItem3 = new ItemDTO(\"c\", \"newValue\", \"comment\", 3);\r\n    ItemDTO sourceItem4 = new ItemDTO(\"d\", \"b\", \"newComment\", 4);\r\n    List<ItemDTO> sourceItems = Arrays.asList(sourceItem1, sourceItem2, sourceItem3, sourceItem4);\n\n    ItemDTO targetItem1 = new ItemDTO(\"a\", \"b\", \"comment\", 1);\n    ItemDTO targetItem2 = new ItemDTO(\"c\", \"oldValue\", \"comment\", 2);\n    ItemDTO targetItem3 = new ItemDTO(\"d\", \"b\", \"oldComment\", 3);\n    List<ItemDTO> targetItems = Arrays.asList(targetItem1, targetItem2, targetItem3);\n\n    String appId = \"6666\", env = \"LOCAL\", clusterName = ConfigConsts.CLUSTER_NAME_DEFAULT,\n        namespaceName = ConfigConsts.NAMESPACE_APPLICATION;\n    List<NamespaceIdentifier>\n        namespaceIdentifiers =\n        generateNamespaceIdentifier(appId, env, clusterName, namespaceName);\n    NamespaceDTO namespaceDTO = generateNamespaceDTO(appId, clusterName, namespaceName);\n\n    when(namespaceAPI.loadNamespace(appId, Env.valueOf(env), clusterName, namespaceName)).thenReturn(namespaceDTO);\n    when(itemAPI.findItems(appId, Env.valueOf(env), clusterName, namespaceName)).thenReturn(targetItems);\n\n    UserInfo userInfo = new UserInfo();\n    userInfo.setUserId(\"test\");\n    when(userInfoHolder.getUser()).thenReturn(userInfo);\n\n    List<ItemDiffs> itemDiffses = configService.compare(namespaceIdentifiers, sourceItems);\n    assertEquals(1, itemDiffses.size());\n\n    ItemDiffs itemDiffs = itemDiffses.get(0);\n\n    ItemChangeSets changeSets = itemDiffs.getDiffs();\n    assertEquals(0, changeSets.getDeleteItems().size());\n    assertEquals(2, changeSets.getUpdateItems().size());\n    assertEquals(1, changeSets.getCreateItems().size());\n\n    NamespaceIdentifier namespaceIdentifier = itemDiffs.getNamespace();\n    assertEquals(appId, namespaceIdentifier.getAppId());\n    assertEquals(Env.valueOf(\"LOCAL\"), namespaceIdentifier.getEnv());\n    assertEquals(clusterName, namespaceIdentifier.getClusterName());\n    assertEquals(namespaceName, namespaceIdentifier.getNamespaceName());\n\n    ItemDTO createdItem = changeSets.getCreateItems().get(0);\n    assertEquals(\"newKey\", createdItem.getKey());\n    assertEquals(\"c\", createdItem.getValue());\n    assertEquals(\"comment\", createdItem.getComment());\n    assertEquals(4, createdItem.getLineNum());\n\n    List<ItemDTO> updateItems = changeSets.getUpdateItems();\n    ItemDTO updateItem1 = updateItems.get(0);\n    ItemDTO updateItem2 = updateItems.get(1);\n    assertEquals(\"c\", updateItem1.getKey());\n    assertEquals(\"newValue\", updateItem1.getValue());\n    assertEquals(\"comment\", updateItem1.getComment());\n    assertEquals(2, updateItem1.getLineNum());\n\n    assertEquals(\"d\", updateItem2.getKey());\n    assertEquals(\"b\", updateItem2.getValue());\n    assertEquals(\"newComment\", updateItem2.getComment());\n    assertEquals(3, updateItem2.getLineNum());\n\n\n  }\n","realPath":"apollo-portal/src/test/java/com/ctrip/framework/apollo/portal/service/ConfigServiceTest.java","repoName":"apollo","snippetEndLine":0,"snippetStartLine":0,"startLine":130,"status":"N"}],"commitId":"e321a8e7f315b2be45d38923e9bec3e3145332fe","commitMessage":"@@@Simplify code (#3290)\n\n","date":"2020-09-11 20:01:31","modifiedFileCount":"87","status":"M","submitter":"waters"}]
