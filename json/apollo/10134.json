[{"authorTime":"2017-04-28 14:45:48","codes":[{"authorDate":"2017-04-28 14:45:48","commitOrder":1,"curCode":"  public void testInitNamespaceRoleNotExisted(){\n\n    String modifyNamespaceRoleName = RoleUtils.buildModifyNamespaceRoleName(APP_ID, NAMESPACE);\n    when(rolePermissionService.findRoleByRoleName(modifyNamespaceRoleName)).\n        thenReturn(null);\n\n    String releaseNamespaceRoleName = RoleUtils.buildReleaseNamespaceRoleName(APP_ID, NAMESPACE);\n    when(rolePermissionService.findRoleByRoleName(releaseNamespaceRoleName)).\n        thenReturn(null);\n\n    when(userInfoHolder.getUser()).thenReturn(mockUser());\n    when(rolePermissionService.createPermission(any())).thenReturn(mockPermission());\n\n    roleInitializationService.initNamespaceRoles(APP_ID, NAMESPACE);\n\n    verify(rolePermissionService, times(2)).findRoleByRoleName(anyString());\n    verify(rolePermissionService, times(2)).createPermission(any());\n    verify(rolePermissionService, times(2)).createRoleWithPermissions(any(), anySetOf(Long.class));\n  }\n","date":"2017-04-28 14:45:48","endLine":103,"groupId":"1810","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testInitNamespaceRoleNotExisted","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-apollo-10-0.7/blobInfo/CC_OUT/blobs/eb/abe617585be53e89c05dbe30bc63052d4fddb7.src","preCode":"  public void testInitNamespaceRoleNotExisted(){\n\n    String modifyNamespaceRoleName = RoleUtils.buildModifyNamespaceRoleName(APP_ID, NAMESPACE);\n    when(rolePermissionService.findRoleByRoleName(modifyNamespaceRoleName)).\n        thenReturn(null);\n\n    String releaseNamespaceRoleName = RoleUtils.buildReleaseNamespaceRoleName(APP_ID, NAMESPACE);\n    when(rolePermissionService.findRoleByRoleName(releaseNamespaceRoleName)).\n        thenReturn(null);\n\n    when(userInfoHolder.getUser()).thenReturn(mockUser());\n    when(rolePermissionService.createPermission(any())).thenReturn(mockPermission());\n\n    roleInitializationService.initNamespaceRoles(APP_ID, NAMESPACE);\n\n    verify(rolePermissionService, times(2)).findRoleByRoleName(anyString());\n    verify(rolePermissionService, times(2)).createPermission(any());\n    verify(rolePermissionService, times(2)).createRoleWithPermissions(any(), anySetOf(Long.class));\n  }\n","realPath":"apollo-portal/src/test/java/com/ctrip/framework/apollo/portal/spi/defaultImpl/RoleInitializationServiceTest.java","repoName":"apollo","snippetEndLine":0,"snippetStartLine":0,"startLine":85,"status":"B"},{"authorDate":"2017-04-28 14:45:48","commitOrder":1,"curCode":"  public void testInitNamespaceRoleModifyNSExisted(){\n\n    String modifyNamespaceRoleName = RoleUtils.buildModifyNamespaceRoleName(APP_ID, NAMESPACE);\n    when(rolePermissionService.findRoleByRoleName(modifyNamespaceRoleName)).\n        thenReturn(mockRole(modifyNamespaceRoleName));\n\n    String releaseNamespaceRoleName = RoleUtils.buildReleaseNamespaceRoleName(APP_ID, NAMESPACE);\n    when(rolePermissionService.findRoleByRoleName(releaseNamespaceRoleName)).\n        thenReturn(null);\n\n    when(userInfoHolder.getUser()).thenReturn(mockUser());\n    when(rolePermissionService.createPermission(any())).thenReturn(mockPermission());\n\n    roleInitializationService.initNamespaceRoles(APP_ID, NAMESPACE);\n\n    verify(rolePermissionService, times(2)).findRoleByRoleName(anyString());\n    verify(rolePermissionService, times(1)).createPermission(any());\n    verify(rolePermissionService, times(1)).createRoleWithPermissions(any(), anySetOf(Long.class));\n  }\n","date":"2017-04-28 14:45:48","endLine":124,"groupId":"1810","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testInitNamespaceRoleModifyNSExisted","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-apollo-10-0.7/blobInfo/CC_OUT/blobs/eb/abe617585be53e89c05dbe30bc63052d4fddb7.src","preCode":"  public void testInitNamespaceRoleModifyNSExisted(){\n\n    String modifyNamespaceRoleName = RoleUtils.buildModifyNamespaceRoleName(APP_ID, NAMESPACE);\n    when(rolePermissionService.findRoleByRoleName(modifyNamespaceRoleName)).\n        thenReturn(mockRole(modifyNamespaceRoleName));\n\n    String releaseNamespaceRoleName = RoleUtils.buildReleaseNamespaceRoleName(APP_ID, NAMESPACE);\n    when(rolePermissionService.findRoleByRoleName(releaseNamespaceRoleName)).\n        thenReturn(null);\n\n    when(userInfoHolder.getUser()).thenReturn(mockUser());\n    when(rolePermissionService.createPermission(any())).thenReturn(mockPermission());\n\n    roleInitializationService.initNamespaceRoles(APP_ID, NAMESPACE);\n\n    verify(rolePermissionService, times(2)).findRoleByRoleName(anyString());\n    verify(rolePermissionService, times(1)).createPermission(any());\n    verify(rolePermissionService, times(1)).createRoleWithPermissions(any(), anySetOf(Long.class));\n  }\n","realPath":"apollo-portal/src/test/java/com/ctrip/framework/apollo/portal/spi/defaultImpl/RoleInitializationServiceTest.java","repoName":"apollo","snippetEndLine":0,"snippetStartLine":0,"startLine":106,"status":"B"}],"commitId":"14ccb66eff042788db008b6134275aa3b990bb1e","commitMessage":"@@@Merge pull request #604 from timothynode/master\n\nchange Role Service to interface impl","date":"2017-04-28 14:45:48","modifiedFileCount":"4","status":"B","submitter":"??"},{"authorTime":"2017-05-03 15:43:46","codes":[{"authorDate":"2017-05-03 15:43:46","commitOrder":2,"curCode":"  public void testInitNamespaceRoleNotExisted(){\n\n    String modifyNamespaceRoleName = RoleUtils.buildModifyNamespaceRoleName(APP_ID, NAMESPACE);\n    when(rolePermissionService.findRoleByRoleName(modifyNamespaceRoleName)).\n        thenReturn(null);\n\n    String releaseNamespaceRoleName = RoleUtils.buildReleaseNamespaceRoleName(APP_ID, NAMESPACE);\n    when(rolePermissionService.findRoleByRoleName(releaseNamespaceRoleName)).\n        thenReturn(null);\n\n    when(userInfoHolder.getUser()).thenReturn(mockUser());\n    when(rolePermissionService.createPermission(any())).thenReturn(mockPermission());\n\n    roleInitializationService.initNamespaceRoles(APP_ID, NAMESPACE, CURRENT_USER);\n\n    verify(rolePermissionService, times(2)).findRoleByRoleName(anyString());\n    verify(rolePermissionService, times(2)).createPermission(any());\n    verify(rolePermissionService, times(2)).createRoleWithPermissions(any(), anySetOf(Long.class));\n  }\n","date":"2017-05-03 15:43:46","endLine":103,"groupId":"1785","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testInitNamespaceRoleNotExisted","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-apollo-10-0.7/blobInfo/CC_OUT/blobs/8e/183b0c789d23e7bf13d411eafbff06b17c0c2b.src","preCode":"  public void testInitNamespaceRoleNotExisted(){\n\n    String modifyNamespaceRoleName = RoleUtils.buildModifyNamespaceRoleName(APP_ID, NAMESPACE);\n    when(rolePermissionService.findRoleByRoleName(modifyNamespaceRoleName)).\n        thenReturn(null);\n\n    String releaseNamespaceRoleName = RoleUtils.buildReleaseNamespaceRoleName(APP_ID, NAMESPACE);\n    when(rolePermissionService.findRoleByRoleName(releaseNamespaceRoleName)).\n        thenReturn(null);\n\n    when(userInfoHolder.getUser()).thenReturn(mockUser());\n    when(rolePermissionService.createPermission(any())).thenReturn(mockPermission());\n\n    roleInitializationService.initNamespaceRoles(APP_ID, NAMESPACE);\n\n    verify(rolePermissionService, times(2)).findRoleByRoleName(anyString());\n    verify(rolePermissionService, times(2)).createPermission(any());\n    verify(rolePermissionService, times(2)).createRoleWithPermissions(any(), anySetOf(Long.class));\n  }\n","realPath":"apollo-portal/src/test/java/com/ctrip/framework/apollo/portal/spi/defaultImpl/RoleInitializationServiceTest.java","repoName":"apollo","snippetEndLine":0,"snippetStartLine":0,"startLine":85,"status":"M"},{"authorDate":"2017-05-03 15:43:46","commitOrder":2,"curCode":"  public void testInitNamespaceRoleModifyNSExisted(){\n\n    String modifyNamespaceRoleName = RoleUtils.buildModifyNamespaceRoleName(APP_ID, NAMESPACE);\n    when(rolePermissionService.findRoleByRoleName(modifyNamespaceRoleName)).\n        thenReturn(mockRole(modifyNamespaceRoleName));\n\n    String releaseNamespaceRoleName = RoleUtils.buildReleaseNamespaceRoleName(APP_ID, NAMESPACE);\n    when(rolePermissionService.findRoleByRoleName(releaseNamespaceRoleName)).\n        thenReturn(null);\n\n    when(userInfoHolder.getUser()).thenReturn(mockUser());\n    when(rolePermissionService.createPermission(any())).thenReturn(mockPermission());\n\n    roleInitializationService.initNamespaceRoles(APP_ID, NAMESPACE, CURRENT_USER);\n\n    verify(rolePermissionService, times(2)).findRoleByRoleName(anyString());\n    verify(rolePermissionService, times(1)).createPermission(any());\n    verify(rolePermissionService, times(1)).createRoleWithPermissions(any(), anySetOf(Long.class));\n  }\n","date":"2017-05-03 15:43:46","endLine":124,"groupId":"1785","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testInitNamespaceRoleModifyNSExisted","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-apollo-10-0.7/blobInfo/CC_OUT/blobs/8e/183b0c789d23e7bf13d411eafbff06b17c0c2b.src","preCode":"  public void testInitNamespaceRoleModifyNSExisted(){\n\n    String modifyNamespaceRoleName = RoleUtils.buildModifyNamespaceRoleName(APP_ID, NAMESPACE);\n    when(rolePermissionService.findRoleByRoleName(modifyNamespaceRoleName)).\n        thenReturn(mockRole(modifyNamespaceRoleName));\n\n    String releaseNamespaceRoleName = RoleUtils.buildReleaseNamespaceRoleName(APP_ID, NAMESPACE);\n    when(rolePermissionService.findRoleByRoleName(releaseNamespaceRoleName)).\n        thenReturn(null);\n\n    when(userInfoHolder.getUser()).thenReturn(mockUser());\n    when(rolePermissionService.createPermission(any())).thenReturn(mockPermission());\n\n    roleInitializationService.initNamespaceRoles(APP_ID, NAMESPACE);\n\n    verify(rolePermissionService, times(2)).findRoleByRoleName(anyString());\n    verify(rolePermissionService, times(1)).createPermission(any());\n    verify(rolePermissionService, times(1)).createRoleWithPermissions(any(), anySetOf(Long.class));\n  }\n","realPath":"apollo-portal/src/test/java/com/ctrip/framework/apollo/portal/spi/defaultImpl/RoleInitializationServiceTest.java","repoName":"apollo","snippetEndLine":0,"snippetStartLine":0,"startLine":106,"status":"M"}],"commitId":"c511583393e0fc5ccba8ccfdf9ae27d63d16b1e5","commitMessage":"@@@Merge pull request #612 from lepdou/openapi-createnamespace\n\nadd create namespace open api","date":"2017-05-03 15:43:46","modifiedFileCount":"14","status":"M","submitter":"??"},{"authorTime":"2019-01-20 16:45:04","codes":[{"authorDate":"2019-01-20 16:45:04","commitOrder":3,"curCode":"  public void testInitNamespaceRoleNotExisted(){\n\n    String modifyNamespaceRoleName = RoleUtils.buildModifyNamespaceRoleName(APP_ID, NAMESPACE);\n    when(rolePermissionService.findRoleByRoleName(modifyNamespaceRoleName)).\n        thenReturn(null);\n\n    String releaseNamespaceRoleName = RoleUtils.buildReleaseNamespaceRoleName(APP_ID, NAMESPACE);\n    when(rolePermissionService.findRoleByRoleName(releaseNamespaceRoleName)).\n        thenReturn(null);\n\n    when(userInfoHolder.getUser()).thenReturn(mockUser());\n    when(rolePermissionService.createPermission(any())).thenReturn(mockPermission());\n\n    roleInitializationService.initNamespaceRoles(APP_ID, NAMESPACE, CURRENT_USER);\n\n    verify(rolePermissionService, times(2)).findRoleByRoleName(anyString());\n    verify(rolePermissionService, times(2)).createPermission(any());\n    verify(rolePermissionService, times(2)).createRoleWithPermissions(any(), anySet());\n  }\n","date":"2019-01-20 16:45:04","endLine":111,"groupId":"10134","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testInitNamespaceRoleNotExisted","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-apollo-10-0.7/blobInfo/CC_OUT/blobs/54/2fd15be4aaca159b1d5fa7787f58c1d1033fe0.src","preCode":"  public void testInitNamespaceRoleNotExisted(){\n\n    String modifyNamespaceRoleName = RoleUtils.buildModifyNamespaceRoleName(APP_ID, NAMESPACE);\n    when(rolePermissionService.findRoleByRoleName(modifyNamespaceRoleName)).\n        thenReturn(null);\n\n    String releaseNamespaceRoleName = RoleUtils.buildReleaseNamespaceRoleName(APP_ID, NAMESPACE);\n    when(rolePermissionService.findRoleByRoleName(releaseNamespaceRoleName)).\n        thenReturn(null);\n\n    when(userInfoHolder.getUser()).thenReturn(mockUser());\n    when(rolePermissionService.createPermission(any())).thenReturn(mockPermission());\n\n    roleInitializationService.initNamespaceRoles(APP_ID, NAMESPACE, CURRENT_USER);\n\n    verify(rolePermissionService, times(2)).findRoleByRoleName(anyString());\n    verify(rolePermissionService, times(2)).createPermission(any());\n    verify(rolePermissionService, times(2)).createRoleWithPermissions(any(), anySetOf(Long.class));\n  }\n","realPath":"apollo-portal/src/test/java/com/ctrip/framework/apollo/portal/spi/defaultImpl/RoleInitializationServiceTest.java","repoName":"apollo","snippetEndLine":0,"snippetStartLine":0,"startLine":93,"status":"M"},{"authorDate":"2019-01-20 16:45:04","commitOrder":3,"curCode":"  public void testInitNamespaceRoleModifyNSExisted(){\n\n    String modifyNamespaceRoleName = RoleUtils.buildModifyNamespaceRoleName(APP_ID, NAMESPACE);\n    when(rolePermissionService.findRoleByRoleName(modifyNamespaceRoleName)).\n        thenReturn(mockRole(modifyNamespaceRoleName));\n\n    String releaseNamespaceRoleName = RoleUtils.buildReleaseNamespaceRoleName(APP_ID, NAMESPACE);\n    when(rolePermissionService.findRoleByRoleName(releaseNamespaceRoleName)).\n        thenReturn(null);\n\n    when(userInfoHolder.getUser()).thenReturn(mockUser());\n    when(rolePermissionService.createPermission(any())).thenReturn(mockPermission());\n\n    roleInitializationService.initNamespaceRoles(APP_ID, NAMESPACE, CURRENT_USER);\n\n    verify(rolePermissionService, times(2)).findRoleByRoleName(anyString());\n    verify(rolePermissionService, times(1)).createPermission(any());\n    verify(rolePermissionService, times(1)).createRoleWithPermissions(any(), anySet());\n  }\n","date":"2019-01-20 16:45:04","endLine":132,"groupId":"10134","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testInitNamespaceRoleModifyNSExisted","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-apollo-10-0.7/blobInfo/CC_OUT/blobs/54/2fd15be4aaca159b1d5fa7787f58c1d1033fe0.src","preCode":"  public void testInitNamespaceRoleModifyNSExisted(){\n\n    String modifyNamespaceRoleName = RoleUtils.buildModifyNamespaceRoleName(APP_ID, NAMESPACE);\n    when(rolePermissionService.findRoleByRoleName(modifyNamespaceRoleName)).\n        thenReturn(mockRole(modifyNamespaceRoleName));\n\n    String releaseNamespaceRoleName = RoleUtils.buildReleaseNamespaceRoleName(APP_ID, NAMESPACE);\n    when(rolePermissionService.findRoleByRoleName(releaseNamespaceRoleName)).\n        thenReturn(null);\n\n    when(userInfoHolder.getUser()).thenReturn(mockUser());\n    when(rolePermissionService.createPermission(any())).thenReturn(mockPermission());\n\n    roleInitializationService.initNamespaceRoles(APP_ID, NAMESPACE, CURRENT_USER);\n\n    verify(rolePermissionService, times(2)).findRoleByRoleName(anyString());\n    verify(rolePermissionService, times(1)).createPermission(any());\n    verify(rolePermissionService, times(1)).createRoleWithPermissions(any(), anySetOf(Long.class));\n  }\n","realPath":"apollo-portal/src/test/java/com/ctrip/framework/apollo/portal/spi/defaultImpl/RoleInitializationServiceTest.java","repoName":"apollo","snippetEndLine":0,"snippetStartLine":0,"startLine":114,"status":"M"}],"commitId":"0776918ccf6a6f24dafa9ed21513d848ae19a40c","commitMessage":"@@@Merge pull request #1895 from nobodyiam/upgrade-mockito\n\nupgrade to mockito 2.x version","date":"2019-01-20 16:45:04","modifiedFileCount":"38","status":"M","submitter":"Jason Song"}]
