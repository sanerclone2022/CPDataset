[{"authorTime":"2016-05-19 17:58:23","codes":[{"authorDate":"2016-05-19 17:58:23","commitOrder":1,"curCode":"  public void testQueryConfigWithAppOwnNamespace() throws Exception {\n    String someClientSideReleaseKey = \"1\";\n    String someServerSideReleaseKey = \"2\";\n    String someAppOwnNamespaceName = \"someAppOwn\";\n    HttpServletResponse someResponse = mock(HttpServletResponse.class);\n    AppNamespace someAppOwnNamespace =\n        assmbleAppNamespace(someAppId, someAppOwnNamespaceName);\n\n    when(configService.findRelease(someAppId, someClusterName, someAppOwnNamespaceName))\n        .thenReturn(someRelease);\n    when(appNamespaceService.findByNamespaceName(someAppOwnNamespaceName))\n        .thenReturn(someAppOwnNamespace);\n    when(someRelease.getReleaseKey()).thenReturn(someServerSideReleaseKey);\n\n    ApolloConfig result =\n        configController\n            .queryConfig(someAppId, someClusterName, someAppOwnNamespaceName, someDataCenter,\n                someClientSideReleaseKey, someResponse);\n\n    assertEquals(someServerSideReleaseKey, result.getReleaseKey());\n    assertEquals(someAppId, result.getAppId());\n    assertEquals(someClusterName, result.getCluster());\n    assertEquals(someAppOwnNamespaceName, result.getNamespaceName());\n    assertEquals(\"foo\", result.getConfigurations().get(\"apollo.bar\"));\n  }\n","date":"2016-05-19 17:58:23","endLine":156,"groupId":"1834","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testQueryConfigWithAppOwnNamespace","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-apollo-10-0.7/blobInfo/CC_OUT/blobs/ea/25eafff9da8048e140a9ba191b0d468620fc07.src","preCode":"  public void testQueryConfigWithAppOwnNamespace() throws Exception {\n    String someClientSideReleaseKey = \"1\";\n    String someServerSideReleaseKey = \"2\";\n    String someAppOwnNamespaceName = \"someAppOwn\";\n    HttpServletResponse someResponse = mock(HttpServletResponse.class);\n    AppNamespace someAppOwnNamespace =\n        assmbleAppNamespace(someAppId, someAppOwnNamespaceName);\n\n    when(configService.findRelease(someAppId, someClusterName, someAppOwnNamespaceName))\n        .thenReturn(someRelease);\n    when(appNamespaceService.findByNamespaceName(someAppOwnNamespaceName))\n        .thenReturn(someAppOwnNamespace);\n    when(someRelease.getReleaseKey()).thenReturn(someServerSideReleaseKey);\n\n    ApolloConfig result =\n        configController\n            .queryConfig(someAppId, someClusterName, someAppOwnNamespaceName, someDataCenter,\n                someClientSideReleaseKey, someResponse);\n\n    assertEquals(someServerSideReleaseKey, result.getReleaseKey());\n    assertEquals(someAppId, result.getAppId());\n    assertEquals(someClusterName, result.getCluster());\n    assertEquals(someAppOwnNamespaceName, result.getNamespaceName());\n    assertEquals(\"foo\", result.getConfigurations().get(\"apollo.bar\"));\n  }\n","realPath":"apollo-configservice/src/test/java/com/ctrip/framework/apollo/configservice/controller/ConfigControllerTest.java","repoName":"apollo","snippetEndLine":0,"snippetStartLine":0,"startLine":132,"status":"B"},{"authorDate":"2016-05-19 17:58:23","commitOrder":1,"curCode":"  public void testQueryConfigWithPubicNamespaceAndNoAppOverride() throws Exception {\n    String someClientSideReleaseKey = \"1\";\n    String someServerSideReleaseKey = \"2\";\n    HttpServletResponse someResponse = mock(HttpServletResponse.class);\n    String somePublicAppId = \"somePublicAppId\";\n    AppNamespace somePublicAppNamespace =\n        assmbleAppNamespace(somePublicAppId, somePublicNamespaceName);\n\n    when(configService.findRelease(someAppId, someClusterName, somePublicNamespaceName))\n        .thenReturn(null);\n    when(appNamespaceService.findByNamespaceName(somePublicNamespaceName))\n        .thenReturn(somePublicAppNamespace);\n    when(configService.findRelease(somePublicAppId, someDataCenter, somePublicNamespaceName))\n        .thenReturn(somePublicRelease);\n    when(somePublicRelease.getReleaseKey()).thenReturn(someServerSideReleaseKey);\n\n    ApolloConfig result =\n        configController\n            .queryConfig(someAppId, someClusterName, somePublicNamespaceName, someDataCenter,\n                someClientSideReleaseKey, someResponse);\n\n    assertEquals(someServerSideReleaseKey, result.getReleaseKey());\n    assertEquals(someAppId, result.getAppId());\n    assertEquals(someClusterName, result.getCluster());\n    assertEquals(somePublicNamespaceName, result.getNamespaceName());\n    assertEquals(\"foo\", result.getConfigurations().get(\"apollo.public.bar\"));\n  }\n","date":"2016-05-19 17:58:23","endLine":185,"groupId":"1835","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testQueryConfigWithPubicNamespaceAndNoAppOverride","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-apollo-10-0.7/blobInfo/CC_OUT/blobs/ea/25eafff9da8048e140a9ba191b0d468620fc07.src","preCode":"  public void testQueryConfigWithPubicNamespaceAndNoAppOverride() throws Exception {\n    String someClientSideReleaseKey = \"1\";\n    String someServerSideReleaseKey = \"2\";\n    HttpServletResponse someResponse = mock(HttpServletResponse.class);\n    String somePublicAppId = \"somePublicAppId\";\n    AppNamespace somePublicAppNamespace =\n        assmbleAppNamespace(somePublicAppId, somePublicNamespaceName);\n\n    when(configService.findRelease(someAppId, someClusterName, somePublicNamespaceName))\n        .thenReturn(null);\n    when(appNamespaceService.findByNamespaceName(somePublicNamespaceName))\n        .thenReturn(somePublicAppNamespace);\n    when(configService.findRelease(somePublicAppId, someDataCenter, somePublicNamespaceName))\n        .thenReturn(somePublicRelease);\n    when(somePublicRelease.getReleaseKey()).thenReturn(someServerSideReleaseKey);\n\n    ApolloConfig result =\n        configController\n            .queryConfig(someAppId, someClusterName, somePublicNamespaceName, someDataCenter,\n                someClientSideReleaseKey, someResponse);\n\n    assertEquals(someServerSideReleaseKey, result.getReleaseKey());\n    assertEquals(someAppId, result.getAppId());\n    assertEquals(someClusterName, result.getCluster());\n    assertEquals(somePublicNamespaceName, result.getNamespaceName());\n    assertEquals(\"foo\", result.getConfigurations().get(\"apollo.public.bar\"));\n  }\n","realPath":"apollo-configservice/src/test/java/com/ctrip/framework/apollo/configservice/controller/ConfigControllerTest.java","repoName":"apollo","snippetEndLine":0,"snippetStartLine":0,"startLine":159,"status":"B"}],"commitId":"0b3ace803cac96eb293336fd429738c5b92f845d","commitMessage":"@@@Merge pull request #209 from lepdou/rename\n\nRename","date":"2016-05-19 17:58:23","modifiedFileCount":"1","status":"B","submitter":"Jason Song"},{"authorTime":"2016-05-27 11:40:43","codes":[{"authorDate":"2016-05-27 11:40:43","commitOrder":2,"curCode":"  public void testQueryConfigWithAppOwnNamespace() throws Exception {\n    String someClientSideReleaseKey = \"1\";\n    String someServerSideReleaseKey = \"2\";\n    String someAppOwnNamespaceName = \"someAppOwn\";\n    HttpServletResponse someResponse = mock(HttpServletResponse.class);\n    AppNamespace someAppOwnNamespace =\n        assmbleAppNamespace(someAppId, someAppOwnNamespaceName);\n\n    when(configService.findRelease(someAppId, someClusterName, someAppOwnNamespaceName))\n        .thenReturn(someRelease);\n    when(appNamespaceService.findByNamespaceName(someAppOwnNamespaceName))\n        .thenReturn(someAppOwnNamespace);\n    when(someRelease.getReleaseKey()).thenReturn(someServerSideReleaseKey);\n\n    ApolloConfig result =\n        configController\n            .queryConfig(someAppId, someClusterName, someAppOwnNamespaceName, someDataCenter,\n                someClientSideReleaseKey, someClientIp, someResponse);\n\n    assertEquals(someServerSideReleaseKey, result.getReleaseKey());\n    assertEquals(someAppId, result.getAppId());\n    assertEquals(someClusterName, result.getCluster());\n    assertEquals(someAppOwnNamespaceName, result.getNamespaceName());\n    assertEquals(\"foo\", result.getConfigurations().get(\"apollo.bar\"));\n  }\n","date":"2016-05-27 11:40:43","endLine":211,"groupId":"990","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testQueryConfigWithAppOwnNamespace","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-apollo-10-0.7/blobInfo/CC_OUT/blobs/28/1b3032ada92bf2d0c34171d721ce62d57bb187.src","preCode":"  public void testQueryConfigWithAppOwnNamespace() throws Exception {\n    String someClientSideReleaseKey = \"1\";\n    String someServerSideReleaseKey = \"2\";\n    String someAppOwnNamespaceName = \"someAppOwn\";\n    HttpServletResponse someResponse = mock(HttpServletResponse.class);\n    AppNamespace someAppOwnNamespace =\n        assmbleAppNamespace(someAppId, someAppOwnNamespaceName);\n\n    when(configService.findRelease(someAppId, someClusterName, someAppOwnNamespaceName))\n        .thenReturn(someRelease);\n    when(appNamespaceService.findByNamespaceName(someAppOwnNamespaceName))\n        .thenReturn(someAppOwnNamespace);\n    when(someRelease.getReleaseKey()).thenReturn(someServerSideReleaseKey);\n\n    ApolloConfig result =\n        configController\n            .queryConfig(someAppId, someClusterName, someAppOwnNamespaceName, someDataCenter,\n                someClientSideReleaseKey, someResponse);\n\n    assertEquals(someServerSideReleaseKey, result.getReleaseKey());\n    assertEquals(someAppId, result.getAppId());\n    assertEquals(someClusterName, result.getCluster());\n    assertEquals(someAppOwnNamespaceName, result.getNamespaceName());\n    assertEquals(\"foo\", result.getConfigurations().get(\"apollo.bar\"));\n  }\n","realPath":"apollo-configservice/src/test/java/com/ctrip/framework/apollo/configservice/controller/ConfigControllerTest.java","repoName":"apollo","snippetEndLine":0,"snippetStartLine":0,"startLine":187,"status":"M"},{"authorDate":"2016-05-27 11:40:43","commitOrder":2,"curCode":"  public void testQueryConfigWithPubicNamespaceAndNoAppOverride() throws Exception {\n    String someClientSideReleaseKey = \"1\";\n    String someServerSideReleaseKey = \"2\";\n    HttpServletResponse someResponse = mock(HttpServletResponse.class);\n    String somePublicAppId = \"somePublicAppId\";\n    AppNamespace somePublicAppNamespace =\n        assmbleAppNamespace(somePublicAppId, somePublicNamespaceName);\n\n    when(configService.findRelease(someAppId, someClusterName, somePublicNamespaceName))\n        .thenReturn(null);\n    when(appNamespaceService.findByNamespaceName(somePublicNamespaceName))\n        .thenReturn(somePublicAppNamespace);\n    when(configService.findRelease(somePublicAppId, someDataCenter, somePublicNamespaceName))\n        .thenReturn(somePublicRelease);\n    when(somePublicRelease.getReleaseKey()).thenReturn(someServerSideReleaseKey);\n\n    ApolloConfig result =\n        configController\n            .queryConfig(someAppId, someClusterName, somePublicNamespaceName, someDataCenter,\n                someClientSideReleaseKey, someClientIp, someResponse);\n\n    assertEquals(someServerSideReleaseKey, result.getReleaseKey());\n    assertEquals(someAppId, result.getAppId());\n    assertEquals(someClusterName, result.getCluster());\n    assertEquals(somePublicNamespaceName, result.getNamespaceName());\n    assertEquals(\"foo\", result.getConfigurations().get(\"apollo.public.bar\"));\n  }\n","date":"2016-05-27 11:40:43","endLine":240,"groupId":"991","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testQueryConfigWithPubicNamespaceAndNoAppOverride","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-apollo-10-0.7/blobInfo/CC_OUT/blobs/28/1b3032ada92bf2d0c34171d721ce62d57bb187.src","preCode":"  public void testQueryConfigWithPubicNamespaceAndNoAppOverride() throws Exception {\n    String someClientSideReleaseKey = \"1\";\n    String someServerSideReleaseKey = \"2\";\n    HttpServletResponse someResponse = mock(HttpServletResponse.class);\n    String somePublicAppId = \"somePublicAppId\";\n    AppNamespace somePublicAppNamespace =\n        assmbleAppNamespace(somePublicAppId, somePublicNamespaceName);\n\n    when(configService.findRelease(someAppId, someClusterName, somePublicNamespaceName))\n        .thenReturn(null);\n    when(appNamespaceService.findByNamespaceName(somePublicNamespaceName))\n        .thenReturn(somePublicAppNamespace);\n    when(configService.findRelease(somePublicAppId, someDataCenter, somePublicNamespaceName))\n        .thenReturn(somePublicRelease);\n    when(somePublicRelease.getReleaseKey()).thenReturn(someServerSideReleaseKey);\n\n    ApolloConfig result =\n        configController\n            .queryConfig(someAppId, someClusterName, somePublicNamespaceName, someDataCenter,\n                someClientSideReleaseKey, someResponse);\n\n    assertEquals(someServerSideReleaseKey, result.getReleaseKey());\n    assertEquals(someAppId, result.getAppId());\n    assertEquals(someClusterName, result.getCluster());\n    assertEquals(somePublicNamespaceName, result.getNamespaceName());\n    assertEquals(\"foo\", result.getConfigurations().get(\"apollo.public.bar\"));\n  }\n","realPath":"apollo-configservice/src/test/java/com/ctrip/framework/apollo/configservice/controller/ConfigControllerTest.java","repoName":"apollo","snippetEndLine":0,"snippetStartLine":0,"startLine":214,"status":"M"}],"commitId":"ea3563c58968aa0425d86f79bfd2346669d3ec77","commitMessage":"@@@Merge pull request #229 from nobodyiam/log-client-ip\n\nadd ip for client-server interactions so that we could have more info?","date":"2016-05-27 11:40:43","modifiedFileCount":"9","status":"M","submitter":"lepdou"},{"authorTime":"2016-07-07 18:11:03","codes":[{"authorDate":"2016-07-07 18:11:03","commitOrder":3,"curCode":"  public void testQueryConfigWithAppOwnNamespace() throws Exception {\n    String someClientSideReleaseKey = \"1\";\n    String someServerSideReleaseKey = \"2\";\n    String someAppOwnNamespaceName = \"someAppOwn\";\n    HttpServletResponse someResponse = mock(HttpServletResponse.class);\n    AppNamespace someAppOwnNamespace =\n        assemblePublicAppNamespace(someAppId, someAppOwnNamespaceName);\n\n    when(configService.findRelease(someAppId, someClusterName, someAppOwnNamespaceName))\n        .thenReturn(someRelease);\n    when(appNamespaceService.findPublicNamespaceByName(someAppOwnNamespaceName))\n        .thenReturn(someAppOwnNamespace);\n    when(someRelease.getReleaseKey()).thenReturn(someServerSideReleaseKey);\n    when(namespaceUtil.filterNamespaceName(someAppOwnNamespaceName))\n        .thenReturn(someAppOwnNamespaceName);\n\n    ApolloConfig result =\n        configController\n            .queryConfig(someAppId, someClusterName, someAppOwnNamespaceName, someDataCenter,\n                someClientSideReleaseKey, someClientIp, someResponse);\n\n    assertEquals(someServerSideReleaseKey, result.getReleaseKey());\n    assertEquals(someAppId, result.getAppId());\n    assertEquals(someClusterName, result.getCluster());\n    assertEquals(someAppOwnNamespaceName, result.getNamespaceName());\n    assertEquals(\"foo\", result.getConfigurations().get(\"apollo.bar\"));\n  }\n","date":"2016-07-07 18:11:03","endLine":266,"groupId":"1449","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testQueryConfigWithAppOwnNamespace","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-apollo-10-0.7/blobInfo/CC_OUT/blobs/ee/3f4ecdec8420a52ada465339b02e0404e29272.src","preCode":"  public void testQueryConfigWithAppOwnNamespace() throws Exception {\n    String someClientSideReleaseKey = \"1\";\n    String someServerSideReleaseKey = \"2\";\n    String someAppOwnNamespaceName = \"someAppOwn\";\n    HttpServletResponse someResponse = mock(HttpServletResponse.class);\n    AppNamespace someAppOwnNamespace =\n        assmbleAppNamespace(someAppId, someAppOwnNamespaceName);\n\n    when(configService.findRelease(someAppId, someClusterName, someAppOwnNamespaceName))\n        .thenReturn(someRelease);\n    when(appNamespaceService.findByNamespaceName(someAppOwnNamespaceName))\n        .thenReturn(someAppOwnNamespace);\n    when(someRelease.getReleaseKey()).thenReturn(someServerSideReleaseKey);\n\n    ApolloConfig result =\n        configController\n            .queryConfig(someAppId, someClusterName, someAppOwnNamespaceName, someDataCenter,\n                someClientSideReleaseKey, someClientIp, someResponse);\n\n    assertEquals(someServerSideReleaseKey, result.getReleaseKey());\n    assertEquals(someAppId, result.getAppId());\n    assertEquals(someClusterName, result.getCluster());\n    assertEquals(someAppOwnNamespaceName, result.getNamespaceName());\n    assertEquals(\"foo\", result.getConfigurations().get(\"apollo.bar\"));\n  }\n","realPath":"apollo-configservice/src/test/java/com/ctrip/framework/apollo/configservice/controller/ConfigControllerTest.java","repoName":"apollo","snippetEndLine":0,"snippetStartLine":0,"startLine":240,"status":"M"},{"authorDate":"2016-07-07 18:11:03","commitOrder":3,"curCode":"  public void testQueryConfigWithPubicNamespaceAndNoAppOverride() throws Exception {\n    String someClientSideReleaseKey = \"1\";\n    String someServerSideReleaseKey = \"2\";\n    HttpServletResponse someResponse = mock(HttpServletResponse.class);\n    String somePublicAppId = \"somePublicAppId\";\n    AppNamespace somePublicAppNamespace =\n        assemblePublicAppNamespace(somePublicAppId, somePublicNamespaceName);\n\n    when(configService.findRelease(someAppId, someClusterName, somePublicNamespaceName))\n        .thenReturn(null);\n    when(appNamespaceService.findPublicNamespaceByName(somePublicNamespaceName))\n        .thenReturn(somePublicAppNamespace);\n    when(configService.findRelease(somePublicAppId, someDataCenter, somePublicNamespaceName))\n        .thenReturn(somePublicRelease);\n    when(somePublicRelease.getReleaseKey()).thenReturn(someServerSideReleaseKey);\n\n    ApolloConfig result = configController\n            .queryConfig(someAppId, someClusterName, somePublicNamespaceName, someDataCenter,\n                someClientSideReleaseKey, someClientIp, someResponse);\n\n    assertEquals(someServerSideReleaseKey, result.getReleaseKey());\n    assertEquals(someAppId, result.getAppId());\n    assertEquals(someClusterName, result.getCluster());\n    assertEquals(somePublicNamespaceName, result.getNamespaceName());\n    assertEquals(\"foo\", result.getConfigurations().get(\"apollo.public.bar\"));\n  }\n","date":"2016-07-07 18:11:03","endLine":294,"groupId":"991","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testQueryConfigWithPubicNamespaceAndNoAppOverride","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-apollo-10-0.7/blobInfo/CC_OUT/blobs/ee/3f4ecdec8420a52ada465339b02e0404e29272.src","preCode":"  public void testQueryConfigWithPubicNamespaceAndNoAppOverride() throws Exception {\n    String someClientSideReleaseKey = \"1\";\n    String someServerSideReleaseKey = \"2\";\n    HttpServletResponse someResponse = mock(HttpServletResponse.class);\n    String somePublicAppId = \"somePublicAppId\";\n    AppNamespace somePublicAppNamespace =\n        assmbleAppNamespace(somePublicAppId, somePublicNamespaceName);\n\n    when(configService.findRelease(someAppId, someClusterName, somePublicNamespaceName))\n        .thenReturn(null);\n    when(appNamespaceService.findByNamespaceName(somePublicNamespaceName))\n        .thenReturn(somePublicAppNamespace);\n    when(configService.findRelease(somePublicAppId, someDataCenter, somePublicNamespaceName))\n        .thenReturn(somePublicRelease);\n    when(somePublicRelease.getReleaseKey()).thenReturn(someServerSideReleaseKey);\n\n    ApolloConfig result =\n        configController\n            .queryConfig(someAppId, someClusterName, somePublicNamespaceName, someDataCenter,\n                someClientSideReleaseKey, someClientIp, someResponse);\n\n    assertEquals(someServerSideReleaseKey, result.getReleaseKey());\n    assertEquals(someAppId, result.getAppId());\n    assertEquals(someClusterName, result.getCluster());\n    assertEquals(somePublicNamespaceName, result.getNamespaceName());\n    assertEquals(\"foo\", result.getConfigurations().get(\"apollo.public.bar\"));\n  }\n","realPath":"apollo-configservice/src/test/java/com/ctrip/framework/apollo/configservice/controller/ConfigControllerTest.java","repoName":"apollo","snippetEndLine":0,"snippetStartLine":0,"startLine":269,"status":"M"}],"commitId":"5f13408211cf91a8cca334a98e4b7151622bc5c1","commitMessage":"@@@Merge pull request #310 from lepdou/namespace-as-file-format-2\n\nnamespace as file","date":"2016-07-07 18:11:03","modifiedFileCount":"65","status":"M","submitter":"Jason Song"},{"authorTime":"2016-07-26 17:11:01","codes":[{"authorDate":"2016-07-26 17:11:01","commitOrder":4,"curCode":"  public void testQueryConfigWithAppOwnNamespace() throws Exception {\n    String someClientSideReleaseKey = \"1\";\n    String someServerSideReleaseKey = \"2\";\n    String someAppOwnNamespaceName = \"someAppOwn\";\n    HttpServletResponse someResponse = mock(HttpServletResponse.class);\n    AppNamespace someAppOwnNamespace =\n        assemblePublicAppNamespace(someAppId, someAppOwnNamespaceName);\n\n    when(releaseService.findLatestActiveRelease(someAppId, someClusterName, someAppOwnNamespaceName))\n        .thenReturn(someRelease);\n    when(appNamespaceService.findPublicNamespaceByName(someAppOwnNamespaceName))\n        .thenReturn(someAppOwnNamespace);\n    when(someRelease.getReleaseKey()).thenReturn(someServerSideReleaseKey);\n    when(namespaceUtil.filterNamespaceName(someAppOwnNamespaceName))\n        .thenReturn(someAppOwnNamespaceName);\n\n    ApolloConfig result =\n        configController\n            .queryConfig(someAppId, someClusterName, someAppOwnNamespaceName, someDataCenter,\n                someClientSideReleaseKey, someClientIp, someResponse);\n\n    assertEquals(someServerSideReleaseKey, result.getReleaseKey());\n    assertEquals(someAppId, result.getAppId());\n    assertEquals(someClusterName, result.getCluster());\n    assertEquals(someAppOwnNamespaceName, result.getNamespaceName());\n    assertEquals(\"foo\", result.getConfigurations().get(\"apollo.bar\"));\n  }\n","date":"2016-07-26 17:11:01","endLine":266,"groupId":"1449","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"testQueryConfigWithAppOwnNamespace","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-apollo-10-0.7/blobInfo/CC_OUT/blobs/f2/025e55d9cbf7d39065343ade152011ea79713a.src","preCode":"  public void testQueryConfigWithAppOwnNamespace() throws Exception {\n    String someClientSideReleaseKey = \"1\";\n    String someServerSideReleaseKey = \"2\";\n    String someAppOwnNamespaceName = \"someAppOwn\";\n    HttpServletResponse someResponse = mock(HttpServletResponse.class);\n    AppNamespace someAppOwnNamespace =\n        assemblePublicAppNamespace(someAppId, someAppOwnNamespaceName);\n\n    when(configService.findRelease(someAppId, someClusterName, someAppOwnNamespaceName))\n        .thenReturn(someRelease);\n    when(appNamespaceService.findPublicNamespaceByName(someAppOwnNamespaceName))\n        .thenReturn(someAppOwnNamespace);\n    when(someRelease.getReleaseKey()).thenReturn(someServerSideReleaseKey);\n    when(namespaceUtil.filterNamespaceName(someAppOwnNamespaceName))\n        .thenReturn(someAppOwnNamespaceName);\n\n    ApolloConfig result =\n        configController\n            .queryConfig(someAppId, someClusterName, someAppOwnNamespaceName, someDataCenter,\n                someClientSideReleaseKey, someClientIp, someResponse);\n\n    assertEquals(someServerSideReleaseKey, result.getReleaseKey());\n    assertEquals(someAppId, result.getAppId());\n    assertEquals(someClusterName, result.getCluster());\n    assertEquals(someAppOwnNamespaceName, result.getNamespaceName());\n    assertEquals(\"foo\", result.getConfigurations().get(\"apollo.bar\"));\n  }\n","realPath":"apollo-configservice/src/test/java/com/ctrip/framework/apollo/configservice/controller/ConfigControllerTest.java","repoName":"apollo","snippetEndLine":0,"snippetStartLine":0,"startLine":240,"status":"M"},{"authorDate":"2016-07-26 17:11:01","commitOrder":4,"curCode":"  public void testQueryConfigWithPubicNamespaceAndNoAppOverride() throws Exception {\n    String someClientSideReleaseKey = \"1\";\n    String someServerSideReleaseKey = \"2\";\n    HttpServletResponse someResponse = mock(HttpServletResponse.class);\n    String somePublicAppId = \"somePublicAppId\";\n    AppNamespace somePublicAppNamespace =\n        assemblePublicAppNamespace(somePublicAppId, somePublicNamespaceName);\n\n    when(releaseService.findLatestActiveRelease(someAppId, someClusterName, somePublicNamespaceName))\n        .thenReturn(null);\n    when(appNamespaceService.findPublicNamespaceByName(somePublicNamespaceName))\n        .thenReturn(somePublicAppNamespace);\n    when(releaseService.findLatestActiveRelease(somePublicAppId, someDataCenter, somePublicNamespaceName))\n        .thenReturn(somePublicRelease);\n    when(somePublicRelease.getReleaseKey()).thenReturn(someServerSideReleaseKey);\n\n    ApolloConfig result = configController\n            .queryConfig(someAppId, someClusterName, somePublicNamespaceName, someDataCenter,\n                someClientSideReleaseKey, someClientIp, someResponse);\n\n    assertEquals(someServerSideReleaseKey, result.getReleaseKey());\n    assertEquals(someAppId, result.getAppId());\n    assertEquals(someClusterName, result.getCluster());\n    assertEquals(somePublicNamespaceName, result.getNamespaceName());\n    assertEquals(\"foo\", result.getConfigurations().get(\"apollo.public.bar\"));\n  }\n","date":"2016-07-26 17:11:01","endLine":294,"groupId":"991","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"testQueryConfigWithPubicNamespaceAndNoAppOverride","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-apollo-10-0.7/blobInfo/CC_OUT/blobs/f2/025e55d9cbf7d39065343ade152011ea79713a.src","preCode":"  public void testQueryConfigWithPubicNamespaceAndNoAppOverride() throws Exception {\n    String someClientSideReleaseKey = \"1\";\n    String someServerSideReleaseKey = \"2\";\n    HttpServletResponse someResponse = mock(HttpServletResponse.class);\n    String somePublicAppId = \"somePublicAppId\";\n    AppNamespace somePublicAppNamespace =\n        assemblePublicAppNamespace(somePublicAppId, somePublicNamespaceName);\n\n    when(configService.findRelease(someAppId, someClusterName, somePublicNamespaceName))\n        .thenReturn(null);\n    when(appNamespaceService.findPublicNamespaceByName(somePublicNamespaceName))\n        .thenReturn(somePublicAppNamespace);\n    when(configService.findRelease(somePublicAppId, someDataCenter, somePublicNamespaceName))\n        .thenReturn(somePublicRelease);\n    when(somePublicRelease.getReleaseKey()).thenReturn(someServerSideReleaseKey);\n\n    ApolloConfig result = configController\n            .queryConfig(someAppId, someClusterName, somePublicNamespaceName, someDataCenter,\n                someClientSideReleaseKey, someClientIp, someResponse);\n\n    assertEquals(someServerSideReleaseKey, result.getReleaseKey());\n    assertEquals(someAppId, result.getAppId());\n    assertEquals(someClusterName, result.getCluster());\n    assertEquals(somePublicNamespaceName, result.getNamespaceName());\n    assertEquals(\"foo\", result.getConfigurations().get(\"apollo.public.bar\"));\n  }\n","realPath":"apollo-configservice/src/test/java/com/ctrip/framework/apollo/configservice/controller/ConfigControllerTest.java","repoName":"apollo","snippetEndLine":0,"snippetStartLine":0,"startLine":269,"status":"M"}],"commitId":"77c489d9f98813806be31d127f9148d517854e1e","commitMessage":"@@@Merge pull request #347 from lepdou/rollback\n\nrollback","date":"2016-07-26 17:11:01","modifiedFileCount":"28","status":"M","submitter":"Jason Song"},{"authorTime":"2016-08-23 10:27:07","codes":[{"authorDate":"2016-08-23 10:27:07","commitOrder":5,"curCode":"  public void testQueryConfigWithAppOwnNamespace() throws Exception {\n    String someClientSideReleaseKey = \"1\";\n    String someServerSideReleaseKey = \"2\";\n    String someAppOwnNamespaceName = \"someAppOwn\";\n    HttpServletResponse someResponse = mock(HttpServletResponse.class);\n    AppNamespace someAppOwnNamespace =\n        assemblePublicAppNamespace(someAppId, someAppOwnNamespaceName);\n\n    when(releaseService.findLatestActiveRelease(someAppId, someClusterName, someAppOwnNamespaceName))\n        .thenReturn(someRelease);\n    when(appNamespaceService.findPublicNamespaceByName(someAppOwnNamespaceName))\n        .thenReturn(someAppOwnNamespace);\n    when(someRelease.getReleaseKey()).thenReturn(someServerSideReleaseKey);\n    when(namespaceUtil.filterNamespaceName(someAppOwnNamespaceName))\n        .thenReturn(someAppOwnNamespaceName);\n\n    ApolloConfig result =\n        configController\n            .queryConfig(someAppId, someClusterName, someAppOwnNamespaceName, someDataCenter,\n                someClientSideReleaseKey, someClientIp, someRequest, someResponse);\n\n    assertEquals(someServerSideReleaseKey, result.getReleaseKey());\n    assertEquals(someAppId, result.getAppId());\n    assertEquals(someClusterName, result.getCluster());\n    assertEquals(someAppOwnNamespaceName, result.getNamespaceName());\n    assertEquals(\"foo\", result.getConfigurations().get(\"apollo.bar\"));\n  }\n","date":"2016-08-23 10:27:07","endLine":278,"groupId":"1429","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"testQueryConfigWithAppOwnNamespace","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-apollo-10-0.7/blobInfo/CC_OUT/blobs/35/0bac0f7a4343a95c42e75de9df709a03ee4603.src","preCode":"  public void testQueryConfigWithAppOwnNamespace() throws Exception {\n    String someClientSideReleaseKey = \"1\";\n    String someServerSideReleaseKey = \"2\";\n    String someAppOwnNamespaceName = \"someAppOwn\";\n    HttpServletResponse someResponse = mock(HttpServletResponse.class);\n    AppNamespace someAppOwnNamespace =\n        assemblePublicAppNamespace(someAppId, someAppOwnNamespaceName);\n\n    when(releaseService.findLatestActiveRelease(someAppId, someClusterName, someAppOwnNamespaceName))\n        .thenReturn(someRelease);\n    when(appNamespaceService.findPublicNamespaceByName(someAppOwnNamespaceName))\n        .thenReturn(someAppOwnNamespace);\n    when(someRelease.getReleaseKey()).thenReturn(someServerSideReleaseKey);\n    when(namespaceUtil.filterNamespaceName(someAppOwnNamespaceName))\n        .thenReturn(someAppOwnNamespaceName);\n\n    ApolloConfig result =\n        configController\n            .queryConfig(someAppId, someClusterName, someAppOwnNamespaceName, someDataCenter,\n                someClientSideReleaseKey, someClientIp, someResponse);\n\n    assertEquals(someServerSideReleaseKey, result.getReleaseKey());\n    assertEquals(someAppId, result.getAppId());\n    assertEquals(someClusterName, result.getCluster());\n    assertEquals(someAppOwnNamespaceName, result.getNamespaceName());\n    assertEquals(\"foo\", result.getConfigurations().get(\"apollo.bar\"));\n  }\n","realPath":"apollo-configservice/src/test/java/com/ctrip/framework/apollo/configservice/controller/ConfigControllerTest.java","repoName":"apollo","snippetEndLine":0,"snippetStartLine":0,"startLine":252,"status":"M"},{"authorDate":"2016-08-23 10:27:07","commitOrder":5,"curCode":"  public void testQueryConfigWithPubicNamespaceAndNoAppOverride() throws Exception {\n    String someClientSideReleaseKey = \"1\";\n    String someServerSideReleaseKey = \"2\";\n    HttpServletResponse someResponse = mock(HttpServletResponse.class);\n    String somePublicAppId = \"somePublicAppId\";\n    AppNamespace somePublicAppNamespace =\n        assemblePublicAppNamespace(somePublicAppId, somePublicNamespaceName);\n\n    when(releaseService.findLatestActiveRelease(someAppId, someClusterName, somePublicNamespaceName))\n        .thenReturn(null);\n    when(appNamespaceService.findPublicNamespaceByName(somePublicNamespaceName))\n        .thenReturn(somePublicAppNamespace);\n    when(releaseService.findLatestActiveRelease(somePublicAppId, someDataCenter, somePublicNamespaceName))\n        .thenReturn(somePublicRelease);\n    when(somePublicRelease.getReleaseKey()).thenReturn(someServerSideReleaseKey);\n    when(somePublicRelease.getAppId()).thenReturn(somePublicAppId);\n    when(somePublicRelease.getNamespaceName()).thenReturn(somePublicNamespaceName);\n\n    ApolloConfig result = configController\n        .queryConfig(someAppId, someClusterName, somePublicNamespaceName, someDataCenter,\n            someClientSideReleaseKey, someClientIp, someRequest, someResponse);\n\n    assertEquals(someServerSideReleaseKey, result.getReleaseKey());\n    assertEquals(someAppId, result.getAppId());\n    assertEquals(someClusterName, result.getCluster());\n    assertEquals(somePublicNamespaceName, result.getNamespaceName());\n    assertEquals(\"foo\", result.getConfigurations().get(\"apollo.public.bar\"));\n    verify(instanceConfigAuditUtil, times(1)).audit(someAppId, someClusterName, someDataCenter,\n        someClientIp, somePublicAppId, somePublicNamespaceName, someServerSideReleaseKey);\n  }\n","date":"2016-08-23 10:27:07","endLine":310,"groupId":"1431","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"testQueryConfigWithPubicNamespaceAndNoAppOverride","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-apollo-10-0.7/blobInfo/CC_OUT/blobs/35/0bac0f7a4343a95c42e75de9df709a03ee4603.src","preCode":"  public void testQueryConfigWithPubicNamespaceAndNoAppOverride() throws Exception {\n    String someClientSideReleaseKey = \"1\";\n    String someServerSideReleaseKey = \"2\";\n    HttpServletResponse someResponse = mock(HttpServletResponse.class);\n    String somePublicAppId = \"somePublicAppId\";\n    AppNamespace somePublicAppNamespace =\n        assemblePublicAppNamespace(somePublicAppId, somePublicNamespaceName);\n\n    when(releaseService.findLatestActiveRelease(someAppId, someClusterName, somePublicNamespaceName))\n        .thenReturn(null);\n    when(appNamespaceService.findPublicNamespaceByName(somePublicNamespaceName))\n        .thenReturn(somePublicAppNamespace);\n    when(releaseService.findLatestActiveRelease(somePublicAppId, someDataCenter, somePublicNamespaceName))\n        .thenReturn(somePublicRelease);\n    when(somePublicRelease.getReleaseKey()).thenReturn(someServerSideReleaseKey);\n\n    ApolloConfig result = configController\n        .queryConfig(someAppId, someClusterName, somePublicNamespaceName, someDataCenter,\n            someClientSideReleaseKey, someClientIp, someResponse);\n\n    assertEquals(someServerSideReleaseKey, result.getReleaseKey());\n    assertEquals(someAppId, result.getAppId());\n    assertEquals(someClusterName, result.getCluster());\n    assertEquals(somePublicNamespaceName, result.getNamespaceName());\n    assertEquals(\"foo\", result.getConfigurations().get(\"apollo.public.bar\"));\n  }\n","realPath":"apollo-configservice/src/test/java/com/ctrip/framework/apollo/configservice/controller/ConfigControllerTest.java","repoName":"apollo","snippetEndLine":0,"snippetStartLine":0,"startLine":281,"status":"M"}],"commitId":"707ccf02021ee0c738a0c936db1bdabc615c2919","commitMessage":"@@@Merge branch 'master' into 'release'\n\nMaster2Release\n\n\n\nSee merge request !17","date":"2016-08-23 10:27:07","modifiedFileCount":"6","status":"M","submitter":"zl??(IT)"},{"authorTime":"2016-08-31 16:54:07","codes":[{"authorDate":"2016-08-23 10:27:07","commitOrder":6,"curCode":"  public void testQueryConfigWithAppOwnNamespace() throws Exception {\n    String someClientSideReleaseKey = \"1\";\n    String someServerSideReleaseKey = \"2\";\n    String someAppOwnNamespaceName = \"someAppOwn\";\n    HttpServletResponse someResponse = mock(HttpServletResponse.class);\n    AppNamespace someAppOwnNamespace =\n        assemblePublicAppNamespace(someAppId, someAppOwnNamespaceName);\n\n    when(releaseService.findLatestActiveRelease(someAppId, someClusterName, someAppOwnNamespaceName))\n        .thenReturn(someRelease);\n    when(appNamespaceService.findPublicNamespaceByName(someAppOwnNamespaceName))\n        .thenReturn(someAppOwnNamespace);\n    when(someRelease.getReleaseKey()).thenReturn(someServerSideReleaseKey);\n    when(namespaceUtil.filterNamespaceName(someAppOwnNamespaceName))\n        .thenReturn(someAppOwnNamespaceName);\n\n    ApolloConfig result =\n        configController\n            .queryConfig(someAppId, someClusterName, someAppOwnNamespaceName, someDataCenter,\n                someClientSideReleaseKey, someClientIp, someRequest, someResponse);\n\n    assertEquals(someServerSideReleaseKey, result.getReleaseKey());\n    assertEquals(someAppId, result.getAppId());\n    assertEquals(someClusterName, result.getCluster());\n    assertEquals(someAppOwnNamespaceName, result.getNamespaceName());\n    assertEquals(\"foo\", result.getConfigurations().get(\"apollo.bar\"));\n  }\n","date":"2016-08-23 10:27:07","endLine":278,"groupId":"1429","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"testQueryConfigWithAppOwnNamespace","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-apollo-10-0.7/blobInfo/CC_OUT/blobs/35/0bac0f7a4343a95c42e75de9df709a03ee4603.src","preCode":"  public void testQueryConfigWithAppOwnNamespace() throws Exception {\n    String someClientSideReleaseKey = \"1\";\n    String someServerSideReleaseKey = \"2\";\n    String someAppOwnNamespaceName = \"someAppOwn\";\n    HttpServletResponse someResponse = mock(HttpServletResponse.class);\n    AppNamespace someAppOwnNamespace =\n        assemblePublicAppNamespace(someAppId, someAppOwnNamespaceName);\n\n    when(releaseService.findLatestActiveRelease(someAppId, someClusterName, someAppOwnNamespaceName))\n        .thenReturn(someRelease);\n    when(appNamespaceService.findPublicNamespaceByName(someAppOwnNamespaceName))\n        .thenReturn(someAppOwnNamespace);\n    when(someRelease.getReleaseKey()).thenReturn(someServerSideReleaseKey);\n    when(namespaceUtil.filterNamespaceName(someAppOwnNamespaceName))\n        .thenReturn(someAppOwnNamespaceName);\n\n    ApolloConfig result =\n        configController\n            .queryConfig(someAppId, someClusterName, someAppOwnNamespaceName, someDataCenter,\n                someClientSideReleaseKey, someClientIp, someRequest, someResponse);\n\n    assertEquals(someServerSideReleaseKey, result.getReleaseKey());\n    assertEquals(someAppId, result.getAppId());\n    assertEquals(someClusterName, result.getCluster());\n    assertEquals(someAppOwnNamespaceName, result.getNamespaceName());\n    assertEquals(\"foo\", result.getConfigurations().get(\"apollo.bar\"));\n  }\n","realPath":"apollo-configservice/src/test/java/com/ctrip/framework/apollo/configservice/controller/ConfigControllerTest.java","repoName":"apollo","snippetEndLine":0,"snippetStartLine":0,"startLine":252,"status":"N"},{"authorDate":"2016-08-31 16:54:07","commitOrder":6,"curCode":"  public void testQueryConfigWithPubicNamespaceAndNoAppOverride() throws Exception {\n    String someClientSideReleaseKey = \"1\";\n    String someServerSideReleaseKey = \"2\";\n    HttpServletResponse someResponse = mock(HttpServletResponse.class);\n    String somePublicAppId = \"somePublicAppId\";\n    String somePublicClusterName = \"somePublicClusterName\";\n    AppNamespace somePublicAppNamespace =\n        assemblePublicAppNamespace(somePublicAppId, somePublicNamespaceName);\n\n    when(releaseService.findLatestActiveRelease(someAppId, someClusterName, somePublicNamespaceName))\n        .thenReturn(null);\n    when(appNamespaceService.findPublicNamespaceByName(somePublicNamespaceName))\n        .thenReturn(somePublicAppNamespace);\n    when(releaseService.findLatestActiveRelease(somePublicAppId, someDataCenter, somePublicNamespaceName))\n        .thenReturn(somePublicRelease);\n    when(somePublicRelease.getReleaseKey()).thenReturn(someServerSideReleaseKey);\n    when(somePublicRelease.getAppId()).thenReturn(somePublicAppId);\n    when(somePublicRelease.getClusterName()).thenReturn(somePublicClusterName);\n    when(somePublicRelease.getNamespaceName()).thenReturn(somePublicNamespaceName);\n\n    ApolloConfig result = configController\n        .queryConfig(someAppId, someClusterName, somePublicNamespaceName, someDataCenter,\n            someClientSideReleaseKey, someClientIp, someRequest, someResponse);\n\n    assertEquals(someServerSideReleaseKey, result.getReleaseKey());\n    assertEquals(someAppId, result.getAppId());\n    assertEquals(someClusterName, result.getCluster());\n    assertEquals(somePublicNamespaceName, result.getNamespaceName());\n    assertEquals(\"foo\", result.getConfigurations().get(\"apollo.public.bar\"));\n    verify(instanceConfigAuditUtil, times(1)).audit(someAppId, someClusterName, someDataCenter,\n        someClientIp, somePublicAppId, somePublicClusterName, somePublicNamespaceName, someServerSideReleaseKey);\n  }\n","date":"2016-08-31 16:54:07","endLine":312,"groupId":"1431","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"testQueryConfigWithPubicNamespaceAndNoAppOverride","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-apollo-10-0.7/blobInfo/CC_OUT/blobs/07/79196e4582a32e2286e43494644fa01ec188b1.src","preCode":"  public void testQueryConfigWithPubicNamespaceAndNoAppOverride() throws Exception {\n    String someClientSideReleaseKey = \"1\";\n    String someServerSideReleaseKey = \"2\";\n    HttpServletResponse someResponse = mock(HttpServletResponse.class);\n    String somePublicAppId = \"somePublicAppId\";\n    AppNamespace somePublicAppNamespace =\n        assemblePublicAppNamespace(somePublicAppId, somePublicNamespaceName);\n\n    when(releaseService.findLatestActiveRelease(someAppId, someClusterName, somePublicNamespaceName))\n        .thenReturn(null);\n    when(appNamespaceService.findPublicNamespaceByName(somePublicNamespaceName))\n        .thenReturn(somePublicAppNamespace);\n    when(releaseService.findLatestActiveRelease(somePublicAppId, someDataCenter, somePublicNamespaceName))\n        .thenReturn(somePublicRelease);\n    when(somePublicRelease.getReleaseKey()).thenReturn(someServerSideReleaseKey);\n    when(somePublicRelease.getAppId()).thenReturn(somePublicAppId);\n    when(somePublicRelease.getNamespaceName()).thenReturn(somePublicNamespaceName);\n\n    ApolloConfig result = configController\n        .queryConfig(someAppId, someClusterName, somePublicNamespaceName, someDataCenter,\n            someClientSideReleaseKey, someClientIp, someRequest, someResponse);\n\n    assertEquals(someServerSideReleaseKey, result.getReleaseKey());\n    assertEquals(someAppId, result.getAppId());\n    assertEquals(someClusterName, result.getCluster());\n    assertEquals(somePublicNamespaceName, result.getNamespaceName());\n    assertEquals(\"foo\", result.getConfigurations().get(\"apollo.public.bar\"));\n    verify(instanceConfigAuditUtil, times(1)).audit(someAppId, someClusterName, someDataCenter,\n        someClientIp, somePublicAppId, somePublicNamespaceName, someServerSideReleaseKey);\n  }\n","realPath":"apollo-configservice/src/test/java/com/ctrip/framework/apollo/configservice/controller/ConfigControllerTest.java","repoName":"apollo","snippetEndLine":0,"snippetStartLine":0,"startLine":281,"status":"M"}],"commitId":"01e7e6cdaf7f1a1a44b72912b96ade08b5066b8a","commitMessage":"@@@Merge branch 'master' into 'release'\n\nMaster2Release\n\n\n\nSee merge request !20","date":"2016-08-31 16:54:07","modifiedFileCount":"20","status":"M","submitter":"vss??"},{"authorTime":"2017-08-27 23:57:50","codes":[{"authorDate":"2017-08-27 23:57:50","commitOrder":7,"curCode":"  public void testQueryConfigWithAppOwnNamespace() throws Exception {\n    String someClientSideReleaseKey = \"1\";\n    String someServerSideReleaseKey = \"2\";\n    String someAppOwnNamespaceName = \"someAppOwn\";\n    HttpServletResponse someResponse = mock(HttpServletResponse.class);\n    AppNamespace someAppOwnNamespace =\n        assemblePublicAppNamespace(someAppId, someAppOwnNamespaceName);\n\n    when(configService.loadConfig(someAppId, someClientIp, someAppId, someClusterName, someAppOwnNamespaceName,\n        someDataCenter, someNotificationMessages)).thenReturn(someRelease);\n    when(appNamespaceService.findPublicNamespaceByName(someAppOwnNamespaceName))\n        .thenReturn(someAppOwnNamespace);\n    when(someRelease.getReleaseKey()).thenReturn(someServerSideReleaseKey);\n    when(namespaceUtil.filterNamespaceName(someAppOwnNamespaceName)).thenReturn(someAppOwnNamespaceName);\n    when(namespaceUtil.normalizeNamespace(someAppId, someAppOwnNamespaceName)).thenReturn(someAppOwnNamespaceName);\n\n    ApolloConfig result =\n        configController\n            .queryConfig(someAppId, someClusterName, someAppOwnNamespaceName, someDataCenter,\n                someClientSideReleaseKey, someClientIp, someMessagesAsString, someRequest, someResponse);\n\n    assertEquals(someServerSideReleaseKey, result.getReleaseKey());\n    assertEquals(someAppId, result.getAppId());\n    assertEquals(someClusterName, result.getCluster());\n    assertEquals(someAppOwnNamespaceName, result.getNamespaceName());\n    assertEquals(\"foo\", result.getConfigurations().get(\"apollo.bar\"));\n  }\n","date":"2017-08-27 23:57:50","endLine":244,"groupId":"10502","id":13,"instanceNumber":1,"isCurCommit":0,"methodName":"testQueryConfigWithAppOwnNamespace","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-apollo-10-0.7/blobInfo/CC_OUT/blobs/97/a9b745b6db052aa1044083eb552b930a2d4c2d.src","preCode":"  public void testQueryConfigWithAppOwnNamespace() throws Exception {\n    String someClientSideReleaseKey = \"1\";\n    String someServerSideReleaseKey = \"2\";\n    String someAppOwnNamespaceName = \"someAppOwn\";\n    HttpServletResponse someResponse = mock(HttpServletResponse.class);\n    AppNamespace someAppOwnNamespace =\n        assemblePublicAppNamespace(someAppId, someAppOwnNamespaceName);\n\n    when(releaseService.findLatestActiveRelease(someAppId, someClusterName, someAppOwnNamespaceName))\n        .thenReturn(someRelease);\n    when(appNamespaceService.findPublicNamespaceByName(someAppOwnNamespaceName))\n        .thenReturn(someAppOwnNamespace);\n    when(someRelease.getReleaseKey()).thenReturn(someServerSideReleaseKey);\n    when(namespaceUtil.filterNamespaceName(someAppOwnNamespaceName))\n        .thenReturn(someAppOwnNamespaceName);\n\n    ApolloConfig result =\n        configController\n            .queryConfig(someAppId, someClusterName, someAppOwnNamespaceName, someDataCenter,\n                someClientSideReleaseKey, someClientIp, someRequest, someResponse);\n\n    assertEquals(someServerSideReleaseKey, result.getReleaseKey());\n    assertEquals(someAppId, result.getAppId());\n    assertEquals(someClusterName, result.getCluster());\n    assertEquals(someAppOwnNamespaceName, result.getNamespaceName());\n    assertEquals(\"foo\", result.getConfigurations().get(\"apollo.bar\"));\n  }\n","realPath":"apollo-configservice/src/test/java/com/ctrip/framework/apollo/configservice/controller/ConfigControllerTest.java","repoName":"apollo","snippetEndLine":0,"snippetStartLine":0,"startLine":218,"status":"M"},{"authorDate":"2017-08-27 23:57:50","commitOrder":7,"curCode":"  public void testQueryConfigWithPubicNamespaceAndNoAppOverride() throws Exception {\n    String someClientSideReleaseKey = \"1\";\n    String someServerSideReleaseKey = \"2\";\n    HttpServletResponse someResponse = mock(HttpServletResponse.class);\n    String somePublicAppId = \"somePublicAppId\";\n    String somePublicClusterName = \"somePublicClusterName\";\n    AppNamespace somePublicAppNamespace =\n        assemblePublicAppNamespace(somePublicAppId, somePublicNamespaceName);\n\n    when(configService.loadConfig(someAppId, someClientIp, someAppId, someClusterName, somePublicNamespaceName,\n        someDataCenter, someNotificationMessages)).thenReturn(null);\n    when(appNamespaceService.findPublicNamespaceByName(somePublicNamespaceName))\n        .thenReturn(somePublicAppNamespace);\n    when(configService.loadConfig(someAppId, someClientIp, somePublicAppId, someClusterName, somePublicNamespaceName,\n        someDataCenter, someNotificationMessages)).thenReturn(somePublicRelease);\n    when(somePublicRelease.getReleaseKey()).thenReturn(someServerSideReleaseKey);\n    when(somePublicRelease.getAppId()).thenReturn(somePublicAppId);\n    when(somePublicRelease.getClusterName()).thenReturn(somePublicClusterName);\n    when(somePublicRelease.getNamespaceName()).thenReturn(somePublicNamespaceName);\n\n    ApolloConfig result = configController\n        .queryConfig(someAppId, someClusterName, somePublicNamespaceName, someDataCenter,\n            someClientSideReleaseKey, someClientIp, someMessagesAsString, someRequest, someResponse);\n\n    assertEquals(someServerSideReleaseKey, result.getReleaseKey());\n    assertEquals(someAppId, result.getAppId());\n    assertEquals(someClusterName, result.getCluster());\n    assertEquals(somePublicNamespaceName, result.getNamespaceName());\n    assertEquals(\"foo\", result.getConfigurations().get(\"apollo.public.bar\"));\n    verify(instanceConfigAuditUtil, times(1)).audit(someAppId, someClusterName, someDataCenter,\n        someClientIp, somePublicAppId, somePublicClusterName, somePublicNamespaceName, someServerSideReleaseKey);\n  }\n","date":"2017-08-27 23:57:50","endLine":278,"groupId":"10502","id":14,"instanceNumber":2,"isCurCommit":0,"methodName":"testQueryConfigWithPubicNamespaceAndNoAppOverride","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-apollo-10-0.7/blobInfo/CC_OUT/blobs/97/a9b745b6db052aa1044083eb552b930a2d4c2d.src","preCode":"  public void testQueryConfigWithPubicNamespaceAndNoAppOverride() throws Exception {\n    String someClientSideReleaseKey = \"1\";\n    String someServerSideReleaseKey = \"2\";\n    HttpServletResponse someResponse = mock(HttpServletResponse.class);\n    String somePublicAppId = \"somePublicAppId\";\n    String somePublicClusterName = \"somePublicClusterName\";\n    AppNamespace somePublicAppNamespace =\n        assemblePublicAppNamespace(somePublicAppId, somePublicNamespaceName);\n\n    when(releaseService.findLatestActiveRelease(someAppId, someClusterName, somePublicNamespaceName))\n        .thenReturn(null);\n    when(appNamespaceService.findPublicNamespaceByName(somePublicNamespaceName))\n        .thenReturn(somePublicAppNamespace);\n    when(releaseService.findLatestActiveRelease(somePublicAppId, someDataCenter, somePublicNamespaceName))\n        .thenReturn(somePublicRelease);\n    when(somePublicRelease.getReleaseKey()).thenReturn(someServerSideReleaseKey);\n    when(somePublicRelease.getAppId()).thenReturn(somePublicAppId);\n    when(somePublicRelease.getClusterName()).thenReturn(somePublicClusterName);\n    when(somePublicRelease.getNamespaceName()).thenReturn(somePublicNamespaceName);\n\n    ApolloConfig result = configController\n        .queryConfig(someAppId, someClusterName, somePublicNamespaceName, someDataCenter,\n            someClientSideReleaseKey, someClientIp, someRequest, someResponse);\n\n    assertEquals(someServerSideReleaseKey, result.getReleaseKey());\n    assertEquals(someAppId, result.getAppId());\n    assertEquals(someClusterName, result.getCluster());\n    assertEquals(somePublicNamespaceName, result.getNamespaceName());\n    assertEquals(\"foo\", result.getConfigurations().get(\"apollo.public.bar\"));\n    verify(instanceConfigAuditUtil, times(1)).audit(someAppId, someClusterName, someDataCenter,\n        someClientIp, somePublicAppId, somePublicClusterName, somePublicNamespaceName, someServerSideReleaseKey);\n  }\n","realPath":"apollo-configservice/src/test/java/com/ctrip/framework/apollo/configservice/controller/ConfigControllerTest.java","repoName":"apollo","snippetEndLine":0,"snippetStartLine":0,"startLine":247,"status":"M"}],"commitId":"2a8348286501413e5768f984cbfe45f2b9dbd5f1","commitMessage":"@@@Merge pull request #719 from nobodyiam/configservice-cache-merge\n\nConfig service cache and namespace name normalization","date":"2017-08-27 23:57:50","modifiedFileCount":"32","status":"M","submitter":"??"}]
