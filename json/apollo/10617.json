[{"authorTime":"2016-11-22 15:47:36","codes":[{"authorDate":"2016-11-22 15:47:36","commitOrder":1,"curCode":"  public void testPublishBranchAtFirstTime() {\n    long parentNamespaceId = 107;\n    String parentClusterName = \"default4\";\n    long childNamespaceId = 108;\n    String childClusterName = \"child-cluster4\";\n    \r\n    Namespace childNamespace = instanceNamespace(childNamespaceId, childClusterName);\n    releaseService.publish(childNamespace, \"\", \"\", operator);\n\n    Release latestChildNamespaceRelease = releaseService.findLatestActiveRelease(childNamespace);\n\n    Assert.assertNotNull(latestChildNamespaceRelease);\n\n    Map<String, String> childNamespaceConfiguration = parseConfiguration(latestChildNamespaceRelease.getConfigurations());\n    Assert.assertEquals(4, childNamespaceConfiguration.size());\n    Assert.assertEquals(\"v1-2\", childNamespaceConfiguration.get(\"k1\"));\n    Assert.assertEquals(\"v2\", childNamespaceConfiguration.get(\"k2\"));\n    Assert.assertEquals(\"v3\", childNamespaceConfiguration.get(\"k3\"));\n    Assert.assertEquals(\"v4\", childNamespaceConfiguration.get(\"k4\"));\n\n    Namespace parentNamespace = instanceNamespace(parentNamespaceId, parentClusterName);\n\n    Release latestParentNamespaceRelease = releaseService.findLatestActiveRelease(parentNamespace);\n\n    \r\n    Assert.assertNotNull(latestParentNamespaceRelease);\n\n    Map<String, String> parentNamespaceConfiguration = parseConfiguration(latestParentNamespaceRelease.getConfigurations());\n    Assert.assertEquals(3, parentNamespaceConfiguration.size());\n    Assert.assertEquals(\"v1\", parentNamespaceConfiguration.get(\"k1\"));\n    Assert.assertEquals(\"v2\", parentNamespaceConfiguration.get(\"k2\"));\n    Assert.assertEquals(\"v3\", parentNamespaceConfiguration.get(\"k3\"));\n\n    GrayReleaseRule rule= namespaceBranchService.findBranchGrayRules(testApp, parentClusterName,\n                                                                     testNamespace, childClusterName);\n    Assert.assertNotNull(rule);\n    Assert.assertEquals(1, rule.getBranchStatus());\n    Assert.assertEquals(Long.valueOf(latestChildNamespaceRelease.getId()), rule.getReleaseId());\n\n    \r\n    Page<ReleaseHistory> releaseHistories = releaseHistoryService.findReleaseHistoriesByNamespace\n        (testApp, parentClusterName, testNamespace, pageable);\n\n    ReleaseHistory branchReleaseHistory = releaseHistories.getContent().get(0);\n\n    Assert.assertEquals(1, releaseHistories.getTotalElements());\n    Assert.assertEquals(ReleaseOperation.GRAY_RELEASE,\n        branchReleaseHistory.getOperation());\n    Assert.assertEquals(latestChildNamespaceRelease.getId(), branchReleaseHistory.getReleaseId());\n    Assert.assertEquals(0, branchReleaseHistory.getPreviousReleaseId());\n    Assert.assertTrue(branchReleaseHistory.getOperationContext().contains(\"\\\"baseReleaseId\\\":3\"));\n    Assert.assertTrue(branchReleaseHistory.getOperationContext().contains(rule.getRules()));\n  }\n","date":"2016-11-22 15:47:36","endLine":355,"groupId":"176","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testPublishBranchAtFirstTime","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-apollo-10-0.7/blobInfo/CC_OUT/blobs/18/0f973bcb036d0c95ae48f48238a48dcbec88b1.src","preCode":"  public void testPublishBranchAtFirstTime() {\n    long parentNamespaceId = 107;\n    String parentClusterName = \"default4\";\n    long childNamespaceId = 108;\n    String childClusterName = \"child-cluster4\";\n    \r\n    Namespace childNamespace = instanceNamespace(childNamespaceId, childClusterName);\n    releaseService.publish(childNamespace, \"\", \"\", operator);\n\n    Release latestChildNamespaceRelease = releaseService.findLatestActiveRelease(childNamespace);\n\n    Assert.assertNotNull(latestChildNamespaceRelease);\n\n    Map<String, String> childNamespaceConfiguration = parseConfiguration(latestChildNamespaceRelease.getConfigurations());\n    Assert.assertEquals(4, childNamespaceConfiguration.size());\n    Assert.assertEquals(\"v1-2\", childNamespaceConfiguration.get(\"k1\"));\n    Assert.assertEquals(\"v2\", childNamespaceConfiguration.get(\"k2\"));\n    Assert.assertEquals(\"v3\", childNamespaceConfiguration.get(\"k3\"));\n    Assert.assertEquals(\"v4\", childNamespaceConfiguration.get(\"k4\"));\n\n    Namespace parentNamespace = instanceNamespace(parentNamespaceId, parentClusterName);\n\n    Release latestParentNamespaceRelease = releaseService.findLatestActiveRelease(parentNamespace);\n\n    \r\n    Assert.assertNotNull(latestParentNamespaceRelease);\n\n    Map<String, String> parentNamespaceConfiguration = parseConfiguration(latestParentNamespaceRelease.getConfigurations());\n    Assert.assertEquals(3, parentNamespaceConfiguration.size());\n    Assert.assertEquals(\"v1\", parentNamespaceConfiguration.get(\"k1\"));\n    Assert.assertEquals(\"v2\", parentNamespaceConfiguration.get(\"k2\"));\n    Assert.assertEquals(\"v3\", parentNamespaceConfiguration.get(\"k3\"));\n\n    GrayReleaseRule rule= namespaceBranchService.findBranchGrayRules(testApp, parentClusterName,\n                                                                     testNamespace, childClusterName);\n    Assert.assertNotNull(rule);\n    Assert.assertEquals(1, rule.getBranchStatus());\n    Assert.assertEquals(Long.valueOf(latestChildNamespaceRelease.getId()), rule.getReleaseId());\n\n    \r\n    Page<ReleaseHistory> releaseHistories = releaseHistoryService.findReleaseHistoriesByNamespace\n        (testApp, parentClusterName, testNamespace, pageable);\n\n    ReleaseHistory branchReleaseHistory = releaseHistories.getContent().get(0);\n\n    Assert.assertEquals(1, releaseHistories.getTotalElements());\n    Assert.assertEquals(ReleaseOperation.GRAY_RELEASE,\n        branchReleaseHistory.getOperation());\n    Assert.assertEquals(latestChildNamespaceRelease.getId(), branchReleaseHistory.getReleaseId());\n    Assert.assertEquals(0, branchReleaseHistory.getPreviousReleaseId());\n    Assert.assertTrue(branchReleaseHistory.getOperationContext().contains(\"\\\"baseReleaseId\\\":3\"));\n    Assert.assertTrue(branchReleaseHistory.getOperationContext().contains(rule.getRules()));\n  }\n","realPath":"apollo-biz/src/test/java/com/ctrip/framework/apollo/biz/service/ReleaseCreationTest.java","repoName":"apollo","snippetEndLine":0,"snippetStartLine":0,"startLine":303,"status":"B"},{"authorDate":"2016-11-22 15:47:36","commitOrder":1,"curCode":"  public void testPublishBranch() {\n    long parentNamespaceId = 109;\n    String parentClusterName = \"default5\";\n    long childNamespaceId = 1010;\n    String childClusterName = \"child-cluster5\";\n    \r\n    Namespace childNamespace = instanceNamespace(childNamespaceId, childClusterName);\n    releaseService.publish(childNamespace, \"\", \"\", operator);\n\n    Release latestChildNamespaceRelease = releaseService.findLatestActiveRelease(childNamespace);\n\n    Assert.assertNotNull(latestChildNamespaceRelease);\n\n    Map<String, String> childNamespaceConfiguration = parseConfiguration(latestChildNamespaceRelease.getConfigurations());\n    Assert.assertEquals(5, childNamespaceConfiguration.size());\n    Assert.assertEquals(\"v1-2\", childNamespaceConfiguration.get(\"k1\"));\n    Assert.assertEquals(\"v2\", childNamespaceConfiguration.get(\"k2\"));\n    Assert.assertEquals(\"v3\", childNamespaceConfiguration.get(\"k3\"));\n    Assert.assertEquals(\"v4\", childNamespaceConfiguration.get(\"k4\"));\n    Assert.assertEquals(\"v6\", childNamespaceConfiguration.get(\"k6\"));\n\n    Namespace parentNamespace = instanceNamespace(parentNamespaceId, parentClusterName);\n\n    Release latestParentNamespaceRelease = releaseService.findLatestActiveRelease(parentNamespace);\n\n    \r\n    Assert.assertNotNull(latestParentNamespaceRelease);\n\n    Map<String, String> parentNamespaceConfiguration = parseConfiguration(latestParentNamespaceRelease.getConfigurations());\n    Assert.assertEquals(3, parentNamespaceConfiguration.size());\n    Assert.assertEquals(\"v1\", parentNamespaceConfiguration.get(\"k1\"));\n    Assert.assertEquals(\"v2\", parentNamespaceConfiguration.get(\"k2\"));\n    Assert.assertEquals(\"v3\", parentNamespaceConfiguration.get(\"k3\"));\n\n    GrayReleaseRule rule= namespaceBranchService.findBranchGrayRules(testApp, parentClusterName,\n                                                                     testNamespace, childClusterName);\n    Assert.assertNotNull(rule);\n    Assert.assertEquals(1, rule.getBranchStatus());\n    Assert.assertEquals(Long.valueOf(latestChildNamespaceRelease.getId()), rule.getReleaseId());\n\n    \r\n    Page<ReleaseHistory> releaseHistories = releaseHistoryService.findReleaseHistoriesByNamespace\n        (testApp, parentClusterName, testNamespace, pageable);\n\n    ReleaseHistory branchReleaseHistory = releaseHistories.getContent().get(0);\n\n    Assert.assertEquals(1, releaseHistories.getTotalElements());\n    Assert.assertEquals(ReleaseOperation.GRAY_RELEASE,\n        branchReleaseHistory.getOperation());\n    Assert.assertEquals(latestChildNamespaceRelease.getId(), branchReleaseHistory.getReleaseId());\n    Assert.assertEquals(5, branchReleaseHistory.getPreviousReleaseId());\n    Assert.assertTrue(branchReleaseHistory.getOperationContext().contains(\"\\\"baseReleaseId\\\":4\"));\n    Assert.assertTrue(branchReleaseHistory.getOperationContext().contains(rule.getRules()));\n  }\n","date":"2016-11-22 15:47:36","endLine":427,"groupId":"176","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testPublishBranch","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-apollo-10-0.7/blobInfo/CC_OUT/blobs/18/0f973bcb036d0c95ae48f48238a48dcbec88b1.src","preCode":"  public void testPublishBranch() {\n    long parentNamespaceId = 109;\n    String parentClusterName = \"default5\";\n    long childNamespaceId = 1010;\n    String childClusterName = \"child-cluster5\";\n    \r\n    Namespace childNamespace = instanceNamespace(childNamespaceId, childClusterName);\n    releaseService.publish(childNamespace, \"\", \"\", operator);\n\n    Release latestChildNamespaceRelease = releaseService.findLatestActiveRelease(childNamespace);\n\n    Assert.assertNotNull(latestChildNamespaceRelease);\n\n    Map<String, String> childNamespaceConfiguration = parseConfiguration(latestChildNamespaceRelease.getConfigurations());\n    Assert.assertEquals(5, childNamespaceConfiguration.size());\n    Assert.assertEquals(\"v1-2\", childNamespaceConfiguration.get(\"k1\"));\n    Assert.assertEquals(\"v2\", childNamespaceConfiguration.get(\"k2\"));\n    Assert.assertEquals(\"v3\", childNamespaceConfiguration.get(\"k3\"));\n    Assert.assertEquals(\"v4\", childNamespaceConfiguration.get(\"k4\"));\n    Assert.assertEquals(\"v6\", childNamespaceConfiguration.get(\"k6\"));\n\n    Namespace parentNamespace = instanceNamespace(parentNamespaceId, parentClusterName);\n\n    Release latestParentNamespaceRelease = releaseService.findLatestActiveRelease(parentNamespace);\n\n    \r\n    Assert.assertNotNull(latestParentNamespaceRelease);\n\n    Map<String, String> parentNamespaceConfiguration = parseConfiguration(latestParentNamespaceRelease.getConfigurations());\n    Assert.assertEquals(3, parentNamespaceConfiguration.size());\n    Assert.assertEquals(\"v1\", parentNamespaceConfiguration.get(\"k1\"));\n    Assert.assertEquals(\"v2\", parentNamespaceConfiguration.get(\"k2\"));\n    Assert.assertEquals(\"v3\", parentNamespaceConfiguration.get(\"k3\"));\n\n    GrayReleaseRule rule= namespaceBranchService.findBranchGrayRules(testApp, parentClusterName,\n                                                                     testNamespace, childClusterName);\n    Assert.assertNotNull(rule);\n    Assert.assertEquals(1, rule.getBranchStatus());\n    Assert.assertEquals(Long.valueOf(latestChildNamespaceRelease.getId()), rule.getReleaseId());\n\n    \r\n    Page<ReleaseHistory> releaseHistories = releaseHistoryService.findReleaseHistoriesByNamespace\n        (testApp, parentClusterName, testNamespace, pageable);\n\n    ReleaseHistory branchReleaseHistory = releaseHistories.getContent().get(0);\n\n    Assert.assertEquals(1, releaseHistories.getTotalElements());\n    Assert.assertEquals(ReleaseOperation.GRAY_RELEASE,\n        branchReleaseHistory.getOperation());\n    Assert.assertEquals(latestChildNamespaceRelease.getId(), branchReleaseHistory.getReleaseId());\n    Assert.assertEquals(5, branchReleaseHistory.getPreviousReleaseId());\n    Assert.assertTrue(branchReleaseHistory.getOperationContext().contains(\"\\\"baseReleaseId\\\":4\"));\n    Assert.assertTrue(branchReleaseHistory.getOperationContext().contains(rule.getRules()));\n  }\n","realPath":"apollo-biz/src/test/java/com/ctrip/framework/apollo/biz/service/ReleaseCreationTest.java","repoName":"apollo","snippetEndLine":0,"snippetStartLine":0,"startLine":374,"status":"B"}],"commitId":"6d7ebbe8491f5a920f20f84867e9114c3fbd17ae","commitMessage":"@@@Merge branch 'master' into 'release'\n\nMaster2Release\n\n\n\nSee merge request !32","date":"2016-11-22 15:47:36","modifiedFileCount":"58","status":"B","submitter":"zl??(IT)"},{"authorTime":"2017-01-19 16:28:42","codes":[{"authorDate":"2017-01-19 16:28:42","commitOrder":2,"curCode":"  public void testPublishBranchAtFirstTime() {\n    long parentNamespaceId = 107;\n    String parentClusterName = \"default4\";\n    long childNamespaceId = 108;\n    String childClusterName = \"child-cluster4\";\n    \r\n    Namespace childNamespace = instanceNamespace(childNamespaceId, childClusterName);\n    releaseService.publish(childNamespace, \"\", \"\", operator, false);\n\n    Release latestChildNamespaceRelease = releaseService.findLatestActiveRelease(childNamespace);\n\n    Assert.assertNotNull(latestChildNamespaceRelease);\n\n    Map<String, String> childNamespaceConfiguration = parseConfiguration(latestChildNamespaceRelease.getConfigurations());\n    Assert.assertEquals(4, childNamespaceConfiguration.size());\n    Assert.assertEquals(\"v1-2\", childNamespaceConfiguration.get(\"k1\"));\n    Assert.assertEquals(\"v2\", childNamespaceConfiguration.get(\"k2\"));\n    Assert.assertEquals(\"v3\", childNamespaceConfiguration.get(\"k3\"));\n    Assert.assertEquals(\"v4\", childNamespaceConfiguration.get(\"k4\"));\n\n    Namespace parentNamespace = instanceNamespace(parentNamespaceId, parentClusterName);\n\n    Release latestParentNamespaceRelease = releaseService.findLatestActiveRelease(parentNamespace);\n\n    \r\n    Assert.assertNotNull(latestParentNamespaceRelease);\n\n    Map<String, String> parentNamespaceConfiguration = parseConfiguration(latestParentNamespaceRelease.getConfigurations());\n    Assert.assertEquals(3, parentNamespaceConfiguration.size());\n    Assert.assertEquals(\"v1\", parentNamespaceConfiguration.get(\"k1\"));\n    Assert.assertEquals(\"v2\", parentNamespaceConfiguration.get(\"k2\"));\n    Assert.assertEquals(\"v3\", parentNamespaceConfiguration.get(\"k3\"));\n\n    GrayReleaseRule rule= namespaceBranchService.findBranchGrayRules(testApp, parentClusterName,\n                                                                     testNamespace, childClusterName);\n    Assert.assertNotNull(rule);\n    Assert.assertEquals(1, rule.getBranchStatus());\n    Assert.assertEquals(Long.valueOf(latestChildNamespaceRelease.getId()), rule.getReleaseId());\n\n    \r\n    Page<ReleaseHistory> releaseHistories = releaseHistoryService.findReleaseHistoriesByNamespace\n        (testApp, parentClusterName, testNamespace, pageable);\n\n    ReleaseHistory branchReleaseHistory = releaseHistories.getContent().get(0);\n\n    Assert.assertEquals(1, releaseHistories.getTotalElements());\n    Assert.assertEquals(ReleaseOperation.GRAY_RELEASE,\n        branchReleaseHistory.getOperation());\n    Assert.assertEquals(latestChildNamespaceRelease.getId(), branchReleaseHistory.getReleaseId());\n    Assert.assertEquals(0, branchReleaseHistory.getPreviousReleaseId());\n    Assert.assertTrue(branchReleaseHistory.getOperationContext().contains(\"\\\"baseReleaseId\\\":3\"));\n    Assert.assertTrue(branchReleaseHistory.getOperationContext().contains(rule.getRules()));\n  }\n","date":"2017-01-19 16:28:42","endLine":353,"groupId":"10617","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testPublishBranchAtFirstTime","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-apollo-10-0.7/blobInfo/CC_OUT/blobs/3d/4a5f545d4d21a9b0d390d1c463be35ad4b26b2.src","preCode":"  public void testPublishBranchAtFirstTime() {\n    long parentNamespaceId = 107;\n    String parentClusterName = \"default4\";\n    long childNamespaceId = 108;\n    String childClusterName = \"child-cluster4\";\n    \r\n    Namespace childNamespace = instanceNamespace(childNamespaceId, childClusterName);\n    releaseService.publish(childNamespace, \"\", \"\", operator);\n\n    Release latestChildNamespaceRelease = releaseService.findLatestActiveRelease(childNamespace);\n\n    Assert.assertNotNull(latestChildNamespaceRelease);\n\n    Map<String, String> childNamespaceConfiguration = parseConfiguration(latestChildNamespaceRelease.getConfigurations());\n    Assert.assertEquals(4, childNamespaceConfiguration.size());\n    Assert.assertEquals(\"v1-2\", childNamespaceConfiguration.get(\"k1\"));\n    Assert.assertEquals(\"v2\", childNamespaceConfiguration.get(\"k2\"));\n    Assert.assertEquals(\"v3\", childNamespaceConfiguration.get(\"k3\"));\n    Assert.assertEquals(\"v4\", childNamespaceConfiguration.get(\"k4\"));\n\n    Namespace parentNamespace = instanceNamespace(parentNamespaceId, parentClusterName);\n\n    Release latestParentNamespaceRelease = releaseService.findLatestActiveRelease(parentNamespace);\n\n    \r\n    Assert.assertNotNull(latestParentNamespaceRelease);\n\n    Map<String, String> parentNamespaceConfiguration = parseConfiguration(latestParentNamespaceRelease.getConfigurations());\n    Assert.assertEquals(3, parentNamespaceConfiguration.size());\n    Assert.assertEquals(\"v1\", parentNamespaceConfiguration.get(\"k1\"));\n    Assert.assertEquals(\"v2\", parentNamespaceConfiguration.get(\"k2\"));\n    Assert.assertEquals(\"v3\", parentNamespaceConfiguration.get(\"k3\"));\n\n    GrayReleaseRule rule= namespaceBranchService.findBranchGrayRules(testApp, parentClusterName,\n                                                                     testNamespace, childClusterName);\n    Assert.assertNotNull(rule);\n    Assert.assertEquals(1, rule.getBranchStatus());\n    Assert.assertEquals(Long.valueOf(latestChildNamespaceRelease.getId()), rule.getReleaseId());\n\n    \r\n    Page<ReleaseHistory> releaseHistories = releaseHistoryService.findReleaseHistoriesByNamespace\n        (testApp, parentClusterName, testNamespace, pageable);\n\n    ReleaseHistory branchReleaseHistory = releaseHistories.getContent().get(0);\n\n    Assert.assertEquals(1, releaseHistories.getTotalElements());\n    Assert.assertEquals(ReleaseOperation.GRAY_RELEASE,\n        branchReleaseHistory.getOperation());\n    Assert.assertEquals(latestChildNamespaceRelease.getId(), branchReleaseHistory.getReleaseId());\n    Assert.assertEquals(0, branchReleaseHistory.getPreviousReleaseId());\n    Assert.assertTrue(branchReleaseHistory.getOperationContext().contains(\"\\\"baseReleaseId\\\":3\"));\n    Assert.assertTrue(branchReleaseHistory.getOperationContext().contains(rule.getRules()));\n  }\n","realPath":"apollo-biz/src/test/java/com/ctrip/framework/apollo/biz/service/ReleaseCreationTest.java","repoName":"apollo","snippetEndLine":0,"snippetStartLine":0,"startLine":301,"status":"M"},{"authorDate":"2017-01-19 16:28:42","commitOrder":2,"curCode":"  public void testPublishBranch() {\n    long parentNamespaceId = 109;\n    String parentClusterName = \"default5\";\n    long childNamespaceId = 1010;\n    String childClusterName = \"child-cluster5\";\n    \r\n    Namespace childNamespace = instanceNamespace(childNamespaceId, childClusterName);\n    releaseService.publish(childNamespace, \"\", \"\", operator, false);\n\n    Release latestChildNamespaceRelease = releaseService.findLatestActiveRelease(childNamespace);\n\n    Assert.assertNotNull(latestChildNamespaceRelease);\n\n    Map<String, String> childNamespaceConfiguration = parseConfiguration(latestChildNamespaceRelease.getConfigurations());\n    Assert.assertEquals(5, childNamespaceConfiguration.size());\n    Assert.assertEquals(\"v1-2\", childNamespaceConfiguration.get(\"k1\"));\n    Assert.assertEquals(\"v2\", childNamespaceConfiguration.get(\"k2\"));\n    Assert.assertEquals(\"v3\", childNamespaceConfiguration.get(\"k3\"));\n    Assert.assertEquals(\"v4\", childNamespaceConfiguration.get(\"k4\"));\n    Assert.assertEquals(\"v6\", childNamespaceConfiguration.get(\"k6\"));\n\n    Namespace parentNamespace = instanceNamespace(parentNamespaceId, parentClusterName);\n\n    Release latestParentNamespaceRelease = releaseService.findLatestActiveRelease(parentNamespace);\n\n    \r\n    Assert.assertNotNull(latestParentNamespaceRelease);\n\n    Map<String, String> parentNamespaceConfiguration = parseConfiguration(latestParentNamespaceRelease.getConfigurations());\n    Assert.assertEquals(3, parentNamespaceConfiguration.size());\n    Assert.assertEquals(\"v1\", parentNamespaceConfiguration.get(\"k1\"));\n    Assert.assertEquals(\"v2\", parentNamespaceConfiguration.get(\"k2\"));\n    Assert.assertEquals(\"v3\", parentNamespaceConfiguration.get(\"k3\"));\n\n    GrayReleaseRule rule= namespaceBranchService.findBranchGrayRules(testApp, parentClusterName,\n                                                                     testNamespace, childClusterName);\n    Assert.assertNotNull(rule);\n    Assert.assertEquals(1, rule.getBranchStatus());\n    Assert.assertEquals(Long.valueOf(latestChildNamespaceRelease.getId()), rule.getReleaseId());\n\n    \r\n    Page<ReleaseHistory> releaseHistories = releaseHistoryService.findReleaseHistoriesByNamespace\n        (testApp, parentClusterName, testNamespace, pageable);\n\n    ReleaseHistory branchReleaseHistory = releaseHistories.getContent().get(0);\n\n    Assert.assertEquals(1, releaseHistories.getTotalElements());\n    Assert.assertEquals(ReleaseOperation.GRAY_RELEASE,\n        branchReleaseHistory.getOperation());\n    Assert.assertEquals(latestChildNamespaceRelease.getId(), branchReleaseHistory.getReleaseId());\n    Assert.assertEquals(5, branchReleaseHistory.getPreviousReleaseId());\n    Assert.assertTrue(branchReleaseHistory.getOperationContext().contains(\"\\\"baseReleaseId\\\":4\"));\n    Assert.assertTrue(branchReleaseHistory.getOperationContext().contains(rule.getRules()));\n  }\n","date":"2017-01-19 16:28:42","endLine":425,"groupId":"10617","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testPublishBranch","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-apollo-10-0.7/blobInfo/CC_OUT/blobs/3d/4a5f545d4d21a9b0d390d1c463be35ad4b26b2.src","preCode":"  public void testPublishBranch() {\n    long parentNamespaceId = 109;\n    String parentClusterName = \"default5\";\n    long childNamespaceId = 1010;\n    String childClusterName = \"child-cluster5\";\n    \r\n    Namespace childNamespace = instanceNamespace(childNamespaceId, childClusterName);\n    releaseService.publish(childNamespace, \"\", \"\", operator);\n\n    Release latestChildNamespaceRelease = releaseService.findLatestActiveRelease(childNamespace);\n\n    Assert.assertNotNull(latestChildNamespaceRelease);\n\n    Map<String, String> childNamespaceConfiguration = parseConfiguration(latestChildNamespaceRelease.getConfigurations());\n    Assert.assertEquals(5, childNamespaceConfiguration.size());\n    Assert.assertEquals(\"v1-2\", childNamespaceConfiguration.get(\"k1\"));\n    Assert.assertEquals(\"v2\", childNamespaceConfiguration.get(\"k2\"));\n    Assert.assertEquals(\"v3\", childNamespaceConfiguration.get(\"k3\"));\n    Assert.assertEquals(\"v4\", childNamespaceConfiguration.get(\"k4\"));\n    Assert.assertEquals(\"v6\", childNamespaceConfiguration.get(\"k6\"));\n\n    Namespace parentNamespace = instanceNamespace(parentNamespaceId, parentClusterName);\n\n    Release latestParentNamespaceRelease = releaseService.findLatestActiveRelease(parentNamespace);\n\n    \r\n    Assert.assertNotNull(latestParentNamespaceRelease);\n\n    Map<String, String> parentNamespaceConfiguration = parseConfiguration(latestParentNamespaceRelease.getConfigurations());\n    Assert.assertEquals(3, parentNamespaceConfiguration.size());\n    Assert.assertEquals(\"v1\", parentNamespaceConfiguration.get(\"k1\"));\n    Assert.assertEquals(\"v2\", parentNamespaceConfiguration.get(\"k2\"));\n    Assert.assertEquals(\"v3\", parentNamespaceConfiguration.get(\"k3\"));\n\n    GrayReleaseRule rule= namespaceBranchService.findBranchGrayRules(testApp, parentClusterName,\n                                                                     testNamespace, childClusterName);\n    Assert.assertNotNull(rule);\n    Assert.assertEquals(1, rule.getBranchStatus());\n    Assert.assertEquals(Long.valueOf(latestChildNamespaceRelease.getId()), rule.getReleaseId());\n\n    \r\n    Page<ReleaseHistory> releaseHistories = releaseHistoryService.findReleaseHistoriesByNamespace\n        (testApp, parentClusterName, testNamespace, pageable);\n\n    ReleaseHistory branchReleaseHistory = releaseHistories.getContent().get(0);\n\n    Assert.assertEquals(1, releaseHistories.getTotalElements());\n    Assert.assertEquals(ReleaseOperation.GRAY_RELEASE,\n        branchReleaseHistory.getOperation());\n    Assert.assertEquals(latestChildNamespaceRelease.getId(), branchReleaseHistory.getReleaseId());\n    Assert.assertEquals(5, branchReleaseHistory.getPreviousReleaseId());\n    Assert.assertTrue(branchReleaseHistory.getOperationContext().contains(\"\\\"baseReleaseId\\\":4\"));\n    Assert.assertTrue(branchReleaseHistory.getOperationContext().contains(rule.getRules()));\n  }\n","realPath":"apollo-biz/src/test/java/com/ctrip/framework/apollo/biz/service/ReleaseCreationTest.java","repoName":"apollo","snippetEndLine":0,"snippetStartLine":0,"startLine":372,"status":"M"}],"commitId":"4f3dd644a2dde5e77186ec8aac124e27b45c14b3","commitMessage":"@@@Merge pull request #520 from lepdou/emergency_publish\n\nemergency publish","date":"2017-01-19 16:28:42","modifiedFileCount":"15","status":"M","submitter":"Jason Song"}]
