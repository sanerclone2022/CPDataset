[{"authorTime":"2020-06-21 16:50:09","codes":[{"authorDate":"2019-10-02 20:27:12","commitOrder":3,"curCode":"  public void testCreatePublicAppNamespaceNotExisted() {\n    AppNamespace appNamespace = assembleBaseAppNamespace();\n    appNamespace.setPublic(true);\n\n    appNamespaceService.createAppNamespaceInLocal(appNamespace);\n\n    AppNamespace createdAppNamespace = appNamespaceService.findPublicAppNamespace(appNamespace.getName());\n\n    Assert.assertNotNull(createdAppNamespace);\n    Assert.assertEquals(appNamespace.getName(), createdAppNamespace.getName());\n  }\n","date":"2019-10-02 20:27:12","endLine":129,"groupId":"207","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testCreatePublicAppNamespaceNotExisted","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-apollo-10-0.7/blobInfo/CC_OUT/blobs/02/eee0727d6ccd06e6257c09461af72ea1b8e4b8.src","preCode":"  public void testCreatePublicAppNamespaceNotExisted() {\n    AppNamespace appNamespace = assembleBaseAppNamespace();\n    appNamespace.setPublic(true);\n\n    appNamespaceService.createAppNamespaceInLocal(appNamespace);\n\n    AppNamespace createdAppNamespace = appNamespaceService.findPublicAppNamespace(appNamespace.getName());\n\n    Assert.assertNotNull(createdAppNamespace);\n    Assert.assertEquals(appNamespace.getName(), createdAppNamespace.getName());\n  }\n","realPath":"apollo-portal/src/test/java/com/ctrip/framework/apollo/portal/service/AppNamespaceServiceTest.java","repoName":"apollo","snippetEndLine":0,"snippetStartLine":0,"startLine":119,"status":"NB"},{"authorDate":"2020-06-21 16:50:09","commitOrder":3,"curCode":"  public void testCreatePublicAppNamespaceWithWrongFormatNotExisted() {\n    AppNamespace appNamespace = assembleBaseAppNamespace();\n    appNamespace.setPublic(true);\n    appNamespace.setFormat(ConfigFileFormat.YAML.getValue());\n\n    appNamespaceService.createAppNamespaceInLocal(appNamespace);\n\n    AppNamespace createdAppNamespace = appNamespaceService.findPublicAppNamespace(appNamespace.getName());\n\n    Assert.assertNotNull(createdAppNamespace);\n    Assert.assertEquals(appNamespace.getName(), createdAppNamespace.getName());\n    Assert.assertEquals(ConfigFileFormat.Properties.getValue(), createdAppNamespace.getFormat());\n  }\n","date":"2020-06-21 16:59:08","endLine":149,"groupId":"207","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testCreatePublicAppNamespaceWithWrongFormatNotExisted","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-apollo-10-0.7/blobInfo/CC_OUT/blobs/89/be8342e55b67253b5ca5263b18b1e413ec4b61.src","preCode":"  public void testCreatePublicAppNamespaceWithWrongFormatNotExisted() {\n    AppNamespace appNamespace = assembleBaseAppNamespace();\n    appNamespace.setPublic(true);\n    appNamespace.setFormat(ConfigFileFormat.YAML.getValue());\n\n    appNamespaceService.createAppNamespaceInLocal(appNamespace);\n\n    AppNamespace createdAppNamespace = appNamespaceService.findPublicAppNamespace(appNamespace.getName());\n\n    Assert.assertNotNull(createdAppNamespace);\n    Assert.assertEquals(appNamespace.getName(), createdAppNamespace.getName());\n    Assert.assertEquals(ConfigFileFormat.Properties.getValue(), createdAppNamespace.getFormat());\n  }\n","realPath":"apollo-portal/src/test/java/com/ctrip/framework/apollo/portal/service/AppNamespaceServiceTest.java","repoName":"apollo","snippetEndLine":0,"snippetStartLine":0,"startLine":137,"status":"B"}],"commitId":"b4812a60f2833a21b848f3af1d8bc1089b93851b","commitMessage":"@@@public namespaces only allow properties format\n","date":"2020-06-21 16:59:08","modifiedFileCount":"2","status":"M","submitter":"Jason Song"},{"authorTime":"2021-08-05 20:40:41","codes":[{"authorDate":"2019-10-02 20:27:12","commitOrder":4,"curCode":"  public void testCreatePublicAppNamespaceNotExisted() {\n    AppNamespace appNamespace = assembleBaseAppNamespace();\n    appNamespace.setPublic(true);\n\n    appNamespaceService.createAppNamespaceInLocal(appNamespace);\n\n    AppNamespace createdAppNamespace = appNamespaceService.findPublicAppNamespace(appNamespace.getName());\n\n    Assert.assertNotNull(createdAppNamespace);\n    Assert.assertEquals(appNamespace.getName(), createdAppNamespace.getName());\n  }\n","date":"2019-10-02 20:27:12","endLine":129,"groupId":"10121","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testCreatePublicAppNamespaceNotExisted","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-apollo-10-0.7/blobInfo/CC_OUT/blobs/02/eee0727d6ccd06e6257c09461af72ea1b8e4b8.src","preCode":"  public void testCreatePublicAppNamespaceNotExisted() {\n    AppNamespace appNamespace = assembleBaseAppNamespace();\n    appNamespace.setPublic(true);\n\n    appNamespaceService.createAppNamespaceInLocal(appNamespace);\n\n    AppNamespace createdAppNamespace = appNamespaceService.findPublicAppNamespace(appNamespace.getName());\n\n    Assert.assertNotNull(createdAppNamespace);\n    Assert.assertEquals(appNamespace.getName(), createdAppNamespace.getName());\n  }\n","realPath":"apollo-portal/src/test/java/com/ctrip/framework/apollo/portal/service/AppNamespaceServiceTest.java","repoName":"apollo","snippetEndLine":0,"snippetStartLine":0,"startLine":119,"status":"N"},{"authorDate":"2021-08-05 20:40:41","commitOrder":4,"curCode":"  public void testCreatePublicAppNamespaceWithWrongFormatNotExisted() {\n    AppNamespace appNamespace = assembleBaseAppNamespace();\n    appNamespace.setPublic(true);\n    appNamespace.setFormat(ConfigFileFormat.YAML.getValue());\n\n    appNamespaceService.createAppNamespaceInLocal(appNamespace);\n\n    AppNamespace createdAppNamespace = appNamespaceService.findPublicAppNamespace(appNamespace.getName());\n\n    Assert.assertNotNull(createdAppNamespace);\n    Assert.assertEquals(appNamespace.getName(), createdAppNamespace.getName());\n    Assert.assertEquals(ConfigFileFormat.YAML.getValue(), createdAppNamespace.getFormat());\n  }\n","date":"2021-08-05 20:40:41","endLine":165,"groupId":"10121","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"testCreatePublicAppNamespaceWithWrongFormatNotExisted","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-apollo-10-0.7/blobInfo/CC_OUT/blobs/51/74131b74591183f0d30c7874fbc1d5aec3f258.src","preCode":"  public void testCreatePublicAppNamespaceWithWrongFormatNotExisted() {\n    AppNamespace appNamespace = assembleBaseAppNamespace();\n    appNamespace.setPublic(true);\n    appNamespace.setFormat(ConfigFileFormat.YAML.getValue());\n\n    appNamespaceService.createAppNamespaceInLocal(appNamespace);\n\n    AppNamespace createdAppNamespace = appNamespaceService.findPublicAppNamespace(appNamespace.getName());\n\n    Assert.assertNotNull(createdAppNamespace);\n    Assert.assertEquals(appNamespace.getName(), createdAppNamespace.getName());\n    Assert.assertEquals(ConfigFileFormat.Properties.getValue(), createdAppNamespace.getFormat());\n  }\n","realPath":"apollo-portal/src/test/java/com/ctrip/framework/apollo/portal/service/AppNamespaceServiceTest.java","repoName":"apollo","snippetEndLine":0,"snippetStartLine":0,"startLine":153,"status":"M"}],"commitId":"278114744e1942df45ca2754f6cdec362dee0481","commitMessage":"@@@1. remove useless code (#3871)\n\n2. fix failed ut\n3. add change log","date":"2021-08-05 20:40:41","modifiedFileCount":"2","status":"M","submitter":"??"}]
