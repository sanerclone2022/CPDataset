[{"authorTime":"2016-05-19 17:58:23","codes":[{"authorDate":"2016-05-19 17:58:23","commitOrder":1,"curCode":"  public void testQueryConfigWithReleaseNotFound() throws Exception {\n    String someClientSideReleaseKey = \"1\";\n    HttpServletResponse someResponse = mock(HttpServletResponse.class);\n\n    when(configService.findRelease(someAppId, someClusterName, defaultNamespaceName))\n        .thenReturn(null);\n\n    ApolloConfig result = configController.queryConfig(someAppId, someClusterName,\n        defaultNamespaceName, someDataCenter, someClientSideReleaseKey,\n        someResponse);\n\n    assertNull(result);\n    verify(someResponse, times(1)).sendError(eq(HttpServletResponse.SC_NOT_FOUND), anyString());\n  }\n","date":"2016-05-19 17:58:23","endLine":110,"groupId":"988","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testQueryConfigWithReleaseNotFound","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-apollo-10-0.7/blobInfo/CC_OUT/blobs/ea/25eafff9da8048e140a9ba191b0d468620fc07.src","preCode":"  public void testQueryConfigWithReleaseNotFound() throws Exception {\n    String someClientSideReleaseKey = \"1\";\n    HttpServletResponse someResponse = mock(HttpServletResponse.class);\n\n    when(configService.findRelease(someAppId, someClusterName, defaultNamespaceName))\n        .thenReturn(null);\n\n    ApolloConfig result = configController.queryConfig(someAppId, someClusterName,\n        defaultNamespaceName, someDataCenter, someClientSideReleaseKey,\n        someResponse);\n\n    assertNull(result);\n    verify(someResponse, times(1)).sendError(eq(HttpServletResponse.SC_NOT_FOUND), anyString());\n  }\n","realPath":"apollo-configservice/src/test/java/com/ctrip/framework/apollo/configservice/controller/ConfigControllerTest.java","repoName":"apollo","snippetEndLine":0,"snippetStartLine":0,"startLine":97,"status":"B"},{"authorDate":"2016-05-19 17:58:23","commitOrder":1,"curCode":"  public void testQueryConfigWithApolloConfigNotModified() throws Exception {\n    String someClientSideReleaseKey = \"1\";\n    String someServerSideReleaseKey = someClientSideReleaseKey;\n    HttpServletResponse someResponse = mock(HttpServletResponse.class);\n\n    when(configService.findRelease(someAppId, someClusterName, defaultNamespaceName))\n        .thenReturn(someRelease);\n    when(someRelease.getReleaseKey()).thenReturn(someServerSideReleaseKey);\n\n    ApolloConfig\n        result =\n        configController.queryConfig(someAppId, someClusterName, defaultNamespaceName,\n            someDataCenter, String.valueOf(someClientSideReleaseKey), someResponse);\n\n    assertNull(result);\n    verify(someResponse, times(1)).setStatus(HttpServletResponse.SC_NOT_MODIFIED);\n  }\n","date":"2016-05-19 17:58:23","endLine":129,"groupId":"1427","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testQueryConfigWithApolloConfigNotModified","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-apollo-10-0.7/blobInfo/CC_OUT/blobs/ea/25eafff9da8048e140a9ba191b0d468620fc07.src","preCode":"  public void testQueryConfigWithApolloConfigNotModified() throws Exception {\n    String someClientSideReleaseKey = \"1\";\n    String someServerSideReleaseKey = someClientSideReleaseKey;\n    HttpServletResponse someResponse = mock(HttpServletResponse.class);\n\n    when(configService.findRelease(someAppId, someClusterName, defaultNamespaceName))\n        .thenReturn(someRelease);\n    when(someRelease.getReleaseKey()).thenReturn(someServerSideReleaseKey);\n\n    ApolloConfig\n        result =\n        configController.queryConfig(someAppId, someClusterName, defaultNamespaceName,\n            someDataCenter, String.valueOf(someClientSideReleaseKey), someResponse);\n\n    assertNull(result);\n    verify(someResponse, times(1)).setStatus(HttpServletResponse.SC_NOT_MODIFIED);\n  }\n","realPath":"apollo-configservice/src/test/java/com/ctrip/framework/apollo/configservice/controller/ConfigControllerTest.java","repoName":"apollo","snippetEndLine":0,"snippetStartLine":0,"startLine":113,"status":"B"}],"commitId":"0b3ace803cac96eb293336fd429738c5b92f845d","commitMessage":"@@@Merge pull request #209 from lepdou/rename\n\nRename","date":"2016-05-19 17:58:23","modifiedFileCount":"1","status":"B","submitter":"Jason Song"},{"authorTime":"2016-05-27 11:40:43","codes":[{"authorDate":"2016-05-27 11:40:43","commitOrder":2,"curCode":"  public void testQueryConfigWithReleaseNotFound() throws Exception {\n    String someClientSideReleaseKey = \"1\";\n    HttpServletResponse someResponse = mock(HttpServletResponse.class);\n\n    when(configService.findRelease(someAppId, someClusterName, defaultNamespaceName))\n        .thenReturn(null);\n\n    ApolloConfig result = configController.queryConfig(someAppId, someClusterName,\n        defaultNamespaceName, someDataCenter, someClientSideReleaseKey,\n        someClientIp, someResponse);\n\n    assertNull(result);\n    verify(someResponse, times(1)).sendError(eq(HttpServletResponse.SC_NOT_FOUND), anyString());\n  }\n","date":"2016-05-27 11:40:43","endLine":115,"groupId":"988","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testQueryConfigWithReleaseNotFound","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-apollo-10-0.7/blobInfo/CC_OUT/blobs/28/1b3032ada92bf2d0c34171d721ce62d57bb187.src","preCode":"  public void testQueryConfigWithReleaseNotFound() throws Exception {\n    String someClientSideReleaseKey = \"1\";\n    HttpServletResponse someResponse = mock(HttpServletResponse.class);\n\n    when(configService.findRelease(someAppId, someClusterName, defaultNamespaceName))\n        .thenReturn(null);\n\n    ApolloConfig result = configController.queryConfig(someAppId, someClusterName,\n        defaultNamespaceName, someDataCenter, someClientSideReleaseKey,\n        someResponse);\n\n    assertNull(result);\n    verify(someResponse, times(1)).sendError(eq(HttpServletResponse.SC_NOT_FOUND), anyString());\n  }\n","realPath":"apollo-configservice/src/test/java/com/ctrip/framework/apollo/configservice/controller/ConfigControllerTest.java","repoName":"apollo","snippetEndLine":0,"snippetStartLine":0,"startLine":102,"status":"M"},{"authorDate":"2016-05-27 11:40:43","commitOrder":2,"curCode":"  public void testQueryConfigWithApolloConfigNotModified() throws Exception {\n    String someClientSideReleaseKey = \"1\";\n    String someServerSideReleaseKey = someClientSideReleaseKey;\n    HttpServletResponse someResponse = mock(HttpServletResponse.class);\n\n    when(configService.findRelease(someAppId, someClusterName, defaultNamespaceName))\n        .thenReturn(someRelease);\n    when(someRelease.getReleaseKey()).thenReturn(someServerSideReleaseKey);\n\n    ApolloConfig\n        result =\n        configController.queryConfig(someAppId, someClusterName, defaultNamespaceName,\n            someDataCenter, String.valueOf(someClientSideReleaseKey), someClientIp, someResponse);\n\n    assertNull(result);\n    verify(someResponse, times(1)).setStatus(HttpServletResponse.SC_NOT_MODIFIED);\n  }\n","date":"2016-05-27 11:40:43","endLine":134,"groupId":"1427","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testQueryConfigWithApolloConfigNotModified","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-apollo-10-0.7/blobInfo/CC_OUT/blobs/28/1b3032ada92bf2d0c34171d721ce62d57bb187.src","preCode":"  public void testQueryConfigWithApolloConfigNotModified() throws Exception {\n    String someClientSideReleaseKey = \"1\";\n    String someServerSideReleaseKey = someClientSideReleaseKey;\n    HttpServletResponse someResponse = mock(HttpServletResponse.class);\n\n    when(configService.findRelease(someAppId, someClusterName, defaultNamespaceName))\n        .thenReturn(someRelease);\n    when(someRelease.getReleaseKey()).thenReturn(someServerSideReleaseKey);\n\n    ApolloConfig\n        result =\n        configController.queryConfig(someAppId, someClusterName, defaultNamespaceName,\n            someDataCenter, String.valueOf(someClientSideReleaseKey), someResponse);\n\n    assertNull(result);\n    verify(someResponse, times(1)).setStatus(HttpServletResponse.SC_NOT_MODIFIED);\n  }\n","realPath":"apollo-configservice/src/test/java/com/ctrip/framework/apollo/configservice/controller/ConfigControllerTest.java","repoName":"apollo","snippetEndLine":0,"snippetStartLine":0,"startLine":118,"status":"M"}],"commitId":"ea3563c58968aa0425d86f79bfd2346669d3ec77","commitMessage":"@@@Merge pull request #229 from nobodyiam/log-client-ip\n\nadd ip for client-server interactions so that we could have more info?","date":"2016-05-27 11:40:43","modifiedFileCount":"9","status":"M","submitter":"lepdou"},{"authorTime":"2016-07-26 17:11:01","codes":[{"authorDate":"2016-07-26 17:11:01","commitOrder":3,"curCode":"  public void testQueryConfigWithReleaseNotFound() throws Exception {\n    String someClientSideReleaseKey = \"1\";\n    HttpServletResponse someResponse = mock(HttpServletResponse.class);\n\n    when(releaseService.findLatestActiveRelease(someAppId, someClusterName, defaultNamespaceName))\n        .thenReturn(null);\n\n    ApolloConfig result = configController.queryConfig(someAppId, someClusterName,\n        defaultNamespaceName, someDataCenter, someClientSideReleaseKey,\n        someClientIp, someResponse);\n\n    assertNull(result);\n    verify(someResponse, times(1)).sendError(eq(HttpServletResponse.SC_NOT_FOUND), anyString());\n  }\n","date":"2016-07-26 17:11:01","endLine":170,"groupId":"988","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testQueryConfigWithReleaseNotFound","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-apollo-10-0.7/blobInfo/CC_OUT/blobs/f2/025e55d9cbf7d39065343ade152011ea79713a.src","preCode":"  public void testQueryConfigWithReleaseNotFound() throws Exception {\n    String someClientSideReleaseKey = \"1\";\n    HttpServletResponse someResponse = mock(HttpServletResponse.class);\n\n    when(configService.findRelease(someAppId, someClusterName, defaultNamespaceName))\n        .thenReturn(null);\n\n    ApolloConfig result = configController.queryConfig(someAppId, someClusterName,\n        defaultNamespaceName, someDataCenter, someClientSideReleaseKey,\n        someClientIp, someResponse);\n\n    assertNull(result);\n    verify(someResponse, times(1)).sendError(eq(HttpServletResponse.SC_NOT_FOUND), anyString());\n  }\n","realPath":"apollo-configservice/src/test/java/com/ctrip/framework/apollo/configservice/controller/ConfigControllerTest.java","repoName":"apollo","snippetEndLine":0,"snippetStartLine":0,"startLine":157,"status":"M"},{"authorDate":"2016-07-26 17:11:01","commitOrder":3,"curCode":"  public void testQueryConfigWithApolloConfigNotModified() throws Exception {\n    String someClientSideReleaseKey = \"1\";\n    String someServerSideReleaseKey = someClientSideReleaseKey;\n    HttpServletResponse someResponse = mock(HttpServletResponse.class);\n\n    when(releaseService.findLatestActiveRelease(someAppId, someClusterName, defaultNamespaceName))\n        .thenReturn(someRelease);\n    when(someRelease.getReleaseKey()).thenReturn(someServerSideReleaseKey);\n\n    ApolloConfig\n        result =\n        configController.queryConfig(someAppId, someClusterName, defaultNamespaceName,\n            someDataCenter, String.valueOf(someClientSideReleaseKey), someClientIp, someResponse);\n\n    assertNull(result);\n    verify(someResponse, times(1)).setStatus(HttpServletResponse.SC_NOT_MODIFIED);\n  }\n","date":"2016-07-26 17:11:01","endLine":189,"groupId":"1427","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testQueryConfigWithApolloConfigNotModified","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-apollo-10-0.7/blobInfo/CC_OUT/blobs/f2/025e55d9cbf7d39065343ade152011ea79713a.src","preCode":"  public void testQueryConfigWithApolloConfigNotModified() throws Exception {\n    String someClientSideReleaseKey = \"1\";\n    String someServerSideReleaseKey = someClientSideReleaseKey;\n    HttpServletResponse someResponse = mock(HttpServletResponse.class);\n\n    when(configService.findRelease(someAppId, someClusterName, defaultNamespaceName))\n        .thenReturn(someRelease);\n    when(someRelease.getReleaseKey()).thenReturn(someServerSideReleaseKey);\n\n    ApolloConfig\n        result =\n        configController.queryConfig(someAppId, someClusterName, defaultNamespaceName,\n            someDataCenter, String.valueOf(someClientSideReleaseKey), someClientIp, someResponse);\n\n    assertNull(result);\n    verify(someResponse, times(1)).setStatus(HttpServletResponse.SC_NOT_MODIFIED);\n  }\n","realPath":"apollo-configservice/src/test/java/com/ctrip/framework/apollo/configservice/controller/ConfigControllerTest.java","repoName":"apollo","snippetEndLine":0,"snippetStartLine":0,"startLine":173,"status":"M"}],"commitId":"77c489d9f98813806be31d127f9148d517854e1e","commitMessage":"@@@Merge pull request #347 from lepdou/rollback\n\nrollback","date":"2016-07-26 17:11:01","modifiedFileCount":"28","status":"M","submitter":"Jason Song"},{"authorTime":"2016-08-23 10:27:07","codes":[{"authorDate":"2016-08-23 10:27:07","commitOrder":4,"curCode":"  public void testQueryConfigWithReleaseNotFound() throws Exception {\n    String someClientSideReleaseKey = \"1\";\n    HttpServletResponse someResponse = mock(HttpServletResponse.class);\n\n    when(releaseService.findLatestActiveRelease(someAppId, someClusterName, defaultNamespaceName))\n        .thenReturn(null);\n\n    ApolloConfig result = configController.queryConfig(someAppId, someClusterName,\n        defaultNamespaceName, someDataCenter, someClientSideReleaseKey,\n        someClientIp, someRequest, someResponse);\n\n    assertNull(result);\n    verify(someResponse, times(1)).sendError(eq(HttpServletResponse.SC_NOT_FOUND), anyString());\n  }\n","date":"2016-08-23 10:27:07","endLine":182,"groupId":"988","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"testQueryConfigWithReleaseNotFound","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-apollo-10-0.7/blobInfo/CC_OUT/blobs/35/0bac0f7a4343a95c42e75de9df709a03ee4603.src","preCode":"  public void testQueryConfigWithReleaseNotFound() throws Exception {\n    String someClientSideReleaseKey = \"1\";\n    HttpServletResponse someResponse = mock(HttpServletResponse.class);\n\n    when(releaseService.findLatestActiveRelease(someAppId, someClusterName, defaultNamespaceName))\n        .thenReturn(null);\n\n    ApolloConfig result = configController.queryConfig(someAppId, someClusterName,\n        defaultNamespaceName, someDataCenter, someClientSideReleaseKey,\n        someClientIp, someResponse);\n\n    assertNull(result);\n    verify(someResponse, times(1)).sendError(eq(HttpServletResponse.SC_NOT_FOUND), anyString());\n  }\n","realPath":"apollo-configservice/src/test/java/com/ctrip/framework/apollo/configservice/controller/ConfigControllerTest.java","repoName":"apollo","snippetEndLine":0,"snippetStartLine":0,"startLine":169,"status":"M"},{"authorDate":"2016-08-23 10:27:07","commitOrder":4,"curCode":"  public void testQueryConfigWithApolloConfigNotModified() throws Exception {\n    String someClientSideReleaseKey = \"1\";\n    String someServerSideReleaseKey = someClientSideReleaseKey;\n    HttpServletResponse someResponse = mock(HttpServletResponse.class);\n\n    when(releaseService.findLatestActiveRelease(someAppId, someClusterName, defaultNamespaceName))\n        .thenReturn(someRelease);\n    when(someRelease.getReleaseKey()).thenReturn(someServerSideReleaseKey);\n\n    ApolloConfig\n        result =\n        configController.queryConfig(someAppId, someClusterName, defaultNamespaceName,\n            someDataCenter, String.valueOf(someClientSideReleaseKey), someClientIp, someRequest, someResponse);\n\n    assertNull(result);\n    verify(someResponse, times(1)).setStatus(HttpServletResponse.SC_NOT_MODIFIED);\n  }\n","date":"2016-08-23 10:27:07","endLine":201,"groupId":"1427","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"testQueryConfigWithApolloConfigNotModified","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-apollo-10-0.7/blobInfo/CC_OUT/blobs/35/0bac0f7a4343a95c42e75de9df709a03ee4603.src","preCode":"  public void testQueryConfigWithApolloConfigNotModified() throws Exception {\n    String someClientSideReleaseKey = \"1\";\n    String someServerSideReleaseKey = someClientSideReleaseKey;\n    HttpServletResponse someResponse = mock(HttpServletResponse.class);\n\n    when(releaseService.findLatestActiveRelease(someAppId, someClusterName, defaultNamespaceName))\n        .thenReturn(someRelease);\n    when(someRelease.getReleaseKey()).thenReturn(someServerSideReleaseKey);\n\n    ApolloConfig\n        result =\n        configController.queryConfig(someAppId, someClusterName, defaultNamespaceName,\n            someDataCenter, String.valueOf(someClientSideReleaseKey), someClientIp, someResponse);\n\n    assertNull(result);\n    verify(someResponse, times(1)).setStatus(HttpServletResponse.SC_NOT_MODIFIED);\n  }\n","realPath":"apollo-configservice/src/test/java/com/ctrip/framework/apollo/configservice/controller/ConfigControllerTest.java","repoName":"apollo","snippetEndLine":0,"snippetStartLine":0,"startLine":185,"status":"M"}],"commitId":"707ccf02021ee0c738a0c936db1bdabc615c2919","commitMessage":"@@@Merge branch 'master' into 'release'\n\nMaster2Release\n\n\n\nSee merge request !17","date":"2016-08-23 10:27:07","modifiedFileCount":"6","status":"M","submitter":"zl??(IT)"},{"authorTime":"2017-08-27 23:57:50","codes":[{"authorDate":"2017-08-27 23:57:50","commitOrder":5,"curCode":"  public void testQueryConfigWithReleaseNotFound() throws Exception {\n    String someClientSideReleaseKey = \"1\";\n    HttpServletResponse someResponse = mock(HttpServletResponse.class);\n\n    when(configService.loadConfig(someAppId, someClientIp, someAppId, someClusterName, defaultNamespaceName,\n        someDataCenter, someNotificationMessages)).thenReturn(null);\n\n    ApolloConfig result = configController.queryConfig(someAppId, someClusterName,\n        defaultNamespaceName, someDataCenter, someClientSideReleaseKey,\n        someClientIp, someMessagesAsString, someRequest, someResponse);\n\n    assertNull(result);\n    verify(someResponse, times(1)).sendError(eq(HttpServletResponse.SC_NOT_FOUND), anyString());\n  }\n","date":"2017-08-27 23:57:50","endLine":197,"groupId":"678","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"testQueryConfigWithReleaseNotFound","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-apollo-10-0.7/blobInfo/CC_OUT/blobs/97/a9b745b6db052aa1044083eb552b930a2d4c2d.src","preCode":"  public void testQueryConfigWithReleaseNotFound() throws Exception {\n    String someClientSideReleaseKey = \"1\";\n    HttpServletResponse someResponse = mock(HttpServletResponse.class);\n\n    when(releaseService.findLatestActiveRelease(someAppId, someClusterName, defaultNamespaceName))\n        .thenReturn(null);\n\n    ApolloConfig result = configController.queryConfig(someAppId, someClusterName,\n        defaultNamespaceName, someDataCenter, someClientSideReleaseKey,\n        someClientIp, someRequest, someResponse);\n\n    assertNull(result);\n    verify(someResponse, times(1)).sendError(eq(HttpServletResponse.SC_NOT_FOUND), anyString());\n  }\n","realPath":"apollo-configservice/src/test/java/com/ctrip/framework/apollo/configservice/controller/ConfigControllerTest.java","repoName":"apollo","snippetEndLine":0,"snippetStartLine":0,"startLine":184,"status":"M"},{"authorDate":"2017-08-27 23:57:50","commitOrder":5,"curCode":"  public void testQueryConfigWithApolloConfigNotModified() throws Exception {\n    String someClientSideReleaseKey = \"1\";\n    String someServerSideReleaseKey = someClientSideReleaseKey;\n    HttpServletResponse someResponse = mock(HttpServletResponse.class);\n\n    when(configService.loadConfig(someAppId, someClientIp, someAppId, someClusterName, defaultNamespaceName,\n        someDataCenter, someNotificationMessages)).thenReturn(someRelease);\n    when(someRelease.getReleaseKey()).thenReturn(someServerSideReleaseKey);\n\n    ApolloConfig result =\n        configController.queryConfig(someAppId, someClusterName, defaultNamespaceName, someDataCenter, String.valueOf\n            (someClientSideReleaseKey), someClientIp, someMessagesAsString, someRequest, someResponse);\n\n    assertNull(result);\n    verify(someResponse, times(1)).setStatus(HttpServletResponse.SC_NOT_MODIFIED);\n  }\n","date":"2017-08-27 23:57:50","endLine":215,"groupId":"678","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"testQueryConfigWithApolloConfigNotModified","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-apollo-10-0.7/blobInfo/CC_OUT/blobs/97/a9b745b6db052aa1044083eb552b930a2d4c2d.src","preCode":"  public void testQueryConfigWithApolloConfigNotModified() throws Exception {\n    String someClientSideReleaseKey = \"1\";\n    String someServerSideReleaseKey = someClientSideReleaseKey;\n    HttpServletResponse someResponse = mock(HttpServletResponse.class);\n\n    when(releaseService.findLatestActiveRelease(someAppId, someClusterName, defaultNamespaceName))\n        .thenReturn(someRelease);\n    when(someRelease.getReleaseKey()).thenReturn(someServerSideReleaseKey);\n\n    ApolloConfig\n        result =\n        configController.queryConfig(someAppId, someClusterName, defaultNamespaceName,\n            someDataCenter, String.valueOf(someClientSideReleaseKey), someClientIp, someRequest, someResponse);\n\n    assertNull(result);\n    verify(someResponse, times(1)).setStatus(HttpServletResponse.SC_NOT_MODIFIED);\n  }\n","realPath":"apollo-configservice/src/test/java/com/ctrip/framework/apollo/configservice/controller/ConfigControllerTest.java","repoName":"apollo","snippetEndLine":0,"snippetStartLine":0,"startLine":200,"status":"M"}],"commitId":"2a8348286501413e5768f984cbfe45f2b9dbd5f1","commitMessage":"@@@Merge pull request #719 from nobodyiam/configservice-cache-merge\n\nConfig service cache and namespace name normalization","date":"2017-08-27 23:57:50","modifiedFileCount":"32","status":"M","submitter":"??"},{"authorTime":"2020-09-11 20:01:31","codes":[{"authorDate":"2017-08-27 23:57:50","commitOrder":6,"curCode":"  public void testQueryConfigWithReleaseNotFound() throws Exception {\n    String someClientSideReleaseKey = \"1\";\n    HttpServletResponse someResponse = mock(HttpServletResponse.class);\n\n    when(configService.loadConfig(someAppId, someClientIp, someAppId, someClusterName, defaultNamespaceName,\n        someDataCenter, someNotificationMessages)).thenReturn(null);\n\n    ApolloConfig result = configController.queryConfig(someAppId, someClusterName,\n        defaultNamespaceName, someDataCenter, someClientSideReleaseKey,\n        someClientIp, someMessagesAsString, someRequest, someResponse);\n\n    assertNull(result);\n    verify(someResponse, times(1)).sendError(eq(HttpServletResponse.SC_NOT_FOUND), anyString());\n  }\n","date":"2017-08-27 23:57:50","endLine":197,"groupId":"10501","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"testQueryConfigWithReleaseNotFound","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-apollo-10-0.7/blobInfo/CC_OUT/blobs/97/a9b745b6db052aa1044083eb552b930a2d4c2d.src","preCode":"  public void testQueryConfigWithReleaseNotFound() throws Exception {\n    String someClientSideReleaseKey = \"1\";\n    HttpServletResponse someResponse = mock(HttpServletResponse.class);\n\n    when(configService.loadConfig(someAppId, someClientIp, someAppId, someClusterName, defaultNamespaceName,\n        someDataCenter, someNotificationMessages)).thenReturn(null);\n\n    ApolloConfig result = configController.queryConfig(someAppId, someClusterName,\n        defaultNamespaceName, someDataCenter, someClientSideReleaseKey,\n        someClientIp, someMessagesAsString, someRequest, someResponse);\n\n    assertNull(result);\n    verify(someResponse, times(1)).sendError(eq(HttpServletResponse.SC_NOT_FOUND), anyString());\n  }\n","realPath":"apollo-configservice/src/test/java/com/ctrip/framework/apollo/configservice/controller/ConfigControllerTest.java","repoName":"apollo","snippetEndLine":0,"snippetStartLine":0,"startLine":184,"status":"N"},{"authorDate":"2020-09-11 20:01:31","commitOrder":6,"curCode":"  public void testQueryConfigWithApolloConfigNotModified() throws Exception {\n    String someClientSideReleaseKey = \"1\";\n    String someServerSideReleaseKey = someClientSideReleaseKey;\n    HttpServletResponse someResponse = mock(HttpServletResponse.class);\n\n    when(configService.loadConfig(someAppId, someClientIp, someAppId, someClusterName, defaultNamespaceName,\n        someDataCenter, someNotificationMessages)).thenReturn(someRelease);\n    when(someRelease.getReleaseKey()).thenReturn(someServerSideReleaseKey);\n\n    ApolloConfig result =\n        configController.queryConfig(someAppId, someClusterName, defaultNamespaceName, someDataCenter,\n            someClientSideReleaseKey, someClientIp, someMessagesAsString, someRequest, someResponse);\n\n    assertNull(result);\n    verify(someResponse, times(1)).setStatus(HttpServletResponse.SC_NOT_MODIFIED);\n  }\n","date":"2020-09-11 20:01:31","endLine":201,"groupId":"10501","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"testQueryConfigWithApolloConfigNotModified","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-apollo-10-0.7/blobInfo/CC_OUT/blobs/42/e2d78b2e69f8314fb96e4402bf7a57c1c20e57.src","preCode":"  public void testQueryConfigWithApolloConfigNotModified() throws Exception {\n    String someClientSideReleaseKey = \"1\";\n    String someServerSideReleaseKey = someClientSideReleaseKey;\n    HttpServletResponse someResponse = mock(HttpServletResponse.class);\n\n    when(configService.loadConfig(someAppId, someClientIp, someAppId, someClusterName, defaultNamespaceName,\n        someDataCenter, someNotificationMessages)).thenReturn(someRelease);\n    when(someRelease.getReleaseKey()).thenReturn(someServerSideReleaseKey);\n\n    ApolloConfig result =\n        configController.queryConfig(someAppId, someClusterName, defaultNamespaceName, someDataCenter, String.valueOf\n            (someClientSideReleaseKey), someClientIp, someMessagesAsString, someRequest, someResponse);\n\n    assertNull(result);\n    verify(someResponse, times(1)).setStatus(HttpServletResponse.SC_NOT_MODIFIED);\n  }\n","realPath":"apollo-configservice/src/test/java/com/ctrip/framework/apollo/configservice/controller/ConfigControllerTest.java","repoName":"apollo","snippetEndLine":0,"snippetStartLine":0,"startLine":186,"status":"M"}],"commitId":"e321a8e7f315b2be45d38923e9bec3e3145332fe","commitMessage":"@@@Simplify code (#3290)\n\n","date":"2020-09-11 20:01:31","modifiedFileCount":"87","status":"M","submitter":"waters"}]
