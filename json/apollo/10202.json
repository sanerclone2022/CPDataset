[{"authorTime":"2016-05-19 17:58:23","codes":[{"authorDate":"2016-05-19 17:58:23","commitOrder":1,"curCode":"  public void testOnRepositoryChange() throws Exception {\n    Properties someProperties = new Properties();\n    String someKey = \"someKey\";\n    String someValue = \"someValue\";\n    String anotherKey = \"anotherKey\";\n    String anotherValue = \"anotherValue\";\n    someProperties.putAll(ImmutableMap.of(someKey, someValue, anotherKey, anotherValue));\n\n    Properties anotherProperties = new Properties();\n    String newKey = \"newKey\";\n    String newValue = \"newValue\";\n    String someValueNew = \"someValueNew\";\n    anotherProperties.putAll(ImmutableMap.of(someKey, someValueNew, newKey, newValue));\n\n    when(configRepository.getConfig()).thenReturn(someProperties);\n\n    ConfigChangeListener someListener = mock(ConfigChangeListener.class);\n\n    SimpleConfig config = new SimpleConfig(someNamespace, configRepository);\n    config.addChangeListener(someListener);\n\n    config.onRepositoryChange(someNamespace, anotherProperties);\n\n    ArgumentCaptor<ConfigChangeEvent> captor = ArgumentCaptor.forClass(ConfigChangeEvent.class);\n\n    verify(someListener, times(1)).onChange(captor.capture());\n\n    ConfigChangeEvent changeEvent = captor.getValue();\n\n    assertEquals(someNamespace, changeEvent.getNamespace());\n    assertEquals(3, changeEvent.changedKeys().size());\n\n    ConfigChange someKeyChange = changeEvent.getChange(someKey);\n    assertEquals(someValue, someKeyChange.getOldValue());\n    assertEquals(someValueNew, someKeyChange.getNewValue());\n    assertEquals(PropertyChangeType.MODIFIED, someKeyChange.getChangeType());\n\n    ConfigChange anotherKeyChange = changeEvent.getChange(anotherKey);\n    assertEquals(anotherValue, anotherKeyChange.getOldValue());\n    assertEquals(null, anotherKeyChange.getNewValue());\n    assertEquals(PropertyChangeType.DELETED, anotherKeyChange.getChangeType());\n\n    ConfigChange newKeyChange = changeEvent.getChange(newKey);\n    assertEquals(null, newKeyChange.getOldValue());\n    assertEquals(newValue, newKeyChange.getNewValue());\n    assertEquals(PropertyChangeType.ADDED, newKeyChange.getChangeType());\n  }\n","date":"2016-05-19 17:58:23","endLine":112,"groupId":"975","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testOnRepositoryChange","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-apollo-10-0.7/blobInfo/CC_OUT/blobs/14/05bda7214f5e614ae0a5cda24a5d1d39e6b76e.src","preCode":"  public void testOnRepositoryChange() throws Exception {\n    Properties someProperties = new Properties();\n    String someKey = \"someKey\";\n    String someValue = \"someValue\";\n    String anotherKey = \"anotherKey\";\n    String anotherValue = \"anotherValue\";\n    someProperties.putAll(ImmutableMap.of(someKey, someValue, anotherKey, anotherValue));\n\n    Properties anotherProperties = new Properties();\n    String newKey = \"newKey\";\n    String newValue = \"newValue\";\n    String someValueNew = \"someValueNew\";\n    anotherProperties.putAll(ImmutableMap.of(someKey, someValueNew, newKey, newValue));\n\n    when(configRepository.getConfig()).thenReturn(someProperties);\n\n    ConfigChangeListener someListener = mock(ConfigChangeListener.class);\n\n    SimpleConfig config = new SimpleConfig(someNamespace, configRepository);\n    config.addChangeListener(someListener);\n\n    config.onRepositoryChange(someNamespace, anotherProperties);\n\n    ArgumentCaptor<ConfigChangeEvent> captor = ArgumentCaptor.forClass(ConfigChangeEvent.class);\n\n    verify(someListener, times(1)).onChange(captor.capture());\n\n    ConfigChangeEvent changeEvent = captor.getValue();\n\n    assertEquals(someNamespace, changeEvent.getNamespace());\n    assertEquals(3, changeEvent.changedKeys().size());\n\n    ConfigChange someKeyChange = changeEvent.getChange(someKey);\n    assertEquals(someValue, someKeyChange.getOldValue());\n    assertEquals(someValueNew, someKeyChange.getNewValue());\n    assertEquals(PropertyChangeType.MODIFIED, someKeyChange.getChangeType());\n\n    ConfigChange anotherKeyChange = changeEvent.getChange(anotherKey);\n    assertEquals(anotherValue, anotherKeyChange.getOldValue());\n    assertEquals(null, anotherKeyChange.getNewValue());\n    assertEquals(PropertyChangeType.DELETED, anotherKeyChange.getChangeType());\n\n    ConfigChange newKeyChange = changeEvent.getChange(newKey);\n    assertEquals(null, newKeyChange.getOldValue());\n    assertEquals(newValue, newKeyChange.getNewValue());\n    assertEquals(PropertyChangeType.ADDED, newKeyChange.getChangeType());\n  }\n","realPath":"apollo-client/src/test/java/com/ctrip/framework/apollo/internals/SimpleConfigTest.java","repoName":"apollo","snippetEndLine":0,"snippetStartLine":0,"startLine":66,"status":"B"},{"authorDate":"2016-05-19 17:58:23","commitOrder":1,"curCode":"  public void testOnRepositoryChange() throws Exception {\n    String someKey = \"someKey\";\n    String someSystemPropertyValue = \"system-property-value\";\n\n    String anotherKey = \"anotherKey\";\n    String someLocalFileValue = \"local-file-value\";\n\n    String keyToBeDeleted = \"keyToBeDeleted\";\n    String keyToBeDeletedValue = \"keyToBeDeletedValue\";\n\n    String yetAnotherKey = \"yetAnotherKey\";\n    String yetAnotherValue = \"yetAnotherValue\";\n\n    String yetAnotherResourceValue = \"yetAnotherResourceValue\";\n    \r\n    System.setProperty(someKey, someSystemPropertyValue);\n\n    \r\n    someProperties = new Properties();\n    someProperties.putAll(ImmutableMap\n        .of(someKey, someLocalFileValue, anotherKey, someLocalFileValue, keyToBeDeleted,\n            keyToBeDeletedValue, yetAnotherKey, yetAnotherValue));\n    when(configRepository.getConfig()).thenReturn(someProperties);\n\n    \r\n    File resourceFile = new File(someResourceDir, someNamespace + \".properties\");\n    Files.append(yetAnotherKey + \"=\" + yetAnotherResourceValue, resourceFile, Charsets.UTF_8);\n\n    DefaultConfig defaultConfig =\n        new DefaultConfig(someNamespace, configRepository);\n\n    ConfigChangeListener someListener = mock(ConfigChangeListener.class);\n    defaultConfig.addChangeListener(someListener);\n\n    Properties newProperties = new Properties();\n    String someKeyNewValue = \"new-some-value\";\n    String anotherKeyNewValue = \"another-new-value\";\n    String newKey = \"newKey\";\n    String newValue = \"newValue\";\n    newProperties.putAll(ImmutableMap\n        .of(someKey, someKeyNewValue, anotherKey, anotherKeyNewValue, newKey, newValue));\n\n    final ArgumentCaptor<ConfigChangeEvent> captor =\n        ArgumentCaptor.forClass(ConfigChangeEvent.class);\n\n    defaultConfig.onRepositoryChange(someNamespace, newProperties);\n\n    verify(someListener, times(1)).onChange(captor.capture());\n\n    ConfigChangeEvent changeEvent = captor.getValue();\n\n    assertEquals(someNamespace, changeEvent.getNamespace());\n    assertEquals(4, changeEvent.changedKeys().size());\n\n    ConfigChange anotherKeyChange = changeEvent.getChange(anotherKey);\n    assertEquals(someLocalFileValue, anotherKeyChange.getOldValue());\n    assertEquals(anotherKeyNewValue, anotherKeyChange.getNewValue());\n    assertEquals(PropertyChangeType.MODIFIED, anotherKeyChange.getChangeType());\n\n    ConfigChange yetAnotherKeyChange = changeEvent.getChange(yetAnotherKey);\n    assertEquals(yetAnotherValue, yetAnotherKeyChange.getOldValue());\n    assertEquals(yetAnotherResourceValue, yetAnotherKeyChange.getNewValue());\n    assertEquals(PropertyChangeType.MODIFIED, yetAnotherKeyChange.getChangeType());\n\n    ConfigChange keyToBeDeletedChange = changeEvent.getChange(keyToBeDeleted);\n    assertEquals(keyToBeDeletedValue, keyToBeDeletedChange.getOldValue());\n    assertEquals(null, keyToBeDeletedChange.getNewValue());\n    assertEquals(PropertyChangeType.DELETED, keyToBeDeletedChange.getChangeType());\n\n    ConfigChange newKeyChange = changeEvent.getChange(newKey);\n    assertEquals(null, newKeyChange.getOldValue());\n    assertEquals(newValue, newKeyChange.getNewValue());\n    assertEquals(PropertyChangeType.ADDED, newKeyChange.getChangeType());\n  }\n","date":"2016-05-19 17:58:23","endLine":180,"groupId":"959","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testOnRepositoryChange","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-apollo-10-0.7/blobInfo/CC_OUT/blobs/78/9425299ca61bf2c3e5c37a744951983dd495f9.src","preCode":"  public void testOnRepositoryChange() throws Exception {\n    String someKey = \"someKey\";\n    String someSystemPropertyValue = \"system-property-value\";\n\n    String anotherKey = \"anotherKey\";\n    String someLocalFileValue = \"local-file-value\";\n\n    String keyToBeDeleted = \"keyToBeDeleted\";\n    String keyToBeDeletedValue = \"keyToBeDeletedValue\";\n\n    String yetAnotherKey = \"yetAnotherKey\";\n    String yetAnotherValue = \"yetAnotherValue\";\n\n    String yetAnotherResourceValue = \"yetAnotherResourceValue\";\n    \r\n    System.setProperty(someKey, someSystemPropertyValue);\n\n    \r\n    someProperties = new Properties();\n    someProperties.putAll(ImmutableMap\n        .of(someKey, someLocalFileValue, anotherKey, someLocalFileValue, keyToBeDeleted,\n            keyToBeDeletedValue, yetAnotherKey, yetAnotherValue));\n    when(configRepository.getConfig()).thenReturn(someProperties);\n\n    \r\n    File resourceFile = new File(someResourceDir, someNamespace + \".properties\");\n    Files.append(yetAnotherKey + \"=\" + yetAnotherResourceValue, resourceFile, Charsets.UTF_8);\n\n    DefaultConfig defaultConfig =\n        new DefaultConfig(someNamespace, configRepository);\n\n    ConfigChangeListener someListener = mock(ConfigChangeListener.class);\n    defaultConfig.addChangeListener(someListener);\n\n    Properties newProperties = new Properties();\n    String someKeyNewValue = \"new-some-value\";\n    String anotherKeyNewValue = \"another-new-value\";\n    String newKey = \"newKey\";\n    String newValue = \"newValue\";\n    newProperties.putAll(ImmutableMap\n        .of(someKey, someKeyNewValue, anotherKey, anotherKeyNewValue, newKey, newValue));\n\n    final ArgumentCaptor<ConfigChangeEvent> captor =\n        ArgumentCaptor.forClass(ConfigChangeEvent.class);\n\n    defaultConfig.onRepositoryChange(someNamespace, newProperties);\n\n    verify(someListener, times(1)).onChange(captor.capture());\n\n    ConfigChangeEvent changeEvent = captor.getValue();\n\n    assertEquals(someNamespace, changeEvent.getNamespace());\n    assertEquals(4, changeEvent.changedKeys().size());\n\n    ConfigChange anotherKeyChange = changeEvent.getChange(anotherKey);\n    assertEquals(someLocalFileValue, anotherKeyChange.getOldValue());\n    assertEquals(anotherKeyNewValue, anotherKeyChange.getNewValue());\n    assertEquals(PropertyChangeType.MODIFIED, anotherKeyChange.getChangeType());\n\n    ConfigChange yetAnotherKeyChange = changeEvent.getChange(yetAnotherKey);\n    assertEquals(yetAnotherValue, yetAnotherKeyChange.getOldValue());\n    assertEquals(yetAnotherResourceValue, yetAnotherKeyChange.getNewValue());\n    assertEquals(PropertyChangeType.MODIFIED, yetAnotherKeyChange.getChangeType());\n\n    ConfigChange keyToBeDeletedChange = changeEvent.getChange(keyToBeDeleted);\n    assertEquals(keyToBeDeletedValue, keyToBeDeletedChange.getOldValue());\n    assertEquals(null, keyToBeDeletedChange.getNewValue());\n    assertEquals(PropertyChangeType.DELETED, keyToBeDeletedChange.getChangeType());\n\n    ConfigChange newKeyChange = changeEvent.getChange(newKey);\n    assertEquals(null, newKeyChange.getOldValue());\n    assertEquals(newValue, newKeyChange.getNewValue());\n    assertEquals(PropertyChangeType.ADDED, newKeyChange.getChangeType());\n  }\n","realPath":"apollo-client/src/test/java/com/ctrip/framework/apollo/internals/DefaultConfigTest.java","repoName":"apollo","snippetEndLine":0,"snippetStartLine":0,"startLine":107,"status":"B"}],"commitId":"0b3ace803cac96eb293336fd429738c5b92f845d","commitMessage":"@@@Merge pull request #209 from lepdou/rename\n\nRename","date":"2016-05-19 17:58:23","modifiedFileCount":"1","status":"B","submitter":"Jason Song"},{"authorTime":"2016-06-07 11:32:12","codes":[{"authorDate":"2016-06-07 11:32:12","commitOrder":2,"curCode":"  public void testOnRepositoryChange() throws Exception {\n    Properties someProperties = new Properties();\n    String someKey = \"someKey\";\n    String someValue = \"someValue\";\n    String anotherKey = \"anotherKey\";\n    String anotherValue = \"anotherValue\";\n    someProperties.putAll(ImmutableMap.of(someKey, someValue, anotherKey, anotherValue));\n\n    Properties anotherProperties = new Properties();\n    String newKey = \"newKey\";\n    String newValue = \"newValue\";\n    String someValueNew = \"someValueNew\";\n    anotherProperties.putAll(ImmutableMap.of(someKey, someValueNew, newKey, newValue));\n\n    when(configRepository.getConfig()).thenReturn(someProperties);\n\n    final SettableFuture<ConfigChangeEvent> configChangeFuture = SettableFuture.create();\n    ConfigChangeListener someListener = new ConfigChangeListener() {\n      @Override\n      public void onChange(ConfigChangeEvent changeEvent) {\n        configChangeFuture.set(changeEvent);\n      }\n    };\n\n    SimpleConfig config = new SimpleConfig(someNamespace, configRepository);\n    config.addChangeListener(someListener);\n\n    config.onRepositoryChange(someNamespace, anotherProperties);\n\n    ConfigChangeEvent changeEvent = configChangeFuture.get(500, TimeUnit.MILLISECONDS);\n\n    assertEquals(someNamespace, changeEvent.getNamespace());\n    assertEquals(3, changeEvent.changedKeys().size());\n\n    ConfigChange someKeyChange = changeEvent.getChange(someKey);\n    assertEquals(someValue, someKeyChange.getOldValue());\n    assertEquals(someValueNew, someKeyChange.getNewValue());\n    assertEquals(PropertyChangeType.MODIFIED, someKeyChange.getChangeType());\n\n    ConfigChange anotherKeyChange = changeEvent.getChange(anotherKey);\n    assertEquals(anotherValue, anotherKeyChange.getOldValue());\n    assertEquals(null, anotherKeyChange.getNewValue());\n    assertEquals(PropertyChangeType.DELETED, anotherKeyChange.getChangeType());\n\n    ConfigChange newKeyChange = changeEvent.getChange(newKey);\n    assertEquals(null, newKeyChange.getOldValue());\n    assertEquals(newValue, newKeyChange.getNewValue());\n    assertEquals(PropertyChangeType.ADDED, newKeyChange.getChangeType());\n  }\n","date":"2016-06-07 11:32:12","endLine":116,"groupId":"169","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testOnRepositoryChange","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-apollo-10-0.7/blobInfo/CC_OUT/blobs/e1/90877352da0946e5ee3834d4682640cae30fe6.src","preCode":"  public void testOnRepositoryChange() throws Exception {\n    Properties someProperties = new Properties();\n    String someKey = \"someKey\";\n    String someValue = \"someValue\";\n    String anotherKey = \"anotherKey\";\n    String anotherValue = \"anotherValue\";\n    someProperties.putAll(ImmutableMap.of(someKey, someValue, anotherKey, anotherValue));\n\n    Properties anotherProperties = new Properties();\n    String newKey = \"newKey\";\n    String newValue = \"newValue\";\n    String someValueNew = \"someValueNew\";\n    anotherProperties.putAll(ImmutableMap.of(someKey, someValueNew, newKey, newValue));\n\n    when(configRepository.getConfig()).thenReturn(someProperties);\n\n    ConfigChangeListener someListener = mock(ConfigChangeListener.class);\n\n    SimpleConfig config = new SimpleConfig(someNamespace, configRepository);\n    config.addChangeListener(someListener);\n\n    config.onRepositoryChange(someNamespace, anotherProperties);\n\n    ArgumentCaptor<ConfigChangeEvent> captor = ArgumentCaptor.forClass(ConfigChangeEvent.class);\n\n    verify(someListener, times(1)).onChange(captor.capture());\n\n    ConfigChangeEvent changeEvent = captor.getValue();\n\n    assertEquals(someNamespace, changeEvent.getNamespace());\n    assertEquals(3, changeEvent.changedKeys().size());\n\n    ConfigChange someKeyChange = changeEvent.getChange(someKey);\n    assertEquals(someValue, someKeyChange.getOldValue());\n    assertEquals(someValueNew, someKeyChange.getNewValue());\n    assertEquals(PropertyChangeType.MODIFIED, someKeyChange.getChangeType());\n\n    ConfigChange anotherKeyChange = changeEvent.getChange(anotherKey);\n    assertEquals(anotherValue, anotherKeyChange.getOldValue());\n    assertEquals(null, anotherKeyChange.getNewValue());\n    assertEquals(PropertyChangeType.DELETED, anotherKeyChange.getChangeType());\n\n    ConfigChange newKeyChange = changeEvent.getChange(newKey);\n    assertEquals(null, newKeyChange.getOldValue());\n    assertEquals(newValue, newKeyChange.getNewValue());\n    assertEquals(PropertyChangeType.ADDED, newKeyChange.getChangeType());\n  }\n","realPath":"apollo-client/src/test/java/com/ctrip/framework/apollo/internals/SimpleConfigTest.java","repoName":"apollo","snippetEndLine":0,"snippetStartLine":0,"startLine":68,"status":"M"},{"authorDate":"2016-06-07 11:32:12","commitOrder":2,"curCode":"  public void testOnRepositoryChange() throws Exception {\n    String someKey = \"someKey\";\n    String someSystemPropertyValue = \"system-property-value\";\n\n    String anotherKey = \"anotherKey\";\n    String someLocalFileValue = \"local-file-value\";\n\n    String keyToBeDeleted = \"keyToBeDeleted\";\n    String keyToBeDeletedValue = \"keyToBeDeletedValue\";\n\n    String yetAnotherKey = \"yetAnotherKey\";\n    String yetAnotherValue = \"yetAnotherValue\";\n\n    String yetAnotherResourceValue = \"yetAnotherResourceValue\";\n    \r\n    System.setProperty(someKey, someSystemPropertyValue);\n\n    \r\n    someProperties = new Properties();\n    someProperties.putAll(ImmutableMap\n        .of(someKey, someLocalFileValue, anotherKey, someLocalFileValue, keyToBeDeleted,\n            keyToBeDeletedValue, yetAnotherKey, yetAnotherValue));\n    when(configRepository.getConfig()).thenReturn(someProperties);\n\n    \r\n    File resourceFile = new File(someResourceDir, someNamespace + \".properties\");\n    Files.append(yetAnotherKey + \"=\" + yetAnotherResourceValue, resourceFile, Charsets.UTF_8);\n\n    DefaultConfig defaultConfig =\n        new DefaultConfig(someNamespace, configRepository);\n\n    final SettableFuture<ConfigChangeEvent> configChangeFuture = SettableFuture.create();\n    ConfigChangeListener someListener = new ConfigChangeListener() {\n      @Override\n      public void onChange(ConfigChangeEvent changeEvent) {\n        configChangeFuture.set(changeEvent);\n      }\n    };\n\n    defaultConfig.addChangeListener(someListener);\n\n    Properties newProperties = new Properties();\n    String someKeyNewValue = \"new-some-value\";\n    String anotherKeyNewValue = \"another-new-value\";\n    String newKey = \"newKey\";\n    String newValue = \"newValue\";\n    newProperties.putAll(ImmutableMap\n        .of(someKey, someKeyNewValue, anotherKey, anotherKeyNewValue, newKey, newValue));\n\n    defaultConfig.onRepositoryChange(someNamespace, newProperties);\n\n    ConfigChangeEvent changeEvent = configChangeFuture.get(500, TimeUnit.MILLISECONDS);\n\n    assertEquals(someNamespace, changeEvent.getNamespace());\n    assertEquals(4, changeEvent.changedKeys().size());\n\n    ConfigChange anotherKeyChange = changeEvent.getChange(anotherKey);\n    assertEquals(someLocalFileValue, anotherKeyChange.getOldValue());\n    assertEquals(anotherKeyNewValue, anotherKeyChange.getNewValue());\n    assertEquals(PropertyChangeType.MODIFIED, anotherKeyChange.getChangeType());\n\n    ConfigChange yetAnotherKeyChange = changeEvent.getChange(yetAnotherKey);\n    assertEquals(yetAnotherValue, yetAnotherKeyChange.getOldValue());\n    assertEquals(yetAnotherResourceValue, yetAnotherKeyChange.getNewValue());\n    assertEquals(PropertyChangeType.MODIFIED, yetAnotherKeyChange.getChangeType());\n\n    ConfigChange keyToBeDeletedChange = changeEvent.getChange(keyToBeDeleted);\n    assertEquals(keyToBeDeletedValue, keyToBeDeletedChange.getOldValue());\n    assertEquals(null, keyToBeDeletedChange.getNewValue());\n    assertEquals(PropertyChangeType.DELETED, keyToBeDeletedChange.getChangeType());\n\n    ConfigChange newKeyChange = changeEvent.getChange(newKey);\n    assertEquals(null, newKeyChange.getOldValue());\n    assertEquals(newValue, newKeyChange.getNewValue());\n    assertEquals(PropertyChangeType.ADDED, newKeyChange.getChangeType());\n  }\n","date":"2016-06-07 11:32:12","endLine":184,"groupId":"0","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testOnRepositoryChange","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-apollo-10-0.7/blobInfo/CC_OUT/blobs/eb/f08e20216933925cca573198f2c8da9193ba3f.src","preCode":"  public void testOnRepositoryChange() throws Exception {\n    String someKey = \"someKey\";\n    String someSystemPropertyValue = \"system-property-value\";\n\n    String anotherKey = \"anotherKey\";\n    String someLocalFileValue = \"local-file-value\";\n\n    String keyToBeDeleted = \"keyToBeDeleted\";\n    String keyToBeDeletedValue = \"keyToBeDeletedValue\";\n\n    String yetAnotherKey = \"yetAnotherKey\";\n    String yetAnotherValue = \"yetAnotherValue\";\n\n    String yetAnotherResourceValue = \"yetAnotherResourceValue\";\n    \r\n    System.setProperty(someKey, someSystemPropertyValue);\n\n    \r\n    someProperties = new Properties();\n    someProperties.putAll(ImmutableMap\n        .of(someKey, someLocalFileValue, anotherKey, someLocalFileValue, keyToBeDeleted,\n            keyToBeDeletedValue, yetAnotherKey, yetAnotherValue));\n    when(configRepository.getConfig()).thenReturn(someProperties);\n\n    \r\n    File resourceFile = new File(someResourceDir, someNamespace + \".properties\");\n    Files.append(yetAnotherKey + \"=\" + yetAnotherResourceValue, resourceFile, Charsets.UTF_8);\n\n    DefaultConfig defaultConfig =\n        new DefaultConfig(someNamespace, configRepository);\n\n    ConfigChangeListener someListener = mock(ConfigChangeListener.class);\n    defaultConfig.addChangeListener(someListener);\n\n    Properties newProperties = new Properties();\n    String someKeyNewValue = \"new-some-value\";\n    String anotherKeyNewValue = \"another-new-value\";\n    String newKey = \"newKey\";\n    String newValue = \"newValue\";\n    newProperties.putAll(ImmutableMap\n        .of(someKey, someKeyNewValue, anotherKey, anotherKeyNewValue, newKey, newValue));\n\n    final ArgumentCaptor<ConfigChangeEvent> captor =\n        ArgumentCaptor.forClass(ConfigChangeEvent.class);\n\n    defaultConfig.onRepositoryChange(someNamespace, newProperties);\n\n    verify(someListener, times(1)).onChange(captor.capture());\n\n    ConfigChangeEvent changeEvent = captor.getValue();\n\n    assertEquals(someNamespace, changeEvent.getNamespace());\n    assertEquals(4, changeEvent.changedKeys().size());\n\n    ConfigChange anotherKeyChange = changeEvent.getChange(anotherKey);\n    assertEquals(someLocalFileValue, anotherKeyChange.getOldValue());\n    assertEquals(anotherKeyNewValue, anotherKeyChange.getNewValue());\n    assertEquals(PropertyChangeType.MODIFIED, anotherKeyChange.getChangeType());\n\n    ConfigChange yetAnotherKeyChange = changeEvent.getChange(yetAnotherKey);\n    assertEquals(yetAnotherValue, yetAnotherKeyChange.getOldValue());\n    assertEquals(yetAnotherResourceValue, yetAnotherKeyChange.getNewValue());\n    assertEquals(PropertyChangeType.MODIFIED, yetAnotherKeyChange.getChangeType());\n\n    ConfigChange keyToBeDeletedChange = changeEvent.getChange(keyToBeDeleted);\n    assertEquals(keyToBeDeletedValue, keyToBeDeletedChange.getOldValue());\n    assertEquals(null, keyToBeDeletedChange.getNewValue());\n    assertEquals(PropertyChangeType.DELETED, keyToBeDeletedChange.getChangeType());\n\n    ConfigChange newKeyChange = changeEvent.getChange(newKey);\n    assertEquals(null, newKeyChange.getOldValue());\n    assertEquals(newValue, newKeyChange.getNewValue());\n    assertEquals(PropertyChangeType.ADDED, newKeyChange.getChangeType());\n  }\n","realPath":"apollo-client/src/test/java/com/ctrip/framework/apollo/internals/DefaultConfigTest.java","repoName":"apollo","snippetEndLine":0,"snippetStartLine":0,"startLine":109,"status":"M"}],"commitId":"4f7ecce202fbf2750f408f02a438761c18a39b2c","commitMessage":"@@@Merge pull request #251 from nobodyiam/client-refactor-merge\n\nrefactor according to code review comments","date":"2016-06-07 11:32:12","modifiedFileCount":"37","status":"M","submitter":"lepdou"},{"authorTime":"2016-10-12 16:40:30","codes":[{"authorDate":"2016-06-07 11:32:12","commitOrder":3,"curCode":"  public void testOnRepositoryChange() throws Exception {\n    Properties someProperties = new Properties();\n    String someKey = \"someKey\";\n    String someValue = \"someValue\";\n    String anotherKey = \"anotherKey\";\n    String anotherValue = \"anotherValue\";\n    someProperties.putAll(ImmutableMap.of(someKey, someValue, anotherKey, anotherValue));\n\n    Properties anotherProperties = new Properties();\n    String newKey = \"newKey\";\n    String newValue = \"newValue\";\n    String someValueNew = \"someValueNew\";\n    anotherProperties.putAll(ImmutableMap.of(someKey, someValueNew, newKey, newValue));\n\n    when(configRepository.getConfig()).thenReturn(someProperties);\n\n    final SettableFuture<ConfigChangeEvent> configChangeFuture = SettableFuture.create();\n    ConfigChangeListener someListener = new ConfigChangeListener() {\n      @Override\n      public void onChange(ConfigChangeEvent changeEvent) {\n        configChangeFuture.set(changeEvent);\n      }\n    };\n\n    SimpleConfig config = new SimpleConfig(someNamespace, configRepository);\n    config.addChangeListener(someListener);\n\n    config.onRepositoryChange(someNamespace, anotherProperties);\n\n    ConfigChangeEvent changeEvent = configChangeFuture.get(500, TimeUnit.MILLISECONDS);\n\n    assertEquals(someNamespace, changeEvent.getNamespace());\n    assertEquals(3, changeEvent.changedKeys().size());\n\n    ConfigChange someKeyChange = changeEvent.getChange(someKey);\n    assertEquals(someValue, someKeyChange.getOldValue());\n    assertEquals(someValueNew, someKeyChange.getNewValue());\n    assertEquals(PropertyChangeType.MODIFIED, someKeyChange.getChangeType());\n\n    ConfigChange anotherKeyChange = changeEvent.getChange(anotherKey);\n    assertEquals(anotherValue, anotherKeyChange.getOldValue());\n    assertEquals(null, anotherKeyChange.getNewValue());\n    assertEquals(PropertyChangeType.DELETED, anotherKeyChange.getChangeType());\n\n    ConfigChange newKeyChange = changeEvent.getChange(newKey);\n    assertEquals(null, newKeyChange.getOldValue());\n    assertEquals(newValue, newKeyChange.getNewValue());\n    assertEquals(PropertyChangeType.ADDED, newKeyChange.getChangeType());\n  }\n","date":"2016-06-07 11:32:12","endLine":116,"groupId":"169","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testOnRepositoryChange","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-apollo-10-0.7/blobInfo/CC_OUT/blobs/e1/90877352da0946e5ee3834d4682640cae30fe6.src","preCode":"  public void testOnRepositoryChange() throws Exception {\n    Properties someProperties = new Properties();\n    String someKey = \"someKey\";\n    String someValue = \"someValue\";\n    String anotherKey = \"anotherKey\";\n    String anotherValue = \"anotherValue\";\n    someProperties.putAll(ImmutableMap.of(someKey, someValue, anotherKey, anotherValue));\n\n    Properties anotherProperties = new Properties();\n    String newKey = \"newKey\";\n    String newValue = \"newValue\";\n    String someValueNew = \"someValueNew\";\n    anotherProperties.putAll(ImmutableMap.of(someKey, someValueNew, newKey, newValue));\n\n    when(configRepository.getConfig()).thenReturn(someProperties);\n\n    final SettableFuture<ConfigChangeEvent> configChangeFuture = SettableFuture.create();\n    ConfigChangeListener someListener = new ConfigChangeListener() {\n      @Override\n      public void onChange(ConfigChangeEvent changeEvent) {\n        configChangeFuture.set(changeEvent);\n      }\n    };\n\n    SimpleConfig config = new SimpleConfig(someNamespace, configRepository);\n    config.addChangeListener(someListener);\n\n    config.onRepositoryChange(someNamespace, anotherProperties);\n\n    ConfigChangeEvent changeEvent = configChangeFuture.get(500, TimeUnit.MILLISECONDS);\n\n    assertEquals(someNamespace, changeEvent.getNamespace());\n    assertEquals(3, changeEvent.changedKeys().size());\n\n    ConfigChange someKeyChange = changeEvent.getChange(someKey);\n    assertEquals(someValue, someKeyChange.getOldValue());\n    assertEquals(someValueNew, someKeyChange.getNewValue());\n    assertEquals(PropertyChangeType.MODIFIED, someKeyChange.getChangeType());\n\n    ConfigChange anotherKeyChange = changeEvent.getChange(anotherKey);\n    assertEquals(anotherValue, anotherKeyChange.getOldValue());\n    assertEquals(null, anotherKeyChange.getNewValue());\n    assertEquals(PropertyChangeType.DELETED, anotherKeyChange.getChangeType());\n\n    ConfigChange newKeyChange = changeEvent.getChange(newKey);\n    assertEquals(null, newKeyChange.getOldValue());\n    assertEquals(newValue, newKeyChange.getNewValue());\n    assertEquals(PropertyChangeType.ADDED, newKeyChange.getChangeType());\n  }\n","realPath":"apollo-client/src/test/java/com/ctrip/framework/apollo/internals/SimpleConfigTest.java","repoName":"apollo","snippetEndLine":0,"snippetStartLine":0,"startLine":68,"status":"N"},{"authorDate":"2016-10-12 16:40:30","commitOrder":3,"curCode":"  public void testOnRepositoryChange() throws Exception {\n    String someKey = \"someKey\";\n    String someSystemPropertyValue = \"system-property-value\";\n\n    String anotherKey = \"anotherKey\";\n    String someLocalFileValue = \"local-file-value\";\n\n    String keyToBeDeleted = \"keyToBeDeleted\";\n    String keyToBeDeletedValue = \"keyToBeDeletedValue\";\n\n    String yetAnotherKey = \"yetAnotherKey\";\n    String yetAnotherValue = \"yetAnotherValue\";\n\n    String yetAnotherResourceValue = \"yetAnotherResourceValue\";\n    \r\n    System.setProperty(someKey, someSystemPropertyValue);\n\n    \r\n    someProperties = new Properties();\n    someProperties.putAll(ImmutableMap\n        .of(someKey, someLocalFileValue, anotherKey, someLocalFileValue, keyToBeDeleted,\n            keyToBeDeletedValue, yetAnotherKey, yetAnotherValue));\n    when(configRepository.getConfig()).thenReturn(someProperties);\n\n    \r\n    File resourceFile = new File(someResourceDir, someNamespace + \".properties\");\n    Files.append(yetAnotherKey + \"=\" + yetAnotherResourceValue, resourceFile, Charsets.UTF_8);\n\n    DefaultConfig defaultConfig =\n        new DefaultConfig(someNamespace, configRepository);\n\n    final SettableFuture<ConfigChangeEvent> configChangeFuture = SettableFuture.create();\n    ConfigChangeListener someListener = new ConfigChangeListener() {\n      @Override\n      public void onChange(ConfigChangeEvent changeEvent) {\n        configChangeFuture.set(changeEvent);\n      }\n    };\n\n    defaultConfig.addChangeListener(someListener);\n\n    Properties newProperties = new Properties();\n    String someKeyNewValue = \"new-some-value\";\n    String anotherKeyNewValue = \"another-new-value\";\n    String newKey = \"newKey\";\n    String newValue = \"newValue\";\n    newProperties.putAll(ImmutableMap\n        .of(someKey, someKeyNewValue, anotherKey, anotherKeyNewValue, newKey, newValue));\n\n    defaultConfig.onRepositoryChange(someNamespace, newProperties);\n\n    ConfigChangeEvent changeEvent = configChangeFuture.get(500, TimeUnit.MILLISECONDS);\n\n    \r\n    System.clearProperty(someKey);\n\n    assertEquals(someNamespace, changeEvent.getNamespace());\n    assertEquals(4, changeEvent.changedKeys().size());\n\n    ConfigChange anotherKeyChange = changeEvent.getChange(anotherKey);\n    assertEquals(someLocalFileValue, anotherKeyChange.getOldValue());\n    assertEquals(anotherKeyNewValue, anotherKeyChange.getNewValue());\n    assertEquals(PropertyChangeType.MODIFIED, anotherKeyChange.getChangeType());\n\n    ConfigChange yetAnotherKeyChange = changeEvent.getChange(yetAnotherKey);\n    assertEquals(yetAnotherValue, yetAnotherKeyChange.getOldValue());\n    assertEquals(yetAnotherResourceValue, yetAnotherKeyChange.getNewValue());\n    assertEquals(PropertyChangeType.MODIFIED, yetAnotherKeyChange.getChangeType());\n\n    ConfigChange keyToBeDeletedChange = changeEvent.getChange(keyToBeDeleted);\n    assertEquals(keyToBeDeletedValue, keyToBeDeletedChange.getOldValue());\n    assertEquals(null, keyToBeDeletedChange.getNewValue());\n    assertEquals(PropertyChangeType.DELETED, keyToBeDeletedChange.getChangeType());\n\n    ConfigChange newKeyChange = changeEvent.getChange(newKey);\n    assertEquals(null, newKeyChange.getOldValue());\n    assertEquals(newValue, newKeyChange.getNewValue());\n    assertEquals(PropertyChangeType.ADDED, newKeyChange.getChangeType());\n  }\n","date":"2016-10-12 16:40:30","endLine":461,"groupId":"365","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testOnRepositoryChange","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-apollo-10-0.7/blobInfo/CC_OUT/blobs/f4/d22e6d48583969a343f292463dbf43c3f52e4d.src","preCode":"  public void testOnRepositoryChange() throws Exception {\n    String someKey = \"someKey\";\n    String someSystemPropertyValue = \"system-property-value\";\n\n    String anotherKey = \"anotherKey\";\n    String someLocalFileValue = \"local-file-value\";\n\n    String keyToBeDeleted = \"keyToBeDeleted\";\n    String keyToBeDeletedValue = \"keyToBeDeletedValue\";\n\n    String yetAnotherKey = \"yetAnotherKey\";\n    String yetAnotherValue = \"yetAnotherValue\";\n\n    String yetAnotherResourceValue = \"yetAnotherResourceValue\";\n    \r\n    System.setProperty(someKey, someSystemPropertyValue);\n\n    \r\n    someProperties = new Properties();\n    someProperties.putAll(ImmutableMap\n        .of(someKey, someLocalFileValue, anotherKey, someLocalFileValue, keyToBeDeleted,\n            keyToBeDeletedValue, yetAnotherKey, yetAnotherValue));\n    when(configRepository.getConfig()).thenReturn(someProperties);\n\n    \r\n    File resourceFile = new File(someResourceDir, someNamespace + \".properties\");\n    Files.append(yetAnotherKey + \"=\" + yetAnotherResourceValue, resourceFile, Charsets.UTF_8);\n\n    DefaultConfig defaultConfig =\n        new DefaultConfig(someNamespace, configRepository);\n\n    final SettableFuture<ConfigChangeEvent> configChangeFuture = SettableFuture.create();\n    ConfigChangeListener someListener = new ConfigChangeListener() {\n      @Override\n      public void onChange(ConfigChangeEvent changeEvent) {\n        configChangeFuture.set(changeEvent);\n      }\n    };\n\n    defaultConfig.addChangeListener(someListener);\n\n    Properties newProperties = new Properties();\n    String someKeyNewValue = \"new-some-value\";\n    String anotherKeyNewValue = \"another-new-value\";\n    String newKey = \"newKey\";\n    String newValue = \"newValue\";\n    newProperties.putAll(ImmutableMap\n        .of(someKey, someKeyNewValue, anotherKey, anotherKeyNewValue, newKey, newValue));\n\n    defaultConfig.onRepositoryChange(someNamespace, newProperties);\n\n    ConfigChangeEvent changeEvent = configChangeFuture.get(500, TimeUnit.MILLISECONDS);\n\n    assertEquals(someNamespace, changeEvent.getNamespace());\n    assertEquals(4, changeEvent.changedKeys().size());\n\n    ConfigChange anotherKeyChange = changeEvent.getChange(anotherKey);\n    assertEquals(someLocalFileValue, anotherKeyChange.getOldValue());\n    assertEquals(anotherKeyNewValue, anotherKeyChange.getNewValue());\n    assertEquals(PropertyChangeType.MODIFIED, anotherKeyChange.getChangeType());\n\n    ConfigChange yetAnotherKeyChange = changeEvent.getChange(yetAnotherKey);\n    assertEquals(yetAnotherValue, yetAnotherKeyChange.getOldValue());\n    assertEquals(yetAnotherResourceValue, yetAnotherKeyChange.getNewValue());\n    assertEquals(PropertyChangeType.MODIFIED, yetAnotherKeyChange.getChangeType());\n\n    ConfigChange keyToBeDeletedChange = changeEvent.getChange(keyToBeDeleted);\n    assertEquals(keyToBeDeletedValue, keyToBeDeletedChange.getOldValue());\n    assertEquals(null, keyToBeDeletedChange.getNewValue());\n    assertEquals(PropertyChangeType.DELETED, keyToBeDeletedChange.getChangeType());\n\n    ConfigChange newKeyChange = changeEvent.getChange(newKey);\n    assertEquals(null, newKeyChange.getOldValue());\n    assertEquals(newValue, newKeyChange.getNewValue());\n    assertEquals(PropertyChangeType.ADDED, newKeyChange.getChangeType());\n  }\n","realPath":"apollo-client/src/test/java/com/ctrip/framework/apollo/internals/DefaultConfigTest.java","repoName":"apollo","snippetEndLine":0,"snippetStartLine":0,"startLine":383,"status":"M"}],"commitId":"7fbe7a5d8e5db29b7778507d97d1af1d437b3002","commitMessage":"@@@Merge branch 'master' into 'release'\n\nMaster\n\n\n\nSee merge request !26","date":"2016-10-12 16:40:30","modifiedFileCount":"17","status":"M","submitter":"zl??(IT)"},{"authorTime":"2018-09-16 11:00:16","codes":[{"authorDate":"2018-09-16 11:00:16","commitOrder":4,"curCode":"  public void testOnRepositoryChange() throws Exception {\n    Properties someProperties = new Properties();\n    String someKey = \"someKey\";\n    String someValue = \"someValue\";\n    String anotherKey = \"anotherKey\";\n    String anotherValue = \"anotherValue\";\n    someProperties.putAll(ImmutableMap.of(someKey, someValue, anotherKey, anotherValue));\n\n    Properties anotherProperties = new Properties();\n    String newKey = \"newKey\";\n    String newValue = \"newValue\";\n    String someValueNew = \"someValueNew\";\n    anotherProperties.putAll(ImmutableMap.of(someKey, someValueNew, newKey, newValue));\n\n    someSourceType = ConfigSourceType.LOCAL;\n\n    when(configRepository.getConfig()).thenReturn(someProperties);\n    when(configRepository.getSourceType()).thenReturn(someSourceType);\n\n    final SettableFuture<ConfigChangeEvent> configChangeFuture = SettableFuture.create();\n    ConfigChangeListener someListener = new ConfigChangeListener() {\n      @Override\n      public void onChange(ConfigChangeEvent changeEvent) {\n        configChangeFuture.set(changeEvent);\n      }\n    };\n\n    SimpleConfig config = new SimpleConfig(someNamespace, configRepository);\n\n    assertEquals(someSourceType, config.getSourceType());\n\n    config.addChangeListener(someListener);\n\n    ConfigSourceType anotherSourceType = ConfigSourceType.REMOTE;\n    when(configRepository.getSourceType()).thenReturn(anotherSourceType);\n\n    config.onRepositoryChange(someNamespace, anotherProperties);\n\n    ConfigChangeEvent changeEvent = configChangeFuture.get(500, TimeUnit.MILLISECONDS);\n\n    assertEquals(someNamespace, changeEvent.getNamespace());\n    assertEquals(3, changeEvent.changedKeys().size());\n\n    ConfigChange someKeyChange = changeEvent.getChange(someKey);\n    assertEquals(someValue, someKeyChange.getOldValue());\n    assertEquals(someValueNew, someKeyChange.getNewValue());\n    assertEquals(PropertyChangeType.MODIFIED, someKeyChange.getChangeType());\n\n    ConfigChange anotherKeyChange = changeEvent.getChange(anotherKey);\n    assertEquals(anotherValue, anotherKeyChange.getOldValue());\n    assertEquals(null, anotherKeyChange.getNewValue());\n    assertEquals(PropertyChangeType.DELETED, anotherKeyChange.getChangeType());\n\n    ConfigChange newKeyChange = changeEvent.getChange(newKey);\n    assertEquals(null, newKeyChange.getOldValue());\n    assertEquals(newValue, newKeyChange.getNewValue());\n    assertEquals(PropertyChangeType.ADDED, newKeyChange.getChangeType());\n\n    assertEquals(anotherSourceType, config.getSourceType());\n  }\n","date":"2018-09-16 11:00:16","endLine":131,"groupId":"10202","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"testOnRepositoryChange","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-apollo-10-0.7/blobInfo/CC_OUT/blobs/de/6a1973eec33bcd503840c700ec40f064c337c9.src","preCode":"  public void testOnRepositoryChange() throws Exception {\n    Properties someProperties = new Properties();\n    String someKey = \"someKey\";\n    String someValue = \"someValue\";\n    String anotherKey = \"anotherKey\";\n    String anotherValue = \"anotherValue\";\n    someProperties.putAll(ImmutableMap.of(someKey, someValue, anotherKey, anotherValue));\n\n    Properties anotherProperties = new Properties();\n    String newKey = \"newKey\";\n    String newValue = \"newValue\";\n    String someValueNew = \"someValueNew\";\n    anotherProperties.putAll(ImmutableMap.of(someKey, someValueNew, newKey, newValue));\n\n    when(configRepository.getConfig()).thenReturn(someProperties);\n\n    final SettableFuture<ConfigChangeEvent> configChangeFuture = SettableFuture.create();\n    ConfigChangeListener someListener = new ConfigChangeListener() {\n      @Override\n      public void onChange(ConfigChangeEvent changeEvent) {\n        configChangeFuture.set(changeEvent);\n      }\n    };\n\n    SimpleConfig config = new SimpleConfig(someNamespace, configRepository);\n    config.addChangeListener(someListener);\n\n    config.onRepositoryChange(someNamespace, anotherProperties);\n\n    ConfigChangeEvent changeEvent = configChangeFuture.get(500, TimeUnit.MILLISECONDS);\n\n    assertEquals(someNamespace, changeEvent.getNamespace());\n    assertEquals(3, changeEvent.changedKeys().size());\n\n    ConfigChange someKeyChange = changeEvent.getChange(someKey);\n    assertEquals(someValue, someKeyChange.getOldValue());\n    assertEquals(someValueNew, someKeyChange.getNewValue());\n    assertEquals(PropertyChangeType.MODIFIED, someKeyChange.getChangeType());\n\n    ConfigChange anotherKeyChange = changeEvent.getChange(anotherKey);\n    assertEquals(anotherValue, anotherKeyChange.getOldValue());\n    assertEquals(null, anotherKeyChange.getNewValue());\n    assertEquals(PropertyChangeType.DELETED, anotherKeyChange.getChangeType());\n\n    ConfigChange newKeyChange = changeEvent.getChange(newKey);\n    assertEquals(null, newKeyChange.getOldValue());\n    assertEquals(newValue, newKeyChange.getNewValue());\n    assertEquals(PropertyChangeType.ADDED, newKeyChange.getChangeType());\n  }\n","realPath":"apollo-client/src/test/java/com/ctrip/framework/apollo/internals/SimpleConfigTest.java","repoName":"apollo","snippetEndLine":0,"snippetStartLine":0,"startLine":72,"status":"M"},{"authorDate":"2018-09-16 11:00:16","commitOrder":4,"curCode":"  public void testOnRepositoryChange() throws Exception {\n    String someKey = \"someKey\";\n    String someSystemPropertyValue = \"system-property-value\";\n\n    String anotherKey = \"anotherKey\";\n    String someLocalFileValue = \"local-file-value\";\n\n    String keyToBeDeleted = \"keyToBeDeleted\";\n    String keyToBeDeletedValue = \"keyToBeDeletedValue\";\n\n    String yetAnotherKey = \"yetAnotherKey\";\n    String yetAnotherValue = \"yetAnotherValue\";\n\n    String yetAnotherResourceValue = \"yetAnotherResourceValue\";\n    \r\n    System.setProperty(someKey, someSystemPropertyValue);\n\n    \r\n    someProperties = new Properties();\n    someProperties.putAll(ImmutableMap\n        .of(someKey, someLocalFileValue, anotherKey, someLocalFileValue, keyToBeDeleted,\n            keyToBeDeletedValue, yetAnotherKey, yetAnotherValue));\n    when(configRepository.getConfig()).thenReturn(someProperties);\n    someSourceType = ConfigSourceType.LOCAL;\n    when(configRepository.getSourceType()).thenReturn(someSourceType);\n\n    \r\n    File resourceFile = new File(someResourceDir, someNamespace + \".properties\");\n    Files.append(yetAnotherKey + \"=\" + yetAnotherResourceValue, resourceFile, Charsets.UTF_8);\n\n    DefaultConfig defaultConfig =\n        new DefaultConfig(someNamespace, configRepository);\n\n    assertEquals(someSourceType, defaultConfig.getSourceType());\n\n    final SettableFuture<ConfigChangeEvent> configChangeFuture = SettableFuture.create();\n    ConfigChangeListener someListener = new ConfigChangeListener() {\n      @Override\n      public void onChange(ConfigChangeEvent changeEvent) {\n        configChangeFuture.set(changeEvent);\n      }\n    };\n\n    defaultConfig.addChangeListener(someListener);\n\n    Properties newProperties = new Properties();\n    String someKeyNewValue = \"new-some-value\";\n    String anotherKeyNewValue = \"another-new-value\";\n    String newKey = \"newKey\";\n    String newValue = \"newValue\";\n    newProperties.putAll(ImmutableMap\n        .of(someKey, someKeyNewValue, anotherKey, anotherKeyNewValue, newKey, newValue));\n\n    ConfigSourceType anotherSourceType = ConfigSourceType.REMOTE;\n    when(configRepository.getSourceType()).thenReturn(anotherSourceType);\n\n    defaultConfig.onRepositoryChange(someNamespace, newProperties);\n\n    ConfigChangeEvent changeEvent = configChangeFuture.get(500, TimeUnit.MILLISECONDS);\n\n    \r\n    System.clearProperty(someKey);\n\n    assertEquals(someNamespace, changeEvent.getNamespace());\n    assertEquals(4, changeEvent.changedKeys().size());\n\n    ConfigChange anotherKeyChange = changeEvent.getChange(anotherKey);\n    assertEquals(someLocalFileValue, anotherKeyChange.getOldValue());\n    assertEquals(anotherKeyNewValue, anotherKeyChange.getNewValue());\n    assertEquals(PropertyChangeType.MODIFIED, anotherKeyChange.getChangeType());\n\n    ConfigChange yetAnotherKeyChange = changeEvent.getChange(yetAnotherKey);\n    assertEquals(yetAnotherValue, yetAnotherKeyChange.getOldValue());\n    assertEquals(yetAnotherResourceValue, yetAnotherKeyChange.getNewValue());\n    assertEquals(PropertyChangeType.MODIFIED, yetAnotherKeyChange.getChangeType());\n\n    ConfigChange keyToBeDeletedChange = changeEvent.getChange(keyToBeDeleted);\n    assertEquals(keyToBeDeletedValue, keyToBeDeletedChange.getOldValue());\n    assertEquals(null, keyToBeDeletedChange.getNewValue());\n    assertEquals(PropertyChangeType.DELETED, keyToBeDeletedChange.getChangeType());\n\n    ConfigChange newKeyChange = changeEvent.getChange(newKey);\n    assertEquals(null, newKeyChange.getOldValue());\n    assertEquals(newValue, newKeyChange.getNewValue());\n    assertEquals(PropertyChangeType.ADDED, newKeyChange.getChangeType());\n\n    assertEquals(anotherSourceType, defaultConfig.getSourceType());\n  }\n","date":"2018-09-16 11:00:16","endLine":671,"groupId":"10202","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"testOnRepositoryChange","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-apollo-10-0.7/blobInfo/CC_OUT/blobs/66/694c5bbcb53ee446512231d62f2be787484af2.src","preCode":"  public void testOnRepositoryChange() throws Exception {\n    String someKey = \"someKey\";\n    String someSystemPropertyValue = \"system-property-value\";\n\n    String anotherKey = \"anotherKey\";\n    String someLocalFileValue = \"local-file-value\";\n\n    String keyToBeDeleted = \"keyToBeDeleted\";\n    String keyToBeDeletedValue = \"keyToBeDeletedValue\";\n\n    String yetAnotherKey = \"yetAnotherKey\";\n    String yetAnotherValue = \"yetAnotherValue\";\n\n    String yetAnotherResourceValue = \"yetAnotherResourceValue\";\n    \r\n    System.setProperty(someKey, someSystemPropertyValue);\n\n    \r\n    someProperties = new Properties();\n    someProperties.putAll(ImmutableMap\n        .of(someKey, someLocalFileValue, anotherKey, someLocalFileValue, keyToBeDeleted,\n            keyToBeDeletedValue, yetAnotherKey, yetAnotherValue));\n    when(configRepository.getConfig()).thenReturn(someProperties);\n\n    \r\n    File resourceFile = new File(someResourceDir, someNamespace + \".properties\");\n    Files.append(yetAnotherKey + \"=\" + yetAnotherResourceValue, resourceFile, Charsets.UTF_8);\n\n    DefaultConfig defaultConfig =\n        new DefaultConfig(someNamespace, configRepository);\n\n    final SettableFuture<ConfigChangeEvent> configChangeFuture = SettableFuture.create();\n    ConfigChangeListener someListener = new ConfigChangeListener() {\n      @Override\n      public void onChange(ConfigChangeEvent changeEvent) {\n        configChangeFuture.set(changeEvent);\n      }\n    };\n\n    defaultConfig.addChangeListener(someListener);\n\n    Properties newProperties = new Properties();\n    String someKeyNewValue = \"new-some-value\";\n    String anotherKeyNewValue = \"another-new-value\";\n    String newKey = \"newKey\";\n    String newValue = \"newValue\";\n    newProperties.putAll(ImmutableMap\n        .of(someKey, someKeyNewValue, anotherKey, anotherKeyNewValue, newKey, newValue));\n\n    defaultConfig.onRepositoryChange(someNamespace, newProperties);\n\n    ConfigChangeEvent changeEvent = configChangeFuture.get(500, TimeUnit.MILLISECONDS);\n\n    \r\n    System.clearProperty(someKey);\n\n    assertEquals(someNamespace, changeEvent.getNamespace());\n    assertEquals(4, changeEvent.changedKeys().size());\n\n    ConfigChange anotherKeyChange = changeEvent.getChange(anotherKey);\n    assertEquals(someLocalFileValue, anotherKeyChange.getOldValue());\n    assertEquals(anotherKeyNewValue, anotherKeyChange.getNewValue());\n    assertEquals(PropertyChangeType.MODIFIED, anotherKeyChange.getChangeType());\n\n    ConfigChange yetAnotherKeyChange = changeEvent.getChange(yetAnotherKey);\n    assertEquals(yetAnotherValue, yetAnotherKeyChange.getOldValue());\n    assertEquals(yetAnotherResourceValue, yetAnotherKeyChange.getNewValue());\n    assertEquals(PropertyChangeType.MODIFIED, yetAnotherKeyChange.getChangeType());\n\n    ConfigChange keyToBeDeletedChange = changeEvent.getChange(keyToBeDeleted);\n    assertEquals(keyToBeDeletedValue, keyToBeDeletedChange.getOldValue());\n    assertEquals(null, keyToBeDeletedChange.getNewValue());\n    assertEquals(PropertyChangeType.DELETED, keyToBeDeletedChange.getChangeType());\n\n    ConfigChange newKeyChange = changeEvent.getChange(newKey);\n    assertEquals(null, newKeyChange.getOldValue());\n    assertEquals(newValue, newKeyChange.getNewValue());\n    assertEquals(PropertyChangeType.ADDED, newKeyChange.getChangeType());\n  }\n","realPath":"apollo-client/src/test/java/com/ctrip/framework/apollo/internals/DefaultConfigTest.java","repoName":"apollo","snippetEndLine":0,"snippetStartLine":0,"startLine":584,"status":"M"}],"commitId":"9e3aec542eeed1cec46c5930657582a8669c7492","commitMessage":"@@@Merge pull request #1470 from nobodyiam/config-source\n\nadd getSourceType api","date":"2018-09-16 11:00:16","modifiedFileCount":"15","status":"M","submitter":"Jason Song"}]
