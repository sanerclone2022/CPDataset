[{"authorTime":"2016-05-19 17:58:23","codes":[{"authorDate":"2016-05-19 17:58:23","commitOrder":1,"curCode":"  public static <K, V> Map<K, List<V>> aggByKeyToList(String key, List<? extends Object> list) {\n    Map<K, List<V>> map = new HashMap<K, List<V>>();\n    if (CollectionUtils.isEmpty(list)) {\r\n      return map;\n    }\n    try {\n      Class<? extends Object> clazz = list.get(0).getClass();\n      Field field = deepFindField(clazz, key);\n      if (field == null) throw new IllegalArgumentException(\"Could not find the key\");\n      field.setAccessible(true);\n      for (Object o : list) {\n        K k = (K) field.get(o);\n        if (map.get(k) == null) {\n          map.put(k, new ArrayList<V>());\n        }\n        map.get(k).add((V) o);\n      }\n    } catch (Exception e) {\n      throw new RuntimeException();\n    }\n    return map;\n  }\n","date":"2016-05-19 17:58:23","endLine":133,"groupId":"1127","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"aggByKeyToList","params":"(Stringkey@List<?extendsObject>list)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-apollo-10-0.7/blobInfo/CC_OUT/blobs/f3/0905a8ae85ec20974f5c3502f2317c19e5aca6.src","preCode":"  public static <K, V> Map<K, List<V>> aggByKeyToList(String key, List<? extends Object> list) {\n    Map<K, List<V>> map = new HashMap<K, List<V>>();\n    if (CollectionUtils.isEmpty(list)) {\r\n      return map;\n    }\n    try {\n      Class<? extends Object> clazz = list.get(0).getClass();\n      Field field = deepFindField(clazz, key);\n      if (field == null) throw new IllegalArgumentException(\"Could not find the key\");\n      field.setAccessible(true);\n      for (Object o : list) {\n        K k = (K) field.get(o);\n        if (map.get(k) == null) {\n          map.put(k, new ArrayList<V>());\n        }\n        map.get(k).add((V) o);\n      }\n    } catch (Exception e) {\n      throw new RuntimeException();\n    }\n    return map;\n  }\n","realPath":"apollo-common/src/main/java/com/ctrip/framework/apollo/common/utils/BeanUtils.java","repoName":"apollo","snippetEndLine":0,"snippetStartLine":0,"startLine":112,"status":"B"},{"authorDate":"2016-05-19 17:58:23","commitOrder":1,"curCode":"  public static <K> Set<K> toPropertySet(String key, List<? extends Object> list) {\n    Set<K> set = new HashSet<K>();\n    if (CollectionUtils.isEmpty(list)) {\r\n      return set;\n    }\n    try {\n      Class<? extends Object> clazz = list.get(0).getClass();\n      Field field = deepFindField(clazz, key);\n      if (field == null) throw new IllegalArgumentException(\"Could not find the key\");\n      field.setAccessible(true);\n      for (Object o : list) {\n        set.add((K)field.get(o));\n      }\n    } catch (Exception e) {\n      throw new RuntimeException(e);\n    }\n    return set;\n  }\n","date":"2016-05-19 17:58:23","endLine":161,"groupId":"802","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"toPropertySet","params":"(Stringkey@List<?extendsObject>list)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-apollo-10-0.7/blobInfo/CC_OUT/blobs/f3/0905a8ae85ec20974f5c3502f2317c19e5aca6.src","preCode":"  public static <K> Set<K> toPropertySet(String key, List<? extends Object> list) {\n    Set<K> set = new HashSet<K>();\n    if (CollectionUtils.isEmpty(list)) {\r\n      return set;\n    }\n    try {\n      Class<? extends Object> clazz = list.get(0).getClass();\n      Field field = deepFindField(clazz, key);\n      if (field == null) throw new IllegalArgumentException(\"Could not find the key\");\n      field.setAccessible(true);\n      for (Object o : list) {\n        set.add((K)field.get(o));\n      }\n    } catch (Exception e) {\n      throw new RuntimeException(e);\n    }\n    return set;\n  }\n","realPath":"apollo-common/src/main/java/com/ctrip/framework/apollo/common/utils/BeanUtils.java","repoName":"apollo","snippetEndLine":0,"snippetStartLine":0,"startLine":144,"status":"B"}],"commitId":"0b3ace803cac96eb293336fd429738c5b92f845d","commitMessage":"@@@Merge pull request #209 from lepdou/rename\n\nRename","date":"2016-05-19 17:58:23","modifiedFileCount":"1","status":"B","submitter":"Jason Song"},{"authorTime":"2016-07-29 11:04:47","codes":[{"authorDate":"2016-07-29 11:04:47","commitOrder":2,"curCode":"  public static <K, V> Map<K, List<V>> aggByKeyToList(String key, List<? extends Object> list) {\n    Map<K, List<V>> map = new HashMap<K, List<V>>();\n    if (CollectionUtils.isEmpty(list)) {\r\n      return map;\n    }\n    try {\n      Class<? extends Object> clazz = list.get(0).getClass();\n      Field field = deepFindField(clazz, key);\n      if (field == null) throw new IllegalArgumentException(\"Could not find the key\");\n      field.setAccessible(true);\n      for (Object o : list) {\n        K k = (K) field.get(o);\n        if (map.get(k) == null) {\n          map.put(k, new ArrayList<V>());\n        }\n        map.get(k).add((V) o);\n      }\n    } catch (Exception e) {\n      throw new BeanUtilsException(e);\n    }\n    return map;\n  }\n","date":"2016-07-29 11:04:47","endLine":135,"groupId":"1127","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"aggByKeyToList","params":"(Stringkey@List<?extendsObject>list)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-apollo-10-0.7/blobInfo/CC_OUT/blobs/c2/598a848914e874e6a76c4fa48eaa85f4938241.src","preCode":"  public static <K, V> Map<K, List<V>> aggByKeyToList(String key, List<? extends Object> list) {\n    Map<K, List<V>> map = new HashMap<K, List<V>>();\n    if (CollectionUtils.isEmpty(list)) {\r\n      return map;\n    }\n    try {\n      Class<? extends Object> clazz = list.get(0).getClass();\n      Field field = deepFindField(clazz, key);\n      if (field == null) throw new IllegalArgumentException(\"Could not find the key\");\n      field.setAccessible(true);\n      for (Object o : list) {\n        K k = (K) field.get(o);\n        if (map.get(k) == null) {\n          map.put(k, new ArrayList<V>());\n        }\n        map.get(k).add((V) o);\n      }\n    } catch (Exception e) {\n      throw new RuntimeException();\n    }\n    return map;\n  }\n","realPath":"apollo-common/src/main/java/com/ctrip/framework/apollo/common/utils/BeanUtils.java","repoName":"apollo","snippetEndLine":0,"snippetStartLine":0,"startLine":114,"status":"M"},{"authorDate":"2016-07-29 11:04:47","commitOrder":2,"curCode":"  public static <K> Set<K> toPropertySet(String key, List<? extends Object> list) {\n    Set<K> set = new HashSet<K>();\n    if (CollectionUtils.isEmpty(list)) {\r\n      return set;\n    }\n    try {\n      Class<? extends Object> clazz = list.get(0).getClass();\n      Field field = deepFindField(clazz, key);\n      if (field == null) throw new IllegalArgumentException(\"Could not find the key\");\n      field.setAccessible(true);\n      for (Object o : list) {\n        set.add((K)field.get(o));\n      }\n    } catch (Exception e) {\n      throw new BeanUtilsException(e);\n    }\n    return set;\n  }\n","date":"2016-07-29 11:04:47","endLine":163,"groupId":"802","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"toPropertySet","params":"(Stringkey@List<?extendsObject>list)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-apollo-10-0.7/blobInfo/CC_OUT/blobs/c2/598a848914e874e6a76c4fa48eaa85f4938241.src","preCode":"  public static <K> Set<K> toPropertySet(String key, List<? extends Object> list) {\n    Set<K> set = new HashSet<K>();\n    if (CollectionUtils.isEmpty(list)) {\r\n      return set;\n    }\n    try {\n      Class<? extends Object> clazz = list.get(0).getClass();\n      Field field = deepFindField(clazz, key);\n      if (field == null) throw new IllegalArgumentException(\"Could not find the key\");\n      field.setAccessible(true);\n      for (Object o : list) {\n        set.add((K)field.get(o));\n      }\n    } catch (Exception e) {\n      throw new RuntimeException(e);\n    }\n    return set;\n  }\n","realPath":"apollo-common/src/main/java/com/ctrip/framework/apollo/common/utils/BeanUtils.java","repoName":"apollo","snippetEndLine":0,"snippetStartLine":0,"startLine":146,"status":"M"}],"commitId":"0ecaebe4433c8b9f9549280263f5e32fe5724465","commitMessage":"@@@Merge pull request #357 from lepdou/coverity\n\nfix coverity bugs","date":"2016-07-29 11:04:47","modifiedFileCount":"69","status":"M","submitter":"Jason Song"},{"authorTime":"2019-02-16 16:46:32","codes":[{"authorDate":"2019-02-16 16:46:32","commitOrder":3,"curCode":"  public static <K, V> Map<K, List<V>> aggByKeyToList(String key, List<?> list) {\n    Map<K, List<V>> map = new HashMap<>();\n    if (CollectionUtils.isEmpty(list)) {\r\n      return map;\n    }\n    try {\n      Class<?> clazz = list.get(0).getClass();\n      Field field = deepFindField(clazz, key);\n      if (field == null) throw new IllegalArgumentException(\"Could not find the key\");\n      field.setAccessible(true);\n      for (Object o : list) {\n        K k = (K) field.get(o);\n        map.computeIfAbsent(k, k1 -> new ArrayList<>());\n        map.get(k).add((V) o);\n      }\n    } catch (Exception e) {\n      throw new BeanUtilsException(e);\n    }\n    return map;\n  }\n","date":"2019-02-16 16:46:32","endLine":133,"groupId":"1574","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"aggByKeyToList","params":"(Stringkey@List<?>list)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-apollo-10-0.7/blobInfo/CC_OUT/blobs/90/cfa8d898a57cb8d5e9d202338464cdc8dde2a2.src","preCode":"  public static <K, V> Map<K, List<V>> aggByKeyToList(String key, List<? extends Object> list) {\n    Map<K, List<V>> map = new HashMap<K, List<V>>();\n    if (CollectionUtils.isEmpty(list)) {\r\n      return map;\n    }\n    try {\n      Class<? extends Object> clazz = list.get(0).getClass();\n      Field field = deepFindField(clazz, key);\n      if (field == null) throw new IllegalArgumentException(\"Could not find the key\");\n      field.setAccessible(true);\n      for (Object o : list) {\n        K k = (K) field.get(o);\n        if (map.get(k) == null) {\n          map.put(k, new ArrayList<V>());\n        }\n        map.get(k).add((V) o);\n      }\n    } catch (Exception e) {\n      throw new BeanUtilsException(e);\n    }\n    return map;\n  }\n","realPath":"apollo-common/src/main/java/com/ctrip/framework/apollo/common/utils/BeanUtils.java","repoName":"apollo","snippetEndLine":0,"snippetStartLine":0,"startLine":114,"status":"M"},{"authorDate":"2019-02-16 16:46:32","commitOrder":3,"curCode":"  public static <K> Set<K> toPropertySet(String key, List<?> list) {\n    Set<K> set = new HashSet<>();\n    if (CollectionUtils.isEmpty(list)) {\r\n      return set;\n    }\n    try {\n      Class<?> clazz = list.get(0).getClass();\n      Field field = deepFindField(clazz, key);\n      if (field == null) throw new IllegalArgumentException(\"Could not find the key\");\n      field.setAccessible(true);\n      for (Object o : list) {\n        set.add((K)field.get(o));\n      }\n    } catch (Exception e) {\n      throw new BeanUtilsException(e);\n    }\n    return set;\n  }\n","date":"2019-02-16 16:46:32","endLine":161,"groupId":"802","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"toPropertySet","params":"(Stringkey@List<?>list)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-apollo-10-0.7/blobInfo/CC_OUT/blobs/90/cfa8d898a57cb8d5e9d202338464cdc8dde2a2.src","preCode":"  public static <K> Set<K> toPropertySet(String key, List<? extends Object> list) {\n    Set<K> set = new HashSet<K>();\n    if (CollectionUtils.isEmpty(list)) {\r\n      return set;\n    }\n    try {\n      Class<? extends Object> clazz = list.get(0).getClass();\n      Field field = deepFindField(clazz, key);\n      if (field == null) throw new IllegalArgumentException(\"Could not find the key\");\n      field.setAccessible(true);\n      for (Object o : list) {\n        set.add((K)field.get(o));\n      }\n    } catch (Exception e) {\n      throw new BeanUtilsException(e);\n    }\n    return set;\n  }\n","realPath":"apollo-common/src/main/java/com/ctrip/framework/apollo/common/utils/BeanUtils.java","repoName":"apollo","snippetEndLine":0,"snippetStartLine":0,"startLine":144,"status":"M"}],"commitId":"118dd0ebe2a6b1b3e07b06a0f2c7884049821037","commitMessage":"@@@Cleanup for 1.3.0 (#1969)\n\n* replace some guava API with new Java 1.7 native API\n* replace Collections.sort with List.sort(Java 1.7)\n* replace annonymous inner types with lambdas\n* use try-with-resources where possible\n* replace explicit types with diamond operators","date":"2019-02-16 16:46:32","modifiedFileCount":"19","status":"M","submitter":"kezhenxu94"},{"authorTime":"2019-12-28 16:07:49","codes":[{"authorDate":"2019-12-28 16:07:49","commitOrder":4,"curCode":"  public static <K, V> Map<K, List<V>> aggByKeyToList(String key, List<?> list) {\n    Map<K, List<V>> map = new HashMap<>();\n    if (CollectionUtils.isEmpty(list)) {\r\n      return map;\n    }\n    try {\n      Class<?> clazz = list.get(0).getClass();\n      Field field = deepFindField(clazz, key);\n      if (field == null) {\n          throw new IllegalArgumentException(\"Could not find the key\");\n      }\n      field.setAccessible(true);\n      for (Object o : list) {\n        K k = (K) field.get(o);\n        map.computeIfAbsent(k, k1 -> new ArrayList<>());\n        map.get(k).add((V) o);\n      }\n    } catch (Exception e) {\n      throw new BeanUtilsException(e);\n    }\n    return map;\n  }\n","date":"2019-12-28 16:07:49","endLine":139,"groupId":"1092","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"aggByKeyToList","params":"(Stringkey@List<?>list)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-apollo-10-0.7/blobInfo/CC_OUT/blobs/09/2d01c0e173b3d4e5cf0be4ca84ce855e680d6c.src","preCode":"  public static <K, V> Map<K, List<V>> aggByKeyToList(String key, List<?> list) {\n    Map<K, List<V>> map = new HashMap<>();\n    if (CollectionUtils.isEmpty(list)) {\r\n      return map;\n    }\n    try {\n      Class<?> clazz = list.get(0).getClass();\n      Field field = deepFindField(clazz, key);\n      if (field == null) throw new IllegalArgumentException(\"Could not find the key\");\n      field.setAccessible(true);\n      for (Object o : list) {\n        K k = (K) field.get(o);\n        map.computeIfAbsent(k, k1 -> new ArrayList<>());\n        map.get(k).add((V) o);\n      }\n    } catch (Exception e) {\n      throw new BeanUtilsException(e);\n    }\n    return map;\n  }\n","realPath":"apollo-common/src/main/java/com/ctrip/framework/apollo/common/utils/BeanUtils.java","repoName":"apollo","snippetEndLine":0,"snippetStartLine":0,"startLine":118,"status":"M"},{"authorDate":"2019-12-28 16:07:49","commitOrder":4,"curCode":"  public static <K> Set<K> toPropertySet(String key, List<?> list) {\n    Set<K> set = new HashSet<>();\n    if (CollectionUtils.isEmpty(list)) {\r\n      return set;\n    }\n    try {\n      Class<?> clazz = list.get(0).getClass();\n      Field field = deepFindField(clazz, key);\n      if (field == null) {\n          throw new IllegalArgumentException(\"Could not find the key\");\n      }\n      field.setAccessible(true);\n      for (Object o : list) {\n        set.add((K)field.get(o));\n      }\n    } catch (Exception e) {\n      throw new BeanUtilsException(e);\n    }\n    return set;\n  }\n","date":"2019-12-28 16:07:49","endLine":169,"groupId":"1092","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"toPropertySet","params":"(Stringkey@List<?>list)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-apollo-10-0.7/blobInfo/CC_OUT/blobs/09/2d01c0e173b3d4e5cf0be4ca84ce855e680d6c.src","preCode":"  public static <K> Set<K> toPropertySet(String key, List<?> list) {\n    Set<K> set = new HashSet<>();\n    if (CollectionUtils.isEmpty(list)) {\r\n      return set;\n    }\n    try {\n      Class<?> clazz = list.get(0).getClass();\n      Field field = deepFindField(clazz, key);\n      if (field == null) throw new IllegalArgumentException(\"Could not find the key\");\n      field.setAccessible(true);\n      for (Object o : list) {\n        set.add((K)field.get(o));\n      }\n    } catch (Exception e) {\n      throw new BeanUtilsException(e);\n    }\n    return set;\n  }\n","realPath":"apollo-common/src/main/java/com/ctrip/framework/apollo/common/utils/BeanUtils.java","repoName":"apollo","snippetEndLine":0,"snippetStartLine":0,"startLine":150,"status":"M"}],"commitId":"8cb5b3aa14e16b0d3d28c0e456c9042141ca9787","commitMessage":"@@@[Style] Add curly braces after `if` statements\n\n","date":"2019-12-28 16:07:49","modifiedFileCount":"4","status":"M","submitter":"Lei Jiang"}]
