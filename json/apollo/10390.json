[{"authorTime":"2018-02-24 19:06:36","codes":[{"authorDate":"2018-02-24 19:06:36","commitOrder":1,"curCode":"  public void testAutoUpdateWithNestedProperty() throws Exception {\n    String someKeyValue = \"someKeyValue\";\n    String anotherKeyValue = \"anotherKeyValue\";\n    String newKeyValue = \"newKeyValue\";\n    int someValue = 1234;\n    int someNewValue = 2345;\n\n    Properties properties = assembleProperties(SOME_KEY_PROPERTY, someKeyValue, ANOTHER_KEY_PROPERTY, anotherKeyValue,\n        String.format(\"%s.%s\", someKeyValue, anotherKeyValue), String.valueOf(someValue));\n\n    SimpleConfig config = prepareConfig(ConfigConsts.NAMESPACE_APPLICATION, properties);\n\n    AnnotationConfigApplicationContext context = new AnnotationConfigApplicationContext(NestedPropertyConfig1.class);\n\n    TestNestedPropertyBean bean = context.getBean(TestNestedPropertyBean.class);\n\n    assertEquals(someValue, bean.getNestedProperty());\n\n    Properties newProperties = assembleProperties(SOME_KEY_PROPERTY, newKeyValue, ANOTHER_KEY_PROPERTY, anotherKeyValue,\n        String.format(\"%s.%s\", newKeyValue, anotherKeyValue), String.valueOf(someNewValue));\n\n    config.onRepositoryChange(ConfigConsts.NAMESPACE_APPLICATION, newProperties);\n\n    TimeUnit.MILLISECONDS.sleep(50);\n\n    assertEquals(someNewValue, bean.getNestedProperty());\n  }\n","date":"2018-02-24 19:06:36","endLine":511,"groupId":"815","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testAutoUpdateWithNestedProperty","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-apollo-10-0.7/blobInfo/CC_OUT/blobs/f5/cc4c823de8ca1dc4440ec8bf384cad795b7703.src","preCode":"  public void testAutoUpdateWithNestedProperty() throws Exception {\n    String someKeyValue = \"someKeyValue\";\n    String anotherKeyValue = \"anotherKeyValue\";\n    String newKeyValue = \"newKeyValue\";\n    int someValue = 1234;\n    int someNewValue = 2345;\n\n    Properties properties = assembleProperties(SOME_KEY_PROPERTY, someKeyValue, ANOTHER_KEY_PROPERTY, anotherKeyValue,\n        String.format(\"%s.%s\", someKeyValue, anotherKeyValue), String.valueOf(someValue));\n\n    SimpleConfig config = prepareConfig(ConfigConsts.NAMESPACE_APPLICATION, properties);\n\n    AnnotationConfigApplicationContext context = new AnnotationConfigApplicationContext(NestedPropertyConfig1.class);\n\n    TestNestedPropertyBean bean = context.getBean(TestNestedPropertyBean.class);\n\n    assertEquals(someValue, bean.getNestedProperty());\n\n    Properties newProperties = assembleProperties(SOME_KEY_PROPERTY, newKeyValue, ANOTHER_KEY_PROPERTY, anotherKeyValue,\n        String.format(\"%s.%s\", newKeyValue, anotherKeyValue), String.valueOf(someNewValue));\n\n    config.onRepositoryChange(ConfigConsts.NAMESPACE_APPLICATION, newProperties);\n\n    TimeUnit.MILLISECONDS.sleep(50);\n\n    assertEquals(someNewValue, bean.getNestedProperty());\n  }\n","realPath":"apollo-client/src/test/java/com/ctrip/framework/apollo/spring/JavaConfigPlaceholderAutoUpdateTest.java","repoName":"apollo","snippetEndLine":0,"snippetStartLine":0,"startLine":485,"status":"B"},{"authorDate":"2018-02-24 19:06:36","commitOrder":1,"curCode":"  public void testAutoUpdateWithNotSupportedNestedProperty() throws Exception {\n    String someKeyValue = \"someKeyValue\";\n    String anotherKeyValue = \"anotherKeyValue\";\n    int someValue = 1234;\n    int someNewValue = 2345;\n\n    Properties properties = assembleProperties(SOME_KEY_PROPERTY, someKeyValue, ANOTHER_KEY_PROPERTY, anotherKeyValue,\n        String.format(\"%s.%s\", someKeyValue, anotherKeyValue), String.valueOf(someValue));\n\n    SimpleConfig config = prepareConfig(ConfigConsts.NAMESPACE_APPLICATION, properties);\n\n    AnnotationConfigApplicationContext context = new AnnotationConfigApplicationContext(NestedPropertyConfig1.class);\n\n    TestNestedPropertyBean bean = context.getBean(TestNestedPropertyBean.class);\n\n    assertEquals(someValue, bean.getNestedProperty());\n\n    Properties newProperties = assembleProperties(SOME_KEY_PROPERTY, someKeyValue, ANOTHER_KEY_PROPERTY,\n        anotherKeyValue, String.format(\"%s.%s\", someKeyValue, anotherKeyValue), String.valueOf(someNewValue));\n\n    config.onRepositoryChange(ConfigConsts.NAMESPACE_APPLICATION, newProperties);\n\n    TimeUnit.MILLISECONDS.sleep(50);\n\n    \r\n    assertEquals(someValue, bean.getNestedProperty());\n  }\n","date":"2018-02-24 19:06:36","endLine":540,"groupId":"815","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testAutoUpdateWithNotSupportedNestedProperty","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-apollo-10-0.7/blobInfo/CC_OUT/blobs/f5/cc4c823de8ca1dc4440ec8bf384cad795b7703.src","preCode":"  public void testAutoUpdateWithNotSupportedNestedProperty() throws Exception {\n    String someKeyValue = \"someKeyValue\";\n    String anotherKeyValue = \"anotherKeyValue\";\n    int someValue = 1234;\n    int someNewValue = 2345;\n\n    Properties properties = assembleProperties(SOME_KEY_PROPERTY, someKeyValue, ANOTHER_KEY_PROPERTY, anotherKeyValue,\n        String.format(\"%s.%s\", someKeyValue, anotherKeyValue), String.valueOf(someValue));\n\n    SimpleConfig config = prepareConfig(ConfigConsts.NAMESPACE_APPLICATION, properties);\n\n    AnnotationConfigApplicationContext context = new AnnotationConfigApplicationContext(NestedPropertyConfig1.class);\n\n    TestNestedPropertyBean bean = context.getBean(TestNestedPropertyBean.class);\n\n    assertEquals(someValue, bean.getNestedProperty());\n\n    Properties newProperties = assembleProperties(SOME_KEY_PROPERTY, someKeyValue, ANOTHER_KEY_PROPERTY,\n        anotherKeyValue, String.format(\"%s.%s\", someKeyValue, anotherKeyValue), String.valueOf(someNewValue));\n\n    config.onRepositoryChange(ConfigConsts.NAMESPACE_APPLICATION, newProperties);\n\n    TimeUnit.MILLISECONDS.sleep(50);\n\n    \r\n    assertEquals(someValue, bean.getNestedProperty());\n  }\n","realPath":"apollo-client/src/test/java/com/ctrip/framework/apollo/spring/JavaConfigPlaceholderAutoUpdateTest.java","repoName":"apollo","snippetEndLine":0,"snippetStartLine":0,"startLine":514,"status":"B"}],"commitId":"5823daa67b7c84d650023cff3464eae40c53d13c","commitMessage":"@@@Merge pull request #972 from nobodyiam/auto-update-value-merge\n\nAuto Updating Spring Placeholder Values","date":"2018-02-24 19:06:36","modifiedFileCount":"22","status":"B","submitter":"??"},{"authorTime":"2018-03-27 23:49:38","codes":[{"authorDate":"2018-03-27 23:49:38","commitOrder":2,"curCode":"  public void testAutoUpdateWithNestedProperty() throws Exception {\n    String someKeyValue = \"someKeyValue\";\n    String anotherKeyValue = \"anotherKeyValue\";\n    String newKeyValue = \"newKeyValue\";\n    int someValue = 1234;\n    int someNewValue = 2345;\n\n    Properties properties = assembleProperties(SOME_KEY_PROPERTY, someKeyValue, ANOTHER_KEY_PROPERTY, anotherKeyValue,\n        String.format(\"%s.%s\", someKeyValue, anotherKeyValue), String.valueOf(someValue));\n\n    SimpleConfig config = prepareConfig(ConfigConsts.NAMESPACE_APPLICATION, properties);\n\n    AnnotationConfigApplicationContext context = new AnnotationConfigApplicationContext(NestedPropertyConfig1.class);\n\n    TestNestedPropertyBean bean = context.getBean(TestNestedPropertyBean.class);\n\n    assertEquals(someValue, bean.getNestedProperty());\n\n    Properties newProperties = assembleProperties(SOME_KEY_PROPERTY, newKeyValue, ANOTHER_KEY_PROPERTY, anotherKeyValue,\n        String.format(\"%s.%s\", newKeyValue, anotherKeyValue), String.valueOf(someNewValue));\n\n    config.onRepositoryChange(ConfigConsts.NAMESPACE_APPLICATION, newProperties);\n\n    TimeUnit.MILLISECONDS.sleep(100);\n\n    assertEquals(someNewValue, bean.getNestedProperty());\n  }\n","date":"2018-03-27 23:49:38","endLine":543,"groupId":"10390","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testAutoUpdateWithNestedProperty","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-apollo-10-0.7/blobInfo/CC_OUT/blobs/51/683f1416030e995699ace47eb1b1d255138f63.src","preCode":"  public void testAutoUpdateWithNestedProperty() throws Exception {\n    String someKeyValue = \"someKeyValue\";\n    String anotherKeyValue = \"anotherKeyValue\";\n    String newKeyValue = \"newKeyValue\";\n    int someValue = 1234;\n    int someNewValue = 2345;\n\n    Properties properties = assembleProperties(SOME_KEY_PROPERTY, someKeyValue, ANOTHER_KEY_PROPERTY, anotherKeyValue,\n        String.format(\"%s.%s\", someKeyValue, anotherKeyValue), String.valueOf(someValue));\n\n    SimpleConfig config = prepareConfig(ConfigConsts.NAMESPACE_APPLICATION, properties);\n\n    AnnotationConfigApplicationContext context = new AnnotationConfigApplicationContext(NestedPropertyConfig1.class);\n\n    TestNestedPropertyBean bean = context.getBean(TestNestedPropertyBean.class);\n\n    assertEquals(someValue, bean.getNestedProperty());\n\n    Properties newProperties = assembleProperties(SOME_KEY_PROPERTY, newKeyValue, ANOTHER_KEY_PROPERTY, anotherKeyValue,\n        String.format(\"%s.%s\", newKeyValue, anotherKeyValue), String.valueOf(someNewValue));\n\n    config.onRepositoryChange(ConfigConsts.NAMESPACE_APPLICATION, newProperties);\n\n    TimeUnit.MILLISECONDS.sleep(50);\n\n    assertEquals(someNewValue, bean.getNestedProperty());\n  }\n","realPath":"apollo-client/src/test/java/com/ctrip/framework/apollo/spring/JavaConfigPlaceholderAutoUpdateTest.java","repoName":"apollo","snippetEndLine":0,"snippetStartLine":0,"startLine":517,"status":"M"},{"authorDate":"2018-03-27 23:49:38","commitOrder":2,"curCode":"  public void testAutoUpdateWithNotSupportedNestedProperty() throws Exception {\n    String someKeyValue = \"someKeyValue\";\n    String anotherKeyValue = \"anotherKeyValue\";\n    int someValue = 1234;\n    int someNewValue = 2345;\n\n    Properties properties = assembleProperties(SOME_KEY_PROPERTY, someKeyValue, ANOTHER_KEY_PROPERTY, anotherKeyValue,\n        String.format(\"%s.%s\", someKeyValue, anotherKeyValue), String.valueOf(someValue));\n\n    SimpleConfig config = prepareConfig(ConfigConsts.NAMESPACE_APPLICATION, properties);\n\n    AnnotationConfigApplicationContext context = new AnnotationConfigApplicationContext(NestedPropertyConfig1.class);\n\n    TestNestedPropertyBean bean = context.getBean(TestNestedPropertyBean.class);\n\n    assertEquals(someValue, bean.getNestedProperty());\n\n    Properties newProperties = assembleProperties(SOME_KEY_PROPERTY, someKeyValue, ANOTHER_KEY_PROPERTY,\n        anotherKeyValue, String.format(\"%s.%s\", someKeyValue, anotherKeyValue), String.valueOf(someNewValue));\n\n    config.onRepositoryChange(ConfigConsts.NAMESPACE_APPLICATION, newProperties);\n\n    TimeUnit.MILLISECONDS.sleep(100);\n\n    \r\n    assertEquals(someValue, bean.getNestedProperty());\n  }\n","date":"2018-03-27 23:49:38","endLine":572,"groupId":"10390","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testAutoUpdateWithNotSupportedNestedProperty","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-apollo-10-0.7/blobInfo/CC_OUT/blobs/51/683f1416030e995699ace47eb1b1d255138f63.src","preCode":"  public void testAutoUpdateWithNotSupportedNestedProperty() throws Exception {\n    String someKeyValue = \"someKeyValue\";\n    String anotherKeyValue = \"anotherKeyValue\";\n    int someValue = 1234;\n    int someNewValue = 2345;\n\n    Properties properties = assembleProperties(SOME_KEY_PROPERTY, someKeyValue, ANOTHER_KEY_PROPERTY, anotherKeyValue,\n        String.format(\"%s.%s\", someKeyValue, anotherKeyValue), String.valueOf(someValue));\n\n    SimpleConfig config = prepareConfig(ConfigConsts.NAMESPACE_APPLICATION, properties);\n\n    AnnotationConfigApplicationContext context = new AnnotationConfigApplicationContext(NestedPropertyConfig1.class);\n\n    TestNestedPropertyBean bean = context.getBean(TestNestedPropertyBean.class);\n\n    assertEquals(someValue, bean.getNestedProperty());\n\n    Properties newProperties = assembleProperties(SOME_KEY_PROPERTY, someKeyValue, ANOTHER_KEY_PROPERTY,\n        anotherKeyValue, String.format(\"%s.%s\", someKeyValue, anotherKeyValue), String.valueOf(someNewValue));\n\n    config.onRepositoryChange(ConfigConsts.NAMESPACE_APPLICATION, newProperties);\n\n    TimeUnit.MILLISECONDS.sleep(50);\n\n    \r\n    assertEquals(someValue, bean.getNestedProperty());\n  }\n","realPath":"apollo-client/src/test/java/com/ctrip/framework/apollo/spring/JavaConfigPlaceholderAutoUpdateTest.java","repoName":"apollo","snippetEndLine":0,"snippetStartLine":0,"startLine":546,"status":"M"}],"commitId":"6b2467df6aa3c286102219e1c5b50efeeb68f747","commitMessage":"@@@Merge pull request #1019 from nobodyiam/0.10.1\n\nfix the issue brought by 0.10.0 that Spring related classes are mistakenly loaded via DefaultInjector","date":"2018-03-27 23:49:38","modifiedFileCount":"10","status":"M","submitter":"Jason Song"}]
