[{"authorTime":"2016-12-07 10:52:26","codes":[{"authorDate":"2016-12-07 10:52:26","commitOrder":1,"curCode":"  public ReleaseDTO createRelease(@PathVariable String appId,\n                                  @PathVariable String env, @PathVariable String clusterName,\n                                  @PathVariable String namespaceName, @RequestBody NamespaceReleaseModel model) {\n\n    checkModel(model != null);\n    model.setAppId(appId);\n    model.setEnv(env);\n    model.setClusterName(clusterName);\n    model.setNamespaceName(namespaceName);\n\n    ReleaseDTO createdRelease = releaseService.publish(model);\n\n    ConfigPublishEvent event = ConfigPublishEvent.instance();\n    event.withAppId(appId)\n        .withCluster(clusterName)\n        .withNamespace(namespaceName)\n        .withReleaseId(createdRelease.getId())\n        .setNormalPublishEvent(true)\n        .setEnv(Env.valueOf(env));\n\n    publisher.publishEvent(event);\n\n    return createdRelease;\n  }\n","date":"2016-12-07 10:52:26","endLine":59,"groupId":"965","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"createRelease","params":"(@PathVariableStringappId@@PathVariableStringenv@@PathVariableStringclusterName@@PathVariableStringnamespaceName@@RequestBodyNamespaceReleaseModelmodel)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-apollo-10-0.7/blobInfo/CC_OUT/blobs/f5/495874d2139f99c04144d821be6776e02ea6e4.src","preCode":"  public ReleaseDTO createRelease(@PathVariable String appId,\n                                  @PathVariable String env, @PathVariable String clusterName,\n                                  @PathVariable String namespaceName, @RequestBody NamespaceReleaseModel model) {\n\n    checkModel(model != null);\n    model.setAppId(appId);\n    model.setEnv(env);\n    model.setClusterName(clusterName);\n    model.setNamespaceName(namespaceName);\n\n    ReleaseDTO createdRelease = releaseService.publish(model);\n\n    ConfigPublishEvent event = ConfigPublishEvent.instance();\n    event.withAppId(appId)\n        .withCluster(clusterName)\n        .withNamespace(namespaceName)\n        .withReleaseId(createdRelease.getId())\n        .setNormalPublishEvent(true)\n        .setEnv(Env.valueOf(env));\n\n    publisher.publishEvent(event);\n\n    return createdRelease;\n  }\n","realPath":"apollo-portal/src/main/java/com/ctrip/framework/apollo/portal/controller/ReleaseController.java","repoName":"apollo","snippetEndLine":0,"snippetStartLine":0,"startLine":36,"status":"B"},{"authorDate":"2016-12-07 10:52:26","commitOrder":1,"curCode":"  public ReleaseDTO createGrayRelease(@PathVariable String appId,\n                                      @PathVariable String env, @PathVariable String clusterName,\n                                      @PathVariable String namespaceName, @PathVariable String branchName,\n                                      @RequestBody NamespaceReleaseModel model) {\n\n    checkModel(model != null);\n    model.setAppId(appId);\n    model.setEnv(env);\n    model.setClusterName(branchName);\n    model.setNamespaceName(namespaceName);\n\n    ReleaseDTO createdRelease = releaseService.publish(model);\n\n    ConfigPublishEvent event = ConfigPublishEvent.instance();\n    event.withAppId(appId)\n        .withCluster(clusterName)\n        .withNamespace(namespaceName)\n        .withReleaseId(createdRelease.getId())\n        .setGrayPublishEvent(true)\n        .setEnv(Env.valueOf(env));\n\n    publisher.publishEvent(event);\n\n    return createdRelease;\n  }\n","date":"2016-12-07 10:52:26","endLine":88,"groupId":"965","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"createGrayRelease","params":"(@PathVariableStringappId@@PathVariableStringenv@@PathVariableStringclusterName@@PathVariableStringnamespaceName@@PathVariableStringbranchName@@RequestBodyNamespaceReleaseModelmodel)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-apollo-10-0.7/blobInfo/CC_OUT/blobs/f5/495874d2139f99c04144d821be6776e02ea6e4.src","preCode":"  public ReleaseDTO createGrayRelease(@PathVariable String appId,\n                                      @PathVariable String env, @PathVariable String clusterName,\n                                      @PathVariable String namespaceName, @PathVariable String branchName,\n                                      @RequestBody NamespaceReleaseModel model) {\n\n    checkModel(model != null);\n    model.setAppId(appId);\n    model.setEnv(env);\n    model.setClusterName(branchName);\n    model.setNamespaceName(namespaceName);\n\n    ReleaseDTO createdRelease = releaseService.publish(model);\n\n    ConfigPublishEvent event = ConfigPublishEvent.instance();\n    event.withAppId(appId)\n        .withCluster(clusterName)\n        .withNamespace(namespaceName)\n        .withReleaseId(createdRelease.getId())\n        .setGrayPublishEvent(true)\n        .setEnv(Env.valueOf(env));\n\n    publisher.publishEvent(event);\n\n    return createdRelease;\n  }\n","realPath":"apollo-portal/src/main/java/com/ctrip/framework/apollo/portal/controller/ReleaseController.java","repoName":"apollo","snippetEndLine":0,"snippetStartLine":0,"startLine":64,"status":"B"}],"commitId":"50109173e010e9c4080c247e9a7b88aaa50dd435","commitMessage":"@@@Merge branch 'master' into 'release'\n\nMaster\n\n\n\nSee merge request !36","date":"2016-12-07 10:52:26","modifiedFileCount":"160","status":"B","submitter":"zl??(IT)"},{"authorTime":"2017-01-19 16:28:42","codes":[{"authorDate":"2017-01-19 16:28:42","commitOrder":2,"curCode":"  public ReleaseDTO createRelease(@PathVariable String appId,\n                                  @PathVariable String env, @PathVariable String clusterName,\n                                  @PathVariable String namespaceName, @RequestBody NamespaceReleaseModel model) {\n\n    checkModel(model != null);\n    model.setAppId(appId);\n    model.setEnv(env);\n    model.setClusterName(clusterName);\n    model.setNamespaceName(namespaceName);\n\n    if (model.isEmergencyPublish() && !portalConfig.isEmergencyPublishAllowed(Env.valueOf(env))) {\n      throw new BadRequestException(String.format(\"Env: %s is not supported emergency publish now\", env));\n    }\n\n    ReleaseDTO createdRelease = releaseService.publish(model);\n\n    ConfigPublishEvent event = ConfigPublishEvent.instance();\n    event.withAppId(appId)\n        .withCluster(clusterName)\n        .withNamespace(namespaceName)\n        .withReleaseId(createdRelease.getId())\n        .setNormalPublishEvent(true)\n        .setEnv(Env.valueOf(env));\n\n    publisher.publishEvent(event);\n\n    return createdRelease;\n  }\n","date":"2017-01-19 16:28:42","endLine":67,"groupId":"440","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"createRelease","params":"(@PathVariableStringappId@@PathVariableStringenv@@PathVariableStringclusterName@@PathVariableStringnamespaceName@@RequestBodyNamespaceReleaseModelmodel)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-apollo-10-0.7/blobInfo/CC_OUT/blobs/0f/42be9edb174be72173d91cd3333920f210dc09.src","preCode":"  public ReleaseDTO createRelease(@PathVariable String appId,\n                                  @PathVariable String env, @PathVariable String clusterName,\n                                  @PathVariable String namespaceName, @RequestBody NamespaceReleaseModel model) {\n\n    checkModel(model != null);\n    model.setAppId(appId);\n    model.setEnv(env);\n    model.setClusterName(clusterName);\n    model.setNamespaceName(namespaceName);\n\n    ReleaseDTO createdRelease = releaseService.publish(model);\n\n    ConfigPublishEvent event = ConfigPublishEvent.instance();\n    event.withAppId(appId)\n        .withCluster(clusterName)\n        .withNamespace(namespaceName)\n        .withReleaseId(createdRelease.getId())\n        .setNormalPublishEvent(true)\n        .setEnv(Env.valueOf(env));\n\n    publisher.publishEvent(event);\n\n    return createdRelease;\n  }\n","realPath":"apollo-portal/src/main/java/com/ctrip/framework/apollo/portal/controller/ReleaseController.java","repoName":"apollo","snippetEndLine":0,"snippetStartLine":0,"startLine":40,"status":"M"},{"authorDate":"2017-01-19 16:28:42","commitOrder":2,"curCode":"  public ReleaseDTO createGrayRelease(@PathVariable String appId,\n                                      @PathVariable String env, @PathVariable String clusterName,\n                                      @PathVariable String namespaceName, @PathVariable String branchName,\n                                      @RequestBody NamespaceReleaseModel model) {\n\n    checkModel(model != null);\n    model.setAppId(appId);\n    model.setEnv(env);\n    model.setClusterName(branchName);\n    model.setNamespaceName(namespaceName);\n\n    if (model.isEmergencyPublish() && !portalConfig.isEmergencyPublishAllowed(Env.valueOf(env))) {\n      throw new BadRequestException(String.format(\"Env: %s is not supported emergency publish now\", env));\n    }\n\n    ReleaseDTO createdRelease = releaseService.publish(model);\n\n    ConfigPublishEvent event = ConfigPublishEvent.instance();\n    event.withAppId(appId)\n        .withCluster(clusterName)\n        .withNamespace(namespaceName)\n        .withReleaseId(createdRelease.getId())\n        .setGrayPublishEvent(true)\n        .setEnv(Env.valueOf(env));\n\n    publisher.publishEvent(event);\n\n    return createdRelease;\n  }\n","date":"2017-01-19 16:28:42","endLine":100,"groupId":"440","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"createGrayRelease","params":"(@PathVariableStringappId@@PathVariableStringenv@@PathVariableStringclusterName@@PathVariableStringnamespaceName@@PathVariableStringbranchName@@RequestBodyNamespaceReleaseModelmodel)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-apollo-10-0.7/blobInfo/CC_OUT/blobs/0f/42be9edb174be72173d91cd3333920f210dc09.src","preCode":"  public ReleaseDTO createGrayRelease(@PathVariable String appId,\n                                      @PathVariable String env, @PathVariable String clusterName,\n                                      @PathVariable String namespaceName, @PathVariable String branchName,\n                                      @RequestBody NamespaceReleaseModel model) {\n\n    checkModel(model != null);\n    model.setAppId(appId);\n    model.setEnv(env);\n    model.setClusterName(branchName);\n    model.setNamespaceName(namespaceName);\n\n    ReleaseDTO createdRelease = releaseService.publish(model);\n\n    ConfigPublishEvent event = ConfigPublishEvent.instance();\n    event.withAppId(appId)\n        .withCluster(clusterName)\n        .withNamespace(namespaceName)\n        .withReleaseId(createdRelease.getId())\n        .setGrayPublishEvent(true)\n        .setEnv(Env.valueOf(env));\n\n    publisher.publishEvent(event);\n\n    return createdRelease;\n  }\n","realPath":"apollo-portal/src/main/java/com/ctrip/framework/apollo/portal/controller/ReleaseController.java","repoName":"apollo","snippetEndLine":0,"snippetStartLine":0,"startLine":72,"status":"M"}],"commitId":"4f3dd644a2dde5e77186ec8aac124e27b45c14b3","commitMessage":"@@@Merge pull request #520 from lepdou/emergency_publish\n\nemergency publish","date":"2017-01-19 16:28:42","modifiedFileCount":"15","status":"M","submitter":"Jason Song"},{"authorTime":"2017-12-15 23:05:19","codes":[{"authorDate":"2017-12-15 23:05:19","commitOrder":3,"curCode":"  public ReleaseDTO createRelease(@PathVariable String appId,\n                                  @PathVariable String env, @PathVariable String clusterName,\n                                  @PathVariable String namespaceName, @RequestBody NamespaceReleaseModel model) {\n\n    checkModel(Objects.nonNull(model));\n    model.setAppId(appId);\n    model.setEnv(env);\n    model.setClusterName(clusterName);\n    model.setNamespaceName(namespaceName);\n\n    if (model.isEmergencyPublish() && !portalConfig.isEmergencyPublishAllowed(Env.valueOf(env))) {\n      throw new BadRequestException(String.format(\"Env: %s is not supported emergency publish now\", env));\n    }\n\n    ReleaseDTO createdRelease = releaseService.publish(model);\n\n    ConfigPublishEvent event = ConfigPublishEvent.instance();\n    event.withAppId(appId)\n        .withCluster(clusterName)\n        .withNamespace(namespaceName)\n        .withReleaseId(createdRelease.getId())\n        .setNormalPublishEvent(true)\n        .setEnv(Env.valueOf(env));\n\n    publisher.publishEvent(event);\n\n    return createdRelease;\n  }\n","date":"2017-12-15 23:05:19","endLine":68,"groupId":"440","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"createRelease","params":"(@PathVariableStringappId@@PathVariableStringenv@@PathVariableStringclusterName@@PathVariableStringnamespaceName@@RequestBodyNamespaceReleaseModelmodel)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-apollo-10-0.7/blobInfo/CC_OUT/blobs/15/ba981864f510e063959b874f984dd5aa9cb350.src","preCode":"  public ReleaseDTO createRelease(@PathVariable String appId,\n                                  @PathVariable String env, @PathVariable String clusterName,\n                                  @PathVariable String namespaceName, @RequestBody NamespaceReleaseModel model) {\n\n    checkModel(model != null);\n    model.setAppId(appId);\n    model.setEnv(env);\n    model.setClusterName(clusterName);\n    model.setNamespaceName(namespaceName);\n\n    if (model.isEmergencyPublish() && !portalConfig.isEmergencyPublishAllowed(Env.valueOf(env))) {\n      throw new BadRequestException(String.format(\"Env: %s is not supported emergency publish now\", env));\n    }\n\n    ReleaseDTO createdRelease = releaseService.publish(model);\n\n    ConfigPublishEvent event = ConfigPublishEvent.instance();\n    event.withAppId(appId)\n        .withCluster(clusterName)\n        .withNamespace(namespaceName)\n        .withReleaseId(createdRelease.getId())\n        .setNormalPublishEvent(true)\n        .setEnv(Env.valueOf(env));\n\n    publisher.publishEvent(event);\n\n    return createdRelease;\n  }\n","realPath":"apollo-portal/src/main/java/com/ctrip/framework/apollo/portal/controller/ReleaseController.java","repoName":"apollo","snippetEndLine":0,"snippetStartLine":0,"startLine":41,"status":"M"},{"authorDate":"2017-12-15 23:05:19","commitOrder":3,"curCode":"  public ReleaseDTO createGrayRelease(@PathVariable String appId,\n                                      @PathVariable String env, @PathVariable String clusterName,\n                                      @PathVariable String namespaceName, @PathVariable String branchName,\n                                      @RequestBody NamespaceReleaseModel model) {\n\n    checkModel(Objects.nonNull(model));\n    model.setAppId(appId);\n    model.setEnv(env);\n    model.setClusterName(branchName);\n    model.setNamespaceName(namespaceName);\n\n    if (model.isEmergencyPublish() && !portalConfig.isEmergencyPublishAllowed(Env.valueOf(env))) {\n      throw new BadRequestException(String.format(\"Env: %s is not supported emergency publish now\", env));\n    }\n\n    ReleaseDTO createdRelease = releaseService.publish(model);\n\n    ConfigPublishEvent event = ConfigPublishEvent.instance();\n    event.withAppId(appId)\n        .withCluster(clusterName)\n        .withNamespace(namespaceName)\n        .withReleaseId(createdRelease.getId())\n        .setGrayPublishEvent(true)\n        .setEnv(Env.valueOf(env));\n\n    publisher.publishEvent(event);\n\n    return createdRelease;\n  }\n","date":"2017-12-15 23:05:19","endLine":101,"groupId":"440","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"createGrayRelease","params":"(@PathVariableStringappId@@PathVariableStringenv@@PathVariableStringclusterName@@PathVariableStringnamespaceName@@PathVariableStringbranchName@@RequestBodyNamespaceReleaseModelmodel)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-apollo-10-0.7/blobInfo/CC_OUT/blobs/15/ba981864f510e063959b874f984dd5aa9cb350.src","preCode":"  public ReleaseDTO createGrayRelease(@PathVariable String appId,\n                                      @PathVariable String env, @PathVariable String clusterName,\n                                      @PathVariable String namespaceName, @PathVariable String branchName,\n                                      @RequestBody NamespaceReleaseModel model) {\n\n    checkModel(model != null);\n    model.setAppId(appId);\n    model.setEnv(env);\n    model.setClusterName(branchName);\n    model.setNamespaceName(namespaceName);\n\n    if (model.isEmergencyPublish() && !portalConfig.isEmergencyPublishAllowed(Env.valueOf(env))) {\n      throw new BadRequestException(String.format(\"Env: %s is not supported emergency publish now\", env));\n    }\n\n    ReleaseDTO createdRelease = releaseService.publish(model);\n\n    ConfigPublishEvent event = ConfigPublishEvent.instance();\n    event.withAppId(appId)\n        .withCluster(clusterName)\n        .withNamespace(namespaceName)\n        .withReleaseId(createdRelease.getId())\n        .setGrayPublishEvent(true)\n        .setEnv(Env.valueOf(env));\n\n    publisher.publishEvent(event);\n\n    return createdRelease;\n  }\n","realPath":"apollo-portal/src/main/java/com/ctrip/framework/apollo/portal/controller/ReleaseController.java","repoName":"apollo","snippetEndLine":0,"snippetStartLine":0,"startLine":73,"status":"M"}],"commitId":"d0bbf0da482729df42daf769ad5ef84bbfacb210","commitMessage":"@@@Merge pull request #881 from renlulu/xiaohuo.ren-dev\n\nwrite builder function for entity App and optimization some null judge","date":"2017-12-15 23:05:19","modifiedFileCount":"7","status":"M","submitter":"Jason Song"},{"authorTime":"2019-01-19 22:45:44","codes":[{"authorDate":"2019-01-19 22:45:44","commitOrder":4,"curCode":"  public ReleaseDTO createRelease(@PathVariable String appId,\n                                  @PathVariable String env, @PathVariable String clusterName,\n                                  @PathVariable String namespaceName, @RequestBody NamespaceReleaseModel model) {\n    model.setAppId(appId);\n    model.setEnv(env);\n    model.setClusterName(clusterName);\n    model.setNamespaceName(namespaceName);\n\n    if (model.isEmergencyPublish() && !portalConfig.isEmergencyPublishAllowed(Env.valueOf(env))) {\n      throw new BadRequestException(String.format(\"Env: %s is not supported emergency publish now\", env));\n    }\n\n    ReleaseDTO createdRelease = releaseService.publish(model);\n\n    ConfigPublishEvent event = ConfigPublishEvent.instance();\n    event.withAppId(appId)\n        .withCluster(clusterName)\n        .withNamespace(namespaceName)\n        .withReleaseId(createdRelease.getId())\n        .setNormalPublishEvent(true)\n        .setEnv(Env.valueOf(env));\n\n    publisher.publishEvent(event);\n\n    return createdRelease;\n  }\n","date":"2019-01-19 22:45:44","endLine":83,"groupId":"10187","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"createRelease","params":"(@PathVariableStringappId@@PathVariableStringenv@@PathVariableStringclusterName@@PathVariableStringnamespaceName@@RequestBodyNamespaceReleaseModelmodel)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-apollo-10-0.7/blobInfo/CC_OUT/blobs/5d/df0591fd46cbbf058330bc0530deb3d7e86feb.src","preCode":"  public ReleaseDTO createRelease(@PathVariable String appId,\n                                  @PathVariable String env, @PathVariable String clusterName,\n                                  @PathVariable String namespaceName, @RequestBody NamespaceReleaseModel model) {\n\n    checkModel(Objects.nonNull(model));\n    model.setAppId(appId);\n    model.setEnv(env);\n    model.setClusterName(clusterName);\n    model.setNamespaceName(namespaceName);\n\n    if (model.isEmergencyPublish() && !portalConfig.isEmergencyPublishAllowed(Env.valueOf(env))) {\n      throw new BadRequestException(String.format(\"Env: %s is not supported emergency publish now\", env));\n    }\n\n    ReleaseDTO createdRelease = releaseService.publish(model);\n\n    ConfigPublishEvent event = ConfigPublishEvent.instance();\n    event.withAppId(appId)\n        .withCluster(clusterName)\n        .withNamespace(namespaceName)\n        .withReleaseId(createdRelease.getId())\n        .setNormalPublishEvent(true)\n        .setEnv(Env.valueOf(env));\n\n    publisher.publishEvent(event);\n\n    return createdRelease;\n  }\n","realPath":"apollo-portal/src/main/java/com/ctrip/framework/apollo/portal/controller/ReleaseController.java","repoName":"apollo","snippetEndLine":0,"snippetStartLine":0,"startLine":58,"status":"M"},{"authorDate":"2019-01-19 22:45:44","commitOrder":4,"curCode":"  public ReleaseDTO createGrayRelease(@PathVariable String appId,\n                                      @PathVariable String env, @PathVariable String clusterName,\n                                      @PathVariable String namespaceName, @PathVariable String branchName,\n                                      @RequestBody NamespaceReleaseModel model) {\n    model.setAppId(appId);\n    model.setEnv(env);\n    model.setClusterName(branchName);\n    model.setNamespaceName(namespaceName);\n\n    if (model.isEmergencyPublish() && !portalConfig.isEmergencyPublishAllowed(Env.valueOf(env))) {\n      throw new BadRequestException(String.format(\"Env: %s is not supported emergency publish now\", env));\n    }\n\n    ReleaseDTO createdRelease = releaseService.publish(model);\n\n    ConfigPublishEvent event = ConfigPublishEvent.instance();\n    event.withAppId(appId)\n        .withCluster(clusterName)\n        .withNamespace(namespaceName)\n        .withReleaseId(createdRelease.getId())\n        .setGrayPublishEvent(true)\n        .setEnv(Env.valueOf(env));\n\n    publisher.publishEvent(event);\n\n    return createdRelease;\n  }\n","date":"2019-01-19 22:45:44","endLine":113,"groupId":"10187","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"createGrayRelease","params":"(@PathVariableStringappId@@PathVariableStringenv@@PathVariableStringclusterName@@PathVariableStringnamespaceName@@PathVariableStringbranchName@@RequestBodyNamespaceReleaseModelmodel)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-apollo-10-0.7/blobInfo/CC_OUT/blobs/5d/df0591fd46cbbf058330bc0530deb3d7e86feb.src","preCode":"  public ReleaseDTO createGrayRelease(@PathVariable String appId,\n                                      @PathVariable String env, @PathVariable String clusterName,\n                                      @PathVariable String namespaceName, @PathVariable String branchName,\n                                      @RequestBody NamespaceReleaseModel model) {\n\n    checkModel(Objects.nonNull(model));\n    model.setAppId(appId);\n    model.setEnv(env);\n    model.setClusterName(branchName);\n    model.setNamespaceName(namespaceName);\n\n    if (model.isEmergencyPublish() && !portalConfig.isEmergencyPublishAllowed(Env.valueOf(env))) {\n      throw new BadRequestException(String.format(\"Env: %s is not supported emergency publish now\", env));\n    }\n\n    ReleaseDTO createdRelease = releaseService.publish(model);\n\n    ConfigPublishEvent event = ConfigPublishEvent.instance();\n    event.withAppId(appId)\n        .withCluster(clusterName)\n        .withNamespace(namespaceName)\n        .withReleaseId(createdRelease.getId())\n        .setGrayPublishEvent(true)\n        .setEnv(Env.valueOf(env));\n\n    publisher.publishEvent(event);\n\n    return createdRelease;\n  }\n","realPath":"apollo-portal/src/main/java/com/ctrip/framework/apollo/portal/controller/ReleaseController.java","repoName":"apollo","snippetEndLine":0,"snippetStartLine":0,"startLine":87,"status":"M"}],"commitId":"f7553534d336866cc0ce192d1fec43a0de78589e","commitMessage":"@@@Enhancement: validation (#1869)\n\n* Enhancement: validates http parameters using javax.validation api\n\n* remove unnecessary validation\n","date":"2019-01-19 22:45:44","modifiedFileCount":"12","status":"M","submitter":"kezhenxu94"}]
