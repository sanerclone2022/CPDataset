[{"authorTime":"2016-12-07 10:52:26","codes":[{"authorDate":"2017-01-16 18:22:30","commitOrder":3,"curCode":"  private void scanNewAppNamespaces() {\n    Transaction transaction = Tracer.newTransaction(\"Apollo.AppNamespaceServiceWithCache\",\n        \"scanNewAppNamespaces\");\n    try {\n      this.loadNewAppNamespaces();\n      transaction.setStatus(Transaction.SUCCESS);\n    } catch (Throwable ex) {\n      transaction.setStatus(ex);\n      logger.error(\"Load new app namespaces failed\", ex);\n    } finally {\n      transaction.complete();\n    }\n  }\n","date":"2017-01-16 18:22:30","endLine":137,"groupId":"894","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"scanNewAppNamespaces","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-apollo-10-0.7/blobInfo/CC_OUT/blobs/23/ea1408c1f8d548541a2b8ca8f1d488ad218540.src","preCode":"  private void scanNewAppNamespaces() {\n    Transaction transaction = Tracer.newTransaction(\"Apollo.AppNamespaceServiceWithCache\",\n        \"scanNewAppNamespaces\");\n    try {\n      this.loadNewAppNamespaces();\n      transaction.setStatus(Transaction.SUCCESS);\n    } catch (Throwable ex) {\n      transaction.setStatus(ex);\n      logger.error(\"Load new app namespaces failed\", ex);\n    } finally {\n      transaction.complete();\n    }\n  }\n","realPath":"apollo-configservice/src/main/java/com/ctrip/framework/apollo/configservice/service/AppNamespaceServiceWithCache.java","repoName":"apollo","snippetEndLine":0,"snippetStartLine":0,"startLine":125,"status":"B"},{"authorDate":"2016-12-07 10:52:26","commitOrder":3,"curCode":"  public void afterPropertiesSet() throws Exception {\n    populateDataBaseInterval();\n    maxIdScanned = loadLargestMessageId();\n    executorService.scheduleWithFixedDelay((Runnable) () -> {\n      Transaction transaction = Tracer.newTransaction(\"Apollo.ReleaseMessageScanner\", \"scanMessage\");\n      try {\n        scanMessages();\n        transaction.setStatus(Transaction.SUCCESS);\n      } catch (Throwable ex) {\n        transaction.setStatus(ex);\n        logger.error(\"Scan and send message failed\", ex);\n      } finally {\n        transaction.complete();\n      }\n    }, getDatabaseScanIntervalMs(), getDatabaseScanIntervalMs(), TimeUnit.MILLISECONDS);\n\n  }\n","date":"2016-12-07 10:52:26","endLine":62,"groupId":"894","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"afterPropertiesSet","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-apollo-10-0.7/blobInfo/CC_OUT/blobs/3c/501609dfb9f6e350575299512cc795ad9fd58a.src","preCode":"  public void afterPropertiesSet() throws Exception {\n    populateDataBaseInterval();\n    maxIdScanned = loadLargestMessageId();\n    executorService.scheduleWithFixedDelay((Runnable) () -> {\n      Transaction transaction = Tracer.newTransaction(\"Apollo.ReleaseMessageScanner\", \"scanMessage\");\n      try {\n        scanMessages();\n        transaction.setStatus(Transaction.SUCCESS);\n      } catch (Throwable ex) {\n        transaction.setStatus(ex);\n        logger.error(\"Scan and send message failed\", ex);\n      } finally {\n        transaction.complete();\n      }\n    }, getDatabaseScanIntervalMs(), getDatabaseScanIntervalMs(), TimeUnit.MILLISECONDS);\n\n  }\n","realPath":"apollo-biz/src/main/java/com/ctrip/framework/apollo/biz/message/ReleaseMessageScanner.java","repoName":"apollo","snippetEndLine":0,"snippetStartLine":0,"startLine":46,"status":"NB"}],"commitId":"4949eb5584905f0d77dad00669d9b7fc645999ce","commitMessage":"@@@Merge pull request #518 from nobodyiam/optimize-notification-controller-merge\n\nUse cache for notification controller","date":"2017-01-16 18:22:30","modifiedFileCount":"14","status":"M","submitter":"??"},{"authorTime":"2017-08-27 23:57:50","codes":[{"authorDate":"2017-01-16 18:22:30","commitOrder":4,"curCode":"  private void scanNewAppNamespaces() {\n    Transaction transaction = Tracer.newTransaction(\"Apollo.AppNamespaceServiceWithCache\",\n        \"scanNewAppNamespaces\");\n    try {\n      this.loadNewAppNamespaces();\n      transaction.setStatus(Transaction.SUCCESS);\n    } catch (Throwable ex) {\n      transaction.setStatus(ex);\n      logger.error(\"Load new app namespaces failed\", ex);\n    } finally {\n      transaction.complete();\n    }\n  }\n","date":"2017-01-16 18:22:30","endLine":137,"groupId":"894","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"scanNewAppNamespaces","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-apollo-10-0.7/blobInfo/CC_OUT/blobs/23/ea1408c1f8d548541a2b8ca8f1d488ad218540.src","preCode":"  private void scanNewAppNamespaces() {\n    Transaction transaction = Tracer.newTransaction(\"Apollo.AppNamespaceServiceWithCache\",\n        \"scanNewAppNamespaces\");\n    try {\n      this.loadNewAppNamespaces();\n      transaction.setStatus(Transaction.SUCCESS);\n    } catch (Throwable ex) {\n      transaction.setStatus(ex);\n      logger.error(\"Load new app namespaces failed\", ex);\n    } finally {\n      transaction.complete();\n    }\n  }\n","realPath":"apollo-configservice/src/main/java/com/ctrip/framework/apollo/configservice/service/AppNamespaceServiceWithCache.java","repoName":"apollo","snippetEndLine":0,"snippetStartLine":0,"startLine":125,"status":"N"},{"authorDate":"2017-08-27 23:57:50","commitOrder":4,"curCode":"  public void afterPropertiesSet() throws Exception {\n    databaseScanInterval = bizConfig.releaseMessageScanIntervalInMilli();\n    maxIdScanned = loadLargestMessageId();\n    executorService.scheduleWithFixedDelay((Runnable) () -> {\n      Transaction transaction = Tracer.newTransaction(\"Apollo.ReleaseMessageScanner\", \"scanMessage\");\n      try {\n        scanMessages();\n        transaction.setStatus(Transaction.SUCCESS);\n      } catch (Throwable ex) {\n        transaction.setStatus(ex);\n        logger.error(\"Scan and send message failed\", ex);\n      } finally {\n        transaction.complete();\n      }\n    }, databaseScanInterval, databaseScanInterval, TimeUnit.MILLISECONDS);\n\n  }\n","date":"2017-08-27 23:57:50","endLine":59,"groupId":"894","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"afterPropertiesSet","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-apollo-10-0.7/blobInfo/CC_OUT/blobs/9a/10d98f6b5c2456c1bffe2eb236e2b98a8e7119.src","preCode":"  public void afterPropertiesSet() throws Exception {\n    populateDataBaseInterval();\n    maxIdScanned = loadLargestMessageId();\n    executorService.scheduleWithFixedDelay((Runnable) () -> {\n      Transaction transaction = Tracer.newTransaction(\"Apollo.ReleaseMessageScanner\", \"scanMessage\");\n      try {\n        scanMessages();\n        transaction.setStatus(Transaction.SUCCESS);\n      } catch (Throwable ex) {\n        transaction.setStatus(ex);\n        logger.error(\"Scan and send message failed\", ex);\n      } finally {\n        transaction.complete();\n      }\n    }, getDatabaseScanIntervalMs(), getDatabaseScanIntervalMs(), TimeUnit.MILLISECONDS);\n\n  }\n","realPath":"apollo-biz/src/main/java/com/ctrip/framework/apollo/biz/message/ReleaseMessageScanner.java","repoName":"apollo","snippetEndLine":0,"snippetStartLine":0,"startLine":43,"status":"M"}],"commitId":"2a8348286501413e5768f984cbfe45f2b9dbd5f1","commitMessage":"@@@Merge pull request #719 from nobodyiam/configservice-cache-merge\n\nConfig service cache and namespace name normalization","date":"2017-08-27 23:57:50","modifiedFileCount":"32","status":"M","submitter":"??"},{"authorTime":"2020-09-11 20:01:31","codes":[{"authorDate":"2017-01-16 18:22:30","commitOrder":5,"curCode":"  private void scanNewAppNamespaces() {\n    Transaction transaction = Tracer.newTransaction(\"Apollo.AppNamespaceServiceWithCache\",\n        \"scanNewAppNamespaces\");\n    try {\n      this.loadNewAppNamespaces();\n      transaction.setStatus(Transaction.SUCCESS);\n    } catch (Throwable ex) {\n      transaction.setStatus(ex);\n      logger.error(\"Load new app namespaces failed\", ex);\n    } finally {\n      transaction.complete();\n    }\n  }\n","date":"2017-01-16 18:22:30","endLine":137,"groupId":"894","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"scanNewAppNamespaces","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-apollo-10-0.7/blobInfo/CC_OUT/blobs/23/ea1408c1f8d548541a2b8ca8f1d488ad218540.src","preCode":"  private void scanNewAppNamespaces() {\n    Transaction transaction = Tracer.newTransaction(\"Apollo.AppNamespaceServiceWithCache\",\n        \"scanNewAppNamespaces\");\n    try {\n      this.loadNewAppNamespaces();\n      transaction.setStatus(Transaction.SUCCESS);\n    } catch (Throwable ex) {\n      transaction.setStatus(ex);\n      logger.error(\"Load new app namespaces failed\", ex);\n    } finally {\n      transaction.complete();\n    }\n  }\n","realPath":"apollo-configservice/src/main/java/com/ctrip/framework/apollo/configservice/service/AppNamespaceServiceWithCache.java","repoName":"apollo","snippetEndLine":0,"snippetStartLine":0,"startLine":125,"status":"N"},{"authorDate":"2020-09-11 20:01:31","commitOrder":5,"curCode":"  public void afterPropertiesSet() throws Exception {\n    databaseScanInterval = bizConfig.releaseMessageScanIntervalInMilli();\n    maxIdScanned = loadLargestMessageId();\n    executorService.scheduleWithFixedDelay(() -> {\n      Transaction transaction = Tracer.newTransaction(\"Apollo.ReleaseMessageScanner\", \"scanMessage\");\n      try {\n        scanMessages();\n        transaction.setStatus(Transaction.SUCCESS);\n      } catch (Throwable ex) {\n        transaction.setStatus(ex);\n        logger.error(\"Scan and send message failed\", ex);\n      } finally {\n        transaction.complete();\n      }\n    }, databaseScanInterval, databaseScanInterval, TimeUnit.MILLISECONDS);\n\n  }\n","date":"2020-09-11 20:01:31","endLine":59,"groupId":"894","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"afterPropertiesSet","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-apollo-10-0.7/blobInfo/CC_OUT/blobs/5a/f42e8c01823fa1e4baddf820352b81c9044be9.src","preCode":"  public void afterPropertiesSet() throws Exception {\n    databaseScanInterval = bizConfig.releaseMessageScanIntervalInMilli();\n    maxIdScanned = loadLargestMessageId();\n    executorService.scheduleWithFixedDelay((Runnable) () -> {\n      Transaction transaction = Tracer.newTransaction(\"Apollo.ReleaseMessageScanner\", \"scanMessage\");\n      try {\n        scanMessages();\n        transaction.setStatus(Transaction.SUCCESS);\n      } catch (Throwable ex) {\n        transaction.setStatus(ex);\n        logger.error(\"Scan and send message failed\", ex);\n      } finally {\n        transaction.complete();\n      }\n    }, databaseScanInterval, databaseScanInterval, TimeUnit.MILLISECONDS);\n\n  }\n","realPath":"apollo-biz/src/main/java/com/ctrip/framework/apollo/biz/message/ReleaseMessageScanner.java","repoName":"apollo","snippetEndLine":0,"snippetStartLine":0,"startLine":43,"status":"M"}],"commitId":"e321a8e7f315b2be45d38923e9bec3e3145332fe","commitMessage":"@@@Simplify code (#3290)\n\n","date":"2020-09-11 20:01:31","modifiedFileCount":"87","status":"M","submitter":"waters"},{"authorTime":"2021-07-11 16:30:45","codes":[{"authorDate":"2017-01-16 18:22:30","commitOrder":6,"curCode":"  private void scanNewAppNamespaces() {\n    Transaction transaction = Tracer.newTransaction(\"Apollo.AppNamespaceServiceWithCache\",\n        \"scanNewAppNamespaces\");\n    try {\n      this.loadNewAppNamespaces();\n      transaction.setStatus(Transaction.SUCCESS);\n    } catch (Throwable ex) {\n      transaction.setStatus(ex);\n      logger.error(\"Load new app namespaces failed\", ex);\n    } finally {\n      transaction.complete();\n    }\n  }\n","date":"2017-01-16 18:22:30","endLine":137,"groupId":"10598","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"scanNewAppNamespaces","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-apollo-10-0.7/blobInfo/CC_OUT/blobs/23/ea1408c1f8d548541a2b8ca8f1d488ad218540.src","preCode":"  private void scanNewAppNamespaces() {\n    Transaction transaction = Tracer.newTransaction(\"Apollo.AppNamespaceServiceWithCache\",\n        \"scanNewAppNamespaces\");\n    try {\n      this.loadNewAppNamespaces();\n      transaction.setStatus(Transaction.SUCCESS);\n    } catch (Throwable ex) {\n      transaction.setStatus(ex);\n      logger.error(\"Load new app namespaces failed\", ex);\n    } finally {\n      transaction.complete();\n    }\n  }\n","realPath":"apollo-configservice/src/main/java/com/ctrip/framework/apollo/configservice/service/AppNamespaceServiceWithCache.java","repoName":"apollo","snippetEndLine":0,"snippetStartLine":0,"startLine":125,"status":"N"},{"authorDate":"2021-07-11 16:30:45","commitOrder":6,"curCode":"  public void afterPropertiesSet() throws Exception {\n    databaseScanInterval = bizConfig.releaseMessageScanIntervalInMilli();\n    maxIdScanned = loadLargestMessageId();\n    executorService.scheduleWithFixedDelay(() -> {\n      Transaction transaction = Tracer.newTransaction(\"Apollo.ReleaseMessageScanner\", \"scanMessage\");\n      try {\n        scanMissingMessages();\n        scanMessages();\n        transaction.setStatus(Transaction.SUCCESS);\n      } catch (Throwable ex) {\n        transaction.setStatus(ex);\n        logger.error(\"Scan and send message failed\", ex);\n      } finally {\n        transaction.complete();\n      }\n    }, databaseScanInterval, databaseScanInterval, TimeUnit.MILLISECONDS);\n\n  }\n","date":"2021-07-22 08:09:31","endLine":84,"groupId":"10598","id":8,"instanceNumber":2,"isCurCommit":1,"methodName":"afterPropertiesSet","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-apollo-10-0.7/blobInfo/CC_OUT/blobs/ca/8890c62c8ece913d9ec7a564d27db76fcbe6dc.src","preCode":"  public void afterPropertiesSet() throws Exception {\n    databaseScanInterval = bizConfig.releaseMessageScanIntervalInMilli();\n    maxIdScanned = loadLargestMessageId();\n    executorService.scheduleWithFixedDelay(() -> {\n      Transaction transaction = Tracer.newTransaction(\"Apollo.ReleaseMessageScanner\", \"scanMessage\");\n      try {\n        scanMessages();\n        transaction.setStatus(Transaction.SUCCESS);\n      } catch (Throwable ex) {\n        transaction.setStatus(ex);\n        logger.error(\"Scan and send message failed\", ex);\n      } finally {\n        transaction.complete();\n      }\n    }, databaseScanInterval, databaseScanInterval, TimeUnit.MILLISECONDS);\n\n  }\n","realPath":"apollo-biz/src/main/java/com/ctrip/framework/apollo/biz/message/ReleaseMessageScanner.java","repoName":"apollo","snippetEndLine":0,"snippetStartLine":0,"startLine":67,"status":"M"}],"commitId":"f9c69dbb181e9cb6c5cb0ee08ae915a52430c23a","commitMessage":"@@@fix the issue that release messages might be missed in certain scenarios\n","date":"2021-07-22 08:09:31","modifiedFileCount":"2","status":"M","submitter":"Jason Song"}]
