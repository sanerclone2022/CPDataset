[{"authorTime":"2017-01-16 18:22:30","codes":[{"authorDate":"2017-01-16 18:22:30","commitOrder":1,"curCode":"  public void testWhenHasReleaseMsgAndHasRepeatMsg() throws Exception {\n    String someMsgContent = \"msg1\";\n    ReleaseMessage someMsg = assembleReleaseMsg(1, someMsgContent);\n    String anotherMsgContent = \"msg2\";\n    ReleaseMessage anotherMsg = assembleReleaseMsg(2, anotherMsgContent);\n    ReleaseMessage anotherRepeatMsg = assembleReleaseMsg(3, anotherMsgContent);\n\n    when(releaseMessageRepository.findFirst500ByIdGreaterThanOrderByIdAsc(0L))\n        .thenReturn(Arrays.asList(someMsg, anotherMsg, anotherRepeatMsg));\n\n    releaseMessageServiceWithCache.afterPropertiesSet();\n\n    verify(bizConfig).releaseMessageCacheScanInterval();\n\n    ReleaseMessage latestReleaseMsg =\n        releaseMessageServiceWithCache\n            .findLatestReleaseMessageForMessages(Sets.newHashSet(someMsgContent, anotherMsgContent));\n\n    assertNotNull(latestReleaseMsg);\n    assertEquals(3, latestReleaseMsg.getId());\n    assertEquals(anotherMsgContent, latestReleaseMsg.getMessage());\n\n    List<ReleaseMessage> latestReleaseMsgGroupByMsgContent =\n        releaseMessageServiceWithCache\n            .findLatestReleaseMessagesGroupByMessages(Sets.newHashSet(someMsgContent, anotherMsgContent));\n\n    assertEquals(2, latestReleaseMsgGroupByMsgContent.size());\n    assertEquals(1, latestReleaseMsgGroupByMsgContent.get(1).getId());\n    assertEquals(someMsgContent, latestReleaseMsgGroupByMsgContent.get(1).getMessage());\n    assertEquals(3, latestReleaseMsgGroupByMsgContent.get(0).getId());\n    assertEquals(anotherMsgContent, latestReleaseMsgGroupByMsgContent.get(0).getMessage());\n\n  }\n","date":"2017-01-16 18:22:30","endLine":112,"groupId":"1218","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testWhenHasReleaseMsgAndHasRepeatMsg","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-apollo-10-0.7/blobInfo/CC_OUT/blobs/bf/f9dbc94b118e1d76582d021de15904d3e3c170.src","preCode":"  public void testWhenHasReleaseMsgAndHasRepeatMsg() throws Exception {\n    String someMsgContent = \"msg1\";\n    ReleaseMessage someMsg = assembleReleaseMsg(1, someMsgContent);\n    String anotherMsgContent = \"msg2\";\n    ReleaseMessage anotherMsg = assembleReleaseMsg(2, anotherMsgContent);\n    ReleaseMessage anotherRepeatMsg = assembleReleaseMsg(3, anotherMsgContent);\n\n    when(releaseMessageRepository.findFirst500ByIdGreaterThanOrderByIdAsc(0L))\n        .thenReturn(Arrays.asList(someMsg, anotherMsg, anotherRepeatMsg));\n\n    releaseMessageServiceWithCache.afterPropertiesSet();\n\n    verify(bizConfig).releaseMessageCacheScanInterval();\n\n    ReleaseMessage latestReleaseMsg =\n        releaseMessageServiceWithCache\n            .findLatestReleaseMessageForMessages(Sets.newHashSet(someMsgContent, anotherMsgContent));\n\n    assertNotNull(latestReleaseMsg);\n    assertEquals(3, latestReleaseMsg.getId());\n    assertEquals(anotherMsgContent, latestReleaseMsg.getMessage());\n\n    List<ReleaseMessage> latestReleaseMsgGroupByMsgContent =\n        releaseMessageServiceWithCache\n            .findLatestReleaseMessagesGroupByMessages(Sets.newHashSet(someMsgContent, anotherMsgContent));\n\n    assertEquals(2, latestReleaseMsgGroupByMsgContent.size());\n    assertEquals(1, latestReleaseMsgGroupByMsgContent.get(1).getId());\n    assertEquals(someMsgContent, latestReleaseMsgGroupByMsgContent.get(1).getMessage());\n    assertEquals(3, latestReleaseMsgGroupByMsgContent.get(0).getId());\n    assertEquals(anotherMsgContent, latestReleaseMsgGroupByMsgContent.get(0).getMessage());\n\n  }\n","realPath":"apollo-configservice/src/test/java/com/ctrip/framework/apollo/configservice/service/ReleaseMessageServiceWithCacheTest.java","repoName":"apollo","snippetEndLine":0,"snippetStartLine":0,"startLine":80,"status":"B"},{"authorDate":"2017-01-16 18:22:30","commitOrder":1,"curCode":"  public void testWhenReleaseMsgSizeBiggerThan500() throws Exception {\n    String someMsgContent = \"msg1\";\n    List<ReleaseMessage> firstBatchReleaseMsg = new ArrayList<>(500);\n    for (int i = 0; i < 500; i++) {\n      firstBatchReleaseMsg.add(assembleReleaseMsg(i + 1, someMsgContent));\n    }\n\n    String antherMsgContent = \"msg2\";\n    ReleaseMessage antherMsg = assembleReleaseMsg(501, antherMsgContent);\n\n    when(releaseMessageRepository.findFirst500ByIdGreaterThanOrderByIdAsc(0L))\n        .thenReturn(firstBatchReleaseMsg);\n    when(releaseMessageRepository.findFirst500ByIdGreaterThanOrderByIdAsc(500L))\n        .thenReturn(Collections.singletonList(antherMsg));\n\n    releaseMessageServiceWithCache.afterPropertiesSet();\n\n    verify(releaseMessageRepository, times(1)).findFirst500ByIdGreaterThanOrderByIdAsc(500L);\n\n    ReleaseMessage latestReleaseMsg =\n        releaseMessageServiceWithCache\n            .findLatestReleaseMessageForMessages(Sets.newHashSet(someMsgContent, antherMsgContent));\n\n    assertNotNull(latestReleaseMsg);\n    assertEquals(501, latestReleaseMsg.getId());\n    assertEquals(antherMsgContent, latestReleaseMsg.getMessage());\n\n    List<ReleaseMessage> latestReleaseMsgGroupByMsgContent =\n        releaseMessageServiceWithCache\n            .findLatestReleaseMessagesGroupByMessages(Sets.newHashSet(someMsgContent, antherMsgContent));\n\n    assertEquals(2, latestReleaseMsgGroupByMsgContent.size());\n    assertEquals(500, latestReleaseMsgGroupByMsgContent.get(1).getId());\n    assertEquals(501, latestReleaseMsgGroupByMsgContent.get(0).getId());\n  }\n","date":"2017-01-16 18:22:30","endLine":149,"groupId":"485","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testWhenReleaseMsgSizeBiggerThan500","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-apollo-10-0.7/blobInfo/CC_OUT/blobs/bf/f9dbc94b118e1d76582d021de15904d3e3c170.src","preCode":"  public void testWhenReleaseMsgSizeBiggerThan500() throws Exception {\n    String someMsgContent = \"msg1\";\n    List<ReleaseMessage> firstBatchReleaseMsg = new ArrayList<>(500);\n    for (int i = 0; i < 500; i++) {\n      firstBatchReleaseMsg.add(assembleReleaseMsg(i + 1, someMsgContent));\n    }\n\n    String antherMsgContent = \"msg2\";\n    ReleaseMessage antherMsg = assembleReleaseMsg(501, antherMsgContent);\n\n    when(releaseMessageRepository.findFirst500ByIdGreaterThanOrderByIdAsc(0L))\n        .thenReturn(firstBatchReleaseMsg);\n    when(releaseMessageRepository.findFirst500ByIdGreaterThanOrderByIdAsc(500L))\n        .thenReturn(Collections.singletonList(antherMsg));\n\n    releaseMessageServiceWithCache.afterPropertiesSet();\n\n    verify(releaseMessageRepository, times(1)).findFirst500ByIdGreaterThanOrderByIdAsc(500L);\n\n    ReleaseMessage latestReleaseMsg =\n        releaseMessageServiceWithCache\n            .findLatestReleaseMessageForMessages(Sets.newHashSet(someMsgContent, antherMsgContent));\n\n    assertNotNull(latestReleaseMsg);\n    assertEquals(501, latestReleaseMsg.getId());\n    assertEquals(antherMsgContent, latestReleaseMsg.getMessage());\n\n    List<ReleaseMessage> latestReleaseMsgGroupByMsgContent =\n        releaseMessageServiceWithCache\n            .findLatestReleaseMessagesGroupByMessages(Sets.newHashSet(someMsgContent, antherMsgContent));\n\n    assertEquals(2, latestReleaseMsgGroupByMsgContent.size());\n    assertEquals(500, latestReleaseMsgGroupByMsgContent.get(1).getId());\n    assertEquals(501, latestReleaseMsgGroupByMsgContent.get(0).getId());\n  }\n","realPath":"apollo-configservice/src/test/java/com/ctrip/framework/apollo/configservice/service/ReleaseMessageServiceWithCacheTest.java","repoName":"apollo","snippetEndLine":0,"snippetStartLine":0,"startLine":115,"status":"B"}],"commitId":"4949eb5584905f0d77dad00669d9b7fc645999ce","commitMessage":"@@@Merge pull request #518 from nobodyiam/optimize-notification-controller-merge\n\nUse cache for notification controller","date":"2017-01-16 18:22:30","modifiedFileCount":"14","status":"B","submitter":"??"},{"authorTime":"2017-01-16 18:22:30","codes":[{"authorDate":"2020-02-08 10:23:56","commitOrder":2,"curCode":"  public void testWhenHasReleaseMsgAndHasRepeatMsg() throws Exception {\n    String someMsgContent = \"msg1\";\n    ReleaseMessage someMsg = assembleReleaseMsg(1, someMsgContent);\n    String anotherMsgContent = \"msg2\";\n    ReleaseMessage anotherMsg = assembleReleaseMsg(2, anotherMsgContent);\n    ReleaseMessage anotherRepeatMsg = assembleReleaseMsg(3, anotherMsgContent);\n\n    when(releaseMessageRepository.findFirst500ByIdGreaterThanOrderByIdAsc(0L))\n        .thenReturn(Arrays.asList(someMsg, anotherMsg, anotherRepeatMsg));\n\n    releaseMessageServiceWithCache.afterPropertiesSet();\n\n    verify(bizConfig).releaseMessageCacheScanInterval();\n\n    ReleaseMessage latestReleaseMsg =\n        releaseMessageServiceWithCache\n            .findLatestReleaseMessageForMessages(Sets.newHashSet(someMsgContent, anotherMsgContent));\n\n    assertNotNull(latestReleaseMsg);\n    assertEquals(3, latestReleaseMsg.getId());\n    assertEquals(anotherMsgContent, latestReleaseMsg.getMessage());\n\n    List<ReleaseMessage> latestReleaseMsgGroupByMsgContent =\n        releaseMessageServiceWithCache\n            .findLatestReleaseMessagesGroupByMessages(Sets.newLinkedHashSet(\n                    Arrays.asList(someMsgContent, anotherMsgContent))\n            );\n\n    assertEquals(2, latestReleaseMsgGroupByMsgContent.size());\n    assertEquals(3, latestReleaseMsgGroupByMsgContent.get(1).getId());\n    assertEquals(anotherMsgContent, latestReleaseMsgGroupByMsgContent.get(1).getMessage());\n    assertEquals(1, latestReleaseMsgGroupByMsgContent.get(0).getId());\n    assertEquals(someMsgContent, latestReleaseMsgGroupByMsgContent.get(0).getMessage());\n\n  }\n","date":"2020-02-08 10:23:56","endLine":107,"groupId":"10466","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testWhenHasReleaseMsgAndHasRepeatMsg","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-apollo-10-0.7/blobInfo/CC_OUT/blobs/07/801cffdb11ac185a52c7356eb0cbb22cf66cba.src","preCode":"  public void testWhenHasReleaseMsgAndHasRepeatMsg() throws Exception {\n    String someMsgContent = \"msg1\";\n    ReleaseMessage someMsg = assembleReleaseMsg(1, someMsgContent);\n    String anotherMsgContent = \"msg2\";\n    ReleaseMessage anotherMsg = assembleReleaseMsg(2, anotherMsgContent);\n    ReleaseMessage anotherRepeatMsg = assembleReleaseMsg(3, anotherMsgContent);\n\n    when(releaseMessageRepository.findFirst500ByIdGreaterThanOrderByIdAsc(0L))\n        .thenReturn(Arrays.asList(someMsg, anotherMsg, anotherRepeatMsg));\n\n    releaseMessageServiceWithCache.afterPropertiesSet();\n\n    verify(bizConfig).releaseMessageCacheScanInterval();\n\n    ReleaseMessage latestReleaseMsg =\n        releaseMessageServiceWithCache\n            .findLatestReleaseMessageForMessages(Sets.newHashSet(someMsgContent, anotherMsgContent));\n\n    assertNotNull(latestReleaseMsg);\n    assertEquals(3, latestReleaseMsg.getId());\n    assertEquals(anotherMsgContent, latestReleaseMsg.getMessage());\n\n    List<ReleaseMessage> latestReleaseMsgGroupByMsgContent =\n        releaseMessageServiceWithCache\n            .findLatestReleaseMessagesGroupByMessages(Sets.newHashSet(someMsgContent, anotherMsgContent));\n\n    assertEquals(2, latestReleaseMsgGroupByMsgContent.size());\n    assertEquals(1, latestReleaseMsgGroupByMsgContent.get(1).getId());\n    assertEquals(someMsgContent, latestReleaseMsgGroupByMsgContent.get(1).getMessage());\n    assertEquals(3, latestReleaseMsgGroupByMsgContent.get(0).getId());\n    assertEquals(anotherMsgContent, latestReleaseMsgGroupByMsgContent.get(0).getMessage());\n\n  }\n","realPath":"apollo-configservice/src/test/java/com/ctrip/framework/apollo/configservice/service/ReleaseMessageServiceWithCacheTest.java","repoName":"apollo","snippetEndLine":0,"snippetStartLine":0,"startLine":73,"status":"M"},{"authorDate":"2017-01-16 18:22:30","commitOrder":2,"curCode":"  public void testWhenReleaseMsgSizeBiggerThan500() throws Exception {\n    String someMsgContent = \"msg1\";\n    List<ReleaseMessage> firstBatchReleaseMsg = new ArrayList<>(500);\n    for (int i = 0; i < 500; i++) {\n      firstBatchReleaseMsg.add(assembleReleaseMsg(i + 1, someMsgContent));\n    }\n\n    String antherMsgContent = \"msg2\";\n    ReleaseMessage antherMsg = assembleReleaseMsg(501, antherMsgContent);\n\n    when(releaseMessageRepository.findFirst500ByIdGreaterThanOrderByIdAsc(0L))\n        .thenReturn(firstBatchReleaseMsg);\n    when(releaseMessageRepository.findFirst500ByIdGreaterThanOrderByIdAsc(500L))\n        .thenReturn(Collections.singletonList(antherMsg));\n\n    releaseMessageServiceWithCache.afterPropertiesSet();\n\n    verify(releaseMessageRepository, times(1)).findFirst500ByIdGreaterThanOrderByIdAsc(500L);\n\n    ReleaseMessage latestReleaseMsg =\n        releaseMessageServiceWithCache\n            .findLatestReleaseMessageForMessages(Sets.newHashSet(someMsgContent, antherMsgContent));\n\n    assertNotNull(latestReleaseMsg);\n    assertEquals(501, latestReleaseMsg.getId());\n    assertEquals(antherMsgContent, latestReleaseMsg.getMessage());\n\n    List<ReleaseMessage> latestReleaseMsgGroupByMsgContent =\n        releaseMessageServiceWithCache\n            .findLatestReleaseMessagesGroupByMessages(Sets.newHashSet(someMsgContent, antherMsgContent));\n\n    assertEquals(2, latestReleaseMsgGroupByMsgContent.size());\n    assertEquals(500, latestReleaseMsgGroupByMsgContent.get(1).getId());\n    assertEquals(501, latestReleaseMsgGroupByMsgContent.get(0).getId());\n  }\n","date":"2017-01-16 18:22:30","endLine":149,"groupId":"10466","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testWhenReleaseMsgSizeBiggerThan500","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-apollo-10-0.7/blobInfo/CC_OUT/blobs/bf/f9dbc94b118e1d76582d021de15904d3e3c170.src","preCode":"  public void testWhenReleaseMsgSizeBiggerThan500() throws Exception {\n    String someMsgContent = \"msg1\";\n    List<ReleaseMessage> firstBatchReleaseMsg = new ArrayList<>(500);\n    for (int i = 0; i < 500; i++) {\n      firstBatchReleaseMsg.add(assembleReleaseMsg(i + 1, someMsgContent));\n    }\n\n    String antherMsgContent = \"msg2\";\n    ReleaseMessage antherMsg = assembleReleaseMsg(501, antherMsgContent);\n\n    when(releaseMessageRepository.findFirst500ByIdGreaterThanOrderByIdAsc(0L))\n        .thenReturn(firstBatchReleaseMsg);\n    when(releaseMessageRepository.findFirst500ByIdGreaterThanOrderByIdAsc(500L))\n        .thenReturn(Collections.singletonList(antherMsg));\n\n    releaseMessageServiceWithCache.afterPropertiesSet();\n\n    verify(releaseMessageRepository, times(1)).findFirst500ByIdGreaterThanOrderByIdAsc(500L);\n\n    ReleaseMessage latestReleaseMsg =\n        releaseMessageServiceWithCache\n            .findLatestReleaseMessageForMessages(Sets.newHashSet(someMsgContent, antherMsgContent));\n\n    assertNotNull(latestReleaseMsg);\n    assertEquals(501, latestReleaseMsg.getId());\n    assertEquals(antherMsgContent, latestReleaseMsg.getMessage());\n\n    List<ReleaseMessage> latestReleaseMsgGroupByMsgContent =\n        releaseMessageServiceWithCache\n            .findLatestReleaseMessagesGroupByMessages(Sets.newHashSet(someMsgContent, antherMsgContent));\n\n    assertEquals(2, latestReleaseMsgGroupByMsgContent.size());\n    assertEquals(500, latestReleaseMsgGroupByMsgContent.get(1).getId());\n    assertEquals(501, latestReleaseMsgGroupByMsgContent.get(0).getId());\n  }\n","realPath":"apollo-configservice/src/test/java/com/ctrip/framework/apollo/configservice/service/ReleaseMessageServiceWithCacheTest.java","repoName":"apollo","snippetEndLine":0,"snippetStartLine":0,"startLine":115,"status":"N"}],"commitId":"342ba888ba7e7c9e6f5a4010d03ebc5bbab00d81","commitMessage":"@@@Use LinkedHashSet for deterministic iterations (#2918)\n\n","date":"2020-02-08 10:23:56","modifiedFileCount":"1","status":"M","submitter":"contextshuffling"}]
