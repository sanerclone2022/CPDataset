[{"authorTime":"2018-02-24 19:06:36","codes":[{"authorDate":"2018-02-24 19:06:36","commitOrder":1,"curCode":"  public void testAutoUpdateWithMultipleNamespacesWithSameProperties() throws Exception {\n    int someTimeout = 1000;\n    int someBatch = 2000;\n    int anotherBatch = 3000;\n    int someNewTimeout = 1001;\n    int someNewBatch = 2001;\n\n    Properties applicationProperties = assembleProperties(BATCH_PROPERTY, String.valueOf(someBatch));\n    Properties fxApolloProperties =\n        assembleProperties(TIMEOUT_PROPERTY, String.valueOf(someTimeout), BATCH_PROPERTY, String.valueOf(anotherBatch));\n\n    SimpleConfig applicationConfig = prepareConfig(ConfigConsts.NAMESPACE_APPLICATION, applicationProperties);\n    SimpleConfig fxApolloConfig = prepareConfig(FX_APOLLO_NAMESPACE, fxApolloProperties);\n\n    AnnotationConfigApplicationContext context = new AnnotationConfigApplicationContext(AppConfig2.class);\n\n    TestJavaConfigBean bean = context.getBean(TestJavaConfigBean.class);\n\n    assertEquals(someTimeout, bean.getTimeout());\n    assertEquals(someBatch, bean.getBatch());\n\n    Properties newFxApolloProperties = assembleProperties(TIMEOUT_PROPERTY, String.valueOf(someNewTimeout),\n        BATCH_PROPERTY, String.valueOf(someNewBatch));\n\n    fxApolloConfig.onRepositoryChange(FX_APOLLO_NAMESPACE, newFxApolloProperties);\n\n    TimeUnit.MILLISECONDS.sleep(50);\n\n    assertEquals(someNewTimeout, bean.getTimeout());\n    assertEquals(someBatch, bean.getBatch());\n  }\n","date":"2018-02-24 19:06:36","endLine":212,"groupId":"1870","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testAutoUpdateWithMultipleNamespacesWithSameProperties","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-apollo-10-0.7/blobInfo/CC_OUT/blobs/f5/cc4c823de8ca1dc4440ec8bf384cad795b7703.src","preCode":"  public void testAutoUpdateWithMultipleNamespacesWithSameProperties() throws Exception {\n    int someTimeout = 1000;\n    int someBatch = 2000;\n    int anotherBatch = 3000;\n    int someNewTimeout = 1001;\n    int someNewBatch = 2001;\n\n    Properties applicationProperties = assembleProperties(BATCH_PROPERTY, String.valueOf(someBatch));\n    Properties fxApolloProperties =\n        assembleProperties(TIMEOUT_PROPERTY, String.valueOf(someTimeout), BATCH_PROPERTY, String.valueOf(anotherBatch));\n\n    SimpleConfig applicationConfig = prepareConfig(ConfigConsts.NAMESPACE_APPLICATION, applicationProperties);\n    SimpleConfig fxApolloConfig = prepareConfig(FX_APOLLO_NAMESPACE, fxApolloProperties);\n\n    AnnotationConfigApplicationContext context = new AnnotationConfigApplicationContext(AppConfig2.class);\n\n    TestJavaConfigBean bean = context.getBean(TestJavaConfigBean.class);\n\n    assertEquals(someTimeout, bean.getTimeout());\n    assertEquals(someBatch, bean.getBatch());\n\n    Properties newFxApolloProperties = assembleProperties(TIMEOUT_PROPERTY, String.valueOf(someNewTimeout),\n        BATCH_PROPERTY, String.valueOf(someNewBatch));\n\n    fxApolloConfig.onRepositoryChange(FX_APOLLO_NAMESPACE, newFxApolloProperties);\n\n    TimeUnit.MILLISECONDS.sleep(50);\n\n    assertEquals(someNewTimeout, bean.getTimeout());\n    assertEquals(someBatch, bean.getBatch());\n  }\n","realPath":"apollo-client/src/test/java/com/ctrip/framework/apollo/spring/JavaConfigPlaceholderAutoUpdateTest.java","repoName":"apollo","snippetEndLine":0,"snippetStartLine":0,"startLine":182,"status":"B"},{"authorDate":"2018-02-24 19:06:36","commitOrder":1,"curCode":"  public void testAutoUpdateWithMultipleNamespacesWithSameProperties() throws Exception {\n    int someTimeout = 1000;\n    int someBatch = 2000;\n    int anotherBatch = 3000;\n    int someNewTimeout = 1001;\n    int someNewBatch = 2001;\n\n    Properties applicationProperties = assembleProperties(BATCH_PROPERTY,\n        String.valueOf(someBatch));\n    Properties fxApolloProperties = assembleProperties(TIMEOUT_PROPERTY,\n        String.valueOf(someTimeout), BATCH_PROPERTY, String.valueOf(anotherBatch));\n\n    SimpleConfig applicationConfig = prepareConfig(ConfigConsts.NAMESPACE_APPLICATION,\n        applicationProperties);\n    SimpleConfig fxApolloConfig = prepareConfig(FX_APOLLO_NAMESPACE, fxApolloProperties);\n\n    ClassPathXmlApplicationContext context = new ClassPathXmlApplicationContext(\"spring/XmlConfigPlaceholderTest3.xml\");\n\n    TestXmlBean bean = context.getBean(TestXmlBean.class);\n\n    assertEquals(someTimeout, bean.getTimeout());\n    assertEquals(someBatch, bean.getBatch());\n\n    Properties newFxApolloProperties = assembleProperties(TIMEOUT_PROPERTY,\n        String.valueOf(someNewTimeout), BATCH_PROPERTY, String.valueOf(someNewBatch));\n\n    fxApolloConfig.onRepositoryChange(FX_APOLLO_NAMESPACE, newFxApolloProperties);\n\n    TimeUnit.MILLISECONDS.sleep(50);\n\n    assertEquals(someNewTimeout, bean.getTimeout());\n    assertEquals(someBatch, bean.getBatch());\n  }\n","date":"2018-02-24 19:06:36","endLine":170,"groupId":"129","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testAutoUpdateWithMultipleNamespacesWithSameProperties","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-apollo-10-0.7/blobInfo/CC_OUT/blobs/16/1be3e592d3696df40c6a9e9828b6d21b462710.src","preCode":"  public void testAutoUpdateWithMultipleNamespacesWithSameProperties() throws Exception {\n    int someTimeout = 1000;\n    int someBatch = 2000;\n    int anotherBatch = 3000;\n    int someNewTimeout = 1001;\n    int someNewBatch = 2001;\n\n    Properties applicationProperties = assembleProperties(BATCH_PROPERTY,\n        String.valueOf(someBatch));\n    Properties fxApolloProperties = assembleProperties(TIMEOUT_PROPERTY,\n        String.valueOf(someTimeout), BATCH_PROPERTY, String.valueOf(anotherBatch));\n\n    SimpleConfig applicationConfig = prepareConfig(ConfigConsts.NAMESPACE_APPLICATION,\n        applicationProperties);\n    SimpleConfig fxApolloConfig = prepareConfig(FX_APOLLO_NAMESPACE, fxApolloProperties);\n\n    ClassPathXmlApplicationContext context = new ClassPathXmlApplicationContext(\"spring/XmlConfigPlaceholderTest3.xml\");\n\n    TestXmlBean bean = context.getBean(TestXmlBean.class);\n\n    assertEquals(someTimeout, bean.getTimeout());\n    assertEquals(someBatch, bean.getBatch());\n\n    Properties newFxApolloProperties = assembleProperties(TIMEOUT_PROPERTY,\n        String.valueOf(someNewTimeout), BATCH_PROPERTY, String.valueOf(someNewBatch));\n\n    fxApolloConfig.onRepositoryChange(FX_APOLLO_NAMESPACE, newFxApolloProperties);\n\n    TimeUnit.MILLISECONDS.sleep(50);\n\n    assertEquals(someNewTimeout, bean.getTimeout());\n    assertEquals(someBatch, bean.getBatch());\n  }\n","realPath":"apollo-client/src/test/java/com/ctrip/framework/apollo/spring/XmlConfigPlaceholderAutoUpdateTest.java","repoName":"apollo","snippetEndLine":0,"snippetStartLine":0,"startLine":138,"status":"B"}],"commitId":"5823daa67b7c84d650023cff3464eae40c53d13c","commitMessage":"@@@Merge pull request #972 from nobodyiam/auto-update-value-merge\n\nAuto Updating Spring Placeholder Values","date":"2018-02-24 19:06:36","modifiedFileCount":"22","status":"B","submitter":"??"},{"authorTime":"2018-03-27 23:49:38","codes":[{"authorDate":"2018-03-27 23:49:38","commitOrder":2,"curCode":"  public void testAutoUpdateWithMultipleNamespacesWithSameProperties() throws Exception {\n    int someTimeout = 1000;\n    int someBatch = 2000;\n    int anotherBatch = 3000;\n    int someNewTimeout = 1001;\n    int someNewBatch = 2001;\n\n    Properties applicationProperties = assembleProperties(BATCH_PROPERTY, String.valueOf(someBatch));\n    Properties fxApolloProperties =\n        assembleProperties(TIMEOUT_PROPERTY, String.valueOf(someTimeout), BATCH_PROPERTY, String.valueOf(anotherBatch));\n\n    prepareConfig(ConfigConsts.NAMESPACE_APPLICATION, applicationProperties);\n    SimpleConfig fxApolloConfig = prepareConfig(FX_APOLLO_NAMESPACE, fxApolloProperties);\n\n    AnnotationConfigApplicationContext context = new AnnotationConfigApplicationContext(AppConfig2.class);\n\n    TestJavaConfigBean bean = context.getBean(TestJavaConfigBean.class);\n\n    assertEquals(someTimeout, bean.getTimeout());\n    assertEquals(someBatch, bean.getBatch());\n\n    Properties newFxApolloProperties = assembleProperties(TIMEOUT_PROPERTY, String.valueOf(someNewTimeout),\n        BATCH_PROPERTY, String.valueOf(someNewBatch));\n\n    fxApolloConfig.onRepositoryChange(FX_APOLLO_NAMESPACE, newFxApolloProperties);\n\n    TimeUnit.MILLISECONDS.sleep(100);\n\n    assertEquals(someNewTimeout, bean.getTimeout());\n    assertEquals(someBatch, bean.getBatch());\n  }\n","date":"2018-03-27 23:49:38","endLine":214,"groupId":"10386","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testAutoUpdateWithMultipleNamespacesWithSameProperties","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-apollo-10-0.7/blobInfo/CC_OUT/blobs/51/683f1416030e995699ace47eb1b1d255138f63.src","preCode":"  public void testAutoUpdateWithMultipleNamespacesWithSameProperties() throws Exception {\n    int someTimeout = 1000;\n    int someBatch = 2000;\n    int anotherBatch = 3000;\n    int someNewTimeout = 1001;\n    int someNewBatch = 2001;\n\n    Properties applicationProperties = assembleProperties(BATCH_PROPERTY, String.valueOf(someBatch));\n    Properties fxApolloProperties =\n        assembleProperties(TIMEOUT_PROPERTY, String.valueOf(someTimeout), BATCH_PROPERTY, String.valueOf(anotherBatch));\n\n    SimpleConfig applicationConfig = prepareConfig(ConfigConsts.NAMESPACE_APPLICATION, applicationProperties);\n    SimpleConfig fxApolloConfig = prepareConfig(FX_APOLLO_NAMESPACE, fxApolloProperties);\n\n    AnnotationConfigApplicationContext context = new AnnotationConfigApplicationContext(AppConfig2.class);\n\n    TestJavaConfigBean bean = context.getBean(TestJavaConfigBean.class);\n\n    assertEquals(someTimeout, bean.getTimeout());\n    assertEquals(someBatch, bean.getBatch());\n\n    Properties newFxApolloProperties = assembleProperties(TIMEOUT_PROPERTY, String.valueOf(someNewTimeout),\n        BATCH_PROPERTY, String.valueOf(someNewBatch));\n\n    fxApolloConfig.onRepositoryChange(FX_APOLLO_NAMESPACE, newFxApolloProperties);\n\n    TimeUnit.MILLISECONDS.sleep(50);\n\n    assertEquals(someNewTimeout, bean.getTimeout());\n    assertEquals(someBatch, bean.getBatch());\n  }\n","realPath":"apollo-client/src/test/java/com/ctrip/framework/apollo/spring/JavaConfigPlaceholderAutoUpdateTest.java","repoName":"apollo","snippetEndLine":0,"snippetStartLine":0,"startLine":184,"status":"M"},{"authorDate":"2018-03-27 23:49:38","commitOrder":2,"curCode":"  public void testAutoUpdateWithMultipleNamespacesWithSameProperties() throws Exception {\n    int someTimeout = 1000;\n    int someBatch = 2000;\n    int anotherBatch = 3000;\n    int someNewTimeout = 1001;\n    int someNewBatch = 2001;\n\n    Properties applicationProperties = assembleProperties(BATCH_PROPERTY,\n        String.valueOf(someBatch));\n    Properties fxApolloProperties = assembleProperties(TIMEOUT_PROPERTY,\n        String.valueOf(someTimeout), BATCH_PROPERTY, String.valueOf(anotherBatch));\n\n    prepareConfig(ConfigConsts.NAMESPACE_APPLICATION, applicationProperties);\n    SimpleConfig fxApolloConfig = prepareConfig(FX_APOLLO_NAMESPACE, fxApolloProperties);\n\n    ClassPathXmlApplicationContext context = new ClassPathXmlApplicationContext(\"spring/XmlConfigPlaceholderTest3.xml\");\n\n    TestXmlBean bean = context.getBean(TestXmlBean.class);\n\n    assertEquals(someTimeout, bean.getTimeout());\n    assertEquals(someBatch, bean.getBatch());\n\n    Properties newFxApolloProperties = assembleProperties(TIMEOUT_PROPERTY,\n        String.valueOf(someNewTimeout), BATCH_PROPERTY, String.valueOf(someNewBatch));\n\n    fxApolloConfig.onRepositoryChange(FX_APOLLO_NAMESPACE, newFxApolloProperties);\n\n    TimeUnit.MILLISECONDS.sleep(100);\n\n    assertEquals(someNewTimeout, bean.getTimeout());\n    assertEquals(someBatch, bean.getBatch());\n  }\n","date":"2018-03-27 23:49:38","endLine":169,"groupId":"10386","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testAutoUpdateWithMultipleNamespacesWithSameProperties","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-apollo-10-0.7/blobInfo/CC_OUT/blobs/1c/5336f31a7c40b2dd303c13a7c56c51a8b02cee.src","preCode":"  public void testAutoUpdateWithMultipleNamespacesWithSameProperties() throws Exception {\n    int someTimeout = 1000;\n    int someBatch = 2000;\n    int anotherBatch = 3000;\n    int someNewTimeout = 1001;\n    int someNewBatch = 2001;\n\n    Properties applicationProperties = assembleProperties(BATCH_PROPERTY,\n        String.valueOf(someBatch));\n    Properties fxApolloProperties = assembleProperties(TIMEOUT_PROPERTY,\n        String.valueOf(someTimeout), BATCH_PROPERTY, String.valueOf(anotherBatch));\n\n    SimpleConfig applicationConfig = prepareConfig(ConfigConsts.NAMESPACE_APPLICATION,\n        applicationProperties);\n    SimpleConfig fxApolloConfig = prepareConfig(FX_APOLLO_NAMESPACE, fxApolloProperties);\n\n    ClassPathXmlApplicationContext context = new ClassPathXmlApplicationContext(\"spring/XmlConfigPlaceholderTest3.xml\");\n\n    TestXmlBean bean = context.getBean(TestXmlBean.class);\n\n    assertEquals(someTimeout, bean.getTimeout());\n    assertEquals(someBatch, bean.getBatch());\n\n    Properties newFxApolloProperties = assembleProperties(TIMEOUT_PROPERTY,\n        String.valueOf(someNewTimeout), BATCH_PROPERTY, String.valueOf(someNewBatch));\n\n    fxApolloConfig.onRepositoryChange(FX_APOLLO_NAMESPACE, newFxApolloProperties);\n\n    TimeUnit.MILLISECONDS.sleep(50);\n\n    assertEquals(someNewTimeout, bean.getTimeout());\n    assertEquals(someBatch, bean.getBatch());\n  }\n","realPath":"apollo-client/src/test/java/com/ctrip/framework/apollo/spring/XmlConfigPlaceholderAutoUpdateTest.java","repoName":"apollo","snippetEndLine":0,"snippetStartLine":0,"startLine":138,"status":"M"}],"commitId":"6b2467df6aa3c286102219e1c5b50efeeb68f747","commitMessage":"@@@Merge pull request #1019 from nobodyiam/0.10.1\n\nfix the issue brought by 0.10.0 that Spring related classes are mistakenly loaded via DefaultInjector","date":"2018-03-27 23:49:38","modifiedFileCount":"10","status":"M","submitter":"Jason Song"}]
