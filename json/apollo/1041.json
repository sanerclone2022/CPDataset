[{"authorTime":"2016-07-08 17:30:16","codes":[{"authorDate":"2016-07-13 14:43:42","commitOrder":3,"curCode":"  public ItemDTO create(@PathVariable(\"appId\") String appId,\n                        @PathVariable(\"clusterName\") String clusterName,\n                        @PathVariable(\"namespaceName\") String namespaceName, @RequestBody ItemDTO dto) {\n    Item entity = BeanUtils.transfrom(Item.class, dto);\n\n    ConfigChangeContentBuilder builder = new ConfigChangeContentBuilder();\n    Item managedEntity = itemService.findOne(appId, clusterName, namespaceName, entity.getKey());\n    if (managedEntity != null) {\n      throw new BadRequestException(\"item already exist\");\n    } else {\n      Item lastItem = itemService.findLastOne(appId, clusterName, namespaceName);\n      int lineNum = 1;\n      if (lastItem != null) {\n        Integer lastItemNum = lastItem.getLineNum();\n        lineNum = lastItemNum == null ? 1 : lastItemNum + 1;\n      }\n      entity.setLineNum(lineNum);\n      entity = itemService.save(entity);\n      builder.createItem(entity);\n    }\n    dto = BeanUtils.transfrom(ItemDTO.class, entity);\n\n    Commit commit = new Commit();\n    commit.setAppId(appId);\n    commit.setClusterName(clusterName);\n    commit.setNamespaceName(namespaceName);\n    commit.setChangeSets(builder.build());\n    commit.setDataChangeCreatedBy(dto.getDataChangeLastModifiedBy());\n    commit.setDataChangeLastModifiedBy(dto.getDataChangeLastModifiedBy());\n    commitService.save(commit);\n\n    return dto;\n  }\n","date":"2016-07-13 14:43:42","endLine":71,"groupId":"416","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"create","params":"(@PathVariable(\"appId\")StringappId@@PathVariable(\"clusterName\")StringclusterName@@PathVariable(\"namespaceName\")StringnamespaceName@@RequestBodyItemDTOdto)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-apollo-10-0.7/blobInfo/CC_OUT/blobs/96/db993454d15bd20a837b73516d20bc88d8e30d.src","preCode":"  public ItemDTO create(@PathVariable(\"appId\") String appId,\n                        @PathVariable(\"clusterName\") String clusterName,\n                        @PathVariable(\"namespaceName\") String namespaceName, @RequestBody ItemDTO dto) {\n    Item entity = BeanUtils.transfrom(Item.class, dto);\n\n    ConfigChangeContentBuilder builder = new ConfigChangeContentBuilder();\n    Item managedEntity = itemService.findOne(appId, clusterName, namespaceName, entity.getKey());\n    if (managedEntity != null) {\n      throw new BadRequestException(\"item already exist\");\n    } else {\n      Item lastItem = itemService.findLastOne(appId, clusterName, namespaceName);\n      int lineNum = 1;\n      if (lastItem != null) {\n        Integer lastItemNum = lastItem.getLineNum();\n        lineNum = lastItemNum == null ? 1 : lastItemNum + 1;\n      }\n      entity.setLineNum(lineNum);\n      entity = itemService.save(entity);\n      builder.createItem(entity);\n    }\n    dto = BeanUtils.transfrom(ItemDTO.class, entity);\n\n    Commit commit = new Commit();\n    commit.setAppId(appId);\n    commit.setClusterName(clusterName);\n    commit.setNamespaceName(namespaceName);\n    commit.setChangeSets(builder.build());\n    commit.setDataChangeCreatedBy(dto.getDataChangeLastModifiedBy());\n    commit.setDataChangeLastModifiedBy(dto.getDataChangeLastModifiedBy());\n    commitService.save(commit);\n\n    return dto;\n  }\n","realPath":"apollo-adminservice/src/main/java/com/ctrip/framework/apollo/adminservice/controller/ItemController.java","repoName":"apollo","snippetEndLine":0,"snippetStartLine":0,"startLine":39,"status":"B"},{"authorDate":"2016-07-08 17:30:16","commitOrder":3,"curCode":"  public ItemDTO update(@PathVariable(\"appId\") String appId,\n                        @PathVariable(\"clusterName\") String clusterName,\n                        @PathVariable(\"namespaceName\") String namespaceName,\n                        @PathVariable(\"itemId\") long itemId,\n                        @RequestBody ItemDTO itemDTO) {\n\n    Item entity = BeanUtils.transfrom(Item.class, itemDTO);\n\n    ConfigChangeContentBuilder builder = new ConfigChangeContentBuilder();\n\n    Item managedEntity = itemService.findOne(itemId);\n    if (managedEntity == null) {\n      throw new BadRequestException(\"item not exist\");\n    }\n\n    Item beforeUpdateItem = BeanUtils.transfrom(Item.class, managedEntity);\n\n    BeanUtils.copyEntityProperties(entity, managedEntity);\n    entity = itemService.update(managedEntity);\n    builder.updateItem(beforeUpdateItem, entity);\n    itemDTO = BeanUtils.transfrom(ItemDTO.class, entity);\n\n    Commit commit = new Commit();\n    commit.setAppId(appId);\n    commit.setClusterName(clusterName);\n    commit.setNamespaceName(namespaceName);\n    commit.setChangeSets(builder.build());\n    commit.setDataChangeCreatedBy(itemDTO.getDataChangeLastModifiedBy());\n    commit.setDataChangeLastModifiedBy(itemDTO.getDataChangeLastModifiedBy());\n    commitService.save(commit);\n\n    return itemDTO;\n  }\n","date":"2016-07-08 17:30:16","endLine":110,"groupId":"416","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"update","params":"(@PathVariable(\"appId\")StringappId@@PathVariable(\"clusterName\")StringclusterName@@PathVariable(\"namespaceName\")StringnamespaceName@@PathVariable(\"itemId\")longitemId@@RequestBodyItemDTOitemDTO)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-apollo-10-0.7/blobInfo/CC_OUT/blobs/32/31c026a8b8eb0977e6876553e0f6382633c2c6.src","preCode":"  public ItemDTO update(@PathVariable(\"appId\") String appId,\n                        @PathVariable(\"clusterName\") String clusterName,\n                        @PathVariable(\"namespaceName\") String namespaceName,\n                        @PathVariable(\"itemId\") long itemId,\n                        @RequestBody ItemDTO itemDTO) {\n\n    Item entity = BeanUtils.transfrom(Item.class, itemDTO);\n\n    ConfigChangeContentBuilder builder = new ConfigChangeContentBuilder();\n\n    Item managedEntity = itemService.findOne(itemId);\n    if (managedEntity == null) {\n      throw new BadRequestException(\"item not exist\");\n    }\n\n    Item beforeUpdateItem = BeanUtils.transfrom(Item.class, managedEntity);\n\n    BeanUtils.copyEntityProperties(entity, managedEntity);\n    entity = itemService.update(managedEntity);\n    builder.updateItem(beforeUpdateItem, entity);\n    itemDTO = BeanUtils.transfrom(ItemDTO.class, entity);\n\n    Commit commit = new Commit();\n    commit.setAppId(appId);\n    commit.setClusterName(clusterName);\n    commit.setNamespaceName(namespaceName);\n    commit.setChangeSets(builder.build());\n    commit.setDataChangeCreatedBy(itemDTO.getDataChangeLastModifiedBy());\n    commit.setDataChangeLastModifiedBy(itemDTO.getDataChangeLastModifiedBy());\n    commitService.save(commit);\n\n    return itemDTO;\n  }\n","realPath":"apollo-adminservice/src/main/java/com/ctrip/framework/apollo/adminservice/controller/ItemController.java","repoName":"apollo","snippetEndLine":0,"snippetStartLine":0,"startLine":78,"status":"NB"}],"commitId":"f5bc9f838def33aea7a5fc8ce5c3d3592d0a625b","commitMessage":"@@@Merge pull request #323 from lepdou/history\n\nrelease history & ????","date":"2016-07-13 14:43:42","modifiedFileCount":"16","status":"M","submitter":"Jason Song"},{"authorTime":"2016-08-22 14:44:41","codes":[{"authorDate":"2016-07-13 14:43:42","commitOrder":4,"curCode":"  public ItemDTO create(@PathVariable(\"appId\") String appId,\n                        @PathVariable(\"clusterName\") String clusterName,\n                        @PathVariable(\"namespaceName\") String namespaceName, @RequestBody ItemDTO dto) {\n    Item entity = BeanUtils.transfrom(Item.class, dto);\n\n    ConfigChangeContentBuilder builder = new ConfigChangeContentBuilder();\n    Item managedEntity = itemService.findOne(appId, clusterName, namespaceName, entity.getKey());\n    if (managedEntity != null) {\n      throw new BadRequestException(\"item already exist\");\n    } else {\n      Item lastItem = itemService.findLastOne(appId, clusterName, namespaceName);\n      int lineNum = 1;\n      if (lastItem != null) {\n        Integer lastItemNum = lastItem.getLineNum();\n        lineNum = lastItemNum == null ? 1 : lastItemNum + 1;\n      }\n      entity.setLineNum(lineNum);\n      entity = itemService.save(entity);\n      builder.createItem(entity);\n    }\n    dto = BeanUtils.transfrom(ItemDTO.class, entity);\n\n    Commit commit = new Commit();\n    commit.setAppId(appId);\n    commit.setClusterName(clusterName);\n    commit.setNamespaceName(namespaceName);\n    commit.setChangeSets(builder.build());\n    commit.setDataChangeCreatedBy(dto.getDataChangeLastModifiedBy());\n    commit.setDataChangeLastModifiedBy(dto.getDataChangeLastModifiedBy());\n    commitService.save(commit);\n\n    return dto;\n  }\n","date":"2016-07-13 14:43:42","endLine":71,"groupId":"416","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"create","params":"(@PathVariable(\"appId\")StringappId@@PathVariable(\"clusterName\")StringclusterName@@PathVariable(\"namespaceName\")StringnamespaceName@@RequestBodyItemDTOdto)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-apollo-10-0.7/blobInfo/CC_OUT/blobs/96/db993454d15bd20a837b73516d20bc88d8e30d.src","preCode":"  public ItemDTO create(@PathVariable(\"appId\") String appId,\n                        @PathVariable(\"clusterName\") String clusterName,\n                        @PathVariable(\"namespaceName\") String namespaceName, @RequestBody ItemDTO dto) {\n    Item entity = BeanUtils.transfrom(Item.class, dto);\n\n    ConfigChangeContentBuilder builder = new ConfigChangeContentBuilder();\n    Item managedEntity = itemService.findOne(appId, clusterName, namespaceName, entity.getKey());\n    if (managedEntity != null) {\n      throw new BadRequestException(\"item already exist\");\n    } else {\n      Item lastItem = itemService.findLastOne(appId, clusterName, namespaceName);\n      int lineNum = 1;\n      if (lastItem != null) {\n        Integer lastItemNum = lastItem.getLineNum();\n        lineNum = lastItemNum == null ? 1 : lastItemNum + 1;\n      }\n      entity.setLineNum(lineNum);\n      entity = itemService.save(entity);\n      builder.createItem(entity);\n    }\n    dto = BeanUtils.transfrom(ItemDTO.class, entity);\n\n    Commit commit = new Commit();\n    commit.setAppId(appId);\n    commit.setClusterName(clusterName);\n    commit.setNamespaceName(namespaceName);\n    commit.setChangeSets(builder.build());\n    commit.setDataChangeCreatedBy(dto.getDataChangeLastModifiedBy());\n    commit.setDataChangeLastModifiedBy(dto.getDataChangeLastModifiedBy());\n    commitService.save(commit);\n\n    return dto;\n  }\n","realPath":"apollo-adminservice/src/main/java/com/ctrip/framework/apollo/adminservice/controller/ItemController.java","repoName":"apollo","snippetEndLine":0,"snippetStartLine":0,"startLine":39,"status":"N"},{"authorDate":"2016-08-22 14:44:41","commitOrder":4,"curCode":"  public ItemDTO update(@PathVariable(\"appId\") String appId,\n                        @PathVariable(\"clusterName\") String clusterName,\n                        @PathVariable(\"namespaceName\") String namespaceName,\n                        @PathVariable(\"itemId\") long itemId,\n                        @RequestBody ItemDTO itemDTO) {\n\n    Item entity = BeanUtils.transfrom(Item.class, itemDTO);\n\n    ConfigChangeContentBuilder builder = new ConfigChangeContentBuilder();\n\n    Item managedEntity = itemService.findOne(itemId);\n    if (managedEntity == null) {\n      throw new BadRequestException(\"item not exist\");\n    }\n\n    Item beforeUpdateItem = BeanUtils.transfrom(Item.class, managedEntity);\n\n    \r\n    managedEntity.setValue(entity.getValue());\n    managedEntity.setComment(entity.getComment());\n    managedEntity.setDataChangeLastModifiedBy(entity.getDataChangeLastModifiedBy());\n\n    entity = itemService.update(managedEntity);\n    builder.updateItem(beforeUpdateItem, entity);\n    itemDTO = BeanUtils.transfrom(ItemDTO.class, entity);\n\n    Commit commit = new Commit();\n    commit.setAppId(appId);\n    commit.setClusterName(clusterName);\n    commit.setNamespaceName(namespaceName);\n    commit.setChangeSets(builder.build());\n    commit.setDataChangeCreatedBy(itemDTO.getDataChangeLastModifiedBy());\n    commit.setDataChangeLastModifiedBy(itemDTO.getDataChangeLastModifiedBy());\n    commitService.save(commit);\n\n    return itemDTO;\n  }\n","date":"2016-08-22 14:44:41","endLine":110,"groupId":"993","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"update","params":"(@PathVariable(\"appId\")StringappId@@PathVariable(\"clusterName\")StringclusterName@@PathVariable(\"namespaceName\")StringnamespaceName@@PathVariable(\"itemId\")longitemId@@RequestBodyItemDTOitemDTO)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-apollo-10-0.7/blobInfo/CC_OUT/blobs/9b/40a1924842a3f7feb7f3a47168bee7e72ab3b6.src","preCode":"  public ItemDTO update(@PathVariable(\"appId\") String appId,\n                        @PathVariable(\"clusterName\") String clusterName,\n                        @PathVariable(\"namespaceName\") String namespaceName,\n                        @PathVariable(\"itemId\") long itemId,\n                        @RequestBody ItemDTO itemDTO) {\n\n    Item entity = BeanUtils.transfrom(Item.class, itemDTO);\n\n    ConfigChangeContentBuilder builder = new ConfigChangeContentBuilder();\n\n    Item managedEntity = itemService.findOne(itemId);\n    if (managedEntity == null) {\n      throw new BadRequestException(\"item not exist\");\n    }\n\n    Item beforeUpdateItem = BeanUtils.transfrom(Item.class, managedEntity);\n\n    BeanUtils.copyEntityProperties(entity, managedEntity);\n    entity = itemService.update(managedEntity);\n    builder.updateItem(beforeUpdateItem, entity);\n    itemDTO = BeanUtils.transfrom(ItemDTO.class, entity);\n\n    Commit commit = new Commit();\n    commit.setAppId(appId);\n    commit.setClusterName(clusterName);\n    commit.setNamespaceName(namespaceName);\n    commit.setChangeSets(builder.build());\n    commit.setDataChangeCreatedBy(itemDTO.getDataChangeLastModifiedBy());\n    commit.setDataChangeLastModifiedBy(itemDTO.getDataChangeLastModifiedBy());\n    commitService.save(commit);\n\n    return itemDTO;\n  }\n","realPath":"apollo-adminservice/src/main/java/com/ctrip/framework/apollo/adminservice/controller/ItemController.java","repoName":"apollo","snippetEndLine":0,"snippetStartLine":0,"startLine":74,"status":"M"}],"commitId":"29386acab16d2fdfe9e15bc1f8b64d1be0667ee4","commitMessage":"@@@Merge branch 'master' into 'release'\n\nMaster2Release\n\n\n\nSee merge request !16","date":"2016-08-22 14:44:41","modifiedFileCount":"19","status":"M","submitter":"zl??(IT)"},{"authorTime":"2016-08-22 14:44:41","codes":[{"authorDate":"2016-11-22 15:47:36","commitOrder":5,"curCode":"  public ItemDTO create(@PathVariable(\"appId\") String appId,\n                        @PathVariable(\"clusterName\") String clusterName,\n                        @PathVariable(\"namespaceName\") String namespaceName, @RequestBody ItemDTO dto) {\n    Item entity = BeanUtils.transfrom(Item.class, dto);\n\n    ConfigChangeContentBuilder builder = new ConfigChangeContentBuilder();\n    Item managedEntity = itemService.findOne(appId, clusterName, namespaceName, entity.getKey());\n    if (managedEntity != null) {\n      throw new BadRequestException(\"item already exist\");\n    } else {\n      entity = itemService.save(entity);\n      builder.createItem(entity);\n    }\n    dto = BeanUtils.transfrom(ItemDTO.class, entity);\n\n    Commit commit = new Commit();\n    commit.setAppId(appId);\n    commit.setClusterName(clusterName);\n    commit.setNamespaceName(namespaceName);\n    commit.setChangeSets(builder.build());\n    commit.setDataChangeCreatedBy(dto.getDataChangeLastModifiedBy());\n    commit.setDataChangeLastModifiedBy(dto.getDataChangeLastModifiedBy());\n    commitService.save(commit);\n\n    return dto;\n  }\n","date":"2016-11-22 15:47:36","endLine":63,"groupId":"927","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"create","params":"(@PathVariable(\"appId\")StringappId@@PathVariable(\"clusterName\")StringclusterName@@PathVariable(\"namespaceName\")StringnamespaceName@@RequestBodyItemDTOdto)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-apollo-10-0.7/blobInfo/CC_OUT/blobs/ad/61abb7c0072226edf1b63b8bc2035b04fa6b91.src","preCode":"  public ItemDTO create(@PathVariable(\"appId\") String appId,\n                        @PathVariable(\"clusterName\") String clusterName,\n                        @PathVariable(\"namespaceName\") String namespaceName, @RequestBody ItemDTO dto) {\n    Item entity = BeanUtils.transfrom(Item.class, dto);\n\n    ConfigChangeContentBuilder builder = new ConfigChangeContentBuilder();\n    Item managedEntity = itemService.findOne(appId, clusterName, namespaceName, entity.getKey());\n    if (managedEntity != null) {\n      throw new BadRequestException(\"item already exist\");\n    } else {\n      Item lastItem = itemService.findLastOne(appId, clusterName, namespaceName);\n      int lineNum = 1;\n      if (lastItem != null) {\n        Integer lastItemNum = lastItem.getLineNum();\n        lineNum = lastItemNum == null ? 1 : lastItemNum + 1;\n      }\n      entity.setLineNum(lineNum);\n      entity = itemService.save(entity);\n      builder.createItem(entity);\n    }\n    dto = BeanUtils.transfrom(ItemDTO.class, entity);\n\n    Commit commit = new Commit();\n    commit.setAppId(appId);\n    commit.setClusterName(clusterName);\n    commit.setNamespaceName(namespaceName);\n    commit.setChangeSets(builder.build());\n    commit.setDataChangeCreatedBy(dto.getDataChangeLastModifiedBy());\n    commit.setDataChangeLastModifiedBy(dto.getDataChangeLastModifiedBy());\n    commitService.save(commit);\n\n    return dto;\n  }\n","realPath":"apollo-adminservice/src/main/java/com/ctrip/framework/apollo/adminservice/controller/ItemController.java","repoName":"apollo","snippetEndLine":0,"snippetStartLine":0,"startLine":38,"status":"M"},{"authorDate":"2016-08-22 14:44:41","commitOrder":5,"curCode":"  public ItemDTO update(@PathVariable(\"appId\") String appId,\n                        @PathVariable(\"clusterName\") String clusterName,\n                        @PathVariable(\"namespaceName\") String namespaceName,\n                        @PathVariable(\"itemId\") long itemId,\n                        @RequestBody ItemDTO itemDTO) {\n\n    Item entity = BeanUtils.transfrom(Item.class, itemDTO);\n\n    ConfigChangeContentBuilder builder = new ConfigChangeContentBuilder();\n\n    Item managedEntity = itemService.findOne(itemId);\n    if (managedEntity == null) {\n      throw new BadRequestException(\"item not exist\");\n    }\n\n    Item beforeUpdateItem = BeanUtils.transfrom(Item.class, managedEntity);\n\n    \r\n    managedEntity.setValue(entity.getValue());\n    managedEntity.setComment(entity.getComment());\n    managedEntity.setDataChangeLastModifiedBy(entity.getDataChangeLastModifiedBy());\n\n    entity = itemService.update(managedEntity);\n    builder.updateItem(beforeUpdateItem, entity);\n    itemDTO = BeanUtils.transfrom(ItemDTO.class, entity);\n\n    Commit commit = new Commit();\n    commit.setAppId(appId);\n    commit.setClusterName(clusterName);\n    commit.setNamespaceName(namespaceName);\n    commit.setChangeSets(builder.build());\n    commit.setDataChangeCreatedBy(itemDTO.getDataChangeLastModifiedBy());\n    commit.setDataChangeLastModifiedBy(itemDTO.getDataChangeLastModifiedBy());\n    commitService.save(commit);\n\n    return itemDTO;\n  }\n","date":"2016-08-22 14:44:41","endLine":110,"groupId":"993","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"update","params":"(@PathVariable(\"appId\")StringappId@@PathVariable(\"clusterName\")StringclusterName@@PathVariable(\"namespaceName\")StringnamespaceName@@PathVariable(\"itemId\")longitemId@@RequestBodyItemDTOitemDTO)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-apollo-10-0.7/blobInfo/CC_OUT/blobs/9b/40a1924842a3f7feb7f3a47168bee7e72ab3b6.src","preCode":"  public ItemDTO update(@PathVariable(\"appId\") String appId,\n                        @PathVariable(\"clusterName\") String clusterName,\n                        @PathVariable(\"namespaceName\") String namespaceName,\n                        @PathVariable(\"itemId\") long itemId,\n                        @RequestBody ItemDTO itemDTO) {\n\n    Item entity = BeanUtils.transfrom(Item.class, itemDTO);\n\n    ConfigChangeContentBuilder builder = new ConfigChangeContentBuilder();\n\n    Item managedEntity = itemService.findOne(itemId);\n    if (managedEntity == null) {\n      throw new BadRequestException(\"item not exist\");\n    }\n\n    Item beforeUpdateItem = BeanUtils.transfrom(Item.class, managedEntity);\n\n    \r\n    managedEntity.setValue(entity.getValue());\n    managedEntity.setComment(entity.getComment());\n    managedEntity.setDataChangeLastModifiedBy(entity.getDataChangeLastModifiedBy());\n\n    entity = itemService.update(managedEntity);\n    builder.updateItem(beforeUpdateItem, entity);\n    itemDTO = BeanUtils.transfrom(ItemDTO.class, entity);\n\n    Commit commit = new Commit();\n    commit.setAppId(appId);\n    commit.setClusterName(clusterName);\n    commit.setNamespaceName(namespaceName);\n    commit.setChangeSets(builder.build());\n    commit.setDataChangeCreatedBy(itemDTO.getDataChangeLastModifiedBy());\n    commit.setDataChangeLastModifiedBy(itemDTO.getDataChangeLastModifiedBy());\n    commitService.save(commit);\n\n    return itemDTO;\n  }\n","realPath":"apollo-adminservice/src/main/java/com/ctrip/framework/apollo/adminservice/controller/ItemController.java","repoName":"apollo","snippetEndLine":0,"snippetStartLine":0,"startLine":74,"status":"N"}],"commitId":"6d7ebbe8491f5a920f20f84867e9114c3fbd17ae","commitMessage":"@@@Merge branch 'master' into 'release'\n\nMaster2Release\n\n\n\nSee merge request !32","date":"2016-11-22 15:47:36","modifiedFileCount":"58","status":"M","submitter":"zl??(IT)"},{"authorTime":"2016-12-20 11:24:17","codes":[{"authorDate":"2016-11-22 15:47:36","commitOrder":6,"curCode":"  public ItemDTO create(@PathVariable(\"appId\") String appId,\n                        @PathVariable(\"clusterName\") String clusterName,\n                        @PathVariable(\"namespaceName\") String namespaceName, @RequestBody ItemDTO dto) {\n    Item entity = BeanUtils.transfrom(Item.class, dto);\n\n    ConfigChangeContentBuilder builder = new ConfigChangeContentBuilder();\n    Item managedEntity = itemService.findOne(appId, clusterName, namespaceName, entity.getKey());\n    if (managedEntity != null) {\n      throw new BadRequestException(\"item already exist\");\n    } else {\n      entity = itemService.save(entity);\n      builder.createItem(entity);\n    }\n    dto = BeanUtils.transfrom(ItemDTO.class, entity);\n\n    Commit commit = new Commit();\n    commit.setAppId(appId);\n    commit.setClusterName(clusterName);\n    commit.setNamespaceName(namespaceName);\n    commit.setChangeSets(builder.build());\n    commit.setDataChangeCreatedBy(dto.getDataChangeLastModifiedBy());\n    commit.setDataChangeLastModifiedBy(dto.getDataChangeLastModifiedBy());\n    commitService.save(commit);\n\n    return dto;\n  }\n","date":"2016-11-22 15:47:36","endLine":63,"groupId":"927","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"create","params":"(@PathVariable(\"appId\")StringappId@@PathVariable(\"clusterName\")StringclusterName@@PathVariable(\"namespaceName\")StringnamespaceName@@RequestBodyItemDTOdto)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-apollo-10-0.7/blobInfo/CC_OUT/blobs/ad/61abb7c0072226edf1b63b8bc2035b04fa6b91.src","preCode":"  public ItemDTO create(@PathVariable(\"appId\") String appId,\n                        @PathVariable(\"clusterName\") String clusterName,\n                        @PathVariable(\"namespaceName\") String namespaceName, @RequestBody ItemDTO dto) {\n    Item entity = BeanUtils.transfrom(Item.class, dto);\n\n    ConfigChangeContentBuilder builder = new ConfigChangeContentBuilder();\n    Item managedEntity = itemService.findOne(appId, clusterName, namespaceName, entity.getKey());\n    if (managedEntity != null) {\n      throw new BadRequestException(\"item already exist\");\n    } else {\n      entity = itemService.save(entity);\n      builder.createItem(entity);\n    }\n    dto = BeanUtils.transfrom(ItemDTO.class, entity);\n\n    Commit commit = new Commit();\n    commit.setAppId(appId);\n    commit.setClusterName(clusterName);\n    commit.setNamespaceName(namespaceName);\n    commit.setChangeSets(builder.build());\n    commit.setDataChangeCreatedBy(dto.getDataChangeLastModifiedBy());\n    commit.setDataChangeLastModifiedBy(dto.getDataChangeLastModifiedBy());\n    commitService.save(commit);\n\n    return dto;\n  }\n","realPath":"apollo-adminservice/src/main/java/com/ctrip/framework/apollo/adminservice/controller/ItemController.java","repoName":"apollo","snippetEndLine":0,"snippetStartLine":0,"startLine":38,"status":"N"},{"authorDate":"2016-12-20 11:24:17","commitOrder":6,"curCode":"  public ItemDTO update(@PathVariable(\"appId\") String appId,\n                        @PathVariable(\"clusterName\") String clusterName,\n                        @PathVariable(\"namespaceName\") String namespaceName,\n                        @PathVariable(\"itemId\") long itemId,\n                        @RequestBody ItemDTO itemDTO) {\n\n    Item entity = BeanUtils.transfrom(Item.class, itemDTO);\n\n    ConfigChangeContentBuilder builder = new ConfigChangeContentBuilder();\n\n    Item managedEntity = itemService.findOne(itemId);\n    if (managedEntity == null) {\n      throw new BadRequestException(\"item not exist\");\n    }\n\n    Item beforeUpdateItem = BeanUtils.transfrom(Item.class, managedEntity);\n\n    \r\n    managedEntity.setValue(entity.getValue());\n    managedEntity.setComment(entity.getComment());\n    managedEntity.setDataChangeLastModifiedBy(entity.getDataChangeLastModifiedBy());\n\n    entity = itemService.update(managedEntity);\n    builder.updateItem(beforeUpdateItem, entity);\n    itemDTO = BeanUtils.transfrom(ItemDTO.class, entity);\n\n    if (builder.hasContent()) {\n      Commit commit = new Commit();\n      commit.setAppId(appId);\n      commit.setClusterName(clusterName);\n      commit.setNamespaceName(namespaceName);\n      commit.setChangeSets(builder.build());\n      commit.setDataChangeCreatedBy(itemDTO.getDataChangeLastModifiedBy());\n      commit.setDataChangeLastModifiedBy(itemDTO.getDataChangeLastModifiedBy());\n      commitService.save(commit);\n    }\n\n    return itemDTO;\n  }\n","date":"2016-12-20 11:24:17","endLine":105,"groupId":"928","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"update","params":"(@PathVariable(\"appId\")StringappId@@PathVariable(\"clusterName\")StringclusterName@@PathVariable(\"namespaceName\")StringnamespaceName@@PathVariable(\"itemId\")longitemId@@RequestBodyItemDTOitemDTO)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-apollo-10-0.7/blobInfo/CC_OUT/blobs/5e/0718c48d5c6c35dd47c1df212e37f511689887.src","preCode":"  public ItemDTO update(@PathVariable(\"appId\") String appId,\n                        @PathVariable(\"clusterName\") String clusterName,\n                        @PathVariable(\"namespaceName\") String namespaceName,\n                        @PathVariable(\"itemId\") long itemId,\n                        @RequestBody ItemDTO itemDTO) {\n\n    Item entity = BeanUtils.transfrom(Item.class, itemDTO);\n\n    ConfigChangeContentBuilder builder = new ConfigChangeContentBuilder();\n\n    Item managedEntity = itemService.findOne(itemId);\n    if (managedEntity == null) {\n      throw new BadRequestException(\"item not exist\");\n    }\n\n    Item beforeUpdateItem = BeanUtils.transfrom(Item.class, managedEntity);\n\n    \r\n    managedEntity.setValue(entity.getValue());\n    managedEntity.setComment(entity.getComment());\n    managedEntity.setDataChangeLastModifiedBy(entity.getDataChangeLastModifiedBy());\n\n    entity = itemService.update(managedEntity);\n    builder.updateItem(beforeUpdateItem, entity);\n    itemDTO = BeanUtils.transfrom(ItemDTO.class, entity);\n\n    Commit commit = new Commit();\n    commit.setAppId(appId);\n    commit.setClusterName(clusterName);\n    commit.setNamespaceName(namespaceName);\n    commit.setChangeSets(builder.build());\n    commit.setDataChangeCreatedBy(itemDTO.getDataChangeLastModifiedBy());\n    commit.setDataChangeLastModifiedBy(itemDTO.getDataChangeLastModifiedBy());\n    commitService.save(commit);\n\n    return itemDTO;\n  }\n","realPath":"apollo-adminservice/src/main/java/com/ctrip/framework/apollo/adminservice/controller/ItemController.java","repoName":"apollo","snippetEndLine":0,"snippetStartLine":0,"startLine":67,"status":"M"}],"commitId":"1a9b1318156c0b95f09e143c3ffcc51acf77d6fb","commitMessage":"@@@Merge pull request #491 from lepdou/commit\n\nbugfix: record empty commit when only modify item comment","date":"2016-12-20 11:24:17","modifiedFileCount":"2","status":"M","submitter":"Jason Song"},{"authorTime":"2016-12-20 11:24:17","codes":[{"authorDate":"2018-09-24 15:19:33","commitOrder":7,"curCode":"  public ItemDTO create(@PathVariable(\"appId\") String appId,\n                        @PathVariable(\"clusterName\") String clusterName,\n                        @PathVariable(\"namespaceName\") String namespaceName, @RequestBody ItemDTO dto) {\n    Item entity = BeanUtils.transfrom(Item.class, dto);\n\n    ConfigChangeContentBuilder builder = new ConfigChangeContentBuilder();\n    Item managedEntity = itemService.findOne(appId, clusterName, namespaceName, entity.getKey());\n    if (managedEntity != null) {\n      throw new BadRequestException(\"item already exists\");\n    } else {\n      entity = itemService.save(entity);\n      builder.createItem(entity);\n    }\n    dto = BeanUtils.transfrom(ItemDTO.class, entity);\n\n    Commit commit = new Commit();\n    commit.setAppId(appId);\n    commit.setClusterName(clusterName);\n    commit.setNamespaceName(namespaceName);\n    commit.setChangeSets(builder.build());\n    commit.setDataChangeCreatedBy(dto.getDataChangeLastModifiedBy());\n    commit.setDataChangeLastModifiedBy(dto.getDataChangeLastModifiedBy());\n    commitService.save(commit);\n\n    return dto;\n  }\n","date":"2018-09-24 15:19:33","endLine":63,"groupId":"0","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"create","params":"(@PathVariable(\"appId\")StringappId@@PathVariable(\"clusterName\")StringclusterName@@PathVariable(\"namespaceName\")StringnamespaceName@@RequestBodyItemDTOdto)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-apollo-10-0.7/blobInfo/CC_OUT/blobs/40/0e19bd167e5c3ec61aeb7437a4ec82a67f3646.src","preCode":"  public ItemDTO create(@PathVariable(\"appId\") String appId,\n                        @PathVariable(\"clusterName\") String clusterName,\n                        @PathVariable(\"namespaceName\") String namespaceName, @RequestBody ItemDTO dto) {\n    Item entity = BeanUtils.transfrom(Item.class, dto);\n\n    ConfigChangeContentBuilder builder = new ConfigChangeContentBuilder();\n    Item managedEntity = itemService.findOne(appId, clusterName, namespaceName, entity.getKey());\n    if (managedEntity != null) {\n      throw new BadRequestException(\"item already exist\");\n    } else {\n      entity = itemService.save(entity);\n      builder.createItem(entity);\n    }\n    dto = BeanUtils.transfrom(ItemDTO.class, entity);\n\n    Commit commit = new Commit();\n    commit.setAppId(appId);\n    commit.setClusterName(clusterName);\n    commit.setNamespaceName(namespaceName);\n    commit.setChangeSets(builder.build());\n    commit.setDataChangeCreatedBy(dto.getDataChangeLastModifiedBy());\n    commit.setDataChangeLastModifiedBy(dto.getDataChangeLastModifiedBy());\n    commitService.save(commit);\n\n    return dto;\n  }\n","realPath":"apollo-adminservice/src/main/java/com/ctrip/framework/apollo/adminservice/controller/ItemController.java","repoName":"apollo","snippetEndLine":0,"snippetStartLine":0,"startLine":38,"status":"M"},{"authorDate":"2016-12-20 11:24:17","commitOrder":7,"curCode":"  public ItemDTO update(@PathVariable(\"appId\") String appId,\n                        @PathVariable(\"clusterName\") String clusterName,\n                        @PathVariable(\"namespaceName\") String namespaceName,\n                        @PathVariable(\"itemId\") long itemId,\n                        @RequestBody ItemDTO itemDTO) {\n\n    Item entity = BeanUtils.transfrom(Item.class, itemDTO);\n\n    ConfigChangeContentBuilder builder = new ConfigChangeContentBuilder();\n\n    Item managedEntity = itemService.findOne(itemId);\n    if (managedEntity == null) {\n      throw new BadRequestException(\"item not exist\");\n    }\n\n    Item beforeUpdateItem = BeanUtils.transfrom(Item.class, managedEntity);\n\n    \r\n    managedEntity.setValue(entity.getValue());\n    managedEntity.setComment(entity.getComment());\n    managedEntity.setDataChangeLastModifiedBy(entity.getDataChangeLastModifiedBy());\n\n    entity = itemService.update(managedEntity);\n    builder.updateItem(beforeUpdateItem, entity);\n    itemDTO = BeanUtils.transfrom(ItemDTO.class, entity);\n\n    if (builder.hasContent()) {\n      Commit commit = new Commit();\n      commit.setAppId(appId);\n      commit.setClusterName(clusterName);\n      commit.setNamespaceName(namespaceName);\n      commit.setChangeSets(builder.build());\n      commit.setDataChangeCreatedBy(itemDTO.getDataChangeLastModifiedBy());\n      commit.setDataChangeLastModifiedBy(itemDTO.getDataChangeLastModifiedBy());\n      commitService.save(commit);\n    }\n\n    return itemDTO;\n  }\n","date":"2016-12-20 11:24:17","endLine":105,"groupId":"928","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"update","params":"(@PathVariable(\"appId\")StringappId@@PathVariable(\"clusterName\")StringclusterName@@PathVariable(\"namespaceName\")StringnamespaceName@@PathVariable(\"itemId\")longitemId@@RequestBodyItemDTOitemDTO)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-apollo-10-0.7/blobInfo/CC_OUT/blobs/5e/0718c48d5c6c35dd47c1df212e37f511689887.src","preCode":"  public ItemDTO update(@PathVariable(\"appId\") String appId,\n                        @PathVariable(\"clusterName\") String clusterName,\n                        @PathVariable(\"namespaceName\") String namespaceName,\n                        @PathVariable(\"itemId\") long itemId,\n                        @RequestBody ItemDTO itemDTO) {\n\n    Item entity = BeanUtils.transfrom(Item.class, itemDTO);\n\n    ConfigChangeContentBuilder builder = new ConfigChangeContentBuilder();\n\n    Item managedEntity = itemService.findOne(itemId);\n    if (managedEntity == null) {\n      throw new BadRequestException(\"item not exist\");\n    }\n\n    Item beforeUpdateItem = BeanUtils.transfrom(Item.class, managedEntity);\n\n    \r\n    managedEntity.setValue(entity.getValue());\n    managedEntity.setComment(entity.getComment());\n    managedEntity.setDataChangeLastModifiedBy(entity.getDataChangeLastModifiedBy());\n\n    entity = itemService.update(managedEntity);\n    builder.updateItem(beforeUpdateItem, entity);\n    itemDTO = BeanUtils.transfrom(ItemDTO.class, entity);\n\n    if (builder.hasContent()) {\n      Commit commit = new Commit();\n      commit.setAppId(appId);\n      commit.setClusterName(clusterName);\n      commit.setNamespaceName(namespaceName);\n      commit.setChangeSets(builder.build());\n      commit.setDataChangeCreatedBy(itemDTO.getDataChangeLastModifiedBy());\n      commit.setDataChangeLastModifiedBy(itemDTO.getDataChangeLastModifiedBy());\n      commitService.save(commit);\n    }\n\n    return itemDTO;\n  }\n","realPath":"apollo-adminservice/src/main/java/com/ctrip/framework/apollo/adminservice/controller/ItemController.java","repoName":"apollo","snippetEndLine":0,"snippetStartLine":0,"startLine":67,"status":"N"}],"commitId":"0d32276855a0121324e6ab6219311ddcf6b0526a","commitMessage":"@@@Merge pull request #1508 from nobodyiam/apollo-open-api\n\nadd apollo-openapi client","date":"2018-09-24 15:19:33","modifiedFileCount":"5","status":"M","submitter":"Jason Song"},{"authorTime":"2018-12-31 17:45:57","codes":[{"authorDate":"2018-12-31 17:45:57","commitOrder":8,"curCode":"  public ItemDTO create(@PathVariable(\"appId\") String appId,\n                        @PathVariable(\"clusterName\") String clusterName,\n                        @PathVariable(\"namespaceName\") String namespaceName, @RequestBody ItemDTO dto) {\n    Item entity = BeanUtils.transform(Item.class, dto);\n\n    ConfigChangeContentBuilder builder = new ConfigChangeContentBuilder();\n    Item managedEntity = itemService.findOne(appId, clusterName, namespaceName, entity.getKey());\n    if (managedEntity != null) {\n      throw new BadRequestException(\"item already exists\");\n    } else {\n      entity = itemService.save(entity);\n      builder.createItem(entity);\n    }\n    dto = BeanUtils.transform(ItemDTO.class, entity);\n\n    Commit commit = new Commit();\n    commit.setAppId(appId);\n    commit.setClusterName(clusterName);\n    commit.setNamespaceName(namespaceName);\n    commit.setChangeSets(builder.build());\n    commit.setDataChangeCreatedBy(dto.getDataChangeLastModifiedBy());\n    commit.setDataChangeLastModifiedBy(dto.getDataChangeLastModifiedBy());\n    commitService.save(commit);\n\n    return dto;\n  }\n","date":"2018-12-31 20:41:48","endLine":63,"groupId":"345","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"create","params":"(@PathVariable(\"appId\")StringappId@@PathVariable(\"clusterName\")StringclusterName@@PathVariable(\"namespaceName\")StringnamespaceName@@RequestBodyItemDTOdto)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-apollo-10-0.7/blobInfo/CC_OUT/blobs/d2/ead9bb0b59a56e139a488ecc83f62d26e55b7e.src","preCode":"  public ItemDTO create(@PathVariable(\"appId\") String appId,\n                        @PathVariable(\"clusterName\") String clusterName,\n                        @PathVariable(\"namespaceName\") String namespaceName, @RequestBody ItemDTO dto) {\n    Item entity = BeanUtils.transfrom(Item.class, dto);\n\n    ConfigChangeContentBuilder builder = new ConfigChangeContentBuilder();\n    Item managedEntity = itemService.findOne(appId, clusterName, namespaceName, entity.getKey());\n    if (managedEntity != null) {\n      throw new BadRequestException(\"item already exists\");\n    } else {\n      entity = itemService.save(entity);\n      builder.createItem(entity);\n    }\n    dto = BeanUtils.transfrom(ItemDTO.class, entity);\n\n    Commit commit = new Commit();\n    commit.setAppId(appId);\n    commit.setClusterName(clusterName);\n    commit.setNamespaceName(namespaceName);\n    commit.setChangeSets(builder.build());\n    commit.setDataChangeCreatedBy(dto.getDataChangeLastModifiedBy());\n    commit.setDataChangeLastModifiedBy(dto.getDataChangeLastModifiedBy());\n    commitService.save(commit);\n\n    return dto;\n  }\n","realPath":"apollo-adminservice/src/main/java/com/ctrip/framework/apollo/adminservice/controller/ItemController.java","repoName":"apollo","snippetEndLine":0,"snippetStartLine":0,"startLine":38,"status":"M"},{"authorDate":"2018-12-31 17:45:57","commitOrder":8,"curCode":"  public ItemDTO update(@PathVariable(\"appId\") String appId,\n                        @PathVariable(\"clusterName\") String clusterName,\n                        @PathVariable(\"namespaceName\") String namespaceName,\n                        @PathVariable(\"itemId\") long itemId,\n                        @RequestBody ItemDTO itemDTO) {\n\n    Item entity = BeanUtils.transform(Item.class, itemDTO);\n\n    ConfigChangeContentBuilder builder = new ConfigChangeContentBuilder();\n\n    Item managedEntity = itemService.findOne(itemId);\n    if (managedEntity == null) {\n      throw new BadRequestException(\"item not exist\");\n    }\n\n    Item beforeUpdateItem = BeanUtils.transform(Item.class, managedEntity);\n\n    \r\n    managedEntity.setValue(entity.getValue());\n    managedEntity.setComment(entity.getComment());\n    managedEntity.setDataChangeLastModifiedBy(entity.getDataChangeLastModifiedBy());\n\n    entity = itemService.update(managedEntity);\n    builder.updateItem(beforeUpdateItem, entity);\n    itemDTO = BeanUtils.transform(ItemDTO.class, entity);\n\n    if (builder.hasContent()) {\n      Commit commit = new Commit();\n      commit.setAppId(appId);\n      commit.setClusterName(clusterName);\n      commit.setNamespaceName(namespaceName);\n      commit.setChangeSets(builder.build());\n      commit.setDataChangeCreatedBy(itemDTO.getDataChangeLastModifiedBy());\n      commit.setDataChangeLastModifiedBy(itemDTO.getDataChangeLastModifiedBy());\n      commitService.save(commit);\n    }\n\n    return itemDTO;\n  }\n","date":"2018-12-31 20:41:48","endLine":105,"groupId":"993","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"update","params":"(@PathVariable(\"appId\")StringappId@@PathVariable(\"clusterName\")StringclusterName@@PathVariable(\"namespaceName\")StringnamespaceName@@PathVariable(\"itemId\")longitemId@@RequestBodyItemDTOitemDTO)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-apollo-10-0.7/blobInfo/CC_OUT/blobs/d2/ead9bb0b59a56e139a488ecc83f62d26e55b7e.src","preCode":"  public ItemDTO update(@PathVariable(\"appId\") String appId,\n                        @PathVariable(\"clusterName\") String clusterName,\n                        @PathVariable(\"namespaceName\") String namespaceName,\n                        @PathVariable(\"itemId\") long itemId,\n                        @RequestBody ItemDTO itemDTO) {\n\n    Item entity = BeanUtils.transfrom(Item.class, itemDTO);\n\n    ConfigChangeContentBuilder builder = new ConfigChangeContentBuilder();\n\n    Item managedEntity = itemService.findOne(itemId);\n    if (managedEntity == null) {\n      throw new BadRequestException(\"item not exist\");\n    }\n\n    Item beforeUpdateItem = BeanUtils.transfrom(Item.class, managedEntity);\n\n    \r\n    managedEntity.setValue(entity.getValue());\n    managedEntity.setComment(entity.getComment());\n    managedEntity.setDataChangeLastModifiedBy(entity.getDataChangeLastModifiedBy());\n\n    entity = itemService.update(managedEntity);\n    builder.updateItem(beforeUpdateItem, entity);\n    itemDTO = BeanUtils.transfrom(ItemDTO.class, entity);\n\n    if (builder.hasContent()) {\n      Commit commit = new Commit();\n      commit.setAppId(appId);\n      commit.setClusterName(clusterName);\n      commit.setNamespaceName(namespaceName);\n      commit.setChangeSets(builder.build());\n      commit.setDataChangeCreatedBy(itemDTO.getDataChangeLastModifiedBy());\n      commit.setDataChangeLastModifiedBy(itemDTO.getDataChangeLastModifiedBy());\n      commitService.save(commit);\n    }\n\n    return itemDTO;\n  }\n","realPath":"apollo-adminservice/src/main/java/com/ctrip/framework/apollo/adminservice/controller/ItemController.java","repoName":"apollo","snippetEndLine":0,"snippetStartLine":0,"startLine":67,"status":"M"}],"commitId":"34b912c542e1d2e316da5073931f559447914379","commitMessage":"@@@fix typo\n","date":"2018-12-31 20:41:48","modifiedFileCount":"20","status":"M","submitter":"kezhenxu94"},{"authorTime":"2018-12-31 17:45:57","codes":[{"authorDate":"2019-12-27 08:40:30","commitOrder":9,"curCode":"  public ItemDTO create(@PathVariable(\"appId\") String appId,\n                        @PathVariable(\"clusterName\") String clusterName,\n                        @PathVariable(\"namespaceName\") String namespaceName, @RequestBody ItemDTO dto) {\n    Item entity = BeanUtils.transform(Item.class, dto);\n\n    ConfigChangeContentBuilder builder = new ConfigChangeContentBuilder();\n    Item managedEntity = itemService.findOne(appId, clusterName, namespaceName, entity.getKey());\n    if (managedEntity != null) {\n      throw new BadRequestException(\"item already exists\");\n    }\n    entity = itemService.save(entity);\n    builder.createItem(entity);\n    dto = BeanUtils.transform(ItemDTO.class, entity);\n\n    Commit commit = new Commit();\n    commit.setAppId(appId);\n    commit.setClusterName(clusterName);\n    commit.setNamespaceName(namespaceName);\n    commit.setChangeSets(builder.build());\n    commit.setDataChangeCreatedBy(dto.getDataChangeLastModifiedBy());\n    commit.setDataChangeLastModifiedBy(dto.getDataChangeLastModifiedBy());\n    commitService.save(commit);\n\n    return dto;\n  }\n","date":"2019-12-27 08:40:30","endLine":68,"groupId":"1796","id":13,"instanceNumber":1,"isCurCommit":0,"methodName":"create","params":"(@PathVariable(\"appId\")StringappId@@PathVariable(\"clusterName\")StringclusterName@@PathVariable(\"namespaceName\")StringnamespaceName@@RequestBodyItemDTOdto)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-apollo-10-0.7/blobInfo/CC_OUT/blobs/32/981fe116bf50a4308493af4e5c6f18d227eaa4.src","preCode":"  public ItemDTO create(@PathVariable(\"appId\") String appId,\n                        @PathVariable(\"clusterName\") String clusterName,\n                        @PathVariable(\"namespaceName\") String namespaceName, @RequestBody ItemDTO dto) {\n    Item entity = BeanUtils.transform(Item.class, dto);\n\n    ConfigChangeContentBuilder builder = new ConfigChangeContentBuilder();\n    Item managedEntity = itemService.findOne(appId, clusterName, namespaceName, entity.getKey());\n    if (managedEntity != null) {\n      throw new BadRequestException(\"item already exists\");\n    } else {\n      entity = itemService.save(entity);\n      builder.createItem(entity);\n    }\n    dto = BeanUtils.transform(ItemDTO.class, entity);\n\n    Commit commit = new Commit();\n    commit.setAppId(appId);\n    commit.setClusterName(clusterName);\n    commit.setNamespaceName(namespaceName);\n    commit.setChangeSets(builder.build());\n    commit.setDataChangeCreatedBy(dto.getDataChangeLastModifiedBy());\n    commit.setDataChangeLastModifiedBy(dto.getDataChangeLastModifiedBy());\n    commitService.save(commit);\n\n    return dto;\n  }\n","realPath":"apollo-adminservice/src/main/java/com/ctrip/framework/apollo/adminservice/controller/ItemController.java","repoName":"apollo","snippetEndLine":0,"snippetStartLine":0,"startLine":44,"status":"M"},{"authorDate":"2018-12-31 17:45:57","commitOrder":9,"curCode":"  public ItemDTO update(@PathVariable(\"appId\") String appId,\n                        @PathVariable(\"clusterName\") String clusterName,\n                        @PathVariable(\"namespaceName\") String namespaceName,\n                        @PathVariable(\"itemId\") long itemId,\n                        @RequestBody ItemDTO itemDTO) {\n\n    Item entity = BeanUtils.transform(Item.class, itemDTO);\n\n    ConfigChangeContentBuilder builder = new ConfigChangeContentBuilder();\n\n    Item managedEntity = itemService.findOne(itemId);\n    if (managedEntity == null) {\n      throw new BadRequestException(\"item not exist\");\n    }\n\n    Item beforeUpdateItem = BeanUtils.transform(Item.class, managedEntity);\n\n    \r\n    managedEntity.setValue(entity.getValue());\n    managedEntity.setComment(entity.getComment());\n    managedEntity.setDataChangeLastModifiedBy(entity.getDataChangeLastModifiedBy());\n\n    entity = itemService.update(managedEntity);\n    builder.updateItem(beforeUpdateItem, entity);\n    itemDTO = BeanUtils.transform(ItemDTO.class, entity);\n\n    if (builder.hasContent()) {\n      Commit commit = new Commit();\n      commit.setAppId(appId);\n      commit.setClusterName(clusterName);\n      commit.setNamespaceName(namespaceName);\n      commit.setChangeSets(builder.build());\n      commit.setDataChangeCreatedBy(itemDTO.getDataChangeLastModifiedBy());\n      commit.setDataChangeLastModifiedBy(itemDTO.getDataChangeLastModifiedBy());\n      commitService.save(commit);\n    }\n\n    return itemDTO;\n  }\n","date":"2018-12-31 20:41:48","endLine":105,"groupId":"993","id":14,"instanceNumber":2,"isCurCommit":0,"methodName":"update","params":"(@PathVariable(\"appId\")StringappId@@PathVariable(\"clusterName\")StringclusterName@@PathVariable(\"namespaceName\")StringnamespaceName@@PathVariable(\"itemId\")longitemId@@RequestBodyItemDTOitemDTO)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-apollo-10-0.7/blobInfo/CC_OUT/blobs/d2/ead9bb0b59a56e139a488ecc83f62d26e55b7e.src","preCode":"  public ItemDTO update(@PathVariable(\"appId\") String appId,\n                        @PathVariable(\"clusterName\") String clusterName,\n                        @PathVariable(\"namespaceName\") String namespaceName,\n                        @PathVariable(\"itemId\") long itemId,\n                        @RequestBody ItemDTO itemDTO) {\n\n    Item entity = BeanUtils.transform(Item.class, itemDTO);\n\n    ConfigChangeContentBuilder builder = new ConfigChangeContentBuilder();\n\n    Item managedEntity = itemService.findOne(itemId);\n    if (managedEntity == null) {\n      throw new BadRequestException(\"item not exist\");\n    }\n\n    Item beforeUpdateItem = BeanUtils.transform(Item.class, managedEntity);\n\n    \r\n    managedEntity.setValue(entity.getValue());\n    managedEntity.setComment(entity.getComment());\n    managedEntity.setDataChangeLastModifiedBy(entity.getDataChangeLastModifiedBy());\n\n    entity = itemService.update(managedEntity);\n    builder.updateItem(beforeUpdateItem, entity);\n    itemDTO = BeanUtils.transform(ItemDTO.class, entity);\n\n    if (builder.hasContent()) {\n      Commit commit = new Commit();\n      commit.setAppId(appId);\n      commit.setClusterName(clusterName);\n      commit.setNamespaceName(namespaceName);\n      commit.setChangeSets(builder.build());\n      commit.setDataChangeCreatedBy(itemDTO.getDataChangeLastModifiedBy());\n      commit.setDataChangeLastModifiedBy(itemDTO.getDataChangeLastModifiedBy());\n      commitService.save(commit);\n    }\n\n    return itemDTO;\n  }\n","realPath":"apollo-adminservice/src/main/java/com/ctrip/framework/apollo/adminservice/controller/ItemController.java","repoName":"apollo","snippetEndLine":0,"snippetStartLine":0,"startLine":67,"status":"N"}],"commitId":"99a6f5dd21869968b2e056b14915b932aa89a540","commitMessage":"@@@Refactor/remove redundant else (#2864)\n\n\n","date":"2019-12-27 08:40:30","modifiedFileCount":"25","status":"M","submitter":"waters"},{"authorTime":"2020-08-31 17:51:57","codes":[{"authorDate":"2019-12-27 08:40:30","commitOrder":10,"curCode":"  public ItemDTO create(@PathVariable(\"appId\") String appId,\n                        @PathVariable(\"clusterName\") String clusterName,\n                        @PathVariable(\"namespaceName\") String namespaceName, @RequestBody ItemDTO dto) {\n    Item entity = BeanUtils.transform(Item.class, dto);\n\n    ConfigChangeContentBuilder builder = new ConfigChangeContentBuilder();\n    Item managedEntity = itemService.findOne(appId, clusterName, namespaceName, entity.getKey());\n    if (managedEntity != null) {\n      throw new BadRequestException(\"item already exists\");\n    }\n    entity = itemService.save(entity);\n    builder.createItem(entity);\n    dto = BeanUtils.transform(ItemDTO.class, entity);\n\n    Commit commit = new Commit();\n    commit.setAppId(appId);\n    commit.setClusterName(clusterName);\n    commit.setNamespaceName(namespaceName);\n    commit.setChangeSets(builder.build());\n    commit.setDataChangeCreatedBy(dto.getDataChangeLastModifiedBy());\n    commit.setDataChangeLastModifiedBy(dto.getDataChangeLastModifiedBy());\n    commitService.save(commit);\n\n    return dto;\n  }\n","date":"2019-12-27 08:40:30","endLine":68,"groupId":"1796","id":15,"instanceNumber":1,"isCurCommit":0,"methodName":"create","params":"(@PathVariable(\"appId\")StringappId@@PathVariable(\"clusterName\")StringclusterName@@PathVariable(\"namespaceName\")StringnamespaceName@@RequestBodyItemDTOdto)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-apollo-10-0.7/blobInfo/CC_OUT/blobs/32/981fe116bf50a4308493af4e5c6f18d227eaa4.src","preCode":"  public ItemDTO create(@PathVariable(\"appId\") String appId,\n                        @PathVariable(\"clusterName\") String clusterName,\n                        @PathVariable(\"namespaceName\") String namespaceName, @RequestBody ItemDTO dto) {\n    Item entity = BeanUtils.transform(Item.class, dto);\n\n    ConfigChangeContentBuilder builder = new ConfigChangeContentBuilder();\n    Item managedEntity = itemService.findOne(appId, clusterName, namespaceName, entity.getKey());\n    if (managedEntity != null) {\n      throw new BadRequestException(\"item already exists\");\n    }\n    entity = itemService.save(entity);\n    builder.createItem(entity);\n    dto = BeanUtils.transform(ItemDTO.class, entity);\n\n    Commit commit = new Commit();\n    commit.setAppId(appId);\n    commit.setClusterName(clusterName);\n    commit.setNamespaceName(namespaceName);\n    commit.setChangeSets(builder.build());\n    commit.setDataChangeCreatedBy(dto.getDataChangeLastModifiedBy());\n    commit.setDataChangeLastModifiedBy(dto.getDataChangeLastModifiedBy());\n    commitService.save(commit);\n\n    return dto;\n  }\n","realPath":"apollo-adminservice/src/main/java/com/ctrip/framework/apollo/adminservice/controller/ItemController.java","repoName":"apollo","snippetEndLine":0,"snippetStartLine":0,"startLine":44,"status":"N"},{"authorDate":"2020-08-31 17:51:57","commitOrder":10,"curCode":"  public ItemDTO update(@PathVariable(\"appId\") String appId,\n                        @PathVariable(\"clusterName\") String clusterName,\n                        @PathVariable(\"namespaceName\") String namespaceName,\n                        @PathVariable(\"itemId\") long itemId,\n                        @RequestBody ItemDTO itemDTO) {\n    Item managedEntity = itemService.findOne(itemId);\n    if (managedEntity == null) {\n      throw new NotFoundException(\"item not found for itemId \" + itemId);\n    }\n\n    Item entity = BeanUtils.transform(Item.class, itemDTO);\n\n    ConfigChangeContentBuilder builder = new ConfigChangeContentBuilder();\n   \n    Item beforeUpdateItem = BeanUtils.transform(Item.class, managedEntity);\n\n    \r\n    managedEntity.setValue(entity.getValue());\n    managedEntity.setComment(entity.getComment());\n    managedEntity.setDataChangeLastModifiedBy(entity.getDataChangeLastModifiedBy());\n\n    entity = itemService.update(managedEntity);\n    builder.updateItem(beforeUpdateItem, entity);\n    itemDTO = BeanUtils.transform(ItemDTO.class, entity);\n\n    if (builder.hasContent()) {\n      Commit commit = new Commit();\n      commit.setAppId(appId);\n      commit.setClusterName(clusterName);\n      commit.setNamespaceName(namespaceName);\n      commit.setChangeSets(builder.build());\n      commit.setDataChangeCreatedBy(itemDTO.getDataChangeLastModifiedBy());\n      commit.setDataChangeLastModifiedBy(itemDTO.getDataChangeLastModifiedBy());\n      commitService.save(commit);\n    }\n\n    return itemDTO;\n  }\n","date":"2020-09-10 08:19:55","endLine":114,"groupId":"993","id":16,"instanceNumber":2,"isCurCommit":0,"methodName":"update","params":"(@PathVariable(\"appId\")StringappId@@PathVariable(\"clusterName\")StringclusterName@@PathVariable(\"namespaceName\")StringnamespaceName@@PathVariable(\"itemId\")longitemId@@RequestBodyItemDTOitemDTO)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-apollo-10-0.7/blobInfo/CC_OUT/blobs/30/e7d2597b49989c6fe03052ccec1dabc05dbb8a.src","preCode":"  public ItemDTO update(@PathVariable(\"appId\") String appId,\n                        @PathVariable(\"clusterName\") String clusterName,\n                        @PathVariable(\"namespaceName\") String namespaceName,\n                        @PathVariable(\"itemId\") long itemId,\n                        @RequestBody ItemDTO itemDTO) {\n\n    Item entity = BeanUtils.transform(Item.class, itemDTO);\n\n    ConfigChangeContentBuilder builder = new ConfigChangeContentBuilder();\n\n    Item managedEntity = itemService.findOne(itemId);\n    if (managedEntity == null) {\n      throw new BadRequestException(\"item not exist\");\n    }\n\n    Item beforeUpdateItem = BeanUtils.transform(Item.class, managedEntity);\n\n    \r\n    managedEntity.setValue(entity.getValue());\n    managedEntity.setComment(entity.getComment());\n    managedEntity.setDataChangeLastModifiedBy(entity.getDataChangeLastModifiedBy());\n\n    entity = itemService.update(managedEntity);\n    builder.updateItem(beforeUpdateItem, entity);\n    itemDTO = BeanUtils.transform(ItemDTO.class, entity);\n\n    if (builder.hasContent()) {\n      Commit commit = new Commit();\n      commit.setAppId(appId);\n      commit.setClusterName(clusterName);\n      commit.setNamespaceName(namespaceName);\n      commit.setChangeSets(builder.build());\n      commit.setDataChangeCreatedBy(itemDTO.getDataChangeLastModifiedBy());\n      commit.setDataChangeLastModifiedBy(itemDTO.getDataChangeLastModifiedBy());\n      commitService.save(commit);\n    }\n\n    return itemDTO;\n  }\n","realPath":"apollo-adminservice/src/main/java/com/ctrip/framework/apollo/adminservice/controller/ItemController.java","repoName":"apollo","snippetEndLine":0,"snippetStartLine":0,"startLine":77,"status":"M"}],"commitId":"fe2f0599e5f68e37982110c6be2df739844f8466","commitMessage":"@@@Update ItemController.java\n\nmodify error comment?adjust the order of object creation to avoid creating useless objects","date":"2020-09-10 08:19:55","modifiedFileCount":"1","status":"M","submitter":"Joe"},{"authorTime":"2020-10-18 23:16:48","codes":[{"authorDate":"2019-12-27 08:40:30","commitOrder":11,"curCode":"  public ItemDTO create(@PathVariable(\"appId\") String appId,\n                        @PathVariable(\"clusterName\") String clusterName,\n                        @PathVariable(\"namespaceName\") String namespaceName, @RequestBody ItemDTO dto) {\n    Item entity = BeanUtils.transform(Item.class, dto);\n\n    ConfigChangeContentBuilder builder = new ConfigChangeContentBuilder();\n    Item managedEntity = itemService.findOne(appId, clusterName, namespaceName, entity.getKey());\n    if (managedEntity != null) {\n      throw new BadRequestException(\"item already exists\");\n    }\n    entity = itemService.save(entity);\n    builder.createItem(entity);\n    dto = BeanUtils.transform(ItemDTO.class, entity);\n\n    Commit commit = new Commit();\n    commit.setAppId(appId);\n    commit.setClusterName(clusterName);\n    commit.setNamespaceName(namespaceName);\n    commit.setChangeSets(builder.build());\n    commit.setDataChangeCreatedBy(dto.getDataChangeLastModifiedBy());\n    commit.setDataChangeLastModifiedBy(dto.getDataChangeLastModifiedBy());\n    commitService.save(commit);\n\n    return dto;\n  }\n","date":"2019-12-27 08:40:30","endLine":68,"groupId":"1041","id":17,"instanceNumber":1,"isCurCommit":0,"methodName":"create","params":"(@PathVariable(\"appId\")StringappId@@PathVariable(\"clusterName\")StringclusterName@@PathVariable(\"namespaceName\")StringnamespaceName@@RequestBodyItemDTOdto)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-apollo-10-0.7/blobInfo/CC_OUT/blobs/32/981fe116bf50a4308493af4e5c6f18d227eaa4.src","preCode":"  public ItemDTO create(@PathVariable(\"appId\") String appId,\n                        @PathVariable(\"clusterName\") String clusterName,\n                        @PathVariable(\"namespaceName\") String namespaceName, @RequestBody ItemDTO dto) {\n    Item entity = BeanUtils.transform(Item.class, dto);\n\n    ConfigChangeContentBuilder builder = new ConfigChangeContentBuilder();\n    Item managedEntity = itemService.findOne(appId, clusterName, namespaceName, entity.getKey());\n    if (managedEntity != null) {\n      throw new BadRequestException(\"item already exists\");\n    }\n    entity = itemService.save(entity);\n    builder.createItem(entity);\n    dto = BeanUtils.transform(ItemDTO.class, entity);\n\n    Commit commit = new Commit();\n    commit.setAppId(appId);\n    commit.setClusterName(clusterName);\n    commit.setNamespaceName(namespaceName);\n    commit.setChangeSets(builder.build());\n    commit.setDataChangeCreatedBy(dto.getDataChangeLastModifiedBy());\n    commit.setDataChangeLastModifiedBy(dto.getDataChangeLastModifiedBy());\n    commitService.save(commit);\n\n    return dto;\n  }\n","realPath":"apollo-adminservice/src/main/java/com/ctrip/framework/apollo/adminservice/controller/ItemController.java","repoName":"apollo","snippetEndLine":0,"snippetStartLine":0,"startLine":44,"status":"N"},{"authorDate":"2020-10-18 23:16:48","commitOrder":11,"curCode":"  public ItemDTO update(@PathVariable(\"appId\") String appId,\n                        @PathVariable(\"clusterName\") String clusterName,\n                        @PathVariable(\"namespaceName\") String namespaceName,\n                        @PathVariable(\"itemId\") long itemId,\n                        @RequestBody ItemDTO itemDTO) {\n    Item managedEntity = itemService.findOne(itemId);\n    if (managedEntity == null) {\n      throw new NotFoundException(\"item not found for itemId \" + itemId);\n    }\n\n    Namespace namespace = namespaceService.findOne(appId, clusterName, namespaceName);\n    \r\n    if (namespace == null || namespace.getId() != managedEntity.getNamespaceId()) {\n      throw new BadRequestException(\"Invalid request, item and namespace do not match!\");\n    }\n\n    Item entity = BeanUtils.transform(Item.class, itemDTO);\n\n    ConfigChangeContentBuilder builder = new ConfigChangeContentBuilder();\n   \n    Item beforeUpdateItem = BeanUtils.transform(Item.class, managedEntity);\n\n    \r\n    managedEntity.setValue(entity.getValue());\n    managedEntity.setComment(entity.getComment());\n    managedEntity.setDataChangeLastModifiedBy(entity.getDataChangeLastModifiedBy());\n\n    entity = itemService.update(managedEntity);\n    builder.updateItem(beforeUpdateItem, entity);\n    itemDTO = BeanUtils.transform(ItemDTO.class, entity);\n\n    if (builder.hasContent()) {\n      Commit commit = new Commit();\n      commit.setAppId(appId);\n      commit.setClusterName(clusterName);\n      commit.setNamespaceName(namespaceName);\n      commit.setChangeSets(builder.build());\n      commit.setDataChangeCreatedBy(itemDTO.getDataChangeLastModifiedBy());\n      commit.setDataChangeLastModifiedBy(itemDTO.getDataChangeLastModifiedBy());\n      commitService.save(commit);\n    }\n\n    return itemDTO;\n  }\n","date":"2020-10-19 08:23:31","endLine":120,"groupId":"1041","id":18,"instanceNumber":2,"isCurCommit":0,"methodName":"update","params":"(@PathVariable(\"appId\")StringappId@@PathVariable(\"clusterName\")StringclusterName@@PathVariable(\"namespaceName\")StringnamespaceName@@PathVariable(\"itemId\")longitemId@@RequestBodyItemDTOitemDTO)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-apollo-10-0.7/blobInfo/CC_OUT/blobs/e2/ac544a776cfb33f017c94d165b33be7e790d06.src","preCode":"  public ItemDTO update(@PathVariable(\"appId\") String appId,\n                        @PathVariable(\"clusterName\") String clusterName,\n                        @PathVariable(\"namespaceName\") String namespaceName,\n                        @PathVariable(\"itemId\") long itemId,\n                        @RequestBody ItemDTO itemDTO) {\n    Item managedEntity = itemService.findOne(itemId);\n    if (managedEntity == null) {\n      throw new NotFoundException(\"item not found for itemId \" + itemId);\n    }\n\n    Item entity = BeanUtils.transform(Item.class, itemDTO);\n\n    ConfigChangeContentBuilder builder = new ConfigChangeContentBuilder();\n   \n    Item beforeUpdateItem = BeanUtils.transform(Item.class, managedEntity);\n\n    \r\n    managedEntity.setValue(entity.getValue());\n    managedEntity.setComment(entity.getComment());\n    managedEntity.setDataChangeLastModifiedBy(entity.getDataChangeLastModifiedBy());\n\n    entity = itemService.update(managedEntity);\n    builder.updateItem(beforeUpdateItem, entity);\n    itemDTO = BeanUtils.transform(ItemDTO.class, entity);\n\n    if (builder.hasContent()) {\n      Commit commit = new Commit();\n      commit.setAppId(appId);\n      commit.setClusterName(clusterName);\n      commit.setNamespaceName(namespaceName);\n      commit.setChangeSets(builder.build());\n      commit.setDataChangeCreatedBy(itemDTO.getDataChangeLastModifiedBy());\n      commit.setDataChangeLastModifiedBy(itemDTO.getDataChangeLastModifiedBy());\n      commitService.save(commit);\n    }\n\n    return itemDTO;\n  }\n","realPath":"apollo-adminservice/src/main/java/com/ctrip/framework/apollo/adminservice/controller/ItemController.java","repoName":"apollo","snippetEndLine":0,"snippetStartLine":0,"startLine":77,"status":"M"}],"commitId":"fa92051d3b0c0ac43802871408ffb8691f4585e4","commitMessage":"@@@fix potential data inconsistency issue\n","date":"2020-10-19 08:23:31","modifiedFileCount":"2","status":"M","submitter":"Jason Song"}]
