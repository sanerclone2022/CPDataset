[{"authorTime":"2017-01-24 17:20:46","codes":[{"authorDate":"2016-10-12 16:40:30","commitOrder":2,"curCode":"  public void testGetIntProperty() throws Exception {\n    String someStringKey = \"someStringKey\";\n    String someStringValue = \"someStringValue\";\n\n    String someKey = \"someKey\";\n    Integer someValue = 2;\n\n    Integer someDefaultValue = -1;\n\n    \r\n    someProperties = new Properties();\n    someProperties.setProperty(someStringKey, someStringValue);\n    someProperties.setProperty(someKey, String.valueOf(someValue));\n    when(configRepository.getConfig()).thenReturn(someProperties);\n\n    DefaultConfig defaultConfig =\n        new DefaultConfig(someNamespace, configRepository);\n\n    assertEquals(someValue, defaultConfig.getIntProperty(someKey, someDefaultValue));\n    assertEquals(someDefaultValue, defaultConfig.getIntProperty(someStringKey, someDefaultValue));\n  }\n","date":"2016-10-12 16:40:30","endLine":131,"groupId":"1016","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testGetIntProperty","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-apollo-10-0.7/blobInfo/CC_OUT/blobs/f4/d22e6d48583969a343f292463dbf43c3f52e4d.src","preCode":"  public void testGetIntProperty() throws Exception {\n    String someStringKey = \"someStringKey\";\n    String someStringValue = \"someStringValue\";\n\n    String someKey = \"someKey\";\n    Integer someValue = 2;\n\n    Integer someDefaultValue = -1;\n\n    \r\n    someProperties = new Properties();\n    someProperties.setProperty(someStringKey, someStringValue);\n    someProperties.setProperty(someKey, String.valueOf(someValue));\n    when(configRepository.getConfig()).thenReturn(someProperties);\n\n    DefaultConfig defaultConfig =\n        new DefaultConfig(someNamespace, configRepository);\n\n    assertEquals(someValue, defaultConfig.getIntProperty(someKey, someDefaultValue));\n    assertEquals(someDefaultValue, defaultConfig.getIntProperty(someStringKey, someDefaultValue));\n  }\n","realPath":"apollo-client/src/test/java/com/ctrip/framework/apollo/internals/DefaultConfigTest.java","repoName":"apollo","snippetEndLine":0,"snippetStartLine":0,"startLine":111,"status":"NB"},{"authorDate":"2017-01-24 17:20:46","commitOrder":2,"curCode":"  public void testGetIntPropertyMultipleTimesWithShortExpireTime() throws Exception {\n    String someKey = \"someKey\";\n    Integer someValue = 2;\n\n    Integer someDefaultValue = -1;\n\n    defineComponent(ConfigUtil.class, MockConfigUtilWithShortExpireTime.class);\n\n    \r\n    someProperties = mock(Properties.class);\n    when(someProperties.getProperty(someKey)).thenReturn(String.valueOf(someValue));\n    when(configRepository.getConfig()).thenReturn(someProperties);\n\n    DefaultConfig defaultConfig =\n        new DefaultConfig(someNamespace, configRepository);\n\n    assertEquals(someValue, defaultConfig.getIntProperty(someKey, someDefaultValue));\n    assertEquals(someValue, defaultConfig.getIntProperty(someKey, someDefaultValue));\n\n    verify(someProperties, times(1)).getProperty(someKey);\n\n    TimeUnit.MILLISECONDS.sleep(50);\n\n    assertEquals(someValue, defaultConfig.getIntProperty(someKey, someDefaultValue));\n    assertEquals(someValue, defaultConfig.getIntProperty(someKey, someDefaultValue));\n\n    verify(someProperties, times(2)).getProperty(someKey);\n  }\n","date":"2017-01-24 17:20:46","endLine":254,"groupId":"468","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testGetIntPropertyMultipleTimesWithShortExpireTime","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-apollo-10-0.7/blobInfo/CC_OUT/blobs/44/c9e475a3f53a887cd8607a649378e62e59d4c4.src","preCode":"  public void testGetIntPropertyMultipleTimesWithShortExpireTime() throws Exception {\n    String someKey = \"someKey\";\n    Integer someValue = 2;\n\n    Integer someDefaultValue = -1;\n\n    defineComponent(ConfigUtil.class, MockConfigUtilWithShortExpireTime.class);\n\n    \r\n    someProperties = mock(Properties.class);\n    when(someProperties.getProperty(someKey)).thenReturn(String.valueOf(someValue));\n    when(configRepository.getConfig()).thenReturn(someProperties);\n\n    DefaultConfig defaultConfig =\n        new DefaultConfig(someNamespace, configRepository);\n\n    assertEquals(someValue, defaultConfig.getIntProperty(someKey, someDefaultValue));\n    assertEquals(someValue, defaultConfig.getIntProperty(someKey, someDefaultValue));\n\n    verify(someProperties, times(1)).getProperty(someKey);\n\n    TimeUnit.MILLISECONDS.sleep(50);\n\n    assertEquals(someValue, defaultConfig.getIntProperty(someKey, someDefaultValue));\n    assertEquals(someValue, defaultConfig.getIntProperty(someKey, someDefaultValue));\n\n    verify(someProperties, times(2)).getProperty(someKey);\n  }\n","realPath":"apollo-client/src/test/java/com/ctrip/framework/apollo/internals/DefaultConfigTest.java","repoName":"apollo","snippetEndLine":0,"snippetStartLine":0,"startLine":227,"status":"B"}],"commitId":"58351732b3b51e692a1dfeab9d177fc03e3465ce","commitMessage":"@@@Merge pull request #531 from nobodyiam/optimize-client-parse\n\nOptimize client parse performance","date":"2017-01-24 17:20:46","modifiedFileCount":"18","status":"M","submitter":"??"},{"authorTime":"2017-04-26 11:32:55","codes":[{"authorDate":"2016-10-12 16:40:30","commitOrder":3,"curCode":"  public void testGetIntProperty() throws Exception {\n    String someStringKey = \"someStringKey\";\n    String someStringValue = \"someStringValue\";\n\n    String someKey = \"someKey\";\n    Integer someValue = 2;\n\n    Integer someDefaultValue = -1;\n\n    \r\n    someProperties = new Properties();\n    someProperties.setProperty(someStringKey, someStringValue);\n    someProperties.setProperty(someKey, String.valueOf(someValue));\n    when(configRepository.getConfig()).thenReturn(someProperties);\n\n    DefaultConfig defaultConfig =\n        new DefaultConfig(someNamespace, configRepository);\n\n    assertEquals(someValue, defaultConfig.getIntProperty(someKey, someDefaultValue));\n    assertEquals(someDefaultValue, defaultConfig.getIntProperty(someStringKey, someDefaultValue));\n  }\n","date":"2016-10-12 16:40:30","endLine":131,"groupId":"1016","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testGetIntProperty","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-apollo-10-0.7/blobInfo/CC_OUT/blobs/f4/d22e6d48583969a343f292463dbf43c3f52e4d.src","preCode":"  public void testGetIntProperty() throws Exception {\n    String someStringKey = \"someStringKey\";\n    String someStringValue = \"someStringValue\";\n\n    String someKey = \"someKey\";\n    Integer someValue = 2;\n\n    Integer someDefaultValue = -1;\n\n    \r\n    someProperties = new Properties();\n    someProperties.setProperty(someStringKey, someStringValue);\n    someProperties.setProperty(someKey, String.valueOf(someValue));\n    when(configRepository.getConfig()).thenReturn(someProperties);\n\n    DefaultConfig defaultConfig =\n        new DefaultConfig(someNamespace, configRepository);\n\n    assertEquals(someValue, defaultConfig.getIntProperty(someKey, someDefaultValue));\n    assertEquals(someDefaultValue, defaultConfig.getIntProperty(someStringKey, someDefaultValue));\n  }\n","realPath":"apollo-client/src/test/java/com/ctrip/framework/apollo/internals/DefaultConfigTest.java","repoName":"apollo","snippetEndLine":0,"snippetStartLine":0,"startLine":111,"status":"N"},{"authorDate":"2017-04-26 11:32:55","commitOrder":3,"curCode":"  public void testGetIntPropertyMultipleTimesWithShortExpireTime() throws Exception {\n    String someKey = \"someKey\";\n    Integer someValue = 2;\n\n    Integer someDefaultValue = -1;\n\n    MockInjector.setInstance(ConfigUtil.class, new MockConfigUtilWithShortExpireTime());\n\n    \r\n    someProperties = mock(Properties.class);\n    when(someProperties.getProperty(someKey)).thenReturn(String.valueOf(someValue));\n    when(configRepository.getConfig()).thenReturn(someProperties);\n\n    DefaultConfig defaultConfig =\n        new DefaultConfig(someNamespace, configRepository);\n\n    assertEquals(someValue, defaultConfig.getIntProperty(someKey, someDefaultValue));\n    assertEquals(someValue, defaultConfig.getIntProperty(someKey, someDefaultValue));\n\n    verify(someProperties, times(1)).getProperty(someKey);\n\n    TimeUnit.MILLISECONDS.sleep(50);\n\n    assertEquals(someValue, defaultConfig.getIntProperty(someKey, someDefaultValue));\n    assertEquals(someValue, defaultConfig.getIntProperty(someKey, someDefaultValue));\n\n    verify(someProperties, times(2)).getProperty(someKey);\n  }\n","date":"2017-04-26 11:32:55","endLine":251,"groupId":"468","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testGetIntPropertyMultipleTimesWithShortExpireTime","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-apollo-10-0.7/blobInfo/CC_OUT/blobs/a8/2a04fc892c2ec2f819d61b26703a00d5d93dce.src","preCode":"  public void testGetIntPropertyMultipleTimesWithShortExpireTime() throws Exception {\n    String someKey = \"someKey\";\n    Integer someValue = 2;\n\n    Integer someDefaultValue = -1;\n\n    defineComponent(ConfigUtil.class, MockConfigUtilWithShortExpireTime.class);\n\n    \r\n    someProperties = mock(Properties.class);\n    when(someProperties.getProperty(someKey)).thenReturn(String.valueOf(someValue));\n    when(configRepository.getConfig()).thenReturn(someProperties);\n\n    DefaultConfig defaultConfig =\n        new DefaultConfig(someNamespace, configRepository);\n\n    assertEquals(someValue, defaultConfig.getIntProperty(someKey, someDefaultValue));\n    assertEquals(someValue, defaultConfig.getIntProperty(someKey, someDefaultValue));\n\n    verify(someProperties, times(1)).getProperty(someKey);\n\n    TimeUnit.MILLISECONDS.sleep(50);\n\n    assertEquals(someValue, defaultConfig.getIntProperty(someKey, someDefaultValue));\n    assertEquals(someValue, defaultConfig.getIntProperty(someKey, someDefaultValue));\n\n    verify(someProperties, times(2)).getProperty(someKey);\n  }\n","realPath":"apollo-client/src/test/java/com/ctrip/framework/apollo/internals/DefaultConfigTest.java","repoName":"apollo","snippetEndLine":0,"snippetStartLine":0,"startLine":224,"status":"M"}],"commitId":"bc0e48466c4ab97a251d616fe1093f755505fb63","commitMessage":"@@@Merge pull request #599 from nobodyiam/use-guice-as-client-ioc\n\nuse guice as apollo-client ioc mechanism","date":"2017-04-26 11:32:55","modifiedFileCount":"53","status":"M","submitter":"??"},{"authorTime":"2020-11-22 17:56:50","codes":[{"authorDate":"2016-10-12 16:40:30","commitOrder":4,"curCode":"  public void testGetIntProperty() throws Exception {\n    String someStringKey = \"someStringKey\";\n    String someStringValue = \"someStringValue\";\n\n    String someKey = \"someKey\";\n    Integer someValue = 2;\n\n    Integer someDefaultValue = -1;\n\n    \r\n    someProperties = new Properties();\n    someProperties.setProperty(someStringKey, someStringValue);\n    someProperties.setProperty(someKey, String.valueOf(someValue));\n    when(configRepository.getConfig()).thenReturn(someProperties);\n\n    DefaultConfig defaultConfig =\n        new DefaultConfig(someNamespace, configRepository);\n\n    assertEquals(someValue, defaultConfig.getIntProperty(someKey, someDefaultValue));\n    assertEquals(someDefaultValue, defaultConfig.getIntProperty(someStringKey, someDefaultValue));\n  }\n","date":"2016-10-12 16:40:30","endLine":131,"groupId":"10247","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testGetIntProperty","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-apollo-10-0.7/blobInfo/CC_OUT/blobs/f4/d22e6d48583969a343f292463dbf43c3f52e4d.src","preCode":"  public void testGetIntProperty() throws Exception {\n    String someStringKey = \"someStringKey\";\n    String someStringValue = \"someStringValue\";\n\n    String someKey = \"someKey\";\n    Integer someValue = 2;\n\n    Integer someDefaultValue = -1;\n\n    \r\n    someProperties = new Properties();\n    someProperties.setProperty(someStringKey, someStringValue);\n    someProperties.setProperty(someKey, String.valueOf(someValue));\n    when(configRepository.getConfig()).thenReturn(someProperties);\n\n    DefaultConfig defaultConfig =\n        new DefaultConfig(someNamespace, configRepository);\n\n    assertEquals(someValue, defaultConfig.getIntProperty(someKey, someDefaultValue));\n    assertEquals(someDefaultValue, defaultConfig.getIntProperty(someStringKey, someDefaultValue));\n  }\n","realPath":"apollo-client/src/test/java/com/ctrip/framework/apollo/internals/DefaultConfigTest.java","repoName":"apollo","snippetEndLine":0,"snippetStartLine":0,"startLine":111,"status":"N"},{"authorDate":"2020-11-22 17:56:50","commitOrder":4,"curCode":"  public void testGetIntPropertyMultipleTimesWithShortExpireTime() throws Exception {\n    final String someKey = \"someKey\";\n    final Integer someValue = 2;\n\n    final Integer someDefaultValue = -1;\n\n    MockInjector.setInstance(ConfigUtil.class, new MockConfigUtilWithShortExpireTime());\n\n    \r\n    someProperties = mock(Properties.class);\n    when(someProperties.getProperty(someKey)).thenReturn(String.valueOf(someValue));\n    when(configRepository.getConfig()).thenReturn(someProperties);\n\n    final DefaultConfig defaultConfig =\n        new DefaultConfig(someNamespace, configRepository);\n\n    assertEquals(someValue, defaultConfig.getIntProperty(someKey, someDefaultValue));\n    assertEquals(someValue, defaultConfig.getIntProperty(someKey, someDefaultValue));\n\n    verify(someProperties, times(1)).getProperty(someKey);\n\n    await().atMost(500, TimeUnit.MILLISECONDS).untilAsserted(new ThrowingRunnable() {\n      @Override\n      public void run() throws Throwable {\n        assertEquals(someValue, defaultConfig.getIntProperty(someKey, someDefaultValue));\n        assertEquals(someValue, defaultConfig.getIntProperty(someKey, someDefaultValue));\n\n        verify(someProperties, times(2)).getProperty(someKey);\n      }\n    });\n  }\n","date":"2020-11-22 22:11:00","endLine":286,"groupId":"10247","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testGetIntPropertyMultipleTimesWithShortExpireTime","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-apollo-10-0.7/blobInfo/CC_OUT/blobs/cf/0377be6b57a8b57be50babd64981a95422506b.src","preCode":"  public void testGetIntPropertyMultipleTimesWithShortExpireTime() throws Exception {\n    String someKey = \"someKey\";\n    Integer someValue = 2;\n\n    Integer someDefaultValue = -1;\n\n    MockInjector.setInstance(ConfigUtil.class, new MockConfigUtilWithShortExpireTime());\n\n    \r\n    someProperties = mock(Properties.class);\n    when(someProperties.getProperty(someKey)).thenReturn(String.valueOf(someValue));\n    when(configRepository.getConfig()).thenReturn(someProperties);\n\n    DefaultConfig defaultConfig =\n        new DefaultConfig(someNamespace, configRepository);\n\n    assertEquals(someValue, defaultConfig.getIntProperty(someKey, someDefaultValue));\n    assertEquals(someValue, defaultConfig.getIntProperty(someKey, someDefaultValue));\n\n    verify(someProperties, times(1)).getProperty(someKey);\n\n    TimeUnit.MILLISECONDS.sleep(50);\n\n    assertEquals(someValue, defaultConfig.getIntProperty(someKey, someDefaultValue));\n    assertEquals(someValue, defaultConfig.getIntProperty(someKey, someDefaultValue));\n\n    verify(someProperties, times(2)).getProperty(someKey);\n  }\n","realPath":"apollo-client/src/test/java/com/ctrip/framework/apollo/internals/DefaultConfigTest.java","repoName":"apollo","snippetEndLine":0,"snippetStartLine":0,"startLine":256,"status":"M"}],"commitId":"c2a87269104fbf182a8e8983d754e485d91b9b14","commitMessage":"@@@use await to make the test more stable\n","date":"2020-11-22 22:11:00","modifiedFileCount":"1","status":"M","submitter":"Jason Song"}]
