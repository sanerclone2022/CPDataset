[{"authorTime":"2018-07-24 02:11:59","codes":[{"authorDate":"2018-12-15 20:51:38","commitOrder":4,"curCode":"  public void assignNamespaceRoleToOperator(String appId, String namespaceName, String operator) {\n    \r\n\n    rolePermissionService\n        .assignRoleToUsers(\n            RoleUtils.buildNamespaceRoleName(appId, namespaceName, RoleType.MODIFY_NAMESPACE),\n            Sets.newHashSet(operator), operator);\n    rolePermissionService\n        .assignRoleToUsers(\n            RoleUtils.buildNamespaceRoleName(appId, namespaceName, RoleType.RELEASE_NAMESPACE),\n            Sets.newHashSet(operator), operator);\n  }\n","date":"2018-12-15 20:51:38","endLine":321,"groupId":"1478","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"assignNamespaceRoleToOperator","params":"(StringappId@StringnamespaceName@Stringoperator)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-apollo-10-0.7/blobInfo/CC_OUT/blobs/34/37f4bfeefc2eddefb6f6ccae4936e24ddea8d0.src","preCode":"  public void assignNamespaceRoleToOperator(String appId, String namespaceName, String operator) {\n    \r\n\n    rolePermissionService\n        .assignRoleToUsers(\n            RoleUtils.buildNamespaceRoleName(appId, namespaceName, RoleType.MODIFY_NAMESPACE),\n            Sets.newHashSet(operator), operator);\n    rolePermissionService\n        .assignRoleToUsers(\n            RoleUtils.buildNamespaceRoleName(appId, namespaceName, RoleType.RELEASE_NAMESPACE),\n            Sets.newHashSet(operator), operator);\n  }\n","realPath":"apollo-portal/src/main/java/com/ctrip/framework/apollo/portal/service/NamespaceService.java","repoName":"apollo","snippetEndLine":0,"snippetStartLine":0,"startLine":310,"status":"B"},{"authorDate":"2018-07-24 02:11:59","commitOrder":4,"curCode":"  public void initAppRoles(App app) {\n    String appId = app.getAppId();\n\n    String appMasterRoleName = RoleUtils.buildAppMasterRoleName(appId);\n\n    \r\n    if (rolePermissionService.findRoleByRoleName(appMasterRoleName) != null) {\n      return;\n    }\n    String operator = app.getDataChangeCreatedBy();\n    \r\n    createAppMasterRole(appId, operator);\n\n    \r\n    rolePermissionService\n        .assignRoleToUsers(RoleUtils.buildAppMasterRoleName(appId), Sets.newHashSet(app.getOwnerName()),\n            operator);\n\n    initNamespaceRoles(appId, ConfigConsts.NAMESPACE_APPLICATION, operator);\n    initNamespaceEnvRoles(appId, ConfigConsts.NAMESPACE_APPLICATION, operator);\n\n    \r\n    rolePermissionService.assignRoleToUsers(\n        RoleUtils.buildNamespaceRoleName(appId, ConfigConsts.NAMESPACE_APPLICATION, RoleType.MODIFY_NAMESPACE),\n        Sets.newHashSet(operator), operator);\n    rolePermissionService.assignRoleToUsers(\n        RoleUtils.buildNamespaceRoleName(appId, ConfigConsts.NAMESPACE_APPLICATION, RoleType.RELEASE_NAMESPACE),\n        Sets.newHashSet(operator), operator);\n\n  }\n","date":"2018-07-24 02:11:59","endLine":67,"groupId":"1297","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"initAppRoles","params":"(Appapp)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-apollo-10-0.7/blobInfo/CC_OUT/blobs/71/d911dab912070e2c609cffc083e7b1d8adbe80.src","preCode":"  public void initAppRoles(App app) {\n    String appId = app.getAppId();\n\n    String appMasterRoleName = RoleUtils.buildAppMasterRoleName(appId);\n\n    \r\n    if (rolePermissionService.findRoleByRoleName(appMasterRoleName) != null) {\n      return;\n    }\n    String operator = app.getDataChangeCreatedBy();\n    \r\n    createAppMasterRole(appId, operator);\n\n    \r\n    rolePermissionService\n        .assignRoleToUsers(RoleUtils.buildAppMasterRoleName(appId), Sets.newHashSet(app.getOwnerName()),\n            operator);\n\n    initNamespaceRoles(appId, ConfigConsts.NAMESPACE_APPLICATION, operator);\n    initNamespaceEnvRoles(appId, ConfigConsts.NAMESPACE_APPLICATION, operator);\n\n    \r\n    rolePermissionService.assignRoleToUsers(\n        RoleUtils.buildNamespaceRoleName(appId, ConfigConsts.NAMESPACE_APPLICATION, RoleType.MODIFY_NAMESPACE),\n        Sets.newHashSet(operator), operator);\n    rolePermissionService.assignRoleToUsers(\n        RoleUtils.buildNamespaceRoleName(appId, ConfigConsts.NAMESPACE_APPLICATION, RoleType.RELEASE_NAMESPACE),\n        Sets.newHashSet(operator), operator);\n\n  }\n","realPath":"apollo-portal/src/main/java/com/ctrip/framework/apollo/portal/spi/defaultimpl/DefaultRoleInitializationService.java","repoName":"apollo","snippetEndLine":0,"snippetStartLine":0,"startLine":38,"status":"NB"}],"commitId":"e226f8b03f8e745c8acf8cb0fef4979a70bdd1ad","commitMessage":"@@@Merge pull request #1773 from JaredTan95/refactoring-rolepermissionService\n\nrefactoring namespace service a little.","date":"2018-12-15 20:51:38","modifiedFileCount":"2","status":"M","submitter":"Jason Song"},{"authorTime":"2019-07-13 22:00:06","codes":[{"authorDate":"2018-12-15 20:51:38","commitOrder":5,"curCode":"  public void assignNamespaceRoleToOperator(String appId, String namespaceName, String operator) {\n    \r\n\n    rolePermissionService\n        .assignRoleToUsers(\n            RoleUtils.buildNamespaceRoleName(appId, namespaceName, RoleType.MODIFY_NAMESPACE),\n            Sets.newHashSet(operator), operator);\n    rolePermissionService\n        .assignRoleToUsers(\n            RoleUtils.buildNamespaceRoleName(appId, namespaceName, RoleType.RELEASE_NAMESPACE),\n            Sets.newHashSet(operator), operator);\n  }\n","date":"2018-12-15 20:51:38","endLine":321,"groupId":"10159","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"assignNamespaceRoleToOperator","params":"(StringappId@StringnamespaceName@Stringoperator)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-apollo-10-0.7/blobInfo/CC_OUT/blobs/34/37f4bfeefc2eddefb6f6ccae4936e24ddea8d0.src","preCode":"  public void assignNamespaceRoleToOperator(String appId, String namespaceName, String operator) {\n    \r\n\n    rolePermissionService\n        .assignRoleToUsers(\n            RoleUtils.buildNamespaceRoleName(appId, namespaceName, RoleType.MODIFY_NAMESPACE),\n            Sets.newHashSet(operator), operator);\n    rolePermissionService\n        .assignRoleToUsers(\n            RoleUtils.buildNamespaceRoleName(appId, namespaceName, RoleType.RELEASE_NAMESPACE),\n            Sets.newHashSet(operator), operator);\n  }\n","realPath":"apollo-portal/src/main/java/com/ctrip/framework/apollo/portal/service/NamespaceService.java","repoName":"apollo","snippetEndLine":0,"snippetStartLine":0,"startLine":310,"status":"N"},{"authorDate":"2019-07-13 22:00:06","commitOrder":5,"curCode":"  public void initAppRoles(App app) {\n    String appId = app.getAppId();\n\n    String appMasterRoleName = RoleUtils.buildAppMasterRoleName(appId);\n\n    \r\n    if (rolePermissionService.findRoleByRoleName(appMasterRoleName) != null) {\n      return;\n    }\n    String operator = app.getDataChangeCreatedBy();\n    \r\n    createAppMasterRole(appId, operator);\n    \r\n    createManageAppMasterRole(appId, operator);\n\n    \r\n    rolePermissionService\n        .assignRoleToUsers(RoleUtils.buildAppMasterRoleName(appId), Sets.newHashSet(app.getOwnerName()),\n            operator);\n\n    initNamespaceRoles(appId, ConfigConsts.NAMESPACE_APPLICATION, operator);\n    initNamespaceEnvRoles(appId, ConfigConsts.NAMESPACE_APPLICATION, operator);\n\n    \r\n    rolePermissionService.assignRoleToUsers(\n        RoleUtils.buildNamespaceRoleName(appId, ConfigConsts.NAMESPACE_APPLICATION, RoleType.MODIFY_NAMESPACE),\n        Sets.newHashSet(operator), operator);\n    rolePermissionService.assignRoleToUsers(\n        RoleUtils.buildNamespaceRoleName(appId, ConfigConsts.NAMESPACE_APPLICATION, RoleType.RELEASE_NAMESPACE),\n        Sets.newHashSet(operator), operator);\n\n  }\n","date":"2019-07-13 22:00:06","endLine":71,"groupId":"10159","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"initAppRoles","params":"(Appapp)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-apollo-10-0.7/blobInfo/CC_OUT/blobs/ab/bfd05a5d03080cbdd021ac7e8bb6230187a43d.src","preCode":"  public void initAppRoles(App app) {\n    String appId = app.getAppId();\n\n    String appMasterRoleName = RoleUtils.buildAppMasterRoleName(appId);\n\n    \r\n    if (rolePermissionService.findRoleByRoleName(appMasterRoleName) != null) {\n      return;\n    }\n    String operator = app.getDataChangeCreatedBy();\n    \r\n    createAppMasterRole(appId, operator);\n\n    \r\n    rolePermissionService\n        .assignRoleToUsers(RoleUtils.buildAppMasterRoleName(appId), Sets.newHashSet(app.getOwnerName()),\n            operator);\n\n    initNamespaceRoles(appId, ConfigConsts.NAMESPACE_APPLICATION, operator);\n    initNamespaceEnvRoles(appId, ConfigConsts.NAMESPACE_APPLICATION, operator);\n\n    \r\n    rolePermissionService.assignRoleToUsers(\n        RoleUtils.buildNamespaceRoleName(appId, ConfigConsts.NAMESPACE_APPLICATION, RoleType.MODIFY_NAMESPACE),\n        Sets.newHashSet(operator), operator);\n    rolePermissionService.assignRoleToUsers(\n        RoleUtils.buildNamespaceRoleName(appId, ConfigConsts.NAMESPACE_APPLICATION, RoleType.RELEASE_NAMESPACE),\n        Sets.newHashSet(operator), operator);\n\n  }\n","realPath":"apollo-portal/src/main/java/com/ctrip/framework/apollo/portal/spi/defaultimpl/DefaultRoleInitializationService.java","repoName":"apollo","snippetEndLine":0,"snippetStartLine":0,"startLine":40,"status":"M"}],"commitId":"fef47d8594947885c2e0bf39fbc54ed82c935b86","commitMessage":"@@@Add Create Application and Manage Application Master roles (#2309)\n\nAdd system property role.create-application.enabled to control whether anyone can create application or not.\n\nAdd system property role.manage-app-master.enabled to control whether any app master can add/delete other app master","date":"2019-07-13 22:00:06","modifiedFileCount":"10","status":"M","submitter":"wk"}]
