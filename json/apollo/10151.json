[{"authorTime":"2018-07-22 21:26:11","codes":[{"authorDate":"2017-03-12 15:31:33","commitOrder":3,"curCode":"  public void onAppInfoChange(AppInfoChangedEvent event) {\n    AppDTO appDTO = BeanUtils.transfrom(AppDTO.class, event.getApp());\n    String appId = appDTO.getAppId();\n\n    List<Env> envs = portalSettings.getActiveEnvs();\n    for (Env env : envs) {\n      try {\n        appAPI.updateApp(env, appDTO);\n      } catch (Throwable e) {\n        logger.error(\"Update app's info failed. Env = {}, AppId = {}\", env, appId, e);\n        Tracer.logError(String.format(\"Update app's info failed. Env = %s, AppId = %s\", env, appId), e);\n      }\n    }\n\n  }\n","date":"2017-03-12 15:31:33","endLine":43,"groupId":"1630","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"onAppInfoChange","params":"(AppInfoChangedEventevent)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-apollo-10-0.7/blobInfo/CC_OUT/blobs/e4/5bb22ec64610aea5f1d2f628899e266899ddb1.src","preCode":"  public void onAppInfoChange(AppInfoChangedEvent event) {\n    AppDTO appDTO = BeanUtils.transfrom(AppDTO.class, event.getApp());\n    String appId = appDTO.getAppId();\n\n    List<Env> envs = portalSettings.getActiveEnvs();\n    for (Env env : envs) {\n      try {\n        appAPI.updateApp(env, appDTO);\n      } catch (Throwable e) {\n        logger.error(\"Update app's info failed. Env = {}, AppId = {}\", env, appId, e);\n        Tracer.logError(String.format(\"Update app's info failed. Env = %s, AppId = %s\", env, appId), e);\n      }\n    }\n\n  }\n","realPath":"apollo-portal/src/main/java/com/ctrip/framework/apollo/portal/listener/AppInfoChangedListener.java","repoName":"apollo","snippetEndLine":0,"snippetStartLine":0,"startLine":29,"status":"NB"},{"authorDate":"2018-07-22 21:26:11","commitOrder":3,"curCode":"  public void onAppDeletionEvent(AppDeletionEvent event) {\n    AppDTO appDTO = BeanUtils.transfrom(AppDTO.class, event.getApp());\n    String appId = appDTO.getAppId();\n    String operator = appDTO.getDataChangeLastModifiedBy();\n\n    List<Env> envs = portalSettings.getActiveEnvs();\n    for (Env env : envs) {\n      try {\n        appAPI.deleteApp(env, appId, operator);\n      } catch (Throwable e) {\n        logger.error(\"Delete app failed. Env = {}, AppId = {}\", env, appId, e);\n        Tracer.logError(String.format(\"Delete app failed. Env = %s, AppId = %s\", env, appId), e);\n      }\n    }\n  }\n","date":"2018-07-22 21:26:11","endLine":44,"groupId":"1351","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"onAppDeletionEvent","params":"(AppDeletionEventevent)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-apollo-10-0.7/blobInfo/CC_OUT/blobs/0d/99734010b83675354f45f2719e140f37df97cd.src","preCode":"  public void onAppDeletionEvent(AppDeletionEvent event) {\n    AppDTO appDTO = BeanUtils.transfrom(AppDTO.class, event.getApp());\n    String appId = appDTO.getAppId();\n    String operator = appDTO.getDataChangeLastModifiedBy();\n\n    List<Env> envs = portalSettings.getActiveEnvs();\n    for (Env env : envs) {\n      try {\n        appAPI.deleteApp(env, appId, operator);\n      } catch (Throwable e) {\n        logger.error(\"Delete app failed. Env = {}, AppId = {}\", env, appId, e);\n        Tracer.logError(String.format(\"Delete app failed. Env = %s, AppId = %s\", env, appId), e);\n      }\n    }\n  }\n","realPath":"apollo-portal/src/main/java/com/ctrip/framework/apollo/portal/listener/DeletionListener.java","repoName":"apollo","snippetEndLine":0,"snippetStartLine":0,"startLine":30,"status":"B"}],"commitId":"0c4069f945affde1b7f76da28f2a8636ec5f99bb","commitMessage":"@@@Merge pull request #1277 from nobodyiam/delete-appnamespace-api\n\nadd delete app namespace api","date":"2018-07-22 21:26:11","modifiedFileCount":"19","status":"M","submitter":"Jason Song"},{"authorTime":"2018-12-31 17:45:57","codes":[{"authorDate":"2018-12-31 17:45:57","commitOrder":4,"curCode":"  public void onAppInfoChange(AppInfoChangedEvent event) {\n    AppDTO appDTO = BeanUtils.transform(AppDTO.class, event.getApp());\n    String appId = appDTO.getAppId();\n\n    List<Env> envs = portalSettings.getActiveEnvs();\n    for (Env env : envs) {\n      try {\n        appAPI.updateApp(env, appDTO);\n      } catch (Throwable e) {\n        logger.error(\"Update app's info failed. Env = {}, AppId = {}\", env, appId, e);\n        Tracer.logError(String.format(\"Update app's info failed. Env = %s, AppId = %s\", env, appId), e);\n      }\n    }\n  }\n","date":"2018-12-31 20:41:48","endLine":41,"groupId":"10151","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"onAppInfoChange","params":"(AppInfoChangedEventevent)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-apollo-10-0.7/blobInfo/CC_OUT/blobs/3d/a410f76658e4aeb2b47b7013b10f67ce837047.src","preCode":"  public void onAppInfoChange(AppInfoChangedEvent event) {\n    AppDTO appDTO = BeanUtils.transfrom(AppDTO.class, event.getApp());\n    String appId = appDTO.getAppId();\n\n    List<Env> envs = portalSettings.getActiveEnvs();\n    for (Env env : envs) {\n      try {\n        appAPI.updateApp(env, appDTO);\n      } catch (Throwable e) {\n        logger.error(\"Update app's info failed. Env = {}, AppId = {}\", env, appId, e);\n        Tracer.logError(String.format(\"Update app's info failed. Env = %s, AppId = %s\", env, appId), e);\n      }\n    }\n  }\n","realPath":"apollo-portal/src/main/java/com/ctrip/framework/apollo/portal/listener/AppInfoChangedListener.java","repoName":"apollo","snippetEndLine":0,"snippetStartLine":0,"startLine":28,"status":"M"},{"authorDate":"2018-12-31 17:45:57","commitOrder":4,"curCode":"  public void onAppDeletionEvent(AppDeletionEvent event) {\n    AppDTO appDTO = BeanUtils.transform(AppDTO.class, event.getApp());\n    String appId = appDTO.getAppId();\n    String operator = appDTO.getDataChangeLastModifiedBy();\n\n    List<Env> envs = portalSettings.getActiveEnvs();\n    for (Env env : envs) {\n      try {\n        appAPI.deleteApp(env, appId, operator);\n      } catch (Throwable e) {\n        logger.error(\"Delete app failed. Env = {}, AppId = {}\", env, appId, e);\n        Tracer.logError(String.format(\"Delete app failed. Env = %s, AppId = %s\", env, appId), e);\n      }\n    }\n  }\n","date":"2018-12-31 20:41:48","endLine":44,"groupId":"10151","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"onAppDeletionEvent","params":"(AppDeletionEventevent)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-apollo-10-0.7/blobInfo/CC_OUT/blobs/0a/11071634ec894edcb36d883e60b8acc9644d16.src","preCode":"  public void onAppDeletionEvent(AppDeletionEvent event) {\n    AppDTO appDTO = BeanUtils.transfrom(AppDTO.class, event.getApp());\n    String appId = appDTO.getAppId();\n    String operator = appDTO.getDataChangeLastModifiedBy();\n\n    List<Env> envs = portalSettings.getActiveEnvs();\n    for (Env env : envs) {\n      try {\n        appAPI.deleteApp(env, appId, operator);\n      } catch (Throwable e) {\n        logger.error(\"Delete app failed. Env = {}, AppId = {}\", env, appId, e);\n        Tracer.logError(String.format(\"Delete app failed. Env = %s, AppId = %s\", env, appId), e);\n      }\n    }\n  }\n","realPath":"apollo-portal/src/main/java/com/ctrip/framework/apollo/portal/listener/DeletionListener.java","repoName":"apollo","snippetEndLine":0,"snippetStartLine":0,"startLine":30,"status":"M"}],"commitId":"34b912c542e1d2e316da5073931f559447914379","commitMessage":"@@@fix typo\n","date":"2018-12-31 20:41:48","modifiedFileCount":"20","status":"M","submitter":"kezhenxu94"}]
