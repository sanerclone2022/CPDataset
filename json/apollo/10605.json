[{"authorTime":"2017-01-22 18:25:19","codes":[{"authorDate":"2016-12-07 10:52:26","commitOrder":3,"curCode":"  public void afterPropertiesSet() throws Exception {\n    auditExecutorService.submit(() -> {\n      while (!auditStopped.get() && !Thread.currentThread().isInterrupted()) {\n        try {\n          InstanceConfigAuditModel model = audits.poll();\n          if (model == null) {\n            TimeUnit.SECONDS.sleep(1);\n            continue;\n          }\n          doAudit(model);\n        } catch (Throwable ex) {\n          Tracer.logError(ex);\n        }\n      }\n    });\n  }\n","date":"2016-12-07 10:52:26","endLine":158,"groupId":"1679","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"afterPropertiesSet","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-apollo-10-0.7/blobInfo/CC_OUT/blobs/3c/a0c8a20fe3ca87147e96b7a5e58cb970549193.src","preCode":"  public void afterPropertiesSet() throws Exception {\n    auditExecutorService.submit(() -> {\n      while (!auditStopped.get() && !Thread.currentThread().isInterrupted()) {\n        try {\n          InstanceConfigAuditModel model = audits.poll();\n          if (model == null) {\n            TimeUnit.SECONDS.sleep(1);\n            continue;\n          }\n          doAudit(model);\n        } catch (Throwable ex) {\n          Tracer.logError(ex);\n        }\n      }\n    });\n  }\n","realPath":"apollo-configservice/src/main/java/com/ctrip/framework/apollo/configservice/util/InstanceConfigAuditUtil.java","repoName":"apollo","snippetEndLine":0,"snippetStartLine":0,"startLine":143,"status":"NB"},{"authorDate":"2017-01-22 18:25:19","commitOrder":3,"curCode":"  private void initialize() {\n    cleanExecutorService.submit(() -> {\n      while (!cleanStopped.get() && !Thread.currentThread().isInterrupted()) {\n        try {\n          Long rm = toClean.poll(1, TimeUnit.SECONDS);\n          if (rm != null) {\n            cleanMessage(rm);\n          } else {\n            TimeUnit.SECONDS.sleep(5);\n          }\n        } catch (Throwable ex) {\n          Tracer.logError(ex);\n        }\n      }\n    });\n  }\n","date":"2017-01-22 18:25:19","endLine":85,"groupId":"247","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"initialize","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-apollo-10-0.7/blobInfo/CC_OUT/blobs/17/7ff2c2810e9f9060e1a80110403cc3191a54c0.src","preCode":"  private void initialize() {\n    cleanExecutorService.submit(() -> {\n      while (!cleanStopped.get() && !Thread.currentThread().isInterrupted()) {\n        try {\n          Long rm = toClean.poll(1, TimeUnit.SECONDS);\n          if (rm != null) {\n            cleanMessage(rm);\n          } else {\n            TimeUnit.SECONDS.sleep(5);\n          }\n        } catch (Throwable ex) {\n          Tracer.logError(ex);\n        }\n      }\n    });\n  }\n","realPath":"apollo-biz/src/main/java/com/ctrip/framework/apollo/biz/message/DatabaseMessageSender.java","repoName":"apollo","snippetEndLine":0,"snippetStartLine":0,"startLine":70,"status":"B"}],"commitId":"34d511fbb880f71845ae58eff00d43b741f20e29","commitMessage":"@@@Merge pull request #529 from nobodyiam/clean-release-message\n\nClean release message on demand and do async notification if there are too many clients to notify","date":"2017-01-22 18:25:19","modifiedFileCount":"5","status":"M","submitter":"??"},{"authorTime":"2017-01-22 18:25:19","codes":[{"authorDate":"2021-06-28 08:19:02","commitOrder":4,"curCode":"  public void afterPropertiesSet() throws Exception {\n    auditExecutorService.submit(() -> {\n      while (!auditStopped.get() && !Thread.currentThread().isInterrupted()) {\n        try {\n          InstanceConfigAuditModel model = audits.take();\n          doAudit(model);\n        } catch (Throwable ex) {\n          Tracer.logError(ex);\n        }\n      }\n    });\n  }\n","date":"2021-06-28 08:19:02","endLine":179,"groupId":"10605","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"afterPropertiesSet","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-apollo-10-0.7/blobInfo/CC_OUT/blobs/c3/34e6c4c64ff3093b9023e73eb9e1a17abe8eb1.src","preCode":"  public void afterPropertiesSet() throws Exception {\n    auditExecutorService.submit(() -> {\n      while (!auditStopped.get() && !Thread.currentThread().isInterrupted()) {\n        try {\n          InstanceConfigAuditModel model = audits.poll();\n          if (model == null) {\n            TimeUnit.SECONDS.sleep(1);\n            continue;\n          }\n          doAudit(model);\n        } catch (Throwable ex) {\n          Tracer.logError(ex);\n        }\n      }\n    });\n  }\n","realPath":"apollo-configservice/src/main/java/com/ctrip/framework/apollo/configservice/util/InstanceConfigAuditUtil.java","repoName":"apollo","snippetEndLine":0,"snippetStartLine":0,"startLine":168,"status":"M"},{"authorDate":"2017-01-22 18:25:19","commitOrder":4,"curCode":"  private void initialize() {\n    cleanExecutorService.submit(() -> {\n      while (!cleanStopped.get() && !Thread.currentThread().isInterrupted()) {\n        try {\n          Long rm = toClean.poll(1, TimeUnit.SECONDS);\n          if (rm != null) {\n            cleanMessage(rm);\n          } else {\n            TimeUnit.SECONDS.sleep(5);\n          }\n        } catch (Throwable ex) {\n          Tracer.logError(ex);\n        }\n      }\n    });\n  }\n","date":"2017-01-22 18:25:19","endLine":85,"groupId":"10605","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"initialize","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-apollo-10-0.7/blobInfo/CC_OUT/blobs/17/7ff2c2810e9f9060e1a80110403cc3191a54c0.src","preCode":"  private void initialize() {\n    cleanExecutorService.submit(() -> {\n      while (!cleanStopped.get() && !Thread.currentThread().isInterrupted()) {\n        try {\n          Long rm = toClean.poll(1, TimeUnit.SECONDS);\n          if (rm != null) {\n            cleanMessage(rm);\n          } else {\n            TimeUnit.SECONDS.sleep(5);\n          }\n        } catch (Throwable ex) {\n          Tracer.logError(ex);\n        }\n      }\n    });\n  }\n","realPath":"apollo-biz/src/main/java/com/ctrip/framework/apollo/biz/message/DatabaseMessageSender.java","repoName":"apollo","snippetEndLine":0,"snippetStartLine":0,"startLine":70,"status":"N"}],"commitId":"d5200dfbdac42c4b0b942c5d1f1fd7dc08209cfb","commitMessage":"@@@Use queue#take instead of poll (#3765)\n\n* Use queue#take instead of poll to avoid cs (#3764)\n\n* update CHANGES.md\n\n* update CHANGES.md\n\nCo-authored-by: kezhenxu94 <kezhenxu94@163.com>\nCo-authored-by: wxq <Anilople@outlook.com>\nCo-authored-by: Jason Song <nobodyiam@gmail.com>","date":"2021-06-28 08:19:02","modifiedFileCount":"1","status":"M","submitter":"Tboy"}]
