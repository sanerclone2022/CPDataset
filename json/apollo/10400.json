[{"authorTime":"2020-01-21 09:08:45","codes":[{"authorDate":"2020-01-21 09:08:45","commitOrder":1,"curCode":"  public void testOrderGetConfigWithLocalFileAndWithRemoteConfig() throws Exception {\n    String someKey = \"someKey\";\n    String someValue = \"someValue\";\n    String anotherValue = \"anotherValue\";\n\n    String someKey1 = \"someKey1\";\n    String someValue1 = \"someValue1\";\n    String anotherValue1 = \"anotherValue1\";\n    String someKey2 = \"someKey2\";\n    String someValue2 = \"someValue2\";\n\n    Properties properties = propertiesFactory.getPropertiesInstance();\n    properties.put(someKey, someValue);\n    properties.put(someKey1, someValue1);\n    properties.put(someKey2, someValue2);\n    createLocalCachePropertyFile(properties);\n\n    Map<String, String> configurations = new LinkedHashMap<>();\n    configurations.put(someKey, anotherValue);\n    configurations.put(someKey1, anotherValue1);\n    configurations.put(someKey2, someValue2);\n    ApolloConfig apolloConfig = assembleApolloConfig(ImmutableMap.copyOf(configurations));\n    ContextHandler handler = mockConfigServerHandler(HttpServletResponse.SC_OK, apolloConfig);\n    startServerWithHandlers(handler);\n\n    Config config = ConfigService.getAppConfig();\n\n    assertEquals(anotherValue, config.getProperty(someKey, null));\n\n    Set<String> propertyNames = config.getPropertyNames();\n    Iterator<String> it = propertyNames.iterator();\n    assertEquals(someKey, it.next());\n    assertEquals(someKey1, it.next());\n    assertEquals(someKey2, it.next());\n    assertEquals(anotherValue1, config.getProperty(someKey1, \"\"));\n\n  }\n","date":"2020-01-21 09:08:45","endLine":195,"groupId":"497","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testOrderGetConfigWithLocalFileAndWithRemoteConfig","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-apollo-10-0.7/blobInfo/CC_OUT/blobs/1d/968e2ea841a74198ee11d161e5d86bbc176a99.src","preCode":"  public void testOrderGetConfigWithLocalFileAndWithRemoteConfig() throws Exception {\n    String someKey = \"someKey\";\n    String someValue = \"someValue\";\n    String anotherValue = \"anotherValue\";\n\n    String someKey1 = \"someKey1\";\n    String someValue1 = \"someValue1\";\n    String anotherValue1 = \"anotherValue1\";\n    String someKey2 = \"someKey2\";\n    String someValue2 = \"someValue2\";\n\n    Properties properties = propertiesFactory.getPropertiesInstance();\n    properties.put(someKey, someValue);\n    properties.put(someKey1, someValue1);\n    properties.put(someKey2, someValue2);\n    createLocalCachePropertyFile(properties);\n\n    Map<String, String> configurations = new LinkedHashMap<>();\n    configurations.put(someKey, anotherValue);\n    configurations.put(someKey1, anotherValue1);\n    configurations.put(someKey2, someValue2);\n    ApolloConfig apolloConfig = assembleApolloConfig(ImmutableMap.copyOf(configurations));\n    ContextHandler handler = mockConfigServerHandler(HttpServletResponse.SC_OK, apolloConfig);\n    startServerWithHandlers(handler);\n\n    Config config = ConfigService.getAppConfig();\n\n    assertEquals(anotherValue, config.getProperty(someKey, null));\n\n    Set<String> propertyNames = config.getPropertyNames();\n    Iterator<String> it = propertyNames.iterator();\n    assertEquals(someKey, it.next());\n    assertEquals(someKey1, it.next());\n    assertEquals(someKey2, it.next());\n    assertEquals(anotherValue1, config.getProperty(someKey1, \"\"));\n\n  }\n","realPath":"apollo-client/src/test/java/com/ctrip/framework/apollo/integration/ConfigIntegrationTest.java","repoName":"apollo","snippetEndLine":0,"snippetStartLine":0,"startLine":159,"status":"B"},{"authorDate":"2020-01-21 09:08:45","commitOrder":1,"curCode":"  public void testOrderGetConfigWithLocalFileAndRemoteConfigError() throws Exception {\n    String someKey1 = \"someKey1\";\n    String someValue1 = \"someValue1\";\n    String someKey2 = \"someKey2\";\n    String someValue2 = \"someValue2\";\n    Properties properties = propertiesFactory.getPropertiesInstance();\n    properties.put(someKey1, someValue1);\n    properties.put(someKey2, someValue2);\n    createLocalCachePropertyFile(properties);\n\n    ContextHandler handler =\n        mockConfigServerHandler(HttpServletResponse.SC_INTERNAL_SERVER_ERROR, null);\n    startServerWithHandlers(handler);\n\n    Config config = ConfigService.getAppConfig();\n    assertEquals(someValue1, config.getProperty(someKey1, null));\n    assertEquals(someValue2, config.getProperty(someKey2, null));\n\n    Set<String> propertyNames = config.getPropertyNames();\n    Iterator<String> it = propertyNames.iterator();\n    assertEquals(someKey1, it.next());\n    assertEquals(someKey2, it.next());\n  }\n","date":"2020-01-21 09:08:45","endLine":250,"groupId":"163","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testOrderGetConfigWithLocalFileAndRemoteConfigError","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-apollo-10-0.7/blobInfo/CC_OUT/blobs/1d/968e2ea841a74198ee11d161e5d86bbc176a99.src","preCode":"  public void testOrderGetConfigWithLocalFileAndRemoteConfigError() throws Exception {\n    String someKey1 = \"someKey1\";\n    String someValue1 = \"someValue1\";\n    String someKey2 = \"someKey2\";\n    String someValue2 = \"someValue2\";\n    Properties properties = propertiesFactory.getPropertiesInstance();\n    properties.put(someKey1, someValue1);\n    properties.put(someKey2, someValue2);\n    createLocalCachePropertyFile(properties);\n\n    ContextHandler handler =\n        mockConfigServerHandler(HttpServletResponse.SC_INTERNAL_SERVER_ERROR, null);\n    startServerWithHandlers(handler);\n\n    Config config = ConfigService.getAppConfig();\n    assertEquals(someValue1, config.getProperty(someKey1, null));\n    assertEquals(someValue2, config.getProperty(someKey2, null));\n\n    Set<String> propertyNames = config.getPropertyNames();\n    Iterator<String> it = propertyNames.iterator();\n    assertEquals(someKey1, it.next());\n    assertEquals(someKey2, it.next());\n  }\n","realPath":"apollo-client/src/test/java/com/ctrip/framework/apollo/integration/ConfigIntegrationTest.java","repoName":"apollo","snippetEndLine":0,"snippetStartLine":0,"startLine":228,"status":"B"}],"commitId":"82790e5f4a38ed4c2534545686b641f224f0887a","commitMessage":"@@@Add OrderedProperties to keep the property order in apollo-client\n\n","date":"2020-01-21 09:08:45","modifiedFileCount":"22","status":"B","submitter":"songdragon"},{"authorTime":"2020-01-21 08:22:12","codes":[{"authorDate":"2020-01-21 08:22:12","commitOrder":2,"curCode":"  public void testOrderGetConfigWithLocalFileAndWithRemoteConfig() throws Exception {\n    String someKey = \"someKey\";\n    String someValue = \"someValue\";\n    String anotherValue = \"anotherValue\";\n\n    String someKey1 = \"someKey1\";\n    String someValue1 = \"someValue1\";\n    String anotherValue1 = \"anotherValue1\";\n    String someKey2 = \"someKey2\";\n    String someValue2 = \"someValue2\";\n\n    setPropertiesOrderEnabled(true);\n\n    Properties properties = new OrderedProperties();\n    properties.put(someKey, someValue);\n    properties.put(someKey1, someValue1);\n    properties.put(someKey2, someValue2);\n    createLocalCachePropertyFile(properties);\n\n    Map<String, String> configurations = new LinkedHashMap<>();\n    configurations.put(someKey, anotherValue);\n    configurations.put(someKey1, anotherValue1);\n    configurations.put(someKey2, someValue2);\n    ApolloConfig apolloConfig = assembleApolloConfig(ImmutableMap.copyOf(configurations));\n    ContextHandler handler = mockConfigServerHandler(HttpServletResponse.SC_OK, apolloConfig);\n    startServerWithHandlers(handler);\n\n    Config config = ConfigService.getAppConfig();\n\n    assertEquals(anotherValue, config.getProperty(someKey, null));\n\n    Set<String> propertyNames = config.getPropertyNames();\n    Iterator<String> it = propertyNames.iterator();\n    assertEquals(someKey, it.next());\n    assertEquals(someKey1, it.next());\n    assertEquals(someKey2, it.next());\n    assertEquals(anotherValue1, config.getProperty(someKey1, \"\"));\n\n  }\n","date":"2020-01-21 20:16:07","endLine":194,"groupId":"10400","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testOrderGetConfigWithLocalFileAndWithRemoteConfig","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-apollo-10-0.7/blobInfo/CC_OUT/blobs/c3/55fe023f4ac78827125218058348f4f93a1397.src","preCode":"  public void testOrderGetConfigWithLocalFileAndWithRemoteConfig() throws Exception {\n    String someKey = \"someKey\";\n    String someValue = \"someValue\";\n    String anotherValue = \"anotherValue\";\n\n    String someKey1 = \"someKey1\";\n    String someValue1 = \"someValue1\";\n    String anotherValue1 = \"anotherValue1\";\n    String someKey2 = \"someKey2\";\n    String someValue2 = \"someValue2\";\n\n    Properties properties = propertiesFactory.getPropertiesInstance();\n    properties.put(someKey, someValue);\n    properties.put(someKey1, someValue1);\n    properties.put(someKey2, someValue2);\n    createLocalCachePropertyFile(properties);\n\n    Map<String, String> configurations = new LinkedHashMap<>();\n    configurations.put(someKey, anotherValue);\n    configurations.put(someKey1, anotherValue1);\n    configurations.put(someKey2, someValue2);\n    ApolloConfig apolloConfig = assembleApolloConfig(ImmutableMap.copyOf(configurations));\n    ContextHandler handler = mockConfigServerHandler(HttpServletResponse.SC_OK, apolloConfig);\n    startServerWithHandlers(handler);\n\n    Config config = ConfigService.getAppConfig();\n\n    assertEquals(anotherValue, config.getProperty(someKey, null));\n\n    Set<String> propertyNames = config.getPropertyNames();\n    Iterator<String> it = propertyNames.iterator();\n    assertEquals(someKey, it.next());\n    assertEquals(someKey1, it.next());\n    assertEquals(someKey2, it.next());\n    assertEquals(anotherValue1, config.getProperty(someKey1, \"\"));\n\n  }\n","realPath":"apollo-client/src/test/java/com/ctrip/framework/apollo/integration/ConfigIntegrationTest.java","repoName":"apollo","snippetEndLine":0,"snippetStartLine":0,"startLine":156,"status":"M"},{"authorDate":"2020-01-21 08:22:12","commitOrder":2,"curCode":"  public void testOrderGetConfigWithLocalFileAndRemoteConfigError() throws Exception {\n    String someKey1 = \"someKey1\";\n    String someValue1 = \"someValue1\";\n    String someKey2 = \"someKey2\";\n    String someValue2 = \"someValue2\";\n\n    setPropertiesOrderEnabled(true);\n\n    Properties properties = new OrderedProperties();\n    properties.put(someKey1, someValue1);\n    properties.put(someKey2, someValue2);\n    createLocalCachePropertyFile(properties);\n\n    ContextHandler handler =\n        mockConfigServerHandler(HttpServletResponse.SC_INTERNAL_SERVER_ERROR, null);\n    startServerWithHandlers(handler);\n\n    Config config = ConfigService.getAppConfig();\n    assertEquals(someValue1, config.getProperty(someKey1, null));\n    assertEquals(someValue2, config.getProperty(someKey2, null));\n\n    Set<String> propertyNames = config.getPropertyNames();\n    Iterator<String> it = propertyNames.iterator();\n    assertEquals(someKey1, it.next());\n    assertEquals(someKey2, it.next());\n  }\n","date":"2020-01-21 20:16:07","endLine":252,"groupId":"10400","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testOrderGetConfigWithLocalFileAndRemoteConfigError","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-apollo-10-0.7/blobInfo/CC_OUT/blobs/c3/55fe023f4ac78827125218058348f4f93a1397.src","preCode":"  public void testOrderGetConfigWithLocalFileAndRemoteConfigError() throws Exception {\n    String someKey1 = \"someKey1\";\n    String someValue1 = \"someValue1\";\n    String someKey2 = \"someKey2\";\n    String someValue2 = \"someValue2\";\n    Properties properties = propertiesFactory.getPropertiesInstance();\n    properties.put(someKey1, someValue1);\n    properties.put(someKey2, someValue2);\n    createLocalCachePropertyFile(properties);\n\n    ContextHandler handler =\n        mockConfigServerHandler(HttpServletResponse.SC_INTERNAL_SERVER_ERROR, null);\n    startServerWithHandlers(handler);\n\n    Config config = ConfigService.getAppConfig();\n    assertEquals(someValue1, config.getProperty(someKey1, null));\n    assertEquals(someValue2, config.getProperty(someKey2, null));\n\n    Set<String> propertyNames = config.getPropertyNames();\n    Iterator<String> it = propertyNames.iterator();\n    assertEquals(someKey1, it.next());\n    assertEquals(someKey2, it.next());\n  }\n","realPath":"apollo-client/src/test/java/com/ctrip/framework/apollo/integration/ConfigIntegrationTest.java","repoName":"apollo","snippetEndLine":0,"snippetStartLine":0,"startLine":227,"status":"M"}],"commitId":"5fe54966f5f50e5f5e1c3b2e0f0d82b1d92f014d","commitMessage":"@@@use linked hash map to keep server side config order and do some refactoring to apollo-client\n","date":"2020-01-21 20:16:07","modifiedFileCount":"18","status":"M","submitter":"Jason Song"}]
