[{"authorTime":"2020-01-21 09:08:45","codes":[{"authorDate":"2019-02-12 09:35:55","commitOrder":2,"curCode":"  public void testWhenHasContent() throws Exception {\n    Properties someProperties = new Properties();\n    String key = ConfigConsts.CONFIG_FILE_CONTENT_KEY;\n    String someContent = \"someKey: 'someValue'\";\n    someProperties.setProperty(key, someContent);\n    someSourceType = ConfigSourceType.LOCAL;\n\n    Properties yamlProperties = new Properties();\n    yamlProperties.setProperty(\"someKey\", \"someValue\");\n\n    when(configRepository.getConfig()).thenReturn(someProperties);\n    when(configRepository.getSourceType()).thenReturn(someSourceType);\n    when(yamlParser.yamlToProperties(someContent)).thenReturn(yamlProperties);\n\n    YamlConfigFile configFile = new YamlConfigFile(someNamespace, configRepository);\n\n    assertSame(someContent, configFile.getContent());\n    assertSame(yamlProperties, configFile.asProperties());\n  }\n","date":"2019-02-12 09:35:55","endLine":55,"groupId":"669","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testWhenHasContent","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-apollo-10-0.7/blobInfo/CC_OUT/blobs/37/9b964053ba869c5b575fdf9350123df959f1a2.src","preCode":"  public void testWhenHasContent() throws Exception {\n    Properties someProperties = new Properties();\n    String key = ConfigConsts.CONFIG_FILE_CONTENT_KEY;\n    String someContent = \"someKey: 'someValue'\";\n    someProperties.setProperty(key, someContent);\n    someSourceType = ConfigSourceType.LOCAL;\n\n    Properties yamlProperties = new Properties();\n    yamlProperties.setProperty(\"someKey\", \"someValue\");\n\n    when(configRepository.getConfig()).thenReturn(someProperties);\n    when(configRepository.getSourceType()).thenReturn(someSourceType);\n    when(yamlParser.yamlToProperties(someContent)).thenReturn(yamlProperties);\n\n    YamlConfigFile configFile = new YamlConfigFile(someNamespace, configRepository);\n\n    assertSame(someContent, configFile.getContent());\n    assertSame(yamlProperties, configFile.asProperties());\n  }\n","realPath":"apollo-client/src/test/java/com/ctrip/framework/apollo/internals/YamlConfigFileTest.java","repoName":"apollo","snippetEndLine":0,"snippetStartLine":0,"startLine":37,"status":"NB"},{"authorDate":"2020-01-21 09:08:45","commitOrder":2,"curCode":"  public void testWhenHasContentWithOrder() throws Exception {\n    Properties someProperties = new Properties();\n    String key = ConfigConsts.CONFIG_FILE_CONTENT_KEY;\n    String someContent = \"someKey: 'someValue'\\nsomeKey2: 'someValue2'\";\n    someProperties.setProperty(key, someContent);\n    someSourceType = ConfigSourceType.LOCAL;\n\n    Properties yamlProperties = new YamlParser().yamlToProperties(someContent);\n\n    when(configRepository.getConfig()).thenReturn(someProperties);\n    when(configRepository.getSourceType()).thenReturn(someSourceType);\n    when(yamlParser.yamlToProperties(someContent)).thenReturn(yamlProperties);\n\n    YamlConfigFile configFile = new YamlConfigFile(someNamespace, configRepository);\n\n    assertSame(someContent, configFile.getContent());\n    assertSame(yamlProperties, configFile.asProperties());\n\n    String[] actualArrays = configFile.asProperties().keySet().toArray(new String[]{});\n    String[] expectedArrays = {\"someKey\", \"someKey2\"};\n    assertArrayEquals(expectedArrays, actualArrays);\n  }\n","date":"2020-01-21 09:08:45","endLine":93,"groupId":"670","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testWhenHasContentWithOrder","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-apollo-10-0.7/blobInfo/CC_OUT/blobs/71/df2f922d1c3db486a81afb65c44e1d057fb799.src","preCode":"  public void testWhenHasContentWithOrder() throws Exception {\n    Properties someProperties = new Properties();\n    String key = ConfigConsts.CONFIG_FILE_CONTENT_KEY;\n    String someContent = \"someKey: 'someValue'\\nsomeKey2: 'someValue2'\";\n    someProperties.setProperty(key, someContent);\n    someSourceType = ConfigSourceType.LOCAL;\n\n    Properties yamlProperties = new YamlParser().yamlToProperties(someContent);\n\n    when(configRepository.getConfig()).thenReturn(someProperties);\n    when(configRepository.getSourceType()).thenReturn(someSourceType);\n    when(yamlParser.yamlToProperties(someContent)).thenReturn(yamlProperties);\n\n    YamlConfigFile configFile = new YamlConfigFile(someNamespace, configRepository);\n\n    assertSame(someContent, configFile.getContent());\n    assertSame(yamlProperties, configFile.asProperties());\n\n    String[] actualArrays = configFile.asProperties().keySet().toArray(new String[]{});\n    String[] expectedArrays = {\"someKey\", \"someKey2\"};\n    assertArrayEquals(expectedArrays, actualArrays);\n  }\n","realPath":"apollo-client/src/test/java/com/ctrip/framework/apollo/internals/YamlConfigFileTest.java","repoName":"apollo","snippetEndLine":0,"snippetStartLine":0,"startLine":72,"status":"B"}],"commitId":"82790e5f4a38ed4c2534545686b641f224f0887a","commitMessage":"@@@Add OrderedProperties to keep the property order in apollo-client\n\n","date":"2020-01-21 09:08:45","modifiedFileCount":"22","status":"M","submitter":"songdragon"},{"authorTime":"2020-01-21 08:22:12","codes":[{"authorDate":"2019-02-12 09:35:55","commitOrder":3,"curCode":"  public void testWhenHasContent() throws Exception {\n    Properties someProperties = new Properties();\n    String key = ConfigConsts.CONFIG_FILE_CONTENT_KEY;\n    String someContent = \"someKey: 'someValue'\";\n    someProperties.setProperty(key, someContent);\n    someSourceType = ConfigSourceType.LOCAL;\n\n    Properties yamlProperties = new Properties();\n    yamlProperties.setProperty(\"someKey\", \"someValue\");\n\n    when(configRepository.getConfig()).thenReturn(someProperties);\n    when(configRepository.getSourceType()).thenReturn(someSourceType);\n    when(yamlParser.yamlToProperties(someContent)).thenReturn(yamlProperties);\n\n    YamlConfigFile configFile = new YamlConfigFile(someNamespace, configRepository);\n\n    assertSame(someContent, configFile.getContent());\n    assertSame(yamlProperties, configFile.asProperties());\n  }\n","date":"2019-02-12 09:35:55","endLine":55,"groupId":"10298","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testWhenHasContent","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-apollo-10-0.7/blobInfo/CC_OUT/blobs/37/9b964053ba869c5b575fdf9350123df959f1a2.src","preCode":"  public void testWhenHasContent() throws Exception {\n    Properties someProperties = new Properties();\n    String key = ConfigConsts.CONFIG_FILE_CONTENT_KEY;\n    String someContent = \"someKey: 'someValue'\";\n    someProperties.setProperty(key, someContent);\n    someSourceType = ConfigSourceType.LOCAL;\n\n    Properties yamlProperties = new Properties();\n    yamlProperties.setProperty(\"someKey\", \"someValue\");\n\n    when(configRepository.getConfig()).thenReturn(someProperties);\n    when(configRepository.getSourceType()).thenReturn(someSourceType);\n    when(yamlParser.yamlToProperties(someContent)).thenReturn(yamlProperties);\n\n    YamlConfigFile configFile = new YamlConfigFile(someNamespace, configRepository);\n\n    assertSame(someContent, configFile.getContent());\n    assertSame(yamlProperties, configFile.asProperties());\n  }\n","realPath":"apollo-client/src/test/java/com/ctrip/framework/apollo/internals/YamlConfigFileTest.java","repoName":"apollo","snippetEndLine":0,"snippetStartLine":0,"startLine":37,"status":"N"},{"authorDate":"2020-01-21 08:22:12","commitOrder":3,"curCode":"  public void testWhenHasContentWithOrder() throws Exception {\n    when(propertiesFactory.getPropertiesInstance()).thenAnswer(new Answer<Properties>() {\n      @Override\n      public Properties answer(InvocationOnMock invocation) {\n        return new OrderedProperties();\n      }\n    });\n    Properties someProperties = new Properties();\n    String key = ConfigConsts.CONFIG_FILE_CONTENT_KEY;\n    String someContent = \"someKey: 'someValue'\\nsomeKey2: 'someValue2'\";\n    someProperties.setProperty(key, someContent);\n    someSourceType = ConfigSourceType.LOCAL;\n\n    Properties yamlProperties = new YamlParser().yamlToProperties(someContent);\n\n    when(configRepository.getConfig()).thenReturn(someProperties);\n    when(configRepository.getSourceType()).thenReturn(someSourceType);\n    when(yamlParser.yamlToProperties(someContent)).thenReturn(yamlProperties);\n\n    YamlConfigFile configFile = new YamlConfigFile(someNamespace, configRepository);\n\n    assertSame(someContent, configFile.getContent());\n    assertSame(yamlProperties, configFile.asProperties());\n\n    String[] actualArrays = configFile.asProperties().keySet().toArray(new String[]{});\n    String[] expectedArrays = {\"someKey\", \"someKey2\"};\n    assertArrayEquals(expectedArrays, actualArrays);\n  }\n","date":"2020-01-21 20:16:07","endLine":100,"groupId":"10298","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testWhenHasContentWithOrder","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-apollo-10-0.7/blobInfo/CC_OUT/blobs/aa/0dea2f773e5bf8a1aa0b8505b670a887553343.src","preCode":"  public void testWhenHasContentWithOrder() throws Exception {\n    Properties someProperties = new Properties();\n    String key = ConfigConsts.CONFIG_FILE_CONTENT_KEY;\n    String someContent = \"someKey: 'someValue'\\nsomeKey2: 'someValue2'\";\n    someProperties.setProperty(key, someContent);\n    someSourceType = ConfigSourceType.LOCAL;\n\n    Properties yamlProperties = new YamlParser().yamlToProperties(someContent);\n\n    when(configRepository.getConfig()).thenReturn(someProperties);\n    when(configRepository.getSourceType()).thenReturn(someSourceType);\n    when(yamlParser.yamlToProperties(someContent)).thenReturn(yamlProperties);\n\n    YamlConfigFile configFile = new YamlConfigFile(someNamespace, configRepository);\n\n    assertSame(someContent, configFile.getContent());\n    assertSame(yamlProperties, configFile.asProperties());\n\n    String[] actualArrays = configFile.asProperties().keySet().toArray(new String[]{});\n    String[] expectedArrays = {\"someKey\", \"someKey2\"};\n    assertArrayEquals(expectedArrays, actualArrays);\n  }\n","realPath":"apollo-client/src/test/java/com/ctrip/framework/apollo/internals/YamlConfigFileTest.java","repoName":"apollo","snippetEndLine":0,"snippetStartLine":0,"startLine":73,"status":"M"}],"commitId":"5fe54966f5f50e5f5e1c3b2e0f0d82b1d92f014d","commitMessage":"@@@use linked hash map to keep server side config order and do some refactoring to apollo-client\n","date":"2020-01-21 20:16:07","modifiedFileCount":"18","status":"M","submitter":"Jason Song"}]
