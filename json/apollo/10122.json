[{"authorTime":"2016-07-15 15:47:12","codes":[{"authorDate":"2019-01-18 23:53:09","commitOrder":2,"curCode":"  public void testCreatePrivateAppNamespaceExistedInAnotherAppId() {\n    AppNamespace appNamespace = assmbleBaseAppNamespace();\n    appNamespace.setPublic(false);\n    appNamespace.setName(\"datasource\");\n    appNamespace.setAppId(\"song0711-01\");\n\n    appNamespaceService.createAppNamespaceInLocal(appNamespace);\n\n    AppNamespace createdAppNamespace =\n        appNamespaceService.findByAppIdAndName(appNamespace.getAppId(), appNamespace.getName());\n\n    Assert.assertNotNull(createdAppNamespace);\n    Assert.assertEquals(appNamespace.getName(), createdAppNamespace.getName());\n  }\n","date":"2019-01-18 23:53:09","endLine":159,"groupId":"908","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testCreatePrivateAppNamespaceExistedInAnotherAppId","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-apollo-10-0.7/blobInfo/CC_OUT/blobs/01/d4cc8f50975da253267341bd2b2f95c8b6c23f.src","preCode":"  public void testCreatePrivateAppNamespaceExistedInAnotherAppId() {\n    AppNamespace appNamespace = assmbleBaseAppNamespace();\n    appNamespace.setPublic(false);\n    appNamespace.setName(\"datasource\");\n    appNamespace.setAppId(\"song0711-01\");\n\n    appNamespaceService.createAppNamespaceInLocal(appNamespace);\n\n    AppNamespace createdAppNamespace =\n        appNamespaceService.findByAppIdAndName(appNamespace.getAppId(), appNamespace.getName());\n\n    Assert.assertNotNull(createdAppNamespace);\n    Assert.assertEquals(appNamespace.getName(), createdAppNamespace.getName());\n  }\n","realPath":"apollo-portal/src/test/java/com/ctrip/framework/apollo/portal/service/AppNamespaceServiceTest.java","repoName":"apollo","snippetEndLine":0,"snippetStartLine":0,"startLine":146,"status":"B"},{"authorDate":"2016-07-15 15:47:12","commitOrder":2,"curCode":"  public void testCreatePrivateAppNamespaceNotExisted() {\n    AppNamespace appNamespace = assmbleBaseAppNamespace();\n    appNamespace.setPublic(false);\n\n    appNamespaceService.createAppNamespaceInLocal(appNamespace);\n\n    AppNamespace createdAppNamespace =\n        appNamespaceService.findByAppIdAndName(appNamespace.getAppId(), appNamespace.getName());\n\n    Assert.assertNotNull(createdAppNamespace);\n    Assert.assertEquals(appNamespace.getName(), createdAppNamespace.getName());\n  }\n","date":"2016-07-15 15:47:12","endLine":120,"groupId":"908","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testCreatePrivateAppNamespaceNotExisted","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-apollo-10-0.7/blobInfo/CC_OUT/blobs/3a/805c9b8b3d8860ba2db0f49ce2f40846320473.src","preCode":"  public void testCreatePrivateAppNamespaceNotExisted() {\n    AppNamespace appNamespace = assmbleBaseAppNamespace();\n    appNamespace.setPublic(false);\n\n    appNamespaceService.createAppNamespaceInLocal(appNamespace);\n\n    AppNamespace createdAppNamespace =\n        appNamespaceService.findByAppIdAndName(appNamespace.getAppId(), appNamespace.getName());\n\n    Assert.assertNotNull(createdAppNamespace);\n    Assert.assertEquals(appNamespace.getName(), createdAppNamespace.getName());\n  }\n","realPath":"apollo-portal/src/test/java/com/ctrip/framework/apollo/portal/service/AppNamespaceServiceTest.java","repoName":"apollo","snippetEndLine":0,"snippetStartLine":0,"startLine":109,"status":"NB"}],"commitId":"96dca9de0f18fee0d20b8d1dbd3cc1c5fb5183f3","commitMessage":"@@@Merge pull request #1894 from nobodyiam/fix-1893\n\ndo not allow user to create private app namespace with the same name as some public app namespace","date":"2019-01-18 23:53:09","modifiedFileCount":"2","status":"M","submitter":"Jason Song"},{"authorTime":"2019-10-02 20:27:12","codes":[{"authorDate":"2019-10-02 20:27:12","commitOrder":3,"curCode":"  public void testCreatePrivateAppNamespaceExistedInAnotherAppId() {\n    AppNamespace appNamespace = assembleBaseAppNamespace();\n    appNamespace.setPublic(false);\n    appNamespace.setName(\"datasource\");\n    appNamespace.setAppId(\"song0711-01\");\n\n    appNamespaceService.createAppNamespaceInLocal(appNamespace);\n\n    AppNamespace createdAppNamespace =\n        appNamespaceService.findByAppIdAndName(appNamespace.getAppId(), appNamespace.getName());\n\n    Assert.assertNotNull(createdAppNamespace);\n    Assert.assertEquals(appNamespace.getName(), createdAppNamespace.getName());\n  }\n","date":"2019-10-02 20:27:12","endLine":159,"groupId":"10122","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testCreatePrivateAppNamespaceExistedInAnotherAppId","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-apollo-10-0.7/blobInfo/CC_OUT/blobs/02/eee0727d6ccd06e6257c09461af72ea1b8e4b8.src","preCode":"  public void testCreatePrivateAppNamespaceExistedInAnotherAppId() {\n    AppNamespace appNamespace = assmbleBaseAppNamespace();\n    appNamespace.setPublic(false);\n    appNamespace.setName(\"datasource\");\n    appNamespace.setAppId(\"song0711-01\");\n\n    appNamespaceService.createAppNamespaceInLocal(appNamespace);\n\n    AppNamespace createdAppNamespace =\n        appNamespaceService.findByAppIdAndName(appNamespace.getAppId(), appNamespace.getName());\n\n    Assert.assertNotNull(createdAppNamespace);\n    Assert.assertEquals(appNamespace.getName(), createdAppNamespace.getName());\n  }\n","realPath":"apollo-portal/src/test/java/com/ctrip/framework/apollo/portal/service/AppNamespaceServiceTest.java","repoName":"apollo","snippetEndLine":0,"snippetStartLine":0,"startLine":146,"status":"M"},{"authorDate":"2019-10-02 20:27:12","commitOrder":3,"curCode":"  public void testCreatePrivateAppNamespaceNotExisted() {\n    AppNamespace appNamespace = assembleBaseAppNamespace();\n    appNamespace.setPublic(false);\n\n    appNamespaceService.createAppNamespaceInLocal(appNamespace);\n\n    AppNamespace createdAppNamespace =\n        appNamespaceService.findByAppIdAndName(appNamespace.getAppId(), appNamespace.getName());\n\n    Assert.assertNotNull(createdAppNamespace);\n    Assert.assertEquals(appNamespace.getName(), createdAppNamespace.getName());\n  }\n","date":"2019-10-02 20:27:12","endLine":188,"groupId":"10122","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testCreatePrivateAppNamespaceNotExisted","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-apollo-10-0.7/blobInfo/CC_OUT/blobs/02/eee0727d6ccd06e6257c09461af72ea1b8e4b8.src","preCode":"  public void testCreatePrivateAppNamespaceNotExisted() {\n    AppNamespace appNamespace = assmbleBaseAppNamespace();\n    appNamespace.setPublic(false);\n\n    appNamespaceService.createAppNamespaceInLocal(appNamespace);\n\n    AppNamespace createdAppNamespace =\n        appNamespaceService.findByAppIdAndName(appNamespace.getAppId(), appNamespace.getName());\n\n    Assert.assertNotNull(createdAppNamespace);\n    Assert.assertEquals(appNamespace.getName(), createdAppNamespace.getName());\n  }\n","realPath":"apollo-portal/src/test/java/com/ctrip/framework/apollo/portal/service/AppNamespaceServiceTest.java","repoName":"apollo","snippetEndLine":0,"snippetStartLine":0,"startLine":177,"status":"M"}],"commitId":"15714ac9e7b6caba4e2da48755457f117038076a","commitMessage":"@@@fix input validator for app namespace name (#2634)\n\n","date":"2019-10-02 20:27:12","modifiedFileCount":"4","status":"M","submitter":"Jason Song"}]
