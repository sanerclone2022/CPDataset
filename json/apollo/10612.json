[{"authorTime":"2018-02-24 19:06:36","codes":[{"authorDate":"2018-02-24 19:06:36","commitOrder":1,"curCode":"  public static void main(String[] args) throws IOException {\n    ApplicationContext context = new SpringApplicationBuilder(SpringBootSampleApplication.class).run(args);\n    AnnotatedBean annotatedBean = context.getBean(AnnotatedBean.class);\n    SampleRedisConfig redisConfig = context.getBean(SampleRedisConfig.class);\n\n    System.out.println(\"SpringBootSampleApplication Demo. Input any key except quit to print the values. Input quit to exit.\");\n    while (true) {\n      System.out.print(\"> \");\n      String input = new BufferedReader(new InputStreamReader(System.in, Charsets.UTF_8)).readLine();\n      if (!Strings.isNullOrEmpty(input) && input.trim().equalsIgnoreCase(\"quit\")) {\n        System.exit(0);\n      }\n\n      System.out.println(annotatedBean.toString());\n      System.out.println(redisConfig.toString());\n    }\n  }\n","date":"2018-02-24 19:06:36","endLine":40,"groupId":"1872","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"main","params":"(String[]args)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-apollo-10-0.7/blobInfo/CC_OUT/blobs/c6/3f2f87a1285678b602831d8d4a205488d0b77a.src","preCode":"  public static void main(String[] args) throws IOException {\n    ApplicationContext context = new SpringApplicationBuilder(SpringBootSampleApplication.class).run(args);\n    AnnotatedBean annotatedBean = context.getBean(AnnotatedBean.class);\n    SampleRedisConfig redisConfig = context.getBean(SampleRedisConfig.class);\n\n    System.out.println(\"SpringBootSampleApplication Demo. Input any key except quit to print the values. Input quit to exit.\");\n    while (true) {\n      System.out.print(\"> \");\n      String input = new BufferedReader(new InputStreamReader(System.in, Charsets.UTF_8)).readLine();\n      if (!Strings.isNullOrEmpty(input) && input.trim().equalsIgnoreCase(\"quit\")) {\n        System.exit(0);\n      }\n\n      System.out.println(annotatedBean.toString());\n      System.out.println(redisConfig.toString());\n    }\n  }\n","realPath":"apollo-demo/src/main/java/com/ctrip/framework/apollo/demo/spring/springBootDemo/SpringBootSampleApplication.java","repoName":"apollo","snippetEndLine":0,"snippetStartLine":0,"startLine":24,"status":"B"},{"authorDate":"2018-02-24 19:06:36","commitOrder":1,"curCode":"  public static void main(String[] args) throws IOException {\n    ApplicationContext context = new ClassPathXmlApplicationContext(\"spring.xml\");\n    XmlBean xmlBean = context.getBean(XmlBean.class);\n\n    System.out.println(\"XmlApplication Demo. Input any key except quit to print the values. Input quit to exit.\");\n    while (true) {\n      System.out.print(\"> \");\n      String input = new BufferedReader(new InputStreamReader(System.in, Charsets.UTF_8)).readLine();\n      if (!Strings.isNullOrEmpty(input) && input.trim().equalsIgnoreCase(\"quit\")) {\n        System.exit(0);\n      }\n\n      System.out.println(xmlBean.toString());\n    }\n  }\n","date":"2018-02-24 19:06:36","endLine":32,"groupId":"1872","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"main","params":"(String[]args)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-apollo-10-0.7/blobInfo/CC_OUT/blobs/88/196899b41252eca5f8207773241b6fb850a401.src","preCode":"  public static void main(String[] args) throws IOException {\n    ApplicationContext context = new ClassPathXmlApplicationContext(\"spring.xml\");\n    XmlBean xmlBean = context.getBean(XmlBean.class);\n\n    System.out.println(\"XmlApplication Demo. Input any key except quit to print the values. Input quit to exit.\");\n    while (true) {\n      System.out.print(\"> \");\n      String input = new BufferedReader(new InputStreamReader(System.in, Charsets.UTF_8)).readLine();\n      if (!Strings.isNullOrEmpty(input) && input.trim().equalsIgnoreCase(\"quit\")) {\n        System.exit(0);\n      }\n\n      System.out.println(xmlBean.toString());\n    }\n  }\n","realPath":"apollo-demo/src/main/java/com/ctrip/framework/apollo/demo/spring/xmlConfigDemo/XmlApplication.java","repoName":"apollo","snippetEndLine":0,"snippetStartLine":0,"startLine":18,"status":"B"}],"commitId":"5823daa67b7c84d650023cff3464eae40c53d13c","commitMessage":"@@@Merge pull request #972 from nobodyiam/auto-update-value-merge\n\nAuto Updating Spring Placeholder Values","date":"2018-02-24 19:06:36","modifiedFileCount":"22","status":"B","submitter":"??"},{"authorTime":"2018-02-24 19:06:36","codes":[{"authorDate":"2018-03-03 22:47:36","commitOrder":2,"curCode":"  public static void main(String[] args) throws IOException {\n    ApplicationContext context = new SpringApplicationBuilder(SpringBootSampleApplication.class).run(args);\n    AnnotatedBean annotatedBean = context.getBean(AnnotatedBean.class);\n    SampleRedisConfig redisConfig = null;\n    try {\n      redisConfig = context.getBean(SampleRedisConfig.class);\n    } catch (NoSuchBeanDefinitionException ex) {\n      System.out.println(\"SampleRedisConfig is null, 'redis.cache.enabled' must have been set to false.\");\n    }\n\n    System.out.println(\"SpringBootSampleApplication Demo. Input any key except quit to print the values. Input quit to exit.\");\n    while (true) {\n      System.out.print(\"> \");\n      String input = new BufferedReader(new InputStreamReader(System.in, Charsets.UTF_8)).readLine();\n      if (!Strings.isNullOrEmpty(input) && input.trim().equalsIgnoreCase(\"quit\")) {\n        System.exit(0);\n      }\n\n      System.out.println(annotatedBean.toString());\n      if (redisConfig != null) {\n        System.out.println(redisConfig.toString());\n      }\n    }\n  }\n","date":"2018-03-03 22:47:36","endLine":48,"groupId":"10612","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"main","params":"(String[]args)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-apollo-10-0.7/blobInfo/CC_OUT/blobs/e6/d87048b4c64dd42ac01846d01c9824ced30a6f.src","preCode":"  public static void main(String[] args) throws IOException {\n    ApplicationContext context = new SpringApplicationBuilder(SpringBootSampleApplication.class).run(args);\n    AnnotatedBean annotatedBean = context.getBean(AnnotatedBean.class);\n    SampleRedisConfig redisConfig = context.getBean(SampleRedisConfig.class);\n\n    System.out.println(\"SpringBootSampleApplication Demo. Input any key except quit to print the values. Input quit to exit.\");\n    while (true) {\n      System.out.print(\"> \");\n      String input = new BufferedReader(new InputStreamReader(System.in, Charsets.UTF_8)).readLine();\n      if (!Strings.isNullOrEmpty(input) && input.trim().equalsIgnoreCase(\"quit\")) {\n        System.exit(0);\n      }\n\n      System.out.println(annotatedBean.toString());\n      System.out.println(redisConfig.toString());\n    }\n  }\n","realPath":"apollo-demo/src/main/java/com/ctrip/framework/apollo/demo/spring/springBootDemo/SpringBootSampleApplication.java","repoName":"apollo","snippetEndLine":0,"snippetStartLine":0,"startLine":25,"status":"M"},{"authorDate":"2018-02-24 19:06:36","commitOrder":2,"curCode":"  public static void main(String[] args) throws IOException {\n    ApplicationContext context = new ClassPathXmlApplicationContext(\"spring.xml\");\n    XmlBean xmlBean = context.getBean(XmlBean.class);\n\n    System.out.println(\"XmlApplication Demo. Input any key except quit to print the values. Input quit to exit.\");\n    while (true) {\n      System.out.print(\"> \");\n      String input = new BufferedReader(new InputStreamReader(System.in, Charsets.UTF_8)).readLine();\n      if (!Strings.isNullOrEmpty(input) && input.trim().equalsIgnoreCase(\"quit\")) {\n        System.exit(0);\n      }\n\n      System.out.println(xmlBean.toString());\n    }\n  }\n","date":"2018-02-24 19:06:36","endLine":32,"groupId":"10612","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"main","params":"(String[]args)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-apollo-10-0.7/blobInfo/CC_OUT/blobs/88/196899b41252eca5f8207773241b6fb850a401.src","preCode":"  public static void main(String[] args) throws IOException {\n    ApplicationContext context = new ClassPathXmlApplicationContext(\"spring.xml\");\n    XmlBean xmlBean = context.getBean(XmlBean.class);\n\n    System.out.println(\"XmlApplication Demo. Input any key except quit to print the values. Input quit to exit.\");\n    while (true) {\n      System.out.print(\"> \");\n      String input = new BufferedReader(new InputStreamReader(System.in, Charsets.UTF_8)).readLine();\n      if (!Strings.isNullOrEmpty(input) && input.trim().equalsIgnoreCase(\"quit\")) {\n        System.exit(0);\n      }\n\n      System.out.println(xmlBean.toString());\n    }\n  }\n","realPath":"apollo-demo/src/main/java/com/ctrip/framework/apollo/demo/spring/xmlConfigDemo/XmlApplication.java","repoName":"apollo","snippetEndLine":0,"snippetStartLine":0,"startLine":18,"status":"N"}],"commitId":"1e23258471981bd09de7bdf2e2c722a20282a13b","commitMessage":"@@@Merge pull request #978 from nobodyiam/spring-boot-initializer\n\nuse ApplicationContextInitializer instead of SpringApplicationRunListener for better compatibility","date":"2018-03-03 22:47:36","modifiedFileCount":"1","status":"M","submitter":"Jason Song"}]
