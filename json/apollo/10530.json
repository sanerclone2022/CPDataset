[{"authorTime":"2016-11-22 15:47:36","codes":[{"authorDate":"2016-07-13 15:28:01","commitOrder":2,"curCode":"  public Release buildRelease(String name, String comment, Namespace namespace,\n                              Map<String, String> configurations, String owner) {\n    Release release = new Release();\n    release.setReleaseKey(ReleaseKeyGenerator.generateReleaseKey(namespace));\n    release.setDataChangeCreatedTime(new Date());\n    release.setDataChangeCreatedBy(owner);\n    release.setDataChangeLastModifiedBy(owner);\n    release.setName(name);\n    release.setComment(comment);\n    release.setAppId(namespace.getAppId());\n    release.setClusterName(namespace.getClusterName());\n    release.setNamespaceName(namespace.getNamespaceName());\n    release.setConfigurations(gson.toJson(configurations));\n    release = releaseRepository.save(release);\n\n    return release;\n  }\n","date":"2016-07-13 15:28:01","endLine":84,"groupId":"1655","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"buildRelease","params":"(Stringname@Stringcomment@Namespacenamespace@Map<String@String>configurations@Stringowner)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-apollo-10-0.7/blobInfo/CC_OUT/blobs/55/a80b3ad611cae020c5dbe8ebeb6e9b33959ce4.src","preCode":"  public Release buildRelease(String name, String comment, Namespace namespace,\n                              Map<String, String> configurations, String owner) {\n    Release release = new Release();\n    release.setReleaseKey(ReleaseKeyGenerator.generateReleaseKey(namespace));\n    release.setDataChangeCreatedTime(new Date());\n    release.setDataChangeCreatedBy(owner);\n    release.setDataChangeLastModifiedBy(owner);\n    release.setName(name);\n    release.setComment(comment);\n    release.setAppId(namespace.getAppId());\n    release.setClusterName(namespace.getClusterName());\n    release.setNamespaceName(namespace.getNamespaceName());\n    release.setConfigurations(gson.toJson(configurations));\n    release = releaseRepository.save(release);\n\n    return release;\n  }\n","realPath":"apollo-configservice/src/test/java/com/ctrip/framework/apollo/configservice/integration/AbstractBaseIntegrationTest.java","repoName":"apollo","snippetEndLine":0,"snippetStartLine":0,"startLine":68,"status":"NB"},{"authorDate":"2016-11-22 15:47:36","commitOrder":2,"curCode":"  private Release createRelease(Namespace namespace, String name, String comment,\n                                Map<String, String> configurations, String operator) {\n    Release release = new Release();\n    release.setReleaseKey(ReleaseKeyGenerator.generateReleaseKey(namespace));\n    release.setDataChangeCreatedTime(new Date());\n    release.setDataChangeCreatedBy(operator);\n    release.setDataChangeLastModifiedBy(operator);\n    release.setName(name);\n    release.setComment(comment);\n    release.setAppId(namespace.getAppId());\n    release.setClusterName(namespace.getClusterName());\n    release.setNamespaceName(namespace.getNamespaceName());\n    release.setConfigurations(gson.toJson(configurations));\n    release = releaseRepository.save(release);\n\n    namespaceLockService.unlock(namespace.getId());\n    auditService.audit(Release.class.getSimpleName(), release.getId(), Audit.OP.INSERT,\n                       release.getDataChangeCreatedBy());\n\n    return release;\n  }\n","date":"2016-11-22 15:47:36","endLine":344,"groupId":"1655","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"createRelease","params":"(Namespacenamespace@Stringname@Stringcomment@Map<String@String>configurations@Stringoperator)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-apollo-10-0.7/blobInfo/CC_OUT/blobs/3f/be18713c46b789d536f8860df31dc7fc074ffe.src","preCode":"  private Release createRelease(Namespace namespace, String name, String comment,\n                                Map<String, String> configurations, String operator) {\n    Release release = new Release();\n    release.setReleaseKey(ReleaseKeyGenerator.generateReleaseKey(namespace));\n    release.setDataChangeCreatedTime(new Date());\n    release.setDataChangeCreatedBy(operator);\n    release.setDataChangeLastModifiedBy(operator);\n    release.setName(name);\n    release.setComment(comment);\n    release.setAppId(namespace.getAppId());\n    release.setClusterName(namespace.getClusterName());\n    release.setNamespaceName(namespace.getNamespaceName());\n    release.setConfigurations(gson.toJson(configurations));\n    release = releaseRepository.save(release);\n\n    namespaceLockService.unlock(namespace.getId());\n    auditService.audit(Release.class.getSimpleName(), release.getId(), Audit.OP.INSERT,\n                       release.getDataChangeCreatedBy());\n\n    return release;\n  }\n","realPath":"apollo-biz/src/main/java/com/ctrip/framework/apollo/biz/service/ReleaseService.java","repoName":"apollo","snippetEndLine":0,"snippetStartLine":0,"startLine":324,"status":"B"}],"commitId":"6d7ebbe8491f5a920f20f84867e9114c3fbd17ae","commitMessage":"@@@Merge branch 'master' into 'release'\n\nMaster2Release\n\n\n\nSee merge request !32","date":"2016-11-22 15:47:36","modifiedFileCount":"58","status":"M","submitter":"zl??(IT)"},{"authorTime":"2020-08-22 16:05:14","codes":[{"authorDate":"2020-08-22 16:05:14","commitOrder":3,"curCode":"  public Release buildRelease(String name, String comment, Namespace namespace,\n                              Map<String, String> configurations, String owner) {\n    Release release = new Release();\n    release.setReleaseKey(ReleaseKeyGenerator.generateReleaseKey(namespace));\n    release.setDataChangeCreatedTime(new Date());\n    release.setDataChangeCreatedBy(owner);\n    release.setDataChangeLastModifiedBy(owner);\n    release.setName(name);\n    release.setComment(comment);\n    release.setAppId(namespace.getAppId());\n    release.setClusterName(namespace.getClusterName());\n    release.setNamespaceName(namespace.getNamespaceName());\n    release.setConfigurations(GSON.toJson(configurations));\n    release = releaseRepository.save(release);\n\n    return release;\n  }\n","date":"2020-08-22 16:05:14","endLine":93,"groupId":"10530","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"buildRelease","params":"(Stringname@Stringcomment@Namespacenamespace@Map<String@String>configurations@Stringowner)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-apollo-10-0.7/blobInfo/CC_OUT/blobs/29/d532132f3aa1603245bdcf23a7fb0905412208.src","preCode":"  public Release buildRelease(String name, String comment, Namespace namespace,\n                              Map<String, String> configurations, String owner) {\n    Release release = new Release();\n    release.setReleaseKey(ReleaseKeyGenerator.generateReleaseKey(namespace));\n    release.setDataChangeCreatedTime(new Date());\n    release.setDataChangeCreatedBy(owner);\n    release.setDataChangeLastModifiedBy(owner);\n    release.setName(name);\n    release.setComment(comment);\n    release.setAppId(namespace.getAppId());\n    release.setClusterName(namespace.getClusterName());\n    release.setNamespaceName(namespace.getNamespaceName());\n    release.setConfigurations(gson.toJson(configurations));\n    release = releaseRepository.save(release);\n\n    return release;\n  }\n","realPath":"apollo-configservice/src/test/java/com/ctrip/framework/apollo/configservice/integration/AbstractBaseIntegrationTest.java","repoName":"apollo","snippetEndLine":0,"snippetStartLine":0,"startLine":77,"status":"M"},{"authorDate":"2020-08-22 16:05:14","commitOrder":3,"curCode":"  private Release createRelease(Namespace namespace, String name, String comment,\n                                Map<String, String> configurations, String operator) {\n    Release release = new Release();\n    release.setReleaseKey(ReleaseKeyGenerator.generateReleaseKey(namespace));\n    release.setDataChangeCreatedTime(new Date());\n    release.setDataChangeCreatedBy(operator);\n    release.setDataChangeLastModifiedBy(operator);\n    release.setName(name);\n    release.setComment(comment);\n    release.setAppId(namespace.getAppId());\n    release.setClusterName(namespace.getClusterName());\n    release.setNamespaceName(namespace.getNamespaceName());\n    release.setConfigurations(GSON.toJson(configurations));\n    release = releaseRepository.save(release);\n\n    namespaceLockService.unlock(namespace.getId());\n    auditService.audit(Release.class.getSimpleName(), release.getId(), Audit.OP.INSERT,\n                       release.getDataChangeCreatedBy());\n\n    return release;\n  }\n","date":"2020-08-22 16:05:14","endLine":431,"groupId":"10530","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"createRelease","params":"(Namespacenamespace@Stringname@Stringcomment@Map<String@String>configurations@Stringoperator)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-apollo-10-0.7/blobInfo/CC_OUT/blobs/bb/485b0a52ece815cb69b81363269bef05df7207.src","preCode":"  private Release createRelease(Namespace namespace, String name, String comment,\n                                Map<String, String> configurations, String operator) {\n    Release release = new Release();\n    release.setReleaseKey(ReleaseKeyGenerator.generateReleaseKey(namespace));\n    release.setDataChangeCreatedTime(new Date());\n    release.setDataChangeCreatedBy(operator);\n    release.setDataChangeLastModifiedBy(operator);\n    release.setName(name);\n    release.setComment(comment);\n    release.setAppId(namespace.getAppId());\n    release.setClusterName(namespace.getClusterName());\n    release.setNamespaceName(namespace.getNamespaceName());\n    release.setConfigurations(gson.toJson(configurations));\n    release = releaseRepository.save(release);\n\n    namespaceLockService.unlock(namespace.getId());\n    auditService.audit(Release.class.getSimpleName(), release.getId(), Audit.OP.INSERT,\n                       release.getDataChangeCreatedBy());\n\n    return release;\n  }\n","realPath":"apollo-biz/src/main/java/com/ctrip/framework/apollo/biz/service/ReleaseService.java","repoName":"apollo","snippetEndLine":0,"snippetStartLine":0,"startLine":411,"status":"M"}],"commitId":"077b1762845af5842d1af6d18cf117c273f483bf","commitMessage":"@@@polish some code (#3249)\n\n","date":"2020-08-22 16:05:14","modifiedFileCount":"34","status":"M","submitter":"Jared Tan"}]
