[{"authorTime":"2018-02-24 19:06:36","codes":[{"authorDate":"2018-02-24 19:06:36","commitOrder":1,"curCode":"  public void testAutoUpdateWithIrrelevantProperties() throws Exception {\n    int initialTimeout = 1000;\n\n    String someIrrelevantKey = \"someIrrelevantKey\";\n    String someIrrelevantValue = \"someIrrelevantValue\";\n\n    String anotherIrrelevantKey = \"anotherIrrelevantKey\";\n    String anotherIrrelevantValue = \"anotherIrrelevantValue\";\n\n    Properties applicationProperties =\n        assembleProperties(TIMEOUT_PROPERTY, String.valueOf(initialTimeout), someIrrelevantKey, someIrrelevantValue);\n\n    SimpleConfig applicationConfig = prepareConfig(ConfigConsts.NAMESPACE_APPLICATION, applicationProperties);\n\n    AnnotationConfigApplicationContext context = new AnnotationConfigApplicationContext(AppConfig1.class);\n\n    TestJavaConfigBean bean = context.getBean(TestJavaConfigBean.class);\n\n    assertEquals(initialTimeout, bean.getTimeout());\n    assertEquals(DEFAULT_BATCH, bean.getBatch());\n\n    Properties newApplicationProperties = assembleProperties(TIMEOUT_PROPERTY, String.valueOf(initialTimeout),\n        anotherIrrelevantKey, String.valueOf(anotherIrrelevantValue));\n\n    applicationConfig.onRepositoryChange(ConfigConsts.NAMESPACE_APPLICATION, newApplicationProperties);\n\n    TimeUnit.MILLISECONDS.sleep(50);\n\n    assertEquals(initialTimeout, bean.getTimeout());\n    assertEquals(DEFAULT_BATCH, bean.getBatch());\n  }\n","date":"2018-02-24 19:06:36","endLine":273,"groupId":"1871","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testAutoUpdateWithIrrelevantProperties","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-apollo-10-0.7/blobInfo/CC_OUT/blobs/f5/cc4c823de8ca1dc4440ec8bf384cad795b7703.src","preCode":"  public void testAutoUpdateWithIrrelevantProperties() throws Exception {\n    int initialTimeout = 1000;\n\n    String someIrrelevantKey = \"someIrrelevantKey\";\n    String someIrrelevantValue = \"someIrrelevantValue\";\n\n    String anotherIrrelevantKey = \"anotherIrrelevantKey\";\n    String anotherIrrelevantValue = \"anotherIrrelevantValue\";\n\n    Properties applicationProperties =\n        assembleProperties(TIMEOUT_PROPERTY, String.valueOf(initialTimeout), someIrrelevantKey, someIrrelevantValue);\n\n    SimpleConfig applicationConfig = prepareConfig(ConfigConsts.NAMESPACE_APPLICATION, applicationProperties);\n\n    AnnotationConfigApplicationContext context = new AnnotationConfigApplicationContext(AppConfig1.class);\n\n    TestJavaConfigBean bean = context.getBean(TestJavaConfigBean.class);\n\n    assertEquals(initialTimeout, bean.getTimeout());\n    assertEquals(DEFAULT_BATCH, bean.getBatch());\n\n    Properties newApplicationProperties = assembleProperties(TIMEOUT_PROPERTY, String.valueOf(initialTimeout),\n        anotherIrrelevantKey, String.valueOf(anotherIrrelevantValue));\n\n    applicationConfig.onRepositoryChange(ConfigConsts.NAMESPACE_APPLICATION, newApplicationProperties);\n\n    TimeUnit.MILLISECONDS.sleep(50);\n\n    assertEquals(initialTimeout, bean.getTimeout());\n    assertEquals(DEFAULT_BATCH, bean.getBatch());\n  }\n","realPath":"apollo-client/src/test/java/com/ctrip/framework/apollo/spring/JavaConfigPlaceholderAutoUpdateTest.java","repoName":"apollo","snippetEndLine":0,"snippetStartLine":0,"startLine":243,"status":"B"},{"authorDate":"2018-02-24 19:06:36","commitOrder":1,"curCode":"  public void testAutoUpdateWithIrrelevantProperties() throws Exception {\n    int initialTimeout = 1000;\n\n    String someIrrelevantKey = \"someIrrelevantKey\";\n    String someIrrelevantValue = \"someIrrelevantValue\";\n\n    String anotherIrrelevantKey = \"anotherIrrelevantKey\";\n    String anotherIrrelevantValue = \"anotherIrrelevantValue\";\n\n    Properties applicationProperties = assembleProperties(TIMEOUT_PROPERTY,\n        String.valueOf(initialTimeout), someIrrelevantKey, someIrrelevantValue);\n\n    SimpleConfig applicationConfig = prepareConfig(ConfigConsts.NAMESPACE_APPLICATION,\n        applicationProperties);\n\n    ClassPathXmlApplicationContext context = new ClassPathXmlApplicationContext(\"spring/XmlConfigPlaceholderTest1.xml\");\n\n    TestXmlBean bean = context.getBean(TestXmlBean.class);\n\n    assertEquals(initialTimeout, bean.getTimeout());\n    assertEquals(DEFAULT_BATCH, bean.getBatch());\n\n    Properties newApplicationProperties = assembleProperties(TIMEOUT_PROPERTY,\n        String.valueOf(initialTimeout), anotherIrrelevantKey, String.valueOf(anotherIrrelevantValue));\n\n    applicationConfig\n        .onRepositoryChange(ConfigConsts.NAMESPACE_APPLICATION, newApplicationProperties);\n\n    TimeUnit.MILLISECONDS.sleep(50);\n\n    assertEquals(initialTimeout, bean.getTimeout());\n    assertEquals(DEFAULT_BATCH, bean.getBatch());\n  }\n","date":"2018-02-24 19:06:36","endLine":236,"groupId":"1806","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testAutoUpdateWithIrrelevantProperties","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-apollo-10-0.7/blobInfo/CC_OUT/blobs/16/1be3e592d3696df40c6a9e9828b6d21b462710.src","preCode":"  public void testAutoUpdateWithIrrelevantProperties() throws Exception {\n    int initialTimeout = 1000;\n\n    String someIrrelevantKey = \"someIrrelevantKey\";\n    String someIrrelevantValue = \"someIrrelevantValue\";\n\n    String anotherIrrelevantKey = \"anotherIrrelevantKey\";\n    String anotherIrrelevantValue = \"anotherIrrelevantValue\";\n\n    Properties applicationProperties = assembleProperties(TIMEOUT_PROPERTY,\n        String.valueOf(initialTimeout), someIrrelevantKey, someIrrelevantValue);\n\n    SimpleConfig applicationConfig = prepareConfig(ConfigConsts.NAMESPACE_APPLICATION,\n        applicationProperties);\n\n    ClassPathXmlApplicationContext context = new ClassPathXmlApplicationContext(\"spring/XmlConfigPlaceholderTest1.xml\");\n\n    TestXmlBean bean = context.getBean(TestXmlBean.class);\n\n    assertEquals(initialTimeout, bean.getTimeout());\n    assertEquals(DEFAULT_BATCH, bean.getBatch());\n\n    Properties newApplicationProperties = assembleProperties(TIMEOUT_PROPERTY,\n        String.valueOf(initialTimeout), anotherIrrelevantKey, String.valueOf(anotherIrrelevantValue));\n\n    applicationConfig\n        .onRepositoryChange(ConfigConsts.NAMESPACE_APPLICATION, newApplicationProperties);\n\n    TimeUnit.MILLISECONDS.sleep(50);\n\n    assertEquals(initialTimeout, bean.getTimeout());\n    assertEquals(DEFAULT_BATCH, bean.getBatch());\n  }\n","realPath":"apollo-client/src/test/java/com/ctrip/framework/apollo/spring/XmlConfigPlaceholderAutoUpdateTest.java","repoName":"apollo","snippetEndLine":0,"snippetStartLine":0,"startLine":204,"status":"B"}],"commitId":"5823daa67b7c84d650023cff3464eae40c53d13c","commitMessage":"@@@Merge pull request #972 from nobodyiam/auto-update-value-merge\n\nAuto Updating Spring Placeholder Values","date":"2018-02-24 19:06:36","modifiedFileCount":"22","status":"B","submitter":"??"},{"authorTime":"2018-03-27 23:49:38","codes":[{"authorDate":"2018-03-27 23:49:38","commitOrder":2,"curCode":"  public void testAutoUpdateWithIrrelevantProperties() throws Exception {\n    int initialTimeout = 1000;\n\n    String someIrrelevantKey = \"someIrrelevantKey\";\n    String someIrrelevantValue = \"someIrrelevantValue\";\n\n    String anotherIrrelevantKey = \"anotherIrrelevantKey\";\n    String anotherIrrelevantValue = \"anotherIrrelevantValue\";\n\n    Properties applicationProperties =\n        assembleProperties(TIMEOUT_PROPERTY, String.valueOf(initialTimeout), someIrrelevantKey, someIrrelevantValue);\n\n    SimpleConfig applicationConfig = prepareConfig(ConfigConsts.NAMESPACE_APPLICATION, applicationProperties);\n\n    AnnotationConfigApplicationContext context = new AnnotationConfigApplicationContext(AppConfig1.class);\n\n    TestJavaConfigBean bean = context.getBean(TestJavaConfigBean.class);\n\n    assertEquals(initialTimeout, bean.getTimeout());\n    assertEquals(DEFAULT_BATCH, bean.getBatch());\n\n    Properties newApplicationProperties = assembleProperties(TIMEOUT_PROPERTY, String.valueOf(initialTimeout),\n        anotherIrrelevantKey, String.valueOf(anotherIrrelevantValue));\n\n    applicationConfig.onRepositoryChange(ConfigConsts.NAMESPACE_APPLICATION, newApplicationProperties);\n\n    TimeUnit.MILLISECONDS.sleep(100);\n\n    assertEquals(initialTimeout, bean.getTimeout());\n    assertEquals(DEFAULT_BATCH, bean.getBatch());\n  }\n","date":"2018-03-27 23:49:38","endLine":275,"groupId":"1871","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testAutoUpdateWithIrrelevantProperties","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-apollo-10-0.7/blobInfo/CC_OUT/blobs/51/683f1416030e995699ace47eb1b1d255138f63.src","preCode":"  public void testAutoUpdateWithIrrelevantProperties() throws Exception {\n    int initialTimeout = 1000;\n\n    String someIrrelevantKey = \"someIrrelevantKey\";\n    String someIrrelevantValue = \"someIrrelevantValue\";\n\n    String anotherIrrelevantKey = \"anotherIrrelevantKey\";\n    String anotherIrrelevantValue = \"anotherIrrelevantValue\";\n\n    Properties applicationProperties =\n        assembleProperties(TIMEOUT_PROPERTY, String.valueOf(initialTimeout), someIrrelevantKey, someIrrelevantValue);\n\n    SimpleConfig applicationConfig = prepareConfig(ConfigConsts.NAMESPACE_APPLICATION, applicationProperties);\n\n    AnnotationConfigApplicationContext context = new AnnotationConfigApplicationContext(AppConfig1.class);\n\n    TestJavaConfigBean bean = context.getBean(TestJavaConfigBean.class);\n\n    assertEquals(initialTimeout, bean.getTimeout());\n    assertEquals(DEFAULT_BATCH, bean.getBatch());\n\n    Properties newApplicationProperties = assembleProperties(TIMEOUT_PROPERTY, String.valueOf(initialTimeout),\n        anotherIrrelevantKey, String.valueOf(anotherIrrelevantValue));\n\n    applicationConfig.onRepositoryChange(ConfigConsts.NAMESPACE_APPLICATION, newApplicationProperties);\n\n    TimeUnit.MILLISECONDS.sleep(50);\n\n    assertEquals(initialTimeout, bean.getTimeout());\n    assertEquals(DEFAULT_BATCH, bean.getBatch());\n  }\n","realPath":"apollo-client/src/test/java/com/ctrip/framework/apollo/spring/JavaConfigPlaceholderAutoUpdateTest.java","repoName":"apollo","snippetEndLine":0,"snippetStartLine":0,"startLine":245,"status":"M"},{"authorDate":"2018-03-27 23:49:38","commitOrder":2,"curCode":"  public void testAutoUpdateWithIrrelevantProperties() throws Exception {\n    int initialTimeout = 1000;\n\n    String someIrrelevantKey = \"someIrrelevantKey\";\n    String someIrrelevantValue = \"someIrrelevantValue\";\n\n    String anotherIrrelevantKey = \"anotherIrrelevantKey\";\n    String anotherIrrelevantValue = \"anotherIrrelevantValue\";\n\n    Properties applicationProperties = assembleProperties(TIMEOUT_PROPERTY,\n        String.valueOf(initialTimeout), someIrrelevantKey, someIrrelevantValue);\n\n    SimpleConfig applicationConfig = prepareConfig(ConfigConsts.NAMESPACE_APPLICATION,\n        applicationProperties);\n\n    ClassPathXmlApplicationContext context = new ClassPathXmlApplicationContext(\"spring/XmlConfigPlaceholderTest1.xml\");\n\n    TestXmlBean bean = context.getBean(TestXmlBean.class);\n\n    assertEquals(initialTimeout, bean.getTimeout());\n    assertEquals(DEFAULT_BATCH, bean.getBatch());\n\n    Properties newApplicationProperties = assembleProperties(TIMEOUT_PROPERTY,\n        String.valueOf(initialTimeout), anotherIrrelevantKey, String.valueOf(anotherIrrelevantValue));\n\n    applicationConfig\n        .onRepositoryChange(ConfigConsts.NAMESPACE_APPLICATION, newApplicationProperties);\n\n    TimeUnit.MILLISECONDS.sleep(100);\n\n    assertEquals(initialTimeout, bean.getTimeout());\n    assertEquals(DEFAULT_BATCH, bean.getBatch());\n  }\n","date":"2018-03-27 23:49:38","endLine":235,"groupId":"1806","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testAutoUpdateWithIrrelevantProperties","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-apollo-10-0.7/blobInfo/CC_OUT/blobs/1c/5336f31a7c40b2dd303c13a7c56c51a8b02cee.src","preCode":"  public void testAutoUpdateWithIrrelevantProperties() throws Exception {\n    int initialTimeout = 1000;\n\n    String someIrrelevantKey = \"someIrrelevantKey\";\n    String someIrrelevantValue = \"someIrrelevantValue\";\n\n    String anotherIrrelevantKey = \"anotherIrrelevantKey\";\n    String anotherIrrelevantValue = \"anotherIrrelevantValue\";\n\n    Properties applicationProperties = assembleProperties(TIMEOUT_PROPERTY,\n        String.valueOf(initialTimeout), someIrrelevantKey, someIrrelevantValue);\n\n    SimpleConfig applicationConfig = prepareConfig(ConfigConsts.NAMESPACE_APPLICATION,\n        applicationProperties);\n\n    ClassPathXmlApplicationContext context = new ClassPathXmlApplicationContext(\"spring/XmlConfigPlaceholderTest1.xml\");\n\n    TestXmlBean bean = context.getBean(TestXmlBean.class);\n\n    assertEquals(initialTimeout, bean.getTimeout());\n    assertEquals(DEFAULT_BATCH, bean.getBatch());\n\n    Properties newApplicationProperties = assembleProperties(TIMEOUT_PROPERTY,\n        String.valueOf(initialTimeout), anotherIrrelevantKey, String.valueOf(anotherIrrelevantValue));\n\n    applicationConfig\n        .onRepositoryChange(ConfigConsts.NAMESPACE_APPLICATION, newApplicationProperties);\n\n    TimeUnit.MILLISECONDS.sleep(50);\n\n    assertEquals(initialTimeout, bean.getTimeout());\n    assertEquals(DEFAULT_BATCH, bean.getBatch());\n  }\n","realPath":"apollo-client/src/test/java/com/ctrip/framework/apollo/spring/XmlConfigPlaceholderAutoUpdateTest.java","repoName":"apollo","snippetEndLine":0,"snippetStartLine":0,"startLine":203,"status":"M"}],"commitId":"6b2467df6aa3c286102219e1c5b50efeeb68f747","commitMessage":"@@@Merge pull request #1019 from nobodyiam/0.10.1\n\nfix the issue brought by 0.10.0 that Spring related classes are mistakenly loaded via DefaultInjector","date":"2018-03-27 23:49:38","modifiedFileCount":"10","status":"M","submitter":"Jason Song"},{"authorTime":"2020-09-11 20:01:31","codes":[{"authorDate":"2020-09-11 20:01:31","commitOrder":3,"curCode":"  public void testAutoUpdateWithIrrelevantProperties() throws Exception {\n    int initialTimeout = 1000;\n\n    String someIrrelevantKey = \"someIrrelevantKey\";\n    String someIrrelevantValue = \"someIrrelevantValue\";\n\n    String anotherIrrelevantKey = \"anotherIrrelevantKey\";\n    String anotherIrrelevantValue = \"anotherIrrelevantValue\";\n\n    Properties applicationProperties =\n        assembleProperties(TIMEOUT_PROPERTY, String.valueOf(initialTimeout), someIrrelevantKey, someIrrelevantValue);\n\n    SimpleConfig applicationConfig = prepareConfig(ConfigConsts.NAMESPACE_APPLICATION, applicationProperties);\n\n    AnnotationConfigApplicationContext context = new AnnotationConfigApplicationContext(AppConfig1.class);\n\n    TestJavaConfigBean bean = context.getBean(TestJavaConfigBean.class);\n\n    assertEquals(initialTimeout, bean.getTimeout());\n    assertEquals(DEFAULT_BATCH, bean.getBatch());\n\n    Properties newApplicationProperties = assembleProperties(TIMEOUT_PROPERTY, String.valueOf(initialTimeout),\n        anotherIrrelevantKey, anotherIrrelevantValue);\n\n    applicationConfig.onRepositoryChange(ConfigConsts.NAMESPACE_APPLICATION, newApplicationProperties);\n\n    TimeUnit.MILLISECONDS.sleep(100);\n\n    assertEquals(initialTimeout, bean.getTimeout());\n    assertEquals(DEFAULT_BATCH, bean.getBatch());\n  }\n","date":"2020-09-11 20:01:31","endLine":384,"groupId":"10387","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testAutoUpdateWithIrrelevantProperties","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-apollo-10-0.7/blobInfo/CC_OUT/blobs/eb/26c8c0c60133f8fa17831de4bafe5c43fef254.src","preCode":"  public void testAutoUpdateWithIrrelevantProperties() throws Exception {\n    int initialTimeout = 1000;\n\n    String someIrrelevantKey = \"someIrrelevantKey\";\n    String someIrrelevantValue = \"someIrrelevantValue\";\n\n    String anotherIrrelevantKey = \"anotherIrrelevantKey\";\n    String anotherIrrelevantValue = \"anotherIrrelevantValue\";\n\n    Properties applicationProperties =\n        assembleProperties(TIMEOUT_PROPERTY, String.valueOf(initialTimeout), someIrrelevantKey, someIrrelevantValue);\n\n    SimpleConfig applicationConfig = prepareConfig(ConfigConsts.NAMESPACE_APPLICATION, applicationProperties);\n\n    AnnotationConfigApplicationContext context = new AnnotationConfigApplicationContext(AppConfig1.class);\n\n    TestJavaConfigBean bean = context.getBean(TestJavaConfigBean.class);\n\n    assertEquals(initialTimeout, bean.getTimeout());\n    assertEquals(DEFAULT_BATCH, bean.getBatch());\n\n    Properties newApplicationProperties = assembleProperties(TIMEOUT_PROPERTY, String.valueOf(initialTimeout),\n        anotherIrrelevantKey, String.valueOf(anotherIrrelevantValue));\n\n    applicationConfig.onRepositoryChange(ConfigConsts.NAMESPACE_APPLICATION, newApplicationProperties);\n\n    TimeUnit.MILLISECONDS.sleep(100);\n\n    assertEquals(initialTimeout, bean.getTimeout());\n    assertEquals(DEFAULT_BATCH, bean.getBatch());\n  }\n","realPath":"apollo-client/src/test/java/com/ctrip/framework/apollo/spring/JavaConfigPlaceholderAutoUpdateTest.java","repoName":"apollo","snippetEndLine":0,"snippetStartLine":0,"startLine":354,"status":"M"},{"authorDate":"2020-09-11 20:01:31","commitOrder":3,"curCode":"  public void testAutoUpdateWithIrrelevantProperties() throws Exception {\n    int initialTimeout = 1000;\n\n    String someIrrelevantKey = \"someIrrelevantKey\";\n    String someIrrelevantValue = \"someIrrelevantValue\";\n\n    String anotherIrrelevantKey = \"anotherIrrelevantKey\";\n    String anotherIrrelevantValue = \"anotherIrrelevantValue\";\n\n    Properties applicationProperties = assembleProperties(TIMEOUT_PROPERTY,\n        String.valueOf(initialTimeout), someIrrelevantKey, someIrrelevantValue);\n\n    SimpleConfig applicationConfig = prepareConfig(ConfigConsts.NAMESPACE_APPLICATION,\n        applicationProperties);\n\n    ClassPathXmlApplicationContext context = new ClassPathXmlApplicationContext(\"spring/XmlConfigPlaceholderTest1.xml\");\n\n    TestXmlBean bean = context.getBean(TestXmlBean.class);\n\n    assertEquals(initialTimeout, bean.getTimeout());\n    assertEquals(DEFAULT_BATCH, bean.getBatch());\n\n    Properties newApplicationProperties = assembleProperties(TIMEOUT_PROPERTY,\n        String.valueOf(initialTimeout), anotherIrrelevantKey, anotherIrrelevantValue);\n\n    applicationConfig\n        .onRepositoryChange(ConfigConsts.NAMESPACE_APPLICATION, newApplicationProperties);\n\n    TimeUnit.MILLISECONDS.sleep(100);\n\n    assertEquals(initialTimeout, bean.getTimeout());\n    assertEquals(DEFAULT_BATCH, bean.getBatch());\n  }\n","date":"2020-09-11 20:01:31","endLine":235,"groupId":"10387","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testAutoUpdateWithIrrelevantProperties","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-apollo-10-0.7/blobInfo/CC_OUT/blobs/fc/d41dc2fe9e8ac89260c89f59c317f8448d7b24.src","preCode":"  public void testAutoUpdateWithIrrelevantProperties() throws Exception {\n    int initialTimeout = 1000;\n\n    String someIrrelevantKey = \"someIrrelevantKey\";\n    String someIrrelevantValue = \"someIrrelevantValue\";\n\n    String anotherIrrelevantKey = \"anotherIrrelevantKey\";\n    String anotherIrrelevantValue = \"anotherIrrelevantValue\";\n\n    Properties applicationProperties = assembleProperties(TIMEOUT_PROPERTY,\n        String.valueOf(initialTimeout), someIrrelevantKey, someIrrelevantValue);\n\n    SimpleConfig applicationConfig = prepareConfig(ConfigConsts.NAMESPACE_APPLICATION,\n        applicationProperties);\n\n    ClassPathXmlApplicationContext context = new ClassPathXmlApplicationContext(\"spring/XmlConfigPlaceholderTest1.xml\");\n\n    TestXmlBean bean = context.getBean(TestXmlBean.class);\n\n    assertEquals(initialTimeout, bean.getTimeout());\n    assertEquals(DEFAULT_BATCH, bean.getBatch());\n\n    Properties newApplicationProperties = assembleProperties(TIMEOUT_PROPERTY,\n        String.valueOf(initialTimeout), anotherIrrelevantKey, String.valueOf(anotherIrrelevantValue));\n\n    applicationConfig\n        .onRepositoryChange(ConfigConsts.NAMESPACE_APPLICATION, newApplicationProperties);\n\n    TimeUnit.MILLISECONDS.sleep(100);\n\n    assertEquals(initialTimeout, bean.getTimeout());\n    assertEquals(DEFAULT_BATCH, bean.getBatch());\n  }\n","realPath":"apollo-client/src/test/java/com/ctrip/framework/apollo/spring/XmlConfigPlaceholderAutoUpdateTest.java","repoName":"apollo","snippetEndLine":0,"snippetStartLine":0,"startLine":203,"status":"M"}],"commitId":"e321a8e7f315b2be45d38923e9bec3e3145332fe","commitMessage":"@@@Simplify code (#3290)\n\n","date":"2020-09-11 20:01:31","modifiedFileCount":"87","status":"M","submitter":"waters"}]
