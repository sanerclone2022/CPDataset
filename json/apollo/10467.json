[{"authorTime":"2017-01-16 18:22:30","codes":[{"authorDate":"2017-01-16 18:22:30","commitOrder":1,"curCode":"  public void testNewReleaseMessagesBeforeHandleMessage() throws Exception {\n    String someMessageContent = \"someMessage\";\n    long someMessageId = 1;\n    ReleaseMessage someMessage = assembleReleaseMsg(someMessageId, someMessageContent);\n\n    when(releaseMessageRepository.findFirst500ByIdGreaterThanOrderByIdAsc(0L)).thenReturn(Lists.newArrayList\n        (someMessage));\n\n    releaseMessageServiceWithCache.afterPropertiesSet();\n\n    ReleaseMessage latestReleaseMsg =\n        releaseMessageServiceWithCache\n            .findLatestReleaseMessageForMessages(Sets.newHashSet(someMessageContent));\n\n    List<ReleaseMessage> latestReleaseMsgGroupByMsgContent =\n        releaseMessageServiceWithCache\n            .findLatestReleaseMessagesGroupByMessages(Sets.newHashSet(someMessageContent));\n\n    assertEquals(someMessageId, latestReleaseMsg.getId());\n    assertEquals(someMessageContent, latestReleaseMsg.getMessage());\n    assertEquals(latestReleaseMsg, latestReleaseMsgGroupByMsgContent.get(0));\n\n    long newMessageId = 2;\n    ReleaseMessage newMessage = assembleReleaseMsg(newMessageId, someMessageContent);\n\n    when(releaseMessageRepository.findFirst500ByIdGreaterThanOrderByIdAsc(someMessageId)).thenReturn(Lists\n        .newArrayList(newMessage));\n\n    scanIntervalTimeUnit.sleep(scanInterval * 3);\n\n    ReleaseMessage newLatestReleaseMsg =\n        releaseMessageServiceWithCache\n            .findLatestReleaseMessageForMessages(Sets.newHashSet(someMessageContent));\n\n    List<ReleaseMessage> newLatestReleaseMsgGroupByMsgContent =\n        releaseMessageServiceWithCache\n            .findLatestReleaseMessagesGroupByMessages(Sets.newHashSet(someMessageContent));\n\n    assertEquals(newMessageId, newLatestReleaseMsg.getId());\n    assertEquals(someMessageContent, newLatestReleaseMsg.getMessage());\n    assertEquals(newLatestReleaseMsg, newLatestReleaseMsgGroupByMsgContent.get(0));\n  }\n","date":"2017-01-16 18:22:30","endLine":193,"groupId":"830","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testNewReleaseMessagesBeforeHandleMessage","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-apollo-10-0.7/blobInfo/CC_OUT/blobs/bf/f9dbc94b118e1d76582d021de15904d3e3c170.src","preCode":"  public void testNewReleaseMessagesBeforeHandleMessage() throws Exception {\n    String someMessageContent = \"someMessage\";\n    long someMessageId = 1;\n    ReleaseMessage someMessage = assembleReleaseMsg(someMessageId, someMessageContent);\n\n    when(releaseMessageRepository.findFirst500ByIdGreaterThanOrderByIdAsc(0L)).thenReturn(Lists.newArrayList\n        (someMessage));\n\n    releaseMessageServiceWithCache.afterPropertiesSet();\n\n    ReleaseMessage latestReleaseMsg =\n        releaseMessageServiceWithCache\n            .findLatestReleaseMessageForMessages(Sets.newHashSet(someMessageContent));\n\n    List<ReleaseMessage> latestReleaseMsgGroupByMsgContent =\n        releaseMessageServiceWithCache\n            .findLatestReleaseMessagesGroupByMessages(Sets.newHashSet(someMessageContent));\n\n    assertEquals(someMessageId, latestReleaseMsg.getId());\n    assertEquals(someMessageContent, latestReleaseMsg.getMessage());\n    assertEquals(latestReleaseMsg, latestReleaseMsgGroupByMsgContent.get(0));\n\n    long newMessageId = 2;\n    ReleaseMessage newMessage = assembleReleaseMsg(newMessageId, someMessageContent);\n\n    when(releaseMessageRepository.findFirst500ByIdGreaterThanOrderByIdAsc(someMessageId)).thenReturn(Lists\n        .newArrayList(newMessage));\n\n    scanIntervalTimeUnit.sleep(scanInterval * 3);\n\n    ReleaseMessage newLatestReleaseMsg =\n        releaseMessageServiceWithCache\n            .findLatestReleaseMessageForMessages(Sets.newHashSet(someMessageContent));\n\n    List<ReleaseMessage> newLatestReleaseMsgGroupByMsgContent =\n        releaseMessageServiceWithCache\n            .findLatestReleaseMessagesGroupByMessages(Sets.newHashSet(someMessageContent));\n\n    assertEquals(newMessageId, newLatestReleaseMsg.getId());\n    assertEquals(someMessageContent, newLatestReleaseMsg.getMessage());\n    assertEquals(newLatestReleaseMsg, newLatestReleaseMsgGroupByMsgContent.get(0));\n  }\n","realPath":"apollo-configservice/src/test/java/com/ctrip/framework/apollo/configservice/service/ReleaseMessageServiceWithCacheTest.java","repoName":"apollo","snippetEndLine":0,"snippetStartLine":0,"startLine":152,"status":"B"},{"authorDate":"2017-01-16 18:22:30","commitOrder":1,"curCode":"  public void testNewReleasesWithHandleMessage() throws Exception {\n    String someMessageContent = \"someMessage\";\n    long someMessageId = 1;\n    ReleaseMessage someMessage = assembleReleaseMsg(someMessageId, someMessageContent);\n\n    when(releaseMessageRepository.findFirst500ByIdGreaterThanOrderByIdAsc(0L)).thenReturn(Lists.newArrayList\n        (someMessage));\n\n    releaseMessageServiceWithCache.afterPropertiesSet();\n\n    ReleaseMessage latestReleaseMsg =\n        releaseMessageServiceWithCache\n            .findLatestReleaseMessageForMessages(Sets.newHashSet(someMessageContent));\n\n    List<ReleaseMessage> latestReleaseMsgGroupByMsgContent =\n        releaseMessageServiceWithCache\n            .findLatestReleaseMessagesGroupByMessages(Sets.newHashSet(someMessageContent));\n\n    assertEquals(someMessageId, latestReleaseMsg.getId());\n    assertEquals(someMessageContent, latestReleaseMsg.getMessage());\n    assertEquals(latestReleaseMsg, latestReleaseMsgGroupByMsgContent.get(0));\n\n    long newMessageId = 2;\n    ReleaseMessage newMessage = assembleReleaseMsg(newMessageId, someMessageContent);\n\n    releaseMessageServiceWithCache.handleMessage(newMessage, Topics.APOLLO_RELEASE_TOPIC);\n\n    ReleaseMessage newLatestReleaseMsg =\n        releaseMessageServiceWithCache\n            .findLatestReleaseMessageForMessages(Sets.newHashSet(someMessageContent));\n\n    List<ReleaseMessage> newLatestReleaseMsgGroupByMsgContent =\n        releaseMessageServiceWithCache\n            .findLatestReleaseMessagesGroupByMessages(Sets.newHashSet(someMessageContent));\n\n    assertEquals(newMessageId, newLatestReleaseMsg.getId());\n    assertEquals(someMessageContent, newLatestReleaseMsg.getMessage());\n    assertEquals(newLatestReleaseMsg, newLatestReleaseMsgGroupByMsgContent.get(0));\n  }\n","date":"2017-01-16 18:22:30","endLine":234,"groupId":"487","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testNewReleasesWithHandleMessage","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-apollo-10-0.7/blobInfo/CC_OUT/blobs/bf/f9dbc94b118e1d76582d021de15904d3e3c170.src","preCode":"  public void testNewReleasesWithHandleMessage() throws Exception {\n    String someMessageContent = \"someMessage\";\n    long someMessageId = 1;\n    ReleaseMessage someMessage = assembleReleaseMsg(someMessageId, someMessageContent);\n\n    when(releaseMessageRepository.findFirst500ByIdGreaterThanOrderByIdAsc(0L)).thenReturn(Lists.newArrayList\n        (someMessage));\n\n    releaseMessageServiceWithCache.afterPropertiesSet();\n\n    ReleaseMessage latestReleaseMsg =\n        releaseMessageServiceWithCache\n            .findLatestReleaseMessageForMessages(Sets.newHashSet(someMessageContent));\n\n    List<ReleaseMessage> latestReleaseMsgGroupByMsgContent =\n        releaseMessageServiceWithCache\n            .findLatestReleaseMessagesGroupByMessages(Sets.newHashSet(someMessageContent));\n\n    assertEquals(someMessageId, latestReleaseMsg.getId());\n    assertEquals(someMessageContent, latestReleaseMsg.getMessage());\n    assertEquals(latestReleaseMsg, latestReleaseMsgGroupByMsgContent.get(0));\n\n    long newMessageId = 2;\n    ReleaseMessage newMessage = assembleReleaseMsg(newMessageId, someMessageContent);\n\n    releaseMessageServiceWithCache.handleMessage(newMessage, Topics.APOLLO_RELEASE_TOPIC);\n\n    ReleaseMessage newLatestReleaseMsg =\n        releaseMessageServiceWithCache\n            .findLatestReleaseMessageForMessages(Sets.newHashSet(someMessageContent));\n\n    List<ReleaseMessage> newLatestReleaseMsgGroupByMsgContent =\n        releaseMessageServiceWithCache\n            .findLatestReleaseMessagesGroupByMessages(Sets.newHashSet(someMessageContent));\n\n    assertEquals(newMessageId, newLatestReleaseMsg.getId());\n    assertEquals(someMessageContent, newLatestReleaseMsg.getMessage());\n    assertEquals(newLatestReleaseMsg, newLatestReleaseMsgGroupByMsgContent.get(0));\n  }\n","realPath":"apollo-configservice/src/test/java/com/ctrip/framework/apollo/configservice/service/ReleaseMessageServiceWithCacheTest.java","repoName":"apollo","snippetEndLine":0,"snippetStartLine":0,"startLine":196,"status":"B"}],"commitId":"4949eb5584905f0d77dad00669d9b7fc645999ce","commitMessage":"@@@Merge pull request #518 from nobodyiam/optimize-notification-controller-merge\n\nUse cache for notification controller","date":"2017-01-16 18:22:30","modifiedFileCount":"14","status":"B","submitter":"??"},{"authorTime":"2017-01-16 18:22:30","codes":[{"authorDate":"2017-02-07 11:30:50","commitOrder":2,"curCode":"  public void testNewReleaseMessagesBeforeHandleMessage() throws Exception {\n    String someMessageContent = \"someMessage\";\n    long someMessageId = 1;\n    ReleaseMessage someMessage = assembleReleaseMsg(someMessageId, someMessageContent);\n\n    when(releaseMessageRepository.findFirst500ByIdGreaterThanOrderByIdAsc(0L)).thenReturn(Lists.newArrayList\n        (someMessage));\n\n    releaseMessageServiceWithCache.afterPropertiesSet();\n\n    ReleaseMessage latestReleaseMsg =\n        releaseMessageServiceWithCache\n            .findLatestReleaseMessageForMessages(Sets.newHashSet(someMessageContent));\n\n    List<ReleaseMessage> latestReleaseMsgGroupByMsgContent =\n        releaseMessageServiceWithCache\n            .findLatestReleaseMessagesGroupByMessages(Sets.newHashSet(someMessageContent));\n\n    assertEquals(someMessageId, latestReleaseMsg.getId());\n    assertEquals(someMessageContent, latestReleaseMsg.getMessage());\n    assertEquals(latestReleaseMsg, latestReleaseMsgGroupByMsgContent.get(0));\n\n    long newMessageId = 2;\n    ReleaseMessage newMessage = assembleReleaseMsg(newMessageId, someMessageContent);\n\n    when(releaseMessageRepository.findFirst500ByIdGreaterThanOrderByIdAsc(someMessageId)).thenReturn(Lists\n        .newArrayList(newMessage));\n\n    scanIntervalTimeUnit.sleep(scanInterval * 10);\n\n    ReleaseMessage newLatestReleaseMsg =\n        releaseMessageServiceWithCache\n            .findLatestReleaseMessageForMessages(Sets.newHashSet(someMessageContent));\n\n    List<ReleaseMessage> newLatestReleaseMsgGroupByMsgContent =\n        releaseMessageServiceWithCache\n            .findLatestReleaseMessagesGroupByMessages(Sets.newHashSet(someMessageContent));\n\n    assertEquals(newMessageId, newLatestReleaseMsg.getId());\n    assertEquals(someMessageContent, newLatestReleaseMsg.getMessage());\n    assertEquals(newLatestReleaseMsg, newLatestReleaseMsgGroupByMsgContent.get(0));\n  }\n","date":"2017-02-07 11:30:50","endLine":193,"groupId":"830","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testNewReleaseMessagesBeforeHandleMessage","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-apollo-10-0.7/blobInfo/CC_OUT/blobs/47/320500b7078fc33f0af1e3b05e4d09fe9218b3.src","preCode":"  public void testNewReleaseMessagesBeforeHandleMessage() throws Exception {\n    String someMessageContent = \"someMessage\";\n    long someMessageId = 1;\n    ReleaseMessage someMessage = assembleReleaseMsg(someMessageId, someMessageContent);\n\n    when(releaseMessageRepository.findFirst500ByIdGreaterThanOrderByIdAsc(0L)).thenReturn(Lists.newArrayList\n        (someMessage));\n\n    releaseMessageServiceWithCache.afterPropertiesSet();\n\n    ReleaseMessage latestReleaseMsg =\n        releaseMessageServiceWithCache\n            .findLatestReleaseMessageForMessages(Sets.newHashSet(someMessageContent));\n\n    List<ReleaseMessage> latestReleaseMsgGroupByMsgContent =\n        releaseMessageServiceWithCache\n            .findLatestReleaseMessagesGroupByMessages(Sets.newHashSet(someMessageContent));\n\n    assertEquals(someMessageId, latestReleaseMsg.getId());\n    assertEquals(someMessageContent, latestReleaseMsg.getMessage());\n    assertEquals(latestReleaseMsg, latestReleaseMsgGroupByMsgContent.get(0));\n\n    long newMessageId = 2;\n    ReleaseMessage newMessage = assembleReleaseMsg(newMessageId, someMessageContent);\n\n    when(releaseMessageRepository.findFirst500ByIdGreaterThanOrderByIdAsc(someMessageId)).thenReturn(Lists\n        .newArrayList(newMessage));\n\n    scanIntervalTimeUnit.sleep(scanInterval * 3);\n\n    ReleaseMessage newLatestReleaseMsg =\n        releaseMessageServiceWithCache\n            .findLatestReleaseMessageForMessages(Sets.newHashSet(someMessageContent));\n\n    List<ReleaseMessage> newLatestReleaseMsgGroupByMsgContent =\n        releaseMessageServiceWithCache\n            .findLatestReleaseMessagesGroupByMessages(Sets.newHashSet(someMessageContent));\n\n    assertEquals(newMessageId, newLatestReleaseMsg.getId());\n    assertEquals(someMessageContent, newLatestReleaseMsg.getMessage());\n    assertEquals(newLatestReleaseMsg, newLatestReleaseMsgGroupByMsgContent.get(0));\n  }\n","realPath":"apollo-configservice/src/test/java/com/ctrip/framework/apollo/configservice/service/ReleaseMessageServiceWithCacheTest.java","repoName":"apollo","snippetEndLine":0,"snippetStartLine":0,"startLine":152,"status":"M"},{"authorDate":"2017-01-16 18:22:30","commitOrder":2,"curCode":"  public void testNewReleasesWithHandleMessage() throws Exception {\n    String someMessageContent = \"someMessage\";\n    long someMessageId = 1;\n    ReleaseMessage someMessage = assembleReleaseMsg(someMessageId, someMessageContent);\n\n    when(releaseMessageRepository.findFirst500ByIdGreaterThanOrderByIdAsc(0L)).thenReturn(Lists.newArrayList\n        (someMessage));\n\n    releaseMessageServiceWithCache.afterPropertiesSet();\n\n    ReleaseMessage latestReleaseMsg =\n        releaseMessageServiceWithCache\n            .findLatestReleaseMessageForMessages(Sets.newHashSet(someMessageContent));\n\n    List<ReleaseMessage> latestReleaseMsgGroupByMsgContent =\n        releaseMessageServiceWithCache\n            .findLatestReleaseMessagesGroupByMessages(Sets.newHashSet(someMessageContent));\n\n    assertEquals(someMessageId, latestReleaseMsg.getId());\n    assertEquals(someMessageContent, latestReleaseMsg.getMessage());\n    assertEquals(latestReleaseMsg, latestReleaseMsgGroupByMsgContent.get(0));\n\n    long newMessageId = 2;\n    ReleaseMessage newMessage = assembleReleaseMsg(newMessageId, someMessageContent);\n\n    releaseMessageServiceWithCache.handleMessage(newMessage, Topics.APOLLO_RELEASE_TOPIC);\n\n    ReleaseMessage newLatestReleaseMsg =\n        releaseMessageServiceWithCache\n            .findLatestReleaseMessageForMessages(Sets.newHashSet(someMessageContent));\n\n    List<ReleaseMessage> newLatestReleaseMsgGroupByMsgContent =\n        releaseMessageServiceWithCache\n            .findLatestReleaseMessagesGroupByMessages(Sets.newHashSet(someMessageContent));\n\n    assertEquals(newMessageId, newLatestReleaseMsg.getId());\n    assertEquals(someMessageContent, newLatestReleaseMsg.getMessage());\n    assertEquals(newLatestReleaseMsg, newLatestReleaseMsgGroupByMsgContent.get(0));\n  }\n","date":"2017-01-16 18:22:30","endLine":234,"groupId":"487","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testNewReleasesWithHandleMessage","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-apollo-10-0.7/blobInfo/CC_OUT/blobs/bf/f9dbc94b118e1d76582d021de15904d3e3c170.src","preCode":"  public void testNewReleasesWithHandleMessage() throws Exception {\n    String someMessageContent = \"someMessage\";\n    long someMessageId = 1;\n    ReleaseMessage someMessage = assembleReleaseMsg(someMessageId, someMessageContent);\n\n    when(releaseMessageRepository.findFirst500ByIdGreaterThanOrderByIdAsc(0L)).thenReturn(Lists.newArrayList\n        (someMessage));\n\n    releaseMessageServiceWithCache.afterPropertiesSet();\n\n    ReleaseMessage latestReleaseMsg =\n        releaseMessageServiceWithCache\n            .findLatestReleaseMessageForMessages(Sets.newHashSet(someMessageContent));\n\n    List<ReleaseMessage> latestReleaseMsgGroupByMsgContent =\n        releaseMessageServiceWithCache\n            .findLatestReleaseMessagesGroupByMessages(Sets.newHashSet(someMessageContent));\n\n    assertEquals(someMessageId, latestReleaseMsg.getId());\n    assertEquals(someMessageContent, latestReleaseMsg.getMessage());\n    assertEquals(latestReleaseMsg, latestReleaseMsgGroupByMsgContent.get(0));\n\n    long newMessageId = 2;\n    ReleaseMessage newMessage = assembleReleaseMsg(newMessageId, someMessageContent);\n\n    releaseMessageServiceWithCache.handleMessage(newMessage, Topics.APOLLO_RELEASE_TOPIC);\n\n    ReleaseMessage newLatestReleaseMsg =\n        releaseMessageServiceWithCache\n            .findLatestReleaseMessageForMessages(Sets.newHashSet(someMessageContent));\n\n    List<ReleaseMessage> newLatestReleaseMsgGroupByMsgContent =\n        releaseMessageServiceWithCache\n            .findLatestReleaseMessagesGroupByMessages(Sets.newHashSet(someMessageContent));\n\n    assertEquals(newMessageId, newLatestReleaseMsg.getId());\n    assertEquals(someMessageContent, newLatestReleaseMsg.getMessage());\n    assertEquals(newLatestReleaseMsg, newLatestReleaseMsgGroupByMsgContent.get(0));\n  }\n","realPath":"apollo-configservice/src/test/java/com/ctrip/framework/apollo/configservice/service/ReleaseMessageServiceWithCacheTest.java","repoName":"apollo","snippetEndLine":0,"snippetStartLine":0,"startLine":196,"status":"N"}],"commitId":"202363b536c74a10c20a276f0862ecea0130b804","commitMessage":"@@@Merge pull request #535 from nobodyiam/fix-ut\n\nenlarge sleep interval for ut","date":"2017-02-07 11:30:50","modifiedFileCount":"3","status":"M","submitter":"??"},{"authorTime":"2017-01-16 18:22:30","codes":[{"authorDate":"2020-05-31 16:22:30","commitOrder":3,"curCode":"  public void testNewReleaseMessagesBeforeHandleMessage() throws Exception {\n    String someMessageContent = \"someMessage\";\n    long someMessageId = 1;\n    ReleaseMessage someMessage = assembleReleaseMsg(someMessageId, someMessageContent);\n\n    when(releaseMessageRepository.findFirst500ByIdGreaterThanOrderByIdAsc(0L)).thenReturn(Lists.newArrayList\n        (someMessage));\n\n    releaseMessageServiceWithCache.afterPropertiesSet();\n\n    ReleaseMessage latestReleaseMsg =\n        releaseMessageServiceWithCache\n            .findLatestReleaseMessageForMessages(Sets.newHashSet(someMessageContent));\n\n    List<ReleaseMessage> latestReleaseMsgGroupByMsgContent =\n        releaseMessageServiceWithCache\n            .findLatestReleaseMessagesGroupByMessages(Sets.newHashSet(someMessageContent));\n\n    assertEquals(someMessageId, latestReleaseMsg.getId());\n    assertEquals(someMessageContent, latestReleaseMsg.getMessage());\n    assertEquals(latestReleaseMsg, latestReleaseMsgGroupByMsgContent.get(0));\n\n    long newMessageId = 2;\n    ReleaseMessage newMessage = assembleReleaseMsg(newMessageId, someMessageContent);\n\n    when(releaseMessageRepository.findFirst500ByIdGreaterThanOrderByIdAsc(someMessageId)).thenReturn(Lists\n        .newArrayList(newMessage));\n\n    await().atMost(scanInterval * 500, scanIntervalTimeUnit).untilAsserted(() -> {\n      ReleaseMessage newLatestReleaseMsg =\n          releaseMessageServiceWithCache\n              .findLatestReleaseMessageForMessages(Sets.newHashSet(someMessageContent));\n\n      List<ReleaseMessage> newLatestReleaseMsgGroupByMsgContent =\n          releaseMessageServiceWithCache\n              .findLatestReleaseMessagesGroupByMessages(Sets.newHashSet(someMessageContent));\n\n      assertEquals(newMessageId, newLatestReleaseMsg.getId());\n      assertEquals(someMessageContent, newLatestReleaseMsg.getMessage());\n      assertEquals(newLatestReleaseMsg, newLatestReleaseMsgGroupByMsgContent.get(0));\n    });\n  }\n","date":"2020-05-31 16:22:30","endLine":189,"groupId":"10467","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testNewReleaseMessagesBeforeHandleMessage","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-apollo-10-0.7/blobInfo/CC_OUT/blobs/32/d1ada1abe81bbe263954f8582ab6bbdc114cd0.src","preCode":"  public void testNewReleaseMessagesBeforeHandleMessage() throws Exception {\n    String someMessageContent = \"someMessage\";\n    long someMessageId = 1;\n    ReleaseMessage someMessage = assembleReleaseMsg(someMessageId, someMessageContent);\n\n    when(releaseMessageRepository.findFirst500ByIdGreaterThanOrderByIdAsc(0L)).thenReturn(Lists.newArrayList\n        (someMessage));\n\n    releaseMessageServiceWithCache.afterPropertiesSet();\n\n    ReleaseMessage latestReleaseMsg =\n        releaseMessageServiceWithCache\n            .findLatestReleaseMessageForMessages(Sets.newHashSet(someMessageContent));\n\n    List<ReleaseMessage> latestReleaseMsgGroupByMsgContent =\n        releaseMessageServiceWithCache\n            .findLatestReleaseMessagesGroupByMessages(Sets.newHashSet(someMessageContent));\n\n    assertEquals(someMessageId, latestReleaseMsg.getId());\n    assertEquals(someMessageContent, latestReleaseMsg.getMessage());\n    assertEquals(latestReleaseMsg, latestReleaseMsgGroupByMsgContent.get(0));\n\n    long newMessageId = 2;\n    ReleaseMessage newMessage = assembleReleaseMsg(newMessageId, someMessageContent);\n\n    when(releaseMessageRepository.findFirst500ByIdGreaterThanOrderByIdAsc(someMessageId)).thenReturn(Lists\n        .newArrayList(newMessage));\n\n    scanIntervalTimeUnit.sleep(scanInterval * 10);\n\n    ReleaseMessage newLatestReleaseMsg =\n        releaseMessageServiceWithCache\n            .findLatestReleaseMessageForMessages(Sets.newHashSet(someMessageContent));\n\n    List<ReleaseMessage> newLatestReleaseMsgGroupByMsgContent =\n        releaseMessageServiceWithCache\n            .findLatestReleaseMessagesGroupByMessages(Sets.newHashSet(someMessageContent));\n\n    assertEquals(newMessageId, newLatestReleaseMsg.getId());\n    assertEquals(someMessageContent, newLatestReleaseMsg.getMessage());\n    assertEquals(newLatestReleaseMsg, newLatestReleaseMsgGroupByMsgContent.get(0));\n  }\n","realPath":"apollo-configservice/src/test/java/com/ctrip/framework/apollo/configservice/service/ReleaseMessageServiceWithCacheTest.java","repoName":"apollo","snippetEndLine":0,"snippetStartLine":0,"startLine":148,"status":"M"},{"authorDate":"2017-01-16 18:22:30","commitOrder":3,"curCode":"  public void testNewReleasesWithHandleMessage() throws Exception {\n    String someMessageContent = \"someMessage\";\n    long someMessageId = 1;\n    ReleaseMessage someMessage = assembleReleaseMsg(someMessageId, someMessageContent);\n\n    when(releaseMessageRepository.findFirst500ByIdGreaterThanOrderByIdAsc(0L)).thenReturn(Lists.newArrayList\n        (someMessage));\n\n    releaseMessageServiceWithCache.afterPropertiesSet();\n\n    ReleaseMessage latestReleaseMsg =\n        releaseMessageServiceWithCache\n            .findLatestReleaseMessageForMessages(Sets.newHashSet(someMessageContent));\n\n    List<ReleaseMessage> latestReleaseMsgGroupByMsgContent =\n        releaseMessageServiceWithCache\n            .findLatestReleaseMessagesGroupByMessages(Sets.newHashSet(someMessageContent));\n\n    assertEquals(someMessageId, latestReleaseMsg.getId());\n    assertEquals(someMessageContent, latestReleaseMsg.getMessage());\n    assertEquals(latestReleaseMsg, latestReleaseMsgGroupByMsgContent.get(0));\n\n    long newMessageId = 2;\n    ReleaseMessage newMessage = assembleReleaseMsg(newMessageId, someMessageContent);\n\n    releaseMessageServiceWithCache.handleMessage(newMessage, Topics.APOLLO_RELEASE_TOPIC);\n\n    ReleaseMessage newLatestReleaseMsg =\n        releaseMessageServiceWithCache\n            .findLatestReleaseMessageForMessages(Sets.newHashSet(someMessageContent));\n\n    List<ReleaseMessage> newLatestReleaseMsgGroupByMsgContent =\n        releaseMessageServiceWithCache\n            .findLatestReleaseMessagesGroupByMessages(Sets.newHashSet(someMessageContent));\n\n    assertEquals(newMessageId, newLatestReleaseMsg.getId());\n    assertEquals(someMessageContent, newLatestReleaseMsg.getMessage());\n    assertEquals(newLatestReleaseMsg, newLatestReleaseMsgGroupByMsgContent.get(0));\n  }\n","date":"2017-01-16 18:22:30","endLine":234,"groupId":"10467","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testNewReleasesWithHandleMessage","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-apollo-10-0.7/blobInfo/CC_OUT/blobs/bf/f9dbc94b118e1d76582d021de15904d3e3c170.src","preCode":"  public void testNewReleasesWithHandleMessage() throws Exception {\n    String someMessageContent = \"someMessage\";\n    long someMessageId = 1;\n    ReleaseMessage someMessage = assembleReleaseMsg(someMessageId, someMessageContent);\n\n    when(releaseMessageRepository.findFirst500ByIdGreaterThanOrderByIdAsc(0L)).thenReturn(Lists.newArrayList\n        (someMessage));\n\n    releaseMessageServiceWithCache.afterPropertiesSet();\n\n    ReleaseMessage latestReleaseMsg =\n        releaseMessageServiceWithCache\n            .findLatestReleaseMessageForMessages(Sets.newHashSet(someMessageContent));\n\n    List<ReleaseMessage> latestReleaseMsgGroupByMsgContent =\n        releaseMessageServiceWithCache\n            .findLatestReleaseMessagesGroupByMessages(Sets.newHashSet(someMessageContent));\n\n    assertEquals(someMessageId, latestReleaseMsg.getId());\n    assertEquals(someMessageContent, latestReleaseMsg.getMessage());\n    assertEquals(latestReleaseMsg, latestReleaseMsgGroupByMsgContent.get(0));\n\n    long newMessageId = 2;\n    ReleaseMessage newMessage = assembleReleaseMsg(newMessageId, someMessageContent);\n\n    releaseMessageServiceWithCache.handleMessage(newMessage, Topics.APOLLO_RELEASE_TOPIC);\n\n    ReleaseMessage newLatestReleaseMsg =\n        releaseMessageServiceWithCache\n            .findLatestReleaseMessageForMessages(Sets.newHashSet(someMessageContent));\n\n    List<ReleaseMessage> newLatestReleaseMsgGroupByMsgContent =\n        releaseMessageServiceWithCache\n            .findLatestReleaseMessagesGroupByMessages(Sets.newHashSet(someMessageContent));\n\n    assertEquals(newMessageId, newLatestReleaseMsg.getId());\n    assertEquals(someMessageContent, newLatestReleaseMsg.getMessage());\n    assertEquals(newLatestReleaseMsg, newLatestReleaseMsgGroupByMsgContent.get(0));\n  }\n","realPath":"apollo-configservice/src/test/java/com/ctrip/framework/apollo/configservice/service/ReleaseMessageServiceWithCacheTest.java","repoName":"apollo","snippetEndLine":0,"snippetStartLine":0,"startLine":196,"status":"N"}],"commitId":"38e63c6a646d47749787ae86df5d53d76917bd3a","commitMessage":"@@@Use awaitility to stabilize the async tests (#3099)\n\n","date":"2020-05-31 16:22:30","modifiedFileCount":"5","status":"M","submitter":"Jason Song"}]
