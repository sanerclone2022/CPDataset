[{"authorTime":"2020-09-07 17:54:36","codes":[{"authorDate":"2020-08-11 09:44:03","commitOrder":2,"curCode":"  private static void createMetaFile(String basePath, String instantTime, String suffix) throws IOException {\n    Path parentPath = Paths.get(basePath, HoodieTableMetaClient.METAFOLDER_NAME);\n    Files.createDirectories(parentPath);\n    Path metaFilePath = parentPath.resolve(instantTime + suffix);\n    if (Files.notExists(metaFilePath)) {\n      Files.createFile(metaFilePath);\n    }\n  }\n","date":"2020-08-11 09:44:03","endLine":43,"groupId":"2425","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"createMetaFile","params":"(StringbasePath@StringinstantTime@Stringsuffix)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-hudi-10-0.7/blobInfo/CC_OUT/blobs/2d/a8e2966fabe1038ee9f173b4ec9ea758cde04f.src","preCode":"  private static void createMetaFile(String basePath, String instantTime, String suffix) throws IOException {\n    Path parentPath = Paths.get(basePath, HoodieTableMetaClient.METAFOLDER_NAME);\n    Files.createDirectories(parentPath);\n    Path metaFilePath = parentPath.resolve(instantTime + suffix);\n    if (Files.notExists(metaFilePath)) {\n      Files.createFile(metaFilePath);\n    }\n  }\n","realPath":"hudi-common/src/test/java/org/apache/hudi/common/testutils/FileCreateUtils.java","repoName":"hudi","snippetEndLine":0,"snippetStartLine":0,"startLine":36,"status":"NB"},{"authorDate":"2020-09-07 17:54:36","commitOrder":2,"curCode":"  public static void createBaseFile(String basePath, String partitionPath, String instantTime, String fileId, long length)\n      throws Exception {\n    Path parentPath = Paths.get(basePath, partitionPath);\n    Files.createDirectories(parentPath);\n    Path baseFilePath = parentPath.resolve(baseFileName(instantTime, fileId));\n    if (Files.notExists(baseFilePath)) {\n      Files.createFile(baseFilePath);\n    }\n    new RandomAccessFile(baseFilePath.toFile(), \"rw\").setLength(length);\n  }\n","date":"2020-09-07 17:54:36","endLine":126,"groupId":"4528","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"createBaseFile","params":"(StringbasePath@StringpartitionPath@StringinstantTime@StringfileId@longlength)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-hudi-10-0.7/blobInfo/CC_OUT/blobs/f2/a1144d77ac88b53c9f444138a2e8b052254e21.src","preCode":"  public static void createBaseFile(String basePath, String partitionPath, String instantTime, String fileId, long length)\n      throws Exception {\n    Path parentPath = Paths.get(basePath, partitionPath);\n    Files.createDirectories(parentPath);\n    Path baseFilePath = parentPath.resolve(baseFileName(instantTime, fileId));\n    if (Files.notExists(baseFilePath)) {\n      Files.createFile(baseFilePath);\n    }\n    new RandomAccessFile(baseFilePath.toFile(), \"rw\").setLength(length);\n  }\n","realPath":"hudi-common/src/test/java/org/apache/hudi/common/testutils/FileCreateUtils.java","repoName":"hudi","snippetEndLine":0,"snippetStartLine":0,"startLine":117,"status":"B"}],"commitId":"83e39e2b179fb1db13f1c4865a1849855fc32b65","commitMessage":"@@@[HUDI-781] Add HoodieWriteableTestTable (#2040)\n\n- Introduce HoodieWriteableTestTable for writing records into files\n- Migrate writeParquetFiles() in HoodieClientTestUtils to HoodieWriteableTestTable\n- Adopt HoodieWrittableTestTable for test cases in\n  - ITTestRepairsCommand.java\n  - TestHoodieIndex.java\n  - TestHoodieKeyLocationFetchHandle.java\n  - TestHoodieGlobalBloomIndex.java\n  - TestHoodieBloomIndex.java\n- Renamed HoodieTestTable and FileCreateUtils APIs\n  - dataFile changed to baseFile","date":"2020-09-07 17:54:36","modifiedFileCount":"12","status":"M","submitter":"Raymond Xu"},{"authorTime":"2021-05-25 22:19:10","codes":[{"authorDate":"2020-08-11 09:44:03","commitOrder":3,"curCode":"  private static void createMetaFile(String basePath, String instantTime, String suffix) throws IOException {\n    Path parentPath = Paths.get(basePath, HoodieTableMetaClient.METAFOLDER_NAME);\n    Files.createDirectories(parentPath);\n    Path metaFilePath = parentPath.resolve(instantTime + suffix);\n    if (Files.notExists(metaFilePath)) {\n      Files.createFile(metaFilePath);\n    }\n  }\n","date":"2020-08-11 09:44:03","endLine":43,"groupId":"12914","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"createMetaFile","params":"(StringbasePath@StringinstantTime@Stringsuffix)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-hudi-10-0.7/blobInfo/CC_OUT/blobs/2d/a8e2966fabe1038ee9f173b4ec9ea758cde04f.src","preCode":"  private static void createMetaFile(String basePath, String instantTime, String suffix) throws IOException {\n    Path parentPath = Paths.get(basePath, HoodieTableMetaClient.METAFOLDER_NAME);\n    Files.createDirectories(parentPath);\n    Path metaFilePath = parentPath.resolve(instantTime + suffix);\n    if (Files.notExists(metaFilePath)) {\n      Files.createFile(metaFilePath);\n    }\n  }\n","realPath":"hudi-common/src/test/java/org/apache/hudi/common/testutils/FileCreateUtils.java","repoName":"hudi","snippetEndLine":0,"snippetStartLine":0,"startLine":36,"status":"N"},{"authorDate":"2021-05-25 22:19:10","commitOrder":3,"curCode":"  public static void createBaseFile(String basePath, String partitionPath, String instantTime, String fileId, long length, long lastModificationTimeMilli)\n      throws Exception {\n    Path parentPath = Paths.get(basePath, partitionPath);\n    Files.createDirectories(parentPath);\n    Path baseFilePath = parentPath.resolve(baseFileName(instantTime, fileId));\n    if (Files.notExists(baseFilePath)) {\n      Files.createFile(baseFilePath);\n    }\n    new RandomAccessFile(baseFilePath.toFile(), \"rw\").setLength(length);\n    Files.setLastModifiedTime(baseFilePath, FileTime.fromMillis(lastModificationTimeMilli));\n  }\n","date":"2021-05-25 22:19:10","endLine":242,"groupId":"12914","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"createBaseFile","params":"(StringbasePath@StringpartitionPath@StringinstantTime@StringfileId@longlength@longlastModificationTimeMilli)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-hudi-10-0.7/blobInfo/CC_OUT/blobs/b7/754b0c65f2e38a9b26eba0a64dc1ba0ee50a9f.src","preCode":"  public static void createBaseFile(String basePath, String partitionPath, String instantTime, String fileId, long length)\n      throws Exception {\n    Path parentPath = Paths.get(basePath, partitionPath);\n    Files.createDirectories(parentPath);\n    Path baseFilePath = parentPath.resolve(baseFileName(instantTime, fileId));\n    if (Files.notExists(baseFilePath)) {\n      Files.createFile(baseFilePath);\n    }\n    new RandomAccessFile(baseFilePath.toFile(), \"rw\").setLength(length);\n  }\n","realPath":"hudi-common/src/test/java/org/apache/hudi/common/testutils/FileCreateUtils.java","repoName":"hudi","snippetEndLine":0,"snippetStartLine":0,"startLine":232,"status":"M"}],"commitId":"afa6bc0b100450b5d80a27bf5b87cbd4a0fbb3a5","commitMessage":"@@@[HUDI-1723] Fix path selector listing files with the same mod date (#2845)\n\n","date":"2021-05-25 22:19:10","modifiedFileCount":"3","status":"M","submitter":"Raymond Xu"}]
