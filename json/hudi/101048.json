[{"authorTime":"2021-06-08 14:24:32","codes":[{"authorDate":"2021-06-08 14:24:32","commitOrder":1,"curCode":"  public Schema getTableAvroSchema(boolean includeMetadataFields) throws Exception {\n    Option<Schema> schemaFromCommitMetadata = getTableSchemaFromCommitMetadata(includeMetadataFields);\n    if (schemaFromCommitMetadata.isPresent()) {\n      return schemaFromCommitMetadata.get();\n    }\n    Option<Schema> schemaFromTableConfig = metaClient.getTableConfig().getTableCreateSchema();\n    if (schemaFromTableConfig.isPresent()) {\n      if (includeMetadataFields) {\n        return HoodieAvroUtils.addMetadataFields(schemaFromTableConfig.get());\n      } else {\n        return schemaFromTableConfig.get();\n      }\n    }\n    if (includeMetadataFields) {\n      return getTableAvroSchemaFromDataFile();\n    } else {\n      return HoodieAvroUtils.removeMetadataFields(getTableAvroSchemaFromDataFile());\n    }\n  }\n","date":"2021-06-08 14:24:32","endLine":183,"groupId":"255","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"getTableAvroSchema","params":"(booleanincludeMetadataFields)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-hudi-10-0.7/blobInfo/CC_OUT/blobs/20/e5a82c66f108dad1c87f092e4626a75273817f.src","preCode":"  public Schema getTableAvroSchema(boolean includeMetadataFields) throws Exception {\n    Option<Schema> schemaFromCommitMetadata = getTableSchemaFromCommitMetadata(includeMetadataFields);\n    if (schemaFromCommitMetadata.isPresent()) {\n      return schemaFromCommitMetadata.get();\n    }\n    Option<Schema> schemaFromTableConfig = metaClient.getTableConfig().getTableCreateSchema();\n    if (schemaFromTableConfig.isPresent()) {\n      if (includeMetadataFields) {\n        return HoodieAvroUtils.addMetadataFields(schemaFromTableConfig.get());\n      } else {\n        return schemaFromTableConfig.get();\n      }\n    }\n    if (includeMetadataFields) {\n      return getTableAvroSchemaFromDataFile();\n    } else {\n      return HoodieAvroUtils.removeMetadataFields(getTableAvroSchemaFromDataFile());\n    }\n  }\n","realPath":"hudi-common/src/main/java/org/apache/hudi/common/table/TableSchemaResolver.java","repoName":"hudi","snippetEndLine":0,"snippetStartLine":0,"startLine":165,"status":"B"},{"authorDate":"2021-06-08 14:24:32","commitOrder":1,"curCode":"  public Schema getTableAvroSchemaWithoutMetadataFields(HoodieInstant instant) throws Exception {\n    Option<Schema> schemaFromCommitMetadata = getTableSchemaFromCommitMetadata(instant, false);\n    if (schemaFromCommitMetadata.isPresent()) {\n      return schemaFromCommitMetadata.get();\n    }\n    Option<Schema> schemaFromTableConfig = metaClient.getTableConfig().getTableCreateSchema();\n    if (schemaFromTableConfig.isPresent()) {\n      return schemaFromTableConfig.get();\n    }\n    return HoodieAvroUtils.removeMetadataFields(getTableAvroSchemaFromDataFile());\n  }\n","date":"2021-06-08 14:24:32","endLine":224,"groupId":"255","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"getTableAvroSchemaWithoutMetadataFields","params":"(HoodieInstantinstant)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-hudi-10-0.7/blobInfo/CC_OUT/blobs/20/e5a82c66f108dad1c87f092e4626a75273817f.src","preCode":"  public Schema getTableAvroSchemaWithoutMetadataFields(HoodieInstant instant) throws Exception {\n    Option<Schema> schemaFromCommitMetadata = getTableSchemaFromCommitMetadata(instant, false);\n    if (schemaFromCommitMetadata.isPresent()) {\n      return schemaFromCommitMetadata.get();\n    }\n    Option<Schema> schemaFromTableConfig = metaClient.getTableConfig().getTableCreateSchema();\n    if (schemaFromTableConfig.isPresent()) {\n      return schemaFromTableConfig.get();\n    }\n    return HoodieAvroUtils.removeMetadataFields(getTableAvroSchemaFromDataFile());\n  }\n","realPath":"hudi-common/src/main/java/org/apache/hudi/common/table/TableSchemaResolver.java","repoName":"hudi","snippetEndLine":0,"snippetStartLine":0,"startLine":214,"status":"B"}],"commitId":"f760ec543ec9ea23b7d4c9f61c76a283bd737f27","commitMessage":"@@@[HUDI-1659] Basic Implement Of Spark Sql Support For Hoodie (#2645)\n\nMain functions:\nSupport create table for hoodie.\nSupport CTAS.\nSupport Insert for hoodie. Including dynamic partition and static partition insert.\nSupport MergeInto for hoodie.\nSupport DELETE\nSupport UPDATE\nBoth support spark2 & spark3 based on DataSourceV1.\n\nMain changes:\nAdd sql parser for spark2.\nAdd HoodieAnalysis for sql resolve and logical plan rewrite.\nAdd commands implementation for CREATE TABLE?INSERT?MERGE INTO & CTAS.\nIn order to push down the update&insert logical to the HoodieRecordPayload for MergeInto.  I make same change to the\nHoodieWriteHandler and other related classes.\n1?Add the inputSchema for parser the incoming record. This is because the inputSchema for MergeInto is different from writeSchema as there are some transforms in the update& insert expression.\n2?Add WRITE_SCHEMA to HoodieWriteConfig to pass the write schema for merge into.\n3?Pass properties to HoodieRecordPayload#getInsertValue to pass the insert expression and table schema.\n\n\nVerify this pull request\nAdd TestCreateTable for test create hoodie tables and CTAS.\nAdd TestInsertTable for test insert hoodie tables.\nAdd TestMergeIntoTable for test merge hoodie tables.\nAdd TestUpdateTable for test update hoodie tables.\nAdd TestDeleteTable for test delete hoodie tables.\nAdd TestSqlStatement for test supported ddl/dml currently.","date":"2021-06-08 14:24:32","modifiedFileCount":"28","status":"B","submitter":"pengzhiwei"},{"authorTime":"2021-06-08 14:24:32","codes":[{"authorDate":"2021-08-10 20:23:23","commitOrder":2,"curCode":"  public Schema getTableAvroSchema(boolean includeMetadataFields) throws Exception {\n    Option<Schema> schemaFromCommitMetadata = getTableSchemaFromCommitMetadata(includeMetadataFields);\n    if (schemaFromCommitMetadata.isPresent()) {\n      return schemaFromCommitMetadata.get();\n    }\n    Option<Schema> schemaFromTableConfig = metaClient.getTableConfig().getTableCreateSchema();\n    if (schemaFromTableConfig.isPresent()) {\n      if (includeMetadataFields) {\n        return HoodieAvroUtils.addMetadataFields(schemaFromTableConfig.get(), withOperationField);\n      } else {\n        return schemaFromTableConfig.get();\n      }\n    }\n    if (includeMetadataFields) {\n      return getTableAvroSchemaFromDataFile();\n    } else {\n      return HoodieAvroUtils.removeMetadataFields(getTableAvroSchemaFromDataFile());\n    }\n  }\n","date":"2021-08-10 20:23:23","endLine":189,"groupId":"101048","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"getTableAvroSchema","params":"(booleanincludeMetadataFields)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-hudi-10-0.7/blobInfo/CC_OUT/blobs/8d/16e91c28d819f79749a73a76354bf171177782.src","preCode":"  public Schema getTableAvroSchema(boolean includeMetadataFields) throws Exception {\n    Option<Schema> schemaFromCommitMetadata = getTableSchemaFromCommitMetadata(includeMetadataFields);\n    if (schemaFromCommitMetadata.isPresent()) {\n      return schemaFromCommitMetadata.get();\n    }\n    Option<Schema> schemaFromTableConfig = metaClient.getTableConfig().getTableCreateSchema();\n    if (schemaFromTableConfig.isPresent()) {\n      if (includeMetadataFields) {\n        return HoodieAvroUtils.addMetadataFields(schemaFromTableConfig.get());\n      } else {\n        return schemaFromTableConfig.get();\n      }\n    }\n    if (includeMetadataFields) {\n      return getTableAvroSchemaFromDataFile();\n    } else {\n      return HoodieAvroUtils.removeMetadataFields(getTableAvroSchemaFromDataFile());\n    }\n  }\n","realPath":"hudi-common/src/main/java/org/apache/hudi/common/table/TableSchemaResolver.java","repoName":"hudi","snippetEndLine":0,"snippetStartLine":0,"startLine":171,"status":"M"},{"authorDate":"2021-06-08 14:24:32","commitOrder":2,"curCode":"  public Schema getTableAvroSchemaWithoutMetadataFields(HoodieInstant instant) throws Exception {\n    Option<Schema> schemaFromCommitMetadata = getTableSchemaFromCommitMetadata(instant, false);\n    if (schemaFromCommitMetadata.isPresent()) {\n      return schemaFromCommitMetadata.get();\n    }\n    Option<Schema> schemaFromTableConfig = metaClient.getTableConfig().getTableCreateSchema();\n    if (schemaFromTableConfig.isPresent()) {\n      return schemaFromTableConfig.get();\n    }\n    return HoodieAvroUtils.removeMetadataFields(getTableAvroSchemaFromDataFile());\n  }\n","date":"2021-06-08 14:24:32","endLine":224,"groupId":"101048","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"getTableAvroSchemaWithoutMetadataFields","params":"(HoodieInstantinstant)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-hudi-10-0.7/blobInfo/CC_OUT/blobs/20/e5a82c66f108dad1c87f092e4626a75273817f.src","preCode":"  public Schema getTableAvroSchemaWithoutMetadataFields(HoodieInstant instant) throws Exception {\n    Option<Schema> schemaFromCommitMetadata = getTableSchemaFromCommitMetadata(instant, false);\n    if (schemaFromCommitMetadata.isPresent()) {\n      return schemaFromCommitMetadata.get();\n    }\n    Option<Schema> schemaFromTableConfig = metaClient.getTableConfig().getTableCreateSchema();\n    if (schemaFromTableConfig.isPresent()) {\n      return schemaFromTableConfig.get();\n    }\n    return HoodieAvroUtils.removeMetadataFields(getTableAvroSchemaFromDataFile());\n  }\n","realPath":"hudi-common/src/main/java/org/apache/hudi/common/table/TableSchemaResolver.java","repoName":"hudi","snippetEndLine":0,"snippetStartLine":0,"startLine":214,"status":"N"}],"commitId":"21db6d7a84d4a83ec98c110e92ff9c92d05dd530","commitMessage":"@@@[HUDI-1771] Propagate CDC format for hoodie (#3285)\n\n","date":"2021-08-10 20:23:23","modifiedFileCount":"47","status":"M","submitter":"swuferhong"}]
