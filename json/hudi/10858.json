[{"authorTime":"2020-10-02 05:25:29","codes":[{"authorDate":"2020-12-20 11:25:27","commitOrder":2,"curCode":"  protected HoodieMergeHandle getUpdateHandle(String partitionPath, String fileId, Iterator<HoodieRecord<T>> recordItr) {\n    if (table.requireSortedRecords()) {\n      return new HoodieSortedMergeHandle<>(config, instantTime, table, recordItr, partitionPath, fileId, taskContextSupplier);\n    } else {\n      return new HoodieMergeHandle<>(config, instantTime, table, recordItr, partitionPath, fileId, taskContextSupplier);\n    }\n  }\n","date":"2020-12-20 11:25:27","endLine":291,"groupId":"2654","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"getUpdateHandle","params":"(StringpartitionPath@StringfileId@Iterator<HoodieRecord<T>>recordItr)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-hudi-10-0.7/blobInfo/CC_OUT/blobs/17/b02e8c15259b31f7b792f54a80aaf838ff7e92.src","preCode":"  protected HoodieMergeHandle getUpdateHandle(String partitionPath, String fileId, Iterator<HoodieRecord<T>> recordItr) {\n    if (table.requireSortedRecords()) {\n      return new HoodieSortedMergeHandle<>(config, instantTime, table, recordItr, partitionPath, fileId, taskContextSupplier);\n    } else {\n      return new HoodieMergeHandle<>(config, instantTime, table, recordItr, partitionPath, fileId, taskContextSupplier);\n    }\n  }\n","realPath":"hudi-client/hudi-java-client/src/main/java/org/apache/hudi/table/action/commit/BaseJavaCommitActionExecutor.java","repoName":"hudi","snippetEndLine":0,"snippetStartLine":0,"startLine":285,"status":"B"},{"authorDate":"2020-10-02 05:25:29","commitOrder":2,"curCode":"  protected HoodieMergeHandle getUpdateHandle(String partitionPath, String fileId, Iterator<HoodieRecord<T>> recordItr) {\n    if (table.requireSortedRecords()) {\n      return new HoodieSortedMergeHandle<>(config, instantTime, (HoodieSparkTable) table, recordItr, partitionPath, fileId, taskContextSupplier);\n    } else {\n      return new HoodieMergeHandle<>(config, instantTime, table, recordItr, partitionPath, fileId, taskContextSupplier);\n    }\n  }\n","date":"2020-10-02 05:25:29","endLine":310,"groupId":"4868","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"getUpdateHandle","params":"(StringpartitionPath@StringfileId@Iterator<HoodieRecord<T>>recordItr)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-hudi-10-0.7/blobInfo/CC_OUT/blobs/36/cca8cd1403c5fe6ced6d0b42aa6684081520d7.src","preCode":"  protected HoodieMergeHandle getUpdateHandle(String partitionPath, String fileId, Iterator<HoodieRecord<T>> recordItr) {\n    if (table.requireSortedRecords()) {\n      return new HoodieSortedMergeHandle<>(config, instantTime, (HoodieSparkTable) table, recordItr, partitionPath, fileId, taskContextSupplier);\n    } else {\n      return new HoodieMergeHandle<>(config, instantTime, table, recordItr, partitionPath, fileId, taskContextSupplier);\n    }\n  }\n","realPath":"hudi-client/hudi-spark-client/src/main/java/org/apache/hudi/table/action/commit/BaseSparkCommitActionExecutor.java","repoName":"hudi","snippetEndLine":0,"snippetStartLine":0,"startLine":304,"status":"NB"}],"commitId":"e4e2fbc3bb2c4796c6813114dd1c37ffa5a1e03a","commitMessage":"@@@[HUDI-1419] Add base implementation for hudi java client (#2286)\n\n","date":"2020-12-20 11:25:27","modifiedFileCount":"2","status":"M","submitter":"Shen Hong"},{"authorTime":"2021-01-28 02:09:51","codes":[{"authorDate":"2020-12-20 11:25:27","commitOrder":3,"curCode":"  protected HoodieMergeHandle getUpdateHandle(String partitionPath, String fileId, Iterator<HoodieRecord<T>> recordItr) {\n    if (table.requireSortedRecords()) {\n      return new HoodieSortedMergeHandle<>(config, instantTime, table, recordItr, partitionPath, fileId, taskContextSupplier);\n    } else {\n      return new HoodieMergeHandle<>(config, instantTime, table, recordItr, partitionPath, fileId, taskContextSupplier);\n    }\n  }\n","date":"2020-12-20 11:25:27","endLine":291,"groupId":"2654","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"getUpdateHandle","params":"(StringpartitionPath@StringfileId@Iterator<HoodieRecord<T>>recordItr)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-hudi-10-0.7/blobInfo/CC_OUT/blobs/17/b02e8c15259b31f7b792f54a80aaf838ff7e92.src","preCode":"  protected HoodieMergeHandle getUpdateHandle(String partitionPath, String fileId, Iterator<HoodieRecord<T>> recordItr) {\n    if (table.requireSortedRecords()) {\n      return new HoodieSortedMergeHandle<>(config, instantTime, table, recordItr, partitionPath, fileId, taskContextSupplier);\n    } else {\n      return new HoodieMergeHandle<>(config, instantTime, table, recordItr, partitionPath, fileId, taskContextSupplier);\n    }\n  }\n","realPath":"hudi-client/hudi-java-client/src/main/java/org/apache/hudi/table/action/commit/BaseJavaCommitActionExecutor.java","repoName":"hudi","snippetEndLine":0,"snippetStartLine":0,"startLine":285,"status":"N"},{"authorDate":"2021-01-28 02:09:51","commitOrder":3,"curCode":"  protected HoodieMergeHandle getUpdateHandle(String partitionPath, String fileId, Iterator<HoodieRecord<T>> recordItr) {\n    if (table.requireSortedRecords()) {\n      return new HoodieSortedMergeHandle<>(config, instantTime, (HoodieSparkTable) table, recordItr, partitionPath, fileId, taskContextSupplier);\n    } else if (!WriteOperationType.isChangingRecords(operationType) && config.allowDuplicateInserts()) {\n      return new HoodieConcatHandle<>(config, instantTime, table, recordItr, partitionPath, fileId, taskContextSupplier);\n    } else {\n      return new HoodieMergeHandle<>(config, instantTime, table, recordItr, partitionPath, fileId, taskContextSupplier);\n    }\n  }\n","date":"2021-01-28 02:09:51","endLine":329,"groupId":"2654","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"getUpdateHandle","params":"(StringpartitionPath@StringfileId@Iterator<HoodieRecord<T>>recordItr)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-hudi-10-0.7/blobInfo/CC_OUT/blobs/5a/4d79c7e63e86112f278e277952219a1639c043.src","preCode":"  protected HoodieMergeHandle getUpdateHandle(String partitionPath, String fileId, Iterator<HoodieRecord<T>> recordItr) {\n    if (table.requireSortedRecords()) {\n      return new HoodieSortedMergeHandle<>(config, instantTime, (HoodieSparkTable) table, recordItr, partitionPath, fileId, taskContextSupplier);\n    } else {\n      return new HoodieMergeHandle<>(config, instantTime, table, recordItr, partitionPath, fileId, taskContextSupplier);\n    }\n  }\n","realPath":"hudi-client/hudi-spark-client/src/main/java/org/apache/hudi/table/action/commit/BaseSparkCommitActionExecutor.java","repoName":"hudi","snippetEndLine":0,"snippetStartLine":0,"startLine":321,"status":"M"}],"commitId":"2ee1c3fb0cb9740dc6d924f5e6e638aec19ed9b3","commitMessage":"@@@[HUDI-1234] Insert new records to data files without merging for \"Insert\" operation.  (#2111)\n\n* Added HoodieConcatHandle to skip merging for \"insert\" operation when the corresponding config is set\n\nCo-authored-by: Sivabalan Narayanan <sivabala@uber.com>","date":"2021-01-28 02:09:51","modifiedFileCount":"6","status":"M","submitter":"SteNicholas"},{"authorTime":"2021-07-27 05:21:04","codes":[{"authorDate":"2021-07-27 05:21:04","commitOrder":4,"curCode":"  protected HoodieMergeHandle getUpdateHandle(String partitionPath, String fileId, Iterator<HoodieRecord<T>> recordItr) {\n    if (table.requireSortedRecords()) {\n      return new HoodieSortedMergeHandle<>(config, instantTime, table, recordItr, partitionPath, fileId, taskContextSupplier, Option.empty());\n    } else {\n      return new HoodieMergeHandle<>(config, instantTime, table, recordItr, partitionPath, fileId, taskContextSupplier, Option.empty());\n    }\n  }\n","date":"2021-07-27 05:21:04","endLine":290,"groupId":"10858","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"getUpdateHandle","params":"(StringpartitionPath@StringfileId@Iterator<HoodieRecord<T>>recordItr)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-hudi-10-0.7/blobInfo/CC_OUT/blobs/e1/2bfafa2a7eda73d9d6020e90c3bea805d95af4.src","preCode":"  protected HoodieMergeHandle getUpdateHandle(String partitionPath, String fileId, Iterator<HoodieRecord<T>> recordItr) {\n    if (table.requireSortedRecords()) {\n      return new HoodieSortedMergeHandle<>(config, instantTime, table, recordItr, partitionPath, fileId, taskContextSupplier);\n    } else {\n      return new HoodieMergeHandle<>(config, instantTime, table, recordItr, partitionPath, fileId, taskContextSupplier);\n    }\n  }\n","realPath":"hudi-client/hudi-java-client/src/main/java/org/apache/hudi/table/action/commit/BaseJavaCommitActionExecutor.java","repoName":"hudi","snippetEndLine":0,"snippetStartLine":0,"startLine":284,"status":"M"},{"authorDate":"2021-07-27 05:21:04","commitOrder":4,"curCode":"  protected HoodieMergeHandle getUpdateHandle(String partitionPath, String fileId, Iterator<HoodieRecord<T>> recordItr) {\n    if (table.requireSortedRecords()) {\n      return new HoodieSortedMergeHandle<>(config, instantTime, (HoodieSparkTable) table, recordItr, partitionPath, fileId, taskContextSupplier,\n          keyGeneratorOpt);\n    } else if (!WriteOperationType.isChangingRecords(operationType) && config.allowDuplicateInserts()) {\n      return new HoodieConcatHandle<>(config, instantTime, table, recordItr, partitionPath, fileId, taskContextSupplier, keyGeneratorOpt);\n    } else {\n      return new HoodieMergeHandle<>(config, instantTime, table, recordItr, partitionPath, fileId, taskContextSupplier, keyGeneratorOpt);\n    }\n  }\n","date":"2021-07-27 05:21:04","endLine":354,"groupId":"10858","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"getUpdateHandle","params":"(StringpartitionPath@StringfileId@Iterator<HoodieRecord<T>>recordItr)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-hudi-10-0.7/blobInfo/CC_OUT/blobs/50/f3d68a881bb69fce5cb9d863f682a2f7bf2651.src","preCode":"  protected HoodieMergeHandle getUpdateHandle(String partitionPath, String fileId, Iterator<HoodieRecord<T>> recordItr) {\n    if (table.requireSortedRecords()) {\n      return new HoodieSortedMergeHandle<>(config, instantTime, (HoodieSparkTable) table, recordItr, partitionPath, fileId, taskContextSupplier);\n    } else if (!WriteOperationType.isChangingRecords(operationType) && config.allowDuplicateInserts()) {\n      return new HoodieConcatHandle<>(config, instantTime, table, recordItr, partitionPath, fileId, taskContextSupplier);\n    } else {\n      return new HoodieMergeHandle<>(config, instantTime, table, recordItr, partitionPath, fileId, taskContextSupplier);\n    }\n  }\n","realPath":"hudi-client/hudi-spark-client/src/main/java/org/apache/hudi/table/action/commit/BaseSparkCommitActionExecutor.java","repoName":"hudi","snippetEndLine":0,"snippetStartLine":0,"startLine":345,"status":"M"}],"commitId":"61148c1c43c9ff5ba04b6c174e9e2a006db9e7b3","commitMessage":"@@@[HUDI-2176.  2178.  2179] Adding virtual key support to COW table (#3306)\n\n","date":"2021-07-27 05:21:04","modifiedFileCount":"42","status":"M","submitter":"Sivabalan Narayanan"}]
