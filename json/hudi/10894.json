[{"authorTime":"2020-02-27 02:55:02","codes":[{"authorDate":"2020-02-27 02:55:02","commitOrder":1,"curCode":"  public void testGetLatestBaseFilesBeforeOrOn() {\n    Stream<HoodieBaseFile> actual;\n    Stream<HoodieBaseFile> expected = testBaseFileStream;\n    String partitionPath = \"/table2\";\n    String maxCommitTime = \"2010-10-10\";\n\n    when(primary.getLatestBaseFilesBeforeOrOn(partitionPath, maxCommitTime))\n        .thenReturn(testBaseFileStream);\n    actual = fsView.getLatestBaseFilesBeforeOrOn(partitionPath, maxCommitTime);\n    assertEquals(expected, actual);\n\n    resetMocks();\n    when(primary.getLatestBaseFilesBeforeOrOn(partitionPath, maxCommitTime))\n        .thenThrow(new RuntimeException());\n    when(secondary.getLatestBaseFilesBeforeOrOn(partitionPath, maxCommitTime))\n        .thenReturn(testBaseFileStream);\n    actual = fsView.getLatestBaseFilesBeforeOrOn(partitionPath, maxCommitTime);\n    assertEquals(expected, actual);\n\n    resetMocks();\n    when(secondary.getLatestBaseFilesBeforeOrOn(partitionPath, maxCommitTime))\n        .thenReturn(testBaseFileStream);\n    actual = fsView.getLatestBaseFilesBeforeOrOn(partitionPath, maxCommitTime);\n    assertEquals(expected, actual);\n\n    resetMocks();\n    when(secondary.getLatestBaseFilesBeforeOrOn(partitionPath, maxCommitTime))\n        .thenThrow(new RuntimeException());\n    thrown.expect(RuntimeException.class);\n    fsView.getLatestBaseFilesBeforeOrOn(partitionPath, maxCommitTime);\n  }\n","date":"2020-02-27 02:55:02","endLine":170,"groupId":"21","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testGetLatestBaseFilesBeforeOrOn","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-hudi-10-0.7/blobInfo/CC_OUT/blobs/79/e6a122d342a4155eb34099c0bf0a2677ca6a79.src","preCode":"  public void testGetLatestBaseFilesBeforeOrOn() {\n    Stream<HoodieBaseFile> actual;\n    Stream<HoodieBaseFile> expected = testBaseFileStream;\n    String partitionPath = \"/table2\";\n    String maxCommitTime = \"2010-10-10\";\n\n    when(primary.getLatestBaseFilesBeforeOrOn(partitionPath, maxCommitTime))\n        .thenReturn(testBaseFileStream);\n    actual = fsView.getLatestBaseFilesBeforeOrOn(partitionPath, maxCommitTime);\n    assertEquals(expected, actual);\n\n    resetMocks();\n    when(primary.getLatestBaseFilesBeforeOrOn(partitionPath, maxCommitTime))\n        .thenThrow(new RuntimeException());\n    when(secondary.getLatestBaseFilesBeforeOrOn(partitionPath, maxCommitTime))\n        .thenReturn(testBaseFileStream);\n    actual = fsView.getLatestBaseFilesBeforeOrOn(partitionPath, maxCommitTime);\n    assertEquals(expected, actual);\n\n    resetMocks();\n    when(secondary.getLatestBaseFilesBeforeOrOn(partitionPath, maxCommitTime))\n        .thenReturn(testBaseFileStream);\n    actual = fsView.getLatestBaseFilesBeforeOrOn(partitionPath, maxCommitTime);\n    assertEquals(expected, actual);\n\n    resetMocks();\n    when(secondary.getLatestBaseFilesBeforeOrOn(partitionPath, maxCommitTime))\n        .thenThrow(new RuntimeException());\n    thrown.expect(RuntimeException.class);\n    fsView.getLatestBaseFilesBeforeOrOn(partitionPath, maxCommitTime);\n  }\n","realPath":"hudi-common/src/test/java/org/apache/hudi/common/table/view/TestPriorityBasedFileSystemView.java","repoName":"hudi","snippetEndLine":0,"snippetStartLine":0,"startLine":140,"status":"B"},{"authorDate":"2020-02-27 02:55:02","commitOrder":1,"curCode":"  public void testGetLatestMergedFileSlicesBeforeOrOn() {\n    Stream<FileSlice> actual;\n    Stream<FileSlice> expected = testFileSliceStream;\n    String partitionPath = \"/table2\";\n    String maxInstantTime = \"2020-01-01\";\n\n    when(primary.getLatestMergedFileSlicesBeforeOrOn(partitionPath, maxInstantTime))\n        .thenReturn(testFileSliceStream);\n    actual = fsView.getLatestMergedFileSlicesBeforeOrOn(partitionPath, maxInstantTime);\n    assertEquals(expected, actual);\n\n    resetMocks();\n    when(primary.getLatestMergedFileSlicesBeforeOrOn(partitionPath, maxInstantTime))\n        .thenThrow(new RuntimeException());\n    when(secondary.getLatestMergedFileSlicesBeforeOrOn(partitionPath, maxInstantTime))\n        .thenReturn(testFileSliceStream);\n    actual = fsView.getLatestMergedFileSlicesBeforeOrOn(partitionPath, maxInstantTime);\n    assertEquals(expected, actual);\n\n    resetMocks();\n    when(secondary.getLatestMergedFileSlicesBeforeOrOn(partitionPath, maxInstantTime))\n        .thenReturn(testFileSliceStream);\n    actual = fsView.getLatestMergedFileSlicesBeforeOrOn(partitionPath, maxInstantTime);\n    assertEquals(expected, actual);\n\n    resetMocks();\n    when(secondary.getLatestMergedFileSlicesBeforeOrOn(partitionPath, maxInstantTime))\n        .thenThrow(new RuntimeException());\n    thrown.expect(RuntimeException.class);\n    fsView.getLatestMergedFileSlicesBeforeOrOn(partitionPath, maxInstantTime);\n  }\n","date":"2020-02-27 02:55:02","endLine":403,"groupId":"21","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testGetLatestMergedFileSlicesBeforeOrOn","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-hudi-10-0.7/blobInfo/CC_OUT/blobs/79/e6a122d342a4155eb34099c0bf0a2677ca6a79.src","preCode":"  public void testGetLatestMergedFileSlicesBeforeOrOn() {\n    Stream<FileSlice> actual;\n    Stream<FileSlice> expected = testFileSliceStream;\n    String partitionPath = \"/table2\";\n    String maxInstantTime = \"2020-01-01\";\n\n    when(primary.getLatestMergedFileSlicesBeforeOrOn(partitionPath, maxInstantTime))\n        .thenReturn(testFileSliceStream);\n    actual = fsView.getLatestMergedFileSlicesBeforeOrOn(partitionPath, maxInstantTime);\n    assertEquals(expected, actual);\n\n    resetMocks();\n    when(primary.getLatestMergedFileSlicesBeforeOrOn(partitionPath, maxInstantTime))\n        .thenThrow(new RuntimeException());\n    when(secondary.getLatestMergedFileSlicesBeforeOrOn(partitionPath, maxInstantTime))\n        .thenReturn(testFileSliceStream);\n    actual = fsView.getLatestMergedFileSlicesBeforeOrOn(partitionPath, maxInstantTime);\n    assertEquals(expected, actual);\n\n    resetMocks();\n    when(secondary.getLatestMergedFileSlicesBeforeOrOn(partitionPath, maxInstantTime))\n        .thenReturn(testFileSliceStream);\n    actual = fsView.getLatestMergedFileSlicesBeforeOrOn(partitionPath, maxInstantTime);\n    assertEquals(expected, actual);\n\n    resetMocks();\n    when(secondary.getLatestMergedFileSlicesBeforeOrOn(partitionPath, maxInstantTime))\n        .thenThrow(new RuntimeException());\n    thrown.expect(RuntimeException.class);\n    fsView.getLatestMergedFileSlicesBeforeOrOn(partitionPath, maxInstantTime);\n  }\n","realPath":"hudi-common/src/test/java/org/apache/hudi/common/table/view/TestPriorityBasedFileSystemView.java","repoName":"hudi","snippetEndLine":0,"snippetStartLine":0,"startLine":373,"status":"B"}],"commitId":"b7f35be452078f2941fb98a310b385c3afd971fc","commitMessage":"@@@[HUDI-618] Adding unit tests for PriorityBasedFileSystemView (#1345)\n\n[HUDI-618] Adding unit tests for PriorityBasedFileSystemView","date":"2020-02-27 02:55:02","modifiedFileCount":"1","status":"B","submitter":"Ramachandran M S"},{"authorTime":"2020-04-16 16:07:32","codes":[{"authorDate":"2020-04-16 16:07:32","commitOrder":2,"curCode":"  public void testGetLatestBaseFilesBeforeOrOn() {\n    Stream<HoodieBaseFile> actual;\n    Stream<HoodieBaseFile> expected = testBaseFileStream;\n    String partitionPath = \"/table2\";\n    String maxCommitTime = \"2010-10-10\";\n\n    when(primary.getLatestBaseFilesBeforeOrOn(partitionPath, maxCommitTime))\n        .thenReturn(testBaseFileStream);\n    actual = fsView.getLatestBaseFilesBeforeOrOn(partitionPath, maxCommitTime);\n    assertEquals(expected, actual);\n\n    resetMocks();\n    when(primary.getLatestBaseFilesBeforeOrOn(partitionPath, maxCommitTime))\n        .thenThrow(new RuntimeException());\n    when(secondary.getLatestBaseFilesBeforeOrOn(partitionPath, maxCommitTime))\n        .thenReturn(testBaseFileStream);\n    actual = fsView.getLatestBaseFilesBeforeOrOn(partitionPath, maxCommitTime);\n    assertEquals(expected, actual);\n\n    resetMocks();\n    when(secondary.getLatestBaseFilesBeforeOrOn(partitionPath, maxCommitTime))\n        .thenReturn(testBaseFileStream);\n    actual = fsView.getLatestBaseFilesBeforeOrOn(partitionPath, maxCommitTime);\n    assertEquals(expected, actual);\n\n    resetMocks();\n    when(secondary.getLatestBaseFilesBeforeOrOn(partitionPath, maxCommitTime))\n        .thenThrow(new RuntimeException());\n    assertThrows(RuntimeException.class, () -> {\n      fsView.getLatestBaseFilesBeforeOrOn(partitionPath, maxCommitTime);\n    });\n  }\n","date":"2020-04-16 16:07:32","endLine":163,"groupId":"10894","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testGetLatestBaseFilesBeforeOrOn","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-hudi-10-0.7/blobInfo/CC_OUT/blobs/e5/9860e30e7f1ded3a3c1265bf1e7fd3dd9bfedc.src","preCode":"  public void testGetLatestBaseFilesBeforeOrOn() {\n    Stream<HoodieBaseFile> actual;\n    Stream<HoodieBaseFile> expected = testBaseFileStream;\n    String partitionPath = \"/table2\";\n    String maxCommitTime = \"2010-10-10\";\n\n    when(primary.getLatestBaseFilesBeforeOrOn(partitionPath, maxCommitTime))\n        .thenReturn(testBaseFileStream);\n    actual = fsView.getLatestBaseFilesBeforeOrOn(partitionPath, maxCommitTime);\n    assertEquals(expected, actual);\n\n    resetMocks();\n    when(primary.getLatestBaseFilesBeforeOrOn(partitionPath, maxCommitTime))\n        .thenThrow(new RuntimeException());\n    when(secondary.getLatestBaseFilesBeforeOrOn(partitionPath, maxCommitTime))\n        .thenReturn(testBaseFileStream);\n    actual = fsView.getLatestBaseFilesBeforeOrOn(partitionPath, maxCommitTime);\n    assertEquals(expected, actual);\n\n    resetMocks();\n    when(secondary.getLatestBaseFilesBeforeOrOn(partitionPath, maxCommitTime))\n        .thenReturn(testBaseFileStream);\n    actual = fsView.getLatestBaseFilesBeforeOrOn(partitionPath, maxCommitTime);\n    assertEquals(expected, actual);\n\n    resetMocks();\n    when(secondary.getLatestBaseFilesBeforeOrOn(partitionPath, maxCommitTime))\n        .thenThrow(new RuntimeException());\n    thrown.expect(RuntimeException.class);\n    fsView.getLatestBaseFilesBeforeOrOn(partitionPath, maxCommitTime);\n  }\n","realPath":"hudi-common/src/test/java/org/apache/hudi/common/table/view/TestPriorityBasedFileSystemView.java","repoName":"hudi","snippetEndLine":0,"snippetStartLine":0,"startLine":132,"status":"M"},{"authorDate":"2020-04-16 16:07:32","commitOrder":2,"curCode":"  public void testGetLatestMergedFileSlicesBeforeOrOn() {\n    Stream<FileSlice> actual;\n    Stream<FileSlice> expected = testFileSliceStream;\n    String partitionPath = \"/table2\";\n    String maxInstantTime = \"2020-01-01\";\n\n    when(primary.getLatestMergedFileSlicesBeforeOrOn(partitionPath, maxInstantTime))\n        .thenReturn(testFileSliceStream);\n    actual = fsView.getLatestMergedFileSlicesBeforeOrOn(partitionPath, maxInstantTime);\n    assertEquals(expected, actual);\n\n    resetMocks();\n    when(primary.getLatestMergedFileSlicesBeforeOrOn(partitionPath, maxInstantTime))\n        .thenThrow(new RuntimeException());\n    when(secondary.getLatestMergedFileSlicesBeforeOrOn(partitionPath, maxInstantTime))\n        .thenReturn(testFileSliceStream);\n    actual = fsView.getLatestMergedFileSlicesBeforeOrOn(partitionPath, maxInstantTime);\n    assertEquals(expected, actual);\n\n    resetMocks();\n    when(secondary.getLatestMergedFileSlicesBeforeOrOn(partitionPath, maxInstantTime))\n        .thenReturn(testFileSliceStream);\n    actual = fsView.getLatestMergedFileSlicesBeforeOrOn(partitionPath, maxInstantTime);\n    assertEquals(expected, actual);\n\n    resetMocks();\n    when(secondary.getLatestMergedFileSlicesBeforeOrOn(partitionPath, maxInstantTime))\n        .thenThrow(new RuntimeException());\n    assertThrows(RuntimeException.class, () -> {\n      fsView.getLatestMergedFileSlicesBeforeOrOn(partitionPath, maxInstantTime);\n    });\n  }\n","date":"2020-04-16 16:07:32","endLine":404,"groupId":"10894","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testGetLatestMergedFileSlicesBeforeOrOn","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-hudi-10-0.7/blobInfo/CC_OUT/blobs/e5/9860e30e7f1ded3a3c1265bf1e7fd3dd9bfedc.src","preCode":"  public void testGetLatestMergedFileSlicesBeforeOrOn() {\n    Stream<FileSlice> actual;\n    Stream<FileSlice> expected = testFileSliceStream;\n    String partitionPath = \"/table2\";\n    String maxInstantTime = \"2020-01-01\";\n\n    when(primary.getLatestMergedFileSlicesBeforeOrOn(partitionPath, maxInstantTime))\n        .thenReturn(testFileSliceStream);\n    actual = fsView.getLatestMergedFileSlicesBeforeOrOn(partitionPath, maxInstantTime);\n    assertEquals(expected, actual);\n\n    resetMocks();\n    when(primary.getLatestMergedFileSlicesBeforeOrOn(partitionPath, maxInstantTime))\n        .thenThrow(new RuntimeException());\n    when(secondary.getLatestMergedFileSlicesBeforeOrOn(partitionPath, maxInstantTime))\n        .thenReturn(testFileSliceStream);\n    actual = fsView.getLatestMergedFileSlicesBeforeOrOn(partitionPath, maxInstantTime);\n    assertEquals(expected, actual);\n\n    resetMocks();\n    when(secondary.getLatestMergedFileSlicesBeforeOrOn(partitionPath, maxInstantTime))\n        .thenReturn(testFileSliceStream);\n    actual = fsView.getLatestMergedFileSlicesBeforeOrOn(partitionPath, maxInstantTime);\n    assertEquals(expected, actual);\n\n    resetMocks();\n    when(secondary.getLatestMergedFileSlicesBeforeOrOn(partitionPath, maxInstantTime))\n        .thenThrow(new RuntimeException());\n    thrown.expect(RuntimeException.class);\n    fsView.getLatestMergedFileSlicesBeforeOrOn(partitionPath, maxInstantTime);\n  }\n","realPath":"hudi-common/src/test/java/org/apache/hudi/common/table/view/TestPriorityBasedFileSystemView.java","repoName":"hudi","snippetEndLine":0,"snippetStartLine":0,"startLine":373,"status":"M"}],"commitId":"acdc4a8d004394590f9e5ffcc703ea23624e66d9","commitMessage":"@@@[HUDI-798] Migrate to Mockito Jupiter for JUnit 5 (#1521)\n\n","date":"2020-04-16 16:07:32","modifiedFileCount":"6","status":"M","submitter":"Raymond Xu"}]
