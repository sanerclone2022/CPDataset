[{"authorTime":"2021-03-15 16:02:05","codes":[{"authorDate":"2021-03-15 16:02:05","commitOrder":1,"curCode":"  void testRead(HoodieTableType tableType) throws Exception {\n    beforeEach(tableType);\n\n    TestData.writeData(TestData.DATA_SET_INSERT, conf);\n\n    InputFormat<RowData, ?> inputFormat = this.tableSource.getInputFormat();\n\n    List<RowData> result = readData(inputFormat);\n\n    String actual = TestData.rowDataToString(result);\n    String expected = TestData.rowDataToString(TestData.DATA_SET_INSERT);\n    assertThat(actual, is(expected));\n\n    \r\n    TestData.writeData(TestData.DATA_SET_UPDATE_INSERT, conf);\n\n    \r\n    this.tableSource.reloadActiveTimeline();\n    inputFormat = this.tableSource.getInputFormat();\n\n    result = readData(inputFormat);\n\n    actual = TestData.rowDataToString(result);\n    expected = \"[id1,Danny,24,1970-01-01T00:00:00.001,par1, \"\n        + \"id10,Ella,38,1970-01-01T00:00:00.007,par4, \"\n        + \"id11,Phoebe,52,1970-01-01T00:00:00.008,par4, \"\n        + \"id2,Stephen,34,1970-01-01T00:00:00.002,par1, \"\n        + \"id3,Julian,54,1970-01-01T00:00:00.003,par2, \"\n        + \"id4,Fabian,32,1970-01-01T00:00:00.004,par2, \"\n        + \"id5,Sophia,18,1970-01-01T00:00:00.005,par3, \"\n        + \"id6,Emma,20,1970-01-01T00:00:00.006,par3, \"\n        + \"id7,Bob,44,1970-01-01T00:00:00.007,par4, \"\n        + \"id8,Han,56,1970-01-01T00:00:00.008,par4, \"\n        + \"id9,Jane,19,1970-01-01T00:00:00.006,par3]\";\n    assertThat(actual, is(expected));\n  }\n","date":"2021-03-15 16:02:05","endLine":111,"groupId":"5635","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testRead","params":"(HoodieTableTypetableType)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-hudi-10-0.7/blobInfo/CC_OUT/blobs/c5/08a7fb58a243809ca5ef796b50e0a8fbcd79dc.src","preCode":"  void testRead(HoodieTableType tableType) throws Exception {\n    beforeEach(tableType);\n\n    TestData.writeData(TestData.DATA_SET_INSERT, conf);\n\n    InputFormat<RowData, ?> inputFormat = this.tableSource.getInputFormat();\n\n    List<RowData> result = readData(inputFormat);\n\n    String actual = TestData.rowDataToString(result);\n    String expected = TestData.rowDataToString(TestData.DATA_SET_INSERT);\n    assertThat(actual, is(expected));\n\n    \r\n    TestData.writeData(TestData.DATA_SET_UPDATE_INSERT, conf);\n\n    \r\n    this.tableSource.reloadActiveTimeline();\n    inputFormat = this.tableSource.getInputFormat();\n\n    result = readData(inputFormat);\n\n    actual = TestData.rowDataToString(result);\n    expected = \"[id1,Danny,24,1970-01-01T00:00:00.001,par1, \"\n        + \"id10,Ella,38,1970-01-01T00:00:00.007,par4, \"\n        + \"id11,Phoebe,52,1970-01-01T00:00:00.008,par4, \"\n        + \"id2,Stephen,34,1970-01-01T00:00:00.002,par1, \"\n        + \"id3,Julian,54,1970-01-01T00:00:00.003,par2, \"\n        + \"id4,Fabian,32,1970-01-01T00:00:00.004,par2, \"\n        + \"id5,Sophia,18,1970-01-01T00:00:00.005,par3, \"\n        + \"id6,Emma,20,1970-01-01T00:00:00.006,par3, \"\n        + \"id7,Bob,44,1970-01-01T00:00:00.007,par4, \"\n        + \"id8,Han,56,1970-01-01T00:00:00.008,par4, \"\n        + \"id9,Jane,19,1970-01-01T00:00:00.006,par3]\";\n    assertThat(actual, is(expected));\n  }\n","realPath":"hudi-flink/src/test/java/org/apache/hudi/table/format/TestInputFormat.java","repoName":"hudi","snippetEndLine":0,"snippetStartLine":0,"startLine":76,"status":"B"},{"authorDate":"2021-03-15 16:02:05","commitOrder":1,"curCode":"  void testReadBaseAndLogFiles() throws Exception {\n    beforeEach(HoodieTableType.MERGE_ON_READ);\n\n    \r\n    conf.setBoolean(FlinkOptions.COMPACTION_ASYNC_ENABLED, true);\n    TestData.writeData(TestData.DATA_SET_INSERT, conf);\n\n    InputFormat<RowData, ?> inputFormat = this.tableSource.getInputFormat();\n\n    List<RowData> result = readData(inputFormat);\n\n    String actual = TestData.rowDataToString(result);\n    String expected = TestData.rowDataToString(TestData.DATA_SET_INSERT);\n    assertThat(actual, is(expected));\n\n    \r\n    conf.setBoolean(FlinkOptions.COMPACTION_ASYNC_ENABLED, false);\n    TestData.writeData(TestData.DATA_SET_UPDATE_INSERT, conf);\n\n    \r\n    this.tableSource.reloadActiveTimeline();\n    inputFormat = this.tableSource.getInputFormat();\n\n    result = readData(inputFormat);\n\n    actual = TestData.rowDataToString(result);\n    expected = \"[id1,Danny,24,1970-01-01T00:00:00.001,par1, \"\n        + \"id10,Ella,38,1970-01-01T00:00:00.007,par4, \"\n        + \"id11,Phoebe,52,1970-01-01T00:00:00.008,par4, \"\n        + \"id2,Stephen,34,1970-01-01T00:00:00.002,par1, \"\n        + \"id3,Julian,54,1970-01-01T00:00:00.003,par2, \"\n        + \"id4,Fabian,32,1970-01-01T00:00:00.004,par2, \"\n        + \"id5,Sophia,18,1970-01-01T00:00:00.005,par3, \"\n        + \"id6,Emma,20,1970-01-01T00:00:00.006,par3, \"\n        + \"id7,Bob,44,1970-01-01T00:00:00.007,par4, \"\n        + \"id8,Han,56,1970-01-01T00:00:00.008,par4, \"\n        + \"id9,Jane,19,1970-01-01T00:00:00.006,par3]\";\n    assertThat(actual, is(expected));\n  }\n","date":"2021-03-15 16:02:05","endLine":152,"groupId":"2164","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testReadBaseAndLogFiles","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-hudi-10-0.7/blobInfo/CC_OUT/blobs/c5/08a7fb58a243809ca5ef796b50e0a8fbcd79dc.src","preCode":"  void testReadBaseAndLogFiles() throws Exception {\n    beforeEach(HoodieTableType.MERGE_ON_READ);\n\n    \r\n    conf.setBoolean(FlinkOptions.COMPACTION_ASYNC_ENABLED, true);\n    TestData.writeData(TestData.DATA_SET_INSERT, conf);\n\n    InputFormat<RowData, ?> inputFormat = this.tableSource.getInputFormat();\n\n    List<RowData> result = readData(inputFormat);\n\n    String actual = TestData.rowDataToString(result);\n    String expected = TestData.rowDataToString(TestData.DATA_SET_INSERT);\n    assertThat(actual, is(expected));\n\n    \r\n    conf.setBoolean(FlinkOptions.COMPACTION_ASYNC_ENABLED, false);\n    TestData.writeData(TestData.DATA_SET_UPDATE_INSERT, conf);\n\n    \r\n    this.tableSource.reloadActiveTimeline();\n    inputFormat = this.tableSource.getInputFormat();\n\n    result = readData(inputFormat);\n\n    actual = TestData.rowDataToString(result);\n    expected = \"[id1,Danny,24,1970-01-01T00:00:00.001,par1, \"\n        + \"id10,Ella,38,1970-01-01T00:00:00.007,par4, \"\n        + \"id11,Phoebe,52,1970-01-01T00:00:00.008,par4, \"\n        + \"id2,Stephen,34,1970-01-01T00:00:00.002,par1, \"\n        + \"id3,Julian,54,1970-01-01T00:00:00.003,par2, \"\n        + \"id4,Fabian,32,1970-01-01T00:00:00.004,par2, \"\n        + \"id5,Sophia,18,1970-01-01T00:00:00.005,par3, \"\n        + \"id6,Emma,20,1970-01-01T00:00:00.006,par3, \"\n        + \"id7,Bob,44,1970-01-01T00:00:00.007,par4, \"\n        + \"id8,Han,56,1970-01-01T00:00:00.008,par4, \"\n        + \"id9,Jane,19,1970-01-01T00:00:00.006,par3]\";\n    assertThat(actual, is(expected));\n  }\n","realPath":"hudi-flink/src/test/java/org/apache/hudi/table/format/TestInputFormat.java","repoName":"hudi","snippetEndLine":0,"snippetStartLine":0,"startLine":114,"status":"B"}],"commitId":"fc6c5f4285098d18cd7f6e81785f59e68a3b6862","commitMessage":"@@@[HUDI-1684] Tweak hudi-flink-bundle module pom and reorganize the pacakges for hudi-flink module (#2669)\n\n* Add required dependencies for hudi-flink-bundle module\n* Some packages reorganization of hudi-flink module","date":"2021-03-15 16:02:05","modifiedFileCount":"12","status":"B","submitter":"Danny Chan"},{"authorTime":"2021-04-20 21:27:09","codes":[{"authorDate":"2021-03-15 16:02:05","commitOrder":2,"curCode":"  void testRead(HoodieTableType tableType) throws Exception {\n    beforeEach(tableType);\n\n    TestData.writeData(TestData.DATA_SET_INSERT, conf);\n\n    InputFormat<RowData, ?> inputFormat = this.tableSource.getInputFormat();\n\n    List<RowData> result = readData(inputFormat);\n\n    String actual = TestData.rowDataToString(result);\n    String expected = TestData.rowDataToString(TestData.DATA_SET_INSERT);\n    assertThat(actual, is(expected));\n\n    \r\n    TestData.writeData(TestData.DATA_SET_UPDATE_INSERT, conf);\n\n    \r\n    this.tableSource.reloadActiveTimeline();\n    inputFormat = this.tableSource.getInputFormat();\n\n    result = readData(inputFormat);\n\n    actual = TestData.rowDataToString(result);\n    expected = \"[id1,Danny,24,1970-01-01T00:00:00.001,par1, \"\n        + \"id10,Ella,38,1970-01-01T00:00:00.007,par4, \"\n        + \"id11,Phoebe,52,1970-01-01T00:00:00.008,par4, \"\n        + \"id2,Stephen,34,1970-01-01T00:00:00.002,par1, \"\n        + \"id3,Julian,54,1970-01-01T00:00:00.003,par2, \"\n        + \"id4,Fabian,32,1970-01-01T00:00:00.004,par2, \"\n        + \"id5,Sophia,18,1970-01-01T00:00:00.005,par3, \"\n        + \"id6,Emma,20,1970-01-01T00:00:00.006,par3, \"\n        + \"id7,Bob,44,1970-01-01T00:00:00.007,par4, \"\n        + \"id8,Han,56,1970-01-01T00:00:00.008,par4, \"\n        + \"id9,Jane,19,1970-01-01T00:00:00.006,par3]\";\n    assertThat(actual, is(expected));\n  }\n","date":"2021-03-15 16:02:05","endLine":111,"groupId":"5635","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testRead","params":"(HoodieTableTypetableType)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-hudi-10-0.7/blobInfo/CC_OUT/blobs/c5/08a7fb58a243809ca5ef796b50e0a8fbcd79dc.src","preCode":"  void testRead(HoodieTableType tableType) throws Exception {\n    beforeEach(tableType);\n\n    TestData.writeData(TestData.DATA_SET_INSERT, conf);\n\n    InputFormat<RowData, ?> inputFormat = this.tableSource.getInputFormat();\n\n    List<RowData> result = readData(inputFormat);\n\n    String actual = TestData.rowDataToString(result);\n    String expected = TestData.rowDataToString(TestData.DATA_SET_INSERT);\n    assertThat(actual, is(expected));\n\n    \r\n    TestData.writeData(TestData.DATA_SET_UPDATE_INSERT, conf);\n\n    \r\n    this.tableSource.reloadActiveTimeline();\n    inputFormat = this.tableSource.getInputFormat();\n\n    result = readData(inputFormat);\n\n    actual = TestData.rowDataToString(result);\n    expected = \"[id1,Danny,24,1970-01-01T00:00:00.001,par1, \"\n        + \"id10,Ella,38,1970-01-01T00:00:00.007,par4, \"\n        + \"id11,Phoebe,52,1970-01-01T00:00:00.008,par4, \"\n        + \"id2,Stephen,34,1970-01-01T00:00:00.002,par1, \"\n        + \"id3,Julian,54,1970-01-01T00:00:00.003,par2, \"\n        + \"id4,Fabian,32,1970-01-01T00:00:00.004,par2, \"\n        + \"id5,Sophia,18,1970-01-01T00:00:00.005,par3, \"\n        + \"id6,Emma,20,1970-01-01T00:00:00.006,par3, \"\n        + \"id7,Bob,44,1970-01-01T00:00:00.007,par4, \"\n        + \"id8,Han,56,1970-01-01T00:00:00.008,par4, \"\n        + \"id9,Jane,19,1970-01-01T00:00:00.006,par3]\";\n    assertThat(actual, is(expected));\n  }\n","realPath":"hudi-flink/src/test/java/org/apache/hudi/table/format/TestInputFormat.java","repoName":"hudi","snippetEndLine":0,"snippetStartLine":0,"startLine":76,"status":"N"},{"authorDate":"2021-04-20 21:27:09","commitOrder":2,"curCode":"  void testReadBaseAndLogFiles() throws Exception {\n    beforeEach(HoodieTableType.MERGE_ON_READ);\n\n    \r\n    conf.setBoolean(FlinkOptions.COMPACTION_ASYNC_ENABLED, true);\n    conf.setInteger(FlinkOptions.COMPACTION_DELTA_COMMITS, 1);\n    TestData.writeData(TestData.DATA_SET_INSERT, conf);\n\n    InputFormat<RowData, ?> inputFormat = this.tableSource.getInputFormat();\n\n    List<RowData> result = readData(inputFormat);\n\n    String actual = TestData.rowDataToString(result);\n    String expected = TestData.rowDataToString(TestData.DATA_SET_INSERT);\n    assertThat(actual, is(expected));\n\n    \r\n    conf.setBoolean(FlinkOptions.COMPACTION_ASYNC_ENABLED, false);\n    TestData.writeData(TestData.DATA_SET_UPDATE_INSERT, conf);\n\n    \r\n    this.tableSource.reloadActiveTimeline();\n    inputFormat = this.tableSource.getInputFormat();\n\n    result = readData(inputFormat);\n\n    actual = TestData.rowDataToString(result);\n    expected = \"[id1,Danny,24,1970-01-01T00:00:00.001,par1, \"\n        + \"id10,Ella,38,1970-01-01T00:00:00.007,par4, \"\n        + \"id11,Phoebe,52,1970-01-01T00:00:00.008,par4, \"\n        + \"id2,Stephen,34,1970-01-01T00:00:00.002,par1, \"\n        + \"id3,Julian,54,1970-01-01T00:00:00.003,par2, \"\n        + \"id4,Fabian,32,1970-01-01T00:00:00.004,par2, \"\n        + \"id5,Sophia,18,1970-01-01T00:00:00.005,par3, \"\n        + \"id6,Emma,20,1970-01-01T00:00:00.006,par3, \"\n        + \"id7,Bob,44,1970-01-01T00:00:00.007,par4, \"\n        + \"id8,Han,56,1970-01-01T00:00:00.008,par4, \"\n        + \"id9,Jane,19,1970-01-01T00:00:00.006,par3]\";\n    assertThat(actual, is(expected));\n  }\n","date":"2021-04-20 21:27:09","endLine":155,"groupId":"2164","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testReadBaseAndLogFiles","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-hudi-10-0.7/blobInfo/CC_OUT/blobs/fc/fa7cf5f23efe999762a4ed4854727a7fbd0980.src","preCode":"  void testReadBaseAndLogFiles() throws Exception {\n    beforeEach(HoodieTableType.MERGE_ON_READ);\n\n    \r\n    conf.setBoolean(FlinkOptions.COMPACTION_ASYNC_ENABLED, true);\n    TestData.writeData(TestData.DATA_SET_INSERT, conf);\n\n    InputFormat<RowData, ?> inputFormat = this.tableSource.getInputFormat();\n\n    List<RowData> result = readData(inputFormat);\n\n    String actual = TestData.rowDataToString(result);\n    String expected = TestData.rowDataToString(TestData.DATA_SET_INSERT);\n    assertThat(actual, is(expected));\n\n    \r\n    conf.setBoolean(FlinkOptions.COMPACTION_ASYNC_ENABLED, false);\n    TestData.writeData(TestData.DATA_SET_UPDATE_INSERT, conf);\n\n    \r\n    this.tableSource.reloadActiveTimeline();\n    inputFormat = this.tableSource.getInputFormat();\n\n    result = readData(inputFormat);\n\n    actual = TestData.rowDataToString(result);\n    expected = \"[id1,Danny,24,1970-01-01T00:00:00.001,par1, \"\n        + \"id10,Ella,38,1970-01-01T00:00:00.007,par4, \"\n        + \"id11,Phoebe,52,1970-01-01T00:00:00.008,par4, \"\n        + \"id2,Stephen,34,1970-01-01T00:00:00.002,par1, \"\n        + \"id3,Julian,54,1970-01-01T00:00:00.003,par2, \"\n        + \"id4,Fabian,32,1970-01-01T00:00:00.004,par2, \"\n        + \"id5,Sophia,18,1970-01-01T00:00:00.005,par3, \"\n        + \"id6,Emma,20,1970-01-01T00:00:00.006,par3, \"\n        + \"id7,Bob,44,1970-01-01T00:00:00.007,par4, \"\n        + \"id8,Han,56,1970-01-01T00:00:00.008,par4, \"\n        + \"id9,Jane,19,1970-01-01T00:00:00.006,par3]\";\n    assertThat(actual, is(expected));\n  }\n","realPath":"hudi-flink/src/test/java/org/apache/hudi/table/format/TestInputFormat.java","repoName":"hudi","snippetEndLine":0,"snippetStartLine":0,"startLine":116,"status":"M"}],"commitId":"d6d52c60636ae6a0c16469fa6761d0080fddf72f","commitMessage":"@@@[HUDI-1809] Flink merge on read input split uses wrong base file path for default merge type (#2846)\n\n","date":"2021-04-20 21:27:09","modifiedFileCount":"2","status":"M","submitter":"Danny Chan"},{"authorTime":"2021-07-02 16:29:22","codes":[{"authorDate":"2021-07-02 16:29:22","commitOrder":3,"curCode":"  void testRead(HoodieTableType tableType) throws Exception {\n    beforeEach(tableType);\n\n    TestData.writeData(TestData.DATA_SET_INSERT, conf);\n\n    InputFormat<RowData, ?> inputFormat = this.tableSource.getInputFormat();\n\n    List<RowData> result = readData(inputFormat);\n\n    String actual = TestData.rowDataToString(result);\n    String expected = TestData.rowDataToString(TestData.DATA_SET_INSERT);\n    assertThat(actual, is(expected));\n\n    \r\n    TestData.writeData(TestData.DATA_SET_UPDATE_INSERT, conf);\n\n    \r\n    this.tableSource.reset();\n    inputFormat = this.tableSource.getInputFormat();\n\n    result = readData(inputFormat);\n\n    actual = TestData.rowDataToString(result);\n    expected = \"[id1,Danny,24,1970-01-01T00:00:00.001,par1, \"\n        + \"id10,Ella,38,1970-01-01T00:00:00.007,par4, \"\n        + \"id11,Phoebe,52,1970-01-01T00:00:00.008,par4, \"\n        + \"id2,Stephen,34,1970-01-01T00:00:00.002,par1, \"\n        + \"id3,Julian,54,1970-01-01T00:00:00.003,par2, \"\n        + \"id4,Fabian,32,1970-01-01T00:00:00.004,par2, \"\n        + \"id5,Sophia,18,1970-01-01T00:00:00.005,par3, \"\n        + \"id6,Emma,20,1970-01-01T00:00:00.006,par3, \"\n        + \"id7,Bob,44,1970-01-01T00:00:00.007,par4, \"\n        + \"id8,Han,56,1970-01-01T00:00:00.008,par4, \"\n        + \"id9,Jane,19,1970-01-01T00:00:00.006,par3]\";\n    assertThat(actual, is(expected));\n  }\n","date":"2021-07-02 16:29:22","endLine":113,"groupId":"5635","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testRead","params":"(HoodieTableTypetableType)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-hudi-10-0.7/blobInfo/CC_OUT/blobs/c8/885b043c1891ef6e24e053560f4e81fc23b1b8.src","preCode":"  void testRead(HoodieTableType tableType) throws Exception {\n    beforeEach(tableType);\n\n    TestData.writeData(TestData.DATA_SET_INSERT, conf);\n\n    InputFormat<RowData, ?> inputFormat = this.tableSource.getInputFormat();\n\n    List<RowData> result = readData(inputFormat);\n\n    String actual = TestData.rowDataToString(result);\n    String expected = TestData.rowDataToString(TestData.DATA_SET_INSERT);\n    assertThat(actual, is(expected));\n\n    \r\n    TestData.writeData(TestData.DATA_SET_UPDATE_INSERT, conf);\n\n    \r\n    this.tableSource.reloadActiveTimeline();\n    inputFormat = this.tableSource.getInputFormat();\n\n    result = readData(inputFormat);\n\n    actual = TestData.rowDataToString(result);\n    expected = \"[id1,Danny,24,1970-01-01T00:00:00.001,par1, \"\n        + \"id10,Ella,38,1970-01-01T00:00:00.007,par4, \"\n        + \"id11,Phoebe,52,1970-01-01T00:00:00.008,par4, \"\n        + \"id2,Stephen,34,1970-01-01T00:00:00.002,par1, \"\n        + \"id3,Julian,54,1970-01-01T00:00:00.003,par2, \"\n        + \"id4,Fabian,32,1970-01-01T00:00:00.004,par2, \"\n        + \"id5,Sophia,18,1970-01-01T00:00:00.005,par3, \"\n        + \"id6,Emma,20,1970-01-01T00:00:00.006,par3, \"\n        + \"id7,Bob,44,1970-01-01T00:00:00.007,par4, \"\n        + \"id8,Han,56,1970-01-01T00:00:00.008,par4, \"\n        + \"id9,Jane,19,1970-01-01T00:00:00.006,par3]\";\n    assertThat(actual, is(expected));\n  }\n","realPath":"hudi-flink/src/test/java/org/apache/hudi/table/format/TestInputFormat.java","repoName":"hudi","snippetEndLine":0,"snippetStartLine":0,"startLine":78,"status":"M"},{"authorDate":"2021-07-02 16:29:22","commitOrder":3,"curCode":"  void testReadBaseAndLogFiles() throws Exception {\n    beforeEach(HoodieTableType.MERGE_ON_READ);\n\n    \r\n    conf.setBoolean(FlinkOptions.COMPACTION_ASYNC_ENABLED, true);\n    conf.setInteger(FlinkOptions.COMPACTION_DELTA_COMMITS, 1);\n    TestData.writeData(TestData.DATA_SET_INSERT, conf);\n\n    InputFormat<RowData, ?> inputFormat = this.tableSource.getInputFormat();\n\n    List<RowData> result = readData(inputFormat);\n\n    String actual = TestData.rowDataToString(result);\n    String expected = TestData.rowDataToString(TestData.DATA_SET_INSERT);\n    assertThat(actual, is(expected));\n\n    \r\n    conf.setBoolean(FlinkOptions.COMPACTION_ASYNC_ENABLED, false);\n    TestData.writeData(TestData.DATA_SET_UPDATE_INSERT, conf);\n\n    \r\n    \r\n    TestData.writeData(TestData.DATA_SET_INSERT_SEPARATE_PARTITION, conf);\n\n    \r\n    this.tableSource.reset();\n    inputFormat = this.tableSource.getInputFormat();\n\n    result = readData(inputFormat);\n\n    actual = TestData.rowDataToString(result);\n    expected = \"[id1,Danny,24,1970-01-01T00:00:00.001,par1, \"\n        + \"id10,Ella,38,1970-01-01T00:00:00.007,par4, \"\n        + \"id11,Phoebe,52,1970-01-01T00:00:00.008,par4, \"\n        + \"id12,Monica,27,1970-01-01T00:00:00.009,par5, \"\n        + \"id13,Phoebe,31,1970-01-01T00:00:00.010,par5, \"\n        + \"id14,Rachel,52,1970-01-01T00:00:00.011,par6, \"\n        + \"id15,Ross,29,1970-01-01T00:00:00.012,par6, \"\n        + \"id2,Stephen,34,1970-01-01T00:00:00.002,par1, \"\n        + \"id3,Julian,54,1970-01-01T00:00:00.003,par2, \"\n        + \"id4,Fabian,32,1970-01-01T00:00:00.004,par2, \"\n        + \"id5,Sophia,18,1970-01-01T00:00:00.005,par3, \"\n        + \"id6,Emma,20,1970-01-01T00:00:00.006,par3, \"\n        + \"id7,Bob,44,1970-01-01T00:00:00.007,par4, \"\n        + \"id8,Han,56,1970-01-01T00:00:00.008,par4, \"\n        + \"id9,Jane,19,1970-01-01T00:00:00.006,par3]\";\n    assertThat(actual, is(expected));\n  }\n","date":"2021-07-02 16:29:22","endLine":163,"groupId":"1000","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testReadBaseAndLogFiles","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-hudi-10-0.7/blobInfo/CC_OUT/blobs/c8/885b043c1891ef6e24e053560f4e81fc23b1b8.src","preCode":"  void testReadBaseAndLogFiles() throws Exception {\n    beforeEach(HoodieTableType.MERGE_ON_READ);\n\n    \r\n    conf.setBoolean(FlinkOptions.COMPACTION_ASYNC_ENABLED, true);\n    conf.setInteger(FlinkOptions.COMPACTION_DELTA_COMMITS, 1);\n    TestData.writeData(TestData.DATA_SET_INSERT, conf);\n\n    InputFormat<RowData, ?> inputFormat = this.tableSource.getInputFormat();\n\n    List<RowData> result = readData(inputFormat);\n\n    String actual = TestData.rowDataToString(result);\n    String expected = TestData.rowDataToString(TestData.DATA_SET_INSERT);\n    assertThat(actual, is(expected));\n\n    \r\n    conf.setBoolean(FlinkOptions.COMPACTION_ASYNC_ENABLED, false);\n    TestData.writeData(TestData.DATA_SET_UPDATE_INSERT, conf);\n\n    \r\n    this.tableSource.reloadActiveTimeline();\n    inputFormat = this.tableSource.getInputFormat();\n\n    result = readData(inputFormat);\n\n    actual = TestData.rowDataToString(result);\n    expected = \"[id1,Danny,24,1970-01-01T00:00:00.001,par1, \"\n        + \"id10,Ella,38,1970-01-01T00:00:00.007,par4, \"\n        + \"id11,Phoebe,52,1970-01-01T00:00:00.008,par4, \"\n        + \"id2,Stephen,34,1970-01-01T00:00:00.002,par1, \"\n        + \"id3,Julian,54,1970-01-01T00:00:00.003,par2, \"\n        + \"id4,Fabian,32,1970-01-01T00:00:00.004,par2, \"\n        + \"id5,Sophia,18,1970-01-01T00:00:00.005,par3, \"\n        + \"id6,Emma,20,1970-01-01T00:00:00.006,par3, \"\n        + \"id7,Bob,44,1970-01-01T00:00:00.007,par4, \"\n        + \"id8,Han,56,1970-01-01T00:00:00.008,par4, \"\n        + \"id9,Jane,19,1970-01-01T00:00:00.006,par3]\";\n    assertThat(actual, is(expected));\n  }\n","realPath":"hudi-flink/src/test/java/org/apache/hudi/table/format/TestInputFormat.java","repoName":"hudi","snippetEndLine":0,"snippetStartLine":0,"startLine":116,"status":"M"}],"commitId":"7462fdefc39c75dca986d65551d871b8c47d4f55","commitMessage":"@@@[HUDI-2112] Support reading pure logs file group for flink batch reader after compaction (#3202)\n\n","date":"2021-07-02 16:29:22","modifiedFileCount":"3","status":"M","submitter":"Danny Chan"},{"authorTime":"2021-08-16 18:14:05","codes":[{"authorDate":"2021-08-16 18:14:05","commitOrder":4,"curCode":"  void testRead(HoodieTableType tableType) throws Exception {\n    beforeEach(tableType);\n\n    TestData.writeData(TestData.DATA_SET_INSERT, conf);\n\n    InputFormat<RowData, ?> inputFormat = this.tableSource.getInputFormat();\n\n    List<RowData> result = readData(inputFormat);\n\n    String actual = TestData.rowDataToString(result);\n    String expected = TestData.rowDataToString(TestData.DATA_SET_INSERT);\n    assertThat(actual, is(expected));\n\n    \r\n    TestData.writeData(TestData.DATA_SET_UPDATE_INSERT, conf);\n\n    \r\n    this.tableSource.reset();\n    inputFormat = this.tableSource.getInputFormat();\n\n    result = readData(inputFormat);\n\n    actual = TestData.rowDataToString(result);\n    expected = \"[\"\n        + \"+I[id1, Danny, 24, 1970-01-01T00:00:00.001, par1], \"\n        + \"+I[id2, Stephen, 34, 1970-01-01T00:00:00.002, par1], \"\n        + \"+I[id3, Julian, 54, 1970-01-01T00:00:00.003, par2], \"\n        + \"+I[id4, Fabian, 32, 1970-01-01T00:00:00.004, par2], \"\n        + \"+I[id5, Sophia, 18, 1970-01-01T00:00:00.005, par3], \"\n        + \"+I[id6, Emma, 20, 1970-01-01T00:00:00.006, par3], \"\n        + \"+I[id7, Bob, 44, 1970-01-01T00:00:00.007, par4], \"\n        + \"+I[id8, Han, 56, 1970-01-01T00:00:00.008, par4], \"\n        + \"+I[id9, Jane, 19, 1970-01-01T00:00:00.006, par3], \"\n        + \"+I[id10, Ella, 38, 1970-01-01T00:00:00.007, par4], \"\n        + \"+I[id11, Phoebe, 52, 1970-01-01T00:00:00.008, par4]]\";\n    assertThat(actual, is(expected));\n  }\n","date":"2021-08-16 18:14:05","endLine":120,"groupId":"10394","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"testRead","params":"(HoodieTableTypetableType)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-hudi-10-0.7/blobInfo/CC_OUT/blobs/cc/0699fc521d684c4dbc8cb476168b4bdb8db0bc.src","preCode":"  void testRead(HoodieTableType tableType) throws Exception {\n    beforeEach(tableType);\n\n    TestData.writeData(TestData.DATA_SET_INSERT, conf);\n\n    InputFormat<RowData, ?> inputFormat = this.tableSource.getInputFormat();\n\n    List<RowData> result = readData(inputFormat);\n\n    String actual = TestData.rowDataToString(result);\n    String expected = TestData.rowDataToString(TestData.DATA_SET_INSERT);\n    assertThat(actual, is(expected));\n\n    \r\n    TestData.writeData(TestData.DATA_SET_UPDATE_INSERT, conf);\n\n    \r\n    this.tableSource.reset();\n    inputFormat = this.tableSource.getInputFormat();\n\n    result = readData(inputFormat);\n\n    actual = TestData.rowDataToString(result);\n    expected = \"[id1,Danny,24,1970-01-01T00:00:00.001,par1, \"\n        + \"id10,Ella,38,1970-01-01T00:00:00.007,par4, \"\n        + \"id11,Phoebe,52,1970-01-01T00:00:00.008,par4, \"\n        + \"id2,Stephen,34,1970-01-01T00:00:00.002,par1, \"\n        + \"id3,Julian,54,1970-01-01T00:00:00.003,par2, \"\n        + \"id4,Fabian,32,1970-01-01T00:00:00.004,par2, \"\n        + \"id5,Sophia,18,1970-01-01T00:00:00.005,par3, \"\n        + \"id6,Emma,20,1970-01-01T00:00:00.006,par3, \"\n        + \"id7,Bob,44,1970-01-01T00:00:00.007,par4, \"\n        + \"id8,Han,56,1970-01-01T00:00:00.008,par4, \"\n        + \"id9,Jane,19,1970-01-01T00:00:00.006,par3]\";\n    assertThat(actual, is(expected));\n  }\n","realPath":"hudi-flink/src/test/java/org/apache/hudi/table/format/TestInputFormat.java","repoName":"hudi","snippetEndLine":0,"snippetStartLine":0,"startLine":84,"status":"M"},{"authorDate":"2021-08-16 18:14:05","commitOrder":4,"curCode":"  void testReadBaseAndLogFiles() throws Exception {\n    beforeEach(HoodieTableType.MERGE_ON_READ);\n\n    \r\n    conf.setBoolean(FlinkOptions.COMPACTION_ASYNC_ENABLED, true);\n    conf.setInteger(FlinkOptions.COMPACTION_DELTA_COMMITS, 1);\n    TestData.writeData(TestData.DATA_SET_INSERT, conf);\n\n    InputFormat<RowData, ?> inputFormat = this.tableSource.getInputFormat();\n\n    List<RowData> result = readData(inputFormat);\n\n    String actual = TestData.rowDataToString(result);\n    String expected = TestData.rowDataToString(TestData.DATA_SET_INSERT);\n    assertThat(actual, is(expected));\n\n    \r\n    conf.setBoolean(FlinkOptions.COMPACTION_ASYNC_ENABLED, false);\n    TestData.writeData(TestData.DATA_SET_UPDATE_INSERT, conf);\n\n    \r\n    \r\n    TestData.writeData(TestData.DATA_SET_INSERT_SEPARATE_PARTITION, conf);\n\n    \r\n    this.tableSource.reset();\n    inputFormat = this.tableSource.getInputFormat();\n\n    result = readData(inputFormat);\n\n    actual = TestData.rowDataToString(result);\n    expected = \"[\"\n        + \"+I[id1, Danny, 24, 1970-01-01T00:00:00.001, par1], \"\n        + \"+I[id2, Stephen, 34, 1970-01-01T00:00:00.002, par1], \"\n        + \"+I[id3, Julian, 54, 1970-01-01T00:00:00.003, par2], \"\n        + \"+I[id4, Fabian, 32, 1970-01-01T00:00:00.004, par2], \"\n        + \"+I[id5, Sophia, 18, 1970-01-01T00:00:00.005, par3], \"\n        + \"+I[id6, Emma, 20, 1970-01-01T00:00:00.006, par3], \"\n        + \"+I[id7, Bob, 44, 1970-01-01T00:00:00.007, par4], \"\n        + \"+I[id8, Han, 56, 1970-01-01T00:00:00.008, par4], \"\n        + \"+I[id9, Jane, 19, 1970-01-01T00:00:00.006, par3], \"\n        + \"+I[id10, Ella, 38, 1970-01-01T00:00:00.007, par4], \"\n        + \"+I[id11, Phoebe, 52, 1970-01-01T00:00:00.008, par4], \"\n        + \"+I[id12, Monica, 27, 1970-01-01T00:00:00.009, par5], \"\n        + \"+I[id13, Phoebe, 31, 1970-01-01T00:00:00.010, par5], \"\n        + \"+I[id14, Rachel, 52, 1970-01-01T00:00:00.011, par6], \"\n        + \"+I[id15, Ross, 29, 1970-01-01T00:00:00.012, par6]]\";\n    assertThat(actual, is(expected));\n  }\n","date":"2021-08-16 18:14:05","endLine":171,"groupId":"10394","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"testReadBaseAndLogFiles","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-hudi-10-0.7/blobInfo/CC_OUT/blobs/cc/0699fc521d684c4dbc8cb476168b4bdb8db0bc.src","preCode":"  void testReadBaseAndLogFiles() throws Exception {\n    beforeEach(HoodieTableType.MERGE_ON_READ);\n\n    \r\n    conf.setBoolean(FlinkOptions.COMPACTION_ASYNC_ENABLED, true);\n    conf.setInteger(FlinkOptions.COMPACTION_DELTA_COMMITS, 1);\n    TestData.writeData(TestData.DATA_SET_INSERT, conf);\n\n    InputFormat<RowData, ?> inputFormat = this.tableSource.getInputFormat();\n\n    List<RowData> result = readData(inputFormat);\n\n    String actual = TestData.rowDataToString(result);\n    String expected = TestData.rowDataToString(TestData.DATA_SET_INSERT);\n    assertThat(actual, is(expected));\n\n    \r\n    conf.setBoolean(FlinkOptions.COMPACTION_ASYNC_ENABLED, false);\n    TestData.writeData(TestData.DATA_SET_UPDATE_INSERT, conf);\n\n    \r\n    \r\n    TestData.writeData(TestData.DATA_SET_INSERT_SEPARATE_PARTITION, conf);\n\n    \r\n    this.tableSource.reset();\n    inputFormat = this.tableSource.getInputFormat();\n\n    result = readData(inputFormat);\n\n    actual = TestData.rowDataToString(result);\n    expected = \"[id1,Danny,24,1970-01-01T00:00:00.001,par1, \"\n        + \"id10,Ella,38,1970-01-01T00:00:00.007,par4, \"\n        + \"id11,Phoebe,52,1970-01-01T00:00:00.008,par4, \"\n        + \"id12,Monica,27,1970-01-01T00:00:00.009,par5, \"\n        + \"id13,Phoebe,31,1970-01-01T00:00:00.010,par5, \"\n        + \"id14,Rachel,52,1970-01-01T00:00:00.011,par6, \"\n        + \"id15,Ross,29,1970-01-01T00:00:00.012,par6, \"\n        + \"id2,Stephen,34,1970-01-01T00:00:00.002,par1, \"\n        + \"id3,Julian,54,1970-01-01T00:00:00.003,par2, \"\n        + \"id4,Fabian,32,1970-01-01T00:00:00.004,par2, \"\n        + \"id5,Sophia,18,1970-01-01T00:00:00.005,par3, \"\n        + \"id6,Emma,20,1970-01-01T00:00:00.006,par3, \"\n        + \"id7,Bob,44,1970-01-01T00:00:00.007,par4, \"\n        + \"id8,Han,56,1970-01-01T00:00:00.008,par4, \"\n        + \"id9,Jane,19,1970-01-01T00:00:00.006,par3]\";\n    assertThat(actual, is(expected));\n  }\n","realPath":"hudi-flink/src/test/java/org/apache/hudi/table/format/TestInputFormat.java","repoName":"hudi","snippetEndLine":0,"snippetStartLine":0,"startLine":123,"status":"M"}],"commitId":"66f951322a3872073b86896fa5c10b51a0f6e4ab","commitMessage":"@@@[HUDI-2191] Bump flink version to 1.13.1 (#3291)\n\n","date":"2021-08-16 18:14:05","modifiedFileCount":"17","status":"M","submitter":"Danny Chan"}]
