[{"authorTime":"2021-02-03 01:15:53","codes":[{"authorDate":"2021-02-03 01:15:53","commitOrder":1,"curCode":"  private void registerDataFilesAPI() {\n    app.get(RemoteHoodieTableFileSystemView.LATEST_PARTITION_DATA_FILES_URL, new ViewHandler(ctx -> {\n      List<BaseFileDTO> dtos = dataFileHandler.getLatestDataFiles(\n          ctx.validatedQueryParam(RemoteHoodieTableFileSystemView.BASEPATH_PARAM).getOrThrow(),\n          ctx.queryParam(RemoteHoodieTableFileSystemView.PARTITION_PARAM,\"\"));\n      writeValueAsString(ctx, dtos);\n    }, true));\n\n    app.get(RemoteHoodieTableFileSystemView.LATEST_PARTITION_DATA_FILE_URL, new ViewHandler(ctx -> {\n      List<BaseFileDTO> dtos = dataFileHandler.getLatestDataFile(\n          ctx.validatedQueryParam(RemoteHoodieTableFileSystemView.BASEPATH_PARAM).getOrThrow(),\n          ctx.queryParam(RemoteHoodieTableFileSystemView.PARTITION_PARAM,\"\"),\n          ctx.validatedQueryParam(RemoteHoodieTableFileSystemView.FILEID_PARAM).getOrThrow());\n      writeValueAsString(ctx, dtos);\n    }, true));\n\n    app.get(RemoteHoodieTableFileSystemView.LATEST_ALL_DATA_FILES, new ViewHandler(ctx -> {\n      List<BaseFileDTO> dtos = dataFileHandler\n          .getLatestDataFiles(ctx.validatedQueryParam(RemoteHoodieTableFileSystemView.BASEPATH_PARAM).getOrThrow());\n      writeValueAsString(ctx, dtos);\n    }, true));\n\n    app.get(RemoteHoodieTableFileSystemView.LATEST_DATA_FILES_BEFORE_ON_INSTANT_URL, new ViewHandler(ctx -> {\n      List<BaseFileDTO> dtos = dataFileHandler.getLatestDataFilesBeforeOrOn(\n          ctx.validatedQueryParam(RemoteHoodieTableFileSystemView.BASEPATH_PARAM).getOrThrow(),\n          ctx.queryParam(RemoteHoodieTableFileSystemView.PARTITION_PARAM,\"\"),\n          ctx.validatedQueryParam(RemoteHoodieTableFileSystemView.MAX_INSTANT_PARAM).getOrThrow());\n      writeValueAsString(ctx, dtos);\n    }, true));\n\n    app.get(RemoteHoodieTableFileSystemView.LATEST_DATA_FILE_ON_INSTANT_URL, new ViewHandler(ctx -> {\n      List<BaseFileDTO> dtos = dataFileHandler.getLatestDataFileOn(\n          ctx.validatedQueryParam(RemoteHoodieTableFileSystemView.BASEPATH_PARAM).getOrThrow(),\n          ctx.queryParam(RemoteHoodieTableFileSystemView.PARTITION_PARAM,\"\"),\n          ctx.queryParam(RemoteHoodieTableFileSystemView.INSTANT_PARAM),\n          ctx.validatedQueryParam(RemoteHoodieTableFileSystemView.FILEID_PARAM).getOrThrow());\n      writeValueAsString(ctx, dtos);\n    }, true));\n\n    app.get(RemoteHoodieTableFileSystemView.ALL_DATA_FILES, new ViewHandler(ctx -> {\n      List<BaseFileDTO> dtos = dataFileHandler.getAllDataFiles(\n          ctx.validatedQueryParam(RemoteHoodieTableFileSystemView.BASEPATH_PARAM).getOrThrow(),\n          ctx.queryParam(RemoteHoodieTableFileSystemView.PARTITION_PARAM,\"\"));\n      writeValueAsString(ctx, dtos);\n    }, true));\n\n    app.get(RemoteHoodieTableFileSystemView.LATEST_DATA_FILES_RANGE_INSTANT_URL, new ViewHandler(ctx -> {\n      List<BaseFileDTO> dtos = dataFileHandler.getLatestDataFilesInRange(\n          ctx.validatedQueryParam(RemoteHoodieTableFileSystemView.BASEPATH_PARAM).getOrThrow(), Arrays\n              .asList(ctx.validatedQueryParam(RemoteHoodieTableFileSystemView.INSTANTS_PARAM).getOrThrow().split(\",\")));\n      writeValueAsString(ctx, dtos);\n    }, true));\n  }\n","date":"2021-02-03 01:15:53","endLine":214,"groupId":"3856","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"registerDataFilesAPI","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-hudi-10-0.7/blobInfo/CC_OUT/blobs/22/d3082c6d961fae98d1ec5ee9a328a3518a74cd.src","preCode":"  private void registerDataFilesAPI() {\n    app.get(RemoteHoodieTableFileSystemView.LATEST_PARTITION_DATA_FILES_URL, new ViewHandler(ctx -> {\n      List<BaseFileDTO> dtos = dataFileHandler.getLatestDataFiles(\n          ctx.validatedQueryParam(RemoteHoodieTableFileSystemView.BASEPATH_PARAM).getOrThrow(),\n          ctx.queryParam(RemoteHoodieTableFileSystemView.PARTITION_PARAM,\"\"));\n      writeValueAsString(ctx, dtos);\n    }, true));\n\n    app.get(RemoteHoodieTableFileSystemView.LATEST_PARTITION_DATA_FILE_URL, new ViewHandler(ctx -> {\n      List<BaseFileDTO> dtos = dataFileHandler.getLatestDataFile(\n          ctx.validatedQueryParam(RemoteHoodieTableFileSystemView.BASEPATH_PARAM).getOrThrow(),\n          ctx.queryParam(RemoteHoodieTableFileSystemView.PARTITION_PARAM,\"\"),\n          ctx.validatedQueryParam(RemoteHoodieTableFileSystemView.FILEID_PARAM).getOrThrow());\n      writeValueAsString(ctx, dtos);\n    }, true));\n\n    app.get(RemoteHoodieTableFileSystemView.LATEST_ALL_DATA_FILES, new ViewHandler(ctx -> {\n      List<BaseFileDTO> dtos = dataFileHandler\n          .getLatestDataFiles(ctx.validatedQueryParam(RemoteHoodieTableFileSystemView.BASEPATH_PARAM).getOrThrow());\n      writeValueAsString(ctx, dtos);\n    }, true));\n\n    app.get(RemoteHoodieTableFileSystemView.LATEST_DATA_FILES_BEFORE_ON_INSTANT_URL, new ViewHandler(ctx -> {\n      List<BaseFileDTO> dtos = dataFileHandler.getLatestDataFilesBeforeOrOn(\n          ctx.validatedQueryParam(RemoteHoodieTableFileSystemView.BASEPATH_PARAM).getOrThrow(),\n          ctx.queryParam(RemoteHoodieTableFileSystemView.PARTITION_PARAM,\"\"),\n          ctx.validatedQueryParam(RemoteHoodieTableFileSystemView.MAX_INSTANT_PARAM).getOrThrow());\n      writeValueAsString(ctx, dtos);\n    }, true));\n\n    app.get(RemoteHoodieTableFileSystemView.LATEST_DATA_FILE_ON_INSTANT_URL, new ViewHandler(ctx -> {\n      List<BaseFileDTO> dtos = dataFileHandler.getLatestDataFileOn(\n          ctx.validatedQueryParam(RemoteHoodieTableFileSystemView.BASEPATH_PARAM).getOrThrow(),\n          ctx.queryParam(RemoteHoodieTableFileSystemView.PARTITION_PARAM,\"\"),\n          ctx.queryParam(RemoteHoodieTableFileSystemView.INSTANT_PARAM),\n          ctx.validatedQueryParam(RemoteHoodieTableFileSystemView.FILEID_PARAM).getOrThrow());\n      writeValueAsString(ctx, dtos);\n    }, true));\n\n    app.get(RemoteHoodieTableFileSystemView.ALL_DATA_FILES, new ViewHandler(ctx -> {\n      List<BaseFileDTO> dtos = dataFileHandler.getAllDataFiles(\n          ctx.validatedQueryParam(RemoteHoodieTableFileSystemView.BASEPATH_PARAM).getOrThrow(),\n          ctx.queryParam(RemoteHoodieTableFileSystemView.PARTITION_PARAM,\"\"));\n      writeValueAsString(ctx, dtos);\n    }, true));\n\n    app.get(RemoteHoodieTableFileSystemView.LATEST_DATA_FILES_RANGE_INSTANT_URL, new ViewHandler(ctx -> {\n      List<BaseFileDTO> dtos = dataFileHandler.getLatestDataFilesInRange(\n          ctx.validatedQueryParam(RemoteHoodieTableFileSystemView.BASEPATH_PARAM).getOrThrow(), Arrays\n              .asList(ctx.validatedQueryParam(RemoteHoodieTableFileSystemView.INSTANTS_PARAM).getOrThrow().split(\",\")));\n      writeValueAsString(ctx, dtos);\n    }, true));\n  }\n","realPath":"hudi-timeline-service/src/main/java/org/apache/hudi/timeline/service/RequestHandler.java","repoName":"hudi","snippetEndLine":0,"snippetStartLine":0,"startLine":162,"status":"B"},{"authorDate":"2021-02-03 01:15:53","commitOrder":1,"curCode":"  private void registerFileSlicesAPI() {\n    app.get(RemoteHoodieTableFileSystemView.LATEST_PARTITION_SLICES_URL, new ViewHandler(ctx -> {\n      List<FileSliceDTO> dtos = sliceHandler.getLatestFileSlices(\n          ctx.validatedQueryParam(RemoteHoodieTableFileSystemView.BASEPATH_PARAM).getOrThrow(),\n          ctx.queryParam(RemoteHoodieTableFileSystemView.PARTITION_PARAM,\"\"));\n      writeValueAsString(ctx, dtos);\n    }, true));\n\n    app.get(RemoteHoodieTableFileSystemView.LATEST_PARTITION_SLICE_URL, new ViewHandler(ctx -> {\n      List<FileSliceDTO> dtos = sliceHandler.getLatestFileSlice(\n          ctx.validatedQueryParam(RemoteHoodieTableFileSystemView.BASEPATH_PARAM).getOrThrow(),\n          ctx.queryParam(RemoteHoodieTableFileSystemView.PARTITION_PARAM,\"\"),\n          ctx.validatedQueryParam(RemoteHoodieTableFileSystemView.FILEID_PARAM).getOrThrow());\n      writeValueAsString(ctx, dtos);\n    }, true));\n\n    app.get(RemoteHoodieTableFileSystemView.LATEST_PARTITION_UNCOMPACTED_SLICES_URL, new ViewHandler(ctx -> {\n      List<FileSliceDTO> dtos = sliceHandler.getLatestUnCompactedFileSlices(\n          ctx.validatedQueryParam(RemoteHoodieTableFileSystemView.BASEPATH_PARAM).getOrThrow(),\n          ctx.queryParam(RemoteHoodieTableFileSystemView.PARTITION_PARAM,\"\"));\n      writeValueAsString(ctx, dtos);\n    }, true));\n\n    app.get(RemoteHoodieTableFileSystemView.ALL_SLICES_URL, new ViewHandler(ctx -> {\n      List<FileSliceDTO> dtos = sliceHandler.getAllFileSlices(\n          ctx.validatedQueryParam(RemoteHoodieTableFileSystemView.BASEPATH_PARAM).getOrThrow(),\n          ctx.queryParam(RemoteHoodieTableFileSystemView.PARTITION_PARAM,\"\"));\n      writeValueAsString(ctx, dtos);\n    }, true));\n\n    app.get(RemoteHoodieTableFileSystemView.LATEST_SLICES_RANGE_INSTANT_URL, new ViewHandler(ctx -> {\n      List<FileSliceDTO> dtos = sliceHandler.getLatestFileSliceInRange(\n          ctx.validatedQueryParam(RemoteHoodieTableFileSystemView.BASEPATH_PARAM).getOrThrow(), Arrays\n              .asList(ctx.validatedQueryParam(RemoteHoodieTableFileSystemView.INSTANTS_PARAM).getOrThrow().split(\",\")));\n      writeValueAsString(ctx, dtos);\n    }, true));\n\n    app.get(RemoteHoodieTableFileSystemView.LATEST_SLICES_MERGED_BEFORE_ON_INSTANT_URL, new ViewHandler(ctx -> {\n      List<FileSliceDTO> dtos = sliceHandler.getLatestMergedFileSlicesBeforeOrOn(\n          ctx.validatedQueryParam(RemoteHoodieTableFileSystemView.BASEPATH_PARAM).getOrThrow(),\n          ctx.queryParam(RemoteHoodieTableFileSystemView.PARTITION_PARAM,\"\"),\n          ctx.validatedQueryParam(RemoteHoodieTableFileSystemView.MAX_INSTANT_PARAM).getOrThrow());\n      writeValueAsString(ctx, dtos);\n    }, true));\n\n    app.get(RemoteHoodieTableFileSystemView.LATEST_SLICES_BEFORE_ON_INSTANT_URL, new ViewHandler(ctx -> {\n      List<FileSliceDTO> dtos = sliceHandler.getLatestFileSlicesBeforeOrOn(\n          ctx.validatedQueryParam(RemoteHoodieTableFileSystemView.BASEPATH_PARAM).getOrThrow(),\n          ctx.queryParam(RemoteHoodieTableFileSystemView.PARTITION_PARAM,\"\"),\n          ctx.validatedQueryParam(RemoteHoodieTableFileSystemView.MAX_INSTANT_PARAM).getOrThrow(),\n          Boolean.parseBoolean(\n              ctx.validatedQueryParam(RemoteHoodieTableFileSystemView.INCLUDE_FILES_IN_PENDING_COMPACTION_PARAM)\n                  .getOrThrow()));\n      writeValueAsString(ctx, dtos);\n    }, true));\n\n    app.get(RemoteHoodieTableFileSystemView.PENDING_COMPACTION_OPS, new ViewHandler(ctx -> {\n      List<CompactionOpDTO> dtos = sliceHandler.getPendingCompactionOperations(\n          ctx.validatedQueryParam(RemoteHoodieTableFileSystemView.BASEPATH_PARAM).getOrThrow());\n      writeValueAsString(ctx, dtos);\n    }, true));\n\n    app.get(RemoteHoodieTableFileSystemView.ALL_FILEGROUPS_FOR_PARTITION_URL, new ViewHandler(ctx -> {\n      List<FileGroupDTO> dtos = sliceHandler.getAllFileGroups(\n          ctx.validatedQueryParam(RemoteHoodieTableFileSystemView.BASEPATH_PARAM).getOrThrow(),\n          ctx.queryParam(RemoteHoodieTableFileSystemView.PARTITION_PARAM,\"\"));\n      writeValueAsString(ctx, dtos);\n    }, true));\n\n    app.post(RemoteHoodieTableFileSystemView.REFRESH_TABLE, new ViewHandler(ctx -> {\n      boolean success = sliceHandler\n          .refreshTable(ctx.validatedQueryParam(RemoteHoodieTableFileSystemView.BASEPATH_PARAM).getOrThrow());\n      writeValueAsString(ctx, success);\n    }, false));\n\n    app.get(RemoteHoodieTableFileSystemView.ALL_REPLACED_FILEGROUPS_BEFORE_OR_ON, new ViewHandler(ctx -> {\n      List<FileGroupDTO> dtos = sliceHandler.getReplacedFileGroupsBeforeOrOn(\n          ctx.validatedQueryParam(RemoteHoodieTableFileSystemView.BASEPATH_PARAM).getOrThrow(),\n          ctx.queryParam(RemoteHoodieTableFileSystemView.MAX_INSTANT_PARAM,\"\"),\n          ctx.queryParam(RemoteHoodieTableFileSystemView.PARTITION_PARAM,\"\"));\n      writeValueAsString(ctx, dtos);\n    }, true));\n\n    app.get(RemoteHoodieTableFileSystemView.ALL_REPLACED_FILEGROUPS_BEFORE, new ViewHandler(ctx -> {\n      List<FileGroupDTO> dtos = sliceHandler.getReplacedFileGroupsBefore(\n          ctx.validatedQueryParam(RemoteHoodieTableFileSystemView.BASEPATH_PARAM).getOrThrow(),\n          ctx.queryParam(RemoteHoodieTableFileSystemView.MAX_INSTANT_PARAM,\"\"),\n          ctx.queryParam(RemoteHoodieTableFileSystemView.PARTITION_PARAM,\"\"));\n      writeValueAsString(ctx, dtos);\n    }, true));\n\n    app.get(RemoteHoodieTableFileSystemView.ALL_REPLACED_FILEGROUPS_PARTITION, new ViewHandler(ctx -> {\n      List<FileGroupDTO> dtos = sliceHandler.getAllReplacedFileGroups(\n          ctx.validatedQueryParam(RemoteHoodieTableFileSystemView.BASEPATH_PARAM).getOrThrow(),\n          ctx.queryParam(RemoteHoodieTableFileSystemView.PARTITION_PARAM,\"\"));\n      writeValueAsString(ctx, dtos);\n    }, true));\n\n    app.get(RemoteHoodieTableFileSystemView.PENDING_CLUSTERING_FILEGROUPS, new ViewHandler(ctx -> {\n      List<ClusteringOpDTO> dtos = sliceHandler.getFileGroupsInPendingClustering(\n          ctx.validatedQueryParam(RemoteHoodieTableFileSystemView.BASEPATH_PARAM).getOrThrow());\n      writeValueAsString(ctx, dtos);\n    }, true));\n  }\n","date":"2021-02-03 01:15:53","endLine":322,"groupId":"1732","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"registerFileSlicesAPI","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-hudi-10-0.7/blobInfo/CC_OUT/blobs/22/d3082c6d961fae98d1ec5ee9a328a3518a74cd.src","preCode":"  private void registerFileSlicesAPI() {\n    app.get(RemoteHoodieTableFileSystemView.LATEST_PARTITION_SLICES_URL, new ViewHandler(ctx -> {\n      List<FileSliceDTO> dtos = sliceHandler.getLatestFileSlices(\n          ctx.validatedQueryParam(RemoteHoodieTableFileSystemView.BASEPATH_PARAM).getOrThrow(),\n          ctx.queryParam(RemoteHoodieTableFileSystemView.PARTITION_PARAM,\"\"));\n      writeValueAsString(ctx, dtos);\n    }, true));\n\n    app.get(RemoteHoodieTableFileSystemView.LATEST_PARTITION_SLICE_URL, new ViewHandler(ctx -> {\n      List<FileSliceDTO> dtos = sliceHandler.getLatestFileSlice(\n          ctx.validatedQueryParam(RemoteHoodieTableFileSystemView.BASEPATH_PARAM).getOrThrow(),\n          ctx.queryParam(RemoteHoodieTableFileSystemView.PARTITION_PARAM,\"\"),\n          ctx.validatedQueryParam(RemoteHoodieTableFileSystemView.FILEID_PARAM).getOrThrow());\n      writeValueAsString(ctx, dtos);\n    }, true));\n\n    app.get(RemoteHoodieTableFileSystemView.LATEST_PARTITION_UNCOMPACTED_SLICES_URL, new ViewHandler(ctx -> {\n      List<FileSliceDTO> dtos = sliceHandler.getLatestUnCompactedFileSlices(\n          ctx.validatedQueryParam(RemoteHoodieTableFileSystemView.BASEPATH_PARAM).getOrThrow(),\n          ctx.queryParam(RemoteHoodieTableFileSystemView.PARTITION_PARAM,\"\"));\n      writeValueAsString(ctx, dtos);\n    }, true));\n\n    app.get(RemoteHoodieTableFileSystemView.ALL_SLICES_URL, new ViewHandler(ctx -> {\n      List<FileSliceDTO> dtos = sliceHandler.getAllFileSlices(\n          ctx.validatedQueryParam(RemoteHoodieTableFileSystemView.BASEPATH_PARAM).getOrThrow(),\n          ctx.queryParam(RemoteHoodieTableFileSystemView.PARTITION_PARAM,\"\"));\n      writeValueAsString(ctx, dtos);\n    }, true));\n\n    app.get(RemoteHoodieTableFileSystemView.LATEST_SLICES_RANGE_INSTANT_URL, new ViewHandler(ctx -> {\n      List<FileSliceDTO> dtos = sliceHandler.getLatestFileSliceInRange(\n          ctx.validatedQueryParam(RemoteHoodieTableFileSystemView.BASEPATH_PARAM).getOrThrow(), Arrays\n              .asList(ctx.validatedQueryParam(RemoteHoodieTableFileSystemView.INSTANTS_PARAM).getOrThrow().split(\",\")));\n      writeValueAsString(ctx, dtos);\n    }, true));\n\n    app.get(RemoteHoodieTableFileSystemView.LATEST_SLICES_MERGED_BEFORE_ON_INSTANT_URL, new ViewHandler(ctx -> {\n      List<FileSliceDTO> dtos = sliceHandler.getLatestMergedFileSlicesBeforeOrOn(\n          ctx.validatedQueryParam(RemoteHoodieTableFileSystemView.BASEPATH_PARAM).getOrThrow(),\n          ctx.queryParam(RemoteHoodieTableFileSystemView.PARTITION_PARAM,\"\"),\n          ctx.validatedQueryParam(RemoteHoodieTableFileSystemView.MAX_INSTANT_PARAM).getOrThrow());\n      writeValueAsString(ctx, dtos);\n    }, true));\n\n    app.get(RemoteHoodieTableFileSystemView.LATEST_SLICES_BEFORE_ON_INSTANT_URL, new ViewHandler(ctx -> {\n      List<FileSliceDTO> dtos = sliceHandler.getLatestFileSlicesBeforeOrOn(\n          ctx.validatedQueryParam(RemoteHoodieTableFileSystemView.BASEPATH_PARAM).getOrThrow(),\n          ctx.queryParam(RemoteHoodieTableFileSystemView.PARTITION_PARAM,\"\"),\n          ctx.validatedQueryParam(RemoteHoodieTableFileSystemView.MAX_INSTANT_PARAM).getOrThrow(),\n          Boolean.parseBoolean(\n              ctx.validatedQueryParam(RemoteHoodieTableFileSystemView.INCLUDE_FILES_IN_PENDING_COMPACTION_PARAM)\n                  .getOrThrow()));\n      writeValueAsString(ctx, dtos);\n    }, true));\n\n    app.get(RemoteHoodieTableFileSystemView.PENDING_COMPACTION_OPS, new ViewHandler(ctx -> {\n      List<CompactionOpDTO> dtos = sliceHandler.getPendingCompactionOperations(\n          ctx.validatedQueryParam(RemoteHoodieTableFileSystemView.BASEPATH_PARAM).getOrThrow());\n      writeValueAsString(ctx, dtos);\n    }, true));\n\n    app.get(RemoteHoodieTableFileSystemView.ALL_FILEGROUPS_FOR_PARTITION_URL, new ViewHandler(ctx -> {\n      List<FileGroupDTO> dtos = sliceHandler.getAllFileGroups(\n          ctx.validatedQueryParam(RemoteHoodieTableFileSystemView.BASEPATH_PARAM).getOrThrow(),\n          ctx.queryParam(RemoteHoodieTableFileSystemView.PARTITION_PARAM,\"\"));\n      writeValueAsString(ctx, dtos);\n    }, true));\n\n    app.post(RemoteHoodieTableFileSystemView.REFRESH_TABLE, new ViewHandler(ctx -> {\n      boolean success = sliceHandler\n          .refreshTable(ctx.validatedQueryParam(RemoteHoodieTableFileSystemView.BASEPATH_PARAM).getOrThrow());\n      writeValueAsString(ctx, success);\n    }, false));\n\n    app.get(RemoteHoodieTableFileSystemView.ALL_REPLACED_FILEGROUPS_BEFORE_OR_ON, new ViewHandler(ctx -> {\n      List<FileGroupDTO> dtos = sliceHandler.getReplacedFileGroupsBeforeOrOn(\n          ctx.validatedQueryParam(RemoteHoodieTableFileSystemView.BASEPATH_PARAM).getOrThrow(),\n          ctx.queryParam(RemoteHoodieTableFileSystemView.MAX_INSTANT_PARAM,\"\"),\n          ctx.queryParam(RemoteHoodieTableFileSystemView.PARTITION_PARAM,\"\"));\n      writeValueAsString(ctx, dtos);\n    }, true));\n\n    app.get(RemoteHoodieTableFileSystemView.ALL_REPLACED_FILEGROUPS_BEFORE, new ViewHandler(ctx -> {\n      List<FileGroupDTO> dtos = sliceHandler.getReplacedFileGroupsBefore(\n          ctx.validatedQueryParam(RemoteHoodieTableFileSystemView.BASEPATH_PARAM).getOrThrow(),\n          ctx.queryParam(RemoteHoodieTableFileSystemView.MAX_INSTANT_PARAM,\"\"),\n          ctx.queryParam(RemoteHoodieTableFileSystemView.PARTITION_PARAM,\"\"));\n      writeValueAsString(ctx, dtos);\n    }, true));\n\n    app.get(RemoteHoodieTableFileSystemView.ALL_REPLACED_FILEGROUPS_PARTITION, new ViewHandler(ctx -> {\n      List<FileGroupDTO> dtos = sliceHandler.getAllReplacedFileGroups(\n          ctx.validatedQueryParam(RemoteHoodieTableFileSystemView.BASEPATH_PARAM).getOrThrow(),\n          ctx.queryParam(RemoteHoodieTableFileSystemView.PARTITION_PARAM,\"\"));\n      writeValueAsString(ctx, dtos);\n    }, true));\n\n    app.get(RemoteHoodieTableFileSystemView.PENDING_CLUSTERING_FILEGROUPS, new ViewHandler(ctx -> {\n      List<ClusteringOpDTO> dtos = sliceHandler.getFileGroupsInPendingClustering(\n          ctx.validatedQueryParam(RemoteHoodieTableFileSystemView.BASEPATH_PARAM).getOrThrow());\n      writeValueAsString(ctx, dtos);\n    }, true));\n  }\n","realPath":"hudi-timeline-service/src/main/java/org/apache/hudi/timeline/service/RequestHandler.java","repoName":"hudi","snippetEndLine":0,"snippetStartLine":0,"startLine":219,"status":"B"}],"commitId":"50ff9ab2d2d4fe217fb1ac540d96bddd07c2f6f8","commitMessage":"@@@[MINOR] Rename FileSystemViewHandler to RequestHandler and corrected the class comment (#2458)\n\n","date":"2021-02-03 01:15:53","modifiedFileCount":"1","status":"B","submitter":"vinoyang"},{"authorTime":"2021-03-03 13:58:41","codes":[{"authorDate":"2021-03-03 13:58:41","commitOrder":2,"curCode":"  private void registerDataFilesAPI() {\n    app.get(RemoteHoodieTableFileSystemView.LATEST_PARTITION_DATA_FILES_URL, new ViewHandler(ctx -> {\n      metricsRegistry.add(\"LATEST_PARTITION_DATA_FILES\", 1);\n      List<BaseFileDTO> dtos = dataFileHandler.getLatestDataFiles(\n          ctx.validatedQueryParam(RemoteHoodieTableFileSystemView.BASEPATH_PARAM).getOrThrow(),\n          ctx.queryParam(RemoteHoodieTableFileSystemView.PARTITION_PARAM,\"\"));\n      writeValueAsString(ctx, dtos);\n    }, true));\n\n    app.get(RemoteHoodieTableFileSystemView.LATEST_PARTITION_DATA_FILE_URL, new ViewHandler(ctx -> {\n      metricsRegistry.add(\"LATEST_PARTITION_DATA_FILE\", 1);\n      List<BaseFileDTO> dtos = dataFileHandler.getLatestDataFile(\n          ctx.validatedQueryParam(RemoteHoodieTableFileSystemView.BASEPATH_PARAM).getOrThrow(),\n          ctx.queryParam(RemoteHoodieTableFileSystemView.PARTITION_PARAM,\"\"),\n          ctx.validatedQueryParam(RemoteHoodieTableFileSystemView.FILEID_PARAM).getOrThrow());\n      writeValueAsString(ctx, dtos);\n    }, true));\n\n    app.get(RemoteHoodieTableFileSystemView.LATEST_ALL_DATA_FILES, new ViewHandler(ctx -> {\n      metricsRegistry.add(\"LATEST_ALL_DATA_FILES\", 1);\n      List<BaseFileDTO> dtos = dataFileHandler\n          .getLatestDataFiles(ctx.validatedQueryParam(RemoteHoodieTableFileSystemView.BASEPATH_PARAM).getOrThrow());\n      writeValueAsString(ctx, dtos);\n    }, true));\n\n    app.get(RemoteHoodieTableFileSystemView.LATEST_DATA_FILES_BEFORE_ON_INSTANT_URL, new ViewHandler(ctx -> {\n      metricsRegistry.add(\"LATEST_DATA_FILES_BEFORE_ON_INSTANT\", 1);\n      List<BaseFileDTO> dtos = dataFileHandler.getLatestDataFilesBeforeOrOn(\n          ctx.validatedQueryParam(RemoteHoodieTableFileSystemView.BASEPATH_PARAM).getOrThrow(),\n          ctx.queryParam(RemoteHoodieTableFileSystemView.PARTITION_PARAM,\"\"),\n          ctx.validatedQueryParam(RemoteHoodieTableFileSystemView.MAX_INSTANT_PARAM).getOrThrow());\n      writeValueAsString(ctx, dtos);\n    }, true));\n\n    app.get(RemoteHoodieTableFileSystemView.LATEST_DATA_FILE_ON_INSTANT_URL, new ViewHandler(ctx -> {\n      metricsRegistry.add(\"LATEST_DATA_FILE_ON_INSTANT\", 1);\n      List<BaseFileDTO> dtos = dataFileHandler.getLatestDataFileOn(\n          ctx.validatedQueryParam(RemoteHoodieTableFileSystemView.BASEPATH_PARAM).getOrThrow(),\n          ctx.queryParam(RemoteHoodieTableFileSystemView.PARTITION_PARAM,\"\"),\n          ctx.queryParam(RemoteHoodieTableFileSystemView.INSTANT_PARAM),\n          ctx.validatedQueryParam(RemoteHoodieTableFileSystemView.FILEID_PARAM).getOrThrow());\n      writeValueAsString(ctx, dtos);\n    }, true));\n\n    app.get(RemoteHoodieTableFileSystemView.ALL_DATA_FILES, new ViewHandler(ctx -> {\n      metricsRegistry.add(\"ALL_DATA_FILES\", 1);\n      List<BaseFileDTO> dtos = dataFileHandler.getAllDataFiles(\n          ctx.validatedQueryParam(RemoteHoodieTableFileSystemView.BASEPATH_PARAM).getOrThrow(),\n          ctx.queryParam(RemoteHoodieTableFileSystemView.PARTITION_PARAM,\"\"));\n      writeValueAsString(ctx, dtos);\n    }, true));\n\n    app.get(RemoteHoodieTableFileSystemView.LATEST_DATA_FILES_RANGE_INSTANT_URL, new ViewHandler(ctx -> {\n      metricsRegistry.add(\"LATEST_DATA_FILES_RANGE_INSTANT\", 1);\n      List<BaseFileDTO> dtos = dataFileHandler.getLatestDataFilesInRange(\n          ctx.validatedQueryParam(RemoteHoodieTableFileSystemView.BASEPATH_PARAM).getOrThrow(), Arrays\n              .asList(ctx.validatedQueryParam(RemoteHoodieTableFileSystemView.INSTANTS_PARAM).getOrThrow().split(\",\")));\n      writeValueAsString(ctx, dtos);\n    }, true));\n  }\n","date":"2021-03-03 13:58:41","endLine":271,"groupId":"101","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"registerDataFilesAPI","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-hudi-10-0.7/blobInfo/CC_OUT/blobs/09/ebeb5cce3b1c1e90b849568c0e789b66c5fa74.src","preCode":"  private void registerDataFilesAPI() {\n    app.get(RemoteHoodieTableFileSystemView.LATEST_PARTITION_DATA_FILES_URL, new ViewHandler(ctx -> {\n      List<BaseFileDTO> dtos = dataFileHandler.getLatestDataFiles(\n          ctx.validatedQueryParam(RemoteHoodieTableFileSystemView.BASEPATH_PARAM).getOrThrow(),\n          ctx.queryParam(RemoteHoodieTableFileSystemView.PARTITION_PARAM,\"\"));\n      writeValueAsString(ctx, dtos);\n    }, true));\n\n    app.get(RemoteHoodieTableFileSystemView.LATEST_PARTITION_DATA_FILE_URL, new ViewHandler(ctx -> {\n      List<BaseFileDTO> dtos = dataFileHandler.getLatestDataFile(\n          ctx.validatedQueryParam(RemoteHoodieTableFileSystemView.BASEPATH_PARAM).getOrThrow(),\n          ctx.queryParam(RemoteHoodieTableFileSystemView.PARTITION_PARAM,\"\"),\n          ctx.validatedQueryParam(RemoteHoodieTableFileSystemView.FILEID_PARAM).getOrThrow());\n      writeValueAsString(ctx, dtos);\n    }, true));\n\n    app.get(RemoteHoodieTableFileSystemView.LATEST_ALL_DATA_FILES, new ViewHandler(ctx -> {\n      List<BaseFileDTO> dtos = dataFileHandler\n          .getLatestDataFiles(ctx.validatedQueryParam(RemoteHoodieTableFileSystemView.BASEPATH_PARAM).getOrThrow());\n      writeValueAsString(ctx, dtos);\n    }, true));\n\n    app.get(RemoteHoodieTableFileSystemView.LATEST_DATA_FILES_BEFORE_ON_INSTANT_URL, new ViewHandler(ctx -> {\n      List<BaseFileDTO> dtos = dataFileHandler.getLatestDataFilesBeforeOrOn(\n          ctx.validatedQueryParam(RemoteHoodieTableFileSystemView.BASEPATH_PARAM).getOrThrow(),\n          ctx.queryParam(RemoteHoodieTableFileSystemView.PARTITION_PARAM,\"\"),\n          ctx.validatedQueryParam(RemoteHoodieTableFileSystemView.MAX_INSTANT_PARAM).getOrThrow());\n      writeValueAsString(ctx, dtos);\n    }, true));\n\n    app.get(RemoteHoodieTableFileSystemView.LATEST_DATA_FILE_ON_INSTANT_URL, new ViewHandler(ctx -> {\n      List<BaseFileDTO> dtos = dataFileHandler.getLatestDataFileOn(\n          ctx.validatedQueryParam(RemoteHoodieTableFileSystemView.BASEPATH_PARAM).getOrThrow(),\n          ctx.queryParam(RemoteHoodieTableFileSystemView.PARTITION_PARAM,\"\"),\n          ctx.queryParam(RemoteHoodieTableFileSystemView.INSTANT_PARAM),\n          ctx.validatedQueryParam(RemoteHoodieTableFileSystemView.FILEID_PARAM).getOrThrow());\n      writeValueAsString(ctx, dtos);\n    }, true));\n\n    app.get(RemoteHoodieTableFileSystemView.ALL_DATA_FILES, new ViewHandler(ctx -> {\n      List<BaseFileDTO> dtos = dataFileHandler.getAllDataFiles(\n          ctx.validatedQueryParam(RemoteHoodieTableFileSystemView.BASEPATH_PARAM).getOrThrow(),\n          ctx.queryParam(RemoteHoodieTableFileSystemView.PARTITION_PARAM,\"\"));\n      writeValueAsString(ctx, dtos);\n    }, true));\n\n    app.get(RemoteHoodieTableFileSystemView.LATEST_DATA_FILES_RANGE_INSTANT_URL, new ViewHandler(ctx -> {\n      List<BaseFileDTO> dtos = dataFileHandler.getLatestDataFilesInRange(\n          ctx.validatedQueryParam(RemoteHoodieTableFileSystemView.BASEPATH_PARAM).getOrThrow(), Arrays\n              .asList(ctx.validatedQueryParam(RemoteHoodieTableFileSystemView.INSTANTS_PARAM).getOrThrow().split(\",\")));\n      writeValueAsString(ctx, dtos);\n    }, true));\n  }\n","realPath":"hudi-timeline-service/src/main/java/org/apache/hudi/timeline/service/RequestHandler.java","repoName":"hudi","snippetEndLine":0,"snippetStartLine":0,"startLine":212,"status":"M"},{"authorDate":"2021-03-03 13:58:41","commitOrder":2,"curCode":"  private void registerFileSlicesAPI() {\n    app.get(RemoteHoodieTableFileSystemView.LATEST_PARTITION_SLICES_URL, new ViewHandler(ctx -> {\n      metricsRegistry.add(\"LATEST_PARTITION_SLICES\", 1);\n      List<FileSliceDTO> dtos = sliceHandler.getLatestFileSlices(\n          ctx.validatedQueryParam(RemoteHoodieTableFileSystemView.BASEPATH_PARAM).getOrThrow(),\n          ctx.queryParam(RemoteHoodieTableFileSystemView.PARTITION_PARAM,\"\"));\n      writeValueAsString(ctx, dtos);\n    }, true));\n\n    app.get(RemoteHoodieTableFileSystemView.LATEST_PARTITION_SLICE_URL, new ViewHandler(ctx -> {\n      metricsRegistry.add(\"LATEST_PARTITION_SLICE\", 1);\n      List<FileSliceDTO> dtos = sliceHandler.getLatestFileSlice(\n          ctx.validatedQueryParam(RemoteHoodieTableFileSystemView.BASEPATH_PARAM).getOrThrow(),\n          ctx.queryParam(RemoteHoodieTableFileSystemView.PARTITION_PARAM,\"\"),\n          ctx.validatedQueryParam(RemoteHoodieTableFileSystemView.FILEID_PARAM).getOrThrow());\n      writeValueAsString(ctx, dtos);\n    }, true));\n\n    app.get(RemoteHoodieTableFileSystemView.LATEST_PARTITION_UNCOMPACTED_SLICES_URL, new ViewHandler(ctx -> {\n      metricsRegistry.add(\"LATEST_PARTITION_UNCOMPACTED_SLICES\", 1);\n      List<FileSliceDTO> dtos = sliceHandler.getLatestUnCompactedFileSlices(\n          ctx.validatedQueryParam(RemoteHoodieTableFileSystemView.BASEPATH_PARAM).getOrThrow(),\n          ctx.queryParam(RemoteHoodieTableFileSystemView.PARTITION_PARAM,\"\"));\n      writeValueAsString(ctx, dtos);\n    }, true));\n\n    app.get(RemoteHoodieTableFileSystemView.ALL_SLICES_URL, new ViewHandler(ctx -> {\n      metricsRegistry.add(\"ALL_SLICES\", 1);\n      List<FileSliceDTO> dtos = sliceHandler.getAllFileSlices(\n          ctx.validatedQueryParam(RemoteHoodieTableFileSystemView.BASEPATH_PARAM).getOrThrow(),\n          ctx.queryParam(RemoteHoodieTableFileSystemView.PARTITION_PARAM,\"\"));\n      writeValueAsString(ctx, dtos);\n    }, true));\n\n    app.get(RemoteHoodieTableFileSystemView.LATEST_SLICES_RANGE_INSTANT_URL, new ViewHandler(ctx -> {\n      metricsRegistry.add(\"LATEST_SLICE_RANGE_INSTANT\", 1);\n      List<FileSliceDTO> dtos = sliceHandler.getLatestFileSliceInRange(\n          ctx.validatedQueryParam(RemoteHoodieTableFileSystemView.BASEPATH_PARAM).getOrThrow(), Arrays\n              .asList(ctx.validatedQueryParam(RemoteHoodieTableFileSystemView.INSTANTS_PARAM).getOrThrow().split(\",\")));\n      writeValueAsString(ctx, dtos);\n    }, true));\n\n    app.get(RemoteHoodieTableFileSystemView.LATEST_SLICES_MERGED_BEFORE_ON_INSTANT_URL, new ViewHandler(ctx -> {\n      metricsRegistry.add(\"LATEST_SLICES_MERGED_BEFORE_ON_INSTANT\", 1);\n      List<FileSliceDTO> dtos = sliceHandler.getLatestMergedFileSlicesBeforeOrOn(\n          ctx.validatedQueryParam(RemoteHoodieTableFileSystemView.BASEPATH_PARAM).getOrThrow(),\n          ctx.queryParam(RemoteHoodieTableFileSystemView.PARTITION_PARAM,\"\"),\n          ctx.validatedQueryParam(RemoteHoodieTableFileSystemView.MAX_INSTANT_PARAM).getOrThrow());\n      writeValueAsString(ctx, dtos);\n    }, true));\n\n    app.get(RemoteHoodieTableFileSystemView.LATEST_SLICES_BEFORE_ON_INSTANT_URL, new ViewHandler(ctx -> {\n      metricsRegistry.add(\"LATEST_SLICES_BEFORE_ON_INSTANT\", 1);\n      List<FileSliceDTO> dtos = sliceHandler.getLatestFileSlicesBeforeOrOn(\n          ctx.validatedQueryParam(RemoteHoodieTableFileSystemView.BASEPATH_PARAM).getOrThrow(),\n          ctx.queryParam(RemoteHoodieTableFileSystemView.PARTITION_PARAM,\"\"),\n          ctx.validatedQueryParam(RemoteHoodieTableFileSystemView.MAX_INSTANT_PARAM).getOrThrow(),\n          Boolean.parseBoolean(\n              ctx.validatedQueryParam(RemoteHoodieTableFileSystemView.INCLUDE_FILES_IN_PENDING_COMPACTION_PARAM)\n                  .getOrThrow()));\n      writeValueAsString(ctx, dtos);\n    }, true));\n\n    app.get(RemoteHoodieTableFileSystemView.PENDING_COMPACTION_OPS, new ViewHandler(ctx -> {\n      metricsRegistry.add(\"PEDING_COMPACTION_OPS\", 1);\n      List<CompactionOpDTO> dtos = sliceHandler.getPendingCompactionOperations(\n          ctx.validatedQueryParam(RemoteHoodieTableFileSystemView.BASEPATH_PARAM).getOrThrow());\n      writeValueAsString(ctx, dtos);\n    }, true));\n\n    app.get(RemoteHoodieTableFileSystemView.ALL_FILEGROUPS_FOR_PARTITION_URL, new ViewHandler(ctx -> {\n      metricsRegistry.add(\"ALL_FILEGROUPS_FOR_PARTITION\", 1);\n      List<FileGroupDTO> dtos = sliceHandler.getAllFileGroups(\n          ctx.validatedQueryParam(RemoteHoodieTableFileSystemView.BASEPATH_PARAM).getOrThrow(),\n          ctx.queryParam(RemoteHoodieTableFileSystemView.PARTITION_PARAM,\"\"));\n      writeValueAsString(ctx, dtos);\n    }, true));\n\n    app.post(RemoteHoodieTableFileSystemView.REFRESH_TABLE, new ViewHandler(ctx -> {\n      metricsRegistry.add(\"REFRESH_TABLE\", 1);\n      boolean success = sliceHandler\n          .refreshTable(ctx.validatedQueryParam(RemoteHoodieTableFileSystemView.BASEPATH_PARAM).getOrThrow());\n      writeValueAsString(ctx, success);\n    }, false));\n\n    app.get(RemoteHoodieTableFileSystemView.ALL_REPLACED_FILEGROUPS_BEFORE_OR_ON, new ViewHandler(ctx -> {\n      metricsRegistry.add(\"ALL_REPLACED_FILEGROUPS_BEFORE_OR_ON\", 1);\n      List<FileGroupDTO> dtos = sliceHandler.getReplacedFileGroupsBeforeOrOn(\n          ctx.validatedQueryParam(RemoteHoodieTableFileSystemView.BASEPATH_PARAM).getOrThrow(),\n          ctx.queryParam(RemoteHoodieTableFileSystemView.MAX_INSTANT_PARAM,\"\"),\n          ctx.queryParam(RemoteHoodieTableFileSystemView.PARTITION_PARAM,\"\"));\n      writeValueAsString(ctx, dtos);\n    }, true));\n\n    app.get(RemoteHoodieTableFileSystemView.ALL_REPLACED_FILEGROUPS_BEFORE, new ViewHandler(ctx -> {\n      metricsRegistry.add(\"ALL_REPLACED_FILEGROUPS_BEFORE\", 1);\n      List<FileGroupDTO> dtos = sliceHandler.getReplacedFileGroupsBefore(\n          ctx.validatedQueryParam(RemoteHoodieTableFileSystemView.BASEPATH_PARAM).getOrThrow(),\n          ctx.queryParam(RemoteHoodieTableFileSystemView.MAX_INSTANT_PARAM,\"\"),\n          ctx.queryParam(RemoteHoodieTableFileSystemView.PARTITION_PARAM,\"\"));\n      writeValueAsString(ctx, dtos);\n    }, true));\n\n    app.get(RemoteHoodieTableFileSystemView.ALL_REPLACED_FILEGROUPS_PARTITION, new ViewHandler(ctx -> {\n      metricsRegistry.add(\"ALL_REPLACED_FILEGROUPS_PARTITION\", 1);\n      List<FileGroupDTO> dtos = sliceHandler.getAllReplacedFileGroups(\n          ctx.validatedQueryParam(RemoteHoodieTableFileSystemView.BASEPATH_PARAM).getOrThrow(),\n          ctx.queryParam(RemoteHoodieTableFileSystemView.PARTITION_PARAM,\"\"));\n      writeValueAsString(ctx, dtos);\n    }, true));\n\n    app.get(RemoteHoodieTableFileSystemView.PENDING_CLUSTERING_FILEGROUPS, new ViewHandler(ctx -> {\n      metricsRegistry.add(\"PENDING_CLUSTERING_FILEGROUPS\", 1);\n      List<ClusteringOpDTO> dtos = sliceHandler.getFileGroupsInPendingClustering(\n          ctx.validatedQueryParam(RemoteHoodieTableFileSystemView.BASEPATH_PARAM).getOrThrow());\n      writeValueAsString(ctx, dtos);\n    }, true));\n  }\n","date":"2021-03-03 13:58:41","endLine":393,"groupId":"101","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"registerFileSlicesAPI","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-hudi-10-0.7/blobInfo/CC_OUT/blobs/09/ebeb5cce3b1c1e90b849568c0e789b66c5fa74.src","preCode":"  private void registerFileSlicesAPI() {\n    app.get(RemoteHoodieTableFileSystemView.LATEST_PARTITION_SLICES_URL, new ViewHandler(ctx -> {\n      List<FileSliceDTO> dtos = sliceHandler.getLatestFileSlices(\n          ctx.validatedQueryParam(RemoteHoodieTableFileSystemView.BASEPATH_PARAM).getOrThrow(),\n          ctx.queryParam(RemoteHoodieTableFileSystemView.PARTITION_PARAM,\"\"));\n      writeValueAsString(ctx, dtos);\n    }, true));\n\n    app.get(RemoteHoodieTableFileSystemView.LATEST_PARTITION_SLICE_URL, new ViewHandler(ctx -> {\n      List<FileSliceDTO> dtos = sliceHandler.getLatestFileSlice(\n          ctx.validatedQueryParam(RemoteHoodieTableFileSystemView.BASEPATH_PARAM).getOrThrow(),\n          ctx.queryParam(RemoteHoodieTableFileSystemView.PARTITION_PARAM,\"\"),\n          ctx.validatedQueryParam(RemoteHoodieTableFileSystemView.FILEID_PARAM).getOrThrow());\n      writeValueAsString(ctx, dtos);\n    }, true));\n\n    app.get(RemoteHoodieTableFileSystemView.LATEST_PARTITION_UNCOMPACTED_SLICES_URL, new ViewHandler(ctx -> {\n      List<FileSliceDTO> dtos = sliceHandler.getLatestUnCompactedFileSlices(\n          ctx.validatedQueryParam(RemoteHoodieTableFileSystemView.BASEPATH_PARAM).getOrThrow(),\n          ctx.queryParam(RemoteHoodieTableFileSystemView.PARTITION_PARAM,\"\"));\n      writeValueAsString(ctx, dtos);\n    }, true));\n\n    app.get(RemoteHoodieTableFileSystemView.ALL_SLICES_URL, new ViewHandler(ctx -> {\n      List<FileSliceDTO> dtos = sliceHandler.getAllFileSlices(\n          ctx.validatedQueryParam(RemoteHoodieTableFileSystemView.BASEPATH_PARAM).getOrThrow(),\n          ctx.queryParam(RemoteHoodieTableFileSystemView.PARTITION_PARAM,\"\"));\n      writeValueAsString(ctx, dtos);\n    }, true));\n\n    app.get(RemoteHoodieTableFileSystemView.LATEST_SLICES_RANGE_INSTANT_URL, new ViewHandler(ctx -> {\n      List<FileSliceDTO> dtos = sliceHandler.getLatestFileSliceInRange(\n          ctx.validatedQueryParam(RemoteHoodieTableFileSystemView.BASEPATH_PARAM).getOrThrow(), Arrays\n              .asList(ctx.validatedQueryParam(RemoteHoodieTableFileSystemView.INSTANTS_PARAM).getOrThrow().split(\",\")));\n      writeValueAsString(ctx, dtos);\n    }, true));\n\n    app.get(RemoteHoodieTableFileSystemView.LATEST_SLICES_MERGED_BEFORE_ON_INSTANT_URL, new ViewHandler(ctx -> {\n      List<FileSliceDTO> dtos = sliceHandler.getLatestMergedFileSlicesBeforeOrOn(\n          ctx.validatedQueryParam(RemoteHoodieTableFileSystemView.BASEPATH_PARAM).getOrThrow(),\n          ctx.queryParam(RemoteHoodieTableFileSystemView.PARTITION_PARAM,\"\"),\n          ctx.validatedQueryParam(RemoteHoodieTableFileSystemView.MAX_INSTANT_PARAM).getOrThrow());\n      writeValueAsString(ctx, dtos);\n    }, true));\n\n    app.get(RemoteHoodieTableFileSystemView.LATEST_SLICES_BEFORE_ON_INSTANT_URL, new ViewHandler(ctx -> {\n      List<FileSliceDTO> dtos = sliceHandler.getLatestFileSlicesBeforeOrOn(\n          ctx.validatedQueryParam(RemoteHoodieTableFileSystemView.BASEPATH_PARAM).getOrThrow(),\n          ctx.queryParam(RemoteHoodieTableFileSystemView.PARTITION_PARAM,\"\"),\n          ctx.validatedQueryParam(RemoteHoodieTableFileSystemView.MAX_INSTANT_PARAM).getOrThrow(),\n          Boolean.parseBoolean(\n              ctx.validatedQueryParam(RemoteHoodieTableFileSystemView.INCLUDE_FILES_IN_PENDING_COMPACTION_PARAM)\n                  .getOrThrow()));\n      writeValueAsString(ctx, dtos);\n    }, true));\n\n    app.get(RemoteHoodieTableFileSystemView.PENDING_COMPACTION_OPS, new ViewHandler(ctx -> {\n      List<CompactionOpDTO> dtos = sliceHandler.getPendingCompactionOperations(\n          ctx.validatedQueryParam(RemoteHoodieTableFileSystemView.BASEPATH_PARAM).getOrThrow());\n      writeValueAsString(ctx, dtos);\n    }, true));\n\n    app.get(RemoteHoodieTableFileSystemView.ALL_FILEGROUPS_FOR_PARTITION_URL, new ViewHandler(ctx -> {\n      List<FileGroupDTO> dtos = sliceHandler.getAllFileGroups(\n          ctx.validatedQueryParam(RemoteHoodieTableFileSystemView.BASEPATH_PARAM).getOrThrow(),\n          ctx.queryParam(RemoteHoodieTableFileSystemView.PARTITION_PARAM,\"\"));\n      writeValueAsString(ctx, dtos);\n    }, true));\n\n    app.post(RemoteHoodieTableFileSystemView.REFRESH_TABLE, new ViewHandler(ctx -> {\n      boolean success = sliceHandler\n          .refreshTable(ctx.validatedQueryParam(RemoteHoodieTableFileSystemView.BASEPATH_PARAM).getOrThrow());\n      writeValueAsString(ctx, success);\n    }, false));\n\n    app.get(RemoteHoodieTableFileSystemView.ALL_REPLACED_FILEGROUPS_BEFORE_OR_ON, new ViewHandler(ctx -> {\n      List<FileGroupDTO> dtos = sliceHandler.getReplacedFileGroupsBeforeOrOn(\n          ctx.validatedQueryParam(RemoteHoodieTableFileSystemView.BASEPATH_PARAM).getOrThrow(),\n          ctx.queryParam(RemoteHoodieTableFileSystemView.MAX_INSTANT_PARAM,\"\"),\n          ctx.queryParam(RemoteHoodieTableFileSystemView.PARTITION_PARAM,\"\"));\n      writeValueAsString(ctx, dtos);\n    }, true));\n\n    app.get(RemoteHoodieTableFileSystemView.ALL_REPLACED_FILEGROUPS_BEFORE, new ViewHandler(ctx -> {\n      List<FileGroupDTO> dtos = sliceHandler.getReplacedFileGroupsBefore(\n          ctx.validatedQueryParam(RemoteHoodieTableFileSystemView.BASEPATH_PARAM).getOrThrow(),\n          ctx.queryParam(RemoteHoodieTableFileSystemView.MAX_INSTANT_PARAM,\"\"),\n          ctx.queryParam(RemoteHoodieTableFileSystemView.PARTITION_PARAM,\"\"));\n      writeValueAsString(ctx, dtos);\n    }, true));\n\n    app.get(RemoteHoodieTableFileSystemView.ALL_REPLACED_FILEGROUPS_PARTITION, new ViewHandler(ctx -> {\n      List<FileGroupDTO> dtos = sliceHandler.getAllReplacedFileGroups(\n          ctx.validatedQueryParam(RemoteHoodieTableFileSystemView.BASEPATH_PARAM).getOrThrow(),\n          ctx.queryParam(RemoteHoodieTableFileSystemView.PARTITION_PARAM,\"\"));\n      writeValueAsString(ctx, dtos);\n    }, true));\n\n    app.get(RemoteHoodieTableFileSystemView.PENDING_CLUSTERING_FILEGROUPS, new ViewHandler(ctx -> {\n      List<ClusteringOpDTO> dtos = sliceHandler.getFileGroupsInPendingClustering(\n          ctx.validatedQueryParam(RemoteHoodieTableFileSystemView.BASEPATH_PARAM).getOrThrow());\n      writeValueAsString(ctx, dtos);\n    }, true));\n  }\n","realPath":"hudi-timeline-service/src/main/java/org/apache/hudi/timeline/service/RequestHandler.java","repoName":"hudi","snippetEndLine":0,"snippetStartLine":0,"startLine":276,"status":"M"}],"commitId":"f11a6c7b2d4ef045419a4522e8e203f51292b816","commitMessage":"@@@[HUDI-1553] Configuration and metrics for the TimelineService. (#2495)\n\n","date":"2021-03-03 13:58:41","modifiedFileCount":"5","status":"M","submitter":"Prashant Wason"}]
