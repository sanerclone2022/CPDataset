[{"authorTime":"2020-10-02 05:25:29","codes":[{"authorDate":"2020-10-02 05:25:29","commitOrder":1,"curCode":"  public void testCheckFailingAppearFailSafe() throws Exception {\n    FileCreateUtils.createBaseFile(basePath, \"partition/path\", \"000\", \"f1\");\n    ConsistencyGuard passing = new FailSafeConsistencyGuard(fs, getConsistencyGuardConfig());\n    assertThrows(TimeoutException.class, () -> {\n      passing.waitTillAllFilesAppear(basePath + \"/partition/path\", Arrays\n          .asList(basePath + \"/partition/path/f1_1-0-2_000.parquet\", basePath + \"/partition/path/f2_1-0-2_000.parquet\"));\n    });\n  }\n","date":"2020-10-02 05:25:29","endLine":97,"groupId":"5827","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testCheckFailingAppearFailSafe","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-hudi-10-0.7/blobInfo/CC_OUT/blobs/8b/19ac1c102c6d3fc62ef6f6b18443ea3c9c1ebf.src","preCode":"  public void testCheckFailingAppearFailSafe() throws Exception {\n    FileCreateUtils.createBaseFile(basePath, \"partition/path\", \"000\", \"f1\");\n    ConsistencyGuard passing = new FailSafeConsistencyGuard(fs, getConsistencyGuardConfig());\n    assertThrows(TimeoutException.class, () -> {\n      passing.waitTillAllFilesAppear(basePath + \"/partition/path\", Arrays\n          .asList(basePath + \"/partition/path/f1_1-0-2_000.parquet\", basePath + \"/partition/path/f2_1-0-2_000.parquet\"));\n    });\n  }\n","realPath":"hudi-client/hudi-spark-client/src/test/java/org/apache/hudi/table/TestConsistencyGuard.java","repoName":"hudi","snippetEndLine":0,"snippetStartLine":0,"startLine":90,"status":"B"},{"authorDate":"2020-10-02 05:25:29","commitOrder":1,"curCode":"  public void testCheckFailingAppearsFailSafe() throws Exception {\n    FileCreateUtils.createBaseFile(basePath, \"partition/path\", \"000\", \"f1\");\n    ConsistencyGuard passing = new FailSafeConsistencyGuard(fs, getConsistencyGuardConfig());\n    assertThrows(TimeoutException.class, () -> {\n      passing.waitTillFileAppears(new Path(basePath + \"/partition/path/f1_1-0-2_000.parquet\"));\n    });\n  }\n","date":"2020-10-02 05:25:29","endLine":114,"groupId":"5827","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testCheckFailingAppearsFailSafe","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-hudi-10-0.7/blobInfo/CC_OUT/blobs/8b/19ac1c102c6d3fc62ef6f6b18443ea3c9c1ebf.src","preCode":"  public void testCheckFailingAppearsFailSafe() throws Exception {\n    FileCreateUtils.createBaseFile(basePath, \"partition/path\", \"000\", \"f1\");\n    ConsistencyGuard passing = new FailSafeConsistencyGuard(fs, getConsistencyGuardConfig());\n    assertThrows(TimeoutException.class, () -> {\n      passing.waitTillFileAppears(new Path(basePath + \"/partition/path/f1_1-0-2_000.parquet\"));\n    });\n  }\n","realPath":"hudi-client/hudi-spark-client/src/test/java/org/apache/hudi/table/TestConsistencyGuard.java","repoName":"hudi","snippetEndLine":0,"snippetStartLine":0,"startLine":108,"status":"B"}],"commitId":"1f7add92916c37b05be270d9c75a9042134ec506","commitMessage":"@@@[HUDI-1089] Refactor hudi-client to support multi-engine (#1827)\n\n- This change breaks `hudi-client` into `hudi-client-common` and `hudi-spark-client` modules \n- Simple usages of Spark using jsc.parallelize() has been redone using EngineContext#map.  EngineContext#flatMap etc\n- Code changes in the PR.  break classes into `BaseXYZ` parent classes with no spark dependencies living in `hudi-client-common`\n- Classes on `hudi-spark-client` are named `SparkXYZ` extending the parent classes with all the Spark dependencies\n- To simplify/cleanup.  HoodieIndex#fetchRecordLocation has been removed and its usages in tests replaced with alternatives\n\nCo-authored-by: Vinoth Chandar <vinoth@apache.org>","date":"2020-10-02 05:25:29","modifiedFileCount":"31","status":"B","submitter":"Mathieu"},{"authorTime":"2021-05-12 01:01:45","codes":[{"authorDate":"2021-05-12 01:01:45","commitOrder":2,"curCode":"  public void testCheckFailingAppearFailSafe() throws Exception {\n    FileCreateUtils.createBaseFile(basePath, \"partition/path\", \"000\", \"f1\");\n    ConsistencyGuard passing = new FailSafeConsistencyGuard(fs, getConsistencyGuardConfig());\n    assertThrows(TimeoutException.class, () -> {\n      passing.waitTillAllFilesAppear(basePath + \"/partition/path\", Arrays\n          .asList(basePath + \"/partition/path/f1_1-0-2_000\" + BASE_FILE_EXTENSION,\n              basePath + \"/partition/path/f2_1-0-2_000\" + BASE_FILE_EXTENSION));\n    });\n  }\n","date":"2021-05-12 01:01:45","endLine":103,"groupId":"10584","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testCheckFailingAppearFailSafe","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-hudi-10-0.7/blobInfo/CC_OUT/blobs/e7/cd5ce0450623c6a764b018bcbd573f4f2ce202.src","preCode":"  public void testCheckFailingAppearFailSafe() throws Exception {\n    FileCreateUtils.createBaseFile(basePath, \"partition/path\", \"000\", \"f1\");\n    ConsistencyGuard passing = new FailSafeConsistencyGuard(fs, getConsistencyGuardConfig());\n    assertThrows(TimeoutException.class, () -> {\n      passing.waitTillAllFilesAppear(basePath + \"/partition/path\", Arrays\n          .asList(basePath + \"/partition/path/f1_1-0-2_000.parquet\", basePath + \"/partition/path/f2_1-0-2_000.parquet\"));\n    });\n  }\n","realPath":"hudi-client/hudi-spark-client/src/test/java/org/apache/hudi/table/TestConsistencyGuard.java","repoName":"hudi","snippetEndLine":0,"snippetStartLine":0,"startLine":95,"status":"M"},{"authorDate":"2021-05-12 01:01:45","commitOrder":2,"curCode":"  public void testCheckFailingAppearsFailSafe() throws Exception {\n    FileCreateUtils.createBaseFile(basePath, \"partition/path\", \"000\", \"f1\");\n    ConsistencyGuard passing = new FailSafeConsistencyGuard(fs, getConsistencyGuardConfig());\n    assertThrows(TimeoutException.class, () -> {\n      passing.waitTillFileAppears(new Path(basePath + \"/partition/path/f1_1-0-2_000\" + BASE_FILE_EXTENSION));\n    });\n  }\n","date":"2021-05-12 01:01:45","endLine":121,"groupId":"10584","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testCheckFailingAppearsFailSafe","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-hudi-10-0.7/blobInfo/CC_OUT/blobs/e7/cd5ce0450623c6a764b018bcbd573f4f2ce202.src","preCode":"  public void testCheckFailingAppearsFailSafe() throws Exception {\n    FileCreateUtils.createBaseFile(basePath, \"partition/path\", \"000\", \"f1\");\n    ConsistencyGuard passing = new FailSafeConsistencyGuard(fs, getConsistencyGuardConfig());\n    assertThrows(TimeoutException.class, () -> {\n      passing.waitTillFileAppears(new Path(basePath + \"/partition/path/f1_1-0-2_000.parquet\"));\n    });\n  }\n","realPath":"hudi-client/hudi-spark-client/src/test/java/org/apache/hudi/table/TestConsistencyGuard.java","repoName":"hudi","snippetEndLine":0,"snippetStartLine":0,"startLine":115,"status":"M"}],"commitId":"be9db2c4f5a570fcaa555618b34ad11109ed6b00","commitMessage":"@@@[HUDI-1055] Remove hardcoded parquet in tests (#2740)\n\n* Remove hardcoded parquet in tests\n* Use DataFileUtils.getInstance\n* Renaming DataFileUtils to BaseFileUtils\n\nCo-authored-by: Vinoth Chandar <vinoth@apache.org>","date":"2021-05-12 01:01:45","modifiedFileCount":"40","status":"M","submitter":"TeRS-K"}]
