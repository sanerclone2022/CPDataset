[{"authorTime":"2019-08-28 10:19:52","codes":[{"authorDate":"2019-08-28 10:19:52","commitOrder":2,"curCode":"  public void testGetAllPendingCompactionOperationsWithDupFileId() throws IOException {\n    \r\n    HoodieCompactionPlan plan1 = createCompactionPlan(metaClient, \"000\", \"001\", 10, true, true);\n    HoodieCompactionPlan plan2 = createCompactionPlan(metaClient, \"002\", \"003\", 0, false, false);\n    scheduleCompaction(metaClient, \"001\", plan1);\n    scheduleCompaction(metaClient, \"003\", plan2);\n    \r\n    plan1.getOperations().get(0).setDataFilePath(\"bla\");\n    scheduleCompaction(metaClient, \"005\", plan1);\n    metaClient = new HoodieTableMetaClient(metaClient.getHadoopConf(), basePath, true);\n    Map<HoodieFileGroupId, Pair<String, HoodieCompactionOperation>> res =\n        CompactionUtils.getAllPendingCompactionOperations(metaClient);\n  }\n","date":"2019-08-28 21:19:43","endLine":171,"groupId":"1171","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testGetAllPendingCompactionOperationsWithDupFileId","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-hudi-10-0.7/blobInfo/CC_OUT/blobs/a5/a139dd6b3e715d3c609df88dcd7e84fd9706bf.src","preCode":"  public void testGetAllPendingCompactionOperationsWithDupFileId() throws IOException {\n    \r\n    HoodieCompactionPlan plan1 = createCompactionPlan(metaClient, \"000\", \"001\", 10, true, true);\n    HoodieCompactionPlan plan2 = createCompactionPlan(metaClient, \"002\", \"003\", 0, false, false);\n    scheduleCompaction(metaClient, \"001\", plan1);\n    scheduleCompaction(metaClient, \"003\", plan2);\n    \r\n    plan1.getOperations().get(0).setDataFilePath(\"bla\");\n    scheduleCompaction(metaClient, \"005\", plan1);\n    metaClient = new HoodieTableMetaClient(metaClient.getHadoopConf(), basePath, true);\n    Map<HoodieFileGroupId, Pair<String, HoodieCompactionOperation>> res =\n        CompactionUtils.getAllPendingCompactionOperations(metaClient);\n  }\n","realPath":"hudi-common/src/test/java/org/apache/hudi/common/util/TestCompactionUtils.java","repoName":"hudi","snippetEndLine":0,"snippetStartLine":0,"startLine":159,"status":"MB"},{"authorDate":"2019-08-28 10:19:52","commitOrder":2,"curCode":"  public void testGetAllPendingCompactionOperationsWithFullDupFileId() throws IOException {\n    \r\n    HoodieCompactionPlan plan1 = createCompactionPlan(metaClient, \"000\", \"001\", 10, true, true);\n    HoodieCompactionPlan plan2 = createCompactionPlan(metaClient, \"002\", \"003\", 0, false, false);\n    scheduleCompaction(metaClient, \"001\", plan1);\n    scheduleCompaction(metaClient, \"003\", plan2);\n    \r\n    scheduleCompaction(metaClient, \"005\", plan1);\n    metaClient = new HoodieTableMetaClient(metaClient.getHadoopConf(), basePath, true);\n    Map<HoodieFileGroupId, Pair<String, HoodieCompactionOperation>> res =\n        CompactionUtils.getAllPendingCompactionOperations(metaClient);\n  }\n","date":"2019-08-28 21:19:43","endLine":185,"groupId":"4347","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testGetAllPendingCompactionOperationsWithFullDupFileId","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-hudi-10-0.7/blobInfo/CC_OUT/blobs/a5/a139dd6b3e715d3c609df88dcd7e84fd9706bf.src","preCode":"  public void testGetAllPendingCompactionOperationsWithFullDupFileId() throws IOException {\n    \r\n    HoodieCompactionPlan plan1 = createCompactionPlan(metaClient, \"000\", \"001\", 10, true, true);\n    HoodieCompactionPlan plan2 = createCompactionPlan(metaClient, \"002\", \"003\", 0, false, false);\n    scheduleCompaction(metaClient, \"001\", plan1);\n    scheduleCompaction(metaClient, \"003\", plan2);\n    \r\n    scheduleCompaction(metaClient, \"005\", plan1);\n    metaClient = new HoodieTableMetaClient(metaClient.getHadoopConf(), basePath, true);\n    Map<HoodieFileGroupId, Pair<String, HoodieCompactionOperation>> res =\n        CompactionUtils.getAllPendingCompactionOperations(metaClient);\n  }\n","realPath":"hudi-common/src/test/java/org/apache/hudi/common/util/TestCompactionUtils.java","repoName":"hudi","snippetEndLine":0,"snippetStartLine":0,"startLine":174,"status":"B"}],"commitId":"41dbac69037ddd770a94cf41f39beff92aec9568","commitMessage":"@@@Fixed unit test\n","date":"2019-08-28 21:19:43","modifiedFileCount":"1","status":"M","submitter":"Alex Filipchik"},{"authorTime":"2019-08-28 10:19:52","codes":[{"authorDate":"2020-05-06 19:15:20","commitOrder":3,"curCode":"  public void testGetAllPendingCompactionOperationsWithDupFileId() throws IOException {\n    \r\n    HoodieCompactionPlan plan1 = createCompactionPlan(metaClient, \"000\", \"001\", 10, true, true);\n    HoodieCompactionPlan plan2 = createCompactionPlan(metaClient, \"002\", \"003\", 0, false, false);\n    scheduleCompaction(metaClient, \"001\", plan1);\n    scheduleCompaction(metaClient, \"003\", plan2);\n    \r\n    plan1.getOperations().get(0).setDataFilePath(\"bla\");\n    scheduleCompaction(metaClient, \"005\", plan1);\n    metaClient = new HoodieTableMetaClient(metaClient.getHadoopConf(), basePath, true);\n    assertThrows(IllegalStateException.class, () -> {\n      CompactionUtils.getAllPendingCompactionOperations(metaClient);\n    });\n  }\n","date":"2020-05-06 19:15:20","endLine":195,"groupId":"1171","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testGetAllPendingCompactionOperationsWithDupFileId","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-hudi-10-0.7/blobInfo/CC_OUT/blobs/26/9301508053135aa464b485aa311b02a6cf4a31.src","preCode":"  public void testGetAllPendingCompactionOperationsWithDupFileId() throws IOException {\n    \r\n    HoodieCompactionPlan plan1 = createCompactionPlan(metaClient, \"000\", \"001\", 10, true, true);\n    HoodieCompactionPlan plan2 = createCompactionPlan(metaClient, \"002\", \"003\", 0, false, false);\n    scheduleCompaction(metaClient, \"001\", plan1);\n    scheduleCompaction(metaClient, \"003\", plan2);\n    \r\n    plan1.getOperations().get(0).setDataFilePath(\"bla\");\n    scheduleCompaction(metaClient, \"005\", plan1);\n    metaClient = new HoodieTableMetaClient(metaClient.getHadoopConf(), basePath, true);\n    Map<HoodieFileGroupId, Pair<String, HoodieCompactionOperation>> res =\n        CompactionUtils.getAllPendingCompactionOperations(metaClient);\n  }\n","realPath":"hudi-common/src/test/java/org/apache/hudi/common/util/TestCompactionUtils.java","repoName":"hudi","snippetEndLine":0,"snippetStartLine":0,"startLine":182,"status":"M"},{"authorDate":"2019-08-28 10:19:52","commitOrder":3,"curCode":"  public void testGetAllPendingCompactionOperationsWithFullDupFileId() throws IOException {\n    \r\n    HoodieCompactionPlan plan1 = createCompactionPlan(metaClient, \"000\", \"001\", 10, true, true);\n    HoodieCompactionPlan plan2 = createCompactionPlan(metaClient, \"002\", \"003\", 0, false, false);\n    scheduleCompaction(metaClient, \"001\", plan1);\n    scheduleCompaction(metaClient, \"003\", plan2);\n    \r\n    scheduleCompaction(metaClient, \"005\", plan1);\n    metaClient = new HoodieTableMetaClient(metaClient.getHadoopConf(), basePath, true);\n    Map<HoodieFileGroupId, Pair<String, HoodieCompactionOperation>> res =\n        CompactionUtils.getAllPendingCompactionOperations(metaClient);\n  }\n","date":"2019-08-28 21:19:43","endLine":185,"groupId":"4347","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testGetAllPendingCompactionOperationsWithFullDupFileId","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-hudi-10-0.7/blobInfo/CC_OUT/blobs/a5/a139dd6b3e715d3c609df88dcd7e84fd9706bf.src","preCode":"  public void testGetAllPendingCompactionOperationsWithFullDupFileId() throws IOException {\n    \r\n    HoodieCompactionPlan plan1 = createCompactionPlan(metaClient, \"000\", \"001\", 10, true, true);\n    HoodieCompactionPlan plan2 = createCompactionPlan(metaClient, \"002\", \"003\", 0, false, false);\n    scheduleCompaction(metaClient, \"001\", plan1);\n    scheduleCompaction(metaClient, \"003\", plan2);\n    \r\n    scheduleCompaction(metaClient, \"005\", plan1);\n    metaClient = new HoodieTableMetaClient(metaClient.getHadoopConf(), basePath, true);\n    Map<HoodieFileGroupId, Pair<String, HoodieCompactionOperation>> res =\n        CompactionUtils.getAllPendingCompactionOperations(metaClient);\n  }\n","realPath":"hudi-common/src/test/java/org/apache/hudi/common/util/TestCompactionUtils.java","repoName":"hudi","snippetEndLine":0,"snippetStartLine":0,"startLine":174,"status":"N"}],"commitId":"366bb10d8c4fe98424f09a6cf6f4aee7716451a4","commitMessage":"@@@[HUDI-812] Migrate hudi common tests to JUnit 5 (#1590)\n\n* [HUDI-812] Migrate hudi-common tests to JUnit 5","date":"2020-05-06 19:15:20","modifiedFileCount":"38","status":"M","submitter":"Raymond Xu"},{"authorTime":"2021-02-20 09:54:26","codes":[{"authorDate":"2021-02-20 09:54:26","commitOrder":4,"curCode":"  public void testGetAllPendingCompactionOperationsWithDupFileId() throws IOException {\n    \r\n    HoodieCompactionPlan plan1 = createCompactionPlan(metaClient, \"000\", \"001\", 10, true, true);\n    HoodieCompactionPlan plan2 = createCompactionPlan(metaClient, \"002\", \"003\", 0, false, false);\n    scheduleCompaction(metaClient, \"001\", plan1);\n    scheduleCompaction(metaClient, \"003\", plan2);\n    \r\n    plan1.getOperations().get(0).setDataFilePath(\"bla\");\n    scheduleCompaction(metaClient, \"005\", plan1);\n    metaClient = HoodieTableMetaClient.builder().setConf(metaClient.getHadoopConf()).setBasePath(basePath).setLoadActiveTimelineOnLoad(true).build();\n    assertThrows(IllegalStateException.class, () -> {\n      CompactionUtils.getAllPendingCompactionOperations(metaClient);\n    });\n  }\n","date":"2021-02-20 09:54:26","endLine":195,"groupId":"10940","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testGetAllPendingCompactionOperationsWithDupFileId","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-hudi-10-0.7/blobInfo/CC_OUT/blobs/92/c40c739bfaaf9e2f3a3ce555eba0577e09b8f4.src","preCode":"  public void testGetAllPendingCompactionOperationsWithDupFileId() throws IOException {\n    \r\n    HoodieCompactionPlan plan1 = createCompactionPlan(metaClient, \"000\", \"001\", 10, true, true);\n    HoodieCompactionPlan plan2 = createCompactionPlan(metaClient, \"002\", \"003\", 0, false, false);\n    scheduleCompaction(metaClient, \"001\", plan1);\n    scheduleCompaction(metaClient, \"003\", plan2);\n    \r\n    plan1.getOperations().get(0).setDataFilePath(\"bla\");\n    scheduleCompaction(metaClient, \"005\", plan1);\n    metaClient = new HoodieTableMetaClient(metaClient.getHadoopConf(), basePath, true);\n    assertThrows(IllegalStateException.class, () -> {\n      CompactionUtils.getAllPendingCompactionOperations(metaClient);\n    });\n  }\n","realPath":"hudi-common/src/test/java/org/apache/hudi/common/util/TestCompactionUtils.java","repoName":"hudi","snippetEndLine":0,"snippetStartLine":0,"startLine":182,"status":"M"},{"authorDate":"2021-02-20 09:54:26","commitOrder":4,"curCode":"  public void testGetAllPendingCompactionOperationsWithFullDupFileId() throws IOException {\n    \r\n    HoodieCompactionPlan plan1 = createCompactionPlan(metaClient, \"000\", \"001\", 10, true, true);\n    HoodieCompactionPlan plan2 = createCompactionPlan(metaClient, \"002\", \"003\", 0, false, false);\n    scheduleCompaction(metaClient, \"001\", plan1);\n    scheduleCompaction(metaClient, \"003\", plan2);\n    \r\n    scheduleCompaction(metaClient, \"005\", plan1);\n    metaClient = HoodieTableMetaClient.builder().setConf(metaClient.getHadoopConf()).setBasePath(basePath).setLoadActiveTimelineOnLoad(true).build();\n    Map<HoodieFileGroupId, Pair<String, HoodieCompactionOperation>> res =\n        CompactionUtils.getAllPendingCompactionOperations(metaClient);\n  }\n","date":"2021-02-20 09:54:26","endLine":209,"groupId":"10940","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testGetAllPendingCompactionOperationsWithFullDupFileId","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-hudi-10-0.7/blobInfo/CC_OUT/blobs/92/c40c739bfaaf9e2f3a3ce555eba0577e09b8f4.src","preCode":"  public void testGetAllPendingCompactionOperationsWithFullDupFileId() throws IOException {\n    \r\n    HoodieCompactionPlan plan1 = createCompactionPlan(metaClient, \"000\", \"001\", 10, true, true);\n    HoodieCompactionPlan plan2 = createCompactionPlan(metaClient, \"002\", \"003\", 0, false, false);\n    scheduleCompaction(metaClient, \"001\", plan1);\n    scheduleCompaction(metaClient, \"003\", plan2);\n    \r\n    scheduleCompaction(metaClient, \"005\", plan1);\n    metaClient = new HoodieTableMetaClient(metaClient.getHadoopConf(), basePath, true);\n    Map<HoodieFileGroupId, Pair<String, HoodieCompactionOperation>> res =\n        CompactionUtils.getAllPendingCompactionOperations(metaClient);\n  }\n","realPath":"hudi-common/src/test/java/org/apache/hudi/common/util/TestCompactionUtils.java","repoName":"hudi","snippetEndLine":0,"snippetStartLine":0,"startLine":198,"status":"M"}],"commitId":"c9fcf964b2bae56a54cb72951c8d8999eb323ed6","commitMessage":"@@@[HUDI-1315] Adding builder for HoodieTableMetaClient initialization (#2534)\n\n","date":"2021-02-20 09:54:26","modifiedFileCount":"57","status":"M","submitter":"Sivabalan Narayanan"}]
