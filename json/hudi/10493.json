[{"authorTime":"2020-10-02 05:25:29","codes":[{"authorDate":"2020-12-20 11:25:27","commitOrder":2,"curCode":"  public Iterator<List<WriteStatus>> handleInsert(String idPfx, Iterator<HoodieRecord<T>> recordItr)\n      throws Exception {\n    \r\n    if (!recordItr.hasNext()) {\n      LOG.info(\"Empty partition\");\n      return Collections.singletonList((List<WriteStatus>) Collections.EMPTY_LIST).iterator();\n    }\n    return new JavaLazyInsertIterable<>(recordItr, true, config, instantTime, table, idPfx,\n        taskContextSupplier, new CreateHandleFactory<>());\n  }\n","date":"2020-12-20 11:25:27","endLine":310,"groupId":"3976","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"handleInsert","params":"(StringidPfx@Iterator<HoodieRecord<T>>recordItr)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-hudi-10-0.7/blobInfo/CC_OUT/blobs/17/b02e8c15259b31f7b792f54a80aaf838ff7e92.src","preCode":"  public Iterator<List<WriteStatus>> handleInsert(String idPfx, Iterator<HoodieRecord<T>> recordItr)\n      throws Exception {\n    \r\n    if (!recordItr.hasNext()) {\n      LOG.info(\"Empty partition\");\n      return Collections.singletonList((List<WriteStatus>) Collections.EMPTY_LIST).iterator();\n    }\n    return new JavaLazyInsertIterable<>(recordItr, true, config, instantTime, table, idPfx,\n        taskContextSupplier, new CreateHandleFactory<>());\n  }\n","realPath":"hudi-client/hudi-java-client/src/main/java/org/apache/hudi/table/action/commit/BaseJavaCommitActionExecutor.java","repoName":"hudi","snippetEndLine":0,"snippetStartLine":0,"startLine":301,"status":"B"},{"authorDate":"2020-10-02 05:25:29","commitOrder":2,"curCode":"  public Iterator<List<WriteStatus>> handleInsert(String idPfx, Iterator<HoodieRecord<T>> recordItr)\n      throws Exception {\n    \r\n    if (!recordItr.hasNext()) {\n      LOG.info(\"Empty partition\");\n      return Collections.singletonList((List<WriteStatus>) Collections.EMPTY_LIST).iterator();\n    }\n    return new SparkLazyInsertIterable(recordItr, true, config, instantTime, table, idPfx,\n        taskContextSupplier, new CreateHandleFactory<>());\n  }\n","date":"2020-10-02 05:25:29","endLine":329,"groupId":"154","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"handleInsert","params":"(StringidPfx@Iterator<HoodieRecord<T>>recordItr)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-hudi-10-0.7/blobInfo/CC_OUT/blobs/36/cca8cd1403c5fe6ced6d0b42aa6684081520d7.src","preCode":"  public Iterator<List<WriteStatus>> handleInsert(String idPfx, Iterator<HoodieRecord<T>> recordItr)\n      throws Exception {\n    \r\n    if (!recordItr.hasNext()) {\n      LOG.info(\"Empty partition\");\n      return Collections.singletonList((List<WriteStatus>) Collections.EMPTY_LIST).iterator();\n    }\n    return new SparkLazyInsertIterable(recordItr, true, config, instantTime, table, idPfx,\n        taskContextSupplier, new CreateHandleFactory<>());\n  }\n","realPath":"hudi-client/hudi-spark-client/src/main/java/org/apache/hudi/table/action/commit/BaseSparkCommitActionExecutor.java","repoName":"hudi","snippetEndLine":0,"snippetStartLine":0,"startLine":320,"status":"NB"}],"commitId":"e4e2fbc3bb2c4796c6813114dd1c37ffa5a1e03a","commitMessage":"@@@[HUDI-1419] Add base implementation for hudi java client (#2286)\n\n","date":"2020-12-20 11:25:27","modifiedFileCount":"2","status":"M","submitter":"Shen Hong"},{"authorTime":"2020-10-02 05:25:29","codes":[{"authorDate":"2021-02-23 20:50:55","commitOrder":3,"curCode":"  public Iterator<List<WriteStatus>> handleInsert(String idPfx, Iterator<HoodieRecord<T>> recordItr) {\n    \r\n    if (!recordItr.hasNext()) {\n      LOG.info(\"Empty partition\");\n      return Collections.singletonList((List<WriteStatus>) Collections.EMPTY_LIST).iterator();\n    }\n    return new JavaLazyInsertIterable<>(recordItr, true, config, instantTime, table, idPfx,\n        taskContextSupplier, new CreateHandleFactory<>());\n  }\n","date":"2021-02-23 20:50:55","endLine":309,"groupId":"10493","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"handleInsert","params":"(StringidPfx@Iterator<HoodieRecord<T>>recordItr)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-hudi-10-0.7/blobInfo/CC_OUT/blobs/a4/a6a4f92108caab340aede932c94cc52cf7699e.src","preCode":"  public Iterator<List<WriteStatus>> handleInsert(String idPfx, Iterator<HoodieRecord<T>> recordItr)\n      throws Exception {\n    \r\n    if (!recordItr.hasNext()) {\n      LOG.info(\"Empty partition\");\n      return Collections.singletonList((List<WriteStatus>) Collections.EMPTY_LIST).iterator();\n    }\n    return new JavaLazyInsertIterable<>(recordItr, true, config, instantTime, table, idPfx,\n        taskContextSupplier, new CreateHandleFactory<>());\n  }\n","realPath":"hudi-client/hudi-java-client/src/main/java/org/apache/hudi/table/action/commit/BaseJavaCommitActionExecutor.java","repoName":"hudi","snippetEndLine":0,"snippetStartLine":0,"startLine":301,"status":"M"},{"authorDate":"2020-10-02 05:25:29","commitOrder":3,"curCode":"  public Iterator<List<WriteStatus>> handleInsert(String idPfx, Iterator<HoodieRecord<T>> recordItr)\n      throws Exception {\n    \r\n    if (!recordItr.hasNext()) {\n      LOG.info(\"Empty partition\");\n      return Collections.singletonList((List<WriteStatus>) Collections.EMPTY_LIST).iterator();\n    }\n    return new SparkLazyInsertIterable(recordItr, true, config, instantTime, table, idPfx,\n        taskContextSupplier, new CreateHandleFactory<>());\n  }\n","date":"2020-10-02 05:25:29","endLine":329,"groupId":"10493","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"handleInsert","params":"(StringidPfx@Iterator<HoodieRecord<T>>recordItr)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-hudi-10-0.7/blobInfo/CC_OUT/blobs/36/cca8cd1403c5fe6ced6d0b42aa6684081520d7.src","preCode":"  public Iterator<List<WriteStatus>> handleInsert(String idPfx, Iterator<HoodieRecord<T>> recordItr)\n      throws Exception {\n    \r\n    if (!recordItr.hasNext()) {\n      LOG.info(\"Empty partition\");\n      return Collections.singletonList((List<WriteStatus>) Collections.EMPTY_LIST).iterator();\n    }\n    return new SparkLazyInsertIterable(recordItr, true, config, instantTime, table, idPfx,\n        taskContextSupplier, new CreateHandleFactory<>());\n  }\n","realPath":"hudi-client/hudi-spark-client/src/main/java/org/apache/hudi/table/action/commit/BaseSparkCommitActionExecutor.java","repoName":"hudi","snippetEndLine":0,"snippetStartLine":0,"startLine":320,"status":"N"}],"commitId":"2efd0760acb5de06adc0f0a4a045df792ff3b6ab","commitMessage":"@@@[HUDI-1477] Support copyOnWriteTable in java client (#2382)\n\n","date":"2021-02-23 20:50:55","modifiedFileCount":"4","status":"M","submitter":"Shen Hong"}]
