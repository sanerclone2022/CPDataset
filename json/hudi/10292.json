[{"authorTime":"2020-01-13 02:48:52","codes":[{"authorDate":"2020-03-10 09:17:51","commitOrder":4,"curCode":"  public static void main(String[] args) throws IOException {\n    \r\n    final Config cfg = new Config();\n    new JCommander(cfg, null, args);\n\n    \r\n    SparkSession spark = SparkSession.builder().appName(\"Hoodie-snapshot-exporter\")\n        .config(\"spark.serializer\", \"org.apache.spark.serializer.KryoSerializer\").getOrCreate();\n    LOG.info(\"Initializing spark job.\");\n\n    HoodieSnapshotExporter hoodieSnapshotExporter = new HoodieSnapshotExporter();\n    hoodieSnapshotExporter.export(spark, cfg);\n\n    \r\n    spark.stop();\n  }\n","date":"2020-03-10 09:17:51","endLine":223,"groupId":"5890","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"main","params":"(String[]args)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-hudi-10-0.7/blobInfo/CC_OUT/blobs/f7/85d7430431e32b1d36e278f537499943223c50.src","preCode":"  public static void main(String[] args) throws IOException {\n    \r\n    final Config cfg = new Config();\n    new JCommander(cfg, null, args);\n\n    \r\n    SparkSession spark = SparkSession.builder().appName(\"Hoodie-snapshot-exporter\")\n        .config(\"spark.serializer\", \"org.apache.spark.serializer.KryoSerializer\").getOrCreate();\n    LOG.info(\"Initializing spark job.\");\n\n    HoodieSnapshotExporter hoodieSnapshotExporter = new HoodieSnapshotExporter();\n    hoodieSnapshotExporter.export(spark, cfg);\n\n    \r\n    spark.stop();\n  }\n","realPath":"hudi-utilities/src/main/java/org/apache/hudi/utilities/HoodieSnapshotExporter.java","repoName":"hudi","snippetEndLine":0,"snippetStartLine":0,"startLine":208,"status":"B"},{"authorDate":"2020-01-13 02:48:52","commitOrder":4,"curCode":"  public static void main(String[] args) throws IOException {\n    \r\n    final Config cfg = new Config();\n    new JCommander(cfg, null, args);\n    LOG.info(String.format(\"Snapshot hoodie table from %s targetBasePath to %stargetBasePath\", cfg.basePath,\n        cfg.outputPath));\n\n    \r\n    SparkConf sparkConf = new SparkConf().setAppName(\"Hoodie-snapshot-copier\");\n    sparkConf.set(\"spark.serializer\", \"org.apache.spark.serializer.KryoSerializer\");\n    JavaSparkContext jsc = new JavaSparkContext(sparkConf);\n    LOG.info(\"Initializing spark job.\");\n\n    \r\n    HoodieSnapshotCopier copier = new HoodieSnapshotCopier();\n    copier.snapshot(jsc, cfg.basePath, cfg.outputPath, cfg.shouldAssumeDatePartitioning);\n\n    \r\n    jsc.stop();\n  }\n","date":"2020-01-13 02:48:52","endLine":183,"groupId":"2401","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"main","params":"(String[]args)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-hudi-10-0.7/blobInfo/CC_OUT/blobs/52/2d39a182156d2230a927b7911a7103754aadd9.src","preCode":"  public static void main(String[] args) throws IOException {\n    \r\n    final Config cfg = new Config();\n    new JCommander(cfg, null, args);\n    LOG.info(String.format(\"Snapshot hoodie table from %s targetBasePath to %stargetBasePath\", cfg.basePath,\n        cfg.outputPath));\n\n    \r\n    SparkConf sparkConf = new SparkConf().setAppName(\"Hoodie-snapshot-copier\");\n    sparkConf.set(\"spark.serializer\", \"org.apache.spark.serializer.KryoSerializer\");\n    JavaSparkContext jsc = new JavaSparkContext(sparkConf);\n    LOG.info(\"Initializing spark job.\");\n\n    \r\n    HoodieSnapshotCopier copier = new HoodieSnapshotCopier();\n    copier.snapshot(jsc, cfg.basePath, cfg.outputPath, cfg.shouldAssumeDatePartitioning);\n\n    \r\n    jsc.stop();\n  }\n","realPath":"hudi-utilities/src/main/java/org/apache/hudi/utilities/HoodieSnapshotCopier.java","repoName":"hudi","snippetEndLine":0,"snippetStartLine":0,"startLine":164,"status":"NB"}],"commitId":"44700d531a74f24762903df2729577a0d96e4ec0","commitMessage":"@@@[HUDI-344] Hudi Dataset Snapshot Exporter (#1360)\n\nCo-authored-by: jason1993 <261049174@qq.com>","date":"2020-03-10 09:17:51","modifiedFileCount":"0","status":"M","submitter":"openopen2"},{"authorTime":"2020-01-13 02:48:52","codes":[{"authorDate":"2020-03-25 18:02:24","commitOrder":5,"curCode":"  public static void main(String[] args) throws IOException {\n    final Config cfg = new Config();\n    new JCommander(cfg, null, args);\n\n    SparkConf sparkConf = new SparkConf().setAppName(\"Hoodie-snapshot-exporter\");\n    sparkConf.set(\"spark.serializer\", \"org.apache.spark.serializer.KryoSerializer\");\n    JavaSparkContext jsc = new JavaSparkContext(sparkConf);\n    LOG.info(\"Initializing spark job.\");\n\n    try {\n      new HoodieSnapshotExporter().export(jsc, cfg);\n    } finally {\n      jsc.stop();\n    }\n  }\n","date":"2020-03-25 18:02:24","endLine":271,"groupId":"2401","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"main","params":"(String[]args)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-hudi-10-0.7/blobInfo/CC_OUT/blobs/7d/f630a11e3bb4f3300f4ce28f06568e1b040585.src","preCode":"  public static void main(String[] args) throws IOException {\n    \r\n    final Config cfg = new Config();\n    new JCommander(cfg, null, args);\n\n    \r\n    SparkSession spark = SparkSession.builder().appName(\"Hoodie-snapshot-exporter\")\n        .config(\"spark.serializer\", \"org.apache.spark.serializer.KryoSerializer\").getOrCreate();\n    LOG.info(\"Initializing spark job.\");\n\n    HoodieSnapshotExporter hoodieSnapshotExporter = new HoodieSnapshotExporter();\n    hoodieSnapshotExporter.export(spark, cfg);\n\n    \r\n    spark.stop();\n  }\n","realPath":"hudi-utilities/src/main/java/org/apache/hudi/utilities/HoodieSnapshotExporter.java","repoName":"hudi","snippetEndLine":0,"snippetStartLine":0,"startLine":257,"status":"M"},{"authorDate":"2020-01-13 02:48:52","commitOrder":5,"curCode":"  public static void main(String[] args) throws IOException {\n    \r\n    final Config cfg = new Config();\n    new JCommander(cfg, null, args);\n    LOG.info(String.format(\"Snapshot hoodie table from %s targetBasePath to %stargetBasePath\", cfg.basePath,\n        cfg.outputPath));\n\n    \r\n    SparkConf sparkConf = new SparkConf().setAppName(\"Hoodie-snapshot-copier\");\n    sparkConf.set(\"spark.serializer\", \"org.apache.spark.serializer.KryoSerializer\");\n    JavaSparkContext jsc = new JavaSparkContext(sparkConf);\n    LOG.info(\"Initializing spark job.\");\n\n    \r\n    HoodieSnapshotCopier copier = new HoodieSnapshotCopier();\n    copier.snapshot(jsc, cfg.basePath, cfg.outputPath, cfg.shouldAssumeDatePartitioning);\n\n    \r\n    jsc.stop();\n  }\n","date":"2020-01-13 02:48:52","endLine":183,"groupId":"2401","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"main","params":"(String[]args)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-hudi-10-0.7/blobInfo/CC_OUT/blobs/52/2d39a182156d2230a927b7911a7103754aadd9.src","preCode":"  public static void main(String[] args) throws IOException {\n    \r\n    final Config cfg = new Config();\n    new JCommander(cfg, null, args);\n    LOG.info(String.format(\"Snapshot hoodie table from %s targetBasePath to %stargetBasePath\", cfg.basePath,\n        cfg.outputPath));\n\n    \r\n    SparkConf sparkConf = new SparkConf().setAppName(\"Hoodie-snapshot-copier\");\n    sparkConf.set(\"spark.serializer\", \"org.apache.spark.serializer.KryoSerializer\");\n    JavaSparkContext jsc = new JavaSparkContext(sparkConf);\n    LOG.info(\"Initializing spark job.\");\n\n    \r\n    HoodieSnapshotCopier copier = new HoodieSnapshotCopier();\n    copier.snapshot(jsc, cfg.basePath, cfg.outputPath, cfg.shouldAssumeDatePartitioning);\n\n    \r\n    jsc.stop();\n  }\n","realPath":"hudi-utilities/src/main/java/org/apache/hudi/utilities/HoodieSnapshotCopier.java","repoName":"hudi","snippetEndLine":0,"snippetStartLine":0,"startLine":164,"status":"N"}],"commitId":"bc82e2be6cf080ab99092758368e91f509a2004c","commitMessage":"@@@[HUDI-711] Refactor exporter main logic (#1436)\n\n* Refactor exporter main logic\n* break main method into multiple readable methods\n* fix bug of passing wrong file list\n* avoid deleting output path when exists\n* throw exception to early abort on multiple cases\n* use JavaSparkContext instead of SparkSession\n* improve unit test for expected exceptions","date":"2020-03-25 18:02:24","modifiedFileCount":"2","status":"M","submitter":"Raymond Xu"},{"authorTime":"2020-12-31 17:20:02","codes":[{"authorDate":"2020-03-25 18:02:24","commitOrder":6,"curCode":"  public static void main(String[] args) throws IOException {\n    final Config cfg = new Config();\n    new JCommander(cfg, null, args);\n\n    SparkConf sparkConf = new SparkConf().setAppName(\"Hoodie-snapshot-exporter\");\n    sparkConf.set(\"spark.serializer\", \"org.apache.spark.serializer.KryoSerializer\");\n    JavaSparkContext jsc = new JavaSparkContext(sparkConf);\n    LOG.info(\"Initializing spark job.\");\n\n    try {\n      new HoodieSnapshotExporter().export(jsc, cfg);\n    } finally {\n      jsc.stop();\n    }\n  }\n","date":"2020-03-25 18:02:24","endLine":271,"groupId":"10292","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"main","params":"(String[]args)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-hudi-10-0.7/blobInfo/CC_OUT/blobs/7d/f630a11e3bb4f3300f4ce28f06568e1b040585.src","preCode":"  public static void main(String[] args) throws IOException {\n    final Config cfg = new Config();\n    new JCommander(cfg, null, args);\n\n    SparkConf sparkConf = new SparkConf().setAppName(\"Hoodie-snapshot-exporter\");\n    sparkConf.set(\"spark.serializer\", \"org.apache.spark.serializer.KryoSerializer\");\n    JavaSparkContext jsc = new JavaSparkContext(sparkConf);\n    LOG.info(\"Initializing spark job.\");\n\n    try {\n      new HoodieSnapshotExporter().export(jsc, cfg);\n    } finally {\n      jsc.stop();\n    }\n  }\n","realPath":"hudi-utilities/src/main/java/org/apache/hudi/utilities/HoodieSnapshotExporter.java","repoName":"hudi","snippetEndLine":0,"snippetStartLine":0,"startLine":257,"status":"N"},{"authorDate":"2020-12-31 17:20:02","commitOrder":6,"curCode":"  public static void main(String[] args) throws IOException {\n    \r\n    final Config cfg = new Config();\n    new JCommander(cfg, null, args);\n    LOG.info(String.format(\"Snapshot hoodie table from %s targetBasePath to %stargetBasePath\", cfg.basePath,\n        cfg.outputPath));\n\n    \r\n    SparkConf sparkConf = new SparkConf().setAppName(\"Hoodie-snapshot-copier\");\n    sparkConf.set(\"spark.serializer\", \"org.apache.spark.serializer.KryoSerializer\");\n    JavaSparkContext jsc = new JavaSparkContext(sparkConf);\n    LOG.info(\"Initializing spark job.\");\n\n    \r\n    HoodieSnapshotCopier copier = new HoodieSnapshotCopier();\n    copier.snapshot(jsc, cfg.basePath, cfg.outputPath, cfg.shouldAssumeDatePartitioning, cfg.useFileListingFromMetadata,\n        cfg.verifyMetadataFileListing);\n\n    \r\n    jsc.stop();\n  }\n","date":"2021-01-04 23:59:47","endLine":200,"groupId":"10292","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"main","params":"(String[]args)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-hudi-10-0.7/blobInfo/CC_OUT/blobs/00/66d86d595b57c771896315f6f0dbbc9f0618dc.src","preCode":"  public static void main(String[] args) throws IOException {\n    \r\n    final Config cfg = new Config();\n    new JCommander(cfg, null, args);\n    LOG.info(String.format(\"Snapshot hoodie table from %s targetBasePath to %stargetBasePath\", cfg.basePath,\n        cfg.outputPath));\n\n    \r\n    SparkConf sparkConf = new SparkConf().setAppName(\"Hoodie-snapshot-copier\");\n    sparkConf.set(\"spark.serializer\", \"org.apache.spark.serializer.KryoSerializer\");\n    JavaSparkContext jsc = new JavaSparkContext(sparkConf);\n    LOG.info(\"Initializing spark job.\");\n\n    \r\n    HoodieSnapshotCopier copier = new HoodieSnapshotCopier();\n    copier.snapshot(jsc, cfg.basePath, cfg.outputPath, cfg.shouldAssumeDatePartitioning);\n\n    \r\n    jsc.stop();\n  }\n","realPath":"hudi-utilities/src/main/java/org/apache/hudi/utilities/HoodieSnapshotCopier.java","repoName":"hudi","snippetEndLine":0,"snippetStartLine":0,"startLine":180,"status":"M"}],"commitId":"4e642268442782cdd7ad753981dd2571388cd189","commitMessage":"@@@[HUDI-1450] Use metadata table for listing in HoodieROTablePathFilter (apache#2326)\n\n[HUDI-1394] [RFC-15] Use metadata table (if present) to get all partition paths (apache#2351)\n","date":"2021-01-04 23:59:47","modifiedFileCount":"32","status":"M","submitter":"Udit Mehrotra"}]
