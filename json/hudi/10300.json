[{"authorTime":"2019-12-23 15:33:35","codes":[{"authorDate":"2019-08-12 08:48:17","commitOrder":2,"curCode":"  protected InputBatch<JavaRDD<GenericRecord>> fetchNewData(Option<String> lastCkptStr,\n      long sourceLimit) {\n    Pair<Option<String>, String> selectPathsWithMaxModificationTime =\n        pathSelector.getNextFilePathsAndMaxModificationTime(lastCkptStr, sourceLimit);\n    return selectPathsWithMaxModificationTime.getLeft().map(pathStr -> new InputBatch<>(\n        Option.of(fromFiles(pathStr)),\n        selectPathsWithMaxModificationTime.getRight()))\n        .orElseGet(() -> new InputBatch<>(Option.empty(), selectPathsWithMaxModificationTime.getRight()));\n  }\n","date":"2019-08-12 08:48:17","endLine":57,"groupId":"3391","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"fetchNewData","params":"(Option<String>lastCkptStr@longsourceLimit)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-hudi-10-0.7/blobInfo/CC_OUT/blobs/83/e81e80e970c75080ea03776897085f97750de3.src","preCode":"  protected InputBatch<JavaRDD<GenericRecord>> fetchNewData(Option<String> lastCkptStr,\n      long sourceLimit) {\n    Pair<Option<String>, String> selectPathsWithMaxModificationTime =\n        pathSelector.getNextFilePathsAndMaxModificationTime(lastCkptStr, sourceLimit);\n    return selectPathsWithMaxModificationTime.getLeft().map(pathStr -> new InputBatch<>(\n        Option.of(fromFiles(pathStr)),\n        selectPathsWithMaxModificationTime.getRight()))\n        .orElseGet(() -> new InputBatch<>(Option.empty(), selectPathsWithMaxModificationTime.getRight()));\n  }\n","realPath":"hudi-utilities/src/main/java/org/apache/hudi/utilities/sources/AvroDFSSource.java","repoName":"hudi","snippetEndLine":0,"snippetStartLine":0,"startLine":49,"status":"NB"},{"authorDate":"2019-12-23 15:33:35","commitOrder":2,"curCode":"  public Pair<Option<Dataset<Row>>, String> fetchNextBatch(Option<String> lastCkptStr, long sourceLimit) {\n    Pair<Option<String>, String> selectPathsWithMaxModificationTime =\n        pathSelector.getNextFilePathsAndMaxModificationTime(lastCkptStr, sourceLimit);\n    return selectPathsWithMaxModificationTime.getLeft()\n        .map(pathStr -> Pair.of(Option.of(fromFiles(pathStr)), selectPathsWithMaxModificationTime.getRight()))\n        .orElseGet(() -> Pair.of(Option.empty(), selectPathsWithMaxModificationTime.getRight()));\n  }\n","date":"2019-12-24 12:56:55","endLine":52,"groupId":"3391","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"fetchNextBatch","params":"(Option<String>lastCkptStr@longsourceLimit)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-hudi-10-0.7/blobInfo/CC_OUT/blobs/3a/8f722c83e3299a9e2f4a34bf312c855d9965f9.src","preCode":"  public Pair<Option<Dataset<Row>>, String> fetchNextBatch(Option<String> lastCkptStr, long sourceLimit) {\n    Pair<Option<String>, String> selectPathsWithMaxModificationTime =\n        pathSelector.getNextFilePathsAndMaxModificationTime(lastCkptStr, sourceLimit);\n    return selectPathsWithMaxModificationTime.getLeft()\n        .map(pathStr -> Pair.of(Option.of(fromFiles(pathStr)), selectPathsWithMaxModificationTime.getRight()))\n        .orElseGet(() -> Pair.of(Option.empty(), selectPathsWithMaxModificationTime.getRight()));\n  }\n","realPath":"hudi-utilities/src/main/java/org/apache/hudi/utilities/sources/ParquetDFSSource.java","repoName":"hudi","snippetEndLine":0,"snippetStartLine":0,"startLine":46,"status":"B"}],"commitId":"350b0ecb4d137411c6231a1568add585c6d7b7d5","commitMessage":"@@@[HUDI-311] : Support for AWS Database Migration Service in DeltaStreamer\n\n - Add a transformer class.  that adds `Op` fiels if not found in input frame\n - Add a payload implementation.  that issues deletes when Op=D\n - Remove Parquet as a top level source type.  consolidate with RowSource\n - Made delta streamer work without a property file.  simply using overridden cli options\n - Unit tests for transformer/payload classes\n","date":"2019-12-24 12:56:55","modifiedFileCount":"8","status":"M","submitter":"vinoth chandar"},{"authorTime":"2020-12-17 19:59:30","codes":[{"authorDate":"2020-12-17 19:59:30","commitOrder":3,"curCode":"  protected InputBatch<JavaRDD<GenericRecord>> fetchNewData(Option<String> lastCkptStr, long sourceLimit) {\n    Pair<Option<String>, String> selectPathsWithMaxModificationTime =\n        pathSelector.getNextFilePathsAndMaxModificationTime(sparkContext, lastCkptStr, sourceLimit);\n    return selectPathsWithMaxModificationTime.getLeft()\n        .map(pathStr -> new InputBatch<>(Option.of(fromFiles(pathStr)), selectPathsWithMaxModificationTime.getRight()))\n        .orElseGet(() -> new InputBatch<>(Option.empty(), selectPathsWithMaxModificationTime.getRight()));\n  }\n","date":"2020-12-17 19:59:30","endLine":59,"groupId":"10300","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"fetchNewData","params":"(Option<String>lastCkptStr@longsourceLimit)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-hudi-10-0.7/blobInfo/CC_OUT/blobs/ae/d6c6b7358b0733e3d2c72816ce0188c64a9dfe.src","preCode":"  protected InputBatch<JavaRDD<GenericRecord>> fetchNewData(Option<String> lastCkptStr, long sourceLimit) {\n    Pair<Option<String>, String> selectPathsWithMaxModificationTime =\n        pathSelector.getNextFilePathsAndMaxModificationTime(lastCkptStr, sourceLimit);\n    return selectPathsWithMaxModificationTime.getLeft()\n        .map(pathStr -> new InputBatch<>(Option.of(fromFiles(pathStr)), selectPathsWithMaxModificationTime.getRight()))\n        .orElseGet(() -> new InputBatch<>(Option.empty(), selectPathsWithMaxModificationTime.getRight()));\n  }\n","realPath":"hudi-utilities/src/main/java/org/apache/hudi/utilities/sources/AvroDFSSource.java","repoName":"hudi","snippetEndLine":0,"snippetStartLine":0,"startLine":53,"status":"M"},{"authorDate":"2020-12-17 19:59:30","commitOrder":3,"curCode":"  public Pair<Option<Dataset<Row>>, String> fetchNextBatch(Option<String> lastCkptStr, long sourceLimit) {\n    Pair<Option<String>, String> selectPathsWithMaxModificationTime =\n        pathSelector.getNextFilePathsAndMaxModificationTime(sparkContext, lastCkptStr, sourceLimit);\n    return selectPathsWithMaxModificationTime.getLeft()\n        .map(pathStr -> Pair.of(Option.of(fromFiles(pathStr)), selectPathsWithMaxModificationTime.getRight()))\n        .orElseGet(() -> Pair.of(Option.empty(), selectPathsWithMaxModificationTime.getRight()));\n  }\n","date":"2020-12-17 19:59:30","endLine":52,"groupId":"10300","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"fetchNextBatch","params":"(Option<String>lastCkptStr@longsourceLimit)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-hudi-10-0.7/blobInfo/CC_OUT/blobs/a5/6a878f1fe7368f57711dbcea1ba7860a197537.src","preCode":"  public Pair<Option<Dataset<Row>>, String> fetchNextBatch(Option<String> lastCkptStr, long sourceLimit) {\n    Pair<Option<String>, String> selectPathsWithMaxModificationTime =\n        pathSelector.getNextFilePathsAndMaxModificationTime(lastCkptStr, sourceLimit);\n    return selectPathsWithMaxModificationTime.getLeft()\n        .map(pathStr -> Pair.of(Option.of(fromFiles(pathStr)), selectPathsWithMaxModificationTime.getRight()))\n        .orElseGet(() -> Pair.of(Option.empty(), selectPathsWithMaxModificationTime.getRight()));\n  }\n","realPath":"hudi-utilities/src/main/java/org/apache/hudi/utilities/sources/ParquetDFSSource.java","repoName":"hudi","snippetEndLine":0,"snippetStartLine":0,"startLine":46,"status":"M"}],"commitId":"14d5d1100c69839d2bcfea26af0efdcd2057650d","commitMessage":"@@@[HUDI-1406] Add date partition based source input selector for Delta streamer (#2264)\n\n- Adds ability to list only recent date based partitions from source data.\n- Parallelizes listing for faster tailing of DFSSources","date":"2020-12-17 19:59:30","modifiedFileCount":"5","status":"M","submitter":"Bhavani Sudha Saktheeswaran"}]
