[{"authorTime":"2021-03-17 07:43:53","codes":[{"authorDate":"2020-10-09 10:21:27","commitOrder":2,"curCode":"  private void createCleanMetadata(String instantTime, boolean inflightOnly) throws IOException {\n    HoodieCleanerPlan cleanerPlan = new HoodieCleanerPlan(new HoodieActionInstant(\"\", \"\", \"\"), \"\", new HashMap<>(),\n        CleanPlanV2MigrationHandler.VERSION, new HashMap<>());\n    if (inflightOnly) {\n      HoodieTestTable.of(metaClient).addInflightClean(instantTime, cleanerPlan);\n    } else {\n      HoodieCleanStat cleanStats = new HoodieCleanStat(\n          HoodieCleaningPolicy.KEEP_LATEST_FILE_VERSIONS,\n          HoodieTestUtils.DEFAULT_PARTITION_PATHS[new Random().nextInt(HoodieTestUtils.DEFAULT_PARTITION_PATHS.length)],\n          Collections.emptyList(),\n          Collections.emptyList(),\n          Collections.emptyList(),\n          instantTime);\n      HoodieCleanMetadata cleanMetadata = convertCleanMetadata(instantTime, Option.of(0L), Collections.singletonList(cleanStats));\n      HoodieTestTable.of(metaClient).addClean(instantTime, cleanerPlan, cleanMetadata);\n    }\n  }\n","date":"2020-10-09 10:21:27","endLine":522,"groupId":"4558","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"createCleanMetadata","params":"(StringinstantTime@booleaninflightOnly)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-hudi-10-0.7/blobInfo/CC_OUT/blobs/f2/427cd9a23480ef51a3890c7ea53bac20f0101a.src","preCode":"  private void createCleanMetadata(String instantTime, boolean inflightOnly) throws IOException {\n    HoodieCleanerPlan cleanerPlan = new HoodieCleanerPlan(new HoodieActionInstant(\"\", \"\", \"\"), \"\", new HashMap<>(),\n        CleanPlanV2MigrationHandler.VERSION, new HashMap<>());\n    if (inflightOnly) {\n      HoodieTestTable.of(metaClient).addInflightClean(instantTime, cleanerPlan);\n    } else {\n      HoodieCleanStat cleanStats = new HoodieCleanStat(\n          HoodieCleaningPolicy.KEEP_LATEST_FILE_VERSIONS,\n          HoodieTestUtils.DEFAULT_PARTITION_PATHS[new Random().nextInt(HoodieTestUtils.DEFAULT_PARTITION_PATHS.length)],\n          Collections.emptyList(),\n          Collections.emptyList(),\n          Collections.emptyList(),\n          instantTime);\n      HoodieCleanMetadata cleanMetadata = convertCleanMetadata(instantTime, Option.of(0L), Collections.singletonList(cleanStats));\n      HoodieTestTable.of(metaClient).addClean(instantTime, cleanerPlan, cleanMetadata);\n    }\n  }\n","realPath":"hudi-client/hudi-spark-client/src/test/java/org/apache/hudi/io/TestHoodieTimelineArchiveLog.java","repoName":"hudi","snippetEndLine":0,"snippetStartLine":0,"startLine":506,"status":"NB"},{"authorDate":"2021-03-17 07:43:53","commitOrder":2,"curCode":"  private void createCleanMetadata(String instantTime) throws IOException {\n    HoodieCleanerPlan cleanerPlan = new HoodieCleanerPlan(new HoodieActionInstant(\"\", \"\", \"\"), \"\", new HashMap<>(),\n        CleanPlanV2MigrationHandler.VERSION, new HashMap<>());\n    HoodieCleanStat cleanStats = new HoodieCleanStat(\n        HoodieCleaningPolicy.KEEP_LATEST_FILE_VERSIONS,\n        HoodieTestUtils.DEFAULT_PARTITION_PATHS[new Random().nextInt(HoodieTestUtils.DEFAULT_PARTITION_PATHS.length)],\n        Collections.emptyList(),\n        Collections.emptyList(),\n        Collections.emptyList(),\n        instantTime);\n    HoodieCleanMetadata cleanMetadata = convertCleanMetadata(instantTime, Option.of(0L), Collections.singletonList(cleanStats));\n    HoodieTestTable.of(metaClient).addClean(instantTime, cleanerPlan, cleanMetadata);\n  }\n","date":"2021-03-17 07:43:53","endLine":212,"groupId":"4558","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"createCleanMetadata","params":"(StringinstantTime)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-hudi-10-0.7/blobInfo/CC_OUT/blobs/d8/a51708f6df5a63096848e8d65893fe9838aed4.src","preCode":"  private void createCleanMetadata(String instantTime) throws IOException {\n    HoodieCleanerPlan cleanerPlan = new HoodieCleanerPlan(new HoodieActionInstant(\"\", \"\", \"\"), \"\", new HashMap<>(),\n        CleanPlanV2MigrationHandler.VERSION, new HashMap<>());\n    HoodieCleanStat cleanStats = new HoodieCleanStat(\n        HoodieCleaningPolicy.KEEP_LATEST_FILE_VERSIONS,\n        HoodieTestUtils.DEFAULT_PARTITION_PATHS[new Random().nextInt(HoodieTestUtils.DEFAULT_PARTITION_PATHS.length)],\n        Collections.emptyList(),\n        Collections.emptyList(),\n        Collections.emptyList(),\n        instantTime);\n    HoodieCleanMetadata cleanMetadata = convertCleanMetadata(instantTime, Option.of(0L), Collections.singletonList(cleanStats));\n    HoodieTestTable.of(metaClient).addClean(instantTime, cleanerPlan, cleanMetadata);\n  }\n","realPath":"hudi-client/hudi-client-common/src/test/java/org/apache/hudi/utils/TestMetadataConversionUtils.java","repoName":"hudi","snippetEndLine":0,"snippetStartLine":0,"startLine":200,"status":"B"}],"commitId":"74241947c123c860a1b0344f25cef316440a70d6","commitMessage":"@@@[HUDI-845] Added locking capability to allow multiple writers (#2374)\n\n* [HUDI-845] Added locking capability to allow multiple writers\n1. Added LockProvider API for pluggable lock methodologies\n2. Added Resolution Strategy API to allow for pluggable conflict resolution\n3. Added TableService client API to schedule table services\n4. Added Transaction Manager for wrapping actions within transactions","date":"2021-03-17 07:43:53","modifiedFileCount":"48","status":"M","submitter":"n3nash"},{"authorTime":"2021-03-17 07:43:53","codes":[{"authorDate":"2021-04-22 01:27:43","commitOrder":3,"curCode":"  private HoodieInstant createCleanMetadata(String instantTime, boolean inflightOnly) throws IOException {\n    HoodieCleanerPlan cleanerPlan = new HoodieCleanerPlan(new HoodieActionInstant(\"\", \"\", \"\"), \"\", new HashMap<>(),\n        CleanPlanV2MigrationHandler.VERSION, new HashMap<>());\n    if (inflightOnly) {\n      HoodieTestTable.of(metaClient).addInflightClean(instantTime, cleanerPlan);\n    } else {\n      HoodieCleanStat cleanStats = new HoodieCleanStat(\n          HoodieCleaningPolicy.KEEP_LATEST_FILE_VERSIONS,\n          HoodieTestUtils.DEFAULT_PARTITION_PATHS[new Random().nextInt(HoodieTestUtils.DEFAULT_PARTITION_PATHS.length)],\n          Collections.emptyList(),\n          Collections.emptyList(),\n          Collections.emptyList(),\n          instantTime);\n      HoodieCleanMetadata cleanMetadata = convertCleanMetadata(instantTime, Option.of(0L), Collections.singletonList(cleanStats));\n      HoodieTestTable.of(metaClient).addClean(instantTime, cleanerPlan, cleanMetadata);\n    }\n    return new HoodieInstant(inflightOnly, \"clean\", instantTime);\n  }\n","date":"2021-04-22 01:27:43","endLine":719,"groupId":"10681","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"createCleanMetadata","params":"(StringinstantTime@booleaninflightOnly)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-hudi-10-0.7/blobInfo/CC_OUT/blobs/b4/2f650c3c1b5b0a97cf34a2cec4f54e52cfaed3.src","preCode":"  private void createCleanMetadata(String instantTime, boolean inflightOnly) throws IOException {\n    HoodieCleanerPlan cleanerPlan = new HoodieCleanerPlan(new HoodieActionInstant(\"\", \"\", \"\"), \"\", new HashMap<>(),\n        CleanPlanV2MigrationHandler.VERSION, new HashMap<>());\n    if (inflightOnly) {\n      HoodieTestTable.of(metaClient).addInflightClean(instantTime, cleanerPlan);\n    } else {\n      HoodieCleanStat cleanStats = new HoodieCleanStat(\n          HoodieCleaningPolicy.KEEP_LATEST_FILE_VERSIONS,\n          HoodieTestUtils.DEFAULT_PARTITION_PATHS[new Random().nextInt(HoodieTestUtils.DEFAULT_PARTITION_PATHS.length)],\n          Collections.emptyList(),\n          Collections.emptyList(),\n          Collections.emptyList(),\n          instantTime);\n      HoodieCleanMetadata cleanMetadata = convertCleanMetadata(instantTime, Option.of(0L), Collections.singletonList(cleanStats));\n      HoodieTestTable.of(metaClient).addClean(instantTime, cleanerPlan, cleanMetadata);\n    }\n  }\n","realPath":"hudi-client/hudi-spark-client/src/test/java/org/apache/hudi/io/TestHoodieTimelineArchiveLog.java","repoName":"hudi","snippetEndLine":0,"snippetStartLine":0,"startLine":702,"status":"M"},{"authorDate":"2021-03-17 07:43:53","commitOrder":3,"curCode":"  private void createCleanMetadata(String instantTime) throws IOException {\n    HoodieCleanerPlan cleanerPlan = new HoodieCleanerPlan(new HoodieActionInstant(\"\", \"\", \"\"), \"\", new HashMap<>(),\n        CleanPlanV2MigrationHandler.VERSION, new HashMap<>());\n    HoodieCleanStat cleanStats = new HoodieCleanStat(\n        HoodieCleaningPolicy.KEEP_LATEST_FILE_VERSIONS,\n        HoodieTestUtils.DEFAULT_PARTITION_PATHS[new Random().nextInt(HoodieTestUtils.DEFAULT_PARTITION_PATHS.length)],\n        Collections.emptyList(),\n        Collections.emptyList(),\n        Collections.emptyList(),\n        instantTime);\n    HoodieCleanMetadata cleanMetadata = convertCleanMetadata(instantTime, Option.of(0L), Collections.singletonList(cleanStats));\n    HoodieTestTable.of(metaClient).addClean(instantTime, cleanerPlan, cleanMetadata);\n  }\n","date":"2021-03-17 07:43:53","endLine":212,"groupId":"10681","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"createCleanMetadata","params":"(StringinstantTime)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-hudi-10-0.7/blobInfo/CC_OUT/blobs/d8/a51708f6df5a63096848e8d65893fe9838aed4.src","preCode":"  private void createCleanMetadata(String instantTime) throws IOException {\n    HoodieCleanerPlan cleanerPlan = new HoodieCleanerPlan(new HoodieActionInstant(\"\", \"\", \"\"), \"\", new HashMap<>(),\n        CleanPlanV2MigrationHandler.VERSION, new HashMap<>());\n    HoodieCleanStat cleanStats = new HoodieCleanStat(\n        HoodieCleaningPolicy.KEEP_LATEST_FILE_VERSIONS,\n        HoodieTestUtils.DEFAULT_PARTITION_PATHS[new Random().nextInt(HoodieTestUtils.DEFAULT_PARTITION_PATHS.length)],\n        Collections.emptyList(),\n        Collections.emptyList(),\n        Collections.emptyList(),\n        instantTime);\n    HoodieCleanMetadata cleanMetadata = convertCleanMetadata(instantTime, Option.of(0L), Collections.singletonList(cleanStats));\n    HoodieTestTable.of(metaClient).addClean(instantTime, cleanerPlan, cleanMetadata);\n  }\n","realPath":"hudi-client/hudi-client-common/src/test/java/org/apache/hudi/utils/TestMetadataConversionUtils.java","repoName":"hudi","snippetEndLine":0,"snippetStartLine":0,"startLine":200,"status":"N"}],"commitId":"b31c520c66a65723580807b8eb6a2639c96328a8","commitMessage":"@@@[HUDI-1714] Added tests to TestHoodieTimelineArchiveLog for the archival of compl? (#2677)\n\n* Added tests to TestHoodieTimelineArchiveLog for the archival of completed clean and rollback actions.\n\n* Adding code review changes\n\n* [HUDI-1714] Minor Fixes","date":"2021-04-22 01:27:43","modifiedFileCount":"6","status":"M","submitter":"jsbali"}]
