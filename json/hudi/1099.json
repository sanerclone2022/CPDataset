[{"authorTime":"2020-06-18 19:54:14","codes":[{"authorDate":"2020-06-18 19:54:14","commitOrder":1,"curCode":"  public void testLoadClass() {\n    String name = HoodieTable.class.getName();\n    CommandResult cr = getShell().executeCommand(String.format(\"utils loadClass --class %s\", name));\n    assertAll(\"Command runs success\",\n        () -> assertTrue(cr.isSuccess()),\n        () -> assertNotNull(cr.getResult().toString()),\n        () -> assertTrue(cr.getResult().toString().startsWith(\"file:\")));\n  }\n","date":"2020-06-18 19:54:14","endLine":48,"groupId":"4409","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testLoadClass","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-hudi-10-0.7/blobInfo/CC_OUT/blobs/63/c4bcddd9d39fa9852f2460e1293942cd42289e.src","preCode":"  public void testLoadClass() {\n    String name = HoodieTable.class.getName();\n    CommandResult cr = getShell().executeCommand(String.format(\"utils loadClass --class %s\", name));\n    assertAll(\"Command runs success\",\n        () -> assertTrue(cr.isSuccess()),\n        () -> assertNotNull(cr.getResult().toString()),\n        () -> assertTrue(cr.getResult().toString().startsWith(\"file:\")));\n  }\n","realPath":"hudi-cli/src/test/java/org/apache/hudi/cli/commands/TestUtilsCommand.java","repoName":"hudi","snippetEndLine":0,"snippetStartLine":0,"startLine":41,"status":"B"},{"authorDate":"2020-06-18 19:54:14","commitOrder":1,"curCode":"  public void testLoadClassNotFound() {\n    String name = \"test.class.NotFound\";\n    CommandResult cr = getShell().executeCommand(String.format(\"utils loadClass --class %s\", name));\n\n    assertAll(\"Command runs success\",\n        () -> assertTrue(cr.isSuccess()),\n        () -> assertNotNull(cr.getResult().toString()),\n        () -> assertEquals(cr.getResult().toString(), String.format(\"Class %s not found!\", name)));\n  }\n","date":"2020-06-18 19:54:14","endLine":62,"groupId":"4409","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testLoadClassNotFound","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-hudi-10-0.7/blobInfo/CC_OUT/blobs/63/c4bcddd9d39fa9852f2460e1293942cd42289e.src","preCode":"  public void testLoadClassNotFound() {\n    String name = \"test.class.NotFound\";\n    CommandResult cr = getShell().executeCommand(String.format(\"utils loadClass --class %s\", name));\n\n    assertAll(\"Command runs success\",\n        () -> assertTrue(cr.isSuccess()),\n        () -> assertNotNull(cr.getResult().toString()),\n        () -> assertEquals(cr.getResult().toString(), String.format(\"Class %s not found!\", name)));\n  }\n","realPath":"hudi-cli/src/test/java/org/apache/hudi/cli/commands/TestUtilsCommand.java","repoName":"hudi","snippetEndLine":0,"snippetStartLine":0,"startLine":54,"status":"B"}],"commitId":"5099a91edd3aaba114a86251336ae98374722270","commitMessage":"@@@[HUDI-709] Add unit test for UtilsCommand (#1686)\n\n","date":"2020-06-18 19:54:14","modifiedFileCount":"1","status":"B","submitter":"hongdd"},{"authorTime":"2021-09-07 06:53:53","codes":[{"authorDate":"2021-09-07 06:53:53","commitOrder":2,"curCode":"  public void testLoadClass() {\n    String name = HoodieTable.class.getName();\n    CommandResult cr = shell().executeCommand(String.format(\"utils loadClass --class %s\", name));\n    assertAll(\"Command runs success\",\n        () -> assertTrue(cr.isSuccess()),\n        () -> assertNotNull(cr.getResult().toString()),\n        () -> assertTrue(cr.getResult().toString().startsWith(\"file:\")));\n  }\n","date":"2021-09-07 06:53:53","endLine":50,"groupId":"1099","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"testLoadClass","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-hudi-10-0.7/blobInfo/CC_OUT/blobs/e3/64814976d26ae8014911b10508086a0d47a834.src","preCode":"  public void testLoadClass() {\n    String name = HoodieTable.class.getName();\n    CommandResult cr = getShell().executeCommand(String.format(\"utils loadClass --class %s\", name));\n    assertAll(\"Command runs success\",\n        () -> assertTrue(cr.isSuccess()),\n        () -> assertNotNull(cr.getResult().toString()),\n        () -> assertTrue(cr.getResult().toString().startsWith(\"file:\")));\n  }\n","realPath":"hudi-cli/src/test/java/org/apache/hudi/cli/commands/TestUtilsCommand.java","repoName":"hudi","snippetEndLine":0,"snippetStartLine":0,"startLine":43,"status":"M"},{"authorDate":"2021-09-07 06:53:53","commitOrder":2,"curCode":"  public void testLoadClassNotFound() {\n    String name = \"test.class.NotFound\";\n    CommandResult cr = shell().executeCommand(String.format(\"utils loadClass --class %s\", name));\n\n    assertAll(\"Command runs success\",\n        () -> assertTrue(cr.isSuccess()),\n        () -> assertNotNull(cr.getResult().toString()),\n        () -> assertEquals(cr.getResult().toString(), String.format(\"Class %s not found!\", name)));\n  }\n","date":"2021-09-07 06:53:53","endLine":64,"groupId":"1099","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"testLoadClassNotFound","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-hudi-10-0.7/blobInfo/CC_OUT/blobs/e3/64814976d26ae8014911b10508086a0d47a834.src","preCode":"  public void testLoadClassNotFound() {\n    String name = \"test.class.NotFound\";\n    CommandResult cr = getShell().executeCommand(String.format(\"utils loadClass --class %s\", name));\n\n    assertAll(\"Command runs success\",\n        () -> assertTrue(cr.isSuccess()),\n        () -> assertNotNull(cr.getResult().toString()),\n        () -> assertEquals(cr.getResult().toString(), String.format(\"Class %s not found!\", name)));\n  }\n","realPath":"hudi-cli/src/test/java/org/apache/hudi/cli/commands/TestUtilsCommand.java","repoName":"hudi","snippetEndLine":0,"snippetStartLine":0,"startLine":56,"status":"M"}],"commitId":"cf002b6918ffcdb7528857861372dd73ddb7e31d","commitMessage":"@@@[HUDI-2079] Make CLI command tests functional (#3601)\n\nMake all tests in org.apache.hudi.cli.commands extend org.apache.hudi.cli.functional.CLIFunctionalTestHarness and tag as \"functional\".\n\nThis also resolves a blocker where DFS init consistently failed when moving to ubuntu 18.04","date":"2021-09-07 06:53:53","modifiedFileCount":"17","status":"M","submitter":"Raymond Xu"}]
