[{"authorTime":"2020-05-18 09:32:24","codes":[{"authorDate":"2020-03-30 01:58:49","commitOrder":2,"curCode":"  private static Schema initRecordKeySchema() {\n    Schema.Field recordKeyField =\n        new Schema.Field(HoodieRecord.RECORD_KEY_METADATA_FIELD, METADATA_FIELD_SCHEMA, \"\", NullNode.getInstance());\n    Schema recordKeySchema = Schema.createRecord(\"HoodieRecordKey\", \"\", \"\", false);\n    recordKeySchema.setFields(Collections.singletonList(recordKeyField));\n    return recordKeySchema;\n  }\n","date":"2020-03-30 01:58:49","endLine":147,"groupId":"1660","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"initRecordKeySchema","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-hudi-10-0.7/blobInfo/CC_OUT/blobs/2e/ec7486f03848b8adb842c81441686d6e9592ae.src","preCode":"  private static Schema initRecordKeySchema() {\n    Schema.Field recordKeyField =\n        new Schema.Field(HoodieRecord.RECORD_KEY_METADATA_FIELD, METADATA_FIELD_SCHEMA, \"\", NullNode.getInstance());\n    Schema recordKeySchema = Schema.createRecord(\"HoodieRecordKey\", \"\", \"\", false);\n    recordKeySchema.setFields(Collections.singletonList(recordKeyField));\n    return recordKeySchema;\n  }\n","realPath":"hudi-common/src/main/java/org/apache/hudi/avro/HoodieAvroUtils.java","repoName":"hudi","snippetEndLine":0,"snippetStartLine":0,"startLine":141,"status":"NB"},{"authorDate":"2020-05-18 09:32:24","commitOrder":2,"curCode":"  public static Schema getRecordKeyPartitionPathSchema() {\n    List<Schema.Field> toBeAddedFields = new ArrayList<>();\n    Schema recordSchema = Schema.createRecord(\"HoodieRecordKey\", \"\", \"\", false);\n\n    Schema.Field recordKeyField =\n        new Schema.Field(HoodieRecord.RECORD_KEY_METADATA_FIELD, METADATA_FIELD_SCHEMA, \"\", NullNode.getInstance());\n    Schema.Field partitionPathField =\n        new Schema.Field(HoodieRecord.PARTITION_PATH_METADATA_FIELD, METADATA_FIELD_SCHEMA, \"\", NullNode.getInstance());\n\n    toBeAddedFields.add(recordKeyField);\n    toBeAddedFields.add(partitionPathField);\n    recordSchema.setFields(toBeAddedFields);\n    return recordSchema;\n  }\n","date":"2020-05-18 09:32:24","endLine":217,"groupId":"5066","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"getRecordKeyPartitionPathSchema","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-hudi-10-0.7/blobInfo/CC_OUT/blobs/8c/221224454dfa9004242d940fc2775d31ea5f51.src","preCode":"  public static Schema getRecordKeyPartitionPathSchema() {\n    List<Schema.Field> toBeAddedFields = new ArrayList<>();\n    Schema recordSchema = Schema.createRecord(\"HoodieRecordKey\", \"\", \"\", false);\n\n    Schema.Field recordKeyField =\n        new Schema.Field(HoodieRecord.RECORD_KEY_METADATA_FIELD, METADATA_FIELD_SCHEMA, \"\", NullNode.getInstance());\n    Schema.Field partitionPathField =\n        new Schema.Field(HoodieRecord.PARTITION_PATH_METADATA_FIELD, METADATA_FIELD_SCHEMA, \"\", NullNode.getInstance());\n\n    toBeAddedFields.add(recordKeyField);\n    toBeAddedFields.add(partitionPathField);\n    recordSchema.setFields(toBeAddedFields);\n    return recordSchema;\n  }\n","realPath":"hudi-common/src/main/java/org/apache/hudi/avro/HoodieAvroUtils.java","repoName":"hudi","snippetEndLine":0,"snippetStartLine":0,"startLine":204,"status":"B"}],"commitId":"29edf4b3b8ade64ec7822d6b7b2a125d5ca781c4","commitMessage":"@@@[HUDI-407] Adding Simple Index to Hoodie. (#1402)\n\nThis index finds the location by joining incoming records with records from base files.","date":"2020-05-18 09:32:24","modifiedFileCount":"11","status":"M","submitter":"Sivabalan Narayanan"},{"authorTime":"2020-05-18 09:32:24","codes":[{"authorDate":"2021-01-28 08:53:13","commitOrder":3,"curCode":"  private static Schema initRecordKeySchema() {\n    Schema.Field recordKeyField =\n        new Schema.Field(HoodieRecord.RECORD_KEY_METADATA_FIELD, METADATA_FIELD_SCHEMA, \"\", JsonProperties.NULL_VALUE);\n    Schema recordKeySchema = Schema.createRecord(\"HoodieRecordKey\", \"\", \"\", false);\n    recordKeySchema.setFields(Collections.singletonList(recordKeyField));\n    return recordKeySchema;\n  }\n","date":"2021-01-28 08:53:13","endLine":224,"groupId":"3924","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"initRecordKeySchema","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-hudi-10-0.7/blobInfo/CC_OUT/blobs/3b/989db2af1a2028690c7c5efd5d177d98495d9b.src","preCode":"  private static Schema initRecordKeySchema() {\n    Schema.Field recordKeyField =\n        new Schema.Field(HoodieRecord.RECORD_KEY_METADATA_FIELD, METADATA_FIELD_SCHEMA, \"\", NullNode.getInstance());\n    Schema recordKeySchema = Schema.createRecord(\"HoodieRecordKey\", \"\", \"\", false);\n    recordKeySchema.setFields(Collections.singletonList(recordKeyField));\n    return recordKeySchema;\n  }\n","realPath":"hudi-common/src/main/java/org/apache/hudi/avro/HoodieAvroUtils.java","repoName":"hudi","snippetEndLine":0,"snippetStartLine":0,"startLine":218,"status":"M"},{"authorDate":"2020-05-18 09:32:24","commitOrder":3,"curCode":"  public static Schema getRecordKeyPartitionPathSchema() {\n    List<Schema.Field> toBeAddedFields = new ArrayList<>();\n    Schema recordSchema = Schema.createRecord(\"HoodieRecordKey\", \"\", \"\", false);\n\n    Schema.Field recordKeyField =\n        new Schema.Field(HoodieRecord.RECORD_KEY_METADATA_FIELD, METADATA_FIELD_SCHEMA, \"\", NullNode.getInstance());\n    Schema.Field partitionPathField =\n        new Schema.Field(HoodieRecord.PARTITION_PATH_METADATA_FIELD, METADATA_FIELD_SCHEMA, \"\", NullNode.getInstance());\n\n    toBeAddedFields.add(recordKeyField);\n    toBeAddedFields.add(partitionPathField);\n    recordSchema.setFields(toBeAddedFields);\n    return recordSchema;\n  }\n","date":"2020-05-18 09:32:24","endLine":217,"groupId":"5066","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"getRecordKeyPartitionPathSchema","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-hudi-10-0.7/blobInfo/CC_OUT/blobs/8c/221224454dfa9004242d940fc2775d31ea5f51.src","preCode":"  public static Schema getRecordKeyPartitionPathSchema() {\n    List<Schema.Field> toBeAddedFields = new ArrayList<>();\n    Schema recordSchema = Schema.createRecord(\"HoodieRecordKey\", \"\", \"\", false);\n\n    Schema.Field recordKeyField =\n        new Schema.Field(HoodieRecord.RECORD_KEY_METADATA_FIELD, METADATA_FIELD_SCHEMA, \"\", NullNode.getInstance());\n    Schema.Field partitionPathField =\n        new Schema.Field(HoodieRecord.PARTITION_PATH_METADATA_FIELD, METADATA_FIELD_SCHEMA, \"\", NullNode.getInstance());\n\n    toBeAddedFields.add(recordKeyField);\n    toBeAddedFields.add(partitionPathField);\n    recordSchema.setFields(toBeAddedFields);\n    return recordSchema;\n  }\n","realPath":"hudi-common/src/main/java/org/apache/hudi/avro/HoodieAvroUtils.java","repoName":"hudi","snippetEndLine":0,"snippetStartLine":0,"startLine":204,"status":"N"}],"commitId":"bc0325f6ea0a734f106f21a2fcd4ead413a6cf7b","commitMessage":"@@@[HUDI-1522] Add a new pipeline for Flink writer (#2430)\n\n* [HUDI-1522] Add a new pipeline for Flink writer","date":"2021-01-28 08:53:13","modifiedFileCount":"13","status":"M","submitter":"Danny Chan"},{"authorTime":"2021-02-23 13:37:44","codes":[{"authorDate":"2021-01-28 08:53:13","commitOrder":4,"curCode":"  private static Schema initRecordKeySchema() {\n    Schema.Field recordKeyField =\n        new Schema.Field(HoodieRecord.RECORD_KEY_METADATA_FIELD, METADATA_FIELD_SCHEMA, \"\", JsonProperties.NULL_VALUE);\n    Schema recordKeySchema = Schema.createRecord(\"HoodieRecordKey\", \"\", \"\", false);\n    recordKeySchema.setFields(Collections.singletonList(recordKeyField));\n    return recordKeySchema;\n  }\n","date":"2021-01-28 08:53:13","endLine":224,"groupId":"10968","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"initRecordKeySchema","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-hudi-10-0.7/blobInfo/CC_OUT/blobs/3b/989db2af1a2028690c7c5efd5d177d98495d9b.src","preCode":"  private static Schema initRecordKeySchema() {\n    Schema.Field recordKeyField =\n        new Schema.Field(HoodieRecord.RECORD_KEY_METADATA_FIELD, METADATA_FIELD_SCHEMA, \"\", JsonProperties.NULL_VALUE);\n    Schema recordKeySchema = Schema.createRecord(\"HoodieRecordKey\", \"\", \"\", false);\n    recordKeySchema.setFields(Collections.singletonList(recordKeyField));\n    return recordKeySchema;\n  }\n","realPath":"hudi-common/src/main/java/org/apache/hudi/avro/HoodieAvroUtils.java","repoName":"hudi","snippetEndLine":0,"snippetStartLine":0,"startLine":218,"status":"N"},{"authorDate":"2021-02-23 13:37:44","commitOrder":4,"curCode":"  public static Schema getRecordKeyPartitionPathSchema() {\n    List<Schema.Field> toBeAddedFields = new ArrayList<>();\n    Schema recordSchema = Schema.createRecord(\"HoodieRecordKey\", \"\", \"\", false);\n\n    Schema.Field recordKeyField =\n        new Schema.Field(HoodieRecord.RECORD_KEY_METADATA_FIELD, METADATA_FIELD_SCHEMA, \"\", JsonProperties.NULL_VALUE);\n    Schema.Field partitionPathField =\n        new Schema.Field(HoodieRecord.PARTITION_PATH_METADATA_FIELD, METADATA_FIELD_SCHEMA, \"\", JsonProperties.NULL_VALUE);\n\n    toBeAddedFields.add(recordKeyField);\n    toBeAddedFields.add(partitionPathField);\n    recordSchema.setFields(toBeAddedFields);\n    return recordSchema;\n  }\n","date":"2021-02-23 13:37:44","endLine":245,"groupId":"10968","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"getRecordKeyPartitionPathSchema","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-hudi-10-0.7/blobInfo/CC_OUT/blobs/0f/193c527d3e24a228dac37fad071edce37a3bda.src","preCode":"  public static Schema getRecordKeyPartitionPathSchema() {\n    List<Schema.Field> toBeAddedFields = new ArrayList<>();\n    Schema recordSchema = Schema.createRecord(\"HoodieRecordKey\", \"\", \"\", false);\n\n    Schema.Field recordKeyField =\n        new Schema.Field(HoodieRecord.RECORD_KEY_METADATA_FIELD, METADATA_FIELD_SCHEMA, \"\", NullNode.getInstance());\n    Schema.Field partitionPathField =\n        new Schema.Field(HoodieRecord.PARTITION_PATH_METADATA_FIELD, METADATA_FIELD_SCHEMA, \"\", NullNode.getInstance());\n\n    toBeAddedFields.add(recordKeyField);\n    toBeAddedFields.add(partitionPathField);\n    recordSchema.setFields(toBeAddedFields);\n    return recordSchema;\n  }\n","realPath":"hudi-common/src/main/java/org/apache/hudi/avro/HoodieAvroUtils.java","repoName":"hudi","snippetEndLine":0,"snippetStartLine":0,"startLine":232,"status":"M"}],"commitId":"3ceb1b4c83d4e004c9b397bd05600c2aaf86196d","commitMessage":"@@@[HUDI-1624] The state based index should bootstrap from existing base files (#2581)\n\n","date":"2021-02-23 13:37:44","modifiedFileCount":"7","status":"M","submitter":"Danny Chan"}]
