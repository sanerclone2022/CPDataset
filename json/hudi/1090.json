[{"authorTime":"2020-09-26 21:21:47","codes":[{"authorDate":"2021-06-08 07:04:35","commitOrder":3,"curCode":"  private LinkedHashMap<String, Integer[]> generateData(String schemaStr) throws Exception {\n    \r\n    LinkedHashMap<String, Integer[]> data = new LinkedHashMap<>();\n    data.put(\"102\", new Integer[] {15, 10});\n    data.put(\"101\", new Integer[] {20, 10});\n    data.put(\"100\", new Integer[] {15, 15});\n    for (Map.Entry<String, Integer[]> entry : data.entrySet()) {\n      String key = entry.getKey();\n      Integer[] value = entry.getValue();\n      HoodieTestCommitMetadataGenerator.createCommitFileWithMetadata(tablePath, key, HoodieCLI.conf,\n          Option.of(value[0]), Option.of(value[1]), Collections.singletonMap(HoodieCommitMetadata.SCHEMA_KEY, schemaStr));\n    }\n\n    metaClient = HoodieTableMetaClient.reload(HoodieCLI.getTableMetaClient());\n    assertEquals(3, metaClient.reloadActiveTimeline().getCommitsTimeline().countInstants(),\n        \"There should have 3 commits\");\n    return data;\n  }\n","date":"2021-06-08 07:04:35","endLine":266,"groupId":"3805","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"generateData","params":"(StringschemaStr)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-hudi-10-0.7/blobInfo/CC_OUT/blobs/fe/3407fcd0e39e4af613dec22ab9f21cdf176f13.src","preCode":"  private LinkedHashMap<String, Integer[]> generateData(String schemaStr) throws Exception {\n    \r\n    LinkedHashMap<String, Integer[]> data = new LinkedHashMap<>();\n    data.put(\"102\", new Integer[] {15, 10});\n    data.put(\"101\", new Integer[] {20, 10});\n    data.put(\"100\", new Integer[] {15, 15});\n    for (Map.Entry<String, Integer[]> entry : data.entrySet()) {\n      String key = entry.getKey();\n      Integer[] value = entry.getValue();\n      HoodieTestCommitMetadataGenerator.createCommitFileWithMetadata(tablePath, key, HoodieCLI.conf,\n          Option.of(value[0]), Option.of(value[1]), Collections.singletonMap(HoodieCommitMetadata.SCHEMA_KEY, schemaStr));\n    }\n\n    metaClient = HoodieTableMetaClient.reload(HoodieCLI.getTableMetaClient());\n    assertEquals(3, metaClient.reloadActiveTimeline().getCommitsTimeline().countInstants(),\n        \"There should have 3 commits\");\n    return data;\n  }\n","realPath":"hudi-cli/src/test/java/org/apache/hudi/cli/commands/TestTableCommand.java","repoName":"hudi","snippetEndLine":0,"snippetStartLine":0,"startLine":249,"status":"B"},{"authorDate":"2020-09-26 21:21:47","commitOrder":3,"curCode":"  private LinkedHashMap<String, Integer[]> generateData() throws Exception {\n    \r\n    LinkedHashMap<String, Integer[]> data = new LinkedHashMap<>();\n    data.put(\"102\", new Integer[] {15, 10});\n    data.put(\"101\", new Integer[] {20, 10});\n    data.put(\"100\", new Integer[] {15, 15});\n\n    for (Map.Entry<String, Integer[]> entry : data.entrySet()) {\n      String key = entry.getKey();\n      Integer[] value = entry.getValue();\n      HoodieTestCommitMetadataGenerator.createCommitFileWithMetadata(tablePath, key, jsc.hadoopConfiguration(),\n          Option.of(value[0]), Option.of(value[1]));\n    }\n\n    metaClient = HoodieTableMetaClient.reload(HoodieCLI.getTableMetaClient());\n    assertEquals(3, metaClient.reloadActiveTimeline().getCommitsTimeline().countInstants(),\n        \"There should have 3 commits\");\n    return data;\n  }\n","date":"2020-09-26 21:21:47","endLine":97,"groupId":"4183","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"generateData","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-hudi-10-0.7/blobInfo/CC_OUT/blobs/c2/509b12d4a0a4b0dd1752d2d8607970c6bfac17.src","preCode":"  private LinkedHashMap<String, Integer[]> generateData() throws Exception {\n    \r\n    LinkedHashMap<String, Integer[]> data = new LinkedHashMap<>();\n    data.put(\"102\", new Integer[] {15, 10});\n    data.put(\"101\", new Integer[] {20, 10});\n    data.put(\"100\", new Integer[] {15, 15});\n\n    for (Map.Entry<String, Integer[]> entry : data.entrySet()) {\n      String key = entry.getKey();\n      Integer[] value = entry.getValue();\n      HoodieTestCommitMetadataGenerator.createCommitFileWithMetadata(tablePath, key, jsc.hadoopConfiguration(),\n          Option.of(value[0]), Option.of(value[1]));\n    }\n\n    metaClient = HoodieTableMetaClient.reload(HoodieCLI.getTableMetaClient());\n    assertEquals(3, metaClient.reloadActiveTimeline().getCommitsTimeline().countInstants(),\n        \"There should have 3 commits\");\n    return data;\n  }\n","realPath":"hudi-cli/src/test/java/org/apache/hudi/cli/commands/TestCommitsCommand.java","repoName":"hudi","snippetEndLine":0,"snippetStartLine":0,"startLine":79,"status":"NB"}],"commitId":"919590988a4db1b73a67188d8b1b0d971f8b766d","commitMessage":"@@@[HUDI-1914] Add fetching latest schema to table command in hudi-cli (#2964)\n\n","date":"2021-06-08 07:04:35","modifiedFileCount":"3","status":"M","submitter":"Sivabalan Narayanan"},{"authorTime":"2021-09-07 06:53:53","codes":[{"authorDate":"2021-09-07 06:53:53","commitOrder":4,"curCode":"  private LinkedHashMap<String, Integer[]> generateData(String schemaStr) throws Exception {\n    \r\n    LinkedHashMap<String, Integer[]> data = new LinkedHashMap<>();\n    data.put(\"102\", new Integer[] {15, 10});\n    data.put(\"101\", new Integer[] {20, 10});\n    data.put(\"100\", new Integer[] {15, 15});\n    for (Map.Entry<String, Integer[]> entry : data.entrySet()) {\n      String key = entry.getKey();\n      Integer[] value = entry.getValue();\n      HoodieTestCommitMetadataGenerator.createCommitFileWithMetadata(tablePath, key, HoodieCLI.conf,\n          Option.of(value[0]), Option.of(value[1]), Collections.singletonMap(HoodieCommitMetadata.SCHEMA_KEY, schemaStr));\n    }\n\n    HoodieTableMetaClient metaClient = HoodieTableMetaClient.reload(HoodieCLI.getTableMetaClient());\n    assertEquals(3, metaClient.reloadActiveTimeline().getCommitsTimeline().countInstants(),\n        \"There should have 3 commits\");\n    return data;\n  }\n","date":"2021-09-07 06:53:53","endLine":273,"groupId":"1090","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"generateData","params":"(StringschemaStr)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-hudi-10-0.7/blobInfo/CC_OUT/blobs/83/deb34bf5a9411859c3bf53e588b169c55e6394.src","preCode":"  private LinkedHashMap<String, Integer[]> generateData(String schemaStr) throws Exception {\n    \r\n    LinkedHashMap<String, Integer[]> data = new LinkedHashMap<>();\n    data.put(\"102\", new Integer[] {15, 10});\n    data.put(\"101\", new Integer[] {20, 10});\n    data.put(\"100\", new Integer[] {15, 15});\n    for (Map.Entry<String, Integer[]> entry : data.entrySet()) {\n      String key = entry.getKey();\n      Integer[] value = entry.getValue();\n      HoodieTestCommitMetadataGenerator.createCommitFileWithMetadata(tablePath, key, HoodieCLI.conf,\n          Option.of(value[0]), Option.of(value[1]), Collections.singletonMap(HoodieCommitMetadata.SCHEMA_KEY, schemaStr));\n    }\n\n    metaClient = HoodieTableMetaClient.reload(HoodieCLI.getTableMetaClient());\n    assertEquals(3, metaClient.reloadActiveTimeline().getCommitsTimeline().countInstants(),\n        \"There should have 3 commits\");\n    return data;\n  }\n","realPath":"hudi-cli/src/test/java/org/apache/hudi/cli/commands/TestTableCommand.java","repoName":"hudi","snippetEndLine":0,"snippetStartLine":0,"startLine":256,"status":"M"},{"authorDate":"2021-09-07 06:53:53","commitOrder":4,"curCode":"  private LinkedHashMap<String, Integer[]> generateData() throws Exception {\n    \r\n    LinkedHashMap<String, Integer[]> data = new LinkedHashMap<>();\n    data.put(\"102\", new Integer[] {15, 10});\n    data.put(\"101\", new Integer[] {20, 10});\n    data.put(\"100\", new Integer[] {15, 15});\n\n    for (Map.Entry<String, Integer[]> entry : data.entrySet()) {\n      String key = entry.getKey();\n      Integer[] value = entry.getValue();\n      HoodieTestCommitMetadataGenerator.createCommitFileWithMetadata(tablePath1, key, hadoopConf(),\n          Option.of(value[0]), Option.of(value[1]));\n    }\n\n    metaClient = HoodieTableMetaClient.reload(HoodieCLI.getTableMetaClient());\n    assertEquals(3, metaClient.reloadActiveTimeline().getCommitsTimeline().countInstants(),\n        \"There should have 3 commits\");\n    return data;\n  }\n","date":"2021-09-07 06:53:53","endLine":108,"groupId":"1090","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"generateData","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-hudi-10-0.7/blobInfo/CC_OUT/blobs/cd/f642799438d52e9df24e58a37dea1271213c4e.src","preCode":"  private LinkedHashMap<String, Integer[]> generateData() throws Exception {\n    \r\n    LinkedHashMap<String, Integer[]> data = new LinkedHashMap<>();\n    data.put(\"102\", new Integer[] {15, 10});\n    data.put(\"101\", new Integer[] {20, 10});\n    data.put(\"100\", new Integer[] {15, 15});\n\n    for (Map.Entry<String, Integer[]> entry : data.entrySet()) {\n      String key = entry.getKey();\n      Integer[] value = entry.getValue();\n      HoodieTestCommitMetadataGenerator.createCommitFileWithMetadata(tablePath, key, jsc.hadoopConfiguration(),\n          Option.of(value[0]), Option.of(value[1]));\n    }\n\n    metaClient = HoodieTableMetaClient.reload(HoodieCLI.getTableMetaClient());\n    assertEquals(3, metaClient.reloadActiveTimeline().getCommitsTimeline().countInstants(),\n        \"There should have 3 commits\");\n    return data;\n  }\n","realPath":"hudi-cli/src/test/java/org/apache/hudi/cli/commands/TestCommitsCommand.java","repoName":"hudi","snippetEndLine":0,"snippetStartLine":0,"startLine":90,"status":"M"}],"commitId":"cf002b6918ffcdb7528857861372dd73ddb7e31d","commitMessage":"@@@[HUDI-2079] Make CLI command tests functional (#3601)\n\nMake all tests in org.apache.hudi.cli.commands extend org.apache.hudi.cli.functional.CLIFunctionalTestHarness and tag as \"functional\".\n\nThis also resolves a blocker where DFS init consistently failed when moving to ubuntu 18.04","date":"2021-09-07 06:53:53","modifiedFileCount":"17","status":"M","submitter":"Raymond Xu"}]
