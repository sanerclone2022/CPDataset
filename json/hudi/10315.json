[{"authorTime":"2020-08-06 12:34:55","codes":[{"authorDate":"2020-08-06 12:34:55","commitOrder":1,"curCode":"  public List<PartitionEvent> getPartitionEvents(Map<List<String>, String> tablePartitions, List<String> partitionStoragePartitions) {\n    Map<String, String> paths = new HashMap<>();\n\n    for (Map.Entry<List<String>, String> entry : tablePartitions.entrySet()) {\n      List<String> partitionValues = entry.getKey();\n      Collections.sort(partitionValues);\n      String fullTablePartitionPath = entry.getValue();\n      paths.put(String.join(\", \", partitionValues), fullTablePartitionPath);\n    }\n    List<PartitionEvent> events = new ArrayList<>();\n    for (String storagePartition : partitionStoragePartitions) {\n      Path storagePartitionPath = FSUtils.getPartitionPath(dlaConfig.basePath, storagePartition);\n      String fullStoragePartitionPath = Path.getPathWithoutSchemeAndAuthority(storagePartitionPath).toUri().getPath();\n      \r\n      List<String> storagePartitionValues = partitionValueExtractor.extractPartitionValuesInPath(storagePartition);\n      if (dlaConfig.useDLASyncHiveStylePartitioning) {\n        String partition = String.join(\"/\", storagePartitionValues);\n        storagePartitionPath = FSUtils.getPartitionPath(dlaConfig.basePath, partition);\n        fullStoragePartitionPath = Path.getPathWithoutSchemeAndAuthority(storagePartitionPath).toUri().getPath();\n      }\n      Collections.sort(storagePartitionValues);\n      if (!storagePartitionValues.isEmpty()) {\n        String storageValue = String.join(\", \", storagePartitionValues);\n        if (!paths.containsKey(storageValue)) {\n          events.add(PartitionEvent.newPartitionAddEvent(storagePartition));\n        } else if (!paths.get(storageValue).equals(fullStoragePartitionPath)) {\n          events.add(PartitionEvent.newPartitionUpdateEvent(storagePartition));\n        }\n      }\n    }\n    return events;\n  }\n","date":"2020-08-06 12:34:55","endLine":352,"groupId":"1172","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"getPartitionEvents","params":"(Map<List<String>@String>tablePartitions@List<String>partitionStoragePartitions)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-hudi-10-0.7/blobInfo/CC_OUT/blobs/34/a96c9ad8fe617fa7fd9dfdb6fd8f4cf7b94db8.src","preCode":"  public List<PartitionEvent> getPartitionEvents(Map<List<String>, String> tablePartitions, List<String> partitionStoragePartitions) {\n    Map<String, String> paths = new HashMap<>();\n\n    for (Map.Entry<List<String>, String> entry : tablePartitions.entrySet()) {\n      List<String> partitionValues = entry.getKey();\n      Collections.sort(partitionValues);\n      String fullTablePartitionPath = entry.getValue();\n      paths.put(String.join(\", \", partitionValues), fullTablePartitionPath);\n    }\n    List<PartitionEvent> events = new ArrayList<>();\n    for (String storagePartition : partitionStoragePartitions) {\n      Path storagePartitionPath = FSUtils.getPartitionPath(dlaConfig.basePath, storagePartition);\n      String fullStoragePartitionPath = Path.getPathWithoutSchemeAndAuthority(storagePartitionPath).toUri().getPath();\n      \r\n      List<String> storagePartitionValues = partitionValueExtractor.extractPartitionValuesInPath(storagePartition);\n      if (dlaConfig.useDLASyncHiveStylePartitioning) {\n        String partition = String.join(\"/\", storagePartitionValues);\n        storagePartitionPath = FSUtils.getPartitionPath(dlaConfig.basePath, partition);\n        fullStoragePartitionPath = Path.getPathWithoutSchemeAndAuthority(storagePartitionPath).toUri().getPath();\n      }\n      Collections.sort(storagePartitionValues);\n      if (!storagePartitionValues.isEmpty()) {\n        String storageValue = String.join(\", \", storagePartitionValues);\n        if (!paths.containsKey(storageValue)) {\n          events.add(PartitionEvent.newPartitionAddEvent(storagePartition));\n        } else if (!paths.get(storageValue).equals(fullStoragePartitionPath)) {\n          events.add(PartitionEvent.newPartitionUpdateEvent(storagePartition));\n        }\n      }\n    }\n    return events;\n  }\n","realPath":"hudi-sync/hudi-dla-sync/src/main/java/org/apache/hudi/dla/HoodieDLAClient.java","repoName":"hudi","snippetEndLine":0,"snippetStartLine":0,"startLine":321,"status":"B"},{"authorDate":"2020-08-06 12:34:55","commitOrder":1,"curCode":"  List<PartitionEvent> getPartitionEvents(List<Partition> tablePartitions, List<String> partitionStoragePartitions) {\n    Map<String, String> paths = new HashMap<>();\n    for (Partition tablePartition : tablePartitions) {\n      List<String> hivePartitionValues = tablePartition.getValues();\n      Collections.sort(hivePartitionValues);\n      String fullTablePartitionPath =\n          Path.getPathWithoutSchemeAndAuthority(new Path(tablePartition.getSd().getLocation())).toUri().getPath();\n      paths.put(String.join(\", \", hivePartitionValues), fullTablePartitionPath);\n    }\n\n    List<PartitionEvent> events = new ArrayList<>();\n    for (String storagePartition : partitionStoragePartitions) {\n      Path storagePartitionPath = FSUtils.getPartitionPath(syncConfig.basePath, storagePartition);\n      String fullStoragePartitionPath = Path.getPathWithoutSchemeAndAuthority(storagePartitionPath).toUri().getPath();\n      \r\n      List<String> storagePartitionValues = partitionValueExtractor.extractPartitionValuesInPath(storagePartition);\n      Collections.sort(storagePartitionValues);\n      if (!storagePartitionValues.isEmpty()) {\n        String storageValue = String.join(\", \", storagePartitionValues);\n        if (!paths.containsKey(storageValue)) {\n          events.add(PartitionEvent.newPartitionAddEvent(storagePartition));\n        } else if (!paths.get(storageValue).equals(fullStoragePartitionPath)) {\n          events.add(PartitionEvent.newPartitionUpdateEvent(storagePartition));\n        }\n      }\n    }\n    return events;\n  }\n","date":"2020-08-06 12:34:55","endLine":230,"groupId":"1704","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"getPartitionEvents","params":"(List<Partition>tablePartitions@List<String>partitionStoragePartitions)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-hudi-10-0.7/blobInfo/CC_OUT/blobs/5a/4b72a1c69a7c5d5ae1f403064577e34d68ba42.src","preCode":"  List<PartitionEvent> getPartitionEvents(List<Partition> tablePartitions, List<String> partitionStoragePartitions) {\n    Map<String, String> paths = new HashMap<>();\n    for (Partition tablePartition : tablePartitions) {\n      List<String> hivePartitionValues = tablePartition.getValues();\n      Collections.sort(hivePartitionValues);\n      String fullTablePartitionPath =\n          Path.getPathWithoutSchemeAndAuthority(new Path(tablePartition.getSd().getLocation())).toUri().getPath();\n      paths.put(String.join(\", \", hivePartitionValues), fullTablePartitionPath);\n    }\n\n    List<PartitionEvent> events = new ArrayList<>();\n    for (String storagePartition : partitionStoragePartitions) {\n      Path storagePartitionPath = FSUtils.getPartitionPath(syncConfig.basePath, storagePartition);\n      String fullStoragePartitionPath = Path.getPathWithoutSchemeAndAuthority(storagePartitionPath).toUri().getPath();\n      \r\n      List<String> storagePartitionValues = partitionValueExtractor.extractPartitionValuesInPath(storagePartition);\n      Collections.sort(storagePartitionValues);\n      if (!storagePartitionValues.isEmpty()) {\n        String storageValue = String.join(\", \", storagePartitionValues);\n        if (!paths.containsKey(storageValue)) {\n          events.add(PartitionEvent.newPartitionAddEvent(storagePartition));\n        } else if (!paths.get(storageValue).equals(fullStoragePartitionPath)) {\n          events.add(PartitionEvent.newPartitionUpdateEvent(storagePartition));\n        }\n      }\n    }\n    return events;\n  }\n","realPath":"hudi-sync/hudi-hive-sync/src/main/java/org/apache/hudi/hive/HoodieHiveClient.java","repoName":"hudi","snippetEndLine":0,"snippetStartLine":0,"startLine":203,"status":"B"}],"commitId":"51ea27d665d8053895dd047ca85e3338b357a81d","commitMessage":"@@@[HUDI-875] Abstract hudi-sync-common.  and support hudi-hive-sync.  hudi-dla-sync (#1810)\n\n- Generalize the hive-sync module for syncing to multiple metastores\n- Added new options for datasource\n- Added new command line for delta streamer \n\nCo-authored-by: Vinoth Chandar <vinoth@apache.org>","date":"2020-08-06 12:34:55","modifiedFileCount":"3","status":"B","submitter":"lw0090"},{"authorTime":"2021-01-06 20:49:44","codes":[{"authorDate":"2020-08-06 12:34:55","commitOrder":2,"curCode":"  public List<PartitionEvent> getPartitionEvents(Map<List<String>, String> tablePartitions, List<String> partitionStoragePartitions) {\n    Map<String, String> paths = new HashMap<>();\n\n    for (Map.Entry<List<String>, String> entry : tablePartitions.entrySet()) {\n      List<String> partitionValues = entry.getKey();\n      Collections.sort(partitionValues);\n      String fullTablePartitionPath = entry.getValue();\n      paths.put(String.join(\", \", partitionValues), fullTablePartitionPath);\n    }\n    List<PartitionEvent> events = new ArrayList<>();\n    for (String storagePartition : partitionStoragePartitions) {\n      Path storagePartitionPath = FSUtils.getPartitionPath(dlaConfig.basePath, storagePartition);\n      String fullStoragePartitionPath = Path.getPathWithoutSchemeAndAuthority(storagePartitionPath).toUri().getPath();\n      \r\n      List<String> storagePartitionValues = partitionValueExtractor.extractPartitionValuesInPath(storagePartition);\n      if (dlaConfig.useDLASyncHiveStylePartitioning) {\n        String partition = String.join(\"/\", storagePartitionValues);\n        storagePartitionPath = FSUtils.getPartitionPath(dlaConfig.basePath, partition);\n        fullStoragePartitionPath = Path.getPathWithoutSchemeAndAuthority(storagePartitionPath).toUri().getPath();\n      }\n      Collections.sort(storagePartitionValues);\n      if (!storagePartitionValues.isEmpty()) {\n        String storageValue = String.join(\", \", storagePartitionValues);\n        if (!paths.containsKey(storageValue)) {\n          events.add(PartitionEvent.newPartitionAddEvent(storagePartition));\n        } else if (!paths.get(storageValue).equals(fullStoragePartitionPath)) {\n          events.add(PartitionEvent.newPartitionUpdateEvent(storagePartition));\n        }\n      }\n    }\n    return events;\n  }\n","date":"2020-08-06 12:34:55","endLine":352,"groupId":"10315","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"getPartitionEvents","params":"(Map<List<String>@String>tablePartitions@List<String>partitionStoragePartitions)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-hudi-10-0.7/blobInfo/CC_OUT/blobs/34/a96c9ad8fe617fa7fd9dfdb6fd8f4cf7b94db8.src","preCode":"  public List<PartitionEvent> getPartitionEvents(Map<List<String>, String> tablePartitions, List<String> partitionStoragePartitions) {\n    Map<String, String> paths = new HashMap<>();\n\n    for (Map.Entry<List<String>, String> entry : tablePartitions.entrySet()) {\n      List<String> partitionValues = entry.getKey();\n      Collections.sort(partitionValues);\n      String fullTablePartitionPath = entry.getValue();\n      paths.put(String.join(\", \", partitionValues), fullTablePartitionPath);\n    }\n    List<PartitionEvent> events = new ArrayList<>();\n    for (String storagePartition : partitionStoragePartitions) {\n      Path storagePartitionPath = FSUtils.getPartitionPath(dlaConfig.basePath, storagePartition);\n      String fullStoragePartitionPath = Path.getPathWithoutSchemeAndAuthority(storagePartitionPath).toUri().getPath();\n      \r\n      List<String> storagePartitionValues = partitionValueExtractor.extractPartitionValuesInPath(storagePartition);\n      if (dlaConfig.useDLASyncHiveStylePartitioning) {\n        String partition = String.join(\"/\", storagePartitionValues);\n        storagePartitionPath = FSUtils.getPartitionPath(dlaConfig.basePath, partition);\n        fullStoragePartitionPath = Path.getPathWithoutSchemeAndAuthority(storagePartitionPath).toUri().getPath();\n      }\n      Collections.sort(storagePartitionValues);\n      if (!storagePartitionValues.isEmpty()) {\n        String storageValue = String.join(\", \", storagePartitionValues);\n        if (!paths.containsKey(storageValue)) {\n          events.add(PartitionEvent.newPartitionAddEvent(storagePartition));\n        } else if (!paths.get(storageValue).equals(fullStoragePartitionPath)) {\n          events.add(PartitionEvent.newPartitionUpdateEvent(storagePartition));\n        }\n      }\n    }\n    return events;\n  }\n","realPath":"hudi-sync/hudi-dla-sync/src/main/java/org/apache/hudi/dla/HoodieDLAClient.java","repoName":"hudi","snippetEndLine":0,"snippetStartLine":0,"startLine":321,"status":"N"},{"authorDate":"2021-01-06 20:49:44","commitOrder":2,"curCode":"  List<PartitionEvent> getPartitionEvents(List<Partition> tablePartitions, List<String> partitionStoragePartitions) {\n    Map<String, String> paths = new HashMap<>();\n    for (Partition tablePartition : tablePartitions) {\n      List<String> hivePartitionValues = tablePartition.getValues();\n      String fullTablePartitionPath =\n          Path.getPathWithoutSchemeAndAuthority(new Path(tablePartition.getSd().getLocation())).toUri().getPath();\n      paths.put(String.join(\", \", hivePartitionValues), fullTablePartitionPath);\n    }\n\n    List<PartitionEvent> events = new ArrayList<>();\n    for (String storagePartition : partitionStoragePartitions) {\n      Path storagePartitionPath = FSUtils.getPartitionPath(syncConfig.basePath, storagePartition);\n      String fullStoragePartitionPath = Path.getPathWithoutSchemeAndAuthority(storagePartitionPath).toUri().getPath();\n      \r\n      List<String> storagePartitionValues = partitionValueExtractor.extractPartitionValuesInPath(storagePartition);\n      if (!storagePartitionValues.isEmpty()) {\n        String storageValue = String.join(\", \", storagePartitionValues);\n        if (!paths.containsKey(storageValue)) {\n          events.add(PartitionEvent.newPartitionAddEvent(storagePartition));\n        } else if (!paths.get(storageValue).equals(fullStoragePartitionPath)) {\n          events.add(PartitionEvent.newPartitionUpdateEvent(storagePartition));\n        }\n      }\n    }\n    return events;\n  }\n","date":"2021-01-06 20:49:44","endLine":231,"groupId":"10315","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"getPartitionEvents","params":"(List<Partition>tablePartitions@List<String>partitionStoragePartitions)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-hudi-10-0.7/blobInfo/CC_OUT/blobs/b6/211671b511996b2714a37b74ed90b13e0b516c.src","preCode":"  List<PartitionEvent> getPartitionEvents(List<Partition> tablePartitions, List<String> partitionStoragePartitions) {\n    Map<String, String> paths = new HashMap<>();\n    for (Partition tablePartition : tablePartitions) {\n      List<String> hivePartitionValues = tablePartition.getValues();\n      Collections.sort(hivePartitionValues);\n      String fullTablePartitionPath =\n          Path.getPathWithoutSchemeAndAuthority(new Path(tablePartition.getSd().getLocation())).toUri().getPath();\n      paths.put(String.join(\", \", hivePartitionValues), fullTablePartitionPath);\n    }\n\n    List<PartitionEvent> events = new ArrayList<>();\n    for (String storagePartition : partitionStoragePartitions) {\n      Path storagePartitionPath = FSUtils.getPartitionPath(syncConfig.basePath, storagePartition);\n      String fullStoragePartitionPath = Path.getPathWithoutSchemeAndAuthority(storagePartitionPath).toUri().getPath();\n      \r\n      List<String> storagePartitionValues = partitionValueExtractor.extractPartitionValuesInPath(storagePartition);\n      Collections.sort(storagePartitionValues);\n      if (!storagePartitionValues.isEmpty()) {\n        String storageValue = String.join(\", \", storagePartitionValues);\n        if (!paths.containsKey(storageValue)) {\n          events.add(PartitionEvent.newPartitionAddEvent(storagePartition));\n        } else if (!paths.get(storageValue).equals(fullStoragePartitionPath)) {\n          events.add(PartitionEvent.newPartitionUpdateEvent(storagePartition));\n        }\n      }\n    }\n    return events;\n  }\n","realPath":"hudi-sync/hudi-hive-sync/src/main/java/org/apache/hudi/hive/HoodieHiveClient.java","repoName":"hudi","snippetEndLine":0,"snippetStartLine":0,"startLine":206,"status":"M"}],"commitId":"da2919a75f564be6c3d731a2c503959e416ebe71","commitMessage":"@@@[HUDI-1383] Fixing sorting of partition vals for hive sync computation (#2402)\n\n","date":"2021-01-06 20:49:44","modifiedFileCount":"3","status":"M","submitter":"Sivabalan Narayanan"}]
