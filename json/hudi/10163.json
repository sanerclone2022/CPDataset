[{"authorTime":"2019-11-02 03:40:09","codes":[{"authorDate":"2019-11-02 03:40:09","commitOrder":1,"curCode":"  public WorkflowDag build() {\n    DagNode root = new InsertNode(Config.newBuilder()\n        .withNumRecordsToInsert(100)\n        .withNumInsertPartitions(1)\n        .withNumTimesToRepeat(1)\n        .withRecordSize(1000).build());\n\n    DagNode child1 = new HiveSyncNode(Config.newBuilder().withHiveLocal(true).build());\n\n    root.addChildNode(child1);\n\n    DagNode child2 = new HiveQueryNode(Config.newBuilder().withHiveLocal(true).withHiveQueryAndResults(Arrays\n        .asList(Pair.of(\"select \" + \"count(*) from testdb1.table1 group \" + \"by rider having count(*) < 1\", 0)))\n        .build());\n    child1.addChildNode(child2);\n\n    List<DagNode> rootNodes = new ArrayList<>();\n    rootNodes.add(root);\n    return new WorkflowDag(rootNodes);\n  }\n","date":"2020-07-31 12:21:15","endLine":56,"groupId":"5728","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"build","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-hudi-10-0.7/blobInfo/CC_OUT/blobs/79/eb246882b87fece52704bdb4dfdce5bcdbe4f0.src","preCode":"  public WorkflowDag build() {\n    DagNode root = new InsertNode(Config.newBuilder()\n        .withNumRecordsToInsert(100)\n        .withNumInsertPartitions(1)\n        .withNumTimesToRepeat(1)\n        .withRecordSize(1000).build());\n\n    DagNode child1 = new HiveSyncNode(Config.newBuilder().withHiveLocal(true).build());\n\n    root.addChildNode(child1);\n\n    DagNode child2 = new HiveQueryNode(Config.newBuilder().withHiveLocal(true).withHiveQueryAndResults(Arrays\n        .asList(Pair.of(\"select \" + \"count(*) from testdb1.table1 group \" + \"by rider having count(*) < 1\", 0)))\n        .build());\n    child1.addChildNode(child2);\n\n    List<DagNode> rootNodes = new ArrayList<>();\n    rootNodes.add(root);\n    return new WorkflowDag(rootNodes);\n  }\n","realPath":"hudi-integ-test/src/test/java/org/apache/hudi/integ/testsuite/dag/HiveSyncDagGenerator.java","repoName":"hudi","snippetEndLine":0,"snippetStartLine":0,"startLine":37,"status":"B"},{"authorDate":"2019-11-02 03:40:09","commitOrder":1,"curCode":"  public WorkflowDag build() {\n    DagNode root = new InsertNode(Config.newBuilder()\n        .withNumRecordsToInsert(100)\n        .withNumInsertPartitions(1)\n        .withNumTimesToRepeat(1)\n        .withRecordSize(1000).build());\n\n    DagNode child1 = new HiveSyncNode(Config.newBuilder().withHiveLocal(true).build());\n\n    root.addChildNode(child1);\n\n    DagNode child2 = new HiveQueryNode(Config.newBuilder().withHiveLocal(true).withHiveQueryAndResults(Arrays\n        .asList(Pair.of(\"select \" + \"count(*) from testdb1.table1_rt group \" + \"by rider having count(*) < 1\", 0)))\n        .build());\n    child1.addChildNode(child2);\n\n    List<DagNode> rootNodes = new ArrayList<>();\n    rootNodes.add(root);\n    return new WorkflowDag(rootNodes);\n  }\n","date":"2020-07-31 12:21:15","endLine":56,"groupId":"5728","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"build","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-hudi-10-0.7/blobInfo/CC_OUT/blobs/1f/9f7a474aebdfb8698bc29393afd600c1cd41ab.src","preCode":"  public WorkflowDag build() {\n    DagNode root = new InsertNode(Config.newBuilder()\n        .withNumRecordsToInsert(100)\n        .withNumInsertPartitions(1)\n        .withNumTimesToRepeat(1)\n        .withRecordSize(1000).build());\n\n    DagNode child1 = new HiveSyncNode(Config.newBuilder().withHiveLocal(true).build());\n\n    root.addChildNode(child1);\n\n    DagNode child2 = new HiveQueryNode(Config.newBuilder().withHiveLocal(true).withHiveQueryAndResults(Arrays\n        .asList(Pair.of(\"select \" + \"count(*) from testdb1.table1_rt group \" + \"by rider having count(*) < 1\", 0)))\n        .build());\n    child1.addChildNode(child2);\n\n    List<DagNode> rootNodes = new ArrayList<>();\n    rootNodes.add(root);\n    return new WorkflowDag(rootNodes);\n  }\n","realPath":"hudi-integ-test/src/test/java/org/apache/hudi/integ/testsuite/dag/HiveSyncDagGeneratorMOR.java","repoName":"hudi","snippetEndLine":0,"snippetStartLine":0,"startLine":37,"status":"B"}],"commitId":"2fc2b01d8647aafe2862db14fc169aa40d4ae3d5","commitMessage":"@@@[HUDI-394] Provide a basic implementation of test suite\n","date":"2020-07-31 12:21:15","modifiedFileCount":"19","status":"B","submitter":"Nishith Agarwal"},{"authorTime":"2019-11-02 03:40:09","codes":[{"authorDate":"2020-09-02 11:12:22","commitOrder":2,"curCode":"  public WorkflowDag build() {\n    DagNode root = new InsertNode(Config.newBuilder()\n        .withNumRecordsToInsert(100)\n        .withNumInsertPartitions(1)\n        .withNumTimesToRepeat(1)\n        .withRecordSize(1000).build());\n\n    DagNode child1 = new HiveSyncNode(Config.newBuilder().build());\n\n    root.addChildNode(child1);\n\n    DagNode child2 = new HiveQueryNode(Config.newBuilder().withHiveQueryAndResults(Arrays\n        .asList(Pair.of(\"select \" + \"count(*) from testdb1.table1 group \" + \"by rider having count(*) < 1\", 0)))\n        .build());\n    child1.addChildNode(child2);\n\n    List<DagNode> rootNodes = new ArrayList<>();\n    rootNodes.add(root);\n    return new WorkflowDag(rootNodes);\n  }\n","date":"2020-09-09 13:41:14","endLine":56,"groupId":"5728","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"build","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-hudi-10-0.7/blobInfo/CC_OUT/blobs/37/502c832933f6b5a973412a6fbde238f2d0f44d.src","preCode":"  public WorkflowDag build() {\n    DagNode root = new InsertNode(Config.newBuilder()\n        .withNumRecordsToInsert(100)\n        .withNumInsertPartitions(1)\n        .withNumTimesToRepeat(1)\n        .withRecordSize(1000).build());\n\n    DagNode child1 = new HiveSyncNode(Config.newBuilder().withHiveLocal(true).build());\n\n    root.addChildNode(child1);\n\n    DagNode child2 = new HiveQueryNode(Config.newBuilder().withHiveLocal(true).withHiveQueryAndResults(Arrays\n        .asList(Pair.of(\"select \" + \"count(*) from testdb1.table1 group \" + \"by rider having count(*) < 1\", 0)))\n        .build());\n    child1.addChildNode(child2);\n\n    List<DagNode> rootNodes = new ArrayList<>();\n    rootNodes.add(root);\n    return new WorkflowDag(rootNodes);\n  }\n","realPath":"hudi-integ-test/src/test/java/org/apache/hudi/integ/testsuite/dag/HiveSyncDagGenerator.java","repoName":"hudi","snippetEndLine":0,"snippetStartLine":0,"startLine":37,"status":"M"},{"authorDate":"2019-11-02 03:40:09","commitOrder":2,"curCode":"  public WorkflowDag build() {\n    DagNode root = new InsertNode(Config.newBuilder()\n        .withNumRecordsToInsert(100)\n        .withNumInsertPartitions(1)\n        .withNumTimesToRepeat(1)\n        .withRecordSize(1000).build());\n\n    DagNode child1 = new HiveSyncNode(Config.newBuilder().withHiveLocal(true).build());\n\n    root.addChildNode(child1);\n\n    DagNode child2 = new HiveQueryNode(Config.newBuilder().withHiveLocal(true).withHiveQueryAndResults(Arrays\n        .asList(Pair.of(\"select \" + \"count(*) from testdb1.table1_rt group \" + \"by rider having count(*) < 1\", 0)))\n        .build());\n    child1.addChildNode(child2);\n\n    List<DagNode> rootNodes = new ArrayList<>();\n    rootNodes.add(root);\n    return new WorkflowDag(rootNodes);\n  }\n","date":"2020-07-31 12:21:15","endLine":56,"groupId":"5728","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"build","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-hudi-10-0.7/blobInfo/CC_OUT/blobs/1f/9f7a474aebdfb8698bc29393afd600c1cd41ab.src","preCode":"  public WorkflowDag build() {\n    DagNode root = new InsertNode(Config.newBuilder()\n        .withNumRecordsToInsert(100)\n        .withNumInsertPartitions(1)\n        .withNumTimesToRepeat(1)\n        .withRecordSize(1000).build());\n\n    DagNode child1 = new HiveSyncNode(Config.newBuilder().withHiveLocal(true).build());\n\n    root.addChildNode(child1);\n\n    DagNode child2 = new HiveQueryNode(Config.newBuilder().withHiveLocal(true).withHiveQueryAndResults(Arrays\n        .asList(Pair.of(\"select \" + \"count(*) from testdb1.table1_rt group \" + \"by rider having count(*) < 1\", 0)))\n        .build());\n    child1.addChildNode(child2);\n\n    List<DagNode> rootNodes = new ArrayList<>();\n    rootNodes.add(root);\n    return new WorkflowDag(rootNodes);\n  }\n","realPath":"hudi-integ-test/src/test/java/org/apache/hudi/integ/testsuite/dag/HiveSyncDagGeneratorMOR.java","repoName":"hudi","snippetEndLine":0,"snippetStartLine":0,"startLine":37,"status":"N"}],"commitId":"53d1e551108c6fcde3b39f0080b64996892256de","commitMessage":"@@@Test Suite should work with Docker + Unit Tests\n","date":"2020-09-09 13:41:14","modifiedFileCount":"14","status":"M","submitter":"Abhishek Modi"},{"authorTime":"2021-03-10 05:29:38","codes":[{"authorDate":"2020-09-02 11:12:22","commitOrder":3,"curCode":"  public WorkflowDag build() {\n    DagNode root = new InsertNode(Config.newBuilder()\n        .withNumRecordsToInsert(100)\n        .withNumInsertPartitions(1)\n        .withNumTimesToRepeat(1)\n        .withRecordSize(1000).build());\n\n    DagNode child1 = new HiveSyncNode(Config.newBuilder().build());\n\n    root.addChildNode(child1);\n\n    DagNode child2 = new HiveQueryNode(Config.newBuilder().withHiveQueryAndResults(Arrays\n        .asList(Pair.of(\"select \" + \"count(*) from testdb1.table1 group \" + \"by rider having count(*) < 1\", 0)))\n        .build());\n    child1.addChildNode(child2);\n\n    List<DagNode> rootNodes = new ArrayList<>();\n    rootNodes.add(root);\n    return new WorkflowDag(rootNodes);\n  }\n","date":"2020-09-09 13:41:14","endLine":56,"groupId":"10163","id":5,"instanceNumber":1,"isCurCommit":1,"methodName":"build","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-hudi-10-0.7/blobInfo/CC_OUT/blobs/37/502c832933f6b5a973412a6fbde238f2d0f44d.src","preCode":"  public WorkflowDag build() {\n    DagNode root = new InsertNode(Config.newBuilder()\n        .withNumRecordsToInsert(100)\n        .withNumInsertPartitions(1)\n        .withNumTimesToRepeat(1)\n        .withRecordSize(1000).build());\n\n    DagNode child1 = new HiveSyncNode(Config.newBuilder().build());\n\n    root.addChildNode(child1);\n\n    DagNode child2 = new HiveQueryNode(Config.newBuilder().withHiveQueryAndResults(Arrays\n        .asList(Pair.of(\"select \" + \"count(*) from testdb1.table1 group \" + \"by rider having count(*) < 1\", 0)))\n        .build());\n    child1.addChildNode(child2);\n\n    List<DagNode> rootNodes = new ArrayList<>();\n    rootNodes.add(root);\n    return new WorkflowDag(rootNodes);\n  }\n","realPath":"hudi-integ-test/src/test/java/org/apache/hudi/integ/testsuite/dag/HiveSyncDagGenerator.java","repoName":"hudi","snippetEndLine":0,"snippetStartLine":0,"startLine":37,"status":"N"},{"authorDate":"2021-03-10 05:29:38","commitOrder":3,"curCode":"  public WorkflowDag build() {\n    DagNode root = new InsertNode(Config.newBuilder()\n        .withNumRecordsToInsert(100)\n        .withNumInsertPartitions(1)\n        .withNumTimesToRepeat(1)\n        .withRecordSize(1000).build());\n\n    DagNode child1 = new HiveSyncNode(Config.newBuilder().withHiveLocal(true).build());\n\n    root.addChildNode(child1);\n\n    DagNode child2 = new HiveQueryNode(Config.newBuilder().withHiveLocal(true).withHiveQueryAndResults(Arrays\n        .asList(Pair.of(\"select \" + \"count(*) from testdb1.hive_trips group \" + \"by rider having count(*) < 1\", 0),\n            Pair.of(\"select \" + \"count(*) from testdb1.hive_trips \", 100)))\n        .withHiveProperties(Arrays.asList(\"set hive.input.format=org.apache.hadoop.hive.ql.io.HiveInputFormat\"))\n        .build());\n    child1.addChildNode(child2);\n\n    List<DagNode> rootNodes = new ArrayList<>();\n    rootNodes.add(root);\n    return new WorkflowDag(rootNodes);\n  }\n","date":"2021-03-10 05:29:38","endLine":59,"groupId":"10163","id":6,"instanceNumber":2,"isCurCommit":1,"methodName":"build","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-hudi-10-0.7/blobInfo/CC_OUT/blobs/40/82d29621f24f1ee9b1679d53c45ae3daf3434b.src","preCode":"  public WorkflowDag build() {\n    DagNode root = new InsertNode(Config.newBuilder()\n        .withNumRecordsToInsert(100)\n        .withNumInsertPartitions(1)\n        .withNumTimesToRepeat(1)\n        .withRecordSize(1000).build());\n\n    DagNode child1 = new HiveSyncNode(Config.newBuilder().withHiveLocal(true).build());\n\n    root.addChildNode(child1);\n\n    DagNode child2 = new HiveQueryNode(Config.newBuilder().withHiveLocal(true).withHiveQueryAndResults(Arrays\n        .asList(Pair.of(\"select \" + \"count(*) from testdb1.table1_rt group \" + \"by rider having count(*) < 1\", 0)))\n        .build());\n    child1.addChildNode(child2);\n\n    List<DagNode> rootNodes = new ArrayList<>();\n    rootNodes.add(root);\n    return new WorkflowDag(rootNodes);\n  }\n","realPath":"hudi-integ-test/src/test/java/org/apache/hudi/integ/testsuite/dag/HiveSyncDagGeneratorMOR.java","repoName":"hudi","snippetEndLine":0,"snippetStartLine":0,"startLine":38,"status":"M"}],"commitId":"d8af24d8a2fdbead4592a36df1bd9dda333f1513","commitMessage":"@@@[HUDI-1635] Improvements to Hudi Test Suite (#2628)\n\n","date":"2021-03-10 05:29:38","modifiedFileCount":"11","status":"M","submitter":"Balajee Nagasubramaniam"}]
