[{"authorTime":"2019-11-02 03:40:09","codes":[{"authorDate":"2019-11-02 03:40:09","commitOrder":1,"curCode":"  public void execute(ExecutionContext executionContext) throws Exception {\n    log.info(\"Executing schedule compact node {}\", this.getName());\n    \r\n    \r\n    \r\n    \r\n    HoodieTableMetaClient metaClient = new HoodieTableMetaClient(executionContext.getHoodieTestSuiteWriter().getConfiguration(),\n        executionContext.getHoodieTestSuiteWriter().getCfg().targetBasePath);\n    Option<HoodieInstant> lastInstant = metaClient.getActiveTimeline().getCommitsTimeline().lastInstant();\n    if (lastInstant.isPresent()) {\n      HoodieCommitMetadata metadata = org.apache.hudi.common.model.HoodieCommitMetadata.fromBytes(metaClient\n          .getActiveTimeline().getInstantDetails(lastInstant.get()).get(), HoodieCommitMetadata.class);\n      Option<String> scheduledInstant = executionContext.getHoodieTestSuiteWriter().scheduleCompaction(Option.of(metadata\n              .getExtraMetadata()));\n      if (scheduledInstant.isPresent()) {\n        log.info(\"Scheduling compaction instant {}\", scheduledInstant.get());\n      }\n      this.result = scheduledInstant;\n    }\n  }\n","date":"2020-07-31 12:21:15","endLine":54,"groupId":"1129","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"execute","params":"(ExecutionContextexecutionContext)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-hudi-10-0.7/blobInfo/CC_OUT/blobs/93/502aee12b8ccebfc4d8aa7d7a567ee88a415d2.src","preCode":"  public void execute(ExecutionContext executionContext) throws Exception {\n    log.info(\"Executing schedule compact node {}\", this.getName());\n    \r\n    \r\n    \r\n    \r\n    HoodieTableMetaClient metaClient = new HoodieTableMetaClient(executionContext.getHoodieTestSuiteWriter().getConfiguration(),\n        executionContext.getHoodieTestSuiteWriter().getCfg().targetBasePath);\n    Option<HoodieInstant> lastInstant = metaClient.getActiveTimeline().getCommitsTimeline().lastInstant();\n    if (lastInstant.isPresent()) {\n      HoodieCommitMetadata metadata = org.apache.hudi.common.model.HoodieCommitMetadata.fromBytes(metaClient\n          .getActiveTimeline().getInstantDetails(lastInstant.get()).get(), HoodieCommitMetadata.class);\n      Option<String> scheduledInstant = executionContext.getHoodieTestSuiteWriter().scheduleCompaction(Option.of(metadata\n              .getExtraMetadata()));\n      if (scheduledInstant.isPresent()) {\n        log.info(\"Scheduling compaction instant {}\", scheduledInstant.get());\n      }\n      this.result = scheduledInstant;\n    }\n  }\n","realPath":"hudi-integ-test/src/main/java/org/apache/hudi/integ/testsuite/dag/nodes/ScheduleCompactNode.java","repoName":"hudi","snippetEndLine":0,"snippetStartLine":0,"startLine":35,"status":"B"},{"authorDate":"2019-11-02 03:40:09","commitOrder":1,"curCode":"  public void execute(ExecutionContext executionContext) throws Exception {\n    HoodieTableMetaClient metaClient = new HoodieTableMetaClient(executionContext.getHoodieTestSuiteWriter().getConfiguration(),\n        executionContext.getHoodieTestSuiteWriter().getCfg().targetBasePath);\n    Option<HoodieInstant> lastInstant = metaClient.getActiveTimeline()\n        .getCommitsAndCompactionTimeline().filterPendingCompactionTimeline().lastInstant();\n    if (lastInstant.isPresent()) {\n      log.info(\"Compacting instant {}\", lastInstant.get());\n      this.result = executionContext.getHoodieTestSuiteWriter().compact(Option.of(lastInstant.get().getTimestamp()));\n    }\n  }\n","date":"2020-07-31 12:21:15","endLine":45,"groupId":"716","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"execute","params":"(ExecutionContextexecutionContext)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-hudi-10-0.7/blobInfo/CC_OUT/blobs/92/fe53c3e21954063136b81921b0c278c51680e7.src","preCode":"  public void execute(ExecutionContext executionContext) throws Exception {\n    HoodieTableMetaClient metaClient = new HoodieTableMetaClient(executionContext.getHoodieTestSuiteWriter().getConfiguration(),\n        executionContext.getHoodieTestSuiteWriter().getCfg().targetBasePath);\n    Option<HoodieInstant> lastInstant = metaClient.getActiveTimeline()\n        .getCommitsAndCompactionTimeline().filterPendingCompactionTimeline().lastInstant();\n    if (lastInstant.isPresent()) {\n      log.info(\"Compacting instant {}\", lastInstant.get());\n      this.result = executionContext.getHoodieTestSuiteWriter().compact(Option.of(lastInstant.get().getTimestamp()));\n    }\n  }\n","realPath":"hudi-integ-test/src/main/java/org/apache/hudi/integ/testsuite/dag/nodes/CompactNode.java","repoName":"hudi","snippetEndLine":0,"snippetStartLine":0,"startLine":36,"status":"B"}],"commitId":"2fc2b01d8647aafe2862db14fc169aa40d4ae3d5","commitMessage":"@@@[HUDI-394] Provide a basic implementation of test suite\n","date":"2020-07-31 12:21:15","modifiedFileCount":"19","status":"B","submitter":"Nishith Agarwal"},{"authorTime":"2021-02-13 01:29:21","codes":[{"authorDate":"2021-02-13 01:29:21","commitOrder":2,"curCode":"  public void execute(ExecutionContext executionContext, int curItrCount) throws Exception {\n    log.info(\"Executing schedule compact node {}\", this.getName());\n    \r\n    \r\n    \r\n    \r\n    HoodieTableMetaClient metaClient = new HoodieTableMetaClient(executionContext.getHoodieTestSuiteWriter().getConfiguration(),\n        executionContext.getHoodieTestSuiteWriter().getCfg().targetBasePath);\n    Option<HoodieInstant> lastInstant = metaClient.getActiveTimeline().getCommitsTimeline().lastInstant();\n    if (lastInstant.isPresent()) {\n      HoodieCommitMetadata metadata = org.apache.hudi.common.model.HoodieCommitMetadata.fromBytes(metaClient\n          .getActiveTimeline().getInstantDetails(lastInstant.get()).get(), HoodieCommitMetadata.class);\n      Option<String> scheduledInstant = executionContext.getHoodieTestSuiteWriter().scheduleCompaction(Option.of(metadata\n          .getExtraMetadata()));\n      if (scheduledInstant.isPresent()) {\n        log.info(\"Scheduling compaction instant {}\", scheduledInstant.get());\n      }\n      this.result = scheduledInstant;\n    }\n  }\n","date":"2021-02-13 01:29:21","endLine":57,"groupId":"1129","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"execute","params":"(ExecutionContextexecutionContext@intcurItrCount)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-hudi-10-0.7/blobInfo/CC_OUT/blobs/c5/4b25a3c4993e00be9a1d682eced143e4fe62ef.src","preCode":"  public void execute(ExecutionContext executionContext) throws Exception {\n    log.info(\"Executing schedule compact node {}\", this.getName());\n    \r\n    \r\n    \r\n    \r\n    HoodieTableMetaClient metaClient = new HoodieTableMetaClient(executionContext.getHoodieTestSuiteWriter().getConfiguration(),\n        executionContext.getHoodieTestSuiteWriter().getCfg().targetBasePath);\n    Option<HoodieInstant> lastInstant = metaClient.getActiveTimeline().getCommitsTimeline().lastInstant();\n    if (lastInstant.isPresent()) {\n      HoodieCommitMetadata metadata = org.apache.hudi.common.model.HoodieCommitMetadata.fromBytes(metaClient\n          .getActiveTimeline().getInstantDetails(lastInstant.get()).get(), HoodieCommitMetadata.class);\n      Option<String> scheduledInstant = executionContext.getHoodieTestSuiteWriter().scheduleCompaction(Option.of(metadata\n              .getExtraMetadata()));\n      if (scheduledInstant.isPresent()) {\n        log.info(\"Scheduling compaction instant {}\", scheduledInstant.get());\n      }\n      this.result = scheduledInstant;\n    }\n  }\n","realPath":"hudi-integ-test/src/main/java/org/apache/hudi/integ/testsuite/dag/nodes/ScheduleCompactNode.java","repoName":"hudi","snippetEndLine":0,"snippetStartLine":0,"startLine":38,"status":"M"},{"authorDate":"2021-02-13 01:29:21","commitOrder":2,"curCode":"  public void execute(ExecutionContext executionContext, int curItrCount) throws Exception {\n    HoodieTableMetaClient metaClient = new HoodieTableMetaClient(executionContext.getHoodieTestSuiteWriter().getConfiguration(),\n        executionContext.getHoodieTestSuiteWriter().getCfg().targetBasePath);\n    Option<HoodieInstant> lastInstant = metaClient.getActiveTimeline()\n        .getCommitsAndCompactionTimeline().filterPendingCompactionTimeline().lastInstant();\n    if (lastInstant.isPresent()) {\n      log.info(\"Compacting instant {}\", lastInstant.get());\n      this.result = executionContext.getHoodieTestSuiteWriter().compact(Option.of(lastInstant.get().getTimestamp()));\n    }\n  }\n","date":"2021-02-13 01:29:21","endLine":56,"groupId":"716","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"execute","params":"(ExecutionContextexecutionContext@intcurItrCount)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-hudi-10-0.7/blobInfo/CC_OUT/blobs/7c/9090d2bb2eae19f47fab7931cde6a0fe402c2d.src","preCode":"  public void execute(ExecutionContext executionContext) throws Exception {\n    HoodieTableMetaClient metaClient = new HoodieTableMetaClient(executionContext.getHoodieTestSuiteWriter().getConfiguration(),\n        executionContext.getHoodieTestSuiteWriter().getCfg().targetBasePath);\n    Option<HoodieInstant> lastInstant = metaClient.getActiveTimeline()\n        .getCommitsAndCompactionTimeline().filterPendingCompactionTimeline().lastInstant();\n    if (lastInstant.isPresent()) {\n      log.info(\"Compacting instant {}\", lastInstant.get());\n      this.result = executionContext.getHoodieTestSuiteWriter().compact(Option.of(lastInstant.get().getTimestamp()));\n    }\n  }\n","realPath":"hudi-integ-test/src/main/java/org/apache/hudi/integ/testsuite/dag/nodes/CompactNode.java","repoName":"hudi","snippetEndLine":0,"snippetStartLine":0,"startLine":47,"status":"M"}],"commitId":"d5f202821b11659693a2e934d4b8f4c99f19755e","commitMessage":"@@@Adding fixes to test suite framework. Adding clustering node and validate async operations node. (#2400)\n\n","date":"2021-02-13 01:29:21","modifiedFileCount":"21","status":"M","submitter":"Sivabalan Narayanan"},{"authorTime":"2021-02-20 09:54:26","codes":[{"authorDate":"2021-02-20 09:54:26","commitOrder":3,"curCode":"  public void execute(ExecutionContext executionContext, int curItrCount) throws Exception {\n    log.info(\"Executing schedule compact node {}\", this.getName());\n    \r\n    \r\n    \r\n    \r\n    HoodieTableMetaClient metaClient =\n        HoodieTableMetaClient.builder().setConf(executionContext.getHoodieTestSuiteWriter().getConfiguration()).setBasePath(executionContext.getHoodieTestSuiteWriter().getCfg().targetBasePath)\n            .build();\n    Option<HoodieInstant> lastInstant = metaClient.getActiveTimeline().getCommitsTimeline().lastInstant();\n    if (lastInstant.isPresent()) {\n      HoodieCommitMetadata metadata = org.apache.hudi.common.model.HoodieCommitMetadata.fromBytes(metaClient\n          .getActiveTimeline().getInstantDetails(lastInstant.get()).get(), HoodieCommitMetadata.class);\n      Option<String> scheduledInstant = executionContext.getHoodieTestSuiteWriter().scheduleCompaction(Option.of(metadata\n          .getExtraMetadata()));\n      if (scheduledInstant.isPresent()) {\n        log.info(\"Scheduling compaction instant {}\", scheduledInstant.get());\n      }\n      this.result = scheduledInstant;\n    }\n  }\n","date":"2021-02-20 09:54:26","endLine":58,"groupId":"1129","id":5,"instanceNumber":1,"isCurCommit":1,"methodName":"execute","params":"(ExecutionContextexecutionContext@intcurItrCount)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-hudi-10-0.7/blobInfo/CC_OUT/blobs/62/bf9b09a5793fff10a8969139c08211dd1b2f5b.src","preCode":"  public void execute(ExecutionContext executionContext, int curItrCount) throws Exception {\n    log.info(\"Executing schedule compact node {}\", this.getName());\n    \r\n    \r\n    \r\n    \r\n    HoodieTableMetaClient metaClient = new HoodieTableMetaClient(executionContext.getHoodieTestSuiteWriter().getConfiguration(),\n        executionContext.getHoodieTestSuiteWriter().getCfg().targetBasePath);\n    Option<HoodieInstant> lastInstant = metaClient.getActiveTimeline().getCommitsTimeline().lastInstant();\n    if (lastInstant.isPresent()) {\n      HoodieCommitMetadata metadata = org.apache.hudi.common.model.HoodieCommitMetadata.fromBytes(metaClient\n          .getActiveTimeline().getInstantDetails(lastInstant.get()).get(), HoodieCommitMetadata.class);\n      Option<String> scheduledInstant = executionContext.getHoodieTestSuiteWriter().scheduleCompaction(Option.of(metadata\n          .getExtraMetadata()));\n      if (scheduledInstant.isPresent()) {\n        log.info(\"Scheduling compaction instant {}\", scheduledInstant.get());\n      }\n      this.result = scheduledInstant;\n    }\n  }\n","realPath":"hudi-integ-test/src/main/java/org/apache/hudi/integ/testsuite/dag/nodes/ScheduleCompactNode.java","repoName":"hudi","snippetEndLine":0,"snippetStartLine":0,"startLine":38,"status":"M"},{"authorDate":"2021-02-20 09:54:26","commitOrder":3,"curCode":"  public void execute(ExecutionContext executionContext, int curItrCount) throws Exception {\n    HoodieTableMetaClient metaClient =\n        HoodieTableMetaClient.builder().setConf(executionContext.getHoodieTestSuiteWriter().getConfiguration()).setBasePath(executionContext.getHoodieTestSuiteWriter().getCfg().targetBasePath)\n            .build();\n    Option<HoodieInstant> lastInstant = metaClient.getActiveTimeline()\n        .getCommitsAndCompactionTimeline().filterPendingCompactionTimeline().lastInstant();\n    if (lastInstant.isPresent()) {\n      log.info(\"Compacting instant {}\", lastInstant.get());\n      this.result = executionContext.getHoodieTestSuiteWriter().compact(Option.of(lastInstant.get().getTimestamp()));\n    }\n  }\n","date":"2021-02-20 09:54:26","endLine":57,"groupId":"716","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"execute","params":"(ExecutionContextexecutionContext@intcurItrCount)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-hudi-10-0.7/blobInfo/CC_OUT/blobs/80/430661ec4e3058773dcba263da73a69894279e.src","preCode":"  public void execute(ExecutionContext executionContext, int curItrCount) throws Exception {\n    HoodieTableMetaClient metaClient = new HoodieTableMetaClient(executionContext.getHoodieTestSuiteWriter().getConfiguration(),\n        executionContext.getHoodieTestSuiteWriter().getCfg().targetBasePath);\n    Option<HoodieInstant> lastInstant = metaClient.getActiveTimeline()\n        .getCommitsAndCompactionTimeline().filterPendingCompactionTimeline().lastInstant();\n    if (lastInstant.isPresent()) {\n      log.info(\"Compacting instant {}\", lastInstant.get());\n      this.result = executionContext.getHoodieTestSuiteWriter().compact(Option.of(lastInstant.get().getTimestamp()));\n    }\n  }\n","realPath":"hudi-integ-test/src/main/java/org/apache/hudi/integ/testsuite/dag/nodes/CompactNode.java","repoName":"hudi","snippetEndLine":0,"snippetStartLine":0,"startLine":47,"status":"M"}],"commitId":"c9fcf964b2bae56a54cb72951c8d8999eb323ed6","commitMessage":"@@@[HUDI-1315] Adding builder for HoodieTableMetaClient initialization (#2534)\n\n","date":"2021-02-20 09:54:26","modifiedFileCount":"57","status":"M","submitter":"Sivabalan Narayanan"},{"authorTime":"2021-02-20 12:12:22","codes":[{"authorDate":"2021-02-20 09:54:26","commitOrder":4,"curCode":"  public void execute(ExecutionContext executionContext, int curItrCount) throws Exception {\n    log.info(\"Executing schedule compact node {}\", this.getName());\n    \r\n    \r\n    \r\n    \r\n    HoodieTableMetaClient metaClient =\n        HoodieTableMetaClient.builder().setConf(executionContext.getHoodieTestSuiteWriter().getConfiguration()).setBasePath(executionContext.getHoodieTestSuiteWriter().getCfg().targetBasePath)\n            .build();\n    Option<HoodieInstant> lastInstant = metaClient.getActiveTimeline().getCommitsTimeline().lastInstant();\n    if (lastInstant.isPresent()) {\n      HoodieCommitMetadata metadata = org.apache.hudi.common.model.HoodieCommitMetadata.fromBytes(metaClient\n          .getActiveTimeline().getInstantDetails(lastInstant.get()).get(), HoodieCommitMetadata.class);\n      Option<String> scheduledInstant = executionContext.getHoodieTestSuiteWriter().scheduleCompaction(Option.of(metadata\n          .getExtraMetadata()));\n      if (scheduledInstant.isPresent()) {\n        log.info(\"Scheduling compaction instant {}\", scheduledInstant.get());\n      }\n      this.result = scheduledInstant;\n    }\n  }\n","date":"2021-02-20 09:54:26","endLine":58,"groupId":"10185","id":7,"instanceNumber":1,"isCurCommit":1,"methodName":"execute","params":"(ExecutionContextexecutionContext@intcurItrCount)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-hudi-10-0.7/blobInfo/CC_OUT/blobs/62/bf9b09a5793fff10a8969139c08211dd1b2f5b.src","preCode":"  public void execute(ExecutionContext executionContext, int curItrCount) throws Exception {\n    log.info(\"Executing schedule compact node {}\", this.getName());\n    \r\n    \r\n    \r\n    \r\n    HoodieTableMetaClient metaClient =\n        HoodieTableMetaClient.builder().setConf(executionContext.getHoodieTestSuiteWriter().getConfiguration()).setBasePath(executionContext.getHoodieTestSuiteWriter().getCfg().targetBasePath)\n            .build();\n    Option<HoodieInstant> lastInstant = metaClient.getActiveTimeline().getCommitsTimeline().lastInstant();\n    if (lastInstant.isPresent()) {\n      HoodieCommitMetadata metadata = org.apache.hudi.common.model.HoodieCommitMetadata.fromBytes(metaClient\n          .getActiveTimeline().getInstantDetails(lastInstant.get()).get(), HoodieCommitMetadata.class);\n      Option<String> scheduledInstant = executionContext.getHoodieTestSuiteWriter().scheduleCompaction(Option.of(metadata\n          .getExtraMetadata()));\n      if (scheduledInstant.isPresent()) {\n        log.info(\"Scheduling compaction instant {}\", scheduledInstant.get());\n      }\n      this.result = scheduledInstant;\n    }\n  }\n","realPath":"hudi-integ-test/src/main/java/org/apache/hudi/integ/testsuite/dag/nodes/ScheduleCompactNode.java","repoName":"hudi","snippetEndLine":0,"snippetStartLine":0,"startLine":38,"status":"N"},{"authorDate":"2021-02-20 12:12:22","commitOrder":4,"curCode":"  public void execute(ExecutionContext executionContext, int curItrCount) throws Exception {\n    HoodieTableMetaClient metaClient =\n        HoodieTableMetaClient.builder().setConf(executionContext.getHoodieTestSuiteWriter().getConfiguration()).setBasePath(executionContext.getHoodieTestSuiteWriter().getCfg().targetBasePath)\n            .build();\n    Option<HoodieInstant> lastInstant = metaClient.getActiveTimeline()\n        .getWriteTimeline().filterPendingCompactionTimeline().lastInstant();\n    if (lastInstant.isPresent()) {\n      log.info(\"Compacting instant {}\", lastInstant.get());\n      this.result = executionContext.getHoodieTestSuiteWriter().compact(Option.of(lastInstant.get().getTimestamp()));\n    }\n  }\n","date":"2021-02-20 12:12:22","endLine":57,"groupId":"10185","id":8,"instanceNumber":2,"isCurCommit":1,"methodName":"execute","params":"(ExecutionContextexecutionContext@intcurItrCount)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-hudi-10-0.7/blobInfo/CC_OUT/blobs/61/306d12bcee36c3787eef209afcffc15424f264.src","preCode":"  public void execute(ExecutionContext executionContext, int curItrCount) throws Exception {\n    HoodieTableMetaClient metaClient =\n        HoodieTableMetaClient.builder().setConf(executionContext.getHoodieTestSuiteWriter().getConfiguration()).setBasePath(executionContext.getHoodieTestSuiteWriter().getCfg().targetBasePath)\n            .build();\n    Option<HoodieInstant> lastInstant = metaClient.getActiveTimeline()\n        .getCommitsAndCompactionTimeline().filterPendingCompactionTimeline().lastInstant();\n    if (lastInstant.isPresent()) {\n      log.info(\"Compacting instant {}\", lastInstant.get());\n      this.result = executionContext.getHoodieTestSuiteWriter().compact(Option.of(lastInstant.get().getTimestamp()));\n    }\n  }\n","realPath":"hudi-integ-test/src/main/java/org/apache/hudi/integ/testsuite/dag/nodes/CompactNode.java","repoName":"hudi","snippetEndLine":0,"snippetStartLine":0,"startLine":47,"status":"M"}],"commitId":"ffcfb58bacab377bc72d20041baa54a3fd8fc812","commitMessage":"@@@[HUDI-1486] Remove inline inflight rollback in hoodie writer (#2359)\n\n1. Refactor rollback and move cleaning failed commits logic into cleaner\n2. Introduce hoodie heartbeat to ascertain failed commits\n3. Fix test cases","date":"2021-02-20 12:12:22","modifiedFileCount":"56","status":"M","submitter":"n3nash"}]
