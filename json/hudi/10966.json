[{"authorTime":"2020-03-30 01:58:49","codes":[{"authorDate":"2020-03-30 01:58:49","commitOrder":1,"curCode":"  public static Schema addMetadataFields(Schema schema) {\n    List<Schema.Field> parentFields = new ArrayList<>();\n\n    Schema.Field commitTimeField =\n        new Schema.Field(HoodieRecord.COMMIT_TIME_METADATA_FIELD, METADATA_FIELD_SCHEMA, \"\", NullNode.getInstance());\n    Schema.Field commitSeqnoField =\n        new Schema.Field(HoodieRecord.COMMIT_SEQNO_METADATA_FIELD, METADATA_FIELD_SCHEMA, \"\", NullNode.getInstance());\n    Schema.Field recordKeyField =\n        new Schema.Field(HoodieRecord.RECORD_KEY_METADATA_FIELD, METADATA_FIELD_SCHEMA, \"\", NullNode.getInstance());\n    Schema.Field partitionPathField =\n        new Schema.Field(HoodieRecord.PARTITION_PATH_METADATA_FIELD, METADATA_FIELD_SCHEMA, \"\", NullNode.getInstance());\n    Schema.Field fileNameField =\n        new Schema.Field(HoodieRecord.FILENAME_METADATA_FIELD, METADATA_FIELD_SCHEMA, \"\", NullNode.getInstance());\n\n    parentFields.add(commitTimeField);\n    parentFields.add(commitSeqnoField);\n    parentFields.add(recordKeyField);\n    parentFields.add(partitionPathField);\n    parentFields.add(fileNameField);\n    for (Schema.Field field : schema.getFields()) {\n      if (!isMetadataField(field.name())) {\n        Schema.Field newField = new Schema.Field(field.name(), field.schema(), field.doc(), field.defaultValue());\n        for (Map.Entry<String, JsonNode> prop : field.getJsonProps().entrySet()) {\n          newField.addProp(prop.getKey(), prop.getValue());\n        }\n        parentFields.add(newField);\n      }\n    }\n\n    Schema mergedSchema = Schema.createRecord(schema.getName(), schema.getDoc(), schema.getNamespace(), false);\n    mergedSchema.setFields(parentFields);\n    return mergedSchema;\n  }\n","date":"2020-03-30 01:58:49","endLine":135,"groupId":"3280","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"addMetadataFields","params":"(Schemaschema)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-hudi-10-0.7/blobInfo/CC_OUT/blobs/2e/ec7486f03848b8adb842c81441686d6e9592ae.src","preCode":"  public static Schema addMetadataFields(Schema schema) {\n    List<Schema.Field> parentFields = new ArrayList<>();\n\n    Schema.Field commitTimeField =\n        new Schema.Field(HoodieRecord.COMMIT_TIME_METADATA_FIELD, METADATA_FIELD_SCHEMA, \"\", NullNode.getInstance());\n    Schema.Field commitSeqnoField =\n        new Schema.Field(HoodieRecord.COMMIT_SEQNO_METADATA_FIELD, METADATA_FIELD_SCHEMA, \"\", NullNode.getInstance());\n    Schema.Field recordKeyField =\n        new Schema.Field(HoodieRecord.RECORD_KEY_METADATA_FIELD, METADATA_FIELD_SCHEMA, \"\", NullNode.getInstance());\n    Schema.Field partitionPathField =\n        new Schema.Field(HoodieRecord.PARTITION_PATH_METADATA_FIELD, METADATA_FIELD_SCHEMA, \"\", NullNode.getInstance());\n    Schema.Field fileNameField =\n        new Schema.Field(HoodieRecord.FILENAME_METADATA_FIELD, METADATA_FIELD_SCHEMA, \"\", NullNode.getInstance());\n\n    parentFields.add(commitTimeField);\n    parentFields.add(commitSeqnoField);\n    parentFields.add(recordKeyField);\n    parentFields.add(partitionPathField);\n    parentFields.add(fileNameField);\n    for (Schema.Field field : schema.getFields()) {\n      if (!isMetadataField(field.name())) {\n        Schema.Field newField = new Schema.Field(field.name(), field.schema(), field.doc(), field.defaultValue());\n        for (Map.Entry<String, JsonNode> prop : field.getJsonProps().entrySet()) {\n          newField.addProp(prop.getKey(), prop.getValue());\n        }\n        parentFields.add(newField);\n      }\n    }\n\n    Schema mergedSchema = Schema.createRecord(schema.getName(), schema.getDoc(), schema.getNamespace(), false);\n    mergedSchema.setFields(parentFields);\n    return mergedSchema;\n  }\n","realPath":"hudi-common/src/main/java/org/apache/hudi/avro/HoodieAvroUtils.java","repoName":"hudi","snippetEndLine":0,"snippetStartLine":0,"startLine":103,"status":"B"},{"authorDate":"2020-03-30 01:58:49","commitOrder":1,"curCode":"  private static Schema initRecordKeySchema() {\n    Schema.Field recordKeyField =\n        new Schema.Field(HoodieRecord.RECORD_KEY_METADATA_FIELD, METADATA_FIELD_SCHEMA, \"\", NullNode.getInstance());\n    Schema recordKeySchema = Schema.createRecord(\"HoodieRecordKey\", \"\", \"\", false);\n    recordKeySchema.setFields(Collections.singletonList(recordKeyField));\n    return recordKeySchema;\n  }\n","date":"2020-03-30 01:58:49","endLine":147,"groupId":"1660","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"initRecordKeySchema","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-hudi-10-0.7/blobInfo/CC_OUT/blobs/2e/ec7486f03848b8adb842c81441686d6e9592ae.src","preCode":"  private static Schema initRecordKeySchema() {\n    Schema.Field recordKeyField =\n        new Schema.Field(HoodieRecord.RECORD_KEY_METADATA_FIELD, METADATA_FIELD_SCHEMA, \"\", NullNode.getInstance());\n    Schema recordKeySchema = Schema.createRecord(\"HoodieRecordKey\", \"\", \"\", false);\n    recordKeySchema.setFields(Collections.singletonList(recordKeyField));\n    return recordKeySchema;\n  }\n","realPath":"hudi-common/src/main/java/org/apache/hudi/avro/HoodieAvroUtils.java","repoName":"hudi","snippetEndLine":0,"snippetStartLine":0,"startLine":141,"status":"B"}],"commitId":"e057c27603301d8b49e9b50b78a3ffce247b1059","commitMessage":"@@@[HUDI-744] Restructure hudi-common and clean up files under util packages (#1462)\n\n - Brings more order and cohesion to the classes in hudi-common\n - Utils classes related to a particular concept (avro.  timeline. ...) are placed near to the package\n - common.fs package now contains all the filesystem level classes including wrapper filesystem\n - bloom.filter package renamed to just bloom\n - config package contains classes that help store properties\n - common.fs.inline package contains all the inline filesystem classes/impl\n - common.table.timeline now consolidates all timeline related classes\n - common.table.view consolidates all the classes related to filesystem view metadata\n - common.table.timeline.versioning contains all classes related to versioning of timeline\n - Fix few unit tests as a result\n - Moved the test packages around to match the source file move\n - Rename AvroUtils to TimelineMetadataUtils & minor fixes/typos","date":"2020-03-30 01:58:49","modifiedFileCount":"206","status":"B","submitter":"vinoth chandar"},{"authorTime":"2020-03-30 01:58:49","codes":[{"authorDate":"2020-04-13 08:55:26","commitOrder":2,"curCode":"  public static Schema addMetadataFields(Schema schema) {\n    List<Schema.Field> parentFields = new ArrayList<>();\n\n    Schema.Field commitTimeField =\n        new Schema.Field(HoodieRecord.COMMIT_TIME_METADATA_FIELD, METADATA_FIELD_SCHEMA, \"\", (Object) null);\n    Schema.Field commitSeqnoField =\n        new Schema.Field(HoodieRecord.COMMIT_SEQNO_METADATA_FIELD, METADATA_FIELD_SCHEMA, \"\", (Object) null);\n    Schema.Field recordKeyField =\n        new Schema.Field(HoodieRecord.RECORD_KEY_METADATA_FIELD, METADATA_FIELD_SCHEMA, \"\", (Object) null);\n    Schema.Field partitionPathField =\n        new Schema.Field(HoodieRecord.PARTITION_PATH_METADATA_FIELD, METADATA_FIELD_SCHEMA, \"\", (Object) null);\n    Schema.Field fileNameField =\n        new Schema.Field(HoodieRecord.FILENAME_METADATA_FIELD, METADATA_FIELD_SCHEMA, \"\", (Object) null);\n\n    parentFields.add(commitTimeField);\n    parentFields.add(commitSeqnoField);\n    parentFields.add(recordKeyField);\n    parentFields.add(partitionPathField);\n    parentFields.add(fileNameField);\n    for (Schema.Field field : schema.getFields()) {\n      if (!isMetadataField(field.name())) {\n        Schema.Field newField = new Schema.Field(field.name(), field.schema(), field.doc(), field.defaultVal());\n        for (Map.Entry<String, Object> prop : field.getObjectProps().entrySet()) {\n          newField.addProp(prop.getKey(), prop.getValue());\n        }\n        parentFields.add(newField);\n      }\n    }\n\n    Schema mergedSchema = Schema.createRecord(schema.getName(), schema.getDoc(), schema.getNamespace(), false);\n    mergedSchema.setFields(parentFields);\n    return mergedSchema;\n  }\n","date":"2020-04-13 08:55:26","endLine":135,"groupId":"2508","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"addMetadataFields","params":"(Schemaschema)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-hudi-10-0.7/blobInfo/CC_OUT/blobs/af/44a3164ef1d0752600667a53ac87ba0762b28d.src","preCode":"  public static Schema addMetadataFields(Schema schema) {\n    List<Schema.Field> parentFields = new ArrayList<>();\n\n    Schema.Field commitTimeField =\n        new Schema.Field(HoodieRecord.COMMIT_TIME_METADATA_FIELD, METADATA_FIELD_SCHEMA, \"\", NullNode.getInstance());\n    Schema.Field commitSeqnoField =\n        new Schema.Field(HoodieRecord.COMMIT_SEQNO_METADATA_FIELD, METADATA_FIELD_SCHEMA, \"\", NullNode.getInstance());\n    Schema.Field recordKeyField =\n        new Schema.Field(HoodieRecord.RECORD_KEY_METADATA_FIELD, METADATA_FIELD_SCHEMA, \"\", NullNode.getInstance());\n    Schema.Field partitionPathField =\n        new Schema.Field(HoodieRecord.PARTITION_PATH_METADATA_FIELD, METADATA_FIELD_SCHEMA, \"\", NullNode.getInstance());\n    Schema.Field fileNameField =\n        new Schema.Field(HoodieRecord.FILENAME_METADATA_FIELD, METADATA_FIELD_SCHEMA, \"\", NullNode.getInstance());\n\n    parentFields.add(commitTimeField);\n    parentFields.add(commitSeqnoField);\n    parentFields.add(recordKeyField);\n    parentFields.add(partitionPathField);\n    parentFields.add(fileNameField);\n    for (Schema.Field field : schema.getFields()) {\n      if (!isMetadataField(field.name())) {\n        Schema.Field newField = new Schema.Field(field.name(), field.schema(), field.doc(), field.defaultValue());\n        for (Map.Entry<String, JsonNode> prop : field.getJsonProps().entrySet()) {\n          newField.addProp(prop.getKey(), prop.getValue());\n        }\n        parentFields.add(newField);\n      }\n    }\n\n    Schema mergedSchema = Schema.createRecord(schema.getName(), schema.getDoc(), schema.getNamespace(), false);\n    mergedSchema.setFields(parentFields);\n    return mergedSchema;\n  }\n","realPath":"hudi-common/src/main/java/org/apache/hudi/avro/HoodieAvroUtils.java","repoName":"hudi","snippetEndLine":0,"snippetStartLine":0,"startLine":103,"status":"M"},{"authorDate":"2020-03-30 01:58:49","commitOrder":2,"curCode":"  private static Schema initRecordKeySchema() {\n    Schema.Field recordKeyField =\n        new Schema.Field(HoodieRecord.RECORD_KEY_METADATA_FIELD, METADATA_FIELD_SCHEMA, \"\", NullNode.getInstance());\n    Schema recordKeySchema = Schema.createRecord(\"HoodieRecordKey\", \"\", \"\", false);\n    recordKeySchema.setFields(Collections.singletonList(recordKeyField));\n    return recordKeySchema;\n  }\n","date":"2020-03-30 01:58:49","endLine":147,"groupId":"1660","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"initRecordKeySchema","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-hudi-10-0.7/blobInfo/CC_OUT/blobs/2e/ec7486f03848b8adb842c81441686d6e9592ae.src","preCode":"  private static Schema initRecordKeySchema() {\n    Schema.Field recordKeyField =\n        new Schema.Field(HoodieRecord.RECORD_KEY_METADATA_FIELD, METADATA_FIELD_SCHEMA, \"\", NullNode.getInstance());\n    Schema recordKeySchema = Schema.createRecord(\"HoodieRecordKey\", \"\", \"\", false);\n    recordKeySchema.setFields(Collections.singletonList(recordKeyField));\n    return recordKeySchema;\n  }\n","realPath":"hudi-common/src/main/java/org/apache/hudi/avro/HoodieAvroUtils.java","repoName":"hudi","snippetEndLine":0,"snippetStartLine":0,"startLine":141,"status":"N"}],"commitId":"6d7ca2cf7e441ad19d32d7a25739e454f39ed253","commitMessage":"@@@[HUDI-727]: Copy default values of fields if not present when rewriting incoming record with new schema (#1427)\n\n","date":"2020-04-13 08:55:26","modifiedFileCount":"3","status":"M","submitter":"Pratyaksh Sharma"},{"authorTime":"2020-03-30 01:58:49","codes":[{"authorDate":"2020-05-14 09:04:38","commitOrder":3,"curCode":"  public static Schema addMetadataFields(Schema schema) {\n    List<Schema.Field> parentFields = new ArrayList<>();\n\n    Schema.Field commitTimeField =\n        new Schema.Field(HoodieRecord.COMMIT_TIME_METADATA_FIELD, METADATA_FIELD_SCHEMA, \"\", NullNode.getInstance());\n    Schema.Field commitSeqnoField =\n        new Schema.Field(HoodieRecord.COMMIT_SEQNO_METADATA_FIELD, METADATA_FIELD_SCHEMA, \"\", NullNode.getInstance());\n    Schema.Field recordKeyField =\n        new Schema.Field(HoodieRecord.RECORD_KEY_METADATA_FIELD, METADATA_FIELD_SCHEMA, \"\", NullNode.getInstance());\n    Schema.Field partitionPathField =\n        new Schema.Field(HoodieRecord.PARTITION_PATH_METADATA_FIELD, METADATA_FIELD_SCHEMA, \"\", NullNode.getInstance());\n    Schema.Field fileNameField =\n        new Schema.Field(HoodieRecord.FILENAME_METADATA_FIELD, METADATA_FIELD_SCHEMA, \"\", NullNode.getInstance());\n\n    parentFields.add(commitTimeField);\n    parentFields.add(commitSeqnoField);\n    parentFields.add(recordKeyField);\n    parentFields.add(partitionPathField);\n    parentFields.add(fileNameField);\n    for (Schema.Field field : schema.getFields()) {\n      if (!isMetadataField(field.name())) {\n        Schema.Field newField = new Schema.Field(field.name(), field.schema(), field.doc(), field.defaultVal());\n        for (Map.Entry<String, Object> prop : field.getObjectProps().entrySet()) {\n          newField.addProp(prop.getKey(), prop.getValue());\n        }\n        parentFields.add(newField);\n      }\n    }\n\n    Schema mergedSchema = Schema.createRecord(schema.getName(), schema.getDoc(), schema.getNamespace(), false);\n    mergedSchema.setFields(parentFields);\n    return mergedSchema;\n  }\n","date":"2020-05-14 09:04:38","endLine":173,"groupId":"3280","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"addMetadataFields","params":"(Schemaschema)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-hudi-10-0.7/blobInfo/CC_OUT/blobs/bf/fe8df238e0cb1f909197f80e0607c29c4859bf.src","preCode":"  public static Schema addMetadataFields(Schema schema) {\n    List<Schema.Field> parentFields = new ArrayList<>();\n\n    Schema.Field commitTimeField =\n        new Schema.Field(HoodieRecord.COMMIT_TIME_METADATA_FIELD, METADATA_FIELD_SCHEMA, \"\", (Object) null);\n    Schema.Field commitSeqnoField =\n        new Schema.Field(HoodieRecord.COMMIT_SEQNO_METADATA_FIELD, METADATA_FIELD_SCHEMA, \"\", (Object) null);\n    Schema.Field recordKeyField =\n        new Schema.Field(HoodieRecord.RECORD_KEY_METADATA_FIELD, METADATA_FIELD_SCHEMA, \"\", (Object) null);\n    Schema.Field partitionPathField =\n        new Schema.Field(HoodieRecord.PARTITION_PATH_METADATA_FIELD, METADATA_FIELD_SCHEMA, \"\", (Object) null);\n    Schema.Field fileNameField =\n        new Schema.Field(HoodieRecord.FILENAME_METADATA_FIELD, METADATA_FIELD_SCHEMA, \"\", (Object) null);\n\n    parentFields.add(commitTimeField);\n    parentFields.add(commitSeqnoField);\n    parentFields.add(recordKeyField);\n    parentFields.add(partitionPathField);\n    parentFields.add(fileNameField);\n    for (Schema.Field field : schema.getFields()) {\n      if (!isMetadataField(field.name())) {\n        Schema.Field newField = new Schema.Field(field.name(), field.schema(), field.doc(), field.defaultVal());\n        for (Map.Entry<String, Object> prop : field.getObjectProps().entrySet()) {\n          newField.addProp(prop.getKey(), prop.getValue());\n        }\n        parentFields.add(newField);\n      }\n    }\n\n    Schema mergedSchema = Schema.createRecord(schema.getName(), schema.getDoc(), schema.getNamespace(), false);\n    mergedSchema.setFields(parentFields);\n    return mergedSchema;\n  }\n","realPath":"hudi-common/src/main/java/org/apache/hudi/avro/HoodieAvroUtils.java","repoName":"hudi","snippetEndLine":0,"snippetStartLine":0,"startLine":141,"status":"M"},{"authorDate":"2020-03-30 01:58:49","commitOrder":3,"curCode":"  private static Schema initRecordKeySchema() {\n    Schema.Field recordKeyField =\n        new Schema.Field(HoodieRecord.RECORD_KEY_METADATA_FIELD, METADATA_FIELD_SCHEMA, \"\", NullNode.getInstance());\n    Schema recordKeySchema = Schema.createRecord(\"HoodieRecordKey\", \"\", \"\", false);\n    recordKeySchema.setFields(Collections.singletonList(recordKeyField));\n    return recordKeySchema;\n  }\n","date":"2020-03-30 01:58:49","endLine":147,"groupId":"1660","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"initRecordKeySchema","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-hudi-10-0.7/blobInfo/CC_OUT/blobs/2e/ec7486f03848b8adb842c81441686d6e9592ae.src","preCode":"  private static Schema initRecordKeySchema() {\n    Schema.Field recordKeyField =\n        new Schema.Field(HoodieRecord.RECORD_KEY_METADATA_FIELD, METADATA_FIELD_SCHEMA, \"\", NullNode.getInstance());\n    Schema recordKeySchema = Schema.createRecord(\"HoodieRecordKey\", \"\", \"\", false);\n    recordKeySchema.setFields(Collections.singletonList(recordKeyField));\n    return recordKeySchema;\n  }\n","realPath":"hudi-common/src/main/java/org/apache/hudi/avro/HoodieAvroUtils.java","repoName":"hudi","snippetEndLine":0,"snippetStartLine":0,"startLine":141,"status":"N"}],"commitId":"83796b3189570182c68a9c41e57b356124c301ca","commitMessage":"@@@[HUDI-793] Adding proper default to hudi metadata fields and proper handling to rewrite routine (#1513)\n\n* Adding proper default to hudi metadata fields and proper handling to rewrite routine\n* Handle fields declared with a null default\n\nCo-authored-by: Alex Filipchik <alex.filipchik@csscompany.com>","date":"2020-05-14 09:04:38","modifiedFileCount":"2","status":"M","submitter":"Alexander Filipchik"},{"authorTime":"2020-03-30 01:58:49","codes":[{"authorDate":"2020-05-21 00:04:43","commitOrder":4,"curCode":"  public static Schema addMetadataFields(Schema schema) {\n    List<Schema.Field> parentFields = new ArrayList<>();\n\n    Schema.Field commitTimeField =\n        new Schema.Field(HoodieRecord.COMMIT_TIME_METADATA_FIELD, METADATA_FIELD_SCHEMA, \"\", JsonProperties.NULL_VALUE);\n    Schema.Field commitSeqnoField =\n        new Schema.Field(HoodieRecord.COMMIT_SEQNO_METADATA_FIELD, METADATA_FIELD_SCHEMA, \"\", JsonProperties.NULL_VALUE);\n    Schema.Field recordKeyField =\n        new Schema.Field(HoodieRecord.RECORD_KEY_METADATA_FIELD, METADATA_FIELD_SCHEMA, \"\", JsonProperties.NULL_VALUE);\n    Schema.Field partitionPathField =\n        new Schema.Field(HoodieRecord.PARTITION_PATH_METADATA_FIELD, METADATA_FIELD_SCHEMA, \"\", JsonProperties.NULL_VALUE);\n    Schema.Field fileNameField =\n        new Schema.Field(HoodieRecord.FILENAME_METADATA_FIELD, METADATA_FIELD_SCHEMA, \"\", JsonProperties.NULL_VALUE);\n\n    parentFields.add(commitTimeField);\n    parentFields.add(commitSeqnoField);\n    parentFields.add(recordKeyField);\n    parentFields.add(partitionPathField);\n    parentFields.add(fileNameField);\n    for (Schema.Field field : schema.getFields()) {\n      if (!isMetadataField(field.name())) {\n        Schema.Field newField = new Schema.Field(field.name(), field.schema(), field.doc(), field.defaultVal());\n        for (Map.Entry<String, Object> prop : field.getObjectProps().entrySet()) {\n          newField.addProp(prop.getKey(), prop.getValue());\n        }\n        parentFields.add(newField);\n      }\n    }\n\n    Schema mergedSchema = Schema.createRecord(schema.getName(), schema.getDoc(), schema.getNamespace(), false);\n    mergedSchema.setFields(parentFields);\n    return mergedSchema;\n  }\n","date":"2020-05-21 00:04:43","endLine":172,"groupId":"1659","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"addMetadataFields","params":"(Schemaschema)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-hudi-10-0.7/blobInfo/CC_OUT/blobs/38/b9d32097196046ecb3d7c28b8bc9153d1f6387.src","preCode":"  public static Schema addMetadataFields(Schema schema) {\n    List<Schema.Field> parentFields = new ArrayList<>();\n\n    Schema.Field commitTimeField =\n        new Schema.Field(HoodieRecord.COMMIT_TIME_METADATA_FIELD, METADATA_FIELD_SCHEMA, \"\", NullNode.getInstance());\n    Schema.Field commitSeqnoField =\n        new Schema.Field(HoodieRecord.COMMIT_SEQNO_METADATA_FIELD, METADATA_FIELD_SCHEMA, \"\", NullNode.getInstance());\n    Schema.Field recordKeyField =\n        new Schema.Field(HoodieRecord.RECORD_KEY_METADATA_FIELD, METADATA_FIELD_SCHEMA, \"\", NullNode.getInstance());\n    Schema.Field partitionPathField =\n        new Schema.Field(HoodieRecord.PARTITION_PATH_METADATA_FIELD, METADATA_FIELD_SCHEMA, \"\", NullNode.getInstance());\n    Schema.Field fileNameField =\n        new Schema.Field(HoodieRecord.FILENAME_METADATA_FIELD, METADATA_FIELD_SCHEMA, \"\", NullNode.getInstance());\n\n    parentFields.add(commitTimeField);\n    parentFields.add(commitSeqnoField);\n    parentFields.add(recordKeyField);\n    parentFields.add(partitionPathField);\n    parentFields.add(fileNameField);\n    for (Schema.Field field : schema.getFields()) {\n      if (!isMetadataField(field.name())) {\n        Schema.Field newField = new Schema.Field(field.name(), field.schema(), field.doc(), field.defaultVal());\n        for (Map.Entry<String, Object> prop : field.getObjectProps().entrySet()) {\n          newField.addProp(prop.getKey(), prop.getValue());\n        }\n        parentFields.add(newField);\n      }\n    }\n\n    Schema mergedSchema = Schema.createRecord(schema.getName(), schema.getDoc(), schema.getNamespace(), false);\n    mergedSchema.setFields(parentFields);\n    return mergedSchema;\n  }\n","realPath":"hudi-common/src/main/java/org/apache/hudi/avro/HoodieAvroUtils.java","repoName":"hudi","snippetEndLine":0,"snippetStartLine":0,"startLine":140,"status":"M"},{"authorDate":"2020-03-30 01:58:49","commitOrder":4,"curCode":"  private static Schema initRecordKeySchema() {\n    Schema.Field recordKeyField =\n        new Schema.Field(HoodieRecord.RECORD_KEY_METADATA_FIELD, METADATA_FIELD_SCHEMA, \"\", NullNode.getInstance());\n    Schema recordKeySchema = Schema.createRecord(\"HoodieRecordKey\", \"\", \"\", false);\n    recordKeySchema.setFields(Collections.singletonList(recordKeyField));\n    return recordKeySchema;\n  }\n","date":"2020-03-30 01:58:49","endLine":147,"groupId":"1660","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"initRecordKeySchema","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-hudi-10-0.7/blobInfo/CC_OUT/blobs/2e/ec7486f03848b8adb842c81441686d6e9592ae.src","preCode":"  private static Schema initRecordKeySchema() {\n    Schema.Field recordKeyField =\n        new Schema.Field(HoodieRecord.RECORD_KEY_METADATA_FIELD, METADATA_FIELD_SCHEMA, \"\", NullNode.getInstance());\n    Schema recordKeySchema = Schema.createRecord(\"HoodieRecordKey\", \"\", \"\", false);\n    recordKeySchema.setFields(Collections.singletonList(recordKeyField));\n    return recordKeySchema;\n  }\n","realPath":"hudi-common/src/main/java/org/apache/hudi/avro/HoodieAvroUtils.java","repoName":"hudi","snippetEndLine":0,"snippetStartLine":0,"startLine":141,"status":"N"}],"commitId":"6a0aa9a645d11ed7b50e18aa0563dafcd9d145f7","commitMessage":"@@@[HUDI-803] Replaced used of NullNode with JsonProperties.NULL_VALUE in HoodieAvroUtils (#1538)\n\n- added more test cases in TestHoodieAvroUtils.class\n\nCo-authored-by: Vinoth Chandar <vinoth@apache.org>","date":"2020-05-21 00:04:43","modifiedFileCount":"2","status":"M","submitter":"Pratyaksh Sharma"},{"authorTime":"2021-01-28 08:53:13","codes":[{"authorDate":"2020-05-21 00:04:43","commitOrder":5,"curCode":"  public static Schema addMetadataFields(Schema schema) {\n    List<Schema.Field> parentFields = new ArrayList<>();\n\n    Schema.Field commitTimeField =\n        new Schema.Field(HoodieRecord.COMMIT_TIME_METADATA_FIELD, METADATA_FIELD_SCHEMA, \"\", JsonProperties.NULL_VALUE);\n    Schema.Field commitSeqnoField =\n        new Schema.Field(HoodieRecord.COMMIT_SEQNO_METADATA_FIELD, METADATA_FIELD_SCHEMA, \"\", JsonProperties.NULL_VALUE);\n    Schema.Field recordKeyField =\n        new Schema.Field(HoodieRecord.RECORD_KEY_METADATA_FIELD, METADATA_FIELD_SCHEMA, \"\", JsonProperties.NULL_VALUE);\n    Schema.Field partitionPathField =\n        new Schema.Field(HoodieRecord.PARTITION_PATH_METADATA_FIELD, METADATA_FIELD_SCHEMA, \"\", JsonProperties.NULL_VALUE);\n    Schema.Field fileNameField =\n        new Schema.Field(HoodieRecord.FILENAME_METADATA_FIELD, METADATA_FIELD_SCHEMA, \"\", JsonProperties.NULL_VALUE);\n\n    parentFields.add(commitTimeField);\n    parentFields.add(commitSeqnoField);\n    parentFields.add(recordKeyField);\n    parentFields.add(partitionPathField);\n    parentFields.add(fileNameField);\n    for (Schema.Field field : schema.getFields()) {\n      if (!isMetadataField(field.name())) {\n        Schema.Field newField = new Schema.Field(field.name(), field.schema(), field.doc(), field.defaultVal());\n        for (Map.Entry<String, Object> prop : field.getObjectProps().entrySet()) {\n          newField.addProp(prop.getKey(), prop.getValue());\n        }\n        parentFields.add(newField);\n      }\n    }\n\n    Schema mergedSchema = Schema.createRecord(schema.getName(), schema.getDoc(), schema.getNamespace(), false);\n    mergedSchema.setFields(parentFields);\n    return mergedSchema;\n  }\n","date":"2020-05-21 00:04:43","endLine":172,"groupId":"1659","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"addMetadataFields","params":"(Schemaschema)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-hudi-10-0.7/blobInfo/CC_OUT/blobs/38/b9d32097196046ecb3d7c28b8bc9153d1f6387.src","preCode":"  public static Schema addMetadataFields(Schema schema) {\n    List<Schema.Field> parentFields = new ArrayList<>();\n\n    Schema.Field commitTimeField =\n        new Schema.Field(HoodieRecord.COMMIT_TIME_METADATA_FIELD, METADATA_FIELD_SCHEMA, \"\", JsonProperties.NULL_VALUE);\n    Schema.Field commitSeqnoField =\n        new Schema.Field(HoodieRecord.COMMIT_SEQNO_METADATA_FIELD, METADATA_FIELD_SCHEMA, \"\", JsonProperties.NULL_VALUE);\n    Schema.Field recordKeyField =\n        new Schema.Field(HoodieRecord.RECORD_KEY_METADATA_FIELD, METADATA_FIELD_SCHEMA, \"\", JsonProperties.NULL_VALUE);\n    Schema.Field partitionPathField =\n        new Schema.Field(HoodieRecord.PARTITION_PATH_METADATA_FIELD, METADATA_FIELD_SCHEMA, \"\", JsonProperties.NULL_VALUE);\n    Schema.Field fileNameField =\n        new Schema.Field(HoodieRecord.FILENAME_METADATA_FIELD, METADATA_FIELD_SCHEMA, \"\", JsonProperties.NULL_VALUE);\n\n    parentFields.add(commitTimeField);\n    parentFields.add(commitSeqnoField);\n    parentFields.add(recordKeyField);\n    parentFields.add(partitionPathField);\n    parentFields.add(fileNameField);\n    for (Schema.Field field : schema.getFields()) {\n      if (!isMetadataField(field.name())) {\n        Schema.Field newField = new Schema.Field(field.name(), field.schema(), field.doc(), field.defaultVal());\n        for (Map.Entry<String, Object> prop : field.getObjectProps().entrySet()) {\n          newField.addProp(prop.getKey(), prop.getValue());\n        }\n        parentFields.add(newField);\n      }\n    }\n\n    Schema mergedSchema = Schema.createRecord(schema.getName(), schema.getDoc(), schema.getNamespace(), false);\n    mergedSchema.setFields(parentFields);\n    return mergedSchema;\n  }\n","realPath":"hudi-common/src/main/java/org/apache/hudi/avro/HoodieAvroUtils.java","repoName":"hudi","snippetEndLine":0,"snippetStartLine":0,"startLine":140,"status":"N"},{"authorDate":"2021-01-28 08:53:13","commitOrder":5,"curCode":"  private static Schema initRecordKeySchema() {\n    Schema.Field recordKeyField =\n        new Schema.Field(HoodieRecord.RECORD_KEY_METADATA_FIELD, METADATA_FIELD_SCHEMA, \"\", JsonProperties.NULL_VALUE);\n    Schema recordKeySchema = Schema.createRecord(\"HoodieRecordKey\", \"\", \"\", false);\n    recordKeySchema.setFields(Collections.singletonList(recordKeyField));\n    return recordKeySchema;\n  }\n","date":"2021-01-28 08:53:13","endLine":224,"groupId":"3924","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"initRecordKeySchema","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-hudi-10-0.7/blobInfo/CC_OUT/blobs/3b/989db2af1a2028690c7c5efd5d177d98495d9b.src","preCode":"  private static Schema initRecordKeySchema() {\n    Schema.Field recordKeyField =\n        new Schema.Field(HoodieRecord.RECORD_KEY_METADATA_FIELD, METADATA_FIELD_SCHEMA, \"\", NullNode.getInstance());\n    Schema recordKeySchema = Schema.createRecord(\"HoodieRecordKey\", \"\", \"\", false);\n    recordKeySchema.setFields(Collections.singletonList(recordKeyField));\n    return recordKeySchema;\n  }\n","realPath":"hudi-common/src/main/java/org/apache/hudi/avro/HoodieAvroUtils.java","repoName":"hudi","snippetEndLine":0,"snippetStartLine":0,"startLine":218,"status":"M"}],"commitId":"bc0325f6ea0a734f106f21a2fcd4ead413a6cf7b","commitMessage":"@@@[HUDI-1522] Add a new pipeline for Flink writer (#2430)\n\n* [HUDI-1522] Add a new pipeline for Flink writer","date":"2021-01-28 08:53:13","modifiedFileCount":"13","status":"M","submitter":"Danny Chan"},{"authorTime":"2021-01-28 08:53:13","codes":[{"authorDate":"2021-08-10 20:23:23","commitOrder":6,"curCode":"  public static Schema addMetadataFields(Schema schema, boolean withOperationField) {\n    List<Schema.Field> parentFields = new ArrayList<>();\n\n    Schema.Field commitTimeField =\n        new Schema.Field(HoodieRecord.COMMIT_TIME_METADATA_FIELD, METADATA_FIELD_SCHEMA, \"\", JsonProperties.NULL_VALUE);\n    Schema.Field commitSeqnoField =\n        new Schema.Field(HoodieRecord.COMMIT_SEQNO_METADATA_FIELD, METADATA_FIELD_SCHEMA, \"\", JsonProperties.NULL_VALUE);\n    Schema.Field recordKeyField =\n        new Schema.Field(HoodieRecord.RECORD_KEY_METADATA_FIELD, METADATA_FIELD_SCHEMA, \"\", JsonProperties.NULL_VALUE);\n    Schema.Field partitionPathField =\n        new Schema.Field(HoodieRecord.PARTITION_PATH_METADATA_FIELD, METADATA_FIELD_SCHEMA, \"\", JsonProperties.NULL_VALUE);\n    Schema.Field fileNameField =\n        new Schema.Field(HoodieRecord.FILENAME_METADATA_FIELD, METADATA_FIELD_SCHEMA, \"\", JsonProperties.NULL_VALUE);\n\n    parentFields.add(commitTimeField);\n    parentFields.add(commitSeqnoField);\n    parentFields.add(recordKeyField);\n    parentFields.add(partitionPathField);\n    parentFields.add(fileNameField);\n\n    if (withOperationField) {\n      final Schema.Field operationField =\n          new Schema.Field(HoodieRecord.OPERATION_METADATA_FIELD, METADATA_FIELD_SCHEMA, \"\", JsonProperties.NULL_VALUE);\n      parentFields.add(operationField);\n    }\n\n    for (Schema.Field field : schema.getFields()) {\n      if (!isMetadataField(field.name())) {\n        Schema.Field newField = new Schema.Field(field.name(), field.schema(), field.doc(), field.defaultVal());\n        for (Map.Entry<String, Object> prop : field.getObjectProps().entrySet()) {\n          newField.addProp(prop.getKey(), prop.getValue());\n        }\n        parentFields.add(newField);\n      }\n    }\n\n    Schema mergedSchema = Schema.createRecord(schema.getName(), schema.getDoc(), schema.getNamespace(), false);\n    mergedSchema.setFields(parentFields);\n    return mergedSchema;\n  }\n","date":"2021-08-10 20:23:23","endLine":223,"groupId":"10966","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"addMetadataFields","params":"(Schemaschema@booleanwithOperationField)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-hudi-10-0.7/blobInfo/CC_OUT/blobs/23/9eed5635965de8541c403eb4b4b91b3e28a99d.src","preCode":"  public static Schema addMetadataFields(Schema schema) {\n    List<Schema.Field> parentFields = new ArrayList<>();\n\n    Schema.Field commitTimeField =\n        new Schema.Field(HoodieRecord.COMMIT_TIME_METADATA_FIELD, METADATA_FIELD_SCHEMA, \"\", JsonProperties.NULL_VALUE);\n    Schema.Field commitSeqnoField =\n        new Schema.Field(HoodieRecord.COMMIT_SEQNO_METADATA_FIELD, METADATA_FIELD_SCHEMA, \"\", JsonProperties.NULL_VALUE);\n    Schema.Field recordKeyField =\n        new Schema.Field(HoodieRecord.RECORD_KEY_METADATA_FIELD, METADATA_FIELD_SCHEMA, \"\", JsonProperties.NULL_VALUE);\n    Schema.Field partitionPathField =\n        new Schema.Field(HoodieRecord.PARTITION_PATH_METADATA_FIELD, METADATA_FIELD_SCHEMA, \"\", JsonProperties.NULL_VALUE);\n    Schema.Field fileNameField =\n        new Schema.Field(HoodieRecord.FILENAME_METADATA_FIELD, METADATA_FIELD_SCHEMA, \"\", JsonProperties.NULL_VALUE);\n\n    parentFields.add(commitTimeField);\n    parentFields.add(commitSeqnoField);\n    parentFields.add(recordKeyField);\n    parentFields.add(partitionPathField);\n    parentFields.add(fileNameField);\n    for (Schema.Field field : schema.getFields()) {\n      if (!isMetadataField(field.name())) {\n        Schema.Field newField = new Schema.Field(field.name(), field.schema(), field.doc(), field.defaultVal());\n        for (Map.Entry<String, Object> prop : field.getObjectProps().entrySet()) {\n          newField.addProp(prop.getKey(), prop.getValue());\n        }\n        parentFields.add(newField);\n      }\n    }\n\n    Schema mergedSchema = Schema.createRecord(schema.getName(), schema.getDoc(), schema.getNamespace(), false);\n    mergedSchema.setFields(parentFields);\n    return mergedSchema;\n  }\n","realPath":"hudi-common/src/main/java/org/apache/hudi/avro/HoodieAvroUtils.java","repoName":"hudi","snippetEndLine":0,"snippetStartLine":0,"startLine":184,"status":"M"},{"authorDate":"2021-01-28 08:53:13","commitOrder":6,"curCode":"  private static Schema initRecordKeySchema() {\n    Schema.Field recordKeyField =\n        new Schema.Field(HoodieRecord.RECORD_KEY_METADATA_FIELD, METADATA_FIELD_SCHEMA, \"\", JsonProperties.NULL_VALUE);\n    Schema recordKeySchema = Schema.createRecord(\"HoodieRecordKey\", \"\", \"\", false);\n    recordKeySchema.setFields(Collections.singletonList(recordKeyField));\n    return recordKeySchema;\n  }\n","date":"2021-01-28 08:53:13","endLine":224,"groupId":"10966","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"initRecordKeySchema","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-hudi-10-0.7/blobInfo/CC_OUT/blobs/3b/989db2af1a2028690c7c5efd5d177d98495d9b.src","preCode":"  private static Schema initRecordKeySchema() {\n    Schema.Field recordKeyField =\n        new Schema.Field(HoodieRecord.RECORD_KEY_METADATA_FIELD, METADATA_FIELD_SCHEMA, \"\", JsonProperties.NULL_VALUE);\n    Schema recordKeySchema = Schema.createRecord(\"HoodieRecordKey\", \"\", \"\", false);\n    recordKeySchema.setFields(Collections.singletonList(recordKeyField));\n    return recordKeySchema;\n  }\n","realPath":"hudi-common/src/main/java/org/apache/hudi/avro/HoodieAvroUtils.java","repoName":"hudi","snippetEndLine":0,"snippetStartLine":0,"startLine":218,"status":"N"}],"commitId":"21db6d7a84d4a83ec98c110e92ff9c92d05dd530","commitMessage":"@@@[HUDI-1771] Propagate CDC format for hoodie (#3285)\n\n","date":"2021-08-10 20:23:23","modifiedFileCount":"47","status":"M","submitter":"swuferhong"}]
