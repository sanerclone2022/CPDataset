[{"authorTime":"2020-10-02 05:25:29","codes":[{"authorDate":"2020-10-02 05:25:29","commitOrder":1,"curCode":"  public JavaRDD<WriteStatus> insertFirstBatch(HoodieWriteConfig writeConfig, SparkRDDWriteClient client, String newCommitTime,\n      String initCommitTime, int numRecordsInThisCommit,\n      Function3<JavaRDD<WriteStatus>, SparkRDDWriteClient, JavaRDD<HoodieRecord>, String> writeFn, boolean isPreppedAPI,\n      boolean assertForCommit, int expRecordsInThisCommit) throws Exception {\n    final Function2<List<HoodieRecord>, String, Integer> recordGenFunction =\n        generateWrapRecordsFn(isPreppedAPI, writeConfig, dataGen::generateInserts);\n\n    return writeBatch(client, newCommitTime, initCommitTime, Option.empty(), initCommitTime, numRecordsInThisCommit,\n        recordGenFunction, writeFn, assertForCommit, expRecordsInThisCommit, expRecordsInThisCommit, 1);\n  }\n","date":"2020-10-02 05:25:29","endLine":312,"groupId":"1648","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"insertFirstBatch","params":"(HoodieWriteConfigwriteConfig@SparkRDDWriteClientclient@StringnewCommitTime@StringinitCommitTime@intnumRecordsInThisCommit@Function3<JavaRDD<WriteStatus>@SparkRDDWriteClient@JavaRDD<HoodieRecord>@String>writeFn@booleanisPreppedAPI@booleanassertForCommit@intexpRecordsInThisCommit)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-hudi-10-0.7/blobInfo/CC_OUT/blobs/1c/af9c04ff011e029ae0e5c2cf25e8fa78dd4eaf.src","preCode":"  public JavaRDD<WriteStatus> insertFirstBatch(HoodieWriteConfig writeConfig, SparkRDDWriteClient client, String newCommitTime,\n      String initCommitTime, int numRecordsInThisCommit,\n      Function3<JavaRDD<WriteStatus>, SparkRDDWriteClient, JavaRDD<HoodieRecord>, String> writeFn, boolean isPreppedAPI,\n      boolean assertForCommit, int expRecordsInThisCommit) throws Exception {\n    final Function2<List<HoodieRecord>, String, Integer> recordGenFunction =\n        generateWrapRecordsFn(isPreppedAPI, writeConfig, dataGen::generateInserts);\n\n    return writeBatch(client, newCommitTime, initCommitTime, Option.empty(), initCommitTime, numRecordsInThisCommit,\n        recordGenFunction, writeFn, assertForCommit, expRecordsInThisCommit, expRecordsInThisCommit, 1);\n  }\n","realPath":"hudi-client/hudi-spark-client/src/test/java/org/apache/hudi/testutils/HoodieClientTestBase.java","repoName":"hudi","snippetEndLine":0,"snippetStartLine":0,"startLine":303,"status":"B"},{"authorDate":"2020-10-02 05:25:29","commitOrder":1,"curCode":"  public JavaRDD<WriteStatus> insertBatch(HoodieWriteConfig writeConfig, SparkRDDWriteClient client, String newCommitTime,\n      String initCommitTime, int numRecordsInThisCommit,\n      Function3<JavaRDD<WriteStatus>, SparkRDDWriteClient, JavaRDD<HoodieRecord>, String> writeFn, boolean isPreppedAPI,\n      boolean assertForCommit, int expRecordsInThisCommit, int expTotalRecords, int expTotalCommits) throws Exception {\n    final Function2<List<HoodieRecord>, String, Integer> recordGenFunction =\n        generateWrapRecordsFn(isPreppedAPI, writeConfig, dataGen::generateInserts);\n\n    return writeBatch(client, newCommitTime, initCommitTime, Option.empty(), initCommitTime, numRecordsInThisCommit,\n        recordGenFunction, writeFn, assertForCommit, expRecordsInThisCommit, expTotalRecords, expTotalCommits);\n  }\n","date":"2020-10-02 05:25:29","endLine":340,"groupId":"1648","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"insertBatch","params":"(HoodieWriteConfigwriteConfig@SparkRDDWriteClientclient@StringnewCommitTime@StringinitCommitTime@intnumRecordsInThisCommit@Function3<JavaRDD<WriteStatus>@SparkRDDWriteClient@JavaRDD<HoodieRecord>@String>writeFn@booleanisPreppedAPI@booleanassertForCommit@intexpRecordsInThisCommit@intexpTotalRecords@intexpTotalCommits)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-hudi-10-0.7/blobInfo/CC_OUT/blobs/1c/af9c04ff011e029ae0e5c2cf25e8fa78dd4eaf.src","preCode":"  public JavaRDD<WriteStatus> insertBatch(HoodieWriteConfig writeConfig, SparkRDDWriteClient client, String newCommitTime,\n      String initCommitTime, int numRecordsInThisCommit,\n      Function3<JavaRDD<WriteStatus>, SparkRDDWriteClient, JavaRDD<HoodieRecord>, String> writeFn, boolean isPreppedAPI,\n      boolean assertForCommit, int expRecordsInThisCommit, int expTotalRecords, int expTotalCommits) throws Exception {\n    final Function2<List<HoodieRecord>, String, Integer> recordGenFunction =\n        generateWrapRecordsFn(isPreppedAPI, writeConfig, dataGen::generateInserts);\n\n    return writeBatch(client, newCommitTime, initCommitTime, Option.empty(), initCommitTime, numRecordsInThisCommit,\n        recordGenFunction, writeFn, assertForCommit, expRecordsInThisCommit, expTotalRecords, expTotalCommits);\n  }\n","realPath":"hudi-client/hudi-spark-client/src/test/java/org/apache/hudi/testutils/HoodieClientTestBase.java","repoName":"hudi","snippetEndLine":0,"snippetStartLine":0,"startLine":331,"status":"B"}],"commitId":"1f7add92916c37b05be270d9c75a9042134ec506","commitMessage":"@@@[HUDI-1089] Refactor hudi-client to support multi-engine (#1827)\n\n- This change breaks `hudi-client` into `hudi-client-common` and `hudi-spark-client` modules \n- Simple usages of Spark using jsc.parallelize() has been redone using EngineContext#map.  EngineContext#flatMap etc\n- Code changes in the PR.  break classes into `BaseXYZ` parent classes with no spark dependencies living in `hudi-client-common`\n- Classes on `hudi-spark-client` are named `SparkXYZ` extending the parent classes with all the Spark dependencies\n- To simplify/cleanup.  HoodieIndex#fetchRecordLocation has been removed and its usages in tests replaced with alternatives\n\nCo-authored-by: Vinoth Chandar <vinoth@apache.org>","date":"2020-10-02 05:25:29","modifiedFileCount":"31","status":"B","submitter":"Mathieu"},{"authorTime":"2021-02-20 12:12:22","codes":[{"authorDate":"2021-02-20 12:12:22","commitOrder":2,"curCode":"  public JavaRDD<WriteStatus> insertFirstBatch(HoodieWriteConfig writeConfig, SparkRDDWriteClient client, String newCommitTime,\n      String initCommitTime, int numRecordsInThisCommit,\n      Function3<JavaRDD<WriteStatus>, SparkRDDWriteClient, JavaRDD<HoodieRecord>, String> writeFn, boolean isPreppedAPI,\n      boolean assertForCommit, int expRecordsInThisCommit) throws Exception {\n    final Function2<List<HoodieRecord>, String, Integer> recordGenFunction =\n        generateWrapRecordsFn(isPreppedAPI, writeConfig, dataGen::generateInserts);\n\n    return writeBatch(client, newCommitTime, initCommitTime, Option.empty(), initCommitTime, numRecordsInThisCommit,\n        recordGenFunction, writeFn, assertForCommit, expRecordsInThisCommit, expRecordsInThisCommit, 1, false);\n  }\n","date":"2021-02-20 12:12:22","endLine":328,"groupId":"1648","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"insertFirstBatch","params":"(HoodieWriteConfigwriteConfig@SparkRDDWriteClientclient@StringnewCommitTime@StringinitCommitTime@intnumRecordsInThisCommit@Function3<JavaRDD<WriteStatus>@SparkRDDWriteClient@JavaRDD<HoodieRecord>@String>writeFn@booleanisPreppedAPI@booleanassertForCommit@intexpRecordsInThisCommit)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-hudi-10-0.7/blobInfo/CC_OUT/blobs/13/86edcfee1aa2f6438ba4aa13e8e9043d10df00.src","preCode":"  public JavaRDD<WriteStatus> insertFirstBatch(HoodieWriteConfig writeConfig, SparkRDDWriteClient client, String newCommitTime,\n      String initCommitTime, int numRecordsInThisCommit,\n      Function3<JavaRDD<WriteStatus>, SparkRDDWriteClient, JavaRDD<HoodieRecord>, String> writeFn, boolean isPreppedAPI,\n      boolean assertForCommit, int expRecordsInThisCommit) throws Exception {\n    final Function2<List<HoodieRecord>, String, Integer> recordGenFunction =\n        generateWrapRecordsFn(isPreppedAPI, writeConfig, dataGen::generateInserts);\n\n    return writeBatch(client, newCommitTime, initCommitTime, Option.empty(), initCommitTime, numRecordsInThisCommit,\n        recordGenFunction, writeFn, assertForCommit, expRecordsInThisCommit, expRecordsInThisCommit, 1);\n  }\n","realPath":"hudi-client/hudi-spark-client/src/test/java/org/apache/hudi/testutils/HoodieClientTestBase.java","repoName":"hudi","snippetEndLine":0,"snippetStartLine":0,"startLine":319,"status":"M"},{"authorDate":"2021-02-20 12:12:22","commitOrder":2,"curCode":"  public JavaRDD<WriteStatus> insertBatch(HoodieWriteConfig writeConfig, SparkRDDWriteClient client, String newCommitTime,\n      String initCommitTime, int numRecordsInThisCommit,\n      Function3<JavaRDD<WriteStatus>, SparkRDDWriteClient, JavaRDD<HoodieRecord>, String> writeFn, boolean isPreppedAPI,\n      boolean assertForCommit, int expRecordsInThisCommit, int expTotalRecords, int expTotalCommits) throws Exception {\n    final Function2<List<HoodieRecord>, String, Integer> recordGenFunction =\n        generateWrapRecordsFn(isPreppedAPI, writeConfig, dataGen::generateInserts);\n\n    return writeBatch(client, newCommitTime, initCommitTime, Option.empty(), initCommitTime, numRecordsInThisCommit,\n        recordGenFunction, writeFn, assertForCommit, expRecordsInThisCommit, expTotalRecords, expTotalCommits, false);\n  }\n","date":"2021-02-20 12:12:22","endLine":356,"groupId":"1648","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"insertBatch","params":"(HoodieWriteConfigwriteConfig@SparkRDDWriteClientclient@StringnewCommitTime@StringinitCommitTime@intnumRecordsInThisCommit@Function3<JavaRDD<WriteStatus>@SparkRDDWriteClient@JavaRDD<HoodieRecord>@String>writeFn@booleanisPreppedAPI@booleanassertForCommit@intexpRecordsInThisCommit@intexpTotalRecords@intexpTotalCommits)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-hudi-10-0.7/blobInfo/CC_OUT/blobs/13/86edcfee1aa2f6438ba4aa13e8e9043d10df00.src","preCode":"  public JavaRDD<WriteStatus> insertBatch(HoodieWriteConfig writeConfig, SparkRDDWriteClient client, String newCommitTime,\n      String initCommitTime, int numRecordsInThisCommit,\n      Function3<JavaRDD<WriteStatus>, SparkRDDWriteClient, JavaRDD<HoodieRecord>, String> writeFn, boolean isPreppedAPI,\n      boolean assertForCommit, int expRecordsInThisCommit, int expTotalRecords, int expTotalCommits) throws Exception {\n    final Function2<List<HoodieRecord>, String, Integer> recordGenFunction =\n        generateWrapRecordsFn(isPreppedAPI, writeConfig, dataGen::generateInserts);\n\n    return writeBatch(client, newCommitTime, initCommitTime, Option.empty(), initCommitTime, numRecordsInThisCommit,\n        recordGenFunction, writeFn, assertForCommit, expRecordsInThisCommit, expTotalRecords, expTotalCommits);\n  }\n","realPath":"hudi-client/hudi-spark-client/src/test/java/org/apache/hudi/testutils/HoodieClientTestBase.java","repoName":"hudi","snippetEndLine":0,"snippetStartLine":0,"startLine":347,"status":"M"}],"commitId":"ffcfb58bacab377bc72d20041baa54a3fd8fc812","commitMessage":"@@@[HUDI-1486] Remove inline inflight rollback in hoodie writer (#2359)\n\n1. Refactor rollback and move cleaning failed commits logic into cleaner\n2. Introduce hoodie heartbeat to ascertain failed commits\n3. Fix test cases","date":"2021-02-20 12:12:22","modifiedFileCount":"56","status":"M","submitter":"n3nash"},{"authorTime":"2021-02-20 12:12:22","codes":[{"authorDate":"2021-07-27 05:21:04","commitOrder":3,"curCode":"  public JavaRDD<WriteStatus> insertFirstBatch(HoodieWriteConfig writeConfig, SparkRDDWriteClient client, String newCommitTime,\n      String initCommitTime, int numRecordsInThisCommit,\n      Function3<JavaRDD<WriteStatus>, SparkRDDWriteClient, JavaRDD<HoodieRecord>, String> writeFn, boolean isPreppedAPI,\n      boolean assertForCommit, int expRecordsInThisCommit, boolean filterForCommitTimeWithAssert) throws Exception {\n    final Function2<List<HoodieRecord>, String, Integer> recordGenFunction =\n        generateWrapRecordsFn(isPreppedAPI, writeConfig, dataGen::generateInserts);\n\n    return writeBatch(client, newCommitTime, initCommitTime, Option.empty(), initCommitTime, numRecordsInThisCommit,\n        recordGenFunction, writeFn, assertForCommit, expRecordsInThisCommit, expRecordsInThisCommit, 1, false, filterForCommitTimeWithAssert);\n  }\n","date":"2021-07-27 05:21:04","endLine":335,"groupId":"10629","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"insertFirstBatch","params":"(HoodieWriteConfigwriteConfig@SparkRDDWriteClientclient@StringnewCommitTime@StringinitCommitTime@intnumRecordsInThisCommit@Function3<JavaRDD<WriteStatus>@SparkRDDWriteClient@JavaRDD<HoodieRecord>@String>writeFn@booleanisPreppedAPI@booleanassertForCommit@intexpRecordsInThisCommit@booleanfilterForCommitTimeWithAssert)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-hudi-10-0.7/blobInfo/CC_OUT/blobs/0c/88777be3f9ffc04b110051ae6b8f2d9091c1e7.src","preCode":"  public JavaRDD<WriteStatus> insertFirstBatch(HoodieWriteConfig writeConfig, SparkRDDWriteClient client, String newCommitTime,\n      String initCommitTime, int numRecordsInThisCommit,\n      Function3<JavaRDD<WriteStatus>, SparkRDDWriteClient, JavaRDD<HoodieRecord>, String> writeFn, boolean isPreppedAPI,\n      boolean assertForCommit, int expRecordsInThisCommit) throws Exception {\n    final Function2<List<HoodieRecord>, String, Integer> recordGenFunction =\n        generateWrapRecordsFn(isPreppedAPI, writeConfig, dataGen::generateInserts);\n\n    return writeBatch(client, newCommitTime, initCommitTime, Option.empty(), initCommitTime, numRecordsInThisCommit,\n        recordGenFunction, writeFn, assertForCommit, expRecordsInThisCommit, expRecordsInThisCommit, 1, false);\n  }\n","realPath":"hudi-client/hudi-spark-client/src/test/java/org/apache/hudi/testutils/HoodieClientTestBase.java","repoName":"hudi","snippetEndLine":0,"snippetStartLine":0,"startLine":326,"status":"M"},{"authorDate":"2021-02-20 12:12:22","commitOrder":3,"curCode":"  public JavaRDD<WriteStatus> insertBatch(HoodieWriteConfig writeConfig, SparkRDDWriteClient client, String newCommitTime,\n      String initCommitTime, int numRecordsInThisCommit,\n      Function3<JavaRDD<WriteStatus>, SparkRDDWriteClient, JavaRDD<HoodieRecord>, String> writeFn, boolean isPreppedAPI,\n      boolean assertForCommit, int expRecordsInThisCommit, int expTotalRecords, int expTotalCommits) throws Exception {\n    final Function2<List<HoodieRecord>, String, Integer> recordGenFunction =\n        generateWrapRecordsFn(isPreppedAPI, writeConfig, dataGen::generateInserts);\n\n    return writeBatch(client, newCommitTime, initCommitTime, Option.empty(), initCommitTime, numRecordsInThisCommit,\n        recordGenFunction, writeFn, assertForCommit, expRecordsInThisCommit, expTotalRecords, expTotalCommits, false);\n  }\n","date":"2021-02-20 12:12:22","endLine":356,"groupId":"10629","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"insertBatch","params":"(HoodieWriteConfigwriteConfig@SparkRDDWriteClientclient@StringnewCommitTime@StringinitCommitTime@intnumRecordsInThisCommit@Function3<JavaRDD<WriteStatus>@SparkRDDWriteClient@JavaRDD<HoodieRecord>@String>writeFn@booleanisPreppedAPI@booleanassertForCommit@intexpRecordsInThisCommit@intexpTotalRecords@intexpTotalCommits)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-hudi-10-0.7/blobInfo/CC_OUT/blobs/13/86edcfee1aa2f6438ba4aa13e8e9043d10df00.src","preCode":"  public JavaRDD<WriteStatus> insertBatch(HoodieWriteConfig writeConfig, SparkRDDWriteClient client, String newCommitTime,\n      String initCommitTime, int numRecordsInThisCommit,\n      Function3<JavaRDD<WriteStatus>, SparkRDDWriteClient, JavaRDD<HoodieRecord>, String> writeFn, boolean isPreppedAPI,\n      boolean assertForCommit, int expRecordsInThisCommit, int expTotalRecords, int expTotalCommits) throws Exception {\n    final Function2<List<HoodieRecord>, String, Integer> recordGenFunction =\n        generateWrapRecordsFn(isPreppedAPI, writeConfig, dataGen::generateInserts);\n\n    return writeBatch(client, newCommitTime, initCommitTime, Option.empty(), initCommitTime, numRecordsInThisCommit,\n        recordGenFunction, writeFn, assertForCommit, expRecordsInThisCommit, expTotalRecords, expTotalCommits, false);\n  }\n","realPath":"hudi-client/hudi-spark-client/src/test/java/org/apache/hudi/testutils/HoodieClientTestBase.java","repoName":"hudi","snippetEndLine":0,"snippetStartLine":0,"startLine":347,"status":"N"}],"commitId":"61148c1c43c9ff5ba04b6c174e9e2a006db9e7b3","commitMessage":"@@@[HUDI-2176.  2178.  2179] Adding virtual key support to COW table (#3306)\n\n","date":"2021-07-27 05:21:04","modifiedFileCount":"42","status":"M","submitter":"Sivabalan Narayanan"}]
