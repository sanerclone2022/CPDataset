[{"authorTime":"2020-10-07 20:33:51","codes":[{"authorDate":"2020-10-29 21:50:37","commitOrder":3,"curCode":"  protected GenericRecord create(Schema schema, Set<String> partitionPathFieldNames) {\n    GenericRecord result = new GenericData.Record(schema);\n    for (Schema.Field f : schema.getFields()) {\n      if (isPartialLongField(f, partitionPathFieldNames)) {\n        \r\n        long value = TimeUnit.SECONDS.convert(partitionIndex, TimeUnit.DAYS);\n        result.put(f.name(), (long)value);\n      } else {\n        result.put(f.name(), typeConvert(f));\n      }\n    }\n    return result;\n  }\n","date":"2020-10-29 21:50:37","endLine":146,"groupId":"237","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"create","params":"(Schemaschema@Set<String>partitionPathFieldNames)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-hudi-10-0.7/blobInfo/CC_OUT/blobs/f6/1fad6cd54ac197cd27e114dbb8dbb21dd0a2b4.src","preCode":"  protected GenericRecord create(Schema schema, Set<String> partitionPathFieldNames) {\n    GenericRecord result = new GenericData.Record(schema);\n    for (Schema.Field f : schema.getFields()) {\n      if (isPartialLongField(f, partitionPathFieldNames)) {\n        \r\n        long value = TimeUnit.SECONDS.convert(partitionIndex, TimeUnit.DAYS);\n        result.put(f.name(), (long)value);\n      } else {\n        result.put(f.name(), typeConvert(f));\n      }\n    }\n    return result;\n  }\n","realPath":"hudi-integ-test/src/main/java/org/apache/hudi/integ/testsuite/generator/GenericRecordFullPayloadGenerator.java","repoName":"hudi","snippetEndLine":0,"snippetStartLine":0,"startLine":134,"status":"B"},{"authorDate":"2020-10-07 20:33:51","commitOrder":3,"curCode":"  protected GenericRecord convertPartial(Schema schema) {\n    GenericRecord result = new GenericData.Record(schema);\n    for (Schema.Field f : schema.getFields()) {\n      boolean setNull = random.nextBoolean();\n      if (!setNull) {\n        result.put(f.name(), typeConvert(f));\n      } else {\n        result.put(f.name(), null);\n      }\n    }\n    \r\n    return result;\n  }\n","date":"2020-10-07 20:33:51","endLine":151,"groupId":"5834","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"convertPartial","params":"(Schemaschema)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-hudi-10-0.7/blobInfo/CC_OUT/blobs/df/9a4499254af4981ce5d76d3e67a3f13cee849c.src","preCode":"  protected GenericRecord convertPartial(Schema schema) {\n    GenericRecord result = new GenericData.Record(schema);\n    for (Schema.Field f : schema.getFields()) {\n      boolean setNull = random.nextBoolean();\n      if (!setNull) {\n        result.put(f.name(), typeConvert(f));\n      } else {\n        result.put(f.name(), null);\n      }\n    }\n    \r\n    return result;\n  }\n","realPath":"hudi-integ-test/src/main/java/org/apache/hudi/integ/testsuite/generator/GenericRecordFullPayloadGenerator.java","repoName":"hudi","snippetEndLine":0,"snippetStartLine":0,"startLine":139,"status":"NB"}],"commitId":"6310a2307abba94c7ff8a770f45462deae2c312e","commitMessage":"@@@[HUDI-1351] Improvements to the hudi test suite for scalability and repeated testing. (#2197)\n\n1. Added the --clean-input and --clean-output parameters to clean the input and output directories before starting the job\n2. Added the --delete-old-input parameter to deleted older batches for data already ingested. This helps keep number of redundant files low.\n3. Added the --input-parallelism parameter to restrict the parallelism when generating input data. This helps keeping the number of generated input files low.\n4. Added an option start_offset to Dag Nodes. Without ability to specify start offsets.  data is generated into existing partitions. With start offset.  DAG can control on which partition.  the data is to be written.\n5. Fixed generation of records for correct number of partitions\n  - In the existing implementation.  the partition is chosen as a random long. This does not guarantee exact number of requested partitions to be created.\n6. Changed variable blacklistedFields to be a Set as that is faster than List for membership checks.\n7. Fixed integer division for Math.ceil. If two integers are divided.  the result is not double unless one of the integer is casted to double.","date":"2020-10-29 21:50:37","modifiedFileCount":"11","status":"M","submitter":"Prashant Wason"},{"authorTime":"2020-11-01 12:15:41","codes":[{"authorDate":"2020-10-29 21:50:37","commitOrder":4,"curCode":"  protected GenericRecord create(Schema schema, Set<String> partitionPathFieldNames) {\n    GenericRecord result = new GenericData.Record(schema);\n    for (Schema.Field f : schema.getFields()) {\n      if (isPartialLongField(f, partitionPathFieldNames)) {\n        \r\n        long value = TimeUnit.SECONDS.convert(partitionIndex, TimeUnit.DAYS);\n        result.put(f.name(), (long)value);\n      } else {\n        result.put(f.name(), typeConvert(f));\n      }\n    }\n    return result;\n  }\n","date":"2020-10-29 21:50:37","endLine":146,"groupId":"237","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"create","params":"(Schemaschema@Set<String>partitionPathFieldNames)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-hudi-10-0.7/blobInfo/CC_OUT/blobs/f6/1fad6cd54ac197cd27e114dbb8dbb21dd0a2b4.src","preCode":"  protected GenericRecord create(Schema schema, Set<String> partitionPathFieldNames) {\n    GenericRecord result = new GenericData.Record(schema);\n    for (Schema.Field f : schema.getFields()) {\n      if (isPartialLongField(f, partitionPathFieldNames)) {\n        \r\n        long value = TimeUnit.SECONDS.convert(partitionIndex, TimeUnit.DAYS);\n        result.put(f.name(), (long)value);\n      } else {\n        result.put(f.name(), typeConvert(f));\n      }\n    }\n    return result;\n  }\n","realPath":"hudi-integ-test/src/main/java/org/apache/hudi/integ/testsuite/generator/GenericRecordFullPayloadGenerator.java","repoName":"hudi","snippetEndLine":0,"snippetStartLine":0,"startLine":134,"status":"N"},{"authorDate":"2020-11-01 12:15:41","commitOrder":4,"curCode":"  protected GenericRecord convertPartial(Schema schema) {\n    GenericRecord result = new GenericData.Record(schema);\n    for (Schema.Field f : schema.getFields()) {\n      if (f.name().equals(DEFAULT_HOODIE_IS_DELETED_COL)) {\n        result.put(f.name(), false);\n      } else {\n        boolean setNull = random.nextBoolean();\n        if (!setNull) {\n          result.put(f.name(), typeConvert(f));\n        } else {\n          result.put(f.name(), null);\n        }\n      }\n    }\n    \r\n    return result;\n  }\n","date":"2020-11-01 12:15:41","endLine":197,"groupId":"112","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"convertPartial","params":"(Schemaschema)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-hudi-10-0.7/blobInfo/CC_OUT/blobs/7d/5ca081444f04d3c8cdd445e2a320358ef1cc93.src","preCode":"  protected GenericRecord convertPartial(Schema schema) {\n    GenericRecord result = new GenericData.Record(schema);\n    for (Schema.Field f : schema.getFields()) {\n      boolean setNull = random.nextBoolean();\n      if (!setNull) {\n        result.put(f.name(), typeConvert(f));\n      } else {\n        result.put(f.name(), null);\n      }\n    }\n    \r\n    return result;\n  }\n","realPath":"hudi-integ-test/src/main/java/org/apache/hudi/integ/testsuite/generator/GenericRecordFullPayloadGenerator.java","repoName":"hudi","snippetEndLine":0,"snippetStartLine":0,"startLine":181,"status":"M"}],"commitId":"a205dd10faba0a83dcb39a12abb6f744b5224992","commitMessage":"@@@[HUDI-1338] Adding Delete support to test suite framework (#2172)\n\n- Adding Delete support to test suite. \n         Added DeleteNode \n         Added support to generate delete records \n","date":"2020-11-01 12:15:41","modifiedFileCount":"7","status":"M","submitter":"Sivabalan Narayanan"},{"authorTime":"2020-11-01 12:15:41","codes":[{"authorDate":"2020-12-27 01:29:24","commitOrder":5,"curCode":"  protected GenericRecord create(Schema schema, Set<String> partitionPathFieldNames) {\n    GenericRecord result = new GenericData.Record(schema);\n    for (Schema.Field f : schema.getFields()) {\n      if (f.name().equals(DEFAULT_HOODIE_IS_DELETED_COL)) {\n        result.put(f.name(), false);\n      } else {\n        if (isPartialLongField(f, partitionPathFieldNames)) {\n          \r\n          long value = TimeUnit.SECONDS.convert(partitionIndex, TimeUnit.DAYS);\n          result.put(f.name(), (long) value);\n        } else {\n          result.put(f.name(), typeConvert(f));\n        }\n      }\n    }\n    return result;\n  }\n","date":"2020-12-27 01:29:24","endLine":150,"groupId":"10202","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"create","params":"(Schemaschema@Set<String>partitionPathFieldNames)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-hudi-10-0.7/blobInfo/CC_OUT/blobs/49/a5f312ecabe5d0097b6176c21af1dd2347b0cc.src","preCode":"  protected GenericRecord create(Schema schema, Set<String> partitionPathFieldNames) {\n    GenericRecord result = new GenericData.Record(schema);\n    for (Schema.Field f : schema.getFields()) {\n      if (isPartialLongField(f, partitionPathFieldNames)) {\n        \r\n        long value = TimeUnit.SECONDS.convert(partitionIndex, TimeUnit.DAYS);\n        result.put(f.name(), (long) value);\n      } else {\n        result.put(f.name(), typeConvert(f));\n      }\n    }\n    return result;\n  }\n","realPath":"hudi-integ-test/src/main/java/org/apache/hudi/integ/testsuite/generator/GenericRecordFullPayloadGenerator.java","repoName":"hudi","snippetEndLine":0,"snippetStartLine":0,"startLine":134,"status":"M"},{"authorDate":"2020-11-01 12:15:41","commitOrder":5,"curCode":"  protected GenericRecord convertPartial(Schema schema) {\n    GenericRecord result = new GenericData.Record(schema);\n    for (Schema.Field f : schema.getFields()) {\n      if (f.name().equals(DEFAULT_HOODIE_IS_DELETED_COL)) {\n        result.put(f.name(), false);\n      } else {\n        boolean setNull = random.nextBoolean();\n        if (!setNull) {\n          result.put(f.name(), typeConvert(f));\n        } else {\n          result.put(f.name(), null);\n        }\n      }\n    }\n    \r\n    return result;\n  }\n","date":"2020-11-01 12:15:41","endLine":197,"groupId":"10202","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"convertPartial","params":"(Schemaschema)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-hudi-10-0.7/blobInfo/CC_OUT/blobs/7d/5ca081444f04d3c8cdd445e2a320358ef1cc93.src","preCode":"  protected GenericRecord convertPartial(Schema schema) {\n    GenericRecord result = new GenericData.Record(schema);\n    for (Schema.Field f : schema.getFields()) {\n      if (f.name().equals(DEFAULT_HOODIE_IS_DELETED_COL)) {\n        result.put(f.name(), false);\n      } else {\n        boolean setNull = random.nextBoolean();\n        if (!setNull) {\n          result.put(f.name(), typeConvert(f));\n        } else {\n          result.put(f.name(), null);\n        }\n      }\n    }\n    \r\n    return result;\n  }\n","realPath":"hudi-integ-test/src/main/java/org/apache/hudi/integ/testsuite/generator/GenericRecordFullPayloadGenerator.java","repoName":"hudi","snippetEndLine":0,"snippetStartLine":0,"startLine":181,"status":"N"}],"commitId":"8cf6a7223f5fa6c2014a7351198ac6d1ebd26621","commitMessage":"@@@[HUDI-1331] Adding support for validating entire dataset and long running tests in test suite framework (#2168)\n\n* trigger rebuild\n\n* [HUDI-1156] Remove unused dependencies from HoodieDeltaStreamerWrapper Class (#1927)\n\n* Adding support for validating records and long running tests in test sutie framework\n\n* Adding partial validate node\n\n* Fixing spark session initiation in Validate nodes\n\n* Fixing validation\n\n* Adding hive table validation to ValidateDatasetNode\n\n* Rebasing with latest commits from master\n\n* Addressing feedback\n\n* Addressing comments\n\nCo-authored-by: lamber-ken <lamberken@163.com>\nCo-authored-by: linshan-ma <mabin194046@163.com>","date":"2020-12-27 01:29:24","modifiedFileCount":"21","status":"M","submitter":"Sivabalan Narayanan"}]
