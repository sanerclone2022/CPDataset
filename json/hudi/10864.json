[{"authorTime":"2021-05-14 10:25:18","codes":[{"authorDate":"2021-05-14 10:25:18","commitOrder":1,"curCode":"  public void finalizeWrite() {\n    \r\n    try {\n      fs.delete(oldFilePath, false);\n    } catch (IOException e) {\n      throw new HoodieIOException(\"Error while cleaning the old base file: \" + oldFilePath, e);\n    }\n    try {\n      fs.rename(newFilePath, oldFilePath);\n    } catch (IOException e) {\n      throw new HoodieIOException(\"Error while renaming the temporary roll file: \"\n          + newFilePath + \" to old base file name: \" + oldFilePath, e);\n    }\n  }\n","date":"2021-05-14 10:25:18","endLine":160,"groupId":"5596","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"finalizeWrite","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-hudi-10-0.7/blobInfo/CC_OUT/blobs/44/d630ac83559d53a81516a1cdb67d44ac73bf93.src","preCode":"  public void finalizeWrite() {\n    \r\n    try {\n      fs.delete(oldFilePath, false);\n    } catch (IOException e) {\n      throw new HoodieIOException(\"Error while cleaning the old base file: \" + oldFilePath, e);\n    }\n    try {\n      fs.rename(newFilePath, oldFilePath);\n    } catch (IOException e) {\n      throw new HoodieIOException(\"Error while renaming the temporary roll file: \"\n          + newFilePath + \" to old base file name: \" + oldFilePath, e);\n    }\n  }\n","realPath":"hudi-client/hudi-flink-client/src/main/java/org/apache/hudi/io/FlinkMergeAndReplaceHandle.java","repoName":"hudi","snippetEndLine":0,"snippetStartLine":0,"startLine":147,"status":"B"},{"authorDate":"2021-05-14 10:25:18","commitOrder":1,"curCode":"  public void finalizeWrite() {\n    \r\n    rolloverPaths.add(newFilePath);\n    if (rolloverPaths.size() == 1) {\n      \r\n      return;\n    }\n\n    for (int i = 0; i < rolloverPaths.size() - 1; i++) {\n      Path path = rolloverPaths.get(i);\n      try {\n        fs.delete(path, false);\n      } catch (IOException e) {\n        throw new HoodieIOException(\"Error when clean the temporary roll file: \" + path, e);\n      }\n    }\n    final Path lastPath = rolloverPaths.get(rolloverPaths.size() - 1);\n    final Path desiredPath = rolloverPaths.get(0);\n    try {\n      fs.rename(lastPath, desiredPath);\n    } catch (IOException e) {\n      throw new HoodieIOException(\"Error when rename the temporary roll file: \" + lastPath + \" to: \" + desiredPath, e);\n    }\n  }\n","date":"2021-05-14 10:25:18","endLine":182,"groupId":"4992","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"finalizeWrite","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-hudi-10-0.7/blobInfo/CC_OUT/blobs/87/0a6aae22ba6a76c23701c9a40e04eb4607cf7e.src","preCode":"  public void finalizeWrite() {\n    \r\n    rolloverPaths.add(newFilePath);\n    if (rolloverPaths.size() == 1) {\n      \r\n      return;\n    }\n\n    for (int i = 0; i < rolloverPaths.size() - 1; i++) {\n      Path path = rolloverPaths.get(i);\n      try {\n        fs.delete(path, false);\n      } catch (IOException e) {\n        throw new HoodieIOException(\"Error when clean the temporary roll file: \" + path, e);\n      }\n    }\n    final Path lastPath = rolloverPaths.get(rolloverPaths.size() - 1);\n    final Path desiredPath = rolloverPaths.get(0);\n    try {\n      fs.rename(lastPath, desiredPath);\n    } catch (IOException e) {\n      throw new HoodieIOException(\"Error when rename the temporary roll file: \" + lastPath + \" to: \" + desiredPath, e);\n    }\n  }\n","realPath":"hudi-client/hudi-flink-client/src/main/java/org/apache/hudi/io/FlinkMergeHandle.java","repoName":"hudi","snippetEndLine":0,"snippetStartLine":0,"startLine":159,"status":"B"}],"commitId":"ad77cf42ba7d8eab086be1f6d91f465bf29164ed","commitMessage":"@@@[HUDI-1900] Always close the file handle for a flink mini-batch write (#2943)\n\nClose the file handle eagerly to avoid corrupted files as much as\npossible.","date":"2021-05-14 10:25:18","modifiedFileCount":"12","status":"B","submitter":"Danny Chan"},{"authorTime":"2021-05-14 10:25:18","codes":[{"authorDate":"2021-06-15 23:18:38","commitOrder":2,"curCode":"  public void finalizeWrite() {\n    \r\n    if (!shouldReplace) {\n      return;\n    }\n    \r\n    try {\n      fs.delete(oldFilePath, false);\n    } catch (IOException e) {\n      throw new HoodieIOException(\"Error while cleaning the old base file: \" + oldFilePath, e);\n    }\n    try {\n      fs.rename(newFilePath, oldFilePath);\n    } catch (IOException e) {\n      throw new HoodieIOException(\"Error while renaming the temporary roll file: \"\n          + newFilePath + \" to old base file name: \" + oldFilePath, e);\n    }\n  }\n","date":"2021-06-15 23:18:38","endLine":171,"groupId":"10864","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"finalizeWrite","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-hudi-10-0.7/blobInfo/CC_OUT/blobs/f4/14450ef74f655f62269032a68793439fa98462.src","preCode":"  public void finalizeWrite() {\n    \r\n    try {\n      fs.delete(oldFilePath, false);\n    } catch (IOException e) {\n      throw new HoodieIOException(\"Error while cleaning the old base file: \" + oldFilePath, e);\n    }\n    try {\n      fs.rename(newFilePath, oldFilePath);\n    } catch (IOException e) {\n      throw new HoodieIOException(\"Error while renaming the temporary roll file: \"\n          + newFilePath + \" to old base file name: \" + oldFilePath, e);\n    }\n  }\n","realPath":"hudi-client/hudi-flink-client/src/main/java/org/apache/hudi/io/FlinkMergeAndReplaceHandle.java","repoName":"hudi","snippetEndLine":0,"snippetStartLine":0,"startLine":154,"status":"M"},{"authorDate":"2021-05-14 10:25:18","commitOrder":2,"curCode":"  public void finalizeWrite() {\n    \r\n    rolloverPaths.add(newFilePath);\n    if (rolloverPaths.size() == 1) {\n      \r\n      return;\n    }\n\n    for (int i = 0; i < rolloverPaths.size() - 1; i++) {\n      Path path = rolloverPaths.get(i);\n      try {\n        fs.delete(path, false);\n      } catch (IOException e) {\n        throw new HoodieIOException(\"Error when clean the temporary roll file: \" + path, e);\n      }\n    }\n    final Path lastPath = rolloverPaths.get(rolloverPaths.size() - 1);\n    final Path desiredPath = rolloverPaths.get(0);\n    try {\n      fs.rename(lastPath, desiredPath);\n    } catch (IOException e) {\n      throw new HoodieIOException(\"Error when rename the temporary roll file: \" + lastPath + \" to: \" + desiredPath, e);\n    }\n  }\n","date":"2021-05-14 10:25:18","endLine":182,"groupId":"10864","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"finalizeWrite","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-hudi-10-0.7/blobInfo/CC_OUT/blobs/87/0a6aae22ba6a76c23701c9a40e04eb4607cf7e.src","preCode":"  public void finalizeWrite() {\n    \r\n    rolloverPaths.add(newFilePath);\n    if (rolloverPaths.size() == 1) {\n      \r\n      return;\n    }\n\n    for (int i = 0; i < rolloverPaths.size() - 1; i++) {\n      Path path = rolloverPaths.get(i);\n      try {\n        fs.delete(path, false);\n      } catch (IOException e) {\n        throw new HoodieIOException(\"Error when clean the temporary roll file: \" + path, e);\n      }\n    }\n    final Path lastPath = rolloverPaths.get(rolloverPaths.size() - 1);\n    final Path desiredPath = rolloverPaths.get(0);\n    try {\n      fs.rename(lastPath, desiredPath);\n    } catch (IOException e) {\n      throw new HoodieIOException(\"Error when rename the temporary roll file: \" + lastPath + \" to: \" + desiredPath, e);\n    }\n  }\n","realPath":"hudi-client/hudi-flink-client/src/main/java/org/apache/hudi/io/FlinkMergeHandle.java","repoName":"hudi","snippetEndLine":0,"snippetStartLine":0,"startLine":159,"status":"N"}],"commitId":"cb642ceb75ef903a77593af943c6ba19053257ee","commitMessage":"@@@[HUDI-1999] Refresh the base file view cache for WriteProfile (#3067)\n\nRefresh the view to discover new small files.","date":"2021-06-15 23:18:38","modifiedFileCount":"7","status":"M","submitter":"Danny Chan"}]
