[{"authorTime":"2021-06-26 00:37:47","codes":[{"authorDate":"2021-06-26 00:37:47","commitOrder":1,"curCode":"  public void testGetNextOffsetRangesFromLatest() {\n    HoodieTestDataGenerator dataGenerator = new HoodieTestDataGenerator();\n    testUtils.createTopic(TEST_TOPIC_NAME, 1);\n    testUtils.sendMessages(TEST_TOPIC_NAME, Helpers.jsonifyRecords(dataGenerator.generateInserts(\"000\", 1000)));\n    KafkaOffsetGen kafkaOffsetGen = new KafkaOffsetGen(getConsumerConfigs(\"latest\"));\n    OffsetRange[] nextOffsetRanges = kafkaOffsetGen.getNextOffsetRanges(Option.empty(), 500, metrics);\n    assertEquals(1, nextOffsetRanges.length);\n    assertEquals(1000, nextOffsetRanges[0].fromOffset());\n    assertEquals(1000, nextOffsetRanges[0].untilOffset());\n  }\n","date":"2021-06-26 00:37:47","endLine":100,"groupId":"4874","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testGetNextOffsetRangesFromLatest","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-hudi-10-0.7/blobInfo/CC_OUT/blobs/50/8c90aa6f2b2c86f9ba552396aef7456f6e728a.src","preCode":"  public void testGetNextOffsetRangesFromLatest() {\n    HoodieTestDataGenerator dataGenerator = new HoodieTestDataGenerator();\n    testUtils.createTopic(TEST_TOPIC_NAME, 1);\n    testUtils.sendMessages(TEST_TOPIC_NAME, Helpers.jsonifyRecords(dataGenerator.generateInserts(\"000\", 1000)));\n    KafkaOffsetGen kafkaOffsetGen = new KafkaOffsetGen(getConsumerConfigs(\"latest\"));\n    OffsetRange[] nextOffsetRanges = kafkaOffsetGen.getNextOffsetRanges(Option.empty(), 500, metrics);\n    assertEquals(1, nextOffsetRanges.length);\n    assertEquals(1000, nextOffsetRanges[0].fromOffset());\n    assertEquals(1000, nextOffsetRanges[0].untilOffset());\n  }\n","realPath":"hudi-utilities/src/test/java/org/apache/hudi/utilities/sources/helpers/TestKafkaOffsetGen.java","repoName":"hudi","snippetEndLine":0,"snippetStartLine":0,"startLine":91,"status":"B"},{"authorDate":"2021-06-26 00:37:47","commitOrder":1,"curCode":"  public void testGetNextOffsetRangesFromCheckpoint() {\n    String lastCheckpointString = TEST_TOPIC_NAME + \",0:250\";\n    HoodieTestDataGenerator dataGenerator = new HoodieTestDataGenerator();\n    testUtils.createTopic(TEST_TOPIC_NAME, 1);\n    testUtils.sendMessages(TEST_TOPIC_NAME, Helpers.jsonifyRecords(dataGenerator.generateInserts(\"000\", 1000)));\n    KafkaOffsetGen kafkaOffsetGen = new KafkaOffsetGen(getConsumerConfigs(\"latest\"));\n\n    OffsetRange[] nextOffsetRanges = kafkaOffsetGen.getNextOffsetRanges(Option.of(lastCheckpointString), 500, metrics);\n    assertEquals(1, nextOffsetRanges.length);\n    assertEquals(250, nextOffsetRanges[0].fromOffset());\n    assertEquals(750, nextOffsetRanges[0].untilOffset());\n  }\n","date":"2021-06-26 00:37:47","endLine":114,"groupId":"1378","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testGetNextOffsetRangesFromCheckpoint","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-hudi-10-0.7/blobInfo/CC_OUT/blobs/50/8c90aa6f2b2c86f9ba552396aef7456f6e728a.src","preCode":"  public void testGetNextOffsetRangesFromCheckpoint() {\n    String lastCheckpointString = TEST_TOPIC_NAME + \",0:250\";\n    HoodieTestDataGenerator dataGenerator = new HoodieTestDataGenerator();\n    testUtils.createTopic(TEST_TOPIC_NAME, 1);\n    testUtils.sendMessages(TEST_TOPIC_NAME, Helpers.jsonifyRecords(dataGenerator.generateInserts(\"000\", 1000)));\n    KafkaOffsetGen kafkaOffsetGen = new KafkaOffsetGen(getConsumerConfigs(\"latest\"));\n\n    OffsetRange[] nextOffsetRanges = kafkaOffsetGen.getNextOffsetRanges(Option.of(lastCheckpointString), 500, metrics);\n    assertEquals(1, nextOffsetRanges.length);\n    assertEquals(250, nextOffsetRanges[0].fromOffset());\n    assertEquals(750, nextOffsetRanges[0].untilOffset());\n  }\n","realPath":"hudi-utilities/src/test/java/org/apache/hudi/utilities/sources/helpers/TestKafkaOffsetGen.java","repoName":"hudi","snippetEndLine":0,"snippetStartLine":0,"startLine":103,"status":"B"}],"commitId":"ed1a5daa9a15e9123aa7fdba5ce8262d1cae0704","commitMessage":"@@@[HUDI-2060] Added tests for KafkaOffsetGen (#3136)\n\n","date":"2021-06-26 00:37:47","modifiedFileCount":"0","status":"B","submitter":"Vinay Patil"},{"authorTime":"2021-07-17 12:31:06","codes":[{"authorDate":"2021-07-17 12:31:06","commitOrder":2,"curCode":"  public void testGetNextOffsetRangesFromLatest() {\n    HoodieTestDataGenerator dataGenerator = new HoodieTestDataGenerator();\n    testUtils.createTopic(TEST_TOPIC_NAME, 1);\n    testUtils.sendMessages(TEST_TOPIC_NAME, Helpers.jsonifyRecords(dataGenerator.generateInserts(\"000\", 1000)));\n    KafkaOffsetGen kafkaOffsetGen = new KafkaOffsetGen(getConsumerConfigs(\"latest\", \"string\"));\n    OffsetRange[] nextOffsetRanges = kafkaOffsetGen.getNextOffsetRanges(Option.empty(), 500, metrics);\n    assertEquals(1, nextOffsetRanges.length);\n    assertEquals(1000, nextOffsetRanges[0].fromOffset());\n    assertEquals(1000, nextOffsetRanges[0].untilOffset());\n  }\n","date":"2021-07-17 12:31:06","endLine":105,"groupId":"10236","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"testGetNextOffsetRangesFromLatest","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-hudi-10-0.7/blobInfo/CC_OUT/blobs/ef/f9b24b2b3809c1710afd54b6ae3b1d0de37c00.src","preCode":"  public void testGetNextOffsetRangesFromLatest() {\n    HoodieTestDataGenerator dataGenerator = new HoodieTestDataGenerator();\n    testUtils.createTopic(TEST_TOPIC_NAME, 1);\n    testUtils.sendMessages(TEST_TOPIC_NAME, Helpers.jsonifyRecords(dataGenerator.generateInserts(\"000\", 1000)));\n    KafkaOffsetGen kafkaOffsetGen = new KafkaOffsetGen(getConsumerConfigs(\"latest\"));\n    OffsetRange[] nextOffsetRanges = kafkaOffsetGen.getNextOffsetRanges(Option.empty(), 500, metrics);\n    assertEquals(1, nextOffsetRanges.length);\n    assertEquals(1000, nextOffsetRanges[0].fromOffset());\n    assertEquals(1000, nextOffsetRanges[0].untilOffset());\n  }\n","realPath":"hudi-utilities/src/test/java/org/apache/hudi/utilities/sources/helpers/TestKafkaOffsetGen.java","repoName":"hudi","snippetEndLine":0,"snippetStartLine":0,"startLine":96,"status":"M"},{"authorDate":"2021-07-17 12:31:06","commitOrder":2,"curCode":"  public void testGetNextOffsetRangesFromCheckpoint() {\n    String lastCheckpointString = TEST_TOPIC_NAME + \",0:250\";\n    HoodieTestDataGenerator dataGenerator = new HoodieTestDataGenerator();\n    testUtils.createTopic(TEST_TOPIC_NAME, 1);\n    testUtils.sendMessages(TEST_TOPIC_NAME, Helpers.jsonifyRecords(dataGenerator.generateInserts(\"000\", 1000)));\n    KafkaOffsetGen kafkaOffsetGen = new KafkaOffsetGen(getConsumerConfigs(\"latest\", \"string\"));\n\n    OffsetRange[] nextOffsetRanges = kafkaOffsetGen.getNextOffsetRanges(Option.of(lastCheckpointString), 500, metrics);\n    assertEquals(1, nextOffsetRanges.length);\n    assertEquals(250, nextOffsetRanges[0].fromOffset());\n    assertEquals(750, nextOffsetRanges[0].untilOffset());\n  }\n","date":"2021-07-17 12:31:06","endLine":119,"groupId":"10236","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"testGetNextOffsetRangesFromCheckpoint","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-hudi-10-0.7/blobInfo/CC_OUT/blobs/ef/f9b24b2b3809c1710afd54b6ae3b1d0de37c00.src","preCode":"  public void testGetNextOffsetRangesFromCheckpoint() {\n    String lastCheckpointString = TEST_TOPIC_NAME + \",0:250\";\n    HoodieTestDataGenerator dataGenerator = new HoodieTestDataGenerator();\n    testUtils.createTopic(TEST_TOPIC_NAME, 1);\n    testUtils.sendMessages(TEST_TOPIC_NAME, Helpers.jsonifyRecords(dataGenerator.generateInserts(\"000\", 1000)));\n    KafkaOffsetGen kafkaOffsetGen = new KafkaOffsetGen(getConsumerConfigs(\"latest\"));\n\n    OffsetRange[] nextOffsetRanges = kafkaOffsetGen.getNextOffsetRanges(Option.of(lastCheckpointString), 500, metrics);\n    assertEquals(1, nextOffsetRanges.length);\n    assertEquals(250, nextOffsetRanges[0].fromOffset());\n    assertEquals(750, nextOffsetRanges[0].untilOffset());\n  }\n","realPath":"hudi-utilities/src/test/java/org/apache/hudi/utilities/sources/helpers/TestKafkaOffsetGen.java","repoName":"hudi","snippetEndLine":0,"snippetStartLine":0,"startLine":108,"status":"M"}],"commitId":"af837d2f1825d14ae8403b2290cf5eab39780343","commitMessage":"@@@[HUDI-1447] DeltaStreamer kafka source supports consuming from specified timestamp (#2438)\n\n","date":"2021-07-17 12:31:06","modifiedFileCount":"7","status":"M","submitter":"liujinhui"}]
