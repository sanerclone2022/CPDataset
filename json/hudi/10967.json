[{"authorTime":"2020-05-18 09:32:24","codes":[{"authorDate":"2020-05-14 09:04:38","commitOrder":4,"curCode":"  public static Schema addMetadataFields(Schema schema) {\n    List<Schema.Field> parentFields = new ArrayList<>();\n\n    Schema.Field commitTimeField =\n        new Schema.Field(HoodieRecord.COMMIT_TIME_METADATA_FIELD, METADATA_FIELD_SCHEMA, \"\", NullNode.getInstance());\n    Schema.Field commitSeqnoField =\n        new Schema.Field(HoodieRecord.COMMIT_SEQNO_METADATA_FIELD, METADATA_FIELD_SCHEMA, \"\", NullNode.getInstance());\n    Schema.Field recordKeyField =\n        new Schema.Field(HoodieRecord.RECORD_KEY_METADATA_FIELD, METADATA_FIELD_SCHEMA, \"\", NullNode.getInstance());\n    Schema.Field partitionPathField =\n        new Schema.Field(HoodieRecord.PARTITION_PATH_METADATA_FIELD, METADATA_FIELD_SCHEMA, \"\", NullNode.getInstance());\n    Schema.Field fileNameField =\n        new Schema.Field(HoodieRecord.FILENAME_METADATA_FIELD, METADATA_FIELD_SCHEMA, \"\", NullNode.getInstance());\n\n    parentFields.add(commitTimeField);\n    parentFields.add(commitSeqnoField);\n    parentFields.add(recordKeyField);\n    parentFields.add(partitionPathField);\n    parentFields.add(fileNameField);\n    for (Schema.Field field : schema.getFields()) {\n      if (!isMetadataField(field.name())) {\n        Schema.Field newField = new Schema.Field(field.name(), field.schema(), field.doc(), field.defaultVal());\n        for (Map.Entry<String, Object> prop : field.getObjectProps().entrySet()) {\n          newField.addProp(prop.getKey(), prop.getValue());\n        }\n        parentFields.add(newField);\n      }\n    }\n\n    Schema mergedSchema = Schema.createRecord(schema.getName(), schema.getDoc(), schema.getNamespace(), false);\n    mergedSchema.setFields(parentFields);\n    return mergedSchema;\n  }\n","date":"2020-05-14 09:04:38","endLine":173,"groupId":"3280","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"addMetadataFields","params":"(Schemaschema)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-hudi-10-0.7/blobInfo/CC_OUT/blobs/bf/fe8df238e0cb1f909197f80e0607c29c4859bf.src","preCode":"  public static Schema addMetadataFields(Schema schema) {\n    List<Schema.Field> parentFields = new ArrayList<>();\n\n    Schema.Field commitTimeField =\n        new Schema.Field(HoodieRecord.COMMIT_TIME_METADATA_FIELD, METADATA_FIELD_SCHEMA, \"\", NullNode.getInstance());\n    Schema.Field commitSeqnoField =\n        new Schema.Field(HoodieRecord.COMMIT_SEQNO_METADATA_FIELD, METADATA_FIELD_SCHEMA, \"\", NullNode.getInstance());\n    Schema.Field recordKeyField =\n        new Schema.Field(HoodieRecord.RECORD_KEY_METADATA_FIELD, METADATA_FIELD_SCHEMA, \"\", NullNode.getInstance());\n    Schema.Field partitionPathField =\n        new Schema.Field(HoodieRecord.PARTITION_PATH_METADATA_FIELD, METADATA_FIELD_SCHEMA, \"\", NullNode.getInstance());\n    Schema.Field fileNameField =\n        new Schema.Field(HoodieRecord.FILENAME_METADATA_FIELD, METADATA_FIELD_SCHEMA, \"\", NullNode.getInstance());\n\n    parentFields.add(commitTimeField);\n    parentFields.add(commitSeqnoField);\n    parentFields.add(recordKeyField);\n    parentFields.add(partitionPathField);\n    parentFields.add(fileNameField);\n    for (Schema.Field field : schema.getFields()) {\n      if (!isMetadataField(field.name())) {\n        Schema.Field newField = new Schema.Field(field.name(), field.schema(), field.doc(), field.defaultVal());\n        for (Map.Entry<String, Object> prop : field.getObjectProps().entrySet()) {\n          newField.addProp(prop.getKey(), prop.getValue());\n        }\n        parentFields.add(newField);\n      }\n    }\n\n    Schema mergedSchema = Schema.createRecord(schema.getName(), schema.getDoc(), schema.getNamespace(), false);\n    mergedSchema.setFields(parentFields);\n    return mergedSchema;\n  }\n","realPath":"hudi-common/src/main/java/org/apache/hudi/avro/HoodieAvroUtils.java","repoName":"hudi","snippetEndLine":0,"snippetStartLine":0,"startLine":141,"status":"NB"},{"authorDate":"2020-05-18 09:32:24","commitOrder":4,"curCode":"  public static Schema getRecordKeyPartitionPathSchema() {\n    List<Schema.Field> toBeAddedFields = new ArrayList<>();\n    Schema recordSchema = Schema.createRecord(\"HoodieRecordKey\", \"\", \"\", false);\n\n    Schema.Field recordKeyField =\n        new Schema.Field(HoodieRecord.RECORD_KEY_METADATA_FIELD, METADATA_FIELD_SCHEMA, \"\", NullNode.getInstance());\n    Schema.Field partitionPathField =\n        new Schema.Field(HoodieRecord.PARTITION_PATH_METADATA_FIELD, METADATA_FIELD_SCHEMA, \"\", NullNode.getInstance());\n\n    toBeAddedFields.add(recordKeyField);\n    toBeAddedFields.add(partitionPathField);\n    recordSchema.setFields(toBeAddedFields);\n    return recordSchema;\n  }\n","date":"2020-05-18 09:32:24","endLine":217,"groupId":"5066","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"getRecordKeyPartitionPathSchema","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-hudi-10-0.7/blobInfo/CC_OUT/blobs/8c/221224454dfa9004242d940fc2775d31ea5f51.src","preCode":"  public static Schema getRecordKeyPartitionPathSchema() {\n    List<Schema.Field> toBeAddedFields = new ArrayList<>();\n    Schema recordSchema = Schema.createRecord(\"HoodieRecordKey\", \"\", \"\", false);\n\n    Schema.Field recordKeyField =\n        new Schema.Field(HoodieRecord.RECORD_KEY_METADATA_FIELD, METADATA_FIELD_SCHEMA, \"\", NullNode.getInstance());\n    Schema.Field partitionPathField =\n        new Schema.Field(HoodieRecord.PARTITION_PATH_METADATA_FIELD, METADATA_FIELD_SCHEMA, \"\", NullNode.getInstance());\n\n    toBeAddedFields.add(recordKeyField);\n    toBeAddedFields.add(partitionPathField);\n    recordSchema.setFields(toBeAddedFields);\n    return recordSchema;\n  }\n","realPath":"hudi-common/src/main/java/org/apache/hudi/avro/HoodieAvroUtils.java","repoName":"hudi","snippetEndLine":0,"snippetStartLine":0,"startLine":204,"status":"B"}],"commitId":"29edf4b3b8ade64ec7822d6b7b2a125d5ca781c4","commitMessage":"@@@[HUDI-407] Adding Simple Index to Hoodie. (#1402)\n\nThis index finds the location by joining incoming records with records from base files.","date":"2020-05-18 09:32:24","modifiedFileCount":"11","status":"M","submitter":"Sivabalan Narayanan"},{"authorTime":"2020-05-18 09:32:24","codes":[{"authorDate":"2020-05-21 00:04:43","commitOrder":5,"curCode":"  public static Schema addMetadataFields(Schema schema) {\n    List<Schema.Field> parentFields = new ArrayList<>();\n\n    Schema.Field commitTimeField =\n        new Schema.Field(HoodieRecord.COMMIT_TIME_METADATA_FIELD, METADATA_FIELD_SCHEMA, \"\", JsonProperties.NULL_VALUE);\n    Schema.Field commitSeqnoField =\n        new Schema.Field(HoodieRecord.COMMIT_SEQNO_METADATA_FIELD, METADATA_FIELD_SCHEMA, \"\", JsonProperties.NULL_VALUE);\n    Schema.Field recordKeyField =\n        new Schema.Field(HoodieRecord.RECORD_KEY_METADATA_FIELD, METADATA_FIELD_SCHEMA, \"\", JsonProperties.NULL_VALUE);\n    Schema.Field partitionPathField =\n        new Schema.Field(HoodieRecord.PARTITION_PATH_METADATA_FIELD, METADATA_FIELD_SCHEMA, \"\", JsonProperties.NULL_VALUE);\n    Schema.Field fileNameField =\n        new Schema.Field(HoodieRecord.FILENAME_METADATA_FIELD, METADATA_FIELD_SCHEMA, \"\", JsonProperties.NULL_VALUE);\n\n    parentFields.add(commitTimeField);\n    parentFields.add(commitSeqnoField);\n    parentFields.add(recordKeyField);\n    parentFields.add(partitionPathField);\n    parentFields.add(fileNameField);\n    for (Schema.Field field : schema.getFields()) {\n      if (!isMetadataField(field.name())) {\n        Schema.Field newField = new Schema.Field(field.name(), field.schema(), field.doc(), field.defaultVal());\n        for (Map.Entry<String, Object> prop : field.getObjectProps().entrySet()) {\n          newField.addProp(prop.getKey(), prop.getValue());\n        }\n        parentFields.add(newField);\n      }\n    }\n\n    Schema mergedSchema = Schema.createRecord(schema.getName(), schema.getDoc(), schema.getNamespace(), false);\n    mergedSchema.setFields(parentFields);\n    return mergedSchema;\n  }\n","date":"2020-05-21 00:04:43","endLine":172,"groupId":"1659","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"addMetadataFields","params":"(Schemaschema)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-hudi-10-0.7/blobInfo/CC_OUT/blobs/38/b9d32097196046ecb3d7c28b8bc9153d1f6387.src","preCode":"  public static Schema addMetadataFields(Schema schema) {\n    List<Schema.Field> parentFields = new ArrayList<>();\n\n    Schema.Field commitTimeField =\n        new Schema.Field(HoodieRecord.COMMIT_TIME_METADATA_FIELD, METADATA_FIELD_SCHEMA, \"\", NullNode.getInstance());\n    Schema.Field commitSeqnoField =\n        new Schema.Field(HoodieRecord.COMMIT_SEQNO_METADATA_FIELD, METADATA_FIELD_SCHEMA, \"\", NullNode.getInstance());\n    Schema.Field recordKeyField =\n        new Schema.Field(HoodieRecord.RECORD_KEY_METADATA_FIELD, METADATA_FIELD_SCHEMA, \"\", NullNode.getInstance());\n    Schema.Field partitionPathField =\n        new Schema.Field(HoodieRecord.PARTITION_PATH_METADATA_FIELD, METADATA_FIELD_SCHEMA, \"\", NullNode.getInstance());\n    Schema.Field fileNameField =\n        new Schema.Field(HoodieRecord.FILENAME_METADATA_FIELD, METADATA_FIELD_SCHEMA, \"\", NullNode.getInstance());\n\n    parentFields.add(commitTimeField);\n    parentFields.add(commitSeqnoField);\n    parentFields.add(recordKeyField);\n    parentFields.add(partitionPathField);\n    parentFields.add(fileNameField);\n    for (Schema.Field field : schema.getFields()) {\n      if (!isMetadataField(field.name())) {\n        Schema.Field newField = new Schema.Field(field.name(), field.schema(), field.doc(), field.defaultVal());\n        for (Map.Entry<String, Object> prop : field.getObjectProps().entrySet()) {\n          newField.addProp(prop.getKey(), prop.getValue());\n        }\n        parentFields.add(newField);\n      }\n    }\n\n    Schema mergedSchema = Schema.createRecord(schema.getName(), schema.getDoc(), schema.getNamespace(), false);\n    mergedSchema.setFields(parentFields);\n    return mergedSchema;\n  }\n","realPath":"hudi-common/src/main/java/org/apache/hudi/avro/HoodieAvroUtils.java","repoName":"hudi","snippetEndLine":0,"snippetStartLine":0,"startLine":140,"status":"M"},{"authorDate":"2020-05-18 09:32:24","commitOrder":5,"curCode":"  public static Schema getRecordKeyPartitionPathSchema() {\n    List<Schema.Field> toBeAddedFields = new ArrayList<>();\n    Schema recordSchema = Schema.createRecord(\"HoodieRecordKey\", \"\", \"\", false);\n\n    Schema.Field recordKeyField =\n        new Schema.Field(HoodieRecord.RECORD_KEY_METADATA_FIELD, METADATA_FIELD_SCHEMA, \"\", NullNode.getInstance());\n    Schema.Field partitionPathField =\n        new Schema.Field(HoodieRecord.PARTITION_PATH_METADATA_FIELD, METADATA_FIELD_SCHEMA, \"\", NullNode.getInstance());\n\n    toBeAddedFields.add(recordKeyField);\n    toBeAddedFields.add(partitionPathField);\n    recordSchema.setFields(toBeAddedFields);\n    return recordSchema;\n  }\n","date":"2020-05-18 09:32:24","endLine":217,"groupId":"5066","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"getRecordKeyPartitionPathSchema","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-hudi-10-0.7/blobInfo/CC_OUT/blobs/8c/221224454dfa9004242d940fc2775d31ea5f51.src","preCode":"  public static Schema getRecordKeyPartitionPathSchema() {\n    List<Schema.Field> toBeAddedFields = new ArrayList<>();\n    Schema recordSchema = Schema.createRecord(\"HoodieRecordKey\", \"\", \"\", false);\n\n    Schema.Field recordKeyField =\n        new Schema.Field(HoodieRecord.RECORD_KEY_METADATA_FIELD, METADATA_FIELD_SCHEMA, \"\", NullNode.getInstance());\n    Schema.Field partitionPathField =\n        new Schema.Field(HoodieRecord.PARTITION_PATH_METADATA_FIELD, METADATA_FIELD_SCHEMA, \"\", NullNode.getInstance());\n\n    toBeAddedFields.add(recordKeyField);\n    toBeAddedFields.add(partitionPathField);\n    recordSchema.setFields(toBeAddedFields);\n    return recordSchema;\n  }\n","realPath":"hudi-common/src/main/java/org/apache/hudi/avro/HoodieAvroUtils.java","repoName":"hudi","snippetEndLine":0,"snippetStartLine":0,"startLine":204,"status":"N"}],"commitId":"6a0aa9a645d11ed7b50e18aa0563dafcd9d145f7","commitMessage":"@@@[HUDI-803] Replaced used of NullNode with JsonProperties.NULL_VALUE in HoodieAvroUtils (#1538)\n\n- added more test cases in TestHoodieAvroUtils.class\n\nCo-authored-by: Vinoth Chandar <vinoth@apache.org>","date":"2020-05-21 00:04:43","modifiedFileCount":"2","status":"M","submitter":"Pratyaksh Sharma"},{"authorTime":"2021-02-23 13:37:44","codes":[{"authorDate":"2020-05-21 00:04:43","commitOrder":6,"curCode":"  public static Schema addMetadataFields(Schema schema) {\n    List<Schema.Field> parentFields = new ArrayList<>();\n\n    Schema.Field commitTimeField =\n        new Schema.Field(HoodieRecord.COMMIT_TIME_METADATA_FIELD, METADATA_FIELD_SCHEMA, \"\", JsonProperties.NULL_VALUE);\n    Schema.Field commitSeqnoField =\n        new Schema.Field(HoodieRecord.COMMIT_SEQNO_METADATA_FIELD, METADATA_FIELD_SCHEMA, \"\", JsonProperties.NULL_VALUE);\n    Schema.Field recordKeyField =\n        new Schema.Field(HoodieRecord.RECORD_KEY_METADATA_FIELD, METADATA_FIELD_SCHEMA, \"\", JsonProperties.NULL_VALUE);\n    Schema.Field partitionPathField =\n        new Schema.Field(HoodieRecord.PARTITION_PATH_METADATA_FIELD, METADATA_FIELD_SCHEMA, \"\", JsonProperties.NULL_VALUE);\n    Schema.Field fileNameField =\n        new Schema.Field(HoodieRecord.FILENAME_METADATA_FIELD, METADATA_FIELD_SCHEMA, \"\", JsonProperties.NULL_VALUE);\n\n    parentFields.add(commitTimeField);\n    parentFields.add(commitSeqnoField);\n    parentFields.add(recordKeyField);\n    parentFields.add(partitionPathField);\n    parentFields.add(fileNameField);\n    for (Schema.Field field : schema.getFields()) {\n      if (!isMetadataField(field.name())) {\n        Schema.Field newField = new Schema.Field(field.name(), field.schema(), field.doc(), field.defaultVal());\n        for (Map.Entry<String, Object> prop : field.getObjectProps().entrySet()) {\n          newField.addProp(prop.getKey(), prop.getValue());\n        }\n        parentFields.add(newField);\n      }\n    }\n\n    Schema mergedSchema = Schema.createRecord(schema.getName(), schema.getDoc(), schema.getNamespace(), false);\n    mergedSchema.setFields(parentFields);\n    return mergedSchema;\n  }\n","date":"2020-05-21 00:04:43","endLine":172,"groupId":"1659","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"addMetadataFields","params":"(Schemaschema)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-hudi-10-0.7/blobInfo/CC_OUT/blobs/38/b9d32097196046ecb3d7c28b8bc9153d1f6387.src","preCode":"  public static Schema addMetadataFields(Schema schema) {\n    List<Schema.Field> parentFields = new ArrayList<>();\n\n    Schema.Field commitTimeField =\n        new Schema.Field(HoodieRecord.COMMIT_TIME_METADATA_FIELD, METADATA_FIELD_SCHEMA, \"\", JsonProperties.NULL_VALUE);\n    Schema.Field commitSeqnoField =\n        new Schema.Field(HoodieRecord.COMMIT_SEQNO_METADATA_FIELD, METADATA_FIELD_SCHEMA, \"\", JsonProperties.NULL_VALUE);\n    Schema.Field recordKeyField =\n        new Schema.Field(HoodieRecord.RECORD_KEY_METADATA_FIELD, METADATA_FIELD_SCHEMA, \"\", JsonProperties.NULL_VALUE);\n    Schema.Field partitionPathField =\n        new Schema.Field(HoodieRecord.PARTITION_PATH_METADATA_FIELD, METADATA_FIELD_SCHEMA, \"\", JsonProperties.NULL_VALUE);\n    Schema.Field fileNameField =\n        new Schema.Field(HoodieRecord.FILENAME_METADATA_FIELD, METADATA_FIELD_SCHEMA, \"\", JsonProperties.NULL_VALUE);\n\n    parentFields.add(commitTimeField);\n    parentFields.add(commitSeqnoField);\n    parentFields.add(recordKeyField);\n    parentFields.add(partitionPathField);\n    parentFields.add(fileNameField);\n    for (Schema.Field field : schema.getFields()) {\n      if (!isMetadataField(field.name())) {\n        Schema.Field newField = new Schema.Field(field.name(), field.schema(), field.doc(), field.defaultVal());\n        for (Map.Entry<String, Object> prop : field.getObjectProps().entrySet()) {\n          newField.addProp(prop.getKey(), prop.getValue());\n        }\n        parentFields.add(newField);\n      }\n    }\n\n    Schema mergedSchema = Schema.createRecord(schema.getName(), schema.getDoc(), schema.getNamespace(), false);\n    mergedSchema.setFields(parentFields);\n    return mergedSchema;\n  }\n","realPath":"hudi-common/src/main/java/org/apache/hudi/avro/HoodieAvroUtils.java","repoName":"hudi","snippetEndLine":0,"snippetStartLine":0,"startLine":140,"status":"N"},{"authorDate":"2021-02-23 13:37:44","commitOrder":6,"curCode":"  public static Schema getRecordKeyPartitionPathSchema() {\n    List<Schema.Field> toBeAddedFields = new ArrayList<>();\n    Schema recordSchema = Schema.createRecord(\"HoodieRecordKey\", \"\", \"\", false);\n\n    Schema.Field recordKeyField =\n        new Schema.Field(HoodieRecord.RECORD_KEY_METADATA_FIELD, METADATA_FIELD_SCHEMA, \"\", JsonProperties.NULL_VALUE);\n    Schema.Field partitionPathField =\n        new Schema.Field(HoodieRecord.PARTITION_PATH_METADATA_FIELD, METADATA_FIELD_SCHEMA, \"\", JsonProperties.NULL_VALUE);\n\n    toBeAddedFields.add(recordKeyField);\n    toBeAddedFields.add(partitionPathField);\n    recordSchema.setFields(toBeAddedFields);\n    return recordSchema;\n  }\n","date":"2021-02-23 13:37:44","endLine":245,"groupId":"3925","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"getRecordKeyPartitionPathSchema","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-hudi-10-0.7/blobInfo/CC_OUT/blobs/0f/193c527d3e24a228dac37fad071edce37a3bda.src","preCode":"  public static Schema getRecordKeyPartitionPathSchema() {\n    List<Schema.Field> toBeAddedFields = new ArrayList<>();\n    Schema recordSchema = Schema.createRecord(\"HoodieRecordKey\", \"\", \"\", false);\n\n    Schema.Field recordKeyField =\n        new Schema.Field(HoodieRecord.RECORD_KEY_METADATA_FIELD, METADATA_FIELD_SCHEMA, \"\", NullNode.getInstance());\n    Schema.Field partitionPathField =\n        new Schema.Field(HoodieRecord.PARTITION_PATH_METADATA_FIELD, METADATA_FIELD_SCHEMA, \"\", NullNode.getInstance());\n\n    toBeAddedFields.add(recordKeyField);\n    toBeAddedFields.add(partitionPathField);\n    recordSchema.setFields(toBeAddedFields);\n    return recordSchema;\n  }\n","realPath":"hudi-common/src/main/java/org/apache/hudi/avro/HoodieAvroUtils.java","repoName":"hudi","snippetEndLine":0,"snippetStartLine":0,"startLine":232,"status":"M"}],"commitId":"3ceb1b4c83d4e004c9b397bd05600c2aaf86196d","commitMessage":"@@@[HUDI-1624] The state based index should bootstrap from existing base files (#2581)\n\n","date":"2021-02-23 13:37:44","modifiedFileCount":"7","status":"M","submitter":"Danny Chan"},{"authorTime":"2021-02-23 13:37:44","codes":[{"authorDate":"2021-08-10 20:23:23","commitOrder":7,"curCode":"  public static Schema addMetadataFields(Schema schema, boolean withOperationField) {\n    List<Schema.Field> parentFields = new ArrayList<>();\n\n    Schema.Field commitTimeField =\n        new Schema.Field(HoodieRecord.COMMIT_TIME_METADATA_FIELD, METADATA_FIELD_SCHEMA, \"\", JsonProperties.NULL_VALUE);\n    Schema.Field commitSeqnoField =\n        new Schema.Field(HoodieRecord.COMMIT_SEQNO_METADATA_FIELD, METADATA_FIELD_SCHEMA, \"\", JsonProperties.NULL_VALUE);\n    Schema.Field recordKeyField =\n        new Schema.Field(HoodieRecord.RECORD_KEY_METADATA_FIELD, METADATA_FIELD_SCHEMA, \"\", JsonProperties.NULL_VALUE);\n    Schema.Field partitionPathField =\n        new Schema.Field(HoodieRecord.PARTITION_PATH_METADATA_FIELD, METADATA_FIELD_SCHEMA, \"\", JsonProperties.NULL_VALUE);\n    Schema.Field fileNameField =\n        new Schema.Field(HoodieRecord.FILENAME_METADATA_FIELD, METADATA_FIELD_SCHEMA, \"\", JsonProperties.NULL_VALUE);\n\n    parentFields.add(commitTimeField);\n    parentFields.add(commitSeqnoField);\n    parentFields.add(recordKeyField);\n    parentFields.add(partitionPathField);\n    parentFields.add(fileNameField);\n\n    if (withOperationField) {\n      final Schema.Field operationField =\n          new Schema.Field(HoodieRecord.OPERATION_METADATA_FIELD, METADATA_FIELD_SCHEMA, \"\", JsonProperties.NULL_VALUE);\n      parentFields.add(operationField);\n    }\n\n    for (Schema.Field field : schema.getFields()) {\n      if (!isMetadataField(field.name())) {\n        Schema.Field newField = new Schema.Field(field.name(), field.schema(), field.doc(), field.defaultVal());\n        for (Map.Entry<String, Object> prop : field.getObjectProps().entrySet()) {\n          newField.addProp(prop.getKey(), prop.getValue());\n        }\n        parentFields.add(newField);\n      }\n    }\n\n    Schema mergedSchema = Schema.createRecord(schema.getName(), schema.getDoc(), schema.getNamespace(), false);\n    mergedSchema.setFields(parentFields);\n    return mergedSchema;\n  }\n","date":"2021-08-10 20:23:23","endLine":223,"groupId":"10967","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"addMetadataFields","params":"(Schemaschema@booleanwithOperationField)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-hudi-10-0.7/blobInfo/CC_OUT/blobs/23/9eed5635965de8541c403eb4b4b91b3e28a99d.src","preCode":"  public static Schema addMetadataFields(Schema schema) {\n    List<Schema.Field> parentFields = new ArrayList<>();\n\n    Schema.Field commitTimeField =\n        new Schema.Field(HoodieRecord.COMMIT_TIME_METADATA_FIELD, METADATA_FIELD_SCHEMA, \"\", JsonProperties.NULL_VALUE);\n    Schema.Field commitSeqnoField =\n        new Schema.Field(HoodieRecord.COMMIT_SEQNO_METADATA_FIELD, METADATA_FIELD_SCHEMA, \"\", JsonProperties.NULL_VALUE);\n    Schema.Field recordKeyField =\n        new Schema.Field(HoodieRecord.RECORD_KEY_METADATA_FIELD, METADATA_FIELD_SCHEMA, \"\", JsonProperties.NULL_VALUE);\n    Schema.Field partitionPathField =\n        new Schema.Field(HoodieRecord.PARTITION_PATH_METADATA_FIELD, METADATA_FIELD_SCHEMA, \"\", JsonProperties.NULL_VALUE);\n    Schema.Field fileNameField =\n        new Schema.Field(HoodieRecord.FILENAME_METADATA_FIELD, METADATA_FIELD_SCHEMA, \"\", JsonProperties.NULL_VALUE);\n\n    parentFields.add(commitTimeField);\n    parentFields.add(commitSeqnoField);\n    parentFields.add(recordKeyField);\n    parentFields.add(partitionPathField);\n    parentFields.add(fileNameField);\n    for (Schema.Field field : schema.getFields()) {\n      if (!isMetadataField(field.name())) {\n        Schema.Field newField = new Schema.Field(field.name(), field.schema(), field.doc(), field.defaultVal());\n        for (Map.Entry<String, Object> prop : field.getObjectProps().entrySet()) {\n          newField.addProp(prop.getKey(), prop.getValue());\n        }\n        parentFields.add(newField);\n      }\n    }\n\n    Schema mergedSchema = Schema.createRecord(schema.getName(), schema.getDoc(), schema.getNamespace(), false);\n    mergedSchema.setFields(parentFields);\n    return mergedSchema;\n  }\n","realPath":"hudi-common/src/main/java/org/apache/hudi/avro/HoodieAvroUtils.java","repoName":"hudi","snippetEndLine":0,"snippetStartLine":0,"startLine":184,"status":"M"},{"authorDate":"2021-02-23 13:37:44","commitOrder":7,"curCode":"  public static Schema getRecordKeyPartitionPathSchema() {\n    List<Schema.Field> toBeAddedFields = new ArrayList<>();\n    Schema recordSchema = Schema.createRecord(\"HoodieRecordKey\", \"\", \"\", false);\n\n    Schema.Field recordKeyField =\n        new Schema.Field(HoodieRecord.RECORD_KEY_METADATA_FIELD, METADATA_FIELD_SCHEMA, \"\", JsonProperties.NULL_VALUE);\n    Schema.Field partitionPathField =\n        new Schema.Field(HoodieRecord.PARTITION_PATH_METADATA_FIELD, METADATA_FIELD_SCHEMA, \"\", JsonProperties.NULL_VALUE);\n\n    toBeAddedFields.add(recordKeyField);\n    toBeAddedFields.add(partitionPathField);\n    recordSchema.setFields(toBeAddedFields);\n    return recordSchema;\n  }\n","date":"2021-02-23 13:37:44","endLine":245,"groupId":"10967","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"getRecordKeyPartitionPathSchema","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-hudi-10-0.7/blobInfo/CC_OUT/blobs/0f/193c527d3e24a228dac37fad071edce37a3bda.src","preCode":"  public static Schema getRecordKeyPartitionPathSchema() {\n    List<Schema.Field> toBeAddedFields = new ArrayList<>();\n    Schema recordSchema = Schema.createRecord(\"HoodieRecordKey\", \"\", \"\", false);\n\n    Schema.Field recordKeyField =\n        new Schema.Field(HoodieRecord.RECORD_KEY_METADATA_FIELD, METADATA_FIELD_SCHEMA, \"\", JsonProperties.NULL_VALUE);\n    Schema.Field partitionPathField =\n        new Schema.Field(HoodieRecord.PARTITION_PATH_METADATA_FIELD, METADATA_FIELD_SCHEMA, \"\", JsonProperties.NULL_VALUE);\n\n    toBeAddedFields.add(recordKeyField);\n    toBeAddedFields.add(partitionPathField);\n    recordSchema.setFields(toBeAddedFields);\n    return recordSchema;\n  }\n","realPath":"hudi-common/src/main/java/org/apache/hudi/avro/HoodieAvroUtils.java","repoName":"hudi","snippetEndLine":0,"snippetStartLine":0,"startLine":232,"status":"N"}],"commitId":"21db6d7a84d4a83ec98c110e92ff9c92d05dd530","commitMessage":"@@@[HUDI-1771] Propagate CDC format for hoodie (#3285)\n\n","date":"2021-08-10 20:23:23","modifiedFileCount":"47","status":"M","submitter":"swuferhong"}]
