[{"authorTime":"2020-11-18 17:57:11","codes":[{"authorDate":"2020-10-02 05:25:29","commitOrder":2,"curCode":"  public static SparkHoodieIndex createIndex(HoodieWriteConfig config) {\n    \r\n    if (!StringUtils.isNullOrEmpty(config.getIndexClass())) {\n      Object instance = ReflectionUtils.loadClass(config.getIndexClass(), config);\n      if (!(instance instanceof HoodieIndex)) {\n        throw new HoodieIndexException(config.getIndexClass() + \" is not a subclass of HoodieIndex\");\n      }\n      return (SparkHoodieIndex) instance;\n    }\n    switch (config.getIndexType()) {\n      case HBASE:\n        return new SparkHoodieHBaseIndex<>(config);\n      case INMEMORY:\n        return new SparkInMemoryHashIndex(config);\n      case BLOOM:\n        return new SparkHoodieBloomIndex<>(config);\n      case GLOBAL_BLOOM:\n        return new SparkHoodieGlobalBloomIndex<>(config);\n      case SIMPLE:\n        return new SparkHoodieSimpleIndex(config);\n      case GLOBAL_SIMPLE:\n        return new SparkHoodieGlobalSimpleIndex(config);\n      default:\n        throw new HoodieIndexException(\"Index type unspecified, set \" + config.getIndexType());\n    }\n  }\n","date":"2020-10-02 05:25:29","endLine":72,"groupId":"2424","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"createIndex","params":"(HoodieWriteConfigconfig)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-hudi-10-0.7/blobInfo/CC_OUT/blobs/dd/73bf2e76568e1d3a9e4d3c58d65ea4f38b85bd.src","preCode":"  public static SparkHoodieIndex createIndex(HoodieWriteConfig config) {\n    \r\n    if (!StringUtils.isNullOrEmpty(config.getIndexClass())) {\n      Object instance = ReflectionUtils.loadClass(config.getIndexClass(), config);\n      if (!(instance instanceof HoodieIndex)) {\n        throw new HoodieIndexException(config.getIndexClass() + \" is not a subclass of HoodieIndex\");\n      }\n      return (SparkHoodieIndex) instance;\n    }\n    switch (config.getIndexType()) {\n      case HBASE:\n        return new SparkHoodieHBaseIndex<>(config);\n      case INMEMORY:\n        return new SparkInMemoryHashIndex(config);\n      case BLOOM:\n        return new SparkHoodieBloomIndex<>(config);\n      case GLOBAL_BLOOM:\n        return new SparkHoodieGlobalBloomIndex<>(config);\n      case SIMPLE:\n        return new SparkHoodieSimpleIndex(config);\n      case GLOBAL_SIMPLE:\n        return new SparkHoodieGlobalSimpleIndex(config);\n      default:\n        throw new HoodieIndexException(\"Index type unspecified, set \" + config.getIndexType());\n    }\n  }\n","realPath":"hudi-client/hudi-spark-client/src/main/java/org/apache/hudi/index/SparkHoodieIndex.java","repoName":"hudi","snippetEndLine":0,"snippetStartLine":0,"startLine":47,"status":"NB"},{"authorDate":"2020-11-18 17:57:11","commitOrder":2,"curCode":"  public static FlinkHoodieIndex createIndex(HoodieFlinkEngineContext context, HoodieWriteConfig config) {\n    \r\n    if (!StringUtils.isNullOrEmpty(config.getIndexClass())) {\n      Object instance = ReflectionUtils.loadClass(config.getIndexClass(), config);\n      if (!(instance instanceof HoodieIndex)) {\n        throw new HoodieIndexException(config.getIndexClass() + \" is not a subclass of HoodieIndex\");\n      }\n      return (FlinkHoodieIndex) instance;\n    }\n\n    \r\n    switch (config.getIndexType()) {\n      case INMEMORY:\n        return new FlinkInMemoryStateIndex<>(context, config);\n      default:\n        throw new HoodieIndexException(\"Unsupported index type \" + config.getIndexType());\n    }\n  }\n","date":"2020-11-18 17:57:11","endLine":64,"groupId":"2196","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"createIndex","params":"(HoodieFlinkEngineContextcontext@HoodieWriteConfigconfig)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-hudi-10-0.7/blobInfo/CC_OUT/blobs/83/b76fc8930f739247d56d3cdebae5f0f44f4a90.src","preCode":"  public static FlinkHoodieIndex createIndex(HoodieFlinkEngineContext context, HoodieWriteConfig config) {\n    \r\n    if (!StringUtils.isNullOrEmpty(config.getIndexClass())) {\n      Object instance = ReflectionUtils.loadClass(config.getIndexClass(), config);\n      if (!(instance instanceof HoodieIndex)) {\n        throw new HoodieIndexException(config.getIndexClass() + \" is not a subclass of HoodieIndex\");\n      }\n      return (FlinkHoodieIndex) instance;\n    }\n\n    \r\n    switch (config.getIndexType()) {\n      case INMEMORY:\n        return new FlinkInMemoryStateIndex<>(context, config);\n      default:\n        throw new HoodieIndexException(\"Unsupported index type \" + config.getIndexType());\n    }\n  }\n","realPath":"hudi-client/hudi-flink-client/src/main/java/org/apache/hudi/index/FlinkHoodieIndex.java","repoName":"hudi","snippetEndLine":0,"snippetStartLine":0,"startLine":47,"status":"B"}],"commitId":"4d05680038752077ceaebef261b66a5afc761e10","commitMessage":"@@@[HUDI-1327] Introduce base implemetation of hudi-flink-client (#2176)\n\n","date":"2020-11-18 17:57:11","modifiedFileCount":"6","status":"M","submitter":"wangxianghu"},{"authorTime":"2021-01-22 10:36:28","codes":[{"authorDate":"2020-10-02 05:25:29","commitOrder":3,"curCode":"  public static SparkHoodieIndex createIndex(HoodieWriteConfig config) {\n    \r\n    if (!StringUtils.isNullOrEmpty(config.getIndexClass())) {\n      Object instance = ReflectionUtils.loadClass(config.getIndexClass(), config);\n      if (!(instance instanceof HoodieIndex)) {\n        throw new HoodieIndexException(config.getIndexClass() + \" is not a subclass of HoodieIndex\");\n      }\n      return (SparkHoodieIndex) instance;\n    }\n    switch (config.getIndexType()) {\n      case HBASE:\n        return new SparkHoodieHBaseIndex<>(config);\n      case INMEMORY:\n        return new SparkInMemoryHashIndex(config);\n      case BLOOM:\n        return new SparkHoodieBloomIndex<>(config);\n      case GLOBAL_BLOOM:\n        return new SparkHoodieGlobalBloomIndex<>(config);\n      case SIMPLE:\n        return new SparkHoodieSimpleIndex(config);\n      case GLOBAL_SIMPLE:\n        return new SparkHoodieGlobalSimpleIndex(config);\n      default:\n        throw new HoodieIndexException(\"Index type unspecified, set \" + config.getIndexType());\n    }\n  }\n","date":"2020-10-02 05:25:29","endLine":72,"groupId":"2424","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"createIndex","params":"(HoodieWriteConfigconfig)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-hudi-10-0.7/blobInfo/CC_OUT/blobs/dd/73bf2e76568e1d3a9e4d3c58d65ea4f38b85bd.src","preCode":"  public static SparkHoodieIndex createIndex(HoodieWriteConfig config) {\n    \r\n    if (!StringUtils.isNullOrEmpty(config.getIndexClass())) {\n      Object instance = ReflectionUtils.loadClass(config.getIndexClass(), config);\n      if (!(instance instanceof HoodieIndex)) {\n        throw new HoodieIndexException(config.getIndexClass() + \" is not a subclass of HoodieIndex\");\n      }\n      return (SparkHoodieIndex) instance;\n    }\n    switch (config.getIndexType()) {\n      case HBASE:\n        return new SparkHoodieHBaseIndex<>(config);\n      case INMEMORY:\n        return new SparkInMemoryHashIndex(config);\n      case BLOOM:\n        return new SparkHoodieBloomIndex<>(config);\n      case GLOBAL_BLOOM:\n        return new SparkHoodieGlobalBloomIndex<>(config);\n      case SIMPLE:\n        return new SparkHoodieSimpleIndex(config);\n      case GLOBAL_SIMPLE:\n        return new SparkHoodieGlobalSimpleIndex(config);\n      default:\n        throw new HoodieIndexException(\"Index type unspecified, set \" + config.getIndexType());\n    }\n  }\n","realPath":"hudi-client/hudi-spark-client/src/main/java/org/apache/hudi/index/SparkHoodieIndex.java","repoName":"hudi","snippetEndLine":0,"snippetStartLine":0,"startLine":47,"status":"N"},{"authorDate":"2021-01-22 10:36:28","commitOrder":3,"curCode":"  public static FlinkHoodieIndex createIndex(HoodieFlinkEngineContext context, HoodieWriteConfig config) {\n    \r\n    if (!StringUtils.isNullOrEmpty(config.getIndexClass())) {\n      Object instance = ReflectionUtils.loadClass(config.getIndexClass(), config);\n      if (!(instance instanceof HoodieIndex)) {\n        throw new HoodieIndexException(config.getIndexClass() + \" is not a subclass of HoodieIndex\");\n      }\n      return (FlinkHoodieIndex) instance;\n    }\n\n    \r\n    switch (config.getIndexType()) {\n      case INMEMORY:\n        return new FlinkInMemoryStateIndex<>(context, config);\n      case BLOOM:\n        return new FlinkHoodieBloomIndex(config);\n      default:\n        throw new HoodieIndexException(\"Unsupported index type \" + config.getIndexType());\n    }\n  }\n","date":"2021-01-22 10:36:28","endLine":67,"groupId":"2196","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"createIndex","params":"(HoodieFlinkEngineContextcontext@HoodieWriteConfigconfig)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-hudi-10-0.7/blobInfo/CC_OUT/blobs/cf/b21d9da43b81ad7cd1990f11f3648beaef8c2b.src","preCode":"  public static FlinkHoodieIndex createIndex(HoodieFlinkEngineContext context, HoodieWriteConfig config) {\n    \r\n    if (!StringUtils.isNullOrEmpty(config.getIndexClass())) {\n      Object instance = ReflectionUtils.loadClass(config.getIndexClass(), config);\n      if (!(instance instanceof HoodieIndex)) {\n        throw new HoodieIndexException(config.getIndexClass() + \" is not a subclass of HoodieIndex\");\n      }\n      return (FlinkHoodieIndex) instance;\n    }\n\n    \r\n    switch (config.getIndexType()) {\n      case INMEMORY:\n        return new FlinkInMemoryStateIndex<>(context, config);\n      default:\n        throw new HoodieIndexException(\"Unsupported index type \" + config.getIndexType());\n    }\n  }\n","realPath":"hudi-client/hudi-flink-client/src/main/java/org/apache/hudi/index/FlinkHoodieIndex.java","repoName":"hudi","snippetEndLine":0,"snippetStartLine":0,"startLine":48,"status":"M"}],"commitId":"641abe8ab7c1c4d9915c6582389476fa5f7ae067","commitMessage":"@@@[HUDI-1332] Introduce FlinkHoodieBloomIndex to hudi-flink-client (#2375)\n\n* [HUDI] Add bloom index for hudi-flink-client\n\nCo-authored-by: yangxiang <yangxiang@oppo.com>","date":"2021-01-22 10:36:28","modifiedFileCount":"2","status":"M","submitter":"Xiang Yang"},{"authorTime":"2021-02-03 08:59:49","codes":[{"authorDate":"2020-10-02 05:25:29","commitOrder":4,"curCode":"  public static SparkHoodieIndex createIndex(HoodieWriteConfig config) {\n    \r\n    if (!StringUtils.isNullOrEmpty(config.getIndexClass())) {\n      Object instance = ReflectionUtils.loadClass(config.getIndexClass(), config);\n      if (!(instance instanceof HoodieIndex)) {\n        throw new HoodieIndexException(config.getIndexClass() + \" is not a subclass of HoodieIndex\");\n      }\n      return (SparkHoodieIndex) instance;\n    }\n    switch (config.getIndexType()) {\n      case HBASE:\n        return new SparkHoodieHBaseIndex<>(config);\n      case INMEMORY:\n        return new SparkInMemoryHashIndex(config);\n      case BLOOM:\n        return new SparkHoodieBloomIndex<>(config);\n      case GLOBAL_BLOOM:\n        return new SparkHoodieGlobalBloomIndex<>(config);\n      case SIMPLE:\n        return new SparkHoodieSimpleIndex(config);\n      case GLOBAL_SIMPLE:\n        return new SparkHoodieGlobalSimpleIndex(config);\n      default:\n        throw new HoodieIndexException(\"Index type unspecified, set \" + config.getIndexType());\n    }\n  }\n","date":"2020-10-02 05:25:29","endLine":72,"groupId":"2424","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"createIndex","params":"(HoodieWriteConfigconfig)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-hudi-10-0.7/blobInfo/CC_OUT/blobs/dd/73bf2e76568e1d3a9e4d3c58d65ea4f38b85bd.src","preCode":"  public static SparkHoodieIndex createIndex(HoodieWriteConfig config) {\n    \r\n    if (!StringUtils.isNullOrEmpty(config.getIndexClass())) {\n      Object instance = ReflectionUtils.loadClass(config.getIndexClass(), config);\n      if (!(instance instanceof HoodieIndex)) {\n        throw new HoodieIndexException(config.getIndexClass() + \" is not a subclass of HoodieIndex\");\n      }\n      return (SparkHoodieIndex) instance;\n    }\n    switch (config.getIndexType()) {\n      case HBASE:\n        return new SparkHoodieHBaseIndex<>(config);\n      case INMEMORY:\n        return new SparkInMemoryHashIndex(config);\n      case BLOOM:\n        return new SparkHoodieBloomIndex<>(config);\n      case GLOBAL_BLOOM:\n        return new SparkHoodieGlobalBloomIndex<>(config);\n      case SIMPLE:\n        return new SparkHoodieSimpleIndex(config);\n      case GLOBAL_SIMPLE:\n        return new SparkHoodieGlobalSimpleIndex(config);\n      default:\n        throw new HoodieIndexException(\"Index type unspecified, set \" + config.getIndexType());\n    }\n  }\n","realPath":"hudi-client/hudi-spark-client/src/main/java/org/apache/hudi/index/SparkHoodieIndex.java","repoName":"hudi","snippetEndLine":0,"snippetStartLine":0,"startLine":47,"status":"N"},{"authorDate":"2021-02-03 08:59:49","commitOrder":4,"curCode":"  public static FlinkHoodieIndex createIndex(HoodieFlinkEngineContext context, HoodieWriteConfig config) {\n    \r\n    if (!StringUtils.isNullOrEmpty(config.getIndexClass())) {\n      Object instance = ReflectionUtils.loadClass(config.getIndexClass(), config);\n      if (!(instance instanceof HoodieIndex)) {\n        throw new HoodieIndexException(config.getIndexClass() + \" is not a subclass of HoodieIndex\");\n      }\n      return (FlinkHoodieIndex) instance;\n    }\n\n    \r\n    switch (config.getIndexType()) {\n      case INMEMORY:\n        return new FlinkInMemoryStateIndex<>(context, config);\n      case BLOOM:\n        return new FlinkHoodieBloomIndex(config);\n      case SIMPLE:\n        return new FlinkHoodieSimpleIndex<>(config);\n      default:\n        throw new HoodieIndexException(\"Unsupported index type \" + config.getIndexType());\n    }\n  }\n","date":"2021-02-03 08:59:49","endLine":70,"groupId":"2196","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"createIndex","params":"(HoodieFlinkEngineContextcontext@HoodieWriteConfigconfig)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-hudi-10-0.7/blobInfo/CC_OUT/blobs/ec/d6490bf08248fe739033d8497cf0dd7b4e1695.src","preCode":"  public static FlinkHoodieIndex createIndex(HoodieFlinkEngineContext context, HoodieWriteConfig config) {\n    \r\n    if (!StringUtils.isNullOrEmpty(config.getIndexClass())) {\n      Object instance = ReflectionUtils.loadClass(config.getIndexClass(), config);\n      if (!(instance instanceof HoodieIndex)) {\n        throw new HoodieIndexException(config.getIndexClass() + \" is not a subclass of HoodieIndex\");\n      }\n      return (FlinkHoodieIndex) instance;\n    }\n\n    \r\n    switch (config.getIndexType()) {\n      case INMEMORY:\n        return new FlinkInMemoryStateIndex<>(context, config);\n      case BLOOM:\n        return new FlinkHoodieBloomIndex(config);\n      default:\n        throw new HoodieIndexException(\"Unsupported index type \" + config.getIndexType());\n    }\n  }\n","realPath":"hudi-client/hudi-flink-client/src/main/java/org/apache/hudi/index/FlinkHoodieIndex.java","repoName":"hudi","snippetEndLine":0,"snippetStartLine":0,"startLine":49,"status":"M"}],"commitId":"d74d8e208439df8cb2eb6c24019be55c002d00a5","commitMessage":"@@@[HUDI-1335] Introduce FlinkHoodieSimpleIndex to hudi-flink-client (#2271)\n\n","date":"2021-02-03 08:59:49","modifiedFileCount":"1","status":"M","submitter":"wangxianghu"},{"authorTime":"2021-03-28 20:28:40","codes":[{"authorDate":"2020-10-02 05:25:29","commitOrder":5,"curCode":"  public static SparkHoodieIndex createIndex(HoodieWriteConfig config) {\n    \r\n    if (!StringUtils.isNullOrEmpty(config.getIndexClass())) {\n      Object instance = ReflectionUtils.loadClass(config.getIndexClass(), config);\n      if (!(instance instanceof HoodieIndex)) {\n        throw new HoodieIndexException(config.getIndexClass() + \" is not a subclass of HoodieIndex\");\n      }\n      return (SparkHoodieIndex) instance;\n    }\n    switch (config.getIndexType()) {\n      case HBASE:\n        return new SparkHoodieHBaseIndex<>(config);\n      case INMEMORY:\n        return new SparkInMemoryHashIndex(config);\n      case BLOOM:\n        return new SparkHoodieBloomIndex<>(config);\n      case GLOBAL_BLOOM:\n        return new SparkHoodieGlobalBloomIndex<>(config);\n      case SIMPLE:\n        return new SparkHoodieSimpleIndex(config);\n      case GLOBAL_SIMPLE:\n        return new SparkHoodieGlobalSimpleIndex(config);\n      default:\n        throw new HoodieIndexException(\"Index type unspecified, set \" + config.getIndexType());\n    }\n  }\n","date":"2020-10-02 05:25:29","endLine":72,"groupId":"10511","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"createIndex","params":"(HoodieWriteConfigconfig)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-hudi-10-0.7/blobInfo/CC_OUT/blobs/dd/73bf2e76568e1d3a9e4d3c58d65ea4f38b85bd.src","preCode":"  public static SparkHoodieIndex createIndex(HoodieWriteConfig config) {\n    \r\n    if (!StringUtils.isNullOrEmpty(config.getIndexClass())) {\n      Object instance = ReflectionUtils.loadClass(config.getIndexClass(), config);\n      if (!(instance instanceof HoodieIndex)) {\n        throw new HoodieIndexException(config.getIndexClass() + \" is not a subclass of HoodieIndex\");\n      }\n      return (SparkHoodieIndex) instance;\n    }\n    switch (config.getIndexType()) {\n      case HBASE:\n        return new SparkHoodieHBaseIndex<>(config);\n      case INMEMORY:\n        return new SparkInMemoryHashIndex(config);\n      case BLOOM:\n        return new SparkHoodieBloomIndex<>(config);\n      case GLOBAL_BLOOM:\n        return new SparkHoodieGlobalBloomIndex<>(config);\n      case SIMPLE:\n        return new SparkHoodieSimpleIndex(config);\n      case GLOBAL_SIMPLE:\n        return new SparkHoodieGlobalSimpleIndex(config);\n      default:\n        throw new HoodieIndexException(\"Index type unspecified, set \" + config.getIndexType());\n    }\n  }\n","realPath":"hudi-client/hudi-spark-client/src/main/java/org/apache/hudi/index/SparkHoodieIndex.java","repoName":"hudi","snippetEndLine":0,"snippetStartLine":0,"startLine":47,"status":"N"},{"authorDate":"2021-03-28 20:28:40","commitOrder":5,"curCode":"  public static HoodieIndex createIndex(HoodieFlinkEngineContext context, HoodieWriteConfig config) {\n    \r\n    if (!StringUtils.isNullOrEmpty(config.getIndexClass())) {\n      Object instance = ReflectionUtils.loadClass(config.getIndexClass(), config);\n      if (!(instance instanceof HoodieIndex)) {\n        throw new HoodieIndexException(config.getIndexClass() + \" is not a subclass of HoodieIndex\");\n      }\n      return (FlinkHoodieIndex) instance;\n    }\n\n    \r\n    switch (config.getIndexType()) {\n      case INMEMORY:\n        return new FlinkInMemoryStateIndex<>(context, config);\n      case BLOOM:\n        return new FlinkHoodieBloomIndex(config);\n      case SIMPLE:\n        return new FlinkHoodieSimpleIndex<>(config);\n      default:\n        throw new HoodieIndexException(\"Unsupported index type \" + config.getIndexType());\n    }\n  }\n","date":"2021-03-28 20:28:40","endLine":70,"groupId":"10511","id":8,"instanceNumber":2,"isCurCommit":1,"methodName":"createIndex","params":"(HoodieFlinkEngineContextcontext@HoodieWriteConfigconfig)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-hudi-10-0.7/blobInfo/CC_OUT/blobs/27/2da8c6c881611f3fc43ef2fe4df7c59db887f4.src","preCode":"  public static FlinkHoodieIndex createIndex(HoodieFlinkEngineContext context, HoodieWriteConfig config) {\n    \r\n    if (!StringUtils.isNullOrEmpty(config.getIndexClass())) {\n      Object instance = ReflectionUtils.loadClass(config.getIndexClass(), config);\n      if (!(instance instanceof HoodieIndex)) {\n        throw new HoodieIndexException(config.getIndexClass() + \" is not a subclass of HoodieIndex\");\n      }\n      return (FlinkHoodieIndex) instance;\n    }\n\n    \r\n    switch (config.getIndexType()) {\n      case INMEMORY:\n        return new FlinkInMemoryStateIndex<>(context, config);\n      case BLOOM:\n        return new FlinkHoodieBloomIndex(config);\n      case SIMPLE:\n        return new FlinkHoodieSimpleIndex<>(config);\n      default:\n        throw new HoodieIndexException(\"Unsupported index type \" + config.getIndexType());\n    }\n  }\n","realPath":"hudi-client/hudi-flink-client/src/main/java/org/apache/hudi/index/FlinkHoodieIndex.java","repoName":"hudi","snippetEndLine":0,"snippetStartLine":0,"startLine":49,"status":"M"}],"commitId":"ecbd389a3f9215e219cb19b8641f2faea4fa3ad7","commitMessage":"@@@[HUDI-1478] Introduce HoodieBloomIndex to hudi-java-client (#2608)\n\n","date":"2021-03-28 20:28:40","modifiedFileCount":"3","status":"M","submitter":"Shen Hong"}]
