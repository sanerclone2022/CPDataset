[{"authorTime":"2019-11-02 03:40:09","codes":[{"authorDate":"2019-11-02 03:40:09","commitOrder":1,"curCode":"  private static List<Pair<String, Integer>> getHiveQueries(Entry<String, JsonNode> entry) {\n    List<Pair<String, Integer>> queries = new ArrayList<>();\n    Iterator<Entry<String, JsonNode>> queriesItr = entry.getValue().fields();\n    while (queriesItr.hasNext()) {\n      queries.add(Pair.of(queriesItr.next().getValue().textValue(), queriesItr.next().getValue().asInt()));\n    }\n    return queries;\n  }\n","date":"2020-07-31 12:21:15","endLine":164,"groupId":"2493","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"getHiveQueries","params":"(Entry<String@JsonNode>entry)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-hudi-10-0.7/blobInfo/CC_OUT/blobs/28/8986719b62d1f067d985e3f9d8c5ee82517ec0.src","preCode":"  private static List<Pair<String, Integer>> getHiveQueries(Entry<String, JsonNode> entry) {\n    List<Pair<String, Integer>> queries = new ArrayList<>();\n    Iterator<Entry<String, JsonNode>> queriesItr = entry.getValue().fields();\n    while (queriesItr.hasNext()) {\n      queries.add(Pair.of(queriesItr.next().getValue().textValue(), queriesItr.next().getValue().asInt()));\n    }\n    return queries;\n  }\n","realPath":"hudi-integ-test/src/main/java/org/apache/hudi/integ/testsuite/dag/DagUtils.java","repoName":"hudi","snippetEndLine":0,"snippetStartLine":0,"startLine":157,"status":"B"},{"authorDate":"2019-11-02 03:40:09","commitOrder":1,"curCode":"  private static List<String> getProperties(Entry<String, JsonNode> entry) {\n    List<String> properties = new ArrayList<>();\n    Iterator<Entry<String, JsonNode>> queriesItr = entry.getValue().fields();\n    while (queriesItr.hasNext()) {\n      properties.add(queriesItr.next().getValue().textValue());\n    }\n    return properties;\n  }\n","date":"2020-07-31 12:21:15","endLine":173,"groupId":"2493","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"getProperties","params":"(Entry<String@JsonNode>entry)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-hudi-10-0.7/blobInfo/CC_OUT/blobs/28/8986719b62d1f067d985e3f9d8c5ee82517ec0.src","preCode":"  private static List<String> getProperties(Entry<String, JsonNode> entry) {\n    List<String> properties = new ArrayList<>();\n    Iterator<Entry<String, JsonNode>> queriesItr = entry.getValue().fields();\n    while (queriesItr.hasNext()) {\n      properties.add(queriesItr.next().getValue().textValue());\n    }\n    return properties;\n  }\n","realPath":"hudi-integ-test/src/main/java/org/apache/hudi/integ/testsuite/dag/DagUtils.java","repoName":"hudi","snippetEndLine":0,"snippetStartLine":0,"startLine":166,"status":"B"}],"commitId":"2fc2b01d8647aafe2862db14fc169aa40d4ae3d5","commitMessage":"@@@[HUDI-394] Provide a basic implementation of test suite\n","date":"2020-07-31 12:21:15","modifiedFileCount":"19","status":"B","submitter":"Nishith Agarwal"},{"authorTime":"2021-03-10 05:29:38","codes":[{"authorDate":"2021-03-10 05:29:38","commitOrder":2,"curCode":"  private static List<Pair<String, Integer>> getHiveQueries(Entry<String, JsonNode> entry) {\n    List<Pair<String, Integer>> queries = new ArrayList<>();\n    try {\n      List<JsonNode> flattened = new ArrayList<>();\n      flattened.add(entry.getValue());\n      queries = (List<Pair<String, Integer>>)getHiveQueryMapper().readValue(flattened.toString(), List.class);\n    } catch (Exception e) {\n      e.printStackTrace();\n    }\n    return queries;\n  }\n","date":"2021-03-10 05:29:38","endLine":214,"groupId":"10187","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"getHiveQueries","params":"(Entry<String@JsonNode>entry)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-hudi-10-0.7/blobInfo/CC_OUT/blobs/70/0a5b82007e7906f32a5c3a5cc6e85e501df4e2.src","preCode":"  private static List<Pair<String, Integer>> getHiveQueries(Entry<String, JsonNode> entry) {\n    List<Pair<String, Integer>> queries = new ArrayList<>();\n    Iterator<Entry<String, JsonNode>> queriesItr = entry.getValue().fields();\n    while (queriesItr.hasNext()) {\n      queries.add(Pair.of(queriesItr.next().getValue().textValue(), queriesItr.next().getValue().asInt()));\n    }\n    return queries;\n  }\n","realPath":"hudi-integ-test/src/main/java/org/apache/hudi/integ/testsuite/dag/DagUtils.java","repoName":"hudi","snippetEndLine":0,"snippetStartLine":0,"startLine":204,"status":"M"},{"authorDate":"2021-03-10 05:29:38","commitOrder":2,"curCode":"  private static List<String> getProperties(Entry<String, JsonNode> entry) {\n    List<String> properties = new ArrayList<>();\n    try {\n      List<JsonNode> flattened = new ArrayList<>();\n      flattened.add(entry.getValue());\n      properties = (List<String>)getHivePropertyMapper().readValue(flattened.toString(), List.class);\n    } catch (Exception e) {\n      e.printStackTrace();\n    }\n    return properties;\n  }\n","date":"2021-03-10 05:29:38","endLine":226,"groupId":"10187","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"getProperties","params":"(Entry<String@JsonNode>entry)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-hudi-10-0.7/blobInfo/CC_OUT/blobs/70/0a5b82007e7906f32a5c3a5cc6e85e501df4e2.src","preCode":"  private static List<String> getProperties(Entry<String, JsonNode> entry) {\n    List<String> properties = new ArrayList<>();\n    Iterator<Entry<String, JsonNode>> queriesItr = entry.getValue().fields();\n    while (queriesItr.hasNext()) {\n      properties.add(queriesItr.next().getValue().textValue());\n    }\n    return properties;\n  }\n","realPath":"hudi-integ-test/src/main/java/org/apache/hudi/integ/testsuite/dag/DagUtils.java","repoName":"hudi","snippetEndLine":0,"snippetStartLine":0,"startLine":216,"status":"M"}],"commitId":"d8af24d8a2fdbead4592a36df1bd9dda333f1513","commitMessage":"@@@[HUDI-1635] Improvements to Hudi Test Suite (#2628)\n\n","date":"2021-03-10 05:29:38","modifiedFileCount":"11","status":"M","submitter":"Balajee Nagasubramaniam"}]
