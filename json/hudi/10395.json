[{"authorTime":"2021-08-11 22:55:43","codes":[{"authorDate":"2021-08-10 20:23:23","commitOrder":2,"curCode":"  void testReadBaseAndLogFilesWithDeletes() throws Exception {\n    Map<String, String> options = new HashMap<>();\n    options.put(FlinkOptions.CHANGELOG_ENABLED.key(), \"true\");\n    beforeEach(HoodieTableType.MERGE_ON_READ, options);\n\n    \r\n    conf.setBoolean(FlinkOptions.COMPACTION_ASYNC_ENABLED, true);\n    conf.setInteger(FlinkOptions.COMPACTION_DELTA_COMMITS, 1);\n    TestData.writeData(TestData.DATA_SET_INSERT, conf);\n\n    \r\n    conf.setBoolean(FlinkOptions.COMPACTION_ASYNC_ENABLED, false);\n    TestData.writeData(TestData.DATA_SET_UPDATE_DELETE, conf);\n\n    InputFormat<RowData, ?> inputFormat = this.tableSource.getInputFormat();\n    assertThat(inputFormat, instanceOf(MergeOnReadInputFormat.class));\n\n    \r\n    List<RowData> result1 = readData(inputFormat);\n\n    final String actual1 = TestData.rowDataToString(result1, true);\n    final String expected1 = \"[\"\n        + \"+I(id1,Danny,24,1970-01-01T00:00:00.001,par1), \"\n        + \"+I(id2,Stephen,34,1970-01-01T00:00:00.002,par1), \"\n        + \"+I(id4,Fabian,31,1970-01-01T00:00:00.004,par2), \"\n        + \"+I(id6,Emma,20,1970-01-01T00:00:00.006,par3), \"\n        + \"+I(id7,Bob,44,1970-01-01T00:00:00.007,par4), \"\n        + \"+I(id8,Han,56,1970-01-01T00:00:00.008,par4)]\";\n    assertThat(actual1, is(expected1));\n\n    \r\n    this.tableSource.reset();\n    inputFormat = this.tableSource.getInputFormat();\n    ((MergeOnReadInputFormat) inputFormat).isEmitDelete(true);\n\n    List<RowData> result2 = readData(inputFormat);\n\n    final String actual2 = TestData.rowDataToString(result2, true);\n    final String expected2 = \"[\"\n        + \"+I(id1,Danny,24,1970-01-01T00:00:00.001,par1), \"\n        + \"+I(id2,Stephen,34,1970-01-01T00:00:00.002,par1), \"\n        + \"-D(id3,Julian,53,1970-01-01T00:00:00.003,par2), \"\n        + \"+I(id4,Fabian,31,1970-01-01T00:00:00.004,par2), \"\n        + \"-D(id5,Sophia,18,1970-01-01T00:00:00.005,par3), \"\n        + \"+I(id6,Emma,20,1970-01-01T00:00:00.006,par3), \"\n        + \"+I(id7,Bob,44,1970-01-01T00:00:00.007,par4), \"\n        + \"+I(id8,Han,56,1970-01-01T00:00:00.008,par4), \"\n        + \"-D(id9,Jane,19,1970-01-01T00:00:00.006,par3)]\";\n    assertThat(actual2, is(expected2));\n  }\n","date":"2021-08-10 20:23:23","endLine":221,"groupId":"1001","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testReadBaseAndLogFilesWithDeletes","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-hudi-10-0.7/blobInfo/CC_OUT/blobs/55/359451e3b391d4550fcd4745f3cc2f81809671.src","preCode":"  void testReadBaseAndLogFilesWithDeletes() throws Exception {\n    Map<String, String> options = new HashMap<>();\n    options.put(FlinkOptions.CHANGELOG_ENABLED.key(), \"true\");\n    beforeEach(HoodieTableType.MERGE_ON_READ, options);\n\n    \r\n    conf.setBoolean(FlinkOptions.COMPACTION_ASYNC_ENABLED, true);\n    conf.setInteger(FlinkOptions.COMPACTION_DELTA_COMMITS, 1);\n    TestData.writeData(TestData.DATA_SET_INSERT, conf);\n\n    \r\n    conf.setBoolean(FlinkOptions.COMPACTION_ASYNC_ENABLED, false);\n    TestData.writeData(TestData.DATA_SET_UPDATE_DELETE, conf);\n\n    InputFormat<RowData, ?> inputFormat = this.tableSource.getInputFormat();\n    assertThat(inputFormat, instanceOf(MergeOnReadInputFormat.class));\n\n    \r\n    List<RowData> result1 = readData(inputFormat);\n\n    final String actual1 = TestData.rowDataToString(result1, true);\n    final String expected1 = \"[\"\n        + \"+I(id1,Danny,24,1970-01-01T00:00:00.001,par1), \"\n        + \"+I(id2,Stephen,34,1970-01-01T00:00:00.002,par1), \"\n        + \"+I(id4,Fabian,31,1970-01-01T00:00:00.004,par2), \"\n        + \"+I(id6,Emma,20,1970-01-01T00:00:00.006,par3), \"\n        + \"+I(id7,Bob,44,1970-01-01T00:00:00.007,par4), \"\n        + \"+I(id8,Han,56,1970-01-01T00:00:00.008,par4)]\";\n    assertThat(actual1, is(expected1));\n\n    \r\n    this.tableSource.reset();\n    inputFormat = this.tableSource.getInputFormat();\n    ((MergeOnReadInputFormat) inputFormat).isEmitDelete(true);\n\n    List<RowData> result2 = readData(inputFormat);\n\n    final String actual2 = TestData.rowDataToString(result2, true);\n    final String expected2 = \"[\"\n        + \"+I(id1,Danny,24,1970-01-01T00:00:00.001,par1), \"\n        + \"+I(id2,Stephen,34,1970-01-01T00:00:00.002,par1), \"\n        + \"-D(id3,Julian,53,1970-01-01T00:00:00.003,par2), \"\n        + \"+I(id4,Fabian,31,1970-01-01T00:00:00.004,par2), \"\n        + \"-D(id5,Sophia,18,1970-01-01T00:00:00.005,par3), \"\n        + \"+I(id6,Emma,20,1970-01-01T00:00:00.006,par3), \"\n        + \"+I(id7,Bob,44,1970-01-01T00:00:00.007,par4), \"\n        + \"+I(id8,Han,56,1970-01-01T00:00:00.008,par4), \"\n        + \"-D(id9,Jane,19,1970-01-01T00:00:00.006,par3)]\";\n    assertThat(actual2, is(expected2));\n  }\n","realPath":"hudi-flink/src/test/java/org/apache/hudi/table/format/TestInputFormat.java","repoName":"hudi","snippetEndLine":0,"snippetStartLine":0,"startLine":172,"status":"NB"},{"authorDate":"2021-08-11 22:55:43","commitOrder":2,"curCode":"  void testReadBaseAndLogFilesWithDisorderUpdateDelete() throws Exception {\n    Map<String, String> options = new HashMap<>();\n    options.put(FlinkOptions.CHANGELOG_ENABLED.key(), \"true\");\n    beforeEach(HoodieTableType.MERGE_ON_READ, options);\n\n    \r\n    conf.setBoolean(FlinkOptions.COMPACTION_ASYNC_ENABLED, true);\n    conf.setInteger(FlinkOptions.COMPACTION_DELTA_COMMITS, 1);\n    TestData.writeData(TestData.DATA_SET_SINGLE_INSERT, conf);\n\n    \r\n    conf.setBoolean(FlinkOptions.COMPACTION_ASYNC_ENABLED, false);\n    TestData.writeData(TestData.DATA_SET_DISORDER_UPDATE_DELETE, conf);\n\n    InputFormat<RowData, ?> inputFormat = this.tableSource.getInputFormat();\n    assertThat(inputFormat, instanceOf(MergeOnReadInputFormat.class));\n\n    \r\n    List<RowData> result1 = readData(inputFormat);\n\n    final String actual1 = TestData.rowDataToString(result1, true);\n    final String expected1 = \"[+U(id1,Danny,22,1970-01-01T00:00:00.004,par1)]\";\n    assertThat(actual1, is(expected1));\n\n    \r\n    this.tableSource.reset();\n    inputFormat = this.tableSource.getInputFormat();\n    ((MergeOnReadInputFormat) inputFormat).isEmitDelete(true);\n\n    List<RowData> result2 = readData(inputFormat);\n\n    final String actual2 = TestData.rowDataToString(result2, true);\n    final String expected2 = \"[+U(id1,Danny,22,1970-01-01T00:00:00.004,par1)]\";\n    assertThat(actual2, is(expected2));\n  }\n","date":"2021-08-11 22:55:43","endLine":258,"groupId":"1001","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testReadBaseAndLogFilesWithDisorderUpdateDelete","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-hudi-10-0.7/blobInfo/CC_OUT/blobs/54/848bdeeb8bd38f349e1918b4ee97ccbe8792b0.src","preCode":"  void testReadBaseAndLogFilesWithDisorderUpdateDelete() throws Exception {\n    Map<String, String> options = new HashMap<>();\n    options.put(FlinkOptions.CHANGELOG_ENABLED.key(), \"true\");\n    beforeEach(HoodieTableType.MERGE_ON_READ, options);\n\n    \r\n    conf.setBoolean(FlinkOptions.COMPACTION_ASYNC_ENABLED, true);\n    conf.setInteger(FlinkOptions.COMPACTION_DELTA_COMMITS, 1);\n    TestData.writeData(TestData.DATA_SET_SINGLE_INSERT, conf);\n\n    \r\n    conf.setBoolean(FlinkOptions.COMPACTION_ASYNC_ENABLED, false);\n    TestData.writeData(TestData.DATA_SET_DISORDER_UPDATE_DELETE, conf);\n\n    InputFormat<RowData, ?> inputFormat = this.tableSource.getInputFormat();\n    assertThat(inputFormat, instanceOf(MergeOnReadInputFormat.class));\n\n    \r\n    List<RowData> result1 = readData(inputFormat);\n\n    final String actual1 = TestData.rowDataToString(result1, true);\n    final String expected1 = \"[+U(id1,Danny,22,1970-01-01T00:00:00.004,par1)]\";\n    assertThat(actual1, is(expected1));\n\n    \r\n    this.tableSource.reset();\n    inputFormat = this.tableSource.getInputFormat();\n    ((MergeOnReadInputFormat) inputFormat).isEmitDelete(true);\n\n    List<RowData> result2 = readData(inputFormat);\n\n    final String actual2 = TestData.rowDataToString(result2, true);\n    final String expected2 = \"[+U(id1,Danny,22,1970-01-01T00:00:00.004,par1)]\";\n    assertThat(actual2, is(expected2));\n  }\n","realPath":"hudi-flink/src/test/java/org/apache/hudi/table/format/TestInputFormat.java","repoName":"hudi","snippetEndLine":0,"snippetStartLine":0,"startLine":224,"status":"B"}],"commitId":"29332498af420596f42c3b0ff4a2fe804d7d7dfc","commitMessage":"@@@[HUDI-2298] The HoodieMergedLogRecordScanner should set up the operation of the chosen record (#3456)\n\n","date":"2021-08-11 22:55:43","modifiedFileCount":"3","status":"M","submitter":"Danny Chan"},{"authorTime":"2021-08-16 18:14:05","codes":[{"authorDate":"2021-08-16 18:14:05","commitOrder":3,"curCode":"  void testReadBaseAndLogFilesWithDeletes() throws Exception {\n    Map<String, String> options = new HashMap<>();\n    options.put(FlinkOptions.CHANGELOG_ENABLED.key(), \"true\");\n    beforeEach(HoodieTableType.MERGE_ON_READ, options);\n\n    \r\n    conf.setBoolean(FlinkOptions.COMPACTION_ASYNC_ENABLED, true);\n    conf.setInteger(FlinkOptions.COMPACTION_DELTA_COMMITS, 1);\n    TestData.writeData(TestData.DATA_SET_INSERT, conf);\n\n    \r\n    conf.setBoolean(FlinkOptions.COMPACTION_ASYNC_ENABLED, false);\n    TestData.writeData(TestData.DATA_SET_UPDATE_DELETE, conf);\n\n    InputFormat<RowData, ?> inputFormat = this.tableSource.getInputFormat();\n    assertThat(inputFormat, instanceOf(MergeOnReadInputFormat.class));\n\n    \r\n    List<RowData> result1 = readData(inputFormat);\n\n    final String actual1 = TestData.rowDataToString(result1);\n    final String expected1 = \"[\"\n        + \"+I[id1, Danny, 24, 1970-01-01T00:00:00.001, par1], \"\n        + \"+I[id2, Stephen, 34, 1970-01-01T00:00:00.002, par1], \"\n        + \"+I[id4, Fabian, 31, 1970-01-01T00:00:00.004, par2], \"\n        + \"+I[id6, Emma, 20, 1970-01-01T00:00:00.006, par3], \"\n        + \"+I[id7, Bob, 44, 1970-01-01T00:00:00.007, par4], \"\n        + \"+I[id8, Han, 56, 1970-01-01T00:00:00.008, par4]]\";\n    assertThat(actual1, is(expected1));\n\n    \r\n    this.tableSource.reset();\n    inputFormat = this.tableSource.getInputFormat();\n    ((MergeOnReadInputFormat) inputFormat).isEmitDelete(true);\n\n    List<RowData> result2 = readData(inputFormat);\n\n    final String actual2 = TestData.rowDataToString(result2);\n    final String expected2 = \"[\"\n        + \"+I[id1, Danny, 24, 1970-01-01T00:00:00.001, par1], \"\n        + \"+I[id2, Stephen, 34, 1970-01-01T00:00:00.002, par1], \"\n        + \"-D[id3, Julian, 53, 1970-01-01T00:00:00.003, par2], \"\n        + \"+I[id4, Fabian, 31, 1970-01-01T00:00:00.004, par2], \"\n        + \"-D[id5, Sophia, 18, 1970-01-01T00:00:00.005, par3], \"\n        + \"+I[id6, Emma, 20, 1970-01-01T00:00:00.006, par3], \"\n        + \"+I[id7, Bob, 44, 1970-01-01T00:00:00.007, par4], \"\n        + \"+I[id8, Han, 56, 1970-01-01T00:00:00.008, par4], \"\n        + \"-D[id9, Jane, 19, 1970-01-01T00:00:00.006, par3]]\";\n    assertThat(actual2, is(expected2));\n  }\n","date":"2021-08-16 18:14:05","endLine":223,"groupId":"10395","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testReadBaseAndLogFilesWithDeletes","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-hudi-10-0.7/blobInfo/CC_OUT/blobs/cc/0699fc521d684c4dbc8cb476168b4bdb8db0bc.src","preCode":"  void testReadBaseAndLogFilesWithDeletes() throws Exception {\n    Map<String, String> options = new HashMap<>();\n    options.put(FlinkOptions.CHANGELOG_ENABLED.key(), \"true\");\n    beforeEach(HoodieTableType.MERGE_ON_READ, options);\n\n    \r\n    conf.setBoolean(FlinkOptions.COMPACTION_ASYNC_ENABLED, true);\n    conf.setInteger(FlinkOptions.COMPACTION_DELTA_COMMITS, 1);\n    TestData.writeData(TestData.DATA_SET_INSERT, conf);\n\n    \r\n    conf.setBoolean(FlinkOptions.COMPACTION_ASYNC_ENABLED, false);\n    TestData.writeData(TestData.DATA_SET_UPDATE_DELETE, conf);\n\n    InputFormat<RowData, ?> inputFormat = this.tableSource.getInputFormat();\n    assertThat(inputFormat, instanceOf(MergeOnReadInputFormat.class));\n\n    \r\n    List<RowData> result1 = readData(inputFormat);\n\n    final String actual1 = TestData.rowDataToString(result1, true);\n    final String expected1 = \"[\"\n        + \"+I(id1,Danny,24,1970-01-01T00:00:00.001,par1), \"\n        + \"+I(id2,Stephen,34,1970-01-01T00:00:00.002,par1), \"\n        + \"+I(id4,Fabian,31,1970-01-01T00:00:00.004,par2), \"\n        + \"+I(id6,Emma,20,1970-01-01T00:00:00.006,par3), \"\n        + \"+I(id7,Bob,44,1970-01-01T00:00:00.007,par4), \"\n        + \"+I(id8,Han,56,1970-01-01T00:00:00.008,par4)]\";\n    assertThat(actual1, is(expected1));\n\n    \r\n    this.tableSource.reset();\n    inputFormat = this.tableSource.getInputFormat();\n    ((MergeOnReadInputFormat) inputFormat).isEmitDelete(true);\n\n    List<RowData> result2 = readData(inputFormat);\n\n    final String actual2 = TestData.rowDataToString(result2, true);\n    final String expected2 = \"[\"\n        + \"+I(id1,Danny,24,1970-01-01T00:00:00.001,par1), \"\n        + \"+I(id2,Stephen,34,1970-01-01T00:00:00.002,par1), \"\n        + \"-D(id3,Julian,53,1970-01-01T00:00:00.003,par2), \"\n        + \"+I(id4,Fabian,31,1970-01-01T00:00:00.004,par2), \"\n        + \"-D(id5,Sophia,18,1970-01-01T00:00:00.005,par3), \"\n        + \"+I(id6,Emma,20,1970-01-01T00:00:00.006,par3), \"\n        + \"+I(id7,Bob,44,1970-01-01T00:00:00.007,par4), \"\n        + \"+I(id8,Han,56,1970-01-01T00:00:00.008,par4), \"\n        + \"-D(id9,Jane,19,1970-01-01T00:00:00.006,par3)]\";\n    assertThat(actual2, is(expected2));\n  }\n","realPath":"hudi-flink/src/test/java/org/apache/hudi/table/format/TestInputFormat.java","repoName":"hudi","snippetEndLine":0,"snippetStartLine":0,"startLine":174,"status":"M"},{"authorDate":"2021-08-16 18:14:05","commitOrder":3,"curCode":"  void testReadBaseAndLogFilesWithDisorderUpdateDelete() throws Exception {\n    Map<String, String> options = new HashMap<>();\n    options.put(FlinkOptions.CHANGELOG_ENABLED.key(), \"true\");\n    beforeEach(HoodieTableType.MERGE_ON_READ, options);\n\n    \r\n    conf.setBoolean(FlinkOptions.COMPACTION_ASYNC_ENABLED, true);\n    conf.setInteger(FlinkOptions.COMPACTION_DELTA_COMMITS, 1);\n    TestData.writeData(TestData.DATA_SET_SINGLE_INSERT, conf);\n\n    \r\n    conf.setBoolean(FlinkOptions.COMPACTION_ASYNC_ENABLED, false);\n    TestData.writeData(TestData.DATA_SET_DISORDER_UPDATE_DELETE, conf);\n\n    InputFormat<RowData, ?> inputFormat = this.tableSource.getInputFormat();\n    assertThat(inputFormat, instanceOf(MergeOnReadInputFormat.class));\n\n    \r\n    List<RowData> result1 = readData(inputFormat);\n\n    final String actual1 = TestData.rowDataToString(result1);\n    final String expected1 = \"[+U[id1, Danny, 22, 1970-01-01T00:00:00.004, par1]]\";\n    assertThat(actual1, is(expected1));\n\n    \r\n    this.tableSource.reset();\n    inputFormat = this.tableSource.getInputFormat();\n    ((MergeOnReadInputFormat) inputFormat).isEmitDelete(true);\n\n    List<RowData> result2 = readData(inputFormat);\n\n    final String actual2 = TestData.rowDataToString(result2);\n    final String expected2 = \"[+U[id1, Danny, 22, 1970-01-01T00:00:00.004, par1]]\";\n    assertThat(actual2, is(expected2));\n  }\n","date":"2021-08-16 18:14:05","endLine":260,"groupId":"10395","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testReadBaseAndLogFilesWithDisorderUpdateDelete","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-hudi-10-0.7/blobInfo/CC_OUT/blobs/cc/0699fc521d684c4dbc8cb476168b4bdb8db0bc.src","preCode":"  void testReadBaseAndLogFilesWithDisorderUpdateDelete() throws Exception {\n    Map<String, String> options = new HashMap<>();\n    options.put(FlinkOptions.CHANGELOG_ENABLED.key(), \"true\");\n    beforeEach(HoodieTableType.MERGE_ON_READ, options);\n\n    \r\n    conf.setBoolean(FlinkOptions.COMPACTION_ASYNC_ENABLED, true);\n    conf.setInteger(FlinkOptions.COMPACTION_DELTA_COMMITS, 1);\n    TestData.writeData(TestData.DATA_SET_SINGLE_INSERT, conf);\n\n    \r\n    conf.setBoolean(FlinkOptions.COMPACTION_ASYNC_ENABLED, false);\n    TestData.writeData(TestData.DATA_SET_DISORDER_UPDATE_DELETE, conf);\n\n    InputFormat<RowData, ?> inputFormat = this.tableSource.getInputFormat();\n    assertThat(inputFormat, instanceOf(MergeOnReadInputFormat.class));\n\n    \r\n    List<RowData> result1 = readData(inputFormat);\n\n    final String actual1 = TestData.rowDataToString(result1, true);\n    final String expected1 = \"[+U(id1,Danny,22,1970-01-01T00:00:00.004,par1)]\";\n    assertThat(actual1, is(expected1));\n\n    \r\n    this.tableSource.reset();\n    inputFormat = this.tableSource.getInputFormat();\n    ((MergeOnReadInputFormat) inputFormat).isEmitDelete(true);\n\n    List<RowData> result2 = readData(inputFormat);\n\n    final String actual2 = TestData.rowDataToString(result2, true);\n    final String expected2 = \"[+U(id1,Danny,22,1970-01-01T00:00:00.004,par1)]\";\n    assertThat(actual2, is(expected2));\n  }\n","realPath":"hudi-flink/src/test/java/org/apache/hudi/table/format/TestInputFormat.java","repoName":"hudi","snippetEndLine":0,"snippetStartLine":0,"startLine":226,"status":"M"}],"commitId":"66f951322a3872073b86896fa5c10b51a0f6e4ab","commitMessage":"@@@[HUDI-2191] Bump flink version to 1.13.1 (#3291)\n\n","date":"2021-08-16 18:14:05","modifiedFileCount":"17","status":"M","submitter":"Danny Chan"}]
