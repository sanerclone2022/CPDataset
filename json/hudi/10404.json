[{"authorTime":"2021-07-27 10:58:23","codes":[{"authorDate":"2021-07-27 10:58:23","commitOrder":1,"curCode":"  void testSimpleKeyAndPartition() {\n    Configuration conf = TestConfigurations.getDefaultConf(\"path1\");\n    final RowData rowData1 = insertRow(StringData.fromString(\"id1\"), StringData.fromString(\"Danny\"), 23,\n        TimestampData.fromEpochMillis(1), StringData.fromString(\"par1\"));\n    final RowDataKeyGen keyGen1 = RowDataKeyGen.instance(conf, TestConfigurations.ROW_TYPE);\n    assertThat(keyGen1.getRecordKey(rowData1), is(\"id1\"));\n    assertThat(keyGen1.getPartitionPath(rowData1), is(\"par1\"));\n\n    \r\n    final RowData rowData2 = insertRow(null, StringData.fromString(\"Danny\"), 23,\n        TimestampData.fromEpochMillis(1), null);\n    assertThrows(HoodieKeyException.class, () -> keyGen1.getRecordKey(rowData2));\n    assertThat(keyGen1.getPartitionPath(rowData2), is(\"default\"));\n    \r\n    final RowData rowData3 = insertRow(StringData.fromString(\"\"), StringData.fromString(\"Danny\"), 23,\n        TimestampData.fromEpochMillis(1), StringData.fromString(\"\"));\n    assertThrows(HoodieKeyException.class, () -> keyGen1.getRecordKey(rowData3));\n    assertThat(keyGen1.getPartitionPath(rowData3), is(\"default\"));\n\n    \r\n    conf.set(FlinkOptions.HIVE_STYLE_PARTITIONING, true);\n    final RowDataKeyGen keyGen2 = RowDataKeyGen.instance(conf, TestConfigurations.ROW_TYPE);\n    assertThat(keyGen2.getPartitionPath(rowData1), is(\"partition=par1\"));\n    assertThat(keyGen2.getPartitionPath(rowData2), is(\"partition=default\"));\n    assertThat(keyGen2.getPartitionPath(rowData3), is(\"partition=default\"));\n  }\n","date":"2021-07-27 10:58:23","endLine":66,"groupId":"3244","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testSimpleKeyAndPartition","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-hudi-10-0.7/blobInfo/CC_OUT/blobs/0d/445d60dd35e81e3b9b5fe444381712a9b5bae6.src","preCode":"  void testSimpleKeyAndPartition() {\n    Configuration conf = TestConfigurations.getDefaultConf(\"path1\");\n    final RowData rowData1 = insertRow(StringData.fromString(\"id1\"), StringData.fromString(\"Danny\"), 23,\n        TimestampData.fromEpochMillis(1), StringData.fromString(\"par1\"));\n    final RowDataKeyGen keyGen1 = RowDataKeyGen.instance(conf, TestConfigurations.ROW_TYPE);\n    assertThat(keyGen1.getRecordKey(rowData1), is(\"id1\"));\n    assertThat(keyGen1.getPartitionPath(rowData1), is(\"par1\"));\n\n    \r\n    final RowData rowData2 = insertRow(null, StringData.fromString(\"Danny\"), 23,\n        TimestampData.fromEpochMillis(1), null);\n    assertThrows(HoodieKeyException.class, () -> keyGen1.getRecordKey(rowData2));\n    assertThat(keyGen1.getPartitionPath(rowData2), is(\"default\"));\n    \r\n    final RowData rowData3 = insertRow(StringData.fromString(\"\"), StringData.fromString(\"Danny\"), 23,\n        TimestampData.fromEpochMillis(1), StringData.fromString(\"\"));\n    assertThrows(HoodieKeyException.class, () -> keyGen1.getRecordKey(rowData3));\n    assertThat(keyGen1.getPartitionPath(rowData3), is(\"default\"));\n\n    \r\n    conf.set(FlinkOptions.HIVE_STYLE_PARTITIONING, true);\n    final RowDataKeyGen keyGen2 = RowDataKeyGen.instance(conf, TestConfigurations.ROW_TYPE);\n    assertThat(keyGen2.getPartitionPath(rowData1), is(\"partition=par1\"));\n    assertThat(keyGen2.getPartitionPath(rowData2), is(\"partition=default\"));\n    assertThat(keyGen2.getPartitionPath(rowData3), is(\"partition=default\"));\n  }\n","realPath":"hudi-flink/src/test/java/org/apache/hudi/sink/bulk/TestRowDataKeyGen.java","repoName":"hudi","snippetEndLine":0,"snippetStartLine":0,"startLine":41,"status":"B"},{"authorDate":"2021-07-27 10:58:23","commitOrder":1,"curCode":"  void testComplexKeyAndPartition() {\n    Configuration conf = TestConfigurations.getDefaultConf(\"path1\");\n    conf.set(FlinkOptions.RECORD_KEY_FIELD, \"uuid,name\");\n    conf.set(FlinkOptions.PARTITION_PATH_FIELD, \"partition,ts\");\n    RowData rowData1 = insertRow(StringData.fromString(\"id1\"), StringData.fromString(\"Danny\"), 23,\n        TimestampData.fromEpochMillis(1), StringData.fromString(\"par1\"));\n    RowDataKeyGen keyGen1 = RowDataKeyGen.instance(conf, TestConfigurations.ROW_TYPE);\n    assertThat(keyGen1.getRecordKey(rowData1), is(\"uuid:id1,name:Danny\"));\n    assertThat(keyGen1.getPartitionPath(rowData1), is(\"par1/1970-01-01T00:00:00.001\"));\n\n    \r\n    final RowData rowData2 = insertRow(null, null, 23, null, null);\n    assertThrows(HoodieKeyException.class, () -> keyGen1.getRecordKey(rowData2));\n    assertThat(keyGen1.getPartitionPath(rowData2), is(\"default/default\"));\n    \r\n    final RowData rowData3 = insertRow(StringData.fromString(\"\"), StringData.fromString(\"\"), 23,\n        TimestampData.fromEpochMillis(1), StringData.fromString(\"\"));\n    assertThrows(HoodieKeyException.class, () -> keyGen1.getRecordKey(rowData3));\n    assertThat(keyGen1.getPartitionPath(rowData3), is(\"default/1970-01-01T00:00:00.001\"));\n\n    \r\n    conf.set(FlinkOptions.HIVE_STYLE_PARTITIONING, true);\n    final RowDataKeyGen keyGen2 = RowDataKeyGen.instance(conf, TestConfigurations.ROW_TYPE);\n    assertThat(keyGen2.getPartitionPath(rowData1), is(\"partition=par1/ts=1970-01-01T00:00:00.001\"));\n    assertThat(keyGen2.getPartitionPath(rowData2), is(\"partition=default/ts=default\"));\n    assertThat(keyGen2.getPartitionPath(rowData3), is(\"partition=default/ts=1970-01-01T00:00:00.001\"));\n  }\n","date":"2021-07-27 10:58:23","endLine":95,"groupId":"3245","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testComplexKeyAndPartition","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-hudi-10-0.7/blobInfo/CC_OUT/blobs/0d/445d60dd35e81e3b9b5fe444381712a9b5bae6.src","preCode":"  void testComplexKeyAndPartition() {\n    Configuration conf = TestConfigurations.getDefaultConf(\"path1\");\n    conf.set(FlinkOptions.RECORD_KEY_FIELD, \"uuid,name\");\n    conf.set(FlinkOptions.PARTITION_PATH_FIELD, \"partition,ts\");\n    RowData rowData1 = insertRow(StringData.fromString(\"id1\"), StringData.fromString(\"Danny\"), 23,\n        TimestampData.fromEpochMillis(1), StringData.fromString(\"par1\"));\n    RowDataKeyGen keyGen1 = RowDataKeyGen.instance(conf, TestConfigurations.ROW_TYPE);\n    assertThat(keyGen1.getRecordKey(rowData1), is(\"uuid:id1,name:Danny\"));\n    assertThat(keyGen1.getPartitionPath(rowData1), is(\"par1/1970-01-01T00:00:00.001\"));\n\n    \r\n    final RowData rowData2 = insertRow(null, null, 23, null, null);\n    assertThrows(HoodieKeyException.class, () -> keyGen1.getRecordKey(rowData2));\n    assertThat(keyGen1.getPartitionPath(rowData2), is(\"default/default\"));\n    \r\n    final RowData rowData3 = insertRow(StringData.fromString(\"\"), StringData.fromString(\"\"), 23,\n        TimestampData.fromEpochMillis(1), StringData.fromString(\"\"));\n    assertThrows(HoodieKeyException.class, () -> keyGen1.getRecordKey(rowData3));\n    assertThat(keyGen1.getPartitionPath(rowData3), is(\"default/1970-01-01T00:00:00.001\"));\n\n    \r\n    conf.set(FlinkOptions.HIVE_STYLE_PARTITIONING, true);\n    final RowDataKeyGen keyGen2 = RowDataKeyGen.instance(conf, TestConfigurations.ROW_TYPE);\n    assertThat(keyGen2.getPartitionPath(rowData1), is(\"partition=par1/ts=1970-01-01T00:00:00.001\"));\n    assertThat(keyGen2.getPartitionPath(rowData2), is(\"partition=default/ts=default\"));\n    assertThat(keyGen2.getPartitionPath(rowData3), is(\"partition=default/ts=1970-01-01T00:00:00.001\"));\n  }\n","realPath":"hudi-flink/src/test/java/org/apache/hudi/sink/bulk/TestRowDataKeyGen.java","repoName":"hudi","snippetEndLine":0,"snippetStartLine":0,"startLine":69,"status":"B"}],"commitId":"9d2a65a6a6ff9add81411147f1cddd03f7c08e6c","commitMessage":"@@@[HUDI-2209] Bulk insert for flink writer (#3334)\n\n","date":"2021-07-27 10:58:23","modifiedFileCount":"8","status":"B","submitter":"Danny Chan"},{"authorTime":"2021-08-10 20:23:23","codes":[{"authorDate":"2021-08-10 20:23:23","commitOrder":2,"curCode":"  void testSimpleKeyAndPartition() {\n    Configuration conf = TestConfigurations.getDefaultConf(\"path1\");\n    final RowData rowData1 = insertRow(StringData.fromString(\"id1\"), StringData.fromString(\"Danny\"), 23,\n        TimestampData.fromEpochMillis(1), StringData.fromString(\"par1\"));\n    final RowDataKeyGen keyGen1 = RowDataKeyGen.instance(conf, TestConfigurations.ROW_TYPE);\n    assertThat(keyGen1.getRecordKey(rowData1), is(\"id1\"));\n    assertThat(keyGen1.getPartitionPath(rowData1), is(\"par1\"));\n\n    \r\n    final RowData rowData2 = insertRow(TestConfigurations.ROW_TYPE, null, StringData.fromString(\"Danny\"), 23,\n        TimestampData.fromEpochMillis(1), null);\n    assertThrows(HoodieKeyException.class, () -> keyGen1.getRecordKey(rowData2));\n    assertThat(keyGen1.getPartitionPath(rowData2), is(\"default\"));\n    \r\n    final RowData rowData3 = insertRow(StringData.fromString(\"\"), StringData.fromString(\"Danny\"), 23,\n        TimestampData.fromEpochMillis(1), StringData.fromString(\"\"));\n    assertThrows(HoodieKeyException.class, () -> keyGen1.getRecordKey(rowData3));\n    assertThat(keyGen1.getPartitionPath(rowData3), is(\"default\"));\n\n    \r\n    conf.set(FlinkOptions.HIVE_STYLE_PARTITIONING, true);\n    final RowDataKeyGen keyGen2 = RowDataKeyGen.instance(conf, TestConfigurations.ROW_TYPE);\n    assertThat(keyGen2.getPartitionPath(rowData1), is(\"partition=par1\"));\n    assertThat(keyGen2.getPartitionPath(rowData2), is(\"partition=default\"));\n    assertThat(keyGen2.getPartitionPath(rowData3), is(\"partition=default\"));\n  }\n","date":"2021-08-10 20:23:23","endLine":66,"groupId":"10404","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testSimpleKeyAndPartition","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-hudi-10-0.7/blobInfo/CC_OUT/blobs/32/ee72541b6b4ffd27359d6df512eac05c15427c.src","preCode":"  void testSimpleKeyAndPartition() {\n    Configuration conf = TestConfigurations.getDefaultConf(\"path1\");\n    final RowData rowData1 = insertRow(StringData.fromString(\"id1\"), StringData.fromString(\"Danny\"), 23,\n        TimestampData.fromEpochMillis(1), StringData.fromString(\"par1\"));\n    final RowDataKeyGen keyGen1 = RowDataKeyGen.instance(conf, TestConfigurations.ROW_TYPE);\n    assertThat(keyGen1.getRecordKey(rowData1), is(\"id1\"));\n    assertThat(keyGen1.getPartitionPath(rowData1), is(\"par1\"));\n\n    \r\n    final RowData rowData2 = insertRow(null, StringData.fromString(\"Danny\"), 23,\n        TimestampData.fromEpochMillis(1), null);\n    assertThrows(HoodieKeyException.class, () -> keyGen1.getRecordKey(rowData2));\n    assertThat(keyGen1.getPartitionPath(rowData2), is(\"default\"));\n    \r\n    final RowData rowData3 = insertRow(StringData.fromString(\"\"), StringData.fromString(\"Danny\"), 23,\n        TimestampData.fromEpochMillis(1), StringData.fromString(\"\"));\n    assertThrows(HoodieKeyException.class, () -> keyGen1.getRecordKey(rowData3));\n    assertThat(keyGen1.getPartitionPath(rowData3), is(\"default\"));\n\n    \r\n    conf.set(FlinkOptions.HIVE_STYLE_PARTITIONING, true);\n    final RowDataKeyGen keyGen2 = RowDataKeyGen.instance(conf, TestConfigurations.ROW_TYPE);\n    assertThat(keyGen2.getPartitionPath(rowData1), is(\"partition=par1\"));\n    assertThat(keyGen2.getPartitionPath(rowData2), is(\"partition=default\"));\n    assertThat(keyGen2.getPartitionPath(rowData3), is(\"partition=default\"));\n  }\n","realPath":"hudi-flink/src/test/java/org/apache/hudi/sink/bulk/TestRowDataKeyGen.java","repoName":"hudi","snippetEndLine":0,"snippetStartLine":0,"startLine":41,"status":"M"},{"authorDate":"2021-08-10 20:23:23","commitOrder":2,"curCode":"  void testComplexKeyAndPartition() {\n    Configuration conf = TestConfigurations.getDefaultConf(\"path1\");\n    conf.set(FlinkOptions.RECORD_KEY_FIELD, \"uuid,name\");\n    conf.set(FlinkOptions.PARTITION_PATH_FIELD, \"partition,ts\");\n    RowData rowData1 = insertRow(StringData.fromString(\"id1\"), StringData.fromString(\"Danny\"), 23,\n        TimestampData.fromEpochMillis(1), StringData.fromString(\"par1\"));\n    RowDataKeyGen keyGen1 = RowDataKeyGen.instance(conf, TestConfigurations.ROW_TYPE);\n    assertThat(keyGen1.getRecordKey(rowData1), is(\"uuid:id1,name:Danny\"));\n    assertThat(keyGen1.getPartitionPath(rowData1), is(\"par1/1970-01-01T00:00:00.001\"));\n\n    \r\n    final RowData rowData2 = insertRow(TestConfigurations.ROW_TYPE,null, null, 23, null, null);\n    assertThrows(HoodieKeyException.class, () -> keyGen1.getRecordKey(rowData2));\n    assertThat(keyGen1.getPartitionPath(rowData2), is(\"default/default\"));\n    \r\n    final RowData rowData3 = insertRow(StringData.fromString(\"\"), StringData.fromString(\"\"), 23,\n        TimestampData.fromEpochMillis(1), StringData.fromString(\"\"));\n    assertThrows(HoodieKeyException.class, () -> keyGen1.getRecordKey(rowData3));\n    assertThat(keyGen1.getPartitionPath(rowData3), is(\"default/1970-01-01T00:00:00.001\"));\n\n    \r\n    conf.set(FlinkOptions.HIVE_STYLE_PARTITIONING, true);\n    final RowDataKeyGen keyGen2 = RowDataKeyGen.instance(conf, TestConfigurations.ROW_TYPE);\n    assertThat(keyGen2.getPartitionPath(rowData1), is(\"partition=par1/ts=1970-01-01T00:00:00.001\"));\n    assertThat(keyGen2.getPartitionPath(rowData2), is(\"partition=default/ts=default\"));\n    assertThat(keyGen2.getPartitionPath(rowData3), is(\"partition=default/ts=1970-01-01T00:00:00.001\"));\n  }\n","date":"2021-08-10 20:23:23","endLine":95,"groupId":"10404","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testComplexKeyAndPartition","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-hudi-10-0.7/blobInfo/CC_OUT/blobs/32/ee72541b6b4ffd27359d6df512eac05c15427c.src","preCode":"  void testComplexKeyAndPartition() {\n    Configuration conf = TestConfigurations.getDefaultConf(\"path1\");\n    conf.set(FlinkOptions.RECORD_KEY_FIELD, \"uuid,name\");\n    conf.set(FlinkOptions.PARTITION_PATH_FIELD, \"partition,ts\");\n    RowData rowData1 = insertRow(StringData.fromString(\"id1\"), StringData.fromString(\"Danny\"), 23,\n        TimestampData.fromEpochMillis(1), StringData.fromString(\"par1\"));\n    RowDataKeyGen keyGen1 = RowDataKeyGen.instance(conf, TestConfigurations.ROW_TYPE);\n    assertThat(keyGen1.getRecordKey(rowData1), is(\"uuid:id1,name:Danny\"));\n    assertThat(keyGen1.getPartitionPath(rowData1), is(\"par1/1970-01-01T00:00:00.001\"));\n\n    \r\n    final RowData rowData2 = insertRow(null, null, 23, null, null);\n    assertThrows(HoodieKeyException.class, () -> keyGen1.getRecordKey(rowData2));\n    assertThat(keyGen1.getPartitionPath(rowData2), is(\"default/default\"));\n    \r\n    final RowData rowData3 = insertRow(StringData.fromString(\"\"), StringData.fromString(\"\"), 23,\n        TimestampData.fromEpochMillis(1), StringData.fromString(\"\"));\n    assertThrows(HoodieKeyException.class, () -> keyGen1.getRecordKey(rowData3));\n    assertThat(keyGen1.getPartitionPath(rowData3), is(\"default/1970-01-01T00:00:00.001\"));\n\n    \r\n    conf.set(FlinkOptions.HIVE_STYLE_PARTITIONING, true);\n    final RowDataKeyGen keyGen2 = RowDataKeyGen.instance(conf, TestConfigurations.ROW_TYPE);\n    assertThat(keyGen2.getPartitionPath(rowData1), is(\"partition=par1/ts=1970-01-01T00:00:00.001\"));\n    assertThat(keyGen2.getPartitionPath(rowData2), is(\"partition=default/ts=default\"));\n    assertThat(keyGen2.getPartitionPath(rowData3), is(\"partition=default/ts=1970-01-01T00:00:00.001\"));\n  }\n","realPath":"hudi-flink/src/test/java/org/apache/hudi/sink/bulk/TestRowDataKeyGen.java","repoName":"hudi","snippetEndLine":0,"snippetStartLine":0,"startLine":69,"status":"M"}],"commitId":"21db6d7a84d4a83ec98c110e92ff9c92d05dd530","commitMessage":"@@@[HUDI-1771] Propagate CDC format for hoodie (#3285)\n\n","date":"2021-08-10 20:23:23","modifiedFileCount":"47","status":"M","submitter":"swuferhong"}]
