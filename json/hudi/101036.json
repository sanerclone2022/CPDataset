[{"authorTime":"2019-08-12 08:48:17","codes":[{"authorDate":"2019-08-12 08:48:17","commitOrder":1,"curCode":"  protected void resetPendingCompactionOperations(Stream<Pair<String, CompactionOperation>> operations) {\n    rocksDB.writeBatch(batch -> {\n      operations.forEach(opPair -> {\n        rocksDB.putInBatch(batch, schemaHelper.getColFamilyForPendingCompaction(),\n            schemaHelper.getKeyForPendingCompactionLookup(opPair.getValue().getFileGroupId()), opPair);\n      });\n      log.info(\"Initializing pending compaction operations. Count=\" + batch.count());\n    });\n  }\n","date":"2019-08-12 08:48:17","endLine":108,"groupId":"1167","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"resetPendingCompactionOperations","params":"(Stream<Pair<String@CompactionOperation>>operations)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-hudi-10-0.7/blobInfo/CC_OUT/blobs/6d/2e1c8fa324dade4150e0dbc07d2abb2e75782b.src","preCode":"  protected void resetPendingCompactionOperations(Stream<Pair<String, CompactionOperation>> operations) {\n    rocksDB.writeBatch(batch -> {\n      operations.forEach(opPair -> {\n        rocksDB.putInBatch(batch, schemaHelper.getColFamilyForPendingCompaction(),\n            schemaHelper.getKeyForPendingCompactionLookup(opPair.getValue().getFileGroupId()), opPair);\n      });\n      log.info(\"Initializing pending compaction operations. Count=\" + batch.count());\n    });\n  }\n","realPath":"hudi-common/src/main/java/org/apache/hudi/common/table/view/RocksDbBasedFileSystemView.java","repoName":"hudi","snippetEndLine":0,"snippetStartLine":0,"startLine":100,"status":"B"},{"authorDate":"2019-08-12 08:48:17","commitOrder":1,"curCode":"  protected void addPendingCompactionOperations(Stream<Pair<String, CompactionOperation>> operations) {\n    rocksDB.writeBatch(batch -> {\n      operations.forEach(opInstantPair -> {\n        Preconditions.checkArgument(!isPendingCompactionScheduledForFileId(opInstantPair.getValue().getFileGroupId()),\n            \"Duplicate FileGroupId found in pending compaction operations. FgId :\"\n                + opInstantPair.getValue().getFileGroupId());\n        rocksDB.putInBatch(batch, schemaHelper.getColFamilyForPendingCompaction(),\n            schemaHelper.getKeyForPendingCompactionLookup(opInstantPair.getValue().getFileGroupId()), opInstantPair);\n      });\n    });\n  }\n","date":"2019-08-12 08:48:17","endLine":121,"groupId":"369","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"addPendingCompactionOperations","params":"(Stream<Pair<String@CompactionOperation>>operations)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-hudi-10-0.7/blobInfo/CC_OUT/blobs/6d/2e1c8fa324dade4150e0dbc07d2abb2e75782b.src","preCode":"  protected void addPendingCompactionOperations(Stream<Pair<String, CompactionOperation>> operations) {\n    rocksDB.writeBatch(batch -> {\n      operations.forEach(opInstantPair -> {\n        Preconditions.checkArgument(!isPendingCompactionScheduledForFileId(opInstantPair.getValue().getFileGroupId()),\n            \"Duplicate FileGroupId found in pending compaction operations. FgId :\"\n                + opInstantPair.getValue().getFileGroupId());\n        rocksDB.putInBatch(batch, schemaHelper.getColFamilyForPendingCompaction(),\n            schemaHelper.getKeyForPendingCompactionLookup(opInstantPair.getValue().getFileGroupId()), opInstantPair);\n      });\n    });\n  }\n","realPath":"hudi-common/src/main/java/org/apache/hudi/common/table/view/RocksDbBasedFileSystemView.java","repoName":"hudi","snippetEndLine":0,"snippetStartLine":0,"startLine":111,"status":"B"}],"commitId":"a4f9d7575f39bb79089714049ffea12ba5f25ec8","commitMessage":"@@@HUDI-123 Rename code packages/constants to org.apache.hudi (#830)\n\n- Rename com.uber.hoodie to org.apache.hudi\n- Flag to pass com.uber.hoodie Input formats for hoodie-sync\n- Works with HUDI demo. \n- Also tested for backwards compatibility with datasets built by com.uber.hoodie packages\n- Migration guide : https://cwiki.apache.org/confluence/display/HUDI/Migration+Guide+From+com.uber.hoodie+to+org.apache.hudi","date":"2019-08-12 08:48:17","modifiedFileCount":"0","status":"B","submitter":"Balaji Varadarajan"},{"authorTime":"2019-08-12 08:48:17","codes":[{"authorDate":"2019-12-10 19:23:38","commitOrder":2,"curCode":"  protected void resetPendingCompactionOperations(Stream<Pair<String, CompactionOperation>> operations) {\n    rocksDB.writeBatch(batch -> {\n      operations.forEach(opPair -> {\n        rocksDB.putInBatch(batch, schemaHelper.getColFamilyForPendingCompaction(),\n            schemaHelper.getKeyForPendingCompactionLookup(opPair.getValue().getFileGroupId()), opPair);\n      });\n      LOG.info(\"Initializing pending compaction operations. Count=\" + batch.count());\n    });\n  }\n","date":"2019-12-10 19:23:38","endLine":107,"groupId":"1167","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"resetPendingCompactionOperations","params":"(Stream<Pair<String@CompactionOperation>>operations)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-hudi-10-0.7/blobInfo/CC_OUT/blobs/25/02cc154778fe988b81b8351775e5308b83450b.src","preCode":"  protected void resetPendingCompactionOperations(Stream<Pair<String, CompactionOperation>> operations) {\n    rocksDB.writeBatch(batch -> {\n      operations.forEach(opPair -> {\n        rocksDB.putInBatch(batch, schemaHelper.getColFamilyForPendingCompaction(),\n            schemaHelper.getKeyForPendingCompactionLookup(opPair.getValue().getFileGroupId()), opPair);\n      });\n      log.info(\"Initializing pending compaction operations. Count=\" + batch.count());\n    });\n  }\n","realPath":"hudi-common/src/main/java/org/apache/hudi/common/table/view/RocksDbBasedFileSystemView.java","repoName":"hudi","snippetEndLine":0,"snippetStartLine":0,"startLine":99,"status":"M"},{"authorDate":"2019-08-12 08:48:17","commitOrder":2,"curCode":"  protected void addPendingCompactionOperations(Stream<Pair<String, CompactionOperation>> operations) {\n    rocksDB.writeBatch(batch -> {\n      operations.forEach(opInstantPair -> {\n        Preconditions.checkArgument(!isPendingCompactionScheduledForFileId(opInstantPair.getValue().getFileGroupId()),\n            \"Duplicate FileGroupId found in pending compaction operations. FgId :\"\n                + opInstantPair.getValue().getFileGroupId());\n        rocksDB.putInBatch(batch, schemaHelper.getColFamilyForPendingCompaction(),\n            schemaHelper.getKeyForPendingCompactionLookup(opInstantPair.getValue().getFileGroupId()), opInstantPair);\n      });\n    });\n  }\n","date":"2019-08-12 08:48:17","endLine":121,"groupId":"369","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"addPendingCompactionOperations","params":"(Stream<Pair<String@CompactionOperation>>operations)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-hudi-10-0.7/blobInfo/CC_OUT/blobs/6d/2e1c8fa324dade4150e0dbc07d2abb2e75782b.src","preCode":"  protected void addPendingCompactionOperations(Stream<Pair<String, CompactionOperation>> operations) {\n    rocksDB.writeBatch(batch -> {\n      operations.forEach(opInstantPair -> {\n        Preconditions.checkArgument(!isPendingCompactionScheduledForFileId(opInstantPair.getValue().getFileGroupId()),\n            \"Duplicate FileGroupId found in pending compaction operations. FgId :\"\n                + opInstantPair.getValue().getFileGroupId());\n        rocksDB.putInBatch(batch, schemaHelper.getColFamilyForPendingCompaction(),\n            schemaHelper.getKeyForPendingCompactionLookup(opInstantPair.getValue().getFileGroupId()), opInstantPair);\n      });\n    });\n  }\n","realPath":"hudi-common/src/main/java/org/apache/hudi/common/table/view/RocksDbBasedFileSystemView.java","repoName":"hudi","snippetEndLine":0,"snippetStartLine":0,"startLine":111,"status":"N"}],"commitId":"d447e2d7518fc6ee87f1620542e45f1454a5ba0f","commitMessage":"@@@[checkstyle] Unify LOG form (#1092)\n\n","date":"2019-12-10 19:23:38","modifiedFileCount":"100","status":"M","submitter":"lamber-ken"},{"authorTime":"2020-02-02 18:03:44","codes":[{"authorDate":"2020-02-02 18:03:44","commitOrder":3,"curCode":"  protected void resetPendingCompactionOperations(Stream<Pair<String, CompactionOperation>> operations) {\n    rocksDB.writeBatch(batch -> {\n      operations.forEach(opPair ->\n          rocksDB.putInBatch(batch, schemaHelper.getColFamilyForPendingCompaction(),\n              schemaHelper.getKeyForPendingCompactionLookup(opPair.getValue().getFileGroupId()), opPair)\n      );\n      LOG.info(\"Initializing pending compaction operations. Count=\" + batch.count());\n    });\n  }\n","date":"2020-02-02 18:03:44","endLine":107,"groupId":"1167","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"resetPendingCompactionOperations","params":"(Stream<Pair<String@CompactionOperation>>operations)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-hudi-10-0.7/blobInfo/CC_OUT/blobs/a9/37647eafe81f85b1e640f565ea4a0f6f95c67d.src","preCode":"  protected void resetPendingCompactionOperations(Stream<Pair<String, CompactionOperation>> operations) {\n    rocksDB.writeBatch(batch -> {\n      operations.forEach(opPair -> {\n        rocksDB.putInBatch(batch, schemaHelper.getColFamilyForPendingCompaction(),\n            schemaHelper.getKeyForPendingCompactionLookup(opPair.getValue().getFileGroupId()), opPair);\n      });\n      LOG.info(\"Initializing pending compaction operations. Count=\" + batch.count());\n    });\n  }\n","realPath":"hudi-common/src/main/java/org/apache/hudi/common/table/view/RocksDbBasedFileSystemView.java","repoName":"hudi","snippetEndLine":0,"snippetStartLine":0,"startLine":99,"status":"M"},{"authorDate":"2020-02-02 18:03:44","commitOrder":3,"curCode":"  protected void addPendingCompactionOperations(Stream<Pair<String, CompactionOperation>> operations) {\n    rocksDB.writeBatch(batch ->\n        operations.forEach(opInstantPair -> {\n          Preconditions.checkArgument(!isPendingCompactionScheduledForFileId(opInstantPair.getValue().getFileGroupId()),\n              \"Duplicate FileGroupId found in pending compaction operations. FgId :\"\n                  + opInstantPair.getValue().getFileGroupId());\n          rocksDB.putInBatch(batch, schemaHelper.getColFamilyForPendingCompaction(),\n              schemaHelper.getKeyForPendingCompactionLookup(opInstantPair.getValue().getFileGroupId()), opInstantPair);\n        })\n    );\n  }\n","date":"2020-02-02 18:03:44","endLine":120,"groupId":"369","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"addPendingCompactionOperations","params":"(Stream<Pair<String@CompactionOperation>>operations)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-hudi-10-0.7/blobInfo/CC_OUT/blobs/a9/37647eafe81f85b1e640f565ea4a0f6f95c67d.src","preCode":"  protected void addPendingCompactionOperations(Stream<Pair<String, CompactionOperation>> operations) {\n    rocksDB.writeBatch(batch -> {\n      operations.forEach(opInstantPair -> {\n        Preconditions.checkArgument(!isPendingCompactionScheduledForFileId(opInstantPair.getValue().getFileGroupId()),\n            \"Duplicate FileGroupId found in pending compaction operations. FgId :\"\n                + opInstantPair.getValue().getFileGroupId());\n        rocksDB.putInBatch(batch, schemaHelper.getColFamilyForPendingCompaction(),\n            schemaHelper.getKeyForPendingCompactionLookup(opInstantPair.getValue().getFileGroupId()), opInstantPair);\n      });\n    });\n  }\n","realPath":"hudi-common/src/main/java/org/apache/hudi/common/table/view/RocksDbBasedFileSystemView.java","repoName":"hudi","snippetEndLine":0,"snippetStartLine":0,"startLine":110,"status":"M"}],"commitId":"5b7bb142dc6712c41fd8ada208ab3186369431f9","commitMessage":"@@@[HUDI-583] Code Cleanup.  remove redundant code.  and other changes (#1237)\n\n","date":"2020-02-02 18:03:44","modifiedFileCount":"65","status":"M","submitter":"Suneel Marthi"},{"authorTime":"2020-03-14 08:28:05","codes":[{"authorDate":"2020-02-02 18:03:44","commitOrder":4,"curCode":"  protected void resetPendingCompactionOperations(Stream<Pair<String, CompactionOperation>> operations) {\n    rocksDB.writeBatch(batch -> {\n      operations.forEach(opPair ->\n          rocksDB.putInBatch(batch, schemaHelper.getColFamilyForPendingCompaction(),\n              schemaHelper.getKeyForPendingCompactionLookup(opPair.getValue().getFileGroupId()), opPair)\n      );\n      LOG.info(\"Initializing pending compaction operations. Count=\" + batch.count());\n    });\n  }\n","date":"2020-02-02 18:03:44","endLine":107,"groupId":"101036","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"resetPendingCompactionOperations","params":"(Stream<Pair<String@CompactionOperation>>operations)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-hudi-10-0.7/blobInfo/CC_OUT/blobs/a9/37647eafe81f85b1e640f565ea4a0f6f95c67d.src","preCode":"  protected void resetPendingCompactionOperations(Stream<Pair<String, CompactionOperation>> operations) {\n    rocksDB.writeBatch(batch -> {\n      operations.forEach(opPair ->\n          rocksDB.putInBatch(batch, schemaHelper.getColFamilyForPendingCompaction(),\n              schemaHelper.getKeyForPendingCompactionLookup(opPair.getValue().getFileGroupId()), opPair)\n      );\n      LOG.info(\"Initializing pending compaction operations. Count=\" + batch.count());\n    });\n  }\n","realPath":"hudi-common/src/main/java/org/apache/hudi/common/table/view/RocksDbBasedFileSystemView.java","repoName":"hudi","snippetEndLine":0,"snippetStartLine":0,"startLine":99,"status":"N"},{"authorDate":"2020-03-14 08:28:05","commitOrder":4,"curCode":"  protected void addPendingCompactionOperations(Stream<Pair<String, CompactionOperation>> operations) {\n    rocksDB.writeBatch(batch ->\n        operations.forEach(opInstantPair -> {\n          ValidationUtils.checkArgument(!isPendingCompactionScheduledForFileId(opInstantPair.getValue().getFileGroupId()),\n              \"Duplicate FileGroupId found in pending compaction operations. FgId :\"\n                  + opInstantPair.getValue().getFileGroupId());\n          rocksDB.putInBatch(batch, schemaHelper.getColFamilyForPendingCompaction(),\n              schemaHelper.getKeyForPendingCompactionLookup(opInstantPair.getValue().getFileGroupId()), opInstantPair);\n        })\n    );\n  }\n","date":"2020-03-14 08:28:05","endLine":120,"groupId":"101036","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"addPendingCompactionOperations","params":"(Stream<Pair<String@CompactionOperation>>operations)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-hudi-10-0.7/blobInfo/CC_OUT/blobs/a8/9ac580331f4461d6cf408c04d6f8f27c8b7fa9.src","preCode":"  protected void addPendingCompactionOperations(Stream<Pair<String, CompactionOperation>> operations) {\n    rocksDB.writeBatch(batch ->\n        operations.forEach(opInstantPair -> {\n          Preconditions.checkArgument(!isPendingCompactionScheduledForFileId(opInstantPair.getValue().getFileGroupId()),\n              \"Duplicate FileGroupId found in pending compaction operations. FgId :\"\n                  + opInstantPair.getValue().getFileGroupId());\n          rocksDB.putInBatch(batch, schemaHelper.getColFamilyForPendingCompaction(),\n              schemaHelper.getKeyForPendingCompactionLookup(opInstantPair.getValue().getFileGroupId()), opInstantPair);\n        })\n    );\n  }\n","realPath":"hudi-common/src/main/java/org/apache/hudi/common/table/view/RocksDbBasedFileSystemView.java","repoName":"hudi","snippetEndLine":0,"snippetStartLine":0,"startLine":110,"status":"M"}],"commitId":"99b7e9eb9ef8827c1e06b7e8621b6be6403b061e","commitMessage":"@@@[HUDI-629]: Replace Guava's Hashing with an equivalent in NumericUtils.java (#1350)\n\n* [HUDI-629]: Replace Guava's Hashing with an equivalent in NumericUtils.java","date":"2020-03-14 08:28:05","modifiedFileCount":"47","status":"M","submitter":"Suneel Marthi"}]
