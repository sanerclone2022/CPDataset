[{"authorTime":"2020-10-02 05:25:29","codes":[{"authorDate":"2020-10-02 05:25:29","commitOrder":1,"curCode":"  public void testsExplicitDefaultQPSResourceAllocator() {\n    HoodieWriteConfig config = getConfig(Option.of(HoodieHBaseIndexConfig.DEFAULT_HBASE_INDEX_QPS_ALLOCATOR_CLASS));\n    SparkHoodieHBaseIndex index = new SparkHoodieHBaseIndex(config);\n    HBaseIndexQPSResourceAllocator hBaseIndexQPSResourceAllocator = index.createQPSResourceAllocator(config);\n    assertEquals(hBaseIndexQPSResourceAllocator.getClass().getName(),\n        DefaultHBaseQPSResourceAllocator.class.getName());\n    assertEquals(config.getHbaseIndexQPSFraction(),\n        hBaseIndexQPSResourceAllocator.acquireQPSResources(config.getHbaseIndexQPSFraction(), 100), 0.0f);\n  }\n","date":"2020-10-02 05:25:29","endLine":56,"groupId":"5810","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testsExplicitDefaultQPSResourceAllocator","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-hudi-10-0.7/blobInfo/CC_OUT/blobs/e9/f8b87a77c65137cd10fd3758d26a4ff50b7fbf.src","preCode":"  public void testsExplicitDefaultQPSResourceAllocator() {\n    HoodieWriteConfig config = getConfig(Option.of(HoodieHBaseIndexConfig.DEFAULT_HBASE_INDEX_QPS_ALLOCATOR_CLASS));\n    SparkHoodieHBaseIndex index = new SparkHoodieHBaseIndex(config);\n    HBaseIndexQPSResourceAllocator hBaseIndexQPSResourceAllocator = index.createQPSResourceAllocator(config);\n    assertEquals(hBaseIndexQPSResourceAllocator.getClass().getName(),\n        DefaultHBaseQPSResourceAllocator.class.getName());\n    assertEquals(config.getHbaseIndexQPSFraction(),\n        hBaseIndexQPSResourceAllocator.acquireQPSResources(config.getHbaseIndexQPSFraction(), 100), 0.0f);\n  }\n","realPath":"hudi-client/hudi-spark-client/src/test/java/org/apache/hudi/index/hbase/TestHBaseQPSResourceAllocator.java","repoName":"hudi","snippetEndLine":0,"snippetStartLine":0,"startLine":48,"status":"B"},{"authorDate":"2020-10-02 05:25:29","commitOrder":1,"curCode":"  public void testsInvalidQPSResourceAllocator() {\n    HoodieWriteConfig config = getConfig(Option.of(\"InvalidResourceAllocatorClassName\"));\n    SparkHoodieHBaseIndex index = new SparkHoodieHBaseIndex(config);\n    HBaseIndexQPSResourceAllocator hBaseIndexQPSResourceAllocator = index.createQPSResourceAllocator(config);\n    assertEquals(hBaseIndexQPSResourceAllocator.getClass().getName(),\n        DefaultHBaseQPSResourceAllocator.class.getName());\n    assertEquals(config.getHbaseIndexQPSFraction(),\n        hBaseIndexQPSResourceAllocator.acquireQPSResources(config.getHbaseIndexQPSFraction(), 100), 0.0f);\n  }\n","date":"2020-10-02 05:25:29","endLine":67,"groupId":"5810","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testsInvalidQPSResourceAllocator","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-hudi-10-0.7/blobInfo/CC_OUT/blobs/e9/f8b87a77c65137cd10fd3758d26a4ff50b7fbf.src","preCode":"  public void testsInvalidQPSResourceAllocator() {\n    HoodieWriteConfig config = getConfig(Option.of(\"InvalidResourceAllocatorClassName\"));\n    SparkHoodieHBaseIndex index = new SparkHoodieHBaseIndex(config);\n    HBaseIndexQPSResourceAllocator hBaseIndexQPSResourceAllocator = index.createQPSResourceAllocator(config);\n    assertEquals(hBaseIndexQPSResourceAllocator.getClass().getName(),\n        DefaultHBaseQPSResourceAllocator.class.getName());\n    assertEquals(config.getHbaseIndexQPSFraction(),\n        hBaseIndexQPSResourceAllocator.acquireQPSResources(config.getHbaseIndexQPSFraction(), 100), 0.0f);\n  }\n","realPath":"hudi-client/hudi-spark-client/src/test/java/org/apache/hudi/index/hbase/TestHBaseQPSResourceAllocator.java","repoName":"hudi","snippetEndLine":0,"snippetStartLine":0,"startLine":59,"status":"B"}],"commitId":"1f7add92916c37b05be270d9c75a9042134ec506","commitMessage":"@@@[HUDI-1089] Refactor hudi-client to support multi-engine (#1827)\n\n- This change breaks `hudi-client` into `hudi-client-common` and `hudi-spark-client` modules \n- Simple usages of Spark using jsc.parallelize() has been redone using EngineContext#map.  EngineContext#flatMap etc\n- Code changes in the PR.  break classes into `BaseXYZ` parent classes with no spark dependencies living in `hudi-client-common`\n- Classes on `hudi-spark-client` are named `SparkXYZ` extending the parent classes with all the Spark dependencies\n- To simplify/cleanup.  HoodieIndex#fetchRecordLocation has been removed and its usages in tests replaced with alternatives\n\nCo-authored-by: Vinoth Chandar <vinoth@apache.org>","date":"2020-10-02 05:25:29","modifiedFileCount":"31","status":"B","submitter":"Mathieu"},{"authorTime":"2020-10-02 05:25:29","codes":[{"authorDate":"2021-07-01 05:26:30","commitOrder":2,"curCode":"  public void testsExplicitDefaultQPSResourceAllocator() {\n    HoodieWriteConfig config = getConfig(Option.of(HoodieHBaseIndexConfig.HBASE_INDEX_QPS_ALLOCATOR_CLASS.defaultValue()));\n    SparkHoodieHBaseIndex index = new SparkHoodieHBaseIndex(config);\n    HBaseIndexQPSResourceAllocator hBaseIndexQPSResourceAllocator = index.createQPSResourceAllocator(config);\n    assertEquals(hBaseIndexQPSResourceAllocator.getClass().getName(),\n        DefaultHBaseQPSResourceAllocator.class.getName());\n    assertEquals(config.getHbaseIndexQPSFraction(),\n        hBaseIndexQPSResourceAllocator.acquireQPSResources(config.getHbaseIndexQPSFraction(), 100), 0.0f);\n  }\n","date":"2021-07-01 05:26:30","endLine":56,"groupId":"5810","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testsExplicitDefaultQPSResourceAllocator","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-hudi-10-0.7/blobInfo/CC_OUT/blobs/9f/52a0110c79ac028faa07fc1d5c96806dd87c05.src","preCode":"  public void testsExplicitDefaultQPSResourceAllocator() {\n    HoodieWriteConfig config = getConfig(Option.of(HoodieHBaseIndexConfig.DEFAULT_HBASE_INDEX_QPS_ALLOCATOR_CLASS));\n    SparkHoodieHBaseIndex index = new SparkHoodieHBaseIndex(config);\n    HBaseIndexQPSResourceAllocator hBaseIndexQPSResourceAllocator = index.createQPSResourceAllocator(config);\n    assertEquals(hBaseIndexQPSResourceAllocator.getClass().getName(),\n        DefaultHBaseQPSResourceAllocator.class.getName());\n    assertEquals(config.getHbaseIndexQPSFraction(),\n        hBaseIndexQPSResourceAllocator.acquireQPSResources(config.getHbaseIndexQPSFraction(), 100), 0.0f);\n  }\n","realPath":"hudi-client/hudi-spark-client/src/test/java/org/apache/hudi/index/hbase/TestHBaseQPSResourceAllocator.java","repoName":"hudi","snippetEndLine":0,"snippetStartLine":0,"startLine":48,"status":"M"},{"authorDate":"2020-10-02 05:25:29","commitOrder":2,"curCode":"  public void testsInvalidQPSResourceAllocator() {\n    HoodieWriteConfig config = getConfig(Option.of(\"InvalidResourceAllocatorClassName\"));\n    SparkHoodieHBaseIndex index = new SparkHoodieHBaseIndex(config);\n    HBaseIndexQPSResourceAllocator hBaseIndexQPSResourceAllocator = index.createQPSResourceAllocator(config);\n    assertEquals(hBaseIndexQPSResourceAllocator.getClass().getName(),\n        DefaultHBaseQPSResourceAllocator.class.getName());\n    assertEquals(config.getHbaseIndexQPSFraction(),\n        hBaseIndexQPSResourceAllocator.acquireQPSResources(config.getHbaseIndexQPSFraction(), 100), 0.0f);\n  }\n","date":"2020-10-02 05:25:29","endLine":67,"groupId":"5810","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testsInvalidQPSResourceAllocator","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-hudi-10-0.7/blobInfo/CC_OUT/blobs/e9/f8b87a77c65137cd10fd3758d26a4ff50b7fbf.src","preCode":"  public void testsInvalidQPSResourceAllocator() {\n    HoodieWriteConfig config = getConfig(Option.of(\"InvalidResourceAllocatorClassName\"));\n    SparkHoodieHBaseIndex index = new SparkHoodieHBaseIndex(config);\n    HBaseIndexQPSResourceAllocator hBaseIndexQPSResourceAllocator = index.createQPSResourceAllocator(config);\n    assertEquals(hBaseIndexQPSResourceAllocator.getClass().getName(),\n        DefaultHBaseQPSResourceAllocator.class.getName());\n    assertEquals(config.getHbaseIndexQPSFraction(),\n        hBaseIndexQPSResourceAllocator.acquireQPSResources(config.getHbaseIndexQPSFraction(), 100), 0.0f);\n  }\n","realPath":"hudi-client/hudi-spark-client/src/test/java/org/apache/hudi/index/hbase/TestHBaseQPSResourceAllocator.java","repoName":"hudi","snippetEndLine":0,"snippetStartLine":0,"startLine":59,"status":"N"}],"commitId":"d412fb2fe642417460532044cac162bb68f4bec4","commitMessage":"@@@[HUDI-89] Add configOption & refactor all configs based on that (#2833)\n\nCo-authored-by: Wenning Ding <wenningd@amazon.com>","date":"2021-07-01 05:26:30","modifiedFileCount":"138","status":"M","submitter":"wenningd"},{"authorTime":"2020-10-02 05:25:29","codes":[{"authorDate":"2021-08-20 04:36:40","commitOrder":3,"curCode":"  public void testsExplicitDefaultQPSResourceAllocator() {\n    HoodieWriteConfig config = getConfig(Option.of(HoodieHBaseIndexConfig.QPS_ALLOCATOR_CLASS_NAME.defaultValue()));\n    SparkHoodieHBaseIndex index = new SparkHoodieHBaseIndex(config);\n    HBaseIndexQPSResourceAllocator hBaseIndexQPSResourceAllocator = index.createQPSResourceAllocator(config);\n    assertEquals(hBaseIndexQPSResourceAllocator.getClass().getName(),\n        DefaultHBaseQPSResourceAllocator.class.getName());\n    assertEquals(config.getHbaseIndexQPSFraction(),\n        hBaseIndexQPSResourceAllocator.acquireQPSResources(config.getHbaseIndexQPSFraction(), 100), 0.0f);\n  }\n","date":"2021-08-20 04:36:40","endLine":56,"groupId":"10617","id":5,"instanceNumber":1,"isCurCommit":1,"methodName":"testsExplicitDefaultQPSResourceAllocator","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-hudi-10-0.7/blobInfo/CC_OUT/blobs/be/80e9d3783318139a02a9acbff455aaf003c77e.src","preCode":"  public void testsExplicitDefaultQPSResourceAllocator() {\n    HoodieWriteConfig config = getConfig(Option.of(HoodieHBaseIndexConfig.HBASE_INDEX_QPS_ALLOCATOR_CLASS.defaultValue()));\n    SparkHoodieHBaseIndex index = new SparkHoodieHBaseIndex(config);\n    HBaseIndexQPSResourceAllocator hBaseIndexQPSResourceAllocator = index.createQPSResourceAllocator(config);\n    assertEquals(hBaseIndexQPSResourceAllocator.getClass().getName(),\n        DefaultHBaseQPSResourceAllocator.class.getName());\n    assertEquals(config.getHbaseIndexQPSFraction(),\n        hBaseIndexQPSResourceAllocator.acquireQPSResources(config.getHbaseIndexQPSFraction(), 100), 0.0f);\n  }\n","realPath":"hudi-client/hudi-spark-client/src/test/java/org/apache/hudi/index/hbase/TestHBaseQPSResourceAllocator.java","repoName":"hudi","snippetEndLine":0,"snippetStartLine":0,"startLine":48,"status":"M"},{"authorDate":"2020-10-02 05:25:29","commitOrder":3,"curCode":"  public void testsInvalidQPSResourceAllocator() {\n    HoodieWriteConfig config = getConfig(Option.of(\"InvalidResourceAllocatorClassName\"));\n    SparkHoodieHBaseIndex index = new SparkHoodieHBaseIndex(config);\n    HBaseIndexQPSResourceAllocator hBaseIndexQPSResourceAllocator = index.createQPSResourceAllocator(config);\n    assertEquals(hBaseIndexQPSResourceAllocator.getClass().getName(),\n        DefaultHBaseQPSResourceAllocator.class.getName());\n    assertEquals(config.getHbaseIndexQPSFraction(),\n        hBaseIndexQPSResourceAllocator.acquireQPSResources(config.getHbaseIndexQPSFraction(), 100), 0.0f);\n  }\n","date":"2020-10-02 05:25:29","endLine":67,"groupId":"10617","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testsInvalidQPSResourceAllocator","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-hudi-10-0.7/blobInfo/CC_OUT/blobs/e9/f8b87a77c65137cd10fd3758d26a4ff50b7fbf.src","preCode":"  public void testsInvalidQPSResourceAllocator() {\n    HoodieWriteConfig config = getConfig(Option.of(\"InvalidResourceAllocatorClassName\"));\n    SparkHoodieHBaseIndex index = new SparkHoodieHBaseIndex(config);\n    HBaseIndexQPSResourceAllocator hBaseIndexQPSResourceAllocator = index.createQPSResourceAllocator(config);\n    assertEquals(hBaseIndexQPSResourceAllocator.getClass().getName(),\n        DefaultHBaseQPSResourceAllocator.class.getName());\n    assertEquals(config.getHbaseIndexQPSFraction(),\n        hBaseIndexQPSResourceAllocator.acquireQPSResources(config.getHbaseIndexQPSFraction(), 100), 0.0f);\n  }\n","realPath":"hudi-client/hudi-spark-client/src/test/java/org/apache/hudi/index/hbase/TestHBaseQPSResourceAllocator.java","repoName":"hudi","snippetEndLine":0,"snippetStartLine":0,"startLine":59,"status":"N"}],"commitId":"c350d05dd3301f14fa9d688746c9de2416db3f11","commitMessage":"@@@Restore 0.8.0 config keys with deprecated annotation (#3506)\n\nCo-authored-by: Sagar Sumit <sagarsumit09@gmail.com>\nCo-authored-by: Vinoth Chandar <vinoth@apache.org>","date":"2021-08-20 04:36:40","modifiedFileCount":"109","status":"M","submitter":"Udit Mehrotra"}]
