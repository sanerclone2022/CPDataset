[{"authorTime":"2020-10-02 05:25:29","codes":[{"authorDate":"2020-12-20 11:25:27","commitOrder":2,"curCode":"  public static JavaHoodieIndex createIndex(HoodieWriteConfig config) {\n    \r\n    if (!StringUtils.isNullOrEmpty(config.getIndexClass())) {\n      Object instance = ReflectionUtils.loadClass(config.getIndexClass(), config);\n      if (!(instance instanceof HoodieIndex)) {\n        throw new HoodieIndexException(config.getIndexClass() + \" is not a subclass of HoodieIndex\");\n      }\n      return (JavaHoodieIndex) instance;\n    }\n\n    \r\n    switch (config.getIndexType()) {\n      case INMEMORY:\n        return new JavaInMemoryHashIndex(config);\n      default:\n        throw new HoodieIndexException(\"Unsupported index type \" + config.getIndexType());\n    }\n  }\n","date":"2020-12-20 11:25:27","endLine":58,"groupId":"2196","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"createIndex","params":"(HoodieWriteConfigconfig)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-hudi-10-0.7/blobInfo/CC_OUT/blobs/3c/ec3fbacd1f01cfcbb6db98a2de4bcc42d1bb23.src","preCode":"  public static JavaHoodieIndex createIndex(HoodieWriteConfig config) {\n    \r\n    if (!StringUtils.isNullOrEmpty(config.getIndexClass())) {\n      Object instance = ReflectionUtils.loadClass(config.getIndexClass(), config);\n      if (!(instance instanceof HoodieIndex)) {\n        throw new HoodieIndexException(config.getIndexClass() + \" is not a subclass of HoodieIndex\");\n      }\n      return (JavaHoodieIndex) instance;\n    }\n\n    \r\n    switch (config.getIndexType()) {\n      case INMEMORY:\n        return new JavaInMemoryHashIndex(config);\n      default:\n        throw new HoodieIndexException(\"Unsupported index type \" + config.getIndexType());\n    }\n  }\n","realPath":"hudi-client/hudi-java-client/src/main/java/org/apache/hudi/index/JavaHoodieIndex.java","repoName":"hudi","snippetEndLine":0,"snippetStartLine":0,"startLine":41,"status":"B"},{"authorDate":"2020-10-02 05:25:29","commitOrder":2,"curCode":"  public static SparkHoodieIndex createIndex(HoodieWriteConfig config) {\n    \r\n    if (!StringUtils.isNullOrEmpty(config.getIndexClass())) {\n      Object instance = ReflectionUtils.loadClass(config.getIndexClass(), config);\n      if (!(instance instanceof HoodieIndex)) {\n        throw new HoodieIndexException(config.getIndexClass() + \" is not a subclass of HoodieIndex\");\n      }\n      return (SparkHoodieIndex) instance;\n    }\n    switch (config.getIndexType()) {\n      case HBASE:\n        return new SparkHoodieHBaseIndex<>(config);\n      case INMEMORY:\n        return new SparkInMemoryHashIndex(config);\n      case BLOOM:\n        return new SparkHoodieBloomIndex<>(config);\n      case GLOBAL_BLOOM:\n        return new SparkHoodieGlobalBloomIndex<>(config);\n      case SIMPLE:\n        return new SparkHoodieSimpleIndex(config);\n      case GLOBAL_SIMPLE:\n        return new SparkHoodieGlobalSimpleIndex(config);\n      default:\n        throw new HoodieIndexException(\"Index type unspecified, set \" + config.getIndexType());\n    }\n  }\n","date":"2020-10-02 05:25:29","endLine":72,"groupId":"2424","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"createIndex","params":"(HoodieWriteConfigconfig)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-hudi-10-0.7/blobInfo/CC_OUT/blobs/dd/73bf2e76568e1d3a9e4d3c58d65ea4f38b85bd.src","preCode":"  public static SparkHoodieIndex createIndex(HoodieWriteConfig config) {\n    \r\n    if (!StringUtils.isNullOrEmpty(config.getIndexClass())) {\n      Object instance = ReflectionUtils.loadClass(config.getIndexClass(), config);\n      if (!(instance instanceof HoodieIndex)) {\n        throw new HoodieIndexException(config.getIndexClass() + \" is not a subclass of HoodieIndex\");\n      }\n      return (SparkHoodieIndex) instance;\n    }\n    switch (config.getIndexType()) {\n      case HBASE:\n        return new SparkHoodieHBaseIndex<>(config);\n      case INMEMORY:\n        return new SparkInMemoryHashIndex(config);\n      case BLOOM:\n        return new SparkHoodieBloomIndex<>(config);\n      case GLOBAL_BLOOM:\n        return new SparkHoodieGlobalBloomIndex<>(config);\n      case SIMPLE:\n        return new SparkHoodieSimpleIndex(config);\n      case GLOBAL_SIMPLE:\n        return new SparkHoodieGlobalSimpleIndex(config);\n      default:\n        throw new HoodieIndexException(\"Index type unspecified, set \" + config.getIndexType());\n    }\n  }\n","realPath":"hudi-client/hudi-spark-client/src/main/java/org/apache/hudi/index/SparkHoodieIndex.java","repoName":"hudi","snippetEndLine":0,"snippetStartLine":0,"startLine":47,"status":"NB"}],"commitId":"e4e2fbc3bb2c4796c6813114dd1c37ffa5a1e03a","commitMessage":"@@@[HUDI-1419] Add base implementation for hudi java client (#2286)\n\n","date":"2020-12-20 11:25:27","modifiedFileCount":"2","status":"M","submitter":"Shen Hong"},{"authorTime":"2020-10-02 05:25:29","codes":[{"authorDate":"2021-03-28 20:28:40","commitOrder":3,"curCode":"  public static HoodieIndex createIndex(HoodieWriteConfig config) {\n    \r\n    if (!StringUtils.isNullOrEmpty(config.getIndexClass())) {\n      Object instance = ReflectionUtils.loadClass(config.getIndexClass(), config);\n      if (!(instance instanceof HoodieIndex)) {\n        throw new HoodieIndexException(config.getIndexClass() + \" is not a subclass of HoodieIndex\");\n      }\n      return (JavaHoodieIndex) instance;\n    }\n\n    \r\n    switch (config.getIndexType()) {\n      case INMEMORY:\n        return new JavaInMemoryHashIndex(config);\n      case BLOOM:\n        return new JavaHoodieBloomIndex(config);\n      default:\n        throw new HoodieIndexException(\"Unsupported index type \" + config.getIndexType());\n    }\n  }\n","date":"2021-03-28 20:28:40","endLine":60,"groupId":"10509","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"createIndex","params":"(HoodieWriteConfigconfig)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-hudi-10-0.7/blobInfo/CC_OUT/blobs/fc/7a451dcf34e73c0167d4f52715c5c36df05772.src","preCode":"  public static JavaHoodieIndex createIndex(HoodieWriteConfig config) {\n    \r\n    if (!StringUtils.isNullOrEmpty(config.getIndexClass())) {\n      Object instance = ReflectionUtils.loadClass(config.getIndexClass(), config);\n      if (!(instance instanceof HoodieIndex)) {\n        throw new HoodieIndexException(config.getIndexClass() + \" is not a subclass of HoodieIndex\");\n      }\n      return (JavaHoodieIndex) instance;\n    }\n\n    \r\n    switch (config.getIndexType()) {\n      case INMEMORY:\n        return new JavaInMemoryHashIndex(config);\n      default:\n        throw new HoodieIndexException(\"Unsupported index type \" + config.getIndexType());\n    }\n  }\n","realPath":"hudi-client/hudi-java-client/src/main/java/org/apache/hudi/index/JavaHoodieIndex.java","repoName":"hudi","snippetEndLine":0,"snippetStartLine":0,"startLine":41,"status":"M"},{"authorDate":"2020-10-02 05:25:29","commitOrder":3,"curCode":"  public static SparkHoodieIndex createIndex(HoodieWriteConfig config) {\n    \r\n    if (!StringUtils.isNullOrEmpty(config.getIndexClass())) {\n      Object instance = ReflectionUtils.loadClass(config.getIndexClass(), config);\n      if (!(instance instanceof HoodieIndex)) {\n        throw new HoodieIndexException(config.getIndexClass() + \" is not a subclass of HoodieIndex\");\n      }\n      return (SparkHoodieIndex) instance;\n    }\n    switch (config.getIndexType()) {\n      case HBASE:\n        return new SparkHoodieHBaseIndex<>(config);\n      case INMEMORY:\n        return new SparkInMemoryHashIndex(config);\n      case BLOOM:\n        return new SparkHoodieBloomIndex<>(config);\n      case GLOBAL_BLOOM:\n        return new SparkHoodieGlobalBloomIndex<>(config);\n      case SIMPLE:\n        return new SparkHoodieSimpleIndex(config);\n      case GLOBAL_SIMPLE:\n        return new SparkHoodieGlobalSimpleIndex(config);\n      default:\n        throw new HoodieIndexException(\"Index type unspecified, set \" + config.getIndexType());\n    }\n  }\n","date":"2020-10-02 05:25:29","endLine":72,"groupId":"10509","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"createIndex","params":"(HoodieWriteConfigconfig)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-hudi-10-0.7/blobInfo/CC_OUT/blobs/dd/73bf2e76568e1d3a9e4d3c58d65ea4f38b85bd.src","preCode":"  public static SparkHoodieIndex createIndex(HoodieWriteConfig config) {\n    \r\n    if (!StringUtils.isNullOrEmpty(config.getIndexClass())) {\n      Object instance = ReflectionUtils.loadClass(config.getIndexClass(), config);\n      if (!(instance instanceof HoodieIndex)) {\n        throw new HoodieIndexException(config.getIndexClass() + \" is not a subclass of HoodieIndex\");\n      }\n      return (SparkHoodieIndex) instance;\n    }\n    switch (config.getIndexType()) {\n      case HBASE:\n        return new SparkHoodieHBaseIndex<>(config);\n      case INMEMORY:\n        return new SparkInMemoryHashIndex(config);\n      case BLOOM:\n        return new SparkHoodieBloomIndex<>(config);\n      case GLOBAL_BLOOM:\n        return new SparkHoodieGlobalBloomIndex<>(config);\n      case SIMPLE:\n        return new SparkHoodieSimpleIndex(config);\n      case GLOBAL_SIMPLE:\n        return new SparkHoodieGlobalSimpleIndex(config);\n      default:\n        throw new HoodieIndexException(\"Index type unspecified, set \" + config.getIndexType());\n    }\n  }\n","realPath":"hudi-client/hudi-spark-client/src/main/java/org/apache/hudi/index/SparkHoodieIndex.java","repoName":"hudi","snippetEndLine":0,"snippetStartLine":0,"startLine":47,"status":"N"}],"commitId":"ecbd389a3f9215e219cb19b8641f2faea4fa3ad7","commitMessage":"@@@[HUDI-1478] Introduce HoodieBloomIndex to hudi-java-client (#2608)\n\n","date":"2021-03-28 20:28:40","modifiedFileCount":"3","status":"M","submitter":"Shen Hong"}]
