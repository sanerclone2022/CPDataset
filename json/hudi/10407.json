[{"authorTime":"2021-04-06 19:06:41","codes":[{"authorDate":"2021-04-06 19:06:41","commitOrder":3,"curCode":"  public void testReceiveInvalidEvent() {\n    CompletableFuture<byte[]> future = new CompletableFuture<>();\n    coordinator.checkpointCoordinator(1, future);\n    OperatorEvent event = BatchWriteSuccessEvent.builder()\n        .taskID(0)\n        .instantTime(\"abc\")\n        .writeStatus(Collections.emptyList())\n        .build();\n\n    assertError(() -> coordinator.handleEventFromOperator(0, event),\n        \"Receive an unexpected event for instant abc from task 0\");\n  }\n","date":"2021-04-06 19:06:41","endLine":143,"groupId":"1215","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testReceiveInvalidEvent","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-hudi-10-0.7/blobInfo/CC_OUT/blobs/0a/fd41418bc095c3f7e060b3981095845e5a72b6.src","preCode":"  public void testReceiveInvalidEvent() {\n    CompletableFuture<byte[]> future = new CompletableFuture<>();\n    coordinator.checkpointCoordinator(1, future);\n    OperatorEvent event = BatchWriteSuccessEvent.builder()\n        .taskID(0)\n        .instantTime(\"abc\")\n        .writeStatus(Collections.emptyList())\n        .build();\n\n    assertError(() -> coordinator.handleEventFromOperator(0, event),\n        \"Receive an unexpected event for instant abc from task 0\");\n  }\n","realPath":"hudi-flink/src/test/java/org/apache/hudi/sink/TestStreamWriteOperatorCoordinator.java","repoName":"hudi","snippetEndLine":0,"snippetStartLine":0,"startLine":132,"status":"MB"},{"authorDate":"2021-04-06 19:06:41","commitOrder":3,"curCode":"  public void testCheckpointCompleteWithPartialEvents() {\n    final CompletableFuture<byte[]> future = new CompletableFuture<>();\n    coordinator.checkpointCoordinator(1, future);\n    String instant = coordinator.getInstant();\n    OperatorEvent event = BatchWriteSuccessEvent.builder()\n        .taskID(0)\n        .instantTime(instant)\n        .writeStatus(Collections.emptyList())\n        .build();\n    coordinator.handleEventFromOperator(0, event);\n\n    assertDoesNotThrow(() -> coordinator.notifyCheckpointComplete(1),\n        \"Returns early for empty write results\");\n    String lastCompleted = coordinator.getWriteClient().getLastCompletedInstant(FlinkOptions.TABLE_TYPE_COPY_ON_WRITE);\n    assertNull(lastCompleted, \"Returns early for empty write results\");\n    assertNull(coordinator.getEventBuffer()[0]);\n\n    WriteStatus writeStatus1 = new WriteStatus(false, 0.2D);\n    writeStatus1.setPartitionPath(\"par2\");\n    writeStatus1.setStat(new HoodieWriteStat());\n    OperatorEvent event1 = BatchWriteSuccessEvent.builder()\n        .taskID(1)\n        .instantTime(instant)\n        .writeStatus(Collections.singletonList(writeStatus1))\n        .isLastBatch(true)\n        .build();\n    coordinator.handleEventFromOperator(1, event1);\n    assertDoesNotThrow(() -> coordinator.notifyCheckpointComplete(2),\n        \"Commits the instant with partial events anyway\");\n    lastCompleted = coordinator.getWriteClient().getLastCompletedInstant(FlinkOptions.TABLE_TYPE_COPY_ON_WRITE);\n    assertThat(\"Commits the instant with partial events anyway\", lastCompleted, is(instant));\n  }\n","date":"2021-04-06 19:06:41","endLine":177,"groupId":"4848","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testCheckpointCompleteWithPartialEvents","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-hudi-10-0.7/blobInfo/CC_OUT/blobs/0a/fd41418bc095c3f7e060b3981095845e5a72b6.src","preCode":"  public void testCheckpointCompleteWithPartialEvents() {\n    final CompletableFuture<byte[]> future = new CompletableFuture<>();\n    coordinator.checkpointCoordinator(1, future);\n    String instant = coordinator.getInstant();\n    OperatorEvent event = BatchWriteSuccessEvent.builder()\n        .taskID(0)\n        .instantTime(instant)\n        .writeStatus(Collections.emptyList())\n        .build();\n    coordinator.handleEventFromOperator(0, event);\n\n    assertDoesNotThrow(() -> coordinator.notifyCheckpointComplete(1),\n        \"Returns early for empty write results\");\n    String lastCompleted = coordinator.getWriteClient().getLastCompletedInstant(FlinkOptions.TABLE_TYPE_COPY_ON_WRITE);\n    assertNull(lastCompleted, \"Returns early for empty write results\");\n    assertNull(coordinator.getEventBuffer()[0]);\n\n    WriteStatus writeStatus1 = new WriteStatus(false, 0.2D);\n    writeStatus1.setPartitionPath(\"par2\");\n    writeStatus1.setStat(new HoodieWriteStat());\n    OperatorEvent event1 = BatchWriteSuccessEvent.builder()\n        .taskID(1)\n        .instantTime(instant)\n        .writeStatus(Collections.singletonList(writeStatus1))\n        .isLastBatch(true)\n        .build();\n    coordinator.handleEventFromOperator(1, event1);\n    assertDoesNotThrow(() -> coordinator.notifyCheckpointComplete(2),\n        \"Commits the instant with partial events anyway\");\n    lastCompleted = coordinator.getWriteClient().getLastCompletedInstant(FlinkOptions.TABLE_TYPE_COPY_ON_WRITE);\n    assertThat(\"Commits the instant with partial events anyway\", lastCompleted, is(instant));\n  }\n","realPath":"hudi-flink/src/test/java/org/apache/hudi/sink/TestStreamWriteOperatorCoordinator.java","repoName":"hudi","snippetEndLine":0,"snippetStartLine":0,"startLine":146,"status":"B"}],"commitId":"9c369c607df2816ea2cd1221fb6d879e3fb8f74c","commitMessage":"@@@[HUDI-1757] Assigns the buckets by record key for Flink writer (#2757)\n\nCurrently we assign the buckets by record partition path which could\ncause hotspot if the partition field is datetime type. Changes to assign\nbuckets by grouping the record whth their key first.  the assignment is\nvalid if only there is no conflict(two task write to the same bucket).\n\nThis patch also changes the coordinator execution to be asynchronous.","date":"2021-04-06 19:06:41","modifiedFileCount":"23","status":"M","submitter":"Danny Chan"},{"authorTime":"2021-04-14 10:23:37","codes":[{"authorDate":"2021-04-06 19:06:41","commitOrder":4,"curCode":"  public void testReceiveInvalidEvent() {\n    CompletableFuture<byte[]> future = new CompletableFuture<>();\n    coordinator.checkpointCoordinator(1, future);\n    OperatorEvent event = BatchWriteSuccessEvent.builder()\n        .taskID(0)\n        .instantTime(\"abc\")\n        .writeStatus(Collections.emptyList())\n        .build();\n\n    assertError(() -> coordinator.handleEventFromOperator(0, event),\n        \"Receive an unexpected event for instant abc from task 0\");\n  }\n","date":"2021-04-06 19:06:41","endLine":143,"groupId":"1215","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testReceiveInvalidEvent","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-hudi-10-0.7/blobInfo/CC_OUT/blobs/0a/fd41418bc095c3f7e060b3981095845e5a72b6.src","preCode":"  public void testReceiveInvalidEvent() {\n    CompletableFuture<byte[]> future = new CompletableFuture<>();\n    coordinator.checkpointCoordinator(1, future);\n    OperatorEvent event = BatchWriteSuccessEvent.builder()\n        .taskID(0)\n        .instantTime(\"abc\")\n        .writeStatus(Collections.emptyList())\n        .build();\n\n    assertError(() -> coordinator.handleEventFromOperator(0, event),\n        \"Receive an unexpected event for instant abc from task 0\");\n  }\n","realPath":"hudi-flink/src/test/java/org/apache/hudi/sink/TestStreamWriteOperatorCoordinator.java","repoName":"hudi","snippetEndLine":0,"snippetStartLine":0,"startLine":132,"status":"N"},{"authorDate":"2021-04-14 10:23:37","commitOrder":4,"curCode":"  public void testCheckpointCompleteWithPartialEvents() {\n    final CompletableFuture<byte[]> future = new CompletableFuture<>();\n    coordinator.checkpointCoordinator(1, future);\n    String instant = coordinator.getInstant();\n    OperatorEvent event = BatchWriteSuccessEvent.builder()\n        .taskID(0)\n        .instantTime(instant)\n        .writeStatus(Collections.emptyList())\n        .build();\n    coordinator.handleEventFromOperator(0, event);\n\n    assertDoesNotThrow(() -> coordinator.notifyCheckpointComplete(1),\n        \"Returns early for empty write results\");\n    String lastCompleted = coordinator.getWriteClient().getLastCompletedInstant(HoodieTableType.COPY_ON_WRITE);\n    assertNull(lastCompleted, \"Returns early for empty write results\");\n    assertNull(coordinator.getEventBuffer()[0]);\n\n    WriteStatus writeStatus1 = new WriteStatus(false, 0.2D);\n    writeStatus1.setPartitionPath(\"par2\");\n    writeStatus1.setStat(new HoodieWriteStat());\n    OperatorEvent event1 = BatchWriteSuccessEvent.builder()\n        .taskID(1)\n        .instantTime(instant)\n        .writeStatus(Collections.singletonList(writeStatus1))\n        .isLastBatch(true)\n        .build();\n    coordinator.handleEventFromOperator(1, event1);\n    assertDoesNotThrow(() -> coordinator.notifyCheckpointComplete(2),\n        \"Commits the instant with partial events anyway\");\n    lastCompleted = coordinator.getWriteClient().getLastCompletedInstant(HoodieTableType.COPY_ON_WRITE);\n    assertThat(\"Commits the instant with partial events anyway\", lastCompleted, is(instant));\n  }\n","date":"2021-04-14 10:23:37","endLine":177,"groupId":"4848","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testCheckpointCompleteWithPartialEvents","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-hudi-10-0.7/blobInfo/CC_OUT/blobs/a2/fdf227f4c203e5ceb03c7acfb92e68e92c86a3.src","preCode":"  public void testCheckpointCompleteWithPartialEvents() {\n    final CompletableFuture<byte[]> future = new CompletableFuture<>();\n    coordinator.checkpointCoordinator(1, future);\n    String instant = coordinator.getInstant();\n    OperatorEvent event = BatchWriteSuccessEvent.builder()\n        .taskID(0)\n        .instantTime(instant)\n        .writeStatus(Collections.emptyList())\n        .build();\n    coordinator.handleEventFromOperator(0, event);\n\n    assertDoesNotThrow(() -> coordinator.notifyCheckpointComplete(1),\n        \"Returns early for empty write results\");\n    String lastCompleted = coordinator.getWriteClient().getLastCompletedInstant(FlinkOptions.TABLE_TYPE_COPY_ON_WRITE);\n    assertNull(lastCompleted, \"Returns early for empty write results\");\n    assertNull(coordinator.getEventBuffer()[0]);\n\n    WriteStatus writeStatus1 = new WriteStatus(false, 0.2D);\n    writeStatus1.setPartitionPath(\"par2\");\n    writeStatus1.setStat(new HoodieWriteStat());\n    OperatorEvent event1 = BatchWriteSuccessEvent.builder()\n        .taskID(1)\n        .instantTime(instant)\n        .writeStatus(Collections.singletonList(writeStatus1))\n        .isLastBatch(true)\n        .build();\n    coordinator.handleEventFromOperator(1, event1);\n    assertDoesNotThrow(() -> coordinator.notifyCheckpointComplete(2),\n        \"Commits the instant with partial events anyway\");\n    lastCompleted = coordinator.getWriteClient().getLastCompletedInstant(FlinkOptions.TABLE_TYPE_COPY_ON_WRITE);\n    assertThat(\"Commits the instant with partial events anyway\", lastCompleted, is(instant));\n  }\n","realPath":"hudi-flink/src/test/java/org/apache/hudi/sink/TestStreamWriteOperatorCoordinator.java","repoName":"hudi","snippetEndLine":0,"snippetStartLine":0,"startLine":146,"status":"M"}],"commitId":"ab4a7b0b4afc66d2123c7f63fdab77b925a8a7f1","commitMessage":"@@@[HUDI-1788] Insert overwrite (table) for Flink writer (#2808)\n\nSupports `INSERT OVERWRITE` and `INSERT OVERWRITE TABLE` for Flink\nwriter.","date":"2021-04-14 10:23:37","modifiedFileCount":"19","status":"M","submitter":"Danny Chan"},{"authorTime":"2021-06-29 08:53:52","codes":[{"authorDate":"2021-06-29 08:53:52","commitOrder":5,"curCode":"  public void testReceiveInvalidEvent() {\n    CompletableFuture<byte[]> future = new CompletableFuture<>();\n    coordinator.checkpointCoordinator(1, future);\n    OperatorEvent event = WriteMetadataEvent.builder()\n        .taskID(0)\n        .instantTime(\"abc\")\n        .writeStatus(Collections.emptyList())\n        .build();\n\n    assertError(() -> coordinator.handleEventFromOperator(0, event),\n        \"Receive an unexpected event for instant abc from task 0\");\n  }\n","date":"2021-06-29 08:53:52","endLine":160,"groupId":"1215","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testReceiveInvalidEvent","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-hudi-10-0.7/blobInfo/CC_OUT/blobs/61/2bb79663306f3956e136e602b6709ea78d4792.src","preCode":"  public void testReceiveInvalidEvent() {\n    CompletableFuture<byte[]> future = new CompletableFuture<>();\n    coordinator.checkpointCoordinator(1, future);\n    OperatorEvent event = BatchWriteSuccessEvent.builder()\n        .taskID(0)\n        .instantTime(\"abc\")\n        .writeStatus(Collections.emptyList())\n        .build();\n\n    assertError(() -> coordinator.handleEventFromOperator(0, event),\n        \"Receive an unexpected event for instant abc from task 0\");\n  }\n","realPath":"hudi-flink/src/test/java/org/apache/hudi/sink/TestStreamWriteOperatorCoordinator.java","repoName":"hudi","snippetEndLine":0,"snippetStartLine":0,"startLine":149,"status":"M"},{"authorDate":"2021-06-29 08:53:52","commitOrder":5,"curCode":"  public void testCheckpointCompleteWithPartialEvents() {\n    final CompletableFuture<byte[]> future = new CompletableFuture<>();\n    coordinator.checkpointCoordinator(1, future);\n    String instant = coordinator.getInstant();\n    OperatorEvent event = WriteMetadataEvent.builder()\n        .taskID(0)\n        .instantTime(instant)\n        .writeStatus(Collections.emptyList())\n        .build();\n    coordinator.handleEventFromOperator(0, event);\n\n    assertDoesNotThrow(() -> coordinator.notifyCheckpointComplete(1),\n        \"Returns early for empty write results\");\n    String lastCompleted = coordinator.getWriteClient().getLastCompletedInstant(HoodieTableType.COPY_ON_WRITE);\n    assertNull(lastCompleted, \"Returns early for empty write results\");\n    assertNull(coordinator.getEventBuffer()[0]);\n\n    WriteStatus writeStatus1 = new WriteStatus(false, 0.2D);\n    writeStatus1.setPartitionPath(\"par2\");\n    writeStatus1.setStat(new HoodieWriteStat());\n    OperatorEvent event1 = WriteMetadataEvent.builder()\n        .taskID(1)\n        .instantTime(instant)\n        .writeStatus(Collections.singletonList(writeStatus1))\n        .isLastBatch(true)\n        .build();\n    coordinator.handleEventFromOperator(1, event1);\n    assertDoesNotThrow(() -> coordinator.notifyCheckpointComplete(2),\n        \"Commits the instant with partial events anyway\");\n    lastCompleted = coordinator.getWriteClient().getLastCompletedInstant(HoodieTableType.COPY_ON_WRITE);\n    assertThat(\"Commits the instant with partial events anyway\", lastCompleted, is(instant));\n  }\n","date":"2021-06-29 08:53:52","endLine":194,"groupId":"4848","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testCheckpointCompleteWithPartialEvents","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-hudi-10-0.7/blobInfo/CC_OUT/blobs/61/2bb79663306f3956e136e602b6709ea78d4792.src","preCode":"  public void testCheckpointCompleteWithPartialEvents() {\n    final CompletableFuture<byte[]> future = new CompletableFuture<>();\n    coordinator.checkpointCoordinator(1, future);\n    String instant = coordinator.getInstant();\n    OperatorEvent event = BatchWriteSuccessEvent.builder()\n        .taskID(0)\n        .instantTime(instant)\n        .writeStatus(Collections.emptyList())\n        .build();\n    coordinator.handleEventFromOperator(0, event);\n\n    assertDoesNotThrow(() -> coordinator.notifyCheckpointComplete(1),\n        \"Returns early for empty write results\");\n    String lastCompleted = coordinator.getWriteClient().getLastCompletedInstant(HoodieTableType.COPY_ON_WRITE);\n    assertNull(lastCompleted, \"Returns early for empty write results\");\n    assertNull(coordinator.getEventBuffer()[0]);\n\n    WriteStatus writeStatus1 = new WriteStatus(false, 0.2D);\n    writeStatus1.setPartitionPath(\"par2\");\n    writeStatus1.setStat(new HoodieWriteStat());\n    OperatorEvent event1 = BatchWriteSuccessEvent.builder()\n        .taskID(1)\n        .instantTime(instant)\n        .writeStatus(Collections.singletonList(writeStatus1))\n        .isLastBatch(true)\n        .build();\n    coordinator.handleEventFromOperator(1, event1);\n    assertDoesNotThrow(() -> coordinator.notifyCheckpointComplete(2),\n        \"Commits the instant with partial events anyway\");\n    lastCompleted = coordinator.getWriteClient().getLastCompletedInstant(HoodieTableType.COPY_ON_WRITE);\n    assertThat(\"Commits the instant with partial events anyway\", lastCompleted, is(instant));\n  }\n","realPath":"hudi-flink/src/test/java/org/apache/hudi/sink/TestStreamWriteOperatorCoordinator.java","repoName":"hudi","snippetEndLine":0,"snippetStartLine":0,"startLine":163,"status":"M"}],"commitId":"37b7c65d8a3ede00ae16909a06e31c24f179998c","commitMessage":"@@@[HUDI-2084] Resend the uncommitted write metadata when start up (#3168)\n\nCo-authored-by: ??? <yuzhaojing@bilibili.com>","date":"2021-06-29 08:53:52","modifiedFileCount":"12","status":"M","submitter":"yuzhaojing"},{"authorTime":"2021-07-06 09:02:38","codes":[{"authorDate":"2021-06-29 08:53:52","commitOrder":6,"curCode":"  public void testReceiveInvalidEvent() {\n    CompletableFuture<byte[]> future = new CompletableFuture<>();\n    coordinator.checkpointCoordinator(1, future);\n    OperatorEvent event = WriteMetadataEvent.builder()\n        .taskID(0)\n        .instantTime(\"abc\")\n        .writeStatus(Collections.emptyList())\n        .build();\n\n    assertError(() -> coordinator.handleEventFromOperator(0, event),\n        \"Receive an unexpected event for instant abc from task 0\");\n  }\n","date":"2021-06-29 08:53:52","endLine":160,"groupId":"1215","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"testReceiveInvalidEvent","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-hudi-10-0.7/blobInfo/CC_OUT/blobs/61/2bb79663306f3956e136e602b6709ea78d4792.src","preCode":"  public void testReceiveInvalidEvent() {\n    CompletableFuture<byte[]> future = new CompletableFuture<>();\n    coordinator.checkpointCoordinator(1, future);\n    OperatorEvent event = WriteMetadataEvent.builder()\n        .taskID(0)\n        .instantTime(\"abc\")\n        .writeStatus(Collections.emptyList())\n        .build();\n\n    assertError(() -> coordinator.handleEventFromOperator(0, event),\n        \"Receive an unexpected event for instant abc from task 0\");\n  }\n","realPath":"hudi-flink/src/test/java/org/apache/hudi/sink/TestStreamWriteOperatorCoordinator.java","repoName":"hudi","snippetEndLine":0,"snippetStartLine":0,"startLine":149,"status":"N"},{"authorDate":"2021-07-06 09:02:38","commitOrder":6,"curCode":"  public void testCheckpointCompleteWithPartialEvents() {\n    final CompletableFuture<byte[]> future = new CompletableFuture<>();\n    coordinator.checkpointCoordinator(1, future);\n    String instant = coordinator.getInstant();\n    OperatorEvent event = WriteMetadataEvent.builder()\n        .taskID(0)\n        .instantTime(instant)\n        .writeStatus(Collections.emptyList())\n        .build();\n    coordinator.handleEventFromOperator(0, event);\n\n    assertDoesNotThrow(() -> coordinator.notifyCheckpointComplete(1),\n        \"Returns early for empty write results\");\n    String lastCompleted = coordinator.getWriteClient().getLastCompletedInstant(HoodieTableType.COPY_ON_WRITE);\n    assertNull(lastCompleted, \"Returns early for empty write results\");\n    assertNull(coordinator.getEventBuffer()[0]);\n\n    WriteStatus writeStatus1 = new WriteStatus(false, 0.2D);\n    writeStatus1.setPartitionPath(\"par2\");\n    writeStatus1.setStat(new HoodieWriteStat());\n    OperatorEvent event1 = WriteMetadataEvent.builder()\n        .taskID(1)\n        .instantTime(instant)\n        .writeStatus(Collections.singletonList(writeStatus1))\n        .lastBatch(true)\n        .build();\n    coordinator.handleEventFromOperator(1, event1);\n    assertDoesNotThrow(() -> coordinator.notifyCheckpointComplete(2),\n        \"Commits the instant with partial events anyway\");\n    lastCompleted = coordinator.getWriteClient().getLastCompletedInstant(HoodieTableType.COPY_ON_WRITE);\n    assertThat(\"Commits the instant with partial events anyway\", lastCompleted, is(instant));\n  }\n","date":"2021-07-06 09:02:38","endLine":194,"groupId":"4848","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"testCheckpointCompleteWithPartialEvents","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-hudi-10-0.7/blobInfo/CC_OUT/blobs/2f/d0ca4040eb7ac41a87f1540877041057113ae5.src","preCode":"  public void testCheckpointCompleteWithPartialEvents() {\n    final CompletableFuture<byte[]> future = new CompletableFuture<>();\n    coordinator.checkpointCoordinator(1, future);\n    String instant = coordinator.getInstant();\n    OperatorEvent event = WriteMetadataEvent.builder()\n        .taskID(0)\n        .instantTime(instant)\n        .writeStatus(Collections.emptyList())\n        .build();\n    coordinator.handleEventFromOperator(0, event);\n\n    assertDoesNotThrow(() -> coordinator.notifyCheckpointComplete(1),\n        \"Returns early for empty write results\");\n    String lastCompleted = coordinator.getWriteClient().getLastCompletedInstant(HoodieTableType.COPY_ON_WRITE);\n    assertNull(lastCompleted, \"Returns early for empty write results\");\n    assertNull(coordinator.getEventBuffer()[0]);\n\n    WriteStatus writeStatus1 = new WriteStatus(false, 0.2D);\n    writeStatus1.setPartitionPath(\"par2\");\n    writeStatus1.setStat(new HoodieWriteStat());\n    OperatorEvent event1 = WriteMetadataEvent.builder()\n        .taskID(1)\n        .instantTime(instant)\n        .writeStatus(Collections.singletonList(writeStatus1))\n        .isLastBatch(true)\n        .build();\n    coordinator.handleEventFromOperator(1, event1);\n    assertDoesNotThrow(() -> coordinator.notifyCheckpointComplete(2),\n        \"Commits the instant with partial events anyway\");\n    lastCompleted = coordinator.getWriteClient().getLastCompletedInstant(HoodieTableType.COPY_ON_WRITE);\n    assertThat(\"Commits the instant with partial events anyway\", lastCompleted, is(instant));\n  }\n","realPath":"hudi-flink/src/test/java/org/apache/hudi/sink/TestStreamWriteOperatorCoordinator.java","repoName":"hudi","snippetEndLine":0,"snippetStartLine":0,"startLine":163,"status":"M"}],"commitId":"32bd8ce088e0f1d82577575ac048e1a44d44e380","commitMessage":"@@@[HUDI-2132] Make coordinator events as POJO for efficient serialization (#3223)\n\n","date":"2021-07-06 09:02:38","modifiedFileCount":"4","status":"M","submitter":"Danny Chan"},{"authorTime":"2021-08-04 10:54:55","codes":[{"authorDate":"2021-06-29 08:53:52","commitOrder":7,"curCode":"  public void testReceiveInvalidEvent() {\n    CompletableFuture<byte[]> future = new CompletableFuture<>();\n    coordinator.checkpointCoordinator(1, future);\n    OperatorEvent event = WriteMetadataEvent.builder()\n        .taskID(0)\n        .instantTime(\"abc\")\n        .writeStatus(Collections.emptyList())\n        .build();\n\n    assertError(() -> coordinator.handleEventFromOperator(0, event),\n        \"Receive an unexpected event for instant abc from task 0\");\n  }\n","date":"2021-06-29 08:53:52","endLine":160,"groupId":"10407","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"testReceiveInvalidEvent","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-hudi-10-0.7/blobInfo/CC_OUT/blobs/61/2bb79663306f3956e136e602b6709ea78d4792.src","preCode":"  public void testReceiveInvalidEvent() {\n    CompletableFuture<byte[]> future = new CompletableFuture<>();\n    coordinator.checkpointCoordinator(1, future);\n    OperatorEvent event = WriteMetadataEvent.builder()\n        .taskID(0)\n        .instantTime(\"abc\")\n        .writeStatus(Collections.emptyList())\n        .build();\n\n    assertError(() -> coordinator.handleEventFromOperator(0, event),\n        \"Receive an unexpected event for instant abc from task 0\");\n  }\n","realPath":"hudi-flink/src/test/java/org/apache/hudi/sink/TestStreamWriteOperatorCoordinator.java","repoName":"hudi","snippetEndLine":0,"snippetStartLine":0,"startLine":149,"status":"N"},{"authorDate":"2021-08-04 10:54:55","commitOrder":7,"curCode":"  public void testCheckpointCompleteWithPartialEvents() {\n    final CompletableFuture<byte[]> future = new CompletableFuture<>();\n    coordinator.checkpointCoordinator(1, future);\n    String instant = coordinator.getInstant();\n    OperatorEvent event = WriteMetadataEvent.builder()\n        .taskID(0)\n        .instantTime(instant)\n        .writeStatus(Collections.emptyList())\n        .build();\n    coordinator.handleEventFromOperator(0, event);\n\n    assertDoesNotThrow(() -> coordinator.notifyCheckpointComplete(1),\n        \"Returns early for empty write results\");\n    String lastCompleted = coordinator.getWriteClient().getLastCompletedInstant(HoodieTableType.COPY_ON_WRITE);\n    assertNull(lastCompleted, \"Returns early for empty write results\");\n    assertNull(coordinator.getEventBuffer()[0]);\n\n    OperatorEvent event1 = createOperatorEvent(1, instant, \"par2\", false, 0.2);\n    coordinator.handleEventFromOperator(1, event1);\n    assertDoesNotThrow(() -> coordinator.notifyCheckpointComplete(2),\n        \"Commits the instant with partial events anyway\");\n    lastCompleted = coordinator.getWriteClient().getLastCompletedInstant(HoodieTableType.COPY_ON_WRITE);\n    assertThat(\"Commits the instant with partial events anyway\", lastCompleted, is(instant));\n  }\n","date":"2021-08-04 10:54:55","endLine":158,"groupId":"10407","id":10,"instanceNumber":2,"isCurCommit":1,"methodName":"testCheckpointCompleteWithPartialEvents","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-hudi-10-0.7/blobInfo/CC_OUT/blobs/f3/79893229db8947e75739237166979099f81db0.src","preCode":"  public void testCheckpointCompleteWithPartialEvents() {\n    final CompletableFuture<byte[]> future = new CompletableFuture<>();\n    coordinator.checkpointCoordinator(1, future);\n    String instant = coordinator.getInstant();\n    OperatorEvent event = WriteMetadataEvent.builder()\n        .taskID(0)\n        .instantTime(instant)\n        .writeStatus(Collections.emptyList())\n        .build();\n    coordinator.handleEventFromOperator(0, event);\n\n    assertDoesNotThrow(() -> coordinator.notifyCheckpointComplete(1),\n        \"Returns early for empty write results\");\n    String lastCompleted = coordinator.getWriteClient().getLastCompletedInstant(HoodieTableType.COPY_ON_WRITE);\n    assertNull(lastCompleted, \"Returns early for empty write results\");\n    assertNull(coordinator.getEventBuffer()[0]);\n\n    WriteStatus writeStatus1 = new WriteStatus(false, 0.2D);\n    writeStatus1.setPartitionPath(\"par2\");\n    writeStatus1.setStat(new HoodieWriteStat());\n    OperatorEvent event1 = WriteMetadataEvent.builder()\n        .taskID(1)\n        .instantTime(instant)\n        .writeStatus(Collections.singletonList(writeStatus1))\n        .lastBatch(true)\n        .build();\n    coordinator.handleEventFromOperator(1, event1);\n    assertDoesNotThrow(() -> coordinator.notifyCheckpointComplete(2),\n        \"Commits the instant with partial events anyway\");\n    lastCompleted = coordinator.getWriteClient().getLastCompletedInstant(HoodieTableType.COPY_ON_WRITE);\n    assertThat(\"Commits the instant with partial events anyway\", lastCompleted, is(instant));\n  }\n","realPath":"hudi-flink/src/test/java/org/apache/hudi/sink/TestStreamWriteOperatorCoordinator.java","repoName":"hudi","snippetEndLine":0,"snippetStartLine":0,"startLine":135,"status":"M"}],"commitId":"02331fc223ca1272e3a9039c6563b9d511a8fbef","commitMessage":"@@@[HUDI-2258] Metadata table for flink (#3381)\n\n","date":"2021-08-04 10:54:55","modifiedFileCount":"17","status":"M","submitter":"Danny Chan"}]
