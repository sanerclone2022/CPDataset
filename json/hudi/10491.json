[{"authorTime":"2020-10-02 05:25:29","codes":[{"authorDate":"2020-12-20 11:25:27","commitOrder":2,"curCode":"  protected Iterator<List<WriteStatus>> handleUpsertPartition(String instantTime, Integer partition, Iterator recordItr,\n                                                              Partitioner partitioner) {\n    UpsertPartitioner upsertPartitioner = (UpsertPartitioner) partitioner;\n    BucketInfo binfo = upsertPartitioner.getBucketInfo(partition);\n    BucketType btype = binfo.bucketType;\n    try {\n      if (btype.equals(BucketType.INSERT)) {\n        return handleInsert(binfo.fileIdPrefix, recordItr);\n      } else if (btype.equals(BucketType.UPDATE)) {\n        return handleUpdate(binfo.partitionPath, binfo.fileIdPrefix, recordItr);\n      } else {\n        throw new HoodieUpsertException(\"Unknown bucketType \" + btype + \" for partition :\" + partition);\n      }\n    } catch (Throwable t) {\n      String msg = \"Error upserting bucketType \" + btype + \" for partition :\" + partition;\n      LOG.error(msg, t);\n      throw new HoodieUpsertException(msg, t);\n    }\n  }\n","date":"2020-12-20 11:25:27","endLine":247,"groupId":"997","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"handleUpsertPartition","params":"(StringinstantTime@Integerpartition@IteratorrecordItr@Partitionerpartitioner)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-hudi-10-0.7/blobInfo/CC_OUT/blobs/17/b02e8c15259b31f7b792f54a80aaf838ff7e92.src","preCode":"  protected Iterator<List<WriteStatus>> handleUpsertPartition(String instantTime, Integer partition, Iterator recordItr,\n                                                              Partitioner partitioner) {\n    UpsertPartitioner upsertPartitioner = (UpsertPartitioner) partitioner;\n    BucketInfo binfo = upsertPartitioner.getBucketInfo(partition);\n    BucketType btype = binfo.bucketType;\n    try {\n      if (btype.equals(BucketType.INSERT)) {\n        return handleInsert(binfo.fileIdPrefix, recordItr);\n      } else if (btype.equals(BucketType.UPDATE)) {\n        return handleUpdate(binfo.partitionPath, binfo.fileIdPrefix, recordItr);\n      } else {\n        throw new HoodieUpsertException(\"Unknown bucketType \" + btype + \" for partition :\" + partition);\n      }\n    } catch (Throwable t) {\n      String msg = \"Error upserting bucketType \" + btype + \" for partition :\" + partition;\n      LOG.error(msg, t);\n      throw new HoodieUpsertException(msg, t);\n    }\n  }\n","realPath":"hudi-client/hudi-java-client/src/main/java/org/apache/hudi/table/action/commit/BaseJavaCommitActionExecutor.java","repoName":"hudi","snippetEndLine":0,"snippetStartLine":0,"startLine":229,"status":"B"},{"authorDate":"2020-10-02 05:25:29","commitOrder":2,"curCode":"  protected Iterator<List<WriteStatus>> handleUpsertPartition(String instantTime, Integer partition, Iterator recordItr,\n                                                              Partitioner partitioner) {\n    UpsertPartitioner upsertPartitioner = (UpsertPartitioner) partitioner;\n    BucketInfo binfo = upsertPartitioner.getBucketInfo(partition);\n    BucketType btype = binfo.bucketType;\n    try {\n      if (btype.equals(BucketType.INSERT)) {\n        return handleInsert(binfo.fileIdPrefix, recordItr);\n      } else if (btype.equals(BucketType.UPDATE)) {\n        return handleUpdate(binfo.partitionPath, binfo.fileIdPrefix, recordItr);\n      } else {\n        throw new HoodieUpsertException(\"Unknown bucketType \" + btype + \" for partition :\" + partition);\n      }\n    } catch (Throwable t) {\n      String msg = \"Error upserting bucketType \" + btype + \" for partition :\" + partition;\n      LOG.error(msg, t);\n      throw new HoodieUpsertException(msg, t);\n    }\n  }\n","date":"2020-10-02 05:25:29","endLine":258,"groupId":"997","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"handleUpsertPartition","params":"(StringinstantTime@Integerpartition@IteratorrecordItr@Partitionerpartitioner)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-hudi-10-0.7/blobInfo/CC_OUT/blobs/36/cca8cd1403c5fe6ced6d0b42aa6684081520d7.src","preCode":"  protected Iterator<List<WriteStatus>> handleUpsertPartition(String instantTime, Integer partition, Iterator recordItr,\n                                                              Partitioner partitioner) {\n    UpsertPartitioner upsertPartitioner = (UpsertPartitioner) partitioner;\n    BucketInfo binfo = upsertPartitioner.getBucketInfo(partition);\n    BucketType btype = binfo.bucketType;\n    try {\n      if (btype.equals(BucketType.INSERT)) {\n        return handleInsert(binfo.fileIdPrefix, recordItr);\n      } else if (btype.equals(BucketType.UPDATE)) {\n        return handleUpdate(binfo.partitionPath, binfo.fileIdPrefix, recordItr);\n      } else {\n        throw new HoodieUpsertException(\"Unknown bucketType \" + btype + \" for partition :\" + partition);\n      }\n    } catch (Throwable t) {\n      String msg = \"Error upserting bucketType \" + btype + \" for partition :\" + partition;\n      LOG.error(msg, t);\n      throw new HoodieUpsertException(msg, t);\n    }\n  }\n","realPath":"hudi-client/hudi-spark-client/src/main/java/org/apache/hudi/table/action/commit/BaseSparkCommitActionExecutor.java","repoName":"hudi","snippetEndLine":0,"snippetStartLine":0,"startLine":240,"status":"NB"}],"commitId":"e4e2fbc3bb2c4796c6813114dd1c37ffa5a1e03a","commitMessage":"@@@[HUDI-1419] Add base implementation for hudi java client (#2286)\n\n","date":"2020-12-20 11:25:27","modifiedFileCount":"2","status":"M","submitter":"Shen Hong"},{"authorTime":"2020-10-02 05:25:29","codes":[{"authorDate":"2021-03-31 11:06:04","commitOrder":3,"curCode":"  protected Iterator<List<WriteStatus>> handleUpsertPartition(String instantTime, Integer partition, Iterator recordItr,\n                                                              Partitioner partitioner) {\n    JavaUpsertPartitioner javaUpsertPartitioner = (JavaUpsertPartitioner) partitioner;\n    BucketInfo binfo = javaUpsertPartitioner.getBucketInfo(partition);\n    BucketType btype = binfo.bucketType;\n    try {\n      if (btype.equals(BucketType.INSERT)) {\n        return handleInsert(binfo.fileIdPrefix, recordItr);\n      } else if (btype.equals(BucketType.UPDATE)) {\n        return handleUpdate(binfo.partitionPath, binfo.fileIdPrefix, recordItr);\n      } else {\n        throw new HoodieUpsertException(\"Unknown bucketType \" + btype + \" for partition :\" + partition);\n      }\n    } catch (Throwable t) {\n      String msg = \"Error upserting bucketType \" + btype + \" for partition :\" + partition;\n      LOG.error(msg, t);\n      throw new HoodieUpsertException(msg, t);\n    }\n  }\n","date":"2021-03-31 11:06:04","endLine":247,"groupId":"10491","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"handleUpsertPartition","params":"(StringinstantTime@Integerpartition@IteratorrecordItr@Partitionerpartitioner)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-hudi-10-0.7/blobInfo/CC_OUT/blobs/76/5823e77ca089248651f3ebc242c935255333d2.src","preCode":"  protected Iterator<List<WriteStatus>> handleUpsertPartition(String instantTime, Integer partition, Iterator recordItr,\n                                                              Partitioner partitioner) {\n    UpsertPartitioner upsertPartitioner = (UpsertPartitioner) partitioner;\n    BucketInfo binfo = upsertPartitioner.getBucketInfo(partition);\n    BucketType btype = binfo.bucketType;\n    try {\n      if (btype.equals(BucketType.INSERT)) {\n        return handleInsert(binfo.fileIdPrefix, recordItr);\n      } else if (btype.equals(BucketType.UPDATE)) {\n        return handleUpdate(binfo.partitionPath, binfo.fileIdPrefix, recordItr);\n      } else {\n        throw new HoodieUpsertException(\"Unknown bucketType \" + btype + \" for partition :\" + partition);\n      }\n    } catch (Throwable t) {\n      String msg = \"Error upserting bucketType \" + btype + \" for partition :\" + partition;\n      LOG.error(msg, t);\n      throw new HoodieUpsertException(msg, t);\n    }\n  }\n","realPath":"hudi-client/hudi-java-client/src/main/java/org/apache/hudi/table/action/commit/BaseJavaCommitActionExecutor.java","repoName":"hudi","snippetEndLine":0,"snippetStartLine":0,"startLine":229,"status":"M"},{"authorDate":"2020-10-02 05:25:29","commitOrder":3,"curCode":"  protected Iterator<List<WriteStatus>> handleUpsertPartition(String instantTime, Integer partition, Iterator recordItr,\n                                                              Partitioner partitioner) {\n    UpsertPartitioner upsertPartitioner = (UpsertPartitioner) partitioner;\n    BucketInfo binfo = upsertPartitioner.getBucketInfo(partition);\n    BucketType btype = binfo.bucketType;\n    try {\n      if (btype.equals(BucketType.INSERT)) {\n        return handleInsert(binfo.fileIdPrefix, recordItr);\n      } else if (btype.equals(BucketType.UPDATE)) {\n        return handleUpdate(binfo.partitionPath, binfo.fileIdPrefix, recordItr);\n      } else {\n        throw new HoodieUpsertException(\"Unknown bucketType \" + btype + \" for partition :\" + partition);\n      }\n    } catch (Throwable t) {\n      String msg = \"Error upserting bucketType \" + btype + \" for partition :\" + partition;\n      LOG.error(msg, t);\n      throw new HoodieUpsertException(msg, t);\n    }\n  }\n","date":"2020-10-02 05:25:29","endLine":258,"groupId":"10491","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"handleUpsertPartition","params":"(StringinstantTime@Integerpartition@IteratorrecordItr@Partitionerpartitioner)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-hudi-10-0.7/blobInfo/CC_OUT/blobs/36/cca8cd1403c5fe6ced6d0b42aa6684081520d7.src","preCode":"  protected Iterator<List<WriteStatus>> handleUpsertPartition(String instantTime, Integer partition, Iterator recordItr,\n                                                              Partitioner partitioner) {\n    UpsertPartitioner upsertPartitioner = (UpsertPartitioner) partitioner;\n    BucketInfo binfo = upsertPartitioner.getBucketInfo(partition);\n    BucketType btype = binfo.bucketType;\n    try {\n      if (btype.equals(BucketType.INSERT)) {\n        return handleInsert(binfo.fileIdPrefix, recordItr);\n      } else if (btype.equals(BucketType.UPDATE)) {\n        return handleUpdate(binfo.partitionPath, binfo.fileIdPrefix, recordItr);\n      } else {\n        throw new HoodieUpsertException(\"Unknown bucketType \" + btype + \" for partition :\" + partition);\n      }\n    } catch (Throwable t) {\n      String msg = \"Error upserting bucketType \" + btype + \" for partition :\" + partition;\n      LOG.error(msg, t);\n      throw new HoodieUpsertException(msg, t);\n    }\n  }\n","realPath":"hudi-client/hudi-spark-client/src/main/java/org/apache/hudi/table/action/commit/BaseSparkCommitActionExecutor.java","repoName":"hudi","snippetEndLine":0,"snippetStartLine":0,"startLine":240,"status":"N"}],"commitId":"8bc65b93189e249be43fe6cba2387ca83babc2c8","commitMessage":"@@@[HUDI-1731] Rename UpsertPartitioner in hudi-java-client (#2734)\n\nCo-authored-by: lei.zhu <lei.zhu@envisioncn.com>","date":"2021-03-31 11:06:04","modifiedFileCount":"1","status":"M","submitter":"leo-Iamok"}]
