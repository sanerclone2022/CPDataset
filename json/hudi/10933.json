[{"authorTime":"2019-08-12 08:48:17","codes":[{"authorDate":"2019-08-12 08:48:17","commitOrder":1,"curCode":"  public void testParsing() throws IOException {\n    DFSPropertiesConfiguration cfg = new DFSPropertiesConfiguration(dfs, new Path(dfsBasePath + \"/t1.props\"));\n    TypedProperties props = cfg.getConfig();\n    assertEquals(5, props.size());\n    try {\n      props.getString(\"invalid.key\");\n      fail(\"Should error out here.\");\n    } catch (IllegalArgumentException iae) {  }\n\n    assertEquals(123, props.getInteger(\"int.prop\"));\n    assertEquals(113.4, props.getDouble(\"double.prop\"), 0.001);\n    assertEquals(true, props.getBoolean(\"boolean.prop\"));\n    assertEquals(\"str\", props.getString(\"string.prop\"));\n    assertEquals(1354354354, props.getLong(\"long.prop\"));\n\n    assertEquals(123, props.getInteger(\"int.prop\", 456));\n    assertEquals(113.4, props.getDouble(\"double.prop\", 223.4), 0.001);\n    assertEquals(true, props.getBoolean(\"boolean.prop\", false));\n    assertEquals(\"str\", props.getString(\"string.prop\", \"default\"));\n    assertEquals(1354354354, props.getLong(\"long.prop\", 8578494434L));\n\n    assertEquals(456, props.getInteger(\"bad.int.prop\", 456));\n    assertEquals(223.4, props.getDouble(\"bad.double.prop\", 223.4), 0.001);\n    assertEquals(false, props.getBoolean(\"bad.boolean.prop\", false));\n    assertEquals(\"default\", props.getString(\"bad.string.prop\", \"default\"));\n    assertEquals(8578494434L, props.getLong(\"bad.long.prop\", 8578494434L));\n  }\n","date":"2019-08-12 08:48:17","endLine":120,"groupId":"4032","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testParsing","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-hudi-10-0.7/blobInfo/CC_OUT/blobs/36/d37a686f543437e2f51ea9559e8ef94a548847.src","preCode":"  public void testParsing() throws IOException {\n    DFSPropertiesConfiguration cfg = new DFSPropertiesConfiguration(dfs, new Path(dfsBasePath + \"/t1.props\"));\n    TypedProperties props = cfg.getConfig();\n    assertEquals(5, props.size());\n    try {\n      props.getString(\"invalid.key\");\n      fail(\"Should error out here.\");\n    } catch (IllegalArgumentException iae) {  }\n\n    assertEquals(123, props.getInteger(\"int.prop\"));\n    assertEquals(113.4, props.getDouble(\"double.prop\"), 0.001);\n    assertEquals(true, props.getBoolean(\"boolean.prop\"));\n    assertEquals(\"str\", props.getString(\"string.prop\"));\n    assertEquals(1354354354, props.getLong(\"long.prop\"));\n\n    assertEquals(123, props.getInteger(\"int.prop\", 456));\n    assertEquals(113.4, props.getDouble(\"double.prop\", 223.4), 0.001);\n    assertEquals(true, props.getBoolean(\"boolean.prop\", false));\n    assertEquals(\"str\", props.getString(\"string.prop\", \"default\"));\n    assertEquals(1354354354, props.getLong(\"long.prop\", 8578494434L));\n\n    assertEquals(456, props.getInteger(\"bad.int.prop\", 456));\n    assertEquals(223.4, props.getDouble(\"bad.double.prop\", 223.4), 0.001);\n    assertEquals(false, props.getBoolean(\"bad.boolean.prop\", false));\n    assertEquals(\"default\", props.getString(\"bad.string.prop\", \"default\"));\n    assertEquals(8578494434L, props.getLong(\"bad.long.prop\", 8578494434L));\n  }\n","realPath":"hudi-common/src/test/java/org/apache/hudi/common/util/TestDFSPropertiesConfiguration.java","repoName":"hudi","snippetEndLine":0,"snippetStartLine":0,"startLine":94,"status":"B"},{"authorDate":"2019-08-12 08:48:17","commitOrder":1,"curCode":"  public void testIncludes() {\n    DFSPropertiesConfiguration cfg = new DFSPropertiesConfiguration(dfs, new Path(dfsBasePath + \"/t3.props\"));\n    TypedProperties props = cfg.getConfig();\n\n    assertEquals(123, props.getInteger(\"int.prop\"));\n    assertEquals(243.4, props.getDouble(\"double.prop\"), 0.001);\n    assertEquals(true, props.getBoolean(\"boolean.prop\"));\n    assertEquals(\"t3.value\", props.getString(\"string.prop\"));\n    assertEquals(1354354354, props.getLong(\"long.prop\"));\n\n    try {\n      new DFSPropertiesConfiguration(dfs, new Path(dfsBasePath + \"/t4.props\"));\n      fail(\"Should error out on a self-included file.\");\n    } catch (IllegalStateException ise) {  }\n  }\n","date":"2019-08-12 08:48:17","endLine":137,"groupId":"4033","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testIncludes","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-hudi-10-0.7/blobInfo/CC_OUT/blobs/36/d37a686f543437e2f51ea9559e8ef94a548847.src","preCode":"  public void testIncludes() {\n    DFSPropertiesConfiguration cfg = new DFSPropertiesConfiguration(dfs, new Path(dfsBasePath + \"/t3.props\"));\n    TypedProperties props = cfg.getConfig();\n\n    assertEquals(123, props.getInteger(\"int.prop\"));\n    assertEquals(243.4, props.getDouble(\"double.prop\"), 0.001);\n    assertEquals(true, props.getBoolean(\"boolean.prop\"));\n    assertEquals(\"t3.value\", props.getString(\"string.prop\"));\n    assertEquals(1354354354, props.getLong(\"long.prop\"));\n\n    try {\n      new DFSPropertiesConfiguration(dfs, new Path(dfsBasePath + \"/t4.props\"));\n      fail(\"Should error out on a self-included file.\");\n    } catch (IllegalStateException ise) {  }\n  }\n","realPath":"hudi-common/src/test/java/org/apache/hudi/common/util/TestDFSPropertiesConfiguration.java","repoName":"hudi","snippetEndLine":0,"snippetStartLine":0,"startLine":123,"status":"B"}],"commitId":"a4f9d7575f39bb79089714049ffea12ba5f25ec8","commitMessage":"@@@HUDI-123 Rename code packages/constants to org.apache.hudi (#830)\n\n- Rename com.uber.hoodie to org.apache.hudi\n- Flag to pass com.uber.hoodie Input formats for hoodie-sync\n- Works with HUDI demo. \n- Also tested for backwards compatibility with datasets built by com.uber.hoodie packages\n- Migration guide : https://cwiki.apache.org/confluence/display/HUDI/Migration+Guide+From+com.uber.hoodie+to+org.apache.hudi","date":"2019-08-12 08:48:17","modifiedFileCount":"0","status":"B","submitter":"Balaji Varadarajan"},{"authorTime":"2019-12-29 17:30:06","codes":[{"authorDate":"2019-12-29 17:30:06","commitOrder":2,"curCode":"  public void testParsing() {\n    DFSPropertiesConfiguration cfg = new DFSPropertiesConfiguration(dfs, new Path(dfsBasePath + \"/t1.props\"));\n    TypedProperties props = cfg.getConfig();\n    assertEquals(5, props.size());\n    try {\n      props.getString(\"invalid.key\");\n      fail(\"Should error out here.\");\n    } catch (IllegalArgumentException iae) {\n      \r\n    }\n\n    assertEquals(123, props.getInteger(\"int.prop\"));\n    assertEquals(113.4, props.getDouble(\"double.prop\"), 0.001);\n    assertTrue(props.getBoolean(\"boolean.prop\"));\n    assertEquals(\"str\", props.getString(\"string.prop\"));\n    assertEquals(1354354354, props.getLong(\"long.prop\"));\n\n    assertEquals(123, props.getInteger(\"int.prop\", 456));\n    assertEquals(113.4, props.getDouble(\"double.prop\", 223.4), 0.001);\n    assertTrue(props.getBoolean(\"boolean.prop\", false));\n    assertEquals(\"str\", props.getString(\"string.prop\", \"default\"));\n    assertEquals(1354354354, props.getLong(\"long.prop\", 8578494434L));\n\n    assertEquals(456, props.getInteger(\"bad.int.prop\", 456));\n    assertEquals(223.4, props.getDouble(\"bad.double.prop\", 223.4), 0.001);\n    assertFalse(props.getBoolean(\"bad.boolean.prop\", false));\n    assertEquals(\"default\", props.getString(\"bad.string.prop\", \"default\"));\n    assertEquals(8578494434L, props.getLong(\"bad.long.prop\", 8578494434L));\n  }\n","date":"2020-01-01 03:10:49","endLine":118,"groupId":"5960","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testParsing","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-hudi-10-0.7/blobInfo/CC_OUT/blobs/79/4a7e2adafe48e41e705b4d25a07c428a4c4fc1.src","preCode":"  public void testParsing() throws IOException {\n    DFSPropertiesConfiguration cfg = new DFSPropertiesConfiguration(dfs, new Path(dfsBasePath + \"/t1.props\"));\n    TypedProperties props = cfg.getConfig();\n    assertEquals(5, props.size());\n    try {\n      props.getString(\"invalid.key\");\n      fail(\"Should error out here.\");\n    } catch (IllegalArgumentException iae) {\n      \r\n    }\n\n    assertEquals(123, props.getInteger(\"int.prop\"));\n    assertEquals(113.4, props.getDouble(\"double.prop\"), 0.001);\n    assertEquals(true, props.getBoolean(\"boolean.prop\"));\n    assertEquals(\"str\", props.getString(\"string.prop\"));\n    assertEquals(1354354354, props.getLong(\"long.prop\"));\n\n    assertEquals(123, props.getInteger(\"int.prop\", 456));\n    assertEquals(113.4, props.getDouble(\"double.prop\", 223.4), 0.001);\n    assertEquals(true, props.getBoolean(\"boolean.prop\", false));\n    assertEquals(\"str\", props.getString(\"string.prop\", \"default\"));\n    assertEquals(1354354354, props.getLong(\"long.prop\", 8578494434L));\n\n    assertEquals(456, props.getInteger(\"bad.int.prop\", 456));\n    assertEquals(223.4, props.getDouble(\"bad.double.prop\", 223.4), 0.001);\n    assertEquals(false, props.getBoolean(\"bad.boolean.prop\", false));\n    assertEquals(\"default\", props.getString(\"bad.string.prop\", \"default\"));\n    assertEquals(8578494434L, props.getLong(\"bad.long.prop\", 8578494434L));\n  }\n","realPath":"hudi-common/src/test/java/org/apache/hudi/common/util/TestDFSPropertiesConfiguration.java","repoName":"hudi","snippetEndLine":0,"snippetStartLine":0,"startLine":90,"status":"M"},{"authorDate":"2019-12-29 17:30:06","commitOrder":2,"curCode":"  public void testIncludes() {\n    DFSPropertiesConfiguration cfg = new DFSPropertiesConfiguration(dfs, new Path(dfsBasePath + \"/t3.props\"));\n    TypedProperties props = cfg.getConfig();\n\n    assertEquals(123, props.getInteger(\"int.prop\"));\n    assertEquals(243.4, props.getDouble(\"double.prop\"), 0.001);\n    assertTrue(props.getBoolean(\"boolean.prop\"));\n    assertEquals(\"t3.value\", props.getString(\"string.prop\"));\n    assertEquals(1354354354, props.getLong(\"long.prop\"));\n\n    try {\n      new DFSPropertiesConfiguration(dfs, new Path(dfsBasePath + \"/t4.props\"));\n      fail(\"Should error out on a self-included file.\");\n    } catch (IllegalStateException ise) {\n      \r\n    }\n  }\n","date":"2020-01-01 03:10:49","endLine":137,"groupId":"5955","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testIncludes","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-hudi-10-0.7/blobInfo/CC_OUT/blobs/79/4a7e2adafe48e41e705b4d25a07c428a4c4fc1.src","preCode":"  public void testIncludes() {\n    DFSPropertiesConfiguration cfg = new DFSPropertiesConfiguration(dfs, new Path(dfsBasePath + \"/t3.props\"));\n    TypedProperties props = cfg.getConfig();\n\n    assertEquals(123, props.getInteger(\"int.prop\"));\n    assertEquals(243.4, props.getDouble(\"double.prop\"), 0.001);\n    assertEquals(true, props.getBoolean(\"boolean.prop\"));\n    assertEquals(\"t3.value\", props.getString(\"string.prop\"));\n    assertEquals(1354354354, props.getLong(\"long.prop\"));\n\n    try {\n      new DFSPropertiesConfiguration(dfs, new Path(dfsBasePath + \"/t4.props\"));\n      fail(\"Should error out on a self-included file.\");\n    } catch (IllegalStateException ise) {\n      \r\n    }\n  }\n","realPath":"hudi-common/src/test/java/org/apache/hudi/common/util/TestDFSPropertiesConfiguration.java","repoName":"hudi","snippetEndLine":0,"snippetStartLine":0,"startLine":121,"status":"M"}],"commitId":"dde21e7315739c108567307813f4b816dd9f1920","commitMessage":"@@@[HUDI-402]: code clean up in test cases\n","date":"2020-01-01 03:10:49","modifiedFileCount":"62","status":"M","submitter":"Pratyaksh Sharma"},{"authorTime":"2020-05-06 19:15:20","codes":[{"authorDate":"2020-05-06 19:15:20","commitOrder":3,"curCode":"  public void testParsing() {\n    DFSPropertiesConfiguration cfg = new DFSPropertiesConfiguration(dfs, new Path(dfsBasePath + \"/t1.props\"));\n    TypedProperties props = cfg.getConfig();\n    assertEquals(5, props.size());\n    assertThrows(IllegalArgumentException.class, () -> {\n      props.getString(\"invalid.key\");\n    }, \"Should error out here.\");\n\n    assertEquals(123, props.getInteger(\"int.prop\"));\n    assertEquals(113.4, props.getDouble(\"double.prop\"), 0.001);\n    assertTrue(props.getBoolean(\"boolean.prop\"));\n    assertEquals(\"str\", props.getString(\"string.prop\"));\n    assertEquals(1354354354, props.getLong(\"long.prop\"));\n\n    assertEquals(123, props.getInteger(\"int.prop\", 456));\n    assertEquals(113.4, props.getDouble(\"double.prop\", 223.4), 0.001);\n    assertTrue(props.getBoolean(\"boolean.prop\", false));\n    assertEquals(\"str\", props.getString(\"string.prop\", \"default\"));\n    assertEquals(1354354354, props.getLong(\"long.prop\", 8578494434L));\n\n    assertEquals(456, props.getInteger(\"bad.int.prop\", 456));\n    assertEquals(223.4, props.getDouble(\"bad.double.prop\", 223.4), 0.001);\n    assertFalse(props.getBoolean(\"bad.boolean.prop\", false));\n    assertEquals(\"default\", props.getString(\"bad.string.prop\", \"default\"));\n    assertEquals(8578494434L, props.getLong(\"bad.long.prop\", 8578494434L));\n  }\n","date":"2020-05-06 19:15:20","endLine":117,"groupId":"10933","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testParsing","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-hudi-10-0.7/blobInfo/CC_OUT/blobs/79/2eded41a2eb6e8be8aee807c8b6f6fdc3d84b9.src","preCode":"  public void testParsing() {\n    DFSPropertiesConfiguration cfg = new DFSPropertiesConfiguration(dfs, new Path(dfsBasePath + \"/t1.props\"));\n    TypedProperties props = cfg.getConfig();\n    assertEquals(5, props.size());\n    try {\n      props.getString(\"invalid.key\");\n      fail(\"Should error out here.\");\n    } catch (IllegalArgumentException iae) {\n      \r\n    }\n\n    assertEquals(123, props.getInteger(\"int.prop\"));\n    assertEquals(113.4, props.getDouble(\"double.prop\"), 0.001);\n    assertTrue(props.getBoolean(\"boolean.prop\"));\n    assertEquals(\"str\", props.getString(\"string.prop\"));\n    assertEquals(1354354354, props.getLong(\"long.prop\"));\n\n    assertEquals(123, props.getInteger(\"int.prop\", 456));\n    assertEquals(113.4, props.getDouble(\"double.prop\", 223.4), 0.001);\n    assertTrue(props.getBoolean(\"boolean.prop\", false));\n    assertEquals(\"str\", props.getString(\"string.prop\", \"default\"));\n    assertEquals(1354354354, props.getLong(\"long.prop\", 8578494434L));\n\n    assertEquals(456, props.getInteger(\"bad.int.prop\", 456));\n    assertEquals(223.4, props.getDouble(\"bad.double.prop\", 223.4), 0.001);\n    assertFalse(props.getBoolean(\"bad.boolean.prop\", false));\n    assertEquals(\"default\", props.getString(\"bad.string.prop\", \"default\"));\n    assertEquals(8578494434L, props.getLong(\"bad.long.prop\", 8578494434L));\n  }\n","realPath":"hudi-common/src/test/java/org/apache/hudi/common/util/TestDFSPropertiesConfiguration.java","repoName":"hudi","snippetEndLine":0,"snippetStartLine":0,"startLine":92,"status":"M"},{"authorDate":"2020-05-06 19:15:20","commitOrder":3,"curCode":"  public void testIncludes() {\n    DFSPropertiesConfiguration cfg = new DFSPropertiesConfiguration(dfs, new Path(dfsBasePath + \"/t3.props\"));\n    TypedProperties props = cfg.getConfig();\n\n    assertEquals(123, props.getInteger(\"int.prop\"));\n    assertEquals(243.4, props.getDouble(\"double.prop\"), 0.001);\n    assertTrue(props.getBoolean(\"boolean.prop\"));\n    assertEquals(\"t3.value\", props.getString(\"string.prop\"));\n    assertEquals(1354354354, props.getLong(\"long.prop\"));\n    assertThrows(IllegalStateException.class, () -> {\n      new DFSPropertiesConfiguration(dfs, new Path(dfsBasePath + \"/t4.props\"));\n    }, \"Should error out on a self-included file.\");\n  }\n","date":"2020-05-06 19:15:20","endLine":132,"groupId":"10933","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testIncludes","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-hudi-10-0.7/blobInfo/CC_OUT/blobs/79/2eded41a2eb6e8be8aee807c8b6f6fdc3d84b9.src","preCode":"  public void testIncludes() {\n    DFSPropertiesConfiguration cfg = new DFSPropertiesConfiguration(dfs, new Path(dfsBasePath + \"/t3.props\"));\n    TypedProperties props = cfg.getConfig();\n\n    assertEquals(123, props.getInteger(\"int.prop\"));\n    assertEquals(243.4, props.getDouble(\"double.prop\"), 0.001);\n    assertTrue(props.getBoolean(\"boolean.prop\"));\n    assertEquals(\"t3.value\", props.getString(\"string.prop\"));\n    assertEquals(1354354354, props.getLong(\"long.prop\"));\n\n    try {\n      new DFSPropertiesConfiguration(dfs, new Path(dfsBasePath + \"/t4.props\"));\n      fail(\"Should error out on a self-included file.\");\n    } catch (IllegalStateException ise) {\n      \r\n    }\n  }\n","realPath":"hudi-common/src/test/java/org/apache/hudi/common/util/TestDFSPropertiesConfiguration.java","repoName":"hudi","snippetEndLine":0,"snippetStartLine":0,"startLine":120,"status":"M"}],"commitId":"366bb10d8c4fe98424f09a6cf6f4aee7716451a4","commitMessage":"@@@[HUDI-812] Migrate hudi common tests to JUnit 5 (#1590)\n\n* [HUDI-812] Migrate hudi-common tests to JUnit 5","date":"2020-05-06 19:15:20","modifiedFileCount":"38","status":"M","submitter":"Raymond Xu"}]
