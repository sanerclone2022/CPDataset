[{"authorTime":"2021-01-06 20:49:44","codes":[{"authorDate":"2020-08-06 12:34:55","commitOrder":2,"curCode":"  private static HoodieCommitMetadata createPartitions(int numberOfPartitions, boolean isParquetSchemaSimple,\n      boolean useSchemaFromCommitMetadata, DateTime startFrom, String instantTime) throws IOException, URISyntaxException {\n    startFrom = startFrom.withTimeAtStartOfDay();\n\n    HoodieCommitMetadata commitMetadata = new HoodieCommitMetadata();\n    for (int i = 0; i < numberOfPartitions; i++) {\n      String partitionPath = dtfOut.print(startFrom);\n      Path partPath = new Path(hiveSyncConfig.basePath + \"/\" + partitionPath);\n      fileSystem.makeQualified(partPath);\n      fileSystem.mkdirs(partPath);\n      List<HoodieWriteStat> writeStats = createTestData(partPath, isParquetSchemaSimple, instantTime);\n      startFrom = startFrom.minusDays(1);\n      writeStats.forEach(s -> commitMetadata.addWriteStat(partitionPath, s));\n    }\n    addSchemaToCommitMetadata(commitMetadata, isParquetSchemaSimple, useSchemaFromCommitMetadata);\n    return commitMetadata;\n  }\n","date":"2020-08-06 12:34:55","endLine":267,"groupId":"3198","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"createPartitions","params":"(intnumberOfPartitions@booleanisParquetSchemaSimple@booleanuseSchemaFromCommitMetadata@DateTimestartFrom@StringinstantTime)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-hudi-10-0.7/blobInfo/CC_OUT/blobs/d0/d1b667aea20b9592b845de9833ace73a3ed40a.src","preCode":"  private static HoodieCommitMetadata createPartitions(int numberOfPartitions, boolean isParquetSchemaSimple,\n      boolean useSchemaFromCommitMetadata, DateTime startFrom, String instantTime) throws IOException, URISyntaxException {\n    startFrom = startFrom.withTimeAtStartOfDay();\n\n    HoodieCommitMetadata commitMetadata = new HoodieCommitMetadata();\n    for (int i = 0; i < numberOfPartitions; i++) {\n      String partitionPath = dtfOut.print(startFrom);\n      Path partPath = new Path(hiveSyncConfig.basePath + \"/\" + partitionPath);\n      fileSystem.makeQualified(partPath);\n      fileSystem.mkdirs(partPath);\n      List<HoodieWriteStat> writeStats = createTestData(partPath, isParquetSchemaSimple, instantTime);\n      startFrom = startFrom.minusDays(1);\n      writeStats.forEach(s -> commitMetadata.addWriteStat(partitionPath, s));\n    }\n    addSchemaToCommitMetadata(commitMetadata, isParquetSchemaSimple, useSchemaFromCommitMetadata);\n    return commitMetadata;\n  }\n","realPath":"hudi-sync/hudi-hive-sync/src/test/java/org/apache/hudi/hive/testutils/HiveTestUtil.java","repoName":"hudi","snippetEndLine":0,"snippetStartLine":0,"startLine":251,"status":"NB"},{"authorDate":"2021-01-06 20:49:44","commitOrder":2,"curCode":"  private static HoodieCommitMetadata createPartition(String partitionPath, boolean isParquetSchemaSimple,\n      boolean useSchemaFromCommitMetadata, String instantTime) throws IOException, URISyntaxException {\n    HoodieCommitMetadata commitMetadata = new HoodieCommitMetadata();\n    Path partPath = new Path(hiveSyncConfig.basePath + \"/\" + partitionPath);\n    fileSystem.makeQualified(partPath);\n    fileSystem.mkdirs(partPath);\n    List<HoodieWriteStat> writeStats = createTestData(partPath, isParquetSchemaSimple, instantTime);\n    writeStats.forEach(s -> commitMetadata.addWriteStat(partitionPath, s));\n    addSchemaToCommitMetadata(commitMetadata, isParquetSchemaSimple, useSchemaFromCommitMetadata);\n    return commitMetadata;\n  }\n","date":"2021-01-06 20:49:44","endLine":287,"groupId":"744","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"createPartition","params":"(StringpartitionPath@booleanisParquetSchemaSimple@booleanuseSchemaFromCommitMetadata@StringinstantTime)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-hudi-10-0.7/blobInfo/CC_OUT/blobs/09/090532bf919c80a1f8267fbdf03fbfd3f4c686.src","preCode":"  private static HoodieCommitMetadata createPartition(String partitionPath, boolean isParquetSchemaSimple,\n      boolean useSchemaFromCommitMetadata, String instantTime) throws IOException, URISyntaxException {\n    HoodieCommitMetadata commitMetadata = new HoodieCommitMetadata();\n    Path partPath = new Path(hiveSyncConfig.basePath + \"/\" + partitionPath);\n    fileSystem.makeQualified(partPath);\n    fileSystem.mkdirs(partPath);\n    List<HoodieWriteStat> writeStats = createTestData(partPath, isParquetSchemaSimple, instantTime);\n    writeStats.forEach(s -> commitMetadata.addWriteStat(partitionPath, s));\n    addSchemaToCommitMetadata(commitMetadata, isParquetSchemaSimple, useSchemaFromCommitMetadata);\n    return commitMetadata;\n  }\n","realPath":"hudi-sync/hudi-hive-sync/src/test/java/org/apache/hudi/hive/testutils/HiveTestUtil.java","repoName":"hudi","snippetEndLine":0,"snippetStartLine":0,"startLine":277,"status":"B"}],"commitId":"da2919a75f564be6c3d731a2c503959e416ebe71","commitMessage":"@@@[HUDI-1383] Fixing sorting of partition vals for hive sync computation (#2402)\n\n","date":"2021-01-06 20:49:44","modifiedFileCount":"3","status":"M","submitter":"Sivabalan Narayanan"},{"authorTime":"2021-01-06 20:49:44","codes":[{"authorDate":"2021-08-11 11:25:41","commitOrder":3,"curCode":"  private static HoodieCommitMetadata createPartitions(int numberOfPartitions, boolean isParquetSchemaSimple,\n                                                       boolean useSchemaFromCommitMetadata, ZonedDateTime startFrom, String instantTime) throws IOException, URISyntaxException {\n    startFrom = startFrom.truncatedTo(ChronoUnit.DAYS);\n\n    HoodieCommitMetadata commitMetadata = new HoodieCommitMetadata();\n    for (int i = 0; i < numberOfPartitions; i++) {\n      String partitionPath = startFrom.format(dtfOut);\n      Path partPath = new Path(hiveSyncConfig.basePath + \"/\" + partitionPath);\n      fileSystem.makeQualified(partPath);\n      fileSystem.mkdirs(partPath);\n      List<HoodieWriteStat> writeStats = createTestData(partPath, isParquetSchemaSimple, instantTime);\n      startFrom = startFrom.minusDays(1);\n      writeStats.forEach(s -> commitMetadata.addWriteStat(partitionPath, s));\n    }\n    addSchemaToCommitMetadata(commitMetadata, isParquetSchemaSimple, useSchemaFromCommitMetadata);\n    return commitMetadata;\n  }\n","date":"2021-08-11 11:25:41","endLine":317,"groupId":"10350","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"createPartitions","params":"(intnumberOfPartitions@booleanisParquetSchemaSimple@booleanuseSchemaFromCommitMetadata@ZonedDateTimestartFrom@StringinstantTime)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-hudi-10-0.7/blobInfo/CC_OUT/blobs/a3/bc2268dcac24706513384a719971574dd0b48b.src","preCode":"  private static HoodieCommitMetadata createPartitions(int numberOfPartitions, boolean isParquetSchemaSimple,\n                                                       boolean useSchemaFromCommitMetadata, DateTime startFrom, String instantTime) throws IOException, URISyntaxException {\n    startFrom = startFrom.withTimeAtStartOfDay();\n\n    HoodieCommitMetadata commitMetadata = new HoodieCommitMetadata();\n    for (int i = 0; i < numberOfPartitions; i++) {\n      String partitionPath = dtfOut.print(startFrom);\n      Path partPath = new Path(hiveSyncConfig.basePath + \"/\" + partitionPath);\n      fileSystem.makeQualified(partPath);\n      fileSystem.mkdirs(partPath);\n      List<HoodieWriteStat> writeStats = createTestData(partPath, isParquetSchemaSimple, instantTime);\n      startFrom = startFrom.minusDays(1);\n      writeStats.forEach(s -> commitMetadata.addWriteStat(partitionPath, s));\n    }\n    addSchemaToCommitMetadata(commitMetadata, isParquetSchemaSimple, useSchemaFromCommitMetadata);\n    return commitMetadata;\n  }\n","realPath":"hudi-sync/hudi-hive-sync/src/test/java/org/apache/hudi/hive/testutils/HiveTestUtil.java","repoName":"hudi","snippetEndLine":0,"snippetStartLine":0,"startLine":301,"status":"M"},{"authorDate":"2021-01-06 20:49:44","commitOrder":3,"curCode":"  private static HoodieCommitMetadata createPartition(String partitionPath, boolean isParquetSchemaSimple,\n      boolean useSchemaFromCommitMetadata, String instantTime) throws IOException, URISyntaxException {\n    HoodieCommitMetadata commitMetadata = new HoodieCommitMetadata();\n    Path partPath = new Path(hiveSyncConfig.basePath + \"/\" + partitionPath);\n    fileSystem.makeQualified(partPath);\n    fileSystem.mkdirs(partPath);\n    List<HoodieWriteStat> writeStats = createTestData(partPath, isParquetSchemaSimple, instantTime);\n    writeStats.forEach(s -> commitMetadata.addWriteStat(partitionPath, s));\n    addSchemaToCommitMetadata(commitMetadata, isParquetSchemaSimple, useSchemaFromCommitMetadata);\n    return commitMetadata;\n  }\n","date":"2021-01-06 20:49:44","endLine":287,"groupId":"10350","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"createPartition","params":"(StringpartitionPath@booleanisParquetSchemaSimple@booleanuseSchemaFromCommitMetadata@StringinstantTime)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-hudi-10-0.7/blobInfo/CC_OUT/blobs/09/090532bf919c80a1f8267fbdf03fbfd3f4c686.src","preCode":"  private static HoodieCommitMetadata createPartition(String partitionPath, boolean isParquetSchemaSimple,\n      boolean useSchemaFromCommitMetadata, String instantTime) throws IOException, URISyntaxException {\n    HoodieCommitMetadata commitMetadata = new HoodieCommitMetadata();\n    Path partPath = new Path(hiveSyncConfig.basePath + \"/\" + partitionPath);\n    fileSystem.makeQualified(partPath);\n    fileSystem.mkdirs(partPath);\n    List<HoodieWriteStat> writeStats = createTestData(partPath, isParquetSchemaSimple, instantTime);\n    writeStats.forEach(s -> commitMetadata.addWriteStat(partitionPath, s));\n    addSchemaToCommitMetadata(commitMetadata, isParquetSchemaSimple, useSchemaFromCommitMetadata);\n    return commitMetadata;\n  }\n","realPath":"hudi-sync/hudi-hive-sync/src/test/java/org/apache/hudi/hive/testutils/HiveTestUtil.java","repoName":"hudi","snippetEndLine":0,"snippetStartLine":0,"startLine":277,"status":"N"}],"commitId":"8255a86cb4d7f2173f0adcf0d752096b0b4df78c","commitMessage":"@@@[HUDI-1939] remove joda time in hivesync module (#3430)\n\n","date":"2021-08-11 11:25:41","modifiedFileCount":"5","status":"M","submitter":"Raymond Xu"}]
