[{"authorTime":"2020-05-19 18:36:01","codes":[{"authorDate":"2020-06-14 14:30:28","commitOrder":2,"curCode":"  private void testRefreshCommand(String command) throws IOException {\n    \r\n    FileSystem fs = FileSystem.get(jsc.hadoopConfiguration());\n    fs.delete(new Path(tablePath + File.separator + HoodieTableMetaClient.METAFOLDER_NAME), true);\n\n    \r\n    assertTrue(prepareTable());\n\n    HoodieTimeline timeline =\n        HoodieCLI.getTableMetaClient().getActiveTimeline().getCommitTimeline().filterCompletedInstants();\n    assertEquals(0, timeline.countInstants(), \"There should have no instant at first\");\n\n    \r\n    for (int i = 100; i < 104; i++) {\n      String instantTime = String.valueOf(i);\n      HoodieTestDataGenerator.createCommitFile(tablePath, instantTime, jsc.hadoopConfiguration());\n    }\n\n    \r\n    timeline =\n        HoodieCLI.getTableMetaClient().getActiveTimeline().getCommitTimeline().filterCompletedInstants();\n    assertEquals(0, timeline.countInstants(), \"there should have no instant\");\n\n    CommandResult cr = getShell().executeCommand(command);\n    assertTrue(cr.isSuccess());\n\n    timeline =\n        HoodieCLI.getTableMetaClient().getActiveTimeline().getCommitTimeline().filterCompletedInstants();\n\n    \r\n    assertEquals(4, timeline.countInstants(), \"there should have 4 instants\");\n  }\n","date":"2020-06-14 14:30:28","endLine":194,"groupId":"14","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testRefreshCommand","params":"(Stringcommand)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-hudi-10-0.7/blobInfo/CC_OUT/blobs/41/1ca4db059fc188374083fd402345156eca2ee8.src","preCode":"  private void testRefreshCommand(String command) throws IOException {\n    \r\n    FileSystem fs = FileSystem.get(jsc.hadoopConfiguration());\n    fs.delete(new Path(tablePath + File.separator + HoodieTableMetaClient.METAFOLDER_NAME), true);\n\n    \r\n    assertTrue(prepareTable());\n\n    HoodieTimeline timeline =\n        HoodieCLI.getTableMetaClient().getActiveTimeline().getCommitTimeline().filterCompletedInstants();\n    assertEquals(0, timeline.countInstants(), \"There should have no instant at first\");\n\n    \r\n    for (int i = 100; i < 104; i++) {\n      String instantTime = String.valueOf(i);\n      HoodieTestDataGenerator.createCommitFile(tablePath, instantTime, jsc.hadoopConfiguration());\n    }\n\n    \r\n    timeline =\n        HoodieCLI.getTableMetaClient().getActiveTimeline().getCommitTimeline().filterCompletedInstants();\n    assertEquals(0, timeline.countInstants(), \"there should have no instant\");\n\n    CommandResult cr = getShell().executeCommand(command);\n    assertTrue(cr.isSuccess());\n\n    timeline =\n        HoodieCLI.getTableMetaClient().getActiveTimeline().getCommitTimeline().filterCompletedInstants();\n\n    \r\n    assertEquals(4, timeline.countInstants(), \"there should have 4 instants\");\n  }\n","realPath":"hudi-cli/src/test/java/org/apache/hudi/cli/commands/TestTableCommand.java","repoName":"hudi","snippetEndLine":0,"snippetStartLine":0,"startLine":163,"status":"B"},{"authorDate":"2020-05-19 18:36:01","commitOrder":2,"curCode":"  public void testRefreshMetaClient() throws IOException {\n    HoodieTimeline timeline =\n        HoodieCLI.getTableMetaClient().getActiveTimeline().getSavePointTimeline().filterCompletedInstants();\n    assertEquals(0, timeline.countInstants(), \"There should have no instant at first\");\n\n    \r\n    for (int i = 100; i < 104; i++) {\n      String instantTime = String.valueOf(i);\n      HoodieTestDataGenerator.createSavepointFile(tablePath, instantTime, jsc.hadoopConfiguration());\n    }\n\n    \r\n    timeline =\n        HoodieCLI.getTableMetaClient().getActiveTimeline().getSavePointTimeline().filterCompletedInstants();\n    assertEquals(0, timeline.countInstants(), \"there should have no instant\");\n\n    CommandResult cr = getShell().executeCommand(\"savepoints refresh\");\n    assertTrue(cr.isSuccess());\n\n    timeline =\n        HoodieCLI.getTableMetaClient().getActiveTimeline().getSavePointTimeline().filterCompletedInstants();\n\n    \r\n    assertEquals(4, timeline.countInstants(), \"there should have 4 instants\");\n  }\n","date":"2020-05-19 18:36:01","endLine":109,"groupId":"14","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testRefreshMetaClient","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-hudi-10-0.7/blobInfo/CC_OUT/blobs/2c/6a3f2939bc6c5a1a2d639a74f5db288048d08e.src","preCode":"  public void testRefreshMetaClient() throws IOException {\n    HoodieTimeline timeline =\n        HoodieCLI.getTableMetaClient().getActiveTimeline().getSavePointTimeline().filterCompletedInstants();\n    assertEquals(0, timeline.countInstants(), \"There should have no instant at first\");\n\n    \r\n    for (int i = 100; i < 104; i++) {\n      String instantTime = String.valueOf(i);\n      HoodieTestDataGenerator.createSavepointFile(tablePath, instantTime, jsc.hadoopConfiguration());\n    }\n\n    \r\n    timeline =\n        HoodieCLI.getTableMetaClient().getActiveTimeline().getSavePointTimeline().filterCompletedInstants();\n    assertEquals(0, timeline.countInstants(), \"there should have no instant\");\n\n    CommandResult cr = getShell().executeCommand(\"savepoints refresh\");\n    assertTrue(cr.isSuccess());\n\n    timeline =\n        HoodieCLI.getTableMetaClient().getActiveTimeline().getSavePointTimeline().filterCompletedInstants();\n\n    \r\n    assertEquals(4, timeline.countInstants(), \"there should have 4 instants\");\n  }\n","realPath":"hudi-cli/src/test/java/org/apache/hudi/cli/commands/TestSavepointsCommand.java","repoName":"hudi","snippetEndLine":0,"snippetStartLine":0,"startLine":85,"status":"NB"}],"commitId":"fcabc8fbca1670c9d50105495278ff147ccbdd4a","commitMessage":"@@@[HUDI-1019] Clean refresh command in CLI (#1725)\n\n","date":"2020-06-14 14:30:28","modifiedFileCount":"5","status":"M","submitter":"hongdd"},{"authorTime":"2021-09-07 06:53:53","codes":[{"authorDate":"2021-09-07 06:53:53","commitOrder":3,"curCode":"  private void testRefreshCommand(String command) throws IOException {\n    \r\n    FileSystem fs = FileSystem.get(hadoopConf());\n    fs.delete(new Path(tablePath + File.separator + HoodieTableMetaClient.METAFOLDER_NAME), true);\n\n    \r\n    assertTrue(prepareTable());\n\n    HoodieTimeline timeline =\n        HoodieCLI.getTableMetaClient().getActiveTimeline().getCommitTimeline().filterCompletedInstants();\n    assertEquals(0, timeline.countInstants(), \"There should have no instant at first\");\n\n    \r\n    for (int i = 100; i < 104; i++) {\n      String instantTime = String.valueOf(i);\n      HoodieTestDataGenerator.createCommitFile(tablePath, instantTime, hadoopConf());\n    }\n\n    \r\n    timeline =\n        HoodieCLI.getTableMetaClient().getActiveTimeline().getCommitTimeline().filterCompletedInstants();\n    assertEquals(0, timeline.countInstants(), \"there should have no instant\");\n\n    CommandResult cr = shell().executeCommand(command);\n    assertTrue(cr.isSuccess());\n\n    timeline =\n        HoodieCLI.getTableMetaClient().getActiveTimeline().getCommitTimeline().filterCompletedInstants();\n\n    \r\n    assertEquals(4, timeline.countInstants(), \"there should have 4 instants\");\n  }\n","date":"2021-09-07 06:53:53","endLine":212,"groupId":"1088","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"testRefreshCommand","params":"(Stringcommand)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-hudi-10-0.7/blobInfo/CC_OUT/blobs/83/deb34bf5a9411859c3bf53e588b169c55e6394.src","preCode":"  private void testRefreshCommand(String command) throws IOException {\n    \r\n    FileSystem fs = FileSystem.get(jsc.hadoopConfiguration());\n    fs.delete(new Path(tablePath + File.separator + HoodieTableMetaClient.METAFOLDER_NAME), true);\n\n    \r\n    assertTrue(prepareTable());\n\n    HoodieTimeline timeline =\n        HoodieCLI.getTableMetaClient().getActiveTimeline().getCommitTimeline().filterCompletedInstants();\n    assertEquals(0, timeline.countInstants(), \"There should have no instant at first\");\n\n    \r\n    for (int i = 100; i < 104; i++) {\n      String instantTime = String.valueOf(i);\n      HoodieTestDataGenerator.createCommitFile(tablePath, instantTime, jsc.hadoopConfiguration());\n    }\n\n    \r\n    timeline =\n        HoodieCLI.getTableMetaClient().getActiveTimeline().getCommitTimeline().filterCompletedInstants();\n    assertEquals(0, timeline.countInstants(), \"there should have no instant\");\n\n    CommandResult cr = getShell().executeCommand(command);\n    assertTrue(cr.isSuccess());\n\n    timeline =\n        HoodieCLI.getTableMetaClient().getActiveTimeline().getCommitTimeline().filterCompletedInstants();\n\n    \r\n    assertEquals(4, timeline.countInstants(), \"there should have 4 instants\");\n  }\n","realPath":"hudi-cli/src/test/java/org/apache/hudi/cli/commands/TestTableCommand.java","repoName":"hudi","snippetEndLine":0,"snippetStartLine":0,"startLine":181,"status":"M"},{"authorDate":"2021-09-07 06:53:53","commitOrder":3,"curCode":"  public void testRefreshMetaClient() throws IOException {\n    HoodieTimeline timeline =\n        HoodieCLI.getTableMetaClient().getActiveTimeline().getSavePointTimeline().filterCompletedInstants();\n    assertEquals(0, timeline.countInstants(), \"There should have no instant at first\");\n\n    \r\n    for (int i = 100; i < 104; i++) {\n      String instantTime = String.valueOf(i);\n      HoodieTestDataGenerator.createSavepointFile(tablePath, instantTime, hadoopConf());\n    }\n\n    \r\n    timeline =\n        HoodieCLI.getTableMetaClient().getActiveTimeline().getSavePointTimeline().filterCompletedInstants();\n    assertEquals(0, timeline.countInstants(), \"there should have no instant\");\n\n    CommandResult cr = shell().executeCommand(\"savepoints refresh\");\n    assertTrue(cr.isSuccess());\n\n    timeline =\n        HoodieCLI.getTableMetaClient().getActiveTimeline().getSavePointTimeline().filterCompletedInstants();\n\n    \r\n    assertEquals(4, timeline.countInstants(), \"there should have 4 instants\");\n  }\n","date":"2021-09-07 06:53:53","endLine":112,"groupId":"1088","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"testRefreshMetaClient","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-hudi-10-0.7/blobInfo/CC_OUT/blobs/74/ea42f0ffa40a08cba8fef08f41dcf47e2b9242.src","preCode":"  public void testRefreshMetaClient() throws IOException {\n    HoodieTimeline timeline =\n        HoodieCLI.getTableMetaClient().getActiveTimeline().getSavePointTimeline().filterCompletedInstants();\n    assertEquals(0, timeline.countInstants(), \"There should have no instant at first\");\n\n    \r\n    for (int i = 100; i < 104; i++) {\n      String instantTime = String.valueOf(i);\n      HoodieTestDataGenerator.createSavepointFile(tablePath, instantTime, jsc.hadoopConfiguration());\n    }\n\n    \r\n    timeline =\n        HoodieCLI.getTableMetaClient().getActiveTimeline().getSavePointTimeline().filterCompletedInstants();\n    assertEquals(0, timeline.countInstants(), \"there should have no instant\");\n\n    CommandResult cr = getShell().executeCommand(\"savepoints refresh\");\n    assertTrue(cr.isSuccess());\n\n    timeline =\n        HoodieCLI.getTableMetaClient().getActiveTimeline().getSavePointTimeline().filterCompletedInstants();\n\n    \r\n    assertEquals(4, timeline.countInstants(), \"there should have 4 instants\");\n  }\n","realPath":"hudi-cli/src/test/java/org/apache/hudi/cli/commands/TestSavepointsCommand.java","repoName":"hudi","snippetEndLine":0,"snippetStartLine":0,"startLine":88,"status":"M"}],"commitId":"cf002b6918ffcdb7528857861372dd73ddb7e31d","commitMessage":"@@@[HUDI-2079] Make CLI command tests functional (#3601)\n\nMake all tests in org.apache.hudi.cli.commands extend org.apache.hudi.cli.functional.CLIFunctionalTestHarness and tag as \"functional\".\n\nThis also resolves a blocker where DFS init consistently failed when moving to ubuntu 18.04","date":"2021-09-07 06:53:53","modifiedFileCount":"17","status":"M","submitter":"Raymond Xu"}]
