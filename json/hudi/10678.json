[{"authorTime":"2021-03-17 07:43:53","codes":[{"authorDate":"2021-03-17 07:43:53","commitOrder":2,"curCode":"  public void testConvertCommitMetadata() {\n    HoodieCommitMetadata hoodieCommitMetadata = new HoodieCommitMetadata();\n    hoodieCommitMetadata.setOperationType(WriteOperationType.INSERT);\n\n    HoodieWriteConfig cfg = HoodieWriteConfig.newBuilder().withPath(basePath)\n        .withSchema(HoodieTestDataGenerator.TRIP_EXAMPLE_SCHEMA).withParallelism(2, 2).forTable(\"test-commitMetadata-converter\")\n        .withCompactionConfig(HoodieCompactionConfig.newBuilder().retainCommits(1).archiveCommitsWith(2, 5).build())\n        .build();\n    metaClient = HoodieTableMetaClient.reload(metaClient);\n    HoodieTable table = HoodieSparkTable.create(cfg, context, metaClient);\n    HoodieTimelineArchiveLog archiveLog = new HoodieTimelineArchiveLog(cfg, table);\n\n    org.apache.hudi.avro.model.HoodieCommitMetadata expectedCommitMetadata = MetadataConversionUtils\n        .convertCommitMetadata(hoodieCommitMetadata);\n    assertEquals(expectedCommitMetadata.getOperationType(), WriteOperationType.INSERT.toString());\n  }\n","date":"2021-03-17 07:43:53","endLine":494,"groupId":"4420","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testConvertCommitMetadata","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-hudi-10-0.7/blobInfo/CC_OUT/blobs/5b/1888101aac919f6c444e3a856fb6a330c18163.src","preCode":"  public void testConvertCommitMetadata() {\n    HoodieCommitMetadata hoodieCommitMetadata = new HoodieCommitMetadata();\n    hoodieCommitMetadata.setOperationType(WriteOperationType.INSERT);\n\n    HoodieWriteConfig cfg = HoodieWriteConfig.newBuilder().withPath(basePath)\n        .withSchema(HoodieTestDataGenerator.TRIP_EXAMPLE_SCHEMA).withParallelism(2, 2).forTable(\"test-commitMetadata-converter\")\n        .withCompactionConfig(HoodieCompactionConfig.newBuilder().retainCommits(1).archiveCommitsWith(2, 5).build())\n        .build();\n    metaClient = HoodieTableMetaClient.reload(metaClient);\n    HoodieTable table = HoodieSparkTable.create(cfg, context, metaClient);\n    HoodieTimelineArchiveLog archiveLog = new HoodieTimelineArchiveLog(cfg, table);\n\n    org.apache.hudi.avro.model.HoodieCommitMetadata expectedCommitMetadata = MetadataConversionUtils\n        .convertCommitMetadata(hoodieCommitMetadata);\n    assertEquals(expectedCommitMetadata.getOperationType(), WriteOperationType.INSERT.toString());\n  }\n","realPath":"hudi-client/hudi-spark-client/src/test/java/org/apache/hudi/io/TestHoodieTimelineArchiveLog.java","repoName":"hudi","snippetEndLine":0,"snippetStartLine":0,"startLine":479,"status":"MB"},{"authorDate":"2021-03-17 07:43:53","commitOrder":2,"curCode":"  public void testConvertCommitMetadata() {\n    HoodieCommitMetadata hoodieCommitMetadata = new HoodieCommitMetadata();\n    hoodieCommitMetadata.setOperationType(WriteOperationType.INSERT);\n    org.apache.hudi.avro.model.HoodieCommitMetadata expectedCommitMetadata = MetadataConversionUtils\n        .convertCommitMetadata(hoodieCommitMetadata);\n    assertEquals(expectedCommitMetadata.getOperationType(), WriteOperationType.INSERT.toString());\n  }\n","date":"2021-03-17 07:43:53","endLine":127,"groupId":"4420","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testConvertCommitMetadata","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-hudi-10-0.7/blobInfo/CC_OUT/blobs/d8/a51708f6df5a63096848e8d65893fe9838aed4.src","preCode":"  public void testConvertCommitMetadata() {\n    HoodieCommitMetadata hoodieCommitMetadata = new HoodieCommitMetadata();\n    hoodieCommitMetadata.setOperationType(WriteOperationType.INSERT);\n    org.apache.hudi.avro.model.HoodieCommitMetadata expectedCommitMetadata = MetadataConversionUtils\n        .convertCommitMetadata(hoodieCommitMetadata);\n    assertEquals(expectedCommitMetadata.getOperationType(), WriteOperationType.INSERT.toString());\n  }\n","realPath":"hudi-client/hudi-client-common/src/test/java/org/apache/hudi/utils/TestMetadataConversionUtils.java","repoName":"hudi","snippetEndLine":0,"snippetStartLine":0,"startLine":121,"status":"B"}],"commitId":"74241947c123c860a1b0344f25cef316440a70d6","commitMessage":"@@@[HUDI-845] Added locking capability to allow multiple writers (#2374)\n\n* [HUDI-845] Added locking capability to allow multiple writers\n1. Added LockProvider API for pluggable lock methodologies\n2. Added Resolution Strategy API to allow for pluggable conflict resolution\n3. Added TableService client API to schedule table services\n4. Added Transaction Manager for wrapping actions within transactions","date":"2021-03-17 07:43:53","modifiedFileCount":"48","status":"M","submitter":"n3nash"},{"authorTime":"2021-03-17 07:43:53","codes":[{"authorDate":"2021-05-22 04:52:13","commitOrder":3,"curCode":"  public void testConvertCommitMetadata() {\n    HoodieCommitMetadata hoodieCommitMetadata = new HoodieCommitMetadata();\n    hoodieCommitMetadata.setOperationType(WriteOperationType.INSERT);\n\n    metaClient = HoodieTableMetaClient.reload(metaClient);\n\n    org.apache.hudi.avro.model.HoodieCommitMetadata expectedCommitMetadata = MetadataConversionUtils\n        .convertCommitMetadata(hoodieCommitMetadata);\n    assertEquals(expectedCommitMetadata.getOperationType(), WriteOperationType.INSERT.toString());\n  }\n","date":"2021-05-22 04:52:13","endLine":525,"groupId":"10678","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testConvertCommitMetadata","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-hudi-10-0.7/blobInfo/CC_OUT/blobs/ea/80b089e57bf5b232166758b8429aa73cf55bb0.src","preCode":"  public void testConvertCommitMetadata() {\n    HoodieCommitMetadata hoodieCommitMetadata = new HoodieCommitMetadata();\n    hoodieCommitMetadata.setOperationType(WriteOperationType.INSERT);\n\n    HoodieWriteConfig cfg = HoodieWriteConfig.newBuilder().withPath(basePath)\n        .withSchema(HoodieTestDataGenerator.TRIP_EXAMPLE_SCHEMA).withParallelism(2, 2).forTable(\"test-commitMetadata-converter\")\n        .withCompactionConfig(HoodieCompactionConfig.newBuilder().retainCommits(1).archiveCommitsWith(2, 5).build())\n        .build();\n    metaClient = HoodieTableMetaClient.reload(metaClient);\n    HoodieTable table = HoodieSparkTable.create(cfg, context, metaClient);\n    HoodieTimelineArchiveLog archiveLog = new HoodieTimelineArchiveLog(cfg, table);\n\n    org.apache.hudi.avro.model.HoodieCommitMetadata expectedCommitMetadata = MetadataConversionUtils\n        .convertCommitMetadata(hoodieCommitMetadata);\n    assertEquals(expectedCommitMetadata.getOperationType(), WriteOperationType.INSERT.toString());\n  }\n","realPath":"hudi-client/hudi-spark-client/src/test/java/org/apache/hudi/io/TestHoodieTimelineArchiveLog.java","repoName":"hudi","snippetEndLine":0,"snippetStartLine":0,"startLine":516,"status":"M"},{"authorDate":"2021-03-17 07:43:53","commitOrder":3,"curCode":"  public void testConvertCommitMetadata() {\n    HoodieCommitMetadata hoodieCommitMetadata = new HoodieCommitMetadata();\n    hoodieCommitMetadata.setOperationType(WriteOperationType.INSERT);\n    org.apache.hudi.avro.model.HoodieCommitMetadata expectedCommitMetadata = MetadataConversionUtils\n        .convertCommitMetadata(hoodieCommitMetadata);\n    assertEquals(expectedCommitMetadata.getOperationType(), WriteOperationType.INSERT.toString());\n  }\n","date":"2021-03-17 07:43:53","endLine":127,"groupId":"10678","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testConvertCommitMetadata","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-hudi-10-0.7/blobInfo/CC_OUT/blobs/d8/a51708f6df5a63096848e8d65893fe9838aed4.src","preCode":"  public void testConvertCommitMetadata() {\n    HoodieCommitMetadata hoodieCommitMetadata = new HoodieCommitMetadata();\n    hoodieCommitMetadata.setOperationType(WriteOperationType.INSERT);\n    org.apache.hudi.avro.model.HoodieCommitMetadata expectedCommitMetadata = MetadataConversionUtils\n        .convertCommitMetadata(hoodieCommitMetadata);\n    assertEquals(expectedCommitMetadata.getOperationType(), WriteOperationType.INSERT.toString());\n  }\n","realPath":"hudi-client/hudi-client-common/src/test/java/org/apache/hudi/utils/TestMetadataConversionUtils.java","repoName":"hudi","snippetEndLine":0,"snippetStartLine":0,"startLine":121,"status":"N"}],"commitId":"685f77b5dda92bb4ecd3a5480a1a5ed2eaee5fef","commitMessage":"@@@[HUDI-1740] Fix insert-overwrite API archival (#2784)\n\n- fix problem of archiving replace commits\n- Fix problem when getting empty replacecommit.requested\n- Improved the logic of handling empty and non-empty requested/inflight commit files. Added unit tests to cover both empty and non-empty inflight files cases and cleaned up some unused test util methods\n\nCo-authored-by: yorkzero831 <yorkzero8312@gmail.com>\nCo-authored-by: zheren.yu <zheren.yu@paypay-corp.co.jp>","date":"2021-05-22 04:52:13","modifiedFileCount":"10","status":"M","submitter":"Susu Dong"}]
