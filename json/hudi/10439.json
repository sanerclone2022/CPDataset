[{"authorTime":"2021-03-26 14:25:57","codes":[{"authorDate":"2021-03-26 14:25:57","commitOrder":1,"curCode":"  public DynamicTableSource createDynamicTableSource(Context context) {\n    FactoryUtil.TableFactoryHelper helper = FactoryUtil.createTableFactoryHelper(this, context);\n    helper.validate();\n\n    Configuration conf = (Configuration) helper.getOptions();\n    Path path = new Path(conf.getOptional(FlinkOptions.PATH).orElseThrow(() ->\n        new ValidationException(\"Option [path] should be not empty.\")));\n    return new ContinuousFileSource(context.getCatalogTable().getSchema(), path, conf);\n  }\n","date":"2021-03-26 14:25:57","endLine":50,"groupId":"4607","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"createDynamicTableSource","params":"(Contextcontext)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-hudi-10-0.7/blobInfo/CC_OUT/blobs/bd/ffcd553c9ebe4a77016aa6b7074f1763daba6a.src","preCode":"  public DynamicTableSource createDynamicTableSource(Context context) {\n    FactoryUtil.TableFactoryHelper helper = FactoryUtil.createTableFactoryHelper(this, context);\n    helper.validate();\n\n    Configuration conf = (Configuration) helper.getOptions();\n    Path path = new Path(conf.getOptional(FlinkOptions.PATH).orElseThrow(() ->\n        new ValidationException(\"Option [path] should be not empty.\")));\n    return new ContinuousFileSource(context.getCatalogTable().getSchema(), path, conf);\n  }\n","realPath":"hudi-flink/src/test/java/org/apache/hudi/utils/factory/ContinuousFileSourceFactory.java","repoName":"hudi","snippetEndLine":0,"snippetStartLine":0,"startLine":42,"status":"B"},{"authorDate":"2021-03-26 14:25:57","commitOrder":1,"curCode":"  public DynamicTableSource createDynamicTableSource(Context context) {\n    FactoryUtil.TableFactoryHelper helper = FactoryUtil.createTableFactoryHelper(this, context);\n    helper.validate();\n\n    Configuration conf = (Configuration) helper.getOptions();\n    TableSchema schema = TableSchemaUtils.getPhysicalSchema(context.getCatalogTable().getSchema());\n    setupConfOptions(conf, context.getObjectIdentifier().getObjectName(), context.getCatalogTable(), schema);\n\n    Path path = new Path(conf.getOptional(FlinkOptions.PATH).orElseThrow(() ->\n        new ValidationException(\"Option [path] should not be empty.\")));\n    return new HoodieTableSource(\n        schema,\n        path,\n        context.getCatalogTable().getPartitionKeys(),\n        conf.getString(FlinkOptions.PARTITION_DEFAULT_NAME),\n        conf);\n  }\n","date":"2021-03-26 14:25:57","endLine":71,"groupId":"4845","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"createDynamicTableSource","params":"(Contextcontext)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-hudi-10-0.7/blobInfo/CC_OUT/blobs/22/dcd3e3a9b96c0133856bbc31baae36d2d4127c.src","preCode":"  public DynamicTableSource createDynamicTableSource(Context context) {\n    FactoryUtil.TableFactoryHelper helper = FactoryUtil.createTableFactoryHelper(this, context);\n    helper.validate();\n\n    Configuration conf = (Configuration) helper.getOptions();\n    TableSchema schema = TableSchemaUtils.getPhysicalSchema(context.getCatalogTable().getSchema());\n    setupConfOptions(conf, context.getObjectIdentifier().getObjectName(), context.getCatalogTable(), schema);\n\n    Path path = new Path(conf.getOptional(FlinkOptions.PATH).orElseThrow(() ->\n        new ValidationException(\"Option [path] should not be empty.\")));\n    return new HoodieTableSource(\n        schema,\n        path,\n        context.getCatalogTable().getPartitionKeys(),\n        conf.getString(FlinkOptions.PARTITION_DEFAULT_NAME),\n        conf);\n  }\n","realPath":"hudi-flink/src/main/java/org/apache/hudi/table/HoodieTableFactory.java","repoName":"hudi","snippetEndLine":0,"snippetStartLine":0,"startLine":55,"status":"B"}],"commitId":"8b774fe3313757a8b94ca408079327c62b4a664c","commitMessage":"@@@[HUDI-1495] Bump Flink version to 1.12.2 (#2718)\n\n","date":"2021-03-26 14:25:57","modifiedFileCount":"20","status":"B","submitter":"Danny Chan"},{"authorTime":"2021-05-11 11:11:19","codes":[{"authorDate":"2021-03-26 14:25:57","commitOrder":2,"curCode":"  public DynamicTableSource createDynamicTableSource(Context context) {\n    FactoryUtil.TableFactoryHelper helper = FactoryUtil.createTableFactoryHelper(this, context);\n    helper.validate();\n\n    Configuration conf = (Configuration) helper.getOptions();\n    Path path = new Path(conf.getOptional(FlinkOptions.PATH).orElseThrow(() ->\n        new ValidationException(\"Option [path] should be not empty.\")));\n    return new ContinuousFileSource(context.getCatalogTable().getSchema(), path, conf);\n  }\n","date":"2021-03-26 14:25:57","endLine":50,"groupId":"4607","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"createDynamicTableSource","params":"(Contextcontext)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-hudi-10-0.7/blobInfo/CC_OUT/blobs/bd/ffcd553c9ebe4a77016aa6b7074f1763daba6a.src","preCode":"  public DynamicTableSource createDynamicTableSource(Context context) {\n    FactoryUtil.TableFactoryHelper helper = FactoryUtil.createTableFactoryHelper(this, context);\n    helper.validate();\n\n    Configuration conf = (Configuration) helper.getOptions();\n    Path path = new Path(conf.getOptional(FlinkOptions.PATH).orElseThrow(() ->\n        new ValidationException(\"Option [path] should be not empty.\")));\n    return new ContinuousFileSource(context.getCatalogTable().getSchema(), path, conf);\n  }\n","realPath":"hudi-flink/src/test/java/org/apache/hudi/utils/factory/ContinuousFileSourceFactory.java","repoName":"hudi","snippetEndLine":0,"snippetStartLine":0,"startLine":42,"status":"N"},{"authorDate":"2021-05-11 11:11:19","commitOrder":2,"curCode":"  public DynamicTableSource createDynamicTableSource(Context context) {\n    FactoryUtil.TableFactoryHelper helper = FactoryUtil.createTableFactoryHelper(this, context);\n    helper.validate();\n\n    Configuration conf = (Configuration) helper.getOptions();\n    TableSchema schema = TableSchemaUtils.getPhysicalSchema(context.getCatalogTable().getSchema());\n    validateRequiredFields(conf, schema);\n    setupConfOptions(conf, context.getObjectIdentifier().getObjectName(), context.getCatalogTable(), schema);\n\n    Path path = new Path(conf.getOptional(FlinkOptions.PATH).orElseThrow(() ->\n        new ValidationException(\"Option [path] should not be empty.\")));\n    return new HoodieTableSource(\n        schema,\n        path,\n        context.getCatalogTable().getPartitionKeys(),\n        conf.getString(FlinkOptions.PARTITION_DEFAULT_NAME),\n        conf);\n  }\n","date":"2021-05-11 11:11:19","endLine":75,"groupId":"396","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"createDynamicTableSource","params":"(Contextcontext)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-hudi-10-0.7/blobInfo/CC_OUT/blobs/02/ab280a3462ed694373342773a038ad2d2678e9.src","preCode":"  public DynamicTableSource createDynamicTableSource(Context context) {\n    FactoryUtil.TableFactoryHelper helper = FactoryUtil.createTableFactoryHelper(this, context);\n    helper.validate();\n\n    Configuration conf = (Configuration) helper.getOptions();\n    TableSchema schema = TableSchemaUtils.getPhysicalSchema(context.getCatalogTable().getSchema());\n    setupConfOptions(conf, context.getObjectIdentifier().getObjectName(), context.getCatalogTable(), schema);\n\n    Path path = new Path(conf.getOptional(FlinkOptions.PATH).orElseThrow(() ->\n        new ValidationException(\"Option [path] should not be empty.\")));\n    return new HoodieTableSource(\n        schema,\n        path,\n        context.getCatalogTable().getPartitionKeys(),\n        conf.getString(FlinkOptions.PARTITION_DEFAULT_NAME),\n        conf);\n  }\n","realPath":"hudi-flink/src/main/java/org/apache/hudi/table/HoodieTableFactory.java","repoName":"hudi","snippetEndLine":0,"snippetStartLine":0,"startLine":58,"status":"M"}],"commitId":"7a5af806cfe54474014db5c70641c0c6269fff03","commitMessage":"@@@[HUDI-1818] Validate required fields for Flink HoodieTable (#2930)\n\n","date":"2021-05-11 11:11:19","modifiedFileCount":"2","status":"M","submitter":"hiscat"},{"authorTime":"2021-08-04 17:53:20","codes":[{"authorDate":"2021-03-26 14:25:57","commitOrder":3,"curCode":"  public DynamicTableSource createDynamicTableSource(Context context) {\n    FactoryUtil.TableFactoryHelper helper = FactoryUtil.createTableFactoryHelper(this, context);\n    helper.validate();\n\n    Configuration conf = (Configuration) helper.getOptions();\n    Path path = new Path(conf.getOptional(FlinkOptions.PATH).orElseThrow(() ->\n        new ValidationException(\"Option [path] should be not empty.\")));\n    return new ContinuousFileSource(context.getCatalogTable().getSchema(), path, conf);\n  }\n","date":"2021-03-26 14:25:57","endLine":50,"groupId":"4607","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"createDynamicTableSource","params":"(Contextcontext)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-hudi-10-0.7/blobInfo/CC_OUT/blobs/bd/ffcd553c9ebe4a77016aa6b7074f1763daba6a.src","preCode":"  public DynamicTableSource createDynamicTableSource(Context context) {\n    FactoryUtil.TableFactoryHelper helper = FactoryUtil.createTableFactoryHelper(this, context);\n    helper.validate();\n\n    Configuration conf = (Configuration) helper.getOptions();\n    Path path = new Path(conf.getOptional(FlinkOptions.PATH).orElseThrow(() ->\n        new ValidationException(\"Option [path] should be not empty.\")));\n    return new ContinuousFileSource(context.getCatalogTable().getSchema(), path, conf);\n  }\n","realPath":"hudi-flink/src/test/java/org/apache/hudi/utils/factory/ContinuousFileSourceFactory.java","repoName":"hudi","snippetEndLine":0,"snippetStartLine":0,"startLine":42,"status":"N"},{"authorDate":"2021-08-04 17:53:20","commitOrder":3,"curCode":"  public DynamicTableSource createDynamicTableSource(Context context) {\n    FactoryUtil.TableFactoryHelper helper = FactoryUtil.createTableFactoryHelper(this, context);\n    helper.validate();\n\n    Configuration conf = (Configuration) helper.getOptions();\n    TableSchema schema = TableSchemaUtils.getPhysicalSchema(context.getCatalogTable().getSchema());\n    sanityCheck(conf, schema);\n    setupConfOptions(conf, context.getObjectIdentifier().getObjectName(), context.getCatalogTable(), schema);\n\n    Path path = new Path(conf.getOptional(FlinkOptions.PATH).orElseThrow(() ->\n        new ValidationException(\"Option [path] should not be empty.\")));\n    return new HoodieTableSource(\n        schema,\n        path,\n        context.getCatalogTable().getPartitionKeys(),\n        conf.getString(FlinkOptions.PARTITION_DEFAULT_NAME),\n        conf);\n  }\n","date":"2021-08-04 17:53:20","endLine":76,"groupId":"4836","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"createDynamicTableSource","params":"(Contextcontext)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-hudi-10-0.7/blobInfo/CC_OUT/blobs/d3/c5388258a97ee5b5d290c6cef6cede0aca1df0.src","preCode":"  public DynamicTableSource createDynamicTableSource(Context context) {\n    FactoryUtil.TableFactoryHelper helper = FactoryUtil.createTableFactoryHelper(this, context);\n    helper.validate();\n\n    Configuration conf = (Configuration) helper.getOptions();\n    TableSchema schema = TableSchemaUtils.getPhysicalSchema(context.getCatalogTable().getSchema());\n    validateRequiredFields(conf, schema);\n    setupConfOptions(conf, context.getObjectIdentifier().getObjectName(), context.getCatalogTable(), schema);\n\n    Path path = new Path(conf.getOptional(FlinkOptions.PATH).orElseThrow(() ->\n        new ValidationException(\"Option [path] should not be empty.\")));\n    return new HoodieTableSource(\n        schema,\n        path,\n        context.getCatalogTable().getPartitionKeys(),\n        conf.getString(FlinkOptions.PARTITION_DEFAULT_NAME),\n        conf);\n  }\n","realPath":"hudi-flink/src/main/java/org/apache/hudi/table/HoodieTableFactory.java","repoName":"hudi","snippetEndLine":0,"snippetStartLine":0,"startLine":59,"status":"M"}],"commitId":"b8b9d6db83657cfdf35832eb26eb7e46ca318048","commitMessage":"@@@[HUDI-2087] Support Append only in Flink stream (#3390)\n\nCo-authored-by: ??? <yuzhaojing@bilibili.com>","date":"2021-08-04 17:53:20","modifiedFileCount":"13","status":"M","submitter":"yuzhaojing"},{"authorTime":"2021-08-16 18:14:05","codes":[{"authorDate":"2021-03-26 14:25:57","commitOrder":4,"curCode":"  public DynamicTableSource createDynamicTableSource(Context context) {\n    FactoryUtil.TableFactoryHelper helper = FactoryUtil.createTableFactoryHelper(this, context);\n    helper.validate();\n\n    Configuration conf = (Configuration) helper.getOptions();\n    Path path = new Path(conf.getOptional(FlinkOptions.PATH).orElseThrow(() ->\n        new ValidationException(\"Option [path] should be not empty.\")));\n    return new ContinuousFileSource(context.getCatalogTable().getSchema(), path, conf);\n  }\n","date":"2021-03-26 14:25:57","endLine":50,"groupId":"10439","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"createDynamicTableSource","params":"(Contextcontext)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-hudi-10-0.7/blobInfo/CC_OUT/blobs/bd/ffcd553c9ebe4a77016aa6b7074f1763daba6a.src","preCode":"  public DynamicTableSource createDynamicTableSource(Context context) {\n    FactoryUtil.TableFactoryHelper helper = FactoryUtil.createTableFactoryHelper(this, context);\n    helper.validate();\n\n    Configuration conf = (Configuration) helper.getOptions();\n    Path path = new Path(conf.getOptional(FlinkOptions.PATH).orElseThrow(() ->\n        new ValidationException(\"Option [path] should be not empty.\")));\n    return new ContinuousFileSource(context.getCatalogTable().getSchema(), path, conf);\n  }\n","realPath":"hudi-flink/src/test/java/org/apache/hudi/utils/factory/ContinuousFileSourceFactory.java","repoName":"hudi","snippetEndLine":0,"snippetStartLine":0,"startLine":42,"status":"N"},{"authorDate":"2021-08-16 18:14:05","commitOrder":4,"curCode":"  public DynamicTableSource createDynamicTableSource(Context context) {\n    FactoryUtil.TableFactoryHelper helper = FactoryUtil.createTableFactoryHelper(this, context);\n    helper.validate();\n\n    Configuration conf = (Configuration) helper.getOptions();\n    ResolvedSchema schema = context.getCatalogTable().getResolvedSchema();\n    sanityCheck(conf, schema);\n    setupConfOptions(conf, context.getObjectIdentifier().getObjectName(), context.getCatalogTable(), schema);\n\n    Path path = new Path(conf.getOptional(FlinkOptions.PATH).orElseThrow(() ->\n        new ValidationException(\"Option [path] should not be empty.\")));\n    return new HoodieTableSource(\n        schema,\n        path,\n        context.getCatalogTable().getPartitionKeys(),\n        conf.getString(FlinkOptions.PARTITION_DEFAULT_NAME),\n        conf);\n  }\n","date":"2021-08-16 18:14:05","endLine":75,"groupId":"10439","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"createDynamicTableSource","params":"(Contextcontext)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-hudi-10-0.7/blobInfo/CC_OUT/blobs/c7/53dde549465750c5bf16a2d7a3fbb473ae683b.src","preCode":"  public DynamicTableSource createDynamicTableSource(Context context) {\n    FactoryUtil.TableFactoryHelper helper = FactoryUtil.createTableFactoryHelper(this, context);\n    helper.validate();\n\n    Configuration conf = (Configuration) helper.getOptions();\n    TableSchema schema = TableSchemaUtils.getPhysicalSchema(context.getCatalogTable().getSchema());\n    sanityCheck(conf, schema);\n    setupConfOptions(conf, context.getObjectIdentifier().getObjectName(), context.getCatalogTable(), schema);\n\n    Path path = new Path(conf.getOptional(FlinkOptions.PATH).orElseThrow(() ->\n        new ValidationException(\"Option [path] should not be empty.\")));\n    return new HoodieTableSource(\n        schema,\n        path,\n        context.getCatalogTable().getPartitionKeys(),\n        conf.getString(FlinkOptions.PARTITION_DEFAULT_NAME),\n        conf);\n  }\n","realPath":"hudi-flink/src/main/java/org/apache/hudi/table/HoodieTableFactory.java","repoName":"hudi","snippetEndLine":0,"snippetStartLine":0,"startLine":58,"status":"M"}],"commitId":"66f951322a3872073b86896fa5c10b51a0f6e4ab","commitMessage":"@@@[HUDI-2191] Bump flink version to 1.13.1 (#3291)\n\n","date":"2021-08-16 18:14:05","modifiedFileCount":"17","status":"M","submitter":"Danny Chan"}]
