[{"authorTime":"2021-04-21 05:21:38","codes":[{"authorDate":"2021-06-25 11:26:26","commitOrder":6,"curCode":"  public static GlobalHiveSyncConfig copy(GlobalHiveSyncConfig cfg) {\n    GlobalHiveSyncConfig newConfig = new GlobalHiveSyncConfig();\n    newConfig.basePath = cfg.basePath;\n    newConfig.assumeDatePartitioning = cfg.assumeDatePartitioning;\n    newConfig.databaseName = cfg.databaseName;\n    newConfig.hivePass = cfg.hivePass;\n    newConfig.hiveUser = cfg.hiveUser;\n    newConfig.partitionFields = cfg.partitionFields;\n    newConfig.partitionValueExtractorClass = cfg.partitionValueExtractorClass;\n    newConfig.jdbcUrl = cfg.jdbcUrl;\n    newConfig.tableName = cfg.tableName;\n    newConfig.usePreApacheInputFormat = cfg.usePreApacheInputFormat;\n    newConfig.useFileListingFromMetadata = cfg.useFileListingFromMetadata;\n    newConfig.verifyMetadataFileListing = cfg.verifyMetadataFileListing;\n    newConfig.supportTimestamp = cfg.supportTimestamp;\n    newConfig.decodePartition = cfg.decodePartition;\n    newConfig.globallyReplicatedTimeStamp = cfg.globallyReplicatedTimeStamp;\n    return newConfig;\n  }\n","date":"2021-06-25 11:26:26","endLine":46,"groupId":"728","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"copy","params":"(GlobalHiveSyncConfigcfg)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-hudi-10-0.7/blobInfo/CC_OUT/blobs/19/074c80004b3b39ab2bafe9043ffbaea6fae033.src","preCode":"  public static GlobalHiveSyncConfig copy(GlobalHiveSyncConfig cfg) {\n    GlobalHiveSyncConfig newConfig = new GlobalHiveSyncConfig();\n    newConfig.basePath = cfg.basePath;\n    newConfig.assumeDatePartitioning = cfg.assumeDatePartitioning;\n    newConfig.databaseName = cfg.databaseName;\n    newConfig.hivePass = cfg.hivePass;\n    newConfig.hiveUser = cfg.hiveUser;\n    newConfig.partitionFields = cfg.partitionFields;\n    newConfig.partitionValueExtractorClass = cfg.partitionValueExtractorClass;\n    newConfig.jdbcUrl = cfg.jdbcUrl;\n    newConfig.tableName = cfg.tableName;\n    newConfig.usePreApacheInputFormat = cfg.usePreApacheInputFormat;\n    newConfig.useFileListingFromMetadata = cfg.useFileListingFromMetadata;\n    newConfig.verifyMetadataFileListing = cfg.verifyMetadataFileListing;\n    newConfig.supportTimestamp = cfg.supportTimestamp;\n    newConfig.decodePartition = cfg.decodePartition;\n    newConfig.globallyReplicatedTimeStamp = cfg.globallyReplicatedTimeStamp;\n    return newConfig;\n  }\n","realPath":"hudi-sync/hudi-hive-sync/src/main/java/org/apache/hudi/hive/replication/GlobalHiveSyncConfig.java","repoName":"hudi","snippetEndLine":0,"snippetStartLine":0,"startLine":28,"status":"B"},{"authorDate":"2021-04-21 05:21:38","commitOrder":6,"curCode":"  public static HiveSyncConfig copy(HiveSyncConfig cfg) {\n    HiveSyncConfig newConfig = new HiveSyncConfig();\n    newConfig.basePath = cfg.basePath;\n    newConfig.assumeDatePartitioning = cfg.assumeDatePartitioning;\n    newConfig.databaseName = cfg.databaseName;\n    newConfig.hivePass = cfg.hivePass;\n    newConfig.hiveUser = cfg.hiveUser;\n    newConfig.partitionFields = cfg.partitionFields;\n    newConfig.partitionValueExtractorClass = cfg.partitionValueExtractorClass;\n    newConfig.jdbcUrl = cfg.jdbcUrl;\n    newConfig.tableName = cfg.tableName;\n    newConfig.usePreApacheInputFormat = cfg.usePreApacheInputFormat;\n    newConfig.useFileListingFromMetadata = cfg.useFileListingFromMetadata;\n    newConfig.verifyMetadataFileListing = cfg.verifyMetadataFileListing;\n    newConfig.supportTimestamp = cfg.supportTimestamp;\n    newConfig.decodePartition = cfg.decodePartition;\n    newConfig.tableProperties = cfg.tableProperties;\n    newConfig.serdeProperties = cfg.serdeProperties;\n    return newConfig;\n  }\n","date":"2021-04-21 05:21:38","endLine":126,"groupId":"728","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"copy","params":"(HiveSyncConfigcfg)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-hudi-10-0.7/blobInfo/CC_OUT/blobs/e4/e796295376e4ad184f4a68f2f9aa182d24e8d7.src","preCode":"  public static HiveSyncConfig copy(HiveSyncConfig cfg) {\n    HiveSyncConfig newConfig = new HiveSyncConfig();\n    newConfig.basePath = cfg.basePath;\n    newConfig.assumeDatePartitioning = cfg.assumeDatePartitioning;\n    newConfig.databaseName = cfg.databaseName;\n    newConfig.hivePass = cfg.hivePass;\n    newConfig.hiveUser = cfg.hiveUser;\n    newConfig.partitionFields = cfg.partitionFields;\n    newConfig.partitionValueExtractorClass = cfg.partitionValueExtractorClass;\n    newConfig.jdbcUrl = cfg.jdbcUrl;\n    newConfig.tableName = cfg.tableName;\n    newConfig.usePreApacheInputFormat = cfg.usePreApacheInputFormat;\n    newConfig.useFileListingFromMetadata = cfg.useFileListingFromMetadata;\n    newConfig.verifyMetadataFileListing = cfg.verifyMetadataFileListing;\n    newConfig.supportTimestamp = cfg.supportTimestamp;\n    newConfig.decodePartition = cfg.decodePartition;\n    newConfig.tableProperties = cfg.tableProperties;\n    newConfig.serdeProperties = cfg.serdeProperties;\n    return newConfig;\n  }\n","realPath":"hudi-sync/hudi-hive-sync/src/main/java/org/apache/hudi/hive/HiveSyncConfig.java","repoName":"hudi","snippetEndLine":0,"snippetStartLine":0,"startLine":107,"status":"NB"}],"commitId":"0fb8556b0d9274aef650a46bb82a8cf495d4450b","commitMessage":"@@@Add ability to provide multi-region (global) data consistency across HMS in different regions (#2542)\n\n[global-hive-sync-tool] Add a global hive sync tool to sync hudi table across clusters. Add a way to rollback the replicated time stamp if we fail to sync or if we partly sync\n\nCo-authored-by: Jagmeet Bali <jsbali@uber.com>","date":"2021-06-25 11:26:26","modifiedFileCount":"14","status":"M","submitter":"s-sanjay"},{"authorTime":"2021-07-03 15:55:36","codes":[{"authorDate":"2021-06-25 11:26:26","commitOrder":7,"curCode":"  public static GlobalHiveSyncConfig copy(GlobalHiveSyncConfig cfg) {\n    GlobalHiveSyncConfig newConfig = new GlobalHiveSyncConfig();\n    newConfig.basePath = cfg.basePath;\n    newConfig.assumeDatePartitioning = cfg.assumeDatePartitioning;\n    newConfig.databaseName = cfg.databaseName;\n    newConfig.hivePass = cfg.hivePass;\n    newConfig.hiveUser = cfg.hiveUser;\n    newConfig.partitionFields = cfg.partitionFields;\n    newConfig.partitionValueExtractorClass = cfg.partitionValueExtractorClass;\n    newConfig.jdbcUrl = cfg.jdbcUrl;\n    newConfig.tableName = cfg.tableName;\n    newConfig.usePreApacheInputFormat = cfg.usePreApacheInputFormat;\n    newConfig.useFileListingFromMetadata = cfg.useFileListingFromMetadata;\n    newConfig.verifyMetadataFileListing = cfg.verifyMetadataFileListing;\n    newConfig.supportTimestamp = cfg.supportTimestamp;\n    newConfig.decodePartition = cfg.decodePartition;\n    newConfig.globallyReplicatedTimeStamp = cfg.globallyReplicatedTimeStamp;\n    return newConfig;\n  }\n","date":"2021-06-25 11:26:26","endLine":46,"groupId":"728","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"copy","params":"(GlobalHiveSyncConfigcfg)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-hudi-10-0.7/blobInfo/CC_OUT/blobs/19/074c80004b3b39ab2bafe9043ffbaea6fae033.src","preCode":"  public static GlobalHiveSyncConfig copy(GlobalHiveSyncConfig cfg) {\n    GlobalHiveSyncConfig newConfig = new GlobalHiveSyncConfig();\n    newConfig.basePath = cfg.basePath;\n    newConfig.assumeDatePartitioning = cfg.assumeDatePartitioning;\n    newConfig.databaseName = cfg.databaseName;\n    newConfig.hivePass = cfg.hivePass;\n    newConfig.hiveUser = cfg.hiveUser;\n    newConfig.partitionFields = cfg.partitionFields;\n    newConfig.partitionValueExtractorClass = cfg.partitionValueExtractorClass;\n    newConfig.jdbcUrl = cfg.jdbcUrl;\n    newConfig.tableName = cfg.tableName;\n    newConfig.usePreApacheInputFormat = cfg.usePreApacheInputFormat;\n    newConfig.useFileListingFromMetadata = cfg.useFileListingFromMetadata;\n    newConfig.verifyMetadataFileListing = cfg.verifyMetadataFileListing;\n    newConfig.supportTimestamp = cfg.supportTimestamp;\n    newConfig.decodePartition = cfg.decodePartition;\n    newConfig.globallyReplicatedTimeStamp = cfg.globallyReplicatedTimeStamp;\n    return newConfig;\n  }\n","realPath":"hudi-sync/hudi-hive-sync/src/main/java/org/apache/hudi/hive/replication/GlobalHiveSyncConfig.java","repoName":"hudi","snippetEndLine":0,"snippetStartLine":0,"startLine":28,"status":"N"},{"authorDate":"2021-07-03 15:55:36","commitOrder":7,"curCode":"  public static HiveSyncConfig copy(HiveSyncConfig cfg) {\n    HiveSyncConfig newConfig = new HiveSyncConfig();\n    newConfig.basePath = cfg.basePath;\n    newConfig.assumeDatePartitioning = cfg.assumeDatePartitioning;\n    newConfig.databaseName = cfg.databaseName;\n    newConfig.hivePass = cfg.hivePass;\n    newConfig.hiveUser = cfg.hiveUser;\n    newConfig.partitionFields = cfg.partitionFields;\n    newConfig.partitionValueExtractorClass = cfg.partitionValueExtractorClass;\n    newConfig.jdbcUrl = cfg.jdbcUrl;\n    newConfig.tableName = cfg.tableName;\n    newConfig.usePreApacheInputFormat = cfg.usePreApacheInputFormat;\n    newConfig.useFileListingFromMetadata = cfg.useFileListingFromMetadata;\n    newConfig.verifyMetadataFileListing = cfg.verifyMetadataFileListing;\n    newConfig.supportTimestamp = cfg.supportTimestamp;\n    newConfig.decodePartition = cfg.decodePartition;\n    newConfig.tableProperties = cfg.tableProperties;\n    newConfig.serdeProperties = cfg.serdeProperties;\n    newConfig.createManagedTable = cfg.createManagedTable;\n    return newConfig;\n  }\n","date":"2021-07-03 15:55:36","endLine":131,"groupId":"728","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"copy","params":"(HiveSyncConfigcfg)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-hudi-10-0.7/blobInfo/CC_OUT/blobs/3d/4cc5b2057515c9e1231dbdbdeb753174d1807f.src","preCode":"  public static HiveSyncConfig copy(HiveSyncConfig cfg) {\n    HiveSyncConfig newConfig = new HiveSyncConfig();\n    newConfig.basePath = cfg.basePath;\n    newConfig.assumeDatePartitioning = cfg.assumeDatePartitioning;\n    newConfig.databaseName = cfg.databaseName;\n    newConfig.hivePass = cfg.hivePass;\n    newConfig.hiveUser = cfg.hiveUser;\n    newConfig.partitionFields = cfg.partitionFields;\n    newConfig.partitionValueExtractorClass = cfg.partitionValueExtractorClass;\n    newConfig.jdbcUrl = cfg.jdbcUrl;\n    newConfig.tableName = cfg.tableName;\n    newConfig.usePreApacheInputFormat = cfg.usePreApacheInputFormat;\n    newConfig.useFileListingFromMetadata = cfg.useFileListingFromMetadata;\n    newConfig.verifyMetadataFileListing = cfg.verifyMetadataFileListing;\n    newConfig.supportTimestamp = cfg.supportTimestamp;\n    newConfig.decodePartition = cfg.decodePartition;\n    newConfig.tableProperties = cfg.tableProperties;\n    newConfig.serdeProperties = cfg.serdeProperties;\n    return newConfig;\n  }\n","realPath":"hudi-sync/hudi-hive-sync/src/main/java/org/apache/hudi/hive/HiveSyncConfig.java","repoName":"hudi","snippetEndLine":0,"snippetStartLine":0,"startLine":111,"status":"M"}],"commitId":"4f215e2938f78e13bea940013855cb14a6724601","commitMessage":"@@@[HUDI-2057]  CTAS Generate An External Table When Create Managed Table (#3146)\n\n","date":"2021-07-03 15:55:36","modifiedFileCount":"3","status":"M","submitter":"pengzhiwei"},{"authorTime":"2021-07-04 22:30:36","codes":[{"authorDate":"2021-07-04 22:30:36","commitOrder":8,"curCode":"  public static GlobalHiveSyncConfig copy(GlobalHiveSyncConfig cfg) {\n    GlobalHiveSyncConfig newConfig = new GlobalHiveSyncConfig();\n    newConfig.basePath = cfg.basePath;\n    newConfig.assumeDatePartitioning = cfg.assumeDatePartitioning;\n    newConfig.databaseName = cfg.databaseName;\n    newConfig.hivePass = cfg.hivePass;\n    newConfig.hiveUser = cfg.hiveUser;\n    newConfig.partitionFields = cfg.partitionFields;\n    newConfig.partitionValueExtractorClass = cfg.partitionValueExtractorClass;\n    newConfig.jdbcUrl = cfg.jdbcUrl;\n    newConfig.tableName = cfg.tableName;\n    newConfig.usePreApacheInputFormat = cfg.usePreApacheInputFormat;\n    newConfig.useFileListingFromMetadata = cfg.useFileListingFromMetadata;\n    newConfig.verifyMetadataFileListing = cfg.verifyMetadataFileListing;\n    newConfig.supportTimestamp = cfg.supportTimestamp;\n    newConfig.decodePartition = cfg.decodePartition;\n    newConfig.batchSyncNum = cfg.batchSyncNum;\n    newConfig.globallyReplicatedTimeStamp = cfg.globallyReplicatedTimeStamp;\n    return newConfig;\n  }\n","date":"2021-07-04 22:30:36","endLine":47,"groupId":"728","id":5,"instanceNumber":1,"isCurCommit":1,"methodName":"copy","params":"(GlobalHiveSyncConfigcfg)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-hudi-10-0.7/blobInfo/CC_OUT/blobs/fd/7dbd81b1e3b20f8a2cb79f5df817b4df252245.src","preCode":"  public static GlobalHiveSyncConfig copy(GlobalHiveSyncConfig cfg) {\n    GlobalHiveSyncConfig newConfig = new GlobalHiveSyncConfig();\n    newConfig.basePath = cfg.basePath;\n    newConfig.assumeDatePartitioning = cfg.assumeDatePartitioning;\n    newConfig.databaseName = cfg.databaseName;\n    newConfig.hivePass = cfg.hivePass;\n    newConfig.hiveUser = cfg.hiveUser;\n    newConfig.partitionFields = cfg.partitionFields;\n    newConfig.partitionValueExtractorClass = cfg.partitionValueExtractorClass;\n    newConfig.jdbcUrl = cfg.jdbcUrl;\n    newConfig.tableName = cfg.tableName;\n    newConfig.usePreApacheInputFormat = cfg.usePreApacheInputFormat;\n    newConfig.useFileListingFromMetadata = cfg.useFileListingFromMetadata;\n    newConfig.verifyMetadataFileListing = cfg.verifyMetadataFileListing;\n    newConfig.supportTimestamp = cfg.supportTimestamp;\n    newConfig.decodePartition = cfg.decodePartition;\n    newConfig.globallyReplicatedTimeStamp = cfg.globallyReplicatedTimeStamp;\n    return newConfig;\n  }\n","realPath":"hudi-sync/hudi-hive-sync/src/main/java/org/apache/hudi/hive/replication/GlobalHiveSyncConfig.java","repoName":"hudi","snippetEndLine":0,"snippetStartLine":0,"startLine":28,"status":"M"},{"authorDate":"2021-07-04 22:30:36","commitOrder":8,"curCode":"  public static HiveSyncConfig copy(HiveSyncConfig cfg) {\n    HiveSyncConfig newConfig = new HiveSyncConfig();\n    newConfig.basePath = cfg.basePath;\n    newConfig.assumeDatePartitioning = cfg.assumeDatePartitioning;\n    newConfig.databaseName = cfg.databaseName;\n    newConfig.hivePass = cfg.hivePass;\n    newConfig.hiveUser = cfg.hiveUser;\n    newConfig.partitionFields = cfg.partitionFields;\n    newConfig.partitionValueExtractorClass = cfg.partitionValueExtractorClass;\n    newConfig.jdbcUrl = cfg.jdbcUrl;\n    newConfig.tableName = cfg.tableName;\n    newConfig.usePreApacheInputFormat = cfg.usePreApacheInputFormat;\n    newConfig.useFileListingFromMetadata = cfg.useFileListingFromMetadata;\n    newConfig.verifyMetadataFileListing = cfg.verifyMetadataFileListing;\n    newConfig.supportTimestamp = cfg.supportTimestamp;\n    newConfig.decodePartition = cfg.decodePartition;\n    newConfig.tableProperties = cfg.tableProperties;\n    newConfig.serdeProperties = cfg.serdeProperties;\n    newConfig.createManagedTable = cfg.createManagedTable;\n    newConfig.batchSyncNum = cfg.batchSyncNum;\n    return newConfig;\n  }\n","date":"2021-07-04 22:30:36","endLine":135,"groupId":"728","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"copy","params":"(HiveSyncConfigcfg)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-hudi-10-0.7/blobInfo/CC_OUT/blobs/09/c3e7b354f2bf8a3a38fca036e20989c038b553.src","preCode":"  public static HiveSyncConfig copy(HiveSyncConfig cfg) {\n    HiveSyncConfig newConfig = new HiveSyncConfig();\n    newConfig.basePath = cfg.basePath;\n    newConfig.assumeDatePartitioning = cfg.assumeDatePartitioning;\n    newConfig.databaseName = cfg.databaseName;\n    newConfig.hivePass = cfg.hivePass;\n    newConfig.hiveUser = cfg.hiveUser;\n    newConfig.partitionFields = cfg.partitionFields;\n    newConfig.partitionValueExtractorClass = cfg.partitionValueExtractorClass;\n    newConfig.jdbcUrl = cfg.jdbcUrl;\n    newConfig.tableName = cfg.tableName;\n    newConfig.usePreApacheInputFormat = cfg.usePreApacheInputFormat;\n    newConfig.useFileListingFromMetadata = cfg.useFileListingFromMetadata;\n    newConfig.verifyMetadataFileListing = cfg.verifyMetadataFileListing;\n    newConfig.supportTimestamp = cfg.supportTimestamp;\n    newConfig.decodePartition = cfg.decodePartition;\n    newConfig.tableProperties = cfg.tableProperties;\n    newConfig.serdeProperties = cfg.serdeProperties;\n    newConfig.createManagedTable = cfg.createManagedTable;\n    return newConfig;\n  }\n","realPath":"hudi-sync/hudi-hive-sync/src/main/java/org/apache/hudi/hive/HiveSyncConfig.java","repoName":"hudi","snippetEndLine":0,"snippetStartLine":0,"startLine":114,"status":"M"}],"commitId":"6a71412f7804c9cbd34e4c6fc01545a994523bb4","commitMessage":"@@@[HUDI-2116] Support batch synchronization of partition datas to  hive metastore to avoid oom problem (#3209)\n\n","date":"2021-07-04 22:30:36","modifiedFileCount":"4","status":"M","submitter":"xiarixiaoyao"},{"authorTime":"2021-07-13 22:37:20","codes":[{"authorDate":"2021-07-04 22:30:36","commitOrder":9,"curCode":"  public static GlobalHiveSyncConfig copy(GlobalHiveSyncConfig cfg) {\n    GlobalHiveSyncConfig newConfig = new GlobalHiveSyncConfig();\n    newConfig.basePath = cfg.basePath;\n    newConfig.assumeDatePartitioning = cfg.assumeDatePartitioning;\n    newConfig.databaseName = cfg.databaseName;\n    newConfig.hivePass = cfg.hivePass;\n    newConfig.hiveUser = cfg.hiveUser;\n    newConfig.partitionFields = cfg.partitionFields;\n    newConfig.partitionValueExtractorClass = cfg.partitionValueExtractorClass;\n    newConfig.jdbcUrl = cfg.jdbcUrl;\n    newConfig.tableName = cfg.tableName;\n    newConfig.usePreApacheInputFormat = cfg.usePreApacheInputFormat;\n    newConfig.useFileListingFromMetadata = cfg.useFileListingFromMetadata;\n    newConfig.verifyMetadataFileListing = cfg.verifyMetadataFileListing;\n    newConfig.supportTimestamp = cfg.supportTimestamp;\n    newConfig.decodePartition = cfg.decodePartition;\n    newConfig.batchSyncNum = cfg.batchSyncNum;\n    newConfig.globallyReplicatedTimeStamp = cfg.globallyReplicatedTimeStamp;\n    return newConfig;\n  }\n","date":"2021-07-04 22:30:36","endLine":47,"groupId":"728","id":7,"instanceNumber":1,"isCurCommit":1,"methodName":"copy","params":"(GlobalHiveSyncConfigcfg)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-hudi-10-0.7/blobInfo/CC_OUT/blobs/fd/7dbd81b1e3b20f8a2cb79f5df817b4df252245.src","preCode":"  public static GlobalHiveSyncConfig copy(GlobalHiveSyncConfig cfg) {\n    GlobalHiveSyncConfig newConfig = new GlobalHiveSyncConfig();\n    newConfig.basePath = cfg.basePath;\n    newConfig.assumeDatePartitioning = cfg.assumeDatePartitioning;\n    newConfig.databaseName = cfg.databaseName;\n    newConfig.hivePass = cfg.hivePass;\n    newConfig.hiveUser = cfg.hiveUser;\n    newConfig.partitionFields = cfg.partitionFields;\n    newConfig.partitionValueExtractorClass = cfg.partitionValueExtractorClass;\n    newConfig.jdbcUrl = cfg.jdbcUrl;\n    newConfig.tableName = cfg.tableName;\n    newConfig.usePreApacheInputFormat = cfg.usePreApacheInputFormat;\n    newConfig.useFileListingFromMetadata = cfg.useFileListingFromMetadata;\n    newConfig.verifyMetadataFileListing = cfg.verifyMetadataFileListing;\n    newConfig.supportTimestamp = cfg.supportTimestamp;\n    newConfig.decodePartition = cfg.decodePartition;\n    newConfig.batchSyncNum = cfg.batchSyncNum;\n    newConfig.globallyReplicatedTimeStamp = cfg.globallyReplicatedTimeStamp;\n    return newConfig;\n  }\n","realPath":"hudi-sync/hudi-hive-sync/src/main/java/org/apache/hudi/hive/replication/GlobalHiveSyncConfig.java","repoName":"hudi","snippetEndLine":0,"snippetStartLine":0,"startLine":28,"status":"N"},{"authorDate":"2021-07-13 22:37:20","commitOrder":9,"curCode":"  public static HiveSyncConfig copy(HiveSyncConfig cfg) {\n    HiveSyncConfig newConfig = new HiveSyncConfig();\n    newConfig.basePath = cfg.basePath;\n    newConfig.assumeDatePartitioning = cfg.assumeDatePartitioning;\n    newConfig.databaseName = cfg.databaseName;\n    newConfig.hivePass = cfg.hivePass;\n    newConfig.hiveUser = cfg.hiveUser;\n    newConfig.partitionFields = cfg.partitionFields;\n    newConfig.partitionValueExtractorClass = cfg.partitionValueExtractorClass;\n    newConfig.jdbcUrl = cfg.jdbcUrl;\n    newConfig.tableName = cfg.tableName;\n    newConfig.usePreApacheInputFormat = cfg.usePreApacheInputFormat;\n    newConfig.useFileListingFromMetadata = cfg.useFileListingFromMetadata;\n    newConfig.verifyMetadataFileListing = cfg.verifyMetadataFileListing;\n    newConfig.supportTimestamp = cfg.supportTimestamp;\n    newConfig.decodePartition = cfg.decodePartition;\n    newConfig.tableProperties = cfg.tableProperties;\n    newConfig.serdeProperties = cfg.serdeProperties;\n    newConfig.createManagedTable = cfg.createManagedTable;\n    newConfig.batchSyncNum = cfg.batchSyncNum;\n    newConfig.syncAsSparkDataSourceTable = cfg.syncAsSparkDataSourceTable;\n    newConfig.sparkSchemaLengthThreshold = cfg.sparkSchemaLengthThreshold;\n    return newConfig;\n  }\n","date":"2021-07-13 22:37:20","endLine":143,"groupId":"728","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"copy","params":"(HiveSyncConfigcfg)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-hudi-10-0.7/blobInfo/CC_OUT/blobs/47/f23864c01cac9ecebe89bb1c42282abe9d0469.src","preCode":"  public static HiveSyncConfig copy(HiveSyncConfig cfg) {\n    HiveSyncConfig newConfig = new HiveSyncConfig();\n    newConfig.basePath = cfg.basePath;\n    newConfig.assumeDatePartitioning = cfg.assumeDatePartitioning;\n    newConfig.databaseName = cfg.databaseName;\n    newConfig.hivePass = cfg.hivePass;\n    newConfig.hiveUser = cfg.hiveUser;\n    newConfig.partitionFields = cfg.partitionFields;\n    newConfig.partitionValueExtractorClass = cfg.partitionValueExtractorClass;\n    newConfig.jdbcUrl = cfg.jdbcUrl;\n    newConfig.tableName = cfg.tableName;\n    newConfig.usePreApacheInputFormat = cfg.usePreApacheInputFormat;\n    newConfig.useFileListingFromMetadata = cfg.useFileListingFromMetadata;\n    newConfig.verifyMetadataFileListing = cfg.verifyMetadataFileListing;\n    newConfig.supportTimestamp = cfg.supportTimestamp;\n    newConfig.decodePartition = cfg.decodePartition;\n    newConfig.tableProperties = cfg.tableProperties;\n    newConfig.serdeProperties = cfg.serdeProperties;\n    newConfig.createManagedTable = cfg.createManagedTable;\n    newConfig.batchSyncNum = cfg.batchSyncNum;\n    return newConfig;\n  }\n","realPath":"hudi-sync/hudi-hive-sync/src/main/java/org/apache/hudi/hive/HiveSyncConfig.java","repoName":"hudi","snippetEndLine":0,"snippetStartLine":0,"startLine":120,"status":"M"}],"commitId":"f0a2f378ea57b577ef2275dbaf42cd960df9cfd5","commitMessage":"@@@Merge pull request #3120 from pengzhiwei2018/dev_metasync\n\n[HUDI-2045] Support Read Hoodie As DataSource Table For Flink And DeltaStreamer","date":"2021-07-13 22:37:20","modifiedFileCount":"6","status":"M","submitter":"pengzhiwei"},{"authorTime":"2021-08-10 20:23:23","codes":[{"authorDate":"2021-07-04 22:30:36","commitOrder":10,"curCode":"  public static GlobalHiveSyncConfig copy(GlobalHiveSyncConfig cfg) {\n    GlobalHiveSyncConfig newConfig = new GlobalHiveSyncConfig();\n    newConfig.basePath = cfg.basePath;\n    newConfig.assumeDatePartitioning = cfg.assumeDatePartitioning;\n    newConfig.databaseName = cfg.databaseName;\n    newConfig.hivePass = cfg.hivePass;\n    newConfig.hiveUser = cfg.hiveUser;\n    newConfig.partitionFields = cfg.partitionFields;\n    newConfig.partitionValueExtractorClass = cfg.partitionValueExtractorClass;\n    newConfig.jdbcUrl = cfg.jdbcUrl;\n    newConfig.tableName = cfg.tableName;\n    newConfig.usePreApacheInputFormat = cfg.usePreApacheInputFormat;\n    newConfig.useFileListingFromMetadata = cfg.useFileListingFromMetadata;\n    newConfig.verifyMetadataFileListing = cfg.verifyMetadataFileListing;\n    newConfig.supportTimestamp = cfg.supportTimestamp;\n    newConfig.decodePartition = cfg.decodePartition;\n    newConfig.batchSyncNum = cfg.batchSyncNum;\n    newConfig.globallyReplicatedTimeStamp = cfg.globallyReplicatedTimeStamp;\n    return newConfig;\n  }\n","date":"2021-07-04 22:30:36","endLine":47,"groupId":"10369","id":9,"instanceNumber":1,"isCurCommit":1,"methodName":"copy","params":"(GlobalHiveSyncConfigcfg)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-hudi-10-0.7/blobInfo/CC_OUT/blobs/fd/7dbd81b1e3b20f8a2cb79f5df817b4df252245.src","preCode":"  public static GlobalHiveSyncConfig copy(GlobalHiveSyncConfig cfg) {\n    GlobalHiveSyncConfig newConfig = new GlobalHiveSyncConfig();\n    newConfig.basePath = cfg.basePath;\n    newConfig.assumeDatePartitioning = cfg.assumeDatePartitioning;\n    newConfig.databaseName = cfg.databaseName;\n    newConfig.hivePass = cfg.hivePass;\n    newConfig.hiveUser = cfg.hiveUser;\n    newConfig.partitionFields = cfg.partitionFields;\n    newConfig.partitionValueExtractorClass = cfg.partitionValueExtractorClass;\n    newConfig.jdbcUrl = cfg.jdbcUrl;\n    newConfig.tableName = cfg.tableName;\n    newConfig.usePreApacheInputFormat = cfg.usePreApacheInputFormat;\n    newConfig.useFileListingFromMetadata = cfg.useFileListingFromMetadata;\n    newConfig.verifyMetadataFileListing = cfg.verifyMetadataFileListing;\n    newConfig.supportTimestamp = cfg.supportTimestamp;\n    newConfig.decodePartition = cfg.decodePartition;\n    newConfig.batchSyncNum = cfg.batchSyncNum;\n    newConfig.globallyReplicatedTimeStamp = cfg.globallyReplicatedTimeStamp;\n    return newConfig;\n  }\n","realPath":"hudi-sync/hudi-hive-sync/src/main/java/org/apache/hudi/hive/replication/GlobalHiveSyncConfig.java","repoName":"hudi","snippetEndLine":0,"snippetStartLine":0,"startLine":28,"status":"N"},{"authorDate":"2021-08-10 20:23:23","commitOrder":10,"curCode":"  public static HiveSyncConfig copy(HiveSyncConfig cfg) {\n    HiveSyncConfig newConfig = new HiveSyncConfig();\n    newConfig.basePath = cfg.basePath;\n    newConfig.assumeDatePartitioning = cfg.assumeDatePartitioning;\n    newConfig.databaseName = cfg.databaseName;\n    newConfig.hivePass = cfg.hivePass;\n    newConfig.hiveUser = cfg.hiveUser;\n    newConfig.partitionFields = cfg.partitionFields;\n    newConfig.partitionValueExtractorClass = cfg.partitionValueExtractorClass;\n    newConfig.jdbcUrl = cfg.jdbcUrl;\n    newConfig.tableName = cfg.tableName;\n    newConfig.usePreApacheInputFormat = cfg.usePreApacheInputFormat;\n    newConfig.useFileListingFromMetadata = cfg.useFileListingFromMetadata;\n    newConfig.verifyMetadataFileListing = cfg.verifyMetadataFileListing;\n    newConfig.supportTimestamp = cfg.supportTimestamp;\n    newConfig.decodePartition = cfg.decodePartition;\n    newConfig.tableProperties = cfg.tableProperties;\n    newConfig.serdeProperties = cfg.serdeProperties;\n    newConfig.createManagedTable = cfg.createManagedTable;\n    newConfig.batchSyncNum = cfg.batchSyncNum;\n    newConfig.syncAsSparkDataSourceTable = cfg.syncAsSparkDataSourceTable;\n    newConfig.sparkSchemaLengthThreshold = cfg.sparkSchemaLengthThreshold;\n    newConfig.withOperationField = cfg.withOperationField;\n    return newConfig;\n  }\n","date":"2021-08-10 20:23:23","endLine":151,"groupId":"10369","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"copy","params":"(HiveSyncConfigcfg)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-hudi-10-0.7/blobInfo/CC_OUT/blobs/d9/d833d3933364d2a28b7b78c52715c6a88b1c09.src","preCode":"  public static HiveSyncConfig copy(HiveSyncConfig cfg) {\n    HiveSyncConfig newConfig = new HiveSyncConfig();\n    newConfig.basePath = cfg.basePath;\n    newConfig.assumeDatePartitioning = cfg.assumeDatePartitioning;\n    newConfig.databaseName = cfg.databaseName;\n    newConfig.hivePass = cfg.hivePass;\n    newConfig.hiveUser = cfg.hiveUser;\n    newConfig.partitionFields = cfg.partitionFields;\n    newConfig.partitionValueExtractorClass = cfg.partitionValueExtractorClass;\n    newConfig.jdbcUrl = cfg.jdbcUrl;\n    newConfig.tableName = cfg.tableName;\n    newConfig.usePreApacheInputFormat = cfg.usePreApacheInputFormat;\n    newConfig.useFileListingFromMetadata = cfg.useFileListingFromMetadata;\n    newConfig.verifyMetadataFileListing = cfg.verifyMetadataFileListing;\n    newConfig.supportTimestamp = cfg.supportTimestamp;\n    newConfig.decodePartition = cfg.decodePartition;\n    newConfig.tableProperties = cfg.tableProperties;\n    newConfig.serdeProperties = cfg.serdeProperties;\n    newConfig.createManagedTable = cfg.createManagedTable;\n    newConfig.batchSyncNum = cfg.batchSyncNum;\n    newConfig.syncAsSparkDataSourceTable = cfg.syncAsSparkDataSourceTable;\n    newConfig.sparkSchemaLengthThreshold = cfg.sparkSchemaLengthThreshold;\n    return newConfig;\n  }\n","realPath":"hudi-sync/hudi-hive-sync/src/main/java/org/apache/hudi/hive/HiveSyncConfig.java","repoName":"hudi","snippetEndLine":0,"snippetStartLine":0,"startLine":127,"status":"M"}],"commitId":"21db6d7a84d4a83ec98c110e92ff9c92d05dd530","commitMessage":"@@@[HUDI-1771] Propagate CDC format for hoodie (#3285)\n\n","date":"2021-08-10 20:23:23","modifiedFileCount":"47","status":"M","submitter":"swuferhong"}]
