[{"authorTime":"2020-08-06 12:34:55","codes":[{"authorDate":"2020-08-06 12:34:55","commitOrder":1,"curCode":"  private static void createCommitFile(HoodieCommitMetadata commitMetadata, String instantTime) throws IOException {\n    byte[] bytes = commitMetadata.toJsonString().getBytes(StandardCharsets.UTF_8);\n    Path fullPath = new Path(hiveSyncConfig.basePath + \"/\" + HoodieTableMetaClient.METAFOLDER_NAME + \"/\"\n        + HoodieTimeline.makeCommitFileName(instantTime));\n    FSDataOutputStream fsout = fileSystem.create(fullPath, true);\n    fsout.write(bytes);\n    fsout.close();\n  }\n","date":"2020-08-06 12:34:55","endLine":360,"groupId":"2343","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"createCommitFile","params":"(HoodieCommitMetadatacommitMetadata@StringinstantTime)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-hudi-10-0.7/blobInfo/CC_OUT/blobs/d0/d1b667aea20b9592b845de9833ace73a3ed40a.src","preCode":"  private static void createCommitFile(HoodieCommitMetadata commitMetadata, String instantTime) throws IOException {\n    byte[] bytes = commitMetadata.toJsonString().getBytes(StandardCharsets.UTF_8);\n    Path fullPath = new Path(hiveSyncConfig.basePath + \"/\" + HoodieTableMetaClient.METAFOLDER_NAME + \"/\"\n        + HoodieTimeline.makeCommitFileName(instantTime));\n    FSDataOutputStream fsout = fileSystem.create(fullPath, true);\n    fsout.write(bytes);\n    fsout.close();\n  }\n","realPath":"hudi-sync/hudi-hive-sync/src/test/java/org/apache/hudi/hive/testutils/HiveTestUtil.java","repoName":"hudi","snippetEndLine":0,"snippetStartLine":0,"startLine":353,"status":"B"},{"authorDate":"2020-08-06 12:34:55","commitOrder":1,"curCode":"  private static void createCompactionCommitFile(HoodieCommitMetadata commitMetadata, String instantTime)\n      throws IOException {\n    byte[] bytes = commitMetadata.toJsonString().getBytes(StandardCharsets.UTF_8);\n    Path fullPath = new Path(hiveSyncConfig.basePath + \"/\" + HoodieTableMetaClient.METAFOLDER_NAME + \"/\"\n        + HoodieTimeline.makeCommitFileName(instantTime));\n    FSDataOutputStream fsout = fileSystem.create(fullPath, true);\n    fsout.write(bytes);\n    fsout.close();\n  }\n","date":"2020-08-06 12:34:55","endLine":370,"groupId":"2343","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"createCompactionCommitFile","params":"(HoodieCommitMetadatacommitMetadata@StringinstantTime)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-hudi-10-0.7/blobInfo/CC_OUT/blobs/d0/d1b667aea20b9592b845de9833ace73a3ed40a.src","preCode":"  private static void createCompactionCommitFile(HoodieCommitMetadata commitMetadata, String instantTime)\n      throws IOException {\n    byte[] bytes = commitMetadata.toJsonString().getBytes(StandardCharsets.UTF_8);\n    Path fullPath = new Path(hiveSyncConfig.basePath + \"/\" + HoodieTableMetaClient.METAFOLDER_NAME + \"/\"\n        + HoodieTimeline.makeCommitFileName(instantTime));\n    FSDataOutputStream fsout = fileSystem.create(fullPath, true);\n    fsout.write(bytes);\n    fsout.close();\n  }\n","realPath":"hudi-sync/hudi-hive-sync/src/test/java/org/apache/hudi/hive/testutils/HiveTestUtil.java","repoName":"hudi","snippetEndLine":0,"snippetStartLine":0,"startLine":362,"status":"B"}],"commitId":"51ea27d665d8053895dd047ca85e3338b357a81d","commitMessage":"@@@[HUDI-875] Abstract hudi-sync-common.  and support hudi-hive-sync.  hudi-dla-sync (#1810)\n\n- Generalize the hive-sync module for syncing to multiple metastores\n- Added new options for datasource\n- Added new command line for delta streamer \n\nCo-authored-by: Vinoth Chandar <vinoth@apache.org>","date":"2020-08-06 12:34:55","modifiedFileCount":"3","status":"B","submitter":"lw0090"},{"authorTime":"2020-08-06 12:34:55","codes":[{"authorDate":"2021-06-25 11:26:26","commitOrder":2,"curCode":"  public static void createCommitFile(HoodieCommitMetadata commitMetadata, String instantTime) throws IOException {\n    byte[] bytes = commitMetadata.toJsonString().getBytes(StandardCharsets.UTF_8);\n    Path fullPath = new Path(hiveSyncConfig.basePath + \"/\" + HoodieTableMetaClient.METAFOLDER_NAME + \"/\"\n        + HoodieTimeline.makeCommitFileName(instantTime));\n    FSDataOutputStream fsout = fileSystem.create(fullPath, true);\n    fsout.write(bytes);\n    fsout.close();\n  }\n","date":"2021-06-25 11:26:26","endLine":384,"groupId":"10358","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"createCommitFile","params":"(HoodieCommitMetadatacommitMetadata@StringinstantTime)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-hudi-10-0.7/blobInfo/CC_OUT/blobs/46/f95f616a1a624fa9bdea176c48222d3955e0db.src","preCode":"  private static void createCommitFile(HoodieCommitMetadata commitMetadata, String instantTime) throws IOException {\n    byte[] bytes = commitMetadata.toJsonString().getBytes(StandardCharsets.UTF_8);\n    Path fullPath = new Path(hiveSyncConfig.basePath + \"/\" + HoodieTableMetaClient.METAFOLDER_NAME + \"/\"\n        + HoodieTimeline.makeCommitFileName(instantTime));\n    FSDataOutputStream fsout = fileSystem.create(fullPath, true);\n    fsout.write(bytes);\n    fsout.close();\n  }\n","realPath":"hudi-sync/hudi-hive-sync/src/test/java/org/apache/hudi/hive/testutils/HiveTestUtil.java","repoName":"hudi","snippetEndLine":0,"snippetStartLine":0,"startLine":377,"status":"M"},{"authorDate":"2020-08-06 12:34:55","commitOrder":2,"curCode":"  private static void createCompactionCommitFile(HoodieCommitMetadata commitMetadata, String instantTime)\n      throws IOException {\n    byte[] bytes = commitMetadata.toJsonString().getBytes(StandardCharsets.UTF_8);\n    Path fullPath = new Path(hiveSyncConfig.basePath + \"/\" + HoodieTableMetaClient.METAFOLDER_NAME + \"/\"\n        + HoodieTimeline.makeCommitFileName(instantTime));\n    FSDataOutputStream fsout = fileSystem.create(fullPath, true);\n    fsout.write(bytes);\n    fsout.close();\n  }\n","date":"2020-08-06 12:34:55","endLine":370,"groupId":"10358","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"createCompactionCommitFile","params":"(HoodieCommitMetadatacommitMetadata@StringinstantTime)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-hudi-10-0.7/blobInfo/CC_OUT/blobs/d0/d1b667aea20b9592b845de9833ace73a3ed40a.src","preCode":"  private static void createCompactionCommitFile(HoodieCommitMetadata commitMetadata, String instantTime)\n      throws IOException {\n    byte[] bytes = commitMetadata.toJsonString().getBytes(StandardCharsets.UTF_8);\n    Path fullPath = new Path(hiveSyncConfig.basePath + \"/\" + HoodieTableMetaClient.METAFOLDER_NAME + \"/\"\n        + HoodieTimeline.makeCommitFileName(instantTime));\n    FSDataOutputStream fsout = fileSystem.create(fullPath, true);\n    fsout.write(bytes);\n    fsout.close();\n  }\n","realPath":"hudi-sync/hudi-hive-sync/src/test/java/org/apache/hudi/hive/testutils/HiveTestUtil.java","repoName":"hudi","snippetEndLine":0,"snippetStartLine":0,"startLine":362,"status":"N"}],"commitId":"0fb8556b0d9274aef650a46bb82a8cf495d4450b","commitMessage":"@@@Add ability to provide multi-region (global) data consistency across HMS in different regions (#2542)\n\n[global-hive-sync-tool] Add a global hive sync tool to sync hudi table across clusters. Add a way to rollback the replicated time stamp if we fail to sync or if we partly sync\n\nCo-authored-by: Jagmeet Bali <jsbali@uber.com>","date":"2021-06-25 11:26:26","modifiedFileCount":"14","status":"M","submitter":"s-sanjay"}]
