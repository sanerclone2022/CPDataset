[{"authorTime":"2019-08-16 20:51:17","codes":[{"authorDate":"2019-08-16 20:51:17","commitOrder":1,"curCode":"    public final <R> Observable<R> concatMap(Function<? super T, ? extends ObservableSource<? extends R>> mapper, int prefetch) {\n        ObjectHelper.requireNonNull(mapper, \"mapper is null\");\n        ObjectHelper.verifyPositive(prefetch, \"prefetch\");\n        if (this instanceof ScalarSupplier) {\n            @SuppressWarnings(\"unchecked\")\n            T v = ((ScalarSupplier<T>)this).get();\n            if (v == null) {\n                return empty();\n            }\n            return ObservableScalarXMap.scalarXMap(v, mapper);\n        }\n        return RxJavaPlugins.onAssembly(new ObservableConcatMap<T, R>(this, mapper, prefetch, ErrorMode.IMMEDIATE));\n    }\n","date":"2019-08-16 20:51:17","endLine":6451,"groupId":"9412","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"concatMap","params":"(Function<?superT@?extendsObservableSource<?extendsR>>mapper@intprefetch)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/bc/c013a10f40257dded28957b3da473976c6bb44.src","preCode":"    public final <R> Observable<R> concatMap(Function<? super T, ? extends ObservableSource<? extends R>> mapper, int prefetch) {\n        ObjectHelper.requireNonNull(mapper, \"mapper is null\");\n        ObjectHelper.verifyPositive(prefetch, \"prefetch\");\n        if (this instanceof ScalarSupplier) {\n            @SuppressWarnings(\"unchecked\")\n            T v = ((ScalarSupplier<T>)this).get();\n            if (v == null) {\n                return empty();\n            }\n            return ObservableScalarXMap.scalarXMap(v, mapper);\n        }\n        return RxJavaPlugins.onAssembly(new ObservableConcatMap<T, R>(this, mapper, prefetch, ErrorMode.IMMEDIATE));\n    }\n","realPath":"src/main/java/io/reactivex/rxjava3/core/Observable.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":6439,"status":"B"},{"authorDate":"2019-08-16 20:51:17","commitOrder":1,"curCode":"    public final <R> Flowable<R> concatMap(Function<? super T, ? extends Publisher<? extends R>> mapper, int prefetch) {\n        ObjectHelper.requireNonNull(mapper, \"mapper is null\");\n        ObjectHelper.verifyPositive(prefetch, \"prefetch\");\n        if (this instanceof ScalarSupplier) {\n            @SuppressWarnings(\"unchecked\")\n            T v = ((ScalarSupplier<T>)this).get();\n            if (v == null) {\n                return empty();\n            }\n            return FlowableScalarXMap.scalarXMap(v, mapper);\n        }\n        return RxJavaPlugins.onAssembly(new FlowableConcatMap<T, R>(this, mapper, prefetch, ErrorMode.IMMEDIATE));\n    }\n","date":"2019-08-16 20:51:17","endLine":7288,"groupId":"9412","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"concatMap","params":"(Function<?superT@?extendsPublisher<?extendsR>>mapper@intprefetch)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/f1/6fa2cf03001794eda0b11b8d1fe00bfa2fb6b9.src","preCode":"    public final <R> Flowable<R> concatMap(Function<? super T, ? extends Publisher<? extends R>> mapper, int prefetch) {\n        ObjectHelper.requireNonNull(mapper, \"mapper is null\");\n        ObjectHelper.verifyPositive(prefetch, \"prefetch\");\n        if (this instanceof ScalarSupplier) {\n            @SuppressWarnings(\"unchecked\")\n            T v = ((ScalarSupplier<T>)this).get();\n            if (v == null) {\n                return empty();\n            }\n            return FlowableScalarXMap.scalarXMap(v, mapper);\n        }\n        return RxJavaPlugins.onAssembly(new FlowableConcatMap<T, R>(this, mapper, prefetch, ErrorMode.IMMEDIATE));\n    }\n","realPath":"src/main/java/io/reactivex/rxjava3/core/Flowable.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":7276,"status":"B"}],"commitId":"a1693ecc9215027a7a3eae75272979ebb4d79a27","commitMessage":"@@@3.x: Refactor to io.reactivex.rxjava3.** (#6621)\n\n* 3.x: Refactor to io.reactivex.rxjava3.**\n\n* fix javadoc cleanup gradle\n\n* javadoc gradle again\n\n* Fix package location in text\n","date":"2019-08-16 20:51:17","modifiedFileCount":"0","status":"B","submitter":"David Karnok"},{"authorTime":"2019-12-18 03:06:44","codes":[{"authorDate":"2019-12-18 03:06:44","commitOrder":2,"curCode":"    public final <R> Observable<R> concatMap(Function<? super T, ? extends ObservableSource<? extends R>> mapper, int prefetch) {\n        Objects.requireNonNull(mapper, \"mapper is null\");\n        ObjectHelper.verifyPositive(prefetch, \"prefetch\");\n        if (this instanceof ScalarSupplier) {\n            @SuppressWarnings(\"unchecked\")\n            T v = ((ScalarSupplier<T>)this).get();\n            if (v == null) {\n                return empty();\n            }\n            return ObservableScalarXMap.scalarXMap(v, mapper);\n        }\n        return RxJavaPlugins.onAssembly(new ObservableConcatMap<T, R>(this, mapper, prefetch, ErrorMode.IMMEDIATE));\n    }\n","date":"2019-12-18 03:06:44","endLine":6308,"groupId":"9412","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"concatMap","params":"(Function<?superT@?extendsObservableSource<?extendsR>>mapper@intprefetch)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/63/406824ba158b4e2455ac106163611841aebd44.src","preCode":"    public final <R> Observable<R> concatMap(Function<? super T, ? extends ObservableSource<? extends R>> mapper, int prefetch) {\n        ObjectHelper.requireNonNull(mapper, \"mapper is null\");\n        ObjectHelper.verifyPositive(prefetch, \"prefetch\");\n        if (this instanceof ScalarSupplier) {\n            @SuppressWarnings(\"unchecked\")\n            T v = ((ScalarSupplier<T>)this).get();\n            if (v == null) {\n                return empty();\n            }\n            return ObservableScalarXMap.scalarXMap(v, mapper);\n        }\n        return RxJavaPlugins.onAssembly(new ObservableConcatMap<T, R>(this, mapper, prefetch, ErrorMode.IMMEDIATE));\n    }\n","realPath":"src/main/java/io/reactivex/rxjava3/core/Observable.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":6296,"status":"M"},{"authorDate":"2019-12-18 03:06:44","commitOrder":2,"curCode":"    public final <R> Flowable<R> concatMap(Function<? super T, ? extends Publisher<? extends R>> mapper, int prefetch) {\n        Objects.requireNonNull(mapper, \"mapper is null\");\n        ObjectHelper.verifyPositive(prefetch, \"prefetch\");\n        if (this instanceof ScalarSupplier) {\n            @SuppressWarnings(\"unchecked\")\n            T v = ((ScalarSupplier<T>)this).get();\n            if (v == null) {\n                return empty();\n            }\n            return FlowableScalarXMap.scalarXMap(v, mapper);\n        }\n        return RxJavaPlugins.onAssembly(new FlowableConcatMap<T, R>(this, mapper, prefetch, ErrorMode.IMMEDIATE));\n    }\n","date":"2019-12-18 03:06:44","endLine":7096,"groupId":"9412","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"concatMap","params":"(Function<?superT@?extendsPublisher<?extendsR>>mapper@intprefetch)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/51/4845efbc67b5a91cda5e930ed14797beaeed88.src","preCode":"    public final <R> Flowable<R> concatMap(Function<? super T, ? extends Publisher<? extends R>> mapper, int prefetch) {\n        ObjectHelper.requireNonNull(mapper, \"mapper is null\");\n        ObjectHelper.verifyPositive(prefetch, \"prefetch\");\n        if (this instanceof ScalarSupplier) {\n            @SuppressWarnings(\"unchecked\")\n            T v = ((ScalarSupplier<T>)this).get();\n            if (v == null) {\n                return empty();\n            }\n            return FlowableScalarXMap.scalarXMap(v, mapper);\n        }\n        return RxJavaPlugins.onAssembly(new FlowableConcatMap<T, R>(this, mapper, prefetch, ErrorMode.IMMEDIATE));\n    }\n","realPath":"src/main/java/io/reactivex/rxjava3/core/Flowable.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":7084,"status":"M"}],"commitId":"6ba932c9a3752c6d85d65bd2292c3a47cab64fd6","commitMessage":"@@@Replace ObjectHelper.requireNonNull with Objects.requireNonNull (#6771)\n\n","date":"2019-12-18 03:06:44","modifiedFileCount":"199","status":"M","submitter":"Jake Wharton"},{"authorTime":"2019-12-24 17:18:06","codes":[{"authorDate":"2019-12-24 17:18:06","commitOrder":3,"curCode":"    public final <R> Observable<R> concatMap(Function<? super T, ? extends ObservableSource<? extends R>> mapper, int prefetch) {\n        Objects.requireNonNull(mapper, \"mapper is null\");\n        ObjectHelper.verifyPositive(prefetch, \"prefetch\");\n        if (this instanceof ScalarSupplier) {\n            @SuppressWarnings(\"unchecked\")\n            T v = ((ScalarSupplier<T>)this).get();\n            if (v == null) {\n                return empty();\n            }\n            return ObservableScalarXMap.scalarXMap(v, mapper);\n        }\n        return RxJavaPlugins.onAssembly(new ObservableConcatMap<>(this, mapper, prefetch, ErrorMode.IMMEDIATE));\n    }\n","date":"2019-12-24 17:18:06","endLine":6293,"groupId":"9412","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"concatMap","params":"(Function<?superT@?extendsObservableSource<?extendsR>>mapper@intprefetch)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/42/d7f3d00a30adbccfbf51f17a9bae85df1872ca.src","preCode":"    public final <R> Observable<R> concatMap(Function<? super T, ? extends ObservableSource<? extends R>> mapper, int prefetch) {\n        Objects.requireNonNull(mapper, \"mapper is null\");\n        ObjectHelper.verifyPositive(prefetch, \"prefetch\");\n        if (this instanceof ScalarSupplier) {\n            @SuppressWarnings(\"unchecked\")\n            T v = ((ScalarSupplier<T>)this).get();\n            if (v == null) {\n                return empty();\n            }\n            return ObservableScalarXMap.scalarXMap(v, mapper);\n        }\n        return RxJavaPlugins.onAssembly(new ObservableConcatMap<T, R>(this, mapper, prefetch, ErrorMode.IMMEDIATE));\n    }\n","realPath":"src/main/java/io/reactivex/rxjava3/core/Observable.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":6281,"status":"M"},{"authorDate":"2019-12-24 17:18:06","commitOrder":3,"curCode":"    public final <R> Flowable<R> concatMap(@NonNull Function<? super T, ? extends Publisher<? extends R>> mapper, int prefetch) {\n        Objects.requireNonNull(mapper, \"mapper is null\");\n        ObjectHelper.verifyPositive(prefetch, \"prefetch\");\n        if (this instanceof ScalarSupplier) {\n            @SuppressWarnings(\"unchecked\")\n            T v = ((ScalarSupplier<T>)this).get();\n            if (v == null) {\n                return empty();\n            }\n            return FlowableScalarXMap.scalarXMap(v, mapper);\n        }\n        return RxJavaPlugins.onAssembly(new FlowableConcatMap<>(this, mapper, prefetch, ErrorMode.IMMEDIATE));\n    }\n","date":"2019-12-24 17:18:06","endLine":7187,"groupId":"9412","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"concatMap","params":"(@NonNullFunction<?superT@?extendsPublisher<?extendsR>>mapper@intprefetch)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/c5/bdb06b2cc43b1a9736de785b99fa56fac4634b.src","preCode":"    public final <R> Flowable<R> concatMap(Function<? super T, ? extends Publisher<? extends R>> mapper, int prefetch) {\n        Objects.requireNonNull(mapper, \"mapper is null\");\n        ObjectHelper.verifyPositive(prefetch, \"prefetch\");\n        if (this instanceof ScalarSupplier) {\n            @SuppressWarnings(\"unchecked\")\n            T v = ((ScalarSupplier<T>)this).get();\n            if (v == null) {\n                return empty();\n            }\n            return FlowableScalarXMap.scalarXMap(v, mapper);\n        }\n        return RxJavaPlugins.onAssembly(new FlowableConcatMap<T, R>(this, mapper, prefetch, ErrorMode.IMMEDIATE));\n    }\n","realPath":"src/main/java/io/reactivex/rxjava3/core/Flowable.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":7175,"status":"M"}],"commitId":"b57169babb184d0adc2fa28cf0425c4f0c1f8555","commitMessage":"@@@3.x: Add NonNull & SafeVarargs annotations + validator (#6791)\n\n","date":"2019-12-24 17:18:06","modifiedFileCount":"28","status":"M","submitter":"David Karnok"},{"authorTime":"2019-12-24 17:18:06","codes":[{"authorDate":"2019-12-26 06:52:13","commitOrder":4,"curCode":"    public final <R> Observable<R> concatMap(@NonNull Function<? super T, ? extends ObservableSource<? extends R>> mapper, int prefetch) {\n        Objects.requireNonNull(mapper, \"mapper is null\");\n        ObjectHelper.verifyPositive(prefetch, \"prefetch\");\n        if (this instanceof ScalarSupplier) {\n            @SuppressWarnings(\"unchecked\")\n            T v = ((ScalarSupplier<T>)this).get();\n            if (v == null) {\n                return empty();\n            }\n            return ObservableScalarXMap.scalarXMap(v, mapper);\n        }\n        return RxJavaPlugins.onAssembly(new ObservableConcatMap<>(this, mapper, prefetch, ErrorMode.IMMEDIATE));\n    }\n","date":"2019-12-26 06:52:13","endLine":6452,"groupId":"9412","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"concatMap","params":"(@NonNullFunction<?superT@?extendsObservableSource<?extendsR>>mapper@intprefetch)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/16/e1454af367e5b65e5ddecb077644e09b3d66f6.src","preCode":"    public final <R> Observable<R> concatMap(Function<? super T, ? extends ObservableSource<? extends R>> mapper, int prefetch) {\n        Objects.requireNonNull(mapper, \"mapper is null\");\n        ObjectHelper.verifyPositive(prefetch, \"prefetch\");\n        if (this instanceof ScalarSupplier) {\n            @SuppressWarnings(\"unchecked\")\n            T v = ((ScalarSupplier<T>)this).get();\n            if (v == null) {\n                return empty();\n            }\n            return ObservableScalarXMap.scalarXMap(v, mapper);\n        }\n        return RxJavaPlugins.onAssembly(new ObservableConcatMap<>(this, mapper, prefetch, ErrorMode.IMMEDIATE));\n    }\n","realPath":"src/main/java/io/reactivex/rxjava3/core/Observable.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":6440,"status":"M"},{"authorDate":"2019-12-24 17:18:06","commitOrder":4,"curCode":"    public final <R> Flowable<R> concatMap(@NonNull Function<? super T, ? extends Publisher<? extends R>> mapper, int prefetch) {\n        Objects.requireNonNull(mapper, \"mapper is null\");\n        ObjectHelper.verifyPositive(prefetch, \"prefetch\");\n        if (this instanceof ScalarSupplier) {\n            @SuppressWarnings(\"unchecked\")\n            T v = ((ScalarSupplier<T>)this).get();\n            if (v == null) {\n                return empty();\n            }\n            return FlowableScalarXMap.scalarXMap(v, mapper);\n        }\n        return RxJavaPlugins.onAssembly(new FlowableConcatMap<>(this, mapper, prefetch, ErrorMode.IMMEDIATE));\n    }\n","date":"2019-12-24 17:18:06","endLine":7187,"groupId":"9412","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"concatMap","params":"(@NonNullFunction<?superT@?extendsPublisher<?extendsR>>mapper@intprefetch)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/c5/bdb06b2cc43b1a9736de785b99fa56fac4634b.src","preCode":"    public final <R> Flowable<R> concatMap(@NonNull Function<? super T, ? extends Publisher<? extends R>> mapper, int prefetch) {\n        Objects.requireNonNull(mapper, \"mapper is null\");\n        ObjectHelper.verifyPositive(prefetch, \"prefetch\");\n        if (this instanceof ScalarSupplier) {\n            @SuppressWarnings(\"unchecked\")\n            T v = ((ScalarSupplier<T>)this).get();\n            if (v == null) {\n                return empty();\n            }\n            return FlowableScalarXMap.scalarXMap(v, mapper);\n        }\n        return RxJavaPlugins.onAssembly(new FlowableConcatMap<>(this, mapper, prefetch, ErrorMode.IMMEDIATE));\n    }\n","realPath":"src/main/java/io/reactivex/rxjava3/core/Flowable.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":7175,"status":"N"}],"commitId":"480889c58d3b762b073ef80229bf27f9d9429dd7","commitMessage":"@@@3.x: Add missing annotations.  fix many diamonds (#6795)\n\n* 3.x: Add missing annotations.  fix many diamonds\n\n* Fix accidental JDK 9 API usage\n\n* Fix NPE in unicast due to null-cleanup\n","date":"2019-12-26 06:52:13","modifiedFileCount":"52","status":"M","submitter":"David Karnok"},{"authorTime":"2019-12-24 17:18:06","codes":[{"authorDate":"2020-01-10 15:36:29","commitOrder":5,"curCode":"    public final <R> Observable<R> concatMap(@NonNull Function<? super T, ? extends ObservableSource<? extends R>> mapper, int bufferSize) {\n        Objects.requireNonNull(mapper, \"mapper is null\");\n        ObjectHelper.verifyPositive(bufferSize, \"bufferSize\");\n        if (this instanceof ScalarSupplier) {\n            @SuppressWarnings(\"unchecked\")\n            T v = ((ScalarSupplier<T>)this).get();\n            if (v == null) {\n                return empty();\n            }\n            return ObservableScalarXMap.scalarXMap(v, mapper);\n        }\n        return RxJavaPlugins.onAssembly(new ObservableConcatMap<>(this, mapper, bufferSize, ErrorMode.IMMEDIATE));\n    }\n","date":"2020-01-10 15:36:29","endLine":6603,"groupId":"9412","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"concatMap","params":"(@NonNullFunction<?superT@?extendsObservableSource<?extendsR>>mapper@intbufferSize)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/2d/75dee207be27ae2de1128a687ce531b36bca80.src","preCode":"    public final <R> Observable<R> concatMap(@NonNull Function<? super T, ? extends ObservableSource<? extends R>> mapper, int prefetch) {\n        Objects.requireNonNull(mapper, \"mapper is null\");\n        ObjectHelper.verifyPositive(prefetch, \"prefetch\");\n        if (this instanceof ScalarSupplier) {\n            @SuppressWarnings(\"unchecked\")\n            T v = ((ScalarSupplier<T>)this).get();\n            if (v == null) {\n                return empty();\n            }\n            return ObservableScalarXMap.scalarXMap(v, mapper);\n        }\n        return RxJavaPlugins.onAssembly(new ObservableConcatMap<>(this, mapper, prefetch, ErrorMode.IMMEDIATE));\n    }\n","realPath":"src/main/java/io/reactivex/rxjava3/core/Observable.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":6591,"status":"M"},{"authorDate":"2019-12-24 17:18:06","commitOrder":5,"curCode":"    public final <R> Flowable<R> concatMap(@NonNull Function<? super T, ? extends Publisher<? extends R>> mapper, int prefetch) {\n        Objects.requireNonNull(mapper, \"mapper is null\");\n        ObjectHelper.verifyPositive(prefetch, \"prefetch\");\n        if (this instanceof ScalarSupplier) {\n            @SuppressWarnings(\"unchecked\")\n            T v = ((ScalarSupplier<T>)this).get();\n            if (v == null) {\n                return empty();\n            }\n            return FlowableScalarXMap.scalarXMap(v, mapper);\n        }\n        return RxJavaPlugins.onAssembly(new FlowableConcatMap<>(this, mapper, prefetch, ErrorMode.IMMEDIATE));\n    }\n","date":"2019-12-24 17:18:06","endLine":7187,"groupId":"9412","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"concatMap","params":"(@NonNullFunction<?superT@?extendsPublisher<?extendsR>>mapper@intprefetch)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/c5/bdb06b2cc43b1a9736de785b99fa56fac4634b.src","preCode":"    public final <R> Flowable<R> concatMap(@NonNull Function<? super T, ? extends Publisher<? extends R>> mapper, int prefetch) {\n        Objects.requireNonNull(mapper, \"mapper is null\");\n        ObjectHelper.verifyPositive(prefetch, \"prefetch\");\n        if (this instanceof ScalarSupplier) {\n            @SuppressWarnings(\"unchecked\")\n            T v = ((ScalarSupplier<T>)this).get();\n            if (v == null) {\n                return empty();\n            }\n            return FlowableScalarXMap.scalarXMap(v, mapper);\n        }\n        return RxJavaPlugins.onAssembly(new FlowableConcatMap<>(this, mapper, prefetch, ErrorMode.IMMEDIATE));\n    }\n","realPath":"src/main/java/io/reactivex/rxjava3/core/Flowable.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":7175,"status":"N"}],"commitId":"1e4dbcf78a814993e80fa489a50d3369d7c4ecbd","commitMessage":"@@@3.x: Improve JavaDocs of Observable and fix similar issues elsewhere (#6831)\n\n* 3.x: Javadoc cleanup of Observable\n\n* Another set of cleanups (too many things to fix at once)\n\n* 3.x: Improve JavaDocs of Observable and fix similar issues elsewhere\n","date":"2020-01-10 15:36:29","modifiedFileCount":"19","status":"M","submitter":"David Karnok"},{"authorTime":"2020-01-14 15:49:53","codes":[{"authorDate":"2020-01-10 15:36:29","commitOrder":6,"curCode":"    public final <R> Observable<R> concatMap(@NonNull Function<? super T, ? extends ObservableSource<? extends R>> mapper, int bufferSize) {\n        Objects.requireNonNull(mapper, \"mapper is null\");\n        ObjectHelper.verifyPositive(bufferSize, \"bufferSize\");\n        if (this instanceof ScalarSupplier) {\n            @SuppressWarnings(\"unchecked\")\n            T v = ((ScalarSupplier<T>)this).get();\n            if (v == null) {\n                return empty();\n            }\n            return ObservableScalarXMap.scalarXMap(v, mapper);\n        }\n        return RxJavaPlugins.onAssembly(new ObservableConcatMap<>(this, mapper, bufferSize, ErrorMode.IMMEDIATE));\n    }\n","date":"2020-01-10 15:36:29","endLine":6603,"groupId":"9412","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"concatMap","params":"(@NonNullFunction<?superT@?extendsObservableSource<?extendsR>>mapper@intbufferSize)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/2d/75dee207be27ae2de1128a687ce531b36bca80.src","preCode":"    public final <R> Observable<R> concatMap(@NonNull Function<? super T, ? extends ObservableSource<? extends R>> mapper, int bufferSize) {\n        Objects.requireNonNull(mapper, \"mapper is null\");\n        ObjectHelper.verifyPositive(bufferSize, \"bufferSize\");\n        if (this instanceof ScalarSupplier) {\n            @SuppressWarnings(\"unchecked\")\n            T v = ((ScalarSupplier<T>)this).get();\n            if (v == null) {\n                return empty();\n            }\n            return ObservableScalarXMap.scalarXMap(v, mapper);\n        }\n        return RxJavaPlugins.onAssembly(new ObservableConcatMap<>(this, mapper, bufferSize, ErrorMode.IMMEDIATE));\n    }\n","realPath":"src/main/java/io/reactivex/rxjava3/core/Observable.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":6591,"status":"N"},{"authorDate":"2020-01-14 15:49:53","commitOrder":6,"curCode":"    public final <R> Flowable<R> concatMap(@NonNull Function<? super T, ? extends Publisher<@NonNull ? extends R>> mapper, int prefetch) {\n        Objects.requireNonNull(mapper, \"mapper is null\");\n        ObjectHelper.verifyPositive(prefetch, \"prefetch\");\n        if (this instanceof ScalarSupplier) {\n            @SuppressWarnings(\"unchecked\")\n            T v = ((ScalarSupplier<T>)this).get();\n            if (v == null) {\n                return empty();\n            }\n            return FlowableScalarXMap.scalarXMap(v, mapper);\n        }\n        return RxJavaPlugins.onAssembly(new FlowableConcatMap<>(this, mapper, prefetch, ErrorMode.IMMEDIATE));\n    }\n","date":"2020-01-14 15:49:53","endLine":7392,"groupId":"9412","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"concatMap","params":"(@NonNullFunction<?superT@?extendsPublisher<@NonNull?extendsR>>mapper@intprefetch)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/48/6b0cb629defb0f51e33900cdb33090c85e4725.src","preCode":"    public final <R> Flowable<R> concatMap(@NonNull Function<? super T, ? extends Publisher<? extends R>> mapper, int prefetch) {\n        Objects.requireNonNull(mapper, \"mapper is null\");\n        ObjectHelper.verifyPositive(prefetch, \"prefetch\");\n        if (this instanceof ScalarSupplier) {\n            @SuppressWarnings(\"unchecked\")\n            T v = ((ScalarSupplier<T>)this).get();\n            if (v == null) {\n                return empty();\n            }\n            return FlowableScalarXMap.scalarXMap(v, mapper);\n        }\n        return RxJavaPlugins.onAssembly(new FlowableConcatMap<>(this, mapper, prefetch, ErrorMode.IMMEDIATE));\n    }\n","realPath":"src/main/java/io/reactivex/rxjava3/core/Flowable.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":7380,"status":"M"}],"commitId":"fb6dab6847d858b22fe6a36558cf3b62dc10627d","commitMessage":"@@@3.x: Add nullability annotations to type arguments (#6840)\n\n","date":"2020-01-14 15:49:53","modifiedFileCount":"75","status":"M","submitter":"David Karnok"},{"authorTime":"2021-07-25 00:35:45","codes":[{"authorDate":"2021-07-25 00:35:45","commitOrder":7,"curCode":"    public final <@NonNull R> Observable<R> concatMap(@NonNull Function<? super T, ? extends ObservableSource<? extends R>> mapper, int bufferSize) {\n        Objects.requireNonNull(mapper, \"mapper is null\");\n        ObjectHelper.verifyPositive(bufferSize, \"bufferSize\");\n        if (this instanceof ScalarSupplier) {\n            @SuppressWarnings(\"unchecked\")\n            T v = ((ScalarSupplier<T>)this).get();\n            if (v == null) {\n                return empty();\n            }\n            return ObservableScalarXMap.scalarXMap(v, mapper);\n        }\n        return RxJavaPlugins.onAssembly(new ObservableConcatMap<>(this, mapper, bufferSize, ErrorMode.IMMEDIATE));\n    }\n","date":"2021-07-25 00:35:45","endLine":6866,"groupId":"104315","id":13,"instanceNumber":1,"isCurCommit":0,"methodName":"concatMap","params":"(@NonNullFunction<?superT@?extendsObservableSource<?extendsR>>mapper@intbufferSize)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/be/33a95e3f43aee8827eff53f0756e4042f5b538.src","preCode":"    public final <R> Observable<R> concatMap(@NonNull Function<? super T, ? extends ObservableSource<? extends R>> mapper, int bufferSize) {\n        Objects.requireNonNull(mapper, \"mapper is null\");\n        ObjectHelper.verifyPositive(bufferSize, \"bufferSize\");\n        if (this instanceof ScalarSupplier) {\n            @SuppressWarnings(\"unchecked\")\n            T v = ((ScalarSupplier<T>)this).get();\n            if (v == null) {\n                return empty();\n            }\n            return ObservableScalarXMap.scalarXMap(v, mapper);\n        }\n        return RxJavaPlugins.onAssembly(new ObservableConcatMap<>(this, mapper, bufferSize, ErrorMode.IMMEDIATE));\n    }\n","realPath":"src/main/java/io/reactivex/rxjava3/core/Observable.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":6854,"status":"M"},{"authorDate":"2021-07-25 00:35:45","commitOrder":7,"curCode":"    public final <@NonNull R> Flowable<R> concatMap(@NonNull Function<? super T, @NonNull ? extends Publisher<? extends R>> mapper, int prefetch) {\n        Objects.requireNonNull(mapper, \"mapper is null\");\n        ObjectHelper.verifyPositive(prefetch, \"prefetch\");\n        if (this instanceof ScalarSupplier) {\n            @SuppressWarnings(\"unchecked\")\n            T v = ((ScalarSupplier<T>)this).get();\n            if (v == null) {\n                return empty();\n            }\n            return FlowableScalarXMap.scalarXMap(v, mapper);\n        }\n        return RxJavaPlugins.onAssembly(new FlowableConcatMap<>(this, mapper, prefetch, ErrorMode.IMMEDIATE));\n    }\n","date":"2021-07-25 00:35:45","endLine":7703,"groupId":"104315","id":14,"instanceNumber":2,"isCurCommit":0,"methodName":"concatMap","params":"(@NonNullFunction<?superT@@NonNull?extendsPublisher<?extendsR>>mapper@intprefetch)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/31/827d9e1c0235ea4c571f5df54be8e515e94da8.src","preCode":"    public final <R> Flowable<R> concatMap(@NonNull Function<? super T, ? extends Publisher<@NonNull ? extends R>> mapper, int prefetch) {\n        Objects.requireNonNull(mapper, \"mapper is null\");\n        ObjectHelper.verifyPositive(prefetch, \"prefetch\");\n        if (this instanceof ScalarSupplier) {\n            @SuppressWarnings(\"unchecked\")\n            T v = ((ScalarSupplier<T>)this).get();\n            if (v == null) {\n                return empty();\n            }\n            return FlowableScalarXMap.scalarXMap(v, mapper);\n        }\n        return RxJavaPlugins.onAssembly(new FlowableConcatMap<>(this, mapper, prefetch, ErrorMode.IMMEDIATE));\n    }\n","realPath":"src/main/java/io/reactivex/rxjava3/core/Flowable.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":7691,"status":"M"}],"commitId":"40ca8eff4a0d6559258489cf282471f5e3b1a229","commitMessage":"@@@3.x: Move nullability annotations into the type argument declaration (#7303)\n\n* 3.x: Move nullability annotations into the type argument declaration\n\n* Reinforce Function<T.  R> return argument type where R is non-trivial","date":"2021-07-25 00:35:45","modifiedFileCount":"17","status":"M","submitter":"David Karnok"}]
