[{"authorTime":"2019-08-16 20:51:17","codes":[{"authorDate":"2019-08-16 20:51:17","commitOrder":1,"curCode":"    public static <T> Observable<T> fromArray(T... items) {\n        ObjectHelper.requireNonNull(items, \"items is null\");\n        if (items.length == 0) {\n            return empty();\n        }\n        if (items.length == 1) {\n            return just(items[0]);\n        }\n        return RxJavaPlugins.onAssembly(new ObservableFromArray<T>(items));\n    }\n","date":"2019-08-16 20:51:17","endLine":1779,"groupId":"9859","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"fromArray","params":"(T...items)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/bc/c013a10f40257dded28957b3da473976c6bb44.src","preCode":"    public static <T> Observable<T> fromArray(T... items) {\n        ObjectHelper.requireNonNull(items, \"items is null\");\n        if (items.length == 0) {\n            return empty();\n        }\n        if (items.length == 1) {\n            return just(items[0]);\n        }\n        return RxJavaPlugins.onAssembly(new ObservableFromArray<T>(items));\n    }\n","realPath":"src/main/java/io/reactivex/rxjava3/core/Observable.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":1770,"status":"B"},{"authorDate":"2019-08-16 20:51:17","commitOrder":1,"curCode":"    public static <T> Flowable<T> fromArray(T... items) {\n        ObjectHelper.requireNonNull(items, \"items is null\");\n        if (items.length == 0) {\n            return empty();\n        }\n        if (items.length == 1) {\n            return just(items[0]);\n        }\n        return RxJavaPlugins.onAssembly(new FlowableFromArray<T>(items));\n    }\n","date":"2019-08-16 20:51:17","endLine":2065,"groupId":"9859","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"fromArray","params":"(T...items)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/f1/6fa2cf03001794eda0b11b8d1fe00bfa2fb6b9.src","preCode":"    public static <T> Flowable<T> fromArray(T... items) {\n        ObjectHelper.requireNonNull(items, \"items is null\");\n        if (items.length == 0) {\n            return empty();\n        }\n        if (items.length == 1) {\n            return just(items[0]);\n        }\n        return RxJavaPlugins.onAssembly(new FlowableFromArray<T>(items));\n    }\n","realPath":"src/main/java/io/reactivex/rxjava3/core/Flowable.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":2056,"status":"B"}],"commitId":"a1693ecc9215027a7a3eae75272979ebb4d79a27","commitMessage":"@@@3.x: Refactor to io.reactivex.rxjava3.** (#6621)\n\n* 3.x: Refactor to io.reactivex.rxjava3.**\n\n* fix javadoc cleanup gradle\n\n* javadoc gradle again\n\n* Fix package location in text\n","date":"2019-08-16 20:51:17","modifiedFileCount":"0","status":"B","submitter":"David Karnok"},{"authorTime":"2019-12-18 03:06:44","codes":[{"authorDate":"2019-12-18 03:06:44","commitOrder":2,"curCode":"    public static <T> Observable<T> fromArray(T... items) {\n        Objects.requireNonNull(items, \"items is null\");\n        if (items.length == 0) {\n            return empty();\n        }\n        if (items.length == 1) {\n            return just(items[0]);\n        }\n        return RxJavaPlugins.onAssembly(new ObservableFromArray<T>(items));\n    }\n","date":"2019-12-18 03:06:44","endLine":1691,"groupId":"9859","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"fromArray","params":"(T...items)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/63/406824ba158b4e2455ac106163611841aebd44.src","preCode":"    public static <T> Observable<T> fromArray(T... items) {\n        ObjectHelper.requireNonNull(items, \"items is null\");\n        if (items.length == 0) {\n            return empty();\n        }\n        if (items.length == 1) {\n            return just(items[0]);\n        }\n        return RxJavaPlugins.onAssembly(new ObservableFromArray<T>(items));\n    }\n","realPath":"src/main/java/io/reactivex/rxjava3/core/Observable.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":1682,"status":"M"},{"authorDate":"2019-12-18 03:06:44","commitOrder":2,"curCode":"    public static <T> Flowable<T> fromArray(T... items) {\n        Objects.requireNonNull(items, \"items is null\");\n        if (items.length == 0) {\n            return empty();\n        }\n        if (items.length == 1) {\n            return just(items[0]);\n        }\n        return RxJavaPlugins.onAssembly(new FlowableFromArray<T>(items));\n    }\n","date":"2019-12-18 03:06:44","endLine":1931,"groupId":"9859","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"fromArray","params":"(T...items)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/51/4845efbc67b5a91cda5e930ed14797beaeed88.src","preCode":"    public static <T> Flowable<T> fromArray(T... items) {\n        ObjectHelper.requireNonNull(items, \"items is null\");\n        if (items.length == 0) {\n            return empty();\n        }\n        if (items.length == 1) {\n            return just(items[0]);\n        }\n        return RxJavaPlugins.onAssembly(new FlowableFromArray<T>(items));\n    }\n","realPath":"src/main/java/io/reactivex/rxjava3/core/Flowable.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":1922,"status":"M"}],"commitId":"6ba932c9a3752c6d85d65bd2292c3a47cab64fd6","commitMessage":"@@@Replace ObjectHelper.requireNonNull with Objects.requireNonNull (#6771)\n\n","date":"2019-12-18 03:06:44","modifiedFileCount":"199","status":"M","submitter":"Jake Wharton"},{"authorTime":"2019-12-24 17:18:06","codes":[{"authorDate":"2019-12-24 17:18:06","commitOrder":3,"curCode":"    public static <T> Observable<T> fromArray(T... items) {\n        Objects.requireNonNull(items, \"items is null\");\n        if (items.length == 0) {\n            return empty();\n        }\n        if (items.length == 1) {\n            return just(items[0]);\n        }\n        return RxJavaPlugins.onAssembly(new ObservableFromArray<>(items));\n    }\n","date":"2019-12-24 17:18:06","endLine":1695,"groupId":"9859","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"fromArray","params":"(T...items)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/42/d7f3d00a30adbccfbf51f17a9bae85df1872ca.src","preCode":"    public static <T> Observable<T> fromArray(T... items) {\n        Objects.requireNonNull(items, \"items is null\");\n        if (items.length == 0) {\n            return empty();\n        }\n        if (items.length == 1) {\n            return just(items[0]);\n        }\n        return RxJavaPlugins.onAssembly(new ObservableFromArray<T>(items));\n    }\n","realPath":"src/main/java/io/reactivex/rxjava3/core/Observable.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":1686,"status":"M"},{"authorDate":"2019-12-24 17:18:06","commitOrder":3,"curCode":"    public static <@NonNull T> Flowable<T> fromArray(@NonNull T... items) {\n        Objects.requireNonNull(items, \"items is null\");\n        if (items.length == 0) {\n            return empty();\n        }\n        if (items.length == 1) {\n            return just(items[0]);\n        }\n        return RxJavaPlugins.onAssembly(new FlowableFromArray<>(items));\n    }\n","date":"2019-12-24 17:18:06","endLine":1951,"groupId":"9859","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"fromArray","params":"(@NonNullT...items)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/c5/bdb06b2cc43b1a9736de785b99fa56fac4634b.src","preCode":"    public static <T> Flowable<T> fromArray(T... items) {\n        Objects.requireNonNull(items, \"items is null\");\n        if (items.length == 0) {\n            return empty();\n        }\n        if (items.length == 1) {\n            return just(items[0]);\n        }\n        return RxJavaPlugins.onAssembly(new FlowableFromArray<T>(items));\n    }\n","realPath":"src/main/java/io/reactivex/rxjava3/core/Flowable.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":1942,"status":"M"}],"commitId":"b57169babb184d0adc2fa28cf0425c4f0c1f8555","commitMessage":"@@@3.x: Add NonNull & SafeVarargs annotations + validator (#6791)\n\n","date":"2019-12-24 17:18:06","modifiedFileCount":"28","status":"M","submitter":"David Karnok"},{"authorTime":"2019-12-24 17:18:06","codes":[{"authorDate":"2019-12-26 06:52:13","commitOrder":4,"curCode":"    public static <T> Observable<T> fromArray(@NonNull T... items) {\n        Objects.requireNonNull(items, \"items is null\");\n        if (items.length == 0) {\n            return empty();\n        }\n        if (items.length == 1) {\n            return just(items[0]);\n        }\n        return RxJavaPlugins.onAssembly(new ObservableFromArray<>(items));\n    }\n","date":"2019-12-26 06:52:13","endLine":1728,"groupId":"9859","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"fromArray","params":"(@NonNullT...items)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/16/e1454af367e5b65e5ddecb077644e09b3d66f6.src","preCode":"    public static <T> Observable<T> fromArray(T... items) {\n        Objects.requireNonNull(items, \"items is null\");\n        if (items.length == 0) {\n            return empty();\n        }\n        if (items.length == 1) {\n            return just(items[0]);\n        }\n        return RxJavaPlugins.onAssembly(new ObservableFromArray<>(items));\n    }\n","realPath":"src/main/java/io/reactivex/rxjava3/core/Observable.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":1719,"status":"M"},{"authorDate":"2019-12-24 17:18:06","commitOrder":4,"curCode":"    public static <@NonNull T> Flowable<T> fromArray(@NonNull T... items) {\n        Objects.requireNonNull(items, \"items is null\");\n        if (items.length == 0) {\n            return empty();\n        }\n        if (items.length == 1) {\n            return just(items[0]);\n        }\n        return RxJavaPlugins.onAssembly(new FlowableFromArray<>(items));\n    }\n","date":"2019-12-24 17:18:06","endLine":1951,"groupId":"9859","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"fromArray","params":"(@NonNullT...items)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/c5/bdb06b2cc43b1a9736de785b99fa56fac4634b.src","preCode":"    public static <@NonNull T> Flowable<T> fromArray(@NonNull T... items) {\n        Objects.requireNonNull(items, \"items is null\");\n        if (items.length == 0) {\n            return empty();\n        }\n        if (items.length == 1) {\n            return just(items[0]);\n        }\n        return RxJavaPlugins.onAssembly(new FlowableFromArray<>(items));\n    }\n","realPath":"src/main/java/io/reactivex/rxjava3/core/Flowable.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":1942,"status":"N"}],"commitId":"480889c58d3b762b073ef80229bf27f9d9429dd7","commitMessage":"@@@3.x: Add missing annotations.  fix many diamonds (#6795)\n\n* 3.x: Add missing annotations.  fix many diamonds\n\n* Fix accidental JDK 9 API usage\n\n* Fix NPE in unicast due to null-cleanup\n","date":"2019-12-26 06:52:13","modifiedFileCount":"52","status":"M","submitter":"David Karnok"},{"authorTime":"2019-12-24 17:18:06","codes":[{"authorDate":"2021-07-25 00:35:45","commitOrder":5,"curCode":"    public static <@NonNull T> Observable<T> fromArray(@NonNull T... items) {\n        Objects.requireNonNull(items, \"items is null\");\n        if (items.length == 0) {\n            return empty();\n        }\n        if (items.length == 1) {\n            return just(items[0]);\n        }\n        return RxJavaPlugins.onAssembly(new ObservableFromArray<>(items));\n    }\n","date":"2021-07-25 00:35:45","endLine":1933,"groupId":"104246","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"fromArray","params":"(@NonNullT...items)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/be/33a95e3f43aee8827eff53f0756e4042f5b538.src","preCode":"    public static <T> Observable<T> fromArray(@NonNull T... items) {\n        Objects.requireNonNull(items, \"items is null\");\n        if (items.length == 0) {\n            return empty();\n        }\n        if (items.length == 1) {\n            return just(items[0]);\n        }\n        return RxJavaPlugins.onAssembly(new ObservableFromArray<>(items));\n    }\n","realPath":"src/main/java/io/reactivex/rxjava3/core/Observable.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":1924,"status":"M"},{"authorDate":"2019-12-24 17:18:06","commitOrder":5,"curCode":"    public static <@NonNull T> Flowable<T> fromArray(@NonNull T... items) {\n        Objects.requireNonNull(items, \"items is null\");\n        if (items.length == 0) {\n            return empty();\n        }\n        if (items.length == 1) {\n            return just(items[0]);\n        }\n        return RxJavaPlugins.onAssembly(new FlowableFromArray<>(items));\n    }\n","date":"2019-12-24 17:18:06","endLine":1951,"groupId":"104246","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"fromArray","params":"(@NonNullT...items)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/c5/bdb06b2cc43b1a9736de785b99fa56fac4634b.src","preCode":"    public static <@NonNull T> Flowable<T> fromArray(@NonNull T... items) {\n        Objects.requireNonNull(items, \"items is null\");\n        if (items.length == 0) {\n            return empty();\n        }\n        if (items.length == 1) {\n            return just(items[0]);\n        }\n        return RxJavaPlugins.onAssembly(new FlowableFromArray<>(items));\n    }\n","realPath":"src/main/java/io/reactivex/rxjava3/core/Flowable.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":1942,"status":"N"}],"commitId":"40ca8eff4a0d6559258489cf282471f5e3b1a229","commitMessage":"@@@3.x: Move nullability annotations into the type argument declaration (#7303)\n\n* 3.x: Move nullability annotations into the type argument declaration\n\n* Reinforce Function<T.  R> return argument type where R is non-trivial","date":"2021-07-25 00:35:45","modifiedFileCount":"17","status":"M","submitter":"David Karnok"}]
