[{"authorTime":"2019-08-16 20:51:17","codes":[{"authorDate":"2019-08-16 20:51:17","commitOrder":1,"curCode":"    public void runnableThrows() {\n        List<Throwable> errors = TestHelper.trackPluginErrors();\n        try {\n            ScheduledDirectPeriodicTask task = new ScheduledDirectPeriodicTask(new Runnable() {\n                @Override\n                public void run() {\n                    throw new TestException();\n                }\n            });\n\n            task.run();\n\n            TestHelper.assertUndeliverable(errors, 0, TestException.class);\n        } finally {\n            RxJavaPlugins.reset();\n        }\n    }\n","date":"2019-08-16 20:51:17","endLine":44,"groupId":"969","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"runnableThrows","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/23/afeca2ce05d34e6549382f7f647d4dc9c7376d.src","preCode":"    public void runnableThrows() {\n        List<Throwable> errors = TestHelper.trackPluginErrors();\n        try {\n            ScheduledDirectPeriodicTask task = new ScheduledDirectPeriodicTask(new Runnable() {\n                @Override\n                public void run() {\n                    throw new TestException();\n                }\n            });\n\n            task.run();\n\n            TestHelper.assertUndeliverable(errors, 0, TestException.class);\n        } finally {\n            RxJavaPlugins.reset();\n        }\n    }\n","realPath":"src/test/java/io/reactivex/rxjava3/internal/schedulers/ScheduledDirectPeriodicTaskTest.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":28,"status":"B"},{"authorDate":"2019-08-16 20:51:17","commitOrder":1,"curCode":"    public void taskCrash() throws Exception {\n        ExecutorService exec = Executors.newSingleThreadExecutor();\n        List<Throwable> errors = TestHelper.trackPluginErrors();\n        try {\n\n            InstantPeriodicTask task = new InstantPeriodicTask(new Runnable() {\n                @Override\n                public void run() {\n                    throw new TestException();\n                }\n            }, exec);\n\n            assertNull(task.call());\n\n            TestHelper.assertUndeliverable(errors, 0, TestException.class);\n        } finally {\n            exec.shutdownNow();\n            RxJavaPlugins.reset();\n        }\n    }\n","date":"2019-08-16 20:51:17","endLine":54,"groupId":"9682","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"taskCrash","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/57/7aa468de678b878c0d4380667da0cc6e2831ea.src","preCode":"    public void taskCrash() throws Exception {\n        ExecutorService exec = Executors.newSingleThreadExecutor();\n        List<Throwable> errors = TestHelper.trackPluginErrors();\n        try {\n\n            InstantPeriodicTask task = new InstantPeriodicTask(new Runnable() {\n                @Override\n                public void run() {\n                    throw new TestException();\n                }\n            }, exec);\n\n            assertNull(task.call());\n\n            TestHelper.assertUndeliverable(errors, 0, TestException.class);\n        } finally {\n            exec.shutdownNow();\n            RxJavaPlugins.reset();\n        }\n    }\n","realPath":"src/test/java/io/reactivex/rxjava3/internal/schedulers/InstantPeriodicTaskTest.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":35,"status":"B"}],"commitId":"a1693ecc9215027a7a3eae75272979ebb4d79a27","commitMessage":"@@@3.x: Refactor to io.reactivex.rxjava3.** (#6621)\n\n* 3.x: Refactor to io.reactivex.rxjava3.**\n\n* fix javadoc cleanup gradle\n\n* javadoc gradle again\n\n* Fix package location in text\n","date":"2019-08-16 20:51:17","modifiedFileCount":"0","status":"B","submitter":"David Karnok"},{"authorTime":"2020-04-27 14:46:51","codes":[{"authorDate":"2020-04-27 14:46:51","commitOrder":2,"curCode":"    public void runnableThrows() {\n        List<Throwable> errors = TestHelper.trackPluginErrors();\n        try {\n            ScheduledDirectPeriodicTask task = new ScheduledDirectPeriodicTask(new Runnable() {\n                @Override\n                public void run() {\n                    throw new TestException();\n                }\n            });\n\n            try {\n                task.run();\n                fail(\"Should have thrown!\");\n            } catch (TestException expected) {\n                \r\n            }\n\n            TestHelper.assertUndeliverable(errors, 0, TestException.class);\n        } finally {\n            RxJavaPlugins.reset();\n        }\n    }\n","date":"2020-04-27 14:46:51","endLine":51,"groupId":"12911","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"runnableThrows","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/77/36d5e40b9912afd8e988057c74f24de41c8d23.src","preCode":"    public void runnableThrows() {\n        List<Throwable> errors = TestHelper.trackPluginErrors();\n        try {\n            ScheduledDirectPeriodicTask task = new ScheduledDirectPeriodicTask(new Runnable() {\n                @Override\n                public void run() {\n                    throw new TestException();\n                }\n            });\n\n            task.run();\n\n            TestHelper.assertUndeliverable(errors, 0, TestException.class);\n        } finally {\n            RxJavaPlugins.reset();\n        }\n    }\n","realPath":"src/test/java/io/reactivex/rxjava3/internal/schedulers/ScheduledDirectPeriodicTaskTest.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":30,"status":"M"},{"authorDate":"2020-04-27 14:46:51","commitOrder":2,"curCode":"    public void taskCrash() throws Exception {\n        ExecutorService exec = Executors.newSingleThreadExecutor();\n        List<Throwable> errors = TestHelper.trackPluginErrors();\n        try {\n\n            InstantPeriodicTask task = new InstantPeriodicTask(new Runnable() {\n                @Override\n                public void run() {\n                    throw new TestException();\n                }\n            }, exec);\n\n            try {\n                task.call();\n                fail(\"Should have thrown!\");\n            } catch (TestException excepted) {\n                \r\n            }\n\n            TestHelper.assertUndeliverable(errors, 0, TestException.class);\n        } finally {\n            exec.shutdownNow();\n            RxJavaPlugins.reset();\n        }\n    }\n","date":"2020-04-27 14:46:51","endLine":59,"groupId":"9682","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"taskCrash","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/2f/530f2afa84292f0f9b471cd48d1068cb113f5e.src","preCode":"    public void taskCrash() throws Exception {\n        ExecutorService exec = Executors.newSingleThreadExecutor();\n        List<Throwable> errors = TestHelper.trackPluginErrors();\n        try {\n\n            InstantPeriodicTask task = new InstantPeriodicTask(new Runnable() {\n                @Override\n                public void run() {\n                    throw new TestException();\n                }\n            }, exec);\n\n            assertNull(task.call());\n\n            TestHelper.assertUndeliverable(errors, 0, TestException.class);\n        } finally {\n            exec.shutdownNow();\n            RxJavaPlugins.reset();\n        }\n    }\n","realPath":"src/test/java/io/reactivex/rxjava3/internal/schedulers/InstantPeriodicTaskTest.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":35,"status":"M"}],"commitId":"fbee37a052c8c4052614db021cd242de6f710221","commitMessage":"@@@3.x: Fix scheduled tasks' fatal exception behavior (#6956)\n\n* 3.x: Fix scheduled tasks' fatal exception behavior\n\n* Fix direct periodic tasks not stopping upon crash.\n\n* Fix the mistake introduced in the previous commit.\n\n* Ensure task exception is rethrown so that the parent FutureTask can end\n\n* Update the abstract Scheduler's tasks too\n\n* Adjust some test expectation with DisposeTask","date":"2020-04-27 14:46:51","modifiedFileCount":"11","status":"M","submitter":"David Karnok"},{"authorTime":"2020-04-27 14:46:51","codes":[{"authorDate":"2021-03-05 17:30:00","commitOrder":3,"curCode":"    public void runnableThrows() {\n        List<Throwable> errors = TestHelper.trackPluginErrors();\n        try {\n            ScheduledDirectPeriodicTask task = new ScheduledDirectPeriodicTask(new Runnable() {\n                @Override\n                public void run() {\n                    throw new TestException();\n                }\n            }, true);\n\n            try {\n                task.run();\n                fail(\"Should have thrown!\");\n            } catch (TestException expected) {\n                \r\n            }\n\n            TestHelper.assertUndeliverable(errors, 0, TestException.class);\n        } finally {\n            RxJavaPlugins.reset();\n        }\n    }\n","date":"2021-03-05 17:30:00","endLine":51,"groupId":"107291","id":5,"instanceNumber":1,"isCurCommit":1,"methodName":"runnableThrows","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/d4/1906b13a2bbcb0fba678bc69be85f7828d2f4e.src","preCode":"    public void runnableThrows() {\n        List<Throwable> errors = TestHelper.trackPluginErrors();\n        try {\n            ScheduledDirectPeriodicTask task = new ScheduledDirectPeriodicTask(new Runnable() {\n                @Override\n                public void run() {\n                    throw new TestException();\n                }\n            });\n\n            try {\n                task.run();\n                fail(\"Should have thrown!\");\n            } catch (TestException expected) {\n                \r\n            }\n\n            TestHelper.assertUndeliverable(errors, 0, TestException.class);\n        } finally {\n            RxJavaPlugins.reset();\n        }\n    }\n","realPath":"src/test/java/io/reactivex/rxjava3/internal/schedulers/ScheduledDirectPeriodicTaskTest.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":30,"status":"M"},{"authorDate":"2020-04-27 14:46:51","commitOrder":3,"curCode":"    public void taskCrash() throws Exception {\n        ExecutorService exec = Executors.newSingleThreadExecutor();\n        List<Throwable> errors = TestHelper.trackPluginErrors();\n        try {\n\n            InstantPeriodicTask task = new InstantPeriodicTask(new Runnable() {\n                @Override\n                public void run() {\n                    throw new TestException();\n                }\n            }, exec);\n\n            try {\n                task.call();\n                fail(\"Should have thrown!\");\n            } catch (TestException excepted) {\n                \r\n            }\n\n            TestHelper.assertUndeliverable(errors, 0, TestException.class);\n        } finally {\n            exec.shutdownNow();\n            RxJavaPlugins.reset();\n        }\n    }\n","date":"2020-04-27 14:46:51","endLine":59,"groupId":"107291","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"taskCrash","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/2f/530f2afa84292f0f9b471cd48d1068cb113f5e.src","preCode":"    public void taskCrash() throws Exception {\n        ExecutorService exec = Executors.newSingleThreadExecutor();\n        List<Throwable> errors = TestHelper.trackPluginErrors();\n        try {\n\n            InstantPeriodicTask task = new InstantPeriodicTask(new Runnable() {\n                @Override\n                public void run() {\n                    throw new TestException();\n                }\n            }, exec);\n\n            try {\n                task.call();\n                fail(\"Should have thrown!\");\n            } catch (TestException excepted) {\n                \r\n            }\n\n            TestHelper.assertUndeliverable(errors, 0, TestException.class);\n        } finally {\n            exec.shutdownNow();\n            RxJavaPlugins.reset();\n        }\n    }\n","realPath":"src/test/java/io/reactivex/rxjava3/internal/schedulers/InstantPeriodicTaskTest.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":35,"status":"N"}],"commitId":"26dddf51efedf547b3f77f1231130ea59e235d10","commitMessage":"@@@3.x: Fix Schedulers.from to honor interruptibleWorker across methods (#7203)\n\n","date":"2021-03-05 17:30:00","modifiedFileCount":"14","status":"M","submitter":"David Karnok"}]
