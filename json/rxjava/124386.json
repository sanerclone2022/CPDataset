[{"authorTime":"2020-01-14 15:49:53","codes":[{"authorDate":"2020-01-14 15:49:53","commitOrder":1,"curCode":"    public final <T1, T2, T3, R> Observable<R> withLatestFrom(\n            @NonNull ObservableSource<T1> source1, @NonNull ObservableSource<T2> source2,\n            @NonNull ObservableSource<T3> source3,\n            @NonNull Function4<? super T, ? super T1, ? super T2, ? super T3, R> combiner) {\n        Objects.requireNonNull(source1, \"source1 is null\");\n        Objects.requireNonNull(source2, \"source2 is null\");\n        Objects.requireNonNull(source3, \"source3 is null\");\n        Objects.requireNonNull(combiner, \"combiner is null\");\n        Function<Object[], R> f = Functions.toFunction(combiner);\n        return withLatestFrom(new ObservableSource[] { source1, source2, source3 }, f);\n    }\n","date":"2020-01-14 15:49:53","endLine":16062,"groupId":"10139","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"withLatestFrom","params":"(@NonNullObservableSource<T1>source1@@NonNullObservableSource<T2>source2@@NonNullObservableSource<T3>source3@@NonNullFunction4<?superT@?superT1@?superT2@?superT3@R>combiner)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/6b/118b70b5b611987ab16b513ac5abe5d19ed008.src","preCode":"    public final <T1, T2, T3, R> Observable<R> withLatestFrom(\n            @NonNull ObservableSource<T1> source1, @NonNull ObservableSource<T2> source2,\n            @NonNull ObservableSource<T3> source3,\n            @NonNull Function4<? super T, ? super T1, ? super T2, ? super T3, R> combiner) {\n        Objects.requireNonNull(source1, \"source1 is null\");\n        Objects.requireNonNull(source2, \"source2 is null\");\n        Objects.requireNonNull(source3, \"source3 is null\");\n        Objects.requireNonNull(combiner, \"combiner is null\");\n        Function<Object[], R> f = Functions.toFunction(combiner);\n        return withLatestFrom(new ObservableSource[] { source1, source2, source3 }, f);\n    }\n","realPath":"src/main/java/io/reactivex/rxjava3/core/Observable.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":16052,"status":"B"},{"authorDate":"2020-01-14 15:49:53","commitOrder":1,"curCode":"    public final <T1, T2, T3, @NonNull R> Flowable<R> withLatestFrom(\n            @NonNull Publisher<T1> source1, @NonNull Publisher<T2> source2,\n            @NonNull Publisher<T3> source3,\n            @NonNull Function4<? super T, ? super T1, ? super T2, ? super T3, R> combiner) {\n        Objects.requireNonNull(source1, \"source1 is null\");\n        Objects.requireNonNull(source2, \"source2 is null\");\n        Objects.requireNonNull(source3, \"source3 is null\");\n        Objects.requireNonNull(combiner, \"combiner is null\");\n        Function<Object[], R> f = Functions.toFunction(combiner);\n        return withLatestFrom(new Publisher[] { source1, source2, source3 }, f);\n    }\n","date":"2020-01-14 15:49:53","endLine":19017,"groupId":"10139","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"withLatestFrom","params":"(@NonNullPublisher<T1>source1@@NonNullPublisher<T2>source2@@NonNullPublisher<T3>source3@@NonNullFunction4<?superT@?superT1@?superT2@?superT3@R>combiner)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/48/6b0cb629defb0f51e33900cdb33090c85e4725.src","preCode":"    public final <T1, T2, T3, @NonNull R> Flowable<R> withLatestFrom(\n            @NonNull Publisher<T1> source1, @NonNull Publisher<T2> source2,\n            @NonNull Publisher<T3> source3,\n            @NonNull Function4<? super T, ? super T1, ? super T2, ? super T3, R> combiner) {\n        Objects.requireNonNull(source1, \"source1 is null\");\n        Objects.requireNonNull(source2, \"source2 is null\");\n        Objects.requireNonNull(source3, \"source3 is null\");\n        Objects.requireNonNull(combiner, \"combiner is null\");\n        Function<Object[], R> f = Functions.toFunction(combiner);\n        return withLatestFrom(new Publisher[] { source1, source2, source3 }, f);\n    }\n","realPath":"src/main/java/io/reactivex/rxjava3/core/Flowable.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":19007,"status":"B"}],"commitId":"fb6dab6847d858b22fe6a36558cf3b62dc10627d","commitMessage":"@@@3.x: Add nullability annotations to type arguments (#6840)\n\n","date":"2020-01-14 15:49:53","modifiedFileCount":"75","status":"B","submitter":"David Karnok"},{"authorTime":"2021-07-25 00:35:45","codes":[{"authorDate":"2021-07-25 00:35:45","commitOrder":2,"curCode":"    public final <@NonNull T1, @NonNull T2, @NonNull T3, @NonNull R> Observable<R> withLatestFrom(\n            @NonNull ObservableSource<T1> source1, @NonNull ObservableSource<T2> source2,\n            @NonNull ObservableSource<T3> source3,\n            @NonNull Function4<? super T, ? super T1, ? super T2, ? super T3, R> combiner) {\n        Objects.requireNonNull(source1, \"source1 is null\");\n        Objects.requireNonNull(source2, \"source2 is null\");\n        Objects.requireNonNull(source3, \"source3 is null\");\n        Objects.requireNonNull(combiner, \"combiner is null\");\n        Function<Object[], R> f = Functions.toFunction(combiner);\n        return withLatestFrom(new ObservableSource[] { source1, source2, source3 }, f);\n    }\n","date":"2021-07-25 00:35:45","endLine":16241,"groupId":"124386","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"withLatestFrom","params":"(@NonNullObservableSource<T1>source1@@NonNullObservableSource<T2>source2@@NonNullObservableSource<T3>source3@@NonNullFunction4<?superT@?superT1@?superT2@?superT3@R>combiner)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/be/33a95e3f43aee8827eff53f0756e4042f5b538.src","preCode":"    public final <T1, T2, T3, R> Observable<R> withLatestFrom(\n            @NonNull ObservableSource<T1> source1, @NonNull ObservableSource<T2> source2,\n            @NonNull ObservableSource<T3> source3,\n            @NonNull Function4<? super T, ? super T1, ? super T2, ? super T3, R> combiner) {\n        Objects.requireNonNull(source1, \"source1 is null\");\n        Objects.requireNonNull(source2, \"source2 is null\");\n        Objects.requireNonNull(source3, \"source3 is null\");\n        Objects.requireNonNull(combiner, \"combiner is null\");\n        Function<Object[], R> f = Functions.toFunction(combiner);\n        return withLatestFrom(new ObservableSource[] { source1, source2, source3 }, f);\n    }\n","realPath":"src/main/java/io/reactivex/rxjava3/core/Observable.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":16231,"status":"M"},{"authorDate":"2021-07-25 00:35:45","commitOrder":2,"curCode":"    public final <@NonNull T1, @NonNull T2, @NonNull T3, @NonNull R> Flowable<R> withLatestFrom(\n            @NonNull Publisher<T1> source1, @NonNull Publisher<T2> source2,\n            @NonNull Publisher<T3> source3,\n            @NonNull Function4<? super T, ? super T1, ? super T2, ? super T3, R> combiner) {\n        Objects.requireNonNull(source1, \"source1 is null\");\n        Objects.requireNonNull(source2, \"source2 is null\");\n        Objects.requireNonNull(source3, \"source3 is null\");\n        Objects.requireNonNull(combiner, \"combiner is null\");\n        Function<Object[], R> f = Functions.toFunction(combiner);\n        return withLatestFrom(new Publisher[] { source1, source2, source3 }, f);\n    }\n","date":"2021-07-25 00:35:45","endLine":19415,"groupId":"124386","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"withLatestFrom","params":"(@NonNullPublisher<T1>source1@@NonNullPublisher<T2>source2@@NonNullPublisher<T3>source3@@NonNullFunction4<?superT@?superT1@?superT2@?superT3@R>combiner)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/31/827d9e1c0235ea4c571f5df54be8e515e94da8.src","preCode":"    public final <T1, T2, T3, @NonNull R> Flowable<R> withLatestFrom(\n            @NonNull Publisher<T1> source1, @NonNull Publisher<T2> source2,\n            @NonNull Publisher<T3> source3,\n            @NonNull Function4<? super T, ? super T1, ? super T2, ? super T3, R> combiner) {\n        Objects.requireNonNull(source1, \"source1 is null\");\n        Objects.requireNonNull(source2, \"source2 is null\");\n        Objects.requireNonNull(source3, \"source3 is null\");\n        Objects.requireNonNull(combiner, \"combiner is null\");\n        Function<Object[], R> f = Functions.toFunction(combiner);\n        return withLatestFrom(new Publisher[] { source1, source2, source3 }, f);\n    }\n","realPath":"src/main/java/io/reactivex/rxjava3/core/Flowable.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":19405,"status":"M"}],"commitId":"40ca8eff4a0d6559258489cf282471f5e3b1a229","commitMessage":"@@@3.x: Move nullability annotations into the type argument declaration (#7303)\n\n* 3.x: Move nullability annotations into the type argument declaration\n\n* Reinforce Function<T.  R> return argument type where R is non-trivial","date":"2021-07-25 00:35:45","modifiedFileCount":"17","status":"M","submitter":"David Karnok"}]
