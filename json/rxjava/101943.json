[{"authorTime":"2019-08-16 20:51:17","codes":[{"authorDate":"2019-08-16 20:51:17","commitOrder":1,"curCode":"    public void subscribe(Subscriber<? super R>[] subscribers) {\n        if (!validate(subscribers)) {\n            return;\n        }\n\n        int n = subscribers.length;\n        @SuppressWarnings(\"unchecked\")\n        Subscriber<? super T>[] parents = new Subscriber[n];\n\n        for (int i = 0; i < n; i++) {\n            Subscriber<? super R> a = subscribers[i];\n            if (a instanceof ConditionalSubscriber) {\n                parents[i] = new ParallelMapConditionalSubscriber<T, R>((ConditionalSubscriber<? super R>)a, mapper);\n            } else {\n                parents[i] = new ParallelMapSubscriber<T, R>(a, mapper);\n            }\n        }\n\n        source.subscribe(parents);\n    }\n","date":"2019-08-16 20:51:17","endLine":64,"groupId":"3768","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"subscribe","params":"(Subscriber<?superR>[]subscribers)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/b2/62bfa2401e1c58cc32490917d86f46b1f0c7c1.src","preCode":"    public void subscribe(Subscriber<? super R>[] subscribers) {\n        if (!validate(subscribers)) {\n            return;\n        }\n\n        int n = subscribers.length;\n        @SuppressWarnings(\"unchecked\")\n        Subscriber<? super T>[] parents = new Subscriber[n];\n\n        for (int i = 0; i < n; i++) {\n            Subscriber<? super R> a = subscribers[i];\n            if (a instanceof ConditionalSubscriber) {\n                parents[i] = new ParallelMapConditionalSubscriber<T, R>((ConditionalSubscriber<? super R>)a, mapper);\n            } else {\n                parents[i] = new ParallelMapSubscriber<T, R>(a, mapper);\n            }\n        }\n\n        source.subscribe(parents);\n    }\n","realPath":"src/main/java/io/reactivex/rxjava3/internal/operators/parallel/ParallelMap.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":45,"status":"B"},{"authorDate":"2019-08-16 20:51:17","commitOrder":1,"curCode":"    public void subscribe(Subscriber<? super T>[] subscribers) {\n        if (!validate(subscribers)) {\n            return;\n        }\n\n        int n = subscribers.length;\n        @SuppressWarnings(\"unchecked\")\n        Subscriber<? super T>[] parents = new Subscriber[n];\n\n        for (int i = 0; i < n; i++) {\n            parents[i] = new ParallelPeekSubscriber<T>(subscribers[i], this);\n        }\n\n        source.subscribe(parents);\n    }\n","date":"2019-08-16 20:51:17","endLine":81,"groupId":"5545","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"subscribe","params":"(Subscriber<?superT>[]subscribers)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/4c/15e207d4c12692ce686c6792d9027f7db7364b.src","preCode":"    public void subscribe(Subscriber<? super T>[] subscribers) {\n        if (!validate(subscribers)) {\n            return;\n        }\n\n        int n = subscribers.length;\n        @SuppressWarnings(\"unchecked\")\n        Subscriber<? super T>[] parents = new Subscriber[n];\n\n        for (int i = 0; i < n; i++) {\n            parents[i] = new ParallelPeekSubscriber<T>(subscribers[i], this);\n        }\n\n        source.subscribe(parents);\n    }\n","realPath":"src/main/java/io/reactivex/rxjava3/internal/operators/parallel/ParallelPeek.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":67,"status":"B"}],"commitId":"a1693ecc9215027a7a3eae75272979ebb4d79a27","commitMessage":"@@@3.x: Refactor to io.reactivex.rxjava3.** (#6621)\n\n* 3.x: Refactor to io.reactivex.rxjava3.**\n\n* fix javadoc cleanup gradle\n\n* javadoc gradle again\n\n* Fix package location in text\n","date":"2019-08-16 20:51:17","modifiedFileCount":"0","status":"B","submitter":"David Karnok"},{"authorTime":"2019-12-27 05:37:39","codes":[{"authorDate":"2019-08-16 20:51:17","commitOrder":2,"curCode":"    public void subscribe(Subscriber<? super R>[] subscribers) {\n        if (!validate(subscribers)) {\n            return;\n        }\n\n        int n = subscribers.length;\n        @SuppressWarnings(\"unchecked\")\n        Subscriber<? super T>[] parents = new Subscriber[n];\n\n        for (int i = 0; i < n; i++) {\n            Subscriber<? super R> a = subscribers[i];\n            if (a instanceof ConditionalSubscriber) {\n                parents[i] = new ParallelMapConditionalSubscriber<T, R>((ConditionalSubscriber<? super R>)a, mapper);\n            } else {\n                parents[i] = new ParallelMapSubscriber<T, R>(a, mapper);\n            }\n        }\n\n        source.subscribe(parents);\n    }\n","date":"2019-08-16 20:51:17","endLine":64,"groupId":"3768","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"subscribe","params":"(Subscriber<?superR>[]subscribers)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/b2/62bfa2401e1c58cc32490917d86f46b1f0c7c1.src","preCode":"    public void subscribe(Subscriber<? super R>[] subscribers) {\n        if (!validate(subscribers)) {\n            return;\n        }\n\n        int n = subscribers.length;\n        @SuppressWarnings(\"unchecked\")\n        Subscriber<? super T>[] parents = new Subscriber[n];\n\n        for (int i = 0; i < n; i++) {\n            Subscriber<? super R> a = subscribers[i];\n            if (a instanceof ConditionalSubscriber) {\n                parents[i] = new ParallelMapConditionalSubscriber<T, R>((ConditionalSubscriber<? super R>)a, mapper);\n            } else {\n                parents[i] = new ParallelMapSubscriber<T, R>(a, mapper);\n            }\n        }\n\n        source.subscribe(parents);\n    }\n","realPath":"src/main/java/io/reactivex/rxjava3/internal/operators/parallel/ParallelMap.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":45,"status":"N"},{"authorDate":"2019-12-27 05:37:39","commitOrder":2,"curCode":"    public void subscribe(Subscriber<? super T>[] subscribers) {\n        if (!validate(subscribers)) {\n            return;\n        }\n\n        int n = subscribers.length;\n        @SuppressWarnings(\"unchecked\")\n        Subscriber<? super T>[] parents = new Subscriber[n];\n\n        for (int i = 0; i < n; i++) {\n            parents[i] = new ParallelPeekSubscriber<>(subscribers[i], this);\n        }\n\n        source.subscribe(parents);\n    }\n","date":"2019-12-27 05:37:39","endLine":82,"groupId":"5545","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"subscribe","params":"(Subscriber<?superT>[]subscribers)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/20/6a2dd4721b8fc0ad751ce1283dd7b5d0b95da9.src","preCode":"    public void subscribe(Subscriber<? super T>[] subscribers) {\n        if (!validate(subscribers)) {\n            return;\n        }\n\n        int n = subscribers.length;\n        @SuppressWarnings(\"unchecked\")\n        Subscriber<? super T>[] parents = new Subscriber[n];\n\n        for (int i = 0; i < n; i++) {\n            parents[i] = new ParallelPeekSubscriber<T>(subscribers[i], this);\n        }\n\n        source.subscribe(parents);\n    }\n","realPath":"src/main/java/io/reactivex/rxjava3/internal/operators/parallel/ParallelPeek.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":68,"status":"M"}],"commitId":"3d00eb188bad1d49aa058e896ad9d1b5026eba7d","commitMessage":"@@@3.x: [Java 8] Add ParallelFlowable operators + cleanup (#6798)\n\n","date":"2019-12-27 05:37:39","modifiedFileCount":"22","status":"M","submitter":"David Karnok"},{"authorTime":"2021-02-25 00:40:46","codes":[{"authorDate":"2021-02-25 00:40:46","commitOrder":3,"curCode":"    public void subscribe(Subscriber<? super R>[] subscribers) {\n        subscribers = RxJavaPlugins.onSubscribe(this, subscribers);\n\n        if (!validate(subscribers)) {\n            return;\n        }\n\n        int n = subscribers.length;\n        @SuppressWarnings(\"unchecked\")\n        Subscriber<? super T>[] parents = new Subscriber[n];\n\n        for (int i = 0; i < n; i++) {\n            Subscriber<? super R> a = subscribers[i];\n            if (a instanceof ConditionalSubscriber) {\n                parents[i] = new ParallelMapConditionalSubscriber<T, R>((ConditionalSubscriber<? super R>)a, mapper);\n            } else {\n                parents[i] = new ParallelMapSubscriber<T, R>(a, mapper);\n            }\n        }\n\n        source.subscribe(parents);\n    }\n","date":"2021-02-25 00:40:46","endLine":67,"groupId":"101943","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"subscribe","params":"(Subscriber<?superR>[]subscribers)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/37/87a52f059056bf2da4900f7b94c956c5db5d0f.src","preCode":"    public void subscribe(Subscriber<? super R>[] subscribers) {\n        if (!validate(subscribers)) {\n            return;\n        }\n\n        int n = subscribers.length;\n        @SuppressWarnings(\"unchecked\")\n        Subscriber<? super T>[] parents = new Subscriber[n];\n\n        for (int i = 0; i < n; i++) {\n            Subscriber<? super R> a = subscribers[i];\n            if (a instanceof ConditionalSubscriber) {\n                parents[i] = new ParallelMapConditionalSubscriber<T, R>((ConditionalSubscriber<? super R>)a, mapper);\n            } else {\n                parents[i] = new ParallelMapSubscriber<T, R>(a, mapper);\n            }\n        }\n\n        source.subscribe(parents);\n    }\n","realPath":"src/main/java/io/reactivex/rxjava3/internal/operators/parallel/ParallelMap.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":46,"status":"M"},{"authorDate":"2021-02-25 00:40:46","commitOrder":3,"curCode":"    public void subscribe(Subscriber<? super T>[] subscribers) {\n        subscribers = RxJavaPlugins.onSubscribe(this, subscribers);\n\n        if (!validate(subscribers)) {\n            return;\n        }\n\n        int n = subscribers.length;\n        @SuppressWarnings(\"unchecked\")\n        Subscriber<? super T>[] parents = new Subscriber[n];\n\n        for (int i = 0; i < n; i++) {\n            parents[i] = new ParallelPeekSubscriber<>(subscribers[i], this);\n        }\n\n        source.subscribe(parents);\n    }\n","date":"2021-02-25 00:40:46","endLine":84,"groupId":"101943","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"subscribe","params":"(Subscriber<?superT>[]subscribers)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/20/c28ef581fe8de12911cf1fc6a616a21c422aa8.src","preCode":"    public void subscribe(Subscriber<? super T>[] subscribers) {\n        if (!validate(subscribers)) {\n            return;\n        }\n\n        int n = subscribers.length;\n        @SuppressWarnings(\"unchecked\")\n        Subscriber<? super T>[] parents = new Subscriber[n];\n\n        for (int i = 0; i < n; i++) {\n            parents[i] = new ParallelPeekSubscriber<>(subscribers[i], this);\n        }\n\n        source.subscribe(parents);\n    }\n","realPath":"src/main/java/io/reactivex/rxjava3/internal/operators/parallel/ParallelPeek.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":68,"status":"M"}],"commitId":"22c5e0bfe0ca9a68cd726d23fb696fe56a059a84","commitMessage":"@@@3.x: Add onSubscribe hook to ParallelFlowable operators (#7191)\n\n","date":"2021-02-25 00:40:46","modifiedFileCount":"17","status":"M","submitter":"David Karnok"}]
