[{"authorTime":"2019-08-16 20:51:17","codes":[{"authorDate":"2019-08-16 20:51:17","commitOrder":1,"curCode":"    public void ambRace() {\n        TestObserver<Void> to = new TestObserver<Void>();\n        to.onSubscribe(Disposables.empty());\n\n        CompositeDisposable cd = new CompositeDisposable();\n        AtomicBoolean once = new AtomicBoolean();\n        Amb a = new Amb(once, cd, to);\n        a.onSubscribe(Disposables.empty());\n\n        a.onComplete();\n        a.onComplete();\n\n        List<Throwable> errors = TestHelper.trackPluginErrors();\n        try {\n            a.onError(new TestException());\n\n            TestHelper.assertUndeliverable(errors, 0, TestException.class);\n        } finally {\n            RxJavaPlugins.reset();\n        }\n    }\n","date":"2019-08-16 20:51:17","endLine":194,"groupId":"7490","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"ambRace","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/02/e607e6c8e1bdebdecad41500a2c834e6a047c0.src","preCode":"    public void ambRace() {\n        TestObserver<Void> to = new TestObserver<Void>();\n        to.onSubscribe(Disposables.empty());\n\n        CompositeDisposable cd = new CompositeDisposable();\n        AtomicBoolean once = new AtomicBoolean();\n        Amb a = new Amb(once, cd, to);\n        a.onSubscribe(Disposables.empty());\n\n        a.onComplete();\n        a.onComplete();\n\n        List<Throwable> errors = TestHelper.trackPluginErrors();\n        try {\n            a.onError(new TestException());\n\n            TestHelper.assertUndeliverable(errors, 0, TestException.class);\n        } finally {\n            RxJavaPlugins.reset();\n        }\n    }\n","realPath":"src/test/java/io/reactivex/rxjava3/internal/operators/completable/CompletableAmbTest.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":174,"status":"B"},{"authorDate":"2019-08-16 20:51:17","commitOrder":1,"curCode":"    public void ambRace() {\n        TestObserver<Void> to = new TestObserver<Void>();\n        to.onSubscribe(Disposables.empty());\n\n        CompositeDisposable cd = new CompositeDisposable();\n        AtomicBoolean once = new AtomicBoolean();\n        TimeOutObserver a = new TimeOutObserver(cd, once, to);\n\n        a.onComplete();\n        a.onComplete();\n\n        List<Throwable> errors = TestHelper.trackPluginErrors();\n        try {\n            a.onError(new TestException());\n\n            TestHelper.assertUndeliverable(errors, 0, TestException.class);\n        } finally {\n            RxJavaPlugins.reset();\n        }\n    }\n","date":"2019-08-16 20:51:17","endLine":176,"groupId":"8470","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"ambRace","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/92/615622208bd37ffed7a3bbf4079f9658c02e67.src","preCode":"    public void ambRace() {\n        TestObserver<Void> to = new TestObserver<Void>();\n        to.onSubscribe(Disposables.empty());\n\n        CompositeDisposable cd = new CompositeDisposable();\n        AtomicBoolean once = new AtomicBoolean();\n        TimeOutObserver a = new TimeOutObserver(cd, once, to);\n\n        a.onComplete();\n        a.onComplete();\n\n        List<Throwable> errors = TestHelper.trackPluginErrors();\n        try {\n            a.onError(new TestException());\n\n            TestHelper.assertUndeliverable(errors, 0, TestException.class);\n        } finally {\n            RxJavaPlugins.reset();\n        }\n    }\n","realPath":"src/test/java/io/reactivex/rxjava3/internal/operators/completable/CompletableTimeoutTest.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":157,"status":"B"}],"commitId":"a1693ecc9215027a7a3eae75272979ebb4d79a27","commitMessage":"@@@3.x: Refactor to io.reactivex.rxjava3.** (#6621)\n\n* 3.x: Refactor to io.reactivex.rxjava3.**\n\n* fix javadoc cleanup gradle\n\n* javadoc gradle again\n\n* Fix package location in text\n","date":"2019-08-16 20:51:17","modifiedFileCount":"0","status":"B","submitter":"David Karnok"},{"authorTime":"2019-12-20 02:39:40","codes":[{"authorDate":"2019-12-20 02:39:40","commitOrder":2,"curCode":"    public void ambRace() {\n        TestObserver<Void> to = new TestObserver<Void>();\n        to.onSubscribe(Disposable.empty());\n\n        CompositeDisposable cd = new CompositeDisposable();\n        AtomicBoolean once = new AtomicBoolean();\n        Amb a = new Amb(once, cd, to);\n        a.onSubscribe(Disposable.empty());\n\n        a.onComplete();\n        a.onComplete();\n\n        List<Throwable> errors = TestHelper.trackPluginErrors();\n        try {\n            a.onError(new TestException());\n\n            TestHelper.assertUndeliverable(errors, 0, TestException.class);\n        } finally {\n            RxJavaPlugins.reset();\n        }\n    }\n","date":"2019-12-20 02:39:40","endLine":194,"groupId":"1719","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"ambRace","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/81/92f338dabe6979440c37aa381c1faf40c37036.src","preCode":"    public void ambRace() {\n        TestObserver<Void> to = new TestObserver<Void>();\n        to.onSubscribe(Disposables.empty());\n\n        CompositeDisposable cd = new CompositeDisposable();\n        AtomicBoolean once = new AtomicBoolean();\n        Amb a = new Amb(once, cd, to);\n        a.onSubscribe(Disposables.empty());\n\n        a.onComplete();\n        a.onComplete();\n\n        List<Throwable> errors = TestHelper.trackPluginErrors();\n        try {\n            a.onError(new TestException());\n\n            TestHelper.assertUndeliverable(errors, 0, TestException.class);\n        } finally {\n            RxJavaPlugins.reset();\n        }\n    }\n","realPath":"src/test/java/io/reactivex/rxjava3/internal/operators/completable/CompletableAmbTest.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":174,"status":"M"},{"authorDate":"2019-12-20 02:39:40","commitOrder":2,"curCode":"    public void ambRace() {\n        TestObserver<Void> to = new TestObserver<Void>();\n        to.onSubscribe(Disposable.empty());\n\n        CompositeDisposable cd = new CompositeDisposable();\n        AtomicBoolean once = new AtomicBoolean();\n        TimeOutObserver a = new TimeOutObserver(cd, once, to);\n\n        a.onComplete();\n        a.onComplete();\n\n        List<Throwable> errors = TestHelper.trackPluginErrors();\n        try {\n            a.onError(new TestException());\n\n            TestHelper.assertUndeliverable(errors, 0, TestException.class);\n        } finally {\n            RxJavaPlugins.reset();\n        }\n    }\n","date":"2019-12-20 02:39:40","endLine":176,"groupId":"8470","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"ambRace","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/0b/176d808e74997347c9bf535c945551569d6e78.src","preCode":"    public void ambRace() {\n        TestObserver<Void> to = new TestObserver<Void>();\n        to.onSubscribe(Disposables.empty());\n\n        CompositeDisposable cd = new CompositeDisposable();\n        AtomicBoolean once = new AtomicBoolean();\n        TimeOutObserver a = new TimeOutObserver(cd, once, to);\n\n        a.onComplete();\n        a.onComplete();\n\n        List<Throwable> errors = TestHelper.trackPluginErrors();\n        try {\n            a.onError(new TestException());\n\n            TestHelper.assertUndeliverable(errors, 0, TestException.class);\n        } finally {\n            RxJavaPlugins.reset();\n        }\n    }\n","realPath":"src/test/java/io/reactivex/rxjava3/internal/operators/completable/CompletableTimeoutTest.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":157,"status":"M"}],"commitId":"166c529eb165b473c9bff11e8fedbde6c471b005","commitMessage":"@@@Migrate Disposables static factories to Disposable interface (#6781)\n\n","date":"2019-12-20 02:39:40","modifiedFileCount":"202","status":"M","submitter":"Jake Wharton"},{"authorTime":"2019-12-22 19:17:23","codes":[{"authorDate":"2019-12-22 19:17:23","commitOrder":3,"curCode":"    public void ambRace() {\n        TestObserver<Void> to = new TestObserver<>();\n        to.onSubscribe(Disposable.empty());\n\n        CompositeDisposable cd = new CompositeDisposable();\n        AtomicBoolean once = new AtomicBoolean();\n        Amb a = new Amb(once, cd, to);\n        a.onSubscribe(Disposable.empty());\n\n        a.onComplete();\n        a.onComplete();\n\n        List<Throwable> errors = TestHelper.trackPluginErrors();\n        try {\n            a.onError(new TestException());\n\n            TestHelper.assertUndeliverable(errors, 0, TestException.class);\n        } finally {\n            RxJavaPlugins.reset();\n        }\n    }\n","date":"2019-12-22 19:17:23","endLine":194,"groupId":"101881","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"ambRace","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/60/c69b5f204e0c69c172b8c1f63ef84e70b9dce6.src","preCode":"    public void ambRace() {\n        TestObserver<Void> to = new TestObserver<Void>();\n        to.onSubscribe(Disposable.empty());\n\n        CompositeDisposable cd = new CompositeDisposable();\n        AtomicBoolean once = new AtomicBoolean();\n        Amb a = new Amb(once, cd, to);\n        a.onSubscribe(Disposable.empty());\n\n        a.onComplete();\n        a.onComplete();\n\n        List<Throwable> errors = TestHelper.trackPluginErrors();\n        try {\n            a.onError(new TestException());\n\n            TestHelper.assertUndeliverable(errors, 0, TestException.class);\n        } finally {\n            RxJavaPlugins.reset();\n        }\n    }\n","realPath":"src/test/java/io/reactivex/rxjava3/internal/operators/completable/CompletableAmbTest.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":174,"status":"M"},{"authorDate":"2019-12-22 19:17:23","commitOrder":3,"curCode":"    public void ambRace() {\n        TestObserver<Void> to = new TestObserver<>();\n        to.onSubscribe(Disposable.empty());\n\n        CompositeDisposable cd = new CompositeDisposable();\n        AtomicBoolean once = new AtomicBoolean();\n        TimeOutObserver a = new TimeOutObserver(cd, once, to);\n\n        a.onComplete();\n        a.onComplete();\n\n        List<Throwable> errors = TestHelper.trackPluginErrors();\n        try {\n            a.onError(new TestException());\n\n            TestHelper.assertUndeliverable(errors, 0, TestException.class);\n        } finally {\n            RxJavaPlugins.reset();\n        }\n    }\n","date":"2019-12-22 19:17:23","endLine":176,"groupId":"101881","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"ambRace","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/a2/f0771ab4cd8173f81e2c366c1171773feb00b6.src","preCode":"    public void ambRace() {\n        TestObserver<Void> to = new TestObserver<Void>();\n        to.onSubscribe(Disposable.empty());\n\n        CompositeDisposable cd = new CompositeDisposable();\n        AtomicBoolean once = new AtomicBoolean();\n        TimeOutObserver a = new TimeOutObserver(cd, once, to);\n\n        a.onComplete();\n        a.onComplete();\n\n        List<Throwable> errors = TestHelper.trackPluginErrors();\n        try {\n            a.onError(new TestException());\n\n            TestHelper.assertUndeliverable(errors, 0, TestException.class);\n        } finally {\n            RxJavaPlugins.reset();\n        }\n    }\n","realPath":"src/test/java/io/reactivex/rxjava3/internal/operators/completable/CompletableTimeoutTest.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":157,"status":"M"}],"commitId":"75da4b504a52466b455a49a342747514fa0dffab","commitMessage":"@@@Diamond operators in tests (#6788)\n\n* diamond operators in unit tests.  small packages in internal/\n\n* diamond operators in unit tests.  small packages in internal/operators\n","date":"2019-12-22 19:17:23","modifiedFileCount":"92","status":"M","submitter":"Dmitry Volkov"}]
