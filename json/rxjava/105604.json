[{"authorTime":"2019-08-16 20:51:17","codes":[{"authorDate":"2019-08-16 20:51:17","commitOrder":1,"curCode":"    public void errorInParentObservableDelayed() throws Exception {\n        for (int i = 0; i < 50; i++) {\n            final TestASynchronous1sDelayedObservable o1 = new TestASynchronous1sDelayedObservable();\n            final TestASynchronous1sDelayedObservable o2 = new TestASynchronous1sDelayedObservable();\n            Observable<Observable<String>> parentObservable = Observable.unsafeCreate(new ObservableSource<Observable<String>>() {\n                @Override\n                public void subscribe(Observer<? super Observable<String>> op) {\n                    op.onSubscribe(Disposables.empty());\n                    op.onNext(Observable.unsafeCreate(o1));\n                    op.onNext(Observable.unsafeCreate(o2));\n                    op.onError(new NullPointerException(\"throwing exception in parent\"));\n                }\n            });\n\n            Observer<String> stringObserver = TestHelper.mockObserver();\n\n            TestObserverEx<String> to = new TestObserverEx<String>(stringObserver);\n            Observable<String> m = Observable.mergeDelayError(parentObservable);\n            m.subscribe(to);\n            System.out.println(\"testErrorInParentObservableDelayed | \" + i);\n            to.awaitDone(2000, TimeUnit.MILLISECONDS);\n            to.assertTerminated();\n\n            verify(stringObserver, times(2)).onNext(\"hello\");\n            verify(stringObserver, times(1)).onError(any(NullPointerException.class));\n            verify(stringObserver, never()).onComplete();\n        }\n    }\n","date":"2019-08-16 20:51:17","endLine":476,"groupId":"3184","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"errorInParentObservableDelayed","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/82/fd2e28fa07ba91b169bdc8b07c39e2c8e66676.src","preCode":"    public void errorInParentObservableDelayed() throws Exception {\n        for (int i = 0; i < 50; i++) {\n            final TestASynchronous1sDelayedObservable o1 = new TestASynchronous1sDelayedObservable();\n            final TestASynchronous1sDelayedObservable o2 = new TestASynchronous1sDelayedObservable();\n            Observable<Observable<String>> parentObservable = Observable.unsafeCreate(new ObservableSource<Observable<String>>() {\n                @Override\n                public void subscribe(Observer<? super Observable<String>> op) {\n                    op.onSubscribe(Disposables.empty());\n                    op.onNext(Observable.unsafeCreate(o1));\n                    op.onNext(Observable.unsafeCreate(o2));\n                    op.onError(new NullPointerException(\"throwing exception in parent\"));\n                }\n            });\n\n            Observer<String> stringObserver = TestHelper.mockObserver();\n\n            TestObserverEx<String> to = new TestObserverEx<String>(stringObserver);\n            Observable<String> m = Observable.mergeDelayError(parentObservable);\n            m.subscribe(to);\n            System.out.println(\"testErrorInParentObservableDelayed | \" + i);\n            to.awaitDone(2000, TimeUnit.MILLISECONDS);\n            to.assertTerminated();\n\n            verify(stringObserver, times(2)).onNext(\"hello\");\n            verify(stringObserver, times(1)).onError(any(NullPointerException.class));\n            verify(stringObserver, never()).onComplete();\n        }\n    }\n","realPath":"src/test/java/io/reactivex/rxjava3/internal/operators/observable/ObservableMergeDelayErrorTest.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":449,"status":"B"},{"authorDate":"2019-08-16 20:51:17","commitOrder":1,"curCode":"    public void errorInParentFlowableDelayed() throws Exception {\n        for (int i = 0; i < 50; i++) {\n            final TestASynchronous1sDelayedFlowable f1 = new TestASynchronous1sDelayedFlowable();\n            final TestASynchronous1sDelayedFlowable f2 = new TestASynchronous1sDelayedFlowable();\n            Flowable<Flowable<String>> parentFlowable = Flowable.unsafeCreate(new Publisher<Flowable<String>>() {\n                @Override\n                public void subscribe(Subscriber<? super Flowable<String>> op) {\n                    op.onSubscribe(new BooleanSubscription());\n                    op.onNext(Flowable.unsafeCreate(f1));\n                    op.onNext(Flowable.unsafeCreate(f2));\n                    op.onError(new NullPointerException(\"throwing exception in parent\"));\n                }\n            });\n\n            stringSubscriber = TestHelper.mockSubscriber();\n\n            TestSubscriberEx<String> ts = new TestSubscriberEx<String>(stringSubscriber);\n            Flowable<String> m = Flowable.mergeDelayError(parentFlowable);\n            m.subscribe(ts);\n            System.out.println(\"testErrorInParentFlowableDelayed | \" + i);\n            ts.awaitDone(2000, TimeUnit.MILLISECONDS);\n            ts.assertTerminated();\n\n            verify(stringSubscriber, times(2)).onNext(\"hello\");\n            verify(stringSubscriber, times(1)).onError(any(NullPointerException.class));\n            verify(stringSubscriber, never()).onComplete();\n        }\n    }\n","date":"2019-08-16 20:51:17","endLine":481,"groupId":"5198","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"errorInParentFlowableDelayed","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/f8/0323abdd4eb2474cb0a6709855e4cbef7602e2.src","preCode":"    public void errorInParentFlowableDelayed() throws Exception {\n        for (int i = 0; i < 50; i++) {\n            final TestASynchronous1sDelayedFlowable f1 = new TestASynchronous1sDelayedFlowable();\n            final TestASynchronous1sDelayedFlowable f2 = new TestASynchronous1sDelayedFlowable();\n            Flowable<Flowable<String>> parentFlowable = Flowable.unsafeCreate(new Publisher<Flowable<String>>() {\n                @Override\n                public void subscribe(Subscriber<? super Flowable<String>> op) {\n                    op.onSubscribe(new BooleanSubscription());\n                    op.onNext(Flowable.unsafeCreate(f1));\n                    op.onNext(Flowable.unsafeCreate(f2));\n                    op.onError(new NullPointerException(\"throwing exception in parent\"));\n                }\n            });\n\n            stringSubscriber = TestHelper.mockSubscriber();\n\n            TestSubscriberEx<String> ts = new TestSubscriberEx<String>(stringSubscriber);\n            Flowable<String> m = Flowable.mergeDelayError(parentFlowable);\n            m.subscribe(ts);\n            System.out.println(\"testErrorInParentFlowableDelayed | \" + i);\n            ts.awaitDone(2000, TimeUnit.MILLISECONDS);\n            ts.assertTerminated();\n\n            verify(stringSubscriber, times(2)).onNext(\"hello\");\n            verify(stringSubscriber, times(1)).onError(any(NullPointerException.class));\n            verify(stringSubscriber, never()).onComplete();\n        }\n    }\n","realPath":"src/test/java/io/reactivex/rxjava3/internal/operators/flowable/FlowableMergeDelayErrorTest.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":454,"status":"B"}],"commitId":"a1693ecc9215027a7a3eae75272979ebb4d79a27","commitMessage":"@@@3.x: Refactor to io.reactivex.rxjava3.** (#6621)\n\n* 3.x: Refactor to io.reactivex.rxjava3.**\n\n* fix javadoc cleanup gradle\n\n* javadoc gradle again\n\n* Fix package location in text\n","date":"2019-08-16 20:51:17","modifiedFileCount":"0","status":"B","submitter":"David Karnok"},{"authorTime":"2019-08-16 20:51:17","codes":[{"authorDate":"2019-12-20 02:39:40","commitOrder":2,"curCode":"    public void errorInParentObservableDelayed() throws Exception {\n        for (int i = 0; i < 50; i++) {\n            final TestASynchronous1sDelayedObservable o1 = new TestASynchronous1sDelayedObservable();\n            final TestASynchronous1sDelayedObservable o2 = new TestASynchronous1sDelayedObservable();\n            Observable<Observable<String>> parentObservable = Observable.unsafeCreate(new ObservableSource<Observable<String>>() {\n                @Override\n                public void subscribe(Observer<? super Observable<String>> op) {\n                    op.onSubscribe(Disposable.empty());\n                    op.onNext(Observable.unsafeCreate(o1));\n                    op.onNext(Observable.unsafeCreate(o2));\n                    op.onError(new NullPointerException(\"throwing exception in parent\"));\n                }\n            });\n\n            Observer<String> stringObserver = TestHelper.mockObserver();\n\n            TestObserverEx<String> to = new TestObserverEx<String>(stringObserver);\n            Observable<String> m = Observable.mergeDelayError(parentObservable);\n            m.subscribe(to);\n            System.out.println(\"testErrorInParentObservableDelayed | \" + i);\n            to.awaitDone(2000, TimeUnit.MILLISECONDS);\n            to.assertTerminated();\n\n            verify(stringObserver, times(2)).onNext(\"hello\");\n            verify(stringObserver, times(1)).onError(any(NullPointerException.class));\n            verify(stringObserver, never()).onComplete();\n        }\n    }\n","date":"2019-12-20 02:39:40","endLine":476,"groupId":"3184","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"errorInParentObservableDelayed","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/87/7b75b70a71a55ad5ac6c39d8e5112c7d1eaca1.src","preCode":"    public void errorInParentObservableDelayed() throws Exception {\n        for (int i = 0; i < 50; i++) {\n            final TestASynchronous1sDelayedObservable o1 = new TestASynchronous1sDelayedObservable();\n            final TestASynchronous1sDelayedObservable o2 = new TestASynchronous1sDelayedObservable();\n            Observable<Observable<String>> parentObservable = Observable.unsafeCreate(new ObservableSource<Observable<String>>() {\n                @Override\n                public void subscribe(Observer<? super Observable<String>> op) {\n                    op.onSubscribe(Disposables.empty());\n                    op.onNext(Observable.unsafeCreate(o1));\n                    op.onNext(Observable.unsafeCreate(o2));\n                    op.onError(new NullPointerException(\"throwing exception in parent\"));\n                }\n            });\n\n            Observer<String> stringObserver = TestHelper.mockObserver();\n\n            TestObserverEx<String> to = new TestObserverEx<String>(stringObserver);\n            Observable<String> m = Observable.mergeDelayError(parentObservable);\n            m.subscribe(to);\n            System.out.println(\"testErrorInParentObservableDelayed | \" + i);\n            to.awaitDone(2000, TimeUnit.MILLISECONDS);\n            to.assertTerminated();\n\n            verify(stringObserver, times(2)).onNext(\"hello\");\n            verify(stringObserver, times(1)).onError(any(NullPointerException.class));\n            verify(stringObserver, never()).onComplete();\n        }\n    }\n","realPath":"src/test/java/io/reactivex/rxjava3/internal/operators/observable/ObservableMergeDelayErrorTest.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":449,"status":"M"},{"authorDate":"2019-08-16 20:51:17","commitOrder":2,"curCode":"    public void errorInParentFlowableDelayed() throws Exception {\n        for (int i = 0; i < 50; i++) {\n            final TestASynchronous1sDelayedFlowable f1 = new TestASynchronous1sDelayedFlowable();\n            final TestASynchronous1sDelayedFlowable f2 = new TestASynchronous1sDelayedFlowable();\n            Flowable<Flowable<String>> parentFlowable = Flowable.unsafeCreate(new Publisher<Flowable<String>>() {\n                @Override\n                public void subscribe(Subscriber<? super Flowable<String>> op) {\n                    op.onSubscribe(new BooleanSubscription());\n                    op.onNext(Flowable.unsafeCreate(f1));\n                    op.onNext(Flowable.unsafeCreate(f2));\n                    op.onError(new NullPointerException(\"throwing exception in parent\"));\n                }\n            });\n\n            stringSubscriber = TestHelper.mockSubscriber();\n\n            TestSubscriberEx<String> ts = new TestSubscriberEx<String>(stringSubscriber);\n            Flowable<String> m = Flowable.mergeDelayError(parentFlowable);\n            m.subscribe(ts);\n            System.out.println(\"testErrorInParentFlowableDelayed | \" + i);\n            ts.awaitDone(2000, TimeUnit.MILLISECONDS);\n            ts.assertTerminated();\n\n            verify(stringSubscriber, times(2)).onNext(\"hello\");\n            verify(stringSubscriber, times(1)).onError(any(NullPointerException.class));\n            verify(stringSubscriber, never()).onComplete();\n        }\n    }\n","date":"2019-08-16 20:51:17","endLine":481,"groupId":"5198","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"errorInParentFlowableDelayed","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/f8/0323abdd4eb2474cb0a6709855e4cbef7602e2.src","preCode":"    public void errorInParentFlowableDelayed() throws Exception {\n        for (int i = 0; i < 50; i++) {\n            final TestASynchronous1sDelayedFlowable f1 = new TestASynchronous1sDelayedFlowable();\n            final TestASynchronous1sDelayedFlowable f2 = new TestASynchronous1sDelayedFlowable();\n            Flowable<Flowable<String>> parentFlowable = Flowable.unsafeCreate(new Publisher<Flowable<String>>() {\n                @Override\n                public void subscribe(Subscriber<? super Flowable<String>> op) {\n                    op.onSubscribe(new BooleanSubscription());\n                    op.onNext(Flowable.unsafeCreate(f1));\n                    op.onNext(Flowable.unsafeCreate(f2));\n                    op.onError(new NullPointerException(\"throwing exception in parent\"));\n                }\n            });\n\n            stringSubscriber = TestHelper.mockSubscriber();\n\n            TestSubscriberEx<String> ts = new TestSubscriberEx<String>(stringSubscriber);\n            Flowable<String> m = Flowable.mergeDelayError(parentFlowable);\n            m.subscribe(ts);\n            System.out.println(\"testErrorInParentFlowableDelayed | \" + i);\n            ts.awaitDone(2000, TimeUnit.MILLISECONDS);\n            ts.assertTerminated();\n\n            verify(stringSubscriber, times(2)).onNext(\"hello\");\n            verify(stringSubscriber, times(1)).onError(any(NullPointerException.class));\n            verify(stringSubscriber, never()).onComplete();\n        }\n    }\n","realPath":"src/test/java/io/reactivex/rxjava3/internal/operators/flowable/FlowableMergeDelayErrorTest.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":454,"status":"N"}],"commitId":"166c529eb165b473c9bff11e8fedbde6c471b005","commitMessage":"@@@Migrate Disposables static factories to Disposable interface (#6781)\n\n","date":"2019-12-20 02:39:40","modifiedFileCount":"202","status":"M","submitter":"Jake Wharton"},{"authorTime":"2019-12-22 18:39:23","codes":[{"authorDate":"2019-12-20 02:39:40","commitOrder":3,"curCode":"    public void errorInParentObservableDelayed() throws Exception {\n        for (int i = 0; i < 50; i++) {\n            final TestASynchronous1sDelayedObservable o1 = new TestASynchronous1sDelayedObservable();\n            final TestASynchronous1sDelayedObservable o2 = new TestASynchronous1sDelayedObservable();\n            Observable<Observable<String>> parentObservable = Observable.unsafeCreate(new ObservableSource<Observable<String>>() {\n                @Override\n                public void subscribe(Observer<? super Observable<String>> op) {\n                    op.onSubscribe(Disposable.empty());\n                    op.onNext(Observable.unsafeCreate(o1));\n                    op.onNext(Observable.unsafeCreate(o2));\n                    op.onError(new NullPointerException(\"throwing exception in parent\"));\n                }\n            });\n\n            Observer<String> stringObserver = TestHelper.mockObserver();\n\n            TestObserverEx<String> to = new TestObserverEx<String>(stringObserver);\n            Observable<String> m = Observable.mergeDelayError(parentObservable);\n            m.subscribe(to);\n            System.out.println(\"testErrorInParentObservableDelayed | \" + i);\n            to.awaitDone(2000, TimeUnit.MILLISECONDS);\n            to.assertTerminated();\n\n            verify(stringObserver, times(2)).onNext(\"hello\");\n            verify(stringObserver, times(1)).onError(any(NullPointerException.class));\n            verify(stringObserver, never()).onComplete();\n        }\n    }\n","date":"2019-12-20 02:39:40","endLine":476,"groupId":"3184","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"errorInParentObservableDelayed","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/87/7b75b70a71a55ad5ac6c39d8e5112c7d1eaca1.src","preCode":"    public void errorInParentObservableDelayed() throws Exception {\n        for (int i = 0; i < 50; i++) {\n            final TestASynchronous1sDelayedObservable o1 = new TestASynchronous1sDelayedObservable();\n            final TestASynchronous1sDelayedObservable o2 = new TestASynchronous1sDelayedObservable();\n            Observable<Observable<String>> parentObservable = Observable.unsafeCreate(new ObservableSource<Observable<String>>() {\n                @Override\n                public void subscribe(Observer<? super Observable<String>> op) {\n                    op.onSubscribe(Disposable.empty());\n                    op.onNext(Observable.unsafeCreate(o1));\n                    op.onNext(Observable.unsafeCreate(o2));\n                    op.onError(new NullPointerException(\"throwing exception in parent\"));\n                }\n            });\n\n            Observer<String> stringObserver = TestHelper.mockObserver();\n\n            TestObserverEx<String> to = new TestObserverEx<String>(stringObserver);\n            Observable<String> m = Observable.mergeDelayError(parentObservable);\n            m.subscribe(to);\n            System.out.println(\"testErrorInParentObservableDelayed | \" + i);\n            to.awaitDone(2000, TimeUnit.MILLISECONDS);\n            to.assertTerminated();\n\n            verify(stringObserver, times(2)).onNext(\"hello\");\n            verify(stringObserver, times(1)).onError(any(NullPointerException.class));\n            verify(stringObserver, never()).onComplete();\n        }\n    }\n","realPath":"src/test/java/io/reactivex/rxjava3/internal/operators/observable/ObservableMergeDelayErrorTest.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":449,"status":"N"},{"authorDate":"2019-12-22 18:39:23","commitOrder":3,"curCode":"    public void errorInParentFlowableDelayed() throws Exception {\n        for (int i = 0; i < 50; i++) {\n            final TestASynchronous1sDelayedFlowable f1 = new TestASynchronous1sDelayedFlowable();\n            final TestASynchronous1sDelayedFlowable f2 = new TestASynchronous1sDelayedFlowable();\n            Flowable<Flowable<String>> parentFlowable = Flowable.unsafeCreate(new Publisher<Flowable<String>>() {\n                @Override\n                public void subscribe(Subscriber<? super Flowable<String>> op) {\n                    op.onSubscribe(new BooleanSubscription());\n                    op.onNext(Flowable.unsafeCreate(f1));\n                    op.onNext(Flowable.unsafeCreate(f2));\n                    op.onError(new NullPointerException(\"throwing exception in parent\"));\n                }\n            });\n\n            stringSubscriber = TestHelper.mockSubscriber();\n\n            TestSubscriberEx<String> ts = new TestSubscriberEx<>(stringSubscriber);\n            Flowable<String> m = Flowable.mergeDelayError(parentFlowable);\n            m.subscribe(ts);\n            System.out.println(\"testErrorInParentFlowableDelayed | \" + i);\n            ts.awaitDone(2000, TimeUnit.MILLISECONDS);\n            ts.assertTerminated();\n\n            verify(stringSubscriber, times(2)).onNext(\"hello\");\n            verify(stringSubscriber, times(1)).onError(any(NullPointerException.class));\n            verify(stringSubscriber, never()).onComplete();\n        }\n    }\n","date":"2019-12-22 18:39:23","endLine":481,"groupId":"5198","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"errorInParentFlowableDelayed","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/7a/528e8cb2e63169dce45876976d9e072753cc06.src","preCode":"    public void errorInParentFlowableDelayed() throws Exception {\n        for (int i = 0; i < 50; i++) {\n            final TestASynchronous1sDelayedFlowable f1 = new TestASynchronous1sDelayedFlowable();\n            final TestASynchronous1sDelayedFlowable f2 = new TestASynchronous1sDelayedFlowable();\n            Flowable<Flowable<String>> parentFlowable = Flowable.unsafeCreate(new Publisher<Flowable<String>>() {\n                @Override\n                public void subscribe(Subscriber<? super Flowable<String>> op) {\n                    op.onSubscribe(new BooleanSubscription());\n                    op.onNext(Flowable.unsafeCreate(f1));\n                    op.onNext(Flowable.unsafeCreate(f2));\n                    op.onError(new NullPointerException(\"throwing exception in parent\"));\n                }\n            });\n\n            stringSubscriber = TestHelper.mockSubscriber();\n\n            TestSubscriberEx<String> ts = new TestSubscriberEx<String>(stringSubscriber);\n            Flowable<String> m = Flowable.mergeDelayError(parentFlowable);\n            m.subscribe(ts);\n            System.out.println(\"testErrorInParentFlowableDelayed | \" + i);\n            ts.awaitDone(2000, TimeUnit.MILLISECONDS);\n            ts.assertTerminated();\n\n            verify(stringSubscriber, times(2)).onNext(\"hello\");\n            verify(stringSubscriber, times(1)).onError(any(NullPointerException.class));\n            verify(stringSubscriber, never()).onComplete();\n        }\n    }\n","realPath":"src/test/java/io/reactivex/rxjava3/internal/operators/flowable/FlowableMergeDelayErrorTest.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":454,"status":"M"}],"commitId":"e162d664d86639b97c214054aca346fc2ba37e33","commitMessage":"@@@diamond operators in unit tests.  flowable package (#6787)\n\n","date":"2019-12-22 18:39:23","modifiedFileCount":"111","status":"M","submitter":"Dmitry Volkov"},{"authorTime":"2019-12-22 18:39:23","codes":[{"authorDate":"2019-12-22 18:59:44","commitOrder":4,"curCode":"    public void errorInParentObservableDelayed() throws Exception {\n        for (int i = 0; i < 50; i++) {\n            final TestASynchronous1sDelayedObservable o1 = new TestASynchronous1sDelayedObservable();\n            final TestASynchronous1sDelayedObservable o2 = new TestASynchronous1sDelayedObservable();\n            Observable<Observable<String>> parentObservable = Observable.unsafeCreate(new ObservableSource<Observable<String>>() {\n                @Override\n                public void subscribe(Observer<? super Observable<String>> op) {\n                    op.onSubscribe(Disposable.empty());\n                    op.onNext(Observable.unsafeCreate(o1));\n                    op.onNext(Observable.unsafeCreate(o2));\n                    op.onError(new NullPointerException(\"throwing exception in parent\"));\n                }\n            });\n\n            Observer<String> stringObserver = TestHelper.mockObserver();\n\n            TestObserverEx<String> to = new TestObserverEx<>(stringObserver);\n            Observable<String> m = Observable.mergeDelayError(parentObservable);\n            m.subscribe(to);\n            System.out.println(\"testErrorInParentObservableDelayed | \" + i);\n            to.awaitDone(2000, TimeUnit.MILLISECONDS);\n            to.assertTerminated();\n\n            verify(stringObserver, times(2)).onNext(\"hello\");\n            verify(stringObserver, times(1)).onError(any(NullPointerException.class));\n            verify(stringObserver, never()).onComplete();\n        }\n    }\n","date":"2019-12-22 18:59:44","endLine":476,"groupId":"105604","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"errorInParentObservableDelayed","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/db/6450d097a8ab6219b6c96f43b6f0589c0cade0.src","preCode":"    public void errorInParentObservableDelayed() throws Exception {\n        for (int i = 0; i < 50; i++) {\n            final TestASynchronous1sDelayedObservable o1 = new TestASynchronous1sDelayedObservable();\n            final TestASynchronous1sDelayedObservable o2 = new TestASynchronous1sDelayedObservable();\n            Observable<Observable<String>> parentObservable = Observable.unsafeCreate(new ObservableSource<Observable<String>>() {\n                @Override\n                public void subscribe(Observer<? super Observable<String>> op) {\n                    op.onSubscribe(Disposable.empty());\n                    op.onNext(Observable.unsafeCreate(o1));\n                    op.onNext(Observable.unsafeCreate(o2));\n                    op.onError(new NullPointerException(\"throwing exception in parent\"));\n                }\n            });\n\n            Observer<String> stringObserver = TestHelper.mockObserver();\n\n            TestObserverEx<String> to = new TestObserverEx<String>(stringObserver);\n            Observable<String> m = Observable.mergeDelayError(parentObservable);\n            m.subscribe(to);\n            System.out.println(\"testErrorInParentObservableDelayed | \" + i);\n            to.awaitDone(2000, TimeUnit.MILLISECONDS);\n            to.assertTerminated();\n\n            verify(stringObserver, times(2)).onNext(\"hello\");\n            verify(stringObserver, times(1)).onError(any(NullPointerException.class));\n            verify(stringObserver, never()).onComplete();\n        }\n    }\n","realPath":"src/test/java/io/reactivex/rxjava3/internal/operators/observable/ObservableMergeDelayErrorTest.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":449,"status":"M"},{"authorDate":"2019-12-22 18:39:23","commitOrder":4,"curCode":"    public void errorInParentFlowableDelayed() throws Exception {\n        for (int i = 0; i < 50; i++) {\n            final TestASynchronous1sDelayedFlowable f1 = new TestASynchronous1sDelayedFlowable();\n            final TestASynchronous1sDelayedFlowable f2 = new TestASynchronous1sDelayedFlowable();\n            Flowable<Flowable<String>> parentFlowable = Flowable.unsafeCreate(new Publisher<Flowable<String>>() {\n                @Override\n                public void subscribe(Subscriber<? super Flowable<String>> op) {\n                    op.onSubscribe(new BooleanSubscription());\n                    op.onNext(Flowable.unsafeCreate(f1));\n                    op.onNext(Flowable.unsafeCreate(f2));\n                    op.onError(new NullPointerException(\"throwing exception in parent\"));\n                }\n            });\n\n            stringSubscriber = TestHelper.mockSubscriber();\n\n            TestSubscriberEx<String> ts = new TestSubscriberEx<>(stringSubscriber);\n            Flowable<String> m = Flowable.mergeDelayError(parentFlowable);\n            m.subscribe(ts);\n            System.out.println(\"testErrorInParentFlowableDelayed | \" + i);\n            ts.awaitDone(2000, TimeUnit.MILLISECONDS);\n            ts.assertTerminated();\n\n            verify(stringSubscriber, times(2)).onNext(\"hello\");\n            verify(stringSubscriber, times(1)).onError(any(NullPointerException.class));\n            verify(stringSubscriber, never()).onComplete();\n        }\n    }\n","date":"2019-12-22 18:39:23","endLine":481,"groupId":"105604","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"errorInParentFlowableDelayed","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/7a/528e8cb2e63169dce45876976d9e072753cc06.src","preCode":"    public void errorInParentFlowableDelayed() throws Exception {\n        for (int i = 0; i < 50; i++) {\n            final TestASynchronous1sDelayedFlowable f1 = new TestASynchronous1sDelayedFlowable();\n            final TestASynchronous1sDelayedFlowable f2 = new TestASynchronous1sDelayedFlowable();\n            Flowable<Flowable<String>> parentFlowable = Flowable.unsafeCreate(new Publisher<Flowable<String>>() {\n                @Override\n                public void subscribe(Subscriber<? super Flowable<String>> op) {\n                    op.onSubscribe(new BooleanSubscription());\n                    op.onNext(Flowable.unsafeCreate(f1));\n                    op.onNext(Flowable.unsafeCreate(f2));\n                    op.onError(new NullPointerException(\"throwing exception in parent\"));\n                }\n            });\n\n            stringSubscriber = TestHelper.mockSubscriber();\n\n            TestSubscriberEx<String> ts = new TestSubscriberEx<>(stringSubscriber);\n            Flowable<String> m = Flowable.mergeDelayError(parentFlowable);\n            m.subscribe(ts);\n            System.out.println(\"testErrorInParentFlowableDelayed | \" + i);\n            ts.awaitDone(2000, TimeUnit.MILLISECONDS);\n            ts.assertTerminated();\n\n            verify(stringSubscriber, times(2)).onNext(\"hello\");\n            verify(stringSubscriber, times(1)).onError(any(NullPointerException.class));\n            verify(stringSubscriber, never()).onComplete();\n        }\n    }\n","realPath":"src/test/java/io/reactivex/rxjava3/internal/operators/flowable/FlowableMergeDelayErrorTest.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":454,"status":"N"}],"commitId":"d6d698213b6c4091f4d5a0fb47f0922d0d0618e3","commitMessage":"@@@diamond operators in unit tests.  observable package (#6786)\n\n","date":"2019-12-22 18:59:44","modifiedFileCount":"95","status":"M","submitter":"Dmitry Volkov"}]
