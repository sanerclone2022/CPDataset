[{"authorTime":"2019-08-16 20:51:17","codes":[{"authorDate":"2019-08-16 20:51:17","commitOrder":1,"curCode":"    public void disposedOnCall() {\n        final TestObserver<Integer> to = new TestObserver<Integer>();\n\n        Single.fromSupplier(new Supplier<Integer>() {\n            @Override\n            public Integer get() throws Exception {\n                to.dispose();\n                return 1;\n            }\n        })\n                .subscribe(to);\n\n        to.assertEmpty();\n    }\n","date":"2019-08-16 20:51:17","endLine":246,"groupId":"2175","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"disposedOnCall","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/4c/b6bf389f9c69d474155390e888371b95cd5f72.src","preCode":"    public void disposedOnCall() {\n        final TestObserver<Integer> to = new TestObserver<Integer>();\n\n        Single.fromSupplier(new Supplier<Integer>() {\n            @Override\n            public Integer get() throws Exception {\n                to.dispose();\n                return 1;\n            }\n        })\n                .subscribe(to);\n\n        to.assertEmpty();\n    }\n","realPath":"src/test/java/io/reactivex/rxjava3/internal/operators/single/SingleFromSupplierTest.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":233,"status":"B"},{"authorDate":"2019-08-16 20:51:17","commitOrder":1,"curCode":"    public void disposedOnCall() {\n        final TestObserver<Integer> to = new TestObserver<Integer>();\n\n        Observable.fromSupplier(new Supplier<Integer>() {\n            @Override\n            public Integer get() throws Exception {\n                to.dispose();\n                return 1;\n            }\n        })\n                .subscribe(to);\n\n        to.assertEmpty();\n    }\n","date":"2019-08-16 20:51:17","endLine":277,"groupId":"2175","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"disposedOnCall","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/95/5bb3f50ef6a3d5c0db2805b06ba7602f37d2b1.src","preCode":"    public void disposedOnCall() {\n        final TestObserver<Integer> to = new TestObserver<Integer>();\n\n        Observable.fromSupplier(new Supplier<Integer>() {\n            @Override\n            public Integer get() throws Exception {\n                to.dispose();\n                return 1;\n            }\n        })\n                .subscribe(to);\n\n        to.assertEmpty();\n    }\n","realPath":"src/test/java/io/reactivex/rxjava3/internal/operators/observable/ObservableFromSupplierTest.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":264,"status":"B"}],"commitId":"a1693ecc9215027a7a3eae75272979ebb4d79a27","commitMessage":"@@@3.x: Refactor to io.reactivex.rxjava3.** (#6621)\n\n* 3.x: Refactor to io.reactivex.rxjava3.**\n\n* fix javadoc cleanup gradle\n\n* javadoc gradle again\n\n* Fix package location in text\n","date":"2019-08-16 20:51:17","modifiedFileCount":"0","status":"B","submitter":"David Karnok"},{"authorTime":"2019-12-22 18:59:44","codes":[{"authorDate":"2019-08-16 20:51:17","commitOrder":2,"curCode":"    public void disposedOnCall() {\n        final TestObserver<Integer> to = new TestObserver<Integer>();\n\n        Single.fromSupplier(new Supplier<Integer>() {\n            @Override\n            public Integer get() throws Exception {\n                to.dispose();\n                return 1;\n            }\n        })\n                .subscribe(to);\n\n        to.assertEmpty();\n    }\n","date":"2019-08-16 20:51:17","endLine":246,"groupId":"2175","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"disposedOnCall","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/4c/b6bf389f9c69d474155390e888371b95cd5f72.src","preCode":"    public void disposedOnCall() {\n        final TestObserver<Integer> to = new TestObserver<Integer>();\n\n        Single.fromSupplier(new Supplier<Integer>() {\n            @Override\n            public Integer get() throws Exception {\n                to.dispose();\n                return 1;\n            }\n        })\n                .subscribe(to);\n\n        to.assertEmpty();\n    }\n","realPath":"src/test/java/io/reactivex/rxjava3/internal/operators/single/SingleFromSupplierTest.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":233,"status":"N"},{"authorDate":"2019-12-22 18:59:44","commitOrder":2,"curCode":"    public void disposedOnCall() {\n        final TestObserver<Integer> to = new TestObserver<>();\n\n        Observable.fromSupplier(new Supplier<Integer>() {\n            @Override\n            public Integer get() throws Exception {\n                to.dispose();\n                return 1;\n            }\n        })\n                .subscribe(to);\n\n        to.assertEmpty();\n    }\n","date":"2019-12-22 18:59:44","endLine":277,"groupId":"2175","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"disposedOnCall","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/2b/181a56fe94691905af40f5058a91966e738fd8.src","preCode":"    public void disposedOnCall() {\n        final TestObserver<Integer> to = new TestObserver<Integer>();\n\n        Observable.fromSupplier(new Supplier<Integer>() {\n            @Override\n            public Integer get() throws Exception {\n                to.dispose();\n                return 1;\n            }\n        })\n                .subscribe(to);\n\n        to.assertEmpty();\n    }\n","realPath":"src/test/java/io/reactivex/rxjava3/internal/operators/observable/ObservableFromSupplierTest.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":264,"status":"M"}],"commitId":"d6d698213b6c4091f4d5a0fb47f0922d0d0618e3","commitMessage":"@@@diamond operators in unit tests.  observable package (#6786)\n\n","date":"2019-12-22 18:59:44","modifiedFileCount":"95","status":"M","submitter":"Dmitry Volkov"},{"authorTime":"2019-12-22 18:59:44","codes":[{"authorDate":"2019-12-22 19:17:23","commitOrder":3,"curCode":"    public void disposedOnCall() {\n        final TestObserver<Integer> to = new TestObserver<>();\n\n        Single.fromSupplier(new Supplier<Integer>() {\n            @Override\n            public Integer get() throws Exception {\n                to.dispose();\n                return 1;\n            }\n        })\n                .subscribe(to);\n\n        to.assertEmpty();\n    }\n","date":"2019-12-22 19:17:23","endLine":246,"groupId":"101006","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"disposedOnCall","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/dd/259f209b0c4f284dd4aac252b91aeb81e6c7b6.src","preCode":"    public void disposedOnCall() {\n        final TestObserver<Integer> to = new TestObserver<Integer>();\n\n        Single.fromSupplier(new Supplier<Integer>() {\n            @Override\n            public Integer get() throws Exception {\n                to.dispose();\n                return 1;\n            }\n        })\n                .subscribe(to);\n\n        to.assertEmpty();\n    }\n","realPath":"src/test/java/io/reactivex/rxjava3/internal/operators/single/SingleFromSupplierTest.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":233,"status":"M"},{"authorDate":"2019-12-22 18:59:44","commitOrder":3,"curCode":"    public void disposedOnCall() {\n        final TestObserver<Integer> to = new TestObserver<>();\n\n        Observable.fromSupplier(new Supplier<Integer>() {\n            @Override\n            public Integer get() throws Exception {\n                to.dispose();\n                return 1;\n            }\n        })\n                .subscribe(to);\n\n        to.assertEmpty();\n    }\n","date":"2019-12-22 18:59:44","endLine":277,"groupId":"101006","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"disposedOnCall","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/2b/181a56fe94691905af40f5058a91966e738fd8.src","preCode":"    public void disposedOnCall() {\n        final TestObserver<Integer> to = new TestObserver<>();\n\n        Observable.fromSupplier(new Supplier<Integer>() {\n            @Override\n            public Integer get() throws Exception {\n                to.dispose();\n                return 1;\n            }\n        })\n                .subscribe(to);\n\n        to.assertEmpty();\n    }\n","realPath":"src/test/java/io/reactivex/rxjava3/internal/operators/observable/ObservableFromSupplierTest.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":264,"status":"N"}],"commitId":"75da4b504a52466b455a49a342747514fa0dffab","commitMessage":"@@@Diamond operators in tests (#6788)\n\n* diamond operators in unit tests.  small packages in internal/\n\n* diamond operators in unit tests.  small packages in internal/operators\n","date":"2019-12-22 19:17:23","modifiedFileCount":"92","status":"M","submitter":"Dmitry Volkov"}]
