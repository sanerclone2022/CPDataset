[{"authorTime":"2019-08-16 20:51:17","codes":[{"authorDate":"2019-08-16 20:51:17","commitOrder":1,"curCode":"    public void outputFused() {\n        TestObserverEx<Integer> to = new TestObserverEx<Integer>(QueueFuseable.ANY);\n\n        Observable.range(1, 5).hide()\n        .observeOn(Schedulers.single())\n        .subscribe(to);\n\n        to.assertFusionMode(QueueFuseable.ASYNC)\n        .awaitDone(5, TimeUnit.SECONDS)\n        .assertResult(1, 2, 3, 4, 5);\n    }\n","date":"2019-08-16 20:51:17","endLine":577,"groupId":"1788","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"outputFused","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/c5/1d36f0d09319680f4c13968eea2d99c5e72ad9.src","preCode":"    public void outputFused() {\n        TestObserverEx<Integer> to = new TestObserverEx<Integer>(QueueFuseable.ANY);\n\n        Observable.range(1, 5).hide()\n        .observeOn(Schedulers.single())\n        .subscribe(to);\n\n        to.assertFusionMode(QueueFuseable.ASYNC)\n        .awaitDone(5, TimeUnit.SECONDS)\n        .assertResult(1, 2, 3, 4, 5);\n    }\n","realPath":"src/test/java/io/reactivex/rxjava3/internal/operators/observable/ObservableObserveOnTest.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":567,"status":"B"},{"authorDate":"2019-08-16 20:51:17","commitOrder":1,"curCode":"    public void outputFused() {\n        TestSubscriberEx<Integer> ts = new TestSubscriberEx<Integer>().setInitialFusionMode(QueueFuseable.ANY);\n\n        Flowable.range(1, 5).hide()\n        .observeOn(Schedulers.single())\n        .subscribe(ts);\n\n        ts.assertFusionMode(QueueFuseable.ASYNC)\n        .awaitDone(5, TimeUnit.SECONDS)\n        .assertResult(1, 2, 3, 4, 5);\n    }\n","date":"2019-08-16 20:51:17","endLine":1243,"groupId":"5345","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"outputFused","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/ce/81203a840d057eb88c3fed181fbf06af9e57dc.src","preCode":"    public void outputFused() {\n        TestSubscriberEx<Integer> ts = new TestSubscriberEx<Integer>().setInitialFusionMode(QueueFuseable.ANY);\n\n        Flowable.range(1, 5).hide()\n        .observeOn(Schedulers.single())\n        .subscribe(ts);\n\n        ts.assertFusionMode(QueueFuseable.ASYNC)\n        .awaitDone(5, TimeUnit.SECONDS)\n        .assertResult(1, 2, 3, 4, 5);\n    }\n","realPath":"src/test/java/io/reactivex/rxjava3/internal/operators/flowable/FlowableObserveOnTest.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":1233,"status":"B"}],"commitId":"a1693ecc9215027a7a3eae75272979ebb4d79a27","commitMessage":"@@@3.x: Refactor to io.reactivex.rxjava3.** (#6621)\n\n* 3.x: Refactor to io.reactivex.rxjava3.**\n\n* fix javadoc cleanup gradle\n\n* javadoc gradle again\n\n* Fix package location in text\n","date":"2019-08-16 20:51:17","modifiedFileCount":"0","status":"B","submitter":"David Karnok"},{"authorTime":"2019-08-16 20:51:17","codes":[{"authorDate":"2019-12-22 18:59:44","commitOrder":2,"curCode":"    public void outputFused() {\n        TestObserverEx<Integer> to = new TestObserverEx<>(QueueFuseable.ANY);\n\n        Observable.range(1, 5).hide()\n        .observeOn(Schedulers.single())\n        .subscribe(to);\n\n        to.assertFusionMode(QueueFuseable.ASYNC)\n        .awaitDone(5, TimeUnit.SECONDS)\n        .assertResult(1, 2, 3, 4, 5);\n    }\n","date":"2019-12-22 18:59:44","endLine":577,"groupId":"106159","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"outputFused","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/57/9b713313f3932bdce293ecbf8bbc8df2f74ed5.src","preCode":"    public void outputFused() {\n        TestObserverEx<Integer> to = new TestObserverEx<Integer>(QueueFuseable.ANY);\n\n        Observable.range(1, 5).hide()\n        .observeOn(Schedulers.single())\n        .subscribe(to);\n\n        to.assertFusionMode(QueueFuseable.ASYNC)\n        .awaitDone(5, TimeUnit.SECONDS)\n        .assertResult(1, 2, 3, 4, 5);\n    }\n","realPath":"src/test/java/io/reactivex/rxjava3/internal/operators/observable/ObservableObserveOnTest.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":567,"status":"M"},{"authorDate":"2019-08-16 20:51:17","commitOrder":2,"curCode":"    public void outputFused() {\n        TestSubscriberEx<Integer> ts = new TestSubscriberEx<Integer>().setInitialFusionMode(QueueFuseable.ANY);\n\n        Flowable.range(1, 5).hide()\n        .observeOn(Schedulers.single())\n        .subscribe(ts);\n\n        ts.assertFusionMode(QueueFuseable.ASYNC)\n        .awaitDone(5, TimeUnit.SECONDS)\n        .assertResult(1, 2, 3, 4, 5);\n    }\n","date":"2019-08-16 20:51:17","endLine":1243,"groupId":"106159","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"outputFused","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/ce/81203a840d057eb88c3fed181fbf06af9e57dc.src","preCode":"    public void outputFused() {\n        TestSubscriberEx<Integer> ts = new TestSubscriberEx<Integer>().setInitialFusionMode(QueueFuseable.ANY);\n\n        Flowable.range(1, 5).hide()\n        .observeOn(Schedulers.single())\n        .subscribe(ts);\n\n        ts.assertFusionMode(QueueFuseable.ASYNC)\n        .awaitDone(5, TimeUnit.SECONDS)\n        .assertResult(1, 2, 3, 4, 5);\n    }\n","realPath":"src/test/java/io/reactivex/rxjava3/internal/operators/flowable/FlowableObserveOnTest.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":1233,"status":"N"}],"commitId":"d6d698213b6c4091f4d5a0fb47f0922d0d0618e3","commitMessage":"@@@diamond operators in unit tests.  observable package (#6786)\n\n","date":"2019-12-22 18:59:44","modifiedFileCount":"95","status":"M","submitter":"Dmitry Volkov"}]
