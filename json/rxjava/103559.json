[{"authorTime":"2019-08-16 20:51:17","codes":[{"authorDate":"2019-08-16 20:51:17","commitOrder":1,"curCode":"    public void nextObserverError() {\n        NextObserver<Integer> no = new NextObserver<Integer>();\n\n        List<Throwable> errors = TestHelper.trackPluginErrors();\n        try {\n            no.onError(new TestException());\n\n            TestHelper.assertUndeliverable(errors, 0, TestException.class);\n        } finally {\n            RxJavaPlugins.reset();\n        }\n    }\n","date":"2019-08-16 20:51:17","endLine":370,"groupId":"4459","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"nextObserverError","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/93/8f757a0c1aa489736dff2fcba89784d7c29c3e.src","preCode":"    public void nextObserverError() {\n        NextObserver<Integer> no = new NextObserver<Integer>();\n\n        List<Throwable> errors = TestHelper.trackPluginErrors();\n        try {\n            no.onError(new TestException());\n\n            TestHelper.assertUndeliverable(errors, 0, TestException.class);\n        } finally {\n            RxJavaPlugins.reset();\n        }\n    }\n","realPath":"src/test/java/io/reactivex/rxjava3/internal/operators/observable/BlockingObservableNextTest.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":359,"status":"B"},{"authorDate":"2019-08-16 20:51:17","commitOrder":1,"curCode":"    public void nextObserverError() {\n        NextSubscriber<Integer> no = new NextSubscriber<Integer>();\n\n        List<Throwable> errors = TestHelper.trackPluginErrors();\n        try {\n            no.onError(new TestException());\n\n            TestHelper.assertUndeliverable(errors, 0, TestException.class);\n        } finally {\n            RxJavaPlugins.reset();\n        }\n    }\n","date":"2019-08-16 20:51:17","endLine":365,"groupId":"4459","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"nextObserverError","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/8b/c31fa85ef97c8a5d2c369e4c5711b9a7781e45.src","preCode":"    public void nextObserverError() {\n        NextSubscriber<Integer> no = new NextSubscriber<Integer>();\n\n        List<Throwable> errors = TestHelper.trackPluginErrors();\n        try {\n            no.onError(new TestException());\n\n            TestHelper.assertUndeliverable(errors, 0, TestException.class);\n        } finally {\n            RxJavaPlugins.reset();\n        }\n    }\n","realPath":"src/test/java/io/reactivex/rxjava3/internal/operators/flowable/BlockingFlowableNextTest.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":354,"status":"B"}],"commitId":"a1693ecc9215027a7a3eae75272979ebb4d79a27","commitMessage":"@@@3.x: Refactor to io.reactivex.rxjava3.** (#6621)\n\n* 3.x: Refactor to io.reactivex.rxjava3.**\n\n* fix javadoc cleanup gradle\n\n* javadoc gradle again\n\n* Fix package location in text\n","date":"2019-08-16 20:51:17","modifiedFileCount":"0","status":"B","submitter":"David Karnok"},{"authorTime":"2019-12-22 18:39:23","codes":[{"authorDate":"2019-08-16 20:51:17","commitOrder":2,"curCode":"    public void nextObserverError() {\n        NextObserver<Integer> no = new NextObserver<Integer>();\n\n        List<Throwable> errors = TestHelper.trackPluginErrors();\n        try {\n            no.onError(new TestException());\n\n            TestHelper.assertUndeliverable(errors, 0, TestException.class);\n        } finally {\n            RxJavaPlugins.reset();\n        }\n    }\n","date":"2019-08-16 20:51:17","endLine":370,"groupId":"4459","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"nextObserverError","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/93/8f757a0c1aa489736dff2fcba89784d7c29c3e.src","preCode":"    public void nextObserverError() {\n        NextObserver<Integer> no = new NextObserver<Integer>();\n\n        List<Throwable> errors = TestHelper.trackPluginErrors();\n        try {\n            no.onError(new TestException());\n\n            TestHelper.assertUndeliverable(errors, 0, TestException.class);\n        } finally {\n            RxJavaPlugins.reset();\n        }\n    }\n","realPath":"src/test/java/io/reactivex/rxjava3/internal/operators/observable/BlockingObservableNextTest.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":359,"status":"N"},{"authorDate":"2019-12-22 18:39:23","commitOrder":2,"curCode":"    public void nextObserverError() {\n        NextSubscriber<Integer> no = new NextSubscriber<>();\n\n        List<Throwable> errors = TestHelper.trackPluginErrors();\n        try {\n            no.onError(new TestException());\n\n            TestHelper.assertUndeliverable(errors, 0, TestException.class);\n        } finally {\n            RxJavaPlugins.reset();\n        }\n    }\n","date":"2019-12-22 18:39:23","endLine":365,"groupId":"4459","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"nextObserverError","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/35/c1501ae09454cacd7aa5a21e0afdf6ade223ba.src","preCode":"    public void nextObserverError() {\n        NextSubscriber<Integer> no = new NextSubscriber<Integer>();\n\n        List<Throwable> errors = TestHelper.trackPluginErrors();\n        try {\n            no.onError(new TestException());\n\n            TestHelper.assertUndeliverable(errors, 0, TestException.class);\n        } finally {\n            RxJavaPlugins.reset();\n        }\n    }\n","realPath":"src/test/java/io/reactivex/rxjava3/internal/operators/flowable/BlockingFlowableNextTest.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":354,"status":"M"}],"commitId":"e162d664d86639b97c214054aca346fc2ba37e33","commitMessage":"@@@diamond operators in unit tests.  flowable package (#6787)\n\n","date":"2019-12-22 18:39:23","modifiedFileCount":"111","status":"M","submitter":"Dmitry Volkov"},{"authorTime":"2019-12-22 18:39:23","codes":[{"authorDate":"2019-12-22 18:59:44","commitOrder":3,"curCode":"    public void nextObserverError() {\n        NextObserver<Integer> no = new NextObserver<>();\n\n        List<Throwable> errors = TestHelper.trackPluginErrors();\n        try {\n            no.onError(new TestException());\n\n            TestHelper.assertUndeliverable(errors, 0, TestException.class);\n        } finally {\n            RxJavaPlugins.reset();\n        }\n    }\n","date":"2019-12-22 18:59:44","endLine":369,"groupId":"103559","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"nextObserverError","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/35/7d512e9b4db5e73b4df9ededb05f549ec3b2da.src","preCode":"    public void nextObserverError() {\n        NextObserver<Integer> no = new NextObserver<Integer>();\n\n        List<Throwable> errors = TestHelper.trackPluginErrors();\n        try {\n            no.onError(new TestException());\n\n            TestHelper.assertUndeliverable(errors, 0, TestException.class);\n        } finally {\n            RxJavaPlugins.reset();\n        }\n    }\n","realPath":"src/test/java/io/reactivex/rxjava3/internal/operators/observable/BlockingObservableNextTest.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":358,"status":"M"},{"authorDate":"2019-12-22 18:39:23","commitOrder":3,"curCode":"    public void nextObserverError() {\n        NextSubscriber<Integer> no = new NextSubscriber<>();\n\n        List<Throwable> errors = TestHelper.trackPluginErrors();\n        try {\n            no.onError(new TestException());\n\n            TestHelper.assertUndeliverable(errors, 0, TestException.class);\n        } finally {\n            RxJavaPlugins.reset();\n        }\n    }\n","date":"2019-12-22 18:39:23","endLine":365,"groupId":"103559","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"nextObserverError","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/35/c1501ae09454cacd7aa5a21e0afdf6ade223ba.src","preCode":"    public void nextObserverError() {\n        NextSubscriber<Integer> no = new NextSubscriber<>();\n\n        List<Throwable> errors = TestHelper.trackPluginErrors();\n        try {\n            no.onError(new TestException());\n\n            TestHelper.assertUndeliverable(errors, 0, TestException.class);\n        } finally {\n            RxJavaPlugins.reset();\n        }\n    }\n","realPath":"src/test/java/io/reactivex/rxjava3/internal/operators/flowable/BlockingFlowableNextTest.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":354,"status":"N"}],"commitId":"d6d698213b6c4091f4d5a0fb47f0922d0d0618e3","commitMessage":"@@@diamond operators in unit tests.  observable package (#6786)\n\n","date":"2019-12-22 18:59:44","modifiedFileCount":"95","status":"M","submitter":"Dmitry Volkov"}]
