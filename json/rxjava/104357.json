[{"authorTime":"2019-08-16 20:51:17","codes":[{"authorDate":"2019-08-16 20:51:17","commitOrder":1,"curCode":"    public final <TRight, TLeftEnd, TRightEnd, R> Observable<R> groupJoin(\n            ObservableSource<? extends TRight> other,\n            Function<? super T, ? extends ObservableSource<TLeftEnd>> leftEnd,\n            Function<? super TRight, ? extends ObservableSource<TRightEnd>> rightEnd,\n            BiFunction<? super T, ? super Observable<TRight>, ? extends R> resultSelector\n                    ) {\n        ObjectHelper.requireNonNull(other, \"other is null\");\n        ObjectHelper.requireNonNull(leftEnd, \"leftEnd is null\");\n        ObjectHelper.requireNonNull(rightEnd, \"rightEnd is null\");\n        ObjectHelper.requireNonNull(resultSelector, \"resultSelector is null\");\n        return RxJavaPlugins.onAssembly(new ObservableGroupJoin<T, TRight, TLeftEnd, TRightEnd, R>(\n                this, other, leftEnd, rightEnd, resultSelector));\n    }\n","date":"2019-08-16 20:51:17","endLine":9443,"groupId":"9772","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"groupJoin","params":"(ObservableSource<?extendsTRight>other@Function<?superT@?extendsObservableSource<TLeftEnd>>leftEnd@Function<?superTRight@?extendsObservableSource<TRightEnd>>rightEnd@BiFunction<?superT@?superObservable<TRight>@?extendsR>resultSelector)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/bc/c013a10f40257dded28957b3da473976c6bb44.src","preCode":"    public final <TRight, TLeftEnd, TRightEnd, R> Observable<R> groupJoin(\n            ObservableSource<? extends TRight> other,\n            Function<? super T, ? extends ObservableSource<TLeftEnd>> leftEnd,\n            Function<? super TRight, ? extends ObservableSource<TRightEnd>> rightEnd,\n            BiFunction<? super T, ? super Observable<TRight>, ? extends R> resultSelector\n                    ) {\n        ObjectHelper.requireNonNull(other, \"other is null\");\n        ObjectHelper.requireNonNull(leftEnd, \"leftEnd is null\");\n        ObjectHelper.requireNonNull(rightEnd, \"rightEnd is null\");\n        ObjectHelper.requireNonNull(resultSelector, \"resultSelector is null\");\n        return RxJavaPlugins.onAssembly(new ObservableGroupJoin<T, TRight, TLeftEnd, TRightEnd, R>(\n                this, other, leftEnd, rightEnd, resultSelector));\n    }\n","realPath":"src/main/java/io/reactivex/rxjava3/core/Observable.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":9431,"status":"B"},{"authorDate":"2019-08-16 20:51:17","commitOrder":1,"curCode":"    public final <TRight, TLeftEnd, TRightEnd, R> Observable<R> join(\n            ObservableSource<? extends TRight> other,\n            Function<? super T, ? extends ObservableSource<TLeftEnd>> leftEnd,\n            Function<? super TRight, ? extends ObservableSource<TRightEnd>> rightEnd,\n            BiFunction<? super T, ? super TRight, ? extends R> resultSelector\n                    ) {\n        ObjectHelper.requireNonNull(other, \"other is null\");\n        ObjectHelper.requireNonNull(leftEnd, \"leftEnd is null\");\n        ObjectHelper.requireNonNull(rightEnd, \"rightEnd is null\");\n        ObjectHelper.requireNonNull(resultSelector, \"resultSelector is null\");\n        return RxJavaPlugins.onAssembly(new ObservableJoin<T, TRight, TLeftEnd, TRightEnd, R>(\n                this, other, leftEnd, rightEnd, resultSelector));\n    }\n","date":"2019-08-16 20:51:17","endLine":9550,"groupId":"9772","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"join","params":"(ObservableSource<?extendsTRight>other@Function<?superT@?extendsObservableSource<TLeftEnd>>leftEnd@Function<?superTRight@?extendsObservableSource<TRightEnd>>rightEnd@BiFunction<?superT@?superTRight@?extendsR>resultSelector)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/bc/c013a10f40257dded28957b3da473976c6bb44.src","preCode":"    public final <TRight, TLeftEnd, TRightEnd, R> Observable<R> join(\n            ObservableSource<? extends TRight> other,\n            Function<? super T, ? extends ObservableSource<TLeftEnd>> leftEnd,\n            Function<? super TRight, ? extends ObservableSource<TRightEnd>> rightEnd,\n            BiFunction<? super T, ? super TRight, ? extends R> resultSelector\n                    ) {\n        ObjectHelper.requireNonNull(other, \"other is null\");\n        ObjectHelper.requireNonNull(leftEnd, \"leftEnd is null\");\n        ObjectHelper.requireNonNull(rightEnd, \"rightEnd is null\");\n        ObjectHelper.requireNonNull(resultSelector, \"resultSelector is null\");\n        return RxJavaPlugins.onAssembly(new ObservableJoin<T, TRight, TLeftEnd, TRightEnd, R>(\n                this, other, leftEnd, rightEnd, resultSelector));\n    }\n","realPath":"src/main/java/io/reactivex/rxjava3/core/Observable.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":9538,"status":"B"}],"commitId":"a1693ecc9215027a7a3eae75272979ebb4d79a27","commitMessage":"@@@3.x: Refactor to io.reactivex.rxjava3.** (#6621)\n\n* 3.x: Refactor to io.reactivex.rxjava3.**\n\n* fix javadoc cleanup gradle\n\n* javadoc gradle again\n\n* Fix package location in text\n","date":"2019-08-16 20:51:17","modifiedFileCount":"0","status":"B","submitter":"David Karnok"},{"authorTime":"2019-12-18 03:06:44","codes":[{"authorDate":"2019-12-18 03:06:44","commitOrder":2,"curCode":"    public final <TRight, TLeftEnd, TRightEnd, R> Observable<R> groupJoin(\n            ObservableSource<? extends TRight> other,\n            Function<? super T, ? extends ObservableSource<TLeftEnd>> leftEnd,\n            Function<? super TRight, ? extends ObservableSource<TRightEnd>> rightEnd,\n            BiFunction<? super T, ? super Observable<TRight>, ? extends R> resultSelector\n                    ) {\n        Objects.requireNonNull(other, \"other is null\");\n        Objects.requireNonNull(leftEnd, \"leftEnd is null\");\n        Objects.requireNonNull(rightEnd, \"rightEnd is null\");\n        Objects.requireNonNull(resultSelector, \"resultSelector is null\");\n        return RxJavaPlugins.onAssembly(new ObservableGroupJoin<T, TRight, TLeftEnd, TRightEnd, R>(\n                this, other, leftEnd, rightEnd, resultSelector));\n    }\n","date":"2019-12-18 03:06:44","endLine":9329,"groupId":"6702","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"groupJoin","params":"(ObservableSource<?extendsTRight>other@Function<?superT@?extendsObservableSource<TLeftEnd>>leftEnd@Function<?superTRight@?extendsObservableSource<TRightEnd>>rightEnd@BiFunction<?superT@?superObservable<TRight>@?extendsR>resultSelector)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/63/406824ba158b4e2455ac106163611841aebd44.src","preCode":"    public final <TRight, TLeftEnd, TRightEnd, R> Observable<R> groupJoin(\n            ObservableSource<? extends TRight> other,\n            Function<? super T, ? extends ObservableSource<TLeftEnd>> leftEnd,\n            Function<? super TRight, ? extends ObservableSource<TRightEnd>> rightEnd,\n            BiFunction<? super T, ? super Observable<TRight>, ? extends R> resultSelector\n                    ) {\n        ObjectHelper.requireNonNull(other, \"other is null\");\n        ObjectHelper.requireNonNull(leftEnd, \"leftEnd is null\");\n        ObjectHelper.requireNonNull(rightEnd, \"rightEnd is null\");\n        ObjectHelper.requireNonNull(resultSelector, \"resultSelector is null\");\n        return RxJavaPlugins.onAssembly(new ObservableGroupJoin<T, TRight, TLeftEnd, TRightEnd, R>(\n                this, other, leftEnd, rightEnd, resultSelector));\n    }\n","realPath":"src/main/java/io/reactivex/rxjava3/core/Observable.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":9317,"status":"M"},{"authorDate":"2019-12-18 03:06:44","commitOrder":2,"curCode":"    public final <TRight, TLeftEnd, TRightEnd, R> Observable<R> join(\n            ObservableSource<? extends TRight> other,\n            Function<? super T, ? extends ObservableSource<TLeftEnd>> leftEnd,\n            Function<? super TRight, ? extends ObservableSource<TRightEnd>> rightEnd,\n            BiFunction<? super T, ? super TRight, ? extends R> resultSelector\n                    ) {\n        Objects.requireNonNull(other, \"other is null\");\n        Objects.requireNonNull(leftEnd, \"leftEnd is null\");\n        Objects.requireNonNull(rightEnd, \"rightEnd is null\");\n        Objects.requireNonNull(resultSelector, \"resultSelector is null\");\n        return RxJavaPlugins.onAssembly(new ObservableJoin<T, TRight, TLeftEnd, TRightEnd, R>(\n                this, other, leftEnd, rightEnd, resultSelector));\n    }\n","date":"2019-12-18 03:06:44","endLine":9436,"groupId":"6702","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"join","params":"(ObservableSource<?extendsTRight>other@Function<?superT@?extendsObservableSource<TLeftEnd>>leftEnd@Function<?superTRight@?extendsObservableSource<TRightEnd>>rightEnd@BiFunction<?superT@?superTRight@?extendsR>resultSelector)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/63/406824ba158b4e2455ac106163611841aebd44.src","preCode":"    public final <TRight, TLeftEnd, TRightEnd, R> Observable<R> join(\n            ObservableSource<? extends TRight> other,\n            Function<? super T, ? extends ObservableSource<TLeftEnd>> leftEnd,\n            Function<? super TRight, ? extends ObservableSource<TRightEnd>> rightEnd,\n            BiFunction<? super T, ? super TRight, ? extends R> resultSelector\n                    ) {\n        ObjectHelper.requireNonNull(other, \"other is null\");\n        ObjectHelper.requireNonNull(leftEnd, \"leftEnd is null\");\n        ObjectHelper.requireNonNull(rightEnd, \"rightEnd is null\");\n        ObjectHelper.requireNonNull(resultSelector, \"resultSelector is null\");\n        return RxJavaPlugins.onAssembly(new ObservableJoin<T, TRight, TLeftEnd, TRightEnd, R>(\n                this, other, leftEnd, rightEnd, resultSelector));\n    }\n","realPath":"src/main/java/io/reactivex/rxjava3/core/Observable.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":9424,"status":"M"}],"commitId":"6ba932c9a3752c6d85d65bd2292c3a47cab64fd6","commitMessage":"@@@Replace ObjectHelper.requireNonNull with Objects.requireNonNull (#6771)\n\n","date":"2019-12-18 03:06:44","modifiedFileCount":"199","status":"M","submitter":"Jake Wharton"},{"authorTime":"2019-12-26 06:52:13","codes":[{"authorDate":"2019-12-26 06:52:13","commitOrder":3,"curCode":"    public final <TRight, TLeftEnd, TRightEnd, R> Observable<R> groupJoin(\n            @NonNull ObservableSource<? extends TRight> other,\n            @NonNull Function<? super T, ? extends ObservableSource<TLeftEnd>> leftEnd,\n            @NonNull Function<? super TRight, ? extends ObservableSource<TRightEnd>> rightEnd,\n            @NonNull BiFunction<? super T, ? super Observable<TRight>, ? extends R> resultSelector\n    ) {\n        Objects.requireNonNull(other, \"other is null\");\n        Objects.requireNonNull(leftEnd, \"leftEnd is null\");\n        Objects.requireNonNull(rightEnd, \"rightEnd is null\");\n        Objects.requireNonNull(resultSelector, \"resultSelector is null\");\n        return RxJavaPlugins.onAssembly(new ObservableGroupJoin<T, TRight, TLeftEnd, TRightEnd, R>(\n                this, other, leftEnd, rightEnd, resultSelector));\n    }\n","date":"2019-12-26 06:52:13","endLine":9574,"groupId":"6702","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"groupJoin","params":"(@NonNullObservableSource<?extendsTRight>other@@NonNullFunction<?superT@?extendsObservableSource<TLeftEnd>>leftEnd@@NonNullFunction<?superTRight@?extendsObservableSource<TRightEnd>>rightEnd@@NonNullBiFunction<?superT@?superObservable<TRight>@?extendsR>resultSelector)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/16/e1454af367e5b65e5ddecb077644e09b3d66f6.src","preCode":"    public final <TRight, TLeftEnd, TRightEnd, R> Observable<R> groupJoin(\n            ObservableSource<? extends TRight> other,\n            Function<? super T, ? extends ObservableSource<TLeftEnd>> leftEnd,\n            Function<? super TRight, ? extends ObservableSource<TRightEnd>> rightEnd,\n            BiFunction<? super T, ? super Observable<TRight>, ? extends R> resultSelector\n                    ) {\n        Objects.requireNonNull(other, \"other is null\");\n        Objects.requireNonNull(leftEnd, \"leftEnd is null\");\n        Objects.requireNonNull(rightEnd, \"rightEnd is null\");\n        Objects.requireNonNull(resultSelector, \"resultSelector is null\");\n        return RxJavaPlugins.onAssembly(new ObservableGroupJoin<T, TRight, TLeftEnd, TRightEnd, R>(\n                this, other, leftEnd, rightEnd, resultSelector));\n    }\n","realPath":"src/main/java/io/reactivex/rxjava3/core/Observable.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":9562,"status":"M"},{"authorDate":"2019-12-26 06:52:13","commitOrder":3,"curCode":"    public final <TRight, TLeftEnd, TRightEnd, R> Observable<R> join(\n            @NonNull ObservableSource<? extends TRight> other,\n            @NonNull Function<? super T, ? extends ObservableSource<TLeftEnd>> leftEnd,\n            @NonNull Function<? super TRight, ? extends ObservableSource<TRightEnd>> rightEnd,\n            @NonNull BiFunction<? super T, ? super TRight, ? extends R> resultSelector\n    ) {\n        Objects.requireNonNull(other, \"other is null\");\n        Objects.requireNonNull(leftEnd, \"leftEnd is null\");\n        Objects.requireNonNull(rightEnd, \"rightEnd is null\");\n        Objects.requireNonNull(resultSelector, \"resultSelector is null\");\n        return RxJavaPlugins.onAssembly(new ObservableJoin<T, TRight, TLeftEnd, TRightEnd, R>(\n                this, other, leftEnd, rightEnd, resultSelector));\n    }\n","date":"2019-12-26 06:52:13","endLine":9685,"groupId":"6702","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"join","params":"(@NonNullObservableSource<?extendsTRight>other@@NonNullFunction<?superT@?extendsObservableSource<TLeftEnd>>leftEnd@@NonNullFunction<?superTRight@?extendsObservableSource<TRightEnd>>rightEnd@@NonNullBiFunction<?superT@?superTRight@?extendsR>resultSelector)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/16/e1454af367e5b65e5ddecb077644e09b3d66f6.src","preCode":"    public final <TRight, TLeftEnd, TRightEnd, R> Observable<R> join(\n            ObservableSource<? extends TRight> other,\n            Function<? super T, ? extends ObservableSource<TLeftEnd>> leftEnd,\n            Function<? super TRight, ? extends ObservableSource<TRightEnd>> rightEnd,\n            BiFunction<? super T, ? super TRight, ? extends R> resultSelector\n                    ) {\n        Objects.requireNonNull(other, \"other is null\");\n        Objects.requireNonNull(leftEnd, \"leftEnd is null\");\n        Objects.requireNonNull(rightEnd, \"rightEnd is null\");\n        Objects.requireNonNull(resultSelector, \"resultSelector is null\");\n        return RxJavaPlugins.onAssembly(new ObservableJoin<T, TRight, TLeftEnd, TRightEnd, R>(\n                this, other, leftEnd, rightEnd, resultSelector));\n    }\n","realPath":"src/main/java/io/reactivex/rxjava3/core/Observable.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":9673,"status":"M"}],"commitId":"480889c58d3b762b073ef80229bf27f9d9429dd7","commitMessage":"@@@3.x: Add missing annotations.  fix many diamonds (#6795)\n\n* 3.x: Add missing annotations.  fix many diamonds\n\n* Fix accidental JDK 9 API usage\n\n* Fix NPE in unicast due to null-cleanup\n","date":"2019-12-26 06:52:13","modifiedFileCount":"52","status":"M","submitter":"David Karnok"},{"authorTime":"2019-12-26 06:52:13","codes":[{"authorDate":"2019-12-28 03:01:34","commitOrder":4,"curCode":"    public final <TRight, TLeftEnd, TRightEnd, R> Observable<R> groupJoin(\n            @NonNull ObservableSource<? extends TRight> other,\n            @NonNull Function<? super T, ? extends ObservableSource<TLeftEnd>> leftEnd,\n            @NonNull Function<? super TRight, ? extends ObservableSource<TRightEnd>> rightEnd,\n            @NonNull BiFunction<? super T, ? super Observable<TRight>, ? extends R> resultSelector\n    ) {\n        Objects.requireNonNull(other, \"other is null\");\n        Objects.requireNonNull(leftEnd, \"leftEnd is null\");\n        Objects.requireNonNull(rightEnd, \"rightEnd is null\");\n        Objects.requireNonNull(resultSelector, \"resultSelector is null\");\n        return RxJavaPlugins.onAssembly(new ObservableGroupJoin<>(\n                this, other, leftEnd, rightEnd, resultSelector));\n    }\n","date":"2019-12-28 03:01:34","endLine":9616,"groupId":"6702","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"groupJoin","params":"(@NonNullObservableSource<?extendsTRight>other@@NonNullFunction<?superT@?extendsObservableSource<TLeftEnd>>leftEnd@@NonNullFunction<?superTRight@?extendsObservableSource<TRightEnd>>rightEnd@@NonNullBiFunction<?superT@?superObservable<TRight>@?extendsR>resultSelector)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/37/3a576888b881c076917c3e2aad92b2684dc444.src","preCode":"    public final <TRight, TLeftEnd, TRightEnd, R> Observable<R> groupJoin(\n            @NonNull ObservableSource<? extends TRight> other,\n            @NonNull Function<? super T, ? extends ObservableSource<TLeftEnd>> leftEnd,\n            @NonNull Function<? super TRight, ? extends ObservableSource<TRightEnd>> rightEnd,\n            @NonNull BiFunction<? super T, ? super Observable<TRight>, ? extends R> resultSelector\n    ) {\n        Objects.requireNonNull(other, \"other is null\");\n        Objects.requireNonNull(leftEnd, \"leftEnd is null\");\n        Objects.requireNonNull(rightEnd, \"rightEnd is null\");\n        Objects.requireNonNull(resultSelector, \"resultSelector is null\");\n        return RxJavaPlugins.onAssembly(new ObservableGroupJoin<T, TRight, TLeftEnd, TRightEnd, R>(\n                this, other, leftEnd, rightEnd, resultSelector));\n    }\n","realPath":"src/main/java/io/reactivex/rxjava3/core/Observable.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":9604,"status":"M"},{"authorDate":"2019-12-26 06:52:13","commitOrder":4,"curCode":"    public final <TRight, TLeftEnd, TRightEnd, R> Observable<R> join(\n            @NonNull ObservableSource<? extends TRight> other,\n            @NonNull Function<? super T, ? extends ObservableSource<TLeftEnd>> leftEnd,\n            @NonNull Function<? super TRight, ? extends ObservableSource<TRightEnd>> rightEnd,\n            @NonNull BiFunction<? super T, ? super TRight, ? extends R> resultSelector\n    ) {\n        Objects.requireNonNull(other, \"other is null\");\n        Objects.requireNonNull(leftEnd, \"leftEnd is null\");\n        Objects.requireNonNull(rightEnd, \"rightEnd is null\");\n        Objects.requireNonNull(resultSelector, \"resultSelector is null\");\n        return RxJavaPlugins.onAssembly(new ObservableJoin<T, TRight, TLeftEnd, TRightEnd, R>(\n                this, other, leftEnd, rightEnd, resultSelector));\n    }\n","date":"2019-12-26 06:52:13","endLine":9685,"groupId":"6702","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"join","params":"(@NonNullObservableSource<?extendsTRight>other@@NonNullFunction<?superT@?extendsObservableSource<TLeftEnd>>leftEnd@@NonNullFunction<?superTRight@?extendsObservableSource<TRightEnd>>rightEnd@@NonNullBiFunction<?superT@?superTRight@?extendsR>resultSelector)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/16/e1454af367e5b65e5ddecb077644e09b3d66f6.src","preCode":"    public final <TRight, TLeftEnd, TRightEnd, R> Observable<R> join(\n            @NonNull ObservableSource<? extends TRight> other,\n            @NonNull Function<? super T, ? extends ObservableSource<TLeftEnd>> leftEnd,\n            @NonNull Function<? super TRight, ? extends ObservableSource<TRightEnd>> rightEnd,\n            @NonNull BiFunction<? super T, ? super TRight, ? extends R> resultSelector\n    ) {\n        Objects.requireNonNull(other, \"other is null\");\n        Objects.requireNonNull(leftEnd, \"leftEnd is null\");\n        Objects.requireNonNull(rightEnd, \"rightEnd is null\");\n        Objects.requireNonNull(resultSelector, \"resultSelector is null\");\n        return RxJavaPlugins.onAssembly(new ObservableJoin<T, TRight, TLeftEnd, TRightEnd, R>(\n                this, other, leftEnd, rightEnd, resultSelector));\n    }\n","realPath":"src/main/java/io/reactivex/rxjava3/core/Observable.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":9673,"status":"N"}],"commitId":"79f8e6dde6446b1aa33c146eaedbb958086daf56","commitMessage":"@@@3.x: Fix diamonds.  spelling.  unnecessary code (#6804)\n\n","date":"2019-12-28 03:01:34","modifiedFileCount":"463","status":"M","submitter":"David Karnok"},{"authorTime":"2021-07-25 00:35:45","codes":[{"authorDate":"2021-07-25 00:35:45","commitOrder":5,"curCode":"    public final <@NonNull TRight, @NonNull TLeftEnd, @NonNull TRightEnd, @NonNull R> Observable<R> groupJoin(\n            @NonNull ObservableSource<? extends TRight> other,\n            @NonNull Function<? super T, ? extends ObservableSource<TLeftEnd>> leftEnd,\n            @NonNull Function<? super TRight, ? extends ObservableSource<TRightEnd>> rightEnd,\n            @NonNull BiFunction<? super T, ? super Observable<TRight>, ? extends R> resultSelector\n    ) {\n        Objects.requireNonNull(other, \"other is null\");\n        Objects.requireNonNull(leftEnd, \"leftEnd is null\");\n        Objects.requireNonNull(rightEnd, \"rightEnd is null\");\n        Objects.requireNonNull(resultSelector, \"resultSelector is null\");\n        return RxJavaPlugins.onAssembly(new ObservableGroupJoin<>(\n                this, other, leftEnd, rightEnd, resultSelector));\n    }\n","date":"2021-07-25 00:35:45","endLine":10025,"groupId":"104357","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"groupJoin","params":"(@NonNullObservableSource<?extendsTRight>other@@NonNullFunction<?superT@?extendsObservableSource<TLeftEnd>>leftEnd@@NonNullFunction<?superTRight@?extendsObservableSource<TRightEnd>>rightEnd@@NonNullBiFunction<?superT@?superObservable<TRight>@?extendsR>resultSelector)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/be/33a95e3f43aee8827eff53f0756e4042f5b538.src","preCode":"    public final <TRight, TLeftEnd, TRightEnd, R> Observable<R> groupJoin(\n            @NonNull ObservableSource<? extends TRight> other,\n            @NonNull Function<? super T, ? extends ObservableSource<TLeftEnd>> leftEnd,\n            @NonNull Function<? super TRight, ? extends ObservableSource<TRightEnd>> rightEnd,\n            @NonNull BiFunction<? super T, ? super Observable<TRight>, ? extends R> resultSelector\n    ) {\n        Objects.requireNonNull(other, \"other is null\");\n        Objects.requireNonNull(leftEnd, \"leftEnd is null\");\n        Objects.requireNonNull(rightEnd, \"rightEnd is null\");\n        Objects.requireNonNull(resultSelector, \"resultSelector is null\");\n        return RxJavaPlugins.onAssembly(new ObservableGroupJoin<>(\n                this, other, leftEnd, rightEnd, resultSelector));\n    }\n","realPath":"src/main/java/io/reactivex/rxjava3/core/Observable.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":10013,"status":"M"},{"authorDate":"2021-07-25 00:35:45","commitOrder":5,"curCode":"    public final <@NonNull TRight, @NonNull TLeftEnd, @NonNull TRightEnd, @NonNull R> Observable<R> join(\n            @NonNull ObservableSource<? extends TRight> other,\n            @NonNull Function<? super T, ? extends ObservableSource<TLeftEnd>> leftEnd,\n            @NonNull Function<? super TRight, ? extends ObservableSource<TRightEnd>> rightEnd,\n            @NonNull BiFunction<? super T, ? super TRight, ? extends R> resultSelector\n    ) {\n        Objects.requireNonNull(other, \"other is null\");\n        Objects.requireNonNull(leftEnd, \"leftEnd is null\");\n        Objects.requireNonNull(rightEnd, \"rightEnd is null\");\n        Objects.requireNonNull(resultSelector, \"resultSelector is null\");\n        return RxJavaPlugins.onAssembly(new ObservableJoin<T, TRight, TLeftEnd, TRightEnd, R>(\n                this, other, leftEnd, rightEnd, resultSelector));\n    }\n","date":"2021-07-25 00:35:45","endLine":10137,"groupId":"104357","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"join","params":"(@NonNullObservableSource<?extendsTRight>other@@NonNullFunction<?superT@?extendsObservableSource<TLeftEnd>>leftEnd@@NonNullFunction<?superTRight@?extendsObservableSource<TRightEnd>>rightEnd@@NonNullBiFunction<?superT@?superTRight@?extendsR>resultSelector)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/be/33a95e3f43aee8827eff53f0756e4042f5b538.src","preCode":"    public final <TRight, TLeftEnd, TRightEnd, R> Observable<R> join(\n            @NonNull ObservableSource<? extends TRight> other,\n            @NonNull Function<? super T, ? extends ObservableSource<TLeftEnd>> leftEnd,\n            @NonNull Function<? super TRight, ? extends ObservableSource<TRightEnd>> rightEnd,\n            @NonNull BiFunction<? super T, ? super TRight, ? extends R> resultSelector\n    ) {\n        Objects.requireNonNull(other, \"other is null\");\n        Objects.requireNonNull(leftEnd, \"leftEnd is null\");\n        Objects.requireNonNull(rightEnd, \"rightEnd is null\");\n        Objects.requireNonNull(resultSelector, \"resultSelector is null\");\n        return RxJavaPlugins.onAssembly(new ObservableJoin<T, TRight, TLeftEnd, TRightEnd, R>(\n                this, other, leftEnd, rightEnd, resultSelector));\n    }\n","realPath":"src/main/java/io/reactivex/rxjava3/core/Observable.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":10125,"status":"M"}],"commitId":"40ca8eff4a0d6559258489cf282471f5e3b1a229","commitMessage":"@@@3.x: Move nullability annotations into the type argument declaration (#7303)\n\n* 3.x: Move nullability annotations into the type argument declaration\n\n* Reinforce Function<T.  R> return argument type where R is non-trivial","date":"2021-07-25 00:35:45","modifiedFileCount":"17","status":"M","submitter":"David Karnok"}]
