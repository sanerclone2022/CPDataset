[{"authorTime":"2019-08-16 20:51:17","codes":[{"authorDate":"2019-08-16 20:51:17","commitOrder":1,"curCode":"    public void onNext(T t) {\n        if (done) {\n            return;\n        }\n        if (upstream == null) {\n            onNextNoSubscription();\n            return;\n        }\n\n        if (t == null) {\n            Throwable ex = new NullPointerException(\"onNext called with null. Null values are generally not allowed in 2.x operators and sources.\");\n            try {\n                upstream.cancel();\n            } catch (Throwable e1) {\n                Exceptions.throwIfFatal(e1);\n                onError(new CompositeException(ex, e1));\n                return;\n            }\n            onError(ex);\n            return;\n        }\n\n        try {\n            downstream.onNext(t);\n        } catch (Throwable e) {\n            Exceptions.throwIfFatal(e);\n            try {\n                upstream.cancel();\n            } catch (Throwable e1) {\n                Exceptions.throwIfFatal(e1);\n                onError(new CompositeException(e, e1));\n                return;\n            }\n            onError(e);\n        }\n    }\n","date":"2019-08-16 20:51:17","endLine":102,"groupId":"6787","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"onNext","params":"(Tt)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/93/11099e630dcab29ae7f80b5fd9e7d89e9b6b0f.src","preCode":"    public void onNext(T t) {\n        if (done) {\n            return;\n        }\n        if (upstream == null) {\n            onNextNoSubscription();\n            return;\n        }\n\n        if (t == null) {\n            Throwable ex = new NullPointerException(\"onNext called with null. Null values are generally not allowed in 2.x operators and sources.\");\n            try {\n                upstream.cancel();\n            } catch (Throwable e1) {\n                Exceptions.throwIfFatal(e1);\n                onError(new CompositeException(ex, e1));\n                return;\n            }\n            onError(ex);\n            return;\n        }\n\n        try {\n            downstream.onNext(t);\n        } catch (Throwable e) {\n            Exceptions.throwIfFatal(e);\n            try {\n                upstream.cancel();\n            } catch (Throwable e1) {\n                Exceptions.throwIfFatal(e1);\n                onError(new CompositeException(e, e1));\n                return;\n            }\n            onError(e);\n        }\n    }\n","realPath":"src/main/java/io/reactivex/rxjava3/subscribers/SafeSubscriber.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":67,"status":"B"},{"authorDate":"2019-08-16 20:51:17","commitOrder":1,"curCode":"    public void onNext(@NonNull T t) {\n        if (done) {\n            return;\n        }\n        if (upstream == null) {\n            onNextNoSubscription();\n            return;\n        }\n\n        if (t == null) {\n            Throwable ex = new NullPointerException(\"onNext called with null. Null values are generally not allowed in 2.x operators and sources.\");\n            try {\n                upstream.dispose();\n            } catch (Throwable e1) {\n                Exceptions.throwIfFatal(e1);\n                onError(new CompositeException(ex, e1));\n                return;\n            }\n            onError(ex);\n            return;\n        }\n\n        try {\n            downstream.onNext(t);\n        } catch (Throwable e) {\n            Exceptions.throwIfFatal(e);\n            try {\n                upstream.dispose();\n            } catch (Throwable e1) {\n                Exceptions.throwIfFatal(e1);\n                onError(new CompositeException(e, e1));\n                return;\n            }\n            onError(e);\n        }\n    }\n","date":"2019-08-16 20:51:17","endLine":112,"groupId":"6787","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"onNext","params":"(@NonNullTt)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/2c/b94eab52c58a3596ef61ad5eaf0b603e14cfd8.src","preCode":"    public void onNext(@NonNull T t) {\n        if (done) {\n            return;\n        }\n        if (upstream == null) {\n            onNextNoSubscription();\n            return;\n        }\n\n        if (t == null) {\n            Throwable ex = new NullPointerException(\"onNext called with null. Null values are generally not allowed in 2.x operators and sources.\");\n            try {\n                upstream.dispose();\n            } catch (Throwable e1) {\n                Exceptions.throwIfFatal(e1);\n                onError(new CompositeException(ex, e1));\n                return;\n            }\n            onError(ex);\n            return;\n        }\n\n        try {\n            downstream.onNext(t);\n        } catch (Throwable e) {\n            Exceptions.throwIfFatal(e);\n            try {\n                upstream.dispose();\n            } catch (Throwable e1) {\n                Exceptions.throwIfFatal(e1);\n                onError(new CompositeException(e, e1));\n                return;\n            }\n            onError(e);\n        }\n    }\n","realPath":"src/main/java/io/reactivex/rxjava3/observers/SafeObserver.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":77,"status":"B"}],"commitId":"a1693ecc9215027a7a3eae75272979ebb4d79a27","commitMessage":"@@@3.x: Refactor to io.reactivex.rxjava3.** (#6621)\n\n* 3.x: Refactor to io.reactivex.rxjava3.**\n\n* fix javadoc cleanup gradle\n\n* javadoc gradle again\n\n* Fix package location in text\n","date":"2019-08-16 20:51:17","modifiedFileCount":"0","status":"B","submitter":"David Karnok"},{"authorTime":"2019-08-28 22:07:44","codes":[{"authorDate":"2019-08-28 22:07:44","commitOrder":2,"curCode":"    public void onNext(T t) {\n        if (done) {\n            return;\n        }\n        if (upstream == null) {\n            onNextNoSubscription();\n            return;\n        }\n\n        if (t == null) {\n            Throwable ex = ExceptionHelper.createNullPointerException(\"onNext called with a null Throwable.\");\n            try {\n                upstream.cancel();\n            } catch (Throwable e1) {\n                Exceptions.throwIfFatal(e1);\n                onError(new CompositeException(ex, e1));\n                return;\n            }\n            onError(ex);\n            return;\n        }\n\n        try {\n            downstream.onNext(t);\n        } catch (Throwable e) {\n            Exceptions.throwIfFatal(e);\n            try {\n                upstream.cancel();\n            } catch (Throwable e1) {\n                Exceptions.throwIfFatal(e1);\n                onError(new CompositeException(e, e1));\n                return;\n            }\n            onError(e);\n        }\n    }\n","date":"2019-08-28 22:07:44","endLine":103,"groupId":"6787","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"onNext","params":"(Tt)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/09/6a99e6239d8da0ac04d745354dbe68aff27889.src","preCode":"    public void onNext(T t) {\n        if (done) {\n            return;\n        }\n        if (upstream == null) {\n            onNextNoSubscription();\n            return;\n        }\n\n        if (t == null) {\n            Throwable ex = new NullPointerException(\"onNext called with null. Null values are generally not allowed in 2.x operators and sources.\");\n            try {\n                upstream.cancel();\n            } catch (Throwable e1) {\n                Exceptions.throwIfFatal(e1);\n                onError(new CompositeException(ex, e1));\n                return;\n            }\n            onError(ex);\n            return;\n        }\n\n        try {\n            downstream.onNext(t);\n        } catch (Throwable e) {\n            Exceptions.throwIfFatal(e);\n            try {\n                upstream.cancel();\n            } catch (Throwable e1) {\n                Exceptions.throwIfFatal(e1);\n                onError(new CompositeException(e, e1));\n                return;\n            }\n            onError(e);\n        }\n    }\n","realPath":"src/main/java/io/reactivex/rxjava3/subscribers/SafeSubscriber.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":68,"status":"M"},{"authorDate":"2019-08-28 22:07:44","commitOrder":2,"curCode":"    public void onNext(@NonNull T t) {\n        if (done) {\n            return;\n        }\n        if (upstream == null) {\n            onNextNoSubscription();\n            return;\n        }\n\n        if (t == null) {\n            Throwable ex = ExceptionHelper.createNullPointerException(\"onNext called with a null value.\");\n            try {\n                upstream.dispose();\n            } catch (Throwable e1) {\n                Exceptions.throwIfFatal(e1);\n                onError(new CompositeException(ex, e1));\n                return;\n            }\n            onError(ex);\n            return;\n        }\n\n        try {\n            downstream.onNext(t);\n        } catch (Throwable e) {\n            Exceptions.throwIfFatal(e);\n            try {\n                upstream.dispose();\n            } catch (Throwable e1) {\n                Exceptions.throwIfFatal(e1);\n                onError(new CompositeException(e, e1));\n                return;\n            }\n            onError(e);\n        }\n    }\n","date":"2019-08-28 22:07:44","endLine":113,"groupId":"6787","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"onNext","params":"(@NonNullTt)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/f7/612378e2b360d932c444e349b71b89970b6005.src","preCode":"    public void onNext(@NonNull T t) {\n        if (done) {\n            return;\n        }\n        if (upstream == null) {\n            onNextNoSubscription();\n            return;\n        }\n\n        if (t == null) {\n            Throwable ex = new NullPointerException(\"onNext called with null. Null values are generally not allowed in 2.x operators and sources.\");\n            try {\n                upstream.dispose();\n            } catch (Throwable e1) {\n                Exceptions.throwIfFatal(e1);\n                onError(new CompositeException(ex, e1));\n                return;\n            }\n            onError(ex);\n            return;\n        }\n\n        try {\n            downstream.onNext(t);\n        } catch (Throwable e) {\n            Exceptions.throwIfFatal(e);\n            try {\n                upstream.dispose();\n            } catch (Throwable e1) {\n                Exceptions.throwIfFatal(e1);\n                onError(new CompositeException(e, e1));\n                return;\n            }\n            onError(e);\n        }\n    }\n","realPath":"src/main/java/io/reactivex/rxjava3/observers/SafeObserver.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":78,"status":"M"}],"commitId":"a07c45eeeb68b1cfc24f913c75edbc2820aadb76","commitMessage":"@@@3.x: Cleanup addThrowable.  \"2.x\" and null-value error messages (#6639)\n\n","date":"2019-08-28 22:07:44","modifiedFileCount":"106","status":"M","submitter":"David Karnok"},{"authorTime":"2019-08-28 22:07:44","codes":[{"authorDate":"2019-12-21 18:08:34","commitOrder":3,"curCode":"    public void onNext(@NonNull T t) {\n        if (done) {\n            return;\n        }\n        if (upstream == null) {\n            onNextNoSubscription();\n            return;\n        }\n\n        if (t == null) {\n            Throwable ex = ExceptionHelper.createNullPointerException(\"onNext called with a null Throwable.\");\n            try {\n                upstream.cancel();\n            } catch (Throwable e1) {\n                Exceptions.throwIfFatal(e1);\n                onError(new CompositeException(ex, e1));\n                return;\n            }\n            onError(ex);\n            return;\n        }\n\n        try {\n            downstream.onNext(t);\n        } catch (Throwable e) {\n            Exceptions.throwIfFatal(e);\n            try {\n                upstream.cancel();\n            } catch (Throwable e1) {\n                Exceptions.throwIfFatal(e1);\n                onError(new CompositeException(e, e1));\n                return;\n            }\n            onError(e);\n        }\n    }\n","date":"2019-12-21 18:08:34","endLine":104,"groupId":"103863","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"onNext","params":"(@NonNullTt)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/0d/b19796fa65078e4ee777595b8124cab646f543.src","preCode":"    public void onNext(T t) {\n        if (done) {\n            return;\n        }\n        if (upstream == null) {\n            onNextNoSubscription();\n            return;\n        }\n\n        if (t == null) {\n            Throwable ex = ExceptionHelper.createNullPointerException(\"onNext called with a null Throwable.\");\n            try {\n                upstream.cancel();\n            } catch (Throwable e1) {\n                Exceptions.throwIfFatal(e1);\n                onError(new CompositeException(ex, e1));\n                return;\n            }\n            onError(ex);\n            return;\n        }\n\n        try {\n            downstream.onNext(t);\n        } catch (Throwable e) {\n            Exceptions.throwIfFatal(e);\n            try {\n                upstream.cancel();\n            } catch (Throwable e1) {\n                Exceptions.throwIfFatal(e1);\n                onError(new CompositeException(e, e1));\n                return;\n            }\n            onError(e);\n        }\n    }\n","realPath":"src/main/java/io/reactivex/rxjava3/subscribers/SafeSubscriber.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":69,"status":"M"},{"authorDate":"2019-08-28 22:07:44","commitOrder":3,"curCode":"    public void onNext(@NonNull T t) {\n        if (done) {\n            return;\n        }\n        if (upstream == null) {\n            onNextNoSubscription();\n            return;\n        }\n\n        if (t == null) {\n            Throwable ex = ExceptionHelper.createNullPointerException(\"onNext called with a null value.\");\n            try {\n                upstream.dispose();\n            } catch (Throwable e1) {\n                Exceptions.throwIfFatal(e1);\n                onError(new CompositeException(ex, e1));\n                return;\n            }\n            onError(ex);\n            return;\n        }\n\n        try {\n            downstream.onNext(t);\n        } catch (Throwable e) {\n            Exceptions.throwIfFatal(e);\n            try {\n                upstream.dispose();\n            } catch (Throwable e1) {\n                Exceptions.throwIfFatal(e1);\n                onError(new CompositeException(e, e1));\n                return;\n            }\n            onError(e);\n        }\n    }\n","date":"2019-08-28 22:07:44","endLine":113,"groupId":"103863","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"onNext","params":"(@NonNullTt)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/f7/612378e2b360d932c444e349b71b89970b6005.src","preCode":"    public void onNext(@NonNull T t) {\n        if (done) {\n            return;\n        }\n        if (upstream == null) {\n            onNextNoSubscription();\n            return;\n        }\n\n        if (t == null) {\n            Throwable ex = ExceptionHelper.createNullPointerException(\"onNext called with a null value.\");\n            try {\n                upstream.dispose();\n            } catch (Throwable e1) {\n                Exceptions.throwIfFatal(e1);\n                onError(new CompositeException(ex, e1));\n                return;\n            }\n            onError(ex);\n            return;\n        }\n\n        try {\n            downstream.onNext(t);\n        } catch (Throwable e) {\n            Exceptions.throwIfFatal(e);\n            try {\n                upstream.dispose();\n            } catch (Throwable e1) {\n                Exceptions.throwIfFatal(e1);\n                onError(new CompositeException(e, e1));\n                return;\n            }\n            onError(e);\n        }\n    }\n","realPath":"src/main/java/io/reactivex/rxjava3/observers/SafeObserver.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":78,"status":"N"}],"commitId":"dba670554c69d6c09d28643505880c1a468af3db","commitMessage":"@@@3.x: Cleanup and prettify Javadocs.  widen XOperator throws (#6785)\n\n* 3.x: Cleanup and prettify Javadocs.  widen XOperator throws\n\n* Fix encoding of ? in javadoc\n\n* Fix a wrong tag name\n","date":"2019-12-21 18:08:34","modifiedFileCount":"75","status":"M","submitter":"David Karnok"}]
