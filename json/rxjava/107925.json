[{"authorTime":"2019-08-16 20:51:17","codes":[{"authorDate":"2019-08-16 20:51:17","commitOrder":1,"curCode":"    public void invalidDeferredRequest() {\n        SubscriptionArbiter sa = new SubscriptionArbiter(true);\n\n        List<Throwable> errors = TestHelper.trackPluginErrors();\n        try {\n            sa.request(-99);\n\n            TestHelper.assertError(errors, 0, IllegalArgumentException.class, \"n > 0 required but it was -99\");\n        } finally {\n            RxJavaPlugins.reset();\n        }\n    }\n","date":"2019-08-16 20:51:17","endLine":59,"groupId":"1180","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"invalidDeferredRequest","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/46/51b2e3b8256ed50ea69861c468bbc7505f089c.src","preCode":"    public void invalidDeferredRequest() {\n        SubscriptionArbiter sa = new SubscriptionArbiter(true);\n\n        List<Throwable> errors = TestHelper.trackPluginErrors();\n        try {\n            sa.request(-99);\n\n            TestHelper.assertError(errors, 0, IllegalArgumentException.class, \"n > 0 required but it was -99\");\n        } finally {\n            RxJavaPlugins.reset();\n        }\n    }\n","realPath":"src/test/java/io/reactivex/rxjava3/internal/subscriptions/SubscriptionArbiterTest.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":48,"status":"B"},{"authorDate":"2019-08-16 20:51:17","commitOrder":1,"curCode":"    public void badRequest() {\n        TestSubscriber<Integer> ts = new TestSubscriber<Integer>(0L);\n\n        ScalarSubscription<Integer> sc = new ScalarSubscription<Integer>(ts, 1);\n\n        List<Throwable> errors = TestHelper.trackPluginErrors();\n        try {\n            sc.request(-99);\n\n            TestHelper.assertError(errors, 0, IllegalArgumentException.class, \"n > 0 required but it was -99\");\n        } finally {\n            RxJavaPlugins.reset();\n        }\n    }\n","date":"2019-08-16 20:51:17","endLine":41,"groupId":"10608","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"badRequest","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/27/5b15f73c9b6b04d14e6a0a7195a2f7184c3f49.src","preCode":"    public void badRequest() {\n        TestSubscriber<Integer> ts = new TestSubscriber<Integer>(0L);\n\n        ScalarSubscription<Integer> sc = new ScalarSubscription<Integer>(ts, 1);\n\n        List<Throwable> errors = TestHelper.trackPluginErrors();\n        try {\n            sc.request(-99);\n\n            TestHelper.assertError(errors, 0, IllegalArgumentException.class, \"n > 0 required but it was -99\");\n        } finally {\n            RxJavaPlugins.reset();\n        }\n    }\n","realPath":"src/test/java/io/reactivex/rxjava3/internal/subscriptions/ScalarSubscriptionTest.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":28,"status":"B"}],"commitId":"a1693ecc9215027a7a3eae75272979ebb4d79a27","commitMessage":"@@@3.x: Refactor to io.reactivex.rxjava3.** (#6621)\n\n* 3.x: Refactor to io.reactivex.rxjava3.**\n\n* fix javadoc cleanup gradle\n\n* javadoc gradle again\n\n* Fix package location in text\n","date":"2019-08-16 20:51:17","modifiedFileCount":"0","status":"B","submitter":"David Karnok"},{"authorTime":"2019-12-22 19:17:23","codes":[{"authorDate":"2019-08-16 20:51:17","commitOrder":2,"curCode":"    public void invalidDeferredRequest() {\n        SubscriptionArbiter sa = new SubscriptionArbiter(true);\n\n        List<Throwable> errors = TestHelper.trackPluginErrors();\n        try {\n            sa.request(-99);\n\n            TestHelper.assertError(errors, 0, IllegalArgumentException.class, \"n > 0 required but it was -99\");\n        } finally {\n            RxJavaPlugins.reset();\n        }\n    }\n","date":"2019-08-16 20:51:17","endLine":59,"groupId":"107925","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"invalidDeferredRequest","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/46/51b2e3b8256ed50ea69861c468bbc7505f089c.src","preCode":"    public void invalidDeferredRequest() {\n        SubscriptionArbiter sa = new SubscriptionArbiter(true);\n\n        List<Throwable> errors = TestHelper.trackPluginErrors();\n        try {\n            sa.request(-99);\n\n            TestHelper.assertError(errors, 0, IllegalArgumentException.class, \"n > 0 required but it was -99\");\n        } finally {\n            RxJavaPlugins.reset();\n        }\n    }\n","realPath":"src/test/java/io/reactivex/rxjava3/internal/subscriptions/SubscriptionArbiterTest.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":48,"status":"N"},{"authorDate":"2019-12-22 19:17:23","commitOrder":2,"curCode":"    public void badRequest() {\n        TestSubscriber<Integer> ts = new TestSubscriber<>(0L);\n\n        ScalarSubscription<Integer> sc = new ScalarSubscription<>(ts, 1);\n\n        List<Throwable> errors = TestHelper.trackPluginErrors();\n        try {\n            sc.request(-99);\n\n            TestHelper.assertError(errors, 0, IllegalArgumentException.class, \"n > 0 required but it was -99\");\n        } finally {\n            RxJavaPlugins.reset();\n        }\n    }\n","date":"2019-12-22 19:17:23","endLine":41,"groupId":"107925","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"badRequest","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/55/a564280c4bf0e2e23e30fa64c28d985464abe3.src","preCode":"    public void badRequest() {\n        TestSubscriber<Integer> ts = new TestSubscriber<Integer>(0L);\n\n        ScalarSubscription<Integer> sc = new ScalarSubscription<Integer>(ts, 1);\n\n        List<Throwable> errors = TestHelper.trackPluginErrors();\n        try {\n            sc.request(-99);\n\n            TestHelper.assertError(errors, 0, IllegalArgumentException.class, \"n > 0 required but it was -99\");\n        } finally {\n            RxJavaPlugins.reset();\n        }\n    }\n","realPath":"src/test/java/io/reactivex/rxjava3/internal/subscriptions/ScalarSubscriptionTest.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":28,"status":"M"}],"commitId":"75da4b504a52466b455a49a342747514fa0dffab","commitMessage":"@@@Diamond operators in tests (#6788)\n\n* diamond operators in unit tests.  small packages in internal/\n\n* diamond operators in unit tests.  small packages in internal/operators\n","date":"2019-12-22 19:17:23","modifiedFileCount":"92","status":"M","submitter":"Dmitry Volkov"}]
