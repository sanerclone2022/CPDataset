[{"authorTime":"2019-08-16 20:51:17","codes":[{"authorDate":"2019-08-16 20:51:17","commitOrder":1,"curCode":"        void trimFinal() {\n            long limit = scheduler.now(unit) - maxAge;\n\n            TimedNode<Object> h = head;\n\n            for (;;) {\n                TimedNode<Object> next = h.get();\n                if (next.get() == null) {\n                    if (h.value != null) {\n                        TimedNode<Object> lasth = new TimedNode<Object>(null, 0L);\n                        lasth.lazySet(h.get());\n                        head = lasth;\n                    } else {\n                        head = h;\n                    }\n                    break;\n                }\n\n                if (next.time > limit) {\n                    if (h.value != null) {\n                        TimedNode<Object> lasth = new TimedNode<Object>(null, 0L);\n                        lasth.lazySet(h.get());\n                        head = lasth;\n                    } else {\n                        head = h;\n                    }\n                    break;\n                }\n\n                h = next;\n            }\n        }\n","date":"2019-08-16 20:51:17","endLine":1126,"groupId":"5058","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"trimFinal","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/47/7af44513cdc1f44018b62711337549a89d7ae6.src","preCode":"        void trimFinal() {\n            long limit = scheduler.now(unit) - maxAge;\n\n            TimedNode<Object> h = head;\n\n            for (;;) {\n                TimedNode<Object> next = h.get();\n                if (next.get() == null) {\n                    if (h.value != null) {\n                        TimedNode<Object> lasth = new TimedNode<Object>(null, 0L);\n                        lasth.lazySet(h.get());\n                        head = lasth;\n                    } else {\n                        head = h;\n                    }\n                    break;\n                }\n\n                if (next.time > limit) {\n                    if (h.value != null) {\n                        TimedNode<Object> lasth = new TimedNode<Object>(null, 0L);\n                        lasth.lazySet(h.get());\n                        head = lasth;\n                    } else {\n                        head = h;\n                    }\n                    break;\n                }\n\n                h = next;\n            }\n        }\n","realPath":"src/main/java/io/reactivex/rxjava3/subjects/ReplaySubject.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":1095,"status":"B"},{"authorDate":"2019-08-16 20:51:17","commitOrder":1,"curCode":"        void trimFinal() {\n            long limit = scheduler.now(unit) - maxAge;\n\n            TimedNode<T> h = head;\n\n            for (;;) {\n                TimedNode<T> next = h.get();\n                if (next == null) {\n                    if (h.value != null) {\n                        head = new TimedNode<T>(null, 0L);\n                    } else {\n                        head = h;\n                    }\n                    break;\n                }\n\n                if (next.time > limit) {\n                    if (h.value != null) {\n                        TimedNode<T> n = new TimedNode<T>(null, 0L);\n                        n.lazySet(h.get());\n                        head = n;\n                    } else {\n                        head = h;\n                    }\n                    break;\n                }\n\n                h = next;\n            }\n        }\n","date":"2019-08-16 20:51:17","endLine":1123,"groupId":"6631","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"trimFinal","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/98/8ff4418da943e0583847d21efa116fae6d428a.src","preCode":"        void trimFinal() {\n            long limit = scheduler.now(unit) - maxAge;\n\n            TimedNode<T> h = head;\n\n            for (;;) {\n                TimedNode<T> next = h.get();\n                if (next == null) {\n                    if (h.value != null) {\n                        head = new TimedNode<T>(null, 0L);\n                    } else {\n                        head = h;\n                    }\n                    break;\n                }\n\n                if (next.time > limit) {\n                    if (h.value != null) {\n                        TimedNode<T> n = new TimedNode<T>(null, 0L);\n                        n.lazySet(h.get());\n                        head = n;\n                    } else {\n                        head = h;\n                    }\n                    break;\n                }\n\n                h = next;\n            }\n        }\n","realPath":"src/main/java/io/reactivex/rxjava3/processors/ReplayProcessor.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":1094,"status":"B"}],"commitId":"a1693ecc9215027a7a3eae75272979ebb4d79a27","commitMessage":"@@@3.x: Refactor to io.reactivex.rxjava3.** (#6621)\n\n* 3.x: Refactor to io.reactivex.rxjava3.**\n\n* fix javadoc cleanup gradle\n\n* javadoc gradle again\n\n* Fix package location in text\n","date":"2019-08-16 20:51:17","modifiedFileCount":"0","status":"B","submitter":"David Karnok"},{"authorTime":"2019-12-26 06:52:13","codes":[{"authorDate":"2019-12-26 06:52:13","commitOrder":2,"curCode":"        void trimFinal() {\n            long limit = scheduler.now(unit) - maxAge;\n\n            TimedNode<Object> h = head;\n\n            for (;;) {\n                TimedNode<Object> next = h.get();\n                if (next.get() == null) {\n                    if (h.value != null) {\n                        TimedNode<Object> lasth = new TimedNode<>(null, 0L);\n                        lasth.lazySet(h.get());\n                        head = lasth;\n                    } else {\n                        head = h;\n                    }\n                    break;\n                }\n\n                if (next.time > limit) {\n                    if (h.value != null) {\n                        TimedNode<Object> lasth = new TimedNode<>(null, 0L);\n                        lasth.lazySet(h.get());\n                        head = lasth;\n                    } else {\n                        head = h;\n                    }\n                    break;\n                }\n\n                h = next;\n            }\n        }\n","date":"2019-12-26 06:52:13","endLine":1136,"groupId":"101728","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"trimFinal","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/9b/b3d93b9953cf64bb6bfda69077e12d889154ea.src","preCode":"        void trimFinal() {\n            long limit = scheduler.now(unit) - maxAge;\n\n            TimedNode<Object> h = head;\n\n            for (;;) {\n                TimedNode<Object> next = h.get();\n                if (next.get() == null) {\n                    if (h.value != null) {\n                        TimedNode<Object> lasth = new TimedNode<Object>(null, 0L);\n                        lasth.lazySet(h.get());\n                        head = lasth;\n                    } else {\n                        head = h;\n                    }\n                    break;\n                }\n\n                if (next.time > limit) {\n                    if (h.value != null) {\n                        TimedNode<Object> lasth = new TimedNode<Object>(null, 0L);\n                        lasth.lazySet(h.get());\n                        head = lasth;\n                    } else {\n                        head = h;\n                    }\n                    break;\n                }\n\n                h = next;\n            }\n        }\n","realPath":"src/main/java/io/reactivex/rxjava3/subjects/ReplaySubject.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":1105,"status":"M"},{"authorDate":"2019-12-26 06:52:13","commitOrder":2,"curCode":"        void trimFinal() {\n            long limit = scheduler.now(unit) - maxAge;\n\n            TimedNode<T> h = head;\n\n            for (;;) {\n                TimedNode<T> next = h.get();\n                if (next == null) {\n                    if (h.value != null) {\n                        head = new TimedNode<>(null, 0L);\n                    } else {\n                        head = h;\n                    }\n                    break;\n                }\n\n                if (next.time > limit) {\n                    if (h.value != null) {\n                        TimedNode<T> n = new TimedNode<>(null, 0L);\n                        n.lazySet(h.get());\n                        head = n;\n                    } else {\n                        head = h;\n                    }\n                    break;\n                }\n\n                h = next;\n            }\n        }\n","date":"2019-12-26 06:52:13","endLine":1134,"groupId":"101728","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"trimFinal","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/9b/722057b95a5ba0b4fd49059bd48ede704ae939.src","preCode":"        void trimFinal() {\n            long limit = scheduler.now(unit) - maxAge;\n\n            TimedNode<T> h = head;\n\n            for (;;) {\n                TimedNode<T> next = h.get();\n                if (next == null) {\n                    if (h.value != null) {\n                        head = new TimedNode<T>(null, 0L);\n                    } else {\n                        head = h;\n                    }\n                    break;\n                }\n\n                if (next.time > limit) {\n                    if (h.value != null) {\n                        TimedNode<T> n = new TimedNode<T>(null, 0L);\n                        n.lazySet(h.get());\n                        head = n;\n                    } else {\n                        head = h;\n                    }\n                    break;\n                }\n\n                h = next;\n            }\n        }\n","realPath":"src/main/java/io/reactivex/rxjava3/processors/ReplayProcessor.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":1105,"status":"M"}],"commitId":"480889c58d3b762b073ef80229bf27f9d9429dd7","commitMessage":"@@@3.x: Add missing annotations.  fix many diamonds (#6795)\n\n* 3.x: Add missing annotations.  fix many diamonds\n\n* Fix accidental JDK 9 API usage\n\n* Fix NPE in unicast due to null-cleanup\n","date":"2019-12-26 06:52:13","modifiedFileCount":"52","status":"M","submitter":"David Karnok"}]
