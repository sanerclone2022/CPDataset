[{"authorTime":"2019-08-16 20:51:17","codes":[{"authorDate":"2019-08-16 20:51:17","commitOrder":1,"curCode":"    public void normalBackpressured() {\n        final TestSubscriber<Integer> ts = new TestSubscriber<Integer>(0L);\n\n        Flowable.range(1, 5).mergeWith(\n                Completable.fromAction(new Action() {\n                    @Override\n                    public void run() throws Exception {\n                        ts.onNext(100);\n                    }\n                })\n        )\n        .subscribe(ts);\n\n        ts\n        .assertValue(100)\n        .requestMore(2)\n        .assertValues(100, 1, 2)\n        .requestMore(2)\n        .assertValues(100, 1, 2, 3, 4)\n        .requestMore(1)\n        .assertResult(100, 1, 2, 3, 4, 5);\n    }\n","date":"2019-08-16 20:51:17","endLine":94,"groupId":"12329","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"normalBackpressured","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/90/08168d48eadb4b62eb014c22420c5cdfe14508.src","preCode":"    public void normalBackpressured() {\n        final TestSubscriber<Integer> ts = new TestSubscriber<Integer>(0L);\n\n        Flowable.range(1, 5).mergeWith(\n                Completable.fromAction(new Action() {\n                    @Override\n                    public void run() throws Exception {\n                        ts.onNext(100);\n                    }\n                })\n        )\n        .subscribe(ts);\n\n        ts\n        .assertValue(100)\n        .requestMore(2)\n        .assertValues(100, 1, 2)\n        .requestMore(2)\n        .assertValues(100, 1, 2, 3, 4)\n        .requestMore(1)\n        .assertResult(100, 1, 2, 3, 4, 5);\n    }\n","realPath":"src/test/java/io/reactivex/rxjava3/internal/operators/flowable/FlowableMergeWithCompletableTest.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":73,"status":"B"},{"authorDate":"2019-08-16 20:51:17","commitOrder":1,"curCode":"    public void normalBackpressured() {\n        final TestSubscriber<Integer> ts = new TestSubscriber<Integer>(0L);\n\n        Flowable.range(1, 5).mergeWith(\n                Single.just(100)\n        )\n        .subscribe(ts);\n\n        ts\n        .assertEmpty()\n        .requestMore(2)\n        .assertValues(100, 1)\n        .requestMore(2)\n        .assertValues(100, 1, 2, 3)\n        .requestMore(2)\n        .assertResult(100, 1, 2, 3, 4, 5);\n    }\n","date":"2019-08-16 20:51:17","endLine":105,"groupId":"11949","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"normalBackpressured","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/b7/036b841885ffb72228be4102bdb6f6e020c8b6.src","preCode":"    public void normalBackpressured() {\n        final TestSubscriber<Integer> ts = new TestSubscriber<Integer>(0L);\n\n        Flowable.range(1, 5).mergeWith(\n                Single.just(100)\n        )\n        .subscribe(ts);\n\n        ts\n        .assertEmpty()\n        .requestMore(2)\n        .assertValues(100, 1)\n        .requestMore(2)\n        .assertValues(100, 1, 2, 3)\n        .requestMore(2)\n        .assertResult(100, 1, 2, 3, 4, 5);\n    }\n","realPath":"src/test/java/io/reactivex/rxjava3/internal/operators/flowable/FlowableMergeWithSingleTest.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":89,"status":"B"}],"commitId":"a1693ecc9215027a7a3eae75272979ebb4d79a27","commitMessage":"@@@3.x: Refactor to io.reactivex.rxjava3.** (#6621)\n\n* 3.x: Refactor to io.reactivex.rxjava3.**\n\n* fix javadoc cleanup gradle\n\n* javadoc gradle again\n\n* Fix package location in text\n","date":"2019-08-16 20:51:17","modifiedFileCount":"0","status":"B","submitter":"David Karnok"},{"authorTime":"2019-12-22 18:39:23","codes":[{"authorDate":"2019-12-22 18:39:23","commitOrder":2,"curCode":"    public void normalBackpressured() {\n        final TestSubscriber<Integer> ts = new TestSubscriber<>(0L);\n\n        Flowable.range(1, 5).mergeWith(\n                Completable.fromAction(new Action() {\n                    @Override\n                    public void run() throws Exception {\n                        ts.onNext(100);\n                    }\n                })\n        )\n        .subscribe(ts);\n\n        ts\n        .assertValue(100)\n        .requestMore(2)\n        .assertValues(100, 1, 2)\n        .requestMore(2)\n        .assertValues(100, 1, 2, 3, 4)\n        .requestMore(1)\n        .assertResult(100, 1, 2, 3, 4, 5);\n    }\n","date":"2019-12-22 18:39:23","endLine":94,"groupId":"105764","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"normalBackpressured","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/c0/74796be6db1f8e965b8b96ce1aa7684aa5dc78.src","preCode":"    public void normalBackpressured() {\n        final TestSubscriber<Integer> ts = new TestSubscriber<Integer>(0L);\n\n        Flowable.range(1, 5).mergeWith(\n                Completable.fromAction(new Action() {\n                    @Override\n                    public void run() throws Exception {\n                        ts.onNext(100);\n                    }\n                })\n        )\n        .subscribe(ts);\n\n        ts\n        .assertValue(100)\n        .requestMore(2)\n        .assertValues(100, 1, 2)\n        .requestMore(2)\n        .assertValues(100, 1, 2, 3, 4)\n        .requestMore(1)\n        .assertResult(100, 1, 2, 3, 4, 5);\n    }\n","realPath":"src/test/java/io/reactivex/rxjava3/internal/operators/flowable/FlowableMergeWithCompletableTest.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":73,"status":"M"},{"authorDate":"2019-12-22 18:39:23","commitOrder":2,"curCode":"    public void normalBackpressured() {\n        final TestSubscriber<Integer> ts = new TestSubscriber<>(0L);\n\n        Flowable.range(1, 5).mergeWith(\n                Single.just(100)\n        )\n        .subscribe(ts);\n\n        ts\n        .assertEmpty()\n        .requestMore(2)\n        .assertValues(100, 1)\n        .requestMore(2)\n        .assertValues(100, 1, 2, 3)\n        .requestMore(2)\n        .assertResult(100, 1, 2, 3, 4, 5);\n    }\n","date":"2019-12-22 18:39:23","endLine":105,"groupId":"105764","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"normalBackpressured","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/a4/8ee16fef9a8f36eb3582fb7cad51a37de9380b.src","preCode":"    public void normalBackpressured() {\n        final TestSubscriber<Integer> ts = new TestSubscriber<Integer>(0L);\n\n        Flowable.range(1, 5).mergeWith(\n                Single.just(100)\n        )\n        .subscribe(ts);\n\n        ts\n        .assertEmpty()\n        .requestMore(2)\n        .assertValues(100, 1)\n        .requestMore(2)\n        .assertValues(100, 1, 2, 3)\n        .requestMore(2)\n        .assertResult(100, 1, 2, 3, 4, 5);\n    }\n","realPath":"src/test/java/io/reactivex/rxjava3/internal/operators/flowable/FlowableMergeWithSingleTest.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":89,"status":"M"}],"commitId":"e162d664d86639b97c214054aca346fc2ba37e33","commitMessage":"@@@diamond operators in unit tests.  flowable package (#6787)\n\n","date":"2019-12-22 18:39:23","modifiedFileCount":"111","status":"M","submitter":"Dmitry Volkov"}]
