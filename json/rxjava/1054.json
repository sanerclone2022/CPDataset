[{"authorTime":"2019-08-16 20:51:17","codes":[{"authorDate":"2019-08-16 20:51:17","commitOrder":1,"curCode":"    public Publisher<Long> createPublisher(long elements) {\n        return\n            Flowable.combineLatest(\n                new Function<Object[], Long>() {\n                    @Override\n                    public Long apply(Object[] a) throws Exception {\n                        return (Long)a[0];\n                    }\n                },\n                Flowable.just(1L),\n                Flowable.fromIterable(iterate(elements))\n            )\n        ;\n    }\n","date":"2019-08-16 20:51:17","endLine":40,"groupId":"973","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"createPublisher","params":"(longelements)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/7b/57576d6e4807d3b10d58966d3aa352ebbd5d5a.src","preCode":"    public Publisher<Long> createPublisher(long elements) {\n        return\n            Flowable.combineLatest(\n                new Function<Object[], Long>() {\n                    @Override\n                    public Long apply(Object[] a) throws Exception {\n                        return (Long)a[0];\n                    }\n                },\n                Flowable.just(1L),\n                Flowable.fromIterable(iterate(elements))\n            )\n        ;\n    }\n","realPath":"src/test/java/io/reactivex/rxjava3/tck/CombineLatestArrayTckTest.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":27,"status":"B"},{"authorDate":"2019-08-16 20:51:17","commitOrder":1,"curCode":"    public Publisher<Long> createPublisher(long elements) {\n        return\n            Flowable.combineLatestDelayError(\n                new Function<Object[], Long>() {\n                    @Override\n                    public Long apply(Object[] a) throws Exception {\n                        return (Long)a[0];\n                    }\n                },\n                Flowable.just(1L),\n                Flowable.fromIterable(iterate(elements))\n            )\n        ;\n    }\n","date":"2019-08-16 20:51:17","endLine":40,"groupId":"973","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"createPublisher","params":"(longelements)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/eb/662c8b9079b1e75bf5c32dc3cee1323e265c8b.src","preCode":"    public Publisher<Long> createPublisher(long elements) {\n        return\n            Flowable.combineLatestDelayError(\n                new Function<Object[], Long>() {\n                    @Override\n                    public Long apply(Object[] a) throws Exception {\n                        return (Long)a[0];\n                    }\n                },\n                Flowable.just(1L),\n                Flowable.fromIterable(iterate(elements))\n            )\n        ;\n    }\n","realPath":"src/test/java/io/reactivex/rxjava3/tck/CombineLatestArrayDelayErrorTckTest.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":27,"status":"B"}],"commitId":"a1693ecc9215027a7a3eae75272979ebb4d79a27","commitMessage":"@@@3.x: Refactor to io.reactivex.rxjava3.** (#6621)\n\n* 3.x: Refactor to io.reactivex.rxjava3.**\n\n* fix javadoc cleanup gradle\n\n* javadoc gradle again\n\n* Fix package location in text\n","date":"2019-08-16 20:51:17","modifiedFileCount":"0","status":"B","submitter":"David Karnok"},{"authorTime":"2019-08-28 17:48:16","codes":[{"authorDate":"2019-08-28 17:48:16","commitOrder":2,"curCode":"    public Publisher<Long> createPublisher(long elements) {\n        return\n            Flowable.combineLatest(\n                new Publisher[] { Flowable.just(1L), Flowable.fromIterable(iterate(elements)) },\n                new Function<Object[], Long>() {\n                    @Override\n                    public Long apply(Object[] a) throws Exception {\n                        return (Long)a[0];\n                    }\n                }\n            )\n        ;\n    }\n","date":"2019-08-28 17:48:16","endLine":39,"groupId":"75","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"createPublisher","params":"(longelements)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/a7/76e28e71f79b4a6753ec978883e8969d0718a3.src","preCode":"    public Publisher<Long> createPublisher(long elements) {\n        return\n            Flowable.combineLatest(\n                new Function<Object[], Long>() {\n                    @Override\n                    public Long apply(Object[] a) throws Exception {\n                        return (Long)a[0];\n                    }\n                },\n                Flowable.just(1L),\n                Flowable.fromIterable(iterate(elements))\n            )\n        ;\n    }\n","realPath":"src/test/java/io/reactivex/rxjava3/tck/CombineLatestArrayTckTest.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":27,"status":"M"},{"authorDate":"2019-08-28 17:48:16","commitOrder":2,"curCode":"    public Publisher<Long> createPublisher(long elements) {\n        return\n            Flowable.combineLatestDelayError(\n                new Publisher[] { Flowable.just(1L), Flowable.fromIterable(iterate(elements)) },\n                new Function<Object[], Long>() {\n                    @Override\n                    public Long apply(Object[] a) throws Exception {\n                        return (Long)a[0];\n                    }\n                }\n            )\n        ;\n    }\n","date":"2019-08-28 17:48:16","endLine":39,"groupId":"75","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"createPublisher","params":"(longelements)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/dc/b5a94fe6cfcab58b238e3f3b6e5535fe462f5b.src","preCode":"    public Publisher<Long> createPublisher(long elements) {\n        return\n            Flowable.combineLatestDelayError(\n                new Function<Object[], Long>() {\n                    @Override\n                    public Long apply(Object[] a) throws Exception {\n                        return (Long)a[0];\n                    }\n                },\n                Flowable.just(1L),\n                Flowable.fromIterable(iterate(elements))\n            )\n        ;\n    }\n","realPath":"src/test/java/io/reactivex/rxjava3/tck/CombineLatestArrayDelayErrorTckTest.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":27,"status":"M"}],"commitId":"faf6392ec86299c72d3c51c97c3a5d5bd717783d","commitMessage":"@@@3.x: Remove vararg overloads for combineLatest in Observable + Flowable (#6635)\n\nFix tests.","date":"2019-08-28 17:48:16","modifiedFileCount":"8","status":"M","submitter":"Niklas Baudy"},{"authorTime":"2019-08-28 17:48:16","codes":[{"authorDate":"2019-08-28 23:18:05","commitOrder":3,"curCode":"    public Publisher<Long> createPublisher(long elements) {\n        return\n            Flowable.combineLatestArray(\n                new Publisher[] { Flowable.just(1L), Flowable.fromIterable(iterate(elements)) },\n                new Function<Object[], Long>() {\n                    @Override\n                    public Long apply(Object[] a) throws Exception {\n                        return (Long)a[0];\n                    }\n                }\n            )\n        ;\n    }\n","date":"2019-08-28 23:18:05","endLine":39,"groupId":"75","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"createPublisher","params":"(longelements)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/2c/ebfe655b092aefdee9d49ca4e88631b39f2896.src","preCode":"    public Publisher<Long> createPublisher(long elements) {\n        return\n            Flowable.combineLatest(\n                new Publisher[] { Flowable.just(1L), Flowable.fromIterable(iterate(elements)) },\n                new Function<Object[], Long>() {\n                    @Override\n                    public Long apply(Object[] a) throws Exception {\n                        return (Long)a[0];\n                    }\n                }\n            )\n        ;\n    }\n","realPath":"src/test/java/io/reactivex/rxjava3/tck/CombineLatestArrayTckTest.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":27,"status":"M"},{"authorDate":"2019-08-28 17:48:16","commitOrder":3,"curCode":"    public Publisher<Long> createPublisher(long elements) {\n        return\n            Flowable.combineLatestDelayError(\n                new Publisher[] { Flowable.just(1L), Flowable.fromIterable(iterate(elements)) },\n                new Function<Object[], Long>() {\n                    @Override\n                    public Long apply(Object[] a) throws Exception {\n                        return (Long)a[0];\n                    }\n                }\n            )\n        ;\n    }\n","date":"2019-08-28 17:48:16","endLine":39,"groupId":"75","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"createPublisher","params":"(longelements)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/dc/b5a94fe6cfcab58b238e3f3b6e5535fe462f5b.src","preCode":"    public Publisher<Long> createPublisher(long elements) {\n        return\n            Flowable.combineLatestDelayError(\n                new Publisher[] { Flowable.just(1L), Flowable.fromIterable(iterate(elements)) },\n                new Function<Object[], Long>() {\n                    @Override\n                    public Long apply(Object[] a) throws Exception {\n                        return (Long)a[0];\n                    }\n                }\n            )\n        ;\n    }\n","realPath":"src/test/java/io/reactivex/rxjava3/tck/CombineLatestArrayDelayErrorTckTest.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":27,"status":"N"}],"commitId":"c9204b57ba55c9f40951615eed00a88b9f3cf734","commitMessage":"@@@3.x: Rename combineLatest methods that take an array to combineLatestArray (#6640)\n\n","date":"2019-08-28 23:18:05","modifiedFileCount":"5","status":"M","submitter":"Niklas Baudy"},{"authorTime":"2020-01-13 20:17:35","codes":[{"authorDate":"2019-08-28 23:18:05","commitOrder":4,"curCode":"    public Publisher<Long> createPublisher(long elements) {\n        return\n            Flowable.combineLatestArray(\n                new Publisher[] { Flowable.just(1L), Flowable.fromIterable(iterate(elements)) },\n                new Function<Object[], Long>() {\n                    @Override\n                    public Long apply(Object[] a) throws Exception {\n                        return (Long)a[0];\n                    }\n                }\n            )\n        ;\n    }\n","date":"2019-08-28 23:18:05","endLine":39,"groupId":"1054","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"createPublisher","params":"(longelements)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/2c/ebfe655b092aefdee9d49ca4e88631b39f2896.src","preCode":"    public Publisher<Long> createPublisher(long elements) {\n        return\n            Flowable.combineLatestArray(\n                new Publisher[] { Flowable.just(1L), Flowable.fromIterable(iterate(elements)) },\n                new Function<Object[], Long>() {\n                    @Override\n                    public Long apply(Object[] a) throws Exception {\n                        return (Long)a[0];\n                    }\n                }\n            )\n        ;\n    }\n","realPath":"src/test/java/io/reactivex/rxjava3/tck/CombineLatestArrayTckTest.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":27,"status":"N"},{"authorDate":"2020-01-13 20:17:35","commitOrder":4,"curCode":"    public Publisher<Long> createPublisher(long elements) {\n        return\n            Flowable.combineLatestArrayDelayError(\n                new Publisher[] { Flowable.just(1L), Flowable.fromIterable(iterate(elements)) },\n                new Function<Object[], Long>() {\n                    @Override\n                    public Long apply(Object[] a) throws Exception {\n                        return (Long)a[0];\n                    }\n                }\n            )\n        ;\n    }\n","date":"2020-01-13 20:17:35","endLine":39,"groupId":"1054","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"createPublisher","params":"(longelements)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/ec/7005ea4174d0b1de718370acb6a081f131f958.src","preCode":"    public Publisher<Long> createPublisher(long elements) {\n        return\n            Flowable.combineLatestDelayError(\n                new Publisher[] { Flowable.just(1L), Flowable.fromIterable(iterate(elements)) },\n                new Function<Object[], Long>() {\n                    @Override\n                    public Long apply(Object[] a) throws Exception {\n                        return (Long)a[0];\n                    }\n                }\n            )\n        ;\n    }\n","realPath":"src/test/java/io/reactivex/rxjava3/tck/CombineLatestArrayDelayErrorTckTest.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":27,"status":"M"}],"commitId":"4dd4a65fa0144c148f19f5632ae6915b3c7be315","commitMessage":"@@@3.x: Rename to combineLatestArrayDelayError (#6838)\n\n","date":"2020-01-13 20:17:35","modifiedFileCount":"5","status":"M","submitter":"David Karnok"}]
