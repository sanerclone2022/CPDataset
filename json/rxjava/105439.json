[{"authorTime":"2019-08-16 20:51:17","codes":[{"authorDate":"2019-08-16 20:51:17","commitOrder":1,"curCode":"    public void concatWithList() {\n        Observer<String> observer = TestHelper.mockObserver();\n\n        final String[] o = { \"1\", \"3\", \"5\", \"7\" };\n        final String[] e = { \"2\", \"4\", \"6\" };\n\n        final Observable<String> odds = Observable.fromArray(o);\n        final Observable<String> even = Observable.fromArray(e);\n        final List<Observable<String>> list = new ArrayList<Observable<String>>();\n        list.add(odds);\n        list.add(even);\n        Observable<String> concat = Observable.concat(Observable.fromIterable(list));\n        concat.subscribe(observer);\n\n        verify(observer, times(7)).onNext(anyString());\n    }\n","date":"2019-08-16 20:51:17","endLine":73,"groupId":"5600","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"concatWithList","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/6f/436a56ccf266c9cc57c65783686ad7824a74fd.src","preCode":"    public void concatWithList() {\n        Observer<String> observer = TestHelper.mockObserver();\n\n        final String[] o = { \"1\", \"3\", \"5\", \"7\" };\n        final String[] e = { \"2\", \"4\", \"6\" };\n\n        final Observable<String> odds = Observable.fromArray(o);\n        final Observable<String> even = Observable.fromArray(e);\n        final List<Observable<String>> list = new ArrayList<Observable<String>>();\n        list.add(odds);\n        list.add(even);\n        Observable<String> concat = Observable.concat(Observable.fromIterable(list));\n        concat.subscribe(observer);\n\n        verify(observer, times(7)).onNext(anyString());\n    }\n","realPath":"src/test/java/io/reactivex/rxjava3/internal/operators/observable/ObservableConcatTest.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":58,"status":"B"},{"authorDate":"2019-08-16 20:51:17","commitOrder":1,"curCode":"    public void concatWithList() {\n        Subscriber<String> subscriber = TestHelper.mockSubscriber();\n\n        final String[] o = { \"1\", \"3\", \"5\", \"7\" };\n        final String[] e = { \"2\", \"4\", \"6\" };\n\n        final Flowable<String> odds = Flowable.fromArray(o);\n        final Flowable<String> even = Flowable.fromArray(e);\n        final List<Flowable<String>> list = new ArrayList<Flowable<String>>();\n        list.add(odds);\n        list.add(even);\n        Flowable<String> concat = Flowable.concat(Flowable.fromIterable(list));\n        concat.subscribe(subscriber);\n\n        verify(subscriber, times(7)).onNext(anyString());\n    }\n","date":"2019-08-16 20:51:17","endLine":75,"groupId":"5600","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"concatWithList","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/36/8f5cd043ac8f418600f4d33396a8d5cfa0943d.src","preCode":"    public void concatWithList() {\n        Subscriber<String> subscriber = TestHelper.mockSubscriber();\n\n        final String[] o = { \"1\", \"3\", \"5\", \"7\" };\n        final String[] e = { \"2\", \"4\", \"6\" };\n\n        final Flowable<String> odds = Flowable.fromArray(o);\n        final Flowable<String> even = Flowable.fromArray(e);\n        final List<Flowable<String>> list = new ArrayList<Flowable<String>>();\n        list.add(odds);\n        list.add(even);\n        Flowable<String> concat = Flowable.concat(Flowable.fromIterable(list));\n        concat.subscribe(subscriber);\n\n        verify(subscriber, times(7)).onNext(anyString());\n    }\n","realPath":"src/test/java/io/reactivex/rxjava3/internal/operators/flowable/FlowableConcatTest.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":60,"status":"B"}],"commitId":"a1693ecc9215027a7a3eae75272979ebb4d79a27","commitMessage":"@@@3.x: Refactor to io.reactivex.rxjava3.** (#6621)\n\n* 3.x: Refactor to io.reactivex.rxjava3.**\n\n* fix javadoc cleanup gradle\n\n* javadoc gradle again\n\n* Fix package location in text\n","date":"2019-08-16 20:51:17","modifiedFileCount":"0","status":"B","submitter":"David Karnok"},{"authorTime":"2019-12-22 18:39:23","codes":[{"authorDate":"2019-08-16 20:51:17","commitOrder":2,"curCode":"    public void concatWithList() {\n        Observer<String> observer = TestHelper.mockObserver();\n\n        final String[] o = { \"1\", \"3\", \"5\", \"7\" };\n        final String[] e = { \"2\", \"4\", \"6\" };\n\n        final Observable<String> odds = Observable.fromArray(o);\n        final Observable<String> even = Observable.fromArray(e);\n        final List<Observable<String>> list = new ArrayList<Observable<String>>();\n        list.add(odds);\n        list.add(even);\n        Observable<String> concat = Observable.concat(Observable.fromIterable(list));\n        concat.subscribe(observer);\n\n        verify(observer, times(7)).onNext(anyString());\n    }\n","date":"2019-08-16 20:51:17","endLine":73,"groupId":"5600","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"concatWithList","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/6f/436a56ccf266c9cc57c65783686ad7824a74fd.src","preCode":"    public void concatWithList() {\n        Observer<String> observer = TestHelper.mockObserver();\n\n        final String[] o = { \"1\", \"3\", \"5\", \"7\" };\n        final String[] e = { \"2\", \"4\", \"6\" };\n\n        final Observable<String> odds = Observable.fromArray(o);\n        final Observable<String> even = Observable.fromArray(e);\n        final List<Observable<String>> list = new ArrayList<Observable<String>>();\n        list.add(odds);\n        list.add(even);\n        Observable<String> concat = Observable.concat(Observable.fromIterable(list));\n        concat.subscribe(observer);\n\n        verify(observer, times(7)).onNext(anyString());\n    }\n","realPath":"src/test/java/io/reactivex/rxjava3/internal/operators/observable/ObservableConcatTest.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":58,"status":"N"},{"authorDate":"2019-12-22 18:39:23","commitOrder":2,"curCode":"    public void concatWithList() {\n        Subscriber<String> subscriber = TestHelper.mockSubscriber();\n\n        final String[] o = { \"1\", \"3\", \"5\", \"7\" };\n        final String[] e = { \"2\", \"4\", \"6\" };\n\n        final Flowable<String> odds = Flowable.fromArray(o);\n        final Flowable<String> even = Flowable.fromArray(e);\n        final List<Flowable<String>> list = new ArrayList<>();\n        list.add(odds);\n        list.add(even);\n        Flowable<String> concat = Flowable.concat(Flowable.fromIterable(list));\n        concat.subscribe(subscriber);\n\n        verify(subscriber, times(7)).onNext(anyString());\n    }\n","date":"2019-12-22 18:39:23","endLine":75,"groupId":"11701","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"concatWithList","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/67/451d6097833e4984eb0cf4dd726ac9ebc97cfa.src","preCode":"    public void concatWithList() {\n        Subscriber<String> subscriber = TestHelper.mockSubscriber();\n\n        final String[] o = { \"1\", \"3\", \"5\", \"7\" };\n        final String[] e = { \"2\", \"4\", \"6\" };\n\n        final Flowable<String> odds = Flowable.fromArray(o);\n        final Flowable<String> even = Flowable.fromArray(e);\n        final List<Flowable<String>> list = new ArrayList<Flowable<String>>();\n        list.add(odds);\n        list.add(even);\n        Flowable<String> concat = Flowable.concat(Flowable.fromIterable(list));\n        concat.subscribe(subscriber);\n\n        verify(subscriber, times(7)).onNext(anyString());\n    }\n","realPath":"src/test/java/io/reactivex/rxjava3/internal/operators/flowable/FlowableConcatTest.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":60,"status":"M"}],"commitId":"e162d664d86639b97c214054aca346fc2ba37e33","commitMessage":"@@@diamond operators in unit tests.  flowable package (#6787)\n\n","date":"2019-12-22 18:39:23","modifiedFileCount":"111","status":"M","submitter":"Dmitry Volkov"},{"authorTime":"2019-12-22 18:39:23","codes":[{"authorDate":"2019-12-22 18:59:44","commitOrder":3,"curCode":"    public void concatWithList() {\n        Observer<String> observer = TestHelper.mockObserver();\n\n        final String[] o = { \"1\", \"3\", \"5\", \"7\" };\n        final String[] e = { \"2\", \"4\", \"6\" };\n\n        final Observable<String> odds = Observable.fromArray(o);\n        final Observable<String> even = Observable.fromArray(e);\n        final List<Observable<String>> list = new ArrayList<>();\n        list.add(odds);\n        list.add(even);\n        Observable<String> concat = Observable.concat(Observable.fromIterable(list));\n        concat.subscribe(observer);\n\n        verify(observer, times(7)).onNext(anyString());\n    }\n","date":"2019-12-22 18:59:44","endLine":73,"groupId":"105439","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"concatWithList","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/c5/b00fdf7c961a4606a8134779a8f75268955a19.src","preCode":"    public void concatWithList() {\n        Observer<String> observer = TestHelper.mockObserver();\n\n        final String[] o = { \"1\", \"3\", \"5\", \"7\" };\n        final String[] e = { \"2\", \"4\", \"6\" };\n\n        final Observable<String> odds = Observable.fromArray(o);\n        final Observable<String> even = Observable.fromArray(e);\n        final List<Observable<String>> list = new ArrayList<Observable<String>>();\n        list.add(odds);\n        list.add(even);\n        Observable<String> concat = Observable.concat(Observable.fromIterable(list));\n        concat.subscribe(observer);\n\n        verify(observer, times(7)).onNext(anyString());\n    }\n","realPath":"src/test/java/io/reactivex/rxjava3/internal/operators/observable/ObservableConcatTest.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":58,"status":"M"},{"authorDate":"2019-12-22 18:39:23","commitOrder":3,"curCode":"    public void concatWithList() {\n        Subscriber<String> subscriber = TestHelper.mockSubscriber();\n\n        final String[] o = { \"1\", \"3\", \"5\", \"7\" };\n        final String[] e = { \"2\", \"4\", \"6\" };\n\n        final Flowable<String> odds = Flowable.fromArray(o);\n        final Flowable<String> even = Flowable.fromArray(e);\n        final List<Flowable<String>> list = new ArrayList<>();\n        list.add(odds);\n        list.add(even);\n        Flowable<String> concat = Flowable.concat(Flowable.fromIterable(list));\n        concat.subscribe(subscriber);\n\n        verify(subscriber, times(7)).onNext(anyString());\n    }\n","date":"2019-12-22 18:39:23","endLine":75,"groupId":"105439","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"concatWithList","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/67/451d6097833e4984eb0cf4dd726ac9ebc97cfa.src","preCode":"    public void concatWithList() {\n        Subscriber<String> subscriber = TestHelper.mockSubscriber();\n\n        final String[] o = { \"1\", \"3\", \"5\", \"7\" };\n        final String[] e = { \"2\", \"4\", \"6\" };\n\n        final Flowable<String> odds = Flowable.fromArray(o);\n        final Flowable<String> even = Flowable.fromArray(e);\n        final List<Flowable<String>> list = new ArrayList<>();\n        list.add(odds);\n        list.add(even);\n        Flowable<String> concat = Flowable.concat(Flowable.fromIterable(list));\n        concat.subscribe(subscriber);\n\n        verify(subscriber, times(7)).onNext(anyString());\n    }\n","realPath":"src/test/java/io/reactivex/rxjava3/internal/operators/flowable/FlowableConcatTest.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":60,"status":"N"}],"commitId":"d6d698213b6c4091f4d5a0fb47f0922d0d0618e3","commitMessage":"@@@diamond operators in unit tests.  observable package (#6786)\n\n","date":"2019-12-22 18:59:44","modifiedFileCount":"95","status":"M","submitter":"Dmitry Volkov"}]
