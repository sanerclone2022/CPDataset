[{"authorTime":"2019-08-16 20:51:17","codes":[{"authorDate":"2019-08-16 20:51:17","commitOrder":1,"curCode":"    public void amb3() {\n        Observable<String> observable1 = createObservable(new String[] {\n                \"1\" }, 2000, null);\n        Observable<String> observable2 = createObservable(new String[] {},\n                1000, null);\n        Observable<String> observable3 = createObservable(new String[] {\n                \"3\" }, 3000, null);\n\n        @SuppressWarnings(\"unchecked\")\n        Observable<String> o = Observable.ambArray(observable1,\n                observable2, observable3);\n\n        Observer<String> observer = TestHelper.mockObserver();\n        o.subscribe(observer);\n\n        scheduler.advanceTimeBy(100000, TimeUnit.MILLISECONDS);\n        InOrder inOrder = inOrder(observer);\n        inOrder.verify(observer, times(1)).onComplete();\n        inOrder.verifyNoMoreInteractions();\n    }\n","date":"2019-08-16 20:51:17","endLine":162,"groupId":"2281","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"amb3","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/29/287a77721104194f68650f18c3522a2a477c60.src","preCode":"    public void amb3() {\n        Observable<String> observable1 = createObservable(new String[] {\n                \"1\" }, 2000, null);\n        Observable<String> observable2 = createObservable(new String[] {},\n                1000, null);\n        Observable<String> observable3 = createObservable(new String[] {\n                \"3\" }, 3000, null);\n\n        @SuppressWarnings(\"unchecked\")\n        Observable<String> o = Observable.ambArray(observable1,\n                observable2, observable3);\n\n        Observer<String> observer = TestHelper.mockObserver();\n        o.subscribe(observer);\n\n        scheduler.advanceTimeBy(100000, TimeUnit.MILLISECONDS);\n        InOrder inOrder = inOrder(observer);\n        inOrder.verify(observer, times(1)).onComplete();\n        inOrder.verifyNoMoreInteractions();\n    }\n","realPath":"src/test/java/io/reactivex/rxjava3/internal/operators/observable/ObservableAmbTest.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":143,"status":"B"},{"authorDate":"2019-08-16 20:51:17","commitOrder":1,"curCode":"    public void amb3() {\n        Flowable<String> flowable1 = createFlowable(new String[] {\n                \"1\" }, 2000, null);\n        Flowable<String> flowable2 = createFlowable(new String[] {},\n                1000, null);\n        Flowable<String> flowable3 = createFlowable(new String[] {\n                \"3\" }, 3000, null);\n\n        @SuppressWarnings(\"unchecked\")\n        Flowable<String> f = Flowable.ambArray(flowable1,\n                flowable2, flowable3);\n\n        Subscriber<String> subscriber = TestHelper.mockSubscriber();\n        f.subscribe(subscriber);\n\n        scheduler.advanceTimeBy(100000, TimeUnit.MILLISECONDS);\n        InOrder inOrder = inOrder(subscriber);\n        inOrder.verify(subscriber, times(1)).onComplete();\n        inOrder.verifyNoMoreInteractions();\n    }\n","date":"2019-08-16 20:51:17","endLine":172,"groupId":"2424","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"amb3","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/14/9187b573c82b82c77b525bccb9f4d7dab8cab3.src","preCode":"    public void amb3() {\n        Flowable<String> flowable1 = createFlowable(new String[] {\n                \"1\" }, 2000, null);\n        Flowable<String> flowable2 = createFlowable(new String[] {},\n                1000, null);\n        Flowable<String> flowable3 = createFlowable(new String[] {\n                \"3\" }, 3000, null);\n\n        @SuppressWarnings(\"unchecked\")\n        Flowable<String> f = Flowable.ambArray(flowable1,\n                flowable2, flowable3);\n\n        Subscriber<String> subscriber = TestHelper.mockSubscriber();\n        f.subscribe(subscriber);\n\n        scheduler.advanceTimeBy(100000, TimeUnit.MILLISECONDS);\n        InOrder inOrder = inOrder(subscriber);\n        inOrder.verify(subscriber, times(1)).onComplete();\n        inOrder.verifyNoMoreInteractions();\n    }\n","realPath":"src/test/java/io/reactivex/rxjava3/internal/operators/flowable/FlowableAmbTest.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":153,"status":"B"}],"commitId":"a1693ecc9215027a7a3eae75272979ebb4d79a27","commitMessage":"@@@3.x: Refactor to io.reactivex.rxjava3.** (#6621)\n\n* 3.x: Refactor to io.reactivex.rxjava3.**\n\n* fix javadoc cleanup gradle\n\n* javadoc gradle again\n\n* Fix package location in text\n","date":"2019-08-16 20:51:17","modifiedFileCount":"0","status":"B","submitter":"David Karnok"},{"authorTime":"2019-12-23 05:05:32","codes":[{"authorDate":"2019-08-16 20:51:17","commitOrder":2,"curCode":"    public void amb3() {\n        Observable<String> observable1 = createObservable(new String[] {\n                \"1\" }, 2000, null);\n        Observable<String> observable2 = createObservable(new String[] {},\n                1000, null);\n        Observable<String> observable3 = createObservable(new String[] {\n                \"3\" }, 3000, null);\n\n        @SuppressWarnings(\"unchecked\")\n        Observable<String> o = Observable.ambArray(observable1,\n                observable2, observable3);\n\n        Observer<String> observer = TestHelper.mockObserver();\n        o.subscribe(observer);\n\n        scheduler.advanceTimeBy(100000, TimeUnit.MILLISECONDS);\n        InOrder inOrder = inOrder(observer);\n        inOrder.verify(observer, times(1)).onComplete();\n        inOrder.verifyNoMoreInteractions();\n    }\n","date":"2019-08-16 20:51:17","endLine":162,"groupId":"2281","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"amb3","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/29/287a77721104194f68650f18c3522a2a477c60.src","preCode":"    public void amb3() {\n        Observable<String> observable1 = createObservable(new String[] {\n                \"1\" }, 2000, null);\n        Observable<String> observable2 = createObservable(new String[] {},\n                1000, null);\n        Observable<String> observable3 = createObservable(new String[] {\n                \"3\" }, 3000, null);\n\n        @SuppressWarnings(\"unchecked\")\n        Observable<String> o = Observable.ambArray(observable1,\n                observable2, observable3);\n\n        Observer<String> observer = TestHelper.mockObserver();\n        o.subscribe(observer);\n\n        scheduler.advanceTimeBy(100000, TimeUnit.MILLISECONDS);\n        InOrder inOrder = inOrder(observer);\n        inOrder.verify(observer, times(1)).onComplete();\n        inOrder.verifyNoMoreInteractions();\n    }\n","realPath":"src/test/java/io/reactivex/rxjava3/internal/operators/observable/ObservableAmbTest.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":143,"status":"N"},{"authorDate":"2019-12-23 05:05:32","commitOrder":2,"curCode":"    public void amb3() {\n        Flowable<String> flowable1 = createFlowable(new String[] {\n                \"1\" }, 2000, null);\n        Flowable<String> flowable2 = createFlowable(new String[] {},\n                1000, null);\n        Flowable<String> flowable3 = createFlowable(new String[] {\n                \"3\" }, 3000, null);\n\n        Flowable<String> f = Flowable.ambArray(flowable1,\n                flowable2, flowable3);\n\n        Subscriber<String> subscriber = TestHelper.mockSubscriber();\n        f.subscribe(subscriber);\n\n        scheduler.advanceTimeBy(100000, TimeUnit.MILLISECONDS);\n        InOrder inOrder = inOrder(subscriber);\n        inOrder.verify(subscriber, times(1)).onComplete();\n        inOrder.verifyNoMoreInteractions();\n    }\n","date":"2019-12-23 05:05:32","endLine":169,"groupId":"12712","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"amb3","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/06/57a15474176e17667499438484ae81801b6f17.src","preCode":"    public void amb3() {\n        Flowable<String> flowable1 = createFlowable(new String[] {\n                \"1\" }, 2000, null);\n        Flowable<String> flowable2 = createFlowable(new String[] {},\n                1000, null);\n        Flowable<String> flowable3 = createFlowable(new String[] {\n                \"3\" }, 3000, null);\n\n        @SuppressWarnings(\"unchecked\")\n        Flowable<String> f = Flowable.ambArray(flowable1,\n                flowable2, flowable3);\n\n        Subscriber<String> subscriber = TestHelper.mockSubscriber();\n        f.subscribe(subscriber);\n\n        scheduler.advanceTimeBy(100000, TimeUnit.MILLISECONDS);\n        InOrder inOrder = inOrder(subscriber);\n        inOrder.verify(subscriber, times(1)).onComplete();\n        inOrder.verifyNoMoreInteractions();\n    }\n","realPath":"src/test/java/io/reactivex/rxjava3/internal/operators/flowable/FlowableAmbTest.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":151,"status":"M"}],"commitId":"0b92c6f0464e4b1edcd92cfbb72270f28d820aa8","commitMessage":"@@@3.x: Remove now unnecessary unchecked warning suppressions (#6790)\n\n","date":"2019-12-23 05:05:32","modifiedFileCount":"73","status":"M","submitter":"David Karnok"},{"authorTime":"2019-12-23 05:05:32","codes":[{"authorDate":"2019-12-24 17:18:06","commitOrder":3,"curCode":"    public void amb3() {\n        Observable<String> observable1 = createObservable(new String[] {\n                \"1\" }, 2000, null);\n        Observable<String> observable2 = createObservable(new String[] {},\n                1000, null);\n        Observable<String> observable3 = createObservable(new String[] {\n                \"3\" }, 3000, null);\n\n        Observable<String> o = Observable.ambArray(observable1,\n                observable2, observable3);\n\n        Observer<String> observer = TestHelper.mockObserver();\n        o.subscribe(observer);\n\n        scheduler.advanceTimeBy(100000, TimeUnit.MILLISECONDS);\n        InOrder inOrder = inOrder(observer);\n        inOrder.verify(observer, times(1)).onComplete();\n        inOrder.verifyNoMoreInteractions();\n    }\n","date":"2019-12-24 17:18:06","endLine":159,"groupId":"102288","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"amb3","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/49/48f1a13d1973711cfd1a1ef4e995c0fb8399c2.src","preCode":"    public void amb3() {\n        Observable<String> observable1 = createObservable(new String[] {\n                \"1\" }, 2000, null);\n        Observable<String> observable2 = createObservable(new String[] {},\n                1000, null);\n        Observable<String> observable3 = createObservable(new String[] {\n                \"3\" }, 3000, null);\n\n        @SuppressWarnings(\"unchecked\")\n        Observable<String> o = Observable.ambArray(observable1,\n                observable2, observable3);\n\n        Observer<String> observer = TestHelper.mockObserver();\n        o.subscribe(observer);\n\n        scheduler.advanceTimeBy(100000, TimeUnit.MILLISECONDS);\n        InOrder inOrder = inOrder(observer);\n        inOrder.verify(observer, times(1)).onComplete();\n        inOrder.verifyNoMoreInteractions();\n    }\n","realPath":"src/test/java/io/reactivex/rxjava3/internal/operators/observable/ObservableAmbTest.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":141,"status":"M"},{"authorDate":"2019-12-23 05:05:32","commitOrder":3,"curCode":"    public void amb3() {\n        Flowable<String> flowable1 = createFlowable(new String[] {\n                \"1\" }, 2000, null);\n        Flowable<String> flowable2 = createFlowable(new String[] {},\n                1000, null);\n        Flowable<String> flowable3 = createFlowable(new String[] {\n                \"3\" }, 3000, null);\n\n        Flowable<String> f = Flowable.ambArray(flowable1,\n                flowable2, flowable3);\n\n        Subscriber<String> subscriber = TestHelper.mockSubscriber();\n        f.subscribe(subscriber);\n\n        scheduler.advanceTimeBy(100000, TimeUnit.MILLISECONDS);\n        InOrder inOrder = inOrder(subscriber);\n        inOrder.verify(subscriber, times(1)).onComplete();\n        inOrder.verifyNoMoreInteractions();\n    }\n","date":"2019-12-23 05:05:32","endLine":169,"groupId":"102288","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"amb3","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/06/57a15474176e17667499438484ae81801b6f17.src","preCode":"    public void amb3() {\n        Flowable<String> flowable1 = createFlowable(new String[] {\n                \"1\" }, 2000, null);\n        Flowable<String> flowable2 = createFlowable(new String[] {},\n                1000, null);\n        Flowable<String> flowable3 = createFlowable(new String[] {\n                \"3\" }, 3000, null);\n\n        Flowable<String> f = Flowable.ambArray(flowable1,\n                flowable2, flowable3);\n\n        Subscriber<String> subscriber = TestHelper.mockSubscriber();\n        f.subscribe(subscriber);\n\n        scheduler.advanceTimeBy(100000, TimeUnit.MILLISECONDS);\n        InOrder inOrder = inOrder(subscriber);\n        inOrder.verify(subscriber, times(1)).onComplete();\n        inOrder.verifyNoMoreInteractions();\n    }\n","realPath":"src/test/java/io/reactivex/rxjava3/internal/operators/flowable/FlowableAmbTest.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":151,"status":"N"}],"commitId":"b57169babb184d0adc2fa28cf0425c4f0c1f8555","commitMessage":"@@@3.x: Add NonNull & SafeVarargs annotations + validator (#6791)\n\n","date":"2019-12-24 17:18:06","modifiedFileCount":"28","status":"M","submitter":"David Karnok"}]
