[{"authorTime":"2019-08-16 20:51:17","codes":[{"authorDate":"2019-08-16 20:51:17","commitOrder":1,"curCode":"    protected void subscribeActual(Observer<? super T> observer) {\n        AsyncDisposable<T> as = new AsyncDisposable<T>(observer, this);\n        observer.onSubscribe(as);\n        if (add(as)) {\n            if (as.isDisposed()) {\n                remove(as);\n            }\n        } else {\n            Throwable ex = error;\n            if (ex != null) {\n                observer.onError(ex);\n            } else {\n                T v = value;\n                if (v != null) {\n                    as.complete(v);\n                } else {\n                    as.onComplete();\n                }\n            }\n        }\n    }\n","date":"2019-08-16 20:51:17","endLine":235,"groupId":"5879","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"subscribeActual","params":"(Observer<?superT>observer)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/51/90d7501379fa7edc875c4f5f61465b02d883e3.src","preCode":"    protected void subscribeActual(Observer<? super T> observer) {\n        AsyncDisposable<T> as = new AsyncDisposable<T>(observer, this);\n        observer.onSubscribe(as);\n        if (add(as)) {\n            if (as.isDisposed()) {\n                remove(as);\n            }\n        } else {\n            Throwable ex = error;\n            if (ex != null) {\n                observer.onError(ex);\n            } else {\n                T v = value;\n                if (v != null) {\n                    as.complete(v);\n                } else {\n                    as.onComplete();\n                }\n            }\n        }\n    }\n","realPath":"src/main/java/io/reactivex/rxjava3/subjects/AsyncSubject.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":215,"status":"B"},{"authorDate":"2019-08-16 20:51:17","commitOrder":1,"curCode":"    protected void subscribeActual(Subscriber<? super T> s) {\n        AsyncSubscription<T> as = new AsyncSubscription<T>(s, this);\n        s.onSubscribe(as);\n        if (add(as)) {\n            if (as.isCancelled()) {\n                remove(as);\n            }\n        } else {\n            Throwable ex = error;\n            if (ex != null) {\n                s.onError(ex);\n            } else {\n                T v = value;\n                if (v != null) {\n                    as.complete(v);\n                } else {\n                    as.onComplete();\n                }\n            }\n        }\n    }\n","date":"2019-08-16 20:51:17","endLine":247,"groupId":"9524","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"subscribeActual","params":"(Subscriber<?superT>s)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/7d/5e84a8f2863a90c204bb05b456dc5d6973bf87.src","preCode":"    protected void subscribeActual(Subscriber<? super T> s) {\n        AsyncSubscription<T> as = new AsyncSubscription<T>(s, this);\n        s.onSubscribe(as);\n        if (add(as)) {\n            if (as.isCancelled()) {\n                remove(as);\n            }\n        } else {\n            Throwable ex = error;\n            if (ex != null) {\n                s.onError(ex);\n            } else {\n                T v = value;\n                if (v != null) {\n                    as.complete(v);\n                } else {\n                    as.onComplete();\n                }\n            }\n        }\n    }\n","realPath":"src/main/java/io/reactivex/rxjava3/processors/AsyncProcessor.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":227,"status":"B"}],"commitId":"a1693ecc9215027a7a3eae75272979ebb4d79a27","commitMessage":"@@@3.x: Refactor to io.reactivex.rxjava3.** (#6621)\n\n* 3.x: Refactor to io.reactivex.rxjava3.**\n\n* fix javadoc cleanup gradle\n\n* javadoc gradle again\n\n* Fix package location in text\n","date":"2019-08-16 20:51:17","modifiedFileCount":"0","status":"B","submitter":"David Karnok"},{"authorTime":"2019-12-26 06:52:13","codes":[{"authorDate":"2019-12-26 06:52:13","commitOrder":2,"curCode":"    protected void subscribeActual(Observer<? super T> observer) {\n        AsyncDisposable<T> as = new AsyncDisposable<>(observer, this);\n        observer.onSubscribe(as);\n        if (add(as)) {\n            if (as.isDisposed()) {\n                remove(as);\n            }\n        } else {\n            Throwable ex = error;\n            if (ex != null) {\n                observer.onError(ex);\n            } else {\n                T v = value;\n                if (v != null) {\n                    as.complete(v);\n                } else {\n                    as.onComplete();\n                }\n            }\n        }\n    }\n","date":"2019-12-26 06:52:13","endLine":239,"groupId":"5879","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"subscribeActual","params":"(Observer<?superT>observer)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/cf/eafcd4a8d222933af9faf8b9c4629d6e1274b3.src","preCode":"    protected void subscribeActual(Observer<? super T> observer) {\n        AsyncDisposable<T> as = new AsyncDisposable<T>(observer, this);\n        observer.onSubscribe(as);\n        if (add(as)) {\n            if (as.isDisposed()) {\n                remove(as);\n            }\n        } else {\n            Throwable ex = error;\n            if (ex != null) {\n                observer.onError(ex);\n            } else {\n                T v = value;\n                if (v != null) {\n                    as.complete(v);\n                } else {\n                    as.onComplete();\n                }\n            }\n        }\n    }\n","realPath":"src/main/java/io/reactivex/rxjava3/subjects/AsyncSubject.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":219,"status":"M"},{"authorDate":"2019-12-26 06:52:13","commitOrder":2,"curCode":"    protected void subscribeActual(Subscriber<? super T> s) {\n        AsyncSubscription<T> as = new AsyncSubscription<>(s, this);\n        s.onSubscribe(as);\n        if (add(as)) {\n            if (as.isCancelled()) {\n                remove(as);\n            }\n        } else {\n            Throwable ex = error;\n            if (ex != null) {\n                s.onError(ex);\n            } else {\n                T v = value;\n                if (v != null) {\n                    as.complete(v);\n                } else {\n                    as.onComplete();\n                }\n            }\n        }\n    }\n","date":"2019-12-26 06:52:13","endLine":251,"groupId":"9524","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"subscribeActual","params":"(Subscriber<?superT>s)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/34/61c146d6a9aaf8dcc71091c198008191a9d31a.src","preCode":"    protected void subscribeActual(Subscriber<? super T> s) {\n        AsyncSubscription<T> as = new AsyncSubscription<T>(s, this);\n        s.onSubscribe(as);\n        if (add(as)) {\n            if (as.isCancelled()) {\n                remove(as);\n            }\n        } else {\n            Throwable ex = error;\n            if (ex != null) {\n                s.onError(ex);\n            } else {\n                T v = value;\n                if (v != null) {\n                    as.complete(v);\n                } else {\n                    as.onComplete();\n                }\n            }\n        }\n    }\n","realPath":"src/main/java/io/reactivex/rxjava3/processors/AsyncProcessor.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":231,"status":"M"}],"commitId":"480889c58d3b762b073ef80229bf27f9d9429dd7","commitMessage":"@@@3.x: Add missing annotations.  fix many diamonds (#6795)\n\n* 3.x: Add missing annotations.  fix many diamonds\n\n* Fix accidental JDK 9 API usage\n\n* Fix NPE in unicast due to null-cleanup\n","date":"2019-12-26 06:52:13","modifiedFileCount":"52","status":"M","submitter":"David Karnok"},{"authorTime":"2020-01-14 15:49:53","codes":[{"authorDate":"2019-12-26 06:52:13","commitOrder":3,"curCode":"    protected void subscribeActual(Observer<? super T> observer) {\n        AsyncDisposable<T> as = new AsyncDisposable<>(observer, this);\n        observer.onSubscribe(as);\n        if (add(as)) {\n            if (as.isDisposed()) {\n                remove(as);\n            }\n        } else {\n            Throwable ex = error;\n            if (ex != null) {\n                observer.onError(ex);\n            } else {\n                T v = value;\n                if (v != null) {\n                    as.complete(v);\n                } else {\n                    as.onComplete();\n                }\n            }\n        }\n    }\n","date":"2019-12-26 06:52:13","endLine":239,"groupId":"5879","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"subscribeActual","params":"(Observer<?superT>observer)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/cf/eafcd4a8d222933af9faf8b9c4629d6e1274b3.src","preCode":"    protected void subscribeActual(Observer<? super T> observer) {\n        AsyncDisposable<T> as = new AsyncDisposable<>(observer, this);\n        observer.onSubscribe(as);\n        if (add(as)) {\n            if (as.isDisposed()) {\n                remove(as);\n            }\n        } else {\n            Throwable ex = error;\n            if (ex != null) {\n                observer.onError(ex);\n            } else {\n                T v = value;\n                if (v != null) {\n                    as.complete(v);\n                } else {\n                    as.onComplete();\n                }\n            }\n        }\n    }\n","realPath":"src/main/java/io/reactivex/rxjava3/subjects/AsyncSubject.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":219,"status":"N"},{"authorDate":"2020-01-14 15:49:53","commitOrder":3,"curCode":"    protected void subscribeActual(@NonNull Subscriber<@NonNull ? super T> s) {\n        AsyncSubscription<T> as = new AsyncSubscription<>(s, this);\n        s.onSubscribe(as);\n        if (add(as)) {\n            if (as.isCancelled()) {\n                remove(as);\n            }\n        } else {\n            Throwable ex = error;\n            if (ex != null) {\n                s.onError(ex);\n            } else {\n                T v = value;\n                if (v != null) {\n                    as.complete(v);\n                } else {\n                    as.onComplete();\n                }\n            }\n        }\n    }\n","date":"2020-01-14 15:49:53","endLine":251,"groupId":"9524","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"subscribeActual","params":"(@NonNullSubscriber<@NonNull?superT>s)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/80/37c67ffefaf0f5ceef8221ff2c4f3b0d263f49.src","preCode":"    protected void subscribeActual(Subscriber<? super T> s) {\n        AsyncSubscription<T> as = new AsyncSubscription<>(s, this);\n        s.onSubscribe(as);\n        if (add(as)) {\n            if (as.isCancelled()) {\n                remove(as);\n            }\n        } else {\n            Throwable ex = error;\n            if (ex != null) {\n                s.onError(ex);\n            } else {\n                T v = value;\n                if (v != null) {\n                    as.complete(v);\n                } else {\n                    as.onComplete();\n                }\n            }\n        }\n    }\n","realPath":"src/main/java/io/reactivex/rxjava3/processors/AsyncProcessor.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":231,"status":"M"}],"commitId":"fb6dab6847d858b22fe6a36558cf3b62dc10627d","commitMessage":"@@@3.x: Add nullability annotations to type arguments (#6840)\n\n","date":"2020-01-14 15:49:53","modifiedFileCount":"75","status":"M","submitter":"David Karnok"},{"authorTime":"2021-07-25 00:35:45","codes":[{"authorDate":"2019-12-26 06:52:13","commitOrder":4,"curCode":"    protected void subscribeActual(Observer<? super T> observer) {\n        AsyncDisposable<T> as = new AsyncDisposable<>(observer, this);\n        observer.onSubscribe(as);\n        if (add(as)) {\n            if (as.isDisposed()) {\n                remove(as);\n            }\n        } else {\n            Throwable ex = error;\n            if (ex != null) {\n                observer.onError(ex);\n            } else {\n                T v = value;\n                if (v != null) {\n                    as.complete(v);\n                } else {\n                    as.onComplete();\n                }\n            }\n        }\n    }\n","date":"2019-12-26 06:52:13","endLine":239,"groupId":"101684","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"subscribeActual","params":"(Observer<?superT>observer)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/cf/eafcd4a8d222933af9faf8b9c4629d6e1274b3.src","preCode":"    protected void subscribeActual(Observer<? super T> observer) {\n        AsyncDisposable<T> as = new AsyncDisposable<>(observer, this);\n        observer.onSubscribe(as);\n        if (add(as)) {\n            if (as.isDisposed()) {\n                remove(as);\n            }\n        } else {\n            Throwable ex = error;\n            if (ex != null) {\n                observer.onError(ex);\n            } else {\n                T v = value;\n                if (v != null) {\n                    as.complete(v);\n                } else {\n                    as.onComplete();\n                }\n            }\n        }\n    }\n","realPath":"src/main/java/io/reactivex/rxjava3/subjects/AsyncSubject.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":219,"status":"N"},{"authorDate":"2021-07-25 00:35:45","commitOrder":4,"curCode":"    protected void subscribeActual(@NonNull Subscriber<? super T> s) {\n        AsyncSubscription<T> as = new AsyncSubscription<>(s, this);\n        s.onSubscribe(as);\n        if (add(as)) {\n            if (as.isCancelled()) {\n                remove(as);\n            }\n        } else {\n            Throwable ex = error;\n            if (ex != null) {\n                s.onError(ex);\n            } else {\n                T v = value;\n                if (v != null) {\n                    as.complete(v);\n                } else {\n                    as.onComplete();\n                }\n            }\n        }\n    }\n","date":"2021-07-25 00:35:45","endLine":252,"groupId":"101684","id":8,"instanceNumber":2,"isCurCommit":1,"methodName":"subscribeActual","params":"(@NonNullSubscriber<?superT>s)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/b2/0c8b23aed80b864ef88f18aae72d9f845db937.src","preCode":"    protected void subscribeActual(@NonNull Subscriber<@NonNull ? super T> s) {\n        AsyncSubscription<T> as = new AsyncSubscription<>(s, this);\n        s.onSubscribe(as);\n        if (add(as)) {\n            if (as.isCancelled()) {\n                remove(as);\n            }\n        } else {\n            Throwable ex = error;\n            if (ex != null) {\n                s.onError(ex);\n            } else {\n                T v = value;\n                if (v != null) {\n                    as.complete(v);\n                } else {\n                    as.onComplete();\n                }\n            }\n        }\n    }\n","realPath":"src/main/java/io/reactivex/rxjava3/processors/AsyncProcessor.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":232,"status":"M"}],"commitId":"40ca8eff4a0d6559258489cf282471f5e3b1a229","commitMessage":"@@@3.x: Move nullability annotations into the type argument declaration (#7303)\n\n* 3.x: Move nullability annotations into the type argument declaration\n\n* Reinforce Function<T.  R> return argument type where R is non-trivial","date":"2021-07-25 00:35:45","modifiedFileCount":"17","status":"M","submitter":"David Karnok"}]
