[{"authorTime":"2019-08-16 20:51:17","codes":[{"authorDate":"2019-08-16 20:51:17","commitOrder":1,"curCode":"    public void concat() {\n        Observer<String> observer = TestHelper.mockObserver();\n\n        final String[] o = { \"1\", \"3\", \"5\", \"7\" };\n        final String[] e = { \"2\", \"4\", \"6\" };\n\n        final Observable<String> odds = Observable.fromArray(o);\n        final Observable<String> even = Observable.fromArray(e);\n\n        Observable<String> concat = Observable.concat(odds, even);\n        concat.subscribe(observer);\n\n        verify(observer, times(7)).onNext(anyString());\n    }\n","date":"2019-08-16 20:51:17","endLine":55,"groupId":"11853","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"concat","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/6f/436a56ccf266c9cc57c65783686ad7824a74fd.src","preCode":"    public void concat() {\n        Observer<String> observer = TestHelper.mockObserver();\n\n        final String[] o = { \"1\", \"3\", \"5\", \"7\" };\n        final String[] e = { \"2\", \"4\", \"6\" };\n\n        final Observable<String> odds = Observable.fromArray(o);\n        final Observable<String> even = Observable.fromArray(e);\n\n        Observable<String> concat = Observable.concat(odds, even);\n        concat.subscribe(observer);\n\n        verify(observer, times(7)).onNext(anyString());\n    }\n","realPath":"src/test/java/io/reactivex/rxjava3/internal/operators/observable/ObservableConcatTest.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":42,"status":"B"},{"authorDate":"2019-08-16 20:51:17","commitOrder":1,"curCode":"    public void concatObservableOfObservables() {\n        Observer<String> observer = TestHelper.mockObserver();\n\n        final String[] o = { \"1\", \"3\", \"5\", \"7\" };\n        final String[] e = { \"2\", \"4\", \"6\" };\n\n        final Observable<String> odds = Observable.fromArray(o);\n        final Observable<String> even = Observable.fromArray(e);\n\n        Observable<Observable<String>> observableOfObservables = Observable.unsafeCreate(new ObservableSource<Observable<String>>() {\n\n            @Override\n            public void subscribe(Observer<? super Observable<String>> observer) {\n                observer.onSubscribe(Disposables.empty());\n                \r\n                observer.onNext(odds);\n                observer.onNext(even);\n                observer.onComplete();\n            }\n\n        });\n        Observable<String> concat = Observable.concat(observableOfObservables);\n\n        concat.subscribe(observer);\n\n        verify(observer, times(7)).onNext(anyString());\n    }\n","date":"2019-08-16 20:51:17","endLine":102,"groupId":"5601","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"concatObservableOfObservables","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/6f/436a56ccf266c9cc57c65783686ad7824a74fd.src","preCode":"    public void concatObservableOfObservables() {\n        Observer<String> observer = TestHelper.mockObserver();\n\n        final String[] o = { \"1\", \"3\", \"5\", \"7\" };\n        final String[] e = { \"2\", \"4\", \"6\" };\n\n        final Observable<String> odds = Observable.fromArray(o);\n        final Observable<String> even = Observable.fromArray(e);\n\n        Observable<Observable<String>> observableOfObservables = Observable.unsafeCreate(new ObservableSource<Observable<String>>() {\n\n            @Override\n            public void subscribe(Observer<? super Observable<String>> observer) {\n                observer.onSubscribe(Disposables.empty());\n                \r\n                observer.onNext(odds);\n                observer.onNext(even);\n                observer.onComplete();\n            }\n\n        });\n        Observable<String> concat = Observable.concat(observableOfObservables);\n\n        concat.subscribe(observer);\n\n        verify(observer, times(7)).onNext(anyString());\n    }\n","realPath":"src/test/java/io/reactivex/rxjava3/internal/operators/observable/ObservableConcatTest.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":76,"status":"B"}],"commitId":"a1693ecc9215027a7a3eae75272979ebb4d79a27","commitMessage":"@@@3.x: Refactor to io.reactivex.rxjava3.** (#6621)\n\n* 3.x: Refactor to io.reactivex.rxjava3.**\n\n* fix javadoc cleanup gradle\n\n* javadoc gradle again\n\n* Fix package location in text\n","date":"2019-08-16 20:51:17","modifiedFileCount":"0","status":"B","submitter":"David Karnok"},{"authorTime":"2019-12-20 02:39:40","codes":[{"authorDate":"2019-08-16 20:51:17","commitOrder":2,"curCode":"    public void concat() {\n        Observer<String> observer = TestHelper.mockObserver();\n\n        final String[] o = { \"1\", \"3\", \"5\", \"7\" };\n        final String[] e = { \"2\", \"4\", \"6\" };\n\n        final Observable<String> odds = Observable.fromArray(o);\n        final Observable<String> even = Observable.fromArray(e);\n\n        Observable<String> concat = Observable.concat(odds, even);\n        concat.subscribe(observer);\n\n        verify(observer, times(7)).onNext(anyString());\n    }\n","date":"2019-08-16 20:51:17","endLine":55,"groupId":"105440","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"concat","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/6f/436a56ccf266c9cc57c65783686ad7824a74fd.src","preCode":"    public void concat() {\n        Observer<String> observer = TestHelper.mockObserver();\n\n        final String[] o = { \"1\", \"3\", \"5\", \"7\" };\n        final String[] e = { \"2\", \"4\", \"6\" };\n\n        final Observable<String> odds = Observable.fromArray(o);\n        final Observable<String> even = Observable.fromArray(e);\n\n        Observable<String> concat = Observable.concat(odds, even);\n        concat.subscribe(observer);\n\n        verify(observer, times(7)).onNext(anyString());\n    }\n","realPath":"src/test/java/io/reactivex/rxjava3/internal/operators/observable/ObservableConcatTest.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":42,"status":"N"},{"authorDate":"2019-12-20 02:39:40","commitOrder":2,"curCode":"    public void concatObservableOfObservables() {\n        Observer<String> observer = TestHelper.mockObserver();\n\n        final String[] o = { \"1\", \"3\", \"5\", \"7\" };\n        final String[] e = { \"2\", \"4\", \"6\" };\n\n        final Observable<String> odds = Observable.fromArray(o);\n        final Observable<String> even = Observable.fromArray(e);\n\n        Observable<Observable<String>> observableOfObservables = Observable.unsafeCreate(new ObservableSource<Observable<String>>() {\n\n            @Override\n            public void subscribe(Observer<? super Observable<String>> observer) {\n                observer.onSubscribe(Disposable.empty());\n                \r\n                observer.onNext(odds);\n                observer.onNext(even);\n                observer.onComplete();\n            }\n\n        });\n        Observable<String> concat = Observable.concat(observableOfObservables);\n\n        concat.subscribe(observer);\n\n        verify(observer, times(7)).onNext(anyString());\n    }\n","date":"2019-12-20 02:39:40","endLine":102,"groupId":"105440","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"concatObservableOfObservables","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/35/4c2afc27ec3237ecd8c9501466a260653e5c0a.src","preCode":"    public void concatObservableOfObservables() {\n        Observer<String> observer = TestHelper.mockObserver();\n\n        final String[] o = { \"1\", \"3\", \"5\", \"7\" };\n        final String[] e = { \"2\", \"4\", \"6\" };\n\n        final Observable<String> odds = Observable.fromArray(o);\n        final Observable<String> even = Observable.fromArray(e);\n\n        Observable<Observable<String>> observableOfObservables = Observable.unsafeCreate(new ObservableSource<Observable<String>>() {\n\n            @Override\n            public void subscribe(Observer<? super Observable<String>> observer) {\n                observer.onSubscribe(Disposables.empty());\n                \r\n                observer.onNext(odds);\n                observer.onNext(even);\n                observer.onComplete();\n            }\n\n        });\n        Observable<String> concat = Observable.concat(observableOfObservables);\n\n        concat.subscribe(observer);\n\n        verify(observer, times(7)).onNext(anyString());\n    }\n","realPath":"src/test/java/io/reactivex/rxjava3/internal/operators/observable/ObservableConcatTest.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":76,"status":"M"}],"commitId":"166c529eb165b473c9bff11e8fedbde6c471b005","commitMessage":"@@@Migrate Disposables static factories to Disposable interface (#6781)\n\n","date":"2019-12-20 02:39:40","modifiedFileCount":"202","status":"M","submitter":"Jake Wharton"}]
