[{"authorTime":"2019-08-16 20:51:17","codes":[{"authorDate":"2019-08-16 20:51:17","commitOrder":1,"curCode":"        public void onSuccess(T value) {\n            if (get() != DisposableHelper.DISPOSED) {\n                Disposable d = getAndSet(DisposableHelper.DISPOSED);\n                if (d != DisposableHelper.DISPOSED) {\n                    try {\n                        if (value == null) {\n                            downstream.onError(new NullPointerException(\"onSuccess called with null. Null values are generally not allowed in 2.x operators and sources.\"));\n                        } else {\n                            downstream.onSuccess(value);\n                        }\n                    } finally {\n                        if (d != null) {\n                            d.dispose();\n                        }\n                    }\n                }\n            }\n        }\n","date":"2019-08-16 20:51:17","endLine":82,"groupId":"1896","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"onSuccess","params":"(Tvalue)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/bf/a6a9444e96e40d8b5fdd407a8bbc7c29527d27.src","preCode":"        public void onSuccess(T value) {\n            if (get() != DisposableHelper.DISPOSED) {\n                Disposable d = getAndSet(DisposableHelper.DISPOSED);\n                if (d != DisposableHelper.DISPOSED) {\n                    try {\n                        if (value == null) {\n                            downstream.onError(new NullPointerException(\"onSuccess called with null. Null values are generally not allowed in 2.x operators and sources.\"));\n                        } else {\n                            downstream.onSuccess(value);\n                        }\n                    } finally {\n                        if (d != null) {\n                            d.dispose();\n                        }\n                    }\n                }\n            }\n        }\n","realPath":"src/main/java/io/reactivex/rxjava3/internal/operators/maybe/MaybeCreate.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":65,"status":"B"},{"authorDate":"2019-08-16 20:51:17","commitOrder":1,"curCode":"        public void onComplete() {\n            if (get() != DisposableHelper.DISPOSED) {\n                Disposable d = getAndSet(DisposableHelper.DISPOSED);\n                if (d != DisposableHelper.DISPOSED) {\n                    try {\n                        downstream.onComplete();\n                    } finally {\n                        if (d != null) {\n                            d.dispose();\n                        }\n                    }\n                }\n            }\n        }\n","date":"2019-08-16 20:51:17","endLine":126,"groupId":"9381","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"onComplete","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/bf/a6a9444e96e40d8b5fdd407a8bbc7c29527d27.src","preCode":"        public void onComplete() {\n            if (get() != DisposableHelper.DISPOSED) {\n                Disposable d = getAndSet(DisposableHelper.DISPOSED);\n                if (d != DisposableHelper.DISPOSED) {\n                    try {\n                        downstream.onComplete();\n                    } finally {\n                        if (d != null) {\n                            d.dispose();\n                        }\n                    }\n                }\n            }\n        }\n","realPath":"src/main/java/io/reactivex/rxjava3/internal/operators/maybe/MaybeCreate.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":113,"status":"B"}],"commitId":"a1693ecc9215027a7a3eae75272979ebb4d79a27","commitMessage":"@@@3.x: Refactor to io.reactivex.rxjava3.** (#6621)\n\n* 3.x: Refactor to io.reactivex.rxjava3.**\n\n* fix javadoc cleanup gradle\n\n* javadoc gradle again\n\n* Fix package location in text\n","date":"2019-08-16 20:51:17","modifiedFileCount":"0","status":"B","submitter":"David Karnok"},{"authorTime":"2019-08-16 20:51:17","codes":[{"authorDate":"2019-08-28 22:07:44","commitOrder":2,"curCode":"        public void onSuccess(T value) {\n            if (get() != DisposableHelper.DISPOSED) {\n                Disposable d = getAndSet(DisposableHelper.DISPOSED);\n                if (d != DisposableHelper.DISPOSED) {\n                    try {\n                        if (value == null) {\n                            downstream.onError(ExceptionHelper.createNullPointerException(\"onSuccess called with a null value.\"));\n                        } else {\n                            downstream.onSuccess(value);\n                        }\n                    } finally {\n                        if (d != null) {\n                            d.dispose();\n                        }\n                    }\n                }\n            }\n        }\n","date":"2019-08-28 22:07:44","endLine":83,"groupId":"101764","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"onSuccess","params":"(Tvalue)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/2f/c0f484144e934c50bd84b6e7f865cd86da758b.src","preCode":"        public void onSuccess(T value) {\n            if (get() != DisposableHelper.DISPOSED) {\n                Disposable d = getAndSet(DisposableHelper.DISPOSED);\n                if (d != DisposableHelper.DISPOSED) {\n                    try {\n                        if (value == null) {\n                            downstream.onError(new NullPointerException(\"onSuccess called with null. Null values are generally not allowed in 2.x operators and sources.\"));\n                        } else {\n                            downstream.onSuccess(value);\n                        }\n                    } finally {\n                        if (d != null) {\n                            d.dispose();\n                        }\n                    }\n                }\n            }\n        }\n","realPath":"src/main/java/io/reactivex/rxjava3/internal/operators/maybe/MaybeCreate.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":66,"status":"M"},{"authorDate":"2019-08-16 20:51:17","commitOrder":2,"curCode":"        public void onComplete() {\n            if (get() != DisposableHelper.DISPOSED) {\n                Disposable d = getAndSet(DisposableHelper.DISPOSED);\n                if (d != DisposableHelper.DISPOSED) {\n                    try {\n                        downstream.onComplete();\n                    } finally {\n                        if (d != null) {\n                            d.dispose();\n                        }\n                    }\n                }\n            }\n        }\n","date":"2019-08-16 20:51:17","endLine":126,"groupId":"101764","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"onComplete","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/bf/a6a9444e96e40d8b5fdd407a8bbc7c29527d27.src","preCode":"        public void onComplete() {\n            if (get() != DisposableHelper.DISPOSED) {\n                Disposable d = getAndSet(DisposableHelper.DISPOSED);\n                if (d != DisposableHelper.DISPOSED) {\n                    try {\n                        downstream.onComplete();\n                    } finally {\n                        if (d != null) {\n                            d.dispose();\n                        }\n                    }\n                }\n            }\n        }\n","realPath":"src/main/java/io/reactivex/rxjava3/internal/operators/maybe/MaybeCreate.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":113,"status":"N"}],"commitId":"a07c45eeeb68b1cfc24f913c75edbc2820aadb76","commitMessage":"@@@3.x: Cleanup addThrowable.  \"2.x\" and null-value error messages (#6639)\n\n","date":"2019-08-28 22:07:44","modifiedFileCount":"106","status":"M","submitter":"David Karnok"}]
