[{"authorTime":"2019-12-27 05:37:39","codes":[{"authorDate":"2019-12-27 05:37:39","commitOrder":2,"curCode":"    public void subscribe(Subscriber<? super T>[] subscribers) {\n        if (!validate(subscribers)) {\n            return;\n        }\n\n        int n = subscribers.length;\n        @SuppressWarnings(\"unchecked\")\n        Subscriber<? super T>[] parents = new Subscriber[n];\n\n        for (int i = 0; i < n; i++) {\n            parents[i] = new ParallelPeekSubscriber<>(subscribers[i], this);\n        }\n\n        source.subscribe(parents);\n    }\n","date":"2019-12-27 05:37:39","endLine":82,"groupId":"5545","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"subscribe","params":"(Subscriber<?superT>[]subscribers)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/20/6a2dd4721b8fc0ad751ce1283dd7b5d0b95da9.src","preCode":"    public void subscribe(Subscriber<? super T>[] subscribers) {\n        if (!validate(subscribers)) {\n            return;\n        }\n\n        int n = subscribers.length;\n        @SuppressWarnings(\"unchecked\")\n        Subscriber<? super T>[] parents = new Subscriber[n];\n\n        for (int i = 0; i < n; i++) {\n            parents[i] = new ParallelPeekSubscriber<>(subscribers[i], this);\n        }\n\n        source.subscribe(parents);\n    }\n","realPath":"src/main/java/io/reactivex/rxjava3/internal/operators/parallel/ParallelPeek.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":68,"status":"MB"},{"authorDate":"2019-12-27 05:37:39","commitOrder":2,"curCode":"    public void subscribe(Subscriber<? super R>[] subscribers) {\n        if (!validate(subscribers)) {\n            return;\n        }\n\n        int n = subscribers.length;\n        @SuppressWarnings(\"unchecked\")\n        Subscriber<? super T>[] parents = new Subscriber[n];\n\n        for (int i = 0; i < n; i++) {\n            Subscriber<? super R> a = subscribers[i];\n            if (a instanceof ConditionalSubscriber) {\n                parents[i] = new ParallelMapTryConditionalSubscriber<>((ConditionalSubscriber<? super R>)a, mapper, errorHandler);\n            } else {\n                parents[i] = new ParallelMapTrySubscriber<>(a, mapper, errorHandler);\n            }\n        }\n\n        source.subscribe(parents);\n    }\n","date":"2019-12-27 05:37:39","endLine":71,"groupId":"6379","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"subscribe","params":"(Subscriber<?superR>[]subscribers)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/a2/d454c9942ce887ef937640c1e79ccbc18fabab.src","preCode":"    public void subscribe(Subscriber<? super R>[] subscribers) {\n        if (!validate(subscribers)) {\n            return;\n        }\n\n        int n = subscribers.length;\n        @SuppressWarnings(\"unchecked\")\n        Subscriber<? super T>[] parents = new Subscriber[n];\n\n        for (int i = 0; i < n; i++) {\n            Subscriber<? super R> a = subscribers[i];\n            if (a instanceof ConditionalSubscriber) {\n                parents[i] = new ParallelMapTryConditionalSubscriber<>((ConditionalSubscriber<? super R>)a, mapper, errorHandler);\n            } else {\n                parents[i] = new ParallelMapTrySubscriber<>(a, mapper, errorHandler);\n            }\n        }\n\n        source.subscribe(parents);\n    }\n","realPath":"src/main/java/io/reactivex/rxjava3/internal/jdk8/ParallelMapTryOptional.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":52,"status":"B"}],"commitId":"3d00eb188bad1d49aa058e896ad9d1b5026eba7d","commitMessage":"@@@3.x: [Java 8] Add ParallelFlowable operators + cleanup (#6798)\n\n","date":"2019-12-27 05:37:39","modifiedFileCount":"22","status":"M","submitter":"David Karnok"},{"authorTime":"2019-12-27 05:37:39","codes":[{"authorDate":"2021-02-25 00:40:46","commitOrder":3,"curCode":"    public void subscribe(Subscriber<? super T>[] subscribers) {\n        subscribers = RxJavaPlugins.onSubscribe(this, subscribers);\n\n        if (!validate(subscribers)) {\n            return;\n        }\n\n        int n = subscribers.length;\n        @SuppressWarnings(\"unchecked\")\n        Subscriber<? super T>[] parents = new Subscriber[n];\n\n        for (int i = 0; i < n; i++) {\n            parents[i] = new ParallelPeekSubscriber<>(subscribers[i], this);\n        }\n\n        source.subscribe(parents);\n    }\n","date":"2021-02-25 00:40:46","endLine":84,"groupId":"101953","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"subscribe","params":"(Subscriber<?superT>[]subscribers)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/20/c28ef581fe8de12911cf1fc6a616a21c422aa8.src","preCode":"    public void subscribe(Subscriber<? super T>[] subscribers) {\n        if (!validate(subscribers)) {\n            return;\n        }\n\n        int n = subscribers.length;\n        @SuppressWarnings(\"unchecked\")\n        Subscriber<? super T>[] parents = new Subscriber[n];\n\n        for (int i = 0; i < n; i++) {\n            parents[i] = new ParallelPeekSubscriber<>(subscribers[i], this);\n        }\n\n        source.subscribe(parents);\n    }\n","realPath":"src/main/java/io/reactivex/rxjava3/internal/operators/parallel/ParallelPeek.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":68,"status":"M"},{"authorDate":"2019-12-27 05:37:39","commitOrder":3,"curCode":"    public void subscribe(Subscriber<? super R>[] subscribers) {\n        if (!validate(subscribers)) {\n            return;\n        }\n\n        int n = subscribers.length;\n        @SuppressWarnings(\"unchecked\")\n        Subscriber<? super T>[] parents = new Subscriber[n];\n\n        for (int i = 0; i < n; i++) {\n            Subscriber<? super R> a = subscribers[i];\n            if (a instanceof ConditionalSubscriber) {\n                parents[i] = new ParallelMapTryConditionalSubscriber<>((ConditionalSubscriber<? super R>)a, mapper, errorHandler);\n            } else {\n                parents[i] = new ParallelMapTrySubscriber<>(a, mapper, errorHandler);\n            }\n        }\n\n        source.subscribe(parents);\n    }\n","date":"2019-12-27 05:37:39","endLine":71,"groupId":"101953","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"subscribe","params":"(Subscriber<?superR>[]subscribers)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/a2/d454c9942ce887ef937640c1e79ccbc18fabab.src","preCode":"    public void subscribe(Subscriber<? super R>[] subscribers) {\n        if (!validate(subscribers)) {\n            return;\n        }\n\n        int n = subscribers.length;\n        @SuppressWarnings(\"unchecked\")\n        Subscriber<? super T>[] parents = new Subscriber[n];\n\n        for (int i = 0; i < n; i++) {\n            Subscriber<? super R> a = subscribers[i];\n            if (a instanceof ConditionalSubscriber) {\n                parents[i] = new ParallelMapTryConditionalSubscriber<>((ConditionalSubscriber<? super R>)a, mapper, errorHandler);\n            } else {\n                parents[i] = new ParallelMapTrySubscriber<>(a, mapper, errorHandler);\n            }\n        }\n\n        source.subscribe(parents);\n    }\n","realPath":"src/main/java/io/reactivex/rxjava3/internal/jdk8/ParallelMapTryOptional.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":52,"status":"N"}],"commitId":"22c5e0bfe0ca9a68cd726d23fb696fe56a059a84","commitMessage":"@@@3.x: Add onSubscribe hook to ParallelFlowable operators (#7191)\n\n","date":"2021-02-25 00:40:46","modifiedFileCount":"17","status":"M","submitter":"David Karnok"}]
