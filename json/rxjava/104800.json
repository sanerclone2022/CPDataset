[{"authorTime":"2019-08-16 20:51:17","codes":[{"authorDate":"2019-08-16 20:51:17","commitOrder":1,"curCode":"    public void shouldSwitchToOtherAndCanBeUnsubscribedIfOnNextNotWithinTimeout() {\n        PublishSubject<String> other = PublishSubject.create();\n        Observable<String> source = underlyingSubject.timeout(TIMEOUT, TIME_UNIT, testScheduler, other);\n\n        Observer<String> observer = TestHelper.mockObserver();\n        TestObserver<String> to = new TestObserver<String>(observer);\n        source.subscribe(to);\n\n        testScheduler.advanceTimeBy(2, TimeUnit.SECONDS);\n        underlyingSubject.onNext(\"One\");\n        testScheduler.advanceTimeBy(4, TimeUnit.SECONDS);\n        underlyingSubject.onNext(\"Two\");\n\n        other.onNext(\"a\");\n        other.onNext(\"b\");\n        to.dispose();\n\n        \r\n        other.onNext(\"c\");\n        other.onNext(\"d\");\n        other.onComplete();\n\n        InOrder inOrder = inOrder(observer);\n        inOrder.verify(observer, times(1)).onNext(\"One\");\n        inOrder.verify(observer, times(1)).onNext(\"a\");\n        inOrder.verify(observer, times(1)).onNext(\"b\");\n        inOrder.verifyNoMoreInteractions();\n    }\n","date":"2019-08-16 20:51:17","endLine":226,"groupId":"3491","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"shouldSwitchToOtherAndCanBeUnsubscribedIfOnNextNotWithinTimeout","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/f1/bb9e7bfe906e51ec802303dab7e98da6ca39b5.src","preCode":"    public void shouldSwitchToOtherAndCanBeUnsubscribedIfOnNextNotWithinTimeout() {\n        PublishSubject<String> other = PublishSubject.create();\n        Observable<String> source = underlyingSubject.timeout(TIMEOUT, TIME_UNIT, testScheduler, other);\n\n        Observer<String> observer = TestHelper.mockObserver();\n        TestObserver<String> to = new TestObserver<String>(observer);\n        source.subscribe(to);\n\n        testScheduler.advanceTimeBy(2, TimeUnit.SECONDS);\n        underlyingSubject.onNext(\"One\");\n        testScheduler.advanceTimeBy(4, TimeUnit.SECONDS);\n        underlyingSubject.onNext(\"Two\");\n\n        other.onNext(\"a\");\n        other.onNext(\"b\");\n        to.dispose();\n\n        \r\n        other.onNext(\"c\");\n        other.onNext(\"d\");\n        other.onComplete();\n\n        InOrder inOrder = inOrder(observer);\n        inOrder.verify(observer, times(1)).onNext(\"One\");\n        inOrder.verify(observer, times(1)).onNext(\"a\");\n        inOrder.verify(observer, times(1)).onNext(\"b\");\n        inOrder.verifyNoMoreInteractions();\n    }\n","realPath":"src/test/java/io/reactivex/rxjava3/internal/operators/observable/ObservableTimeoutTests.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":199,"status":"B"},{"authorDate":"2019-08-16 20:51:17","commitOrder":1,"curCode":"    public void shouldSwitchToOtherAndCanBeUnsubscribedIfOnNextNotWithinTimeout() {\n        PublishProcessor<String> other = PublishProcessor.create();\n        Flowable<String> source = underlyingSubject.timeout(TIMEOUT, TIME_UNIT, testScheduler, other);\n\n        Subscriber<String> subscriber = TestHelper.mockSubscriber();\n        TestSubscriber<String> ts = new TestSubscriber<String>(subscriber);\n        source.subscribe(ts);\n\n        testScheduler.advanceTimeBy(2, TimeUnit.SECONDS);\n        underlyingSubject.onNext(\"One\");\n        testScheduler.advanceTimeBy(4, TimeUnit.SECONDS);\n        underlyingSubject.onNext(\"Two\");\n\n        other.onNext(\"a\");\n        other.onNext(\"b\");\n        ts.cancel();\n\n        \r\n        other.onNext(\"c\");\n        other.onNext(\"d\");\n        other.onComplete();\n\n        InOrder inOrder = inOrder(subscriber);\n        inOrder.verify(subscriber, times(1)).onNext(\"One\");\n        inOrder.verify(subscriber, times(1)).onNext(\"a\");\n        inOrder.verify(subscriber, times(1)).onNext(\"b\");\n        inOrder.verifyNoMoreInteractions();\n    }\n","date":"2019-08-16 20:51:17","endLine":229,"groupId":"3420","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"shouldSwitchToOtherAndCanBeUnsubscribedIfOnNextNotWithinTimeout","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/14/4d0da6a8a532e2b6516e33d56b98b5e1712628.src","preCode":"    public void shouldSwitchToOtherAndCanBeUnsubscribedIfOnNextNotWithinTimeout() {\n        PublishProcessor<String> other = PublishProcessor.create();\n        Flowable<String> source = underlyingSubject.timeout(TIMEOUT, TIME_UNIT, testScheduler, other);\n\n        Subscriber<String> subscriber = TestHelper.mockSubscriber();\n        TestSubscriber<String> ts = new TestSubscriber<String>(subscriber);\n        source.subscribe(ts);\n\n        testScheduler.advanceTimeBy(2, TimeUnit.SECONDS);\n        underlyingSubject.onNext(\"One\");\n        testScheduler.advanceTimeBy(4, TimeUnit.SECONDS);\n        underlyingSubject.onNext(\"Two\");\n\n        other.onNext(\"a\");\n        other.onNext(\"b\");\n        ts.cancel();\n\n        \r\n        other.onNext(\"c\");\n        other.onNext(\"d\");\n        other.onComplete();\n\n        InOrder inOrder = inOrder(subscriber);\n        inOrder.verify(subscriber, times(1)).onNext(\"One\");\n        inOrder.verify(subscriber, times(1)).onNext(\"a\");\n        inOrder.verify(subscriber, times(1)).onNext(\"b\");\n        inOrder.verifyNoMoreInteractions();\n    }\n","realPath":"src/test/java/io/reactivex/rxjava3/internal/operators/flowable/FlowableTimeoutTests.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":202,"status":"B"}],"commitId":"a1693ecc9215027a7a3eae75272979ebb4d79a27","commitMessage":"@@@3.x: Refactor to io.reactivex.rxjava3.** (#6621)\n\n* 3.x: Refactor to io.reactivex.rxjava3.**\n\n* fix javadoc cleanup gradle\n\n* javadoc gradle again\n\n* Fix package location in text\n","date":"2019-08-16 20:51:17","modifiedFileCount":"0","status":"B","submitter":"David Karnok"},{"authorTime":"2019-12-22 18:39:23","codes":[{"authorDate":"2019-08-16 20:51:17","commitOrder":2,"curCode":"    public void shouldSwitchToOtherAndCanBeUnsubscribedIfOnNextNotWithinTimeout() {\n        PublishSubject<String> other = PublishSubject.create();\n        Observable<String> source = underlyingSubject.timeout(TIMEOUT, TIME_UNIT, testScheduler, other);\n\n        Observer<String> observer = TestHelper.mockObserver();\n        TestObserver<String> to = new TestObserver<String>(observer);\n        source.subscribe(to);\n\n        testScheduler.advanceTimeBy(2, TimeUnit.SECONDS);\n        underlyingSubject.onNext(\"One\");\n        testScheduler.advanceTimeBy(4, TimeUnit.SECONDS);\n        underlyingSubject.onNext(\"Two\");\n\n        other.onNext(\"a\");\n        other.onNext(\"b\");\n        to.dispose();\n\n        \r\n        other.onNext(\"c\");\n        other.onNext(\"d\");\n        other.onComplete();\n\n        InOrder inOrder = inOrder(observer);\n        inOrder.verify(observer, times(1)).onNext(\"One\");\n        inOrder.verify(observer, times(1)).onNext(\"a\");\n        inOrder.verify(observer, times(1)).onNext(\"b\");\n        inOrder.verifyNoMoreInteractions();\n    }\n","date":"2019-08-16 20:51:17","endLine":226,"groupId":"3491","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"shouldSwitchToOtherAndCanBeUnsubscribedIfOnNextNotWithinTimeout","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/f1/bb9e7bfe906e51ec802303dab7e98da6ca39b5.src","preCode":"    public void shouldSwitchToOtherAndCanBeUnsubscribedIfOnNextNotWithinTimeout() {\n        PublishSubject<String> other = PublishSubject.create();\n        Observable<String> source = underlyingSubject.timeout(TIMEOUT, TIME_UNIT, testScheduler, other);\n\n        Observer<String> observer = TestHelper.mockObserver();\n        TestObserver<String> to = new TestObserver<String>(observer);\n        source.subscribe(to);\n\n        testScheduler.advanceTimeBy(2, TimeUnit.SECONDS);\n        underlyingSubject.onNext(\"One\");\n        testScheduler.advanceTimeBy(4, TimeUnit.SECONDS);\n        underlyingSubject.onNext(\"Two\");\n\n        other.onNext(\"a\");\n        other.onNext(\"b\");\n        to.dispose();\n\n        \r\n        other.onNext(\"c\");\n        other.onNext(\"d\");\n        other.onComplete();\n\n        InOrder inOrder = inOrder(observer);\n        inOrder.verify(observer, times(1)).onNext(\"One\");\n        inOrder.verify(observer, times(1)).onNext(\"a\");\n        inOrder.verify(observer, times(1)).onNext(\"b\");\n        inOrder.verifyNoMoreInteractions();\n    }\n","realPath":"src/test/java/io/reactivex/rxjava3/internal/operators/observable/ObservableTimeoutTests.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":199,"status":"N"},{"authorDate":"2019-12-22 18:39:23","commitOrder":2,"curCode":"    public void shouldSwitchToOtherAndCanBeUnsubscribedIfOnNextNotWithinTimeout() {\n        PublishProcessor<String> other = PublishProcessor.create();\n        Flowable<String> source = underlyingSubject.timeout(TIMEOUT, TIME_UNIT, testScheduler, other);\n\n        Subscriber<String> subscriber = TestHelper.mockSubscriber();\n        TestSubscriber<String> ts = new TestSubscriber<>(subscriber);\n        source.subscribe(ts);\n\n        testScheduler.advanceTimeBy(2, TimeUnit.SECONDS);\n        underlyingSubject.onNext(\"One\");\n        testScheduler.advanceTimeBy(4, TimeUnit.SECONDS);\n        underlyingSubject.onNext(\"Two\");\n\n        other.onNext(\"a\");\n        other.onNext(\"b\");\n        ts.cancel();\n\n        \r\n        other.onNext(\"c\");\n        other.onNext(\"d\");\n        other.onComplete();\n\n        InOrder inOrder = inOrder(subscriber);\n        inOrder.verify(subscriber, times(1)).onNext(\"One\");\n        inOrder.verify(subscriber, times(1)).onNext(\"a\");\n        inOrder.verify(subscriber, times(1)).onNext(\"b\");\n        inOrder.verifyNoMoreInteractions();\n    }\n","date":"2019-12-22 18:39:23","endLine":229,"groupId":"3420","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"shouldSwitchToOtherAndCanBeUnsubscribedIfOnNextNotWithinTimeout","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/88/a3bc22531f0bbf1d8dea136464f049eca3a64f.src","preCode":"    public void shouldSwitchToOtherAndCanBeUnsubscribedIfOnNextNotWithinTimeout() {\n        PublishProcessor<String> other = PublishProcessor.create();\n        Flowable<String> source = underlyingSubject.timeout(TIMEOUT, TIME_UNIT, testScheduler, other);\n\n        Subscriber<String> subscriber = TestHelper.mockSubscriber();\n        TestSubscriber<String> ts = new TestSubscriber<String>(subscriber);\n        source.subscribe(ts);\n\n        testScheduler.advanceTimeBy(2, TimeUnit.SECONDS);\n        underlyingSubject.onNext(\"One\");\n        testScheduler.advanceTimeBy(4, TimeUnit.SECONDS);\n        underlyingSubject.onNext(\"Two\");\n\n        other.onNext(\"a\");\n        other.onNext(\"b\");\n        ts.cancel();\n\n        \r\n        other.onNext(\"c\");\n        other.onNext(\"d\");\n        other.onComplete();\n\n        InOrder inOrder = inOrder(subscriber);\n        inOrder.verify(subscriber, times(1)).onNext(\"One\");\n        inOrder.verify(subscriber, times(1)).onNext(\"a\");\n        inOrder.verify(subscriber, times(1)).onNext(\"b\");\n        inOrder.verifyNoMoreInteractions();\n    }\n","realPath":"src/test/java/io/reactivex/rxjava3/internal/operators/flowable/FlowableTimeoutTests.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":202,"status":"M"}],"commitId":"e162d664d86639b97c214054aca346fc2ba37e33","commitMessage":"@@@diamond operators in unit tests.  flowable package (#6787)\n\n","date":"2019-12-22 18:39:23","modifiedFileCount":"111","status":"M","submitter":"Dmitry Volkov"},{"authorTime":"2019-12-22 18:39:23","codes":[{"authorDate":"2019-12-22 18:59:44","commitOrder":3,"curCode":"    public void shouldSwitchToOtherAndCanBeUnsubscribedIfOnNextNotWithinTimeout() {\n        PublishSubject<String> other = PublishSubject.create();\n        Observable<String> source = underlyingSubject.timeout(TIMEOUT, TIME_UNIT, testScheduler, other);\n\n        Observer<String> observer = TestHelper.mockObserver();\n        TestObserver<String> to = new TestObserver<>(observer);\n        source.subscribe(to);\n\n        testScheduler.advanceTimeBy(2, TimeUnit.SECONDS);\n        underlyingSubject.onNext(\"One\");\n        testScheduler.advanceTimeBy(4, TimeUnit.SECONDS);\n        underlyingSubject.onNext(\"Two\");\n\n        other.onNext(\"a\");\n        other.onNext(\"b\");\n        to.dispose();\n\n        \r\n        other.onNext(\"c\");\n        other.onNext(\"d\");\n        other.onComplete();\n\n        InOrder inOrder = inOrder(observer);\n        inOrder.verify(observer, times(1)).onNext(\"One\");\n        inOrder.verify(observer, times(1)).onNext(\"a\");\n        inOrder.verify(observer, times(1)).onNext(\"b\");\n        inOrder.verifyNoMoreInteractions();\n    }\n","date":"2019-12-22 18:59:44","endLine":226,"groupId":"104800","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"shouldSwitchToOtherAndCanBeUnsubscribedIfOnNextNotWithinTimeout","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/fe/7b2cd37074ed8cae3781dc75b571a655138c47.src","preCode":"    public void shouldSwitchToOtherAndCanBeUnsubscribedIfOnNextNotWithinTimeout() {\n        PublishSubject<String> other = PublishSubject.create();\n        Observable<String> source = underlyingSubject.timeout(TIMEOUT, TIME_UNIT, testScheduler, other);\n\n        Observer<String> observer = TestHelper.mockObserver();\n        TestObserver<String> to = new TestObserver<String>(observer);\n        source.subscribe(to);\n\n        testScheduler.advanceTimeBy(2, TimeUnit.SECONDS);\n        underlyingSubject.onNext(\"One\");\n        testScheduler.advanceTimeBy(4, TimeUnit.SECONDS);\n        underlyingSubject.onNext(\"Two\");\n\n        other.onNext(\"a\");\n        other.onNext(\"b\");\n        to.dispose();\n\n        \r\n        other.onNext(\"c\");\n        other.onNext(\"d\");\n        other.onComplete();\n\n        InOrder inOrder = inOrder(observer);\n        inOrder.verify(observer, times(1)).onNext(\"One\");\n        inOrder.verify(observer, times(1)).onNext(\"a\");\n        inOrder.verify(observer, times(1)).onNext(\"b\");\n        inOrder.verifyNoMoreInteractions();\n    }\n","realPath":"src/test/java/io/reactivex/rxjava3/internal/operators/observable/ObservableTimeoutTests.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":199,"status":"M"},{"authorDate":"2019-12-22 18:39:23","commitOrder":3,"curCode":"    public void shouldSwitchToOtherAndCanBeUnsubscribedIfOnNextNotWithinTimeout() {\n        PublishProcessor<String> other = PublishProcessor.create();\n        Flowable<String> source = underlyingSubject.timeout(TIMEOUT, TIME_UNIT, testScheduler, other);\n\n        Subscriber<String> subscriber = TestHelper.mockSubscriber();\n        TestSubscriber<String> ts = new TestSubscriber<>(subscriber);\n        source.subscribe(ts);\n\n        testScheduler.advanceTimeBy(2, TimeUnit.SECONDS);\n        underlyingSubject.onNext(\"One\");\n        testScheduler.advanceTimeBy(4, TimeUnit.SECONDS);\n        underlyingSubject.onNext(\"Two\");\n\n        other.onNext(\"a\");\n        other.onNext(\"b\");\n        ts.cancel();\n\n        \r\n        other.onNext(\"c\");\n        other.onNext(\"d\");\n        other.onComplete();\n\n        InOrder inOrder = inOrder(subscriber);\n        inOrder.verify(subscriber, times(1)).onNext(\"One\");\n        inOrder.verify(subscriber, times(1)).onNext(\"a\");\n        inOrder.verify(subscriber, times(1)).onNext(\"b\");\n        inOrder.verifyNoMoreInteractions();\n    }\n","date":"2019-12-22 18:39:23","endLine":229,"groupId":"104800","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"shouldSwitchToOtherAndCanBeUnsubscribedIfOnNextNotWithinTimeout","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/88/a3bc22531f0bbf1d8dea136464f049eca3a64f.src","preCode":"    public void shouldSwitchToOtherAndCanBeUnsubscribedIfOnNextNotWithinTimeout() {\n        PublishProcessor<String> other = PublishProcessor.create();\n        Flowable<String> source = underlyingSubject.timeout(TIMEOUT, TIME_UNIT, testScheduler, other);\n\n        Subscriber<String> subscriber = TestHelper.mockSubscriber();\n        TestSubscriber<String> ts = new TestSubscriber<>(subscriber);\n        source.subscribe(ts);\n\n        testScheduler.advanceTimeBy(2, TimeUnit.SECONDS);\n        underlyingSubject.onNext(\"One\");\n        testScheduler.advanceTimeBy(4, TimeUnit.SECONDS);\n        underlyingSubject.onNext(\"Two\");\n\n        other.onNext(\"a\");\n        other.onNext(\"b\");\n        ts.cancel();\n\n        \r\n        other.onNext(\"c\");\n        other.onNext(\"d\");\n        other.onComplete();\n\n        InOrder inOrder = inOrder(subscriber);\n        inOrder.verify(subscriber, times(1)).onNext(\"One\");\n        inOrder.verify(subscriber, times(1)).onNext(\"a\");\n        inOrder.verify(subscriber, times(1)).onNext(\"b\");\n        inOrder.verifyNoMoreInteractions();\n    }\n","realPath":"src/test/java/io/reactivex/rxjava3/internal/operators/flowable/FlowableTimeoutTests.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":202,"status":"N"}],"commitId":"d6d698213b6c4091f4d5a0fb47f0922d0d0618e3","commitMessage":"@@@diamond operators in unit tests.  observable package (#6786)\n\n","date":"2019-12-22 18:59:44","modifiedFileCount":"95","status":"M","submitter":"Dmitry Volkov"}]
