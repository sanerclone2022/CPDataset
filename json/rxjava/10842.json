[{"authorTime":"2019-08-16 20:51:17","codes":[{"authorDate":"2019-08-16 20:51:17","commitOrder":1,"curCode":"    public void onNextAfterComplete() {\n        TestObserver<Integer> to = new TestObserver<Integer>();\n\n        SafeObserver<Integer> so = new SafeObserver<Integer>(to);\n\n        Disposable d = Disposables.empty();\n\n        so.onSubscribe(d);\n\n        so.onComplete();\n\n        so.onNext(1);\n\n        so.onError(new TestException());\n\n        so.onComplete();\n\n        to.assertResult();\n    }\n","date":"2019-08-16 20:51:17","endLine":242,"groupId":"8268","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"onNextAfterComplete","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/87/6bcffbe4c45e29f890bbfdc5166d59d53a8245.src","preCode":"    public void onNextAfterComplete() {\n        TestObserver<Integer> to = new TestObserver<Integer>();\n\n        SafeObserver<Integer> so = new SafeObserver<Integer>(to);\n\n        Disposable d = Disposables.empty();\n\n        so.onSubscribe(d);\n\n        so.onComplete();\n\n        so.onNext(1);\n\n        so.onError(new TestException());\n\n        so.onComplete();\n\n        to.assertResult();\n    }\n","realPath":"src/test/java/io/reactivex/rxjava3/observers/SafeObserverTest.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":224,"status":"B"},{"authorDate":"2019-08-16 20:51:17","commitOrder":1,"curCode":"    public void nullOnNext() {\n\n        TestObserverEx<Integer> to = new TestObserverEx<Integer>();\n\n        final SerializedObserver<Integer> so = new SerializedObserver<Integer>(to);\n\n        Disposable d = Disposables.empty();\n\n        so.onSubscribe(d);\n\n        so.onNext(null);\n\n        to.assertFailureAndMessage(NullPointerException.class, \"onNext called with null. Null values are generally not allowed in 2.x operators and sources.\");\n    }\n","date":"2019-08-16 20:51:17","endLine":1143,"groupId":"8268","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"nullOnNext","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/ec/b86d8417dc3c7ac992dd9447d4af86ee4d0bcb.src","preCode":"    public void nullOnNext() {\n\n        TestObserverEx<Integer> to = new TestObserverEx<Integer>();\n\n        final SerializedObserver<Integer> so = new SerializedObserver<Integer>(to);\n\n        Disposable d = Disposables.empty();\n\n        so.onSubscribe(d);\n\n        so.onNext(null);\n\n        to.assertFailureAndMessage(NullPointerException.class, \"onNext called with null. Null values are generally not allowed in 2.x operators and sources.\");\n    }\n","realPath":"src/test/java/io/reactivex/rxjava3/observers/SerializedObserverTest.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":1130,"status":"B"}],"commitId":"a1693ecc9215027a7a3eae75272979ebb4d79a27","commitMessage":"@@@3.x: Refactor to io.reactivex.rxjava3.** (#6621)\n\n* 3.x: Refactor to io.reactivex.rxjava3.**\n\n* fix javadoc cleanup gradle\n\n* javadoc gradle again\n\n* Fix package location in text\n","date":"2019-08-16 20:51:17","modifiedFileCount":"0","status":"B","submitter":"David Karnok"},{"authorTime":"2019-08-28 22:07:44","codes":[{"authorDate":"2019-08-16 20:51:17","commitOrder":2,"curCode":"    public void onNextAfterComplete() {\n        TestObserver<Integer> to = new TestObserver<Integer>();\n\n        SafeObserver<Integer> so = new SafeObserver<Integer>(to);\n\n        Disposable d = Disposables.empty();\n\n        so.onSubscribe(d);\n\n        so.onComplete();\n\n        so.onNext(1);\n\n        so.onError(new TestException());\n\n        so.onComplete();\n\n        to.assertResult();\n    }\n","date":"2019-08-16 20:51:17","endLine":242,"groupId":"8268","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"onNextAfterComplete","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/87/6bcffbe4c45e29f890bbfdc5166d59d53a8245.src","preCode":"    public void onNextAfterComplete() {\n        TestObserver<Integer> to = new TestObserver<Integer>();\n\n        SafeObserver<Integer> so = new SafeObserver<Integer>(to);\n\n        Disposable d = Disposables.empty();\n\n        so.onSubscribe(d);\n\n        so.onComplete();\n\n        so.onNext(1);\n\n        so.onError(new TestException());\n\n        so.onComplete();\n\n        to.assertResult();\n    }\n","realPath":"src/test/java/io/reactivex/rxjava3/observers/SafeObserverTest.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":224,"status":"N"},{"authorDate":"2019-08-28 22:07:44","commitOrder":2,"curCode":"    public void nullOnNext() {\n\n        TestObserverEx<Integer> to = new TestObserverEx<Integer>();\n\n        final SerializedObserver<Integer> so = new SerializedObserver<Integer>(to);\n\n        Disposable d = Disposables.empty();\n\n        so.onSubscribe(d);\n\n        so.onNext(null);\n\n        to.assertFailureAndMessage(NullPointerException.class, ExceptionHelper.nullWarning(\"onNext called with a null value.\"));\n    }\n","date":"2019-08-28 22:07:44","endLine":1144,"groupId":"8268","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"nullOnNext","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/1d/467242f50db56de6de09f4f767e6ce1afcd1b1.src","preCode":"    public void nullOnNext() {\n\n        TestObserverEx<Integer> to = new TestObserverEx<Integer>();\n\n        final SerializedObserver<Integer> so = new SerializedObserver<Integer>(to);\n\n        Disposable d = Disposables.empty();\n\n        so.onSubscribe(d);\n\n        so.onNext(null);\n\n        to.assertFailureAndMessage(NullPointerException.class, \"onNext called with null. Null values are generally not allowed in 2.x operators and sources.\");\n    }\n","realPath":"src/test/java/io/reactivex/rxjava3/observers/SerializedObserverTest.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":1131,"status":"M"}],"commitId":"a07c45eeeb68b1cfc24f913c75edbc2820aadb76","commitMessage":"@@@3.x: Cleanup addThrowable.  \"2.x\" and null-value error messages (#6639)\n\n","date":"2019-08-28 22:07:44","modifiedFileCount":"106","status":"M","submitter":"David Karnok"},{"authorTime":"2019-12-20 02:39:40","codes":[{"authorDate":"2019-12-20 02:39:40","commitOrder":3,"curCode":"    public void onNextAfterComplete() {\n        TestObserver<Integer> to = new TestObserver<Integer>();\n\n        SafeObserver<Integer> so = new SafeObserver<Integer>(to);\n\n        Disposable d = Disposable.empty();\n\n        so.onSubscribe(d);\n\n        so.onComplete();\n\n        so.onNext(1);\n\n        so.onError(new TestException());\n\n        so.onComplete();\n\n        to.assertResult();\n    }\n","date":"2019-12-20 02:39:40","endLine":242,"groupId":"6645","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"onNextAfterComplete","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/44/6dfe20df011b417e4acaf4cf458fb8be99a46f.src","preCode":"    public void onNextAfterComplete() {\n        TestObserver<Integer> to = new TestObserver<Integer>();\n\n        SafeObserver<Integer> so = new SafeObserver<Integer>(to);\n\n        Disposable d = Disposables.empty();\n\n        so.onSubscribe(d);\n\n        so.onComplete();\n\n        so.onNext(1);\n\n        so.onError(new TestException());\n\n        so.onComplete();\n\n        to.assertResult();\n    }\n","realPath":"src/test/java/io/reactivex/rxjava3/observers/SafeObserverTest.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":224,"status":"M"},{"authorDate":"2019-12-20 02:39:40","commitOrder":3,"curCode":"    public void nullOnNext() {\n\n        TestObserverEx<Integer> to = new TestObserverEx<Integer>();\n\n        final SerializedObserver<Integer> so = new SerializedObserver<Integer>(to);\n\n        Disposable d = Disposable.empty();\n\n        so.onSubscribe(d);\n\n        so.onNext(null);\n\n        to.assertFailureAndMessage(NullPointerException.class, ExceptionHelper.nullWarning(\"onNext called with a null value.\"));\n    }\n","date":"2019-12-20 02:39:40","endLine":1144,"groupId":"6645","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"nullOnNext","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/84/fa4348797dadfa9f21d91391f190799d103f39.src","preCode":"    public void nullOnNext() {\n\n        TestObserverEx<Integer> to = new TestObserverEx<Integer>();\n\n        final SerializedObserver<Integer> so = new SerializedObserver<Integer>(to);\n\n        Disposable d = Disposables.empty();\n\n        so.onSubscribe(d);\n\n        so.onNext(null);\n\n        to.assertFailureAndMessage(NullPointerException.class, ExceptionHelper.nullWarning(\"onNext called with a null value.\"));\n    }\n","realPath":"src/test/java/io/reactivex/rxjava3/observers/SerializedObserverTest.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":1131,"status":"M"}],"commitId":"166c529eb165b473c9bff11e8fedbde6c471b005","commitMessage":"@@@Migrate Disposables static factories to Disposable interface (#6781)\n\n","date":"2019-12-20 02:39:40","modifiedFileCount":"202","status":"M","submitter":"Jake Wharton"},{"authorTime":"2019-12-22 19:17:37","codes":[{"authorDate":"2019-12-22 19:17:37","commitOrder":4,"curCode":"    public void onNextAfterComplete() {\n        TestObserver<Integer> to = new TestObserver<>();\n\n        SafeObserver<Integer> so = new SafeObserver<>(to);\n\n        Disposable d = Disposable.empty();\n\n        so.onSubscribe(d);\n\n        so.onComplete();\n\n        so.onNext(1);\n\n        so.onError(new TestException());\n\n        so.onComplete();\n\n        to.assertResult();\n    }\n","date":"2019-12-22 19:17:37","endLine":242,"groupId":"10842","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"onNextAfterComplete","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/3a/fced2d4079e19c98e68771d91a99be63ec13fb.src","preCode":"    public void onNextAfterComplete() {\n        TestObserver<Integer> to = new TestObserver<Integer>();\n\n        SafeObserver<Integer> so = new SafeObserver<Integer>(to);\n\n        Disposable d = Disposable.empty();\n\n        so.onSubscribe(d);\n\n        so.onComplete();\n\n        so.onNext(1);\n\n        so.onError(new TestException());\n\n        so.onComplete();\n\n        to.assertResult();\n    }\n","realPath":"src/test/java/io/reactivex/rxjava3/observers/SafeObserverTest.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":224,"status":"M"},{"authorDate":"2019-12-22 19:17:37","commitOrder":4,"curCode":"    public void nullOnNext() {\n\n        TestObserverEx<Integer> to = new TestObserverEx<>();\n\n        final SerializedObserver<Integer> so = new SerializedObserver<>(to);\n\n        Disposable d = Disposable.empty();\n\n        so.onSubscribe(d);\n\n        so.onNext(null);\n\n        to.assertFailureAndMessage(NullPointerException.class, ExceptionHelper.nullWarning(\"onNext called with a null value.\"));\n    }\n","date":"2019-12-22 19:17:37","endLine":1144,"groupId":"10842","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"nullOnNext","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/e5/81012d9bc73cdcf9768536a5765f2e23a5855d.src","preCode":"    public void nullOnNext() {\n\n        TestObserverEx<Integer> to = new TestObserverEx<Integer>();\n\n        final SerializedObserver<Integer> so = new SerializedObserver<Integer>(to);\n\n        Disposable d = Disposable.empty();\n\n        so.onSubscribe(d);\n\n        so.onNext(null);\n\n        to.assertFailureAndMessage(NullPointerException.class, ExceptionHelper.nullWarning(\"onNext called with a null value.\"));\n    }\n","realPath":"src/test/java/io/reactivex/rxjava3/observers/SerializedObserverTest.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":1131,"status":"M"}],"commitId":"0bd2a0152b64723ac3daf3e2fbad3d59c7f3bbb8","commitMessage":"@@@diamond operators in unit tests.  small packages (#6789)\n\n","date":"2019-12-22 19:17:37","modifiedFileCount":"106","status":"M","submitter":"Dmitry Volkov"}]
