[{"authorTime":"2019-08-16 20:51:17","codes":[{"authorDate":"2019-08-16 20:51:17","commitOrder":1,"curCode":"    public void andThen() {\n        TestSubscriber<String> ts = new TestSubscriber<String>(0);\n        Completable.complete().andThen(Flowable.just(\"foo\")).subscribe(ts);\n        ts.request(1);\n        ts.assertValue(\"foo\");\n        ts.assertComplete();\n        ts.assertNoErrors();\n\n        TestObserver<String> to = new TestObserver<String>();\n        Completable.complete().andThen(Observable.just(\"foo\")).subscribe(to);\n        to.assertValue(\"foo\");\n        to.assertComplete();\n        to.assertNoErrors();\n    }\n","date":"2019-08-16 20:51:17","endLine":3456,"groupId":"8839","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"andThen","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/eb/e1303bd2b987d4d90457fd728986ee9ab7f37c.src","preCode":"    public void andThen() {\n        TestSubscriber<String> ts = new TestSubscriber<String>(0);\n        Completable.complete().andThen(Flowable.just(\"foo\")).subscribe(ts);\n        ts.request(1);\n        ts.assertValue(\"foo\");\n        ts.assertComplete();\n        ts.assertNoErrors();\n\n        TestObserver<String> to = new TestObserver<String>();\n        Completable.complete().andThen(Observable.just(\"foo\")).subscribe(to);\n        to.assertValue(\"foo\");\n        to.assertComplete();\n        to.assertNoErrors();\n    }\n","realPath":"src/test/java/io/reactivex/rxjava3/completable/CompletableTest.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":3443,"status":"B"},{"authorDate":"2019-08-16 20:51:17","commitOrder":1,"curCode":"    public void andThenSingle() {\n        TestSubscriber<String> ts = new TestSubscriber<String>(0);\n        Completable.complete().andThen(Single.just(\"foo\")).toFlowable().subscribe(ts);\n        ts.request(1);\n        ts.assertValue(\"foo\");\n        ts.assertComplete();\n        ts.assertNoErrors();\n    }\n","date":"2019-08-16 20:51:17","endLine":4287,"groupId":"6322","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"andThenSingle","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/eb/e1303bd2b987d4d90457fd728986ee9ab7f37c.src","preCode":"    public void andThenSingle() {\n        TestSubscriber<String> ts = new TestSubscriber<String>(0);\n        Completable.complete().andThen(Single.just(\"foo\")).toFlowable().subscribe(ts);\n        ts.request(1);\n        ts.assertValue(\"foo\");\n        ts.assertComplete();\n        ts.assertNoErrors();\n    }\n","realPath":"src/test/java/io/reactivex/rxjava3/completable/CompletableTest.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":4280,"status":"B"}],"commitId":"a1693ecc9215027a7a3eae75272979ebb4d79a27","commitMessage":"@@@3.x: Refactor to io.reactivex.rxjava3.** (#6621)\n\n* 3.x: Refactor to io.reactivex.rxjava3.**\n\n* fix javadoc cleanup gradle\n\n* javadoc gradle again\n\n* Fix package location in text\n","date":"2019-08-16 20:51:17","modifiedFileCount":"0","status":"B","submitter":"David Karnok"},{"authorTime":"2019-12-22 19:17:37","codes":[{"authorDate":"2019-12-22 19:17:37","commitOrder":2,"curCode":"    public void andThen() {\n        TestSubscriber<String> ts = new TestSubscriber<>(0);\n        Completable.complete().andThen(Flowable.just(\"foo\")).subscribe(ts);\n        ts.request(1);\n        ts.assertValue(\"foo\");\n        ts.assertComplete();\n        ts.assertNoErrors();\n\n        TestObserver<String> to = new TestObserver<>();\n        Completable.complete().andThen(Observable.just(\"foo\")).subscribe(to);\n        to.assertValue(\"foo\");\n        to.assertComplete();\n        to.assertNoErrors();\n    }\n","date":"2019-12-22 19:17:37","endLine":3456,"groupId":"108266","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"andThen","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/d3/19e48861056cdbdbe461f2adddbe3aabed323c.src","preCode":"    public void andThen() {\n        TestSubscriber<String> ts = new TestSubscriber<String>(0);\n        Completable.complete().andThen(Flowable.just(\"foo\")).subscribe(ts);\n        ts.request(1);\n        ts.assertValue(\"foo\");\n        ts.assertComplete();\n        ts.assertNoErrors();\n\n        TestObserver<String> to = new TestObserver<String>();\n        Completable.complete().andThen(Observable.just(\"foo\")).subscribe(to);\n        to.assertValue(\"foo\");\n        to.assertComplete();\n        to.assertNoErrors();\n    }\n","realPath":"src/test/java/io/reactivex/rxjava3/completable/CompletableTest.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":3443,"status":"M"},{"authorDate":"2019-12-22 19:17:37","commitOrder":2,"curCode":"    public void andThenSingle() {\n        TestSubscriber<String> ts = new TestSubscriber<>(0);\n        Completable.complete().andThen(Single.just(\"foo\")).toFlowable().subscribe(ts);\n        ts.request(1);\n        ts.assertValue(\"foo\");\n        ts.assertComplete();\n        ts.assertNoErrors();\n    }\n","date":"2019-12-22 19:17:37","endLine":4287,"groupId":"108266","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"andThenSingle","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/d3/19e48861056cdbdbe461f2adddbe3aabed323c.src","preCode":"    public void andThenSingle() {\n        TestSubscriber<String> ts = new TestSubscriber<String>(0);\n        Completable.complete().andThen(Single.just(\"foo\")).toFlowable().subscribe(ts);\n        ts.request(1);\n        ts.assertValue(\"foo\");\n        ts.assertComplete();\n        ts.assertNoErrors();\n    }\n","realPath":"src/test/java/io/reactivex/rxjava3/completable/CompletableTest.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":4280,"status":"M"}],"commitId":"0bd2a0152b64723ac3daf3e2fbad3d59c7f3bbb8","commitMessage":"@@@diamond operators in unit tests.  small packages (#6789)\n\n","date":"2019-12-22 19:17:37","modifiedFileCount":"106","status":"M","submitter":"Dmitry Volkov"}]
