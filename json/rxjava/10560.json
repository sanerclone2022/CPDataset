[{"authorTime":"2019-08-16 20:51:17","codes":[{"authorDate":"2019-08-16 20:51:17","commitOrder":1,"curCode":"    public void assertNotMatchCount() {\n        Observable<Integer> oi = Observable.fromIterable(Arrays.asList(1, 2));\n        TestObserverEx<Integer> subscriber = new TestObserverEx<Integer>();\n        oi.subscribe(subscriber);\n\n        thrown.expect(AssertionError.class);\n        \r\n\r\n\n        subscriber.assertValue(1);\n        subscriber.assertValueCount(2);\n        subscriber.assertTerminated();\n    }\n","date":"2019-08-16 20:51:17","endLine":69,"groupId":"10127","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"assertNotMatchCount","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/6f/8d3e25ccf358fbeb29feb01d0bb6b8a3ff187d.src","preCode":"    public void assertNotMatchCount() {\n        Observable<Integer> oi = Observable.fromIterable(Arrays.asList(1, 2));\n        TestObserverEx<Integer> subscriber = new TestObserverEx<Integer>();\n        oi.subscribe(subscriber);\n\n        thrown.expect(AssertionError.class);\n        \r\n\r\n\n        subscriber.assertValue(1);\n        subscriber.assertValueCount(2);\n        subscriber.assertTerminated();\n    }\n","realPath":"src/test/java/io/reactivex/rxjava3/testsupport/TestObserverExTest.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":57,"status":"B"},{"authorDate":"2019-08-16 20:51:17","commitOrder":1,"curCode":"    public void assertNeverAtNotMatchingValue() {\n        Observable<Integer> oi = Observable.fromIterable(Arrays.asList(1, 2));\n        TestObserverEx<Integer> subscriber = new TestObserverEx<Integer>();\n        oi.subscribe(subscriber);\n\n        subscriber.assertNever(3);\n        subscriber.assertValueCount(2);\n        subscriber.assertTerminated();\n    }\n","date":"2019-08-16 20:51:17","endLine":95,"groupId":"12731","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"assertNeverAtNotMatchingValue","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/6f/8d3e25ccf358fbeb29feb01d0bb6b8a3ff187d.src","preCode":"    public void assertNeverAtNotMatchingValue() {\n        Observable<Integer> oi = Observable.fromIterable(Arrays.asList(1, 2));\n        TestObserverEx<Integer> subscriber = new TestObserverEx<Integer>();\n        oi.subscribe(subscriber);\n\n        subscriber.assertNever(3);\n        subscriber.assertValueCount(2);\n        subscriber.assertTerminated();\n    }\n","realPath":"src/test/java/io/reactivex/rxjava3/testsupport/TestObserverExTest.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":87,"status":"B"}],"commitId":"a1693ecc9215027a7a3eae75272979ebb4d79a27","commitMessage":"@@@3.x: Refactor to io.reactivex.rxjava3.** (#6621)\n\n* 3.x: Refactor to io.reactivex.rxjava3.**\n\n* fix javadoc cleanup gradle\n\n* javadoc gradle again\n\n* Fix package location in text\n","date":"2019-08-16 20:51:17","modifiedFileCount":"0","status":"B","submitter":"David Karnok"},{"authorTime":"2019-12-22 19:17:37","codes":[{"authorDate":"2019-12-22 19:17:37","commitOrder":2,"curCode":"    public void assertNotMatchCount() {\n        Observable<Integer> oi = Observable.fromIterable(Arrays.asList(1, 2));\n        TestObserverEx<Integer> subscriber = new TestObserverEx<>();\n        oi.subscribe(subscriber);\n\n        thrown.expect(AssertionError.class);\n        \r\n\r\n\n        subscriber.assertValue(1);\n        subscriber.assertValueCount(2);\n        subscriber.assertTerminated();\n    }\n","date":"2019-12-22 19:17:37","endLine":69,"groupId":"6806","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"assertNotMatchCount","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/9e/e8a1cfc5ea1c28001483d56d15a9a8427e1633.src","preCode":"    public void assertNotMatchCount() {\n        Observable<Integer> oi = Observable.fromIterable(Arrays.asList(1, 2));\n        TestObserverEx<Integer> subscriber = new TestObserverEx<Integer>();\n        oi.subscribe(subscriber);\n\n        thrown.expect(AssertionError.class);\n        \r\n\r\n\n        subscriber.assertValue(1);\n        subscriber.assertValueCount(2);\n        subscriber.assertTerminated();\n    }\n","realPath":"src/test/java/io/reactivex/rxjava3/testsupport/TestObserverExTest.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":57,"status":"M"},{"authorDate":"2019-12-22 19:17:37","commitOrder":2,"curCode":"    public void assertNeverAtNotMatchingValue() {\n        Observable<Integer> oi = Observable.fromIterable(Arrays.asList(1, 2));\n        TestObserverEx<Integer> subscriber = new TestObserverEx<>();\n        oi.subscribe(subscriber);\n\n        subscriber.assertNever(3);\n        subscriber.assertValueCount(2);\n        subscriber.assertTerminated();\n    }\n","date":"2019-12-22 19:17:37","endLine":95,"groupId":"11720","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"assertNeverAtNotMatchingValue","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/9e/e8a1cfc5ea1c28001483d56d15a9a8427e1633.src","preCode":"    public void assertNeverAtNotMatchingValue() {\n        Observable<Integer> oi = Observable.fromIterable(Arrays.asList(1, 2));\n        TestObserverEx<Integer> subscriber = new TestObserverEx<Integer>();\n        oi.subscribe(subscriber);\n\n        subscriber.assertNever(3);\n        subscriber.assertValueCount(2);\n        subscriber.assertTerminated();\n    }\n","realPath":"src/test/java/io/reactivex/rxjava3/testsupport/TestObserverExTest.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":87,"status":"M"}],"commitId":"0bd2a0152b64723ac3daf3e2fbad3d59c7f3bbb8","commitMessage":"@@@diamond operators in unit tests.  small packages (#6789)\n\n","date":"2019-12-22 19:17:37","modifiedFileCount":"106","status":"M","submitter":"Dmitry Volkov"},{"authorTime":"2019-12-22 19:17:37","codes":[{"authorDate":"2020-01-07 16:33:23","commitOrder":3,"curCode":"    public void assertNotMatchCount() {\n        assertThrows(AssertionError.class, () -> {\n            Observable<Integer> oi = Observable.fromIterable(Arrays.asList(1, 2));\n            TestObserverEx<Integer> subscriber = new TestObserverEx<>();\n            oi.subscribe(subscriber);\n\n            subscriber.assertValue(1);\n            subscriber.assertValueCount(2);\n            subscriber.assertTerminated();\n        });\n    }\n","date":"2020-01-07 16:33:23","endLine":63,"groupId":"10560","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"assertNotMatchCount","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/60/26501a1d19e2f5f51cfc45e7eaef1323dd4c93.src","preCode":"    public void assertNotMatchCount() {\n        Observable<Integer> oi = Observable.fromIterable(Arrays.asList(1, 2));\n        TestObserverEx<Integer> subscriber = new TestObserverEx<>();\n        oi.subscribe(subscriber);\n\n        thrown.expect(AssertionError.class);\n        \r\n\r\n\n        subscriber.assertValue(1);\n        subscriber.assertValueCount(2);\n        subscriber.assertTerminated();\n    }\n","realPath":"src/test/java/io/reactivex/rxjava3/testsupport/TestObserverExTest.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":53,"status":"M"},{"authorDate":"2019-12-22 19:17:37","commitOrder":3,"curCode":"    public void assertNeverAtNotMatchingValue() {\n        Observable<Integer> oi = Observable.fromIterable(Arrays.asList(1, 2));\n        TestObserverEx<Integer> subscriber = new TestObserverEx<>();\n        oi.subscribe(subscriber);\n\n        subscriber.assertNever(3);\n        subscriber.assertValueCount(2);\n        subscriber.assertTerminated();\n    }\n","date":"2019-12-22 19:17:37","endLine":95,"groupId":"10560","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"assertNeverAtNotMatchingValue","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/9e/e8a1cfc5ea1c28001483d56d15a9a8427e1633.src","preCode":"    public void assertNeverAtNotMatchingValue() {\n        Observable<Integer> oi = Observable.fromIterable(Arrays.asList(1, 2));\n        TestObserverEx<Integer> subscriber = new TestObserverEx<>();\n        oi.subscribe(subscriber);\n\n        subscriber.assertNever(3);\n        subscriber.assertValueCount(2);\n        subscriber.assertTerminated();\n    }\n","realPath":"src/test/java/io/reactivex/rxjava3/testsupport/TestObserverExTest.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":87,"status":"N"}],"commitId":"45c0b064dcaea7ac3d55249c04a62370ebf4b4a9","commitMessage":"@@@3.x: Fix Junit 4.13 deprecated API use (#6813)\n\n","date":"2020-01-07 16:33:23","modifiedFileCount":"4","status":"M","submitter":"David Karnok"}]
