[{"authorTime":"2019-08-16 20:51:17","codes":[{"authorDate":"2019-08-16 20:51:17","commitOrder":1,"curCode":"    public void callableCrash() {\n        Observable.just(1).hide()\n        .concatMap(Functions.justFunction(Observable.fromCallable(new Callable<Object>() {\n            @Override\n            public Object call() throws Exception {\n                throw new TestException();\n            }\n        })), 2, ImmediateThinScheduler.INSTANCE)\n        .test()\n        .assertFailure(TestException.class);\n    }\n","date":"2019-08-16 20:51:17","endLine":755,"groupId":"7655","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"callableCrash","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/1b/7bb0d8b82be57d4fabd68bfde810dd4ba1c083.src","preCode":"    public void callableCrash() {\n        Observable.just(1).hide()\n        .concatMap(Functions.justFunction(Observable.fromCallable(new Callable<Object>() {\n            @Override\n            public Object call() throws Exception {\n                throw new TestException();\n            }\n        })), 2, ImmediateThinScheduler.INSTANCE)\n        .test()\n        .assertFailure(TestException.class);\n    }\n","realPath":"src/test/java/io/reactivex/rxjava3/internal/operators/observable/ObservableConcatMapSchedulerTest.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":745,"status":"B"},{"authorDate":"2019-08-16 20:51:17","commitOrder":1,"curCode":"    public void callableCrashDelayError() {\n        Flowable.just(1).hide()\n        .concatMapDelayError(Functions.justFunction(Flowable.fromCallable(new Callable<Object>() {\n            @Override\n            public Object call() throws Exception {\n                throw new TestException();\n            }\n        })), 2, true, ImmediateThinScheduler.INSTANCE)\n        .test()\n        .assertFailure(TestException.class);\n    }\n","date":"2019-08-16 20:51:17","endLine":775,"groupId":"7655","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"callableCrashDelayError","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/14/93d7aec7a976aa4572ddd2bee6d535a6d1ec5b.src","preCode":"    public void callableCrashDelayError() {\n        Flowable.just(1).hide()\n        .concatMapDelayError(Functions.justFunction(Flowable.fromCallable(new Callable<Object>() {\n            @Override\n            public Object call() throws Exception {\n                throw new TestException();\n            }\n        })), 2, true, ImmediateThinScheduler.INSTANCE)\n        .test()\n        .assertFailure(TestException.class);\n    }\n","realPath":"src/test/java/io/reactivex/rxjava3/internal/operators/flowable/FlowableConcatMapSchedulerTest.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":765,"status":"B"}],"commitId":"a1693ecc9215027a7a3eae75272979ebb4d79a27","commitMessage":"@@@3.x: Refactor to io.reactivex.rxjava3.** (#6621)\n\n* 3.x: Refactor to io.reactivex.rxjava3.**\n\n* fix javadoc cleanup gradle\n\n* javadoc gradle again\n\n* Fix package location in text\n","date":"2019-08-16 20:51:17","modifiedFileCount":"0","status":"B","submitter":"David Karnok"},{"authorTime":"2019-08-28 19:19:49","codes":[{"authorDate":"2019-08-16 20:51:17","commitOrder":2,"curCode":"    public void callableCrash() {\n        Observable.just(1).hide()\n        .concatMap(Functions.justFunction(Observable.fromCallable(new Callable<Object>() {\n            @Override\n            public Object call() throws Exception {\n                throw new TestException();\n            }\n        })), 2, ImmediateThinScheduler.INSTANCE)\n        .test()\n        .assertFailure(TestException.class);\n    }\n","date":"2019-08-16 20:51:17","endLine":755,"groupId":"104161","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"callableCrash","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/1b/7bb0d8b82be57d4fabd68bfde810dd4ba1c083.src","preCode":"    public void callableCrash() {\n        Observable.just(1).hide()\n        .concatMap(Functions.justFunction(Observable.fromCallable(new Callable<Object>() {\n            @Override\n            public Object call() throws Exception {\n                throw new TestException();\n            }\n        })), 2, ImmediateThinScheduler.INSTANCE)\n        .test()\n        .assertFailure(TestException.class);\n    }\n","realPath":"src/test/java/io/reactivex/rxjava3/internal/operators/observable/ObservableConcatMapSchedulerTest.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":745,"status":"N"},{"authorDate":"2019-08-28 19:19:49","commitOrder":2,"curCode":"    public void callableCrashDelayError() {\n        Flowable.just(1).hide()\n        .concatMapDelayError(Functions.justFunction(Flowable.fromCallable(new Callable<Object>() {\n            @Override\n            public Object call() throws Exception {\n                throw new TestException();\n            }\n        })), true, 2, ImmediateThinScheduler.INSTANCE)\n        .test()\n        .assertFailure(TestException.class);\n    }\n","date":"2019-08-28 19:19:49","endLine":775,"groupId":"104161","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"callableCrashDelayError","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/fc/8d665559789fd6f6f18479a8ae7d0e90e429ed.src","preCode":"    public void callableCrashDelayError() {\n        Flowable.just(1).hide()\n        .concatMapDelayError(Functions.justFunction(Flowable.fromCallable(new Callable<Object>() {\n            @Override\n            public Object call() throws Exception {\n                throw new TestException();\n            }\n        })), 2, true, ImmediateThinScheduler.INSTANCE)\n        .test()\n        .assertFailure(TestException.class);\n    }\n","realPath":"src/test/java/io/reactivex/rxjava3/internal/operators/flowable/FlowableConcatMapSchedulerTest.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":765,"status":"M"}],"commitId":"f1441b00f3cc174ab5ef47e3339156d8a7c2a1f5","commitMessage":"@@@3.x: Rename zipIterable.  remove zip(O(O)).  adjust concatMapX arg order (#6638)\n\n","date":"2019-08-28 19:19:49","modifiedFileCount":"12","status":"M","submitter":"David Karnok"}]
