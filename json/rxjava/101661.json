[{"authorTime":"2019-08-16 20:51:17","codes":[{"authorDate":"2019-08-16 20:51:17","commitOrder":1,"curCode":"    void drainFused(Observer<? super T> a) {\n        int missed = 1;\n\n        final SpscLinkedArrayQueue<T> q = queue;\n        final boolean failFast = !delayError;\n\n        for (;;) {\n\n            if (disposed) {\n                downstream.lazySet(null);\n                q.clear();\n                return;\n            }\n            boolean d = done;\n\n            if (failFast && d) {\n                if (failedFast(q, a)) {\n                    return;\n                }\n            }\n\n            a.onNext(null);\n\n            if (d) {\n                errorOrComplete(a);\n                return;\n            }\n\n            missed = wip.addAndGet(-missed);\n            if (missed == 0) {\n                break;\n            }\n        }\n    }\n","date":"2019-08-16 20:51:17","endLine":443,"groupId":"8180","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"drainFused","params":"(Observer<?superT>a)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/76/7e3eb3329049234ecf4303ecf883132e46263f.src","preCode":"    void drainFused(Observer<? super T> a) {\n        int missed = 1;\n\n        final SpscLinkedArrayQueue<T> q = queue;\n        final boolean failFast = !delayError;\n\n        for (;;) {\n\n            if (disposed) {\n                downstream.lazySet(null);\n                q.clear();\n                return;\n            }\n            boolean d = done;\n\n            if (failFast && d) {\n                if (failedFast(q, a)) {\n                    return;\n                }\n            }\n\n            a.onNext(null);\n\n            if (d) {\n                errorOrComplete(a);\n                return;\n            }\n\n            missed = wip.addAndGet(-missed);\n            if (missed == 0) {\n                break;\n            }\n        }\n    }\n","realPath":"src/main/java/io/reactivex/rxjava3/subjects/UnicastSubject.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":410,"status":"B"},{"authorDate":"2019-08-16 20:51:17","commitOrder":1,"curCode":"    void drainFused(Subscriber<? super T> a) {\n        int missed = 1;\n\n        final SpscLinkedArrayQueue<T> q = queue;\n        final boolean failFast = !delayError;\n        for (;;) {\n\n            if (cancelled) {\n                q.clear();\n                downstream.lazySet(null);\n                return;\n            }\n\n            boolean d = done;\n\n            if (failFast && d && error != null) {\n                q.clear();\n                downstream.lazySet(null);\n                a.onError(error);\n                return;\n            }\n            a.onNext(null);\n\n            if (d) {\n                downstream.lazySet(null);\n\n                Throwable ex = error;\n                if (ex != null) {\n                    a.onError(ex);\n                } else {\n                    a.onComplete();\n                }\n                return;\n            }\n\n            missed = wip.addAndGet(-missed);\n            if (missed == 0) {\n                break;\n            }\n        }\n    }\n","date":"2019-08-16 20:51:17","endLine":380,"groupId":"8837","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"drainFused","params":"(Subscriber<?superT>a)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/31/b9f4aca40b27fe75b6503e45b3d13b7db36c3f.src","preCode":"    void drainFused(Subscriber<? super T> a) {\n        int missed = 1;\n\n        final SpscLinkedArrayQueue<T> q = queue;\n        final boolean failFast = !delayError;\n        for (;;) {\n\n            if (cancelled) {\n                q.clear();\n                downstream.lazySet(null);\n                return;\n            }\n\n            boolean d = done;\n\n            if (failFast && d && error != null) {\n                q.clear();\n                downstream.lazySet(null);\n                a.onError(error);\n                return;\n            }\n            a.onNext(null);\n\n            if (d) {\n                downstream.lazySet(null);\n\n                Throwable ex = error;\n                if (ex != null) {\n                    a.onError(ex);\n                } else {\n                    a.onComplete();\n                }\n                return;\n            }\n\n            missed = wip.addAndGet(-missed);\n            if (missed == 0) {\n                break;\n            }\n        }\n    }\n","realPath":"src/main/java/io/reactivex/rxjava3/processors/UnicastProcessor.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":340,"status":"B"}],"commitId":"a1693ecc9215027a7a3eae75272979ebb4d79a27","commitMessage":"@@@3.x: Refactor to io.reactivex.rxjava3.** (#6621)\n\n* 3.x: Refactor to io.reactivex.rxjava3.**\n\n* fix javadoc cleanup gradle\n\n* javadoc gradle again\n\n* Fix package location in text\n","date":"2019-08-16 20:51:17","modifiedFileCount":"0","status":"B","submitter":"David Karnok"},{"authorTime":"2019-10-17 21:44:37","codes":[{"authorDate":"2019-10-17 21:44:37","commitOrder":2,"curCode":"    void drainFused(Observer<? super T> a) {\n        int missed = 1;\n\n        final SpscLinkedArrayQueue<T> q = queue;\n        final boolean failFast = !delayError;\n\n        for (;;) {\n\n            if (disposed) {\n                downstream.lazySet(null);\n                return;\n            }\n            boolean d = done;\n\n            if (failFast && d) {\n                if (failedFast(q, a)) {\n                    return;\n                }\n            }\n\n            a.onNext(null);\n\n            if (d) {\n                errorOrComplete(a);\n                return;\n            }\n\n            missed = wip.addAndGet(-missed);\n            if (missed == 0) {\n                break;\n            }\n        }\n    }\n","date":"2019-10-17 21:44:37","endLine":443,"groupId":"8180","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"drainFused","params":"(Observer<?superT>a)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/be/824a770804c04c1a09dbf3a949be4dbc61a50a.src","preCode":"    void drainFused(Observer<? super T> a) {\n        int missed = 1;\n\n        final SpscLinkedArrayQueue<T> q = queue;\n        final boolean failFast = !delayError;\n\n        for (;;) {\n\n            if (disposed) {\n                downstream.lazySet(null);\n                q.clear();\n                return;\n            }\n            boolean d = done;\n\n            if (failFast && d) {\n                if (failedFast(q, a)) {\n                    return;\n                }\n            }\n\n            a.onNext(null);\n\n            if (d) {\n                errorOrComplete(a);\n                return;\n            }\n\n            missed = wip.addAndGet(-missed);\n            if (missed == 0) {\n                break;\n            }\n        }\n    }\n","realPath":"src/main/java/io/reactivex/rxjava3/subjects/UnicastSubject.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":411,"status":"M"},{"authorDate":"2019-10-17 21:44:37","commitOrder":2,"curCode":"    void drainFused(Subscriber<? super T> a) {\n        int missed = 1;\n\n        final SpscLinkedArrayQueue<T> q = queue;\n        final boolean failFast = !delayError;\n        for (;;) {\n\n            if (cancelled) {\n                downstream.lazySet(null);\n                return;\n            }\n\n            boolean d = done;\n\n            if (failFast && d && error != null) {\n                q.clear();\n                downstream.lazySet(null);\n                a.onError(error);\n                return;\n            }\n            a.onNext(null);\n\n            if (d) {\n                downstream.lazySet(null);\n\n                Throwable ex = error;\n                if (ex != null) {\n                    a.onError(ex);\n                } else {\n                    a.onComplete();\n                }\n                return;\n            }\n\n            missed = wip.addAndGet(-missed);\n            if (missed == 0) {\n                break;\n            }\n        }\n    }\n","date":"2019-10-17 21:44:37","endLine":379,"groupId":"8837","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"drainFused","params":"(Subscriber<?superT>a)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/a3/715103d5525a51e9b65723a379f67ef401607d.src","preCode":"    void drainFused(Subscriber<? super T> a) {\n        int missed = 1;\n\n        final SpscLinkedArrayQueue<T> q = queue;\n        final boolean failFast = !delayError;\n        for (;;) {\n\n            if (cancelled) {\n                q.clear();\n                downstream.lazySet(null);\n                return;\n            }\n\n            boolean d = done;\n\n            if (failFast && d && error != null) {\n                q.clear();\n                downstream.lazySet(null);\n                a.onError(error);\n                return;\n            }\n            a.onNext(null);\n\n            if (d) {\n                downstream.lazySet(null);\n\n                Throwable ex = error;\n                if (ex != null) {\n                    a.onError(ex);\n                } else {\n                    a.onComplete();\n                }\n                return;\n            }\n\n            missed = wip.addAndGet(-missed);\n            if (missed == 0) {\n                break;\n            }\n        }\n    }\n","realPath":"src/main/java/io/reactivex/rxjava3/processors/UnicastProcessor.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":340,"status":"M"}],"commitId":"2f27ea4a8905602ebaa3ad492dad1fb642b5a7d1","commitMessage":"@@@3.x: Fix concurrent clear() calls when fused chains are canceled (#6676)\n\n","date":"2019-10-17 21:44:37","modifiedFileCount":"8","status":"M","submitter":"David Karnok"},{"authorTime":"2020-01-14 15:49:53","codes":[{"authorDate":"2019-10-17 21:44:37","commitOrder":3,"curCode":"    void drainFused(Observer<? super T> a) {\n        int missed = 1;\n\n        final SpscLinkedArrayQueue<T> q = queue;\n        final boolean failFast = !delayError;\n\n        for (;;) {\n\n            if (disposed) {\n                downstream.lazySet(null);\n                return;\n            }\n            boolean d = done;\n\n            if (failFast && d) {\n                if (failedFast(q, a)) {\n                    return;\n                }\n            }\n\n            a.onNext(null);\n\n            if (d) {\n                errorOrComplete(a);\n                return;\n            }\n\n            missed = wip.addAndGet(-missed);\n            if (missed == 0) {\n                break;\n            }\n        }\n    }\n","date":"2019-10-17 21:44:37","endLine":443,"groupId":"8180","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"drainFused","params":"(Observer<?superT>a)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/be/824a770804c04c1a09dbf3a949be4dbc61a50a.src","preCode":"    void drainFused(Observer<? super T> a) {\n        int missed = 1;\n\n        final SpscLinkedArrayQueue<T> q = queue;\n        final boolean failFast = !delayError;\n\n        for (;;) {\n\n            if (disposed) {\n                downstream.lazySet(null);\n                return;\n            }\n            boolean d = done;\n\n            if (failFast && d) {\n                if (failedFast(q, a)) {\n                    return;\n                }\n            }\n\n            a.onNext(null);\n\n            if (d) {\n                errorOrComplete(a);\n                return;\n            }\n\n            missed = wip.addAndGet(-missed);\n            if (missed == 0) {\n                break;\n            }\n        }\n    }\n","realPath":"src/main/java/io/reactivex/rxjava3/subjects/UnicastSubject.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":411,"status":"N"},{"authorDate":"2020-01-14 15:49:53","commitOrder":3,"curCode":"    void drainFused(Subscriber<@NonNull ? super T> a) {\n        int missed = 1;\n\n        final SpscLinkedArrayQueue<T> q = queue;\n        final boolean failFast = !delayError;\n        for (;;) {\n\n            if (cancelled) {\n                downstream.lazySet(null);\n                return;\n            }\n\n            boolean d = done;\n\n            if (failFast && d && error != null) {\n                q.clear();\n                downstream.lazySet(null);\n                a.onError(error);\n                return;\n            }\n            a.onNext(null);\n\n            if (d) {\n                downstream.lazySet(null);\n\n                Throwable ex = error;\n                if (ex != null) {\n                    a.onError(ex);\n                } else {\n                    a.onComplete();\n                }\n                return;\n            }\n\n            missed = wip.addAndGet(-missed);\n            if (missed == 0) {\n                break;\n            }\n        }\n    }\n","date":"2020-01-14 15:49:53","endLine":368,"groupId":"8837","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"drainFused","params":"(Subscriber<@NonNull?superT>a)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/7d/7e20a07511b59591a4b507997761c58ac71834.src","preCode":"    void drainFused(Subscriber<? super T> a) {\n        int missed = 1;\n\n        final SpscLinkedArrayQueue<T> q = queue;\n        final boolean failFast = !delayError;\n        for (;;) {\n\n            if (cancelled) {\n                downstream.lazySet(null);\n                return;\n            }\n\n            boolean d = done;\n\n            if (failFast && d && error != null) {\n                q.clear();\n                downstream.lazySet(null);\n                a.onError(error);\n                return;\n            }\n            a.onNext(null);\n\n            if (d) {\n                downstream.lazySet(null);\n\n                Throwable ex = error;\n                if (ex != null) {\n                    a.onError(ex);\n                } else {\n                    a.onComplete();\n                }\n                return;\n            }\n\n            missed = wip.addAndGet(-missed);\n            if (missed == 0) {\n                break;\n            }\n        }\n    }\n","realPath":"src/main/java/io/reactivex/rxjava3/processors/UnicastProcessor.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":329,"status":"M"}],"commitId":"fb6dab6847d858b22fe6a36558cf3b62dc10627d","commitMessage":"@@@3.x: Add nullability annotations to type arguments (#6840)\n\n","date":"2020-01-14 15:49:53","modifiedFileCount":"75","status":"M","submitter":"David Karnok"},{"authorTime":"2021-07-25 00:35:45","codes":[{"authorDate":"2019-10-17 21:44:37","commitOrder":4,"curCode":"    void drainFused(Observer<? super T> a) {\n        int missed = 1;\n\n        final SpscLinkedArrayQueue<T> q = queue;\n        final boolean failFast = !delayError;\n\n        for (;;) {\n\n            if (disposed) {\n                downstream.lazySet(null);\n                return;\n            }\n            boolean d = done;\n\n            if (failFast && d) {\n                if (failedFast(q, a)) {\n                    return;\n                }\n            }\n\n            a.onNext(null);\n\n            if (d) {\n                errorOrComplete(a);\n                return;\n            }\n\n            missed = wip.addAndGet(-missed);\n            if (missed == 0) {\n                break;\n            }\n        }\n    }\n","date":"2019-10-17 21:44:37","endLine":443,"groupId":"101661","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"drainFused","params":"(Observer<?superT>a)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/be/824a770804c04c1a09dbf3a949be4dbc61a50a.src","preCode":"    void drainFused(Observer<? super T> a) {\n        int missed = 1;\n\n        final SpscLinkedArrayQueue<T> q = queue;\n        final boolean failFast = !delayError;\n\n        for (;;) {\n\n            if (disposed) {\n                downstream.lazySet(null);\n                return;\n            }\n            boolean d = done;\n\n            if (failFast && d) {\n                if (failedFast(q, a)) {\n                    return;\n                }\n            }\n\n            a.onNext(null);\n\n            if (d) {\n                errorOrComplete(a);\n                return;\n            }\n\n            missed = wip.addAndGet(-missed);\n            if (missed == 0) {\n                break;\n            }\n        }\n    }\n","realPath":"src/main/java/io/reactivex/rxjava3/subjects/UnicastSubject.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":411,"status":"N"},{"authorDate":"2021-07-25 00:35:45","commitOrder":4,"curCode":"    void drainFused(Subscriber<? super T> a) {\n        int missed = 1;\n\n        final SpscLinkedArrayQueue<T> q = queue;\n        final boolean failFast = !delayError;\n        for (;;) {\n\n            if (cancelled) {\n                downstream.lazySet(null);\n                return;\n            }\n\n            boolean d = done;\n\n            if (failFast && d && error != null) {\n                q.clear();\n                downstream.lazySet(null);\n                a.onError(error);\n                return;\n            }\n            a.onNext(null);\n\n            if (d) {\n                downstream.lazySet(null);\n\n                Throwable ex = error;\n                if (ex != null) {\n                    a.onError(ex);\n                } else {\n                    a.onComplete();\n                }\n                return;\n            }\n\n            missed = wip.addAndGet(-missed);\n            if (missed == 0) {\n                break;\n            }\n        }\n    }\n","date":"2021-07-25 00:35:45","endLine":368,"groupId":"101661","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"drainFused","params":"(Subscriber<?superT>a)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/60/cc033bd649c47eff1384aa30e1a36b38c95b57.src","preCode":"    void drainFused(Subscriber<@NonNull ? super T> a) {\n        int missed = 1;\n\n        final SpscLinkedArrayQueue<T> q = queue;\n        final boolean failFast = !delayError;\n        for (;;) {\n\n            if (cancelled) {\n                downstream.lazySet(null);\n                return;\n            }\n\n            boolean d = done;\n\n            if (failFast && d && error != null) {\n                q.clear();\n                downstream.lazySet(null);\n                a.onError(error);\n                return;\n            }\n            a.onNext(null);\n\n            if (d) {\n                downstream.lazySet(null);\n\n                Throwable ex = error;\n                if (ex != null) {\n                    a.onError(ex);\n                } else {\n                    a.onComplete();\n                }\n                return;\n            }\n\n            missed = wip.addAndGet(-missed);\n            if (missed == 0) {\n                break;\n            }\n        }\n    }\n","realPath":"src/main/java/io/reactivex/rxjava3/processors/UnicastProcessor.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":329,"status":"M"}],"commitId":"40ca8eff4a0d6559258489cf282471f5e3b1a229","commitMessage":"@@@3.x: Move nullability annotations into the type argument declaration (#7303)\n\n* 3.x: Move nullability annotations into the type argument declaration\n\n* Reinforce Function<T.  R> return argument type where R is non-trivial","date":"2021-07-25 00:35:45","modifiedFileCount":"17","status":"M","submitter":"David Karnok"}]
