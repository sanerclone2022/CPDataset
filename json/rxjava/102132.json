[{"authorTime":"2019-08-16 20:51:17","codes":[{"authorDate":"2019-08-16 20:51:17","commitOrder":1,"curCode":"        public GroupByObserver(Observer<? super GroupedObservable<K, V>> actual, Function<? super T, ? extends K> keySelector, Function<? super T, ? extends V> valueSelector, int bufferSize, boolean delayError) {\n            this.downstream = actual;\n            this.keySelector = keySelector;\n            this.valueSelector = valueSelector;\n            this.bufferSize = bufferSize;\n            this.delayError = delayError;\n            this.groups = new ConcurrentHashMap<Object, GroupedUnicast<K, V>>();\n            this.lazySet(1);\n        }\n","date":"2019-08-16 20:51:17","endLine":76,"groupId":"3068","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"GroupByObserver","params":"(Observer<?superGroupedObservable<K@V>>actual@Function<?superT@?extendsK>keySelector@Function<?superT@?extendsV>valueSelector@intbufferSize@booleandelayError)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/77/eb93a8706cc36667fc506658fd62e92f6abec9.src","preCode":"        public GroupByObserver(Observer<? super GroupedObservable<K, V>> actual, Function<? super T, ? extends K> keySelector, Function<? super T, ? extends V> valueSelector, int bufferSize, boolean delayError) {\n            this.downstream = actual;\n            this.keySelector = keySelector;\n            this.valueSelector = valueSelector;\n            this.bufferSize = bufferSize;\n            this.delayError = delayError;\n            this.groups = new ConcurrentHashMap<Object, GroupedUnicast<K, V>>();\n            this.lazySet(1);\n        }\n","realPath":"src/main/java/io/reactivex/rxjava3/internal/operators/observable/ObservableGroupBy.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":68,"status":"B"},{"authorDate":"2019-08-16 20:51:17","commitOrder":1,"curCode":"        public GroupBySubscriber(Subscriber<? super GroupedFlowable<K, V>> actual, Function<? super T, ? extends K> keySelector,\n                Function<? super T, ? extends V> valueSelector, int bufferSize, boolean delayError,\n                Map<Object, GroupedUnicast<K, V>> groups, Queue<GroupedUnicast<K, V>> evictedGroups) {\n            this.downstream = actual;\n            this.keySelector = keySelector;\n            this.valueSelector = valueSelector;\n            this.bufferSize = bufferSize;\n            this.delayError = delayError;\n            this.groups = groups;\n            this.evictedGroups = evictedGroups;\n            this.queue = new SpscLinkedArrayQueue<GroupedFlowable<K, V>>(bufferSize);\n        }\n","date":"2019-08-16 20:51:17","endLine":119,"groupId":"3439","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"GroupBySubscriber","params":"(Subscriber<?superGroupedFlowable<K@V>>actual@Function<?superT@?extendsK>keySelector@Function<?superT@?extendsV>valueSelector@intbufferSize@booleandelayError@Map<Object@GroupedUnicast<K@V>>groups@Queue<GroupedUnicast<K@V>>evictedGroups)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/9d/a6e208b62889a3331ab72299bcb1ddd38bf89e.src","preCode":"        public GroupBySubscriber(Subscriber<? super GroupedFlowable<K, V>> actual, Function<? super T, ? extends K> keySelector,\n                Function<? super T, ? extends V> valueSelector, int bufferSize, boolean delayError,\n                Map<Object, GroupedUnicast<K, V>> groups, Queue<GroupedUnicast<K, V>> evictedGroups) {\n            this.downstream = actual;\n            this.keySelector = keySelector;\n            this.valueSelector = valueSelector;\n            this.bufferSize = bufferSize;\n            this.delayError = delayError;\n            this.groups = groups;\n            this.evictedGroups = evictedGroups;\n            this.queue = new SpscLinkedArrayQueue<GroupedFlowable<K, V>>(bufferSize);\n        }\n","realPath":"src/main/java/io/reactivex/rxjava3/internal/operators/flowable/FlowableGroupBy.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":108,"status":"B"}],"commitId":"a1693ecc9215027a7a3eae75272979ebb4d79a27","commitMessage":"@@@3.x: Refactor to io.reactivex.rxjava3.** (#6621)\n\n* 3.x: Refactor to io.reactivex.rxjava3.**\n\n* fix javadoc cleanup gradle\n\n* javadoc gradle again\n\n* Fix package location in text\n","date":"2019-08-16 20:51:17","modifiedFileCount":"0","status":"B","submitter":"David Karnok"},{"authorTime":"2019-12-06 15:59:14","codes":[{"authorDate":"2019-08-16 20:51:17","commitOrder":2,"curCode":"        public GroupByObserver(Observer<? super GroupedObservable<K, V>> actual, Function<? super T, ? extends K> keySelector, Function<? super T, ? extends V> valueSelector, int bufferSize, boolean delayError) {\n            this.downstream = actual;\n            this.keySelector = keySelector;\n            this.valueSelector = valueSelector;\n            this.bufferSize = bufferSize;\n            this.delayError = delayError;\n            this.groups = new ConcurrentHashMap<Object, GroupedUnicast<K, V>>();\n            this.lazySet(1);\n        }\n","date":"2019-08-16 20:51:17","endLine":76,"groupId":"3068","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"GroupByObserver","params":"(Observer<?superGroupedObservable<K@V>>actual@Function<?superT@?extendsK>keySelector@Function<?superT@?extendsV>valueSelector@intbufferSize@booleandelayError)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/77/eb93a8706cc36667fc506658fd62e92f6abec9.src","preCode":"        public GroupByObserver(Observer<? super GroupedObservable<K, V>> actual, Function<? super T, ? extends K> keySelector, Function<? super T, ? extends V> valueSelector, int bufferSize, boolean delayError) {\n            this.downstream = actual;\n            this.keySelector = keySelector;\n            this.valueSelector = valueSelector;\n            this.bufferSize = bufferSize;\n            this.delayError = delayError;\n            this.groups = new ConcurrentHashMap<Object, GroupedUnicast<K, V>>();\n            this.lazySet(1);\n        }\n","realPath":"src/main/java/io/reactivex/rxjava3/internal/operators/observable/ObservableGroupBy.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":68,"status":"N"},{"authorDate":"2019-12-06 15:59:14","commitOrder":2,"curCode":"        public GroupBySubscriber(Subscriber<? super GroupedFlowable<K, V>> actual, Function<? super T, ? extends K> keySelector,\n                Function<? super T, ? extends V> valueSelector, int bufferSize, boolean delayError,\n                Map<Object, GroupedUnicast<K, V>> groups, Queue<GroupedUnicast<K, V>> evictedGroups) {\n            this.downstream = actual;\n            this.keySelector = keySelector;\n            this.valueSelector = valueSelector;\n            this.bufferSize = bufferSize;\n            this.limit = bufferSize - (bufferSize >> 2);\n            this.delayError = delayError;\n            this.groups = groups;\n            this.evictedGroups = evictedGroups;\n        }\n","date":"2019-12-06 15:59:14","endLine":116,"groupId":"3439","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"GroupBySubscriber","params":"(Subscriber<?superGroupedFlowable<K@V>>actual@Function<?superT@?extendsK>keySelector@Function<?superT@?extendsV>valueSelector@intbufferSize@booleandelayError@Map<Object@GroupedUnicast<K@V>>groups@Queue<GroupedUnicast<K@V>>evictedGroups)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/85/c7d082892848e9bb87e11d9d6b3f9a56ef2030.src","preCode":"        public GroupBySubscriber(Subscriber<? super GroupedFlowable<K, V>> actual, Function<? super T, ? extends K> keySelector,\n                Function<? super T, ? extends V> valueSelector, int bufferSize, boolean delayError,\n                Map<Object, GroupedUnicast<K, V>> groups, Queue<GroupedUnicast<K, V>> evictedGroups) {\n            this.downstream = actual;\n            this.keySelector = keySelector;\n            this.valueSelector = valueSelector;\n            this.bufferSize = bufferSize;\n            this.delayError = delayError;\n            this.groups = groups;\n            this.evictedGroups = evictedGroups;\n            this.queue = new SpscLinkedArrayQueue<GroupedFlowable<K, V>>(bufferSize);\n        }\n","realPath":"src/main/java/io/reactivex/rxjava3/internal/operators/flowable/FlowableGroupBy.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":105,"status":"M"}],"commitId":"1e2995812e759d5bf624f3a921f2e57c8c5e0f34","commitMessage":"@@@3.x: Change Flowable.groupBy to signal MBE instead of possibly hanging (#6740)\n\n* 3.x: Change Flowable.groupBy to signal MBE instead of possibly hanging\n\n* Update groupBy javadocs\n\n* Update backpressure annotation to ERROR.  add some see links\n\n* Correct javadocs typos\n\n* Improve coverage of changes\n","date":"2019-12-06 15:59:14","modifiedFileCount":"5","status":"M","submitter":"David Karnok"},{"authorTime":"2019-12-06 15:59:14","codes":[{"authorDate":"2019-12-28 03:01:34","commitOrder":3,"curCode":"        public GroupByObserver(Observer<? super GroupedObservable<K, V>> actual, Function<? super T, ? extends K> keySelector, Function<? super T, ? extends V> valueSelector, int bufferSize, boolean delayError) {\n            this.downstream = actual;\n            this.keySelector = keySelector;\n            this.valueSelector = valueSelector;\n            this.bufferSize = bufferSize;\n            this.delayError = delayError;\n            this.groups = new ConcurrentHashMap<>();\n            this.lazySet(1);\n        }\n","date":"2019-12-28 03:01:34","endLine":75,"groupId":"102132","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"GroupByObserver","params":"(Observer<?superGroupedObservable<K@V>>actual@Function<?superT@?extendsK>keySelector@Function<?superT@?extendsV>valueSelector@intbufferSize@booleandelayError)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/8e/259db47cc46b74c56455d499efc81c79388ea5.src","preCode":"        public GroupByObserver(Observer<? super GroupedObservable<K, V>> actual, Function<? super T, ? extends K> keySelector, Function<? super T, ? extends V> valueSelector, int bufferSize, boolean delayError) {\n            this.downstream = actual;\n            this.keySelector = keySelector;\n            this.valueSelector = valueSelector;\n            this.bufferSize = bufferSize;\n            this.delayError = delayError;\n            this.groups = new ConcurrentHashMap<Object, GroupedUnicast<K, V>>();\n            this.lazySet(1);\n        }\n","realPath":"src/main/java/io/reactivex/rxjava3/internal/operators/observable/ObservableGroupBy.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":67,"status":"M"},{"authorDate":"2019-12-06 15:59:14","commitOrder":3,"curCode":"        public GroupBySubscriber(Subscriber<? super GroupedFlowable<K, V>> actual, Function<? super T, ? extends K> keySelector,\n                Function<? super T, ? extends V> valueSelector, int bufferSize, boolean delayError,\n                Map<Object, GroupedUnicast<K, V>> groups, Queue<GroupedUnicast<K, V>> evictedGroups) {\n            this.downstream = actual;\n            this.keySelector = keySelector;\n            this.valueSelector = valueSelector;\n            this.bufferSize = bufferSize;\n            this.limit = bufferSize - (bufferSize >> 2);\n            this.delayError = delayError;\n            this.groups = groups;\n            this.evictedGroups = evictedGroups;\n        }\n","date":"2019-12-06 15:59:14","endLine":116,"groupId":"102132","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"GroupBySubscriber","params":"(Subscriber<?superGroupedFlowable<K@V>>actual@Function<?superT@?extendsK>keySelector@Function<?superT@?extendsV>valueSelector@intbufferSize@booleandelayError@Map<Object@GroupedUnicast<K@V>>groups@Queue<GroupedUnicast<K@V>>evictedGroups)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/85/c7d082892848e9bb87e11d9d6b3f9a56ef2030.src","preCode":"        public GroupBySubscriber(Subscriber<? super GroupedFlowable<K, V>> actual, Function<? super T, ? extends K> keySelector,\n                Function<? super T, ? extends V> valueSelector, int bufferSize, boolean delayError,\n                Map<Object, GroupedUnicast<K, V>> groups, Queue<GroupedUnicast<K, V>> evictedGroups) {\n            this.downstream = actual;\n            this.keySelector = keySelector;\n            this.valueSelector = valueSelector;\n            this.bufferSize = bufferSize;\n            this.limit = bufferSize - (bufferSize >> 2);\n            this.delayError = delayError;\n            this.groups = groups;\n            this.evictedGroups = evictedGroups;\n        }\n","realPath":"src/main/java/io/reactivex/rxjava3/internal/operators/flowable/FlowableGroupBy.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":105,"status":"N"}],"commitId":"79f8e6dde6446b1aa33c146eaedbb958086daf56","commitMessage":"@@@3.x: Fix diamonds.  spelling.  unnecessary code (#6804)\n\n","date":"2019-12-28 03:01:34","modifiedFileCount":"463","status":"M","submitter":"David Karnok"}]
