[{"authorTime":"2019-08-16 20:51:17","codes":[{"authorDate":"2019-08-16 20:51:17","commitOrder":1,"curCode":"    public void ambCancelsOthers() {\n        PublishSubject<Integer> source1 = PublishSubject.create();\n        PublishSubject<Integer> source2 = PublishSubject.create();\n        PublishSubject<Integer> source3 = PublishSubject.create();\n\n        TestObserver<Integer> to = new TestObserver<Integer>();\n\n        Observable.ambArray(source1, source2, source3).subscribe(to);\n\n        assertTrue(\"Source 1 doesn't have subscribers!\", source1.hasObservers());\n        assertTrue(\"Source 2 doesn't have subscribers!\", source2.hasObservers());\n        assertTrue(\"Source 3 doesn't have subscribers!\", source3.hasObservers());\n\n        source1.onNext(1);\n\n        assertTrue(\"Source 1 doesn't have subscribers!\", source1.hasObservers());\n        assertFalse(\"Source 2 still has subscribers!\", source2.hasObservers());\n        assertFalse(\"Source 2 still has subscribers!\", source3.hasObservers());\n\n    }\n","date":"2019-08-16 20:51:17","endLine":229,"groupId":"6593","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"ambCancelsOthers","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/29/287a77721104194f68650f18c3522a2a477c60.src","preCode":"    public void ambCancelsOthers() {\n        PublishSubject<Integer> source1 = PublishSubject.create();\n        PublishSubject<Integer> source2 = PublishSubject.create();\n        PublishSubject<Integer> source3 = PublishSubject.create();\n\n        TestObserver<Integer> to = new TestObserver<Integer>();\n\n        Observable.ambArray(source1, source2, source3).subscribe(to);\n\n        assertTrue(\"Source 1 doesn't have subscribers!\", source1.hasObservers());\n        assertTrue(\"Source 2 doesn't have subscribers!\", source2.hasObservers());\n        assertTrue(\"Source 3 doesn't have subscribers!\", source3.hasObservers());\n\n        source1.onNext(1);\n\n        assertTrue(\"Source 1 doesn't have subscribers!\", source1.hasObservers());\n        assertFalse(\"Source 2 still has subscribers!\", source2.hasObservers());\n        assertFalse(\"Source 2 still has subscribers!\", source3.hasObservers());\n\n    }\n","realPath":"src/test/java/io/reactivex/rxjava3/internal/operators/observable/ObservableAmbTest.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":210,"status":"B"},{"authorDate":"2019-08-16 20:51:17","commitOrder":1,"curCode":"    public void ambCancelsOthers() {\n        PublishProcessor<Integer> source1 = PublishProcessor.create();\n        PublishProcessor<Integer> source2 = PublishProcessor.create();\n        PublishProcessor<Integer> source3 = PublishProcessor.create();\n\n        TestSubscriber<Integer> ts = new TestSubscriber<Integer>();\n\n        Flowable.ambArray(source1, source2, source3).subscribe(ts);\n\n        assertTrue(\"Source 1 doesn't have subscribers!\", source1.hasSubscribers());\n        assertTrue(\"Source 2 doesn't have subscribers!\", source2.hasSubscribers());\n        assertTrue(\"Source 3 doesn't have subscribers!\", source3.hasSubscribers());\n\n        source1.onNext(1);\n\n        assertTrue(\"Source 1 doesn't have subscribers!\", source1.hasSubscribers());\n        assertFalse(\"Source 2 still has subscribers!\", source2.hasSubscribers());\n        assertFalse(\"Source 2 still has subscribers!\", source3.hasSubscribers());\n\n    }\n","date":"2019-08-16 20:51:17","endLine":326,"groupId":"3529","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"ambCancelsOthers","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/14/9187b573c82b82c77b525bccb9f4d7dab8cab3.src","preCode":"    public void ambCancelsOthers() {\n        PublishProcessor<Integer> source1 = PublishProcessor.create();\n        PublishProcessor<Integer> source2 = PublishProcessor.create();\n        PublishProcessor<Integer> source3 = PublishProcessor.create();\n\n        TestSubscriber<Integer> ts = new TestSubscriber<Integer>();\n\n        Flowable.ambArray(source1, source2, source3).subscribe(ts);\n\n        assertTrue(\"Source 1 doesn't have subscribers!\", source1.hasSubscribers());\n        assertTrue(\"Source 2 doesn't have subscribers!\", source2.hasSubscribers());\n        assertTrue(\"Source 3 doesn't have subscribers!\", source3.hasSubscribers());\n\n        source1.onNext(1);\n\n        assertTrue(\"Source 1 doesn't have subscribers!\", source1.hasSubscribers());\n        assertFalse(\"Source 2 still has subscribers!\", source2.hasSubscribers());\n        assertFalse(\"Source 2 still has subscribers!\", source3.hasSubscribers());\n\n    }\n","realPath":"src/test/java/io/reactivex/rxjava3/internal/operators/flowable/FlowableAmbTest.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":307,"status":"B"}],"commitId":"a1693ecc9215027a7a3eae75272979ebb4d79a27","commitMessage":"@@@3.x: Refactor to io.reactivex.rxjava3.** (#6621)\n\n* 3.x: Refactor to io.reactivex.rxjava3.**\n\n* fix javadoc cleanup gradle\n\n* javadoc gradle again\n\n* Fix package location in text\n","date":"2019-08-16 20:51:17","modifiedFileCount":"0","status":"B","submitter":"David Karnok"},{"authorTime":"2019-12-22 18:39:23","codes":[{"authorDate":"2019-08-16 20:51:17","commitOrder":2,"curCode":"    public void ambCancelsOthers() {\n        PublishSubject<Integer> source1 = PublishSubject.create();\n        PublishSubject<Integer> source2 = PublishSubject.create();\n        PublishSubject<Integer> source3 = PublishSubject.create();\n\n        TestObserver<Integer> to = new TestObserver<Integer>();\n\n        Observable.ambArray(source1, source2, source3).subscribe(to);\n\n        assertTrue(\"Source 1 doesn't have subscribers!\", source1.hasObservers());\n        assertTrue(\"Source 2 doesn't have subscribers!\", source2.hasObservers());\n        assertTrue(\"Source 3 doesn't have subscribers!\", source3.hasObservers());\n\n        source1.onNext(1);\n\n        assertTrue(\"Source 1 doesn't have subscribers!\", source1.hasObservers());\n        assertFalse(\"Source 2 still has subscribers!\", source2.hasObservers());\n        assertFalse(\"Source 2 still has subscribers!\", source3.hasObservers());\n\n    }\n","date":"2019-08-16 20:51:17","endLine":229,"groupId":"6593","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"ambCancelsOthers","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/29/287a77721104194f68650f18c3522a2a477c60.src","preCode":"    public void ambCancelsOthers() {\n        PublishSubject<Integer> source1 = PublishSubject.create();\n        PublishSubject<Integer> source2 = PublishSubject.create();\n        PublishSubject<Integer> source3 = PublishSubject.create();\n\n        TestObserver<Integer> to = new TestObserver<Integer>();\n\n        Observable.ambArray(source1, source2, source3).subscribe(to);\n\n        assertTrue(\"Source 1 doesn't have subscribers!\", source1.hasObservers());\n        assertTrue(\"Source 2 doesn't have subscribers!\", source2.hasObservers());\n        assertTrue(\"Source 3 doesn't have subscribers!\", source3.hasObservers());\n\n        source1.onNext(1);\n\n        assertTrue(\"Source 1 doesn't have subscribers!\", source1.hasObservers());\n        assertFalse(\"Source 2 still has subscribers!\", source2.hasObservers());\n        assertFalse(\"Source 2 still has subscribers!\", source3.hasObservers());\n\n    }\n","realPath":"src/test/java/io/reactivex/rxjava3/internal/operators/observable/ObservableAmbTest.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":210,"status":"N"},{"authorDate":"2019-12-22 18:39:23","commitOrder":2,"curCode":"    public void ambCancelsOthers() {\n        PublishProcessor<Integer> source1 = PublishProcessor.create();\n        PublishProcessor<Integer> source2 = PublishProcessor.create();\n        PublishProcessor<Integer> source3 = PublishProcessor.create();\n\n        TestSubscriber<Integer> ts = new TestSubscriber<>();\n\n        Flowable.ambArray(source1, source2, source3).subscribe(ts);\n\n        assertTrue(\"Source 1 doesn't have subscribers!\", source1.hasSubscribers());\n        assertTrue(\"Source 2 doesn't have subscribers!\", source2.hasSubscribers());\n        assertTrue(\"Source 3 doesn't have subscribers!\", source3.hasSubscribers());\n\n        source1.onNext(1);\n\n        assertTrue(\"Source 1 doesn't have subscribers!\", source1.hasSubscribers());\n        assertFalse(\"Source 2 still has subscribers!\", source2.hasSubscribers());\n        assertFalse(\"Source 2 still has subscribers!\", source3.hasSubscribers());\n\n    }\n","date":"2019-12-22 18:39:23","endLine":326,"groupId":"3858","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"ambCancelsOthers","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/42/cba044dba0e1665c5d1a7ac13197927aa81179.src","preCode":"    public void ambCancelsOthers() {\n        PublishProcessor<Integer> source1 = PublishProcessor.create();\n        PublishProcessor<Integer> source2 = PublishProcessor.create();\n        PublishProcessor<Integer> source3 = PublishProcessor.create();\n\n        TestSubscriber<Integer> ts = new TestSubscriber<Integer>();\n\n        Flowable.ambArray(source1, source2, source3).subscribe(ts);\n\n        assertTrue(\"Source 1 doesn't have subscribers!\", source1.hasSubscribers());\n        assertTrue(\"Source 2 doesn't have subscribers!\", source2.hasSubscribers());\n        assertTrue(\"Source 3 doesn't have subscribers!\", source3.hasSubscribers());\n\n        source1.onNext(1);\n\n        assertTrue(\"Source 1 doesn't have subscribers!\", source1.hasSubscribers());\n        assertFalse(\"Source 2 still has subscribers!\", source2.hasSubscribers());\n        assertFalse(\"Source 2 still has subscribers!\", source3.hasSubscribers());\n\n    }\n","realPath":"src/test/java/io/reactivex/rxjava3/internal/operators/flowable/FlowableAmbTest.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":307,"status":"M"}],"commitId":"e162d664d86639b97c214054aca346fc2ba37e33","commitMessage":"@@@diamond operators in unit tests.  flowable package (#6787)\n\n","date":"2019-12-22 18:39:23","modifiedFileCount":"111","status":"M","submitter":"Dmitry Volkov"},{"authorTime":"2019-12-22 18:39:23","codes":[{"authorDate":"2019-12-22 18:59:44","commitOrder":3,"curCode":"    public void ambCancelsOthers() {\n        PublishSubject<Integer> source1 = PublishSubject.create();\n        PublishSubject<Integer> source2 = PublishSubject.create();\n        PublishSubject<Integer> source3 = PublishSubject.create();\n\n        TestObserver<Integer> to = new TestObserver<>();\n\n        Observable.ambArray(source1, source2, source3).subscribe(to);\n\n        assertTrue(\"Source 1 doesn't have subscribers!\", source1.hasObservers());\n        assertTrue(\"Source 2 doesn't have subscribers!\", source2.hasObservers());\n        assertTrue(\"Source 3 doesn't have subscribers!\", source3.hasObservers());\n\n        source1.onNext(1);\n\n        assertTrue(\"Source 1 doesn't have subscribers!\", source1.hasObservers());\n        assertFalse(\"Source 2 still has subscribers!\", source2.hasObservers());\n        assertFalse(\"Source 2 still has subscribers!\", source3.hasObservers());\n\n    }\n","date":"2019-12-22 18:59:44","endLine":229,"groupId":"102291","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"ambCancelsOthers","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/23/9d8339ea6043fd008b34b4f450b1ba75b07243.src","preCode":"    public void ambCancelsOthers() {\n        PublishSubject<Integer> source1 = PublishSubject.create();\n        PublishSubject<Integer> source2 = PublishSubject.create();\n        PublishSubject<Integer> source3 = PublishSubject.create();\n\n        TestObserver<Integer> to = new TestObserver<Integer>();\n\n        Observable.ambArray(source1, source2, source3).subscribe(to);\n\n        assertTrue(\"Source 1 doesn't have subscribers!\", source1.hasObservers());\n        assertTrue(\"Source 2 doesn't have subscribers!\", source2.hasObservers());\n        assertTrue(\"Source 3 doesn't have subscribers!\", source3.hasObservers());\n\n        source1.onNext(1);\n\n        assertTrue(\"Source 1 doesn't have subscribers!\", source1.hasObservers());\n        assertFalse(\"Source 2 still has subscribers!\", source2.hasObservers());\n        assertFalse(\"Source 2 still has subscribers!\", source3.hasObservers());\n\n    }\n","realPath":"src/test/java/io/reactivex/rxjava3/internal/operators/observable/ObservableAmbTest.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":210,"status":"M"},{"authorDate":"2019-12-22 18:39:23","commitOrder":3,"curCode":"    public void ambCancelsOthers() {\n        PublishProcessor<Integer> source1 = PublishProcessor.create();\n        PublishProcessor<Integer> source2 = PublishProcessor.create();\n        PublishProcessor<Integer> source3 = PublishProcessor.create();\n\n        TestSubscriber<Integer> ts = new TestSubscriber<>();\n\n        Flowable.ambArray(source1, source2, source3).subscribe(ts);\n\n        assertTrue(\"Source 1 doesn't have subscribers!\", source1.hasSubscribers());\n        assertTrue(\"Source 2 doesn't have subscribers!\", source2.hasSubscribers());\n        assertTrue(\"Source 3 doesn't have subscribers!\", source3.hasSubscribers());\n\n        source1.onNext(1);\n\n        assertTrue(\"Source 1 doesn't have subscribers!\", source1.hasSubscribers());\n        assertFalse(\"Source 2 still has subscribers!\", source2.hasSubscribers());\n        assertFalse(\"Source 2 still has subscribers!\", source3.hasSubscribers());\n\n    }\n","date":"2019-12-22 18:39:23","endLine":326,"groupId":"102291","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"ambCancelsOthers","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/42/cba044dba0e1665c5d1a7ac13197927aa81179.src","preCode":"    public void ambCancelsOthers() {\n        PublishProcessor<Integer> source1 = PublishProcessor.create();\n        PublishProcessor<Integer> source2 = PublishProcessor.create();\n        PublishProcessor<Integer> source3 = PublishProcessor.create();\n\n        TestSubscriber<Integer> ts = new TestSubscriber<>();\n\n        Flowable.ambArray(source1, source2, source3).subscribe(ts);\n\n        assertTrue(\"Source 1 doesn't have subscribers!\", source1.hasSubscribers());\n        assertTrue(\"Source 2 doesn't have subscribers!\", source2.hasSubscribers());\n        assertTrue(\"Source 3 doesn't have subscribers!\", source3.hasSubscribers());\n\n        source1.onNext(1);\n\n        assertTrue(\"Source 1 doesn't have subscribers!\", source1.hasSubscribers());\n        assertFalse(\"Source 2 still has subscribers!\", source2.hasSubscribers());\n        assertFalse(\"Source 2 still has subscribers!\", source3.hasSubscribers());\n\n    }\n","realPath":"src/test/java/io/reactivex/rxjava3/internal/operators/flowable/FlowableAmbTest.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":307,"status":"N"}],"commitId":"d6d698213b6c4091f4d5a0fb47f0922d0d0618e3","commitMessage":"@@@diamond operators in unit tests.  observable package (#6786)\n\n","date":"2019-12-22 18:59:44","modifiedFileCount":"95","status":"M","submitter":"Dmitry Volkov"}]
