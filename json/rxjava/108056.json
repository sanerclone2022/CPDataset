[{"authorTime":"2019-08-16 20:51:17","codes":[{"authorDate":"2019-08-16 20:51:17","commitOrder":1,"curCode":"    public void runConcurrencyTest() {\n        ExecutorService tp = Executors.newFixedThreadPool(20);\n        try {\n            TestConcurrencySubscriber tw = new TestConcurrencySubscriber();\n            \r\n            Subscriber<String> w = serializedSubscriber(new SafeSubscriber<String>(tw));\n            w.onSubscribe(new BooleanSubscription());\n\n            Future<?> f1 = tp.submit(new OnNextThread(w, 12000));\n            Future<?> f2 = tp.submit(new OnNextThread(w, 5000));\n            Future<?> f3 = tp.submit(new OnNextThread(w, 75000));\n            Future<?> f4 = tp.submit(new OnNextThread(w, 13500));\n            Future<?> f5 = tp.submit(new OnNextThread(w, 22000));\n            Future<?> f6 = tp.submit(new OnNextThread(w, 15000));\n            Future<?> f7 = tp.submit(new OnNextThread(w, 7500));\n            Future<?> f8 = tp.submit(new OnNextThread(w, 23500));\n\n            \r\n\n            Future<?> f10 = tp.submit(new CompletionThread(w, TestConcurrencySubscriberEvent.onComplete, f1, f2, f3, f4, f5, f6, f7, f8));\n            try {\n                Thread.sleep(1);\n            } catch (InterruptedException e) {\n                \r\n            }\n\n            waitOnThreads(f1, f2, f3, f4, f5, f6, f7, f8, f10);\n            int numNextEvents = tw.assertEvents(null); \r\n            assertEquals(173500, numNextEvents);\n            \r\n        } catch (Throwable e) {\n            fail(\"Concurrency test failed: \" + e.getMessage());\n            e.printStackTrace();\n        } finally {\n            tp.shutdown();\n            try {\n                tp.awaitTermination(25000, TimeUnit.MILLISECONDS);\n            } catch (InterruptedException e) {\n                e.printStackTrace();\n            }\n        }\n    }\n","date":"2019-08-16 20:51:17","endLine":258,"groupId":"12562","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"runConcurrencyTest","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/ac/541e2bcdbde01675daa13ab67989e84acf53b2.src","preCode":"    public void runConcurrencyTest() {\n        ExecutorService tp = Executors.newFixedThreadPool(20);\n        try {\n            TestConcurrencySubscriber tw = new TestConcurrencySubscriber();\n            \r\n            Subscriber<String> w = serializedSubscriber(new SafeSubscriber<String>(tw));\n            w.onSubscribe(new BooleanSubscription());\n\n            Future<?> f1 = tp.submit(new OnNextThread(w, 12000));\n            Future<?> f2 = tp.submit(new OnNextThread(w, 5000));\n            Future<?> f3 = tp.submit(new OnNextThread(w, 75000));\n            Future<?> f4 = tp.submit(new OnNextThread(w, 13500));\n            Future<?> f5 = tp.submit(new OnNextThread(w, 22000));\n            Future<?> f6 = tp.submit(new OnNextThread(w, 15000));\n            Future<?> f7 = tp.submit(new OnNextThread(w, 7500));\n            Future<?> f8 = tp.submit(new OnNextThread(w, 23500));\n\n            \r\n\n            Future<?> f10 = tp.submit(new CompletionThread(w, TestConcurrencySubscriberEvent.onComplete, f1, f2, f3, f4, f5, f6, f7, f8));\n            try {\n                Thread.sleep(1);\n            } catch (InterruptedException e) {\n                \r\n            }\n\n            waitOnThreads(f1, f2, f3, f4, f5, f6, f7, f8, f10);\n            int numNextEvents = tw.assertEvents(null); \r\n            assertEquals(173500, numNextEvents);\n            \r\n        } catch (Throwable e) {\n            fail(\"Concurrency test failed: \" + e.getMessage());\n            e.printStackTrace();\n        } finally {\n            tp.shutdown();\n            try {\n                tp.awaitTermination(25000, TimeUnit.MILLISECONDS);\n            } catch (InterruptedException e) {\n                e.printStackTrace();\n            }\n        }\n    }\n","realPath":"src/test/java/io/reactivex/rxjava3/subscribers/SerializedSubscriberTest.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":217,"status":"B"},{"authorDate":"2019-08-16 20:51:17","commitOrder":1,"curCode":"    public void runConcurrencyTest() {\n        ExecutorService tp = Executors.newFixedThreadPool(20);\n        try {\n            TestConcurrencySubscriber tw = new TestConcurrencySubscriber();\n            \r\n            Observer<String> w = serializedObserver(new SafeObserver<String>(tw));\n            w.onSubscribe(Disposables.empty());\n\n            Future<?> f1 = tp.submit(new OnNextThread(w, 12000));\n            Future<?> f2 = tp.submit(new OnNextThread(w, 5000));\n            Future<?> f3 = tp.submit(new OnNextThread(w, 75000));\n            Future<?> f4 = tp.submit(new OnNextThread(w, 13500));\n            Future<?> f5 = tp.submit(new OnNextThread(w, 22000));\n            Future<?> f6 = tp.submit(new OnNextThread(w, 15000));\n            Future<?> f7 = tp.submit(new OnNextThread(w, 7500));\n            Future<?> f8 = tp.submit(new OnNextThread(w, 23500));\n\n            \r\n\n            Future<?> f10 = tp.submit(new CompletionThread(w, TestConcurrencySubscriberEvent.onComplete, f1, f2, f3, f4, f5, f6, f7, f8));\n            try {\n                Thread.sleep(1);\n            } catch (InterruptedException e) {\n                \r\n            }\n\n            waitOnThreads(f1, f2, f3, f4, f5, f6, f7, f8, f10);\n            int numNextEvents = tw.assertEvents(null); \r\n            assertEquals(173500, numNextEvents);\n            \r\n        } catch (Throwable e) {\n            fail(\"Concurrency test failed: \" + e.getMessage());\n            e.printStackTrace();\n        } finally {\n            tp.shutdown();\n            try {\n                tp.awaitTermination(25000, TimeUnit.MILLISECONDS);\n            } catch (InterruptedException e) {\n                e.printStackTrace();\n            }\n        }\n    }\n","date":"2019-08-16 20:51:17","endLine":257,"groupId":"12562","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"runConcurrencyTest","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/ec/b86d8417dc3c7ac992dd9447d4af86ee4d0bcb.src","preCode":"    public void runConcurrencyTest() {\n        ExecutorService tp = Executors.newFixedThreadPool(20);\n        try {\n            TestConcurrencySubscriber tw = new TestConcurrencySubscriber();\n            \r\n            Observer<String> w = serializedObserver(new SafeObserver<String>(tw));\n            w.onSubscribe(Disposables.empty());\n\n            Future<?> f1 = tp.submit(new OnNextThread(w, 12000));\n            Future<?> f2 = tp.submit(new OnNextThread(w, 5000));\n            Future<?> f3 = tp.submit(new OnNextThread(w, 75000));\n            Future<?> f4 = tp.submit(new OnNextThread(w, 13500));\n            Future<?> f5 = tp.submit(new OnNextThread(w, 22000));\n            Future<?> f6 = tp.submit(new OnNextThread(w, 15000));\n            Future<?> f7 = tp.submit(new OnNextThread(w, 7500));\n            Future<?> f8 = tp.submit(new OnNextThread(w, 23500));\n\n            \r\n\n            Future<?> f10 = tp.submit(new CompletionThread(w, TestConcurrencySubscriberEvent.onComplete, f1, f2, f3, f4, f5, f6, f7, f8));\n            try {\n                Thread.sleep(1);\n            } catch (InterruptedException e) {\n                \r\n            }\n\n            waitOnThreads(f1, f2, f3, f4, f5, f6, f7, f8, f10);\n            int numNextEvents = tw.assertEvents(null); \r\n            assertEquals(173500, numNextEvents);\n            \r\n        } catch (Throwable e) {\n            fail(\"Concurrency test failed: \" + e.getMessage());\n            e.printStackTrace();\n        } finally {\n            tp.shutdown();\n            try {\n                tp.awaitTermination(25000, TimeUnit.MILLISECONDS);\n            } catch (InterruptedException e) {\n                e.printStackTrace();\n            }\n        }\n    }\n","realPath":"src/test/java/io/reactivex/rxjava3/observers/SerializedObserverTest.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":216,"status":"B"}],"commitId":"a1693ecc9215027a7a3eae75272979ebb4d79a27","commitMessage":"@@@3.x: Refactor to io.reactivex.rxjava3.** (#6621)\n\n* 3.x: Refactor to io.reactivex.rxjava3.**\n\n* fix javadoc cleanup gradle\n\n* javadoc gradle again\n\n* Fix package location in text\n","date":"2019-08-16 20:51:17","modifiedFileCount":"0","status":"B","submitter":"David Karnok"},{"authorTime":"2019-12-20 02:39:40","codes":[{"authorDate":"2019-08-16 20:51:17","commitOrder":2,"curCode":"    public void runConcurrencyTest() {\n        ExecutorService tp = Executors.newFixedThreadPool(20);\n        try {\n            TestConcurrencySubscriber tw = new TestConcurrencySubscriber();\n            \r\n            Subscriber<String> w = serializedSubscriber(new SafeSubscriber<String>(tw));\n            w.onSubscribe(new BooleanSubscription());\n\n            Future<?> f1 = tp.submit(new OnNextThread(w, 12000));\n            Future<?> f2 = tp.submit(new OnNextThread(w, 5000));\n            Future<?> f3 = tp.submit(new OnNextThread(w, 75000));\n            Future<?> f4 = tp.submit(new OnNextThread(w, 13500));\n            Future<?> f5 = tp.submit(new OnNextThread(w, 22000));\n            Future<?> f6 = tp.submit(new OnNextThread(w, 15000));\n            Future<?> f7 = tp.submit(new OnNextThread(w, 7500));\n            Future<?> f8 = tp.submit(new OnNextThread(w, 23500));\n\n            \r\n\n            Future<?> f10 = tp.submit(new CompletionThread(w, TestConcurrencySubscriberEvent.onComplete, f1, f2, f3, f4, f5, f6, f7, f8));\n            try {\n                Thread.sleep(1);\n            } catch (InterruptedException e) {\n                \r\n            }\n\n            waitOnThreads(f1, f2, f3, f4, f5, f6, f7, f8, f10);\n            int numNextEvents = tw.assertEvents(null); \r\n            assertEquals(173500, numNextEvents);\n            \r\n        } catch (Throwable e) {\n            fail(\"Concurrency test failed: \" + e.getMessage());\n            e.printStackTrace();\n        } finally {\n            tp.shutdown();\n            try {\n                tp.awaitTermination(25000, TimeUnit.MILLISECONDS);\n            } catch (InterruptedException e) {\n                e.printStackTrace();\n            }\n        }\n    }\n","date":"2019-08-16 20:51:17","endLine":258,"groupId":"12562","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"runConcurrencyTest","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/ac/541e2bcdbde01675daa13ab67989e84acf53b2.src","preCode":"    public void runConcurrencyTest() {\n        ExecutorService tp = Executors.newFixedThreadPool(20);\n        try {\n            TestConcurrencySubscriber tw = new TestConcurrencySubscriber();\n            \r\n            Subscriber<String> w = serializedSubscriber(new SafeSubscriber<String>(tw));\n            w.onSubscribe(new BooleanSubscription());\n\n            Future<?> f1 = tp.submit(new OnNextThread(w, 12000));\n            Future<?> f2 = tp.submit(new OnNextThread(w, 5000));\n            Future<?> f3 = tp.submit(new OnNextThread(w, 75000));\n            Future<?> f4 = tp.submit(new OnNextThread(w, 13500));\n            Future<?> f5 = tp.submit(new OnNextThread(w, 22000));\n            Future<?> f6 = tp.submit(new OnNextThread(w, 15000));\n            Future<?> f7 = tp.submit(new OnNextThread(w, 7500));\n            Future<?> f8 = tp.submit(new OnNextThread(w, 23500));\n\n            \r\n\n            Future<?> f10 = tp.submit(new CompletionThread(w, TestConcurrencySubscriberEvent.onComplete, f1, f2, f3, f4, f5, f6, f7, f8));\n            try {\n                Thread.sleep(1);\n            } catch (InterruptedException e) {\n                \r\n            }\n\n            waitOnThreads(f1, f2, f3, f4, f5, f6, f7, f8, f10);\n            int numNextEvents = tw.assertEvents(null); \r\n            assertEquals(173500, numNextEvents);\n            \r\n        } catch (Throwable e) {\n            fail(\"Concurrency test failed: \" + e.getMessage());\n            e.printStackTrace();\n        } finally {\n            tp.shutdown();\n            try {\n                tp.awaitTermination(25000, TimeUnit.MILLISECONDS);\n            } catch (InterruptedException e) {\n                e.printStackTrace();\n            }\n        }\n    }\n","realPath":"src/test/java/io/reactivex/rxjava3/subscribers/SerializedSubscriberTest.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":217,"status":"N"},{"authorDate":"2019-12-20 02:39:40","commitOrder":2,"curCode":"    public void runConcurrencyTest() {\n        ExecutorService tp = Executors.newFixedThreadPool(20);\n        try {\n            TestConcurrencySubscriber tw = new TestConcurrencySubscriber();\n            \r\n            Observer<String> w = serializedObserver(new SafeObserver<String>(tw));\n            w.onSubscribe(Disposable.empty());\n\n            Future<?> f1 = tp.submit(new OnNextThread(w, 12000));\n            Future<?> f2 = tp.submit(new OnNextThread(w, 5000));\n            Future<?> f3 = tp.submit(new OnNextThread(w, 75000));\n            Future<?> f4 = tp.submit(new OnNextThread(w, 13500));\n            Future<?> f5 = tp.submit(new OnNextThread(w, 22000));\n            Future<?> f6 = tp.submit(new OnNextThread(w, 15000));\n            Future<?> f7 = tp.submit(new OnNextThread(w, 7500));\n            Future<?> f8 = tp.submit(new OnNextThread(w, 23500));\n\n            \r\n\n            Future<?> f10 = tp.submit(new CompletionThread(w, TestConcurrencySubscriberEvent.onComplete, f1, f2, f3, f4, f5, f6, f7, f8));\n            try {\n                Thread.sleep(1);\n            } catch (InterruptedException e) {\n                \r\n            }\n\n            waitOnThreads(f1, f2, f3, f4, f5, f6, f7, f8, f10);\n            int numNextEvents = tw.assertEvents(null); \r\n            assertEquals(173500, numNextEvents);\n            \r\n        } catch (Throwable e) {\n            fail(\"Concurrency test failed: \" + e.getMessage());\n            e.printStackTrace();\n        } finally {\n            tp.shutdown();\n            try {\n                tp.awaitTermination(25000, TimeUnit.MILLISECONDS);\n            } catch (InterruptedException e) {\n                e.printStackTrace();\n            }\n        }\n    }\n","date":"2019-12-20 02:39:40","endLine":258,"groupId":"12562","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"runConcurrencyTest","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/84/fa4348797dadfa9f21d91391f190799d103f39.src","preCode":"    public void runConcurrencyTest() {\n        ExecutorService tp = Executors.newFixedThreadPool(20);\n        try {\n            TestConcurrencySubscriber tw = new TestConcurrencySubscriber();\n            \r\n            Observer<String> w = serializedObserver(new SafeObserver<String>(tw));\n            w.onSubscribe(Disposables.empty());\n\n            Future<?> f1 = tp.submit(new OnNextThread(w, 12000));\n            Future<?> f2 = tp.submit(new OnNextThread(w, 5000));\n            Future<?> f3 = tp.submit(new OnNextThread(w, 75000));\n            Future<?> f4 = tp.submit(new OnNextThread(w, 13500));\n            Future<?> f5 = tp.submit(new OnNextThread(w, 22000));\n            Future<?> f6 = tp.submit(new OnNextThread(w, 15000));\n            Future<?> f7 = tp.submit(new OnNextThread(w, 7500));\n            Future<?> f8 = tp.submit(new OnNextThread(w, 23500));\n\n            \r\n\n            Future<?> f10 = tp.submit(new CompletionThread(w, TestConcurrencySubscriberEvent.onComplete, f1, f2, f3, f4, f5, f6, f7, f8));\n            try {\n                Thread.sleep(1);\n            } catch (InterruptedException e) {\n                \r\n            }\n\n            waitOnThreads(f1, f2, f3, f4, f5, f6, f7, f8, f10);\n            int numNextEvents = tw.assertEvents(null); \r\n            assertEquals(173500, numNextEvents);\n            \r\n        } catch (Throwable e) {\n            fail(\"Concurrency test failed: \" + e.getMessage());\n            e.printStackTrace();\n        } finally {\n            tp.shutdown();\n            try {\n                tp.awaitTermination(25000, TimeUnit.MILLISECONDS);\n            } catch (InterruptedException e) {\n                e.printStackTrace();\n            }\n        }\n    }\n","realPath":"src/test/java/io/reactivex/rxjava3/observers/SerializedObserverTest.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":217,"status":"M"}],"commitId":"166c529eb165b473c9bff11e8fedbde6c471b005","commitMessage":"@@@Migrate Disposables static factories to Disposable interface (#6781)\n\n","date":"2019-12-20 02:39:40","modifiedFileCount":"202","status":"M","submitter":"Jake Wharton"},{"authorTime":"2019-12-22 19:17:37","codes":[{"authorDate":"2019-12-22 19:17:37","commitOrder":3,"curCode":"    public void runConcurrencyTest() {\n        ExecutorService tp = Executors.newFixedThreadPool(20);\n        try {\n            TestConcurrencySubscriber tw = new TestConcurrencySubscriber();\n            \r\n            Subscriber<String> w = serializedSubscriber(new SafeSubscriber<>(tw));\n            w.onSubscribe(new BooleanSubscription());\n\n            Future<?> f1 = tp.submit(new OnNextThread(w, 12000));\n            Future<?> f2 = tp.submit(new OnNextThread(w, 5000));\n            Future<?> f3 = tp.submit(new OnNextThread(w, 75000));\n            Future<?> f4 = tp.submit(new OnNextThread(w, 13500));\n            Future<?> f5 = tp.submit(new OnNextThread(w, 22000));\n            Future<?> f6 = tp.submit(new OnNextThread(w, 15000));\n            Future<?> f7 = tp.submit(new OnNextThread(w, 7500));\n            Future<?> f8 = tp.submit(new OnNextThread(w, 23500));\n\n            \r\n\n            Future<?> f10 = tp.submit(new CompletionThread(w, TestConcurrencySubscriberEvent.onComplete, f1, f2, f3, f4, f5, f6, f7, f8));\n            try {\n                Thread.sleep(1);\n            } catch (InterruptedException e) {\n                \r\n            }\n\n            waitOnThreads(f1, f2, f3, f4, f5, f6, f7, f8, f10);\n            int numNextEvents = tw.assertEvents(null); \r\n            assertEquals(173500, numNextEvents);\n            \r\n        } catch (Throwable e) {\n            fail(\"Concurrency test failed: \" + e.getMessage());\n            e.printStackTrace();\n        } finally {\n            tp.shutdown();\n            try {\n                tp.awaitTermination(25000, TimeUnit.MILLISECONDS);\n            } catch (InterruptedException e) {\n                e.printStackTrace();\n            }\n        }\n    }\n","date":"2019-12-22 19:17:37","endLine":259,"groupId":"108056","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"runConcurrencyTest","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/00/c7ae21038069d649adb076fcfdc8e00838e3cd.src","preCode":"    public void runConcurrencyTest() {\n        ExecutorService tp = Executors.newFixedThreadPool(20);\n        try {\n            TestConcurrencySubscriber tw = new TestConcurrencySubscriber();\n            \r\n            Subscriber<String> w = serializedSubscriber(new SafeSubscriber<String>(tw));\n            w.onSubscribe(new BooleanSubscription());\n\n            Future<?> f1 = tp.submit(new OnNextThread(w, 12000));\n            Future<?> f2 = tp.submit(new OnNextThread(w, 5000));\n            Future<?> f3 = tp.submit(new OnNextThread(w, 75000));\n            Future<?> f4 = tp.submit(new OnNextThread(w, 13500));\n            Future<?> f5 = tp.submit(new OnNextThread(w, 22000));\n            Future<?> f6 = tp.submit(new OnNextThread(w, 15000));\n            Future<?> f7 = tp.submit(new OnNextThread(w, 7500));\n            Future<?> f8 = tp.submit(new OnNextThread(w, 23500));\n\n            \r\n\n            Future<?> f10 = tp.submit(new CompletionThread(w, TestConcurrencySubscriberEvent.onComplete, f1, f2, f3, f4, f5, f6, f7, f8));\n            try {\n                Thread.sleep(1);\n            } catch (InterruptedException e) {\n                \r\n            }\n\n            waitOnThreads(f1, f2, f3, f4, f5, f6, f7, f8, f10);\n            int numNextEvents = tw.assertEvents(null); \r\n            assertEquals(173500, numNextEvents);\n            \r\n        } catch (Throwable e) {\n            fail(\"Concurrency test failed: \" + e.getMessage());\n            e.printStackTrace();\n        } finally {\n            tp.shutdown();\n            try {\n                tp.awaitTermination(25000, TimeUnit.MILLISECONDS);\n            } catch (InterruptedException e) {\n                e.printStackTrace();\n            }\n        }\n    }\n","realPath":"src/test/java/io/reactivex/rxjava3/subscribers/SerializedSubscriberTest.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":218,"status":"M"},{"authorDate":"2019-12-22 19:17:37","commitOrder":3,"curCode":"    public void runConcurrencyTest() {\n        ExecutorService tp = Executors.newFixedThreadPool(20);\n        try {\n            TestConcurrencySubscriber tw = new TestConcurrencySubscriber();\n            \r\n            Observer<String> w = serializedObserver(new SafeObserver<>(tw));\n            w.onSubscribe(Disposable.empty());\n\n            Future<?> f1 = tp.submit(new OnNextThread(w, 12000));\n            Future<?> f2 = tp.submit(new OnNextThread(w, 5000));\n            Future<?> f3 = tp.submit(new OnNextThread(w, 75000));\n            Future<?> f4 = tp.submit(new OnNextThread(w, 13500));\n            Future<?> f5 = tp.submit(new OnNextThread(w, 22000));\n            Future<?> f6 = tp.submit(new OnNextThread(w, 15000));\n            Future<?> f7 = tp.submit(new OnNextThread(w, 7500));\n            Future<?> f8 = tp.submit(new OnNextThread(w, 23500));\n\n            \r\n\n            Future<?> f10 = tp.submit(new CompletionThread(w, TestConcurrencySubscriberEvent.onComplete, f1, f2, f3, f4, f5, f6, f7, f8));\n            try {\n                Thread.sleep(1);\n            } catch (InterruptedException e) {\n                \r\n            }\n\n            waitOnThreads(f1, f2, f3, f4, f5, f6, f7, f8, f10);\n            int numNextEvents = tw.assertEvents(null); \r\n            assertEquals(173500, numNextEvents);\n            \r\n        } catch (Throwable e) {\n            fail(\"Concurrency test failed: \" + e.getMessage());\n            e.printStackTrace();\n        } finally {\n            tp.shutdown();\n            try {\n                tp.awaitTermination(25000, TimeUnit.MILLISECONDS);\n            } catch (InterruptedException e) {\n                e.printStackTrace();\n            }\n        }\n    }\n","date":"2019-12-22 19:17:37","endLine":258,"groupId":"108056","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"runConcurrencyTest","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/e5/81012d9bc73cdcf9768536a5765f2e23a5855d.src","preCode":"    public void runConcurrencyTest() {\n        ExecutorService tp = Executors.newFixedThreadPool(20);\n        try {\n            TestConcurrencySubscriber tw = new TestConcurrencySubscriber();\n            \r\n            Observer<String> w = serializedObserver(new SafeObserver<String>(tw));\n            w.onSubscribe(Disposable.empty());\n\n            Future<?> f1 = tp.submit(new OnNextThread(w, 12000));\n            Future<?> f2 = tp.submit(new OnNextThread(w, 5000));\n            Future<?> f3 = tp.submit(new OnNextThread(w, 75000));\n            Future<?> f4 = tp.submit(new OnNextThread(w, 13500));\n            Future<?> f5 = tp.submit(new OnNextThread(w, 22000));\n            Future<?> f6 = tp.submit(new OnNextThread(w, 15000));\n            Future<?> f7 = tp.submit(new OnNextThread(w, 7500));\n            Future<?> f8 = tp.submit(new OnNextThread(w, 23500));\n\n            \r\n\n            Future<?> f10 = tp.submit(new CompletionThread(w, TestConcurrencySubscriberEvent.onComplete, f1, f2, f3, f4, f5, f6, f7, f8));\n            try {\n                Thread.sleep(1);\n            } catch (InterruptedException e) {\n                \r\n            }\n\n            waitOnThreads(f1, f2, f3, f4, f5, f6, f7, f8, f10);\n            int numNextEvents = tw.assertEvents(null); \r\n            assertEquals(173500, numNextEvents);\n            \r\n        } catch (Throwable e) {\n            fail(\"Concurrency test failed: \" + e.getMessage());\n            e.printStackTrace();\n        } finally {\n            tp.shutdown();\n            try {\n                tp.awaitTermination(25000, TimeUnit.MILLISECONDS);\n            } catch (InterruptedException e) {\n                e.printStackTrace();\n            }\n        }\n    }\n","realPath":"src/test/java/io/reactivex/rxjava3/observers/SerializedObserverTest.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":217,"status":"M"}],"commitId":"0bd2a0152b64723ac3daf3e2fbad3d59c7f3bbb8","commitMessage":"@@@diamond operators in unit tests.  small packages (#6789)\n\n","date":"2019-12-22 19:17:37","modifiedFileCount":"106","status":"M","submitter":"Dmitry Volkov"}]
