[{"authorTime":"2019-08-16 20:51:17","codes":[{"authorDate":"2019-08-16 20:51:17","commitOrder":1,"curCode":"    public void assertTestSubscriber() {\n        Flowable<Integer> oi = Flowable.fromIterable(Arrays.asList(1, 2));\n        TestSubscriber<Integer> ts = new TestSubscriber<Integer>();\n        oi.subscribe(ts);\n\n        ts.assertValues(1, 2);\n        ts.assertValueCount(2);\n        ts.assertComplete();\n        ts.assertNoErrors();\n    }\n","date":"2019-08-16 20:51:17","endLine":54,"groupId":"7200","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"assertTestSubscriber","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/33/d95bea88700928dd4fea5f61ce911ae6c7a0c4.src","preCode":"    public void assertTestSubscriber() {\n        Flowable<Integer> oi = Flowable.fromIterable(Arrays.asList(1, 2));\n        TestSubscriber<Integer> ts = new TestSubscriber<Integer>();\n        oi.subscribe(ts);\n\n        ts.assertValues(1, 2);\n        ts.assertValueCount(2);\n        ts.assertComplete();\n        ts.assertNoErrors();\n    }\n","realPath":"src/test/java/io/reactivex/rxjava3/subscribers/TestSubscriberTest.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":45,"status":"B"},{"authorDate":"2019-08-16 20:51:17","commitOrder":1,"curCode":"    public void assertNotMatchCount() {\n        Flowable<Integer> oi = Flowable.fromIterable(Arrays.asList(1, 2));\n        TestSubscriber<Integer> ts = new TestSubscriber<Integer>();\n        oi.subscribe(ts);\n\n        thrown.expect(AssertionError.class);\n        \r\n        \r\n\n        ts.assertValues(1);\n        ts.assertValueCount(2);\n        ts.assertComplete();\n        ts.assertNoErrors();\n    }\n","date":"2019-08-16 20:51:17","endLine":70,"groupId":"10790","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"assertNotMatchCount","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/33/d95bea88700928dd4fea5f61ce911ae6c7a0c4.src","preCode":"    public void assertNotMatchCount() {\n        Flowable<Integer> oi = Flowable.fromIterable(Arrays.asList(1, 2));\n        TestSubscriber<Integer> ts = new TestSubscriber<Integer>();\n        oi.subscribe(ts);\n\n        thrown.expect(AssertionError.class);\n        \r\n        \r\n\n        ts.assertValues(1);\n        ts.assertValueCount(2);\n        ts.assertComplete();\n        ts.assertNoErrors();\n    }\n","realPath":"src/test/java/io/reactivex/rxjava3/subscribers/TestSubscriberTest.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":57,"status":"B"}],"commitId":"a1693ecc9215027a7a3eae75272979ebb4d79a27","commitMessage":"@@@3.x: Refactor to io.reactivex.rxjava3.** (#6621)\n\n* 3.x: Refactor to io.reactivex.rxjava3.**\n\n* fix javadoc cleanup gradle\n\n* javadoc gradle again\n\n* Fix package location in text\n","date":"2019-08-16 20:51:17","modifiedFileCount":"0","status":"B","submitter":"David Karnok"},{"authorTime":"2019-12-22 19:17:37","codes":[{"authorDate":"2019-12-22 19:17:37","commitOrder":2,"curCode":"    public void assertTestSubscriber() {\n        Flowable<Integer> oi = Flowable.fromIterable(Arrays.asList(1, 2));\n        TestSubscriber<Integer> ts = new TestSubscriber<>();\n        oi.subscribe(ts);\n\n        ts.assertValues(1, 2);\n        ts.assertValueCount(2);\n        ts.assertComplete();\n        ts.assertNoErrors();\n    }\n","date":"2019-12-22 19:17:37","endLine":54,"groupId":"9395","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"assertTestSubscriber","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/61/27d31ff51f95634194b008bf9436919ab48a80.src","preCode":"    public void assertTestSubscriber() {\n        Flowable<Integer> oi = Flowable.fromIterable(Arrays.asList(1, 2));\n        TestSubscriber<Integer> ts = new TestSubscriber<Integer>();\n        oi.subscribe(ts);\n\n        ts.assertValues(1, 2);\n        ts.assertValueCount(2);\n        ts.assertComplete();\n        ts.assertNoErrors();\n    }\n","realPath":"src/test/java/io/reactivex/rxjava3/subscribers/TestSubscriberTest.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":45,"status":"M"},{"authorDate":"2019-12-22 19:17:37","commitOrder":2,"curCode":"    public void assertNotMatchCount() {\n        Flowable<Integer> oi = Flowable.fromIterable(Arrays.asList(1, 2));\n        TestSubscriber<Integer> ts = new TestSubscriber<>();\n        oi.subscribe(ts);\n\n        thrown.expect(AssertionError.class);\n        \r\n        \r\n\n        ts.assertValues(1);\n        ts.assertValueCount(2);\n        ts.assertComplete();\n        ts.assertNoErrors();\n    }\n","date":"2019-12-22 19:17:37","endLine":70,"groupId":"12418","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"assertNotMatchCount","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/61/27d31ff51f95634194b008bf9436919ab48a80.src","preCode":"    public void assertNotMatchCount() {\n        Flowable<Integer> oi = Flowable.fromIterable(Arrays.asList(1, 2));\n        TestSubscriber<Integer> ts = new TestSubscriber<Integer>();\n        oi.subscribe(ts);\n\n        thrown.expect(AssertionError.class);\n        \r\n        \r\n\n        ts.assertValues(1);\n        ts.assertValueCount(2);\n        ts.assertComplete();\n        ts.assertNoErrors();\n    }\n","realPath":"src/test/java/io/reactivex/rxjava3/subscribers/TestSubscriberTest.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":57,"status":"M"}],"commitId":"0bd2a0152b64723ac3daf3e2fbad3d59c7f3bbb8","commitMessage":"@@@diamond operators in unit tests.  small packages (#6789)\n\n","date":"2019-12-22 19:17:37","modifiedFileCount":"106","status":"M","submitter":"Dmitry Volkov"},{"authorTime":"2020-01-07 16:33:23","codes":[{"authorDate":"2019-12-22 19:17:37","commitOrder":3,"curCode":"    public void assertTestSubscriber() {\n        Flowable<Integer> oi = Flowable.fromIterable(Arrays.asList(1, 2));\n        TestSubscriber<Integer> ts = new TestSubscriber<>();\n        oi.subscribe(ts);\n\n        ts.assertValues(1, 2);\n        ts.assertValueCount(2);\n        ts.assertComplete();\n        ts.assertNoErrors();\n    }\n","date":"2019-12-22 19:17:37","endLine":54,"groupId":"108077","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"assertTestSubscriber","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/61/27d31ff51f95634194b008bf9436919ab48a80.src","preCode":"    public void assertTestSubscriber() {\n        Flowable<Integer> oi = Flowable.fromIterable(Arrays.asList(1, 2));\n        TestSubscriber<Integer> ts = new TestSubscriber<>();\n        oi.subscribe(ts);\n\n        ts.assertValues(1, 2);\n        ts.assertValueCount(2);\n        ts.assertComplete();\n        ts.assertNoErrors();\n    }\n","realPath":"src/test/java/io/reactivex/rxjava3/subscribers/TestSubscriberTest.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":45,"status":"N"},{"authorDate":"2020-01-07 16:33:23","commitOrder":3,"curCode":"    public void assertNotMatchCount() {\n        assertThrows(AssertionError.class, () -> {\n            Flowable<Integer> oi = Flowable.fromIterable(Arrays.asList(1, 2));\n            TestSubscriber<Integer> ts = new TestSubscriber<>();\n            oi.subscribe(ts);\n\n            ts.assertValues(1);\n            ts.assertValueCount(2);\n            ts.assertComplete();\n            ts.assertNoErrors();\n        });\n    }\n","date":"2020-01-07 16:33:23","endLine":64,"groupId":"108077","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"assertNotMatchCount","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/6c/e4f4ed248e921b091ba66ee377fcd4d0834d74.src","preCode":"    public void assertNotMatchCount() {\n        Flowable<Integer> oi = Flowable.fromIterable(Arrays.asList(1, 2));\n        TestSubscriber<Integer> ts = new TestSubscriber<>();\n        oi.subscribe(ts);\n\n        thrown.expect(AssertionError.class);\n        \r\n        \r\n\n        ts.assertValues(1);\n        ts.assertValueCount(2);\n        ts.assertComplete();\n        ts.assertNoErrors();\n    }\n","realPath":"src/test/java/io/reactivex/rxjava3/subscribers/TestSubscriberTest.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":53,"status":"M"}],"commitId":"45c0b064dcaea7ac3d55249c04a62370ebf4b4a9","commitMessage":"@@@3.x: Fix Junit 4.13 deprecated API use (#6813)\n\n","date":"2020-01-07 16:33:23","modifiedFileCount":"4","status":"M","submitter":"David Karnok"}]
