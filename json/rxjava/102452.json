[{"authorTime":"2019-08-16 20:51:17","codes":[{"authorDate":"2019-08-16 20:51:17","commitOrder":1,"curCode":"        WindowBoundaryMainObserver(Observer<? super Observable<T>> actual,\n                                            ObservableSource<B> open, Function<? super B, ? extends ObservableSource<V>> close, int bufferSize) {\n            super(actual, new MpscLinkedQueue<Object>());\n            this.open = open;\n            this.close = close;\n            this.bufferSize = bufferSize;\n            this.resources = new CompositeDisposable();\n            this.ws = new ArrayList<UnicastSubject<T>>();\n            windows.lazySet(1);\n        }\n","date":"2019-08-16 20:51:17","endLine":83,"groupId":"2188","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"WindowBoundaryMainObserver","params":"(Observer<?superObservable<T>>actual@ObservableSource<B>open@Function<?superB@?extendsObservableSource<V>>close@intbufferSize)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/35/e92c3fecd7e86dc7e9094b41805c30a4dcb20c.src","preCode":"        WindowBoundaryMainObserver(Observer<? super Observable<T>> actual,\n                                            ObservableSource<B> open, Function<? super B, ? extends ObservableSource<V>> close, int bufferSize) {\n            super(actual, new MpscLinkedQueue<Object>());\n            this.open = open;\n            this.close = close;\n            this.bufferSize = bufferSize;\n            this.resources = new CompositeDisposable();\n            this.ws = new ArrayList<UnicastSubject<T>>();\n            windows.lazySet(1);\n        }\n","realPath":"src/main/java/io/reactivex/rxjava3/internal/operators/observable/ObservableWindowBoundarySelector.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":74,"status":"B"},{"authorDate":"2019-08-16 20:51:17","commitOrder":1,"curCode":"        WindowBoundaryMainSubscriber(Subscriber<? super Flowable<T>> actual,\n                Publisher<B> open, Function<? super B, ? extends Publisher<V>> close, int bufferSize) {\n            super(actual, new MpscLinkedQueue<Object>());\n            this.open = open;\n            this.close = close;\n            this.bufferSize = bufferSize;\n            this.resources = new CompositeDisposable();\n            this.ws = new ArrayList<UnicastProcessor<T>>();\n            windows.lazySet(1);\n        }\n","date":"2019-08-16 20:51:17","endLine":85,"groupId":"2188","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"WindowBoundaryMainSubscriber","params":"(Subscriber<?superFlowable<T>>actual@Publisher<B>open@Function<?superB@?extendsPublisher<V>>close@intbufferSize)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/57/3f0257e9d217b975ce639123030a7932e22a98.src","preCode":"        WindowBoundaryMainSubscriber(Subscriber<? super Flowable<T>> actual,\n                Publisher<B> open, Function<? super B, ? extends Publisher<V>> close, int bufferSize) {\n            super(actual, new MpscLinkedQueue<Object>());\n            this.open = open;\n            this.close = close;\n            this.bufferSize = bufferSize;\n            this.resources = new CompositeDisposable();\n            this.ws = new ArrayList<UnicastProcessor<T>>();\n            windows.lazySet(1);\n        }\n","realPath":"src/main/java/io/reactivex/rxjava3/internal/operators/flowable/FlowableWindowBoundarySelector.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":76,"status":"B"}],"commitId":"a1693ecc9215027a7a3eae75272979ebb4d79a27","commitMessage":"@@@3.x: Refactor to io.reactivex.rxjava3.** (#6621)\n\n* 3.x: Refactor to io.reactivex.rxjava3.**\n\n* fix javadoc cleanup gradle\n\n* javadoc gradle again\n\n* Fix package location in text\n","date":"2019-08-16 20:51:17","modifiedFileCount":"0","status":"B","submitter":"David Karnok"},{"authorTime":"2019-12-17 17:19:08","codes":[{"authorDate":"2019-12-17 17:19:08","commitOrder":2,"curCode":"        WindowBoundaryMainObserver(Observer<? super Observable<T>> downstream,\n                ObservableSource<B> open, Function<? super B, ? extends ObservableSource<V>> closingIndicator, int bufferSize) {\n            this.downstream = downstream;\n            this.queue = new MpscLinkedQueue<Object>();\n            this.open = open;\n            this.closingIndicator = closingIndicator;\n            this.bufferSize = bufferSize;\n            this.resources = new CompositeDisposable();\n            this.windows = new ArrayList<UnicastSubject<T>>();\n            this.windowCount = new AtomicLong(1L);\n            this.downstreamDisposed = new AtomicBoolean();\n            this.error = new AtomicThrowable();\n            this.startObserver = new WindowStartObserver<B>(this);\n            this.requested = new AtomicLong();\n        }\n","date":"2019-12-17 17:19:08","endLine":100,"groupId":"9014","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"WindowBoundaryMainObserver","params":"(Observer<?superObservable<T>>downstream@ObservableSource<B>open@Function<?superB@?extendsObservableSource<V>>closingIndicator@intbufferSize)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/03/7c7d07733b756f7bd8bbdce59bd50108b9b427.src","preCode":"        WindowBoundaryMainObserver(Observer<? super Observable<T>> actual,\n                                            ObservableSource<B> open, Function<? super B, ? extends ObservableSource<V>> close, int bufferSize) {\n            super(actual, new MpscLinkedQueue<Object>());\n            this.open = open;\n            this.close = close;\n            this.bufferSize = bufferSize;\n            this.resources = new CompositeDisposable();\n            this.ws = new ArrayList<UnicastSubject<T>>();\n            windows.lazySet(1);\n        }\n","realPath":"src/main/java/io/reactivex/rxjava3/internal/operators/observable/ObservableWindowBoundarySelector.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":86,"status":"M"},{"authorDate":"2019-12-17 17:19:08","commitOrder":2,"curCode":"        WindowBoundaryMainSubscriber(Subscriber<? super Flowable<T>> actual,\n                Publisher<B> open, Function<? super B, ? extends Publisher<V>> closingIndicator, int bufferSize) {\n            this.downstream = actual;\n            this.queue = new MpscLinkedQueue<Object>();\n            this.open = open;\n            this.closingIndicator = closingIndicator;\n            this.bufferSize = bufferSize;\n            this.resources = new CompositeDisposable();\n            this.windows = new ArrayList<UnicastProcessor<T>>();\n            this.windowCount = new AtomicLong(1L);\n            this.downstreamCancelled = new AtomicBoolean();\n            this.error = new AtomicThrowable();\n            this.startSubscriber = new WindowStartSubscriber<B>(this);\n            this.requested = new AtomicLong();\n        }\n","date":"2019-12-17 17:19:08","endLine":100,"groupId":"9014","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"WindowBoundaryMainSubscriber","params":"(Subscriber<?superFlowable<T>>actual@Publisher<B>open@Function<?superB@?extendsPublisher<V>>closingIndicator@intbufferSize)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/63/ee8ccf3c0b5538c1d8fd1220a4a62d75b8a3b1.src","preCode":"        WindowBoundaryMainSubscriber(Subscriber<? super Flowable<T>> actual,\n                Publisher<B> open, Function<? super B, ? extends Publisher<V>> close, int bufferSize) {\n            super(actual, new MpscLinkedQueue<Object>());\n            this.open = open;\n            this.close = close;\n            this.bufferSize = bufferSize;\n            this.resources = new CompositeDisposable();\n            this.ws = new ArrayList<UnicastProcessor<T>>();\n            windows.lazySet(1);\n        }\n","realPath":"src/main/java/io/reactivex/rxjava3/internal/operators/flowable/FlowableWindowBoundarySelector.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":86,"status":"M"}],"commitId":"f96821f14c91752d323877a7874f480fd6b02f12","commitMessage":"@@@3.x: Fix window (boundary.  start/end) cancel and abandonment (#6762)\n\n","date":"2019-12-17 17:19:08","modifiedFileCount":"12","status":"M","submitter":"David Karnok"},{"authorTime":"2019-12-28 03:01:34","codes":[{"authorDate":"2019-12-28 03:01:34","commitOrder":3,"curCode":"        WindowBoundaryMainObserver(Observer<? super Observable<T>> downstream,\n                ObservableSource<B> open, Function<? super B, ? extends ObservableSource<V>> closingIndicator, int bufferSize) {\n            this.downstream = downstream;\n            this.queue = new MpscLinkedQueue<>();\n            this.open = open;\n            this.closingIndicator = closingIndicator;\n            this.bufferSize = bufferSize;\n            this.resources = new CompositeDisposable();\n            this.windows = new ArrayList<>();\n            this.windowCount = new AtomicLong(1L);\n            this.downstreamDisposed = new AtomicBoolean();\n            this.error = new AtomicThrowable();\n            this.startObserver = new WindowStartObserver<>(this);\n            this.requested = new AtomicLong();\n        }\n","date":"2019-12-28 03:01:34","endLine":99,"groupId":"102452","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"WindowBoundaryMainObserver","params":"(Observer<?superObservable<T>>downstream@ObservableSource<B>open@Function<?superB@?extendsObservableSource<V>>closingIndicator@intbufferSize)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/36/7ddf2d02f18bc27d4ba536b168cafcab3740ed.src","preCode":"        WindowBoundaryMainObserver(Observer<? super Observable<T>> downstream,\n                ObservableSource<B> open, Function<? super B, ? extends ObservableSource<V>> closingIndicator, int bufferSize) {\n            this.downstream = downstream;\n            this.queue = new MpscLinkedQueue<Object>();\n            this.open = open;\n            this.closingIndicator = closingIndicator;\n            this.bufferSize = bufferSize;\n            this.resources = new CompositeDisposable();\n            this.windows = new ArrayList<UnicastSubject<T>>();\n            this.windowCount = new AtomicLong(1L);\n            this.downstreamDisposed = new AtomicBoolean();\n            this.error = new AtomicThrowable();\n            this.startObserver = new WindowStartObserver<B>(this);\n            this.requested = new AtomicLong();\n        }\n","realPath":"src/main/java/io/reactivex/rxjava3/internal/operators/observable/ObservableWindowBoundarySelector.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":85,"status":"M"},{"authorDate":"2019-12-28 03:01:34","commitOrder":3,"curCode":"        WindowBoundaryMainSubscriber(Subscriber<? super Flowable<T>> actual,\n                Publisher<B> open, Function<? super B, ? extends Publisher<V>> closingIndicator, int bufferSize) {\n            this.downstream = actual;\n            this.queue = new MpscLinkedQueue<>();\n            this.open = open;\n            this.closingIndicator = closingIndicator;\n            this.bufferSize = bufferSize;\n            this.resources = new CompositeDisposable();\n            this.windows = new ArrayList<>();\n            this.windowCount = new AtomicLong(1L);\n            this.downstreamCancelled = new AtomicBoolean();\n            this.error = new AtomicThrowable();\n            this.startSubscriber = new WindowStartSubscriber<>(this);\n            this.requested = new AtomicLong();\n        }\n","date":"2019-12-28 03:01:34","endLine":99,"groupId":"102452","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"WindowBoundaryMainSubscriber","params":"(Subscriber<?superFlowable<T>>actual@Publisher<B>open@Function<?superB@?extendsPublisher<V>>closingIndicator@intbufferSize)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/f6/248b3355543d52feaf3ff288dd15a812949ca7.src","preCode":"        WindowBoundaryMainSubscriber(Subscriber<? super Flowable<T>> actual,\n                Publisher<B> open, Function<? super B, ? extends Publisher<V>> closingIndicator, int bufferSize) {\n            this.downstream = actual;\n            this.queue = new MpscLinkedQueue<Object>();\n            this.open = open;\n            this.closingIndicator = closingIndicator;\n            this.bufferSize = bufferSize;\n            this.resources = new CompositeDisposable();\n            this.windows = new ArrayList<UnicastProcessor<T>>();\n            this.windowCount = new AtomicLong(1L);\n            this.downstreamCancelled = new AtomicBoolean();\n            this.error = new AtomicThrowable();\n            this.startSubscriber = new WindowStartSubscriber<B>(this);\n            this.requested = new AtomicLong();\n        }\n","realPath":"src/main/java/io/reactivex/rxjava3/internal/operators/flowable/FlowableWindowBoundarySelector.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":85,"status":"M"}],"commitId":"79f8e6dde6446b1aa33c146eaedbb958086daf56","commitMessage":"@@@3.x: Fix diamonds.  spelling.  unnecessary code (#6804)\n\n","date":"2019-12-28 03:01:34","modifiedFileCount":"463","status":"M","submitter":"David Karnok"}]
