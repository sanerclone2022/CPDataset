[{"authorTime":"2019-08-16 20:51:17","codes":[{"authorDate":"2019-08-16 20:51:17","commitOrder":1,"curCode":"    public final <TRight, TLeftEnd, TRightEnd, R> Flowable<R> groupJoin(\n            Publisher<? extends TRight> other,\n            Function<? super T, ? extends Publisher<TLeftEnd>> leftEnd,\n            Function<? super TRight, ? extends Publisher<TRightEnd>> rightEnd,\n            BiFunction<? super T, ? super Flowable<TRight>, ? extends R> resultSelector) {\n        ObjectHelper.requireNonNull(other, \"other is null\");\n        ObjectHelper.requireNonNull(leftEnd, \"leftEnd is null\");\n        ObjectHelper.requireNonNull(rightEnd, \"rightEnd is null\");\n        ObjectHelper.requireNonNull(resultSelector, \"resultSelector is null\");\n        return RxJavaPlugins.onAssembly(new FlowableGroupJoin<T, TRight, TLeftEnd, TRightEnd, R>(\n                this, other, leftEnd, rightEnd, resultSelector));\n    }\n","date":"2019-08-16 20:51:17","endLine":11026,"groupId":"9772","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"groupJoin","params":"(Publisher<?extendsTRight>other@Function<?superT@?extendsPublisher<TLeftEnd>>leftEnd@Function<?superTRight@?extendsPublisher<TRightEnd>>rightEnd@BiFunction<?superT@?superFlowable<TRight>@?extendsR>resultSelector)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/f1/6fa2cf03001794eda0b11b8d1fe00bfa2fb6b9.src","preCode":"    public final <TRight, TLeftEnd, TRightEnd, R> Flowable<R> groupJoin(\n            Publisher<? extends TRight> other,\n            Function<? super T, ? extends Publisher<TLeftEnd>> leftEnd,\n            Function<? super TRight, ? extends Publisher<TRightEnd>> rightEnd,\n            BiFunction<? super T, ? super Flowable<TRight>, ? extends R> resultSelector) {\n        ObjectHelper.requireNonNull(other, \"other is null\");\n        ObjectHelper.requireNonNull(leftEnd, \"leftEnd is null\");\n        ObjectHelper.requireNonNull(rightEnd, \"rightEnd is null\");\n        ObjectHelper.requireNonNull(resultSelector, \"resultSelector is null\");\n        return RxJavaPlugins.onAssembly(new FlowableGroupJoin<T, TRight, TLeftEnd, TRightEnd, R>(\n                this, other, leftEnd, rightEnd, resultSelector));\n    }\n","realPath":"src/main/java/io/reactivex/rxjava3/core/Flowable.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":11015,"status":"B"},{"authorDate":"2019-08-16 20:51:17","commitOrder":1,"curCode":"    public final <TRight, TLeftEnd, TRightEnd, R> Flowable<R> join(\n            Publisher<? extends TRight> other,\n            Function<? super T, ? extends Publisher<TLeftEnd>> leftEnd,\n            Function<? super TRight, ? extends Publisher<TRightEnd>> rightEnd,\n            BiFunction<? super T, ? super TRight, ? extends R> resultSelector) {\n        ObjectHelper.requireNonNull(other, \"other is null\");\n        ObjectHelper.requireNonNull(leftEnd, \"leftEnd is null\");\n        ObjectHelper.requireNonNull(rightEnd, \"rightEnd is null\");\n        ObjectHelper.requireNonNull(resultSelector, \"resultSelector is null\");\n        return RxJavaPlugins.onAssembly(new FlowableJoin<T, TRight, TLeftEnd, TRightEnd, R>(\n                this, other, leftEnd, rightEnd, resultSelector));\n    }\n","date":"2019-08-16 20:51:17","endLine":11148,"groupId":"9772","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"join","params":"(Publisher<?extendsTRight>other@Function<?superT@?extendsPublisher<TLeftEnd>>leftEnd@Function<?superTRight@?extendsPublisher<TRightEnd>>rightEnd@BiFunction<?superT@?superTRight@?extendsR>resultSelector)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/f1/6fa2cf03001794eda0b11b8d1fe00bfa2fb6b9.src","preCode":"    public final <TRight, TLeftEnd, TRightEnd, R> Flowable<R> join(\n            Publisher<? extends TRight> other,\n            Function<? super T, ? extends Publisher<TLeftEnd>> leftEnd,\n            Function<? super TRight, ? extends Publisher<TRightEnd>> rightEnd,\n            BiFunction<? super T, ? super TRight, ? extends R> resultSelector) {\n        ObjectHelper.requireNonNull(other, \"other is null\");\n        ObjectHelper.requireNonNull(leftEnd, \"leftEnd is null\");\n        ObjectHelper.requireNonNull(rightEnd, \"rightEnd is null\");\n        ObjectHelper.requireNonNull(resultSelector, \"resultSelector is null\");\n        return RxJavaPlugins.onAssembly(new FlowableJoin<T, TRight, TLeftEnd, TRightEnd, R>(\n                this, other, leftEnd, rightEnd, resultSelector));\n    }\n","realPath":"src/main/java/io/reactivex/rxjava3/core/Flowable.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":11137,"status":"B"}],"commitId":"a1693ecc9215027a7a3eae75272979ebb4d79a27","commitMessage":"@@@3.x: Refactor to io.reactivex.rxjava3.** (#6621)\n\n* 3.x: Refactor to io.reactivex.rxjava3.**\n\n* fix javadoc cleanup gradle\n\n* javadoc gradle again\n\n* Fix package location in text\n","date":"2019-08-16 20:51:17","modifiedFileCount":"0","status":"B","submitter":"David Karnok"},{"authorTime":"2019-12-18 03:06:44","codes":[{"authorDate":"2019-12-18 03:06:44","commitOrder":2,"curCode":"    public final <TRight, TLeftEnd, TRightEnd, R> Flowable<R> groupJoin(\n            Publisher<? extends TRight> other,\n            Function<? super T, ? extends Publisher<TLeftEnd>> leftEnd,\n            Function<? super TRight, ? extends Publisher<TRightEnd>> rightEnd,\n            BiFunction<? super T, ? super Flowable<TRight>, ? extends R> resultSelector) {\n        Objects.requireNonNull(other, \"other is null\");\n        Objects.requireNonNull(leftEnd, \"leftEnd is null\");\n        Objects.requireNonNull(rightEnd, \"rightEnd is null\");\n        Objects.requireNonNull(resultSelector, \"resultSelector is null\");\n        return RxJavaPlugins.onAssembly(new FlowableGroupJoin<T, TRight, TLeftEnd, TRightEnd, R>(\n                this, other, leftEnd, rightEnd, resultSelector));\n    }\n","date":"2019-12-18 03:06:44","endLine":10888,"groupId":"6702","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"groupJoin","params":"(Publisher<?extendsTRight>other@Function<?superT@?extendsPublisher<TLeftEnd>>leftEnd@Function<?superTRight@?extendsPublisher<TRightEnd>>rightEnd@BiFunction<?superT@?superFlowable<TRight>@?extendsR>resultSelector)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/51/4845efbc67b5a91cda5e930ed14797beaeed88.src","preCode":"    public final <TRight, TLeftEnd, TRightEnd, R> Flowable<R> groupJoin(\n            Publisher<? extends TRight> other,\n            Function<? super T, ? extends Publisher<TLeftEnd>> leftEnd,\n            Function<? super TRight, ? extends Publisher<TRightEnd>> rightEnd,\n            BiFunction<? super T, ? super Flowable<TRight>, ? extends R> resultSelector) {\n        ObjectHelper.requireNonNull(other, \"other is null\");\n        ObjectHelper.requireNonNull(leftEnd, \"leftEnd is null\");\n        ObjectHelper.requireNonNull(rightEnd, \"rightEnd is null\");\n        ObjectHelper.requireNonNull(resultSelector, \"resultSelector is null\");\n        return RxJavaPlugins.onAssembly(new FlowableGroupJoin<T, TRight, TLeftEnd, TRightEnd, R>(\n                this, other, leftEnd, rightEnd, resultSelector));\n    }\n","realPath":"src/main/java/io/reactivex/rxjava3/core/Flowable.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":10877,"status":"M"},{"authorDate":"2019-12-18 03:06:44","commitOrder":2,"curCode":"    public final <TRight, TLeftEnd, TRightEnd, R> Flowable<R> join(\n            Publisher<? extends TRight> other,\n            Function<? super T, ? extends Publisher<TLeftEnd>> leftEnd,\n            Function<? super TRight, ? extends Publisher<TRightEnd>> rightEnd,\n            BiFunction<? super T, ? super TRight, ? extends R> resultSelector) {\n        Objects.requireNonNull(other, \"other is null\");\n        Objects.requireNonNull(leftEnd, \"leftEnd is null\");\n        Objects.requireNonNull(rightEnd, \"rightEnd is null\");\n        Objects.requireNonNull(resultSelector, \"resultSelector is null\");\n        return RxJavaPlugins.onAssembly(new FlowableJoin<T, TRight, TLeftEnd, TRightEnd, R>(\n                this, other, leftEnd, rightEnd, resultSelector));\n    }\n","date":"2019-12-18 03:06:44","endLine":11010,"groupId":"6702","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"join","params":"(Publisher<?extendsTRight>other@Function<?superT@?extendsPublisher<TLeftEnd>>leftEnd@Function<?superTRight@?extendsPublisher<TRightEnd>>rightEnd@BiFunction<?superT@?superTRight@?extendsR>resultSelector)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/51/4845efbc67b5a91cda5e930ed14797beaeed88.src","preCode":"    public final <TRight, TLeftEnd, TRightEnd, R> Flowable<R> join(\n            Publisher<? extends TRight> other,\n            Function<? super T, ? extends Publisher<TLeftEnd>> leftEnd,\n            Function<? super TRight, ? extends Publisher<TRightEnd>> rightEnd,\n            BiFunction<? super T, ? super TRight, ? extends R> resultSelector) {\n        ObjectHelper.requireNonNull(other, \"other is null\");\n        ObjectHelper.requireNonNull(leftEnd, \"leftEnd is null\");\n        ObjectHelper.requireNonNull(rightEnd, \"rightEnd is null\");\n        ObjectHelper.requireNonNull(resultSelector, \"resultSelector is null\");\n        return RxJavaPlugins.onAssembly(new FlowableJoin<T, TRight, TLeftEnd, TRightEnd, R>(\n                this, other, leftEnd, rightEnd, resultSelector));\n    }\n","realPath":"src/main/java/io/reactivex/rxjava3/core/Flowable.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":10999,"status":"M"}],"commitId":"6ba932c9a3752c6d85d65bd2292c3a47cab64fd6","commitMessage":"@@@Replace ObjectHelper.requireNonNull with Objects.requireNonNull (#6771)\n\n","date":"2019-12-18 03:06:44","modifiedFileCount":"199","status":"M","submitter":"Jake Wharton"},{"authorTime":"2019-12-24 17:18:06","codes":[{"authorDate":"2019-12-24 17:18:06","commitOrder":3,"curCode":"    public final <TRight, TLeftEnd, TRightEnd, R> Flowable<R> groupJoin(\n            @NonNull Publisher<? extends TRight> other,\n            @NonNull Function<? super T, ? extends Publisher<TLeftEnd>> leftEnd,\n            @NonNull Function<? super TRight, ? extends Publisher<TRightEnd>> rightEnd,\n            @NonNull BiFunction<? super T, ? super Flowable<TRight>, ? extends R> resultSelector) {\n        Objects.requireNonNull(other, \"other is null\");\n        Objects.requireNonNull(leftEnd, \"leftEnd is null\");\n        Objects.requireNonNull(rightEnd, \"rightEnd is null\");\n        Objects.requireNonNull(resultSelector, \"resultSelector is null\");\n        return RxJavaPlugins.onAssembly(new FlowableGroupJoin<T, TRight, TLeftEnd, TRightEnd, R>(\n                this, other, leftEnd, rightEnd, resultSelector));\n    }\n","date":"2019-12-24 17:18:06","endLine":11043,"groupId":"6702","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"groupJoin","params":"(@NonNullPublisher<?extendsTRight>other@@NonNullFunction<?superT@?extendsPublisher<TLeftEnd>>leftEnd@@NonNullFunction<?superTRight@?extendsPublisher<TRightEnd>>rightEnd@@NonNullBiFunction<?superT@?superFlowable<TRight>@?extendsR>resultSelector)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/c5/bdb06b2cc43b1a9736de785b99fa56fac4634b.src","preCode":"    public final <TRight, TLeftEnd, TRightEnd, R> Flowable<R> groupJoin(\n            Publisher<? extends TRight> other,\n            Function<? super T, ? extends Publisher<TLeftEnd>> leftEnd,\n            Function<? super TRight, ? extends Publisher<TRightEnd>> rightEnd,\n            BiFunction<? super T, ? super Flowable<TRight>, ? extends R> resultSelector) {\n        Objects.requireNonNull(other, \"other is null\");\n        Objects.requireNonNull(leftEnd, \"leftEnd is null\");\n        Objects.requireNonNull(rightEnd, \"rightEnd is null\");\n        Objects.requireNonNull(resultSelector, \"resultSelector is null\");\n        return RxJavaPlugins.onAssembly(new FlowableGroupJoin<T, TRight, TLeftEnd, TRightEnd, R>(\n                this, other, leftEnd, rightEnd, resultSelector));\n    }\n","realPath":"src/main/java/io/reactivex/rxjava3/core/Flowable.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":11032,"status":"M"},{"authorDate":"2019-12-24 17:18:06","commitOrder":3,"curCode":"    public final <TRight, TLeftEnd, TRightEnd, R> Flowable<R> join(\n            @NonNull Publisher<? extends TRight> other,\n            @NonNull Function<? super T, ? extends Publisher<TLeftEnd>> leftEnd,\n            @NonNull Function<? super TRight, ? extends Publisher<TRightEnd>> rightEnd,\n            @NonNull BiFunction<? super T, ? super TRight, ? extends R> resultSelector) {\n        Objects.requireNonNull(other, \"other is null\");\n        Objects.requireNonNull(leftEnd, \"leftEnd is null\");\n        Objects.requireNonNull(rightEnd, \"rightEnd is null\");\n        Objects.requireNonNull(resultSelector, \"resultSelector is null\");\n        return RxJavaPlugins.onAssembly(new FlowableJoin<T, TRight, TLeftEnd, TRightEnd, R>(\n                this, other, leftEnd, rightEnd, resultSelector));\n    }\n","date":"2019-12-24 17:18:06","endLine":11168,"groupId":"6702","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"join","params":"(@NonNullPublisher<?extendsTRight>other@@NonNullFunction<?superT@?extendsPublisher<TLeftEnd>>leftEnd@@NonNullFunction<?superTRight@?extendsPublisher<TRightEnd>>rightEnd@@NonNullBiFunction<?superT@?superTRight@?extendsR>resultSelector)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/c5/bdb06b2cc43b1a9736de785b99fa56fac4634b.src","preCode":"    public final <TRight, TLeftEnd, TRightEnd, R> Flowable<R> join(\n            Publisher<? extends TRight> other,\n            Function<? super T, ? extends Publisher<TLeftEnd>> leftEnd,\n            Function<? super TRight, ? extends Publisher<TRightEnd>> rightEnd,\n            BiFunction<? super T, ? super TRight, ? extends R> resultSelector) {\n        Objects.requireNonNull(other, \"other is null\");\n        Objects.requireNonNull(leftEnd, \"leftEnd is null\");\n        Objects.requireNonNull(rightEnd, \"rightEnd is null\");\n        Objects.requireNonNull(resultSelector, \"resultSelector is null\");\n        return RxJavaPlugins.onAssembly(new FlowableJoin<T, TRight, TLeftEnd, TRightEnd, R>(\n                this, other, leftEnd, rightEnd, resultSelector));\n    }\n","realPath":"src/main/java/io/reactivex/rxjava3/core/Flowable.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":11157,"status":"M"}],"commitId":"b57169babb184d0adc2fa28cf0425c4f0c1f8555","commitMessage":"@@@3.x: Add NonNull & SafeVarargs annotations + validator (#6791)\n\n","date":"2019-12-24 17:18:06","modifiedFileCount":"28","status":"M","submitter":"David Karnok"},{"authorTime":"2019-12-24 17:18:06","codes":[{"authorDate":"2019-12-28 03:01:34","commitOrder":4,"curCode":"    public final <TRight, TLeftEnd, TRightEnd, R> Flowable<R> groupJoin(\n            @NonNull Publisher<? extends TRight> other,\n            @NonNull Function<? super T, ? extends Publisher<TLeftEnd>> leftEnd,\n            @NonNull Function<? super TRight, ? extends Publisher<TRightEnd>> rightEnd,\n            @NonNull BiFunction<? super T, ? super Flowable<TRight>, ? extends R> resultSelector) {\n        Objects.requireNonNull(other, \"other is null\");\n        Objects.requireNonNull(leftEnd, \"leftEnd is null\");\n        Objects.requireNonNull(rightEnd, \"rightEnd is null\");\n        Objects.requireNonNull(resultSelector, \"resultSelector is null\");\n        return RxJavaPlugins.onAssembly(new FlowableGroupJoin<>(\n                this, other, leftEnd, rightEnd, resultSelector));\n    }\n","date":"2019-12-28 03:01:34","endLine":11105,"groupId":"6702","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"groupJoin","params":"(@NonNullPublisher<?extendsTRight>other@@NonNullFunction<?superT@?extendsPublisher<TLeftEnd>>leftEnd@@NonNullFunction<?superTRight@?extendsPublisher<TRightEnd>>rightEnd@@NonNullBiFunction<?superT@?superFlowable<TRight>@?extendsR>resultSelector)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/97/785c1f4c0b62a1fb36075eaf2808439a448b60.src","preCode":"    public final <TRight, TLeftEnd, TRightEnd, R> Flowable<R> groupJoin(\n            @NonNull Publisher<? extends TRight> other,\n            @NonNull Function<? super T, ? extends Publisher<TLeftEnd>> leftEnd,\n            @NonNull Function<? super TRight, ? extends Publisher<TRightEnd>> rightEnd,\n            @NonNull BiFunction<? super T, ? super Flowable<TRight>, ? extends R> resultSelector) {\n        Objects.requireNonNull(other, \"other is null\");\n        Objects.requireNonNull(leftEnd, \"leftEnd is null\");\n        Objects.requireNonNull(rightEnd, \"rightEnd is null\");\n        Objects.requireNonNull(resultSelector, \"resultSelector is null\");\n        return RxJavaPlugins.onAssembly(new FlowableGroupJoin<T, TRight, TLeftEnd, TRightEnd, R>(\n                this, other, leftEnd, rightEnd, resultSelector));\n    }\n","realPath":"src/main/java/io/reactivex/rxjava3/core/Flowable.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":11094,"status":"M"},{"authorDate":"2019-12-24 17:18:06","commitOrder":4,"curCode":"    public final <TRight, TLeftEnd, TRightEnd, R> Flowable<R> join(\n            @NonNull Publisher<? extends TRight> other,\n            @NonNull Function<? super T, ? extends Publisher<TLeftEnd>> leftEnd,\n            @NonNull Function<? super TRight, ? extends Publisher<TRightEnd>> rightEnd,\n            @NonNull BiFunction<? super T, ? super TRight, ? extends R> resultSelector) {\n        Objects.requireNonNull(other, \"other is null\");\n        Objects.requireNonNull(leftEnd, \"leftEnd is null\");\n        Objects.requireNonNull(rightEnd, \"rightEnd is null\");\n        Objects.requireNonNull(resultSelector, \"resultSelector is null\");\n        return RxJavaPlugins.onAssembly(new FlowableJoin<T, TRight, TLeftEnd, TRightEnd, R>(\n                this, other, leftEnd, rightEnd, resultSelector));\n    }\n","date":"2019-12-24 17:18:06","endLine":11168,"groupId":"6702","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"join","params":"(@NonNullPublisher<?extendsTRight>other@@NonNullFunction<?superT@?extendsPublisher<TLeftEnd>>leftEnd@@NonNullFunction<?superTRight@?extendsPublisher<TRightEnd>>rightEnd@@NonNullBiFunction<?superT@?superTRight@?extendsR>resultSelector)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/c5/bdb06b2cc43b1a9736de785b99fa56fac4634b.src","preCode":"    public final <TRight, TLeftEnd, TRightEnd, R> Flowable<R> join(\n            @NonNull Publisher<? extends TRight> other,\n            @NonNull Function<? super T, ? extends Publisher<TLeftEnd>> leftEnd,\n            @NonNull Function<? super TRight, ? extends Publisher<TRightEnd>> rightEnd,\n            @NonNull BiFunction<? super T, ? super TRight, ? extends R> resultSelector) {\n        Objects.requireNonNull(other, \"other is null\");\n        Objects.requireNonNull(leftEnd, \"leftEnd is null\");\n        Objects.requireNonNull(rightEnd, \"rightEnd is null\");\n        Objects.requireNonNull(resultSelector, \"resultSelector is null\");\n        return RxJavaPlugins.onAssembly(new FlowableJoin<T, TRight, TLeftEnd, TRightEnd, R>(\n                this, other, leftEnd, rightEnd, resultSelector));\n    }\n","realPath":"src/main/java/io/reactivex/rxjava3/core/Flowable.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":11157,"status":"N"}],"commitId":"79f8e6dde6446b1aa33c146eaedbb958086daf56","commitMessage":"@@@3.x: Fix diamonds.  spelling.  unnecessary code (#6804)\n\n","date":"2019-12-28 03:01:34","modifiedFileCount":"463","status":"M","submitter":"David Karnok"},{"authorTime":"2020-01-14 15:49:53","codes":[{"authorDate":"2020-01-14 15:49:53","commitOrder":5,"curCode":"    public final <TRight, TLeftEnd, TRightEnd, R> Flowable<R> groupJoin(\n            @NonNull Publisher<@NonNull ? extends TRight> other,\n            @NonNull Function<? super T, ? extends Publisher<@NonNull TLeftEnd>> leftEnd,\n            @NonNull Function<? super TRight, ? extends Publisher<@NonNull TRightEnd>> rightEnd,\n            @NonNull BiFunction<? super T, ? super Flowable<TRight>, ? extends R> resultSelector) {\n        Objects.requireNonNull(other, \"other is null\");\n        Objects.requireNonNull(leftEnd, \"leftEnd is null\");\n        Objects.requireNonNull(rightEnd, \"rightEnd is null\");\n        Objects.requireNonNull(resultSelector, \"resultSelector is null\");\n        return RxJavaPlugins.onAssembly(new FlowableGroupJoin<>(\n                this, other, leftEnd, rightEnd, resultSelector));\n    }\n","date":"2020-01-14 15:49:53","endLine":11362,"groupId":"6702","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"groupJoin","params":"(@NonNullPublisher<@NonNull?extendsTRight>other@@NonNullFunction<?superT@?extendsPublisher<@NonNullTLeftEnd>>leftEnd@@NonNullFunction<?superTRight@?extendsPublisher<@NonNullTRightEnd>>rightEnd@@NonNullBiFunction<?superT@?superFlowable<TRight>@?extendsR>resultSelector)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/48/6b0cb629defb0f51e33900cdb33090c85e4725.src","preCode":"    public final <TRight, TLeftEnd, TRightEnd, R> Flowable<R> groupJoin(\n            @NonNull Publisher<? extends TRight> other,\n            @NonNull Function<? super T, ? extends Publisher<TLeftEnd>> leftEnd,\n            @NonNull Function<? super TRight, ? extends Publisher<TRightEnd>> rightEnd,\n            @NonNull BiFunction<? super T, ? super Flowable<TRight>, ? extends R> resultSelector) {\n        Objects.requireNonNull(other, \"other is null\");\n        Objects.requireNonNull(leftEnd, \"leftEnd is null\");\n        Objects.requireNonNull(rightEnd, \"rightEnd is null\");\n        Objects.requireNonNull(resultSelector, \"resultSelector is null\");\n        return RxJavaPlugins.onAssembly(new FlowableGroupJoin<>(\n                this, other, leftEnd, rightEnd, resultSelector));\n    }\n","realPath":"src/main/java/io/reactivex/rxjava3/core/Flowable.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":11351,"status":"M"},{"authorDate":"2020-01-14 15:49:53","commitOrder":5,"curCode":"    public final <TRight, TLeftEnd, TRightEnd, R> Flowable<R> join(\n            @NonNull Publisher<@NonNull ? extends TRight> other,\n            @NonNull Function<? super T, ? extends Publisher<@NonNull TLeftEnd>> leftEnd,\n            @NonNull Function<? super TRight, ? extends Publisher<@NonNull TRightEnd>> rightEnd,\n            @NonNull BiFunction<? super T, ? super TRight, ? extends R> resultSelector) {\n        Objects.requireNonNull(other, \"other is null\");\n        Objects.requireNonNull(leftEnd, \"leftEnd is null\");\n        Objects.requireNonNull(rightEnd, \"rightEnd is null\");\n        Objects.requireNonNull(resultSelector, \"resultSelector is null\");\n        return RxJavaPlugins.onAssembly(new FlowableJoin<T, TRight, TLeftEnd, TRightEnd, R>(\n                this, other, leftEnd, rightEnd, resultSelector));\n    }\n","date":"2020-01-14 15:49:53","endLine":11488,"groupId":"6702","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"join","params":"(@NonNullPublisher<@NonNull?extendsTRight>other@@NonNullFunction<?superT@?extendsPublisher<@NonNullTLeftEnd>>leftEnd@@NonNullFunction<?superTRight@?extendsPublisher<@NonNullTRightEnd>>rightEnd@@NonNullBiFunction<?superT@?superTRight@?extendsR>resultSelector)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/48/6b0cb629defb0f51e33900cdb33090c85e4725.src","preCode":"    public final <TRight, TLeftEnd, TRightEnd, R> Flowable<R> join(\n            @NonNull Publisher<? extends TRight> other,\n            @NonNull Function<? super T, ? extends Publisher<TLeftEnd>> leftEnd,\n            @NonNull Function<? super TRight, ? extends Publisher<TRightEnd>> rightEnd,\n            @NonNull BiFunction<? super T, ? super TRight, ? extends R> resultSelector) {\n        Objects.requireNonNull(other, \"other is null\");\n        Objects.requireNonNull(leftEnd, \"leftEnd is null\");\n        Objects.requireNonNull(rightEnd, \"rightEnd is null\");\n        Objects.requireNonNull(resultSelector, \"resultSelector is null\");\n        return RxJavaPlugins.onAssembly(new FlowableJoin<T, TRight, TLeftEnd, TRightEnd, R>(\n                this, other, leftEnd, rightEnd, resultSelector));\n    }\n","realPath":"src/main/java/io/reactivex/rxjava3/core/Flowable.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":11477,"status":"M"}],"commitId":"fb6dab6847d858b22fe6a36558cf3b62dc10627d","commitMessage":"@@@3.x: Add nullability annotations to type arguments (#6840)\n\n","date":"2020-01-14 15:49:53","modifiedFileCount":"75","status":"M","submitter":"David Karnok"},{"authorTime":"2021-07-25 00:35:45","codes":[{"authorDate":"2021-07-25 00:35:45","commitOrder":6,"curCode":"    public final <@NonNull TRight, @NonNull TLeftEnd, @NonNull TRightEnd, @NonNull R> Flowable<R> groupJoin(\n            @NonNull Publisher<? extends TRight> other,\n            @NonNull Function<? super T, @NonNull ? extends Publisher<TLeftEnd>> leftEnd,\n            @NonNull Function<? super TRight, @NonNull ? extends Publisher<TRightEnd>> rightEnd,\n            @NonNull BiFunction<? super T, ? super Flowable<TRight>, ? extends R> resultSelector) {\n        Objects.requireNonNull(other, \"other is null\");\n        Objects.requireNonNull(leftEnd, \"leftEnd is null\");\n        Objects.requireNonNull(rightEnd, \"rightEnd is null\");\n        Objects.requireNonNull(resultSelector, \"resultSelector is null\");\n        return RxJavaPlugins.onAssembly(new FlowableGroupJoin<>(\n                this, other, leftEnd, rightEnd, resultSelector));\n    }\n","date":"2021-07-25 00:35:45","endLine":11626,"groupId":"104362","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"groupJoin","params":"(@NonNullPublisher<?extendsTRight>other@@NonNullFunction<?superT@@NonNull?extendsPublisher<TLeftEnd>>leftEnd@@NonNullFunction<?superTRight@@NonNull?extendsPublisher<TRightEnd>>rightEnd@@NonNullBiFunction<?superT@?superFlowable<TRight>@?extendsR>resultSelector)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/31/827d9e1c0235ea4c571f5df54be8e515e94da8.src","preCode":"    public final <TRight, TLeftEnd, TRightEnd, R> Flowable<R> groupJoin(\n            @NonNull Publisher<@NonNull ? extends TRight> other,\n            @NonNull Function<? super T, ? extends Publisher<@NonNull TLeftEnd>> leftEnd,\n            @NonNull Function<? super TRight, ? extends Publisher<@NonNull TRightEnd>> rightEnd,\n            @NonNull BiFunction<? super T, ? super Flowable<TRight>, ? extends R> resultSelector) {\n        Objects.requireNonNull(other, \"other is null\");\n        Objects.requireNonNull(leftEnd, \"leftEnd is null\");\n        Objects.requireNonNull(rightEnd, \"rightEnd is null\");\n        Objects.requireNonNull(resultSelector, \"resultSelector is null\");\n        return RxJavaPlugins.onAssembly(new FlowableGroupJoin<>(\n                this, other, leftEnd, rightEnd, resultSelector));\n    }\n","realPath":"src/main/java/io/reactivex/rxjava3/core/Flowable.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":11615,"status":"M"},{"authorDate":"2021-07-25 00:35:45","commitOrder":6,"curCode":"    public final <@NonNull TRight, @NonNull TLeftEnd, @NonNull TRightEnd, @NonNull R> Flowable<R> join(\n            @NonNull Publisher<? extends TRight> other,\n            @NonNull Function<? super T, @NonNull ? extends Publisher<TLeftEnd>> leftEnd,\n            @NonNull Function<? super TRight, @NonNull ? extends Publisher<TRightEnd>> rightEnd,\n            @NonNull BiFunction<? super T, ? super TRight, ? extends R> resultSelector) {\n        Objects.requireNonNull(other, \"other is null\");\n        Objects.requireNonNull(leftEnd, \"leftEnd is null\");\n        Objects.requireNonNull(rightEnd, \"rightEnd is null\");\n        Objects.requireNonNull(resultSelector, \"resultSelector is null\");\n        return RxJavaPlugins.onAssembly(new FlowableJoin<T, TRight, TLeftEnd, TRightEnd, R>(\n                this, other, leftEnd, rightEnd, resultSelector));\n    }\n","date":"2021-07-25 00:35:45","endLine":11750,"groupId":"104362","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"join","params":"(@NonNullPublisher<?extendsTRight>other@@NonNullFunction<?superT@@NonNull?extendsPublisher<TLeftEnd>>leftEnd@@NonNullFunction<?superTRight@@NonNull?extendsPublisher<TRightEnd>>rightEnd@@NonNullBiFunction<?superT@?superTRight@?extendsR>resultSelector)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/31/827d9e1c0235ea4c571f5df54be8e515e94da8.src","preCode":"    public final <TRight, TLeftEnd, TRightEnd, R> Flowable<R> join(\n            @NonNull Publisher<@NonNull ? extends TRight> other,\n            @NonNull Function<? super T, ? extends Publisher<@NonNull TLeftEnd>> leftEnd,\n            @NonNull Function<? super TRight, ? extends Publisher<@NonNull TRightEnd>> rightEnd,\n            @NonNull BiFunction<? super T, ? super TRight, ? extends R> resultSelector) {\n        Objects.requireNonNull(other, \"other is null\");\n        Objects.requireNonNull(leftEnd, \"leftEnd is null\");\n        Objects.requireNonNull(rightEnd, \"rightEnd is null\");\n        Objects.requireNonNull(resultSelector, \"resultSelector is null\");\n        return RxJavaPlugins.onAssembly(new FlowableJoin<T, TRight, TLeftEnd, TRightEnd, R>(\n                this, other, leftEnd, rightEnd, resultSelector));\n    }\n","realPath":"src/main/java/io/reactivex/rxjava3/core/Flowable.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":11739,"status":"M"}],"commitId":"40ca8eff4a0d6559258489cf282471f5e3b1a229","commitMessage":"@@@3.x: Move nullability annotations into the type argument declaration (#7303)\n\n* 3.x: Move nullability annotations into the type argument declaration\n\n* Reinforce Function<T.  R> return argument type where R is non-trivial","date":"2021-07-25 00:35:45","modifiedFileCount":"17","status":"M","submitter":"David Karnok"}]
