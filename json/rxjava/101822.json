[{"authorTime":"2019-08-16 20:51:17","codes":[{"authorDate":"2019-08-16 20:51:17","commitOrder":1,"curCode":"        public void onSuccess(T value) {\n            CompletableSource cs;\n\n            try {\n                cs = ObjectHelper.requireNonNull(mapper.apply(value), \"The mapper returned a null CompletableSource\");\n            } catch (Throwable ex) {\n                Exceptions.throwIfFatal(ex);\n                onError(ex);\n                return;\n            }\n\n            if (!isDisposed()) {\n                cs.subscribe(this);\n            }\n        }\n","date":"2019-08-16 20:51:17","endLine":93,"groupId":"8190","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"onSuccess","params":"(Tvalue)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/03/edadb83b17ff7888a42f98e17b314062dfbdf1.src","preCode":"        public void onSuccess(T value) {\n            CompletableSource cs;\n\n            try {\n                cs = ObjectHelper.requireNonNull(mapper.apply(value), \"The mapper returned a null CompletableSource\");\n            } catch (Throwable ex) {\n                Exceptions.throwIfFatal(ex);\n                onError(ex);\n                return;\n            }\n\n            if (!isDisposed()) {\n                cs.subscribe(this);\n            }\n        }\n","realPath":"src/main/java/io/reactivex/rxjava3/internal/operators/single/SingleFlatMapCompletable.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":79,"status":"B"},{"authorDate":"2019-08-16 20:51:17","commitOrder":1,"curCode":"        public void onSuccess(T value) {\n            SingleSource<? extends R> ss;\n\n            try {\n                ss = ObjectHelper.requireNonNull(mapper.apply(value), \"The mapper returned a null SingleSource\");\n            } catch (Throwable ex) {\n                Exceptions.throwIfFatal(ex);\n                onError(ex);\n                return;\n            }\n\n            if (!isDisposed()) {\n                ss.subscribe(new FlatMapSingleObserver<R>(this, downstream));\n            }\n        }\n","date":"2019-08-16 20:51:17","endLine":94,"groupId":"12781","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"onSuccess","params":"(Tvalue)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/01/1cbd9ab744cb6a138932460427048a46b985ae.src","preCode":"        public void onSuccess(T value) {\n            SingleSource<? extends R> ss;\n\n            try {\n                ss = ObjectHelper.requireNonNull(mapper.apply(value), \"The mapper returned a null SingleSource\");\n            } catch (Throwable ex) {\n                Exceptions.throwIfFatal(ex);\n                onError(ex);\n                return;\n            }\n\n            if (!isDisposed()) {\n                ss.subscribe(new FlatMapSingleObserver<R>(this, downstream));\n            }\n        }\n","realPath":"src/main/java/io/reactivex/rxjava3/internal/operators/maybe/MaybeFlatMapSingle.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":80,"status":"B"}],"commitId":"a1693ecc9215027a7a3eae75272979ebb4d79a27","commitMessage":"@@@3.x: Refactor to io.reactivex.rxjava3.** (#6621)\n\n* 3.x: Refactor to io.reactivex.rxjava3.**\n\n* fix javadoc cleanup gradle\n\n* javadoc gradle again\n\n* Fix package location in text\n","date":"2019-08-16 20:51:17","modifiedFileCount":"0","status":"B","submitter":"David Karnok"},{"authorTime":"2019-12-18 03:06:44","codes":[{"authorDate":"2019-12-18 03:06:44","commitOrder":2,"curCode":"        public void onSuccess(T value) {\n            CompletableSource cs;\n\n            try {\n                cs = Objects.requireNonNull(mapper.apply(value), \"The mapper returned a null CompletableSource\");\n            } catch (Throwable ex) {\n                Exceptions.throwIfFatal(ex);\n                onError(ex);\n                return;\n            }\n\n            if (!isDisposed()) {\n                cs.subscribe(this);\n            }\n        }\n","date":"2019-12-18 03:06:44","endLine":93,"groupId":"8190","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"onSuccess","params":"(Tvalue)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/d4/a9f547372153223ed8436b406e4d3ba93f613a.src","preCode":"        public void onSuccess(T value) {\n            CompletableSource cs;\n\n            try {\n                cs = ObjectHelper.requireNonNull(mapper.apply(value), \"The mapper returned a null CompletableSource\");\n            } catch (Throwable ex) {\n                Exceptions.throwIfFatal(ex);\n                onError(ex);\n                return;\n            }\n\n            if (!isDisposed()) {\n                cs.subscribe(this);\n            }\n        }\n","realPath":"src/main/java/io/reactivex/rxjava3/internal/operators/single/SingleFlatMapCompletable.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":79,"status":"M"},{"authorDate":"2019-12-18 03:06:44","commitOrder":2,"curCode":"        public void onSuccess(T value) {\n            SingleSource<? extends R> ss;\n\n            try {\n                ss = Objects.requireNonNull(mapper.apply(value), \"The mapper returned a null SingleSource\");\n            } catch (Throwable ex) {\n                Exceptions.throwIfFatal(ex);\n                onError(ex);\n                return;\n            }\n\n            if (!isDisposed()) {\n                ss.subscribe(new FlatMapSingleObserver<R>(this, downstream));\n            }\n        }\n","date":"2019-12-18 03:06:44","endLine":94,"groupId":"12781","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"onSuccess","params":"(Tvalue)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/38/ec9417d92283d0198eaf01651db9ae6b8e0016.src","preCode":"        public void onSuccess(T value) {\n            SingleSource<? extends R> ss;\n\n            try {\n                ss = ObjectHelper.requireNonNull(mapper.apply(value), \"The mapper returned a null SingleSource\");\n            } catch (Throwable ex) {\n                Exceptions.throwIfFatal(ex);\n                onError(ex);\n                return;\n            }\n\n            if (!isDisposed()) {\n                ss.subscribe(new FlatMapSingleObserver<R>(this, downstream));\n            }\n        }\n","realPath":"src/main/java/io/reactivex/rxjava3/internal/operators/maybe/MaybeFlatMapSingle.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":80,"status":"M"}],"commitId":"6ba932c9a3752c6d85d65bd2292c3a47cab64fd6","commitMessage":"@@@Replace ObjectHelper.requireNonNull with Objects.requireNonNull (#6771)\n\n","date":"2019-12-18 03:06:44","modifiedFileCount":"199","status":"M","submitter":"Jake Wharton"},{"authorTime":"2020-01-29 04:32:19","codes":[{"authorDate":"2019-12-18 03:06:44","commitOrder":3,"curCode":"        public void onSuccess(T value) {\n            CompletableSource cs;\n\n            try {\n                cs = Objects.requireNonNull(mapper.apply(value), \"The mapper returned a null CompletableSource\");\n            } catch (Throwable ex) {\n                Exceptions.throwIfFatal(ex);\n                onError(ex);\n                return;\n            }\n\n            if (!isDisposed()) {\n                cs.subscribe(this);\n            }\n        }\n","date":"2019-12-18 03:06:44","endLine":93,"groupId":"8190","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"onSuccess","params":"(Tvalue)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/d4/a9f547372153223ed8436b406e4d3ba93f613a.src","preCode":"        public void onSuccess(T value) {\n            CompletableSource cs;\n\n            try {\n                cs = Objects.requireNonNull(mapper.apply(value), \"The mapper returned a null CompletableSource\");\n            } catch (Throwable ex) {\n                Exceptions.throwIfFatal(ex);\n                onError(ex);\n                return;\n            }\n\n            if (!isDisposed()) {\n                cs.subscribe(this);\n            }\n        }\n","realPath":"src/main/java/io/reactivex/rxjava3/internal/operators/single/SingleFlatMapCompletable.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":79,"status":"N"},{"authorDate":"2020-01-29 04:32:19","commitOrder":3,"curCode":"        public void onSuccess(T value) {\n            SingleSource<? extends R> ss;\n\n            try {\n                ss = Objects.requireNonNull(mapper.apply(value), \"The mapper returned a null SingleSource\");\n            } catch (Throwable ex) {\n                Exceptions.throwIfFatal(ex);\n                onError(ex);\n                return;\n            }\n\n            ss.subscribe(new FlatMapSingleObserver<R>(this, downstream));\n        }\n","date":"2020-01-29 04:32:19","endLine":93,"groupId":"12781","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"onSuccess","params":"(Tvalue)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/ae/d71dc855be24ee38bf8bef3338b66e950eb23b.src","preCode":"        public void onSuccess(T value) {\n            SingleSource<? extends R> ss;\n\n            try {\n                ss = Objects.requireNonNull(mapper.apply(value), \"The mapper returned a null SingleSource\");\n            } catch (Throwable ex) {\n                Exceptions.throwIfFatal(ex);\n                onError(ex);\n                return;\n            }\n\n            if (!isDisposed()) {\n                ss.subscribe(new FlatMapSingleObserver<R>(this, downstream));\n            }\n        }\n","realPath":"src/main/java/io/reactivex/rxjava3/internal/operators/maybe/MaybeFlatMapSingle.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":81,"status":"M"}],"commitId":"f1a795da0d4cdfb3133206ad8e3887bdb8ba948b","commitMessage":"@@@3.x: Swap Maybe.flatMapSingle and Maybe.flatMapSingleElement (#6891)\n\n* Deleted Maybe.flatMapSingle\n\nAnd replaced tests with flatMapSingle().toSingle()\n\n* Renamed Maybe.flatMapSingleElement to flatMapSingle\n\n* Deleted unused MaybeFlatMapSingle operator\n\n* Renamed operator MaybeFlatMapSingleElement to MaybeFlatMapSingle\n\n* Add Ignore to XFlatMapTest.maybeSingle\n","date":"2020-01-29 04:32:19","modifiedFileCount":"5","status":"M","submitter":"slisaasquatch"},{"authorTime":"2020-01-29 19:52:12","codes":[{"authorDate":"2019-12-18 03:06:44","commitOrder":4,"curCode":"        public void onSuccess(T value) {\n            CompletableSource cs;\n\n            try {\n                cs = Objects.requireNonNull(mapper.apply(value), \"The mapper returned a null CompletableSource\");\n            } catch (Throwable ex) {\n                Exceptions.throwIfFatal(ex);\n                onError(ex);\n                return;\n            }\n\n            if (!isDisposed()) {\n                cs.subscribe(this);\n            }\n        }\n","date":"2019-12-18 03:06:44","endLine":93,"groupId":"101822","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"onSuccess","params":"(Tvalue)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/d4/a9f547372153223ed8436b406e4d3ba93f613a.src","preCode":"        public void onSuccess(T value) {\n            CompletableSource cs;\n\n            try {\n                cs = Objects.requireNonNull(mapper.apply(value), \"The mapper returned a null CompletableSource\");\n            } catch (Throwable ex) {\n                Exceptions.throwIfFatal(ex);\n                onError(ex);\n                return;\n            }\n\n            if (!isDisposed()) {\n                cs.subscribe(this);\n            }\n        }\n","realPath":"src/main/java/io/reactivex/rxjava3/internal/operators/single/SingleFlatMapCompletable.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":79,"status":"N"},{"authorDate":"2020-01-29 19:52:12","commitOrder":4,"curCode":"        public void onSuccess(T value) {\n            SingleSource<? extends R> ss;\n\n            try {\n                ss = Objects.requireNonNull(mapper.apply(value), \"The mapper returned a null SingleSource\");\n            } catch (Throwable ex) {\n                Exceptions.throwIfFatal(ex);\n                onError(ex);\n                return;\n            }\n\n            if (!isDisposed()) {\n                ss.subscribe(new FlatMapSingleObserver<R>(this, downstream));\n            }\n        }\n","date":"2020-01-29 19:52:12","endLine":95,"groupId":"101822","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"onSuccess","params":"(Tvalue)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/99/9b22f83640becf34703a92dba5255bfcf876ab.src","preCode":"        public void onSuccess(T value) {\n            SingleSource<? extends R> ss;\n\n            try {\n                ss = Objects.requireNonNull(mapper.apply(value), \"The mapper returned a null SingleSource\");\n            } catch (Throwable ex) {\n                Exceptions.throwIfFatal(ex);\n                onError(ex);\n                return;\n            }\n\n            ss.subscribe(new FlatMapSingleObserver<R>(this, downstream));\n        }\n","realPath":"src/main/java/io/reactivex/rxjava3/internal/operators/maybe/MaybeFlatMapSingle.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":81,"status":"M"}],"commitId":"c181169bf238a841c54e8957055ca31c02fd495d","commitMessage":"@@@3.x: Reenable XFlatMapTest.maybeSingle.  add missing Single operators (#6893)\n\n","date":"2020-01-29 19:52:12","modifiedFileCount":"9","status":"M","submitter":"David Karnok"}]
