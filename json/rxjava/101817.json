[{"authorTime":"2019-08-16 20:51:17","codes":[{"authorDate":"2019-08-16 20:51:17","commitOrder":1,"curCode":"        public void onSuccess(T value) {\n            MaybeSource<? extends R> source;\n\n            try {\n                source = ObjectHelper.requireNonNull(onSuccessMapper.apply(value), \"The onSuccessMapper returned a null MaybeSource\");\n            } catch (Throwable ex) {\n                Exceptions.throwIfFatal(ex);\n                downstream.onError(ex);\n                return;\n            }\n\n            source.subscribe(new InnerObserver());\n        }\n","date":"2019-08-16 20:51:17","endLine":113,"groupId":"10909","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"onSuccess","params":"(Tvalue)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/39/007e5117cc800fb42ba5f4c76c132c1ae45b41.src","preCode":"        public void onSuccess(T value) {\n            MaybeSource<? extends R> source;\n\n            try {\n                source = ObjectHelper.requireNonNull(onSuccessMapper.apply(value), \"The onSuccessMapper returned a null MaybeSource\");\n            } catch (Throwable ex) {\n                Exceptions.throwIfFatal(ex);\n                downstream.onError(ex);\n                return;\n            }\n\n            source.subscribe(new InnerObserver());\n        }\n","realPath":"src/main/java/io/reactivex/rxjava3/internal/operators/maybe/MaybeFlatMapNotification.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":101,"status":"B"},{"authorDate":"2019-08-16 20:51:17","commitOrder":1,"curCode":"        public void onSuccess(T value) {\n            MaybeSource<? extends R> source;\n\n            try {\n                source = ObjectHelper.requireNonNull(mapper.apply(value), \"The mapper returned a null MaybeSource\");\n            } catch (Throwable ex) {\n                Exceptions.throwIfFatal(ex);\n                downstream.onError(ex);\n                return;\n            }\n\n            if (!isDisposed()) {\n                source.subscribe(new InnerObserver());\n            }\n        }\n","date":"2019-08-16 20:51:17","endLine":98,"groupId":"10909","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"onSuccess","params":"(Tvalue)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/83/7ba675ef8beb45a8ab2d1134e2715a05da7197.src","preCode":"        public void onSuccess(T value) {\n            MaybeSource<? extends R> source;\n\n            try {\n                source = ObjectHelper.requireNonNull(mapper.apply(value), \"The mapper returned a null MaybeSource\");\n            } catch (Throwable ex) {\n                Exceptions.throwIfFatal(ex);\n                downstream.onError(ex);\n                return;\n            }\n\n            if (!isDisposed()) {\n                source.subscribe(new InnerObserver());\n            }\n        }\n","realPath":"src/main/java/io/reactivex/rxjava3/internal/operators/maybe/MaybeFlatten.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":84,"status":"B"}],"commitId":"a1693ecc9215027a7a3eae75272979ebb4d79a27","commitMessage":"@@@3.x: Refactor to io.reactivex.rxjava3.** (#6621)\n\n* 3.x: Refactor to io.reactivex.rxjava3.**\n\n* fix javadoc cleanup gradle\n\n* javadoc gradle again\n\n* Fix package location in text\n","date":"2019-08-16 20:51:17","modifiedFileCount":"0","status":"B","submitter":"David Karnok"},{"authorTime":"2019-12-18 03:06:44","codes":[{"authorDate":"2019-12-18 03:06:44","commitOrder":2,"curCode":"        public void onSuccess(T value) {\n            MaybeSource<? extends R> source;\n\n            try {\n                source = Objects.requireNonNull(onSuccessMapper.apply(value), \"The onSuccessMapper returned a null MaybeSource\");\n            } catch (Throwable ex) {\n                Exceptions.throwIfFatal(ex);\n                downstream.onError(ex);\n                return;\n            }\n\n            source.subscribe(new InnerObserver());\n        }\n","date":"2019-12-18 03:06:44","endLine":113,"groupId":"10909","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"onSuccess","params":"(Tvalue)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/2f/50f8cd7d738e362bc59743b9851446b3cab89e.src","preCode":"        public void onSuccess(T value) {\n            MaybeSource<? extends R> source;\n\n            try {\n                source = ObjectHelper.requireNonNull(onSuccessMapper.apply(value), \"The onSuccessMapper returned a null MaybeSource\");\n            } catch (Throwable ex) {\n                Exceptions.throwIfFatal(ex);\n                downstream.onError(ex);\n                return;\n            }\n\n            source.subscribe(new InnerObserver());\n        }\n","realPath":"src/main/java/io/reactivex/rxjava3/internal/operators/maybe/MaybeFlatMapNotification.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":101,"status":"M"},{"authorDate":"2019-12-18 03:06:44","commitOrder":2,"curCode":"        public void onSuccess(T value) {\n            MaybeSource<? extends R> source;\n\n            try {\n                source = Objects.requireNonNull(mapper.apply(value), \"The mapper returned a null MaybeSource\");\n            } catch (Throwable ex) {\n                Exceptions.throwIfFatal(ex);\n                downstream.onError(ex);\n                return;\n            }\n\n            if (!isDisposed()) {\n                source.subscribe(new InnerObserver());\n            }\n        }\n","date":"2019-12-18 03:06:44","endLine":98,"groupId":"10909","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"onSuccess","params":"(Tvalue)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/32/5c4db2ea226142a664e827ebb51ca0017129e9.src","preCode":"        public void onSuccess(T value) {\n            MaybeSource<? extends R> source;\n\n            try {\n                source = ObjectHelper.requireNonNull(mapper.apply(value), \"The mapper returned a null MaybeSource\");\n            } catch (Throwable ex) {\n                Exceptions.throwIfFatal(ex);\n                downstream.onError(ex);\n                return;\n            }\n\n            if (!isDisposed()) {\n                source.subscribe(new InnerObserver());\n            }\n        }\n","realPath":"src/main/java/io/reactivex/rxjava3/internal/operators/maybe/MaybeFlatten.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":84,"status":"M"}],"commitId":"6ba932c9a3752c6d85d65bd2292c3a47cab64fd6","commitMessage":"@@@Replace ObjectHelper.requireNonNull with Objects.requireNonNull (#6771)\n\n","date":"2019-12-18 03:06:44","modifiedFileCount":"199","status":"M","submitter":"Jake Wharton"},{"authorTime":"2019-12-18 03:06:44","codes":[{"authorDate":"2020-01-29 19:52:12","commitOrder":3,"curCode":"        public void onSuccess(T value) {\n            MaybeSource<? extends R> source;\n\n            try {\n                source = Objects.requireNonNull(onSuccessMapper.apply(value), \"The onSuccessMapper returned a null MaybeSource\");\n            } catch (Throwable ex) {\n                Exceptions.throwIfFatal(ex);\n                downstream.onError(ex);\n                return;\n            }\n\n            if (!isDisposed()) {\n                source.subscribe(new InnerObserver());\n            }\n        }\n","date":"2020-01-29 19:52:12","endLine":115,"groupId":"101817","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"onSuccess","params":"(Tvalue)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/ff/e6ee5e20a8497a86278b83aaff8641f50d16fb.src","preCode":"        public void onSuccess(T value) {\n            MaybeSource<? extends R> source;\n\n            try {\n                source = Objects.requireNonNull(onSuccessMapper.apply(value), \"The onSuccessMapper returned a null MaybeSource\");\n            } catch (Throwable ex) {\n                Exceptions.throwIfFatal(ex);\n                downstream.onError(ex);\n                return;\n            }\n\n            source.subscribe(new InnerObserver());\n        }\n","realPath":"src/main/java/io/reactivex/rxjava3/internal/operators/maybe/MaybeFlatMapNotification.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":101,"status":"M"},{"authorDate":"2019-12-18 03:06:44","commitOrder":3,"curCode":"        public void onSuccess(T value) {\n            MaybeSource<? extends R> source;\n\n            try {\n                source = Objects.requireNonNull(mapper.apply(value), \"The mapper returned a null MaybeSource\");\n            } catch (Throwable ex) {\n                Exceptions.throwIfFatal(ex);\n                downstream.onError(ex);\n                return;\n            }\n\n            if (!isDisposed()) {\n                source.subscribe(new InnerObserver());\n            }\n        }\n","date":"2019-12-18 03:06:44","endLine":98,"groupId":"101817","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"onSuccess","params":"(Tvalue)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/32/5c4db2ea226142a664e827ebb51ca0017129e9.src","preCode":"        public void onSuccess(T value) {\n            MaybeSource<? extends R> source;\n\n            try {\n                source = Objects.requireNonNull(mapper.apply(value), \"The mapper returned a null MaybeSource\");\n            } catch (Throwable ex) {\n                Exceptions.throwIfFatal(ex);\n                downstream.onError(ex);\n                return;\n            }\n\n            if (!isDisposed()) {\n                source.subscribe(new InnerObserver());\n            }\n        }\n","realPath":"src/main/java/io/reactivex/rxjava3/internal/operators/maybe/MaybeFlatten.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":84,"status":"N"}],"commitId":"c181169bf238a841c54e8957055ca31c02fd495d","commitMessage":"@@@3.x: Reenable XFlatMapTest.maybeSingle.  add missing Single operators (#6893)\n\n","date":"2020-01-29 19:52:12","modifiedFileCount":"9","status":"M","submitter":"David Karnok"}]
