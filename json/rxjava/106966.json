[{"authorTime":"2019-08-16 20:51:17","codes":[{"authorDate":"2019-08-16 20:51:17","commitOrder":1,"curCode":"    public void singleErrors() {\n        Maybe.just(1)\n        .flatMapSingleElement(new Function<Integer, SingleSource<Integer>>() {\n                    @Override\n                    public SingleSource<Integer> apply(final Integer integer) throws Exception {\n                        return Single.error(new TestException());\n                    }\n                })\n        .test()\n        .assertFailure(TestException.class);\n    }\n","date":"2019-08-16 20:51:17","endLine":147,"groupId":"1","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"singleErrors","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/c3/409aed66d82558e1deb9e82e0baa8aea53e956.src","preCode":"    public void singleErrors() {\n        Maybe.just(1)\n        .flatMapSingleElement(new Function<Integer, SingleSource<Integer>>() {\n                    @Override\n                    public SingleSource<Integer> apply(final Integer integer) throws Exception {\n                        return Single.error(new TestException());\n                    }\n                })\n        .test()\n        .assertFailure(TestException.class);\n    }\n","realPath":"src/test/java/io/reactivex/rxjava3/internal/operators/maybe/MaybeFlatMapSingleElementTest.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":137,"status":"B"},{"authorDate":"2019-08-16 20:51:17","commitOrder":1,"curCode":"    public void singleErrors() {\n        Maybe.just(1)\n        .flatMapSingle(new Function<Integer, SingleSource<Integer>>() {\n                    @Override\n                    public SingleSource<Integer> apply(final Integer integer) throws Exception {\n                        return Single.error(new TestException());\n                    }\n                })\n        .test()\n        .assertFailure(TestException.class);\n    }\n","date":"2019-08-16 20:51:17","endLine":149,"groupId":"1","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"singleErrors","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/60/b1a98f3b87c33f27c5821fc6544e6fe139fcba.src","preCode":"    public void singleErrors() {\n        Maybe.just(1)\n        .flatMapSingle(new Function<Integer, SingleSource<Integer>>() {\n                    @Override\n                    public SingleSource<Integer> apply(final Integer integer) throws Exception {\n                        return Single.error(new TestException());\n                    }\n                })\n        .test()\n        .assertFailure(TestException.class);\n    }\n","realPath":"src/test/java/io/reactivex/rxjava3/internal/operators/maybe/MaybeFlatMapSingleTest.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":139,"status":"B"}],"commitId":"a1693ecc9215027a7a3eae75272979ebb4d79a27","commitMessage":"@@@3.x: Refactor to io.reactivex.rxjava3.** (#6621)\n\n* 3.x: Refactor to io.reactivex.rxjava3.**\n\n* fix javadoc cleanup gradle\n\n* javadoc gradle again\n\n* Fix package location in text\n","date":"2019-08-16 20:51:17","modifiedFileCount":"0","status":"B","submitter":"David Karnok"},{"authorTime":"2020-01-29 04:32:19","codes":[{"authorDate":"2020-01-29 04:32:19","commitOrder":2,"curCode":"    public void singleErrors() {\n        Maybe.just(1)\n        .flatMapSingle(new Function<Integer, SingleSource<Integer>>() {\n                    @Override\n                    public SingleSource<Integer> apply(final Integer integer) throws Exception {\n                        return Single.error(new TestException());\n                    }\n                })\n        .test()\n        .assertFailure(TestException.class);\n    }\n","date":"2020-01-29 04:32:19","endLine":141,"groupId":"106966","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"singleErrors","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/cc/92e023ab8f46047421e68a4003c2858751f9a6.src","preCode":"    public void singleErrors() {\n        Maybe.just(1)\n        .flatMapSingleElement(new Function<Integer, SingleSource<Integer>>() {\n                    @Override\n                    public SingleSource<Integer> apply(final Integer integer) throws Exception {\n                        return Single.error(new TestException());\n                    }\n                })\n        .test()\n        .assertFailure(TestException.class);\n    }\n","realPath":"src/test/java/io/reactivex/rxjava3/internal/operators/maybe/MaybeFlatMapSingleElementTest.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":131,"status":"M"},{"authorDate":"2020-01-29 04:32:19","commitOrder":2,"curCode":"    public void singleErrors() {\n        Maybe.just(1)\n        .flatMapSingle(new Function<Integer, SingleSource<Integer>>() {\n                    @Override\n                    public SingleSource<Integer> apply(final Integer integer) throws Exception {\n                        return Single.error(new TestException());\n                    }\n                })\n        .toSingle()\n        .test()\n        .assertFailure(TestException.class);\n    }\n","date":"2020-01-29 04:32:19","endLine":150,"groupId":"106966","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"singleErrors","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/49/04678a61a912adda1167512359529e401aa26b.src","preCode":"    public void singleErrors() {\n        Maybe.just(1)\n        .flatMapSingle(new Function<Integer, SingleSource<Integer>>() {\n                    @Override\n                    public SingleSource<Integer> apply(final Integer integer) throws Exception {\n                        return Single.error(new TestException());\n                    }\n                })\n        .test()\n        .assertFailure(TestException.class);\n    }\n","realPath":"src/test/java/io/reactivex/rxjava3/internal/operators/maybe/MaybeFlatMapSingleTest.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":139,"status":"M"}],"commitId":"f1a795da0d4cdfb3133206ad8e3887bdb8ba948b","commitMessage":"@@@3.x: Swap Maybe.flatMapSingle and Maybe.flatMapSingleElement (#6891)\n\n* Deleted Maybe.flatMapSingle\n\nAnd replaced tests with flatMapSingle().toSingle()\n\n* Renamed Maybe.flatMapSingleElement to flatMapSingle\n\n* Deleted unused MaybeFlatMapSingle operator\n\n* Renamed operator MaybeFlatMapSingleElement to MaybeFlatMapSingle\n\n* Add Ignore to XFlatMapTest.maybeSingle\n","date":"2020-01-29 04:32:19","modifiedFileCount":"5","status":"M","submitter":"slisaasquatch"}]
