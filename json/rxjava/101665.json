[{"authorTime":"2019-08-16 20:51:17","codes":[{"authorDate":"2019-08-16 20:51:17","commitOrder":1,"curCode":"    protected void subscribeActual(Observer<? super T> t) {\n        PublishDisposable<T> ps = new PublishDisposable<T>(t, this);\n        t.onSubscribe(ps);\n        if (add(ps)) {\n            \r\n            \r\n            if (ps.isDisposed()) {\n                remove(ps);\n            }\n        } else {\n            Throwable ex = error;\n            if (ex != null) {\n                t.onError(ex);\n            } else {\n                t.onComplete();\n            }\n        }\n    }\n","date":"2019-08-16 20:51:17","endLine":148,"groupId":"548","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"subscribeActual","params":"(Observer<?superT>t)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/5c/706c5c922908cd8a8313453b903ece37d63243.src","preCode":"    protected void subscribeActual(Observer<? super T> t) {\n        PublishDisposable<T> ps = new PublishDisposable<T>(t, this);\n        t.onSubscribe(ps);\n        if (add(ps)) {\n            \r\n            \r\n            if (ps.isDisposed()) {\n                remove(ps);\n            }\n        } else {\n            Throwable ex = error;\n            if (ex != null) {\n                t.onError(ex);\n            } else {\n                t.onComplete();\n            }\n        }\n    }\n","realPath":"src/main/java/io/reactivex/rxjava3/subjects/PublishSubject.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":131,"status":"B"},{"authorDate":"2019-08-16 20:51:17","commitOrder":1,"curCode":"    protected void subscribeActual(Subscriber<? super T> t) {\n        PublishSubscription<T> ps = new PublishSubscription<T>(t, this);\n        t.onSubscribe(ps);\n        if (add(ps)) {\n            \r\n            \r\n            if (ps.isCancelled()) {\n                remove(ps);\n            }\n        } else {\n            Throwable ex = error;\n            if (ex != null) {\n                t.onError(ex);\n            } else {\n                t.onComplete();\n            }\n        }\n    }\n","date":"2019-08-16 20:51:17","endLine":162,"groupId":"548","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"subscribeActual","params":"(Subscriber<?superT>t)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/54/c85a60970f2886d43103081cac6ef24183d45b.src","preCode":"    protected void subscribeActual(Subscriber<? super T> t) {\n        PublishSubscription<T> ps = new PublishSubscription<T>(t, this);\n        t.onSubscribe(ps);\n        if (add(ps)) {\n            \r\n            \r\n            if (ps.isCancelled()) {\n                remove(ps);\n            }\n        } else {\n            Throwable ex = error;\n            if (ex != null) {\n                t.onError(ex);\n            } else {\n                t.onComplete();\n            }\n        }\n    }\n","realPath":"src/main/java/io/reactivex/rxjava3/processors/PublishProcessor.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":145,"status":"B"}],"commitId":"a1693ecc9215027a7a3eae75272979ebb4d79a27","commitMessage":"@@@3.x: Refactor to io.reactivex.rxjava3.** (#6621)\n\n* 3.x: Refactor to io.reactivex.rxjava3.**\n\n* fix javadoc cleanup gradle\n\n* javadoc gradle again\n\n* Fix package location in text\n","date":"2019-08-16 20:51:17","modifiedFileCount":"0","status":"B","submitter":"David Karnok"},{"authorTime":"2019-12-26 06:52:13","codes":[{"authorDate":"2019-12-26 06:52:13","commitOrder":2,"curCode":"    protected void subscribeActual(Observer<? super T> t) {\n        PublishDisposable<T> ps = new PublishDisposable<>(t, this);\n        t.onSubscribe(ps);\n        if (add(ps)) {\n            \r\n            \r\n            if (ps.isDisposed()) {\n                remove(ps);\n            }\n        } else {\n            Throwable ex = error;\n            if (ex != null) {\n                t.onError(ex);\n            } else {\n                t.onComplete();\n            }\n        }\n    }\n","date":"2019-12-26 06:52:13","endLine":148,"groupId":"548","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"subscribeActual","params":"(Observer<?superT>t)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/2c/3a84783223e46185c64fafd3179382e5f4a2ed.src","preCode":"    protected void subscribeActual(Observer<? super T> t) {\n        PublishDisposable<T> ps = new PublishDisposable<T>(t, this);\n        t.onSubscribe(ps);\n        if (add(ps)) {\n            \r\n            \r\n            if (ps.isDisposed()) {\n                remove(ps);\n            }\n        } else {\n            Throwable ex = error;\n            if (ex != null) {\n                t.onError(ex);\n            } else {\n                t.onComplete();\n            }\n        }\n    }\n","realPath":"src/main/java/io/reactivex/rxjava3/subjects/PublishSubject.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":131,"status":"M"},{"authorDate":"2019-12-26 06:52:13","commitOrder":2,"curCode":"    protected void subscribeActual(Subscriber<? super T> t) {\n        PublishSubscription<T> ps = new PublishSubscription<>(t, this);\n        t.onSubscribe(ps);\n        if (add(ps)) {\n            \r\n            \r\n            if (ps.isCancelled()) {\n                remove(ps);\n            }\n        } else {\n            Throwable ex = error;\n            if (ex != null) {\n                t.onError(ex);\n            } else {\n                t.onComplete();\n            }\n        }\n    }\n","date":"2019-12-26 06:52:13","endLine":161,"groupId":"548","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"subscribeActual","params":"(Subscriber<?superT>t)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/36/bc4eff3472ecf4c7897c50f8e450c9d18171ea.src","preCode":"    protected void subscribeActual(Subscriber<? super T> t) {\n        PublishSubscription<T> ps = new PublishSubscription<T>(t, this);\n        t.onSubscribe(ps);\n        if (add(ps)) {\n            \r\n            \r\n            if (ps.isCancelled()) {\n                remove(ps);\n            }\n        } else {\n            Throwable ex = error;\n            if (ex != null) {\n                t.onError(ex);\n            } else {\n                t.onComplete();\n            }\n        }\n    }\n","realPath":"src/main/java/io/reactivex/rxjava3/processors/PublishProcessor.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":144,"status":"M"}],"commitId":"480889c58d3b762b073ef80229bf27f9d9429dd7","commitMessage":"@@@3.x: Add missing annotations.  fix many diamonds (#6795)\n\n* 3.x: Add missing annotations.  fix many diamonds\n\n* Fix accidental JDK 9 API usage\n\n* Fix NPE in unicast due to null-cleanup\n","date":"2019-12-26 06:52:13","modifiedFileCount":"52","status":"M","submitter":"David Karnok"},{"authorTime":"2019-12-27 06:43:56","codes":[{"authorDate":"2019-12-26 06:52:13","commitOrder":3,"curCode":"    protected void subscribeActual(Observer<? super T> t) {\n        PublishDisposable<T> ps = new PublishDisposable<>(t, this);\n        t.onSubscribe(ps);\n        if (add(ps)) {\n            \r\n            \r\n            if (ps.isDisposed()) {\n                remove(ps);\n            }\n        } else {\n            Throwable ex = error;\n            if (ex != null) {\n                t.onError(ex);\n            } else {\n                t.onComplete();\n            }\n        }\n    }\n","date":"2019-12-26 06:52:13","endLine":148,"groupId":"548","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"subscribeActual","params":"(Observer<?superT>t)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/2c/3a84783223e46185c64fafd3179382e5f4a2ed.src","preCode":"    protected void subscribeActual(Observer<? super T> t) {\n        PublishDisposable<T> ps = new PublishDisposable<>(t, this);\n        t.onSubscribe(ps);\n        if (add(ps)) {\n            \r\n            \r\n            if (ps.isDisposed()) {\n                remove(ps);\n            }\n        } else {\n            Throwable ex = error;\n            if (ex != null) {\n                t.onError(ex);\n            } else {\n                t.onComplete();\n            }\n        }\n    }\n","realPath":"src/main/java/io/reactivex/rxjava3/subjects/PublishSubject.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":131,"status":"N"},{"authorDate":"2019-12-27 06:43:56","commitOrder":3,"curCode":"    protected void subscribeActual(@NonNull Subscriber<? super T> t) {\n        PublishSubscription<T> ps = new PublishSubscription<>(t, this);\n        t.onSubscribe(ps);\n        if (add(ps)) {\n            \r\n            \r\n            if (ps.isCancelled()) {\n                remove(ps);\n            }\n        } else {\n            Throwable ex = error;\n            if (ex != null) {\n                t.onError(ex);\n            } else {\n                t.onComplete();\n            }\n        }\n    }\n","date":"2019-12-27 06:43:56","endLine":161,"groupId":"548","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"subscribeActual","params":"(@NonNullSubscriber<?superT>t)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/0a/73cf1bf88b2669cbe59679934f9ac0cd146b2c.src","preCode":"    protected void subscribeActual(Subscriber<? super T> t) {\n        PublishSubscription<T> ps = new PublishSubscription<>(t, this);\n        t.onSubscribe(ps);\n        if (add(ps)) {\n            \r\n            \r\n            if (ps.isCancelled()) {\n                remove(ps);\n            }\n        } else {\n            Throwable ex = error;\n            if (ex != null) {\n                t.onError(ex);\n            } else {\n                t.onComplete();\n            }\n        }\n    }\n","realPath":"src/main/java/io/reactivex/rxjava3/processors/PublishProcessor.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":144,"status":"M"}],"commitId":"38bcd5e292c9e44c542ff4bbcf8e23736b4a7748","commitMessage":"@@@3.x: XProcessor.offer to throw NPE immediately (#6799)\n\n","date":"2019-12-27 06:43:56","modifiedFileCount":"6","status":"M","submitter":"David Karnok"},{"authorTime":"2020-01-14 15:49:53","codes":[{"authorDate":"2019-12-26 06:52:13","commitOrder":4,"curCode":"    protected void subscribeActual(Observer<? super T> t) {\n        PublishDisposable<T> ps = new PublishDisposable<>(t, this);\n        t.onSubscribe(ps);\n        if (add(ps)) {\n            \r\n            \r\n            if (ps.isDisposed()) {\n                remove(ps);\n            }\n        } else {\n            Throwable ex = error;\n            if (ex != null) {\n                t.onError(ex);\n            } else {\n                t.onComplete();\n            }\n        }\n    }\n","date":"2019-12-26 06:52:13","endLine":148,"groupId":"548","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"subscribeActual","params":"(Observer<?superT>t)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/2c/3a84783223e46185c64fafd3179382e5f4a2ed.src","preCode":"    protected void subscribeActual(Observer<? super T> t) {\n        PublishDisposable<T> ps = new PublishDisposable<>(t, this);\n        t.onSubscribe(ps);\n        if (add(ps)) {\n            \r\n            \r\n            if (ps.isDisposed()) {\n                remove(ps);\n            }\n        } else {\n            Throwable ex = error;\n            if (ex != null) {\n                t.onError(ex);\n            } else {\n                t.onComplete();\n            }\n        }\n    }\n","realPath":"src/main/java/io/reactivex/rxjava3/subjects/PublishSubject.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":131,"status":"N"},{"authorDate":"2020-01-14 15:49:53","commitOrder":4,"curCode":"    protected void subscribeActual(@NonNull Subscriber<@NonNull ? super T> t) {\n        PublishSubscription<T> ps = new PublishSubscription<>(t, this);\n        t.onSubscribe(ps);\n        if (add(ps)) {\n            \r\n            \r\n            if (ps.isCancelled()) {\n                remove(ps);\n            }\n        } else {\n            Throwable ex = error;\n            if (ex != null) {\n                t.onError(ex);\n            } else {\n                t.onComplete();\n            }\n        }\n    }\n","date":"2020-01-14 15:49:53","endLine":161,"groupId":"548","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"subscribeActual","params":"(@NonNullSubscriber<@NonNull?superT>t)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/b5/07a2225bf1a037cf1f885091962ef1d240c4f5.src","preCode":"    protected void subscribeActual(@NonNull Subscriber<? super T> t) {\n        PublishSubscription<T> ps = new PublishSubscription<>(t, this);\n        t.onSubscribe(ps);\n        if (add(ps)) {\n            \r\n            \r\n            if (ps.isCancelled()) {\n                remove(ps);\n            }\n        } else {\n            Throwable ex = error;\n            if (ex != null) {\n                t.onError(ex);\n            } else {\n                t.onComplete();\n            }\n        }\n    }\n","realPath":"src/main/java/io/reactivex/rxjava3/processors/PublishProcessor.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":144,"status":"M"}],"commitId":"fb6dab6847d858b22fe6a36558cf3b62dc10627d","commitMessage":"@@@3.x: Add nullability annotations to type arguments (#6840)\n\n","date":"2020-01-14 15:49:53","modifiedFileCount":"75","status":"M","submitter":"David Karnok"},{"authorTime":"2021-07-25 00:35:45","codes":[{"authorDate":"2019-12-26 06:52:13","commitOrder":5,"curCode":"    protected void subscribeActual(Observer<? super T> t) {\n        PublishDisposable<T> ps = new PublishDisposable<>(t, this);\n        t.onSubscribe(ps);\n        if (add(ps)) {\n            \r\n            \r\n            if (ps.isDisposed()) {\n                remove(ps);\n            }\n        } else {\n            Throwable ex = error;\n            if (ex != null) {\n                t.onError(ex);\n            } else {\n                t.onComplete();\n            }\n        }\n    }\n","date":"2019-12-26 06:52:13","endLine":148,"groupId":"101665","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"subscribeActual","params":"(Observer<?superT>t)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/2c/3a84783223e46185c64fafd3179382e5f4a2ed.src","preCode":"    protected void subscribeActual(Observer<? super T> t) {\n        PublishDisposable<T> ps = new PublishDisposable<>(t, this);\n        t.onSubscribe(ps);\n        if (add(ps)) {\n            \r\n            \r\n            if (ps.isDisposed()) {\n                remove(ps);\n            }\n        } else {\n            Throwable ex = error;\n            if (ex != null) {\n                t.onError(ex);\n            } else {\n                t.onComplete();\n            }\n        }\n    }\n","realPath":"src/main/java/io/reactivex/rxjava3/subjects/PublishSubject.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":131,"status":"N"},{"authorDate":"2021-07-25 00:35:45","commitOrder":5,"curCode":"    protected void subscribeActual(@NonNull Subscriber<? super T> t) {\n        PublishSubscription<T> ps = new PublishSubscription<>(t, this);\n        t.onSubscribe(ps);\n        if (add(ps)) {\n            \r\n            \r\n            if (ps.isCancelled()) {\n                remove(ps);\n            }\n        } else {\n            Throwable ex = error;\n            if (ex != null) {\n                t.onError(ex);\n            } else {\n                t.onComplete();\n            }\n        }\n    }\n","date":"2021-07-25 00:35:45","endLine":162,"groupId":"101665","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"subscribeActual","params":"(@NonNullSubscriber<?superT>t)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/79/f38a06ec12042b55fabeaf719ec5c005bd8b03.src","preCode":"    protected void subscribeActual(@NonNull Subscriber<@NonNull ? super T> t) {\n        PublishSubscription<T> ps = new PublishSubscription<>(t, this);\n        t.onSubscribe(ps);\n        if (add(ps)) {\n            \r\n            \r\n            if (ps.isCancelled()) {\n                remove(ps);\n            }\n        } else {\n            Throwable ex = error;\n            if (ex != null) {\n                t.onError(ex);\n            } else {\n                t.onComplete();\n            }\n        }\n    }\n","realPath":"src/main/java/io/reactivex/rxjava3/processors/PublishProcessor.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":145,"status":"M"}],"commitId":"40ca8eff4a0d6559258489cf282471f5e3b1a229","commitMessage":"@@@3.x: Move nullability annotations into the type argument declaration (#7303)\n\n* 3.x: Move nullability annotations into the type argument declaration\n\n* Reinforce Function<T.  R> return argument type where R is non-trivial","date":"2021-07-25 00:35:45","modifiedFileCount":"17","status":"M","submitter":"David Karnok"}]
