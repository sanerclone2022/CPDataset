[{"authorTime":"2019-08-16 20:51:17","codes":[{"authorDate":"2019-08-16 20:51:17","commitOrder":1,"curCode":"    public void awaitTerminalEventInterrupt() {\n        final TestSubscriber<Integer> ts = TestSubscriber.create();\n\n        ts.onSubscribe(new BooleanSubscription());\n\n        Thread.currentThread().interrupt();\n\n        try {\n            ts.awaitDone(5, TimeUnit.SECONDS);\n        } catch (RuntimeException allowed) {\n            assertTrue(allowed.toString(), allowed.getCause() instanceof InterruptedException);\n        }\n\n        \r\n        \r\n\n        Thread.currentThread().interrupt();\n\n        try {\n            ts.awaitDone(5, TimeUnit.SECONDS);\n        } catch (RuntimeException allowed) {\n            assertTrue(allowed.toString(), allowed.getCause() instanceof InterruptedException);\n        }\n\n        \r\n        \r\n    }\n","date":"2019-08-16 20:51:17","endLine":1090,"groupId":"9413","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"awaitTerminalEventInterrupt","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/33/d95bea88700928dd4fea5f61ce911ae6c7a0c4.src","preCode":"    public void awaitTerminalEventInterrupt() {\n        final TestSubscriber<Integer> ts = TestSubscriber.create();\n\n        ts.onSubscribe(new BooleanSubscription());\n\n        Thread.currentThread().interrupt();\n\n        try {\n            ts.awaitDone(5, TimeUnit.SECONDS);\n        } catch (RuntimeException allowed) {\n            assertTrue(allowed.toString(), allowed.getCause() instanceof InterruptedException);\n        }\n\n        \r\n        \r\n\n        Thread.currentThread().interrupt();\n\n        try {\n            ts.awaitDone(5, TimeUnit.SECONDS);\n        } catch (RuntimeException allowed) {\n            assertTrue(allowed.toString(), allowed.getCause() instanceof InterruptedException);\n        }\n\n        \r\n        \r\n    }\n","realPath":"src/test/java/io/reactivex/rxjava3/subscribers/TestSubscriberTest.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":1064,"status":"B"},{"authorDate":"2019-08-16 20:51:17","commitOrder":1,"curCode":"    public void awaitTerminalEventInterrupt() {\n        final TestObserver<Integer> to = TestObserver.create();\n\n        to.onSubscribe(Disposables.empty());\n\n        Thread.currentThread().interrupt();\n\n        try {\n            to.awaitDone(5, TimeUnit.SECONDS);\n        } catch (RuntimeException allowed) {\n            assertTrue(allowed.toString(), allowed.getCause() instanceof InterruptedException);\n        }\n\n        \r\n        \r\n\n        Thread.currentThread().interrupt();\n\n        try {\n            to.awaitDone(5, TimeUnit.SECONDS);\n        } catch (RuntimeException allowed) {\n            assertTrue(allowed.toString(), allowed.getCause() instanceof InterruptedException);\n        }\n\n        \r\n        \r\n    }\n","date":"2019-08-16 20:51:17","endLine":556,"groupId":"2627","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"awaitTerminalEventInterrupt","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/14/68dc9cb57635691d74f8c7a994166d7e7259aa.src","preCode":"    public void awaitTerminalEventInterrupt() {\n        final TestObserver<Integer> to = TestObserver.create();\n\n        to.onSubscribe(Disposables.empty());\n\n        Thread.currentThread().interrupt();\n\n        try {\n            to.awaitDone(5, TimeUnit.SECONDS);\n        } catch (RuntimeException allowed) {\n            assertTrue(allowed.toString(), allowed.getCause() instanceof InterruptedException);\n        }\n\n        \r\n        \r\n\n        Thread.currentThread().interrupt();\n\n        try {\n            to.awaitDone(5, TimeUnit.SECONDS);\n        } catch (RuntimeException allowed) {\n            assertTrue(allowed.toString(), allowed.getCause() instanceof InterruptedException);\n        }\n\n        \r\n        \r\n    }\n","realPath":"src/test/java/io/reactivex/rxjava3/observers/TestObserverTest.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":530,"status":"B"}],"commitId":"a1693ecc9215027a7a3eae75272979ebb4d79a27","commitMessage":"@@@3.x: Refactor to io.reactivex.rxjava3.** (#6621)\n\n* 3.x: Refactor to io.reactivex.rxjava3.**\n\n* fix javadoc cleanup gradle\n\n* javadoc gradle again\n\n* Fix package location in text\n","date":"2019-08-16 20:51:17","modifiedFileCount":"0","status":"B","submitter":"David Karnok"},{"authorTime":"2019-12-20 02:39:40","codes":[{"authorDate":"2019-08-16 20:51:17","commitOrder":2,"curCode":"    public void awaitTerminalEventInterrupt() {\n        final TestSubscriber<Integer> ts = TestSubscriber.create();\n\n        ts.onSubscribe(new BooleanSubscription());\n\n        Thread.currentThread().interrupt();\n\n        try {\n            ts.awaitDone(5, TimeUnit.SECONDS);\n        } catch (RuntimeException allowed) {\n            assertTrue(allowed.toString(), allowed.getCause() instanceof InterruptedException);\n        }\n\n        \r\n        \r\n\n        Thread.currentThread().interrupt();\n\n        try {\n            ts.awaitDone(5, TimeUnit.SECONDS);\n        } catch (RuntimeException allowed) {\n            assertTrue(allowed.toString(), allowed.getCause() instanceof InterruptedException);\n        }\n\n        \r\n        \r\n    }\n","date":"2019-08-16 20:51:17","endLine":1090,"groupId":"10293","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"awaitTerminalEventInterrupt","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/33/d95bea88700928dd4fea5f61ce911ae6c7a0c4.src","preCode":"    public void awaitTerminalEventInterrupt() {\n        final TestSubscriber<Integer> ts = TestSubscriber.create();\n\n        ts.onSubscribe(new BooleanSubscription());\n\n        Thread.currentThread().interrupt();\n\n        try {\n            ts.awaitDone(5, TimeUnit.SECONDS);\n        } catch (RuntimeException allowed) {\n            assertTrue(allowed.toString(), allowed.getCause() instanceof InterruptedException);\n        }\n\n        \r\n        \r\n\n        Thread.currentThread().interrupt();\n\n        try {\n            ts.awaitDone(5, TimeUnit.SECONDS);\n        } catch (RuntimeException allowed) {\n            assertTrue(allowed.toString(), allowed.getCause() instanceof InterruptedException);\n        }\n\n        \r\n        \r\n    }\n","realPath":"src/test/java/io/reactivex/rxjava3/subscribers/TestSubscriberTest.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":1064,"status":"N"},{"authorDate":"2019-12-20 02:39:40","commitOrder":2,"curCode":"    public void awaitTerminalEventInterrupt() {\n        final TestObserver<Integer> to = TestObserver.create();\n\n        to.onSubscribe(Disposable.empty());\n\n        Thread.currentThread().interrupt();\n\n        try {\n            to.awaitDone(5, TimeUnit.SECONDS);\n        } catch (RuntimeException allowed) {\n            assertTrue(allowed.toString(), allowed.getCause() instanceof InterruptedException);\n        }\n\n        \r\n        \r\n\n        Thread.currentThread().interrupt();\n\n        try {\n            to.awaitDone(5, TimeUnit.SECONDS);\n        } catch (RuntimeException allowed) {\n            assertTrue(allowed.toString(), allowed.getCause() instanceof InterruptedException);\n        }\n\n        \r\n        \r\n    }\n","date":"2019-12-20 02:39:40","endLine":556,"groupId":"10293","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"awaitTerminalEventInterrupt","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/58/1aa0b0b1f4344860a553d65e8367b17b0775f9.src","preCode":"    public void awaitTerminalEventInterrupt() {\n        final TestObserver<Integer> to = TestObserver.create();\n\n        to.onSubscribe(Disposables.empty());\n\n        Thread.currentThread().interrupt();\n\n        try {\n            to.awaitDone(5, TimeUnit.SECONDS);\n        } catch (RuntimeException allowed) {\n            assertTrue(allowed.toString(), allowed.getCause() instanceof InterruptedException);\n        }\n\n        \r\n        \r\n\n        Thread.currentThread().interrupt();\n\n        try {\n            to.awaitDone(5, TimeUnit.SECONDS);\n        } catch (RuntimeException allowed) {\n            assertTrue(allowed.toString(), allowed.getCause() instanceof InterruptedException);\n        }\n\n        \r\n        \r\n    }\n","realPath":"src/test/java/io/reactivex/rxjava3/observers/TestObserverTest.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":530,"status":"M"}],"commitId":"166c529eb165b473c9bff11e8fedbde6c471b005","commitMessage":"@@@Migrate Disposables static factories to Disposable interface (#6781)\n\n","date":"2019-12-20 02:39:40","modifiedFileCount":"202","status":"M","submitter":"Jake Wharton"}]
