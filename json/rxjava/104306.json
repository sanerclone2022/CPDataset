[{"authorTime":"2019-08-16 20:51:17","codes":[{"authorDate":"2019-08-28 23:18:05","commitOrder":2,"curCode":"    public static <T, R> Flowable<R> combineLatestArray(Publisher<? extends T>[] sources, Function<? super Object[], ? extends R> combiner, int bufferSize) {\n        ObjectHelper.requireNonNull(sources, \"sources is null\");\n        if (sources.length == 0) {\n            return empty();\n        }\n        ObjectHelper.requireNonNull(combiner, \"combiner is null\");\n        ObjectHelper.verifyPositive(bufferSize, \"bufferSize\");\n        return RxJavaPlugins.onAssembly(new FlowableCombineLatest<T, R>(sources, combiner, bufferSize, false));\n    }\n","date":"2019-08-28 23:18:05","endLine":331,"groupId":"5628","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"combineLatestArray","params":"(Publisher<?extendsT>[]sources@Function<?superObject[]@?extendsR>combiner@intbufferSize)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/62/2bab5bb0ea41d76a7188220086a0c594b3ff9e.src","preCode":"    public static <T, R> Flowable<R> combineLatestArray(Publisher<? extends T>[] sources, Function<? super Object[], ? extends R> combiner, int bufferSize) {\n        ObjectHelper.requireNonNull(sources, \"sources is null\");\n        if (sources.length == 0) {\n            return empty();\n        }\n        ObjectHelper.requireNonNull(combiner, \"combiner is null\");\n        ObjectHelper.verifyPositive(bufferSize, \"bufferSize\");\n        return RxJavaPlugins.onAssembly(new FlowableCombineLatest<T, R>(sources, combiner, bufferSize, false));\n    }\n","realPath":"src/main/java/io/reactivex/rxjava3/core/Flowable.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":323,"status":"B"},{"authorDate":"2019-08-16 20:51:17","commitOrder":2,"curCode":"    public static <T, R> Flowable<R> zipArray(Function<? super Object[], ? extends R> zipper,\n            boolean delayError, int bufferSize, Publisher<? extends T>... sources) {\n        if (sources.length == 0) {\n            return empty();\n        }\n        ObjectHelper.requireNonNull(zipper, \"zipper is null\");\n        ObjectHelper.verifyPositive(bufferSize, \"bufferSize\");\n        return RxJavaPlugins.onAssembly(new FlowableZip<T, R>(sources, null, zipper, bufferSize, delayError));\n    }\n","date":"2019-08-16 20:51:17","endLine":5541,"groupId":"10709","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"zipArray","params":"(Function<?superObject[]@?extendsR>zipper@booleandelayError@intbufferSize@Publisher<?extendsT>...sources)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/f1/6fa2cf03001794eda0b11b8d1fe00bfa2fb6b9.src","preCode":"    public static <T, R> Flowable<R> zipArray(Function<? super Object[], ? extends R> zipper,\n            boolean delayError, int bufferSize, Publisher<? extends T>... sources) {\n        if (sources.length == 0) {\n            return empty();\n        }\n        ObjectHelper.requireNonNull(zipper, \"zipper is null\");\n        ObjectHelper.verifyPositive(bufferSize, \"bufferSize\");\n        return RxJavaPlugins.onAssembly(new FlowableZip<T, R>(sources, null, zipper, bufferSize, delayError));\n    }\n","realPath":"src/main/java/io/reactivex/rxjava3/core/Flowable.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":5533,"status":"NB"}],"commitId":"c9204b57ba55c9f40951615eed00a88b9f3cf734","commitMessage":"@@@3.x: Rename combineLatest methods that take an array to combineLatestArray (#6640)\n\n","date":"2019-08-28 23:18:05","modifiedFileCount":"5","status":"M","submitter":"Niklas Baudy"},{"authorTime":"2019-12-18 03:06:44","codes":[{"authorDate":"2019-12-18 03:06:44","commitOrder":3,"curCode":"    public static <T, R> Flowable<R> combineLatestArray(Publisher<? extends T>[] sources, Function<? super Object[], ? extends R> combiner, int bufferSize) {\n        Objects.requireNonNull(sources, \"sources is null\");\n        if (sources.length == 0) {\n            return empty();\n        }\n        Objects.requireNonNull(combiner, \"combiner is null\");\n        ObjectHelper.verifyPositive(bufferSize, \"bufferSize\");\n        return RxJavaPlugins.onAssembly(new FlowableCombineLatest<T, R>(sources, combiner, bufferSize, false));\n    }\n","date":"2019-12-18 03:06:44","endLine":334,"groupId":"10709","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"combineLatestArray","params":"(Publisher<?extendsT>[]sources@Function<?superObject[]@?extendsR>combiner@intbufferSize)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/51/4845efbc67b5a91cda5e930ed14797beaeed88.src","preCode":"    public static <T, R> Flowable<R> combineLatestArray(Publisher<? extends T>[] sources, Function<? super Object[], ? extends R> combiner, int bufferSize) {\n        ObjectHelper.requireNonNull(sources, \"sources is null\");\n        if (sources.length == 0) {\n            return empty();\n        }\n        ObjectHelper.requireNonNull(combiner, \"combiner is null\");\n        ObjectHelper.verifyPositive(bufferSize, \"bufferSize\");\n        return RxJavaPlugins.onAssembly(new FlowableCombineLatest<T, R>(sources, combiner, bufferSize, false));\n    }\n","realPath":"src/main/java/io/reactivex/rxjava3/core/Flowable.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":326,"status":"M"},{"authorDate":"2019-12-18 03:06:44","commitOrder":3,"curCode":"    public static <T, R> Flowable<R> zipArray(Function<? super Object[], ? extends R> zipper,\n            boolean delayError, int bufferSize, Publisher<? extends T>... sources) {\n        if (sources.length == 0) {\n            return empty();\n        }\n        Objects.requireNonNull(zipper, \"zipper is null\");\n        ObjectHelper.verifyPositive(bufferSize, \"bufferSize\");\n        return RxJavaPlugins.onAssembly(new FlowableZip<T, R>(sources, null, zipper, bufferSize, delayError));\n    }\n","date":"2019-12-18 03:06:44","endLine":5412,"groupId":"10709","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"zipArray","params":"(Function<?superObject[]@?extendsR>zipper@booleandelayError@intbufferSize@Publisher<?extendsT>...sources)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/51/4845efbc67b5a91cda5e930ed14797beaeed88.src","preCode":"    public static <T, R> Flowable<R> zipArray(Function<? super Object[], ? extends R> zipper,\n            boolean delayError, int bufferSize, Publisher<? extends T>... sources) {\n        if (sources.length == 0) {\n            return empty();\n        }\n        ObjectHelper.requireNonNull(zipper, \"zipper is null\");\n        ObjectHelper.verifyPositive(bufferSize, \"bufferSize\");\n        return RxJavaPlugins.onAssembly(new FlowableZip<T, R>(sources, null, zipper, bufferSize, delayError));\n    }\n","realPath":"src/main/java/io/reactivex/rxjava3/core/Flowable.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":5404,"status":"M"}],"commitId":"6ba932c9a3752c6d85d65bd2292c3a47cab64fd6","commitMessage":"@@@Replace ObjectHelper.requireNonNull with Objects.requireNonNull (#6771)\n\n","date":"2019-12-18 03:06:44","modifiedFileCount":"199","status":"M","submitter":"Jake Wharton"},{"authorTime":"2019-12-24 17:18:06","codes":[{"authorDate":"2019-12-24 17:18:06","commitOrder":4,"curCode":"    public static <T, R> Flowable<R> combineLatestArray(@NonNull Publisher<? extends T>[] sources, @NonNull Function<? super Object[], ? extends R> combiner, int bufferSize) {\n        Objects.requireNonNull(sources, \"sources is null\");\n        if (sources.length == 0) {\n            return empty();\n        }\n        Objects.requireNonNull(combiner, \"combiner is null\");\n        ObjectHelper.verifyPositive(bufferSize, \"bufferSize\");\n        return RxJavaPlugins.onAssembly(new FlowableCombineLatest<T, R>(sources, combiner, bufferSize, false));\n    }\n","date":"2019-12-24 17:18:06","endLine":335,"groupId":"10709","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"combineLatestArray","params":"(@NonNullPublisher<?extendsT>[]sources@@NonNullFunction<?superObject[]@?extendsR>combiner@intbufferSize)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/c5/bdb06b2cc43b1a9736de785b99fa56fac4634b.src","preCode":"    public static <T, R> Flowable<R> combineLatestArray(Publisher<? extends T>[] sources, Function<? super Object[], ? extends R> combiner, int bufferSize) {\n        Objects.requireNonNull(sources, \"sources is null\");\n        if (sources.length == 0) {\n            return empty();\n        }\n        Objects.requireNonNull(combiner, \"combiner is null\");\n        ObjectHelper.verifyPositive(bufferSize, \"bufferSize\");\n        return RxJavaPlugins.onAssembly(new FlowableCombineLatest<T, R>(sources, combiner, bufferSize, false));\n    }\n","realPath":"src/main/java/io/reactivex/rxjava3/core/Flowable.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":327,"status":"M"},{"authorDate":"2019-12-24 17:18:06","commitOrder":4,"curCode":"    public static <T, R> Flowable<R> zipArray(@NonNull Function<? super Object[], ? extends R> zipper,\n            boolean delayError, int bufferSize, @NonNull Publisher<? extends T>... sources) {\n        if (sources.length == 0) {\n            return empty();\n        }\n        Objects.requireNonNull(zipper, \"zipper is null\");\n        ObjectHelper.verifyPositive(bufferSize, \"bufferSize\");\n        return RxJavaPlugins.onAssembly(new FlowableZip<T, R>(sources, null, zipper, bufferSize, delayError));\n    }\n","date":"2019-12-24 17:18:06","endLine":5471,"groupId":"10709","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"zipArray","params":"(@NonNullFunction<?superObject[]@?extendsR>zipper@booleandelayError@intbufferSize@@NonNullPublisher<?extendsT>...sources)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/c5/bdb06b2cc43b1a9736de785b99fa56fac4634b.src","preCode":"    public static <T, R> Flowable<R> zipArray(Function<? super Object[], ? extends R> zipper,\n            boolean delayError, int bufferSize, Publisher<? extends T>... sources) {\n        if (sources.length == 0) {\n            return empty();\n        }\n        Objects.requireNonNull(zipper, \"zipper is null\");\n        ObjectHelper.verifyPositive(bufferSize, \"bufferSize\");\n        return RxJavaPlugins.onAssembly(new FlowableZip<T, R>(sources, null, zipper, bufferSize, delayError));\n    }\n","realPath":"src/main/java/io/reactivex/rxjava3/core/Flowable.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":5463,"status":"M"}],"commitId":"b57169babb184d0adc2fa28cf0425c4f0c1f8555","commitMessage":"@@@3.x: Add NonNull & SafeVarargs annotations + validator (#6791)\n\n","date":"2019-12-24 17:18:06","modifiedFileCount":"28","status":"M","submitter":"David Karnok"},{"authorTime":"2019-12-28 03:01:34","codes":[{"authorDate":"2019-12-28 03:01:34","commitOrder":5,"curCode":"    public static <T, R> Flowable<R> combineLatestArray(@NonNull Publisher<? extends T>[] sources, @NonNull Function<? super Object[], ? extends R> combiner, int bufferSize) {\n        Objects.requireNonNull(sources, \"sources is null\");\n        if (sources.length == 0) {\n            return empty();\n        }\n        Objects.requireNonNull(combiner, \"combiner is null\");\n        ObjectHelper.verifyPositive(bufferSize, \"bufferSize\");\n        return RxJavaPlugins.onAssembly(new FlowableCombineLatest<>(sources, combiner, bufferSize, false));\n    }\n","date":"2019-12-28 03:01:34","endLine":336,"groupId":"10709","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"combineLatestArray","params":"(@NonNullPublisher<?extendsT>[]sources@@NonNullFunction<?superObject[]@?extendsR>combiner@intbufferSize)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/97/785c1f4c0b62a1fb36075eaf2808439a448b60.src","preCode":"    public static <T, R> Flowable<R> combineLatestArray(@NonNull Publisher<? extends T>[] sources, @NonNull Function<? super Object[], ? extends R> combiner, int bufferSize) {\n        Objects.requireNonNull(sources, \"sources is null\");\n        if (sources.length == 0) {\n            return empty();\n        }\n        Objects.requireNonNull(combiner, \"combiner is null\");\n        ObjectHelper.verifyPositive(bufferSize, \"bufferSize\");\n        return RxJavaPlugins.onAssembly(new FlowableCombineLatest<T, R>(sources, combiner, bufferSize, false));\n    }\n","realPath":"src/main/java/io/reactivex/rxjava3/core/Flowable.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":328,"status":"M"},{"authorDate":"2019-12-28 03:01:34","commitOrder":5,"curCode":"    public static <T, R> Flowable<R> zipArray(@NonNull Function<? super Object[], ? extends R> zipper,\n            boolean delayError, int bufferSize, @NonNull Publisher<? extends T>... sources) {\n        if (sources.length == 0) {\n            return empty();\n        }\n        Objects.requireNonNull(zipper, \"zipper is null\");\n        ObjectHelper.verifyPositive(bufferSize, \"bufferSize\");\n        return RxJavaPlugins.onAssembly(new FlowableZip<>(sources, null, zipper, bufferSize, delayError));\n    }\n","date":"2019-12-28 03:01:34","endLine":5490,"groupId":"10709","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"zipArray","params":"(@NonNullFunction<?superObject[]@?extendsR>zipper@booleandelayError@intbufferSize@@NonNullPublisher<?extendsT>...sources)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/97/785c1f4c0b62a1fb36075eaf2808439a448b60.src","preCode":"    public static <T, R> Flowable<R> zipArray(@NonNull Function<? super Object[], ? extends R> zipper,\n            boolean delayError, int bufferSize, @NonNull Publisher<? extends T>... sources) {\n        if (sources.length == 0) {\n            return empty();\n        }\n        Objects.requireNonNull(zipper, \"zipper is null\");\n        ObjectHelper.verifyPositive(bufferSize, \"bufferSize\");\n        return RxJavaPlugins.onAssembly(new FlowableZip<T, R>(sources, null, zipper, bufferSize, delayError));\n    }\n","realPath":"src/main/java/io/reactivex/rxjava3/core/Flowable.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":5482,"status":"M"}],"commitId":"79f8e6dde6446b1aa33c146eaedbb958086daf56","commitMessage":"@@@3.x: Fix diamonds.  spelling.  unnecessary code (#6804)\n\n","date":"2019-12-28 03:01:34","modifiedFileCount":"463","status":"M","submitter":"David Karnok"},{"authorTime":"2020-01-10 15:36:29","codes":[{"authorDate":"2019-12-28 03:01:34","commitOrder":6,"curCode":"    public static <T, R> Flowable<R> combineLatestArray(@NonNull Publisher<? extends T>[] sources, @NonNull Function<? super Object[], ? extends R> combiner, int bufferSize) {\n        Objects.requireNonNull(sources, \"sources is null\");\n        if (sources.length == 0) {\n            return empty();\n        }\n        Objects.requireNonNull(combiner, \"combiner is null\");\n        ObjectHelper.verifyPositive(bufferSize, \"bufferSize\");\n        return RxJavaPlugins.onAssembly(new FlowableCombineLatest<>(sources, combiner, bufferSize, false));\n    }\n","date":"2019-12-28 03:01:34","endLine":336,"groupId":"10709","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"combineLatestArray","params":"(@NonNullPublisher<?extendsT>[]sources@@NonNullFunction<?superObject[]@?extendsR>combiner@intbufferSize)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/97/785c1f4c0b62a1fb36075eaf2808439a448b60.src","preCode":"    public static <T, R> Flowable<R> combineLatestArray(@NonNull Publisher<? extends T>[] sources, @NonNull Function<? super Object[], ? extends R> combiner, int bufferSize) {\n        Objects.requireNonNull(sources, \"sources is null\");\n        if (sources.length == 0) {\n            return empty();\n        }\n        Objects.requireNonNull(combiner, \"combiner is null\");\n        ObjectHelper.verifyPositive(bufferSize, \"bufferSize\");\n        return RxJavaPlugins.onAssembly(new FlowableCombineLatest<>(sources, combiner, bufferSize, false));\n    }\n","realPath":"src/main/java/io/reactivex/rxjava3/core/Flowable.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":328,"status":"N"},{"authorDate":"2020-01-10 15:36:29","commitOrder":6,"curCode":"    public static <T, R> Flowable<R> zipArray(@NonNull Function<? super Object[], ? extends R> zipper,\n            boolean delayError, int bufferSize, @NonNull Publisher<? extends T>... sources) {\n        Objects.requireNonNull(sources, \"sources is null\");\n        if (sources.length == 0) {\n            return empty();\n        }\n        Objects.requireNonNull(zipper, \"zipper is null\");\n        ObjectHelper.verifyPositive(bufferSize, \"bufferSize\");\n        return RxJavaPlugins.onAssembly(new FlowableZip<>(sources, null, zipper, bufferSize, delayError));\n    }\n","date":"2020-01-10 15:36:29","endLine":5407,"groupId":"10709","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"zipArray","params":"(@NonNullFunction<?superObject[]@?extendsR>zipper@booleandelayError@intbufferSize@@NonNullPublisher<?extendsT>...sources)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/f1/1415e0dee18d5a9549e29094b3d5c1ec958a66.src","preCode":"    public static <T, R> Flowable<R> zipArray(@NonNull Function<? super Object[], ? extends R> zipper,\n            boolean delayError, int bufferSize, @NonNull Publisher<? extends T>... sources) {\n        if (sources.length == 0) {\n            return empty();\n        }\n        Objects.requireNonNull(zipper, \"zipper is null\");\n        ObjectHelper.verifyPositive(bufferSize, \"bufferSize\");\n        return RxJavaPlugins.onAssembly(new FlowableZip<>(sources, null, zipper, bufferSize, delayError));\n    }\n","realPath":"src/main/java/io/reactivex/rxjava3/core/Flowable.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":5398,"status":"M"}],"commitId":"1e4dbcf78a814993e80fa489a50d3369d7c4ecbd","commitMessage":"@@@3.x: Improve JavaDocs of Observable and fix similar issues elsewhere (#6831)\n\n* 3.x: Javadoc cleanup of Observable\n\n* Another set of cleanups (too many things to fix at once)\n\n* 3.x: Improve JavaDocs of Observable and fix similar issues elsewhere\n","date":"2020-01-10 15:36:29","modifiedFileCount":"19","status":"M","submitter":"David Karnok"},{"authorTime":"2020-01-14 15:49:53","codes":[{"authorDate":"2020-01-14 15:49:53","commitOrder":7,"curCode":"    public static <T, R> Flowable<R> combineLatestArray(@NonNull Publisher<@NonNull ? extends T>[] sources, @NonNull Function<? super Object[], ? extends R> combiner, int bufferSize) {\n        Objects.requireNonNull(sources, \"sources is null\");\n        if (sources.length == 0) {\n            return empty();\n        }\n        Objects.requireNonNull(combiner, \"combiner is null\");\n        ObjectHelper.verifyPositive(bufferSize, \"bufferSize\");\n        return RxJavaPlugins.onAssembly(new FlowableCombineLatest<>(sources, combiner, bufferSize, false));\n    }\n","date":"2020-01-14 15:49:53","endLine":340,"groupId":"10709","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"combineLatestArray","params":"(@NonNullPublisher<@NonNull?extendsT>[]sources@@NonNullFunction<?superObject[]@?extendsR>combiner@intbufferSize)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/48/6b0cb629defb0f51e33900cdb33090c85e4725.src","preCode":"    public static <T, R> Flowable<R> combineLatestArray(@NonNull Publisher<? extends T>[] sources, @NonNull Function<? super Object[], ? extends R> combiner, int bufferSize) {\n        Objects.requireNonNull(sources, \"sources is null\");\n        if (sources.length == 0) {\n            return empty();\n        }\n        Objects.requireNonNull(combiner, \"combiner is null\");\n        ObjectHelper.verifyPositive(bufferSize, \"bufferSize\");\n        return RxJavaPlugins.onAssembly(new FlowableCombineLatest<>(sources, combiner, bufferSize, false));\n    }\n","realPath":"src/main/java/io/reactivex/rxjava3/core/Flowable.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":332,"status":"M"},{"authorDate":"2020-01-14 15:49:53","commitOrder":7,"curCode":"    public static <T, R> Flowable<R> zipArray(@NonNull Function<? super Object[], ? extends R> zipper,\n            boolean delayError, int bufferSize, @NonNull Publisher<@NonNull ? extends T>... sources) {\n        Objects.requireNonNull(sources, \"sources is null\");\n        if (sources.length == 0) {\n            return empty();\n        }\n        Objects.requireNonNull(zipper, \"zipper is null\");\n        ObjectHelper.verifyPositive(bufferSize, \"bufferSize\");\n        return RxJavaPlugins.onAssembly(new FlowableZip<>(sources, null, zipper, bufferSize, delayError));\n    }\n","date":"2020-01-14 15:49:53","endLine":5574,"groupId":"10709","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"zipArray","params":"(@NonNullFunction<?superObject[]@?extendsR>zipper@booleandelayError@intbufferSize@@NonNullPublisher<@NonNull?extendsT>...sources)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/48/6b0cb629defb0f51e33900cdb33090c85e4725.src","preCode":"    public static <T, R> Flowable<R> zipArray(@NonNull Function<? super Object[], ? extends R> zipper,\n            boolean delayError, int bufferSize, @NonNull Publisher<? extends T>... sources) {\n        Objects.requireNonNull(sources, \"sources is null\");\n        if (sources.length == 0) {\n            return empty();\n        }\n        Objects.requireNonNull(zipper, \"zipper is null\");\n        ObjectHelper.verifyPositive(bufferSize, \"bufferSize\");\n        return RxJavaPlugins.onAssembly(new FlowableZip<>(sources, null, zipper, bufferSize, delayError));\n    }\n","realPath":"src/main/java/io/reactivex/rxjava3/core/Flowable.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":5565,"status":"M"}],"commitId":"fb6dab6847d858b22fe6a36558cf3b62dc10627d","commitMessage":"@@@3.x: Add nullability annotations to type arguments (#6840)\n\n","date":"2020-01-14 15:49:53","modifiedFileCount":"75","status":"M","submitter":"David Karnok"},{"authorTime":"2021-07-25 00:35:45","codes":[{"authorDate":"2021-07-25 00:35:45","commitOrder":8,"curCode":"    public static <@NonNull T, @NonNull R> Flowable<R> combineLatestArray(@NonNull Publisher<? extends T>[] sources, @NonNull Function<? super Object[], ? extends R> combiner, int bufferSize) {\n        Objects.requireNonNull(sources, \"sources is null\");\n        if (sources.length == 0) {\n            return empty();\n        }\n        Objects.requireNonNull(combiner, \"combiner is null\");\n        ObjectHelper.verifyPositive(bufferSize, \"bufferSize\");\n        return RxJavaPlugins.onAssembly(new FlowableCombineLatest<>(sources, combiner, bufferSize, false));\n    }\n","date":"2021-07-25 00:35:45","endLine":355,"groupId":"104306","id":13,"instanceNumber":1,"isCurCommit":0,"methodName":"combineLatestArray","params":"(@NonNullPublisher<?extendsT>[]sources@@NonNullFunction<?superObject[]@?extendsR>combiner@intbufferSize)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/31/827d9e1c0235ea4c571f5df54be8e515e94da8.src","preCode":"    public static <T, R> Flowable<R> combineLatestArray(@NonNull Publisher<@NonNull ? extends T>[] sources, @NonNull Function<? super Object[], ? extends R> combiner, int bufferSize) {\n        Objects.requireNonNull(sources, \"sources is null\");\n        if (sources.length == 0) {\n            return empty();\n        }\n        Objects.requireNonNull(combiner, \"combiner is null\");\n        ObjectHelper.verifyPositive(bufferSize, \"bufferSize\");\n        return RxJavaPlugins.onAssembly(new FlowableCombineLatest<>(sources, combiner, bufferSize, false));\n    }\n","realPath":"src/main/java/io/reactivex/rxjava3/core/Flowable.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":347,"status":"M"},{"authorDate":"2021-07-25 00:35:45","commitOrder":8,"curCode":"    public static <@NonNull T, @NonNull R> Flowable<R> zipArray(@NonNull Function<? super Object[], ? extends R> zipper,\n            boolean delayError, int bufferSize, @NonNull Publisher<? extends T>... sources) {\n        Objects.requireNonNull(sources, \"sources is null\");\n        if (sources.length == 0) {\n            return empty();\n        }\n        Objects.requireNonNull(zipper, \"zipper is null\");\n        ObjectHelper.verifyPositive(bufferSize, \"bufferSize\");\n        return RxJavaPlugins.onAssembly(new FlowableZip<>(sources, null, zipper, bufferSize, delayError));\n    }\n","date":"2021-07-25 00:35:45","endLine":5909,"groupId":"104306","id":14,"instanceNumber":2,"isCurCommit":0,"methodName":"zipArray","params":"(@NonNullFunction<?superObject[]@?extendsR>zipper@booleandelayError@intbufferSize@@NonNullPublisher<?extendsT>...sources)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/31/827d9e1c0235ea4c571f5df54be8e515e94da8.src","preCode":"    public static <T, R> Flowable<R> zipArray(@NonNull Function<? super Object[], ? extends R> zipper,\n            boolean delayError, int bufferSize, @NonNull Publisher<@NonNull ? extends T>... sources) {\n        Objects.requireNonNull(sources, \"sources is null\");\n        if (sources.length == 0) {\n            return empty();\n        }\n        Objects.requireNonNull(zipper, \"zipper is null\");\n        ObjectHelper.verifyPositive(bufferSize, \"bufferSize\");\n        return RxJavaPlugins.onAssembly(new FlowableZip<>(sources, null, zipper, bufferSize, delayError));\n    }\n","realPath":"src/main/java/io/reactivex/rxjava3/core/Flowable.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":5900,"status":"M"}],"commitId":"40ca8eff4a0d6559258489cf282471f5e3b1a229","commitMessage":"@@@3.x: Move nullability annotations into the type argument declaration (#7303)\n\n* 3.x: Move nullability annotations into the type argument declaration\n\n* Reinforce Function<T.  R> return argument type where R is non-trivial","date":"2021-07-25 00:35:45","modifiedFileCount":"17","status":"M","submitter":"David Karnok"}]
