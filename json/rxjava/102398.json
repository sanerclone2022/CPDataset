[{"authorTime":"2019-08-16 20:51:17","codes":[{"authorDate":"2019-08-16 20:51:17","commitOrder":1,"curCode":"    protected void subscribeActual(Observer<? super T> observer) {\n        if (other == null) {\n            TimeoutObserver<T> parent = new TimeoutObserver<T>(observer, timeout, unit, scheduler.createWorker());\n            observer.onSubscribe(parent);\n            parent.startTimeout(0L);\n            source.subscribe(parent);\n        } else {\n            TimeoutFallbackObserver<T> parent = new TimeoutFallbackObserver<T>(observer, timeout, unit, scheduler.createWorker(), other);\n            observer.onSubscribe(parent);\n            parent.startTimeout(0L);\n            source.subscribe(parent);\n        }\n    }\n","date":"2019-08-16 20:51:17","endLine":54,"groupId":"1696","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"subscribeActual","params":"(Observer<?superT>observer)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/05/53c9474f971baffeb8b02189713b17b3c05f89.src","preCode":"    protected void subscribeActual(Observer<? super T> observer) {\n        if (other == null) {\n            TimeoutObserver<T> parent = new TimeoutObserver<T>(observer, timeout, unit, scheduler.createWorker());\n            observer.onSubscribe(parent);\n            parent.startTimeout(0L);\n            source.subscribe(parent);\n        } else {\n            TimeoutFallbackObserver<T> parent = new TimeoutFallbackObserver<T>(observer, timeout, unit, scheduler.createWorker(), other);\n            observer.onSubscribe(parent);\n            parent.startTimeout(0L);\n            source.subscribe(parent);\n        }\n    }\n","realPath":"src/main/java/io/reactivex/rxjava3/internal/operators/observable/ObservableTimeoutTimed.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":42,"status":"B"},{"authorDate":"2019-08-16 20:51:17","commitOrder":1,"curCode":"    protected void subscribeActual(Subscriber<? super T> s) {\n        if (other == null) {\n            TimeoutSubscriber<T> parent = new TimeoutSubscriber<T>(s, timeout, unit, scheduler.createWorker());\n            s.onSubscribe(parent);\n            parent.startTimeout(0L);\n            source.subscribe(parent);\n        } else {\n            TimeoutFallbackSubscriber<T> parent = new TimeoutFallbackSubscriber<T>(s, timeout, unit, scheduler.createWorker(), other);\n            s.onSubscribe(parent);\n            parent.startTimeout(0L);\n            source.subscribe(parent);\n        }\n    }\n","date":"2019-08-16 20:51:17","endLine":56,"groupId":"5465","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"subscribeActual","params":"(Subscriber<?superT>s)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/89/63788992ffd728e482c8b21dcf3325bacfc98e.src","preCode":"    protected void subscribeActual(Subscriber<? super T> s) {\n        if (other == null) {\n            TimeoutSubscriber<T> parent = new TimeoutSubscriber<T>(s, timeout, unit, scheduler.createWorker());\n            s.onSubscribe(parent);\n            parent.startTimeout(0L);\n            source.subscribe(parent);\n        } else {\n            TimeoutFallbackSubscriber<T> parent = new TimeoutFallbackSubscriber<T>(s, timeout, unit, scheduler.createWorker(), other);\n            s.onSubscribe(parent);\n            parent.startTimeout(0L);\n            source.subscribe(parent);\n        }\n    }\n","realPath":"src/main/java/io/reactivex/rxjava3/internal/operators/flowable/FlowableTimeoutTimed.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":44,"status":"B"}],"commitId":"a1693ecc9215027a7a3eae75272979ebb4d79a27","commitMessage":"@@@3.x: Refactor to io.reactivex.rxjava3.** (#6621)\n\n* 3.x: Refactor to io.reactivex.rxjava3.**\n\n* fix javadoc cleanup gradle\n\n* javadoc gradle again\n\n* Fix package location in text\n","date":"2019-08-16 20:51:17","modifiedFileCount":"0","status":"B","submitter":"David Karnok"},{"authorTime":"2019-12-28 03:01:34","codes":[{"authorDate":"2019-12-28 03:01:34","commitOrder":2,"curCode":"    protected void subscribeActual(Observer<? super T> observer) {\n        if (other == null) {\n            TimeoutObserver<T> parent = new TimeoutObserver<>(observer, timeout, unit, scheduler.createWorker());\n            observer.onSubscribe(parent);\n            parent.startTimeout(0L);\n            source.subscribe(parent);\n        } else {\n            TimeoutFallbackObserver<T> parent = new TimeoutFallbackObserver<>(observer, timeout, unit, scheduler.createWorker(), other);\n            observer.onSubscribe(parent);\n            parent.startTimeout(0L);\n            source.subscribe(parent);\n        }\n    }\n","date":"2019-12-28 03:01:34","endLine":54,"groupId":"102398","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"subscribeActual","params":"(Observer<?superT>observer)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/29/b177293050f3f750b8b1cbe057644a35f2968d.src","preCode":"    protected void subscribeActual(Observer<? super T> observer) {\n        if (other == null) {\n            TimeoutObserver<T> parent = new TimeoutObserver<T>(observer, timeout, unit, scheduler.createWorker());\n            observer.onSubscribe(parent);\n            parent.startTimeout(0L);\n            source.subscribe(parent);\n        } else {\n            TimeoutFallbackObserver<T> parent = new TimeoutFallbackObserver<T>(observer, timeout, unit, scheduler.createWorker(), other);\n            observer.onSubscribe(parent);\n            parent.startTimeout(0L);\n            source.subscribe(parent);\n        }\n    }\n","realPath":"src/main/java/io/reactivex/rxjava3/internal/operators/observable/ObservableTimeoutTimed.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":42,"status":"M"},{"authorDate":"2019-12-28 03:01:34","commitOrder":2,"curCode":"    protected void subscribeActual(Subscriber<? super T> s) {\n        if (other == null) {\n            TimeoutSubscriber<T> parent = new TimeoutSubscriber<>(s, timeout, unit, scheduler.createWorker());\n            s.onSubscribe(parent);\n            parent.startTimeout(0L);\n            source.subscribe(parent);\n        } else {\n            TimeoutFallbackSubscriber<T> parent = new TimeoutFallbackSubscriber<>(s, timeout, unit, scheduler.createWorker(), other);\n            s.onSubscribe(parent);\n            parent.startTimeout(0L);\n            source.subscribe(parent);\n        }\n    }\n","date":"2019-12-28 03:01:34","endLine":56,"groupId":"102398","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"subscribeActual","params":"(Subscriber<?superT>s)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/35/1099500e9a3e32ad9df5ac46747057a27e743c.src","preCode":"    protected void subscribeActual(Subscriber<? super T> s) {\n        if (other == null) {\n            TimeoutSubscriber<T> parent = new TimeoutSubscriber<T>(s, timeout, unit, scheduler.createWorker());\n            s.onSubscribe(parent);\n            parent.startTimeout(0L);\n            source.subscribe(parent);\n        } else {\n            TimeoutFallbackSubscriber<T> parent = new TimeoutFallbackSubscriber<T>(s, timeout, unit, scheduler.createWorker(), other);\n            s.onSubscribe(parent);\n            parent.startTimeout(0L);\n            source.subscribe(parent);\n        }\n    }\n","realPath":"src/main/java/io/reactivex/rxjava3/internal/operators/flowable/FlowableTimeoutTimed.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":44,"status":"M"}],"commitId":"79f8e6dde6446b1aa33c146eaedbb958086daf56","commitMessage":"@@@3.x: Fix diamonds.  spelling.  unnecessary code (#6804)\n\n","date":"2019-12-28 03:01:34","modifiedFileCount":"463","status":"M","submitter":"David Karnok"}]
