[{"authorTime":"2019-08-16 20:51:17","codes":[{"authorDate":"2019-08-16 20:51:17","commitOrder":1,"curCode":"    public void predicateThrowsSuppressOthers() {\n        List<Throwable> errors = TestHelper.trackPluginErrors();\n        try {\n            new Observable<Integer>() {\n                @Override\n                protected void subscribeActual(Observer<? super Integer> observer) {\n                    observer.onSubscribe(Disposables.empty());\n\n                    observer.onNext(1);\n                    observer.onNext(2);\n                    observer.onError(new IOException());\n                    observer.onComplete();\n                }\n            }\n            .any(new Predicate<Integer>() {\n                @Override\n                public boolean test(Integer v) throws Exception {\n                    throw new TestException();\n                }\n            })\n            .toObservable()\n            .test()\n            .assertFailure(TestException.class);\n\n            TestHelper.assertUndeliverable(errors, 0, IOException.class);\n        } finally {\n            RxJavaPlugins.reset();\n        }\n    }\n","date":"2019-08-16 20:51:17","endLine":542,"groupId":"11371","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"predicateThrowsSuppressOthers","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/a7/9479067a58d449c0b8d7a083b084fa1770ee46.src","preCode":"    public void predicateThrowsSuppressOthers() {\n        List<Throwable> errors = TestHelper.trackPluginErrors();\n        try {\n            new Observable<Integer>() {\n                @Override\n                protected void subscribeActual(Observer<? super Integer> observer) {\n                    observer.onSubscribe(Disposables.empty());\n\n                    observer.onNext(1);\n                    observer.onNext(2);\n                    observer.onError(new IOException());\n                    observer.onComplete();\n                }\n            }\n            .any(new Predicate<Integer>() {\n                @Override\n                public boolean test(Integer v) throws Exception {\n                    throw new TestException();\n                }\n            })\n            .toObservable()\n            .test()\n            .assertFailure(TestException.class);\n\n            TestHelper.assertUndeliverable(errors, 0, IOException.class);\n        } finally {\n            RxJavaPlugins.reset();\n        }\n    }\n","realPath":"src/test/java/io/reactivex/rxjava3/internal/operators/observable/ObservableAnyTest.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":514,"status":"B"},{"authorDate":"2019-08-16 20:51:17","commitOrder":1,"curCode":"    public void predicateThrowsSuppressOthers() {\n        List<Throwable> errors = TestHelper.trackPluginErrors();\n        try {\n            new Flowable<Integer>() {\n                @Override\n                protected void subscribeActual(Subscriber<? super Integer> subscriber) {\n                    subscriber.onSubscribe(new BooleanSubscription());\n\n                    subscriber.onNext(1);\n                    subscriber.onNext(2);\n                    subscriber.onError(new IOException());\n                    subscriber.onComplete();\n                }\n            }\n            .any(new Predicate<Integer>() {\n                @Override\n                public boolean test(Integer v) throws Exception {\n                    throw new TestException();\n                }\n            })\n            .toFlowable()\n            .test()\n            .assertFailure(TestException.class);\n\n            TestHelper.assertUndeliverable(errors, 0, IOException.class);\n        } finally {\n            RxJavaPlugins.reset();\n        }\n    }\n","date":"2019-08-16 20:51:17","endLine":595,"groupId":"11371","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"predicateThrowsSuppressOthers","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/93/6d74f5e0b27cdc1c100c1ec05314b96adc2c96.src","preCode":"    public void predicateThrowsSuppressOthers() {\n        List<Throwable> errors = TestHelper.trackPluginErrors();\n        try {\n            new Flowable<Integer>() {\n                @Override\n                protected void subscribeActual(Subscriber<? super Integer> subscriber) {\n                    subscriber.onSubscribe(new BooleanSubscription());\n\n                    subscriber.onNext(1);\n                    subscriber.onNext(2);\n                    subscriber.onError(new IOException());\n                    subscriber.onComplete();\n                }\n            }\n            .any(new Predicate<Integer>() {\n                @Override\n                public boolean test(Integer v) throws Exception {\n                    throw new TestException();\n                }\n            })\n            .toFlowable()\n            .test()\n            .assertFailure(TestException.class);\n\n            TestHelper.assertUndeliverable(errors, 0, IOException.class);\n        } finally {\n            RxJavaPlugins.reset();\n        }\n    }\n","realPath":"src/test/java/io/reactivex/rxjava3/internal/operators/flowable/FlowableAnyTest.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":567,"status":"B"}],"commitId":"a1693ecc9215027a7a3eae75272979ebb4d79a27","commitMessage":"@@@3.x: Refactor to io.reactivex.rxjava3.** (#6621)\n\n* 3.x: Refactor to io.reactivex.rxjava3.**\n\n* fix javadoc cleanup gradle\n\n* javadoc gradle again\n\n* Fix package location in text\n","date":"2019-08-16 20:51:17","modifiedFileCount":"0","status":"B","submitter":"David Karnok"},{"authorTime":"2019-08-16 20:51:17","codes":[{"authorDate":"2019-12-20 02:39:40","commitOrder":2,"curCode":"    public void predicateThrowsSuppressOthers() {\n        List<Throwable> errors = TestHelper.trackPluginErrors();\n        try {\n            new Observable<Integer>() {\n                @Override\n                protected void subscribeActual(Observer<? super Integer> observer) {\n                    observer.onSubscribe(Disposable.empty());\n\n                    observer.onNext(1);\n                    observer.onNext(2);\n                    observer.onError(new IOException());\n                    observer.onComplete();\n                }\n            }\n            .any(new Predicate<Integer>() {\n                @Override\n                public boolean test(Integer v) throws Exception {\n                    throw new TestException();\n                }\n            })\n            .toObservable()\n            .test()\n            .assertFailure(TestException.class);\n\n            TestHelper.assertUndeliverable(errors, 0, IOException.class);\n        } finally {\n            RxJavaPlugins.reset();\n        }\n    }\n","date":"2019-12-20 02:39:40","endLine":542,"groupId":"103715","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"predicateThrowsSuppressOthers","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/6c/e94103407d8ddf3bbfc130c6ce53adf09b83bb.src","preCode":"    public void predicateThrowsSuppressOthers() {\n        List<Throwable> errors = TestHelper.trackPluginErrors();\n        try {\n            new Observable<Integer>() {\n                @Override\n                protected void subscribeActual(Observer<? super Integer> observer) {\n                    observer.onSubscribe(Disposables.empty());\n\n                    observer.onNext(1);\n                    observer.onNext(2);\n                    observer.onError(new IOException());\n                    observer.onComplete();\n                }\n            }\n            .any(new Predicate<Integer>() {\n                @Override\n                public boolean test(Integer v) throws Exception {\n                    throw new TestException();\n                }\n            })\n            .toObservable()\n            .test()\n            .assertFailure(TestException.class);\n\n            TestHelper.assertUndeliverable(errors, 0, IOException.class);\n        } finally {\n            RxJavaPlugins.reset();\n        }\n    }\n","realPath":"src/test/java/io/reactivex/rxjava3/internal/operators/observable/ObservableAnyTest.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":514,"status":"M"},{"authorDate":"2019-08-16 20:51:17","commitOrder":2,"curCode":"    public void predicateThrowsSuppressOthers() {\n        List<Throwable> errors = TestHelper.trackPluginErrors();\n        try {\n            new Flowable<Integer>() {\n                @Override\n                protected void subscribeActual(Subscriber<? super Integer> subscriber) {\n                    subscriber.onSubscribe(new BooleanSubscription());\n\n                    subscriber.onNext(1);\n                    subscriber.onNext(2);\n                    subscriber.onError(new IOException());\n                    subscriber.onComplete();\n                }\n            }\n            .any(new Predicate<Integer>() {\n                @Override\n                public boolean test(Integer v) throws Exception {\n                    throw new TestException();\n                }\n            })\n            .toFlowable()\n            .test()\n            .assertFailure(TestException.class);\n\n            TestHelper.assertUndeliverable(errors, 0, IOException.class);\n        } finally {\n            RxJavaPlugins.reset();\n        }\n    }\n","date":"2019-08-16 20:51:17","endLine":595,"groupId":"103715","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"predicateThrowsSuppressOthers","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/93/6d74f5e0b27cdc1c100c1ec05314b96adc2c96.src","preCode":"    public void predicateThrowsSuppressOthers() {\n        List<Throwable> errors = TestHelper.trackPluginErrors();\n        try {\n            new Flowable<Integer>() {\n                @Override\n                protected void subscribeActual(Subscriber<? super Integer> subscriber) {\n                    subscriber.onSubscribe(new BooleanSubscription());\n\n                    subscriber.onNext(1);\n                    subscriber.onNext(2);\n                    subscriber.onError(new IOException());\n                    subscriber.onComplete();\n                }\n            }\n            .any(new Predicate<Integer>() {\n                @Override\n                public boolean test(Integer v) throws Exception {\n                    throw new TestException();\n                }\n            })\n            .toFlowable()\n            .test()\n            .assertFailure(TestException.class);\n\n            TestHelper.assertUndeliverable(errors, 0, IOException.class);\n        } finally {\n            RxJavaPlugins.reset();\n        }\n    }\n","realPath":"src/test/java/io/reactivex/rxjava3/internal/operators/flowable/FlowableAnyTest.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":567,"status":"N"}],"commitId":"166c529eb165b473c9bff11e8fedbde6c471b005","commitMessage":"@@@Migrate Disposables static factories to Disposable interface (#6781)\n\n","date":"2019-12-20 02:39:40","modifiedFileCount":"202","status":"M","submitter":"Jake Wharton"}]
