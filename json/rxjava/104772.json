[{"authorTime":"2019-08-16 20:51:17","codes":[{"authorDate":"2019-08-16 20:51:17","commitOrder":1,"curCode":"    public void toMapWithValueSelectorObservable() {\n        Observable<String> source = Observable.just(\"a\", \"bb\", \"ccc\", \"dddd\");\n\n        Observable<Map<Integer, String>> mapped = source.toMap(lengthFunc, duplicate).toObservable();\n\n        Map<Integer, String> expected = new HashMap<Integer, String>();\n        expected.put(1, \"aa\");\n        expected.put(2, \"bbbb\");\n        expected.put(3, \"cccccc\");\n        expected.put(4, \"dddddddd\");\n\n        mapped.subscribe(objectObserver);\n\n        verify(objectObserver, never()).onError(any(Throwable.class));\n        verify(objectObserver, times(1)).onNext(expected);\n        verify(objectObserver, times(1)).onComplete();\n    }\n","date":"2019-08-16 20:51:17","endLine":88,"groupId":"4401","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"toMapWithValueSelectorObservable","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/25/136fcd9dd413cbe75d4222f03e56c2cb546125.src","preCode":"    public void toMapWithValueSelectorObservable() {\n        Observable<String> source = Observable.just(\"a\", \"bb\", \"ccc\", \"dddd\");\n\n        Observable<Map<Integer, String>> mapped = source.toMap(lengthFunc, duplicate).toObservable();\n\n        Map<Integer, String> expected = new HashMap<Integer, String>();\n        expected.put(1, \"aa\");\n        expected.put(2, \"bbbb\");\n        expected.put(3, \"cccccc\");\n        expected.put(4, \"dddddddd\");\n\n        mapped.subscribe(objectObserver);\n\n        verify(objectObserver, never()).onError(any(Throwable.class));\n        verify(objectObserver, times(1)).onNext(expected);\n        verify(objectObserver, times(1)).onComplete();\n    }\n","realPath":"src/test/java/io/reactivex/rxjava3/internal/operators/observable/ObservableToMapTest.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":72,"status":"B"},{"authorDate":"2019-08-16 20:51:17","commitOrder":1,"curCode":"    public void toMapWithValueSelector() {\n        Flowable<String> source = Flowable.just(\"a\", \"bb\", \"ccc\", \"dddd\");\n\n        Single<Map<Integer, String>> mapped = source.toMap(lengthFunc, duplicate);\n\n        Map<Integer, String> expected = new HashMap<Integer, String>();\n        expected.put(1, \"aa\");\n        expected.put(2, \"bbbb\");\n        expected.put(3, \"cccccc\");\n        expected.put(4, \"dddddddd\");\n\n        mapped.subscribe(singleObserver);\n\n        verify(singleObserver, never()).onError(any(Throwable.class));\n        verify(singleObserver, times(1)).onSuccess(expected);\n    }\n","date":"2019-08-16 20:51:17","endLine":262,"groupId":"4401","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"toMapWithValueSelector","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/86/35158cc355cbf62a426e39e94c6a58ba8f2d21.src","preCode":"    public void toMapWithValueSelector() {\n        Flowable<String> source = Flowable.just(\"a\", \"bb\", \"ccc\", \"dddd\");\n\n        Single<Map<Integer, String>> mapped = source.toMap(lengthFunc, duplicate);\n\n        Map<Integer, String> expected = new HashMap<Integer, String>();\n        expected.put(1, \"aa\");\n        expected.put(2, \"bbbb\");\n        expected.put(3, \"cccccc\");\n        expected.put(4, \"dddddddd\");\n\n        mapped.subscribe(singleObserver);\n\n        verify(singleObserver, never()).onError(any(Throwable.class));\n        verify(singleObserver, times(1)).onSuccess(expected);\n    }\n","realPath":"src/test/java/io/reactivex/rxjava3/internal/operators/flowable/FlowableToMapTest.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":247,"status":"B"}],"commitId":"a1693ecc9215027a7a3eae75272979ebb4d79a27","commitMessage":"@@@3.x: Refactor to io.reactivex.rxjava3.** (#6621)\n\n* 3.x: Refactor to io.reactivex.rxjava3.**\n\n* fix javadoc cleanup gradle\n\n* javadoc gradle again\n\n* Fix package location in text\n","date":"2019-08-16 20:51:17","modifiedFileCount":"0","status":"B","submitter":"David Karnok"},{"authorTime":"2019-12-22 18:39:23","codes":[{"authorDate":"2019-08-16 20:51:17","commitOrder":2,"curCode":"    public void toMapWithValueSelectorObservable() {\n        Observable<String> source = Observable.just(\"a\", \"bb\", \"ccc\", \"dddd\");\n\n        Observable<Map<Integer, String>> mapped = source.toMap(lengthFunc, duplicate).toObservable();\n\n        Map<Integer, String> expected = new HashMap<Integer, String>();\n        expected.put(1, \"aa\");\n        expected.put(2, \"bbbb\");\n        expected.put(3, \"cccccc\");\n        expected.put(4, \"dddddddd\");\n\n        mapped.subscribe(objectObserver);\n\n        verify(objectObserver, never()).onError(any(Throwable.class));\n        verify(objectObserver, times(1)).onNext(expected);\n        verify(objectObserver, times(1)).onComplete();\n    }\n","date":"2019-08-16 20:51:17","endLine":88,"groupId":"4401","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"toMapWithValueSelectorObservable","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/25/136fcd9dd413cbe75d4222f03e56c2cb546125.src","preCode":"    public void toMapWithValueSelectorObservable() {\n        Observable<String> source = Observable.just(\"a\", \"bb\", \"ccc\", \"dddd\");\n\n        Observable<Map<Integer, String>> mapped = source.toMap(lengthFunc, duplicate).toObservable();\n\n        Map<Integer, String> expected = new HashMap<Integer, String>();\n        expected.put(1, \"aa\");\n        expected.put(2, \"bbbb\");\n        expected.put(3, \"cccccc\");\n        expected.put(4, \"dddddddd\");\n\n        mapped.subscribe(objectObserver);\n\n        verify(objectObserver, never()).onError(any(Throwable.class));\n        verify(objectObserver, times(1)).onNext(expected);\n        verify(objectObserver, times(1)).onComplete();\n    }\n","realPath":"src/test/java/io/reactivex/rxjava3/internal/operators/observable/ObservableToMapTest.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":72,"status":"N"},{"authorDate":"2019-12-22 18:39:23","commitOrder":2,"curCode":"    public void toMapWithValueSelector() {\n        Flowable<String> source = Flowable.just(\"a\", \"bb\", \"ccc\", \"dddd\");\n\n        Single<Map<Integer, String>> mapped = source.toMap(lengthFunc, duplicate);\n\n        Map<Integer, String> expected = new HashMap<>();\n        expected.put(1, \"aa\");\n        expected.put(2, \"bbbb\");\n        expected.put(3, \"cccccc\");\n        expected.put(4, \"dddddddd\");\n\n        mapped.subscribe(singleObserver);\n\n        verify(singleObserver, never()).onError(any(Throwable.class));\n        verify(singleObserver, times(1)).onSuccess(expected);\n    }\n","date":"2019-12-22 18:39:23","endLine":262,"groupId":"4401","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"toMapWithValueSelector","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/14/9a3f893c4f9326bfb9940f09acf14db72c26db.src","preCode":"    public void toMapWithValueSelector() {\n        Flowable<String> source = Flowable.just(\"a\", \"bb\", \"ccc\", \"dddd\");\n\n        Single<Map<Integer, String>> mapped = source.toMap(lengthFunc, duplicate);\n\n        Map<Integer, String> expected = new HashMap<Integer, String>();\n        expected.put(1, \"aa\");\n        expected.put(2, \"bbbb\");\n        expected.put(3, \"cccccc\");\n        expected.put(4, \"dddddddd\");\n\n        mapped.subscribe(singleObserver);\n\n        verify(singleObserver, never()).onError(any(Throwable.class));\n        verify(singleObserver, times(1)).onSuccess(expected);\n    }\n","realPath":"src/test/java/io/reactivex/rxjava3/internal/operators/flowable/FlowableToMapTest.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":247,"status":"M"}],"commitId":"e162d664d86639b97c214054aca346fc2ba37e33","commitMessage":"@@@diamond operators in unit tests.  flowable package (#6787)\n\n","date":"2019-12-22 18:39:23","modifiedFileCount":"111","status":"M","submitter":"Dmitry Volkov"},{"authorTime":"2019-12-22 18:39:23","codes":[{"authorDate":"2019-12-22 18:59:44","commitOrder":3,"curCode":"    public void toMapWithValueSelectorObservable() {\n        Observable<String> source = Observable.just(\"a\", \"bb\", \"ccc\", \"dddd\");\n\n        Observable<Map<Integer, String>> mapped = source.toMap(lengthFunc, duplicate).toObservable();\n\n        Map<Integer, String> expected = new HashMap<>();\n        expected.put(1, \"aa\");\n        expected.put(2, \"bbbb\");\n        expected.put(3, \"cccccc\");\n        expected.put(4, \"dddddddd\");\n\n        mapped.subscribe(objectObserver);\n\n        verify(objectObserver, never()).onError(any(Throwable.class));\n        verify(objectObserver, times(1)).onNext(expected);\n        verify(objectObserver, times(1)).onComplete();\n    }\n","date":"2019-12-22 18:59:44","endLine":88,"groupId":"104772","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"toMapWithValueSelectorObservable","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/88/38ff4b5a5e323bd9eb64db1e03976772b94927.src","preCode":"    public void toMapWithValueSelectorObservable() {\n        Observable<String> source = Observable.just(\"a\", \"bb\", \"ccc\", \"dddd\");\n\n        Observable<Map<Integer, String>> mapped = source.toMap(lengthFunc, duplicate).toObservable();\n\n        Map<Integer, String> expected = new HashMap<Integer, String>();\n        expected.put(1, \"aa\");\n        expected.put(2, \"bbbb\");\n        expected.put(3, \"cccccc\");\n        expected.put(4, \"dddddddd\");\n\n        mapped.subscribe(objectObserver);\n\n        verify(objectObserver, never()).onError(any(Throwable.class));\n        verify(objectObserver, times(1)).onNext(expected);\n        verify(objectObserver, times(1)).onComplete();\n    }\n","realPath":"src/test/java/io/reactivex/rxjava3/internal/operators/observable/ObservableToMapTest.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":72,"status":"M"},{"authorDate":"2019-12-22 18:39:23","commitOrder":3,"curCode":"    public void toMapWithValueSelector() {\n        Flowable<String> source = Flowable.just(\"a\", \"bb\", \"ccc\", \"dddd\");\n\n        Single<Map<Integer, String>> mapped = source.toMap(lengthFunc, duplicate);\n\n        Map<Integer, String> expected = new HashMap<>();\n        expected.put(1, \"aa\");\n        expected.put(2, \"bbbb\");\n        expected.put(3, \"cccccc\");\n        expected.put(4, \"dddddddd\");\n\n        mapped.subscribe(singleObserver);\n\n        verify(singleObserver, never()).onError(any(Throwable.class));\n        verify(singleObserver, times(1)).onSuccess(expected);\n    }\n","date":"2019-12-22 18:39:23","endLine":262,"groupId":"104772","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"toMapWithValueSelector","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/14/9a3f893c4f9326bfb9940f09acf14db72c26db.src","preCode":"    public void toMapWithValueSelector() {\n        Flowable<String> source = Flowable.just(\"a\", \"bb\", \"ccc\", \"dddd\");\n\n        Single<Map<Integer, String>> mapped = source.toMap(lengthFunc, duplicate);\n\n        Map<Integer, String> expected = new HashMap<>();\n        expected.put(1, \"aa\");\n        expected.put(2, \"bbbb\");\n        expected.put(3, \"cccccc\");\n        expected.put(4, \"dddddddd\");\n\n        mapped.subscribe(singleObserver);\n\n        verify(singleObserver, never()).onError(any(Throwable.class));\n        verify(singleObserver, times(1)).onSuccess(expected);\n    }\n","realPath":"src/test/java/io/reactivex/rxjava3/internal/operators/flowable/FlowableToMapTest.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":247,"status":"N"}],"commitId":"d6d698213b6c4091f4d5a0fb47f0922d0d0618e3","commitMessage":"@@@diamond operators in unit tests.  observable package (#6786)\n\n","date":"2019-12-22 18:59:44","modifiedFileCount":"95","status":"M","submitter":"Dmitry Volkov"}]
