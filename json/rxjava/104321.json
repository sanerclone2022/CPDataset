[{"authorTime":"2019-08-16 20:51:17","codes":[{"authorDate":"2019-08-16 20:51:17","commitOrder":1,"curCode":"    public final <R> Observable<R> concatMapDelayError(Function<? super T, ? extends ObservableSource<? extends R>> mapper,\n            int prefetch, boolean tillTheEnd) {\n        ObjectHelper.requireNonNull(mapper, \"mapper is null\");\n        ObjectHelper.verifyPositive(prefetch, \"prefetch\");\n        if (this instanceof ScalarSupplier) {\n            @SuppressWarnings(\"unchecked\")\n            T v = ((ScalarSupplier<T>)this).get();\n            if (v == null) {\n                return empty();\n            }\n            return ObservableScalarXMap.scalarXMap(v, mapper);\n        }\n        return RxJavaPlugins.onAssembly(new ObservableConcatMap<T, R>(this, mapper, prefetch, tillTheEnd ? ErrorMode.END : ErrorMode.BOUNDARY));\n    }\n","date":"2019-08-16 20:51:17","endLine":6556,"groupId":"9412","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"concatMapDelayError","params":"(Function<?superT@?extendsObservableSource<?extendsR>>mapper@intprefetch@booleantillTheEnd)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/bc/c013a10f40257dded28957b3da473976c6bb44.src","preCode":"    public final <R> Observable<R> concatMapDelayError(Function<? super T, ? extends ObservableSource<? extends R>> mapper,\n            int prefetch, boolean tillTheEnd) {\n        ObjectHelper.requireNonNull(mapper, \"mapper is null\");\n        ObjectHelper.verifyPositive(prefetch, \"prefetch\");\n        if (this instanceof ScalarSupplier) {\n            @SuppressWarnings(\"unchecked\")\n            T v = ((ScalarSupplier<T>)this).get();\n            if (v == null) {\n                return empty();\n            }\n            return ObservableScalarXMap.scalarXMap(v, mapper);\n        }\n        return RxJavaPlugins.onAssembly(new ObservableConcatMap<T, R>(this, mapper, prefetch, tillTheEnd ? ErrorMode.END : ErrorMode.BOUNDARY));\n    }\n","realPath":"src/main/java/io/reactivex/rxjava3/core/Observable.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":6543,"status":"B"},{"authorDate":"2019-08-16 20:51:17","commitOrder":1,"curCode":"    public final <R> Observable<R> switchMapDelayError(Function<? super T, ? extends ObservableSource<? extends R>> mapper, int bufferSize) {\n        ObjectHelper.requireNonNull(mapper, \"mapper is null\");\n        ObjectHelper.verifyPositive(bufferSize, \"bufferSize\");\n        if (this instanceof ScalarSupplier) {\n            @SuppressWarnings(\"unchecked\")\n            T v = ((ScalarSupplier<T>)this).get();\n            if (v == null) {\n                return empty();\n            }\n            return ObservableScalarXMap.scalarXMap(v, mapper);\n        }\n        return RxJavaPlugins.onAssembly(new ObservableSwitchMap<T, R>(this, mapper, bufferSize, true));\n    }\n","date":"2019-08-16 20:51:17","endLine":12775,"groupId":"9412","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"switchMapDelayError","params":"(Function<?superT@?extendsObservableSource<?extendsR>>mapper@intbufferSize)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/bc/c013a10f40257dded28957b3da473976c6bb44.src","preCode":"    public final <R> Observable<R> switchMapDelayError(Function<? super T, ? extends ObservableSource<? extends R>> mapper, int bufferSize) {\n        ObjectHelper.requireNonNull(mapper, \"mapper is null\");\n        ObjectHelper.verifyPositive(bufferSize, \"bufferSize\");\n        if (this instanceof ScalarSupplier) {\n            @SuppressWarnings(\"unchecked\")\n            T v = ((ScalarSupplier<T>)this).get();\n            if (v == null) {\n                return empty();\n            }\n            return ObservableScalarXMap.scalarXMap(v, mapper);\n        }\n        return RxJavaPlugins.onAssembly(new ObservableSwitchMap<T, R>(this, mapper, bufferSize, true));\n    }\n","realPath":"src/main/java/io/reactivex/rxjava3/core/Observable.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":12763,"status":"B"}],"commitId":"a1693ecc9215027a7a3eae75272979ebb4d79a27","commitMessage":"@@@3.x: Refactor to io.reactivex.rxjava3.** (#6621)\n\n* 3.x: Refactor to io.reactivex.rxjava3.**\n\n* fix javadoc cleanup gradle\n\n* javadoc gradle again\n\n* Fix package location in text\n","date":"2019-08-16 20:51:17","modifiedFileCount":"0","status":"B","submitter":"David Karnok"},{"authorTime":"2019-08-16 20:51:17","codes":[{"authorDate":"2019-08-28 19:19:49","commitOrder":2,"curCode":"    public final <R> Observable<R> concatMapDelayError(Function<? super T, ? extends ObservableSource<? extends R>> mapper,\n            boolean tillTheEnd, int prefetch) {\n        ObjectHelper.requireNonNull(mapper, \"mapper is null\");\n        ObjectHelper.verifyPositive(prefetch, \"prefetch\");\n        if (this instanceof ScalarSupplier) {\n            @SuppressWarnings(\"unchecked\")\n            T v = ((ScalarSupplier<T>)this).get();\n            if (v == null) {\n                return empty();\n            }\n            return ObservableScalarXMap.scalarXMap(v, mapper);\n        }\n        return RxJavaPlugins.onAssembly(new ObservableConcatMap<T, R>(this, mapper, prefetch, tillTheEnd ? ErrorMode.END : ErrorMode.BOUNDARY));\n    }\n","date":"2019-08-28 19:19:49","endLine":6413,"groupId":"9412","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"concatMapDelayError","params":"(Function<?superT@?extendsObservableSource<?extendsR>>mapper@booleantillTheEnd@intprefetch)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/a6/76d3a4895cd7af6b800786584bde3140f1fd7d.src","preCode":"    public final <R> Observable<R> concatMapDelayError(Function<? super T, ? extends ObservableSource<? extends R>> mapper,\n            int prefetch, boolean tillTheEnd) {\n        ObjectHelper.requireNonNull(mapper, \"mapper is null\");\n        ObjectHelper.verifyPositive(prefetch, \"prefetch\");\n        if (this instanceof ScalarSupplier) {\n            @SuppressWarnings(\"unchecked\")\n            T v = ((ScalarSupplier<T>)this).get();\n            if (v == null) {\n                return empty();\n            }\n            return ObservableScalarXMap.scalarXMap(v, mapper);\n        }\n        return RxJavaPlugins.onAssembly(new ObservableConcatMap<T, R>(this, mapper, prefetch, tillTheEnd ? ErrorMode.END : ErrorMode.BOUNDARY));\n    }\n","realPath":"src/main/java/io/reactivex/rxjava3/core/Observable.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":6400,"status":"M"},{"authorDate":"2019-08-16 20:51:17","commitOrder":2,"curCode":"    public final <R> Observable<R> switchMapDelayError(Function<? super T, ? extends ObservableSource<? extends R>> mapper, int bufferSize) {\n        ObjectHelper.requireNonNull(mapper, \"mapper is null\");\n        ObjectHelper.verifyPositive(bufferSize, \"bufferSize\");\n        if (this instanceof ScalarSupplier) {\n            @SuppressWarnings(\"unchecked\")\n            T v = ((ScalarSupplier<T>)this).get();\n            if (v == null) {\n                return empty();\n            }\n            return ObservableScalarXMap.scalarXMap(v, mapper);\n        }\n        return RxJavaPlugins.onAssembly(new ObservableSwitchMap<T, R>(this, mapper, bufferSize, true));\n    }\n","date":"2019-08-16 20:51:17","endLine":12775,"groupId":"9412","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"switchMapDelayError","params":"(Function<?superT@?extendsObservableSource<?extendsR>>mapper@intbufferSize)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/bc/c013a10f40257dded28957b3da473976c6bb44.src","preCode":"    public final <R> Observable<R> switchMapDelayError(Function<? super T, ? extends ObservableSource<? extends R>> mapper, int bufferSize) {\n        ObjectHelper.requireNonNull(mapper, \"mapper is null\");\n        ObjectHelper.verifyPositive(bufferSize, \"bufferSize\");\n        if (this instanceof ScalarSupplier) {\n            @SuppressWarnings(\"unchecked\")\n            T v = ((ScalarSupplier<T>)this).get();\n            if (v == null) {\n                return empty();\n            }\n            return ObservableScalarXMap.scalarXMap(v, mapper);\n        }\n        return RxJavaPlugins.onAssembly(new ObservableSwitchMap<T, R>(this, mapper, bufferSize, true));\n    }\n","realPath":"src/main/java/io/reactivex/rxjava3/core/Observable.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":12763,"status":"N"}],"commitId":"f1441b00f3cc174ab5ef47e3339156d8a7c2a1f5","commitMessage":"@@@3.x: Rename zipIterable.  remove zip(O(O)).  adjust concatMapX arg order (#6638)\n\n","date":"2019-08-28 19:19:49","modifiedFileCount":"12","status":"M","submitter":"David Karnok"},{"authorTime":"2019-12-18 03:06:44","codes":[{"authorDate":"2019-12-18 03:06:44","commitOrder":3,"curCode":"    public final <R> Observable<R> concatMapDelayError(Function<? super T, ? extends ObservableSource<? extends R>> mapper,\n            boolean tillTheEnd, int prefetch) {\n        Objects.requireNonNull(mapper, \"mapper is null\");\n        ObjectHelper.verifyPositive(prefetch, \"prefetch\");\n        if (this instanceof ScalarSupplier) {\n            @SuppressWarnings(\"unchecked\")\n            T v = ((ScalarSupplier<T>)this).get();\n            if (v == null) {\n                return empty();\n            }\n            return ObservableScalarXMap.scalarXMap(v, mapper);\n        }\n        return RxJavaPlugins.onAssembly(new ObservableConcatMap<T, R>(this, mapper, prefetch, tillTheEnd ? ErrorMode.END : ErrorMode.BOUNDARY));\n    }\n","date":"2019-12-18 03:06:44","endLine":6413,"groupId":"9412","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"concatMapDelayError","params":"(Function<?superT@?extendsObservableSource<?extendsR>>mapper@booleantillTheEnd@intprefetch)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/63/406824ba158b4e2455ac106163611841aebd44.src","preCode":"    public final <R> Observable<R> concatMapDelayError(Function<? super T, ? extends ObservableSource<? extends R>> mapper,\n            boolean tillTheEnd, int prefetch) {\n        ObjectHelper.requireNonNull(mapper, \"mapper is null\");\n        ObjectHelper.verifyPositive(prefetch, \"prefetch\");\n        if (this instanceof ScalarSupplier) {\n            @SuppressWarnings(\"unchecked\")\n            T v = ((ScalarSupplier<T>)this).get();\n            if (v == null) {\n                return empty();\n            }\n            return ObservableScalarXMap.scalarXMap(v, mapper);\n        }\n        return RxJavaPlugins.onAssembly(new ObservableConcatMap<T, R>(this, mapper, prefetch, tillTheEnd ? ErrorMode.END : ErrorMode.BOUNDARY));\n    }\n","realPath":"src/main/java/io/reactivex/rxjava3/core/Observable.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":6400,"status":"M"},{"authorDate":"2019-12-18 03:06:44","commitOrder":3,"curCode":"    public final <R> Observable<R> switchMapDelayError(Function<? super T, ? extends ObservableSource<? extends R>> mapper, int bufferSize) {\n        Objects.requireNonNull(mapper, \"mapper is null\");\n        ObjectHelper.verifyPositive(bufferSize, \"bufferSize\");\n        if (this instanceof ScalarSupplier) {\n            @SuppressWarnings(\"unchecked\")\n            T v = ((ScalarSupplier<T>)this).get();\n            if (v == null) {\n                return empty();\n            }\n            return ObservableScalarXMap.scalarXMap(v, mapper);\n        }\n        return RxJavaPlugins.onAssembly(new ObservableSwitchMap<T, R>(this, mapper, bufferSize, true));\n    }\n","date":"2019-12-18 03:06:44","endLine":12685,"groupId":"9412","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"switchMapDelayError","params":"(Function<?superT@?extendsObservableSource<?extendsR>>mapper@intbufferSize)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/63/406824ba158b4e2455ac106163611841aebd44.src","preCode":"    public final <R> Observable<R> switchMapDelayError(Function<? super T, ? extends ObservableSource<? extends R>> mapper, int bufferSize) {\n        ObjectHelper.requireNonNull(mapper, \"mapper is null\");\n        ObjectHelper.verifyPositive(bufferSize, \"bufferSize\");\n        if (this instanceof ScalarSupplier) {\n            @SuppressWarnings(\"unchecked\")\n            T v = ((ScalarSupplier<T>)this).get();\n            if (v == null) {\n                return empty();\n            }\n            return ObservableScalarXMap.scalarXMap(v, mapper);\n        }\n        return RxJavaPlugins.onAssembly(new ObservableSwitchMap<T, R>(this, mapper, bufferSize, true));\n    }\n","realPath":"src/main/java/io/reactivex/rxjava3/core/Observable.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":12673,"status":"M"}],"commitId":"6ba932c9a3752c6d85d65bd2292c3a47cab64fd6","commitMessage":"@@@Replace ObjectHelper.requireNonNull with Objects.requireNonNull (#6771)\n\n","date":"2019-12-18 03:06:44","modifiedFileCount":"199","status":"M","submitter":"Jake Wharton"},{"authorTime":"2019-12-24 17:18:06","codes":[{"authorDate":"2019-12-24 17:18:06","commitOrder":4,"curCode":"    public final <R> Observable<R> concatMapDelayError(Function<? super T, ? extends ObservableSource<? extends R>> mapper,\n            boolean tillTheEnd, int prefetch) {\n        Objects.requireNonNull(mapper, \"mapper is null\");\n        ObjectHelper.verifyPositive(prefetch, \"prefetch\");\n        if (this instanceof ScalarSupplier) {\n            @SuppressWarnings(\"unchecked\")\n            T v = ((ScalarSupplier<T>)this).get();\n            if (v == null) {\n                return empty();\n            }\n            return ObservableScalarXMap.scalarXMap(v, mapper);\n        }\n        return RxJavaPlugins.onAssembly(new ObservableConcatMap<>(this, mapper, prefetch, tillTheEnd ? ErrorMode.END : ErrorMode.BOUNDARY));\n    }\n","date":"2019-12-24 17:18:06","endLine":6398,"groupId":"9412","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"concatMapDelayError","params":"(Function<?superT@?extendsObservableSource<?extendsR>>mapper@booleantillTheEnd@intprefetch)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/42/d7f3d00a30adbccfbf51f17a9bae85df1872ca.src","preCode":"    public final <R> Observable<R> concatMapDelayError(Function<? super T, ? extends ObservableSource<? extends R>> mapper,\n            boolean tillTheEnd, int prefetch) {\n        Objects.requireNonNull(mapper, \"mapper is null\");\n        ObjectHelper.verifyPositive(prefetch, \"prefetch\");\n        if (this instanceof ScalarSupplier) {\n            @SuppressWarnings(\"unchecked\")\n            T v = ((ScalarSupplier<T>)this).get();\n            if (v == null) {\n                return empty();\n            }\n            return ObservableScalarXMap.scalarXMap(v, mapper);\n        }\n        return RxJavaPlugins.onAssembly(new ObservableConcatMap<T, R>(this, mapper, prefetch, tillTheEnd ? ErrorMode.END : ErrorMode.BOUNDARY));\n    }\n","realPath":"src/main/java/io/reactivex/rxjava3/core/Observable.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":6385,"status":"M"},{"authorDate":"2019-12-24 17:18:06","commitOrder":4,"curCode":"    public final <R> Observable<R> switchMapDelayError(Function<? super T, ? extends ObservableSource<? extends R>> mapper, int bufferSize) {\n        Objects.requireNonNull(mapper, \"mapper is null\");\n        ObjectHelper.verifyPositive(bufferSize, \"bufferSize\");\n        if (this instanceof ScalarSupplier) {\n            @SuppressWarnings(\"unchecked\")\n            T v = ((ScalarSupplier<T>)this).get();\n            if (v == null) {\n                return empty();\n            }\n            return ObservableScalarXMap.scalarXMap(v, mapper);\n        }\n        return RxJavaPlugins.onAssembly(new ObservableSwitchMap<>(this, mapper, bufferSize, true));\n    }\n","date":"2019-12-24 17:18:06","endLine":12670,"groupId":"9412","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"switchMapDelayError","params":"(Function<?superT@?extendsObservableSource<?extendsR>>mapper@intbufferSize)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/42/d7f3d00a30adbccfbf51f17a9bae85df1872ca.src","preCode":"    public final <R> Observable<R> switchMapDelayError(Function<? super T, ? extends ObservableSource<? extends R>> mapper, int bufferSize) {\n        Objects.requireNonNull(mapper, \"mapper is null\");\n        ObjectHelper.verifyPositive(bufferSize, \"bufferSize\");\n        if (this instanceof ScalarSupplier) {\n            @SuppressWarnings(\"unchecked\")\n            T v = ((ScalarSupplier<T>)this).get();\n            if (v == null) {\n                return empty();\n            }\n            return ObservableScalarXMap.scalarXMap(v, mapper);\n        }\n        return RxJavaPlugins.onAssembly(new ObservableSwitchMap<T, R>(this, mapper, bufferSize, true));\n    }\n","realPath":"src/main/java/io/reactivex/rxjava3/core/Observable.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":12658,"status":"M"}],"commitId":"b57169babb184d0adc2fa28cf0425c4f0c1f8555","commitMessage":"@@@3.x: Add NonNull & SafeVarargs annotations + validator (#6791)\n\n","date":"2019-12-24 17:18:06","modifiedFileCount":"28","status":"M","submitter":"David Karnok"},{"authorTime":"2019-12-26 06:52:13","codes":[{"authorDate":"2019-12-26 06:52:13","commitOrder":5,"curCode":"    public final <R> Observable<R> concatMapDelayError(@NonNull Function<? super T, ? extends ObservableSource<? extends R>> mapper,\n            boolean tillTheEnd, int prefetch) {\n        Objects.requireNonNull(mapper, \"mapper is null\");\n        ObjectHelper.verifyPositive(prefetch, \"prefetch\");\n        if (this instanceof ScalarSupplier) {\n            @SuppressWarnings(\"unchecked\")\n            T v = ((ScalarSupplier<T>)this).get();\n            if (v == null) {\n                return empty();\n            }\n            return ObservableScalarXMap.scalarXMap(v, mapper);\n        }\n        return RxJavaPlugins.onAssembly(new ObservableConcatMap<>(this, mapper, prefetch, tillTheEnd ? ErrorMode.END : ErrorMode.BOUNDARY));\n    }\n","date":"2019-12-26 06:52:13","endLine":6560,"groupId":"9412","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"concatMapDelayError","params":"(@NonNullFunction<?superT@?extendsObservableSource<?extendsR>>mapper@booleantillTheEnd@intprefetch)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/16/e1454af367e5b65e5ddecb077644e09b3d66f6.src","preCode":"    public final <R> Observable<R> concatMapDelayError(Function<? super T, ? extends ObservableSource<? extends R>> mapper,\n            boolean tillTheEnd, int prefetch) {\n        Objects.requireNonNull(mapper, \"mapper is null\");\n        ObjectHelper.verifyPositive(prefetch, \"prefetch\");\n        if (this instanceof ScalarSupplier) {\n            @SuppressWarnings(\"unchecked\")\n            T v = ((ScalarSupplier<T>)this).get();\n            if (v == null) {\n                return empty();\n            }\n            return ObservableScalarXMap.scalarXMap(v, mapper);\n        }\n        return RxJavaPlugins.onAssembly(new ObservableConcatMap<>(this, mapper, prefetch, tillTheEnd ? ErrorMode.END : ErrorMode.BOUNDARY));\n    }\n","realPath":"src/main/java/io/reactivex/rxjava3/core/Observable.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":6547,"status":"M"},{"authorDate":"2019-12-26 06:52:13","commitOrder":5,"curCode":"    public final <R> Observable<R> switchMapDelayError(@NonNull Function<? super T, ? extends ObservableSource<? extends R>> mapper, int bufferSize) {\n        Objects.requireNonNull(mapper, \"mapper is null\");\n        ObjectHelper.verifyPositive(bufferSize, \"bufferSize\");\n        if (this instanceof ScalarSupplier) {\n            @SuppressWarnings(\"unchecked\")\n            T v = ((ScalarSupplier<T>)this).get();\n            if (v == null) {\n                return empty();\n            }\n            return ObservableScalarXMap.scalarXMap(v, mapper);\n        }\n        return RxJavaPlugins.onAssembly(new ObservableSwitchMap<>(this, mapper, bufferSize, true));\n    }\n","date":"2019-12-26 06:52:13","endLine":13031,"groupId":"9412","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"switchMapDelayError","params":"(@NonNullFunction<?superT@?extendsObservableSource<?extendsR>>mapper@intbufferSize)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/16/e1454af367e5b65e5ddecb077644e09b3d66f6.src","preCode":"    public final <R> Observable<R> switchMapDelayError(Function<? super T, ? extends ObservableSource<? extends R>> mapper, int bufferSize) {\n        Objects.requireNonNull(mapper, \"mapper is null\");\n        ObjectHelper.verifyPositive(bufferSize, \"bufferSize\");\n        if (this instanceof ScalarSupplier) {\n            @SuppressWarnings(\"unchecked\")\n            T v = ((ScalarSupplier<T>)this).get();\n            if (v == null) {\n                return empty();\n            }\n            return ObservableScalarXMap.scalarXMap(v, mapper);\n        }\n        return RxJavaPlugins.onAssembly(new ObservableSwitchMap<>(this, mapper, bufferSize, true));\n    }\n","realPath":"src/main/java/io/reactivex/rxjava3/core/Observable.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":13019,"status":"M"}],"commitId":"480889c58d3b762b073ef80229bf27f9d9429dd7","commitMessage":"@@@3.x: Add missing annotations.  fix many diamonds (#6795)\n\n* 3.x: Add missing annotations.  fix many diamonds\n\n* Fix accidental JDK 9 API usage\n\n* Fix NPE in unicast due to null-cleanup\n","date":"2019-12-26 06:52:13","modifiedFileCount":"52","status":"M","submitter":"David Karnok"},{"authorTime":"2019-12-26 06:52:13","codes":[{"authorDate":"2020-01-10 15:36:29","commitOrder":6,"curCode":"    public final <R> Observable<R> concatMapDelayError(@NonNull Function<? super T, ? extends ObservableSource<? extends R>> mapper,\n            boolean tillTheEnd, int bufferSize) {\n        Objects.requireNonNull(mapper, \"mapper is null\");\n        ObjectHelper.verifyPositive(bufferSize, \"bufferSize\");\n        if (this instanceof ScalarSupplier) {\n            @SuppressWarnings(\"unchecked\")\n            T v = ((ScalarSupplier<T>)this).get();\n            if (v == null) {\n                return empty();\n            }\n            return ObservableScalarXMap.scalarXMap(v, mapper);\n        }\n        return RxJavaPlugins.onAssembly(new ObservableConcatMap<>(this, mapper, bufferSize, tillTheEnd ? ErrorMode.END : ErrorMode.BOUNDARY));\n    }\n","date":"2020-01-10 15:36:29","endLine":6717,"groupId":"9412","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"concatMapDelayError","params":"(@NonNullFunction<?superT@?extendsObservableSource<?extendsR>>mapper@booleantillTheEnd@intbufferSize)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/2d/75dee207be27ae2de1128a687ce531b36bca80.src","preCode":"    public final <R> Observable<R> concatMapDelayError(@NonNull Function<? super T, ? extends ObservableSource<? extends R>> mapper,\n            boolean tillTheEnd, int prefetch) {\n        Objects.requireNonNull(mapper, \"mapper is null\");\n        ObjectHelper.verifyPositive(prefetch, \"prefetch\");\n        if (this instanceof ScalarSupplier) {\n            @SuppressWarnings(\"unchecked\")\n            T v = ((ScalarSupplier<T>)this).get();\n            if (v == null) {\n                return empty();\n            }\n            return ObservableScalarXMap.scalarXMap(v, mapper);\n        }\n        return RxJavaPlugins.onAssembly(new ObservableConcatMap<>(this, mapper, prefetch, tillTheEnd ? ErrorMode.END : ErrorMode.BOUNDARY));\n    }\n","realPath":"src/main/java/io/reactivex/rxjava3/core/Observable.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":6704,"status":"M"},{"authorDate":"2019-12-26 06:52:13","commitOrder":6,"curCode":"    public final <R> Observable<R> switchMapDelayError(@NonNull Function<? super T, ? extends ObservableSource<? extends R>> mapper, int bufferSize) {\n        Objects.requireNonNull(mapper, \"mapper is null\");\n        ObjectHelper.verifyPositive(bufferSize, \"bufferSize\");\n        if (this instanceof ScalarSupplier) {\n            @SuppressWarnings(\"unchecked\")\n            T v = ((ScalarSupplier<T>)this).get();\n            if (v == null) {\n                return empty();\n            }\n            return ObservableScalarXMap.scalarXMap(v, mapper);\n        }\n        return RxJavaPlugins.onAssembly(new ObservableSwitchMap<>(this, mapper, bufferSize, true));\n    }\n","date":"2019-12-26 06:52:13","endLine":13031,"groupId":"9412","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"switchMapDelayError","params":"(@NonNullFunction<?superT@?extendsObservableSource<?extendsR>>mapper@intbufferSize)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/16/e1454af367e5b65e5ddecb077644e09b3d66f6.src","preCode":"    public final <R> Observable<R> switchMapDelayError(@NonNull Function<? super T, ? extends ObservableSource<? extends R>> mapper, int bufferSize) {\n        Objects.requireNonNull(mapper, \"mapper is null\");\n        ObjectHelper.verifyPositive(bufferSize, \"bufferSize\");\n        if (this instanceof ScalarSupplier) {\n            @SuppressWarnings(\"unchecked\")\n            T v = ((ScalarSupplier<T>)this).get();\n            if (v == null) {\n                return empty();\n            }\n            return ObservableScalarXMap.scalarXMap(v, mapper);\n        }\n        return RxJavaPlugins.onAssembly(new ObservableSwitchMap<>(this, mapper, bufferSize, true));\n    }\n","realPath":"src/main/java/io/reactivex/rxjava3/core/Observable.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":13019,"status":"N"}],"commitId":"1e4dbcf78a814993e80fa489a50d3369d7c4ecbd","commitMessage":"@@@3.x: Improve JavaDocs of Observable and fix similar issues elsewhere (#6831)\n\n* 3.x: Javadoc cleanup of Observable\n\n* Another set of cleanups (too many things to fix at once)\n\n* 3.x: Improve JavaDocs of Observable and fix similar issues elsewhere\n","date":"2020-01-10 15:36:29","modifiedFileCount":"19","status":"M","submitter":"David Karnok"},{"authorTime":"2021-07-25 00:35:45","codes":[{"authorDate":"2021-07-25 00:35:45","commitOrder":7,"curCode":"    public final <@NonNull R> Observable<R> concatMapDelayError(@NonNull Function<? super T, ? extends ObservableSource<? extends R>> mapper,\n            boolean tillTheEnd, int bufferSize) {\n        Objects.requireNonNull(mapper, \"mapper is null\");\n        ObjectHelper.verifyPositive(bufferSize, \"bufferSize\");\n        if (this instanceof ScalarSupplier) {\n            @SuppressWarnings(\"unchecked\")\n            T v = ((ScalarSupplier<T>)this).get();\n            if (v == null) {\n                return empty();\n            }\n            return ObservableScalarXMap.scalarXMap(v, mapper);\n        }\n        return RxJavaPlugins.onAssembly(new ObservableConcatMap<>(this, mapper, bufferSize, tillTheEnd ? ErrorMode.END : ErrorMode.BOUNDARY));\n    }\n","date":"2021-07-25 00:35:45","endLine":6979,"groupId":"104321","id":13,"instanceNumber":1,"isCurCommit":0,"methodName":"concatMapDelayError","params":"(@NonNullFunction<?superT@?extendsObservableSource<?extendsR>>mapper@booleantillTheEnd@intbufferSize)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/be/33a95e3f43aee8827eff53f0756e4042f5b538.src","preCode":"    public final <R> Observable<R> concatMapDelayError(@NonNull Function<? super T, ? extends ObservableSource<? extends R>> mapper,\n            boolean tillTheEnd, int bufferSize) {\n        Objects.requireNonNull(mapper, \"mapper is null\");\n        ObjectHelper.verifyPositive(bufferSize, \"bufferSize\");\n        if (this instanceof ScalarSupplier) {\n            @SuppressWarnings(\"unchecked\")\n            T v = ((ScalarSupplier<T>)this).get();\n            if (v == null) {\n                return empty();\n            }\n            return ObservableScalarXMap.scalarXMap(v, mapper);\n        }\n        return RxJavaPlugins.onAssembly(new ObservableConcatMap<>(this, mapper, bufferSize, tillTheEnd ? ErrorMode.END : ErrorMode.BOUNDARY));\n    }\n","realPath":"src/main/java/io/reactivex/rxjava3/core/Observable.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":6966,"status":"M"},{"authorDate":"2021-07-25 00:35:45","commitOrder":7,"curCode":"    public final <@NonNull R> Observable<R> switchMapDelayError(@NonNull Function<? super T, ? extends ObservableSource<? extends R>> mapper, int bufferSize) {\n        Objects.requireNonNull(mapper, \"mapper is null\");\n        ObjectHelper.verifyPositive(bufferSize, \"bufferSize\");\n        if (this instanceof ScalarSupplier) {\n            @SuppressWarnings(\"unchecked\")\n            T v = ((ScalarSupplier<T>)this).get();\n            if (v == null) {\n                return empty();\n            }\n            return ObservableScalarXMap.scalarXMap(v, mapper);\n        }\n        return RxJavaPlugins.onAssembly(new ObservableSwitchMap<>(this, mapper, bufferSize, true));\n    }\n","date":"2021-07-25 00:35:45","endLine":13648,"groupId":"104321","id":14,"instanceNumber":2,"isCurCommit":0,"methodName":"switchMapDelayError","params":"(@NonNullFunction<?superT@?extendsObservableSource<?extendsR>>mapper@intbufferSize)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/be/33a95e3f43aee8827eff53f0756e4042f5b538.src","preCode":"    public final <R> Observable<R> switchMapDelayError(@NonNull Function<? super T, ? extends ObservableSource<? extends R>> mapper, int bufferSize) {\n        Objects.requireNonNull(mapper, \"mapper is null\");\n        ObjectHelper.verifyPositive(bufferSize, \"bufferSize\");\n        if (this instanceof ScalarSupplier) {\n            @SuppressWarnings(\"unchecked\")\n            T v = ((ScalarSupplier<T>)this).get();\n            if (v == null) {\n                return empty();\n            }\n            return ObservableScalarXMap.scalarXMap(v, mapper);\n        }\n        return RxJavaPlugins.onAssembly(new ObservableSwitchMap<>(this, mapper, bufferSize, true));\n    }\n","realPath":"src/main/java/io/reactivex/rxjava3/core/Observable.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":13636,"status":"M"}],"commitId":"40ca8eff4a0d6559258489cf282471f5e3b1a229","commitMessage":"@@@3.x: Move nullability annotations into the type argument declaration (#7303)\n\n* 3.x: Move nullability annotations into the type argument declaration\n\n* Reinforce Function<T.  R> return argument type where R is non-trivial","date":"2021-07-25 00:35:45","modifiedFileCount":"17","status":"M","submitter":"David Karnok"}]
