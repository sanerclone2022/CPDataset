[{"authorTime":"2019-08-16 20:51:17","codes":[{"authorDate":"2019-08-16 20:51:17","commitOrder":1,"curCode":"    private Observable<T> doOnEach(Consumer<? super T> onNext, Consumer<? super Throwable> onError, Action onComplete, Action onAfterTerminate) {\n        ObjectHelper.requireNonNull(onNext, \"onNext is null\");\n        ObjectHelper.requireNonNull(onError, \"onError is null\");\n        ObjectHelper.requireNonNull(onComplete, \"onComplete is null\");\n        ObjectHelper.requireNonNull(onAfterTerminate, \"onAfterTerminate is null\");\n        return RxJavaPlugins.onAssembly(new ObservableDoOnEach<T>(this, onNext, onError, onComplete, onAfterTerminate));\n    }\n","date":"2019-08-16 20:51:17","endLine":8144,"groupId":"9638","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"doOnEach","params":"(Consumer<?superT>onNext@Consumer<?superThrowable>onError@ActiononComplete@ActiononAfterTerminate)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/bc/c013a10f40257dded28957b3da473976c6bb44.src","preCode":"    private Observable<T> doOnEach(Consumer<? super T> onNext, Consumer<? super Throwable> onError, Action onComplete, Action onAfterTerminate) {\n        ObjectHelper.requireNonNull(onNext, \"onNext is null\");\n        ObjectHelper.requireNonNull(onError, \"onError is null\");\n        ObjectHelper.requireNonNull(onComplete, \"onComplete is null\");\n        ObjectHelper.requireNonNull(onAfterTerminate, \"onAfterTerminate is null\");\n        return RxJavaPlugins.onAssembly(new ObservableDoOnEach<T>(this, onNext, onError, onComplete, onAfterTerminate));\n    }\n","realPath":"src/main/java/io/reactivex/rxjava3/core/Observable.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":8138,"status":"B"},{"authorDate":"2019-08-16 20:51:17","commitOrder":1,"curCode":"    private Flowable<T> doOnEach(Consumer<? super T> onNext, Consumer<? super Throwable> onError,\n            Action onComplete, Action onAfterTerminate) {\n        ObjectHelper.requireNonNull(onNext, \"onNext is null\");\n        ObjectHelper.requireNonNull(onError, \"onError is null\");\n        ObjectHelper.requireNonNull(onComplete, \"onComplete is null\");\n        ObjectHelper.requireNonNull(onAfterTerminate, \"onAfterTerminate is null\");\n        return RxJavaPlugins.onAssembly(new FlowableDoOnEach<T>(this, onNext, onError, onComplete, onAfterTerminate));\n    }\n","date":"2019-08-16 20:51:17","endLine":9248,"groupId":"9638","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"doOnEach","params":"(Consumer<?superT>onNext@Consumer<?superThrowable>onError@ActiononComplete@ActiononAfterTerminate)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/f1/6fa2cf03001794eda0b11b8d1fe00bfa2fb6b9.src","preCode":"    private Flowable<T> doOnEach(Consumer<? super T> onNext, Consumer<? super Throwable> onError,\n            Action onComplete, Action onAfterTerminate) {\n        ObjectHelper.requireNonNull(onNext, \"onNext is null\");\n        ObjectHelper.requireNonNull(onError, \"onError is null\");\n        ObjectHelper.requireNonNull(onComplete, \"onComplete is null\");\n        ObjectHelper.requireNonNull(onAfterTerminate, \"onAfterTerminate is null\");\n        return RxJavaPlugins.onAssembly(new FlowableDoOnEach<T>(this, onNext, onError, onComplete, onAfterTerminate));\n    }\n","realPath":"src/main/java/io/reactivex/rxjava3/core/Flowable.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":9241,"status":"B"}],"commitId":"a1693ecc9215027a7a3eae75272979ebb4d79a27","commitMessage":"@@@3.x: Refactor to io.reactivex.rxjava3.** (#6621)\n\n* 3.x: Refactor to io.reactivex.rxjava3.**\n\n* fix javadoc cleanup gradle\n\n* javadoc gradle again\n\n* Fix package location in text\n","date":"2019-08-16 20:51:17","modifiedFileCount":"0","status":"B","submitter":"David Karnok"},{"authorTime":"2019-12-18 03:06:44","codes":[{"authorDate":"2019-12-18 03:06:44","commitOrder":2,"curCode":"    private Observable<T> doOnEach(Consumer<? super T> onNext, Consumer<? super Throwable> onError, Action onComplete, Action onAfterTerminate) {\n        Objects.requireNonNull(onNext, \"onNext is null\");\n        Objects.requireNonNull(onError, \"onError is null\");\n        Objects.requireNonNull(onComplete, \"onComplete is null\");\n        Objects.requireNonNull(onAfterTerminate, \"onAfterTerminate is null\");\n        return RxJavaPlugins.onAssembly(new ObservableDoOnEach<T>(this, onNext, onError, onComplete, onAfterTerminate));\n    }\n","date":"2019-12-18 03:06:44","endLine":8000,"groupId":"9700","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"doOnEach","params":"(Consumer<?superT>onNext@Consumer<?superThrowable>onError@ActiononComplete@ActiononAfterTerminate)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/63/406824ba158b4e2455ac106163611841aebd44.src","preCode":"    private Observable<T> doOnEach(Consumer<? super T> onNext, Consumer<? super Throwable> onError, Action onComplete, Action onAfterTerminate) {\n        ObjectHelper.requireNonNull(onNext, \"onNext is null\");\n        ObjectHelper.requireNonNull(onError, \"onError is null\");\n        ObjectHelper.requireNonNull(onComplete, \"onComplete is null\");\n        ObjectHelper.requireNonNull(onAfterTerminate, \"onAfterTerminate is null\");\n        return RxJavaPlugins.onAssembly(new ObservableDoOnEach<T>(this, onNext, onError, onComplete, onAfterTerminate));\n    }\n","realPath":"src/main/java/io/reactivex/rxjava3/core/Observable.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":7994,"status":"M"},{"authorDate":"2019-12-18 03:06:44","commitOrder":2,"curCode":"    private Flowable<T> doOnEach(Consumer<? super T> onNext, Consumer<? super Throwable> onError,\n            Action onComplete, Action onAfterTerminate) {\n        Objects.requireNonNull(onNext, \"onNext is null\");\n        Objects.requireNonNull(onError, \"onError is null\");\n        Objects.requireNonNull(onComplete, \"onComplete is null\");\n        Objects.requireNonNull(onAfterTerminate, \"onAfterTerminate is null\");\n        return RxJavaPlugins.onAssembly(new FlowableDoOnEach<T>(this, onNext, onError, onComplete, onAfterTerminate));\n    }\n","date":"2019-12-18 03:06:44","endLine":9055,"groupId":"9700","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"doOnEach","params":"(Consumer<?superT>onNext@Consumer<?superThrowable>onError@ActiononComplete@ActiononAfterTerminate)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/51/4845efbc67b5a91cda5e930ed14797beaeed88.src","preCode":"    private Flowable<T> doOnEach(Consumer<? super T> onNext, Consumer<? super Throwable> onError,\n            Action onComplete, Action onAfterTerminate) {\n        ObjectHelper.requireNonNull(onNext, \"onNext is null\");\n        ObjectHelper.requireNonNull(onError, \"onError is null\");\n        ObjectHelper.requireNonNull(onComplete, \"onComplete is null\");\n        ObjectHelper.requireNonNull(onAfterTerminate, \"onAfterTerminate is null\");\n        return RxJavaPlugins.onAssembly(new FlowableDoOnEach<T>(this, onNext, onError, onComplete, onAfterTerminate));\n    }\n","realPath":"src/main/java/io/reactivex/rxjava3/core/Flowable.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":9048,"status":"M"}],"commitId":"6ba932c9a3752c6d85d65bd2292c3a47cab64fd6","commitMessage":"@@@Replace ObjectHelper.requireNonNull with Objects.requireNonNull (#6771)\n\n","date":"2019-12-18 03:06:44","modifiedFileCount":"199","status":"M","submitter":"Jake Wharton"},{"authorTime":"2019-12-24 17:18:06","codes":[{"authorDate":"2019-12-24 17:18:06","commitOrder":3,"curCode":"    private Observable<T> doOnEach(Consumer<? super T> onNext, Consumer<? super Throwable> onError, Action onComplete, Action onAfterTerminate) {\n        Objects.requireNonNull(onNext, \"onNext is null\");\n        Objects.requireNonNull(onError, \"onError is null\");\n        Objects.requireNonNull(onComplete, \"onComplete is null\");\n        Objects.requireNonNull(onAfterTerminate, \"onAfterTerminate is null\");\n        return RxJavaPlugins.onAssembly(new ObservableDoOnEach<>(this, onNext, onError, onComplete, onAfterTerminate));\n    }\n","date":"2019-12-24 17:18:06","endLine":7985,"groupId":"9700","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"doOnEach","params":"(Consumer<?superT>onNext@Consumer<?superThrowable>onError@ActiononComplete@ActiononAfterTerminate)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/42/d7f3d00a30adbccfbf51f17a9bae85df1872ca.src","preCode":"    private Observable<T> doOnEach(Consumer<? super T> onNext, Consumer<? super Throwable> onError, Action onComplete, Action onAfterTerminate) {\n        Objects.requireNonNull(onNext, \"onNext is null\");\n        Objects.requireNonNull(onError, \"onError is null\");\n        Objects.requireNonNull(onComplete, \"onComplete is null\");\n        Objects.requireNonNull(onAfterTerminate, \"onAfterTerminate is null\");\n        return RxJavaPlugins.onAssembly(new ObservableDoOnEach<T>(this, onNext, onError, onComplete, onAfterTerminate));\n    }\n","realPath":"src/main/java/io/reactivex/rxjava3/core/Observable.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":7979,"status":"M"},{"authorDate":"2019-12-24 17:18:06","commitOrder":3,"curCode":"    private Flowable<T> doOnEach(@NonNull Consumer<? super T> onNext, @NonNull Consumer<? super Throwable> onError,\n            Action onComplete, Action onAfterTerminate) {\n        Objects.requireNonNull(onNext, \"onNext is null\");\n        Objects.requireNonNull(onError, \"onError is null\");\n        Objects.requireNonNull(onComplete, \"onComplete is null\");\n        Objects.requireNonNull(onAfterTerminate, \"onAfterTerminate is null\");\n        return RxJavaPlugins.onAssembly(new FlowableDoOnEach<>(this, onNext, onError, onComplete, onAfterTerminate));\n    }\n","date":"2019-12-24 17:18:06","endLine":9181,"groupId":"9700","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"doOnEach","params":"(@NonNullConsumer<?superT>onNext@@NonNullConsumer<?superThrowable>onError@ActiononComplete@ActiononAfterTerminate)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/c5/bdb06b2cc43b1a9736de785b99fa56fac4634b.src","preCode":"    private Flowable<T> doOnEach(Consumer<? super T> onNext, Consumer<? super Throwable> onError,\n            Action onComplete, Action onAfterTerminate) {\n        Objects.requireNonNull(onNext, \"onNext is null\");\n        Objects.requireNonNull(onError, \"onError is null\");\n        Objects.requireNonNull(onComplete, \"onComplete is null\");\n        Objects.requireNonNull(onAfterTerminate, \"onAfterTerminate is null\");\n        return RxJavaPlugins.onAssembly(new FlowableDoOnEach<T>(this, onNext, onError, onComplete, onAfterTerminate));\n    }\n","realPath":"src/main/java/io/reactivex/rxjava3/core/Flowable.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":9174,"status":"M"}],"commitId":"b57169babb184d0adc2fa28cf0425c4f0c1f8555","commitMessage":"@@@3.x: Add NonNull & SafeVarargs annotations + validator (#6791)\n\n","date":"2019-12-24 17:18:06","modifiedFileCount":"28","status":"M","submitter":"David Karnok"},{"authorTime":"2019-12-24 17:18:06","codes":[{"authorDate":"2019-12-26 06:52:13","commitOrder":4,"curCode":"    private Observable<T> doOnEach(@NonNull Consumer<? super T> onNext, @NonNull Consumer<? super Throwable> onError, @NonNull Action onComplete, @NonNull Action onAfterTerminate) {\n        Objects.requireNonNull(onNext, \"onNext is null\");\n        Objects.requireNonNull(onError, \"onError is null\");\n        Objects.requireNonNull(onComplete, \"onComplete is null\");\n        Objects.requireNonNull(onAfterTerminate, \"onAfterTerminate is null\");\n        return RxJavaPlugins.onAssembly(new ObservableDoOnEach<>(this, onNext, onError, onComplete, onAfterTerminate));\n    }\n","date":"2019-12-26 06:52:13","endLine":8201,"groupId":"104310","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"doOnEach","params":"(@NonNullConsumer<?superT>onNext@@NonNullConsumer<?superThrowable>onError@@NonNullActiononComplete@@NonNullActiononAfterTerminate)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/16/e1454af367e5b65e5ddecb077644e09b3d66f6.src","preCode":"    private Observable<T> doOnEach(Consumer<? super T> onNext, Consumer<? super Throwable> onError, Action onComplete, Action onAfterTerminate) {\n        Objects.requireNonNull(onNext, \"onNext is null\");\n        Objects.requireNonNull(onError, \"onError is null\");\n        Objects.requireNonNull(onComplete, \"onComplete is null\");\n        Objects.requireNonNull(onAfterTerminate, \"onAfterTerminate is null\");\n        return RxJavaPlugins.onAssembly(new ObservableDoOnEach<>(this, onNext, onError, onComplete, onAfterTerminate));\n    }\n","realPath":"src/main/java/io/reactivex/rxjava3/core/Observable.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":8195,"status":"M"},{"authorDate":"2019-12-24 17:18:06","commitOrder":4,"curCode":"    private Flowable<T> doOnEach(@NonNull Consumer<? super T> onNext, @NonNull Consumer<? super Throwable> onError,\n            Action onComplete, Action onAfterTerminate) {\n        Objects.requireNonNull(onNext, \"onNext is null\");\n        Objects.requireNonNull(onError, \"onError is null\");\n        Objects.requireNonNull(onComplete, \"onComplete is null\");\n        Objects.requireNonNull(onAfterTerminate, \"onAfterTerminate is null\");\n        return RxJavaPlugins.onAssembly(new FlowableDoOnEach<>(this, onNext, onError, onComplete, onAfterTerminate));\n    }\n","date":"2019-12-24 17:18:06","endLine":9181,"groupId":"104310","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"doOnEach","params":"(@NonNullConsumer<?superT>onNext@@NonNullConsumer<?superThrowable>onError@ActiononComplete@ActiononAfterTerminate)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/c5/bdb06b2cc43b1a9736de785b99fa56fac4634b.src","preCode":"    private Flowable<T> doOnEach(@NonNull Consumer<? super T> onNext, @NonNull Consumer<? super Throwable> onError,\n            Action onComplete, Action onAfterTerminate) {\n        Objects.requireNonNull(onNext, \"onNext is null\");\n        Objects.requireNonNull(onError, \"onError is null\");\n        Objects.requireNonNull(onComplete, \"onComplete is null\");\n        Objects.requireNonNull(onAfterTerminate, \"onAfterTerminate is null\");\n        return RxJavaPlugins.onAssembly(new FlowableDoOnEach<>(this, onNext, onError, onComplete, onAfterTerminate));\n    }\n","realPath":"src/main/java/io/reactivex/rxjava3/core/Flowable.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":9174,"status":"N"}],"commitId":"480889c58d3b762b073ef80229bf27f9d9429dd7","commitMessage":"@@@3.x: Add missing annotations.  fix many diamonds (#6795)\n\n* 3.x: Add missing annotations.  fix many diamonds\n\n* Fix accidental JDK 9 API usage\n\n* Fix NPE in unicast due to null-cleanup\n","date":"2019-12-26 06:52:13","modifiedFileCount":"52","status":"M","submitter":"David Karnok"}]
