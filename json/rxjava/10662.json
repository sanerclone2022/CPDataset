[{"authorTime":"2019-08-16 20:51:17","codes":[{"authorDate":"2019-08-16 20:51:17","commitOrder":1,"curCode":"    public void assertValueAtInvalidIndex() {\n        TestObserverEx<Integer> to = new TestObserverEx<Integer>();\n\n        Observable.just(1, 2).subscribe(to);\n\n        thrown.expect(AssertionError.class);\n        thrown.expectMessage(\"Invalid index: 2 (latch = 0, values = 2, errors = 0, completions = 1)\");\n        to.assertValueAt(2, new Predicate<Integer>() {\n            @Override public boolean test(final Integer o) throws Exception {\n                return o == 1;\n            }\n        });\n    }\n","date":"2019-08-16 20:51:17","endLine":1263,"groupId":"1484","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"assertValueAtInvalidIndex","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/6f/8d3e25ccf358fbeb29feb01d0bb6b8a3ff187d.src","preCode":"    public void assertValueAtInvalidIndex() {\n        TestObserverEx<Integer> to = new TestObserverEx<Integer>();\n\n        Observable.just(1, 2).subscribe(to);\n\n        thrown.expect(AssertionError.class);\n        thrown.expectMessage(\"Invalid index: 2 (latch = 0, values = 2, errors = 0, completions = 1)\");\n        to.assertValueAt(2, new Predicate<Integer>() {\n            @Override public boolean test(final Integer o) throws Exception {\n                return o == 1;\n            }\n        });\n    }\n","realPath":"src/test/java/io/reactivex/rxjava3/testsupport/TestObserverExTest.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":1251,"status":"B"},{"authorDate":"2019-08-16 20:51:17","commitOrder":1,"curCode":"    public void assertValueAtInvalidIndex() {\n        TestObserver<Integer> to = new TestObserver<Integer>();\n\n        Observable.just(1, 2).subscribe(to);\n\n        thrown.expect(AssertionError.class);\n        thrown.expectMessage(\"Invalid index: 2 (latch = 0, values = 2, errors = 0, completions = 1)\");\n        to.assertValueAt(2, new Predicate<Integer>() {\n            @Override public boolean test(final Integer o) throws Exception {\n                return o == 1;\n            }\n        });\n    }\n","date":"2019-08-16 20:51:17","endLine":968,"groupId":"1484","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"assertValueAtInvalidIndex","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/14/68dc9cb57635691d74f8c7a994166d7e7259aa.src","preCode":"    public void assertValueAtInvalidIndex() {\n        TestObserver<Integer> to = new TestObserver<Integer>();\n\n        Observable.just(1, 2).subscribe(to);\n\n        thrown.expect(AssertionError.class);\n        thrown.expectMessage(\"Invalid index: 2 (latch = 0, values = 2, errors = 0, completions = 1)\");\n        to.assertValueAt(2, new Predicate<Integer>() {\n            @Override public boolean test(final Integer o) throws Exception {\n                return o == 1;\n            }\n        });\n    }\n","realPath":"src/test/java/io/reactivex/rxjava3/observers/TestObserverTest.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":956,"status":"B"}],"commitId":"a1693ecc9215027a7a3eae75272979ebb4d79a27","commitMessage":"@@@3.x: Refactor to io.reactivex.rxjava3.** (#6621)\n\n* 3.x: Refactor to io.reactivex.rxjava3.**\n\n* fix javadoc cleanup gradle\n\n* javadoc gradle again\n\n* Fix package location in text\n","date":"2019-08-16 20:51:17","modifiedFileCount":"0","status":"B","submitter":"David Karnok"},{"authorTime":"2019-12-22 19:17:37","codes":[{"authorDate":"2019-12-22 19:17:37","commitOrder":2,"curCode":"    public void assertValueAtInvalidIndex() {\n        TestObserverEx<Integer> to = new TestObserverEx<>();\n\n        Observable.just(1, 2).subscribe(to);\n\n        thrown.expect(AssertionError.class);\n        thrown.expectMessage(\"Invalid index: 2 (latch = 0, values = 2, errors = 0, completions = 1)\");\n        to.assertValueAt(2, new Predicate<Integer>() {\n            @Override public boolean test(final Integer o) throws Exception {\n                return o == 1;\n            }\n        });\n    }\n","date":"2019-12-22 19:17:37","endLine":1263,"groupId":"1484","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"assertValueAtInvalidIndex","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/9e/e8a1cfc5ea1c28001483d56d15a9a8427e1633.src","preCode":"    public void assertValueAtInvalidIndex() {\n        TestObserverEx<Integer> to = new TestObserverEx<Integer>();\n\n        Observable.just(1, 2).subscribe(to);\n\n        thrown.expect(AssertionError.class);\n        thrown.expectMessage(\"Invalid index: 2 (latch = 0, values = 2, errors = 0, completions = 1)\");\n        to.assertValueAt(2, new Predicate<Integer>() {\n            @Override public boolean test(final Integer o) throws Exception {\n                return o == 1;\n            }\n        });\n    }\n","realPath":"src/test/java/io/reactivex/rxjava3/testsupport/TestObserverExTest.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":1251,"status":"M"},{"authorDate":"2019-12-22 19:17:37","commitOrder":2,"curCode":"    public void assertValueAtInvalidIndex() {\n        TestObserver<Integer> to = new TestObserver<>();\n\n        Observable.just(1, 2).subscribe(to);\n\n        thrown.expect(AssertionError.class);\n        thrown.expectMessage(\"Invalid index: 2 (latch = 0, values = 2, errors = 0, completions = 1)\");\n        to.assertValueAt(2, new Predicate<Integer>() {\n            @Override public boolean test(final Integer o) throws Exception {\n                return o == 1;\n            }\n        });\n    }\n","date":"2019-12-22 19:17:37","endLine":968,"groupId":"1484","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"assertValueAtInvalidIndex","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/1e/4a287cee05cd468472e741cac46e2a0c0ae5de.src","preCode":"    public void assertValueAtInvalidIndex() {\n        TestObserver<Integer> to = new TestObserver<Integer>();\n\n        Observable.just(1, 2).subscribe(to);\n\n        thrown.expect(AssertionError.class);\n        thrown.expectMessage(\"Invalid index: 2 (latch = 0, values = 2, errors = 0, completions = 1)\");\n        to.assertValueAt(2, new Predicate<Integer>() {\n            @Override public boolean test(final Integer o) throws Exception {\n                return o == 1;\n            }\n        });\n    }\n","realPath":"src/test/java/io/reactivex/rxjava3/observers/TestObserverTest.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":956,"status":"M"}],"commitId":"0bd2a0152b64723ac3daf3e2fbad3d59c7f3bbb8","commitMessage":"@@@diamond operators in unit tests.  small packages (#6789)\n\n","date":"2019-12-22 19:17:37","modifiedFileCount":"106","status":"M","submitter":"Dmitry Volkov"},{"authorTime":"2020-01-07 16:33:23","codes":[{"authorDate":"2020-01-07 16:33:23","commitOrder":3,"curCode":"    public void assertValueAtInvalidIndex() {\n        assertThrows(\"Invalid index: 2 (latch = 0, values = 2, errors = 0, completions = 1)\", AssertionError.class, () -> {\n            TestObserverEx<Integer> to = new TestObserverEx<>();\n\n            Observable.just(1, 2).subscribe(to);\n\n            to.assertValueAt(2, new Predicate<Integer>() {\n                @Override public boolean test(final Integer o) throws Exception {\n                    return o == 1;\n                }\n            });\n        });\n    }\n","date":"2020-01-07 16:33:23","endLine":1253,"groupId":"12812","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"assertValueAtInvalidIndex","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/60/26501a1d19e2f5f51cfc45e7eaef1323dd4c93.src","preCode":"    public void assertValueAtInvalidIndex() {\n        TestObserverEx<Integer> to = new TestObserverEx<>();\n\n        Observable.just(1, 2).subscribe(to);\n\n        thrown.expect(AssertionError.class);\n        thrown.expectMessage(\"Invalid index: 2 (latch = 0, values = 2, errors = 0, completions = 1)\");\n        to.assertValueAt(2, new Predicate<Integer>() {\n            @Override public boolean test(final Integer o) throws Exception {\n                return o == 1;\n            }\n        });\n    }\n","realPath":"src/test/java/io/reactivex/rxjava3/testsupport/TestObserverExTest.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":1241,"status":"M"},{"authorDate":"2020-01-07 16:33:23","commitOrder":3,"curCode":"    public void assertValueAtInvalidIndex() {\n        assertThrows(\"Invalid index: 2 (latch = 0, values = 2, errors = 0, completions = 1)\", AssertionError.class, () -> {\n            TestObserver<Integer> to = new TestObserver<>();\n\n            Observable.just(1, 2).subscribe(to);\n\n            to.assertValueAt(2, new Predicate<Integer>() {\n                @Override public boolean test(final Integer o) throws Exception {\n                    return o == 1;\n                }\n            });\n        });\n    }\n","date":"2020-01-07 16:33:23","endLine":958,"groupId":"12812","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"assertValueAtInvalidIndex","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/01/d6d76789f6f49c8c1b03eb41321f16612522a8.src","preCode":"    public void assertValueAtInvalidIndex() {\n        TestObserver<Integer> to = new TestObserver<>();\n\n        Observable.just(1, 2).subscribe(to);\n\n        thrown.expect(AssertionError.class);\n        thrown.expectMessage(\"Invalid index: 2 (latch = 0, values = 2, errors = 0, completions = 1)\");\n        to.assertValueAt(2, new Predicate<Integer>() {\n            @Override public boolean test(final Integer o) throws Exception {\n                return o == 1;\n            }\n        });\n    }\n","realPath":"src/test/java/io/reactivex/rxjava3/observers/TestObserverTest.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":946,"status":"M"}],"commitId":"45c0b064dcaea7ac3d55249c04a62370ebf4b4a9","commitMessage":"@@@3.x: Fix Junit 4.13 deprecated API use (#6813)\n\n","date":"2020-01-07 16:33:23","modifiedFileCount":"4","status":"M","submitter":"David Karnok"},{"authorTime":"2020-12-07 05:32:52","codes":[{"authorDate":"2020-01-07 16:33:23","commitOrder":4,"curCode":"    public void assertValueAtInvalidIndex() {\n        assertThrows(\"Invalid index: 2 (latch = 0, values = 2, errors = 0, completions = 1)\", AssertionError.class, () -> {\n            TestObserverEx<Integer> to = new TestObserverEx<>();\n\n            Observable.just(1, 2).subscribe(to);\n\n            to.assertValueAt(2, new Predicate<Integer>() {\n                @Override public boolean test(final Integer o) throws Exception {\n                    return o == 1;\n                }\n            });\n        });\n    }\n","date":"2020-01-07 16:33:23","endLine":1253,"groupId":"10662","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"assertValueAtInvalidIndex","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/60/26501a1d19e2f5f51cfc45e7eaef1323dd4c93.src","preCode":"    public void assertValueAtInvalidIndex() {\n        assertThrows(\"Invalid index: 2 (latch = 0, values = 2, errors = 0, completions = 1)\", AssertionError.class, () -> {\n            TestObserverEx<Integer> to = new TestObserverEx<>();\n\n            Observable.just(1, 2).subscribe(to);\n\n            to.assertValueAt(2, new Predicate<Integer>() {\n                @Override public boolean test(final Integer o) throws Exception {\n                    return o == 1;\n                }\n            });\n        });\n    }\n","realPath":"src/test/java/io/reactivex/rxjava3/testsupport/TestObserverExTest.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":1241,"status":"N"},{"authorDate":"2020-12-07 05:32:52","commitOrder":4,"curCode":"    public void assertValueAtInvalidIndex() {\n        assertThrowsWithMessage(\"Index 2 is out of range [0, 2) (latch = 0, values = 2, errors = 0, completions = 1)\", AssertionError.class, () -> {\n            TestObserver<Integer> to = new TestObserver<>();\n\n            Observable.just(1, 2).subscribe(to);\n\n            to.assertValueAt(2, new Predicate<Integer>() {\n                @Override public boolean test(final Integer o) throws Exception {\n                    return o == 1;\n                }\n            });\n        });\n    }\n","date":"2020-12-07 05:32:52","endLine":963,"groupId":"10662","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"assertValueAtInvalidIndex","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/56/ed09ac442ee818690457763d21bdc617b068eb.src","preCode":"    public void assertValueAtInvalidIndex() {\n        assertThrows(\"Invalid index: 2 (latch = 0, values = 2, errors = 0, completions = 1)\", AssertionError.class, () -> {\n            TestObserver<Integer> to = new TestObserver<>();\n\n            Observable.just(1, 2).subscribe(to);\n\n            to.assertValueAt(2, new Predicate<Integer>() {\n                @Override public boolean test(final Integer o) throws Exception {\n                    return o == 1;\n                }\n            });\n        });\n    }\n","realPath":"src/test/java/io/reactivex/rxjava3/observers/TestObserverTest.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":951,"status":"M"}],"commitId":"7e7b223ccf4af4ef594677f04e731998914190b9","commitMessage":"@@@3.x: Improve error messages in the test consumers (#7126)\n\n* 3.x: Improve error reporting in the test consumers\n\n* Verify assertValueAt with negative index","date":"2020-12-07 05:32:52","modifiedFileCount":"3","status":"M","submitter":"David Karnok"}]
