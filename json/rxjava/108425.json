[{"authorTime":"2019-08-16 20:51:17","codes":[{"authorDate":"2019-08-16 20:51:17","commitOrder":1,"curCode":"    public void shutdownRejects() {\n        final int[] calls = { 0 };\n\n        Runnable r = new Runnable() {\n            @Override\n            public void run() {\n                calls[0]++;\n            }\n        };\n\n        Scheduler s = new SingleScheduler();\n        s.shutdown();\n\n        assertEquals(Disposables.disposed(), s.scheduleDirect(r));\n\n        assertEquals(Disposables.disposed(), s.scheduleDirect(r, 1, TimeUnit.SECONDS));\n\n        assertEquals(Disposables.disposed(), s.schedulePeriodicallyDirect(r, 1, 1, TimeUnit.SECONDS));\n\n        Worker w = s.createWorker();\n        ((ScheduledWorker)w).executor.shutdownNow();\n\n        assertEquals(Disposables.disposed(), w.schedule(r));\n\n        assertEquals(Disposables.disposed(), w.schedule(r, 1, TimeUnit.SECONDS));\n\n        assertEquals(Disposables.disposed(), w.schedulePeriodically(r, 1, 1, TimeUnit.SECONDS));\n\n        assertEquals(0, calls[0]);\n\n        w.dispose();\n\n        assertTrue(w.isDisposed());\n    }\n","date":"2019-08-16 20:51:17","endLine":66,"groupId":"7291","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"shutdownRejects","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/82/f66ceff649f99089a2bea2c970e9de2f77d6e1.src","preCode":"    public void shutdownRejects() {\n        final int[] calls = { 0 };\n\n        Runnable r = new Runnable() {\n            @Override\n            public void run() {\n                calls[0]++;\n            }\n        };\n\n        Scheduler s = new SingleScheduler();\n        s.shutdown();\n\n        assertEquals(Disposables.disposed(), s.scheduleDirect(r));\n\n        assertEquals(Disposables.disposed(), s.scheduleDirect(r, 1, TimeUnit.SECONDS));\n\n        assertEquals(Disposables.disposed(), s.schedulePeriodicallyDirect(r, 1, 1, TimeUnit.SECONDS));\n\n        Worker w = s.createWorker();\n        ((ScheduledWorker)w).executor.shutdownNow();\n\n        assertEquals(Disposables.disposed(), w.schedule(r));\n\n        assertEquals(Disposables.disposed(), w.schedule(r, 1, TimeUnit.SECONDS));\n\n        assertEquals(Disposables.disposed(), w.schedulePeriodically(r, 1, 1, TimeUnit.SECONDS));\n\n        assertEquals(0, calls[0]);\n\n        w.dispose();\n\n        assertTrue(w.isDisposed());\n    }\n","realPath":"src/test/java/io/reactivex/rxjava3/internal/schedulers/SingleSchedulerTest.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":33,"status":"B"},{"authorDate":"2019-08-16 20:51:17","commitOrder":1,"curCode":"    public void shutdownRejects() {\n        final int[] calls = { 0 };\n\n        Runnable r = new Runnable() {\n            @Override\n            public void run() {\n                calls[0]++;\n            }\n        };\n\n        IoScheduler s = new IoScheduler();\n        s.shutdown();\n        s.shutdown();\n\n        s.scheduleDirect(r);\n\n        s.scheduleDirect(r, 1, TimeUnit.SECONDS);\n\n        s.schedulePeriodicallyDirect(r, 1, 1, TimeUnit.SECONDS);\n\n        Worker w = s.createWorker();\n        w.dispose();\n\n        assertEquals(Disposables.disposed(), w.schedule(r));\n\n        assertEquals(Disposables.disposed(), w.schedule(r, 1, TimeUnit.SECONDS));\n\n        assertEquals(Disposables.disposed(), w.schedulePeriodically(r, 1, 1, TimeUnit.SECONDS));\n\n        assertEquals(0, calls[0]);\n    }\n","date":"2019-08-16 20:51:17","endLine":124,"groupId":"10388","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"shutdownRejects","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/35/be875a9aaa553274a495a165b1ad37dcdd5a9f.src","preCode":"    public void shutdownRejects() {\n        final int[] calls = { 0 };\n\n        Runnable r = new Runnable() {\n            @Override\n            public void run() {\n                calls[0]++;\n            }\n        };\n\n        IoScheduler s = new IoScheduler();\n        s.shutdown();\n        s.shutdown();\n\n        s.scheduleDirect(r);\n\n        s.scheduleDirect(r, 1, TimeUnit.SECONDS);\n\n        s.schedulePeriodicallyDirect(r, 1, 1, TimeUnit.SECONDS);\n\n        Worker w = s.createWorker();\n        w.dispose();\n\n        assertEquals(Disposables.disposed(), w.schedule(r));\n\n        assertEquals(Disposables.disposed(), w.schedule(r, 1, TimeUnit.SECONDS));\n\n        assertEquals(Disposables.disposed(), w.schedulePeriodically(r, 1, 1, TimeUnit.SECONDS));\n\n        assertEquals(0, calls[0]);\n    }\n","realPath":"src/test/java/io/reactivex/rxjava3/schedulers/CachedThreadSchedulerTest.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":94,"status":"B"}],"commitId":"a1693ecc9215027a7a3eae75272979ebb4d79a27","commitMessage":"@@@3.x: Refactor to io.reactivex.rxjava3.** (#6621)\n\n* 3.x: Refactor to io.reactivex.rxjava3.**\n\n* fix javadoc cleanup gradle\n\n* javadoc gradle again\n\n* Fix package location in text\n","date":"2019-08-16 20:51:17","modifiedFileCount":"0","status":"B","submitter":"David Karnok"},{"authorTime":"2019-12-20 02:39:40","codes":[{"authorDate":"2019-12-20 02:39:40","commitOrder":2,"curCode":"    public void shutdownRejects() {\n        final int[] calls = { 0 };\n\n        Runnable r = new Runnable() {\n            @Override\n            public void run() {\n                calls[0]++;\n            }\n        };\n\n        Scheduler s = new SingleScheduler();\n        s.shutdown();\n\n        assertEquals(Disposable.disposed(), s.scheduleDirect(r));\n\n        assertEquals(Disposable.disposed(), s.scheduleDirect(r, 1, TimeUnit.SECONDS));\n\n        assertEquals(Disposable.disposed(), s.schedulePeriodicallyDirect(r, 1, 1, TimeUnit.SECONDS));\n\n        Worker w = s.createWorker();\n        ((ScheduledWorker)w).executor.shutdownNow();\n\n        assertEquals(Disposable.disposed(), w.schedule(r));\n\n        assertEquals(Disposable.disposed(), w.schedule(r, 1, TimeUnit.SECONDS));\n\n        assertEquals(Disposable.disposed(), w.schedulePeriodically(r, 1, 1, TimeUnit.SECONDS));\n\n        assertEquals(0, calls[0]);\n\n        w.dispose();\n\n        assertTrue(w.isDisposed());\n    }\n","date":"2019-12-20 02:39:40","endLine":66,"groupId":"108425","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"shutdownRejects","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/f6/dfe5e455f83b820ebf120969cd93c186234fa7.src","preCode":"    public void shutdownRejects() {\n        final int[] calls = { 0 };\n\n        Runnable r = new Runnable() {\n            @Override\n            public void run() {\n                calls[0]++;\n            }\n        };\n\n        Scheduler s = new SingleScheduler();\n        s.shutdown();\n\n        assertEquals(Disposables.disposed(), s.scheduleDirect(r));\n\n        assertEquals(Disposables.disposed(), s.scheduleDirect(r, 1, TimeUnit.SECONDS));\n\n        assertEquals(Disposables.disposed(), s.schedulePeriodicallyDirect(r, 1, 1, TimeUnit.SECONDS));\n\n        Worker w = s.createWorker();\n        ((ScheduledWorker)w).executor.shutdownNow();\n\n        assertEquals(Disposables.disposed(), w.schedule(r));\n\n        assertEquals(Disposables.disposed(), w.schedule(r, 1, TimeUnit.SECONDS));\n\n        assertEquals(Disposables.disposed(), w.schedulePeriodically(r, 1, 1, TimeUnit.SECONDS));\n\n        assertEquals(0, calls[0]);\n\n        w.dispose();\n\n        assertTrue(w.isDisposed());\n    }\n","realPath":"src/test/java/io/reactivex/rxjava3/internal/schedulers/SingleSchedulerTest.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":33,"status":"M"},{"authorDate":"2019-12-20 02:39:40","commitOrder":2,"curCode":"    public void shutdownRejects() {\n        final int[] calls = { 0 };\n\n        Runnable r = new Runnable() {\n            @Override\n            public void run() {\n                calls[0]++;\n            }\n        };\n\n        IoScheduler s = new IoScheduler();\n        s.shutdown();\n        s.shutdown();\n\n        s.scheduleDirect(r);\n\n        s.scheduleDirect(r, 1, TimeUnit.SECONDS);\n\n        s.schedulePeriodicallyDirect(r, 1, 1, TimeUnit.SECONDS);\n\n        Worker w = s.createWorker();\n        w.dispose();\n\n        assertEquals(Disposable.disposed(), w.schedule(r));\n\n        assertEquals(Disposable.disposed(), w.schedule(r, 1, TimeUnit.SECONDS));\n\n        assertEquals(Disposable.disposed(), w.schedulePeriodically(r, 1, 1, TimeUnit.SECONDS));\n\n        assertEquals(0, calls[0]);\n    }\n","date":"2019-12-20 02:39:40","endLine":124,"groupId":"108425","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"shutdownRejects","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/87/82142035e8b7b488a3b2d36592adbd4209b57b.src","preCode":"    public void shutdownRejects() {\n        final int[] calls = { 0 };\n\n        Runnable r = new Runnable() {\n            @Override\n            public void run() {\n                calls[0]++;\n            }\n        };\n\n        IoScheduler s = new IoScheduler();\n        s.shutdown();\n        s.shutdown();\n\n        s.scheduleDirect(r);\n\n        s.scheduleDirect(r, 1, TimeUnit.SECONDS);\n\n        s.schedulePeriodicallyDirect(r, 1, 1, TimeUnit.SECONDS);\n\n        Worker w = s.createWorker();\n        w.dispose();\n\n        assertEquals(Disposables.disposed(), w.schedule(r));\n\n        assertEquals(Disposables.disposed(), w.schedule(r, 1, TimeUnit.SECONDS));\n\n        assertEquals(Disposables.disposed(), w.schedulePeriodically(r, 1, 1, TimeUnit.SECONDS));\n\n        assertEquals(0, calls[0]);\n    }\n","realPath":"src/test/java/io/reactivex/rxjava3/schedulers/CachedThreadSchedulerTest.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":94,"status":"M"}],"commitId":"166c529eb165b473c9bff11e8fedbde6c471b005","commitMessage":"@@@Migrate Disposables static factories to Disposable interface (#6781)\n\n","date":"2019-12-20 02:39:40","modifiedFileCount":"202","status":"M","submitter":"Jake Wharton"}]
