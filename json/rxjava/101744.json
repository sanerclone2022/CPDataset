[{"authorTime":"2019-08-16 20:51:17","codes":[{"authorDate":"2019-08-16 20:51:17","commitOrder":1,"curCode":"    public void onNext(T t) {\n        ObjectHelper.requireNonNull(t, \"onNext called with null. Null values are generally not allowed in 2.x operators and sources.\");\n\n        if (terminalEvent.get() != null) {\n            return;\n        }\n        Object o = NotificationLite.next(t);\n        setCurrent(o);\n        for (BehaviorDisposable<T> bs : subscribers.get()) {\n            bs.emitNext(o, index);\n        }\n    }\n","date":"2019-08-16 20:51:17","endLine":263,"groupId":"3722","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"onNext","params":"(Tt)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/f8/f4bb3848400610542c03a57acbb4591f03decb.src","preCode":"    public void onNext(T t) {\n        ObjectHelper.requireNonNull(t, \"onNext called with null. Null values are generally not allowed in 2.x operators and sources.\");\n\n        if (terminalEvent.get() != null) {\n            return;\n        }\n        Object o = NotificationLite.next(t);\n        setCurrent(o);\n        for (BehaviorDisposable<T> bs : subscribers.get()) {\n            bs.emitNext(o, index);\n        }\n    }\n","realPath":"src/main/java/io/reactivex/rxjava3/subjects/BehaviorSubject.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":252,"status":"B"},{"authorDate":"2019-08-16 20:51:17","commitOrder":1,"curCode":"    public void onNext(T t) {\n        ObjectHelper.requireNonNull(t, \"onNext called with null. Null values are generally not allowed in 2.x operators and sources.\");\n\n        if (terminalEvent.get() != null) {\n            return;\n        }\n        Object o = NotificationLite.next(t);\n        setCurrent(o);\n        for (BehaviorSubscription<T> bs : subscribers.get()) {\n            bs.emitNext(o, index);\n        }\n    }\n","date":"2019-08-16 20:51:17","endLine":281,"groupId":"3722","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"onNext","params":"(Tt)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/cf/212214b702aa5da3507e14ee2c8749a33714a4.src","preCode":"    public void onNext(T t) {\n        ObjectHelper.requireNonNull(t, \"onNext called with null. Null values are generally not allowed in 2.x operators and sources.\");\n\n        if (terminalEvent.get() != null) {\n            return;\n        }\n        Object o = NotificationLite.next(t);\n        setCurrent(o);\n        for (BehaviorSubscription<T> bs : subscribers.get()) {\n            bs.emitNext(o, index);\n        }\n    }\n","realPath":"src/main/java/io/reactivex/rxjava3/processors/BehaviorProcessor.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":270,"status":"B"}],"commitId":"a1693ecc9215027a7a3eae75272979ebb4d79a27","commitMessage":"@@@3.x: Refactor to io.reactivex.rxjava3.** (#6621)\n\n* 3.x: Refactor to io.reactivex.rxjava3.**\n\n* fix javadoc cleanup gradle\n\n* javadoc gradle again\n\n* Fix package location in text\n","date":"2019-08-16 20:51:17","modifiedFileCount":"0","status":"B","submitter":"David Karnok"},{"authorTime":"2019-08-28 22:07:44","codes":[{"authorDate":"2019-08-28 22:07:44","commitOrder":2,"curCode":"    public void onNext(T t) {\n        ExceptionHelper.nullCheck(t, \"onNext called with a null value.\");\n\n        if (terminalEvent.get() != null) {\n            return;\n        }\n        Object o = NotificationLite.next(t);\n        setCurrent(o);\n        for (BehaviorDisposable<T> bs : subscribers.get()) {\n            bs.emitNext(o, index);\n        }\n    }\n","date":"2019-08-28 22:07:44","endLine":263,"groupId":"3722","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"onNext","params":"(Tt)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/45/ddb72a5114a7df48e3c76fc81724c4202a80b9.src","preCode":"    public void onNext(T t) {\n        ObjectHelper.requireNonNull(t, \"onNext called with null. Null values are generally not allowed in 2.x operators and sources.\");\n\n        if (terminalEvent.get() != null) {\n            return;\n        }\n        Object o = NotificationLite.next(t);\n        setCurrent(o);\n        for (BehaviorDisposable<T> bs : subscribers.get()) {\n            bs.emitNext(o, index);\n        }\n    }\n","realPath":"src/main/java/io/reactivex/rxjava3/subjects/BehaviorSubject.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":252,"status":"M"},{"authorDate":"2019-08-28 22:07:44","commitOrder":2,"curCode":"    public void onNext(T t) {\n        ExceptionHelper.nullCheck(t, \"onNext called with a null value.\");\n\n        if (terminalEvent.get() != null) {\n            return;\n        }\n        Object o = NotificationLite.next(t);\n        setCurrent(o);\n        for (BehaviorSubscription<T> bs : subscribers.get()) {\n            bs.emitNext(o, index);\n        }\n    }\n","date":"2019-08-28 22:07:44","endLine":281,"groupId":"3722","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"onNext","params":"(Tt)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/5a/c1d1d6078b15446bea7fcc53b15efc09f71ae2.src","preCode":"    public void onNext(T t) {\n        ObjectHelper.requireNonNull(t, \"onNext called with null. Null values are generally not allowed in 2.x operators and sources.\");\n\n        if (terminalEvent.get() != null) {\n            return;\n        }\n        Object o = NotificationLite.next(t);\n        setCurrent(o);\n        for (BehaviorSubscription<T> bs : subscribers.get()) {\n            bs.emitNext(o, index);\n        }\n    }\n","realPath":"src/main/java/io/reactivex/rxjava3/processors/BehaviorProcessor.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":270,"status":"M"}],"commitId":"a07c45eeeb68b1cfc24f913c75edbc2820aadb76","commitMessage":"@@@3.x: Cleanup addThrowable.  \"2.x\" and null-value error messages (#6639)\n\n","date":"2019-08-28 22:07:44","modifiedFileCount":"106","status":"M","submitter":"David Karnok"},{"authorTime":"2019-12-27 06:43:56","codes":[{"authorDate":"2019-08-28 22:07:44","commitOrder":3,"curCode":"    public void onNext(T t) {\n        ExceptionHelper.nullCheck(t, \"onNext called with a null value.\");\n\n        if (terminalEvent.get() != null) {\n            return;\n        }\n        Object o = NotificationLite.next(t);\n        setCurrent(o);\n        for (BehaviorDisposable<T> bs : subscribers.get()) {\n            bs.emitNext(o, index);\n        }\n    }\n","date":"2019-08-28 22:07:44","endLine":263,"groupId":"3722","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"onNext","params":"(Tt)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/45/ddb72a5114a7df48e3c76fc81724c4202a80b9.src","preCode":"    public void onNext(T t) {\n        ExceptionHelper.nullCheck(t, \"onNext called with a null value.\");\n\n        if (terminalEvent.get() != null) {\n            return;\n        }\n        Object o = NotificationLite.next(t);\n        setCurrent(o);\n        for (BehaviorDisposable<T> bs : subscribers.get()) {\n            bs.emitNext(o, index);\n        }\n    }\n","realPath":"src/main/java/io/reactivex/rxjava3/subjects/BehaviorSubject.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":252,"status":"N"},{"authorDate":"2019-12-27 06:43:56","commitOrder":3,"curCode":"    public void onNext(@NonNull T t) {\n        ExceptionHelper.nullCheck(t, \"onNext called with a null value.\");\n\n        if (terminalEvent.get() != null) {\n            return;\n        }\n        Object o = NotificationLite.next(t);\n        setCurrent(o);\n        for (BehaviorSubscription<T> bs : subscribers.get()) {\n            bs.emitNext(o, index);\n        }\n    }\n","date":"2019-12-27 06:43:56","endLine":281,"groupId":"3722","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"onNext","params":"(@NonNullTt)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/ea/93669ca3c96f6670531a809491cdb5cfb99c06.src","preCode":"    public void onNext(T t) {\n        ExceptionHelper.nullCheck(t, \"onNext called with a null value.\");\n\n        if (terminalEvent.get() != null) {\n            return;\n        }\n        Object o = NotificationLite.next(t);\n        setCurrent(o);\n        for (BehaviorSubscription<T> bs : subscribers.get()) {\n            bs.emitNext(o, index);\n        }\n    }\n","realPath":"src/main/java/io/reactivex/rxjava3/processors/BehaviorProcessor.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":270,"status":"M"}],"commitId":"38bcd5e292c9e44c542ff4bbcf8e23736b4a7748","commitMessage":"@@@3.x: XProcessor.offer to throw NPE immediately (#6799)\n\n","date":"2019-12-27 06:43:56","modifiedFileCount":"6","status":"M","submitter":"David Karnok"},{"authorTime":"2019-12-27 06:43:56","codes":[{"authorDate":"2020-02-12 23:26:52","commitOrder":4,"curCode":"    public void onNext(T t) {\n        ExceptionHelper.nullCheck(t, \"onNext called with a null value.\");\n\n        if (terminalEvent.get() != null) {\n            return;\n        }\n        Object o = NotificationLite.next(t);\n        setCurrent(o);\n        for (BehaviorDisposable<T> bs : observers.get()) {\n            bs.emitNext(o, index);\n        }\n    }\n","date":"2020-02-12 23:26:52","endLine":255,"groupId":"101744","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"onNext","params":"(Tt)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/61/cf92cba381375e3fecd11fd69291171f7abf0f.src","preCode":"    public void onNext(T t) {\n        ExceptionHelper.nullCheck(t, \"onNext called with a null value.\");\n\n        if (terminalEvent.get() != null) {\n            return;\n        }\n        Object o = NotificationLite.next(t);\n        setCurrent(o);\n        for (BehaviorDisposable<T> bs : subscribers.get()) {\n            bs.emitNext(o, index);\n        }\n    }\n","realPath":"src/main/java/io/reactivex/rxjava3/subjects/BehaviorSubject.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":244,"status":"M"},{"authorDate":"2019-12-27 06:43:56","commitOrder":4,"curCode":"    public void onNext(@NonNull T t) {\n        ExceptionHelper.nullCheck(t, \"onNext called with a null value.\");\n\n        if (terminalEvent.get() != null) {\n            return;\n        }\n        Object o = NotificationLite.next(t);\n        setCurrent(o);\n        for (BehaviorSubscription<T> bs : subscribers.get()) {\n            bs.emitNext(o, index);\n        }\n    }\n","date":"2019-12-27 06:43:56","endLine":281,"groupId":"101744","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"onNext","params":"(@NonNullTt)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/ea/93669ca3c96f6670531a809491cdb5cfb99c06.src","preCode":"    public void onNext(@NonNull T t) {\n        ExceptionHelper.nullCheck(t, \"onNext called with a null value.\");\n\n        if (terminalEvent.get() != null) {\n            return;\n        }\n        Object o = NotificationLite.next(t);\n        setCurrent(o);\n        for (BehaviorSubscription<T> bs : subscribers.get()) {\n            bs.emitNext(o, index);\n        }\n    }\n","realPath":"src/main/java/io/reactivex/rxjava3/processors/BehaviorProcessor.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":270,"status":"N"}],"commitId":"b3ad0752de398f4536bb88a7b1c77b0b9fbecb87","commitMessage":"@@@3.x: Add missing coverage.  fix unused/inconsistent ops (#6901)\n\n* 3.x: Add missing coverage.  fix unused/inconsistent ops\n\n* More coverage improvements and cleanup\n\n* Some more coverage\n\n* Observable coverage and cleanup\n\n* Improve Flowable internals and coverage\n\n* More Flowable operator coverage and fixes\n\n* Last set of coverage & cleanup for Flowable operators\n\n* Fix wrong use of j.u.Observable\n","date":"2020-02-12 23:26:52","modifiedFileCount":"219","status":"M","submitter":"David Karnok"}]
