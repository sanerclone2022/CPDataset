[{"authorTime":"2019-08-16 20:51:17","codes":[{"authorDate":"2019-08-16 20:51:17","commitOrder":1,"curCode":"    public void exactWindowSize() {\n        Observable<Observable<Integer>> source = Observable.range(1, 10)\n                .window(1, TimeUnit.MINUTES, scheduler, 3);\n\n        final List<Integer> list = new ArrayList<Integer>();\n        final List<List<Integer>> lists = new ArrayList<List<Integer>>();\n\n        source.subscribe(observeWindow(list, lists));\n\n        assertEquals(4, lists.size());\n        assertEquals(3, lists.get(0).size());\n        assertEquals(Arrays.asList(1, 2, 3), lists.get(0));\n        assertEquals(3, lists.get(1).size());\n        assertEquals(Arrays.asList(4, 5, 6), lists.get(1));\n        assertEquals(3, lists.get(2).size());\n        assertEquals(Arrays.asList(7, 8, 9), lists.get(2));\n        assertEquals(1, lists.get(3).size());\n        assertEquals(Arrays.asList(10), lists.get(3));\n    }\n","date":"2019-08-16 20:51:17","endLine":181,"groupId":"4421","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"exactWindowSize","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/ca/9270448b5a531ed28585a5f1a40f6e74102e80.src","preCode":"    public void exactWindowSize() {\n        Observable<Observable<Integer>> source = Observable.range(1, 10)\n                .window(1, TimeUnit.MINUTES, scheduler, 3);\n\n        final List<Integer> list = new ArrayList<Integer>();\n        final List<List<Integer>> lists = new ArrayList<List<Integer>>();\n\n        source.subscribe(observeWindow(list, lists));\n\n        assertEquals(4, lists.size());\n        assertEquals(3, lists.get(0).size());\n        assertEquals(Arrays.asList(1, 2, 3), lists.get(0));\n        assertEquals(3, lists.get(1).size());\n        assertEquals(Arrays.asList(4, 5, 6), lists.get(1));\n        assertEquals(3, lists.get(2).size());\n        assertEquals(Arrays.asList(7, 8, 9), lists.get(2));\n        assertEquals(1, lists.get(3).size());\n        assertEquals(Arrays.asList(10), lists.get(3));\n    }\n","realPath":"src/test/java/io/reactivex/rxjava3/internal/operators/observable/ObservableWindowWithTimeTest.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":163,"status":"B"},{"authorDate":"2019-08-16 20:51:17","commitOrder":1,"curCode":"    public void exactWindowSize() {\n        Flowable<Flowable<Integer>> source = Flowable.range(1, 10)\n                .window(1, TimeUnit.MINUTES, scheduler, 3);\n\n        final List<Integer> list = new ArrayList<Integer>();\n        final List<List<Integer>> lists = new ArrayList<List<Integer>>();\n\n        source.subscribe(observeWindow(list, lists));\n\n        assertEquals(4, lists.size());\n        assertEquals(3, lists.get(0).size());\n        assertEquals(Arrays.asList(1, 2, 3), lists.get(0));\n        assertEquals(3, lists.get(1).size());\n        assertEquals(Arrays.asList(4, 5, 6), lists.get(1));\n        assertEquals(3, lists.get(2).size());\n        assertEquals(Arrays.asList(7, 8, 9), lists.get(2));\n        assertEquals(1, lists.get(3).size());\n        assertEquals(Arrays.asList(10), lists.get(3));\n    }\n","date":"2019-08-16 20:51:17","endLine":181,"groupId":"4421","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"exactWindowSize","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/c3/57800827f1ad81149d84cdad67f5bc75040ffb.src","preCode":"    public void exactWindowSize() {\n        Flowable<Flowable<Integer>> source = Flowable.range(1, 10)\n                .window(1, TimeUnit.MINUTES, scheduler, 3);\n\n        final List<Integer> list = new ArrayList<Integer>();\n        final List<List<Integer>> lists = new ArrayList<List<Integer>>();\n\n        source.subscribe(observeWindow(list, lists));\n\n        assertEquals(4, lists.size());\n        assertEquals(3, lists.get(0).size());\n        assertEquals(Arrays.asList(1, 2, 3), lists.get(0));\n        assertEquals(3, lists.get(1).size());\n        assertEquals(Arrays.asList(4, 5, 6), lists.get(1));\n        assertEquals(3, lists.get(2).size());\n        assertEquals(Arrays.asList(7, 8, 9), lists.get(2));\n        assertEquals(1, lists.get(3).size());\n        assertEquals(Arrays.asList(10), lists.get(3));\n    }\n","realPath":"src/test/java/io/reactivex/rxjava3/internal/operators/flowable/FlowableWindowWithTimeTest.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":163,"status":"B"}],"commitId":"a1693ecc9215027a7a3eae75272979ebb4d79a27","commitMessage":"@@@3.x: Refactor to io.reactivex.rxjava3.** (#6621)\n\n* 3.x: Refactor to io.reactivex.rxjava3.**\n\n* fix javadoc cleanup gradle\n\n* javadoc gradle again\n\n* Fix package location in text\n","date":"2019-08-16 20:51:17","modifiedFileCount":"0","status":"B","submitter":"David Karnok"},{"authorTime":"2019-12-22 18:39:23","codes":[{"authorDate":"2019-08-16 20:51:17","commitOrder":2,"curCode":"    public void exactWindowSize() {\n        Observable<Observable<Integer>> source = Observable.range(1, 10)\n                .window(1, TimeUnit.MINUTES, scheduler, 3);\n\n        final List<Integer> list = new ArrayList<Integer>();\n        final List<List<Integer>> lists = new ArrayList<List<Integer>>();\n\n        source.subscribe(observeWindow(list, lists));\n\n        assertEquals(4, lists.size());\n        assertEquals(3, lists.get(0).size());\n        assertEquals(Arrays.asList(1, 2, 3), lists.get(0));\n        assertEquals(3, lists.get(1).size());\n        assertEquals(Arrays.asList(4, 5, 6), lists.get(1));\n        assertEquals(3, lists.get(2).size());\n        assertEquals(Arrays.asList(7, 8, 9), lists.get(2));\n        assertEquals(1, lists.get(3).size());\n        assertEquals(Arrays.asList(10), lists.get(3));\n    }\n","date":"2019-08-16 20:51:17","endLine":181,"groupId":"4421","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"exactWindowSize","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/ca/9270448b5a531ed28585a5f1a40f6e74102e80.src","preCode":"    public void exactWindowSize() {\n        Observable<Observable<Integer>> source = Observable.range(1, 10)\n                .window(1, TimeUnit.MINUTES, scheduler, 3);\n\n        final List<Integer> list = new ArrayList<Integer>();\n        final List<List<Integer>> lists = new ArrayList<List<Integer>>();\n\n        source.subscribe(observeWindow(list, lists));\n\n        assertEquals(4, lists.size());\n        assertEquals(3, lists.get(0).size());\n        assertEquals(Arrays.asList(1, 2, 3), lists.get(0));\n        assertEquals(3, lists.get(1).size());\n        assertEquals(Arrays.asList(4, 5, 6), lists.get(1));\n        assertEquals(3, lists.get(2).size());\n        assertEquals(Arrays.asList(7, 8, 9), lists.get(2));\n        assertEquals(1, lists.get(3).size());\n        assertEquals(Arrays.asList(10), lists.get(3));\n    }\n","realPath":"src/test/java/io/reactivex/rxjava3/internal/operators/observable/ObservableWindowWithTimeTest.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":163,"status":"N"},{"authorDate":"2019-12-22 18:39:23","commitOrder":2,"curCode":"    public void exactWindowSize() {\n        Flowable<Flowable<Integer>> source = Flowable.range(1, 10)\n                .window(1, TimeUnit.MINUTES, scheduler, 3);\n\n        final List<Integer> list = new ArrayList<>();\n        final List<List<Integer>> lists = new ArrayList<>();\n\n        source.subscribe(observeWindow(list, lists));\n\n        assertEquals(4, lists.size());\n        assertEquals(3, lists.get(0).size());\n        assertEquals(Arrays.asList(1, 2, 3), lists.get(0));\n        assertEquals(3, lists.get(1).size());\n        assertEquals(Arrays.asList(4, 5, 6), lists.get(1));\n        assertEquals(3, lists.get(2).size());\n        assertEquals(Arrays.asList(7, 8, 9), lists.get(2));\n        assertEquals(1, lists.get(3).size());\n        assertEquals(Arrays.asList(10), lists.get(3));\n    }\n","date":"2019-12-22 18:39:23","endLine":183,"groupId":"4421","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"exactWindowSize","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/86/da1bb09ce8c03bc9e971248d8c89b3dccf5d39.src","preCode":"    public void exactWindowSize() {\n        Flowable<Flowable<Integer>> source = Flowable.range(1, 10)\n                .window(1, TimeUnit.MINUTES, scheduler, 3);\n\n        final List<Integer> list = new ArrayList<Integer>();\n        final List<List<Integer>> lists = new ArrayList<List<Integer>>();\n\n        source.subscribe(observeWindow(list, lists));\n\n        assertEquals(4, lists.size());\n        assertEquals(3, lists.get(0).size());\n        assertEquals(Arrays.asList(1, 2, 3), lists.get(0));\n        assertEquals(3, lists.get(1).size());\n        assertEquals(Arrays.asList(4, 5, 6), lists.get(1));\n        assertEquals(3, lists.get(2).size());\n        assertEquals(Arrays.asList(7, 8, 9), lists.get(2));\n        assertEquals(1, lists.get(3).size());\n        assertEquals(Arrays.asList(10), lists.get(3));\n    }\n","realPath":"src/test/java/io/reactivex/rxjava3/internal/operators/flowable/FlowableWindowWithTimeTest.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":165,"status":"M"}],"commitId":"e162d664d86639b97c214054aca346fc2ba37e33","commitMessage":"@@@diamond operators in unit tests.  flowable package (#6787)\n\n","date":"2019-12-22 18:39:23","modifiedFileCount":"111","status":"M","submitter":"Dmitry Volkov"},{"authorTime":"2019-12-22 18:39:23","codes":[{"authorDate":"2019-12-22 18:59:44","commitOrder":3,"curCode":"    public void exactWindowSize() {\n        Observable<Observable<Integer>> source = Observable.range(1, 10)\n                .window(1, TimeUnit.MINUTES, scheduler, 3);\n\n        final List<Integer> list = new ArrayList<>();\n        final List<List<Integer>> lists = new ArrayList<>();\n\n        source.subscribe(observeWindow(list, lists));\n\n        assertEquals(4, lists.size());\n        assertEquals(3, lists.get(0).size());\n        assertEquals(Arrays.asList(1, 2, 3), lists.get(0));\n        assertEquals(3, lists.get(1).size());\n        assertEquals(Arrays.asList(4, 5, 6), lists.get(1));\n        assertEquals(3, lists.get(2).size());\n        assertEquals(Arrays.asList(7, 8, 9), lists.get(2));\n        assertEquals(1, lists.get(3).size());\n        assertEquals(Arrays.asList(10), lists.get(3));\n    }\n","date":"2019-12-22 18:59:44","endLine":183,"groupId":"105171","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"exactWindowSize","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/13/f662c88ee54a3d651ec221ec13718849606988.src","preCode":"    public void exactWindowSize() {\n        Observable<Observable<Integer>> source = Observable.range(1, 10)\n                .window(1, TimeUnit.MINUTES, scheduler, 3);\n\n        final List<Integer> list = new ArrayList<Integer>();\n        final List<List<Integer>> lists = new ArrayList<List<Integer>>();\n\n        source.subscribe(observeWindow(list, lists));\n\n        assertEquals(4, lists.size());\n        assertEquals(3, lists.get(0).size());\n        assertEquals(Arrays.asList(1, 2, 3), lists.get(0));\n        assertEquals(3, lists.get(1).size());\n        assertEquals(Arrays.asList(4, 5, 6), lists.get(1));\n        assertEquals(3, lists.get(2).size());\n        assertEquals(Arrays.asList(7, 8, 9), lists.get(2));\n        assertEquals(1, lists.get(3).size());\n        assertEquals(Arrays.asList(10), lists.get(3));\n    }\n","realPath":"src/test/java/io/reactivex/rxjava3/internal/operators/observable/ObservableWindowWithTimeTest.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":165,"status":"M"},{"authorDate":"2019-12-22 18:39:23","commitOrder":3,"curCode":"    public void exactWindowSize() {\n        Flowable<Flowable<Integer>> source = Flowable.range(1, 10)\n                .window(1, TimeUnit.MINUTES, scheduler, 3);\n\n        final List<Integer> list = new ArrayList<>();\n        final List<List<Integer>> lists = new ArrayList<>();\n\n        source.subscribe(observeWindow(list, lists));\n\n        assertEquals(4, lists.size());\n        assertEquals(3, lists.get(0).size());\n        assertEquals(Arrays.asList(1, 2, 3), lists.get(0));\n        assertEquals(3, lists.get(1).size());\n        assertEquals(Arrays.asList(4, 5, 6), lists.get(1));\n        assertEquals(3, lists.get(2).size());\n        assertEquals(Arrays.asList(7, 8, 9), lists.get(2));\n        assertEquals(1, lists.get(3).size());\n        assertEquals(Arrays.asList(10), lists.get(3));\n    }\n","date":"2019-12-22 18:39:23","endLine":183,"groupId":"105171","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"exactWindowSize","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/86/da1bb09ce8c03bc9e971248d8c89b3dccf5d39.src","preCode":"    public void exactWindowSize() {\n        Flowable<Flowable<Integer>> source = Flowable.range(1, 10)\n                .window(1, TimeUnit.MINUTES, scheduler, 3);\n\n        final List<Integer> list = new ArrayList<>();\n        final List<List<Integer>> lists = new ArrayList<>();\n\n        source.subscribe(observeWindow(list, lists));\n\n        assertEquals(4, lists.size());\n        assertEquals(3, lists.get(0).size());\n        assertEquals(Arrays.asList(1, 2, 3), lists.get(0));\n        assertEquals(3, lists.get(1).size());\n        assertEquals(Arrays.asList(4, 5, 6), lists.get(1));\n        assertEquals(3, lists.get(2).size());\n        assertEquals(Arrays.asList(7, 8, 9), lists.get(2));\n        assertEquals(1, lists.get(3).size());\n        assertEquals(Arrays.asList(10), lists.get(3));\n    }\n","realPath":"src/test/java/io/reactivex/rxjava3/internal/operators/flowable/FlowableWindowWithTimeTest.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":165,"status":"N"}],"commitId":"d6d698213b6c4091f4d5a0fb47f0922d0d0618e3","commitMessage":"@@@diamond operators in unit tests.  observable package (#6786)\n\n","date":"2019-12-22 18:59:44","modifiedFileCount":"95","status":"M","submitter":"Dmitry Volkov"}]
