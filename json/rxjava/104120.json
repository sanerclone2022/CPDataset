[{"authorTime":"2019-08-16 20:51:17","codes":[{"authorDate":"2019-08-16 20:51:17","commitOrder":1,"curCode":"    public void concatMapJustJust() {\n        TestObserver<Integer> to = TestObserver.create();\n\n        Observable.just(Observable.just(1)).concatMap((Function)Functions.identity(), 2, ImmediateThinScheduler.INSTANCE).subscribe(to);\n\n        to.assertValue(1);\n        to.assertNoErrors();\n        to.assertComplete();\n    }\n","date":"2019-08-16 20:51:17","endLine":420,"groupId":"7645","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"concatMapJustJust","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/1b/7bb0d8b82be57d4fabd68bfde810dd4ba1c083.src","preCode":"    public void concatMapJustJust() {\n        TestObserver<Integer> to = TestObserver.create();\n\n        Observable.just(Observable.just(1)).concatMap((Function)Functions.identity(), 2, ImmediateThinScheduler.INSTANCE).subscribe(to);\n\n        to.assertValue(1);\n        to.assertNoErrors();\n        to.assertComplete();\n    }\n","realPath":"src/test/java/io/reactivex/rxjava3/internal/operators/observable/ObservableConcatMapSchedulerTest.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":412,"status":"B"},{"authorDate":"2019-08-16 20:51:17","commitOrder":1,"curCode":"    public void concatMapDelayErrorJustJust() {\n        TestObserver<Integer> to = TestObserver.create();\n\n        Observable.just(Observable.just(1)).concatMapDelayError((Function)Functions.identity(), 2, true, ImmediateThinScheduler.INSTANCE).subscribe(to);\n\n        to.assertValue(1);\n        to.assertNoErrors();\n        to.assertComplete();\n    }\n","date":"2019-08-16 20:51:17","endLine":444,"groupId":"7645","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"concatMapDelayErrorJustJust","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/1b/7bb0d8b82be57d4fabd68bfde810dd4ba1c083.src","preCode":"    public void concatMapDelayErrorJustJust() {\n        TestObserver<Integer> to = TestObserver.create();\n\n        Observable.just(Observable.just(1)).concatMapDelayError((Function)Functions.identity(), 2, true, ImmediateThinScheduler.INSTANCE).subscribe(to);\n\n        to.assertValue(1);\n        to.assertNoErrors();\n        to.assertComplete();\n    }\n","realPath":"src/test/java/io/reactivex/rxjava3/internal/operators/observable/ObservableConcatMapSchedulerTest.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":436,"status":"B"}],"commitId":"a1693ecc9215027a7a3eae75272979ebb4d79a27","commitMessage":"@@@3.x: Refactor to io.reactivex.rxjava3.** (#6621)\n\n* 3.x: Refactor to io.reactivex.rxjava3.**\n\n* fix javadoc cleanup gradle\n\n* javadoc gradle again\n\n* Fix package location in text\n","date":"2019-08-16 20:51:17","modifiedFileCount":"0","status":"B","submitter":"David Karnok"},{"authorTime":"2019-08-28 19:19:49","codes":[{"authorDate":"2019-08-16 20:51:17","commitOrder":2,"curCode":"    public void concatMapJustJust() {\n        TestObserver<Integer> to = TestObserver.create();\n\n        Observable.just(Observable.just(1)).concatMap((Function)Functions.identity(), 2, ImmediateThinScheduler.INSTANCE).subscribe(to);\n\n        to.assertValue(1);\n        to.assertNoErrors();\n        to.assertComplete();\n    }\n","date":"2019-08-16 20:51:17","endLine":420,"groupId":"104120","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"concatMapJustJust","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/1b/7bb0d8b82be57d4fabd68bfde810dd4ba1c083.src","preCode":"    public void concatMapJustJust() {\n        TestObserver<Integer> to = TestObserver.create();\n\n        Observable.just(Observable.just(1)).concatMap((Function)Functions.identity(), 2, ImmediateThinScheduler.INSTANCE).subscribe(to);\n\n        to.assertValue(1);\n        to.assertNoErrors();\n        to.assertComplete();\n    }\n","realPath":"src/test/java/io/reactivex/rxjava3/internal/operators/observable/ObservableConcatMapSchedulerTest.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":412,"status":"N"},{"authorDate":"2019-08-28 19:19:49","commitOrder":2,"curCode":"    public void concatMapDelayErrorJustJust() {\n        TestObserver<Integer> to = TestObserver.create();\n\n        Observable.just(Observable.just(1)).concatMapDelayError((Function)Functions.identity(), true, 2, ImmediateThinScheduler.INSTANCE).subscribe(to);\n\n        to.assertValue(1);\n        to.assertNoErrors();\n        to.assertComplete();\n    }\n","date":"2019-08-28 19:19:49","endLine":444,"groupId":"104120","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"concatMapDelayErrorJustJust","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/ac/e3f55493b63df25b2d3def13d898a764a90b16.src","preCode":"    public void concatMapDelayErrorJustJust() {\n        TestObserver<Integer> to = TestObserver.create();\n\n        Observable.just(Observable.just(1)).concatMapDelayError((Function)Functions.identity(), 2, true, ImmediateThinScheduler.INSTANCE).subscribe(to);\n\n        to.assertValue(1);\n        to.assertNoErrors();\n        to.assertComplete();\n    }\n","realPath":"src/test/java/io/reactivex/rxjava3/internal/operators/observable/ObservableConcatMapSchedulerTest.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":436,"status":"M"}],"commitId":"f1441b00f3cc174ab5ef47e3339156d8a7c2a1f5","commitMessage":"@@@3.x: Rename zipIterable.  remove zip(O(O)).  adjust concatMapX arg order (#6638)\n\n","date":"2019-08-28 19:19:49","modifiedFileCount":"12","status":"M","submitter":"David Karnok"}]
