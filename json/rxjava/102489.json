[{"authorTime":"2019-08-16 20:51:17","codes":[{"authorDate":"2019-08-16 20:51:17","commitOrder":1,"curCode":"        WindowExactBoundedObserver(\n                Observer<? super Observable<T>> actual,\n                long timespan, TimeUnit unit, Scheduler scheduler,\n                int bufferSize, long maxSize, boolean restartTimerOnMaxSize) {\n            super(actual, new MpscLinkedQueue<Object>());\n            this.timespan = timespan;\n            this.unit = unit;\n            this.scheduler = scheduler;\n            this.bufferSize = bufferSize;\n            this.maxSize = maxSize;\n            this.restartTimerOnMaxSize = restartTimerOnMaxSize;\n            if (restartTimerOnMaxSize) {\n                worker = scheduler.createWorker();\n            } else {\n                worker = null;\n            }\n        }\n","date":"2019-08-16 20:51:17","endLine":287,"groupId":"8055","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"WindowExactBoundedObserver","params":"(Observer<?superObservable<T>>actual@longtimespan@TimeUnitunit@Schedulerscheduler@intbufferSize@longmaxSize@booleanrestartTimerOnMaxSize)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/58/f94304edcd73f1505c39b28c2816e895392146.src","preCode":"        WindowExactBoundedObserver(\n                Observer<? super Observable<T>> actual,\n                long timespan, TimeUnit unit, Scheduler scheduler,\n                int bufferSize, long maxSize, boolean restartTimerOnMaxSize) {\n            super(actual, new MpscLinkedQueue<Object>());\n            this.timespan = timespan;\n            this.unit = unit;\n            this.scheduler = scheduler;\n            this.bufferSize = bufferSize;\n            this.maxSize = maxSize;\n            this.restartTimerOnMaxSize = restartTimerOnMaxSize;\n            if (restartTimerOnMaxSize) {\n                worker = scheduler.createWorker();\n            } else {\n                worker = null;\n            }\n        }\n","realPath":"src/main/java/io/reactivex/rxjava3/internal/operators/observable/ObservableWindowTimed.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":271,"status":"B"},{"authorDate":"2019-08-16 20:51:17","commitOrder":1,"curCode":"        WindowExactBoundedSubscriber(\n                Subscriber<? super Flowable<T>> actual,\n                long timespan, TimeUnit unit, Scheduler scheduler,\n                int bufferSize, long maxSize, boolean restartTimerOnMaxSize) {\n            super(actual, new MpscLinkedQueue<Object>());\n            this.timespan = timespan;\n            this.unit = unit;\n            this.scheduler = scheduler;\n            this.bufferSize = bufferSize;\n            this.maxSize = maxSize;\n            this.restartTimerOnMaxSize = restartTimerOnMaxSize;\n            if (restartTimerOnMaxSize) {\n                worker = scheduler.createWorker();\n            } else {\n                worker = null;\n            }\n        }\n","date":"2019-08-16 20:51:17","endLine":314,"groupId":"8055","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"WindowExactBoundedSubscriber","params":"(Subscriber<?superFlowable<T>>actual@longtimespan@TimeUnitunit@Schedulerscheduler@intbufferSize@longmaxSize@booleanrestartTimerOnMaxSize)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/d7/c3e66e3daa8d9a9cd8e6777eb511e2a14e736a.src","preCode":"        WindowExactBoundedSubscriber(\n                Subscriber<? super Flowable<T>> actual,\n                long timespan, TimeUnit unit, Scheduler scheduler,\n                int bufferSize, long maxSize, boolean restartTimerOnMaxSize) {\n            super(actual, new MpscLinkedQueue<Object>());\n            this.timespan = timespan;\n            this.unit = unit;\n            this.scheduler = scheduler;\n            this.bufferSize = bufferSize;\n            this.maxSize = maxSize;\n            this.restartTimerOnMaxSize = restartTimerOnMaxSize;\n            if (restartTimerOnMaxSize) {\n                worker = scheduler.createWorker();\n            } else {\n                worker = null;\n            }\n        }\n","realPath":"src/main/java/io/reactivex/rxjava3/internal/operators/flowable/FlowableWindowTimed.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":298,"status":"B"}],"commitId":"a1693ecc9215027a7a3eae75272979ebb4d79a27","commitMessage":"@@@3.x: Refactor to io.reactivex.rxjava3.** (#6621)\n\n* 3.x: Refactor to io.reactivex.rxjava3.**\n\n* fix javadoc cleanup gradle\n\n* javadoc gradle again\n\n* Fix package location in text\n","date":"2019-08-16 20:51:17","modifiedFileCount":"0","status":"B","submitter":"David Karnok"},{"authorTime":"2019-12-16 18:00:42","codes":[{"authorDate":"2019-08-16 20:51:17","commitOrder":2,"curCode":"        WindowExactBoundedObserver(\n                Observer<? super Observable<T>> actual,\n                long timespan, TimeUnit unit, Scheduler scheduler,\n                int bufferSize, long maxSize, boolean restartTimerOnMaxSize) {\n            super(actual, new MpscLinkedQueue<Object>());\n            this.timespan = timespan;\n            this.unit = unit;\n            this.scheduler = scheduler;\n            this.bufferSize = bufferSize;\n            this.maxSize = maxSize;\n            this.restartTimerOnMaxSize = restartTimerOnMaxSize;\n            if (restartTimerOnMaxSize) {\n                worker = scheduler.createWorker();\n            } else {\n                worker = null;\n            }\n        }\n","date":"2019-08-16 20:51:17","endLine":287,"groupId":"8055","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"WindowExactBoundedObserver","params":"(Observer<?superObservable<T>>actual@longtimespan@TimeUnitunit@Schedulerscheduler@intbufferSize@longmaxSize@booleanrestartTimerOnMaxSize)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/58/f94304edcd73f1505c39b28c2816e895392146.src","preCode":"        WindowExactBoundedObserver(\n                Observer<? super Observable<T>> actual,\n                long timespan, TimeUnit unit, Scheduler scheduler,\n                int bufferSize, long maxSize, boolean restartTimerOnMaxSize) {\n            super(actual, new MpscLinkedQueue<Object>());\n            this.timespan = timespan;\n            this.unit = unit;\n            this.scheduler = scheduler;\n            this.bufferSize = bufferSize;\n            this.maxSize = maxSize;\n            this.restartTimerOnMaxSize = restartTimerOnMaxSize;\n            if (restartTimerOnMaxSize) {\n                worker = scheduler.createWorker();\n            } else {\n                worker = null;\n            }\n        }\n","realPath":"src/main/java/io/reactivex/rxjava3/internal/operators/observable/ObservableWindowTimed.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":271,"status":"N"},{"authorDate":"2019-12-16 18:00:42","commitOrder":2,"curCode":"        WindowExactBoundedSubscriber(\n                Subscriber<? super Flowable<T>> actual,\n                long timespan, TimeUnit unit, Scheduler scheduler,\n                int bufferSize, long maxSize, boolean restartTimerOnMaxSize) {\n            super(actual, timespan, unit, bufferSize);\n            this.scheduler = scheduler;\n            this.maxSize = maxSize;\n            this.restartTimerOnMaxSize = restartTimerOnMaxSize;\n            if (restartTimerOnMaxSize) {\n                worker = scheduler.createWorker();\n            } else {\n                worker = null;\n            }\n            this.timer = new SequentialDisposable();\n        }\n","date":"2019-12-16 18:00:42","endLine":364,"groupId":"9793","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"WindowExactBoundedSubscriber","params":"(Subscriber<?superFlowable<T>>actual@longtimespan@TimeUnitunit@Schedulerscheduler@intbufferSize@longmaxSize@booleanrestartTimerOnMaxSize)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/c3/40c0e0dbde51c939187ca5d95c6281c6109fa2.src","preCode":"        WindowExactBoundedSubscriber(\n                Subscriber<? super Flowable<T>> actual,\n                long timespan, TimeUnit unit, Scheduler scheduler,\n                int bufferSize, long maxSize, boolean restartTimerOnMaxSize) {\n            super(actual, new MpscLinkedQueue<Object>());\n            this.timespan = timespan;\n            this.unit = unit;\n            this.scheduler = scheduler;\n            this.bufferSize = bufferSize;\n            this.maxSize = maxSize;\n            this.restartTimerOnMaxSize = restartTimerOnMaxSize;\n            if (restartTimerOnMaxSize) {\n                worker = scheduler.createWorker();\n            } else {\n                worker = null;\n            }\n        }\n","realPath":"src/main/java/io/reactivex/rxjava3/internal/operators/flowable/FlowableWindowTimed.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":350,"status":"M"}],"commitId":"df7f1cdf90413bb6463ba95928c5253868705a52","commitMessage":"@@@3.x: Fix Flowable.window (size.  time) cancellation and abandonment (#6758)\n\n","date":"2019-12-16 18:00:42","modifiedFileCount":"5","status":"M","submitter":"David Karnok"},{"authorTime":"2019-12-16 18:00:42","codes":[{"authorDate":"2019-12-16 20:04:38","commitOrder":3,"curCode":"        WindowExactBoundedObserver(\n                Observer<? super Observable<T>> actual,\n                long timespan, TimeUnit unit, Scheduler scheduler,\n                int bufferSize, long maxSize, boolean restartTimerOnMaxSize) {\n            super(actual, timespan, unit, bufferSize);\n            this.scheduler = scheduler;\n            this.maxSize = maxSize;\n            this.restartTimerOnMaxSize = restartTimerOnMaxSize;\n            if (restartTimerOnMaxSize) {\n                worker = scheduler.createWorker();\n            } else {\n                worker = null;\n            }\n            this.timer = new SequentialDisposable();\n        }\n","date":"2019-12-16 20:04:38","endLine":337,"groupId":"102489","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"WindowExactBoundedObserver","params":"(Observer<?superObservable<T>>actual@longtimespan@TimeUnitunit@Schedulerscheduler@intbufferSize@longmaxSize@booleanrestartTimerOnMaxSize)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/39/13bf2911dae6239a8027573a171d4726741141.src","preCode":"        WindowExactBoundedObserver(\n                Observer<? super Observable<T>> actual,\n                long timespan, TimeUnit unit, Scheduler scheduler,\n                int bufferSize, long maxSize, boolean restartTimerOnMaxSize) {\n            super(actual, new MpscLinkedQueue<Object>());\n            this.timespan = timespan;\n            this.unit = unit;\n            this.scheduler = scheduler;\n            this.bufferSize = bufferSize;\n            this.maxSize = maxSize;\n            this.restartTimerOnMaxSize = restartTimerOnMaxSize;\n            if (restartTimerOnMaxSize) {\n                worker = scheduler.createWorker();\n            } else {\n                worker = null;\n            }\n        }\n","realPath":"src/main/java/io/reactivex/rxjava3/internal/operators/observable/ObservableWindowTimed.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":323,"status":"M"},{"authorDate":"2019-12-16 18:00:42","commitOrder":3,"curCode":"        WindowExactBoundedSubscriber(\n                Subscriber<? super Flowable<T>> actual,\n                long timespan, TimeUnit unit, Scheduler scheduler,\n                int bufferSize, long maxSize, boolean restartTimerOnMaxSize) {\n            super(actual, timespan, unit, bufferSize);\n            this.scheduler = scheduler;\n            this.maxSize = maxSize;\n            this.restartTimerOnMaxSize = restartTimerOnMaxSize;\n            if (restartTimerOnMaxSize) {\n                worker = scheduler.createWorker();\n            } else {\n                worker = null;\n            }\n            this.timer = new SequentialDisposable();\n        }\n","date":"2019-12-16 18:00:42","endLine":364,"groupId":"102489","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"WindowExactBoundedSubscriber","params":"(Subscriber<?superFlowable<T>>actual@longtimespan@TimeUnitunit@Schedulerscheduler@intbufferSize@longmaxSize@booleanrestartTimerOnMaxSize)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/c3/40c0e0dbde51c939187ca5d95c6281c6109fa2.src","preCode":"        WindowExactBoundedSubscriber(\n                Subscriber<? super Flowable<T>> actual,\n                long timespan, TimeUnit unit, Scheduler scheduler,\n                int bufferSize, long maxSize, boolean restartTimerOnMaxSize) {\n            super(actual, timespan, unit, bufferSize);\n            this.scheduler = scheduler;\n            this.maxSize = maxSize;\n            this.restartTimerOnMaxSize = restartTimerOnMaxSize;\n            if (restartTimerOnMaxSize) {\n                worker = scheduler.createWorker();\n            } else {\n                worker = null;\n            }\n            this.timer = new SequentialDisposable();\n        }\n","realPath":"src/main/java/io/reactivex/rxjava3/internal/operators/flowable/FlowableWindowTimed.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":350,"status":"N"}],"commitId":"daeccff5d8a54130589564af68fe187ad2a144e2","commitMessage":"@@@3.x: Fix Observable.window (size & time) cancellation and abandonment (#6761)\n\n","date":"2019-12-16 20:04:38","modifiedFileCount":"6","status":"M","submitter":"David Karnok"}]
