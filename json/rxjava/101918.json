[{"authorTime":"2019-08-16 20:51:17","codes":[{"authorDate":"2019-08-16 20:51:17","commitOrder":1,"curCode":"    protected void subscribeActual(CompletableObserver observer) {\n        Disposable d = Disposables.empty();\n        observer.onSubscribe(d);\n        try {\n            run.run();\n        } catch (Throwable e) {\n            Exceptions.throwIfFatal(e);\n            if (!d.isDisposed()) {\n                observer.onError(e);\n            } else {\n                RxJavaPlugins.onError(e);\n            }\n            return;\n        }\n        if (!d.isDisposed()) {\n            observer.onComplete();\n        }\n    }\n","date":"2019-08-16 20:51:17","endLine":48,"groupId":"8298","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"subscribeActual","params":"(CompletableObserverobserver)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/5c/e4d43547d0d48abd1ef1fb58ebf60c3a0f5fee.src","preCode":"    protected void subscribeActual(CompletableObserver observer) {\n        Disposable d = Disposables.empty();\n        observer.onSubscribe(d);\n        try {\n            run.run();\n        } catch (Throwable e) {\n            Exceptions.throwIfFatal(e);\n            if (!d.isDisposed()) {\n                observer.onError(e);\n            } else {\n                RxJavaPlugins.onError(e);\n            }\n            return;\n        }\n        if (!d.isDisposed()) {\n            observer.onComplete();\n        }\n    }\n","realPath":"src/main/java/io/reactivex/rxjava3/internal/operators/completable/CompletableFromAction.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":31,"status":"B"},{"authorDate":"2019-08-16 20:51:17","commitOrder":1,"curCode":"    protected void subscribeActual(CompletableObserver observer) {\n        Disposable d = Disposables.empty();\n        observer.onSubscribe(d);\n        try {\n            callable.call();\n        } catch (Throwable e) {\n            Exceptions.throwIfFatal(e);\n            if (!d.isDisposed()) {\n                observer.onError(e);\n            } else {\n                RxJavaPlugins.onError(e);\n            }\n            return;\n        }\n        if (!d.isDisposed()) {\n            observer.onComplete();\n        }\n    }\n","date":"2019-08-16 20:51:17","endLine":49,"groupId":"8298","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"subscribeActual","params":"(CompletableObserverobserver)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/ac/2c94c92113acb88e704ee03f6571a3163a8ff9.src","preCode":"    protected void subscribeActual(CompletableObserver observer) {\n        Disposable d = Disposables.empty();\n        observer.onSubscribe(d);\n        try {\n            callable.call();\n        } catch (Throwable e) {\n            Exceptions.throwIfFatal(e);\n            if (!d.isDisposed()) {\n                observer.onError(e);\n            } else {\n                RxJavaPlugins.onError(e);\n            }\n            return;\n        }\n        if (!d.isDisposed()) {\n            observer.onComplete();\n        }\n    }\n","realPath":"src/main/java/io/reactivex/rxjava3/internal/operators/completable/CompletableFromCallable.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":32,"status":"B"}],"commitId":"a1693ecc9215027a7a3eae75272979ebb4d79a27","commitMessage":"@@@3.x: Refactor to io.reactivex.rxjava3.** (#6621)\n\n* 3.x: Refactor to io.reactivex.rxjava3.**\n\n* fix javadoc cleanup gradle\n\n* javadoc gradle again\n\n* Fix package location in text\n","date":"2019-08-16 20:51:17","modifiedFileCount":"0","status":"B","submitter":"David Karnok"},{"authorTime":"2019-12-20 02:39:40","codes":[{"authorDate":"2019-12-20 02:39:40","commitOrder":2,"curCode":"    protected void subscribeActual(CompletableObserver observer) {\n        Disposable d = Disposable.empty();\n        observer.onSubscribe(d);\n        try {\n            run.run();\n        } catch (Throwable e) {\n            Exceptions.throwIfFatal(e);\n            if (!d.isDisposed()) {\n                observer.onError(e);\n            } else {\n                RxJavaPlugins.onError(e);\n            }\n            return;\n        }\n        if (!d.isDisposed()) {\n            observer.onComplete();\n        }\n    }\n","date":"2019-12-20 02:39:40","endLine":48,"groupId":"8298","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"subscribeActual","params":"(CompletableObserverobserver)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/4c/d7fb479cc386fbdcd134bcfd0b0b502ae326d0.src","preCode":"    protected void subscribeActual(CompletableObserver observer) {\n        Disposable d = Disposables.empty();\n        observer.onSubscribe(d);\n        try {\n            run.run();\n        } catch (Throwable e) {\n            Exceptions.throwIfFatal(e);\n            if (!d.isDisposed()) {\n                observer.onError(e);\n            } else {\n                RxJavaPlugins.onError(e);\n            }\n            return;\n        }\n        if (!d.isDisposed()) {\n            observer.onComplete();\n        }\n    }\n","realPath":"src/main/java/io/reactivex/rxjava3/internal/operators/completable/CompletableFromAction.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":31,"status":"M"},{"authorDate":"2019-12-20 02:39:40","commitOrder":2,"curCode":"    protected void subscribeActual(CompletableObserver observer) {\n        Disposable d = Disposable.empty();\n        observer.onSubscribe(d);\n        try {\n            callable.call();\n        } catch (Throwable e) {\n            Exceptions.throwIfFatal(e);\n            if (!d.isDisposed()) {\n                observer.onError(e);\n            } else {\n                RxJavaPlugins.onError(e);\n            }\n            return;\n        }\n        if (!d.isDisposed()) {\n            observer.onComplete();\n        }\n    }\n","date":"2019-12-20 02:39:40","endLine":49,"groupId":"8298","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"subscribeActual","params":"(CompletableObserverobserver)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/57/764950df38c7e7920e688109264127d68692a9.src","preCode":"    protected void subscribeActual(CompletableObserver observer) {\n        Disposable d = Disposables.empty();\n        observer.onSubscribe(d);\n        try {\n            callable.call();\n        } catch (Throwable e) {\n            Exceptions.throwIfFatal(e);\n            if (!d.isDisposed()) {\n                observer.onError(e);\n            } else {\n                RxJavaPlugins.onError(e);\n            }\n            return;\n        }\n        if (!d.isDisposed()) {\n            observer.onComplete();\n        }\n    }\n","realPath":"src/main/java/io/reactivex/rxjava3/internal/operators/completable/CompletableFromCallable.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":32,"status":"M"}],"commitId":"166c529eb165b473c9bff11e8fedbde6c471b005","commitMessage":"@@@Migrate Disposables static factories to Disposable interface (#6781)\n\n","date":"2019-12-20 02:39:40","modifiedFileCount":"202","status":"M","submitter":"Jake Wharton"},{"authorTime":"2019-12-20 02:39:40","codes":[{"authorDate":"2020-01-26 05:07:48","commitOrder":3,"curCode":"    protected void subscribeActual(CompletableObserver observer) {\n        Disposable d = Disposable.empty();\n        observer.onSubscribe(d);\n        if (!d.isDisposed()) {\n            try {\n                run.run();\n            } catch (Throwable e) {\n                Exceptions.throwIfFatal(e);\n                if (!d.isDisposed()) {\n                    observer.onError(e);\n                } else {\n                    RxJavaPlugins.onError(e);\n                }\n                return;\n            }\n            if (!d.isDisposed()) {\n                observer.onComplete();\n            }\n        }\n    }\n","date":"2020-01-26 05:07:48","endLine":50,"groupId":"101918","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"subscribeActual","params":"(CompletableObserverobserver)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/82/bec67c928d74b3f8184ba4e2bc59182f3c4c32.src","preCode":"    protected void subscribeActual(CompletableObserver observer) {\n        Disposable d = Disposable.empty();\n        observer.onSubscribe(d);\n        try {\n            run.run();\n        } catch (Throwable e) {\n            Exceptions.throwIfFatal(e);\n            if (!d.isDisposed()) {\n                observer.onError(e);\n            } else {\n                RxJavaPlugins.onError(e);\n            }\n            return;\n        }\n        if (!d.isDisposed()) {\n            observer.onComplete();\n        }\n    }\n","realPath":"src/main/java/io/reactivex/rxjava3/internal/operators/completable/CompletableFromAction.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":31,"status":"M"},{"authorDate":"2019-12-20 02:39:40","commitOrder":3,"curCode":"    protected void subscribeActual(CompletableObserver observer) {\n        Disposable d = Disposable.empty();\n        observer.onSubscribe(d);\n        try {\n            callable.call();\n        } catch (Throwable e) {\n            Exceptions.throwIfFatal(e);\n            if (!d.isDisposed()) {\n                observer.onError(e);\n            } else {\n                RxJavaPlugins.onError(e);\n            }\n            return;\n        }\n        if (!d.isDisposed()) {\n            observer.onComplete();\n        }\n    }\n","date":"2019-12-20 02:39:40","endLine":49,"groupId":"101918","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"subscribeActual","params":"(CompletableObserverobserver)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/57/764950df38c7e7920e688109264127d68692a9.src","preCode":"    protected void subscribeActual(CompletableObserver observer) {\n        Disposable d = Disposable.empty();\n        observer.onSubscribe(d);\n        try {\n            callable.call();\n        } catch (Throwable e) {\n            Exceptions.throwIfFatal(e);\n            if (!d.isDisposed()) {\n                observer.onError(e);\n            } else {\n                RxJavaPlugins.onError(e);\n            }\n            return;\n        }\n        if (!d.isDisposed()) {\n            observer.onComplete();\n        }\n    }\n","realPath":"src/main/java/io/reactivex/rxjava3/internal/operators/completable/CompletableFromCallable.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":32,"status":"N"}],"commitId":"26dacd72f1929c78d84da41ec80dc1ae3996c9f9","commitMessage":"@@@3.x: Add many fromX operators + marbles (#6873)\n\n","date":"2020-01-26 05:07:48","modifiedFileCount":"19","status":"M","submitter":"David Karnok"}]
