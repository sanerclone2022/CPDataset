[{"authorTime":"2019-08-16 20:51:17","codes":[{"authorDate":"2019-08-16 20:51:17","commitOrder":1,"curCode":"    public void onError(Throwable t) {\n        ObjectHelper.requireNonNull(t, \"onError called with null. Null values are generally not allowed in 2.x operators and sources.\");\n        if (!terminalEvent.compareAndSet(null, t)) {\n            RxJavaPlugins.onError(t);\n            return;\n        }\n        Object o = NotificationLite.error(t);\n        for (BehaviorDisposable<T> bs : terminate(o)) {\n            bs.emitNext(o, index);\n        }\n    }\n","date":"2019-08-16 20:51:17","endLine":276,"groupId":"3724","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"onError","params":"(Throwablet)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/f8/f4bb3848400610542c03a57acbb4591f03decb.src","preCode":"    public void onError(Throwable t) {\n        ObjectHelper.requireNonNull(t, \"onError called with null. Null values are generally not allowed in 2.x operators and sources.\");\n        if (!terminalEvent.compareAndSet(null, t)) {\n            RxJavaPlugins.onError(t);\n            return;\n        }\n        Object o = NotificationLite.error(t);\n        for (BehaviorDisposable<T> bs : terminate(o)) {\n            bs.emitNext(o, index);\n        }\n    }\n","realPath":"src/main/java/io/reactivex/rxjava3/subjects/BehaviorSubject.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":266,"status":"B"},{"authorDate":"2019-08-16 20:51:17","commitOrder":1,"curCode":"    public void onError(Throwable t) {\n        ObjectHelper.requireNonNull(t, \"onError called with null. Null values are generally not allowed in 2.x operators and sources.\");\n        if (!terminalEvent.compareAndSet(null, t)) {\n            RxJavaPlugins.onError(t);\n            return;\n        }\n        Object o = NotificationLite.error(t);\n        for (BehaviorSubscription<T> bs : terminate(o)) {\n            bs.emitNext(o, index);\n        }\n    }\n","date":"2019-08-16 20:51:17","endLine":294,"groupId":"3724","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"onError","params":"(Throwablet)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/cf/212214b702aa5da3507e14ee2c8749a33714a4.src","preCode":"    public void onError(Throwable t) {\n        ObjectHelper.requireNonNull(t, \"onError called with null. Null values are generally not allowed in 2.x operators and sources.\");\n        if (!terminalEvent.compareAndSet(null, t)) {\n            RxJavaPlugins.onError(t);\n            return;\n        }\n        Object o = NotificationLite.error(t);\n        for (BehaviorSubscription<T> bs : terminate(o)) {\n            bs.emitNext(o, index);\n        }\n    }\n","realPath":"src/main/java/io/reactivex/rxjava3/processors/BehaviorProcessor.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":284,"status":"B"}],"commitId":"a1693ecc9215027a7a3eae75272979ebb4d79a27","commitMessage":"@@@3.x: Refactor to io.reactivex.rxjava3.** (#6621)\n\n* 3.x: Refactor to io.reactivex.rxjava3.**\n\n* fix javadoc cleanup gradle\n\n* javadoc gradle again\n\n* Fix package location in text\n","date":"2019-08-16 20:51:17","modifiedFileCount":"0","status":"B","submitter":"David Karnok"},{"authorTime":"2019-08-28 22:07:44","codes":[{"authorDate":"2019-08-28 22:07:44","commitOrder":2,"curCode":"    public void onError(Throwable t) {\n        ExceptionHelper.nullCheck(t, \"onError called with a null Throwable.\");\n        if (!terminalEvent.compareAndSet(null, t)) {\n            RxJavaPlugins.onError(t);\n            return;\n        }\n        Object o = NotificationLite.error(t);\n        for (BehaviorDisposable<T> bs : terminate(o)) {\n            bs.emitNext(o, index);\n        }\n    }\n","date":"2019-08-28 22:07:44","endLine":276,"groupId":"3724","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"onError","params":"(Throwablet)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/45/ddb72a5114a7df48e3c76fc81724c4202a80b9.src","preCode":"    public void onError(Throwable t) {\n        ObjectHelper.requireNonNull(t, \"onError called with null. Null values are generally not allowed in 2.x operators and sources.\");\n        if (!terminalEvent.compareAndSet(null, t)) {\n            RxJavaPlugins.onError(t);\n            return;\n        }\n        Object o = NotificationLite.error(t);\n        for (BehaviorDisposable<T> bs : terminate(o)) {\n            bs.emitNext(o, index);\n        }\n    }\n","realPath":"src/main/java/io/reactivex/rxjava3/subjects/BehaviorSubject.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":266,"status":"M"},{"authorDate":"2019-08-28 22:07:44","commitOrder":2,"curCode":"    public void onError(Throwable t) {\n        ExceptionHelper.nullCheck(t, \"onError called with a null Throwable.\");\n        if (!terminalEvent.compareAndSet(null, t)) {\n            RxJavaPlugins.onError(t);\n            return;\n        }\n        Object o = NotificationLite.error(t);\n        for (BehaviorSubscription<T> bs : terminate(o)) {\n            bs.emitNext(o, index);\n        }\n    }\n","date":"2019-08-28 22:07:44","endLine":294,"groupId":"3724","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"onError","params":"(Throwablet)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/5a/c1d1d6078b15446bea7fcc53b15efc09f71ae2.src","preCode":"    public void onError(Throwable t) {\n        ObjectHelper.requireNonNull(t, \"onError called with null. Null values are generally not allowed in 2.x operators and sources.\");\n        if (!terminalEvent.compareAndSet(null, t)) {\n            RxJavaPlugins.onError(t);\n            return;\n        }\n        Object o = NotificationLite.error(t);\n        for (BehaviorSubscription<T> bs : terminate(o)) {\n            bs.emitNext(o, index);\n        }\n    }\n","realPath":"src/main/java/io/reactivex/rxjava3/processors/BehaviorProcessor.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":284,"status":"M"}],"commitId":"a07c45eeeb68b1cfc24f913c75edbc2820aadb76","commitMessage":"@@@3.x: Cleanup addThrowable.  \"2.x\" and null-value error messages (#6639)\n\n","date":"2019-08-28 22:07:44","modifiedFileCount":"106","status":"M","submitter":"David Karnok"},{"authorTime":"2019-12-27 06:43:56","codes":[{"authorDate":"2019-08-28 22:07:44","commitOrder":3,"curCode":"    public void onError(Throwable t) {\n        ExceptionHelper.nullCheck(t, \"onError called with a null Throwable.\");\n        if (!terminalEvent.compareAndSet(null, t)) {\n            RxJavaPlugins.onError(t);\n            return;\n        }\n        Object o = NotificationLite.error(t);\n        for (BehaviorDisposable<T> bs : terminate(o)) {\n            bs.emitNext(o, index);\n        }\n    }\n","date":"2019-08-28 22:07:44","endLine":276,"groupId":"101745","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"onError","params":"(Throwablet)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/45/ddb72a5114a7df48e3c76fc81724c4202a80b9.src","preCode":"    public void onError(Throwable t) {\n        ExceptionHelper.nullCheck(t, \"onError called with a null Throwable.\");\n        if (!terminalEvent.compareAndSet(null, t)) {\n            RxJavaPlugins.onError(t);\n            return;\n        }\n        Object o = NotificationLite.error(t);\n        for (BehaviorDisposable<T> bs : terminate(o)) {\n            bs.emitNext(o, index);\n        }\n    }\n","realPath":"src/main/java/io/reactivex/rxjava3/subjects/BehaviorSubject.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":266,"status":"N"},{"authorDate":"2019-12-27 06:43:56","commitOrder":3,"curCode":"    public void onError(@NonNull Throwable t) {\n        ExceptionHelper.nullCheck(t, \"onError called with a null Throwable.\");\n        if (!terminalEvent.compareAndSet(null, t)) {\n            RxJavaPlugins.onError(t);\n            return;\n        }\n        Object o = NotificationLite.error(t);\n        for (BehaviorSubscription<T> bs : terminate(o)) {\n            bs.emitNext(o, index);\n        }\n    }\n","date":"2019-12-27 06:43:56","endLine":294,"groupId":"101745","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"onError","params":"(@NonNullThrowablet)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/ea/93669ca3c96f6670531a809491cdb5cfb99c06.src","preCode":"    public void onError(Throwable t) {\n        ExceptionHelper.nullCheck(t, \"onError called with a null Throwable.\");\n        if (!terminalEvent.compareAndSet(null, t)) {\n            RxJavaPlugins.onError(t);\n            return;\n        }\n        Object o = NotificationLite.error(t);\n        for (BehaviorSubscription<T> bs : terminate(o)) {\n            bs.emitNext(o, index);\n        }\n    }\n","realPath":"src/main/java/io/reactivex/rxjava3/processors/BehaviorProcessor.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":284,"status":"M"}],"commitId":"38bcd5e292c9e44c542ff4bbcf8e23736b4a7748","commitMessage":"@@@3.x: XProcessor.offer to throw NPE immediately (#6799)\n\n","date":"2019-12-27 06:43:56","modifiedFileCount":"6","status":"M","submitter":"David Karnok"}]
