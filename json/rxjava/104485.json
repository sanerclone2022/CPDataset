[{"authorTime":"2019-08-16 20:51:17","codes":[{"authorDate":"2019-08-16 20:51:17","commitOrder":1,"curCode":"    public static <T> Maybe<T> ambArray(final MaybeSource<? extends T>... sources) {\n        if (sources.length == 0) {\n            return empty();\n        }\n        if (sources.length == 1) {\n            return wrap((MaybeSource<T>)sources[0]);\n        }\n        return RxJavaPlugins.onAssembly(new MaybeAmb<T>(sources, null));\n    }\n","date":"2019-08-16 20:51:17","endLine":159,"groupId":"12476","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"ambArray","params":"(finalMaybeSource<?extendsT>...sources)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/16/df7fb9087ca99c50d28fbaf38745ad781e3aec.src","preCode":"    public static <T> Maybe<T> ambArray(final MaybeSource<? extends T>... sources) {\n        if (sources.length == 0) {\n            return empty();\n        }\n        if (sources.length == 1) {\n            return wrap((MaybeSource<T>)sources[0]);\n        }\n        return RxJavaPlugins.onAssembly(new MaybeAmb<T>(sources, null));\n    }\n","realPath":"src/main/java/io/reactivex/rxjava3/core/Maybe.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":151,"status":"B"},{"authorDate":"2019-08-16 20:51:17","commitOrder":1,"curCode":"    public static <T> Single<T> ambArray(final SingleSource<? extends T>... sources) {\n        if (sources.length == 0) {\n            return error(SingleInternalHelper.<T>emptyThrower());\n        }\n        if (sources.length == 1) {\n            return wrap((SingleSource<T>)sources[0]);\n        }\n        return RxJavaPlugins.onAssembly(new SingleAmb<T>(sources, null));\n    }\n","date":"2019-08-16 20:51:17","endLine":165,"groupId":"12476","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"ambArray","params":"(finalSingleSource<?extendsT>...sources)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/3c/b676c9cf2ad11a3f0f1266d43cc9b2eeb518eb.src","preCode":"    public static <T> Single<T> ambArray(final SingleSource<? extends T>... sources) {\n        if (sources.length == 0) {\n            return error(SingleInternalHelper.<T>emptyThrower());\n        }\n        if (sources.length == 1) {\n            return wrap((SingleSource<T>)sources[0]);\n        }\n        return RxJavaPlugins.onAssembly(new SingleAmb<T>(sources, null));\n    }\n","realPath":"src/main/java/io/reactivex/rxjava3/core/Single.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":157,"status":"B"}],"commitId":"a1693ecc9215027a7a3eae75272979ebb4d79a27","commitMessage":"@@@3.x: Refactor to io.reactivex.rxjava3.** (#6621)\n\n* 3.x: Refactor to io.reactivex.rxjava3.**\n\n* fix javadoc cleanup gradle\n\n* javadoc gradle again\n\n* Fix package location in text\n","date":"2019-08-16 20:51:17","modifiedFileCount":"0","status":"B","submitter":"David Karnok"},{"authorTime":"2019-12-24 17:18:06","codes":[{"authorDate":"2019-12-24 17:18:06","commitOrder":2,"curCode":"    public static <T> Maybe<T> ambArray(@NonNull MaybeSource<? extends T>... sources) {\n        if (sources.length == 0) {\n            return empty();\n        }\n        if (sources.length == 1) {\n            @SuppressWarnings(\"unchecked\")\n            MaybeSource<T> source = (MaybeSource<T>)sources[0];\n            return wrap(source);\n        }\n        return RxJavaPlugins.onAssembly(new MaybeAmb<>(sources, null));\n    }\n","date":"2019-12-24 17:18:06","endLine":163,"groupId":"4922","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"ambArray","params":"(@NonNullMaybeSource<?extendsT>...sources)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/bb/0a6dcbdb44a5aa0a833d9f2077c3043052e748.src","preCode":"    public static <T> Maybe<T> ambArray(final MaybeSource<? extends T>... sources) {\n        if (sources.length == 0) {\n            return empty();\n        }\n        if (sources.length == 1) {\n            return wrap((MaybeSource<T>)sources[0]);\n        }\n        return RxJavaPlugins.onAssembly(new MaybeAmb<T>(sources, null));\n    }\n","realPath":"src/main/java/io/reactivex/rxjava3/core/Maybe.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":153,"status":"M"},{"authorDate":"2019-12-24 17:18:06","commitOrder":2,"curCode":"    public static <T> Single<T> ambArray(@NonNull SingleSource<? extends T>... sources) {\n        if (sources.length == 0) {\n            return error(SingleInternalHelper.<T>emptyThrower());\n        }\n        if (sources.length == 1) {\n            @SuppressWarnings(\"unchecked\")\n            SingleSource<T> source = (SingleSource<T>)sources[0];\n            return wrap(source);\n        }\n        return RxJavaPlugins.onAssembly(new SingleAmb<>(sources, null));\n    }\n","date":"2019-12-24 17:18:06","endLine":169,"groupId":"4922","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"ambArray","params":"(@NonNullSingleSource<?extendsT>...sources)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/ce/7ef85608bfa0c7c0ef572f23092463afe72dc1.src","preCode":"    public static <T> Single<T> ambArray(final SingleSource<? extends T>... sources) {\n        if (sources.length == 0) {\n            return error(SingleInternalHelper.<T>emptyThrower());\n        }\n        if (sources.length == 1) {\n            return wrap((SingleSource<T>)sources[0]);\n        }\n        return RxJavaPlugins.onAssembly(new SingleAmb<T>(sources, null));\n    }\n","realPath":"src/main/java/io/reactivex/rxjava3/core/Single.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":159,"status":"M"}],"commitId":"b57169babb184d0adc2fa28cf0425c4f0c1f8555","commitMessage":"@@@3.x: Add NonNull & SafeVarargs annotations + validator (#6791)\n\n","date":"2019-12-24 17:18:06","modifiedFileCount":"28","status":"M","submitter":"David Karnok"},{"authorTime":"2019-12-28 03:01:34","codes":[{"authorDate":"2019-12-24 17:18:06","commitOrder":3,"curCode":"    public static <T> Maybe<T> ambArray(@NonNull MaybeSource<? extends T>... sources) {\n        if (sources.length == 0) {\n            return empty();\n        }\n        if (sources.length == 1) {\n            @SuppressWarnings(\"unchecked\")\n            MaybeSource<T> source = (MaybeSource<T>)sources[0];\n            return wrap(source);\n        }\n        return RxJavaPlugins.onAssembly(new MaybeAmb<>(sources, null));\n    }\n","date":"2019-12-24 17:18:06","endLine":163,"groupId":"4922","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"ambArray","params":"(@NonNullMaybeSource<?extendsT>...sources)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/bb/0a6dcbdb44a5aa0a833d9f2077c3043052e748.src","preCode":"    public static <T> Maybe<T> ambArray(@NonNull MaybeSource<? extends T>... sources) {\n        if (sources.length == 0) {\n            return empty();\n        }\n        if (sources.length == 1) {\n            @SuppressWarnings(\"unchecked\")\n            MaybeSource<T> source = (MaybeSource<T>)sources[0];\n            return wrap(source);\n        }\n        return RxJavaPlugins.onAssembly(new MaybeAmb<>(sources, null));\n    }\n","realPath":"src/main/java/io/reactivex/rxjava3/core/Maybe.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":153,"status":"N"},{"authorDate":"2019-12-28 03:01:34","commitOrder":3,"curCode":"    public static <T> Single<T> ambArray(@NonNull SingleSource<? extends T>... sources) {\n        if (sources.length == 0) {\n            return error(SingleInternalHelper.emptyThrower());\n        }\n        if (sources.length == 1) {\n            @SuppressWarnings(\"unchecked\")\n            SingleSource<T> source = (SingleSource<T>)sources[0];\n            return wrap(source);\n        }\n        return RxJavaPlugins.onAssembly(new SingleAmb<>(sources, null));\n    }\n","date":"2019-12-28 03:01:34","endLine":169,"groupId":"4922","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"ambArray","params":"(@NonNullSingleSource<?extendsT>...sources)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/f0/022aef17b112028da88ae2b830939d0880f035.src","preCode":"    public static <T> Single<T> ambArray(@NonNull SingleSource<? extends T>... sources) {\n        if (sources.length == 0) {\n            return error(SingleInternalHelper.<T>emptyThrower());\n        }\n        if (sources.length == 1) {\n            @SuppressWarnings(\"unchecked\")\n            SingleSource<T> source = (SingleSource<T>)sources[0];\n            return wrap(source);\n        }\n        return RxJavaPlugins.onAssembly(new SingleAmb<>(sources, null));\n    }\n","realPath":"src/main/java/io/reactivex/rxjava3/core/Single.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":159,"status":"M"}],"commitId":"79f8e6dde6446b1aa33c146eaedbb958086daf56","commitMessage":"@@@3.x: Fix diamonds.  spelling.  unnecessary code (#6804)\n\n","date":"2019-12-28 03:01:34","modifiedFileCount":"463","status":"M","submitter":"David Karnok"},{"authorTime":"2020-01-10 15:36:29","codes":[{"authorDate":"2020-01-10 15:36:29","commitOrder":4,"curCode":"    public static <T> Maybe<T> ambArray(@NonNull MaybeSource<? extends T>... sources) {\n        Objects.requireNonNull(sources, \"sources is null\");\n        if (sources.length == 0) {\n            return empty();\n        }\n        if (sources.length == 1) {\n            @SuppressWarnings(\"unchecked\")\n            MaybeSource<T> source = (MaybeSource<T>)sources[0];\n            return wrap(source);\n        }\n        return RxJavaPlugins.onAssembly(new MaybeAmb<>(sources, null));\n    }\n","date":"2020-01-10 15:36:29","endLine":167,"groupId":"4922","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"ambArray","params":"(@NonNullMaybeSource<?extendsT>...sources)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/44/1267389ca0e5dca7fff53aa9d4703f8d257a74.src","preCode":"    public static <T> Maybe<T> ambArray(@NonNull MaybeSource<? extends T>... sources) {\n        if (sources.length == 0) {\n            return empty();\n        }\n        if (sources.length == 1) {\n            @SuppressWarnings(\"unchecked\")\n            MaybeSource<T> source = (MaybeSource<T>)sources[0];\n            return wrap(source);\n        }\n        return RxJavaPlugins.onAssembly(new MaybeAmb<>(sources, null));\n    }\n","realPath":"src/main/java/io/reactivex/rxjava3/core/Maybe.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":156,"status":"M"},{"authorDate":"2020-01-10 15:36:29","commitOrder":4,"curCode":"    public static <T> Single<T> ambArray(@NonNull SingleSource<? extends T>... sources) {\n        Objects.requireNonNull(sources, \"sources is null\");\n        if (sources.length == 0) {\n            return error(SingleInternalHelper.emptyThrower());\n        }\n        if (sources.length == 1) {\n            @SuppressWarnings(\"unchecked\")\n            SingleSource<T> source = (SingleSource<T>)sources[0];\n            return wrap(source);\n        }\n        return RxJavaPlugins.onAssembly(new SingleAmb<>(sources, null));\n    }\n","date":"2020-01-10 15:36:29","endLine":173,"groupId":"4922","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"ambArray","params":"(@NonNullSingleSource<?extendsT>...sources)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/9b/60269cd3559067fcd6a8f019dab5888bb9081d.src","preCode":"    public static <T> Single<T> ambArray(@NonNull SingleSource<? extends T>... sources) {\n        if (sources.length == 0) {\n            return error(SingleInternalHelper.emptyThrower());\n        }\n        if (sources.length == 1) {\n            @SuppressWarnings(\"unchecked\")\n            SingleSource<T> source = (SingleSource<T>)sources[0];\n            return wrap(source);\n        }\n        return RxJavaPlugins.onAssembly(new SingleAmb<>(sources, null));\n    }\n","realPath":"src/main/java/io/reactivex/rxjava3/core/Single.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":162,"status":"M"}],"commitId":"1e4dbcf78a814993e80fa489a50d3369d7c4ecbd","commitMessage":"@@@3.x: Improve JavaDocs of Observable and fix similar issues elsewhere (#6831)\n\n* 3.x: Javadoc cleanup of Observable\n\n* Another set of cleanups (too many things to fix at once)\n\n* 3.x: Improve JavaDocs of Observable and fix similar issues elsewhere\n","date":"2020-01-10 15:36:29","modifiedFileCount":"19","status":"M","submitter":"David Karnok"},{"authorTime":"2021-07-25 00:35:45","codes":[{"authorDate":"2021-07-25 00:35:45","commitOrder":5,"curCode":"    public static <@NonNull T> Maybe<T> ambArray(@NonNull MaybeSource<? extends T>... sources) {\n        Objects.requireNonNull(sources, \"sources is null\");\n        if (sources.length == 0) {\n            return empty();\n        }\n        if (sources.length == 1) {\n            @SuppressWarnings(\"unchecked\")\n            MaybeSource<T> source = (MaybeSource<T>)sources[0];\n            return wrap(source);\n        }\n        return RxJavaPlugins.onAssembly(new MaybeAmb<>(sources, null));\n    }\n","date":"2021-07-25 00:35:45","endLine":168,"groupId":"104485","id":9,"instanceNumber":1,"isCurCommit":1,"methodName":"ambArray","params":"(@NonNullMaybeSource<?extendsT>...sources)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/bb/b3a10d4b26720da356be15653de6d8577122c9.src","preCode":"    public static <T> Maybe<T> ambArray(@NonNull MaybeSource<? extends T>... sources) {\n        Objects.requireNonNull(sources, \"sources is null\");\n        if (sources.length == 0) {\n            return empty();\n        }\n        if (sources.length == 1) {\n            @SuppressWarnings(\"unchecked\")\n            MaybeSource<T> source = (MaybeSource<T>)sources[0];\n            return wrap(source);\n        }\n        return RxJavaPlugins.onAssembly(new MaybeAmb<>(sources, null));\n    }\n","realPath":"src/main/java/io/reactivex/rxjava3/core/Maybe.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":157,"status":"M"},{"authorDate":"2021-07-25 00:35:45","commitOrder":5,"curCode":"    public static <@NonNull T> Single<T> ambArray(@NonNull SingleSource<? extends T>... sources) {\n        Objects.requireNonNull(sources, \"sources is null\");\n        if (sources.length == 0) {\n            return error(SingleInternalHelper.emptyThrower());\n        }\n        if (sources.length == 1) {\n            @SuppressWarnings(\"unchecked\")\n            SingleSource<T> source = (SingleSource<T>)sources[0];\n            return wrap(source);\n        }\n        return RxJavaPlugins.onAssembly(new SingleAmb<>(sources, null));\n    }\n","date":"2021-07-25 00:35:45","endLine":173,"groupId":"104485","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"ambArray","params":"(@NonNullSingleSource<?extendsT>...sources)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/eb/590aa428c3db3190ed8ce5333570f61ac0f35e.src","preCode":"    public static <T> Single<T> ambArray(@NonNull SingleSource<? extends T>... sources) {\n        Objects.requireNonNull(sources, \"sources is null\");\n        if (sources.length == 0) {\n            return error(SingleInternalHelper.emptyThrower());\n        }\n        if (sources.length == 1) {\n            @SuppressWarnings(\"unchecked\")\n            SingleSource<T> source = (SingleSource<T>)sources[0];\n            return wrap(source);\n        }\n        return RxJavaPlugins.onAssembly(new SingleAmb<>(sources, null));\n    }\n","realPath":"src/main/java/io/reactivex/rxjava3/core/Single.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":162,"status":"M"}],"commitId":"40ca8eff4a0d6559258489cf282471f5e3b1a229","commitMessage":"@@@3.x: Move nullability annotations into the type argument declaration (#7303)\n\n* 3.x: Move nullability annotations into the type argument declaration\n\n* Reinforce Function<T.  R> return argument type where R is non-trivial","date":"2021-07-25 00:35:45","modifiedFileCount":"17","status":"M","submitter":"David Karnok"}]
