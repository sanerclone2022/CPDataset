[{"authorTime":"2019-08-16 20:51:17","codes":[{"authorDate":"2019-08-16 20:51:17","commitOrder":1,"curCode":"    public boolean add(Disposable d) {\n        ObjectHelper.requireNonNull(d, \"d is null\");\n        if (!disposed) {\n            synchronized (this) {\n                if (!disposed) {\n                    List<Disposable> set = resources;\n                    if (set == null) {\n                        set = new LinkedList<Disposable>();\n                        resources = set;\n                    }\n                    set.add(d);\n                    return true;\n                }\n            }\n        }\n        d.dispose();\n        return false;\n    }\n","date":"2019-08-16 20:51:17","endLine":93,"groupId":"7209","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"add","params":"(Disposabled)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/c1/233577b22e5e814fd7a0017ff08fac607f691d.src","preCode":"    public boolean add(Disposable d) {\n        ObjectHelper.requireNonNull(d, \"d is null\");\n        if (!disposed) {\n            synchronized (this) {\n                if (!disposed) {\n                    List<Disposable> set = resources;\n                    if (set == null) {\n                        set = new LinkedList<Disposable>();\n                        resources = set;\n                    }\n                    set.add(d);\n                    return true;\n                }\n            }\n        }\n        d.dispose();\n        return false;\n    }\n","realPath":"src/main/java/io/reactivex/rxjava3/internal/disposables/ListCompositeDisposable.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":76,"status":"B"},{"authorDate":"2019-08-16 20:51:17","commitOrder":1,"curCode":"    public boolean addAll(Disposable... ds) {\n        ObjectHelper.requireNonNull(ds, \"ds is null\");\n        if (!disposed) {\n            synchronized (this) {\n                if (!disposed) {\n                    List<Disposable> set = resources;\n                    if (set == null) {\n                        set = new LinkedList<Disposable>();\n                        resources = set;\n                    }\n                    for (Disposable d : ds) {\n                        ObjectHelper.requireNonNull(d, \"d is null\");\n                        set.add(d);\n                    }\n                    return true;\n                }\n            }\n        }\n        for (Disposable d : ds) {\n            d.dispose();\n        }\n        return false;\n    }\n","date":"2019-08-16 20:51:17","endLine":117,"groupId":"1774","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"addAll","params":"(Disposable...ds)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/c1/233577b22e5e814fd7a0017ff08fac607f691d.src","preCode":"    public boolean addAll(Disposable... ds) {\n        ObjectHelper.requireNonNull(ds, \"ds is null\");\n        if (!disposed) {\n            synchronized (this) {\n                if (!disposed) {\n                    List<Disposable> set = resources;\n                    if (set == null) {\n                        set = new LinkedList<Disposable>();\n                        resources = set;\n                    }\n                    for (Disposable d : ds) {\n                        ObjectHelper.requireNonNull(d, \"d is null\");\n                        set.add(d);\n                    }\n                    return true;\n                }\n            }\n        }\n        for (Disposable d : ds) {\n            d.dispose();\n        }\n        return false;\n    }\n","realPath":"src/main/java/io/reactivex/rxjava3/internal/disposables/ListCompositeDisposable.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":95,"status":"B"}],"commitId":"a1693ecc9215027a7a3eae75272979ebb4d79a27","commitMessage":"@@@3.x: Refactor to io.reactivex.rxjava3.** (#6621)\n\n* 3.x: Refactor to io.reactivex.rxjava3.**\n\n* fix javadoc cleanup gradle\n\n* javadoc gradle again\n\n* Fix package location in text\n","date":"2019-08-16 20:51:17","modifiedFileCount":"0","status":"B","submitter":"David Karnok"},{"authorTime":"2019-12-18 03:06:44","codes":[{"authorDate":"2019-12-18 03:06:44","commitOrder":2,"curCode":"    public boolean add(Disposable d) {\n        Objects.requireNonNull(d, \"d is null\");\n        if (!disposed) {\n            synchronized (this) {\n                if (!disposed) {\n                    List<Disposable> set = resources;\n                    if (set == null) {\n                        set = new LinkedList<Disposable>();\n                        resources = set;\n                    }\n                    set.add(d);\n                    return true;\n                }\n            }\n        }\n        d.dispose();\n        return false;\n    }\n","date":"2019-12-18 03:06:44","endLine":92,"groupId":"7209","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"add","params":"(Disposabled)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/90/928b64c6001807953f0c14dbb0a043dff6985b.src","preCode":"    public boolean add(Disposable d) {\n        ObjectHelper.requireNonNull(d, \"d is null\");\n        if (!disposed) {\n            synchronized (this) {\n                if (!disposed) {\n                    List<Disposable> set = resources;\n                    if (set == null) {\n                        set = new LinkedList<Disposable>();\n                        resources = set;\n                    }\n                    set.add(d);\n                    return true;\n                }\n            }\n        }\n        d.dispose();\n        return false;\n    }\n","realPath":"src/main/java/io/reactivex/rxjava3/internal/disposables/ListCompositeDisposable.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":75,"status":"M"},{"authorDate":"2019-12-18 03:06:44","commitOrder":2,"curCode":"    public boolean addAll(Disposable... ds) {\n        Objects.requireNonNull(ds, \"ds is null\");\n        if (!disposed) {\n            synchronized (this) {\n                if (!disposed) {\n                    List<Disposable> set = resources;\n                    if (set == null) {\n                        set = new LinkedList<Disposable>();\n                        resources = set;\n                    }\n                    for (Disposable d : ds) {\n                        Objects.requireNonNull(d, \"d is null\");\n                        set.add(d);\n                    }\n                    return true;\n                }\n            }\n        }\n        for (Disposable d : ds) {\n            d.dispose();\n        }\n        return false;\n    }\n","date":"2019-12-18 03:06:44","endLine":116,"groupId":"4532","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"addAll","params":"(Disposable...ds)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/90/928b64c6001807953f0c14dbb0a043dff6985b.src","preCode":"    public boolean addAll(Disposable... ds) {\n        ObjectHelper.requireNonNull(ds, \"ds is null\");\n        if (!disposed) {\n            synchronized (this) {\n                if (!disposed) {\n                    List<Disposable> set = resources;\n                    if (set == null) {\n                        set = new LinkedList<Disposable>();\n                        resources = set;\n                    }\n                    for (Disposable d : ds) {\n                        ObjectHelper.requireNonNull(d, \"d is null\");\n                        set.add(d);\n                    }\n                    return true;\n                }\n            }\n        }\n        for (Disposable d : ds) {\n            d.dispose();\n        }\n        return false;\n    }\n","realPath":"src/main/java/io/reactivex/rxjava3/internal/disposables/ListCompositeDisposable.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":94,"status":"M"}],"commitId":"6ba932c9a3752c6d85d65bd2292c3a47cab64fd6","commitMessage":"@@@Replace ObjectHelper.requireNonNull with Objects.requireNonNull (#6771)\n\n","date":"2019-12-18 03:06:44","modifiedFileCount":"199","status":"M","submitter":"Jake Wharton"},{"authorTime":"2019-12-28 03:01:34","codes":[{"authorDate":"2019-12-28 03:01:34","commitOrder":3,"curCode":"    public boolean add(Disposable d) {\n        Objects.requireNonNull(d, \"d is null\");\n        if (!disposed) {\n            synchronized (this) {\n                if (!disposed) {\n                    List<Disposable> set = resources;\n                    if (set == null) {\n                        set = new LinkedList<>();\n                        resources = set;\n                    }\n                    set.add(d);\n                    return true;\n                }\n            }\n        }\n        d.dispose();\n        return false;\n    }\n","date":"2019-12-28 03:01:34","endLine":92,"groupId":"103414","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"add","params":"(Disposabled)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/8a/6d4dd9923198bc839931ec5cd7532538a3b1cf.src","preCode":"    public boolean add(Disposable d) {\n        Objects.requireNonNull(d, \"d is null\");\n        if (!disposed) {\n            synchronized (this) {\n                if (!disposed) {\n                    List<Disposable> set = resources;\n                    if (set == null) {\n                        set = new LinkedList<Disposable>();\n                        resources = set;\n                    }\n                    set.add(d);\n                    return true;\n                }\n            }\n        }\n        d.dispose();\n        return false;\n    }\n","realPath":"src/main/java/io/reactivex/rxjava3/internal/disposables/ListCompositeDisposable.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":75,"status":"M"},{"authorDate":"2019-12-28 03:01:34","commitOrder":3,"curCode":"    public boolean addAll(Disposable... ds) {\n        Objects.requireNonNull(ds, \"ds is null\");\n        if (!disposed) {\n            synchronized (this) {\n                if (!disposed) {\n                    List<Disposable> set = resources;\n                    if (set == null) {\n                        set = new LinkedList<>();\n                        resources = set;\n                    }\n                    for (Disposable d : ds) {\n                        Objects.requireNonNull(d, \"d is null\");\n                        set.add(d);\n                    }\n                    return true;\n                }\n            }\n        }\n        for (Disposable d : ds) {\n            d.dispose();\n        }\n        return false;\n    }\n","date":"2019-12-28 03:01:34","endLine":116,"groupId":"103414","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"addAll","params":"(Disposable...ds)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/8a/6d4dd9923198bc839931ec5cd7532538a3b1cf.src","preCode":"    public boolean addAll(Disposable... ds) {\n        Objects.requireNonNull(ds, \"ds is null\");\n        if (!disposed) {\n            synchronized (this) {\n                if (!disposed) {\n                    List<Disposable> set = resources;\n                    if (set == null) {\n                        set = new LinkedList<Disposable>();\n                        resources = set;\n                    }\n                    for (Disposable d : ds) {\n                        Objects.requireNonNull(d, \"d is null\");\n                        set.add(d);\n                    }\n                    return true;\n                }\n            }\n        }\n        for (Disposable d : ds) {\n            d.dispose();\n        }\n        return false;\n    }\n","realPath":"src/main/java/io/reactivex/rxjava3/internal/disposables/ListCompositeDisposable.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":94,"status":"M"}],"commitId":"79f8e6dde6446b1aa33c146eaedbb958086daf56","commitMessage":"@@@3.x: Fix diamonds.  spelling.  unnecessary code (#6804)\n\n","date":"2019-12-28 03:01:34","modifiedFileCount":"463","status":"M","submitter":"David Karnok"}]
