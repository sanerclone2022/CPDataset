[{"authorTime":"2019-08-16 20:51:17","codes":[{"authorDate":"2019-08-16 20:51:17","commitOrder":1,"curCode":"    public void assertTerminated2() {\n        TestObserver<Integer> to = TestObserver.create();\n\n        to.onSubscribe(Disposables.empty());\n\n        to.onError(new TestException());\n        to.onError(new IOException());\n\n        try {\n            to.assertError(TestException.class);\n            throw new RuntimeException(\"Should have thrown\");\n        } catch (AssertionError ex) {\n            \r\n        }\n\n        to = TestObserver.create();\n\n        to.onSubscribe(Disposables.empty());\n\n        to.onError(new TestException());\n        to.onComplete();\n    }\n","date":"2019-08-16 20:51:17","endLine":580,"groupId":"12803","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"assertTerminated2","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/14/68dc9cb57635691d74f8c7a994166d7e7259aa.src","preCode":"    public void assertTerminated2() {\n        TestObserver<Integer> to = TestObserver.create();\n\n        to.onSubscribe(Disposables.empty());\n\n        to.onError(new TestException());\n        to.onError(new IOException());\n\n        try {\n            to.assertError(TestException.class);\n            throw new RuntimeException(\"Should have thrown\");\n        } catch (AssertionError ex) {\n            \r\n        }\n\n        to = TestObserver.create();\n\n        to.onSubscribe(Disposables.empty());\n\n        to.onError(new TestException());\n        to.onComplete();\n    }\n","realPath":"src/test/java/io/reactivex/rxjava3/observers/TestObserverTest.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":559,"status":"B"},{"authorDate":"2019-08-16 20:51:17","commitOrder":1,"curCode":"    public void assertValuesOnlyThrowsWhenErrored() {\n        TestObserver<Integer> to = TestObserver.create();\n        to.onSubscribe(Disposables.empty());\n\n        to.onError(new TestException());\n\n        try {\n            to.assertValuesOnly();\n            throw new RuntimeException();\n        } catch (AssertionError ex) {\n            \r\n        }\n    }\n","date":"2019-08-16 20:51:17","endLine":1088,"groupId":"12803","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"assertValuesOnlyThrowsWhenErrored","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/14/68dc9cb57635691d74f8c7a994166d7e7259aa.src","preCode":"    public void assertValuesOnlyThrowsWhenErrored() {\n        TestObserver<Integer> to = TestObserver.create();\n        to.onSubscribe(Disposables.empty());\n\n        to.onError(new TestException());\n\n        try {\n            to.assertValuesOnly();\n            throw new RuntimeException();\n        } catch (AssertionError ex) {\n            \r\n        }\n    }\n","realPath":"src/test/java/io/reactivex/rxjava3/observers/TestObserverTest.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":1076,"status":"B"}],"commitId":"a1693ecc9215027a7a3eae75272979ebb4d79a27","commitMessage":"@@@3.x: Refactor to io.reactivex.rxjava3.** (#6621)\n\n* 3.x: Refactor to io.reactivex.rxjava3.**\n\n* fix javadoc cleanup gradle\n\n* javadoc gradle again\n\n* Fix package location in text\n","date":"2019-08-16 20:51:17","modifiedFileCount":"0","status":"B","submitter":"David Karnok"},{"authorTime":"2019-12-20 02:39:40","codes":[{"authorDate":"2019-12-20 02:39:40","commitOrder":2,"curCode":"    public void assertTerminated2() {\n        TestObserver<Integer> to = TestObserver.create();\n\n        to.onSubscribe(Disposable.empty());\n\n        to.onError(new TestException());\n        to.onError(new IOException());\n\n        try {\n            to.assertError(TestException.class);\n            throw new RuntimeException(\"Should have thrown\");\n        } catch (AssertionError ex) {\n            \r\n        }\n\n        to = TestObserver.create();\n\n        to.onSubscribe(Disposable.empty());\n\n        to.onError(new TestException());\n        to.onComplete();\n    }\n","date":"2019-12-20 02:39:40","endLine":580,"groupId":"10670","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"assertTerminated2","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/58/1aa0b0b1f4344860a553d65e8367b17b0775f9.src","preCode":"    public void assertTerminated2() {\n        TestObserver<Integer> to = TestObserver.create();\n\n        to.onSubscribe(Disposables.empty());\n\n        to.onError(new TestException());\n        to.onError(new IOException());\n\n        try {\n            to.assertError(TestException.class);\n            throw new RuntimeException(\"Should have thrown\");\n        } catch (AssertionError ex) {\n            \r\n        }\n\n        to = TestObserver.create();\n\n        to.onSubscribe(Disposables.empty());\n\n        to.onError(new TestException());\n        to.onComplete();\n    }\n","realPath":"src/test/java/io/reactivex/rxjava3/observers/TestObserverTest.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":559,"status":"M"},{"authorDate":"2019-12-20 02:39:40","commitOrder":2,"curCode":"    public void assertValuesOnlyThrowsWhenErrored() {\n        TestObserver<Integer> to = TestObserver.create();\n        to.onSubscribe(Disposable.empty());\n\n        to.onError(new TestException());\n\n        try {\n            to.assertValuesOnly();\n            throw new RuntimeException();\n        } catch (AssertionError ex) {\n            \r\n        }\n    }\n","date":"2019-12-20 02:39:40","endLine":1088,"groupId":"10670","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"assertValuesOnlyThrowsWhenErrored","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/58/1aa0b0b1f4344860a553d65e8367b17b0775f9.src","preCode":"    public void assertValuesOnlyThrowsWhenErrored() {\n        TestObserver<Integer> to = TestObserver.create();\n        to.onSubscribe(Disposables.empty());\n\n        to.onError(new TestException());\n\n        try {\n            to.assertValuesOnly();\n            throw new RuntimeException();\n        } catch (AssertionError ex) {\n            \r\n        }\n    }\n","realPath":"src/test/java/io/reactivex/rxjava3/observers/TestObserverTest.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":1076,"status":"M"}],"commitId":"166c529eb165b473c9bff11e8fedbde6c471b005","commitMessage":"@@@Migrate Disposables static factories to Disposable interface (#6781)\n\n","date":"2019-12-20 02:39:40","modifiedFileCount":"202","status":"M","submitter":"Jake Wharton"}]
