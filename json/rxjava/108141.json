[{"authorTime":"2019-08-16 20:51:17","codes":[{"authorDate":"2019-08-16 20:51:17","commitOrder":1,"curCode":"    public void blockingFirstTimeout() {\n        BlockingFirstSubscriber<Integer> bf = new BlockingFirstSubscriber<Integer>();\n\n        Thread.currentThread().interrupt();\n\n        try {\n            bf.blockingGet();\n            fail(\"Should have thrown!\");\n        } catch (RuntimeException ex) {\n            assertTrue(ex.toString(), ex.getCause() instanceof InterruptedException);\n        }\n    }\n","date":"2019-08-16 20:51:17","endLine":67,"groupId":"5808","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"blockingFirstTimeout","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/f1/27e60c44fa322fd0af42a06379e6d0eb4f7704.src","preCode":"    public void blockingFirstTimeout() {\n        BlockingFirstSubscriber<Integer> bf = new BlockingFirstSubscriber<Integer>();\n\n        Thread.currentThread().interrupt();\n\n        try {\n            bf.blockingGet();\n            fail(\"Should have thrown!\");\n        } catch (RuntimeException ex) {\n            assertTrue(ex.toString(), ex.getCause() instanceof InterruptedException);\n        }\n    }\n","realPath":"src/test/java/io/reactivex/rxjava3/internal/subscribers/BlockingSubscriberTest.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":56,"status":"B"},{"authorDate":"2019-08-16 20:51:17","commitOrder":1,"curCode":"    public void awaitDoneTimed() {\n        TestObserver<Integer> to = new TestObserver<Integer>();\n\n        Thread.currentThread().interrupt();\n\n        try {\n            to.awaitDone(5, TimeUnit.SECONDS);\n        } catch (RuntimeException ex) {\n            assertTrue(ex.toString(), ex.getCause() instanceof InterruptedException);\n        }\n    }\n","date":"2019-08-16 20:51:17","endLine":682,"groupId":"11730","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"awaitDoneTimed","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/14/68dc9cb57635691d74f8c7a994166d7e7259aa.src","preCode":"    public void awaitDoneTimed() {\n        TestObserver<Integer> to = new TestObserver<Integer>();\n\n        Thread.currentThread().interrupt();\n\n        try {\n            to.awaitDone(5, TimeUnit.SECONDS);\n        } catch (RuntimeException ex) {\n            assertTrue(ex.toString(), ex.getCause() instanceof InterruptedException);\n        }\n    }\n","realPath":"src/test/java/io/reactivex/rxjava3/observers/TestObserverTest.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":672,"status":"B"}],"commitId":"a1693ecc9215027a7a3eae75272979ebb4d79a27","commitMessage":"@@@3.x: Refactor to io.reactivex.rxjava3.** (#6621)\n\n* 3.x: Refactor to io.reactivex.rxjava3.**\n\n* fix javadoc cleanup gradle\n\n* javadoc gradle again\n\n* Fix package location in text\n","date":"2019-08-16 20:51:17","modifiedFileCount":"0","status":"B","submitter":"David Karnok"},{"authorTime":"2019-08-16 20:51:17","codes":[{"authorDate":"2019-12-22 19:17:23","commitOrder":2,"curCode":"    public void blockingFirstTimeout() {\n        BlockingFirstSubscriber<Integer> bf = new BlockingFirstSubscriber<>();\n\n        Thread.currentThread().interrupt();\n\n        try {\n            bf.blockingGet();\n            fail(\"Should have thrown!\");\n        } catch (RuntimeException ex) {\n            assertTrue(ex.toString(), ex.getCause() instanceof InterruptedException);\n        }\n    }\n","date":"2019-12-22 19:17:23","endLine":67,"groupId":"5808","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"blockingFirstTimeout","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/56/3a52a9840106f47550655cf4f27f15ea8a54f9.src","preCode":"    public void blockingFirstTimeout() {\n        BlockingFirstSubscriber<Integer> bf = new BlockingFirstSubscriber<Integer>();\n\n        Thread.currentThread().interrupt();\n\n        try {\n            bf.blockingGet();\n            fail(\"Should have thrown!\");\n        } catch (RuntimeException ex) {\n            assertTrue(ex.toString(), ex.getCause() instanceof InterruptedException);\n        }\n    }\n","realPath":"src/test/java/io/reactivex/rxjava3/internal/subscribers/BlockingSubscriberTest.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":56,"status":"M"},{"authorDate":"2019-08-16 20:51:17","commitOrder":2,"curCode":"    public void awaitDoneTimed() {\n        TestObserver<Integer> to = new TestObserver<Integer>();\n\n        Thread.currentThread().interrupt();\n\n        try {\n            to.awaitDone(5, TimeUnit.SECONDS);\n        } catch (RuntimeException ex) {\n            assertTrue(ex.toString(), ex.getCause() instanceof InterruptedException);\n        }\n    }\n","date":"2019-08-16 20:51:17","endLine":682,"groupId":"11730","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"awaitDoneTimed","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/14/68dc9cb57635691d74f8c7a994166d7e7259aa.src","preCode":"    public void awaitDoneTimed() {\n        TestObserver<Integer> to = new TestObserver<Integer>();\n\n        Thread.currentThread().interrupt();\n\n        try {\n            to.awaitDone(5, TimeUnit.SECONDS);\n        } catch (RuntimeException ex) {\n            assertTrue(ex.toString(), ex.getCause() instanceof InterruptedException);\n        }\n    }\n","realPath":"src/test/java/io/reactivex/rxjava3/observers/TestObserverTest.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":672,"status":"N"}],"commitId":"75da4b504a52466b455a49a342747514fa0dffab","commitMessage":"@@@Diamond operators in tests (#6788)\n\n* diamond operators in unit tests.  small packages in internal/\n\n* diamond operators in unit tests.  small packages in internal/operators\n","date":"2019-12-22 19:17:23","modifiedFileCount":"92","status":"M","submitter":"Dmitry Volkov"},{"authorTime":"2019-12-22 19:17:37","codes":[{"authorDate":"2019-12-22 19:17:23","commitOrder":3,"curCode":"    public void blockingFirstTimeout() {\n        BlockingFirstSubscriber<Integer> bf = new BlockingFirstSubscriber<>();\n\n        Thread.currentThread().interrupt();\n\n        try {\n            bf.blockingGet();\n            fail(\"Should have thrown!\");\n        } catch (RuntimeException ex) {\n            assertTrue(ex.toString(), ex.getCause() instanceof InterruptedException);\n        }\n    }\n","date":"2019-12-22 19:17:23","endLine":67,"groupId":"108141","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"blockingFirstTimeout","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/56/3a52a9840106f47550655cf4f27f15ea8a54f9.src","preCode":"    public void blockingFirstTimeout() {\n        BlockingFirstSubscriber<Integer> bf = new BlockingFirstSubscriber<>();\n\n        Thread.currentThread().interrupt();\n\n        try {\n            bf.blockingGet();\n            fail(\"Should have thrown!\");\n        } catch (RuntimeException ex) {\n            assertTrue(ex.toString(), ex.getCause() instanceof InterruptedException);\n        }\n    }\n","realPath":"src/test/java/io/reactivex/rxjava3/internal/subscribers/BlockingSubscriberTest.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":56,"status":"N"},{"authorDate":"2019-12-22 19:17:37","commitOrder":3,"curCode":"    public void awaitDoneTimed() {\n        TestObserver<Integer> to = new TestObserver<>();\n\n        Thread.currentThread().interrupt();\n\n        try {\n            to.awaitDone(5, TimeUnit.SECONDS);\n        } catch (RuntimeException ex) {\n            assertTrue(ex.toString(), ex.getCause() instanceof InterruptedException);\n        }\n    }\n","date":"2019-12-22 19:17:37","endLine":682,"groupId":"108141","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"awaitDoneTimed","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/1e/4a287cee05cd468472e741cac46e2a0c0ae5de.src","preCode":"    public void awaitDoneTimed() {\n        TestObserver<Integer> to = new TestObserver<Integer>();\n\n        Thread.currentThread().interrupt();\n\n        try {\n            to.awaitDone(5, TimeUnit.SECONDS);\n        } catch (RuntimeException ex) {\n            assertTrue(ex.toString(), ex.getCause() instanceof InterruptedException);\n        }\n    }\n","realPath":"src/test/java/io/reactivex/rxjava3/observers/TestObserverTest.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":672,"status":"M"}],"commitId":"0bd2a0152b64723ac3daf3e2fbad3d59c7f3bbb8","commitMessage":"@@@diamond operators in unit tests.  small packages (#6789)\n\n","date":"2019-12-22 19:17:37","modifiedFileCount":"106","status":"M","submitter":"Dmitry Volkov"}]
