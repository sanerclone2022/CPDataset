[{"authorTime":"2019-08-16 20:51:17","codes":[{"authorDate":"2019-08-16 20:51:17","commitOrder":1,"curCode":"    public void onNext(T t) {\n        if (done) {\n            return;\n        }\n        if (t == null) {\n            upstream.cancel();\n            onError(new NullPointerException(\"onNext called with null. Null values are generally not allowed in 2.x operators and sources.\"));\n            return;\n        }\n        synchronized (this) {\n            if (done) {\n                return;\n            }\n            if (emitting) {\n                AppendOnlyLinkedArrayList<Object> q = queue;\n                if (q == null) {\n                    q = new AppendOnlyLinkedArrayList<Object>(QUEUE_LINK_SIZE);\n                    queue = q;\n                }\n                q.add(NotificationLite.next(t));\n                return;\n            }\n            emitting = true;\n        }\n\n        downstream.onNext(t);\n\n        emitLoop();\n    }\n","date":"2019-08-16 20:51:17","endLine":103,"groupId":"1266","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"onNext","params":"(Tt)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/85/386c195421106f56d5935cef5c4f4fc4790e48.src","preCode":"    public void onNext(T t) {\n        if (done) {\n            return;\n        }\n        if (t == null) {\n            upstream.cancel();\n            onError(new NullPointerException(\"onNext called with null. Null values are generally not allowed in 2.x operators and sources.\"));\n            return;\n        }\n        synchronized (this) {\n            if (done) {\n                return;\n            }\n            if (emitting) {\n                AppendOnlyLinkedArrayList<Object> q = queue;\n                if (q == null) {\n                    q = new AppendOnlyLinkedArrayList<Object>(QUEUE_LINK_SIZE);\n                    queue = q;\n                }\n                q.add(NotificationLite.next(t));\n                return;\n            }\n            emitting = true;\n        }\n\n        downstream.onNext(t);\n\n        emitLoop();\n    }\n","realPath":"src/main/java/io/reactivex/rxjava3/subscribers/SerializedSubscriber.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":75,"status":"B"},{"authorDate":"2019-08-16 20:51:17","commitOrder":1,"curCode":"    public void onNext(@NonNull T t) {\n        if (done) {\n            return;\n        }\n        if (t == null) {\n            upstream.dispose();\n            onError(new NullPointerException(\"onNext called with null. Null values are generally not allowed in 2.x operators and sources.\"));\n            return;\n        }\n        synchronized (this) {\n            if (done) {\n                return;\n            }\n            if (emitting) {\n                AppendOnlyLinkedArrayList<Object> q = queue;\n                if (q == null) {\n                    q = new AppendOnlyLinkedArrayList<Object>(QUEUE_LINK_SIZE);\n                    queue = q;\n                }\n                q.add(NotificationLite.next(t));\n                return;\n            }\n            emitting = true;\n        }\n\n        downstream.onNext(t);\n\n        emitLoop();\n    }\n","date":"2019-08-16 20:51:17","endLine":115,"groupId":"1266","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"onNext","params":"(@NonNullTt)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/71/4633570678bffdfff85a2768ffadaa8c7a82c8.src","preCode":"    public void onNext(@NonNull T t) {\n        if (done) {\n            return;\n        }\n        if (t == null) {\n            upstream.dispose();\n            onError(new NullPointerException(\"onNext called with null. Null values are generally not allowed in 2.x operators and sources.\"));\n            return;\n        }\n        synchronized (this) {\n            if (done) {\n                return;\n            }\n            if (emitting) {\n                AppendOnlyLinkedArrayList<Object> q = queue;\n                if (q == null) {\n                    q = new AppendOnlyLinkedArrayList<Object>(QUEUE_LINK_SIZE);\n                    queue = q;\n                }\n                q.add(NotificationLite.next(t));\n                return;\n            }\n            emitting = true;\n        }\n\n        downstream.onNext(t);\n\n        emitLoop();\n    }\n","realPath":"src/main/java/io/reactivex/rxjava3/observers/SerializedObserver.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":87,"status":"B"}],"commitId":"a1693ecc9215027a7a3eae75272979ebb4d79a27","commitMessage":"@@@3.x: Refactor to io.reactivex.rxjava3.** (#6621)\n\n* 3.x: Refactor to io.reactivex.rxjava3.**\n\n* fix javadoc cleanup gradle\n\n* javadoc gradle again\n\n* Fix package location in text\n","date":"2019-08-16 20:51:17","modifiedFileCount":"0","status":"B","submitter":"David Karnok"},{"authorTime":"2019-08-28 22:07:44","codes":[{"authorDate":"2019-08-28 22:07:44","commitOrder":2,"curCode":"    public void onNext(T t) {\n        if (done) {\n            return;\n        }\n        if (t == null) {\n            upstream.cancel();\n            onError(ExceptionHelper.createNullPointerException(\"onNext called with a null value.\"));\n            return;\n        }\n        synchronized (this) {\n            if (done) {\n                return;\n            }\n            if (emitting) {\n                AppendOnlyLinkedArrayList<Object> q = queue;\n                if (q == null) {\n                    q = new AppendOnlyLinkedArrayList<Object>(QUEUE_LINK_SIZE);\n                    queue = q;\n                }\n                q.add(NotificationLite.next(t));\n                return;\n            }\n            emitting = true;\n        }\n\n        downstream.onNext(t);\n\n        emitLoop();\n    }\n","date":"2019-08-28 22:07:44","endLine":103,"groupId":"1266","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"onNext","params":"(Tt)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/92/ecbbe6d0cf8ec24ba038c09eb7f8e783348888.src","preCode":"    public void onNext(T t) {\n        if (done) {\n            return;\n        }\n        if (t == null) {\n            upstream.cancel();\n            onError(new NullPointerException(\"onNext called with null. Null values are generally not allowed in 2.x operators and sources.\"));\n            return;\n        }\n        synchronized (this) {\n            if (done) {\n                return;\n            }\n            if (emitting) {\n                AppendOnlyLinkedArrayList<Object> q = queue;\n                if (q == null) {\n                    q = new AppendOnlyLinkedArrayList<Object>(QUEUE_LINK_SIZE);\n                    queue = q;\n                }\n                q.add(NotificationLite.next(t));\n                return;\n            }\n            emitting = true;\n        }\n\n        downstream.onNext(t);\n\n        emitLoop();\n    }\n","realPath":"src/main/java/io/reactivex/rxjava3/subscribers/SerializedSubscriber.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":75,"status":"M"},{"authorDate":"2019-08-28 22:07:44","commitOrder":2,"curCode":"    public void onNext(@NonNull T t) {\n        if (done) {\n            return;\n        }\n        if (t == null) {\n            upstream.dispose();\n            onError(ExceptionHelper.createNullPointerException(\"onNext called with a null value.\"));\n            return;\n        }\n        synchronized (this) {\n            if (done) {\n                return;\n            }\n            if (emitting) {\n                AppendOnlyLinkedArrayList<Object> q = queue;\n                if (q == null) {\n                    q = new AppendOnlyLinkedArrayList<Object>(QUEUE_LINK_SIZE);\n                    queue = q;\n                }\n                q.add(NotificationLite.next(t));\n                return;\n            }\n            emitting = true;\n        }\n\n        downstream.onNext(t);\n\n        emitLoop();\n    }\n","date":"2019-08-28 22:07:44","endLine":115,"groupId":"1266","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"onNext","params":"(@NonNullTt)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/a0/ffe75cce0d89e110e2d2b386b6875bd5935732.src","preCode":"    public void onNext(@NonNull T t) {\n        if (done) {\n            return;\n        }\n        if (t == null) {\n            upstream.dispose();\n            onError(new NullPointerException(\"onNext called with null. Null values are generally not allowed in 2.x operators and sources.\"));\n            return;\n        }\n        synchronized (this) {\n            if (done) {\n                return;\n            }\n            if (emitting) {\n                AppendOnlyLinkedArrayList<Object> q = queue;\n                if (q == null) {\n                    q = new AppendOnlyLinkedArrayList<Object>(QUEUE_LINK_SIZE);\n                    queue = q;\n                }\n                q.add(NotificationLite.next(t));\n                return;\n            }\n            emitting = true;\n        }\n\n        downstream.onNext(t);\n\n        emitLoop();\n    }\n","realPath":"src/main/java/io/reactivex/rxjava3/observers/SerializedObserver.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":87,"status":"M"}],"commitId":"a07c45eeeb68b1cfc24f913c75edbc2820aadb76","commitMessage":"@@@3.x: Cleanup addThrowable.  \"2.x\" and null-value error messages (#6639)\n\n","date":"2019-08-28 22:07:44","modifiedFileCount":"106","status":"M","submitter":"David Karnok"},{"authorTime":"2019-12-21 18:08:34","codes":[{"authorDate":"2019-12-21 18:08:34","commitOrder":3,"curCode":"    public void onNext(@NonNull T t) {\n        if (done) {\n            return;\n        }\n        if (t == null) {\n            upstream.cancel();\n            onError(ExceptionHelper.createNullPointerException(\"onNext called with a null value.\"));\n            return;\n        }\n        synchronized (this) {\n            if (done) {\n                return;\n            }\n            if (emitting) {\n                AppendOnlyLinkedArrayList<Object> q = queue;\n                if (q == null) {\n                    q = new AppendOnlyLinkedArrayList<>(QUEUE_LINK_SIZE);\n                    queue = q;\n                }\n                q.add(NotificationLite.next(t));\n                return;\n            }\n            emitting = true;\n        }\n\n        downstream.onNext(t);\n\n        emitLoop();\n    }\n","date":"2019-12-21 18:08:34","endLine":105,"groupId":"103855","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"onNext","params":"(@NonNullTt)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/96/98d97e21010e75858af724f2b5c0ac3d2de62d.src","preCode":"    public void onNext(T t) {\n        if (done) {\n            return;\n        }\n        if (t == null) {\n            upstream.cancel();\n            onError(ExceptionHelper.createNullPointerException(\"onNext called with a null value.\"));\n            return;\n        }\n        synchronized (this) {\n            if (done) {\n                return;\n            }\n            if (emitting) {\n                AppendOnlyLinkedArrayList<Object> q = queue;\n                if (q == null) {\n                    q = new AppendOnlyLinkedArrayList<Object>(QUEUE_LINK_SIZE);\n                    queue = q;\n                }\n                q.add(NotificationLite.next(t));\n                return;\n            }\n            emitting = true;\n        }\n\n        downstream.onNext(t);\n\n        emitLoop();\n    }\n","realPath":"src/main/java/io/reactivex/rxjava3/subscribers/SerializedSubscriber.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":77,"status":"M"},{"authorDate":"2019-12-21 18:08:34","commitOrder":3,"curCode":"    public void onNext(@NonNull T t) {\n        if (done) {\n            return;\n        }\n        if (t == null) {\n            upstream.dispose();\n            onError(ExceptionHelper.createNullPointerException(\"onNext called with a null value.\"));\n            return;\n        }\n        synchronized (this) {\n            if (done) {\n                return;\n            }\n            if (emitting) {\n                AppendOnlyLinkedArrayList<Object> q = queue;\n                if (q == null) {\n                    q = new AppendOnlyLinkedArrayList<>(QUEUE_LINK_SIZE);\n                    queue = q;\n                }\n                q.add(NotificationLite.next(t));\n                return;\n            }\n            emitting = true;\n        }\n\n        downstream.onNext(t);\n\n        emitLoop();\n    }\n","date":"2019-12-21 18:08:34","endLine":116,"groupId":"103855","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"onNext","params":"(@NonNullTt)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/e0/d32fbd7ae0170cfce62ffddedc877038478050.src","preCode":"    public void onNext(@NonNull T t) {\n        if (done) {\n            return;\n        }\n        if (t == null) {\n            upstream.dispose();\n            onError(ExceptionHelper.createNullPointerException(\"onNext called with a null value.\"));\n            return;\n        }\n        synchronized (this) {\n            if (done) {\n                return;\n            }\n            if (emitting) {\n                AppendOnlyLinkedArrayList<Object> q = queue;\n                if (q == null) {\n                    q = new AppendOnlyLinkedArrayList<Object>(QUEUE_LINK_SIZE);\n                    queue = q;\n                }\n                q.add(NotificationLite.next(t));\n                return;\n            }\n            emitting = true;\n        }\n\n        downstream.onNext(t);\n\n        emitLoop();\n    }\n","realPath":"src/main/java/io/reactivex/rxjava3/observers/SerializedObserver.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":88,"status":"M"}],"commitId":"dba670554c69d6c09d28643505880c1a468af3db","commitMessage":"@@@3.x: Cleanup and prettify Javadocs.  widen XOperator throws (#6785)\n\n* 3.x: Cleanup and prettify Javadocs.  widen XOperator throws\n\n* Fix encoding of ? in javadoc\n\n* Fix a wrong tag name\n","date":"2019-12-21 18:08:34","modifiedFileCount":"75","status":"M","submitter":"David Karnok"}]
