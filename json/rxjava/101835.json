[{"authorTime":"2019-08-16 20:51:17","codes":[{"authorDate":"2019-08-16 20:51:17","commitOrder":1,"curCode":"    public void subscribeRace() {\n        for (int i = 0; i < TestHelper.RACE_DEFAULT_LOOPS; i++) {\n            PublishSubject<Integer> ps = PublishSubject.create();\n\n            final Completable c = ps.ignoreElements().cache();\n\n            final TestObserver<Void> to1 = new TestObserver<Void>();\n\n            final TestObserver<Void> to2 = new TestObserver<Void>();\n\n            Runnable r1 = new Runnable() {\n                @Override\n                public void run() {\n                    c.subscribe(to1);\n                }\n            };\n            Runnable r2 = new Runnable() {\n                @Override\n                public void run() {\n                    c.subscribe(to2);\n                }\n            };\n\n            TestHelper.race(r1, r2);\n\n            ps.onComplete();\n\n            to1.assertResult();\n            to2.assertResult();\n        }\n    }\n","date":"2019-08-16 20:51:17","endLine":201,"groupId":"12170","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"subscribeRace","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/08/c93ae7d6386b210a083aafb7b7ab58ff361380.src","preCode":"    public void subscribeRace() {\n        for (int i = 0; i < TestHelper.RACE_DEFAULT_LOOPS; i++) {\n            PublishSubject<Integer> ps = PublishSubject.create();\n\n            final Completable c = ps.ignoreElements().cache();\n\n            final TestObserver<Void> to1 = new TestObserver<Void>();\n\n            final TestObserver<Void> to2 = new TestObserver<Void>();\n\n            Runnable r1 = new Runnable() {\n                @Override\n                public void run() {\n                    c.subscribe(to1);\n                }\n            };\n            Runnable r2 = new Runnable() {\n                @Override\n                public void run() {\n                    c.subscribe(to2);\n                }\n            };\n\n            TestHelper.race(r1, r2);\n\n            ps.onComplete();\n\n            to1.assertResult();\n            to2.assertResult();\n        }\n    }\n","realPath":"src/test/java/io/reactivex/rxjava3/internal/operators/completable/CompletableCacheTest.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":171,"status":"B"},{"authorDate":"2019-08-16 20:51:17","commitOrder":1,"curCode":"    public void subscribeDisposeRace() {\n        for (int i = 0; i < TestHelper.RACE_DEFAULT_LOOPS; i++) {\n            PublishSubject<Integer> ps = PublishSubject.create();\n\n            final Completable c = ps.ignoreElements().cache();\n\n            final TestObserver<Void> to1 = c.test();\n\n            final TestObserver<Void> to2 = new TestObserver<Void>();\n\n            Runnable r1 = new Runnable() {\n                @Override\n                public void run() {\n                    to1.dispose();\n                }\n            };\n            Runnable r2 = new Runnable() {\n                @Override\n                public void run() {\n                    c.subscribe(to2);\n                }\n            };\n\n            TestHelper.race(r1, r2);\n\n            ps.onComplete();\n\n            to1.assertEmpty();\n            to2.assertResult();\n        }\n    }\n","date":"2019-08-16 20:51:17","endLine":234,"groupId":"12171","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"subscribeDisposeRace","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/08/c93ae7d6386b210a083aafb7b7ab58ff361380.src","preCode":"    public void subscribeDisposeRace() {\n        for (int i = 0; i < TestHelper.RACE_DEFAULT_LOOPS; i++) {\n            PublishSubject<Integer> ps = PublishSubject.create();\n\n            final Completable c = ps.ignoreElements().cache();\n\n            final TestObserver<Void> to1 = c.test();\n\n            final TestObserver<Void> to2 = new TestObserver<Void>();\n\n            Runnable r1 = new Runnable() {\n                @Override\n                public void run() {\n                    to1.dispose();\n                }\n            };\n            Runnable r2 = new Runnable() {\n                @Override\n                public void run() {\n                    c.subscribe(to2);\n                }\n            };\n\n            TestHelper.race(r1, r2);\n\n            ps.onComplete();\n\n            to1.assertEmpty();\n            to2.assertResult();\n        }\n    }\n","realPath":"src/test/java/io/reactivex/rxjava3/internal/operators/completable/CompletableCacheTest.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":204,"status":"B"}],"commitId":"a1693ecc9215027a7a3eae75272979ebb4d79a27","commitMessage":"@@@3.x: Refactor to io.reactivex.rxjava3.** (#6621)\n\n* 3.x: Refactor to io.reactivex.rxjava3.**\n\n* fix javadoc cleanup gradle\n\n* javadoc gradle again\n\n* Fix package location in text\n","date":"2019-08-16 20:51:17","modifiedFileCount":"0","status":"B","submitter":"David Karnok"},{"authorTime":"2019-12-22 19:17:23","codes":[{"authorDate":"2019-12-22 19:17:23","commitOrder":2,"curCode":"    public void subscribeRace() {\n        for (int i = 0; i < TestHelper.RACE_DEFAULT_LOOPS; i++) {\n            PublishSubject<Integer> ps = PublishSubject.create();\n\n            final Completable c = ps.ignoreElements().cache();\n\n            final TestObserver<Void> to1 = new TestObserver<>();\n\n            final TestObserver<Void> to2 = new TestObserver<>();\n\n            Runnable r1 = new Runnable() {\n                @Override\n                public void run() {\n                    c.subscribe(to1);\n                }\n            };\n            Runnable r2 = new Runnable() {\n                @Override\n                public void run() {\n                    c.subscribe(to2);\n                }\n            };\n\n            TestHelper.race(r1, r2);\n\n            ps.onComplete();\n\n            to1.assertResult();\n            to2.assertResult();\n        }\n    }\n","date":"2019-12-22 19:17:23","endLine":201,"groupId":"101835","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"subscribeRace","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/fd/286681c8580f315262724b79f785229b84e855.src","preCode":"    public void subscribeRace() {\n        for (int i = 0; i < TestHelper.RACE_DEFAULT_LOOPS; i++) {\n            PublishSubject<Integer> ps = PublishSubject.create();\n\n            final Completable c = ps.ignoreElements().cache();\n\n            final TestObserver<Void> to1 = new TestObserver<Void>();\n\n            final TestObserver<Void> to2 = new TestObserver<Void>();\n\n            Runnable r1 = new Runnable() {\n                @Override\n                public void run() {\n                    c.subscribe(to1);\n                }\n            };\n            Runnable r2 = new Runnable() {\n                @Override\n                public void run() {\n                    c.subscribe(to2);\n                }\n            };\n\n            TestHelper.race(r1, r2);\n\n            ps.onComplete();\n\n            to1.assertResult();\n            to2.assertResult();\n        }\n    }\n","realPath":"src/test/java/io/reactivex/rxjava3/internal/operators/completable/CompletableCacheTest.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":171,"status":"M"},{"authorDate":"2019-12-22 19:17:23","commitOrder":2,"curCode":"    public void subscribeDisposeRace() {\n        for (int i = 0; i < TestHelper.RACE_DEFAULT_LOOPS; i++) {\n            PublishSubject<Integer> ps = PublishSubject.create();\n\n            final Completable c = ps.ignoreElements().cache();\n\n            final TestObserver<Void> to1 = c.test();\n\n            final TestObserver<Void> to2 = new TestObserver<>();\n\n            Runnable r1 = new Runnable() {\n                @Override\n                public void run() {\n                    to1.dispose();\n                }\n            };\n            Runnable r2 = new Runnable() {\n                @Override\n                public void run() {\n                    c.subscribe(to2);\n                }\n            };\n\n            TestHelper.race(r1, r2);\n\n            ps.onComplete();\n\n            to1.assertEmpty();\n            to2.assertResult();\n        }\n    }\n","date":"2019-12-22 19:17:23","endLine":234,"groupId":"101835","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"subscribeDisposeRace","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/fd/286681c8580f315262724b79f785229b84e855.src","preCode":"    public void subscribeDisposeRace() {\n        for (int i = 0; i < TestHelper.RACE_DEFAULT_LOOPS; i++) {\n            PublishSubject<Integer> ps = PublishSubject.create();\n\n            final Completable c = ps.ignoreElements().cache();\n\n            final TestObserver<Void> to1 = c.test();\n\n            final TestObserver<Void> to2 = new TestObserver<Void>();\n\n            Runnable r1 = new Runnable() {\n                @Override\n                public void run() {\n                    to1.dispose();\n                }\n            };\n            Runnable r2 = new Runnable() {\n                @Override\n                public void run() {\n                    c.subscribe(to2);\n                }\n            };\n\n            TestHelper.race(r1, r2);\n\n            ps.onComplete();\n\n            to1.assertEmpty();\n            to2.assertResult();\n        }\n    }\n","realPath":"src/test/java/io/reactivex/rxjava3/internal/operators/completable/CompletableCacheTest.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":204,"status":"M"}],"commitId":"75da4b504a52466b455a49a342747514fa0dffab","commitMessage":"@@@Diamond operators in tests (#6788)\n\n* diamond operators in unit tests.  small packages in internal/\n\n* diamond operators in unit tests.  small packages in internal/operators\n","date":"2019-12-22 19:17:23","modifiedFileCount":"92","status":"M","submitter":"Dmitry Volkov"}]
