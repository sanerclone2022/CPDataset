[{"authorTime":"2019-08-16 20:51:17","codes":[{"authorDate":"2019-08-16 20:51:17","commitOrder":1,"curCode":"    public void onTerminateCalledWhenCanceled() {\n        final AtomicBoolean didRunOnTerminate = new AtomicBoolean();\n\n        UnicastSubject<Integer> us = UnicastSubject.create(Observable.bufferSize(), new Runnable() {\n            @Override public void run() {\n                didRunOnTerminate.set(true);\n            }\n        });\n\n        final Disposable subscribe = us.subscribe();\n\n        assertFalse(didRunOnTerminate.get());\n        subscribe.dispose();\n        assertTrue(didRunOnTerminate.get());\n    }\n","date":"2019-08-16 20:51:17","endLine":207,"groupId":"9797","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"onTerminateCalledWhenCanceled","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/28/c1d48de29c9ea7aca8f84560487895db0d851a.src","preCode":"    public void onTerminateCalledWhenCanceled() {\n        final AtomicBoolean didRunOnTerminate = new AtomicBoolean();\n\n        UnicastSubject<Integer> us = UnicastSubject.create(Observable.bufferSize(), new Runnable() {\n            @Override public void run() {\n                didRunOnTerminate.set(true);\n            }\n        });\n\n        final Disposable subscribe = us.subscribe();\n\n        assertFalse(didRunOnTerminate.get());\n        subscribe.dispose();\n        assertTrue(didRunOnTerminate.get());\n    }\n","realPath":"src/test/java/io/reactivex/rxjava3/subjects/UnicastSubjectTest.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":193,"status":"B"},{"authorDate":"2019-08-16 20:51:17","commitOrder":1,"curCode":"    public void onTerminateCalledWhenCanceled() {\n        final AtomicBoolean didRunOnTerminate = new AtomicBoolean();\n\n        UnicastProcessor<Integer> us = UnicastProcessor.create(Observable.bufferSize(), new Runnable() {\n            @Override public void run() {\n                didRunOnTerminate.set(true);\n            }\n        });\n\n        final Disposable subscribe = us.subscribe();\n\n        assertFalse(didRunOnTerminate.get());\n        subscribe.dispose();\n        assertTrue(didRunOnTerminate.get());\n    }\n","date":"2019-08-16 20:51:17","endLine":171,"groupId":"9797","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"onTerminateCalledWhenCanceled","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/96/229747dc933f63be263c858ec62f6d5e4a41e0.src","preCode":"    public void onTerminateCalledWhenCanceled() {\n        final AtomicBoolean didRunOnTerminate = new AtomicBoolean();\n\n        UnicastProcessor<Integer> us = UnicastProcessor.create(Observable.bufferSize(), new Runnable() {\n            @Override public void run() {\n                didRunOnTerminate.set(true);\n            }\n        });\n\n        final Disposable subscribe = us.subscribe();\n\n        assertFalse(didRunOnTerminate.get());\n        subscribe.dispose();\n        assertTrue(didRunOnTerminate.get());\n    }\n","realPath":"src/test/java/io/reactivex/rxjava3/processors/UnicastProcessorTest.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":157,"status":"B"}],"commitId":"a1693ecc9215027a7a3eae75272979ebb4d79a27","commitMessage":"@@@3.x: Refactor to io.reactivex.rxjava3.** (#6621)\n\n* 3.x: Refactor to io.reactivex.rxjava3.**\n\n* fix javadoc cleanup gradle\n\n* javadoc gradle again\n\n* Fix package location in text\n","date":"2019-08-16 20:51:17","modifiedFileCount":"0","status":"B","submitter":"David Karnok"},{"authorTime":"2019-12-26 20:33:30","codes":[{"authorDate":"2019-08-16 20:51:17","commitOrder":2,"curCode":"    public void onTerminateCalledWhenCanceled() {\n        final AtomicBoolean didRunOnTerminate = new AtomicBoolean();\n\n        UnicastSubject<Integer> us = UnicastSubject.create(Observable.bufferSize(), new Runnable() {\n            @Override public void run() {\n                didRunOnTerminate.set(true);\n            }\n        });\n\n        final Disposable subscribe = us.subscribe();\n\n        assertFalse(didRunOnTerminate.get());\n        subscribe.dispose();\n        assertTrue(didRunOnTerminate.get());\n    }\n","date":"2019-08-16 20:51:17","endLine":207,"groupId":"10537","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"onTerminateCalledWhenCanceled","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/28/c1d48de29c9ea7aca8f84560487895db0d851a.src","preCode":"    public void onTerminateCalledWhenCanceled() {\n        final AtomicBoolean didRunOnTerminate = new AtomicBoolean();\n\n        UnicastSubject<Integer> us = UnicastSubject.create(Observable.bufferSize(), new Runnable() {\n            @Override public void run() {\n                didRunOnTerminate.set(true);\n            }\n        });\n\n        final Disposable subscribe = us.subscribe();\n\n        assertFalse(didRunOnTerminate.get());\n        subscribe.dispose();\n        assertTrue(didRunOnTerminate.get());\n    }\n","realPath":"src/test/java/io/reactivex/rxjava3/subjects/UnicastSubjectTest.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":193,"status":"N"},{"authorDate":"2019-12-26 20:33:30","commitOrder":2,"curCode":"    public void onTerminateCalledWhenCanceled() {\n        final AtomicBoolean didRunOnTerminate = new AtomicBoolean();\n\n        UnicastProcessor<Integer> up = UnicastProcessor.create(Observable.bufferSize(), new Runnable() {\n            @Override public void run() {\n                didRunOnTerminate.set(true);\n            }\n        });\n\n        final Disposable subscribe = up.subscribe();\n\n        assertFalse(didRunOnTerminate.get());\n        subscribe.dispose();\n        assertTrue(didRunOnTerminate.get());\n    }\n","date":"2019-12-26 20:33:30","endLine":175,"groupId":"10537","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"onTerminateCalledWhenCanceled","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/00/2d6a17d3f0c699f272c42129489519404ee2c6.src","preCode":"    public void onTerminateCalledWhenCanceled() {\n        final AtomicBoolean didRunOnTerminate = new AtomicBoolean();\n\n        UnicastProcessor<Integer> us = UnicastProcessor.create(Observable.bufferSize(), new Runnable() {\n            @Override public void run() {\n                didRunOnTerminate.set(true);\n            }\n        });\n\n        final Disposable subscribe = us.subscribe();\n\n        assertFalse(didRunOnTerminate.get());\n        subscribe.dispose();\n        assertTrue(didRunOnTerminate.get());\n    }\n","realPath":"src/test/java/io/reactivex/rxjava3/processors/UnicastProcessorTest.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":161,"status":"M"}],"commitId":"af17c6e268d0e2fe4675feb46c19a29227cb135b","commitMessage":"@@@3.x: [Java 8] Add Observable operators + cleanup (#6797)\n\n","date":"2019-12-26 20:33:30","modifiedFileCount":"19","status":"M","submitter":"David Karnok"}]
