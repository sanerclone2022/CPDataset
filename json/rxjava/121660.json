[{"authorTime":"2019-08-16 20:51:17","codes":[{"authorDate":"2019-08-16 20:51:17","commitOrder":1,"curCode":"    UnicastSubject(int capacityHint, Runnable onTerminate, boolean delayError) {\n        this.queue = new SpscLinkedArrayQueue<T>(ObjectHelper.verifyPositive(capacityHint, \"capacityHint\"));\n        this.onTerminate = new AtomicReference<Runnable>(ObjectHelper.requireNonNull(onTerminate, \"onTerminate\"));\n        this.delayError = delayError;\n        this.downstream = new AtomicReference<Observer<? super T>>();\n        this.once = new AtomicBoolean();\n        this.wip = new UnicastQueueDisposable();\n    }\n","date":"2019-08-16 20:51:17","endLine":295,"groupId":"6619","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"UnicastSubject","params":"(intcapacityHint@RunnableonTerminate@booleandelayError)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/76/7e3eb3329049234ecf4303ecf883132e46263f.src","preCode":"    UnicastSubject(int capacityHint, Runnable onTerminate, boolean delayError) {\n        this.queue = new SpscLinkedArrayQueue<T>(ObjectHelper.verifyPositive(capacityHint, \"capacityHint\"));\n        this.onTerminate = new AtomicReference<Runnable>(ObjectHelper.requireNonNull(onTerminate, \"onTerminate\"));\n        this.delayError = delayError;\n        this.downstream = new AtomicReference<Observer<? super T>>();\n        this.once = new AtomicBoolean();\n        this.wip = new UnicastQueueDisposable();\n    }\n","realPath":"src/main/java/io/reactivex/rxjava3/subjects/UnicastSubject.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":288,"status":"B"},{"authorDate":"2019-08-16 20:51:17","commitOrder":1,"curCode":"    UnicastProcessor(int capacityHint, Runnable onTerminate, boolean delayError) {\n        this.queue = new SpscLinkedArrayQueue<T>(ObjectHelper.verifyPositive(capacityHint, \"capacityHint\"));\n        this.onTerminate = new AtomicReference<Runnable>(onTerminate);\n        this.delayError = delayError;\n        this.downstream = new AtomicReference<Subscriber<? super T>>();\n        this.once = new AtomicBoolean();\n        this.wip = new UnicastQueueSubscription();\n        this.requested = new AtomicLong();\n    }\n","date":"2019-08-16 20:51:17","endLine":287,"groupId":"4200","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"UnicastProcessor","params":"(intcapacityHint@RunnableonTerminate@booleandelayError)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/31/b9f4aca40b27fe75b6503e45b3d13b7db36c3f.src","preCode":"    UnicastProcessor(int capacityHint, Runnable onTerminate, boolean delayError) {\n        this.queue = new SpscLinkedArrayQueue<T>(ObjectHelper.verifyPositive(capacityHint, \"capacityHint\"));\n        this.onTerminate = new AtomicReference<Runnable>(onTerminate);\n        this.delayError = delayError;\n        this.downstream = new AtomicReference<Subscriber<? super T>>();\n        this.once = new AtomicBoolean();\n        this.wip = new UnicastQueueSubscription();\n        this.requested = new AtomicLong();\n    }\n","realPath":"src/main/java/io/reactivex/rxjava3/processors/UnicastProcessor.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":279,"status":"B"}],"commitId":"a1693ecc9215027a7a3eae75272979ebb4d79a27","commitMessage":"@@@3.x: Refactor to io.reactivex.rxjava3.** (#6621)\n\n* 3.x: Refactor to io.reactivex.rxjava3.**\n\n* fix javadoc cleanup gradle\n\n* javadoc gradle again\n\n* Fix package location in text\n","date":"2019-08-16 20:51:17","modifiedFileCount":"0","status":"B","submitter":"David Karnok"},{"authorTime":"2019-08-16 20:51:17","codes":[{"authorDate":"2019-12-18 03:06:44","commitOrder":2,"curCode":"    UnicastSubject(int capacityHint, Runnable onTerminate, boolean delayError) {\n        this.queue = new SpscLinkedArrayQueue<T>(ObjectHelper.verifyPositive(capacityHint, \"capacityHint\"));\n        this.onTerminate = new AtomicReference<Runnable>(Objects.requireNonNull(onTerminate, \"onTerminate\"));\n        this.delayError = delayError;\n        this.downstream = new AtomicReference<Observer<? super T>>();\n        this.once = new AtomicBoolean();\n        this.wip = new UnicastQueueDisposable();\n    }\n","date":"2019-12-18 03:06:44","endLine":297,"groupId":"0","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"UnicastSubject","params":"(intcapacityHint@RunnableonTerminate@booleandelayError)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/c5/22343aed3c9631596d3842f3723bc7468267cc.src","preCode":"    UnicastSubject(int capacityHint, Runnable onTerminate, boolean delayError) {\n        this.queue = new SpscLinkedArrayQueue<T>(ObjectHelper.verifyPositive(capacityHint, \"capacityHint\"));\n        this.onTerminate = new AtomicReference<Runnable>(ObjectHelper.requireNonNull(onTerminate, \"onTerminate\"));\n        this.delayError = delayError;\n        this.downstream = new AtomicReference<Observer<? super T>>();\n        this.once = new AtomicBoolean();\n        this.wip = new UnicastQueueDisposable();\n    }\n","realPath":"src/main/java/io/reactivex/rxjava3/subjects/UnicastSubject.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":290,"status":"M"},{"authorDate":"2019-08-16 20:51:17","commitOrder":2,"curCode":"    UnicastProcessor(int capacityHint, Runnable onTerminate, boolean delayError) {\n        this.queue = new SpscLinkedArrayQueue<T>(ObjectHelper.verifyPositive(capacityHint, \"capacityHint\"));\n        this.onTerminate = new AtomicReference<Runnable>(onTerminate);\n        this.delayError = delayError;\n        this.downstream = new AtomicReference<Subscriber<? super T>>();\n        this.once = new AtomicBoolean();\n        this.wip = new UnicastQueueSubscription();\n        this.requested = new AtomicLong();\n    }\n","date":"2019-08-16 20:51:17","endLine":287,"groupId":"4200","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"UnicastProcessor","params":"(intcapacityHint@RunnableonTerminate@booleandelayError)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/31/b9f4aca40b27fe75b6503e45b3d13b7db36c3f.src","preCode":"    UnicastProcessor(int capacityHint, Runnable onTerminate, boolean delayError) {\n        this.queue = new SpscLinkedArrayQueue<T>(ObjectHelper.verifyPositive(capacityHint, \"capacityHint\"));\n        this.onTerminate = new AtomicReference<Runnable>(onTerminate);\n        this.delayError = delayError;\n        this.downstream = new AtomicReference<Subscriber<? super T>>();\n        this.once = new AtomicBoolean();\n        this.wip = new UnicastQueueSubscription();\n        this.requested = new AtomicLong();\n    }\n","realPath":"src/main/java/io/reactivex/rxjava3/processors/UnicastProcessor.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":279,"status":"N"}],"commitId":"6ba932c9a3752c6d85d65bd2292c3a47cab64fd6","commitMessage":"@@@Replace ObjectHelper.requireNonNull with Objects.requireNonNull (#6771)\n\n","date":"2019-12-18 03:06:44","modifiedFileCount":"199","status":"M","submitter":"Jake Wharton"},{"authorTime":"2019-12-26 06:52:13","codes":[{"authorDate":"2019-12-26 06:52:13","commitOrder":3,"curCode":"    UnicastSubject(int capacityHint, Runnable onTerminate, boolean delayError) {\n        this.queue = new SpscLinkedArrayQueue<>(ObjectHelper.verifyPositive(capacityHint, \"capacityHint\"));\n        this.onTerminate = new AtomicReference<>(Objects.requireNonNull(onTerminate, \"onTerminate\"));\n        this.delayError = delayError;\n        this.downstream = new AtomicReference<>();\n        this.once = new AtomicBoolean();\n        this.wip = new UnicastQueueDisposable();\n    }\n","date":"2019-12-26 06:52:13","endLine":271,"groupId":"8284","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"UnicastSubject","params":"(intcapacityHint@RunnableonTerminate@booleandelayError)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/8f/495a9ca58e4df38098dbbdc1594d4fcd6ee0e8.src","preCode":"    UnicastSubject(int capacityHint, Runnable onTerminate, boolean delayError) {\n        this.queue = new SpscLinkedArrayQueue<T>(ObjectHelper.verifyPositive(capacityHint, \"capacityHint\"));\n        this.onTerminate = new AtomicReference<Runnable>(Objects.requireNonNull(onTerminate, \"onTerminate\"));\n        this.delayError = delayError;\n        this.downstream = new AtomicReference<Observer<? super T>>();\n        this.once = new AtomicBoolean();\n        this.wip = new UnicastQueueDisposable();\n    }\n","realPath":"src/main/java/io/reactivex/rxjava3/subjects/UnicastSubject.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":264,"status":"M"},{"authorDate":"2019-12-26 06:52:13","commitOrder":3,"curCode":"    UnicastProcessor(int capacityHint, Runnable onTerminate, boolean delayError) {\n        this.queue = new SpscLinkedArrayQueue<>(ObjectHelper.verifyPositive(capacityHint, \"capacityHint\"));\n        this.onTerminate = new AtomicReference<>(Objects.requireNonNull(onTerminate, \"onTerminate\"));\n        this.delayError = delayError;\n        this.downstream = new AtomicReference<>();\n        this.once = new AtomicBoolean();\n        this.wip = new UnicastQueueSubscription();\n        this.requested = new AtomicLong();\n    }\n","date":"2019-12-26 06:52:13","endLine":268,"groupId":"8284","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"UnicastProcessor","params":"(intcapacityHint@RunnableonTerminate@booleandelayError)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/ea/b7da4f05aa4c3dce66bc0a06e105ca77a5b357.src","preCode":"    UnicastProcessor(int capacityHint, Runnable onTerminate, boolean delayError) {\n        this.queue = new SpscLinkedArrayQueue<T>(ObjectHelper.verifyPositive(capacityHint, \"capacityHint\"));\n        this.onTerminate = new AtomicReference<Runnable>(onTerminate);\n        this.delayError = delayError;\n        this.downstream = new AtomicReference<Subscriber<? super T>>();\n        this.once = new AtomicBoolean();\n        this.wip = new UnicastQueueSubscription();\n        this.requested = new AtomicLong();\n    }\n","realPath":"src/main/java/io/reactivex/rxjava3/processors/UnicastProcessor.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":260,"status":"M"}],"commitId":"480889c58d3b762b073ef80229bf27f9d9429dd7","commitMessage":"@@@3.x: Add missing annotations.  fix many diamonds (#6795)\n\n* 3.x: Add missing annotations.  fix many diamonds\n\n* Fix accidental JDK 9 API usage\n\n* Fix NPE in unicast due to null-cleanup\n","date":"2019-12-26 06:52:13","modifiedFileCount":"52","status":"M","submitter":"David Karnok"},{"authorTime":"2020-01-11 19:24:55","codes":[{"authorDate":"2020-01-11 19:24:55","commitOrder":4,"curCode":"    UnicastSubject(int capacityHint, Runnable onTerminate, boolean delayError) {\n        this.queue = new SpscLinkedArrayQueue<>(capacityHint);\n        this.onTerminate = new AtomicReference<>(onTerminate);\n        this.delayError = delayError;\n        this.downstream = new AtomicReference<>();\n        this.once = new AtomicBoolean();\n        this.wip = new UnicastQueueDisposable();\n    }\n","date":"2020-01-11 19:24:55","endLine":281,"groupId":"121660","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"UnicastSubject","params":"(intcapacityHint@RunnableonTerminate@booleandelayError)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/63/afa9c335f6377c62d1cf6ba69e40100e1ef58d.src","preCode":"    UnicastSubject(int capacityHint, Runnable onTerminate, boolean delayError) {\n        this.queue = new SpscLinkedArrayQueue<>(ObjectHelper.verifyPositive(capacityHint, \"capacityHint\"));\n        this.onTerminate = new AtomicReference<>(Objects.requireNonNull(onTerminate, \"onTerminate\"));\n        this.delayError = delayError;\n        this.downstream = new AtomicReference<>();\n        this.once = new AtomicBoolean();\n        this.wip = new UnicastQueueDisposable();\n    }\n","realPath":"src/main/java/io/reactivex/rxjava3/subjects/UnicastSubject.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":274,"status":"M"},{"authorDate":"2020-01-11 19:24:55","commitOrder":4,"curCode":"    UnicastProcessor(int capacityHint, Runnable onTerminate, boolean delayError) {\n        this.queue = new SpscLinkedArrayQueue<>(capacityHint);\n        this.onTerminate = new AtomicReference<>(onTerminate);\n        this.delayError = delayError;\n        this.downstream = new AtomicReference<>();\n        this.once = new AtomicBoolean();\n        this.wip = new UnicastQueueSubscription();\n        this.requested = new AtomicLong();\n    }\n","date":"2020-01-11 19:24:55","endLine":276,"groupId":"121660","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"UnicastProcessor","params":"(intcapacityHint@RunnableonTerminate@booleandelayError)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/a1/af942d8d906e4b99e8ac7d61a2037e8386b1f4.src","preCode":"    UnicastProcessor(int capacityHint, Runnable onTerminate, boolean delayError) {\n        this.queue = new SpscLinkedArrayQueue<>(ObjectHelper.verifyPositive(capacityHint, \"capacityHint\"));\n        this.onTerminate = new AtomicReference<>(Objects.requireNonNull(onTerminate, \"onTerminate\"));\n        this.delayError = delayError;\n        this.downstream = new AtomicReference<>();\n        this.once = new AtomicBoolean();\n        this.wip = new UnicastQueueSubscription();\n        this.requested = new AtomicLong();\n    }\n","realPath":"src/main/java/io/reactivex/rxjava3/processors/UnicastProcessor.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":268,"status":"M"}],"commitId":"c67263fffe26a0c4970fd34789766fb18a7411a8","commitMessage":"@@@3.x: Cleanup javadoc for parameter validation all around (#6835)\n\n* 3.x: Cleanup javadoc for parameter validation all around\n\n* More cleanup\n\n* Last set of intended changes\n","date":"2020-01-11 19:24:55","modifiedFileCount":"20","status":"M","submitter":"David Karnok"}]
