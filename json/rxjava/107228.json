[{"authorTime":"2019-08-16 20:51:17","codes":[{"authorDate":"2019-08-16 20:51:17","commitOrder":1,"curCode":"    public void normalOnNextBackpressured() {\n        TestSubscriberEx<Integer> ts = new TestSubscriberEx<Integer>(0);\n        SubscriberWrapper<Integer> wrapper = new SubscriberWrapper<Integer>(ts);\n\n        Flowable.range(1, 5).subscribe(wrapper);\n\n        ts.assertEmpty()\n        .requestMore(1)\n        .assertValue(1)\n        .requestMore(2)\n        .assertValues(1, 2, 3)\n        .requestMore(2)\n        .assertResult(1, 2, 3, 4, 5);\n    }\n","date":"2019-08-16 20:51:17","endLine":119,"groupId":"7522","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"normalOnNextBackpressured","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/a9/4b034166c9d829047060aa2290112e9f3fb047.src","preCode":"    public void normalOnNextBackpressured() {\n        TestSubscriberEx<Integer> ts = new TestSubscriberEx<Integer>(0);\n        SubscriberWrapper<Integer> wrapper = new SubscriberWrapper<Integer>(ts);\n\n        Flowable.range(1, 5).subscribe(wrapper);\n\n        ts.assertEmpty()\n        .requestMore(1)\n        .assertValue(1)\n        .requestMore(2)\n        .assertValues(1, 2, 3)\n        .requestMore(2)\n        .assertResult(1, 2, 3, 4, 5);\n    }\n","realPath":"src/test/java/io/reactivex/rxjava3/internal/subscribers/StrictSubscriberTest.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":106,"status":"B"},{"authorDate":"2019-08-16 20:51:17","commitOrder":1,"curCode":"    public void requestMore() {\n        Flowable.range(1, 5)\n        .test(0)\n        .requestMore(1)\n        .assertValue(1)\n        .requestMore(2)\n        .assertValues(1, 2, 3)\n        .requestMore(3)\n        .assertResult(1, 2, 3, 4, 5);\n    }\n","date":"2019-08-16 20:51:17","endLine":1714,"groupId":"7522","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"requestMore","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/24/a9e84c9b5c431cf94ae9617da86de9d5828e95.src","preCode":"    public void requestMore() {\n        Flowable.range(1, 5)\n        .test(0)\n        .requestMore(1)\n        .assertValue(1)\n        .requestMore(2)\n        .assertValues(1, 2, 3)\n        .requestMore(3)\n        .assertResult(1, 2, 3, 4, 5);\n    }\n","realPath":"src/test/java/io/reactivex/rxjava3/testsupport/TestSubscriberExTest.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":1705,"status":"B"}],"commitId":"a1693ecc9215027a7a3eae75272979ebb4d79a27","commitMessage":"@@@3.x: Refactor to io.reactivex.rxjava3.** (#6621)\n\n* 3.x: Refactor to io.reactivex.rxjava3.**\n\n* fix javadoc cleanup gradle\n\n* javadoc gradle again\n\n* Fix package location in text\n","date":"2019-08-16 20:51:17","modifiedFileCount":"0","status":"B","submitter":"David Karnok"},{"authorTime":"2019-08-16 20:51:17","codes":[{"authorDate":"2019-12-22 19:17:23","commitOrder":2,"curCode":"    public void normalOnNextBackpressured() {\n        TestSubscriberEx<Integer> ts = new TestSubscriberEx<>(0);\n        SubscriberWrapper<Integer> wrapper = new SubscriberWrapper<>(ts);\n\n        Flowable.range(1, 5).subscribe(wrapper);\n\n        ts.assertEmpty()\n        .requestMore(1)\n        .assertValue(1)\n        .requestMore(2)\n        .assertValues(1, 2, 3)\n        .requestMore(2)\n        .assertResult(1, 2, 3, 4, 5);\n    }\n","date":"2019-12-22 19:17:23","endLine":119,"groupId":"107228","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"normalOnNextBackpressured","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/1b/36462c470bc9f5760423e723c50bfb622fc68c.src","preCode":"    public void normalOnNextBackpressured() {\n        TestSubscriberEx<Integer> ts = new TestSubscriberEx<Integer>(0);\n        SubscriberWrapper<Integer> wrapper = new SubscriberWrapper<Integer>(ts);\n\n        Flowable.range(1, 5).subscribe(wrapper);\n\n        ts.assertEmpty()\n        .requestMore(1)\n        .assertValue(1)\n        .requestMore(2)\n        .assertValues(1, 2, 3)\n        .requestMore(2)\n        .assertResult(1, 2, 3, 4, 5);\n    }\n","realPath":"src/test/java/io/reactivex/rxjava3/internal/subscribers/StrictSubscriberTest.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":106,"status":"M"},{"authorDate":"2019-08-16 20:51:17","commitOrder":2,"curCode":"    public void requestMore() {\n        Flowable.range(1, 5)\n        .test(0)\n        .requestMore(1)\n        .assertValue(1)\n        .requestMore(2)\n        .assertValues(1, 2, 3)\n        .requestMore(3)\n        .assertResult(1, 2, 3, 4, 5);\n    }\n","date":"2019-08-16 20:51:17","endLine":1714,"groupId":"107228","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"requestMore","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-rxjava-10-0.7/blobInfo/CC_OUT/blobs/24/a9e84c9b5c431cf94ae9617da86de9d5828e95.src","preCode":"    public void requestMore() {\n        Flowable.range(1, 5)\n        .test(0)\n        .requestMore(1)\n        .assertValue(1)\n        .requestMore(2)\n        .assertValues(1, 2, 3)\n        .requestMore(3)\n        .assertResult(1, 2, 3, 4, 5);\n    }\n","realPath":"src/test/java/io/reactivex/rxjava3/testsupport/TestSubscriberExTest.java","repoName":"rxjava","snippetEndLine":0,"snippetStartLine":0,"startLine":1705,"status":"N"}],"commitId":"75da4b504a52466b455a49a342747514fa0dffab","commitMessage":"@@@Diamond operators in tests (#6788)\n\n* diamond operators in unit tests.  small packages in internal/\n\n* diamond operators in unit tests.  small packages in internal/operators\n","date":"2019-12-22 19:17:23","modifiedFileCount":"92","status":"M","submitter":"Dmitry Volkov"}]
