[{"authorTime":"2020-07-21 12:42:42","codes":[{"authorDate":"2020-07-21 12:42:42","commitOrder":1,"curCode":"    public void testCharType() throws AnalysisException {\n        TypeDef type = TypeDef.createVarchar(10);\n        type.analyze(null);\n        Assert.assertEquals(\"varchar(10)\", type.toString());\n        Assert.assertEquals(PrimitiveType.VARCHAR, type.getType().getPrimitiveType());\n        Assert.assertEquals(10, ((ScalarType) type.getType()).getLength());\n\n        \r\n        TypeDef type2 = TypeDef.createVarchar(10);\n        Assert.assertEquals(type.getType(), type2.getType());\n\n        \r\n        TypeDef type3 = TypeDef.createVarchar(3);\n        Assert.assertNotEquals(type.getType(), type3.getType());\n\n        \r\n        TypeDef type4 = TypeDef.create(PrimitiveType.BIGINT);\n        Assert.assertNotEquals(type.getType(), type4.getType());\n    }\n","date":"2020-07-21 12:42:42","endLine":85,"groupId":"7417","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testCharType","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-incubatordoris-10-0.7/blobInfo/CC_OUT/blobs/32/ad5e47cb88dd9c941cc6ba323c5946d51bedf8.src","preCode":"    public void testCharType() throws AnalysisException {\n        TypeDef type = TypeDef.createVarchar(10);\n        type.analyze(null);\n        Assert.assertEquals(\"varchar(10)\", type.toString());\n        Assert.assertEquals(PrimitiveType.VARCHAR, type.getType().getPrimitiveType());\n        Assert.assertEquals(10, ((ScalarType) type.getType()).getLength());\n\n        \r\n        TypeDef type2 = TypeDef.createVarchar(10);\n        Assert.assertEquals(type.getType(), type2.getType());\n\n        \r\n        TypeDef type3 = TypeDef.createVarchar(3);\n        Assert.assertNotEquals(type.getType(), type3.getType());\n\n        \r\n        TypeDef type4 = TypeDef.create(PrimitiveType.BIGINT);\n        Assert.assertNotEquals(type.getType(), type4.getType());\n    }\n","realPath":"fe/fe-core/src/test/java/org/apache/doris/catalog/ColumnTypeTest.java","repoName":"incubatordoris","snippetEndLine":0,"snippetStartLine":0,"startLine":67,"status":"B"},{"authorDate":"2020-07-21 12:42:42","commitOrder":1,"curCode":"    public void testDecimal() throws AnalysisException {\n        TypeDef type = TypeDef.createDecimal(12, 5);\n        type.analyze(null);\n        Assert.assertEquals(\"decimal(12, 5)\", type.toString());\n        Assert.assertEquals(PrimitiveType.DECIMAL, type.getType().getPrimitiveType());\n        Assert.assertEquals(12, ((ScalarType) type.getType()).getScalarPrecision());\n        Assert.assertEquals(5, ((ScalarType) type.getType()).getScalarScale());\n\n        \r\n        TypeDef type2 = TypeDef.createDecimal(12, 5);\n        Assert.assertEquals(type.getType(), type2.getType());\n\n        \r\n        TypeDef type3 = TypeDef.createDecimal(11, 5);\n        Assert.assertNotEquals(type.getType(), type3.getType());\n        type3 = TypeDef.createDecimal(12, 4);\n        Assert.assertNotEquals(type.getType(), type3.getType());\n\n        \r\n        TypeDef type4 = TypeDef.create(PrimitiveType.BIGINT);\n        Assert.assertNotEquals(type.getType(), type4.getType());\n    }\n","date":"2020-07-21 12:42:42","endLine":116,"groupId":"8032","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testDecimal","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-incubatordoris-10-0.7/blobInfo/CC_OUT/blobs/32/ad5e47cb88dd9c941cc6ba323c5946d51bedf8.src","preCode":"    public void testDecimal() throws AnalysisException {\n        TypeDef type = TypeDef.createDecimal(12, 5);\n        type.analyze(null);\n        Assert.assertEquals(\"decimal(12, 5)\", type.toString());\n        Assert.assertEquals(PrimitiveType.DECIMAL, type.getType().getPrimitiveType());\n        Assert.assertEquals(12, ((ScalarType) type.getType()).getScalarPrecision());\n        Assert.assertEquals(5, ((ScalarType) type.getType()).getScalarScale());\n\n        \r\n        TypeDef type2 = TypeDef.createDecimal(12, 5);\n        Assert.assertEquals(type.getType(), type2.getType());\n\n        \r\n        TypeDef type3 = TypeDef.createDecimal(11, 5);\n        Assert.assertNotEquals(type.getType(), type3.getType());\n        type3 = TypeDef.createDecimal(12, 4);\n        Assert.assertNotEquals(type.getType(), type3.getType());\n\n        \r\n        TypeDef type4 = TypeDef.create(PrimitiveType.BIGINT);\n        Assert.assertNotEquals(type.getType(), type4.getType());\n    }\n","realPath":"fe/fe-core/src/test/java/org/apache/doris/catalog/ColumnTypeTest.java","repoName":"incubatordoris","snippetEndLine":0,"snippetStartLine":0,"startLine":95,"status":"B"}],"commitId":"ad17afef9139a9aeedeb2e92638e95886d515f14","commitMessage":"@@@[CodeRefactor] #4098 Make FE multi module (#4099)\n\nThis PR change the FE code structure to maven multi module structure. \nSee ISSUE: #4098 for more info.  such as How to resolve conflicts.","date":"2020-07-21 12:42:42","modifiedFileCount":"0","status":"B","submitter":"Mingyu Chen"},{"authorTime":"2021-07-07 10:26:32","codes":[{"authorDate":"2020-07-21 12:42:42","commitOrder":2,"curCode":"    public void testCharType() throws AnalysisException {\n        TypeDef type = TypeDef.createVarchar(10);\n        type.analyze(null);\n        Assert.assertEquals(\"varchar(10)\", type.toString());\n        Assert.assertEquals(PrimitiveType.VARCHAR, type.getType().getPrimitiveType());\n        Assert.assertEquals(10, ((ScalarType) type.getType()).getLength());\n\n        \r\n        TypeDef type2 = TypeDef.createVarchar(10);\n        Assert.assertEquals(type.getType(), type2.getType());\n\n        \r\n        TypeDef type3 = TypeDef.createVarchar(3);\n        Assert.assertNotEquals(type.getType(), type3.getType());\n\n        \r\n        TypeDef type4 = TypeDef.create(PrimitiveType.BIGINT);\n        Assert.assertNotEquals(type.getType(), type4.getType());\n    }\n","date":"2020-07-21 12:42:42","endLine":85,"groupId":"10561","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testCharType","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-incubatordoris-10-0.7/blobInfo/CC_OUT/blobs/32/ad5e47cb88dd9c941cc6ba323c5946d51bedf8.src","preCode":"    public void testCharType() throws AnalysisException {\n        TypeDef type = TypeDef.createVarchar(10);\n        type.analyze(null);\n        Assert.assertEquals(\"varchar(10)\", type.toString());\n        Assert.assertEquals(PrimitiveType.VARCHAR, type.getType().getPrimitiveType());\n        Assert.assertEquals(10, ((ScalarType) type.getType()).getLength());\n\n        \r\n        TypeDef type2 = TypeDef.createVarchar(10);\n        Assert.assertEquals(type.getType(), type2.getType());\n\n        \r\n        TypeDef type3 = TypeDef.createVarchar(3);\n        Assert.assertNotEquals(type.getType(), type3.getType());\n\n        \r\n        TypeDef type4 = TypeDef.create(PrimitiveType.BIGINT);\n        Assert.assertNotEquals(type.getType(), type4.getType());\n    }\n","realPath":"fe/fe-core/src/test/java/org/apache/doris/catalog/ColumnTypeTest.java","repoName":"incubatordoris","snippetEndLine":0,"snippetStartLine":0,"startLine":67,"status":"N"},{"authorDate":"2021-07-07 10:26:32","commitOrder":2,"curCode":"    public void testDecimal() throws AnalysisException {\n        TypeDef type = TypeDef.createDecimal(12, 5);\n        type.analyze(null);\n        Assert.assertEquals(\"decimal(12, 5)\", type.toString());\n        Assert.assertEquals(PrimitiveType.DECIMALV2, type.getType().getPrimitiveType());\n        Assert.assertEquals(12, ((ScalarType) type.getType()).getScalarPrecision());\n        Assert.assertEquals(5, ((ScalarType) type.getType()).getScalarScale());\n\n        \r\n        TypeDef type2 = TypeDef.createDecimal(12, 5);\n        Assert.assertEquals(type.getType(), type2.getType());\n\n        \r\n        TypeDef type3 = TypeDef.createDecimal(11, 5);\n        Assert.assertNotEquals(type.getType(), type3.getType());\n        type3 = TypeDef.createDecimal(12, 4);\n        Assert.assertNotEquals(type.getType(), type3.getType());\n\n        \r\n        TypeDef type4 = TypeDef.create(PrimitiveType.BIGINT);\n        Assert.assertNotEquals(type.getType(), type4.getType());\n    }\n","date":"2021-07-07 10:26:32","endLine":116,"groupId":"10561","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"testDecimal","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-incubatordoris-10-0.7/blobInfo/CC_OUT/blobs/62/3a6722223ddbf2f0450d46526d3b5abef61cd4.src","preCode":"    public void testDecimal() throws AnalysisException {\n        TypeDef type = TypeDef.createDecimal(12, 5);\n        type.analyze(null);\n        Assert.assertEquals(\"decimal(12, 5)\", type.toString());\n        Assert.assertEquals(PrimitiveType.DECIMAL, type.getType().getPrimitiveType());\n        Assert.assertEquals(12, ((ScalarType) type.getType()).getScalarPrecision());\n        Assert.assertEquals(5, ((ScalarType) type.getType()).getScalarScale());\n\n        \r\n        TypeDef type2 = TypeDef.createDecimal(12, 5);\n        Assert.assertEquals(type.getType(), type2.getType());\n\n        \r\n        TypeDef type3 = TypeDef.createDecimal(11, 5);\n        Assert.assertNotEquals(type.getType(), type3.getType());\n        type3 = TypeDef.createDecimal(12, 4);\n        Assert.assertNotEquals(type.getType(), type3.getType());\n\n        \r\n        TypeDef type4 = TypeDef.create(PrimitiveType.BIGINT);\n        Assert.assertNotEquals(type.getType(), type4.getType());\n    }\n","realPath":"fe/fe-core/src/test/java/org/apache/doris/catalog/ColumnTypeTest.java","repoName":"incubatordoris","snippetEndLine":0,"snippetStartLine":0,"startLine":95,"status":"M"}],"commitId":"739c0268ff94fe1c697fd8cc8642d3bb5162a714","commitMessage":"@@@[refactor] Remove decimal v1 related code from code base (#6079)\n\nremove ALL DECIMAL V1 type code ? this is a part of #6073","date":"2021-07-07 10:26:32","modifiedFileCount":"35","status":"M","submitter":"Zhengguo Yang"}]
