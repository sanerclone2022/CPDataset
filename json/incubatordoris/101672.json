[{"authorTime":"2018-10-31 17:07:16","codes":[{"authorDate":"2018-10-31 17:07:16","commitOrder":1,"curCode":"    public ByteBuffer pread(TBrokerFD fd, long offset, long length) {\n        FSDataInputStream fsDataInputStream = clientContextManager.getFsDataInputStream(fd);\n        synchronized (fsDataInputStream) {\n            long currentStreamOffset;\n            try {\n                currentStreamOffset = fsDataInputStream.getPos();\n            } catch (IOException e) {\n                logger.error(\"errors while get file pos from output stream\", e);\n                throw new BrokerException(TBrokerOperationStatusCode.TARGET_STORAGE_SERVICE_ERROR,\n                        \"errors while get file pos from output stream\");\n            }\n            if (currentStreamOffset != offset) {\n                logger.warn(\"invalid offset, current read offset is \"\n                        + currentStreamOffset + \" is not equal to request offset \"\n                        + offset + \" seek to it\");\n                try {\n                    fsDataInputStream.seek(offset);\n                } catch (IOException e) {\n                    throw new BrokerException(TBrokerOperationStatusCode.INVALID_INPUT_OFFSET,\n                            e, \"current read offset {} is not equal to {}, and could not seek to it\",\n                            currentStreamOffset, offset);\n                }\n            }\n            byte[] buf;\n            if (length > readBufferSize) {\n                buf = new byte[readBufferSize];\n            } else {\n                buf = new byte[(int) length];\n            }\n            try {\n                int readLength = fsDataInputStream.read(buf);\n                if (readLength < 0) {\n                    throw new BrokerException(TBrokerOperationStatusCode.END_OF_FILE,\n                            \"end of file reached\");\n                }\n                return ByteBuffer.wrap(buf, 0, readLength);\n            } catch (IOException e) {\n                logger.error(\"errors while read data from stream\", e);\n                throw new BrokerException(TBrokerOperationStatusCode.TARGET_STORAGE_SERVICE_ERROR,\n                        e, \"errors while write data to output stream\");\n            }\n        }\n    }\n","date":"2018-10-31 17:07:16","endLine":437,"groupId":"1368","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"pread","params":"(TBrokerFDfd@longoffset@longlength)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-incubatordoris-10-0.7/blobInfo/CC_OUT/blobs/53/f69ffca853919401d5baea51f8c439e00cd324.src","preCode":"    public ByteBuffer pread(TBrokerFD fd, long offset, long length) {\n        FSDataInputStream fsDataInputStream = clientContextManager.getFsDataInputStream(fd);\n        synchronized (fsDataInputStream) {\n            long currentStreamOffset;\n            try {\n                currentStreamOffset = fsDataInputStream.getPos();\n            } catch (IOException e) {\n                logger.error(\"errors while get file pos from output stream\", e);\n                throw new BrokerException(TBrokerOperationStatusCode.TARGET_STORAGE_SERVICE_ERROR,\n                        \"errors while get file pos from output stream\");\n            }\n            if (currentStreamOffset != offset) {\n                logger.warn(\"invalid offset, current read offset is \"\n                        + currentStreamOffset + \" is not equal to request offset \"\n                        + offset + \" seek to it\");\n                try {\n                    fsDataInputStream.seek(offset);\n                } catch (IOException e) {\n                    throw new BrokerException(TBrokerOperationStatusCode.INVALID_INPUT_OFFSET,\n                            e, \"current read offset {} is not equal to {}, and could not seek to it\",\n                            currentStreamOffset, offset);\n                }\n            }\n            byte[] buf;\n            if (length > readBufferSize) {\n                buf = new byte[readBufferSize];\n            } else {\n                buf = new byte[(int) length];\n            }\n            try {\n                int readLength = fsDataInputStream.read(buf);\n                if (readLength < 0) {\n                    throw new BrokerException(TBrokerOperationStatusCode.END_OF_FILE,\n                            \"end of file reached\");\n                }\n                return ByteBuffer.wrap(buf, 0, readLength);\n            } catch (IOException e) {\n                logger.error(\"errors while read data from stream\", e);\n                throw new BrokerException(TBrokerOperationStatusCode.TARGET_STORAGE_SERVICE_ERROR,\n                        e, \"errors while write data to output stream\");\n            }\n        }\n    }\n","realPath":"fs_brokers/apache_hdfs_broker/src/main/java/org/apache/doris/broker/hdfs/FileSystemManager.java","repoName":"incubatordoris","snippetEndLine":0,"snippetStartLine":0,"startLine":395,"status":"B"},{"authorDate":"2018-10-31 17:07:16","commitOrder":1,"curCode":"    public void pwrite(TBrokerFD fd, long offset, byte[] data) {\n        FSDataOutputStream fsDataOutputStream = clientContextManager.getFsDataOutputStream(fd);\n        synchronized (fsDataOutputStream) {\n            long currentStreamOffset;\n            try {\n                currentStreamOffset = fsDataOutputStream.getPos();\n            } catch (IOException e) {\n                logger.error(\"errors while get file pos from output stream\", e);\n                throw new BrokerException(TBrokerOperationStatusCode.TARGET_STORAGE_SERVICE_ERROR,\n                        \"errors while get file pos from output stream\");\n            }\n            if (currentStreamOffset != offset) {\n                throw new BrokerException(TBrokerOperationStatusCode.INVALID_INPUT_OFFSET,\n                        \"current outputstream offset is {} not equal to request {}\",\n                        currentStreamOffset, offset);\n            }\n            try {\n                fsDataOutputStream.write(data);\n            } catch (IOException e) {\n                logger.error(\"errors while write data to output stream\", e);\n                throw new BrokerException(TBrokerOperationStatusCode.TARGET_STORAGE_SERVICE_ERROR,\n                        e, \"errors while write data to output stream\");\n            }\n        }\n    }\n","date":"2018-10-31 17:07:16","endLine":500,"groupId":"8192","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"pwrite","params":"(TBrokerFDfd@longoffset@byte[]data)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-incubatordoris-10-0.7/blobInfo/CC_OUT/blobs/53/f69ffca853919401d5baea51f8c439e00cd324.src","preCode":"    public void pwrite(TBrokerFD fd, long offset, byte[] data) {\n        FSDataOutputStream fsDataOutputStream = clientContextManager.getFsDataOutputStream(fd);\n        synchronized (fsDataOutputStream) {\n            long currentStreamOffset;\n            try {\n                currentStreamOffset = fsDataOutputStream.getPos();\n            } catch (IOException e) {\n                logger.error(\"errors while get file pos from output stream\", e);\n                throw new BrokerException(TBrokerOperationStatusCode.TARGET_STORAGE_SERVICE_ERROR,\n                        \"errors while get file pos from output stream\");\n            }\n            if (currentStreamOffset != offset) {\n                throw new BrokerException(TBrokerOperationStatusCode.INVALID_INPUT_OFFSET,\n                        \"current outputstream offset is {} not equal to request {}\",\n                        currentStreamOffset, offset);\n            }\n            try {\n                fsDataOutputStream.write(data);\n            } catch (IOException e) {\n                logger.error(\"errors while write data to output stream\", e);\n                throw new BrokerException(TBrokerOperationStatusCode.TARGET_STORAGE_SERVICE_ERROR,\n                        e, \"errors while write data to output stream\");\n            }\n        }\n    }\n","realPath":"fs_brokers/apache_hdfs_broker/src/main/java/org/apache/doris/broker/hdfs/FileSystemManager.java","repoName":"incubatordoris","snippetEndLine":0,"snippetStartLine":0,"startLine":476,"status":"B"}],"commitId":"2be79915612a9387ccb9686076a5f0c8f042c10d","commitMessage":"@@@Change com.baidu.palo to org.apache.doris\n\n    Change some package names in fe/fs_brokers/gensrc dir.\n","date":"2018-10-31 17:07:16","modifiedFileCount":"0","status":"B","submitter":"morningman"},{"authorTime":"2018-10-31 17:07:16","codes":[{"authorDate":"2020-03-04 11:03:01","commitOrder":2,"curCode":"    public ByteBuffer pread(TBrokerFD fd, long offset, long length) {\n        FSDataInputStream fsDataInputStream = clientContextManager.getFsDataInputStream(fd);\n        synchronized (fsDataInputStream) {\n            long currentStreamOffset;\n            try {\n                currentStreamOffset = fsDataInputStream.getPos();\n            } catch (IOException e) {\n                logger.error(\"errors while get file pos from output stream\", e);\n                throw new BrokerException(TBrokerOperationStatusCode.TARGET_STORAGE_SERVICE_ERROR,\n                        \"errors while get file pos from output stream\");\n            }\n            if (currentStreamOffset != offset) {\n                \r\n                logger.debug(\"invalid offset, current read offset is \"\n                        + currentStreamOffset + \" is not equal to request offset \"\n                        + offset + \" seek to it\");\n                try {\n                    fsDataInputStream.seek(offset);\n                } catch (IOException e) {\n                    throw new BrokerException(TBrokerOperationStatusCode.INVALID_INPUT_OFFSET,\n                            e, \"current read offset {} is not equal to {}, and could not seek to it\",\n                            currentStreamOffset, offset);\n                }\n            }\n            byte[] buf;\n            if (length > readBufferSize) {\n                buf = new byte[readBufferSize];\n            } else {\n                buf = new byte[(int) length];\n            }\n            try {\n                int readLength = fsDataInputStream.read(buf);\n                if (readLength < 0) {\n                    throw new BrokerException(TBrokerOperationStatusCode.END_OF_FILE,\n                            \"end of file reached\");\n                }\n                return ByteBuffer.wrap(buf, 0, readLength);\n            } catch (IOException e) {\n                logger.error(\"errors while read data from stream\", e);\n                throw new BrokerException(TBrokerOperationStatusCode.TARGET_STORAGE_SERVICE_ERROR,\n                        e, \"errors while write data to output stream\");\n            }\n        }\n    }\n","date":"2020-03-04 11:03:01","endLine":557,"groupId":"7818","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"pread","params":"(TBrokerFDfd@longoffset@longlength)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-incubatordoris-10-0.7/blobInfo/CC_OUT/blobs/38/26f21f332581161f80abaaf92cc56a43e24d2c.src","preCode":"    public ByteBuffer pread(TBrokerFD fd, long offset, long length) {\n        FSDataInputStream fsDataInputStream = clientContextManager.getFsDataInputStream(fd);\n        synchronized (fsDataInputStream) {\n            long currentStreamOffset;\n            try {\n                currentStreamOffset = fsDataInputStream.getPos();\n            } catch (IOException e) {\n                logger.error(\"errors while get file pos from output stream\", e);\n                throw new BrokerException(TBrokerOperationStatusCode.TARGET_STORAGE_SERVICE_ERROR,\n                        \"errors while get file pos from output stream\");\n            }\n            if (currentStreamOffset != offset) {\n                logger.warn(\"invalid offset, current read offset is \"\n                        + currentStreamOffset + \" is not equal to request offset \"\n                        + offset + \" seek to it\");\n                try {\n                    fsDataInputStream.seek(offset);\n                } catch (IOException e) {\n                    throw new BrokerException(TBrokerOperationStatusCode.INVALID_INPUT_OFFSET,\n                            e, \"current read offset {} is not equal to {}, and could not seek to it\",\n                            currentStreamOffset, offset);\n                }\n            }\n            byte[] buf;\n            if (length > readBufferSize) {\n                buf = new byte[readBufferSize];\n            } else {\n                buf = new byte[(int) length];\n            }\n            try {\n                int readLength = fsDataInputStream.read(buf);\n                if (readLength < 0) {\n                    throw new BrokerException(TBrokerOperationStatusCode.END_OF_FILE,\n                            \"end of file reached\");\n                }\n                return ByteBuffer.wrap(buf, 0, readLength);\n            } catch (IOException e) {\n                logger.error(\"errors while read data from stream\", e);\n                throw new BrokerException(TBrokerOperationStatusCode.TARGET_STORAGE_SERVICE_ERROR,\n                        e, \"errors while write data to output stream\");\n            }\n        }\n    }\n","realPath":"fs_brokers/apache_hdfs_broker/src/main/java/org/apache/doris/broker/hdfs/FileSystemManager.java","repoName":"incubatordoris","snippetEndLine":0,"snippetStartLine":0,"startLine":514,"status":"M"},{"authorDate":"2018-10-31 17:07:16","commitOrder":2,"curCode":"    public void pwrite(TBrokerFD fd, long offset, byte[] data) {\n        FSDataOutputStream fsDataOutputStream = clientContextManager.getFsDataOutputStream(fd);\n        synchronized (fsDataOutputStream) {\n            long currentStreamOffset;\n            try {\n                currentStreamOffset = fsDataOutputStream.getPos();\n            } catch (IOException e) {\n                logger.error(\"errors while get file pos from output stream\", e);\n                throw new BrokerException(TBrokerOperationStatusCode.TARGET_STORAGE_SERVICE_ERROR,\n                        \"errors while get file pos from output stream\");\n            }\n            if (currentStreamOffset != offset) {\n                throw new BrokerException(TBrokerOperationStatusCode.INVALID_INPUT_OFFSET,\n                        \"current outputstream offset is {} not equal to request {}\",\n                        currentStreamOffset, offset);\n            }\n            try {\n                fsDataOutputStream.write(data);\n            } catch (IOException e) {\n                logger.error(\"errors while write data to output stream\", e);\n                throw new BrokerException(TBrokerOperationStatusCode.TARGET_STORAGE_SERVICE_ERROR,\n                        e, \"errors while write data to output stream\");\n            }\n        }\n    }\n","date":"2018-10-31 17:07:16","endLine":500,"groupId":"8192","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"pwrite","params":"(TBrokerFDfd@longoffset@byte[]data)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-incubatordoris-10-0.7/blobInfo/CC_OUT/blobs/53/f69ffca853919401d5baea51f8c439e00cd324.src","preCode":"    public void pwrite(TBrokerFD fd, long offset, byte[] data) {\n        FSDataOutputStream fsDataOutputStream = clientContextManager.getFsDataOutputStream(fd);\n        synchronized (fsDataOutputStream) {\n            long currentStreamOffset;\n            try {\n                currentStreamOffset = fsDataOutputStream.getPos();\n            } catch (IOException e) {\n                logger.error(\"errors while get file pos from output stream\", e);\n                throw new BrokerException(TBrokerOperationStatusCode.TARGET_STORAGE_SERVICE_ERROR,\n                        \"errors while get file pos from output stream\");\n            }\n            if (currentStreamOffset != offset) {\n                throw new BrokerException(TBrokerOperationStatusCode.INVALID_INPUT_OFFSET,\n                        \"current outputstream offset is {} not equal to request {}\",\n                        currentStreamOffset, offset);\n            }\n            try {\n                fsDataOutputStream.write(data);\n            } catch (IOException e) {\n                logger.error(\"errors while write data to output stream\", e);\n                throw new BrokerException(TBrokerOperationStatusCode.TARGET_STORAGE_SERVICE_ERROR,\n                        e, \"errors while write data to output stream\");\n            }\n        }\n    }\n","realPath":"fs_brokers/apache_hdfs_broker/src/main/java/org/apache/doris/broker/hdfs/FileSystemManager.java","repoName":"incubatordoris","snippetEndLine":0,"snippetStartLine":0,"startLine":476,"status":"N"}],"commitId":"c032d634f4e19f58450ef09643cdc871e7a40559","commitMessage":"@@@[FsBroker] Fix bug that broker cannot read file with %3A in name (#3028)\n\nThe hdfs support file with name like: \"2018-01-01 00%3A00%3A00\". \nwe should support it.\n\nAlso change the default broker log level to INFO.","date":"2020-03-04 11:03:01","modifiedFileCount":"3","status":"M","submitter":"Mingyu Chen"},{"authorTime":"2018-10-31 17:07:16","codes":[{"authorDate":"2020-06-19 09:33:09","commitOrder":3,"curCode":"    public ByteBuffer pread(TBrokerFD fd, long offset, long length) {\n        FSDataInputStream fsDataInputStream = clientContextManager.getFsDataInputStream(fd);\n        synchronized (fsDataInputStream) {\n            long currentStreamOffset;\n            try {\n                currentStreamOffset = fsDataInputStream.getPos();\n            } catch (IOException e) {\n                logger.error(\"errors while get file pos from output stream\", e);\n                throw new BrokerException(TBrokerOperationStatusCode.TARGET_STORAGE_SERVICE_ERROR,\n                        \"errors while get file pos from output stream\");\n            }\n            if (currentStreamOffset != offset) {\n                \r\n                logger.debug(\"invalid offset, current read offset is \"\n                        + currentStreamOffset + \" is not equal to request offset \"\n                        + offset + \" seek to it\");\n                try {\n                    fsDataInputStream.seek(offset);\n                } catch (IOException e) {\n                    throw new BrokerException(TBrokerOperationStatusCode.INVALID_INPUT_OFFSET,\n                            e, \"current read offset {} is not equal to {}, and could not seek to it\",\n                            currentStreamOffset, offset);\n                }\n            }\n            ByteBuffer buf;\n            if (length > readBufferSize) {\n                buf = ByteBuffer.allocate(readBufferSize);\n            } else {\n                buf = ByteBuffer.allocate((int) length);\n            }\n            try {\n                int readLength = readByteBufferFully(fsDataInputStream, buf);\n                if (readLength < 0) {\n                    throw new BrokerException(TBrokerOperationStatusCode.END_OF_FILE,\n                            \"end of file reached\");\n                }\n                if (logger.isDebugEnable()) {\n                    logger.debug(\"read buffer from input stream, buffer size:\" + buf.capacity() + \", read length:\" + readLength);\n                }\n                return buf;\n            } catch (IOException e) {\n                logger.error(\"errors while read data from stream\", e);\n                throw new BrokerException(TBrokerOperationStatusCode.TARGET_STORAGE_SERVICE_ERROR,\n                        e, \"errors while write data to output stream\");\n            }\n        }\n    }\n","date":"2020-06-19 09:33:09","endLine":575,"groupId":"4043","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"pread","params":"(TBrokerFDfd@longoffset@longlength)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-incubatordoris-10-0.7/blobInfo/CC_OUT/blobs/32/b2d76d8b8e1e063fc87c47468947162de41de4.src","preCode":"    public ByteBuffer pread(TBrokerFD fd, long offset, long length) {\n        FSDataInputStream fsDataInputStream = clientContextManager.getFsDataInputStream(fd);\n        synchronized (fsDataInputStream) {\n            long currentStreamOffset;\n            try {\n                currentStreamOffset = fsDataInputStream.getPos();\n            } catch (IOException e) {\n                logger.error(\"errors while get file pos from output stream\", e);\n                throw new BrokerException(TBrokerOperationStatusCode.TARGET_STORAGE_SERVICE_ERROR,\n                        \"errors while get file pos from output stream\");\n            }\n            if (currentStreamOffset != offset) {\n                \r\n                logger.debug(\"invalid offset, current read offset is \"\n                        + currentStreamOffset + \" is not equal to request offset \"\n                        + offset + \" seek to it\");\n                try {\n                    fsDataInputStream.seek(offset);\n                } catch (IOException e) {\n                    throw new BrokerException(TBrokerOperationStatusCode.INVALID_INPUT_OFFSET,\n                            e, \"current read offset {} is not equal to {}, and could not seek to it\",\n                            currentStreamOffset, offset);\n                }\n            }\n            byte[] buf;\n            if (length > readBufferSize) {\n                buf = new byte[readBufferSize];\n            } else {\n                buf = new byte[(int) length];\n            }\n            try {\n                int readLength = fsDataInputStream.read(buf);\n                if (readLength < 0) {\n                    throw new BrokerException(TBrokerOperationStatusCode.END_OF_FILE,\n                            \"end of file reached\");\n                }\n                return ByteBuffer.wrap(buf, 0, readLength);\n            } catch (IOException e) {\n                logger.error(\"errors while read data from stream\", e);\n                throw new BrokerException(TBrokerOperationStatusCode.TARGET_STORAGE_SERVICE_ERROR,\n                        e, \"errors while write data to output stream\");\n            }\n        }\n    }\n","realPath":"fs_brokers/apache_hdfs_broker/src/main/java/org/apache/doris/broker/hdfs/FileSystemManager.java","repoName":"incubatordoris","snippetEndLine":0,"snippetStartLine":0,"startLine":529,"status":"M"},{"authorDate":"2018-10-31 17:07:16","commitOrder":3,"curCode":"    public void pwrite(TBrokerFD fd, long offset, byte[] data) {\n        FSDataOutputStream fsDataOutputStream = clientContextManager.getFsDataOutputStream(fd);\n        synchronized (fsDataOutputStream) {\n            long currentStreamOffset;\n            try {\n                currentStreamOffset = fsDataOutputStream.getPos();\n            } catch (IOException e) {\n                logger.error(\"errors while get file pos from output stream\", e);\n                throw new BrokerException(TBrokerOperationStatusCode.TARGET_STORAGE_SERVICE_ERROR,\n                        \"errors while get file pos from output stream\");\n            }\n            if (currentStreamOffset != offset) {\n                throw new BrokerException(TBrokerOperationStatusCode.INVALID_INPUT_OFFSET,\n                        \"current outputstream offset is {} not equal to request {}\",\n                        currentStreamOffset, offset);\n            }\n            try {\n                fsDataOutputStream.write(data);\n            } catch (IOException e) {\n                logger.error(\"errors while write data to output stream\", e);\n                throw new BrokerException(TBrokerOperationStatusCode.TARGET_STORAGE_SERVICE_ERROR,\n                        e, \"errors while write data to output stream\");\n            }\n        }\n    }\n","date":"2018-10-31 17:07:16","endLine":500,"groupId":"8192","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"pwrite","params":"(TBrokerFDfd@longoffset@byte[]data)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-incubatordoris-10-0.7/blobInfo/CC_OUT/blobs/53/f69ffca853919401d5baea51f8c439e00cd324.src","preCode":"    public void pwrite(TBrokerFD fd, long offset, byte[] data) {\n        FSDataOutputStream fsDataOutputStream = clientContextManager.getFsDataOutputStream(fd);\n        synchronized (fsDataOutputStream) {\n            long currentStreamOffset;\n            try {\n                currentStreamOffset = fsDataOutputStream.getPos();\n            } catch (IOException e) {\n                logger.error(\"errors while get file pos from output stream\", e);\n                throw new BrokerException(TBrokerOperationStatusCode.TARGET_STORAGE_SERVICE_ERROR,\n                        \"errors while get file pos from output stream\");\n            }\n            if (currentStreamOffset != offset) {\n                throw new BrokerException(TBrokerOperationStatusCode.INVALID_INPUT_OFFSET,\n                        \"current outputstream offset is {} not equal to request {}\",\n                        currentStreamOffset, offset);\n            }\n            try {\n                fsDataOutputStream.write(data);\n            } catch (IOException e) {\n                logger.error(\"errors while write data to output stream\", e);\n                throw new BrokerException(TBrokerOperationStatusCode.TARGET_STORAGE_SERVICE_ERROR,\n                        e, \"errors while write data to output stream\");\n            }\n        }\n    }\n","realPath":"fs_brokers/apache_hdfs_broker/src/main/java/org/apache/doris/broker/hdfs/FileSystemManager.java","repoName":"incubatordoris","snippetEndLine":0,"snippetStartLine":0,"startLine":476,"status":"N"}],"commitId":"1d9fa5071d1bd80582d4148c13e6e8d2d985c9e0","commitMessage":"@@@[BUG][Broker] Fix broker read buffer size from input stream (#3881)\n\nThis commit fixs a bug that broker cannot read the full length of buffer size.  when the buffer size is set larger than 128k.\n\nThis bug will cause the data size returned by pread request to be less than 128K all the time.","date":"2020-06-19 09:33:09","modifiedFileCount":"1","status":"M","submitter":"xy720"},{"authorTime":"2018-10-31 17:07:16","codes":[{"authorDate":"2020-06-20 09:32:14","commitOrder":4,"curCode":"    public ByteBuffer pread(TBrokerFD fd, long offset, long length) {\n        FSDataInputStream fsDataInputStream = clientContextManager.getFsDataInputStream(fd);\n        synchronized (fsDataInputStream) {\n            long currentStreamOffset;\n            try {\n                currentStreamOffset = fsDataInputStream.getPos();\n            } catch (IOException e) {\n                logger.error(\"errors while get file pos from output stream\", e);\n                throw new BrokerException(TBrokerOperationStatusCode.TARGET_STORAGE_SERVICE_ERROR,\n                        \"errors while get file pos from output stream\");\n            }\n            if (currentStreamOffset != offset) {\n                \r\n                logger.debug(\"invalid offset, current read offset is \"\n                        + currentStreamOffset + \" is not equal to request offset \"\n                        + offset + \" seek to it\");\n                try {\n                    fsDataInputStream.seek(offset);\n                } catch (IOException e) {\n                    throw new BrokerException(TBrokerOperationStatusCode.INVALID_INPUT_OFFSET,\n                            e, \"current read offset {} is not equal to {}, and could not seek to it\",\n                            currentStreamOffset, offset);\n                }\n            }\n            ByteBuffer buf;\n            if (length > readBufferSize) {\n                buf = ByteBuffer.allocate(readBufferSize);\n            } else {\n                buf = ByteBuffer.allocate((int) length);\n            }\n            try {\n                int readLength = readByteBufferFully(fsDataInputStream, buf);\n                if (readLength < 0) {\n                    throw new BrokerException(TBrokerOperationStatusCode.END_OF_FILE,\n                            \"end of file reached\");\n                }\n                if (logger.isDebugEnabled()) {\n                    logger.debug(\"read buffer from input stream, buffer size:\" + buf.capacity() + \", read length:\" + readLength);\n                }\n                return buf;\n            } catch (IOException e) {\n                logger.error(\"errors while read data from stream\", e);\n                throw new BrokerException(TBrokerOperationStatusCode.TARGET_STORAGE_SERVICE_ERROR,\n                        e, \"errors while write data to output stream\");\n            }\n        }\n    }\n","date":"2020-06-20 09:32:14","endLine":575,"groupId":"4043","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"pread","params":"(TBrokerFDfd@longoffset@longlength)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-incubatordoris-10-0.7/blobInfo/CC_OUT/blobs/4b/c48fdbf06b87c6ea80df4228c71e1d3b93bd8b.src","preCode":"    public ByteBuffer pread(TBrokerFD fd, long offset, long length) {\n        FSDataInputStream fsDataInputStream = clientContextManager.getFsDataInputStream(fd);\n        synchronized (fsDataInputStream) {\n            long currentStreamOffset;\n            try {\n                currentStreamOffset = fsDataInputStream.getPos();\n            } catch (IOException e) {\n                logger.error(\"errors while get file pos from output stream\", e);\n                throw new BrokerException(TBrokerOperationStatusCode.TARGET_STORAGE_SERVICE_ERROR,\n                        \"errors while get file pos from output stream\");\n            }\n            if (currentStreamOffset != offset) {\n                \r\n                logger.debug(\"invalid offset, current read offset is \"\n                        + currentStreamOffset + \" is not equal to request offset \"\n                        + offset + \" seek to it\");\n                try {\n                    fsDataInputStream.seek(offset);\n                } catch (IOException e) {\n                    throw new BrokerException(TBrokerOperationStatusCode.INVALID_INPUT_OFFSET,\n                            e, \"current read offset {} is not equal to {}, and could not seek to it\",\n                            currentStreamOffset, offset);\n                }\n            }\n            ByteBuffer buf;\n            if (length > readBufferSize) {\n                buf = ByteBuffer.allocate(readBufferSize);\n            } else {\n                buf = ByteBuffer.allocate((int) length);\n            }\n            try {\n                int readLength = readByteBufferFully(fsDataInputStream, buf);\n                if (readLength < 0) {\n                    throw new BrokerException(TBrokerOperationStatusCode.END_OF_FILE,\n                            \"end of file reached\");\n                }\n                if (logger.isDebugEnable()) {\n                    logger.debug(\"read buffer from input stream, buffer size:\" + buf.capacity() + \", read length:\" + readLength);\n                }\n                return buf;\n            } catch (IOException e) {\n                logger.error(\"errors while read data from stream\", e);\n                throw new BrokerException(TBrokerOperationStatusCode.TARGET_STORAGE_SERVICE_ERROR,\n                        e, \"errors while write data to output stream\");\n            }\n        }\n    }\n","realPath":"fs_brokers/apache_hdfs_broker/src/main/java/org/apache/doris/broker/hdfs/FileSystemManager.java","repoName":"incubatordoris","snippetEndLine":0,"snippetStartLine":0,"startLine":529,"status":"M"},{"authorDate":"2018-10-31 17:07:16","commitOrder":4,"curCode":"    public void pwrite(TBrokerFD fd, long offset, byte[] data) {\n        FSDataOutputStream fsDataOutputStream = clientContextManager.getFsDataOutputStream(fd);\n        synchronized (fsDataOutputStream) {\n            long currentStreamOffset;\n            try {\n                currentStreamOffset = fsDataOutputStream.getPos();\n            } catch (IOException e) {\n                logger.error(\"errors while get file pos from output stream\", e);\n                throw new BrokerException(TBrokerOperationStatusCode.TARGET_STORAGE_SERVICE_ERROR,\n                        \"errors while get file pos from output stream\");\n            }\n            if (currentStreamOffset != offset) {\n                throw new BrokerException(TBrokerOperationStatusCode.INVALID_INPUT_OFFSET,\n                        \"current outputstream offset is {} not equal to request {}\",\n                        currentStreamOffset, offset);\n            }\n            try {\n                fsDataOutputStream.write(data);\n            } catch (IOException e) {\n                logger.error(\"errors while write data to output stream\", e);\n                throw new BrokerException(TBrokerOperationStatusCode.TARGET_STORAGE_SERVICE_ERROR,\n                        e, \"errors while write data to output stream\");\n            }\n        }\n    }\n","date":"2018-10-31 17:07:16","endLine":500,"groupId":"8192","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"pwrite","params":"(TBrokerFDfd@longoffset@byte[]data)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-incubatordoris-10-0.7/blobInfo/CC_OUT/blobs/53/f69ffca853919401d5baea51f8c439e00cd324.src","preCode":"    public void pwrite(TBrokerFD fd, long offset, byte[] data) {\n        FSDataOutputStream fsDataOutputStream = clientContextManager.getFsDataOutputStream(fd);\n        synchronized (fsDataOutputStream) {\n            long currentStreamOffset;\n            try {\n                currentStreamOffset = fsDataOutputStream.getPos();\n            } catch (IOException e) {\n                logger.error(\"errors while get file pos from output stream\", e);\n                throw new BrokerException(TBrokerOperationStatusCode.TARGET_STORAGE_SERVICE_ERROR,\n                        \"errors while get file pos from output stream\");\n            }\n            if (currentStreamOffset != offset) {\n                throw new BrokerException(TBrokerOperationStatusCode.INVALID_INPUT_OFFSET,\n                        \"current outputstream offset is {} not equal to request {}\",\n                        currentStreamOffset, offset);\n            }\n            try {\n                fsDataOutputStream.write(data);\n            } catch (IOException e) {\n                logger.error(\"errors while write data to output stream\", e);\n                throw new BrokerException(TBrokerOperationStatusCode.TARGET_STORAGE_SERVICE_ERROR,\n                        e, \"errors while write data to output stream\");\n            }\n        }\n    }\n","realPath":"fs_brokers/apache_hdfs_broker/src/main/java/org/apache/doris/broker/hdfs/FileSystemManager.java","repoName":"incubatordoris","snippetEndLine":0,"snippetStartLine":0,"startLine":476,"status":"N"}],"commitId":"8e895958d649fc78fdc2f58c88adf96583d18d5c","commitMessage":"@@@[Bug] Checkpoint thread is not running (#3913)\n\nThis bug is introduced by PR #3784 \nIn #3784.  I remove the `Catalog.getInstance()`.  and use `Catalog.getCurrentCatalog()` instead.\n\nBut actually.  there are some place that should use the serving catalog explicitly.\n\nMainly changed:\n\n1. Add a new method `getServingCatalog()` to explicitly return the real catalog instance.\n2. Fix a compile bug of broker introduced by #3881 ","date":"2020-06-20 09:32:14","modifiedFileCount":"9","status":"M","submitter":"Mingyu Chen"},{"authorTime":"2018-10-31 17:07:16","codes":[{"authorDate":"2021-08-05 14:16:36","commitOrder":5,"curCode":"    public ByteBuffer pread(TBrokerFD fd, long offset, long length) {\n        FSDataInputStream fsDataInputStream = clientContextManager.getFsDataInputStream(fd);\n        synchronized (fsDataInputStream) {\n            long currentStreamOffset;\n            try {\n                currentStreamOffset = fsDataInputStream.getPos();\n            } catch (IOException e) {\n                logger.error(\"errors while get file pos from output stream\", e);\n                throw new BrokerException(TBrokerOperationStatusCode.TARGET_STORAGE_SERVICE_ERROR,\n                        \"errors while get file pos from output stream\");\n            }\n            if (currentStreamOffset != offset) {\n                \r\n                logger.debug(\"invalid offset, current read offset is \"\n                        + currentStreamOffset + \" is not equal to request offset \"\n                        + offset + \" seek to it\");\n                try {\n                    fsDataInputStream.seek(offset);\n                } catch (IOException e) {\n                    throw new BrokerException(TBrokerOperationStatusCode.INVALID_INPUT_OFFSET,\n                            e, \"current read offset {} is not equal to {}, and could not seek to it\",\n                            currentStreamOffset, offset);\n                }\n            }\n            \r\n            \r\n            \r\n            byte[] buf;\n            if (length > readBufferSize) {\n                buf = new byte[readBufferSize];\n            } else {\n                buf = new byte[(int) length];\n            }\n            try {\n                int readLength = readBytesFully(fsDataInputStream, buf);\n                if (readLength < 0) {\n                    throw new BrokerException(TBrokerOperationStatusCode.END_OF_FILE,\n                            \"end of file reached\");\n                }\n                if (logger.isDebugEnabled()) {\n                    logger.debug(\"read buffer from input stream, buffer size:\" + buf.length + \", read length:\" + readLength);\n                }\n                return ByteBuffer.wrap(buf, 0, readLength);\n            } catch (IOException e) {\n                logger.error(\"errors while read data from stream\", e);\n                throw new BrokerException(TBrokerOperationStatusCode.TARGET_STORAGE_SERVICE_ERROR,\n                        e, \"errors while write data to output stream\");\n            }\n        }\n    }\n","date":"2021-08-05 14:16:36","endLine":589,"groupId":"101672","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"pread","params":"(TBrokerFDfd@longoffset@longlength)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-incubatordoris-10-0.7/blobInfo/CC_OUT/blobs/57/6f3da1d93bf51b572fb1ffca42d3551ef810bd.src","preCode":"    public ByteBuffer pread(TBrokerFD fd, long offset, long length) {\n        FSDataInputStream fsDataInputStream = clientContextManager.getFsDataInputStream(fd);\n        synchronized (fsDataInputStream) {\n            long currentStreamOffset;\n            try {\n                currentStreamOffset = fsDataInputStream.getPos();\n            } catch (IOException e) {\n                logger.error(\"errors while get file pos from output stream\", e);\n                throw new BrokerException(TBrokerOperationStatusCode.TARGET_STORAGE_SERVICE_ERROR,\n                        \"errors while get file pos from output stream\");\n            }\n            if (currentStreamOffset != offset) {\n                \r\n                logger.debug(\"invalid offset, current read offset is \"\n                        + currentStreamOffset + \" is not equal to request offset \"\n                        + offset + \" seek to it\");\n                try {\n                    fsDataInputStream.seek(offset);\n                } catch (IOException e) {\n                    throw new BrokerException(TBrokerOperationStatusCode.INVALID_INPUT_OFFSET,\n                            e, \"current read offset {} is not equal to {}, and could not seek to it\",\n                            currentStreamOffset, offset);\n                }\n            }\n            ByteBuffer buf;\n            if (length > readBufferSize) {\n                buf = ByteBuffer.allocate(readBufferSize);\n            } else {\n                buf = ByteBuffer.allocate((int) length);\n            }\n            try {\n                int readLength = readByteBufferFully(fsDataInputStream, buf);\n                if (readLength < 0) {\n                    throw new BrokerException(TBrokerOperationStatusCode.END_OF_FILE,\n                            \"end of file reached\");\n                }\n                if (logger.isDebugEnabled()) {\n                    logger.debug(\"read buffer from input stream, buffer size:\" + buf.capacity() + \", read length:\" + readLength);\n                }\n                return buf;\n            } catch (IOException e) {\n                logger.error(\"errors while read data from stream\", e);\n                throw new BrokerException(TBrokerOperationStatusCode.TARGET_STORAGE_SERVICE_ERROR,\n                        e, \"errors while write data to output stream\");\n            }\n        }\n    }\n","realPath":"fs_brokers/apache_hdfs_broker/src/main/java/org/apache/doris/broker/hdfs/FileSystemManager.java","repoName":"incubatordoris","snippetEndLine":0,"snippetStartLine":0,"startLine":540,"status":"M"},{"authorDate":"2018-10-31 17:07:16","commitOrder":5,"curCode":"    public void pwrite(TBrokerFD fd, long offset, byte[] data) {\n        FSDataOutputStream fsDataOutputStream = clientContextManager.getFsDataOutputStream(fd);\n        synchronized (fsDataOutputStream) {\n            long currentStreamOffset;\n            try {\n                currentStreamOffset = fsDataOutputStream.getPos();\n            } catch (IOException e) {\n                logger.error(\"errors while get file pos from output stream\", e);\n                throw new BrokerException(TBrokerOperationStatusCode.TARGET_STORAGE_SERVICE_ERROR,\n                        \"errors while get file pos from output stream\");\n            }\n            if (currentStreamOffset != offset) {\n                throw new BrokerException(TBrokerOperationStatusCode.INVALID_INPUT_OFFSET,\n                        \"current outputstream offset is {} not equal to request {}\",\n                        currentStreamOffset, offset);\n            }\n            try {\n                fsDataOutputStream.write(data);\n            } catch (IOException e) {\n                logger.error(\"errors while write data to output stream\", e);\n                throw new BrokerException(TBrokerOperationStatusCode.TARGET_STORAGE_SERVICE_ERROR,\n                        e, \"errors while write data to output stream\");\n            }\n        }\n    }\n","date":"2018-10-31 17:07:16","endLine":500,"groupId":"101672","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"pwrite","params":"(TBrokerFDfd@longoffset@byte[]data)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-incubatordoris-10-0.7/blobInfo/CC_OUT/blobs/53/f69ffca853919401d5baea51f8c439e00cd324.src","preCode":"    public void pwrite(TBrokerFD fd, long offset, byte[] data) {\n        FSDataOutputStream fsDataOutputStream = clientContextManager.getFsDataOutputStream(fd);\n        synchronized (fsDataOutputStream) {\n            long currentStreamOffset;\n            try {\n                currentStreamOffset = fsDataOutputStream.getPos();\n            } catch (IOException e) {\n                logger.error(\"errors while get file pos from output stream\", e);\n                throw new BrokerException(TBrokerOperationStatusCode.TARGET_STORAGE_SERVICE_ERROR,\n                        \"errors while get file pos from output stream\");\n            }\n            if (currentStreamOffset != offset) {\n                throw new BrokerException(TBrokerOperationStatusCode.INVALID_INPUT_OFFSET,\n                        \"current outputstream offset is {} not equal to request {}\",\n                        currentStreamOffset, offset);\n            }\n            try {\n                fsDataOutputStream.write(data);\n            } catch (IOException e) {\n                logger.error(\"errors while write data to output stream\", e);\n                throw new BrokerException(TBrokerOperationStatusCode.TARGET_STORAGE_SERVICE_ERROR,\n                        e, \"errors while write data to output stream\");\n            }\n        }\n    }\n","realPath":"fs_brokers/apache_hdfs_broker/src/main/java/org/apache/doris/broker/hdfs/FileSystemManager.java","repoName":"incubatordoris","snippetEndLine":0,"snippetStartLine":0,"startLine":476,"status":"N"}],"commitId":"12730e7a3b74799f1ca548e8f65b3e80d52911bd","commitMessage":"@@@[Broker] Fix bug that broker can not handle FSDataInputStream which does not implement ByteBufferReadable (#6308)\n\nCurrently.  Doris supports loading OSS/S3A files by using params like fs.s3a.access.key.  but there is a bug when using it to load such type files. The root cause is broker can not handle FSDataInputStream which does not implement ByteBufferReadable.\n\nSee Issue #6307\nS3A input stream to support ByteBufferReadable\nhttps://issues.apache.org/jira/browse/HADOOP-14603","date":"2021-08-05 14:16:36","modifiedFileCount":"1","status":"M","submitter":"Zhanfeng Huo"}]
