[{"authorTime":"2020-07-21 12:42:42","codes":[{"authorDate":"2020-07-21 12:42:42","commitOrder":1,"curCode":"    public void cancel(CancelStmt stmt) throws DdlException {\n        CancelAlterTableStmt cancelAlterTableStmt = (CancelAlterTableStmt) stmt;\n\n        String dbName = cancelAlterTableStmt.getDbName();\n        String tableName = cancelAlterTableStmt.getTableName();\n        Preconditions.checkState(!Strings.isNullOrEmpty(dbName));\n        Preconditions.checkState(!Strings.isNullOrEmpty(tableName));\n\n        Database db = Catalog.getCurrentCatalog().getDb(dbName);\n        if (db == null) {\n            throw new DdlException(\"Database[\" + dbName + \"] does not exist\");\n        }\n\n        AlterJob schemaChangeJob = null;\n        AlterJobV2 schemaChangeJobV2 = null;\n        db.writeLock();\n        try {\n            Table table = db.getTable(tableName);\n            if (table == null) {\n                ErrorReport.reportDdlException(ErrorCode.ERR_BAD_TABLE_ERROR, tableName);\n            }\n            if (!(table instanceof OlapTable)) {\n                ErrorReport.reportDdlException(ErrorCode.ERR_NOT_OLAP_TABLE, tableName);\n            }\n            OlapTable olapTable = (OlapTable) table;\n            if (olapTable.getState() != OlapTableState.SCHEMA_CHANGE) {\n                throw new DdlException(\"Table[\" + tableName + \"] is not under SCHEMA_CHANGE.\");\n            }\n\n            \r\n            List<AlterJobV2> schemaChangeJobV2List = getUnfinishedAlterJobV2ByTableId(olapTable.getId());\n            \r\n            schemaChangeJobV2 = schemaChangeJobV2List.size() == 0 ? null : Iterables.getOnlyElement(schemaChangeJobV2List);\n            if (schemaChangeJobV2 == null) {\n                schemaChangeJob = getAlterJob(olapTable.getId());\n                Preconditions.checkNotNull(schemaChangeJob, olapTable.getId());\n                if (schemaChangeJob.getState() == JobState.FINISHING\n                        || schemaChangeJob.getState() == JobState.FINISHED\n                        || schemaChangeJob.getState() == JobState.CANCELLED) {\n                    throw new DdlException(\"job is already \" + schemaChangeJob.getState().name() + \", can not cancel it\");\n                }\n                schemaChangeJob.cancel(olapTable, \"user cancelled\");\n            }\n        } finally {\n            db.writeUnlock();\n        }\n\n        \r\n        if (schemaChangeJobV2 != null) {\n            if (!schemaChangeJobV2.cancel(\"user cancelled\")) {\n                throw new DdlException(\"Job can not be cancelled. State: \" + schemaChangeJobV2.getJobState());\n            }\n            return;\n        }\n\n        \r\n        if (schemaChangeJob != null && schemaChangeJob.getState() == JobState.CANCELLED) {\n            jobDone(schemaChangeJob);\n        }\n    }\n","date":"2020-07-21 12:42:42","endLine":1676,"groupId":"4183","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"cancel","params":"(CancelStmtstmt)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-incubatordoris-10-0.7/blobInfo/CC_OUT/blobs/98/074f8331cb8bf2d5b54ba922b5cadb3a1d5473.src","preCode":"    public void cancel(CancelStmt stmt) throws DdlException {\n        CancelAlterTableStmt cancelAlterTableStmt = (CancelAlterTableStmt) stmt;\n\n        String dbName = cancelAlterTableStmt.getDbName();\n        String tableName = cancelAlterTableStmt.getTableName();\n        Preconditions.checkState(!Strings.isNullOrEmpty(dbName));\n        Preconditions.checkState(!Strings.isNullOrEmpty(tableName));\n\n        Database db = Catalog.getCurrentCatalog().getDb(dbName);\n        if (db == null) {\n            throw new DdlException(\"Database[\" + dbName + \"] does not exist\");\n        }\n\n        AlterJob schemaChangeJob = null;\n        AlterJobV2 schemaChangeJobV2 = null;\n        db.writeLock();\n        try {\n            Table table = db.getTable(tableName);\n            if (table == null) {\n                ErrorReport.reportDdlException(ErrorCode.ERR_BAD_TABLE_ERROR, tableName);\n            }\n            if (!(table instanceof OlapTable)) {\n                ErrorReport.reportDdlException(ErrorCode.ERR_NOT_OLAP_TABLE, tableName);\n            }\n            OlapTable olapTable = (OlapTable) table;\n            if (olapTable.getState() != OlapTableState.SCHEMA_CHANGE) {\n                throw new DdlException(\"Table[\" + tableName + \"] is not under SCHEMA_CHANGE.\");\n            }\n\n            \r\n            List<AlterJobV2> schemaChangeJobV2List = getUnfinishedAlterJobV2ByTableId(olapTable.getId());\n            \r\n            schemaChangeJobV2 = schemaChangeJobV2List.size() == 0 ? null : Iterables.getOnlyElement(schemaChangeJobV2List);\n            if (schemaChangeJobV2 == null) {\n                schemaChangeJob = getAlterJob(olapTable.getId());\n                Preconditions.checkNotNull(schemaChangeJob, olapTable.getId());\n                if (schemaChangeJob.getState() == JobState.FINISHING\n                        || schemaChangeJob.getState() == JobState.FINISHED\n                        || schemaChangeJob.getState() == JobState.CANCELLED) {\n                    throw new DdlException(\"job is already \" + schemaChangeJob.getState().name() + \", can not cancel it\");\n                }\n                schemaChangeJob.cancel(olapTable, \"user cancelled\");\n            }\n        } finally {\n            db.writeUnlock();\n        }\n\n        \r\n        if (schemaChangeJobV2 != null) {\n            if (!schemaChangeJobV2.cancel(\"user cancelled\")) {\n                throw new DdlException(\"Job can not be cancelled. State: \" + schemaChangeJobV2.getJobState());\n            }\n            return;\n        }\n\n        \r\n        if (schemaChangeJob != null && schemaChangeJob.getState() == JobState.CANCELLED) {\n            jobDone(schemaChangeJob);\n        }\n    }\n","realPath":"fe/fe-core/src/main/java/org/apache/doris/alter/SchemaChangeHandler.java","repoName":"incubatordoris","snippetEndLine":0,"snippetStartLine":0,"startLine":1617,"status":"B"},{"authorDate":"2020-07-21 12:42:42","commitOrder":1,"curCode":"    public void cancel(CancelStmt stmt) throws DdlException {\n        CancelAlterTableStmt cancelAlterTableStmt = (CancelAlterTableStmt) stmt;\n\n        String dbName = cancelAlterTableStmt.getDbName();\n        String tableName = cancelAlterTableStmt.getTableName();\n        Preconditions.checkState(!Strings.isNullOrEmpty(dbName));\n        Preconditions.checkState(!Strings.isNullOrEmpty(tableName));\n\n        Database db = Catalog.getCurrentCatalog().getDb(dbName);\n        if (db == null) {\n            ErrorReport.reportDdlException(ErrorCode.ERR_BAD_DB_ERROR, dbName);\n        }\n\n        AlterJob rollupJob = null;\n        List<AlterJobV2> rollupJobV2List = new ArrayList<>();\n        db.writeLock();\n        try {\n            Table table = db.getTable(tableName);\n            if (table == null) {\n                ErrorReport.reportDdlException(ErrorCode.ERR_BAD_TABLE_ERROR, tableName);\n            }\n            if (!(table instanceof OlapTable)) {\n                ErrorReport.reportDdlException(ErrorCode.ERR_NOT_OLAP_TABLE, tableName);\n            }\n            OlapTable olapTable = (OlapTable) table;\n            if (olapTable.getState() != OlapTableState.ROLLUP) {\n                throw new DdlException(\"Table[\" + tableName + \"] is not under ROLLUP. \"\n                        + \"Use 'ALTER TABLE DROP ROLLUP' if you want to.\");\n            }\n\n            \r\n            if (cancelAlterTableStmt.getAlterJobIdList() != null) {\n                for (Long jobId : cancelAlterTableStmt.getAlterJobIdList()) {\n                    AlterJobV2 alterJobV2 = getUnfinishedAlterJobV2ByJobId(jobId);\n                    if (alterJobV2 == null)\n                        continue;\n                    rollupJobV2List.add(getUnfinishedAlterJobV2ByJobId(jobId));\n                }\n            } else {\n                rollupJobV2List = getUnfinishedAlterJobV2ByTableId(olapTable.getId());\n            }\n            if (rollupJobV2List.size() == 0) {\n                rollupJob = getAlterJob(olapTable.getId());\n                Preconditions.checkNotNull(rollupJob, olapTable.getId());\n                if (rollupJob.getState() == JobState.FINISHED\n                        || rollupJob.getState() == JobState.FINISHING\n                        || rollupJob.getState() == JobState.CANCELLED) {\n                    throw new DdlException(\"job is already \" + rollupJob.getState().name() + \", can not cancel it\");\n                }\n                rollupJob.cancel(olapTable, \"user cancelled\");\n            }\n        } finally {\n            db.writeUnlock();\n        }\n\n        \r\n        if (rollupJobV2List.size() != 0) {\n            for (AlterJobV2 alterJobV2 : rollupJobV2List) {\n                alterJobV2.cancel(\"user cancelled\");\n                if (alterJobV2.isDone()) {\n                    onJobDone(alterJobV2);\n                }\n            }\n            return;\n        }\n\n        \r\n        if (rollupJob != null && rollupJob.getState() == JobState.CANCELLED) {\n            jobDone(rollupJob);\n        }\n    }\n","date":"2020-07-21 12:42:42","endLine":1208,"groupId":"3810","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"cancel","params":"(CancelStmtstmt)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-incubatordoris-10-0.7/blobInfo/CC_OUT/blobs/27/ef6d5eff06761c9e058c0ceac8f12a2ebacf6b.src","preCode":"    public void cancel(CancelStmt stmt) throws DdlException {\n        CancelAlterTableStmt cancelAlterTableStmt = (CancelAlterTableStmt) stmt;\n\n        String dbName = cancelAlterTableStmt.getDbName();\n        String tableName = cancelAlterTableStmt.getTableName();\n        Preconditions.checkState(!Strings.isNullOrEmpty(dbName));\n        Preconditions.checkState(!Strings.isNullOrEmpty(tableName));\n\n        Database db = Catalog.getCurrentCatalog().getDb(dbName);\n        if (db == null) {\n            ErrorReport.reportDdlException(ErrorCode.ERR_BAD_DB_ERROR, dbName);\n        }\n\n        AlterJob rollupJob = null;\n        List<AlterJobV2> rollupJobV2List = new ArrayList<>();\n        db.writeLock();\n        try {\n            Table table = db.getTable(tableName);\n            if (table == null) {\n                ErrorReport.reportDdlException(ErrorCode.ERR_BAD_TABLE_ERROR, tableName);\n            }\n            if (!(table instanceof OlapTable)) {\n                ErrorReport.reportDdlException(ErrorCode.ERR_NOT_OLAP_TABLE, tableName);\n            }\n            OlapTable olapTable = (OlapTable) table;\n            if (olapTable.getState() != OlapTableState.ROLLUP) {\n                throw new DdlException(\"Table[\" + tableName + \"] is not under ROLLUP. \"\n                        + \"Use 'ALTER TABLE DROP ROLLUP' if you want to.\");\n            }\n\n            \r\n            if (cancelAlterTableStmt.getAlterJobIdList() != null) {\n                for (Long jobId : cancelAlterTableStmt.getAlterJobIdList()) {\n                    AlterJobV2 alterJobV2 = getUnfinishedAlterJobV2ByJobId(jobId);\n                    if (alterJobV2 == null)\n                        continue;\n                    rollupJobV2List.add(getUnfinishedAlterJobV2ByJobId(jobId));\n                }\n            } else {\n                rollupJobV2List = getUnfinishedAlterJobV2ByTableId(olapTable.getId());\n            }\n            if (rollupJobV2List.size() == 0) {\n                rollupJob = getAlterJob(olapTable.getId());\n                Preconditions.checkNotNull(rollupJob, olapTable.getId());\n                if (rollupJob.getState() == JobState.FINISHED\n                        || rollupJob.getState() == JobState.FINISHING\n                        || rollupJob.getState() == JobState.CANCELLED) {\n                    throw new DdlException(\"job is already \" + rollupJob.getState().name() + \", can not cancel it\");\n                }\n                rollupJob.cancel(olapTable, \"user cancelled\");\n            }\n        } finally {\n            db.writeUnlock();\n        }\n\n        \r\n        if (rollupJobV2List.size() != 0) {\n            for (AlterJobV2 alterJobV2 : rollupJobV2List) {\n                alterJobV2.cancel(\"user cancelled\");\n                if (alterJobV2.isDone()) {\n                    onJobDone(alterJobV2);\n                }\n            }\n            return;\n        }\n\n        \r\n        if (rollupJob != null && rollupJob.getState() == JobState.CANCELLED) {\n            jobDone(rollupJob);\n        }\n    }\n","realPath":"fe/fe-core/src/main/java/org/apache/doris/alter/MaterializedViewHandler.java","repoName":"incubatordoris","snippetEndLine":0,"snippetStartLine":0,"startLine":1138,"status":"B"}],"commitId":"ad17afef9139a9aeedeb2e92638e95886d515f14","commitMessage":"@@@[CodeRefactor] #4098 Make FE multi module (#4099)\n\nThis PR change the FE code structure to maven multi module structure. \nSee ISSUE: #4098 for more info.  such as How to resolve conflicts.","date":"2020-07-21 12:42:42","modifiedFileCount":"0","status":"B","submitter":"Mingyu Chen"},{"authorTime":"2021-01-13 10:27:58","codes":[{"authorDate":"2021-01-13 10:27:58","commitOrder":2,"curCode":"    public void cancel(CancelStmt stmt) throws DdlException {\n        CancelAlterTableStmt cancelAlterTableStmt = (CancelAlterTableStmt) stmt;\n\n        String dbName = cancelAlterTableStmt.getDbName();\n        String tableName = cancelAlterTableStmt.getTableName();\n        Preconditions.checkState(!Strings.isNullOrEmpty(dbName));\n        Preconditions.checkState(!Strings.isNullOrEmpty(tableName));\n\n        Database db = Catalog.getCurrentCatalog().getDb(dbName);\n        if (db == null) {\n            throw new DdlException(\"Database[\" + dbName + \"] does not exist\");\n        }\n\n        AlterJob schemaChangeJob = null;\n        AlterJobV2 schemaChangeJobV2 = null;\n\n        OlapTable olapTable = null;\n        try {\n            olapTable = (OlapTable) db.getTableOrThrowException(tableName, Table.TableType.OLAP);\n        } catch (MetaNotFoundException e) {\n            throw new DdlException(e.getMessage());\n        }\n        olapTable.writeLock();\n        try {\n            if (olapTable.getState() != OlapTableState.SCHEMA_CHANGE) {\n                throw new DdlException(\"Table[\" + tableName + \"] is not under SCHEMA_CHANGE.\");\n            }\n\n            \r\n            List<AlterJobV2> schemaChangeJobV2List = getUnfinishedAlterJobV2ByTableId(olapTable.getId());\n            \r\n            schemaChangeJobV2 = schemaChangeJobV2List.size() == 0 ? null : Iterables.getOnlyElement(schemaChangeJobV2List);\n            if (schemaChangeJobV2 == null) {\n                schemaChangeJob = getAlterJob(olapTable.getId());\n                Preconditions.checkNotNull(schemaChangeJob, olapTable.getId());\n                if (schemaChangeJob.getState() == JobState.FINISHING\n                        || schemaChangeJob.getState() == JobState.FINISHED\n                        || schemaChangeJob.getState() == JobState.CANCELLED) {\n                    throw new DdlException(\"job is already \" + schemaChangeJob.getState().name() + \", can not cancel it\");\n                }\n                schemaChangeJob.cancel(olapTable, \"user cancelled\");\n            }\n        } finally {\n            olapTable.writeUnlock();\n        }\n\n        \r\n        if (schemaChangeJobV2 != null) {\n            if (!schemaChangeJobV2.cancel(\"user cancelled\")) {\n                throw new DdlException(\"Job can not be cancelled. State: \" + schemaChangeJobV2.getJobState());\n            }\n            return;\n        }\n\n        \r\n        if (schemaChangeJob != null && schemaChangeJob.getState() == JobState.CANCELLED) {\n            jobDone(schemaChangeJob);\n        }\n    }\n","date":"2021-01-13 10:27:58","endLine":1940,"groupId":"6640","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"cancel","params":"(CancelStmtstmt)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-incubatordoris-10-0.7/blobInfo/CC_OUT/blobs/33/4f9b10348bb850b78cb249fbb5e267430d887d.src","preCode":"    public void cancel(CancelStmt stmt) throws DdlException {\n        CancelAlterTableStmt cancelAlterTableStmt = (CancelAlterTableStmt) stmt;\n\n        String dbName = cancelAlterTableStmt.getDbName();\n        String tableName = cancelAlterTableStmt.getTableName();\n        Preconditions.checkState(!Strings.isNullOrEmpty(dbName));\n        Preconditions.checkState(!Strings.isNullOrEmpty(tableName));\n\n        Database db = Catalog.getCurrentCatalog().getDb(dbName);\n        if (db == null) {\n            throw new DdlException(\"Database[\" + dbName + \"] does not exist\");\n        }\n\n        AlterJob schemaChangeJob = null;\n        AlterJobV2 schemaChangeJobV2 = null;\n        db.writeLock();\n        try {\n            Table table = db.getTable(tableName);\n            if (table == null) {\n                ErrorReport.reportDdlException(ErrorCode.ERR_BAD_TABLE_ERROR, tableName);\n            }\n            if (!(table instanceof OlapTable)) {\n                ErrorReport.reportDdlException(ErrorCode.ERR_NOT_OLAP_TABLE, tableName);\n            }\n            OlapTable olapTable = (OlapTable) table;\n            if (olapTable.getState() != OlapTableState.SCHEMA_CHANGE) {\n                throw new DdlException(\"Table[\" + tableName + \"] is not under SCHEMA_CHANGE.\");\n            }\n\n            \r\n            List<AlterJobV2> schemaChangeJobV2List = getUnfinishedAlterJobV2ByTableId(olapTable.getId());\n            \r\n            schemaChangeJobV2 = schemaChangeJobV2List.size() == 0 ? null : Iterables.getOnlyElement(schemaChangeJobV2List);\n            if (schemaChangeJobV2 == null) {\n                schemaChangeJob = getAlterJob(olapTable.getId());\n                Preconditions.checkNotNull(schemaChangeJob, olapTable.getId());\n                if (schemaChangeJob.getState() == JobState.FINISHING\n                        || schemaChangeJob.getState() == JobState.FINISHED\n                        || schemaChangeJob.getState() == JobState.CANCELLED) {\n                    throw new DdlException(\"job is already \" + schemaChangeJob.getState().name() + \", can not cancel it\");\n                }\n                schemaChangeJob.cancel(olapTable, \"user cancelled\");\n            }\n        } finally {\n            db.writeUnlock();\n        }\n\n        \r\n        if (schemaChangeJobV2 != null) {\n            if (!schemaChangeJobV2.cancel(\"user cancelled\")) {\n                throw new DdlException(\"Job can not be cancelled. State: \" + schemaChangeJobV2.getJobState());\n            }\n            return;\n        }\n\n        \r\n        if (schemaChangeJob != null && schemaChangeJob.getState() == JobState.CANCELLED) {\n            jobDone(schemaChangeJob);\n        }\n    }\n","realPath":"fe/fe-core/src/main/java/org/apache/doris/alter/SchemaChangeHandler.java","repoName":"incubatordoris","snippetEndLine":0,"snippetStartLine":0,"startLine":1882,"status":"M"},{"authorDate":"2021-01-13 10:27:58","commitOrder":2,"curCode":"    public void cancel(CancelStmt stmt) throws DdlException {\n        CancelAlterTableStmt cancelAlterTableStmt = (CancelAlterTableStmt) stmt;\n\n        String dbName = cancelAlterTableStmt.getDbName();\n        String tableName = cancelAlterTableStmt.getTableName();\n        Preconditions.checkState(!Strings.isNullOrEmpty(dbName));\n        Preconditions.checkState(!Strings.isNullOrEmpty(tableName));\n\n        Database db = Catalog.getCurrentCatalog().getDb(dbName);\n        if (db == null) {\n            ErrorReport.reportDdlException(ErrorCode.ERR_BAD_DB_ERROR, dbName);\n        }\n\n        AlterJob rollupJob = null;\n        List<AlterJobV2> rollupJobV2List = new ArrayList<>();\n        OlapTable olapTable = null;\n        try {\n            olapTable = (OlapTable) db.getTableOrThrowException(tableName, Table.TableType.OLAP);\n        } catch (MetaNotFoundException e) {\n            throw new DdlException(e.getMessage());\n        }\n        olapTable.writeLock();\n        try {\n            if (olapTable.getState() != OlapTableState.ROLLUP) {\n                throw new DdlException(\"Table[\" + tableName + \"] is not under ROLLUP. \"\n                        + \"Use 'ALTER TABLE DROP ROLLUP' if you want to.\");\n            }\n\n            \r\n            if (cancelAlterTableStmt.getAlterJobIdList() != null) {\n                for (Long jobId : cancelAlterTableStmt.getAlterJobIdList()) {\n                    AlterJobV2 alterJobV2 = getUnfinishedAlterJobV2ByJobId(jobId);\n                    if (alterJobV2 == null)\n                        continue;\n                    rollupJobV2List.add(getUnfinishedAlterJobV2ByJobId(jobId));\n                }\n            } else {\n                rollupJobV2List = getUnfinishedAlterJobV2ByTableId(olapTable.getId());\n            }\n            if (rollupJobV2List.size() == 0) {\n                rollupJob = getAlterJob(olapTable.getId());\n                Preconditions.checkNotNull(rollupJob, olapTable.getId());\n                if (rollupJob.getState() == JobState.FINISHED\n                        || rollupJob.getState() == JobState.FINISHING\n                        || rollupJob.getState() == JobState.CANCELLED) {\n                    throw new DdlException(\"job is already \" + rollupJob.getState().name() + \", can not cancel it\");\n                }\n                rollupJob.cancel(olapTable, \"user cancelled\");\n            }\n        } finally {\n            olapTable.writeUnlock();\n        }\n\n        \r\n        if (rollupJobV2List.size() != 0) {\n            for (AlterJobV2 alterJobV2 : rollupJobV2List) {\n                alterJobV2.cancel(\"user cancelled\");\n                if (alterJobV2.isDone()) {\n                    onJobDone(alterJobV2);\n                }\n            }\n            return;\n        }\n\n        \r\n        if (rollupJob != null && rollupJob.getState() == JobState.CANCELLED) {\n            jobDone(rollupJob);\n        }\n    }\n","date":"2021-01-13 10:27:58","endLine":1263,"groupId":"3810","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"cancel","params":"(CancelStmtstmt)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-incubatordoris-10-0.7/blobInfo/CC_OUT/blobs/2b/5b8e81e6f5e1d7c4493701b27c59dff53c5651.src","preCode":"    public void cancel(CancelStmt stmt) throws DdlException {\n        CancelAlterTableStmt cancelAlterTableStmt = (CancelAlterTableStmt) stmt;\n\n        String dbName = cancelAlterTableStmt.getDbName();\n        String tableName = cancelAlterTableStmt.getTableName();\n        Preconditions.checkState(!Strings.isNullOrEmpty(dbName));\n        Preconditions.checkState(!Strings.isNullOrEmpty(tableName));\n\n        Database db = Catalog.getCurrentCatalog().getDb(dbName);\n        if (db == null) {\n            ErrorReport.reportDdlException(ErrorCode.ERR_BAD_DB_ERROR, dbName);\n        }\n\n        AlterJob rollupJob = null;\n        List<AlterJobV2> rollupJobV2List = new ArrayList<>();\n        db.writeLock();\n        try {\n            Table table = db.getTable(tableName);\n            if (table == null) {\n                ErrorReport.reportDdlException(ErrorCode.ERR_BAD_TABLE_ERROR, tableName);\n            }\n            if (!(table instanceof OlapTable)) {\n                ErrorReport.reportDdlException(ErrorCode.ERR_NOT_OLAP_TABLE, tableName);\n            }\n            OlapTable olapTable = (OlapTable) table;\n            if (olapTable.getState() != OlapTableState.ROLLUP) {\n                throw new DdlException(\"Table[\" + tableName + \"] is not under ROLLUP. \"\n                        + \"Use 'ALTER TABLE DROP ROLLUP' if you want to.\");\n            }\n\n            \r\n            if (cancelAlterTableStmt.getAlterJobIdList() != null) {\n                for (Long jobId : cancelAlterTableStmt.getAlterJobIdList()) {\n                    AlterJobV2 alterJobV2 = getUnfinishedAlterJobV2ByJobId(jobId);\n                    if (alterJobV2 == null)\n                        continue;\n                    rollupJobV2List.add(getUnfinishedAlterJobV2ByJobId(jobId));\n                }\n            } else {\n                rollupJobV2List = getUnfinishedAlterJobV2ByTableId(olapTable.getId());\n            }\n            if (rollupJobV2List.size() == 0) {\n                rollupJob = getAlterJob(olapTable.getId());\n                Preconditions.checkNotNull(rollupJob, olapTable.getId());\n                if (rollupJob.getState() == JobState.FINISHED\n                        || rollupJob.getState() == JobState.FINISHING\n                        || rollupJob.getState() == JobState.CANCELLED) {\n                    throw new DdlException(\"job is already \" + rollupJob.getState().name() + \", can not cancel it\");\n                }\n                rollupJob.cancel(olapTable, \"user cancelled\");\n            }\n        } finally {\n            db.writeUnlock();\n        }\n\n        \r\n        if (rollupJobV2List.size() != 0) {\n            for (AlterJobV2 alterJobV2 : rollupJobV2List) {\n                alterJobV2.cancel(\"user cancelled\");\n                if (alterJobV2.isDone()) {\n                    onJobDone(alterJobV2);\n                }\n            }\n            return;\n        }\n\n        \r\n        if (rollupJob != null && rollupJob.getState() == JobState.CANCELLED) {\n            jobDone(rollupJob);\n        }\n    }\n","realPath":"fe/fe-core/src/main/java/org/apache/doris/alter/MaterializedViewHandler.java","repoName":"incubatordoris","snippetEndLine":0,"snippetStartLine":0,"startLine":1195,"status":"M"}],"commitId":"f7730031b8eca90c150c400c8d67e008290a6f70","commitMessage":"@@@Support read and write lock in table level to reduce lock competition (#3775)\n\nThis PR is to reduce lock competition by supporting read and write lock in table level. When we modify or read table's meta.  we don't need to get database lock.  just get table write or read lock. And when we get database lock.  that means meta directly in db cannot be modified by other thread. Database lock only protect meta in Database class.  while table lock protect meta in Table class.\n\nCo-authored-by: caiconghui [???] <caiconghui@xiaomi.com>","date":"2021-01-13 10:27:58","modifiedFileCount":"108","status":"M","submitter":"caiconghui"},{"authorTime":"2021-06-09 15:00:17","codes":[{"authorDate":"2021-06-09 15:00:17","commitOrder":3,"curCode":"    public void cancel(CancelStmt stmt) throws DdlException {\n        CancelAlterTableStmt cancelAlterTableStmt = (CancelAlterTableStmt) stmt;\n\n        String dbName = cancelAlterTableStmt.getDbName();\n        String tableName = cancelAlterTableStmt.getTableName();\n        Preconditions.checkState(!Strings.isNullOrEmpty(dbName));\n        Preconditions.checkState(!Strings.isNullOrEmpty(tableName));\n\n        Database db = Catalog.getCurrentCatalog().getDb(dbName);\n        if (db == null) {\n            throw new DdlException(\"Database[\" + dbName + \"] does not exist\");\n        }\n\n        AlterJob schemaChangeJob = null;\n        AlterJobV2 schemaChangeJobV2 = null;\n\n        OlapTable olapTable = null;\n        try {\n            olapTable = (OlapTable) db.getTableOrThrowException(tableName, Table.TableType.OLAP);\n        } catch (MetaNotFoundException e) {\n            throw new DdlException(e.getMessage());\n        }\n        olapTable.writeLock();\n        try {\n            if (olapTable.getState() != OlapTableState.SCHEMA_CHANGE &&\n                    olapTable.getState() != OlapTableState.WAITING_STABLE) {\n                throw new DdlException(\"Table[\" + tableName + \"] is not under SCHEMA_CHANGE.\");\n            }\n\n            \r\n            List<AlterJobV2> schemaChangeJobV2List = getUnfinishedAlterJobV2ByTableId(olapTable.getId());\n            \r\n            schemaChangeJobV2 = schemaChangeJobV2List.size() == 0 ? null : Iterables.getOnlyElement(schemaChangeJobV2List);\n            if (schemaChangeJobV2 == null) {\n                schemaChangeJob = getAlterJob(olapTable.getId());\n                Preconditions.checkNotNull(schemaChangeJob, \"Table[\" + tableName + \"] is not under SCHEMA_CHANGE.\");\n                if (schemaChangeJob.getState() == JobState.FINISHING\n                        || schemaChangeJob.getState() == JobState.FINISHED\n                        || schemaChangeJob.getState() == JobState.CANCELLED) {\n                    throw new DdlException(\"job is already \" + schemaChangeJob.getState().name() + \", can not cancel it\");\n                }\n                schemaChangeJob.cancel(olapTable, \"user cancelled\");\n            }\n        } finally {\n            olapTable.writeUnlock();\n        }\n\n        \r\n        if (schemaChangeJobV2 != null) {\n            if (!schemaChangeJobV2.cancel(\"user cancelled\")) {\n                throw new DdlException(\"Job can not be cancelled. State: \" + schemaChangeJobV2.getJobState());\n            }\n            return;\n        }\n\n        \r\n        if (schemaChangeJob != null && schemaChangeJob.getState() == JobState.CANCELLED) {\n            jobDone(schemaChangeJob);\n        }\n    }\n","date":"2021-06-09 15:00:17","endLine":1943,"groupId":"2829","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"cancel","params":"(CancelStmtstmt)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-incubatordoris-10-0.7/blobInfo/CC_OUT/blobs/a1/091929ad68f33f51008ea9608aed0e7bb66081.src","preCode":"    public void cancel(CancelStmt stmt) throws DdlException {\n        CancelAlterTableStmt cancelAlterTableStmt = (CancelAlterTableStmt) stmt;\n\n        String dbName = cancelAlterTableStmt.getDbName();\n        String tableName = cancelAlterTableStmt.getTableName();\n        Preconditions.checkState(!Strings.isNullOrEmpty(dbName));\n        Preconditions.checkState(!Strings.isNullOrEmpty(tableName));\n\n        Database db = Catalog.getCurrentCatalog().getDb(dbName);\n        if (db == null) {\n            throw new DdlException(\"Database[\" + dbName + \"] does not exist\");\n        }\n\n        AlterJob schemaChangeJob = null;\n        AlterJobV2 schemaChangeJobV2 = null;\n\n        OlapTable olapTable = null;\n        try {\n            olapTable = (OlapTable) db.getTableOrThrowException(tableName, Table.TableType.OLAP);\n        } catch (MetaNotFoundException e) {\n            throw new DdlException(e.getMessage());\n        }\n        olapTable.writeLock();\n        try {\n            if (olapTable.getState() != OlapTableState.SCHEMA_CHANGE) {\n                throw new DdlException(\"Table[\" + tableName + \"] is not under SCHEMA_CHANGE.\");\n            }\n\n            \r\n            List<AlterJobV2> schemaChangeJobV2List = getUnfinishedAlterJobV2ByTableId(olapTable.getId());\n            \r\n            schemaChangeJobV2 = schemaChangeJobV2List.size() == 0 ? null : Iterables.getOnlyElement(schemaChangeJobV2List);\n            if (schemaChangeJobV2 == null) {\n                schemaChangeJob = getAlterJob(olapTable.getId());\n                Preconditions.checkNotNull(schemaChangeJob, olapTable.getId());\n                if (schemaChangeJob.getState() == JobState.FINISHING\n                        || schemaChangeJob.getState() == JobState.FINISHED\n                        || schemaChangeJob.getState() == JobState.CANCELLED) {\n                    throw new DdlException(\"job is already \" + schemaChangeJob.getState().name() + \", can not cancel it\");\n                }\n                schemaChangeJob.cancel(olapTable, \"user cancelled\");\n            }\n        } finally {\n            olapTable.writeUnlock();\n        }\n\n        \r\n        if (schemaChangeJobV2 != null) {\n            if (!schemaChangeJobV2.cancel(\"user cancelled\")) {\n                throw new DdlException(\"Job can not be cancelled. State: \" + schemaChangeJobV2.getJobState());\n            }\n            return;\n        }\n\n        \r\n        if (schemaChangeJob != null && schemaChangeJob.getState() == JobState.CANCELLED) {\n            jobDone(schemaChangeJob);\n        }\n    }\n","realPath":"fe/fe-core/src/main/java/org/apache/doris/alter/SchemaChangeHandler.java","repoName":"incubatordoris","snippetEndLine":0,"snippetStartLine":0,"startLine":1884,"status":"M"},{"authorDate":"2021-06-09 15:00:17","commitOrder":3,"curCode":"    public void cancel(CancelStmt stmt) throws DdlException {\n        CancelAlterTableStmt cancelAlterTableStmt = (CancelAlterTableStmt) stmt;\n\n        String dbName = cancelAlterTableStmt.getDbName();\n        String tableName = cancelAlterTableStmt.getTableName();\n        Preconditions.checkState(!Strings.isNullOrEmpty(dbName));\n        Preconditions.checkState(!Strings.isNullOrEmpty(tableName));\n\n        Database db = Catalog.getCurrentCatalog().getDb(dbName);\n        if (db == null) {\n            ErrorReport.reportDdlException(ErrorCode.ERR_BAD_DB_ERROR, dbName);\n        }\n\n        AlterJob rollupJob = null;\n        List<AlterJobV2> rollupJobV2List = new ArrayList<>();\n        OlapTable olapTable = null;\n        try {\n            olapTable = (OlapTable) db.getTableOrThrowException(tableName, Table.TableType.OLAP);\n        } catch (MetaNotFoundException e) {\n            throw new DdlException(e.getMessage());\n        }\n        olapTable.writeLock();\n        try {\n            if (olapTable.getState() != OlapTableState.ROLLUP && olapTable.getState() != OlapTableState.WAITING_STABLE) {\n                throw new DdlException(\"Table[\" + tableName + \"] is not under ROLLUP. \"\n                        + \"Use 'ALTER TABLE DROP ROLLUP' if you want to.\");\n            }\n\n            \r\n            if (cancelAlterTableStmt.getAlterJobIdList() != null) {\n                for (Long jobId : cancelAlterTableStmt.getAlterJobIdList()) {\n                    AlterJobV2 alterJobV2 = getUnfinishedAlterJobV2ByJobId(jobId);\n                    if (alterJobV2 == null)\n                        continue;\n                    rollupJobV2List.add(getUnfinishedAlterJobV2ByJobId(jobId));\n                }\n            } else {\n                rollupJobV2List = getUnfinishedAlterJobV2ByTableId(olapTable.getId());\n            }\n            if (rollupJobV2List.size() == 0) {\n                rollupJob = getAlterJob(olapTable.getId());\n                Preconditions.checkNotNull(rollupJob, \"Table[\" + tableName + \"] is not under ROLLUP. \");\n                if (rollupJob.getState() == JobState.FINISHED\n                        || rollupJob.getState() == JobState.FINISHING\n                        || rollupJob.getState() == JobState.CANCELLED) {\n                    throw new DdlException(\"job is already \" + rollupJob.getState().name() + \", can not cancel it\");\n                }\n                rollupJob.cancel(olapTable, \"user cancelled\");\n            }\n        } finally {\n            olapTable.writeUnlock();\n        }\n\n        \r\n        if (rollupJobV2List.size() != 0) {\n            for (AlterJobV2 alterJobV2 : rollupJobV2List) {\n                alterJobV2.cancel(\"user cancelled\");\n                if (alterJobV2.isDone()) {\n                    onJobDone(alterJobV2);\n                }\n            }\n            return;\n        }\n\n        \r\n        if (rollupJob != null && rollupJob.getState() == JobState.CANCELLED) {\n            jobDone(rollupJob);\n        }\n    }\n","date":"2021-06-09 15:00:17","endLine":1262,"groupId":"1630","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"cancel","params":"(CancelStmtstmt)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-incubatordoris-10-0.7/blobInfo/CC_OUT/blobs/87/c9c70d3aa0a3048d4bf03c160ed09d8c634c4d.src","preCode":"    public void cancel(CancelStmt stmt) throws DdlException {\n        CancelAlterTableStmt cancelAlterTableStmt = (CancelAlterTableStmt) stmt;\n\n        String dbName = cancelAlterTableStmt.getDbName();\n        String tableName = cancelAlterTableStmt.getTableName();\n        Preconditions.checkState(!Strings.isNullOrEmpty(dbName));\n        Preconditions.checkState(!Strings.isNullOrEmpty(tableName));\n\n        Database db = Catalog.getCurrentCatalog().getDb(dbName);\n        if (db == null) {\n            ErrorReport.reportDdlException(ErrorCode.ERR_BAD_DB_ERROR, dbName);\n        }\n\n        AlterJob rollupJob = null;\n        List<AlterJobV2> rollupJobV2List = new ArrayList<>();\n        OlapTable olapTable = null;\n        try {\n            olapTable = (OlapTable) db.getTableOrThrowException(tableName, Table.TableType.OLAP);\n        } catch (MetaNotFoundException e) {\n            throw new DdlException(e.getMessage());\n        }\n        olapTable.writeLock();\n        try {\n            if (olapTable.getState() != OlapTableState.ROLLUP) {\n                throw new DdlException(\"Table[\" + tableName + \"] is not under ROLLUP. \"\n                        + \"Use 'ALTER TABLE DROP ROLLUP' if you want to.\");\n            }\n\n            \r\n            if (cancelAlterTableStmt.getAlterJobIdList() != null) {\n                for (Long jobId : cancelAlterTableStmt.getAlterJobIdList()) {\n                    AlterJobV2 alterJobV2 = getUnfinishedAlterJobV2ByJobId(jobId);\n                    if (alterJobV2 == null)\n                        continue;\n                    rollupJobV2List.add(getUnfinishedAlterJobV2ByJobId(jobId));\n                }\n            } else {\n                rollupJobV2List = getUnfinishedAlterJobV2ByTableId(olapTable.getId());\n            }\n            if (rollupJobV2List.size() == 0) {\n                rollupJob = getAlterJob(olapTable.getId());\n                Preconditions.checkNotNull(rollupJob, olapTable.getId());\n                if (rollupJob.getState() == JobState.FINISHED\n                        || rollupJob.getState() == JobState.FINISHING\n                        || rollupJob.getState() == JobState.CANCELLED) {\n                    throw new DdlException(\"job is already \" + rollupJob.getState().name() + \", can not cancel it\");\n                }\n                rollupJob.cancel(olapTable, \"user cancelled\");\n            }\n        } finally {\n            olapTable.writeUnlock();\n        }\n\n        \r\n        if (rollupJobV2List.size() != 0) {\n            for (AlterJobV2 alterJobV2 : rollupJobV2List) {\n                alterJobV2.cancel(\"user cancelled\");\n                if (alterJobV2.isDone()) {\n                    onJobDone(alterJobV2);\n                }\n            }\n            return;\n        }\n\n        \r\n        if (rollupJob != null && rollupJob.getState() == JobState.CANCELLED) {\n            jobDone(rollupJob);\n        }\n    }\n","realPath":"fe/fe-core/src/main/java/org/apache/doris/alter/MaterializedViewHandler.java","repoName":"incubatordoris","snippetEndLine":0,"snippetStartLine":0,"startLine":1194,"status":"M"}],"commitId":"ad365b3b64ec4be6fb72f04b0b7df6c6a8ab5989","commitMessage":"@@@[Bug] Fix bug that cannot cancel alter table operation when table is unstable (#5998)\n\nCo-authored-by: caiconghui <caiconghui@xiaomi.com>","date":"2021-06-09 15:00:17","modifiedFileCount":"2","status":"M","submitter":"caiconghui"},{"authorTime":"2021-09-03 13:34:49","codes":[{"authorDate":"2021-09-03 13:34:49","commitOrder":4,"curCode":"    public void cancel(CancelStmt stmt) throws DdlException {\n        CancelAlterTableStmt cancelAlterTableStmt = (CancelAlterTableStmt) stmt;\n\n        String dbName = cancelAlterTableStmt.getDbName();\n        String tableName = cancelAlterTableStmt.getTableName();\n        Preconditions.checkState(!Strings.isNullOrEmpty(dbName));\n        Preconditions.checkState(!Strings.isNullOrEmpty(tableName));\n\n        Database db = Catalog.getCurrentCatalog().getDbOrDdlException(dbName);\n\n        AlterJob schemaChangeJob = null;\n        AlterJobV2 schemaChangeJobV2 = null;\n\n        OlapTable olapTable = db.getOlapTableOrDdlException(tableName);\n        olapTable.writeLock();\n        try {\n            if (olapTable.getState() != OlapTableState.SCHEMA_CHANGE &&\n                    olapTable.getState() != OlapTableState.WAITING_STABLE) {\n                throw new DdlException(\"Table[\" + tableName + \"] is not under SCHEMA_CHANGE.\");\n            }\n\n            \r\n            List<AlterJobV2> schemaChangeJobV2List = getUnfinishedAlterJobV2ByTableId(olapTable.getId());\n            \r\n            schemaChangeJobV2 = schemaChangeJobV2List.size() == 0 ? null : Iterables.getOnlyElement(schemaChangeJobV2List);\n            if (schemaChangeJobV2 == null) {\n                schemaChangeJob = getAlterJob(olapTable.getId());\n                Preconditions.checkNotNull(schemaChangeJob, \"Table[\" + tableName + \"] is not under SCHEMA_CHANGE.\");\n                if (schemaChangeJob.getState() == JobState.FINISHING\n                        || schemaChangeJob.getState() == JobState.FINISHED\n                        || schemaChangeJob.getState() == JobState.CANCELLED) {\n                    throw new DdlException(\"job is already \" + schemaChangeJob.getState().name() + \", can not cancel it\");\n                }\n                schemaChangeJob.cancel(olapTable, \"user cancelled\");\n            }\n        } finally {\n            olapTable.writeUnlock();\n        }\n\n        \r\n        if (schemaChangeJobV2 != null) {\n            if (!schemaChangeJobV2.cancel(\"user cancelled\")) {\n                throw new DdlException(\"Job can not be cancelled. State: \" + schemaChangeJobV2.getJobState());\n            }\n            return;\n        }\n\n        \r\n        if (schemaChangeJob != null && schemaChangeJob.getState() == JobState.CANCELLED) {\n            jobDone(schemaChangeJob);\n        }\n    }\n","date":"2021-09-03 13:34:49","endLine":1973,"groupId":"101190","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"cancel","params":"(CancelStmtstmt)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-incubatordoris-10-0.7/blobInfo/CC_OUT/blobs/b5/4847ee40dfdae4df157e122b4e407dfe3a8b79.src","preCode":"    public void cancel(CancelStmt stmt) throws DdlException {\n        CancelAlterTableStmt cancelAlterTableStmt = (CancelAlterTableStmt) stmt;\n\n        String dbName = cancelAlterTableStmt.getDbName();\n        String tableName = cancelAlterTableStmt.getTableName();\n        Preconditions.checkState(!Strings.isNullOrEmpty(dbName));\n        Preconditions.checkState(!Strings.isNullOrEmpty(tableName));\n\n        Database db = Catalog.getCurrentCatalog().getDb(dbName);\n        if (db == null) {\n            throw new DdlException(\"Database[\" + dbName + \"] does not exist\");\n        }\n\n        AlterJob schemaChangeJob = null;\n        AlterJobV2 schemaChangeJobV2 = null;\n\n        OlapTable olapTable = null;\n        try {\n            olapTable = (OlapTable) db.getTableOrThrowException(tableName, Table.TableType.OLAP);\n        } catch (MetaNotFoundException e) {\n            throw new DdlException(e.getMessage());\n        }\n        olapTable.writeLock();\n        try {\n            if (olapTable.getState() != OlapTableState.SCHEMA_CHANGE &&\n                    olapTable.getState() != OlapTableState.WAITING_STABLE) {\n                throw new DdlException(\"Table[\" + tableName + \"] is not under SCHEMA_CHANGE.\");\n            }\n\n            \r\n            List<AlterJobV2> schemaChangeJobV2List = getUnfinishedAlterJobV2ByTableId(olapTable.getId());\n            \r\n            schemaChangeJobV2 = schemaChangeJobV2List.size() == 0 ? null : Iterables.getOnlyElement(schemaChangeJobV2List);\n            if (schemaChangeJobV2 == null) {\n                schemaChangeJob = getAlterJob(olapTable.getId());\n                Preconditions.checkNotNull(schemaChangeJob, \"Table[\" + tableName + \"] is not under SCHEMA_CHANGE.\");\n                if (schemaChangeJob.getState() == JobState.FINISHING\n                        || schemaChangeJob.getState() == JobState.FINISHED\n                        || schemaChangeJob.getState() == JobState.CANCELLED) {\n                    throw new DdlException(\"job is already \" + schemaChangeJob.getState().name() + \", can not cancel it\");\n                }\n                schemaChangeJob.cancel(olapTable, \"user cancelled\");\n            }\n        } finally {\n            olapTable.writeUnlock();\n        }\n\n        \r\n        if (schemaChangeJobV2 != null) {\n            if (!schemaChangeJobV2.cancel(\"user cancelled\")) {\n                throw new DdlException(\"Job can not be cancelled. State: \" + schemaChangeJobV2.getJobState());\n            }\n            return;\n        }\n\n        \r\n        if (schemaChangeJob != null && schemaChangeJob.getState() == JobState.CANCELLED) {\n            jobDone(schemaChangeJob);\n        }\n    }\n","realPath":"fe/fe-core/src/main/java/org/apache/doris/alter/SchemaChangeHandler.java","repoName":"incubatordoris","snippetEndLine":0,"snippetStartLine":0,"startLine":1922,"status":"M"},{"authorDate":"2021-09-03 13:34:49","commitOrder":4,"curCode":"    public void cancel(CancelStmt stmt) throws DdlException {\n        CancelAlterTableStmt cancelAlterTableStmt = (CancelAlterTableStmt) stmt;\n\n        String dbName = cancelAlterTableStmt.getDbName();\n        String tableName = cancelAlterTableStmt.getTableName();\n        Preconditions.checkState(!Strings.isNullOrEmpty(dbName));\n        Preconditions.checkState(!Strings.isNullOrEmpty(tableName));\n\n        Database db = Catalog.getCurrentCatalog().getDbOrDdlException(dbName);\n\n        AlterJob rollupJob = null;\n        List<AlterJobV2> rollupJobV2List = new ArrayList<>();\n        OlapTable olapTable;\n        try {\n            olapTable = db.getTableOrMetaException(tableName, Table.TableType.OLAP);\n        } catch (MetaNotFoundException e) {\n            throw new DdlException(e.getMessage());\n        }\n        olapTable.writeLock();\n        try {\n            if (olapTable.getState() != OlapTableState.ROLLUP && olapTable.getState() != OlapTableState.WAITING_STABLE) {\n                throw new DdlException(\"Table[\" + tableName + \"] is not under ROLLUP. \"\n                        + \"Use 'ALTER TABLE DROP ROLLUP' if you want to.\");\n            }\n\n            \r\n            if (cancelAlterTableStmt.getAlterJobIdList() != null) {\n                for (Long jobId : cancelAlterTableStmt.getAlterJobIdList()) {\n                    AlterJobV2 alterJobV2 = getUnfinishedAlterJobV2ByJobId(jobId);\n                    if (alterJobV2 == null)\n                        continue;\n                    rollupJobV2List.add(getUnfinishedAlterJobV2ByJobId(jobId));\n                }\n            } else {\n                rollupJobV2List = getUnfinishedAlterJobV2ByTableId(olapTable.getId());\n            }\n            if (rollupJobV2List.size() == 0) {\n                rollupJob = getAlterJob(olapTable.getId());\n                Preconditions.checkNotNull(rollupJob, \"Table[\" + tableName + \"] is not under ROLLUP. \");\n                if (rollupJob.getState() == JobState.FINISHED\n                        || rollupJob.getState() == JobState.FINISHING\n                        || rollupJob.getState() == JobState.CANCELLED) {\n                    throw new DdlException(\"job is already \" + rollupJob.getState().name() + \", can not cancel it\");\n                }\n                rollupJob.cancel(olapTable, \"user cancelled\");\n            }\n        } finally {\n            olapTable.writeUnlock();\n        }\n\n        \r\n        if (rollupJobV2List.size() != 0) {\n            for (AlterJobV2 alterJobV2 : rollupJobV2List) {\n                alterJobV2.cancel(\"user cancelled\");\n                if (alterJobV2.isDone()) {\n                    onJobDone(alterJobV2);\n                }\n            }\n            return;\n        }\n\n        \r\n        if (rollupJob != null && rollupJob.getState() == JobState.CANCELLED) {\n            jobDone(rollupJob);\n        }\n    }\n","date":"2021-09-03 13:34:49","endLine":1250,"groupId":"101190","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"cancel","params":"(CancelStmtstmt)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-incubatordoris-10-0.7/blobInfo/CC_OUT/blobs/f1/d231a7db962c30aa05dfcf915e3fc343561470.src","preCode":"    public void cancel(CancelStmt stmt) throws DdlException {\n        CancelAlterTableStmt cancelAlterTableStmt = (CancelAlterTableStmt) stmt;\n\n        String dbName = cancelAlterTableStmt.getDbName();\n        String tableName = cancelAlterTableStmt.getTableName();\n        Preconditions.checkState(!Strings.isNullOrEmpty(dbName));\n        Preconditions.checkState(!Strings.isNullOrEmpty(tableName));\n\n        Database db = Catalog.getCurrentCatalog().getDb(dbName);\n        if (db == null) {\n            ErrorReport.reportDdlException(ErrorCode.ERR_BAD_DB_ERROR, dbName);\n        }\n\n        AlterJob rollupJob = null;\n        List<AlterJobV2> rollupJobV2List = new ArrayList<>();\n        OlapTable olapTable = null;\n        try {\n            olapTable = (OlapTable) db.getTableOrThrowException(tableName, Table.TableType.OLAP);\n        } catch (MetaNotFoundException e) {\n            throw new DdlException(e.getMessage());\n        }\n        olapTable.writeLock();\n        try {\n            if (olapTable.getState() != OlapTableState.ROLLUP && olapTable.getState() != OlapTableState.WAITING_STABLE) {\n                throw new DdlException(\"Table[\" + tableName + \"] is not under ROLLUP. \"\n                        + \"Use 'ALTER TABLE DROP ROLLUP' if you want to.\");\n            }\n\n            \r\n            if (cancelAlterTableStmt.getAlterJobIdList() != null) {\n                for (Long jobId : cancelAlterTableStmt.getAlterJobIdList()) {\n                    AlterJobV2 alterJobV2 = getUnfinishedAlterJobV2ByJobId(jobId);\n                    if (alterJobV2 == null)\n                        continue;\n                    rollupJobV2List.add(getUnfinishedAlterJobV2ByJobId(jobId));\n                }\n            } else {\n                rollupJobV2List = getUnfinishedAlterJobV2ByTableId(olapTable.getId());\n            }\n            if (rollupJobV2List.size() == 0) {\n                rollupJob = getAlterJob(olapTable.getId());\n                Preconditions.checkNotNull(rollupJob, \"Table[\" + tableName + \"] is not under ROLLUP. \");\n                if (rollupJob.getState() == JobState.FINISHED\n                        || rollupJob.getState() == JobState.FINISHING\n                        || rollupJob.getState() == JobState.CANCELLED) {\n                    throw new DdlException(\"job is already \" + rollupJob.getState().name() + \", can not cancel it\");\n                }\n                rollupJob.cancel(olapTable, \"user cancelled\");\n            }\n        } finally {\n            olapTable.writeUnlock();\n        }\n\n        \r\n        if (rollupJobV2List.size() != 0) {\n            for (AlterJobV2 alterJobV2 : rollupJobV2List) {\n                alterJobV2.cancel(\"user cancelled\");\n                if (alterJobV2.isDone()) {\n                    onJobDone(alterJobV2);\n                }\n            }\n            return;\n        }\n\n        \r\n        if (rollupJob != null && rollupJob.getState() == JobState.CANCELLED) {\n            jobDone(rollupJob);\n        }\n    }\n","realPath":"fe/fe-core/src/main/java/org/apache/doris/alter/MaterializedViewHandler.java","repoName":"incubatordoris","snippetEndLine":0,"snippetStartLine":0,"startLine":1185,"status":"M"}],"commitId":"df54b34f9843adf80d5fa753383797690e9458dd","commitMessage":"@@@[Catalog] Enforce null check at Catalog.getDb and Database.getTable (#6416)\n\nfix #5378 #5391 #5688 #5973 #6155 and all replay NPE. All replay method can now throw MetaNotFoundException and caught to log a warning for potential inconsistent metadata cases.\n\ntry to establish a clear notice for future developer to check null.","date":"2021-09-03 13:34:49","modifiedFileCount":"190","status":"M","submitter":"ccoffline"}]
