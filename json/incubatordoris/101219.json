[{"authorTime":"2020-07-21 12:42:42","codes":[{"authorDate":"2020-07-21 12:42:42","commitOrder":1,"curCode":"    public TAlterTabletReq toThrift() {\n        TAlterTabletReq tAlterTabletReq = new TAlterTabletReq();\n        tAlterTabletReq.setBase_tablet_id(baseTabletId);\n        tAlterTabletReq.setBase_schema_hash(baseSchemaHash);\n\n        \r\n        TCreateTabletReq createTabletReq = new TCreateTabletReq();\n        createTabletReq.setTablet_id(tabletId);\n\n        \r\n        \r\n        TTabletSchema tSchema = new TTabletSchema();\n        tSchema.setShort_key_column_count(shortKeyColumnCount);\n        tSchema.setSchema_hash(rollupSchemaHash);\n        tSchema.setStorage_type(storageType);\n        tSchema.setKeys_type(keysType);\n\n        List<TColumn> tColumns = new ArrayList<TColumn>();\n        for (Column column : rollupColumns) {\n            TColumn tColumn = column.toThrift();\n            \r\n            if (bfColumns != null && bfColumns.contains(column.getName())) {\n                tColumn.setIs_bloom_filter_column(true);\n            }\n            tColumns.add(tColumn);\n        }\n        tSchema.setColumns(tColumns);\n\n        if (bfColumns != null) {\n            tSchema.setBloom_filter_fpp(bfFpp);\n        }\n        createTabletReq.setTablet_schema(tSchema);\n        createTabletReq.setTable_id(tableId);\n        createTabletReq.setPartition_id(partitionId);\n\n        tAlterTabletReq.setNew_tablet_req(createTabletReq);\n\n        return tAlterTabletReq;\n    }\n","date":"2020-07-21 12:42:42","endLine":116,"groupId":"2875","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"toThrift","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-incubatordoris-10-0.7/blobInfo/CC_OUT/blobs/a4/3fc78be842c56078ea62c0e1d199212cebf955.src","preCode":"    public TAlterTabletReq toThrift() {\n        TAlterTabletReq tAlterTabletReq = new TAlterTabletReq();\n        tAlterTabletReq.setBase_tablet_id(baseTabletId);\n        tAlterTabletReq.setBase_schema_hash(baseSchemaHash);\n\n        \r\n        TCreateTabletReq createTabletReq = new TCreateTabletReq();\n        createTabletReq.setTablet_id(tabletId);\n\n        \r\n        \r\n        TTabletSchema tSchema = new TTabletSchema();\n        tSchema.setShort_key_column_count(shortKeyColumnCount);\n        tSchema.setSchema_hash(rollupSchemaHash);\n        tSchema.setStorage_type(storageType);\n        tSchema.setKeys_type(keysType);\n\n        List<TColumn> tColumns = new ArrayList<TColumn>();\n        for (Column column : rollupColumns) {\n            TColumn tColumn = column.toThrift();\n            \r\n            if (bfColumns != null && bfColumns.contains(column.getName())) {\n                tColumn.setIs_bloom_filter_column(true);\n            }\n            tColumns.add(tColumn);\n        }\n        tSchema.setColumns(tColumns);\n\n        if (bfColumns != null) {\n            tSchema.setBloom_filter_fpp(bfFpp);\n        }\n        createTabletReq.setTablet_schema(tSchema);\n        createTabletReq.setTable_id(tableId);\n        createTabletReq.setPartition_id(partitionId);\n\n        tAlterTabletReq.setNew_tablet_req(createTabletReq);\n\n        return tAlterTabletReq;\n    }\n","realPath":"fe/fe-core/src/main/java/org/apache/doris/task/CreateRollupTask.java","repoName":"incubatordoris","snippetEndLine":0,"snippetStartLine":0,"startLine":78,"status":"B"},{"authorDate":"2020-07-21 12:42:42","commitOrder":1,"curCode":"    public TCreateTabletReq toThrift() {\n        TCreateTabletReq createTabletReq = new TCreateTabletReq();\n        createTabletReq.setTablet_id(tabletId);\n\n        TTabletSchema tSchema = new TTabletSchema();\n        tSchema.setShort_key_column_count(shortKeyColumnCount);\n        tSchema.setSchema_hash(schemaHash);\n        tSchema.setKeys_type(keysType.toThrift());\n        tSchema.setStorage_type(storageType);\n\n        List<TColumn> tColumns = new ArrayList<TColumn>();\n        for (Column column : columns) {\n            TColumn tColumn = column.toThrift();\n            \r\n            if (bfColumns != null && bfColumns.contains(column.getName())) {\n                tColumn.setIs_bloom_filter_column(true);\n            }\n            \r\n            \r\n            if(column.getName().startsWith(SchemaChangeHandler.SHADOW_NAME_PRFIX)) {\n                tColumn.setColumn_name(column.getName().substring(SchemaChangeHandler.SHADOW_NAME_PRFIX.length()));\n            }\n            tColumns.add(tColumn);\n        }\n        tSchema.setColumns(tColumns);\n\n        if (CollectionUtils.isNotEmpty(indexes)) {\n            List<TOlapTableIndex> tIndexes = new ArrayList<>();\n            for (Index index : indexes) {\n                tIndexes.add(index.toThrift());\n            }\n            tSchema.setIndexes(tIndexes);\n            storageFormat = TStorageFormat.V2;\n        }\n\n        if (bfColumns != null) {\n            tSchema.setBloom_filter_fpp(bfFpp);\n        }\n        tSchema.setIs_in_memory(isInMemory);\n        createTabletReq.setTablet_schema(tSchema);\n\n        createTabletReq.setVersion(version);\n        createTabletReq.setVersion_hash(versionHash);\n\n        createTabletReq.setStorage_medium(storageMedium);\n        if (inRestoreMode) {\n            createTabletReq.setIn_restore_mode(true);\n        }\n        createTabletReq.setTable_id(tableId);\n        createTabletReq.setPartition_id(partitionId);\n\n        if (baseTabletId != -1) {\n            createTabletReq.setBase_tablet_id(baseTabletId);\n            createTabletReq.setBase_schema_hash(baseSchemaHash);\n        }\n\n        if (storageFormat != null) {\n            createTabletReq.setStorage_format(storageFormat);\n        }\n\n        createTabletReq.setTablet_type(tabletType);\n        return createTabletReq;\n    }\n","date":"2020-07-21 12:42:42","endLine":210,"groupId":"1956","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"toThrift","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-incubatordoris-10-0.7/blobInfo/CC_OUT/blobs/33/03ca752f81ab3cd3f526ec43aea44f433a52ff.src","preCode":"    public TCreateTabletReq toThrift() {\n        TCreateTabletReq createTabletReq = new TCreateTabletReq();\n        createTabletReq.setTablet_id(tabletId);\n\n        TTabletSchema tSchema = new TTabletSchema();\n        tSchema.setShort_key_column_count(shortKeyColumnCount);\n        tSchema.setSchema_hash(schemaHash);\n        tSchema.setKeys_type(keysType.toThrift());\n        tSchema.setStorage_type(storageType);\n\n        List<TColumn> tColumns = new ArrayList<TColumn>();\n        for (Column column : columns) {\n            TColumn tColumn = column.toThrift();\n            \r\n            if (bfColumns != null && bfColumns.contains(column.getName())) {\n                tColumn.setIs_bloom_filter_column(true);\n            }\n            \r\n            \r\n            if(column.getName().startsWith(SchemaChangeHandler.SHADOW_NAME_PRFIX)) {\n                tColumn.setColumn_name(column.getName().substring(SchemaChangeHandler.SHADOW_NAME_PRFIX.length()));\n            }\n            tColumns.add(tColumn);\n        }\n        tSchema.setColumns(tColumns);\n\n        if (CollectionUtils.isNotEmpty(indexes)) {\n            List<TOlapTableIndex> tIndexes = new ArrayList<>();\n            for (Index index : indexes) {\n                tIndexes.add(index.toThrift());\n            }\n            tSchema.setIndexes(tIndexes);\n            storageFormat = TStorageFormat.V2;\n        }\n\n        if (bfColumns != null) {\n            tSchema.setBloom_filter_fpp(bfFpp);\n        }\n        tSchema.setIs_in_memory(isInMemory);\n        createTabletReq.setTablet_schema(tSchema);\n\n        createTabletReq.setVersion(version);\n        createTabletReq.setVersion_hash(versionHash);\n\n        createTabletReq.setStorage_medium(storageMedium);\n        if (inRestoreMode) {\n            createTabletReq.setIn_restore_mode(true);\n        }\n        createTabletReq.setTable_id(tableId);\n        createTabletReq.setPartition_id(partitionId);\n\n        if (baseTabletId != -1) {\n            createTabletReq.setBase_tablet_id(baseTabletId);\n            createTabletReq.setBase_schema_hash(baseSchemaHash);\n        }\n\n        if (storageFormat != null) {\n            createTabletReq.setStorage_format(storageFormat);\n        }\n\n        createTabletReq.setTablet_type(tabletType);\n        return createTabletReq;\n    }\n","realPath":"fe/fe-core/src/main/java/org/apache/doris/task/CreateReplicaTask.java","repoName":"incubatordoris","snippetEndLine":0,"snippetStartLine":0,"startLine":148,"status":"B"}],"commitId":"ad17afef9139a9aeedeb2e92638e95886d515f14","commitMessage":"@@@[CodeRefactor] #4098 Make FE multi module (#4099)\n\nThis PR change the FE code structure to maven multi module structure. \nSee ISSUE: #4098 for more info.  such as How to resolve conflicts.","date":"2020-07-21 12:42:42","modifiedFileCount":"0","status":"B","submitter":"Mingyu Chen"},{"authorTime":"2020-08-21 22:57:16","codes":[{"authorDate":"2020-08-21 22:57:16","commitOrder":2,"curCode":"    public TAlterTabletReq toThrift() {\n        TAlterTabletReq tAlterTabletReq = new TAlterTabletReq();\n        tAlterTabletReq.setBase_tablet_id(baseTabletId);\n        tAlterTabletReq.setBase_schema_hash(baseSchemaHash);\n\n        \r\n        TCreateTabletReq createTabletReq = new TCreateTabletReq();\n        createTabletReq.setTablet_id(tabletId);\n\n        \r\n        \r\n        TTabletSchema tSchema = new TTabletSchema();\n        tSchema.setShort_key_column_count(shortKeyColumnCount);\n        tSchema.setSchema_hash(rollupSchemaHash);\n        tSchema.setStorage_type(storageType);\n        tSchema.setKeys_type(keysType);\n\n        List<TColumn> tColumns = new ArrayList<TColumn>();\n        int deleteSign = -1;\n        for (int i = 0; i < rollupColumns.size(); i++) {\n            Column column = rollupColumns.get(i);\n            TColumn tColumn = column.toThrift();\n            \r\n            if (bfColumns != null && bfColumns.contains(column.getName())) {\n                tColumn.setIs_bloom_filter_column(true);\n            }\n            tColumn.setVisible(column.isVisible());\n            if (column.isDeleteSignColumn()) {\n                deleteSign = i;\n            }\n            tColumns.add(tColumn);\n        }\n        tSchema.setColumns(tColumns);\n        tSchema.setDelete_sign_idx(deleteSign);\n\n        if (bfColumns != null) {\n            tSchema.setBloom_filter_fpp(bfFpp);\n        }\n        createTabletReq.setTablet_schema(tSchema);\n        createTabletReq.setTable_id(tableId);\n        createTabletReq.setPartition_id(partitionId);\n\n        tAlterTabletReq.setNew_tablet_req(createTabletReq);\n\n        return tAlterTabletReq;\n    }\n","date":"2020-08-21 22:57:16","endLine":123,"groupId":"7847","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"toThrift","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-incubatordoris-10-0.7/blobInfo/CC_OUT/blobs/c4/57b1e58da90a691c7300be3158408b0025b73a.src","preCode":"    public TAlterTabletReq toThrift() {\n        TAlterTabletReq tAlterTabletReq = new TAlterTabletReq();\n        tAlterTabletReq.setBase_tablet_id(baseTabletId);\n        tAlterTabletReq.setBase_schema_hash(baseSchemaHash);\n\n        \r\n        TCreateTabletReq createTabletReq = new TCreateTabletReq();\n        createTabletReq.setTablet_id(tabletId);\n\n        \r\n        \r\n        TTabletSchema tSchema = new TTabletSchema();\n        tSchema.setShort_key_column_count(shortKeyColumnCount);\n        tSchema.setSchema_hash(rollupSchemaHash);\n        tSchema.setStorage_type(storageType);\n        tSchema.setKeys_type(keysType);\n\n        List<TColumn> tColumns = new ArrayList<TColumn>();\n        for (Column column : rollupColumns) {\n            TColumn tColumn = column.toThrift();\n            \r\n            if (bfColumns != null && bfColumns.contains(column.getName())) {\n                tColumn.setIs_bloom_filter_column(true);\n            }\n            tColumns.add(tColumn);\n        }\n        tSchema.setColumns(tColumns);\n\n        if (bfColumns != null) {\n            tSchema.setBloom_filter_fpp(bfFpp);\n        }\n        createTabletReq.setTablet_schema(tSchema);\n        createTabletReq.setTable_id(tableId);\n        createTabletReq.setPartition_id(partitionId);\n\n        tAlterTabletReq.setNew_tablet_req(createTabletReq);\n\n        return tAlterTabletReq;\n    }\n","realPath":"fe/fe-core/src/main/java/org/apache/doris/task/CreateRollupTask.java","repoName":"incubatordoris","snippetEndLine":0,"snippetStartLine":0,"startLine":78,"status":"M"},{"authorDate":"2020-08-21 22:57:16","commitOrder":2,"curCode":"    public TCreateTabletReq toThrift() {\n        TCreateTabletReq createTabletReq = new TCreateTabletReq();\n        createTabletReq.setTablet_id(tabletId);\n\n        TTabletSchema tSchema = new TTabletSchema();\n        tSchema.setShort_key_column_count(shortKeyColumnCount);\n        tSchema.setSchema_hash(schemaHash);\n        tSchema.setKeys_type(keysType.toThrift());\n        tSchema.setStorage_type(storageType);\n        int deleteSign = -1;\n        List<TColumn> tColumns = new ArrayList<TColumn>();\n        for (int i = 0; i < columns.size(); i++) {\n            Column column = columns.get(i);\n            TColumn tColumn = column.toThrift();\n            \r\n            if (bfColumns != null && bfColumns.contains(column.getName())) {\n                tColumn.setIs_bloom_filter_column(true);\n            }\n            \r\n            \r\n            if(column.getName().startsWith(SchemaChangeHandler.SHADOW_NAME_PRFIX)) {\n                tColumn.setColumn_name(column.getName().substring(SchemaChangeHandler.SHADOW_NAME_PRFIX.length()));\n            }\n            tColumn.setVisible(column.isVisible());\n            tColumns.add(tColumn);\n            if (column.isDeleteSignColumn()) {\n                deleteSign = i;\n            }\n        }\n        tSchema.setColumns(tColumns);\n        tSchema.setDelete_sign_idx(deleteSign);\n\n        if (CollectionUtils.isNotEmpty(indexes)) {\n            List<TOlapTableIndex> tIndexes = new ArrayList<>();\n            for (Index index : indexes) {\n                tIndexes.add(index.toThrift());\n            }\n            tSchema.setIndexes(tIndexes);\n            storageFormat = TStorageFormat.V2;\n        }\n\n        if (bfColumns != null) {\n            tSchema.setBloom_filter_fpp(bfFpp);\n        }\n        tSchema.setIs_in_memory(isInMemory);\n        createTabletReq.setTablet_schema(tSchema);\n\n        createTabletReq.setVersion(version);\n        createTabletReq.setVersion_hash(versionHash);\n\n        createTabletReq.setStorage_medium(storageMedium);\n        if (inRestoreMode) {\n            createTabletReq.setIn_restore_mode(true);\n        }\n        createTabletReq.setTable_id(tableId);\n        createTabletReq.setPartition_id(partitionId);\n\n        if (baseTabletId != -1) {\n            createTabletReq.setBase_tablet_id(baseTabletId);\n            createTabletReq.setBase_schema_hash(baseSchemaHash);\n        }\n\n        if (storageFormat != null) {\n            createTabletReq.setStorage_format(storageFormat);\n        }\n\n        createTabletReq.setTablet_type(tabletType);\n        return createTabletReq;\n    }\n","date":"2020-08-21 22:57:16","endLine":227,"groupId":"963","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"toThrift","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-incubatordoris-10-0.7/blobInfo/CC_OUT/blobs/62/258c74aae94847ab420e84d1e032a6050a3405.src","preCode":"    public TCreateTabletReq toThrift() {\n        TCreateTabletReq createTabletReq = new TCreateTabletReq();\n        createTabletReq.setTablet_id(tabletId);\n\n        TTabletSchema tSchema = new TTabletSchema();\n        tSchema.setShort_key_column_count(shortKeyColumnCount);\n        tSchema.setSchema_hash(schemaHash);\n        tSchema.setKeys_type(keysType.toThrift());\n        tSchema.setStorage_type(storageType);\n\n        List<TColumn> tColumns = new ArrayList<TColumn>();\n        for (Column column : columns) {\n            TColumn tColumn = column.toThrift();\n            \r\n            if (bfColumns != null && bfColumns.contains(column.getName())) {\n                tColumn.setIs_bloom_filter_column(true);\n            }\n            \r\n            \r\n            if(column.getName().startsWith(SchemaChangeHandler.SHADOW_NAME_PRFIX)) {\n                tColumn.setColumn_name(column.getName().substring(SchemaChangeHandler.SHADOW_NAME_PRFIX.length()));\n            }\n            tColumns.add(tColumn);\n        }\n        tSchema.setColumns(tColumns);\n\n        if (CollectionUtils.isNotEmpty(indexes)) {\n            List<TOlapTableIndex> tIndexes = new ArrayList<>();\n            for (Index index : indexes) {\n                tIndexes.add(index.toThrift());\n            }\n            tSchema.setIndexes(tIndexes);\n            storageFormat = TStorageFormat.V2;\n        }\n\n        if (bfColumns != null) {\n            tSchema.setBloom_filter_fpp(bfFpp);\n        }\n        tSchema.setIs_in_memory(isInMemory);\n        createTabletReq.setTablet_schema(tSchema);\n\n        createTabletReq.setVersion(version);\n        createTabletReq.setVersion_hash(versionHash);\n\n        createTabletReq.setStorage_medium(storageMedium);\n        if (inRestoreMode) {\n            createTabletReq.setIn_restore_mode(true);\n        }\n        createTabletReq.setTable_id(tableId);\n        createTabletReq.setPartition_id(partitionId);\n\n        if (baseTabletId != -1) {\n            createTabletReq.setBase_tablet_id(baseTabletId);\n            createTabletReq.setBase_schema_hash(baseSchemaHash);\n        }\n\n        if (storageFormat != null) {\n            createTabletReq.setStorage_format(storageFormat);\n        }\n\n        createTabletReq.setTablet_type(tabletType);\n        return createTabletReq;\n    }\n","realPath":"fe/fe-core/src/main/java/org/apache/doris/task/CreateReplicaTask.java","repoName":"incubatordoris","snippetEndLine":0,"snippetStartLine":0,"startLine":159,"status":"M"}],"commitId":"d61c10b76108fdbd04f7d86f89c646708a3934ea","commitMessage":"@@@[Delete] Support batch delete [part 1] (#4310)\n\n* Implements the grammar of the batch delete #4051 \n* Process create.  alter table when table has delete sign column\n* Support the syntax for enabling the delete column\n* Automatically filtered deleted data in the select statement.\n* Automatically add delete sign when create  rollup table\nTODO:\n * Optimize the reading and compaction logic on the be side.  so that the data marked as deleted will be completely deleted during base compaction","date":"2020-08-21 22:57:16","modifiedFileCount":"44","status":"M","submitter":"Zhengguo Yang"},{"authorTime":"2020-08-28 13:28:11","codes":[{"authorDate":"2020-08-28 13:28:11","commitOrder":3,"curCode":"    public TAlterTabletReq toThrift() {\n        TAlterTabletReq tAlterTabletReq = new TAlterTabletReq();\n        tAlterTabletReq.setBaseTabletId(baseTabletId);\n        tAlterTabletReq.setBaseSchemaHash(baseSchemaHash);\n\n        \r\n        TCreateTabletReq createTabletReq = new TCreateTabletReq();\n        createTabletReq.setTabletId(tabletId);\n\n        \r\n        \r\n        TTabletSchema tSchema = new TTabletSchema();\n        tSchema.setShortKeyColumnCount(shortKeyColumnCount);\n        tSchema.setSchemaHash(rollupSchemaHash);\n        tSchema.setStorageType(storageType);\n        tSchema.setKeysType(keysType);\n\n        List<TColumn> tColumns = new ArrayList<TColumn>();\n        int deleteSign = -1;\n        for (int i = 0; i < rollupColumns.size(); i++) {\n            Column column = rollupColumns.get(i);\n            TColumn tColumn = column.toThrift();\n            \r\n            if (bfColumns != null && bfColumns.contains(column.getName())) {\n                tColumn.setIsBloomFilterColumn(true);\n            }\n            tColumn.setVisible(column.isVisible());\n            if (column.isDeleteSignColumn()) {\n                deleteSign = i;\n            }\n            tColumns.add(tColumn);\n        }\n        tSchema.setColumns(tColumns);\n        tSchema.setDeleteSignIdx(deleteSign);\n\n        if (bfColumns != null) {\n            tSchema.setBloomFilterFpp(bfFpp);\n        }\n        createTabletReq.setTabletSchema(tSchema);\n        createTabletReq.setTableId(tableId);\n        createTabletReq.setPartitionId(partitionId);\n\n        tAlterTabletReq.setNewTabletReq(createTabletReq);\n\n        return tAlterTabletReq;\n    }\n","date":"2020-08-28 13:28:11","endLine":123,"groupId":"7847","id":5,"instanceNumber":1,"isCurCommit":1,"methodName":"toThrift","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-incubatordoris-10-0.7/blobInfo/CC_OUT/blobs/68/d00cfdd9877bb66494b0b57f60e9878cf47457.src","preCode":"    public TAlterTabletReq toThrift() {\n        TAlterTabletReq tAlterTabletReq = new TAlterTabletReq();\n        tAlterTabletReq.setBase_tablet_id(baseTabletId);\n        tAlterTabletReq.setBase_schema_hash(baseSchemaHash);\n\n        \r\n        TCreateTabletReq createTabletReq = new TCreateTabletReq();\n        createTabletReq.setTablet_id(tabletId);\n\n        \r\n        \r\n        TTabletSchema tSchema = new TTabletSchema();\n        tSchema.setShort_key_column_count(shortKeyColumnCount);\n        tSchema.setSchema_hash(rollupSchemaHash);\n        tSchema.setStorage_type(storageType);\n        tSchema.setKeys_type(keysType);\n\n        List<TColumn> tColumns = new ArrayList<TColumn>();\n        int deleteSign = -1;\n        for (int i = 0; i < rollupColumns.size(); i++) {\n            Column column = rollupColumns.get(i);\n            TColumn tColumn = column.toThrift();\n            \r\n            if (bfColumns != null && bfColumns.contains(column.getName())) {\n                tColumn.setIs_bloom_filter_column(true);\n            }\n            tColumn.setVisible(column.isVisible());\n            if (column.isDeleteSignColumn()) {\n                deleteSign = i;\n            }\n            tColumns.add(tColumn);\n        }\n        tSchema.setColumns(tColumns);\n        tSchema.setDelete_sign_idx(deleteSign);\n\n        if (bfColumns != null) {\n            tSchema.setBloom_filter_fpp(bfFpp);\n        }\n        createTabletReq.setTablet_schema(tSchema);\n        createTabletReq.setTable_id(tableId);\n        createTabletReq.setPartition_id(partitionId);\n\n        tAlterTabletReq.setNew_tablet_req(createTabletReq);\n\n        return tAlterTabletReq;\n    }\n","realPath":"fe/fe-core/src/main/java/org/apache/doris/task/CreateRollupTask.java","repoName":"incubatordoris","snippetEndLine":0,"snippetStartLine":0,"startLine":78,"status":"M"},{"authorDate":"2020-08-28 13:28:11","commitOrder":3,"curCode":"    public TCreateTabletReq toThrift() {\n        TCreateTabletReq createTabletReq = new TCreateTabletReq();\n        createTabletReq.setTabletId(tabletId);\n\n        TTabletSchema tSchema = new TTabletSchema();\n        tSchema.setShortKeyColumnCount(shortKeyColumnCount);\n        tSchema.setSchemaHash(schemaHash);\n        tSchema.setKeysType(keysType.toThrift());\n        tSchema.setStorageType(storageType);\n        int deleteSign = -1;\n        List<TColumn> tColumns = new ArrayList<TColumn>();\n        for (int i = 0; i < columns.size(); i++) {\n            Column column = columns.get(i);\n            TColumn tColumn = column.toThrift();\n            \r\n            if (bfColumns != null && bfColumns.contains(column.getName())) {\n                tColumn.setIsBloomFilterColumn(true);\n            }\n            \r\n            \r\n            if(column.getName().startsWith(SchemaChangeHandler.SHADOW_NAME_PRFIX)) {\n                tColumn.setColumnName(column.getName().substring(SchemaChangeHandler.SHADOW_NAME_PRFIX.length()));\n            }\n            tColumn.setVisible(column.isVisible());\n            tColumns.add(tColumn);\n            if (column.isDeleteSignColumn()) {\n                deleteSign = i;\n            }\n        }\n        tSchema.setColumns(tColumns);\n        tSchema.setDeleteSignIdx(deleteSign);\n\n        if (CollectionUtils.isNotEmpty(indexes)) {\n            List<TOlapTableIndex> tIndexes = new ArrayList<>();\n            for (Index index : indexes) {\n                tIndexes.add(index.toThrift());\n            }\n            tSchema.setIndexes(tIndexes);\n            storageFormat = TStorageFormat.V2;\n        }\n\n        if (bfColumns != null) {\n            tSchema.setBloomFilterFpp(bfFpp);\n        }\n        tSchema.setIsInMemory(isInMemory);\n        createTabletReq.setTabletSchema(tSchema);\n\n        createTabletReq.setVersion(version);\n        createTabletReq.setVersionHash(versionHash);\n\n        createTabletReq.setStorageMedium(storageMedium);\n        if (inRestoreMode) {\n            createTabletReq.setInRestoreMode(true);\n        }\n        createTabletReq.setTableId(tableId);\n        createTabletReq.setPartitionId(partitionId);\n\n        if (baseTabletId != -1) {\n            createTabletReq.setBaseTabletId(baseTabletId);\n            createTabletReq.setBaseSchemaHash(baseSchemaHash);\n        }\n\n        if (storageFormat != null) {\n            createTabletReq.setStorageFormat(storageFormat);\n        }\n\n        createTabletReq.setTabletType(tabletType);\n        return createTabletReq;\n    }\n","date":"2020-08-28 13:28:11","endLine":227,"groupId":"963","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"toThrift","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-incubatordoris-10-0.7/blobInfo/CC_OUT/blobs/69/a6f956199609089399626bad2ffb574bb38e2f.src","preCode":"    public TCreateTabletReq toThrift() {\n        TCreateTabletReq createTabletReq = new TCreateTabletReq();\n        createTabletReq.setTablet_id(tabletId);\n\n        TTabletSchema tSchema = new TTabletSchema();\n        tSchema.setShort_key_column_count(shortKeyColumnCount);\n        tSchema.setSchema_hash(schemaHash);\n        tSchema.setKeys_type(keysType.toThrift());\n        tSchema.setStorage_type(storageType);\n        int deleteSign = -1;\n        List<TColumn> tColumns = new ArrayList<TColumn>();\n        for (int i = 0; i < columns.size(); i++) {\n            Column column = columns.get(i);\n            TColumn tColumn = column.toThrift();\n            \r\n            if (bfColumns != null && bfColumns.contains(column.getName())) {\n                tColumn.setIs_bloom_filter_column(true);\n            }\n            \r\n            \r\n            if(column.getName().startsWith(SchemaChangeHandler.SHADOW_NAME_PRFIX)) {\n                tColumn.setColumn_name(column.getName().substring(SchemaChangeHandler.SHADOW_NAME_PRFIX.length()));\n            }\n            tColumn.setVisible(column.isVisible());\n            tColumns.add(tColumn);\n            if (column.isDeleteSignColumn()) {\n                deleteSign = i;\n            }\n        }\n        tSchema.setColumns(tColumns);\n        tSchema.setDelete_sign_idx(deleteSign);\n\n        if (CollectionUtils.isNotEmpty(indexes)) {\n            List<TOlapTableIndex> tIndexes = new ArrayList<>();\n            for (Index index : indexes) {\n                tIndexes.add(index.toThrift());\n            }\n            tSchema.setIndexes(tIndexes);\n            storageFormat = TStorageFormat.V2;\n        }\n\n        if (bfColumns != null) {\n            tSchema.setBloom_filter_fpp(bfFpp);\n        }\n        tSchema.setIs_in_memory(isInMemory);\n        createTabletReq.setTablet_schema(tSchema);\n\n        createTabletReq.setVersion(version);\n        createTabletReq.setVersion_hash(versionHash);\n\n        createTabletReq.setStorage_medium(storageMedium);\n        if (inRestoreMode) {\n            createTabletReq.setIn_restore_mode(true);\n        }\n        createTabletReq.setTable_id(tableId);\n        createTabletReq.setPartition_id(partitionId);\n\n        if (baseTabletId != -1) {\n            createTabletReq.setBase_tablet_id(baseTabletId);\n            createTabletReq.setBase_schema_hash(baseSchemaHash);\n        }\n\n        if (storageFormat != null) {\n            createTabletReq.setStorage_format(storageFormat);\n        }\n\n        createTabletReq.setTablet_type(tabletType);\n        return createTabletReq;\n    }\n","realPath":"fe/fe-core/src/main/java/org/apache/doris/task/CreateReplicaTask.java","repoName":"incubatordoris","snippetEndLine":0,"snippetStartLine":0,"startLine":159,"status":"M"}],"commitId":"3b7614e174d3999e18056d6d741641d664c52908","commitMessage":"@@@[Refactor] Use camelCase in thrift generated java sources (#4443)\n\nUse camelCase in thrift generated java sources to make us fe's code style is more unified","date":"2020-08-28 13:28:11","modifiedFileCount":"109","status":"M","submitter":"Zhengguo Yang"},{"authorTime":"2020-09-04 10:10:17","codes":[{"authorDate":"2020-08-28 13:28:11","commitOrder":4,"curCode":"    public TAlterTabletReq toThrift() {\n        TAlterTabletReq tAlterTabletReq = new TAlterTabletReq();\n        tAlterTabletReq.setBaseTabletId(baseTabletId);\n        tAlterTabletReq.setBaseSchemaHash(baseSchemaHash);\n\n        \r\n        TCreateTabletReq createTabletReq = new TCreateTabletReq();\n        createTabletReq.setTabletId(tabletId);\n\n        \r\n        \r\n        TTabletSchema tSchema = new TTabletSchema();\n        tSchema.setShortKeyColumnCount(shortKeyColumnCount);\n        tSchema.setSchemaHash(rollupSchemaHash);\n        tSchema.setStorageType(storageType);\n        tSchema.setKeysType(keysType);\n\n        List<TColumn> tColumns = new ArrayList<TColumn>();\n        int deleteSign = -1;\n        for (int i = 0; i < rollupColumns.size(); i++) {\n            Column column = rollupColumns.get(i);\n            TColumn tColumn = column.toThrift();\n            \r\n            if (bfColumns != null && bfColumns.contains(column.getName())) {\n                tColumn.setIsBloomFilterColumn(true);\n            }\n            tColumn.setVisible(column.isVisible());\n            if (column.isDeleteSignColumn()) {\n                deleteSign = i;\n            }\n            tColumns.add(tColumn);\n        }\n        tSchema.setColumns(tColumns);\n        tSchema.setDeleteSignIdx(deleteSign);\n\n        if (bfColumns != null) {\n            tSchema.setBloomFilterFpp(bfFpp);\n        }\n        createTabletReq.setTabletSchema(tSchema);\n        createTabletReq.setTableId(tableId);\n        createTabletReq.setPartitionId(partitionId);\n\n        tAlterTabletReq.setNewTabletReq(createTabletReq);\n\n        return tAlterTabletReq;\n    }\n","date":"2020-08-28 13:28:11","endLine":123,"groupId":"101219","id":7,"instanceNumber":1,"isCurCommit":1,"methodName":"toThrift","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-incubatordoris-10-0.7/blobInfo/CC_OUT/blobs/68/d00cfdd9877bb66494b0b57f60e9878cf47457.src","preCode":"    public TAlterTabletReq toThrift() {\n        TAlterTabletReq tAlterTabletReq = new TAlterTabletReq();\n        tAlterTabletReq.setBaseTabletId(baseTabletId);\n        tAlterTabletReq.setBaseSchemaHash(baseSchemaHash);\n\n        \r\n        TCreateTabletReq createTabletReq = new TCreateTabletReq();\n        createTabletReq.setTabletId(tabletId);\n\n        \r\n        \r\n        TTabletSchema tSchema = new TTabletSchema();\n        tSchema.setShortKeyColumnCount(shortKeyColumnCount);\n        tSchema.setSchemaHash(rollupSchemaHash);\n        tSchema.setStorageType(storageType);\n        tSchema.setKeysType(keysType);\n\n        List<TColumn> tColumns = new ArrayList<TColumn>();\n        int deleteSign = -1;\n        for (int i = 0; i < rollupColumns.size(); i++) {\n            Column column = rollupColumns.get(i);\n            TColumn tColumn = column.toThrift();\n            \r\n            if (bfColumns != null && bfColumns.contains(column.getName())) {\n                tColumn.setIsBloomFilterColumn(true);\n            }\n            tColumn.setVisible(column.isVisible());\n            if (column.isDeleteSignColumn()) {\n                deleteSign = i;\n            }\n            tColumns.add(tColumn);\n        }\n        tSchema.setColumns(tColumns);\n        tSchema.setDeleteSignIdx(deleteSign);\n\n        if (bfColumns != null) {\n            tSchema.setBloomFilterFpp(bfFpp);\n        }\n        createTabletReq.setTabletSchema(tSchema);\n        createTabletReq.setTableId(tableId);\n        createTabletReq.setPartitionId(partitionId);\n\n        tAlterTabletReq.setNewTabletReq(createTabletReq);\n\n        return tAlterTabletReq;\n    }\n","realPath":"fe/fe-core/src/main/java/org/apache/doris/task/CreateRollupTask.java","repoName":"incubatordoris","snippetEndLine":0,"snippetStartLine":0,"startLine":78,"status":"N"},{"authorDate":"2020-09-04 10:10:17","commitOrder":4,"curCode":"    public TCreateTabletReq toThrift() {\n        TCreateTabletReq createTabletReq = new TCreateTabletReq();\n        createTabletReq.setTabletId(tabletId);\n\n        TTabletSchema tSchema = new TTabletSchema();\n        tSchema.setShortKeyColumnCount(shortKeyColumnCount);\n        tSchema.setSchemaHash(schemaHash);\n        tSchema.setKeysType(keysType.toThrift());\n        tSchema.setStorageType(storageType);\n        int deleteSign = -1;\n        int sequenceCol = -1;\n        List<TColumn> tColumns = new ArrayList<TColumn>();\n        for (int i = 0; i < columns.size(); i++) {\n            Column column = columns.get(i);\n            TColumn tColumn = column.toThrift();\n            \r\n            if (bfColumns != null && bfColumns.contains(column.getName())) {\n                tColumn.setIsBloomFilterColumn(true);\n            }\n            \r\n            \r\n            if(column.getName().startsWith(SchemaChangeHandler.SHADOW_NAME_PRFIX)) {\n                tColumn.setColumnName(column.getName().substring(SchemaChangeHandler.SHADOW_NAME_PRFIX.length()));\n            }\n            tColumn.setVisible(column.isVisible());\n            tColumns.add(tColumn);\n            if (column.isDeleteSignColumn()) {\n                deleteSign = i;\n            }\n            if (column.isSequenceColumn()) {\n                sequenceCol = i;\n            }\n        }\n        tSchema.setColumns(tColumns);\n        tSchema.setDeleteSignIdx(deleteSign);\n        tSchema.setSequenceColIdx(sequenceCol);\n\n        if (CollectionUtils.isNotEmpty(indexes)) {\n            List<TOlapTableIndex> tIndexes = new ArrayList<>();\n            for (Index index : indexes) {\n                tIndexes.add(index.toThrift());\n            }\n            tSchema.setIndexes(tIndexes);\n            storageFormat = TStorageFormat.V2;\n        }\n\n        if (bfColumns != null) {\n            tSchema.setBloomFilterFpp(bfFpp);\n        }\n        tSchema.setIsInMemory(isInMemory);\n        createTabletReq.setTabletSchema(tSchema);\n\n        createTabletReq.setVersion(version);\n        createTabletReq.setVersionHash(versionHash);\n\n        createTabletReq.setStorageMedium(storageMedium);\n        if (inRestoreMode) {\n            createTabletReq.setInRestoreMode(true);\n        }\n        createTabletReq.setTableId(tableId);\n        createTabletReq.setPartitionId(partitionId);\n\n        if (baseTabletId != -1) {\n            createTabletReq.setBaseTabletId(baseTabletId);\n            createTabletReq.setBaseSchemaHash(baseSchemaHash);\n        }\n\n        if (storageFormat != null) {\n            createTabletReq.setStorageFormat(storageFormat);\n        }\n\n        createTabletReq.setTabletType(tabletType);\n        return createTabletReq;\n    }\n","date":"2020-09-04 10:10:17","endLine":232,"groupId":"101219","id":8,"instanceNumber":2,"isCurCommit":1,"methodName":"toThrift","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-incubatordoris-10-0.7/blobInfo/CC_OUT/blobs/04/055d7d845b900e13883572af7eb3ff4608525a.src","preCode":"    public TCreateTabletReq toThrift() {\n        TCreateTabletReq createTabletReq = new TCreateTabletReq();\n        createTabletReq.setTabletId(tabletId);\n\n        TTabletSchema tSchema = new TTabletSchema();\n        tSchema.setShortKeyColumnCount(shortKeyColumnCount);\n        tSchema.setSchemaHash(schemaHash);\n        tSchema.setKeysType(keysType.toThrift());\n        tSchema.setStorageType(storageType);\n        int deleteSign = -1;\n        List<TColumn> tColumns = new ArrayList<TColumn>();\n        for (int i = 0; i < columns.size(); i++) {\n            Column column = columns.get(i);\n            TColumn tColumn = column.toThrift();\n            \r\n            if (bfColumns != null && bfColumns.contains(column.getName())) {\n                tColumn.setIsBloomFilterColumn(true);\n            }\n            \r\n            \r\n            if(column.getName().startsWith(SchemaChangeHandler.SHADOW_NAME_PRFIX)) {\n                tColumn.setColumnName(column.getName().substring(SchemaChangeHandler.SHADOW_NAME_PRFIX.length()));\n            }\n            tColumn.setVisible(column.isVisible());\n            tColumns.add(tColumn);\n            if (column.isDeleteSignColumn()) {\n                deleteSign = i;\n            }\n        }\n        tSchema.setColumns(tColumns);\n        tSchema.setDeleteSignIdx(deleteSign);\n\n        if (CollectionUtils.isNotEmpty(indexes)) {\n            List<TOlapTableIndex> tIndexes = new ArrayList<>();\n            for (Index index : indexes) {\n                tIndexes.add(index.toThrift());\n            }\n            tSchema.setIndexes(tIndexes);\n            storageFormat = TStorageFormat.V2;\n        }\n\n        if (bfColumns != null) {\n            tSchema.setBloomFilterFpp(bfFpp);\n        }\n        tSchema.setIsInMemory(isInMemory);\n        createTabletReq.setTabletSchema(tSchema);\n\n        createTabletReq.setVersion(version);\n        createTabletReq.setVersionHash(versionHash);\n\n        createTabletReq.setStorageMedium(storageMedium);\n        if (inRestoreMode) {\n            createTabletReq.setInRestoreMode(true);\n        }\n        createTabletReq.setTableId(tableId);\n        createTabletReq.setPartitionId(partitionId);\n\n        if (baseTabletId != -1) {\n            createTabletReq.setBaseTabletId(baseTabletId);\n            createTabletReq.setBaseSchemaHash(baseSchemaHash);\n        }\n\n        if (storageFormat != null) {\n            createTabletReq.setStorageFormat(storageFormat);\n        }\n\n        createTabletReq.setTabletType(tabletType);\n        return createTabletReq;\n    }\n","realPath":"fe/fe-core/src/main/java/org/apache/doris/task/CreateReplicaTask.java","repoName":"incubatordoris","snippetEndLine":0,"snippetStartLine":0,"startLine":159,"status":"M"}],"commitId":"068707484d16bbb26a7944baf89244ced07c2471","commitMessage":"@@@Support sequence column for UNIQUE_KEYS Table (#4256)\n\n* add sequence  col\n\nCo-authored-by: yangwenbo6 <yangwenbo3@jd.com>","date":"2020-09-04 10:10:17","modifiedFileCount":"24","status":"M","submitter":"Youngwb"}]
