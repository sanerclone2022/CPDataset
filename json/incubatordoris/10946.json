[{"authorTime":"2021-02-22 16:07:56","codes":[{"authorDate":"2021-02-22 16:07:56","commitOrder":1,"curCode":"    public Status upload(String localPath, String remotePath) {\n        S3URI uri = new S3URI(remotePath);\n        try {\n            PutObjectResponse response =\n                getClient()\n                    .putObject(\n                        PutObjectRequest.builder().bucket(uri.getBucket()).key(uri.getKey()).build(),\n                        RequestBody.fromFile(new File(localPath)));\n            LOG.info(\"upload file \" + localPath + \" success: \" + response.eTag());\n            return Status.OK;\n        } catch (S3Exception e) {\n            LOG.error(\"write file failed:\", e);\n            return new Status(Status.ErrCode.COMMON_ERROR, \"write file failed: \" + e.getMessage());\n        } catch (UserException ue) {\n            LOG.error(\"connect to s3 failed: \", ue);\n            return new Status(Status.ErrCode.COMMON_ERROR, \"connect to s3 failed: \" + ue.getMessage());\n        }\n    }\n","date":"2021-02-22 16:07:56","endLine":245,"groupId":"7808","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"upload","params":"(StringlocalPath@StringremotePath)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-incubatordoris-10-0.7/blobInfo/CC_OUT/blobs/a0/e4dd56f30c17f0bc0db1c0c4fb122d02ab4a86.src","preCode":"    public Status upload(String localPath, String remotePath) {\n        S3URI uri = new S3URI(remotePath);\n        try {\n            PutObjectResponse response =\n                getClient()\n                    .putObject(\n                        PutObjectRequest.builder().bucket(uri.getBucket()).key(uri.getKey()).build(),\n                        RequestBody.fromFile(new File(localPath)));\n            LOG.info(\"upload file \" + localPath + \" success: \" + response.eTag());\n            return Status.OK;\n        } catch (S3Exception e) {\n            LOG.error(\"write file failed:\", e);\n            return new Status(Status.ErrCode.COMMON_ERROR, \"write file failed: \" + e.getMessage());\n        } catch (UserException ue) {\n            LOG.error(\"connect to s3 failed: \", ue);\n            return new Status(Status.ErrCode.COMMON_ERROR, \"connect to s3 failed: \" + ue.getMessage());\n        }\n    }\n","realPath":"fe/fe-core/src/main/java/org/apache/doris/backup/S3Storage.java","repoName":"incubatordoris","snippetEndLine":0,"snippetStartLine":0,"startLine":228,"status":"B"},{"authorDate":"2021-02-22 16:07:56","commitOrder":1,"curCode":"    public Status makeDir(String remotePath) {\n        if (!remotePath.endsWith(\"/\")) {\n            remotePath += \"/\";\n        }\n        S3URI uri = new S3URI(remotePath);\n        try {\n            PutObjectResponse response =\n                getClient()\n                    .putObject(\n                        PutObjectRequest.builder().bucket(uri.getBucket()).key(uri.getKey()).build(),\n                        RequestBody.empty());\n            LOG.info(\"makeDir success: \" + response.eTag());\n            return Status.OK;\n        } catch (S3Exception e) {\n            LOG.error(\"makeDir failed:\", e);\n            return new Status(Status.ErrCode.COMMON_ERROR, \"makeDir failed: \" + e.getMessage());\n        } catch (UserException ue) {\n            LOG.error(\"connect to s3 failed: \", ue);\n            return new Status(Status.ErrCode.COMMON_ERROR, \"connect to s3 failed: \" + ue.getMessage());\n        }\n    }\n","date":"2021-02-22 16:07:56","endLine":338,"groupId":"7808","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"makeDir","params":"(StringremotePath)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-incubatordoris-10-0.7/blobInfo/CC_OUT/blobs/a0/e4dd56f30c17f0bc0db1c0c4fb122d02ab4a86.src","preCode":"    public Status makeDir(String remotePath) {\n        if (!remotePath.endsWith(\"/\")) {\n            remotePath += \"/\";\n        }\n        S3URI uri = new S3URI(remotePath);\n        try {\n            PutObjectResponse response =\n                getClient()\n                    .putObject(\n                        PutObjectRequest.builder().bucket(uri.getBucket()).key(uri.getKey()).build(),\n                        RequestBody.empty());\n            LOG.info(\"makeDir success: \" + response.eTag());\n            return Status.OK;\n        } catch (S3Exception e) {\n            LOG.error(\"makeDir failed:\", e);\n            return new Status(Status.ErrCode.COMMON_ERROR, \"makeDir failed: \" + e.getMessage());\n        } catch (UserException ue) {\n            LOG.error(\"connect to s3 failed: \", ue);\n            return new Status(Status.ErrCode.COMMON_ERROR, \"connect to s3 failed: \" + ue.getMessage());\n        }\n    }\n","realPath":"fe/fe-core/src/main/java/org/apache/doris/backup/S3Storage.java","repoName":"incubatordoris","snippetEndLine":0,"snippetStartLine":0,"startLine":318,"status":"B"}],"commitId":"6ede4c6ec11e8a08b50653c790fbee9bb02d641d","commitMessage":"@@@[Feature] Support backup. restore. load. export directly connect to s3 (#5399)\n\n* [doris-1008] support backup and restore directly to cloud storage via aws s3 protocol\n\n* Internal][S3DirectAccess] Support backup. restore. load. export directlyconnect to s3\n1. Support load and export data from/to s3 directly.\n2. Add a config to auto convert broker access to s3 acces when available\n\nChange-Id: Iac96d4b3670776708bc96a119ff491db8cb4cde7\n\n(cherry picked from commit 2f03832ca52221cc7436069b96c45c48c4bc7201)\n\n* [Internal][S3DirectAccess] File path glob compatible with broker\n\nChange-Id: Ie55e07a547aa22c6fa8d432ca926216c10384e68\n(cherry picked from commit d4fb25544c0dc06d23e1ada571ec3f8edd4ba56f)\n\n* [internal] [doris-1008] fix log4j class not found\n\nChange-Id: I468176aca0d821383c74ee658d461aba9e7d5be3\n(cherry picked from commit 029adaa9d6ded8503acbd6644c1519456f3db232)\n\n* add poms\n\nCo-authored-by: yangzhengguo01 <yangzhengguo01@baidu.com>","date":"2021-02-22 16:07:56","modifiedFileCount":"27","status":"B","submitter":"Zhengguo Yang"},{"authorTime":"2021-05-27 15:52:07","codes":[{"authorDate":"2021-05-27 15:52:07","commitOrder":2,"curCode":"    public Status upload(String localPath, String remotePath) {\n        S3URI uri = new S3URI(remotePath, forceHostedStyle);\n        try {\n            PutObjectResponse response =\n                    getClient(uri.getVirtualBucket())\n                            .putObject(\n                                    PutObjectRequest.builder().bucket(uri.getBucket()).key(uri.getKey()).build(),\n                                    RequestBody.fromFile(new File(localPath)));\n            LOG.info(\"upload file \" + localPath + \" success: \" + response.eTag());\n            return Status.OK;\n        } catch (S3Exception e) {\n            LOG.error(\"write file failed:\", e);\n            return new Status(Status.ErrCode.COMMON_ERROR, \"write file failed: \" + e.getMessage());\n        } catch (UserException ue) {\n            LOG.error(\"connect to s3 failed: \", ue);\n            return new Status(Status.ErrCode.COMMON_ERROR, \"connect to s3 failed: \" + ue.getMessage());\n        }\n    }\n","date":"2021-05-27 15:52:07","endLine":268,"groupId":"10946","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"upload","params":"(StringlocalPath@StringremotePath)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-incubatordoris-10-0.7/blobInfo/CC_OUT/blobs/e0/bb077124fababd34cca7eb59e861f1dab2fdb2.src","preCode":"    public Status upload(String localPath, String remotePath) {\n        S3URI uri = new S3URI(remotePath);\n        try {\n            PutObjectResponse response =\n                getClient()\n                    .putObject(\n                        PutObjectRequest.builder().bucket(uri.getBucket()).key(uri.getKey()).build(),\n                        RequestBody.fromFile(new File(localPath)));\n            LOG.info(\"upload file \" + localPath + \" success: \" + response.eTag());\n            return Status.OK;\n        } catch (S3Exception e) {\n            LOG.error(\"write file failed:\", e);\n            return new Status(Status.ErrCode.COMMON_ERROR, \"write file failed: \" + e.getMessage());\n        } catch (UserException ue) {\n            LOG.error(\"connect to s3 failed: \", ue);\n            return new Status(Status.ErrCode.COMMON_ERROR, \"connect to s3 failed: \" + ue.getMessage());\n        }\n    }\n","realPath":"fe/fe-core/src/main/java/org/apache/doris/backup/S3Storage.java","repoName":"incubatordoris","snippetEndLine":0,"snippetStartLine":0,"startLine":251,"status":"M"},{"authorDate":"2021-05-27 15:52:07","commitOrder":2,"curCode":"    public Status makeDir(String remotePath) {\n        if (!remotePath.endsWith(\"/\")) {\n            remotePath += \"/\";\n        }\n        S3URI uri = new S3URI(remotePath, forceHostedStyle);\n        try {\n            PutObjectResponse response =\n                    getClient(uri.getVirtualBucket())\n                            .putObject(\n                                    PutObjectRequest.builder().bucket(uri.getBucket()).key(uri.getKey()).build(),\n                                    RequestBody.empty());\n            LOG.info(\"makeDir success: \" + response.eTag());\n            return Status.OK;\n        } catch (S3Exception e) {\n            LOG.error(\"makeDir failed:\", e);\n            return new Status(Status.ErrCode.COMMON_ERROR, \"makeDir failed: \" + e.getMessage());\n        } catch (UserException ue) {\n            LOG.error(\"connect to s3 failed: \", ue);\n            return new Status(Status.ErrCode.COMMON_ERROR, \"connect to s3 failed: \" + ue.getMessage());\n        }\n    }\n","date":"2021-05-27 15:52:07","endLine":362,"groupId":"10946","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"makeDir","params":"(StringremotePath)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-incubatordoris-10-0.7/blobInfo/CC_OUT/blobs/e0/bb077124fababd34cca7eb59e861f1dab2fdb2.src","preCode":"    public Status makeDir(String remotePath) {\n        if (!remotePath.endsWith(\"/\")) {\n            remotePath += \"/\";\n        }\n        S3URI uri = new S3URI(remotePath);\n        try {\n            PutObjectResponse response =\n                getClient()\n                    .putObject(\n                        PutObjectRequest.builder().bucket(uri.getBucket()).key(uri.getKey()).build(),\n                        RequestBody.empty());\n            LOG.info(\"makeDir success: \" + response.eTag());\n            return Status.OK;\n        } catch (S3Exception e) {\n            LOG.error(\"makeDir failed:\", e);\n            return new Status(Status.ErrCode.COMMON_ERROR, \"makeDir failed: \" + e.getMessage());\n        } catch (UserException ue) {\n            LOG.error(\"connect to s3 failed: \", ue);\n            return new Status(Status.ErrCode.COMMON_ERROR, \"connect to s3 failed: \" + ue.getMessage());\n        }\n    }\n","realPath":"fe/fe-core/src/main/java/org/apache/doris/backup/S3Storage.java","repoName":"incubatordoris","snippetEndLine":0,"snippetStartLine":0,"startLine":342,"status":"M"}],"commitId":"ba38973209e70312e052f0220ef783180a1f4442","commitMessage":"@@@use virtual hosted-style request to access object store (#5894)\n\n* use virtual hosted-style access request object store","date":"2021-05-27 15:52:07","modifiedFileCount":"3","status":"M","submitter":"Zhengguo Yang"}]
