[{"authorTime":"2020-07-21 12:42:42","codes":[{"authorDate":"2020-07-21 12:42:42","commitOrder":1,"curCode":"    public void replayCancel(Database db) {\n        db.writeLock();\n        try {\n            OlapTable olapTable = (OlapTable) db.getTable(tableId);\n            if (olapTable == null) {\n                return;\n            }\n\n            if (!Catalog.isCheckpointThread()) {\n                \r\n                for (MaterializedIndex rollupIndex : partitionIdToRollupIndex.values()) {\n                    for (Tablet tablet : rollupIndex.getTablets()) {\n                        Catalog.getCurrentInvertedIndex().deleteTablet(tablet.getId());\n                    }\n                }\n            }\n\n            \r\n            for (Partition partition : olapTable.getPartitions()) {\n                partition.setState(PartitionState.NORMAL);\n            }\n            olapTable.setState(OlapTableState.NORMAL);\n        } finally {\n            db.writeUnlock();\n        }\n    }\n","date":"2020-07-21 12:42:42","endLine":938,"groupId":"4695","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"replayCancel","params":"(Databasedb)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-incubatordoris-10-0.7/blobInfo/CC_OUT/blobs/dd/e8a7bea6bbe81419f2976dcbbd3a2b938369cc.src","preCode":"    public void replayCancel(Database db) {\n        db.writeLock();\n        try {\n            OlapTable olapTable = (OlapTable) db.getTable(tableId);\n            if (olapTable == null) {\n                return;\n            }\n\n            if (!Catalog.isCheckpointThread()) {\n                \r\n                for (MaterializedIndex rollupIndex : partitionIdToRollupIndex.values()) {\n                    for (Tablet tablet : rollupIndex.getTablets()) {\n                        Catalog.getCurrentInvertedIndex().deleteTablet(tablet.getId());\n                    }\n                }\n            }\n\n            \r\n            for (Partition partition : olapTable.getPartitions()) {\n                partition.setState(PartitionState.NORMAL);\n            }\n            olapTable.setState(OlapTableState.NORMAL);\n        } finally {\n            db.writeUnlock();\n        }\n    }\n","realPath":"fe/fe-core/src/main/java/org/apache/doris/alter/RollupJob.java","repoName":"incubatordoris","snippetEndLine":0,"snippetStartLine":0,"startLine":913,"status":"B"},{"authorDate":"2020-07-21 12:42:42","commitOrder":1,"curCode":"    public void replayFinish(Database db) {\n        \r\n        if (transactionId < 0) {\n            replayFinishing(db);\n        }\n\n        db.writeLock();\n        try {\n            OlapTable olapTable = (OlapTable) db.getTable(tableId);\n            if (olapTable != null) {\n                olapTable.setState(OlapTableState.NORMAL);\n            }\n        } finally {\n            db.writeUnlock();\n        }\n\n        LOG.info(\"replay finish schema change job: {}\", tableId);\n    }\n","date":"2020-07-21 12:42:42","endLine":1049,"groupId":"5650","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"replayFinish","params":"(Databasedb)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-incubatordoris-10-0.7/blobInfo/CC_OUT/blobs/ac/dec62df11819f613f034657a8d98b33337d07b.src","preCode":"    public void replayFinish(Database db) {\n        \r\n        if (transactionId < 0) {\n            replayFinishing(db);\n        }\n\n        db.writeLock();\n        try {\n            OlapTable olapTable = (OlapTable) db.getTable(tableId);\n            if (olapTable != null) {\n                olapTable.setState(OlapTableState.NORMAL);\n            }\n        } finally {\n            db.writeUnlock();\n        }\n\n        LOG.info(\"replay finish schema change job: {}\", tableId);\n    }\n","realPath":"fe/fe-core/src/main/java/org/apache/doris/alter/SchemaChangeJob.java","repoName":"incubatordoris","snippetEndLine":0,"snippetStartLine":0,"startLine":1032,"status":"B"}],"commitId":"ad17afef9139a9aeedeb2e92638e95886d515f14","commitMessage":"@@@[CodeRefactor] #4098 Make FE multi module (#4099)\n\nThis PR change the FE code structure to maven multi module structure. \nSee ISSUE: #4098 for more info.  such as How to resolve conflicts.","date":"2020-07-21 12:42:42","modifiedFileCount":"0","status":"B","submitter":"Mingyu Chen"},{"authorTime":"2021-01-13 10:27:58","codes":[{"authorDate":"2021-01-13 10:27:58","commitOrder":2,"curCode":"    public void replayCancel(Database db) {\n        OlapTable olapTable = (OlapTable) db.getTable(tableId);\n        olapTable.writeLock();\n        try{\n            if (!Catalog.isCheckpointThread()) {\n                \r\n                for (MaterializedIndex rollupIndex : partitionIdToRollupIndex.values()) {\n                    for (Tablet tablet : rollupIndex.getTablets()) {\n                        Catalog.getCurrentInvertedIndex().deleteTablet(tablet.getId());\n                    }\n                }\n            }\n\n            \r\n            for (Partition partition : olapTable.getPartitions()) {\n                partition.setState(PartitionState.NORMAL);\n            }\n            olapTable.setState(OlapTableState.NORMAL);\n        } finally {\n            olapTable.writeUnlock();\n        }\n    }\n","date":"2021-01-13 10:27:58","endLine":942,"groupId":"4695","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"replayCancel","params":"(Databasedb)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-incubatordoris-10-0.7/blobInfo/CC_OUT/blobs/8a/7830a2e4fffb8dc3a9e693bc1f7bec23937492.src","preCode":"    public void replayCancel(Database db) {\n        db.writeLock();\n        try {\n            OlapTable olapTable = (OlapTable) db.getTable(tableId);\n            if (olapTable == null) {\n                return;\n            }\n\n            if (!Catalog.isCheckpointThread()) {\n                \r\n                for (MaterializedIndex rollupIndex : partitionIdToRollupIndex.values()) {\n                    for (Tablet tablet : rollupIndex.getTablets()) {\n                        Catalog.getCurrentInvertedIndex().deleteTablet(tablet.getId());\n                    }\n                }\n            }\n\n            \r\n            for (Partition partition : olapTable.getPartitions()) {\n                partition.setState(PartitionState.NORMAL);\n            }\n            olapTable.setState(OlapTableState.NORMAL);\n        } finally {\n            db.writeUnlock();\n        }\n    }\n","realPath":"fe/fe-core/src/main/java/org/apache/doris/alter/RollupJob.java","repoName":"incubatordoris","snippetEndLine":0,"snippetStartLine":0,"startLine":921,"status":"M"},{"authorDate":"2021-01-13 10:27:58","commitOrder":2,"curCode":"    public void replayFinish(Database db) {\n        \r\n        if (transactionId < 0) {\n            replayFinishing(db);\n        }\n\n        OlapTable olapTable = (OlapTable) db.getTable(tableId);\n        if (olapTable != null) {\n            olapTable.writeLock();\n            try {\n                olapTable.setState(OlapTableState.NORMAL);\n            } finally {\n                olapTable.writeUnlock();\n            }\n        }\n        LOG.info(\"replay finish schema change job: {}\", tableId);\n    }\n","date":"2021-01-13 10:27:58","endLine":1055,"groupId":"0","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"replayFinish","params":"(Databasedb)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-incubatordoris-10-0.7/blobInfo/CC_OUT/blobs/fe/b442b042a3e2935a0cedf4189fd2fe2a905fa0.src","preCode":"    public void replayFinish(Database db) {\n        \r\n        if (transactionId < 0) {\n            replayFinishing(db);\n        }\n\n        db.writeLock();\n        try {\n            OlapTable olapTable = (OlapTable) db.getTable(tableId);\n            if (olapTable != null) {\n                olapTable.setState(OlapTableState.NORMAL);\n            }\n        } finally {\n            db.writeUnlock();\n        }\n\n        LOG.info(\"replay finish schema change job: {}\", tableId);\n    }\n","realPath":"fe/fe-core/src/main/java/org/apache/doris/alter/SchemaChangeJob.java","repoName":"incubatordoris","snippetEndLine":0,"snippetStartLine":0,"startLine":1039,"status":"M"}],"commitId":"f7730031b8eca90c150c400c8d67e008290a6f70","commitMessage":"@@@Support read and write lock in table level to reduce lock competition (#3775)\n\nThis PR is to reduce lock competition by supporting read and write lock in table level. When we modify or read table's meta.  we don't need to get database lock.  just get table write or read lock. And when we get database lock.  that means meta directly in db cannot be modified by other thread. Database lock only protect meta in Database class.  while table lock protect meta in Table class.\n\nCo-authored-by: caiconghui [???] <caiconghui@xiaomi.com>","date":"2021-01-13 10:27:58","modifiedFileCount":"108","status":"M","submitter":"caiconghui"},{"authorTime":"2021-09-03 13:34:49","codes":[{"authorDate":"2021-09-03 13:34:49","commitOrder":3,"curCode":"    public void replayCancel(Database db) {\n        OlapTable olapTable;\n        try {\n            olapTable = db.getTableOrMetaException(tableId, Table.TableType.OLAP);\n        } catch (MetaNotFoundException e) {\n            LOG.warn(\"[INCONSISTENT META] replay cancel rollup job failed\", e);\n            return;\n        }\n        olapTable.writeLock();\n        try{\n            if (!Catalog.isCheckpointThread()) {\n                \r\n                for (MaterializedIndex rollupIndex : partitionIdToRollupIndex.values()) {\n                    for (Tablet tablet : rollupIndex.getTablets()) {\n                        Catalog.getCurrentInvertedIndex().deleteTablet(tablet.getId());\n                    }\n                }\n            }\n\n            \r\n            for (Partition partition : olapTable.getPartitions()) {\n                partition.setState(PartitionState.NORMAL);\n            }\n            olapTable.setState(OlapTableState.NORMAL);\n        } finally {\n            olapTable.writeUnlock();\n        }\n    }\n","date":"2021-09-03 13:34:49","endLine":966,"groupId":"101210","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"replayCancel","params":"(Databasedb)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-incubatordoris-10-0.7/blobInfo/CC_OUT/blobs/71/95d58b8ccd6c94338d19e3f84e9a1fb50c67c0.src","preCode":"    public void replayCancel(Database db) {\n        OlapTable olapTable = (OlapTable) db.getTable(tableId);\n        olapTable.writeLock();\n        try{\n            if (!Catalog.isCheckpointThread()) {\n                \r\n                for (MaterializedIndex rollupIndex : partitionIdToRollupIndex.values()) {\n                    for (Tablet tablet : rollupIndex.getTablets()) {\n                        Catalog.getCurrentInvertedIndex().deleteTablet(tablet.getId());\n                    }\n                }\n            }\n\n            \r\n            for (Partition partition : olapTable.getPartitions()) {\n                partition.setState(PartitionState.NORMAL);\n            }\n            olapTable.setState(OlapTableState.NORMAL);\n        } finally {\n            olapTable.writeUnlock();\n        }\n    }\n","realPath":"fe/fe-core/src/main/java/org/apache/doris/alter/RollupJob.java","repoName":"incubatordoris","snippetEndLine":0,"snippetStartLine":0,"startLine":939,"status":"M"},{"authorDate":"2021-09-03 13:34:49","commitOrder":3,"curCode":"    public void replayFinish(Database db) {\n        \r\n        if (transactionId < 0) {\n            replayFinishing(db);\n        }\n\n        OlapTable olapTable;\n        try {\n            olapTable = db.getTableOrMetaException(tableId, Table.TableType.OLAP);\n        } catch (MetaNotFoundException e) {\n            LOG.warn(\"[INCONSISTENT META] replay finish schema change job failed\", e);\n            return;\n        }\n        olapTable.writeLock();\n        try {\n            olapTable.setState(OlapTableState.NORMAL);\n        } finally {\n            olapTable.writeUnlock();\n        }\n        LOG.info(\"replay finish schema change job: {}\", tableId);\n    }\n","date":"2021-09-03 13:34:49","endLine":1067,"groupId":"101210","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"replayFinish","params":"(Databasedb)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-incubatordoris-10-0.7/blobInfo/CC_OUT/blobs/9b/de44b74f339f16dde148f3c0152bbb832087f9.src","preCode":"    public void replayFinish(Database db) {\n        \r\n        if (transactionId < 0) {\n            replayFinishing(db);\n        }\n\n        OlapTable olapTable = (OlapTable) db.getTable(tableId);\n        if (olapTable != null) {\n            olapTable.writeLock();\n            try {\n                olapTable.setState(OlapTableState.NORMAL);\n            } finally {\n                olapTable.writeUnlock();\n            }\n        }\n        LOG.info(\"replay finish schema change job: {}\", tableId);\n    }\n","realPath":"fe/fe-core/src/main/java/org/apache/doris/alter/SchemaChangeJob.java","repoName":"incubatordoris","snippetEndLine":0,"snippetStartLine":0,"startLine":1047,"status":"M"}],"commitId":"df54b34f9843adf80d5fa753383797690e9458dd","commitMessage":"@@@[Catalog] Enforce null check at Catalog.getDb and Database.getTable (#6416)\n\nfix #5378 #5391 #5688 #5973 #6155 and all replay NPE. All replay method can now throw MetaNotFoundException and caught to log a warning for potential inconsistent metadata cases.\n\ntry to establish a clear notice for future developer to check null.","date":"2021-09-03 13:34:49","modifiedFileCount":"190","status":"M","submitter":"ccoffline"}]
