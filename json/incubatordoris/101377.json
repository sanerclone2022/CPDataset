[{"authorTime":"2021-01-13 10:27:58","codes":[{"authorDate":"2021-01-13 10:27:58","commitOrder":2,"curCode":"    public void replayAddReplica(ReplicaPersistInfo info) {\n        Database db = getDb(info.getDbId());\n        OlapTable olapTable = (OlapTable) db.getTable(info.getTableId());\n        olapTable.writeLock();\n        try {\n            unprotectAddReplica(info);\n        } finally {\n            olapTable.writeUnlock();\n        }\n    }\n","date":"2021-01-13 10:27:58","endLine":4542,"groupId":"6083","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"replayAddReplica","params":"(ReplicaPersistInfoinfo)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-incubatordoris-10-0.7/blobInfo/CC_OUT/blobs/ae/87e89119acf7e7ae9afa3dbde8ea2892939c9a.src","preCode":"    public void replayAddReplica(ReplicaPersistInfo info) {\n        Database db = getDb(info.getDbId());\n        OlapTable olapTable = (OlapTable) db.getTable(info.getTableId());\n        olapTable.writeLock();\n        try {\n            unprotectAddReplica(info);\n        } finally {\n            olapTable.writeUnlock();\n        }\n    }\n","realPath":"fe/fe-core/src/main/java/org/apache/doris/catalog/Catalog.java","repoName":"incubatordoris","snippetEndLine":0,"snippetStartLine":0,"startLine":4533,"status":"B"},{"authorDate":"2021-01-13 10:27:58","commitOrder":2,"curCode":"    public void replayConvertDistributionType(TableInfo tableInfo) {\n        Database db = getDb(tableInfo.getDbId());\n        OlapTable tbl = (OlapTable) db.getTable(tableInfo.getTableId());\n        tbl.writeLock();\n        try {\n            tbl.convertRandomDistributionToHashDistribution();\n            LOG.info(\"replay modify distribution type of table: \" + tbl.getName());\n        } finally {\n            tbl.writeUnlock();\n        }\n    }\n","date":"2021-01-13 10:27:58","endLine":6716,"groupId":"2834","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"replayConvertDistributionType","params":"(TableInfotableInfo)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-incubatordoris-10-0.7/blobInfo/CC_OUT/blobs/ae/87e89119acf7e7ae9afa3dbde8ea2892939c9a.src","preCode":"    public void replayConvertDistributionType(TableInfo tableInfo) {\n        Database db = getDb(tableInfo.getDbId());\n        OlapTable tbl = (OlapTable) db.getTable(tableInfo.getTableId());\n        tbl.writeLock();\n        try {\n            tbl.convertRandomDistributionToHashDistribution();\n            LOG.info(\"replay modify distribution type of table: \" + tbl.getName());\n        } finally {\n            tbl.writeUnlock();\n        }\n    }\n","realPath":"fe/fe-core/src/main/java/org/apache/doris/catalog/Catalog.java","repoName":"incubatordoris","snippetEndLine":0,"snippetStartLine":0,"startLine":6706,"status":"MB"}],"commitId":"f7730031b8eca90c150c400c8d67e008290a6f70","commitMessage":"@@@Support read and write lock in table level to reduce lock competition (#3775)\n\nThis PR is to reduce lock competition by supporting read and write lock in table level. When we modify or read table's meta.  we don't need to get database lock.  just get table write or read lock. And when we get database lock.  that means meta directly in db cannot be modified by other thread. Database lock only protect meta in Database class.  while table lock protect meta in Table class.\n\nCo-authored-by: caiconghui [???] <caiconghui@xiaomi.com>","date":"2021-01-13 10:27:58","modifiedFileCount":"108","status":"M","submitter":"caiconghui"},{"authorTime":"2021-01-13 10:27:58","codes":[{"authorDate":"2021-04-27 09:40:17","commitOrder":3,"curCode":"    public void replayAddReplica(ReplicaPersistInfo info) {\n        Database db = getDb(info.getDbId());\n        OlapTable olapTable = (OlapTable) db.getTable(info.getTableId());\n        if (olapTable == null) {\n            \r\n\n            LOG.warn(\"Olap table is null when the add replica log is replayed, {}\", info);\n            return;\n        }\n        olapTable.writeLock();\n        try {\n            unprotectAddReplica(info);\n        } finally {\n            olapTable.writeUnlock();\n        }\n    }\n","date":"2021-04-27 09:40:17","endLine":4540,"groupId":"5651","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"replayAddReplica","params":"(ReplicaPersistInfoinfo)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-incubatordoris-10-0.7/blobInfo/CC_OUT/blobs/26/5d2212dbeff62f5e27a89fad0010b519ab0e2c.src","preCode":"    public void replayAddReplica(ReplicaPersistInfo info) {\n        Database db = getDb(info.getDbId());\n        OlapTable olapTable = (OlapTable) db.getTable(info.getTableId());\n        olapTable.writeLock();\n        try {\n            unprotectAddReplica(info);\n        } finally {\n            olapTable.writeUnlock();\n        }\n    }\n","realPath":"fe/fe-core/src/main/java/org/apache/doris/catalog/Catalog.java","repoName":"incubatordoris","snippetEndLine":0,"snippetStartLine":0,"startLine":4524,"status":"M"},{"authorDate":"2021-01-13 10:27:58","commitOrder":3,"curCode":"    public void replayConvertDistributionType(TableInfo tableInfo) {\n        Database db = getDb(tableInfo.getDbId());\n        OlapTable tbl = (OlapTable) db.getTable(tableInfo.getTableId());\n        tbl.writeLock();\n        try {\n            tbl.convertRandomDistributionToHashDistribution();\n            LOG.info(\"replay modify distribution type of table: \" + tbl.getName());\n        } finally {\n            tbl.writeUnlock();\n        }\n    }\n","date":"2021-01-13 10:27:58","endLine":6716,"groupId":"2834","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"replayConvertDistributionType","params":"(TableInfotableInfo)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-incubatordoris-10-0.7/blobInfo/CC_OUT/blobs/ae/87e89119acf7e7ae9afa3dbde8ea2892939c9a.src","preCode":"    public void replayConvertDistributionType(TableInfo tableInfo) {\n        Database db = getDb(tableInfo.getDbId());\n        OlapTable tbl = (OlapTable) db.getTable(tableInfo.getTableId());\n        tbl.writeLock();\n        try {\n            tbl.convertRandomDistributionToHashDistribution();\n            LOG.info(\"replay modify distribution type of table: \" + tbl.getName());\n        } finally {\n            tbl.writeUnlock();\n        }\n    }\n","realPath":"fe/fe-core/src/main/java/org/apache/doris/catalog/Catalog.java","repoName":"incubatordoris","snippetEndLine":0,"snippetStartLine":0,"startLine":6706,"status":"N"}],"commitId":"827f5c086775c54e5cbe84ca0268ba595fd2601d","commitMessage":"@@@[Bug-fix] Ignore modified table log when table has been dropped (#5688)\n\nAlthough the table lock can control the simultaneous modification of the table by different threads.\nBut it cannot control the drop operation of the table by other threads.\nFor example.  when drop table and table update occur at the same time.\n\n1. get table object by thread 1\n2. drop table by thread 2 with table lock\n3. update table object by thread 1\n\nThe above process is possible.\nAt this time.  step 3 actually operates a table that no longer exists.  which will eventually cause the wrong metadata to be recorded.\n\nFixed #5687","date":"2021-04-27 09:40:17","modifiedFileCount":"5","status":"M","submitter":"EmmyMiao87"},{"authorTime":"2021-07-02 19:24:13","codes":[{"authorDate":"2021-04-27 09:40:17","commitOrder":4,"curCode":"    public void replayAddReplica(ReplicaPersistInfo info) {\n        Database db = getDb(info.getDbId());\n        OlapTable olapTable = (OlapTable) db.getTable(info.getTableId());\n        if (olapTable == null) {\n            \r\n\n            LOG.warn(\"Olap table is null when the add replica log is replayed, {}\", info);\n            return;\n        }\n        olapTable.writeLock();\n        try {\n            unprotectAddReplica(info);\n        } finally {\n            olapTable.writeUnlock();\n        }\n    }\n","date":"2021-04-27 09:40:17","endLine":4540,"groupId":"5651","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"replayAddReplica","params":"(ReplicaPersistInfoinfo)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-incubatordoris-10-0.7/blobInfo/CC_OUT/blobs/26/5d2212dbeff62f5e27a89fad0010b519ab0e2c.src","preCode":"    public void replayAddReplica(ReplicaPersistInfo info) {\n        Database db = getDb(info.getDbId());\n        OlapTable olapTable = (OlapTable) db.getTable(info.getTableId());\n        if (olapTable == null) {\n            \r\n\n            LOG.warn(\"Olap table is null when the add replica log is replayed, {}\", info);\n            return;\n        }\n        olapTable.writeLock();\n        try {\n            unprotectAddReplica(info);\n        } finally {\n            olapTable.writeUnlock();\n        }\n    }\n","realPath":"fe/fe-core/src/main/java/org/apache/doris/catalog/Catalog.java","repoName":"incubatordoris","snippetEndLine":0,"snippetStartLine":0,"startLine":4524,"status":"N"},{"authorDate":"2021-07-02 19:24:13","commitOrder":4,"curCode":"    public void replayConvertDistributionType(TableInfo tableInfo) {\n        Database db = getDb(tableInfo.getDbId());\n        OlapTable tbl = (OlapTable) db.getTable(tableInfo.getTableId());\n        if (tbl == null) {\n            LOG.warn(\"table {} does not exist when replaying convert distribution type. db: {}\",\n                    tableInfo.getTableId(), tableInfo.getDbId());\n            return;\n        }\n        tbl.writeLock();\n        try {\n            tbl.convertRandomDistributionToHashDistribution();\n            LOG.info(\"replay modify distribution type of table: \" + tbl.getName());\n        } finally {\n            tbl.writeUnlock();\n        }\n    }\n","date":"2021-07-02 19:24:13","endLine":6804,"groupId":"6947","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"replayConvertDistributionType","params":"(TableInfotableInfo)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-incubatordoris-10-0.7/blobInfo/CC_OUT/blobs/c7/30f8e3658fc9cef33587888a8634c1a0e6a8f8.src","preCode":"    public void replayConvertDistributionType(TableInfo tableInfo) {\n        Database db = getDb(tableInfo.getDbId());\n        OlapTable tbl = (OlapTable) db.getTable(tableInfo.getTableId());\n        tbl.writeLock();\n        try {\n            tbl.convertRandomDistributionToHashDistribution();\n            LOG.info(\"replay modify distribution type of table: \" + tbl.getName());\n        } finally {\n            tbl.writeUnlock();\n        }\n    }\n","realPath":"fe/fe-core/src/main/java/org/apache/doris/catalog/Catalog.java","repoName":"incubatordoris","snippetEndLine":0,"snippetStartLine":0,"startLine":6789,"status":"M"}],"commitId":"f0c5fb9f3819e700396a641ad6c5a3157d8c8f1b","commitMessage":"@@@[Bug] Fix bug of NPE caused by the absence of table in replay process. (#6136)\n\nIn the previous version.  we changed the db level lock to the table level\nto reduce lock contention. But this change will cause some metadata playback problems.\n\nBecause most operations on a table will only acquire table locks. These operations\nmay occur at the same time as the operation of dropping the table.\nThis may cause the metadata operation sequence to be inconsistent with the log replay sequence. \nwhich may cause some problems.","date":"2021-07-02 19:24:13","modifiedFileCount":"5","status":"M","submitter":"Mingyu Chen"},{"authorTime":"2021-09-03 13:34:49","codes":[{"authorDate":"2021-09-03 13:34:49","commitOrder":5,"curCode":"    public void replayAddReplica(ReplicaPersistInfo info) throws MetaNotFoundException {\n        Database db = this.getDbOrMetaException(info.getDbId());\n        OlapTable olapTable = db.getTableOrMetaException(info.getTableId(), TableType.OLAP);\n        olapTable.writeLock();\n        try {\n            unprotectAddReplica(olapTable, info);\n        } finally {\n            olapTable.writeUnlock();\n        }\n    }\n","date":"2021-09-03 13:34:49","endLine":4602,"groupId":"101377","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"replayAddReplica","params":"(ReplicaPersistInfoinfo)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-incubatordoris-10-0.7/blobInfo/CC_OUT/blobs/a5/d102a208e9358133bd4a2ae4f070b5aa89967c.src","preCode":"    public void replayAddReplica(ReplicaPersistInfo info) {\n        Database db = getDb(info.getDbId());\n        OlapTable olapTable = (OlapTable) db.getTable(info.getTableId());\n        if (olapTable == null) {\n            \r\n\n            LOG.warn(\"Olap table is null when the add replica log is replayed, {}\", info);\n            return;\n        }\n        olapTable.writeLock();\n        try {\n            unprotectAddReplica(info);\n        } finally {\n            olapTable.writeUnlock();\n        }\n    }\n","realPath":"fe/fe-core/src/main/java/org/apache/doris/catalog/Catalog.java","repoName":"incubatordoris","snippetEndLine":0,"snippetStartLine":0,"startLine":4593,"status":"M"},{"authorDate":"2021-09-03 13:34:49","commitOrder":5,"curCode":"    public void replayConvertDistributionType(TableInfo info) throws MetaNotFoundException {\n        Database db = this.getDbOrMetaException(info.getDbId());\n        OlapTable olapTable = db.getTableOrMetaException(info.getTableId(), TableType.OLAP);\n        olapTable.writeLock();\n        try {\n            olapTable.convertRandomDistributionToHashDistribution();\n            LOG.info(\"replay modify distribution type of table: \" + olapTable.getName());\n        } finally {\n            olapTable.writeUnlock();\n        }\n    }\n","date":"2021-09-03 13:34:49","endLine":6883,"groupId":"101377","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"replayConvertDistributionType","params":"(TableInfoinfo)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-incubatordoris-10-0.7/blobInfo/CC_OUT/blobs/a5/d102a208e9358133bd4a2ae4f070b5aa89967c.src","preCode":"    public void replayConvertDistributionType(TableInfo tableInfo) {\n        Database db = getDb(tableInfo.getDbId());\n        OlapTable tbl = (OlapTable) db.getTable(tableInfo.getTableId());\n        if (tbl == null) {\n            LOG.warn(\"table {} does not exist when replaying convert distribution type. db: {}\",\n                    tableInfo.getTableId(), tableInfo.getDbId());\n            return;\n        }\n        tbl.writeLock();\n        try {\n            tbl.convertRandomDistributionToHashDistribution();\n            LOG.info(\"replay modify distribution type of table: \" + tbl.getName());\n        } finally {\n            tbl.writeUnlock();\n        }\n    }\n","realPath":"fe/fe-core/src/main/java/org/apache/doris/catalog/Catalog.java","repoName":"incubatordoris","snippetEndLine":0,"snippetStartLine":0,"startLine":6873,"status":"M"}],"commitId":"df54b34f9843adf80d5fa753383797690e9458dd","commitMessage":"@@@[Catalog] Enforce null check at Catalog.getDb and Database.getTable (#6416)\n\nfix #5378 #5391 #5688 #5973 #6155 and all replay NPE. All replay method can now throw MetaNotFoundException and caught to log a warning for potential inconsistent metadata cases.\n\ntry to establish a clear notice for future developer to check null.","date":"2021-09-03 13:34:49","modifiedFileCount":"190","status":"M","submitter":"ccoffline"}]
