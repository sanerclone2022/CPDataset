[{"authorTime":"2020-09-16 17:57:48","codes":[{"authorDate":"2020-07-21 12:42:42","commitOrder":2,"curCode":"    private void handleShowLoad() throws AnalysisException {\n        ShowLoadStmt showStmt = (ShowLoadStmt) stmt;\n\n        Catalog catalog = Catalog.getCurrentCatalog();\n        Database db = catalog.getDb(showStmt.getDbName());\n        if (db == null) {\n            ErrorReport.reportAnalysisException(ErrorCode.ERR_BAD_DB_ERROR, showStmt.getDbName());\n        }\n        long dbId = db.getId();\n\n        \r\n        Load load = catalog.getLoadInstance();\n        List<List<Comparable>> loadInfos = load.getLoadJobInfosByDb(dbId, db.getFullName(),\n                                                                    showStmt.getLabelValue(),\n                                                                    showStmt.isAccurateMatch(),\n                                                                    showStmt.getStates());\n        Set<String> statesValue = showStmt.getStates() == null ? null : showStmt.getStates().stream()\n                .map(entity -> entity.name())\n                .collect(Collectors.toSet());\n        loadInfos.addAll(catalog.getLoadManager().getLoadJobInfosByDb(dbId, showStmt.getLabelValue(),\n                                                                      showStmt.isAccurateMatch(),\n                                                                      statesValue));\n\n        \r\n        List<OrderByPair> orderByPairs = showStmt.getOrderByPairs();\n        ListComparator<List<Comparable>> comparator = null;\n        if (orderByPairs != null) {\n            OrderByPair[] orderByPairArr = new OrderByPair[orderByPairs.size()];\n            comparator = new ListComparator<List<Comparable>>(orderByPairs.toArray(orderByPairArr));\n        } else {\n            \r\n            comparator = new ListComparator<List<Comparable>>(0);\n        }\n        Collections.sort(loadInfos, comparator);\n\n        List<List<String>> rows = Lists.newArrayList();\n        for (List<Comparable> loadInfo : loadInfos) {\n            List<String> oneInfo = new ArrayList<String>(loadInfo.size());\n\n            \r\n            if (loadInfo.get(LoadProcDir.STATE_INDEX).equals(JobState.QUORUM_FINISHED.name())) {\n                loadInfo.set(LoadProcDir.STATE_INDEX, JobState.FINISHED.name());\n            }\n\n            for (Comparable element : loadInfo) {\n                oneInfo.add(element.toString());\n            }\n            rows.add(oneInfo);\n        }\n\n        \r\n        long limit = showStmt.getLimit();\n        long offset = showStmt.getOffset() == -1L ? 0 : showStmt.getOffset();\n        if (offset >= rows.size()) {\n            rows = Lists.newArrayList();\n        } else if (limit != -1L) {\n            if ((limit + offset) < rows.size()) {\n                rows = rows.subList((int) offset, (int) (limit + offset));\n            } else {\n                rows = rows.subList((int) offset, rows.size());\n            }\n        }\n\n        resultSet = new ShowResultSet(showStmt.getMetaData(), rows);\n    }\n","date":"2020-07-21 12:42:42","endLine":822,"groupId":"4871","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"handleShowLoad","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-incubatordoris-10-0.7/blobInfo/CC_OUT/blobs/75/2b37e7a2b9e41bd3bcfa9a4523cc758e29779a.src","preCode":"    private void handleShowLoad() throws AnalysisException {\n        ShowLoadStmt showStmt = (ShowLoadStmt) stmt;\n\n        Catalog catalog = Catalog.getCurrentCatalog();\n        Database db = catalog.getDb(showStmt.getDbName());\n        if (db == null) {\n            ErrorReport.reportAnalysisException(ErrorCode.ERR_BAD_DB_ERROR, showStmt.getDbName());\n        }\n        long dbId = db.getId();\n\n        \r\n        Load load = catalog.getLoadInstance();\n        List<List<Comparable>> loadInfos = load.getLoadJobInfosByDb(dbId, db.getFullName(),\n                                                                    showStmt.getLabelValue(),\n                                                                    showStmt.isAccurateMatch(),\n                                                                    showStmt.getStates());\n        Set<String> statesValue = showStmt.getStates() == null ? null : showStmt.getStates().stream()\n                .map(entity -> entity.name())\n                .collect(Collectors.toSet());\n        loadInfos.addAll(catalog.getLoadManager().getLoadJobInfosByDb(dbId, showStmt.getLabelValue(),\n                                                                      showStmt.isAccurateMatch(),\n                                                                      statesValue));\n\n        \r\n        List<OrderByPair> orderByPairs = showStmt.getOrderByPairs();\n        ListComparator<List<Comparable>> comparator = null;\n        if (orderByPairs != null) {\n            OrderByPair[] orderByPairArr = new OrderByPair[orderByPairs.size()];\n            comparator = new ListComparator<List<Comparable>>(orderByPairs.toArray(orderByPairArr));\n        } else {\n            \r\n            comparator = new ListComparator<List<Comparable>>(0);\n        }\n        Collections.sort(loadInfos, comparator);\n\n        List<List<String>> rows = Lists.newArrayList();\n        for (List<Comparable> loadInfo : loadInfos) {\n            List<String> oneInfo = new ArrayList<String>(loadInfo.size());\n\n            \r\n            if (loadInfo.get(LoadProcDir.STATE_INDEX).equals(JobState.QUORUM_FINISHED.name())) {\n                loadInfo.set(LoadProcDir.STATE_INDEX, JobState.FINISHED.name());\n            }\n\n            for (Comparable element : loadInfo) {\n                oneInfo.add(element.toString());\n            }\n            rows.add(oneInfo);\n        }\n\n        \r\n        long limit = showStmt.getLimit();\n        long offset = showStmt.getOffset() == -1L ? 0 : showStmt.getOffset();\n        if (offset >= rows.size()) {\n            rows = Lists.newArrayList();\n        } else if (limit != -1L) {\n            if ((limit + offset) < rows.size()) {\n                rows = rows.subList((int) offset, (int) (limit + offset));\n            } else {\n                rows = rows.subList((int) offset, rows.size());\n            }\n        }\n\n        resultSet = new ShowResultSet(showStmt.getMetaData(), rows);\n    }\n","realPath":"fe/fe-core/src/main/java/org/apache/doris/qe/ShowExecutor.java","repoName":"incubatordoris","snippetEndLine":0,"snippetStartLine":0,"startLine":758,"status":"NB"},{"authorDate":"2020-09-16 17:57:48","commitOrder":2,"curCode":"    private void handleShowResources() {\n        ShowResourcesStmt showStmt = (ShowResourcesStmt) stmt;\n        List<List<Comparable>> resourcesInfos = Catalog.getCurrentCatalog().getResourceMgr()\n                .getResourcesInfo(showStmt.getNameValue(),\n                                showStmt.isAccurateMatch(),\n                                showStmt.getTypeSet());\n\n        \r\n        List<OrderByPair> orderByPairs = showStmt.getOrderByPairs();\n        ListComparator<List<Comparable>> comparator = null;\n        if (orderByPairs != null) {\n            OrderByPair[] orderByPairArr = new OrderByPair[orderByPairs.size()];\n            comparator = new ListComparator<List<Comparable>>(orderByPairs.toArray(orderByPairArr));\n        } else {\n            \r\n            comparator = new ListComparator<List<Comparable>>(0);\n        }\n        Collections.sort(resourcesInfos, comparator);\n\n        List<List<String>> rows = Lists.newArrayList();\n        for (List<Comparable> resourceInfo : resourcesInfos) {\n            List<String> oneResource = new ArrayList<String>(resourceInfo.size());\n\n            for (Comparable element : resourceInfo) {\n                oneResource.add(element.toString());\n            }\n            rows.add(oneResource);\n        }\n\n        \r\n        long limit = showStmt.getLimit();\n        long offset = showStmt.getOffset() == -1L ? 0 : showStmt.getOffset();\n        if (offset >= rows.size()) {\n            rows = Lists.newArrayList();\n        } else if (limit != -1L) {\n            if ((limit + offset) < rows.size()) {\n                rows = rows.subList((int) offset, (int) (limit + offset));\n            } else {\n                rows = rows.subList((int) offset, rows.size());\n            }\n        }\n\n        \r\n        resultSet = new ShowResultSet(showStmt.getMetaData(), rows);\n    }\n","date":"2020-09-16 17:57:48","endLine":1358,"groupId":"343","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"handleShowResources","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-incubatordoris-10-0.7/blobInfo/CC_OUT/blobs/96/41204ba745027a0b464c41db000a9c6ce73488.src","preCode":"    private void handleShowResources() {\n        ShowResourcesStmt showStmt = (ShowResourcesStmt) stmt;\n        List<List<Comparable>> resourcesInfos = Catalog.getCurrentCatalog().getResourceMgr()\n                .getResourcesInfo(showStmt.getNameValue(),\n                                showStmt.isAccurateMatch(),\n                                showStmt.getTypeSet());\n\n        \r\n        List<OrderByPair> orderByPairs = showStmt.getOrderByPairs();\n        ListComparator<List<Comparable>> comparator = null;\n        if (orderByPairs != null) {\n            OrderByPair[] orderByPairArr = new OrderByPair[orderByPairs.size()];\n            comparator = new ListComparator<List<Comparable>>(orderByPairs.toArray(orderByPairArr));\n        } else {\n            \r\n            comparator = new ListComparator<List<Comparable>>(0);\n        }\n        Collections.sort(resourcesInfos, comparator);\n\n        List<List<String>> rows = Lists.newArrayList();\n        for (List<Comparable> resourceInfo : resourcesInfos) {\n            List<String> oneResource = new ArrayList<String>(resourceInfo.size());\n\n            for (Comparable element : resourceInfo) {\n                oneResource.add(element.toString());\n            }\n            rows.add(oneResource);\n        }\n\n        \r\n        long limit = showStmt.getLimit();\n        long offset = showStmt.getOffset() == -1L ? 0 : showStmt.getOffset();\n        if (offset >= rows.size()) {\n            rows = Lists.newArrayList();\n        } else if (limit != -1L) {\n            if ((limit + offset) < rows.size()) {\n                rows = rows.subList((int) offset, (int) (limit + offset));\n            } else {\n                rows = rows.subList((int) offset, rows.size());\n            }\n        }\n\n        \r\n        resultSet = new ShowResultSet(showStmt.getMetaData(), rows);\n    }\n","realPath":"fe/fe-core/src/main/java/org/apache/doris/qe/ShowExecutor.java","repoName":"incubatordoris","snippetEndLine":0,"snippetStartLine":0,"startLine":1314,"status":"B"}],"commitId":"a1f52ec2abbf7b0d5cdc242c7312173934c2265e","commitMessage":"@@@[SQL] Support where.  limit.  order clause in show resourcestmt. (#4502)\n\n* [SQL] Support where.  limit.  order clause in show resourcestmt.\n\nGrammar\n\n    SHOW RESOURCES\n    [\n        WHERE\n        [NAME [ = \"your_resource_name\" | LIKE \"name_matcher\"]]\n        [RESOURCETYPE = [\"SPARK\"]]\n    ]\n    [ORDER BY ...]\n    [LIMIT limit][OFFSET offset];\n\nissue #4501","date":"2020-09-16 17:57:48","modifiedFileCount":"3","status":"M","submitter":"HappenLee"},{"authorTime":"2020-09-16 17:57:48","codes":[{"authorDate":"2021-09-03 13:34:49","commitOrder":3,"curCode":"    private void handleShowLoad() throws AnalysisException {\n        ShowLoadStmt showStmt = (ShowLoadStmt) stmt;\n\n        Catalog catalog = Catalog.getCurrentCatalog();\n        Database db = catalog.getDbOrAnalysisException(showStmt.getDbName());\n        long dbId = db.getId();\n\n        \r\n        Load load = catalog.getLoadInstance();\n        List<List<Comparable>> loadInfos = load.getLoadJobInfosByDb(dbId, db.getFullName(),\n                                                                    showStmt.getLabelValue(),\n                                                                    showStmt.isAccurateMatch(),\n                                                                    showStmt.getStates());\n        Set<String> statesValue = showStmt.getStates() == null ? null : showStmt.getStates().stream()\n                .map(entity -> entity.name())\n                .collect(Collectors.toSet());\n        loadInfos.addAll(catalog.getLoadManager().getLoadJobInfosByDb(dbId, showStmt.getLabelValue(),\n                                                                      showStmt.isAccurateMatch(),\n                                                                      statesValue));\n\n        \r\n        List<OrderByPair> orderByPairs = showStmt.getOrderByPairs();\n        ListComparator<List<Comparable>> comparator = null;\n        if (orderByPairs != null) {\n            OrderByPair[] orderByPairArr = new OrderByPair[orderByPairs.size()];\n            comparator = new ListComparator<List<Comparable>>(orderByPairs.toArray(orderByPairArr));\n        } else {\n            \r\n            comparator = new ListComparator<List<Comparable>>(0);\n        }\n        Collections.sort(loadInfos, comparator);\n\n        List<List<String>> rows = Lists.newArrayList();\n        for (List<Comparable> loadInfo : loadInfos) {\n            List<String> oneInfo = new ArrayList<String>(loadInfo.size());\n\n            \r\n            if (loadInfo.get(LoadProcDir.STATE_INDEX).equals(JobState.QUORUM_FINISHED.name())) {\n                loadInfo.set(LoadProcDir.STATE_INDEX, JobState.FINISHED.name());\n            }\n\n            for (Comparable element : loadInfo) {\n                oneInfo.add(element.toString());\n            }\n            rows.add(oneInfo);\n        }\n\n        \r\n        long limit = showStmt.getLimit();\n        long offset = showStmt.getOffset() == -1L ? 0 : showStmt.getOffset();\n        if (offset >= rows.size()) {\n            rows = Lists.newArrayList();\n        } else if (limit != -1L) {\n            if ((limit + offset) < rows.size()) {\n                rows = rows.subList((int) offset, (int) (limit + offset));\n            } else {\n                rows = rows.subList((int) offset, rows.size());\n            }\n        }\n\n        resultSet = new ShowResultSet(showStmt.getMetaData(), rows);\n    }\n","date":"2021-09-03 13:34:49","endLine":1023,"groupId":"101063","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"handleShowLoad","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-incubatordoris-10-0.7/blobInfo/CC_OUT/blobs/06/d48599bca823c4eb3d1d4f8c434d945db5a78f.src","preCode":"    private void handleShowLoad() throws AnalysisException {\n        ShowLoadStmt showStmt = (ShowLoadStmt) stmt;\n\n        Catalog catalog = Catalog.getCurrentCatalog();\n        Database db = catalog.getDb(showStmt.getDbName());\n        if (db == null) {\n            ErrorReport.reportAnalysisException(ErrorCode.ERR_BAD_DB_ERROR, showStmt.getDbName());\n        }\n        long dbId = db.getId();\n\n        \r\n        Load load = catalog.getLoadInstance();\n        List<List<Comparable>> loadInfos = load.getLoadJobInfosByDb(dbId, db.getFullName(),\n                                                                    showStmt.getLabelValue(),\n                                                                    showStmt.isAccurateMatch(),\n                                                                    showStmt.getStates());\n        Set<String> statesValue = showStmt.getStates() == null ? null : showStmt.getStates().stream()\n                .map(entity -> entity.name())\n                .collect(Collectors.toSet());\n        loadInfos.addAll(catalog.getLoadManager().getLoadJobInfosByDb(dbId, showStmt.getLabelValue(),\n                                                                      showStmt.isAccurateMatch(),\n                                                                      statesValue));\n\n        \r\n        List<OrderByPair> orderByPairs = showStmt.getOrderByPairs();\n        ListComparator<List<Comparable>> comparator = null;\n        if (orderByPairs != null) {\n            OrderByPair[] orderByPairArr = new OrderByPair[orderByPairs.size()];\n            comparator = new ListComparator<List<Comparable>>(orderByPairs.toArray(orderByPairArr));\n        } else {\n            \r\n            comparator = new ListComparator<List<Comparable>>(0);\n        }\n        Collections.sort(loadInfos, comparator);\n\n        List<List<String>> rows = Lists.newArrayList();\n        for (List<Comparable> loadInfo : loadInfos) {\n            List<String> oneInfo = new ArrayList<String>(loadInfo.size());\n\n            \r\n            if (loadInfo.get(LoadProcDir.STATE_INDEX).equals(JobState.QUORUM_FINISHED.name())) {\n                loadInfo.set(LoadProcDir.STATE_INDEX, JobState.FINISHED.name());\n            }\n\n            for (Comparable element : loadInfo) {\n                oneInfo.add(element.toString());\n            }\n            rows.add(oneInfo);\n        }\n\n        \r\n        long limit = showStmt.getLimit();\n        long offset = showStmt.getOffset() == -1L ? 0 : showStmt.getOffset();\n        if (offset >= rows.size()) {\n            rows = Lists.newArrayList();\n        } else if (limit != -1L) {\n            if ((limit + offset) < rows.size()) {\n                rows = rows.subList((int) offset, (int) (limit + offset));\n            } else {\n                rows = rows.subList((int) offset, rows.size());\n            }\n        }\n\n        resultSet = new ShowResultSet(showStmt.getMetaData(), rows);\n    }\n","realPath":"fe/fe-core/src/main/java/org/apache/doris/qe/ShowExecutor.java","repoName":"incubatordoris","snippetEndLine":0,"snippetStartLine":0,"startLine":962,"status":"M"},{"authorDate":"2020-09-16 17:57:48","commitOrder":3,"curCode":"    private void handleShowResources() {\n        ShowResourcesStmt showStmt = (ShowResourcesStmt) stmt;\n        List<List<Comparable>> resourcesInfos = Catalog.getCurrentCatalog().getResourceMgr()\n                .getResourcesInfo(showStmt.getNameValue(),\n                                showStmt.isAccurateMatch(),\n                                showStmt.getTypeSet());\n\n        \r\n        List<OrderByPair> orderByPairs = showStmt.getOrderByPairs();\n        ListComparator<List<Comparable>> comparator = null;\n        if (orderByPairs != null) {\n            OrderByPair[] orderByPairArr = new OrderByPair[orderByPairs.size()];\n            comparator = new ListComparator<List<Comparable>>(orderByPairs.toArray(orderByPairArr));\n        } else {\n            \r\n            comparator = new ListComparator<List<Comparable>>(0);\n        }\n        Collections.sort(resourcesInfos, comparator);\n\n        List<List<String>> rows = Lists.newArrayList();\n        for (List<Comparable> resourceInfo : resourcesInfos) {\n            List<String> oneResource = new ArrayList<String>(resourceInfo.size());\n\n            for (Comparable element : resourceInfo) {\n                oneResource.add(element.toString());\n            }\n            rows.add(oneResource);\n        }\n\n        \r\n        long limit = showStmt.getLimit();\n        long offset = showStmt.getOffset() == -1L ? 0 : showStmt.getOffset();\n        if (offset >= rows.size()) {\n            rows = Lists.newArrayList();\n        } else if (limit != -1L) {\n            if ((limit + offset) < rows.size()) {\n                rows = rows.subList((int) offset, (int) (limit + offset));\n            } else {\n                rows = rows.subList((int) offset, rows.size());\n            }\n        }\n\n        \r\n        resultSet = new ShowResultSet(showStmt.getMetaData(), rows);\n    }\n","date":"2020-09-16 17:57:48","endLine":1358,"groupId":"101063","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"handleShowResources","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-incubatordoris-10-0.7/blobInfo/CC_OUT/blobs/96/41204ba745027a0b464c41db000a9c6ce73488.src","preCode":"    private void handleShowResources() {\n        ShowResourcesStmt showStmt = (ShowResourcesStmt) stmt;\n        List<List<Comparable>> resourcesInfos = Catalog.getCurrentCatalog().getResourceMgr()\n                .getResourcesInfo(showStmt.getNameValue(),\n                                showStmt.isAccurateMatch(),\n                                showStmt.getTypeSet());\n\n        \r\n        List<OrderByPair> orderByPairs = showStmt.getOrderByPairs();\n        ListComparator<List<Comparable>> comparator = null;\n        if (orderByPairs != null) {\n            OrderByPair[] orderByPairArr = new OrderByPair[orderByPairs.size()];\n            comparator = new ListComparator<List<Comparable>>(orderByPairs.toArray(orderByPairArr));\n        } else {\n            \r\n            comparator = new ListComparator<List<Comparable>>(0);\n        }\n        Collections.sort(resourcesInfos, comparator);\n\n        List<List<String>> rows = Lists.newArrayList();\n        for (List<Comparable> resourceInfo : resourcesInfos) {\n            List<String> oneResource = new ArrayList<String>(resourceInfo.size());\n\n            for (Comparable element : resourceInfo) {\n                oneResource.add(element.toString());\n            }\n            rows.add(oneResource);\n        }\n\n        \r\n        long limit = showStmt.getLimit();\n        long offset = showStmt.getOffset() == -1L ? 0 : showStmt.getOffset();\n        if (offset >= rows.size()) {\n            rows = Lists.newArrayList();\n        } else if (limit != -1L) {\n            if ((limit + offset) < rows.size()) {\n                rows = rows.subList((int) offset, (int) (limit + offset));\n            } else {\n                rows = rows.subList((int) offset, rows.size());\n            }\n        }\n\n        \r\n        resultSet = new ShowResultSet(showStmt.getMetaData(), rows);\n    }\n","realPath":"fe/fe-core/src/main/java/org/apache/doris/qe/ShowExecutor.java","repoName":"incubatordoris","snippetEndLine":0,"snippetStartLine":0,"startLine":1314,"status":"N"}],"commitId":"df54b34f9843adf80d5fa753383797690e9458dd","commitMessage":"@@@[Catalog] Enforce null check at Catalog.getDb and Database.getTable (#6416)\n\nfix #5378 #5391 #5688 #5973 #6155 and all replay NPE. All replay method can now throw MetaNotFoundException and caught to log a warning for potential inconsistent metadata cases.\n\ntry to establish a clear notice for future developer to check null.","date":"2021-09-03 13:34:49","modifiedFileCount":"190","status":"M","submitter":"ccoffline"}]
