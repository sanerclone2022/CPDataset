[{"authorTime":"2021-04-21 10:25:58","codes":[{"authorDate":"2021-04-21 10:25:58","commitOrder":2,"curCode":"    public InternalService.PUpdateCacheRequest buildSqlUpdateRequest(String sql, long partitionKey, long lastVersion, long lastestTime) {\n        if (updateRequest == null) {\n            updateRequest = InternalService.PUpdateCacheRequest.newBuilder().setSqlKey(CacheProxy.getMd5(sql)).build();\n        }\n        updateRequest = updateRequest.toBuilder()\n                .addValues(InternalService.PCacheValue.newBuilder()\n                        .setParam(InternalService.PCacheParam.newBuilder()\n                                .setPartitionKey(partitionKey)\n                                .setLastVersion(lastVersion)\n                                .setLastVersionTime(lastestTime)\n                                .build()).setDataSize(dataSize).addAllRows(\n                                rowList.stream().map(row -> ByteString.copyFrom(row))\n                                        .collect(Collectors.toList()))).build();\n        return updateRequest;\n    }\n","date":"2021-04-21 10:25:58","endLine":117,"groupId":"5165","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"buildSqlUpdateRequest","params":"(Stringsql@longpartitionKey@longlastVersion@longlastestTime)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-incubatordoris-10-0.7/blobInfo/CC_OUT/blobs/44/4cef24bc054205d57bc1bbb9eadcc682030f6d.src","preCode":"    public InternalService.PUpdateCacheRequest buildSqlUpdateRequest(String sql, long partitionKey, long lastVersion, long lastestTime) {\n        if (updateRequest == null) {\n            updateRequest = InternalService.PUpdateCacheRequest.newBuilder().setSqlKey(CacheProxy.getMd5(sql)).build();\n        }\n        updateRequest = updateRequest.toBuilder()\n                .addValues(InternalService.PCacheValue.newBuilder()\n                        .setParam(InternalService.PCacheParam.newBuilder()\n                                .setPartitionKey(partitionKey)\n                                .setLastVersion(lastVersion)\n                                .setLastVersionTime(lastestTime)\n                                .build()).setDataSize(dataSize).addAllRows(\n                                rowList.stream().map(row -> ByteString.copyFrom(row))\n                                        .collect(Collectors.toList()))).build();\n        return updateRequest;\n    }\n","realPath":"fe/fe-core/src/main/java/org/apache/doris/qe/cache/RowBatchBuilder.java","repoName":"incubatordoris","snippetEndLine":0,"snippetStartLine":0,"startLine":103,"status":"B"},{"authorDate":"2021-04-21 10:25:58","commitOrder":2,"curCode":"    public InternalService.PUpdateCacheRequest buildPartitionUpdateRequest(String sql) {\n        if (updateRequest == null) {\n            updateRequest = InternalService.PUpdateCacheRequest.newBuilder().setSqlKey(CacheProxy.getMd5(sql)).build();\n        }\n        HashMap<Long, List<byte[]>> partRowMap = new HashMap<>();\n        List<byte[]> partitionRowList;\n        PartitionRange.PartitionKeyType cacheKey;\n        for (byte[] row : rowList) {\n            cacheKey = getKeyFromRow(row, keyIndex, keyType);\n            if (!cachePartMap.containsKey(cacheKey.realValue())) {\n                LOG.info(\"cant find partition key {}\", cacheKey.realValue());\n                continue;\n            }\n            if (!partRowMap.containsKey(cacheKey.realValue())) {\n                partitionRowList = Lists.newArrayList();\n                partitionRowList.add(row);\n                partRowMap.put(cacheKey.realValue(), partitionRowList);\n            } else {\n                partRowMap.get(cacheKey).add(row);\n            }\n        }\n\n        for (HashMap.Entry<Long, List<byte[]>> entry : partRowMap.entrySet()) {\n            Long key = entry.getKey();\n            PartitionRange.PartitionSingle partition = cachePartMap.get(key);\n            partitionRowList = entry.getValue();\n            updateRequest = updateRequest.toBuilder()\n                    .addValues(InternalService.PCacheValue.newBuilder()\n                            .setParam(InternalService.PCacheParam.newBuilder()\n                                    .setPartitionKey(key)\n                                    .setLastVersion(partition.getPartition().getVisibleVersion())\n                                    .setLastVersionTime(partition.getPartition().getVisibleVersionTime())\n                                    .build()).addAllRows(\n                                    partitionRowList.stream().map(row -> ByteString.copyFrom(row))\n                                            .collect(Collectors.toList()))).build();\n        }\n        return updateRequest;\n    }\n","date":"2021-04-21 10:25:58","endLine":177,"groupId":"3047","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"buildPartitionUpdateRequest","params":"(Stringsql)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-incubatordoris-10-0.7/blobInfo/CC_OUT/blobs/44/4cef24bc054205d57bc1bbb9eadcc682030f6d.src","preCode":"    public InternalService.PUpdateCacheRequest buildPartitionUpdateRequest(String sql) {\n        if (updateRequest == null) {\n            updateRequest = InternalService.PUpdateCacheRequest.newBuilder().setSqlKey(CacheProxy.getMd5(sql)).build();\n        }\n        HashMap<Long, List<byte[]>> partRowMap = new HashMap<>();\n        List<byte[]> partitionRowList;\n        PartitionRange.PartitionKeyType cacheKey;\n        for (byte[] row : rowList) {\n            cacheKey = getKeyFromRow(row, keyIndex, keyType);\n            if (!cachePartMap.containsKey(cacheKey.realValue())) {\n                LOG.info(\"cant find partition key {}\", cacheKey.realValue());\n                continue;\n            }\n            if (!partRowMap.containsKey(cacheKey.realValue())) {\n                partitionRowList = Lists.newArrayList();\n                partitionRowList.add(row);\n                partRowMap.put(cacheKey.realValue(), partitionRowList);\n            } else {\n                partRowMap.get(cacheKey).add(row);\n            }\n        }\n\n        for (HashMap.Entry<Long, List<byte[]>> entry : partRowMap.entrySet()) {\n            Long key = entry.getKey();\n            PartitionRange.PartitionSingle partition = cachePartMap.get(key);\n            partitionRowList = entry.getValue();\n            updateRequest = updateRequest.toBuilder()\n                    .addValues(InternalService.PCacheValue.newBuilder()\n                            .setParam(InternalService.PCacheParam.newBuilder()\n                                    .setPartitionKey(key)\n                                    .setLastVersion(partition.getPartition().getVisibleVersion())\n                                    .setLastVersionTime(partition.getPartition().getVisibleVersionTime())\n                                    .build()).addAllRows(\n                                    partitionRowList.stream().map(row -> ByteString.copyFrom(row))\n                                            .collect(Collectors.toList()))).build();\n        }\n        return updateRequest;\n    }\n","realPath":"fe/fe-core/src/main/java/org/apache/doris/qe/cache/RowBatchBuilder.java","repoName":"incubatordoris","snippetEndLine":0,"snippetStartLine":0,"startLine":140,"status":"MB"}],"commitId":"b121ad6b953aaa29ad38491a435f09e049c40d3f","commitMessage":"@@@[Refactor] Remove jprotobuf and use grpc client to connect brpc service (#5650)\n\n","date":"2021-04-21 10:25:58","modifiedFileCount":"25","status":"M","submitter":"Zhengguo Yang"},{"authorTime":"2021-05-28 13:45:47","codes":[{"authorDate":"2021-05-28 13:45:47","commitOrder":3,"curCode":"    public InternalService.PUpdateCacheRequest buildSqlUpdateRequest(String sql, long partitionKey, long lastVersion, long lastestTime) {\n        if (updateRequest == null) {\n            updateRequest = InternalService.PUpdateCacheRequest.newBuilder()\n                    .setSqlKey(CacheProxy.getMd5(sql))\n                    .setCacheType(InternalService.CacheType.SQL_CACHE).build();\n        }\n        updateRequest = updateRequest.toBuilder()\n                .addValues(InternalService.PCacheValue.newBuilder()\n                        .setParam(InternalService.PCacheParam.newBuilder()\n                                .setPartitionKey(partitionKey)\n                                .setLastVersion(lastVersion)\n                                .setLastVersionTime(lastestTime)\n                                .build()).setDataSize(dataSize).addAllRows(\n                                rowList.stream().map(row -> ByteString.copyFrom(row))\n                                        .collect(Collectors.toList()))).build();\n        return updateRequest;\n    }\n","date":"2021-05-28 13:45:47","endLine":119,"groupId":"5165","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"buildSqlUpdateRequest","params":"(Stringsql@longpartitionKey@longlastVersion@longlastestTime)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-incubatordoris-10-0.7/blobInfo/CC_OUT/blobs/c4/68bac4bec86e3e3f2c9720a95514b2fe4ab15e.src","preCode":"    public InternalService.PUpdateCacheRequest buildSqlUpdateRequest(String sql, long partitionKey, long lastVersion, long lastestTime) {\n        if (updateRequest == null) {\n            updateRequest = InternalService.PUpdateCacheRequest.newBuilder().setSqlKey(CacheProxy.getMd5(sql)).build();\n        }\n        updateRequest = updateRequest.toBuilder()\n                .addValues(InternalService.PCacheValue.newBuilder()\n                        .setParam(InternalService.PCacheParam.newBuilder()\n                                .setPartitionKey(partitionKey)\n                                .setLastVersion(lastVersion)\n                                .setLastVersionTime(lastestTime)\n                                .build()).setDataSize(dataSize).addAllRows(\n                                rowList.stream().map(row -> ByteString.copyFrom(row))\n                                        .collect(Collectors.toList()))).build();\n        return updateRequest;\n    }\n","realPath":"fe/fe-core/src/main/java/org/apache/doris/qe/cache/RowBatchBuilder.java","repoName":"incubatordoris","snippetEndLine":0,"snippetStartLine":0,"startLine":103,"status":"M"},{"authorDate":"2021-05-28 13:45:47","commitOrder":3,"curCode":"    public InternalService.PUpdateCacheRequest buildPartitionUpdateRequest(String sql) {\n        if (updateRequest == null) {\n            updateRequest = InternalService.PUpdateCacheRequest.newBuilder()\n                    .setSqlKey(CacheProxy.getMd5(sql))\n                    .setCacheType(InternalService.CacheType.PARTITION_CACHE).build();\n        }\n        HashMap<Long, List<byte[]>> partRowMap = new HashMap<>();\n        List<byte[]> partitionRowList;\n        PartitionRange.PartitionKeyType cacheKey;\n        for (byte[] row : rowList) {\n            cacheKey = getKeyFromRow(row, keyIndex, keyType);\n            if (!cachePartMap.containsKey(cacheKey.realValue())) {\n                LOG.info(\"cant find partition key {}\", cacheKey.realValue());\n                continue;\n            }\n            if (!partRowMap.containsKey(cacheKey.realValue())) {\n                partitionRowList = Lists.newArrayList();\n                partitionRowList.add(row);\n                partRowMap.put(cacheKey.realValue(), partitionRowList);\n            } else {\n                partRowMap.get(cacheKey).add(row);\n            }\n        }\n\n        for (HashMap.Entry<Long, List<byte[]>> entry : partRowMap.entrySet()) {\n            Long key = entry.getKey();\n            PartitionRange.PartitionSingle partition = cachePartMap.get(key);\n            partitionRowList = entry.getValue();\n            updateRequest = updateRequest.toBuilder()\n                    .addValues(InternalService.PCacheValue.newBuilder()\n                            .setParam(InternalService.PCacheParam.newBuilder()\n                                    .setPartitionKey(key)\n                                    .setLastVersion(partition.getPartition().getVisibleVersion())\n                                    .setLastVersionTime(partition.getPartition().getVisibleVersionTime())\n                                    .build()).addAllRows(\n                                    partitionRowList.stream().map(row -> ByteString.copyFrom(row))\n                                            .collect(Collectors.toList()))).build();\n        }\n        return updateRequest;\n    }\n","date":"2021-05-28 13:45:47","endLine":181,"groupId":"3047","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"buildPartitionUpdateRequest","params":"(Stringsql)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-incubatordoris-10-0.7/blobInfo/CC_OUT/blobs/c4/68bac4bec86e3e3f2c9720a95514b2fe4ab15e.src","preCode":"    public InternalService.PUpdateCacheRequest buildPartitionUpdateRequest(String sql) {\n        if (updateRequest == null) {\n            updateRequest = InternalService.PUpdateCacheRequest.newBuilder().setSqlKey(CacheProxy.getMd5(sql)).build();\n        }\n        HashMap<Long, List<byte[]>> partRowMap = new HashMap<>();\n        List<byte[]> partitionRowList;\n        PartitionRange.PartitionKeyType cacheKey;\n        for (byte[] row : rowList) {\n            cacheKey = getKeyFromRow(row, keyIndex, keyType);\n            if (!cachePartMap.containsKey(cacheKey.realValue())) {\n                LOG.info(\"cant find partition key {}\", cacheKey.realValue());\n                continue;\n            }\n            if (!partRowMap.containsKey(cacheKey.realValue())) {\n                partitionRowList = Lists.newArrayList();\n                partitionRowList.add(row);\n                partRowMap.put(cacheKey.realValue(), partitionRowList);\n            } else {\n                partRowMap.get(cacheKey).add(row);\n            }\n        }\n\n        for (HashMap.Entry<Long, List<byte[]>> entry : partRowMap.entrySet()) {\n            Long key = entry.getKey();\n            PartitionRange.PartitionSingle partition = cachePartMap.get(key);\n            partitionRowList = entry.getValue();\n            updateRequest = updateRequest.toBuilder()\n                    .addValues(InternalService.PCacheValue.newBuilder()\n                            .setParam(InternalService.PCacheParam.newBuilder()\n                                    .setPartitionKey(key)\n                                    .setLastVersion(partition.getPartition().getVisibleVersion())\n                                    .setLastVersionTime(partition.getPartition().getVisibleVersionTime())\n                                    .build()).addAllRows(\n                                    partitionRowList.stream().map(row -> ByteString.copyFrom(row))\n                                            .collect(Collectors.toList()))).build();\n        }\n        return updateRequest;\n    }\n","realPath":"fe/fe-core/src/main/java/org/apache/doris/qe/cache/RowBatchBuilder.java","repoName":"incubatordoris","snippetEndLine":0,"snippetStartLine":0,"startLine":142,"status":"M"}],"commitId":"63c99eb4cbb9f1a42c0c41b5c6d65c36de8825dd","commitMessage":"@@@[Cache][Enhancement] Assure sql cache only one version (#5793)\n\nFor PR #5792. This patch add a new param `cache type` to distinguish sql cache and partition cache.\nWhen update sql cache.   we make assure one sql key only has one version cache.","date":"2021-05-28 13:45:47","modifiedFileCount":"1","status":"M","submitter":"xinghuayu007"},{"authorTime":"2021-06-18 11:40:00","codes":[{"authorDate":"2021-05-28 13:45:47","commitOrder":4,"curCode":"    public InternalService.PUpdateCacheRequest buildSqlUpdateRequest(String sql, long partitionKey, long lastVersion, long lastestTime) {\n        if (updateRequest == null) {\n            updateRequest = InternalService.PUpdateCacheRequest.newBuilder()\n                    .setSqlKey(CacheProxy.getMd5(sql))\n                    .setCacheType(InternalService.CacheType.SQL_CACHE).build();\n        }\n        updateRequest = updateRequest.toBuilder()\n                .addValues(InternalService.PCacheValue.newBuilder()\n                        .setParam(InternalService.PCacheParam.newBuilder()\n                                .setPartitionKey(partitionKey)\n                                .setLastVersion(lastVersion)\n                                .setLastVersionTime(lastestTime)\n                                .build()).setDataSize(dataSize).addAllRows(\n                                rowList.stream().map(row -> ByteString.copyFrom(row))\n                                        .collect(Collectors.toList()))).build();\n        return updateRequest;\n    }\n","date":"2021-05-28 13:45:47","endLine":119,"groupId":"5165","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"buildSqlUpdateRequest","params":"(Stringsql@longpartitionKey@longlastVersion@longlastestTime)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-incubatordoris-10-0.7/blobInfo/CC_OUT/blobs/c4/68bac4bec86e3e3f2c9720a95514b2fe4ab15e.src","preCode":"    public InternalService.PUpdateCacheRequest buildSqlUpdateRequest(String sql, long partitionKey, long lastVersion, long lastestTime) {\n        if (updateRequest == null) {\n            updateRequest = InternalService.PUpdateCacheRequest.newBuilder()\n                    .setSqlKey(CacheProxy.getMd5(sql))\n                    .setCacheType(InternalService.CacheType.SQL_CACHE).build();\n        }\n        updateRequest = updateRequest.toBuilder()\n                .addValues(InternalService.PCacheValue.newBuilder()\n                        .setParam(InternalService.PCacheParam.newBuilder()\n                                .setPartitionKey(partitionKey)\n                                .setLastVersion(lastVersion)\n                                .setLastVersionTime(lastestTime)\n                                .build()).setDataSize(dataSize).addAllRows(\n                                rowList.stream().map(row -> ByteString.copyFrom(row))\n                                        .collect(Collectors.toList()))).build();\n        return updateRequest;\n    }\n","realPath":"fe/fe-core/src/main/java/org/apache/doris/qe/cache/RowBatchBuilder.java","repoName":"incubatordoris","snippetEndLine":0,"snippetStartLine":0,"startLine":103,"status":"N"},{"authorDate":"2021-06-18 11:40:00","commitOrder":4,"curCode":"    public InternalService.PUpdateCacheRequest buildPartitionUpdateRequest(String sql) {\n        if (updateRequest == null) {\n            updateRequest = InternalService.PUpdateCacheRequest.newBuilder()\n                    .setSqlKey(CacheProxy.getMd5(sql))\n                    .setCacheType(InternalService.CacheType.PARTITION_CACHE).build();\n        }\n        HashMap<Long, List<byte[]>> partRowMap = new HashMap<>();\n        List<byte[]> partitionRowList;\n        PartitionRange.PartitionKeyType cacheKey;\n        for (byte[] row : rowList) {\n            cacheKey = getKeyFromRow(row, keyIndex, keyType);\n            if (!cachePartMap.containsKey(cacheKey.realValue())) {\n                LOG.info(\"cant find partition key {}\", cacheKey.realValue());\n                continue;\n            }\n            if (!partRowMap.containsKey(cacheKey.realValue())) {\n                partitionRowList = Lists.newArrayList();\n                partitionRowList.add(row);\n                partRowMap.put(cacheKey.realValue(), partitionRowList);\n            } else {\n                partRowMap.get(cacheKey).add(row);\n            }\n        }\n\n        for (HashMap.Entry<Long, List<byte[]>> entry : partRowMap.entrySet()) {\n            Long key = entry.getKey();\n            PartitionRange.PartitionSingle partition = cachePartMap.get(key);\n            partitionRowList = entry.getValue();\n            int data_size = 0;\n            for (byte[] buf : partitionRowList) {\n                data_size += buf.length;\n            }\n            updateRequest = updateRequest.toBuilder()\n                    .addValues(InternalService.PCacheValue.newBuilder()\n                            .setParam(InternalService.PCacheParam.newBuilder()\n                                    .setPartitionKey(key)\n                                    .setLastVersion(partition.getPartition().getVisibleVersion())\n                                    .setLastVersionTime(partition.getPartition().getVisibleVersionTime())\n                                    .build()).setDataSize(dataSize).addAllRows(\n                                    partitionRowList.stream().map(row -> ByteString.copyFrom(row))\n                                            .collect(Collectors.toList()))).build();\n        }\n        return updateRequest;\n    }\n","date":"2021-06-18 11:40:00","endLine":185,"groupId":"3047","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"buildPartitionUpdateRequest","params":"(Stringsql)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-incubatordoris-10-0.7/blobInfo/CC_OUT/blobs/4f/8b832dd632376ad986c64e3ced20e8bb411e52.src","preCode":"    public InternalService.PUpdateCacheRequest buildPartitionUpdateRequest(String sql) {\n        if (updateRequest == null) {\n            updateRequest = InternalService.PUpdateCacheRequest.newBuilder()\n                    .setSqlKey(CacheProxy.getMd5(sql))\n                    .setCacheType(InternalService.CacheType.PARTITION_CACHE).build();\n        }\n        HashMap<Long, List<byte[]>> partRowMap = new HashMap<>();\n        List<byte[]> partitionRowList;\n        PartitionRange.PartitionKeyType cacheKey;\n        for (byte[] row : rowList) {\n            cacheKey = getKeyFromRow(row, keyIndex, keyType);\n            if (!cachePartMap.containsKey(cacheKey.realValue())) {\n                LOG.info(\"cant find partition key {}\", cacheKey.realValue());\n                continue;\n            }\n            if (!partRowMap.containsKey(cacheKey.realValue())) {\n                partitionRowList = Lists.newArrayList();\n                partitionRowList.add(row);\n                partRowMap.put(cacheKey.realValue(), partitionRowList);\n            } else {\n                partRowMap.get(cacheKey).add(row);\n            }\n        }\n\n        for (HashMap.Entry<Long, List<byte[]>> entry : partRowMap.entrySet()) {\n            Long key = entry.getKey();\n            PartitionRange.PartitionSingle partition = cachePartMap.get(key);\n            partitionRowList = entry.getValue();\n            updateRequest = updateRequest.toBuilder()\n                    .addValues(InternalService.PCacheValue.newBuilder()\n                            .setParam(InternalService.PCacheParam.newBuilder()\n                                    .setPartitionKey(key)\n                                    .setLastVersion(partition.getPartition().getVisibleVersion())\n                                    .setLastVersionTime(partition.getPartition().getVisibleVersionTime())\n                                    .build()).addAllRows(\n                                    partitionRowList.stream().map(row -> ByteString.copyFrom(row))\n                                            .collect(Collectors.toList()))).build();\n        }\n        return updateRequest;\n    }\n","realPath":"fe/fe-core/src/main/java/org/apache/doris/qe/cache/RowBatchBuilder.java","repoName":"incubatordoris","snippetEndLine":0,"snippetStartLine":0,"startLine":142,"status":"M"}],"commitId":"bff6ede94ee54c7a556bfedbab39c6aa243d5b11","commitMessage":"@@@add data size field for partition cache (#6026)\n\nCo-authored-by: wangxixu <wangxixu@xiaomi.com>","date":"2021-06-18 11:40:00","modifiedFileCount":"1","status":"M","submitter":"xinghuayu007"},{"authorTime":"2021-08-10 10:14:46","codes":[{"authorDate":"2021-05-28 13:45:47","commitOrder":5,"curCode":"    public InternalService.PUpdateCacheRequest buildSqlUpdateRequest(String sql, long partitionKey, long lastVersion, long lastestTime) {\n        if (updateRequest == null) {\n            updateRequest = InternalService.PUpdateCacheRequest.newBuilder()\n                    .setSqlKey(CacheProxy.getMd5(sql))\n                    .setCacheType(InternalService.CacheType.SQL_CACHE).build();\n        }\n        updateRequest = updateRequest.toBuilder()\n                .addValues(InternalService.PCacheValue.newBuilder()\n                        .setParam(InternalService.PCacheParam.newBuilder()\n                                .setPartitionKey(partitionKey)\n                                .setLastVersion(lastVersion)\n                                .setLastVersionTime(lastestTime)\n                                .build()).setDataSize(dataSize).addAllRows(\n                                rowList.stream().map(row -> ByteString.copyFrom(row))\n                                        .collect(Collectors.toList()))).build();\n        return updateRequest;\n    }\n","date":"2021-05-28 13:45:47","endLine":119,"groupId":"101073","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"buildSqlUpdateRequest","params":"(Stringsql@longpartitionKey@longlastVersion@longlastestTime)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-incubatordoris-10-0.7/blobInfo/CC_OUT/blobs/c4/68bac4bec86e3e3f2c9720a95514b2fe4ab15e.src","preCode":"    public InternalService.PUpdateCacheRequest buildSqlUpdateRequest(String sql, long partitionKey, long lastVersion, long lastestTime) {\n        if (updateRequest == null) {\n            updateRequest = InternalService.PUpdateCacheRequest.newBuilder()\n                    .setSqlKey(CacheProxy.getMd5(sql))\n                    .setCacheType(InternalService.CacheType.SQL_CACHE).build();\n        }\n        updateRequest = updateRequest.toBuilder()\n                .addValues(InternalService.PCacheValue.newBuilder()\n                        .setParam(InternalService.PCacheParam.newBuilder()\n                                .setPartitionKey(partitionKey)\n                                .setLastVersion(lastVersion)\n                                .setLastVersionTime(lastestTime)\n                                .build()).setDataSize(dataSize).addAllRows(\n                                rowList.stream().map(row -> ByteString.copyFrom(row))\n                                        .collect(Collectors.toList()))).build();\n        return updateRequest;\n    }\n","realPath":"fe/fe-core/src/main/java/org/apache/doris/qe/cache/RowBatchBuilder.java","repoName":"incubatordoris","snippetEndLine":0,"snippetStartLine":0,"startLine":103,"status":"N"},{"authorDate":"2021-08-10 10:14:46","commitOrder":5,"curCode":"    public InternalService.PUpdateCacheRequest buildPartitionUpdateRequest(String sql) {\n        if (updateRequest == null) {\n            updateRequest = InternalService.PUpdateCacheRequest.newBuilder()\n                    .setSqlKey(CacheProxy.getMd5(sql))\n                    .setCacheType(InternalService.CacheType.PARTITION_CACHE).build();\n        }\n        HashMap<Long, List<byte[]>> partRowMap = new HashMap<>();\n        List<byte[]> partitionRowList;\n        PartitionRange.PartitionKeyType cacheKey;\n        for (byte[] row : rowList) {\n            cacheKey = getKeyFromRow(row, keyIndex, keyType);\n            if (!cachePartMap.containsKey(cacheKey.realValue())) {\n                LOG.info(\"cant find partition key {}\", cacheKey.realValue());\n                continue;\n            }\n            if (!partRowMap.containsKey(cacheKey.realValue())) {\n                partitionRowList = Lists.newArrayList();\n                partitionRowList.add(row);\n                partRowMap.put(cacheKey.realValue(), partitionRowList);\n            } else {\n                partRowMap.get(cacheKey.realValue()).add(row);\n            }\n        }\n\n        for (HashMap.Entry<Long, List<byte[]>> entry : partRowMap.entrySet()) {\n            Long key = entry.getKey();\n            PartitionRange.PartitionSingle partition = cachePartMap.get(key);\n            partitionRowList = entry.getValue();\n            int data_size = 0;\n            for (byte[] buf : partitionRowList) {\n                data_size += buf.length;\n            }\n            updateRequest = updateRequest.toBuilder()\n                    .addValues(InternalService.PCacheValue.newBuilder()\n                            .setParam(InternalService.PCacheParam.newBuilder()\n                                    .setPartitionKey(key)\n                                    .setLastVersion(partition.getPartition().getVisibleVersion())\n                                    .setLastVersionTime(partition.getPartition().getVisibleVersionTime())\n                                    .build()).setDataSize(dataSize).addAllRows(\n                                    partitionRowList.stream().map(row -> ByteString.copyFrom(row))\n                                            .collect(Collectors.toList()))).build();\n        }\n        return updateRequest;\n    }\n","date":"2021-08-10 10:14:46","endLine":185,"groupId":"101073","id":8,"instanceNumber":2,"isCurCommit":1,"methodName":"buildPartitionUpdateRequest","params":"(Stringsql)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-incubatordoris-10-0.7/blobInfo/CC_OUT/blobs/ba/7946eda237fd145a071da0f78b4abbf9071eb5.src","preCode":"    public InternalService.PUpdateCacheRequest buildPartitionUpdateRequest(String sql) {\n        if (updateRequest == null) {\n            updateRequest = InternalService.PUpdateCacheRequest.newBuilder()\n                    .setSqlKey(CacheProxy.getMd5(sql))\n                    .setCacheType(InternalService.CacheType.PARTITION_CACHE).build();\n        }\n        HashMap<Long, List<byte[]>> partRowMap = new HashMap<>();\n        List<byte[]> partitionRowList;\n        PartitionRange.PartitionKeyType cacheKey;\n        for (byte[] row : rowList) {\n            cacheKey = getKeyFromRow(row, keyIndex, keyType);\n            if (!cachePartMap.containsKey(cacheKey.realValue())) {\n                LOG.info(\"cant find partition key {}\", cacheKey.realValue());\n                continue;\n            }\n            if (!partRowMap.containsKey(cacheKey.realValue())) {\n                partitionRowList = Lists.newArrayList();\n                partitionRowList.add(row);\n                partRowMap.put(cacheKey.realValue(), partitionRowList);\n            } else {\n                partRowMap.get(cacheKey).add(row);\n            }\n        }\n\n        for (HashMap.Entry<Long, List<byte[]>> entry : partRowMap.entrySet()) {\n            Long key = entry.getKey();\n            PartitionRange.PartitionSingle partition = cachePartMap.get(key);\n            partitionRowList = entry.getValue();\n            int data_size = 0;\n            for (byte[] buf : partitionRowList) {\n                data_size += buf.length;\n            }\n            updateRequest = updateRequest.toBuilder()\n                    .addValues(InternalService.PCacheValue.newBuilder()\n                            .setParam(InternalService.PCacheParam.newBuilder()\n                                    .setPartitionKey(key)\n                                    .setLastVersion(partition.getPartition().getVisibleVersion())\n                                    .setLastVersionTime(partition.getPartition().getVisibleVersionTime())\n                                    .build()).setDataSize(dataSize).addAllRows(\n                                    partitionRowList.stream().map(row -> ByteString.copyFrom(row))\n                                            .collect(Collectors.toList()))).build();\n        }\n        return updateRequest;\n    }\n","realPath":"fe/fe-core/src/main/java/org/apache/doris/qe/cache/RowBatchBuilder.java","repoName":"incubatordoris","snippetEndLine":0,"snippetStartLine":0,"startLine":142,"status":"M"}],"commitId":"5f7c7ce7433573c2142b9391acb2e19dff6a542e","commitMessage":"@@@[Bug][Cache] Map.get with cache key real value. (#6377)\n\n","date":"2021-08-10 10:14:46","modifiedFileCount":"1","status":"M","submitter":"Qi"}]
