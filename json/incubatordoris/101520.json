[{"authorTime":"2020-07-21 12:42:42","codes":[{"authorDate":"2020-07-21 12:42:42","commitOrder":1,"curCode":"    public TLoadTxnCommitResult loadTxnCommit(TLoadTxnCommitRequest request) throws TException {\n        String clientAddr = getClientAddrAsString();\n        LOG.info(\"receive txn commit request. db: {}, tbl: {}, txn id: {}, backend: {}\",\n                request.getDb(), request.getTbl(), request.getTxnId(), clientAddr);\n        LOG.debug(\"txn commit request: {}\", request);\n\n        TLoadTxnCommitResult result = new TLoadTxnCommitResult();\n        TStatus status = new TStatus(TStatusCode.OK);\n        result.setStatus(status);\n        try {\n            if (!loadTxnCommitImpl(request)) {\n                \r\n                status.setStatus_code(TStatusCode.PUBLISH_TIMEOUT);\n                status.addToError_msgs(\"transaction commit successfully, BUT data will be visible later\");\n            }\n        } catch (UserException e) {\n            LOG.warn(\"failed to commit txn: {}: {}\", request.getTxnId(), e.getMessage());\n            status.setStatus_code(TStatusCode.ANALYSIS_ERROR);\n            status.addToError_msgs(e.getMessage());\n        } catch (Throwable e) {\n            LOG.warn(\"catch unknown result.\", e);\n            status.setStatus_code(TStatusCode.INTERNAL_ERROR);\n            status.addToError_msgs(Strings.nullToEmpty(e.getMessage()));\n            return result;\n        }\n        return result;\n    }\n","date":"2020-07-21 12:42:42","endLine":735,"groupId":"6342","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"loadTxnCommit","params":"(TLoadTxnCommitRequestrequest)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-incubatordoris-10-0.7/blobInfo/CC_OUT/blobs/c7/8278228f02e5a6ffe59009162348b35ec04d6a.src","preCode":"    public TLoadTxnCommitResult loadTxnCommit(TLoadTxnCommitRequest request) throws TException {\n        String clientAddr = getClientAddrAsString();\n        LOG.info(\"receive txn commit request. db: {}, tbl: {}, txn id: {}, backend: {}\",\n                request.getDb(), request.getTbl(), request.getTxnId(), clientAddr);\n        LOG.debug(\"txn commit request: {}\", request);\n\n        TLoadTxnCommitResult result = new TLoadTxnCommitResult();\n        TStatus status = new TStatus(TStatusCode.OK);\n        result.setStatus(status);\n        try {\n            if (!loadTxnCommitImpl(request)) {\n                \r\n                status.setStatus_code(TStatusCode.PUBLISH_TIMEOUT);\n                status.addToError_msgs(\"transaction commit successfully, BUT data will be visible later\");\n            }\n        } catch (UserException e) {\n            LOG.warn(\"failed to commit txn: {}: {}\", request.getTxnId(), e.getMessage());\n            status.setStatus_code(TStatusCode.ANALYSIS_ERROR);\n            status.addToError_msgs(e.getMessage());\n        } catch (Throwable e) {\n            LOG.warn(\"catch unknown result.\", e);\n            status.setStatus_code(TStatusCode.INTERNAL_ERROR);\n            status.addToError_msgs(Strings.nullToEmpty(e.getMessage()));\n            return result;\n        }\n        return result;\n    }\n","realPath":"fe/fe-core/src/main/java/org/apache/doris/service/FrontendServiceImpl.java","repoName":"incubatordoris","snippetEndLine":0,"snippetStartLine":0,"startLine":709,"status":"B"},{"authorDate":"2020-07-21 12:42:42","commitOrder":1,"curCode":"    public TLoadTxnRollbackResult loadTxnRollback(TLoadTxnRollbackRequest request) throws TException {\n        String clientAddr = getClientAddrAsString();\n        LOG.info(\"receive txn rollback request. db: {}, tbl: {}, txn id: {}, reason: {}, backend: {}\",\n                request.getDb(), request.getTbl(), request.getTxnId(), request.getReason(), clientAddr);\n        LOG.debug(\"txn rollback request: {}\", request);\n\n        TLoadTxnRollbackResult result = new TLoadTxnRollbackResult();\n        TStatus status = new TStatus(TStatusCode.OK);\n        result.setStatus(status);\n        try {\n            loadTxnRollbackImpl(request);\n        } catch (UserException e) {\n            LOG.warn(\"failed to rollback txn {}: {}\", request.getTxnId(), e.getMessage());\n            status.setStatus_code(TStatusCode.ANALYSIS_ERROR);\n            status.addToError_msgs(e.getMessage());\n        } catch (Throwable e) {\n            LOG.warn(\"catch unknown result.\", e);\n            status.setStatus_code(TStatusCode.INTERNAL_ERROR);\n            status.addToError_msgs(Strings.nullToEmpty(e.getMessage()));\n            return result;\n        }\n\n        return result;\n    }\n","date":"2020-07-21 12:42:42","endLine":798,"groupId":"7445","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"loadTxnRollback","params":"(TLoadTxnRollbackRequestrequest)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-incubatordoris-10-0.7/blobInfo/CC_OUT/blobs/c7/8278228f02e5a6ffe59009162348b35ec04d6a.src","preCode":"    public TLoadTxnRollbackResult loadTxnRollback(TLoadTxnRollbackRequest request) throws TException {\n        String clientAddr = getClientAddrAsString();\n        LOG.info(\"receive txn rollback request. db: {}, tbl: {}, txn id: {}, reason: {}, backend: {}\",\n                request.getDb(), request.getTbl(), request.getTxnId(), request.getReason(), clientAddr);\n        LOG.debug(\"txn rollback request: {}\", request);\n\n        TLoadTxnRollbackResult result = new TLoadTxnRollbackResult();\n        TStatus status = new TStatus(TStatusCode.OK);\n        result.setStatus(status);\n        try {\n            loadTxnRollbackImpl(request);\n        } catch (UserException e) {\n            LOG.warn(\"failed to rollback txn {}: {}\", request.getTxnId(), e.getMessage());\n            status.setStatus_code(TStatusCode.ANALYSIS_ERROR);\n            status.addToError_msgs(e.getMessage());\n        } catch (Throwable e) {\n            LOG.warn(\"catch unknown result.\", e);\n            status.setStatus_code(TStatusCode.INTERNAL_ERROR);\n            status.addToError_msgs(Strings.nullToEmpty(e.getMessage()));\n            return result;\n        }\n\n        return result;\n    }\n","realPath":"fe/fe-core/src/main/java/org/apache/doris/service/FrontendServiceImpl.java","repoName":"incubatordoris","snippetEndLine":0,"snippetStartLine":0,"startLine":775,"status":"B"}],"commitId":"ad17afef9139a9aeedeb2e92638e95886d515f14","commitMessage":"@@@[CodeRefactor] #4098 Make FE multi module (#4099)\n\nThis PR change the FE code structure to maven multi module structure. \nSee ISSUE: #4098 for more info.  such as How to resolve conflicts.","date":"2020-07-21 12:42:42","modifiedFileCount":"0","status":"B","submitter":"Mingyu Chen"},{"authorTime":"2020-08-28 13:28:11","codes":[{"authorDate":"2020-08-28 13:28:11","commitOrder":2,"curCode":"    public TLoadTxnCommitResult loadTxnCommit(TLoadTxnCommitRequest request) throws TException {\n        String clientAddr = getClientAddrAsString();\n        LOG.info(\"receive txn commit request. db: {}, tbl: {}, txn id: {}, backend: {}\",\n                request.getDb(), request.getTbl(), request.getTxnId(), clientAddr);\n        LOG.debug(\"txn commit request: {}\", request);\n\n        TLoadTxnCommitResult result = new TLoadTxnCommitResult();\n        TStatus status = new TStatus(TStatusCode.OK);\n        result.setStatus(status);\n        try {\n            if (!loadTxnCommitImpl(request)) {\n                \r\n                status.setStatusCode(TStatusCode.PUBLISH_TIMEOUT);\n                status.addToErrorMsgs(\"transaction commit successfully, BUT data will be visible later\");\n            }\n        } catch (UserException e) {\n            LOG.warn(\"failed to commit txn: {}: {}\", request.getTxnId(), e.getMessage());\n            status.setStatusCode(TStatusCode.ANALYSIS_ERROR);\n            status.addToErrorMsgs(e.getMessage());\n        } catch (Throwable e) {\n            LOG.warn(\"catch unknown result.\", e);\n            status.setStatusCode(TStatusCode.INTERNAL_ERROR);\n            status.addToErrorMsgs(Strings.nullToEmpty(e.getMessage()));\n            return result;\n        }\n        return result;\n    }\n","date":"2020-08-28 13:28:11","endLine":735,"groupId":"6342","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"loadTxnCommit","params":"(TLoadTxnCommitRequestrequest)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-incubatordoris-10-0.7/blobInfo/CC_OUT/blobs/b8/549348788595dfe114cebe9fa9604670f13923.src","preCode":"    public TLoadTxnCommitResult loadTxnCommit(TLoadTxnCommitRequest request) throws TException {\n        String clientAddr = getClientAddrAsString();\n        LOG.info(\"receive txn commit request. db: {}, tbl: {}, txn id: {}, backend: {}\",\n                request.getDb(), request.getTbl(), request.getTxnId(), clientAddr);\n        LOG.debug(\"txn commit request: {}\", request);\n\n        TLoadTxnCommitResult result = new TLoadTxnCommitResult();\n        TStatus status = new TStatus(TStatusCode.OK);\n        result.setStatus(status);\n        try {\n            if (!loadTxnCommitImpl(request)) {\n                \r\n                status.setStatus_code(TStatusCode.PUBLISH_TIMEOUT);\n                status.addToError_msgs(\"transaction commit successfully, BUT data will be visible later\");\n            }\n        } catch (UserException e) {\n            LOG.warn(\"failed to commit txn: {}: {}\", request.getTxnId(), e.getMessage());\n            status.setStatus_code(TStatusCode.ANALYSIS_ERROR);\n            status.addToError_msgs(e.getMessage());\n        } catch (Throwable e) {\n            LOG.warn(\"catch unknown result.\", e);\n            status.setStatus_code(TStatusCode.INTERNAL_ERROR);\n            status.addToError_msgs(Strings.nullToEmpty(e.getMessage()));\n            return result;\n        }\n        return result;\n    }\n","realPath":"fe/fe-core/src/main/java/org/apache/doris/service/FrontendServiceImpl.java","repoName":"incubatordoris","snippetEndLine":0,"snippetStartLine":0,"startLine":709,"status":"M"},{"authorDate":"2020-08-28 13:28:11","commitOrder":2,"curCode":"    public TLoadTxnRollbackResult loadTxnRollback(TLoadTxnRollbackRequest request) throws TException {\n        String clientAddr = getClientAddrAsString();\n        LOG.info(\"receive txn rollback request. db: {}, tbl: {}, txn id: {}, reason: {}, backend: {}\",\n                request.getDb(), request.getTbl(), request.getTxnId(), request.getReason(), clientAddr);\n        LOG.debug(\"txn rollback request: {}\", request);\n\n        TLoadTxnRollbackResult result = new TLoadTxnRollbackResult();\n        TStatus status = new TStatus(TStatusCode.OK);\n        result.setStatus(status);\n        try {\n            loadTxnRollbackImpl(request);\n        } catch (UserException e) {\n            LOG.warn(\"failed to rollback txn {}: {}\", request.getTxnId(), e.getMessage());\n            status.setStatusCode(TStatusCode.ANALYSIS_ERROR);\n            status.addToErrorMsgs(e.getMessage());\n        } catch (Throwable e) {\n            LOG.warn(\"catch unknown result.\", e);\n            status.setStatusCode(TStatusCode.INTERNAL_ERROR);\n            status.addToErrorMsgs(Strings.nullToEmpty(e.getMessage()));\n            return result;\n        }\n\n        return result;\n    }\n","date":"2020-08-28 13:28:11","endLine":798,"groupId":"7445","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"loadTxnRollback","params":"(TLoadTxnRollbackRequestrequest)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-incubatordoris-10-0.7/blobInfo/CC_OUT/blobs/b8/549348788595dfe114cebe9fa9604670f13923.src","preCode":"    public TLoadTxnRollbackResult loadTxnRollback(TLoadTxnRollbackRequest request) throws TException {\n        String clientAddr = getClientAddrAsString();\n        LOG.info(\"receive txn rollback request. db: {}, tbl: {}, txn id: {}, reason: {}, backend: {}\",\n                request.getDb(), request.getTbl(), request.getTxnId(), request.getReason(), clientAddr);\n        LOG.debug(\"txn rollback request: {}\", request);\n\n        TLoadTxnRollbackResult result = new TLoadTxnRollbackResult();\n        TStatus status = new TStatus(TStatusCode.OK);\n        result.setStatus(status);\n        try {\n            loadTxnRollbackImpl(request);\n        } catch (UserException e) {\n            LOG.warn(\"failed to rollback txn {}: {}\", request.getTxnId(), e.getMessage());\n            status.setStatus_code(TStatusCode.ANALYSIS_ERROR);\n            status.addToError_msgs(e.getMessage());\n        } catch (Throwable e) {\n            LOG.warn(\"catch unknown result.\", e);\n            status.setStatus_code(TStatusCode.INTERNAL_ERROR);\n            status.addToError_msgs(Strings.nullToEmpty(e.getMessage()));\n            return result;\n        }\n\n        return result;\n    }\n","realPath":"fe/fe-core/src/main/java/org/apache/doris/service/FrontendServiceImpl.java","repoName":"incubatordoris","snippetEndLine":0,"snippetStartLine":0,"startLine":775,"status":"M"}],"commitId":"3b7614e174d3999e18056d6d741641d664c52908","commitMessage":"@@@[Refactor] Use camelCase in thrift generated java sources (#4443)\n\nUse camelCase in thrift generated java sources to make us fe's code style is more unified","date":"2020-08-28 13:28:11","modifiedFileCount":"109","status":"M","submitter":"Zhengguo Yang"},{"authorTime":"2020-10-26 16:10:19","codes":[{"authorDate":"2020-10-26 16:10:19","commitOrder":3,"curCode":"    public TLoadTxnCommitResult loadTxnCommit(TLoadTxnCommitRequest request) throws TException {\n        String clientAddr = getClientAddrAsString();\n        LOG.debug(\"receive txn commit request: {}, backend: {}\", request, clientAddr);\n\n        TLoadTxnCommitResult result = new TLoadTxnCommitResult();\n        TStatus status = new TStatus(TStatusCode.OK);\n        result.setStatus(status);\n        try {\n            if (!loadTxnCommitImpl(request)) {\n                \r\n                status.setStatusCode(TStatusCode.PUBLISH_TIMEOUT);\n                status.addToErrorMsgs(\"transaction commit successfully, BUT data will be visible later\");\n            }\n        } catch (UserException e) {\n            LOG.warn(\"failed to commit txn: {}: {}\", request.getTxnId(), e.getMessage());\n            status.setStatusCode(TStatusCode.ANALYSIS_ERROR);\n            status.addToErrorMsgs(e.getMessage());\n        } catch (Throwable e) {\n            LOG.warn(\"catch unknown result.\", e);\n            status.setStatusCode(TStatusCode.INTERNAL_ERROR);\n            status.addToErrorMsgs(Strings.nullToEmpty(e.getMessage()));\n            return result;\n        }\n        return result;\n    }\n","date":"2020-10-26 16:10:19","endLine":735,"groupId":"101520","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"loadTxnCommit","params":"(TLoadTxnCommitRequestrequest)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-incubatordoris-10-0.7/blobInfo/CC_OUT/blobs/e2/9aa96a20e72e6a7ca9305e2fb532082ab31bd6.src","preCode":"    public TLoadTxnCommitResult loadTxnCommit(TLoadTxnCommitRequest request) throws TException {\n        String clientAddr = getClientAddrAsString();\n        LOG.info(\"receive txn commit request. db: {}, tbl: {}, txn id: {}, backend: {}\",\n                request.getDb(), request.getTbl(), request.getTxnId(), clientAddr);\n        LOG.debug(\"txn commit request: {}\", request);\n\n        TLoadTxnCommitResult result = new TLoadTxnCommitResult();\n        TStatus status = new TStatus(TStatusCode.OK);\n        result.setStatus(status);\n        try {\n            if (!loadTxnCommitImpl(request)) {\n                \r\n                status.setStatusCode(TStatusCode.PUBLISH_TIMEOUT);\n                status.addToErrorMsgs(\"transaction commit successfully, BUT data will be visible later\");\n            }\n        } catch (UserException e) {\n            LOG.warn(\"failed to commit txn: {}: {}\", request.getTxnId(), e.getMessage());\n            status.setStatusCode(TStatusCode.ANALYSIS_ERROR);\n            status.addToErrorMsgs(e.getMessage());\n        } catch (Throwable e) {\n            LOG.warn(\"catch unknown result.\", e);\n            status.setStatusCode(TStatusCode.INTERNAL_ERROR);\n            status.addToErrorMsgs(Strings.nullToEmpty(e.getMessage()));\n            return result;\n        }\n        return result;\n    }\n","realPath":"fe/fe-core/src/main/java/org/apache/doris/service/FrontendServiceImpl.java","repoName":"incubatordoris","snippetEndLine":0,"snippetStartLine":0,"startLine":711,"status":"M"},{"authorDate":"2020-10-26 16:10:19","commitOrder":3,"curCode":"    public TLoadTxnRollbackResult loadTxnRollback(TLoadTxnRollbackRequest request) throws TException {\n        String clientAddr = getClientAddrAsString();\n        LOG.debug(\"receive txn rollback request: {}, backend: {}\", request, clientAddr);\n        TLoadTxnRollbackResult result = new TLoadTxnRollbackResult();\n        TStatus status = new TStatus(TStatusCode.OK);\n        result.setStatus(status);\n        try {\n            loadTxnRollbackImpl(request);\n        } catch (UserException e) {\n            LOG.warn(\"failed to rollback txn {}: {}\", request.getTxnId(), e.getMessage());\n            status.setStatusCode(TStatusCode.ANALYSIS_ERROR);\n            status.addToErrorMsgs(e.getMessage());\n        } catch (Throwable e) {\n            LOG.warn(\"catch unknown result.\", e);\n            status.setStatusCode(TStatusCode.INTERNAL_ERROR);\n            status.addToErrorMsgs(Strings.nullToEmpty(e.getMessage()));\n            return result;\n        }\n\n        return result;\n    }\n","date":"2020-10-26 16:10:19","endLine":795,"groupId":"101520","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"loadTxnRollback","params":"(TLoadTxnRollbackRequestrequest)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-incubatordoris-10-0.7/blobInfo/CC_OUT/blobs/e2/9aa96a20e72e6a7ca9305e2fb532082ab31bd6.src","preCode":"    public TLoadTxnRollbackResult loadTxnRollback(TLoadTxnRollbackRequest request) throws TException {\n        String clientAddr = getClientAddrAsString();\n        LOG.info(\"receive txn rollback request. db: {}, tbl: {}, txn id: {}, reason: {}, backend: {}\",\n                request.getDb(), request.getTbl(), request.getTxnId(), request.getReason(), clientAddr);\n        LOG.debug(\"txn rollback request: {}\", request);\n\n        TLoadTxnRollbackResult result = new TLoadTxnRollbackResult();\n        TStatus status = new TStatus(TStatusCode.OK);\n        result.setStatus(status);\n        try {\n            loadTxnRollbackImpl(request);\n        } catch (UserException e) {\n            LOG.warn(\"failed to rollback txn {}: {}\", request.getTxnId(), e.getMessage());\n            status.setStatusCode(TStatusCode.ANALYSIS_ERROR);\n            status.addToErrorMsgs(e.getMessage());\n        } catch (Throwable e) {\n            LOG.warn(\"catch unknown result.\", e);\n            status.setStatusCode(TStatusCode.INTERNAL_ERROR);\n            status.addToErrorMsgs(Strings.nullToEmpty(e.getMessage()));\n            return result;\n        }\n\n        return result;\n    }\n","realPath":"fe/fe-core/src/main/java/org/apache/doris/service/FrontendServiceImpl.java","repoName":"incubatordoris","snippetEndLine":0,"snippetStartLine":0,"startLine":775,"status":"M"}],"commitId":"a61eea3b2e76d741c98b9faed8cec51c1d469f94","commitMessage":"@@@ Make some debug log settings configurable and change some log level from info to debug to avoid performance bottlenecks (#4766)\n\n","date":"2020-10-26 16:10:19","modifiedFileCount":"6","status":"M","submitter":"caiconghui"}]
