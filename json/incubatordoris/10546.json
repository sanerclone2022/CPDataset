[{"authorTime":"2020-10-11 21:11:04","codes":[{"authorDate":"2020-09-20 20:56:36","commitOrder":2,"curCode":"    public void testPushDownOfOdbcTable() throws Exception {\n        connectContext.setDatabase(\"default_cluster:test\");\n\n        \r\n        String queryStr = \"explain select * from odbc_mysql where k1 > 10 and abs(k1) > 10\";\n        String explainString = UtFrameUtils.getSQLPlanOrErrorMsg(connectContext, queryStr);\n        Assert.assertTrue(explainString.contains(\"`k1` > 10\"));\n        Assert.assertTrue(explainString.contains(\"abs(`k1`) > 10\"));\n\n        \r\n        \r\n        queryStr = \"explain select * from odbc_oracle where k1 > 10 and abs(k1) > 10\";\n        explainString = UtFrameUtils.getSQLPlanOrErrorMsg(connectContext, queryStr);\n        Assert.assertTrue(explainString.contains(\"k1 > 10\"));\n        Assert.assertTrue(!explainString.contains(\"abs(k1) > 10\"));\n    }\n","date":"2020-09-20 20:56:36","endLine":1113,"groupId":"7626","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testPushDownOfOdbcTable","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-incubatordoris-10-0.7/blobInfo/CC_OUT/blobs/b6/6823e41f0a5c7c26eeba0356512b348a0232e1.src","preCode":"    public void testPushDownOfOdbcTable() throws Exception {\n        connectContext.setDatabase(\"default_cluster:test\");\n\n        \r\n        String queryStr = \"explain select * from odbc_mysql where k1 > 10 and abs(k1) > 10\";\n        String explainString = UtFrameUtils.getSQLPlanOrErrorMsg(connectContext, queryStr);\n        Assert.assertTrue(explainString.contains(\"`k1` > 10\"));\n        Assert.assertTrue(explainString.contains(\"abs(`k1`) > 10\"));\n\n        \r\n        \r\n        queryStr = \"explain select * from odbc_oracle where k1 > 10 and abs(k1) > 10\";\n        explainString = UtFrameUtils.getSQLPlanOrErrorMsg(connectContext, queryStr);\n        Assert.assertTrue(explainString.contains(\"k1 > 10\"));\n        Assert.assertTrue(!explainString.contains(\"abs(k1) > 10\"));\n    }\n","realPath":"fe/fe-core/src/test/java/org/apache/doris/planner/QueryPlanTest.java","repoName":"incubatordoris","snippetEndLine":0,"snippetStartLine":0,"startLine":1098,"status":"NB"},{"authorDate":"2020-10-11 21:11:04","commitOrder":2,"curCode":"    public void testLimitOfExternalTable() throws Exception {\n        connectContext.setDatabase(\"default_cluster:test\");\n\n        \r\n        String queryStr = \"explain select * from odbc_mysql where k1 > 10 and abs(k1) > 10 limit 10\";\n        String explainString = UtFrameUtils.getSQLPlanOrErrorMsg(connectContext, queryStr);\n        Assert.assertTrue(explainString.contains(\"LIMIT 10\"));\n\n        \r\n        queryStr = \"explain select * from odbc_oracle where k1 > 10 and abs(k1) > 10 limit 10\";\n        explainString = UtFrameUtils.getSQLPlanOrErrorMsg(connectContext, queryStr);\n        Assert.assertTrue(explainString.contains(\"ROWNUM <= 10\"));\n\n        \r\n        queryStr = \"explain select * from mysql_table where k1 > 10 and abs(k1) > 10 limit 10\";\n        explainString = UtFrameUtils.getSQLPlanOrErrorMsg(connectContext, queryStr);\n        Assert.assertTrue(explainString.contains(\"LIMIT 10\"));\n    }\n","date":"2020-10-11 21:11:04","endLine":1235,"groupId":"5548","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testLimitOfExternalTable","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-incubatordoris-10-0.7/blobInfo/CC_OUT/blobs/f2/b93fba6934dd035ac4bc1c160b3498ed445e71.src","preCode":"    public void testLimitOfExternalTable() throws Exception {\n        connectContext.setDatabase(\"default_cluster:test\");\n\n        \r\n        String queryStr = \"explain select * from odbc_mysql where k1 > 10 and abs(k1) > 10 limit 10\";\n        String explainString = UtFrameUtils.getSQLPlanOrErrorMsg(connectContext, queryStr);\n        Assert.assertTrue(explainString.contains(\"LIMIT 10\"));\n\n        \r\n        queryStr = \"explain select * from odbc_oracle where k1 > 10 and abs(k1) > 10 limit 10\";\n        explainString = UtFrameUtils.getSQLPlanOrErrorMsg(connectContext, queryStr);\n        Assert.assertTrue(explainString.contains(\"ROWNUM <= 10\"));\n\n        \r\n        queryStr = \"explain select * from mysql_table where k1 > 10 and abs(k1) > 10 limit 10\";\n        explainString = UtFrameUtils.getSQLPlanOrErrorMsg(connectContext, queryStr);\n        Assert.assertTrue(explainString.contains(\"LIMIT 10\"));\n    }\n","realPath":"fe/fe-core/src/test/java/org/apache/doris/planner/QueryPlanTest.java","repoName":"incubatordoris","snippetEndLine":0,"snippetStartLine":0,"startLine":1218,"status":"B"}],"commitId":"d73d205de76a3f5fb856d650329dca3f2a7ce77e","commitMessage":"@@@[ODBC/MySQL] Support Limit Clause Push Down For ODBC Table And MySQL Table(#4706) (#4707)\n\n1. Support limit clause push down both odbc table and mysql table.\n2. Code refactor of ODBC Scan Node.  change `build_connect_string` and `query_string` from BE to FE to make it easily to modify","date":"2020-10-11 21:11:04","modifiedFileCount":"4","status":"M","submitter":"HappenLee"},{"authorTime":"2020-10-21 10:12:12","codes":[{"authorDate":"2020-09-20 20:56:36","commitOrder":3,"curCode":"    public void testPushDownOfOdbcTable() throws Exception {\n        connectContext.setDatabase(\"default_cluster:test\");\n\n        \r\n        String queryStr = \"explain select * from odbc_mysql where k1 > 10 and abs(k1) > 10\";\n        String explainString = UtFrameUtils.getSQLPlanOrErrorMsg(connectContext, queryStr);\n        Assert.assertTrue(explainString.contains(\"`k1` > 10\"));\n        Assert.assertTrue(explainString.contains(\"abs(`k1`) > 10\"));\n\n        \r\n        \r\n        queryStr = \"explain select * from odbc_oracle where k1 > 10 and abs(k1) > 10\";\n        explainString = UtFrameUtils.getSQLPlanOrErrorMsg(connectContext, queryStr);\n        Assert.assertTrue(explainString.contains(\"k1 > 10\"));\n        Assert.assertTrue(!explainString.contains(\"abs(k1) > 10\"));\n    }\n","date":"2020-09-20 20:56:36","endLine":1113,"groupId":"10546","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testPushDownOfOdbcTable","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-incubatordoris-10-0.7/blobInfo/CC_OUT/blobs/b6/6823e41f0a5c7c26eeba0356512b348a0232e1.src","preCode":"    public void testPushDownOfOdbcTable() throws Exception {\n        connectContext.setDatabase(\"default_cluster:test\");\n\n        \r\n        String queryStr = \"explain select * from odbc_mysql where k1 > 10 and abs(k1) > 10\";\n        String explainString = UtFrameUtils.getSQLPlanOrErrorMsg(connectContext, queryStr);\n        Assert.assertTrue(explainString.contains(\"`k1` > 10\"));\n        Assert.assertTrue(explainString.contains(\"abs(`k1`) > 10\"));\n\n        \r\n        \r\n        queryStr = \"explain select * from odbc_oracle where k1 > 10 and abs(k1) > 10\";\n        explainString = UtFrameUtils.getSQLPlanOrErrorMsg(connectContext, queryStr);\n        Assert.assertTrue(explainString.contains(\"k1 > 10\"));\n        Assert.assertTrue(!explainString.contains(\"abs(k1) > 10\"));\n    }\n","realPath":"fe/fe-core/src/test/java/org/apache/doris/planner/QueryPlanTest.java","repoName":"incubatordoris","snippetEndLine":0,"snippetStartLine":0,"startLine":1098,"status":"N"},{"authorDate":"2020-10-21 10:12:12","commitOrder":3,"curCode":"    public void testLimitOfExternalTable() throws Exception {\n        connectContext.setDatabase(\"default_cluster:test\");\n\n        \r\n        String queryStr = \"explain select * from odbc_mysql where k1 > 10 and abs(k1) > 10 limit 10\";\n        String explainString = UtFrameUtils.getSQLPlanOrErrorMsg(connectContext, queryStr);\n        Assert.assertTrue(explainString.contains(\"LIMIT 10\"));\n\n        \r\n        queryStr = \"explain select * from odbc_oracle where k1 > 10 and abs(k1) > 10 limit 10\";\n        explainString = UtFrameUtils.getSQLPlanOrErrorMsg(connectContext, queryStr);\n        \r\n        \r\n        Assert.assertTrue(!explainString.contains(\"ROWNUM <= 10\"));\n\n        \r\n        queryStr = \"explain select * from odbc_oracle where k1 > 10 limit 10\";\n        explainString = UtFrameUtils.getSQLPlanOrErrorMsg(connectContext, queryStr);\n        Assert.assertTrue(explainString.contains(\"ROWNUM <= 10\"));\n\n        \r\n        queryStr = \"explain select * from mysql_table where k1 > 10 and abs(k1) > 10 limit 10\";\n        explainString = UtFrameUtils.getSQLPlanOrErrorMsg(connectContext, queryStr);\n        Assert.assertTrue(explainString.contains(\"LIMIT 10\"));\n    }\n","date":"2020-10-21 10:12:12","endLine":1242,"groupId":"10546","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testLimitOfExternalTable","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-incubatordoris-10-0.7/blobInfo/CC_OUT/blobs/71/a8cbb5c2cdc303e9fc18b53a483147e68648ea.src","preCode":"    public void testLimitOfExternalTable() throws Exception {\n        connectContext.setDatabase(\"default_cluster:test\");\n\n        \r\n        String queryStr = \"explain select * from odbc_mysql where k1 > 10 and abs(k1) > 10 limit 10\";\n        String explainString = UtFrameUtils.getSQLPlanOrErrorMsg(connectContext, queryStr);\n        Assert.assertTrue(explainString.contains(\"LIMIT 10\"));\n\n        \r\n        queryStr = \"explain select * from odbc_oracle where k1 > 10 and abs(k1) > 10 limit 10\";\n        explainString = UtFrameUtils.getSQLPlanOrErrorMsg(connectContext, queryStr);\n        Assert.assertTrue(explainString.contains(\"ROWNUM <= 10\"));\n\n        \r\n        queryStr = \"explain select * from mysql_table where k1 > 10 and abs(k1) > 10 limit 10\";\n        explainString = UtFrameUtils.getSQLPlanOrErrorMsg(connectContext, queryStr);\n        Assert.assertTrue(explainString.contains(\"LIMIT 10\"));\n    }\n","realPath":"fe/fe-core/src/test/java/org/apache/doris/planner/QueryPlanTest.java","repoName":"incubatordoris","snippetEndLine":0,"snippetStartLine":0,"startLine":1218,"status":"M"}],"commitId":"349cc9ef171c2f2196d7c93c46a48fe3f35692a7","commitMessage":"@@@[Bug] Do not push down limit operation when ODBC table do not push all conjunct as filter. (#4764)\n\n","date":"2020-10-21 10:12:12","modifiedFileCount":"2","status":"M","submitter":"HappenLee"}]
