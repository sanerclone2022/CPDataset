[{"authorTime":"2020-07-21 12:42:42","codes":[{"authorDate":"2020-07-21 12:42:42","commitOrder":1,"curCode":"    public void write(DataOutput out) throws IOException {\n        out.writeLong(dbId);\n        out.writeLong(tblId);\n        out.writeLong(partitionId);\n        out.writeLong(indexId);\n        out.writeLong(tabletId);\n        out.writeLong(beId);\n        out.writeInt(schemaHash);\n        Text.writeString(out, path);\n\n        out.writeInt(files.size());\n        for (String file : files) {\n            Text.writeString(out, file);\n        }\n    }\n","date":"2020-07-21 12:42:42","endLine":130,"groupId":"2343","id":1,"instanceNumber":1,"isCurCommit":1,"methodName":"write","params":"(DataOutputout)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-incubatordoris-10-0.7/blobInfo/CC_OUT/blobs/60/847e822dcfaf684fe4165d10176d63f946d8ad.src","preCode":"    public void write(DataOutput out) throws IOException {\n        out.writeLong(dbId);\n        out.writeLong(tblId);\n        out.writeLong(partitionId);\n        out.writeLong(indexId);\n        out.writeLong(tabletId);\n        out.writeLong(beId);\n        out.writeInt(schemaHash);\n        Text.writeString(out, path);\n\n        out.writeInt(files.size());\n        for (String file : files) {\n            Text.writeString(out, file);\n        }\n    }\n","realPath":"fe/fe-core/src/main/java/org/apache/doris/backup/SnapshotInfo.java","repoName":"incubatordoris","snippetEndLine":0,"snippetStartLine":0,"startLine":116,"status":"B"},{"authorDate":"2020-07-21 12:42:42","commitOrder":1,"curCode":"    public void write(DataOutput out) throws IOException {\n        \r\n        out.writeLong(id);\n        out.writeLong(dbId);\n        out.writeLong(tableId);\n        Text.writeString(out, exportPath);\n        Text.writeString(out, columnSeparator);\n        Text.writeString(out, lineDelimiter);\n        out.writeInt(properties.size());\n        for (Map.Entry<String, String> property : properties.entrySet()) {\n            Text.writeString(out, property.getKey());\n            Text.writeString(out, property.getValue());\n        }\n\n        \r\n        boolean hasPartition = (partitions != null);\n        if (hasPartition) {\n            out.writeBoolean(true);\n            int partitionSize = partitions.size();\n            out.writeInt(partitionSize);\n            for (String partitionName : partitions) {\n                Text.writeString(out, partitionName);\n            }\n        } else {\n            out.writeBoolean(false);\n        }\n\n        \r\n        Text.writeString(out, state.name());\n        out.writeLong(createTimeMs);\n        out.writeLong(startTimeMs);\n        out.writeLong(finishTimeMs);\n        out.writeInt(progress);\n        failMsg.write(out);\n\n        if (brokerDesc == null) {\n            out.writeBoolean(false);\n        } else {\n            out.writeBoolean(true);\n            brokerDesc.write(out);\n        }\n\n        tableName.write(out);\n    }\n","date":"2020-07-21 12:42:42","endLine":621,"groupId":"791","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"write","params":"(DataOutputout)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-incubatordoris-10-0.7/blobInfo/CC_OUT/blobs/65/89f629ed050ef0eae83e2d9e377aeb2f2f4a62.src","preCode":"    public void write(DataOutput out) throws IOException {\n        \r\n        out.writeLong(id);\n        out.writeLong(dbId);\n        out.writeLong(tableId);\n        Text.writeString(out, exportPath);\n        Text.writeString(out, columnSeparator);\n        Text.writeString(out, lineDelimiter);\n        out.writeInt(properties.size());\n        for (Map.Entry<String, String> property : properties.entrySet()) {\n            Text.writeString(out, property.getKey());\n            Text.writeString(out, property.getValue());\n        }\n\n        \r\n        boolean hasPartition = (partitions != null);\n        if (hasPartition) {\n            out.writeBoolean(true);\n            int partitionSize = partitions.size();\n            out.writeInt(partitionSize);\n            for (String partitionName : partitions) {\n                Text.writeString(out, partitionName);\n            }\n        } else {\n            out.writeBoolean(false);\n        }\n\n        \r\n        Text.writeString(out, state.name());\n        out.writeLong(createTimeMs);\n        out.writeLong(startTimeMs);\n        out.writeLong(finishTimeMs);\n        out.writeInt(progress);\n        failMsg.write(out);\n\n        if (brokerDesc == null) {\n            out.writeBoolean(false);\n        } else {\n            out.writeBoolean(true);\n            brokerDesc.write(out);\n        }\n\n        tableName.write(out);\n    }\n","realPath":"fe/fe-core/src/main/java/org/apache/doris/load/ExportJob.java","repoName":"incubatordoris","snippetEndLine":0,"snippetStartLine":0,"startLine":578,"status":"B"}],"commitId":"ad17afef9139a9aeedeb2e92638e95886d515f14","commitMessage":"@@@[CodeRefactor] #4098 Make FE multi module (#4099)\n\nThis PR change the FE code structure to maven multi module structure. \nSee ISSUE: #4098 for more info.  such as How to resolve conflicts.","date":"2020-07-21 12:42:42","modifiedFileCount":"0","status":"B","submitter":"Mingyu Chen"},{"authorTime":"2021-03-11 20:43:32","codes":[{"authorDate":"2020-07-21 12:42:42","commitOrder":2,"curCode":"    public void write(DataOutput out) throws IOException {\n        out.writeLong(dbId);\n        out.writeLong(tblId);\n        out.writeLong(partitionId);\n        out.writeLong(indexId);\n        out.writeLong(tabletId);\n        out.writeLong(beId);\n        out.writeInt(schemaHash);\n        Text.writeString(out, path);\n\n        out.writeInt(files.size());\n        for (String file : files) {\n            Text.writeString(out, file);\n        }\n    }\n","date":"2020-07-21 12:42:42","endLine":130,"groupId":"101136","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"write","params":"(DataOutputout)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-incubatordoris-10-0.7/blobInfo/CC_OUT/blobs/60/847e822dcfaf684fe4165d10176d63f946d8ad.src","preCode":"    public void write(DataOutput out) throws IOException {\n        out.writeLong(dbId);\n        out.writeLong(tblId);\n        out.writeLong(partitionId);\n        out.writeLong(indexId);\n        out.writeLong(tabletId);\n        out.writeLong(beId);\n        out.writeInt(schemaHash);\n        Text.writeString(out, path);\n\n        out.writeInt(files.size());\n        for (String file : files) {\n            Text.writeString(out, file);\n        }\n    }\n","realPath":"fe/fe-core/src/main/java/org/apache/doris/backup/SnapshotInfo.java","repoName":"incubatordoris","snippetEndLine":0,"snippetStartLine":0,"startLine":116,"status":"N"},{"authorDate":"2021-03-11 20:43:32","commitOrder":2,"curCode":"    public void write(DataOutput out) throws IOException {\n        \r\n        out.writeLong(id);\n        out.writeLong(dbId);\n        out.writeLong(tableId);\n        Text.writeString(out, exportPath);\n        Text.writeString(out, columnSeparator);\n        Text.writeString(out, lineDelimiter);\n        out.writeInt(properties.size());\n        for (Map.Entry<String, String> property : properties.entrySet()) {\n            Text.writeString(out, property.getKey());\n            Text.writeString(out, property.getValue());\n        }\n\n        \r\n        boolean hasPartition = (partitions != null);\n        if (hasPartition) {\n            out.writeBoolean(true);\n            int partitionSize = partitions.size();\n            out.writeInt(partitionSize);\n            for (String partitionName : partitions) {\n                Text.writeString(out, partitionName);\n            }\n        } else {\n            out.writeBoolean(false);\n        }\n\n        \r\n        Text.writeString(out, state.name());\n        out.writeLong(createTimeMs);\n        out.writeLong(startTimeMs);\n        out.writeLong(finishTimeMs);\n        out.writeInt(progress);\n        failMsg.write(out);\n\n        if (brokerDesc == null) {\n            out.writeBoolean(false);\n        } else {\n            out.writeBoolean(true);\n            brokerDesc.write(out);\n        }\n        tableName.write(out);\n\n        origStmt.write(out);\n        out.writeInt(sessionVariables.size());\n        for (Map.Entry<String, String> entry : sessionVariables.entrySet()) {\n            Text.writeString(out, entry.getKey());\n            Text.writeString(out, entry.getValue());\n        }\n    }\n","date":"2021-03-11 20:43:32","endLine":724,"groupId":"101136","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"write","params":"(DataOutputout)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-incubatordoris-10-0.7/blobInfo/CC_OUT/blobs/89/513cbcb30619d52a04803d492ffdad5b743230.src","preCode":"    public void write(DataOutput out) throws IOException {\n        \r\n        out.writeLong(id);\n        out.writeLong(dbId);\n        out.writeLong(tableId);\n        Text.writeString(out, exportPath);\n        Text.writeString(out, columnSeparator);\n        Text.writeString(out, lineDelimiter);\n        out.writeInt(properties.size());\n        for (Map.Entry<String, String> property : properties.entrySet()) {\n            Text.writeString(out, property.getKey());\n            Text.writeString(out, property.getValue());\n        }\n\n        \r\n        boolean hasPartition = (partitions != null);\n        if (hasPartition) {\n            out.writeBoolean(true);\n            int partitionSize = partitions.size();\n            out.writeInt(partitionSize);\n            for (String partitionName : partitions) {\n                Text.writeString(out, partitionName);\n            }\n        } else {\n            out.writeBoolean(false);\n        }\n\n        \r\n        Text.writeString(out, state.name());\n        out.writeLong(createTimeMs);\n        out.writeLong(startTimeMs);\n        out.writeLong(finishTimeMs);\n        out.writeInt(progress);\n        failMsg.write(out);\n\n        if (brokerDesc == null) {\n            out.writeBoolean(false);\n        } else {\n            out.writeBoolean(true);\n            brokerDesc.write(out);\n        }\n\n        tableName.write(out);\n    }\n","realPath":"fe/fe-core/src/main/java/org/apache/doris/load/ExportJob.java","repoName":"incubatordoris","snippetEndLine":0,"snippetStartLine":0,"startLine":675,"status":"M"}],"commitId":"6cbbc36ea1df6842f838fea0ee37d1f879c3e885","commitMessage":"@@@[Export] Expand function of export stmt (#5445)\n\n1. Support where clause in export stmt which only export selected rows.\n\nThe syntax is following:\n\nExport table [table name]\n    where [expr]\nTo xxx\nxxxx\n\nIt will filter table rows.\nOnly rows that meet the where condition can be exported.\n\n2. Support utf8 separator\n\n3. Support export to local\n\nThe syntax is following:\n\nExport table [table name]\nTo (file:///xxx/xx/xx)\n\nIf user export rows to local.  the broker properties is not requried.\nUser only need to create a local folder to store data.  and fill in the path of the folder starting with file://\n\nChange-Id: Ib7e7ece5accb3e359a67310b0bf006d42cd3f6f5","date":"2021-03-11 20:43:32","modifiedFileCount":"8","status":"M","submitter":"EmmyMiao87"}]
