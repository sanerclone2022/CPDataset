[{"authorTime":"2020-07-21 12:42:42","codes":[{"authorDate":"2020-07-21 12:42:42","commitOrder":1,"curCode":"    public ProcNodeInterface lookup(String dbIdStr) throws AnalysisException {\n        if (catalog == null || Strings.isNullOrEmpty(dbIdStr)) {\n            throw new AnalysisException(\"Db id is null\");\n        }\n\n        long dbId = -1L;\n        try {\n            dbId = Long.valueOf(dbIdStr);\n        } catch (NumberFormatException e) {\n            throw new AnalysisException(\"Invalid db id format: \" + dbIdStr);\n        }\n\n        Database db = catalog.getDb(dbId);\n        if (db == null) {\n            throw new AnalysisException(\"Database[\" + dbId + \"] does not exist.\");\n        }\n\n        return new TablesProcDir(db);\n    }\n","date":"2020-07-21 12:42:42","endLine":77,"groupId":"6322","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"lookup","params":"(StringdbIdStr)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-incubatordoris-10-0.7/blobInfo/CC_OUT/blobs/97/34a3189cf58d10af0ea4ff0dce52a635d052cd.src","preCode":"    public ProcNodeInterface lookup(String dbIdStr) throws AnalysisException {\n        if (catalog == null || Strings.isNullOrEmpty(dbIdStr)) {\n            throw new AnalysisException(\"Db id is null\");\n        }\n\n        long dbId = -1L;\n        try {\n            dbId = Long.valueOf(dbIdStr);\n        } catch (NumberFormatException e) {\n            throw new AnalysisException(\"Invalid db id format: \" + dbIdStr);\n        }\n\n        Database db = catalog.getDb(dbId);\n        if (db == null) {\n            throw new AnalysisException(\"Database[\" + dbId + \"] does not exist.\");\n        }\n\n        return new TablesProcDir(db);\n    }\n","realPath":"fe/fe-core/src/main/java/org/apache/doris/common/proc/DbsProcDir.java","repoName":"incubatordoris","snippetEndLine":0,"snippetStartLine":0,"startLine":59,"status":"B"},{"authorDate":"2020-07-21 12:42:42","commitOrder":1,"curCode":"    public ProcNodeInterface lookup(String tableIdStr) throws AnalysisException {\n        if (Strings.isNullOrEmpty(tableIdStr)) {\n            throw new AnalysisException(\"TableIdStr is null\");\n        }\n\n        long tableId = -1L;\n        try {\n            tableId = Long.valueOf(tableIdStr);\n        } catch (NumberFormatException e) {\n            throw new AnalysisException(\"Invalid table id format: \" + tableIdStr);\n        }\n\n        return new TransPartitionProcNode(dbId, txnId, tableId);\n    }\n","date":"2020-07-21 12:42:42","endLine":90,"groupId":"6322","id":2,"instanceNumber":2,"isCurCommit":1,"methodName":"lookup","params":"(StringtableIdStr)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-incubatordoris-10-0.7/blobInfo/CC_OUT/blobs/91/d8e6ec336635968d144185aee982ca1eb5794a.src","preCode":"    public ProcNodeInterface lookup(String tableIdStr) throws AnalysisException {\n        if (Strings.isNullOrEmpty(tableIdStr)) {\n            throw new AnalysisException(\"TableIdStr is null\");\n        }\n\n        long tableId = -1L;\n        try {\n            tableId = Long.valueOf(tableIdStr);\n        } catch (NumberFormatException e) {\n            throw new AnalysisException(\"Invalid table id format: \" + tableIdStr);\n        }\n\n        return new TransPartitionProcNode(dbId, txnId, tableId);\n    }\n","realPath":"fe/fe-core/src/main/java/org/apache/doris/common/proc/TransTablesProcDir.java","repoName":"incubatordoris","snippetEndLine":0,"snippetStartLine":0,"startLine":77,"status":"B"}],"commitId":"ad17afef9139a9aeedeb2e92638e95886d515f14","commitMessage":"@@@[CodeRefactor] #4098 Make FE multi module (#4099)\n\nThis PR change the FE code structure to maven multi module structure. \nSee ISSUE: #4098 for more info.  such as How to resolve conflicts.","date":"2020-07-21 12:42:42","modifiedFileCount":"0","status":"B","submitter":"Mingyu Chen"},{"authorTime":"2020-07-21 12:42:42","codes":[{"authorDate":"2021-09-03 13:34:49","commitOrder":2,"curCode":"    public ProcNodeInterface lookup(String dbIdStr) throws AnalysisException {\n        if (catalog == null || Strings.isNullOrEmpty(dbIdStr)) {\n            throw new AnalysisException(\"Db id is null\");\n        }\n\n        long dbId = -1L;\n        try {\n            dbId = Long.valueOf(dbIdStr);\n        } catch (NumberFormatException e) {\n            throw new AnalysisException(\"Invalid db id format: \" + dbIdStr);\n        }\n\n        Database db = catalog.getDbOrAnalysisException(dbId);\n\n        return new TablesProcDir(db);\n    }\n","date":"2021-09-03 13:34:49","endLine":74,"groupId":"10992","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"lookup","params":"(StringdbIdStr)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-incubatordoris-10-0.7/blobInfo/CC_OUT/blobs/08/419d4f46a7bf29ce60ad21c31baba3f071a658.src","preCode":"    public ProcNodeInterface lookup(String dbIdStr) throws AnalysisException {\n        if (catalog == null || Strings.isNullOrEmpty(dbIdStr)) {\n            throw new AnalysisException(\"Db id is null\");\n        }\n\n        long dbId = -1L;\n        try {\n            dbId = Long.valueOf(dbIdStr);\n        } catch (NumberFormatException e) {\n            throw new AnalysisException(\"Invalid db id format: \" + dbIdStr);\n        }\n\n        Database db = catalog.getDb(dbId);\n        if (db == null) {\n            throw new AnalysisException(\"Database[\" + dbId + \"] does not exist.\");\n        }\n\n        return new TablesProcDir(db);\n    }\n","realPath":"fe/fe-core/src/main/java/org/apache/doris/common/proc/DbsProcDir.java","repoName":"incubatordoris","snippetEndLine":0,"snippetStartLine":0,"startLine":59,"status":"M"},{"authorDate":"2020-07-21 12:42:42","commitOrder":2,"curCode":"    public ProcNodeInterface lookup(String tableIdStr) throws AnalysisException {\n        if (Strings.isNullOrEmpty(tableIdStr)) {\n            throw new AnalysisException(\"TableIdStr is null\");\n        }\n\n        long tableId = -1L;\n        try {\n            tableId = Long.valueOf(tableIdStr);\n        } catch (NumberFormatException e) {\n            throw new AnalysisException(\"Invalid table id format: \" + tableIdStr);\n        }\n\n        return new TransPartitionProcNode(dbId, txnId, tableId);\n    }\n","date":"2020-07-21 12:42:42","endLine":90,"groupId":"10992","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"lookup","params":"(StringtableIdStr)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-incubatordoris-10-0.7/blobInfo/CC_OUT/blobs/91/d8e6ec336635968d144185aee982ca1eb5794a.src","preCode":"    public ProcNodeInterface lookup(String tableIdStr) throws AnalysisException {\n        if (Strings.isNullOrEmpty(tableIdStr)) {\n            throw new AnalysisException(\"TableIdStr is null\");\n        }\n\n        long tableId = -1L;\n        try {\n            tableId = Long.valueOf(tableIdStr);\n        } catch (NumberFormatException e) {\n            throw new AnalysisException(\"Invalid table id format: \" + tableIdStr);\n        }\n\n        return new TransPartitionProcNode(dbId, txnId, tableId);\n    }\n","realPath":"fe/fe-core/src/main/java/org/apache/doris/common/proc/TransTablesProcDir.java","repoName":"incubatordoris","snippetEndLine":0,"snippetStartLine":0,"startLine":77,"status":"N"}],"commitId":"df54b34f9843adf80d5fa753383797690e9458dd","commitMessage":"@@@[Catalog] Enforce null check at Catalog.getDb and Database.getTable (#6416)\n\nfix #5378 #5391 #5688 #5973 #6155 and all replay NPE. All replay method can now throw MetaNotFoundException and caught to log a warning for potential inconsistent metadata cases.\n\ntry to establish a clear notice for future developer to check null.","date":"2021-09-03 13:34:49","modifiedFileCount":"190","status":"M","submitter":"ccoffline"}]
