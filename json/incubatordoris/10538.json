[{"authorTime":"2020-08-09 20:48:36","codes":[{"authorDate":"2020-08-09 20:48:36","commitOrder":2,"curCode":"    public void testColocateJoin() throws Exception {\n        FeConstants.runningUnitTest = true;\n\n        String queryStr = \"explain select * from test.colocate1 t1, test.colocate2 t2 where t1.k1 = t2.k1 and t1.k2 = t2.k2 and t1.k3 = t2.k3\";\n        String explainString = UtFrameUtils.getSQLPlanOrErrorMsg(connectContext, queryStr);\n        Assert.assertTrue(explainString.contains(\"colocate: true\"));\n\n        \r\n        queryStr = \"explain select * from test.colocate1 t1, test.colocate2 t2 where t1.k1 = t2.k2 and t1.k2 = t2.k1 and t1.k3 = t2.k3\";\n        explainString = UtFrameUtils.getSQLPlanOrErrorMsg(connectContext, queryStr);\n        Assert.assertTrue(explainString.contains(\"colocate: false\"));\n\n        queryStr = \"explain select * from test.colocate1 t1, test.colocate2 t2 where t1.k2 = t2.k2\";\n        explainString = UtFrameUtils.getSQLPlanOrErrorMsg(connectContext, queryStr);\n        Assert.assertTrue(explainString.contains(\"colocate: false\"));\n    }\n","date":"2020-08-09 20:48:36","endLine":903,"groupId":"5305","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testColocateJoin","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-incubatordoris-10-0.7/blobInfo/CC_OUT/blobs/b9/eb997716157668da19741bf51377977f06a13d.src","preCode":"    public void testColocateJoin() throws Exception {\n        FeConstants.runningUnitTest = true;\n\n        String queryStr = \"explain select * from test.colocate1 t1, test.colocate2 t2 where t1.k1 = t2.k1 and t1.k2 = t2.k2 and t1.k3 = t2.k3\";\n        String explainString = UtFrameUtils.getSQLPlanOrErrorMsg(connectContext, queryStr);\n        Assert.assertTrue(explainString.contains(\"colocate: true\"));\n\n        \r\n        queryStr = \"explain select * from test.colocate1 t1, test.colocate2 t2 where t1.k1 = t2.k2 and t1.k2 = t2.k1 and t1.k3 = t2.k3\";\n        explainString = UtFrameUtils.getSQLPlanOrErrorMsg(connectContext, queryStr);\n        Assert.assertTrue(explainString.contains(\"colocate: false\"));\n\n        queryStr = \"explain select * from test.colocate1 t1, test.colocate2 t2 where t1.k2 = t2.k2\";\n        explainString = UtFrameUtils.getSQLPlanOrErrorMsg(connectContext, queryStr);\n        Assert.assertTrue(explainString.contains(\"colocate: false\"));\n    }\n","realPath":"fe/fe-core/src/test/java/org/apache/doris/planner/QueryPlanTest.java","repoName":"incubatordoris","snippetEndLine":0,"snippetStartLine":0,"startLine":888,"status":"MB"},{"authorDate":"2020-08-09 20:48:36","commitOrder":2,"curCode":"    public void testSelfColocateJoin() throws Exception {\n        FeConstants.runningUnitTest = true;\n\n        \r\n        String queryStr = \"explain select * from test.jointest t1, test.jointest t2 where t1.k1 = t2.k1\";\n        String explainString = UtFrameUtils.getSQLPlanOrErrorMsg(connectContext, queryStr);\n        Assert.assertTrue(explainString.contains(\"colocate: true\"));\n\n        \r\n        queryStr = \"explain select * from test.dynamic_partition t1, test.dynamic_partition t2 where t1.k1 = t2.k1\";\n        explainString = UtFrameUtils.getSQLPlanOrErrorMsg(connectContext, queryStr);\n        Assert.assertTrue(explainString.contains(\"colocate: false\"));\n    }\n","date":"2020-08-09 20:48:36","endLine":918,"groupId":"3371","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testSelfColocateJoin","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-incubatordoris-10-0.7/blobInfo/CC_OUT/blobs/b9/eb997716157668da19741bf51377977f06a13d.src","preCode":"    public void testSelfColocateJoin() throws Exception {\n        FeConstants.runningUnitTest = true;\n\n        \r\n        String queryStr = \"explain select * from test.jointest t1, test.jointest t2 where t1.k1 = t2.k1\";\n        String explainString = UtFrameUtils.getSQLPlanOrErrorMsg(connectContext, queryStr);\n        Assert.assertTrue(explainString.contains(\"colocate: true\"));\n\n        \r\n        queryStr = \"explain select * from test.dynamic_partition t1, test.dynamic_partition t2 where t1.k1 = t2.k1\";\n        explainString = UtFrameUtils.getSQLPlanOrErrorMsg(connectContext, queryStr);\n        Assert.assertTrue(explainString.contains(\"colocate: false\"));\n    }\n","realPath":"fe/fe-core/src/test/java/org/apache/doris/planner/QueryPlanTest.java","repoName":"incubatordoris","snippetEndLine":0,"snippetStartLine":0,"startLine":906,"status":"B"}],"commitId":"47fff6841b9f8cd3d5af15a2ae4fad87b4f60712","commitMessage":"@@@[Bug][ColocateJoin] Fix bug of #4287 and #4285 of Colocatejoin (#4289)\n\n1.Table join itself should have same single partition to valid colocate join.\n2.Check eqjoinConjuncts column order to valid colocate join.","date":"2020-08-09 20:48:36","modifiedFileCount":"2","status":"M","submitter":"HappenLee"},{"authorTime":"2020-08-09 20:48:36","codes":[{"authorDate":"2020-09-02 10:54:45","commitOrder":3,"curCode":"    public void testColocateJoin() throws Exception {\n        FeConstants.runningUnitTest = true;\n\n        String queryStr = \"explain select * from test.colocate1 t1, test.colocate2 t2 where t1.k1 = t2.k1 and t1.k2 = t2.k2 and t1.k3 = t2.k3\";\n        String explainString = UtFrameUtils.getSQLPlanOrErrorMsg(connectContext, queryStr);\n        Assert.assertTrue(explainString.contains(\"colocate: true\"));\n\n        queryStr = \"explain select * from test.colocate1 t1 join [shuffle] test.colocate2 t2 on t1.k1 = t2.k1 and t1.k2 = t2.k2\";\n        explainString = UtFrameUtils.getSQLPlanOrErrorMsg(connectContext, queryStr);\n        Assert.assertTrue(explainString.contains(\"colocate: false\"));\n\n        \r\n        queryStr = \"explain select * from test.colocate1 t1, test.colocate2 t2 where t1.k1 = t2.k2 and t1.k2 = t2.k1 and t1.k3 = t2.k3\";\n        explainString = UtFrameUtils.getSQLPlanOrErrorMsg(connectContext, queryStr);\n        Assert.assertTrue(explainString.contains(\"colocate: false\"));\n\n        queryStr = \"explain select * from test.colocate1 t1, test.colocate2 t2 where t1.k2 = t2.k2\";\n        explainString = UtFrameUtils.getSQLPlanOrErrorMsg(connectContext, queryStr);\n        Assert.assertTrue(explainString.contains(\"colocate: false\"));\n    }\n","date":"2020-09-02 10:54:45","endLine":956,"groupId":"10538","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testColocateJoin","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-incubatordoris-10-0.7/blobInfo/CC_OUT/blobs/b3/c41e4699054f4abf4acafeeb99d0a036207c4a.src","preCode":"    public void testColocateJoin() throws Exception {\n        FeConstants.runningUnitTest = true;\n\n        String queryStr = \"explain select * from test.colocate1 t1, test.colocate2 t2 where t1.k1 = t2.k1 and t1.k2 = t2.k2 and t1.k3 = t2.k3\";\n        String explainString = UtFrameUtils.getSQLPlanOrErrorMsg(connectContext, queryStr);\n        Assert.assertTrue(explainString.contains(\"colocate: true\"));\n\n        \r\n        queryStr = \"explain select * from test.colocate1 t1, test.colocate2 t2 where t1.k1 = t2.k2 and t1.k2 = t2.k1 and t1.k3 = t2.k3\";\n        explainString = UtFrameUtils.getSQLPlanOrErrorMsg(connectContext, queryStr);\n        Assert.assertTrue(explainString.contains(\"colocate: false\"));\n\n        queryStr = \"explain select * from test.colocate1 t1, test.colocate2 t2 where t1.k2 = t2.k2\";\n        explainString = UtFrameUtils.getSQLPlanOrErrorMsg(connectContext, queryStr);\n        Assert.assertTrue(explainString.contains(\"colocate: false\"));\n    }\n","realPath":"fe/fe-core/src/test/java/org/apache/doris/planner/QueryPlanTest.java","repoName":"incubatordoris","snippetEndLine":0,"snippetStartLine":0,"startLine":937,"status":"M"},{"authorDate":"2020-08-09 20:48:36","commitOrder":3,"curCode":"    public void testSelfColocateJoin() throws Exception {\n        FeConstants.runningUnitTest = true;\n\n        \r\n        String queryStr = \"explain select * from test.jointest t1, test.jointest t2 where t1.k1 = t2.k1\";\n        String explainString = UtFrameUtils.getSQLPlanOrErrorMsg(connectContext, queryStr);\n        Assert.assertTrue(explainString.contains(\"colocate: true\"));\n\n        \r\n        queryStr = \"explain select * from test.dynamic_partition t1, test.dynamic_partition t2 where t1.k1 = t2.k1\";\n        explainString = UtFrameUtils.getSQLPlanOrErrorMsg(connectContext, queryStr);\n        Assert.assertTrue(explainString.contains(\"colocate: false\"));\n    }\n","date":"2020-08-09 20:48:36","endLine":918,"groupId":"10538","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testSelfColocateJoin","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-incubatordoris-10-0.7/blobInfo/CC_OUT/blobs/b9/eb997716157668da19741bf51377977f06a13d.src","preCode":"    public void testSelfColocateJoin() throws Exception {\n        FeConstants.runningUnitTest = true;\n\n        \r\n        String queryStr = \"explain select * from test.jointest t1, test.jointest t2 where t1.k1 = t2.k1\";\n        String explainString = UtFrameUtils.getSQLPlanOrErrorMsg(connectContext, queryStr);\n        Assert.assertTrue(explainString.contains(\"colocate: true\"));\n\n        \r\n        queryStr = \"explain select * from test.dynamic_partition t1, test.dynamic_partition t2 where t1.k1 = t2.k1\";\n        explainString = UtFrameUtils.getSQLPlanOrErrorMsg(connectContext, queryStr);\n        Assert.assertTrue(explainString.contains(\"colocate: false\"));\n    }\n","realPath":"fe/fe-core/src/test/java/org/apache/doris/planner/QueryPlanTest.java","repoName":"incubatordoris","snippetEndLine":0,"snippetStartLine":0,"startLine":906,"status":"N"}],"commitId":"e6367e9ba849ad0d71c7092f94cd20d2c6f04164","commitMessage":"@@@[Bug] Support disable colocate join where join clause has join hint (#4497)\n\nFix issue:#4496","date":"2020-09-02 10:54:45","modifiedFileCount":"2","status":"M","submitter":"HappenLee"}]
