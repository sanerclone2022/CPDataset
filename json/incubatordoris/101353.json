[{"authorTime":"2020-07-21 12:42:42","codes":[{"authorDate":"2020-07-21 12:42:42","commitOrder":1,"curCode":"    public int getSignature(int signatureVersion) {\n        Adler32 adler32 = new Adler32();\n        adler32.update(signatureVersion);\n        String charsetName = \"UTF-8\";\n\n        try {\n            \r\n            adler32.update(name.getBytes(charsetName));\n            \r\n            adler32.update(type.name().getBytes(charsetName));\n            \r\n            adler32.update(host.getBytes(charsetName));\n            \r\n            adler32.update(port.getBytes(charsetName));\n            \r\n            adler32.update(userName.getBytes(charsetName));\n            \r\n            adler32.update(passwd.getBytes(charsetName));\n            \r\n            adler32.update(mysqlDatabaseName.getBytes(charsetName));\n            \r\n            adler32.update(mysqlTableName.getBytes(charsetName));\n\n        } catch (UnsupportedEncodingException e) {\n            LOG.error(\"encoding error\", e);\n            return -1;\n        }\n\n        return Math.abs((int) adler32.getValue());\n    }\n","date":"2020-07-21 12:42:42","endLine":182,"groupId":"150","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"getSignature","params":"(intsignatureVersion)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-incubatordoris-10-0.7/blobInfo/CC_OUT/blobs/7f/a733b686d496ccfb75e3334abbc64e88bf70c5.src","preCode":"    public int getSignature(int signatureVersion) {\n        Adler32 adler32 = new Adler32();\n        adler32.update(signatureVersion);\n        String charsetName = \"UTF-8\";\n\n        try {\n            \r\n            adler32.update(name.getBytes(charsetName));\n            \r\n            adler32.update(type.name().getBytes(charsetName));\n            \r\n            adler32.update(host.getBytes(charsetName));\n            \r\n            adler32.update(port.getBytes(charsetName));\n            \r\n            adler32.update(userName.getBytes(charsetName));\n            \r\n            adler32.update(passwd.getBytes(charsetName));\n            \r\n            adler32.update(mysqlDatabaseName.getBytes(charsetName));\n            \r\n            adler32.update(mysqlTableName.getBytes(charsetName));\n\n        } catch (UnsupportedEncodingException e) {\n            LOG.error(\"encoding error\", e);\n            return -1;\n        }\n\n        return Math.abs((int) adler32.getValue());\n    }\n","realPath":"fe/fe-core/src/main/java/org/apache/doris/catalog/MysqlTable.java","repoName":"incubatordoris","snippetEndLine":0,"snippetStartLine":0,"startLine":153,"status":"B"},{"authorDate":"2020-07-21 12:42:42","commitOrder":1,"curCode":"    public int getSignature(int signatureVersion) {\n        Adler32 adler32 = new Adler32();\n        adler32.update(signatureVersion);\n        String charsetName = \"UTF-8\";\n\n        try {\n            \r\n            adler32.update(name.getBytes(charsetName));\n            \r\n            adler32.update(type.name().getBytes(charsetName));\n            if (Catalog.getCurrentCatalogJournalVersion() >= FeMetaVersion.VERSION_68) {\n                for (Map.Entry<String, String> entry : tableContext.entrySet()) {\n                    adler32.update(entry.getValue().getBytes(charsetName));\n                }\n            } else {\n                \r\n                adler32.update(hosts.getBytes(charsetName));\n                \r\n                adler32.update(userName.getBytes(charsetName));\n                \r\n                adler32.update(passwd.getBytes(charsetName));\n                \r\n                adler32.update(indexName.getBytes(charsetName));\n                \r\n                adler32.update(mappingType.getBytes(charsetName));\n                \r\n                adler32.update(transport.getBytes(charsetName));\n            }\n        } catch (UnsupportedEncodingException e) {\n            LOG.error(\"encoding error\", e);\n            return -1;\n        }\n\n        return Math.abs((int) adler32.getValue());\n    }\n","date":"2020-07-21 12:42:42","endLine":290,"groupId":"1667","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"getSignature","params":"(intsignatureVersion)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-incubatordoris-10-0.7/blobInfo/CC_OUT/blobs/19/fa6f1b6a133f97f53bb8ce6ccf52d971cdbf2d.src","preCode":"    public int getSignature(int signatureVersion) {\n        Adler32 adler32 = new Adler32();\n        adler32.update(signatureVersion);\n        String charsetName = \"UTF-8\";\n\n        try {\n            \r\n            adler32.update(name.getBytes(charsetName));\n            \r\n            adler32.update(type.name().getBytes(charsetName));\n            if (Catalog.getCurrentCatalogJournalVersion() >= FeMetaVersion.VERSION_68) {\n                for (Map.Entry<String, String> entry : tableContext.entrySet()) {\n                    adler32.update(entry.getValue().getBytes(charsetName));\n                }\n            } else {\n                \r\n                adler32.update(hosts.getBytes(charsetName));\n                \r\n                adler32.update(userName.getBytes(charsetName));\n                \r\n                adler32.update(passwd.getBytes(charsetName));\n                \r\n                adler32.update(indexName.getBytes(charsetName));\n                \r\n                adler32.update(mappingType.getBytes(charsetName));\n                \r\n                adler32.update(transport.getBytes(charsetName));\n            }\n        } catch (UnsupportedEncodingException e) {\n            LOG.error(\"encoding error\", e);\n            return -1;\n        }\n\n        return Math.abs((int) adler32.getValue());\n    }\n","realPath":"fe/fe-core/src/main/java/org/apache/doris/catalog/EsTable.java","repoName":"incubatordoris","snippetEndLine":0,"snippetStartLine":0,"startLine":256,"status":"B"}],"commitId":"ad17afef9139a9aeedeb2e92638e95886d515f14","commitMessage":"@@@[CodeRefactor] #4098 Make FE multi module (#4099)\n\nThis PR change the FE code structure to maven multi module structure. \nSee ISSUE: #4098 for more info.  such as How to resolve conflicts.","date":"2020-07-21 12:42:42","modifiedFileCount":"0","status":"B","submitter":"Mingyu Chen"},{"authorTime":"2020-07-21 12:42:42","codes":[{"authorDate":"2020-09-25 10:20:33","commitOrder":2,"curCode":"    public int getSignature(int signatureVersion) {\n        Adler32 adler32 = new Adler32();\n        adler32.update(signatureVersion);\n        String charsetName = \"UTF-8\";\n\n        try {\n            \r\n            adler32.update(name.getBytes(charsetName));\n            \r\n            adler32.update(type.name().getBytes(charsetName));\n            \r\n            adler32.update(getHost().getBytes(charsetName));\n            \r\n            adler32.update(getPort().getBytes(charsetName));\n            \r\n            adler32.update(getUserName().getBytes(charsetName));\n            \r\n            adler32.update(getPasswd().getBytes(charsetName));\n            \r\n            adler32.update(mysqlDatabaseName.getBytes(charsetName));\n            \r\n            adler32.update(mysqlTableName.getBytes(charsetName));\n\n        } catch (UnsupportedEncodingException e) {\n            LOG.error(\"encoding error\", e);\n            return -1;\n        }\n\n        return Math.abs((int) adler32.getValue());\n    }\n","date":"2020-09-25 10:20:33","endLine":237,"groupId":"0","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"getSignature","params":"(intsignatureVersion)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-incubatordoris-10-0.7/blobInfo/CC_OUT/blobs/be/7e49e14910cf477986955764c60218c520b278.src","preCode":"    public int getSignature(int signatureVersion) {\n        Adler32 adler32 = new Adler32();\n        adler32.update(signatureVersion);\n        String charsetName = \"UTF-8\";\n\n        try {\n            \r\n            adler32.update(name.getBytes(charsetName));\n            \r\n            adler32.update(type.name().getBytes(charsetName));\n            \r\n            adler32.update(host.getBytes(charsetName));\n            \r\n            adler32.update(port.getBytes(charsetName));\n            \r\n            adler32.update(userName.getBytes(charsetName));\n            \r\n            adler32.update(passwd.getBytes(charsetName));\n            \r\n            adler32.update(mysqlDatabaseName.getBytes(charsetName));\n            \r\n            adler32.update(mysqlTableName.getBytes(charsetName));\n\n        } catch (UnsupportedEncodingException e) {\n            LOG.error(\"encoding error\", e);\n            return -1;\n        }\n\n        return Math.abs((int) adler32.getValue());\n    }\n","realPath":"fe/fe-core/src/main/java/org/apache/doris/catalog/MysqlTable.java","repoName":"incubatordoris","snippetEndLine":0,"snippetStartLine":0,"startLine":208,"status":"M"},{"authorDate":"2020-07-21 12:42:42","commitOrder":2,"curCode":"    public int getSignature(int signatureVersion) {\n        Adler32 adler32 = new Adler32();\n        adler32.update(signatureVersion);\n        String charsetName = \"UTF-8\";\n\n        try {\n            \r\n            adler32.update(name.getBytes(charsetName));\n            \r\n            adler32.update(type.name().getBytes(charsetName));\n            if (Catalog.getCurrentCatalogJournalVersion() >= FeMetaVersion.VERSION_68) {\n                for (Map.Entry<String, String> entry : tableContext.entrySet()) {\n                    adler32.update(entry.getValue().getBytes(charsetName));\n                }\n            } else {\n                \r\n                adler32.update(hosts.getBytes(charsetName));\n                \r\n                adler32.update(userName.getBytes(charsetName));\n                \r\n                adler32.update(passwd.getBytes(charsetName));\n                \r\n                adler32.update(indexName.getBytes(charsetName));\n                \r\n                adler32.update(mappingType.getBytes(charsetName));\n                \r\n                adler32.update(transport.getBytes(charsetName));\n            }\n        } catch (UnsupportedEncodingException e) {\n            LOG.error(\"encoding error\", e);\n            return -1;\n        }\n\n        return Math.abs((int) adler32.getValue());\n    }\n","date":"2020-07-21 12:42:42","endLine":290,"groupId":"1667","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"getSignature","params":"(intsignatureVersion)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-incubatordoris-10-0.7/blobInfo/CC_OUT/blobs/19/fa6f1b6a133f97f53bb8ce6ccf52d971cdbf2d.src","preCode":"    public int getSignature(int signatureVersion) {\n        Adler32 adler32 = new Adler32();\n        adler32.update(signatureVersion);\n        String charsetName = \"UTF-8\";\n\n        try {\n            \r\n            adler32.update(name.getBytes(charsetName));\n            \r\n            adler32.update(type.name().getBytes(charsetName));\n            if (Catalog.getCurrentCatalogJournalVersion() >= FeMetaVersion.VERSION_68) {\n                for (Map.Entry<String, String> entry : tableContext.entrySet()) {\n                    adler32.update(entry.getValue().getBytes(charsetName));\n                }\n            } else {\n                \r\n                adler32.update(hosts.getBytes(charsetName));\n                \r\n                adler32.update(userName.getBytes(charsetName));\n                \r\n                adler32.update(passwd.getBytes(charsetName));\n                \r\n                adler32.update(indexName.getBytes(charsetName));\n                \r\n                adler32.update(mappingType.getBytes(charsetName));\n                \r\n                adler32.update(transport.getBytes(charsetName));\n            }\n        } catch (UnsupportedEncodingException e) {\n            LOG.error(\"encoding error\", e);\n            return -1;\n        }\n\n        return Math.abs((int) adler32.getValue());\n    }\n","realPath":"fe/fe-core/src/main/java/org/apache/doris/catalog/EsTable.java","repoName":"incubatordoris","snippetEndLine":0,"snippetStartLine":0,"startLine":256,"status":"N"}],"commitId":"4e3b576fd3b09920b65582d8899336bd95fa7cb7","commitMessage":"@@@[NewFeature] Support ExternalCatalogResource to simplify external table manage operation. (#4559)\n\n1. Add new Resource ExternalCatalogResource\n\n```\ncreate external resource \"odbc\"\nproperties\n(\n   \"type\" = \"external_catalog\".  (required)\n   \"user\" = \"test\". (required)\n   \"password\" = \"\".  (required)\n   \"host\" = \"192.168.0.1\".  (required)\n   \"port\" = \"8086\".  (required)\n   \"type\" = \"oracle\" .  (optinal. only odbc exteranl table use)\n   \"driver\" = \"Oracle 19 ODBC driver\" (optional. only odbc exteranl table use)\n)\n```\n\n2.After create ExternalCatalogResource.  can create external table like:\n\n```\nCREATE TABLE `test_mysql` (\n  `k1` tinyint(4) NOT NULL. \n  `k2` smallint(6) NOT NULL. \n  `k3` int(11) NOT NULL. \n  `k4` bigint(20) NOT NULL. \n  `k5` decimal(9. 3) NOT NULL. \n  `k6` char(5) NOT NULL. \n  `k10` date DEFAULT NULL. \n  `k11` datetime DEFAULT NULL. \n  `k7` varchar(20) NOT NULL. \n  `k8` double NOT NULL. \n  `k9` float NOT NULL\n) ENGINE=MYSQL\nPROPERTIES (\n\"external_catalog_resource\" = \"odbc\". \n\"database\" = \"test\". \n\"table\" = \"test\"\n);\n```","date":"2020-09-25 10:20:33","modifiedFileCount":"10","status":"M","submitter":"HappenLee"},{"authorTime":"2021-01-28 18:50:18","codes":[{"authorDate":"2021-01-28 18:50:18","commitOrder":3,"curCode":"    public String getSignature(int signatureVersion) {\n        StringBuilder sb = new StringBuilder(signatureVersion);\n        sb.append(name);\n        sb.append(type.name());\n        sb.append(getHost());\n        sb.append(getPort());\n        sb.append(getUserName());\n        sb.append(getPasswd());\n        sb.append(mysqlDatabaseName);\n        sb.append(mysqlTableName);\n        String md5 = DigestUtils.md5Hex(sb.toString());\n        LOG.debug(\"get signature of mysql table {}: {}. signature string: {}\", name, md5, sb.toString());\n        return md5;\n    }\n","date":"2021-01-28 18:50:18","endLine":220,"groupId":"101353","id":5,"instanceNumber":1,"isCurCommit":1,"methodName":"getSignature","params":"(intsignatureVersion)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-incubatordoris-10-0.7/blobInfo/CC_OUT/blobs/fc/dfb907930d84f53b788086c9f87838a1aa9bfa.src","preCode":"    public int getSignature(int signatureVersion) {\n        Adler32 adler32 = new Adler32();\n        adler32.update(signatureVersion);\n        String charsetName = \"UTF-8\";\n\n        try {\n            \r\n            adler32.update(name.getBytes(charsetName));\n            \r\n            adler32.update(type.name().getBytes(charsetName));\n            \r\n            adler32.update(getHost().getBytes(charsetName));\n            \r\n            adler32.update(getPort().getBytes(charsetName));\n            \r\n            adler32.update(getUserName().getBytes(charsetName));\n            \r\n            adler32.update(getPasswd().getBytes(charsetName));\n            \r\n            adler32.update(mysqlDatabaseName.getBytes(charsetName));\n            \r\n            adler32.update(mysqlTableName.getBytes(charsetName));\n\n        } catch (UnsupportedEncodingException e) {\n            LOG.error(\"encoding error\", e);\n            return -1;\n        }\n\n        return Math.abs((int) adler32.getValue());\n    }\n","realPath":"fe/fe-core/src/main/java/org/apache/doris/catalog/MysqlTable.java","repoName":"incubatordoris","snippetEndLine":0,"snippetStartLine":0,"startLine":207,"status":"M"},{"authorDate":"2021-01-28 18:50:18","commitOrder":3,"curCode":"    public String getSignature(int signatureVersion) {\n        StringBuilder sb = new StringBuilder(signatureVersion);\n        sb.append(name);\n        sb.append(type.name());\n        if (tableContext.isEmpty()) {\n            sb.append(hosts);\n            sb.append(userName);\n            sb.append(passwd);\n            sb.append(indexName);\n            sb.append(mappingType);\n            sb.append(transport);\n        } else {\n            for (Map.Entry<String, String> entry : tableContext.entrySet()) {\n                sb.append(entry.getKey());\n                sb.append(entry.getValue());\n            }\n        }\n        String md5 = DigestUtils.md5Hex(sb.toString());\n        LOG.debug(\"get signature of es table {}: {}. signature string: {}\", name, md5, sb.toString());\n        return md5;\n    }\n","date":"2021-01-28 18:50:18","endLine":275,"groupId":"101353","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"getSignature","params":"(intsignatureVersion)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-incubatordoris-10-0.7/blobInfo/CC_OUT/blobs/8c/ae113f26a0736703b2b354c55d7e58b9b447c4.src","preCode":"    public int getSignature(int signatureVersion) {\n        Adler32 adler32 = new Adler32();\n        adler32.update(signatureVersion);\n        String charsetName = \"UTF-8\";\n\n        try {\n            \r\n            adler32.update(name.getBytes(charsetName));\n            \r\n            adler32.update(type.name().getBytes(charsetName));\n            if (Catalog.getCurrentCatalogJournalVersion() >= FeMetaVersion.VERSION_68) {\n                for (Map.Entry<String, String> entry : tableContext.entrySet()) {\n                    adler32.update(entry.getValue().getBytes(charsetName));\n                }\n            } else {\n                \r\n                adler32.update(hosts.getBytes(charsetName));\n                \r\n                adler32.update(userName.getBytes(charsetName));\n                \r\n                adler32.update(passwd.getBytes(charsetName));\n                \r\n                adler32.update(indexName.getBytes(charsetName));\n                \r\n                adler32.update(mappingType.getBytes(charsetName));\n                \r\n                adler32.update(transport.getBytes(charsetName));\n            }\n        } catch (UnsupportedEncodingException e) {\n            LOG.error(\"encoding error\", e);\n            return -1;\n        }\n\n        return Math.abs((int) adler32.getValue());\n    }\n","realPath":"fe/fe-core/src/main/java/org/apache/doris/catalog/EsTable.java","repoName":"incubatordoris","snippetEndLine":0,"snippetStartLine":0,"startLine":255,"status":"M"}],"commitId":"6bd22bc573c3f68fe9f874ad212bfabb19e3d8c0","commitMessage":"@@@[BackupAndRestore] Support backup and restore view and external odbc table (#5299)\n\n[BackupAndRestore] Support backup and restore view and external odbc table\n\n1. Support backup and restore view and odbc table. The syntax is the same as that of the backup and restore table.\n2. If the table associated with the view does not exist in the snapshot. \n   the view can still be backed up successfully.  but the TableNotFound exception will be thrown when querying the view.\n3. If the odbc table associated with the odbc resource.  the odbc resource will be backuped and restored together.\n4. If the same view.  odbc table and resource already exists in the database.  it will compare whether the metadata of snapshot is consistent.\n   If it is inconsistent.  the restoration will fail.\n4. This pr also modified the json format of the backup information.\n   A `new_backup_objects` object is added to the root node to store backup meta-information other than olap table. \n   such as views and external tables.\n   ```\n   {\n       \"backup_objects\": {}. \n       \"new_backup_objects\": {\n           \"view\": [\n               {\"name\": \"view1\".  \"id\": \"10001\"}\n           ]. \n           \"odbc_table\": [\n               {\"name\":\"xxx\".  xxx}\n           ]\n           \"odbc_resources\": [\n               {\"name\": \"bj_oracle\"}\n           ]\n       }\n   }\n   ```\n5. This pr changes the serialization and deserialization method of backup information\n   from manual construction to automatic analysis by Gson tools.\n\nChange-Id: I216469bf2a6484177185d8354dcca2dc19f653f3","date":"2021-01-28 18:50:18","modifiedFileCount":"27","status":"M","submitter":"EmmyMiao87"}]
