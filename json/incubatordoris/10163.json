[{"authorTime":"2020-07-21 12:42:42","codes":[{"authorDate":"2020-07-21 12:42:42","commitOrder":1,"curCode":"    public void testCorrectExpr2(@Injectable CastExpr castExpr) {\n        TableName tableName = new TableName(\"db\", \"table\");\n        SlotRef slotRef = new SlotRef(tableName, \"c1\");\n        new Expectations() {\n            {\n                castExpr.unwrapSlotRef();\n                result = slotRef;\n            }\n        };\n        List<Expr> child0Params = Lists.newArrayList();\n        child0Params.add(castExpr);\n        FunctionCallExpr child0 = new FunctionCallExpr(FunctionSet.HLL_HASH, child0Params);\n        List<Expr> params = Lists.newArrayList();\n        params.add(child0);\n        FunctionCallExpr expr = new FunctionCallExpr(FunctionSet.HLL_UNION, params);\n        MVColumnHLLUnionPattern pattern = new MVColumnHLLUnionPattern();\n        Assert.assertTrue(pattern.match(expr));\n    }\n","date":"2020-07-21 12:42:42","endLine":68,"groupId":"3488","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testCorrectExpr2","params":"(@InjectableCastExprcastExpr)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-incubatordoris-10-0.7/blobInfo/CC_OUT/blobs/76/25ce6c75b8f00bc0e9f5c12b1f122d80f26350.src","preCode":"    public void testCorrectExpr2(@Injectable CastExpr castExpr) {\n        TableName tableName = new TableName(\"db\", \"table\");\n        SlotRef slotRef = new SlotRef(tableName, \"c1\");\n        new Expectations() {\n            {\n                castExpr.unwrapSlotRef();\n                result = slotRef;\n            }\n        };\n        List<Expr> child0Params = Lists.newArrayList();\n        child0Params.add(castExpr);\n        FunctionCallExpr child0 = new FunctionCallExpr(FunctionSet.HLL_HASH, child0Params);\n        List<Expr> params = Lists.newArrayList();\n        params.add(child0);\n        FunctionCallExpr expr = new FunctionCallExpr(FunctionSet.HLL_UNION, params);\n        MVColumnHLLUnionPattern pattern = new MVColumnHLLUnionPattern();\n        Assert.assertTrue(pattern.match(expr));\n    }\n","realPath":"fe/fe-core/src/test/java/org/apache/doris/analysis/MVColumnHLLUnionPatternTest.java","repoName":"incubatordoris","snippetEndLine":0,"snippetStartLine":0,"startLine":51,"status":"B"},{"authorDate":"2020-07-21 12:42:42","commitOrder":1,"curCode":"    public void testCorrectExpr2(@Injectable CastExpr castExpr) {\n        TableName tableName = new TableName(\"db\", \"table\");\n        SlotRef slotRef = new SlotRef(tableName, \"c1\");\n        new Expectations() {\n            {\n                castExpr.unwrapSlotRef();\n                result = slotRef;\n            }\n        };\n        List<Expr> child0Params = Lists.newArrayList();\n        child0Params.add(castExpr);\n        FunctionCallExpr child0 = new FunctionCallExpr(FunctionSet.TO_BITMAP, child0Params);\n        List<Expr> params = Lists.newArrayList();\n        params.add(child0);\n        FunctionCallExpr expr = new FunctionCallExpr(FunctionSet.BITMAP_UNION, params);\n        MVColumnBitmapUnionPattern pattern = new MVColumnBitmapUnionPattern();\n        Assert.assertTrue(pattern.match(expr));\n    }\n","date":"2020-07-21 12:42:42","endLine":68,"groupId":"3488","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testCorrectExpr2","params":"(@InjectableCastExprcastExpr)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-incubatordoris-10-0.7/blobInfo/CC_OUT/blobs/f5/998acb4a651f82ecdfd2a020e60a7f16c88afd.src","preCode":"    public void testCorrectExpr2(@Injectable CastExpr castExpr) {\n        TableName tableName = new TableName(\"db\", \"table\");\n        SlotRef slotRef = new SlotRef(tableName, \"c1\");\n        new Expectations() {\n            {\n                castExpr.unwrapSlotRef();\n                result = slotRef;\n            }\n        };\n        List<Expr> child0Params = Lists.newArrayList();\n        child0Params.add(castExpr);\n        FunctionCallExpr child0 = new FunctionCallExpr(FunctionSet.TO_BITMAP, child0Params);\n        List<Expr> params = Lists.newArrayList();\n        params.add(child0);\n        FunctionCallExpr expr = new FunctionCallExpr(FunctionSet.BITMAP_UNION, params);\n        MVColumnBitmapUnionPattern pattern = new MVColumnBitmapUnionPattern();\n        Assert.assertTrue(pattern.match(expr));\n    }\n","realPath":"fe/fe-core/src/test/java/org/apache/doris/analysis/MVColumnBitmapUnionPatternTest.java","repoName":"incubatordoris","snippetEndLine":0,"snippetStartLine":0,"startLine":51,"status":"B"}],"commitId":"ad17afef9139a9aeedeb2e92638e95886d515f14","commitMessage":"@@@[CodeRefactor] #4098 Make FE multi module (#4099)\n\nThis PR change the FE code structure to maven multi module structure. \nSee ISSUE: #4098 for more info.  such as How to resolve conflicts.","date":"2020-07-21 12:42:42","modifiedFileCount":"0","status":"B","submitter":"Mingyu Chen"},{"authorTime":"2020-08-26 10:49:32","codes":[{"authorDate":"2020-07-21 12:42:42","commitOrder":2,"curCode":"    public void testCorrectExpr2(@Injectable CastExpr castExpr) {\n        TableName tableName = new TableName(\"db\", \"table\");\n        SlotRef slotRef = new SlotRef(tableName, \"c1\");\n        new Expectations() {\n            {\n                castExpr.unwrapSlotRef();\n                result = slotRef;\n            }\n        };\n        List<Expr> child0Params = Lists.newArrayList();\n        child0Params.add(castExpr);\n        FunctionCallExpr child0 = new FunctionCallExpr(FunctionSet.HLL_HASH, child0Params);\n        List<Expr> params = Lists.newArrayList();\n        params.add(child0);\n        FunctionCallExpr expr = new FunctionCallExpr(FunctionSet.HLL_UNION, params);\n        MVColumnHLLUnionPattern pattern = new MVColumnHLLUnionPattern();\n        Assert.assertTrue(pattern.match(expr));\n    }\n","date":"2020-07-21 12:42:42","endLine":68,"groupId":"10163","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testCorrectExpr2","params":"(@InjectableCastExprcastExpr)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-incubatordoris-10-0.7/blobInfo/CC_OUT/blobs/76/25ce6c75b8f00bc0e9f5c12b1f122d80f26350.src","preCode":"    public void testCorrectExpr2(@Injectable CastExpr castExpr) {\n        TableName tableName = new TableName(\"db\", \"table\");\n        SlotRef slotRef = new SlotRef(tableName, \"c1\");\n        new Expectations() {\n            {\n                castExpr.unwrapSlotRef();\n                result = slotRef;\n            }\n        };\n        List<Expr> child0Params = Lists.newArrayList();\n        child0Params.add(castExpr);\n        FunctionCallExpr child0 = new FunctionCallExpr(FunctionSet.HLL_HASH, child0Params);\n        List<Expr> params = Lists.newArrayList();\n        params.add(child0);\n        FunctionCallExpr expr = new FunctionCallExpr(FunctionSet.HLL_UNION, params);\n        MVColumnHLLUnionPattern pattern = new MVColumnHLLUnionPattern();\n        Assert.assertTrue(pattern.match(expr));\n    }\n","realPath":"fe/fe-core/src/test/java/org/apache/doris/analysis/MVColumnHLLUnionPatternTest.java","repoName":"incubatordoris","snippetEndLine":0,"snippetStartLine":0,"startLine":51,"status":"N"},{"authorDate":"2020-08-26 10:49:32","commitOrder":2,"curCode":"    public void testCorrectExpr2(@Injectable CastExpr castExpr) {\n        TableName tableName = new TableName(\"db\", \"table\");\n        SlotRef slotRef = new SlotRef(tableName, \"c1\");\n        Deencapsulation.setField(slotRef, \"type\", Type.INT);\n        new Expectations() {\n            {\n                castExpr.unwrapSlotRef();\n                result = slotRef;\n            }\n        };\n        List<Expr> child0Params = Lists.newArrayList();\n        child0Params.add(castExpr);\n        FunctionCallExpr child0 = new FunctionCallExpr(FunctionSet.TO_BITMAP, child0Params);\n        List<Expr> params = Lists.newArrayList();\n        params.add(child0);\n        FunctionCallExpr expr = new FunctionCallExpr(FunctionSet.BITMAP_UNION, params);\n        MVColumnBitmapUnionPattern pattern = new MVColumnBitmapUnionPattern();\n        Assert.assertTrue(pattern.match(expr));\n    }\n","date":"2020-08-26 10:49:32","endLine":71,"groupId":"10163","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"testCorrectExpr2","params":"(@InjectableCastExprcastExpr)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-incubatordoris-10-0.7/blobInfo/CC_OUT/blobs/4b/78903d6664b1790c9f979311353844d319a269.src","preCode":"    public void testCorrectExpr2(@Injectable CastExpr castExpr) {\n        TableName tableName = new TableName(\"db\", \"table\");\n        SlotRef slotRef = new SlotRef(tableName, \"c1\");\n        new Expectations() {\n            {\n                castExpr.unwrapSlotRef();\n                result = slotRef;\n            }\n        };\n        List<Expr> child0Params = Lists.newArrayList();\n        child0Params.add(castExpr);\n        FunctionCallExpr child0 = new FunctionCallExpr(FunctionSet.TO_BITMAP, child0Params);\n        List<Expr> params = Lists.newArrayList();\n        params.add(child0);\n        FunctionCallExpr expr = new FunctionCallExpr(FunctionSet.BITMAP_UNION, params);\n        MVColumnBitmapUnionPattern pattern = new MVColumnBitmapUnionPattern();\n        Assert.assertTrue(pattern.match(expr));\n    }\n","realPath":"fe/fe-core/src/test/java/org/apache/doris/analysis/MVColumnBitmapUnionPatternTest.java","repoName":"incubatordoris","snippetEndLine":0,"snippetStartLine":0,"startLine":53,"status":"M"}],"commitId":"b4d8b3d9babed9e68b4343b03225448f94e52e75","commitMessage":"@@@Forbidden the illegal column types on BITMAP_UNION OR HLL_UNION mv (#4432)\n\n1. The base column of bitmap_union could must be integer. The largeint is not supported too.\n2. The base column of hll_union could not be decimal.\n\nCheck error msg of const expr in Union Node\n\nIf user wants to insert a negative number into bitmap mv.  Doris will thrown exception 'invalid input'.\nThe const value in Union Node is checked in this commit.","date":"2020-08-26 10:49:32","modifiedFileCount":"4","status":"M","submitter":"EmmyMiao87"}]
