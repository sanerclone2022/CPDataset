[{"authorTime":"2020-07-21 12:42:42","codes":[{"authorDate":"2020-07-21 12:42:42","commitOrder":1,"curCode":"    public void testModifyDynamicPartitionNormal() throws UserException {\n        fakeCatalog = new FakeCatalog();\n        fakeEditLog = new FakeEditLog();\n        FakeCatalog.setCatalog(masterCatalog);\n        SchemaChangeHandler schemaChangeHandler = Catalog.getCurrentCatalog().getSchemaChangeHandler();\n        ArrayList<AlterClause> alterClauses = new ArrayList<>();\n        Map<String, String> properties = new HashMap<>();\n        properties.put(DynamicPartitionProperty.ENABLE, \"true\");\n        properties.put(DynamicPartitionProperty.TIME_UNIT, \"day\");\n        properties.put(DynamicPartitionProperty.END, \"3\");\n        properties.put(DynamicPartitionProperty.PREFIX, \"p\");\n        properties.put(DynamicPartitionProperty.BUCKETS, \"30\");\n        alterClauses.add(new ModifyTablePropertiesClause(properties));\n        Database db = CatalogMocker.mockDb();\n        OlapTable olapTable = (OlapTable) db.getTable(CatalogMocker.TEST_TBL2_ID);\n        schemaChangeHandler.process(alterClauses, \"default_cluster\", db, olapTable);\n        Assert.assertTrue(olapTable.getTableProperty().getDynamicPartitionProperty().isExist());\n        Assert.assertTrue(olapTable.getTableProperty().getDynamicPartitionProperty().getEnable());\n        Assert.assertEquals(\"day\", olapTable.getTableProperty().getDynamicPartitionProperty().getTimeUnit());\n        Assert.assertEquals(3, olapTable.getTableProperty().getDynamicPartitionProperty().getEnd());\n        Assert.assertEquals(\"p\", olapTable.getTableProperty().getDynamicPartitionProperty().getPrefix());\n        Assert.assertEquals(30, olapTable.getTableProperty().getDynamicPartitionProperty().getBuckets());\n\n\n        \r\n        ArrayList<AlterClause> tmpAlterClauses = new ArrayList<>();\n        properties.put(DynamicPartitionProperty.ENABLE, \"false\");\n        tmpAlterClauses.add(new ModifyTablePropertiesClause(properties));\n        schemaChangeHandler.process(tmpAlterClauses, \"default_cluster\", db, olapTable);\n        Assert.assertFalse(olapTable.getTableProperty().getDynamicPartitionProperty().getEnable());\n        \r\n        tmpAlterClauses = new ArrayList<>();\n        properties.put(DynamicPartitionProperty.TIME_UNIT, \"week\");\n        tmpAlterClauses.add(new ModifyTablePropertiesClause(properties));\n        schemaChangeHandler.process(tmpAlterClauses, \"default_cluster\", db, olapTable);\n        Assert.assertEquals(\"week\", olapTable.getTableProperty().getDynamicPartitionProperty().getTimeUnit());\n        \r\n        tmpAlterClauses = new ArrayList<>();\n        properties.put(DynamicPartitionProperty.END, \"10\");\n        tmpAlterClauses.add(new ModifyTablePropertiesClause(properties));\n        schemaChangeHandler.process(tmpAlterClauses, \"default_cluster\", db, olapTable);\n        Assert.assertEquals(10, olapTable.getTableProperty().getDynamicPartitionProperty().getEnd());\n        \r\n        tmpAlterClauses = new ArrayList<>();\n        properties.put(DynamicPartitionProperty.PREFIX, \"p1\");\n        tmpAlterClauses.add(new ModifyTablePropertiesClause(properties));\n        schemaChangeHandler.process(tmpAlterClauses, \"default_cluster\", db, olapTable);\n        Assert.assertEquals(\"p1\", olapTable.getTableProperty().getDynamicPartitionProperty().getPrefix());\n        \r\n        tmpAlterClauses = new ArrayList<>();\n        properties.put(DynamicPartitionProperty.BUCKETS, \"3\");\n        tmpAlterClauses.add(new ModifyTablePropertiesClause(properties));\n        schemaChangeHandler.process(tmpAlterClauses, \"default_cluster\", db, olapTable);\n        Assert.assertEquals(3, olapTable.getTableProperty().getDynamicPartitionProperty().getBuckets());\n    }\n","date":"2020-07-21 12:42:42","endLine":359,"groupId":"3103","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testModifyDynamicPartitionNormal","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-incubatordoris-10-0.7/blobInfo/CC_OUT/blobs/1e/ea8bb5b0198b659709f412686870e3087bc438.src","preCode":"    public void testModifyDynamicPartitionNormal() throws UserException {\n        fakeCatalog = new FakeCatalog();\n        fakeEditLog = new FakeEditLog();\n        FakeCatalog.setCatalog(masterCatalog);\n        SchemaChangeHandler schemaChangeHandler = Catalog.getCurrentCatalog().getSchemaChangeHandler();\n        ArrayList<AlterClause> alterClauses = new ArrayList<>();\n        Map<String, String> properties = new HashMap<>();\n        properties.put(DynamicPartitionProperty.ENABLE, \"true\");\n        properties.put(DynamicPartitionProperty.TIME_UNIT, \"day\");\n        properties.put(DynamicPartitionProperty.END, \"3\");\n        properties.put(DynamicPartitionProperty.PREFIX, \"p\");\n        properties.put(DynamicPartitionProperty.BUCKETS, \"30\");\n        alterClauses.add(new ModifyTablePropertiesClause(properties));\n        Database db = CatalogMocker.mockDb();\n        OlapTable olapTable = (OlapTable) db.getTable(CatalogMocker.TEST_TBL2_ID);\n        schemaChangeHandler.process(alterClauses, \"default_cluster\", db, olapTable);\n        Assert.assertTrue(olapTable.getTableProperty().getDynamicPartitionProperty().isExist());\n        Assert.assertTrue(olapTable.getTableProperty().getDynamicPartitionProperty().getEnable());\n        Assert.assertEquals(\"day\", olapTable.getTableProperty().getDynamicPartitionProperty().getTimeUnit());\n        Assert.assertEquals(3, olapTable.getTableProperty().getDynamicPartitionProperty().getEnd());\n        Assert.assertEquals(\"p\", olapTable.getTableProperty().getDynamicPartitionProperty().getPrefix());\n        Assert.assertEquals(30, olapTable.getTableProperty().getDynamicPartitionProperty().getBuckets());\n\n\n        \r\n        ArrayList<AlterClause> tmpAlterClauses = new ArrayList<>();\n        properties.put(DynamicPartitionProperty.ENABLE, \"false\");\n        tmpAlterClauses.add(new ModifyTablePropertiesClause(properties));\n        schemaChangeHandler.process(tmpAlterClauses, \"default_cluster\", db, olapTable);\n        Assert.assertFalse(olapTable.getTableProperty().getDynamicPartitionProperty().getEnable());\n        \r\n        tmpAlterClauses = new ArrayList<>();\n        properties.put(DynamicPartitionProperty.TIME_UNIT, \"week\");\n        tmpAlterClauses.add(new ModifyTablePropertiesClause(properties));\n        schemaChangeHandler.process(tmpAlterClauses, \"default_cluster\", db, olapTable);\n        Assert.assertEquals(\"week\", olapTable.getTableProperty().getDynamicPartitionProperty().getTimeUnit());\n        \r\n        tmpAlterClauses = new ArrayList<>();\n        properties.put(DynamicPartitionProperty.END, \"10\");\n        tmpAlterClauses.add(new ModifyTablePropertiesClause(properties));\n        schemaChangeHandler.process(tmpAlterClauses, \"default_cluster\", db, olapTable);\n        Assert.assertEquals(10, olapTable.getTableProperty().getDynamicPartitionProperty().getEnd());\n        \r\n        tmpAlterClauses = new ArrayList<>();\n        properties.put(DynamicPartitionProperty.PREFIX, \"p1\");\n        tmpAlterClauses.add(new ModifyTablePropertiesClause(properties));\n        schemaChangeHandler.process(tmpAlterClauses, \"default_cluster\", db, olapTable);\n        Assert.assertEquals(\"p1\", olapTable.getTableProperty().getDynamicPartitionProperty().getPrefix());\n        \r\n        tmpAlterClauses = new ArrayList<>();\n        properties.put(DynamicPartitionProperty.BUCKETS, \"3\");\n        tmpAlterClauses.add(new ModifyTablePropertiesClause(properties));\n        schemaChangeHandler.process(tmpAlterClauses, \"default_cluster\", db, olapTable);\n        Assert.assertEquals(3, olapTable.getTableProperty().getDynamicPartitionProperty().getBuckets());\n    }\n","realPath":"fe/fe-core/src/test/java/org/apache/doris/alter/SchemaChangeJobV2Test.java","repoName":"incubatordoris","snippetEndLine":0,"snippetStartLine":0,"startLine":305,"status":"B"},{"authorDate":"2020-07-21 12:42:42","commitOrder":1,"curCode":"    public void modifyDynamicPartitionWithoutTableProperty(String propertyKey, String propertyValue, String missPropertyKey)\n            throws UserException {\n        fakeCatalog = new FakeCatalog();\n        FakeCatalog.setCatalog(masterCatalog);\n        SchemaChangeHandler schemaChangeHandler = Catalog.getCurrentCatalog().getSchemaChangeHandler();\n        ArrayList<AlterClause> alterClauses = new ArrayList<>();\n        Map<String, String> properties = new HashMap<>();\n        properties.put(propertyKey, propertyValue);\n        alterClauses.add(new ModifyTablePropertiesClause(properties));\n\n        Database db = CatalogMocker.mockDb();\n        OlapTable olapTable = (OlapTable) db.getTable(CatalogMocker.TEST_TBL2_ID);\n\n        expectedEx.expect(DdlException.class);\n        expectedEx.expectMessage(String.format(\"Must assign %s properties\", missPropertyKey));\n\n        schemaChangeHandler.process(alterClauses, \"default_cluster\", db, olapTable);\n    }\n","date":"2020-07-21 12:42:42","endLine":378,"groupId":"7300","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"modifyDynamicPartitionWithoutTableProperty","params":"(StringpropertyKey@StringpropertyValue@StringmissPropertyKey)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-incubatordoris-10-0.7/blobInfo/CC_OUT/blobs/1e/ea8bb5b0198b659709f412686870e3087bc438.src","preCode":"    public void modifyDynamicPartitionWithoutTableProperty(String propertyKey, String propertyValue, String missPropertyKey)\n            throws UserException {\n        fakeCatalog = new FakeCatalog();\n        FakeCatalog.setCatalog(masterCatalog);\n        SchemaChangeHandler schemaChangeHandler = Catalog.getCurrentCatalog().getSchemaChangeHandler();\n        ArrayList<AlterClause> alterClauses = new ArrayList<>();\n        Map<String, String> properties = new HashMap<>();\n        properties.put(propertyKey, propertyValue);\n        alterClauses.add(new ModifyTablePropertiesClause(properties));\n\n        Database db = CatalogMocker.mockDb();\n        OlapTable olapTable = (OlapTable) db.getTable(CatalogMocker.TEST_TBL2_ID);\n\n        expectedEx.expect(DdlException.class);\n        expectedEx.expectMessage(String.format(\"Must assign %s properties\", missPropertyKey));\n\n        schemaChangeHandler.process(alterClauses, \"default_cluster\", db, olapTable);\n    }\n","realPath":"fe/fe-core/src/test/java/org/apache/doris/alter/SchemaChangeJobV2Test.java","repoName":"incubatordoris","snippetEndLine":0,"snippetStartLine":0,"startLine":361,"status":"B"}],"commitId":"ad17afef9139a9aeedeb2e92638e95886d515f14","commitMessage":"@@@[CodeRefactor] #4098 Make FE multi module (#4099)\n\nThis PR change the FE code structure to maven multi module structure. \nSee ISSUE: #4098 for more info.  such as How to resolve conflicts.","date":"2020-07-21 12:42:42","modifiedFileCount":"0","status":"B","submitter":"Mingyu Chen"},{"authorTime":"2020-08-02 22:03:57","codes":[{"authorDate":"2020-07-21 12:42:42","commitOrder":2,"curCode":"    public void testModifyDynamicPartitionNormal() throws UserException {\n        fakeCatalog = new FakeCatalog();\n        fakeEditLog = new FakeEditLog();\n        FakeCatalog.setCatalog(masterCatalog);\n        SchemaChangeHandler schemaChangeHandler = Catalog.getCurrentCatalog().getSchemaChangeHandler();\n        ArrayList<AlterClause> alterClauses = new ArrayList<>();\n        Map<String, String> properties = new HashMap<>();\n        properties.put(DynamicPartitionProperty.ENABLE, \"true\");\n        properties.put(DynamicPartitionProperty.TIME_UNIT, \"day\");\n        properties.put(DynamicPartitionProperty.END, \"3\");\n        properties.put(DynamicPartitionProperty.PREFIX, \"p\");\n        properties.put(DynamicPartitionProperty.BUCKETS, \"30\");\n        alterClauses.add(new ModifyTablePropertiesClause(properties));\n        Database db = CatalogMocker.mockDb();\n        OlapTable olapTable = (OlapTable) db.getTable(CatalogMocker.TEST_TBL2_ID);\n        schemaChangeHandler.process(alterClauses, \"default_cluster\", db, olapTable);\n        Assert.assertTrue(olapTable.getTableProperty().getDynamicPartitionProperty().isExist());\n        Assert.assertTrue(olapTable.getTableProperty().getDynamicPartitionProperty().getEnable());\n        Assert.assertEquals(\"day\", olapTable.getTableProperty().getDynamicPartitionProperty().getTimeUnit());\n        Assert.assertEquals(3, olapTable.getTableProperty().getDynamicPartitionProperty().getEnd());\n        Assert.assertEquals(\"p\", olapTable.getTableProperty().getDynamicPartitionProperty().getPrefix());\n        Assert.assertEquals(30, olapTable.getTableProperty().getDynamicPartitionProperty().getBuckets());\n\n\n        \r\n        ArrayList<AlterClause> tmpAlterClauses = new ArrayList<>();\n        properties.put(DynamicPartitionProperty.ENABLE, \"false\");\n        tmpAlterClauses.add(new ModifyTablePropertiesClause(properties));\n        schemaChangeHandler.process(tmpAlterClauses, \"default_cluster\", db, olapTable);\n        Assert.assertFalse(olapTable.getTableProperty().getDynamicPartitionProperty().getEnable());\n        \r\n        tmpAlterClauses = new ArrayList<>();\n        properties.put(DynamicPartitionProperty.TIME_UNIT, \"week\");\n        tmpAlterClauses.add(new ModifyTablePropertiesClause(properties));\n        schemaChangeHandler.process(tmpAlterClauses, \"default_cluster\", db, olapTable);\n        Assert.assertEquals(\"week\", olapTable.getTableProperty().getDynamicPartitionProperty().getTimeUnit());\n        \r\n        tmpAlterClauses = new ArrayList<>();\n        properties.put(DynamicPartitionProperty.END, \"10\");\n        tmpAlterClauses.add(new ModifyTablePropertiesClause(properties));\n        schemaChangeHandler.process(tmpAlterClauses, \"default_cluster\", db, olapTable);\n        Assert.assertEquals(10, olapTable.getTableProperty().getDynamicPartitionProperty().getEnd());\n        \r\n        tmpAlterClauses = new ArrayList<>();\n        properties.put(DynamicPartitionProperty.PREFIX, \"p1\");\n        tmpAlterClauses.add(new ModifyTablePropertiesClause(properties));\n        schemaChangeHandler.process(tmpAlterClauses, \"default_cluster\", db, olapTable);\n        Assert.assertEquals(\"p1\", olapTable.getTableProperty().getDynamicPartitionProperty().getPrefix());\n        \r\n        tmpAlterClauses = new ArrayList<>();\n        properties.put(DynamicPartitionProperty.BUCKETS, \"3\");\n        tmpAlterClauses.add(new ModifyTablePropertiesClause(properties));\n        schemaChangeHandler.process(tmpAlterClauses, \"default_cluster\", db, olapTable);\n        Assert.assertEquals(3, olapTable.getTableProperty().getDynamicPartitionProperty().getBuckets());\n    }\n","date":"2020-07-21 12:42:42","endLine":359,"groupId":"3103","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testModifyDynamicPartitionNormal","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-incubatordoris-10-0.7/blobInfo/CC_OUT/blobs/1e/ea8bb5b0198b659709f412686870e3087bc438.src","preCode":"    public void testModifyDynamicPartitionNormal() throws UserException {\n        fakeCatalog = new FakeCatalog();\n        fakeEditLog = new FakeEditLog();\n        FakeCatalog.setCatalog(masterCatalog);\n        SchemaChangeHandler schemaChangeHandler = Catalog.getCurrentCatalog().getSchemaChangeHandler();\n        ArrayList<AlterClause> alterClauses = new ArrayList<>();\n        Map<String, String> properties = new HashMap<>();\n        properties.put(DynamicPartitionProperty.ENABLE, \"true\");\n        properties.put(DynamicPartitionProperty.TIME_UNIT, \"day\");\n        properties.put(DynamicPartitionProperty.END, \"3\");\n        properties.put(DynamicPartitionProperty.PREFIX, \"p\");\n        properties.put(DynamicPartitionProperty.BUCKETS, \"30\");\n        alterClauses.add(new ModifyTablePropertiesClause(properties));\n        Database db = CatalogMocker.mockDb();\n        OlapTable olapTable = (OlapTable) db.getTable(CatalogMocker.TEST_TBL2_ID);\n        schemaChangeHandler.process(alterClauses, \"default_cluster\", db, olapTable);\n        Assert.assertTrue(olapTable.getTableProperty().getDynamicPartitionProperty().isExist());\n        Assert.assertTrue(olapTable.getTableProperty().getDynamicPartitionProperty().getEnable());\n        Assert.assertEquals(\"day\", olapTable.getTableProperty().getDynamicPartitionProperty().getTimeUnit());\n        Assert.assertEquals(3, olapTable.getTableProperty().getDynamicPartitionProperty().getEnd());\n        Assert.assertEquals(\"p\", olapTable.getTableProperty().getDynamicPartitionProperty().getPrefix());\n        Assert.assertEquals(30, olapTable.getTableProperty().getDynamicPartitionProperty().getBuckets());\n\n\n        \r\n        ArrayList<AlterClause> tmpAlterClauses = new ArrayList<>();\n        properties.put(DynamicPartitionProperty.ENABLE, \"false\");\n        tmpAlterClauses.add(new ModifyTablePropertiesClause(properties));\n        schemaChangeHandler.process(tmpAlterClauses, \"default_cluster\", db, olapTable);\n        Assert.assertFalse(olapTable.getTableProperty().getDynamicPartitionProperty().getEnable());\n        \r\n        tmpAlterClauses = new ArrayList<>();\n        properties.put(DynamicPartitionProperty.TIME_UNIT, \"week\");\n        tmpAlterClauses.add(new ModifyTablePropertiesClause(properties));\n        schemaChangeHandler.process(tmpAlterClauses, \"default_cluster\", db, olapTable);\n        Assert.assertEquals(\"week\", olapTable.getTableProperty().getDynamicPartitionProperty().getTimeUnit());\n        \r\n        tmpAlterClauses = new ArrayList<>();\n        properties.put(DynamicPartitionProperty.END, \"10\");\n        tmpAlterClauses.add(new ModifyTablePropertiesClause(properties));\n        schemaChangeHandler.process(tmpAlterClauses, \"default_cluster\", db, olapTable);\n        Assert.assertEquals(10, olapTable.getTableProperty().getDynamicPartitionProperty().getEnd());\n        \r\n        tmpAlterClauses = new ArrayList<>();\n        properties.put(DynamicPartitionProperty.PREFIX, \"p1\");\n        tmpAlterClauses.add(new ModifyTablePropertiesClause(properties));\n        schemaChangeHandler.process(tmpAlterClauses, \"default_cluster\", db, olapTable);\n        Assert.assertEquals(\"p1\", olapTable.getTableProperty().getDynamicPartitionProperty().getPrefix());\n        \r\n        tmpAlterClauses = new ArrayList<>();\n        properties.put(DynamicPartitionProperty.BUCKETS, \"3\");\n        tmpAlterClauses.add(new ModifyTablePropertiesClause(properties));\n        schemaChangeHandler.process(tmpAlterClauses, \"default_cluster\", db, olapTable);\n        Assert.assertEquals(3, olapTable.getTableProperty().getDynamicPartitionProperty().getBuckets());\n    }\n","realPath":"fe/fe-core/src/test/java/org/apache/doris/alter/SchemaChangeJobV2Test.java","repoName":"incubatordoris","snippetEndLine":0,"snippetStartLine":0,"startLine":305,"status":"N"},{"authorDate":"2020-08-02 22:03:57","commitOrder":2,"curCode":"    public void modifyDynamicPartitionWithoutTableProperty(String propertyKey, String propertyValue, String missPropertyKey)\n            throws UserException {\n        fakeCatalog = new FakeCatalog();\n        FakeCatalog.setCatalog(masterCatalog);\n        SchemaChangeHandler schemaChangeHandler = Catalog.getCurrentCatalog().getSchemaChangeHandler();\n        ArrayList<AlterClause> alterClauses = new ArrayList<>();\n        Map<String, String> properties = new HashMap<>();\n        properties.put(propertyKey, propertyValue);\n        alterClauses.add(new ModifyTablePropertiesClause(properties));\n\n        Database db = CatalogMocker.mockDb();\n        OlapTable olapTable = (OlapTable) db.getTable(CatalogMocker.TEST_TBL2_ID);\n\n        expectedEx.expect(DdlException.class);\n        expectedEx.expectMessage(\"errCode = 2, detailMessage = Table test_db.test_tbl2 is not a dynamic partition table. \" +\n                \"Use command `HELP ALTER TABLE` to see how to change a normal table to a dynamic partition table.\");\n\n        schemaChangeHandler.process(alterClauses, \"default_cluster\", db, olapTable);\n    }\n","date":"2020-08-02 22:03:57","endLine":379,"groupId":"7300","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"modifyDynamicPartitionWithoutTableProperty","params":"(StringpropertyKey@StringpropertyValue@StringmissPropertyKey)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-incubatordoris-10-0.7/blobInfo/CC_OUT/blobs/b4/8c8b811d5fe9cb2b544d9b6d29f49db1b48dcc.src","preCode":"    public void modifyDynamicPartitionWithoutTableProperty(String propertyKey, String propertyValue, String missPropertyKey)\n            throws UserException {\n        fakeCatalog = new FakeCatalog();\n        FakeCatalog.setCatalog(masterCatalog);\n        SchemaChangeHandler schemaChangeHandler = Catalog.getCurrentCatalog().getSchemaChangeHandler();\n        ArrayList<AlterClause> alterClauses = new ArrayList<>();\n        Map<String, String> properties = new HashMap<>();\n        properties.put(propertyKey, propertyValue);\n        alterClauses.add(new ModifyTablePropertiesClause(properties));\n\n        Database db = CatalogMocker.mockDb();\n        OlapTable olapTable = (OlapTable) db.getTable(CatalogMocker.TEST_TBL2_ID);\n\n        expectedEx.expect(DdlException.class);\n        expectedEx.expectMessage(String.format(\"Must assign %s properties\", missPropertyKey));\n\n        schemaChangeHandler.process(alterClauses, \"default_cluster\", db, olapTable);\n    }\n","realPath":"fe/fe-core/src/test/java/org/apache/doris/alter/SchemaChangeJobV2Test.java","repoName":"incubatordoris","snippetEndLine":0,"snippetStartLine":0,"startLine":361,"status":"M"}],"commitId":"d64d65322bdf7625bb7eff636f354bc060c54530","commitMessage":"@@@[Bug][DynamicPartition]Fix bug that Modify a dynamic partition property in a non-dynamic partition table will throw a Exception (#4127)\n\n","date":"2020-08-02 22:03:57","modifiedFileCount":"4","status":"M","submitter":"WangCong"},{"authorTime":"2021-09-03 13:34:49","codes":[{"authorDate":"2021-09-03 13:34:49","commitOrder":3,"curCode":"    public void testModifyDynamicPartitionNormal() throws UserException {\n        fakeCatalog = new FakeCatalog();\n        fakeEditLog = new FakeEditLog();\n        FakeCatalog.setCatalog(masterCatalog);\n        SchemaChangeHandler schemaChangeHandler = Catalog.getCurrentCatalog().getSchemaChangeHandler();\n        ArrayList<AlterClause> alterClauses = new ArrayList<>();\n        Map<String, String> properties = new HashMap<>();\n        properties.put(DynamicPartitionProperty.ENABLE, \"true\");\n        properties.put(DynamicPartitionProperty.TIME_UNIT, \"day\");\n        properties.put(DynamicPartitionProperty.END, \"3\");\n        properties.put(DynamicPartitionProperty.PREFIX, \"p\");\n        properties.put(DynamicPartitionProperty.BUCKETS, \"30\");\n        alterClauses.add(new ModifyTablePropertiesClause(properties));\n        Database db = CatalogMocker.mockDb();\n        OlapTable olapTable = (OlapTable) db.getTableOrDdlException(CatalogMocker.TEST_TBL2_ID);\n        schemaChangeHandler.process(alterClauses, \"default_cluster\", db, olapTable);\n        Assert.assertTrue(olapTable.getTableProperty().getDynamicPartitionProperty().isExist());\n        Assert.assertTrue(olapTable.getTableProperty().getDynamicPartitionProperty().getEnable());\n        Assert.assertEquals(\"day\", olapTable.getTableProperty().getDynamicPartitionProperty().getTimeUnit());\n        Assert.assertEquals(3, olapTable.getTableProperty().getDynamicPartitionProperty().getEnd());\n        Assert.assertEquals(\"p\", olapTable.getTableProperty().getDynamicPartitionProperty().getPrefix());\n        Assert.assertEquals(30, olapTable.getTableProperty().getDynamicPartitionProperty().getBuckets());\n\n\n        \r\n        ArrayList<AlterClause> tmpAlterClauses = new ArrayList<>();\n        properties.put(DynamicPartitionProperty.ENABLE, \"false\");\n        tmpAlterClauses.add(new ModifyTablePropertiesClause(properties));\n        schemaChangeHandler.process(tmpAlterClauses, \"default_cluster\", db, olapTable);\n        Assert.assertFalse(olapTable.getTableProperty().getDynamicPartitionProperty().getEnable());\n        \r\n        tmpAlterClauses = new ArrayList<>();\n        properties.put(DynamicPartitionProperty.TIME_UNIT, \"week\");\n        tmpAlterClauses.add(new ModifyTablePropertiesClause(properties));\n        schemaChangeHandler.process(tmpAlterClauses, \"default_cluster\", db, olapTable);\n        Assert.assertEquals(\"week\", olapTable.getTableProperty().getDynamicPartitionProperty().getTimeUnit());\n        \r\n        tmpAlterClauses = new ArrayList<>();\n        properties.put(DynamicPartitionProperty.END, \"10\");\n        tmpAlterClauses.add(new ModifyTablePropertiesClause(properties));\n        schemaChangeHandler.process(tmpAlterClauses, \"default_cluster\", db, olapTable);\n        Assert.assertEquals(10, olapTable.getTableProperty().getDynamicPartitionProperty().getEnd());\n        \r\n        tmpAlterClauses = new ArrayList<>();\n        properties.put(DynamicPartitionProperty.PREFIX, \"p1\");\n        tmpAlterClauses.add(new ModifyTablePropertiesClause(properties));\n        schemaChangeHandler.process(tmpAlterClauses, \"default_cluster\", db, olapTable);\n        Assert.assertEquals(\"p1\", olapTable.getTableProperty().getDynamicPartitionProperty().getPrefix());\n        \r\n        tmpAlterClauses = new ArrayList<>();\n        properties.put(DynamicPartitionProperty.BUCKETS, \"3\");\n        tmpAlterClauses.add(new ModifyTablePropertiesClause(properties));\n        schemaChangeHandler.process(tmpAlterClauses, \"default_cluster\", db, olapTable);\n        Assert.assertEquals(3, olapTable.getTableProperty().getDynamicPartitionProperty().getBuckets());\n    }\n","date":"2021-09-03 13:34:49","endLine":360,"groupId":"10473","id":5,"instanceNumber":1,"isCurCommit":1,"methodName":"testModifyDynamicPartitionNormal","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-incubatordoris-10-0.7/blobInfo/CC_OUT/blobs/86/4416dff17c401336d1edde1067ec9b9265149d.src","preCode":"    public void testModifyDynamicPartitionNormal() throws UserException {\n        fakeCatalog = new FakeCatalog();\n        fakeEditLog = new FakeEditLog();\n        FakeCatalog.setCatalog(masterCatalog);\n        SchemaChangeHandler schemaChangeHandler = Catalog.getCurrentCatalog().getSchemaChangeHandler();\n        ArrayList<AlterClause> alterClauses = new ArrayList<>();\n        Map<String, String> properties = new HashMap<>();\n        properties.put(DynamicPartitionProperty.ENABLE, \"true\");\n        properties.put(DynamicPartitionProperty.TIME_UNIT, \"day\");\n        properties.put(DynamicPartitionProperty.END, \"3\");\n        properties.put(DynamicPartitionProperty.PREFIX, \"p\");\n        properties.put(DynamicPartitionProperty.BUCKETS, \"30\");\n        alterClauses.add(new ModifyTablePropertiesClause(properties));\n        Database db = CatalogMocker.mockDb();\n        OlapTable olapTable = (OlapTable) db.getTable(CatalogMocker.TEST_TBL2_ID);\n        schemaChangeHandler.process(alterClauses, \"default_cluster\", db, olapTable);\n        Assert.assertTrue(olapTable.getTableProperty().getDynamicPartitionProperty().isExist());\n        Assert.assertTrue(olapTable.getTableProperty().getDynamicPartitionProperty().getEnable());\n        Assert.assertEquals(\"day\", olapTable.getTableProperty().getDynamicPartitionProperty().getTimeUnit());\n        Assert.assertEquals(3, olapTable.getTableProperty().getDynamicPartitionProperty().getEnd());\n        Assert.assertEquals(\"p\", olapTable.getTableProperty().getDynamicPartitionProperty().getPrefix());\n        Assert.assertEquals(30, olapTable.getTableProperty().getDynamicPartitionProperty().getBuckets());\n\n\n        \r\n        ArrayList<AlterClause> tmpAlterClauses = new ArrayList<>();\n        properties.put(DynamicPartitionProperty.ENABLE, \"false\");\n        tmpAlterClauses.add(new ModifyTablePropertiesClause(properties));\n        schemaChangeHandler.process(tmpAlterClauses, \"default_cluster\", db, olapTable);\n        Assert.assertFalse(olapTable.getTableProperty().getDynamicPartitionProperty().getEnable());\n        \r\n        tmpAlterClauses = new ArrayList<>();\n        properties.put(DynamicPartitionProperty.TIME_UNIT, \"week\");\n        tmpAlterClauses.add(new ModifyTablePropertiesClause(properties));\n        schemaChangeHandler.process(tmpAlterClauses, \"default_cluster\", db, olapTable);\n        Assert.assertEquals(\"week\", olapTable.getTableProperty().getDynamicPartitionProperty().getTimeUnit());\n        \r\n        tmpAlterClauses = new ArrayList<>();\n        properties.put(DynamicPartitionProperty.END, \"10\");\n        tmpAlterClauses.add(new ModifyTablePropertiesClause(properties));\n        schemaChangeHandler.process(tmpAlterClauses, \"default_cluster\", db, olapTable);\n        Assert.assertEquals(10, olapTable.getTableProperty().getDynamicPartitionProperty().getEnd());\n        \r\n        tmpAlterClauses = new ArrayList<>();\n        properties.put(DynamicPartitionProperty.PREFIX, \"p1\");\n        tmpAlterClauses.add(new ModifyTablePropertiesClause(properties));\n        schemaChangeHandler.process(tmpAlterClauses, \"default_cluster\", db, olapTable);\n        Assert.assertEquals(\"p1\", olapTable.getTableProperty().getDynamicPartitionProperty().getPrefix());\n        \r\n        tmpAlterClauses = new ArrayList<>();\n        properties.put(DynamicPartitionProperty.BUCKETS, \"3\");\n        tmpAlterClauses.add(new ModifyTablePropertiesClause(properties));\n        schemaChangeHandler.process(tmpAlterClauses, \"default_cluster\", db, olapTable);\n        Assert.assertEquals(3, olapTable.getTableProperty().getDynamicPartitionProperty().getBuckets());\n    }\n","realPath":"fe/fe-core/src/test/java/org/apache/doris/alter/SchemaChangeJobV2Test.java","repoName":"incubatordoris","snippetEndLine":0,"snippetStartLine":0,"startLine":306,"status":"M"},{"authorDate":"2021-09-03 13:34:49","commitOrder":3,"curCode":"    public void modifyDynamicPartitionWithoutTableProperty(String propertyKey, String propertyValue, String missPropertyKey)\n            throws UserException {\n        fakeCatalog = new FakeCatalog();\n        FakeCatalog.setCatalog(masterCatalog);\n        SchemaChangeHandler schemaChangeHandler = Catalog.getCurrentCatalog().getSchemaChangeHandler();\n        ArrayList<AlterClause> alterClauses = new ArrayList<>();\n        Map<String, String> properties = new HashMap<>();\n        properties.put(propertyKey, propertyValue);\n        alterClauses.add(new ModifyTablePropertiesClause(properties));\n\n        Database db = CatalogMocker.mockDb();\n        OlapTable olapTable = (OlapTable) db.getTableOrDdlException(CatalogMocker.TEST_TBL2_ID);\n\n        expectedEx.expect(DdlException.class);\n        expectedEx.expectMessage(\"errCode = 2, detailMessage = Table test_db.test_tbl2 is not a dynamic partition table. \" +\n                \"Use command `HELP ALTER TABLE` to see how to change a normal table to a dynamic partition table.\");\n        schemaChangeHandler.process(alterClauses, \"default_cluster\", db, olapTable);\n    }\n","date":"2021-09-03 13:34:49","endLine":379,"groupId":"10473","id":6,"instanceNumber":2,"isCurCommit":1,"methodName":"modifyDynamicPartitionWithoutTableProperty","params":"(StringpropertyKey@StringpropertyValue@StringmissPropertyKey)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-incubatordoris-10-0.7/blobInfo/CC_OUT/blobs/86/4416dff17c401336d1edde1067ec9b9265149d.src","preCode":"    public void modifyDynamicPartitionWithoutTableProperty(String propertyKey, String propertyValue, String missPropertyKey)\n            throws UserException {\n        fakeCatalog = new FakeCatalog();\n        FakeCatalog.setCatalog(masterCatalog);\n        SchemaChangeHandler schemaChangeHandler = Catalog.getCurrentCatalog().getSchemaChangeHandler();\n        ArrayList<AlterClause> alterClauses = new ArrayList<>();\n        Map<String, String> properties = new HashMap<>();\n        properties.put(propertyKey, propertyValue);\n        alterClauses.add(new ModifyTablePropertiesClause(properties));\n\n        Database db = CatalogMocker.mockDb();\n        OlapTable olapTable = (OlapTable) db.getTable(CatalogMocker.TEST_TBL2_ID);\n\n        expectedEx.expect(DdlException.class);\n        expectedEx.expectMessage(\"errCode = 2, detailMessage = Table test_db.test_tbl2 is not a dynamic partition table. \" +\n                \"Use command `HELP ALTER TABLE` to see how to change a normal table to a dynamic partition table.\");\n        schemaChangeHandler.process(alterClauses, \"default_cluster\", db, olapTable);\n    }\n","realPath":"fe/fe-core/src/test/java/org/apache/doris/alter/SchemaChangeJobV2Test.java","repoName":"incubatordoris","snippetEndLine":0,"snippetStartLine":0,"startLine":362,"status":"M"}],"commitId":"df54b34f9843adf80d5fa753383797690e9458dd","commitMessage":"@@@[Catalog] Enforce null check at Catalog.getDb and Database.getTable (#6416)\n\nfix #5378 #5391 #5688 #5973 #6155 and all replay NPE. All replay method can now throw MetaNotFoundException and caught to log a warning for potential inconsistent metadata cases.\n\ntry to establish a clear notice for future developer to check null.","date":"2021-09-03 13:34:49","modifiedFileCount":"190","status":"M","submitter":"ccoffline"}]
