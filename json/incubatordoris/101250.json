[{"authorTime":"2020-09-04 09:30:01","codes":[{"authorDate":"2020-07-21 12:42:42","commitOrder":2,"curCode":"    private String getMysqlQueryStr() {\n        StringBuilder sql = new StringBuilder(\"SELECT \");\n        sql.append(Joiner.on(\", \").join(columns));\n        sql.append(\" FROM \").append(tblName);\n\n        if (!filters.isEmpty()) {\n            sql.append(\" WHERE (\");\n            sql.append(Joiner.on(\") AND (\").join(filters));\n            sql.append(\")\");\n        }\n        return sql.toString();\n    }\n","date":"2020-07-21 12:42:42","endLine":96,"groupId":"7100","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"getMysqlQueryStr","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-incubatordoris-10-0.7/blobInfo/CC_OUT/blobs/c7/4bd4c82b3780233ff151165ba46e82ed1c506a.src","preCode":"    private String getMysqlQueryStr() {\n        StringBuilder sql = new StringBuilder(\"SELECT \");\n        sql.append(Joiner.on(\", \").join(columns));\n        sql.append(\" FROM \").append(tblName);\n\n        if (!filters.isEmpty()) {\n            sql.append(\" WHERE (\");\n            sql.append(Joiner.on(\") AND (\").join(filters));\n            sql.append(\")\");\n        }\n        return sql.toString();\n    }\n","realPath":"fe/fe-core/src/main/java/org/apache/doris/planner/MysqlScanNode.java","repoName":"incubatordoris","snippetEndLine":0,"snippetStartLine":0,"startLine":85,"status":"NB"},{"authorDate":"2020-09-04 09:30:01","commitOrder":2,"curCode":"    private String getOdbcQueryStr() {\n        StringBuilder sql = new StringBuilder(\"SELECT \");\n        sql.append(Joiner.on(\", \").join(columns));\n        sql.append(\" FROM \").append(tblName);\n\n        if (!filters.isEmpty()) {\n            sql.append(\" WHERE (\");\n            sql.append(Joiner.on(\") AND (\").join(filters));\n            sql.append(\")\");\n        }\n        return sql.toString();\n    }\n","date":"2020-09-04 09:30:01","endLine":114,"groupId":"7100","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"getOdbcQueryStr","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-incubatordoris-10-0.7/blobInfo/CC_OUT/blobs/63/37465947500d7be26b966e20412d792bb32af9.src","preCode":"    private String getOdbcQueryStr() {\n        StringBuilder sql = new StringBuilder(\"SELECT \");\n        sql.append(Joiner.on(\", \").join(columns));\n        sql.append(\" FROM \").append(tblName);\n\n        if (!filters.isEmpty()) {\n            sql.append(\" WHERE (\");\n            sql.append(Joiner.on(\") AND (\").join(filters));\n            sql.append(\")\");\n        }\n        return sql.toString();\n    }\n","realPath":"fe/fe-core/src/main/java/org/apache/doris/planner/OdbcScanNode.java","repoName":"incubatordoris","snippetEndLine":0,"snippetStartLine":0,"startLine":103,"status":"B"}],"commitId":"a64c3a7acd29539ba0b8c5eba9e14fedbbc9583d","commitMessage":"@@@[ODBC SCAN NODE] 3/4 Add ODBC_TABLE and ODBC_SCAN NODE in FE. (#4430)\n\nwe can create odbc_table use SQL like\n\n```\nCREATE EXTERNAL TABLE `baseall_oracle` (\n  `k1` decimal(9.  3) NOT NULL COMMENT \"\". \n  `k2` char(10) NOT NULL COMMENT \"\". \n  `k3` datetime NOT NULL COMMENT \"\". \n  `k5` varchar(20) NOT NULL COMMENT \"\". \n  `k6` double NOT NULL COMMENT \"\"\n) ENGINE=ODBC\nPROPERTIES (\n\"host\" = \"192.168.0.1\". \n\"port\" = \"8086\". \n\"user\" = \"happenlee\". \n\"password\" = \"doris\". \n\"database\" = \"doris\". \n\"table\" = \"baseall\". \n\"driver\" = \"Oracle 19 ODBC driver\". \n\"type\" = \"oracle\"\n);\n```\n\nNow we only support Oracle and MySQL Database and this feature default turned off by conf enable_odbc_table.","date":"2020-09-04 09:30:01","modifiedFileCount":"12","status":"M","submitter":"HappenLee"},{"authorTime":"2020-10-11 21:11:04","codes":[{"authorDate":"2020-10-11 21:11:04","commitOrder":3,"curCode":"    private String getMysqlQueryStr() {\n        StringBuilder sql = new StringBuilder(\"SELECT \");\n        sql.append(Joiner.on(\", \").join(columns));\n        sql.append(\" FROM \").append(tblName);\n\n        if (!filters.isEmpty()) {\n            sql.append(\" WHERE (\");\n            sql.append(Joiner.on(\") AND (\").join(filters));\n            sql.append(\")\");\n        }\n\n        if (limit != -1) {\n            sql.append(\" LIMIT \" + limit);\n        }\n\n        return sql.toString();\n    }\n","date":"2020-10-11 21:11:04","endLine":101,"groupId":"7100","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"getMysqlQueryStr","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-incubatordoris-10-0.7/blobInfo/CC_OUT/blobs/e5/4875e035a15a78bb7e5b1a988a1f1e1f301bbc.src","preCode":"    private String getMysqlQueryStr() {\n        StringBuilder sql = new StringBuilder(\"SELECT \");\n        sql.append(Joiner.on(\", \").join(columns));\n        sql.append(\" FROM \").append(tblName);\n\n        if (!filters.isEmpty()) {\n            sql.append(\" WHERE (\");\n            sql.append(Joiner.on(\") AND (\").join(filters));\n            sql.append(\")\");\n        }\n        return sql.toString();\n    }\n","realPath":"fe/fe-core/src/main/java/org/apache/doris/planner/MysqlScanNode.java","repoName":"incubatordoris","snippetEndLine":0,"snippetStartLine":0,"startLine":85,"status":"M"},{"authorDate":"2020-10-11 21:11:04","commitOrder":3,"curCode":"    private String getOdbcQueryStr() {\n        StringBuilder sql = new StringBuilder(\"SELECT \");\n\n        \r\n        if (limit != -1 && odbcType == TOdbcTableType.ORACLE) {\n            filters.add(\"ROWNUM <= \" + limit);\n        }\n\n        \r\n        if (limit != -1 && odbcType == TOdbcTableType.SQLSERVER) {\n            sql.append(\"TOP \" + limit + \" \");\n        }\n\n        sql.append(Joiner.on(\", \").join(columns));\n        sql.append(\" FROM \").append(tblName);\n\n        if (!filters.isEmpty()) {\n            sql.append(\" WHERE (\");\n            sql.append(Joiner.on(\") AND (\").join(filters));\n            sql.append(\")\");\n        }\n\n        \r\n        if (limit != -1 && (odbcType == TOdbcTableType.MYSQL || odbcType == TOdbcTableType.POSTGRESQL || odbcType == TOdbcTableType.MONGODB) ) {\n            sql.append(\" LIMIT \" + limit);\n        }\n        \n        return sql.toString();\n    }\n","date":"2020-10-11 21:11:04","endLine":145,"groupId":"7100","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"getOdbcQueryStr","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-incubatordoris-10-0.7/blobInfo/CC_OUT/blobs/6a/37415b7e67f7b6482f2cb419fe6d947636974b.src","preCode":"    private String getOdbcQueryStr() {\n        StringBuilder sql = new StringBuilder(\"SELECT \");\n        sql.append(Joiner.on(\", \").join(columns));\n        sql.append(\" FROM \").append(tblName);\n\n        if (!filters.isEmpty()) {\n            sql.append(\" WHERE (\");\n            sql.append(Joiner.on(\") AND (\").join(filters));\n            sql.append(\")\");\n        }\n        return sql.toString();\n    }\n","realPath":"fe/fe-core/src/main/java/org/apache/doris/planner/OdbcScanNode.java","repoName":"incubatordoris","snippetEndLine":0,"snippetStartLine":0,"startLine":117,"status":"M"}],"commitId":"d73d205de76a3f5fb856d650329dca3f2a7ce77e","commitMessage":"@@@[ODBC/MySQL] Support Limit Clause Push Down For ODBC Table And MySQL Table(#4706) (#4707)\n\n1. Support limit clause push down both odbc table and mysql table.\n2. Code refactor of ODBC Scan Node.  change `build_connect_string` and `query_string` from BE to FE to make it easily to modify","date":"2020-10-11 21:11:04","modifiedFileCount":"4","status":"M","submitter":"HappenLee"},{"authorTime":"2020-10-21 10:12:12","codes":[{"authorDate":"2020-10-11 21:11:04","commitOrder":4,"curCode":"    private String getMysqlQueryStr() {\n        StringBuilder sql = new StringBuilder(\"SELECT \");\n        sql.append(Joiner.on(\", \").join(columns));\n        sql.append(\" FROM \").append(tblName);\n\n        if (!filters.isEmpty()) {\n            sql.append(\" WHERE (\");\n            sql.append(Joiner.on(\") AND (\").join(filters));\n            sql.append(\")\");\n        }\n\n        if (limit != -1) {\n            sql.append(\" LIMIT \" + limit);\n        }\n\n        return sql.toString();\n    }\n","date":"2020-10-11 21:11:04","endLine":101,"groupId":"101250","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"getMysqlQueryStr","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-incubatordoris-10-0.7/blobInfo/CC_OUT/blobs/e5/4875e035a15a78bb7e5b1a988a1f1e1f301bbc.src","preCode":"    private String getMysqlQueryStr() {\n        StringBuilder sql = new StringBuilder(\"SELECT \");\n        sql.append(Joiner.on(\", \").join(columns));\n        sql.append(\" FROM \").append(tblName);\n\n        if (!filters.isEmpty()) {\n            sql.append(\" WHERE (\");\n            sql.append(Joiner.on(\") AND (\").join(filters));\n            sql.append(\")\");\n        }\n\n        if (limit != -1) {\n            sql.append(\" LIMIT \" + limit);\n        }\n\n        return sql.toString();\n    }\n","realPath":"fe/fe-core/src/main/java/org/apache/doris/planner/MysqlScanNode.java","repoName":"incubatordoris","snippetEndLine":0,"snippetStartLine":0,"startLine":85,"status":"N"},{"authorDate":"2020-10-21 10:12:12","commitOrder":4,"curCode":"    private String getOdbcQueryStr() {\n        StringBuilder sql = new StringBuilder(\"SELECT \");\n\n        \r\n        if (shouldPushDownLimit() && odbcType == TOdbcTableType.ORACLE) {\n            filters.add(\"ROWNUM <= \" + limit);\n        }\n\n        \r\n        if (shouldPushDownLimit() && odbcType == TOdbcTableType.SQLSERVER) {\n            sql.append(\"TOP \" + limit + \" \");\n        }\n\n        sql.append(Joiner.on(\", \").join(columns));\n        sql.append(\" FROM \").append(tblName);\n\n        if (!filters.isEmpty()) {\n            sql.append(\" WHERE (\");\n            sql.append(Joiner.on(\") AND (\").join(filters));\n            sql.append(\")\");\n        }\n\n        \r\n        if (shouldPushDownLimit() && (odbcType == TOdbcTableType.MYSQL || odbcType == TOdbcTableType.POSTGRESQL || odbcType == TOdbcTableType.MONGODB) ) {\n            sql.append(\" LIMIT \" + limit);\n        }\n        \n        return sql.toString();\n    }\n","date":"2020-10-21 10:12:12","endLine":151,"groupId":"101250","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"getOdbcQueryStr","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-incubatordoris-10-0.7/blobInfo/CC_OUT/blobs/0d/6ce807d0cd91f738807b2c794e3100e02ba911.src","preCode":"    private String getOdbcQueryStr() {\n        StringBuilder sql = new StringBuilder(\"SELECT \");\n\n        \r\n        if (limit != -1 && odbcType == TOdbcTableType.ORACLE) {\n            filters.add(\"ROWNUM <= \" + limit);\n        }\n\n        \r\n        if (limit != -1 && odbcType == TOdbcTableType.SQLSERVER) {\n            sql.append(\"TOP \" + limit + \" \");\n        }\n\n        sql.append(Joiner.on(\", \").join(columns));\n        sql.append(\" FROM \").append(tblName);\n\n        if (!filters.isEmpty()) {\n            sql.append(\" WHERE (\");\n            sql.append(Joiner.on(\") AND (\").join(filters));\n            sql.append(\")\");\n        }\n\n        \r\n        if (limit != -1 && (odbcType == TOdbcTableType.MYSQL || odbcType == TOdbcTableType.POSTGRESQL || odbcType == TOdbcTableType.MONGODB) ) {\n            sql.append(\" LIMIT \" + limit);\n        }\n        \n        return sql.toString();\n    }\n","realPath":"fe/fe-core/src/main/java/org/apache/doris/planner/OdbcScanNode.java","repoName":"incubatordoris","snippetEndLine":0,"snippetStartLine":0,"startLine":123,"status":"M"}],"commitId":"349cc9ef171c2f2196d7c93c46a48fe3f35692a7","commitMessage":"@@@[Bug] Do not push down limit operation when ODBC table do not push all conjunct as filter. (#4764)\n\n","date":"2020-10-21 10:12:12","modifiedFileCount":"2","status":"M","submitter":"HappenLee"}]
