[{"authorTime":"2021-03-09 15:11:59","codes":[{"authorDate":"2021-03-09 15:11:59","commitOrder":1,"curCode":"  public void finishDocument() throws IOException {\n    if (numBufferedDocs == this.numStoredFields.length) {\n      final int newLength = ArrayUtil.oversize(numBufferedDocs + 1, 4);\n      this.numStoredFields = ArrayUtil.growExact(this.numStoredFields, newLength);\n      endOffsets = ArrayUtil.growExact(endOffsets, newLength);\n    }\n    this.numStoredFields[numBufferedDocs] = numStoredFieldsInDoc;\n    numStoredFieldsInDoc = 0;\n    endOffsets[numBufferedDocs] = Math.toIntExact(bufferedDocs.size());\n    ++numBufferedDocs;\n    if (triggerFlush()) {\n      flush();\n    }\n  }\n","date":"2021-03-09 15:11:59","endLine":183,"groupId":"42583","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"finishDocument","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-lucene-10-0.7/blobInfo/CC_OUT/blobs/bc/4215998b245fd2e7e3ec4b7ab14d11dcf32aad.src","preCode":"  public void finishDocument() throws IOException {\n    if (numBufferedDocs == this.numStoredFields.length) {\n      final int newLength = ArrayUtil.oversize(numBufferedDocs + 1, 4);\n      this.numStoredFields = ArrayUtil.growExact(this.numStoredFields, newLength);\n      endOffsets = ArrayUtil.growExact(endOffsets, newLength);\n    }\n    this.numStoredFields[numBufferedDocs] = numStoredFieldsInDoc;\n    numStoredFieldsInDoc = 0;\n    endOffsets[numBufferedDocs] = Math.toIntExact(bufferedDocs.size());\n    ++numBufferedDocs;\n    if (triggerFlush()) {\n      flush();\n    }\n  }\n","realPath":"lucene/backward-codecs/src/test/org/apache/lucene/backward_codecs/lucene50/compressing/Lucene50CompressingStoredFieldsWriter.java","repoName":"lucene","snippetEndLine":0,"snippetStartLine":0,"startLine":170,"status":"B"},{"authorDate":"2021-03-09 15:11:59","commitOrder":1,"curCode":"  public void finishDocument() throws IOException {\n    if (numBufferedDocs == this.numStoredFields.length) {\n      final int newLength = ArrayUtil.oversize(numBufferedDocs + 1, 4);\n      this.numStoredFields = ArrayUtil.growExact(this.numStoredFields, newLength);\n      endOffsets = ArrayUtil.growExact(endOffsets, newLength);\n    }\n    this.numStoredFields[numBufferedDocs] = numStoredFieldsInDoc;\n    numStoredFieldsInDoc = 0;\n    endOffsets[numBufferedDocs] = Math.toIntExact(bufferedDocs.size());\n    ++numBufferedDocs;\n    if (triggerFlush()) {\n      flush();\n    }\n  }\n","date":"2021-03-09 15:11:59","endLine":195,"groupId":"42583","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"finishDocument","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-lucene-10-0.7/blobInfo/CC_OUT/blobs/81/5bbc0eaa8f2f1bb6c62ae5f998bcd539f5b2f1.src","preCode":"  public void finishDocument() throws IOException {\n    if (numBufferedDocs == this.numStoredFields.length) {\n      final int newLength = ArrayUtil.oversize(numBufferedDocs + 1, 4);\n      this.numStoredFields = ArrayUtil.growExact(this.numStoredFields, newLength);\n      endOffsets = ArrayUtil.growExact(endOffsets, newLength);\n    }\n    this.numStoredFields[numBufferedDocs] = numStoredFieldsInDoc;\n    numStoredFieldsInDoc = 0;\n    endOffsets[numBufferedDocs] = Math.toIntExact(bufferedDocs.size());\n    ++numBufferedDocs;\n    if (triggerFlush()) {\n      flush();\n    }\n  }\n","realPath":"lucene/core/src/java/org/apache/lucene/codecs/lucene90/compressing/Lucene90CompressingStoredFieldsWriter.java","repoName":"lucene","snippetEndLine":0,"snippetStartLine":0,"startLine":182,"status":"B"}],"commitId":"144ef2a0c054b54ee533f5618f36651931825f7d","commitMessage":"@@@LUCENE-9705: Create Lucene90StoredFieldsFormat (#2444)\n\n","date":"2021-03-09 15:11:59","modifiedFileCount":"16","status":"B","submitter":"Ignacio Vera"},{"authorTime":"2021-05-13 09:00:18","codes":[{"authorDate":"2021-03-09 15:11:59","commitOrder":2,"curCode":"  public void finishDocument() throws IOException {\n    if (numBufferedDocs == this.numStoredFields.length) {\n      final int newLength = ArrayUtil.oversize(numBufferedDocs + 1, 4);\n      this.numStoredFields = ArrayUtil.growExact(this.numStoredFields, newLength);\n      endOffsets = ArrayUtil.growExact(endOffsets, newLength);\n    }\n    this.numStoredFields[numBufferedDocs] = numStoredFieldsInDoc;\n    numStoredFieldsInDoc = 0;\n    endOffsets[numBufferedDocs] = Math.toIntExact(bufferedDocs.size());\n    ++numBufferedDocs;\n    if (triggerFlush()) {\n      flush();\n    }\n  }\n","date":"2021-03-09 15:11:59","endLine":183,"groupId":"42583","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"finishDocument","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-lucene-10-0.7/blobInfo/CC_OUT/blobs/bc/4215998b245fd2e7e3ec4b7ab14d11dcf32aad.src","preCode":"  public void finishDocument() throws IOException {\n    if (numBufferedDocs == this.numStoredFields.length) {\n      final int newLength = ArrayUtil.oversize(numBufferedDocs + 1, 4);\n      this.numStoredFields = ArrayUtil.growExact(this.numStoredFields, newLength);\n      endOffsets = ArrayUtil.growExact(endOffsets, newLength);\n    }\n    this.numStoredFields[numBufferedDocs] = numStoredFieldsInDoc;\n    numStoredFieldsInDoc = 0;\n    endOffsets[numBufferedDocs] = Math.toIntExact(bufferedDocs.size());\n    ++numBufferedDocs;\n    if (triggerFlush()) {\n      flush();\n    }\n  }\n","realPath":"lucene/backward-codecs/src/test/org/apache/lucene/backward_codecs/lucene50/compressing/Lucene50CompressingStoredFieldsWriter.java","repoName":"lucene","snippetEndLine":0,"snippetStartLine":0,"startLine":170,"status":"N"},{"authorDate":"2021-05-13 09:00:18","commitOrder":2,"curCode":"  public void finishDocument() throws IOException {\n    if (numBufferedDocs == this.numStoredFields.length) {\n      final int newLength = ArrayUtil.oversize(numBufferedDocs + 1, 4);\n      this.numStoredFields = ArrayUtil.growExact(this.numStoredFields, newLength);\n      endOffsets = ArrayUtil.growExact(endOffsets, newLength);\n    }\n    this.numStoredFields[numBufferedDocs] = numStoredFieldsInDoc;\n    numStoredFieldsInDoc = 0;\n    endOffsets[numBufferedDocs] = Math.toIntExact(bufferedDocs.size());\n    ++numBufferedDocs;\n    if (triggerFlush()) {\n      flush(false);\n    }\n  }\n","date":"2021-05-13 09:00:18","endLine":194,"groupId":"42583","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"finishDocument","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-lucene-10-0.7/blobInfo/CC_OUT/blobs/04/b7c551c5b1ab39fc6a158b472500caceeedec8.src","preCode":"  public void finishDocument() throws IOException {\n    if (numBufferedDocs == this.numStoredFields.length) {\n      final int newLength = ArrayUtil.oversize(numBufferedDocs + 1, 4);\n      this.numStoredFields = ArrayUtil.growExact(this.numStoredFields, newLength);\n      endOffsets = ArrayUtil.growExact(endOffsets, newLength);\n    }\n    this.numStoredFields[numBufferedDocs] = numStoredFieldsInDoc;\n    numStoredFieldsInDoc = 0;\n    endOffsets[numBufferedDocs] = Math.toIntExact(bufferedDocs.size());\n    ++numBufferedDocs;\n    if (triggerFlush()) {\n      flush();\n    }\n  }\n","realPath":"lucene/core/src/java/org/apache/lucene/codecs/lucene90/compressing/Lucene90CompressingStoredFieldsWriter.java","repoName":"lucene","snippetEndLine":0,"snippetStartLine":0,"startLine":181,"status":"M"}],"commitId":"9a17d67658bddd24745df31b6bc13157d0f613b5","commitMessage":"@@@LUCENE-9935: Enable bulk merge for stored fields with index sort (#134)\n\nThis commit enables bulk-merges (i.e..  raw chunk copying) for stored \nfields when index sort is enabled","date":"2021-05-13 09:00:18","modifiedFileCount":"3","status":"M","submitter":"Nhat Nguyen"},{"authorTime":"2021-05-13 09:00:18","codes":[{"authorDate":"2021-05-20 20:49:43","commitOrder":3,"curCode":"  public void finishDocument() throws IOException {\n    if (numBufferedDocs == this.numStoredFields.length) {\n      final int newLength = ArrayUtil.oversize(numBufferedDocs + 1, 4);\n      this.numStoredFields = ArrayUtil.growExact(this.numStoredFields, newLength);\n      endOffsets = ArrayUtil.growExact(endOffsets, newLength);\n    }\n    this.numStoredFields[numBufferedDocs] = numStoredFieldsInDoc;\n    numStoredFieldsInDoc = 0;\n    endOffsets[numBufferedDocs] = Math.toIntExact(bufferedDocs.size());\n    ++numBufferedDocs;\n    if (triggerFlush()) {\n      flush(false);\n    }\n  }\n","date":"2021-05-20 20:49:43","endLine":177,"groupId":"104565","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"finishDocument","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-lucene-10-0.7/blobInfo/CC_OUT/blobs/f6/71a0449dc079050f43d6f19618b39c86da964a.src","preCode":"  public void finishDocument() throws IOException {\n    if (numBufferedDocs == this.numStoredFields.length) {\n      final int newLength = ArrayUtil.oversize(numBufferedDocs + 1, 4);\n      this.numStoredFields = ArrayUtil.growExact(this.numStoredFields, newLength);\n      endOffsets = ArrayUtil.growExact(endOffsets, newLength);\n    }\n    this.numStoredFields[numBufferedDocs] = numStoredFieldsInDoc;\n    numStoredFieldsInDoc = 0;\n    endOffsets[numBufferedDocs] = Math.toIntExact(bufferedDocs.size());\n    ++numBufferedDocs;\n    if (triggerFlush()) {\n      flush();\n    }\n  }\n","realPath":"lucene/backward-codecs/src/test/org/apache/lucene/backward_codecs/lucene50/compressing/Lucene50CompressingStoredFieldsWriter.java","repoName":"lucene","snippetEndLine":0,"snippetStartLine":0,"startLine":164,"status":"M"},{"authorDate":"2021-05-13 09:00:18","commitOrder":3,"curCode":"  public void finishDocument() throws IOException {\n    if (numBufferedDocs == this.numStoredFields.length) {\n      final int newLength = ArrayUtil.oversize(numBufferedDocs + 1, 4);\n      this.numStoredFields = ArrayUtil.growExact(this.numStoredFields, newLength);\n      endOffsets = ArrayUtil.growExact(endOffsets, newLength);\n    }\n    this.numStoredFields[numBufferedDocs] = numStoredFieldsInDoc;\n    numStoredFieldsInDoc = 0;\n    endOffsets[numBufferedDocs] = Math.toIntExact(bufferedDocs.size());\n    ++numBufferedDocs;\n    if (triggerFlush()) {\n      flush(false);\n    }\n  }\n","date":"2021-05-13 09:00:18","endLine":194,"groupId":"104565","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"finishDocument","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-lucene-10-0.7/blobInfo/CC_OUT/blobs/04/b7c551c5b1ab39fc6a158b472500caceeedec8.src","preCode":"  public void finishDocument() throws IOException {\n    if (numBufferedDocs == this.numStoredFields.length) {\n      final int newLength = ArrayUtil.oversize(numBufferedDocs + 1, 4);\n      this.numStoredFields = ArrayUtil.growExact(this.numStoredFields, newLength);\n      endOffsets = ArrayUtil.growExact(endOffsets, newLength);\n    }\n    this.numStoredFields[numBufferedDocs] = numStoredFieldsInDoc;\n    numStoredFieldsInDoc = 0;\n    endOffsets[numBufferedDocs] = Math.toIntExact(bufferedDocs.size());\n    ++numBufferedDocs;\n    if (triggerFlush()) {\n      flush(false);\n    }\n  }\n","realPath":"lucene/core/src/java/org/apache/lucene/codecs/lucene90/compressing/Lucene90CompressingStoredFieldsWriter.java","repoName":"lucene","snippetEndLine":0,"snippetStartLine":0,"startLine":181,"status":"N"}],"commitId":"a12260eb950c760b96b6692f5c6ec66eaff36622","commitMessage":"@@@LUCENE-9827: Update backward codec in Lucene 9.0 (#147)\n\nWe need to update the reading logic of the backward codec in Lucene 9 \nfor LUCENE-9827 and LUCENE-9935 as we have backported them to Lucene 8.\n\nRelates apache/lucene-solr#2495\nRelates apache/lucene-solr#2494","date":"2021-05-20 20:49:43","modifiedFileCount":"8","status":"M","submitter":"Nhat Nguyen"}]
