[{"authorTime":"2020-01-16 03:19:43","codes":[{"authorDate":"2020-01-16 03:19:43","commitOrder":1,"curCode":"  protected Polygon[] nextShape() {\n    int n = random().nextInt(4) + 1;\n    Polygon[] polygons = new Polygon[n];\n    for (int i =0; i < n; i++) {\n      int  repetitions =0;\n      while (true) {\n        \r\n        Polygon p = (Polygon) getShapeType().nextShape();\n        try {\n          Tessellator.tessellate(p);\n          \r\n          \r\n          if (isDisjoint(polygons, p)) {\n            polygons[i] = p;\n            break;\n          }\n          repetitions++;\n          if (repetitions > 50) {\n            \r\n            return nextShape();\n          }\n        } catch (IllegalArgumentException e) {\n          continue;\n        }\n      }\n    }\n    return polygons;\n  }\n","date":"2020-01-18 04:34:40","endLine":63,"groupId":"54152","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"nextShape","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-lucene-10-0.7/blobInfo/CC_OUT/blobs/b1/b180d871e8278f1c4899fe1706e5481de3b8e1.src","preCode":"  protected Polygon[] nextShape() {\n    int n = random().nextInt(4) + 1;\n    Polygon[] polygons = new Polygon[n];\n    for (int i =0; i < n; i++) {\n      int  repetitions =0;\n      while (true) {\n        \r\n        Polygon p = (Polygon) getShapeType().nextShape();\n        try {\n          Tessellator.tessellate(p);\n          \r\n          \r\n          if (isDisjoint(polygons, p)) {\n            polygons[i] = p;\n            break;\n          }\n          repetitions++;\n          if (repetitions > 50) {\n            \r\n            return nextShape();\n          }\n        } catch (IllegalArgumentException e) {\n          continue;\n        }\n      }\n    }\n    return polygons;\n  }\n","realPath":"lucene/core/src/test/org/apache/lucene/document/TestLatLonMultiPolygonShapeQueries.java","repoName":"lucene","snippetEndLine":0,"snippetStartLine":0,"startLine":36,"status":"B"},{"authorDate":"2020-01-16 03:19:43","commitOrder":1,"curCode":"  protected XYPolygon[] nextShape() {\n    int n = random().nextInt(4) + 1;\n    XYPolygon[] polygons = new XYPolygon[n];\n    for (int i =0; i < n; i++) {\n      int  repetitions =0;\n      while (true) {\n        \r\n        XYPolygon p = (XYPolygon) getShapeType().nextShape();\n        try {\n          Tessellator.tessellate(p);\n          \r\n          \r\n          if (isDisjoint(polygons, p, i)) {\n            polygons[i] = p;\n            break;\n          }\n          repetitions++;\n          if (repetitions > 50) {\n            \r\n            return nextShape();\n          }\n        } catch (IllegalArgumentException e) {\n          continue;\n        }\n      }\n    }\n    return polygons;\n  }\n","date":"2020-01-18 04:34:40","endLine":64,"groupId":"26676","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"nextShape","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-lucene-10-0.7/blobInfo/CC_OUT/blobs/29/a63343a12a65093952c6a6f3098fb697b0f90f.src","preCode":"  protected XYPolygon[] nextShape() {\n    int n = random().nextInt(4) + 1;\n    XYPolygon[] polygons = new XYPolygon[n];\n    for (int i =0; i < n; i++) {\n      int  repetitions =0;\n      while (true) {\n        \r\n        XYPolygon p = (XYPolygon) getShapeType().nextShape();\n        try {\n          Tessellator.tessellate(p);\n          \r\n          \r\n          if (isDisjoint(polygons, p, i)) {\n            polygons[i] = p;\n            break;\n          }\n          repetitions++;\n          if (repetitions > 50) {\n            \r\n            return nextShape();\n          }\n        } catch (IllegalArgumentException e) {\n          continue;\n        }\n      }\n    }\n    return polygons;\n  }\n","realPath":"lucene/core/src/test/org/apache/lucene/document/TestXYMultiPolygonShapeQueries.java","repoName":"lucene","snippetEndLine":0,"snippetStartLine":0,"startLine":37,"status":"B"}],"commitId":"aad849bf87ab69c1bd0eb34518181e1f3c1c42f2","commitMessage":"@@@LUCENE-8621: Refactor LatLonShape.  XYShape.  and all query and utility classes from sandbox to core\n","date":"2020-01-18 04:34:40","modifiedFileCount":"0","status":"B","submitter":"Nicholas Knize"},{"authorTime":"2020-01-30 03:30:31","codes":[{"authorDate":"2020-01-16 03:19:43","commitOrder":2,"curCode":"  protected Polygon[] nextShape() {\n    int n = random().nextInt(4) + 1;\n    Polygon[] polygons = new Polygon[n];\n    for (int i =0; i < n; i++) {\n      int  repetitions =0;\n      while (true) {\n        \r\n        Polygon p = (Polygon) getShapeType().nextShape();\n        try {\n          Tessellator.tessellate(p);\n          \r\n          \r\n          if (isDisjoint(polygons, p)) {\n            polygons[i] = p;\n            break;\n          }\n          repetitions++;\n          if (repetitions > 50) {\n            \r\n            return nextShape();\n          }\n        } catch (IllegalArgumentException e) {\n          continue;\n        }\n      }\n    }\n    return polygons;\n  }\n","date":"2020-01-18 04:34:40","endLine":63,"groupId":"54152","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"nextShape","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-lucene-10-0.7/blobInfo/CC_OUT/blobs/b1/b180d871e8278f1c4899fe1706e5481de3b8e1.src","preCode":"  protected Polygon[] nextShape() {\n    int n = random().nextInt(4) + 1;\n    Polygon[] polygons = new Polygon[n];\n    for (int i =0; i < n; i++) {\n      int  repetitions =0;\n      while (true) {\n        \r\n        Polygon p = (Polygon) getShapeType().nextShape();\n        try {\n          Tessellator.tessellate(p);\n          \r\n          \r\n          if (isDisjoint(polygons, p)) {\n            polygons[i] = p;\n            break;\n          }\n          repetitions++;\n          if (repetitions > 50) {\n            \r\n            return nextShape();\n          }\n        } catch (IllegalArgumentException e) {\n          continue;\n        }\n      }\n    }\n    return polygons;\n  }\n","realPath":"lucene/core/src/test/org/apache/lucene/document/TestLatLonMultiPolygonShapeQueries.java","repoName":"lucene","snippetEndLine":0,"snippetStartLine":0,"startLine":36,"status":"N"},{"authorDate":"2020-01-30 03:30:31","commitOrder":2,"curCode":"  protected XYPolygon[] nextShape() {\n    int n = random().nextInt(4) + 1;\n    XYPolygon[] polygons = new XYPolygon[n];\n    for (int i =0; i < n; i++) {\n      int  repetitions =0;\n      while (true) {\n        \r\n        XYPolygon p = (XYPolygon) getShapeType().nextShape();\n        try {\n          Tessellator.tessellate(p);\n          \r\n          \r\n          if (isDisjoint(polygons, p, i)) {\n            polygons[i] = p;\n            break;\n          }\n          repetitions++;\n          if (repetitions > 2) {\n            \r\n            return nextShape();\n          }\n        } catch (IllegalArgumentException e) {\n          continue;\n        }\n      }\n    }\n    return polygons;\n  }\n","date":"2020-01-30 03:31:32","endLine":66,"groupId":"26676","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"nextShape","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-lucene-10-0.7/blobInfo/CC_OUT/blobs/62/ea204e7de7198059a35ed105a93ce347341dfa.src","preCode":"  protected XYPolygon[] nextShape() {\n    int n = random().nextInt(4) + 1;\n    XYPolygon[] polygons = new XYPolygon[n];\n    for (int i =0; i < n; i++) {\n      int  repetitions =0;\n      while (true) {\n        \r\n        XYPolygon p = (XYPolygon) getShapeType().nextShape();\n        try {\n          Tessellator.tessellate(p);\n          \r\n          \r\n          if (isDisjoint(polygons, p, i)) {\n            polygons[i] = p;\n            break;\n          }\n          repetitions++;\n          if (repetitions > 50) {\n            \r\n            return nextShape();\n          }\n        } catch (IllegalArgumentException e) {\n          continue;\n        }\n      }\n    }\n    return polygons;\n  }\n","realPath":"lucene/core/src/test/org/apache/lucene/document/TestXYMultiPolygonShapeQueries.java","repoName":"lucene","snippetEndLine":0,"snippetStartLine":0,"startLine":39,"status":"M"}],"commitId":"29469b454f199bdaf8615280bdf7a146ef8f7ec6","commitMessage":"@@@LUCENE-9192: speed up more slow tests\n","date":"2020-01-30 03:31:32","modifiedFileCount":"26","status":"M","submitter":"Robert Muir"},{"authorTime":"2020-12-16 19:08:23","codes":[{"authorDate":"2020-12-16 19:08:23","commitOrder":3,"curCode":"  protected Polygon[] nextShape() {\n    int n = random().nextInt(4) + 1;\n    Polygon[] polygons = new Polygon[n];\n    for (int i =0; i < n; i++) {\n      polygons[i] = (Polygon) getShapeType().nextShape();\n    }\n    return polygons;\n  }\n","date":"2020-12-16 19:08:23","endLine":42,"groupId":"2260","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"nextShape","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-lucene-10-0.7/blobInfo/CC_OUT/blobs/55/dc57c5f1f7d666615db5a3255de42304d6a18b.src","preCode":"  protected Polygon[] nextShape() {\n    int n = random().nextInt(4) + 1;\n    Polygon[] polygons = new Polygon[n];\n    for (int i =0; i < n; i++) {\n      int  repetitions =0;\n      while (true) {\n        \r\n        Polygon p = (Polygon) getShapeType().nextShape();\n        try {\n          Tessellator.tessellate(p);\n          \r\n          \r\n          if (isDisjoint(polygons, p)) {\n            polygons[i] = p;\n            break;\n          }\n          repetitions++;\n          if (repetitions > 50) {\n            \r\n            return nextShape();\n          }\n        } catch (IllegalArgumentException e) {\n          continue;\n        }\n      }\n    }\n    return polygons;\n  }\n","realPath":"lucene/core/src/test/org/apache/lucene/document/TestLatLonMultiPolygonShapeQueries.java","repoName":"lucene","snippetEndLine":0,"snippetStartLine":0,"startLine":35,"status":"M"},{"authorDate":"2020-12-16 19:08:23","commitOrder":3,"curCode":"  protected XYPolygon[] nextShape() {\n    int n = random().nextInt(4) + 1;\n    XYPolygon[] polygons = new XYPolygon[n];\n    for (int i =0; i < n; i++) {\n      polygons[i] =  (XYPolygon) getShapeType().nextShape();\n    }\n    return polygons;\n  }\n","date":"2020-12-16 19:08:23","endLine":43,"groupId":"2260","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"nextShape","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-lucene-10-0.7/blobInfo/CC_OUT/blobs/7c/4afced015d9a709da40eea7b34f8a9914b28f6.src","preCode":"  protected XYPolygon[] nextShape() {\n    int n = random().nextInt(4) + 1;\n    XYPolygon[] polygons = new XYPolygon[n];\n    for (int i =0; i < n; i++) {\n      int  repetitions =0;\n      while (true) {\n        \r\n        XYPolygon p = (XYPolygon) getShapeType().nextShape();\n        try {\n          Tessellator.tessellate(p);\n          \r\n          \r\n          if (isDisjoint(polygons, p, i)) {\n            polygons[i] = p;\n            break;\n          }\n          repetitions++;\n          if (repetitions > 2) {\n            \r\n            return nextShape();\n          }\n        } catch (IllegalArgumentException e) {\n          continue;\n        }\n      }\n    }\n    return polygons;\n  }\n","realPath":"lucene/core/src/test/org/apache/lucene/document/TestXYMultiPolygonShapeQueries.java","repoName":"lucene","snippetEndLine":0,"snippetStartLine":0,"startLine":36,"status":"M"}],"commitId":"6f56a3cd739511f01e2abddf7569089cac0bc302","commitMessage":"@@@LUCENE-9637: Removes some unused code and replaces the Point implementation on ShapeField/ShapeQuery  random tests\n\n","date":"2020-12-16 19:08:23","modifiedFileCount":"19","status":"M","submitter":"Ignacio Vera"},{"authorTime":"2020-12-16 19:08:23","codes":[{"authorDate":"2020-12-17 16:59:11","commitOrder":4,"curCode":"  protected Polygon[] nextShape() {\n    int n = random().nextInt(4) + 1;\n    Polygon[] polygons = new Polygon[n];\n    for (int i =0; i < n; i++) {\n      int repetitions = 0;\n      while (true) {\n        Polygon p = (Polygon) getShapeType().nextShape();\n        \r\n        \r\n        if (isDisjoint(polygons, p)) {\n          polygons[i] = p;\n          break;\n        }\n        repetitions++;\n        if (repetitions > 50) {\n          \r\n          return nextShape();\n        }\n      }\n    }\n    return polygons;\n  }\n","date":"2020-12-17 16:59:11","endLine":56,"groupId":"107015","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"nextShape","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-lucene-10-0.7/blobInfo/CC_OUT/blobs/f6/40591cf3e035a8c4378a8712f6161e7995f10e.src","preCode":"  protected Polygon[] nextShape() {\n    int n = random().nextInt(4) + 1;\n    Polygon[] polygons = new Polygon[n];\n    for (int i =0; i < n; i++) {\n      polygons[i] = (Polygon) getShapeType().nextShape();\n    }\n    return polygons;\n  }\n","realPath":"lucene/core/src/test/org/apache/lucene/document/TestLatLonMultiPolygonShapeQueries.java","repoName":"lucene","snippetEndLine":0,"snippetStartLine":0,"startLine":35,"status":"M"},{"authorDate":"2020-12-16 19:08:23","commitOrder":4,"curCode":"  protected XYPolygon[] nextShape() {\n    int n = random().nextInt(4) + 1;\n    XYPolygon[] polygons = new XYPolygon[n];\n    for (int i =0; i < n; i++) {\n      polygons[i] =  (XYPolygon) getShapeType().nextShape();\n    }\n    return polygons;\n  }\n","date":"2020-12-16 19:08:23","endLine":43,"groupId":"107015","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"nextShape","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-lucene-10-0.7/blobInfo/CC_OUT/blobs/7c/4afced015d9a709da40eea7b34f8a9914b28f6.src","preCode":"  protected XYPolygon[] nextShape() {\n    int n = random().nextInt(4) + 1;\n    XYPolygon[] polygons = new XYPolygon[n];\n    for (int i =0; i < n; i++) {\n      polygons[i] =  (XYPolygon) getShapeType().nextShape();\n    }\n    return polygons;\n  }\n","realPath":"lucene/core/src/test/org/apache/lucene/document/TestXYMultiPolygonShapeQueries.java","repoName":"lucene","snippetEndLine":0,"snippetStartLine":0,"startLine":36,"status":"N"}],"commitId":"2eeec2f6be2e72076f7161d66582ddcc65638301","commitMessage":"@@@LUCENE-9637: Index disjoint multipolygons in TestLatLonMultiPolygonShapeQueries\n","date":"2020-12-17 16:59:11","modifiedFileCount":"1","status":"M","submitter":"iverase"}]
