[{"authorTime":"2013-02-16 05:19:11","codes":[{"authorDate":"2013-02-16 05:19:11","commitOrder":1,"curCode":"  public void testFloat() throws IOException {\n    Directory dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n    Document doc = new Document();\n    doc.add(newStringField(\"value\", \"30.1\", Field.Store.YES));\n    writer.addDocument(doc);\n    doc = new Document();\n    doc.add(newStringField(\"value\", \"-1.3\", Field.Store.YES));\n    writer.addDocument(doc);\n    doc = new Document();\n    doc.add(newStringField(\"value\", \"4.2\", Field.Store.YES));\n    writer.addDocument(doc);\n    IndexReader ir = writer.getReader();\n    writer.close();\n    \n    IndexSearcher searcher = new IndexSearcher(ir);\n    Sort sort = new Sort(new SortField(\"value\", SortField.Type.FLOAT));\n\n    TopDocs td = searcher.search(new MatchAllDocsQuery(), 10, sort);\n    assertEquals(3, td.totalHits);\n    \r\n    assertEquals(\"-1.3\", searcher.doc(td.scoreDocs[0].doc).get(\"value\"));\n    assertEquals(\"4.2\", searcher.doc(td.scoreDocs[1].doc).get(\"value\"));\n    assertEquals(\"30.1\", searcher.doc(td.scoreDocs[2].doc).get(\"value\"));\n\n    ir.close();\n    dir.close();\n  }\n","date":"2013-02-16 05:19:11","endLine":840,"groupId":"34949","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testFloat","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-lucene-10-0.7/blobInfo/CC_OUT/blobs/73/45aeee58739c6efe6af89f226c4610d88a7236.src","preCode":"  public void testFloat() throws IOException {\n    Directory dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n    Document doc = new Document();\n    doc.add(newStringField(\"value\", \"30.1\", Field.Store.YES));\n    writer.addDocument(doc);\n    doc = new Document();\n    doc.add(newStringField(\"value\", \"-1.3\", Field.Store.YES));\n    writer.addDocument(doc);\n    doc = new Document();\n    doc.add(newStringField(\"value\", \"4.2\", Field.Store.YES));\n    writer.addDocument(doc);\n    IndexReader ir = writer.getReader();\n    writer.close();\n    \n    IndexSearcher searcher = new IndexSearcher(ir);\n    Sort sort = new Sort(new SortField(\"value\", SortField.Type.FLOAT));\n\n    TopDocs td = searcher.search(new MatchAllDocsQuery(), 10, sort);\n    assertEquals(3, td.totalHits);\n    \r\n    assertEquals(\"-1.3\", searcher.doc(td.scoreDocs[0].doc).get(\"value\"));\n    assertEquals(\"4.2\", searcher.doc(td.scoreDocs[1].doc).get(\"value\"));\n    assertEquals(\"30.1\", searcher.doc(td.scoreDocs[2].doc).get(\"value\"));\n\n    ir.close();\n    dir.close();\n  }\n","realPath":"lucene/core/src/test/org/apache/lucene/search/TestSort.java","repoName":"lucene","snippetEndLine":0,"snippetStartLine":0,"startLine":813,"status":"B"},{"authorDate":"2013-02-16 05:19:11","commitOrder":1,"curCode":"  public void testFloatMissing() throws IOException {\n    Directory dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n    Document doc = new Document();\n    writer.addDocument(doc);\n    doc = new Document();\n    doc.add(newStringField(\"value\", \"-1.3\", Field.Store.YES));\n    writer.addDocument(doc);\n    doc = new Document();\n    doc.add(newStringField(\"value\", \"4.2\", Field.Store.YES));\n    writer.addDocument(doc);\n    IndexReader ir = writer.getReader();\n    writer.close();\n    \n    IndexSearcher searcher = new IndexSearcher(ir);\n    Sort sort = new Sort(new SortField(\"value\", SortField.Type.FLOAT));\n\n    TopDocs td = searcher.search(new MatchAllDocsQuery(), 10, sort);\n    assertEquals(3, td.totalHits);\n    \r\n    assertEquals(\"-1.3\", searcher.doc(td.scoreDocs[0].doc).get(\"value\"));\n    assertNull(searcher.doc(td.scoreDocs[1].doc).get(\"value\"));\n    assertEquals(\"4.2\", searcher.doc(td.scoreDocs[2].doc).get(\"value\"));\n\n    ir.close();\n    dir.close();\n  }\n","date":"2013-02-16 05:19:11","endLine":869,"groupId":"56990","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testFloatMissing","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-lucene-10-0.7/blobInfo/CC_OUT/blobs/73/45aeee58739c6efe6af89f226c4610d88a7236.src","preCode":"  public void testFloatMissing() throws IOException {\n    Directory dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n    Document doc = new Document();\n    writer.addDocument(doc);\n    doc = new Document();\n    doc.add(newStringField(\"value\", \"-1.3\", Field.Store.YES));\n    writer.addDocument(doc);\n    doc = new Document();\n    doc.add(newStringField(\"value\", \"4.2\", Field.Store.YES));\n    writer.addDocument(doc);\n    IndexReader ir = writer.getReader();\n    writer.close();\n    \n    IndexSearcher searcher = new IndexSearcher(ir);\n    Sort sort = new Sort(new SortField(\"value\", SortField.Type.FLOAT));\n\n    TopDocs td = searcher.search(new MatchAllDocsQuery(), 10, sort);\n    assertEquals(3, td.totalHits);\n    \r\n    assertEquals(\"-1.3\", searcher.doc(td.scoreDocs[0].doc).get(\"value\"));\n    assertNull(searcher.doc(td.scoreDocs[1].doc).get(\"value\"));\n    assertEquals(\"4.2\", searcher.doc(td.scoreDocs[2].doc).get(\"value\"));\n\n    ir.close();\n    dir.close();\n  }\n","realPath":"lucene/core/src/test/org/apache/lucene/search/TestSort.java","repoName":"lucene","snippetEndLine":0,"snippetStartLine":0,"startLine":843,"status":"B"}],"commitId":"1a12ff7b5ccac90ecaa01b25af44faa2a7253881","commitMessage":"@@@LUCENE-4779: replace old TestSort\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1446777 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2013-02-16 05:19:11","modifiedFileCount":"1","status":"B","submitter":"Robert Muir"},{"authorTime":"2013-04-11 06:13:13","codes":[{"authorDate":"2013-04-11 06:13:13","commitOrder":2,"curCode":"  public void testFloat() throws IOException {\n    Directory dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n    Document doc = new Document();\n    doc.add(newStringField(\"value\", \"30.1\", Field.Store.YES));\n    writer.addDocument(doc);\n    doc = new Document();\n    doc.add(newStringField(\"value\", \"-1.3\", Field.Store.YES));\n    writer.addDocument(doc);\n    doc = new Document();\n    doc.add(newStringField(\"value\", \"4.2\", Field.Store.YES));\n    writer.addDocument(doc);\n    IndexReader ir = writer.getReader();\n    writer.close();\n    \n    IndexSearcher searcher = newSearcher(ir);\n    Sort sort = new Sort(new SortField(\"value\", SortField.Type.FLOAT));\n\n    TopDocs td = searcher.search(new MatchAllDocsQuery(), 10, sort);\n    assertEquals(3, td.totalHits);\n    \r\n    assertEquals(\"-1.3\", searcher.doc(td.scoreDocs[0].doc).get(\"value\"));\n    assertEquals(\"4.2\", searcher.doc(td.scoreDocs[1].doc).get(\"value\"));\n    assertEquals(\"30.1\", searcher.doc(td.scoreDocs[2].doc).get(\"value\"));\n\n    ir.close();\n    dir.close();\n  }\n","date":"2013-04-11 06:13:13","endLine":841,"groupId":"62827","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testFloat","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-lucene-10-0.7/blobInfo/CC_OUT/blobs/ae/9c55e4d9fcaf7330862528346ab88def0bf291.src","preCode":"  public void testFloat() throws IOException {\n    Directory dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n    Document doc = new Document();\n    doc.add(newStringField(\"value\", \"30.1\", Field.Store.YES));\n    writer.addDocument(doc);\n    doc = new Document();\n    doc.add(newStringField(\"value\", \"-1.3\", Field.Store.YES));\n    writer.addDocument(doc);\n    doc = new Document();\n    doc.add(newStringField(\"value\", \"4.2\", Field.Store.YES));\n    writer.addDocument(doc);\n    IndexReader ir = writer.getReader();\n    writer.close();\n    \n    IndexSearcher searcher = new IndexSearcher(ir);\n    Sort sort = new Sort(new SortField(\"value\", SortField.Type.FLOAT));\n\n    TopDocs td = searcher.search(new MatchAllDocsQuery(), 10, sort);\n    assertEquals(3, td.totalHits);\n    \r\n    assertEquals(\"-1.3\", searcher.doc(td.scoreDocs[0].doc).get(\"value\"));\n    assertEquals(\"4.2\", searcher.doc(td.scoreDocs[1].doc).get(\"value\"));\n    assertEquals(\"30.1\", searcher.doc(td.scoreDocs[2].doc).get(\"value\"));\n\n    ir.close();\n    dir.close();\n  }\n","realPath":"lucene/core/src/test/org/apache/lucene/search/TestSort.java","repoName":"lucene","snippetEndLine":0,"snippetStartLine":0,"startLine":814,"status":"M"},{"authorDate":"2013-04-11 06:13:13","commitOrder":2,"curCode":"  public void testFloatMissing() throws IOException {\n    Directory dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n    Document doc = new Document();\n    writer.addDocument(doc);\n    doc = new Document();\n    doc.add(newStringField(\"value\", \"-1.3\", Field.Store.YES));\n    writer.addDocument(doc);\n    doc = new Document();\n    doc.add(newStringField(\"value\", \"4.2\", Field.Store.YES));\n    writer.addDocument(doc);\n    IndexReader ir = writer.getReader();\n    writer.close();\n    \n    IndexSearcher searcher = newSearcher(ir);\n    Sort sort = new Sort(new SortField(\"value\", SortField.Type.FLOAT));\n\n    TopDocs td = searcher.search(new MatchAllDocsQuery(), 10, sort);\n    assertEquals(3, td.totalHits);\n    \r\n    assertEquals(\"-1.3\", searcher.doc(td.scoreDocs[0].doc).get(\"value\"));\n    assertNull(searcher.doc(td.scoreDocs[1].doc).get(\"value\"));\n    assertEquals(\"4.2\", searcher.doc(td.scoreDocs[2].doc).get(\"value\"));\n\n    ir.close();\n    dir.close();\n  }\n","date":"2013-04-11 06:13:13","endLine":870,"groupId":"62827","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testFloatMissing","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-lucene-10-0.7/blobInfo/CC_OUT/blobs/ae/9c55e4d9fcaf7330862528346ab88def0bf291.src","preCode":"  public void testFloatMissing() throws IOException {\n    Directory dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n    Document doc = new Document();\n    writer.addDocument(doc);\n    doc = new Document();\n    doc.add(newStringField(\"value\", \"-1.3\", Field.Store.YES));\n    writer.addDocument(doc);\n    doc = new Document();\n    doc.add(newStringField(\"value\", \"4.2\", Field.Store.YES));\n    writer.addDocument(doc);\n    IndexReader ir = writer.getReader();\n    writer.close();\n    \n    IndexSearcher searcher = new IndexSearcher(ir);\n    Sort sort = new Sort(new SortField(\"value\", SortField.Type.FLOAT));\n\n    TopDocs td = searcher.search(new MatchAllDocsQuery(), 10, sort);\n    assertEquals(3, td.totalHits);\n    \r\n    assertEquals(\"-1.3\", searcher.doc(td.scoreDocs[0].doc).get(\"value\"));\n    assertNull(searcher.doc(td.scoreDocs[1].doc).get(\"value\"));\n    assertEquals(\"4.2\", searcher.doc(td.scoreDocs[2].doc).get(\"value\"));\n\n    ir.close();\n    dir.close();\n  }\n","realPath":"lucene/core/src/test/org/apache/lucene/search/TestSort.java","repoName":"lucene","snippetEndLine":0,"snippetStartLine":0,"startLine":844,"status":"M"}],"commitId":"24376b1bd7b05dd6760207e757e49178a814f63a","commitMessage":"@@@LUCENE-4903: Add AssertingScorer.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1466709 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2013-04-11 06:13:13","modifiedFileCount":"49","status":"M","submitter":"Adrien Grand"},{"authorTime":"2013-06-21 04:07:57","codes":[{"authorDate":"2013-06-21 04:07:57","commitOrder":3,"curCode":"  public void testFloat() throws IOException {\n    Directory dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n    Document doc = new Document();\n    doc.add(new FloatField(\"value\", 30.1f, Field.Store.YES));\n    writer.addDocument(doc);\n    doc = new Document();\n    doc.add(new FloatField(\"value\", -1.3f, Field.Store.YES));\n    writer.addDocument(doc);\n    doc = new Document();\n    doc.add(new FloatField(\"value\", 4.2f, Field.Store.YES));\n    writer.addDocument(doc);\n    IndexReader ir = writer.getReader();\n    writer.close();\n    \n    IndexSearcher searcher = newSearcher(ir);\n    Sort sort = new Sort(new SortField(\"value\", SortField.Type.FLOAT));\n\n    TopDocs td = searcher.search(new MatchAllDocsQuery(), 10, sort);\n    assertEquals(3, td.totalHits);\n    \r\n    assertEquals(\"-1.3\", searcher.doc(td.scoreDocs[0].doc).get(\"value\"));\n    assertEquals(\"4.2\", searcher.doc(td.scoreDocs[1].doc).get(\"value\"));\n    assertEquals(\"30.1\", searcher.doc(td.scoreDocs[2].doc).get(\"value\"));\n\n    ir.close();\n    dir.close();\n  }\n","date":"2013-06-21 04:07:57","endLine":605,"groupId":"4278","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testFloat","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-lucene-10-0.7/blobInfo/CC_OUT/blobs/7b/8ef10f48bf8a66375a1c67fd722d8327b177c0.src","preCode":"  public void testFloat() throws IOException {\n    Directory dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n    Document doc = new Document();\n    doc.add(newStringField(\"value\", \"30.1\", Field.Store.YES));\n    writer.addDocument(doc);\n    doc = new Document();\n    doc.add(newStringField(\"value\", \"-1.3\", Field.Store.YES));\n    writer.addDocument(doc);\n    doc = new Document();\n    doc.add(newStringField(\"value\", \"4.2\", Field.Store.YES));\n    writer.addDocument(doc);\n    IndexReader ir = writer.getReader();\n    writer.close();\n    \n    IndexSearcher searcher = newSearcher(ir);\n    Sort sort = new Sort(new SortField(\"value\", SortField.Type.FLOAT));\n\n    TopDocs td = searcher.search(new MatchAllDocsQuery(), 10, sort);\n    assertEquals(3, td.totalHits);\n    \r\n    assertEquals(\"-1.3\", searcher.doc(td.scoreDocs[0].doc).get(\"value\"));\n    assertEquals(\"4.2\", searcher.doc(td.scoreDocs[1].doc).get(\"value\"));\n    assertEquals(\"30.1\", searcher.doc(td.scoreDocs[2].doc).get(\"value\"));\n\n    ir.close();\n    dir.close();\n  }\n","realPath":"lucene/core/src/test/org/apache/lucene/search/TestSort.java","repoName":"lucene","snippetEndLine":0,"snippetStartLine":0,"startLine":578,"status":"M"},{"authorDate":"2013-06-21 04:07:57","commitOrder":3,"curCode":"  public void testFloatMissing() throws IOException {\n    Directory dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n    Document doc = new Document();\n    writer.addDocument(doc);\n    doc = new Document();\n    doc.add(new FloatField(\"value\", -1.3f, Field.Store.YES));\n    writer.addDocument(doc);\n    doc = new Document();\n    doc.add(new FloatField(\"value\", 4.2f, Field.Store.YES));\n    writer.addDocument(doc);\n    IndexReader ir = writer.getReader();\n    writer.close();\n    \n    IndexSearcher searcher = newSearcher(ir);\n    Sort sort = new Sort(new SortField(\"value\", SortField.Type.FLOAT));\n\n    TopDocs td = searcher.search(new MatchAllDocsQuery(), 10, sort);\n    assertEquals(3, td.totalHits);\n    \r\n    assertEquals(\"-1.3\", searcher.doc(td.scoreDocs[0].doc).get(\"value\"));\n    assertNull(searcher.doc(td.scoreDocs[1].doc).get(\"value\"));\n    assertEquals(\"4.2\", searcher.doc(td.scoreDocs[2].doc).get(\"value\"));\n\n    ir.close();\n    dir.close();\n  }\n","date":"2013-06-21 04:07:57","endLine":634,"groupId":"4278","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testFloatMissing","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-lucene-10-0.7/blobInfo/CC_OUT/blobs/7b/8ef10f48bf8a66375a1c67fd722d8327b177c0.src","preCode":"  public void testFloatMissing() throws IOException {\n    Directory dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n    Document doc = new Document();\n    writer.addDocument(doc);\n    doc = new Document();\n    doc.add(newStringField(\"value\", \"-1.3\", Field.Store.YES));\n    writer.addDocument(doc);\n    doc = new Document();\n    doc.add(newStringField(\"value\", \"4.2\", Field.Store.YES));\n    writer.addDocument(doc);\n    IndexReader ir = writer.getReader();\n    writer.close();\n    \n    IndexSearcher searcher = newSearcher(ir);\n    Sort sort = new Sort(new SortField(\"value\", SortField.Type.FLOAT));\n\n    TopDocs td = searcher.search(new MatchAllDocsQuery(), 10, sort);\n    assertEquals(3, td.totalHits);\n    \r\n    assertEquals(\"-1.3\", searcher.doc(td.scoreDocs[0].doc).get(\"value\"));\n    assertNull(searcher.doc(td.scoreDocs[1].doc).get(\"value\"));\n    assertEquals(\"4.2\", searcher.doc(td.scoreDocs[2].doc).get(\"value\"));\n\n    ir.close();\n    dir.close();\n  }\n","realPath":"lucene/core/src/test/org/apache/lucene/search/TestSort.java","repoName":"lucene","snippetEndLine":0,"snippetStartLine":0,"startLine":608,"status":"M"}],"commitId":"543d33f94197961b04bc6cafe05d1856018a3e82","commitMessage":"@@@LUCENE-5063: Compress integer and long field caches and remove FieldCache.get(Byte|Short)s.  default parsers and related class/methods (merged from r1494753 and r1495146).\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1495156 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2013-06-21 04:07:57","modifiedFileCount":"39","status":"M","submitter":"Adrien Grand"},{"authorTime":"2014-04-08 23:34:50","codes":[{"authorDate":"2014-04-08 23:34:50","commitOrder":4,"curCode":"  public void testFloat() throws IOException {\n    Directory dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n    Document doc = new Document();\n    doc.add(new FloatField(\"value\", 30.1f, Field.Store.YES));\n    writer.addDocument(doc);\n    doc = new Document();\n    doc.add(new FloatField(\"value\", -1.3f, Field.Store.YES));\n    writer.addDocument(doc);\n    doc = new Document();\n    doc.add(new FloatField(\"value\", 4.2f, Field.Store.YES));\n    writer.addDocument(doc);\n    IndexReader ir = writer.getReader();\n    writer.shutdown();\n    \n    IndexSearcher searcher = newSearcher(ir);\n    Sort sort = new Sort(new SortField(\"value\", SortField.Type.FLOAT));\n\n    TopDocs td = searcher.search(new MatchAllDocsQuery(), 10, sort);\n    assertEquals(3, td.totalHits);\n    \r\n    assertEquals(\"-1.3\", searcher.doc(td.scoreDocs[0].doc).get(\"value\"));\n    assertEquals(\"4.2\", searcher.doc(td.scoreDocs[1].doc).get(\"value\"));\n    assertEquals(\"30.1\", searcher.doc(td.scoreDocs[2].doc).get(\"value\"));\n\n    ir.close();\n    dir.close();\n  }\n","date":"2014-04-08 23:34:50","endLine":731,"groupId":"62023","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"testFloat","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-lucene-10-0.7/blobInfo/CC_OUT/blobs/33/61d0c7715f393422c0af67dcae980fd14eb46b.src","preCode":"  public void testFloat() throws IOException {\n    Directory dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n    Document doc = new Document();\n    doc.add(new FloatField(\"value\", 30.1f, Field.Store.YES));\n    writer.addDocument(doc);\n    doc = new Document();\n    doc.add(new FloatField(\"value\", -1.3f, Field.Store.YES));\n    writer.addDocument(doc);\n    doc = new Document();\n    doc.add(new FloatField(\"value\", 4.2f, Field.Store.YES));\n    writer.addDocument(doc);\n    IndexReader ir = writer.getReader();\n    writer.close();\n    \n    IndexSearcher searcher = newSearcher(ir);\n    Sort sort = new Sort(new SortField(\"value\", SortField.Type.FLOAT));\n\n    TopDocs td = searcher.search(new MatchAllDocsQuery(), 10, sort);\n    assertEquals(3, td.totalHits);\n    \r\n    assertEquals(\"-1.3\", searcher.doc(td.scoreDocs[0].doc).get(\"value\"));\n    assertEquals(\"4.2\", searcher.doc(td.scoreDocs[1].doc).get(\"value\"));\n    assertEquals(\"30.1\", searcher.doc(td.scoreDocs[2].doc).get(\"value\"));\n\n    ir.close();\n    dir.close();\n  }\n","realPath":"lucene/core/src/test/org/apache/lucene/search/TestSort.java","repoName":"lucene","snippetEndLine":0,"snippetStartLine":0,"startLine":704,"status":"M"},{"authorDate":"2014-04-08 23:34:50","commitOrder":4,"curCode":"  public void testFloatMissing() throws IOException {\n    Directory dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n    Document doc = new Document();\n    writer.addDocument(doc);\n    doc = new Document();\n    doc.add(new FloatField(\"value\", -1.3f, Field.Store.YES));\n    writer.addDocument(doc);\n    doc = new Document();\n    doc.add(new FloatField(\"value\", 4.2f, Field.Store.YES));\n    writer.addDocument(doc);\n    IndexReader ir = writer.getReader();\n    writer.shutdown();\n    \n    IndexSearcher searcher = newSearcher(ir);\n    Sort sort = new Sort(new SortField(\"value\", SortField.Type.FLOAT));\n\n    TopDocs td = searcher.search(new MatchAllDocsQuery(), 10, sort);\n    assertEquals(3, td.totalHits);\n    \r\n    assertEquals(\"-1.3\", searcher.doc(td.scoreDocs[0].doc).get(\"value\"));\n    assertNull(searcher.doc(td.scoreDocs[1].doc).get(\"value\"));\n    assertEquals(\"4.2\", searcher.doc(td.scoreDocs[2].doc).get(\"value\"));\n\n    ir.close();\n    dir.close();\n  }\n","date":"2014-04-08 23:34:50","endLine":760,"groupId":"62023","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"testFloatMissing","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-lucene-10-0.7/blobInfo/CC_OUT/blobs/33/61d0c7715f393422c0af67dcae980fd14eb46b.src","preCode":"  public void testFloatMissing() throws IOException {\n    Directory dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n    Document doc = new Document();\n    writer.addDocument(doc);\n    doc = new Document();\n    doc.add(new FloatField(\"value\", -1.3f, Field.Store.YES));\n    writer.addDocument(doc);\n    doc = new Document();\n    doc.add(new FloatField(\"value\", 4.2f, Field.Store.YES));\n    writer.addDocument(doc);\n    IndexReader ir = writer.getReader();\n    writer.close();\n    \n    IndexSearcher searcher = newSearcher(ir);\n    Sort sort = new Sort(new SortField(\"value\", SortField.Type.FLOAT));\n\n    TopDocs td = searcher.search(new MatchAllDocsQuery(), 10, sort);\n    assertEquals(3, td.totalHits);\n    \r\n    assertEquals(\"-1.3\", searcher.doc(td.scoreDocs[0].doc).get(\"value\"));\n    assertNull(searcher.doc(td.scoreDocs[1].doc).get(\"value\"));\n    assertEquals(\"4.2\", searcher.doc(td.scoreDocs[2].doc).get(\"value\"));\n\n    ir.close();\n    dir.close();\n  }\n","realPath":"lucene/core/src/test/org/apache/lucene/search/TestSort.java","repoName":"lucene","snippetEndLine":0,"snippetStartLine":0,"startLine":734,"status":"M"}],"commitId":"8559eafd99e5b569d4ad866e98f410fb4868fd4c","commitMessage":"@@@LUCENE-4246: fix IW.close to just close.  even on exception\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1585759 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2014-04-08 23:34:50","modifiedFileCount":"403","status":"M","submitter":"Michael McCandless"},{"authorTime":"2014-05-17 00:39:56","codes":[{"authorDate":"2014-05-17 00:39:56","commitOrder":5,"curCode":"  public void testFloat() throws IOException {\n    Directory dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n    Document doc = new Document();\n    doc.add(new FloatDocValuesField(\"value\", 30.1F));\n    doc.add(newStringField(\"value\", \"30.1\", Field.Store.YES));\n    writer.addDocument(doc);\n    doc = new Document();\n    doc.add(new FloatDocValuesField(\"value\", -1.3F));\n    doc.add(newStringField(\"value\", \"-1.3\", Field.Store.YES));\n    writer.addDocument(doc);\n    doc = new Document();\n    doc.add(new FloatDocValuesField(\"value\", 4.2F));\n    doc.add(newStringField(\"value\", \"4.2\", Field.Store.YES));\n    writer.addDocument(doc);\n    IndexReader ir = writer.getReader();\n    writer.shutdown();\n    \n    IndexSearcher searcher = newSearcher(ir);\n    Sort sort = new Sort(new SortField(\"value\", SortField.Type.FLOAT));\n\n    TopDocs td = searcher.search(new MatchAllDocsQuery(), 10, sort);\n    assertEquals(3, td.totalHits);\n    \r\n    assertEquals(\"-1.3\", searcher.doc(td.scoreDocs[0].doc).get(\"value\"));\n    assertEquals(\"4.2\", searcher.doc(td.scoreDocs[1].doc).get(\"value\"));\n    assertEquals(\"30.1\", searcher.doc(td.scoreDocs[2].doc).get(\"value\"));\n\n    ir.close();\n    dir.close();\n  }\n","date":"2014-05-17 00:39:56","endLine":513,"groupId":"14077","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"testFloat","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-lucene-10-0.7/blobInfo/CC_OUT/blobs/aa/e7ea1e68e0f9158e571ad3f44da328ef70e367.src","preCode":"  public void testFloat() throws IOException {\n    Directory dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n    Document doc = new Document();\n    doc.add(new FloatField(\"value\", 30.1f, Field.Store.YES));\n    writer.addDocument(doc);\n    doc = new Document();\n    doc.add(new FloatField(\"value\", -1.3f, Field.Store.YES));\n    writer.addDocument(doc);\n    doc = new Document();\n    doc.add(new FloatField(\"value\", 4.2f, Field.Store.YES));\n    writer.addDocument(doc);\n    IndexReader ir = writer.getReader();\n    writer.shutdown();\n    \n    IndexSearcher searcher = newSearcher(ir);\n    Sort sort = new Sort(new SortField(\"value\", SortField.Type.FLOAT));\n\n    TopDocs td = searcher.search(new MatchAllDocsQuery(), 10, sort);\n    assertEquals(3, td.totalHits);\n    \r\n    assertEquals(\"-1.3\", searcher.doc(td.scoreDocs[0].doc).get(\"value\"));\n    assertEquals(\"4.2\", searcher.doc(td.scoreDocs[1].doc).get(\"value\"));\n    assertEquals(\"30.1\", searcher.doc(td.scoreDocs[2].doc).get(\"value\"));\n\n    ir.close();\n    dir.close();\n  }\n","realPath":"lucene/core/src/test/org/apache/lucene/search/TestSort.java","repoName":"lucene","snippetEndLine":0,"snippetStartLine":0,"startLine":483,"status":"M"},{"authorDate":"2014-05-17 00:39:56","commitOrder":5,"curCode":"  public void testFloatMissing() throws IOException {\n    Directory dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n    Document doc = new Document();\n    writer.addDocument(doc);\n    doc = new Document();\n    doc.add(new FloatDocValuesField(\"value\", -1.3F));\n    doc.add(newStringField(\"value\", \"-1.3\", Field.Store.YES));\n    writer.addDocument(doc);\n    doc = new Document();\n    doc.add(new FloatDocValuesField(\"value\", 4.2F));\n    doc.add(newStringField(\"value\", \"4.2\", Field.Store.YES));\n    writer.addDocument(doc);\n    IndexReader ir = writer.getReader();\n    writer.shutdown();\n    \n    IndexSearcher searcher = newSearcher(ir);\n    Sort sort = new Sort(new SortField(\"value\", SortField.Type.FLOAT));\n\n    TopDocs td = searcher.search(new MatchAllDocsQuery(), 10, sort);\n    assertEquals(3, td.totalHits);\n    \r\n    assertEquals(\"-1.3\", searcher.doc(td.scoreDocs[0].doc).get(\"value\"));\n    assertNull(searcher.doc(td.scoreDocs[1].doc).get(\"value\"));\n    assertEquals(\"4.2\", searcher.doc(td.scoreDocs[2].doc).get(\"value\"));\n\n    ir.close();\n    dir.close();\n  }\n","date":"2014-05-17 00:39:56","endLine":577,"groupId":"14089","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"testFloatMissing","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-lucene-10-0.7/blobInfo/CC_OUT/blobs/aa/e7ea1e68e0f9158e571ad3f44da328ef70e367.src","preCode":"  public void testFloatMissing() throws IOException {\n    Directory dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n    Document doc = new Document();\n    writer.addDocument(doc);\n    doc = new Document();\n    doc.add(new FloatField(\"value\", -1.3f, Field.Store.YES));\n    writer.addDocument(doc);\n    doc = new Document();\n    doc.add(new FloatField(\"value\", 4.2f, Field.Store.YES));\n    writer.addDocument(doc);\n    IndexReader ir = writer.getReader();\n    writer.shutdown();\n    \n    IndexSearcher searcher = newSearcher(ir);\n    Sort sort = new Sort(new SortField(\"value\", SortField.Type.FLOAT));\n\n    TopDocs td = searcher.search(new MatchAllDocsQuery(), 10, sort);\n    assertEquals(3, td.totalHits);\n    \r\n    assertEquals(\"-1.3\", searcher.doc(td.scoreDocs[0].doc).get(\"value\"));\n    assertNull(searcher.doc(td.scoreDocs[1].doc).get(\"value\"));\n    assertEquals(\"4.2\", searcher.doc(td.scoreDocs[2].doc).get(\"value\"));\n\n    ir.close();\n    dir.close();\n  }\n","realPath":"lucene/core/src/test/org/apache/lucene/search/TestSort.java","repoName":"lucene","snippetEndLine":0,"snippetStartLine":0,"startLine":549,"status":"M"}],"commitId":"e2ba693a6ee11127897a25de1dbb7549ebe6ea3a","commitMessage":"@@@LUCENE-5666: Add UninvertingReader\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1595259 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2014-05-17 00:39:56","modifiedFileCount":"155","status":"M","submitter":"Robert Muir"},{"authorTime":"2014-08-10 02:54:35","codes":[{"authorDate":"2014-08-10 02:54:35","commitOrder":6,"curCode":"  public void testFloat() throws IOException {\n    Directory dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n    Document doc = new Document();\n    doc.add(new FloatDocValuesField(\"value\", 30.1F));\n    doc.add(newStringField(\"value\", \"30.1\", Field.Store.YES));\n    writer.addDocument(doc);\n    doc = new Document();\n    doc.add(new FloatDocValuesField(\"value\", -1.3F));\n    doc.add(newStringField(\"value\", \"-1.3\", Field.Store.YES));\n    writer.addDocument(doc);\n    doc = new Document();\n    doc.add(new FloatDocValuesField(\"value\", 4.2F));\n    doc.add(newStringField(\"value\", \"4.2\", Field.Store.YES));\n    writer.addDocument(doc);\n    IndexReader ir = writer.getReader();\n    writer.close();\n    \n    IndexSearcher searcher = newSearcher(ir);\n    Sort sort = new Sort(new SortField(\"value\", SortField.Type.FLOAT));\n\n    TopDocs td = searcher.search(new MatchAllDocsQuery(), 10, sort);\n    assertEquals(3, td.totalHits);\n    \r\n    assertEquals(\"-1.3\", searcher.doc(td.scoreDocs[0].doc).get(\"value\"));\n    assertEquals(\"4.2\", searcher.doc(td.scoreDocs[1].doc).get(\"value\"));\n    assertEquals(\"30.1\", searcher.doc(td.scoreDocs[2].doc).get(\"value\"));\n\n    ir.close();\n    dir.close();\n  }\n","date":"2014-08-10 02:54:35","endLine":513,"groupId":"62827","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"testFloat","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-lucene-10-0.7/blobInfo/CC_OUT/blobs/c6/c13e1d6bee1fdc5d566bdec4dd39631f633c37.src","preCode":"  public void testFloat() throws IOException {\n    Directory dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n    Document doc = new Document();\n    doc.add(new FloatDocValuesField(\"value\", 30.1F));\n    doc.add(newStringField(\"value\", \"30.1\", Field.Store.YES));\n    writer.addDocument(doc);\n    doc = new Document();\n    doc.add(new FloatDocValuesField(\"value\", -1.3F));\n    doc.add(newStringField(\"value\", \"-1.3\", Field.Store.YES));\n    writer.addDocument(doc);\n    doc = new Document();\n    doc.add(new FloatDocValuesField(\"value\", 4.2F));\n    doc.add(newStringField(\"value\", \"4.2\", Field.Store.YES));\n    writer.addDocument(doc);\n    IndexReader ir = writer.getReader();\n    writer.shutdown();\n    \n    IndexSearcher searcher = newSearcher(ir);\n    Sort sort = new Sort(new SortField(\"value\", SortField.Type.FLOAT));\n\n    TopDocs td = searcher.search(new MatchAllDocsQuery(), 10, sort);\n    assertEquals(3, td.totalHits);\n    \r\n    assertEquals(\"-1.3\", searcher.doc(td.scoreDocs[0].doc).get(\"value\"));\n    assertEquals(\"4.2\", searcher.doc(td.scoreDocs[1].doc).get(\"value\"));\n    assertEquals(\"30.1\", searcher.doc(td.scoreDocs[2].doc).get(\"value\"));\n\n    ir.close();\n    dir.close();\n  }\n","realPath":"lucene/core/src/test/org/apache/lucene/search/TestSort.java","repoName":"lucene","snippetEndLine":0,"snippetStartLine":0,"startLine":483,"status":"M"},{"authorDate":"2014-08-10 02:54:35","commitOrder":6,"curCode":"  public void testFloatMissing() throws IOException {\n    Directory dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n    Document doc = new Document();\n    writer.addDocument(doc);\n    doc = new Document();\n    doc.add(new FloatDocValuesField(\"value\", -1.3F));\n    doc.add(newStringField(\"value\", \"-1.3\", Field.Store.YES));\n    writer.addDocument(doc);\n    doc = new Document();\n    doc.add(new FloatDocValuesField(\"value\", 4.2F));\n    doc.add(newStringField(\"value\", \"4.2\", Field.Store.YES));\n    writer.addDocument(doc);\n    IndexReader ir = writer.getReader();\n    writer.close();\n    \n    IndexSearcher searcher = newSearcher(ir);\n    Sort sort = new Sort(new SortField(\"value\", SortField.Type.FLOAT));\n\n    TopDocs td = searcher.search(new MatchAllDocsQuery(), 10, sort);\n    assertEquals(3, td.totalHits);\n    \r\n    assertEquals(\"-1.3\", searcher.doc(td.scoreDocs[0].doc).get(\"value\"));\n    assertNull(searcher.doc(td.scoreDocs[1].doc).get(\"value\"));\n    assertEquals(\"4.2\", searcher.doc(td.scoreDocs[2].doc).get(\"value\"));\n\n    ir.close();\n    dir.close();\n  }\n","date":"2014-08-10 02:54:35","endLine":577,"groupId":"62827","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"testFloatMissing","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-lucene-10-0.7/blobInfo/CC_OUT/blobs/c6/c13e1d6bee1fdc5d566bdec4dd39631f633c37.src","preCode":"  public void testFloatMissing() throws IOException {\n    Directory dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n    Document doc = new Document();\n    writer.addDocument(doc);\n    doc = new Document();\n    doc.add(new FloatDocValuesField(\"value\", -1.3F));\n    doc.add(newStringField(\"value\", \"-1.3\", Field.Store.YES));\n    writer.addDocument(doc);\n    doc = new Document();\n    doc.add(new FloatDocValuesField(\"value\", 4.2F));\n    doc.add(newStringField(\"value\", \"4.2\", Field.Store.YES));\n    writer.addDocument(doc);\n    IndexReader ir = writer.getReader();\n    writer.shutdown();\n    \n    IndexSearcher searcher = newSearcher(ir);\n    Sort sort = new Sort(new SortField(\"value\", SortField.Type.FLOAT));\n\n    TopDocs td = searcher.search(new MatchAllDocsQuery(), 10, sort);\n    assertEquals(3, td.totalHits);\n    \r\n    assertEquals(\"-1.3\", searcher.doc(td.scoreDocs[0].doc).get(\"value\"));\n    assertNull(searcher.doc(td.scoreDocs[1].doc).get(\"value\"));\n    assertEquals(\"4.2\", searcher.doc(td.scoreDocs[2].doc).get(\"value\"));\n\n    ir.close();\n    dir.close();\n  }\n","realPath":"lucene/core/src/test/org/apache/lucene/search/TestSort.java","repoName":"lucene","snippetEndLine":0,"snippetStartLine":0,"startLine":549,"status":"M"}],"commitId":"872bd9145cd9504fc16b318f7ea0a666d9429103","commitMessage":"@@@LUCENE-5871: Remove Version from IndexWriterConfig\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1617004 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2014-08-10 02:54:35","modifiedFileCount":"450","status":"M","submitter":"Ryan Ernst"},{"authorTime":"2018-07-30 16:08:16","codes":[{"authorDate":"2018-07-30 16:08:16","commitOrder":7,"curCode":"  public void testFloat() throws IOException {\n    Directory dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n    Document doc = new Document();\n    doc.add(new FloatDocValuesField(\"value\", 30.1F));\n    doc.add(newStringField(\"value\", \"30.1\", Field.Store.YES));\n    writer.addDocument(doc);\n    doc = new Document();\n    doc.add(new FloatDocValuesField(\"value\", -1.3F));\n    doc.add(newStringField(\"value\", \"-1.3\", Field.Store.YES));\n    writer.addDocument(doc);\n    doc = new Document();\n    doc.add(new FloatDocValuesField(\"value\", 4.2F));\n    doc.add(newStringField(\"value\", \"4.2\", Field.Store.YES));\n    writer.addDocument(doc);\n    IndexReader ir = writer.getReader();\n    writer.close();\n    \n    IndexSearcher searcher = newSearcher(ir);\n    Sort sort = new Sort(new SortField(\"value\", SortField.Type.FLOAT));\n\n    TopDocs td = searcher.search(new MatchAllDocsQuery(), 10, sort);\n    assertEquals(3, td.totalHits.value);\n    \r\n    assertEquals(\"-1.3\", searcher.doc(td.scoreDocs[0].doc).get(\"value\"));\n    assertEquals(\"4.2\", searcher.doc(td.scoreDocs[1].doc).get(\"value\"));\n    assertEquals(\"30.1\", searcher.doc(td.scoreDocs[2].doc).get(\"value\"));\n\n    ir.close();\n    dir.close();\n  }\n","date":"2018-07-30 22:38:05","endLine":545,"groupId":"106316","id":13,"instanceNumber":1,"isCurCommit":0,"methodName":"testFloat","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-lucene-10-0.7/blobInfo/CC_OUT/blobs/d3/7c98ddc9139563a2c89436052a9eff7b737740.src","preCode":"  public void testFloat() throws IOException {\n    Directory dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n    Document doc = new Document();\n    doc.add(new FloatDocValuesField(\"value\", 30.1F));\n    doc.add(newStringField(\"value\", \"30.1\", Field.Store.YES));\n    writer.addDocument(doc);\n    doc = new Document();\n    doc.add(new FloatDocValuesField(\"value\", -1.3F));\n    doc.add(newStringField(\"value\", \"-1.3\", Field.Store.YES));\n    writer.addDocument(doc);\n    doc = new Document();\n    doc.add(new FloatDocValuesField(\"value\", 4.2F));\n    doc.add(newStringField(\"value\", \"4.2\", Field.Store.YES));\n    writer.addDocument(doc);\n    IndexReader ir = writer.getReader();\n    writer.close();\n    \n    IndexSearcher searcher = newSearcher(ir);\n    Sort sort = new Sort(new SortField(\"value\", SortField.Type.FLOAT));\n\n    TopDocs td = searcher.search(new MatchAllDocsQuery(), 10, sort);\n    assertEquals(3, td.totalHits);\n    \r\n    assertEquals(\"-1.3\", searcher.doc(td.scoreDocs[0].doc).get(\"value\"));\n    assertEquals(\"4.2\", searcher.doc(td.scoreDocs[1].doc).get(\"value\"));\n    assertEquals(\"30.1\", searcher.doc(td.scoreDocs[2].doc).get(\"value\"));\n\n    ir.close();\n    dir.close();\n  }\n","realPath":"lucene/core/src/test/org/apache/lucene/search/TestSort.java","repoName":"lucene","snippetEndLine":0,"snippetStartLine":0,"startLine":515,"status":"M"},{"authorDate":"2018-07-30 16:08:16","commitOrder":7,"curCode":"  public void testFloatMissing() throws IOException {\n    Directory dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n    Document doc = new Document();\n    writer.addDocument(doc);\n    doc = new Document();\n    doc.add(new FloatDocValuesField(\"value\", -1.3F));\n    doc.add(newStringField(\"value\", \"-1.3\", Field.Store.YES));\n    writer.addDocument(doc);\n    doc = new Document();\n    doc.add(new FloatDocValuesField(\"value\", 4.2F));\n    doc.add(newStringField(\"value\", \"4.2\", Field.Store.YES));\n    writer.addDocument(doc);\n    IndexReader ir = writer.getReader();\n    writer.close();\n    \n    IndexSearcher searcher = newSearcher(ir);\n    Sort sort = new Sort(new SortField(\"value\", SortField.Type.FLOAT));\n\n    TopDocs td = searcher.search(new MatchAllDocsQuery(), 10, sort);\n    assertEquals(3, td.totalHits.value);\n    \r\n    assertEquals(\"-1.3\", searcher.doc(td.scoreDocs[0].doc).get(\"value\"));\n    assertNull(searcher.doc(td.scoreDocs[1].doc).get(\"value\"));\n    assertEquals(\"4.2\", searcher.doc(td.scoreDocs[2].doc).get(\"value\"));\n\n    ir.close();\n    dir.close();\n  }\n","date":"2018-07-30 22:38:05","endLine":609,"groupId":"106316","id":14,"instanceNumber":2,"isCurCommit":0,"methodName":"testFloatMissing","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-lucene-10-0.7/blobInfo/CC_OUT/blobs/d3/7c98ddc9139563a2c89436052a9eff7b737740.src","preCode":"  public void testFloatMissing() throws IOException {\n    Directory dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n    Document doc = new Document();\n    writer.addDocument(doc);\n    doc = new Document();\n    doc.add(new FloatDocValuesField(\"value\", -1.3F));\n    doc.add(newStringField(\"value\", \"-1.3\", Field.Store.YES));\n    writer.addDocument(doc);\n    doc = new Document();\n    doc.add(new FloatDocValuesField(\"value\", 4.2F));\n    doc.add(newStringField(\"value\", \"4.2\", Field.Store.YES));\n    writer.addDocument(doc);\n    IndexReader ir = writer.getReader();\n    writer.close();\n    \n    IndexSearcher searcher = newSearcher(ir);\n    Sort sort = new Sort(new SortField(\"value\", SortField.Type.FLOAT));\n\n    TopDocs td = searcher.search(new MatchAllDocsQuery(), 10, sort);\n    assertEquals(3, td.totalHits);\n    \r\n    assertEquals(\"-1.3\", searcher.doc(td.scoreDocs[0].doc).get(\"value\"));\n    assertNull(searcher.doc(td.scoreDocs[1].doc).get(\"value\"));\n    assertEquals(\"4.2\", searcher.doc(td.scoreDocs[2].doc).get(\"value\"));\n\n    ir.close();\n    dir.close();\n  }\n","realPath":"lucene/core/src/test/org/apache/lucene/search/TestSort.java","repoName":"lucene","snippetEndLine":0,"snippetStartLine":0,"startLine":581,"status":"M"}],"commitId":"9ca053712af0795cbd0d0d9f2d862f24d9e547c3","commitMessage":"@@@LUCENE-8430: TopDocs.totalHits may now be a lower bound of the hit count.\n","date":"2018-07-30 22:38:05","modifiedFileCount":"178","status":"M","submitter":"Adrien Grand"}]
