[{"authorTime":"2018-04-13 21:40:11","codes":[{"authorDate":"2015-12-03 14:27:44","commitOrder":4,"curCode":"  public JapaneseTokenizerFactory(Map<String,String> args) {\n    super(args);\n    mode = Mode.valueOf(get(args, MODE, JapaneseTokenizer.DEFAULT_MODE.toString()).toUpperCase(Locale.ROOT));\n    userDictionaryPath = args.remove(USER_DICT_PATH);\n    userDictionaryEncoding = args.remove(USER_DICT_ENCODING);\n    discardPunctuation = getBoolean(args, DISCARD_PUNCTUATION, true);\n    nbestCost = getInt(args, NBEST_COST, 0);\n    nbestExamples = args.remove(NBEST_EXAMPLES);\n    if (!args.isEmpty()) {\n      throw new IllegalArgumentException(\"Unknown parameters: \" + args);\n    }\n  }\n","date":"2015-12-03 14:27:44","endLine":125,"groupId":"5978","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"JapaneseTokenizerFactory","params":"(Map<String@String>args)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-lucene-10-0.7/blobInfo/CC_OUT/blobs/6a/fd54cce040501f24e3b3d57d496771bccaa8a7.src","preCode":"  public JapaneseTokenizerFactory(Map<String,String> args) {\n    super(args);\n    mode = Mode.valueOf(get(args, MODE, JapaneseTokenizer.DEFAULT_MODE.toString()).toUpperCase(Locale.ROOT));\n    userDictionaryPath = args.remove(USER_DICT_PATH);\n    userDictionaryEncoding = args.remove(USER_DICT_ENCODING);\n    discardPunctuation = getBoolean(args, DISCARD_PUNCTUATION, true);\n    nbestCost = getInt(args, NBEST_COST, 0);\n    nbestExamples = args.remove(NBEST_EXAMPLES);\n    if (!args.isEmpty()) {\n      throw new IllegalArgumentException(\"Unknown parameters: \" + args);\n    }\n  }\n","realPath":"lucene/analysis/kuromoji/src/java/org/apache/lucene/analysis/ja/JapaneseTokenizerFactory.java","repoName":"lucene","snippetEndLine":0,"snippetStartLine":0,"startLine":114,"status":"NB"},{"authorDate":"2018-04-13 21:40:11","commitOrder":4,"curCode":"  public KoreanTokenizerFactory(Map<String, String> args) {\n    super(args);\n    userDictionaryPath = args.remove(USER_DICT_PATH);\n    userDictionaryEncoding = args.remove(USER_DICT_ENCODING);\n    mode = KoreanTokenizer.DecompoundMode.valueOf(get(args, DECOMPOUND_MODE, KoreanTokenizer.DEFAULT_DECOMPOUND.toString()).toUpperCase(Locale.ROOT));\n    outputUnknownUnigrams = getBoolean(args, OUTPUT_UNKNOWN_UNIGRAMS, false);\n\n    if (!args.isEmpty()) {\n      throw new IllegalArgumentException(\"Unknown parameters: \" + args);\n    }\n  }\n","date":"2018-04-13 21:40:11","endLine":64,"groupId":"31449","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"KoreanTokenizerFactory","params":"(Map<String@String>args)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-lucene-10-0.7/blobInfo/CC_OUT/blobs/43/a02d3a0d64fb08eba0270198f170c8a741dc0c.src","preCode":"  public KoreanTokenizerFactory(Map<String, String> args) {\n    super(args);\n    userDictionaryPath = args.remove(USER_DICT_PATH);\n    userDictionaryEncoding = args.remove(USER_DICT_ENCODING);\n    mode = KoreanTokenizer.DecompoundMode.valueOf(get(args, DECOMPOUND_MODE, KoreanTokenizer.DEFAULT_DECOMPOUND.toString()).toUpperCase(Locale.ROOT));\n    outputUnknownUnigrams = getBoolean(args, OUTPUT_UNKNOWN_UNIGRAMS, false);\n\n    if (!args.isEmpty()) {\n      throw new IllegalArgumentException(\"Unknown parameters: \" + args);\n    }\n  }\n","realPath":"lucene/analysis/nori/src/java/org/apache/lucene/analysis/ko/KoreanTokenizerFactory.java","repoName":"lucene","snippetEndLine":0,"snippetStartLine":0,"startLine":54,"status":"B"}],"commitId":"f88a553a91207d911c99d17cb3a23d9eeb6b3665","commitMessage":"@@@Merge branch 'master' of https://git-wip-us.apache.org/repos/asf/lucene-solr\n","date":"2018-04-13 21:40:11","modifiedFileCount":"5","status":"M","submitter":"Karl Wright"},{"authorTime":"2019-05-24 22:56:02","codes":[{"authorDate":"2015-12-03 14:27:44","commitOrder":5,"curCode":"  public JapaneseTokenizerFactory(Map<String,String> args) {\n    super(args);\n    mode = Mode.valueOf(get(args, MODE, JapaneseTokenizer.DEFAULT_MODE.toString()).toUpperCase(Locale.ROOT));\n    userDictionaryPath = args.remove(USER_DICT_PATH);\n    userDictionaryEncoding = args.remove(USER_DICT_ENCODING);\n    discardPunctuation = getBoolean(args, DISCARD_PUNCTUATION, true);\n    nbestCost = getInt(args, NBEST_COST, 0);\n    nbestExamples = args.remove(NBEST_EXAMPLES);\n    if (!args.isEmpty()) {\n      throw new IllegalArgumentException(\"Unknown parameters: \" + args);\n    }\n  }\n","date":"2015-12-03 14:27:44","endLine":125,"groupId":"5978","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"JapaneseTokenizerFactory","params":"(Map<String@String>args)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-lucene-10-0.7/blobInfo/CC_OUT/blobs/6a/fd54cce040501f24e3b3d57d496771bccaa8a7.src","preCode":"  public JapaneseTokenizerFactory(Map<String,String> args) {\n    super(args);\n    mode = Mode.valueOf(get(args, MODE, JapaneseTokenizer.DEFAULT_MODE.toString()).toUpperCase(Locale.ROOT));\n    userDictionaryPath = args.remove(USER_DICT_PATH);\n    userDictionaryEncoding = args.remove(USER_DICT_ENCODING);\n    discardPunctuation = getBoolean(args, DISCARD_PUNCTUATION, true);\n    nbestCost = getInt(args, NBEST_COST, 0);\n    nbestExamples = args.remove(NBEST_EXAMPLES);\n    if (!args.isEmpty()) {\n      throw new IllegalArgumentException(\"Unknown parameters: \" + args);\n    }\n  }\n","realPath":"lucene/analysis/kuromoji/src/java/org/apache/lucene/analysis/ja/JapaneseTokenizerFactory.java","repoName":"lucene","snippetEndLine":0,"snippetStartLine":0,"startLine":114,"status":"N"},{"authorDate":"2019-05-24 22:56:02","commitOrder":5,"curCode":"  public KoreanTokenizerFactory(Map<String, String> args) {\n    super(args);\n    userDictionaryPath = args.remove(USER_DICT_PATH);\n    userDictionaryEncoding = args.remove(USER_DICT_ENCODING);\n    mode = KoreanTokenizer.DecompoundMode.valueOf(get(args, DECOMPOUND_MODE, KoreanTokenizer.DEFAULT_DECOMPOUND.toString()).toUpperCase(Locale.ROOT));\n    outputUnknownUnigrams = getBoolean(args, OUTPUT_UNKNOWN_UNIGRAMS, false);\n    discardPunctuation = getBoolean(args, DISCARD_PUNCTUATION, true);\n\n    if (!args.isEmpty()) {\n      throw new IllegalArgumentException(\"Unknown parameters: \" + args);\n    }\n  }\n","date":"2019-05-27 21:15:24","endLine":93,"groupId":"31449","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"KoreanTokenizerFactory","params":"(Map<String@String>args)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-lucene-10-0.7/blobInfo/CC_OUT/blobs/f7/22273684a2dbfe4e5662e26971994322510e78.src","preCode":"  public KoreanTokenizerFactory(Map<String, String> args) {\n    super(args);\n    userDictionaryPath = args.remove(USER_DICT_PATH);\n    userDictionaryEncoding = args.remove(USER_DICT_ENCODING);\n    mode = KoreanTokenizer.DecompoundMode.valueOf(get(args, DECOMPOUND_MODE, KoreanTokenizer.DEFAULT_DECOMPOUND.toString()).toUpperCase(Locale.ROOT));\n    outputUnknownUnigrams = getBoolean(args, OUTPUT_UNKNOWN_UNIGRAMS, false);\n\n    if (!args.isEmpty()) {\n      throw new IllegalArgumentException(\"Unknown parameters: \" + args);\n    }\n  }\n","realPath":"lucene/analysis/nori/src/java/org/apache/lucene/analysis/ko/KoreanTokenizerFactory.java","repoName":"lucene","snippetEndLine":0,"snippetStartLine":0,"startLine":82,"status":"M"}],"commitId":"a556925eb8aaea61e55010a6e5c90520139b56c3","commitMessage":"@@@LUCENE-8784: The KoreanTokenizer now preserves punctuations if discardPunctuation is set to false (defaults to true).\n\nSigned-off-by: Namgyu Kim <kng0828@gmail.com>\nSigned-off-by: jimczi <jimczi@apache.org>\n","date":"2019-05-27 21:15:24","modifiedFileCount":"7","status":"M","submitter":"Namgyu Kim"},{"authorTime":"2019-05-24 22:56:02","codes":[{"authorDate":"2020-02-01 13:51:09","commitOrder":6,"curCode":"  public JapaneseTokenizerFactory(Map<String,String> args) {\n    super(args);\n    mode = Mode.valueOf(get(args, MODE, JapaneseTokenizer.DEFAULT_MODE.toString()).toUpperCase(Locale.ROOT));\n    userDictionaryPath = args.remove(USER_DICT_PATH);\n    userDictionaryEncoding = args.remove(USER_DICT_ENCODING);\n    discardPunctuation = getBoolean(args, DISCARD_PUNCTUATION, true);\n    discardCompoundToken = getBoolean(args, DISCARD_COMPOUND_TOKEN, true);\n    nbestCost = getInt(args, NBEST_COST, 0);\n    nbestExamples = args.remove(NBEST_EXAMPLES);\n    if (!args.isEmpty()) {\n      throw new IllegalArgumentException(\"Unknown parameters: \" + args);\n    }\n  }\n","date":"2020-02-01 13:51:09","endLine":137,"groupId":"101659","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"JapaneseTokenizerFactory","params":"(Map<String@String>args)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-lucene-10-0.7/blobInfo/CC_OUT/blobs/93/16d063bd4f8c6f136d76af531b0743eab5a82a.src","preCode":"  public JapaneseTokenizerFactory(Map<String,String> args) {\n    super(args);\n    mode = Mode.valueOf(get(args, MODE, JapaneseTokenizer.DEFAULT_MODE.toString()).toUpperCase(Locale.ROOT));\n    userDictionaryPath = args.remove(USER_DICT_PATH);\n    userDictionaryEncoding = args.remove(USER_DICT_ENCODING);\n    discardPunctuation = getBoolean(args, DISCARD_PUNCTUATION, true);\n    nbestCost = getInt(args, NBEST_COST, 0);\n    nbestExamples = args.remove(NBEST_EXAMPLES);\n    if (!args.isEmpty()) {\n      throw new IllegalArgumentException(\"Unknown parameters: \" + args);\n    }\n  }\n","realPath":"lucene/analysis/kuromoji/src/java/org/apache/lucene/analysis/ja/JapaneseTokenizerFactory.java","repoName":"lucene","snippetEndLine":0,"snippetStartLine":0,"startLine":125,"status":"M"},{"authorDate":"2019-05-24 22:56:02","commitOrder":6,"curCode":"  public KoreanTokenizerFactory(Map<String, String> args) {\n    super(args);\n    userDictionaryPath = args.remove(USER_DICT_PATH);\n    userDictionaryEncoding = args.remove(USER_DICT_ENCODING);\n    mode = KoreanTokenizer.DecompoundMode.valueOf(get(args, DECOMPOUND_MODE, KoreanTokenizer.DEFAULT_DECOMPOUND.toString()).toUpperCase(Locale.ROOT));\n    outputUnknownUnigrams = getBoolean(args, OUTPUT_UNKNOWN_UNIGRAMS, false);\n    discardPunctuation = getBoolean(args, DISCARD_PUNCTUATION, true);\n\n    if (!args.isEmpty()) {\n      throw new IllegalArgumentException(\"Unknown parameters: \" + args);\n    }\n  }\n","date":"2019-05-27 21:15:24","endLine":93,"groupId":"101659","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"KoreanTokenizerFactory","params":"(Map<String@String>args)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-lucene-10-0.7/blobInfo/CC_OUT/blobs/f7/22273684a2dbfe4e5662e26971994322510e78.src","preCode":"  public KoreanTokenizerFactory(Map<String, String> args) {\n    super(args);\n    userDictionaryPath = args.remove(USER_DICT_PATH);\n    userDictionaryEncoding = args.remove(USER_DICT_ENCODING);\n    mode = KoreanTokenizer.DecompoundMode.valueOf(get(args, DECOMPOUND_MODE, KoreanTokenizer.DEFAULT_DECOMPOUND.toString()).toUpperCase(Locale.ROOT));\n    outputUnknownUnigrams = getBoolean(args, OUTPUT_UNKNOWN_UNIGRAMS, false);\n    discardPunctuation = getBoolean(args, DISCARD_PUNCTUATION, true);\n\n    if (!args.isEmpty()) {\n      throw new IllegalArgumentException(\"Unknown parameters: \" + args);\n    }\n  }\n","realPath":"lucene/analysis/nori/src/java/org/apache/lucene/analysis/ko/KoreanTokenizerFactory.java","repoName":"lucene","snippetEndLine":0,"snippetStartLine":0,"startLine":82,"status":"N"}],"commitId":"b457c2ee2ea0180f3a11c5d0b4d443083316aa31","commitMessage":"@@@LUCENE-9123: Add new JapaneseTokenizer constructors with discardCompoundToken option to control whether the tokenizer emits original tokens when the mode is not NORMAL.\n","date":"2020-02-01 13:51:09","modifiedFileCount":"8","status":"M","submitter":"Kazuaki Hiraga"}]
