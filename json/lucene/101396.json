[{"authorTime":"2012-04-15 22:41:44","codes":[{"authorDate":"2012-04-17 21:36:19","commitOrder":3,"curCode":"  public void testLimitTokenCountIndexWriter() throws IOException {\n    Directory dir = newDirectory();\n\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new LimitTokenCountAnalyzer(new MockAnalyzer(random()), 100000)));\n\n    Document doc = new Document();\n    StringBuilder b = new StringBuilder();\n    for(int i=0;i<10000;i++)\n      b.append(\" a\");\n    b.append(\" x\");\n    doc.add(newField(\"field\", b.toString(), TextField.TYPE_UNSTORED));\n    writer.addDocument(doc);\n    writer.close();\n\n    IndexReader reader = IndexReader.open(dir);\n    Term t = new Term(\"field\", \"x\");\n    assertEquals(1, reader.docFreq(t));\n    reader.close();\n    dir.close();\n  }\n","date":"2012-04-17 21:36:19","endLine":69,"groupId":"53087","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testLimitTokenCountIndexWriter","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-lucene-10-0.7/blobInfo/CC_OUT/blobs/8a/561b2230c4c24e8fc2288e7761eeef2419aefe.src","preCode":"  public void testLimitTokenCountIndexWriter() throws IOException {\n    Directory dir = newDirectory();\n\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new LimitTokenCountAnalyzer(new MockAnalyzer(random()), 100000)));\n\n    Document doc = new Document();\n    StringBuilder b = new StringBuilder();\n    for(int i=0;i<10000;i++)\n      b.append(\" a\");\n    b.append(\" x\");\n    doc.add(newField(\"field\", b.toString(), TextField.TYPE_UNSTORED));\n    writer.addDocument(doc);\n    writer.close();\n\n    IndexReader reader = IndexReader.open(dir);\n    Term t = new Term(\"field\", \"x\");\n    assertEquals(1, reader.docFreq(t));\n    reader.close();\n    dir.close();\n  }\n","realPath":"lucene/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/TestLimitTokenCountAnalyzer.java","repoName":"lucene","snippetEndLine":0,"snippetStartLine":0,"startLine":49,"status":"B"},{"authorDate":"2012-04-15 22:41:44","commitOrder":3,"curCode":"  public void testUnlimitedMaxFieldLength() throws IOException {\n    Directory dir = newDirectory();\n\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n\n    Document doc = new Document();\n    StringBuilder b = new StringBuilder();\n    for(int i=0;i<10000;i++)\n      b.append(\" a\");\n    b.append(\" x\");\n    doc.add(newField(\"field\", b.toString(), TextField.TYPE_UNSTORED));\n    writer.addDocument(doc);\n    writer.close();\n\n    IndexReader reader = IndexReader.open(dir);\n    Term t = new Term(\"field\", \"x\");\n    assertEquals(1, reader.docFreq(t));\n    reader.close();\n    dir.close();\n  }\n","date":"2012-04-15 22:41:44","endLine":757,"groupId":"53087","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testUnlimitedMaxFieldLength","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-lucene-10-0.7/blobInfo/CC_OUT/blobs/c8/4f27bf22430da8575f56268c52cf6885da1424.src","preCode":"  public void testUnlimitedMaxFieldLength() throws IOException {\n    Directory dir = newDirectory();\n\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n\n    Document doc = new Document();\n    StringBuilder b = new StringBuilder();\n    for(int i=0;i<10000;i++)\n      b.append(\" a\");\n    b.append(\" x\");\n    doc.add(newField(\"field\", b.toString(), TextField.TYPE_UNSTORED));\n    writer.addDocument(doc);\n    writer.close();\n\n    IndexReader reader = IndexReader.open(dir);\n    Term t = new Term(\"field\", \"x\");\n    assertEquals(1, reader.docFreq(t));\n    reader.close();\n    dir.close();\n  }\n","realPath":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter.java","repoName":"lucene","snippetEndLine":0,"snippetStartLine":0,"startLine":738,"status":"NB"}],"commitId":"e8e4245d9b36123446546ff15967ac95429ea2b0","commitMessage":"@@@LUCENE-3965: consolidate all api modules and fix packaging for 4.0\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1327094 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2012-04-17 21:36:19","modifiedFileCount":"1","status":"M","submitter":"Robert Muir"},{"authorTime":"2012-05-31 10:07:11","codes":[{"authorDate":"2012-05-31 10:07:11","commitOrder":4,"curCode":"  public void testLimitTokenCountIndexWriter() throws IOException {\n    Directory dir = newDirectory();\n\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new LimitTokenCountAnalyzer(new MockAnalyzer(random()), 100000)));\n\n    Document doc = new Document();\n    StringBuilder b = new StringBuilder();\n    for(int i=0;i<10000;i++)\n      b.append(\" a\");\n    b.append(\" x\");\n    doc.add(newField(\"field\", b.toString(), TextField.TYPE_UNSTORED));\n    writer.addDocument(doc);\n    writer.close();\n\n    IndexReader reader = DirectoryReader.open(dir);\n    Term t = new Term(\"field\", \"x\");\n    assertEquals(1, reader.docFreq(t));\n    reader.close();\n    dir.close();\n  }\n","date":"2012-05-31 10:07:11","endLine":70,"groupId":"53087","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testLimitTokenCountIndexWriter","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-lucene-10-0.7/blobInfo/CC_OUT/blobs/9e/05bd735f06197d49c5b5e393c87e9b047a2912.src","preCode":"  public void testLimitTokenCountIndexWriter() throws IOException {\n    Directory dir = newDirectory();\n\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new LimitTokenCountAnalyzer(new MockAnalyzer(random()), 100000)));\n\n    Document doc = new Document();\n    StringBuilder b = new StringBuilder();\n    for(int i=0;i<10000;i++)\n      b.append(\" a\");\n    b.append(\" x\");\n    doc.add(newField(\"field\", b.toString(), TextField.TYPE_UNSTORED));\n    writer.addDocument(doc);\n    writer.close();\n\n    IndexReader reader = IndexReader.open(dir);\n    Term t = new Term(\"field\", \"x\");\n    assertEquals(1, reader.docFreq(t));\n    reader.close();\n    dir.close();\n  }\n","realPath":"lucene/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/TestLimitTokenCountAnalyzer.java","repoName":"lucene","snippetEndLine":0,"snippetStartLine":0,"startLine":50,"status":"M"},{"authorDate":"2012-05-31 10:07:11","commitOrder":4,"curCode":"  public void testUnlimitedMaxFieldLength() throws IOException {\n    Directory dir = newDirectory();\n\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n\n    Document doc = new Document();\n    StringBuilder b = new StringBuilder();\n    for(int i=0;i<10000;i++)\n      b.append(\" a\");\n    b.append(\" x\");\n    doc.add(newField(\"field\", b.toString(), TextField.TYPE_UNSTORED));\n    writer.addDocument(doc);\n    writer.close();\n\n    IndexReader reader = DirectoryReader.open(dir);\n    Term t = new Term(\"field\", \"x\");\n    assertEquals(1, reader.docFreq(t));\n    reader.close();\n    dir.close();\n  }\n","date":"2012-05-31 10:07:11","endLine":758,"groupId":"53087","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testUnlimitedMaxFieldLength","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-lucene-10-0.7/blobInfo/CC_OUT/blobs/2a/c94efefeef8ab0910db2062a8efd4c136d77b4.src","preCode":"  public void testUnlimitedMaxFieldLength() throws IOException {\n    Directory dir = newDirectory();\n\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n\n    Document doc = new Document();\n    StringBuilder b = new StringBuilder();\n    for(int i=0;i<10000;i++)\n      b.append(\" a\");\n    b.append(\" x\");\n    doc.add(newField(\"field\", b.toString(), TextField.TYPE_UNSTORED));\n    writer.addDocument(doc);\n    writer.close();\n\n    IndexReader reader = IndexReader.open(dir);\n    Term t = new Term(\"field\", \"x\");\n    assertEquals(1, reader.docFreq(t));\n    reader.close();\n    dir.close();\n  }\n","realPath":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter.java","repoName":"lucene","snippetEndLine":0,"snippetStartLine":0,"startLine":739,"status":"M"}],"commitId":"bc3a3dc5d47af0c00748468b1ae14b4a18854366","commitMessage":"@@@LUCENE-4095: remove deprecations from trunk (just the easy ones for now)\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1344531 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2012-05-31 10:07:11","modifiedFileCount":"218","status":"M","submitter":"Robert Muir"},{"authorTime":"2012-06-11 01:42:19","codes":[{"authorDate":"2012-06-11 01:42:19","commitOrder":5,"curCode":"  public void testLimitTokenCountIndexWriter() throws IOException {\n    Directory dir = newDirectory();\n\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new LimitTokenCountAnalyzer(new MockAnalyzer(random()), 100000)));\n\n    Document doc = new Document();\n    StringBuilder b = new StringBuilder();\n    for(int i=0;i<10000;i++)\n      b.append(\" a\");\n    b.append(\" x\");\n    doc.add(newTextField(\"field\", b.toString(), Field.Store.NO));\n    writer.addDocument(doc);\n    writer.close();\n\n    IndexReader reader = DirectoryReader.open(dir);\n    Term t = new Term(\"field\", \"x\");\n    assertEquals(1, reader.docFreq(t));\n    reader.close();\n    dir.close();\n  }\n","date":"2012-06-11 01:42:19","endLine":70,"groupId":"53087","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testLimitTokenCountIndexWriter","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-lucene-10-0.7/blobInfo/CC_OUT/blobs/7d/f039a546deafca281c6d7d12962a54f3ffc7fa.src","preCode":"  public void testLimitTokenCountIndexWriter() throws IOException {\n    Directory dir = newDirectory();\n\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new LimitTokenCountAnalyzer(new MockAnalyzer(random()), 100000)));\n\n    Document doc = new Document();\n    StringBuilder b = new StringBuilder();\n    for(int i=0;i<10000;i++)\n      b.append(\" a\");\n    b.append(\" x\");\n    doc.add(newField(\"field\", b.toString(), TextField.TYPE_UNSTORED));\n    writer.addDocument(doc);\n    writer.close();\n\n    IndexReader reader = DirectoryReader.open(dir);\n    Term t = new Term(\"field\", \"x\");\n    assertEquals(1, reader.docFreq(t));\n    reader.close();\n    dir.close();\n  }\n","realPath":"lucene/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/TestLimitTokenCountAnalyzer.java","repoName":"lucene","snippetEndLine":0,"snippetStartLine":0,"startLine":50,"status":"M"},{"authorDate":"2012-06-11 01:42:19","commitOrder":5,"curCode":"  public void testUnlimitedMaxFieldLength() throws IOException {\n    Directory dir = newDirectory();\n\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n\n    Document doc = new Document();\n    StringBuilder b = new StringBuilder();\n    for(int i=0;i<10000;i++)\n      b.append(\" a\");\n    b.append(\" x\");\n    doc.add(newTextField(\"field\", b.toString(), Field.Store.NO));\n    writer.addDocument(doc);\n    writer.close();\n\n    IndexReader reader = DirectoryReader.open(dir);\n    Term t = new Term(\"field\", \"x\");\n    assertEquals(1, reader.docFreq(t));\n    reader.close();\n    dir.close();\n  }\n","date":"2012-06-11 01:42:19","endLine":751,"groupId":"53087","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testUnlimitedMaxFieldLength","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-lucene-10-0.7/blobInfo/CC_OUT/blobs/98/104d6700e89c66c8aa7a72e77ec503e47a2447.src","preCode":"  public void testUnlimitedMaxFieldLength() throws IOException {\n    Directory dir = newDirectory();\n\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n\n    Document doc = new Document();\n    StringBuilder b = new StringBuilder();\n    for(int i=0;i<10000;i++)\n      b.append(\" a\");\n    b.append(\" x\");\n    doc.add(newField(\"field\", b.toString(), TextField.TYPE_UNSTORED));\n    writer.addDocument(doc);\n    writer.close();\n\n    IndexReader reader = DirectoryReader.open(dir);\n    Term t = new Term(\"field\", \"x\");\n    assertEquals(1, reader.docFreq(t));\n    reader.close();\n    dir.close();\n  }\n","realPath":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter.java","repoName":"lucene","snippetEndLine":0,"snippetStartLine":0,"startLine":732,"status":"M"}],"commitId":"dba50b31e7543e3861e44de6e0ff6e7f79ec1be4","commitMessage":"@@@LUCENE-4101: add ctors create stored or not-stored variants of indexed fields\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1348630 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2012-06-11 01:42:19","modifiedFileCount":"254","status":"M","submitter":"Michael McCandless"},{"authorTime":"2012-06-11 01:42:19","codes":[{"authorDate":"2012-11-21 15:19:52","commitOrder":6,"curCode":"  public void testLimitTokenCountIndexWriter() throws IOException {\n    \n    for (boolean consumeAll : new boolean[] { true, false }) {\n      Directory dir = newDirectory();\n      int limit = _TestUtil.nextInt(random(), 50, 101000);\n      MockAnalyzer mock = new MockAnalyzer(random());\n\n      \r\n      \r\n      mock.setEnableChecks(consumeAll);\n      Analyzer a = new LimitTokenCountAnalyzer(mock, limit, consumeAll);\n\n      IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig\n                                           (TEST_VERSION_CURRENT, a));\n\n      Document doc = new Document();\n      StringBuilder b = new StringBuilder();\n      for(int i=1;i<limit;i++)\n        b.append(\" a\");\n      b.append(\" x\");\n      b.append(\" z\");\n      doc.add(newTextField(\"field\", b.toString(), Field.Store.NO));\n      writer.addDocument(doc);\n      writer.close();\n      \n      IndexReader reader = DirectoryReader.open(dir);\n      Term t = new Term(\"field\", \"x\");\n      assertEquals(1, reader.docFreq(t));\n      t = new Term(\"field\", \"z\");\n      assertEquals(0, reader.docFreq(t));\n      reader.close();\n      dir.close();\n    }\n  }\n","date":"2012-11-21 15:19:52","endLine":94,"groupId":"60624","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"testLimitTokenCountIndexWriter","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-lucene-10-0.7/blobInfo/CC_OUT/blobs/79/98732d2f37deef29ace80bf957365693ee93e0.src","preCode":"  public void testLimitTokenCountIndexWriter() throws IOException {\n    Directory dir = newDirectory();\n\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new LimitTokenCountAnalyzer(new MockAnalyzer(random()), 100000)));\n\n    Document doc = new Document();\n    StringBuilder b = new StringBuilder();\n    for(int i=0;i<10000;i++)\n      b.append(\" a\");\n    b.append(\" x\");\n    doc.add(newTextField(\"field\", b.toString(), Field.Store.NO));\n    writer.addDocument(doc);\n    writer.close();\n\n    IndexReader reader = DirectoryReader.open(dir);\n    Term t = new Term(\"field\", \"x\");\n    assertEquals(1, reader.docFreq(t));\n    reader.close();\n    dir.close();\n  }\n","realPath":"lucene/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/TestLimitTokenCountAnalyzer.java","repoName":"lucene","snippetEndLine":0,"snippetStartLine":0,"startLine":61,"status":"M"},{"authorDate":"2012-06-11 01:42:19","commitOrder":6,"curCode":"  public void testUnlimitedMaxFieldLength() throws IOException {\n    Directory dir = newDirectory();\n\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n\n    Document doc = new Document();\n    StringBuilder b = new StringBuilder();\n    for(int i=0;i<10000;i++)\n      b.append(\" a\");\n    b.append(\" x\");\n    doc.add(newTextField(\"field\", b.toString(), Field.Store.NO));\n    writer.addDocument(doc);\n    writer.close();\n\n    IndexReader reader = DirectoryReader.open(dir);\n    Term t = new Term(\"field\", \"x\");\n    assertEquals(1, reader.docFreq(t));\n    reader.close();\n    dir.close();\n  }\n","date":"2012-06-11 01:42:19","endLine":751,"groupId":"53087","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"testUnlimitedMaxFieldLength","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-lucene-10-0.7/blobInfo/CC_OUT/blobs/98/104d6700e89c66c8aa7a72e77ec503e47a2447.src","preCode":"  public void testUnlimitedMaxFieldLength() throws IOException {\n    Directory dir = newDirectory();\n\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n\n    Document doc = new Document();\n    StringBuilder b = new StringBuilder();\n    for(int i=0;i<10000;i++)\n      b.append(\" a\");\n    b.append(\" x\");\n    doc.add(newTextField(\"field\", b.toString(), Field.Store.NO));\n    writer.addDocument(doc);\n    writer.close();\n\n    IndexReader reader = DirectoryReader.open(dir);\n    Term t = new Term(\"field\", \"x\");\n    assertEquals(1, reader.docFreq(t));\n    reader.close();\n    dir.close();\n  }\n","realPath":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter.java","repoName":"lucene","snippetEndLine":0,"snippetStartLine":0,"startLine":732,"status":"N"}],"commitId":"6f5c10b30552439f5277053eadafaef703685707","commitMessage":"@@@LUCENE-4489: Added consumeAllTokens option to LimitTokenCountFilter\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1411996 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2012-11-21 15:19:52","modifiedFileCount":"4","status":"M","submitter":"Chris M. Hostetter"},{"authorTime":"2012-06-11 01:42:19","codes":[{"authorDate":"2014-02-19 09:38:33","commitOrder":7,"curCode":"  public void testLimitTokenCountIndexWriter() throws IOException {\n    \n    for (boolean consumeAll : new boolean[] { true, false }) {\n      Directory dir = newDirectory();\n      int limit = TestUtil.nextInt(random(), 50, 101000);\n      MockAnalyzer mock = new MockAnalyzer(random());\n\n      \r\n      \r\n      mock.setEnableChecks(consumeAll);\n      Analyzer a = new LimitTokenCountAnalyzer(mock, limit, consumeAll);\n\n      IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig\n                                           (TEST_VERSION_CURRENT, a));\n\n      Document doc = new Document();\n      StringBuilder b = new StringBuilder();\n      for(int i=1;i<limit;i++)\n        b.append(\" a\");\n      b.append(\" x\");\n      b.append(\" z\");\n      doc.add(newTextField(\"field\", b.toString(), Field.Store.NO));\n      writer.addDocument(doc);\n      writer.close();\n      \n      IndexReader reader = DirectoryReader.open(dir);\n      Term t = new Term(\"field\", \"x\");\n      assertEquals(1, reader.docFreq(t));\n      t = new Term(\"field\", \"z\");\n      assertEquals(0, reader.docFreq(t));\n      reader.close();\n      dir.close();\n    }\n  }\n","date":"2014-02-19 09:38:33","endLine":91,"groupId":"60624","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"testLimitTokenCountIndexWriter","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-lucene-10-0.7/blobInfo/CC_OUT/blobs/1d/7fae1ed91451903349171678009e80fded7f04.src","preCode":"  public void testLimitTokenCountIndexWriter() throws IOException {\n    \n    for (boolean consumeAll : new boolean[] { true, false }) {\n      Directory dir = newDirectory();\n      int limit = _TestUtil.nextInt(random(), 50, 101000);\n      MockAnalyzer mock = new MockAnalyzer(random());\n\n      \r\n      \r\n      mock.setEnableChecks(consumeAll);\n      Analyzer a = new LimitTokenCountAnalyzer(mock, limit, consumeAll);\n\n      IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig\n                                           (TEST_VERSION_CURRENT, a));\n\n      Document doc = new Document();\n      StringBuilder b = new StringBuilder();\n      for(int i=1;i<limit;i++)\n        b.append(\" a\");\n      b.append(\" x\");\n      b.append(\" z\");\n      doc.add(newTextField(\"field\", b.toString(), Field.Store.NO));\n      writer.addDocument(doc);\n      writer.close();\n      \n      IndexReader reader = DirectoryReader.open(dir);\n      Term t = new Term(\"field\", \"x\");\n      assertEquals(1, reader.docFreq(t));\n      t = new Term(\"field\", \"z\");\n      assertEquals(0, reader.docFreq(t));\n      reader.close();\n      dir.close();\n    }\n  }\n","realPath":"lucene/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/TestLimitTokenCountAnalyzer.java","repoName":"lucene","snippetEndLine":0,"snippetStartLine":0,"startLine":58,"status":"M"},{"authorDate":"2012-06-11 01:42:19","commitOrder":7,"curCode":"  public void testUnlimitedMaxFieldLength() throws IOException {\n    Directory dir = newDirectory();\n\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n\n    Document doc = new Document();\n    StringBuilder b = new StringBuilder();\n    for(int i=0;i<10000;i++)\n      b.append(\" a\");\n    b.append(\" x\");\n    doc.add(newTextField(\"field\", b.toString(), Field.Store.NO));\n    writer.addDocument(doc);\n    writer.close();\n\n    IndexReader reader = DirectoryReader.open(dir);\n    Term t = new Term(\"field\", \"x\");\n    assertEquals(1, reader.docFreq(t));\n    reader.close();\n    dir.close();\n  }\n","date":"2012-06-11 01:42:19","endLine":751,"groupId":"53087","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"testUnlimitedMaxFieldLength","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-lucene-10-0.7/blobInfo/CC_OUT/blobs/98/104d6700e89c66c8aa7a72e77ec503e47a2447.src","preCode":"  public void testUnlimitedMaxFieldLength() throws IOException {\n    Directory dir = newDirectory();\n\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n\n    Document doc = new Document();\n    StringBuilder b = new StringBuilder();\n    for(int i=0;i<10000;i++)\n      b.append(\" a\");\n    b.append(\" x\");\n    doc.add(newTextField(\"field\", b.toString(), Field.Store.NO));\n    writer.addDocument(doc);\n    writer.close();\n\n    IndexReader reader = DirectoryReader.open(dir);\n    Term t = new Term(\"field\", \"x\");\n    assertEquals(1, reader.docFreq(t));\n    reader.close();\n    dir.close();\n  }\n","realPath":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter.java","repoName":"lucene","snippetEndLine":0,"snippetStartLine":0,"startLine":732,"status":"N"}],"commitId":"36b2f2512b53b3c4d5951dbeaf7d25106a806413","commitMessage":"@@@LUCENE-5449: Rename _TestUtil to TestUtil.\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1569597 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2014-02-19 09:38:33","modifiedFileCount":"321","status":"M","submitter":"Benson Margulies"},{"authorTime":"2014-04-08 23:34:50","codes":[{"authorDate":"2014-04-08 23:34:50","commitOrder":8,"curCode":"  public void testLimitTokenCountIndexWriter() throws IOException {\n    \n    for (boolean consumeAll : new boolean[] { true, false }) {\n      Directory dir = newDirectory();\n      int limit = TestUtil.nextInt(random(), 50, 101000);\n      MockAnalyzer mock = new MockAnalyzer(random());\n\n      \r\n      \r\n      mock.setEnableChecks(consumeAll);\n      Analyzer a = new LimitTokenCountAnalyzer(mock, limit, consumeAll);\n\n      IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig\n                                           (TEST_VERSION_CURRENT, a));\n\n      Document doc = new Document();\n      StringBuilder b = new StringBuilder();\n      for(int i=1;i<limit;i++)\n        b.append(\" a\");\n      b.append(\" x\");\n      b.append(\" z\");\n      doc.add(newTextField(\"field\", b.toString(), Field.Store.NO));\n      writer.addDocument(doc);\n      writer.shutdown();\n      \n      IndexReader reader = DirectoryReader.open(dir);\n      Term t = new Term(\"field\", \"x\");\n      assertEquals(1, reader.docFreq(t));\n      t = new Term(\"field\", \"z\");\n      assertEquals(0, reader.docFreq(t));\n      reader.close();\n      dir.close();\n    }\n  }\n","date":"2014-04-08 23:34:50","endLine":91,"groupId":"60624","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"testLimitTokenCountIndexWriter","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-lucene-10-0.7/blobInfo/CC_OUT/blobs/bb/e34e36d1a483aed792e189fb1d887e512c07d9.src","preCode":"  public void testLimitTokenCountIndexWriter() throws IOException {\n    \n    for (boolean consumeAll : new boolean[] { true, false }) {\n      Directory dir = newDirectory();\n      int limit = TestUtil.nextInt(random(), 50, 101000);\n      MockAnalyzer mock = new MockAnalyzer(random());\n\n      \r\n      \r\n      mock.setEnableChecks(consumeAll);\n      Analyzer a = new LimitTokenCountAnalyzer(mock, limit, consumeAll);\n\n      IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig\n                                           (TEST_VERSION_CURRENT, a));\n\n      Document doc = new Document();\n      StringBuilder b = new StringBuilder();\n      for(int i=1;i<limit;i++)\n        b.append(\" a\");\n      b.append(\" x\");\n      b.append(\" z\");\n      doc.add(newTextField(\"field\", b.toString(), Field.Store.NO));\n      writer.addDocument(doc);\n      writer.close();\n      \n      IndexReader reader = DirectoryReader.open(dir);\n      Term t = new Term(\"field\", \"x\");\n      assertEquals(1, reader.docFreq(t));\n      t = new Term(\"field\", \"z\");\n      assertEquals(0, reader.docFreq(t));\n      reader.close();\n      dir.close();\n    }\n  }\n","realPath":"lucene/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/TestLimitTokenCountAnalyzer.java","repoName":"lucene","snippetEndLine":0,"snippetStartLine":0,"startLine":58,"status":"M"},{"authorDate":"2014-04-08 23:34:50","commitOrder":8,"curCode":"  public void testUnlimitedMaxFieldLength() throws IOException {\n    Directory dir = newDirectory();\n\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n\n    Document doc = new Document();\n    StringBuilder b = new StringBuilder();\n    for(int i=0;i<10000;i++)\n      b.append(\" a\");\n    b.append(\" x\");\n    doc.add(newTextField(\"field\", b.toString(), Field.Store.NO));\n    writer.addDocument(doc);\n    writer.shutdown();\n\n    IndexReader reader = DirectoryReader.open(dir);\n    Term t = new Term(\"field\", \"x\");\n    assertEquals(1, reader.docFreq(t));\n    reader.close();\n    dir.close();\n  }\n","date":"2014-04-08 23:34:50","endLine":772,"groupId":"53087","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"testUnlimitedMaxFieldLength","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-lucene-10-0.7/blobInfo/CC_OUT/blobs/f3/445005ff27602e75a2bc132428ad04d578fe3e.src","preCode":"  public void testUnlimitedMaxFieldLength() throws IOException {\n    Directory dir = newDirectory();\n\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n\n    Document doc = new Document();\n    StringBuilder b = new StringBuilder();\n    for(int i=0;i<10000;i++)\n      b.append(\" a\");\n    b.append(\" x\");\n    doc.add(newTextField(\"field\", b.toString(), Field.Store.NO));\n    writer.addDocument(doc);\n    writer.close();\n\n    IndexReader reader = DirectoryReader.open(dir);\n    Term t = new Term(\"field\", \"x\");\n    assertEquals(1, reader.docFreq(t));\n    reader.close();\n    dir.close();\n  }\n","realPath":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter.java","repoName":"lucene","snippetEndLine":0,"snippetStartLine":0,"startLine":753,"status":"M"}],"commitId":"8559eafd99e5b569d4ad866e98f410fb4868fd4c","commitMessage":"@@@LUCENE-4246: fix IW.close to just close.  even on exception\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1585759 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2014-04-08 23:34:50","modifiedFileCount":"403","status":"M","submitter":"Michael McCandless"},{"authorTime":"2014-07-31 00:20:24","codes":[{"authorDate":"2014-04-08 23:34:50","commitOrder":9,"curCode":"  public void testLimitTokenCountIndexWriter() throws IOException {\n    \n    for (boolean consumeAll : new boolean[] { true, false }) {\n      Directory dir = newDirectory();\n      int limit = TestUtil.nextInt(random(), 50, 101000);\n      MockAnalyzer mock = new MockAnalyzer(random());\n\n      \r\n      \r\n      mock.setEnableChecks(consumeAll);\n      Analyzer a = new LimitTokenCountAnalyzer(mock, limit, consumeAll);\n\n      IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig\n                                           (TEST_VERSION_CURRENT, a));\n\n      Document doc = new Document();\n      StringBuilder b = new StringBuilder();\n      for(int i=1;i<limit;i++)\n        b.append(\" a\");\n      b.append(\" x\");\n      b.append(\" z\");\n      doc.add(newTextField(\"field\", b.toString(), Field.Store.NO));\n      writer.addDocument(doc);\n      writer.shutdown();\n      \n      IndexReader reader = DirectoryReader.open(dir);\n      Term t = new Term(\"field\", \"x\");\n      assertEquals(1, reader.docFreq(t));\n      t = new Term(\"field\", \"z\");\n      assertEquals(0, reader.docFreq(t));\n      reader.close();\n      dir.close();\n    }\n  }\n","date":"2014-04-08 23:34:50","endLine":91,"groupId":"60624","id":13,"instanceNumber":1,"isCurCommit":0,"methodName":"testLimitTokenCountIndexWriter","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-lucene-10-0.7/blobInfo/CC_OUT/blobs/bb/e34e36d1a483aed792e189fb1d887e512c07d9.src","preCode":"  public void testLimitTokenCountIndexWriter() throws IOException {\n    \n    for (boolean consumeAll : new boolean[] { true, false }) {\n      Directory dir = newDirectory();\n      int limit = TestUtil.nextInt(random(), 50, 101000);\n      MockAnalyzer mock = new MockAnalyzer(random());\n\n      \r\n      \r\n      mock.setEnableChecks(consumeAll);\n      Analyzer a = new LimitTokenCountAnalyzer(mock, limit, consumeAll);\n\n      IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig\n                                           (TEST_VERSION_CURRENT, a));\n\n      Document doc = new Document();\n      StringBuilder b = new StringBuilder();\n      for(int i=1;i<limit;i++)\n        b.append(\" a\");\n      b.append(\" x\");\n      b.append(\" z\");\n      doc.add(newTextField(\"field\", b.toString(), Field.Store.NO));\n      writer.addDocument(doc);\n      writer.shutdown();\n      \n      IndexReader reader = DirectoryReader.open(dir);\n      Term t = new Term(\"field\", \"x\");\n      assertEquals(1, reader.docFreq(t));\n      t = new Term(\"field\", \"z\");\n      assertEquals(0, reader.docFreq(t));\n      reader.close();\n      dir.close();\n    }\n  }\n","realPath":"lucene/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/TestLimitTokenCountAnalyzer.java","repoName":"lucene","snippetEndLine":0,"snippetStartLine":0,"startLine":58,"status":"N"},{"authorDate":"2014-07-31 00:20:24","commitOrder":9,"curCode":"  public void testUnlimitedMaxFieldLength() throws IOException {\n    Directory dir = newDirectory();\n\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(new MockAnalyzer(random())));\n\n    Document doc = new Document();\n    StringBuilder b = new StringBuilder();\n    for(int i=0;i<10000;i++)\n      b.append(\" a\");\n    b.append(\" x\");\n    doc.add(newTextField(\"field\", b.toString(), Field.Store.NO));\n    writer.addDocument(doc);\n    writer.shutdown();\n\n    IndexReader reader = DirectoryReader.open(dir);\n    Term t = new Term(\"field\", \"x\");\n    assertEquals(1, reader.docFreq(t));\n    reader.close();\n    dir.close();\n  }\n","date":"2014-07-31 00:20:24","endLine":787,"groupId":"53087","id":14,"instanceNumber":2,"isCurCommit":0,"methodName":"testUnlimitedMaxFieldLength","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-lucene-10-0.7/blobInfo/CC_OUT/blobs/1b/b805c014321dd4a0e309653c221ddd9f9cb201.src","preCode":"  public void testUnlimitedMaxFieldLength() throws IOException {\n    Directory dir = newDirectory();\n\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n\n    Document doc = new Document();\n    StringBuilder b = new StringBuilder();\n    for(int i=0;i<10000;i++)\n      b.append(\" a\");\n    b.append(\" x\");\n    doc.add(newTextField(\"field\", b.toString(), Field.Store.NO));\n    writer.addDocument(doc);\n    writer.shutdown();\n\n    IndexReader reader = DirectoryReader.open(dir);\n    Term t = new Term(\"field\", \"x\");\n    assertEquals(1, reader.docFreq(t));\n    reader.close();\n    dir.close();\n  }\n","realPath":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter.java","repoName":"lucene","snippetEndLine":0,"snippetStartLine":0,"startLine":768,"status":"M"}],"commitId":"3f4b2b472f2c76d72cae94fd4747b103c973d707","commitMessage":"@@@LUCENE-5859: remove Version param from LuceneTestCase.newIndexWriterConfig.  the grand sum of 2 tests making use of it can use the 3-arg version and reduce the noise everywhere else\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1614698 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2014-07-31 00:20:24","modifiedFileCount":"244","status":"M","submitter":"Robert Muir"},{"authorTime":"2014-08-10 02:54:35","codes":[{"authorDate":"2014-08-10 02:54:35","commitOrder":10,"curCode":"  public void testLimitTokenCountIndexWriter() throws IOException {\n    \n    for (boolean consumeAll : new boolean[] { true, false }) {\n      Directory dir = newDirectory();\n      int limit = TestUtil.nextInt(random(), 50, 101000);\n      MockAnalyzer mock = new MockAnalyzer(random());\n\n      \r\n      \r\n      mock.setEnableChecks(consumeAll);\n      Analyzer a = new LimitTokenCountAnalyzer(mock, limit, consumeAll);\n\n      IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(a));\n\n      Document doc = new Document();\n      StringBuilder b = new StringBuilder();\n      for(int i=1;i<limit;i++)\n        b.append(\" a\");\n      b.append(\" x\");\n      b.append(\" z\");\n      doc.add(newTextField(\"field\", b.toString(), Field.Store.NO));\n      writer.addDocument(doc);\n      writer.close();\n      \n      IndexReader reader = DirectoryReader.open(dir);\n      Term t = new Term(\"field\", \"x\");\n      assertEquals(1, reader.docFreq(t));\n      t = new Term(\"field\", \"z\");\n      assertEquals(0, reader.docFreq(t));\n      reader.close();\n      dir.close();\n    }\n  }\n","date":"2014-08-10 02:54:35","endLine":90,"groupId":"4088","id":15,"instanceNumber":1,"isCurCommit":0,"methodName":"testLimitTokenCountIndexWriter","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-lucene-10-0.7/blobInfo/CC_OUT/blobs/e4/2ad3fdee107e25351e6c83559f4f55f19ebc25.src","preCode":"  public void testLimitTokenCountIndexWriter() throws IOException {\n    \n    for (boolean consumeAll : new boolean[] { true, false }) {\n      Directory dir = newDirectory();\n      int limit = TestUtil.nextInt(random(), 50, 101000);\n      MockAnalyzer mock = new MockAnalyzer(random());\n\n      \r\n      \r\n      mock.setEnableChecks(consumeAll);\n      Analyzer a = new LimitTokenCountAnalyzer(mock, limit, consumeAll);\n\n      IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig\n                                           (TEST_VERSION_CURRENT, a));\n\n      Document doc = new Document();\n      StringBuilder b = new StringBuilder();\n      for(int i=1;i<limit;i++)\n        b.append(\" a\");\n      b.append(\" x\");\n      b.append(\" z\");\n      doc.add(newTextField(\"field\", b.toString(), Field.Store.NO));\n      writer.addDocument(doc);\n      writer.shutdown();\n      \n      IndexReader reader = DirectoryReader.open(dir);\n      Term t = new Term(\"field\", \"x\");\n      assertEquals(1, reader.docFreq(t));\n      t = new Term(\"field\", \"z\");\n      assertEquals(0, reader.docFreq(t));\n      reader.close();\n      dir.close();\n    }\n  }\n","realPath":"lucene/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/TestLimitTokenCountAnalyzer.java","repoName":"lucene","snippetEndLine":0,"snippetStartLine":0,"startLine":58,"status":"M"},{"authorDate":"2014-08-10 02:54:35","commitOrder":10,"curCode":"  public void testUnlimitedMaxFieldLength() throws IOException {\n    Directory dir = newDirectory();\n\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(new MockAnalyzer(random())));\n\n    Document doc = new Document();\n    StringBuilder b = new StringBuilder();\n    for(int i=0;i<10000;i++)\n      b.append(\" a\");\n    b.append(\" x\");\n    doc.add(newTextField(\"field\", b.toString(), Field.Store.NO));\n    writer.addDocument(doc);\n    writer.close();\n\n    IndexReader reader = DirectoryReader.open(dir);\n    Term t = new Term(\"field\", \"x\");\n    assertEquals(1, reader.docFreq(t));\n    reader.close();\n    dir.close();\n  }\n","date":"2014-08-10 02:54:35","endLine":785,"groupId":"53087","id":16,"instanceNumber":2,"isCurCommit":0,"methodName":"testUnlimitedMaxFieldLength","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-lucene-10-0.7/blobInfo/CC_OUT/blobs/3a/b166e097a65b60140228586a30087341c854b3.src","preCode":"  public void testUnlimitedMaxFieldLength() throws IOException {\n    Directory dir = newDirectory();\n\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(new MockAnalyzer(random())));\n\n    Document doc = new Document();\n    StringBuilder b = new StringBuilder();\n    for(int i=0;i<10000;i++)\n      b.append(\" a\");\n    b.append(\" x\");\n    doc.add(newTextField(\"field\", b.toString(), Field.Store.NO));\n    writer.addDocument(doc);\n    writer.shutdown();\n\n    IndexReader reader = DirectoryReader.open(dir);\n    Term t = new Term(\"field\", \"x\");\n    assertEquals(1, reader.docFreq(t));\n    reader.close();\n    dir.close();\n  }\n","realPath":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter.java","repoName":"lucene","snippetEndLine":0,"snippetStartLine":0,"startLine":766,"status":"M"}],"commitId":"872bd9145cd9504fc16b318f7ea0a666d9429103","commitMessage":"@@@LUCENE-5871: Remove Version from IndexWriterConfig\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1617004 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2014-08-10 02:54:35","modifiedFileCount":"450","status":"M","submitter":"Ryan Ernst"},{"authorTime":"2014-08-10 02:54:35","codes":[{"authorDate":"2015-03-06 00:45:02","commitOrder":11,"curCode":"  public void testLimitTokenCountIndexWriter() throws IOException {\n    \n    for (boolean consumeAll : new boolean[] { true, false }) {\n      Directory dir = newDirectory();\n      int limit = TestUtil.nextInt(random(), 50, 101000);\n      MockAnalyzer mock = new MockAnalyzer(random());\n\n      \r\n      \r\n      mock.setEnableChecks(consumeAll);\n      Analyzer a = new LimitTokenCountAnalyzer(mock, limit, consumeAll);\n\n      IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(a));\n\n      Document doc = new Document();\n      StringBuilder b = new StringBuilder();\n      for(int i=1;i<limit;i++)\n        b.append(\" a\");\n      b.append(\" x\");\n      b.append(\" z\");\n      doc.add(newTextField(\"field\", b.toString(), Field.Store.NO));\n      writer.addDocument(doc);\n      writer.close();\n      \n      IndexReader reader = DirectoryReader.open(dir);\n      Term t = new Term(\"field\", \"x\");\n      assertEquals(1, reader.docFreq(t));\n      t = new Term(\"field\", \"z\");\n      assertEquals(0, reader.docFreq(t));\n      reader.close();\n      dir.close();\n      a.close();\n    }\n  }\n","date":"2015-03-06 00:45:02","endLine":92,"groupId":"101396","id":17,"instanceNumber":1,"isCurCommit":0,"methodName":"testLimitTokenCountIndexWriter","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-lucene-10-0.7/blobInfo/CC_OUT/blobs/55/b07236fc0899089eefb16a749dc3cfd24cebc8.src","preCode":"  public void testLimitTokenCountIndexWriter() throws IOException {\n    \n    for (boolean consumeAll : new boolean[] { true, false }) {\n      Directory dir = newDirectory();\n      int limit = TestUtil.nextInt(random(), 50, 101000);\n      MockAnalyzer mock = new MockAnalyzer(random());\n\n      \r\n      \r\n      mock.setEnableChecks(consumeAll);\n      Analyzer a = new LimitTokenCountAnalyzer(mock, limit, consumeAll);\n\n      IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(a));\n\n      Document doc = new Document();\n      StringBuilder b = new StringBuilder();\n      for(int i=1;i<limit;i++)\n        b.append(\" a\");\n      b.append(\" x\");\n      b.append(\" z\");\n      doc.add(newTextField(\"field\", b.toString(), Field.Store.NO));\n      writer.addDocument(doc);\n      writer.close();\n      \n      IndexReader reader = DirectoryReader.open(dir);\n      Term t = new Term(\"field\", \"x\");\n      assertEquals(1, reader.docFreq(t));\n      t = new Term(\"field\", \"z\");\n      assertEquals(0, reader.docFreq(t));\n      reader.close();\n      dir.close();\n    }\n  }\n","realPath":"lucene/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/TestLimitTokenCountAnalyzer.java","repoName":"lucene","snippetEndLine":0,"snippetStartLine":0,"startLine":59,"status":"M"},{"authorDate":"2014-08-10 02:54:35","commitOrder":11,"curCode":"  public void testUnlimitedMaxFieldLength() throws IOException {\n    Directory dir = newDirectory();\n\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(new MockAnalyzer(random())));\n\n    Document doc = new Document();\n    StringBuilder b = new StringBuilder();\n    for(int i=0;i<10000;i++)\n      b.append(\" a\");\n    b.append(\" x\");\n    doc.add(newTextField(\"field\", b.toString(), Field.Store.NO));\n    writer.addDocument(doc);\n    writer.close();\n\n    IndexReader reader = DirectoryReader.open(dir);\n    Term t = new Term(\"field\", \"x\");\n    assertEquals(1, reader.docFreq(t));\n    reader.close();\n    dir.close();\n  }\n","date":"2014-08-10 02:54:35","endLine":785,"groupId":"101396","id":18,"instanceNumber":2,"isCurCommit":0,"methodName":"testUnlimitedMaxFieldLength","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-lucene-10-0.7/blobInfo/CC_OUT/blobs/3a/b166e097a65b60140228586a30087341c854b3.src","preCode":"  public void testUnlimitedMaxFieldLength() throws IOException {\n    Directory dir = newDirectory();\n\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(new MockAnalyzer(random())));\n\n    Document doc = new Document();\n    StringBuilder b = new StringBuilder();\n    for(int i=0;i<10000;i++)\n      b.append(\" a\");\n    b.append(\" x\");\n    doc.add(newTextField(\"field\", b.toString(), Field.Store.NO));\n    writer.addDocument(doc);\n    writer.close();\n\n    IndexReader reader = DirectoryReader.open(dir);\n    Term t = new Term(\"field\", \"x\");\n    assertEquals(1, reader.docFreq(t));\n    reader.close();\n    dir.close();\n  }\n","realPath":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter.java","repoName":"lucene","snippetEndLine":0,"snippetStartLine":0,"startLine":766,"status":"N"}],"commitId":"bb5e6238db695eee7d8f62b14305fa15c898df92","commitMessage":"@@@LUCENE-6335: test fixes.  and one real fix to synonymfilterfactory (missing analyzer.close)\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1664404 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2015-03-06 00:45:02","modifiedFileCount":"182","status":"M","submitter":"Robert Muir"}]
