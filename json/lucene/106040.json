[{"authorTime":"2014-04-01 15:36:45","codes":[{"authorDate":"2014-04-01 15:36:45","commitOrder":6,"curCode":"  public void test() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()));\n    conf.setCodec(new Lucene46Codec());\n    RandomIndexWriter riw = new RandomIndexWriter(random(), dir, conf);\n    Document doc = new Document();\n    \r\n    Field idField = newStringField(\"id\", \"\", Field.Store.NO);\n    Field bodyField = newTextField(\"body\", \"\", Field.Store.NO);\n    Field dvField = new NumericDocValuesField(\"dv\", 5);\n    doc.add(idField);\n    doc.add(bodyField);\n    doc.add(dvField);\n    for (int i = 0; i < 100; i++) {\n      idField.setStringValue(Integer.toString(i));\n      bodyField.setStringValue(TestUtil.randomUnicodeString(random()));\n      riw.addDocument(doc);\n      if (random().nextInt(7) == 0) {\n        riw.commit();\n      }\n      \r\n      \r\n      \r\n      \r\n    }\n    riw.close();\n    checkHeaders(dir);\n    dir.close();\n  }\n","date":"2014-04-01 15:36:45","endLine":67,"groupId":"47146","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"test","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-lucene-10-0.7/blobInfo/CC_OUT/blobs/e4/c998eb8610da598e762d93a0d24a338bff1f03.src","preCode":"  public void test() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()));\n    conf.setCodec(new Lucene46Codec());\n    RandomIndexWriter riw = new RandomIndexWriter(random(), dir, conf);\n    Document doc = new Document();\n    \r\n    Field idField = newStringField(\"id\", \"\", Field.Store.NO);\n    Field bodyField = newTextField(\"body\", \"\", Field.Store.NO);\n    Field dvField = new NumericDocValuesField(\"dv\", 5);\n    doc.add(idField);\n    doc.add(bodyField);\n    doc.add(dvField);\n    for (int i = 0; i < 100; i++) {\n      idField.setStringValue(Integer.toString(i));\n      bodyField.setStringValue(TestUtil.randomUnicodeString(random()));\n      riw.addDocument(doc);\n      if (random().nextInt(7) == 0) {\n        riw.commit();\n      }\n      \r\n      \r\n      \r\n      \r\n    }\n    riw.close();\n    checkHeaders(dir);\n    dir.close();\n  }\n","realPath":"lucene/core/src/test/org/apache/lucene/index/TestAllFilesHaveCodecHeader.java","repoName":"lucene","snippetEndLine":0,"snippetStartLine":0,"startLine":39,"status":"MB"},{"authorDate":"2014-04-01 15:36:45","commitOrder":6,"curCode":"  public void test() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()));\n    conf.setCodec(new Lucene46Codec());\n    RandomIndexWriter riw = new RandomIndexWriter(random(), dir, conf);\n    Document doc = new Document();\n    \r\n    Field idField = newStringField(\"id\", \"\", Field.Store.NO);\n    Field bodyField = newTextField(\"body\", \"\", Field.Store.NO);\n    Field dvField = new NumericDocValuesField(\"dv\", 5);\n    doc.add(idField);\n    doc.add(bodyField);\n    doc.add(dvField);\n    for (int i = 0; i < 100; i++) {\n      idField.setStringValue(Integer.toString(i));\n      bodyField.setStringValue(TestUtil.randomUnicodeString(random()));\n      riw.addDocument(doc);\n      if (random().nextInt(7) == 0) {\n        riw.commit();\n      }\n      if (random().nextInt(20) == 0) {\n        riw.deleteDocuments(new Term(\"id\", Integer.toString(i)));\n      }\n    }\n    riw.close();\n    checkHeaders(dir);\n    dir.close();\n  }\n","date":"2014-04-01 15:36:45","endLine":66,"groupId":"47146","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"test","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-lucene-10-0.7/blobInfo/CC_OUT/blobs/7f/7e9bf11971659c728288341efc2dff2e6f538f.src","preCode":"  public void test() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()));\n    conf.setCodec(new Lucene46Codec());\n    RandomIndexWriter riw = new RandomIndexWriter(random(), dir, conf);\n    Document doc = new Document();\n    \r\n    Field idField = newStringField(\"id\", \"\", Field.Store.NO);\n    Field bodyField = newTextField(\"body\", \"\", Field.Store.NO);\n    Field dvField = new NumericDocValuesField(\"dv\", 5);\n    doc.add(idField);\n    doc.add(bodyField);\n    doc.add(dvField);\n    for (int i = 0; i < 100; i++) {\n      idField.setStringValue(Integer.toString(i));\n      bodyField.setStringValue(TestUtil.randomUnicodeString(random()));\n      riw.addDocument(doc);\n      if (random().nextInt(7) == 0) {\n        riw.commit();\n      }\n      if (random().nextInt(20) == 0) {\n        riw.deleteDocuments(new Term(\"id\", Integer.toString(i)));\n      }\n    }\n    riw.close();\n    checkHeaders(dir);\n    dir.close();\n  }\n","realPath":"lucene/core/src/test/org/apache/lucene/index/TestAllFilesHaveChecksumFooter.java","repoName":"lucene","snippetEndLine":0,"snippetStartLine":0,"startLine":39,"status":"B"}],"commitId":"c189d0fb74dd1632c18d7c87d490516ff08b3fae","commitMessage":"@@@LUCENE-2446: add checksums to index files\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1583550 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2014-04-01 15:36:45","modifiedFileCount":"111","status":"M","submitter":"Robert Muir"},{"authorTime":"2014-04-08 23:34:50","codes":[{"authorDate":"2014-04-08 23:34:50","commitOrder":7,"curCode":"  public void test() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()));\n    conf.setCodec(new Lucene46Codec());\n    RandomIndexWriter riw = new RandomIndexWriter(random(), dir, conf);\n    Document doc = new Document();\n    \r\n    Field idField = newStringField(\"id\", \"\", Field.Store.NO);\n    Field bodyField = newTextField(\"body\", \"\", Field.Store.NO);\n    Field dvField = new NumericDocValuesField(\"dv\", 5);\n    doc.add(idField);\n    doc.add(bodyField);\n    doc.add(dvField);\n    for (int i = 0; i < 100; i++) {\n      idField.setStringValue(Integer.toString(i));\n      bodyField.setStringValue(TestUtil.randomUnicodeString(random()));\n      riw.addDocument(doc);\n      if (random().nextInt(7) == 0) {\n        riw.commit();\n      }\n      \r\n      \r\n      \r\n      \r\n    }\n    riw.shutdown();\n    checkHeaders(dir);\n    dir.close();\n  }\n","date":"2014-04-08 23:34:50","endLine":67,"groupId":"47146","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"test","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-lucene-10-0.7/blobInfo/CC_OUT/blobs/be/2654da199820179bf2a85cf334494e7167eb8f.src","preCode":"  public void test() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()));\n    conf.setCodec(new Lucene46Codec());\n    RandomIndexWriter riw = new RandomIndexWriter(random(), dir, conf);\n    Document doc = new Document();\n    \r\n    Field idField = newStringField(\"id\", \"\", Field.Store.NO);\n    Field bodyField = newTextField(\"body\", \"\", Field.Store.NO);\n    Field dvField = new NumericDocValuesField(\"dv\", 5);\n    doc.add(idField);\n    doc.add(bodyField);\n    doc.add(dvField);\n    for (int i = 0; i < 100; i++) {\n      idField.setStringValue(Integer.toString(i));\n      bodyField.setStringValue(TestUtil.randomUnicodeString(random()));\n      riw.addDocument(doc);\n      if (random().nextInt(7) == 0) {\n        riw.commit();\n      }\n      \r\n      \r\n      \r\n      \r\n    }\n    riw.close();\n    checkHeaders(dir);\n    dir.close();\n  }\n","realPath":"lucene/core/src/test/org/apache/lucene/index/TestAllFilesHaveCodecHeader.java","repoName":"lucene","snippetEndLine":0,"snippetStartLine":0,"startLine":39,"status":"M"},{"authorDate":"2014-04-08 23:34:50","commitOrder":7,"curCode":"  public void test() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()));\n    conf.setCodec(new Lucene46Codec());\n    RandomIndexWriter riw = new RandomIndexWriter(random(), dir, conf);\n    Document doc = new Document();\n    \r\n    Field idField = newStringField(\"id\", \"\", Field.Store.NO);\n    Field bodyField = newTextField(\"body\", \"\", Field.Store.NO);\n    Field dvField = new NumericDocValuesField(\"dv\", 5);\n    doc.add(idField);\n    doc.add(bodyField);\n    doc.add(dvField);\n    for (int i = 0; i < 100; i++) {\n      idField.setStringValue(Integer.toString(i));\n      bodyField.setStringValue(TestUtil.randomUnicodeString(random()));\n      riw.addDocument(doc);\n      if (random().nextInt(7) == 0) {\n        riw.commit();\n      }\n      if (random().nextInt(20) == 0) {\n        riw.deleteDocuments(new Term(\"id\", Integer.toString(i)));\n      }\n    }\n    riw.shutdown();\n    checkHeaders(dir);\n    dir.close();\n  }\n","date":"2014-04-08 23:34:50","endLine":66,"groupId":"47146","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"test","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-lucene-10-0.7/blobInfo/CC_OUT/blobs/21/97faabc13d490757ba4ea2e991e02773f2d512.src","preCode":"  public void test() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()));\n    conf.setCodec(new Lucene46Codec());\n    RandomIndexWriter riw = new RandomIndexWriter(random(), dir, conf);\n    Document doc = new Document();\n    \r\n    Field idField = newStringField(\"id\", \"\", Field.Store.NO);\n    Field bodyField = newTextField(\"body\", \"\", Field.Store.NO);\n    Field dvField = new NumericDocValuesField(\"dv\", 5);\n    doc.add(idField);\n    doc.add(bodyField);\n    doc.add(dvField);\n    for (int i = 0; i < 100; i++) {\n      idField.setStringValue(Integer.toString(i));\n      bodyField.setStringValue(TestUtil.randomUnicodeString(random()));\n      riw.addDocument(doc);\n      if (random().nextInt(7) == 0) {\n        riw.commit();\n      }\n      if (random().nextInt(20) == 0) {\n        riw.deleteDocuments(new Term(\"id\", Integer.toString(i)));\n      }\n    }\n    riw.close();\n    checkHeaders(dir);\n    dir.close();\n  }\n","realPath":"lucene/core/src/test/org/apache/lucene/index/TestAllFilesHaveChecksumFooter.java","repoName":"lucene","snippetEndLine":0,"snippetStartLine":0,"startLine":39,"status":"M"}],"commitId":"8559eafd99e5b569d4ad866e98f410fb4868fd4c","commitMessage":"@@@LUCENE-4246: fix IW.close to just close.  even on exception\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1585759 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2014-04-08 23:34:50","modifiedFileCount":"403","status":"M","submitter":"Michael McCandless"},{"authorTime":"2014-06-05 02:26:04","codes":[{"authorDate":"2014-06-05 02:26:04","commitOrder":8,"curCode":"  public void test() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()));\n    conf.setCodec(new Lucene49Codec());\n    RandomIndexWriter riw = new RandomIndexWriter(random(), dir, conf);\n    Document doc = new Document();\n    \r\n    Field idField = newStringField(\"id\", \"\", Field.Store.NO);\n    Field bodyField = newTextField(\"body\", \"\", Field.Store.NO);\n    Field dvField = new NumericDocValuesField(\"dv\", 5);\n    doc.add(idField);\n    doc.add(bodyField);\n    doc.add(dvField);\n    for (int i = 0; i < 100; i++) {\n      idField.setStringValue(Integer.toString(i));\n      bodyField.setStringValue(TestUtil.randomUnicodeString(random()));\n      riw.addDocument(doc);\n      if (random().nextInt(7) == 0) {\n        riw.commit();\n      }\n      \r\n      \r\n      \r\n      \r\n    }\n    riw.shutdown();\n    checkHeaders(dir);\n    dir.close();\n  }\n","date":"2014-06-05 02:26:04","endLine":67,"groupId":"47146","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"test","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-lucene-10-0.7/blobInfo/CC_OUT/blobs/bc/9e2622720165f2bae63bb36d51222db04f6b0c.src","preCode":"  public void test() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()));\n    conf.setCodec(new Lucene46Codec());\n    RandomIndexWriter riw = new RandomIndexWriter(random(), dir, conf);\n    Document doc = new Document();\n    \r\n    Field idField = newStringField(\"id\", \"\", Field.Store.NO);\n    Field bodyField = newTextField(\"body\", \"\", Field.Store.NO);\n    Field dvField = new NumericDocValuesField(\"dv\", 5);\n    doc.add(idField);\n    doc.add(bodyField);\n    doc.add(dvField);\n    for (int i = 0; i < 100; i++) {\n      idField.setStringValue(Integer.toString(i));\n      bodyField.setStringValue(TestUtil.randomUnicodeString(random()));\n      riw.addDocument(doc);\n      if (random().nextInt(7) == 0) {\n        riw.commit();\n      }\n      \r\n      \r\n      \r\n      \r\n    }\n    riw.shutdown();\n    checkHeaders(dir);\n    dir.close();\n  }\n","realPath":"lucene/core/src/test/org/apache/lucene/index/TestAllFilesHaveCodecHeader.java","repoName":"lucene","snippetEndLine":0,"snippetStartLine":0,"startLine":39,"status":"M"},{"authorDate":"2014-06-05 02:26:04","commitOrder":8,"curCode":"  public void test() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()));\n    conf.setCodec(new Lucene49Codec());\n    RandomIndexWriter riw = new RandomIndexWriter(random(), dir, conf);\n    Document doc = new Document();\n    \r\n    Field idField = newStringField(\"id\", \"\", Field.Store.NO);\n    Field bodyField = newTextField(\"body\", \"\", Field.Store.NO);\n    Field dvField = new NumericDocValuesField(\"dv\", 5);\n    doc.add(idField);\n    doc.add(bodyField);\n    doc.add(dvField);\n    for (int i = 0; i < 100; i++) {\n      idField.setStringValue(Integer.toString(i));\n      bodyField.setStringValue(TestUtil.randomUnicodeString(random()));\n      riw.addDocument(doc);\n      if (random().nextInt(7) == 0) {\n        riw.commit();\n      }\n      if (random().nextInt(20) == 0) {\n        riw.deleteDocuments(new Term(\"id\", Integer.toString(i)));\n      }\n    }\n    riw.shutdown();\n    checkHeaders(dir);\n    dir.close();\n  }\n","date":"2014-06-05 02:26:04","endLine":66,"groupId":"47146","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"test","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-lucene-10-0.7/blobInfo/CC_OUT/blobs/95/cd61799934fcd3d9eafc5df8eff61021cf4426.src","preCode":"  public void test() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()));\n    conf.setCodec(new Lucene46Codec());\n    RandomIndexWriter riw = new RandomIndexWriter(random(), dir, conf);\n    Document doc = new Document();\n    \r\n    Field idField = newStringField(\"id\", \"\", Field.Store.NO);\n    Field bodyField = newTextField(\"body\", \"\", Field.Store.NO);\n    Field dvField = new NumericDocValuesField(\"dv\", 5);\n    doc.add(idField);\n    doc.add(bodyField);\n    doc.add(dvField);\n    for (int i = 0; i < 100; i++) {\n      idField.setStringValue(Integer.toString(i));\n      bodyField.setStringValue(TestUtil.randomUnicodeString(random()));\n      riw.addDocument(doc);\n      if (random().nextInt(7) == 0) {\n        riw.commit();\n      }\n      if (random().nextInt(20) == 0) {\n        riw.deleteDocuments(new Term(\"id\", Integer.toString(i)));\n      }\n    }\n    riw.shutdown();\n    checkHeaders(dir);\n    dir.close();\n  }\n","realPath":"lucene/core/src/test/org/apache/lucene/index/TestAllFilesHaveChecksumFooter.java","repoName":"lucene","snippetEndLine":0,"snippetStartLine":0,"startLine":39,"status":"M"}],"commitId":"9e6c1432a6b9e5483982fb2d4d2982779f192b7a","commitMessage":"@@@LUCENE-5731: split out direct packed ints from in-ram ones\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1600412 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2014-06-05 02:26:04","modifiedFileCount":"48","status":"M","submitter":"Robert Muir"},{"authorTime":"2014-07-31 00:20:24","codes":[{"authorDate":"2014-07-31 00:20:24","commitOrder":9,"curCode":"  public void test() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(new MockAnalyzer(random()));\n    conf.setCodec(new Lucene49Codec());\n    RandomIndexWriter riw = new RandomIndexWriter(random(), dir, conf);\n    Document doc = new Document();\n    \r\n    Field idField = newStringField(\"id\", \"\", Field.Store.NO);\n    Field bodyField = newTextField(\"body\", \"\", Field.Store.NO);\n    Field dvField = new NumericDocValuesField(\"dv\", 5);\n    doc.add(idField);\n    doc.add(bodyField);\n    doc.add(dvField);\n    for (int i = 0; i < 100; i++) {\n      idField.setStringValue(Integer.toString(i));\n      bodyField.setStringValue(TestUtil.randomUnicodeString(random()));\n      riw.addDocument(doc);\n      if (random().nextInt(7) == 0) {\n        riw.commit();\n      }\n      \r\n      \r\n      \r\n      \r\n    }\n    riw.shutdown();\n    checkHeaders(dir);\n    dir.close();\n  }\n","date":"2014-07-31 00:20:24","endLine":67,"groupId":"47146","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"test","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-lucene-10-0.7/blobInfo/CC_OUT/blobs/cb/3192b6a7819044a0c5c2ed09058a1c7866e0ad.src","preCode":"  public void test() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()));\n    conf.setCodec(new Lucene49Codec());\n    RandomIndexWriter riw = new RandomIndexWriter(random(), dir, conf);\n    Document doc = new Document();\n    \r\n    Field idField = newStringField(\"id\", \"\", Field.Store.NO);\n    Field bodyField = newTextField(\"body\", \"\", Field.Store.NO);\n    Field dvField = new NumericDocValuesField(\"dv\", 5);\n    doc.add(idField);\n    doc.add(bodyField);\n    doc.add(dvField);\n    for (int i = 0; i < 100; i++) {\n      idField.setStringValue(Integer.toString(i));\n      bodyField.setStringValue(TestUtil.randomUnicodeString(random()));\n      riw.addDocument(doc);\n      if (random().nextInt(7) == 0) {\n        riw.commit();\n      }\n      \r\n      \r\n      \r\n      \r\n    }\n    riw.shutdown();\n    checkHeaders(dir);\n    dir.close();\n  }\n","realPath":"lucene/core/src/test/org/apache/lucene/index/TestAllFilesHaveCodecHeader.java","repoName":"lucene","snippetEndLine":0,"snippetStartLine":0,"startLine":39,"status":"M"},{"authorDate":"2014-07-31 00:20:24","commitOrder":9,"curCode":"  public void test() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(new MockAnalyzer(random()));\n    conf.setCodec(new Lucene49Codec());\n    RandomIndexWriter riw = new RandomIndexWriter(random(), dir, conf);\n    Document doc = new Document();\n    \r\n    Field idField = newStringField(\"id\", \"\", Field.Store.NO);\n    Field bodyField = newTextField(\"body\", \"\", Field.Store.NO);\n    Field dvField = new NumericDocValuesField(\"dv\", 5);\n    doc.add(idField);\n    doc.add(bodyField);\n    doc.add(dvField);\n    for (int i = 0; i < 100; i++) {\n      idField.setStringValue(Integer.toString(i));\n      bodyField.setStringValue(TestUtil.randomUnicodeString(random()));\n      riw.addDocument(doc);\n      if (random().nextInt(7) == 0) {\n        riw.commit();\n      }\n      if (random().nextInt(20) == 0) {\n        riw.deleteDocuments(new Term(\"id\", Integer.toString(i)));\n      }\n    }\n    riw.shutdown();\n    checkHeaders(dir);\n    dir.close();\n  }\n","date":"2014-07-31 00:20:24","endLine":66,"groupId":"47146","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"test","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-lucene-10-0.7/blobInfo/CC_OUT/blobs/00/a6917b5973028b769c9e0a1b19c7c030e88142.src","preCode":"  public void test() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()));\n    conf.setCodec(new Lucene49Codec());\n    RandomIndexWriter riw = new RandomIndexWriter(random(), dir, conf);\n    Document doc = new Document();\n    \r\n    Field idField = newStringField(\"id\", \"\", Field.Store.NO);\n    Field bodyField = newTextField(\"body\", \"\", Field.Store.NO);\n    Field dvField = new NumericDocValuesField(\"dv\", 5);\n    doc.add(idField);\n    doc.add(bodyField);\n    doc.add(dvField);\n    for (int i = 0; i < 100; i++) {\n      idField.setStringValue(Integer.toString(i));\n      bodyField.setStringValue(TestUtil.randomUnicodeString(random()));\n      riw.addDocument(doc);\n      if (random().nextInt(7) == 0) {\n        riw.commit();\n      }\n      if (random().nextInt(20) == 0) {\n        riw.deleteDocuments(new Term(\"id\", Integer.toString(i)));\n      }\n    }\n    riw.shutdown();\n    checkHeaders(dir);\n    dir.close();\n  }\n","realPath":"lucene/core/src/test/org/apache/lucene/index/TestAllFilesHaveChecksumFooter.java","repoName":"lucene","snippetEndLine":0,"snippetStartLine":0,"startLine":39,"status":"M"}],"commitId":"3f4b2b472f2c76d72cae94fd4747b103c973d707","commitMessage":"@@@LUCENE-5859: remove Version param from LuceneTestCase.newIndexWriterConfig.  the grand sum of 2 tests making use of it can use the 3-arg version and reduce the noise everywhere else\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1614698 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2014-07-31 00:20:24","modifiedFileCount":"244","status":"M","submitter":"Robert Muir"},{"authorTime":"2014-08-10 02:54:35","codes":[{"authorDate":"2014-08-10 02:54:35","commitOrder":10,"curCode":"  public void test() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(new MockAnalyzer(random()));\n    conf.setCodec(new Lucene49Codec());\n    RandomIndexWriter riw = new RandomIndexWriter(random(), dir, conf);\n    Document doc = new Document();\n    \r\n    Field idField = newStringField(\"id\", \"\", Field.Store.NO);\n    Field bodyField = newTextField(\"body\", \"\", Field.Store.NO);\n    Field dvField = new NumericDocValuesField(\"dv\", 5);\n    doc.add(idField);\n    doc.add(bodyField);\n    doc.add(dvField);\n    for (int i = 0; i < 100; i++) {\n      idField.setStringValue(Integer.toString(i));\n      bodyField.setStringValue(TestUtil.randomUnicodeString(random()));\n      riw.addDocument(doc);\n      if (random().nextInt(7) == 0) {\n        riw.commit();\n      }\n      \r\n      \r\n      \r\n      \r\n    }\n    riw.close();\n    checkHeaders(dir);\n    dir.close();\n  }\n","date":"2014-08-10 02:54:35","endLine":67,"groupId":"47146","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"test","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-lucene-10-0.7/blobInfo/CC_OUT/blobs/a9/3df4945efd49089352939e6445989676bfe77f.src","preCode":"  public void test() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(new MockAnalyzer(random()));\n    conf.setCodec(new Lucene49Codec());\n    RandomIndexWriter riw = new RandomIndexWriter(random(), dir, conf);\n    Document doc = new Document();\n    \r\n    Field idField = newStringField(\"id\", \"\", Field.Store.NO);\n    Field bodyField = newTextField(\"body\", \"\", Field.Store.NO);\n    Field dvField = new NumericDocValuesField(\"dv\", 5);\n    doc.add(idField);\n    doc.add(bodyField);\n    doc.add(dvField);\n    for (int i = 0; i < 100; i++) {\n      idField.setStringValue(Integer.toString(i));\n      bodyField.setStringValue(TestUtil.randomUnicodeString(random()));\n      riw.addDocument(doc);\n      if (random().nextInt(7) == 0) {\n        riw.commit();\n      }\n      \r\n      \r\n      \r\n      \r\n    }\n    riw.shutdown();\n    checkHeaders(dir);\n    dir.close();\n  }\n","realPath":"lucene/core/src/test/org/apache/lucene/index/TestAllFilesHaveCodecHeader.java","repoName":"lucene","snippetEndLine":0,"snippetStartLine":0,"startLine":39,"status":"M"},{"authorDate":"2014-08-10 02:54:35","commitOrder":10,"curCode":"  public void test() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(new MockAnalyzer(random()));\n    conf.setCodec(new Lucene49Codec());\n    RandomIndexWriter riw = new RandomIndexWriter(random(), dir, conf);\n    Document doc = new Document();\n    \r\n    Field idField = newStringField(\"id\", \"\", Field.Store.NO);\n    Field bodyField = newTextField(\"body\", \"\", Field.Store.NO);\n    Field dvField = new NumericDocValuesField(\"dv\", 5);\n    doc.add(idField);\n    doc.add(bodyField);\n    doc.add(dvField);\n    for (int i = 0; i < 100; i++) {\n      idField.setStringValue(Integer.toString(i));\n      bodyField.setStringValue(TestUtil.randomUnicodeString(random()));\n      riw.addDocument(doc);\n      if (random().nextInt(7) == 0) {\n        riw.commit();\n      }\n      if (random().nextInt(20) == 0) {\n        riw.deleteDocuments(new Term(\"id\", Integer.toString(i)));\n      }\n    }\n    riw.close();\n    checkHeaders(dir);\n    dir.close();\n  }\n","date":"2014-08-10 02:54:35","endLine":66,"groupId":"47146","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"test","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-lucene-10-0.7/blobInfo/CC_OUT/blobs/b8/ddf8af97a35db2172ac84393252ef616733e8d.src","preCode":"  public void test() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(new MockAnalyzer(random()));\n    conf.setCodec(new Lucene49Codec());\n    RandomIndexWriter riw = new RandomIndexWriter(random(), dir, conf);\n    Document doc = new Document();\n    \r\n    Field idField = newStringField(\"id\", \"\", Field.Store.NO);\n    Field bodyField = newTextField(\"body\", \"\", Field.Store.NO);\n    Field dvField = new NumericDocValuesField(\"dv\", 5);\n    doc.add(idField);\n    doc.add(bodyField);\n    doc.add(dvField);\n    for (int i = 0; i < 100; i++) {\n      idField.setStringValue(Integer.toString(i));\n      bodyField.setStringValue(TestUtil.randomUnicodeString(random()));\n      riw.addDocument(doc);\n      if (random().nextInt(7) == 0) {\n        riw.commit();\n      }\n      if (random().nextInt(20) == 0) {\n        riw.deleteDocuments(new Term(\"id\", Integer.toString(i)));\n      }\n    }\n    riw.shutdown();\n    checkHeaders(dir);\n    dir.close();\n  }\n","realPath":"lucene/core/src/test/org/apache/lucene/index/TestAllFilesHaveChecksumFooter.java","repoName":"lucene","snippetEndLine":0,"snippetStartLine":0,"startLine":39,"status":"M"}],"commitId":"872bd9145cd9504fc16b318f7ea0a666d9429103","commitMessage":"@@@LUCENE-5871: Remove Version from IndexWriterConfig\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1617004 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2014-08-10 02:54:35","modifiedFileCount":"450","status":"M","submitter":"Ryan Ernst"},{"authorTime":"2014-08-14 23:30:44","codes":[{"authorDate":"2014-08-14 23:30:44","commitOrder":11,"curCode":"  public void test() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(new MockAnalyzer(random()));\n    conf.setCodec(new Lucene410Codec());\n    RandomIndexWriter riw = new RandomIndexWriter(random(), dir, conf);\n    Document doc = new Document();\n    \r\n    Field idField = newStringField(\"id\", \"\", Field.Store.NO);\n    Field bodyField = newTextField(\"body\", \"\", Field.Store.NO);\n    Field dvField = new NumericDocValuesField(\"dv\", 5);\n    doc.add(idField);\n    doc.add(bodyField);\n    doc.add(dvField);\n    for (int i = 0; i < 100; i++) {\n      idField.setStringValue(Integer.toString(i));\n      bodyField.setStringValue(TestUtil.randomUnicodeString(random()));\n      riw.addDocument(doc);\n      if (random().nextInt(7) == 0) {\n        riw.commit();\n      }\n      \r\n      \r\n      \r\n      \r\n    }\n    riw.close();\n    checkHeaders(dir);\n    dir.close();\n  }\n","date":"2014-08-14 23:30:44","endLine":67,"groupId":"47146","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"test","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-lucene-10-0.7/blobInfo/CC_OUT/blobs/9b/944983a7e8358d9a3d41dda5690c356328a544.src","preCode":"  public void test() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(new MockAnalyzer(random()));\n    conf.setCodec(new Lucene49Codec());\n    RandomIndexWriter riw = new RandomIndexWriter(random(), dir, conf);\n    Document doc = new Document();\n    \r\n    Field idField = newStringField(\"id\", \"\", Field.Store.NO);\n    Field bodyField = newTextField(\"body\", \"\", Field.Store.NO);\n    Field dvField = new NumericDocValuesField(\"dv\", 5);\n    doc.add(idField);\n    doc.add(bodyField);\n    doc.add(dvField);\n    for (int i = 0; i < 100; i++) {\n      idField.setStringValue(Integer.toString(i));\n      bodyField.setStringValue(TestUtil.randomUnicodeString(random()));\n      riw.addDocument(doc);\n      if (random().nextInt(7) == 0) {\n        riw.commit();\n      }\n      \r\n      \r\n      \r\n      \r\n    }\n    riw.close();\n    checkHeaders(dir);\n    dir.close();\n  }\n","realPath":"lucene/core/src/test/org/apache/lucene/index/TestAllFilesHaveCodecHeader.java","repoName":"lucene","snippetEndLine":0,"snippetStartLine":0,"startLine":39,"status":"M"},{"authorDate":"2014-08-14 23:30:44","commitOrder":11,"curCode":"  public void test() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(new MockAnalyzer(random()));\n    conf.setCodec(new Lucene410Codec());\n    RandomIndexWriter riw = new RandomIndexWriter(random(), dir, conf);\n    Document doc = new Document();\n    \r\n    Field idField = newStringField(\"id\", \"\", Field.Store.NO);\n    Field bodyField = newTextField(\"body\", \"\", Field.Store.NO);\n    Field dvField = new NumericDocValuesField(\"dv\", 5);\n    doc.add(idField);\n    doc.add(bodyField);\n    doc.add(dvField);\n    for (int i = 0; i < 100; i++) {\n      idField.setStringValue(Integer.toString(i));\n      bodyField.setStringValue(TestUtil.randomUnicodeString(random()));\n      riw.addDocument(doc);\n      if (random().nextInt(7) == 0) {\n        riw.commit();\n      }\n      if (random().nextInt(20) == 0) {\n        riw.deleteDocuments(new Term(\"id\", Integer.toString(i)));\n      }\n    }\n    riw.close();\n    checkHeaders(dir);\n    dir.close();\n  }\n","date":"2014-08-14 23:30:44","endLine":66,"groupId":"47146","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"test","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-lucene-10-0.7/blobInfo/CC_OUT/blobs/89/3ec8958ac530e95e5c3c468a8993d70d52b7af.src","preCode":"  public void test() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(new MockAnalyzer(random()));\n    conf.setCodec(new Lucene49Codec());\n    RandomIndexWriter riw = new RandomIndexWriter(random(), dir, conf);\n    Document doc = new Document();\n    \r\n    Field idField = newStringField(\"id\", \"\", Field.Store.NO);\n    Field bodyField = newTextField(\"body\", \"\", Field.Store.NO);\n    Field dvField = new NumericDocValuesField(\"dv\", 5);\n    doc.add(idField);\n    doc.add(bodyField);\n    doc.add(dvField);\n    for (int i = 0; i < 100; i++) {\n      idField.setStringValue(Integer.toString(i));\n      bodyField.setStringValue(TestUtil.randomUnicodeString(random()));\n      riw.addDocument(doc);\n      if (random().nextInt(7) == 0) {\n        riw.commit();\n      }\n      if (random().nextInt(20) == 0) {\n        riw.deleteDocuments(new Term(\"id\", Integer.toString(i)));\n      }\n    }\n    riw.close();\n    checkHeaders(dir);\n    dir.close();\n  }\n","realPath":"lucene/core/src/test/org/apache/lucene/index/TestAllFilesHaveChecksumFooter.java","repoName":"lucene","snippetEndLine":0,"snippetStartLine":0,"startLine":39,"status":"M"}],"commitId":"99c23632fad45cd6053eeb2b4771a3edf90bae72","commitMessage":"@@@LUCENE-5882: Add 4.10 docvaluesformat\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1617975 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2014-08-14 23:30:44","modifiedFileCount":"43","status":"M","submitter":"Robert Muir"},{"authorTime":"2014-08-30 05:14:15","codes":[{"authorDate":"2014-08-30 05:14:15","commitOrder":12,"curCode":"  public void test() throws Exception {\n    Directory dir = newDirectory();\n\n    if (dir instanceof MockDirectoryWrapper) {\n      \r\n      ((MockDirectoryWrapper) dir).setEnableVirusScanner(false);\n    }\n\n    IndexWriterConfig conf = newIndexWriterConfig(new MockAnalyzer(random()));\n    conf.setCodec(new Lucene410Codec());\n    RandomIndexWriter riw = new RandomIndexWriter(random(), dir, conf);\n    Document doc = new Document();\n    \r\n    Field idField = newStringField(\"id\", \"\", Field.Store.NO);\n    Field bodyField = newTextField(\"body\", \"\", Field.Store.NO);\n    Field dvField = new NumericDocValuesField(\"dv\", 5);\n    doc.add(idField);\n    doc.add(bodyField);\n    doc.add(dvField);\n    for (int i = 0; i < 100; i++) {\n      idField.setStringValue(Integer.toString(i));\n      bodyField.setStringValue(TestUtil.randomUnicodeString(random()));\n      riw.addDocument(doc);\n      if (random().nextInt(7) == 0) {\n        riw.commit();\n      }\n      \r\n      \r\n      \r\n      \r\n    }\n    riw.close();\n    checkHeaders(dir);\n    dir.close();\n  }\n","date":"2014-08-30 05:14:15","endLine":74,"groupId":"47146","id":13,"instanceNumber":1,"isCurCommit":0,"methodName":"test","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-lucene-10-0.7/blobInfo/CC_OUT/blobs/10/d35ab19028894a6160d375842bd18450bee215.src","preCode":"  public void test() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(new MockAnalyzer(random()));\n    conf.setCodec(new Lucene410Codec());\n    RandomIndexWriter riw = new RandomIndexWriter(random(), dir, conf);\n    Document doc = new Document();\n    \r\n    Field idField = newStringField(\"id\", \"\", Field.Store.NO);\n    Field bodyField = newTextField(\"body\", \"\", Field.Store.NO);\n    Field dvField = new NumericDocValuesField(\"dv\", 5);\n    doc.add(idField);\n    doc.add(bodyField);\n    doc.add(dvField);\n    for (int i = 0; i < 100; i++) {\n      idField.setStringValue(Integer.toString(i));\n      bodyField.setStringValue(TestUtil.randomUnicodeString(random()));\n      riw.addDocument(doc);\n      if (random().nextInt(7) == 0) {\n        riw.commit();\n      }\n      \r\n      \r\n      \r\n      \r\n    }\n    riw.close();\n    checkHeaders(dir);\n    dir.close();\n  }\n","realPath":"lucene/core/src/test/org/apache/lucene/index/TestAllFilesHaveCodecHeader.java","repoName":"lucene","snippetEndLine":0,"snippetStartLine":0,"startLine":40,"status":"M"},{"authorDate":"2014-08-30 05:14:15","commitOrder":12,"curCode":"  public void test() throws Exception {\n    Directory dir = newDirectory();\n    if (dir instanceof MockDirectoryWrapper) {\n      \r\n      ((MockDirectoryWrapper) dir).setEnableVirusScanner(false);\n    }\n    IndexWriterConfig conf = newIndexWriterConfig(new MockAnalyzer(random()));\n    conf.setCodec(new Lucene410Codec());\n    RandomIndexWriter riw = new RandomIndexWriter(random(), dir, conf);\n    Document doc = new Document();\n    \r\n    Field idField = newStringField(\"id\", \"\", Field.Store.NO);\n    Field bodyField = newTextField(\"body\", \"\", Field.Store.NO);\n    Field dvField = new NumericDocValuesField(\"dv\", 5);\n    doc.add(idField);\n    doc.add(bodyField);\n    doc.add(dvField);\n    for (int i = 0; i < 100; i++) {\n      idField.setStringValue(Integer.toString(i));\n      bodyField.setStringValue(TestUtil.randomUnicodeString(random()));\n      riw.addDocument(doc);\n      if (random().nextInt(7) == 0) {\n        riw.commit();\n      }\n      if (random().nextInt(20) == 0) {\n        riw.deleteDocuments(new Term(\"id\", Integer.toString(i)));\n      }\n    }\n    riw.close();\n    checkHeaders(dir);\n    dir.close();\n  }\n","date":"2014-08-30 05:14:15","endLine":71,"groupId":"47146","id":14,"instanceNumber":2,"isCurCommit":0,"methodName":"test","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-lucene-10-0.7/blobInfo/CC_OUT/blobs/8c/2ecf6e3e378adbcfd05e26c0b1ce87276c9c89.src","preCode":"  public void test() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(new MockAnalyzer(random()));\n    conf.setCodec(new Lucene410Codec());\n    RandomIndexWriter riw = new RandomIndexWriter(random(), dir, conf);\n    Document doc = new Document();\n    \r\n    Field idField = newStringField(\"id\", \"\", Field.Store.NO);\n    Field bodyField = newTextField(\"body\", \"\", Field.Store.NO);\n    Field dvField = new NumericDocValuesField(\"dv\", 5);\n    doc.add(idField);\n    doc.add(bodyField);\n    doc.add(dvField);\n    for (int i = 0; i < 100; i++) {\n      idField.setStringValue(Integer.toString(i));\n      bodyField.setStringValue(TestUtil.randomUnicodeString(random()));\n      riw.addDocument(doc);\n      if (random().nextInt(7) == 0) {\n        riw.commit();\n      }\n      if (random().nextInt(20) == 0) {\n        riw.deleteDocuments(new Term(\"id\", Integer.toString(i)));\n      }\n    }\n    riw.close();\n    checkHeaders(dir);\n    dir.close();\n  }\n","realPath":"lucene/core/src/test/org/apache/lucene/index/TestAllFilesHaveChecksumFooter.java","repoName":"lucene","snippetEndLine":0,"snippetStartLine":0,"startLine":40,"status":"M"}],"commitId":"7a189a3aca620649bd719d214d471ebb8845fa6b","commitMessage":"@@@LUCENE-5904: fix corruption case caused by virus checker after an unclean IW shutdown\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1621389 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2014-08-30 05:14:15","modifiedFileCount":"47","status":"M","submitter":"Michael McCandless"},{"authorTime":"2014-09-22 21:57:59","codes":[{"authorDate":"2014-09-22 21:57:59","commitOrder":13,"curCode":"  public void test() throws Exception {\n    Directory dir = newDirectory();\n\n    if (dir instanceof MockDirectoryWrapper) {\n      \r\n      ((MockDirectoryWrapper) dir).setEnableVirusScanner(false);\n    }\n\n    IndexWriterConfig conf = newIndexWriterConfig(new MockAnalyzer(random()));\n    conf.setCodec(TestUtil.getDefaultCodec());\n    RandomIndexWriter riw = new RandomIndexWriter(random(), dir, conf);\n    Document doc = new Document();\n    \r\n    Field idField = newStringField(\"id\", \"\", Field.Store.NO);\n    Field bodyField = newTextField(\"body\", \"\", Field.Store.NO);\n    Field dvField = new NumericDocValuesField(\"dv\", 5);\n    doc.add(idField);\n    doc.add(bodyField);\n    doc.add(dvField);\n    for (int i = 0; i < 100; i++) {\n      idField.setStringValue(Integer.toString(i));\n      bodyField.setStringValue(TestUtil.randomUnicodeString(random()));\n      riw.addDocument(doc);\n      if (random().nextInt(7) == 0) {\n        riw.commit();\n      }\n      \r\n      \r\n      \r\n      \r\n    }\n    riw.close();\n    checkHeaders(dir);\n    dir.close();\n  }\n","date":"2014-09-22 21:57:59","endLine":73,"groupId":"47146","id":15,"instanceNumber":1,"isCurCommit":0,"methodName":"test","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-lucene-10-0.7/blobInfo/CC_OUT/blobs/64/3283a6bf6b626ab3e92b224ba6cd34b9f981f1.src","preCode":"  public void test() throws Exception {\n    Directory dir = newDirectory();\n\n    if (dir instanceof MockDirectoryWrapper) {\n      \r\n      ((MockDirectoryWrapper) dir).setEnableVirusScanner(false);\n    }\n\n    IndexWriterConfig conf = newIndexWriterConfig(new MockAnalyzer(random()));\n    conf.setCodec(new Lucene410Codec());\n    RandomIndexWriter riw = new RandomIndexWriter(random(), dir, conf);\n    Document doc = new Document();\n    \r\n    Field idField = newStringField(\"id\", \"\", Field.Store.NO);\n    Field bodyField = newTextField(\"body\", \"\", Field.Store.NO);\n    Field dvField = new NumericDocValuesField(\"dv\", 5);\n    doc.add(idField);\n    doc.add(bodyField);\n    doc.add(dvField);\n    for (int i = 0; i < 100; i++) {\n      idField.setStringValue(Integer.toString(i));\n      bodyField.setStringValue(TestUtil.randomUnicodeString(random()));\n      riw.addDocument(doc);\n      if (random().nextInt(7) == 0) {\n        riw.commit();\n      }\n      \r\n      \r\n      \r\n      \r\n    }\n    riw.close();\n    checkHeaders(dir);\n    dir.close();\n  }\n","realPath":"lucene/core/src/test/org/apache/lucene/index/TestAllFilesHaveCodecHeader.java","repoName":"lucene","snippetEndLine":0,"snippetStartLine":0,"startLine":39,"status":"M"},{"authorDate":"2014-09-22 21:57:59","commitOrder":13,"curCode":"  public void test() throws Exception {\n    Directory dir = newDirectory();\n    if (dir instanceof MockDirectoryWrapper) {\n      \r\n      ((MockDirectoryWrapper) dir).setEnableVirusScanner(false);\n    }\n    IndexWriterConfig conf = newIndexWriterConfig(new MockAnalyzer(random()));\n    conf.setCodec(TestUtil.getDefaultCodec());\n    RandomIndexWriter riw = new RandomIndexWriter(random(), dir, conf);\n    Document doc = new Document();\n    \r\n    Field idField = newStringField(\"id\", \"\", Field.Store.NO);\n    Field bodyField = newTextField(\"body\", \"\", Field.Store.NO);\n    Field dvField = new NumericDocValuesField(\"dv\", 5);\n    doc.add(idField);\n    doc.add(bodyField);\n    doc.add(dvField);\n    for (int i = 0; i < 100; i++) {\n      idField.setStringValue(Integer.toString(i));\n      bodyField.setStringValue(TestUtil.randomUnicodeString(random()));\n      riw.addDocument(doc);\n      if (random().nextInt(7) == 0) {\n        riw.commit();\n      }\n      if (random().nextInt(20) == 0) {\n        riw.deleteDocuments(new Term(\"id\", Integer.toString(i)));\n      }\n    }\n    riw.close();\n    checkHeaders(dir);\n    dir.close();\n  }\n","date":"2014-09-22 21:57:59","endLine":70,"groupId":"47146","id":16,"instanceNumber":2,"isCurCommit":0,"methodName":"test","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-lucene-10-0.7/blobInfo/CC_OUT/blobs/78/62606ab3140a7b8e1a60d1a0af8bf0297f4f9c.src","preCode":"  public void test() throws Exception {\n    Directory dir = newDirectory();\n    if (dir instanceof MockDirectoryWrapper) {\n      \r\n      ((MockDirectoryWrapper) dir).setEnableVirusScanner(false);\n    }\n    IndexWriterConfig conf = newIndexWriterConfig(new MockAnalyzer(random()));\n    conf.setCodec(new Lucene410Codec());\n    RandomIndexWriter riw = new RandomIndexWriter(random(), dir, conf);\n    Document doc = new Document();\n    \r\n    Field idField = newStringField(\"id\", \"\", Field.Store.NO);\n    Field bodyField = newTextField(\"body\", \"\", Field.Store.NO);\n    Field dvField = new NumericDocValuesField(\"dv\", 5);\n    doc.add(idField);\n    doc.add(bodyField);\n    doc.add(dvField);\n    for (int i = 0; i < 100; i++) {\n      idField.setStringValue(Integer.toString(i));\n      bodyField.setStringValue(TestUtil.randomUnicodeString(random()));\n      riw.addDocument(doc);\n      if (random().nextInt(7) == 0) {\n        riw.commit();\n      }\n      if (random().nextInt(20) == 0) {\n        riw.deleteDocuments(new Term(\"id\", Integer.toString(i)));\n      }\n    }\n    riw.close();\n    checkHeaders(dir);\n    dir.close();\n  }\n","realPath":"lucene/core/src/test/org/apache/lucene/index/TestAllFilesHaveChecksumFooter.java","repoName":"lucene","snippetEndLine":0,"snippetStartLine":0,"startLine":39,"status":"M"}],"commitId":"9ef36e4bb6f21ba6e5ecf0a676792626ab308453","commitMessage":"@@@LUCENE-5969: add TestUtil.getDefaultCodec()\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1626778 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2014-09-22 21:57:59","modifiedFileCount":"18","status":"M","submitter":"Robert Muir"},{"authorTime":"2014-09-22 21:57:59","codes":[{"authorDate":"2014-09-22 22:48:07","commitOrder":14,"curCode":"  public void test() throws Exception {\n    Directory dir = newDirectory();\n\n    if (dir instanceof MockDirectoryWrapper) {\n      \r\n      ((MockDirectoryWrapper) dir).setEnableVirusScanner(false);\n    }\n\n    IndexWriterConfig conf = newIndexWriterConfig(new MockAnalyzer(random()));\n    conf.setCodec(TestUtil.getDefaultCodec());\n    RandomIndexWriter riw = new RandomIndexWriter(random(), dir, conf);\n    Document doc = new Document();\n    Field idField = newStringField(\"id\", \"\", Field.Store.YES);\n    Field bodyField = newTextField(\"body\", \"\", Field.Store.YES);\n    FieldType vectorsType = new FieldType(TextField.TYPE_STORED);\n    vectorsType.setStoreTermVectors(true);\n    vectorsType.setStoreTermVectorPositions(true);\n    Field vectorsField = new Field(\"vectors\", \"\", vectorsType);\n    Field dvField = new NumericDocValuesField(\"dv\", 5);\n    doc.add(idField);\n    doc.add(bodyField);\n    doc.add(vectorsField);\n    doc.add(dvField);\n    for (int i = 0; i < 100; i++) {\n      idField.setStringValue(Integer.toString(i));\n      bodyField.setStringValue(TestUtil.randomUnicodeString(random()));\n      dvField.setLongValue(random().nextInt(5));\n      vectorsField.setStringValue(TestUtil.randomUnicodeString(random()));\n      riw.addDocument(doc);\n      if (random().nextInt(7) == 0) {\n        riw.commit();\n      }\n      \r\n      \r\n      \r\n      \r\n    }\n    riw.close();\n    checkHeaders(dir, new HashMap<String,String>());\n    dir.close();\n  }\n","date":"2014-09-22 22:48:07","endLine":83,"groupId":"42408","id":17,"instanceNumber":1,"isCurCommit":0,"methodName":"test","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-lucene-10-0.7/blobInfo/CC_OUT/blobs/03/ff157fff4639bdeff17be67d5dd8560e9af0c0.src","preCode":"  public void test() throws Exception {\n    Directory dir = newDirectory();\n\n    if (dir instanceof MockDirectoryWrapper) {\n      \r\n      ((MockDirectoryWrapper) dir).setEnableVirusScanner(false);\n    }\n\n    IndexWriterConfig conf = newIndexWriterConfig(new MockAnalyzer(random()));\n    conf.setCodec(TestUtil.getDefaultCodec());\n    RandomIndexWriter riw = new RandomIndexWriter(random(), dir, conf);\n    Document doc = new Document();\n    \r\n    Field idField = newStringField(\"id\", \"\", Field.Store.NO);\n    Field bodyField = newTextField(\"body\", \"\", Field.Store.NO);\n    Field dvField = new NumericDocValuesField(\"dv\", 5);\n    doc.add(idField);\n    doc.add(bodyField);\n    doc.add(dvField);\n    for (int i = 0; i < 100; i++) {\n      idField.setStringValue(Integer.toString(i));\n      bodyField.setStringValue(TestUtil.randomUnicodeString(random()));\n      riw.addDocument(doc);\n      if (random().nextInt(7) == 0) {\n        riw.commit();\n      }\n      \r\n      \r\n      \r\n      \r\n    }\n    riw.close();\n    checkHeaders(dir);\n    dir.close();\n  }\n","realPath":"lucene/core/src/test/org/apache/lucene/index/TestAllFilesHaveCodecHeader.java","repoName":"lucene","snippetEndLine":0,"snippetStartLine":0,"startLine":43,"status":"M"},{"authorDate":"2014-09-22 21:57:59","commitOrder":14,"curCode":"  public void test() throws Exception {\n    Directory dir = newDirectory();\n    if (dir instanceof MockDirectoryWrapper) {\n      \r\n      ((MockDirectoryWrapper) dir).setEnableVirusScanner(false);\n    }\n    IndexWriterConfig conf = newIndexWriterConfig(new MockAnalyzer(random()));\n    conf.setCodec(TestUtil.getDefaultCodec());\n    RandomIndexWriter riw = new RandomIndexWriter(random(), dir, conf);\n    Document doc = new Document();\n    \r\n    Field idField = newStringField(\"id\", \"\", Field.Store.NO);\n    Field bodyField = newTextField(\"body\", \"\", Field.Store.NO);\n    Field dvField = new NumericDocValuesField(\"dv\", 5);\n    doc.add(idField);\n    doc.add(bodyField);\n    doc.add(dvField);\n    for (int i = 0; i < 100; i++) {\n      idField.setStringValue(Integer.toString(i));\n      bodyField.setStringValue(TestUtil.randomUnicodeString(random()));\n      riw.addDocument(doc);\n      if (random().nextInt(7) == 0) {\n        riw.commit();\n      }\n      if (random().nextInt(20) == 0) {\n        riw.deleteDocuments(new Term(\"id\", Integer.toString(i)));\n      }\n    }\n    riw.close();\n    checkHeaders(dir);\n    dir.close();\n  }\n","date":"2014-09-22 21:57:59","endLine":70,"groupId":"47146","id":18,"instanceNumber":2,"isCurCommit":0,"methodName":"test","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-lucene-10-0.7/blobInfo/CC_OUT/blobs/78/62606ab3140a7b8e1a60d1a0af8bf0297f4f9c.src","preCode":"  public void test() throws Exception {\n    Directory dir = newDirectory();\n    if (dir instanceof MockDirectoryWrapper) {\n      \r\n      ((MockDirectoryWrapper) dir).setEnableVirusScanner(false);\n    }\n    IndexWriterConfig conf = newIndexWriterConfig(new MockAnalyzer(random()));\n    conf.setCodec(TestUtil.getDefaultCodec());\n    RandomIndexWriter riw = new RandomIndexWriter(random(), dir, conf);\n    Document doc = new Document();\n    \r\n    Field idField = newStringField(\"id\", \"\", Field.Store.NO);\n    Field bodyField = newTextField(\"body\", \"\", Field.Store.NO);\n    Field dvField = new NumericDocValuesField(\"dv\", 5);\n    doc.add(idField);\n    doc.add(bodyField);\n    doc.add(dvField);\n    for (int i = 0; i < 100; i++) {\n      idField.setStringValue(Integer.toString(i));\n      bodyField.setStringValue(TestUtil.randomUnicodeString(random()));\n      riw.addDocument(doc);\n      if (random().nextInt(7) == 0) {\n        riw.commit();\n      }\n      if (random().nextInt(20) == 0) {\n        riw.deleteDocuments(new Term(\"id\", Integer.toString(i)));\n      }\n    }\n    riw.close();\n    checkHeaders(dir);\n    dir.close();\n  }\n","realPath":"lucene/core/src/test/org/apache/lucene/index/TestAllFilesHaveChecksumFooter.java","repoName":"lucene","snippetEndLine":0,"snippetStartLine":0,"startLine":39,"status":"N"}],"commitId":"2cd2251e9c510785282ee328fdfd86dfcae7fcf8","commitMessage":"@@@LUCENE-5969: improve this test.  we cant uncomment the assert until we fix 5.0 codec\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1626794 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2014-09-22 22:48:07","modifiedFileCount":"1","status":"M","submitter":"Robert Muir"},{"authorTime":"2014-10-05 22:01:13","codes":[{"authorDate":"2014-09-22 22:48:07","commitOrder":15,"curCode":"  public void test() throws Exception {\n    Directory dir = newDirectory();\n\n    if (dir instanceof MockDirectoryWrapper) {\n      \r\n      ((MockDirectoryWrapper) dir).setEnableVirusScanner(false);\n    }\n\n    IndexWriterConfig conf = newIndexWriterConfig(new MockAnalyzer(random()));\n    conf.setCodec(TestUtil.getDefaultCodec());\n    RandomIndexWriter riw = new RandomIndexWriter(random(), dir, conf);\n    Document doc = new Document();\n    Field idField = newStringField(\"id\", \"\", Field.Store.YES);\n    Field bodyField = newTextField(\"body\", \"\", Field.Store.YES);\n    FieldType vectorsType = new FieldType(TextField.TYPE_STORED);\n    vectorsType.setStoreTermVectors(true);\n    vectorsType.setStoreTermVectorPositions(true);\n    Field vectorsField = new Field(\"vectors\", \"\", vectorsType);\n    Field dvField = new NumericDocValuesField(\"dv\", 5);\n    doc.add(idField);\n    doc.add(bodyField);\n    doc.add(vectorsField);\n    doc.add(dvField);\n    for (int i = 0; i < 100; i++) {\n      idField.setStringValue(Integer.toString(i));\n      bodyField.setStringValue(TestUtil.randomUnicodeString(random()));\n      dvField.setLongValue(random().nextInt(5));\n      vectorsField.setStringValue(TestUtil.randomUnicodeString(random()));\n      riw.addDocument(doc);\n      if (random().nextInt(7) == 0) {\n        riw.commit();\n      }\n      \r\n      \r\n      \r\n      \r\n    }\n    riw.close();\n    checkHeaders(dir, new HashMap<String,String>());\n    dir.close();\n  }\n","date":"2014-09-22 22:48:07","endLine":83,"groupId":"42408","id":19,"instanceNumber":1,"isCurCommit":0,"methodName":"test","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-lucene-10-0.7/blobInfo/CC_OUT/blobs/03/ff157fff4639bdeff17be67d5dd8560e9af0c0.src","preCode":"  public void test() throws Exception {\n    Directory dir = newDirectory();\n\n    if (dir instanceof MockDirectoryWrapper) {\n      \r\n      ((MockDirectoryWrapper) dir).setEnableVirusScanner(false);\n    }\n\n    IndexWriterConfig conf = newIndexWriterConfig(new MockAnalyzer(random()));\n    conf.setCodec(TestUtil.getDefaultCodec());\n    RandomIndexWriter riw = new RandomIndexWriter(random(), dir, conf);\n    Document doc = new Document();\n    Field idField = newStringField(\"id\", \"\", Field.Store.YES);\n    Field bodyField = newTextField(\"body\", \"\", Field.Store.YES);\n    FieldType vectorsType = new FieldType(TextField.TYPE_STORED);\n    vectorsType.setStoreTermVectors(true);\n    vectorsType.setStoreTermVectorPositions(true);\n    Field vectorsField = new Field(\"vectors\", \"\", vectorsType);\n    Field dvField = new NumericDocValuesField(\"dv\", 5);\n    doc.add(idField);\n    doc.add(bodyField);\n    doc.add(vectorsField);\n    doc.add(dvField);\n    for (int i = 0; i < 100; i++) {\n      idField.setStringValue(Integer.toString(i));\n      bodyField.setStringValue(TestUtil.randomUnicodeString(random()));\n      dvField.setLongValue(random().nextInt(5));\n      vectorsField.setStringValue(TestUtil.randomUnicodeString(random()));\n      riw.addDocument(doc);\n      if (random().nextInt(7) == 0) {\n        riw.commit();\n      }\n      \r\n      \r\n      \r\n      \r\n    }\n    riw.close();\n    checkHeaders(dir, new HashMap<String,String>());\n    dir.close();\n  }\n","realPath":"lucene/core/src/test/org/apache/lucene/index/TestAllFilesHaveCodecHeader.java","repoName":"lucene","snippetEndLine":0,"snippetStartLine":0,"startLine":43,"status":"N"},{"authorDate":"2014-10-05 22:01:13","commitOrder":15,"curCode":"  public void test() throws Exception {\n    Directory dir = newDirectory();\n    if (dir instanceof MockDirectoryWrapper) {\n      \r\n      ((MockDirectoryWrapper) dir).setEnableVirusScanner(false);\n    }\n    IndexWriterConfig conf = newIndexWriterConfig(new MockAnalyzer(random()));\n    conf.setCodec(TestUtil.getDefaultCodec());\n    RandomIndexWriter riw = new RandomIndexWriter(random(), dir, conf);\n    Document doc = new Document();\n    \r\n    Field idField = newStringField(\"id\", \"\", Field.Store.NO);\n    Field bodyField = newTextField(\"body\", \"\", Field.Store.NO);\n    Field dvField = new NumericDocValuesField(\"dv\", 5);\n    doc.add(idField);\n    doc.add(bodyField);\n    doc.add(dvField);\n    for (int i = 0; i < 100; i++) {\n      idField.setStringValue(Integer.toString(i));\n      bodyField.setStringValue(TestUtil.randomUnicodeString(random()));\n      riw.addDocument(doc);\n      if (random().nextInt(7) == 0) {\n        riw.commit();\n      }\n      if (random().nextInt(20) == 0) {\n        riw.deleteDocuments(new Term(\"id\", Integer.toString(i)));\n      }\n    }\n    riw.close();\n    checkFooters(dir);\n    dir.close();\n  }\n","date":"2014-10-05 22:01:13","endLine":68,"groupId":"47146","id":20,"instanceNumber":2,"isCurCommit":0,"methodName":"test","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-lucene-10-0.7/blobInfo/CC_OUT/blobs/f1/4ca9536d989c1c6c1f722022177727a8d59ee6.src","preCode":"  public void test() throws Exception {\n    Directory dir = newDirectory();\n    if (dir instanceof MockDirectoryWrapper) {\n      \r\n      ((MockDirectoryWrapper) dir).setEnableVirusScanner(false);\n    }\n    IndexWriterConfig conf = newIndexWriterConfig(new MockAnalyzer(random()));\n    conf.setCodec(TestUtil.getDefaultCodec());\n    RandomIndexWriter riw = new RandomIndexWriter(random(), dir, conf);\n    Document doc = new Document();\n    \r\n    Field idField = newStringField(\"id\", \"\", Field.Store.NO);\n    Field bodyField = newTextField(\"body\", \"\", Field.Store.NO);\n    Field dvField = new NumericDocValuesField(\"dv\", 5);\n    doc.add(idField);\n    doc.add(bodyField);\n    doc.add(dvField);\n    for (int i = 0; i < 100; i++) {\n      idField.setStringValue(Integer.toString(i));\n      bodyField.setStringValue(TestUtil.randomUnicodeString(random()));\n      riw.addDocument(doc);\n      if (random().nextInt(7) == 0) {\n        riw.commit();\n      }\n      if (random().nextInt(20) == 0) {\n        riw.deleteDocuments(new Term(\"id\", Integer.toString(i)));\n      }\n    }\n    riw.close();\n    checkHeaders(dir);\n    dir.close();\n  }\n","realPath":"lucene/core/src/test/org/apache/lucene/index/TestAllFilesHaveChecksumFooter.java","repoName":"lucene","snippetEndLine":0,"snippetStartLine":0,"startLine":37,"status":"M"}],"commitId":"35160fd56ac41c3ed5d3b460c419d58fd8574d66","commitMessage":"@@@LUCENE-5969: Lucene 5.0 codec.  round two\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1629499 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2014-10-05 22:01:13","modifiedFileCount":"173","status":"M","submitter":"Robert Muir"},{"authorTime":"2014-10-24 10:43:41","codes":[{"authorDate":"2014-10-24 10:43:41","commitOrder":16,"curCode":"  public void test() throws Exception {\n    Directory dir = newDirectory();\n\n    IndexWriterConfig conf = newIndexWriterConfig(new MockAnalyzer(random()));\n    conf.setCodec(TestUtil.getDefaultCodec());\n    RandomIndexWriter riw = new RandomIndexWriter(random(), dir, conf);\n    Document doc = new Document();\n    Field idField = newStringField(\"id\", \"\", Field.Store.YES);\n    Field bodyField = newTextField(\"body\", \"\", Field.Store.YES);\n    FieldType vectorsType = new FieldType(TextField.TYPE_STORED);\n    vectorsType.setStoreTermVectors(true);\n    vectorsType.setStoreTermVectorPositions(true);\n    Field vectorsField = new Field(\"vectors\", \"\", vectorsType);\n    Field dvField = new NumericDocValuesField(\"dv\", 5);\n    doc.add(idField);\n    doc.add(bodyField);\n    doc.add(vectorsField);\n    doc.add(dvField);\n    for (int i = 0; i < 100; i++) {\n      idField.setStringValue(Integer.toString(i));\n      bodyField.setStringValue(TestUtil.randomUnicodeString(random()));\n      dvField.setLongValue(random().nextInt(5));\n      vectorsField.setStringValue(TestUtil.randomUnicodeString(random()));\n      riw.addDocument(doc);\n      if (random().nextInt(7) == 0) {\n        riw.commit();\n      }\n      if (random().nextInt(20) == 0) {\n        riw.deleteDocuments(new Term(\"id\", Integer.toString(i)));\n      }\n      if (random().nextInt(15) == 0) {\n        riw.updateNumericDocValue(new Term(\"id\"), \"dv\", Long.valueOf(i));\n      }\n    }\n    riw.close();\n    checkHeaders(dir, new HashMap<String,String>());\n    dir.close();\n  }\n","date":"2014-10-24 10:43:41","endLine":77,"groupId":"42408","id":21,"instanceNumber":1,"isCurCommit":0,"methodName":"test","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-lucene-10-0.7/blobInfo/CC_OUT/blobs/c2/b515db718f3e2d774257a260459a26e8b8cb33.src","preCode":"  public void test() throws Exception {\n    Directory dir = newDirectory();\n\n    if (dir instanceof MockDirectoryWrapper) {\n      \r\n      ((MockDirectoryWrapper) dir).setEnableVirusScanner(false);\n    }\n\n    IndexWriterConfig conf = newIndexWriterConfig(new MockAnalyzer(random()));\n    conf.setCodec(TestUtil.getDefaultCodec());\n    RandomIndexWriter riw = new RandomIndexWriter(random(), dir, conf);\n    Document doc = new Document();\n    Field idField = newStringField(\"id\", \"\", Field.Store.YES);\n    Field bodyField = newTextField(\"body\", \"\", Field.Store.YES);\n    FieldType vectorsType = new FieldType(TextField.TYPE_STORED);\n    vectorsType.setStoreTermVectors(true);\n    vectorsType.setStoreTermVectorPositions(true);\n    Field vectorsField = new Field(\"vectors\", \"\", vectorsType);\n    Field dvField = new NumericDocValuesField(\"dv\", 5);\n    doc.add(idField);\n    doc.add(bodyField);\n    doc.add(vectorsField);\n    doc.add(dvField);\n    for (int i = 0; i < 100; i++) {\n      idField.setStringValue(Integer.toString(i));\n      bodyField.setStringValue(TestUtil.randomUnicodeString(random()));\n      dvField.setLongValue(random().nextInt(5));\n      vectorsField.setStringValue(TestUtil.randomUnicodeString(random()));\n      riw.addDocument(doc);\n      if (random().nextInt(7) == 0) {\n        riw.commit();\n      }\n      \r\n      \r\n      \r\n      \r\n    }\n    riw.close();\n    checkHeaders(dir, new HashMap<String,String>());\n    dir.close();\n  }\n","realPath":"lucene/core/src/test/org/apache/lucene/index/TestAllFilesHaveCodecHeader.java","repoName":"lucene","snippetEndLine":0,"snippetStartLine":0,"startLine":40,"status":"M"},{"authorDate":"2014-10-24 10:43:41","commitOrder":16,"curCode":"  public void test() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(new MockAnalyzer(random()));\n    conf.setCodec(TestUtil.getDefaultCodec());\n    RandomIndexWriter riw = new RandomIndexWriter(random(), dir, conf);\n    Document doc = new Document();\n    \r\n    Field idField = newStringField(\"id\", \"\", Field.Store.NO);\n    Field bodyField = newTextField(\"body\", \"\", Field.Store.NO);\n    Field dvField = new NumericDocValuesField(\"dv\", 5);\n    doc.add(idField);\n    doc.add(bodyField);\n    doc.add(dvField);\n    for (int i = 0; i < 100; i++) {\n      idField.setStringValue(Integer.toString(i));\n      bodyField.setStringValue(TestUtil.randomUnicodeString(random()));\n      riw.addDocument(doc);\n      if (random().nextInt(7) == 0) {\n        riw.commit();\n      }\n      if (random().nextInt(20) == 0) {\n        riw.deleteDocuments(new Term(\"id\", Integer.toString(i)));\n      }\n    }\n    riw.close();\n    checkFooters(dir);\n    dir.close();\n  }\n","date":"2014-10-24 10:43:41","endLine":63,"groupId":"47146","id":22,"instanceNumber":2,"isCurCommit":0,"methodName":"test","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-lucene-10-0.7/blobInfo/CC_OUT/blobs/66/eb343f7cf5d12fc0be5926938883cf6bdc8045.src","preCode":"  public void test() throws Exception {\n    Directory dir = newDirectory();\n    if (dir instanceof MockDirectoryWrapper) {\n      \r\n      ((MockDirectoryWrapper) dir).setEnableVirusScanner(false);\n    }\n    IndexWriterConfig conf = newIndexWriterConfig(new MockAnalyzer(random()));\n    conf.setCodec(TestUtil.getDefaultCodec());\n    RandomIndexWriter riw = new RandomIndexWriter(random(), dir, conf);\n    Document doc = new Document();\n    \r\n    Field idField = newStringField(\"id\", \"\", Field.Store.NO);\n    Field bodyField = newTextField(\"body\", \"\", Field.Store.NO);\n    Field dvField = new NumericDocValuesField(\"dv\", 5);\n    doc.add(idField);\n    doc.add(bodyField);\n    doc.add(dvField);\n    for (int i = 0; i < 100; i++) {\n      idField.setStringValue(Integer.toString(i));\n      bodyField.setStringValue(TestUtil.randomUnicodeString(random()));\n      riw.addDocument(doc);\n      if (random().nextInt(7) == 0) {\n        riw.commit();\n      }\n      if (random().nextInt(20) == 0) {\n        riw.deleteDocuments(new Term(\"id\", Integer.toString(i)));\n      }\n    }\n    riw.close();\n    checkFooters(dir);\n    dir.close();\n  }\n","realPath":"lucene/core/src/test/org/apache/lucene/index/TestAllFilesHaveChecksumFooter.java","repoName":"lucene","snippetEndLine":0,"snippetStartLine":0,"startLine":36,"status":"M"}],"commitId":"ff50c35fc223476c9da51e14879973d77c112124","commitMessage":"@@@LUCENE-5969: finish porting rest of codec to 5.0 features\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1633991 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2014-10-24 10:43:41","modifiedFileCount":"118","status":"M","submitter":"Robert Muir"},{"authorTime":"2016-01-31 21:15:29","codes":[{"authorDate":"2016-01-31 21:15:29","commitOrder":17,"curCode":"  public void test() throws Exception {\n    Directory dir = newDirectory();\n\n    IndexWriterConfig conf = newIndexWriterConfig(new MockAnalyzer(random()));\n    conf.setCodec(TestUtil.getDefaultCodec());\n    RandomIndexWriter riw = new RandomIndexWriter(random(), dir, conf);\n    \r\n    \r\n    LineFileDocs docs = new LineFileDocs(random());\n    for (int i = 0; i < 100; i++) {\n      riw.addDocument(docs.nextDoc());\n      if (random().nextInt(7) == 0) {\n        riw.commit();\n      }\n      if (random().nextInt(20) == 0) {\n        riw.deleteDocuments(new Term(\"docid\", Integer.toString(i)));\n      }\n      if (random().nextInt(15) == 0) {\n        riw.updateNumericDocValue(new Term(\"docid\", Integer.toString(i)), \"docid_intDV\", Long.valueOf(i));\n      }\n    }\n    riw.close();\n    checkHeaders(dir, new HashMap<String,String>());\n    dir.close();\n  }\n","date":"2016-01-31 21:15:29","endLine":60,"groupId":"106040","id":23,"instanceNumber":1,"isCurCommit":0,"methodName":"test","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-lucene-10-0.7/blobInfo/CC_OUT/blobs/d7/260195283c6ed68ebb98b841f66ead4661335d.src","preCode":"  public void test() throws Exception {\n    Directory dir = newDirectory();\n\n    IndexWriterConfig conf = newIndexWriterConfig(new MockAnalyzer(random()));\n    conf.setCodec(TestUtil.getDefaultCodec());\n    RandomIndexWriter riw = new RandomIndexWriter(random(), dir, conf);\n    Document doc = new Document();\n    Field idField = newStringField(\"id\", \"\", Field.Store.YES);\n    Field bodyField = newTextField(\"body\", \"\", Field.Store.YES);\n    FieldType vectorsType = new FieldType(TextField.TYPE_STORED);\n    vectorsType.setStoreTermVectors(true);\n    vectorsType.setStoreTermVectorPositions(true);\n    Field vectorsField = new Field(\"vectors\", \"\", vectorsType);\n    Field dvField = new NumericDocValuesField(\"dv\", 5);\n    doc.add(idField);\n    doc.add(bodyField);\n    doc.add(vectorsField);\n    doc.add(dvField);\n    for (int i = 0; i < 100; i++) {\n      idField.setStringValue(Integer.toString(i));\n      bodyField.setStringValue(TestUtil.randomUnicodeString(random()));\n      dvField.setLongValue(random().nextInt(5));\n      vectorsField.setStringValue(TestUtil.randomUnicodeString(random()));\n      riw.addDocument(doc);\n      if (random().nextInt(7) == 0) {\n        riw.commit();\n      }\n      if (random().nextInt(20) == 0) {\n        riw.deleteDocuments(new Term(\"id\", Integer.toString(i)));\n      }\n      if (random().nextInt(15) == 0) {\n        riw.updateNumericDocValue(new Term(\"id\"), \"dv\", Long.valueOf(i));\n      }\n    }\n    riw.close();\n    checkHeaders(dir, new HashMap<String,String>());\n    dir.close();\n  }\n","realPath":"lucene/core/src/test/org/apache/lucene/index/TestAllFilesHaveCodecHeader.java","repoName":"lucene","snippetEndLine":0,"snippetStartLine":0,"startLine":36,"status":"M"},{"authorDate":"2016-01-31 21:15:29","commitOrder":17,"curCode":"  public void test() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(new MockAnalyzer(random()));\n    conf.setCodec(TestUtil.getDefaultCodec());\n    RandomIndexWriter riw = new RandomIndexWriter(random(), dir, conf);\n    \r\n    \r\n    LineFileDocs docs = new LineFileDocs(random());\n    for (int i = 0; i < 100; i++) {\n      riw.addDocument(docs.nextDoc());\n      if (random().nextInt(7) == 0) {\n        riw.commit();\n      }\n      if (random().nextInt(20) == 0) {\n        riw.deleteDocuments(new Term(\"docid\", Integer.toString(i)));\n      }\n      if (random().nextInt(15) == 0) {\n        riw.updateNumericDocValue(new Term(\"docid\", Integer.toString(i)), \"docid_intDV\", Long.valueOf(i));\n      }\n    }\n    riw.close();\n    checkFooters(dir);\n    dir.close();\n  }\n","date":"2016-01-31 21:15:29","endLine":57,"groupId":"106040","id":24,"instanceNumber":2,"isCurCommit":0,"methodName":"test","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-lucene-10-0.7/blobInfo/CC_OUT/blobs/71/0d20f86f56e49c88c63a311c2de7f1d610bcd9.src","preCode":"  public void test() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(new MockAnalyzer(random()));\n    conf.setCodec(TestUtil.getDefaultCodec());\n    RandomIndexWriter riw = new RandomIndexWriter(random(), dir, conf);\n    Document doc = new Document();\n    \r\n    Field idField = newStringField(\"id\", \"\", Field.Store.NO);\n    Field bodyField = newTextField(\"body\", \"\", Field.Store.NO);\n    Field dvField = new NumericDocValuesField(\"dv\", 5);\n    doc.add(idField);\n    doc.add(bodyField);\n    doc.add(dvField);\n    for (int i = 0; i < 100; i++) {\n      idField.setStringValue(Integer.toString(i));\n      bodyField.setStringValue(TestUtil.randomUnicodeString(random()));\n      riw.addDocument(doc);\n      if (random().nextInt(7) == 0) {\n        riw.commit();\n      }\n      if (random().nextInt(20) == 0) {\n        riw.deleteDocuments(new Term(\"id\", Integer.toString(i)));\n      }\n    }\n    riw.close();\n    checkFooters(dir);\n    dir.close();\n  }\n","realPath":"lucene/core/src/test/org/apache/lucene/index/TestAllFilesHaveChecksumFooter.java","repoName":"lucene","snippetEndLine":0,"snippetStartLine":0,"startLine":34,"status":"M"}],"commitId":"a4d15862ac38cc5d7f4406b1fca4cbdaecd33f86","commitMessage":"@@@Merge branch 'master' of https://git-wip-us.apache.org/repos/asf/lucene-solr\n","date":"2016-01-31 21:15:29","modifiedFileCount":"70","status":"M","submitter":"Noble Paul"}]
