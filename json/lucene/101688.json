[{"authorTime":"2012-04-17 21:36:19","codes":[{"authorDate":"2012-04-17 21:36:19","commitOrder":1,"curCode":"  public void testSurrogates2() throws IOException {\n    int numIterations = atLeast(10000);\n    for (int i = 0; i < numIterations; i++) {\n      if (VERBOSE) {\n        System.out.println(\"\\nTEST: iter=\" + i);\n      }\n      String s = _TestUtil.randomUnicodeString(random(), 100);\n      TokenStream ts = analyzer.tokenStream(\"foo\", new StringReader(s));\n      CharTermAttribute termAtt = ts.addAttribute(CharTermAttribute.class);\n      ts.reset();\n      while (ts.incrementToken()) {\n        assertTrue(UnicodeUtil.validUTF16String(termAtt));\n      }\n    }\n  }\n","date":"2012-04-17 21:36:19","endLine":243,"groupId":"54957","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testSurrogates2","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-lucene-10-0.7/blobInfo/CC_OUT/blobs/57/e2261ad3ba514a9f5f32fdbc47e5ba0daf82ba.src","preCode":"  public void testSurrogates2() throws IOException {\n    int numIterations = atLeast(10000);\n    for (int i = 0; i < numIterations; i++) {\n      if (VERBOSE) {\n        System.out.println(\"\\nTEST: iter=\" + i);\n      }\n      String s = _TestUtil.randomUnicodeString(random(), 100);\n      TokenStream ts = analyzer.tokenStream(\"foo\", new StringReader(s));\n      CharTermAttribute termAtt = ts.addAttribute(CharTermAttribute.class);\n      ts.reset();\n      while (ts.incrementToken()) {\n        assertTrue(UnicodeUtil.validUTF16String(termAtt));\n      }\n    }\n  }\n","realPath":"lucene/analysis/kuromoji/src/test/org/apache/lucene/analysis/ja/TestJapaneseTokenizer.java","repoName":"lucene","snippetEndLine":0,"snippetStartLine":0,"startLine":229,"status":"B"},{"authorDate":"2012-04-17 21:36:19","commitOrder":1,"curCode":"  public void testSurrogates2() throws IOException {\n    int numIterations = atLeast(10000);\n    for (int i = 0; i < numIterations; i++) {\n      String s = _TestUtil.randomUnicodeString(random(), 100);\n      TokenStream ts = analyzer.tokenStream(\"foo\", new StringReader(s));\n      CharTermAttribute termAtt = ts.addAttribute(CharTermAttribute.class);\n      ts.reset();\n      while (ts.incrementToken()) {\n        assertTrue(UnicodeUtil.validUTF16String(termAtt));\n      }\n    }\n  }\n","date":"2012-04-17 21:36:19","endLine":62,"groupId":"54957","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testSurrogates2","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-lucene-10-0.7/blobInfo/CC_OUT/blobs/56/184b0d2d7ebbb40ab76eec9e85165d3840d15e.src","preCode":"  public void testSurrogates2() throws IOException {\n    int numIterations = atLeast(10000);\n    for (int i = 0; i < numIterations; i++) {\n      String s = _TestUtil.randomUnicodeString(random(), 100);\n      TokenStream ts = analyzer.tokenStream(\"foo\", new StringReader(s));\n      CharTermAttribute termAtt = ts.addAttribute(CharTermAttribute.class);\n      ts.reset();\n      while (ts.incrementToken()) {\n        assertTrue(UnicodeUtil.validUTF16String(termAtt));\n      }\n    }\n  }\n","realPath":"lucene/analysis/kuromoji/src/test/org/apache/lucene/analysis/ja/TestExtendedMode.java","repoName":"lucene","snippetEndLine":0,"snippetStartLine":0,"startLine":51,"status":"B"}],"commitId":"e8e4245d9b36123446546ff15967ac95429ea2b0","commitMessage":"@@@LUCENE-3965: consolidate all api modules and fix packaging for 4.0\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1327094 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2012-04-17 21:36:19","modifiedFileCount":"1","status":"B","submitter":"Robert Muir"},{"authorTime":"2012-07-06 19:56:47","codes":[{"authorDate":"2012-04-17 21:36:19","commitOrder":2,"curCode":"  public void testSurrogates2() throws IOException {\n    int numIterations = atLeast(10000);\n    for (int i = 0; i < numIterations; i++) {\n      if (VERBOSE) {\n        System.out.println(\"\\nTEST: iter=\" + i);\n      }\n      String s = _TestUtil.randomUnicodeString(random(), 100);\n      TokenStream ts = analyzer.tokenStream(\"foo\", new StringReader(s));\n      CharTermAttribute termAtt = ts.addAttribute(CharTermAttribute.class);\n      ts.reset();\n      while (ts.incrementToken()) {\n        assertTrue(UnicodeUtil.validUTF16String(termAtt));\n      }\n    }\n  }\n","date":"2012-04-17 21:36:19","endLine":243,"groupId":"54957","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testSurrogates2","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-lucene-10-0.7/blobInfo/CC_OUT/blobs/57/e2261ad3ba514a9f5f32fdbc47e5ba0daf82ba.src","preCode":"  public void testSurrogates2() throws IOException {\n    int numIterations = atLeast(10000);\n    for (int i = 0; i < numIterations; i++) {\n      if (VERBOSE) {\n        System.out.println(\"\\nTEST: iter=\" + i);\n      }\n      String s = _TestUtil.randomUnicodeString(random(), 100);\n      TokenStream ts = analyzer.tokenStream(\"foo\", new StringReader(s));\n      CharTermAttribute termAtt = ts.addAttribute(CharTermAttribute.class);\n      ts.reset();\n      while (ts.incrementToken()) {\n        assertTrue(UnicodeUtil.validUTF16String(termAtt));\n      }\n    }\n  }\n","realPath":"lucene/analysis/kuromoji/src/test/org/apache/lucene/analysis/ja/TestJapaneseTokenizer.java","repoName":"lucene","snippetEndLine":0,"snippetStartLine":0,"startLine":229,"status":"N"},{"authorDate":"2012-07-06 19:56:47","commitOrder":2,"curCode":"  public void testSurrogates2() throws IOException {\n    int numIterations = atLeast(1000);\n    for (int i = 0; i < numIterations; i++) {\n      String s = _TestUtil.randomUnicodeString(random(), 100);\n      TokenStream ts = analyzer.tokenStream(\"foo\", new StringReader(s));\n      CharTermAttribute termAtt = ts.addAttribute(CharTermAttribute.class);\n      ts.reset();\n      while (ts.incrementToken()) {\n        assertTrue(UnicodeUtil.validUTF16String(termAtt));\n      }\n    }\n  }\n","date":"2012-07-06 19:56:47","endLine":64,"groupId":"54957","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testSurrogates2","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-lucene-10-0.7/blobInfo/CC_OUT/blobs/73/f7d3a8551bd78b854ae0088be47f731117bfe9.src","preCode":"  public void testSurrogates2() throws IOException {\n    int numIterations = atLeast(10000);\n    for (int i = 0; i < numIterations; i++) {\n      String s = _TestUtil.randomUnicodeString(random(), 100);\n      TokenStream ts = analyzer.tokenStream(\"foo\", new StringReader(s));\n      CharTermAttribute termAtt = ts.addAttribute(CharTermAttribute.class);\n      ts.reset();\n      while (ts.incrementToken()) {\n        assertTrue(UnicodeUtil.validUTF16String(termAtt));\n      }\n    }\n  }\n","realPath":"lucene/analysis/kuromoji/src/test/org/apache/lucene/analysis/ja/TestExtendedMode.java","repoName":"lucene","snippetEndLine":0,"snippetStartLine":0,"startLine":53,"status":"M"}],"commitId":"c746415d08c035cd884abaf02161503cbd6927c7","commitMessage":"@@@LUCENE-4174: tone down the now really slow analysis tests\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1358149 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2012-07-06 19:56:47","modifiedFileCount":"92","status":"M","submitter":"Robert Muir"},{"authorTime":"2013-07-09 01:55:48","codes":[{"authorDate":"2013-07-09 01:55:48","commitOrder":3,"curCode":"  public void testSurrogates2() throws IOException {\n    int numIterations = atLeast(10000);\n    for (int i = 0; i < numIterations; i++) {\n      if (VERBOSE) {\n        System.out.println(\"\\nTEST: iter=\" + i);\n      }\n      String s = _TestUtil.randomUnicodeString(random(), 100);\n      TokenStream ts = analyzer.tokenStream(\"foo\", s);\n      CharTermAttribute termAtt = ts.addAttribute(CharTermAttribute.class);\n      ts.reset();\n      while (ts.incrementToken()) {\n        assertTrue(UnicodeUtil.validUTF16String(termAtt));\n      }\n    }\n  }\n","date":"2013-07-09 01:55:48","endLine":244,"groupId":"54957","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testSurrogates2","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-lucene-10-0.7/blobInfo/CC_OUT/blobs/4b/a79af0dc223df62e01e33de6a450fe649dbaa3.src","preCode":"  public void testSurrogates2() throws IOException {\n    int numIterations = atLeast(10000);\n    for (int i = 0; i < numIterations; i++) {\n      if (VERBOSE) {\n        System.out.println(\"\\nTEST: iter=\" + i);\n      }\n      String s = _TestUtil.randomUnicodeString(random(), 100);\n      TokenStream ts = analyzer.tokenStream(\"foo\", new StringReader(s));\n      CharTermAttribute termAtt = ts.addAttribute(CharTermAttribute.class);\n      ts.reset();\n      while (ts.incrementToken()) {\n        assertTrue(UnicodeUtil.validUTF16String(termAtt));\n      }\n    }\n  }\n","realPath":"lucene/analysis/kuromoji/src/test/org/apache/lucene/analysis/ja/TestJapaneseTokenizer.java","repoName":"lucene","snippetEndLine":0,"snippetStartLine":0,"startLine":230,"status":"M"},{"authorDate":"2013-07-09 01:55:48","commitOrder":3,"curCode":"  public void testSurrogates2() throws IOException {\n    int numIterations = atLeast(1000);\n    for (int i = 0; i < numIterations; i++) {\n      String s = _TestUtil.randomUnicodeString(random(), 100);\n      TokenStream ts = analyzer.tokenStream(\"foo\", s);\n      CharTermAttribute termAtt = ts.addAttribute(CharTermAttribute.class);\n      ts.reset();\n      while (ts.incrementToken()) {\n        assertTrue(UnicodeUtil.validUTF16String(termAtt));\n      }\n    }\n  }\n","date":"2013-07-09 01:55:48","endLine":63,"groupId":"54957","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testSurrogates2","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-lucene-10-0.7/blobInfo/CC_OUT/blobs/05/1ca3af237fe60406fb7c9a8811b1e233c41ead.src","preCode":"  public void testSurrogates2() throws IOException {\n    int numIterations = atLeast(1000);\n    for (int i = 0; i < numIterations; i++) {\n      String s = _TestUtil.randomUnicodeString(random(), 100);\n      TokenStream ts = analyzer.tokenStream(\"foo\", new StringReader(s));\n      CharTermAttribute termAtt = ts.addAttribute(CharTermAttribute.class);\n      ts.reset();\n      while (ts.incrementToken()) {\n        assertTrue(UnicodeUtil.validUTF16String(termAtt));\n      }\n    }\n  }\n","realPath":"lucene/analysis/kuromoji/src/test/org/apache/lucene/analysis/ja/TestExtendedMode.java","repoName":"lucene","snippetEndLine":0,"snippetStartLine":0,"startLine":52,"status":"M"}],"commitId":"f092795fe94ba727f7368b63d8eb1ecd39749fc4","commitMessage":"@@@LUCENE-5097: Analyzer now has an additional tokenStream(String fieldName.  String text) method.  so wrapping by StringReader for common use is no longer needed. This method uses an internal reuseable reader.  which was previously only used by the Field class.\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1500862 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2013-07-09 01:55:48","modifiedFileCount":"59","status":"M","submitter":"Uwe Schindler"},{"authorTime":"2013-10-06 00:41:28","codes":[{"authorDate":"2013-10-06 00:41:28","commitOrder":4,"curCode":"  public void testSurrogates2() throws IOException {\n    int numIterations = atLeast(10000);\n    for (int i = 0; i < numIterations; i++) {\n      if (VERBOSE) {\n        System.out.println(\"\\nTEST: iter=\" + i);\n      }\n      String s = _TestUtil.randomUnicodeString(random(), 100);\n      TokenStream ts = analyzer.tokenStream(\"foo\", s);\n      CharTermAttribute termAtt = ts.addAttribute(CharTermAttribute.class);\n      ts.reset();\n      while (ts.incrementToken()) {\n        assertTrue(UnicodeUtil.validUTF16String(termAtt));\n      }\n      ts.end();\n      ts.close();\n    }\n  }\n","date":"2013-10-06 00:41:28","endLine":248,"groupId":"54957","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"testSurrogates2","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-lucene-10-0.7/blobInfo/CC_OUT/blobs/b3/1949a33ba86d267c9a144170a5061774df4074.src","preCode":"  public void testSurrogates2() throws IOException {\n    int numIterations = atLeast(10000);\n    for (int i = 0; i < numIterations; i++) {\n      if (VERBOSE) {\n        System.out.println(\"\\nTEST: iter=\" + i);\n      }\n      String s = _TestUtil.randomUnicodeString(random(), 100);\n      TokenStream ts = analyzer.tokenStream(\"foo\", s);\n      CharTermAttribute termAtt = ts.addAttribute(CharTermAttribute.class);\n      ts.reset();\n      while (ts.incrementToken()) {\n        assertTrue(UnicodeUtil.validUTF16String(termAtt));\n      }\n    }\n  }\n","realPath":"lucene/analysis/kuromoji/src/test/org/apache/lucene/analysis/ja/TestJapaneseTokenizer.java","repoName":"lucene","snippetEndLine":0,"snippetStartLine":0,"startLine":232,"status":"M"},{"authorDate":"2013-10-06 00:41:28","commitOrder":4,"curCode":"  public void testSurrogates2() throws IOException {\n    int numIterations = atLeast(1000);\n    for (int i = 0; i < numIterations; i++) {\n      String s = _TestUtil.randomUnicodeString(random(), 100);\n      TokenStream ts = analyzer.tokenStream(\"foo\", s);\n      CharTermAttribute termAtt = ts.addAttribute(CharTermAttribute.class);\n      ts.reset();\n      while (ts.incrementToken()) {\n        assertTrue(UnicodeUtil.validUTF16String(termAtt));\n      }\n      ts.end();\n      ts.close();\n    }\n  }\n","date":"2013-10-06 00:41:28","endLine":65,"groupId":"54957","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"testSurrogates2","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-lucene-10-0.7/blobInfo/CC_OUT/blobs/25/0f26e276238a1522b3ba6282c561017943251a.src","preCode":"  public void testSurrogates2() throws IOException {\n    int numIterations = atLeast(1000);\n    for (int i = 0; i < numIterations; i++) {\n      String s = _TestUtil.randomUnicodeString(random(), 100);\n      TokenStream ts = analyzer.tokenStream(\"foo\", s);\n      CharTermAttribute termAtt = ts.addAttribute(CharTermAttribute.class);\n      ts.reset();\n      while (ts.incrementToken()) {\n        assertTrue(UnicodeUtil.validUTF16String(termAtt));\n      }\n    }\n  }\n","realPath":"lucene/analysis/kuromoji/src/test/org/apache/lucene/analysis/ja/TestExtendedMode.java","repoName":"lucene","snippetEndLine":0,"snippetStartLine":0,"startLine":52,"status":"M"}],"commitId":"8fba601ed16634fc66e9a988c74075792d6213a9","commitMessage":"@@@LUCENE-5240: additional safety in Tokenizer state machine\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1529482 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2013-10-06 00:41:28","modifiedFileCount":"12","status":"M","submitter":"Robert Muir"},{"authorTime":"2013-10-07 14:24:25","codes":[{"authorDate":"2013-10-07 14:24:25","commitOrder":5,"curCode":"  public void testSurrogates2() throws IOException {\n    int numIterations = atLeast(10000);\n    for (int i = 0; i < numIterations; i++) {\n      if (VERBOSE) {\n        System.out.println(\"\\nTEST: iter=\" + i);\n      }\n      String s = _TestUtil.randomUnicodeString(random(), 100);\n      try (TokenStream ts = analyzer.tokenStream(\"foo\", s)) {\n        CharTermAttribute termAtt = ts.addAttribute(CharTermAttribute.class);\n        ts.reset();\n        while (ts.incrementToken()) {\n          assertTrue(UnicodeUtil.validUTF16String(termAtt));\n        }\n        ts.end();\n      }\n    }\n  }\n","date":"2013-10-07 14:24:25","endLine":248,"groupId":"47386","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"testSurrogates2","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-lucene-10-0.7/blobInfo/CC_OUT/blobs/aa/64765c1a53e1ce6eda2c7f2f6f52605ff32445.src","preCode":"  public void testSurrogates2() throws IOException {\n    int numIterations = atLeast(10000);\n    for (int i = 0; i < numIterations; i++) {\n      if (VERBOSE) {\n        System.out.println(\"\\nTEST: iter=\" + i);\n      }\n      String s = _TestUtil.randomUnicodeString(random(), 100);\n      TokenStream ts = analyzer.tokenStream(\"foo\", s);\n      CharTermAttribute termAtt = ts.addAttribute(CharTermAttribute.class);\n      ts.reset();\n      while (ts.incrementToken()) {\n        assertTrue(UnicodeUtil.validUTF16String(termAtt));\n      }\n      ts.end();\n      ts.close();\n    }\n  }\n","realPath":"lucene/analysis/kuromoji/src/test/org/apache/lucene/analysis/ja/TestJapaneseTokenizer.java","repoName":"lucene","snippetEndLine":0,"snippetStartLine":0,"startLine":232,"status":"M"},{"authorDate":"2013-10-07 14:24:25","commitOrder":5,"curCode":"  public void testSurrogates2() throws IOException {\n    int numIterations = atLeast(1000);\n    for (int i = 0; i < numIterations; i++) {\n      String s = _TestUtil.randomUnicodeString(random(), 100);\n      try (TokenStream ts = analyzer.tokenStream(\"foo\", s)) {\n        CharTermAttribute termAtt = ts.addAttribute(CharTermAttribute.class);\n        ts.reset();\n        while (ts.incrementToken()) {\n          assertTrue(UnicodeUtil.validUTF16String(termAtt));\n        }\n        ts.end();\n      }\n    }\n  }\n","date":"2013-10-07 14:24:25","endLine":65,"groupId":"47386","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"testSurrogates2","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-lucene-10-0.7/blobInfo/CC_OUT/blobs/8a/b644a01e258f767356b30b25c6c4275e049976.src","preCode":"  public void testSurrogates2() throws IOException {\n    int numIterations = atLeast(1000);\n    for (int i = 0; i < numIterations; i++) {\n      String s = _TestUtil.randomUnicodeString(random(), 100);\n      TokenStream ts = analyzer.tokenStream(\"foo\", s);\n      CharTermAttribute termAtt = ts.addAttribute(CharTermAttribute.class);\n      ts.reset();\n      while (ts.incrementToken()) {\n        assertTrue(UnicodeUtil.validUTF16String(termAtt));\n      }\n      ts.end();\n      ts.close();\n    }\n  }\n","realPath":"lucene/analysis/kuromoji/src/test/org/apache/lucene/analysis/ja/TestExtendedMode.java","repoName":"lucene","snippetEndLine":0,"snippetStartLine":0,"startLine":52,"status":"M"}],"commitId":"64a795b6e3dd82b9c579ee1652db64da7df56c6b","commitMessage":"@@@LUCENE-5259: convert analysis consumers to try-with-resources\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1529770 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2013-10-07 14:24:25","modifiedFileCount":"41","status":"M","submitter":"Robert Muir"},{"authorTime":"2014-02-19 09:38:33","codes":[{"authorDate":"2014-02-19 09:38:33","commitOrder":6,"curCode":"  public void testSurrogates2() throws IOException {\n    int numIterations = atLeast(10000);\n    for (int i = 0; i < numIterations; i++) {\n      if (VERBOSE) {\n        System.out.println(\"\\nTEST: iter=\" + i);\n      }\n      String s = TestUtil.randomUnicodeString(random(), 100);\n      try (TokenStream ts = analyzer.tokenStream(\"foo\", s)) {\n        CharTermAttribute termAtt = ts.addAttribute(CharTermAttribute.class);\n        ts.reset();\n        while (ts.incrementToken()) {\n          assertTrue(UnicodeUtil.validUTF16String(termAtt));\n        }\n        ts.end();\n      }\n    }\n  }\n","date":"2014-02-19 09:38:33","endLine":248,"groupId":"47386","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"testSurrogates2","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-lucene-10-0.7/blobInfo/CC_OUT/blobs/3c/a8a465a88ec3f81875bb19e64d1592743e6bdd.src","preCode":"  public void testSurrogates2() throws IOException {\n    int numIterations = atLeast(10000);\n    for (int i = 0; i < numIterations; i++) {\n      if (VERBOSE) {\n        System.out.println(\"\\nTEST: iter=\" + i);\n      }\n      String s = _TestUtil.randomUnicodeString(random(), 100);\n      try (TokenStream ts = analyzer.tokenStream(\"foo\", s)) {\n        CharTermAttribute termAtt = ts.addAttribute(CharTermAttribute.class);\n        ts.reset();\n        while (ts.incrementToken()) {\n          assertTrue(UnicodeUtil.validUTF16String(termAtt));\n        }\n        ts.end();\n      }\n    }\n  }\n","realPath":"lucene/analysis/kuromoji/src/test/org/apache/lucene/analysis/ja/TestJapaneseTokenizer.java","repoName":"lucene","snippetEndLine":0,"snippetStartLine":0,"startLine":232,"status":"M"},{"authorDate":"2014-02-19 09:38:33","commitOrder":6,"curCode":"  public void testSurrogates2() throws IOException {\n    int numIterations = atLeast(1000);\n    for (int i = 0; i < numIterations; i++) {\n      String s = TestUtil.randomUnicodeString(random(), 100);\n      try (TokenStream ts = analyzer.tokenStream(\"foo\", s)) {\n        CharTermAttribute termAtt = ts.addAttribute(CharTermAttribute.class);\n        ts.reset();\n        while (ts.incrementToken()) {\n          assertTrue(UnicodeUtil.validUTF16String(termAtt));\n        }\n        ts.end();\n      }\n    }\n  }\n","date":"2014-02-19 09:38:33","endLine":64,"groupId":"47386","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"testSurrogates2","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-lucene-10-0.7/blobInfo/CC_OUT/blobs/7a/1570074e4508a685ea1fe7d510ef3ab42c2ff7.src","preCode":"  public void testSurrogates2() throws IOException {\n    int numIterations = atLeast(1000);\n    for (int i = 0; i < numIterations; i++) {\n      String s = _TestUtil.randomUnicodeString(random(), 100);\n      try (TokenStream ts = analyzer.tokenStream(\"foo\", s)) {\n        CharTermAttribute termAtt = ts.addAttribute(CharTermAttribute.class);\n        ts.reset();\n        while (ts.incrementToken()) {\n          assertTrue(UnicodeUtil.validUTF16String(termAtt));\n        }\n        ts.end();\n      }\n    }\n  }\n","realPath":"lucene/analysis/kuromoji/src/test/org/apache/lucene/analysis/ja/TestExtendedMode.java","repoName":"lucene","snippetEndLine":0,"snippetStartLine":0,"startLine":51,"status":"M"}],"commitId":"36b2f2512b53b3c4d5951dbeaf7d25106a806413","commitMessage":"@@@LUCENE-5449: Rename _TestUtil to TestUtil.\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1569597 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2014-02-19 09:38:33","modifiedFileCount":"321","status":"M","submitter":"Benson Margulies"},{"authorTime":"2020-01-22 08:27:19","codes":[{"authorDate":"2020-01-22 08:27:19","commitOrder":7,"curCode":"  public void testSurrogates2() throws IOException {\n    int numIterations = atLeast(500);\n    for (int i = 0; i < numIterations; i++) {\n      if (VERBOSE) {\n        System.out.println(\"\\nTEST: iter=\" + i);\n      }\n      String s = TestUtil.randomUnicodeString(random(), 100);\n      try (TokenStream ts = analyzer.tokenStream(\"foo\", s)) {\n        CharTermAttribute termAtt = ts.addAttribute(CharTermAttribute.class);\n        ts.reset();\n        while (ts.incrementToken()) {\n          assertTrue(UnicodeUtil.validUTF16String(termAtt));\n        }\n        ts.end();\n      }\n    }\n  }\n","date":"2020-01-22 08:27:19","endLine":380,"groupId":"101688","id":13,"instanceNumber":1,"isCurCommit":0,"methodName":"testSurrogates2","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-lucene-10-0.7/blobInfo/CC_OUT/blobs/25/7ed4b3de3e444e874c3391bcda3fd53193bbbd.src","preCode":"  public void testSurrogates2() throws IOException {\n    int numIterations = atLeast(10000);\n    for (int i = 0; i < numIterations; i++) {\n      if (VERBOSE) {\n        System.out.println(\"\\nTEST: iter=\" + i);\n      }\n      String s = TestUtil.randomUnicodeString(random(), 100);\n      try (TokenStream ts = analyzer.tokenStream(\"foo\", s)) {\n        CharTermAttribute termAtt = ts.addAttribute(CharTermAttribute.class);\n        ts.reset();\n        while (ts.incrementToken()) {\n          assertTrue(UnicodeUtil.validUTF16String(termAtt));\n        }\n        ts.end();\n      }\n    }\n  }\n","realPath":"lucene/analysis/kuromoji/src/test/org/apache/lucene/analysis/ja/TestJapaneseTokenizer.java","repoName":"lucene","snippetEndLine":0,"snippetStartLine":0,"startLine":364,"status":"M"},{"authorDate":"2020-01-22 08:27:19","commitOrder":7,"curCode":"  public void testSurrogates2() throws IOException {\n    int numIterations = atLeast(500);\n    for (int i = 0; i < numIterations; i++) {\n      String s = TestUtil.randomUnicodeString(random(), 100);\n      try (TokenStream ts = analyzer.tokenStream(\"foo\", s)) {\n        CharTermAttribute termAtt = ts.addAttribute(CharTermAttribute.class);\n        ts.reset();\n        while (ts.incrementToken()) {\n          assertTrue(UnicodeUtil.validUTF16String(termAtt));\n        }\n        ts.end();\n      }\n    }\n  }\n","date":"2020-01-22 08:27:19","endLine":73,"groupId":"101688","id":14,"instanceNumber":2,"isCurCommit":0,"methodName":"testSurrogates2","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-lucene-10-0.7/blobInfo/CC_OUT/blobs/8d/22ff7d9a418a0b2645ea06e5adecefea140fb0.src","preCode":"  public void testSurrogates2() throws IOException {\n    int numIterations = atLeast(1000);\n    for (int i = 0; i < numIterations; i++) {\n      String s = TestUtil.randomUnicodeString(random(), 100);\n      try (TokenStream ts = analyzer.tokenStream(\"foo\", s)) {\n        CharTermAttribute termAtt = ts.addAttribute(CharTermAttribute.class);\n        ts.reset();\n        while (ts.incrementToken()) {\n          assertTrue(UnicodeUtil.validUTF16String(termAtt));\n        }\n        ts.end();\n      }\n    }\n  }\n","realPath":"lucene/analysis/kuromoji/src/test/org/apache/lucene/analysis/ja/TestExtendedMode.java","repoName":"lucene","snippetEndLine":0,"snippetStartLine":0,"startLine":60,"status":"M"}],"commitId":"c754a764d484089df8e5f711b4db8ef0b4a4a7ec","commitMessage":"@@@LUCENE-9157: test speedup for slowest tests\n","date":"2020-01-22 08:27:19","modifiedFileCount":"73","status":"M","submitter":"Robert Muir"}]
