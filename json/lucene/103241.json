[{"authorTime":"2012-11-13 22:54:09","codes":[{"authorDate":"2013-01-08 16:54:09","commitOrder":2,"curCode":"  private static final Decompressor DUMMY_DECOMPRESSOR = new Decompressor() {\n\n    @Override\n    public void decompress(DataInput in, int originalLength,\n        int offset, int length, BytesRef bytes) throws IOException {\n      assert offset + length <= originalLength;\n      if (bytes.bytes.length < originalLength) {\n        bytes.bytes = new byte[ArrayUtil.oversize(originalLength, 1)];\n      }\n      in.readBytes(bytes.bytes, 0, offset + length);\n      bytes.offset = offset;\n      bytes.length = length;\n    }\n\n    @Override\n    public void copyCompressedData(DataInput in, int originalLength, DataOutput out) throws IOException {\n      out.copyBytes(in, originalLength);\n    }\n\n    @Override\n    public Decompressor clone() {\n      return this;\n    }\n\n  };\n","date":"2013-01-08 16:54:09","endLine":79,"groupId":"4701","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"DUMMY_DECOMPRESSOR","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-lucene-10-0.7/blobInfo/CC_OUT/blobs/e8/1d3223071505bef09f07ade0a20da5c8ecc7c2.src","preCode":"  private static final Decompressor DUMMY_DECOMPRESSOR = new Decompressor() {\n\n    @Override\n    public void decompress(DataInput in, int originalLength,\n        int offset, int length, BytesRef bytes) throws IOException {\n      assert offset + length <= originalLength;\n      if (bytes.bytes.length < originalLength) {\n        bytes.bytes = new byte[ArrayUtil.oversize(originalLength, 1)];\n      }\n      in.readBytes(bytes.bytes, 0, offset + length);\n      bytes.offset = offset;\n      bytes.length = length;\n    }\n\n    @Override\n    public void copyCompressedData(DataInput in, int originalLength, DataOutput out) throws IOException {\n      out.copyBytes(in, originalLength);\n    }\n\n    @Override\n    public Decompressor clone() {\n      return this;\n    }\n\n  };\n","realPath":"lucene/test-framework/src/java/org/apache/lucene/codecs/compressing/dummy/DummyCompressingCodec.java","repoName":"lucene","snippetEndLine":0,"snippetStartLine":0,"startLine":55,"status":"B"},{"authorDate":"2012-11-13 22:54:09","commitOrder":2,"curCode":"  private static final Decompressor LZ4_DECOMPRESSOR = new Decompressor() {\n\n    @Override\n    public void decompress(DataInput in, int originalLength, int offset, int length, BytesRef bytes) throws IOException {\n      assert offset + length <= originalLength;\n      \r\n      if (bytes.bytes.length < originalLength + 7) {\n        bytes.bytes = new byte[ArrayUtil.oversize(originalLength + 7, 1)];\n      }\n      final int decompressedLength = LZ4.decompress(in, offset + length, bytes.bytes, 0);\n      if (decompressedLength > originalLength) {\n        throw new CorruptIndexException(\"Corrupted: lengths mismatch: \" + decompressedLength + \" > \" + originalLength);\n      }\n      bytes.offset = offset;\n      bytes.length = length;\n    }\n\n    @Override\n    public void copyCompressedData(DataInput in, int originalLength, DataOutput out) throws IOException {\n      final int copied = LZ4.copyCompressedData(in, originalLength, out);\n      if (copied != originalLength) {\n        throw new CorruptIndexException(\"Currupted compressed stream: expected \" + originalLength + \" bytes, but got at least\" + copied);\n      }\n    }\n\n    @Override\n    public Decompressor clone() {\n      return this;\n    }\n\n  };\n","date":"2012-11-13 22:54:09","endLine":164,"groupId":"48324","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"LZ4_DECOMPRESSOR","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-lucene-10-0.7/blobInfo/CC_OUT/blobs/b8/237e9d97fc313bfb8f6f4aa9408fb1e15f6e88.src","preCode":"  private static final Decompressor LZ4_DECOMPRESSOR = new Decompressor() {\n\n    @Override\n    public void decompress(DataInput in, int originalLength, int offset, int length, BytesRef bytes) throws IOException {\n      assert offset + length <= originalLength;\n      \r\n      if (bytes.bytes.length < originalLength + 7) {\n        bytes.bytes = new byte[ArrayUtil.oversize(originalLength + 7, 1)];\n      }\n      final int decompressedLength = LZ4.decompress(in, offset + length, bytes.bytes, 0);\n      if (decompressedLength > originalLength) {\n        throw new CorruptIndexException(\"Corrupted: lengths mismatch: \" + decompressedLength + \" > \" + originalLength);\n      }\n      bytes.offset = offset;\n      bytes.length = length;\n    }\n\n    @Override\n    public void copyCompressedData(DataInput in, int originalLength, DataOutput out) throws IOException {\n      final int copied = LZ4.copyCompressedData(in, originalLength, out);\n      if (copied != originalLength) {\n        throw new CorruptIndexException(\"Currupted compressed stream: expected \" + originalLength + \" bytes, but got at least\" + copied);\n      }\n    }\n\n    @Override\n    public Decompressor clone() {\n      return this;\n    }\n\n  };\n","realPath":"lucene/core/src/java/org/apache/lucene/codecs/compressing/CompressionMode.java","repoName":"lucene","snippetEndLine":0,"snippetStartLine":0,"startLine":134,"status":"NB"}],"commitId":"f90ca1f942bbab7453681417ced45ce87412a55d","commitMessage":"@@@LUCENE-4664: Make oal.codec.compressing.{C. Dec}ompressor public.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1430177 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2013-01-08 16:54:09","modifiedFileCount":"3","status":"M","submitter":"Adrien Grand"},{"authorTime":"2013-01-09 18:00:16","codes":[{"authorDate":"2013-01-09 18:00:16","commitOrder":3,"curCode":"  private static final Decompressor DUMMY_DECOMPRESSOR = new Decompressor() {\n\n    @Override\n    public void decompress(DataInput in, int originalLength,\n        int offset, int length, BytesRef bytes) throws IOException {\n      assert offset + length <= originalLength;\n      if (bytes.bytes.length < originalLength) {\n        bytes.bytes = new byte[ArrayUtil.oversize(originalLength, 1)];\n      }\n      in.readBytes(bytes.bytes, 0, offset + length);\n      bytes.offset = offset;\n      bytes.length = length;\n    }\n\n    @Override\n    public Decompressor clone() {\n      return this;\n    }\n\n  };\n","date":"2013-01-09 18:00:16","endLine":74,"groupId":"4701","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"DUMMY_DECOMPRESSOR","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-lucene-10-0.7/blobInfo/CC_OUT/blobs/9e/1649dc79efd378edd4408f062ed66f816651f4.src","preCode":"  private static final Decompressor DUMMY_DECOMPRESSOR = new Decompressor() {\n\n    @Override\n    public void decompress(DataInput in, int originalLength,\n        int offset, int length, BytesRef bytes) throws IOException {\n      assert offset + length <= originalLength;\n      if (bytes.bytes.length < originalLength) {\n        bytes.bytes = new byte[ArrayUtil.oversize(originalLength, 1)];\n      }\n      in.readBytes(bytes.bytes, 0, offset + length);\n      bytes.offset = offset;\n      bytes.length = length;\n    }\n\n    @Override\n    public void copyCompressedData(DataInput in, int originalLength, DataOutput out) throws IOException {\n      out.copyBytes(in, originalLength);\n    }\n\n    @Override\n    public Decompressor clone() {\n      return this;\n    }\n\n  };\n","realPath":"lucene/test-framework/src/java/org/apache/lucene/codecs/compressing/dummy/DummyCompressingCodec.java","repoName":"lucene","snippetEndLine":0,"snippetStartLine":0,"startLine":55,"status":"M"},{"authorDate":"2013-01-09 18:00:16","commitOrder":3,"curCode":"  private static final Decompressor LZ4_DECOMPRESSOR = new Decompressor() {\n\n    @Override\n    public void decompress(DataInput in, int originalLength, int offset, int length, BytesRef bytes) throws IOException {\n      assert offset + length <= originalLength;\n      \r\n      if (bytes.bytes.length < originalLength + 7) {\n        bytes.bytes = new byte[ArrayUtil.oversize(originalLength + 7, 1)];\n      }\n      final int decompressedLength = LZ4.decompress(in, offset + length, bytes.bytes, 0);\n      if (decompressedLength > originalLength) {\n        throw new CorruptIndexException(\"Corrupted: lengths mismatch: \" + decompressedLength + \" > \" + originalLength);\n      }\n      bytes.offset = offset;\n      bytes.length = length;\n    }\n\n    @Override\n    public Decompressor clone() {\n      return this;\n    }\n\n  };\n","date":"2013-01-09 18:00:16","endLine":148,"groupId":"48324","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"LZ4_DECOMPRESSOR","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-lucene-10-0.7/blobInfo/CC_OUT/blobs/70/0258fdd283516dc16c39b0bdd56f1c755c0782.src","preCode":"  private static final Decompressor LZ4_DECOMPRESSOR = new Decompressor() {\n\n    @Override\n    public void decompress(DataInput in, int originalLength, int offset, int length, BytesRef bytes) throws IOException {\n      assert offset + length <= originalLength;\n      \r\n      if (bytes.bytes.length < originalLength + 7) {\n        bytes.bytes = new byte[ArrayUtil.oversize(originalLength + 7, 1)];\n      }\n      final int decompressedLength = LZ4.decompress(in, offset + length, bytes.bytes, 0);\n      if (decompressedLength > originalLength) {\n        throw new CorruptIndexException(\"Corrupted: lengths mismatch: \" + decompressedLength + \" > \" + originalLength);\n      }\n      bytes.offset = offset;\n      bytes.length = length;\n    }\n\n    @Override\n    public void copyCompressedData(DataInput in, int originalLength, DataOutput out) throws IOException {\n      final int copied = LZ4.copyCompressedData(in, originalLength, out);\n      if (copied != originalLength) {\n        throw new CorruptIndexException(\"Currupted compressed stream: expected \" + originalLength + \" bytes, but got at least\" + copied);\n      }\n    }\n\n    @Override\n    public Decompressor clone() {\n      return this;\n    }\n\n  };\n","realPath":"lucene/core/src/java/org/apache/lucene/codecs/compressing/CompressionMode.java","repoName":"lucene","snippetEndLine":0,"snippetStartLine":0,"startLine":126,"status":"M"}],"commitId":"21388e0e3720d4e32671a5400bdcd56516ecc4e5","commitMessage":"@@@LUCENE-4666: Simplify CompressingStoredFieldsFormat merging.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1430755 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2013-01-09 18:00:16","modifiedFileCount":"6","status":"M","submitter":"Adrien Grand"},{"authorTime":"2013-04-21 00:38:09","codes":[{"authorDate":"2013-01-09 18:00:16","commitOrder":4,"curCode":"  private static final Decompressor DUMMY_DECOMPRESSOR = new Decompressor() {\n\n    @Override\n    public void decompress(DataInput in, int originalLength,\n        int offset, int length, BytesRef bytes) throws IOException {\n      assert offset + length <= originalLength;\n      if (bytes.bytes.length < originalLength) {\n        bytes.bytes = new byte[ArrayUtil.oversize(originalLength, 1)];\n      }\n      in.readBytes(bytes.bytes, 0, offset + length);\n      bytes.offset = offset;\n      bytes.length = length;\n    }\n\n    @Override\n    public Decompressor clone() {\n      return this;\n    }\n\n  };\n","date":"2013-01-09 18:00:16","endLine":74,"groupId":"4701","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"DUMMY_DECOMPRESSOR","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-lucene-10-0.7/blobInfo/CC_OUT/blobs/9e/1649dc79efd378edd4408f062ed66f816651f4.src","preCode":"  private static final Decompressor DUMMY_DECOMPRESSOR = new Decompressor() {\n\n    @Override\n    public void decompress(DataInput in, int originalLength,\n        int offset, int length, BytesRef bytes) throws IOException {\n      assert offset + length <= originalLength;\n      if (bytes.bytes.length < originalLength) {\n        bytes.bytes = new byte[ArrayUtil.oversize(originalLength, 1)];\n      }\n      in.readBytes(bytes.bytes, 0, offset + length);\n      bytes.offset = offset;\n      bytes.length = length;\n    }\n\n    @Override\n    public Decompressor clone() {\n      return this;\n    }\n\n  };\n","realPath":"lucene/test-framework/src/java/org/apache/lucene/codecs/compressing/dummy/DummyCompressingCodec.java","repoName":"lucene","snippetEndLine":0,"snippetStartLine":0,"startLine":55,"status":"N"},{"authorDate":"2013-04-21 00:38:09","commitOrder":4,"curCode":"  private static final Decompressor LZ4_DECOMPRESSOR = new Decompressor() {\n\n    @Override\n    public void decompress(DataInput in, int originalLength, int offset, int length, BytesRef bytes) throws IOException {\n      assert offset + length <= originalLength;\n      \r\n      if (bytes.bytes.length < originalLength + 7) {\n        bytes.bytes = new byte[ArrayUtil.oversize(originalLength + 7, 1)];\n      }\n      final int decompressedLength = LZ4.decompress(in, offset + length, bytes.bytes, 0);\n      if (decompressedLength > originalLength) {\n        throw new CorruptIndexException(\"Corrupted: lengths mismatch: \" + decompressedLength + \" > \" + originalLength + \" (resource=\" + in + \")\");\n      }\n      bytes.offset = offset;\n      bytes.length = length;\n    }\n\n    @Override\n    public Decompressor clone() {\n      return this;\n    }\n\n  };\n","date":"2013-04-21 00:38:09","endLine":148,"groupId":"48324","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"LZ4_DECOMPRESSOR","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-lucene-10-0.7/blobInfo/CC_OUT/blobs/29/56e0bc95f4a2d4e917c572ce0f3ea80a75f8b6.src","preCode":"  private static final Decompressor LZ4_DECOMPRESSOR = new Decompressor() {\n\n    @Override\n    public void decompress(DataInput in, int originalLength, int offset, int length, BytesRef bytes) throws IOException {\n      assert offset + length <= originalLength;\n      \r\n      if (bytes.bytes.length < originalLength + 7) {\n        bytes.bytes = new byte[ArrayUtil.oversize(originalLength + 7, 1)];\n      }\n      final int decompressedLength = LZ4.decompress(in, offset + length, bytes.bytes, 0);\n      if (decompressedLength > originalLength) {\n        throw new CorruptIndexException(\"Corrupted: lengths mismatch: \" + decompressedLength + \" > \" + originalLength);\n      }\n      bytes.offset = offset;\n      bytes.length = length;\n    }\n\n    @Override\n    public Decompressor clone() {\n      return this;\n    }\n\n  };\n","realPath":"lucene/core/src/java/org/apache/lucene/codecs/compressing/CompressionMode.java","repoName":"lucene","snippetEndLine":0,"snippetStartLine":0,"startLine":126,"status":"M"}],"commitId":"834f7da9d990164fbd697501cd99dcb8b4d4ac3c","commitMessage":"@@@add file names to corrumption messages\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1470185 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2013-04-21 00:38:09","modifiedFileCount":"7","status":"M","submitter":"Robert Muir"},{"authorTime":"2014-09-20 08:25:48","codes":[{"authorDate":"2013-01-09 18:00:16","commitOrder":5,"curCode":"  private static final Decompressor DUMMY_DECOMPRESSOR = new Decompressor() {\n\n    @Override\n    public void decompress(DataInput in, int originalLength,\n        int offset, int length, BytesRef bytes) throws IOException {\n      assert offset + length <= originalLength;\n      if (bytes.bytes.length < originalLength) {\n        bytes.bytes = new byte[ArrayUtil.oversize(originalLength, 1)];\n      }\n      in.readBytes(bytes.bytes, 0, offset + length);\n      bytes.offset = offset;\n      bytes.length = length;\n    }\n\n    @Override\n    public Decompressor clone() {\n      return this;\n    }\n\n  };\n","date":"2013-01-09 18:00:16","endLine":74,"groupId":"4701","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"DUMMY_DECOMPRESSOR","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-lucene-10-0.7/blobInfo/CC_OUT/blobs/9e/1649dc79efd378edd4408f062ed66f816651f4.src","preCode":"  private static final Decompressor DUMMY_DECOMPRESSOR = new Decompressor() {\n\n    @Override\n    public void decompress(DataInput in, int originalLength,\n        int offset, int length, BytesRef bytes) throws IOException {\n      assert offset + length <= originalLength;\n      if (bytes.bytes.length < originalLength) {\n        bytes.bytes = new byte[ArrayUtil.oversize(originalLength, 1)];\n      }\n      in.readBytes(bytes.bytes, 0, offset + length);\n      bytes.offset = offset;\n      bytes.length = length;\n    }\n\n    @Override\n    public Decompressor clone() {\n      return this;\n    }\n\n  };\n","realPath":"lucene/test-framework/src/java/org/apache/lucene/codecs/compressing/dummy/DummyCompressingCodec.java","repoName":"lucene","snippetEndLine":0,"snippetStartLine":0,"startLine":55,"status":"N"},{"authorDate":"2014-09-20 08:25:48","commitOrder":5,"curCode":"  private static final Decompressor LZ4_DECOMPRESSOR = new Decompressor() {\n\n    @Override\n    public void decompress(DataInput in, int originalLength, int offset, int length, BytesRef bytes) throws IOException {\n      assert offset + length <= originalLength;\n      \r\n      if (bytes.bytes.length < originalLength + 7) {\n        bytes.bytes = new byte[ArrayUtil.oversize(originalLength + 7, 1)];\n      }\n      final int decompressedLength = LZ4.decompress(in, offset + length, bytes.bytes, 0);\n      if (decompressedLength > originalLength) {\n        throw new CorruptIndexException(\"Corrupted: lengths mismatch: \" + decompressedLength + \" > \" + originalLength, in);\n      }\n      bytes.offset = offset;\n      bytes.length = length;\n    }\n\n    @Override\n    public Decompressor clone() {\n      return this;\n    }\n\n  };\n","date":"2014-09-20 08:25:48","endLine":148,"groupId":"48324","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"LZ4_DECOMPRESSOR","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-lucene-10-0.7/blobInfo/CC_OUT/blobs/ba/a31e1a6ea422395ffd38bfa4a493e63e481bd3.src","preCode":"  private static final Decompressor LZ4_DECOMPRESSOR = new Decompressor() {\n\n    @Override\n    public void decompress(DataInput in, int originalLength, int offset, int length, BytesRef bytes) throws IOException {\n      assert offset + length <= originalLength;\n      \r\n      if (bytes.bytes.length < originalLength + 7) {\n        bytes.bytes = new byte[ArrayUtil.oversize(originalLength + 7, 1)];\n      }\n      final int decompressedLength = LZ4.decompress(in, offset + length, bytes.bytes, 0);\n      if (decompressedLength > originalLength) {\n        throw new CorruptIndexException(\"Corrupted: lengths mismatch: \" + decompressedLength + \" > \" + originalLength + \" (resource=\" + in + \")\");\n      }\n      bytes.offset = offset;\n      bytes.length = length;\n    }\n\n    @Override\n    public Decompressor clone() {\n      return this;\n    }\n\n  };\n","realPath":"lucene/core/src/java/org/apache/lucene/codecs/compressing/CompressionMode.java","repoName":"lucene","snippetEndLine":0,"snippetStartLine":0,"startLine":126,"status":"M"}],"commitId":"8310bd892cbdeeb74f5130c66a4e9c64abfe6696","commitMessage":"@@@LUCENE-5965: CorruptIndexException requires a String or DataInput resource\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1626372 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2014-09-20 08:25:48","modifiedFileCount":"43","status":"M","submitter":"Robert Muir"},{"authorTime":"2020-02-28 18:26:56","codes":[{"authorDate":"2013-01-09 18:00:16","commitOrder":6,"curCode":"  private static final Decompressor DUMMY_DECOMPRESSOR = new Decompressor() {\n\n    @Override\n    public void decompress(DataInput in, int originalLength,\n        int offset, int length, BytesRef bytes) throws IOException {\n      assert offset + length <= originalLength;\n      if (bytes.bytes.length < originalLength) {\n        bytes.bytes = new byte[ArrayUtil.oversize(originalLength, 1)];\n      }\n      in.readBytes(bytes.bytes, 0, offset + length);\n      bytes.offset = offset;\n      bytes.length = length;\n    }\n\n    @Override\n    public Decompressor clone() {\n      return this;\n    }\n\n  };\n","date":"2013-01-09 18:00:16","endLine":74,"groupId":"4701","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"DUMMY_DECOMPRESSOR","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-lucene-10-0.7/blobInfo/CC_OUT/blobs/9e/1649dc79efd378edd4408f062ed66f816651f4.src","preCode":"  private static final Decompressor DUMMY_DECOMPRESSOR = new Decompressor() {\n\n    @Override\n    public void decompress(DataInput in, int originalLength,\n        int offset, int length, BytesRef bytes) throws IOException {\n      assert offset + length <= originalLength;\n      if (bytes.bytes.length < originalLength) {\n        bytes.bytes = new byte[ArrayUtil.oversize(originalLength, 1)];\n      }\n      in.readBytes(bytes.bytes, 0, offset + length);\n      bytes.offset = offset;\n      bytes.length = length;\n    }\n\n    @Override\n    public Decompressor clone() {\n      return this;\n    }\n\n  };\n","realPath":"lucene/test-framework/src/java/org/apache/lucene/codecs/compressing/dummy/DummyCompressingCodec.java","repoName":"lucene","snippetEndLine":0,"snippetStartLine":0,"startLine":55,"status":"N"},{"authorDate":"2020-02-28 18:26:56","commitOrder":6,"curCode":"  private static final Decompressor LZ4_DECOMPRESSOR = new Decompressor() {\n\n    @Override\n    public void decompress(DataInput in, int originalLength, int offset, int length, BytesRef bytes) throws IOException {\n      assert offset + length <= originalLength;\n      \r\n      if (bytes.bytes.length < originalLength + 7) {\n        bytes.bytes = new byte[ArrayUtil.oversize(originalLength + 7, 1)];\n      }\n      final int decompressedLength = LZ4.decompress(in, offset + length, bytes.bytes);\n      if (decompressedLength > originalLength) {\n        throw new CorruptIndexException(\"Corrupted: lengths mismatch: \" + decompressedLength + \" > \" + originalLength, in);\n      }\n      bytes.offset = offset;\n      bytes.length = length;\n    }\n\n    @Override\n    public Decompressor clone() {\n      return this;\n    }\n\n  };\n","date":"2020-02-28 18:26:56","endLine":152,"groupId":"0","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"LZ4_DECOMPRESSOR","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-lucene-10-0.7/blobInfo/CC_OUT/blobs/58/50ec98a829ec89e4c2cb1a8013a426dbb76c4d.src","preCode":"  private static final Decompressor LZ4_DECOMPRESSOR = new Decompressor() {\n\n    @Override\n    public void decompress(DataInput in, int originalLength, int offset, int length, BytesRef bytes) throws IOException {\n      assert offset + length <= originalLength;\n      \r\n      if (bytes.bytes.length < originalLength + 7) {\n        bytes.bytes = new byte[ArrayUtil.oversize(originalLength + 7, 1)];\n      }\n      final int decompressedLength = LZ4.decompress(in, offset + length, bytes.bytes, 0);\n      if (decompressedLength > originalLength) {\n        throw new CorruptIndexException(\"Corrupted: lengths mismatch: \" + decompressedLength + \" > \" + originalLength, in);\n      }\n      bytes.offset = offset;\n      bytes.length = length;\n    }\n\n    @Override\n    public Decompressor clone() {\n      return this;\n    }\n\n  };\n","realPath":"lucene/core/src/java/org/apache/lucene/codecs/compressing/CompressionMode.java","repoName":"lucene","snippetEndLine":0,"snippetStartLine":0,"startLine":130,"status":"M"}],"commitId":"ebdfdaed9f725b55e0878026b0d02b81b3156bc3","commitMessage":"@@@LUCENE-9246: Remove `dOff` argument from `LZ4#decompress`. (#1283)\n\nIt is always set to 0 at call sites.","date":"2020-02-28 18:26:56","modifiedFileCount":"5","status":"M","submitter":"Adrien Grand"},{"authorTime":"2020-09-03 18:17:04","codes":[{"authorDate":"2013-01-09 18:00:16","commitOrder":7,"curCode":"  private static final Decompressor DUMMY_DECOMPRESSOR = new Decompressor() {\n\n    @Override\n    public void decompress(DataInput in, int originalLength,\n        int offset, int length, BytesRef bytes) throws IOException {\n      assert offset + length <= originalLength;\n      if (bytes.bytes.length < originalLength) {\n        bytes.bytes = new byte[ArrayUtil.oversize(originalLength, 1)];\n      }\n      in.readBytes(bytes.bytes, 0, offset + length);\n      bytes.offset = offset;\n      bytes.length = length;\n    }\n\n    @Override\n    public Decompressor clone() {\n      return this;\n    }\n\n  };\n","date":"2013-01-09 18:00:16","endLine":74,"groupId":"4701","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"DUMMY_DECOMPRESSOR","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-lucene-10-0.7/blobInfo/CC_OUT/blobs/9e/1649dc79efd378edd4408f062ed66f816651f4.src","preCode":"  private static final Decompressor DUMMY_DECOMPRESSOR = new Decompressor() {\n\n    @Override\n    public void decompress(DataInput in, int originalLength,\n        int offset, int length, BytesRef bytes) throws IOException {\n      assert offset + length <= originalLength;\n      if (bytes.bytes.length < originalLength) {\n        bytes.bytes = new byte[ArrayUtil.oversize(originalLength, 1)];\n      }\n      in.readBytes(bytes.bytes, 0, offset + length);\n      bytes.offset = offset;\n      bytes.length = length;\n    }\n\n    @Override\n    public Decompressor clone() {\n      return this;\n    }\n\n  };\n","realPath":"lucene/test-framework/src/java/org/apache/lucene/codecs/compressing/dummy/DummyCompressingCodec.java","repoName":"lucene","snippetEndLine":0,"snippetStartLine":0,"startLine":55,"status":"N"},{"authorDate":"2020-09-03 18:17:04","commitOrder":7,"curCode":"  private static final Decompressor LZ4_DECOMPRESSOR = new Decompressor() {\n\n    @Override\n    public void decompress(DataInput in, int originalLength, int offset, int length, BytesRef bytes) throws IOException {\n      assert offset + length <= originalLength;\n      \r\n      if (bytes.bytes.length < originalLength + 7) {\n        bytes.bytes = new byte[ArrayUtil.oversize(originalLength + 7, 1)];\n      }\n      final int decompressedLength = LZ4.decompress(in, offset + length, bytes.bytes, 0);\n      if (decompressedLength > originalLength) {\n        throw new CorruptIndexException(\"Corrupted: lengths mismatch: \" + decompressedLength + \" > \" + originalLength, in);\n      }\n      bytes.offset = offset;\n      bytes.length = length;\n    }\n\n    @Override\n    public Decompressor clone() {\n      return this;\n    }\n\n  };\n","date":"2020-09-03 18:17:04","endLine":152,"groupId":"48324","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"LZ4_DECOMPRESSOR","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-lucene-10-0.7/blobInfo/CC_OUT/blobs/e5/a3c4e70bf5d88af02518925b629a31d0bb27f9.src","preCode":"  private static final Decompressor LZ4_DECOMPRESSOR = new Decompressor() {\n\n    @Override\n    public void decompress(DataInput in, int originalLength, int offset, int length, BytesRef bytes) throws IOException {\n      assert offset + length <= originalLength;\n      \r\n      if (bytes.bytes.length < originalLength + 7) {\n        bytes.bytes = new byte[ArrayUtil.oversize(originalLength + 7, 1)];\n      }\n      final int decompressedLength = LZ4.decompress(in, offset + length, bytes.bytes);\n      if (decompressedLength > originalLength) {\n        throw new CorruptIndexException(\"Corrupted: lengths mismatch: \" + decompressedLength + \" > \" + originalLength, in);\n      }\n      bytes.offset = offset;\n      bytes.length = length;\n    }\n\n    @Override\n    public Decompressor clone() {\n      return this;\n    }\n\n  };\n","realPath":"lucene/core/src/java/org/apache/lucene/codecs/compressing/CompressionMode.java","repoName":"lucene","snippetEndLine":0,"snippetStartLine":0,"startLine":130,"status":"M"}],"commitId":"27aa5c5f59e8cb03316efa504f0351decd41d61c","commitMessage":"@@@LUCENE-9486: Use preset dictionaries with LZ4 for BEST_SPEED. (#1793)\n\n","date":"2020-09-03 18:17:04","modifiedFileCount":"9","status":"M","submitter":"Adrien Grand"},{"authorTime":"2020-12-23 19:41:23","codes":[{"authorDate":"2013-01-09 18:00:16","commitOrder":8,"curCode":"  private static final Decompressor DUMMY_DECOMPRESSOR = new Decompressor() {\n\n    @Override\n    public void decompress(DataInput in, int originalLength,\n        int offset, int length, BytesRef bytes) throws IOException {\n      assert offset + length <= originalLength;\n      if (bytes.bytes.length < originalLength) {\n        bytes.bytes = new byte[ArrayUtil.oversize(originalLength, 1)];\n      }\n      in.readBytes(bytes.bytes, 0, offset + length);\n      bytes.offset = offset;\n      bytes.length = length;\n    }\n\n    @Override\n    public Decompressor clone() {\n      return this;\n    }\n\n  };\n","date":"2013-01-09 18:00:16","endLine":74,"groupId":"4701","id":13,"instanceNumber":1,"isCurCommit":0,"methodName":"DUMMY_DECOMPRESSOR","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-lucene-10-0.7/blobInfo/CC_OUT/blobs/9e/1649dc79efd378edd4408f062ed66f816651f4.src","preCode":"  private static final Decompressor DUMMY_DECOMPRESSOR = new Decompressor() {\n\n    @Override\n    public void decompress(DataInput in, int originalLength,\n        int offset, int length, BytesRef bytes) throws IOException {\n      assert offset + length <= originalLength;\n      if (bytes.bytes.length < originalLength) {\n        bytes.bytes = new byte[ArrayUtil.oversize(originalLength, 1)];\n      }\n      in.readBytes(bytes.bytes, 0, offset + length);\n      bytes.offset = offset;\n      bytes.length = length;\n    }\n\n    @Override\n    public Decompressor clone() {\n      return this;\n    }\n\n  };\n","realPath":"lucene/test-framework/src/java/org/apache/lucene/codecs/compressing/dummy/DummyCompressingCodec.java","repoName":"lucene","snippetEndLine":0,"snippetStartLine":0,"startLine":55,"status":"N"},{"authorDate":"2020-12-23 19:41:23","commitOrder":8,"curCode":"      new Decompressor() {\n\n        @Override\n        public void decompress(\n            DataInput in, int originalLength, int offset, int length, BytesRef bytes)\n            throws IOException {\n          assert offset + length <= originalLength;\n          \r\n          if (bytes.bytes.length < originalLength + 7) {\n            bytes.bytes = new byte[ArrayUtil.oversize(originalLength + 7, 1)];\n          }\n          final int decompressedLength = LZ4.decompress(in, offset + length, bytes.bytes, 0);\n          if (decompressedLength > originalLength) {\n            throw new CorruptIndexException(\n                \"Corrupted: lengths mismatch: \" + decompressedLength + \" > \" + originalLength, in);\n          }\n          bytes.offset = offset;\n          bytes.length = length;\n        }\n\n        @Override\n        public Decompressor clone() {\n          return this;\n        }\n      };\n","date":"2020-12-23 19:41:23","endLine":147,"groupId":"48324","id":14,"instanceNumber":2,"isCurCommit":1,"methodName":"LZ4_DECOMPRESSOR","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-lucene-10-0.7/blobInfo/CC_OUT/blobs/89/d2a6d8eb479a1ab315ffcbe1a9a9cc9c5b4fb1.src","preCode":"  private static final Decompressor LZ4_DECOMPRESSOR = new Decompressor() {\n\n    @Override\n    public void decompress(DataInput in, int originalLength, int offset, int length, BytesRef bytes) throws IOException {\n      assert offset + length <= originalLength;\n      \r\n      if (bytes.bytes.length < originalLength + 7) {\n        bytes.bytes = new byte[ArrayUtil.oversize(originalLength + 7, 1)];\n      }\n      final int decompressedLength = LZ4.decompress(in, offset + length, bytes.bytes, 0);\n      if (decompressedLength > originalLength) {\n        throw new CorruptIndexException(\"Corrupted: lengths mismatch: \" + decompressedLength + \" > \" + originalLength, in);\n      }\n      bytes.offset = offset;\n      bytes.length = length;\n    }\n\n    @Override\n    public Decompressor clone() {\n      return this;\n    }\n\n  };\n","realPath":"lucene/core/src/java/org/apache/lucene/codecs/compressing/CompressionMode.java","repoName":"lucene","snippetEndLine":0,"snippetStartLine":0,"startLine":123,"status":"M"}],"commitId":"2d6ad2fee6dfd96388594f4de9b37c037efe8017","commitMessage":"@@@LUCENE-9570: code reformatting [partial].\n","date":"2020-12-23 19:41:23","modifiedFileCount":"1531","status":"M","submitter":"Dawid Weiss"},{"authorTime":"2020-12-23 19:41:23","codes":[{"authorDate":"2021-01-05 20:44:05","commitOrder":9,"curCode":"      new Decompressor() {\n\n        @Override\n        public void decompress(\n            DataInput in, int originalLength, int offset, int length, BytesRef bytes)\n            throws IOException {\n          assert offset + length <= originalLength;\n          if (bytes.bytes.length < originalLength) {\n            bytes.bytes = new byte[ArrayUtil.oversize(originalLength, 1)];\n          }\n          in.readBytes(bytes.bytes, 0, offset + length);\n          bytes.offset = offset;\n          bytes.length = length;\n        }\n\n        @Override\n        public Decompressor clone() {\n          return this;\n        }\n      };\n","date":"2021-01-05 20:44:05","endLine":73,"groupId":"103241","id":15,"instanceNumber":1,"isCurCommit":1,"methodName":"DUMMY_DECOMPRESSOR","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-lucene-10-0.7/blobInfo/CC_OUT/blobs/1d/838ee2d0165f7cb368c00ed83601685d90429a.src","preCode":"  private static final Decompressor DUMMY_DECOMPRESSOR = new Decompressor() {\n\n    @Override\n    public void decompress(DataInput in, int originalLength,\n        int offset, int length, BytesRef bytes) throws IOException {\n      assert offset + length <= originalLength;\n      if (bytes.bytes.length < originalLength) {\n        bytes.bytes = new byte[ArrayUtil.oversize(originalLength, 1)];\n      }\n      in.readBytes(bytes.bytes, 0, offset + length);\n      bytes.offset = offset;\n      bytes.length = length;\n    }\n\n    @Override\n    public Decompressor clone() {\n      return this;\n    }\n\n  };\n","realPath":"lucene/test-framework/src/java/org/apache/lucene/codecs/compressing/dummy/DummyCompressingCodec.java","repoName":"lucene","snippetEndLine":0,"snippetStartLine":0,"startLine":54,"status":"M"},{"authorDate":"2020-12-23 19:41:23","commitOrder":9,"curCode":"      new Decompressor() {\n\n        @Override\n        public void decompress(\n            DataInput in, int originalLength, int offset, int length, BytesRef bytes)\n            throws IOException {\n          assert offset + length <= originalLength;\n          \r\n          if (bytes.bytes.length < originalLength + 7) {\n            bytes.bytes = new byte[ArrayUtil.oversize(originalLength + 7, 1)];\n          }\n          final int decompressedLength = LZ4.decompress(in, offset + length, bytes.bytes, 0);\n          if (decompressedLength > originalLength) {\n            throw new CorruptIndexException(\n                \"Corrupted: lengths mismatch: \" + decompressedLength + \" > \" + originalLength, in);\n          }\n          bytes.offset = offset;\n          bytes.length = length;\n        }\n\n        @Override\n        public Decompressor clone() {\n          return this;\n        }\n      };\n","date":"2020-12-23 19:41:23","endLine":147,"groupId":"103241","id":16,"instanceNumber":2,"isCurCommit":1,"methodName":"LZ4_DECOMPRESSOR","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-lucene-10-0.7/blobInfo/CC_OUT/blobs/89/d2a6d8eb479a1ab315ffcbe1a9a9cc9c5b4fb1.src","preCode":"      new Decompressor() {\n\n        @Override\n        public void decompress(\n            DataInput in, int originalLength, int offset, int length, BytesRef bytes)\n            throws IOException {\n          assert offset + length <= originalLength;\n          \r\n          if (bytes.bytes.length < originalLength + 7) {\n            bytes.bytes = new byte[ArrayUtil.oversize(originalLength + 7, 1)];\n          }\n          final int decompressedLength = LZ4.decompress(in, offset + length, bytes.bytes, 0);\n          if (decompressedLength > originalLength) {\n            throw new CorruptIndexException(\n                \"Corrupted: lengths mismatch: \" + decompressedLength + \" > \" + originalLength, in);\n          }\n          bytes.offset = offset;\n          bytes.length = length;\n        }\n\n        @Override\n        public Decompressor clone() {\n          return this;\n        }\n      };\n","realPath":"lucene/core/src/java/org/apache/lucene/codecs/compressing/CompressionMode.java","repoName":"lucene","snippetEndLine":0,"snippetStartLine":0,"startLine":123,"status":"N"}],"commitId":"2cbf261032dc8aca56c846971c090c991ac594a6","commitMessage":"@@@LUCENE-9570: code reformatting [final].\n","date":"2021-01-05 20:44:05","modifiedFileCount":"1282","status":"M","submitter":"Dawid Weiss"}]
