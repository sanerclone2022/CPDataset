[{"authorTime":"2014-03-18 16:56:12","codes":[{"authorDate":"2014-03-18 16:56:12","commitOrder":1,"curCode":"  public void testDifferentDVFormatPerField() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()));\n    conf.setCodec(new Lucene46Codec() {\n      @Override\n      public DocValuesFormat getDocValuesFormatForField(String field) {\n        return new Lucene45DocValuesFormat();\n      }\n    });\n    IndexWriter writer = new IndexWriter(dir, conf);\n    \n    Document doc = new Document();\n    doc.add(new StringField(\"key\", \"doc\", Store.NO));\n    doc.add(new BinaryDocValuesField(\"bdv\", toBytes(5L)));\n    doc.add(new SortedDocValuesField(\"sorted\", new BytesRef(\"value\")));\n    writer.addDocument(doc); \r\n    writer.commit();\n    writer.addDocument(doc); \r\n    \n    writer.updateBinaryDocValue(new Term(\"key\", \"doc\"), \"bdv\", toBytes(17L));\n    writer.close();\n    \n    final DirectoryReader reader = DirectoryReader.open(dir);\n    \n    AtomicReader r = SlowCompositeReaderWrapper.wrap(reader);\n    BinaryDocValues bdv = r.getBinaryDocValues(\"bdv\");\n    SortedDocValues sdv = r.getSortedDocValues(\"sorted\");\n    BytesRef scratch = new BytesRef();\n    for (int i = 0; i < r.maxDoc(); i++) {\n      assertEquals(17, getValue(bdv, i, scratch));\n      sdv.get(i, scratch);\n      assertEquals(new BytesRef(\"value\"), scratch);\n    }\n    \n    reader.close();\n    dir.close();\n  }\n","date":"2014-03-18 16:56:12","endLine":607,"groupId":"52349","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testDifferentDVFormatPerField","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-lucene-10-0.7/blobInfo/CC_OUT/blobs/3c/3d8da50c1d80133393525df145e48765a6a692.src","preCode":"  public void testDifferentDVFormatPerField() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()));\n    conf.setCodec(new Lucene46Codec() {\n      @Override\n      public DocValuesFormat getDocValuesFormatForField(String field) {\n        return new Lucene45DocValuesFormat();\n      }\n    });\n    IndexWriter writer = new IndexWriter(dir, conf);\n    \n    Document doc = new Document();\n    doc.add(new StringField(\"key\", \"doc\", Store.NO));\n    doc.add(new BinaryDocValuesField(\"bdv\", toBytes(5L)));\n    doc.add(new SortedDocValuesField(\"sorted\", new BytesRef(\"value\")));\n    writer.addDocument(doc); \r\n    writer.commit();\n    writer.addDocument(doc); \r\n    \n    writer.updateBinaryDocValue(new Term(\"key\", \"doc\"), \"bdv\", toBytes(17L));\n    writer.close();\n    \n    final DirectoryReader reader = DirectoryReader.open(dir);\n    \n    AtomicReader r = SlowCompositeReaderWrapper.wrap(reader);\n    BinaryDocValues bdv = r.getBinaryDocValues(\"bdv\");\n    SortedDocValues sdv = r.getSortedDocValues(\"sorted\");\n    BytesRef scratch = new BytesRef();\n    for (int i = 0; i < r.maxDoc(); i++) {\n      assertEquals(17, getValue(bdv, i, scratch));\n      sdv.get(i, scratch);\n      assertEquals(new BytesRef(\"value\"), scratch);\n    }\n    \n    reader.close();\n    dir.close();\n  }\n","realPath":"lucene/core/src/test/org/apache/lucene/index/TestBinaryDocValuesUpdates.java","repoName":"lucene","snippetEndLine":0,"snippetStartLine":0,"startLine":571,"status":"B"},{"authorDate":"2014-03-18 16:56:12","commitOrder":1,"curCode":"  public void testUpdateSameDocMultipleTimes() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()));\n    IndexWriter writer = new IndexWriter(dir, conf);\n    \n    Document doc = new Document();\n    doc.add(new StringField(\"key\", \"doc\", Store.NO));\n    doc.add(new BinaryDocValuesField(\"bdv\", toBytes(5L)));\n    writer.addDocument(doc); \r\n    writer.commit();\n    writer.addDocument(doc); \r\n    \n    writer.updateBinaryDocValue(new Term(\"key\", \"doc\"), \"bdv\", toBytes(17L)); \r\n    writer.updateBinaryDocValue(new Term(\"key\", \"doc\"), \"bdv\", toBytes(3L)); \r\n    writer.close();\n    \n    final DirectoryReader reader = DirectoryReader.open(dir);\n    final AtomicReader r = SlowCompositeReaderWrapper.wrap(reader);\n    BinaryDocValues bdv = r.getBinaryDocValues(\"bdv\");\n    BytesRef scratch = new BytesRef();\n    for (int i = 0; i < r.maxDoc(); i++) {\n      assertEquals(3, getValue(bdv, i, scratch));\n    }\n    reader.close();\n    dir.close();\n  }\n","date":"2014-03-18 16:56:12","endLine":634,"groupId":"11038","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testUpdateSameDocMultipleTimes","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-lucene-10-0.7/blobInfo/CC_OUT/blobs/3c/3d8da50c1d80133393525df145e48765a6a692.src","preCode":"  public void testUpdateSameDocMultipleTimes() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()));\n    IndexWriter writer = new IndexWriter(dir, conf);\n    \n    Document doc = new Document();\n    doc.add(new StringField(\"key\", \"doc\", Store.NO));\n    doc.add(new BinaryDocValuesField(\"bdv\", toBytes(5L)));\n    writer.addDocument(doc); \r\n    writer.commit();\n    writer.addDocument(doc); \r\n    \n    writer.updateBinaryDocValue(new Term(\"key\", \"doc\"), \"bdv\", toBytes(17L)); \r\n    writer.updateBinaryDocValue(new Term(\"key\", \"doc\"), \"bdv\", toBytes(3L)); \r\n    writer.close();\n    \n    final DirectoryReader reader = DirectoryReader.open(dir);\n    final AtomicReader r = SlowCompositeReaderWrapper.wrap(reader);\n    BinaryDocValues bdv = r.getBinaryDocValues(\"bdv\");\n    BytesRef scratch = new BytesRef();\n    for (int i = 0; i < r.maxDoc(); i++) {\n      assertEquals(3, getValue(bdv, i, scratch));\n    }\n    reader.close();\n    dir.close();\n  }\n","realPath":"lucene/core/src/test/org/apache/lucene/index/TestBinaryDocValuesUpdates.java","repoName":"lucene","snippetEndLine":0,"snippetStartLine":0,"startLine":609,"status":"B"}],"commitId":"c5263086b4da47ae0331678f1ec64dc1e7e3577b","commitMessage":"@@@LUCENE-5513: add IndexWriter.updateBinaryDocValue\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1578784 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2014-03-18 16:56:12","modifiedFileCount":"12","status":"B","submitter":"Shai Erera"},{"authorTime":"2014-04-08 23:34:50","codes":[{"authorDate":"2014-04-08 23:34:50","commitOrder":2,"curCode":"  public void testDifferentDVFormatPerField() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()));\n    conf.setCodec(new Lucene46Codec() {\n      @Override\n      public DocValuesFormat getDocValuesFormatForField(String field) {\n        return new Lucene45DocValuesFormat();\n      }\n    });\n    IndexWriter writer = new IndexWriter(dir, conf);\n    \n    Document doc = new Document();\n    doc.add(new StringField(\"key\", \"doc\", Store.NO));\n    doc.add(new BinaryDocValuesField(\"bdv\", toBytes(5L)));\n    doc.add(new SortedDocValuesField(\"sorted\", new BytesRef(\"value\")));\n    writer.addDocument(doc); \r\n    writer.commit();\n    writer.addDocument(doc); \r\n    \n    writer.updateBinaryDocValue(new Term(\"key\", \"doc\"), \"bdv\", toBytes(17L));\n    writer.shutdown();\n    \n    final DirectoryReader reader = DirectoryReader.open(dir);\n    \n    AtomicReader r = SlowCompositeReaderWrapper.wrap(reader);\n    BinaryDocValues bdv = r.getBinaryDocValues(\"bdv\");\n    SortedDocValues sdv = r.getSortedDocValues(\"sorted\");\n    BytesRef scratch = new BytesRef();\n    for (int i = 0; i < r.maxDoc(); i++) {\n      assertEquals(17, getValue(bdv, i, scratch));\n      sdv.get(i, scratch);\n      assertEquals(new BytesRef(\"value\"), scratch);\n    }\n    \n    reader.close();\n    dir.close();\n  }\n","date":"2014-04-08 23:34:50","endLine":608,"groupId":"52349","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testDifferentDVFormatPerField","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-lucene-10-0.7/blobInfo/CC_OUT/blobs/e6/dadb2ac08f3301e67b47f3102318e3dad5d608.src","preCode":"  public void testDifferentDVFormatPerField() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()));\n    conf.setCodec(new Lucene46Codec() {\n      @Override\n      public DocValuesFormat getDocValuesFormatForField(String field) {\n        return new Lucene45DocValuesFormat();\n      }\n    });\n    IndexWriter writer = new IndexWriter(dir, conf);\n    \n    Document doc = new Document();\n    doc.add(new StringField(\"key\", \"doc\", Store.NO));\n    doc.add(new BinaryDocValuesField(\"bdv\", toBytes(5L)));\n    doc.add(new SortedDocValuesField(\"sorted\", new BytesRef(\"value\")));\n    writer.addDocument(doc); \r\n    writer.commit();\n    writer.addDocument(doc); \r\n    \n    writer.updateBinaryDocValue(new Term(\"key\", \"doc\"), \"bdv\", toBytes(17L));\n    writer.close();\n    \n    final DirectoryReader reader = DirectoryReader.open(dir);\n    \n    AtomicReader r = SlowCompositeReaderWrapper.wrap(reader);\n    BinaryDocValues bdv = r.getBinaryDocValues(\"bdv\");\n    SortedDocValues sdv = r.getSortedDocValues(\"sorted\");\n    BytesRef scratch = new BytesRef();\n    for (int i = 0; i < r.maxDoc(); i++) {\n      assertEquals(17, getValue(bdv, i, scratch));\n      sdv.get(i, scratch);\n      assertEquals(new BytesRef(\"value\"), scratch);\n    }\n    \n    reader.close();\n    dir.close();\n  }\n","realPath":"lucene/core/src/test/org/apache/lucene/index/TestBinaryDocValuesUpdates.java","repoName":"lucene","snippetEndLine":0,"snippetStartLine":0,"startLine":572,"status":"M"},{"authorDate":"2014-04-08 23:34:50","commitOrder":2,"curCode":"  public void testUpdateSameDocMultipleTimes() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()));\n    IndexWriter writer = new IndexWriter(dir, conf);\n    \n    Document doc = new Document();\n    doc.add(new StringField(\"key\", \"doc\", Store.NO));\n    doc.add(new BinaryDocValuesField(\"bdv\", toBytes(5L)));\n    writer.addDocument(doc); \r\n    writer.commit();\n    writer.addDocument(doc); \r\n    \n    writer.updateBinaryDocValue(new Term(\"key\", \"doc\"), \"bdv\", toBytes(17L)); \r\n    writer.updateBinaryDocValue(new Term(\"key\", \"doc\"), \"bdv\", toBytes(3L)); \r\n    writer.shutdown();\n    \n    final DirectoryReader reader = DirectoryReader.open(dir);\n    final AtomicReader r = SlowCompositeReaderWrapper.wrap(reader);\n    BinaryDocValues bdv = r.getBinaryDocValues(\"bdv\");\n    BytesRef scratch = new BytesRef();\n    for (int i = 0; i < r.maxDoc(); i++) {\n      assertEquals(3, getValue(bdv, i, scratch));\n    }\n    reader.close();\n    dir.close();\n  }\n","date":"2014-04-08 23:34:50","endLine":635,"groupId":"11038","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testUpdateSameDocMultipleTimes","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-lucene-10-0.7/blobInfo/CC_OUT/blobs/e6/dadb2ac08f3301e67b47f3102318e3dad5d608.src","preCode":"  public void testUpdateSameDocMultipleTimes() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()));\n    IndexWriter writer = new IndexWriter(dir, conf);\n    \n    Document doc = new Document();\n    doc.add(new StringField(\"key\", \"doc\", Store.NO));\n    doc.add(new BinaryDocValuesField(\"bdv\", toBytes(5L)));\n    writer.addDocument(doc); \r\n    writer.commit();\n    writer.addDocument(doc); \r\n    \n    writer.updateBinaryDocValue(new Term(\"key\", \"doc\"), \"bdv\", toBytes(17L)); \r\n    writer.updateBinaryDocValue(new Term(\"key\", \"doc\"), \"bdv\", toBytes(3L)); \r\n    writer.close();\n    \n    final DirectoryReader reader = DirectoryReader.open(dir);\n    final AtomicReader r = SlowCompositeReaderWrapper.wrap(reader);\n    BinaryDocValues bdv = r.getBinaryDocValues(\"bdv\");\n    BytesRef scratch = new BytesRef();\n    for (int i = 0; i < r.maxDoc(); i++) {\n      assertEquals(3, getValue(bdv, i, scratch));\n    }\n    reader.close();\n    dir.close();\n  }\n","realPath":"lucene/core/src/test/org/apache/lucene/index/TestBinaryDocValuesUpdates.java","repoName":"lucene","snippetEndLine":0,"snippetStartLine":0,"startLine":610,"status":"M"}],"commitId":"8559eafd99e5b569d4ad866e98f410fb4868fd4c","commitMessage":"@@@LUCENE-4246: fix IW.close to just close.  even on exception\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1585759 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2014-04-08 23:34:50","modifiedFileCount":"403","status":"M","submitter":"Michael McCandless"},{"authorTime":"2014-04-08 23:34:50","codes":[{"authorDate":"2014-06-05 02:26:04","commitOrder":3,"curCode":"  public void testDifferentDVFormatPerField() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()));\n    conf.setCodec(new Lucene49Codec() {\n      @Override\n      public DocValuesFormat getDocValuesFormatForField(String field) {\n        return new Lucene49DocValuesFormat();\n      }\n    });\n    IndexWriter writer = new IndexWriter(dir, conf);\n    \n    Document doc = new Document();\n    doc.add(new StringField(\"key\", \"doc\", Store.NO));\n    doc.add(new BinaryDocValuesField(\"bdv\", toBytes(5L)));\n    doc.add(new SortedDocValuesField(\"sorted\", new BytesRef(\"value\")));\n    writer.addDocument(doc); \r\n    writer.commit();\n    writer.addDocument(doc); \r\n    \n    writer.updateBinaryDocValue(new Term(\"key\", \"doc\"), \"bdv\", toBytes(17L));\n    writer.shutdown();\n    \n    final DirectoryReader reader = DirectoryReader.open(dir);\n    \n    AtomicReader r = SlowCompositeReaderWrapper.wrap(reader);\n    BinaryDocValues bdv = r.getBinaryDocValues(\"bdv\");\n    SortedDocValues sdv = r.getSortedDocValues(\"sorted\");\n    BytesRef scratch = new BytesRef();\n    for (int i = 0; i < r.maxDoc(); i++) {\n      assertEquals(17, getValue(bdv, i, scratch));\n      sdv.get(i, scratch);\n      assertEquals(new BytesRef(\"value\"), scratch);\n    }\n    \n    reader.close();\n    dir.close();\n  }\n","date":"2014-06-05 02:26:04","endLine":537,"groupId":"52349","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testDifferentDVFormatPerField","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-lucene-10-0.7/blobInfo/CC_OUT/blobs/26/ee4e49b944b90a9fd88efaddda9e1dde08ce97.src","preCode":"  public void testDifferentDVFormatPerField() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()));\n    conf.setCodec(new Lucene46Codec() {\n      @Override\n      public DocValuesFormat getDocValuesFormatForField(String field) {\n        return new Lucene45DocValuesFormat();\n      }\n    });\n    IndexWriter writer = new IndexWriter(dir, conf);\n    \n    Document doc = new Document();\n    doc.add(new StringField(\"key\", \"doc\", Store.NO));\n    doc.add(new BinaryDocValuesField(\"bdv\", toBytes(5L)));\n    doc.add(new SortedDocValuesField(\"sorted\", new BytesRef(\"value\")));\n    writer.addDocument(doc); \r\n    writer.commit();\n    writer.addDocument(doc); \r\n    \n    writer.updateBinaryDocValue(new Term(\"key\", \"doc\"), \"bdv\", toBytes(17L));\n    writer.shutdown();\n    \n    final DirectoryReader reader = DirectoryReader.open(dir);\n    \n    AtomicReader r = SlowCompositeReaderWrapper.wrap(reader);\n    BinaryDocValues bdv = r.getBinaryDocValues(\"bdv\");\n    SortedDocValues sdv = r.getSortedDocValues(\"sorted\");\n    BytesRef scratch = new BytesRef();\n    for (int i = 0; i < r.maxDoc(); i++) {\n      assertEquals(17, getValue(bdv, i, scratch));\n      sdv.get(i, scratch);\n      assertEquals(new BytesRef(\"value\"), scratch);\n    }\n    \n    reader.close();\n    dir.close();\n  }\n","realPath":"lucene/core/src/test/org/apache/lucene/index/TestBinaryDocValuesUpdates.java","repoName":"lucene","snippetEndLine":0,"snippetStartLine":0,"startLine":501,"status":"M"},{"authorDate":"2014-04-08 23:34:50","commitOrder":3,"curCode":"  public void testUpdateSameDocMultipleTimes() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()));\n    IndexWriter writer = new IndexWriter(dir, conf);\n    \n    Document doc = new Document();\n    doc.add(new StringField(\"key\", \"doc\", Store.NO));\n    doc.add(new BinaryDocValuesField(\"bdv\", toBytes(5L)));\n    writer.addDocument(doc); \r\n    writer.commit();\n    writer.addDocument(doc); \r\n    \n    writer.updateBinaryDocValue(new Term(\"key\", \"doc\"), \"bdv\", toBytes(17L)); \r\n    writer.updateBinaryDocValue(new Term(\"key\", \"doc\"), \"bdv\", toBytes(3L)); \r\n    writer.shutdown();\n    \n    final DirectoryReader reader = DirectoryReader.open(dir);\n    final AtomicReader r = SlowCompositeReaderWrapper.wrap(reader);\n    BinaryDocValues bdv = r.getBinaryDocValues(\"bdv\");\n    BytesRef scratch = new BytesRef();\n    for (int i = 0; i < r.maxDoc(); i++) {\n      assertEquals(3, getValue(bdv, i, scratch));\n    }\n    reader.close();\n    dir.close();\n  }\n","date":"2014-04-08 23:34:50","endLine":635,"groupId":"11038","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testUpdateSameDocMultipleTimes","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-lucene-10-0.7/blobInfo/CC_OUT/blobs/e6/dadb2ac08f3301e67b47f3102318e3dad5d608.src","preCode":"  public void testUpdateSameDocMultipleTimes() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()));\n    IndexWriter writer = new IndexWriter(dir, conf);\n    \n    Document doc = new Document();\n    doc.add(new StringField(\"key\", \"doc\", Store.NO));\n    doc.add(new BinaryDocValuesField(\"bdv\", toBytes(5L)));\n    writer.addDocument(doc); \r\n    writer.commit();\n    writer.addDocument(doc); \r\n    \n    writer.updateBinaryDocValue(new Term(\"key\", \"doc\"), \"bdv\", toBytes(17L)); \r\n    writer.updateBinaryDocValue(new Term(\"key\", \"doc\"), \"bdv\", toBytes(3L)); \r\n    writer.shutdown();\n    \n    final DirectoryReader reader = DirectoryReader.open(dir);\n    final AtomicReader r = SlowCompositeReaderWrapper.wrap(reader);\n    BinaryDocValues bdv = r.getBinaryDocValues(\"bdv\");\n    BytesRef scratch = new BytesRef();\n    for (int i = 0; i < r.maxDoc(); i++) {\n      assertEquals(3, getValue(bdv, i, scratch));\n    }\n    reader.close();\n    dir.close();\n  }\n","realPath":"lucene/core/src/test/org/apache/lucene/index/TestBinaryDocValuesUpdates.java","repoName":"lucene","snippetEndLine":0,"snippetStartLine":0,"startLine":610,"status":"N"}],"commitId":"9e6c1432a6b9e5483982fb2d4d2982779f192b7a","commitMessage":"@@@LUCENE-5731: split out direct packed ints from in-ram ones\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1600412 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2014-06-05 02:26:04","modifiedFileCount":"48","status":"M","submitter":"Robert Muir"},{"authorTime":"2014-06-05 23:54:49","codes":[{"authorDate":"2014-06-05 23:54:49","commitOrder":4,"curCode":"  public void testDifferentDVFormatPerField() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()));\n    conf.setCodec(new Lucene49Codec() {\n      @Override\n      public DocValuesFormat getDocValuesFormatForField(String field) {\n        return new Lucene49DocValuesFormat();\n      }\n    });\n    IndexWriter writer = new IndexWriter(dir, conf);\n    \n    Document doc = new Document();\n    doc.add(new StringField(\"key\", \"doc\", Store.NO));\n    doc.add(new BinaryDocValuesField(\"bdv\", toBytes(5L)));\n    doc.add(new SortedDocValuesField(\"sorted\", new BytesRef(\"value\")));\n    writer.addDocument(doc); \r\n    writer.commit();\n    writer.addDocument(doc); \r\n    \n    writer.updateBinaryDocValue(new Term(\"key\", \"doc\"), \"bdv\", toBytes(17L));\n    writer.shutdown();\n    \n    final DirectoryReader reader = DirectoryReader.open(dir);\n    \n    AtomicReader r = SlowCompositeReaderWrapper.wrap(reader);\n    BinaryDocValues bdv = r.getBinaryDocValues(\"bdv\");\n    SortedDocValues sdv = r.getSortedDocValues(\"sorted\");\n    for (int i = 0; i < r.maxDoc(); i++) {\n      assertEquals(17, getValue(bdv, i));\n      BytesRef term = sdv.get(i);\n      assertEquals(new BytesRef(\"value\"), term);\n    }\n    \n    reader.close();\n    dir.close();\n  }\n","date":"2014-06-05 23:54:49","endLine":529,"groupId":"52349","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"testDifferentDVFormatPerField","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-lucene-10-0.7/blobInfo/CC_OUT/blobs/3d/809a680e64882266cada3b931ba3d2292fd18d.src","preCode":"  public void testDifferentDVFormatPerField() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()));\n    conf.setCodec(new Lucene49Codec() {\n      @Override\n      public DocValuesFormat getDocValuesFormatForField(String field) {\n        return new Lucene49DocValuesFormat();\n      }\n    });\n    IndexWriter writer = new IndexWriter(dir, conf);\n    \n    Document doc = new Document();\n    doc.add(new StringField(\"key\", \"doc\", Store.NO));\n    doc.add(new BinaryDocValuesField(\"bdv\", toBytes(5L)));\n    doc.add(new SortedDocValuesField(\"sorted\", new BytesRef(\"value\")));\n    writer.addDocument(doc); \r\n    writer.commit();\n    writer.addDocument(doc); \r\n    \n    writer.updateBinaryDocValue(new Term(\"key\", \"doc\"), \"bdv\", toBytes(17L));\n    writer.shutdown();\n    \n    final DirectoryReader reader = DirectoryReader.open(dir);\n    \n    AtomicReader r = SlowCompositeReaderWrapper.wrap(reader);\n    BinaryDocValues bdv = r.getBinaryDocValues(\"bdv\");\n    SortedDocValues sdv = r.getSortedDocValues(\"sorted\");\n    BytesRef scratch = new BytesRef();\n    for (int i = 0; i < r.maxDoc(); i++) {\n      assertEquals(17, getValue(bdv, i, scratch));\n      sdv.get(i, scratch);\n      assertEquals(new BytesRef(\"value\"), scratch);\n    }\n    \n    reader.close();\n    dir.close();\n  }\n","realPath":"lucene/core/src/test/org/apache/lucene/index/TestBinaryDocValuesUpdates.java","repoName":"lucene","snippetEndLine":0,"snippetStartLine":0,"startLine":494,"status":"M"},{"authorDate":"2014-06-05 23:54:49","commitOrder":4,"curCode":"  public void testUpdateSameDocMultipleTimes() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()));\n    IndexWriter writer = new IndexWriter(dir, conf);\n    \n    Document doc = new Document();\n    doc.add(new StringField(\"key\", \"doc\", Store.NO));\n    doc.add(new BinaryDocValuesField(\"bdv\", toBytes(5L)));\n    writer.addDocument(doc); \r\n    writer.commit();\n    writer.addDocument(doc); \r\n    \n    writer.updateBinaryDocValue(new Term(\"key\", \"doc\"), \"bdv\", toBytes(17L)); \r\n    writer.updateBinaryDocValue(new Term(\"key\", \"doc\"), \"bdv\", toBytes(3L)); \r\n    writer.shutdown();\n    \n    final DirectoryReader reader = DirectoryReader.open(dir);\n    final AtomicReader r = SlowCompositeReaderWrapper.wrap(reader);\n    BinaryDocValues bdv = r.getBinaryDocValues(\"bdv\");\n    for (int i = 0; i < r.maxDoc(); i++) {\n      assertEquals(3, getValue(bdv, i));\n    }\n    reader.close();\n    dir.close();\n  }\n","date":"2014-06-05 23:54:49","endLine":555,"groupId":"11038","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"testUpdateSameDocMultipleTimes","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-lucene-10-0.7/blobInfo/CC_OUT/blobs/3d/809a680e64882266cada3b931ba3d2292fd18d.src","preCode":"  public void testUpdateSameDocMultipleTimes() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()));\n    IndexWriter writer = new IndexWriter(dir, conf);\n    \n    Document doc = new Document();\n    doc.add(new StringField(\"key\", \"doc\", Store.NO));\n    doc.add(new BinaryDocValuesField(\"bdv\", toBytes(5L)));\n    writer.addDocument(doc); \r\n    writer.commit();\n    writer.addDocument(doc); \r\n    \n    writer.updateBinaryDocValue(new Term(\"key\", \"doc\"), \"bdv\", toBytes(17L)); \r\n    writer.updateBinaryDocValue(new Term(\"key\", \"doc\"), \"bdv\", toBytes(3L)); \r\n    writer.shutdown();\n    \n    final DirectoryReader reader = DirectoryReader.open(dir);\n    final AtomicReader r = SlowCompositeReaderWrapper.wrap(reader);\n    BinaryDocValues bdv = r.getBinaryDocValues(\"bdv\");\n    BytesRef scratch = new BytesRef();\n    for (int i = 0; i < r.maxDoc(); i++) {\n      assertEquals(3, getValue(bdv, i, scratch));\n    }\n    reader.close();\n    dir.close();\n  }\n","realPath":"lucene/core/src/test/org/apache/lucene/index/TestBinaryDocValuesUpdates.java","repoName":"lucene","snippetEndLine":0,"snippetStartLine":0,"startLine":531,"status":"M"}],"commitId":"8f267c8560cac15d140c5097dfd6392c4270d3d2","commitMessage":"@@@LUCENE-5703: BinaryDocValues producers don't allocate or copy bytes on each access anymore\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1600688 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2014-06-05 23:54:49","modifiedFileCount":"75","status":"M","submitter":"Robert Muir"},{"authorTime":"2014-07-31 00:20:24","codes":[{"authorDate":"2014-07-31 00:20:24","commitOrder":5,"curCode":"  public void testDifferentDVFormatPerField() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(new MockAnalyzer(random()));\n    conf.setCodec(new Lucene49Codec() {\n      @Override\n      public DocValuesFormat getDocValuesFormatForField(String field) {\n        return new Lucene49DocValuesFormat();\n      }\n    });\n    IndexWriter writer = new IndexWriter(dir, conf);\n    \n    Document doc = new Document();\n    doc.add(new StringField(\"key\", \"doc\", Store.NO));\n    doc.add(new BinaryDocValuesField(\"bdv\", toBytes(5L)));\n    doc.add(new SortedDocValuesField(\"sorted\", new BytesRef(\"value\")));\n    writer.addDocument(doc); \r\n    writer.commit();\n    writer.addDocument(doc); \r\n    \n    writer.updateBinaryDocValue(new Term(\"key\", \"doc\"), \"bdv\", toBytes(17L));\n    writer.shutdown();\n    \n    final DirectoryReader reader = DirectoryReader.open(dir);\n    \n    AtomicReader r = SlowCompositeReaderWrapper.wrap(reader);\n    BinaryDocValues bdv = r.getBinaryDocValues(\"bdv\");\n    SortedDocValues sdv = r.getSortedDocValues(\"sorted\");\n    for (int i = 0; i < r.maxDoc(); i++) {\n      assertEquals(17, getValue(bdv, i));\n      BytesRef term = sdv.get(i);\n      assertEquals(new BytesRef(\"value\"), term);\n    }\n    \n    reader.close();\n    dir.close();\n  }\n","date":"2014-07-31 00:20:24","endLine":529,"groupId":"52349","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"testDifferentDVFormatPerField","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-lucene-10-0.7/blobInfo/CC_OUT/blobs/2f/83c1e479387b214143da568a5875483ac61e89.src","preCode":"  public void testDifferentDVFormatPerField() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()));\n    conf.setCodec(new Lucene49Codec() {\n      @Override\n      public DocValuesFormat getDocValuesFormatForField(String field) {\n        return new Lucene49DocValuesFormat();\n      }\n    });\n    IndexWriter writer = new IndexWriter(dir, conf);\n    \n    Document doc = new Document();\n    doc.add(new StringField(\"key\", \"doc\", Store.NO));\n    doc.add(new BinaryDocValuesField(\"bdv\", toBytes(5L)));\n    doc.add(new SortedDocValuesField(\"sorted\", new BytesRef(\"value\")));\n    writer.addDocument(doc); \r\n    writer.commit();\n    writer.addDocument(doc); \r\n    \n    writer.updateBinaryDocValue(new Term(\"key\", \"doc\"), \"bdv\", toBytes(17L));\n    writer.shutdown();\n    \n    final DirectoryReader reader = DirectoryReader.open(dir);\n    \n    AtomicReader r = SlowCompositeReaderWrapper.wrap(reader);\n    BinaryDocValues bdv = r.getBinaryDocValues(\"bdv\");\n    SortedDocValues sdv = r.getSortedDocValues(\"sorted\");\n    for (int i = 0; i < r.maxDoc(); i++) {\n      assertEquals(17, getValue(bdv, i));\n      BytesRef term = sdv.get(i);\n      assertEquals(new BytesRef(\"value\"), term);\n    }\n    \n    reader.close();\n    dir.close();\n  }\n","realPath":"lucene/core/src/test/org/apache/lucene/index/TestBinaryDocValuesUpdates.java","repoName":"lucene","snippetEndLine":0,"snippetStartLine":0,"startLine":494,"status":"M"},{"authorDate":"2014-07-31 00:20:24","commitOrder":5,"curCode":"  public void testUpdateSameDocMultipleTimes() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(new MockAnalyzer(random()));\n    IndexWriter writer = new IndexWriter(dir, conf);\n    \n    Document doc = new Document();\n    doc.add(new StringField(\"key\", \"doc\", Store.NO));\n    doc.add(new BinaryDocValuesField(\"bdv\", toBytes(5L)));\n    writer.addDocument(doc); \r\n    writer.commit();\n    writer.addDocument(doc); \r\n    \n    writer.updateBinaryDocValue(new Term(\"key\", \"doc\"), \"bdv\", toBytes(17L)); \r\n    writer.updateBinaryDocValue(new Term(\"key\", \"doc\"), \"bdv\", toBytes(3L)); \r\n    writer.shutdown();\n    \n    final DirectoryReader reader = DirectoryReader.open(dir);\n    final AtomicReader r = SlowCompositeReaderWrapper.wrap(reader);\n    BinaryDocValues bdv = r.getBinaryDocValues(\"bdv\");\n    for (int i = 0; i < r.maxDoc(); i++) {\n      assertEquals(3, getValue(bdv, i));\n    }\n    reader.close();\n    dir.close();\n  }\n","date":"2014-07-31 00:20:24","endLine":555,"groupId":"11038","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"testUpdateSameDocMultipleTimes","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-lucene-10-0.7/blobInfo/CC_OUT/blobs/2f/83c1e479387b214143da568a5875483ac61e89.src","preCode":"  public void testUpdateSameDocMultipleTimes() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()));\n    IndexWriter writer = new IndexWriter(dir, conf);\n    \n    Document doc = new Document();\n    doc.add(new StringField(\"key\", \"doc\", Store.NO));\n    doc.add(new BinaryDocValuesField(\"bdv\", toBytes(5L)));\n    writer.addDocument(doc); \r\n    writer.commit();\n    writer.addDocument(doc); \r\n    \n    writer.updateBinaryDocValue(new Term(\"key\", \"doc\"), \"bdv\", toBytes(17L)); \r\n    writer.updateBinaryDocValue(new Term(\"key\", \"doc\"), \"bdv\", toBytes(3L)); \r\n    writer.shutdown();\n    \n    final DirectoryReader reader = DirectoryReader.open(dir);\n    final AtomicReader r = SlowCompositeReaderWrapper.wrap(reader);\n    BinaryDocValues bdv = r.getBinaryDocValues(\"bdv\");\n    for (int i = 0; i < r.maxDoc(); i++) {\n      assertEquals(3, getValue(bdv, i));\n    }\n    reader.close();\n    dir.close();\n  }\n","realPath":"lucene/core/src/test/org/apache/lucene/index/TestBinaryDocValuesUpdates.java","repoName":"lucene","snippetEndLine":0,"snippetStartLine":0,"startLine":531,"status":"M"}],"commitId":"3f4b2b472f2c76d72cae94fd4747b103c973d707","commitMessage":"@@@LUCENE-5859: remove Version param from LuceneTestCase.newIndexWriterConfig.  the grand sum of 2 tests making use of it can use the 3-arg version and reduce the noise everywhere else\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1614698 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2014-07-31 00:20:24","modifiedFileCount":"244","status":"M","submitter":"Robert Muir"},{"authorTime":"2014-08-10 02:54:35","codes":[{"authorDate":"2014-08-10 02:54:35","commitOrder":6,"curCode":"  public void testDifferentDVFormatPerField() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(new MockAnalyzer(random()));\n    conf.setCodec(new Lucene49Codec() {\n      @Override\n      public DocValuesFormat getDocValuesFormatForField(String field) {\n        return new Lucene49DocValuesFormat();\n      }\n    });\n    IndexWriter writer = new IndexWriter(dir, conf);\n    \n    Document doc = new Document();\n    doc.add(new StringField(\"key\", \"doc\", Store.NO));\n    doc.add(new BinaryDocValuesField(\"bdv\", toBytes(5L)));\n    doc.add(new SortedDocValuesField(\"sorted\", new BytesRef(\"value\")));\n    writer.addDocument(doc); \r\n    writer.commit();\n    writer.addDocument(doc); \r\n    \n    writer.updateBinaryDocValue(new Term(\"key\", \"doc\"), \"bdv\", toBytes(17L));\n    writer.close();\n    \n    final DirectoryReader reader = DirectoryReader.open(dir);\n    \n    AtomicReader r = SlowCompositeReaderWrapper.wrap(reader);\n    BinaryDocValues bdv = r.getBinaryDocValues(\"bdv\");\n    SortedDocValues sdv = r.getSortedDocValues(\"sorted\");\n    for (int i = 0; i < r.maxDoc(); i++) {\n      assertEquals(17, getValue(bdv, i));\n      BytesRef term = sdv.get(i);\n      assertEquals(new BytesRef(\"value\"), term);\n    }\n    \n    reader.close();\n    dir.close();\n  }\n","date":"2014-08-10 02:54:35","endLine":528,"groupId":"52349","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"testDifferentDVFormatPerField","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-lucene-10-0.7/blobInfo/CC_OUT/blobs/e2/4eb44edc08b01b522387b7a99fe22e5d64bda1.src","preCode":"  public void testDifferentDVFormatPerField() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(new MockAnalyzer(random()));\n    conf.setCodec(new Lucene49Codec() {\n      @Override\n      public DocValuesFormat getDocValuesFormatForField(String field) {\n        return new Lucene49DocValuesFormat();\n      }\n    });\n    IndexWriter writer = new IndexWriter(dir, conf);\n    \n    Document doc = new Document();\n    doc.add(new StringField(\"key\", \"doc\", Store.NO));\n    doc.add(new BinaryDocValuesField(\"bdv\", toBytes(5L)));\n    doc.add(new SortedDocValuesField(\"sorted\", new BytesRef(\"value\")));\n    writer.addDocument(doc); \r\n    writer.commit();\n    writer.addDocument(doc); \r\n    \n    writer.updateBinaryDocValue(new Term(\"key\", \"doc\"), \"bdv\", toBytes(17L));\n    writer.shutdown();\n    \n    final DirectoryReader reader = DirectoryReader.open(dir);\n    \n    AtomicReader r = SlowCompositeReaderWrapper.wrap(reader);\n    BinaryDocValues bdv = r.getBinaryDocValues(\"bdv\");\n    SortedDocValues sdv = r.getSortedDocValues(\"sorted\");\n    for (int i = 0; i < r.maxDoc(); i++) {\n      assertEquals(17, getValue(bdv, i));\n      BytesRef term = sdv.get(i);\n      assertEquals(new BytesRef(\"value\"), term);\n    }\n    \n    reader.close();\n    dir.close();\n  }\n","realPath":"lucene/core/src/test/org/apache/lucene/index/TestBinaryDocValuesUpdates.java","repoName":"lucene","snippetEndLine":0,"snippetStartLine":0,"startLine":493,"status":"M"},{"authorDate":"2014-08-10 02:54:35","commitOrder":6,"curCode":"  public void testUpdateSameDocMultipleTimes() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(new MockAnalyzer(random()));\n    IndexWriter writer = new IndexWriter(dir, conf);\n    \n    Document doc = new Document();\n    doc.add(new StringField(\"key\", \"doc\", Store.NO));\n    doc.add(new BinaryDocValuesField(\"bdv\", toBytes(5L)));\n    writer.addDocument(doc); \r\n    writer.commit();\n    writer.addDocument(doc); \r\n    \n    writer.updateBinaryDocValue(new Term(\"key\", \"doc\"), \"bdv\", toBytes(17L)); \r\n    writer.updateBinaryDocValue(new Term(\"key\", \"doc\"), \"bdv\", toBytes(3L)); \r\n    writer.close();\n    \n    final DirectoryReader reader = DirectoryReader.open(dir);\n    final AtomicReader r = SlowCompositeReaderWrapper.wrap(reader);\n    BinaryDocValues bdv = r.getBinaryDocValues(\"bdv\");\n    for (int i = 0; i < r.maxDoc(); i++) {\n      assertEquals(3, getValue(bdv, i));\n    }\n    reader.close();\n    dir.close();\n  }\n","date":"2014-08-10 02:54:35","endLine":554,"groupId":"11038","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"testUpdateSameDocMultipleTimes","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-lucene-10-0.7/blobInfo/CC_OUT/blobs/e2/4eb44edc08b01b522387b7a99fe22e5d64bda1.src","preCode":"  public void testUpdateSameDocMultipleTimes() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(new MockAnalyzer(random()));\n    IndexWriter writer = new IndexWriter(dir, conf);\n    \n    Document doc = new Document();\n    doc.add(new StringField(\"key\", \"doc\", Store.NO));\n    doc.add(new BinaryDocValuesField(\"bdv\", toBytes(5L)));\n    writer.addDocument(doc); \r\n    writer.commit();\n    writer.addDocument(doc); \r\n    \n    writer.updateBinaryDocValue(new Term(\"key\", \"doc\"), \"bdv\", toBytes(17L)); \r\n    writer.updateBinaryDocValue(new Term(\"key\", \"doc\"), \"bdv\", toBytes(3L)); \r\n    writer.shutdown();\n    \n    final DirectoryReader reader = DirectoryReader.open(dir);\n    final AtomicReader r = SlowCompositeReaderWrapper.wrap(reader);\n    BinaryDocValues bdv = r.getBinaryDocValues(\"bdv\");\n    for (int i = 0; i < r.maxDoc(); i++) {\n      assertEquals(3, getValue(bdv, i));\n    }\n    reader.close();\n    dir.close();\n  }\n","realPath":"lucene/core/src/test/org/apache/lucene/index/TestBinaryDocValuesUpdates.java","repoName":"lucene","snippetEndLine":0,"snippetStartLine":0,"startLine":530,"status":"M"}],"commitId":"872bd9145cd9504fc16b318f7ea0a666d9429103","commitMessage":"@@@LUCENE-5871: Remove Version from IndexWriterConfig\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1617004 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2014-08-10 02:54:35","modifiedFileCount":"450","status":"M","submitter":"Ryan Ernst"},{"authorTime":"2014-08-10 02:54:35","codes":[{"authorDate":"2014-08-14 23:30:44","commitOrder":7,"curCode":"  public void testDifferentDVFormatPerField() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(new MockAnalyzer(random()));\n    conf.setCodec(new Lucene410Codec() {\n      @Override\n      public DocValuesFormat getDocValuesFormatForField(String field) {\n        return new Lucene410DocValuesFormat();\n      }\n    });\n    IndexWriter writer = new IndexWriter(dir, conf);\n    \n    Document doc = new Document();\n    doc.add(new StringField(\"key\", \"doc\", Store.NO));\n    doc.add(new BinaryDocValuesField(\"bdv\", toBytes(5L)));\n    doc.add(new SortedDocValuesField(\"sorted\", new BytesRef(\"value\")));\n    writer.addDocument(doc); \r\n    writer.commit();\n    writer.addDocument(doc); \r\n    \n    writer.updateBinaryDocValue(new Term(\"key\", \"doc\"), \"bdv\", toBytes(17L));\n    writer.close();\n    \n    final DirectoryReader reader = DirectoryReader.open(dir);\n    \n    AtomicReader r = SlowCompositeReaderWrapper.wrap(reader);\n    BinaryDocValues bdv = r.getBinaryDocValues(\"bdv\");\n    SortedDocValues sdv = r.getSortedDocValues(\"sorted\");\n    for (int i = 0; i < r.maxDoc(); i++) {\n      assertEquals(17, getValue(bdv, i));\n      BytesRef term = sdv.get(i);\n      assertEquals(new BytesRef(\"value\"), term);\n    }\n    \n    reader.close();\n    dir.close();\n  }\n","date":"2014-08-14 23:30:44","endLine":528,"groupId":"52349","id":13,"instanceNumber":1,"isCurCommit":0,"methodName":"testDifferentDVFormatPerField","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-lucene-10-0.7/blobInfo/CC_OUT/blobs/ac/4ed292741dea9b1f2d30d82b8c9a79a479563d.src","preCode":"  public void testDifferentDVFormatPerField() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(new MockAnalyzer(random()));\n    conf.setCodec(new Lucene49Codec() {\n      @Override\n      public DocValuesFormat getDocValuesFormatForField(String field) {\n        return new Lucene49DocValuesFormat();\n      }\n    });\n    IndexWriter writer = new IndexWriter(dir, conf);\n    \n    Document doc = new Document();\n    doc.add(new StringField(\"key\", \"doc\", Store.NO));\n    doc.add(new BinaryDocValuesField(\"bdv\", toBytes(5L)));\n    doc.add(new SortedDocValuesField(\"sorted\", new BytesRef(\"value\")));\n    writer.addDocument(doc); \r\n    writer.commit();\n    writer.addDocument(doc); \r\n    \n    writer.updateBinaryDocValue(new Term(\"key\", \"doc\"), \"bdv\", toBytes(17L));\n    writer.close();\n    \n    final DirectoryReader reader = DirectoryReader.open(dir);\n    \n    AtomicReader r = SlowCompositeReaderWrapper.wrap(reader);\n    BinaryDocValues bdv = r.getBinaryDocValues(\"bdv\");\n    SortedDocValues sdv = r.getSortedDocValues(\"sorted\");\n    for (int i = 0; i < r.maxDoc(); i++) {\n      assertEquals(17, getValue(bdv, i));\n      BytesRef term = sdv.get(i);\n      assertEquals(new BytesRef(\"value\"), term);\n    }\n    \n    reader.close();\n    dir.close();\n  }\n","realPath":"lucene/core/src/test/org/apache/lucene/index/TestBinaryDocValuesUpdates.java","repoName":"lucene","snippetEndLine":0,"snippetStartLine":0,"startLine":493,"status":"M"},{"authorDate":"2014-08-10 02:54:35","commitOrder":7,"curCode":"  public void testUpdateSameDocMultipleTimes() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(new MockAnalyzer(random()));\n    IndexWriter writer = new IndexWriter(dir, conf);\n    \n    Document doc = new Document();\n    doc.add(new StringField(\"key\", \"doc\", Store.NO));\n    doc.add(new BinaryDocValuesField(\"bdv\", toBytes(5L)));\n    writer.addDocument(doc); \r\n    writer.commit();\n    writer.addDocument(doc); \r\n    \n    writer.updateBinaryDocValue(new Term(\"key\", \"doc\"), \"bdv\", toBytes(17L)); \r\n    writer.updateBinaryDocValue(new Term(\"key\", \"doc\"), \"bdv\", toBytes(3L)); \r\n    writer.close();\n    \n    final DirectoryReader reader = DirectoryReader.open(dir);\n    final AtomicReader r = SlowCompositeReaderWrapper.wrap(reader);\n    BinaryDocValues bdv = r.getBinaryDocValues(\"bdv\");\n    for (int i = 0; i < r.maxDoc(); i++) {\n      assertEquals(3, getValue(bdv, i));\n    }\n    reader.close();\n    dir.close();\n  }\n","date":"2014-08-10 02:54:35","endLine":554,"groupId":"11038","id":14,"instanceNumber":2,"isCurCommit":0,"methodName":"testUpdateSameDocMultipleTimes","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-lucene-10-0.7/blobInfo/CC_OUT/blobs/e2/4eb44edc08b01b522387b7a99fe22e5d64bda1.src","preCode":"  public void testUpdateSameDocMultipleTimes() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(new MockAnalyzer(random()));\n    IndexWriter writer = new IndexWriter(dir, conf);\n    \n    Document doc = new Document();\n    doc.add(new StringField(\"key\", \"doc\", Store.NO));\n    doc.add(new BinaryDocValuesField(\"bdv\", toBytes(5L)));\n    writer.addDocument(doc); \r\n    writer.commit();\n    writer.addDocument(doc); \r\n    \n    writer.updateBinaryDocValue(new Term(\"key\", \"doc\"), \"bdv\", toBytes(17L)); \r\n    writer.updateBinaryDocValue(new Term(\"key\", \"doc\"), \"bdv\", toBytes(3L)); \r\n    writer.close();\n    \n    final DirectoryReader reader = DirectoryReader.open(dir);\n    final AtomicReader r = SlowCompositeReaderWrapper.wrap(reader);\n    BinaryDocValues bdv = r.getBinaryDocValues(\"bdv\");\n    for (int i = 0; i < r.maxDoc(); i++) {\n      assertEquals(3, getValue(bdv, i));\n    }\n    reader.close();\n    dir.close();\n  }\n","realPath":"lucene/core/src/test/org/apache/lucene/index/TestBinaryDocValuesUpdates.java","repoName":"lucene","snippetEndLine":0,"snippetStartLine":0,"startLine":530,"status":"N"}],"commitId":"99c23632fad45cd6053eeb2b4771a3edf90bae72","commitMessage":"@@@LUCENE-5882: Add 4.10 docvaluesformat\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1617975 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2014-08-14 23:30:44","modifiedFileCount":"43","status":"M","submitter":"Robert Muir"},{"authorTime":"2014-08-10 02:54:35","codes":[{"authorDate":"2014-09-23 08:52:39","commitOrder":8,"curCode":"  public void testDifferentDVFormatPerField() throws Exception {\n    \r\n    assert TestUtil.getDefaultDocValuesFormat() != TestUtil.getDefaultDocValuesFormat();\n    Directory dir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(new MockAnalyzer(random()));\n    conf.setCodec(new AssertingCodec() {\n      @Override\n      public DocValuesFormat getDocValuesFormatForField(String field) {\n        return TestUtil.getDefaultDocValuesFormat();\n      }\n    });\n    IndexWriter writer = new IndexWriter(dir, conf);\n    \n    Document doc = new Document();\n    doc.add(new StringField(\"key\", \"doc\", Store.NO));\n    doc.add(new BinaryDocValuesField(\"bdv\", toBytes(5L)));\n    doc.add(new SortedDocValuesField(\"sorted\", new BytesRef(\"value\")));\n    writer.addDocument(doc); \r\n    writer.commit();\n    writer.addDocument(doc); \r\n    \n    writer.updateBinaryDocValue(new Term(\"key\", \"doc\"), \"bdv\", toBytes(17L));\n    writer.close();\n    \n    final DirectoryReader reader = DirectoryReader.open(dir);\n    \n    AtomicReader r = SlowCompositeReaderWrapper.wrap(reader);\n    BinaryDocValues bdv = r.getBinaryDocValues(\"bdv\");\n    SortedDocValues sdv = r.getSortedDocValues(\"sorted\");\n    for (int i = 0; i < r.maxDoc(); i++) {\n      assertEquals(17, getValue(bdv, i));\n      BytesRef term = sdv.get(i);\n      assertEquals(new BytesRef(\"value\"), term);\n    }\n    \n    reader.close();\n    dir.close();\n  }\n","date":"2014-09-23 08:52:39","endLine":522,"groupId":"52349","id":15,"instanceNumber":1,"isCurCommit":0,"methodName":"testDifferentDVFormatPerField","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-lucene-10-0.7/blobInfo/CC_OUT/blobs/3f/71b7c6ae964ab61ada7402d5371f24f8864f3f.src","preCode":"  public void testDifferentDVFormatPerField() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(new MockAnalyzer(random()));\n    conf.setCodec(new Lucene410Codec() {\n      @Override\n      public DocValuesFormat getDocValuesFormatForField(String field) {\n        return new Lucene410DocValuesFormat();\n      }\n    });\n    IndexWriter writer = new IndexWriter(dir, conf);\n    \n    Document doc = new Document();\n    doc.add(new StringField(\"key\", \"doc\", Store.NO));\n    doc.add(new BinaryDocValuesField(\"bdv\", toBytes(5L)));\n    doc.add(new SortedDocValuesField(\"sorted\", new BytesRef(\"value\")));\n    writer.addDocument(doc); \r\n    writer.commit();\n    writer.addDocument(doc); \r\n    \n    writer.updateBinaryDocValue(new Term(\"key\", \"doc\"), \"bdv\", toBytes(17L));\n    writer.close();\n    \n    final DirectoryReader reader = DirectoryReader.open(dir);\n    \n    AtomicReader r = SlowCompositeReaderWrapper.wrap(reader);\n    BinaryDocValues bdv = r.getBinaryDocValues(\"bdv\");\n    SortedDocValues sdv = r.getSortedDocValues(\"sorted\");\n    for (int i = 0; i < r.maxDoc(); i++) {\n      assertEquals(17, getValue(bdv, i));\n      BytesRef term = sdv.get(i);\n      assertEquals(new BytesRef(\"value\"), term);\n    }\n    \n    reader.close();\n    dir.close();\n  }\n","realPath":"lucene/core/src/test/org/apache/lucene/index/TestBinaryDocValuesUpdates.java","repoName":"lucene","snippetEndLine":0,"snippetStartLine":0,"startLine":485,"status":"M"},{"authorDate":"2014-08-10 02:54:35","commitOrder":8,"curCode":"  public void testUpdateSameDocMultipleTimes() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(new MockAnalyzer(random()));\n    IndexWriter writer = new IndexWriter(dir, conf);\n    \n    Document doc = new Document();\n    doc.add(new StringField(\"key\", \"doc\", Store.NO));\n    doc.add(new BinaryDocValuesField(\"bdv\", toBytes(5L)));\n    writer.addDocument(doc); \r\n    writer.commit();\n    writer.addDocument(doc); \r\n    \n    writer.updateBinaryDocValue(new Term(\"key\", \"doc\"), \"bdv\", toBytes(17L)); \r\n    writer.updateBinaryDocValue(new Term(\"key\", \"doc\"), \"bdv\", toBytes(3L)); \r\n    writer.close();\n    \n    final DirectoryReader reader = DirectoryReader.open(dir);\n    final AtomicReader r = SlowCompositeReaderWrapper.wrap(reader);\n    BinaryDocValues bdv = r.getBinaryDocValues(\"bdv\");\n    for (int i = 0; i < r.maxDoc(); i++) {\n      assertEquals(3, getValue(bdv, i));\n    }\n    reader.close();\n    dir.close();\n  }\n","date":"2014-08-10 02:54:35","endLine":554,"groupId":"11038","id":16,"instanceNumber":2,"isCurCommit":0,"methodName":"testUpdateSameDocMultipleTimes","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-lucene-10-0.7/blobInfo/CC_OUT/blobs/e2/4eb44edc08b01b522387b7a99fe22e5d64bda1.src","preCode":"  public void testUpdateSameDocMultipleTimes() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(new MockAnalyzer(random()));\n    IndexWriter writer = new IndexWriter(dir, conf);\n    \n    Document doc = new Document();\n    doc.add(new StringField(\"key\", \"doc\", Store.NO));\n    doc.add(new BinaryDocValuesField(\"bdv\", toBytes(5L)));\n    writer.addDocument(doc); \r\n    writer.commit();\n    writer.addDocument(doc); \r\n    \n    writer.updateBinaryDocValue(new Term(\"key\", \"doc\"), \"bdv\", toBytes(17L)); \r\n    writer.updateBinaryDocValue(new Term(\"key\", \"doc\"), \"bdv\", toBytes(3L)); \r\n    writer.close();\n    \n    final DirectoryReader reader = DirectoryReader.open(dir);\n    final AtomicReader r = SlowCompositeReaderWrapper.wrap(reader);\n    BinaryDocValues bdv = r.getBinaryDocValues(\"bdv\");\n    for (int i = 0; i < r.maxDoc(); i++) {\n      assertEquals(3, getValue(bdv, i));\n    }\n    reader.close();\n    dir.close();\n  }\n","realPath":"lucene/core/src/test/org/apache/lucene/index/TestBinaryDocValuesUpdates.java","repoName":"lucene","snippetEndLine":0,"snippetStartLine":0,"startLine":530,"status":"N"}],"commitId":"1dd2ecb2821624e43f37af8e90b6e8ac53f0acab","commitMessage":"@@@LUCENE-5969: move bumping default codec/dv/pf in tests to TestUtil methods.  put blocktreeords in rotation\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1626921 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2014-09-23 08:52:39","modifiedFileCount":"29","status":"M","submitter":"Robert Muir"},{"authorTime":"2014-09-24 07:51:55","codes":[{"authorDate":"2014-09-24 07:51:55","commitOrder":9,"curCode":"  public void testDifferentDVFormatPerField() throws Exception {\n    \r\n    assert TestUtil.getDefaultDocValuesFormat() != TestUtil.getDefaultDocValuesFormat();\n    Directory dir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(new MockAnalyzer(random()));\n    conf.setCodec(new AssertingCodec() {\n      @Override\n      public DocValuesFormat getDocValuesFormatForField(String field) {\n        return TestUtil.getDefaultDocValuesFormat();\n      }\n    });\n    IndexWriter writer = new IndexWriter(dir, conf);\n    \n    Document doc = new Document();\n    doc.add(new StringField(\"key\", \"doc\", Store.NO));\n    doc.add(new BinaryDocValuesField(\"bdv\", toBytes(5L)));\n    doc.add(new SortedDocValuesField(\"sorted\", new BytesRef(\"value\")));\n    writer.addDocument(doc); \r\n    writer.commit();\n    writer.addDocument(doc); \r\n    \n    writer.updateBinaryDocValue(new Term(\"key\", \"doc\"), \"bdv\", toBytes(17L));\n    writer.close();\n    \n    final DirectoryReader reader = DirectoryReader.open(dir);\n    \n    LeafReader r = SlowCompositeReaderWrapper.wrap(reader);\n    BinaryDocValues bdv = r.getBinaryDocValues(\"bdv\");\n    SortedDocValues sdv = r.getSortedDocValues(\"sorted\");\n    for (int i = 0; i < r.maxDoc(); i++) {\n      assertEquals(17, getValue(bdv, i));\n      BytesRef term = sdv.get(i);\n      assertEquals(new BytesRef(\"value\"), term);\n    }\n    \n    reader.close();\n    dir.close();\n  }\n","date":"2014-09-24 07:51:55","endLine":522,"groupId":"52349","id":17,"instanceNumber":1,"isCurCommit":0,"methodName":"testDifferentDVFormatPerField","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-lucene-10-0.7/blobInfo/CC_OUT/blobs/f7/afeb970df1488f6233a781f6eef711e85e4122.src","preCode":"  public void testDifferentDVFormatPerField() throws Exception {\n    \r\n    assert TestUtil.getDefaultDocValuesFormat() != TestUtil.getDefaultDocValuesFormat();\n    Directory dir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(new MockAnalyzer(random()));\n    conf.setCodec(new AssertingCodec() {\n      @Override\n      public DocValuesFormat getDocValuesFormatForField(String field) {\n        return TestUtil.getDefaultDocValuesFormat();\n      }\n    });\n    IndexWriter writer = new IndexWriter(dir, conf);\n    \n    Document doc = new Document();\n    doc.add(new StringField(\"key\", \"doc\", Store.NO));\n    doc.add(new BinaryDocValuesField(\"bdv\", toBytes(5L)));\n    doc.add(new SortedDocValuesField(\"sorted\", new BytesRef(\"value\")));\n    writer.addDocument(doc); \r\n    writer.commit();\n    writer.addDocument(doc); \r\n    \n    writer.updateBinaryDocValue(new Term(\"key\", \"doc\"), \"bdv\", toBytes(17L));\n    writer.close();\n    \n    final DirectoryReader reader = DirectoryReader.open(dir);\n    \n    AtomicReader r = SlowCompositeReaderWrapper.wrap(reader);\n    BinaryDocValues bdv = r.getBinaryDocValues(\"bdv\");\n    SortedDocValues sdv = r.getSortedDocValues(\"sorted\");\n    for (int i = 0; i < r.maxDoc(); i++) {\n      assertEquals(17, getValue(bdv, i));\n      BytesRef term = sdv.get(i);\n      assertEquals(new BytesRef(\"value\"), term);\n    }\n    \n    reader.close();\n    dir.close();\n  }\n","realPath":"lucene/core/src/test/org/apache/lucene/index/TestBinaryDocValuesUpdates.java","repoName":"lucene","snippetEndLine":0,"snippetStartLine":0,"startLine":485,"status":"M"},{"authorDate":"2014-09-24 07:51:55","commitOrder":9,"curCode":"  public void testUpdateSameDocMultipleTimes() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(new MockAnalyzer(random()));\n    IndexWriter writer = new IndexWriter(dir, conf);\n    \n    Document doc = new Document();\n    doc.add(new StringField(\"key\", \"doc\", Store.NO));\n    doc.add(new BinaryDocValuesField(\"bdv\", toBytes(5L)));\n    writer.addDocument(doc); \r\n    writer.commit();\n    writer.addDocument(doc); \r\n    \n    writer.updateBinaryDocValue(new Term(\"key\", \"doc\"), \"bdv\", toBytes(17L)); \r\n    writer.updateBinaryDocValue(new Term(\"key\", \"doc\"), \"bdv\", toBytes(3L)); \r\n    writer.close();\n    \n    final DirectoryReader reader = DirectoryReader.open(dir);\n    final LeafReader r = SlowCompositeReaderWrapper.wrap(reader);\n    BinaryDocValues bdv = r.getBinaryDocValues(\"bdv\");\n    for (int i = 0; i < r.maxDoc(); i++) {\n      assertEquals(3, getValue(bdv, i));\n    }\n    reader.close();\n    dir.close();\n  }\n","date":"2014-09-24 07:51:55","endLine":548,"groupId":"11038","id":18,"instanceNumber":2,"isCurCommit":0,"methodName":"testUpdateSameDocMultipleTimes","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-lucene-10-0.7/blobInfo/CC_OUT/blobs/f7/afeb970df1488f6233a781f6eef711e85e4122.src","preCode":"  public void testUpdateSameDocMultipleTimes() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(new MockAnalyzer(random()));\n    IndexWriter writer = new IndexWriter(dir, conf);\n    \n    Document doc = new Document();\n    doc.add(new StringField(\"key\", \"doc\", Store.NO));\n    doc.add(new BinaryDocValuesField(\"bdv\", toBytes(5L)));\n    writer.addDocument(doc); \r\n    writer.commit();\n    writer.addDocument(doc); \r\n    \n    writer.updateBinaryDocValue(new Term(\"key\", \"doc\"), \"bdv\", toBytes(17L)); \r\n    writer.updateBinaryDocValue(new Term(\"key\", \"doc\"), \"bdv\", toBytes(3L)); \r\n    writer.close();\n    \n    final DirectoryReader reader = DirectoryReader.open(dir);\n    final AtomicReader r = SlowCompositeReaderWrapper.wrap(reader);\n    BinaryDocValues bdv = r.getBinaryDocValues(\"bdv\");\n    for (int i = 0; i < r.maxDoc(); i++) {\n      assertEquals(3, getValue(bdv, i));\n    }\n    reader.close();\n    dir.close();\n  }\n","realPath":"lucene/core/src/test/org/apache/lucene/index/TestBinaryDocValuesUpdates.java","repoName":"lucene","snippetEndLine":0,"snippetStartLine":0,"startLine":524,"status":"M"}],"commitId":"85bf3181737a34e2d357f0c926d7ae8d07b9ae39","commitMessage":"@@@LUCENE-5569: *AtomicReader/AtomicReaderContext have been renamed to *LeafReader/LeafReaderContext\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1627178 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2014-09-24 07:51:55","modifiedFileCount":"459","status":"M","submitter":"Ryan Ernst"},{"authorTime":"2016-03-11 05:08:59","codes":[{"authorDate":"2016-03-11 05:08:59","commitOrder":10,"curCode":"  public void testDifferentDVFormatPerField() throws Exception {\n    \r\n    assert TestUtil.getDefaultDocValuesFormat() != TestUtil.getDefaultDocValuesFormat();\n    Directory dir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(new MockAnalyzer(random()));\n    conf.setCodec(new AssertingCodec() {\n      @Override\n      public DocValuesFormat getDocValuesFormatForField(String field) {\n        return TestUtil.getDefaultDocValuesFormat();\n      }\n    });\n    IndexWriter writer = new IndexWriter(dir, conf);\n    \n    Document doc = new Document();\n    doc.add(new StringField(\"key\", \"doc\", Store.NO));\n    doc.add(new BinaryDocValuesField(\"bdv\", toBytes(5L)));\n    doc.add(new SortedDocValuesField(\"sorted\", new BytesRef(\"value\")));\n    writer.addDocument(doc); \r\n    writer.commit();\n    writer.addDocument(doc); \r\n    \n    writer.updateBinaryDocValue(new Term(\"key\", \"doc\"), \"bdv\", toBytes(17L));\n    writer.close();\n    \n    final DirectoryReader reader = DirectoryReader.open(dir);\n    \n    BinaryDocValues bdv = MultiDocValues.getBinaryValues(reader, \"bdv\");\n    SortedDocValues sdv = MultiDocValues.getSortedValues(reader, \"sorted\");\n    for (int i = 0; i < reader.maxDoc(); i++) {\n      assertEquals(17, getValue(bdv, i));\n      BytesRef term = sdv.get(i);\n      assertEquals(new BytesRef(\"value\"), term);\n    }\n    \n    reader.close();\n    dir.close();\n  }\n","date":"2016-03-11 05:08:59","endLine":480,"groupId":"52349","id":19,"instanceNumber":1,"isCurCommit":0,"methodName":"testDifferentDVFormatPerField","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-lucene-10-0.7/blobInfo/CC_OUT/blobs/8d/c8a3c8a031b61bdabd4ac486a1091c0a9e1ba7.src","preCode":"  public void testDifferentDVFormatPerField() throws Exception {\n    \r\n    assert TestUtil.getDefaultDocValuesFormat() != TestUtil.getDefaultDocValuesFormat();\n    Directory dir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(new MockAnalyzer(random()));\n    conf.setCodec(new AssertingCodec() {\n      @Override\n      public DocValuesFormat getDocValuesFormatForField(String field) {\n        return TestUtil.getDefaultDocValuesFormat();\n      }\n    });\n    IndexWriter writer = new IndexWriter(dir, conf);\n    \n    Document doc = new Document();\n    doc.add(new StringField(\"key\", \"doc\", Store.NO));\n    doc.add(new BinaryDocValuesField(\"bdv\", toBytes(5L)));\n    doc.add(new SortedDocValuesField(\"sorted\", new BytesRef(\"value\")));\n    writer.addDocument(doc); \r\n    writer.commit();\n    writer.addDocument(doc); \r\n    \n    writer.updateBinaryDocValue(new Term(\"key\", \"doc\"), \"bdv\", toBytes(17L));\n    writer.close();\n    \n    final DirectoryReader reader = DirectoryReader.open(dir);\n    \n    LeafReader r = SlowCompositeReaderWrapper.wrap(reader);\n    BinaryDocValues bdv = r.getBinaryDocValues(\"bdv\");\n    SortedDocValues sdv = r.getSortedDocValues(\"sorted\");\n    for (int i = 0; i < r.maxDoc(); i++) {\n      assertEquals(17, getValue(bdv, i));\n      BytesRef term = sdv.get(i);\n      assertEquals(new BytesRef(\"value\"), term);\n    }\n    \n    reader.close();\n    dir.close();\n  }\n","realPath":"lucene/core/src/test/org/apache/lucene/index/TestBinaryDocValuesUpdates.java","repoName":"lucene","snippetEndLine":0,"snippetStartLine":0,"startLine":444,"status":"M"},{"authorDate":"2016-03-11 05:08:59","commitOrder":10,"curCode":"  public void testUpdateSameDocMultipleTimes() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(new MockAnalyzer(random()));\n    IndexWriter writer = new IndexWriter(dir, conf);\n    \n    Document doc = new Document();\n    doc.add(new StringField(\"key\", \"doc\", Store.NO));\n    doc.add(new BinaryDocValuesField(\"bdv\", toBytes(5L)));\n    writer.addDocument(doc); \r\n    writer.commit();\n    writer.addDocument(doc); \r\n    \n    writer.updateBinaryDocValue(new Term(\"key\", \"doc\"), \"bdv\", toBytes(17L)); \r\n    writer.updateBinaryDocValue(new Term(\"key\", \"doc\"), \"bdv\", toBytes(3L)); \r\n    writer.close();\n    \n    final DirectoryReader reader = DirectoryReader.open(dir);\n    BinaryDocValues bdv = MultiDocValues.getBinaryValues(reader, \"bdv\");\n    for (int i = 0; i < reader.maxDoc(); i++) {\n      assertEquals(3, getValue(bdv, i));\n    }\n    reader.close();\n    dir.close();\n  }\n","date":"2016-03-11 05:08:59","endLine":505,"groupId":"11038","id":20,"instanceNumber":2,"isCurCommit":0,"methodName":"testUpdateSameDocMultipleTimes","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-lucene-10-0.7/blobInfo/CC_OUT/blobs/8d/c8a3c8a031b61bdabd4ac486a1091c0a9e1ba7.src","preCode":"  public void testUpdateSameDocMultipleTimes() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(new MockAnalyzer(random()));\n    IndexWriter writer = new IndexWriter(dir, conf);\n    \n    Document doc = new Document();\n    doc.add(new StringField(\"key\", \"doc\", Store.NO));\n    doc.add(new BinaryDocValuesField(\"bdv\", toBytes(5L)));\n    writer.addDocument(doc); \r\n    writer.commit();\n    writer.addDocument(doc); \r\n    \n    writer.updateBinaryDocValue(new Term(\"key\", \"doc\"), \"bdv\", toBytes(17L)); \r\n    writer.updateBinaryDocValue(new Term(\"key\", \"doc\"), \"bdv\", toBytes(3L)); \r\n    writer.close();\n    \n    final DirectoryReader reader = DirectoryReader.open(dir);\n    final LeafReader r = SlowCompositeReaderWrapper.wrap(reader);\n    BinaryDocValues bdv = r.getBinaryDocValues(\"bdv\");\n    for (int i = 0; i < r.maxDoc(); i++) {\n      assertEquals(3, getValue(bdv, i));\n    }\n    reader.close();\n    dir.close();\n  }\n","realPath":"lucene/core/src/test/org/apache/lucene/index/TestBinaryDocValuesUpdates.java","repoName":"lucene","snippetEndLine":0,"snippetStartLine":0,"startLine":482,"status":"M"}],"commitId":"7523ca116276fbcf03bfa630c859c4a58f77add4","commitMessage":"@@@LUCENE-7086: move SlowCompositeReaderWrapper to misc module.  and throw clear exc if you try to use in with points\n\nSquashed commits:\n\ncommit e26b065c71388407bc6725256ca43d7bb30dee29\nAuthor: Mike McCandless <mikemccand@apache.org>\nDate:   Thu Mar 10 14:16:45 2016 -0500\n\n    simplify the checking for incoming points\n\ncommit b7254376dcb398c7739aab4544118bb4526961d5\nMerge: 8ec82a0 d35d569\nAuthor: Mike McCandless <mikemccand@apache.org>\nDate:   Thu Mar 10 14:05:24 2016 -0500\n\n    Merge branch 'master' into slow_wrapper\n\n    Conflicts:\n    \tlucene/misc/src/test/org/apache/lucene/uninverting/TestFieldCache.java\n    \tlucene/misc/src/test/org/apache/lucene/uninverting/TestFieldCacheReopen.java\n\ncommit 8ec82a0d9a0dd946d96da20962bb2ea95758edbe\nAuthor: Mike McCandless <mikemccand@apache.org>\nDate:   Thu Mar 10 13:56:25 2016 -0500\n\n    LUCENE-7086: move SlowCompositeReaderWrapper to misc module\n","date":"2016-03-11 05:08:59","modifiedFileCount":"85","status":"M","submitter":"Mike McCandless"},{"authorTime":"2016-10-03 03:18:22","codes":[{"authorDate":"2016-10-03 03:18:22","commitOrder":11,"curCode":"  public void testDifferentDVFormatPerField() throws Exception {\n    \r\n    assert TestUtil.getDefaultDocValuesFormat() != TestUtil.getDefaultDocValuesFormat();\n    Directory dir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(new MockAnalyzer(random()));\n    conf.setCodec(new AssertingCodec() {\n      @Override\n      public DocValuesFormat getDocValuesFormatForField(String field) {\n        return TestUtil.getDefaultDocValuesFormat();\n      }\n    });\n    IndexWriter writer = new IndexWriter(dir, conf);\n    \n    Document doc = new Document();\n    doc.add(new StringField(\"key\", \"doc\", Store.NO));\n    doc.add(new BinaryDocValuesField(\"bdv\", toBytes(5L)));\n    doc.add(new SortedDocValuesField(\"sorted\", new BytesRef(\"value\")));\n    writer.addDocument(doc); \r\n    writer.commit();\n    writer.addDocument(doc); \r\n    \n    writer.updateBinaryDocValue(new Term(\"key\", \"doc\"), \"bdv\", toBytes(17L));\n    writer.close();\n    \n    final DirectoryReader reader = DirectoryReader.open(dir);\n    \n    BinaryDocValues bdv = MultiDocValues.getBinaryValues(reader, \"bdv\");\n    SortedDocValues sdv = MultiDocValues.getSortedValues(reader, \"sorted\");\n    for (int i = 0; i < reader.maxDoc(); i++) {\n      assertEquals(i, bdv.nextDoc());\n      assertEquals(17, getValue(bdv));\n      assertEquals(i, sdv.nextDoc());\n      BytesRef term = sdv.binaryValue();\n      assertEquals(new BytesRef(\"value\"), term);\n    }\n    \n    reader.close();\n    dir.close();\n  }\n","date":"2016-10-03 03:18:22","endLine":498,"groupId":"52349","id":21,"instanceNumber":1,"isCurCommit":0,"methodName":"testDifferentDVFormatPerField","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-lucene-10-0.7/blobInfo/CC_OUT/blobs/f5/52ae9d6bed4856270b2a94ef0a5358cd201759.src","preCode":"  public void testDifferentDVFormatPerField() throws Exception {\n    \r\n    assert TestUtil.getDefaultDocValuesFormat() != TestUtil.getDefaultDocValuesFormat();\n    Directory dir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(new MockAnalyzer(random()));\n    conf.setCodec(new AssertingCodec() {\n      @Override\n      public DocValuesFormat getDocValuesFormatForField(String field) {\n        return TestUtil.getDefaultDocValuesFormat();\n      }\n    });\n    IndexWriter writer = new IndexWriter(dir, conf);\n    \n    Document doc = new Document();\n    doc.add(new StringField(\"key\", \"doc\", Store.NO));\n    doc.add(new BinaryDocValuesField(\"bdv\", toBytes(5L)));\n    doc.add(new SortedDocValuesField(\"sorted\", new BytesRef(\"value\")));\n    writer.addDocument(doc); \r\n    writer.commit();\n    writer.addDocument(doc); \r\n    \n    writer.updateBinaryDocValue(new Term(\"key\", \"doc\"), \"bdv\", toBytes(17L));\n    writer.close();\n    \n    final DirectoryReader reader = DirectoryReader.open(dir);\n    \n    BinaryDocValues bdv = MultiDocValues.getBinaryValues(reader, \"bdv\");\n    SortedDocValues sdv = MultiDocValues.getSortedValues(reader, \"sorted\");\n    for (int i = 0; i < reader.maxDoc(); i++) {\n      assertEquals(17, getValue(bdv, i));\n      BytesRef term = sdv.get(i);\n      assertEquals(new BytesRef(\"value\"), term);\n    }\n    \n    reader.close();\n    dir.close();\n  }\n","realPath":"lucene/core/src/test/org/apache/lucene/index/TestBinaryDocValuesUpdates.java","repoName":"lucene","snippetEndLine":0,"snippetStartLine":0,"startLine":460,"status":"M"},{"authorDate":"2016-10-03 03:18:22","commitOrder":11,"curCode":"  public void testUpdateSameDocMultipleTimes() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(new MockAnalyzer(random()));\n    IndexWriter writer = new IndexWriter(dir, conf);\n    \n    Document doc = new Document();\n    doc.add(new StringField(\"key\", \"doc\", Store.NO));\n    doc.add(new BinaryDocValuesField(\"bdv\", toBytes(5L)));\n    writer.addDocument(doc); \r\n    writer.commit();\n    writer.addDocument(doc); \r\n    \n    writer.updateBinaryDocValue(new Term(\"key\", \"doc\"), \"bdv\", toBytes(17L)); \r\n    writer.updateBinaryDocValue(new Term(\"key\", \"doc\"), \"bdv\", toBytes(3L)); \r\n    writer.close();\n    \n    final DirectoryReader reader = DirectoryReader.open(dir);\n    BinaryDocValues bdv = MultiDocValues.getBinaryValues(reader, \"bdv\");\n    for (int i = 0; i < reader.maxDoc(); i++) {\n      assertEquals(i, bdv.nextDoc());\n      assertEquals(3, getValue(bdv));\n    }\n    reader.close();\n    dir.close();\n  }\n","date":"2016-10-03 03:18:22","endLine":524,"groupId":"11038","id":22,"instanceNumber":2,"isCurCommit":0,"methodName":"testUpdateSameDocMultipleTimes","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-lucene-10-0.7/blobInfo/CC_OUT/blobs/f5/52ae9d6bed4856270b2a94ef0a5358cd201759.src","preCode":"  public void testUpdateSameDocMultipleTimes() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(new MockAnalyzer(random()));\n    IndexWriter writer = new IndexWriter(dir, conf);\n    \n    Document doc = new Document();\n    doc.add(new StringField(\"key\", \"doc\", Store.NO));\n    doc.add(new BinaryDocValuesField(\"bdv\", toBytes(5L)));\n    writer.addDocument(doc); \r\n    writer.commit();\n    writer.addDocument(doc); \r\n    \n    writer.updateBinaryDocValue(new Term(\"key\", \"doc\"), \"bdv\", toBytes(17L)); \r\n    writer.updateBinaryDocValue(new Term(\"key\", \"doc\"), \"bdv\", toBytes(3L)); \r\n    writer.close();\n    \n    final DirectoryReader reader = DirectoryReader.open(dir);\n    BinaryDocValues bdv = MultiDocValues.getBinaryValues(reader, \"bdv\");\n    for (int i = 0; i < reader.maxDoc(); i++) {\n      assertEquals(3, getValue(bdv, i));\n    }\n    reader.close();\n    dir.close();\n  }\n","realPath":"lucene/core/src/test/org/apache/lucene/index/TestBinaryDocValuesUpdates.java","repoName":"lucene","snippetEndLine":0,"snippetStartLine":0,"startLine":500,"status":"M"}],"commitId":"3182cd9872af3cb73a1f73e36de68b8d76646e59","commitMessage":"@@@Merge branch 'master' of https://git-wip-us.apache.org/repos/asf/lucene-solr\n","date":"2016-10-03 03:18:22","modifiedFileCount":"570","status":"M","submitter":"Karl Wright"},{"authorTime":"2016-10-03 03:18:22","codes":[{"authorDate":"2021-03-15 11:07:48","commitOrder":12,"curCode":"  public void testDifferentDVFormatPerField() throws Exception {\n    \r\n    assert TestUtil.getDefaultDocValuesFormat() != TestUtil.getDefaultDocValuesFormat();\n    Directory dir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(new MockAnalyzer(random()));\n    conf.setCodec(\n        new AssertingCodec() {\n          @Override\n          public DocValuesFormat getDocValuesFormatForField(String field) {\n            return TestUtil.getDefaultDocValuesFormat();\n          }\n        });\n    IndexWriter writer = new IndexWriter(dir, conf);\n\n    Document doc = new Document();\n    doc.add(new StringField(\"key\", \"doc\", Store.NO));\n    doc.add(new BinaryDocValuesField(\"bdv\", toBytes(5L)));\n    doc.add(new SortedDocValuesField(\"sorted\", new BytesRef(\"value\")));\n    writer.addDocument(doc); \r\n    writer.commit();\n    writer.addDocument(doc); \r\n\n    writer.updateBinaryDocValue(new Term(\"key\", \"doc\"), \"bdv\", toBytes(17L));\n    writer.close();\n\n    final DirectoryReader reader = DirectoryReader.open(dir);\n\n    BinaryDocValues bdv = MultiDocValues.getBinaryValues(reader, \"bdv\");\n    SortedDocValues sdv = MultiDocValues.getSortedValues(reader, \"sorted\");\n    for (int i = 0; i < reader.maxDoc(); i++) {\n      assertEquals(i, bdv.nextDoc());\n      assertEquals(17, getValue(bdv));\n      assertEquals(i, sdv.nextDoc());\n      BytesRef term = sdv.lookupOrd(sdv.ordValue());\n      assertEquals(new BytesRef(\"value\"), term);\n    }\n\n    reader.close();\n    dir.close();\n  }\n","date":"2021-03-15 11:07:48","endLine":516,"groupId":"105998","id":23,"instanceNumber":1,"isCurCommit":0,"methodName":"testDifferentDVFormatPerField","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-lucene-10-0.7/blobInfo/CC_OUT/blobs/74/658adf1e875e881aee2539c1d86b9208cff2ec.src","preCode":"  public void testDifferentDVFormatPerField() throws Exception {\n    \r\n    assert TestUtil.getDefaultDocValuesFormat() != TestUtil.getDefaultDocValuesFormat();\n    Directory dir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(new MockAnalyzer(random()));\n    conf.setCodec(\n        new AssertingCodec() {\n          @Override\n          public DocValuesFormat getDocValuesFormatForField(String field) {\n            return TestUtil.getDefaultDocValuesFormat();\n          }\n        });\n    IndexWriter writer = new IndexWriter(dir, conf);\n\n    Document doc = new Document();\n    doc.add(new StringField(\"key\", \"doc\", Store.NO));\n    doc.add(new BinaryDocValuesField(\"bdv\", toBytes(5L)));\n    doc.add(new SortedDocValuesField(\"sorted\", new BytesRef(\"value\")));\n    writer.addDocument(doc); \r\n    writer.commit();\n    writer.addDocument(doc); \r\n\n    writer.updateBinaryDocValue(new Term(\"key\", \"doc\"), \"bdv\", toBytes(17L));\n    writer.close();\n\n    final DirectoryReader reader = DirectoryReader.open(dir);\n\n    BinaryDocValues bdv = MultiDocValues.getBinaryValues(reader, \"bdv\");\n    SortedDocValues sdv = MultiDocValues.getSortedValues(reader, \"sorted\");\n    for (int i = 0; i < reader.maxDoc(); i++) {\n      assertEquals(i, bdv.nextDoc());\n      assertEquals(17, getValue(bdv));\n      assertEquals(i, sdv.nextDoc());\n      BytesRef term = sdv.binaryValue();\n      assertEquals(new BytesRef(\"value\"), term);\n    }\n\n    reader.close();\n    dir.close();\n  }\n","realPath":"lucene/core/src/test/org/apache/lucene/index/TestBinaryDocValuesUpdates.java","repoName":"lucene","snippetEndLine":0,"snippetStartLine":0,"startLine":477,"status":"M"},{"authorDate":"2016-10-03 03:18:22","commitOrder":12,"curCode":"  public void testUpdateSameDocMultipleTimes() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(new MockAnalyzer(random()));\n    IndexWriter writer = new IndexWriter(dir, conf);\n    \n    Document doc = new Document();\n    doc.add(new StringField(\"key\", \"doc\", Store.NO));\n    doc.add(new BinaryDocValuesField(\"bdv\", toBytes(5L)));\n    writer.addDocument(doc); \r\n    writer.commit();\n    writer.addDocument(doc); \r\n    \n    writer.updateBinaryDocValue(new Term(\"key\", \"doc\"), \"bdv\", toBytes(17L)); \r\n    writer.updateBinaryDocValue(new Term(\"key\", \"doc\"), \"bdv\", toBytes(3L)); \r\n    writer.close();\n    \n    final DirectoryReader reader = DirectoryReader.open(dir);\n    BinaryDocValues bdv = MultiDocValues.getBinaryValues(reader, \"bdv\");\n    for (int i = 0; i < reader.maxDoc(); i++) {\n      assertEquals(i, bdv.nextDoc());\n      assertEquals(3, getValue(bdv));\n    }\n    reader.close();\n    dir.close();\n  }\n","date":"2016-10-03 03:18:22","endLine":524,"groupId":"105998","id":24,"instanceNumber":2,"isCurCommit":0,"methodName":"testUpdateSameDocMultipleTimes","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-lucene-10-0.7/blobInfo/CC_OUT/blobs/f5/52ae9d6bed4856270b2a94ef0a5358cd201759.src","preCode":"  public void testUpdateSameDocMultipleTimes() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(new MockAnalyzer(random()));\n    IndexWriter writer = new IndexWriter(dir, conf);\n    \n    Document doc = new Document();\n    doc.add(new StringField(\"key\", \"doc\", Store.NO));\n    doc.add(new BinaryDocValuesField(\"bdv\", toBytes(5L)));\n    writer.addDocument(doc); \r\n    writer.commit();\n    writer.addDocument(doc); \r\n    \n    writer.updateBinaryDocValue(new Term(\"key\", \"doc\"), \"bdv\", toBytes(17L)); \r\n    writer.updateBinaryDocValue(new Term(\"key\", \"doc\"), \"bdv\", toBytes(3L)); \r\n    writer.close();\n    \n    final DirectoryReader reader = DirectoryReader.open(dir);\n    BinaryDocValues bdv = MultiDocValues.getBinaryValues(reader, \"bdv\");\n    for (int i = 0; i < reader.maxDoc(); i++) {\n      assertEquals(i, bdv.nextDoc());\n      assertEquals(3, getValue(bdv));\n    }\n    reader.close();\n    dir.close();\n  }\n","realPath":"lucene/core/src/test/org/apache/lucene/index/TestBinaryDocValuesUpdates.java","repoName":"lucene","snippetEndLine":0,"snippetStartLine":0,"startLine":500,"status":"N"}],"commitId":"f3a284ad830b9473467b5cb364408db5e4cc607f","commitMessage":"@@@LUCENE-9796: Fix SortedDocValues to no longer extend BinaryDocValues\n\nSortedDocValues do not have a per-document binary value.  they have a\nper-document numeric `ordValue()`. The ordinal can then be dereferenced\nto its binary form with `lookupOrd()`.  but it was a performance trap to\nimplement a `binaryValue()` on the SortedDocValues api that does this\nbehind-the-scenes on every document.\n\nYou can replace calls of `binaryValue()` with `lookupOrd(ordValue())`\nas a \"quick fix\".  but it is better to use the ordinal alone\n(integer-based datastructures) for per-document access.  and only call\nlookupOrd() a few times at the end (e.g. for the hits you want to display).\nOtherwise.  if you really don't want per-document ordinals.  but instead a\nper-document `byte[]`.  use a BinaryDocValues field.\n\nThis change only addresses the API (slow `binaryValue()` trap).  but\ndoesn't yet fix any slow algorithms that were discovered in the process. \nso it doesn't yield any performance improvements.\n","date":"2021-03-15 11:07:48","modifiedFileCount":"35","status":"M","submitter":"Robert Muir"}]
