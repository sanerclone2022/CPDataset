[{"authorTime":"2014-02-02 10:57:02","codes":[{"authorDate":"2015-02-19 23:27:29","commitOrder":2,"curCode":"  public void testBackwardPositions() throws Exception {\n    PhraseQuery query = new PhraseQuery();\n    query.add(new Term(\"field\", \"one\"), 1);\n    query.add(new Term(\"field\", \"two\"), 5);\n    try {\n      query.add(new Term(\"field\", \"three\"), 4);\n      fail(\"didn't get expected exception\");\n    } catch (IllegalArgumentException expected) {\n      \r\n    }\n  }\n","date":"2015-02-19 23:27:29","endLine":738,"groupId":"9300","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testBackwardPositions","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-lucene-10-0.7/blobInfo/CC_OUT/blobs/24/c08676eed4cae6a8eb057a431f004bec32fed9.src","preCode":"  public void testBackwardPositions() throws Exception {\n    PhraseQuery query = new PhraseQuery();\n    query.add(new Term(\"field\", \"one\"), 1);\n    query.add(new Term(\"field\", \"two\"), 5);\n    try {\n      query.add(new Term(\"field\", \"three\"), 4);\n      fail(\"didn't get expected exception\");\n    } catch (IllegalArgumentException expected) {\n      \r\n    }\n  }\n","realPath":"lucene/core/src/test/org/apache/lucene/search/TestPhraseQuery.java","repoName":"lucene","snippetEndLine":0,"snippetStartLine":0,"startLine":728,"status":"B"},{"authorDate":"2014-02-02 10:57:02","commitOrder":2,"curCode":"  public void testNegativeSlop() throws Exception {\n    MultiPhraseQuery query = new MultiPhraseQuery();\n    query.add(new Term(\"field\", \"two\"));\n    query.add(new Term(\"field\", \"one\"));\n    try {\n      query.setSlop(-2);\n      fail(\"didn't get expected exception\");\n    } catch (IllegalArgumentException expected) {\n      \r\n    }\n  }\n","date":"2014-02-02 10:57:02","endLine":581,"groupId":"14826","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testNegativeSlop","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-lucene-10-0.7/blobInfo/CC_OUT/blobs/39/2dc6b6c4e1cca050ca70a3654c68160cdbd935.src","preCode":"  public void testNegativeSlop() throws Exception {\n    MultiPhraseQuery query = new MultiPhraseQuery();\n    query.add(new Term(\"field\", \"two\"));\n    query.add(new Term(\"field\", \"one\"));\n    try {\n      query.setSlop(-2);\n      fail(\"didn't get expected exception\");\n    } catch (IllegalArgumentException expected) {\n      \r\n    }\n  }\n","realPath":"lucene/core/src/test/org/apache/lucene/search/TestMultiPhraseQuery.java","repoName":"lucene","snippetEndLine":0,"snippetStartLine":0,"startLine":571,"status":"NB"}],"commitId":"0e203d56373a343d8919b338bd21c453818cb3ba","commitMessage":"@@@LUCENE-6255: Fix PhraseQuery inconsistencies.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1660910 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2015-02-19 23:27:29","modifiedFileCount":"4","status":"M","submitter":"Adrien Grand"},{"authorTime":"2014-02-02 10:57:02","codes":[{"authorDate":"2015-06-16 18:18:40","commitOrder":3,"curCode":"  public void testBackwardPositions() throws Exception {\n    PhraseQuery.Builder builder = new PhraseQuery.Builder();\n    builder.add(new Term(\"field\", \"one\"), 1);\n    builder.add(new Term(\"field\", \"two\"), 5);\n    try {\n      builder.add(new Term(\"field\", \"three\"), 4);\n      fail(\"didn't get expected exception\");\n    } catch (IllegalArgumentException expected) {\n      \r\n    }\n  }\n","date":"2015-06-16 18:18:40","endLine":677,"groupId":"15201","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testBackwardPositions","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-lucene-10-0.7/blobInfo/CC_OUT/blobs/69/55f92bb723d183ece4f994e76ff21ee98cfb7a.src","preCode":"  public void testBackwardPositions() throws Exception {\n    PhraseQuery query = new PhraseQuery();\n    query.add(new Term(\"field\", \"one\"), 1);\n    query.add(new Term(\"field\", \"two\"), 5);\n    try {\n      query.add(new Term(\"field\", \"three\"), 4);\n      fail(\"didn't get expected exception\");\n    } catch (IllegalArgumentException expected) {\n      \r\n    }\n  }\n","realPath":"lucene/core/src/test/org/apache/lucene/search/TestPhraseQuery.java","repoName":"lucene","snippetEndLine":0,"snippetStartLine":0,"startLine":667,"status":"M"},{"authorDate":"2014-02-02 10:57:02","commitOrder":3,"curCode":"  public void testNegativeSlop() throws Exception {\n    MultiPhraseQuery query = new MultiPhraseQuery();\n    query.add(new Term(\"field\", \"two\"));\n    query.add(new Term(\"field\", \"one\"));\n    try {\n      query.setSlop(-2);\n      fail(\"didn't get expected exception\");\n    } catch (IllegalArgumentException expected) {\n      \r\n    }\n  }\n","date":"2014-02-02 10:57:02","endLine":581,"groupId":"14826","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testNegativeSlop","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-lucene-10-0.7/blobInfo/CC_OUT/blobs/39/2dc6b6c4e1cca050ca70a3654c68160cdbd935.src","preCode":"  public void testNegativeSlop() throws Exception {\n    MultiPhraseQuery query = new MultiPhraseQuery();\n    query.add(new Term(\"field\", \"two\"));\n    query.add(new Term(\"field\", \"one\"));\n    try {\n      query.setSlop(-2);\n      fail(\"didn't get expected exception\");\n    } catch (IllegalArgumentException expected) {\n      \r\n    }\n  }\n","realPath":"lucene/core/src/test/org/apache/lucene/search/TestMultiPhraseQuery.java","repoName":"lucene","snippetEndLine":0,"snippetStartLine":0,"startLine":571,"status":"N"}],"commitId":"c397fe723462cfe4069304fe3b3bcea648217060","commitMessage":"@@@LUCENE-6531: Make PhraseQuery immutable.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1685754 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2015-06-16 18:18:40","modifiedFileCount":"55","status":"M","submitter":"Adrien Grand"},{"authorTime":"2016-02-20 01:07:07","codes":[{"authorDate":"2016-02-20 01:07:07","commitOrder":4,"curCode":"  public void testBackwardPositions() throws Exception {\n    PhraseQuery.Builder builder = new PhraseQuery.Builder();\n    builder.add(new Term(\"field\", \"one\"), 1);\n    builder.add(new Term(\"field\", \"two\"), 5);\n    expectThrows(IllegalArgumentException.class, () -> {\n      builder.add(new Term(\"field\", \"three\"), 4);\n    });\n  }\n","date":"2016-02-20 01:07:47","endLine":715,"groupId":"20273","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testBackwardPositions","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-lucene-10-0.7/blobInfo/CC_OUT/blobs/cf/779034d8114371e83c4f67134666cb6d1bc2df.src","preCode":"  public void testBackwardPositions() throws Exception {\n    PhraseQuery.Builder builder = new PhraseQuery.Builder();\n    builder.add(new Term(\"field\", \"one\"), 1);\n    builder.add(new Term(\"field\", \"two\"), 5);\n    try {\n      builder.add(new Term(\"field\", \"three\"), 4);\n      fail(\"didn't get expected exception\");\n    } catch (IllegalArgumentException expected) {\n      \r\n    }\n  }\n","realPath":"lucene/core/src/test/org/apache/lucene/search/TestPhraseQuery.java","repoName":"lucene","snippetEndLine":0,"snippetStartLine":0,"startLine":708,"status":"M"},{"authorDate":"2016-02-20 01:07:07","commitOrder":4,"curCode":"  public void testNegativeSlop() throws Exception {\n    MultiPhraseQuery query = new MultiPhraseQuery();\n    query.add(new Term(\"field\", \"two\"));\n    query.add(new Term(\"field\", \"one\"));\n    expectThrows(IllegalArgumentException.class, () -> {\n      query.setSlop(-2);\n    });\n  }\n","date":"2016-02-20 01:07:47","endLine":574,"groupId":"0","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testNegativeSlop","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-lucene-10-0.7/blobInfo/CC_OUT/blobs/5c/81fed6d14422939bc2e4ec07f4b2376dcaa945.src","preCode":"  public void testNegativeSlop() throws Exception {\n    MultiPhraseQuery query = new MultiPhraseQuery();\n    query.add(new Term(\"field\", \"two\"));\n    query.add(new Term(\"field\", \"one\"));\n    try {\n      query.setSlop(-2);\n      fail(\"didn't get expected exception\");\n    } catch (IllegalArgumentException expected) {\n      \r\n    }\n  }\n","realPath":"lucene/core/src/test/org/apache/lucene/search/TestMultiPhraseQuery.java","repoName":"lucene","snippetEndLine":0,"snippetStartLine":0,"startLine":567,"status":"M"}],"commitId":"189e985b5c14c5c19799b7bdfd040874b94ba18c","commitMessage":"@@@LUCENE-7037: Switch all exceptions tests to expectThrows()\n","date":"2016-02-20 01:07:47","modifiedFileCount":"277","status":"M","submitter":"Robert Muir"},{"authorTime":"2016-03-04 18:54:10","codes":[{"authorDate":"2016-02-20 01:07:07","commitOrder":5,"curCode":"  public void testBackwardPositions() throws Exception {\n    PhraseQuery.Builder builder = new PhraseQuery.Builder();\n    builder.add(new Term(\"field\", \"one\"), 1);\n    builder.add(new Term(\"field\", \"two\"), 5);\n    expectThrows(IllegalArgumentException.class, () -> {\n      builder.add(new Term(\"field\", \"three\"), 4);\n    });\n  }\n","date":"2016-02-20 01:07:47","endLine":715,"groupId":"106379","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"testBackwardPositions","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-lucene-10-0.7/blobInfo/CC_OUT/blobs/cf/779034d8114371e83c4f67134666cb6d1bc2df.src","preCode":"  public void testBackwardPositions() throws Exception {\n    PhraseQuery.Builder builder = new PhraseQuery.Builder();\n    builder.add(new Term(\"field\", \"one\"), 1);\n    builder.add(new Term(\"field\", \"two\"), 5);\n    expectThrows(IllegalArgumentException.class, () -> {\n      builder.add(new Term(\"field\", \"three\"), 4);\n    });\n  }\n","realPath":"lucene/core/src/test/org/apache/lucene/search/TestPhraseQuery.java","repoName":"lucene","snippetEndLine":0,"snippetStartLine":0,"startLine":708,"status":"N"},{"authorDate":"2016-03-04 18:54:10","commitOrder":5,"curCode":"  public void testNegativeSlop() throws Exception {\n    MultiPhraseQuery.Builder queryBuilder = new MultiPhraseQuery.Builder();\n    queryBuilder.add(new Term(\"field\", \"two\"));\n    queryBuilder.add(new Term(\"field\", \"one\"));\n    expectThrows(IllegalArgumentException.class, () -> {\n      queryBuilder.setSlop(-2);\n    });\n  }\n","date":"2016-03-04 18:54:10","endLine":588,"groupId":"106379","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"testNegativeSlop","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-lucene-10-0.7/blobInfo/CC_OUT/blobs/94/2ac1353e5f87375cec0c756198f8ee73dfe0ea.src","preCode":"  public void testNegativeSlop() throws Exception {\n    MultiPhraseQuery query = new MultiPhraseQuery();\n    query.add(new Term(\"field\", \"two\"));\n    query.add(new Term(\"field\", \"one\"));\n    expectThrows(IllegalArgumentException.class, () -> {\n      query.setSlop(-2);\n    });\n  }\n","realPath":"lucene/core/src/test/org/apache/lucene/search/TestMultiPhraseQuery.java","repoName":"lucene","snippetEndLine":0,"snippetStartLine":0,"startLine":581,"status":"M"}],"commitId":"517acece6a210b2d1baf75a39fe3b77ea59926b2","commitMessage":"@@@Merge remote-tracking branch 'origin/master'\n\nConflicts:\n\tsolr/CHANGES.txt\n","date":"2016-03-04 18:54:10","modifiedFileCount":"303","status":"M","submitter":"Noble Paul"}]
