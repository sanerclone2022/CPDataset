[{"authorTime":"2012-04-15 22:41:44","codes":[{"authorDate":"2014-02-10 23:44:23","commitOrder":3,"curCode":"  void doPrevSetBit(BitSet a, LongBitSet b) {\n    int aa = a.size() + random().nextInt(100);\n    long bb = aa;\n    do {\n      \r\n      aa--;\n      while ((aa >= 0) && (! a.get(aa))) {\n        aa--;\n      }\n      if (b.length() == 0) {\n        bb = -1;\n      } else if (bb > b.length()-1) {\n        bb = b.prevSetBit(b.length()-1);\n      } else if (bb < 1) {\n        bb = -1;\n      } else {\n        bb = bb >= 1 ? b.prevSetBit(bb-1) : -1;\n      }\n      assertEquals(aa,bb);\n    } while (aa>=0);\n  }\n","date":"2014-02-10 23:44:23","endLine":64,"groupId":"27913","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"doPrevSetBit","params":"(BitSeta@LongBitSetb)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-lucene-10-0.7/blobInfo/CC_OUT/blobs/36/264f338784afe8835ee1993bd65ad1b33e107e.src","preCode":"  void doPrevSetBit(BitSet a, LongBitSet b) {\n    int aa = a.size() + random().nextInt(100);\n    long bb = aa;\n    do {\n      \r\n      aa--;\n      while ((aa >= 0) && (! a.get(aa))) {\n        aa--;\n      }\n      if (b.length() == 0) {\n        bb = -1;\n      } else if (bb > b.length()-1) {\n        bb = b.prevSetBit(b.length()-1);\n      } else if (bb < 1) {\n        bb = -1;\n      } else {\n        bb = bb >= 1 ? b.prevSetBit(bb-1) : -1;\n      }\n      assertEquals(aa,bb);\n    } while (aa>=0);\n  }\n","realPath":"lucene/core/src/test/org/apache/lucene/util/TestLongBitSet.java","repoName":"lucene","snippetEndLine":0,"snippetStartLine":0,"startLine":44,"status":"B"},{"authorDate":"2012-04-15 22:41:44","commitOrder":3,"curCode":"  void doPrevSetBit(BitSet a, FixedBitSet b) {\n    int aa = a.size() + random().nextInt(100);\n    int bb = aa;\n    do {\n      \r\n      aa--;\n      while ((aa >= 0) && (! a.get(aa))) {\n      \taa--;\n      }\n      if (b.length() == 0) {\n        bb = -1;\n      } else if (bb > b.length()-1) {\n        bb = b.prevSetBit(b.length()-1);\n      } else if (bb < 1) {\n        bb = -1;\n      } else {\n        bb = bb >= 1 ? b.prevSetBit(bb-1) : -1;\n      }\n      assertEquals(aa,bb);\n    } while (aa>=0);\n  }\n","date":"2012-04-15 22:41:44","endLine":65,"groupId":"27913","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"doPrevSetBit","params":"(BitSeta@FixedBitSetb)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-lucene-10-0.7/blobInfo/CC_OUT/blobs/25/581f7a8034b0b8039dbb01fe81cbc4ccd4edd3.src","preCode":"  void doPrevSetBit(BitSet a, FixedBitSet b) {\n    int aa = a.size() + random().nextInt(100);\n    int bb = aa;\n    do {\n      \r\n      aa--;\n      while ((aa >= 0) && (! a.get(aa))) {\n      \taa--;\n      }\n      if (b.length() == 0) {\n        bb = -1;\n      } else if (bb > b.length()-1) {\n        bb = b.prevSetBit(b.length()-1);\n      } else if (bb < 1) {\n        bb = -1;\n      } else {\n        bb = bb >= 1 ? b.prevSetBit(bb-1) : -1;\n      }\n      assertEquals(aa,bb);\n    } while (aa>=0);\n  }\n","realPath":"lucene/core/src/test/org/apache/lucene/util/TestFixedBitSet.java","repoName":"lucene","snippetEndLine":0,"snippetStartLine":0,"startLine":45,"status":"NB"}],"commitId":"b872f4b5c3c5324711ebb379e6c8e4c705ab3f42","commitMessage":"@@@LUCENE-5440: Add LongBitSet to handle large number of bits; replace usage of OpenBitSet by FixedBitSet/LongBitSet\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1566662 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2014-02-10 23:44:23","modifiedFileCount":"15","status":"M","submitter":"Shai Erera"},{"authorTime":"2014-10-24 15:32:19","codes":[{"authorDate":"2014-02-10 23:44:23","commitOrder":4,"curCode":"  void doPrevSetBit(BitSet a, LongBitSet b) {\n    int aa = a.size() + random().nextInt(100);\n    long bb = aa;\n    do {\n      \r\n      aa--;\n      while ((aa >= 0) && (! a.get(aa))) {\n        aa--;\n      }\n      if (b.length() == 0) {\n        bb = -1;\n      } else if (bb > b.length()-1) {\n        bb = b.prevSetBit(b.length()-1);\n      } else if (bb < 1) {\n        bb = -1;\n      } else {\n        bb = bb >= 1 ? b.prevSetBit(bb-1) : -1;\n      }\n      assertEquals(aa,bb);\n    } while (aa>=0);\n  }\n","date":"2014-02-10 23:44:23","endLine":64,"groupId":"27913","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"doPrevSetBit","params":"(BitSeta@LongBitSetb)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-lucene-10-0.7/blobInfo/CC_OUT/blobs/36/264f338784afe8835ee1993bd65ad1b33e107e.src","preCode":"  void doPrevSetBit(BitSet a, LongBitSet b) {\n    int aa = a.size() + random().nextInt(100);\n    long bb = aa;\n    do {\n      \r\n      aa--;\n      while ((aa >= 0) && (! a.get(aa))) {\n        aa--;\n      }\n      if (b.length() == 0) {\n        bb = -1;\n      } else if (bb > b.length()-1) {\n        bb = b.prevSetBit(b.length()-1);\n      } else if (bb < 1) {\n        bb = -1;\n      } else {\n        bb = bb >= 1 ? b.prevSetBit(bb-1) : -1;\n      }\n      assertEquals(aa,bb);\n    } while (aa>=0);\n  }\n","realPath":"lucene/core/src/test/org/apache/lucene/util/TestLongBitSet.java","repoName":"lucene","snippetEndLine":0,"snippetStartLine":0,"startLine":44,"status":"N"},{"authorDate":"2014-10-24 15:32:19","commitOrder":4,"curCode":"  void doPrevSetBit(java.util.BitSet a, FixedBitSet b) {\n    int aa = a.size() + random().nextInt(100);\n    int bb = aa;\n    do {\n      \r\n      aa--;\n      while ((aa >= 0) && (! a.get(aa))) {\n        aa--;\n      }\n      if (b.length() == 0) {\n        bb = -1;\n      } else if (bb > b.length()-1) {\n        bb = b.prevSetBit(b.length()-1);\n      } else if (bb < 1) {\n        bb = -1;\n      } else {\n        bb = bb >= 1 ? b.prevSetBit(bb-1) : -1;\n      }\n      assertEquals(aa,bb);\n    } while (aa>=0);\n  }\n","date":"2014-10-24 15:32:19","endLine":77,"groupId":"27913","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"doPrevSetBit","params":"(java.util.BitSeta@FixedBitSetb)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-lucene-10-0.7/blobInfo/CC_OUT/blobs/43/c4663fe70017aed7147c22d104a89ecf74a8b3.src","preCode":"  void doPrevSetBit(BitSet a, FixedBitSet b) {\n    int aa = a.size() + random().nextInt(100);\n    int bb = aa;\n    do {\n      \r\n      aa--;\n      while ((aa >= 0) && (! a.get(aa))) {\n        aa--;\n      }\n      if (b.length() == 0) {\n        bb = -1;\n      } else if (bb > b.length()-1) {\n        bb = b.prevSetBit(b.length()-1);\n      } else if (bb < 1) {\n        bb = -1;\n      } else {\n        bb = bb >= 1 ? b.prevSetBit(bb-1) : -1;\n      }\n      assertEquals(aa,bb);\n    } while (aa>=0);\n  }\n","realPath":"lucene/core/src/test/org/apache/lucene/util/TestFixedBitSet.java","repoName":"lucene","snippetEndLine":0,"snippetStartLine":0,"startLine":57,"status":"M"}],"commitId":"c179a9bf947249722910d7001b671fb3f12ccfa2","commitMessage":"@@@LUCENE-6021: Make SparseFixedBitSet and FixedBitSet share a common \"BitSet\" interface.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1634012 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2014-10-24 15:32:19","modifiedFileCount":"53","status":"M","submitter":"Adrien Grand"},{"authorTime":"2015-04-29 04:37:15","codes":[{"authorDate":"2015-04-29 04:37:15","commitOrder":5,"curCode":"  void doPrevSetBit(java.util.BitSet a, LongBitSet b) {\n    assertEquals(a.cardinality(), b.cardinality());\n    int aa = a.size() + random().nextInt(100);\n    long bb = aa;\n    do {\n      \r\n      aa--;\n      while ((aa >= 0) && (! a.get(aa))) {\n        aa--;\n      }\n      if (b.length() == 0) {\n        bb = -1;\n      } else if (bb > b.length()-1) {\n        bb = b.prevSetBit(b.length()-1);\n      } else if (bb < 1) {\n        bb = -1;\n      } else {\n        bb = bb >= 1 ? b.prevSetBit(bb-1) : -1;\n      }\n      assertEquals(aa,bb);\n    } while (aa>=0);\n  }\n","date":"2015-04-29 04:37:15","endLine":66,"groupId":"106792","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"doPrevSetBit","params":"(java.util.BitSeta@LongBitSetb)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-lucene-10-0.7/blobInfo/CC_OUT/blobs/01/8a7d59c922feae07d107152cbae4f2a8134e17.src","preCode":"  void doPrevSetBit(BitSet a, LongBitSet b) {\n    int aa = a.size() + random().nextInt(100);\n    long bb = aa;\n    do {\n      \r\n      aa--;\n      while ((aa >= 0) && (! a.get(aa))) {\n        aa--;\n      }\n      if (b.length() == 0) {\n        bb = -1;\n      } else if (bb > b.length()-1) {\n        bb = b.prevSetBit(b.length()-1);\n      } else if (bb < 1) {\n        bb = -1;\n      } else {\n        bb = bb >= 1 ? b.prevSetBit(bb-1) : -1;\n      }\n      assertEquals(aa,bb);\n    } while (aa>=0);\n  }\n","realPath":"lucene/core/src/test/org/apache/lucene/util/TestLongBitSet.java","repoName":"lucene","snippetEndLine":0,"snippetStartLine":0,"startLine":45,"status":"M"},{"authorDate":"2015-04-29 04:37:15","commitOrder":5,"curCode":"  void doPrevSetBit(java.util.BitSet a, FixedBitSet b) {\n    assertEquals(a.cardinality(), b.cardinality());\n    int aa = a.size() + random().nextInt(100);\n    int bb = aa;\n    do {\n      \r\n      aa--;\n      while ((aa >= 0) && (! a.get(aa))) {\n        aa--;\n      }\n      if (b.length() == 0) {\n        bb = -1;\n      } else if (bb > b.length()-1) {\n        bb = b.prevSetBit(b.length()-1);\n      } else if (bb < 1) {\n        bb = -1;\n      } else {\n        bb = bb >= 1 ? b.prevSetBit(bb-1) : -1;\n      }\n      assertEquals(aa,bb);\n    } while (aa>=0);\n  }\n","date":"2015-04-29 04:37:15","endLine":81,"groupId":"106792","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"doPrevSetBit","params":"(java.util.BitSeta@FixedBitSetb)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-lucene-10-0.7/blobInfo/CC_OUT/blobs/12/9ce3b92ce24c147028e5e0aa87276166c73f94.src","preCode":"  void doPrevSetBit(java.util.BitSet a, FixedBitSet b) {\n    int aa = a.size() + random().nextInt(100);\n    int bb = aa;\n    do {\n      \r\n      aa--;\n      while ((aa >= 0) && (! a.get(aa))) {\n        aa--;\n      }\n      if (b.length() == 0) {\n        bb = -1;\n      } else if (bb > b.length()-1) {\n        bb = b.prevSetBit(b.length()-1);\n      } else if (bb < 1) {\n        bb = -1;\n      } else {\n        bb = bb >= 1 ? b.prevSetBit(bb-1) : -1;\n      }\n      assertEquals(aa,bb);\n    } while (aa>=0);\n  }\n","realPath":"lucene/core/src/test/org/apache/lucene/util/TestFixedBitSet.java","repoName":"lucene","snippetEndLine":0,"snippetStartLine":0,"startLine":60,"status":"M"}],"commitId":"701b7ddf3a2f34f26834f3c09ba94b98ca4a0543","commitMessage":"@@@LUCENE-6427: Added assertion about the presence of ghost bits in (Fixed|Long)BitSet.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/dev/trunk@1676617 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2015-04-29 04:37:15","modifiedFileCount":"5","status":"M","submitter":"Adrien Grand"}]
