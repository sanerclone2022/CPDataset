[{"authorTime":"2019-04-25 03:15:27","codes":[{"authorDate":"2019-01-25 23:36:16","commitOrder":2,"curCode":"    public ManageCitationsDialogView(OOBibBase ooBase) {\n        this.ooBase = ooBase;\n\n\n        ViewLoader.view(this)\n                  .load()\n                  .setAsDialogPane(this);\n\n        setResultConverter(btn -> {\n            if (btn == ButtonType.OK) {\n                viewModel.storeSettings();\n            }\n            return null;\n        });\n\n        setTitle(Localization.lang(\"Manage citations\"));\n    }\n","date":"2019-01-25 23:36:16","endLine":57,"groupId":"5706","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"ManageCitationsDialogView","params":"(OOBibBaseooBase)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/1f/50783e89f920b79683004ad719f70bf8992f48.src","preCode":"    public ManageCitationsDialogView(OOBibBase ooBase) {\n        this.ooBase = ooBase;\n\n\n        ViewLoader.view(this)\n                  .load()\n                  .setAsDialogPane(this);\n\n        setResultConverter(btn -> {\n            if (btn == ButtonType.OK) {\n                viewModel.storeSettings();\n            }\n            return null;\n        });\n\n        setTitle(Localization.lang(\"Manage citations\"));\n    }\n","realPath":"src/main/java/org/jabref/gui/openoffice/ManageCitationsDialogView.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":41,"status":"NB"},{"authorDate":"2019-04-25 03:15:27","commitOrder":2,"curCode":"    public ImportCustomEntryTypesDialog(BibDatabaseMode mode, List<EntryType> customEntryTypes) {\n        this.mode = mode;\n        this.customEntryTypes = customEntryTypes;\n\n        ViewLoader.view(this)\n                  .load()\n                  .setAsDialogPane(this);\n\n        setResultConverter(btn -> {\n            if (btn == ButtonType.OK) {\n                viewModel.importCustomEntryTypes(unknownEntryTypesCheckList.getCheckModel().getCheckedItems(), differentCustomizationCheckList.getCheckModel().getCheckedItems());\n            }\n            return null;\n        });\n\n        setTitle(Localization.lang(\"Custom entry types\"));\n\n    }\n","date":"2019-04-25 03:15:27","endLine":50,"groupId":"9865","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"ImportCustomEntryTypesDialog","params":"(BibDatabaseModemode@List<EntryType>customEntryTypes)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/1d/8ad964228996e01978297950a9377ad340d308.src","preCode":"    public ImportCustomEntryTypesDialog(BibDatabaseMode mode, List<EntryType> customEntryTypes) {\n        this.mode = mode;\n        this.customEntryTypes = customEntryTypes;\n\n        ViewLoader.view(this)\n                  .load()\n                  .setAsDialogPane(this);\n\n        setResultConverter(btn -> {\n            if (btn == ButtonType.OK) {\n                viewModel.importCustomEntryTypes(unknownEntryTypesCheckList.getCheckModel().getCheckedItems(), differentCustomizationCheckList.getCheckModel().getCheckedItems());\n            }\n            return null;\n        });\n\n        setTitle(Localization.lang(\"Custom entry types\"));\n\n    }\n","realPath":"src/main/java/org/jabref/gui/importer/ImportCustomEntryTypesDialog.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":33,"status":"B"}],"commitId":"ca95b6d39961bd74a634bcd67b5124c4729e6ca3","commitMessage":"@@@Rework PosteOpenActions to javafx (custom entry type import) (#4898)\n\n* Rework PosteOpenActions to javafx (custom entry type import)\n\nConvert dialog for importing custom entry types to CheckListView\nRework threading when opening a database\n\n* Rework PosteOpenActions to javafx (custom entry type import)\n\nConvert dialog for importing custom entry types to CheckListView\nRework threading when opening a database\n\n* rework threading stuff\nsimplify code\n\n* rework dialog.  create fxml etc\nfix l10n\nRemove obsolete code\n\n* remove dialog service argument\n\n* remove dialogService parameter\n\n* Refactorings.  move functionality of CustomEntryTypesManager to Preferences\nUse ObservableList instead of LIstProperty\n","date":"2019-04-25 03:15:27","modifiedFileCount":"9","status":"M","submitter":"Christoph"},{"authorTime":"2019-08-02 15:20:10","codes":[{"authorDate":"2019-01-25 23:36:16","commitOrder":3,"curCode":"    public ManageCitationsDialogView(OOBibBase ooBase) {\n        this.ooBase = ooBase;\n\n\n        ViewLoader.view(this)\n                  .load()\n                  .setAsDialogPane(this);\n\n        setResultConverter(btn -> {\n            if (btn == ButtonType.OK) {\n                viewModel.storeSettings();\n            }\n            return null;\n        });\n\n        setTitle(Localization.lang(\"Manage citations\"));\n    }\n","date":"2019-01-25 23:36:16","endLine":57,"groupId":"10890","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"ManageCitationsDialogView","params":"(OOBibBaseooBase)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/1f/50783e89f920b79683004ad719f70bf8992f48.src","preCode":"    public ManageCitationsDialogView(OOBibBase ooBase) {\n        this.ooBase = ooBase;\n\n\n        ViewLoader.view(this)\n                  .load()\n                  .setAsDialogPane(this);\n\n        setResultConverter(btn -> {\n            if (btn == ButtonType.OK) {\n                viewModel.storeSettings();\n            }\n            return null;\n        });\n\n        setTitle(Localization.lang(\"Manage citations\"));\n    }\n","realPath":"src/main/java/org/jabref/gui/openoffice/ManageCitationsDialogView.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":41,"status":"N"},{"authorDate":"2019-08-02 15:20:10","commitOrder":3,"curCode":"    public ImportCustomEntryTypesDialog(BibDatabaseMode mode, List<BibEntryType> customEntryTypes) {\n        this.mode = mode;\n        this.customEntryTypes = customEntryTypes;\n\n        ViewLoader.view(this)\n                  .load()\n                  .setAsDialogPane(this);\n\n        setResultConverter(btn -> {\n            if (btn == ButtonType.OK) {\n                viewModel.importBibEntryTypes(unknownEntryTypesCheckList.getCheckModel().getCheckedItems(), differentCustomizationCheckList.getCheckModel().getCheckedItems());\n            }\n            return null;\n        });\n\n        setTitle(Localization.lang(\"Custom entry types\"));\n\n    }\n","date":"2019-08-02 15:20:10","endLine":49,"groupId":"10890","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"ImportCustomEntryTypesDialog","params":"(BibDatabaseModemode@List<BibEntryType>customEntryTypes)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/cc/1aa40cab63d3fc1baf298be681d13a196e6de2.src","preCode":"    public ImportCustomEntryTypesDialog(BibDatabaseMode mode, List<EntryType> customEntryTypes) {\n        this.mode = mode;\n        this.customEntryTypes = customEntryTypes;\n\n        ViewLoader.view(this)\n                  .load()\n                  .setAsDialogPane(this);\n\n        setResultConverter(btn -> {\n            if (btn == ButtonType.OK) {\n                viewModel.importCustomEntryTypes(unknownEntryTypesCheckList.getCheckModel().getCheckedItems(), differentCustomizationCheckList.getCheckModel().getCheckedItems());\n            }\n            return null;\n        });\n\n        setTitle(Localization.lang(\"Custom entry types\"));\n\n    }\n","realPath":"src/main/java/org/jabref/gui/importer/ImportCustomEntryTypesDialog.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":32,"status":"M"}],"commitId":"4b39b78e4afcd6c36b385f5c46f1d9a4eac2e29b","commitMessage":"@@@Move to extended enums for fields and entry types (#5148)\n\n* Introduce interface for fields\n\n* Continue using fields interface instead of strings\n\n* Introduce OrFields class\n\n* Move FieldProperty\n\n* Convert entry types to extended enum\n\n* Start fixing build\n\n* Fix build\n\n* Start fixing tests\n\n* Everything compiles again\n\n* Make model tests pass\n\n* Fix most tests\n\n* Fix build\n\n* Fix a few more tests\n\n* Fix a few more tests\n\n* Fix a few more tests\n\n* Fix a few more tests\n\n* Fix checkstyle issues\n\n* Fix more tests\n\n* Fix more tests\n\n* Disable test that fails on CI\n\n* Disable test that fails on CI\n","date":"2019-08-02 15:20:10","modifiedFileCount":"439","status":"M","submitter":"Tobias Diez"}]
