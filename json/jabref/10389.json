[{"authorTime":"2017-02-17 05:41:47","codes":[{"authorDate":"2017-02-17 05:41:47","commitOrder":1,"curCode":"    public void testNoMatchesFromDatabaseWithTwoEntries() {\n        BibEntry entry = new BibEntry();\n        database.insertEntry(entry);\n\n        entry = new BibEntry();\n        entry.setType(BibtexEntryTypes.INCOLLECTION);\n        entry.setField(\"author\", \"tonho\");\n        database.insertEntry(entry);\n\n        SearchQuery query = new SearchQuery(\"tonho\", true, true);\n        DatabaseSearcher databaseSearcher = new DatabaseSearcher(query, database);\n\n        assertEquals(Collections.singletonList(entry), databaseSearcher.getMatches());\n    }\n","date":"2017-02-17 05:41:47","endLine":102,"groupId":"10948","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testNoMatchesFromDatabaseWithTwoEntries","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/e9/ac4ba2cd6d3bcb6921e1374d9d919dbc07f313.src","preCode":"    public void testNoMatchesFromDatabaseWithTwoEntries() {\n        BibEntry entry = new BibEntry();\n        database.insertEntry(entry);\n\n        entry = new BibEntry();\n        entry.setType(BibtexEntryTypes.INCOLLECTION);\n        entry.setField(\"author\", \"tonho\");\n        database.insertEntry(entry);\n\n        SearchQuery query = new SearchQuery(\"tonho\", true, true);\n        DatabaseSearcher databaseSearcher = new DatabaseSearcher(query, database);\n\n        assertEquals(Collections.singletonList(entry), databaseSearcher.getMatches());\n    }\n","realPath":"src/test/java/org/jabref/logic/search/DatabaseSearcherTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":89,"status":"B"},{"authorDate":"2017-02-17 05:41:47","commitOrder":1,"curCode":"    public void testNoMatchFromDatabaseWithEmptyEntry() {\n        BibEntry entry = new BibEntry();\n        database.insertEntry(entry);\n\n        SearchQuery query = new SearchQuery(\"tonho\", true, true);\n        DatabaseSearcher databaseSearcher = new DatabaseSearcher(query, database);\n\n        assertEquals(Collections.emptyList(), databaseSearcher.getMatches());\n    }\n","date":"2017-02-17 05:41:47","endLine":126,"groupId":"10948","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testNoMatchFromDatabaseWithEmptyEntry","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/e9/ac4ba2cd6d3bcb6921e1374d9d919dbc07f313.src","preCode":"    public void testNoMatchFromDatabaseWithEmptyEntry() {\n        BibEntry entry = new BibEntry();\n        database.insertEntry(entry);\n\n        SearchQuery query = new SearchQuery(\"tonho\", true, true);\n        DatabaseSearcher databaseSearcher = new DatabaseSearcher(query, database);\n\n        assertEquals(Collections.emptyList(), databaseSearcher.getMatches());\n    }\n","realPath":"src/test/java/org/jabref/logic/search/DatabaseSearcherTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":118,"status":"B"}],"commitId":"ebbeb1d249edf7134abf92d24c2031ae54d19881","commitMessage":"@@@Merge branch 'net-sf-to-org-jabref'\n","date":"2017-02-17 05:41:47","modifiedFileCount":"1","status":"B","submitter":"Oliver Kopp"},{"authorTime":"2017-02-17 05:41:47","codes":[{"authorDate":"2019-08-02 15:20:10","commitOrder":2,"curCode":"    public void testNoMatchesFromDatabaseWithTwoEntries() {\n        BibEntry entry = new BibEntry();\n        database.insertEntry(entry);\n\n        entry = new BibEntry(StandardEntryType.InCollection);\n        entry.setField(StandardField.AUTHOR, \"tonho\");\n        database.insertEntry(entry);\n\n        SearchQuery query = new SearchQuery(\"tonho\", true, true);\n        DatabaseSearcher databaseSearcher = new DatabaseSearcher(query, database);\n\n        assertEquals(Collections.singletonList(entry), databaseSearcher.getMatches());\n    }\n","date":"2019-08-02 15:20:10","endLine":98,"groupId":"10948","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testNoMatchesFromDatabaseWithTwoEntries","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/3c/64fcc21d865073441812b1d8a3d52013d81551.src","preCode":"    public void testNoMatchesFromDatabaseWithTwoEntries() {\n        BibEntry entry = new BibEntry();\n        database.insertEntry(entry);\n\n        entry = new BibEntry();\n        entry.setType(BibtexEntryTypes.INCOLLECTION);\n        entry.setField(\"author\", \"tonho\");\n        database.insertEntry(entry);\n\n        SearchQuery query = new SearchQuery(\"tonho\", true, true);\n        DatabaseSearcher databaseSearcher = new DatabaseSearcher(query, database);\n\n        assertEquals(Collections.singletonList(entry), databaseSearcher.getMatches());\n    }\n","realPath":"src/test/java/org/jabref/logic/search/DatabaseSearcherTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":86,"status":"M"},{"authorDate":"2017-02-17 05:41:47","commitOrder":2,"curCode":"    public void testNoMatchFromDatabaseWithEmptyEntry() {\n        BibEntry entry = new BibEntry();\n        database.insertEntry(entry);\n\n        SearchQuery query = new SearchQuery(\"tonho\", true, true);\n        DatabaseSearcher databaseSearcher = new DatabaseSearcher(query, database);\n\n        assertEquals(Collections.emptyList(), databaseSearcher.getMatches());\n    }\n","date":"2017-02-17 05:41:47","endLine":126,"groupId":"10948","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testNoMatchFromDatabaseWithEmptyEntry","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/e9/ac4ba2cd6d3bcb6921e1374d9d919dbc07f313.src","preCode":"    public void testNoMatchFromDatabaseWithEmptyEntry() {\n        BibEntry entry = new BibEntry();\n        database.insertEntry(entry);\n\n        SearchQuery query = new SearchQuery(\"tonho\", true, true);\n        DatabaseSearcher databaseSearcher = new DatabaseSearcher(query, database);\n\n        assertEquals(Collections.emptyList(), databaseSearcher.getMatches());\n    }\n","realPath":"src/test/java/org/jabref/logic/search/DatabaseSearcherTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":118,"status":"N"}],"commitId":"4b39b78e4afcd6c36b385f5c46f1d9a4eac2e29b","commitMessage":"@@@Move to extended enums for fields and entry types (#5148)\n\n* Introduce interface for fields\n\n* Continue using fields interface instead of strings\n\n* Introduce OrFields class\n\n* Move FieldProperty\n\n* Convert entry types to extended enum\n\n* Start fixing build\n\n* Fix build\n\n* Start fixing tests\n\n* Everything compiles again\n\n* Make model tests pass\n\n* Fix most tests\n\n* Fix build\n\n* Fix a few more tests\n\n* Fix a few more tests\n\n* Fix a few more tests\n\n* Fix a few more tests\n\n* Fix checkstyle issues\n\n* Fix more tests\n\n* Fix more tests\n\n* Disable test that fails on CI\n\n* Disable test that fails on CI\n","date":"2019-08-02 15:20:10","modifiedFileCount":"439","status":"M","submitter":"Tobias Diez"},{"authorTime":"2021-07-15 03:49:30","codes":[{"authorDate":"2021-07-15 03:49:30","commitOrder":3,"curCode":"    public void testNoMatchesFromDatabaseWithTwoEntries() {\n        BibEntry entry = new BibEntry();\n        database.insertEntry(entry);\n\n        entry = new BibEntry(StandardEntryType.InCollection);\n        entry.setField(StandardField.AUTHOR, \"tonho\");\n        database.insertEntry(entry);\n\n        SearchQuery query = new SearchQuery(\"tonho\", EnumSet.of(SearchRules.SearchFlags.CASE_SENSITIVE, SearchRules.SearchFlags.REGULAR_EXPRESSION));\n        DatabaseSearcher databaseSearcher = new DatabaseSearcher(query, database);\n\n        assertEquals(Collections.singletonList(entry), databaseSearcher.getMatches());\n    }\n","date":"2021-07-15 03:49:30","endLine":100,"groupId":"10389","id":5,"instanceNumber":1,"isCurCommit":1,"methodName":"testNoMatchesFromDatabaseWithTwoEntries","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/f2/76f9ddfafa0a184aa0ca4437776b2611e71748.src","preCode":"    public void testNoMatchesFromDatabaseWithTwoEntries() {\n        BibEntry entry = new BibEntry();\n        database.insertEntry(entry);\n\n        entry = new BibEntry(StandardEntryType.InCollection);\n        entry.setField(StandardField.AUTHOR, \"tonho\");\n        database.insertEntry(entry);\n\n        SearchQuery query = new SearchQuery(\"tonho\", true, true);\n        DatabaseSearcher databaseSearcher = new DatabaseSearcher(query, database);\n\n        assertEquals(Collections.singletonList(entry), databaseSearcher.getMatches());\n    }\n","realPath":"src/test/java/org/jabref/logic/search/DatabaseSearcherTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":88,"status":"M"},{"authorDate":"2021-07-15 03:49:30","commitOrder":3,"curCode":"    public void testNoMatchFromDatabaseWithEmptyEntry() {\n        BibEntry entry = new BibEntry();\n        database.insertEntry(entry);\n\n        SearchQuery query = new SearchQuery(\"tonho\", EnumSet.of(SearchRules.SearchFlags.CASE_SENSITIVE, SearchRules.SearchFlags.REGULAR_EXPRESSION));\n        DatabaseSearcher databaseSearcher = new DatabaseSearcher(query, database);\n\n        assertEquals(Collections.emptyList(), databaseSearcher.getMatches());\n    }\n","date":"2021-07-15 03:49:30","endLine":123,"groupId":"10389","id":6,"instanceNumber":2,"isCurCommit":1,"methodName":"testNoMatchFromDatabaseWithEmptyEntry","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/f2/76f9ddfafa0a184aa0ca4437776b2611e71748.src","preCode":"    public void testNoMatchFromDatabaseWithEmptyEntry() {\n        BibEntry entry = new BibEntry();\n        database.insertEntry(entry);\n\n        SearchQuery query = new SearchQuery(\"tonho\", true, true);\n        DatabaseSearcher databaseSearcher = new DatabaseSearcher(query, database);\n\n        assertEquals(Collections.emptyList(), databaseSearcher.getMatches());\n    }\n","realPath":"src/test/java/org/jabref/logic/search/DatabaseSearcherTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":115,"status":"M"}],"commitId":"ddce5735b09cfec22ef55d15431582f19cb54208","commitMessage":"@@@Search in PDF Files (#2838)\n\nCo-authored-by: braunch <braunch.dev@gmail.com>\nCo-authored-by: Oliver Kopp <kopp.dev@gmail.com>\nCo-authored-by: Benedikt Tutzer <btut@users.noreply.github.com>\nCo-authored-by: Carl Christian Snethlage <50491877+calixtus@users.noreply.github.com>\nCo-authored-by: Christoph <siedlerkiller@gmail.com>","date":"2021-07-15 03:49:30","modifiedFileCount":"39","status":"M","submitter":"Linus Dietz"}]
