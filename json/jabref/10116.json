[{"authorTime":"2017-02-17 05:41:47","codes":[{"authorDate":"2017-02-17 05:41:47","commitOrder":1,"curCode":"    public void testFormat() {\n\n        LayoutFormatter a = new AuthorLastFirstCommas();\n\n        \r\n        Assert.assertEquals(\"\", a.format(\"\"));\n\n        \r\n        Assert.assertEquals(\"Someone, Van Something\", a.format(\"Van Something Someone\"));\n\n        \r\n        Assert.assertEquals(\"von Neumann, John and Black Brown, Peter\", a\n                .format(\"John von Neumann and Black Brown, Peter\"));\n\n        \r\n        Assert.assertEquals(\"von Neumann, John, Smith, John and Black Brown, Peter\", a\n                .format(\"von Neumann, John and Smith, John and Black Brown, Peter\"));\n\n        Assert.assertEquals(\"von Neumann, John, Smith, John and Black Brown, Peter\", a\n                .format(\"John von Neumann and John Smith and Black Brown, Peter\"));\n    }\n","date":"2017-02-17 05:41:47","endLine":35,"groupId":"6153","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testFormat","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/57/7f89989f9a8b124579fef3755440c99ece046a.src","preCode":"    public void testFormat() {\n\n        LayoutFormatter a = new AuthorLastFirstCommas();\n\n        \r\n        Assert.assertEquals(\"\", a.format(\"\"));\n\n        \r\n        Assert.assertEquals(\"Someone, Van Something\", a.format(\"Van Something Someone\"));\n\n        \r\n        Assert.assertEquals(\"von Neumann, John and Black Brown, Peter\", a\n                .format(\"John von Neumann and Black Brown, Peter\"));\n\n        \r\n        Assert.assertEquals(\"von Neumann, John, Smith, John and Black Brown, Peter\", a\n                .format(\"von Neumann, John and Smith, John and Black Brown, Peter\"));\n\n        Assert.assertEquals(\"von Neumann, John, Smith, John and Black Brown, Peter\", a\n                .format(\"John von Neumann and John Smith and Black Brown, Peter\"));\n    }\n","realPath":"src/test/java/org/jabref/logic/layout/format/AuthorLastFirstCommasTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":15,"status":"B"},{"authorDate":"2017-02-17 05:41:47","commitOrder":1,"curCode":"    public void testFormat() {\n        LayoutFormatter a = new AuthorLastFirstOxfordCommas();\n\n        \r\n        Assert.assertEquals(\"\", a.format(\"\"));\n\n        \r\n        Assert.assertEquals(\"Someone, Van Something\", a.format(\"Van Something Someone\"));\n\n        \r\n        Assert.assertEquals(\"von Neumann, John and Black Brown, Peter\", a\n                .format(\"John von Neumann and Black Brown, Peter\"));\n\n        \r\n        Assert.assertEquals(\"von Neumann, John, Smith, John, and Black Brown, Peter\", a\n                .format(\"von Neumann, John and Smith, John and Black Brown, Peter\"));\n\n        Assert.assertEquals(\"von Neumann, John, Smith, John, and Black Brown, Peter\", a\n                .format(\"John von Neumann and John Smith and Black Brown, Peter\"));\n    }\n","date":"2017-02-17 05:41:47","endLine":33,"groupId":"6153","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testFormat","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/b2/5061a5ee4fecd423471e4014dcd2b7fb1cfe43.src","preCode":"    public void testFormat() {\n        LayoutFormatter a = new AuthorLastFirstOxfordCommas();\n\n        \r\n        Assert.assertEquals(\"\", a.format(\"\"));\n\n        \r\n        Assert.assertEquals(\"Someone, Van Something\", a.format(\"Van Something Someone\"));\n\n        \r\n        Assert.assertEquals(\"von Neumann, John and Black Brown, Peter\", a\n                .format(\"John von Neumann and Black Brown, Peter\"));\n\n        \r\n        Assert.assertEquals(\"von Neumann, John, Smith, John, and Black Brown, Peter\", a\n                .format(\"von Neumann, John and Smith, John and Black Brown, Peter\"));\n\n        Assert.assertEquals(\"von Neumann, John, Smith, John, and Black Brown, Peter\", a\n                .format(\"John von Neumann and John Smith and Black Brown, Peter\"));\n    }\n","realPath":"src/test/java/org/jabref/logic/layout/format/AuthorLastFirstOxfordCommasTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":14,"status":"B"}],"commitId":"ebbeb1d249edf7134abf92d24c2031ae54d19881","commitMessage":"@@@Merge branch 'net-sf-to-org-jabref'\n","date":"2017-02-17 05:41:47","modifiedFileCount":"1","status":"B","submitter":"Oliver Kopp"},{"authorTime":"2018-02-12 00:05:54","codes":[{"authorDate":"2018-02-12 00:05:54","commitOrder":2,"curCode":"    public void testFormat() {\n\n        LayoutFormatter a = new AuthorLastFirstCommas();\n\n        \r\n        assertEquals(\"\", a.format(\"\"));\n\n        \r\n        assertEquals(\"Someone, Van Something\", a.format(\"Van Something Someone\"));\n\n        \r\n        assertEquals(\"von Neumann, John and Black Brown, Peter\", a\n                .format(\"John von Neumann and Black Brown, Peter\"));\n\n        \r\n        assertEquals(\"von Neumann, John, Smith, John and Black Brown, Peter\", a\n                .format(\"von Neumann, John and Smith, John and Black Brown, Peter\"));\n\n        assertEquals(\"von Neumann, John, Smith, John and Black Brown, Peter\", a\n                .format(\"John von Neumann and John Smith and Black Brown, Peter\"));\n    }\n","date":"2018-02-12 00:05:54","endLine":35,"groupId":"10116","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testFormat","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/9e/141ca1925a3e31923365c1665791d11138ae50.src","preCode":"    public void testFormat() {\n\n        LayoutFormatter a = new AuthorLastFirstCommas();\n\n        \r\n        Assert.assertEquals(\"\", a.format(\"\"));\n\n        \r\n        Assert.assertEquals(\"Someone, Van Something\", a.format(\"Van Something Someone\"));\n\n        \r\n        Assert.assertEquals(\"von Neumann, John and Black Brown, Peter\", a\n                .format(\"John von Neumann and Black Brown, Peter\"));\n\n        \r\n        Assert.assertEquals(\"von Neumann, John, Smith, John and Black Brown, Peter\", a\n                .format(\"von Neumann, John and Smith, John and Black Brown, Peter\"));\n\n        Assert.assertEquals(\"von Neumann, John, Smith, John and Black Brown, Peter\", a\n                .format(\"John von Neumann and John Smith and Black Brown, Peter\"));\n    }\n","realPath":"src/test/java/org/jabref/logic/layout/format/AuthorLastFirstCommasTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":15,"status":"M"},{"authorDate":"2018-02-12 00:05:54","commitOrder":2,"curCode":"    public void testFormat() {\n        LayoutFormatter a = new AuthorLastFirstOxfordCommas();\n\n        \r\n        assertEquals(\"\", a.format(\"\"));\n\n        \r\n        assertEquals(\"Someone, Van Something\", a.format(\"Van Something Someone\"));\n\n        \r\n        assertEquals(\"von Neumann, John and Black Brown, Peter\", a\n                .format(\"John von Neumann and Black Brown, Peter\"));\n\n        \r\n        assertEquals(\"von Neumann, John, Smith, John, and Black Brown, Peter\", a\n                .format(\"von Neumann, John and Smith, John and Black Brown, Peter\"));\n\n        assertEquals(\"von Neumann, John, Smith, John, and Black Brown, Peter\", a\n                .format(\"John von Neumann and John Smith and Black Brown, Peter\"));\n    }\n","date":"2018-02-12 00:05:54","endLine":33,"groupId":"10116","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testFormat","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/93/0a0ae6a6d6214a383ec5ecd061db4cc2a02a64.src","preCode":"    public void testFormat() {\n        LayoutFormatter a = new AuthorLastFirstOxfordCommas();\n\n        \r\n        Assert.assertEquals(\"\", a.format(\"\"));\n\n        \r\n        Assert.assertEquals(\"Someone, Van Something\", a.format(\"Van Something Someone\"));\n\n        \r\n        Assert.assertEquals(\"von Neumann, John and Black Brown, Peter\", a\n                .format(\"John von Neumann and Black Brown, Peter\"));\n\n        \r\n        Assert.assertEquals(\"von Neumann, John, Smith, John, and Black Brown, Peter\", a\n                .format(\"von Neumann, John and Smith, John and Black Brown, Peter\"));\n\n        Assert.assertEquals(\"von Neumann, John, Smith, John, and Black Brown, Peter\", a\n                .format(\"John von Neumann and John Smith and Black Brown, Peter\"));\n    }\n","realPath":"src/test/java/org/jabref/logic/layout/format/AuthorLastFirstOxfordCommasTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":14,"status":"M"}],"commitId":"1cef92447c4ae65ebe28d94cf9acf708861bb67b","commitMessage":"@@@Merge pull request #3711 from JabRef/junit5\n\nmigrate majority of tests to junit5","date":"2018-02-12 00:05:54","modifiedFileCount":"244","status":"M","submitter":"Oliver Kopp"}]
