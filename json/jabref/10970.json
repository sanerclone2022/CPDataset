[{"authorTime":"2019-08-02 15:20:10","codes":[{"authorDate":"2019-08-02 15:20:10","commitOrder":5,"curCode":"    protected SortedSet<Field> determineFieldsToShow(BibEntry entry) {\n        Optional<BibEntryType> entryType = Globals.entryTypesManager.enrich(entry.getType(), databaseContext.getMode());\n        if (entryType.isPresent()) {\n            Set<Field> allKnownFields = entryType.get().getAllFields().stream().map(BibField::getField).collect(Collectors.toCollection(() -> new TreeSet<>(Comparator.comparing(Field::getName))));\n            SortedSet<Field> otherFields = entry.getFields().stream().filter(field -> !allKnownFields.contains(field)).collect(Collectors.toCollection(() -> new TreeSet<>(Comparator.comparing(Field::getName))));\n\n            otherFields.removeAll(entryType.get().getDeprecatedFields());\n            otherFields.removeAll(entryType.get().getOptionalFields().stream().map(BibField::getField).collect(Collectors.toSet()));\n            otherFields.remove(InternalField.KEY_FIELD);\n            otherFields.removeAll(customTabFieldNames);\n            return otherFields;\n        } else {\n            \r\n            return Collections.emptySortedSet();\n        }\n    }\n","date":"2019-08-02 15:20:10","endLine":57,"groupId":"5351","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"determineFieldsToShow","params":"(BibEntryentry)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/fd/02cc2da747da53e4857ef4fa79658487a4b72c.src","preCode":"    protected SortedSet<Field> determineFieldsToShow(BibEntry entry) {\n        Optional<BibEntryType> entryType = Globals.entryTypesManager.enrich(entry.getType(), databaseContext.getMode());\n        if (entryType.isPresent()) {\n            Set<Field> allKnownFields = entryType.get().getAllFields().stream().map(BibField::getField).collect(Collectors.toCollection(() -> new TreeSet<>(Comparator.comparing(Field::getName))));\n            SortedSet<Field> otherFields = entry.getFields().stream().filter(field -> !allKnownFields.contains(field)).collect(Collectors.toCollection(() -> new TreeSet<>(Comparator.comparing(Field::getName))));\n\n            otherFields.removeAll(entryType.get().getDeprecatedFields());\n            otherFields.removeAll(entryType.get().getOptionalFields().stream().map(BibField::getField).collect(Collectors.toSet()));\n            otherFields.remove(InternalField.KEY_FIELD);\n            otherFields.removeAll(customTabFieldNames);\n            return otherFields;\n        } else {\n            \r\n            return Collections.emptySortedSet();\n        }\n    }\n","realPath":"src/main/java/org/jabref/gui/entryeditor/OtherFieldsTab.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":42,"status":"MB"},{"authorDate":"2019-08-02 15:20:10","commitOrder":5,"curCode":"    protected SortedSet<Field> determineFieldsToShow(BibEntry entry) {\n        Optional<BibEntryType> entryType = Globals.entryTypesManager.enrich(entry.getType(), databaseContext.getMode());\n        if (entryType.isPresent()) {\n            return entryType.get().getDeprecatedFields()\n                            .stream()\n                            .filter(entry::hasField)\n                            .collect(Collectors.toCollection(() -> new TreeSet<>(Comparator.comparing(Field::getName))));\n        } else {\n            \r\n            return Collections.emptySortedSet();\n        }\n    }\n","date":"2019-08-02 15:20:10","endLine":45,"groupId":"13198","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"determineFieldsToShow","params":"(BibEntryentry)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/a6/be86e5b8d60addee1576641d28c72b71259d76.src","preCode":"    protected SortedSet<Field> determineFieldsToShow(BibEntry entry) {\n        Optional<BibEntryType> entryType = Globals.entryTypesManager.enrich(entry.getType(), databaseContext.getMode());\n        if (entryType.isPresent()) {\n            return entryType.get().getDeprecatedFields()\n                            .stream()\n                            .filter(entry::hasField)\n                            .collect(Collectors.toCollection(() -> new TreeSet<>(Comparator.comparing(Field::getName))));\n        } else {\n            \r\n            return Collections.emptySortedSet();\n        }\n    }\n","realPath":"src/main/java/org/jabref/gui/entryeditor/DeprecatedFieldsTab.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":34,"status":"B"}],"commitId":"4b39b78e4afcd6c36b385f5c46f1d9a4eac2e29b","commitMessage":"@@@Move to extended enums for fields and entry types (#5148)\n\n* Introduce interface for fields\n\n* Continue using fields interface instead of strings\n\n* Introduce OrFields class\n\n* Move FieldProperty\n\n* Convert entry types to extended enum\n\n* Start fixing build\n\n* Fix build\n\n* Start fixing tests\n\n* Everything compiles again\n\n* Make model tests pass\n\n* Fix most tests\n\n* Fix build\n\n* Fix a few more tests\n\n* Fix a few more tests\n\n* Fix a few more tests\n\n* Fix a few more tests\n\n* Fix checkstyle issues\n\n* Fix more tests\n\n* Fix more tests\n\n* Disable test that fails on CI\n\n* Disable test that fails on CI\n","date":"2019-08-02 15:20:10","modifiedFileCount":"439","status":"M","submitter":"Tobias Diez"},{"authorTime":"2019-10-17 03:01:50","codes":[{"authorDate":"2019-10-17 03:01:50","commitOrder":6,"curCode":"    protected SortedSet<Field> determineFieldsToShow(BibEntry entry) {\n        Optional<BibEntryType> entryType = entryTypesManager.enrich(entry.getType(), databaseContext.getMode());\n        if (entryType.isPresent()) {\n            Set<Field> allKnownFields = entryType.get().getAllFields().stream().map(BibField::getField).collect(Collectors.toCollection(() -> new TreeSet<>(Comparator.comparing(Field::getName))));\n            SortedSet<Field> otherFields = entry.getFields().stream().filter(field -> !allKnownFields.contains(field)).collect(Collectors.toCollection(() -> new TreeSet<>(Comparator.comparing(Field::getName))));\n\n            otherFields.removeAll(entryType.get().getDeprecatedFields());\n            otherFields.removeAll(entryType.get().getOptionalFields().stream().map(BibField::getField).collect(Collectors.toSet()));\n            otherFields.remove(InternalField.KEY_FIELD);\n            otherFields.removeAll(customTabFieldNames);\n            return otherFields;\n        } else {\n            \r\n            return Collections.emptySortedSet();\n        }\n    }\n","date":"2019-10-17 03:01:50","endLine":63,"groupId":"5351","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"determineFieldsToShow","params":"(BibEntryentry)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/cf/4a9b8323d071286edefc0748f93ae85b8ec779.src","preCode":"    protected SortedSet<Field> determineFieldsToShow(BibEntry entry) {\n        Optional<BibEntryType> entryType = Globals.entryTypesManager.enrich(entry.getType(), databaseContext.getMode());\n        if (entryType.isPresent()) {\n            Set<Field> allKnownFields = entryType.get().getAllFields().stream().map(BibField::getField).collect(Collectors.toCollection(() -> new TreeSet<>(Comparator.comparing(Field::getName))));\n            SortedSet<Field> otherFields = entry.getFields().stream().filter(field -> !allKnownFields.contains(field)).collect(Collectors.toCollection(() -> new TreeSet<>(Comparator.comparing(Field::getName))));\n\n            otherFields.removeAll(entryType.get().getDeprecatedFields());\n            otherFields.removeAll(entryType.get().getOptionalFields().stream().map(BibField::getField).collect(Collectors.toSet()));\n            otherFields.remove(InternalField.KEY_FIELD);\n            otherFields.removeAll(customTabFieldNames);\n            return otherFields;\n        } else {\n            \r\n            return Collections.emptySortedSet();\n        }\n    }\n","realPath":"src/main/java/org/jabref/gui/entryeditor/OtherFieldsTab.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":48,"status":"M"},{"authorDate":"2019-10-17 03:01:50","commitOrder":6,"curCode":"    protected SortedSet<Field> determineFieldsToShow(BibEntry entry) {\n        Optional<BibEntryType> entryType = entryTypesManager.enrich(entry.getType(), databaseContext.getMode());\n        if (entryType.isPresent()) {\n            return entryType.get().getDeprecatedFields()\n                            .stream()\n                            .filter(entry::hasField)\n                            .collect(Collectors.toCollection(() -> new TreeSet<>(Comparator.comparing(Field::getName))));\n        } else {\n            \r\n            return Collections.emptySortedSet();\n        }\n    }\n","date":"2019-10-17 03:01:50","endLine":53,"groupId":"13198","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"determineFieldsToShow","params":"(BibEntryentry)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/c3/b7b224a40496d34b8d1a2889d3aea2a16687f0.src","preCode":"    protected SortedSet<Field> determineFieldsToShow(BibEntry entry) {\n        Optional<BibEntryType> entryType = Globals.entryTypesManager.enrich(entry.getType(), databaseContext.getMode());\n        if (entryType.isPresent()) {\n            return entryType.get().getDeprecatedFields()\n                            .stream()\n                            .filter(entry::hasField)\n                            .collect(Collectors.toCollection(() -> new TreeSet<>(Comparator.comparing(Field::getName))));\n        } else {\n            \r\n            return Collections.emptySortedSet();\n        }\n    }\n","realPath":"src/main/java/org/jabref/gui/entryeditor/DeprecatedFieldsTab.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":42,"status":"M"}],"commitId":"e36daae203f263d1f5ae00761a3a01b98ec139a1","commitMessage":"@@@Add option to display entry preview as tab in entry editor (#5451)\n\n* Add option to display entry preview as tab in entry editor\n\nAdds the entry preview as a tab. Fixes #5244. Plus a bit of refactoring\n\n* Fix checkstyle\n\n* Fix checkstyle part 2\n","date":"2019-10-17 03:01:50","modifiedFileCount":"13","status":"M","submitter":"Tobias Diez"},{"authorTime":"2020-07-01 23:18:08","codes":[{"authorDate":"2020-07-01 23:18:08","commitOrder":7,"curCode":"    protected Set<Field> determineFieldsToShow(BibEntry entry) {\n        Optional<BibEntryType> entryType = entryTypesManager.enrich(entry.getType(), databaseContext.getMode());\n        if (entryType.isPresent()) {\n            Set<Field> allKnownFields = entryType.get().getAllFields();\n            Set<Field> otherFields = entry.getFields().stream().filter(field -> !allKnownFields.contains(field)).collect(Collectors.toCollection(LinkedHashSet::new));\n\n            otherFields.removeAll(entryType.get().getDeprecatedFields());\n            otherFields.removeAll(entryType.get().getOptionalFields().stream().map(BibField::getField).collect(Collectors.toSet()));\n            otherFields.remove(InternalField.KEY_FIELD);\n            otherFields.removeAll(customTabFieldNames);\n            return otherFields;\n        } else {\n            \r\n            return Collections.emptySet();\n        }\n    }\n","date":"2020-07-01 23:18:08","endLine":78,"groupId":"10970","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"determineFieldsToShow","params":"(BibEntryentry)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/08/41a7bbd0f0a91d0f027a4baa0c1839364dc96a.src","preCode":"    protected SortedSet<Field> determineFieldsToShow(BibEntry entry) {\n        Optional<BibEntryType> entryType = entryTypesManager.enrich(entry.getType(), databaseContext.getMode());\n        if (entryType.isPresent()) {\n            Set<Field> allKnownFields = entryType.get().getAllFields().stream().map(BibField::getField).collect(Collectors.toCollection(() -> new TreeSet<>(Comparator.comparing(Field::getName))));\n            SortedSet<Field> otherFields = entry.getFields().stream().filter(field -> !allKnownFields.contains(field)).collect(Collectors.toCollection(() -> new TreeSet<>(Comparator.comparing(Field::getName))));\n\n            otherFields.removeAll(entryType.get().getDeprecatedFields());\n            otherFields.removeAll(entryType.get().getOptionalFields().stream().map(BibField::getField).collect(Collectors.toSet()));\n            otherFields.remove(InternalField.KEY_FIELD);\n            otherFields.removeAll(customTabFieldNames);\n            return otherFields;\n        } else {\n            \r\n            return Collections.emptySortedSet();\n        }\n    }\n","realPath":"src/main/java/org/jabref/gui/entryeditor/OtherFieldsTab.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":63,"status":"M"},{"authorDate":"2020-07-01 23:18:08","commitOrder":7,"curCode":"    protected Set<Field> determineFieldsToShow(BibEntry entry) {\n        Optional<BibEntryType> entryType = entryTypesManager.enrich(entry.getType(), databaseContext.getMode());\n        if (entryType.isPresent()) {\n            return entryType.get().getDeprecatedFields();\n\n        } else {\n            \r\n            return Collections.emptySet();\n        }\n    }\n","date":"2020-07-01 23:18:08","endLine":48,"groupId":"10970","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"determineFieldsToShow","params":"(BibEntryentry)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/88/3bc98da1e0aadf8b1e200d5919a2f22380a09b.src","preCode":"    protected SortedSet<Field> determineFieldsToShow(BibEntry entry) {\n        Optional<BibEntryType> entryType = entryTypesManager.enrich(entry.getType(), databaseContext.getMode());\n        if (entryType.isPresent()) {\n            return entryType.get().getDeprecatedFields()\n                            .stream()\n                            .filter(entry::hasField)\n                            .collect(Collectors.toCollection(() -> new TreeSet<>(Comparator.comparing(Field::getName))));\n        } else {\n            \r\n            return Collections.emptySortedSet();\n        }\n    }\n","realPath":"src/main/java/org/jabref/gui/entryeditor/DeprecatedFieldsTab.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":39,"status":"M"}],"commitId":"c83ea3fd22a5ce53f7fd0d14422a9b5f33ad55ed","commitMessage":"@@@Merge pull request #6152 from JabRef/allowReordering\n\nAllow reordering of custom entry types fields","date":"2020-07-01 23:18:08","modifiedFileCount":"24","status":"M","submitter":"Christoph"}]
