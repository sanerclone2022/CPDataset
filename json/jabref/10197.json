[{"authorTime":"2017-03-16 22:35:07","codes":[{"authorDate":"2017-03-16 22:35:07","commitOrder":1,"curCode":"    public void getSearchBasedFetchersReturnsAllFetcherDerivingFromSearchBasedFetcher() throws Exception {\n        List<SearchBasedFetcher> idFetchers = WebFetchers.getSearchBasedFetchers(importFormatPreferences);\n\n        Set<Class<? extends SearchBasedFetcher>> expected = reflections.getSubTypesOf(SearchBasedFetcher.class);\n        expected.remove(SearchBasedParserFetcher.class);\n        assertEquals(expected, getClasses(idFetchers));\n    }\n","date":"2017-03-16 22:35:07","endLine":59,"groupId":"4966","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"getSearchBasedFetchersReturnsAllFetcherDerivingFromSearchBasedFetcher","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/f9/48c69a80191883baa071c170a93dcfcea1f438.src","preCode":"    public void getSearchBasedFetchersReturnsAllFetcherDerivingFromSearchBasedFetcher() throws Exception {\n        List<SearchBasedFetcher> idFetchers = WebFetchers.getSearchBasedFetchers(importFormatPreferences);\n\n        Set<Class<? extends SearchBasedFetcher>> expected = reflections.getSubTypesOf(SearchBasedFetcher.class);\n        expected.remove(SearchBasedParserFetcher.class);\n        assertEquals(expected, getClasses(idFetchers));\n    }\n","realPath":"src/test/java/org/jabref/logic/importer/WebFetchersTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":53,"status":"B"},{"authorDate":"2017-03-16 22:35:07","commitOrder":1,"curCode":"    public void getIdFetchersReturnsAllFetcherDerivingFromIdFetcher() throws Exception {\n        List<IdBasedFetcher> idFetchers = WebFetchers.getIdBasedFetchers(importFormatPreferences);\n\n        Set<Class<? extends IdBasedFetcher>> expected = reflections.getSubTypesOf(IdBasedFetcher.class);\n        expected.remove(AbstractIsbnFetcher.class);\n        expected.remove(IdBasedParserFetcher.class);\n        \r\n        expected.remove(IsbnViaChimboriFetcher.class);\n        expected.remove(IsbnViaEbookDeFetcher.class);\n        assertEquals(expected, getClasses(idFetchers));\n    }\n","date":"2017-03-16 22:35:07","endLine":40,"groupId":"4966","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"getIdFetchersReturnsAllFetcherDerivingFromIdFetcher","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/f9/48c69a80191883baa071c170a93dcfcea1f438.src","preCode":"    public void getIdFetchersReturnsAllFetcherDerivingFromIdFetcher() throws Exception {\n        List<IdBasedFetcher> idFetchers = WebFetchers.getIdBasedFetchers(importFormatPreferences);\n\n        Set<Class<? extends IdBasedFetcher>> expected = reflections.getSubTypesOf(IdBasedFetcher.class);\n        expected.remove(AbstractIsbnFetcher.class);\n        expected.remove(IdBasedParserFetcher.class);\n        \r\n        expected.remove(IsbnViaChimboriFetcher.class);\n        expected.remove(IsbnViaEbookDeFetcher.class);\n        assertEquals(expected, getClasses(idFetchers));\n    }\n","realPath":"src/test/java/org/jabref/logic/importer/WebFetchersTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":30,"status":"B"}],"commitId":"d8f1d69823072562e362dcad144108473b475ee0","commitMessage":"@@@Fix #2455: Add crossref as fetcher for everything (ID-.  entry-.  search-based) (#2645)\n\n* Apply some post actions before displaying the file\n\n* Add changes in JabRefGUI\n\n* Add changelog entry\n\n* Refactor DOI fetcher\n\n* Move logic.identifier to model.entry.identifier\n\n* Move ArXiv identifier to model.entry.identifier\n\n* Do it\n\n* Add CrossRef as entry.  search and id based fetcher\n\n* Move a few fetcher related things from gui to logic\n\n* Move MathSciNetId to identifier\n","date":"2017-03-16 22:35:07","modifiedFileCount":"35","status":"B","submitter":"Tobias Diez"},{"authorTime":"2017-03-18 16:44:36","codes":[{"authorDate":"2017-03-16 22:35:07","commitOrder":2,"curCode":"    public void getSearchBasedFetchersReturnsAllFetcherDerivingFromSearchBasedFetcher() throws Exception {\n        List<SearchBasedFetcher> idFetchers = WebFetchers.getSearchBasedFetchers(importFormatPreferences);\n\n        Set<Class<? extends SearchBasedFetcher>> expected = reflections.getSubTypesOf(SearchBasedFetcher.class);\n        expected.remove(SearchBasedParserFetcher.class);\n        assertEquals(expected, getClasses(idFetchers));\n    }\n","date":"2017-03-16 22:35:07","endLine":59,"groupId":"4966","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"getSearchBasedFetchersReturnsAllFetcherDerivingFromSearchBasedFetcher","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/f9/48c69a80191883baa071c170a93dcfcea1f438.src","preCode":"    public void getSearchBasedFetchersReturnsAllFetcherDerivingFromSearchBasedFetcher() throws Exception {\n        List<SearchBasedFetcher> idFetchers = WebFetchers.getSearchBasedFetchers(importFormatPreferences);\n\n        Set<Class<? extends SearchBasedFetcher>> expected = reflections.getSubTypesOf(SearchBasedFetcher.class);\n        expected.remove(SearchBasedParserFetcher.class);\n        assertEquals(expected, getClasses(idFetchers));\n    }\n","realPath":"src/test/java/org/jabref/logic/importer/WebFetchersTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":53,"status":"N"},{"authorDate":"2017-03-18 16:44:36","commitOrder":2,"curCode":"    public void getIdFetchersReturnsAllFetcherDerivingFromIdFetcher() throws Exception {\n        List<IdFetcher> idFetchers = WebFetchers.getIdFetchers();\n\n        Set<Class<? extends IdFetcher>> expected = reflections.getSubTypesOf(IdFetcher.class);\n        expected.remove(IdParserFetcher.class);\n        assertEquals(expected, getClasses(idFetchers));\n    }\n","date":"2017-03-18 16:44:36","endLine":68,"groupId":"4966","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"getIdFetchersReturnsAllFetcherDerivingFromIdFetcher","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/7f/179ef5fc588ce312597c9cae0df64e287f6065.src","preCode":"    public void getIdFetchersReturnsAllFetcherDerivingFromIdFetcher() throws Exception {\n        List<IdBasedFetcher> idFetchers = WebFetchers.getIdBasedFetchers(importFormatPreferences);\n\n        Set<Class<? extends IdBasedFetcher>> expected = reflections.getSubTypesOf(IdBasedFetcher.class);\n        expected.remove(AbstractIsbnFetcher.class);\n        expected.remove(IdBasedParserFetcher.class);\n        \r\n        expected.remove(IsbnViaChimboriFetcher.class);\n        expected.remove(IsbnViaEbookDeFetcher.class);\n        assertEquals(expected, getClasses(idFetchers));\n    }\n","realPath":"src/test/java/org/jabref/logic/importer/WebFetchersTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":62,"status":"M"}],"commitId":"63620ff3fa5867ae43f05aa6a1c41c79dd4118b4","commitMessage":"@@@Merge pull request #2442 from JabRef/lookupdoi\n\nAdd \"Look up DOIs\" to Quality menu","date":"2017-03-18 16:44:36","modifiedFileCount":"12","status":"M","submitter":"Oliver Kopp"},{"authorTime":"2017-04-05 04:21:53","codes":[{"authorDate":"2017-03-16 22:35:07","commitOrder":3,"curCode":"    public void getSearchBasedFetchersReturnsAllFetcherDerivingFromSearchBasedFetcher() throws Exception {\n        List<SearchBasedFetcher> idFetchers = WebFetchers.getSearchBasedFetchers(importFormatPreferences);\n\n        Set<Class<? extends SearchBasedFetcher>> expected = reflections.getSubTypesOf(SearchBasedFetcher.class);\n        expected.remove(SearchBasedParserFetcher.class);\n        assertEquals(expected, getClasses(idFetchers));\n    }\n","date":"2017-03-16 22:35:07","endLine":59,"groupId":"4966","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"getSearchBasedFetchersReturnsAllFetcherDerivingFromSearchBasedFetcher","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/f9/48c69a80191883baa071c170a93dcfcea1f438.src","preCode":"    public void getSearchBasedFetchersReturnsAllFetcherDerivingFromSearchBasedFetcher() throws Exception {\n        List<SearchBasedFetcher> idFetchers = WebFetchers.getSearchBasedFetchers(importFormatPreferences);\n\n        Set<Class<? extends SearchBasedFetcher>> expected = reflections.getSubTypesOf(SearchBasedFetcher.class);\n        expected.remove(SearchBasedParserFetcher.class);\n        assertEquals(expected, getClasses(idFetchers));\n    }\n","realPath":"src/test/java/org/jabref/logic/importer/WebFetchersTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":53,"status":"N"},{"authorDate":"2017-04-05 04:21:53","commitOrder":3,"curCode":"    public void getIdFetchersReturnsAllFetcherDerivingFromIdFetcher() throws Exception {\n        List<IdFetcher> idFetchers = WebFetchers.getIdFetchers(importFormatPreferences);\n\n        Set<Class<? extends IdFetcher>> expected = reflections.getSubTypesOf(IdFetcher.class);\n        expected.remove(IdParserFetcher.class);\n        assertEquals(expected, getClasses(idFetchers));\n    }\n","date":"2017-04-05 04:21:53","endLine":68,"groupId":"4966","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"getIdFetchersReturnsAllFetcherDerivingFromIdFetcher","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/0d/09defd4a1b43948a3c9e0935d9bf37c790832d.src","preCode":"    public void getIdFetchersReturnsAllFetcherDerivingFromIdFetcher() throws Exception {\n        List<IdFetcher> idFetchers = WebFetchers.getIdFetchers();\n\n        Set<Class<? extends IdFetcher>> expected = reflections.getSubTypesOf(IdFetcher.class);\n        expected.remove(IdParserFetcher.class);\n        assertEquals(expected, getClasses(idFetchers));\n    }\n","realPath":"src/test/java/org/jabref/logic/importer/WebFetchersTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":62,"status":"M"}],"commitId":"b714206282e064ef4e839b35a8063c165aff9570","commitMessage":"@@@Add ArXiv identifier batch lookup (#2710)\n\n","date":"2017-04-05 04:21:53","modifiedFileCount":"6","status":"M","submitter":"Tobias Diez"},{"authorTime":"2017-04-05 04:21:53","codes":[{"authorDate":"2018-01-03 05:22:57","commitOrder":4,"curCode":"    public void getSearchBasedFetchersReturnsAllFetcherDerivingFromSearchBasedFetcher() throws Exception {\n        List<SearchBasedFetcher> searchBasedFetchers = WebFetchers.getSearchBasedFetchers(importFormatPreferences);\n\n        Set<Class<? extends SearchBasedFetcher>> expected = reflections.getSubTypesOf(SearchBasedFetcher.class);\n        expected.remove(SearchBasedParserFetcher.class);\n        assertEquals(expected, getClasses(searchBasedFetchers));\n    }\n","date":"2018-01-03 05:22:57","endLine":59,"groupId":"4966","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"getSearchBasedFetchersReturnsAllFetcherDerivingFromSearchBasedFetcher","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/8c/c80b27522ee9bb43e65de3a9c5e706ca753045.src","preCode":"    public void getSearchBasedFetchersReturnsAllFetcherDerivingFromSearchBasedFetcher() throws Exception {\n        List<SearchBasedFetcher> idFetchers = WebFetchers.getSearchBasedFetchers(importFormatPreferences);\n\n        Set<Class<? extends SearchBasedFetcher>> expected = reflections.getSubTypesOf(SearchBasedFetcher.class);\n        expected.remove(SearchBasedParserFetcher.class);\n        assertEquals(expected, getClasses(idFetchers));\n    }\n","realPath":"src/test/java/org/jabref/logic/importer/WebFetchersTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":53,"status":"M"},{"authorDate":"2017-04-05 04:21:53","commitOrder":4,"curCode":"    public void getIdFetchersReturnsAllFetcherDerivingFromIdFetcher() throws Exception {\n        List<IdFetcher> idFetchers = WebFetchers.getIdFetchers(importFormatPreferences);\n\n        Set<Class<? extends IdFetcher>> expected = reflections.getSubTypesOf(IdFetcher.class);\n        expected.remove(IdParserFetcher.class);\n        assertEquals(expected, getClasses(idFetchers));\n    }\n","date":"2017-04-05 04:21:53","endLine":68,"groupId":"4966","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"getIdFetchersReturnsAllFetcherDerivingFromIdFetcher","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/0d/09defd4a1b43948a3c9e0935d9bf37c790832d.src","preCode":"    public void getIdFetchersReturnsAllFetcherDerivingFromIdFetcher() throws Exception {\n        List<IdFetcher> idFetchers = WebFetchers.getIdFetchers(importFormatPreferences);\n\n        Set<Class<? extends IdFetcher>> expected = reflections.getSubTypesOf(IdFetcher.class);\n        expected.remove(IdParserFetcher.class);\n        assertEquals(expected, getClasses(idFetchers));\n    }\n","realPath":"src/test/java/org/jabref/logic/importer/WebFetchersTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":62,"status":"N"}],"commitId":"b246b9ce534ae05008185ea2e4ed9df1d8cac132","commitMessage":"@@@Add oaDOI fulltext fetcher (#3581)\n\n* Add oaDOI fulltext fetcher\n\n* Rename to OpenAccessDoi\n","date":"2018-01-03 05:22:57","modifiedFileCount":"5","status":"M","submitter":"Tobias Diez"},{"authorTime":"2018-07-13 18:23:05","codes":[{"authorDate":"2018-07-13 18:23:05","commitOrder":5,"curCode":"    void getSearchBasedFetchersReturnsAllFetcherDerivingFromSearchBasedFetcher() throws Exception {\n        List<SearchBasedFetcher> searchBasedFetchers = WebFetchers.getSearchBasedFetchers(importFormatPreferences);\n\n        Set<Class<? extends SearchBasedFetcher>> expected = reflections.getSubTypesOf(SearchBasedFetcher.class);\n        expected.remove(SearchBasedParserFetcher.class);\n        assertEquals(expected, getClasses(searchBasedFetchers));\n    }\n","date":"2018-07-13 18:23:05","endLine":59,"groupId":"4966","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"getSearchBasedFetchersReturnsAllFetcherDerivingFromSearchBasedFetcher","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/7e/9107ce0617dcc950d8d1e71e5e9d2a367aaacd.src","preCode":"    public void getSearchBasedFetchersReturnsAllFetcherDerivingFromSearchBasedFetcher() throws Exception {\n        List<SearchBasedFetcher> searchBasedFetchers = WebFetchers.getSearchBasedFetchers(importFormatPreferences);\n\n        Set<Class<? extends SearchBasedFetcher>> expected = reflections.getSubTypesOf(SearchBasedFetcher.class);\n        expected.remove(SearchBasedParserFetcher.class);\n        assertEquals(expected, getClasses(searchBasedFetchers));\n    }\n","realPath":"src/test/java/org/jabref/logic/importer/WebFetchersTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":53,"status":"M"},{"authorDate":"2018-07-13 18:23:05","commitOrder":5,"curCode":"    void getIdFetchersReturnsAllFetcherDerivingFromIdFetcher() throws Exception {\n        List<IdFetcher> idFetchers = WebFetchers.getIdFetchers(importFormatPreferences);\n\n        Set<Class<? extends IdFetcher>> expected = reflections.getSubTypesOf(IdFetcher.class);\n        expected.remove(IdParserFetcher.class);\n        assertEquals(expected, getClasses(idFetchers));\n    }\n","date":"2018-07-13 18:23:05","endLine":76,"groupId":"4966","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"getIdFetchersReturnsAllFetcherDerivingFromIdFetcher","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/7e/9107ce0617dcc950d8d1e71e5e9d2a367aaacd.src","preCode":"    public void getIdFetchersReturnsAllFetcherDerivingFromIdFetcher() throws Exception {\n        List<IdFetcher> idFetchers = WebFetchers.getIdFetchers(importFormatPreferences);\n\n        Set<Class<? extends IdFetcher>> expected = reflections.getSubTypesOf(IdFetcher.class);\n        expected.remove(IdParserFetcher.class);\n        assertEquals(expected, getClasses(idFetchers));\n    }\n","realPath":"src/test/java/org/jabref/logic/importer/WebFetchersTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":70,"status":"M"}],"commitId":"b56368c44da949722d6df1ea66f7d71653c67a97","commitMessage":"@@@Merge branch 'master' of https://github.com/JabRef/jabref\n","date":"2018-07-13 18:23:05","modifiedFileCount":"71","status":"M","submitter":"Tobias Diez"},{"authorTime":"2019-10-11 20:17:11","codes":[{"authorDate":"2019-10-11 20:17:11","commitOrder":6,"curCode":"    void getSearchBasedFetchersReturnsAllFetcherDerivingFromSearchBasedFetcher() throws Exception {\n        List<SearchBasedFetcher> searchBasedFetchers = WebFetchers.getSearchBasedFetchers(importFormatPreferences);\n        try (ScanResult scanResult = classGraph.scan()) {\n            ClassInfoList controlClasses = scanResult.getClassesImplementing(SearchBasedFetcher.class.getCanonicalName());\n            Set<Class<?>> expected = controlClasses.loadClasses().stream().collect(Collectors.toSet());\n\n            expected.remove(SearchBasedParserFetcher.class);\n            assertEquals(expected, getClasses(searchBasedFetchers));\n        }\n    }\n","date":"2019-10-11 20:17:11","endLine":75,"groupId":"1763","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"getSearchBasedFetchersReturnsAllFetcherDerivingFromSearchBasedFetcher","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/58/b2e3b15fda4a41b722869172076285902fd774.src","preCode":"    void getSearchBasedFetchersReturnsAllFetcherDerivingFromSearchBasedFetcher() throws Exception {\n        List<SearchBasedFetcher> searchBasedFetchers = WebFetchers.getSearchBasedFetchers(importFormatPreferences);\n\n        Set<Class<? extends SearchBasedFetcher>> expected = reflections.getSubTypesOf(SearchBasedFetcher.class);\n        expected.remove(SearchBasedParserFetcher.class);\n        assertEquals(expected, getClasses(searchBasedFetchers));\n    }\n","realPath":"src/test/java/org/jabref/logic/importer/WebFetchersTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":66,"status":"M"},{"authorDate":"2019-10-11 20:17:11","commitOrder":6,"curCode":"    void getIdFetchersReturnsAllFetcherDerivingFromIdFetcher() throws Exception {\n        List<IdFetcher> idFetchers = WebFetchers.getIdFetchers(importFormatPreferences);\n\n        try (ScanResult scanResult = classGraph.scan()) {\n            ClassInfoList controlClasses = scanResult.getClassesImplementing(IdFetcher.class.getCanonicalName());\n            Set<Class<?>> expected = controlClasses.loadClasses().stream().collect(Collectors.toSet());\n\n            expected.remove(IdParserFetcher.class);\n            assertEquals(expected, getClasses(idFetchers));\n        }\n    }\n","date":"2019-10-11 20:17:11","endLine":99,"groupId":"1763","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"getIdFetchersReturnsAllFetcherDerivingFromIdFetcher","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/58/b2e3b15fda4a41b722869172076285902fd774.src","preCode":"    void getIdFetchersReturnsAllFetcherDerivingFromIdFetcher() throws Exception {\n        List<IdFetcher> idFetchers = WebFetchers.getIdFetchers(importFormatPreferences);\n\n        Set<Class<? extends IdFetcher>> expected = reflections.getSubTypesOf(IdFetcher.class);\n        expected.remove(IdParserFetcher.class);\n        assertEquals(expected, getClasses(idFetchers));\n    }\n","realPath":"src/test/java/org/jabref/logic/importer/WebFetchersTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":89,"status":"M"}],"commitId":"3dae09a2778480f394bccdf5e784d0176734b982","commitMessage":"@@@Merge pull request #5388 from JabRef/enableFetcherTEst\n\nRenenable WebFetchers test","date":"2019-10-11 20:17:11","modifiedFileCount":"1","status":"M","submitter":"Christoph"},{"authorTime":"2019-10-19 17:52:56","codes":[{"authorDate":"2019-10-19 17:52:56","commitOrder":7,"curCode":"    void getSearchBasedFetchersReturnsAllFetcherDerivingFromSearchBasedFetcher() throws Exception {\n        Set<SearchBasedFetcher> searchBasedFetchers = WebFetchers.getSearchBasedFetchers(importFormatPreferences);\n        try (ScanResult scanResult = classGraph.scan()) {\n            ClassInfoList controlClasses = scanResult.getClassesImplementing(SearchBasedFetcher.class.getCanonicalName());\n            Set<Class<?>> expected = controlClasses.loadClasses().stream().collect(Collectors.toSet());\n\n            expected.remove(SearchBasedParserFetcher.class);\n            assertEquals(expected, getClasses(searchBasedFetchers));\n        }\n    }\n","date":"2019-10-19 17:52:56","endLine":75,"groupId":"1763","id":13,"instanceNumber":1,"isCurCommit":0,"methodName":"getSearchBasedFetchersReturnsAllFetcherDerivingFromSearchBasedFetcher","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/b5/d93a2be541602eb70afe3d3a1b9290fb848177.src","preCode":"    void getSearchBasedFetchersReturnsAllFetcherDerivingFromSearchBasedFetcher() throws Exception {\n        List<SearchBasedFetcher> searchBasedFetchers = WebFetchers.getSearchBasedFetchers(importFormatPreferences);\n        try (ScanResult scanResult = classGraph.scan()) {\n            ClassInfoList controlClasses = scanResult.getClassesImplementing(SearchBasedFetcher.class.getCanonicalName());\n            Set<Class<?>> expected = controlClasses.loadClasses().stream().collect(Collectors.toSet());\n\n            expected.remove(SearchBasedParserFetcher.class);\n            assertEquals(expected, getClasses(searchBasedFetchers));\n        }\n    }\n","realPath":"src/test/java/org/jabref/logic/importer/WebFetchersTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":66,"status":"M"},{"authorDate":"2019-10-19 17:52:56","commitOrder":7,"curCode":"    void getIdFetchersReturnsAllFetcherDerivingFromIdFetcher() throws Exception {\n        Set<IdFetcher> idFetchers = WebFetchers.getIdFetchers(importFormatPreferences);\n\n        try (ScanResult scanResult = classGraph.scan()) {\n            ClassInfoList controlClasses = scanResult.getClassesImplementing(IdFetcher.class.getCanonicalName());\n            Set<Class<?>> expected = controlClasses.loadClasses().stream().collect(Collectors.toSet());\n\n            expected.remove(IdParserFetcher.class);\n            assertEquals(expected, getClasses(idFetchers));\n        }\n    }\n","date":"2019-10-19 17:52:56","endLine":99,"groupId":"1763","id":14,"instanceNumber":2,"isCurCommit":0,"methodName":"getIdFetchersReturnsAllFetcherDerivingFromIdFetcher","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/b5/d93a2be541602eb70afe3d3a1b9290fb848177.src","preCode":"    void getIdFetchersReturnsAllFetcherDerivingFromIdFetcher() throws Exception {\n        List<IdFetcher> idFetchers = WebFetchers.getIdFetchers(importFormatPreferences);\n\n        try (ScanResult scanResult = classGraph.scan()) {\n            ClassInfoList controlClasses = scanResult.getClassesImplementing(IdFetcher.class.getCanonicalName());\n            Set<Class<?>> expected = controlClasses.loadClasses().stream().collect(Collectors.toSet());\n\n            expected.remove(IdParserFetcher.class);\n            assertEquals(expected, getClasses(idFetchers));\n        }\n    }\n","realPath":"src/test/java/org/jabref/logic/importer/WebFetchersTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":89,"status":"M"}],"commitId":"36aec657b667b173b1434b4f126ca236177c7073","commitMessage":"@@@Refactor to sorted set (#5477)\n\n","date":"2019-10-19 17:52:56","modifiedFileCount":"7","status":"M","submitter":"Johannes Hupe"},{"authorTime":"2019-10-19 17:52:56","codes":[{"authorDate":"2020-01-02 21:03:27","commitOrder":8,"curCode":"    void getSearchBasedFetchersReturnsAllFetcherDerivingFromSearchBasedFetcher() throws Exception {\n        Set<SearchBasedFetcher> searchBasedFetchers = WebFetchers.getSearchBasedFetchers(importFormatPreferences);\n        try (ScanResult scanResult = classGraph.scan()) {\n            ClassInfoList controlClasses = scanResult.getClassesImplementing(SearchBasedFetcher.class.getCanonicalName());\n            Set<Class<?>> expected = controlClasses.loadClasses().stream().collect(Collectors.toSet());\n\n            expected.remove(SearchBasedParserFetcher.class);\n\n            \r\n            expected.remove(ACMPortalFetcher.class);\n\n            assertEquals(expected, getClasses(searchBasedFetchers));\n        }\n    }\n","date":"2020-01-02 21:03:27","endLine":83,"groupId":"1763","id":15,"instanceNumber":1,"isCurCommit":0,"methodName":"getSearchBasedFetchersReturnsAllFetcherDerivingFromSearchBasedFetcher","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/90/4f81987169116d9f8791b155b0c84d018db399.src","preCode":"    void getSearchBasedFetchersReturnsAllFetcherDerivingFromSearchBasedFetcher() throws Exception {\n        Set<SearchBasedFetcher> searchBasedFetchers = WebFetchers.getSearchBasedFetchers(importFormatPreferences);\n        try (ScanResult scanResult = classGraph.scan()) {\n            ClassInfoList controlClasses = scanResult.getClassesImplementing(SearchBasedFetcher.class.getCanonicalName());\n            Set<Class<?>> expected = controlClasses.loadClasses().stream().collect(Collectors.toSet());\n\n            expected.remove(SearchBasedParserFetcher.class);\n            assertEquals(expected, getClasses(searchBasedFetchers));\n        }\n    }\n","realPath":"src/test/java/org/jabref/logic/importer/WebFetchersTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":70,"status":"M"},{"authorDate":"2019-10-19 17:52:56","commitOrder":8,"curCode":"    void getIdFetchersReturnsAllFetcherDerivingFromIdFetcher() throws Exception {\n        Set<IdFetcher> idFetchers = WebFetchers.getIdFetchers(importFormatPreferences);\n\n        try (ScanResult scanResult = classGraph.scan()) {\n            ClassInfoList controlClasses = scanResult.getClassesImplementing(IdFetcher.class.getCanonicalName());\n            Set<Class<?>> expected = controlClasses.loadClasses().stream().collect(Collectors.toSet());\n\n            expected.remove(IdParserFetcher.class);\n            assertEquals(expected, getClasses(idFetchers));\n        }\n    }\n","date":"2019-10-19 17:52:56","endLine":99,"groupId":"1763","id":16,"instanceNumber":2,"isCurCommit":0,"methodName":"getIdFetchersReturnsAllFetcherDerivingFromIdFetcher","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/b5/d93a2be541602eb70afe3d3a1b9290fb848177.src","preCode":"    void getIdFetchersReturnsAllFetcherDerivingFromIdFetcher() throws Exception {\n        Set<IdFetcher> idFetchers = WebFetchers.getIdFetchers(importFormatPreferences);\n\n        try (ScanResult scanResult = classGraph.scan()) {\n            ClassInfoList controlClasses = scanResult.getClassesImplementing(IdFetcher.class.getCanonicalName());\n            Set<Class<?>> expected = controlClasses.loadClasses().stream().collect(Collectors.toSet());\n\n            expected.remove(IdParserFetcher.class);\n            assertEquals(expected, getClasses(idFetchers));\n        }\n    }\n","realPath":"src/test/java/org/jabref/logic/importer/WebFetchersTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":89,"status":"N"}],"commitId":"60a37b4f5a1e5578b44a7962f1b043b206f38be1","commitMessage":"@@@Merge pull request #5805 from JabRef/disable-acm-test\n\nDisable ACM Fetcher","date":"2020-01-02 21:03:27","modifiedFileCount":"3","status":"M","submitter":"Oliver Kopp"},{"authorTime":"2020-05-24 16:53:00","codes":[{"authorDate":"2020-05-24 16:53:00","commitOrder":9,"curCode":"    void getSearchBasedFetchersReturnsAllFetcherDerivingFromSearchBasedFetcher() throws Exception {\n        Set<SearchBasedFetcher> searchBasedFetchers = WebFetchers.getSearchBasedFetchers(importFormatPreferences);\n        try (ScanResult scanResult = classGraph.scan()) {\n            ClassInfoList controlClasses = scanResult.getClassesImplementing(SearchBasedFetcher.class.getCanonicalName());\n            Set<Class<?>> expected = new HashSet<>(controlClasses.loadClasses());\n\n            expected.remove(SearchBasedParserFetcher.class);\n\n            \r\n            expected.remove(ACMPortalFetcher.class);\n\n            \r\n            expected.remove(GrobidCitationFetcher.class);\n\n            assertEquals(expected, getClasses(searchBasedFetchers));\n        }\n    }\n","date":"2020-05-24 16:53:00","endLine":88,"groupId":"2221","id":17,"instanceNumber":1,"isCurCommit":0,"methodName":"getSearchBasedFetchersReturnsAllFetcherDerivingFromSearchBasedFetcher","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/f7/3df6dff244a36aa85eb55a116dac90dfe55170.src","preCode":"    void getSearchBasedFetchersReturnsAllFetcherDerivingFromSearchBasedFetcher() throws Exception {\n        Set<SearchBasedFetcher> searchBasedFetchers = WebFetchers.getSearchBasedFetchers(importFormatPreferences);\n        try (ScanResult scanResult = classGraph.scan()) {\n            ClassInfoList controlClasses = scanResult.getClassesImplementing(SearchBasedFetcher.class.getCanonicalName());\n            Set<Class<?>> expected = controlClasses.loadClasses().stream().collect(Collectors.toSet());\n\n            expected.remove(SearchBasedParserFetcher.class);\n\n            \r\n            expected.remove(ACMPortalFetcher.class);\n\n            assertEquals(expected, getClasses(searchBasedFetchers));\n        }\n    }\n","realPath":"src/test/java/org/jabref/logic/importer/WebFetchersTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":72,"status":"M"},{"authorDate":"2020-05-24 16:53:00","commitOrder":9,"curCode":"    void getIdFetchersReturnsAllFetcherDerivingFromIdFetcher() throws Exception {\n        Set<IdFetcher<?>> idFetchers = WebFetchers.getIdFetchers(importFormatPreferences);\n\n        try (ScanResult scanResult = classGraph.scan()) {\n            ClassInfoList controlClasses = scanResult.getClassesImplementing(IdFetcher.class.getCanonicalName());\n            Set<Class<?>> expected = new HashSet<>(controlClasses.loadClasses());\n\n            expected.remove(IdParserFetcher.class);\n            assertEquals(expected, getClasses(idFetchers));\n        }\n    }\n","date":"2020-05-24 16:53:00","endLine":112,"groupId":"2221","id":18,"instanceNumber":2,"isCurCommit":0,"methodName":"getIdFetchersReturnsAllFetcherDerivingFromIdFetcher","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/f7/3df6dff244a36aa85eb55a116dac90dfe55170.src","preCode":"    void getIdFetchersReturnsAllFetcherDerivingFromIdFetcher() throws Exception {\n        Set<IdFetcher> idFetchers = WebFetchers.getIdFetchers(importFormatPreferences);\n\n        try (ScanResult scanResult = classGraph.scan()) {\n            ClassInfoList controlClasses = scanResult.getClassesImplementing(IdFetcher.class.getCanonicalName());\n            Set<Class<?>> expected = controlClasses.loadClasses().stream().collect(Collectors.toSet());\n\n            expected.remove(IdParserFetcher.class);\n            assertEquals(expected, getClasses(idFetchers));\n        }\n    }\n","realPath":"src/test/java/org/jabref/logic/importer/WebFetchersTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":102,"status":"M"}],"commitId":"3e9617061ac27577f6cc7def127c3c08093ecfc8","commitMessage":"@@@Merge pull request #6513 from JabRef/fetcherHelp\n\nFix fetcher help links","date":"2020-05-24 16:53:00","modifiedFileCount":"4","status":"M","submitter":"Christoph"},{"authorTime":"2020-05-24 16:53:00","codes":[{"authorDate":"2020-11-05 03:38:02","commitOrder":10,"curCode":"    void getSearchBasedFetchersReturnsAllFetcherDerivingFromSearchBasedFetcher() throws Exception {\n        Set<SearchBasedFetcher> searchBasedFetchers = WebFetchers.getSearchBasedFetchers(importFormatPreferences);\n        try (ScanResult scanResult = classGraph.scan()) {\n            ClassInfoList controlClasses = scanResult.getClassesImplementing(SearchBasedFetcher.class.getCanonicalName());\n            Set<Class<?>> expected = new HashSet<>(controlClasses.loadClasses());\n\n            \r\n            expected.remove(SearchBasedParserFetcher.class);\n\n            \r\n            expected.remove(ACMPortalFetcher.class);\n\n            expected.remove(PagedSearchBasedParserFetcher.class);\n            expected.remove(PagedSearchBasedFetcher.class);\n\n            \r\n            expected.remove(GrobidCitationFetcher.class);\n\n            assertEquals(expected, getClasses(searchBasedFetchers));\n        }\n    }\n","date":"2020-11-05 03:38:02","endLine":96,"groupId":"2221","id":19,"instanceNumber":1,"isCurCommit":0,"methodName":"getSearchBasedFetchersReturnsAllFetcherDerivingFromSearchBasedFetcher","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/8a/5264827957fcb815273589dac8f2c883afc11c.src","preCode":"    void getSearchBasedFetchersReturnsAllFetcherDerivingFromSearchBasedFetcher() throws Exception {\n        Set<SearchBasedFetcher> searchBasedFetchers = WebFetchers.getSearchBasedFetchers(importFormatPreferences);\n        try (ScanResult scanResult = classGraph.scan()) {\n            ClassInfoList controlClasses = scanResult.getClassesImplementing(SearchBasedFetcher.class.getCanonicalName());\n            Set<Class<?>> expected = new HashSet<>(controlClasses.loadClasses());\n\n            \r\n            expected.remove(SearchBasedParserFetcher.class);\n\n            \r\n            expected.remove(ACMPortalFetcher.class);\n\n            \r\n            expected.remove(GrobidCitationFetcher.class);\n\n            assertEquals(expected, getClasses(searchBasedFetchers));\n        }\n    }\n","realPath":"src/test/java/org/jabref/logic/importer/WebFetchersTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":76,"status":"M"},{"authorDate":"2020-05-24 16:53:00","commitOrder":10,"curCode":"    void getIdFetchersReturnsAllFetcherDerivingFromIdFetcher() throws Exception {\n        Set<IdFetcher<?>> idFetchers = WebFetchers.getIdFetchers(importFormatPreferences);\n\n        try (ScanResult scanResult = classGraph.scan()) {\n            ClassInfoList controlClasses = scanResult.getClassesImplementing(IdFetcher.class.getCanonicalName());\n            Set<Class<?>> expected = new HashSet<>(controlClasses.loadClasses());\n\n            expected.remove(IdParserFetcher.class);\n            assertEquals(expected, getClasses(idFetchers));\n        }\n    }\n","date":"2020-05-24 16:53:00","endLine":112,"groupId":"2221","id":20,"instanceNumber":2,"isCurCommit":0,"methodName":"getIdFetchersReturnsAllFetcherDerivingFromIdFetcher","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/f7/3df6dff244a36aa85eb55a116dac90dfe55170.src","preCode":"    void getIdFetchersReturnsAllFetcherDerivingFromIdFetcher() throws Exception {\n        Set<IdFetcher<?>> idFetchers = WebFetchers.getIdFetchers(importFormatPreferences);\n\n        try (ScanResult scanResult = classGraph.scan()) {\n            ClassInfoList controlClasses = scanResult.getClassesImplementing(IdFetcher.class.getCanonicalName());\n            Set<Class<?>> expected = new HashSet<>(controlClasses.loadClasses());\n\n            expected.remove(IdParserFetcher.class);\n            assertEquals(expected, getClasses(idFetchers));\n        }\n    }\n","realPath":"src/test/java/org/jabref/logic/importer/WebFetchersTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":102,"status":"N"}],"commitId":"fcbe9c52e099a783a67b1445e2b9bb6f4c485fa0","commitMessage":"@@@Merge pull request #6236 from JabRef/pagedFetcher\n\n","date":"2020-11-05 03:38:02","modifiedFileCount":"3","status":"M","submitter":"Oliver Kopp"},{"authorTime":"2020-12-24 22:06:17","codes":[{"authorDate":"2020-12-24 22:06:17","commitOrder":11,"curCode":"    void getSearchBasedFetchersReturnsAllFetcherDerivingFromSearchBasedFetcher() throws Exception {\n        Set<SearchBasedFetcher> searchBasedFetchers = WebFetchers.getSearchBasedFetchers(importFormatPreferences);\n        try (ScanResult scanResult = classGraph.scan()) {\n            ClassInfoList controlClasses = scanResult.getClassesImplementing(SearchBasedFetcher.class.getCanonicalName());\n            Set<Class<?>> expected = new HashSet<>(controlClasses.loadClasses());\n\n            \r\n            expected.remove(SearchBasedParserFetcher.class);\n\n            \r\n            expected.remove(ACMPortalFetcher.class);\n            expected.remove(JstorFetcher.class);\n            expected.remove(GoogleScholar.class);\n\n            expected.remove(PagedSearchBasedParserFetcher.class);\n            expected.remove(PagedSearchBasedFetcher.class);\n\n            \r\n            expected.remove(GrobidCitationFetcher.class);\n\n            assertEquals(expected, getClasses(searchBasedFetchers));\n        }\n    }\n","date":"2020-12-24 22:06:17","endLine":102,"groupId":"2221","id":21,"instanceNumber":1,"isCurCommit":0,"methodName":"getSearchBasedFetchersReturnsAllFetcherDerivingFromSearchBasedFetcher","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/24/d5305f84e9b7ddb52ad9525884a7149cad1de6.src","preCode":"    void getSearchBasedFetchersReturnsAllFetcherDerivingFromSearchBasedFetcher() throws Exception {\n        Set<SearchBasedFetcher> searchBasedFetchers = WebFetchers.getSearchBasedFetchers(importFormatPreferences);\n        try (ScanResult scanResult = classGraph.scan()) {\n            ClassInfoList controlClasses = scanResult.getClassesImplementing(SearchBasedFetcher.class.getCanonicalName());\n            Set<Class<?>> expected = new HashSet<>(controlClasses.loadClasses());\n\n            \r\n            expected.remove(SearchBasedParserFetcher.class);\n\n            \r\n            expected.remove(ACMPortalFetcher.class);\n\n            expected.remove(PagedSearchBasedParserFetcher.class);\n            expected.remove(PagedSearchBasedFetcher.class);\n\n            \r\n            expected.remove(GrobidCitationFetcher.class);\n\n            assertEquals(expected, getClasses(searchBasedFetchers));\n        }\n    }\n","realPath":"src/test/java/org/jabref/logic/importer/WebFetchersTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":80,"status":"M"},{"authorDate":"2020-12-24 22:06:17","commitOrder":11,"curCode":"    void getIdFetchersReturnsAllFetcherDerivingFromIdFetcher() throws Exception {\n        Set<IdFetcher<?>> idFetchers = WebFetchers.getIdFetchers(importFormatPreferences);\n\n        try (ScanResult scanResult = classGraph.scan()) {\n            ClassInfoList controlClasses = scanResult.getClassesImplementing(IdFetcher.class.getCanonicalName());\n            Set<Class<?>> expected = new HashSet<>(controlClasses.loadClasses());\n\n            expected.remove(IdParserFetcher.class);\n            \r\n            expected.remove(ACMPortalFetcher.class);\n            expected.remove(GoogleScholar.class);\n\n\n            assertEquals(expected, getClasses(idFetchers));\n        }\n    }\n","date":"2020-12-24 22:06:17","endLine":137,"groupId":"2221","id":22,"instanceNumber":2,"isCurCommit":0,"methodName":"getIdFetchersReturnsAllFetcherDerivingFromIdFetcher","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/24/d5305f84e9b7ddb52ad9525884a7149cad1de6.src","preCode":"    void getIdFetchersReturnsAllFetcherDerivingFromIdFetcher() throws Exception {\n        Set<IdFetcher<?>> idFetchers = WebFetchers.getIdFetchers(importFormatPreferences);\n\n        try (ScanResult scanResult = classGraph.scan()) {\n            ClassInfoList controlClasses = scanResult.getClassesImplementing(IdFetcher.class.getCanonicalName());\n            Set<Class<?>> expected = new HashSet<>(controlClasses.loadClasses());\n\n            expected.remove(IdParserFetcher.class);\n            assertEquals(expected, getClasses(idFetchers));\n        }\n    }\n","realPath":"src/test/java/org/jabref/logic/importer/WebFetchersTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":122,"status":"M"}],"commitId":"e53b98dbf37da64f2454fe0fcb3583469b996f68","commitMessage":"@@@fix fetcher architecture test\n","date":"2020-12-24 22:06:17","modifiedFileCount":"1","status":"M","submitter":"Siedlerchr"},{"authorTime":"2021-05-21 06:41:53","codes":[{"authorDate":"2021-05-21 06:41:53","commitOrder":12,"curCode":"    void getSearchBasedFetchersReturnsAllFetcherDerivingFromSearchBasedFetcher() throws Exception {\n        Set<SearchBasedFetcher> searchBasedFetchers = WebFetchers.getSearchBasedFetchers(importFormatPreferences);\n        try (ScanResult scanResult = classGraph.scan()) {\n            ClassInfoList controlClasses = scanResult.getClassesImplementing(SearchBasedFetcher.class.getCanonicalName());\n            Set<Class<?>> expected = new HashSet<>(controlClasses.loadClasses());\n\n            \r\n            expected.remove(SearchBasedParserFetcher.class);\n\n            \r\n            expected.remove(JstorFetcher.class);\n            expected.remove(GoogleScholar.class);\n\n            expected.remove(PagedSearchBasedParserFetcher.class);\n            expected.remove(PagedSearchBasedFetcher.class);\n\n            \r\n            expected.remove(GrobidCitationFetcher.class);\n\n            assertEquals(expected, getClasses(searchBasedFetchers));\n        }\n    }\n","date":"2021-05-21 06:41:53","endLine":99,"groupId":"10197","id":23,"instanceNumber":1,"isCurCommit":0,"methodName":"getSearchBasedFetchersReturnsAllFetcherDerivingFromSearchBasedFetcher","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/45/8a5b0985db248d2f267c31c808250785fd3c01.src","preCode":"    void getSearchBasedFetchersReturnsAllFetcherDerivingFromSearchBasedFetcher() throws Exception {\n        Set<SearchBasedFetcher> searchBasedFetchers = WebFetchers.getSearchBasedFetchers(importFormatPreferences);\n        try (ScanResult scanResult = classGraph.scan()) {\n            ClassInfoList controlClasses = scanResult.getClassesImplementing(SearchBasedFetcher.class.getCanonicalName());\n            Set<Class<?>> expected = new HashSet<>(controlClasses.loadClasses());\n\n            \r\n            expected.remove(SearchBasedParserFetcher.class);\n\n            \r\n            expected.remove(ACMPortalFetcher.class);\n            expected.remove(JstorFetcher.class);\n            expected.remove(GoogleScholar.class);\n\n            expected.remove(PagedSearchBasedParserFetcher.class);\n            expected.remove(PagedSearchBasedFetcher.class);\n\n            \r\n            expected.remove(GrobidCitationFetcher.class);\n\n            assertEquals(expected, getClasses(searchBasedFetchers));\n        }\n    }\n","realPath":"src/test/java/org/jabref/logic/importer/WebFetchersTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":78,"status":"M"},{"authorDate":"2021-05-21 06:41:53","commitOrder":12,"curCode":"    void getIdFetchersReturnsAllFetcherDerivingFromIdFetcher() throws Exception {\n        Set<IdFetcher<?>> idFetchers = WebFetchers.getIdFetchers(importFormatPreferences);\n\n        try (ScanResult scanResult = classGraph.scan()) {\n            ClassInfoList controlClasses = scanResult.getClassesImplementing(IdFetcher.class.getCanonicalName());\n            Set<Class<?>> expected = new HashSet<>(controlClasses.loadClasses());\n\n            expected.remove(IdParserFetcher.class);\n            \r\n            expected.remove(GoogleScholar.class);\n\n            assertEquals(expected, getClasses(idFetchers));\n        }\n    }\n","date":"2021-05-21 06:41:53","endLine":131,"groupId":"10197","id":24,"instanceNumber":2,"isCurCommit":0,"methodName":"getIdFetchersReturnsAllFetcherDerivingFromIdFetcher","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/45/8a5b0985db248d2f267c31c808250785fd3c01.src","preCode":"    void getIdFetchersReturnsAllFetcherDerivingFromIdFetcher() throws Exception {\n        Set<IdFetcher<?>> idFetchers = WebFetchers.getIdFetchers(importFormatPreferences);\n\n        try (ScanResult scanResult = classGraph.scan()) {\n            ClassInfoList controlClasses = scanResult.getClassesImplementing(IdFetcher.class.getCanonicalName());\n            Set<Class<?>> expected = new HashSet<>(controlClasses.loadClasses());\n\n            expected.remove(IdParserFetcher.class);\n            \r\n            expected.remove(ACMPortalFetcher.class);\n            expected.remove(GoogleScholar.class);\n\n            assertEquals(expected, getClasses(idFetchers));\n        }\n    }\n","realPath":"src/test/java/org/jabref/logic/importer/WebFetchersTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":118,"status":"M"}],"commitId":"3b3e7d6ba9b3425a384952222b7359324f690804","commitMessage":"@@@Fix for issue 5804: Rewrite ACM fetcher (#7733)\n\n","date":"2021-05-21 06:41:53","modifiedFileCount":"4","status":"M","submitter":"Ruan"}]
