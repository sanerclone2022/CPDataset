[{"authorTime":"2017-04-17 00:32:33","codes":[{"authorDate":"2017-02-17 05:41:47","commitOrder":2,"curCode":"    public void roundtripWithUserComment() throws Exception {\n        Path testBibtexFile = Paths.get(\"src/test/resources/testbib/bibWithUserComments.bib\");\n        Charset encoding = StandardCharsets.UTF_8;\n        ParserResult result = new BibtexParser(importFormatPreferences).parse(Importer.getReader(testBibtexFile, encoding));\n\n        SavePreferences preferences = new SavePreferences().withEncoding(encoding).withSaveInOriginalOrder(true);\n        BibDatabaseContext context = new BibDatabaseContext(result.getDatabase(), result.getMetaData(),\n                new Defaults(BibDatabaseMode.BIBTEX));\n\n        StringSaveSession session = databaseWriter.savePartOfDatabase(context, result.getDatabase().getEntries(), preferences);\n        try (Scanner scanner = new Scanner(testBibtexFile,encoding.name())) {\n            assertEquals(scanner.useDelimiter(\"\\\\A\").next(), session.getStringValue());\n        }\n    }\n","date":"2017-02-17 05:41:47","endLine":297,"groupId":"5432","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"roundtripWithUserComment","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/8c/e78a579da3fbe951a2b5d7de5a0936b569e3f2.src","preCode":"    public void roundtripWithUserComment() throws Exception {\n        Path testBibtexFile = Paths.get(\"src/test/resources/testbib/bibWithUserComments.bib\");\n        Charset encoding = StandardCharsets.UTF_8;\n        ParserResult result = new BibtexParser(importFormatPreferences).parse(Importer.getReader(testBibtexFile, encoding));\n\n        SavePreferences preferences = new SavePreferences().withEncoding(encoding).withSaveInOriginalOrder(true);\n        BibDatabaseContext context = new BibDatabaseContext(result.getDatabase(), result.getMetaData(),\n                new Defaults(BibDatabaseMode.BIBTEX));\n\n        StringSaveSession session = databaseWriter.savePartOfDatabase(context, result.getDatabase().getEntries(), preferences);\n        try (Scanner scanner = new Scanner(testBibtexFile,encoding.name())) {\n            assertEquals(scanner.useDelimiter(\"\\\\A\").next(), session.getStringValue());\n        }\n    }\n","realPath":"src/test/java/org/jabref/logic/exporter/BibtexDatabaseWriterTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":284,"status":"NB"},{"authorDate":"2017-04-17 00:32:33","commitOrder":2,"curCode":"    public void roundtripWithUnknownMetaData() throws Exception {\n        Path testBibtexFile = Paths.get(\"src/test/resources/testbib/unknownMetaData.bib\");\n        Charset encoding = StandardCharsets.UTF_8;\n        ParserResult result = new BibtexParser(importFormatPreferences).parse(Importer.getReader(testBibtexFile, encoding));\n\n        SavePreferences preferences = new SavePreferences().withEncoding(encoding).withSaveInOriginalOrder(true);\n        BibDatabaseContext context = new BibDatabaseContext(result.getDatabase(), result.getMetaData(),\n                new Defaults(BibDatabaseMode.BIBTEX));\n\n        StringSaveSession session = databaseWriter.savePartOfDatabase(context, result.getDatabase().getEntries(), preferences);\n        try (Scanner scanner = new Scanner(testBibtexFile,encoding.name())) {\n            assertEquals(scanner.useDelimiter(\"\\\\A\").next(), session.getStringValue());\n        }\n    }\n","date":"2017-04-17 00:32:33","endLine":355,"groupId":"5432","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"roundtripWithUnknownMetaData","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/46/8ef220f229b2788d1bb91eaeaa09f2c13ea044.src","preCode":"    public void roundtripWithUnknownMetaData() throws Exception {\n        Path testBibtexFile = Paths.get(\"src/test/resources/testbib/unknownMetaData.bib\");\n        Charset encoding = StandardCharsets.UTF_8;\n        ParserResult result = new BibtexParser(importFormatPreferences).parse(Importer.getReader(testBibtexFile, encoding));\n\n        SavePreferences preferences = new SavePreferences().withEncoding(encoding).withSaveInOriginalOrder(true);\n        BibDatabaseContext context = new BibDatabaseContext(result.getDatabase(), result.getMetaData(),\n                new Defaults(BibDatabaseMode.BIBTEX));\n\n        StringSaveSession session = databaseWriter.savePartOfDatabase(context, result.getDatabase().getEntries(), preferences);\n        try (Scanner scanner = new Scanner(testBibtexFile,encoding.name())) {\n            assertEquals(scanner.useDelimiter(\"\\\\A\").next(), session.getStringValue());\n        }\n    }\n","realPath":"src/test/java/org/jabref/logic/exporter/BibtexDatabaseWriterTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":342,"status":"B"}],"commitId":"e436627e0242f5d9db1790b89e34f4b17d296a70","commitMessage":"@@@Merge pull request #2716 from JabRef/keep-unknown-metadata\n\nKeep unkwown meta data","date":"2017-04-17 00:32:33","modifiedFileCount":"4","status":"M","submitter":"Linus Dietz"},{"authorTime":"2018-01-29 02:37:06","codes":[{"authorDate":"2018-01-29 02:37:06","commitOrder":3,"curCode":"    public void roundtripWithUserComment() throws Exception {\n        Path testBibtexFile = Paths.get(\"src/test/resources/testbib/bibWithUserComments.bib\");\n        Charset encoding = StandardCharsets.UTF_8;\n        ParserResult result = new BibtexParser(importFormatPreferences, fileMonitor).parse(Importer.getReader(testBibtexFile, encoding));\n\n        SavePreferences preferences = new SavePreferences().withEncoding(encoding).withSaveInOriginalOrder(true);\n        BibDatabaseContext context = new BibDatabaseContext(result.getDatabase(), result.getMetaData(),\n                new Defaults(BibDatabaseMode.BIBTEX));\n\n        StringSaveSession session = databaseWriter.savePartOfDatabase(context, result.getDatabase().getEntries(), preferences);\n        try (Scanner scanner = new Scanner(testBibtexFile,encoding.name())) {\n            assertEquals(scanner.useDelimiter(\"\\\\A\").next(), session.getStringValue());\n        }\n    }\n","date":"2018-01-29 02:37:06","endLine":298,"groupId":"5432","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"roundtripWithUserComment","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/b0/225863f31ba7e44aafa7287d0b873229865ebe.src","preCode":"    public void roundtripWithUserComment() throws Exception {\n        Path testBibtexFile = Paths.get(\"src/test/resources/testbib/bibWithUserComments.bib\");\n        Charset encoding = StandardCharsets.UTF_8;\n        ParserResult result = new BibtexParser(importFormatPreferences).parse(Importer.getReader(testBibtexFile, encoding));\n\n        SavePreferences preferences = new SavePreferences().withEncoding(encoding).withSaveInOriginalOrder(true);\n        BibDatabaseContext context = new BibDatabaseContext(result.getDatabase(), result.getMetaData(),\n                new Defaults(BibDatabaseMode.BIBTEX));\n\n        StringSaveSession session = databaseWriter.savePartOfDatabase(context, result.getDatabase().getEntries(), preferences);\n        try (Scanner scanner = new Scanner(testBibtexFile,encoding.name())) {\n            assertEquals(scanner.useDelimiter(\"\\\\A\").next(), session.getStringValue());\n        }\n    }\n","realPath":"src/test/java/org/jabref/logic/exporter/BibtexDatabaseWriterTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":285,"status":"M"},{"authorDate":"2018-01-29 02:37:06","commitOrder":3,"curCode":"    public void roundtripWithUnknownMetaData() throws Exception {\n        Path testBibtexFile = Paths.get(\"src/test/resources/testbib/unknownMetaData.bib\");\n        Charset encoding = StandardCharsets.UTF_8;\n        ParserResult result = new BibtexParser(importFormatPreferences, fileMonitor).parse(Importer.getReader(testBibtexFile, encoding));\n\n        SavePreferences preferences = new SavePreferences().withEncoding(encoding).withSaveInOriginalOrder(true);\n        BibDatabaseContext context = new BibDatabaseContext(result.getDatabase(), result.getMetaData(),\n                new Defaults(BibDatabaseMode.BIBTEX));\n\n        StringSaveSession session = databaseWriter.savePartOfDatabase(context, result.getDatabase().getEntries(), preferences);\n        try (Scanner scanner = new Scanner(testBibtexFile,encoding.name())) {\n            assertEquals(scanner.useDelimiter(\"\\\\A\").next(), session.getStringValue());\n        }\n    }\n","date":"2018-01-29 02:37:06","endLine":356,"groupId":"5432","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"roundtripWithUnknownMetaData","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/b0/225863f31ba7e44aafa7287d0b873229865ebe.src","preCode":"    public void roundtripWithUnknownMetaData() throws Exception {\n        Path testBibtexFile = Paths.get(\"src/test/resources/testbib/unknownMetaData.bib\");\n        Charset encoding = StandardCharsets.UTF_8;\n        ParserResult result = new BibtexParser(importFormatPreferences).parse(Importer.getReader(testBibtexFile, encoding));\n\n        SavePreferences preferences = new SavePreferences().withEncoding(encoding).withSaveInOriginalOrder(true);\n        BibDatabaseContext context = new BibDatabaseContext(result.getDatabase(), result.getMetaData(),\n                new Defaults(BibDatabaseMode.BIBTEX));\n\n        StringSaveSession session = databaseWriter.savePartOfDatabase(context, result.getDatabase().getEntries(), preferences);\n        try (Scanner scanner = new Scanner(testBibtexFile,encoding.name())) {\n            assertEquals(scanner.useDelimiter(\"\\\\A\").next(), session.getStringValue());\n        }\n    }\n","realPath":"src/test/java/org/jabref/logic/exporter/BibtexDatabaseWriterTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":343,"status":"M"}],"commitId":"cfb424f80c2069c61673d5051fa761715edab091","commitMessage":"@@@Implements #1664: group based on aux file (#3444)\n\n* First prototype of aux group\n\n* Refactor so that TexGroup does not depend on logic\n\n* Add changelog entry\n\n* Fix architecture tests\n\n* Add new language key\n\n* Fix tests\n","date":"2018-01-29 02:37:06","modifiedFileCount":"76","status":"M","submitter":"Tobias Diez"},{"authorTime":"2018-09-14 03:36:12","codes":[{"authorDate":"2018-09-14 03:36:12","commitOrder":4,"curCode":"    void roundtripWithUserComment() throws Exception {\n        Path testBibtexFile = Paths.get(\"src/test/resources/testbib/bibWithUserComments.bib\");\n        Charset encoding = StandardCharsets.UTF_8;\n        ParserResult result = new BibtexParser(importFormatPreferences, fileMonitor).parse(Importer.getReader(testBibtexFile, encoding));\n\n        when(preferences.getEncoding()).thenReturn(encoding);\n        when(preferences.isSaveInOriginalOrder()).thenReturn(true);\n        BibDatabaseContext context = new BibDatabaseContext(result.getDatabase(), result.getMetaData(),\n                new Defaults(BibDatabaseMode.BIBTEX));\n\n        databaseWriter.savePartOfDatabase(context, result.getDatabase().getEntries());\n        try (Scanner scanner = new Scanner(testBibtexFile,encoding.name())) {\n            assertEquals(scanner.useDelimiter(\"\\\\A\").next(), stringWriter.toString());\n        }\n    }\n","date":"2018-09-14 03:36:12","endLine":303,"groupId":"4909","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"roundtripWithUserComment","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/1d/9881205733c827cd9d940a3605dbb05f8d86d7.src","preCode":"    public void roundtripWithUserComment() throws Exception {\n        Path testBibtexFile = Paths.get(\"src/test/resources/testbib/bibWithUserComments.bib\");\n        Charset encoding = StandardCharsets.UTF_8;\n        ParserResult result = new BibtexParser(importFormatPreferences, fileMonitor).parse(Importer.getReader(testBibtexFile, encoding));\n\n        SavePreferences preferences = new SavePreferences().withEncoding(encoding).withSaveInOriginalOrder(true);\n        BibDatabaseContext context = new BibDatabaseContext(result.getDatabase(), result.getMetaData(),\n                new Defaults(BibDatabaseMode.BIBTEX));\n\n        StringSaveSession session = databaseWriter.savePartOfDatabase(context, result.getDatabase().getEntries(), preferences);\n        try (Scanner scanner = new Scanner(testBibtexFile,encoding.name())) {\n            assertEquals(scanner.useDelimiter(\"\\\\A\").next(), session.getStringValue());\n        }\n    }\n","realPath":"src/test/java/org/jabref/logic/exporter/BibtexDatabaseWriterTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":289,"status":"M"},{"authorDate":"2018-09-14 03:36:12","commitOrder":4,"curCode":"    void roundtripWithUnknownMetaData() throws Exception {\n        Path testBibtexFile = Paths.get(\"src/test/resources/testbib/unknownMetaData.bib\");\n        Charset encoding = StandardCharsets.UTF_8;\n        ParserResult result = new BibtexParser(importFormatPreferences, fileMonitor).parse(Importer.getReader(testBibtexFile, encoding));\n\n        when(preferences.getEncoding()).thenReturn(encoding);\n        when(preferences.isSaveInOriginalOrder()).thenReturn(true);\n        BibDatabaseContext context = new BibDatabaseContext(result.getDatabase(), result.getMetaData(),\n                new Defaults(BibDatabaseMode.BIBTEX));\n\n        databaseWriter.savePartOfDatabase(context, result.getDatabase().getEntries());\n        try (Scanner scanner = new Scanner(testBibtexFile,encoding.name())) {\n            assertEquals(scanner.useDelimiter(\"\\\\A\").next(), stringWriter.toString());\n        }\n    }\n","date":"2018-09-14 03:36:12","endLine":364,"groupId":"4909","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"roundtripWithUnknownMetaData","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/1d/9881205733c827cd9d940a3605dbb05f8d86d7.src","preCode":"    public void roundtripWithUnknownMetaData() throws Exception {\n        Path testBibtexFile = Paths.get(\"src/test/resources/testbib/unknownMetaData.bib\");\n        Charset encoding = StandardCharsets.UTF_8;\n        ParserResult result = new BibtexParser(importFormatPreferences, fileMonitor).parse(Importer.getReader(testBibtexFile, encoding));\n\n        SavePreferences preferences = new SavePreferences().withEncoding(encoding).withSaveInOriginalOrder(true);\n        BibDatabaseContext context = new BibDatabaseContext(result.getDatabase(), result.getMetaData(),\n                new Defaults(BibDatabaseMode.BIBTEX));\n\n        StringSaveSession session = databaseWriter.savePartOfDatabase(context, result.getDatabase().getEntries(), preferences);\n        try (Scanner scanner = new Scanner(testBibtexFile,encoding.name())) {\n            assertEquals(scanner.useDelimiter(\"\\\\A\").next(), session.getStringValue());\n        }\n    }\n","realPath":"src/test/java/org/jabref/logic/exporter/BibtexDatabaseWriterTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":350,"status":"M"}],"commitId":"e83680f18d815ebebc779d239a6eacd8930150fe","commitMessage":"@@@Completely rework save operation (#4309)\n\n* Make FileHistory use Paths instead of strings\n\n* Almost completely rewrite save infrastructure\n\n* Fix build\n\n* Fix tests\n\n* Remove file lock\n\n* Improve comments\n\n* Fix build\n\n* Implement feedback and fix tests\n\n* Fix build\n","date":"2018-09-14 03:36:12","modifiedFileCount":"32","status":"M","submitter":"Tobias Diez"},{"authorTime":"2019-11-28 14:54:34","codes":[{"authorDate":"2019-11-28 14:54:34","commitOrder":5,"curCode":"    void roundtripWithUserComment() throws Exception {\n        Path testBibtexFile = Paths.get(\"src/test/resources/testbib/bibWithUserComments.bib\");\n        Charset encoding = StandardCharsets.UTF_8;\n        ParserResult result = new BibtexParser(importFormatPreferences, fileMonitor).parse(Importer.getReader(testBibtexFile, encoding));\n\n        when(preferences.getEncoding()).thenReturn(encoding);\n        when(preferences.isSaveInOriginalOrder()).thenReturn(true);\n        BibDatabaseContext context = new BibDatabaseContext(result.getDatabase(), result.getMetaData(),\n                new Defaults(BibDatabaseMode.BIBTEX));\n\n        databaseWriter.savePartOfDatabase(context, result.getDatabase().getEntries());\n        assertEquals(Files.readString(testBibtexFile, encoding), stringWriter.toString());\n    }\n","date":"2019-11-28 14:54:34","endLine":367,"groupId":"4909","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"roundtripWithUserComment","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/1d/779dd50c0826de89ecd53a52756a917cedf52e.src","preCode":"    void roundtripWithUserComment() throws Exception {\n        Path testBibtexFile = Paths.get(\"src/test/resources/testbib/bibWithUserComments.bib\");\n        Charset encoding = StandardCharsets.UTF_8;\n        ParserResult result = new BibtexParser(importFormatPreferences, fileMonitor).parse(Importer.getReader(testBibtexFile, encoding));\n\n        when(preferences.getEncoding()).thenReturn(encoding);\n        when(preferences.isSaveInOriginalOrder()).thenReturn(true);\n        BibDatabaseContext context = new BibDatabaseContext(result.getDatabase(), result.getMetaData(),\n                new Defaults(BibDatabaseMode.BIBTEX));\n\n        databaseWriter.savePartOfDatabase(context, result.getDatabase().getEntries());\n        try (Scanner scanner = new Scanner(testBibtexFile, encoding.name())) {\n            assertEquals(scanner.useDelimiter(\"\\\\A\").next(), stringWriter.toString());\n        }\n    }\n","realPath":"src/test/java/org/jabref/logic/exporter/BibtexDatabaseWriterTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":355,"status":"M"},{"authorDate":"2019-11-28 14:54:34","commitOrder":5,"curCode":"    void roundtripWithUnknownMetaData() throws Exception {\n        Path testBibtexFile = Paths.get(\"src/test/resources/testbib/unknownMetaData.bib\");\n        Charset encoding = StandardCharsets.UTF_8;\n        ParserResult result = new BibtexParser(importFormatPreferences, fileMonitor).parse(Importer.getReader(testBibtexFile, encoding));\n\n        when(preferences.getEncoding()).thenReturn(encoding);\n        when(preferences.isSaveInOriginalOrder()).thenReturn(true);\n        BibDatabaseContext context = new BibDatabaseContext(result.getDatabase(), result.getMetaData(),\n                new Defaults(BibDatabaseMode.BIBTEX));\n\n        databaseWriter.savePartOfDatabase(context, result.getDatabase().getEntries());\n        assertEquals(Files.readString(testBibtexFile, encoding), stringWriter.toString());\n    }\n","date":"2019-11-28 14:54:34","endLine":421,"groupId":"4909","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"roundtripWithUnknownMetaData","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/1d/779dd50c0826de89ecd53a52756a917cedf52e.src","preCode":"    void roundtripWithUnknownMetaData() throws Exception {\n        Path testBibtexFile = Paths.get(\"src/test/resources/testbib/unknownMetaData.bib\");\n        Charset encoding = StandardCharsets.UTF_8;\n        ParserResult result = new BibtexParser(importFormatPreferences, fileMonitor).parse(Importer.getReader(testBibtexFile, encoding));\n\n        when(preferences.getEncoding()).thenReturn(encoding);\n        when(preferences.isSaveInOriginalOrder()).thenReturn(true);\n        BibDatabaseContext context = new BibDatabaseContext(result.getDatabase(), result.getMetaData(),\n                new Defaults(BibDatabaseMode.BIBTEX));\n\n        databaseWriter.savePartOfDatabase(context, result.getDatabase().getEntries());\n        try (Scanner scanner = new Scanner(testBibtexFile, encoding.name())) {\n            assertEquals(scanner.useDelimiter(\"\\\\A\").next(), stringWriter.toString());\n        }\n    }\n","realPath":"src/test/java/org/jabref/logic/exporter/BibtexDatabaseWriterTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":409,"status":"M"}],"commitId":"382c4b2190164ec5db9e473cb05ea831b44827eb","commitMessage":"@@@Add tests for \"changed\" flag (#5640)\n\n- Add tests\n- Guard AtomicFileWriter with a try-with-resources during save\n- use Objects.requireNonNull in DefaultFileUpdateMontitor\n- add comment\n- some auto-formattings\n- Fix typo in comment","date":"2019-11-28 14:54:34","modifiedFileCount":"9","status":"M","submitter":"Oliver Kopp"},{"authorTime":"2020-01-18 07:15:28","codes":[{"authorDate":"2020-01-18 07:15:28","commitOrder":6,"curCode":"    void roundtripWithUserComment() throws Exception {\n        Path testBibtexFile = Paths.get(\"src/test/resources/testbib/bibWithUserComments.bib\");\n        Charset encoding = StandardCharsets.UTF_8;\n        ParserResult result = new BibtexParser(importFormatPreferences, fileMonitor).parse(Importer.getReader(testBibtexFile, encoding));\n\n        when(preferences.getEncoding()).thenReturn(encoding);\n        when(preferences.isSaveInOriginalOrder()).thenReturn(true);\n        BibDatabaseContext context = new BibDatabaseContext(result.getDatabase(), result.getMetaData());\n\n        databaseWriter.savePartOfDatabase(context, result.getDatabase().getEntries());\n        assertEquals(Files.readString(testBibtexFile, encoding), stringWriter.toString());\n    }\n","date":"2020-01-18 07:15:28","endLine":367,"groupId":"7906","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"roundtripWithUserComment","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/12/682482a1d1bb932282ee02c20221ad3c96f82e.src","preCode":"    void roundtripWithUserComment() throws Exception {\n        Path testBibtexFile = Paths.get(\"src/test/resources/testbib/bibWithUserComments.bib\");\n        Charset encoding = StandardCharsets.UTF_8;\n        ParserResult result = new BibtexParser(importFormatPreferences, fileMonitor).parse(Importer.getReader(testBibtexFile, encoding));\n\n        when(preferences.getEncoding()).thenReturn(encoding);\n        when(preferences.isSaveInOriginalOrder()).thenReturn(true);\n        BibDatabaseContext context = new BibDatabaseContext(result.getDatabase(), result.getMetaData(),\n                new Defaults(BibDatabaseMode.BIBTEX));\n\n        databaseWriter.savePartOfDatabase(context, result.getDatabase().getEntries());\n        assertEquals(Files.readString(testBibtexFile, encoding), stringWriter.toString());\n    }\n","realPath":"src/test/java/org/jabref/logic/exporter/BibtexDatabaseWriterTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":356,"status":"M"},{"authorDate":"2020-01-18 07:15:28","commitOrder":6,"curCode":"    void roundtripWithUnknownMetaData() throws Exception {\n        Path testBibtexFile = Paths.get(\"src/test/resources/testbib/unknownMetaData.bib\");\n        Charset encoding = StandardCharsets.UTF_8;\n        ParserResult result = new BibtexParser(importFormatPreferences, fileMonitor).parse(Importer.getReader(testBibtexFile, encoding));\n\n        when(preferences.getEncoding()).thenReturn(encoding);\n        when(preferences.isSaveInOriginalOrder()).thenReturn(true);\n        BibDatabaseContext context = new BibDatabaseContext(result.getDatabase(), result.getMetaData());\n\n        databaseWriter.savePartOfDatabase(context, result.getDatabase().getEntries());\n        assertEquals(Files.readString(testBibtexFile, encoding), stringWriter.toString());\n    }\n","date":"2020-01-18 07:15:28","endLine":418,"groupId":"7906","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"roundtripWithUnknownMetaData","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/12/682482a1d1bb932282ee02c20221ad3c96f82e.src","preCode":"    void roundtripWithUnknownMetaData() throws Exception {\n        Path testBibtexFile = Paths.get(\"src/test/resources/testbib/unknownMetaData.bib\");\n        Charset encoding = StandardCharsets.UTF_8;\n        ParserResult result = new BibtexParser(importFormatPreferences, fileMonitor).parse(Importer.getReader(testBibtexFile, encoding));\n\n        when(preferences.getEncoding()).thenReturn(encoding);\n        when(preferences.isSaveInOriginalOrder()).thenReturn(true);\n        BibDatabaseContext context = new BibDatabaseContext(result.getDatabase(), result.getMetaData(),\n                new Defaults(BibDatabaseMode.BIBTEX));\n\n        databaseWriter.savePartOfDatabase(context, result.getDatabase().getEntries());\n        assertEquals(Files.readString(testBibtexFile, encoding), stringWriter.toString());\n    }\n","realPath":"src/test/java/org/jabref/logic/exporter/BibtexDatabaseWriterTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":407,"status":"M"}],"commitId":"e9851d89dce6b39ce7dc99df1d5eca81840487e1","commitMessage":"@@@Improve serialization to fix #4877 (#5838)\n\n* Always remember which encoding was used for saving\n\n* Already infer mode upon loading\n\n* Don't format field values upon writing\n\n* Fix tests\n\n* Fix tests\n\n* Fix localization and add changelog\n\n* Add missing space\n\n* Fix test method name\n\nCo-authored-by: Oliver Kopp <kopp.dev@gmail.com>\n","date":"2020-01-18 07:15:28","modifiedFileCount":"31","status":"M","submitter":"Tobias Diez"},{"authorTime":"2020-04-30 17:10:13","codes":[{"authorDate":"2020-04-30 17:10:13","commitOrder":7,"curCode":"    void roundtripWithUserComment() throws Exception {\n        Path testBibtexFile = Path.of(\"src/test/resources/testbib/bibWithUserComments.bib\");\n        Charset encoding = StandardCharsets.UTF_8;\n        ParserResult result = new BibtexParser(importFormatPreferences, fileMonitor).parse(Importer.getReader(testBibtexFile, encoding));\n\n        when(preferences.getEncoding()).thenReturn(encoding);\n        when(preferences.isSaveInOriginalOrder()).thenReturn(true);\n        BibDatabaseContext context = new BibDatabaseContext(result.getDatabase(), result.getMetaData());\n\n        databaseWriter.savePartOfDatabase(context, result.getDatabase().getEntries());\n        assertEquals(Files.readString(testBibtexFile, encoding), stringWriter.toString());\n    }\n","date":"2020-04-30 17:10:13","endLine":366,"groupId":"7906","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"roundtripWithUserComment","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/6d/3c6231aef8292248c58fa3085c61dfdef819d0.src","preCode":"    void roundtripWithUserComment() throws Exception {\n        Path testBibtexFile = Paths.get(\"src/test/resources/testbib/bibWithUserComments.bib\");\n        Charset encoding = StandardCharsets.UTF_8;\n        ParserResult result = new BibtexParser(importFormatPreferences, fileMonitor).parse(Importer.getReader(testBibtexFile, encoding));\n\n        when(preferences.getEncoding()).thenReturn(encoding);\n        when(preferences.isSaveInOriginalOrder()).thenReturn(true);\n        BibDatabaseContext context = new BibDatabaseContext(result.getDatabase(), result.getMetaData());\n\n        databaseWriter.savePartOfDatabase(context, result.getDatabase().getEntries());\n        assertEquals(Files.readString(testBibtexFile, encoding), stringWriter.toString());\n    }\n","realPath":"src/test/java/org/jabref/logic/exporter/BibtexDatabaseWriterTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":355,"status":"M"},{"authorDate":"2020-04-30 17:10:13","commitOrder":7,"curCode":"    void roundtripWithUnknownMetaData() throws Exception {\n        Path testBibtexFile = Path.of(\"src/test/resources/testbib/unknownMetaData.bib\");\n        Charset encoding = StandardCharsets.UTF_8;\n        ParserResult result = new BibtexParser(importFormatPreferences, fileMonitor).parse(Importer.getReader(testBibtexFile, encoding));\n\n        when(preferences.getEncoding()).thenReturn(encoding);\n        when(preferences.isSaveInOriginalOrder()).thenReturn(true);\n        BibDatabaseContext context = new BibDatabaseContext(result.getDatabase(), result.getMetaData());\n\n        databaseWriter.savePartOfDatabase(context, result.getDatabase().getEntries());\n        assertEquals(Files.readString(testBibtexFile, encoding), stringWriter.toString());\n    }\n","date":"2020-04-30 17:10:13","endLine":417,"groupId":"7906","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"roundtripWithUnknownMetaData","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/6d/3c6231aef8292248c58fa3085c61dfdef819d0.src","preCode":"    void roundtripWithUnknownMetaData() throws Exception {\n        Path testBibtexFile = Paths.get(\"src/test/resources/testbib/unknownMetaData.bib\");\n        Charset encoding = StandardCharsets.UTF_8;\n        ParserResult result = new BibtexParser(importFormatPreferences, fileMonitor).parse(Importer.getReader(testBibtexFile, encoding));\n\n        when(preferences.getEncoding()).thenReturn(encoding);\n        when(preferences.isSaveInOriginalOrder()).thenReturn(true);\n        BibDatabaseContext context = new BibDatabaseContext(result.getDatabase(), result.getMetaData());\n\n        databaseWriter.savePartOfDatabase(context, result.getDatabase().getEntries());\n        assertEquals(Files.readString(testBibtexFile, encoding), stringWriter.toString());\n    }\n","realPath":"src/test/java/org/jabref/logic/exporter/BibtexDatabaseWriterTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":406,"status":"M"}],"commitId":"862078a4db316cfd15bd77be68d3d2b010feab3b","commitMessage":"@@@Fixes #6357: File directory (#6377)\n\n* Fixes #6357: File directory\n\nBug was introduced in https://github.com/JabRef/jabref/commit/1b03f039aa4abf0812a3a8ae0ba248c08fdb39a3.\n\n* Fix tests\n\n* Replace Paths.get\n\n* Fix code style","date":"2020-04-30 17:10:13","modifiedFileCount":"110","status":"M","submitter":"Tobias Diez"},{"authorTime":"2020-09-01 20:20:10","codes":[{"authorDate":"2020-09-01 20:20:10","commitOrder":8,"curCode":"    void roundtripWithUserComment() throws Exception {\n        Path testBibtexFile = Path.of(\"src/test/resources/testbib/bibWithUserComments.bib\");\n        Charset encoding = StandardCharsets.UTF_8;\n        ParserResult result = new BibtexParser(importFormatPreferences, fileMonitor).parse(Importer.getReader(testBibtexFile, encoding));\n\n        when(preferences.getEncoding()).thenReturn(encoding);\n        when(preferences.shouldSaveInOriginalOrder()).thenReturn(true);\n        BibDatabaseContext context = new BibDatabaseContext(result.getDatabase(), result.getMetaData());\n\n        databaseWriter.savePartOfDatabase(context, result.getDatabase().getEntries());\n        assertEquals(Files.readString(testBibtexFile, encoding), stringWriter.toString());\n    }\n","date":"2020-09-01 20:20:10","endLine":366,"groupId":"10685","id":13,"instanceNumber":1,"isCurCommit":0,"methodName":"roundtripWithUserComment","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/e1/12afedab5ea4eae448baa682d7fbd4b644a23a.src","preCode":"    void roundtripWithUserComment() throws Exception {\n        Path testBibtexFile = Path.of(\"src/test/resources/testbib/bibWithUserComments.bib\");\n        Charset encoding = StandardCharsets.UTF_8;\n        ParserResult result = new BibtexParser(importFormatPreferences, fileMonitor).parse(Importer.getReader(testBibtexFile, encoding));\n\n        when(preferences.getEncoding()).thenReturn(encoding);\n        when(preferences.isSaveInOriginalOrder()).thenReturn(true);\n        BibDatabaseContext context = new BibDatabaseContext(result.getDatabase(), result.getMetaData());\n\n        databaseWriter.savePartOfDatabase(context, result.getDatabase().getEntries());\n        assertEquals(Files.readString(testBibtexFile, encoding), stringWriter.toString());\n    }\n","realPath":"src/test/java/org/jabref/logic/exporter/BibtexDatabaseWriterTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":355,"status":"M"},{"authorDate":"2020-09-01 20:20:10","commitOrder":8,"curCode":"    void roundtripWithUnknownMetaData() throws Exception {\n        Path testBibtexFile = Path.of(\"src/test/resources/testbib/unknownMetaData.bib\");\n        Charset encoding = StandardCharsets.UTF_8;\n        ParserResult result = new BibtexParser(importFormatPreferences, fileMonitor).parse(Importer.getReader(testBibtexFile, encoding));\n\n        when(preferences.getEncoding()).thenReturn(encoding);\n        when(preferences.shouldSaveInOriginalOrder()).thenReturn(true);\n        BibDatabaseContext context = new BibDatabaseContext(result.getDatabase(), result.getMetaData());\n\n        databaseWriter.savePartOfDatabase(context, result.getDatabase().getEntries());\n        assertEquals(Files.readString(testBibtexFile, encoding), stringWriter.toString());\n    }\n","date":"2020-09-01 20:20:10","endLine":417,"groupId":"10685","id":14,"instanceNumber":2,"isCurCommit":0,"methodName":"roundtripWithUnknownMetaData","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/e1/12afedab5ea4eae448baa682d7fbd4b644a23a.src","preCode":"    void roundtripWithUnknownMetaData() throws Exception {\n        Path testBibtexFile = Path.of(\"src/test/resources/testbib/unknownMetaData.bib\");\n        Charset encoding = StandardCharsets.UTF_8;\n        ParserResult result = new BibtexParser(importFormatPreferences, fileMonitor).parse(Importer.getReader(testBibtexFile, encoding));\n\n        when(preferences.getEncoding()).thenReturn(encoding);\n        when(preferences.isSaveInOriginalOrder()).thenReturn(true);\n        BibDatabaseContext context = new BibDatabaseContext(result.getDatabase(), result.getMetaData());\n\n        databaseWriter.savePartOfDatabase(context, result.getDatabase().getEntries());\n        assertEquals(Files.readString(testBibtexFile, encoding), stringWriter.toString());\n    }\n","realPath":"src/test/java/org/jabref/logic/exporter/BibtexDatabaseWriterTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":406,"status":"M"}],"commitId":"5ab494e8b1732f688d4ed8d696740bc7e8ef4101","commitMessage":"@@@Refactor file preferences (#6779)\n\n* Refactored for same basic clean-up and naming consistency\n\n* Refactored for more clean-ups and naming consistency\n\n* Refactored and extended AutoLinkPreferences\n\n* Refactored FilePreferences to immutable class\n\n* Refactored two preferences from AutoLinkPreferences to FilePreferences\n\n* Moved import linked file patterns preferences to FilePreferencesTab\n\n* Extended FilePreferences and refactored FileTab to use it\n\n* Checkstyle\n\n* Fixed merge error\n\n* Moved import-export preferences to exportSortingTab and renamed the tab\n\n* Renamed FileTab to LinkedFilesTab\n\n* Refactored ImportExportTab to PreferencesService\n\n* CHANGELOG.md\n\n* Rewording ImportExport to File\n\n* Make FilePreferences and SavePreferences mutable.  added ADR\n","date":"2020-09-01 20:20:10","modifiedFileCount":"28","status":"M","submitter":"Carl Christian Snethlage"}]
