[{"authorTime":"2017-03-16 22:35:07","codes":[{"authorDate":"2017-03-16 22:35:07","commitOrder":1,"curCode":"    public static List<SearchBasedFetcher> getSearchBasedFetchers(ImportFormatPreferences importFormatPreferences) {\n        ArrayList<SearchBasedFetcher> list = new ArrayList<>();\n        list.add(new ArXiv(importFormatPreferences));\n        list.add(new GvkFetcher());\n        list.add(new MedlineFetcher());\n        list.add(new AstrophysicsDataSystem(importFormatPreferences));\n        list.add(new MathSciNet(importFormatPreferences));\n        list.add(new zbMATH(importFormatPreferences));\n        list.add(new GoogleScholar(importFormatPreferences));\n        list.add(new DBLPFetcher(importFormatPreferences));\n        list.add(new CrossRef());\n        list.sort(Comparator.comparing(WebFetcher::getName));\n        return list;\n    }\n","date":"2017-03-16 22:35:07","endLine":66,"groupId":"8266","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"getSearchBasedFetchers","params":"(ImportFormatPreferencesimportFormatPreferences)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/44/b789e86e24d5476fb51183549a1bd5759241aa.src","preCode":"    public static List<SearchBasedFetcher> getSearchBasedFetchers(ImportFormatPreferences importFormatPreferences) {\n        ArrayList<SearchBasedFetcher> list = new ArrayList<>();\n        list.add(new ArXiv(importFormatPreferences));\n        list.add(new GvkFetcher());\n        list.add(new MedlineFetcher());\n        list.add(new AstrophysicsDataSystem(importFormatPreferences));\n        list.add(new MathSciNet(importFormatPreferences));\n        list.add(new zbMATH(importFormatPreferences));\n        list.add(new GoogleScholar(importFormatPreferences));\n        list.add(new DBLPFetcher(importFormatPreferences));\n        list.add(new CrossRef());\n        list.sort(Comparator.comparing(WebFetcher::getName));\n        return list;\n    }\n","realPath":"src/main/java/org/jabref/logic/importer/WebFetchers.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":53,"status":"B"},{"authorDate":"2017-03-16 22:35:07","commitOrder":1,"curCode":"    public static List<IdBasedFetcher> getIdBasedFetchers(ImportFormatPreferences importFormatPreferences) {\n        ArrayList<IdBasedFetcher> list = new ArrayList<>();\n        list.add(new ArXiv(importFormatPreferences));\n        list.add(new AstrophysicsDataSystem(importFormatPreferences));\n        list.add(new IsbnFetcher(importFormatPreferences));\n        list.add(new DiVA(importFormatPreferences));\n        list.add(new DoiFetcher(importFormatPreferences));\n        list.add(new MedlineFetcher());\n        list.add(new TitleFetcher(importFormatPreferences));\n        list.add(new MathSciNet(importFormatPreferences));\n        list.add(new CrossRef());\n        list.sort(Comparator.comparing(WebFetcher::getName));\n        return list;\n    }\n","date":"2017-03-16 22:35:07","endLine":81,"groupId":"12834","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"getIdBasedFetchers","params":"(ImportFormatPreferencesimportFormatPreferences)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/44/b789e86e24d5476fb51183549a1bd5759241aa.src","preCode":"    public static List<IdBasedFetcher> getIdBasedFetchers(ImportFormatPreferences importFormatPreferences) {\n        ArrayList<IdBasedFetcher> list = new ArrayList<>();\n        list.add(new ArXiv(importFormatPreferences));\n        list.add(new AstrophysicsDataSystem(importFormatPreferences));\n        list.add(new IsbnFetcher(importFormatPreferences));\n        list.add(new DiVA(importFormatPreferences));\n        list.add(new DoiFetcher(importFormatPreferences));\n        list.add(new MedlineFetcher());\n        list.add(new TitleFetcher(importFormatPreferences));\n        list.add(new MathSciNet(importFormatPreferences));\n        list.add(new CrossRef());\n        list.sort(Comparator.comparing(WebFetcher::getName));\n        return list;\n    }\n","realPath":"src/main/java/org/jabref/logic/importer/WebFetchers.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":68,"status":"B"}],"commitId":"d8f1d69823072562e362dcad144108473b475ee0","commitMessage":"@@@Fix #2455: Add crossref as fetcher for everything (ID-.  entry-.  search-based) (#2645)\n\n* Apply some post actions before displaying the file\n\n* Add changes in JabRefGUI\n\n* Add changelog entry\n\n* Refactor DOI fetcher\n\n* Move logic.identifier to model.entry.identifier\n\n* Move ArXiv identifier to model.entry.identifier\n\n* Do it\n\n* Add CrossRef as entry.  search and id based fetcher\n\n* Move a few fetcher related things from gui to logic\n\n* Move MathSciNetId to identifier\n","date":"2017-03-16 22:35:07","modifiedFileCount":"35","status":"B","submitter":"Tobias Diez"},{"authorTime":"2017-05-24 22:05:11","codes":[{"authorDate":"2017-03-16 22:35:07","commitOrder":2,"curCode":"    public static List<SearchBasedFetcher> getSearchBasedFetchers(ImportFormatPreferences importFormatPreferences) {\n        ArrayList<SearchBasedFetcher> list = new ArrayList<>();\n        list.add(new ArXiv(importFormatPreferences));\n        list.add(new GvkFetcher());\n        list.add(new MedlineFetcher());\n        list.add(new AstrophysicsDataSystem(importFormatPreferences));\n        list.add(new MathSciNet(importFormatPreferences));\n        list.add(new zbMATH(importFormatPreferences));\n        list.add(new GoogleScholar(importFormatPreferences));\n        list.add(new DBLPFetcher(importFormatPreferences));\n        list.add(new CrossRef());\n        list.sort(Comparator.comparing(WebFetcher::getName));\n        return list;\n    }\n","date":"2017-03-16 22:35:07","endLine":66,"groupId":"8266","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"getSearchBasedFetchers","params":"(ImportFormatPreferencesimportFormatPreferences)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/44/b789e86e24d5476fb51183549a1bd5759241aa.src","preCode":"    public static List<SearchBasedFetcher> getSearchBasedFetchers(ImportFormatPreferences importFormatPreferences) {\n        ArrayList<SearchBasedFetcher> list = new ArrayList<>();\n        list.add(new ArXiv(importFormatPreferences));\n        list.add(new GvkFetcher());\n        list.add(new MedlineFetcher());\n        list.add(new AstrophysicsDataSystem(importFormatPreferences));\n        list.add(new MathSciNet(importFormatPreferences));\n        list.add(new zbMATH(importFormatPreferences));\n        list.add(new GoogleScholar(importFormatPreferences));\n        list.add(new DBLPFetcher(importFormatPreferences));\n        list.add(new CrossRef());\n        list.sort(Comparator.comparing(WebFetcher::getName));\n        return list;\n    }\n","realPath":"src/main/java/org/jabref/logic/importer/WebFetchers.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":53,"status":"N"},{"authorDate":"2017-05-24 22:05:11","commitOrder":2,"curCode":"    public static List<IdBasedFetcher> getIdBasedFetchers(ImportFormatPreferences importFormatPreferences) {\n        ArrayList<IdBasedFetcher> list = new ArrayList<>();\n        list.add(new ArXiv(importFormatPreferences));\n        list.add(new AstrophysicsDataSystem(importFormatPreferences));\n        list.add(new IsbnFetcher(importFormatPreferences));\n        list.add(new DiVA(importFormatPreferences));\n        list.add(new DoiFetcher(importFormatPreferences));\n        list.add(new MedlineFetcher());\n        list.add(new TitleFetcher(importFormatPreferences));\n        list.add(new MathSciNet(importFormatPreferences));\n        list.add(new CrossRef());\n        list.add(new LibraryOfCongress());\n        list.sort(Comparator.comparing(WebFetcher::getName));\n        return list;\n    }\n","date":"2017-05-24 22:05:11","endLine":95,"groupId":"12834","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"getIdBasedFetchers","params":"(ImportFormatPreferencesimportFormatPreferences)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/62/8ebb419530c7e2e8d4b8ba0d678caf989bc972.src","preCode":"    public static List<IdBasedFetcher> getIdBasedFetchers(ImportFormatPreferences importFormatPreferences) {\n        ArrayList<IdBasedFetcher> list = new ArrayList<>();\n        list.add(new ArXiv(importFormatPreferences));\n        list.add(new AstrophysicsDataSystem(importFormatPreferences));\n        list.add(new IsbnFetcher(importFormatPreferences));\n        list.add(new DiVA(importFormatPreferences));\n        list.add(new DoiFetcher(importFormatPreferences));\n        list.add(new MedlineFetcher());\n        list.add(new TitleFetcher(importFormatPreferences));\n        list.add(new MathSciNet(importFormatPreferences));\n        list.add(new CrossRef());\n        list.sort(Comparator.comparing(WebFetcher::getName));\n        return list;\n    }\n","realPath":"src/main/java/org/jabref/logic/importer/WebFetchers.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":81,"status":"M"}],"commitId":"bdac5e892d24f6835317d64052b4d90ebd4b354e","commitMessage":"@@@Add Library of Congress as ID-fetcher (#2865)\n\n* Add Library of Congress as ID-fetcher\n\n* Update LibraryOfCongress.java\n\n* Update LibraryOfCongressTest.java\n","date":"2017-05-24 22:05:11","modifiedFileCount":"2","status":"M","submitter":"Tobias Diez"},{"authorTime":"2017-12-13 22:41:30","codes":[{"authorDate":"2017-03-16 22:35:07","commitOrder":3,"curCode":"    public static List<SearchBasedFetcher> getSearchBasedFetchers(ImportFormatPreferences importFormatPreferences) {\n        ArrayList<SearchBasedFetcher> list = new ArrayList<>();\n        list.add(new ArXiv(importFormatPreferences));\n        list.add(new GvkFetcher());\n        list.add(new MedlineFetcher());\n        list.add(new AstrophysicsDataSystem(importFormatPreferences));\n        list.add(new MathSciNet(importFormatPreferences));\n        list.add(new zbMATH(importFormatPreferences));\n        list.add(new GoogleScholar(importFormatPreferences));\n        list.add(new DBLPFetcher(importFormatPreferences));\n        list.add(new CrossRef());\n        list.sort(Comparator.comparing(WebFetcher::getName));\n        return list;\n    }\n","date":"2017-03-16 22:35:07","endLine":66,"groupId":"8266","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"getSearchBasedFetchers","params":"(ImportFormatPreferencesimportFormatPreferences)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/44/b789e86e24d5476fb51183549a1bd5759241aa.src","preCode":"    public static List<SearchBasedFetcher> getSearchBasedFetchers(ImportFormatPreferences importFormatPreferences) {\n        ArrayList<SearchBasedFetcher> list = new ArrayList<>();\n        list.add(new ArXiv(importFormatPreferences));\n        list.add(new GvkFetcher());\n        list.add(new MedlineFetcher());\n        list.add(new AstrophysicsDataSystem(importFormatPreferences));\n        list.add(new MathSciNet(importFormatPreferences));\n        list.add(new zbMATH(importFormatPreferences));\n        list.add(new GoogleScholar(importFormatPreferences));\n        list.add(new DBLPFetcher(importFormatPreferences));\n        list.add(new CrossRef());\n        list.sort(Comparator.comparing(WebFetcher::getName));\n        return list;\n    }\n","realPath":"src/main/java/org/jabref/logic/importer/WebFetchers.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":53,"status":"N"},{"authorDate":"2017-12-13 22:41:30","commitOrder":3,"curCode":"    public static List<IdBasedFetcher> getIdBasedFetchers(ImportFormatPreferences importFormatPreferences) {\n        ArrayList<IdBasedFetcher> list = new ArrayList<>();\n        list.add(new ArXiv(importFormatPreferences));\n        list.add(new AstrophysicsDataSystem(importFormatPreferences));\n        list.add(new IsbnFetcher(importFormatPreferences));\n        list.add(new DiVA(importFormatPreferences));\n        list.add(new DoiFetcher(importFormatPreferences));\n        list.add(new MedlineFetcher());\n        list.add(new TitleFetcher(importFormatPreferences));\n        list.add(new MathSciNet(importFormatPreferences));\n        list.add(new CrossRef());\n        list.add(new LibraryOfCongress());\n        list.add(new IacrEprintFetcher(importFormatPreferences));\n        list.sort(Comparator.comparing(WebFetcher::getName));\n        return list;\n    }\n","date":"2017-12-13 22:41:30","endLine":97,"groupId":"12834","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"getIdBasedFetchers","params":"(ImportFormatPreferencesimportFormatPreferences)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/de/2ec910a0d65a2c88744487ec0ed7f8359cb5fe.src","preCode":"    public static List<IdBasedFetcher> getIdBasedFetchers(ImportFormatPreferences importFormatPreferences) {\n        ArrayList<IdBasedFetcher> list = new ArrayList<>();\n        list.add(new ArXiv(importFormatPreferences));\n        list.add(new AstrophysicsDataSystem(importFormatPreferences));\n        list.add(new IsbnFetcher(importFormatPreferences));\n        list.add(new DiVA(importFormatPreferences));\n        list.add(new DoiFetcher(importFormatPreferences));\n        list.add(new MedlineFetcher());\n        list.add(new TitleFetcher(importFormatPreferences));\n        list.add(new MathSciNet(importFormatPreferences));\n        list.add(new CrossRef());\n        list.add(new LibraryOfCongress());\n        list.sort(Comparator.comparing(WebFetcher::getName));\n        return list;\n    }\n","realPath":"src/main/java/org/jabref/logic/importer/WebFetchers.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":82,"status":"M"}],"commitId":"c2d007032f91a8285049749ffdf254e773e3a5c1","commitMessage":"@@@Fetcher for IACR eprints (#3473)\n\n* Add an initial WIP version of an IACR eprint fetcher\n\nNote: This is WIP.  the fetcher kind of worked in a few ad-hoc tests. \nbut it certainly isn't ready for production yet!\n\n* Refactor IACR fetcher and improve error handling\n\n* Localize error messages in IACR fetcher\n\n* Refactoring of IACR fetcher\n\n* More refactoring of IACR fetcher\n\nBy moving all the \"what is the content of field xy?\" logic to methods. \nthe setAdditionalFields method gives a good overview over which fields\nare set.\n\n* Fix the download encoding - doesn't fit library encoding though\n\nThe problem is that the matching of strings (find abstract.  ... in the HTML)\nis done against strings in the source code - therefore they are encoded with\nthe source code encoding.\nThe downloaded HTML however should be encoded with whatever the user selected\nfor her library. But then.  the matching fails.\nSo this needs further investigation.\n\n* Add tests for IACR fetcher\n\n* Make checkstyle happy\n\n* Add IACR fetcher to changelog\n\n* Fix the encoding of entries retrieved via IACR fetcher\n\n* Migrate IACR fetcher tests to junit5\n\n* Use enum constant for IACR fetcher import encoding\n\n* Fix a bug in the IACR fetcher tests\n\n* Migrate IACR fetcher to java8 date classes\n\n* Remove abstracts from IACR fetcher tests\n\nAs pointed out by @Siedlerchr in #3473.  the abstracts might\nbe a copyright problem.\n\n* Fix the IACR fetcher for entries created before year 2000\n\nThe entries before year 2000 use a slightly different format which e.g. doesn't\ninclude a version.  also the date format is different.\n\nWith this commit.  we also throw an error if the user tries to fetch an entry\nfor a withdrawn paper. This is meant as a warning to the user.  she might still\nadd the entry manually to her database.\nThis will be especially useful once a \"search by title\" or something similar\ngets implemented.\n\n* Make the localization strings in the IACR fetcher reusable\n\nAlso: Remove some of them completly.  replacing them with slightly\ndifferent existing ones.\n\n* Disable a long running test for the IACR fetcher\n\n* Fix codacy issues in the IACR eprint fetcher\n\ncodacy complained about reassigning a method parameter\nand about the visibility of a test method.\n\n* Merge localization files with master\n\n* Fix duplicate keys in localization files\n","date":"2017-12-13 22:41:30","modifiedFileCount":"1","status":"M","submitter":"Tim W?rtele"},{"authorTime":"2017-12-13 22:41:30","codes":[{"authorDate":"2018-03-30 04:28:01","commitOrder":4,"curCode":"    public static List<SearchBasedFetcher> getSearchBasedFetchers(ImportFormatPreferences importFormatPreferences) {\n        ArrayList<SearchBasedFetcher> list = new ArrayList<>();\n        list.add(new ArXiv(importFormatPreferences));\n        list.add(new GvkFetcher());\n        list.add(new MedlineFetcher());\n        list.add(new AstrophysicsDataSystem(importFormatPreferences));\n        list.add(new MathSciNet(importFormatPreferences));\n        list.add(new ZbMATH(importFormatPreferences));\n        list.add(new GoogleScholar(importFormatPreferences));\n        list.add(new DBLPFetcher(importFormatPreferences));\n        list.add(new CrossRef());\n        list.sort(Comparator.comparing(WebFetcher::getName));\n        return list;\n    }\n","date":"2018-03-30 04:28:01","endLine":86,"groupId":"8266","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"getSearchBasedFetchers","params":"(ImportFormatPreferencesimportFormatPreferences)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/2e/61288b49450dccd25cc8da648d6dcc71f2060e.src","preCode":"    public static List<SearchBasedFetcher> getSearchBasedFetchers(ImportFormatPreferences importFormatPreferences) {\n        ArrayList<SearchBasedFetcher> list = new ArrayList<>();\n        list.add(new ArXiv(importFormatPreferences));\n        list.add(new GvkFetcher());\n        list.add(new MedlineFetcher());\n        list.add(new AstrophysicsDataSystem(importFormatPreferences));\n        list.add(new MathSciNet(importFormatPreferences));\n        list.add(new zbMATH(importFormatPreferences));\n        list.add(new GoogleScholar(importFormatPreferences));\n        list.add(new DBLPFetcher(importFormatPreferences));\n        list.add(new CrossRef());\n        list.sort(Comparator.comparing(WebFetcher::getName));\n        return list;\n    }\n","realPath":"src/main/java/org/jabref/logic/importer/WebFetchers.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":73,"status":"M"},{"authorDate":"2017-12-13 22:41:30","commitOrder":4,"curCode":"    public static List<IdBasedFetcher> getIdBasedFetchers(ImportFormatPreferences importFormatPreferences) {\n        ArrayList<IdBasedFetcher> list = new ArrayList<>();\n        list.add(new ArXiv(importFormatPreferences));\n        list.add(new AstrophysicsDataSystem(importFormatPreferences));\n        list.add(new IsbnFetcher(importFormatPreferences));\n        list.add(new DiVA(importFormatPreferences));\n        list.add(new DoiFetcher(importFormatPreferences));\n        list.add(new MedlineFetcher());\n        list.add(new TitleFetcher(importFormatPreferences));\n        list.add(new MathSciNet(importFormatPreferences));\n        list.add(new CrossRef());\n        list.add(new LibraryOfCongress());\n        list.add(new IacrEprintFetcher(importFormatPreferences));\n        list.sort(Comparator.comparing(WebFetcher::getName));\n        return list;\n    }\n","date":"2017-12-13 22:41:30","endLine":97,"groupId":"12834","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"getIdBasedFetchers","params":"(ImportFormatPreferencesimportFormatPreferences)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/de/2ec910a0d65a2c88744487ec0ed7f8359cb5fe.src","preCode":"    public static List<IdBasedFetcher> getIdBasedFetchers(ImportFormatPreferences importFormatPreferences) {\n        ArrayList<IdBasedFetcher> list = new ArrayList<>();\n        list.add(new ArXiv(importFormatPreferences));\n        list.add(new AstrophysicsDataSystem(importFormatPreferences));\n        list.add(new IsbnFetcher(importFormatPreferences));\n        list.add(new DiVA(importFormatPreferences));\n        list.add(new DoiFetcher(importFormatPreferences));\n        list.add(new MedlineFetcher());\n        list.add(new TitleFetcher(importFormatPreferences));\n        list.add(new MathSciNet(importFormatPreferences));\n        list.add(new CrossRef());\n        list.add(new LibraryOfCongress());\n        list.add(new IacrEprintFetcher(importFormatPreferences));\n        list.sort(Comparator.comparing(WebFetcher::getName));\n        return list;\n    }\n","realPath":"src/main/java/org/jabref/logic/importer/WebFetchers.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":82,"status":"N"}],"commitId":"63cfb4a26571dc338be6f59e7e3a80229db9b3ed","commitMessage":"@@@Merge pull request #3899 from JabRef/code-style\n\nCode style issues","date":"2018-03-30 04:28:01","modifiedFileCount":"10","status":"M","submitter":"Stefan Kolb"},{"authorTime":"2018-04-16 15:29:50","codes":[{"authorDate":"2018-03-30 04:28:01","commitOrder":5,"curCode":"    public static List<SearchBasedFetcher> getSearchBasedFetchers(ImportFormatPreferences importFormatPreferences) {\n        ArrayList<SearchBasedFetcher> list = new ArrayList<>();\n        list.add(new ArXiv(importFormatPreferences));\n        list.add(new GvkFetcher());\n        list.add(new MedlineFetcher());\n        list.add(new AstrophysicsDataSystem(importFormatPreferences));\n        list.add(new MathSciNet(importFormatPreferences));\n        list.add(new ZbMATH(importFormatPreferences));\n        list.add(new GoogleScholar(importFormatPreferences));\n        list.add(new DBLPFetcher(importFormatPreferences));\n        list.add(new CrossRef());\n        list.sort(Comparator.comparing(WebFetcher::getName));\n        return list;\n    }\n","date":"2018-03-30 04:28:01","endLine":86,"groupId":"8266","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"getSearchBasedFetchers","params":"(ImportFormatPreferencesimportFormatPreferences)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/2e/61288b49450dccd25cc8da648d6dcc71f2060e.src","preCode":"    public static List<SearchBasedFetcher> getSearchBasedFetchers(ImportFormatPreferences importFormatPreferences) {\n        ArrayList<SearchBasedFetcher> list = new ArrayList<>();\n        list.add(new ArXiv(importFormatPreferences));\n        list.add(new GvkFetcher());\n        list.add(new MedlineFetcher());\n        list.add(new AstrophysicsDataSystem(importFormatPreferences));\n        list.add(new MathSciNet(importFormatPreferences));\n        list.add(new ZbMATH(importFormatPreferences));\n        list.add(new GoogleScholar(importFormatPreferences));\n        list.add(new DBLPFetcher(importFormatPreferences));\n        list.add(new CrossRef());\n        list.sort(Comparator.comparing(WebFetcher::getName));\n        return list;\n    }\n","realPath":"src/main/java/org/jabref/logic/importer/WebFetchers.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":73,"status":"N"},{"authorDate":"2018-04-16 15:29:50","commitOrder":5,"curCode":"    public static List<IdBasedFetcher> getIdBasedFetchers(ImportFormatPreferences importFormatPreferences) {\n        ArrayList<IdBasedFetcher> list = new ArrayList<>();\n        list.add(new ArXiv(importFormatPreferences));\n        list.add(new AstrophysicsDataSystem(importFormatPreferences));\n        list.add(new IsbnFetcher(importFormatPreferences));\n        list.add(new DiVA(importFormatPreferences));\n        list.add(new DoiFetcher(importFormatPreferences));\n        list.add(new MedlineFetcher());\n        list.add(new TitleFetcher(importFormatPreferences));\n        list.add(new MathSciNet(importFormatPreferences));\n        list.add(new CrossRef());\n        list.add(new LibraryOfCongress(importFormatPreferences));\n        list.add(new IacrEprintFetcher(importFormatPreferences));\n        list.sort(Comparator.comparing(WebFetcher::getName));\n        return list;\n    }\n","date":"2018-04-16 15:29:50","endLine":103,"groupId":"12834","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"getIdBasedFetchers","params":"(ImportFormatPreferencesimportFormatPreferences)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/89/1c2493cdd2cd18e27793931096e11b79884021.src","preCode":"    public static List<IdBasedFetcher> getIdBasedFetchers(ImportFormatPreferences importFormatPreferences) {\n        ArrayList<IdBasedFetcher> list = new ArrayList<>();\n        list.add(new ArXiv(importFormatPreferences));\n        list.add(new AstrophysicsDataSystem(importFormatPreferences));\n        list.add(new IsbnFetcher(importFormatPreferences));\n        list.add(new DiVA(importFormatPreferences));\n        list.add(new DoiFetcher(importFormatPreferences));\n        list.add(new MedlineFetcher());\n        list.add(new TitleFetcher(importFormatPreferences));\n        list.add(new MathSciNet(importFormatPreferences));\n        list.add(new CrossRef());\n        list.add(new LibraryOfCongress());\n        list.add(new IacrEprintFetcher(importFormatPreferences));\n        list.sort(Comparator.comparing(WebFetcher::getName));\n        return list;\n    }\n","realPath":"src/main/java/org/jabref/logic/importer/WebFetchers.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":88,"status":"M"}],"commitId":"adc2e412567e32381d1809274fb5877e7619a03a","commitMessage":"@@@Prepare multi module build (#3913)\n\nPrepare multi module build","date":"2018-04-16 15:29:50","modifiedFileCount":"35","status":"M","submitter":"Oliver Kopp"},{"authorTime":"2018-04-29 20:17:24","codes":[{"authorDate":"2018-03-30 04:28:01","commitOrder":6,"curCode":"    public static List<SearchBasedFetcher> getSearchBasedFetchers(ImportFormatPreferences importFormatPreferences) {\n        ArrayList<SearchBasedFetcher> list = new ArrayList<>();\n        list.add(new ArXiv(importFormatPreferences));\n        list.add(new GvkFetcher());\n        list.add(new MedlineFetcher());\n        list.add(new AstrophysicsDataSystem(importFormatPreferences));\n        list.add(new MathSciNet(importFormatPreferences));\n        list.add(new ZbMATH(importFormatPreferences));\n        list.add(new GoogleScholar(importFormatPreferences));\n        list.add(new DBLPFetcher(importFormatPreferences));\n        list.add(new CrossRef());\n        list.sort(Comparator.comparing(WebFetcher::getName));\n        return list;\n    }\n","date":"2018-03-30 04:28:01","endLine":86,"groupId":"8266","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"getSearchBasedFetchers","params":"(ImportFormatPreferencesimportFormatPreferences)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/2e/61288b49450dccd25cc8da648d6dcc71f2060e.src","preCode":"    public static List<SearchBasedFetcher> getSearchBasedFetchers(ImportFormatPreferences importFormatPreferences) {\n        ArrayList<SearchBasedFetcher> list = new ArrayList<>();\n        list.add(new ArXiv(importFormatPreferences));\n        list.add(new GvkFetcher());\n        list.add(new MedlineFetcher());\n        list.add(new AstrophysicsDataSystem(importFormatPreferences));\n        list.add(new MathSciNet(importFormatPreferences));\n        list.add(new ZbMATH(importFormatPreferences));\n        list.add(new GoogleScholar(importFormatPreferences));\n        list.add(new DBLPFetcher(importFormatPreferences));\n        list.add(new CrossRef());\n        list.sort(Comparator.comparing(WebFetcher::getName));\n        return list;\n    }\n","realPath":"src/main/java/org/jabref/logic/importer/WebFetchers.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":73,"status":"N"},{"authorDate":"2018-04-29 20:17:24","commitOrder":6,"curCode":"    public static List<IdBasedFetcher> getIdBasedFetchers(ImportFormatPreferences importFormatPreferences) {\n        ArrayList<IdBasedFetcher> list = new ArrayList<>();\n        list.add(new ArXiv(importFormatPreferences));\n        list.add(new AstrophysicsDataSystem(importFormatPreferences));\n        list.add(new IsbnFetcher(importFormatPreferences));\n        list.add(new DiVA(importFormatPreferences));\n        list.add(new DoiFetcher(importFormatPreferences));\n        list.add(new MedlineFetcher());\n        list.add(new TitleFetcher(importFormatPreferences));\n        list.add(new MathSciNet(importFormatPreferences));\n        list.add(new CrossRef());\n        list.add(new LibraryOfCongress(importFormatPreferences));\n        list.add(new IacrEprintFetcher(importFormatPreferences));\n        list.add(new RfcFetcher(importFormatPreferences));\n        list.sort(Comparator.comparing(WebFetcher::getName));\n        return list;\n    }\n","date":"2018-04-29 20:17:24","endLine":105,"groupId":"12834","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"getIdBasedFetchers","params":"(ImportFormatPreferencesimportFormatPreferences)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/7f/cb289220c1fe7ee78425325ae52ce2f25e7b4a.src","preCode":"    public static List<IdBasedFetcher> getIdBasedFetchers(ImportFormatPreferences importFormatPreferences) {\n        ArrayList<IdBasedFetcher> list = new ArrayList<>();\n        list.add(new ArXiv(importFormatPreferences));\n        list.add(new AstrophysicsDataSystem(importFormatPreferences));\n        list.add(new IsbnFetcher(importFormatPreferences));\n        list.add(new DiVA(importFormatPreferences));\n        list.add(new DoiFetcher(importFormatPreferences));\n        list.add(new MedlineFetcher());\n        list.add(new TitleFetcher(importFormatPreferences));\n        list.add(new MathSciNet(importFormatPreferences));\n        list.add(new CrossRef());\n        list.add(new LibraryOfCongress(importFormatPreferences));\n        list.add(new IacrEprintFetcher(importFormatPreferences));\n        list.sort(Comparator.comparing(WebFetcher::getName));\n        return list;\n    }\n","realPath":"src/main/java/org/jabref/logic/importer/WebFetchers.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":89,"status":"M"}],"commitId":"27621bbff8c9b2ecff4dc2566ed4e18fad92be1a","commitMessage":"@@@Merge branch 'jacksonrya-rfc-id-fetcher'\n","date":"2018-04-29 20:17:24","modifiedFileCount":"2","status":"M","submitter":"Stefan Kolb"},{"authorTime":"2018-04-29 20:17:24","codes":[{"authorDate":"2018-07-13 18:23:05","commitOrder":7,"curCode":"    public static List<SearchBasedFetcher> getSearchBasedFetchers(ImportFormatPreferences importFormatPreferences) {\n        ArrayList<SearchBasedFetcher> list = new ArrayList<>();\n        list.add(new ArXiv(importFormatPreferences));\n        list.add(new INSPIREFetcher(importFormatPreferences));\n        list.add(new GvkFetcher());\n        list.add(new MedlineFetcher());\n        list.add(new AstrophysicsDataSystem(importFormatPreferences));\n        list.add(new MathSciNet(importFormatPreferences));\n        list.add(new ZbMATH(importFormatPreferences));\n        list.add(new ACMPortalFetcher(importFormatPreferences));\n        list.add(new GoogleScholar(importFormatPreferences));\n        list.add(new DBLPFetcher(importFormatPreferences));\n        list.add(new SpringerFetcher());\n        list.add(new CrossRef());\n        list.add(new CiteSeer());\n        list.add(new DOAJFetcher(importFormatPreferences));\n        list.add(new IEEE(importFormatPreferences));\n        list.sort(Comparator.comparing(WebFetcher::getName));\n        return list;\n    }\n","date":"2018-07-13 18:23:05","endLine":98,"groupId":"8266","id":13,"instanceNumber":1,"isCurCommit":0,"methodName":"getSearchBasedFetchers","params":"(ImportFormatPreferencesimportFormatPreferences)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/33/29a6215f280fd9fcc5bbee5524d3331c4c20bf.src","preCode":"    public static List<SearchBasedFetcher> getSearchBasedFetchers(ImportFormatPreferences importFormatPreferences) {\n        ArrayList<SearchBasedFetcher> list = new ArrayList<>();\n        list.add(new ArXiv(importFormatPreferences));\n        list.add(new GvkFetcher());\n        list.add(new MedlineFetcher());\n        list.add(new AstrophysicsDataSystem(importFormatPreferences));\n        list.add(new MathSciNet(importFormatPreferences));\n        list.add(new ZbMATH(importFormatPreferences));\n        list.add(new GoogleScholar(importFormatPreferences));\n        list.add(new DBLPFetcher(importFormatPreferences));\n        list.add(new CrossRef());\n        list.sort(Comparator.comparing(WebFetcher::getName));\n        return list;\n    }\n","realPath":"src/main/java/org/jabref/logic/importer/WebFetchers.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":79,"status":"M"},{"authorDate":"2018-04-29 20:17:24","commitOrder":7,"curCode":"    public static List<IdBasedFetcher> getIdBasedFetchers(ImportFormatPreferences importFormatPreferences) {\n        ArrayList<IdBasedFetcher> list = new ArrayList<>();\n        list.add(new ArXiv(importFormatPreferences));\n        list.add(new AstrophysicsDataSystem(importFormatPreferences));\n        list.add(new IsbnFetcher(importFormatPreferences));\n        list.add(new DiVA(importFormatPreferences));\n        list.add(new DoiFetcher(importFormatPreferences));\n        list.add(new MedlineFetcher());\n        list.add(new TitleFetcher(importFormatPreferences));\n        list.add(new MathSciNet(importFormatPreferences));\n        list.add(new CrossRef());\n        list.add(new LibraryOfCongress(importFormatPreferences));\n        list.add(new IacrEprintFetcher(importFormatPreferences));\n        list.add(new RfcFetcher(importFormatPreferences));\n        list.sort(Comparator.comparing(WebFetcher::getName));\n        return list;\n    }\n","date":"2018-04-29 20:17:24","endLine":105,"groupId":"12834","id":14,"instanceNumber":2,"isCurCommit":0,"methodName":"getIdBasedFetchers","params":"(ImportFormatPreferencesimportFormatPreferences)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/7f/cb289220c1fe7ee78425325ae52ce2f25e7b4a.src","preCode":"    public static List<IdBasedFetcher> getIdBasedFetchers(ImportFormatPreferences importFormatPreferences) {\n        ArrayList<IdBasedFetcher> list = new ArrayList<>();\n        list.add(new ArXiv(importFormatPreferences));\n        list.add(new AstrophysicsDataSystem(importFormatPreferences));\n        list.add(new IsbnFetcher(importFormatPreferences));\n        list.add(new DiVA(importFormatPreferences));\n        list.add(new DoiFetcher(importFormatPreferences));\n        list.add(new MedlineFetcher());\n        list.add(new TitleFetcher(importFormatPreferences));\n        list.add(new MathSciNet(importFormatPreferences));\n        list.add(new CrossRef());\n        list.add(new LibraryOfCongress(importFormatPreferences));\n        list.add(new IacrEprintFetcher(importFormatPreferences));\n        list.add(new RfcFetcher(importFormatPreferences));\n        list.sort(Comparator.comparing(WebFetcher::getName));\n        return list;\n    }\n","realPath":"src/main/java/org/jabref/logic/importer/WebFetchers.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":89,"status":"N"}],"commitId":"b56368c44da949722d6df1ea66f7d71653c67a97","commitMessage":"@@@Merge branch 'master' of https://github.com/JabRef/jabref\n","date":"2018-07-13 18:23:05","modifiedFileCount":"71","status":"M","submitter":"Tobias Diez"},{"authorTime":"2019-10-18 06:04:11","codes":[{"authorDate":"2019-10-18 06:04:11","commitOrder":8,"curCode":"    public static SortedList<SearchBasedFetcher> getSearchBasedFetchers(ImportFormatPreferences importFormatPreferences) {\n        ArrayList<SearchBasedFetcher> list = new ArrayList<>();\n        list.add(new ArXiv(importFormatPreferences));\n        list.add(new INSPIREFetcher(importFormatPreferences));\n        list.add(new GvkFetcher());\n        list.add(new MedlineFetcher());\n        list.add(new AstrophysicsDataSystem(importFormatPreferences));\n        list.add(new MathSciNet(importFormatPreferences));\n        list.add(new ZbMATH(importFormatPreferences));\n        list.add(new ACMPortalFetcher(importFormatPreferences));\n        list.add(new GoogleScholar(importFormatPreferences));\n        list.add(new DBLPFetcher(importFormatPreferences));\n        list.add(new SpringerFetcher());\n        list.add(new CrossRef());\n        list.add(new CiteSeer());\n        list.add(new DOAJFetcher(importFormatPreferences));\n        list.add(new IEEE(importFormatPreferences));\n\n        ObservableList<SearchBasedFetcher> observableList = FXCollections.observableList(list);\n        return new SortedList<>(observableList, Comparator.comparing(WebFetcher::getName));\n    }\n","date":"2019-10-18 06:04:11","endLine":106,"groupId":"8266","id":15,"instanceNumber":1,"isCurCommit":0,"methodName":"getSearchBasedFetchers","params":"(ImportFormatPreferencesimportFormatPreferences)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/85/f0feca7c37efbc226113915b914d7d2a106453.src","preCode":"    public static List<SearchBasedFetcher> getSearchBasedFetchers(ImportFormatPreferences importFormatPreferences) {\n        ArrayList<SearchBasedFetcher> list = new ArrayList<>();\n        list.add(new ArXiv(importFormatPreferences));\n        list.add(new INSPIREFetcher(importFormatPreferences));\n        list.add(new GvkFetcher());\n        list.add(new MedlineFetcher());\n        list.add(new AstrophysicsDataSystem(importFormatPreferences));\n        list.add(new MathSciNet(importFormatPreferences));\n        list.add(new ZbMATH(importFormatPreferences));\n        list.add(new ACMPortalFetcher(importFormatPreferences));\n        list.add(new GoogleScholar(importFormatPreferences));\n        list.add(new DBLPFetcher(importFormatPreferences));\n        list.add(new SpringerFetcher());\n        list.add(new CrossRef());\n        list.add(new CiteSeer());\n        list.add(new DOAJFetcher(importFormatPreferences));\n        list.add(new IEEE(importFormatPreferences));\n        list.sort(Comparator.comparing(WebFetcher::getName));\n        return list;\n    }\n","realPath":"src/main/java/org/jabref/logic/importer/WebFetchers.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":86,"status":"M"},{"authorDate":"2019-10-18 06:04:11","commitOrder":8,"curCode":"    public static SortedList<IdBasedFetcher> getIdBasedFetchers(ImportFormatPreferences importFormatPreferences) {\n        ArrayList<IdBasedFetcher> list = new ArrayList<>();\n        list.add(new ArXiv(importFormatPreferences));\n        list.add(new AstrophysicsDataSystem(importFormatPreferences));\n        list.add(new IsbnFetcher(importFormatPreferences));\n        list.add(new DiVA(importFormatPreferences));\n        list.add(new DoiFetcher(importFormatPreferences));\n        list.add(new MedlineFetcher());\n        list.add(new TitleFetcher(importFormatPreferences));\n        list.add(new MathSciNet(importFormatPreferences));\n        list.add(new CrossRef());\n        list.add(new LibraryOfCongress(importFormatPreferences));\n        list.add(new IacrEprintFetcher(importFormatPreferences));\n        list.add(new RfcFetcher(importFormatPreferences));\n\n        ObservableList<IdBasedFetcher> observableList = FXCollections.observableList(list);\n        return new SortedList<>(observableList, Comparator.comparing(WebFetcher::getName));\n    }\n","date":"2019-10-18 06:04:11","endLine":128,"groupId":"12834","id":16,"instanceNumber":2,"isCurCommit":0,"methodName":"getIdBasedFetchers","params":"(ImportFormatPreferencesimportFormatPreferences)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/85/f0feca7c37efbc226113915b914d7d2a106453.src","preCode":"    public static List<IdBasedFetcher> getIdBasedFetchers(ImportFormatPreferences importFormatPreferences) {\n        ArrayList<IdBasedFetcher> list = new ArrayList<>();\n        list.add(new ArXiv(importFormatPreferences));\n        list.add(new AstrophysicsDataSystem(importFormatPreferences));\n        list.add(new IsbnFetcher(importFormatPreferences));\n        list.add(new DiVA(importFormatPreferences));\n        list.add(new DoiFetcher(importFormatPreferences));\n        list.add(new MedlineFetcher());\n        list.add(new TitleFetcher(importFormatPreferences));\n        list.add(new MathSciNet(importFormatPreferences));\n        list.add(new CrossRef());\n        list.add(new LibraryOfCongress(importFormatPreferences));\n        list.add(new IacrEprintFetcher(importFormatPreferences));\n        list.add(new RfcFetcher(importFormatPreferences));\n        list.sort(Comparator.comparing(WebFetcher::getName));\n        return list;\n    }\n","realPath":"src/main/java/org/jabref/logic/importer/WebFetchers.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":111,"status":"M"}],"commitId":"bc26c3ac5a3f3e0e7d806ac3639bf079c98441e0","commitMessage":"@@@Remove unnecessary sort (#5470)\n\n","date":"2019-10-18 06:04:11","modifiedFileCount":"2","status":"M","submitter":"Johannes Hupe"},{"authorTime":"2019-10-19 17:52:56","codes":[{"authorDate":"2019-10-19 17:52:56","commitOrder":9,"curCode":"    public static SortedSet<SearchBasedFetcher> getSearchBasedFetchers(ImportFormatPreferences importFormatPreferences) {\n        SortedSet<SearchBasedFetcher> set = new TreeSet<>(Comparator.comparing(WebFetcher::getName));\n        set.add(new ArXiv(importFormatPreferences));\n        set.add(new INSPIREFetcher(importFormatPreferences));\n        set.add(new GvkFetcher());\n        set.add(new MedlineFetcher());\n        set.add(new AstrophysicsDataSystem(importFormatPreferences));\n        set.add(new MathSciNet(importFormatPreferences));\n        set.add(new ZbMATH(importFormatPreferences));\n        set.add(new ACMPortalFetcher(importFormatPreferences));\n        set.add(new GoogleScholar(importFormatPreferences));\n        set.add(new DBLPFetcher(importFormatPreferences));\n        set.add(new SpringerFetcher());\n        set.add(new CrossRef());\n        set.add(new CiteSeer());\n        set.add(new DOAJFetcher(importFormatPreferences));\n        set.add(new IEEE(importFormatPreferences));\n        return set;\n    }\n","date":"2019-10-19 17:52:56","endLine":102,"groupId":"0","id":17,"instanceNumber":1,"isCurCommit":0,"methodName":"getSearchBasedFetchers","params":"(ImportFormatPreferencesimportFormatPreferences)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/66/319f5e6b475e0e052e7f92df4270497ef764d6.src","preCode":"    public static SortedList<SearchBasedFetcher> getSearchBasedFetchers(ImportFormatPreferences importFormatPreferences) {\n        ArrayList<SearchBasedFetcher> list = new ArrayList<>();\n        list.add(new ArXiv(importFormatPreferences));\n        list.add(new INSPIREFetcher(importFormatPreferences));\n        list.add(new GvkFetcher());\n        list.add(new MedlineFetcher());\n        list.add(new AstrophysicsDataSystem(importFormatPreferences));\n        list.add(new MathSciNet(importFormatPreferences));\n        list.add(new ZbMATH(importFormatPreferences));\n        list.add(new ACMPortalFetcher(importFormatPreferences));\n        list.add(new GoogleScholar(importFormatPreferences));\n        list.add(new DBLPFetcher(importFormatPreferences));\n        list.add(new SpringerFetcher());\n        list.add(new CrossRef());\n        list.add(new CiteSeer());\n        list.add(new DOAJFetcher(importFormatPreferences));\n        list.add(new IEEE(importFormatPreferences));\n\n        ObservableList<SearchBasedFetcher> observableList = FXCollections.observableList(list);\n        return new SortedList<>(observableList, Comparator.comparing(WebFetcher::getName));\n    }\n","realPath":"src/main/java/org/jabref/logic/importer/WebFetchers.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":84,"status":"M"},{"authorDate":"2019-10-19 17:52:56","commitOrder":9,"curCode":"    public static SortedSet<IdBasedFetcher> getIdBasedFetchers(ImportFormatPreferences importFormatPreferences) {\n        SortedSet<IdBasedFetcher> set = new TreeSet<>(Comparator.comparing(WebFetcher::getName));\n        set.add(new ArXiv(importFormatPreferences));\n        set.add(new AstrophysicsDataSystem(importFormatPreferences));\n        set.add(new IsbnFetcher(importFormatPreferences));\n        set.add(new DiVA(importFormatPreferences));\n        set.add(new DoiFetcher(importFormatPreferences));\n        set.add(new MedlineFetcher());\n        set.add(new TitleFetcher(importFormatPreferences));\n        set.add(new MathSciNet(importFormatPreferences));\n        set.add(new CrossRef());\n        set.add(new LibraryOfCongress(importFormatPreferences));\n        set.add(new IacrEprintFetcher(importFormatPreferences));\n        set.add(new RfcFetcher(importFormatPreferences));\n        return set;\n    }\n","date":"2019-10-19 17:52:56","endLine":122,"groupId":"2475","id":18,"instanceNumber":2,"isCurCommit":0,"methodName":"getIdBasedFetchers","params":"(ImportFormatPreferencesimportFormatPreferences)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/66/319f5e6b475e0e052e7f92df4270497ef764d6.src","preCode":"    public static SortedList<IdBasedFetcher> getIdBasedFetchers(ImportFormatPreferences importFormatPreferences) {\n        ArrayList<IdBasedFetcher> list = new ArrayList<>();\n        list.add(new ArXiv(importFormatPreferences));\n        list.add(new AstrophysicsDataSystem(importFormatPreferences));\n        list.add(new IsbnFetcher(importFormatPreferences));\n        list.add(new DiVA(importFormatPreferences));\n        list.add(new DoiFetcher(importFormatPreferences));\n        list.add(new MedlineFetcher());\n        list.add(new TitleFetcher(importFormatPreferences));\n        list.add(new MathSciNet(importFormatPreferences));\n        list.add(new CrossRef());\n        list.add(new LibraryOfCongress(importFormatPreferences));\n        list.add(new IacrEprintFetcher(importFormatPreferences));\n        list.add(new RfcFetcher(importFormatPreferences));\n\n        ObservableList<IdBasedFetcher> observableList = FXCollections.observableList(list);\n        return new SortedList<>(observableList, Comparator.comparing(WebFetcher::getName));\n    }\n","realPath":"src/main/java/org/jabref/logic/importer/WebFetchers.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":107,"status":"M"}],"commitId":"36aec657b667b173b1434b4f126ca236177c7073","commitMessage":"@@@Refactor to sorted set (#5477)\n\n","date":"2019-10-19 17:52:56","modifiedFileCount":"7","status":"M","submitter":"Johannes Hupe"},{"authorTime":"2019-10-19 17:52:56","codes":[{"authorDate":"2020-01-02 21:03:27","commitOrder":10,"curCode":"    public static SortedSet<SearchBasedFetcher> getSearchBasedFetchers(ImportFormatPreferences importFormatPreferences) {\n        SortedSet<SearchBasedFetcher> set = new TreeSet<>(Comparator.comparing(WebFetcher::getName));\n        set.add(new ArXiv(importFormatPreferences));\n        set.add(new INSPIREFetcher(importFormatPreferences));\n        set.add(new GvkFetcher());\n        set.add(new MedlineFetcher());\n        set.add(new AstrophysicsDataSystem(importFormatPreferences));\n        set.add(new MathSciNet(importFormatPreferences));\n        set.add(new ZbMATH(importFormatPreferences));\n        \r\n        \r\n        set.add(new GoogleScholar(importFormatPreferences));\n        set.add(new DBLPFetcher(importFormatPreferences));\n        set.add(new SpringerFetcher());\n        set.add(new CrossRef());\n        set.add(new CiteSeer());\n        set.add(new DOAJFetcher(importFormatPreferences));\n        set.add(new IEEE(importFormatPreferences));\n        return set;\n    }\n","date":"2020-01-02 21:03:27","endLine":102,"groupId":"12349","id":19,"instanceNumber":1,"isCurCommit":0,"methodName":"getSearchBasedFetchers","params":"(ImportFormatPreferencesimportFormatPreferences)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/45/f035914cab13ef72bbe06d0c9777c129c8f50f.src","preCode":"    public static SortedSet<SearchBasedFetcher> getSearchBasedFetchers(ImportFormatPreferences importFormatPreferences) {\n        SortedSet<SearchBasedFetcher> set = new TreeSet<>(Comparator.comparing(WebFetcher::getName));\n        set.add(new ArXiv(importFormatPreferences));\n        set.add(new INSPIREFetcher(importFormatPreferences));\n        set.add(new GvkFetcher());\n        set.add(new MedlineFetcher());\n        set.add(new AstrophysicsDataSystem(importFormatPreferences));\n        set.add(new MathSciNet(importFormatPreferences));\n        set.add(new ZbMATH(importFormatPreferences));\n        set.add(new ACMPortalFetcher(importFormatPreferences));\n        set.add(new GoogleScholar(importFormatPreferences));\n        set.add(new DBLPFetcher(importFormatPreferences));\n        set.add(new SpringerFetcher());\n        set.add(new CrossRef());\n        set.add(new CiteSeer());\n        set.add(new DOAJFetcher(importFormatPreferences));\n        set.add(new IEEE(importFormatPreferences));\n        return set;\n    }\n","realPath":"src/main/java/org/jabref/logic/importer/WebFetchers.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":83,"status":"M"},{"authorDate":"2019-10-19 17:52:56","commitOrder":10,"curCode":"    public static SortedSet<IdBasedFetcher> getIdBasedFetchers(ImportFormatPreferences importFormatPreferences) {\n        SortedSet<IdBasedFetcher> set = new TreeSet<>(Comparator.comparing(WebFetcher::getName));\n        set.add(new ArXiv(importFormatPreferences));\n        set.add(new AstrophysicsDataSystem(importFormatPreferences));\n        set.add(new IsbnFetcher(importFormatPreferences));\n        set.add(new DiVA(importFormatPreferences));\n        set.add(new DoiFetcher(importFormatPreferences));\n        set.add(new MedlineFetcher());\n        set.add(new TitleFetcher(importFormatPreferences));\n        set.add(new MathSciNet(importFormatPreferences));\n        set.add(new CrossRef());\n        set.add(new LibraryOfCongress(importFormatPreferences));\n        set.add(new IacrEprintFetcher(importFormatPreferences));\n        set.add(new RfcFetcher(importFormatPreferences));\n        return set;\n    }\n","date":"2019-10-19 17:52:56","endLine":122,"groupId":"2475","id":20,"instanceNumber":2,"isCurCommit":0,"methodName":"getIdBasedFetchers","params":"(ImportFormatPreferencesimportFormatPreferences)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/66/319f5e6b475e0e052e7f92df4270497ef764d6.src","preCode":"    public static SortedSet<IdBasedFetcher> getIdBasedFetchers(ImportFormatPreferences importFormatPreferences) {\n        SortedSet<IdBasedFetcher> set = new TreeSet<>(Comparator.comparing(WebFetcher::getName));\n        set.add(new ArXiv(importFormatPreferences));\n        set.add(new AstrophysicsDataSystem(importFormatPreferences));\n        set.add(new IsbnFetcher(importFormatPreferences));\n        set.add(new DiVA(importFormatPreferences));\n        set.add(new DoiFetcher(importFormatPreferences));\n        set.add(new MedlineFetcher());\n        set.add(new TitleFetcher(importFormatPreferences));\n        set.add(new MathSciNet(importFormatPreferences));\n        set.add(new CrossRef());\n        set.add(new LibraryOfCongress(importFormatPreferences));\n        set.add(new IacrEprintFetcher(importFormatPreferences));\n        set.add(new RfcFetcher(importFormatPreferences));\n        return set;\n    }\n","realPath":"src/main/java/org/jabref/logic/importer/WebFetchers.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":107,"status":"N"}],"commitId":"60a37b4f5a1e5578b44a7962f1b043b206f38be1","commitMessage":"@@@Merge pull request #5805 from JabRef/disable-acm-test\n\nDisable ACM Fetcher","date":"2020-01-02 21:03:27","modifiedFileCount":"3","status":"M","submitter":"Oliver Kopp"},{"authorTime":"2019-10-19 17:52:56","codes":[{"authorDate":"2020-02-20 20:45:42","commitOrder":11,"curCode":"    public static SortedSet<SearchBasedFetcher> getSearchBasedFetchers(ImportFormatPreferences importFormatPreferences) {\n        SortedSet<SearchBasedFetcher> set = new TreeSet<>(Comparator.comparing(WebFetcher::getName));\n        set.add(new ArXiv(importFormatPreferences));\n        set.add(new INSPIREFetcher(importFormatPreferences));\n        set.add(new GvkFetcher());\n        set.add(new MedlineFetcher());\n        set.add(new AstrophysicsDataSystem(importFormatPreferences));\n        set.add(new MathSciNet(importFormatPreferences));\n        set.add(new ZbMATH(importFormatPreferences));\n        \r\n        \r\n        set.add(new GoogleScholar(importFormatPreferences));\n        set.add(new DBLPFetcher(importFormatPreferences));\n        set.add(new SpringerFetcher());\n        set.add(new CrossRef());\n        set.add(new CiteSeer());\n        set.add(new DOAJFetcher(importFormatPreferences));\n        set.add(new IEEE(importFormatPreferences));\n        set.add(new GrobidCitationFetcher(importFormatPreferences));\n        return set;\n    }\n","date":"2020-02-20 20:45:42","endLine":104,"groupId":"12349","id":21,"instanceNumber":1,"isCurCommit":0,"methodName":"getSearchBasedFetchers","params":"(ImportFormatPreferencesimportFormatPreferences)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/f9/01ea0588a220d68f393a28cc331da628d1799f.src","preCode":"    public static SortedSet<SearchBasedFetcher> getSearchBasedFetchers(ImportFormatPreferences importFormatPreferences) {\n        SortedSet<SearchBasedFetcher> set = new TreeSet<>(Comparator.comparing(WebFetcher::getName));\n        set.add(new ArXiv(importFormatPreferences));\n        set.add(new INSPIREFetcher(importFormatPreferences));\n        set.add(new GvkFetcher());\n        set.add(new MedlineFetcher());\n        set.add(new AstrophysicsDataSystem(importFormatPreferences));\n        set.add(new MathSciNet(importFormatPreferences));\n        set.add(new ZbMATH(importFormatPreferences));\n        \r\n        \r\n        set.add(new GoogleScholar(importFormatPreferences));\n        set.add(new DBLPFetcher(importFormatPreferences));\n        set.add(new SpringerFetcher());\n        set.add(new CrossRef());\n        set.add(new CiteSeer());\n        set.add(new DOAJFetcher(importFormatPreferences));\n        set.add(new IEEE(importFormatPreferences));\n        return set;\n    }\n","realPath":"src/main/java/org/jabref/logic/importer/WebFetchers.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":84,"status":"M"},{"authorDate":"2019-10-19 17:52:56","commitOrder":11,"curCode":"    public static SortedSet<IdBasedFetcher> getIdBasedFetchers(ImportFormatPreferences importFormatPreferences) {\n        SortedSet<IdBasedFetcher> set = new TreeSet<>(Comparator.comparing(WebFetcher::getName));\n        set.add(new ArXiv(importFormatPreferences));\n        set.add(new AstrophysicsDataSystem(importFormatPreferences));\n        set.add(new IsbnFetcher(importFormatPreferences));\n        set.add(new DiVA(importFormatPreferences));\n        set.add(new DoiFetcher(importFormatPreferences));\n        set.add(new MedlineFetcher());\n        set.add(new TitleFetcher(importFormatPreferences));\n        set.add(new MathSciNet(importFormatPreferences));\n        set.add(new CrossRef());\n        set.add(new LibraryOfCongress(importFormatPreferences));\n        set.add(new IacrEprintFetcher(importFormatPreferences));\n        set.add(new RfcFetcher(importFormatPreferences));\n        return set;\n    }\n","date":"2019-10-19 17:52:56","endLine":122,"groupId":"2475","id":22,"instanceNumber":2,"isCurCommit":0,"methodName":"getIdBasedFetchers","params":"(ImportFormatPreferencesimportFormatPreferences)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/66/319f5e6b475e0e052e7f92df4270497ef764d6.src","preCode":"    public static SortedSet<IdBasedFetcher> getIdBasedFetchers(ImportFormatPreferences importFormatPreferences) {\n        SortedSet<IdBasedFetcher> set = new TreeSet<>(Comparator.comparing(WebFetcher::getName));\n        set.add(new ArXiv(importFormatPreferences));\n        set.add(new AstrophysicsDataSystem(importFormatPreferences));\n        set.add(new IsbnFetcher(importFormatPreferences));\n        set.add(new DiVA(importFormatPreferences));\n        set.add(new DoiFetcher(importFormatPreferences));\n        set.add(new MedlineFetcher());\n        set.add(new TitleFetcher(importFormatPreferences));\n        set.add(new MathSciNet(importFormatPreferences));\n        set.add(new CrossRef());\n        set.add(new LibraryOfCongress(importFormatPreferences));\n        set.add(new IacrEprintFetcher(importFormatPreferences));\n        set.add(new RfcFetcher(importFormatPreferences));\n        return set;\n    }\n","realPath":"src/main/java/org/jabref/logic/importer/WebFetchers.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":107,"status":"N"}],"commitId":"5fa1dcfe0430c933eea1257e4b0a3705f41304ec","commitMessage":"@@@Add option to parse new references from plain text using GROBID? (#5614)\n\nGROBID integration using new fetcher\n\nAdd the possibility to extract references from plain text using the GROBID service. GROBID is called over a custom server. See also pull request #5614\n\nCo-Authored-By: joeyzgraggen <joeyzgraggen@users.noreply.github.com>\nCo-Authored-By: guenesaydin <guenesaydin@users.noreply.github.com>\nCo-Authored-By: obsluk00 <obsluk00@users.noreply.github.com>\nCo-Authored-By: nikodemkch <nikodemkch@users.noreply.github.com>\n","date":"2020-02-20 20:45:42","modifiedFileCount":"7","status":"M","submitter":"NikodemKch"},{"authorTime":"2019-10-19 17:52:56","codes":[{"authorDate":"2020-05-24 16:53:00","commitOrder":12,"curCode":"    public static SortedSet<SearchBasedFetcher> getSearchBasedFetchers(ImportFormatPreferences importFormatPreferences) {\n        SortedSet<SearchBasedFetcher> set = new TreeSet<>(Comparator.comparing(WebFetcher::getName));\n        set.add(new ArXiv(importFormatPreferences));\n        set.add(new INSPIREFetcher(importFormatPreferences));\n        set.add(new GvkFetcher());\n        set.add(new MedlineFetcher());\n        set.add(new AstrophysicsDataSystem(importFormatPreferences));\n        set.add(new MathSciNet(importFormatPreferences));\n        set.add(new ZbMATH(importFormatPreferences));\n        \r\n        \r\n        set.add(new GoogleScholar(importFormatPreferences));\n        set.add(new DBLPFetcher(importFormatPreferences));\n        set.add(new SpringerFetcher());\n        set.add(new CrossRef());\n        set.add(new CiteSeer());\n        set.add(new DOAJFetcher(importFormatPreferences));\n        set.add(new IEEE(importFormatPreferences));\n        return set;\n    }\n","date":"2020-05-24 16:53:00","endLine":103,"groupId":"12349","id":23,"instanceNumber":1,"isCurCommit":0,"methodName":"getSearchBasedFetchers","params":"(ImportFormatPreferencesimportFormatPreferences)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/f2/1521fa6a8a5740b3f050b8ad7ad615ebbfb613.src","preCode":"    public static SortedSet<SearchBasedFetcher> getSearchBasedFetchers(ImportFormatPreferences importFormatPreferences) {\n        SortedSet<SearchBasedFetcher> set = new TreeSet<>(Comparator.comparing(WebFetcher::getName));\n        set.add(new ArXiv(importFormatPreferences));\n        set.add(new INSPIREFetcher(importFormatPreferences));\n        set.add(new GvkFetcher());\n        set.add(new MedlineFetcher());\n        set.add(new AstrophysicsDataSystem(importFormatPreferences));\n        set.add(new MathSciNet(importFormatPreferences));\n        set.add(new ZbMATH(importFormatPreferences));\n        \r\n        \r\n        set.add(new GoogleScholar(importFormatPreferences));\n        set.add(new DBLPFetcher(importFormatPreferences));\n        set.add(new SpringerFetcher());\n        set.add(new CrossRef());\n        set.add(new CiteSeer());\n        set.add(new DOAJFetcher(importFormatPreferences));\n        set.add(new IEEE(importFormatPreferences));\n        set.add(new GrobidCitationFetcher(importFormatPreferences));\n        return set;\n    }\n","realPath":"src/main/java/org/jabref/logic/importer/WebFetchers.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":84,"status":"M"},{"authorDate":"2019-10-19 17:52:56","commitOrder":12,"curCode":"    public static SortedSet<IdBasedFetcher> getIdBasedFetchers(ImportFormatPreferences importFormatPreferences) {\n        SortedSet<IdBasedFetcher> set = new TreeSet<>(Comparator.comparing(WebFetcher::getName));\n        set.add(new ArXiv(importFormatPreferences));\n        set.add(new AstrophysicsDataSystem(importFormatPreferences));\n        set.add(new IsbnFetcher(importFormatPreferences));\n        set.add(new DiVA(importFormatPreferences));\n        set.add(new DoiFetcher(importFormatPreferences));\n        set.add(new MedlineFetcher());\n        set.add(new TitleFetcher(importFormatPreferences));\n        set.add(new MathSciNet(importFormatPreferences));\n        set.add(new CrossRef());\n        set.add(new LibraryOfCongress(importFormatPreferences));\n        set.add(new IacrEprintFetcher(importFormatPreferences));\n        set.add(new RfcFetcher(importFormatPreferences));\n        return set;\n    }\n","date":"2019-10-19 17:52:56","endLine":122,"groupId":"2475","id":24,"instanceNumber":2,"isCurCommit":0,"methodName":"getIdBasedFetchers","params":"(ImportFormatPreferencesimportFormatPreferences)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/66/319f5e6b475e0e052e7f92df4270497ef764d6.src","preCode":"    public static SortedSet<IdBasedFetcher> getIdBasedFetchers(ImportFormatPreferences importFormatPreferences) {\n        SortedSet<IdBasedFetcher> set = new TreeSet<>(Comparator.comparing(WebFetcher::getName));\n        set.add(new ArXiv(importFormatPreferences));\n        set.add(new AstrophysicsDataSystem(importFormatPreferences));\n        set.add(new IsbnFetcher(importFormatPreferences));\n        set.add(new DiVA(importFormatPreferences));\n        set.add(new DoiFetcher(importFormatPreferences));\n        set.add(new MedlineFetcher());\n        set.add(new TitleFetcher(importFormatPreferences));\n        set.add(new MathSciNet(importFormatPreferences));\n        set.add(new CrossRef());\n        set.add(new LibraryOfCongress(importFormatPreferences));\n        set.add(new IacrEprintFetcher(importFormatPreferences));\n        set.add(new RfcFetcher(importFormatPreferences));\n        return set;\n    }\n","realPath":"src/main/java/org/jabref/logic/importer/WebFetchers.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":107,"status":"N"}],"commitId":"3e9617061ac27577f6cc7def127c3c08093ecfc8","commitMessage":"@@@Merge pull request #6513 from JabRef/fetcherHelp\n\nFix fetcher help links","date":"2020-05-24 16:53:00","modifiedFileCount":"4","status":"M","submitter":"Christoph"},{"authorTime":"2019-10-19 17:52:56","codes":[{"authorDate":"2020-05-28 06:15:51","commitOrder":13,"curCode":"    public static SortedSet<SearchBasedFetcher> getSearchBasedFetchers(ImportFormatPreferences importFormatPreferences) {\n        SortedSet<SearchBasedFetcher> set = new TreeSet<>(Comparator.comparing(WebFetcher::getName));\n        set.add(new ArXiv(importFormatPreferences));\n        set.add(new INSPIREFetcher(importFormatPreferences));\n        set.add(new GvkFetcher());\n        set.add(new MedlineFetcher());\n        set.add(new AstrophysicsDataSystem(importFormatPreferences));\n        set.add(new MathSciNet(importFormatPreferences));\n        set.add(new ZbMATH(importFormatPreferences));\n        \r\n        \r\n        set.add(new GoogleScholar(importFormatPreferences));\n        set.add(new DBLPFetcher(importFormatPreferences));\n        set.add(new SpringerFetcher());\n        set.add(new CrossRef());\n        set.add(new CiteSeer());\n        set.add(new DOAJFetcher(importFormatPreferences));\n        set.add(new IEEE(importFormatPreferences));\n        set.add(new CompositeSearchBasedFetcher(set, 30));\n        return set;\n    }\n","date":"2020-05-28 06:15:51","endLine":105,"groupId":"12349","id":25,"instanceNumber":1,"isCurCommit":0,"methodName":"getSearchBasedFetchers","params":"(ImportFormatPreferencesimportFormatPreferences)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/bc/2efc8b90dd17d5b30d1bc892fd51486f07c1ff.src","preCode":"    public static SortedSet<SearchBasedFetcher> getSearchBasedFetchers(ImportFormatPreferences importFormatPreferences) {\n        SortedSet<SearchBasedFetcher> set = new TreeSet<>(Comparator.comparing(WebFetcher::getName));\n        set.add(new ArXiv(importFormatPreferences));\n        set.add(new INSPIREFetcher(importFormatPreferences));\n        set.add(new GvkFetcher());\n        set.add(new MedlineFetcher());\n        set.add(new AstrophysicsDataSystem(importFormatPreferences));\n        set.add(new MathSciNet(importFormatPreferences));\n        set.add(new ZbMATH(importFormatPreferences));\n        \r\n        \r\n        set.add(new GoogleScholar(importFormatPreferences));\n        set.add(new DBLPFetcher(importFormatPreferences));\n        set.add(new SpringerFetcher());\n        set.add(new CrossRef());\n        set.add(new CiteSeer());\n        set.add(new DOAJFetcher(importFormatPreferences));\n        set.add(new IEEE(importFormatPreferences));\n        return set;\n    }\n","realPath":"src/main/java/org/jabref/logic/importer/WebFetchers.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":85,"status":"M"},{"authorDate":"2019-10-19 17:52:56","commitOrder":13,"curCode":"    public static SortedSet<IdBasedFetcher> getIdBasedFetchers(ImportFormatPreferences importFormatPreferences) {\n        SortedSet<IdBasedFetcher> set = new TreeSet<>(Comparator.comparing(WebFetcher::getName));\n        set.add(new ArXiv(importFormatPreferences));\n        set.add(new AstrophysicsDataSystem(importFormatPreferences));\n        set.add(new IsbnFetcher(importFormatPreferences));\n        set.add(new DiVA(importFormatPreferences));\n        set.add(new DoiFetcher(importFormatPreferences));\n        set.add(new MedlineFetcher());\n        set.add(new TitleFetcher(importFormatPreferences));\n        set.add(new MathSciNet(importFormatPreferences));\n        set.add(new CrossRef());\n        set.add(new LibraryOfCongress(importFormatPreferences));\n        set.add(new IacrEprintFetcher(importFormatPreferences));\n        set.add(new RfcFetcher(importFormatPreferences));\n        return set;\n    }\n","date":"2019-10-19 17:52:56","endLine":122,"groupId":"2475","id":26,"instanceNumber":2,"isCurCommit":0,"methodName":"getIdBasedFetchers","params":"(ImportFormatPreferencesimportFormatPreferences)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/66/319f5e6b475e0e052e7f92df4270497ef764d6.src","preCode":"    public static SortedSet<IdBasedFetcher> getIdBasedFetchers(ImportFormatPreferences importFormatPreferences) {\n        SortedSet<IdBasedFetcher> set = new TreeSet<>(Comparator.comparing(WebFetcher::getName));\n        set.add(new ArXiv(importFormatPreferences));\n        set.add(new AstrophysicsDataSystem(importFormatPreferences));\n        set.add(new IsbnFetcher(importFormatPreferences));\n        set.add(new DiVA(importFormatPreferences));\n        set.add(new DoiFetcher(importFormatPreferences));\n        set.add(new MedlineFetcher());\n        set.add(new TitleFetcher(importFormatPreferences));\n        set.add(new MathSciNet(importFormatPreferences));\n        set.add(new CrossRef());\n        set.add(new LibraryOfCongress(importFormatPreferences));\n        set.add(new IacrEprintFetcher(importFormatPreferences));\n        set.add(new RfcFetcher(importFormatPreferences));\n        return set;\n    }\n","realPath":"src/main/java/org/jabref/logic/importer/WebFetchers.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":107,"status":"N"}],"commitId":"47846bf3792679ad54eeab1afaf0b77983393a41","commitMessage":"@@@Enable users to simultaneously search all SearchBasedFetchers (#6504)\n\n","date":"2020-05-28 06:15:51","modifiedFileCount":"2","status":"M","submitter":"DominikVoigt"},{"authorTime":"2019-10-19 17:52:56","codes":[{"authorDate":"2020-07-08 18:05:13","commitOrder":14,"curCode":"    public static SortedSet<SearchBasedFetcher> getSearchBasedFetchers(ImportFormatPreferences importFormatPreferences) {\n        SortedSet<SearchBasedFetcher> set = new TreeSet<>(Comparator.comparing(WebFetcher::getName));\n        set.add(new ArXiv(importFormatPreferences));\n        set.add(new INSPIREFetcher(importFormatPreferences));\n        set.add(new GvkFetcher());\n        set.add(new MedlineFetcher());\n        set.add(new AstrophysicsDataSystem(importFormatPreferences));\n        set.add(new MathSciNet(importFormatPreferences));\n        set.add(new ZbMATH(importFormatPreferences));\n        \r\n        \r\n        set.add(new GoogleScholar(importFormatPreferences));\n        set.add(new DBLPFetcher(importFormatPreferences));\n        set.add(new SpringerFetcher());\n        set.add(new CrossRef());\n        set.add(new CiteSeer());\n        set.add(new DOAJFetcher(importFormatPreferences));\n        set.add(new IEEE(importFormatPreferences));\n        set.add(new CompositeSearchBasedFetcher(set, 30));\n        set.add(new CollectionOfComputerScienceBibliographiesFetcher(importFormatPreferences));\n        return set;\n    }\n","date":"2020-07-08 18:05:13","endLine":107,"groupId":"12349","id":27,"instanceNumber":1,"isCurCommit":0,"methodName":"getSearchBasedFetchers","params":"(ImportFormatPreferencesimportFormatPreferences)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/6f/ae6d91d334f84f2c04701d75acaab2992427a0.src","preCode":"    public static SortedSet<SearchBasedFetcher> getSearchBasedFetchers(ImportFormatPreferences importFormatPreferences) {\n        SortedSet<SearchBasedFetcher> set = new TreeSet<>(Comparator.comparing(WebFetcher::getName));\n        set.add(new ArXiv(importFormatPreferences));\n        set.add(new INSPIREFetcher(importFormatPreferences));\n        set.add(new GvkFetcher());\n        set.add(new MedlineFetcher());\n        set.add(new AstrophysicsDataSystem(importFormatPreferences));\n        set.add(new MathSciNet(importFormatPreferences));\n        set.add(new ZbMATH(importFormatPreferences));\n        \r\n        \r\n        set.add(new GoogleScholar(importFormatPreferences));\n        set.add(new DBLPFetcher(importFormatPreferences));\n        set.add(new SpringerFetcher());\n        set.add(new CrossRef());\n        set.add(new CiteSeer());\n        set.add(new DOAJFetcher(importFormatPreferences));\n        set.add(new IEEE(importFormatPreferences));\n        set.add(new CompositeSearchBasedFetcher(set, 30));\n        return set;\n    }\n","realPath":"src/main/java/org/jabref/logic/importer/WebFetchers.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":86,"status":"M"},{"authorDate":"2019-10-19 17:52:56","commitOrder":14,"curCode":"    public static SortedSet<IdBasedFetcher> getIdBasedFetchers(ImportFormatPreferences importFormatPreferences) {\n        SortedSet<IdBasedFetcher> set = new TreeSet<>(Comparator.comparing(WebFetcher::getName));\n        set.add(new ArXiv(importFormatPreferences));\n        set.add(new AstrophysicsDataSystem(importFormatPreferences));\n        set.add(new IsbnFetcher(importFormatPreferences));\n        set.add(new DiVA(importFormatPreferences));\n        set.add(new DoiFetcher(importFormatPreferences));\n        set.add(new MedlineFetcher());\n        set.add(new TitleFetcher(importFormatPreferences));\n        set.add(new MathSciNet(importFormatPreferences));\n        set.add(new CrossRef());\n        set.add(new LibraryOfCongress(importFormatPreferences));\n        set.add(new IacrEprintFetcher(importFormatPreferences));\n        set.add(new RfcFetcher(importFormatPreferences));\n        return set;\n    }\n","date":"2019-10-19 17:52:56","endLine":122,"groupId":"2475","id":28,"instanceNumber":2,"isCurCommit":0,"methodName":"getIdBasedFetchers","params":"(ImportFormatPreferencesimportFormatPreferences)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/66/319f5e6b475e0e052e7f92df4270497ef764d6.src","preCode":"    public static SortedSet<IdBasedFetcher> getIdBasedFetchers(ImportFormatPreferences importFormatPreferences) {\n        SortedSet<IdBasedFetcher> set = new TreeSet<>(Comparator.comparing(WebFetcher::getName));\n        set.add(new ArXiv(importFormatPreferences));\n        set.add(new AstrophysicsDataSystem(importFormatPreferences));\n        set.add(new IsbnFetcher(importFormatPreferences));\n        set.add(new DiVA(importFormatPreferences));\n        set.add(new DoiFetcher(importFormatPreferences));\n        set.add(new MedlineFetcher());\n        set.add(new TitleFetcher(importFormatPreferences));\n        set.add(new MathSciNet(importFormatPreferences));\n        set.add(new CrossRef());\n        set.add(new LibraryOfCongress(importFormatPreferences));\n        set.add(new IacrEprintFetcher(importFormatPreferences));\n        set.add(new RfcFetcher(importFormatPreferences));\n        return set;\n    }\n","realPath":"src/main/java/org/jabref/logic/importer/WebFetchers.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":107,"status":"N"}],"commitId":"558c810f6d5c4eda7ff0a8097782f4dbfebf57b6","commitMessage":"@@@Merge pull request #6664 from daniel-price/new-fetcher-collection-of-computer-science-bibliographies\n\nAdd Collection of Comp Sci Bibliographies fetcher","date":"2020-07-08 18:05:13","modifiedFileCount":"2","status":"M","submitter":"Christoph"},{"authorTime":"2020-07-09 17:48:40","codes":[{"authorDate":"2020-07-08 18:05:13","commitOrder":15,"curCode":"    public static SortedSet<SearchBasedFetcher> getSearchBasedFetchers(ImportFormatPreferences importFormatPreferences) {\n        SortedSet<SearchBasedFetcher> set = new TreeSet<>(Comparator.comparing(WebFetcher::getName));\n        set.add(new ArXiv(importFormatPreferences));\n        set.add(new INSPIREFetcher(importFormatPreferences));\n        set.add(new GvkFetcher());\n        set.add(new MedlineFetcher());\n        set.add(new AstrophysicsDataSystem(importFormatPreferences));\n        set.add(new MathSciNet(importFormatPreferences));\n        set.add(new ZbMATH(importFormatPreferences));\n        \r\n        \r\n        set.add(new GoogleScholar(importFormatPreferences));\n        set.add(new DBLPFetcher(importFormatPreferences));\n        set.add(new SpringerFetcher());\n        set.add(new CrossRef());\n        set.add(new CiteSeer());\n        set.add(new DOAJFetcher(importFormatPreferences));\n        set.add(new IEEE(importFormatPreferences));\n        set.add(new CompositeSearchBasedFetcher(set, 30));\n        set.add(new CollectionOfComputerScienceBibliographiesFetcher(importFormatPreferences));\n        return set;\n    }\n","date":"2020-07-08 18:05:13","endLine":107,"groupId":"12349","id":29,"instanceNumber":1,"isCurCommit":0,"methodName":"getSearchBasedFetchers","params":"(ImportFormatPreferencesimportFormatPreferences)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/6f/ae6d91d334f84f2c04701d75acaab2992427a0.src","preCode":"    public static SortedSet<SearchBasedFetcher> getSearchBasedFetchers(ImportFormatPreferences importFormatPreferences) {\n        SortedSet<SearchBasedFetcher> set = new TreeSet<>(Comparator.comparing(WebFetcher::getName));\n        set.add(new ArXiv(importFormatPreferences));\n        set.add(new INSPIREFetcher(importFormatPreferences));\n        set.add(new GvkFetcher());\n        set.add(new MedlineFetcher());\n        set.add(new AstrophysicsDataSystem(importFormatPreferences));\n        set.add(new MathSciNet(importFormatPreferences));\n        set.add(new ZbMATH(importFormatPreferences));\n        \r\n        \r\n        set.add(new GoogleScholar(importFormatPreferences));\n        set.add(new DBLPFetcher(importFormatPreferences));\n        set.add(new SpringerFetcher());\n        set.add(new CrossRef());\n        set.add(new CiteSeer());\n        set.add(new DOAJFetcher(importFormatPreferences));\n        set.add(new IEEE(importFormatPreferences));\n        set.add(new CompositeSearchBasedFetcher(set, 30));\n        set.add(new CollectionOfComputerScienceBibliographiesFetcher(importFormatPreferences));\n        return set;\n    }\n","realPath":"src/main/java/org/jabref/logic/importer/WebFetchers.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":86,"status":"N"},{"authorDate":"2020-07-09 17:48:40","commitOrder":15,"curCode":"    public static SortedSet<IdBasedFetcher> getIdBasedFetchers(ImportFormatPreferences importFormatPreferences) {\n        SortedSet<IdBasedFetcher> set = new TreeSet<>(Comparator.comparing(WebFetcher::getName));\n        set.add(new ArXiv(importFormatPreferences));\n        set.add(new AstrophysicsDataSystem(importFormatPreferences));\n        set.add(new IsbnFetcher(importFormatPreferences));\n        set.add(new DiVA(importFormatPreferences));\n        set.add(new DoiFetcher(importFormatPreferences));\n        set.add(new MedlineFetcher());\n        set.add(new TitleFetcher(importFormatPreferences));\n        set.add(new MathSciNet(importFormatPreferences));\n        set.add(new CrossRef());\n        set.add(new LibraryOfCongress(importFormatPreferences));\n        set.add(new IacrEprintFetcher(importFormatPreferences));\n        set.add(new RfcFetcher(importFormatPreferences));\n        set.add(new Medra());\n        return set;\n    }\n","date":"2020-07-09 17:48:40","endLine":129,"groupId":"2475","id":30,"instanceNumber":2,"isCurCommit":0,"methodName":"getIdBasedFetchers","params":"(ImportFormatPreferencesimportFormatPreferences)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/3d/7c50fd87b603d26d8f6a272263b764a7ad253d.src","preCode":"    public static SortedSet<IdBasedFetcher> getIdBasedFetchers(ImportFormatPreferences importFormatPreferences) {\n        SortedSet<IdBasedFetcher> set = new TreeSet<>(Comparator.comparing(WebFetcher::getName));\n        set.add(new ArXiv(importFormatPreferences));\n        set.add(new AstrophysicsDataSystem(importFormatPreferences));\n        set.add(new IsbnFetcher(importFormatPreferences));\n        set.add(new DiVA(importFormatPreferences));\n        set.add(new DoiFetcher(importFormatPreferences));\n        set.add(new MedlineFetcher());\n        set.add(new TitleFetcher(importFormatPreferences));\n        set.add(new MathSciNet(importFormatPreferences));\n        set.add(new CrossRef());\n        set.add(new LibraryOfCongress(importFormatPreferences));\n        set.add(new IacrEprintFetcher(importFormatPreferences));\n        set.add(new RfcFetcher(importFormatPreferences));\n        return set;\n    }\n","realPath":"src/main/java/org/jabref/logic/importer/WebFetchers.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":113,"status":"M"}],"commitId":"20e78a4959bb2ccc0155f3a2cd4bf107c7c11352","commitMessage":"@@@mEDRA DOI fetcher implementation. (#6641)\n\n* mEDRA DOI fetcher implementation.\n\n* mEDRA DOI fetcher implementation\n\n* mEDRA DOI fetcher implementation\n\n* mEDRA DOI fetcher implementation\n\n* mEDRA DOI fetcher implementation\n\n* mEDRA DOI fetcher implementation\n\n* mEDRA DOI fetcher implementation\n\n* mEDRA DOI fetcher implementation\n\n* mEDRA DOI fetcher implementation\n\n* mEDRA DOI fetcher implementation\n\n* Revert wrong merge\n\n* mEDRA DOI fetcher implementation\n\n* Rewrite JsonReader to accept an empty input stream\n\n* Introduce \"getUrlDownloadForIdentifier\" and shrink fetcher code\n\n- Rename getURLForID to getUrlForIdentifier\n- Shrink Medra fetcher\n- Shrink CrossRef fetcher\n\n* Use parameterized tests (and add ISSN to Cisternino Paola)\n\n* Fix parsing of names\n\n* Fix checkstyle\n\n* Move \"getUrlDownload\" up to WebFetcher\n\nReastion: It is the common base of both SearchBasedParserFetcher and IdBasedParserFetcher\n\n* Use new method \"getUrlDownload\"\n\n* mEDRA DOI fetcher implementation\n\nCo-authored-by: Oliver Kopp <kopp.dev@gmail.com>\nCo-authored-by: Christoph <siedlerkiller@gmail.com>","date":"2020-07-09 17:48:40","modifiedFileCount":"20","status":"M","submitter":"Giovanni Caldarola"},{"authorTime":"2020-07-09 17:48:40","codes":[{"authorDate":"2020-10-14 17:15:55","commitOrder":16,"curCode":"    public static SortedSet<SearchBasedFetcher> getSearchBasedFetchers(ImportFormatPreferences importFormatPreferences) {\n        SortedSet<SearchBasedFetcher> set = new TreeSet<>(Comparator.comparing(WebFetcher::getName));\n        set.add(new ArXiv(importFormatPreferences));\n        set.add(new INSPIREFetcher(importFormatPreferences));\n        set.add(new GvkFetcher());\n        set.add(new MedlineFetcher());\n        set.add(new AstrophysicsDataSystem(importFormatPreferences));\n        set.add(new MathSciNet(importFormatPreferences));\n        set.add(new ZbMATH(importFormatPreferences));\n        \r\n        \r\n        set.add(new GoogleScholar(importFormatPreferences));\n        set.add(new DBLPFetcher(importFormatPreferences));\n        set.add(new SpringerFetcher());\n        set.add(new CrossRef());\n        set.add(new CiteSeer());\n        set.add(new DOAJFetcher(importFormatPreferences));\n        set.add(new IEEE(importFormatPreferences));\n        set.add(new CompositeSearchBasedFetcher(set, 30));\n        set.add(new CollectionOfComputerScienceBibliographiesFetcher(importFormatPreferences));\n        set.add(new JstorFetcher(importFormatPreferences));\n        return set;\n    }\n","date":"2020-10-14 17:15:55","endLine":110,"groupId":"12349","id":31,"instanceNumber":1,"isCurCommit":0,"methodName":"getSearchBasedFetchers","params":"(ImportFormatPreferencesimportFormatPreferences)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/e2/791d3c13d9a300adfecce2d0dd870d65750167.src","preCode":"    public static SortedSet<SearchBasedFetcher> getSearchBasedFetchers(ImportFormatPreferences importFormatPreferences) {\n        SortedSet<SearchBasedFetcher> set = new TreeSet<>(Comparator.comparing(WebFetcher::getName));\n        set.add(new ArXiv(importFormatPreferences));\n        set.add(new INSPIREFetcher(importFormatPreferences));\n        set.add(new GvkFetcher());\n        set.add(new MedlineFetcher());\n        set.add(new AstrophysicsDataSystem(importFormatPreferences));\n        set.add(new MathSciNet(importFormatPreferences));\n        set.add(new ZbMATH(importFormatPreferences));\n        \r\n        \r\n        set.add(new GoogleScholar(importFormatPreferences));\n        set.add(new DBLPFetcher(importFormatPreferences));\n        set.add(new SpringerFetcher());\n        set.add(new CrossRef());\n        set.add(new CiteSeer());\n        set.add(new DOAJFetcher(importFormatPreferences));\n        set.add(new IEEE(importFormatPreferences));\n        set.add(new CompositeSearchBasedFetcher(set, 30));\n        set.add(new CollectionOfComputerScienceBibliographiesFetcher(importFormatPreferences));\n        return set;\n    }\n","realPath":"src/main/java/org/jabref/logic/importer/WebFetchers.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":88,"status":"M"},{"authorDate":"2020-07-09 17:48:40","commitOrder":16,"curCode":"    public static SortedSet<IdBasedFetcher> getIdBasedFetchers(ImportFormatPreferences importFormatPreferences) {\n        SortedSet<IdBasedFetcher> set = new TreeSet<>(Comparator.comparing(WebFetcher::getName));\n        set.add(new ArXiv(importFormatPreferences));\n        set.add(new AstrophysicsDataSystem(importFormatPreferences));\n        set.add(new IsbnFetcher(importFormatPreferences));\n        set.add(new DiVA(importFormatPreferences));\n        set.add(new DoiFetcher(importFormatPreferences));\n        set.add(new MedlineFetcher());\n        set.add(new TitleFetcher(importFormatPreferences));\n        set.add(new MathSciNet(importFormatPreferences));\n        set.add(new CrossRef());\n        set.add(new LibraryOfCongress(importFormatPreferences));\n        set.add(new IacrEprintFetcher(importFormatPreferences));\n        set.add(new RfcFetcher(importFormatPreferences));\n        set.add(new Medra());\n        return set;\n    }\n","date":"2020-07-09 17:48:40","endLine":129,"groupId":"2475","id":32,"instanceNumber":2,"isCurCommit":0,"methodName":"getIdBasedFetchers","params":"(ImportFormatPreferencesimportFormatPreferences)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/3d/7c50fd87b603d26d8f6a272263b764a7ad253d.src","preCode":"    public static SortedSet<IdBasedFetcher> getIdBasedFetchers(ImportFormatPreferences importFormatPreferences) {\n        SortedSet<IdBasedFetcher> set = new TreeSet<>(Comparator.comparing(WebFetcher::getName));\n        set.add(new ArXiv(importFormatPreferences));\n        set.add(new AstrophysicsDataSystem(importFormatPreferences));\n        set.add(new IsbnFetcher(importFormatPreferences));\n        set.add(new DiVA(importFormatPreferences));\n        set.add(new DoiFetcher(importFormatPreferences));\n        set.add(new MedlineFetcher());\n        set.add(new TitleFetcher(importFormatPreferences));\n        set.add(new MathSciNet(importFormatPreferences));\n        set.add(new CrossRef());\n        set.add(new LibraryOfCongress(importFormatPreferences));\n        set.add(new IacrEprintFetcher(importFormatPreferences));\n        set.add(new RfcFetcher(importFormatPreferences));\n        set.add(new Medra());\n        return set;\n    }\n","realPath":"src/main/java/org/jabref/logic/importer/WebFetchers.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":113,"status":"N"}],"commitId":"170e9002f5787bb5131e09b022ca72752b9d81b3","commitMessage":"@@@Jstor Fetcher (#6992)\n\n","date":"2020-10-14 17:15:55","modifiedFileCount":"1","status":"M","submitter":"Johannes Theiner"},{"authorTime":"2020-12-01 15:23:32","codes":[{"authorDate":"2020-10-14 17:15:55","commitOrder":17,"curCode":"    public static SortedSet<SearchBasedFetcher> getSearchBasedFetchers(ImportFormatPreferences importFormatPreferences) {\n        SortedSet<SearchBasedFetcher> set = new TreeSet<>(Comparator.comparing(WebFetcher::getName));\n        set.add(new ArXiv(importFormatPreferences));\n        set.add(new INSPIREFetcher(importFormatPreferences));\n        set.add(new GvkFetcher());\n        set.add(new MedlineFetcher());\n        set.add(new AstrophysicsDataSystem(importFormatPreferences));\n        set.add(new MathSciNet(importFormatPreferences));\n        set.add(new ZbMATH(importFormatPreferences));\n        \r\n        \r\n        set.add(new GoogleScholar(importFormatPreferences));\n        set.add(new DBLPFetcher(importFormatPreferences));\n        set.add(new SpringerFetcher());\n        set.add(new CrossRef());\n        set.add(new CiteSeer());\n        set.add(new DOAJFetcher(importFormatPreferences));\n        set.add(new IEEE(importFormatPreferences));\n        set.add(new CompositeSearchBasedFetcher(set, 30));\n        set.add(new CollectionOfComputerScienceBibliographiesFetcher(importFormatPreferences));\n        set.add(new JstorFetcher(importFormatPreferences));\n        return set;\n    }\n","date":"2020-10-14 17:15:55","endLine":110,"groupId":"12349","id":33,"instanceNumber":1,"isCurCommit":0,"methodName":"getSearchBasedFetchers","params":"(ImportFormatPreferencesimportFormatPreferences)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/e2/791d3c13d9a300adfecce2d0dd870d65750167.src","preCode":"    public static SortedSet<SearchBasedFetcher> getSearchBasedFetchers(ImportFormatPreferences importFormatPreferences) {\n        SortedSet<SearchBasedFetcher> set = new TreeSet<>(Comparator.comparing(WebFetcher::getName));\n        set.add(new ArXiv(importFormatPreferences));\n        set.add(new INSPIREFetcher(importFormatPreferences));\n        set.add(new GvkFetcher());\n        set.add(new MedlineFetcher());\n        set.add(new AstrophysicsDataSystem(importFormatPreferences));\n        set.add(new MathSciNet(importFormatPreferences));\n        set.add(new ZbMATH(importFormatPreferences));\n        \r\n        \r\n        set.add(new GoogleScholar(importFormatPreferences));\n        set.add(new DBLPFetcher(importFormatPreferences));\n        set.add(new SpringerFetcher());\n        set.add(new CrossRef());\n        set.add(new CiteSeer());\n        set.add(new DOAJFetcher(importFormatPreferences));\n        set.add(new IEEE(importFormatPreferences));\n        set.add(new CompositeSearchBasedFetcher(set, 30));\n        set.add(new CollectionOfComputerScienceBibliographiesFetcher(importFormatPreferences));\n        set.add(new JstorFetcher(importFormatPreferences));\n        return set;\n    }\n","realPath":"src/main/java/org/jabref/logic/importer/WebFetchers.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":88,"status":"N"},{"authorDate":"2020-12-01 15:23:32","commitOrder":17,"curCode":"    public static SortedSet<IdBasedFetcher> getIdBasedFetchers(ImportFormatPreferences importFormatPreferences) {\n        SortedSet<IdBasedFetcher> set = new TreeSet<>(Comparator.comparing(WebFetcher::getName));\n        set.add(new ArXiv(importFormatPreferences));\n        set.add(new AstrophysicsDataSystem(importFormatPreferences));\n        set.add(new IsbnFetcher(importFormatPreferences));\n        set.add(new DiVA(importFormatPreferences));\n        set.add(new DoiFetcher(importFormatPreferences));\n        set.add(new MedlineFetcher());\n        set.add(new TitleFetcher(importFormatPreferences));\n        set.add(new MathSciNet(importFormatPreferences));\n        set.add(new CrossRef());\n        set.add(new LibraryOfCongress(importFormatPreferences));\n        set.add(new IacrEprintFetcher(importFormatPreferences));\n        set.add(new RfcFetcher(importFormatPreferences));\n        set.add(new Medra());\n        set.add(new JstorFetcher(importFormatPreferences));\n        return set;\n    }\n","date":"2020-12-01 15:23:32","endLine":132,"groupId":"2475","id":34,"instanceNumber":2,"isCurCommit":0,"methodName":"getIdBasedFetchers","params":"(ImportFormatPreferencesimportFormatPreferences)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/b7/3dbf8191bb46d9c750a7efede9ef74f6f2e057.src","preCode":"    public static SortedSet<IdBasedFetcher> getIdBasedFetchers(ImportFormatPreferences importFormatPreferences) {\n        SortedSet<IdBasedFetcher> set = new TreeSet<>(Comparator.comparing(WebFetcher::getName));\n        set.add(new ArXiv(importFormatPreferences));\n        set.add(new AstrophysicsDataSystem(importFormatPreferences));\n        set.add(new IsbnFetcher(importFormatPreferences));\n        set.add(new DiVA(importFormatPreferences));\n        set.add(new DoiFetcher(importFormatPreferences));\n        set.add(new MedlineFetcher());\n        set.add(new TitleFetcher(importFormatPreferences));\n        set.add(new MathSciNet(importFormatPreferences));\n        set.add(new CrossRef());\n        set.add(new LibraryOfCongress(importFormatPreferences));\n        set.add(new IacrEprintFetcher(importFormatPreferences));\n        set.add(new RfcFetcher(importFormatPreferences));\n        set.add(new Medra());\n        return set;\n    }\n","realPath":"src/main/java/org/jabref/logic/importer/WebFetchers.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":115,"status":"M"}],"commitId":"706865f93ed536a6f6ec60cb637cdb1ee3e896be","commitMessage":"@@@Add IdBasedSearchFetcher to jstor (#7145)\n\n","date":"2020-12-01 15:23:32","modifiedFileCount":"3","status":"M","submitter":"Johannes Theiner"},{"authorTime":"2020-12-24 01:17:49","codes":[{"authorDate":"2020-12-24 01:17:49","commitOrder":18,"curCode":"    public static SortedSet<SearchBasedFetcher> getSearchBasedFetchers(ImportFormatPreferences importFormatPreferences) {\n        SortedSet<SearchBasedFetcher> set = new TreeSet<>(Comparator.comparing(WebFetcher::getName));\n        set.add(new ArXiv(importFormatPreferences));\n        set.add(new INSPIREFetcher(importFormatPreferences));\n        set.add(new GvkFetcher());\n        set.add(new MedlineFetcher());\n        set.add(new AstrophysicsDataSystem(importFormatPreferences));\n        set.add(new MathSciNet(importFormatPreferences));\n        set.add(new ZbMATH(importFormatPreferences));\n        \r\n        \r\n        \r\n        set.add(new DBLPFetcher(importFormatPreferences));\n        set.add(new SpringerFetcher());\n        set.add(new CrossRef());\n        set.add(new CiteSeer());\n        set.add(new DOAJFetcher(importFormatPreferences));\n        set.add(new IEEE(importFormatPreferences));\n        set.add(new CompositeSearchBasedFetcher(set, 30));\n        set.add(new CollectionOfComputerScienceBibliographiesFetcher(importFormatPreferences));\n        \r\n        return set;\n    }\n","date":"2020-12-24 01:17:49","endLine":108,"groupId":"2474","id":35,"instanceNumber":1,"isCurCommit":0,"methodName":"getSearchBasedFetchers","params":"(ImportFormatPreferencesimportFormatPreferences)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/b3/7760bea66ff347adca1ae4e2b957456cf08acd.src","preCode":"    public static SortedSet<SearchBasedFetcher> getSearchBasedFetchers(ImportFormatPreferences importFormatPreferences) {\n        SortedSet<SearchBasedFetcher> set = new TreeSet<>(Comparator.comparing(WebFetcher::getName));\n        set.add(new ArXiv(importFormatPreferences));\n        set.add(new INSPIREFetcher(importFormatPreferences));\n        set.add(new GvkFetcher());\n        set.add(new MedlineFetcher());\n        set.add(new AstrophysicsDataSystem(importFormatPreferences));\n        set.add(new MathSciNet(importFormatPreferences));\n        set.add(new ZbMATH(importFormatPreferences));\n        \r\n        \r\n        set.add(new GoogleScholar(importFormatPreferences));\n        set.add(new DBLPFetcher(importFormatPreferences));\n        set.add(new SpringerFetcher());\n        set.add(new CrossRef());\n        set.add(new CiteSeer());\n        set.add(new DOAJFetcher(importFormatPreferences));\n        set.add(new IEEE(importFormatPreferences));\n        set.add(new CompositeSearchBasedFetcher(set, 30));\n        set.add(new CollectionOfComputerScienceBibliographiesFetcher(importFormatPreferences));\n        set.add(new JstorFetcher(importFormatPreferences));\n        return set;\n    }\n","realPath":"src/main/java/org/jabref/logic/importer/WebFetchers.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":86,"status":"M"},{"authorDate":"2020-12-24 01:17:49","commitOrder":18,"curCode":"    public static SortedSet<IdBasedFetcher> getIdBasedFetchers(ImportFormatPreferences importFormatPreferences) {\n        SortedSet<IdBasedFetcher> set = new TreeSet<>(Comparator.comparing(WebFetcher::getName));\n        set.add(new ArXiv(importFormatPreferences));\n        set.add(new AstrophysicsDataSystem(importFormatPreferences));\n        set.add(new IsbnFetcher(importFormatPreferences));\n        set.add(new DiVA(importFormatPreferences));\n        set.add(new DoiFetcher(importFormatPreferences));\n        set.add(new MedlineFetcher());\n        set.add(new TitleFetcher(importFormatPreferences));\n        set.add(new MathSciNet(importFormatPreferences));\n        set.add(new CrossRef());\n        set.add(new LibraryOfCongress(importFormatPreferences));\n        set.add(new IacrEprintFetcher(importFormatPreferences));\n        set.add(new RfcFetcher(importFormatPreferences));\n        set.add(new Medra());\n        \r\n        return set;\n    }\n","date":"2020-12-24 01:17:49","endLine":130,"groupId":"2475","id":36,"instanceNumber":2,"isCurCommit":0,"methodName":"getIdBasedFetchers","params":"(ImportFormatPreferencesimportFormatPreferences)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/b3/7760bea66ff347adca1ae4e2b957456cf08acd.src","preCode":"    public static SortedSet<IdBasedFetcher> getIdBasedFetchers(ImportFormatPreferences importFormatPreferences) {\n        SortedSet<IdBasedFetcher> set = new TreeSet<>(Comparator.comparing(WebFetcher::getName));\n        set.add(new ArXiv(importFormatPreferences));\n        set.add(new AstrophysicsDataSystem(importFormatPreferences));\n        set.add(new IsbnFetcher(importFormatPreferences));\n        set.add(new DiVA(importFormatPreferences));\n        set.add(new DoiFetcher(importFormatPreferences));\n        set.add(new MedlineFetcher());\n        set.add(new TitleFetcher(importFormatPreferences));\n        set.add(new MathSciNet(importFormatPreferences));\n        set.add(new CrossRef());\n        set.add(new LibraryOfCongress(importFormatPreferences));\n        set.add(new IacrEprintFetcher(importFormatPreferences));\n        set.add(new RfcFetcher(importFormatPreferences));\n        set.add(new Medra());\n        set.add(new JstorFetcher(importFormatPreferences));\n        return set;\n    }\n","realPath":"src/main/java/org/jabref/logic/importer/WebFetchers.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":113,"status":"M"}],"commitId":"071f4287159fbbdd07d1b6cdd92fefa5f58b01d9","commitMessage":"@@@Disable ACM.  Google Scholar.  JSTOR (#7229)\n\n","date":"2020-12-24 01:17:49","modifiedFileCount":"1","status":"M","submitter":"Oliver Kopp"},{"authorTime":"2021-01-07 20:17:44","codes":[{"authorDate":"2020-12-24 01:17:49","commitOrder":19,"curCode":"    public static SortedSet<SearchBasedFetcher> getSearchBasedFetchers(ImportFormatPreferences importFormatPreferences) {\n        SortedSet<SearchBasedFetcher> set = new TreeSet<>(Comparator.comparing(WebFetcher::getName));\n        set.add(new ArXiv(importFormatPreferences));\n        set.add(new INSPIREFetcher(importFormatPreferences));\n        set.add(new GvkFetcher());\n        set.add(new MedlineFetcher());\n        set.add(new AstrophysicsDataSystem(importFormatPreferences));\n        set.add(new MathSciNet(importFormatPreferences));\n        set.add(new ZbMATH(importFormatPreferences));\n        \r\n        \r\n        \r\n        set.add(new DBLPFetcher(importFormatPreferences));\n        set.add(new SpringerFetcher());\n        set.add(new CrossRef());\n        set.add(new CiteSeer());\n        set.add(new DOAJFetcher(importFormatPreferences));\n        set.add(new IEEE(importFormatPreferences));\n        set.add(new CompositeSearchBasedFetcher(set, 30));\n        set.add(new CollectionOfComputerScienceBibliographiesFetcher(importFormatPreferences));\n        \r\n        return set;\n    }\n","date":"2020-12-24 01:17:49","endLine":108,"groupId":"2474","id":37,"instanceNumber":1,"isCurCommit":0,"methodName":"getSearchBasedFetchers","params":"(ImportFormatPreferencesimportFormatPreferences)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/b3/7760bea66ff347adca1ae4e2b957456cf08acd.src","preCode":"    public static SortedSet<SearchBasedFetcher> getSearchBasedFetchers(ImportFormatPreferences importFormatPreferences) {\n        SortedSet<SearchBasedFetcher> set = new TreeSet<>(Comparator.comparing(WebFetcher::getName));\n        set.add(new ArXiv(importFormatPreferences));\n        set.add(new INSPIREFetcher(importFormatPreferences));\n        set.add(new GvkFetcher());\n        set.add(new MedlineFetcher());\n        set.add(new AstrophysicsDataSystem(importFormatPreferences));\n        set.add(new MathSciNet(importFormatPreferences));\n        set.add(new ZbMATH(importFormatPreferences));\n        \r\n        \r\n        \r\n        set.add(new DBLPFetcher(importFormatPreferences));\n        set.add(new SpringerFetcher());\n        set.add(new CrossRef());\n        set.add(new CiteSeer());\n        set.add(new DOAJFetcher(importFormatPreferences));\n        set.add(new IEEE(importFormatPreferences));\n        set.add(new CompositeSearchBasedFetcher(set, 30));\n        set.add(new CollectionOfComputerScienceBibliographiesFetcher(importFormatPreferences));\n        \r\n        return set;\n    }\n","realPath":"src/main/java/org/jabref/logic/importer/WebFetchers.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":86,"status":"N"},{"authorDate":"2021-01-07 20:17:44","commitOrder":19,"curCode":"    public static SortedSet<IdBasedFetcher> getIdBasedFetchers(ImportFormatPreferences importFormatPreferences) {\n        SortedSet<IdBasedFetcher> set = new TreeSet<>(Comparator.comparing(WebFetcher::getName));\n        set.add(new ArXiv(importFormatPreferences));\n        set.add(new AstrophysicsDataSystem(importFormatPreferences));\n        set.add(new IsbnFetcher(importFormatPreferences));\n        set.add(new DiVA(importFormatPreferences));\n        set.add(new DoiFetcher(importFormatPreferences));\n        set.add(new MedlineFetcher());\n        set.add(new TitleFetcher(importFormatPreferences));\n        set.add(new MathSciNet(importFormatPreferences));\n        set.add(new ZbMATH(importFormatPreferences));\n        set.add(new CrossRef());\n        set.add(new LibraryOfCongress(importFormatPreferences));\n        set.add(new IacrEprintFetcher(importFormatPreferences));\n        set.add(new RfcFetcher(importFormatPreferences));\n        set.add(new Medra());\n        \r\n        return set;\n    }\n","date":"2021-01-07 20:17:44","endLine":131,"groupId":"10108","id":38,"instanceNumber":2,"isCurCommit":0,"methodName":"getIdBasedFetchers","params":"(ImportFormatPreferencesimportFormatPreferences)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/cd/595e558b09e18e85df9be5f01ed8d87236df1d.src","preCode":"    public static SortedSet<IdBasedFetcher> getIdBasedFetchers(ImportFormatPreferences importFormatPreferences) {\n        SortedSet<IdBasedFetcher> set = new TreeSet<>(Comparator.comparing(WebFetcher::getName));\n        set.add(new ArXiv(importFormatPreferences));\n        set.add(new AstrophysicsDataSystem(importFormatPreferences));\n        set.add(new IsbnFetcher(importFormatPreferences));\n        set.add(new DiVA(importFormatPreferences));\n        set.add(new DoiFetcher(importFormatPreferences));\n        set.add(new MedlineFetcher());\n        set.add(new TitleFetcher(importFormatPreferences));\n        set.add(new MathSciNet(importFormatPreferences));\n        set.add(new CrossRef());\n        set.add(new LibraryOfCongress(importFormatPreferences));\n        set.add(new IacrEprintFetcher(importFormatPreferences));\n        set.add(new RfcFetcher(importFormatPreferences));\n        set.add(new Medra());\n        \r\n        return set;\n    }\n","realPath":"src/main/java/org/jabref/logic/importer/WebFetchers.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":113,"status":"M"}],"commitId":"129abaafdd1f9ff75339f9252fceff2e1952bc0d","commitMessage":"@@@Adjust zbmath fetcher (#7298)\n\n* add IdBasedParserFetcher to zbmath fetcher\n\n* add test for id-based zbmath fetcher\n\n* Add changes to CHANGELOG.md\n\n* fix zbmath fetcher test\n\n* Made changelog message more understandable","date":"2021-01-07 20:17:44","modifiedFileCount":"3","status":"M","submitter":"ibe-314"},{"authorTime":"2021-01-07 20:17:44","codes":[{"authorDate":"2021-05-21 06:41:53","commitOrder":20,"curCode":"    public static SortedSet<SearchBasedFetcher> getSearchBasedFetchers(ImportFormatPreferences importFormatPreferences) {\n        SortedSet<SearchBasedFetcher> set = new TreeSet<>(Comparator.comparing(WebFetcher::getName));\n        set.add(new ArXiv(importFormatPreferences));\n        set.add(new INSPIREFetcher(importFormatPreferences));\n        set.add(new GvkFetcher());\n        set.add(new MedlineFetcher());\n        set.add(new AstrophysicsDataSystem(importFormatPreferences));\n        set.add(new MathSciNet(importFormatPreferences));\n        set.add(new ZbMATH(importFormatPreferences));\n        set.add(new ACMPortalFetcher());\n        \r\n        set.add(new DBLPFetcher(importFormatPreferences));\n        set.add(new SpringerFetcher());\n        set.add(new CrossRef());\n        set.add(new CiteSeer());\n        set.add(new DOAJFetcher(importFormatPreferences));\n        set.add(new IEEE(importFormatPreferences));\n        set.add(new CompositeSearchBasedFetcher(set, 30));\n        set.add(new CollectionOfComputerScienceBibliographiesFetcher(importFormatPreferences));\n        \r\n        return set;\n    }\n","date":"2021-05-21 06:41:53","endLine":108,"groupId":"10999","id":39,"instanceNumber":1,"isCurCommit":0,"methodName":"getSearchBasedFetchers","params":"(ImportFormatPreferencesimportFormatPreferences)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/a3/0b86db3d0a5394450b2146b69087e1204a8c52.src","preCode":"    public static SortedSet<SearchBasedFetcher> getSearchBasedFetchers(ImportFormatPreferences importFormatPreferences) {\n        SortedSet<SearchBasedFetcher> set = new TreeSet<>(Comparator.comparing(WebFetcher::getName));\n        set.add(new ArXiv(importFormatPreferences));\n        set.add(new INSPIREFetcher(importFormatPreferences));\n        set.add(new GvkFetcher());\n        set.add(new MedlineFetcher());\n        set.add(new AstrophysicsDataSystem(importFormatPreferences));\n        set.add(new MathSciNet(importFormatPreferences));\n        set.add(new ZbMATH(importFormatPreferences));\n        \r\n        \r\n        \r\n        set.add(new DBLPFetcher(importFormatPreferences));\n        set.add(new SpringerFetcher());\n        set.add(new CrossRef());\n        set.add(new CiteSeer());\n        set.add(new DOAJFetcher(importFormatPreferences));\n        set.add(new IEEE(importFormatPreferences));\n        set.add(new CompositeSearchBasedFetcher(set, 30));\n        set.add(new CollectionOfComputerScienceBibliographiesFetcher(importFormatPreferences));\n        \r\n        return set;\n    }\n","realPath":"src/main/java/org/jabref/logic/importer/WebFetchers.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":87,"status":"M"},{"authorDate":"2021-01-07 20:17:44","commitOrder":20,"curCode":"    public static SortedSet<IdBasedFetcher> getIdBasedFetchers(ImportFormatPreferences importFormatPreferences) {\n        SortedSet<IdBasedFetcher> set = new TreeSet<>(Comparator.comparing(WebFetcher::getName));\n        set.add(new ArXiv(importFormatPreferences));\n        set.add(new AstrophysicsDataSystem(importFormatPreferences));\n        set.add(new IsbnFetcher(importFormatPreferences));\n        set.add(new DiVA(importFormatPreferences));\n        set.add(new DoiFetcher(importFormatPreferences));\n        set.add(new MedlineFetcher());\n        set.add(new TitleFetcher(importFormatPreferences));\n        set.add(new MathSciNet(importFormatPreferences));\n        set.add(new ZbMATH(importFormatPreferences));\n        set.add(new CrossRef());\n        set.add(new LibraryOfCongress(importFormatPreferences));\n        set.add(new IacrEprintFetcher(importFormatPreferences));\n        set.add(new RfcFetcher(importFormatPreferences));\n        set.add(new Medra());\n        \r\n        return set;\n    }\n","date":"2021-01-07 20:17:44","endLine":131,"groupId":"10999","id":40,"instanceNumber":2,"isCurCommit":0,"methodName":"getIdBasedFetchers","params":"(ImportFormatPreferencesimportFormatPreferences)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/cd/595e558b09e18e85df9be5f01ed8d87236df1d.src","preCode":"    public static SortedSet<IdBasedFetcher> getIdBasedFetchers(ImportFormatPreferences importFormatPreferences) {\n        SortedSet<IdBasedFetcher> set = new TreeSet<>(Comparator.comparing(WebFetcher::getName));\n        set.add(new ArXiv(importFormatPreferences));\n        set.add(new AstrophysicsDataSystem(importFormatPreferences));\n        set.add(new IsbnFetcher(importFormatPreferences));\n        set.add(new DiVA(importFormatPreferences));\n        set.add(new DoiFetcher(importFormatPreferences));\n        set.add(new MedlineFetcher());\n        set.add(new TitleFetcher(importFormatPreferences));\n        set.add(new MathSciNet(importFormatPreferences));\n        set.add(new ZbMATH(importFormatPreferences));\n        set.add(new CrossRef());\n        set.add(new LibraryOfCongress(importFormatPreferences));\n        set.add(new IacrEprintFetcher(importFormatPreferences));\n        set.add(new RfcFetcher(importFormatPreferences));\n        set.add(new Medra());\n        \r\n        return set;\n    }\n","realPath":"src/main/java/org/jabref/logic/importer/WebFetchers.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":113,"status":"N"}],"commitId":"3b3e7d6ba9b3425a384952222b7359324f690804","commitMessage":"@@@Fix for issue 5804: Rewrite ACM fetcher (#7733)\n\n","date":"2021-05-21 06:41:53","modifiedFileCount":"4","status":"M","submitter":"Ruan"}]
