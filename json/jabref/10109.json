[{"authorTime":"2017-02-17 05:41:47","codes":[{"authorDate":"2017-02-17 05:41:47","commitOrder":1,"curCode":"    public void testFormat() {\n        LayoutFormatter a = new AuthorFirstAbbrLastOxfordCommas();\n\n        \r\n        Assert.assertEquals(\"\", a.format(\"\"));\n\n        \r\n        Assert.assertEquals(\"V. S. Someone\", a.format(\"Someone, Van Something\"));\n\n        \r\n        Assert.assertEquals(\"J. von Neumann and P. Black Brown\", a\n                .format(\"John von Neumann and Black Brown, Peter\"));\n\n        \r\n        Assert.assertEquals(\"J. von Neumann, J. Smith, and P. Black Brown\", a\n                .format(\"von Neumann, John and Smith, John and Black Brown, Peter\"));\n\n        Assert.assertEquals(\"J. von Neumann, J. Smith, and P. Black Brown\", a\n                .format(\"John von Neumann and John Smith and Black Brown, Peter\"));\n    }\n","date":"2017-02-17 05:41:47","endLine":33,"groupId":"7581","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testFormat","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/24/2b228f0a2aaa7c1dc2f4a33b69ae7b90a71763.src","preCode":"    public void testFormat() {\n        LayoutFormatter a = new AuthorFirstAbbrLastOxfordCommas();\n\n        \r\n        Assert.assertEquals(\"\", a.format(\"\"));\n\n        \r\n        Assert.assertEquals(\"V. S. Someone\", a.format(\"Someone, Van Something\"));\n\n        \r\n        Assert.assertEquals(\"J. von Neumann and P. Black Brown\", a\n                .format(\"John von Neumann and Black Brown, Peter\"));\n\n        \r\n        Assert.assertEquals(\"J. von Neumann, J. Smith, and P. Black Brown\", a\n                .format(\"von Neumann, John and Smith, John and Black Brown, Peter\"));\n\n        Assert.assertEquals(\"J. von Neumann, J. Smith, and P. Black Brown\", a\n                .format(\"John von Neumann and John Smith and Black Brown, Peter\"));\n    }\n","realPath":"src/test/java/org/jabref/logic/layout/format/AuthorFirstAbbrLastOxfordCommasTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":14,"status":"B"},{"authorDate":"2017-02-17 05:41:47","commitOrder":1,"curCode":"    public void testFormat() {\n        LayoutFormatter a = new AuthorFirstLastOxfordCommas();\n\n        \r\n        Assert.assertEquals(\"\", a.format(\"\"));\n\n        \r\n        Assert.assertEquals(\"Van Something Someone\", a.format(\"Someone, Van Something\"));\n\n        \r\n        Assert.assertEquals(\"John von Neumann and Peter Black Brown\", a\n                .format(\"John von Neumann and Peter Black Brown\"));\n\n        \r\n        Assert.assertEquals(\"John von Neumann, John Smith, and Peter Black Brown\", a\n                .format(\"von Neumann, John and Smith, John and Black Brown, Peter\"));\n\n        Assert.assertEquals(\"John von Neumann, John Smith, and Peter Black Brown\", a\n                .format(\"John von Neumann and John Smith and Black Brown, Peter\"));\n    }\n","date":"2017-02-17 05:41:47","endLine":33,"groupId":"1645","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testFormat","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/73/6d204cc2bac6732fbeecb871546aeb49eeccce.src","preCode":"    public void testFormat() {\n        LayoutFormatter a = new AuthorFirstLastOxfordCommas();\n\n        \r\n        Assert.assertEquals(\"\", a.format(\"\"));\n\n        \r\n        Assert.assertEquals(\"Van Something Someone\", a.format(\"Someone, Van Something\"));\n\n        \r\n        Assert.assertEquals(\"John von Neumann and Peter Black Brown\", a\n                .format(\"John von Neumann and Peter Black Brown\"));\n\n        \r\n        Assert.assertEquals(\"John von Neumann, John Smith, and Peter Black Brown\", a\n                .format(\"von Neumann, John and Smith, John and Black Brown, Peter\"));\n\n        Assert.assertEquals(\"John von Neumann, John Smith, and Peter Black Brown\", a\n                .format(\"John von Neumann and John Smith and Black Brown, Peter\"));\n    }\n","realPath":"src/test/java/org/jabref/logic/layout/format/AuthorFirstLastOxfordCommasTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":14,"status":"B"}],"commitId":"ebbeb1d249edf7134abf92d24c2031ae54d19881","commitMessage":"@@@Merge branch 'net-sf-to-org-jabref'\n","date":"2017-02-17 05:41:47","modifiedFileCount":"1","status":"B","submitter":"Oliver Kopp"},{"authorTime":"2018-02-12 00:05:54","codes":[{"authorDate":"2018-02-12 00:05:54","commitOrder":2,"curCode":"    public void testFormat() {\n        LayoutFormatter a = new AuthorFirstAbbrLastOxfordCommas();\n\n        \r\n        assertEquals(\"\", a.format(\"\"));\n\n        \r\n        assertEquals(\"V. S. Someone\", a.format(\"Someone, Van Something\"));\n\n        \r\n        assertEquals(\"J. von Neumann and P. Black Brown\", a\n                .format(\"John von Neumann and Black Brown, Peter\"));\n\n        \r\n        assertEquals(\"J. von Neumann, J. Smith, and P. Black Brown\", a\n                .format(\"von Neumann, John and Smith, John and Black Brown, Peter\"));\n\n        assertEquals(\"J. von Neumann, J. Smith, and P. Black Brown\", a\n                .format(\"John von Neumann and John Smith and Black Brown, Peter\"));\n    }\n","date":"2018-02-12 00:05:54","endLine":33,"groupId":"10109","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testFormat","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/98/71a0a9da56dd329313272950150b9e9988509a.src","preCode":"    public void testFormat() {\n        LayoutFormatter a = new AuthorFirstAbbrLastOxfordCommas();\n\n        \r\n        Assert.assertEquals(\"\", a.format(\"\"));\n\n        \r\n        Assert.assertEquals(\"V. S. Someone\", a.format(\"Someone, Van Something\"));\n\n        \r\n        Assert.assertEquals(\"J. von Neumann and P. Black Brown\", a\n                .format(\"John von Neumann and Black Brown, Peter\"));\n\n        \r\n        Assert.assertEquals(\"J. von Neumann, J. Smith, and P. Black Brown\", a\n                .format(\"von Neumann, John and Smith, John and Black Brown, Peter\"));\n\n        Assert.assertEquals(\"J. von Neumann, J. Smith, and P. Black Brown\", a\n                .format(\"John von Neumann and John Smith and Black Brown, Peter\"));\n    }\n","realPath":"src/test/java/org/jabref/logic/layout/format/AuthorFirstAbbrLastOxfordCommasTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":14,"status":"M"},{"authorDate":"2018-02-12 00:05:54","commitOrder":2,"curCode":"    public void testFormat() {\n        LayoutFormatter a = new AuthorFirstLastOxfordCommas();\n\n        \r\n        assertEquals(\"\", a.format(\"\"));\n\n        \r\n        assertEquals(\"Van Something Someone\", a.format(\"Someone, Van Something\"));\n\n        \r\n        assertEquals(\"John von Neumann and Peter Black Brown\", a\n                .format(\"John von Neumann and Peter Black Brown\"));\n\n        \r\n        assertEquals(\"John von Neumann, John Smith, and Peter Black Brown\", a\n                .format(\"von Neumann, John and Smith, John and Black Brown, Peter\"));\n\n        assertEquals(\"John von Neumann, John Smith, and Peter Black Brown\", a\n                .format(\"John von Neumann and John Smith and Black Brown, Peter\"));\n    }\n","date":"2018-02-12 00:05:54","endLine":33,"groupId":"10109","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testFormat","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/9f/8a91fd569ced74940c59fe2bb2c7449539770f.src","preCode":"    public void testFormat() {\n        LayoutFormatter a = new AuthorFirstLastOxfordCommas();\n\n        \r\n        Assert.assertEquals(\"\", a.format(\"\"));\n\n        \r\n        Assert.assertEquals(\"Van Something Someone\", a.format(\"Someone, Van Something\"));\n\n        \r\n        Assert.assertEquals(\"John von Neumann and Peter Black Brown\", a\n                .format(\"John von Neumann and Peter Black Brown\"));\n\n        \r\n        Assert.assertEquals(\"John von Neumann, John Smith, and Peter Black Brown\", a\n                .format(\"von Neumann, John and Smith, John and Black Brown, Peter\"));\n\n        Assert.assertEquals(\"John von Neumann, John Smith, and Peter Black Brown\", a\n                .format(\"John von Neumann and John Smith and Black Brown, Peter\"));\n    }\n","realPath":"src/test/java/org/jabref/logic/layout/format/AuthorFirstLastOxfordCommasTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":14,"status":"M"}],"commitId":"1cef92447c4ae65ebe28d94cf9acf708861bb67b","commitMessage":"@@@Merge pull request #3711 from JabRef/junit5\n\nmigrate majority of tests to junit5","date":"2018-02-12 00:05:54","modifiedFileCount":"244","status":"M","submitter":"Oliver Kopp"}]
