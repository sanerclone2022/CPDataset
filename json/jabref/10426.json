[{"authorTime":"2020-06-04 18:52:52","codes":[{"authorDate":"2020-06-04 18:52:52","commitOrder":1,"curCode":"    void lastAuthorForenameInitials() {\n        assertEquals(\"I\",\n                CitationKeyGenerator.lastAuthorForenameInitials(AUTHOR_STRING_FIRSTNAME_INITIAL_LASTNAME_FULL_COUNT_1));\n        assertEquals(\"J\",\n                CitationKeyGenerator.lastAuthorForenameInitials(AUTHOR_STRING_FIRSTNAME_INITIAL_LASTNAME_FULL_COUNT_2));\n        assertEquals(\"A\",\n                CitationKeyGenerator.lastAuthorForenameInitials(AUTHOR_STRING_FIRSTNAME_INITIAL_LASTNAME_FULL_COUNT_3));\n        assertEquals(\"N\",\n                CitationKeyGenerator.lastAuthorForenameInitials(AUTHOR_STRING_FIRSTNAME_INITIAL_LASTNAME_FULL_COUNT_4));\n        assertEquals(\"H\",\n                CitationKeyGenerator.lastAuthorForenameInitials(AUTHOR_STRING_FIRSTNAME_INITIAL_LASTNAME_FULL_COUNT_5));\n\n        assertEquals(\"W\", CitationKeyGenerator\n                .lastAuthorForenameInitials(AUTHOR_STRING_FIRSTNAME_FULL_LASTNAME_FULL_WITH_VAN_COUNT_1));\n        assertEquals(\"T\", CitationKeyGenerator\n                .lastAuthorForenameInitials(AUTHOR_STRING_FIRSTNAME_FULL_LASTNAME_FULL_WITH_VAN_COUNT_2));\n    }\n","date":"2020-06-04 18:52:52","endLine":686,"groupId":"9066","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"lastAuthorForenameInitials","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/60/dce65c49846d4766f5c5e3f23997e65166fa9c.src","preCode":"    void lastAuthorForenameInitials() {\n        assertEquals(\"I\",\n                CitationKeyGenerator.lastAuthorForenameInitials(AUTHOR_STRING_FIRSTNAME_INITIAL_LASTNAME_FULL_COUNT_1));\n        assertEquals(\"J\",\n                CitationKeyGenerator.lastAuthorForenameInitials(AUTHOR_STRING_FIRSTNAME_INITIAL_LASTNAME_FULL_COUNT_2));\n        assertEquals(\"A\",\n                CitationKeyGenerator.lastAuthorForenameInitials(AUTHOR_STRING_FIRSTNAME_INITIAL_LASTNAME_FULL_COUNT_3));\n        assertEquals(\"N\",\n                CitationKeyGenerator.lastAuthorForenameInitials(AUTHOR_STRING_FIRSTNAME_INITIAL_LASTNAME_FULL_COUNT_4));\n        assertEquals(\"H\",\n                CitationKeyGenerator.lastAuthorForenameInitials(AUTHOR_STRING_FIRSTNAME_INITIAL_LASTNAME_FULL_COUNT_5));\n\n        assertEquals(\"W\", CitationKeyGenerator\n                .lastAuthorForenameInitials(AUTHOR_STRING_FIRSTNAME_FULL_LASTNAME_FULL_WITH_VAN_COUNT_1));\n        assertEquals(\"T\", CitationKeyGenerator\n                .lastAuthorForenameInitials(AUTHOR_STRING_FIRSTNAME_FULL_LASTNAME_FULL_WITH_VAN_COUNT_2));\n    }\n","realPath":"src/test/java/org/jabref/logic/citationkeypattern/CitationKeyGeneratorTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":670,"status":"B"},{"authorDate":"2020-06-04 18:52:52","commitOrder":1,"curCode":"    void oneAuthorPlusIni() {\n        assertEquals(\"Newto\",\n                CitationKeyGenerator.oneAuthorPlusIni(AUTHOR_STRING_FIRSTNAME_INITIAL_LASTNAME_FULL_COUNT_1));\n        assertEquals(\"NewtoM\",\n                CitationKeyGenerator.oneAuthorPlusIni(AUTHOR_STRING_FIRSTNAME_INITIAL_LASTNAME_FULL_COUNT_2));\n        assertEquals(\"NewtoME\",\n                CitationKeyGenerator.oneAuthorPlusIni(AUTHOR_STRING_FIRSTNAME_INITIAL_LASTNAME_FULL_COUNT_3));\n        assertEquals(\"NewtoMEB\",\n                CitationKeyGenerator.oneAuthorPlusIni(AUTHOR_STRING_FIRSTNAME_INITIAL_LASTNAME_FULL_COUNT_4));\n        assertEquals(\"NewtoMEBU\",\n                CitationKeyGenerator.oneAuthorPlusIni(AUTHOR_STRING_FIRSTNAME_INITIAL_LASTNAME_FULL_COUNT_5));\n\n        assertEquals(\"Aalst\",\n                CitationKeyGenerator.oneAuthorPlusIni(AUTHOR_STRING_FIRSTNAME_FULL_LASTNAME_FULL_WITH_VAN_COUNT_1));\n        assertEquals(\"AalstL\",\n                CitationKeyGenerator.oneAuthorPlusIni(AUTHOR_STRING_FIRSTNAME_FULL_LASTNAME_FULL_WITH_VAN_COUNT_2));\n    }\n","date":"2020-06-04 18:52:52","endLine":708,"groupId":"5202","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"oneAuthorPlusIni","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/60/dce65c49846d4766f5c5e3f23997e65166fa9c.src","preCode":"    void oneAuthorPlusIni() {\n        assertEquals(\"Newto\",\n                CitationKeyGenerator.oneAuthorPlusIni(AUTHOR_STRING_FIRSTNAME_INITIAL_LASTNAME_FULL_COUNT_1));\n        assertEquals(\"NewtoM\",\n                CitationKeyGenerator.oneAuthorPlusIni(AUTHOR_STRING_FIRSTNAME_INITIAL_LASTNAME_FULL_COUNT_2));\n        assertEquals(\"NewtoME\",\n                CitationKeyGenerator.oneAuthorPlusIni(AUTHOR_STRING_FIRSTNAME_INITIAL_LASTNAME_FULL_COUNT_3));\n        assertEquals(\"NewtoMEB\",\n                CitationKeyGenerator.oneAuthorPlusIni(AUTHOR_STRING_FIRSTNAME_INITIAL_LASTNAME_FULL_COUNT_4));\n        assertEquals(\"NewtoMEBU\",\n                CitationKeyGenerator.oneAuthorPlusIni(AUTHOR_STRING_FIRSTNAME_INITIAL_LASTNAME_FULL_COUNT_5));\n\n        assertEquals(\"Aalst\",\n                CitationKeyGenerator.oneAuthorPlusIni(AUTHOR_STRING_FIRSTNAME_FULL_LASTNAME_FULL_WITH_VAN_COUNT_1));\n        assertEquals(\"AalstL\",\n                CitationKeyGenerator.oneAuthorPlusIni(AUTHOR_STRING_FIRSTNAME_FULL_LASTNAME_FULL_WITH_VAN_COUNT_2));\n    }\n","realPath":"src/test/java/org/jabref/logic/citationkeypattern/CitationKeyGeneratorTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":692,"status":"B"}],"commitId":"7cc57474b7aa991ef6ea148d4030d4bb68ee69bf","commitMessage":"@@@Rename bibtexkey (#6545)\n\n* Reworded 'BibtexKey' to 'CitationKey'\n\n* Fixed merge errors.  renamed constants\n\n* Renamed forgotten package\n\n* Fixed overlooked enum names and added CHANGELOG.md entry","date":"2020-06-04 18:52:52","modifiedFileCount":"54","status":"B","submitter":"Carl Christian Snethlage"},{"authorTime":"2020-09-22 01:39:32","codes":[{"authorDate":"2020-09-22 01:39:32","commitOrder":2,"curCode":"    void lastAuthorForenameInitials() {\n        assertEquals(\"I\", generateKey(AUTHOR_FIRSTNAME_INITIAL_LASTNAME_FULL_COUNT_1, AUTHORLASTFOREINI));\n        assertEquals(\"J\", generateKey(AUTHOR_FIRSTNAME_INITIAL_LASTNAME_FULL_COUNT_2, AUTHORLASTFOREINI));\n        assertEquals(\"A\", generateKey(AUTHOR_FIRSTNAME_INITIAL_LASTNAME_FULL_COUNT_3, AUTHORLASTFOREINI));\n        assertEquals(\"N\", generateKey(AUTHOR_FIRSTNAME_INITIAL_LASTNAME_FULL_COUNT_4, AUTHORLASTFOREINI));\n        assertEquals(\"H\", generateKey(AUTHOR_FIRSTNAME_INITIAL_LASTNAME_FULL_COUNT_5, AUTHORLASTFOREINI));\n\n        assertEquals(\"W\", generateKey(AUTHOR_FIRSTNAME_FULL_LASTNAME_FULL_WITH_VAN_COUNT_1, AUTHORLASTFOREINI));\n        assertEquals(\"T\", generateKey(AUTHOR_FIRSTNAME_FULL_LASTNAME_FULL_WITH_VAN_COUNT_2, AUTHORLASTFOREINI));\n    }\n","date":"2020-09-22 01:39:32","endLine":653,"groupId":"10426","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"lastAuthorForenameInitials","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/73/05bc43f668208f2f364a581b3ac7bfef9b615b.src","preCode":"    void lastAuthorForenameInitials() {\n        assertEquals(\"I\",\n                CitationKeyGenerator.lastAuthorForenameInitials(AUTHOR_STRING_FIRSTNAME_INITIAL_LASTNAME_FULL_COUNT_1));\n        assertEquals(\"J\",\n                CitationKeyGenerator.lastAuthorForenameInitials(AUTHOR_STRING_FIRSTNAME_INITIAL_LASTNAME_FULL_COUNT_2));\n        assertEquals(\"A\",\n                CitationKeyGenerator.lastAuthorForenameInitials(AUTHOR_STRING_FIRSTNAME_INITIAL_LASTNAME_FULL_COUNT_3));\n        assertEquals(\"N\",\n                CitationKeyGenerator.lastAuthorForenameInitials(AUTHOR_STRING_FIRSTNAME_INITIAL_LASTNAME_FULL_COUNT_4));\n        assertEquals(\"H\",\n                CitationKeyGenerator.lastAuthorForenameInitials(AUTHOR_STRING_FIRSTNAME_INITIAL_LASTNAME_FULL_COUNT_5));\n\n        assertEquals(\"W\", CitationKeyGenerator\n                .lastAuthorForenameInitials(AUTHOR_STRING_FIRSTNAME_FULL_LASTNAME_FULL_WITH_VAN_COUNT_1));\n        assertEquals(\"T\", CitationKeyGenerator\n                .lastAuthorForenameInitials(AUTHOR_STRING_FIRSTNAME_FULL_LASTNAME_FULL_WITH_VAN_COUNT_2));\n    }\n","realPath":"src/test/java/org/jabref/logic/citationkeypattern/CitationKeyGeneratorTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":644,"status":"M"},{"authorDate":"2020-09-22 01:39:32","commitOrder":2,"curCode":"    void oneAuthorPlusIni() {\n        assertEquals(\"Newto\", generateKey(AUTHOR_FIRSTNAME_INITIAL_LASTNAME_FULL_COUNT_1, AUTHORINI));\n        assertEquals(\"NewtoM\", generateKey(AUTHOR_FIRSTNAME_INITIAL_LASTNAME_FULL_COUNT_2, AUTHORINI));\n        assertEquals(\"NewtoME\", generateKey(AUTHOR_FIRSTNAME_INITIAL_LASTNAME_FULL_COUNT_3, AUTHORINI));\n        assertEquals(\"NewtoMEB\", generateKey(AUTHOR_FIRSTNAME_INITIAL_LASTNAME_FULL_COUNT_4, AUTHORINI));\n        assertEquals(\"NewtoMEBU\", generateKey(AUTHOR_FIRSTNAME_INITIAL_LASTNAME_FULL_COUNT_5, AUTHORINI));\n\n        assertEquals(\"Aalst\", generateKey(AUTHOR_FIRSTNAME_FULL_LASTNAME_FULL_WITH_VAN_COUNT_1, AUTHORINI));\n        assertEquals(\"AalstL\", generateKey(AUTHOR_FIRSTNAME_FULL_LASTNAME_FULL_WITH_VAN_COUNT_2, AUTHORINI));\n    }\n","date":"2020-09-22 01:39:32","endLine":668,"groupId":"10426","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"oneAuthorPlusIni","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/73/05bc43f668208f2f364a581b3ac7bfef9b615b.src","preCode":"    void oneAuthorPlusIni() {\n        assertEquals(\"Newto\",\n                CitationKeyGenerator.oneAuthorPlusIni(AUTHOR_STRING_FIRSTNAME_INITIAL_LASTNAME_FULL_COUNT_1));\n        assertEquals(\"NewtoM\",\n                CitationKeyGenerator.oneAuthorPlusIni(AUTHOR_STRING_FIRSTNAME_INITIAL_LASTNAME_FULL_COUNT_2));\n        assertEquals(\"NewtoME\",\n                CitationKeyGenerator.oneAuthorPlusIni(AUTHOR_STRING_FIRSTNAME_INITIAL_LASTNAME_FULL_COUNT_3));\n        assertEquals(\"NewtoMEB\",\n                CitationKeyGenerator.oneAuthorPlusIni(AUTHOR_STRING_FIRSTNAME_INITIAL_LASTNAME_FULL_COUNT_4));\n        assertEquals(\"NewtoMEBU\",\n                CitationKeyGenerator.oneAuthorPlusIni(AUTHOR_STRING_FIRSTNAME_INITIAL_LASTNAME_FULL_COUNT_5));\n\n        assertEquals(\"Aalst\",\n                CitationKeyGenerator.oneAuthorPlusIni(AUTHOR_STRING_FIRSTNAME_FULL_LASTNAME_FULL_WITH_VAN_COUNT_1));\n        assertEquals(\"AalstL\",\n                CitationKeyGenerator.oneAuthorPlusIni(AUTHOR_STRING_FIRSTNAME_FULL_LASTNAME_FULL_WITH_VAN_COUNT_2));\n    }\n","realPath":"src/test/java/org/jabref/logic/citationkeypattern/CitationKeyGeneratorTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":659,"status":"M"}],"commitId":"efdd24c592a212a81e7f91164fe0d2a914cc5e09","commitMessage":"@@@Readability for citation key patterns (#6706)\n\n","date":"2020-09-22 01:39:32","modifiedFileCount":"6","status":"M","submitter":"Jonatan Asketorp"}]
