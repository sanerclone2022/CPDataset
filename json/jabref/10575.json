[{"authorTime":"2017-02-17 05:41:47","codes":[{"authorDate":"2017-02-17 05:41:47","commitOrder":1,"curCode":"    public void compareMonthFieldEquality() throws Exception {\n        FieldComparator comparator = new FieldComparator(\"month\");\n        BibEntry equal = new BibEntry();\n        equal.setField(\"month\", \"1\");\n        BibEntry equal2 = new BibEntry();\n        equal2.setField(\"month\", \"1\");\n\n        assertEquals(0, comparator.compare(equal, equal2));\n    }\n","date":"2017-02-17 05:41:47","endLine":28,"groupId":"9168","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"compareMonthFieldEquality","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/a3/3f77a0edc722f665932f1cc3183bd7abd1283d.src","preCode":"    public void compareMonthFieldEquality() throws Exception {\n        FieldComparator comparator = new FieldComparator(\"month\");\n        BibEntry equal = new BibEntry();\n        equal.setField(\"month\", \"1\");\n        BibEntry equal2 = new BibEntry();\n        equal2.setField(\"month\", \"1\");\n\n        assertEquals(0, comparator.compare(equal, equal2));\n    }\n","realPath":"src/test/java/org/jabref/logic/bibtex/comparator/FieldComparatorTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":20,"status":"B"},{"authorDate":"2017-02-17 05:41:47","commitOrder":1,"curCode":"    public void compareStringFieldsEquality() throws Exception {\n        FieldComparator comparator = new FieldComparator(\"title\");\n        BibEntry equal = new BibEntry();\n        equal.setField(\"title\", \"title\");\n        BibEntry equal2 = new BibEntry();\n        equal2.setField(\"title\", \"title\");\n\n        assertEquals(0, comparator.compare(equal, equal2));\n    }\n","date":"2017-02-17 05:41:47","endLine":149,"groupId":"9173","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"compareStringFieldsEquality","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/a3/3f77a0edc722f665932f1cc3183bd7abd1283d.src","preCode":"    public void compareStringFieldsEquality() throws Exception {\n        FieldComparator comparator = new FieldComparator(\"title\");\n        BibEntry equal = new BibEntry();\n        equal.setField(\"title\", \"title\");\n        BibEntry equal2 = new BibEntry();\n        equal2.setField(\"title\", \"title\");\n\n        assertEquals(0, comparator.compare(equal, equal2));\n    }\n","realPath":"src/test/java/org/jabref/logic/bibtex/comparator/FieldComparatorTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":141,"status":"B"}],"commitId":"ebbeb1d249edf7134abf92d24c2031ae54d19881","commitMessage":"@@@Merge branch 'net-sf-to-org-jabref'\n","date":"2017-02-17 05:41:47","modifiedFileCount":"1","status":"B","submitter":"Oliver Kopp"},{"authorTime":"2019-08-02 15:20:10","codes":[{"authorDate":"2019-08-02 15:20:10","commitOrder":2,"curCode":"    public void compareMonthFieldEquality() throws Exception {\n        FieldComparator comparator = new FieldComparator(StandardField.MONTH);\n        BibEntry equal = new BibEntry();\n        equal.setField(StandardField.MONTH, \"1\");\n        BibEntry equal2 = new BibEntry();\n        equal2.setField(StandardField.MONTH, \"1\");\n\n        assertEquals(0, comparator.compare(equal, equal2));\n    }\n","date":"2019-08-02 15:20:10","endLine":32,"groupId":"12126","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"compareMonthFieldEquality","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/7b/e7378a87275e9926c77a9a2d0d8df81eca2c05.src","preCode":"    public void compareMonthFieldEquality() throws Exception {\n        FieldComparator comparator = new FieldComparator(\"month\");\n        BibEntry equal = new BibEntry();\n        equal.setField(\"month\", \"1\");\n        BibEntry equal2 = new BibEntry();\n        equal2.setField(\"month\", \"1\");\n\n        assertEquals(0, comparator.compare(equal, equal2));\n    }\n","realPath":"src/test/java/org/jabref/logic/bibtex/comparator/FieldComparatorTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":24,"status":"M"},{"authorDate":"2019-08-02 15:20:10","commitOrder":2,"curCode":"    public void compareStringFieldsEquality() throws Exception {\n        FieldComparator comparator = new FieldComparator(StandardField.TITLE);\n        BibEntry equal = new BibEntry();\n        equal.setField(StandardField.TITLE, \"title\");\n        BibEntry equal2 = new BibEntry();\n        equal2.setField(StandardField.TITLE, \"title\");\n\n        assertEquals(0, comparator.compare(equal, equal2));\n    }\n","date":"2019-08-02 15:20:10","endLine":153,"groupId":"12137","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"compareStringFieldsEquality","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/7b/e7378a87275e9926c77a9a2d0d8df81eca2c05.src","preCode":"    public void compareStringFieldsEquality() throws Exception {\n        FieldComparator comparator = new FieldComparator(\"title\");\n        BibEntry equal = new BibEntry();\n        equal.setField(\"title\", \"title\");\n        BibEntry equal2 = new BibEntry();\n        equal2.setField(\"title\", \"title\");\n\n        assertEquals(0, comparator.compare(equal, equal2));\n    }\n","realPath":"src/test/java/org/jabref/logic/bibtex/comparator/FieldComparatorTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":145,"status":"M"}],"commitId":"4b39b78e4afcd6c36b385f5c46f1d9a4eac2e29b","commitMessage":"@@@Move to extended enums for fields and entry types (#5148)\n\n* Introduce interface for fields\n\n* Continue using fields interface instead of strings\n\n* Introduce OrFields class\n\n* Move FieldProperty\n\n* Convert entry types to extended enum\n\n* Start fixing build\n\n* Fix build\n\n* Start fixing tests\n\n* Everything compiles again\n\n* Make model tests pass\n\n* Fix most tests\n\n* Fix build\n\n* Fix a few more tests\n\n* Fix a few more tests\n\n* Fix a few more tests\n\n* Fix a few more tests\n\n* Fix checkstyle issues\n\n* Fix more tests\n\n* Fix more tests\n\n* Disable test that fails on CI\n\n* Disable test that fails on CI\n","date":"2019-08-02 15:20:10","modifiedFileCount":"439","status":"M","submitter":"Tobias Diez"},{"authorTime":"2021-05-07 04:56:06","codes":[{"authorDate":"2021-05-07 04:56:06","commitOrder":3,"curCode":"    public void compareMonthFieldEquality() throws Exception {\n        FieldComparator comparator = new FieldComparator(StandardField.MONTH);\n        BibEntry equal = new BibEntry()\n                .withField(StandardField.MONTH, \"1\");\n        BibEntry equal2 = new BibEntry()\n                .withField(StandardField.MONTH, \"1\");\n\n        assertEquals(0, comparator.compare(equal, equal2));\n    }\n","date":"2021-05-07 04:56:06","endLine":37,"groupId":"10575","id":5,"instanceNumber":1,"isCurCommit":1,"methodName":"compareMonthFieldEquality","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/59/c9d11613295037ea0b666bc641eea6f029f091.src","preCode":"    public void compareMonthFieldEquality() throws Exception {\n        FieldComparator comparator = new FieldComparator(StandardField.MONTH);\n        BibEntry equal = new BibEntry();\n        equal.setField(StandardField.MONTH, \"1\");\n        BibEntry equal2 = new BibEntry();\n        equal2.setField(StandardField.MONTH, \"1\");\n\n        assertEquals(0, comparator.compare(equal, equal2));\n    }\n","realPath":"src/test/java/org/jabref/logic/bibtex/comparator/FieldComparatorTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":29,"status":"M"},{"authorDate":"2021-05-07 04:56:06","commitOrder":3,"curCode":"    public void compareStringFieldsEquality() throws Exception {\n        FieldComparator comparator = new FieldComparator(StandardField.TITLE);\n        BibEntry equal = new BibEntry()\n                .withField(StandardField.TITLE, \"title\");\n        BibEntry equal2 = new BibEntry()\n                .withField(StandardField.TITLE, \"title\");\n\n        assertEquals(0, comparator.compare(equal, equal2));\n    }\n","date":"2021-05-07 04:56:06","endLine":158,"groupId":"10575","id":6,"instanceNumber":2,"isCurCommit":1,"methodName":"compareStringFieldsEquality","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/59/c9d11613295037ea0b666bc641eea6f029f091.src","preCode":"    public void compareStringFieldsEquality() throws Exception {\n        FieldComparator comparator = new FieldComparator(StandardField.TITLE);\n        BibEntry equal = new BibEntry();\n        equal.setField(StandardField.TITLE, \"title\");\n        BibEntry equal2 = new BibEntry();\n        equal2.setField(StandardField.TITLE, \"title\");\n\n        assertEquals(0, comparator.compare(equal, equal2));\n    }\n","realPath":"src/test/java/org/jabref/logic/bibtex/comparator/FieldComparatorTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":150,"status":"M"}],"commitId":"033c706eb1a12b444437ba07408123b9188ce036","commitMessage":"@@@Add simple unit tests (#7544)\n\n","date":"2021-05-07 04:56:06","modifiedFileCount":"9","status":"M","submitter":"BShaq"}]
