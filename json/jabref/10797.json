[{"authorTime":"2017-10-07 00:31:23","codes":[{"authorDate":"2017-10-07 00:31:23","commitOrder":1,"curCode":"    public void testGetEmptyResolvedKeywords() {\n        BibDatabase database = new BibDatabase();\n        BibEntry entry2 = new BibEntry();\n        entry.setField(FieldName.CROSSREF, \"entry2\");\n        entry2.setCiteKey(\"entry2\");\n        database.insertEntry(entry2);\n        database.insertEntry(entry);\n\n        KeywordList actual = entry.getResolvedKeywords(',', database);\n\n        assertEquals(new KeywordList(), actual);\n    }\n","date":"2017-10-07 00:31:23","endLine":100,"groupId":"6059","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testGetEmptyResolvedKeywords","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/5c/bea9d9477cf8cee2d2c7e77c969a341a165d05.src","preCode":"    public void testGetEmptyResolvedKeywords() {\n        BibDatabase database = new BibDatabase();\n        BibEntry entry2 = new BibEntry();\n        entry.setField(FieldName.CROSSREF, \"entry2\");\n        entry2.setCiteKey(\"entry2\");\n        database.insertEntry(entry2);\n        database.insertEntry(entry);\n\n        KeywordList actual = entry.getResolvedKeywords(',', database);\n\n        assertEquals(new KeywordList(), actual);\n    }\n","realPath":"src/test/java/org/jabref/model/entry/BibEntryTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":89,"status":"B"},{"authorDate":"2017-10-07 00:31:23","commitOrder":1,"curCode":"    public void testGetSingleResolvedKeywords() {\n        BibDatabase database = new BibDatabase();\n        BibEntry entry2 = new BibEntry();\n        entry.setField(FieldName.CROSSREF, \"entry2\");\n        entry2.setCiteKey(\"entry2\");\n        entry2.addKeyword(\"kw\", ',');\n        database.insertEntry(entry2);\n        database.insertEntry(entry);\n\n        KeywordList actual = entry.getResolvedKeywords(',', database);\n\n        assertEquals(new KeywordList(new Keyword(\"kw\")), actual);\n    }\n","date":"2017-10-07 00:31:23","endLine":115,"groupId":"1795","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testGetSingleResolvedKeywords","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/5c/bea9d9477cf8cee2d2c7e77c969a341a165d05.src","preCode":"    public void testGetSingleResolvedKeywords() {\n        BibDatabase database = new BibDatabase();\n        BibEntry entry2 = new BibEntry();\n        entry.setField(FieldName.CROSSREF, \"entry2\");\n        entry2.setCiteKey(\"entry2\");\n        entry2.addKeyword(\"kw\", ',');\n        database.insertEntry(entry2);\n        database.insertEntry(entry);\n\n        KeywordList actual = entry.getResolvedKeywords(',', database);\n\n        assertEquals(new KeywordList(new Keyword(\"kw\")), actual);\n    }\n","realPath":"src/test/java/org/jabref/model/entry/BibEntryTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":103,"status":"B"}],"commitId":"0a7a718a658742457690bed4320249d438e8bcc2","commitMessage":"@@@Fix for issue 2811: bibtexkey generator does not use crossref information (#3248)\n\n* use crossref information when generating bibtexkeys\n\n* create KeywordList#parse(Optional.  Character)\n\n* add changelog entry\n\n* remove System.out.println in test\n\n* Fix map\n\n* construct entries for crossref tests by hand\n\n* add tests for crossreferences to BracketedPatternTest\n","date":"2017-10-07 00:31:23","modifiedFileCount":"8","status":"B","submitter":"125m125"},{"authorTime":"2019-08-02 15:20:10","codes":[{"authorDate":"2019-08-02 15:20:10","commitOrder":2,"curCode":"    public void testGetEmptyResolvedKeywords() {\n        BibDatabase database = new BibDatabase();\n        BibEntry entry2 = new BibEntry();\n        entry.setField(StandardField.CROSSREF, \"entry2\");\n        entry2.setCiteKey(\"entry2\");\n        database.insertEntry(entry2);\n        database.insertEntry(entry);\n\n        KeywordList actual = entry.getResolvedKeywords(',', database);\n\n        assertEquals(new KeywordList(), actual);\n    }\n","date":"2019-08-02 15:20:10","endLine":108,"groupId":"0","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testGetEmptyResolvedKeywords","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/2c/16dbe91d42becd0a33016147fa6980ebdb4f42.src","preCode":"    public void testGetEmptyResolvedKeywords() {\n        BibDatabase database = new BibDatabase();\n        BibEntry entry2 = new BibEntry();\n        entry.setField(FieldName.CROSSREF, \"entry2\");\n        entry2.setCiteKey(\"entry2\");\n        database.insertEntry(entry2);\n        database.insertEntry(entry);\n\n        KeywordList actual = entry.getResolvedKeywords(',', database);\n\n        assertEquals(new KeywordList(), actual);\n    }\n","realPath":"src/test/java/org/jabref/model/entry/BibEntryTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":97,"status":"M"},{"authorDate":"2019-08-02 15:20:10","commitOrder":2,"curCode":"    public void testGetSingleResolvedKeywords() {\n        BibDatabase database = new BibDatabase();\n        BibEntry entry2 = new BibEntry();\n        entry.setField(StandardField.CROSSREF, \"entry2\");\n        entry2.setCiteKey(\"entry2\");\n        entry2.addKeyword(\"kw\", ',');\n        database.insertEntry(entry2);\n        database.insertEntry(entry);\n\n        KeywordList actual = entry.getResolvedKeywords(',', database);\n\n        assertEquals(new KeywordList(new Keyword(\"kw\")), actual);\n    }\n","date":"2019-08-02 15:20:10","endLine":123,"groupId":"1795","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testGetSingleResolvedKeywords","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/2c/16dbe91d42becd0a33016147fa6980ebdb4f42.src","preCode":"    public void testGetSingleResolvedKeywords() {\n        BibDatabase database = new BibDatabase();\n        BibEntry entry2 = new BibEntry();\n        entry.setField(FieldName.CROSSREF, \"entry2\");\n        entry2.setCiteKey(\"entry2\");\n        entry2.addKeyword(\"kw\", ',');\n        database.insertEntry(entry2);\n        database.insertEntry(entry);\n\n        KeywordList actual = entry.getResolvedKeywords(',', database);\n\n        assertEquals(new KeywordList(new Keyword(\"kw\")), actual);\n    }\n","realPath":"src/test/java/org/jabref/model/entry/BibEntryTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":111,"status":"M"}],"commitId":"4b39b78e4afcd6c36b385f5c46f1d9a4eac2e29b","commitMessage":"@@@Move to extended enums for fields and entry types (#5148)\n\n* Introduce interface for fields\n\n* Continue using fields interface instead of strings\n\n* Introduce OrFields class\n\n* Move FieldProperty\n\n* Convert entry types to extended enum\n\n* Start fixing build\n\n* Fix build\n\n* Start fixing tests\n\n* Everything compiles again\n\n* Make model tests pass\n\n* Fix most tests\n\n* Fix build\n\n* Fix a few more tests\n\n* Fix a few more tests\n\n* Fix a few more tests\n\n* Fix a few more tests\n\n* Fix checkstyle issues\n\n* Fix more tests\n\n* Fix more tests\n\n* Disable test that fails on CI\n\n* Disable test that fails on CI\n","date":"2019-08-02 15:20:10","modifiedFileCount":"439","status":"M","submitter":"Tobias Diez"},{"authorTime":"2019-11-14 07:17:00","codes":[{"authorDate":"2019-11-14 07:17:00","commitOrder":3,"curCode":"    public void testGetEmptyResolvedKeywords() {\n        BibDatabase database = new BibDatabase();\n        entry.setField(StandardField.CROSSREF, \"entry2\");\n        database.insertEntry(entry);\n\n        BibEntry entry2 = new BibEntry();\n        entry2.setCiteKey(\"entry2\");\n        database.insertEntry(entry2);\n\n        KeywordList actual = entry.getResolvedKeywords(',', database);\n\n        assertEquals(new KeywordList(), actual);\n    }\n","date":"2019-11-14 07:17:00","endLine":582,"groupId":"1141","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testGetEmptyResolvedKeywords","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/dd/fe5dab35c05231361455fc777b66f993ebbb4f.src","preCode":"    public void testGetEmptyResolvedKeywords() {\n        BibDatabase database = new BibDatabase();\n        BibEntry entry2 = new BibEntry();\n        entry.setField(StandardField.CROSSREF, \"entry2\");\n        entry2.setCiteKey(\"entry2\");\n        database.insertEntry(entry2);\n        database.insertEntry(entry);\n\n        KeywordList actual = entry.getResolvedKeywords(',', database);\n\n        assertEquals(new KeywordList(), actual);\n    }\n","realPath":"src/test/java/org/jabref/model/entry/BibEntryTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":570,"status":"M"},{"authorDate":"2019-11-14 07:17:00","commitOrder":3,"curCode":"    public void testGetSingleResolvedKeywords() {\n        BibDatabase database = new BibDatabase();\n        entry.setField(StandardField.CROSSREF, \"entry2\");\n\n        BibEntry entry2 = new BibEntry();\n        entry2.setCiteKey(\"entry2\");\n        entry2.addKeyword(\"kw\", ',');\n\n        database.insertEntry(entry2);\n        database.insertEntry(entry);\n\n        KeywordList actual = entry.getResolvedKeywords(',', database);\n\n        assertEquals(new KeywordList(new Keyword(\"kw\")), actual);\n    }\n","date":"2019-11-14 07:17:00","endLine":599,"groupId":"1142","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testGetSingleResolvedKeywords","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/dd/fe5dab35c05231361455fc777b66f993ebbb4f.src","preCode":"    public void testGetSingleResolvedKeywords() {\n        BibDatabase database = new BibDatabase();\n        BibEntry entry2 = new BibEntry();\n        entry.setField(StandardField.CROSSREF, \"entry2\");\n        entry2.setCiteKey(\"entry2\");\n        entry2.addKeyword(\"kw\", ',');\n        database.insertEntry(entry2);\n        database.insertEntry(entry);\n\n        KeywordList actual = entry.getResolvedKeywords(',', database);\n\n        assertEquals(new KeywordList(new Keyword(\"kw\")), actual);\n    }\n","realPath":"src/test/java/org/jabref/model/entry/BibEntryTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":585,"status":"M"}],"commitId":"19393bf1d00e4e0028436dc7b364fe3b7a7bfd81","commitMessage":"@@@Unify month field formatting in test bib files (#5578)\n\n* Unify month field formatting in test bib files (fixes JabRef/jabref#5116)\n\n* Fix month creation. #name# is really used within JabRef to determine a BibTeX string content (and not plain text)\n\n- Fix tests\n- Sort BibEntryTests: default constructor.  keywords.  all others\n- Fix name of \"CanonicalBibEntry\" (from CanonicalBibtexEntry)\n- Revert \"fix jabref format of month\".  this also reverts commit 77c25ca0f1702991493cf37278a4cedad0d984a4.\n- Format some code\n- Add comments\n\n* Merge all BibEntry test classes into one\n","date":"2019-11-14 07:17:00","modifiedFileCount":"13","status":"M","submitter":"Oliver Kopp"},{"authorTime":"2020-04-12 19:37:35","codes":[{"authorDate":"2020-04-12 19:37:35","commitOrder":4,"curCode":"    void testGetEmptyResolvedKeywords() {\n        BibDatabase database = new BibDatabase();\n        entry.setField(StandardField.CROSSREF, \"entry2\");\n        database.insertEntry(entry);\n\n        BibEntry entry2 = new BibEntry();\n        entry2.setCiteKey(\"entry2\");\n        database.insertEntry(entry2);\n\n        KeywordList actual = entry.getResolvedKeywords(',', database);\n\n        assertEquals(new KeywordList(), actual);\n    }\n","date":"2020-04-12 19:37:35","endLine":596,"groupId":"1141","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"testGetEmptyResolvedKeywords","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/45/dbeb69470328c4cf2a291d95eb3736a83ee3c3.src","preCode":"    public void testGetEmptyResolvedKeywords() {\n        BibDatabase database = new BibDatabase();\n        entry.setField(StandardField.CROSSREF, \"entry2\");\n        database.insertEntry(entry);\n\n        BibEntry entry2 = new BibEntry();\n        entry2.setCiteKey(\"entry2\");\n        database.insertEntry(entry2);\n\n        KeywordList actual = entry.getResolvedKeywords(',', database);\n\n        assertEquals(new KeywordList(), actual);\n    }\n","realPath":"src/test/java/org/jabref/model/entry/BibEntryTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":584,"status":"M"},{"authorDate":"2020-04-12 19:37:35","commitOrder":4,"curCode":"    void testGetSingleResolvedKeywords() {\n        BibDatabase database = new BibDatabase();\n        entry.setField(StandardField.CROSSREF, \"entry2\");\n\n        BibEntry entry2 = new BibEntry();\n        entry2.setCiteKey(\"entry2\");\n        entry2.addKeyword(\"kw\", ',');\n\n        database.insertEntry(entry2);\n        database.insertEntry(entry);\n\n        KeywordList actual = entry.getResolvedKeywords(',', database);\n\n        assertEquals(new KeywordList(new Keyword(\"kw\")), actual);\n    }\n","date":"2020-04-12 19:37:35","endLine":613,"groupId":"1142","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"testGetSingleResolvedKeywords","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/45/dbeb69470328c4cf2a291d95eb3736a83ee3c3.src","preCode":"    public void testGetSingleResolvedKeywords() {\n        BibDatabase database = new BibDatabase();\n        entry.setField(StandardField.CROSSREF, \"entry2\");\n\n        BibEntry entry2 = new BibEntry();\n        entry2.setCiteKey(\"entry2\");\n        entry2.addKeyword(\"kw\", ',');\n\n        database.insertEntry(entry2);\n        database.insertEntry(entry);\n\n        KeywordList actual = entry.getResolvedKeywords(',', database);\n\n        assertEquals(new KeywordList(new Keyword(\"kw\")), actual);\n    }\n","realPath":"src/test/java/org/jabref/model/entry/BibEntryTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":599,"status":"M"}],"commitId":"771af5dc2a45a2cfeeb48d1f2286424292238595","commitMessage":"@@@Improve performance (#6270)\n\n* Improve performance\n\n- Cache latex free field values for display in the main table\n- Only access preferences once for how to display names (instead of for every entry again)\n- Update search async only after 400ms without typing\n\n* Fix tests","date":"2020-04-12 19:37:35","modifiedFileCount":"9","status":"M","submitter":"Tobias Diez"},{"authorTime":"2020-09-08 21:34:34","codes":[{"authorDate":"2020-09-08 21:34:34","commitOrder":5,"curCode":"    void testGetEmptyResolvedKeywords() {\n        BibDatabase database = new BibDatabase();\n        entry.setField(StandardField.CROSSREF, \"entry2\");\n        database.insertEntry(entry);\n\n        BibEntry entry2 = new BibEntry();\n        entry2.setCitationKey(\"entry2\");\n        database.insertEntry(entry2);\n\n        KeywordList actual = entry.getResolvedKeywords(',', database);\n\n        assertEquals(new KeywordList(), actual);\n    }\n","date":"2020-09-08 21:34:34","endLine":609,"groupId":"10797","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"testGetEmptyResolvedKeywords","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/71/d956daa2ff4b632d997d1e7a25f6b2766e1e6f.src","preCode":"    void testGetEmptyResolvedKeywords() {\n        BibDatabase database = new BibDatabase();\n        entry.setField(StandardField.CROSSREF, \"entry2\");\n        database.insertEntry(entry);\n\n        BibEntry entry2 = new BibEntry();\n        entry2.setCiteKey(\"entry2\");\n        database.insertEntry(entry2);\n\n        KeywordList actual = entry.getResolvedKeywords(',', database);\n\n        assertEquals(new KeywordList(), actual);\n    }\n","realPath":"src/test/java/org/jabref/model/entry/BibEntryTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":597,"status":"M"},{"authorDate":"2020-09-08 21:34:34","commitOrder":5,"curCode":"    void testGetSingleResolvedKeywords() {\n        BibDatabase database = new BibDatabase();\n        entry.setField(StandardField.CROSSREF, \"entry2\");\n\n        BibEntry entry2 = new BibEntry();\n        entry2.setCitationKey(\"entry2\");\n        entry2.addKeyword(\"kw\", ',');\n\n        database.insertEntry(entry2);\n        database.insertEntry(entry);\n\n        KeywordList actual = entry.getResolvedKeywords(',', database);\n\n        assertEquals(new KeywordList(new Keyword(\"kw\")), actual);\n    }\n","date":"2020-09-08 21:34:34","endLine":626,"groupId":"10797","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"testGetSingleResolvedKeywords","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/71/d956daa2ff4b632d997d1e7a25f6b2766e1e6f.src","preCode":"    void testGetSingleResolvedKeywords() {\n        BibDatabase database = new BibDatabase();\n        entry.setField(StandardField.CROSSREF, \"entry2\");\n\n        BibEntry entry2 = new BibEntry();\n        entry2.setCiteKey(\"entry2\");\n        entry2.addKeyword(\"kw\", ',');\n\n        database.insertEntry(entry2);\n        database.insertEntry(entry);\n\n        KeywordList actual = entry.getResolvedKeywords(',', database);\n\n        assertEquals(new KeywordList(new Keyword(\"kw\")), actual);\n    }\n","realPath":"src/test/java/org/jabref/model/entry/BibEntryTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":612,"status":"M"}],"commitId":"6dec1747d8a1c89f6c62fc1d1939d88411f17eba","commitMessage":"@@@Complete rebranding of `bibtexkey` as `citationkey` (#6875)\n\n","date":"2020-09-08 21:34:34","modifiedFileCount":"127","status":"M","submitter":"Tobias Diez"}]
