[{"authorTime":"2017-10-05 01:29:59","codes":[{"authorDate":"2017-10-05 01:29:59","commitOrder":1,"curCode":"    public void testGetLinkedFileNameByYearAuthorFirstpage() {\n        \r\n        String fileNamePattern = \"[year]_[auth]_[firstpage]\";\n        BibEntry entry = new BibEntry();\n        entry.setField( \"author\", \"O. Kitsune\" );\n        entry.setField( \"year\", \"1868\" );\n        entry.setField( \"pages\", \"567-579\" );\n\n        assertEquals(\"1868_Kitsune_567\", FileUtil.createFileNameFromPattern(null, entry, fileNamePattern));\n    }\n","date":"2017-10-05 01:29:59","endLine":212,"groupId":"3666","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testGetLinkedFileNameByYearAuthorFirstpage","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/3a/9a424a3d328a2acec3e02cefdde2dcfd92e35a.src","preCode":"    public void testGetLinkedFileNameByYearAuthorFirstpage() {\n        \r\n        String fileNamePattern = \"[year]_[auth]_[firstpage]\";\n        BibEntry entry = new BibEntry();\n        entry.setField( \"author\", \"O. Kitsune\" );\n        entry.setField( \"year\", \"1868\" );\n        entry.setField( \"pages\", \"567-579\" );\n\n        assertEquals(\"1868_Kitsune_567\", FileUtil.createFileNameFromPattern(null, entry, fileNamePattern));\n    }\n","realPath":"src/test/java/org/jabref/logic/util/io/FileUtilTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":203,"status":"B"},{"authorDate":"2017-10-05 01:29:59","commitOrder":1,"curCode":"    public void testGetLinkedDirNameDefaultFullTitle() {\n        \r\n        String fileNamePattern = \"PDF/[year]/[auth]/[bibtexkey] - [fulltitle]\";\n        BibEntry entry = new BibEntry();\n        entry.setCiteKey(\"1234\");\n        entry.setField(\"title\", \"mytitle\");\n        entry.setField(\"year\", \"1998\");\n        entry.setField(\"author\", \"A. ������uth������r and Author, Bete\");\n\n        assertEquals(\"PDF/1998/������uth������r/1234 - mytitle\",\n                FileUtil.createDirNameFromPattern(null, entry, fileNamePattern));\n    }\n","date":"2017-10-05 01:29:59","endLine":428,"groupId":"6509","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testGetLinkedDirNameDefaultFullTitle","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/3a/9a424a3d328a2acec3e02cefdde2dcfd92e35a.src","preCode":"    public void testGetLinkedDirNameDefaultFullTitle() {\n        \r\n        String fileNamePattern = \"PDF/[year]/[auth]/[bibtexkey] - [fulltitle]\";\n        BibEntry entry = new BibEntry();\n        entry.setCiteKey(\"1234\");\n        entry.setField(\"title\", \"mytitle\");\n        entry.setField(\"year\", \"1998\");\n        entry.setField(\"author\", \"A. ������uth������r and Author, Bete\");\n\n        assertEquals(\"PDF/1998/������uth������r/1234 - mytitle\",\n                FileUtil.createDirNameFromPattern(null, entry, fileNamePattern));\n    }\n","realPath":"src/test/java/org/jabref/logic/util/io/FileUtilTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":417,"status":"B"}],"commitId":"effe3349e2dfe8b104ade137f86ef8e2fbee36a5","commitMessage":"@@@Directory pattern bracketed expressions (#3238)\n\n","date":"2017-10-05 01:29:59","modifiedFileCount":"19","status":"B","submitter":"Saulius Gra?ulis"},{"authorTime":"2018-08-16 15:17:32","codes":[{"authorDate":"2018-08-16 15:17:32","commitOrder":2,"curCode":"    void testGetLinkedFileNameByYearAuthorFirstpage() {\n        \r\n        String fileNamePattern = \"[year]_[auth]_[firstpage]\";\n        BibEntry entry = new BibEntry();\n        entry.setField( \"author\", \"O. Kitsune\" );\n        entry.setField( \"year\", \"1868\" );\n        entry.setField( \"pages\", \"567-579\" );\n\n        assertEquals(\"1868_Kitsune_567\", FileUtil.createFileNameFromPattern(null, entry, fileNamePattern));\n    }\n","date":"2018-08-16 15:17:32","endLine":147,"groupId":"3666","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testGetLinkedFileNameByYearAuthorFirstpage","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/28/c764a024f745fdcd6d7247c5fd883523d2026a.src","preCode":"    public void testGetLinkedFileNameByYearAuthorFirstpage() {\n        \r\n        String fileNamePattern = \"[year]_[auth]_[firstpage]\";\n        BibEntry entry = new BibEntry();\n        entry.setField( \"author\", \"O. Kitsune\" );\n        entry.setField( \"year\", \"1868\" );\n        entry.setField( \"pages\", \"567-579\" );\n\n        assertEquals(\"1868_Kitsune_567\", FileUtil.createFileNameFromPattern(null, entry, fileNamePattern));\n    }\n","realPath":"src/test/java/org/jabref/logic/util/io/FileUtilTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":138,"status":"M"},{"authorDate":"2018-08-16 15:17:32","commitOrder":2,"curCode":"    void testGetLinkedDirNameDefaultFullTitle() {\n        \r\n        String fileNamePattern = \"PDF/[year]/[auth]/[bibtexkey] - [fulltitle]\";\n        BibEntry entry = new BibEntry();\n        entry.setCiteKey(\"1234\");\n        entry.setField(\"title\", \"mytitle\");\n        entry.setField(\"year\", \"1998\");\n        entry.setField(\"author\", \"A. ������uth������r and Author, Bete\");\n\n        assertEquals(\"PDF/1998/������uth������r/1234 - mytitle\",\n                FileUtil.createDirNameFromPattern(null, entry, fileNamePattern));\n    }\n","date":"2018-08-16 15:17:32","endLine":366,"groupId":"6509","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testGetLinkedDirNameDefaultFullTitle","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/28/c764a024f745fdcd6d7247c5fd883523d2026a.src","preCode":"    public void testGetLinkedDirNameDefaultFullTitle() {\n        \r\n        String fileNamePattern = \"PDF/[year]/[auth]/[bibtexkey] - [fulltitle]\";\n        BibEntry entry = new BibEntry();\n        entry.setCiteKey(\"1234\");\n        entry.setField(\"title\", \"mytitle\");\n        entry.setField(\"year\", \"1998\");\n        entry.setField(\"author\", \"A. ������uth������r and Author, Bete\");\n\n        assertEquals(\"PDF/1998/������uth������r/1234 - mytitle\",\n                FileUtil.createDirNameFromPattern(null, entry, fileNamePattern));\n    }\n","realPath":"src/test/java/org/jabref/logic/util/io/FileUtilTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":355,"status":"M"}],"commitId":"a880addc0b9a45ad4461cc46ed261ea7df9c812a","commitMessage":"@@@Fix for issue 3959: migrate all tests to JUnit 5 (#4260)\n\n* Update migrate from JUnit 4 to JUnit 5\n\n* Update migrate from JUnit 4 to JUnit 5\n\n* Trying to change git accounts on my laptop\n\n* Trying to change git accounts on my laptop\n\n* Trying to change git accounts on my laptop\n\n* Using static assert methods.\n\n* Migrate from JUnit 4 to JUnit 5\n\n*AuthorListParameterTest.java\n\n* Migrate from JUnit 4 to JUnit 5\n\n*XmpUtilWriterTest.java\n\n* Migrate from JUnit 4 to JUnit 5\n\n*XmpUtilReaderTest.java\n\n* Migrate from JUnit 4 to JUnit 5\n\n*SearchQueryHighlightObservableTest.java\n\n    -did not use MockitoExtension.class as its official version has not been released yet.\n\n* Migrate from JUnit 4 to JUnit 5\n\n*CitationEntryTest.java\n\n* Migrate from JUnit 4 to JUnit 5\n\n*RTFCharsTest.java\n\n* Migrate from JUnit 4 to JUnit 5\n\n*ProtectedTermsLoaderTest.java\n\n    -When running tests.  outputs in command line are different. I don't know if this change is correct.\n\n* Trying to change to a new branch.\n\n* commit_test\n\n* delete my meaningless txt\n\n* Migrate from JUnit 4 to JUnit 5\n\n*AuthorAndToSemicolonReplacerTest.java\n\n* Migrate from JUnit 4 to JUnit 5\n\n*FileDialogConfigurationTest.java\n\n* Migrate from JUnit 4 to JUnit 5\n\n*IntegrityCheckTest.java\n\n* Migrate from JUnit 4 to JUnit 5\n\n*ModsExportFormatTest.java\n\n* Migrate from JUnit 4 to JUnit 5\n\n*AutoSetFileLinksUtilTest.java\n\n* Migrate from JUnit 4 to JUnit 5\n\n*MsBibExportFormatTest.java\n\n* Migrate from JUnit 4 to JUnit 5\n\n*CsvExportFormatTest.java\n\n* Migrate from JUnit 4 to JUnit 5\n\n*HtmlExportFormatTest.java\n\n* Migrate from JUnit 4 to JUnit 5\n\n*HtmlExportFormatTest.java\n\n* Migrate from JUnit 4 to JUnit 5\n\n*RenamePdfCleanupTest.java\n\n* Migrate from JUnit 4 to JUnit 5\n\n*ProtectedTermsListTest.java\n\n* Migrate from JUnit 4 to JUnit 5\n\n*MoveFilesCleanupTest.java\n\n* Migrate from JUnit 4 to JUnit 5\n\n*ImporterTest.java\n\n* Migrate from JUnit 4 to JUnit 5\n\n    *ExporterTest.java\n\n* Try to trigger the Travis CI build.\n\n* Try to trigger the Travis CI build.\n\n* Migrate from JUnit 4 to JUnit 5\n\n* Try to migrate from JUnit 4 to JUnit 5\n    *BibTeXMLExporterTestFiles.java\n        *Test.  not finished\n\n* Roll back to earlier version.\n    *BibTeXMLExporterTestFiles.java\n    *CleanupWorkerTest.java\n\n* Migrate from JUnit 4 to JUnit 5\n    *ImportFormatReaderIntegrationTest.java\n\n* Migrate from JUnit 4 to JUnit 5\n    *MimeTypeDetectorTest.java\n\n* failed to modify CleanupWorkerTest\n\n* failed to modify cleanupWorkTest\n\n* change cleanupWorkerTest to initial\n\n* ***DatabaseTest***\nMigrate from JUnit 4 to JUnit 5\n    *DBMSProcessorTest.java\n        *Wait for the Travis CI\n\n* ***DatabaseTest***\nMigrate from JUnit 4 to JUnit 5\n    *DBMSProcessorTest.java\n        *Wait for the Travis CI\n\n* Migrate from JUnit 4 to JUnit 5\n    *BibTeXMLExporterTestFiles.java\n    *MSBibExportFormatTestFiles.java\n    *All the GUI tests\n\n* Migrate from JUnit 4 to JUnit 5\n    *CleanupWorkerTest.java\n\n    *It seems that worker doesn't work in cleanupRenamePdfRenamesRelativeFile() and cleanupRelativePathsConvertAbsoluteToRelativePath()\n\n* Migrate JUnit 4 to JUnit 5.\n    *AuthorListParameterTest.java\n        -Follow up tp the newest.\n\n* Migrate JUnit 4 to JUnit 5.\n    *CleanupWorkerTest.java\n        -Delete my sout.\n\n* Migrate JUnit 4 to JUnit 5.\n    *EntryTypesTest.java\n        -Just some method name changes.\n\n* Fix part of CleanupWorkerTest.\n    -cleanupRelativePathsConvertAbsoluteToRelativePath() test passed.\n    -The cleanupRenamePdfRenamesRelativeFile() test still failed.\n\n* Migrate and sync.\n    *CiteKeyBasedFileFinderTest.java\n\n* Migrate.\n    *FileUtilTest.java\nPartly migrate.\n    *ModsExportFormatTestFiles.java\n\n* Fix CleanupWorkerTest.java\n\n* Fix .travis.yml\n\n* Remove unnecessary @Rule.\n    *IntegrityCheckTest.java\n\n* AuxParserTest.java\n\n* BibtexParserTest.java\n\n* EntryComparatorTest.java\n\n* Migrate JUnit 4 to JUnit 5 -------by 1160300229\n\n* Migrate. Some tasks by my team members.\n    *LinkedFileViewModelTest.java\n    *RecursiveTreeItemTest.java\n    *UndoTest.java\n    *EntryComparatorTest.java\n    *MakeLabelWithDatabaseTest.java\n    *MakeLabelWithoutDatabaseTest.java\n    *CleanupUrlFormatterTest.java\n    *BibtexParserTest.java\n    *MedlinePlainImporterTest.java\n    *SilverPlatterImporterTest.java\n    *EntryLinkCheckerTest.java\n    *LocalizationKeyTest.java\n    *JabRefPreferencesTest.java\n\n* Fix 1160300302's error.\n\n* Remove unnecessary \"public\".\n    *AuxParserTest.java\n\n* fix architecture test by removing check for public make some classes default visibility level\n\n* Fix \"cannot find files\" problem in JUnit 4.\n\n* Migrate to JUnit 5.\n    *BibTeXMLExporterTestFiles.java\n    *ModsExportFormatTestFiles.java\n    *MSBibExportFormatTestFiles.java\n\n* Change the slash direction.\n    *BibTeXMLExporterTestFiles.java\n    *ModsExportFormatTestFiles.java\n    *MSBibExportFormatTestFiles.java\n\n* fix resolving of paths in msbibexporterpath update junit and correct resource dirs in gradle\n\n* Fix the path issue in\n    *BibTeXMLExporterTestFiles.java\n    *ModsExportFormatTestFiles.java\n\n* Disable the failing exporter tests and change the build.gradle\n\n* Fix the parent folder issue by make every path to their child once.\n    -You can see in the code. :)\n\n* Fix some minor issues.\n    -Use the NIO methods in MoveFilesCleanupTest.java\n\n    -Use toAbsolutePath() method in RenamePdfCleanupTest.java\n\n    -Rename \"tempFilename\" to \"tempFilePath\" in BibTeXMLExporterTestFiles.java\n\n* include main/java in resources as well convert legalcy file methods to nio\n","date":"2018-08-16 15:17:32","modifiedFileCount":"59","status":"M","submitter":"Yichen Sun"},{"authorTime":"2019-08-02 15:20:10","codes":[{"authorDate":"2019-08-02 15:20:10","commitOrder":3,"curCode":"    void testGetLinkedFileNameByYearAuthorFirstpage() {\n        \r\n        String fileNamePattern = \"[year]_[auth]_[firstpage]\";\n        BibEntry entry = new BibEntry();\n        entry.setField(StandardField.AUTHOR, \"O. Kitsune\");\n        entry.setField(StandardField.YEAR, \"1868\");\n        entry.setField(StandardField.PAGES, \"567-579\");\n\n        assertEquals(\"1868_Kitsune_567\", FileUtil.createFileNameFromPattern(null, entry, fileNamePattern));\n    }\n","date":"2019-08-02 15:20:10","endLine":151,"groupId":"9094","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testGetLinkedFileNameByYearAuthorFirstpage","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/80/3eec50de07b2d3b2ea21fb8800f53dfffa8d6d.src","preCode":"    void testGetLinkedFileNameByYearAuthorFirstpage() {\n        \r\n        String fileNamePattern = \"[year]_[auth]_[firstpage]\";\n        BibEntry entry = new BibEntry();\n        entry.setField(\"author\", \"O. Kitsune\");\n        entry.setField(\"year\", \"1868\");\n        entry.setField(\"pages\", \"567-579\");\n\n        assertEquals(\"1868_Kitsune_567\", FileUtil.createFileNameFromPattern(null, entry, fileNamePattern));\n    }\n","realPath":"src/test/java/org/jabref/logic/util/io/FileUtilTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":142,"status":"M"},{"authorDate":"2019-08-02 15:20:10","commitOrder":3,"curCode":"    void testGetLinkedDirNameDefaultFullTitle() {\n        \r\n        String fileNamePattern = \"PDF/[year]/[auth]/[bibtexkey] - [fulltitle]\";\n        BibEntry entry = new BibEntry();\n        entry.setCiteKey(\"1234\");\n        entry.setField(StandardField.TITLE, \"mytitle\");\n        entry.setField(StandardField.YEAR, \"1998\");\n        entry.setField(StandardField.AUTHOR, \"A. ������uth������r and Author, Bete\");\n\n        assertEquals(\"PDF/1998/������uth������r/1234 - mytitle\",\n                FileUtil.createDirNameFromPattern(null, entry, fileNamePattern));\n    }\n","date":"2019-08-02 15:20:10","endLine":370,"groupId":"10431","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testGetLinkedDirNameDefaultFullTitle","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/80/3eec50de07b2d3b2ea21fb8800f53dfffa8d6d.src","preCode":"    void testGetLinkedDirNameDefaultFullTitle() {\n        \r\n        String fileNamePattern = \"PDF/[year]/[auth]/[bibtexkey] - [fulltitle]\";\n        BibEntry entry = new BibEntry();\n        entry.setCiteKey(\"1234\");\n        entry.setField(\"title\", \"mytitle\");\n        entry.setField(\"year\", \"1998\");\n        entry.setField(\"author\", \"A. ������uth������r and Author, Bete\");\n\n        assertEquals(\"PDF/1998/������uth������r/1234 - mytitle\",\n                FileUtil.createDirNameFromPattern(null, entry, fileNamePattern));\n    }\n","realPath":"src/test/java/org/jabref/logic/util/io/FileUtilTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":359,"status":"M"}],"commitId":"4b39b78e4afcd6c36b385f5c46f1d9a4eac2e29b","commitMessage":"@@@Move to extended enums for fields and entry types (#5148)\n\n* Introduce interface for fields\n\n* Continue using fields interface instead of strings\n\n* Introduce OrFields class\n\n* Move FieldProperty\n\n* Convert entry types to extended enum\n\n* Start fixing build\n\n* Fix build\n\n* Start fixing tests\n\n* Everything compiles again\n\n* Make model tests pass\n\n* Fix most tests\n\n* Fix build\n\n* Fix a few more tests\n\n* Fix a few more tests\n\n* Fix a few more tests\n\n* Fix a few more tests\n\n* Fix checkstyle issues\n\n* Fix more tests\n\n* Fix more tests\n\n* Disable test that fails on CI\n\n* Disable test that fails on CI\n","date":"2019-08-02 15:20:10","modifiedFileCount":"439","status":"M","submitter":"Tobias Diez"},{"authorTime":"2020-06-15 13:41:17","codes":[{"authorDate":"2019-08-02 15:20:10","commitOrder":4,"curCode":"    void testGetLinkedFileNameByYearAuthorFirstpage() {\n        \r\n        String fileNamePattern = \"[year]_[auth]_[firstpage]\";\n        BibEntry entry = new BibEntry();\n        entry.setField(StandardField.AUTHOR, \"O. Kitsune\");\n        entry.setField(StandardField.YEAR, \"1868\");\n        entry.setField(StandardField.PAGES, \"567-579\");\n\n        assertEquals(\"1868_Kitsune_567\", FileUtil.createFileNameFromPattern(null, entry, fileNamePattern));\n    }\n","date":"2019-08-02 15:20:10","endLine":151,"groupId":"9094","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"testGetLinkedFileNameByYearAuthorFirstpage","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/80/3eec50de07b2d3b2ea21fb8800f53dfffa8d6d.src","preCode":"    void testGetLinkedFileNameByYearAuthorFirstpage() {\n        \r\n        String fileNamePattern = \"[year]_[auth]_[firstpage]\";\n        BibEntry entry = new BibEntry();\n        entry.setField(StandardField.AUTHOR, \"O. Kitsune\");\n        entry.setField(StandardField.YEAR, \"1868\");\n        entry.setField(StandardField.PAGES, \"567-579\");\n\n        assertEquals(\"1868_Kitsune_567\", FileUtil.createFileNameFromPattern(null, entry, fileNamePattern));\n    }\n","realPath":"src/test/java/org/jabref/logic/util/io/FileUtilTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":142,"status":"N"},{"authorDate":"2020-06-15 13:41:17","commitOrder":4,"curCode":"    void testGetLinkedDirNameDefaultFullTitle() {\n        \r\n        String fileDirPattern = \"PDF/[year]/[auth]/[bibtexkey] - [fulltitle]\";\n        BibEntry entry = new BibEntry();\n        entry.setCiteKey(\"1234\");\n        entry.setField(StandardField.TITLE, \"mytitle\");\n        entry.setField(StandardField.YEAR, \"1998\");\n        entry.setField(StandardField.AUTHOR, \"A. ������uth������r and Author, Bete\");\n\n        assertEquals(\"PDF/1998/������uth������r/1234 - mytitle\", FileUtil.createDirNameFromPattern(null, entry, fileDirPattern));\n    }\n","date":"2020-06-15 13:41:17","endLine":368,"groupId":"10431","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"testGetLinkedDirNameDefaultFullTitle","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/2e/f874ba744fdd4b8b294d9f547e96e1580dd297.src","preCode":"    void testGetLinkedDirNameDefaultFullTitle() {\n        \r\n        String fileNamePattern = \"PDF/[year]/[auth]/[bibtexkey] - [fulltitle]\";\n        BibEntry entry = new BibEntry();\n        entry.setCiteKey(\"1234\");\n        entry.setField(StandardField.TITLE, \"mytitle\");\n        entry.setField(StandardField.YEAR, \"1998\");\n        entry.setField(StandardField.AUTHOR, \"A. ������uth������r and Author, Bete\");\n\n        assertEquals(\"PDF/1998/������uth������r/1234 - mytitle\",\n                FileUtil.createDirNameFromPattern(null, entry, fileNamePattern));\n    }\n","realPath":"src/test/java/org/jabref/logic/util/io/FileUtilTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":358,"status":"M"}],"commitId":"ed96faa350ebb32c504aede1440879bd9c781557","commitMessage":"@@@Merge pull request #6608 from JabRef/fixFileLinkDL\n\nFix downloaded files moved to citation key dir","date":"2020-06-15 13:41:17","modifiedFileCount":"3","status":"M","submitter":"Christoph"},{"authorTime":"2020-09-08 21:34:34","codes":[{"authorDate":"2019-08-02 15:20:10","commitOrder":5,"curCode":"    void testGetLinkedFileNameByYearAuthorFirstpage() {\n        \r\n        String fileNamePattern = \"[year]_[auth]_[firstpage]\";\n        BibEntry entry = new BibEntry();\n        entry.setField(StandardField.AUTHOR, \"O. Kitsune\");\n        entry.setField(StandardField.YEAR, \"1868\");\n        entry.setField(StandardField.PAGES, \"567-579\");\n\n        assertEquals(\"1868_Kitsune_567\", FileUtil.createFileNameFromPattern(null, entry, fileNamePattern));\n    }\n","date":"2019-08-02 15:20:10","endLine":151,"groupId":"10471","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"testGetLinkedFileNameByYearAuthorFirstpage","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/80/3eec50de07b2d3b2ea21fb8800f53dfffa8d6d.src","preCode":"    void testGetLinkedFileNameByYearAuthorFirstpage() {\n        \r\n        String fileNamePattern = \"[year]_[auth]_[firstpage]\";\n        BibEntry entry = new BibEntry();\n        entry.setField(StandardField.AUTHOR, \"O. Kitsune\");\n        entry.setField(StandardField.YEAR, \"1868\");\n        entry.setField(StandardField.PAGES, \"567-579\");\n\n        assertEquals(\"1868_Kitsune_567\", FileUtil.createFileNameFromPattern(null, entry, fileNamePattern));\n    }\n","realPath":"src/test/java/org/jabref/logic/util/io/FileUtilTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":142,"status":"N"},{"authorDate":"2020-09-08 21:34:34","commitOrder":5,"curCode":"    void testGetLinkedDirNameDefaultFullTitle() {\n        String fileDirPattern = \"PDF/[year]/[auth]/[citationkey] - [fulltitle]\";\n        BibEntry entry = new BibEntry();\n        entry.setCitationKey(\"1234\");\n        entry.setField(StandardField.TITLE, \"mytitle\");\n        entry.setField(StandardField.YEAR, \"1998\");\n        entry.setField(StandardField.AUTHOR, \"A. ������uth������r and Author, Bete\");\n\n        assertEquals(\"PDF/1998/������uth������r/1234 - mytitle\", FileUtil.createDirNameFromPattern(null, entry, fileDirPattern));\n    }\n","date":"2020-09-08 21:34:34","endLine":361,"groupId":"10471","id":10,"instanceNumber":2,"isCurCommit":1,"methodName":"testGetLinkedDirNameDefaultFullTitle","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/f1/b9d1f76d2a5d09e526fd21b713e20cf7f4995e.src","preCode":"    void testGetLinkedDirNameDefaultFullTitle() {\n        \r\n        String fileDirPattern = \"PDF/[year]/[auth]/[bibtexkey] - [fulltitle]\";\n        BibEntry entry = new BibEntry();\n        entry.setCiteKey(\"1234\");\n        entry.setField(StandardField.TITLE, \"mytitle\");\n        entry.setField(StandardField.YEAR, \"1998\");\n        entry.setField(StandardField.AUTHOR, \"A. ������uth������r and Author, Bete\");\n\n        assertEquals(\"PDF/1998/������uth������r/1234 - mytitle\", FileUtil.createDirNameFromPattern(null, entry, fileDirPattern));\n    }\n","realPath":"src/test/java/org/jabref/logic/util/io/FileUtilTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":352,"status":"M"}],"commitId":"6dec1747d8a1c89f6c62fc1d1939d88411f17eba","commitMessage":"@@@Complete rebranding of `bibtexkey` as `citationkey` (#6875)\n\n","date":"2020-09-08 21:34:34","modifiedFileCount":"127","status":"M","submitter":"Tobias Diez"}]
