[{"authorTime":"2017-02-17 05:41:47","codes":[{"authorDate":"2017-02-17 05:41:47","commitOrder":1,"curCode":"    private void whileFunction(BstEntry context) {\n        if (stack.size() < 2) {\n            throw new VMException(\"Not enough operands on stack for operation while$\");\n        }\n        Object f2 = stack.pop();\n        Object f1 = stack.pop();\n\n        if (!((f1 instanceof Identifier) || (f1 instanceof Tree))\n                && ((f2 instanceof Identifier) || (f2 instanceof Tree))) {\n            throw new VMException(\"Expecting two functions for while$.\");\n        }\n\n        do {\n            VM.this.executeInContext(f1, context);\n\n            Object i = stack.pop();\n            if (!(i instanceof Integer)) {\n                throw new VMException(\"First parameter to while has to return an integer but was \" + i);\n            }\n            if ((Integer) i <= 0) {\n                break;\n            }\n            VM.this.executeInContext(f2, context);\n        } while (true);\n    }\n","date":"2017-02-17 05:41:47","endLine":722,"groupId":"5090","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"whileFunction","params":"(BstEntrycontext)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/16/2384ff21b8091f2f8e131bcf7a565cd1c11add.src","preCode":"    private void whileFunction(BstEntry context) {\n        if (stack.size() < 2) {\n            throw new VMException(\"Not enough operands on stack for operation while$\");\n        }\n        Object f2 = stack.pop();\n        Object f1 = stack.pop();\n\n        if (!((f1 instanceof Identifier) || (f1 instanceof Tree))\n                && ((f2 instanceof Identifier) || (f2 instanceof Tree))) {\n            throw new VMException(\"Expecting two functions for while$.\");\n        }\n\n        do {\n            VM.this.executeInContext(f1, context);\n\n            Object i = stack.pop();\n            if (!(i instanceof Integer)) {\n                throw new VMException(\"First parameter to while has to return an integer but was \" + i);\n            }\n            if ((Integer) i <= 0) {\n                break;\n            }\n            VM.this.executeInContext(f2, context);\n        } while (true);\n    }\n","realPath":"src/main/java/org/jabref/logic/bst/VM.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":698,"status":"B"},{"authorDate":"2017-02-17 05:41:47","commitOrder":1,"curCode":"    public void execute(BstEntry context) {\n        Stack<Object> stack = vm.getStack();\n\n        if (stack.size() < 2) {\n            throw new VMException(\"Not enough operands on stack for operation change.case$\");\n        }\n\n        Object o1 = stack.pop();\n        if (!((o1 instanceof String) && (((String) o1).length() == 1))) {\n            throw new VMException(\"A format string of length 1 is needed for change.case$\");\n        }\n\n        Object o2 = stack.pop();\n        if (!(o2 instanceof String)) {\n            throw new VMException(\"A string is needed as second parameter for change.case$\");\n        }\n\n        char format = ((String) o1).toLowerCase().charAt(0);\n        String s = (String) o2;\n\n        stack.push(BibtexCaseChanger.changeCase(s, FORMAT_MODE.getFormatModeForBSTFormat(format)));\n    }\n","date":"2017-02-17 05:41:47","endLine":64,"groupId":"11036","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"execute","params":"(BstEntrycontext)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/f2/bc76cd613a6fe2301d2ef8f17b6232019175fe.src","preCode":"    public void execute(BstEntry context) {\n        Stack<Object> stack = vm.getStack();\n\n        if (stack.size() < 2) {\n            throw new VMException(\"Not enough operands on stack for operation change.case$\");\n        }\n\n        Object o1 = stack.pop();\n        if (!((o1 instanceof String) && (((String) o1).length() == 1))) {\n            throw new VMException(\"A format string of length 1 is needed for change.case$\");\n        }\n\n        Object o2 = stack.pop();\n        if (!(o2 instanceof String)) {\n            throw new VMException(\"A string is needed as second parameter for change.case$\");\n        }\n\n        char format = ((String) o1).toLowerCase().charAt(0);\n        String s = (String) o2;\n\n        stack.push(BibtexCaseChanger.changeCase(s, FORMAT_MODE.getFormatModeForBSTFormat(format)));\n    }\n","realPath":"src/main/java/org/jabref/logic/bst/ChangeCaseFunction.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":43,"status":"B"}],"commitId":"ebbeb1d249edf7134abf92d24c2031ae54d19881","commitMessage":"@@@Merge branch 'net-sf-to-org-jabref'\n","date":"2017-02-17 05:41:47","modifiedFileCount":"1","status":"B","submitter":"Oliver Kopp"},{"authorTime":"2017-03-06 20:35:47","codes":[{"authorDate":"2017-02-17 05:41:47","commitOrder":2,"curCode":"    private void whileFunction(BstEntry context) {\n        if (stack.size() < 2) {\n            throw new VMException(\"Not enough operands on stack for operation while$\");\n        }\n        Object f2 = stack.pop();\n        Object f1 = stack.pop();\n\n        if (!((f1 instanceof Identifier) || (f1 instanceof Tree))\n                && ((f2 instanceof Identifier) || (f2 instanceof Tree))) {\n            throw new VMException(\"Expecting two functions for while$.\");\n        }\n\n        do {\n            VM.this.executeInContext(f1, context);\n\n            Object i = stack.pop();\n            if (!(i instanceof Integer)) {\n                throw new VMException(\"First parameter to while has to return an integer but was \" + i);\n            }\n            if ((Integer) i <= 0) {\n                break;\n            }\n            VM.this.executeInContext(f2, context);\n        } while (true);\n    }\n","date":"2017-02-17 05:41:47","endLine":722,"groupId":"101036","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"whileFunction","params":"(BstEntrycontext)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/16/2384ff21b8091f2f8e131bcf7a565cd1c11add.src","preCode":"    private void whileFunction(BstEntry context) {\n        if (stack.size() < 2) {\n            throw new VMException(\"Not enough operands on stack for operation while$\");\n        }\n        Object f2 = stack.pop();\n        Object f1 = stack.pop();\n\n        if (!((f1 instanceof Identifier) || (f1 instanceof Tree))\n                && ((f2 instanceof Identifier) || (f2 instanceof Tree))) {\n            throw new VMException(\"Expecting two functions for while$.\");\n        }\n\n        do {\n            VM.this.executeInContext(f1, context);\n\n            Object i = stack.pop();\n            if (!(i instanceof Integer)) {\n                throw new VMException(\"First parameter to while has to return an integer but was \" + i);\n            }\n            if ((Integer) i <= 0) {\n                break;\n            }\n            VM.this.executeInContext(f2, context);\n        } while (true);\n    }\n","realPath":"src/main/java/org/jabref/logic/bst/VM.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":698,"status":"N"},{"authorDate":"2017-03-06 20:35:47","commitOrder":2,"curCode":"    public void execute(BstEntry context) {\n        Stack<Object> stack = vm.getStack();\n\n        if (stack.size() < 2) {\n            throw new VMException(\"Not enough operands on stack for operation change.case$\");\n        }\n\n        Object o1 = stack.pop();\n        if (!((o1 instanceof String) && (((String) o1).length() == 1))) {\n            throw new VMException(\"A format string of length 1 is needed for change.case$\");\n        }\n\n        Object o2 = stack.pop();\n        if (!(o2 instanceof String)) {\n            throw new VMException(\"A string is needed as second parameter for change.case$\");\n        }\n\n        char format = ((String) o1).toLowerCase(Locale.ROOT).charAt(0);\n        String s = (String) o2;\n\n        stack.push(BibtexCaseChanger.changeCase(s, FORMAT_MODE.getFormatModeForBSTFormat(format)));\n    }\n","date":"2017-03-06 20:35:47","endLine":65,"groupId":"101036","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"execute","params":"(BstEntrycontext)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/ab/602be398a217447a73d1ecd183ef73584c09a2.src","preCode":"    public void execute(BstEntry context) {\n        Stack<Object> stack = vm.getStack();\n\n        if (stack.size() < 2) {\n            throw new VMException(\"Not enough operands on stack for operation change.case$\");\n        }\n\n        Object o1 = stack.pop();\n        if (!((o1 instanceof String) && (((String) o1).length() == 1))) {\n            throw new VMException(\"A format string of length 1 is needed for change.case$\");\n        }\n\n        Object o2 = stack.pop();\n        if (!(o2 instanceof String)) {\n            throw new VMException(\"A string is needed as second parameter for change.case$\");\n        }\n\n        char format = ((String) o1).toLowerCase().charAt(0);\n        String s = (String) o2;\n\n        stack.push(BibtexCaseChanger.changeCase(s, FORMAT_MODE.getFormatModeForBSTFormat(format)));\n    }\n","realPath":"src/main/java/org/jabref/logic/bst/ChangeCaseFunction.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":44,"status":"M"}],"commitId":"7a1b15abb58016b40e21a72124edf9da17cd08f2","commitMessage":"@@@Merge pull request #2584 from JabRef/locales\n\nAdded Locale.ROOT to toUpper/toLower Methods","date":"2017-03-06 20:35:47","modifiedFileCount":"63","status":"M","submitter":"Linus Dietz"}]
