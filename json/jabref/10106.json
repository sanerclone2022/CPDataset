[{"authorTime":"2020-11-26 00:41:30","codes":[{"authorDate":"2020-11-26 00:41:30","commitOrder":1,"curCode":"    void fetcherResultsPersistedCorrectly() throws Exception {\n        List<QueryResult> mockResults = getMockResults();\n\n        getTestStudyRepository().persist(mockResults);\n\n        assertEquals(getArXivQuantumMockResults(), getTestStudyRepository().getFetcherResultEntries(\"Quantum\", \"ArXiv\").getEntries());\n        assertEquals(getSpringerQuantumMockResults(), getTestStudyRepository().getFetcherResultEntries(\"Quantum\", \"Springer\").getEntries());\n        assertEquals(getSpringerCloudComputingMockResults(), getTestStudyRepository().getFetcherResultEntries(\"Cloud Computing\", \"Springer\").getEntries());\n    }\n","date":"2020-11-26 00:41:30","endLine":165,"groupId":"8551","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"fetcherResultsPersistedCorrectly","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/8a/69c6d7a011dfc002a2d5bb3d5da06c2310c6b5.src","preCode":"    void fetcherResultsPersistedCorrectly() throws Exception {\n        List<QueryResult> mockResults = getMockResults();\n\n        getTestStudyRepository().persist(mockResults);\n\n        assertEquals(getArXivQuantumMockResults(), getTestStudyRepository().getFetcherResultEntries(\"Quantum\", \"ArXiv\").getEntries());\n        assertEquals(getSpringerQuantumMockResults(), getTestStudyRepository().getFetcherResultEntries(\"Quantum\", \"Springer\").getEntries());\n        assertEquals(getSpringerCloudComputingMockResults(), getTestStudyRepository().getFetcherResultEntries(\"Cloud Computing\", \"Springer\").getEntries());\n    }\n","realPath":"src/test/java/org/jabref/logic/crawler/StudyRepositoryTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":157,"status":"B"},{"authorDate":"2020-11-26 00:41:30","commitOrder":1,"curCode":"    void mergedResultsPersistedCorrectly() throws Exception {\n        List<QueryResult> mockResults = getMockResults();\n        List<BibEntry> expected = new ArrayList<>();\n        expected.addAll(getArXivQuantumMockResults());\n        expected.add(getSpringerQuantumMockResults().get(1));\n        expected.add(getSpringerQuantumMockResults().get(2));\n\n        getTestStudyRepository().persist(mockResults);\n\n        \r\n        assertEquals(expected, getTestStudyRepository().getQueryResultEntries(\"Quantum\").getEntries());\n        assertEquals(getSpringerCloudComputingMockResults(), getTestStudyRepository().getQueryResultEntries(\"Cloud Computing\").getEntries());\n    }\n","date":"2020-11-26 00:41:30","endLine":180,"groupId":"3965","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"mergedResultsPersistedCorrectly","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/8a/69c6d7a011dfc002a2d5bb3d5da06c2310c6b5.src","preCode":"    void mergedResultsPersistedCorrectly() throws Exception {\n        List<QueryResult> mockResults = getMockResults();\n        List<BibEntry> expected = new ArrayList<>();\n        expected.addAll(getArXivQuantumMockResults());\n        expected.add(getSpringerQuantumMockResults().get(1));\n        expected.add(getSpringerQuantumMockResults().get(2));\n\n        getTestStudyRepository().persist(mockResults);\n\n        \r\n        assertEquals(expected, getTestStudyRepository().getQueryResultEntries(\"Quantum\").getEntries());\n        assertEquals(getSpringerCloudComputingMockResults(), getTestStudyRepository().getQueryResultEntries(\"Cloud Computing\").getEntries());\n    }\n","realPath":"src/test/java/org/jabref/logic/crawler/StudyRepositoryTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":168,"status":"B"}],"commitId":"b19c3e4700f82d90a804a5cf3467aedf00385dad","commitMessage":"@@@Enable automated cross library search using a cross library query lan? (#7124)\n\n* Enable automated cross library search using a cross library query language.\n\nSigned-off-by: Dominik Voigt <dominik.ingo.voigt@gmail.com>\n\n* Pull Global upward through constructor.\n\n* Pull Globals and ImportFormatPreferences up through constructor\n\nSigned-off-by: Dominik Voigt <dominik.ingo.voigt@gmail.com>\n\n* Integrate requested changes and fix architecture tests by correcting test classes\n\nSigned-off-by: Dominik Voigt <dominik.ingo.voigt@gmail.com>\n\n* Remove unused imports\n\nSigned-off-by: Dominik Voigt <dominik.ingo.voigt@gmail.com>","date":"2020-11-26 00:41:30","modifiedFileCount":"6","status":"B","submitter":"Dominik Voigt"},{"authorTime":"2021-01-27 05:40:44","codes":[{"authorDate":"2021-01-27 05:40:44","commitOrder":2,"curCode":"    void fetcherResultsPersistedCorrectly() throws Exception {\n        List<QueryResult> mockResults = getMockResults();\n\n        studyRepository.persist(mockResults);\n\n        assertEquals(getArXivQuantumMockResults(), getTestStudyRepository().getFetcherResultEntries(\"Quantum\", \"ArXiv\").getEntries());\n        assertEquals(getSpringerQuantumMockResults(), getTestStudyRepository().getFetcherResultEntries(\"Quantum\", \"Springer\").getEntries());\n        assertEquals(getSpringerCloudComputingMockResults(), getTestStudyRepository().getFetcherResultEntries(\"Cloud Computing\", \"Springer\").getEntries());\n    }\n","date":"2021-01-27 05:40:44","endLine":139,"groupId":"10106","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"fetcherResultsPersistedCorrectly","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/8b/ba87c2a38ff63042a453e43331bb6246aee308.src","preCode":"    void fetcherResultsPersistedCorrectly() throws Exception {\n        List<QueryResult> mockResults = getMockResults();\n\n        getTestStudyRepository().persist(mockResults);\n\n        assertEquals(getArXivQuantumMockResults(), getTestStudyRepository().getFetcherResultEntries(\"Quantum\", \"ArXiv\").getEntries());\n        assertEquals(getSpringerQuantumMockResults(), getTestStudyRepository().getFetcherResultEntries(\"Quantum\", \"Springer\").getEntries());\n        assertEquals(getSpringerCloudComputingMockResults(), getTestStudyRepository().getFetcherResultEntries(\"Cloud Computing\", \"Springer\").getEntries());\n    }\n","realPath":"src/test/java/org/jabref/logic/crawler/StudyRepositoryTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":131,"status":"M"},{"authorDate":"2021-01-27 05:40:44","commitOrder":2,"curCode":"    void mergedResultsPersistedCorrectly() throws Exception {\n        List<QueryResult> mockResults = getMockResults();\n        List<BibEntry> expected = new ArrayList<>();\n        expected.addAll(getArXivQuantumMockResults());\n        expected.add(getSpringerQuantumMockResults().get(1));\n        expected.add(getSpringerQuantumMockResults().get(2));\n\n        studyRepository.persist(mockResults);\n\n        \r\n        assertEquals(expected, getTestStudyRepository().getQueryResultEntries(\"Quantum\").getEntries());\n        assertEquals(getSpringerCloudComputingMockResults(), getTestStudyRepository().getQueryResultEntries(\"Cloud Computing\").getEntries());\n    }\n","date":"2021-01-27 05:40:44","endLine":154,"groupId":"10106","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"mergedResultsPersistedCorrectly","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/8b/ba87c2a38ff63042a453e43331bb6246aee308.src","preCode":"    void mergedResultsPersistedCorrectly() throws Exception {\n        List<QueryResult> mockResults = getMockResults();\n        List<BibEntry> expected = new ArrayList<>();\n        expected.addAll(getArXivQuantumMockResults());\n        expected.add(getSpringerQuantumMockResults().get(1));\n        expected.add(getSpringerQuantumMockResults().get(2));\n\n        getTestStudyRepository().persist(mockResults);\n\n        \r\n        assertEquals(expected, getTestStudyRepository().getQueryResultEntries(\"Quantum\").getEntries());\n        assertEquals(getSpringerCloudComputingMockResults(), getTestStudyRepository().getQueryResultEntries(\"Cloud Computing\").getEntries());\n    }\n","realPath":"src/test/java/org/jabref/logic/crawler/StudyRepositoryTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":142,"status":"M"}],"commitId":"7117b6197aa6f69f6b8b25f9452e875c9051046b","commitMessage":"@@@Change format for study definition to yaml (#7126)\n\n","date":"2021-01-27 05:40:44","modifiedFileCount":"6","status":"M","submitter":"Dominik Voigt"}]
