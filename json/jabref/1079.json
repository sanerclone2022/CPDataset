[{"authorTime":"2017-09-14 19:50:11","codes":[{"authorDate":"2017-09-14 19:50:11","commitOrder":1,"curCode":"    public void keywordGroupsAreNotRemovedFromEntriesOnDelete() {;\n        String groupName = \"A\";\n        WordKeywordGroup group = new WordKeywordGroup(groupName, GroupHierarchyType.INCLUDING, \"keywords\", groupName, true, ',', true);\n        BibEntry entry = new BibEntry();\n        databaseContext.getDatabase().insertEntry(entry);\n\n        GroupNodeViewModel model = new GroupNodeViewModel(databaseContext, stateManager, taskExecutor, group);\n        model.addEntriesToGroup(databaseContext.getEntries());\n        groupTree.removeGroupsAndSubGroupsFromEntries(model);\n\n        assertEquals(groupName, entry.getField(FieldName.KEYWORDS).get());\n    }\n","date":"2017-09-14 19:50:11","endLine":69,"groupId":"4143","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"keywordGroupsAreNotRemovedFromEntriesOnDelete","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/66/63c6acd6467d4d08906a7271d6bfdd27fd07ba.src","preCode":"    public void keywordGroupsAreNotRemovedFromEntriesOnDelete() {;\n        String groupName = \"A\";\n        WordKeywordGroup group = new WordKeywordGroup(groupName, GroupHierarchyType.INCLUDING, \"keywords\", groupName, true, ',', true);\n        BibEntry entry = new BibEntry();\n        databaseContext.getDatabase().insertEntry(entry);\n\n        GroupNodeViewModel model = new GroupNodeViewModel(databaseContext, stateManager, taskExecutor, group);\n        model.addEntriesToGroup(databaseContext.getEntries());\n        groupTree.removeGroupsAndSubGroupsFromEntries(model);\n\n        assertEquals(groupName, entry.getField(FieldName.KEYWORDS).get());\n    }\n","realPath":"src/test/java/org/jabref/gui/groups/GroupTreeViewModelTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":58,"status":"B"},{"authorDate":"2017-09-14 19:50:11","commitOrder":1,"curCode":"    public void entriesAreAddedCorrectly() {;\n        String groupName = \"group\";\n        ExplicitGroup group = new ExplicitGroup(groupName, GroupHierarchyType.INDEPENDENT,',');\n        BibEntry entry = new BibEntry();\n        databaseContext.getDatabase().insertEntry(entry);\n\n        GroupNodeViewModel model = new GroupNodeViewModel(databaseContext, stateManager, taskExecutor, group);\n        model.addEntriesToGroup(databaseContext.getEntries());\n\n        assertEquals(databaseContext.getEntries(), model.getGroupNode().getEntriesInGroup(databaseContext.getEntries()));\n        assertEquals(groupName, entry.getField(FieldName.GROUPS).get());\n    }\n","date":"2017-09-14 19:50:11","endLine":166,"groupId":"911","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"entriesAreAddedCorrectly","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/d9/e53c6e5abf2fd0f2861f70326bcdad2bad5668.src","preCode":"    public void entriesAreAddedCorrectly() {;\n        String groupName = \"group\";\n        ExplicitGroup group = new ExplicitGroup(groupName, GroupHierarchyType.INDEPENDENT,',');\n        BibEntry entry = new BibEntry();\n        databaseContext.getDatabase().insertEntry(entry);\n\n        GroupNodeViewModel model = new GroupNodeViewModel(databaseContext, stateManager, taskExecutor, group);\n        model.addEntriesToGroup(databaseContext.getEntries());\n\n        assertEquals(databaseContext.getEntries(), model.getGroupNode().getEntriesInGroup(databaseContext.getEntries()));\n        assertEquals(groupName, entry.getField(FieldName.GROUPS).get());\n    }\n","realPath":"src/test/java/org/jabref/gui/groups/GroupNodeViewModelTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":155,"status":"B"}],"commitId":"be41624a37b3b9376973d05357c292a3514b5f2f","commitMessage":"@@@Merge pull request #3203 from JabRef/fix-groupremove (fix #3190)\n\n","date":"2017-09-14 19:50:11","modifiedFileCount":"6","status":"B","submitter":"Linus Dietz"},{"authorTime":"2018-03-30 04:28:01","codes":[{"authorDate":"2018-03-30 04:28:01","commitOrder":2,"curCode":"    public void keywordGroupsAreNotRemovedFromEntriesOnDelete() {\n        String groupName = \"A\";\n        WordKeywordGroup group = new WordKeywordGroup(groupName, GroupHierarchyType.INCLUDING, \"keywords\", groupName, true, ',', true);\n        BibEntry entry = new BibEntry();\n        databaseContext.getDatabase().insertEntry(entry);\n\n        GroupNodeViewModel model = new GroupNodeViewModel(databaseContext, stateManager, taskExecutor, group);\n        model.addEntriesToGroup(databaseContext.getEntries());\n        groupTree.removeGroupsAndSubGroupsFromEntries(model);\n\n        assertEquals(groupName, entry.getField(FieldName.KEYWORDS).get());\n    }\n","date":"2018-03-30 04:28:01","endLine":69,"groupId":"4143","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"keywordGroupsAreNotRemovedFromEntriesOnDelete","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/4a/594140bd66b25bc44d4f0945e22ec2869028b0.src","preCode":"    public void keywordGroupsAreNotRemovedFromEntriesOnDelete() {;\n        String groupName = \"A\";\n        WordKeywordGroup group = new WordKeywordGroup(groupName, GroupHierarchyType.INCLUDING, \"keywords\", groupName, true, ',', true);\n        BibEntry entry = new BibEntry();\n        databaseContext.getDatabase().insertEntry(entry);\n\n        GroupNodeViewModel model = new GroupNodeViewModel(databaseContext, stateManager, taskExecutor, group);\n        model.addEntriesToGroup(databaseContext.getEntries());\n        groupTree.removeGroupsAndSubGroupsFromEntries(model);\n\n        assertEquals(groupName, entry.getField(FieldName.KEYWORDS).get());\n    }\n","realPath":"src/test/java/org/jabref/gui/groups/GroupTreeViewModelTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":58,"status":"M"},{"authorDate":"2018-03-30 04:28:01","commitOrder":2,"curCode":"    public void entriesAreAddedCorrectly() {\n        String groupName = \"group\";\n        ExplicitGroup group = new ExplicitGroup(groupName, GroupHierarchyType.INDEPENDENT,',');\n        BibEntry entry = new BibEntry();\n        databaseContext.getDatabase().insertEntry(entry);\n\n        GroupNodeViewModel model = new GroupNodeViewModel(databaseContext, stateManager, taskExecutor, group);\n        model.addEntriesToGroup(databaseContext.getEntries());\n\n        assertEquals(databaseContext.getEntries(), model.getGroupNode().getEntriesInGroup(databaseContext.getEntries()));\n        assertEquals(groupName, entry.getField(FieldName.GROUPS).get());\n    }\n","date":"2018-03-30 04:28:01","endLine":165,"groupId":"911","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"entriesAreAddedCorrectly","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/4e/d4d4658859f79fef7d78aad810e1f336599e78.src","preCode":"    public void entriesAreAddedCorrectly() {;\n        String groupName = \"group\";\n        ExplicitGroup group = new ExplicitGroup(groupName, GroupHierarchyType.INDEPENDENT,',');\n        BibEntry entry = new BibEntry();\n        databaseContext.getDatabase().insertEntry(entry);\n\n        GroupNodeViewModel model = new GroupNodeViewModel(databaseContext, stateManager, taskExecutor, group);\n        model.addEntriesToGroup(databaseContext.getEntries());\n\n        assertEquals(databaseContext.getEntries(), model.getGroupNode().getEntriesInGroup(databaseContext.getEntries()));\n        assertEquals(groupName, entry.getField(FieldName.GROUPS).get());\n    }\n","realPath":"src/test/java/org/jabref/gui/groups/GroupNodeViewModelTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":154,"status":"M"}],"commitId":"63cfb4a26571dc338be6f59e7e3a80229db9b3ed","commitMessage":"@@@Merge pull request #3899 from JabRef/code-style\n\nCode style issues","date":"2018-03-30 04:28:01","modifiedFileCount":"10","status":"M","submitter":"Stefan Kolb"},{"authorTime":"2018-08-20 04:33:45","codes":[{"authorDate":"2018-08-20 04:33:45","commitOrder":3,"curCode":"    public void keywordGroupsAreNotRemovedFromEntriesOnDelete() {\n        String groupName = \"A\";\n        WordKeywordGroup group = new WordKeywordGroup(groupName, GroupHierarchyType.INCLUDING, \"keywords\", groupName, true, ',', true);\n        BibEntry entry = new BibEntry();\n        databaseContext.getDatabase().insertEntry(entry);\n\n        GroupNodeViewModel model = new GroupNodeViewModel(databaseContext, stateManager, taskExecutor, group, new CustomLocalDragboard());\n        model.addEntriesToGroup(databaseContext.getEntries());\n        groupTree.removeGroupsAndSubGroupsFromEntries(model);\n\n        assertEquals(groupName, entry.getField(FieldName.KEYWORDS).get());\n    }\n","date":"2018-08-20 04:33:45","endLine":70,"groupId":"324","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"keywordGroupsAreNotRemovedFromEntriesOnDelete","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/af/a4ad53eba0d78cb2eadd0d3b44954a2dddff7c.src","preCode":"    public void keywordGroupsAreNotRemovedFromEntriesOnDelete() {\n        String groupName = \"A\";\n        WordKeywordGroup group = new WordKeywordGroup(groupName, GroupHierarchyType.INCLUDING, \"keywords\", groupName, true, ',', true);\n        BibEntry entry = new BibEntry();\n        databaseContext.getDatabase().insertEntry(entry);\n\n        GroupNodeViewModel model = new GroupNodeViewModel(databaseContext, stateManager, taskExecutor, group);\n        model.addEntriesToGroup(databaseContext.getEntries());\n        groupTree.removeGroupsAndSubGroupsFromEntries(model);\n\n        assertEquals(groupName, entry.getField(FieldName.KEYWORDS).get());\n    }\n","realPath":"src/test/java/org/jabref/gui/groups/GroupTreeViewModelTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":59,"status":"M"},{"authorDate":"2018-08-20 04:33:45","commitOrder":3,"curCode":"    public void entriesAreAddedCorrectly() {\n        String groupName = \"group\";\n        ExplicitGroup group = new ExplicitGroup(groupName, GroupHierarchyType.INDEPENDENT,',');\n        BibEntry entry = new BibEntry();\n        databaseContext.getDatabase().insertEntry(entry);\n\n        GroupNodeViewModel model = new GroupNodeViewModel(databaseContext, stateManager, taskExecutor, group, new CustomLocalDragboard());\n        model.addEntriesToGroup(databaseContext.getEntries());\n\n        assertEquals(databaseContext.getEntries(), model.getGroupNode().getEntriesInGroup(databaseContext.getEntries()));\n        assertEquals(groupName, entry.getField(FieldName.GROUPS).get());\n    }\n","date":"2018-08-20 04:33:45","endLine":166,"groupId":"911","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"entriesAreAddedCorrectly","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/05/941f3a4ab04330e0487b1bf8c3acc94558f8ac.src","preCode":"    public void entriesAreAddedCorrectly() {\n        String groupName = \"group\";\n        ExplicitGroup group = new ExplicitGroup(groupName, GroupHierarchyType.INDEPENDENT,',');\n        BibEntry entry = new BibEntry();\n        databaseContext.getDatabase().insertEntry(entry);\n\n        GroupNodeViewModel model = new GroupNodeViewModel(databaseContext, stateManager, taskExecutor, group);\n        model.addEntriesToGroup(databaseContext.getEntries());\n\n        assertEquals(databaseContext.getEntries(), model.getGroupNode().getEntriesInGroup(databaseContext.getEntries()));\n        assertEquals(groupName, entry.getField(FieldName.GROUPS).get());\n    }\n","realPath":"src/test/java/org/jabref/gui/groups/GroupNodeViewModelTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":155,"status":"M"}],"commitId":"1f14795b20eea9be44a0614afe5b8a2bd86a7c0e","commitMessage":"@@@Implement drag and drop for maintable (#3765)\n\n* Implement drag and drop for maintable\nTODO: DataFormat - Whole entries?\n\n* Use BibtexWriter to serialize all entries and parser to deserialize\n\n* try further around with serializing and deserializing\n\n* Add new Dataformat for List<BibEntry>\nAdd LocalDragboard\n\n* Add DragAndDropDataFormat\n\n* drag and drop to groups works now\n\n* Prepare File Dropping\n\n* No reordering of items in the maintable via drag and drop\nRename getEntriesFiltered to better distinguish it\n\n* add basic support for adding droppped file to entry\n\n* add check for transfer mode move and link\n\n* Add link to file handler\nAdd files and move them to file directory via cleanup operation\nRemove unsused parameter LayoutFormatterPreferences from  Cleanup\n\n* add dialog for importing entries from xmp\n\n* prepare pdf content importer code\nAdd missing keybinding\n\n* remove no longer needed loop\n\n* add XMPPreferences to ImportFormatPreferences\nadd dialog to show if new entrie should be imported or file linked\n\n* when no modifier is avaiable show Dialog if xmp entries found\n\n* rework copy options using clipboard manager\n\n* TODO: Find out why  dnd  doesn't work on preview panel\n\n* fix checkstyle and compile error\n\n* enable dnd on preview pane\n\n* add method for opening or import db\n\n* add l10n\n\n* checkstyle\n\n* Open bib files dragged to tab pane\n\n* handle import of dropped bib files\nworks only if table is not empty.  otherwise it will be just opened\nCall timestamp update method\nfix merge erros\n\n* add drag and drop copy handler\nadd debug output on gesture target\n\n* fix event propagation\n\n* fix checkstyle\n\n* literals first in comparison\n\n* add l10n for error message\n\n* remove old swing related dnd stuff\nUse local dragboard for transfering entries\nfix checkstyle\nexpand group node on drag over\n\n* fix merge error\n\n* fix NPE discovered on linux when row.getItem is null\n\n* Put Dragboard Instance into Gui Globals\nremove old TransferableBibtexEntry\n\n* checkstyle\n\n* fix checkstyle\n\n* fix l10n\n\n* fix copying on linux\nfix moving if not pdf\n\n* remove old drag and drop popup classes\nremove some println\n\n* fix import order\n\n* extract part to logic\n\n* extract files adding and content importer to own class\n\n* some cleanups\nreworked debug logging\npass customlocaldragboard as parameter to groups\n\n* Add fileUtil method for checking if it's a bib file\nmove from logic to gui because of the externalFileType stuff\nadd property to speedup rendering pdf content\nmove and rename\n\n* fix l10n\n\n* cleanup\n\n* add methods for putting and getting bib entries of localdragboard\nclear clipboard on put\nfix drag and drop to groups by adding clipboard stuff\n\n* add javadoc\n\n* Fix build\n","date":"2018-08-20 04:33:45","modifiedFileCount":"36","status":"M","submitter":"Christoph"},{"authorTime":"2019-08-02 15:20:10","codes":[{"authorDate":"2019-08-02 15:20:10","commitOrder":4,"curCode":"    public void keywordGroupsAreNotRemovedFromEntriesOnDelete() {\n        String groupName = \"A\";\n        WordKeywordGroup group = new WordKeywordGroup(groupName, GroupHierarchyType.INCLUDING, StandardField.KEYWORDS, groupName, true, ',', true);\n        BibEntry entry = new BibEntry();\n        databaseContext.getDatabase().insertEntry(entry);\n\n        GroupNodeViewModel model = new GroupNodeViewModel(databaseContext, stateManager, taskExecutor, group, new CustomLocalDragboard());\n        model.addEntriesToGroup(databaseContext.getEntries());\n        groupTree.removeGroupsAndSubGroupsFromEntries(model);\n\n        assertEquals(groupName, entry.getField(StandardField.KEYWORDS).get());\n    }\n","date":"2019-08-02 15:20:10","endLine":71,"groupId":"324","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"keywordGroupsAreNotRemovedFromEntriesOnDelete","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/6e/90070a69b9092a5e1fe7189934ce9b108df02b.src","preCode":"    public void keywordGroupsAreNotRemovedFromEntriesOnDelete() {\n        String groupName = \"A\";\n        WordKeywordGroup group = new WordKeywordGroup(groupName, GroupHierarchyType.INCLUDING, \"keywords\", groupName, true, ',', true);\n        BibEntry entry = new BibEntry();\n        databaseContext.getDatabase().insertEntry(entry);\n\n        GroupNodeViewModel model = new GroupNodeViewModel(databaseContext, stateManager, taskExecutor, group, new CustomLocalDragboard());\n        model.addEntriesToGroup(databaseContext.getEntries());\n        groupTree.removeGroupsAndSubGroupsFromEntries(model);\n\n        assertEquals(groupName, entry.getField(FieldName.KEYWORDS).get());\n    }\n","realPath":"src/test/java/org/jabref/gui/groups/GroupTreeViewModelTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":60,"status":"M"},{"authorDate":"2019-08-02 15:20:10","commitOrder":4,"curCode":"    public void entriesAreAddedCorrectly() {\n        String groupName = \"group\";\n        ExplicitGroup group = new ExplicitGroup(groupName, GroupHierarchyType.INDEPENDENT, ',');\n        BibEntry entry = new BibEntry();\n        databaseContext.getDatabase().insertEntry(entry);\n\n        GroupNodeViewModel model = new GroupNodeViewModel(databaseContext, stateManager, taskExecutor, group, new CustomLocalDragboard());\n        model.addEntriesToGroup(databaseContext.getEntries());\n\n        assertEquals(databaseContext.getEntries(), model.getGroupNode().getEntriesInGroup(databaseContext.getEntries()));\n        assertEquals(groupName, entry.getField(InternalField.GROUPS).get());\n    }\n","date":"2019-08-02 15:20:10","endLine":167,"groupId":"911","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"entriesAreAddedCorrectly","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/da/cd31ece007e0a6e9eb59b8749e030d0bfa50cc.src","preCode":"    public void entriesAreAddedCorrectly() {\n        String groupName = \"group\";\n        ExplicitGroup group = new ExplicitGroup(groupName, GroupHierarchyType.INDEPENDENT, ',');\n        BibEntry entry = new BibEntry();\n        databaseContext.getDatabase().insertEntry(entry);\n\n        GroupNodeViewModel model = new GroupNodeViewModel(databaseContext, stateManager, taskExecutor, group, new CustomLocalDragboard());\n        model.addEntriesToGroup(databaseContext.getEntries());\n\n        assertEquals(databaseContext.getEntries(), model.getGroupNode().getEntriesInGroup(databaseContext.getEntries()));\n        assertEquals(groupName, entry.getField(FieldName.GROUPS).get());\n    }\n","realPath":"src/test/java/org/jabref/gui/groups/GroupNodeViewModelTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":156,"status":"M"}],"commitId":"4b39b78e4afcd6c36b385f5c46f1d9a4eac2e29b","commitMessage":"@@@Move to extended enums for fields and entry types (#5148)\n\n* Introduce interface for fields\n\n* Continue using fields interface instead of strings\n\n* Introduce OrFields class\n\n* Move FieldProperty\n\n* Convert entry types to extended enum\n\n* Start fixing build\n\n* Fix build\n\n* Start fixing tests\n\n* Everything compiles again\n\n* Make model tests pass\n\n* Fix most tests\n\n* Fix build\n\n* Fix a few more tests\n\n* Fix a few more tests\n\n* Fix a few more tests\n\n* Fix a few more tests\n\n* Fix checkstyle issues\n\n* Fix more tests\n\n* Fix more tests\n\n* Disable test that fails on CI\n\n* Disable test that fails on CI\n","date":"2019-08-02 15:20:10","modifiedFileCount":"439","status":"M","submitter":"Tobias Diez"},{"authorTime":"2020-04-22 20:30:40","codes":[{"authorDate":"2020-04-22 20:30:40","commitOrder":5,"curCode":"    void keywordGroupsAreNotRemovedFromEntriesOnDelete() {\n        String groupName = \"A\";\n        WordKeywordGroup group = new WordKeywordGroup(groupName, GroupHierarchyType.INCLUDING, StandardField.KEYWORDS, groupName, true, ',', true);\n        BibEntry entry = new BibEntry();\n        databaseContext.getDatabase().insertEntry(entry);\n\n        GroupNodeViewModel model = new GroupNodeViewModel(databaseContext, stateManager, taskExecutor, group, new CustomLocalDragboard());\n        model.addEntriesToGroup(databaseContext.getEntries());\n        groupTree.removeGroupsAndSubGroupsFromEntries(model);\n\n        assertEquals(groupName, entry.getField(StandardField.KEYWORDS).get());\n    }\n","date":"2020-04-22 20:30:40","endLine":71,"groupId":"324","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"keywordGroupsAreNotRemovedFromEntriesOnDelete","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/7e/b1c213f4f1b47f9f933e250b53a2dc9a48b606.src","preCode":"    public void keywordGroupsAreNotRemovedFromEntriesOnDelete() {\n        String groupName = \"A\";\n        WordKeywordGroup group = new WordKeywordGroup(groupName, GroupHierarchyType.INCLUDING, StandardField.KEYWORDS, groupName, true, ',', true);\n        BibEntry entry = new BibEntry();\n        databaseContext.getDatabase().insertEntry(entry);\n\n        GroupNodeViewModel model = new GroupNodeViewModel(databaseContext, stateManager, taskExecutor, group, new CustomLocalDragboard());\n        model.addEntriesToGroup(databaseContext.getEntries());\n        groupTree.removeGroupsAndSubGroupsFromEntries(model);\n\n        assertEquals(groupName, entry.getField(StandardField.KEYWORDS).get());\n    }\n","realPath":"src/test/java/org/jabref/gui/groups/GroupTreeViewModelTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":60,"status":"M"},{"authorDate":"2020-04-22 20:30:40","commitOrder":5,"curCode":"    void entriesAreAddedCorrectly() {\n        String groupName = \"group\";\n        ExplicitGroup group = new ExplicitGroup(groupName, GroupHierarchyType.INDEPENDENT, ',');\n        BibEntry entry = new BibEntry();\n        databaseContext.getDatabase().insertEntry(entry);\n\n        GroupNodeViewModel model = new GroupNodeViewModel(databaseContext, stateManager, taskExecutor, group, new CustomLocalDragboard());\n        model.addEntriesToGroup(databaseContext.getEntries());\n\n        assertEquals(databaseContext.getEntries(), model.getGroupNode().getEntriesInGroup(databaseContext.getEntries()));\n        assertEquals(groupName, entry.getField(StandardField.GROUPS).get());\n    }\n","date":"2020-04-22 20:30:40","endLine":167,"groupId":"911","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"entriesAreAddedCorrectly","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/c3/bfb662aaf21b1c97bdebe8c217ebc257c5d8e0.src","preCode":"    public void entriesAreAddedCorrectly() {\n        String groupName = \"group\";\n        ExplicitGroup group = new ExplicitGroup(groupName, GroupHierarchyType.INDEPENDENT, ',');\n        BibEntry entry = new BibEntry();\n        databaseContext.getDatabase().insertEntry(entry);\n\n        GroupNodeViewModel model = new GroupNodeViewModel(databaseContext, stateManager, taskExecutor, group, new CustomLocalDragboard());\n        model.addEntriesToGroup(databaseContext.getEntries());\n\n        assertEquals(databaseContext.getEntries(), model.getGroupNode().getEntriesInGroup(databaseContext.getEntries()));\n        assertEquals(groupName, entry.getField(InternalField.GROUPS).get());\n    }\n","realPath":"src/test/java/org/jabref/gui/groups/GroupNodeViewModelTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":156,"status":"M"}],"commitId":"c7d77670154c1b09d8115013c8f3b4175906219e","commitMessage":"@@@Improve performance for loading files (#6332)\n\n* Improve performance for loading files\n\n- Performance improvements around groups\n- Remove detection of duplicate ID when inserting entries (it's not really possible to create two entries with the same except if you use `setId` manually)\n- Remove detection of duplicate bibtex keys when opening a file (the result was not used and we have a integrity check for it)\n- Use EnumMap instead of HashMap to cache fields as keywords (which is only used for Keyword and Groups fields anyway)\n- Fix bug where latex code was displayed in the maintable\n- Lazy init of source tab\n\n* Fix tests compilation\n\n* Include feedback","date":"2020-04-22 20:30:40","modifiedFileCount":"37","status":"M","submitter":"Tobias Diez"},{"authorTime":"2020-06-03 04:19:54","codes":[{"authorDate":"2020-06-03 04:19:54","commitOrder":6,"curCode":"    void keywordGroupsAreNotRemovedFromEntriesOnDelete() {\n        String groupName = \"A\";\n        WordKeywordGroup group = new WordKeywordGroup(groupName, GroupHierarchyType.INCLUDING, StandardField.KEYWORDS, groupName, true, ',', true);\n        BibEntry entry = new BibEntry();\n        databaseContext.getDatabase().insertEntry(entry);\n\n        GroupNodeViewModel model = new GroupNodeViewModel(databaseContext, stateManager, taskExecutor, group, new CustomLocalDragboard(), mock(PreferencesService.class));\n        model.addEntriesToGroup(databaseContext.getEntries());\n        groupTree.removeGroupsAndSubGroupsFromEntries(model);\n\n        assertEquals(groupName, entry.getField(StandardField.KEYWORDS).get());\n    }\n","date":"2020-06-03 04:19:54","endLine":71,"groupId":"1079","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"keywordGroupsAreNotRemovedFromEntriesOnDelete","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/0c/bf15a1bde8534e21a3d6662adc28ecfcf979cf.src","preCode":"    void keywordGroupsAreNotRemovedFromEntriesOnDelete() {\n        String groupName = \"A\";\n        WordKeywordGroup group = new WordKeywordGroup(groupName, GroupHierarchyType.INCLUDING, StandardField.KEYWORDS, groupName, true, ',', true);\n        BibEntry entry = new BibEntry();\n        databaseContext.getDatabase().insertEntry(entry);\n\n        GroupNodeViewModel model = new GroupNodeViewModel(databaseContext, stateManager, taskExecutor, group, new CustomLocalDragboard());\n        model.addEntriesToGroup(databaseContext.getEntries());\n        groupTree.removeGroupsAndSubGroupsFromEntries(model);\n\n        assertEquals(groupName, entry.getField(StandardField.KEYWORDS).get());\n    }\n","realPath":"src/test/java/org/jabref/gui/groups/GroupTreeViewModelTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":60,"status":"M"},{"authorDate":"2020-06-03 04:19:54","commitOrder":6,"curCode":"    void entriesAreAddedCorrectly() {\n        String groupName = \"group\";\n        ExplicitGroup group = new ExplicitGroup(groupName, GroupHierarchyType.INDEPENDENT, ',');\n        BibEntry entry = new BibEntry();\n        databaseContext.getDatabase().insertEntry(entry);\n\n        GroupNodeViewModel model = new GroupNodeViewModel(databaseContext, stateManager, taskExecutor, group, new CustomLocalDragboard(), mock(PreferencesService.class));\n        model.addEntriesToGroup(databaseContext.getEntries());\n\n        assertEquals(databaseContext.getEntries(), model.getGroupNode().getEntriesInGroup(databaseContext.getEntries()));\n        assertEquals(groupName, entry.getField(StandardField.GROUPS).get());\n    }\n","date":"2020-06-03 04:19:54","endLine":168,"groupId":"1079","id":12,"instanceNumber":2,"isCurCommit":1,"methodName":"entriesAreAddedCorrectly","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/dd/07a08fc38ede357311be355294975b77a8fbe0.src","preCode":"    void entriesAreAddedCorrectly() {\n        String groupName = \"group\";\n        ExplicitGroup group = new ExplicitGroup(groupName, GroupHierarchyType.INDEPENDENT, ',');\n        BibEntry entry = new BibEntry();\n        databaseContext.getDatabase().insertEntry(entry);\n\n        GroupNodeViewModel model = new GroupNodeViewModel(databaseContext, stateManager, taskExecutor, group, new CustomLocalDragboard());\n        model.addEntriesToGroup(databaseContext.getEntries());\n\n        assertEquals(databaseContext.getEntries(), model.getGroupNode().getEntriesInGroup(databaseContext.getEntries()));\n        assertEquals(groupName, entry.getField(StandardField.GROUPS).get());\n    }\n","realPath":"src/test/java/org/jabref/gui/groups/GroupNodeViewModelTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":157,"status":"M"}],"commitId":"46fd96b55bcf9e7c042478cae1b367a654787b5c","commitMessage":"@@@Fix Group hit counter calculation preferences (#6554)\n\nCo-authored-by: Gennadiy Stakhovskiy <GennadiyStakhovskiy@gmail.com>\nCo-authored-by: Tobias Diez <tobiasdiez@gmx.de>","date":"2020-06-03 04:19:54","modifiedFileCount":"4","status":"M","submitter":"Carl Christian Snethlage"}]
