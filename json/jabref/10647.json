[{"authorTime":"2019-06-18 16:01:47","codes":[{"authorDate":"2019-06-18 16:01:47","commitOrder":1,"curCode":"    public void testDuplicateFiles() throws URISyntaxException {\n        Path texFile = Paths.get(TexBibEntriesResolverTest.class.getResource(\"paper.tex\").toURI());\n        TexParserResult parserResult = new DefaultTexParser().parse(texFile);\n\n        TexBibEntriesResolverResult crossingResult = new TexBibEntriesResolver(database).resolveKeys(parserResult);\n        TexBibEntriesResolverResult expectedCrossingResult = new TexBibEntriesResolverResult(parserResult);\n\n        expectedCrossingResult.insertEntry(database, DARWIN);\n        expectedCrossingResult.insertEntry(database, EINSTEIN);\n\n        assertEquals(expectedCrossingResult, crossingResult);\n    }\n","date":"2019-07-14 18:25:59","endLine":121,"groupId":"2562","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testDuplicateFiles","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/3d/33d7639bbc8d96387891f6658501327b125332.src","preCode":"    public void testDuplicateFiles() throws URISyntaxException {\n        Path texFile = Paths.get(TexBibEntriesResolverTest.class.getResource(\"paper.tex\").toURI());\n        TexParserResult parserResult = new DefaultTexParser().parse(texFile);\n\n        TexBibEntriesResolverResult crossingResult = new TexBibEntriesResolver(database).resolveKeys(parserResult);\n        TexBibEntriesResolverResult expectedCrossingResult = new TexBibEntriesResolverResult(parserResult);\n\n        expectedCrossingResult.insertEntry(database, DARWIN);\n        expectedCrossingResult.insertEntry(database, EINSTEIN);\n\n        assertEquals(expectedCrossingResult, crossingResult);\n    }\n","realPath":"src/test/java/org/jabref/logic/texparser/TexBibEntriesResolverTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":110,"status":"B"},{"authorDate":"2019-06-18 16:01:47","commitOrder":1,"curCode":"    public void testUnknownKey() throws URISyntaxException {\n        Path texFile = Paths.get(TexBibEntriesResolverTest.class.getResource(\"unknown_key.tex\").toURI());\n        TexParserResult parserResult = new DefaultTexParser().parse(texFile);\n\n        TexBibEntriesResolverResult crossingResult = new TexBibEntriesResolver(database).resolveKeys(parserResult);\n        TexBibEntriesResolverResult expectedCrossingResult = new TexBibEntriesResolverResult(parserResult);\n\n        expectedCrossingResult.insertEntry(database, DARWIN);\n        expectedCrossingResult.insertEntry(database, EINSTEIN);\n        expectedCrossingResult.addUnresolvedKey(UNKNOWN);\n\n        assertEquals(expectedCrossingResult, crossingResult);\n    }\n","date":"2019-07-14 18:25:59","endLine":136,"groupId":"2562","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testUnknownKey","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/3d/33d7639bbc8d96387891f6658501327b125332.src","preCode":"    public void testUnknownKey() throws URISyntaxException {\n        Path texFile = Paths.get(TexBibEntriesResolverTest.class.getResource(\"unknown_key.tex\").toURI());\n        TexParserResult parserResult = new DefaultTexParser().parse(texFile);\n\n        TexBibEntriesResolverResult crossingResult = new TexBibEntriesResolver(database).resolveKeys(parserResult);\n        TexBibEntriesResolverResult expectedCrossingResult = new TexBibEntriesResolverResult(parserResult);\n\n        expectedCrossingResult.insertEntry(database, DARWIN);\n        expectedCrossingResult.insertEntry(database, EINSTEIN);\n        expectedCrossingResult.addUnresolvedKey(UNKNOWN);\n\n        assertEquals(expectedCrossingResult, crossingResult);\n    }\n","realPath":"src/test/java/org/jabref/logic/texparser/TexBibEntriesResolverTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":124,"status":"B"}],"commitId":"18dfb8cdb9bb385a843449d8d428f1a87da547f1","commitMessage":"@@@Rename CrossingKeys to TexBibEntriesResolver and fix minor issues\n","date":"2019-07-14 18:25:59","modifiedFileCount":"3","status":"B","submitter":"David M?ndez"},{"authorTime":"2019-08-25 17:38:10","codes":[{"authorDate":"2019-08-25 17:38:10","commitOrder":2,"curCode":"    public void testDuplicateFiles() throws URISyntaxException {\n        Path texFile = Paths.get(TexBibEntriesResolverTest.class.getResource(\"paper.tex\").toURI());\n        TexParserResult parserResult = new DefaultTexParser().parse(texFile);\n\n        TexBibEntriesResolverResult crossingResult = new TexBibEntriesResolver(database, importFormatPreferences, fileMonitor).resolve(parserResult);\n        TexBibEntriesResolverResult expectedCrossingResult = new TexBibEntriesResolverResult(parserResult);\n\n        assertEquals(expectedCrossingResult, crossingResult);\n    }\n","date":"2019-08-25 17:38:10","endLine":133,"groupId":"9526","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testDuplicateFiles","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/09/27fa430834fb77400385a9e11cb459c4e5ace7.src","preCode":"    public void testDuplicateFiles() throws URISyntaxException {\n        Path texFile = Paths.get(TexBibEntriesResolverTest.class.getResource(\"paper.tex\").toURI());\n        TexParserResult parserResult = new DefaultTexParser().parse(texFile);\n\n        TexBibEntriesResolverResult crossingResult = new TexBibEntriesResolver(database).resolveKeys(parserResult);\n        TexBibEntriesResolverResult expectedCrossingResult = new TexBibEntriesResolverResult(parserResult);\n\n        expectedCrossingResult.insertEntry(database, DARWIN);\n        expectedCrossingResult.insertEntry(database, EINSTEIN);\n\n        assertEquals(expectedCrossingResult, crossingResult);\n    }\n","realPath":"src/test/java/org/jabref/logic/texparser/TexBibEntriesResolverTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":125,"status":"M"},{"authorDate":"2019-08-25 17:38:10","commitOrder":2,"curCode":"    public void testUnknownKey() throws URISyntaxException {\n        Path texFile = Paths.get(TexBibEntriesResolverTest.class.getResource(\"unknown_key.tex\").toURI());\n        TexParserResult parserResult = new DefaultTexParser().parse(texFile);\n\n        TexBibEntriesResolverResult crossingResult = new TexBibEntriesResolver(database, importFormatPreferences, fileMonitor).resolve(parserResult);\n        TexBibEntriesResolverResult expectedCrossingResult = new TexBibEntriesResolverResult(parserResult);\n\n        assertEquals(expectedCrossingResult, crossingResult);\n    }\n","date":"2019-08-25 17:38:10","endLine":144,"groupId":"9526","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testUnknownKey","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/09/27fa430834fb77400385a9e11cb459c4e5ace7.src","preCode":"    public void testUnknownKey() throws URISyntaxException {\n        Path texFile = Paths.get(TexBibEntriesResolverTest.class.getResource(\"unknown_key.tex\").toURI());\n        TexParserResult parserResult = new DefaultTexParser().parse(texFile);\n\n        TexBibEntriesResolverResult crossingResult = new TexBibEntriesResolver(database).resolveKeys(parserResult);\n        TexBibEntriesResolverResult expectedCrossingResult = new TexBibEntriesResolverResult(parserResult);\n\n        expectedCrossingResult.insertEntry(database, DARWIN);\n        expectedCrossingResult.insertEntry(database, EINSTEIN);\n        expectedCrossingResult.addUnresolvedKey(UNKNOWN);\n\n        assertEquals(expectedCrossingResult, crossingResult);\n    }\n","realPath":"src/test/java/org/jabref/logic/texparser/TexBibEntriesResolverTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":136,"status":"M"}],"commitId":"f58a5e4ed1858bf27a49fbbf9628c158f0bbe22c","commitMessage":"@@@Merge pull request #5192 from davidemdot/latexintegration-importfoundentries\n\nAdd import feature to LaTeX Citations Search","date":"2019-08-25 17:38:10","modifiedFileCount":"13","status":"M","submitter":"Christoph"},{"authorTime":"2020-03-06 17:57:43","codes":[{"authorDate":"2020-03-06 17:57:43","commitOrder":3,"curCode":"    public void testDuplicateFiles() throws URISyntaxException {\n        Path texFile = Paths.get(TexBibEntriesResolverTest.class.getResource(\"paper.tex\").toURI());\n        LatexParserResult parserResult = new DefaultLatexParser().parse(texFile);\n\n        LatexBibEntriesResolverResult crossingResult = new TexBibEntriesResolver(database, importFormatPreferences, fileMonitor).resolve(parserResult);\n        LatexBibEntriesResolverResult expectedCrossingResult = new LatexBibEntriesResolverResult(parserResult);\n\n        assertEquals(expectedCrossingResult, crossingResult);\n    }\n","date":"2020-03-06 17:57:43","endLine":133,"groupId":"9526","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testDuplicateFiles","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/cd/8dce92474d72c78f741ce23ae460fb77d27acf.src","preCode":"    public void testDuplicateFiles() throws URISyntaxException {\n        Path texFile = Paths.get(TexBibEntriesResolverTest.class.getResource(\"paper.tex\").toURI());\n        TexParserResult parserResult = new DefaultTexParser().parse(texFile);\n\n        TexBibEntriesResolverResult crossingResult = new TexBibEntriesResolver(database, importFormatPreferences, fileMonitor).resolve(parserResult);\n        TexBibEntriesResolverResult expectedCrossingResult = new TexBibEntriesResolverResult(parserResult);\n\n        assertEquals(expectedCrossingResult, crossingResult);\n    }\n","realPath":"src/test/java/org/jabref/logic/texparser/TexBibEntriesResolverTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":125,"status":"M"},{"authorDate":"2020-03-06 17:57:43","commitOrder":3,"curCode":"    public void testUnknownKey() throws URISyntaxException {\n        Path texFile = Paths.get(TexBibEntriesResolverTest.class.getResource(\"unknown_key.tex\").toURI());\n        LatexParserResult parserResult = new DefaultLatexParser().parse(texFile);\n\n        LatexBibEntriesResolverResult crossingResult = new TexBibEntriesResolver(database, importFormatPreferences, fileMonitor).resolve(parserResult);\n        LatexBibEntriesResolverResult expectedCrossingResult = new LatexBibEntriesResolverResult(parserResult);\n\n        assertEquals(expectedCrossingResult, crossingResult);\n    }\n","date":"2020-03-06 17:57:43","endLine":144,"groupId":"9526","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testUnknownKey","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/cd/8dce92474d72c78f741ce23ae460fb77d27acf.src","preCode":"    public void testUnknownKey() throws URISyntaxException {\n        Path texFile = Paths.get(TexBibEntriesResolverTest.class.getResource(\"unknown_key.tex\").toURI());\n        TexParserResult parserResult = new DefaultTexParser().parse(texFile);\n\n        TexBibEntriesResolverResult crossingResult = new TexBibEntriesResolver(database, importFormatPreferences, fileMonitor).resolve(parserResult);\n        TexBibEntriesResolverResult expectedCrossingResult = new TexBibEntriesResolverResult(parserResult);\n\n        assertEquals(expectedCrossingResult, crossingResult);\n    }\n","realPath":"src/test/java/org/jabref/logic/texparser/TexBibEntriesResolverTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":136,"status":"M"}],"commitId":"9c0fa85c4ab1653f1654427db2a41c0d166ce20a","commitMessage":"@@@Code: Tex --> Latex (in the context of ParseLatex) (#6019)\n\n","date":"2020-03-06 17:57:43","modifiedFileCount":"6","status":"M","submitter":"Oliver Kopp"},{"authorTime":"2020-04-30 17:10:13","codes":[{"authorDate":"2020-04-30 17:10:13","commitOrder":4,"curCode":"    public void testDuplicateFiles() throws URISyntaxException {\n        Path texFile = Path.of(TexBibEntriesResolverTest.class.getResource(\"paper.tex\").toURI());\n        LatexParserResult parserResult = new DefaultLatexParser().parse(texFile);\n\n        LatexBibEntriesResolverResult crossingResult = new TexBibEntriesResolver(database, importFormatPreferences, fileMonitor).resolve(parserResult);\n        LatexBibEntriesResolverResult expectedCrossingResult = new LatexBibEntriesResolverResult(parserResult);\n\n        assertEquals(expectedCrossingResult, crossingResult);\n    }\n","date":"2020-04-30 17:10:13","endLine":132,"groupId":"9526","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"testDuplicateFiles","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/3a/91846bf716c6a062a8a67f3e7cd9ee3c521f90.src","preCode":"    public void testDuplicateFiles() throws URISyntaxException {\n        Path texFile = Paths.get(TexBibEntriesResolverTest.class.getResource(\"paper.tex\").toURI());\n        LatexParserResult parserResult = new DefaultLatexParser().parse(texFile);\n\n        LatexBibEntriesResolverResult crossingResult = new TexBibEntriesResolver(database, importFormatPreferences, fileMonitor).resolve(parserResult);\n        LatexBibEntriesResolverResult expectedCrossingResult = new LatexBibEntriesResolverResult(parserResult);\n\n        assertEquals(expectedCrossingResult, crossingResult);\n    }\n","realPath":"src/test/java/org/jabref/logic/texparser/TexBibEntriesResolverTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":124,"status":"M"},{"authorDate":"2020-04-30 17:10:13","commitOrder":4,"curCode":"    public void testUnknownKey() throws URISyntaxException {\n        Path texFile = Path.of(TexBibEntriesResolverTest.class.getResource(\"unknown_key.tex\").toURI());\n        LatexParserResult parserResult = new DefaultLatexParser().parse(texFile);\n\n        LatexBibEntriesResolverResult crossingResult = new TexBibEntriesResolver(database, importFormatPreferences, fileMonitor).resolve(parserResult);\n        LatexBibEntriesResolverResult expectedCrossingResult = new LatexBibEntriesResolverResult(parserResult);\n\n        assertEquals(expectedCrossingResult, crossingResult);\n    }\n","date":"2020-04-30 17:10:13","endLine":143,"groupId":"9526","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"testUnknownKey","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/3a/91846bf716c6a062a8a67f3e7cd9ee3c521f90.src","preCode":"    public void testUnknownKey() throws URISyntaxException {\n        Path texFile = Paths.get(TexBibEntriesResolverTest.class.getResource(\"unknown_key.tex\").toURI());\n        LatexParserResult parserResult = new DefaultLatexParser().parse(texFile);\n\n        LatexBibEntriesResolverResult crossingResult = new TexBibEntriesResolver(database, importFormatPreferences, fileMonitor).resolve(parserResult);\n        LatexBibEntriesResolverResult expectedCrossingResult = new LatexBibEntriesResolverResult(parserResult);\n\n        assertEquals(expectedCrossingResult, crossingResult);\n    }\n","realPath":"src/test/java/org/jabref/logic/texparser/TexBibEntriesResolverTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":135,"status":"M"}],"commitId":"862078a4db316cfd15bd77be68d3d2b010feab3b","commitMessage":"@@@Fixes #6357: File directory (#6377)\n\n* Fixes #6357: File directory\n\nBug was introduced in https://github.com/JabRef/jabref/commit/1b03f039aa4abf0812a3a8ae0ba248c08fdb39a3.\n\n* Fix tests\n\n* Replace Paths.get\n\n* Fix code style","date":"2020-04-30 17:10:13","modifiedFileCount":"110","status":"M","submitter":"Tobias Diez"},{"authorTime":"2021-01-15 05:25:34","codes":[{"authorDate":"2021-01-15 05:25:34","commitOrder":5,"curCode":"    public void testDuplicateFiles() throws URISyntaxException {\n        Path texFile = Path.of(TexBibEntriesResolverTest.class.getResource(\"paper.tex\").toURI());\n        LatexParserResult parserResult = new DefaultLatexParser().parse(texFile);\n\n        LatexBibEntriesResolverResult crossingResult = new TexBibEntriesResolver(database, importFormatPreferences, timestampPreferences, fileMonitor).resolve(parserResult);\n        LatexBibEntriesResolverResult expectedCrossingResult = new LatexBibEntriesResolverResult(parserResult);\n\n        assertEquals(expectedCrossingResult, crossingResult);\n    }\n","date":"2021-01-15 05:25:34","endLine":136,"groupId":"8576","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"testDuplicateFiles","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/81/663ce3143f98f1a9cc62b4bbf201d085cbf685.src","preCode":"    public void testDuplicateFiles() throws URISyntaxException {\n        Path texFile = Path.of(TexBibEntriesResolverTest.class.getResource(\"paper.tex\").toURI());\n        LatexParserResult parserResult = new DefaultLatexParser().parse(texFile);\n\n        LatexBibEntriesResolverResult crossingResult = new TexBibEntriesResolver(database, importFormatPreferences, fileMonitor).resolve(parserResult);\n        LatexBibEntriesResolverResult expectedCrossingResult = new LatexBibEntriesResolverResult(parserResult);\n\n        assertEquals(expectedCrossingResult, crossingResult);\n    }\n","realPath":"src/test/java/org/jabref/logic/texparser/TexBibEntriesResolverTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":128,"status":"M"},{"authorDate":"2021-01-15 05:25:34","commitOrder":5,"curCode":"    public void testUnknownKey() throws URISyntaxException {\n        Path texFile = Path.of(TexBibEntriesResolverTest.class.getResource(\"unknown_key.tex\").toURI());\n        LatexParserResult parserResult = new DefaultLatexParser().parse(texFile);\n\n        LatexBibEntriesResolverResult crossingResult = new TexBibEntriesResolver(database, importFormatPreferences, timestampPreferences, fileMonitor).resolve(parserResult);\n        LatexBibEntriesResolverResult expectedCrossingResult = new LatexBibEntriesResolverResult(parserResult);\n\n        assertEquals(expectedCrossingResult, crossingResult);\n    }\n","date":"2021-01-15 05:25:34","endLine":147,"groupId":"8576","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"testUnknownKey","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/81/663ce3143f98f1a9cc62b4bbf201d085cbf685.src","preCode":"    public void testUnknownKey() throws URISyntaxException {\n        Path texFile = Path.of(TexBibEntriesResolverTest.class.getResource(\"unknown_key.tex\").toURI());\n        LatexParserResult parserResult = new DefaultLatexParser().parse(texFile);\n\n        LatexBibEntriesResolverResult crossingResult = new TexBibEntriesResolver(database, importFormatPreferences, fileMonitor).resolve(parserResult);\n        LatexBibEntriesResolverResult expectedCrossingResult = new LatexBibEntriesResolverResult(parserResult);\n\n        assertEquals(expectedCrossingResult, crossingResult);\n    }\n","realPath":"src/test/java/org/jabref/logic/texparser/TexBibEntriesResolverTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":139,"status":"M"}],"commitId":"e66f5be7d82c7a7618fe327fe958ec57a25ea598","commitMessage":"@@@Add date fields (#7334)\n\nCo-authored-by: Oliver Kopp <kopp.dev@gmail.com>\n","date":"2021-01-15 05:25:34","modifiedFileCount":"31","status":"M","submitter":"Dominik Voigt"},{"authorTime":"2021-08-30 20:57:52","codes":[{"authorDate":"2021-08-30 20:57:52","commitOrder":6,"curCode":"    public void testDuplicateFiles() throws URISyntaxException {\n        Path texFile = Path.of(TexBibEntriesResolverTest.class.getResource(\"paper.tex\").toURI());\n        LatexParserResult parserResult = new DefaultLatexParser().parse(texFile);\n\n        LatexBibEntriesResolverResult crossingResult = new TexBibEntriesResolver(database, importFormatPreferences, fileMonitor).resolve(parserResult);\n        LatexBibEntriesResolverResult expectedCrossingResult = new LatexBibEntriesResolverResult(parserResult);\n\n        assertEquals(expectedCrossingResult, crossingResult);\n    }\n","date":"2021-08-30 20:57:52","endLine":132,"groupId":"10647","id":11,"instanceNumber":1,"isCurCommit":1,"methodName":"testDuplicateFiles","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/16/9d688cf36b7f5ba83f1550f043aef49556a200.src","preCode":"    public void testDuplicateFiles() throws URISyntaxException {\n        Path texFile = Path.of(TexBibEntriesResolverTest.class.getResource(\"paper.tex\").toURI());\n        LatexParserResult parserResult = new DefaultLatexParser().parse(texFile);\n\n        LatexBibEntriesResolverResult crossingResult = new TexBibEntriesResolver(database, importFormatPreferences, timestampPreferences, fileMonitor).resolve(parserResult);\n        LatexBibEntriesResolverResult expectedCrossingResult = new LatexBibEntriesResolverResult(parserResult);\n\n        assertEquals(expectedCrossingResult, crossingResult);\n    }\n","realPath":"src/test/java/org/jabref/logic/texparser/TexBibEntriesResolverTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":124,"status":"M"},{"authorDate":"2021-08-30 20:57:52","commitOrder":6,"curCode":"    public void testUnknownKey() throws URISyntaxException {\n        Path texFile = Path.of(TexBibEntriesResolverTest.class.getResource(\"unknown_key.tex\").toURI());\n        LatexParserResult parserResult = new DefaultLatexParser().parse(texFile);\n\n        LatexBibEntriesResolverResult crossingResult = new TexBibEntriesResolver(database, importFormatPreferences, fileMonitor).resolve(parserResult);\n        LatexBibEntriesResolverResult expectedCrossingResult = new LatexBibEntriesResolverResult(parserResult);\n\n        assertEquals(expectedCrossingResult, crossingResult);\n    }\n","date":"2021-08-30 20:57:52","endLine":143,"groupId":"10647","id":12,"instanceNumber":2,"isCurCommit":1,"methodName":"testUnknownKey","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/16/9d688cf36b7f5ba83f1550f043aef49556a200.src","preCode":"    public void testUnknownKey() throws URISyntaxException {\n        Path texFile = Path.of(TexBibEntriesResolverTest.class.getResource(\"unknown_key.tex\").toURI());\n        LatexParserResult parserResult = new DefaultLatexParser().parse(texFile);\n\n        LatexBibEntriesResolverResult crossingResult = new TexBibEntriesResolver(database, importFormatPreferences, timestampPreferences, fileMonitor).resolve(parserResult);\n        LatexBibEntriesResolverResult expectedCrossingResult = new LatexBibEntriesResolverResult(parserResult);\n\n        assertEquals(expectedCrossingResult, crossingResult);\n    }\n","realPath":"src/test/java/org/jabref/logic/texparser/TexBibEntriesResolverTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":135,"status":"M"}],"commitId":"476dc29ba1aa66c3c78d4734ca345f1414957e61","commitMessage":"@@@Cleanup artifacts and deprecated methods (#8025)\n\n","date":"2021-08-30 20:57:52","modifiedFileCount":"33","status":"M","submitter":"Carl Christian Snethlage"}]
