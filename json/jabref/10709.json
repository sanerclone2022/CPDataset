[{"authorTime":"2017-04-26 01:33:02","codes":[{"authorDate":"2017-04-26 01:33:02","commitOrder":1,"curCode":"    public void testPerformExportForSingleAuthor() throws Exception {\n        File tmpFile = testFolder.newFile();\n        String filename = tmpFile.getCanonicalPath();\n        BibEntry entry = new BibEntry();\n        entry.setField(\"author\", \"Someone, Van Something\");\n        List<BibEntry> entries = Arrays.asList(entry);\n\n        exportFormat.performExport(databaseContext, filename, charset, entries);\n\n        List<String> lines = Files.readAllLines(tmpFile.toPath());\n        assertEquals(2, lines.size());\n        assertEquals(\n                \"10,\\\"\\\",\\\"\\\",\\\"Someone, Van Something\\\",\\\"\\\",\\\"\\\",,,\\\"\\\",\\\"\\\",,\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\"\",\n                lines.get(1));\n    }\n","date":"2017-04-26 01:33:02","endLine":67,"groupId":"11185","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testPerformExportForSingleAuthor","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/33/2e7ad49a93e23cfe32b5940c8406760c2388a3.src","preCode":"    public void testPerformExportForSingleAuthor() throws Exception {\n        File tmpFile = testFolder.newFile();\n        String filename = tmpFile.getCanonicalPath();\n        BibEntry entry = new BibEntry();\n        entry.setField(\"author\", \"Someone, Van Something\");\n        List<BibEntry> entries = Arrays.asList(entry);\n\n        exportFormat.performExport(databaseContext, filename, charset, entries);\n\n        List<String> lines = Files.readAllLines(tmpFile.toPath());\n        assertEquals(2, lines.size());\n        assertEquals(\n                \"10,\\\"\\\",\\\"\\\",\\\"Someone, Van Something\\\",\\\"\\\",\\\"\\\",,,\\\"\\\",\\\"\\\",,\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\"\",\n                lines.get(1));\n    }\n","realPath":"src/test/java/org/jabref/logic/exporter/CsvExportFormatTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":53,"status":"B"},{"authorDate":"2017-04-26 01:33:02","commitOrder":1,"curCode":"    public void testPerformExportForMultipleAuthors() throws Exception {\n        File tmpFile = testFolder.newFile();\n        String filename = tmpFile.getCanonicalPath();\n        BibEntry entry = new BibEntry();\n        entry.setField(\"author\", \"von Neumann, John and Smith, John and Black Brown, Peter\");\n        List<BibEntry> entries = Arrays.asList(entry);\n\n        exportFormat.performExport(databaseContext, filename, charset, entries);\n\n        List<String> lines = Files.readAllLines(tmpFile.toPath());\n        assertEquals(2, lines.size());\n        assertEquals(\n                \"10,\\\"\\\",\\\"\\\",\\\"von Neumann, John; Smith, John; Black Brown, Peter\\\",\\\"\\\",\\\"\\\",,,\\\"\\\",\\\"\\\",,\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\"\",\n                lines.get(1));\n    }\n","date":"2017-04-26 01:33:02","endLine":84,"groupId":"11188","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testPerformExportForMultipleAuthors","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/33/2e7ad49a93e23cfe32b5940c8406760c2388a3.src","preCode":"    public void testPerformExportForMultipleAuthors() throws Exception {\n        File tmpFile = testFolder.newFile();\n        String filename = tmpFile.getCanonicalPath();\n        BibEntry entry = new BibEntry();\n        entry.setField(\"author\", \"von Neumann, John and Smith, John and Black Brown, Peter\");\n        List<BibEntry> entries = Arrays.asList(entry);\n\n        exportFormat.performExport(databaseContext, filename, charset, entries);\n\n        List<String> lines = Files.readAllLines(tmpFile.toPath());\n        assertEquals(2, lines.size());\n        assertEquals(\n                \"10,\\\"\\\",\\\"\\\",\\\"von Neumann, John; Smith, John; Black Brown, Peter\\\",\\\"\\\",\\\"\\\",,,\\\"\\\",\\\"\\\",,\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\"\",\n                lines.get(1));\n    }\n","realPath":"src/test/java/org/jabref/logic/exporter/CsvExportFormatTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":70,"status":"B"}],"commitId":"b8cd026d36ea283814b3fa66f1d8149dcda44cd4","commitMessage":"@@@Fix for issue 2762: Change CSV export to separate all names using semicolon (#2793)\n\n* Change CSV export to separate all names using semicolon (#2762)\n\nAdd LayoutFormatter AuthorAndToSemicolonReplacer that replaces all \" and \" with \"; \". This formatter is used to format authors and editors for the openoffice-csv layout.\n\n* add changelog entry for author and editor separation in csv exports (#2762)\n\n* split test cases for CsvExportFormatTest and AuthorAndToSemicolonReplacerTest (#2793)\n\n* add reference to issue 2762 in changelog (#2793)\n","date":"2017-04-26 01:33:02","modifiedFileCount":"1","status":"B","submitter":"125m125"},{"authorTime":"2018-01-03 05:13:37","codes":[{"authorDate":"2018-01-03 05:13:37","commitOrder":2,"curCode":"    public void testPerformExportForSingleAuthor() throws Exception {\n        File tmpFile = testFolder.newFile();\n        BibEntry entry = new BibEntry();\n        entry.setField(\"author\", \"Someone, Van Something\");\n        List<BibEntry> entries = Arrays.asList(entry);\n\n        exportFormat.export(databaseContext, tmpFile.toPath(), charset, entries);\n\n        List<String> lines = Files.readAllLines(tmpFile.toPath());\n        assertEquals(2, lines.size());\n        assertEquals(\n                \"10,\\\"\\\",\\\"\\\",\\\"Someone, Van Something\\\",\\\"\\\",\\\"\\\",,,\\\"\\\",\\\"\\\",,\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\"\",\n                lines.get(1));\n    }\n","date":"2018-01-03 05:13:37","endLine":66,"groupId":"4619","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testPerformExportForSingleAuthor","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/c6/20578c82602e2a47582d8afd8328d87fae2245.src","preCode":"    public void testPerformExportForSingleAuthor() throws Exception {\n        File tmpFile = testFolder.newFile();\n        String filename = tmpFile.getCanonicalPath();\n        BibEntry entry = new BibEntry();\n        entry.setField(\"author\", \"Someone, Van Something\");\n        List<BibEntry> entries = Arrays.asList(entry);\n\n        exportFormat.performExport(databaseContext, filename, charset, entries);\n\n        List<String> lines = Files.readAllLines(tmpFile.toPath());\n        assertEquals(2, lines.size());\n        assertEquals(\n                \"10,\\\"\\\",\\\"\\\",\\\"Someone, Van Something\\\",\\\"\\\",\\\"\\\",,,\\\"\\\",\\\"\\\",,\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\"\",\n                lines.get(1));\n    }\n","realPath":"src/test/java/org/jabref/logic/exporter/CsvExportFormatTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":53,"status":"M"},{"authorDate":"2018-01-03 05:13:37","commitOrder":2,"curCode":"    public void testPerformExportForMultipleAuthors() throws Exception {\n        File tmpFile = testFolder.newFile();\n        BibEntry entry = new BibEntry();\n        entry.setField(\"author\", \"von Neumann, John and Smith, John and Black Brown, Peter\");\n        List<BibEntry> entries = Arrays.asList(entry);\n\n        exportFormat.export(databaseContext, tmpFile.toPath(), charset, entries);\n\n        List<String> lines = Files.readAllLines(tmpFile.toPath());\n        assertEquals(2, lines.size());\n        assertEquals(\n                \"10,\\\"\\\",\\\"\\\",\\\"von Neumann, John; Smith, John; Black Brown, Peter\\\",\\\"\\\",\\\"\\\",,,\\\"\\\",\\\"\\\",,\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\"\",\n                lines.get(1));\n    }\n","date":"2018-01-03 05:13:37","endLine":82,"groupId":"4619","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testPerformExportForMultipleAuthors","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/c6/20578c82602e2a47582d8afd8328d87fae2245.src","preCode":"    public void testPerformExportForMultipleAuthors() throws Exception {\n        File tmpFile = testFolder.newFile();\n        String filename = tmpFile.getCanonicalPath();\n        BibEntry entry = new BibEntry();\n        entry.setField(\"author\", \"von Neumann, John and Smith, John and Black Brown, Peter\");\n        List<BibEntry> entries = Arrays.asList(entry);\n\n        exportFormat.performExport(databaseContext, filename, charset, entries);\n\n        List<String> lines = Files.readAllLines(tmpFile.toPath());\n        assertEquals(2, lines.size());\n        assertEquals(\n                \"10,\\\"\\\",\\\"\\\",\\\"von Neumann, John; Smith, John; Black Brown, Peter\\\",\\\"\\\",\\\"\\\",,,\\\"\\\",\\\"\\\",,\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\"\",\n                lines.get(1));\n    }\n","realPath":"src/test/java/org/jabref/logic/exporter/CsvExportFormatTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":69,"status":"M"}],"commitId":"d38183928d7915bf33a5366af11d9dde3f695c5e","commitMessage":"@@@Refactor export code to fix #3576 (#3578)\n\n* Refactor exports to fix #3576\n\n* Add changelog\n\n* Fix build\n\n* Implement feedback and fix tests\n\n* Include feedback\n\n* Fix checkstyle...again...joy!\n","date":"2018-01-03 05:13:37","modifiedFileCount":"83","status":"M","submitter":"Tobias Diez"},{"authorTime":"2018-08-16 15:17:32","codes":[{"authorDate":"2018-08-16 15:17:32","commitOrder":3,"curCode":"    public void testPerformExportForSingleAuthor(@TempDirectory.TempDir Path testFolder) throws Exception {\n        Path path = testFolder.resolve(\"ThisIsARandomlyNamedFile\");\n\n        BibEntry entry = new BibEntry();\n        entry.setField(\"author\", \"Someone, Van Something\");\n        List<BibEntry> entries = Arrays.asList(entry);\n\n        exportFormat.export(databaseContext, path, charset, entries);\n\n        List<String> lines = Files.readAllLines(path);\n        assertEquals(2, lines.size());\n        assertEquals(\n                     \"10,\\\"\\\",\\\"\\\",\\\"Someone, Van Something\\\",\\\"\\\",\\\"\\\",,,\\\"\\\",\\\"\\\",,\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\"\",\n                     lines.get(1));\n    }\n","date":"2018-08-16 15:17:32","endLine":69,"groupId":"10064","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testPerformExportForSingleAuthor","params":"(@TempDirectory.TempDirPathtestFolder)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/77/6b1d842350c0df0f276e1bff039befc5b17da2.src","preCode":"    public void testPerformExportForSingleAuthor() throws Exception {\n        File tmpFile = testFolder.newFile();\n        BibEntry entry = new BibEntry();\n        entry.setField(\"author\", \"Someone, Van Something\");\n        List<BibEntry> entries = Arrays.asList(entry);\n\n        exportFormat.export(databaseContext, tmpFile.toPath(), charset, entries);\n\n        List<String> lines = Files.readAllLines(tmpFile.toPath());\n        assertEquals(2, lines.size());\n        assertEquals(\n                \"10,\\\"\\\",\\\"\\\",\\\"Someone, Van Something\\\",\\\"\\\",\\\"\\\",,,\\\"\\\",\\\"\\\",,\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\"\",\n                lines.get(1));\n    }\n","realPath":"src/test/java/org/jabref/logic/exporter/CsvExportFormatTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":55,"status":"M"},{"authorDate":"2018-08-16 15:17:32","commitOrder":3,"curCode":"    public void testPerformExportForMultipleAuthors(@TempDirectory.TempDir Path testFolder) throws Exception {\n        Path path = testFolder.resolve(\"ThisIsARandomlyNamedFile\");\n\n        BibEntry entry = new BibEntry();\n        entry.setField(\"author\", \"von Neumann, John and Smith, John and Black Brown, Peter\");\n        List<BibEntry> entries = Arrays.asList(entry);\n\n        exportFormat.export(databaseContext, path, charset, entries);\n\n        List<String> lines = Files.readAllLines(path);\n        assertEquals(2, lines.size());\n        assertEquals(\n                     \"10,\\\"\\\",\\\"\\\",\\\"von Neumann, John; Smith, John; Black Brown, Peter\\\",\\\"\\\",\\\"\\\",,,\\\"\\\",\\\"\\\",,\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\"\",\n                     lines.get(1));\n    }\n","date":"2018-08-16 15:17:32","endLine":86,"groupId":"10064","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testPerformExportForMultipleAuthors","params":"(@TempDirectory.TempDirPathtestFolder)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/77/6b1d842350c0df0f276e1bff039befc5b17da2.src","preCode":"    public void testPerformExportForMultipleAuthors() throws Exception {\n        File tmpFile = testFolder.newFile();\n        BibEntry entry = new BibEntry();\n        entry.setField(\"author\", \"von Neumann, John and Smith, John and Black Brown, Peter\");\n        List<BibEntry> entries = Arrays.asList(entry);\n\n        exportFormat.export(databaseContext, tmpFile.toPath(), charset, entries);\n\n        List<String> lines = Files.readAllLines(tmpFile.toPath());\n        assertEquals(2, lines.size());\n        assertEquals(\n                \"10,\\\"\\\",\\\"\\\",\\\"von Neumann, John; Smith, John; Black Brown, Peter\\\",\\\"\\\",\\\"\\\",,,\\\"\\\",\\\"\\\",,\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\"\",\n                lines.get(1));\n    }\n","realPath":"src/test/java/org/jabref/logic/exporter/CsvExportFormatTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":72,"status":"M"}],"commitId":"a880addc0b9a45ad4461cc46ed261ea7df9c812a","commitMessage":"@@@Fix for issue 3959: migrate all tests to JUnit 5 (#4260)\n\n* Update migrate from JUnit 4 to JUnit 5\n\n* Update migrate from JUnit 4 to JUnit 5\n\n* Trying to change git accounts on my laptop\n\n* Trying to change git accounts on my laptop\n\n* Trying to change git accounts on my laptop\n\n* Using static assert methods.\n\n* Migrate from JUnit 4 to JUnit 5\n\n*AuthorListParameterTest.java\n\n* Migrate from JUnit 4 to JUnit 5\n\n*XmpUtilWriterTest.java\n\n* Migrate from JUnit 4 to JUnit 5\n\n*XmpUtilReaderTest.java\n\n* Migrate from JUnit 4 to JUnit 5\n\n*SearchQueryHighlightObservableTest.java\n\n    -did not use MockitoExtension.class as its official version has not been released yet.\n\n* Migrate from JUnit 4 to JUnit 5\n\n*CitationEntryTest.java\n\n* Migrate from JUnit 4 to JUnit 5\n\n*RTFCharsTest.java\n\n* Migrate from JUnit 4 to JUnit 5\n\n*ProtectedTermsLoaderTest.java\n\n    -When running tests.  outputs in command line are different. I don't know if this change is correct.\n\n* Trying to change to a new branch.\n\n* commit_test\n\n* delete my meaningless txt\n\n* Migrate from JUnit 4 to JUnit 5\n\n*AuthorAndToSemicolonReplacerTest.java\n\n* Migrate from JUnit 4 to JUnit 5\n\n*FileDialogConfigurationTest.java\n\n* Migrate from JUnit 4 to JUnit 5\n\n*IntegrityCheckTest.java\n\n* Migrate from JUnit 4 to JUnit 5\n\n*ModsExportFormatTest.java\n\n* Migrate from JUnit 4 to JUnit 5\n\n*AutoSetFileLinksUtilTest.java\n\n* Migrate from JUnit 4 to JUnit 5\n\n*MsBibExportFormatTest.java\n\n* Migrate from JUnit 4 to JUnit 5\n\n*CsvExportFormatTest.java\n\n* Migrate from JUnit 4 to JUnit 5\n\n*HtmlExportFormatTest.java\n\n* Migrate from JUnit 4 to JUnit 5\n\n*HtmlExportFormatTest.java\n\n* Migrate from JUnit 4 to JUnit 5\n\n*RenamePdfCleanupTest.java\n\n* Migrate from JUnit 4 to JUnit 5\n\n*ProtectedTermsListTest.java\n\n* Migrate from JUnit 4 to JUnit 5\n\n*MoveFilesCleanupTest.java\n\n* Migrate from JUnit 4 to JUnit 5\n\n*ImporterTest.java\n\n* Migrate from JUnit 4 to JUnit 5\n\n    *ExporterTest.java\n\n* Try to trigger the Travis CI build.\n\n* Try to trigger the Travis CI build.\n\n* Migrate from JUnit 4 to JUnit 5\n\n* Try to migrate from JUnit 4 to JUnit 5\n    *BibTeXMLExporterTestFiles.java\n        *Test.  not finished\n\n* Roll back to earlier version.\n    *BibTeXMLExporterTestFiles.java\n    *CleanupWorkerTest.java\n\n* Migrate from JUnit 4 to JUnit 5\n    *ImportFormatReaderIntegrationTest.java\n\n* Migrate from JUnit 4 to JUnit 5\n    *MimeTypeDetectorTest.java\n\n* failed to modify CleanupWorkerTest\n\n* failed to modify cleanupWorkTest\n\n* change cleanupWorkerTest to initial\n\n* ***DatabaseTest***\nMigrate from JUnit 4 to JUnit 5\n    *DBMSProcessorTest.java\n        *Wait for the Travis CI\n\n* ***DatabaseTest***\nMigrate from JUnit 4 to JUnit 5\n    *DBMSProcessorTest.java\n        *Wait for the Travis CI\n\n* Migrate from JUnit 4 to JUnit 5\n    *BibTeXMLExporterTestFiles.java\n    *MSBibExportFormatTestFiles.java\n    *All the GUI tests\n\n* Migrate from JUnit 4 to JUnit 5\n    *CleanupWorkerTest.java\n\n    *It seems that worker doesn't work in cleanupRenamePdfRenamesRelativeFile() and cleanupRelativePathsConvertAbsoluteToRelativePath()\n\n* Migrate JUnit 4 to JUnit 5.\n    *AuthorListParameterTest.java\n        -Follow up tp the newest.\n\n* Migrate JUnit 4 to JUnit 5.\n    *CleanupWorkerTest.java\n        -Delete my sout.\n\n* Migrate JUnit 4 to JUnit 5.\n    *EntryTypesTest.java\n        -Just some method name changes.\n\n* Fix part of CleanupWorkerTest.\n    -cleanupRelativePathsConvertAbsoluteToRelativePath() test passed.\n    -The cleanupRenamePdfRenamesRelativeFile() test still failed.\n\n* Migrate and sync.\n    *CiteKeyBasedFileFinderTest.java\n\n* Migrate.\n    *FileUtilTest.java\nPartly migrate.\n    *ModsExportFormatTestFiles.java\n\n* Fix CleanupWorkerTest.java\n\n* Fix .travis.yml\n\n* Remove unnecessary @Rule.\n    *IntegrityCheckTest.java\n\n* AuxParserTest.java\n\n* BibtexParserTest.java\n\n* EntryComparatorTest.java\n\n* Migrate JUnit 4 to JUnit 5 -------by 1160300229\n\n* Migrate. Some tasks by my team members.\n    *LinkedFileViewModelTest.java\n    *RecursiveTreeItemTest.java\n    *UndoTest.java\n    *EntryComparatorTest.java\n    *MakeLabelWithDatabaseTest.java\n    *MakeLabelWithoutDatabaseTest.java\n    *CleanupUrlFormatterTest.java\n    *BibtexParserTest.java\n    *MedlinePlainImporterTest.java\n    *SilverPlatterImporterTest.java\n    *EntryLinkCheckerTest.java\n    *LocalizationKeyTest.java\n    *JabRefPreferencesTest.java\n\n* Fix 1160300302's error.\n\n* Remove unnecessary \"public\".\n    *AuxParserTest.java\n\n* fix architecture test by removing check for public make some classes default visibility level\n\n* Fix \"cannot find files\" problem in JUnit 4.\n\n* Migrate to JUnit 5.\n    *BibTeXMLExporterTestFiles.java\n    *ModsExportFormatTestFiles.java\n    *MSBibExportFormatTestFiles.java\n\n* Change the slash direction.\n    *BibTeXMLExporterTestFiles.java\n    *ModsExportFormatTestFiles.java\n    *MSBibExportFormatTestFiles.java\n\n* fix resolving of paths in msbibexporterpath update junit and correct resource dirs in gradle\n\n* Fix the path issue in\n    *BibTeXMLExporterTestFiles.java\n    *ModsExportFormatTestFiles.java\n\n* Disable the failing exporter tests and change the build.gradle\n\n* Fix the parent folder issue by make every path to their child once.\n    -You can see in the code. :)\n\n* Fix some minor issues.\n    -Use the NIO methods in MoveFilesCleanupTest.java\n\n    -Use toAbsolutePath() method in RenamePdfCleanupTest.java\n\n    -Rename \"tempFilename\" to \"tempFilePath\" in BibTeXMLExporterTestFiles.java\n\n* include main/java in resources as well convert legalcy file methods to nio\n","date":"2018-08-16 15:17:32","modifiedFileCount":"59","status":"M","submitter":"Yichen Sun"},{"authorTime":"2019-02-09 22:36:12","codes":[{"authorDate":"2019-02-09 22:36:12","commitOrder":4,"curCode":"    public void testPerformExportForSingleAuthor(@TempDir Path testFolder) throws Exception {\n        Path path = testFolder.resolve(\"ThisIsARandomlyNamedFile\");\n\n        BibEntry entry = new BibEntry();\n        entry.setField(\"author\", \"Someone, Van Something\");\n        List<BibEntry> entries = Arrays.asList(entry);\n\n        exportFormat.export(databaseContext, path, charset, entries);\n\n        List<String> lines = Files.readAllLines(path);\n        assertEquals(2, lines.size());\n        assertEquals(\n                \"10,\\\"\\\",\\\"\\\",\\\"Someone, Van Something\\\",\\\"\\\",\\\"\\\",,,\\\"\\\",\\\"\\\",,\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\"\",\n                lines.get(1));\n    }\n","date":"2019-02-09 22:36:12","endLine":66,"groupId":"10064","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"testPerformExportForSingleAuthor","params":"(@TempDirPathtestFolder)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/14/50f3d8295800cbce97ea7e913d2f5f87836be3.src","preCode":"    public void testPerformExportForSingleAuthor(@TempDirectory.TempDir Path testFolder) throws Exception {\n        Path path = testFolder.resolve(\"ThisIsARandomlyNamedFile\");\n\n        BibEntry entry = new BibEntry();\n        entry.setField(\"author\", \"Someone, Van Something\");\n        List<BibEntry> entries = Arrays.asList(entry);\n\n        exportFormat.export(databaseContext, path, charset, entries);\n\n        List<String> lines = Files.readAllLines(path);\n        assertEquals(2, lines.size());\n        assertEquals(\n                \"10,\\\"\\\",\\\"\\\",\\\"Someone, Van Something\\\",\\\"\\\",\\\"\\\",,,\\\"\\\",\\\"\\\",,\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\"\",\n                lines.get(1));\n    }\n","realPath":"src/test/java/org/jabref/logic/exporter/CsvExportFormatTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":52,"status":"M"},{"authorDate":"2019-02-09 22:36:12","commitOrder":4,"curCode":"    public void testPerformExportForMultipleAuthors(@TempDir Path testFolder) throws Exception {\n        Path path = testFolder.resolve(\"ThisIsARandomlyNamedFile\");\n\n        BibEntry entry = new BibEntry();\n        entry.setField(\"author\", \"von Neumann, John and Smith, John and Black Brown, Peter\");\n        List<BibEntry> entries = Arrays.asList(entry);\n\n        exportFormat.export(databaseContext, path, charset, entries);\n\n        List<String> lines = Files.readAllLines(path);\n        assertEquals(2, lines.size());\n        assertEquals(\n                \"10,\\\"\\\",\\\"\\\",\\\"von Neumann, John; Smith, John; Black Brown, Peter\\\",\\\"\\\",\\\"\\\",,,\\\"\\\",\\\"\\\",,\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\"\",\n                lines.get(1));\n    }\n","date":"2019-02-09 22:36:12","endLine":83,"groupId":"10064","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"testPerformExportForMultipleAuthors","params":"(@TempDirPathtestFolder)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/14/50f3d8295800cbce97ea7e913d2f5f87836be3.src","preCode":"    public void testPerformExportForMultipleAuthors(@TempDirectory.TempDir Path testFolder) throws Exception {\n        Path path = testFolder.resolve(\"ThisIsARandomlyNamedFile\");\n\n        BibEntry entry = new BibEntry();\n        entry.setField(\"author\", \"von Neumann, John and Smith, John and Black Brown, Peter\");\n        List<BibEntry> entries = Arrays.asList(entry);\n\n        exportFormat.export(databaseContext, path, charset, entries);\n\n        List<String> lines = Files.readAllLines(path);\n        assertEquals(2, lines.size());\n        assertEquals(\n                \"10,\\\"\\\",\\\"\\\",\\\"von Neumann, John; Smith, John; Black Brown, Peter\\\",\\\"\\\",\\\"\\\",,,\\\"\\\",\\\"\\\",,\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\"\",\n                lines.get(1));\n    }\n","realPath":"src/test/java/org/jabref/logic/exporter/CsvExportFormatTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":69,"status":"M"}],"commitId":"71e02379a068756a3885aa22161337255683fca3","commitMessage":"@@@Fix for issue 4641: Remove usage of TempDirectory extension from junit-pioneer (#4644)\n\n* Removed the TempDirectory extension from junit-pioneer with the built in\nextension of junit 5.4\n\n* Removed unused import\n","date":"2019-02-09 22:36:12","modifiedFileCount":"23","status":"M","submitter":"Akash Deep"},{"authorTime":"2019-08-02 15:20:10","codes":[{"authorDate":"2019-08-02 15:20:10","commitOrder":5,"curCode":"    public void testPerformExportForSingleAuthor(@TempDir Path testFolder) throws Exception {\n        Path path = testFolder.resolve(\"ThisIsARandomlyNamedFile\");\n\n        BibEntry entry = new BibEntry();\n        entry.setField(StandardField.AUTHOR, \"Someone, Van Something\");\n        List<BibEntry> entries = Arrays.asList(entry);\n\n        exportFormat.export(databaseContext, path, charset, entries);\n\n        List<String> lines = Files.readAllLines(path);\n        assertEquals(2, lines.size());\n        assertEquals(\n                \"10,\\\"\\\",\\\"\\\",\\\"Someone, Van Something\\\",\\\"\\\",\\\"\\\",,,\\\"\\\",\\\"\\\",,\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\"\",\n                lines.get(1));\n    }\n","date":"2019-08-02 15:20:10","endLine":67,"groupId":"10709","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"testPerformExportForSingleAuthor","params":"(@TempDirPathtestFolder)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/56/98e78f1b7492fa31bc1c4b2a5b394dd8b46a89.src","preCode":"    public void testPerformExportForSingleAuthor(@TempDir Path testFolder) throws Exception {\n        Path path = testFolder.resolve(\"ThisIsARandomlyNamedFile\");\n\n        BibEntry entry = new BibEntry();\n        entry.setField(\"author\", \"Someone, Van Something\");\n        List<BibEntry> entries = Arrays.asList(entry);\n\n        exportFormat.export(databaseContext, path, charset, entries);\n\n        List<String> lines = Files.readAllLines(path);\n        assertEquals(2, lines.size());\n        assertEquals(\n                \"10,\\\"\\\",\\\"\\\",\\\"Someone, Van Something\\\",\\\"\\\",\\\"\\\",,,\\\"\\\",\\\"\\\",,\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\"\",\n                lines.get(1));\n    }\n","realPath":"src/test/java/org/jabref/logic/exporter/CsvExportFormatTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":53,"status":"M"},{"authorDate":"2019-08-02 15:20:10","commitOrder":5,"curCode":"    public void testPerformExportForMultipleAuthors(@TempDir Path testFolder) throws Exception {\n        Path path = testFolder.resolve(\"ThisIsARandomlyNamedFile\");\n\n        BibEntry entry = new BibEntry();\n        entry.setField(StandardField.AUTHOR, \"von Neumann, John and Smith, John and Black Brown, Peter\");\n        List<BibEntry> entries = Arrays.asList(entry);\n\n        exportFormat.export(databaseContext, path, charset, entries);\n\n        List<String> lines = Files.readAllLines(path);\n        assertEquals(2, lines.size());\n        assertEquals(\n                \"10,\\\"\\\",\\\"\\\",\\\"von Neumann, John; Smith, John; Black Brown, Peter\\\",\\\"\\\",\\\"\\\",,,\\\"\\\",\\\"\\\",,\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\"\",\n                lines.get(1));\n    }\n","date":"2019-08-02 15:20:10","endLine":84,"groupId":"10709","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"testPerformExportForMultipleAuthors","params":"(@TempDirPathtestFolder)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/56/98e78f1b7492fa31bc1c4b2a5b394dd8b46a89.src","preCode":"    public void testPerformExportForMultipleAuthors(@TempDir Path testFolder) throws Exception {\n        Path path = testFolder.resolve(\"ThisIsARandomlyNamedFile\");\n\n        BibEntry entry = new BibEntry();\n        entry.setField(\"author\", \"von Neumann, John and Smith, John and Black Brown, Peter\");\n        List<BibEntry> entries = Arrays.asList(entry);\n\n        exportFormat.export(databaseContext, path, charset, entries);\n\n        List<String> lines = Files.readAllLines(path);\n        assertEquals(2, lines.size());\n        assertEquals(\n                \"10,\\\"\\\",\\\"\\\",\\\"von Neumann, John; Smith, John; Black Brown, Peter\\\",\\\"\\\",\\\"\\\",,,\\\"\\\",\\\"\\\",,\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\",\\\"\\\"\",\n                lines.get(1));\n    }\n","realPath":"src/test/java/org/jabref/logic/exporter/CsvExportFormatTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":70,"status":"M"}],"commitId":"4b39b78e4afcd6c36b385f5c46f1d9a4eac2e29b","commitMessage":"@@@Move to extended enums for fields and entry types (#5148)\n\n* Introduce interface for fields\n\n* Continue using fields interface instead of strings\n\n* Introduce OrFields class\n\n* Move FieldProperty\n\n* Convert entry types to extended enum\n\n* Start fixing build\n\n* Fix build\n\n* Start fixing tests\n\n* Everything compiles again\n\n* Make model tests pass\n\n* Fix most tests\n\n* Fix build\n\n* Fix a few more tests\n\n* Fix a few more tests\n\n* Fix a few more tests\n\n* Fix a few more tests\n\n* Fix checkstyle issues\n\n* Fix more tests\n\n* Fix more tests\n\n* Disable test that fails on CI\n\n* Disable test that fails on CI\n","date":"2019-08-02 15:20:10","modifiedFileCount":"439","status":"M","submitter":"Tobias Diez"}]
