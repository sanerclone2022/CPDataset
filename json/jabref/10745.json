[{"authorTime":"2017-06-07 01:37:33","codes":[{"authorDate":"2017-03-20 22:52:15","commitOrder":2,"curCode":"    public void highlightNoNoteMinimal() {\n        final FileAnnotation expectedLinkedAnnotation = new FileAnnotation(\"Linus Dietz\", LocalDateTime.of(2017, 3, 12, 20, 28, 39), 1,\n                \"\", FileAnnotationType.HIGHLIGHT, Optional.empty());\n        final FileAnnotation expected = new FileAnnotation(\"Linus Dietz\", LocalDateTime.of(2017, 3, 12, 20, 28, 39), 1,\n                \"World\", FileAnnotationType.HIGHLIGHT, Optional.of(expectedLinkedAnnotation));\n\n        assertEquals(Collections.singletonList(expected),\n                importer.importAnnotations(Paths.get(\"src/test/resources/pdfs/minimal-highlight-no-note.pdf\")));\n    }\n","date":"2017-03-20 22:52:15","endLine":66,"groupId":"11199","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"highlightNoNoteMinimal","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/11/121be29a7741178e23ecdfe5945ffc2aec07b0.src","preCode":"    public void highlightNoNoteMinimal() {\n        final FileAnnotation expectedLinkedAnnotation = new FileAnnotation(\"Linus Dietz\", LocalDateTime.of(2017, 3, 12, 20, 28, 39), 1,\n                \"\", FileAnnotationType.HIGHLIGHT, Optional.empty());\n        final FileAnnotation expected = new FileAnnotation(\"Linus Dietz\", LocalDateTime.of(2017, 3, 12, 20, 28, 39), 1,\n                \"World\", FileAnnotationType.HIGHLIGHT, Optional.of(expectedLinkedAnnotation));\n\n        assertEquals(Collections.singletonList(expected),\n                importer.importAnnotations(Paths.get(\"src/test/resources/pdfs/minimal-highlight-no-note.pdf\")));\n    }\n","realPath":"src/test/java/org/jabref/logic/pdf/PdfAnnotationImporterTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":58,"status":"NB"},{"authorDate":"2017-06-07 01:37:33","commitOrder":2,"curCode":"    public void squigglyWithNoteMinimal() {\n        final FileAnnotation expectedLinkedAnnotation = new FileAnnotation(\"lynyus\", LocalDateTime.of(2017, 6, 1, 2, 40, 25), 1,\n                \"Squiggly note\", FileAnnotationType.SQUIGGLY, Optional.empty());\n        final FileAnnotation expected = new FileAnnotation(\"lynyus\", LocalDateTime.of(2017, 6, 1, 2, 40, 25), 1,\n                \"ello\", FileAnnotationType.SQUIGGLY, Optional.of(expectedLinkedAnnotation));\n\n        assertEquals(Collections.singletonList(expected),\n                importer.importAnnotations(Paths.get(\"src/test/resources/pdfs/minimal-squiggly.pdf\")));\n    }\n","date":"2017-06-07 01:37:33","endLine":102,"groupId":"11200","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"squigglyWithNoteMinimal","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/e6/fafd85d95aa2a9ef9b97b5b17f1454bb132348.src","preCode":"    public void squigglyWithNoteMinimal() {\n        final FileAnnotation expectedLinkedAnnotation = new FileAnnotation(\"lynyus\", LocalDateTime.of(2017, 6, 1, 2, 40, 25), 1,\n                \"Squiggly note\", FileAnnotationType.SQUIGGLY, Optional.empty());\n        final FileAnnotation expected = new FileAnnotation(\"lynyus\", LocalDateTime.of(2017, 6, 1, 2, 40, 25), 1,\n                \"ello\", FileAnnotationType.SQUIGGLY, Optional.of(expectedLinkedAnnotation));\n\n        assertEquals(Collections.singletonList(expected),\n                importer.importAnnotations(Paths.get(\"src/test/resources/pdfs/minimal-squiggly.pdf\")));\n    }\n","realPath":"src/test/java/org/jabref/logic/pdf/PdfAnnotationImporterTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":94,"status":"B"}],"commitId":"1b2cadb6fd2aba0957652feae647862f9ee5f0c2","commitMessage":"@@@Merge remote-tracking branch 'origin/master'\n","date":"2017-06-07 01:37:33","modifiedFileCount":"10","status":"M","submitter":"Linus Dietz"},{"authorTime":"2020-04-30 17:10:13","codes":[{"authorDate":"2020-04-30 17:10:13","commitOrder":3,"curCode":"    public void highlightNoNoteMinimal() {\n        final FileAnnotation expectedLinkedAnnotation = new FileAnnotation(\"Linus Dietz\", LocalDateTime.of(2017, 3, 12, 20, 28, 39), 1,\n                \"\", FileAnnotationType.HIGHLIGHT, Optional.empty());\n        final FileAnnotation expected = new FileAnnotation(\"Linus Dietz\", LocalDateTime.of(2017, 3, 12, 20, 28, 39), 1,\n                \"World\", FileAnnotationType.HIGHLIGHT, Optional.of(expectedLinkedAnnotation));\n\n        assertEquals(Collections.singletonList(expected),\n                importer.importAnnotations(Path.of(\"src/test/resources/pdfs/minimal-highlight-no-note.pdf\")));\n    }\n","date":"2020-04-30 17:10:13","endLine":91,"groupId":"10745","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"highlightNoNoteMinimal","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/76/06bed8cafa26af244719d85d728cc17892a050.src","preCode":"    public void highlightNoNoteMinimal() {\n        final FileAnnotation expectedLinkedAnnotation = new FileAnnotation(\"Linus Dietz\", LocalDateTime.of(2017, 3, 12, 20, 28, 39), 1,\n                \"\", FileAnnotationType.HIGHLIGHT, Optional.empty());\n        final FileAnnotation expected = new FileAnnotation(\"Linus Dietz\", LocalDateTime.of(2017, 3, 12, 20, 28, 39), 1,\n                \"World\", FileAnnotationType.HIGHLIGHT, Optional.of(expectedLinkedAnnotation));\n\n        assertEquals(Collections.singletonList(expected),\n                importer.importAnnotations(Paths.get(\"src/test/resources/pdfs/minimal-highlight-no-note.pdf\")));\n    }\n","realPath":"src/test/java/org/jabref/logic/pdf/PdfAnnotationImporterTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":83,"status":"M"},{"authorDate":"2020-04-30 17:10:13","commitOrder":3,"curCode":"    public void squigglyWithNoteMinimal() {\n        final FileAnnotation expectedLinkedAnnotation = new FileAnnotation(\"lynyus\", LocalDateTime.of(2017, 6, 1, 2, 40, 25), 1,\n                \"Squiggly note\", FileAnnotationType.SQUIGGLY, Optional.empty());\n        final FileAnnotation expected = new FileAnnotation(\"lynyus\", LocalDateTime.of(2017, 6, 1, 2, 40, 25), 1,\n                \"ello\", FileAnnotationType.SQUIGGLY, Optional.of(expectedLinkedAnnotation));\n\n        assertEquals(Collections.singletonList(expected),\n                importer.importAnnotations(Path.of(\"src/test/resources/pdfs/minimal-squiggly.pdf\")));\n    }\n","date":"2020-04-30 17:10:13","endLine":102,"groupId":"10745","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"squigglyWithNoteMinimal","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/76/06bed8cafa26af244719d85d728cc17892a050.src","preCode":"    public void squigglyWithNoteMinimal() {\n        final FileAnnotation expectedLinkedAnnotation = new FileAnnotation(\"lynyus\", LocalDateTime.of(2017, 6, 1, 2, 40, 25), 1,\n                \"Squiggly note\", FileAnnotationType.SQUIGGLY, Optional.empty());\n        final FileAnnotation expected = new FileAnnotation(\"lynyus\", LocalDateTime.of(2017, 6, 1, 2, 40, 25), 1,\n                \"ello\", FileAnnotationType.SQUIGGLY, Optional.of(expectedLinkedAnnotation));\n\n        assertEquals(Collections.singletonList(expected),\n                importer.importAnnotations(Paths.get(\"src/test/resources/pdfs/minimal-squiggly.pdf\")));\n    }\n","realPath":"src/test/java/org/jabref/logic/pdf/PdfAnnotationImporterTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":94,"status":"M"}],"commitId":"862078a4db316cfd15bd77be68d3d2b010feab3b","commitMessage":"@@@Fixes #6357: File directory (#6377)\n\n* Fixes #6357: File directory\n\nBug was introduced in https://github.com/JabRef/jabref/commit/1b03f039aa4abf0812a3a8ae0ba248c08fdb39a3.\n\n* Fix tests\n\n* Replace Paths.get\n\n* Fix code style","date":"2020-04-30 17:10:13","modifiedFileCount":"110","status":"M","submitter":"Tobias Diez"}]
