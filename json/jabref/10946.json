[{"authorTime":"2019-08-09 15:05:22","codes":[{"authorDate":"2020-03-06 17:57:43","commitOrder":2,"curCode":"    private FileNodeViewModel searchDirectory(Path directory) throws IOException {\n        if (directory == null || !directory.toFile().isDirectory()) {\n            throw new IOException(String.format(\"Invalid directory for searching: %s\", directory));\n        }\n\n        FileNodeViewModel parent = new FileNodeViewModel(directory);\n        Map<Boolean, List<Path>> fileListPartition;\n\n        try (Stream<Path> filesStream = Files.list(directory)) {\n            fileListPartition = filesStream.collect(Collectors.partitioningBy(path -> path.toFile().isDirectory()));\n        } catch (IOException e) {\n            LOGGER.error(String.format(\"%s while searching files: %s\", e.getClass().getName(), e.getMessage()));\n            return parent;\n        }\n\n        List<Path> subDirectories = fileListPartition.get(true);\n        List<Path> files = fileListPartition.get(false)\n                                            .stream()\n                                            .filter(path -> path.toString().endsWith(TEX_EXT))\n                                            .collect(Collectors.toList());\n        int fileCount = 0;\n\n        for (Path subDirectory : subDirectories) {\n            FileNodeViewModel subRoot = searchDirectory(subDirectory);\n\n            if (!subRoot.getChildren().isEmpty()) {\n                fileCount += subRoot.getFileCount();\n                parent.getChildren().add(subRoot);\n            }\n        }\n\n        parent.setFileCount(files.size() + fileCount);\n        parent.getChildren().addAll(files.stream()\n                                         .map(FileNodeViewModel::new)\n                                         .collect(Collectors.toList()));\n        return parent;\n    }\n","date":"2020-03-06 17:57:43","endLine":187,"groupId":"8382","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"searchDirectory","params":"(Pathdirectory)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/a5/f6630a68acd796a4f9ce8f1026dc7cd3246c8c.src","preCode":"    private FileNodeViewModel searchDirectory(Path directory) throws IOException {\n        if (directory == null || !directory.toFile().isDirectory()) {\n            throw new IOException(String.format(\"Invalid directory for searching: %s\", directory));\n        }\n\n        FileNodeViewModel parent = new FileNodeViewModel(directory);\n        Map<Boolean, List<Path>> fileListPartition;\n\n        try (Stream<Path> filesStream = Files.list(directory)) {\n            fileListPartition = filesStream.collect(Collectors.partitioningBy(path -> path.toFile().isDirectory()));\n        } catch (IOException e) {\n            LOGGER.error(String.format(\"%s while searching files: %s\", e.getClass().getName(), e.getMessage()));\n            return parent;\n        }\n\n        List<Path> subDirectories = fileListPartition.get(true);\n        List<Path> files = fileListPartition.get(false)\n                                            .stream()\n                                            .filter(path -> path.toString().endsWith(TEX_EXT))\n                                            .collect(Collectors.toList());\n        int fileCount = 0;\n\n        for (Path subDirectory : subDirectories) {\n            FileNodeViewModel subRoot = searchDirectory(subDirectory);\n\n            if (!subRoot.getChildren().isEmpty()) {\n                fileCount += subRoot.getFileCount();\n                parent.getChildren().add(subRoot);\n            }\n        }\n\n        parent.setFileCount(files.size() + fileCount);\n        parent.getChildren().addAll(files.stream()\n                                         .map(FileNodeViewModel::new)\n                                         .collect(Collectors.toList()));\n        return parent;\n    }\n","realPath":"src/main/java/org/jabref/gui/texparser/ParseLatexDialogViewModel.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":151,"status":"B"},{"authorDate":"2019-08-09 15:05:22","commitOrder":2,"curCode":"    private List<Path> searchDirectory(Path directory, List<Path> texFiles) {\n        Map<Boolean, List<Path>> fileListPartition;\n        try (Stream<Path> filesStream = Files.list(directory)) {\n            fileListPartition = filesStream.collect(Collectors.partitioningBy(path -> path.toFile().isDirectory()));\n        } catch (IOException e) {\n            LOGGER.error(String.format(\"%s while searching files: %s\", e.getClass().getName(), e.getMessage()));\n            return texFiles;\n        }\n\n        List<Path> subDirectories = fileListPartition.get(true);\n        List<Path> files = fileListPartition.get(false)\n                                            .stream()\n                                            .filter(path -> path.toString().endsWith(TEX_EXT))\n                                            .collect(Collectors.toList());\n        texFiles.addAll(files);\n        subDirectories.forEach(subDirectory -> searchDirectory(subDirectory, texFiles));\n\n        return texFiles;\n    }\n","date":"2019-08-09 15:05:22","endLine":163,"groupId":"10039","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"searchDirectory","params":"(Pathdirectory@List<Path>texFiles)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/b8/44475b1db8e5cba9bc73c34b127d617dcff786.src","preCode":"    private List<Path> searchDirectory(Path directory, List<Path> texFiles) {\n        Map<Boolean, List<Path>> fileListPartition;\n        try (Stream<Path> filesStream = Files.list(directory)) {\n            fileListPartition = filesStream.collect(Collectors.partitioningBy(path -> path.toFile().isDirectory()));\n        } catch (IOException e) {\n            LOGGER.error(String.format(\"%s while searching files: %s\", e.getClass().getName(), e.getMessage()));\n            return texFiles;\n        }\n\n        List<Path> subDirectories = fileListPartition.get(true);\n        List<Path> files = fileListPartition.get(false)\n                                            .stream()\n                                            .filter(path -> path.toString().endsWith(TEX_EXT))\n                                            .collect(Collectors.toList());\n        texFiles.addAll(files);\n        subDirectories.forEach(subDirectory -> searchDirectory(subDirectory, texFiles));\n\n        return texFiles;\n    }\n","realPath":"src/main/java/org/jabref/gui/entryeditor/LatexCitationsTabViewModel.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":145,"status":"NB"}],"commitId":"9c0fa85c4ab1653f1654427db2a41c0d166ce20a","commitMessage":"@@@Code: Tex --> Latex (in the context of ParseLatex) (#6019)\n\n","date":"2020-03-06 17:57:43","modifiedFileCount":"6","status":"M","submitter":"Oliver Kopp"},{"authorTime":"2019-08-09 15:05:22","codes":[{"authorDate":"2021-01-25 01:56:08","commitOrder":3,"curCode":"    private FileNodeViewModel searchDirectory(Path directory) throws IOException {\n        if ((directory == null) || !directory.toFile().isDirectory()) {\n            throw new IOException(String.format(\"Invalid directory for searching: %s\", directory));\n        }\n\n        FileNodeViewModel parent = new FileNodeViewModel(directory);\n        Map<Boolean, List<Path>> fileListPartition;\n\n        try (Stream<Path> filesStream = Files.list(directory)) {\n            fileListPartition = filesStream.collect(Collectors.partitioningBy(path -> path.toFile().isDirectory()));\n        } catch (IOException e) {\n            LOGGER.error(String.format(\"%s while searching files: %s\", e.getClass().getName(), e.getMessage()));\n            return parent;\n        }\n\n        List<Path> subDirectories = fileListPartition.get(true);\n        List<Path> files = fileListPartition.get(false)\n                                            .stream()\n                                            .filter(path -> path.toString().endsWith(TEX_EXT))\n                                            .collect(Collectors.toList());\n        int fileCount = 0;\n\n        for (Path subDirectory : subDirectories) {\n            FileNodeViewModel subRoot = searchDirectory(subDirectory);\n\n            if (!subRoot.getChildren().isEmpty()) {\n                fileCount += subRoot.getFileCount();\n                parent.getChildren().add(subRoot);\n            }\n        }\n\n        parent.setFileCount(files.size() + fileCount);\n        parent.getChildren().addAll(files.stream()\n                                         .map(FileNodeViewModel::new)\n                                         .collect(Collectors.toList()));\n        return parent;\n    }\n","date":"2021-01-25 01:56:08","endLine":187,"groupId":"10946","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"searchDirectory","params":"(Pathdirectory)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/50/806523d9437bfc93c6aead222f54cfa6aa07a4.src","preCode":"    private FileNodeViewModel searchDirectory(Path directory) throws IOException {\n        if (directory == null || !directory.toFile().isDirectory()) {\n            throw new IOException(String.format(\"Invalid directory for searching: %s\", directory));\n        }\n\n        FileNodeViewModel parent = new FileNodeViewModel(directory);\n        Map<Boolean, List<Path>> fileListPartition;\n\n        try (Stream<Path> filesStream = Files.list(directory)) {\n            fileListPartition = filesStream.collect(Collectors.partitioningBy(path -> path.toFile().isDirectory()));\n        } catch (IOException e) {\n            LOGGER.error(String.format(\"%s while searching files: %s\", e.getClass().getName(), e.getMessage()));\n            return parent;\n        }\n\n        List<Path> subDirectories = fileListPartition.get(true);\n        List<Path> files = fileListPartition.get(false)\n                                            .stream()\n                                            .filter(path -> path.toString().endsWith(TEX_EXT))\n                                            .collect(Collectors.toList());\n        int fileCount = 0;\n\n        for (Path subDirectory : subDirectories) {\n            FileNodeViewModel subRoot = searchDirectory(subDirectory);\n\n            if (!subRoot.getChildren().isEmpty()) {\n                fileCount += subRoot.getFileCount();\n                parent.getChildren().add(subRoot);\n            }\n        }\n\n        parent.setFileCount(files.size() + fileCount);\n        parent.getChildren().addAll(files.stream()\n                                         .map(FileNodeViewModel::new)\n                                         .collect(Collectors.toList()));\n        return parent;\n    }\n","realPath":"src/main/java/org/jabref/gui/texparser/ParseLatexDialogViewModel.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":151,"status":"M"},{"authorDate":"2019-08-09 15:05:22","commitOrder":3,"curCode":"    private List<Path> searchDirectory(Path directory, List<Path> texFiles) {\n        Map<Boolean, List<Path>> fileListPartition;\n        try (Stream<Path> filesStream = Files.list(directory)) {\n            fileListPartition = filesStream.collect(Collectors.partitioningBy(path -> path.toFile().isDirectory()));\n        } catch (IOException e) {\n            LOGGER.error(String.format(\"%s while searching files: %s\", e.getClass().getName(), e.getMessage()));\n            return texFiles;\n        }\n\n        List<Path> subDirectories = fileListPartition.get(true);\n        List<Path> files = fileListPartition.get(false)\n                                            .stream()\n                                            .filter(path -> path.toString().endsWith(TEX_EXT))\n                                            .collect(Collectors.toList());\n        texFiles.addAll(files);\n        subDirectories.forEach(subDirectory -> searchDirectory(subDirectory, texFiles));\n\n        return texFiles;\n    }\n","date":"2019-08-09 15:05:22","endLine":163,"groupId":"10946","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"searchDirectory","params":"(Pathdirectory@List<Path>texFiles)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/b8/44475b1db8e5cba9bc73c34b127d617dcff786.src","preCode":"    private List<Path> searchDirectory(Path directory, List<Path> texFiles) {\n        Map<Boolean, List<Path>> fileListPartition;\n        try (Stream<Path> filesStream = Files.list(directory)) {\n            fileListPartition = filesStream.collect(Collectors.partitioningBy(path -> path.toFile().isDirectory()));\n        } catch (IOException e) {\n            LOGGER.error(String.format(\"%s while searching files: %s\", e.getClass().getName(), e.getMessage()));\n            return texFiles;\n        }\n\n        List<Path> subDirectories = fileListPartition.get(true);\n        List<Path> files = fileListPartition.get(false)\n                                            .stream()\n                                            .filter(path -> path.toString().endsWith(TEX_EXT))\n                                            .collect(Collectors.toList());\n        texFiles.addAll(files);\n        subDirectories.forEach(subDirectory -> searchDirectory(subDirectory, texFiles));\n\n        return texFiles;\n    }\n","realPath":"src/main/java/org/jabref/gui/entryeditor/LatexCitationsTabViewModel.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":145,"status":"N"}],"commitId":"86d52cd6468335d9e460aaacc870aa5088c62431","commitMessage":"@@@Refactor unlinked files (#7209)\n\n* [WIP] Refactor unlinked files\n\ncreate dialog in fxml and use a background task for import\n\n* add controller\n\n* inject stuff\n\n* empty line\n\n* add progreess indicator\ncopy over some methods\n\n* finish export implementation\nTODO: Import Button does not yet work.  always null\n\n* prepare background task for import\n\n* prepare eception handling\n\n* add further logging\n\n* add progrees indicator linkage\n\nTODO: Progress not yet shown\n\n* Fix threading issues.  report progress\n\n* remove useless undo stuff\n\n* wire buttons to the viewModel\nadjust dialog\n\n* show import results dialog view\n\n* better error messages\n\n* Rename files.  fix cancel.  fix gui\n\n* Cleanup\ncheckstyle\n\n* checkstyle\n\n* fix checkstyle in md\n\n* Make table columns more wider\ndisable import button\n\n* preapre localization\n\n* fix typo\n\n* fix md errors\n\n* fix l10n key\n\n* add l10n\n\n* further l10n fixes\n\n* further l10n fixs to reuse\n\n* remove one dot\n\n* idea extend filenode wrapper\n\n* Remove extra dialog\n\n* fix progressIndicator still visible\n\n* replace with spaces\n\n* fix checkstyle\n\n* add titled pane\n\n* fix checkstyle\n\n* fix duplicate method\n\n* align browse button\n\n* adjust combobox display\n\n* Fixed whitespaces.  fxml and refactored for some readability\n\n* Fixed accordion and l10n\n\n* Add changelog\n\n* fix link in changelog\n\n* fix changelog\n\n* fix wrong loop var\nfix dnd\n\n* refactor\nonly call pdf import when xmp did not find a result\n\n* create viewModel for filter model\n\n* wip refactor like in parse latex\n\n* fix view model stuff\nadapt to check View model\n\n* add validator\n\n* fix selection and export\nmove file node view model\n\n* fix bug using wrong parameter\nremove l10n keys\n\n* Refactored some style issues and a minor suggestions of IntelliJ\n\n* l10n\n\n* only show results after import\n\n* Add custom skin for putting arrow to the right\n\n* add checkstyle exception\n\n* only change import order\n\n* checkstyle\n\n* load custom skin only on accordion\n\n* Add arrow rotation hack\n\n* Fix merge conflict\n\n* Set disable instead of visible\n\n* Fixed jumping arrow\n\n* Refactored for mvvm pattern and optics\n\n* Remove obsolete language key\n\n* refactor\n\n* cleanup\n\n* fix checkstyle\nand l10n\n\n* move vars down to background task\nadd explaination to checkstyle\n\n* Made treeRootProperty a property of Optional\n\n* l10n\n\nCo-authored-by: Carl Christian Snethlage <cc.snethlage@gmail.com>","date":"2021-01-25 01:56:08","modifiedFileCount":"15","status":"M","submitter":"Christoph"}]
