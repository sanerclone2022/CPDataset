[{"authorTime":"2021-06-03 23:44:24","codes":[{"authorDate":"2021-06-03 23:44:24","commitOrder":1,"curCode":"    private String getAuthorYearParenthesisMarker(List<BibEntry> entries, Map<BibEntry, BibDatabase> database,\n                                                  String[] uniquifiers, int[] unlimAuthors) {\n\n        String authorField = getStringCitProperty(AUTHOR_FIELD); \r\n        int maxA = getIntCitProperty(MAX_AUTHORS); \r\n                                                   \r\n        String yearSep = getStringCitProperty(YEAR_SEPARATOR); \r\n        String startBrace = getStringCitProperty(BRACKET_BEFORE); \r\n        String endBrace = getStringCitProperty(BRACKET_AFTER); \r\n        String citationSeparator = getStringCitProperty(CITATION_SEPARATOR); \r\n        String yearField = getStringCitProperty(YEAR_FIELD); \r\n        String andString = getStringCitProperty(AUTHOR_LAST_SEPARATOR); \r\n        StringBuilder sb = new StringBuilder(startBrace);\n        for (int j = 0; j < entries.size(); j++) {\n            BibEntry currentEntry = entries.get(j);\n\n            \r\n            if (currentEntry == null) {\n                continue;\n            }\n\n            if (j > 0) {\n                sb.append(citationSeparator);\n            }\n\n            BibDatabase currentDatabase = database.get(currentEntry);\n            int unlimA = unlimAuthors == null ? -1 : unlimAuthors[j];\n            int maxAuthors = unlimA > 0 ? unlimA : maxA;\n\n            String author = getCitationMarkerField(currentEntry, currentDatabase, authorField);\n            String authorString = createAuthorList(author, maxAuthors, andString, yearSep);\n            sb.append(authorString);\n            String year = getCitationMarkerField(currentEntry, currentDatabase, yearField);\n            if (year != null) {\n                sb.append(year);\n            }\n            if ((uniquifiers != null) && (uniquifiers[j] != null)) {\n                sb.append(uniquifiers[j]);\n            }\n        }\n        sb.append(endBrace);\n        return sb.toString();\n    }\n","date":"2021-06-03 23:44:24","endLine":625,"groupId":"422","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"getAuthorYearParenthesisMarker","params":"(List<BibEntry>entries@Map<BibEntry@BibDatabase>database@String[]uniquifiers@int[]unlimAuthors)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/56/1099afe9659cd1316a55feb76535b1ffc54cf4.src","preCode":"    private String getAuthorYearParenthesisMarker(List<BibEntry> entries, Map<BibEntry, BibDatabase> database,\n                                                  String[] uniquifiers, int[] unlimAuthors) {\n\n        String authorField = getStringCitProperty(AUTHOR_FIELD); \r\n        int maxA = getIntCitProperty(MAX_AUTHORS); \r\n                                                   \r\n        String yearSep = getStringCitProperty(YEAR_SEPARATOR); \r\n        String startBrace = getStringCitProperty(BRACKET_BEFORE); \r\n        String endBrace = getStringCitProperty(BRACKET_AFTER); \r\n        String citationSeparator = getStringCitProperty(CITATION_SEPARATOR); \r\n        String yearField = getStringCitProperty(YEAR_FIELD); \r\n        String andString = getStringCitProperty(AUTHOR_LAST_SEPARATOR); \r\n        StringBuilder sb = new StringBuilder(startBrace);\n        for (int j = 0; j < entries.size(); j++) {\n            BibEntry currentEntry = entries.get(j);\n\n            \r\n            if (currentEntry == null) {\n                continue;\n            }\n\n            if (j > 0) {\n                sb.append(citationSeparator);\n            }\n\n            BibDatabase currentDatabase = database.get(currentEntry);\n            int unlimA = unlimAuthors == null ? -1 : unlimAuthors[j];\n            int maxAuthors = unlimA > 0 ? unlimA : maxA;\n\n            String author = getCitationMarkerField(currentEntry, currentDatabase, authorField);\n            String authorString = createAuthorList(author, maxAuthors, andString, yearSep);\n            sb.append(authorString);\n            String year = getCitationMarkerField(currentEntry, currentDatabase, yearField);\n            if (year != null) {\n                sb.append(year);\n            }\n            if ((uniquifiers != null) && (uniquifiers[j] != null)) {\n                sb.append(uniquifiers[j]);\n            }\n        }\n        sb.append(endBrace);\n        return sb.toString();\n    }\n","realPath":"src/main/java/org/jabref/logic/openoffice/style/OOBibStyle.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":583,"status":"B"},{"authorDate":"2021-06-03 23:44:24","commitOrder":1,"curCode":"    private String getAuthorYearInTextMarker(List<BibEntry> entries, Map<BibEntry, BibDatabase> database,\n                                             String[] uniquefiers,\n                                             int[] unlimAuthors) {\n        String authorField = getStringCitProperty(AUTHOR_FIELD); \r\n        int maxA = getIntCitProperty(MAX_AUTHORS); \r\n                                                   \r\n        String yearSep = getStringCitProperty(IN_TEXT_YEAR_SEPARATOR); \r\n        String startBrace = getStringCitProperty(BRACKET_BEFORE); \r\n        String endBrace = getStringCitProperty(BRACKET_AFTER); \r\n        String citationSeparator = getStringCitProperty(CITATION_SEPARATOR); \r\n        String yearField = getStringCitProperty(YEAR_FIELD); \r\n        String andString = getStringCitProperty(AUTHOR_LAST_SEPARATOR_IN_TEXT); \r\n\n        if (andString == null) {\n            \r\n            andString = getStringCitProperty(AUTHOR_LAST_SEPARATOR);\n        }\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < entries.size(); i++) {\n            BibEntry currentEntry = entries.get(i);\n\n            \r\n            if (currentEntry == null) {\n                continue;\n            }\n\n            BibDatabase currentDatabase = database.get(currentEntry);\n            int unlimA = unlimAuthors == null ? -1 : unlimAuthors[i];\n            int maxAuthors = unlimA > 0 ? unlimA : maxA;\n\n            if (i > 0) {\n                sb.append(citationSeparator);\n            }\n            String author = getCitationMarkerField(currentEntry, currentDatabase, authorField);\n            String authorString = createAuthorList(author, maxAuthors, andString, yearSep);\n            sb.append(authorString);\n            sb.append(startBrace);\n            String year = getCitationMarkerField(currentEntry, currentDatabase, yearField);\n            if (year != null) {\n                sb.append(year);\n            }\n            if ((uniquefiers != null) && (uniquefiers[i] != null)) {\n                sb.append(uniquefiers[i]);\n            }\n            sb.append(endBrace);\n        }\n        return sb.toString();\n\n    }\n","date":"2021-06-03 23:44:24","endLine":683,"groupId":"9765","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"getAuthorYearInTextMarker","params":"(List<BibEntry>entries@Map<BibEntry@BibDatabase>database@String[]uniquefiers@int[]unlimAuthors)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/56/1099afe9659cd1316a55feb76535b1ffc54cf4.src","preCode":"    private String getAuthorYearInTextMarker(List<BibEntry> entries, Map<BibEntry, BibDatabase> database,\n                                             String[] uniquefiers,\n                                             int[] unlimAuthors) {\n        String authorField = getStringCitProperty(AUTHOR_FIELD); \r\n        int maxA = getIntCitProperty(MAX_AUTHORS); \r\n                                                   \r\n        String yearSep = getStringCitProperty(IN_TEXT_YEAR_SEPARATOR); \r\n        String startBrace = getStringCitProperty(BRACKET_BEFORE); \r\n        String endBrace = getStringCitProperty(BRACKET_AFTER); \r\n        String citationSeparator = getStringCitProperty(CITATION_SEPARATOR); \r\n        String yearField = getStringCitProperty(YEAR_FIELD); \r\n        String andString = getStringCitProperty(AUTHOR_LAST_SEPARATOR_IN_TEXT); \r\n\n        if (andString == null) {\n            \r\n            andString = getStringCitProperty(AUTHOR_LAST_SEPARATOR);\n        }\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < entries.size(); i++) {\n            BibEntry currentEntry = entries.get(i);\n\n            \r\n            if (currentEntry == null) {\n                continue;\n            }\n\n            BibDatabase currentDatabase = database.get(currentEntry);\n            int unlimA = unlimAuthors == null ? -1 : unlimAuthors[i];\n            int maxAuthors = unlimA > 0 ? unlimA : maxA;\n\n            if (i > 0) {\n                sb.append(citationSeparator);\n            }\n            String author = getCitationMarkerField(currentEntry, currentDatabase, authorField);\n            String authorString = createAuthorList(author, maxAuthors, andString, yearSep);\n            sb.append(authorString);\n            sb.append(startBrace);\n            String year = getCitationMarkerField(currentEntry, currentDatabase, yearField);\n            if (year != null) {\n                sb.append(year);\n            }\n            if ((uniquefiers != null) && (uniquefiers[i] != null)) {\n                sb.append(uniquefiers[i]);\n            }\n            sb.append(endBrace);\n        }\n        return sb.toString();\n\n    }\n","realPath":"src/main/java/org/jabref/logic/openoffice/style/OOBibStyle.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":635,"status":"B"}],"commitId":"ebed22390a8cfc58d050749159e00ffa380e1e12","commitMessage":"@@@step0 : start model/openoffice.  logic/openoffice/style (#7772)\n\n* step0 : start model/openoffice.  logic/openoffice/style\n\n* correction: import order","date":"2021-06-03 23:44:24","modifiedFileCount":"10","status":"B","submitter":"antalk2"},{"authorTime":"2021-09-02 01:54:58","codes":[{"authorDate":"2021-09-02 01:54:58","commitOrder":2,"curCode":"    private String getAuthorYearParenthesisMarker(List<BibEntry> entries, Map<BibEntry, BibDatabase> database,\n                                                  String[] uniquifiers, int[] unlimAuthors) {\n\n        String authorField = getStringCitProperty(AUTHOR_FIELD); \r\n        int maxA = getIntCitProperty(MAX_AUTHORS); \r\n                                                   \r\n        String yearSep = getStringCitProperty(YEAR_SEPARATOR); \r\n        String startBrace = getStringCitProperty(BRACKET_BEFORE); \r\n        String endBrace = getStringCitProperty(BRACKET_AFTER); \r\n        String citationSeparator = getStringCitProperty(CITATION_SEPARATOR); \r\n        String yearField = getStringCitProperty(YEAR_FIELD); \r\n        String andString = getStringCitProperty(AUTHOR_LAST_SEPARATOR); \r\n        StringBuilder stringBuilder = new StringBuilder(startBrace);\n        for (int j = 0; j < entries.size(); j++) {\n            BibEntry currentEntry = entries.get(j);\n\n            \r\n            if (currentEntry == null) {\n                continue;\n            }\n\n            if (j > 0) {\n                stringBuilder.append(citationSeparator);\n            }\n\n            BibDatabase currentDatabase = database.get(currentEntry);\n            int unlimA = unlimAuthors == null ? -1 : unlimAuthors[j];\n            int maxAuthors = unlimA > 0 ? unlimA : maxA;\n\n            String author = getCitationMarkerField(currentEntry, currentDatabase, authorField);\n            String authorString = createAuthorList(author, maxAuthors, andString, yearSep);\n            stringBuilder.append(authorString);\n            String year = getCitationMarkerField(currentEntry, currentDatabase, yearField);\n            if (year != null) {\n                stringBuilder.append(year);\n            }\n            if ((uniquifiers != null) && (uniquifiers[j] != null)) {\n                stringBuilder.append(uniquifiers[j]);\n            }\n        }\n        stringBuilder.append(endBrace);\n        return stringBuilder.toString();\n    }\n","date":"2021-09-02 01:54:58","endLine":656,"groupId":"10995","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"getAuthorYearParenthesisMarker","params":"(List<BibEntry>entries@Map<BibEntry@BibDatabase>database@String[]uniquifiers@int[]unlimAuthors)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/51/08c94c8b389456954aad438936f23b43e4963a.src","preCode":"    private String getAuthorYearParenthesisMarker(List<BibEntry> entries, Map<BibEntry, BibDatabase> database,\n                                                  String[] uniquifiers, int[] unlimAuthors) {\n\n        String authorField = getStringCitProperty(AUTHOR_FIELD); \r\n        int maxA = getIntCitProperty(MAX_AUTHORS); \r\n                                                   \r\n        String yearSep = getStringCitProperty(YEAR_SEPARATOR); \r\n        String startBrace = getStringCitProperty(BRACKET_BEFORE); \r\n        String endBrace = getStringCitProperty(BRACKET_AFTER); \r\n        String citationSeparator = getStringCitProperty(CITATION_SEPARATOR); \r\n        String yearField = getStringCitProperty(YEAR_FIELD); \r\n        String andString = getStringCitProperty(AUTHOR_LAST_SEPARATOR); \r\n        StringBuilder sb = new StringBuilder(startBrace);\n        for (int j = 0; j < entries.size(); j++) {\n            BibEntry currentEntry = entries.get(j);\n\n            \r\n            if (currentEntry == null) {\n                continue;\n            }\n\n            if (j > 0) {\n                sb.append(citationSeparator);\n            }\n\n            BibDatabase currentDatabase = database.get(currentEntry);\n            int unlimA = unlimAuthors == null ? -1 : unlimAuthors[j];\n            int maxAuthors = unlimA > 0 ? unlimA : maxA;\n\n            String author = getCitationMarkerField(currentEntry, currentDatabase, authorField);\n            String authorString = createAuthorList(author, maxAuthors, andString, yearSep);\n            sb.append(authorString);\n            String year = getCitationMarkerField(currentEntry, currentDatabase, yearField);\n            if (year != null) {\n                sb.append(year);\n            }\n            if ((uniquifiers != null) && (uniquifiers[j] != null)) {\n                sb.append(uniquifiers[j]);\n            }\n        }\n        sb.append(endBrace);\n        return sb.toString();\n    }\n","realPath":"src/main/java/org/jabref/logic/openoffice/style/OOBibStyle.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":614,"status":"M"},{"authorDate":"2021-09-02 01:54:58","commitOrder":2,"curCode":"    private String getAuthorYearInTextMarker(List<BibEntry> entries, Map<BibEntry, BibDatabase> database,\n                                             String[] uniquefiers,\n                                             int[] unlimAuthors) {\n        String authorField = getStringCitProperty(AUTHOR_FIELD); \r\n        int maxA = getIntCitProperty(MAX_AUTHORS); \r\n                                                   \r\n        String yearSep = getStringCitProperty(IN_TEXT_YEAR_SEPARATOR); \r\n        String startBrace = getStringCitProperty(BRACKET_BEFORE); \r\n        String endBrace = getStringCitProperty(BRACKET_AFTER); \r\n        String citationSeparator = getStringCitProperty(CITATION_SEPARATOR); \r\n        String yearField = getStringCitProperty(YEAR_FIELD); \r\n        String andString = getStringCitProperty(AUTHOR_LAST_SEPARATOR_IN_TEXT); \r\n\n        if (andString == null) {\n            \r\n            andString = getStringCitProperty(AUTHOR_LAST_SEPARATOR);\n        }\n        StringBuilder stringBuilder = new StringBuilder();\n        for (int i = 0; i < entries.size(); i++) {\n            BibEntry currentEntry = entries.get(i);\n\n            \r\n            if (currentEntry == null) {\n                continue;\n            }\n\n            BibDatabase currentDatabase = database.get(currentEntry);\n            int unlimA = unlimAuthors == null ? -1 : unlimAuthors[i];\n            int maxAuthors = unlimA > 0 ? unlimA : maxA;\n\n            if (i > 0) {\n                stringBuilder.append(citationSeparator);\n            }\n            String author = getCitationMarkerField(currentEntry, currentDatabase, authorField);\n            String authorString = createAuthorList(author, maxAuthors, andString, yearSep);\n            stringBuilder.append(authorString);\n            stringBuilder.append(startBrace);\n            String year = getCitationMarkerField(currentEntry, currentDatabase, yearField);\n            if (year != null) {\n                stringBuilder.append(year);\n            }\n            if ((uniquefiers != null) && (uniquefiers[i] != null)) {\n                stringBuilder.append(uniquefiers[i]);\n            }\n            stringBuilder.append(endBrace);\n        }\n        return stringBuilder.toString();\n\n    }\n","date":"2021-09-02 01:54:58","endLine":716,"groupId":"10995","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"getAuthorYearInTextMarker","params":"(List<BibEntry>entries@Map<BibEntry@BibDatabase>database@String[]uniquefiers@int[]unlimAuthors)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/51/08c94c8b389456954aad438936f23b43e4963a.src","preCode":"    private String getAuthorYearInTextMarker(List<BibEntry> entries, Map<BibEntry, BibDatabase> database,\n                                             String[] uniquefiers,\n                                             int[] unlimAuthors) {\n        String authorField = getStringCitProperty(AUTHOR_FIELD); \r\n        int maxA = getIntCitProperty(MAX_AUTHORS); \r\n                                                   \r\n        String yearSep = getStringCitProperty(IN_TEXT_YEAR_SEPARATOR); \r\n        String startBrace = getStringCitProperty(BRACKET_BEFORE); \r\n        String endBrace = getStringCitProperty(BRACKET_AFTER); \r\n        String citationSeparator = getStringCitProperty(CITATION_SEPARATOR); \r\n        String yearField = getStringCitProperty(YEAR_FIELD); \r\n        String andString = getStringCitProperty(AUTHOR_LAST_SEPARATOR_IN_TEXT); \r\n\n        if (andString == null) {\n            \r\n            andString = getStringCitProperty(AUTHOR_LAST_SEPARATOR);\n        }\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < entries.size(); i++) {\n            BibEntry currentEntry = entries.get(i);\n\n            \r\n            if (currentEntry == null) {\n                continue;\n            }\n\n            BibDatabase currentDatabase = database.get(currentEntry);\n            int unlimA = unlimAuthors == null ? -1 : unlimAuthors[i];\n            int maxAuthors = unlimA > 0 ? unlimA : maxA;\n\n            if (i > 0) {\n                sb.append(citationSeparator);\n            }\n            String author = getCitationMarkerField(currentEntry, currentDatabase, authorField);\n            String authorString = createAuthorList(author, maxAuthors, andString, yearSep);\n            sb.append(authorString);\n            sb.append(startBrace);\n            String year = getCitationMarkerField(currentEntry, currentDatabase, yearField);\n            if (year != null) {\n                sb.append(year);\n            }\n            if ((uniquefiers != null) && (uniquefiers[i] != null)) {\n                sb.append(uniquefiers[i]);\n            }\n            sb.append(endBrace);\n        }\n        return sb.toString();\n\n    }\n","realPath":"src/main/java/org/jabref/logic/openoffice/style/OOBibStyle.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":668,"status":"M"}],"commitId":"69550d39410a06b896ab2c490d3cbac9ae576d55","commitMessage":"@@@Oobranch f : add frontend (#7791)\n\n","date":"2021-09-02 01:54:58","modifiedFileCount":"20","status":"M","submitter":"antalk2"}]
