[{"authorTime":"2020-06-04 18:52:52","codes":[{"authorDate":"2020-06-04 18:52:52","commitOrder":1,"curCode":"    public static String firstPage(String pages) {\n        \r\n        \r\n        \r\n        final String[] splitPages = pages.split(\"\\\\D+\");\n        int result = Integer.MAX_VALUE;\n        for (String n : splitPages) {\n            if (n.matches(\"\\\\d+\")) {\n                result = Math.min(Integer.parseInt(n), result);\n            }\n        }\n\n        if (result == Integer.MAX_VALUE) {\n            return \"\";\n        } else {\n            return String.valueOf(result);\n        }\n    }\n","date":"2020-06-04 18:52:52","endLine":1044,"groupId":"11419","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"firstPage","params":"(Stringpages)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/42/54ed940bf8d48303cee85149b96f46a0e89d14.src","preCode":"    public static String firstPage(String pages) {\n        \r\n        \r\n        \r\n        final String[] splitPages = pages.split(\"\\\\D+\");\n        int result = Integer.MAX_VALUE;\n        for (String n : splitPages) {\n            if (n.matches(\"\\\\d+\")) {\n                result = Math.min(Integer.parseInt(n), result);\n            }\n        }\n\n        if (result == Integer.MAX_VALUE) {\n            return \"\";\n        } else {\n            return String.valueOf(result);\n        }\n    }\n","realPath":"src/main/java/org/jabref/logic/citationkeypattern/BracketedPattern.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":1027,"status":"B"},{"authorDate":"2020-06-04 18:52:52","commitOrder":1,"curCode":"    public static String lastPage(String pages) {\n        final String[] splitPages = pages.split(\"\\\\D+\");\n        int result = Integer.MIN_VALUE;\n        for (String n : splitPages) {\n            if (n.matches(\"\\\\d+\")) {\n                result = Math.max(Integer.parseInt(n), result);\n            }\n        }\n\n        if (result == Integer.MIN_VALUE) {\n            return \"\";\n        } else {\n            return String.valueOf(result);\n        }\n    }\n","date":"2020-06-04 18:52:52","endLine":1087,"groupId":"11419","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"lastPage","params":"(Stringpages)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/42/54ed940bf8d48303cee85149b96f46a0e89d14.src","preCode":"    public static String lastPage(String pages) {\n        final String[] splitPages = pages.split(\"\\\\D+\");\n        int result = Integer.MIN_VALUE;\n        for (String n : splitPages) {\n            if (n.matches(\"\\\\d+\")) {\n                result = Math.max(Integer.parseInt(n), result);\n            }\n        }\n\n        if (result == Integer.MIN_VALUE) {\n            return \"\";\n        } else {\n            return String.valueOf(result);\n        }\n    }\n","realPath":"src/main/java/org/jabref/logic/citationkeypattern/BracketedPattern.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":1073,"status":"B"}],"commitId":"7cc57474b7aa991ef6ea148d4030d4bb68ee69bf","commitMessage":"@@@Rename bibtexkey (#6545)\n\n* Reworded 'BibtexKey' to 'CitationKey'\n\n* Fixed merge errors.  renamed constants\n\n* Renamed forgotten package\n\n* Fixed overlooked enum names and added CHANGELOG.md entry","date":"2020-06-04 18:52:52","modifiedFileCount":"54","status":"B","submitter":"Carl Christian Snethlage"},{"authorTime":"2021-03-31 17:21:58","codes":[{"authorDate":"2021-03-31 17:21:58","commitOrder":2,"curCode":"    public static String firstPage(String pages) {\n        \r\n        \r\n        \r\n        return NOT_DECIMAL_DIGIT.splitAsStream(pages)\n                                .filter(Predicate.not(String::isBlank))\n                                .map(BigInteger::new)\n                                .min(BigInteger::compareTo)\n                                .map(BigInteger::toString)\n                                .orElse(\"\");\n    }\n","date":"2021-03-31 17:21:58","endLine":1033,"groupId":"101050","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"firstPage","params":"(Stringpages)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/b0/c7323d9a864ddb4a105ab84892f6e132363f9a.src","preCode":"    public static String firstPage(String pages) {\n        \r\n        \r\n        \r\n        final String[] splitPages = pages.split(\"\\\\D+\");\n        int result = Integer.MAX_VALUE;\n        for (String n : splitPages) {\n            if (n.matches(\"\\\\d+\")) {\n                result = Math.min(Integer.parseInt(n), result);\n            }\n        }\n\n        if (result == Integer.MAX_VALUE) {\n            return \"\";\n        } else {\n            return String.valueOf(result);\n        }\n    }\n","realPath":"src/main/java/org/jabref/logic/citationkeypattern/BracketedPattern.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":1023,"status":"M"},{"authorDate":"2021-03-31 17:21:58","commitOrder":2,"curCode":"    public static String lastPage(String pages) {\n        return NOT_DECIMAL_DIGIT.splitAsStream(pages)\n                                .filter(Predicate.not(String::isBlank))\n                                .map(BigInteger::new)\n                                .max(BigInteger::compareTo)\n                                .map(BigInteger::toString)\n                                .orElse(\"\");\n    }\n","date":"2021-03-31 17:21:58","endLine":1064,"groupId":"101050","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"lastPage","params":"(Stringpages)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/b0/c7323d9a864ddb4a105ab84892f6e132363f9a.src","preCode":"    public static String lastPage(String pages) {\n        final String[] splitPages = pages.split(\"\\\\D+\");\n        int result = Integer.MIN_VALUE;\n        for (String n : splitPages) {\n            if (n.matches(\"\\\\d+\")) {\n                result = Math.max(Integer.parseInt(n), result);\n            }\n        }\n\n        if (result == Integer.MIN_VALUE) {\n            return \"\";\n        } else {\n            return String.valueOf(result);\n        }\n    }\n","realPath":"src/main/java/org/jabref/logic/citationkeypattern/BracketedPattern.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":1057,"status":"M"}],"commitId":"bb011c9313367a28990ae213b3920fe6cd10d1dc","commitMessage":"@@@Fix NumberFormatException in BracketedPattern (#7600)\n\n* Fix NumberFormatException in BracketedPattern\n\n* Add entry in CHANGELOG.md\n\n* Add test case for `[lastpage]`\n\n* Fix checkstyle","date":"2021-03-31 17:21:58","modifiedFileCount":"2","status":"M","submitter":"Jonatan Asketorp"}]
