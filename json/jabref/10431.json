[{"authorTime":"2020-06-04 18:52:52","codes":[{"authorDate":"2020-06-04 18:52:52","commitOrder":1,"curCode":"    void testcrossrefShorttitle() {\n        BibDatabase database = new BibDatabase();\n        BibEntry entry1 = new BibEntry();\n        BibEntry entry2 = new BibEntry();\n        entry1.setField(StandardField.CROSSREF, \"entry2\");\n        entry2.setCiteKey(\"entry2\");\n        database.insertEntry(entry2);\n        database.insertEntry(entry1);\n        entry2.setField(StandardField.TITLE, \"Green Scheduling of Whatever\");\n\n        assertEquals(\"GreenSchedulingWhatever\", generateKey(entry1, \"shorttitle\",\n                database));\n    }\n","date":"2020-06-04 18:52:52","endLine":1022,"groupId":"623","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testcrossrefShorttitle","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/60/dce65c49846d4766f5c5e3f23997e65166fa9c.src","preCode":"    void testcrossrefShorttitle() {\n        BibDatabase database = new BibDatabase();\n        BibEntry entry1 = new BibEntry();\n        BibEntry entry2 = new BibEntry();\n        entry1.setField(StandardField.CROSSREF, \"entry2\");\n        entry2.setCiteKey(\"entry2\");\n        database.insertEntry(entry2);\n        database.insertEntry(entry1);\n        entry2.setField(StandardField.TITLE, \"Green Scheduling of Whatever\");\n\n        assertEquals(\"GreenSchedulingWhatever\", generateKey(entry1, \"shorttitle\",\n                database));\n    }\n","realPath":"src/test/java/org/jabref/logic/citationkeypattern/CitationKeyGeneratorTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":1010,"status":"B"},{"authorDate":"2020-06-04 18:52:52","commitOrder":1,"curCode":"    void testcrossrefShorttitleInitials() {\n        BibDatabase database = new BibDatabase();\n        BibEntry entry1 = new BibEntry();\n        BibEntry entry2 = new BibEntry();\n        entry1.setField(StandardField.CROSSREF, \"entry2\");\n        entry2.setCiteKey(\"entry2\");\n        database.insertEntry(entry2);\n        database.insertEntry(entry1);\n        entry2.setField(StandardField.TITLE, \"Green Scheduling of Whatever\");\n\n        assertEquals(\"GSo\", generateKey(entry1, \"shorttitleINI\", database));\n    }\n","date":"2020-06-04 18:52:52","endLine":1036,"groupId":"623","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testcrossrefShorttitleInitials","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/60/dce65c49846d4766f5c5e3f23997e65166fa9c.src","preCode":"    void testcrossrefShorttitleInitials() {\n        BibDatabase database = new BibDatabase();\n        BibEntry entry1 = new BibEntry();\n        BibEntry entry2 = new BibEntry();\n        entry1.setField(StandardField.CROSSREF, \"entry2\");\n        entry2.setCiteKey(\"entry2\");\n        database.insertEntry(entry2);\n        database.insertEntry(entry1);\n        entry2.setField(StandardField.TITLE, \"Green Scheduling of Whatever\");\n\n        assertEquals(\"GSo\", generateKey(entry1, \"shorttitleINI\", database));\n    }\n","realPath":"src/test/java/org/jabref/logic/citationkeypattern/CitationKeyGeneratorTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":1025,"status":"B"}],"commitId":"7cc57474b7aa991ef6ea148d4030d4bb68ee69bf","commitMessage":"@@@Rename bibtexkey (#6545)\n\n* Reworded 'BibtexKey' to 'CitationKey'\n\n* Fixed merge errors.  renamed constants\n\n* Renamed forgotten package\n\n* Fixed overlooked enum names and added CHANGELOG.md entry","date":"2020-06-04 18:52:52","modifiedFileCount":"54","status":"B","submitter":"Carl Christian Snethlage"},{"authorTime":"2020-09-08 21:34:34","codes":[{"authorDate":"2020-09-08 21:34:34","commitOrder":2,"curCode":"    void testcrossrefShorttitle() {\n        BibDatabase database = new BibDatabase();\n        BibEntry entry1 = new BibEntry();\n        BibEntry entry2 = new BibEntry();\n        entry1.setField(StandardField.CROSSREF, \"entry2\");\n        entry2.setCitationKey(\"entry2\");\n        database.insertEntry(entry2);\n        database.insertEntry(entry1);\n        entry2.setField(StandardField.TITLE, \"Green Scheduling of Whatever\");\n\n        assertEquals(\"GreenSchedulingWhatever\", generateKey(entry1, \"shorttitle\",\n                database));\n    }\n","date":"2020-09-08 21:34:34","endLine":1021,"groupId":"623","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testcrossrefShorttitle","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/64/2c270cf44f1688881754f9d5ab87f0fe85ca88.src","preCode":"    void testcrossrefShorttitle() {\n        BibDatabase database = new BibDatabase();\n        BibEntry entry1 = new BibEntry();\n        BibEntry entry2 = new BibEntry();\n        entry1.setField(StandardField.CROSSREF, \"entry2\");\n        entry2.setCiteKey(\"entry2\");\n        database.insertEntry(entry2);\n        database.insertEntry(entry1);\n        entry2.setField(StandardField.TITLE, \"Green Scheduling of Whatever\");\n\n        assertEquals(\"GreenSchedulingWhatever\", generateKey(entry1, \"shorttitle\",\n                database));\n    }\n","realPath":"src/test/java/org/jabref/logic/citationkeypattern/CitationKeyGeneratorTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":1009,"status":"M"},{"authorDate":"2020-09-08 21:34:34","commitOrder":2,"curCode":"    void testcrossrefShorttitleInitials() {\n        BibDatabase database = new BibDatabase();\n        BibEntry entry1 = new BibEntry();\n        BibEntry entry2 = new BibEntry();\n        entry1.setField(StandardField.CROSSREF, \"entry2\");\n        entry2.setCitationKey(\"entry2\");\n        database.insertEntry(entry2);\n        database.insertEntry(entry1);\n        entry2.setField(StandardField.TITLE, \"Green Scheduling of Whatever\");\n\n        assertEquals(\"GSo\", generateKey(entry1, \"shorttitleINI\", database));\n    }\n","date":"2020-09-08 21:34:34","endLine":1035,"groupId":"623","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testcrossrefShorttitleInitials","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/64/2c270cf44f1688881754f9d5ab87f0fe85ca88.src","preCode":"    void testcrossrefShorttitleInitials() {\n        BibDatabase database = new BibDatabase();\n        BibEntry entry1 = new BibEntry();\n        BibEntry entry2 = new BibEntry();\n        entry1.setField(StandardField.CROSSREF, \"entry2\");\n        entry2.setCiteKey(\"entry2\");\n        database.insertEntry(entry2);\n        database.insertEntry(entry1);\n        entry2.setField(StandardField.TITLE, \"Green Scheduling of Whatever\");\n\n        assertEquals(\"GSo\", generateKey(entry1, \"shorttitleINI\", database));\n    }\n","realPath":"src/test/java/org/jabref/logic/citationkeypattern/CitationKeyGeneratorTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":1024,"status":"M"}],"commitId":"6dec1747d8a1c89f6c62fc1d1939d88411f17eba","commitMessage":"@@@Complete rebranding of `bibtexkey` as `citationkey` (#6875)\n\n","date":"2020-09-08 21:34:34","modifiedFileCount":"127","status":"M","submitter":"Tobias Diez"},{"authorTime":"2020-09-22 01:39:32","codes":[{"authorDate":"2020-09-22 01:39:32","commitOrder":3,"curCode":"    void testcrossrefShorttitle() {\n        BibDatabase database = new BibDatabase();\n        BibEntry entry1 = new BibEntry()\n                .withField(StandardField.CROSSREF, \"entry2\");\n        BibEntry entry2 = new BibEntry()\n                .withCitationKey(\"entry2\")\n                .withField(StandardField.TITLE, \"Green Scheduling of Whatever\");\n        database.insertEntry(entry2);\n        database.insertEntry(entry1);\n\n        assertEquals(\"GreenSchedulingWhatever\", generateKey(entry1, \"[shorttitle]\",\n                database));\n    }\n","date":"2020-09-22 01:39:32","endLine":977,"groupId":"10431","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testcrossrefShorttitle","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/73/05bc43f668208f2f364a581b3ac7bfef9b615b.src","preCode":"    void testcrossrefShorttitle() {\n        BibDatabase database = new BibDatabase();\n        BibEntry entry1 = new BibEntry();\n        BibEntry entry2 = new BibEntry();\n        entry1.setField(StandardField.CROSSREF, \"entry2\");\n        entry2.setCitationKey(\"entry2\");\n        database.insertEntry(entry2);\n        database.insertEntry(entry1);\n        entry2.setField(StandardField.TITLE, \"Green Scheduling of Whatever\");\n\n        assertEquals(\"GreenSchedulingWhatever\", generateKey(entry1, \"shorttitle\",\n                database));\n    }\n","realPath":"src/test/java/org/jabref/logic/citationkeypattern/CitationKeyGeneratorTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":965,"status":"M"},{"authorDate":"2020-09-22 01:39:32","commitOrder":3,"curCode":"    void testcrossrefShorttitleInitials() {\n        BibDatabase database = new BibDatabase();\n        BibEntry entry1 = new BibEntry()\n                .withField(StandardField.CROSSREF, \"entry2\");\n        BibEntry entry2 = new BibEntry()\n                .withCitationKey(\"entry2\")\n                .withField(StandardField.TITLE, \"Green Scheduling of Whatever\");\n        database.insertEntry(entry2);\n        database.insertEntry(entry1);\n\n        assertEquals(\"GSo\", generateKey(entry1, \"[shorttitleINI]\", database));\n    }\n","date":"2020-09-22 01:39:32","endLine":991,"groupId":"10431","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testcrossrefShorttitleInitials","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/73/05bc43f668208f2f364a581b3ac7bfef9b615b.src","preCode":"    void testcrossrefShorttitleInitials() {\n        BibDatabase database = new BibDatabase();\n        BibEntry entry1 = new BibEntry();\n        BibEntry entry2 = new BibEntry();\n        entry1.setField(StandardField.CROSSREF, \"entry2\");\n        entry2.setCitationKey(\"entry2\");\n        database.insertEntry(entry2);\n        database.insertEntry(entry1);\n        entry2.setField(StandardField.TITLE, \"Green Scheduling of Whatever\");\n\n        assertEquals(\"GSo\", generateKey(entry1, \"shorttitleINI\", database));\n    }\n","realPath":"src/test/java/org/jabref/logic/citationkeypattern/CitationKeyGeneratorTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":980,"status":"M"}],"commitId":"efdd24c592a212a81e7f91164fe0d2a914cc5e09","commitMessage":"@@@Readability for citation key patterns (#6706)\n\n","date":"2020-09-22 01:39:32","modifiedFileCount":"6","status":"M","submitter":"Jonatan Asketorp"}]
