[{"authorTime":"2020-06-04 18:52:52","codes":[{"authorDate":"2019-08-02 15:20:10","commitOrder":10,"curCode":"    void cleanupRenamePdfRenamesFileEvenIfOnlyDifferenceIsCase(@TempDir Path testFolder) throws IOException {\n        Path path = testFolder.resolve(\"toot.tmp\");\n        Files.createFile(path);\n\n        LinkedFile fileField = new LinkedFile(\"\", path.toAbsolutePath().toString(), \"\");\n        entry.setField(StandardField.FILE, FileFieldWriter.getStringRepresentation(fileField));\n\n        when(filePreferences.getFileNamePattern()).thenReturn(\"[bibtexkey]\");\n        cleanup.cleanup(entry);\n\n        LinkedFile newFileField = new LinkedFile(\"\", \"Toot.tmp\", \"\");\n        assertEquals(Optional.of(FileFieldWriter.getStringRepresentation(newFileField)), entry.getField(StandardField.FILE));\n    }\n","date":"2019-08-02 15:20:10","endLine":65,"groupId":"7","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"cleanupRenamePdfRenamesFileEvenIfOnlyDifferenceIsCase","params":"(@TempDirPathtestFolder)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/81/96a580a431b7767a25d45d82c48c56b8853fe7.src","preCode":"    void cleanupRenamePdfRenamesFileEvenIfOnlyDifferenceIsCase(@TempDir Path testFolder) throws IOException {\n        Path path = testFolder.resolve(\"toot.tmp\");\n        Files.createFile(path);\n\n        LinkedFile fileField = new LinkedFile(\"\", path.toAbsolutePath().toString(), \"\");\n        entry.setField(StandardField.FILE, FileFieldWriter.getStringRepresentation(fileField));\n\n        when(filePreferences.getFileNamePattern()).thenReturn(\"[bibtexkey]\");\n        cleanup.cleanup(entry);\n\n        LinkedFile newFileField = new LinkedFile(\"\", \"Toot.tmp\", \"\");\n        assertEquals(Optional.of(FileFieldWriter.getStringRepresentation(newFileField)), entry.getField(StandardField.FILE));\n    }\n","realPath":"src/test/java/org/jabref/logic/cleanup/RenamePdfCleanupTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":53,"status":"NB"},{"authorDate":"2020-06-04 18:52:52","commitOrder":10,"curCode":"    void cleanupRenamePdfRenamesFileStartingWithCitationKey(@TempDir Path testFolder) throws IOException {\n        Path path = testFolder.resolve(\"Toot.tmp\");\n        Files.createFile(path);\n\n        LinkedFile fileField = new LinkedFile(\"\", path.toAbsolutePath().toString(), \"\");\n        entry.setField(StandardField.FILE, FileFieldWriter.getStringRepresentation(fileField));\n        entry.setField(StandardField.TITLE, \"test title\");\n\n        when(filePreferences.getFileNamePattern()).thenReturn(\"[bibtexkey] - [fulltitle]\");\n        cleanup.cleanup(entry);\n\n        LinkedFile newFileField = new LinkedFile(\"\", \"Toot - test title.tmp\", \"\");\n        assertEquals(Optional.of(FileFieldWriter.getStringRepresentation(newFileField)), entry.getField(StandardField.FILE));\n    }\n","date":"2020-06-04 18:52:52","endLine":98,"groupId":"7","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"cleanupRenamePdfRenamesFileStartingWithCitationKey","params":"(@TempDirPathtestFolder)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/13/6423d9a3ca897c31f52ba788bc1497862cc066.src","preCode":"    void cleanupRenamePdfRenamesFileStartingWithCitationKey(@TempDir Path testFolder) throws IOException {\n        Path path = testFolder.resolve(\"Toot.tmp\");\n        Files.createFile(path);\n\n        LinkedFile fileField = new LinkedFile(\"\", path.toAbsolutePath().toString(), \"\");\n        entry.setField(StandardField.FILE, FileFieldWriter.getStringRepresentation(fileField));\n        entry.setField(StandardField.TITLE, \"test title\");\n\n        when(filePreferences.getFileNamePattern()).thenReturn(\"[bibtexkey] - [fulltitle]\");\n        cleanup.cleanup(entry);\n\n        LinkedFile newFileField = new LinkedFile(\"\", \"Toot - test title.tmp\", \"\");\n        assertEquals(Optional.of(FileFieldWriter.getStringRepresentation(newFileField)), entry.getField(StandardField.FILE));\n    }\n","realPath":"src/test/java/org/jabref/logic/cleanup/RenamePdfCleanupTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":85,"status":"B"}],"commitId":"7cc57474b7aa991ef6ea148d4030d4bb68ee69bf","commitMessage":"@@@Rename bibtexkey (#6545)\n\n* Reworded 'BibtexKey' to 'CitationKey'\n\n* Fixed merge errors.  renamed constants\n\n* Renamed forgotten package\n\n* Fixed overlooked enum names and added CHANGELOG.md entry","date":"2020-06-04 18:52:52","modifiedFileCount":"54","status":"M","submitter":"Carl Christian Snethlage"},{"authorTime":"2020-09-08 21:34:34","codes":[{"authorDate":"2020-09-08 21:34:34","commitOrder":11,"curCode":"    void cleanupRenamePdfRenamesFileEvenIfOnlyDifferenceIsCase(@TempDir Path testFolder) throws IOException {\n        Path path = testFolder.resolve(\"toot.tmp\");\n        Files.createFile(path);\n\n        LinkedFile fileField = new LinkedFile(\"\", path.toAbsolutePath().toString(), \"\");\n        entry.setField(StandardField.FILE, FileFieldWriter.getStringRepresentation(fileField));\n\n        when(filePreferences.getFileNamePattern()).thenReturn(\"[citationkey]\");\n        cleanup.cleanup(entry);\n\n        LinkedFile newFileField = new LinkedFile(\"\", \"Toot.tmp\", \"\");\n        assertEquals(Optional.of(FileFieldWriter.getStringRepresentation(newFileField)), entry.getField(StandardField.FILE));\n    }\n","date":"2020-09-08 21:34:34","endLine":64,"groupId":"7","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"cleanupRenamePdfRenamesFileEvenIfOnlyDifferenceIsCase","params":"(@TempDirPathtestFolder)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/c2/cd3e87ff89e8dc72950a8449e8e6de0614990c.src","preCode":"    void cleanupRenamePdfRenamesFileEvenIfOnlyDifferenceIsCase(@TempDir Path testFolder) throws IOException {\n        Path path = testFolder.resolve(\"toot.tmp\");\n        Files.createFile(path);\n\n        LinkedFile fileField = new LinkedFile(\"\", path.toAbsolutePath().toString(), \"\");\n        entry.setField(StandardField.FILE, FileFieldWriter.getStringRepresentation(fileField));\n\n        when(filePreferences.getFileNamePattern()).thenReturn(\"[bibtexkey]\");\n        cleanup.cleanup(entry);\n\n        LinkedFile newFileField = new LinkedFile(\"\", \"Toot.tmp\", \"\");\n        assertEquals(Optional.of(FileFieldWriter.getStringRepresentation(newFileField)), entry.getField(StandardField.FILE));\n    }\n","realPath":"src/test/java/org/jabref/logic/cleanup/RenamePdfCleanupTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":52,"status":"M"},{"authorDate":"2020-09-08 21:34:34","commitOrder":11,"curCode":"    void cleanupRenamePdfRenamesFileStartingWithCitationKey(@TempDir Path testFolder) throws IOException {\n        Path path = testFolder.resolve(\"Toot.tmp\");\n        Files.createFile(path);\n\n        LinkedFile fileField = new LinkedFile(\"\", path.toAbsolutePath().toString(), \"\");\n        entry.setField(StandardField.FILE, FileFieldWriter.getStringRepresentation(fileField));\n        entry.setField(StandardField.TITLE, \"test title\");\n\n        when(filePreferences.getFileNamePattern()).thenReturn(\"[citationkey] - [fulltitle]\");\n        cleanup.cleanup(entry);\n\n        LinkedFile newFileField = new LinkedFile(\"\", \"Toot - test title.tmp\", \"\");\n        assertEquals(Optional.of(FileFieldWriter.getStringRepresentation(newFileField)), entry.getField(StandardField.FILE));\n    }\n","date":"2020-09-08 21:34:34","endLine":98,"groupId":"7","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"cleanupRenamePdfRenamesFileStartingWithCitationKey","params":"(@TempDirPathtestFolder)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/c2/cd3e87ff89e8dc72950a8449e8e6de0614990c.src","preCode":"    void cleanupRenamePdfRenamesFileStartingWithCitationKey(@TempDir Path testFolder) throws IOException {\n        Path path = testFolder.resolve(\"Toot.tmp\");\n        Files.createFile(path);\n\n        LinkedFile fileField = new LinkedFile(\"\", path.toAbsolutePath().toString(), \"\");\n        entry.setField(StandardField.FILE, FileFieldWriter.getStringRepresentation(fileField));\n        entry.setField(StandardField.TITLE, \"test title\");\n\n        when(filePreferences.getFileNamePattern()).thenReturn(\"[bibtexkey] - [fulltitle]\");\n        cleanup.cleanup(entry);\n\n        LinkedFile newFileField = new LinkedFile(\"\", \"Toot - test title.tmp\", \"\");\n        assertEquals(Optional.of(FileFieldWriter.getStringRepresentation(newFileField)), entry.getField(StandardField.FILE));\n    }\n","realPath":"src/test/java/org/jabref/logic/cleanup/RenamePdfCleanupTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":85,"status":"M"}],"commitId":"6dec1747d8a1c89f6c62fc1d1939d88411f17eba","commitMessage":"@@@Complete rebranding of `bibtexkey` as `citationkey` (#6875)\n\n","date":"2020-09-08 21:34:34","modifiedFileCount":"127","status":"M","submitter":"Tobias Diez"},{"authorTime":"2020-09-26 05:39:50","codes":[{"authorDate":"2020-09-26 05:39:50","commitOrder":12,"curCode":"    void cleanupRenamePdfRenamesFileEvenIfOnlyDifferenceIsCase(@TempDir Path testFolder) throws IOException {\n        Path path = testFolder.resolve(\"toot.tmp\");\n        Files.createFile(path);\n\n        LinkedFile fileField = new LinkedFile(\"\", path.toAbsolutePath(), \"\");\n        entry.setField(StandardField.FILE, FileFieldWriter.getStringRepresentation(fileField));\n\n        when(filePreferences.getFileNamePattern()).thenReturn(\"[citationkey]\");\n        cleanup.cleanup(entry);\n\n        LinkedFile newFileField = new LinkedFile(\"\", Path.of(\"Toot.tmp\"), \"\");\n        assertEquals(Optional.of(FileFieldWriter.getStringRepresentation(newFileField)), entry.getField(StandardField.FILE));\n    }\n","date":"2020-09-26 05:39:50","endLine":64,"groupId":"10547","id":5,"instanceNumber":1,"isCurCommit":1,"methodName":"cleanupRenamePdfRenamesFileEvenIfOnlyDifferenceIsCase","params":"(@TempDirPathtestFolder)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/bd/47aa164718cb9ca2484986b9f010a12a4b3c58.src","preCode":"    void cleanupRenamePdfRenamesFileEvenIfOnlyDifferenceIsCase(@TempDir Path testFolder) throws IOException {\n        Path path = testFolder.resolve(\"toot.tmp\");\n        Files.createFile(path);\n\n        LinkedFile fileField = new LinkedFile(\"\", path.toAbsolutePath().toString(), \"\");\n        entry.setField(StandardField.FILE, FileFieldWriter.getStringRepresentation(fileField));\n\n        when(filePreferences.getFileNamePattern()).thenReturn(\"[citationkey]\");\n        cleanup.cleanup(entry);\n\n        LinkedFile newFileField = new LinkedFile(\"\", \"Toot.tmp\", \"\");\n        assertEquals(Optional.of(FileFieldWriter.getStringRepresentation(newFileField)), entry.getField(StandardField.FILE));\n    }\n","realPath":"src/test/java/org/jabref/logic/cleanup/RenamePdfCleanupTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":52,"status":"M"},{"authorDate":"2020-09-26 05:39:50","commitOrder":12,"curCode":"    void cleanupRenamePdfRenamesFileStartingWithCitationKey(@TempDir Path testFolder) throws IOException {\n        Path path = testFolder.resolve(\"Toot.tmp\");\n        Files.createFile(path);\n\n        LinkedFile fileField = new LinkedFile(\"\", path.toAbsolutePath(), \"\");\n        entry.setField(StandardField.FILE, FileFieldWriter.getStringRepresentation(fileField));\n        entry.setField(StandardField.TITLE, \"test title\");\n\n        when(filePreferences.getFileNamePattern()).thenReturn(\"[citationkey] - [fulltitle]\");\n        cleanup.cleanup(entry);\n\n        LinkedFile newFileField = new LinkedFile(\"\", Path.of(\"Toot - test title.tmp\"), \"\");\n        assertEquals(Optional.of(FileFieldWriter.getStringRepresentation(newFileField)), entry.getField(StandardField.FILE));\n    }\n","date":"2020-09-26 05:39:50","endLine":103,"groupId":"10547","id":6,"instanceNumber":2,"isCurCommit":1,"methodName":"cleanupRenamePdfRenamesFileStartingWithCitationKey","params":"(@TempDirPathtestFolder)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/bd/47aa164718cb9ca2484986b9f010a12a4b3c58.src","preCode":"    void cleanupRenamePdfRenamesFileStartingWithCitationKey(@TempDir Path testFolder) throws IOException {\n        Path path = testFolder.resolve(\"Toot.tmp\");\n        Files.createFile(path);\n\n        LinkedFile fileField = new LinkedFile(\"\", path.toAbsolutePath().toString(), \"\");\n        entry.setField(StandardField.FILE, FileFieldWriter.getStringRepresentation(fileField));\n        entry.setField(StandardField.TITLE, \"test title\");\n\n        when(filePreferences.getFileNamePattern()).thenReturn(\"[citationkey] - [fulltitle]\");\n        cleanup.cleanup(entry);\n\n        LinkedFile newFileField = new LinkedFile(\"\", \"Toot - test title.tmp\", \"\");\n        assertEquals(Optional.of(FileFieldWriter.getStringRepresentation(newFileField)), entry.getField(StandardField.FILE));\n    }\n","realPath":"src/test/java/org/jabref/logic/cleanup/RenamePdfCleanupTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":90,"status":"M"}],"commitId":"3123090b6cf44e853eceae42854d49e78e81be2a","commitMessage":"@@@Changed default value of \"search and store files relative to bibtex file\" to true (#6928)\n\n* Fixes #6863\n\n* CHANGELOG.md\n\n* Reworded bibLocationAsPrimary to reflect real meaning of the preference setting.  changed default val to true\n\n* Cleanup of deprecated methods LinkedFiles(String.  String.  String) and List<String> getFileDirectories(...)\n\n* Reworded package filelist to linkedfile\n\n* Fixed SpringerFetcher","date":"2020-09-26 05:39:50","modifiedFileCount":"45","status":"M","submitter":"Carl Christian Snethlage"}]
