[{"authorTime":"2020-05-01 20:14:59","codes":[{"authorDate":"2021-05-04 05:35:55","commitOrder":2,"curCode":"    public static JournalAbbreviationRepository loadRepository(JournalAbbreviationPreferences journalAbbreviationPreferences) {\n        JournalAbbreviationRepository repository;\n        \r\n        try {\n            Path tempJournalList = Files.createTempDirectory(\"journal\").resolve(\"journalList.mv\");\n            Files.copy(JournalAbbreviationRepository.class.getResourceAsStream(\"/journals/journalList.mv\"), tempJournalList);\n            repository = new JournalAbbreviationRepository(tempJournalList);\n        } catch (IOException e) {\n            LOGGER.error(\"Error while copying journal list\", e);\n            return null;\n        }\n\n        \r\n        List<String> lists = journalAbbreviationPreferences.getExternalJournalLists();\n        if (!(lists.isEmpty())) {\n            Collections.reverse(lists);\n            for (String filename : lists) {\n                try {\n                    repository.addCustomAbbreviations(readJournalListFromFile(Path.of(filename)));\n                } catch (IOException e) {\n                    LOGGER.error(String.format(\"Cannot read external journal list file %s\", filename), e);\n                }\n            }\n        }\n        return repository;\n    }\n","date":"2021-05-04 05:35:55","endLine":49,"groupId":"9398","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"loadRepository","params":"(JournalAbbreviationPreferencesjournalAbbreviationPreferences)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/72/f0664b0464a82985b22a5c13d58ed9421bfed9.src","preCode":"    public static JournalAbbreviationRepository loadRepository(JournalAbbreviationPreferences journalAbbreviationPreferences) {\n        JournalAbbreviationRepository repository;\n        \r\n        try {\n            Path tempJournalList = Files.createTempDirectory(\"journal\").resolve(\"journalList.mv\");\n            Files.copy(JournalAbbreviationRepository.class.getResourceAsStream(\"/journals/journalList.mv\"), tempJournalList);\n            repository = new JournalAbbreviationRepository(tempJournalList);\n        } catch (IOException e) {\n            LOGGER.error(\"Error while copying journal list\", e);\n            return null;\n        }\n\n        \r\n        List<String> lists = journalAbbreviationPreferences.getExternalJournalLists();\n        if (!(lists.isEmpty())) {\n            Collections.reverse(lists);\n            for (String filename : lists) {\n                try {\n                    repository.addCustomAbbreviations(readJournalListFromFile(Path.of(filename)));\n                } catch (IOException e) {\n                    LOGGER.error(String.format(\"Cannot read external journal list file %s\", filename), e);\n                }\n            }\n        }\n        return repository;\n    }\n","realPath":"buildSrc/src/copied/java/org/jabref/logic/journals/JournalAbbreviationLoader.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":24,"status":"B"},{"authorDate":"2020-05-01 20:14:59","commitOrder":2,"curCode":"    public static JournalAbbreviationRepository loadRepository(JournalAbbreviationPreferences journalAbbreviationPreferences) {\n        JournalAbbreviationRepository repository;\n        \r\n        try {\n            Path tempJournalList = Files.createTempDirectory(\"journal\").resolve(\"journalList.mv\");\n            Files.copy(JournalAbbreviationRepository.class.getResourceAsStream(\"/journals/journalList.mv\"), tempJournalList);\n            repository = new JournalAbbreviationRepository(tempJournalList);\n        } catch (IOException e) {\n            LOGGER.error(\"Error while copying journal list\", e);\n            return null;\n        }\n\n        \r\n        List<String> lists = journalAbbreviationPreferences.getExternalJournalLists();\n        if (!(lists.isEmpty())) {\n            Collections.reverse(lists);\n            for (String filename : lists) {\n                try {\n                    repository.addCustomAbbreviations(readJournalListFromFile(Path.of(filename)));\n                } catch (IOException e) {\n                    LOGGER.error(String.format(\"Cannot read external journal list file %s\", filename), e);\n                }\n            }\n        }\n        return repository;\n    }\n","date":"2020-05-01 20:14:59","endLine":70,"groupId":"9398","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"loadRepository","params":"(JournalAbbreviationPreferencesjournalAbbreviationPreferences)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/69/f87bedd2ce00abc4b3e4757168daf22a5f2f9e.src","preCode":"    public static JournalAbbreviationRepository loadRepository(JournalAbbreviationPreferences journalAbbreviationPreferences) {\n        JournalAbbreviationRepository repository;\n        \r\n        try {\n            Path tempJournalList = Files.createTempDirectory(\"journal\").resolve(\"journalList.mv\");\n            Files.copy(JournalAbbreviationRepository.class.getResourceAsStream(\"/journals/journalList.mv\"), tempJournalList);\n            repository = new JournalAbbreviationRepository(tempJournalList);\n        } catch (IOException e) {\n            LOGGER.error(\"Error while copying journal list\", e);\n            return null;\n        }\n\n        \r\n        List<String> lists = journalAbbreviationPreferences.getExternalJournalLists();\n        if (!(lists.isEmpty())) {\n            Collections.reverse(lists);\n            for (String filename : lists) {\n                try {\n                    repository.addCustomAbbreviations(readJournalListFromFile(Path.of(filename)));\n                } catch (IOException e) {\n                    LOGGER.error(String.format(\"Cannot read external journal list file %s\", filename), e);\n                }\n            }\n        }\n        return repository;\n    }\n","realPath":"src/main/java/org/jabref/logic/journals/JournalAbbreviationLoader.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":45,"status":"NB"}],"commitId":"382bc70d38cb28f00144355508e9822d32e3a73b","commitMessage":"@@@Update Gradle from 6.8.3 to 7.0 (#7619)\n\nCo-authored-by: Siedlerchr <siedlerkiller@gmail.com>\nCo-authored-by: Carl Christian Snethlage <50491877+calixtus@users.noreply.github.com>","date":"2021-05-04 05:35:55","modifiedFileCount":"0","status":"M","submitter":"Oliver Kopp"},{"authorTime":"2021-06-11 05:06:00","codes":[{"authorDate":"2021-05-04 05:35:55","commitOrder":3,"curCode":"    public static JournalAbbreviationRepository loadRepository(JournalAbbreviationPreferences journalAbbreviationPreferences) {\n        JournalAbbreviationRepository repository;\n        \r\n        try {\n            Path tempJournalList = Files.createTempDirectory(\"journal\").resolve(\"journalList.mv\");\n            Files.copy(JournalAbbreviationRepository.class.getResourceAsStream(\"/journals/journalList.mv\"), tempJournalList);\n            repository = new JournalAbbreviationRepository(tempJournalList);\n        } catch (IOException e) {\n            LOGGER.error(\"Error while copying journal list\", e);\n            return null;\n        }\n\n        \r\n        List<String> lists = journalAbbreviationPreferences.getExternalJournalLists();\n        if (!(lists.isEmpty())) {\n            Collections.reverse(lists);\n            for (String filename : lists) {\n                try {\n                    repository.addCustomAbbreviations(readJournalListFromFile(Path.of(filename)));\n                } catch (IOException e) {\n                    LOGGER.error(String.format(\"Cannot read external journal list file %s\", filename), e);\n                }\n            }\n        }\n        return repository;\n    }\n","date":"2021-05-04 05:35:55","endLine":49,"groupId":"9398","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"loadRepository","params":"(JournalAbbreviationPreferencesjournalAbbreviationPreferences)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/72/f0664b0464a82985b22a5c13d58ed9421bfed9.src","preCode":"    public static JournalAbbreviationRepository loadRepository(JournalAbbreviationPreferences journalAbbreviationPreferences) {\n        JournalAbbreviationRepository repository;\n        \r\n        try {\n            Path tempJournalList = Files.createTempDirectory(\"journal\").resolve(\"journalList.mv\");\n            Files.copy(JournalAbbreviationRepository.class.getResourceAsStream(\"/journals/journalList.mv\"), tempJournalList);\n            repository = new JournalAbbreviationRepository(tempJournalList);\n        } catch (IOException e) {\n            LOGGER.error(\"Error while copying journal list\", e);\n            return null;\n        }\n\n        \r\n        List<String> lists = journalAbbreviationPreferences.getExternalJournalLists();\n        if (!(lists.isEmpty())) {\n            Collections.reverse(lists);\n            for (String filename : lists) {\n                try {\n                    repository.addCustomAbbreviations(readJournalListFromFile(Path.of(filename)));\n                } catch (IOException e) {\n                    LOGGER.error(String.format(\"Cannot read external journal list file %s\", filename), e);\n                }\n            }\n        }\n        return repository;\n    }\n","realPath":"buildSrc/src/copied/java/org/jabref/logic/journals/JournalAbbreviationLoader.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":24,"status":"N"},{"authorDate":"2021-06-11 05:06:00","commitOrder":3,"curCode":"    public static JournalAbbreviationRepository loadRepository(JournalAbbreviationPreferences journalAbbreviationPreferences) {\n        JournalAbbreviationRepository repository;\n        \r\n        try {\n            Path tempDir = Files.createTempDirectory(\"jabref-journal\");\n            Path tempJournalList = tempDir.resolve(\"journalList.mv\");\n            Files.copy(JournalAbbreviationRepository.class.getResourceAsStream(\"/journals/journalList.mv\"), tempJournalList);\n            repository = new JournalAbbreviationRepository(tempJournalList);\n            tempDir.toFile().deleteOnExit();\n            tempJournalList.toFile().deleteOnExit();\n        } catch (IOException e) {\n            LOGGER.error(\"Error while copying journal list\", e);\n            return null;\n        }\n\n        \r\n        List<String> lists = journalAbbreviationPreferences.getExternalJournalLists();\n        if (!(lists.isEmpty())) {\n            Collections.reverse(lists);\n            for (String filename : lists) {\n                try {\n                    repository.addCustomAbbreviations(readJournalListFromFile(Path.of(filename)));\n                } catch (IOException e) {\n                    LOGGER.error(String.format(\"Cannot read external journal list file %s\", filename), e);\n                }\n            }\n        }\n        return repository;\n    }\n","date":"2021-06-11 05:06:00","endLine":52,"groupId":"9398","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"loadRepository","params":"(JournalAbbreviationPreferencesjournalAbbreviationPreferences)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/cf/7d6a177ed86af0d52bde713d5d4a4938c035d4.src","preCode":"    public static JournalAbbreviationRepository loadRepository(JournalAbbreviationPreferences journalAbbreviationPreferences) {\n        JournalAbbreviationRepository repository;\n        \r\n        try {\n            Path tempJournalList = Files.createTempDirectory(\"journal\").resolve(\"journalList.mv\");\n            Files.copy(JournalAbbreviationRepository.class.getResourceAsStream(\"/journals/journalList.mv\"), tempJournalList);\n            repository = new JournalAbbreviationRepository(tempJournalList);\n        } catch (IOException e) {\n            LOGGER.error(\"Error while copying journal list\", e);\n            return null;\n        }\n\n        \r\n        List<String> lists = journalAbbreviationPreferences.getExternalJournalLists();\n        if (!(lists.isEmpty())) {\n            Collections.reverse(lists);\n            for (String filename : lists) {\n                try {\n                    repository.addCustomAbbreviations(readJournalListFromFile(Path.of(filename)));\n                } catch (IOException e) {\n                    LOGGER.error(String.format(\"Cannot read external journal list file %s\", filename), e);\n                }\n            }\n        }\n        return repository;\n    }\n","realPath":"src/main/java/org/jabref/logic/journals/JournalAbbreviationLoader.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":24,"status":"M"}],"commitId":"0191910c7994cacab90d4200e4bcf5243c9949c5","commitMessage":"@@@cleanup temporary files.  use prefix \"jabref-\" (#7811)\n\n","date":"2021-06-11 05:06:00","modifiedFileCount":"2","status":"M","submitter":"antalk2"},{"authorTime":"2021-06-11 05:06:00","codes":[{"authorDate":"2021-07-06 00:22:51","commitOrder":4,"curCode":"    public static JournalAbbreviationRepository loadRepository(JournalAbbreviationPreferences journalAbbreviationPreferences) {\n        JournalAbbreviationRepository repository;\n        \r\n        try {\n            Path tempDir = Files.createTempDirectory(\"jabref-journal\");\n            Path tempJournalList = tempDir.resolve(\"journalList.mv\");\n            Files.copy(JournalAbbreviationRepository.class.getResourceAsStream(\"/journals/journalList.mv\"), tempJournalList);\n            repository = new JournalAbbreviationRepository(tempJournalList);\n            tempDir.toFile().deleteOnExit();\n            tempJournalList.toFile().deleteOnExit();\n        } catch (IOException e) {\n            LOGGER.error(\"Error while copying journal list\", e);\n            return null;\n        }\n\n        \r\n        List<String> lists = journalAbbreviationPreferences.getExternalJournalLists();\n        if (!(lists.isEmpty())) {\n            Collections.reverse(lists);\n            for (String filename : lists) {\n                try {\n                    repository.addCustomAbbreviations(readJournalListFromFile(Path.of(filename)));\n                } catch (IOException e) {\n                    LOGGER.error(String.format(\"Cannot read external journal list file %s\", filename), e);\n                }\n            }\n        }\n        return repository;\n    }\n","date":"2021-07-06 00:22:51","endLine":52,"groupId":"1010","id":5,"instanceNumber":1,"isCurCommit":1,"methodName":"loadRepository","params":"(JournalAbbreviationPreferencesjournalAbbreviationPreferences)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/cf/7d6a177ed86af0d52bde713d5d4a4938c035d4.src","preCode":"    public static JournalAbbreviationRepository loadRepository(JournalAbbreviationPreferences journalAbbreviationPreferences) {\n        JournalAbbreviationRepository repository;\n        \r\n        try {\n            Path tempJournalList = Files.createTempDirectory(\"journal\").resolve(\"journalList.mv\");\n            Files.copy(JournalAbbreviationRepository.class.getResourceAsStream(\"/journals/journalList.mv\"), tempJournalList);\n            repository = new JournalAbbreviationRepository(tempJournalList);\n        } catch (IOException e) {\n            LOGGER.error(\"Error while copying journal list\", e);\n            return null;\n        }\n\n        \r\n        List<String> lists = journalAbbreviationPreferences.getExternalJournalLists();\n        if (!(lists.isEmpty())) {\n            Collections.reverse(lists);\n            for (String filename : lists) {\n                try {\n                    repository.addCustomAbbreviations(readJournalListFromFile(Path.of(filename)));\n                } catch (IOException e) {\n                    LOGGER.error(String.format(\"Cannot read external journal list file %s\", filename), e);\n                }\n            }\n        }\n        return repository;\n    }\n","realPath":"buildSrc/src/copied/java/org/jabref/logic/journals/JournalAbbreviationLoader.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":24,"status":"M"},{"authorDate":"2021-06-11 05:06:00","commitOrder":4,"curCode":"    public static JournalAbbreviationRepository loadRepository(JournalAbbreviationPreferences journalAbbreviationPreferences) {\n        JournalAbbreviationRepository repository;\n        \r\n        try {\n            Path tempDir = Files.createTempDirectory(\"jabref-journal\");\n            Path tempJournalList = tempDir.resolve(\"journalList.mv\");\n            Files.copy(JournalAbbreviationRepository.class.getResourceAsStream(\"/journals/journalList.mv\"), tempJournalList);\n            repository = new JournalAbbreviationRepository(tempJournalList);\n            tempDir.toFile().deleteOnExit();\n            tempJournalList.toFile().deleteOnExit();\n        } catch (IOException e) {\n            LOGGER.error(\"Error while copying journal list\", e);\n            return null;\n        }\n\n        \r\n        List<String> lists = journalAbbreviationPreferences.getExternalJournalLists();\n        if (!(lists.isEmpty())) {\n            Collections.reverse(lists);\n            for (String filename : lists) {\n                try {\n                    repository.addCustomAbbreviations(readJournalListFromFile(Path.of(filename)));\n                } catch (IOException e) {\n                    LOGGER.error(String.format(\"Cannot read external journal list file %s\", filename), e);\n                }\n            }\n        }\n        return repository;\n    }\n","date":"2021-06-11 05:06:00","endLine":52,"groupId":"1010","id":6,"instanceNumber":2,"isCurCommit":1,"methodName":"loadRepository","params":"(JournalAbbreviationPreferencesjournalAbbreviationPreferences)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/cf/7d6a177ed86af0d52bde713d5d4a4938c035d4.src","preCode":"    public static JournalAbbreviationRepository loadRepository(JournalAbbreviationPreferences journalAbbreviationPreferences) {\n        JournalAbbreviationRepository repository;\n        \r\n        try {\n            Path tempDir = Files.createTempDirectory(\"jabref-journal\");\n            Path tempJournalList = tempDir.resolve(\"journalList.mv\");\n            Files.copy(JournalAbbreviationRepository.class.getResourceAsStream(\"/journals/journalList.mv\"), tempJournalList);\n            repository = new JournalAbbreviationRepository(tempJournalList);\n            tempDir.toFile().deleteOnExit();\n            tempJournalList.toFile().deleteOnExit();\n        } catch (IOException e) {\n            LOGGER.error(\"Error while copying journal list\", e);\n            return null;\n        }\n\n        \r\n        List<String> lists = journalAbbreviationPreferences.getExternalJournalLists();\n        if (!(lists.isEmpty())) {\n            Collections.reverse(lists);\n            for (String filename : lists) {\n                try {\n                    repository.addCustomAbbreviations(readJournalListFromFile(Path.of(filename)));\n                } catch (IOException e) {\n                    LOGGER.error(String.format(\"Cannot read external journal list file %s\", filename), e);\n                }\n            }\n        }\n        return repository;\n    }\n","realPath":"src/main/java/org/jabref/logic/journals/JournalAbbreviationLoader.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":24,"status":"N"}],"commitId":"152d41179c105790e6bceb64b468412f70c6c2cc","commitMessage":"@@@Update journal abbrev list (#7879)\n\nCo-authored-by: Siedlerchr <Siedlerchr@users.noreply.github.com>","date":"2021-07-06 00:22:51","modifiedFileCount":"1","status":"M","submitter":"github-actions[bot]"}]
