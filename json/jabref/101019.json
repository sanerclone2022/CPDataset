[{"authorTime":"2017-02-17 05:41:47","codes":[{"authorDate":"2017-02-17 05:41:47","commitOrder":1,"curCode":"    private Element getChild(String name, Element e) {\n        NodeList children = e.getChildNodes();\n\n        int j = children.getLength();\n        for (int i = 0; i < j; i++) {\n            Node test = children.item(i);\n            if (test.getNodeType() == Node.ELEMENT_NODE) {\n                Element entry = (Element) test;\n                if (entry.getTagName().equals(name)) {\n                    return entry;\n                }\n            }\n        }\n        return null;\n    }\n","date":"2017-02-17 05:41:47","endLine":467,"groupId":"9435","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"getChild","params":"(Stringname@Elemente)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/24/3aff8b71182207932a2989a6e4d98a1ee60583.src","preCode":"    private Element getChild(String name, Element e) {\n        NodeList children = e.getChildNodes();\n\n        int j = children.getLength();\n        for (int i = 0; i < j; i++) {\n            Node test = children.item(i);\n            if (test.getNodeType() == Node.ELEMENT_NODE) {\n                Element entry = (Element) test;\n                if (entry.getTagName().equals(name)) {\n                    return entry;\n                }\n            }\n        }\n        return null;\n    }\n","realPath":"src/main/java/org/jabref/logic/importer/fileformat/GvkParser.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":453,"status":"B"},{"authorDate":"2017-02-17 05:41:47","commitOrder":1,"curCode":"    private List<Element> getChildren(String name, Element e) {\n        List<Element> result = new LinkedList<>();\n        NodeList children = e.getChildNodes();\n\n        int j = children.getLength();\n        for (int i = 0; i < j; i++) {\n            Node test = children.item(i);\n            if (test.getNodeType() == Node.ELEMENT_NODE) {\n                Element entry = (Element) test;\n                if (entry.getTagName().equals(name)) {\n                    result.add(entry);\n                }\n            }\n        }\n\n        return result;\n    }\n","date":"2017-02-17 05:41:47","endLine":485,"groupId":"9435","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"getChildren","params":"(Stringname@Elemente)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/24/3aff8b71182207932a2989a6e4d98a1ee60583.src","preCode":"    private List<Element> getChildren(String name, Element e) {\n        List<Element> result = new LinkedList<>();\n        NodeList children = e.getChildNodes();\n\n        int j = children.getLength();\n        for (int i = 0; i < j; i++) {\n            Node test = children.item(i);\n            if (test.getNodeType() == Node.ELEMENT_NODE) {\n                Element entry = (Element) test;\n                if (entry.getTagName().equals(name)) {\n                    result.add(entry);\n                }\n            }\n        }\n\n        return result;\n    }\n","realPath":"src/main/java/org/jabref/logic/importer/fileformat/GvkParser.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":469,"status":"B"}],"commitId":"ebbeb1d249edf7134abf92d24c2031ae54d19881","commitMessage":"@@@Merge branch 'net-sf-to-org-jabref'\n","date":"2017-02-17 05:41:47","modifiedFileCount":"1","status":"B","submitter":"Oliver Kopp"},{"authorTime":"2017-02-17 05:41:47","codes":[{"authorDate":"2017-10-06 23:18:09","commitOrder":2,"curCode":"    private Element getChild(String name, Element e) {\n        if (e == null) {\n            return null;\n        }\n        NodeList children = e.getChildNodes();\n\n        int j = children.getLength();\n        for (int i = 0; i < j; i++) {\n            Node test = children.item(i);\n            if (test.getNodeType() == Node.ELEMENT_NODE) {\n                Element entry = (Element) test;\n                if (entry.getTagName().equals(name)) {\n                    return entry;\n                }\n            }\n        }\n        return null;\n    }\n","date":"2017-10-06 23:18:09","endLine":469,"groupId":"101019","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"getChild","params":"(Stringname@Elemente)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/6a/cc7bf883e301cf33fb3a08da8ae9ffdad82786.src","preCode":"    private Element getChild(String name, Element e) {\n        NodeList children = e.getChildNodes();\n\n        int j = children.getLength();\n        for (int i = 0; i < j; i++) {\n            Node test = children.item(i);\n            if (test.getNodeType() == Node.ELEMENT_NODE) {\n                Element entry = (Element) test;\n                if (entry.getTagName().equals(name)) {\n                    return entry;\n                }\n            }\n        }\n        return null;\n    }\n","realPath":"src/main/java/org/jabref/logic/importer/fileformat/GvkParser.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":452,"status":"M"},{"authorDate":"2017-02-17 05:41:47","commitOrder":2,"curCode":"    private List<Element> getChildren(String name, Element e) {\n        List<Element> result = new LinkedList<>();\n        NodeList children = e.getChildNodes();\n\n        int j = children.getLength();\n        for (int i = 0; i < j; i++) {\n            Node test = children.item(i);\n            if (test.getNodeType() == Node.ELEMENT_NODE) {\n                Element entry = (Element) test;\n                if (entry.getTagName().equals(name)) {\n                    result.add(entry);\n                }\n            }\n        }\n\n        return result;\n    }\n","date":"2017-02-17 05:41:47","endLine":485,"groupId":"101019","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"getChildren","params":"(Stringname@Elemente)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/24/3aff8b71182207932a2989a6e4d98a1ee60583.src","preCode":"    private List<Element> getChildren(String name, Element e) {\n        List<Element> result = new LinkedList<>();\n        NodeList children = e.getChildNodes();\n\n        int j = children.getLength();\n        for (int i = 0; i < j; i++) {\n            Node test = children.item(i);\n            if (test.getNodeType() == Node.ELEMENT_NODE) {\n                Element entry = (Element) test;\n                if (entry.getTagName().equals(name)) {\n                    result.add(entry);\n                }\n            }\n        }\n\n        return result;\n    }\n","realPath":"src/main/java/org/jabref/logic/importer/fileformat/GvkParser.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":469,"status":"N"}],"commitId":"5544007677b3b491825d6db5a7c462062185fc0c","commitMessage":"@@@Fix for issue 3143: Import entry from clipboard in different formats (#3243)\n\n* try to parse pasted content with all parsers\n\n* move parsing of pasted string to ImportFormatReader\n\n* adjust tests to moved parsing of pasted strings\n\n* improve formatting and code style\n\n* apply change requests for importing entries from clipboard in different formats\n\n* use new String methods of importer in MrDLibFetcher\n\n* remove unnecessary logging when checking format\n","date":"2017-10-06 23:18:09","modifiedFileCount":"12","status":"M","submitter":"125m125"}]
