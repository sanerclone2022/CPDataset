[{"authorTime":"2018-11-23 23:29:41","codes":[{"authorDate":"2018-11-23 23:29:41","commitOrder":1,"curCode":"    public void saveAsShouldSetWorkingDirectory() {\n        when(preferences.get(JabRefPreferences.WORKING_DIRECTORY)).thenReturn(TEST_FILE_PATH);\n        when(dialogService.showFileSaveDialog(any(FileDialogConfiguration.class))).thenReturn(path);\n        doNothing().when(saveDatabaseAction).saveAs(any());\n\n        saveDatabaseAction.saveAs();\n\n        verify(preferences, times(1)).setWorkingDir(path.get().getParent());\n    }\n","date":"2018-11-23 23:29:41","endLine":58,"groupId":"3774","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"saveAsShouldSetWorkingDirectory","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/a0/bce7781752cf31b424847208669623177368d5.src","preCode":"    public void saveAsShouldSetWorkingDirectory() {\n        when(preferences.get(JabRefPreferences.WORKING_DIRECTORY)).thenReturn(TEST_FILE_PATH);\n        when(dialogService.showFileSaveDialog(any(FileDialogConfiguration.class))).thenReturn(path);\n        doNothing().when(saveDatabaseAction).saveAs(any());\n\n        saveDatabaseAction.saveAs();\n\n        verify(preferences, times(1)).setWorkingDir(path.get().getParent());\n    }\n","realPath":"src/test/java/org/jabref/gui/exporter/SaveDatabaseActionTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":50,"status":"B"},{"authorDate":"2018-11-23 23:29:41","commitOrder":1,"curCode":"    public void saveAsShouldNotSetWorkingDirectoryIfNotSelected() {\n        when(preferences.get(JabRefPreferences.WORKING_DIRECTORY)).thenReturn(TEST_FILE_PATH);\n        when(dialogService.showFileSaveDialog(any(FileDialogConfiguration.class))).thenReturn(Optional.empty());\n        doNothing().when(saveDatabaseAction).saveAs(any());\n\n        saveDatabaseAction.saveAs();\n\n        verify(preferences, times(0)).setWorkingDir(path.get().getParent());\n    }\n","date":"2018-11-23 23:29:41","endLine":69,"groupId":"3774","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"saveAsShouldNotSetWorkingDirectoryIfNotSelected","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/a0/bce7781752cf31b424847208669623177368d5.src","preCode":"    public void saveAsShouldNotSetWorkingDirectoryIfNotSelected() {\n        when(preferences.get(JabRefPreferences.WORKING_DIRECTORY)).thenReturn(TEST_FILE_PATH);\n        when(dialogService.showFileSaveDialog(any(FileDialogConfiguration.class))).thenReturn(Optional.empty());\n        doNothing().when(saveDatabaseAction).saveAs(any());\n\n        saveDatabaseAction.saveAs();\n\n        verify(preferences, times(0)).setWorkingDir(path.get().getParent());\n    }\n","realPath":"src/test/java/org/jabref/gui/exporter/SaveDatabaseActionTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":61,"status":"B"}],"commitId":"54790707537a4a34397ee54bf4106a98614842f6","commitMessage":"@@@Create test (#4505)\n\n* create non working test depend on Globals\n\n* pass preferences via constructor\n\n* create testcase\n\n* refactor test\n\n* refactor code\n\n* add test case\n\n* move to exporter package\n\n* fix code style\n\n* fix test name\n\n* fix test code style\n\n* add SaveDatabaseActionTest in TestArchitectureTest exception\n","date":"2018-11-23 23:29:41","modifiedFileCount":"6","status":"B","submitter":"Ali"},{"authorTime":"2019-11-19 05:57:36","codes":[{"authorDate":"2019-11-19 05:57:36","commitOrder":2,"curCode":"    public void saveAsShouldSetWorkingDirectory() {\n        when(preferences.get(JabRefPreferences.WORKING_DIRECTORY)).thenReturn(TEST_BIBTEX_LIBRARY_LOCATION);\n        when(dialogService.showFileSaveDialog(any(FileDialogConfiguration.class))).thenReturn(Optional.of(file));\n        doNothing().when(saveDatabaseAction).saveAs(any());\n\n        saveDatabaseAction.saveAs();\n\n        verify(preferences, times(1)).setWorkingDir(file.getParent());\n    }\n","date":"2019-11-19 05:57:36","endLine":57,"groupId":"3774","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"saveAsShouldSetWorkingDirectory","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/7e/06be4af15b74a2c4267283ecc01a30c72b2ed3.src","preCode":"    public void saveAsShouldSetWorkingDirectory() {\n        when(preferences.get(JabRefPreferences.WORKING_DIRECTORY)).thenReturn(TEST_FILE_PATH);\n        when(dialogService.showFileSaveDialog(any(FileDialogConfiguration.class))).thenReturn(path);\n        doNothing().when(saveDatabaseAction).saveAs(any());\n\n        saveDatabaseAction.saveAs();\n\n        verify(preferences, times(1)).setWorkingDir(path.get().getParent());\n    }\n","realPath":"src/test/java/org/jabref/gui/exporter/SaveDatabaseActionTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":49,"status":"M"},{"authorDate":"2019-11-19 05:57:36","commitOrder":2,"curCode":"    public void saveAsShouldNotSetWorkingDirectoryIfNotSelected() {\n        when(preferences.get(JabRefPreferences.WORKING_DIRECTORY)).thenReturn(TEST_BIBTEX_LIBRARY_LOCATION);\n        when(dialogService.showFileSaveDialog(any(FileDialogConfiguration.class))).thenReturn(Optional.empty());\n        doNothing().when(saveDatabaseAction).saveAs(any());\n\n        saveDatabaseAction.saveAs();\n\n        verify(preferences, times(0)).setWorkingDir(file.getParent());\n    }\n","date":"2019-11-19 05:57:36","endLine":68,"groupId":"3774","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"saveAsShouldNotSetWorkingDirectoryIfNotSelected","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/7e/06be4af15b74a2c4267283ecc01a30c72b2ed3.src","preCode":"    public void saveAsShouldNotSetWorkingDirectoryIfNotSelected() {\n        when(preferences.get(JabRefPreferences.WORKING_DIRECTORY)).thenReturn(TEST_FILE_PATH);\n        when(dialogService.showFileSaveDialog(any(FileDialogConfiguration.class))).thenReturn(Optional.empty());\n        doNothing().when(saveDatabaseAction).saveAs(any());\n\n        saveDatabaseAction.saveAs();\n\n        verify(preferences, times(0)).setWorkingDir(path.get().getParent());\n    }\n","realPath":"src/test/java/org/jabref/gui/exporter/SaveDatabaseActionTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":60,"status":"M"}],"commitId":"347b5e8cd3824dd5bd2747cb0492361540614959","commitMessage":"@@@When using the builder of BibEntry.  the entry should not be mod? (#5635)\n\n- Ensure that `BibEntry#withField` keeps `hasChanged() == false`\n- Refine comment and add empty lines in BibDatabase.java\n- Fix semantics of variable in SaveDatabaseActionTest (it really points to a file.  not to a directory)","date":"2019-11-19 05:57:36","modifiedFileCount":"5","status":"M","submitter":"Oliver Kopp"},{"authorTime":"2020-03-16 14:45:59","codes":[{"authorDate":"2020-03-16 14:45:59","commitOrder":3,"curCode":"    public void saveAsShouldSetWorkingDirectory() {\n        when(preferences.get(JabRefPreferences.WORKING_DIRECTORY)).thenReturn(TEST_BIBTEX_LIBRARY_LOCATION);\n        when(dialogService.showFileSaveDialog(any(FileDialogConfiguration.class))).thenReturn(Optional.of(file));\n        doReturn(true).when(saveDatabaseAction).saveAs(any());\n\n        saveDatabaseAction.saveAs();\n\n        verify(preferences, times(1)).setWorkingDir(file.getParent());\n    }\n","date":"2020-03-16 14:45:59","endLine":73,"groupId":"3774","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"saveAsShouldSetWorkingDirectory","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/53/4823b4531d1bda763acb6ebac1659d89401127.src","preCode":"    public void saveAsShouldSetWorkingDirectory() {\n        when(preferences.get(JabRefPreferences.WORKING_DIRECTORY)).thenReturn(TEST_BIBTEX_LIBRARY_LOCATION);\n        when(dialogService.showFileSaveDialog(any(FileDialogConfiguration.class))).thenReturn(Optional.of(file));\n        doNothing().when(saveDatabaseAction).saveAs(any());\n\n        saveDatabaseAction.saveAs();\n\n        verify(preferences, times(1)).setWorkingDir(file.getParent());\n    }\n","realPath":"src/test/java/org/jabref/gui/exporter/SaveDatabaseActionTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":65,"status":"M"},{"authorDate":"2020-03-16 14:45:59","commitOrder":3,"curCode":"    public void saveAsShouldNotSetWorkingDirectoryIfNotSelected() {\n        when(preferences.get(JabRefPreferences.WORKING_DIRECTORY)).thenReturn(TEST_BIBTEX_LIBRARY_LOCATION);\n        when(dialogService.showFileSaveDialog(any(FileDialogConfiguration.class))).thenReturn(Optional.empty());\n        doReturn(false).when(saveDatabaseAction).saveAs(any());\n\n        saveDatabaseAction.saveAs();\n\n        verify(preferences, times(0)).setWorkingDir(file.getParent());\n    }\n","date":"2020-03-16 14:45:59","endLine":84,"groupId":"3774","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"saveAsShouldNotSetWorkingDirectoryIfNotSelected","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/53/4823b4531d1bda763acb6ebac1659d89401127.src","preCode":"    public void saveAsShouldNotSetWorkingDirectoryIfNotSelected() {\n        when(preferences.get(JabRefPreferences.WORKING_DIRECTORY)).thenReturn(TEST_BIBTEX_LIBRARY_LOCATION);\n        when(dialogService.showFileSaveDialog(any(FileDialogConfiguration.class))).thenReturn(Optional.empty());\n        doNothing().when(saveDatabaseAction).saveAs(any());\n\n        saveDatabaseAction.saveAs();\n\n        verify(preferences, times(0)).setWorkingDir(file.getParent());\n    }\n","realPath":"src/test/java/org/jabref/gui/exporter/SaveDatabaseActionTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":76,"status":"M"}],"commitId":"c7e399c0210471ff96985524394663896ef23571","commitMessage":"@@@Merge pull request #6117 from JabRef/refactor-save\n\nRefactor SaveAction","date":"2020-03-16 14:45:59","modifiedFileCount":"13","status":"M","submitter":"Oliver Kopp"},{"authorTime":"2020-12-15 04:28:26","codes":[{"authorDate":"2020-12-15 04:28:26","commitOrder":4,"curCode":"    public void saveAsShouldSetWorkingDirectory() {\n        when(preferences.getWorkingDir()).thenReturn(Path.of(TEST_BIBTEX_LIBRARY_LOCATION));\n        when(dialogService.showFileSaveDialog(any(FileDialogConfiguration.class))).thenReturn(Optional.of(file));\n        doReturn(true).when(saveDatabaseAction).saveAs(any());\n\n        saveDatabaseAction.saveAs();\n\n        verify(preferences, times(1)).setWorkingDirectory(file.getParent());\n    }\n","date":"2020-12-15 04:28:26","endLine":74,"groupId":"1091","id":7,"instanceNumber":1,"isCurCommit":1,"methodName":"saveAsShouldSetWorkingDirectory","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/20/293bb06c4cd438fd954afcd19e80118d70ed35.src","preCode":"    public void saveAsShouldSetWorkingDirectory() {\n        when(preferences.get(JabRefPreferences.WORKING_DIRECTORY)).thenReturn(TEST_BIBTEX_LIBRARY_LOCATION);\n        when(dialogService.showFileSaveDialog(any(FileDialogConfiguration.class))).thenReturn(Optional.of(file));\n        doReturn(true).when(saveDatabaseAction).saveAs(any());\n\n        saveDatabaseAction.saveAs();\n\n        verify(preferences, times(1)).setWorkingDir(file.getParent());\n    }\n","realPath":"src/test/java/org/jabref/gui/exporter/SaveDatabaseActionTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":66,"status":"M"},{"authorDate":"2020-12-15 04:28:26","commitOrder":4,"curCode":"    public void saveAsShouldNotSetWorkingDirectoryIfNotSelected() {\n        when(preferences.getWorkingDir()).thenReturn(Path.of(TEST_BIBTEX_LIBRARY_LOCATION));\n        when(dialogService.showFileSaveDialog(any(FileDialogConfiguration.class))).thenReturn(Optional.empty());\n        doReturn(false).when(saveDatabaseAction).saveAs(any());\n\n        saveDatabaseAction.saveAs();\n\n        verify(preferences, times(0)).setWorkingDirectory(file.getParent());\n    }\n","date":"2020-12-15 04:28:26","endLine":85,"groupId":"1091","id":8,"instanceNumber":2,"isCurCommit":1,"methodName":"saveAsShouldNotSetWorkingDirectoryIfNotSelected","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/20/293bb06c4cd438fd954afcd19e80118d70ed35.src","preCode":"    public void saveAsShouldNotSetWorkingDirectoryIfNotSelected() {\n        when(preferences.get(JabRefPreferences.WORKING_DIRECTORY)).thenReturn(TEST_BIBTEX_LIBRARY_LOCATION);\n        when(dialogService.showFileSaveDialog(any(FileDialogConfiguration.class))).thenReturn(Optional.empty());\n        doReturn(false).when(saveDatabaseAction).saveAs(any());\n\n        saveDatabaseAction.saveAs();\n\n        verify(preferences, times(0)).setWorkingDir(file.getParent());\n    }\n","realPath":"src/test/java/org/jabref/gui/exporter/SaveDatabaseActionTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":77,"status":"M"}],"commitId":"c0153bd501754d220e34f45ca689851f8ffd5fbd","commitMessage":"@@@Extraction of Globals.prefs.put and .get (#7121)\n\nCo-authored-by: Siedlerchr <siedlerkiller@gmail.com>\nCo-authored-by: Tobias Diez <tobiasdiez@gmx.de>","date":"2020-12-15 04:28:26","modifiedFileCount":"132","status":"M","submitter":"Carl Christian Snethlage"}]
