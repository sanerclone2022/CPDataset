[{"authorTime":"2017-10-05 01:29:59","codes":[{"authorDate":"2017-10-05 01:29:59","commitOrder":1,"curCode":"    public void testOldStyleBibtexkeyPattern0() {\n        String previousFileNamePattern = prefs.get(JabRefPreferences.IMPORT_FILENAMEPATTERN);\n        final Preferences mainPrefsNode = Preferences.userNodeForPackage(JabRefMain.class);\n\n        prefs.put(JabRefPreferences.IMPORT_FILENAMEPATTERN, oldStylePatterns[0]);\n        mainPrefsNode.put(JabRefPreferences.IMPORT_FILENAMEPATTERN, oldStylePatterns[0]);\n\n        PreferencesMigrations.upgradeImportFileAndDirePatterns();\n\n        String updatedPrefsFileNamePattern = prefs.get(JabRefPreferences.IMPORT_FILENAMEPATTERN);\n        String updatedMainNodeFileNamePattern = mainPrefsNode.get(JabRefPreferences.IMPORT_FILENAMEPATTERN, null);\n\n        prefs.put(JabRefPreferences.IMPORT_FILENAMEPATTERN, previousFileNamePattern);\n        mainPrefsNode.put(JabRefPreferences.IMPORT_FILENAMEPATTERN, previousFileNamePattern);\n\n        assertEquals(newStylePatterns[0], updatedPrefsFileNamePattern);\n        assertEquals(newStylePatterns[0], updatedMainNodeFileNamePattern);\n    }\n","date":"2017-10-05 01:29:59","endLine":47,"groupId":"5972","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testOldStyleBibtexkeyPattern0","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/59/f86305da8af4c6f9feb038a02935d9eee694a2.src","preCode":"    public void testOldStyleBibtexkeyPattern0() {\n        String previousFileNamePattern = prefs.get(JabRefPreferences.IMPORT_FILENAMEPATTERN);\n        final Preferences mainPrefsNode = Preferences.userNodeForPackage(JabRefMain.class);\n\n        prefs.put(JabRefPreferences.IMPORT_FILENAMEPATTERN, oldStylePatterns[0]);\n        mainPrefsNode.put(JabRefPreferences.IMPORT_FILENAMEPATTERN, oldStylePatterns[0]);\n\n        PreferencesMigrations.upgradeImportFileAndDirePatterns();\n\n        String updatedPrefsFileNamePattern = prefs.get(JabRefPreferences.IMPORT_FILENAMEPATTERN);\n        String updatedMainNodeFileNamePattern = mainPrefsNode.get(JabRefPreferences.IMPORT_FILENAMEPATTERN, null);\n\n        prefs.put(JabRefPreferences.IMPORT_FILENAMEPATTERN, previousFileNamePattern);\n        mainPrefsNode.put(JabRefPreferences.IMPORT_FILENAMEPATTERN, previousFileNamePattern);\n\n        assertEquals(newStylePatterns[0], updatedPrefsFileNamePattern);\n        assertEquals(newStylePatterns[0], updatedMainNodeFileNamePattern);\n    }\n","realPath":"src/test/java/org/jabref/migrations/PreferencesMigrationsTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":30,"status":"B"},{"authorDate":"2017-10-05 01:29:59","commitOrder":1,"curCode":"    public void testOldStyleBibtexkeyPattern1() {\n        String previousFileNamePattern = prefs.get(JabRefPreferences.IMPORT_FILENAMEPATTERN);\n        final Preferences mainPrefsNode = Preferences.userNodeForPackage(JabRefMain.class);\n\n        prefs.put(JabRefPreferences.IMPORT_FILENAMEPATTERN, oldStylePatterns[1]);\n        mainPrefsNode.put(JabRefPreferences.IMPORT_FILENAMEPATTERN, oldStylePatterns[1]);\n\n        PreferencesMigrations.upgradeImportFileAndDirePatterns();\n\n        String updatedPrefsFileNamePattern = prefs.get(JabRefPreferences.IMPORT_FILENAMEPATTERN);\n        String updatedMainNodeFileNamePattern = mainPrefsNode.get(JabRefPreferences.IMPORT_FILENAMEPATTERN, null);\n\n        prefs.put(JabRefPreferences.IMPORT_FILENAMEPATTERN, previousFileNamePattern);\n        mainPrefsNode.put(JabRefPreferences.IMPORT_FILENAMEPATTERN, previousFileNamePattern);\n\n        assertEquals(newStylePatterns[1], updatedPrefsFileNamePattern);\n        assertEquals(newStylePatterns[1], updatedMainNodeFileNamePattern);\n    }\n","date":"2017-10-05 01:29:59","endLine":67,"groupId":"5972","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testOldStyleBibtexkeyPattern1","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/59/f86305da8af4c6f9feb038a02935d9eee694a2.src","preCode":"    public void testOldStyleBibtexkeyPattern1() {\n        String previousFileNamePattern = prefs.get(JabRefPreferences.IMPORT_FILENAMEPATTERN);\n        final Preferences mainPrefsNode = Preferences.userNodeForPackage(JabRefMain.class);\n\n        prefs.put(JabRefPreferences.IMPORT_FILENAMEPATTERN, oldStylePatterns[1]);\n        mainPrefsNode.put(JabRefPreferences.IMPORT_FILENAMEPATTERN, oldStylePatterns[1]);\n\n        PreferencesMigrations.upgradeImportFileAndDirePatterns();\n\n        String updatedPrefsFileNamePattern = prefs.get(JabRefPreferences.IMPORT_FILENAMEPATTERN);\n        String updatedMainNodeFileNamePattern = mainPrefsNode.get(JabRefPreferences.IMPORT_FILENAMEPATTERN, null);\n\n        prefs.put(JabRefPreferences.IMPORT_FILENAMEPATTERN, previousFileNamePattern);\n        mainPrefsNode.put(JabRefPreferences.IMPORT_FILENAMEPATTERN, previousFileNamePattern);\n\n        assertEquals(newStylePatterns[1], updatedPrefsFileNamePattern);\n        assertEquals(newStylePatterns[1], updatedMainNodeFileNamePattern);\n    }\n","realPath":"src/test/java/org/jabref/migrations/PreferencesMigrationsTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":50,"status":"B"}],"commitId":"effe3349e2dfe8b104ade137f86ef8e2fbee36a5","commitMessage":"@@@Directory pattern bracketed expressions (#3238)\n\n","date":"2017-10-05 01:29:59","modifiedFileCount":"19","status":"B","submitter":"Saulius Gra?ulis"},{"authorTime":"2018-06-14 05:39:09","codes":[{"authorDate":"2018-06-14 05:39:09","commitOrder":2,"curCode":"    public void testOldStyleBibtexkeyPattern0() {\n        when(prefs.get(JabRefPreferences.IMPORT_FILENAMEPATTERN)).thenReturn(oldStylePatterns[0]);\n        when(mainPrefsNode.get(JabRefPreferences.IMPORT_FILENAMEPATTERN, null)).thenReturn(oldStylePatterns[0]);\n        when(prefs.hasKey(JabRefPreferences.IMPORT_FILENAMEPATTERN)).thenReturn(true);\n\n        PreferencesMigrations.upgradeImportFileAndDirePatterns(prefs, mainPrefsNode);\n\n        verify(prefs).put(JabRefPreferences.IMPORT_FILENAMEPATTERN, newStylePatterns[0]);\n        verify(mainPrefsNode).put(JabRefPreferences.IMPORT_FILENAMEPATTERN, newStylePatterns[0]);\n\n    }\n","date":"2018-06-14 05:39:09","endLine":43,"groupId":"6195","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testOldStyleBibtexkeyPattern0","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/be/1d34e8f399c8adece180e62f6dcff5b0514c09.src","preCode":"    public void testOldStyleBibtexkeyPattern0() {\n        String previousFileNamePattern = prefs.get(JabRefPreferences.IMPORT_FILENAMEPATTERN);\n        final Preferences mainPrefsNode = Preferences.userNodeForPackage(JabRefMain.class);\n\n        prefs.put(JabRefPreferences.IMPORT_FILENAMEPATTERN, oldStylePatterns[0]);\n        mainPrefsNode.put(JabRefPreferences.IMPORT_FILENAMEPATTERN, oldStylePatterns[0]);\n\n        PreferencesMigrations.upgradeImportFileAndDirePatterns();\n\n        String updatedPrefsFileNamePattern = prefs.get(JabRefPreferences.IMPORT_FILENAMEPATTERN);\n        String updatedMainNodeFileNamePattern = mainPrefsNode.get(JabRefPreferences.IMPORT_FILENAMEPATTERN, null);\n\n        prefs.put(JabRefPreferences.IMPORT_FILENAMEPATTERN, previousFileNamePattern);\n        mainPrefsNode.put(JabRefPreferences.IMPORT_FILENAMEPATTERN, previousFileNamePattern);\n\n        assertEquals(newStylePatterns[0], updatedPrefsFileNamePattern);\n        assertEquals(newStylePatterns[0], updatedMainNodeFileNamePattern);\n    }\n","realPath":"src/test/java/org/jabref/migrations/PreferencesMigrationsTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":33,"status":"M"},{"authorDate":"2018-06-14 05:39:09","commitOrder":2,"curCode":"    public void testOldStyleBibtexkeyPattern1() {\n\n        when(prefs.get(JabRefPreferences.IMPORT_FILENAMEPATTERN)).thenReturn(oldStylePatterns[1]);\n        when(mainPrefsNode.get(JabRefPreferences.IMPORT_FILENAMEPATTERN, null)).thenReturn(oldStylePatterns[1]);\n        when(prefs.hasKey(JabRefPreferences.IMPORT_FILENAMEPATTERN)).thenReturn(true);\n\n        PreferencesMigrations.upgradeImportFileAndDirePatterns(prefs, mainPrefsNode);\n\n        verify(prefs).put(JabRefPreferences.IMPORT_FILENAMEPATTERN, newStylePatterns[1]);\n        verify(mainPrefsNode).put(JabRefPreferences.IMPORT_FILENAMEPATTERN, newStylePatterns[1]);\n\n    }\n","date":"2018-06-14 05:39:09","endLine":57,"groupId":"6195","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testOldStyleBibtexkeyPattern1","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/be/1d34e8f399c8adece180e62f6dcff5b0514c09.src","preCode":"    public void testOldStyleBibtexkeyPattern1() {\n        String previousFileNamePattern = prefs.get(JabRefPreferences.IMPORT_FILENAMEPATTERN);\n        final Preferences mainPrefsNode = Preferences.userNodeForPackage(JabRefMain.class);\n\n        prefs.put(JabRefPreferences.IMPORT_FILENAMEPATTERN, oldStylePatterns[1]);\n        mainPrefsNode.put(JabRefPreferences.IMPORT_FILENAMEPATTERN, oldStylePatterns[1]);\n\n        PreferencesMigrations.upgradeImportFileAndDirePatterns();\n\n        String updatedPrefsFileNamePattern = prefs.get(JabRefPreferences.IMPORT_FILENAMEPATTERN);\n        String updatedMainNodeFileNamePattern = mainPrefsNode.get(JabRefPreferences.IMPORT_FILENAMEPATTERN, null);\n\n        prefs.put(JabRefPreferences.IMPORT_FILENAMEPATTERN, previousFileNamePattern);\n        mainPrefsNode.put(JabRefPreferences.IMPORT_FILENAMEPATTERN, previousFileNamePattern);\n\n        assertEquals(newStylePatterns[1], updatedPrefsFileNamePattern);\n        assertEquals(newStylePatterns[1], updatedMainNodeFileNamePattern);\n    }\n","realPath":"src/test/java/org/jabref/migrations/PreferencesMigrationsTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":46,"status":"M"}],"commitId":"09ceea00ae53cc9c362fffbd6b917ab61c7cc538","commitMessage":"@@@Migrate Review field in entry preview to comment (#4100)\n\n* Migrate Review field in entry preview to comment\n\n* Replace review with comment in every layout file\n\n* add test and fix small error in replace\n\n* simplify test code.  create getters and setters\n\n* extract  Globals.prefs and mainPrefsNode as parameter\n\n* fix checkstyle\n\n* simply test using verify\n","date":"2018-06-14 05:39:09","modifiedFileCount":"3","status":"M","submitter":"Christoph"},{"authorTime":"2018-08-16 15:17:32","codes":[{"authorDate":"2018-08-16 15:17:32","commitOrder":3,"curCode":"    void testOldStyleBibtexkeyPattern0() {\n        when(prefs.get(JabRefPreferences.IMPORT_FILENAMEPATTERN)).thenReturn(oldStylePatterns[0]);\n        when(mainPrefsNode.get(JabRefPreferences.IMPORT_FILENAMEPATTERN, null)).thenReturn(oldStylePatterns[0]);\n        when(prefs.hasKey(JabRefPreferences.IMPORT_FILENAMEPATTERN)).thenReturn(true);\n\n        PreferencesMigrations.upgradeImportFileAndDirePatterns(prefs, mainPrefsNode);\n\n        verify(prefs).put(JabRefPreferences.IMPORT_FILENAMEPATTERN, newStylePatterns[0]);\n        verify(mainPrefsNode).put(JabRefPreferences.IMPORT_FILENAMEPATTERN, newStylePatterns[0]);\n\n    }\n","date":"2018-08-16 15:17:32","endLine":43,"groupId":"10862","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testOldStyleBibtexkeyPattern0","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/0b/7128da0daee531b7f046f2dc0e2ea17a750df1.src","preCode":"    public void testOldStyleBibtexkeyPattern0() {\n        when(prefs.get(JabRefPreferences.IMPORT_FILENAMEPATTERN)).thenReturn(oldStylePatterns[0]);\n        when(mainPrefsNode.get(JabRefPreferences.IMPORT_FILENAMEPATTERN, null)).thenReturn(oldStylePatterns[0]);\n        when(prefs.hasKey(JabRefPreferences.IMPORT_FILENAMEPATTERN)).thenReturn(true);\n\n        PreferencesMigrations.upgradeImportFileAndDirePatterns(prefs, mainPrefsNode);\n\n        verify(prefs).put(JabRefPreferences.IMPORT_FILENAMEPATTERN, newStylePatterns[0]);\n        verify(mainPrefsNode).put(JabRefPreferences.IMPORT_FILENAMEPATTERN, newStylePatterns[0]);\n\n    }\n","realPath":"src/test/java/org/jabref/migrations/PreferencesMigrationsTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":33,"status":"M"},{"authorDate":"2018-08-16 15:17:32","commitOrder":3,"curCode":"    void testOldStyleBibtexkeyPattern1() {\n\n        when(prefs.get(JabRefPreferences.IMPORT_FILENAMEPATTERN)).thenReturn(oldStylePatterns[1]);\n        when(mainPrefsNode.get(JabRefPreferences.IMPORT_FILENAMEPATTERN, null)).thenReturn(oldStylePatterns[1]);\n        when(prefs.hasKey(JabRefPreferences.IMPORT_FILENAMEPATTERN)).thenReturn(true);\n\n        PreferencesMigrations.upgradeImportFileAndDirePatterns(prefs, mainPrefsNode);\n\n        verify(prefs).put(JabRefPreferences.IMPORT_FILENAMEPATTERN, newStylePatterns[1]);\n        verify(mainPrefsNode).put(JabRefPreferences.IMPORT_FILENAMEPATTERN, newStylePatterns[1]);\n\n    }\n","date":"2018-08-16 15:17:32","endLine":57,"groupId":"10862","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testOldStyleBibtexkeyPattern1","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/0b/7128da0daee531b7f046f2dc0e2ea17a750df1.src","preCode":"    public void testOldStyleBibtexkeyPattern1() {\n\n        when(prefs.get(JabRefPreferences.IMPORT_FILENAMEPATTERN)).thenReturn(oldStylePatterns[1]);\n        when(mainPrefsNode.get(JabRefPreferences.IMPORT_FILENAMEPATTERN, null)).thenReturn(oldStylePatterns[1]);\n        when(prefs.hasKey(JabRefPreferences.IMPORT_FILENAMEPATTERN)).thenReturn(true);\n\n        PreferencesMigrations.upgradeImportFileAndDirePatterns(prefs, mainPrefsNode);\n\n        verify(prefs).put(JabRefPreferences.IMPORT_FILENAMEPATTERN, newStylePatterns[1]);\n        verify(mainPrefsNode).put(JabRefPreferences.IMPORT_FILENAMEPATTERN, newStylePatterns[1]);\n\n    }\n","realPath":"src/test/java/org/jabref/migrations/PreferencesMigrationsTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":46,"status":"M"}],"commitId":"a880addc0b9a45ad4461cc46ed261ea7df9c812a","commitMessage":"@@@Fix for issue 3959: migrate all tests to JUnit 5 (#4260)\n\n* Update migrate from JUnit 4 to JUnit 5\n\n* Update migrate from JUnit 4 to JUnit 5\n\n* Trying to change git accounts on my laptop\n\n* Trying to change git accounts on my laptop\n\n* Trying to change git accounts on my laptop\n\n* Using static assert methods.\n\n* Migrate from JUnit 4 to JUnit 5\n\n*AuthorListParameterTest.java\n\n* Migrate from JUnit 4 to JUnit 5\n\n*XmpUtilWriterTest.java\n\n* Migrate from JUnit 4 to JUnit 5\n\n*XmpUtilReaderTest.java\n\n* Migrate from JUnit 4 to JUnit 5\n\n*SearchQueryHighlightObservableTest.java\n\n    -did not use MockitoExtension.class as its official version has not been released yet.\n\n* Migrate from JUnit 4 to JUnit 5\n\n*CitationEntryTest.java\n\n* Migrate from JUnit 4 to JUnit 5\n\n*RTFCharsTest.java\n\n* Migrate from JUnit 4 to JUnit 5\n\n*ProtectedTermsLoaderTest.java\n\n    -When running tests.  outputs in command line are different. I don't know if this change is correct.\n\n* Trying to change to a new branch.\n\n* commit_test\n\n* delete my meaningless txt\n\n* Migrate from JUnit 4 to JUnit 5\n\n*AuthorAndToSemicolonReplacerTest.java\n\n* Migrate from JUnit 4 to JUnit 5\n\n*FileDialogConfigurationTest.java\n\n* Migrate from JUnit 4 to JUnit 5\n\n*IntegrityCheckTest.java\n\n* Migrate from JUnit 4 to JUnit 5\n\n*ModsExportFormatTest.java\n\n* Migrate from JUnit 4 to JUnit 5\n\n*AutoSetFileLinksUtilTest.java\n\n* Migrate from JUnit 4 to JUnit 5\n\n*MsBibExportFormatTest.java\n\n* Migrate from JUnit 4 to JUnit 5\n\n*CsvExportFormatTest.java\n\n* Migrate from JUnit 4 to JUnit 5\n\n*HtmlExportFormatTest.java\n\n* Migrate from JUnit 4 to JUnit 5\n\n*HtmlExportFormatTest.java\n\n* Migrate from JUnit 4 to JUnit 5\n\n*RenamePdfCleanupTest.java\n\n* Migrate from JUnit 4 to JUnit 5\n\n*ProtectedTermsListTest.java\n\n* Migrate from JUnit 4 to JUnit 5\n\n*MoveFilesCleanupTest.java\n\n* Migrate from JUnit 4 to JUnit 5\n\n*ImporterTest.java\n\n* Migrate from JUnit 4 to JUnit 5\n\n    *ExporterTest.java\n\n* Try to trigger the Travis CI build.\n\n* Try to trigger the Travis CI build.\n\n* Migrate from JUnit 4 to JUnit 5\n\n* Try to migrate from JUnit 4 to JUnit 5\n    *BibTeXMLExporterTestFiles.java\n        *Test.  not finished\n\n* Roll back to earlier version.\n    *BibTeXMLExporterTestFiles.java\n    *CleanupWorkerTest.java\n\n* Migrate from JUnit 4 to JUnit 5\n    *ImportFormatReaderIntegrationTest.java\n\n* Migrate from JUnit 4 to JUnit 5\n    *MimeTypeDetectorTest.java\n\n* failed to modify CleanupWorkerTest\n\n* failed to modify cleanupWorkTest\n\n* change cleanupWorkerTest to initial\n\n* ***DatabaseTest***\nMigrate from JUnit 4 to JUnit 5\n    *DBMSProcessorTest.java\n        *Wait for the Travis CI\n\n* ***DatabaseTest***\nMigrate from JUnit 4 to JUnit 5\n    *DBMSProcessorTest.java\n        *Wait for the Travis CI\n\n* Migrate from JUnit 4 to JUnit 5\n    *BibTeXMLExporterTestFiles.java\n    *MSBibExportFormatTestFiles.java\n    *All the GUI tests\n\n* Migrate from JUnit 4 to JUnit 5\n    *CleanupWorkerTest.java\n\n    *It seems that worker doesn't work in cleanupRenamePdfRenamesRelativeFile() and cleanupRelativePathsConvertAbsoluteToRelativePath()\n\n* Migrate JUnit 4 to JUnit 5.\n    *AuthorListParameterTest.java\n        -Follow up tp the newest.\n\n* Migrate JUnit 4 to JUnit 5.\n    *CleanupWorkerTest.java\n        -Delete my sout.\n\n* Migrate JUnit 4 to JUnit 5.\n    *EntryTypesTest.java\n        -Just some method name changes.\n\n* Fix part of CleanupWorkerTest.\n    -cleanupRelativePathsConvertAbsoluteToRelativePath() test passed.\n    -The cleanupRenamePdfRenamesRelativeFile() test still failed.\n\n* Migrate and sync.\n    *CiteKeyBasedFileFinderTest.java\n\n* Migrate.\n    *FileUtilTest.java\nPartly migrate.\n    *ModsExportFormatTestFiles.java\n\n* Fix CleanupWorkerTest.java\n\n* Fix .travis.yml\n\n* Remove unnecessary @Rule.\n    *IntegrityCheckTest.java\n\n* AuxParserTest.java\n\n* BibtexParserTest.java\n\n* EntryComparatorTest.java\n\n* Migrate JUnit 4 to JUnit 5 -------by 1160300229\n\n* Migrate. Some tasks by my team members.\n    *LinkedFileViewModelTest.java\n    *RecursiveTreeItemTest.java\n    *UndoTest.java\n    *EntryComparatorTest.java\n    *MakeLabelWithDatabaseTest.java\n    *MakeLabelWithoutDatabaseTest.java\n    *CleanupUrlFormatterTest.java\n    *BibtexParserTest.java\n    *MedlinePlainImporterTest.java\n    *SilverPlatterImporterTest.java\n    *EntryLinkCheckerTest.java\n    *LocalizationKeyTest.java\n    *JabRefPreferencesTest.java\n\n* Fix 1160300302's error.\n\n* Remove unnecessary \"public\".\n    *AuxParserTest.java\n\n* fix architecture test by removing check for public make some classes default visibility level\n\n* Fix \"cannot find files\" problem in JUnit 4.\n\n* Migrate to JUnit 5.\n    *BibTeXMLExporterTestFiles.java\n    *ModsExportFormatTestFiles.java\n    *MSBibExportFormatTestFiles.java\n\n* Change the slash direction.\n    *BibTeXMLExporterTestFiles.java\n    *ModsExportFormatTestFiles.java\n    *MSBibExportFormatTestFiles.java\n\n* fix resolving of paths in msbibexporterpath update junit and correct resource dirs in gradle\n\n* Fix the path issue in\n    *BibTeXMLExporterTestFiles.java\n    *ModsExportFormatTestFiles.java\n\n* Disable the failing exporter tests and change the build.gradle\n\n* Fix the parent folder issue by make every path to their child once.\n    -You can see in the code. :)\n\n* Fix some minor issues.\n    -Use the NIO methods in MoveFilesCleanupTest.java\n\n    -Use toAbsolutePath() method in RenamePdfCleanupTest.java\n\n    -Rename \"tempFilename\" to \"tempFilePath\" in BibTeXMLExporterTestFiles.java\n\n* include main/java in resources as well convert legalcy file methods to nio\n","date":"2018-08-16 15:17:32","modifiedFileCount":"59","status":"M","submitter":"Yichen Sun"}]
