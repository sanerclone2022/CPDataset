[{"authorTime":"2017-02-17 05:41:47","codes":[{"authorDate":"2017-02-17 05:41:47","commitOrder":1,"curCode":"    public BasePanel openNewSharedDatabaseTab(DBMSConnectionProperties dbmsConnectionProperties)\n            throws SQLException, DatabaseNotSupportedException, InvalidDBMSConnectionPropertiesException {\n        JabRefFrame frame = JabRefGUI.getMainFrame();\n        BibDatabaseMode selectedMode = Globals.prefs.getDefaultBibDatabaseMode();\n        BibDatabaseContext bibDatabaseContext = new BibDatabaseContext(new Defaults(selectedMode), DatabaseLocation.SHARED,\n                Globals.prefs.getKeywordDelimiter(), Globals.prefs.getKeyPattern());\n\n        dbmsSynchronizer = bibDatabaseContext.getDBMSSynchronizer();\n        dbmsSynchronizer.openSharedDatabase(dbmsConnectionProperties);\n        dbmsSynchronizer.registerListener(this);\n        frame.output(Localization.lang(\"Connection_to_%0_server_established.\", dbmsConnectionProperties.getType().toString()));\n        return frame.addTab(bibDatabaseContext, true);\n    }\n","date":"2017-02-17 05:41:47","endLine":116,"groupId":"5384","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"openNewSharedDatabaseTab","params":"(DBMSConnectionPropertiesdbmsConnectionProperties)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/e7/75aa6bfc72bc1d6d4c081685d29b4d88f4ef09.src","preCode":"    public BasePanel openNewSharedDatabaseTab(DBMSConnectionProperties dbmsConnectionProperties)\n            throws SQLException, DatabaseNotSupportedException, InvalidDBMSConnectionPropertiesException {\n        JabRefFrame frame = JabRefGUI.getMainFrame();\n        BibDatabaseMode selectedMode = Globals.prefs.getDefaultBibDatabaseMode();\n        BibDatabaseContext bibDatabaseContext = new BibDatabaseContext(new Defaults(selectedMode), DatabaseLocation.SHARED,\n                Globals.prefs.getKeywordDelimiter(), Globals.prefs.getKeyPattern());\n\n        dbmsSynchronizer = bibDatabaseContext.getDBMSSynchronizer();\n        dbmsSynchronizer.openSharedDatabase(dbmsConnectionProperties);\n        dbmsSynchronizer.registerListener(this);\n        frame.output(Localization.lang(\"Connection_to_%0_server_established.\", dbmsConnectionProperties.getType().toString()));\n        return frame.addTab(bibDatabaseContext, true);\n    }\n","realPath":"src/main/java/org/jabref/gui/shared/SharedDatabaseUIManager.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":104,"status":"B"},{"authorDate":"2017-02-17 05:41:47","commitOrder":1,"curCode":"    public void openSharedDatabaseFromParserResult(ParserResult parserResult)\n            throws SQLException, DatabaseNotSupportedException, InvalidDBMSConnectionPropertiesException,\n            NotASharedDatabaseException {\n\n        Optional<String> sharedDatabaseIDOptional = parserResult.getDatabase().getSharedDatabaseID();\n\n        if (!sharedDatabaseIDOptional.isPresent()) {\n            throw new NotASharedDatabaseException();\n        }\n\n        String sharedDatabaseID = sharedDatabaseIDOptional.get();\n        DBMSConnectionProperties dbmsConnectionProperties = new DBMSConnectionProperties(new SharedDatabasePreferences(sharedDatabaseID));\n\n        JabRefFrame frame = JabRefGUI.getMainFrame();\n        BibDatabaseMode selectedMode = Globals.prefs.getDefaultBibDatabaseMode();\n        BibDatabaseContext bibDatabaseContext = new BibDatabaseContext(new Defaults(selectedMode), DatabaseLocation.SHARED,\n                Globals.prefs.getKeywordDelimiter(), Globals.prefs.getKeyPattern());\n\n        bibDatabaseContext.getDatabase().setSharedDatabaseID(sharedDatabaseID);\n        bibDatabaseContext.setDatabaseFile(parserResult.getDatabaseContext().getDatabaseFile().orElse(null));\n\n        dbmsSynchronizer = bibDatabaseContext.getDBMSSynchronizer();\n        dbmsSynchronizer.openSharedDatabase(dbmsConnectionProperties);\n        dbmsSynchronizer.registerListener(this);\n        parserResult.setDatabaseContext(bibDatabaseContext);\n        frame.output(Localization.lang(\"Connection_to_%0_server_established.\", dbmsConnectionProperties.getType().toString()));\n    }\n","date":"2017-02-17 05:41:47","endLine":144,"groupId":"5385","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"openSharedDatabaseFromParserResult","params":"(ParserResultparserResult)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/e7/75aa6bfc72bc1d6d4c081685d29b4d88f4ef09.src","preCode":"    public void openSharedDatabaseFromParserResult(ParserResult parserResult)\n            throws SQLException, DatabaseNotSupportedException, InvalidDBMSConnectionPropertiesException,\n            NotASharedDatabaseException {\n\n        Optional<String> sharedDatabaseIDOptional = parserResult.getDatabase().getSharedDatabaseID();\n\n        if (!sharedDatabaseIDOptional.isPresent()) {\n            throw new NotASharedDatabaseException();\n        }\n\n        String sharedDatabaseID = sharedDatabaseIDOptional.get();\n        DBMSConnectionProperties dbmsConnectionProperties = new DBMSConnectionProperties(new SharedDatabasePreferences(sharedDatabaseID));\n\n        JabRefFrame frame = JabRefGUI.getMainFrame();\n        BibDatabaseMode selectedMode = Globals.prefs.getDefaultBibDatabaseMode();\n        BibDatabaseContext bibDatabaseContext = new BibDatabaseContext(new Defaults(selectedMode), DatabaseLocation.SHARED,\n                Globals.prefs.getKeywordDelimiter(), Globals.prefs.getKeyPattern());\n\n        bibDatabaseContext.getDatabase().setSharedDatabaseID(sharedDatabaseID);\n        bibDatabaseContext.setDatabaseFile(parserResult.getDatabaseContext().getDatabaseFile().orElse(null));\n\n        dbmsSynchronizer = bibDatabaseContext.getDBMSSynchronizer();\n        dbmsSynchronizer.openSharedDatabase(dbmsConnectionProperties);\n        dbmsSynchronizer.registerListener(this);\n        parserResult.setDatabaseContext(bibDatabaseContext);\n        frame.output(Localization.lang(\"Connection_to_%0_server_established.\", dbmsConnectionProperties.getType().toString()));\n    }\n","realPath":"src/main/java/org/jabref/gui/shared/SharedDatabaseUIManager.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":118,"status":"B"}],"commitId":"ebbeb1d249edf7134abf92d24c2031ae54d19881","commitMessage":"@@@Merge branch 'net-sf-to-org-jabref'\n","date":"2017-02-17 05:41:47","modifiedFileCount":"1","status":"B","submitter":"Oliver Kopp"},{"authorTime":"2017-10-24 04:35:44","codes":[{"authorDate":"2017-10-24 04:35:44","commitOrder":2,"curCode":"    public BasePanel openNewSharedDatabaseTab(DBMSConnectionProperties dbmsConnectionProperties)\n            throws SQLException, DatabaseNotSupportedException, InvalidDBMSConnectionPropertiesException {\n        JabRefFrame frame = JabRefGUI.getMainFrame();\n        BibDatabaseMode selectedMode = Globals.prefs.getDefaultBibDatabaseMode();\n        BibDatabaseContext bibDatabaseContext = new BibDatabaseContext(new Defaults(selectedMode), DatabaseLocation.SHARED,\n                Globals.prefs.getKeywordDelimiter(), Globals.prefs.getKeyPattern());\n\n        dbmsSynchronizer = bibDatabaseContext.getDBMSSynchronizer();\n        dbmsSynchronizer.openSharedDatabase(dbmsConnectionProperties);\n        dbmsSynchronizer.registerListener(this);\n        frame.output(Localization.lang(\"Connection to %0 server established.\", dbmsConnectionProperties.getType().toString()));\n        return frame.addTab(bibDatabaseContext, true);\n    }\n","date":"2017-10-24 04:35:44","endLine":116,"groupId":"5384","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"openNewSharedDatabaseTab","params":"(DBMSConnectionPropertiesdbmsConnectionProperties)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/98/51104cb7c0a115737a7ec03283f1d00e4faf6d.src","preCode":"    public BasePanel openNewSharedDatabaseTab(DBMSConnectionProperties dbmsConnectionProperties)\n            throws SQLException, DatabaseNotSupportedException, InvalidDBMSConnectionPropertiesException {\n        JabRefFrame frame = JabRefGUI.getMainFrame();\n        BibDatabaseMode selectedMode = Globals.prefs.getDefaultBibDatabaseMode();\n        BibDatabaseContext bibDatabaseContext = new BibDatabaseContext(new Defaults(selectedMode), DatabaseLocation.SHARED,\n                Globals.prefs.getKeywordDelimiter(), Globals.prefs.getKeyPattern());\n\n        dbmsSynchronizer = bibDatabaseContext.getDBMSSynchronizer();\n        dbmsSynchronizer.openSharedDatabase(dbmsConnectionProperties);\n        dbmsSynchronizer.registerListener(this);\n        frame.output(Localization.lang(\"Connection_to_%0_server_established.\", dbmsConnectionProperties.getType().toString()));\n        return frame.addTab(bibDatabaseContext, true);\n    }\n","realPath":"src/main/java/org/jabref/gui/shared/SharedDatabaseUIManager.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":104,"status":"M"},{"authorDate":"2017-10-24 04:35:44","commitOrder":2,"curCode":"    public void openSharedDatabaseFromParserResult(ParserResult parserResult)\n            throws SQLException, DatabaseNotSupportedException, InvalidDBMSConnectionPropertiesException,\n            NotASharedDatabaseException {\n\n        Optional<String> sharedDatabaseIDOptional = parserResult.getDatabase().getSharedDatabaseID();\n\n        if (!sharedDatabaseIDOptional.isPresent()) {\n            throw new NotASharedDatabaseException();\n        }\n\n        String sharedDatabaseID = sharedDatabaseIDOptional.get();\n        DBMSConnectionProperties dbmsConnectionProperties = new DBMSConnectionProperties(new SharedDatabasePreferences(sharedDatabaseID));\n\n        JabRefFrame frame = JabRefGUI.getMainFrame();\n        BibDatabaseMode selectedMode = Globals.prefs.getDefaultBibDatabaseMode();\n        BibDatabaseContext bibDatabaseContext = new BibDatabaseContext(new Defaults(selectedMode), DatabaseLocation.SHARED,\n                Globals.prefs.getKeywordDelimiter(), Globals.prefs.getKeyPattern());\n\n        bibDatabaseContext.getDatabase().setSharedDatabaseID(sharedDatabaseID);\n        bibDatabaseContext.setDatabaseFile(parserResult.getDatabaseContext().getDatabaseFile().orElse(null));\n\n        dbmsSynchronizer = bibDatabaseContext.getDBMSSynchronizer();\n        dbmsSynchronizer.openSharedDatabase(dbmsConnectionProperties);\n        dbmsSynchronizer.registerListener(this);\n        parserResult.setDatabaseContext(bibDatabaseContext);\n        frame.output(Localization.lang(\"Connection to %0 server established.\", dbmsConnectionProperties.getType().toString()));\n    }\n","date":"2017-10-24 04:35:44","endLine":144,"groupId":"5385","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"openSharedDatabaseFromParserResult","params":"(ParserResultparserResult)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/98/51104cb7c0a115737a7ec03283f1d00e4faf6d.src","preCode":"    public void openSharedDatabaseFromParserResult(ParserResult parserResult)\n            throws SQLException, DatabaseNotSupportedException, InvalidDBMSConnectionPropertiesException,\n            NotASharedDatabaseException {\n\n        Optional<String> sharedDatabaseIDOptional = parserResult.getDatabase().getSharedDatabaseID();\n\n        if (!sharedDatabaseIDOptional.isPresent()) {\n            throw new NotASharedDatabaseException();\n        }\n\n        String sharedDatabaseID = sharedDatabaseIDOptional.get();\n        DBMSConnectionProperties dbmsConnectionProperties = new DBMSConnectionProperties(new SharedDatabasePreferences(sharedDatabaseID));\n\n        JabRefFrame frame = JabRefGUI.getMainFrame();\n        BibDatabaseMode selectedMode = Globals.prefs.getDefaultBibDatabaseMode();\n        BibDatabaseContext bibDatabaseContext = new BibDatabaseContext(new Defaults(selectedMode), DatabaseLocation.SHARED,\n                Globals.prefs.getKeywordDelimiter(), Globals.prefs.getKeyPattern());\n\n        bibDatabaseContext.getDatabase().setSharedDatabaseID(sharedDatabaseID);\n        bibDatabaseContext.setDatabaseFile(parserResult.getDatabaseContext().getDatabaseFile().orElse(null));\n\n        dbmsSynchronizer = bibDatabaseContext.getDBMSSynchronizer();\n        dbmsSynchronizer.openSharedDatabase(dbmsConnectionProperties);\n        dbmsSynchronizer.registerListener(this);\n        parserResult.setDatabaseContext(bibDatabaseContext);\n        frame.output(Localization.lang(\"Connection_to_%0_server_established.\", dbmsConnectionProperties.getType().toString()));\n    }\n","realPath":"src/main/java/org/jabref/gui/shared/SharedDatabaseUIManager.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":118,"status":"M"}],"commitId":"227cccad87405cffe363236f497b67d55e7fa5d9","commitMessage":"@@@Remove underscore in Localized messages (#3336)\n\n","date":"2017-10-24 04:35:44","modifiedFileCount":"11","status":"M","submitter":"Christoph"},{"authorTime":"2018-01-03 02:38:01","codes":[{"authorDate":"2018-01-03 02:38:01","commitOrder":3,"curCode":"    public BasePanel openNewSharedDatabaseTab(DBMSConnectionProperties dbmsConnectionProperties)\n            throws SQLException, DatabaseNotSupportedException, InvalidDBMSConnectionPropertiesException {\n        JabRefFrame frame = JabRefGUI.getMainFrame();\n        BibDatabaseMode selectedMode = Globals.prefs.getDefaultBibDatabaseMode();\n        BibDatabaseContext bibDatabaseContext = new BibDatabaseContext(new Defaults(selectedMode));\n        DBMSSynchronizer synchronizer = new DBMSSynchronizer(bibDatabaseContext, Globals.prefs.getKeywordDelimiter(), Globals.prefs.getKeyPattern());\n        bibDatabaseContext.convertToSharedDatabase(synchronizer);\n\n        dbmsSynchronizer = bibDatabaseContext.getDBMSSynchronizer();\n        dbmsSynchronizer.openSharedDatabase(new DBMSConnection(dbmsConnectionProperties));\n        dbmsSynchronizer.registerListener(this);\n        frame.output(Localization.lang(\"Connection to %0 server established.\", dbmsConnectionProperties.getType().toString()));\n        return frame.addTab(bibDatabaseContext, true);\n    }\n","date":"2018-01-03 02:38:01","endLine":118,"groupId":"7443","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"openNewSharedDatabaseTab","params":"(DBMSConnectionPropertiesdbmsConnectionProperties)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/0e/8e1b54b2189289f6a2733fc5142e2012a158ed.src","preCode":"    public BasePanel openNewSharedDatabaseTab(DBMSConnectionProperties dbmsConnectionProperties)\n            throws SQLException, DatabaseNotSupportedException, InvalidDBMSConnectionPropertiesException {\n        JabRefFrame frame = JabRefGUI.getMainFrame();\n        BibDatabaseMode selectedMode = Globals.prefs.getDefaultBibDatabaseMode();\n        BibDatabaseContext bibDatabaseContext = new BibDatabaseContext(new Defaults(selectedMode), DatabaseLocation.SHARED,\n                Globals.prefs.getKeywordDelimiter(), Globals.prefs.getKeyPattern());\n\n        dbmsSynchronizer = bibDatabaseContext.getDBMSSynchronizer();\n        dbmsSynchronizer.openSharedDatabase(dbmsConnectionProperties);\n        dbmsSynchronizer.registerListener(this);\n        frame.output(Localization.lang(\"Connection to %0 server established.\", dbmsConnectionProperties.getType().toString()));\n        return frame.addTab(bibDatabaseContext, true);\n    }\n","realPath":"src/main/java/org/jabref/gui/shared/SharedDatabaseUIManager.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":105,"status":"M"},{"authorDate":"2018-01-03 02:38:01","commitOrder":3,"curCode":"    public void openSharedDatabaseFromParserResult(ParserResult parserResult)\n            throws SQLException, DatabaseNotSupportedException, InvalidDBMSConnectionPropertiesException,\n            NotASharedDatabaseException {\n\n        Optional<String> sharedDatabaseIDOptional = parserResult.getDatabase().getSharedDatabaseID();\n\n        if (!sharedDatabaseIDOptional.isPresent()) {\n            throw new NotASharedDatabaseException();\n        }\n\n        String sharedDatabaseID = sharedDatabaseIDOptional.get();\n        DBMSConnectionProperties dbmsConnectionProperties = new DBMSConnectionProperties(new SharedDatabasePreferences(sharedDatabaseID));\n\n        JabRefFrame frame = JabRefGUI.getMainFrame();\n        BibDatabaseMode selectedMode = Globals.prefs.getDefaultBibDatabaseMode();\n        BibDatabaseContext bibDatabaseContext = new BibDatabaseContext(new Defaults(selectedMode));\n        DBMSSynchronizer synchronizer = new DBMSSynchronizer(bibDatabaseContext, Globals.prefs.getKeywordDelimiter(), Globals.prefs.getKeyPattern());\n        bibDatabaseContext.convertToSharedDatabase(synchronizer);\n\n        bibDatabaseContext.getDatabase().setSharedDatabaseID(sharedDatabaseID);\n        bibDatabaseContext.setDatabaseFile(parserResult.getDatabaseContext().getDatabaseFile().orElse(null));\n\n        dbmsSynchronizer = bibDatabaseContext.getDBMSSynchronizer();\n        dbmsSynchronizer.openSharedDatabase(new DBMSConnection(dbmsConnectionProperties));\n        dbmsSynchronizer.registerListener(this);\n        parserResult.setDatabaseContext(bibDatabaseContext);\n        frame.output(Localization.lang(\"Connection to %0 server established.\", dbmsConnectionProperties.getType().toString()));\n    }\n","date":"2018-01-03 02:38:01","endLine":147,"groupId":"5098","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"openSharedDatabaseFromParserResult","params":"(ParserResultparserResult)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/0e/8e1b54b2189289f6a2733fc5142e2012a158ed.src","preCode":"    public void openSharedDatabaseFromParserResult(ParserResult parserResult)\n            throws SQLException, DatabaseNotSupportedException, InvalidDBMSConnectionPropertiesException,\n            NotASharedDatabaseException {\n\n        Optional<String> sharedDatabaseIDOptional = parserResult.getDatabase().getSharedDatabaseID();\n\n        if (!sharedDatabaseIDOptional.isPresent()) {\n            throw new NotASharedDatabaseException();\n        }\n\n        String sharedDatabaseID = sharedDatabaseIDOptional.get();\n        DBMSConnectionProperties dbmsConnectionProperties = new DBMSConnectionProperties(new SharedDatabasePreferences(sharedDatabaseID));\n\n        JabRefFrame frame = JabRefGUI.getMainFrame();\n        BibDatabaseMode selectedMode = Globals.prefs.getDefaultBibDatabaseMode();\n        BibDatabaseContext bibDatabaseContext = new BibDatabaseContext(new Defaults(selectedMode), DatabaseLocation.SHARED,\n                Globals.prefs.getKeywordDelimiter(), Globals.prefs.getKeyPattern());\n\n        bibDatabaseContext.getDatabase().setSharedDatabaseID(sharedDatabaseID);\n        bibDatabaseContext.setDatabaseFile(parserResult.getDatabaseContext().getDatabaseFile().orElse(null));\n\n        dbmsSynchronizer = bibDatabaseContext.getDBMSSynchronizer();\n        dbmsSynchronizer.openSharedDatabase(dbmsConnectionProperties);\n        dbmsSynchronizer.registerListener(this);\n        parserResult.setDatabaseContext(bibDatabaseContext);\n        frame.output(Localization.lang(\"Connection to %0 server established.\", dbmsConnectionProperties.getType().toString()));\n    }\n","realPath":"src/main/java/org/jabref/gui/shared/SharedDatabaseUIManager.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":120,"status":"M"}],"commitId":"c7517154ffc54aa1b4b2b0103f5e7b316fff61be","commitMessage":"@@@Refactor shared package into the architecture (#3523)\n\n* Refactor shared package into the architecture\n\n* Add DatabaseConnectionProperties to DatabaseSynchronizer interface\n\n* Encapsulate SQLException in IllegalStateException\n","date":"2018-01-03 02:38:01","modifiedFileCount":"12","status":"M","submitter":"J?rg Lenhard"},{"authorTime":"2018-01-29 02:37:06","codes":[{"authorDate":"2018-01-29 02:37:06","commitOrder":4,"curCode":"    public BasePanel openNewSharedDatabaseTab(DBMSConnectionProperties dbmsConnectionProperties)\n            throws SQLException, DatabaseNotSupportedException, InvalidDBMSConnectionPropertiesException {\n        JabRefFrame frame = JabRefGUI.getMainFrame();\n        BibDatabaseMode selectedMode = Globals.prefs.getDefaultBibDatabaseMode();\n        BibDatabaseContext bibDatabaseContext = new BibDatabaseContext(new Defaults(selectedMode));\n        DBMSSynchronizer synchronizer = new DBMSSynchronizer(bibDatabaseContext, Globals.prefs.getKeywordDelimiter(), Globals.prefs.getKeyPattern(), Globals.getFileUpdateMonitor());\n        bibDatabaseContext.convertToSharedDatabase(synchronizer);\n\n        dbmsSynchronizer = bibDatabaseContext.getDBMSSynchronizer();\n        dbmsSynchronizer.openSharedDatabase(new DBMSConnection(dbmsConnectionProperties));\n        dbmsSynchronizer.registerListener(this);\n        frame.output(Localization.lang(\"Connection to %0 server established.\", dbmsConnectionProperties.getType().toString()));\n        return frame.addTab(bibDatabaseContext, true);\n    }\n","date":"2018-01-29 02:37:06","endLine":119,"groupId":"7443","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"openNewSharedDatabaseTab","params":"(DBMSConnectionPropertiesdbmsConnectionProperties)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/47/96f7fe78e8e5ab790a7a2680cd70f1be66bc3d.src","preCode":"    public BasePanel openNewSharedDatabaseTab(DBMSConnectionProperties dbmsConnectionProperties)\n            throws SQLException, DatabaseNotSupportedException, InvalidDBMSConnectionPropertiesException {\n        JabRefFrame frame = JabRefGUI.getMainFrame();\n        BibDatabaseMode selectedMode = Globals.prefs.getDefaultBibDatabaseMode();\n        BibDatabaseContext bibDatabaseContext = new BibDatabaseContext(new Defaults(selectedMode));\n        DBMSSynchronizer synchronizer = new DBMSSynchronizer(bibDatabaseContext, Globals.prefs.getKeywordDelimiter(), Globals.prefs.getKeyPattern());\n        bibDatabaseContext.convertToSharedDatabase(synchronizer);\n\n        dbmsSynchronizer = bibDatabaseContext.getDBMSSynchronizer();\n        dbmsSynchronizer.openSharedDatabase(new DBMSConnection(dbmsConnectionProperties));\n        dbmsSynchronizer.registerListener(this);\n        frame.output(Localization.lang(\"Connection to %0 server established.\", dbmsConnectionProperties.getType().toString()));\n        return frame.addTab(bibDatabaseContext, true);\n    }\n","realPath":"src/main/java/org/jabref/gui/shared/SharedDatabaseUIManager.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":106,"status":"M"},{"authorDate":"2018-01-29 02:37:06","commitOrder":4,"curCode":"    public void openSharedDatabaseFromParserResult(ParserResult parserResult)\n            throws SQLException, DatabaseNotSupportedException, InvalidDBMSConnectionPropertiesException,\n            NotASharedDatabaseException {\n\n        Optional<String> sharedDatabaseIDOptional = parserResult.getDatabase().getSharedDatabaseID();\n\n        if (!sharedDatabaseIDOptional.isPresent()) {\n            throw new NotASharedDatabaseException();\n        }\n\n        String sharedDatabaseID = sharedDatabaseIDOptional.get();\n        DBMSConnectionProperties dbmsConnectionProperties = new DBMSConnectionProperties(new SharedDatabasePreferences(sharedDatabaseID));\n\n        JabRefFrame frame = JabRefGUI.getMainFrame();\n        BibDatabaseMode selectedMode = Globals.prefs.getDefaultBibDatabaseMode();\n        BibDatabaseContext bibDatabaseContext = new BibDatabaseContext(new Defaults(selectedMode));\n        DBMSSynchronizer synchronizer = new DBMSSynchronizer(bibDatabaseContext, Globals.prefs.getKeywordDelimiter(), Globals.prefs.getKeyPattern(), Globals.getFileUpdateMonitor());\n        bibDatabaseContext.convertToSharedDatabase(synchronizer);\n\n        bibDatabaseContext.getDatabase().setSharedDatabaseID(sharedDatabaseID);\n        bibDatabaseContext.setDatabaseFile(parserResult.getDatabaseContext().getDatabaseFile().orElse(null));\n\n        dbmsSynchronizer = bibDatabaseContext.getDBMSSynchronizer();\n        dbmsSynchronizer.openSharedDatabase(new DBMSConnection(dbmsConnectionProperties));\n        dbmsSynchronizer.registerListener(this);\n        parserResult.setDatabaseContext(bibDatabaseContext);\n        frame.output(Localization.lang(\"Connection to %0 server established.\", dbmsConnectionProperties.getType().toString()));\n    }\n","date":"2018-01-29 02:37:06","endLine":148,"groupId":"12406","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"openSharedDatabaseFromParserResult","params":"(ParserResultparserResult)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/47/96f7fe78e8e5ab790a7a2680cd70f1be66bc3d.src","preCode":"    public void openSharedDatabaseFromParserResult(ParserResult parserResult)\n            throws SQLException, DatabaseNotSupportedException, InvalidDBMSConnectionPropertiesException,\n            NotASharedDatabaseException {\n\n        Optional<String> sharedDatabaseIDOptional = parserResult.getDatabase().getSharedDatabaseID();\n\n        if (!sharedDatabaseIDOptional.isPresent()) {\n            throw new NotASharedDatabaseException();\n        }\n\n        String sharedDatabaseID = sharedDatabaseIDOptional.get();\n        DBMSConnectionProperties dbmsConnectionProperties = new DBMSConnectionProperties(new SharedDatabasePreferences(sharedDatabaseID));\n\n        JabRefFrame frame = JabRefGUI.getMainFrame();\n        BibDatabaseMode selectedMode = Globals.prefs.getDefaultBibDatabaseMode();\n        BibDatabaseContext bibDatabaseContext = new BibDatabaseContext(new Defaults(selectedMode));\n        DBMSSynchronizer synchronizer = new DBMSSynchronizer(bibDatabaseContext, Globals.prefs.getKeywordDelimiter(), Globals.prefs.getKeyPattern());\n        bibDatabaseContext.convertToSharedDatabase(synchronizer);\n\n        bibDatabaseContext.getDatabase().setSharedDatabaseID(sharedDatabaseID);\n        bibDatabaseContext.setDatabaseFile(parserResult.getDatabaseContext().getDatabaseFile().orElse(null));\n\n        dbmsSynchronizer = bibDatabaseContext.getDBMSSynchronizer();\n        dbmsSynchronizer.openSharedDatabase(new DBMSConnection(dbmsConnectionProperties));\n        dbmsSynchronizer.registerListener(this);\n        parserResult.setDatabaseContext(bibDatabaseContext);\n        frame.output(Localization.lang(\"Connection to %0 server established.\", dbmsConnectionProperties.getType().toString()));\n    }\n","realPath":"src/main/java/org/jabref/gui/shared/SharedDatabaseUIManager.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":121,"status":"M"}],"commitId":"cfb424f80c2069c61673d5051fa761715edab091","commitMessage":"@@@Implements #1664: group based on aux file (#3444)\n\n* First prototype of aux group\n\n* Refactor so that TexGroup does not depend on logic\n\n* Add changelog entry\n\n* Fix architecture tests\n\n* Add new language key\n\n* Fix tests\n","date":"2018-01-29 02:37:06","modifiedFileCount":"76","status":"M","submitter":"Tobias Diez"},{"authorTime":"2018-08-31 23:58:52","codes":[{"authorDate":"2018-08-31 23:58:52","commitOrder":5,"curCode":"    public BasePanel openNewSharedDatabaseTab(DBMSConnectionProperties dbmsConnectionProperties)\n        throws SQLException, DatabaseNotSupportedException, InvalidDBMSConnectionPropertiesException {\n\n        BibDatabaseMode selectedMode = Globals.prefs.getDefaultBibDatabaseMode();\n        BibDatabaseContext bibDatabaseContext = new BibDatabaseContext(new Defaults(selectedMode));\n        DBMSSynchronizer synchronizer = new DBMSSynchronizer(bibDatabaseContext, Globals.prefs.getKeywordDelimiter(), Globals.prefs.getKeyPattern(), Globals.getFileUpdateMonitor());\n        bibDatabaseContext.convertToSharedDatabase(synchronizer);\n\n        dbmsSynchronizer = bibDatabaseContext.getDBMSSynchronizer();\n        dbmsSynchronizer.openSharedDatabase(new DBMSConnection(dbmsConnectionProperties));\n        dbmsSynchronizer.registerListener(this);\n        jabRefFrame.output(Localization.lang(\"Connection to %0 server established.\", dbmsConnectionProperties.getType().toString()));\n        return jabRefFrame.addTab(bibDatabaseContext, true);\n    }\n","date":"2018-08-31 23:58:52","endLine":126,"groupId":"7443","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"openNewSharedDatabaseTab","params":"(DBMSConnectionPropertiesdbmsConnectionProperties)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/21/9c157fc5349d3352fa6beb3950a81b1b6e1061.src","preCode":"    public BasePanel openNewSharedDatabaseTab(DBMSConnectionProperties dbmsConnectionProperties)\n            throws SQLException, DatabaseNotSupportedException, InvalidDBMSConnectionPropertiesException {\n        JabRefFrame frame = JabRefGUI.getMainFrame();\n        BibDatabaseMode selectedMode = Globals.prefs.getDefaultBibDatabaseMode();\n        BibDatabaseContext bibDatabaseContext = new BibDatabaseContext(new Defaults(selectedMode));\n        DBMSSynchronizer synchronizer = new DBMSSynchronizer(bibDatabaseContext, Globals.prefs.getKeywordDelimiter(), Globals.prefs.getKeyPattern(), Globals.getFileUpdateMonitor());\n        bibDatabaseContext.convertToSharedDatabase(synchronizer);\n\n        dbmsSynchronizer = bibDatabaseContext.getDBMSSynchronizer();\n        dbmsSynchronizer.openSharedDatabase(new DBMSConnection(dbmsConnectionProperties));\n        dbmsSynchronizer.registerListener(this);\n        frame.output(Localization.lang(\"Connection to %0 server established.\", dbmsConnectionProperties.getType().toString()));\n        return frame.addTab(bibDatabaseContext, true);\n    }\n","realPath":"src/main/java/org/jabref/gui/shared/SharedDatabaseUIManager.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":113,"status":"M"},{"authorDate":"2018-08-31 23:58:52","commitOrder":5,"curCode":"    public void openSharedDatabaseFromParserResult(ParserResult parserResult)\n        throws SQLException, DatabaseNotSupportedException, InvalidDBMSConnectionPropertiesException,\n        NotASharedDatabaseException {\n\n        Optional<String> sharedDatabaseIDOptional = parserResult.getDatabase().getSharedDatabaseID();\n\n        if (!sharedDatabaseIDOptional.isPresent()) {\n            throw new NotASharedDatabaseException();\n        }\n\n        String sharedDatabaseID = sharedDatabaseIDOptional.get();\n        DBMSConnectionProperties dbmsConnectionProperties = new DBMSConnectionProperties(new SharedDatabasePreferences(sharedDatabaseID));\n\n        BibDatabaseMode selectedMode = Globals.prefs.getDefaultBibDatabaseMode();\n        BibDatabaseContext bibDatabaseContext = new BibDatabaseContext(new Defaults(selectedMode));\n        DBMSSynchronizer synchronizer = new DBMSSynchronizer(bibDatabaseContext, Globals.prefs.getKeywordDelimiter(), Globals.prefs.getKeyPattern(), Globals.getFileUpdateMonitor());\n        bibDatabaseContext.convertToSharedDatabase(synchronizer);\n\n        bibDatabaseContext.getDatabase().setSharedDatabaseID(sharedDatabaseID);\n        bibDatabaseContext.setDatabaseFile(parserResult.getDatabaseContext().getDatabasePath().orElse(null));\n\n        dbmsSynchronizer = bibDatabaseContext.getDBMSSynchronizer();\n        dbmsSynchronizer.openSharedDatabase(new DBMSConnection(dbmsConnectionProperties));\n        dbmsSynchronizer.registerListener(this);\n        parserResult.setDatabaseContext(bibDatabaseContext);\n        jabRefFrame.output(Localization.lang(\"Connection to %0 server established.\", dbmsConnectionProperties.getType().toString()));\n    }\n","date":"2018-08-31 23:58:52","endLine":154,"groupId":"9354","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"openSharedDatabaseFromParserResult","params":"(ParserResultparserResult)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/21/9c157fc5349d3352fa6beb3950a81b1b6e1061.src","preCode":"    public void openSharedDatabaseFromParserResult(ParserResult parserResult)\n            throws SQLException, DatabaseNotSupportedException, InvalidDBMSConnectionPropertiesException,\n            NotASharedDatabaseException {\n\n        Optional<String> sharedDatabaseIDOptional = parserResult.getDatabase().getSharedDatabaseID();\n\n        if (!sharedDatabaseIDOptional.isPresent()) {\n            throw new NotASharedDatabaseException();\n        }\n\n        String sharedDatabaseID = sharedDatabaseIDOptional.get();\n        DBMSConnectionProperties dbmsConnectionProperties = new DBMSConnectionProperties(new SharedDatabasePreferences(sharedDatabaseID));\n\n        JabRefFrame frame = JabRefGUI.getMainFrame();\n        BibDatabaseMode selectedMode = Globals.prefs.getDefaultBibDatabaseMode();\n        BibDatabaseContext bibDatabaseContext = new BibDatabaseContext(new Defaults(selectedMode));\n        DBMSSynchronizer synchronizer = new DBMSSynchronizer(bibDatabaseContext, Globals.prefs.getKeywordDelimiter(), Globals.prefs.getKeyPattern(), Globals.getFileUpdateMonitor());\n        bibDatabaseContext.convertToSharedDatabase(synchronizer);\n\n        bibDatabaseContext.getDatabase().setSharedDatabaseID(sharedDatabaseID);\n        bibDatabaseContext.setDatabaseFile(parserResult.getDatabaseContext().getDatabaseFile().orElse(null));\n\n        dbmsSynchronizer = bibDatabaseContext.getDBMSSynchronizer();\n        dbmsSynchronizer.openSharedDatabase(new DBMSConnection(dbmsConnectionProperties));\n        dbmsSynchronizer.registerListener(this);\n        parserResult.setDatabaseContext(bibDatabaseContext);\n        frame.output(Localization.lang(\"Connection to %0 server established.\", dbmsConnectionProperties.getType().toString()));\n    }\n","realPath":"src/main/java/org/jabref/gui/shared/SharedDatabaseUIManager.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":128,"status":"M"}],"commitId":"ef088e2fe126b71f4a856966073ce83ee8db0ce8","commitMessage":"@@@Convert SharedDatabaseConnect Dialog to Javafx (#4040)\n\n* Convert SharedBD Dialog to javafx\n\n\n* convert shared database dialog to javafx\n\n* fix checkstyle\n\n* convert some more dialogs to fx\n\n* checkstyle\n\n* remove duplicate listener which results in loop\n\n* add localization\nadd migration help message\nremove old dialogs\n\n* add cancel button\n\n* add button types.  but results in npe\n\n* move gui logic to viewmodel\nadd bindings\n\n* add validation support.  move rest of logic to view model\nTODO: Validation throws error\n\n* wrap initVisualization in platform.runlater to avoid exception regarding duplicate root pane stuff\n\n* remove old gui class\nrenamings and other refactorings\n\n* add ssl options\n\n* l10n cleanup\n\n* add bindings for keystore\nfix layoout\nenable ssl stuff only when postgres is enabeld\n\n* checkstyle\n\n* fix l10n\n\n* add support for ssl\n\n* fix checkstyle\n\n* fix keystore file path not displayed\n\n* renamings\nshutdown listener stops the listener thread safely\n\n* enable ssl for all\n\n* checkstyle\n\n* cleanups\nuse executor\nstore keystore in prefs(todo)\n\n* store keystore file in prefs\n\n* set useSSL and keystore correctly\n\n* fix checkstyle\n\n* resize and convert one binding to view model\n\n* address comments.  pass connectionProperties as parameter\n\n* fix one codacy suggestion\n","date":"2018-08-31 23:58:52","modifiedFileCount":"14","status":"M","submitter":"Christoph"},{"authorTime":"2019-04-03 17:19:03","codes":[{"authorDate":"2019-04-03 17:19:03","commitOrder":6,"curCode":"    public BasePanel openNewSharedDatabaseTab(DBMSConnectionProperties dbmsConnectionProperties)\n        throws SQLException, DatabaseNotSupportedException, InvalidDBMSConnectionPropertiesException {\n\n        BibDatabaseMode selectedMode = Globals.prefs.getDefaultBibDatabaseMode();\n        BibDatabaseContext bibDatabaseContext = new BibDatabaseContext(new Defaults(selectedMode));\n        DBMSSynchronizer synchronizer = new DBMSSynchronizer(bibDatabaseContext, Globals.prefs.getKeywordDelimiter(), Globals.prefs.getKeyPattern(), Globals.getFileUpdateMonitor());\n        bibDatabaseContext.convertToSharedDatabase(synchronizer);\n\n        dbmsSynchronizer = bibDatabaseContext.getDBMSSynchronizer();\n        dbmsSynchronizer.openSharedDatabase(new DBMSConnection(dbmsConnectionProperties));\n        dbmsSynchronizer.registerListener(this);\n        jabRefFrame.getDialogService().notify(Localization.lang(\"Connection to %0 server established.\", dbmsConnectionProperties.getType().toString()));\n        return jabRefFrame.addTab(bibDatabaseContext, true);\n    }\n","date":"2019-04-03 17:19:03","endLine":125,"groupId":"7443","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"openNewSharedDatabaseTab","params":"(DBMSConnectionPropertiesdbmsConnectionProperties)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/94/bc02ddc5bca2803a56f8dbd33cc186d61e9fe4.src","preCode":"    public BasePanel openNewSharedDatabaseTab(DBMSConnectionProperties dbmsConnectionProperties)\n        throws SQLException, DatabaseNotSupportedException, InvalidDBMSConnectionPropertiesException {\n\n        BibDatabaseMode selectedMode = Globals.prefs.getDefaultBibDatabaseMode();\n        BibDatabaseContext bibDatabaseContext = new BibDatabaseContext(new Defaults(selectedMode));\n        DBMSSynchronizer synchronizer = new DBMSSynchronizer(bibDatabaseContext, Globals.prefs.getKeywordDelimiter(), Globals.prefs.getKeyPattern(), Globals.getFileUpdateMonitor());\n        bibDatabaseContext.convertToSharedDatabase(synchronizer);\n\n        dbmsSynchronizer = bibDatabaseContext.getDBMSSynchronizer();\n        dbmsSynchronizer.openSharedDatabase(new DBMSConnection(dbmsConnectionProperties));\n        dbmsSynchronizer.registerListener(this);\n        jabRefFrame.output(Localization.lang(\"Connection to %0 server established.\", dbmsConnectionProperties.getType().toString()));\n        return jabRefFrame.addTab(bibDatabaseContext, true);\n    }\n","realPath":"src/main/java/org/jabref/gui/shared/SharedDatabaseUIManager.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":112,"status":"M"},{"authorDate":"2019-04-03 17:19:03","commitOrder":6,"curCode":"    public void openSharedDatabaseFromParserResult(ParserResult parserResult)\n        throws SQLException, DatabaseNotSupportedException, InvalidDBMSConnectionPropertiesException,\n        NotASharedDatabaseException {\n\n        Optional<String> sharedDatabaseIDOptional = parserResult.getDatabase().getSharedDatabaseID();\n\n        if (!sharedDatabaseIDOptional.isPresent()) {\n            throw new NotASharedDatabaseException();\n        }\n\n        String sharedDatabaseID = sharedDatabaseIDOptional.get();\n        DBMSConnectionProperties dbmsConnectionProperties = new DBMSConnectionProperties(new SharedDatabasePreferences(sharedDatabaseID));\n\n        BibDatabaseMode selectedMode = Globals.prefs.getDefaultBibDatabaseMode();\n        BibDatabaseContext bibDatabaseContext = new BibDatabaseContext(new Defaults(selectedMode));\n        DBMSSynchronizer synchronizer = new DBMSSynchronizer(bibDatabaseContext, Globals.prefs.getKeywordDelimiter(), Globals.prefs.getKeyPattern(), Globals.getFileUpdateMonitor());\n        bibDatabaseContext.convertToSharedDatabase(synchronizer);\n\n        bibDatabaseContext.getDatabase().setSharedDatabaseID(sharedDatabaseID);\n        bibDatabaseContext.setDatabaseFile(parserResult.getDatabaseContext().getDatabasePath().orElse(null));\n\n        dbmsSynchronizer = bibDatabaseContext.getDBMSSynchronizer();\n        dbmsSynchronizer.openSharedDatabase(new DBMSConnection(dbmsConnectionProperties));\n        dbmsSynchronizer.registerListener(this);\n        parserResult.setDatabaseContext(bibDatabaseContext);\n        jabRefFrame.getDialogService().notify(Localization.lang(\"Connection to %0 server established.\", dbmsConnectionProperties.getType().toString()));\n    }\n","date":"2019-04-03 17:19:03","endLine":153,"groupId":"9354","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"openSharedDatabaseFromParserResult","params":"(ParserResultparserResult)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/94/bc02ddc5bca2803a56f8dbd33cc186d61e9fe4.src","preCode":"    public void openSharedDatabaseFromParserResult(ParserResult parserResult)\n        throws SQLException, DatabaseNotSupportedException, InvalidDBMSConnectionPropertiesException,\n        NotASharedDatabaseException {\n\n        Optional<String> sharedDatabaseIDOptional = parserResult.getDatabase().getSharedDatabaseID();\n\n        if (!sharedDatabaseIDOptional.isPresent()) {\n            throw new NotASharedDatabaseException();\n        }\n\n        String sharedDatabaseID = sharedDatabaseIDOptional.get();\n        DBMSConnectionProperties dbmsConnectionProperties = new DBMSConnectionProperties(new SharedDatabasePreferences(sharedDatabaseID));\n\n        BibDatabaseMode selectedMode = Globals.prefs.getDefaultBibDatabaseMode();\n        BibDatabaseContext bibDatabaseContext = new BibDatabaseContext(new Defaults(selectedMode));\n        DBMSSynchronizer synchronizer = new DBMSSynchronizer(bibDatabaseContext, Globals.prefs.getKeywordDelimiter(), Globals.prefs.getKeyPattern(), Globals.getFileUpdateMonitor());\n        bibDatabaseContext.convertToSharedDatabase(synchronizer);\n\n        bibDatabaseContext.getDatabase().setSharedDatabaseID(sharedDatabaseID);\n        bibDatabaseContext.setDatabaseFile(parserResult.getDatabaseContext().getDatabasePath().orElse(null));\n\n        dbmsSynchronizer = bibDatabaseContext.getDBMSSynchronizer();\n        dbmsSynchronizer.openSharedDatabase(new DBMSConnection(dbmsConnectionProperties));\n        dbmsSynchronizer.registerListener(this);\n        parserResult.setDatabaseContext(bibDatabaseContext);\n        jabRefFrame.output(Localization.lang(\"Connection to %0 server established.\", dbmsConnectionProperties.getType().toString()));\n    }\n","realPath":"src/main/java/org/jabref/gui/shared/SharedDatabaseUIManager.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":127,"status":"M"}],"commitId":"a273eb1fa13317d4091a767849c40e9495de2b7e","commitMessage":"@@@Enhanced message log (#4815)\n\n* refactored JabRefFrame.output and FXDialogService.notify to only use FXDialogService.notify\n\n* added logging to notifications and fixed problem with logger in JabRefGUI\n\n* moved copying of logevents to GuiAppender\n\n* directly use dialogService in BasePanel\n\n* changed constructor to avoid NPE\n\n* refactored code so that DialogService.notify does not need DefaultTaskExecutor.runInJavaFXThread\n\n* replaced old swing dialog\n\n* replaced another swing dialog\n","date":"2019-04-03 17:19:03","modifiedFileCount":"28","status":"M","submitter":"Robin"},{"authorTime":"2020-01-18 07:15:28","codes":[{"authorDate":"2020-01-18 07:15:28","commitOrder":7,"curCode":"    public BasePanel openNewSharedDatabaseTab(DBMSConnectionProperties dbmsConnectionProperties)\n        throws SQLException, DatabaseNotSupportedException, InvalidDBMSConnectionPropertiesException {\n\n        BibDatabaseContext bibDatabaseContext = new BibDatabaseContext();\n        bibDatabaseContext.setMode(Globals.prefs.getDefaultBibDatabaseMode());\n        DBMSSynchronizer synchronizer = new DBMSSynchronizer(bibDatabaseContext, Globals.prefs.getKeywordDelimiter(), Globals.prefs.getKeyPattern(), Globals.getFileUpdateMonitor());\n        bibDatabaseContext.convertToSharedDatabase(synchronizer);\n\n        dbmsSynchronizer = bibDatabaseContext.getDBMSSynchronizer();\n        dbmsSynchronizer.openSharedDatabase(new DBMSConnection(dbmsConnectionProperties));\n        dbmsSynchronizer.registerListener(this);\n        jabRefFrame.getDialogService().notify(Localization.lang(\"Connection to %0 server established.\", dbmsConnectionProperties.getType().toString()));\n        return jabRefFrame.addTab(bibDatabaseContext, true);\n    }\n","date":"2020-01-18 07:15:28","endLine":155,"groupId":"7443","id":13,"instanceNumber":1,"isCurCommit":0,"methodName":"openNewSharedDatabaseTab","params":"(DBMSConnectionPropertiesdbmsConnectionProperties)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/99/31096eb6606861cf2e6306dad3f0d6ca3bb548.src","preCode":"    public BasePanel openNewSharedDatabaseTab(DBMSConnectionProperties dbmsConnectionProperties)\n        throws SQLException, DatabaseNotSupportedException, InvalidDBMSConnectionPropertiesException {\n\n        BibDatabaseMode selectedMode = Globals.prefs.getDefaultBibDatabaseMode();\n        BibDatabaseContext bibDatabaseContext = new BibDatabaseContext(new Defaults(selectedMode));\n        DBMSSynchronizer synchronizer = new DBMSSynchronizer(bibDatabaseContext, Globals.prefs.getKeywordDelimiter(), Globals.prefs.getKeyPattern(), Globals.getFileUpdateMonitor());\n        bibDatabaseContext.convertToSharedDatabase(synchronizer);\n\n        dbmsSynchronizer = bibDatabaseContext.getDBMSSynchronizer();\n        dbmsSynchronizer.openSharedDatabase(new DBMSConnection(dbmsConnectionProperties));\n        dbmsSynchronizer.registerListener(this);\n        jabRefFrame.getDialogService().notify(Localization.lang(\"Connection to %0 server established.\", dbmsConnectionProperties.getType().toString()));\n        return jabRefFrame.addTab(bibDatabaseContext, true);\n    }\n","realPath":"src/main/java/org/jabref/gui/shared/SharedDatabaseUIManager.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":142,"status":"M"},{"authorDate":"2020-01-18 07:15:28","commitOrder":7,"curCode":"    public void openSharedDatabaseFromParserResult(ParserResult parserResult)\n        throws SQLException, DatabaseNotSupportedException, InvalidDBMSConnectionPropertiesException,\n        NotASharedDatabaseException {\n\n        Optional<String> sharedDatabaseIDOptional = parserResult.getDatabase().getSharedDatabaseID();\n\n        if (!sharedDatabaseIDOptional.isPresent()) {\n            throw new NotASharedDatabaseException();\n        }\n\n        String sharedDatabaseID = sharedDatabaseIDOptional.get();\n        DBMSConnectionProperties dbmsConnectionProperties = new DBMSConnectionProperties(new SharedDatabasePreferences(sharedDatabaseID));\n\n        BibDatabaseContext bibDatabaseContext = new BibDatabaseContext();\n        bibDatabaseContext.setMode(Globals.prefs.getDefaultBibDatabaseMode());\n        DBMSSynchronizer synchronizer = new DBMSSynchronizer(bibDatabaseContext, Globals.prefs.getKeywordDelimiter(), Globals.prefs.getKeyPattern(), Globals.getFileUpdateMonitor());\n        bibDatabaseContext.convertToSharedDatabase(synchronizer);\n\n        bibDatabaseContext.getDatabase().setSharedDatabaseID(sharedDatabaseID);\n        bibDatabaseContext.setDatabaseFile(parserResult.getDatabaseContext().getDatabasePath().orElse(null));\n\n        dbmsSynchronizer = bibDatabaseContext.getDBMSSynchronizer();\n        dbmsSynchronizer.openSharedDatabase(new DBMSConnection(dbmsConnectionProperties));\n        dbmsSynchronizer.registerListener(this);\n        parserResult.setDatabaseContext(bibDatabaseContext);\n        jabRefFrame.getDialogService().notify(Localization.lang(\"Connection to %0 server established.\", dbmsConnectionProperties.getType().toString()));\n    }\n","date":"2020-01-18 07:15:28","endLine":183,"groupId":"5645","id":14,"instanceNumber":2,"isCurCommit":0,"methodName":"openSharedDatabaseFromParserResult","params":"(ParserResultparserResult)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/99/31096eb6606861cf2e6306dad3f0d6ca3bb548.src","preCode":"    public void openSharedDatabaseFromParserResult(ParserResult parserResult)\n        throws SQLException, DatabaseNotSupportedException, InvalidDBMSConnectionPropertiesException,\n        NotASharedDatabaseException {\n\n        Optional<String> sharedDatabaseIDOptional = parserResult.getDatabase().getSharedDatabaseID();\n\n        if (!sharedDatabaseIDOptional.isPresent()) {\n            throw new NotASharedDatabaseException();\n        }\n\n        String sharedDatabaseID = sharedDatabaseIDOptional.get();\n        DBMSConnectionProperties dbmsConnectionProperties = new DBMSConnectionProperties(new SharedDatabasePreferences(sharedDatabaseID));\n\n        BibDatabaseMode selectedMode = Globals.prefs.getDefaultBibDatabaseMode();\n        BibDatabaseContext bibDatabaseContext = new BibDatabaseContext(new Defaults(selectedMode));\n        DBMSSynchronizer synchronizer = new DBMSSynchronizer(bibDatabaseContext, Globals.prefs.getKeywordDelimiter(), Globals.prefs.getKeyPattern(), Globals.getFileUpdateMonitor());\n        bibDatabaseContext.convertToSharedDatabase(synchronizer);\n\n        bibDatabaseContext.getDatabase().setSharedDatabaseID(sharedDatabaseID);\n        bibDatabaseContext.setDatabaseFile(parserResult.getDatabaseContext().getDatabasePath().orElse(null));\n\n        dbmsSynchronizer = bibDatabaseContext.getDBMSSynchronizer();\n        dbmsSynchronizer.openSharedDatabase(new DBMSConnection(dbmsConnectionProperties));\n        dbmsSynchronizer.registerListener(this);\n        parserResult.setDatabaseContext(bibDatabaseContext);\n        jabRefFrame.getDialogService().notify(Localization.lang(\"Connection to %0 server established.\", dbmsConnectionProperties.getType().toString()));\n    }\n","realPath":"src/main/java/org/jabref/gui/shared/SharedDatabaseUIManager.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":157,"status":"M"}],"commitId":"e9851d89dce6b39ce7dc99df1d5eca81840487e1","commitMessage":"@@@Improve serialization to fix #4877 (#5838)\n\n* Always remember which encoding was used for saving\n\n* Already infer mode upon loading\n\n* Don't format field values upon writing\n\n* Fix tests\n\n* Fix tests\n\n* Fix localization and add changelog\n\n* Add missing space\n\n* Fix test method name\n\nCo-authored-by: Oliver Kopp <kopp.dev@gmail.com>\n","date":"2020-01-18 07:15:28","modifiedFileCount":"31","status":"M","submitter":"Tobias Diez"},{"authorTime":"2020-03-16 14:45:59","codes":[{"authorDate":"2020-01-18 07:15:28","commitOrder":8,"curCode":"    public BasePanel openNewSharedDatabaseTab(DBMSConnectionProperties dbmsConnectionProperties)\n        throws SQLException, DatabaseNotSupportedException, InvalidDBMSConnectionPropertiesException {\n\n        BibDatabaseContext bibDatabaseContext = new BibDatabaseContext();\n        bibDatabaseContext.setMode(Globals.prefs.getDefaultBibDatabaseMode());\n        DBMSSynchronizer synchronizer = new DBMSSynchronizer(bibDatabaseContext, Globals.prefs.getKeywordDelimiter(), Globals.prefs.getKeyPattern(), Globals.getFileUpdateMonitor());\n        bibDatabaseContext.convertToSharedDatabase(synchronizer);\n\n        dbmsSynchronizer = bibDatabaseContext.getDBMSSynchronizer();\n        dbmsSynchronizer.openSharedDatabase(new DBMSConnection(dbmsConnectionProperties));\n        dbmsSynchronizer.registerListener(this);\n        jabRefFrame.getDialogService().notify(Localization.lang(\"Connection to %0 server established.\", dbmsConnectionProperties.getType().toString()));\n        return jabRefFrame.addTab(bibDatabaseContext, true);\n    }\n","date":"2020-01-18 07:15:28","endLine":155,"groupId":"7443","id":15,"instanceNumber":1,"isCurCommit":0,"methodName":"openNewSharedDatabaseTab","params":"(DBMSConnectionPropertiesdbmsConnectionProperties)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/99/31096eb6606861cf2e6306dad3f0d6ca3bb548.src","preCode":"    public BasePanel openNewSharedDatabaseTab(DBMSConnectionProperties dbmsConnectionProperties)\n        throws SQLException, DatabaseNotSupportedException, InvalidDBMSConnectionPropertiesException {\n\n        BibDatabaseContext bibDatabaseContext = new BibDatabaseContext();\n        bibDatabaseContext.setMode(Globals.prefs.getDefaultBibDatabaseMode());\n        DBMSSynchronizer synchronizer = new DBMSSynchronizer(bibDatabaseContext, Globals.prefs.getKeywordDelimiter(), Globals.prefs.getKeyPattern(), Globals.getFileUpdateMonitor());\n        bibDatabaseContext.convertToSharedDatabase(synchronizer);\n\n        dbmsSynchronizer = bibDatabaseContext.getDBMSSynchronizer();\n        dbmsSynchronizer.openSharedDatabase(new DBMSConnection(dbmsConnectionProperties));\n        dbmsSynchronizer.registerListener(this);\n        jabRefFrame.getDialogService().notify(Localization.lang(\"Connection to %0 server established.\", dbmsConnectionProperties.getType().toString()));\n        return jabRefFrame.addTab(bibDatabaseContext, true);\n    }\n","realPath":"src/main/java/org/jabref/gui/shared/SharedDatabaseUIManager.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":142,"status":"N"},{"authorDate":"2020-03-16 14:45:59","commitOrder":8,"curCode":"    public void openSharedDatabaseFromParserResult(ParserResult parserResult)\n        throws SQLException, DatabaseNotSupportedException, InvalidDBMSConnectionPropertiesException,\n        NotASharedDatabaseException {\n\n        Optional<String> sharedDatabaseIDOptional = parserResult.getDatabase().getSharedDatabaseID();\n\n        if (!sharedDatabaseIDOptional.isPresent()) {\n            throw new NotASharedDatabaseException();\n        }\n\n        String sharedDatabaseID = sharedDatabaseIDOptional.get();\n        DBMSConnectionProperties dbmsConnectionProperties = new DBMSConnectionProperties(new SharedDatabasePreferences(sharedDatabaseID));\n\n        BibDatabaseContext bibDatabaseContext = new BibDatabaseContext();\n        bibDatabaseContext.setMode(Globals.prefs.getDefaultBibDatabaseMode());\n        DBMSSynchronizer synchronizer = new DBMSSynchronizer(bibDatabaseContext, Globals.prefs.getKeywordDelimiter(), Globals.prefs.getKeyPattern(), Globals.getFileUpdateMonitor());\n        bibDatabaseContext.convertToSharedDatabase(synchronizer);\n\n        bibDatabaseContext.getDatabase().setSharedDatabaseID(sharedDatabaseID);\n        bibDatabaseContext.setDatabasePath(parserResult.getDatabaseContext().getDatabasePath().orElse(null));\n\n        dbmsSynchronizer = bibDatabaseContext.getDBMSSynchronizer();\n        dbmsSynchronizer.openSharedDatabase(new DBMSConnection(dbmsConnectionProperties));\n        dbmsSynchronizer.registerListener(this);\n        parserResult.setDatabaseContext(bibDatabaseContext);\n        jabRefFrame.getDialogService().notify(Localization.lang(\"Connection to %0 server established.\", dbmsConnectionProperties.getType().toString()));\n    }\n","date":"2020-03-16 14:45:59","endLine":183,"groupId":"5645","id":16,"instanceNumber":2,"isCurCommit":0,"methodName":"openSharedDatabaseFromParserResult","params":"(ParserResultparserResult)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/56/fd9dd74ba74c4b583f79208689d203f9ce1c58.src","preCode":"    public void openSharedDatabaseFromParserResult(ParserResult parserResult)\n        throws SQLException, DatabaseNotSupportedException, InvalidDBMSConnectionPropertiesException,\n        NotASharedDatabaseException {\n\n        Optional<String> sharedDatabaseIDOptional = parserResult.getDatabase().getSharedDatabaseID();\n\n        if (!sharedDatabaseIDOptional.isPresent()) {\n            throw new NotASharedDatabaseException();\n        }\n\n        String sharedDatabaseID = sharedDatabaseIDOptional.get();\n        DBMSConnectionProperties dbmsConnectionProperties = new DBMSConnectionProperties(new SharedDatabasePreferences(sharedDatabaseID));\n\n        BibDatabaseContext bibDatabaseContext = new BibDatabaseContext();\n        bibDatabaseContext.setMode(Globals.prefs.getDefaultBibDatabaseMode());\n        DBMSSynchronizer synchronizer = new DBMSSynchronizer(bibDatabaseContext, Globals.prefs.getKeywordDelimiter(), Globals.prefs.getKeyPattern(), Globals.getFileUpdateMonitor());\n        bibDatabaseContext.convertToSharedDatabase(synchronizer);\n\n        bibDatabaseContext.getDatabase().setSharedDatabaseID(sharedDatabaseID);\n        bibDatabaseContext.setDatabaseFile(parserResult.getDatabaseContext().getDatabasePath().orElse(null));\n\n        dbmsSynchronizer = bibDatabaseContext.getDBMSSynchronizer();\n        dbmsSynchronizer.openSharedDatabase(new DBMSConnection(dbmsConnectionProperties));\n        dbmsSynchronizer.registerListener(this);\n        parserResult.setDatabaseContext(bibDatabaseContext);\n        jabRefFrame.getDialogService().notify(Localization.lang(\"Connection to %0 server established.\", dbmsConnectionProperties.getType().toString()));\n    }\n","realPath":"src/main/java/org/jabref/gui/shared/SharedDatabaseUIManager.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":157,"status":"M"}],"commitId":"c7e399c0210471ff96985524394663896ef23571","commitMessage":"@@@Merge pull request #6117 from JabRef/refactor-save\n\nRefactor SaveAction","date":"2020-03-16 14:45:59","modifiedFileCount":"13","status":"M","submitter":"Oliver Kopp"},{"authorTime":"2020-05-22 18:55:39","codes":[{"authorDate":"2020-05-22 18:55:39","commitOrder":9,"curCode":"    public BasePanel openNewSharedDatabaseTab(DBMSConnectionProperties dbmsConnectionProperties)\n            throws SQLException, DatabaseNotSupportedException, InvalidDBMSConnectionPropertiesException {\n\n        BibDatabaseContext bibDatabaseContext = new BibDatabaseContext();\n        bibDatabaseContext.setMode(Globals.prefs.getDefaultBibDatabaseMode());\n        DBMSSynchronizer synchronizer = new DBMSSynchronizer(bibDatabaseContext, Globals.prefs.getKeywordDelimiter(), Globals.prefs.getGlobalBibtexKeyPattern(), Globals.getFileUpdateMonitor());\n        bibDatabaseContext.convertToSharedDatabase(synchronizer);\n\n        dbmsSynchronizer = bibDatabaseContext.getDBMSSynchronizer();\n        dbmsSynchronizer.openSharedDatabase(new DBMSConnection(dbmsConnectionProperties));\n        dbmsSynchronizer.registerListener(this);\n        jabRefFrame.getDialogService().notify(Localization.lang(\"Connection to %0 server established.\", dbmsConnectionProperties.getType().toString()));\n        return jabRefFrame.addTab(bibDatabaseContext, true);\n    }\n","date":"2020-05-22 18:55:39","endLine":152,"groupId":"7443","id":17,"instanceNumber":1,"isCurCommit":0,"methodName":"openNewSharedDatabaseTab","params":"(DBMSConnectionPropertiesdbmsConnectionProperties)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/ea/ed38b2ba485740ba5e726405c85fe56149f425.src","preCode":"    public BasePanel openNewSharedDatabaseTab(DBMSConnectionProperties dbmsConnectionProperties)\n            throws SQLException, DatabaseNotSupportedException, InvalidDBMSConnectionPropertiesException {\n\n        BibDatabaseContext bibDatabaseContext = new BibDatabaseContext();\n        bibDatabaseContext.setMode(Globals.prefs.getDefaultBibDatabaseMode());\n        DBMSSynchronizer synchronizer = new DBMSSynchronizer(bibDatabaseContext, Globals.prefs.getKeywordDelimiter(), Globals.prefs.getKeyPattern(), Globals.getFileUpdateMonitor());\n        bibDatabaseContext.convertToSharedDatabase(synchronizer);\n\n        dbmsSynchronizer = bibDatabaseContext.getDBMSSynchronizer();\n        dbmsSynchronizer.openSharedDatabase(new DBMSConnection(dbmsConnectionProperties));\n        dbmsSynchronizer.registerListener(this);\n        jabRefFrame.getDialogService().notify(Localization.lang(\"Connection to %0 server established.\", dbmsConnectionProperties.getType().toString()));\n        return jabRefFrame.addTab(bibDatabaseContext, true);\n    }\n","realPath":"src/main/java/org/jabref/gui/shared/SharedDatabaseUIManager.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":139,"status":"M"},{"authorDate":"2020-05-22 18:55:39","commitOrder":9,"curCode":"    public void openSharedDatabaseFromParserResult(ParserResult parserResult)\n            throws SQLException, DatabaseNotSupportedException, InvalidDBMSConnectionPropertiesException,\n            NotASharedDatabaseException {\n\n        Optional<String> sharedDatabaseIDOptional = parserResult.getDatabase().getSharedDatabaseID();\n\n        if (sharedDatabaseIDOptional.isEmpty()) {\n            throw new NotASharedDatabaseException();\n        }\n\n        String sharedDatabaseID = sharedDatabaseIDOptional.get();\n        DBMSConnectionProperties dbmsConnectionProperties = new DBMSConnectionProperties(new SharedDatabasePreferences(sharedDatabaseID));\n\n        BibDatabaseContext bibDatabaseContext = new BibDatabaseContext();\n        bibDatabaseContext.setMode(Globals.prefs.getDefaultBibDatabaseMode());\n        DBMSSynchronizer synchronizer = new DBMSSynchronizer(bibDatabaseContext, Globals.prefs.getKeywordDelimiter(), Globals.prefs.getGlobalBibtexKeyPattern(), Globals.getFileUpdateMonitor());\n        bibDatabaseContext.convertToSharedDatabase(synchronizer);\n\n        bibDatabaseContext.getDatabase().setSharedDatabaseID(sharedDatabaseID);\n        bibDatabaseContext.setDatabasePath(parserResult.getDatabaseContext().getDatabasePath().orElse(null));\n\n        dbmsSynchronizer = bibDatabaseContext.getDBMSSynchronizer();\n        dbmsSynchronizer.openSharedDatabase(new DBMSConnection(dbmsConnectionProperties));\n        dbmsSynchronizer.registerListener(this);\n        parserResult.setDatabaseContext(bibDatabaseContext);\n        jabRefFrame.getDialogService().notify(Localization.lang(\"Connection to %0 server established.\", dbmsConnectionProperties.getType().toString()));\n    }\n","date":"2020-05-22 18:55:39","endLine":180,"groupId":"5645","id":18,"instanceNumber":2,"isCurCommit":0,"methodName":"openSharedDatabaseFromParserResult","params":"(ParserResultparserResult)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/ea/ed38b2ba485740ba5e726405c85fe56149f425.src","preCode":"    public void openSharedDatabaseFromParserResult(ParserResult parserResult)\n            throws SQLException, DatabaseNotSupportedException, InvalidDBMSConnectionPropertiesException,\n            NotASharedDatabaseException {\n\n        Optional<String> sharedDatabaseIDOptional = parserResult.getDatabase().getSharedDatabaseID();\n\n        if (!sharedDatabaseIDOptional.isPresent()) {\n            throw new NotASharedDatabaseException();\n        }\n\n        String sharedDatabaseID = sharedDatabaseIDOptional.get();\n        DBMSConnectionProperties dbmsConnectionProperties = new DBMSConnectionProperties(new SharedDatabasePreferences(sharedDatabaseID));\n\n        BibDatabaseContext bibDatabaseContext = new BibDatabaseContext();\n        bibDatabaseContext.setMode(Globals.prefs.getDefaultBibDatabaseMode());\n        DBMSSynchronizer synchronizer = new DBMSSynchronizer(bibDatabaseContext, Globals.prefs.getKeywordDelimiter(), Globals.prefs.getKeyPattern(), Globals.getFileUpdateMonitor());\n        bibDatabaseContext.convertToSharedDatabase(synchronizer);\n\n        bibDatabaseContext.getDatabase().setSharedDatabaseID(sharedDatabaseID);\n        bibDatabaseContext.setDatabasePath(parserResult.getDatabaseContext().getDatabasePath().orElse(null));\n\n        dbmsSynchronizer = bibDatabaseContext.getDBMSSynchronizer();\n        dbmsSynchronizer.openSharedDatabase(new DBMSConnection(dbmsConnectionProperties));\n        dbmsSynchronizer.registerListener(this);\n        parserResult.setDatabaseContext(bibDatabaseContext);\n        jabRefFrame.getDialogService().notify(Localization.lang(\"Connection to %0 server established.\", dbmsConnectionProperties.getType().toString()));\n    }\n","realPath":"src/main/java/org/jabref/gui/shared/SharedDatabaseUIManager.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":154,"status":"M"}],"commitId":"62c8bf1a526802f16f524b31e57ab2859ce449d2","commitMessage":"@@@Refactor BibtexKeyPatternPreferences (#6489)\n\n* Removed unused preferences\n\n* Reworded advanced prefs to network prefs\n\n* Refactored BibtexKeyPatternPreferences and some minor housekeeping\n\n* Reworded name of advanced tab in preferences in network\n\n* Fixed comments\n\n* Reworded putKeyWord and reordered BibtexKeyPatternPreferences for inner coherency.  split up lines for better readability\n\n* Fixed test\n\n* Added CHANGELOG.md entry and some minor rewording\n\n* Removed duplicate globalCiteKeyPattern out of SavePreferences.  cached getGlobalBibtexKeyPattern()\n\n* Reworded forgotten variables\n\n* Removed superfluous expressions and some rewording in l10n\n","date":"2020-05-22 18:55:39","modifiedFileCount":"19","status":"M","submitter":"Carl Christian Snethlage"},{"authorTime":"2020-06-04 18:52:52","codes":[{"authorDate":"2020-06-04 18:52:52","commitOrder":10,"curCode":"    public BasePanel openNewSharedDatabaseTab(DBMSConnectionProperties dbmsConnectionProperties)\n            throws SQLException, DatabaseNotSupportedException, InvalidDBMSConnectionPropertiesException {\n\n        BibDatabaseContext bibDatabaseContext = new BibDatabaseContext();\n        bibDatabaseContext.setMode(Globals.prefs.getDefaultBibDatabaseMode());\n        DBMSSynchronizer synchronizer = new DBMSSynchronizer(bibDatabaseContext, Globals.prefs.getKeywordDelimiter(), Globals.prefs.getGlobalCitationKeyPattern(), Globals.getFileUpdateMonitor());\n        bibDatabaseContext.convertToSharedDatabase(synchronizer);\n\n        dbmsSynchronizer = bibDatabaseContext.getDBMSSynchronizer();\n        dbmsSynchronizer.openSharedDatabase(new DBMSConnection(dbmsConnectionProperties));\n        dbmsSynchronizer.registerListener(this);\n        jabRefFrame.getDialogService().notify(Localization.lang(\"Connection to %0 server established.\", dbmsConnectionProperties.getType().toString()));\n        return jabRefFrame.addTab(bibDatabaseContext, true);\n    }\n","date":"2020-06-04 18:52:52","endLine":152,"groupId":"7443","id":19,"instanceNumber":1,"isCurCommit":0,"methodName":"openNewSharedDatabaseTab","params":"(DBMSConnectionPropertiesdbmsConnectionProperties)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/41/047ab80ec67069bf058e4acf2bb64435033839.src","preCode":"    public BasePanel openNewSharedDatabaseTab(DBMSConnectionProperties dbmsConnectionProperties)\n            throws SQLException, DatabaseNotSupportedException, InvalidDBMSConnectionPropertiesException {\n\n        BibDatabaseContext bibDatabaseContext = new BibDatabaseContext();\n        bibDatabaseContext.setMode(Globals.prefs.getDefaultBibDatabaseMode());\n        DBMSSynchronizer synchronizer = new DBMSSynchronizer(bibDatabaseContext, Globals.prefs.getKeywordDelimiter(), Globals.prefs.getGlobalBibtexKeyPattern(), Globals.getFileUpdateMonitor());\n        bibDatabaseContext.convertToSharedDatabase(synchronizer);\n\n        dbmsSynchronizer = bibDatabaseContext.getDBMSSynchronizer();\n        dbmsSynchronizer.openSharedDatabase(new DBMSConnection(dbmsConnectionProperties));\n        dbmsSynchronizer.registerListener(this);\n        jabRefFrame.getDialogService().notify(Localization.lang(\"Connection to %0 server established.\", dbmsConnectionProperties.getType().toString()));\n        return jabRefFrame.addTab(bibDatabaseContext, true);\n    }\n","realPath":"src/main/java/org/jabref/gui/shared/SharedDatabaseUIManager.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":139,"status":"M"},{"authorDate":"2020-06-04 18:52:52","commitOrder":10,"curCode":"    public void openSharedDatabaseFromParserResult(ParserResult parserResult)\n            throws SQLException, DatabaseNotSupportedException, InvalidDBMSConnectionPropertiesException,\n            NotASharedDatabaseException {\n\n        Optional<String> sharedDatabaseIDOptional = parserResult.getDatabase().getSharedDatabaseID();\n\n        if (sharedDatabaseIDOptional.isEmpty()) {\n            throw new NotASharedDatabaseException();\n        }\n\n        String sharedDatabaseID = sharedDatabaseIDOptional.get();\n        DBMSConnectionProperties dbmsConnectionProperties = new DBMSConnectionProperties(new SharedDatabasePreferences(sharedDatabaseID));\n\n        BibDatabaseContext bibDatabaseContext = new BibDatabaseContext();\n        bibDatabaseContext.setMode(Globals.prefs.getDefaultBibDatabaseMode());\n        DBMSSynchronizer synchronizer = new DBMSSynchronizer(bibDatabaseContext, Globals.prefs.getKeywordDelimiter(), Globals.prefs.getGlobalCitationKeyPattern(), Globals.getFileUpdateMonitor());\n        bibDatabaseContext.convertToSharedDatabase(synchronizer);\n\n        bibDatabaseContext.getDatabase().setSharedDatabaseID(sharedDatabaseID);\n        bibDatabaseContext.setDatabasePath(parserResult.getDatabaseContext().getDatabasePath().orElse(null));\n\n        dbmsSynchronizer = bibDatabaseContext.getDBMSSynchronizer();\n        dbmsSynchronizer.openSharedDatabase(new DBMSConnection(dbmsConnectionProperties));\n        dbmsSynchronizer.registerListener(this);\n        parserResult.setDatabaseContext(bibDatabaseContext);\n        jabRefFrame.getDialogService().notify(Localization.lang(\"Connection to %0 server established.\", dbmsConnectionProperties.getType().toString()));\n    }\n","date":"2020-06-04 18:52:52","endLine":180,"groupId":"5645","id":20,"instanceNumber":2,"isCurCommit":0,"methodName":"openSharedDatabaseFromParserResult","params":"(ParserResultparserResult)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/41/047ab80ec67069bf058e4acf2bb64435033839.src","preCode":"    public void openSharedDatabaseFromParserResult(ParserResult parserResult)\n            throws SQLException, DatabaseNotSupportedException, InvalidDBMSConnectionPropertiesException,\n            NotASharedDatabaseException {\n\n        Optional<String> sharedDatabaseIDOptional = parserResult.getDatabase().getSharedDatabaseID();\n\n        if (sharedDatabaseIDOptional.isEmpty()) {\n            throw new NotASharedDatabaseException();\n        }\n\n        String sharedDatabaseID = sharedDatabaseIDOptional.get();\n        DBMSConnectionProperties dbmsConnectionProperties = new DBMSConnectionProperties(new SharedDatabasePreferences(sharedDatabaseID));\n\n        BibDatabaseContext bibDatabaseContext = new BibDatabaseContext();\n        bibDatabaseContext.setMode(Globals.prefs.getDefaultBibDatabaseMode());\n        DBMSSynchronizer synchronizer = new DBMSSynchronizer(bibDatabaseContext, Globals.prefs.getKeywordDelimiter(), Globals.prefs.getGlobalBibtexKeyPattern(), Globals.getFileUpdateMonitor());\n        bibDatabaseContext.convertToSharedDatabase(synchronizer);\n\n        bibDatabaseContext.getDatabase().setSharedDatabaseID(sharedDatabaseID);\n        bibDatabaseContext.setDatabasePath(parserResult.getDatabaseContext().getDatabasePath().orElse(null));\n\n        dbmsSynchronizer = bibDatabaseContext.getDBMSSynchronizer();\n        dbmsSynchronizer.openSharedDatabase(new DBMSConnection(dbmsConnectionProperties));\n        dbmsSynchronizer.registerListener(this);\n        parserResult.setDatabaseContext(bibDatabaseContext);\n        jabRefFrame.getDialogService().notify(Localization.lang(\"Connection to %0 server established.\", dbmsConnectionProperties.getType().toString()));\n    }\n","realPath":"src/main/java/org/jabref/gui/shared/SharedDatabaseUIManager.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":154,"status":"M"}],"commitId":"7cc57474b7aa991ef6ea148d4030d4bb68ee69bf","commitMessage":"@@@Rename bibtexkey (#6545)\n\n* Reworded 'BibtexKey' to 'CitationKey'\n\n* Fixed merge errors.  renamed constants\n\n* Renamed forgotten package\n\n* Fixed overlooked enum names and added CHANGELOG.md entry","date":"2020-06-04 18:52:52","modifiedFileCount":"54","status":"M","submitter":"Carl Christian Snethlage"},{"authorTime":"2020-06-04 18:52:52","codes":[{"authorDate":"2020-10-21 05:27:30","commitOrder":11,"curCode":"    public LibraryTab openNewSharedDatabaseTab(DBMSConnectionProperties dbmsConnectionProperties)\n            throws SQLException, DatabaseNotSupportedException, InvalidDBMSConnectionPropertiesException {\n\n        BibDatabaseContext bibDatabaseContext = new BibDatabaseContext();\n        bibDatabaseContext.setMode(Globals.prefs.getDefaultBibDatabaseMode());\n        DBMSSynchronizer synchronizer = new DBMSSynchronizer(bibDatabaseContext, Globals.prefs.getKeywordDelimiter(), Globals.prefs.getGlobalCitationKeyPattern(), Globals.getFileUpdateMonitor());\n        bibDatabaseContext.convertToSharedDatabase(synchronizer);\n\n        dbmsSynchronizer = bibDatabaseContext.getDBMSSynchronizer();\n        dbmsSynchronizer.openSharedDatabase(new DBMSConnection(dbmsConnectionProperties));\n        dbmsSynchronizer.registerListener(this);\n        jabRefFrame.getDialogService().notify(Localization.lang(\"Connection to %0 server established.\", dbmsConnectionProperties.getType().toString()));\n        return jabRefFrame.addTab(bibDatabaseContext, true);\n    }\n","date":"2020-10-21 05:27:30","endLine":152,"groupId":"10900","id":21,"instanceNumber":1,"isCurCommit":0,"methodName":"openNewSharedDatabaseTab","params":"(DBMSConnectionPropertiesdbmsConnectionProperties)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/a0/89aadf723fc086876af38368374e032efbabd4.src","preCode":"    public BasePanel openNewSharedDatabaseTab(DBMSConnectionProperties dbmsConnectionProperties)\n            throws SQLException, DatabaseNotSupportedException, InvalidDBMSConnectionPropertiesException {\n\n        BibDatabaseContext bibDatabaseContext = new BibDatabaseContext();\n        bibDatabaseContext.setMode(Globals.prefs.getDefaultBibDatabaseMode());\n        DBMSSynchronizer synchronizer = new DBMSSynchronizer(bibDatabaseContext, Globals.prefs.getKeywordDelimiter(), Globals.prefs.getGlobalCitationKeyPattern(), Globals.getFileUpdateMonitor());\n        bibDatabaseContext.convertToSharedDatabase(synchronizer);\n\n        dbmsSynchronizer = bibDatabaseContext.getDBMSSynchronizer();\n        dbmsSynchronizer.openSharedDatabase(new DBMSConnection(dbmsConnectionProperties));\n        dbmsSynchronizer.registerListener(this);\n        jabRefFrame.getDialogService().notify(Localization.lang(\"Connection to %0 server established.\", dbmsConnectionProperties.getType().toString()));\n        return jabRefFrame.addTab(bibDatabaseContext, true);\n    }\n","realPath":"src/main/java/org/jabref/gui/shared/SharedDatabaseUIManager.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":139,"status":"M"},{"authorDate":"2020-06-04 18:52:52","commitOrder":11,"curCode":"    public void openSharedDatabaseFromParserResult(ParserResult parserResult)\n            throws SQLException, DatabaseNotSupportedException, InvalidDBMSConnectionPropertiesException,\n            NotASharedDatabaseException {\n\n        Optional<String> sharedDatabaseIDOptional = parserResult.getDatabase().getSharedDatabaseID();\n\n        if (sharedDatabaseIDOptional.isEmpty()) {\n            throw new NotASharedDatabaseException();\n        }\n\n        String sharedDatabaseID = sharedDatabaseIDOptional.get();\n        DBMSConnectionProperties dbmsConnectionProperties = new DBMSConnectionProperties(new SharedDatabasePreferences(sharedDatabaseID));\n\n        BibDatabaseContext bibDatabaseContext = new BibDatabaseContext();\n        bibDatabaseContext.setMode(Globals.prefs.getDefaultBibDatabaseMode());\n        DBMSSynchronizer synchronizer = new DBMSSynchronizer(bibDatabaseContext, Globals.prefs.getKeywordDelimiter(), Globals.prefs.getGlobalCitationKeyPattern(), Globals.getFileUpdateMonitor());\n        bibDatabaseContext.convertToSharedDatabase(synchronizer);\n\n        bibDatabaseContext.getDatabase().setSharedDatabaseID(sharedDatabaseID);\n        bibDatabaseContext.setDatabasePath(parserResult.getDatabaseContext().getDatabasePath().orElse(null));\n\n        dbmsSynchronizer = bibDatabaseContext.getDBMSSynchronizer();\n        dbmsSynchronizer.openSharedDatabase(new DBMSConnection(dbmsConnectionProperties));\n        dbmsSynchronizer.registerListener(this);\n        parserResult.setDatabaseContext(bibDatabaseContext);\n        jabRefFrame.getDialogService().notify(Localization.lang(\"Connection to %0 server established.\", dbmsConnectionProperties.getType().toString()));\n    }\n","date":"2020-06-04 18:52:52","endLine":180,"groupId":"10900","id":22,"instanceNumber":2,"isCurCommit":0,"methodName":"openSharedDatabaseFromParserResult","params":"(ParserResultparserResult)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/41/047ab80ec67069bf058e4acf2bb64435033839.src","preCode":"    public void openSharedDatabaseFromParserResult(ParserResult parserResult)\n            throws SQLException, DatabaseNotSupportedException, InvalidDBMSConnectionPropertiesException,\n            NotASharedDatabaseException {\n\n        Optional<String> sharedDatabaseIDOptional = parserResult.getDatabase().getSharedDatabaseID();\n\n        if (sharedDatabaseIDOptional.isEmpty()) {\n            throw new NotASharedDatabaseException();\n        }\n\n        String sharedDatabaseID = sharedDatabaseIDOptional.get();\n        DBMSConnectionProperties dbmsConnectionProperties = new DBMSConnectionProperties(new SharedDatabasePreferences(sharedDatabaseID));\n\n        BibDatabaseContext bibDatabaseContext = new BibDatabaseContext();\n        bibDatabaseContext.setMode(Globals.prefs.getDefaultBibDatabaseMode());\n        DBMSSynchronizer synchronizer = new DBMSSynchronizer(bibDatabaseContext, Globals.prefs.getKeywordDelimiter(), Globals.prefs.getGlobalCitationKeyPattern(), Globals.getFileUpdateMonitor());\n        bibDatabaseContext.convertToSharedDatabase(synchronizer);\n\n        bibDatabaseContext.getDatabase().setSharedDatabaseID(sharedDatabaseID);\n        bibDatabaseContext.setDatabasePath(parserResult.getDatabaseContext().getDatabasePath().orElse(null));\n\n        dbmsSynchronizer = bibDatabaseContext.getDBMSSynchronizer();\n        dbmsSynchronizer.openSharedDatabase(new DBMSConnection(dbmsConnectionProperties));\n        dbmsSynchronizer.registerListener(this);\n        parserResult.setDatabaseContext(bibDatabaseContext);\n        jabRefFrame.getDialogService().notify(Localization.lang(\"Connection to %0 server established.\", dbmsConnectionProperties.getType().toString()));\n    }\n","realPath":"src/main/java/org/jabref/gui/shared/SharedDatabaseUIManager.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":154,"status":"N"}],"commitId":"4cf2fb06d3d876d2043f65ca0e51c3c4185fd05c","commitMessage":"@@@Fix setting of title (and simplify BasePanel to LibraryTab) (#6129)\n\nCo-authored-by: Carl Christian Snethlage <50491877+calixtus@users.noreply.github.com>","date":"2020-10-21 05:27:30","modifiedFileCount":"66","status":"M","submitter":"Oliver Kopp"}]
