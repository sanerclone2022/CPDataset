[{"authorTime":"2017-10-28 11:51:08","codes":[{"authorDate":"2017-10-28 11:51:08","commitOrder":1,"curCode":"    public boolean makeChange(BasePanel panel, BibDatabase secondary, NamedCompound undoEdit) {\n\n        if (panel.getDatabase().hasStringLabel(string.getName())) {\n            \r\n            LOGGER.info(\"Cannot add string '\" + string.getName() + \"' because the name \"\n                    + \"is already in use.\");\n        }\n\n        try {\n            panel.getDatabase().addString(string);\n            undoEdit.addEdit(new UndoableInsertString(panel, panel.getDatabase(), string));\n        } catch (KeyCollisionException ex) {\n            LOGGER.info(\"Error: could not add string '\" + string.getName() + \"': \" + ex.getMessage(), ex);\n        }\n        try {\n            secondary.addString(new BibtexString(string.getName(), string.getContent()));\n        } catch (KeyCollisionException ex) {\n            LOGGER.info(\"Error: could not add string '\" + string.getName() + \"' to tmp database: \" + ex.getMessage(), ex);\n        }\n        return true;\n    }\n","date":"2017-10-28 11:51:08","endLine":56,"groupId":"7799","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"makeChange","params":"(BasePanelpanel@BibDatabasesecondary@NamedCompoundundoEdit)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/ba/7ff79648af81cbedea5dba2916a4523470a170.src","preCode":"    public boolean makeChange(BasePanel panel, BibDatabase secondary, NamedCompound undoEdit) {\n\n        if (panel.getDatabase().hasStringLabel(string.getName())) {\n            \r\n            LOGGER.info(\"Cannot add string '\" + string.getName() + \"' because the name \"\n                    + \"is already in use.\");\n        }\n\n        try {\n            panel.getDatabase().addString(string);\n            undoEdit.addEdit(new UndoableInsertString(panel, panel.getDatabase(), string));\n        } catch (KeyCollisionException ex) {\n            LOGGER.info(\"Error: could not add string '\" + string.getName() + \"': \" + ex.getMessage(), ex);\n        }\n        try {\n            secondary.addString(new BibtexString(string.getName(), string.getContent()));\n        } catch (KeyCollisionException ex) {\n            LOGGER.info(\"Error: could not add string '\" + string.getName() + \"' to tmp database: \" + ex.getMessage(), ex);\n        }\n        return true;\n    }\n","realPath":"src/main/java/org/jabref/gui/collab/StringAddChangeViewModel.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":36,"status":"B"},{"authorDate":"2017-10-28 11:51:08","commitOrder":1,"curCode":"    public boolean makeChange(BasePanel panel, BibDatabase secondary, NamedCompound undoEdit) {\n\n        try {\n            panel.getDatabase().removeString(inMem.getId());\n            undoEdit.addEdit(new UndoableRemoveString(panel, panel.getDatabase(), string));\n        } catch (Exception ex) {\n            LOGGER.info(\"Error: could not add string '\" + string.getName() + \"': \" + ex.getMessage(), ex);\n        }\n\n        \r\n        secondary.removeString(string.getId());\n\n        return true;\n    }\n","date":"2017-10-28 11:51:08","endLine":48,"groupId":"12505","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"makeChange","params":"(BasePanelpanel@BibDatabasesecondary@NamedCompoundundoEdit)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/c4/7f6134594ccc147df274110ae911e5b31c60d8.src","preCode":"    public boolean makeChange(BasePanel panel, BibDatabase secondary, NamedCompound undoEdit) {\n\n        try {\n            panel.getDatabase().removeString(inMem.getId());\n            undoEdit.addEdit(new UndoableRemoveString(panel, panel.getDatabase(), string));\n        } catch (Exception ex) {\n            LOGGER.info(\"Error: could not add string '\" + string.getName() + \"': \" + ex.getMessage(), ex);\n        }\n\n        \r\n        secondary.removeString(string.getId());\n\n        return true;\n    }\n","realPath":"src/main/java/org/jabref/gui/collab/StringRemoveChangeViewModel.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":35,"status":"B"}],"commitId":"bd76ec8e9cbc38b7ec4537b00bddbebc02e9a166","commitMessage":"@@@Merge pull request #3353 from JabRef/refactorCollab\n\nRefactor collab package","date":"2017-10-28 11:51:08","modifiedFileCount":"5","status":"B","submitter":"Tobias Diez"},{"authorTime":"2019-02-18 06:08:21","codes":[{"authorDate":"2019-02-18 06:08:21","commitOrder":2,"curCode":"    public boolean makeChange(BasePanel panel, BibDatabase secondary, NamedCompound undoEdit) {\n\n        if (panel.getDatabase().hasStringLabel(string.getName())) {\n            \r\n            LOGGER.info(\"Cannot add string '\" + string.getName() + \"' because the name \"\n                    + \"is already in use.\");\n        }\n\n        try {\n            panel.getDatabase().addString(string);\n            undoEdit.addEdit(new UndoableInsertString(panel.getDatabase(), string));\n        } catch (KeyCollisionException ex) {\n            LOGGER.info(\"Error: could not add string '\" + string.getName() + \"': \" + ex.getMessage(), ex);\n        }\n        try {\n            secondary.addString(new BibtexString(string.getName(), string.getContent()));\n        } catch (KeyCollisionException ex) {\n            LOGGER.info(\"Error: could not add string '\" + string.getName() + \"' to tmp database: \" + ex.getMessage(), ex);\n        }\n        return true;\n    }\n","date":"2019-02-18 06:08:21","endLine":56,"groupId":"0","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"makeChange","params":"(BasePanelpanel@BibDatabasesecondary@NamedCompoundundoEdit)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/da/fb80b125fcc4a49f9e7e1b4e3d64f657cb292e.src","preCode":"    public boolean makeChange(BasePanel panel, BibDatabase secondary, NamedCompound undoEdit) {\n\n        if (panel.getDatabase().hasStringLabel(string.getName())) {\n            \r\n            LOGGER.info(\"Cannot add string '\" + string.getName() + \"' because the name \"\n                    + \"is already in use.\");\n        }\n\n        try {\n            panel.getDatabase().addString(string);\n            undoEdit.addEdit(new UndoableInsertString(panel, panel.getDatabase(), string));\n        } catch (KeyCollisionException ex) {\n            LOGGER.info(\"Error: could not add string '\" + string.getName() + \"': \" + ex.getMessage(), ex);\n        }\n        try {\n            secondary.addString(new BibtexString(string.getName(), string.getContent()));\n        } catch (KeyCollisionException ex) {\n            LOGGER.info(\"Error: could not add string '\" + string.getName() + \"' to tmp database: \" + ex.getMessage(), ex);\n        }\n        return true;\n    }\n","realPath":"src/main/java/org/jabref/gui/collab/StringAddChangeViewModel.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":36,"status":"M"},{"authorDate":"2019-02-18 06:08:21","commitOrder":2,"curCode":"    public boolean makeChange(BasePanel panel, BibDatabase secondary, NamedCompound undoEdit) {\n\n        try {\n            panel.getDatabase().removeString(inMem.getId());\n            undoEdit.addEdit(new UndoableRemoveString(panel.getDatabase(), string));\n        } catch (Exception ex) {\n            LOGGER.info(\"Error: could not add string '\" + string.getName() + \"': \" + ex.getMessage(), ex);\n        }\n\n        \r\n        secondary.removeString(string.getId());\n\n        return true;\n    }\n","date":"2019-02-18 06:08:21","endLine":48,"groupId":"0","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"makeChange","params":"(BasePanelpanel@BibDatabasesecondary@NamedCompoundundoEdit)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/ea/f66d47304fb19bc45a80b22052a7ed00904587.src","preCode":"    public boolean makeChange(BasePanel panel, BibDatabase secondary, NamedCompound undoEdit) {\n\n        try {\n            panel.getDatabase().removeString(inMem.getId());\n            undoEdit.addEdit(new UndoableRemoveString(panel, panel.getDatabase(), string));\n        } catch (Exception ex) {\n            LOGGER.info(\"Error: could not add string '\" + string.getName() + \"': \" + ex.getMessage(), ex);\n        }\n\n        \r\n        secondary.removeString(string.getId());\n\n        return true;\n    }\n","realPath":"src/main/java/org/jabref/gui/collab/StringRemoveChangeViewModel.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":35,"status":"M"}],"commitId":"e5ede3aef4fa43758172d58bfb078cb77d8ca7e5","commitMessage":"@@@Convert Strings Dialog to javafx (#3735)\n\n* Convert String dialog to javafx\nTODO: store strings back to db\n\n* add save and cancel buttons\n\n* add method for saving\nTODO: validation\n\n* First attempt at validation\n\n* use mvvmfx validation\n\n* Add validation in factory\n\n* remove old comment\n\n* add css but still does not work :(\n\n* convert to new javafx view/controller\n\n* play around with validation\nvalidation icon is now correctly shown.  although it needs some css mods\nfix toolbar max width\n\n* refactor\nTODO: Fix buttons not working\n\n* fix l10n\n\n* fix loading of string dialog\n\n* fix imports\n\n* remove old stuff\nTODO: fix validation\n\n* fix Validation\noptimize layout a bit\nfix l10n\n\n* fix codacy.  improve layout\n\n* Refactorings and renamings\n\n* first part for factory\n\n* fix visibilty error\n\n* move validation textfieldtablecell to factory\n\n* fix import order\nfix l10n\n\n* fix merge erros in l10n\n\n* remove obsolete key from l10n\n\n* remove unused TextField\n\n* renamings and remove uncessary methods\n\n* extract string adding to bibdatabase\nadd tests\n\n* fix checkstyle\n","date":"2019-02-18 06:08:21","modifiedFileCount":"14","status":"M","submitter":"Christoph"},{"authorTime":"2019-03-13 04:47:15","codes":[{"authorDate":"2019-03-13 04:47:15","commitOrder":3,"curCode":"    public void makeChange(BibDatabaseContext database, NamedCompound undoEdit) {\n        try {\n            database.getDatabase().addString(string);\n            undoEdit.addEdit(new UndoableInsertString(database.getDatabase(), string));\n        } catch (KeyCollisionException ex) {\n            LOGGER.warn(\"Error: could not add string '\" + string.getName() + \"': \" + ex.getMessage(), ex);\n        }\n    }\n","date":"2019-03-13 04:47:15","endLine":35,"groupId":"11437","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"makeChange","params":"(BibDatabaseContextdatabase@NamedCompoundundoEdit)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/f2/2535b875bf3db973c3be231678804cccb2d780.src","preCode":"    public boolean makeChange(BasePanel panel, BibDatabase secondary, NamedCompound undoEdit) {\n\n        if (panel.getDatabase().hasStringLabel(string.getName())) {\n            \r\n            LOGGER.info(\"Cannot add string '\" + string.getName() + \"' because the name \"\n                    + \"is already in use.\");\n        }\n\n        try {\n            panel.getDatabase().addString(string);\n            undoEdit.addEdit(new UndoableInsertString(panel.getDatabase(), string));\n        } catch (KeyCollisionException ex) {\n            LOGGER.info(\"Error: could not add string '\" + string.getName() + \"': \" + ex.getMessage(), ex);\n        }\n        try {\n            secondary.addString(new BibtexString(string.getName(), string.getContent()));\n        } catch (KeyCollisionException ex) {\n            LOGGER.info(\"Error: could not add string '\" + string.getName() + \"' to tmp database: \" + ex.getMessage(), ex);\n        }\n        return true;\n    }\n","realPath":"src/main/java/org/jabref/gui/collab/StringAddChangeViewModel.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":28,"status":"M"},{"authorDate":"2019-03-13 04:47:15","commitOrder":3,"curCode":"    public void makeChange(BibDatabaseContext database, NamedCompound undoEdit) {\n        try {\n            database.getDatabase().removeString(inMem.getId());\n            undoEdit.addEdit(new UndoableRemoveString(database.getDatabase(), string));\n        } catch (Exception ex) {\n            LOGGER.warn(\"Error: could not add string '\" + string.getName() + \"': \" + ex.getMessage(), ex);\n        }\n    }\n","date":"2019-03-13 04:47:15","endLine":36,"groupId":"11437","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"makeChange","params":"(BibDatabaseContextdatabase@NamedCompoundundoEdit)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/ba/1b8066afb1ecad2bf9cb178ba7424e19741b4f.src","preCode":"    public boolean makeChange(BasePanel panel, BibDatabase secondary, NamedCompound undoEdit) {\n\n        try {\n            panel.getDatabase().removeString(inMem.getId());\n            undoEdit.addEdit(new UndoableRemoveString(panel.getDatabase(), string));\n        } catch (Exception ex) {\n            LOGGER.info(\"Error: could not add string '\" + string.getName() + \"': \" + ex.getMessage(), ex);\n        }\n\n        \r\n        secondary.removeString(string.getId());\n\n        return true;\n    }\n","realPath":"src/main/java/org/jabref/gui/collab/StringRemoveChangeViewModel.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":29,"status":"M"}],"commitId":"930fa4efb4d59b021b69321aaff164010f081c51","commitMessage":"@@@Rework external changes dialog in JavaFX (#4693)\n\n* Rework external changes dialog in JavaFX\n\n* fix exception by running in FX thread\n\n* Fix appearance\n\n* Improve display\n","date":"2019-03-13 04:47:15","modifiedFileCount":"17","status":"M","submitter":"Tobias Diez"},{"authorTime":"2019-11-29 03:39:51","codes":[{"authorDate":"2019-03-13 04:47:15","commitOrder":4,"curCode":"    public void makeChange(BibDatabaseContext database, NamedCompound undoEdit) {\n        try {\n            database.getDatabase().addString(string);\n            undoEdit.addEdit(new UndoableInsertString(database.getDatabase(), string));\n        } catch (KeyCollisionException ex) {\n            LOGGER.warn(\"Error: could not add string '\" + string.getName() + \"': \" + ex.getMessage(), ex);\n        }\n    }\n","date":"2019-03-13 04:47:15","endLine":35,"groupId":"10873","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"makeChange","params":"(BibDatabaseContextdatabase@NamedCompoundundoEdit)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/f2/2535b875bf3db973c3be231678804cccb2d780.src","preCode":"    public void makeChange(BibDatabaseContext database, NamedCompound undoEdit) {\n        try {\n            database.getDatabase().addString(string);\n            undoEdit.addEdit(new UndoableInsertString(database.getDatabase(), string));\n        } catch (KeyCollisionException ex) {\n            LOGGER.warn(\"Error: could not add string '\" + string.getName() + \"': \" + ex.getMessage(), ex);\n        }\n    }\n","realPath":"src/main/java/org/jabref/gui/collab/StringAddChangeViewModel.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":28,"status":"N"},{"authorDate":"2019-11-29 03:39:51","commitOrder":4,"curCode":"    public void makeChange(BibDatabaseContext database, NamedCompound undoEdit) {\n        try {\n            database.getDatabase().removeString(string.getId());\n            undoEdit.addEdit(new UndoableRemoveString(database.getDatabase(), string));\n        } catch (Exception ex) {\n            LOGGER.warn(\"Error: could not add string '\" + string.getName() + \"': \" + ex.getMessage(), ex);\n        }\n    }\n","date":"2019-11-29 03:39:51","endLine":33,"groupId":"10873","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"makeChange","params":"(BibDatabaseContextdatabase@NamedCompoundundoEdit)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/71/629a3438792761f839be542f1dae22964a44ad.src","preCode":"    public void makeChange(BibDatabaseContext database, NamedCompound undoEdit) {\n        try {\n            database.getDatabase().removeString(inMem.getId());\n            undoEdit.addEdit(new UndoableRemoveString(database.getDatabase(), string));\n        } catch (Exception ex) {\n            LOGGER.warn(\"Error: could not add string '\" + string.getName() + \"': \" + ex.getMessage(), ex);\n        }\n    }\n","realPath":"src/main/java/org/jabref/gui/collab/StringRemoveChangeViewModel.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":26,"status":"M"}],"commitId":"ce0e8870c725ec9dc18e0d64a1d73d466dba4537","commitMessage":"@@@Improve change scanner (#5665)\n\nMove from 3-way merge (last saved value vs current value in JabRef vs new value in file) to simple 2-way merge (current value in JabRef vs new value in file).","date":"2019-11-29 03:39:51","modifiedFileCount":"12","status":"M","submitter":"Tobias Diez"}]
