[{"authorTime":"2019-11-28 03:46:22","codes":[{"authorDate":"2019-11-28 03:46:22","commitOrder":2,"curCode":"    void testUpgradeColumnPreferencesAlreadyMigrated() {\n        List<String> columnNames = Arrays.asList(\"entrytype\", \"author/editor\", \"title\", \"year\", \"journal/booktitle\", \"bibtexkey\", \"printed\");\n        List<String> columnWidths = Arrays.asList(\"75\", \"300\", \"470\", \"60\", \"130\", \"100\", \"30\");\n\n        when(prefs.getStringList(JabRefPreferences.COLUMN_NAMES)).thenReturn(columnNames);\n        when(prefs.getStringList(JabRefPreferences.COLUMN_WIDTHS)).thenReturn(columnWidths);\n\n        PreferencesMigrations.upgradeColumnPreferences(prefs);\n\n        verify(prefs, never()).put(JabRefPreferences.COLUMN_NAMES, \"anyString\");\n        verify(prefs, never()).put(JabRefPreferences.COLUMN_WIDTHS, \"anyString\");\n    }\n","date":"2019-11-28 03:46:22","endLine":133,"groupId":"10157","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testUpgradeColumnPreferencesAlreadyMigrated","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/b2/9a4dbbe1dd6cbd2f6a96c663d9b89b9a09b308.src","preCode":"    void testUpgradeColumnPreferencesAlreadyMigrated() {\n        List<String> columnNames = Arrays.asList(\"entrytype\", \"author/editor\", \"title\", \"year\", \"journal/booktitle\", \"bibtexkey\", \"printed\");\n        List<String> columnWidths = Arrays.asList(\"75\", \"300\", \"470\", \"60\", \"130\", \"100\", \"30\");\n\n        when(prefs.getStringList(JabRefPreferences.COLUMN_NAMES)).thenReturn(columnNames);\n        when(prefs.getStringList(JabRefPreferences.COLUMN_WIDTHS)).thenReturn(columnWidths);\n\n        PreferencesMigrations.upgradeColumnPreferences(prefs);\n\n        verify(prefs, never()).put(JabRefPreferences.COLUMN_NAMES, \"anyString\");\n        verify(prefs, never()).put(JabRefPreferences.COLUMN_WIDTHS, \"anyString\");\n    }\n","realPath":"src/test/java/org/jabref/migrations/PreferencesMigrationsTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":122,"status":"MB"},{"authorDate":"2019-11-28 03:46:22","commitOrder":2,"curCode":"    void testUpgradeColumnPreferencesFromWithoutTypes() {\n        List<String> columnNames = Arrays.asList(\"entrytype\", \"author/editor\", \"title\", \"year\", \"journal/booktitle\", \"bibtexkey\", \"printed\");\n        List<String> columnWidths = Arrays.asList(\"75\", \"300\", \"470\", \"60\", \"130\", \"100\", \"30\");\n        List<String> updatedNames = Arrays.asList(\"groups\", \"files\", \"linked_id\", \"field:entrytype\", \"field:author/editor\", \"field:title\", \"field:year\", \"field:journal/booktitle\", \"field:bibtexkey\", \"special:printed\");\n        List<String> updatedWidths = Arrays.asList(\"28\", \"28\", \"28\", \"75\", \"300\", \"470\", \"60\", \"130\", \"100\", \"30\");\n\n        when(prefs.getStringList(JabRefPreferences.COLUMN_NAMES)).thenReturn(columnNames);\n        when(prefs.getStringList(JabRefPreferences.COLUMN_WIDTHS)).thenReturn(columnWidths);\n\n        PreferencesMigrations.upgradeColumnPreferences(prefs);\n\n        verify(prefs).putStringList(JabRefPreferences.COLUMN_NAMES, updatedNames);\n        verify(prefs).putStringList(JabRefPreferences.COLUMN_WIDTHS, updatedWidths);\n    }\n","date":"2019-11-28 03:46:22","endLine":149,"groupId":"8248","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testUpgradeColumnPreferencesFromWithoutTypes","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/b2/9a4dbbe1dd6cbd2f6a96c663d9b89b9a09b308.src","preCode":"    void testUpgradeColumnPreferencesFromWithoutTypes() {\n        List<String> columnNames = Arrays.asList(\"entrytype\", \"author/editor\", \"title\", \"year\", \"journal/booktitle\", \"bibtexkey\", \"printed\");\n        List<String> columnWidths = Arrays.asList(\"75\", \"300\", \"470\", \"60\", \"130\", \"100\", \"30\");\n        List<String> updatedNames = Arrays.asList(\"groups\", \"files\", \"linked_id\", \"field:entrytype\", \"field:author/editor\", \"field:title\", \"field:year\", \"field:journal/booktitle\", \"field:bibtexkey\", \"special:printed\");\n        List<String> updatedWidths = Arrays.asList(\"28\", \"28\", \"28\", \"75\", \"300\", \"470\", \"60\", \"130\", \"100\", \"30\");\n\n        when(prefs.getStringList(JabRefPreferences.COLUMN_NAMES)).thenReturn(columnNames);\n        when(prefs.getStringList(JabRefPreferences.COLUMN_WIDTHS)).thenReturn(columnWidths);\n\n        PreferencesMigrations.upgradeColumnPreferences(prefs);\n\n        verify(prefs).putStringList(JabRefPreferences.COLUMN_NAMES, updatedNames);\n        verify(prefs).putStringList(JabRefPreferences.COLUMN_WIDTHS, updatedWidths);\n    }\n","realPath":"src/test/java/org/jabref/migrations/PreferencesMigrationsTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":136,"status":"MB"}],"commitId":"c59f8c83e75e1ca9a84d934e0cee7611d2011f4e","commitMessage":"@@@Improve column preference migration (#5670)\n\n","date":"2019-11-28 03:46:22","modifiedFileCount":"4","status":"M","submitter":"Tobias Diez"},{"authorTime":"2019-12-17 01:13:58","codes":[{"authorDate":"2019-11-28 03:46:22","commitOrder":3,"curCode":"    void testUpgradeColumnPreferencesAlreadyMigrated() {\n        List<String> columnNames = Arrays.asList(\"entrytype\", \"author/editor\", \"title\", \"year\", \"journal/booktitle\", \"bibtexkey\", \"printed\");\n        List<String> columnWidths = Arrays.asList(\"75\", \"300\", \"470\", \"60\", \"130\", \"100\", \"30\");\n\n        when(prefs.getStringList(JabRefPreferences.COLUMN_NAMES)).thenReturn(columnNames);\n        when(prefs.getStringList(JabRefPreferences.COLUMN_WIDTHS)).thenReturn(columnWidths);\n\n        PreferencesMigrations.upgradeColumnPreferences(prefs);\n\n        verify(prefs, never()).put(JabRefPreferences.COLUMN_NAMES, \"anyString\");\n        verify(prefs, never()).put(JabRefPreferences.COLUMN_WIDTHS, \"anyString\");\n    }\n","date":"2019-11-28 03:46:22","endLine":133,"groupId":"10157","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testUpgradeColumnPreferencesAlreadyMigrated","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/b2/9a4dbbe1dd6cbd2f6a96c663d9b89b9a09b308.src","preCode":"    void testUpgradeColumnPreferencesAlreadyMigrated() {\n        List<String> columnNames = Arrays.asList(\"entrytype\", \"author/editor\", \"title\", \"year\", \"journal/booktitle\", \"bibtexkey\", \"printed\");\n        List<String> columnWidths = Arrays.asList(\"75\", \"300\", \"470\", \"60\", \"130\", \"100\", \"30\");\n\n        when(prefs.getStringList(JabRefPreferences.COLUMN_NAMES)).thenReturn(columnNames);\n        when(prefs.getStringList(JabRefPreferences.COLUMN_WIDTHS)).thenReturn(columnWidths);\n\n        PreferencesMigrations.upgradeColumnPreferences(prefs);\n\n        verify(prefs, never()).put(JabRefPreferences.COLUMN_NAMES, \"anyString\");\n        verify(prefs, never()).put(JabRefPreferences.COLUMN_WIDTHS, \"anyString\");\n    }\n","realPath":"src/test/java/org/jabref/migrations/PreferencesMigrationsTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":122,"status":"N"},{"authorDate":"2019-12-17 01:13:58","commitOrder":3,"curCode":"    void testUpgradeColumnPreferencesFromWithoutTypes() {\n        List<String> columnNames = Arrays.asList(\"entrytype\", \"author/editor\", \"title\", \"year\", \"journal/booktitle\", \"bibtexkey\", \"printed\");\n        List<String> columnWidths = Arrays.asList(\"75\", \"300\", \"470\", \"60\", \"130\", \"100\", \"30\");\n        List<String> updatedNames = Arrays.asList(\"groups\", \"files\", \"linked_id\", \"field:entrytype\", \"field:author/editor\", \"field:title\", \"field:year\", \"field:journal/booktitle\", \"field:bibtexkey\", \"special:printed\");\n        List<String> updatedWidths = Arrays.asList(\"28\", \"28\", \"28\", \"75\", \"300\", \"470\", \"60\", \"130\", \"100\", \"30\");\n        List<String> newSortTypes = Arrays.asList(\"ASCENDING\",\"ASCENDING\",\"ASCENDING\",\"ASCENDING\",\"ASCENDING\",\"ASCENDING\",\"ASCENDING\",\"ASCENDING\",\"ASCENDING\",\"ASCENDING\");\n\n        when(prefs.getStringList(JabRefPreferences.COLUMN_NAMES)).thenReturn(columnNames);\n        when(prefs.getStringList(JabRefPreferences.COLUMN_WIDTHS)).thenReturn(columnWidths);\n\n        PreferencesMigrations.upgradeColumnPreferences(prefs);\n\n        verify(prefs).putStringList(JabRefPreferences.COLUMN_NAMES, updatedNames);\n        verify(prefs).putStringList(JabRefPreferences.COLUMN_WIDTHS, updatedWidths);\n        verify(prefs).putStringList(JabRefPreferences.COLUMN_SORT_TYPES, newSortTypes);\n    }\n","date":"2019-12-17 01:13:58","endLine":151,"groupId":"8248","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testUpgradeColumnPreferencesFromWithoutTypes","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/95/0dc132d47dba87982c2662328cfba83db8fbd3.src","preCode":"    void testUpgradeColumnPreferencesFromWithoutTypes() {\n        List<String> columnNames = Arrays.asList(\"entrytype\", \"author/editor\", \"title\", \"year\", \"journal/booktitle\", \"bibtexkey\", \"printed\");\n        List<String> columnWidths = Arrays.asList(\"75\", \"300\", \"470\", \"60\", \"130\", \"100\", \"30\");\n        List<String> updatedNames = Arrays.asList(\"groups\", \"files\", \"linked_id\", \"field:entrytype\", \"field:author/editor\", \"field:title\", \"field:year\", \"field:journal/booktitle\", \"field:bibtexkey\", \"special:printed\");\n        List<String> updatedWidths = Arrays.asList(\"28\", \"28\", \"28\", \"75\", \"300\", \"470\", \"60\", \"130\", \"100\", \"30\");\n\n        when(prefs.getStringList(JabRefPreferences.COLUMN_NAMES)).thenReturn(columnNames);\n        when(prefs.getStringList(JabRefPreferences.COLUMN_WIDTHS)).thenReturn(columnWidths);\n\n        PreferencesMigrations.upgradeColumnPreferences(prefs);\n\n        verify(prefs).putStringList(JabRefPreferences.COLUMN_NAMES, updatedNames);\n        verify(prefs).putStringList(JabRefPreferences.COLUMN_WIDTHS, updatedWidths);\n    }\n","realPath":"src/test/java/org/jabref/migrations/PreferencesMigrationsTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":136,"status":"M"}],"commitId":"b2c40612a2c60685555f35af71f5801391a58b4b","commitMessage":"@@@Persistent column sortorder (#5730)\n\n* Reworked persistent column sort order\n\n* Fixes storing of the correct value\n\n* Refactored for simplicity.  fixed hardwired icon-column width.  added JavaDoc.  added test\n\n* Fixed some comments and added entry in CHANGELOG.md\n\n* Spelling\n\n* Changed datatype in migragtions.  added comment\n\n* Refactored ICON_COLUMNS from ArrayList to EnumSet\n","date":"2019-12-17 01:13:58","modifiedFileCount":"10","status":"M","submitter":"Carl Christian Snethlage"},{"authorTime":"2020-09-08 21:34:34","codes":[{"authorDate":"2020-09-08 21:34:34","commitOrder":4,"curCode":"    void testUpgradeColumnPreferencesAlreadyMigrated() {\n        List<String> columnNames = Arrays.asList(\"entrytype\", \"author/editor\", \"title\", \"year\", \"journal/booktitle\", \"citationkey\", \"printed\");\n        List<String> columnWidths = Arrays.asList(\"75\", \"300\", \"470\", \"60\", \"130\", \"100\", \"30\");\n\n        when(prefs.getStringList(JabRefPreferences.COLUMN_NAMES)).thenReturn(columnNames);\n        when(prefs.getStringList(JabRefPreferences.COLUMN_WIDTHS)).thenReturn(columnWidths);\n\n        PreferencesMigrations.upgradeColumnPreferences(prefs);\n\n        verify(prefs, never()).put(JabRefPreferences.COLUMN_NAMES, \"anyString\");\n        verify(prefs, never()).put(JabRefPreferences.COLUMN_WIDTHS, \"anyString\");\n    }\n","date":"2020-09-08 21:34:34","endLine":204,"groupId":"10866","id":5,"instanceNumber":1,"isCurCommit":1,"methodName":"testUpgradeColumnPreferencesAlreadyMigrated","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/2a/6f3cfb482c71b22e334b350d113444a4b9a8ab.src","preCode":"    void testUpgradeColumnPreferencesAlreadyMigrated() {\n        List<String> columnNames = Arrays.asList(\"entrytype\", \"author/editor\", \"title\", \"year\", \"journal/booktitle\", \"bibtexkey\", \"printed\");\n        List<String> columnWidths = Arrays.asList(\"75\", \"300\", \"470\", \"60\", \"130\", \"100\", \"30\");\n\n        when(prefs.getStringList(JabRefPreferences.COLUMN_NAMES)).thenReturn(columnNames);\n        when(prefs.getStringList(JabRefPreferences.COLUMN_WIDTHS)).thenReturn(columnWidths);\n\n        PreferencesMigrations.upgradeColumnPreferences(prefs);\n\n        verify(prefs, never()).put(JabRefPreferences.COLUMN_NAMES, \"anyString\");\n        verify(prefs, never()).put(JabRefPreferences.COLUMN_WIDTHS, \"anyString\");\n    }\n","realPath":"src/test/java/org/jabref/migrations/PreferencesMigrationsTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":193,"status":"M"},{"authorDate":"2020-09-08 21:34:34","commitOrder":4,"curCode":"    void testUpgradeColumnPreferencesFromWithoutTypes() {\n        List<String> columnNames = Arrays.asList(\"entrytype\", \"author/editor\", \"title\", \"year\", \"journal/booktitle\", \"citationkey\", \"printed\");\n        List<String> columnWidths = Arrays.asList(\"75\", \"300\", \"470\", \"60\", \"130\", \"100\", \"30\");\n        List<String> updatedNames = Arrays.asList(\"groups\", \"files\", \"linked_id\", \"field:entrytype\", \"field:author/editor\", \"field:title\", \"field:year\", \"field:journal/booktitle\", \"field:citationkey\", \"special:printed\");\n        List<String> updatedWidths = Arrays.asList(\"28\", \"28\", \"28\", \"75\", \"300\", \"470\", \"60\", \"130\", \"100\", \"30\");\n        List<String> newSortTypes = Arrays.asList(\"ASCENDING\", \"ASCENDING\", \"ASCENDING\", \"ASCENDING\", \"ASCENDING\", \"ASCENDING\", \"ASCENDING\", \"ASCENDING\", \"ASCENDING\", \"ASCENDING\");\n\n        when(prefs.getStringList(JabRefPreferences.COLUMN_NAMES)).thenReturn(columnNames);\n        when(prefs.getStringList(JabRefPreferences.COLUMN_WIDTHS)).thenReturn(columnWidths);\n\n        PreferencesMigrations.upgradeColumnPreferences(prefs);\n\n        verify(prefs).putStringList(JabRefPreferences.COLUMN_NAMES, updatedNames);\n        verify(prefs).putStringList(JabRefPreferences.COLUMN_WIDTHS, updatedWidths);\n        verify(prefs).putStringList(JabRefPreferences.COLUMN_SORT_TYPES, newSortTypes);\n    }\n","date":"2020-09-08 21:34:34","endLine":222,"groupId":"10866","id":6,"instanceNumber":2,"isCurCommit":1,"methodName":"testUpgradeColumnPreferencesFromWithoutTypes","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/2a/6f3cfb482c71b22e334b350d113444a4b9a8ab.src","preCode":"    void testUpgradeColumnPreferencesFromWithoutTypes() {\n        List<String> columnNames = Arrays.asList(\"entrytype\", \"author/editor\", \"title\", \"year\", \"journal/booktitle\", \"bibtexkey\", \"printed\");\n        List<String> columnWidths = Arrays.asList(\"75\", \"300\", \"470\", \"60\", \"130\", \"100\", \"30\");\n        List<String> updatedNames = Arrays.asList(\"groups\", \"files\", \"linked_id\", \"field:entrytype\", \"field:author/editor\", \"field:title\", \"field:year\", \"field:journal/booktitle\", \"field:bibtexkey\", \"special:printed\");\n        List<String> updatedWidths = Arrays.asList(\"28\", \"28\", \"28\", \"75\", \"300\", \"470\", \"60\", \"130\", \"100\", \"30\");\n        List<String> newSortTypes = Arrays.asList(\"ASCENDING\", \"ASCENDING\", \"ASCENDING\", \"ASCENDING\", \"ASCENDING\", \"ASCENDING\", \"ASCENDING\", \"ASCENDING\", \"ASCENDING\", \"ASCENDING\");\n\n        when(prefs.getStringList(JabRefPreferences.COLUMN_NAMES)).thenReturn(columnNames);\n        when(prefs.getStringList(JabRefPreferences.COLUMN_WIDTHS)).thenReturn(columnWidths);\n\n        PreferencesMigrations.upgradeColumnPreferences(prefs);\n\n        verify(prefs).putStringList(JabRefPreferences.COLUMN_NAMES, updatedNames);\n        verify(prefs).putStringList(JabRefPreferences.COLUMN_WIDTHS, updatedWidths);\n        verify(prefs).putStringList(JabRefPreferences.COLUMN_SORT_TYPES, newSortTypes);\n    }\n","realPath":"src/test/java/org/jabref/migrations/PreferencesMigrationsTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":207,"status":"M"}],"commitId":"6dec1747d8a1c89f6c62fc1d1939d88411f17eba","commitMessage":"@@@Complete rebranding of `bibtexkey` as `citationkey` (#6875)\n\n","date":"2020-09-08 21:34:34","modifiedFileCount":"127","status":"M","submitter":"Tobias Diez"}]
