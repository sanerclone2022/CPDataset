[{"authorTime":"2017-02-17 05:41:47","codes":[{"authorDate":"2017-02-17 05:41:47","commitOrder":1,"curCode":"    public String format(String s) {\n\n        if (s == null || s.trim().isEmpty()) {\n            return \"\";\n        }\n        StringBuilder sb = new StringBuilder();\n\n        String[] authors = s.split(\"and\");\n\n        \r\n        for (int i = 0; i < authors.length; i++) {\n            \r\n            String[] author = authors[i].split(\",\");\n\n            \r\n            if (author.length < 2) { \r\n                \r\n                author = authors[i].split(\" \");\n                \r\n                String name;\n                String surname;\n\n                if (author.length == 1) {\r\n                    sb.append(author[0].trim().toUpperCase());\n\n                } else if (author.length == 2) {\r\n                    \r\n                    name = author[0].trim();\n                    \r\n                    surname = author[1].trim().toUpperCase();\n\n                    \r\n                    sb.append(surname);\n                    sb.append(\", \");\n                    sb.append(name);\n\n                } else if (author.length == 3) {\r\n                    \r\n                    name = author[0].trim();\n                    \r\n                    surname = author[1].trim().toUpperCase() + ' ' + author[2].trim().toUpperCase();\n\n                    \r\n                    sb.append(surname);\n                    sb.append(\", \");\n                    sb.append(name);\n\n                } else if (author.length == 4) {\r\n                    \r\n                    name = author[0].trim() + ' ' + author[1].trim();\n                    \r\n                    surname = author[2].trim().toUpperCase() + ' ' + author[3].trim().toUpperCase();\n\n                    \r\n                    sb.append(surname);\n                    sb.append(\", \");\n                    sb.append(name);\n                }\n\n            } else { \r\n                \r\n                String surname = author[0].trim().toUpperCase();\n                \r\n                String name = author[1].trim();\n                \r\n                sb.append(surname);\n                sb.append(\", \");\n                sb.append(name);\n            }\n            if (i < authors.length - 2) { \r\n                sb.append(\", \");\n            } else if (i == authors.length - 2) {\r\n                sb.append(\" y \");\n            }\n        }\n        return sb.toString();\r\n    }\n","date":"2017-02-17 05:41:47","endLine":88,"groupId":"1555","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"format","params":"(Strings)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/82/13da802141d66c6e0b451148b0cc8bd5f3e859.src","preCode":"    public String format(String s) {\n\n        if (s == null || s.trim().isEmpty()) {\n            return \"\";\n        }\n        StringBuilder sb = new StringBuilder();\n\n        String[] authors = s.split(\"and\");\n\n        \r\n        for (int i = 0; i < authors.length; i++) {\n            \r\n            String[] author = authors[i].split(\",\");\n\n            \r\n            if (author.length < 2) { \r\n                \r\n                author = authors[i].split(\" \");\n                \r\n                String name;\n                String surname;\n\n                if (author.length == 1) {\r\n                    sb.append(author[0].trim().toUpperCase());\n\n                } else if (author.length == 2) {\r\n                    \r\n                    name = author[0].trim();\n                    \r\n                    surname = author[1].trim().toUpperCase();\n\n                    \r\n                    sb.append(surname);\n                    sb.append(\", \");\n                    sb.append(name);\n\n                } else if (author.length == 3) {\r\n                    \r\n                    name = author[0].trim();\n                    \r\n                    surname = author[1].trim().toUpperCase() + ' ' + author[2].trim().toUpperCase();\n\n                    \r\n                    sb.append(surname);\n                    sb.append(\", \");\n                    sb.append(name);\n\n                } else if (author.length == 4) {\r\n                    \r\n                    name = author[0].trim() + ' ' + author[1].trim();\n                    \r\n                    surname = author[2].trim().toUpperCase() + ' ' + author[3].trim().toUpperCase();\n\n                    \r\n                    sb.append(surname);\n                    sb.append(\", \");\n                    sb.append(name);\n                }\n\n            } else { \r\n                \r\n                String surname = author[0].trim().toUpperCase();\n                \r\n                String name = author[1].trim();\n                \r\n                sb.append(surname);\n                sb.append(\", \");\n                sb.append(name);\n            }\n            if (i < authors.length - 2) { \r\n                sb.append(\", \");\n            } else if (i == authors.length - 2) {\r\n                sb.append(\" y \");\n            }\n        }\n        return sb.toString();\r\n    }\n","realPath":"src/main/java/org/jabref/logic/layout/format/Iso690NamesAuthors.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":12,"status":"B"},{"authorDate":"2017-02-17 05:41:47","commitOrder":1,"curCode":"    public String format(String s) {\n        if (s == null) {\n            return \"\";\n        }\n        StringBuilder sb = new StringBuilder();\n        String[] authors = AuthorList.fixAuthorLastNameFirst(s).split(\" and \");\n        for (int i = 0; i < authors.length; i++) {\n            sb.append(arg);\n            sb.append(\"  - \");\n            sb.append(authors[i]);\n            if (i < authors.length - 1) {\n                sb.append(OS.NEWLINE);\n            }\n        }\n        return sb.toString();\n    }\n","date":"2017-02-17 05:41:47","endLine":28,"groupId":"11482","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"format","params":"(Strings)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/f9/806cd5c62f0e117ad788458a28e8d3536ddb65.src","preCode":"    public String format(String s) {\n        if (s == null) {\n            return \"\";\n        }\n        StringBuilder sb = new StringBuilder();\n        String[] authors = AuthorList.fixAuthorLastNameFirst(s).split(\" and \");\n        for (int i = 0; i < authors.length; i++) {\n            sb.append(arg);\n            sb.append(\"  - \");\n            sb.append(authors[i]);\n            if (i < authors.length - 1) {\n                sb.append(OS.NEWLINE);\n            }\n        }\n        return sb.toString();\n    }\n","realPath":"src/main/java/org/jabref/logic/layout/format/RisAuthors.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":13,"status":"B"}],"commitId":"ebbeb1d249edf7134abf92d24c2031ae54d19881","commitMessage":"@@@Merge branch 'net-sf-to-org-jabref'\n","date":"2017-02-17 05:41:47","modifiedFileCount":"1","status":"B","submitter":"Oliver Kopp"},{"authorTime":"2017-02-17 05:41:47","codes":[{"authorDate":"2017-03-06 20:35:47","commitOrder":2,"curCode":"    public String format(String s) {\n\n        if (s == null || s.trim().isEmpty()) {\n            return \"\";\n        }\n        StringBuilder sb = new StringBuilder();\n\n        String[] authors = s.split(\"and\");\n\n        \r\n        for (int i = 0; i < authors.length; i++) {\n            \r\n            String[] author = authors[i].split(\",\");\n\n            \r\n            if (author.length < 2) { \r\n                \r\n                author = authors[i].split(\" \");\n                \r\n                String name;\n                String surname;\n\n                if (author.length == 1) {\r\n                    sb.append(author[0].trim().toUpperCase(Locale.ROOT));\n\n                } else if (author.length == 2) {\r\n                    \r\n                    name = author[0].trim();\n                    \r\n                    surname = author[1].trim().toUpperCase(Locale.ROOT);\n\n                    \r\n                    sb.append(surname);\n                    sb.append(\", \");\n                    sb.append(name);\n\n                } else if (author.length == 3) {\r\n                    \r\n                    name = author[0].trim();\n                    \r\n                    surname = author[1].trim().toUpperCase(Locale.ROOT) + ' ' + author[2].trim().toUpperCase(Locale.ROOT);\n\n                    \r\n                    sb.append(surname);\n                    sb.append(\", \");\n                    sb.append(name);\n\n                } else if (author.length == 4) {\r\n                    \r\n                    name = author[0].trim() + ' ' + author[1].trim();\n                    \r\n                    surname = author[2].trim().toUpperCase(Locale.ROOT) + ' ' + author[3].trim().toUpperCase(Locale.ROOT);\n\n                    \r\n                    sb.append(surname);\n                    sb.append(\", \");\n                    sb.append(name);\n                }\n\n            } else { \r\n                \r\n                String surname = author[0].trim().toUpperCase(Locale.ROOT);\n                \r\n                String name = author[1].trim();\n                \r\n                sb.append(surname);\n                sb.append(\", \");\n                sb.append(name);\n            }\n            if (i < authors.length - 2) { \r\n                sb.append(\", \");\n            } else if (i == authors.length - 2) {\r\n                sb.append(\" y \");\n            }\n        }\n        return sb.toString();\r\n    }\n","date":"2017-03-06 20:35:47","endLine":90,"groupId":"4654","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"format","params":"(Strings)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/41/a8278e8d0de02298c90e03af2f788e5714aaa4.src","preCode":"    public String format(String s) {\n\n        if (s == null || s.trim().isEmpty()) {\n            return \"\";\n        }\n        StringBuilder sb = new StringBuilder();\n\n        String[] authors = s.split(\"and\");\n\n        \r\n        for (int i = 0; i < authors.length; i++) {\n            \r\n            String[] author = authors[i].split(\",\");\n\n            \r\n            if (author.length < 2) { \r\n                \r\n                author = authors[i].split(\" \");\n                \r\n                String name;\n                String surname;\n\n                if (author.length == 1) {\r\n                    sb.append(author[0].trim().toUpperCase());\n\n                } else if (author.length == 2) {\r\n                    \r\n                    name = author[0].trim();\n                    \r\n                    surname = author[1].trim().toUpperCase();\n\n                    \r\n                    sb.append(surname);\n                    sb.append(\", \");\n                    sb.append(name);\n\n                } else if (author.length == 3) {\r\n                    \r\n                    name = author[0].trim();\n                    \r\n                    surname = author[1].trim().toUpperCase() + ' ' + author[2].trim().toUpperCase();\n\n                    \r\n                    sb.append(surname);\n                    sb.append(\", \");\n                    sb.append(name);\n\n                } else if (author.length == 4) {\r\n                    \r\n                    name = author[0].trim() + ' ' + author[1].trim();\n                    \r\n                    surname = author[2].trim().toUpperCase() + ' ' + author[3].trim().toUpperCase();\n\n                    \r\n                    sb.append(surname);\n                    sb.append(\", \");\n                    sb.append(name);\n                }\n\n            } else { \r\n                \r\n                String surname = author[0].trim().toUpperCase();\n                \r\n                String name = author[1].trim();\n                \r\n                sb.append(surname);\n                sb.append(\", \");\n                sb.append(name);\n            }\n            if (i < authors.length - 2) { \r\n                sb.append(\", \");\n            } else if (i == authors.length - 2) {\r\n                sb.append(\" y \");\n            }\n        }\n        return sb.toString();\r\n    }\n","realPath":"src/main/java/org/jabref/logic/layout/format/Iso690NamesAuthors.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":14,"status":"M"},{"authorDate":"2017-02-17 05:41:47","commitOrder":2,"curCode":"    public String format(String s) {\n        if (s == null) {\n            return \"\";\n        }\n        StringBuilder sb = new StringBuilder();\n        String[] authors = AuthorList.fixAuthorLastNameFirst(s).split(\" and \");\n        for (int i = 0; i < authors.length; i++) {\n            sb.append(arg);\n            sb.append(\"  - \");\n            sb.append(authors[i]);\n            if (i < authors.length - 1) {\n                sb.append(OS.NEWLINE);\n            }\n        }\n        return sb.toString();\n    }\n","date":"2017-02-17 05:41:47","endLine":28,"groupId":"11482","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"format","params":"(Strings)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/f9/806cd5c62f0e117ad788458a28e8d3536ddb65.src","preCode":"    public String format(String s) {\n        if (s == null) {\n            return \"\";\n        }\n        StringBuilder sb = new StringBuilder();\n        String[] authors = AuthorList.fixAuthorLastNameFirst(s).split(\" and \");\n        for (int i = 0; i < authors.length; i++) {\n            sb.append(arg);\n            sb.append(\"  - \");\n            sb.append(authors[i]);\n            if (i < authors.length - 1) {\n                sb.append(OS.NEWLINE);\n            }\n        }\n        return sb.toString();\n    }\n","realPath":"src/main/java/org/jabref/logic/layout/format/RisAuthors.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":13,"status":"N"}],"commitId":"7a1b15abb58016b40e21a72124edf9da17cd08f2","commitMessage":"@@@Merge pull request #2584 from JabRef/locales\n\nAdded Locale.ROOT to toUpper/toLower Methods","date":"2017-03-06 20:35:47","modifiedFileCount":"63","status":"M","submitter":"Linus Dietz"},{"authorTime":"2017-02-17 05:41:47","codes":[{"authorDate":"2020-04-14 14:49:05","commitOrder":3,"curCode":"    public String format(String s) {\n        if (StringUtil.isBlank(s)) {\n            return \"\";\n        }\n        StringBuilder sb = new StringBuilder();\n\n        String[] authors = s.split(\"and\");\n\n        \r\n        for (int i = 0; i < authors.length; i++) {\n            \r\n            String[] author = authors[i].split(\",\");\n\n            \r\n            if (author.length < 2) { \r\n                \r\n                author = authors[i].split(\" \");\n                \r\n                String name;\n                String surname;\n\n                if (author.length == 1) { \r\n                    sb.append(author[0].trim().toUpperCase(Locale.ROOT));\n\n                } else if (author.length == 2) { \r\n                    \r\n                    name = author[0].trim();\n                    \r\n                    surname = author[1].trim().toUpperCase(Locale.ROOT);\n\n                    \r\n                    sb.append(surname);\n                    sb.append(\", \");\n                    sb.append(name);\n\n                } else if (author.length == 3) { \r\n                    \r\n                    name = author[0].trim();\n                    \r\n                    surname = author[1].trim().toUpperCase(Locale.ROOT) + ' ' + author[2].trim().toUpperCase(Locale.ROOT);\n\n                    \r\n                    sb.append(surname);\n                    sb.append(\", \");\n                    sb.append(name);\n\n                } else if (author.length == 4) { \r\n                    \r\n                    name = author[0].trim() + ' ' + author[1].trim();\n                    \r\n                    surname = author[2].trim().toUpperCase(Locale.ROOT) + ' ' + author[3].trim().toUpperCase(Locale.ROOT);\n\n                    \r\n                    sb.append(surname);\n                    sb.append(\", \");\n                    sb.append(name);\n                }\n\n            } else { \r\n                \r\n                String surname = author[0].trim().toUpperCase(Locale.ROOT);\n                \r\n                String name = author[1].trim();\n                \r\n                sb.append(surname);\n                sb.append(\", \");\n                sb.append(name);\n            }\n            if (i < authors.length - 2) { \r\n                sb.append(\", \");\n            } else if (i == authors.length - 2) { \r\n                sb.append(\" y \");\n            }\n        }\n        return sb.toString(); \r\n    }\n","date":"2020-04-14 14:49:05","endLine":86,"groupId":"10988","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"format","params":"(Strings)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/99/fb842f052a0b3e800cfd503fe40c2b572a5a6b.src","preCode":"    public String format(String s) {\n\n        if (s == null || s.trim().isEmpty()) {\n            return \"\";\n        }\n        StringBuilder sb = new StringBuilder();\n\n        String[] authors = s.split(\"and\");\n\n        \r\n        for (int i = 0; i < authors.length; i++) {\n            \r\n            String[] author = authors[i].split(\",\");\n\n            \r\n            if (author.length < 2) { \r\n                \r\n                author = authors[i].split(\" \");\n                \r\n                String name;\n                String surname;\n\n                if (author.length == 1) { \r\n                    sb.append(author[0].trim().toUpperCase(Locale.ROOT));\n\n                } else if (author.length == 2) { \r\n                    \r\n                    name = author[0].trim();\n                    \r\n                    surname = author[1].trim().toUpperCase(Locale.ROOT);\n\n                    \r\n                    sb.append(surname);\n                    sb.append(\", \");\n                    sb.append(name);\n\n                } else if (author.length == 3) { \r\n                    \r\n                    name = author[0].trim();\n                    \r\n                    surname = author[1].trim().toUpperCase(Locale.ROOT) + ' ' + author[2].trim().toUpperCase(Locale.ROOT);\n\n                    \r\n                    sb.append(surname);\n                    sb.append(\", \");\n                    sb.append(name);\n\n                } else if (author.length == 4) { \r\n                    \r\n                    name = author[0].trim() + ' ' + author[1].trim();\n                    \r\n                    surname = author[2].trim().toUpperCase(Locale.ROOT) + ' ' + author[3].trim().toUpperCase(Locale.ROOT);\n\n                    \r\n                    sb.append(surname);\n                    sb.append(\", \");\n                    sb.append(name);\n                }\n\n            } else { \r\n                \r\n                String surname = author[0].trim().toUpperCase(Locale.ROOT);\n                \r\n                String name = author[1].trim();\n                \r\n                sb.append(surname);\n                sb.append(\", \");\n                sb.append(name);\n            }\n            if (i < authors.length - 2) { \r\n                sb.append(\", \");\n            } else if (i == authors.length - 2) { \r\n                sb.append(\" y \");\n            }\n        }\n        return sb.toString();\r\n    }\n","realPath":"src/main/java/org/jabref/logic/layout/format/Iso690NamesAuthors.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":11,"status":"M"},{"authorDate":"2017-02-17 05:41:47","commitOrder":3,"curCode":"    public String format(String s) {\n        if (s == null) {\n            return \"\";\n        }\n        StringBuilder sb = new StringBuilder();\n        String[] authors = AuthorList.fixAuthorLastNameFirst(s).split(\" and \");\n        for (int i = 0; i < authors.length; i++) {\n            sb.append(arg);\n            sb.append(\"  - \");\n            sb.append(authors[i]);\n            if (i < authors.length - 1) {\n                sb.append(OS.NEWLINE);\n            }\n        }\n        return sb.toString();\n    }\n","date":"2017-02-17 05:41:47","endLine":28,"groupId":"10988","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"format","params":"(Strings)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/f9/806cd5c62f0e117ad788458a28e8d3536ddb65.src","preCode":"    public String format(String s) {\n        if (s == null) {\n            return \"\";\n        }\n        StringBuilder sb = new StringBuilder();\n        String[] authors = AuthorList.fixAuthorLastNameFirst(s).split(\" and \");\n        for (int i = 0; i < authors.length; i++) {\n            sb.append(arg);\n            sb.append(\"  - \");\n            sb.append(authors[i]);\n            if (i < authors.length - 1) {\n                sb.append(OS.NEWLINE);\n            }\n        }\n        return sb.toString();\n    }\n","realPath":"src/main/java/org/jabref/logic/layout/format/RisAuthors.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":13,"status":"N"}],"commitId":"940ef9d3be3f3877035fbcf3da6b637b53944c40","commitMessage":"@@@Refine checkstyle rules (#6283)\n\n- Add (and apply) checkstyle rules for\n  - correct spacing (especalliy // space-after-comment-marker)\n  - } else if { (<-- in one line)\n  - no two empty lines\n  - @deprecation JavaDoc\n  - some coding practices\n- Fix HTML syntax of JavaDoc comments\n- Remove CSS class comment syntax in IconTheme class\n- Remove deprecated method BibEntry#getCiteKey()","date":"2020-04-14 14:49:05","modifiedFileCount":"270","status":"M","submitter":"Oliver Kopp"}]
