[{"authorTime":"2017-02-17 05:41:47","codes":[{"authorDate":"2017-02-17 05:41:47","commitOrder":1,"curCode":"    public void testFormat() {\n        LayoutFormatter a = new AuthorLastFirstAbbrCommas();\n\n        \r\n        Assert.assertEquals(\"\", a.format(\"\"));\n\n        \r\n        Assert.assertEquals(\"Someone, V. S.\", a.format(\"Van Something Someone\"));\n\n        \r\n        Assert.assertEquals(\"von Neumann, J. and Black Brown, P.\", a\n                .format(\"John von Neumann and Black Brown, Peter\"));\n\n        \r\n        Assert.assertEquals(\"von Neumann, J., Smith, J. and Black Brown, P.\", a\n                .format(\"von Neumann, John and Smith, John and Black Brown, Peter\"));\n\n        Assert.assertEquals(\"von Neumann, J., Smith, J. and Black Brown, P.\", a\n                .format(\"John von Neumann and John Smith and Black Brown, Peter\"));\n\n    }\n","date":"2017-02-17 05:41:47","endLine":34,"groupId":"3334","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testFormat","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/24/ffd914b5aeabb37c4ee3a45e065055d1e00c78.src","preCode":"    public void testFormat() {\n        LayoutFormatter a = new AuthorLastFirstAbbrCommas();\n\n        \r\n        Assert.assertEquals(\"\", a.format(\"\"));\n\n        \r\n        Assert.assertEquals(\"Someone, V. S.\", a.format(\"Van Something Someone\"));\n\n        \r\n        Assert.assertEquals(\"von Neumann, J. and Black Brown, P.\", a\n                .format(\"John von Neumann and Black Brown, Peter\"));\n\n        \r\n        Assert.assertEquals(\"von Neumann, J., Smith, J. and Black Brown, P.\", a\n                .format(\"von Neumann, John and Smith, John and Black Brown, Peter\"));\n\n        Assert.assertEquals(\"von Neumann, J., Smith, J. and Black Brown, P.\", a\n                .format(\"John von Neumann and John Smith and Black Brown, Peter\"));\n\n    }\n","realPath":"src/test/java/org/jabref/logic/layout/format/AuthorLastFirstAbbrCommasTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":14,"status":"B"},{"authorDate":"2017-02-17 05:41:47","commitOrder":1,"curCode":"    public void testFormat() {\n        LayoutFormatter a = new AuthorLastFirstAbbrOxfordCommas();\n\n        \r\n        Assert.assertEquals(\"\", a.format(\"\"));\n\n        \r\n        Assert.assertEquals(\"Someone, V. S.\", a.format(\"Van Something Someone\"));\n\n        \r\n        Assert.assertEquals(\"von Neumann, J. and Black Brown, P.\", a\n                .format(\"John von Neumann and Black Brown, Peter\"));\n\n        \r\n        Assert.assertEquals(\"von Neumann, J., Smith, J., and Black Brown, P.\", a\n                .format(\"von Neumann, John and Smith, John and Black Brown, Peter\"));\n\n        Assert.assertEquals(\"von Neumann, J., Smith, J., and Black Brown, P.\", a\n                .format(\"John von Neumann and John Smith and Black Brown, Peter\"));\n    }\n","date":"2017-02-17 05:41:47","endLine":33,"groupId":"3334","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testFormat","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/44/4bd84e3694614902a3d4127ac7e6c9f5c33fc1.src","preCode":"    public void testFormat() {\n        LayoutFormatter a = new AuthorLastFirstAbbrOxfordCommas();\n\n        \r\n        Assert.assertEquals(\"\", a.format(\"\"));\n\n        \r\n        Assert.assertEquals(\"Someone, V. S.\", a.format(\"Van Something Someone\"));\n\n        \r\n        Assert.assertEquals(\"von Neumann, J. and Black Brown, P.\", a\n                .format(\"John von Neumann and Black Brown, Peter\"));\n\n        \r\n        Assert.assertEquals(\"von Neumann, J., Smith, J., and Black Brown, P.\", a\n                .format(\"von Neumann, John and Smith, John and Black Brown, Peter\"));\n\n        Assert.assertEquals(\"von Neumann, J., Smith, J., and Black Brown, P.\", a\n                .format(\"John von Neumann and John Smith and Black Brown, Peter\"));\n    }\n","realPath":"src/test/java/org/jabref/logic/layout/format/AuthorLastFirstAbbrOxfordCommasTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":14,"status":"B"}],"commitId":"ebbeb1d249edf7134abf92d24c2031ae54d19881","commitMessage":"@@@Merge branch 'net-sf-to-org-jabref'\n","date":"2017-02-17 05:41:47","modifiedFileCount":"1","status":"B","submitter":"Oliver Kopp"},{"authorTime":"2018-02-12 00:05:54","codes":[{"authorDate":"2018-02-12 00:05:54","commitOrder":2,"curCode":"    public void testFormat() {\n        LayoutFormatter a = new AuthorLastFirstAbbrCommas();\n\n        \r\n        assertEquals(\"\", a.format(\"\"));\n\n        \r\n        assertEquals(\"Someone, V. S.\", a.format(\"Van Something Someone\"));\n\n        \r\n        assertEquals(\"von Neumann, J. and Black Brown, P.\", a\n                .format(\"John von Neumann and Black Brown, Peter\"));\n\n        \r\n        assertEquals(\"von Neumann, J., Smith, J. and Black Brown, P.\", a\n                .format(\"von Neumann, John and Smith, John and Black Brown, Peter\"));\n\n        assertEquals(\"von Neumann, J., Smith, J. and Black Brown, P.\", a\n                .format(\"John von Neumann and John Smith and Black Brown, Peter\"));\n\n    }\n","date":"2018-02-12 00:05:54","endLine":34,"groupId":"10124","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testFormat","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/63/faf76cd3751025c56cc10d951fe2e27a424919.src","preCode":"    public void testFormat() {\n        LayoutFormatter a = new AuthorLastFirstAbbrCommas();\n\n        \r\n        Assert.assertEquals(\"\", a.format(\"\"));\n\n        \r\n        Assert.assertEquals(\"Someone, V. S.\", a.format(\"Van Something Someone\"));\n\n        \r\n        Assert.assertEquals(\"von Neumann, J. and Black Brown, P.\", a\n                .format(\"John von Neumann and Black Brown, Peter\"));\n\n        \r\n        Assert.assertEquals(\"von Neumann, J., Smith, J. and Black Brown, P.\", a\n                .format(\"von Neumann, John and Smith, John and Black Brown, Peter\"));\n\n        Assert.assertEquals(\"von Neumann, J., Smith, J. and Black Brown, P.\", a\n                .format(\"John von Neumann and John Smith and Black Brown, Peter\"));\n\n    }\n","realPath":"src/test/java/org/jabref/logic/layout/format/AuthorLastFirstAbbrCommasTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":14,"status":"M"},{"authorDate":"2018-02-12 00:05:54","commitOrder":2,"curCode":"    public void testFormat() {\n        LayoutFormatter a = new AuthorLastFirstAbbrOxfordCommas();\n\n        \r\n        assertEquals(\"\", a.format(\"\"));\n\n        \r\n        assertEquals(\"Someone, V. S.\", a.format(\"Van Something Someone\"));\n\n        \r\n        assertEquals(\"von Neumann, J. and Black Brown, P.\", a\n                .format(\"John von Neumann and Black Brown, Peter\"));\n\n        \r\n        assertEquals(\"von Neumann, J., Smith, J., and Black Brown, P.\", a\n                .format(\"von Neumann, John and Smith, John and Black Brown, Peter\"));\n\n        assertEquals(\"von Neumann, J., Smith, J., and Black Brown, P.\", a\n                .format(\"John von Neumann and John Smith and Black Brown, Peter\"));\n    }\n","date":"2018-02-12 00:05:54","endLine":33,"groupId":"10124","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testFormat","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/e3/ada4bd62ab5cf476dfa618b713185254d4e4de.src","preCode":"    public void testFormat() {\n        LayoutFormatter a = new AuthorLastFirstAbbrOxfordCommas();\n\n        \r\n        Assert.assertEquals(\"\", a.format(\"\"));\n\n        \r\n        Assert.assertEquals(\"Someone, V. S.\", a.format(\"Van Something Someone\"));\n\n        \r\n        Assert.assertEquals(\"von Neumann, J. and Black Brown, P.\", a\n                .format(\"John von Neumann and Black Brown, Peter\"));\n\n        \r\n        Assert.assertEquals(\"von Neumann, J., Smith, J., and Black Brown, P.\", a\n                .format(\"von Neumann, John and Smith, John and Black Brown, Peter\"));\n\n        Assert.assertEquals(\"von Neumann, J., Smith, J., and Black Brown, P.\", a\n                .format(\"John von Neumann and John Smith and Black Brown, Peter\"));\n    }\n","realPath":"src/test/java/org/jabref/logic/layout/format/AuthorLastFirstAbbrOxfordCommasTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":14,"status":"M"}],"commitId":"1cef92447c4ae65ebe28d94cf9acf708861bb67b","commitMessage":"@@@Merge pull request #3711 from JabRef/junit5\n\nmigrate majority of tests to junit5","date":"2018-02-12 00:05:54","modifiedFileCount":"244","status":"M","submitter":"Oliver Kopp"}]
