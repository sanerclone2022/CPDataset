[{"authorTime":"2019-11-14 07:17:00","codes":[{"authorDate":"2019-11-14 07:17:00","commitOrder":1,"curCode":"    public void allFieldsPresentDefault() {\n        BibEntry e = new BibEntry(StandardEntryType.Article);\n        e.setField(StandardField.AUTHOR, \"abc\");\n        e.setField(StandardField.TITLE, \"abc\");\n        e.setField(StandardField.JOURNAL, \"abc\");\n\n        List<OrFields> requiredFields = new ArrayList<>();\n        requiredFields.add(new OrFields(StandardField.AUTHOR));\n        requiredFields.add(new OrFields(StandardField.TITLE));\n        assertTrue(e.allFieldsPresent(requiredFields, null));\n\n        requiredFields.add(new OrFields(StandardField.YEAR));\n        assertFalse(e.allFieldsPresent(requiredFields, null));\n    }\n","date":"2019-11-14 07:17:00","endLine":291,"groupId":"1134","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"allFieldsPresentDefault","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/dd/fe5dab35c05231361455fc777b66f993ebbb4f.src","preCode":"    public void allFieldsPresentDefault() {\n        BibEntry e = new BibEntry(StandardEntryType.Article);\n        e.setField(StandardField.AUTHOR, \"abc\");\n        e.setField(StandardField.TITLE, \"abc\");\n        e.setField(StandardField.JOURNAL, \"abc\");\n\n        List<OrFields> requiredFields = new ArrayList<>();\n        requiredFields.add(new OrFields(StandardField.AUTHOR));\n        requiredFields.add(new OrFields(StandardField.TITLE));\n        assertTrue(e.allFieldsPresent(requiredFields, null));\n\n        requiredFields.add(new OrFields(StandardField.YEAR));\n        assertFalse(e.allFieldsPresent(requiredFields, null));\n    }\n","realPath":"src/test/java/org/jabref/model/entry/BibEntryTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":278,"status":"B"},{"authorDate":"2019-11-14 07:17:00","commitOrder":1,"curCode":"    public void allFieldsPresentOr() {\n        BibEntry e = new BibEntry(StandardEntryType.Article);\n        e.setField(StandardField.AUTHOR, \"abc\");\n        e.setField(StandardField.TITLE, \"abc\");\n        e.setField(StandardField.JOURNAL, \"abc\");\n\n        List<OrFields> requiredFields = new ArrayList<>();\n        requiredFields.add(new OrFields(StandardField.JOURNAL, StandardField.YEAR));\n        assertTrue(e.allFieldsPresent(requiredFields, null));\n\n        requiredFields.add(new OrFields(StandardField.YEAR, StandardField.ADDRESS));\n        assertFalse(e.allFieldsPresent(requiredFields, null));\n    }\n","date":"2019-11-14 07:17:00","endLine":306,"groupId":"1135","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"allFieldsPresentOr","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/dd/fe5dab35c05231361455fc777b66f993ebbb4f.src","preCode":"    public void allFieldsPresentOr() {\n        BibEntry e = new BibEntry(StandardEntryType.Article);\n        e.setField(StandardField.AUTHOR, \"abc\");\n        e.setField(StandardField.TITLE, \"abc\");\n        e.setField(StandardField.JOURNAL, \"abc\");\n\n        List<OrFields> requiredFields = new ArrayList<>();\n        requiredFields.add(new OrFields(StandardField.JOURNAL, StandardField.YEAR));\n        assertTrue(e.allFieldsPresent(requiredFields, null));\n\n        requiredFields.add(new OrFields(StandardField.YEAR, StandardField.ADDRESS));\n        assertFalse(e.allFieldsPresent(requiredFields, null));\n    }\n","realPath":"src/test/java/org/jabref/model/entry/BibEntryTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":294,"status":"B"}],"commitId":"19393bf1d00e4e0028436dc7b364fe3b7a7bfd81","commitMessage":"@@@Unify month field formatting in test bib files (#5578)\n\n* Unify month field formatting in test bib files (fixes JabRef/jabref#5116)\n\n* Fix month creation. #name# is really used within JabRef to determine a BibTeX string content (and not plain text)\n\n- Fix tests\n- Sort BibEntryTests: default constructor.  keywords.  all others\n- Fix name of \"CanonicalBibEntry\" (from CanonicalBibtexEntry)\n- Revert \"fix jabref format of month\".  this also reverts commit 77c25ca0f1702991493cf37278a4cedad0d984a4.\n- Format some code\n- Add comments\n\n* Merge all BibEntry test classes into one\n","date":"2019-11-14 07:17:00","modifiedFileCount":"13","status":"B","submitter":"Oliver Kopp"},{"authorTime":"2020-04-12 19:37:35","codes":[{"authorDate":"2020-04-12 19:37:35","commitOrder":2,"curCode":"    void allFieldsPresentDefault() {\n        BibEntry e = new BibEntry(StandardEntryType.Article);\n        e.setField(StandardField.AUTHOR, \"abc\");\n        e.setField(StandardField.TITLE, \"abc\");\n        e.setField(StandardField.JOURNAL, \"abc\");\n\n        List<OrFields> requiredFields = new ArrayList<>();\n        requiredFields.add(new OrFields(StandardField.AUTHOR));\n        requiredFields.add(new OrFields(StandardField.TITLE));\n        assertTrue(e.allFieldsPresent(requiredFields, null));\n\n        requiredFields.add(new OrFields(StandardField.YEAR));\n        assertFalse(e.allFieldsPresent(requiredFields, null));\n    }\n","date":"2020-04-12 19:37:35","endLine":305,"groupId":"10796","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"allFieldsPresentDefault","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/45/dbeb69470328c4cf2a291d95eb3736a83ee3c3.src","preCode":"    public void allFieldsPresentDefault() {\n        BibEntry e = new BibEntry(StandardEntryType.Article);\n        e.setField(StandardField.AUTHOR, \"abc\");\n        e.setField(StandardField.TITLE, \"abc\");\n        e.setField(StandardField.JOURNAL, \"abc\");\n\n        List<OrFields> requiredFields = new ArrayList<>();\n        requiredFields.add(new OrFields(StandardField.AUTHOR));\n        requiredFields.add(new OrFields(StandardField.TITLE));\n        assertTrue(e.allFieldsPresent(requiredFields, null));\n\n        requiredFields.add(new OrFields(StandardField.YEAR));\n        assertFalse(e.allFieldsPresent(requiredFields, null));\n    }\n","realPath":"src/test/java/org/jabref/model/entry/BibEntryTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":292,"status":"M"},{"authorDate":"2020-04-12 19:37:35","commitOrder":2,"curCode":"    void allFieldsPresentOr() {\n        BibEntry e = new BibEntry(StandardEntryType.Article);\n        e.setField(StandardField.AUTHOR, \"abc\");\n        e.setField(StandardField.TITLE, \"abc\");\n        e.setField(StandardField.JOURNAL, \"abc\");\n\n        List<OrFields> requiredFields = new ArrayList<>();\n        requiredFields.add(new OrFields(StandardField.JOURNAL, StandardField.YEAR));\n        assertTrue(e.allFieldsPresent(requiredFields, null));\n\n        requiredFields.add(new OrFields(StandardField.YEAR, StandardField.ADDRESS));\n        assertFalse(e.allFieldsPresent(requiredFields, null));\n    }\n","date":"2020-04-12 19:37:35","endLine":320,"groupId":"10796","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"allFieldsPresentOr","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/45/dbeb69470328c4cf2a291d95eb3736a83ee3c3.src","preCode":"    public void allFieldsPresentOr() {\n        BibEntry e = new BibEntry(StandardEntryType.Article);\n        e.setField(StandardField.AUTHOR, \"abc\");\n        e.setField(StandardField.TITLE, \"abc\");\n        e.setField(StandardField.JOURNAL, \"abc\");\n\n        List<OrFields> requiredFields = new ArrayList<>();\n        requiredFields.add(new OrFields(StandardField.JOURNAL, StandardField.YEAR));\n        assertTrue(e.allFieldsPresent(requiredFields, null));\n\n        requiredFields.add(new OrFields(StandardField.YEAR, StandardField.ADDRESS));\n        assertFalse(e.allFieldsPresent(requiredFields, null));\n    }\n","realPath":"src/test/java/org/jabref/model/entry/BibEntryTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":308,"status":"M"}],"commitId":"771af5dc2a45a2cfeeb48d1f2286424292238595","commitMessage":"@@@Improve performance (#6270)\n\n* Improve performance\n\n- Cache latex free field values for display in the main table\n- Only access preferences once for how to display names (instead of for every entry again)\n- Update search async only after 400ms without typing\n\n* Fix tests","date":"2020-04-12 19:37:35","modifiedFileCount":"9","status":"M","submitter":"Tobias Diez"}]
