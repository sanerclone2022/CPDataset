[{"authorTime":"2019-08-02 15:20:10","codes":[{"authorDate":"2019-08-24 19:09:34","commitOrder":2,"curCode":"    public boolean equals(Object o) {\n        if (this == o) {\n            return true;\n        }\n        if ((o == null) || (getClass() != o.getClass())) {\n            return false;\n        }\n        UnknownEntryType that = (UnknownEntryType) o;\n        return name.equals(that.name);\n    }\n","date":"2019-08-24 19:09:33","endLine":42,"groupId":"12652","id":1,"instanceNumber":1,"isCurCommit":1,"methodName":"equals","params":"(Objecto)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/6b/9d8682d1ccca79f983e9b57b0f57e792be3e0e.src","preCode":"    public boolean equals(Object o) {\n        if (this == o) {\n            return true;\n        }\n        if ((o == null) || (getClass() != o.getClass())) {\n            return false;\n        }\n        UnknownEntryType that = (UnknownEntryType) o;\n        return name.equals(that.name);\n    }\n","realPath":"src/main/java/org/jabref/model/entry/types/UnknownEntryType.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":33,"status":"B"},{"authorDate":"2019-08-02 15:20:10","commitOrder":2,"curCode":"    public boolean equals(Object o) {\n        if (this == o) {\n            return true;\n        }\n        if (o == null || getClass() != o.getClass()) {\n            return false;\n        }\n        BibEntryType that = (BibEntryType) o;\n        return type.equals(that.type) &&\n                requiredFields.equals(that.requiredFields) &&\n                fields.equals(that.fields);\n    }\n","date":"2019-08-02 15:20:10","endLine":124,"groupId":"167","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"equals","params":"(Objecto)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/da/3e3a6d27aa2b7bfa5e83959c69b15393d7d867.src","preCode":"    public boolean equals(Object o) {\n        if (this == o) {\n            return true;\n        }\n        if (o == null || getClass() != o.getClass()) {\n            return false;\n        }\n        BibEntryType that = (BibEntryType) o;\n        return type.equals(that.type) &&\n                requiredFields.equals(that.requiredFields) &&\n                fields.equals(that.fields);\n    }\n","realPath":"src/main/java/org/jabref/model/entry/BibEntryType.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":113,"status":"NB"}],"commitId":"b00fc22a0f2d08a7e3fb671cbec3dfd5e5eb6170","commitMessage":"@@@Fix lookup entry types in enums (#5209)\n\n* Fix lookup entry types in enums\n\nMake master work again!!!\n\n* fix checkstyle\n\n* fix checkstyle and fix type comparison to lower case\n\n* simplify remove generics\n","date":"2019-08-24 19:09:33","modifiedFileCount":"4","status":"M","submitter":"Christoph"},{"authorTime":"2020-07-01 23:18:08","codes":[{"authorDate":"2019-08-24 19:09:34","commitOrder":3,"curCode":"    public boolean equals(Object o) {\n        if (this == o) {\n            return true;\n        }\n        if ((o == null) || (getClass() != o.getClass())) {\n            return false;\n        }\n        UnknownEntryType that = (UnknownEntryType) o;\n        return name.equals(that.name);\n    }\n","date":"2019-08-24 19:09:33","endLine":42,"groupId":"101088","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"equals","params":"(Objecto)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/6b/9d8682d1ccca79f983e9b57b0f57e792be3e0e.src","preCode":"    public boolean equals(Object o) {\n        if (this == o) {\n            return true;\n        }\n        if ((o == null) || (getClass() != o.getClass())) {\n            return false;\n        }\n        UnknownEntryType that = (UnknownEntryType) o;\n        return name.equals(that.name);\n    }\n","realPath":"src/main/java/org/jabref/model/entry/types/UnknownEntryType.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":33,"status":"N"},{"authorDate":"2020-07-01 23:18:08","commitOrder":3,"curCode":"    public boolean equals(Object o) {\n        if (this == o) {\n            return true;\n        }\n        if ((o == null) || (getClass() != o.getClass())) {\n            return false;\n        }\n        BibEntryType that = (BibEntryType) o;\n        return type.equals(that.type) &&\n               Objects.equals(requiredFields, that.requiredFields) &&\n               Objects.equals(fields, that.fields);\n\n    }\n","date":"2020-07-01 23:18:08","endLine":128,"groupId":"101088","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"equals","params":"(Objecto)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/2f/59f62cbb2ee5a1abde9f53019015f379029691.src","preCode":"    public boolean equals(Object o) {\n        if (this == o) {\n            return true;\n        }\n        if (o == null || getClass() != o.getClass()) {\n            return false;\n        }\n        BibEntryType that = (BibEntryType) o;\n        return type.equals(that.type) &&\n                requiredFields.equals(that.requiredFields) &&\n                fields.equals(that.fields);\n    }\n","realPath":"src/main/java/org/jabref/model/entry/BibEntryType.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":116,"status":"M"}],"commitId":"c83ea3fd22a5ce53f7fd0d14422a9b5f33ad55ed","commitMessage":"@@@Merge pull request #6152 from JabRef/allowReordering\n\nAllow reordering of custom entry types fields","date":"2020-07-01 23:18:08","modifiedFileCount":"24","status":"M","submitter":"Christoph"}]
