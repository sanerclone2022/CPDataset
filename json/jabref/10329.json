[{"authorTime":"2018-03-28 23:37:39","codes":[{"authorDate":"2017-02-17 05:41:47","commitOrder":2,"curCode":"    public void rejectNonPdfUrls() throws MalformedURLException {\n        URL pdfUrl = new URL(\"https://github.com/JabRef/jabref/blob/master/README.md\");\n        FulltextFetcher finder = (e) -> Optional.of(pdfUrl);\n        FulltextFetchers fetcher = new FulltextFetchers(Arrays.asList(finder));\n\n        assertEquals(Optional.empty(), fetcher.findFullTextPDF(entry));\n    }\n","date":"2017-02-17 05:41:47","endLine":45,"groupId":"5602","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"rejectNonPdfUrls","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/e4/4efbb568d633d300fddd5b9ba7157a28afb5f4.src","preCode":"    public void rejectNonPdfUrls() throws MalformedURLException {\n        URL pdfUrl = new URL(\"https://github.com/JabRef/jabref/blob/master/README.md\");\n        FulltextFetcher finder = (e) -> Optional.of(pdfUrl);\n        FulltextFetchers fetcher = new FulltextFetchers(Arrays.asList(finder));\n\n        assertEquals(Optional.empty(), fetcher.findFullTextPDF(entry));\n    }\n","realPath":"src/test/java/org/jabref/logic/importer/FulltextFetchersTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":39,"status":"NB"},{"authorDate":"2018-03-28 23:37:39","commitOrder":2,"curCode":"    public void noTrustLevel() throws MalformedURLException {\n        URL pdfUrl = new URL(\"http://docs.oasis-open.org/wsbpel/2.0/OS/wsbpel-v2.0-OS.pdf\");\n        FulltextFetcher finder = (e) -> Optional.of(pdfUrl);\n        FulltextFetchers fetcher = new FulltextFetchers(Arrays.asList(finder));\n\n        assertEquals(Optional.of(pdfUrl), fetcher.findFullTextPDF(entry));\n    }\n","date":"2018-03-28 23:37:39","endLine":58,"groupId":"8775","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"noTrustLevel","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/1f/3cc1a5f6dd3ab6cf650282692c4e5c06b565c2.src","preCode":"    public void noTrustLevel() throws MalformedURLException {\n        URL pdfUrl = new URL(\"http://docs.oasis-open.org/wsbpel/2.0/OS/wsbpel-v2.0-OS.pdf\");\n        FulltextFetcher finder = (e) -> Optional.of(pdfUrl);\n        FulltextFetchers fetcher = new FulltextFetchers(Arrays.asList(finder));\n\n        assertEquals(Optional.of(pdfUrl), fetcher.findFullTextPDF(entry));\n    }\n","realPath":"src/test/java/org/jabref/logic/importer/FulltextFetchersTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":52,"status":"B"}],"commitId":"40a007aabaf96ad963cc9cb72f94a9f7371bfedd","commitMessage":"@@@Priority fetcher (#3882)\n\n* Parallel fetchers and first wins\n\n* Trust level implementation #3881\n\n* Fix ordering\n\n* Add tests\n\n* Code style\n\n* Trust levels\n\n* Google refactoring\n\n* Syntax error\n\n* Reduce calls by one as mimeType is already known for fulltext as PDF #3879\n\n* Fix test\n\n* Unued imports\n\n* Remove test\n\n* Refactoring\n\n* Feedback\n\n* Graceful shutdown and force shutdown for non-terminating tasks\n\n* 60 seconds\n\n* Revert test\n\n* Add Getters\n\n* Mock tests\n\n* Refactor to lambda\n\n* Revert \"60 seconds\"\n\nThis reverts commit 27fa0e8c0fb89c84b4a0db5c4ba319b084625013.\n\n* Revert \"Graceful shutdown and force shutdown for non-terminating tasks\"\n\nThis reverts commit f59a3c6269764d71f01f93cbd05e4c349dd54323.\n\n* Remove unused method\n","date":"2018-03-28 23:37:39","modifiedFileCount":"17","status":"M","submitter":"Stefan Kolb"},{"authorTime":"2019-10-19 17:52:56","codes":[{"authorDate":"2019-10-19 17:52:56","commitOrder":3,"curCode":"    public void rejectNonPdfUrls() throws MalformedURLException {\n        URL pdfUrl = new URL(\"https://github.com/JabRef/jabref/blob/master/README.md\");\n        FulltextFetcher finder = (e) -> Optional.of(pdfUrl);\n        FulltextFetchers fetcher = new FulltextFetchers(Set.of(finder));\n\n        assertEquals(Optional.empty(), fetcher.findFullTextPDF(entry));\n    }\n","date":"2019-10-19 17:52:56","endLine":48,"groupId":"10329","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"rejectNonPdfUrls","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/98/6165ad0ee20853462c0e747ea7fb8cc1de717f.src","preCode":"    public void rejectNonPdfUrls() throws MalformedURLException {\n        URL pdfUrl = new URL(\"https://github.com/JabRef/jabref/blob/master/README.md\");\n        FulltextFetcher finder = (e) -> Optional.of(pdfUrl);\n        FulltextFetchers fetcher = new FulltextFetchers(Arrays.asList(finder));\n\n        assertEquals(Optional.empty(), fetcher.findFullTextPDF(entry));\n    }\n","realPath":"src/test/java/org/jabref/logic/importer/FulltextFetchersTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":42,"status":"M"},{"authorDate":"2019-10-19 17:52:56","commitOrder":3,"curCode":"    public void noTrustLevel() throws MalformedURLException {\n        URL pdfUrl = new URL(\"http://docs.oasis-open.org/wsbpel/2.0/OS/wsbpel-v2.0-OS.pdf\");\n        FulltextFetcher finder = (e) -> Optional.of(pdfUrl);\n        FulltextFetchers fetcher = new FulltextFetchers(Set.of(finder));\n\n        assertEquals(Optional.of(pdfUrl), fetcher.findFullTextPDF(entry));\n    }\n","date":"2019-10-19 17:52:56","endLine":57,"groupId":"10329","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"noTrustLevel","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/98/6165ad0ee20853462c0e747ea7fb8cc1de717f.src","preCode":"    public void noTrustLevel() throws MalformedURLException {\n        URL pdfUrl = new URL(\"http://docs.oasis-open.org/wsbpel/2.0/OS/wsbpel-v2.0-OS.pdf\");\n        FulltextFetcher finder = (e) -> Optional.of(pdfUrl);\n        FulltextFetchers fetcher = new FulltextFetchers(Arrays.asList(finder));\n\n        assertEquals(Optional.of(pdfUrl), fetcher.findFullTextPDF(entry));\n    }\n","realPath":"src/test/java/org/jabref/logic/importer/FulltextFetchersTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":51,"status":"M"}],"commitId":"36aec657b667b173b1434b4f126ca236177c7073","commitMessage":"@@@Refactor to sorted set (#5477)\n\n","date":"2019-10-19 17:52:56","modifiedFileCount":"7","status":"M","submitter":"Johannes Hupe"}]
