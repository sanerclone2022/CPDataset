[{"authorTime":"2018-01-10 17:53:04","codes":[{"authorDate":"2018-01-10 17:53:04","commitOrder":1,"curCode":"    public static Set<LocalizationEntry> findLocalizationParametersStringsInJavaFiles(LocalizationBundleForTest type)\n            throws IOException {\n        try (Stream<Path> pathStream = Files.walk(Paths.get(\"src/main\"))) {\n            return pathStream\n                    .filter(LocalizationParser::isJavaFile)\n                    .flatMap(path -> getLocalizationParametersInJavaFile(path, type).stream())\n                    .collect(Collectors.toSet());\n        } catch (UncheckedIOException ioe) {\n            throw new IOException(ioe);\n        }\n    }\n","date":"2018-01-10 17:53:04","endLine":90,"groupId":"10964","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"findLocalizationParametersStringsInJavaFiles","params":"(LocalizationBundleForTesttype)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/30/38fb7fb3635e55e7665c4a08e99366019ef976.src","preCode":"    public static Set<LocalizationEntry> findLocalizationParametersStringsInJavaFiles(LocalizationBundleForTest type)\n            throws IOException {\n        try (Stream<Path> pathStream = Files.walk(Paths.get(\"src/main\"))) {\n            return pathStream\n                    .filter(LocalizationParser::isJavaFile)\n                    .flatMap(path -> getLocalizationParametersInJavaFile(path, type).stream())\n                    .collect(Collectors.toSet());\n        } catch (UncheckedIOException ioe) {\n            throw new IOException(ioe);\n        }\n    }\n","realPath":"src/test/java/org/jabref/logic/l10n/LocalizationParser.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":80,"status":"B"},{"authorDate":"2018-01-10 17:53:04","commitOrder":1,"curCode":"    private static Set<LocalizationEntry> findLocalizationEntriesInJavaFiles(LocalizationBundleForTest type)\n            throws IOException {\n        try (Stream<Path> pathStream = Files.walk(Paths.get(\"src/main\"))) {\n            return pathStream\n                    .filter(LocalizationParser::isJavaFile)\n                    .flatMap(path -> getLanguageKeysInJavaFile(path, type).stream())\n                    .collect(Collectors.toSet());\n        } catch (UncheckedIOException ioe) {\n            throw new IOException(ioe);\n        }\n    }\n","date":"2018-01-10 17:53:04","endLine":102,"groupId":"10964","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"findLocalizationEntriesInJavaFiles","params":"(LocalizationBundleForTesttype)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/30/38fb7fb3635e55e7665c4a08e99366019ef976.src","preCode":"    private static Set<LocalizationEntry> findLocalizationEntriesInJavaFiles(LocalizationBundleForTest type)\n            throws IOException {\n        try (Stream<Path> pathStream = Files.walk(Paths.get(\"src/main\"))) {\n            return pathStream\n                    .filter(LocalizationParser::isJavaFile)\n                    .flatMap(path -> getLanguageKeysInJavaFile(path, type).stream())\n                    .collect(Collectors.toSet());\n        } catch (UncheckedIOException ioe) {\n            throw new IOException(ioe);\n        }\n    }\n","realPath":"src/test/java/org/jabref/logic/l10n/LocalizationParser.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":92,"status":"B"}],"commitId":"d0f62702bbed02e8bf4e99f428f4fe75dfaaf021","commitMessage":"@@@Fix ErrorProne errors (#3623)\n\n* Explicitly set jacoco version\n\n* This fixes the error prone errors\n\n* Fix RegExpBasedFileFinder\n\n* Fix FileUtil\n\n* Fix LocalizationParser\n\n* Fix PropertiesLocaleCompletenessTest\n\n* Fix ArchitectureTests\n\n* Fix TestIconsProperties\n\n* Fix CiteKeyBasedFileFinder\n\n* Addition to Merge\n\n* Revert \"Addition to Merge\"\n\nThis reverts commit e12311f0635690f5d558a3a437cf708d970ee95a.\n\n* Don't return empty lists\n\n* Fix bug\n\n* Test are green\n\n* Checkstyle is green\n\n* Catch UncheckedIOExceptions\n","date":"2018-01-10 17:53:04","modifiedFileCount":"9","status":"B","submitter":"Oliver Kopp"},{"authorTime":"2020-04-30 17:10:13","codes":[{"authorDate":"2020-04-30 17:10:13","commitOrder":2,"curCode":"    public static Set<LocalizationEntry> findLocalizationParametersStringsInJavaFiles(LocalizationBundleForTest type)\n            throws IOException {\n        try (Stream<Path> pathStream = Files.walk(Path.of(\"src/main\"))) {\n            return pathStream\n                    .filter(LocalizationParser::isJavaFile)\n                    .flatMap(path -> getLocalizationParametersInJavaFile(path, type).stream())\n                    .collect(Collectors.toSet());\n        } catch (UncheckedIOException ioe) {\n            throw new IOException(ioe);\n        }\n    }\n","date":"2020-04-30 17:10:13","endLine":91,"groupId":"10726","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"findLocalizationParametersStringsInJavaFiles","params":"(LocalizationBundleForTesttype)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/e4/b246e9bfb1c1fa1e52dea2b4c139d157b0d009.src","preCode":"    public static Set<LocalizationEntry> findLocalizationParametersStringsInJavaFiles(LocalizationBundleForTest type)\n            throws IOException {\n        try (Stream<Path> pathStream = Files.walk(Paths.get(\"src/main\"))) {\n            return pathStream\n                    .filter(LocalizationParser::isJavaFile)\n                    .flatMap(path -> getLocalizationParametersInJavaFile(path, type).stream())\n                    .collect(Collectors.toSet());\n        } catch (UncheckedIOException ioe) {\n            throw new IOException(ioe);\n        }\n    }\n","realPath":"src/test/java/org/jabref/logic/l10n/LocalizationParser.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":81,"status":"M"},{"authorDate":"2020-04-30 17:10:13","commitOrder":2,"curCode":"    private static Set<LocalizationEntry> findLocalizationEntriesInJavaFiles(LocalizationBundleForTest type)\n            throws IOException {\n        try (Stream<Path> pathStream = Files.walk(Path.of(\"src/main\"))) {\n            return pathStream\n                    .filter(LocalizationParser::isJavaFile)\n                    .flatMap(path -> getLanguageKeysInJavaFile(path, type).stream())\n                    .collect(Collectors.toSet());\n        } catch (UncheckedIOException ioe) {\n            throw new IOException(ioe);\n        }\n    }\n","date":"2020-04-30 17:10:13","endLine":103,"groupId":"10726","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"findLocalizationEntriesInJavaFiles","params":"(LocalizationBundleForTesttype)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/e4/b246e9bfb1c1fa1e52dea2b4c139d157b0d009.src","preCode":"    private static Set<LocalizationEntry> findLocalizationEntriesInJavaFiles(LocalizationBundleForTest type)\n            throws IOException {\n        try (Stream<Path> pathStream = Files.walk(Paths.get(\"src/main\"))) {\n            return pathStream\n                    .filter(LocalizationParser::isJavaFile)\n                    .flatMap(path -> getLanguageKeysInJavaFile(path, type).stream())\n                    .collect(Collectors.toSet());\n        } catch (UncheckedIOException ioe) {\n            throw new IOException(ioe);\n        }\n    }\n","realPath":"src/test/java/org/jabref/logic/l10n/LocalizationParser.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":93,"status":"M"}],"commitId":"862078a4db316cfd15bd77be68d3d2b010feab3b","commitMessage":"@@@Fixes #6357: File directory (#6377)\n\n* Fixes #6357: File directory\n\nBug was introduced in https://github.com/JabRef/jabref/commit/1b03f039aa4abf0812a3a8ae0ba248c08fdb39a3.\n\n* Fix tests\n\n* Replace Paths.get\n\n* Fix code style","date":"2020-04-30 17:10:13","modifiedFileCount":"110","status":"M","submitter":"Tobias Diez"}]
