[{"authorTime":"2020-09-26 05:39:50","codes":[{"authorDate":"2018-11-15 18:41:35","commitOrder":3,"curCode":"    private void initialize() {\n        visualizer.setDecoration(new IconValidationDecorator());\n\n        viewModel = new SharedDatabaseLoginDialogViewModel(frame, dialogService);\n        databaseType.getItems().addAll(DBMSType.values());\n        databaseType.getSelectionModel().select(0);\n\n        database.textProperty().bindBidirectional(viewModel.databaseproperty());\n        host.textProperty().bindBidirectional(viewModel.hostProperty());\n        user.textProperty().bindBidirectional(viewModel.userProperty());\n        password.textProperty().bindBidirectional(viewModel.passwordProperty());\n        port.textProperty().bindBidirectional(viewModel.portProperty());\n        serverTimezone.textProperty().bindBidirectional(viewModel.serverTimezoneProperty());\n        databaseType.valueProperty().bindBidirectional(viewModel.selectedDbmstypeProperty());\n\n        folder.textProperty().bindBidirectional(viewModel.folderProperty());\n        browseButton.disableProperty().bind(viewModel.autosaveProperty().not());\n        folder.disableProperty().bind(viewModel.autosaveProperty().not());\n        autosave.selectedProperty().bindBidirectional(viewModel.autosaveProperty());\n\n        useSSL.selectedProperty().bindBidirectional(viewModel.useSSLProperty());\n\n        fileKeystore.textProperty().bindBidirectional(viewModel.keyStoreProperty());\n\n        browseKeystore.disableProperty().bind(viewModel.useSSLProperty().not());\n        passwordKeystore.disableProperty().bind(viewModel.useSSLProperty().not());\n        passwordKeystore.textProperty().bindBidirectional(viewModel.keyStorePasswordProperty());\n\n        \r\n        Platform.runLater(() -> {\n            visualizer.initVisualization(viewModel.dbValidation(), database, true);\n            visualizer.initVisualization(viewModel.hostValidation(), host, true);\n            visualizer.initVisualization(viewModel.portValidation(), port, true);\n            visualizer.initVisualization(viewModel.userValidation(), user, true);\n\n            EasyBind.subscribe(autosave.selectedProperty(), selected -> {\n                visualizer.initVisualization(viewModel.folderValidation(), folder, true);\n            });\n\n            EasyBind.subscribe(useSSL.selectedProperty(), selected -> {\n                visualizer.initVisualization(viewModel.keystoreValidation(), fileKeystore, true);\n            });\n        });\n    }\n","date":"2018-11-15 18:41:35","endLine":118,"groupId":"6293","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"initialize","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/61/2c2267aea5a54aa124b7436f6fb84350ed79e2.src","preCode":"    private void initialize() {\n        visualizer.setDecoration(new IconValidationDecorator());\n\n        viewModel = new SharedDatabaseLoginDialogViewModel(frame, dialogService);\n        databaseType.getItems().addAll(DBMSType.values());\n        databaseType.getSelectionModel().select(0);\n\n        database.textProperty().bindBidirectional(viewModel.databaseproperty());\n        host.textProperty().bindBidirectional(viewModel.hostProperty());\n        user.textProperty().bindBidirectional(viewModel.userProperty());\n        password.textProperty().bindBidirectional(viewModel.passwordProperty());\n        port.textProperty().bindBidirectional(viewModel.portProperty());\n        serverTimezone.textProperty().bindBidirectional(viewModel.serverTimezoneProperty());\n        databaseType.valueProperty().bindBidirectional(viewModel.selectedDbmstypeProperty());\n\n        folder.textProperty().bindBidirectional(viewModel.folderProperty());\n        browseButton.disableProperty().bind(viewModel.autosaveProperty().not());\n        folder.disableProperty().bind(viewModel.autosaveProperty().not());\n        autosave.selectedProperty().bindBidirectional(viewModel.autosaveProperty());\n\n        useSSL.selectedProperty().bindBidirectional(viewModel.useSSLProperty());\n\n        fileKeystore.textProperty().bindBidirectional(viewModel.keyStoreProperty());\n\n        browseKeystore.disableProperty().bind(viewModel.useSSLProperty().not());\n        passwordKeystore.disableProperty().bind(viewModel.useSSLProperty().not());\n        passwordKeystore.textProperty().bindBidirectional(viewModel.keyStorePasswordProperty());\n\n        \r\n        Platform.runLater(() -> {\n            visualizer.initVisualization(viewModel.dbValidation(), database, true);\n            visualizer.initVisualization(viewModel.hostValidation(), host, true);\n            visualizer.initVisualization(viewModel.portValidation(), port, true);\n            visualizer.initVisualization(viewModel.userValidation(), user, true);\n\n            EasyBind.subscribe(autosave.selectedProperty(), selected -> {\n                visualizer.initVisualization(viewModel.folderValidation(), folder, true);\n            });\n\n            EasyBind.subscribe(useSSL.selectedProperty(), selected -> {\n                visualizer.initVisualization(viewModel.keystoreValidation(), fileKeystore, true);\n            });\n        });\n    }\n","realPath":"src/main/java/org/jabref/gui/shared/SharedDatabaseLoginDialogView.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":75,"status":"NB"},{"authorDate":"2020-09-26 05:39:50","commitOrder":3,"curCode":"    private void initialize() {\n\n        viewModel = new LinkedFilesEditDialogViewModel(linkedFile, stateManager.getActiveDatabase().get(), dialogService, preferences, externalFileTypes);\n        fileType.itemsProperty().bindBidirectional(viewModel.externalFileTypeProperty());\n        description.textProperty().bindBidirectional(viewModel.descriptionProperty());\n        link.textProperty().bindBidirectional(viewModel.linkProperty());\n        fileType.valueProperty().bindBidirectional(viewModel.selectedExternalFileTypeProperty());\n    }\n","date":"2020-09-26 05:39:50","endLine":64,"groupId":"11701","id":2,"instanceNumber":2,"isCurCommit":1,"methodName":"initialize","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/5e/a1e9fb34400423031e0f2aae86ef5cbfa2a3b6.src","preCode":"    private void initialize() {\n\n        viewModel = new LinkedFilesEditDialogViewModel(linkedFile, stateManager.getActiveDatabase().get(), dialogService, preferences, externalFileTypes);\n        fileType.itemsProperty().bindBidirectional(viewModel.externalFileTypeProperty());\n        description.textProperty().bindBidirectional(viewModel.descriptionProperty());\n        link.textProperty().bindBidirectional(viewModel.linkProperty());\n        fileType.valueProperty().bindBidirectional(viewModel.selectedExternalFileTypeProperty());\n    }\n","realPath":"src/main/java/org/jabref/gui/linkedfile/LinkedFileEditDialogView.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":57,"status":"B"}],"commitId":"3123090b6cf44e853eceae42854d49e78e81be2a","commitMessage":"@@@Changed default value of \"search and store files relative to bibtex file\" to true (#6928)\n\n* Fixes #6863\n\n* CHANGELOG.md\n\n* Reworded bibLocationAsPrimary to reflect real meaning of the preference setting.  changed default val to true\n\n* Cleanup of deprecated methods LinkedFiles(String.  String.  String) and List<String> getFileDirectories(...)\n\n* Reworded package filelist to linkedfile\n\n* Fixed SpringerFetcher","date":"2020-09-26 05:39:50","modifiedFileCount":"45","status":"M","submitter":"Carl Christian Snethlage"},{"authorTime":"2020-09-26 05:39:50","codes":[{"authorDate":"2020-12-04 04:22:21","commitOrder":4,"curCode":"    private void initialize() {\n        visualizer.setDecoration(new IconValidationDecorator());\n\n        viewModel = new SharedDatabaseLoginDialogViewModel(frame, dialogService);\n        databaseType.getItems().addAll(DBMSType.values());\n        databaseType.getSelectionModel().select(0);\n\n        database.textProperty().bindBidirectional(viewModel.databaseproperty());\n        host.textProperty().bindBidirectional(viewModel.hostProperty());\n        user.textProperty().bindBidirectional(viewModel.userProperty());\n        password.textProperty().bindBidirectional(viewModel.passwordProperty());\n        port.textProperty().bindBidirectional(viewModel.portProperty());\n        serverTimezone.textProperty().bindBidirectional(viewModel.serverTimezoneProperty());\n        databaseType.valueProperty().bindBidirectional(viewModel.selectedDbmstypeProperty());\n\n        folder.textProperty().bindBidirectional(viewModel.folderProperty());\n        browseButton.disableProperty().bind(viewModel.autosaveProperty().not());\n        folder.disableProperty().bind(viewModel.autosaveProperty().not());\n        autosave.selectedProperty().bindBidirectional(viewModel.autosaveProperty());\n\n        useSSL.selectedProperty().bindBidirectional(viewModel.useSSLProperty());\n\n        fileKeystore.textProperty().bindBidirectional(viewModel.keyStoreProperty());\n\n        browseKeystore.disableProperty().bind(viewModel.useSSLProperty().not());\n        passwordKeystore.disableProperty().bind(viewModel.useSSLProperty().not());\n        passwordKeystore.textProperty().bindBidirectional(viewModel.keyStorePasswordProperty());\n        rememberPassword.selectedProperty().bindBidirectional(viewModel.rememberPasswordProperty());\n\n        \r\n        Platform.runLater(() -> {\n            visualizer.initVisualization(viewModel.dbValidation(), database, true);\n            visualizer.initVisualization(viewModel.hostValidation(), host, true);\n            visualizer.initVisualization(viewModel.portValidation(), port, true);\n            visualizer.initVisualization(viewModel.userValidation(), user, true);\n\n            EasyBind.subscribe(autosave.selectedProperty(), selected -> {\n                visualizer.initVisualization(viewModel.folderValidation(), folder, true);\n            });\n\n            EasyBind.subscribe(useSSL.selectedProperty(), selected -> {\n                visualizer.initVisualization(viewModel.keystoreValidation(), fileKeystore, true);\n            });\n        });\n    }\n","date":"2020-12-04 04:22:21","endLine":122,"groupId":"10901","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"initialize","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/11/85c91d95e664a66815daf043e7d458adad7bcc.src","preCode":"    private void initialize() {\n        visualizer.setDecoration(new IconValidationDecorator());\n\n        viewModel = new SharedDatabaseLoginDialogViewModel(frame, dialogService);\n        databaseType.getItems().addAll(DBMSType.values());\n        databaseType.getSelectionModel().select(0);\n\n        database.textProperty().bindBidirectional(viewModel.databaseproperty());\n        host.textProperty().bindBidirectional(viewModel.hostProperty());\n        user.textProperty().bindBidirectional(viewModel.userProperty());\n        password.textProperty().bindBidirectional(viewModel.passwordProperty());\n        port.textProperty().bindBidirectional(viewModel.portProperty());\n        serverTimezone.textProperty().bindBidirectional(viewModel.serverTimezoneProperty());\n        databaseType.valueProperty().bindBidirectional(viewModel.selectedDbmstypeProperty());\n\n        folder.textProperty().bindBidirectional(viewModel.folderProperty());\n        browseButton.disableProperty().bind(viewModel.autosaveProperty().not());\n        folder.disableProperty().bind(viewModel.autosaveProperty().not());\n        autosave.selectedProperty().bindBidirectional(viewModel.autosaveProperty());\n\n        useSSL.selectedProperty().bindBidirectional(viewModel.useSSLProperty());\n\n        fileKeystore.textProperty().bindBidirectional(viewModel.keyStoreProperty());\n\n        browseKeystore.disableProperty().bind(viewModel.useSSLProperty().not());\n        passwordKeystore.disableProperty().bind(viewModel.useSSLProperty().not());\n        passwordKeystore.textProperty().bindBidirectional(viewModel.keyStorePasswordProperty());\n\n        \r\n        Platform.runLater(() -> {\n            visualizer.initVisualization(viewModel.dbValidation(), database, true);\n            visualizer.initVisualization(viewModel.hostValidation(), host, true);\n            visualizer.initVisualization(viewModel.portValidation(), port, true);\n            visualizer.initVisualization(viewModel.userValidation(), user, true);\n\n            EasyBind.subscribe(autosave.selectedProperty(), selected -> {\n                visualizer.initVisualization(viewModel.folderValidation(), folder, true);\n            });\n\n            EasyBind.subscribe(useSSL.selectedProperty(), selected -> {\n                visualizer.initVisualization(viewModel.keystoreValidation(), fileKeystore, true);\n            });\n        });\n    }\n","realPath":"src/main/java/org/jabref/gui/shared/SharedDatabaseLoginDialogView.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":78,"status":"M"},{"authorDate":"2020-09-26 05:39:50","commitOrder":4,"curCode":"    private void initialize() {\n\n        viewModel = new LinkedFilesEditDialogViewModel(linkedFile, stateManager.getActiveDatabase().get(), dialogService, preferences, externalFileTypes);\n        fileType.itemsProperty().bindBidirectional(viewModel.externalFileTypeProperty());\n        description.textProperty().bindBidirectional(viewModel.descriptionProperty());\n        link.textProperty().bindBidirectional(viewModel.linkProperty());\n        fileType.valueProperty().bindBidirectional(viewModel.selectedExternalFileTypeProperty());\n    }\n","date":"2020-09-26 05:39:50","endLine":64,"groupId":"10901","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"initialize","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/5e/a1e9fb34400423031e0f2aae86ef5cbfa2a3b6.src","preCode":"    private void initialize() {\n\n        viewModel = new LinkedFilesEditDialogViewModel(linkedFile, stateManager.getActiveDatabase().get(), dialogService, preferences, externalFileTypes);\n        fileType.itemsProperty().bindBidirectional(viewModel.externalFileTypeProperty());\n        description.textProperty().bindBidirectional(viewModel.descriptionProperty());\n        link.textProperty().bindBidirectional(viewModel.linkProperty());\n        fileType.valueProperty().bindBidirectional(viewModel.selectedExternalFileTypeProperty());\n    }\n","realPath":"src/main/java/org/jabref/gui/linkedfile/LinkedFileEditDialogView.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":57,"status":"N"}],"commitId":"40311041c6ffacc49bf159e6d9b9fe8bf5d9717f","commitMessage":"@@@Fix remembering password for sql db (#7154)\n\nFixes #6869\n\nAdd misisng binding","date":"2020-12-04 04:22:21","modifiedFileCount":"1","status":"M","submitter":"Christoph"}]
