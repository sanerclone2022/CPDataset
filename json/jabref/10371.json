[{"authorTime":"2017-02-17 05:41:47","codes":[{"authorDate":"2017-02-17 05:41:47","commitOrder":1,"curCode":"    public void oneElement() {\n        JournalAbbreviationRepository repository = new JournalAbbreviationRepository();\n        repository.addEntry(new Abbreviation(\"Long Name\", \"L. N.\"));\n        assertEquals(1, repository.size());\n        assertFalse(repository.getAbbreviations().isEmpty());\n\n        assertEquals(\"L. N.\", repository.getIsoAbbreviation(\"Long Name\").orElse(\"WRONG\"));\n        assertEquals(\"UNKNOWN\", repository.getIsoAbbreviation(\"?\").orElse(\"UNKNOWN\"));\n\n        assertEquals(\"L N\", repository.getMedlineAbbreviation(\"Long Name\").orElse(\"WRONG\"));\n        assertEquals(\"UNKNOWN\", repository.getMedlineAbbreviation(\"?\").orElse(\"UNKNOWN\"));\n\n        assertEquals(\"L. N.\", repository.getNextAbbreviation(\"Long Name\").orElse(\"WRONG\"));\n        assertEquals(\"L N\", repository.getNextAbbreviation(\"L. N.\").orElse(\"WRONG\"));\n        assertEquals(\"Long Name\", repository.getNextAbbreviation(\"L N\").orElse(\"WRONG\"));\n        assertEquals(\"UNKNOWN\", repository.getNextAbbreviation(\"?\").orElse(\"UNKNOWN\"));\n\n        assertTrue(repository.isKnownName(\"Long Name\"));\n        assertTrue(repository.isKnownName(\"L. N.\"));\n        assertTrue(repository.isKnownName(\"L N\"));\n        assertFalse(repository.isKnownName(\"?\"));\n\n    }\n","date":"2017-02-17 05:41:47","endLine":41,"groupId":"349","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"oneElement","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/4d/f5f2b689646b5d3745c985d792620fb557eaca.src","preCode":"    public void oneElement() {\n        JournalAbbreviationRepository repository = new JournalAbbreviationRepository();\n        repository.addEntry(new Abbreviation(\"Long Name\", \"L. N.\"));\n        assertEquals(1, repository.size());\n        assertFalse(repository.getAbbreviations().isEmpty());\n\n        assertEquals(\"L. N.\", repository.getIsoAbbreviation(\"Long Name\").orElse(\"WRONG\"));\n        assertEquals(\"UNKNOWN\", repository.getIsoAbbreviation(\"?\").orElse(\"UNKNOWN\"));\n\n        assertEquals(\"L N\", repository.getMedlineAbbreviation(\"Long Name\").orElse(\"WRONG\"));\n        assertEquals(\"UNKNOWN\", repository.getMedlineAbbreviation(\"?\").orElse(\"UNKNOWN\"));\n\n        assertEquals(\"L. N.\", repository.getNextAbbreviation(\"Long Name\").orElse(\"WRONG\"));\n        assertEquals(\"L N\", repository.getNextAbbreviation(\"L. N.\").orElse(\"WRONG\"));\n        assertEquals(\"Long Name\", repository.getNextAbbreviation(\"L N\").orElse(\"WRONG\"));\n        assertEquals(\"UNKNOWN\", repository.getNextAbbreviation(\"?\").orElse(\"UNKNOWN\"));\n\n        assertTrue(repository.isKnownName(\"Long Name\"));\n        assertTrue(repository.isKnownName(\"L. N.\"));\n        assertTrue(repository.isKnownName(\"L N\"));\n        assertFalse(repository.isKnownName(\"?\"));\n\n    }\n","realPath":"src/test/java/org/jabref/logic/journals/JournalAbbreviationRepositoryTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":19,"status":"B"},{"authorDate":"2017-02-17 05:41:47","commitOrder":1,"curCode":"    public void testDuplicateKeys() {\n        JournalAbbreviationRepository repository = new JournalAbbreviationRepository();\n        repository.addEntry(new Abbreviation(\"Long Name\", \"L. N.\"));\n        assertEquals(1, repository.size());\n        assertEquals(\"L. N.\", repository.getIsoAbbreviation(\"Long Name\").orElse(\"WRONG\"));\n\n        repository.addEntry(new Abbreviation(\"Long Name\", \"LA. N.\"));\n        assertEquals(1, repository.size());\n        assertEquals(\"LA. N.\", repository.getIsoAbbreviation(\"Long Name\").orElse(\"WRONG\"));\n\n    }\n","date":"2017-02-17 05:41:47","endLine":82,"groupId":"7476","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testDuplicateKeys","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/4d/f5f2b689646b5d3745c985d792620fb557eaca.src","preCode":"    public void testDuplicateKeys() {\n        JournalAbbreviationRepository repository = new JournalAbbreviationRepository();\n        repository.addEntry(new Abbreviation(\"Long Name\", \"L. N.\"));\n        assertEquals(1, repository.size());\n        assertEquals(\"L. N.\", repository.getIsoAbbreviation(\"Long Name\").orElse(\"WRONG\"));\n\n        repository.addEntry(new Abbreviation(\"Long Name\", \"LA. N.\"));\n        assertEquals(1, repository.size());\n        assertEquals(\"LA. N.\", repository.getIsoAbbreviation(\"Long Name\").orElse(\"WRONG\"));\n\n    }\n","realPath":"src/test/java/org/jabref/logic/journals/JournalAbbreviationRepositoryTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":72,"status":"B"}],"commitId":"ebbeb1d249edf7134abf92d24c2031ae54d19881","commitMessage":"@@@Merge branch 'net-sf-to-org-jabref'\n","date":"2017-02-17 05:41:47","modifiedFileCount":"1","status":"B","submitter":"Oliver Kopp"},{"authorTime":"2019-10-31 14:29:08","codes":[{"authorDate":"2019-10-31 14:29:08","commitOrder":2,"curCode":"    public void oneElement() {\n        JournalAbbreviationRepository repository = new JournalAbbreviationRepository();\n        repository.addEntry(new Abbreviation(\"Long Name\", \"L. N.\"));\n        assertEquals(1, repository.size());\n        assertFalse(repository.getAbbreviations().isEmpty());\n\n        assertEquals(\"L. N.\", repository.getDefaultAbbreviation(\"Long Name\").orElse(\"WRONG\"));\n        assertEquals(\"UNKNOWN\", repository.getDefaultAbbreviation(\"?\").orElse(\"UNKNOWN\"));\n\n        assertEquals(\"L N\", repository.getMedlineAbbreviation(\"Long Name\").orElse(\"WRONG\"));\n        assertEquals(\"UNKNOWN\", repository.getMedlineAbbreviation(\"?\").orElse(\"UNKNOWN\"));\n\n        assertEquals(\"L. N.\", repository.getShortestUniqueAbbreviation(\"Long Name\").orElse(\"WRONG\"));\n        assertEquals(\"UNKNOWN\", repository.getShortestUniqueAbbreviation(\"?\").orElse(\"UNKNOWN\"));\n\n        assertEquals(\"L. N.\", repository.getNextAbbreviation(\"Long Name\").orElse(\"WRONG\"));\n        assertEquals(\"L N\", repository.getNextAbbreviation(\"L. N.\").orElse(\"WRONG\"));\n        assertEquals(\"Long Name\", repository.getNextAbbreviation(\"L N\").orElse(\"WRONG\"));\n        assertEquals(\"UNKNOWN\", repository.getNextAbbreviation(\"?\").orElse(\"UNKNOWN\"));\n\n        assertTrue(repository.isKnownName(\"Long Name\"));\n        assertTrue(repository.isKnownName(\"L. N.\"));\n        assertTrue(repository.isKnownName(\"L N\"));\n        assertFalse(repository.isKnownName(\"?\"));\n    }\n","date":"2019-10-31 14:29:08","endLine":42,"groupId":"6614","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"oneElement","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/aa/e00e61ce024d56aa4560352099eaf2d36f64db.src","preCode":"    public void oneElement() {\n        JournalAbbreviationRepository repository = new JournalAbbreviationRepository();\n        repository.addEntry(new Abbreviation(\"Long Name\", \"L. N.\"));\n        assertEquals(1, repository.size());\n        assertFalse(repository.getAbbreviations().isEmpty());\n\n        assertEquals(\"L. N.\", repository.getIsoAbbreviation(\"Long Name\").orElse(\"WRONG\"));\n        assertEquals(\"UNKNOWN\", repository.getIsoAbbreviation(\"?\").orElse(\"UNKNOWN\"));\n\n        assertEquals(\"L N\", repository.getMedlineAbbreviation(\"Long Name\").orElse(\"WRONG\"));\n        assertEquals(\"UNKNOWN\", repository.getMedlineAbbreviation(\"?\").orElse(\"UNKNOWN\"));\n\n        assertEquals(\"L. N.\", repository.getNextAbbreviation(\"Long Name\").orElse(\"WRONG\"));\n        assertEquals(\"L N\", repository.getNextAbbreviation(\"L. N.\").orElse(\"WRONG\"));\n        assertEquals(\"Long Name\", repository.getNextAbbreviation(\"L N\").orElse(\"WRONG\"));\n        assertEquals(\"UNKNOWN\", repository.getNextAbbreviation(\"?\").orElse(\"UNKNOWN\"));\n\n        assertTrue(repository.isKnownName(\"Long Name\"));\n        assertTrue(repository.isKnownName(\"L. N.\"));\n        assertTrue(repository.isKnownName(\"L N\"));\n        assertFalse(repository.isKnownName(\"?\"));\n    }\n","realPath":"src/test/java/org/jabref/logic/journals/JournalAbbreviationRepositoryTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":18,"status":"M"},{"authorDate":"2019-10-31 14:29:08","commitOrder":2,"curCode":"    public void testDuplicateKeys() {\n        JournalAbbreviationRepository repository = new JournalAbbreviationRepository();\n        repository.addEntry(new Abbreviation(\"Long Name\", \"L. N.\"));\n        assertEquals(1, repository.size());\n        assertEquals(\"L. N.\", repository.getDefaultAbbreviation(\"Long Name\").orElse(\"WRONG\"));\n\n        repository.addEntry(new Abbreviation(\"Long Name\", \"LA. N.\"));\n        assertEquals(1, repository.size());\n        assertEquals(\"LA. N.\", repository.getDefaultAbbreviation(\"Long Name\").orElse(\"WRONG\"));\n    }\n","date":"2019-10-31 14:29:08","endLine":115,"groupId":"7476","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testDuplicateKeys","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/aa/e00e61ce024d56aa4560352099eaf2d36f64db.src","preCode":"    public void testDuplicateKeys() {\n        JournalAbbreviationRepository repository = new JournalAbbreviationRepository();\n        repository.addEntry(new Abbreviation(\"Long Name\", \"L. N.\"));\n        assertEquals(1, repository.size());\n        assertEquals(\"L. N.\", repository.getIsoAbbreviation(\"Long Name\").orElse(\"WRONG\"));\n\n        repository.addEntry(new Abbreviation(\"Long Name\", \"LA. N.\"));\n        assertEquals(1, repository.size());\n        assertEquals(\"LA. N.\", repository.getIsoAbbreviation(\"Long Name\").orElse(\"WRONG\"));\n    }\n","realPath":"src/test/java/org/jabref/logic/journals/JournalAbbreviationRepositoryTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":106,"status":"M"}],"commitId":"ac7875a96ac3dd0f4a9ff9263546894a4587c5f6","commitMessage":"@@@Convert abbreviation data to CSV and adapt JabRef accordingly (#5538)\n\n* Convert abbreviation files to CSV format\n* Update parser and writer for journal files and add 'shortest abbrv' support\n* Add SHORTEST abbrv to the menu bar\n* Update abbrv-related tests\n* Fix Javadoc\n* Fix and improve tests\n* Add an EMPTY constant to StringUtil\n* Update abbreviation parser and writer\n* Expanding tests.  reviewing legacy code.  improving UI...\n\n","date":"2019-10-31 14:29:08","modifiedFileCount":"28","status":"M","submitter":"David M?ndez"},{"authorTime":"2020-05-01 20:14:59","codes":[{"authorDate":"2020-05-01 20:14:59","commitOrder":3,"curCode":"    void oneElement() {\n        repository.addCustomAbbreviation(new Abbreviation(\"Long Name\", \"L. N.\"));\n        assertEquals(1, repository.getCustomAbbreviations().size());\n\n        assertEquals(\"L. N.\", repository.getDefaultAbbreviation(\"Long Name\").orElse(\"WRONG\"));\n        assertEquals(\"UNKNOWN\", repository.getDefaultAbbreviation(\"?\").orElse(\"UNKNOWN\"));\n\n        assertEquals(\"L N\", repository.getMedlineAbbreviation(\"Long Name\").orElse(\"WRONG\"));\n        assertEquals(\"UNKNOWN\", repository.getMedlineAbbreviation(\"?\").orElse(\"UNKNOWN\"));\n\n        assertEquals(\"L. N.\", repository.getShortestUniqueAbbreviation(\"Long Name\").orElse(\"WRONG\"));\n        assertEquals(\"UNKNOWN\", repository.getShortestUniqueAbbreviation(\"?\").orElse(\"UNKNOWN\"));\n\n        assertEquals(\"L. N.\", repository.getNextAbbreviation(\"Long Name\").orElse(\"WRONG\"));\n        assertEquals(\"L N\", repository.getNextAbbreviation(\"L. N.\").orElse(\"WRONG\"));\n        assertEquals(\"Long Name\", repository.getNextAbbreviation(\"L N\").orElse(\"WRONG\"));\n        assertEquals(\"UNKNOWN\", repository.getNextAbbreviation(\"?\").orElse(\"UNKNOWN\"));\n\n        assertTrue(repository.isKnownName(\"Long Name\"));\n        assertTrue(repository.isKnownName(\"L. N.\"));\n        assertTrue(repository.isKnownName(\"L N\"));\n        assertFalse(repository.isKnownName(\"?\"));\n    }\n","date":"2020-05-01 20:14:59","endLine":47,"groupId":"10371","id":5,"instanceNumber":1,"isCurCommit":1,"methodName":"oneElement","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/68/071fe0089ddd73df69362571d3eef165b05fdc.src","preCode":"    public void oneElement() {\n        JournalAbbreviationRepository repository = new JournalAbbreviationRepository();\n        repository.addEntry(new Abbreviation(\"Long Name\", \"L. N.\"));\n        assertEquals(1, repository.size());\n        assertFalse(repository.getAbbreviations().isEmpty());\n\n        assertEquals(\"L. N.\", repository.getDefaultAbbreviation(\"Long Name\").orElse(\"WRONG\"));\n        assertEquals(\"UNKNOWN\", repository.getDefaultAbbreviation(\"?\").orElse(\"UNKNOWN\"));\n\n        assertEquals(\"L N\", repository.getMedlineAbbreviation(\"Long Name\").orElse(\"WRONG\"));\n        assertEquals(\"UNKNOWN\", repository.getMedlineAbbreviation(\"?\").orElse(\"UNKNOWN\"));\n\n        assertEquals(\"L. N.\", repository.getShortestUniqueAbbreviation(\"Long Name\").orElse(\"WRONG\"));\n        assertEquals(\"UNKNOWN\", repository.getShortestUniqueAbbreviation(\"?\").orElse(\"UNKNOWN\"));\n\n        assertEquals(\"L. N.\", repository.getNextAbbreviation(\"Long Name\").orElse(\"WRONG\"));\n        assertEquals(\"L N\", repository.getNextAbbreviation(\"L. N.\").orElse(\"WRONG\"));\n        assertEquals(\"Long Name\", repository.getNextAbbreviation(\"L N\").orElse(\"WRONG\"));\n        assertEquals(\"UNKNOWN\", repository.getNextAbbreviation(\"?\").orElse(\"UNKNOWN\"));\n\n        assertTrue(repository.isKnownName(\"Long Name\"));\n        assertTrue(repository.isKnownName(\"L. N.\"));\n        assertTrue(repository.isKnownName(\"L N\"));\n        assertFalse(repository.isKnownName(\"?\"));\n    }\n","realPath":"src/test/java/org/jabref/logic/journals/JournalAbbreviationRepositoryTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":25,"status":"M"},{"authorDate":"2020-05-01 20:14:59","commitOrder":3,"curCode":"    void testDuplicateKeys() {\n        repository.addCustomAbbreviation(new Abbreviation(\"Long Name\", \"L. N.\"));\n        assertEquals(1, repository.getCustomAbbreviations().size());\n        assertEquals(\"L. N.\", repository.getDefaultAbbreviation(\"Long Name\").orElse(\"WRONG\"));\n\n        repository.addCustomAbbreviation(new Abbreviation(\"Long Name\", \"LA. N.\"));\n        assertEquals(1, repository.getCustomAbbreviations().size());\n        assertEquals(\"LA. N.\", repository.getDefaultAbbreviation(\"Long Name\").orElse(\"WRONG\"));\n    }\n","date":"2020-05-01 20:14:59","endLine":113,"groupId":"10371","id":6,"instanceNumber":2,"isCurCommit":1,"methodName":"testDuplicateKeys","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/68/071fe0089ddd73df69362571d3eef165b05fdc.src","preCode":"    public void testDuplicateKeys() {\n        JournalAbbreviationRepository repository = new JournalAbbreviationRepository();\n        repository.addEntry(new Abbreviation(\"Long Name\", \"L. N.\"));\n        assertEquals(1, repository.size());\n        assertEquals(\"L. N.\", repository.getDefaultAbbreviation(\"Long Name\").orElse(\"WRONG\"));\n\n        repository.addEntry(new Abbreviation(\"Long Name\", \"LA. N.\"));\n        assertEquals(1, repository.size());\n        assertEquals(\"LA. N.\", repository.getDefaultAbbreviation(\"Long Name\").orElse(\"WRONG\"));\n    }\n","realPath":"src/test/java/org/jabref/logic/journals/JournalAbbreviationRepositoryTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":105,"status":"M"}],"commitId":"a123eb1bd9d6ea71e286224d452534416c72a945","commitMessage":"@@@Rework journal abbreviation caching (#6304)\n\n* Rework journal abbreviation caching\n\n* Add ADR-0010\n\n* Remove IEEE abbreviations\n\n* Convert abbreviations as part of build process\n\n* Fix tests\n\n* Update according to review feedback\n\n* Fix bug\n\n* Include feedback\n\n* Fix test\n\n* Fix localization\n\nCo-authored-by: Oliver Kopp <kopp.dev@gmail.com>","date":"2020-05-01 20:14:59","modifiedFileCount":"59","status":"M","submitter":"Tobias Diez"}]
