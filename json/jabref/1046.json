[{"authorTime":"2017-11-28 01:58:17","codes":[{"authorDate":"2017-11-28 01:58:17","commitOrder":1,"curCode":"    public void testComplexQueryRegex() {\n        double textSize = 13;\n        String query = \"not a=b and c=e or e=\\\"x\\\"\";\n        List<Text> expectedTexts = Arrays.asList(TooltipTextUtil.createText(\"This search contains entries in which \"), TooltipTextUtil.createText(\"not \"), TooltipTextUtil.createText(\"the field \"), TooltipTextUtil.createText(\"a\", TooltipTextUtil.TextType.BOLD),\n                TooltipTextUtil.createText(\" contains the regular expression \"), TooltipTextUtil.createText(\"b\", TooltipTextUtil.TextType.BOLD), TooltipTextUtil.createText(\" and \"), TooltipTextUtil.createText(\"the field \"), TooltipTextUtil.createText(\"c\", TooltipTextUtil.TextType.BOLD), TooltipTextUtil.createText(\" contains the regular expression \"),\n                TooltipTextUtil.createText(\"e\", TooltipTextUtil.TextType.BOLD), TooltipTextUtil.createText(\" or \"), TooltipTextUtil.createText(\"the field \"), TooltipTextUtil.createText(\"e\", TooltipTextUtil.TextType.BOLD), TooltipTextUtil.createText(\" contains the regular expression \"),\n                TooltipTextUtil.createText(\"x\", TooltipTextUtil.TextType.BOLD), TooltipTextUtil.createText(\". \"), TooltipTextUtil.createText(\"The search is case insensitive.\"));\n        TextFlow description = createDescription(query, false, true);\n\n        assertTrue(TextFlowEqualityHelper.checkIfDescriptionEqualsExpectedTexts(description, expectedTexts));\n    }\n","date":"2017-11-28 01:58:17","endLine":98,"groupId":"3255","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testComplexQueryRegex","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/08/31107b681980c1cd22e91c37451bd5fb459f29.src","preCode":"    public void testComplexQueryRegex() {\n        double textSize = 13;\n        String query = \"not a=b and c=e or e=\\\"x\\\"\";\n        List<Text> expectedTexts = Arrays.asList(TooltipTextUtil.createText(\"This search contains entries in which \"), TooltipTextUtil.createText(\"not \"), TooltipTextUtil.createText(\"the field \"), TooltipTextUtil.createText(\"a\", TooltipTextUtil.TextType.BOLD),\n                TooltipTextUtil.createText(\" contains the regular expression \"), TooltipTextUtil.createText(\"b\", TooltipTextUtil.TextType.BOLD), TooltipTextUtil.createText(\" and \"), TooltipTextUtil.createText(\"the field \"), TooltipTextUtil.createText(\"c\", TooltipTextUtil.TextType.BOLD), TooltipTextUtil.createText(\" contains the regular expression \"),\n                TooltipTextUtil.createText(\"e\", TooltipTextUtil.TextType.BOLD), TooltipTextUtil.createText(\" or \"), TooltipTextUtil.createText(\"the field \"), TooltipTextUtil.createText(\"e\", TooltipTextUtil.TextType.BOLD), TooltipTextUtil.createText(\" contains the regular expression \"),\n                TooltipTextUtil.createText(\"x\", TooltipTextUtil.TextType.BOLD), TooltipTextUtil.createText(\". \"), TooltipTextUtil.createText(\"The search is case insensitive.\"));\n        TextFlow description = createDescription(query, false, true);\n\n        assertTrue(TextFlowEqualityHelper.checkIfDescriptionEqualsExpectedTexts(description, expectedTexts));\n    }\n","realPath":"src/test/java/org/jabref/gui/search/GrammarBasedSearchRuleDescriberTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":88,"status":"B"},{"authorDate":"2017-11-28 01:58:17","commitOrder":1,"curCode":"    public void testComplexQuery() {\n        double textSize = 13;\n        String query = \"not a=b and c=e or e=\\\"x\\\"\";\n        List<Text> expectedTexts = Arrays.asList(TooltipTextUtil.createText(\"This search contains entries in which \"), TooltipTextUtil.createText(\"not \"), TooltipTextUtil.createText(\"the field \"), TooltipTextUtil.createText(\"a\", TooltipTextUtil.TextType.BOLD),\n                TooltipTextUtil.createText(\" contains the term \"), TooltipTextUtil.createText(\"b\", TooltipTextUtil.TextType.BOLD), TooltipTextUtil.createText(\" and \"), TooltipTextUtil.createText(\"the field \"), TooltipTextUtil.createText(\"c\", TooltipTextUtil.TextType.BOLD), TooltipTextUtil.createText(\" contains the term \"), TooltipTextUtil.createText(\"e\", TooltipTextUtil.TextType.BOLD),\n                TooltipTextUtil.createText(\" or \"), TooltipTextUtil.createText(\"the field \"), TooltipTextUtil.createText(\"e\", TooltipTextUtil.TextType.BOLD), TooltipTextUtil.createText(\" contains the term \"), TooltipTextUtil.createText(\"x\", TooltipTextUtil.TextType.BOLD), TooltipTextUtil.createText(\". \"), TooltipTextUtil.createText(\"The search is case insensitive.\"));\n        TextFlow description = createDescription(query, false, false);\n\n        assertTrue(TextFlowEqualityHelper.checkIfDescriptionEqualsExpectedTexts(description, expectedTexts));\n    }\n","date":"2017-11-28 01:58:17","endLine":122,"groupId":"3255","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testComplexQuery","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/08/31107b681980c1cd22e91c37451bd5fb459f29.src","preCode":"    public void testComplexQuery() {\n        double textSize = 13;\n        String query = \"not a=b and c=e or e=\\\"x\\\"\";\n        List<Text> expectedTexts = Arrays.asList(TooltipTextUtil.createText(\"This search contains entries in which \"), TooltipTextUtil.createText(\"not \"), TooltipTextUtil.createText(\"the field \"), TooltipTextUtil.createText(\"a\", TooltipTextUtil.TextType.BOLD),\n                TooltipTextUtil.createText(\" contains the term \"), TooltipTextUtil.createText(\"b\", TooltipTextUtil.TextType.BOLD), TooltipTextUtil.createText(\" and \"), TooltipTextUtil.createText(\"the field \"), TooltipTextUtil.createText(\"c\", TooltipTextUtil.TextType.BOLD), TooltipTextUtil.createText(\" contains the term \"), TooltipTextUtil.createText(\"e\", TooltipTextUtil.TextType.BOLD),\n                TooltipTextUtil.createText(\" or \"), TooltipTextUtil.createText(\"the field \"), TooltipTextUtil.createText(\"e\", TooltipTextUtil.TextType.BOLD), TooltipTextUtil.createText(\" contains the term \"), TooltipTextUtil.createText(\"x\", TooltipTextUtil.TextType.BOLD), TooltipTextUtil.createText(\". \"), TooltipTextUtil.createText(\"The search is case insensitive.\"));\n        TextFlow description = createDescription(query, false, false);\n\n        assertTrue(TextFlowEqualityHelper.checkIfDescriptionEqualsExpectedTexts(description, expectedTexts));\n    }\n","realPath":"src/test/java/org/jabref/gui/search/GrammarBasedSearchRuleDescriberTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":113,"status":"B"}],"commitId":"e944c7aab1df6e6ac5cc081808fe92449a39cd48","commitMessage":"@@@Fix for issue #3381 (#3443)\n\n* the SearchDescribers now return a TextFlow\n\n* moved the search.rules.describer package from logic to gui package\n  because the SearchDescriber now creates TextFlow Elements\n\n* moved the tests accordingly\n\n* modified creation of Tooltip in GlobalSearchBar to display the\n  TextFlow created by the SearchDescribers\n\n* SearchQuery now stores a TextFlow as description\n\n* Added a stub for compatibility in GroupDialog because it uses the\n  SearchQuery to get the description and needs an HTML string for\n  its Swing Tooltip\n\n* Styled the SearchBar Tooltip for readability\n\nIt uses an own style class to not change any other styled elements.\nStyling was choosen to look like the other (swing) tooltips.\n\n* refactor for better readability\n\n* removed description member of SearchQuery class\n\nbecause the description of a SearchQuery is a gui element.  it is not\nstored any more in this class. Everywhere the description is needed it\nis generated\n\n* add method to create HTML string from javafx Text\n\n* create HTML string from description for compat.\n\n* fixed formatting for style\n\n* created tests for TextUtil class\n\n* modified the SearchDescriber Implementations tests\n\nnow they work properly again and check the created Texts inside\nthe description TextFlow\n\n* split up testcases into single methods\n\n* using old localized strings again\n\nthese old localized strings containing html tags are broken up and\nconverted to Text objects to use in javafx TextFlow\n\n* added and modified tests\n\n* added changelog entry\n\n* changed syntax for getting SearchDescriber\n\nnow a whole SearchQuery object is sufficient to get a corresponding\nSearchDescriber\n\n* refactored for better style\n\n* javafx tooltips styled per css\n\nalso refactored the GlobalSearchBar tooltip to use this new styling\n\n* modified and restructured tests\n\nIt was necessary to modify the tests of the SearchDescriber\nImplementations and the TooltipTextUtil class because of the new css\nstyling for tooltips. Also refactored for better style\n","date":"2017-11-28 01:58:17","modifiedFileCount":"4","status":"B","submitter":"Julian Pfeifer"},{"authorTime":"2018-06-04 05:46:01","codes":[{"authorDate":"2018-06-04 05:46:01","commitOrder":2,"curCode":"    void testComplexQueryRegex() {\n        String query = \"not a=b and c=e or e=\\\"x\\\"\";\n        List<Text> expectedTexts = Arrays.asList(TooltipTextUtil.createText(\"This search contains entries in which \"), TooltipTextUtil.createText(\"not \"), TooltipTextUtil.createText(\"the field \"), TooltipTextUtil.createText(\"a\", TooltipTextUtil.TextType.BOLD),\n                TooltipTextUtil.createText(\" contains the regular expression \"), TooltipTextUtil.createText(\"b\", TooltipTextUtil.TextType.BOLD), TooltipTextUtil.createText(\" and \"), TooltipTextUtil.createText(\"the field \"), TooltipTextUtil.createText(\"c\", TooltipTextUtil.TextType.BOLD), TooltipTextUtil.createText(\" contains the regular expression \"),\n                TooltipTextUtil.createText(\"e\", TooltipTextUtil.TextType.BOLD), TooltipTextUtil.createText(\" or \"), TooltipTextUtil.createText(\"the field \"), TooltipTextUtil.createText(\"e\", TooltipTextUtil.TextType.BOLD), TooltipTextUtil.createText(\" contains the regular expression \"),\n                TooltipTextUtil.createText(\"x\", TooltipTextUtil.TextType.BOLD), TooltipTextUtil.createText(\". \"), TooltipTextUtil.createText(\"The search is case insensitive.\"));\n        TextFlow description = createDescription(query, false, true);\n\n        TextFlowEqualityHelper.assertEquals(expectedTexts, description);\n    }\n","date":"2018-06-04 05:46:01","endLine":103,"groupId":"3255","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testComplexQueryRegex","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/78/55be39bae58d2b1495f0a62b4c35c571e3c962.src","preCode":"    public void testComplexQueryRegex() {\n        double textSize = 13;\n        String query = \"not a=b and c=e or e=\\\"x\\\"\";\n        List<Text> expectedTexts = Arrays.asList(TooltipTextUtil.createText(\"This search contains entries in which \"), TooltipTextUtil.createText(\"not \"), TooltipTextUtil.createText(\"the field \"), TooltipTextUtil.createText(\"a\", TooltipTextUtil.TextType.BOLD),\n                TooltipTextUtil.createText(\" contains the regular expression \"), TooltipTextUtil.createText(\"b\", TooltipTextUtil.TextType.BOLD), TooltipTextUtil.createText(\" and \"), TooltipTextUtil.createText(\"the field \"), TooltipTextUtil.createText(\"c\", TooltipTextUtil.TextType.BOLD), TooltipTextUtil.createText(\" contains the regular expression \"),\n                TooltipTextUtil.createText(\"e\", TooltipTextUtil.TextType.BOLD), TooltipTextUtil.createText(\" or \"), TooltipTextUtil.createText(\"the field \"), TooltipTextUtil.createText(\"e\", TooltipTextUtil.TextType.BOLD), TooltipTextUtil.createText(\" contains the regular expression \"),\n                TooltipTextUtil.createText(\"x\", TooltipTextUtil.TextType.BOLD), TooltipTextUtil.createText(\". \"), TooltipTextUtil.createText(\"The search is case insensitive.\"));\n        TextFlow description = createDescription(query, false, true);\n\n        assertTrue(TextFlowEqualityHelper.checkIfDescriptionEqualsExpectedTexts(description, expectedTexts));\n    }\n","realPath":"src/test/java/org/jabref/gui/search/GrammarBasedSearchRuleDescriberTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":94,"status":"M"},{"authorDate":"2018-06-04 05:46:01","commitOrder":2,"curCode":"    void testComplexQuery() {\n        String query = \"not a=b and c=e or e=\\\"x\\\"\";\n        List<Text> expectedTexts = Arrays.asList(TooltipTextUtil.createText(\"This search contains entries in which \"), TooltipTextUtil.createText(\"not \"), TooltipTextUtil.createText(\"the field \"), TooltipTextUtil.createText(\"a\", TooltipTextUtil.TextType.BOLD),\n                TooltipTextUtil.createText(\" contains the term \"), TooltipTextUtil.createText(\"b\", TooltipTextUtil.TextType.BOLD), TooltipTextUtil.createText(\" and \"), TooltipTextUtil.createText(\"the field \"), TooltipTextUtil.createText(\"c\", TooltipTextUtil.TextType.BOLD), TooltipTextUtil.createText(\" contains the term \"), TooltipTextUtil.createText(\"e\", TooltipTextUtil.TextType.BOLD),\n                TooltipTextUtil.createText(\" or \"), TooltipTextUtil.createText(\"the field \"), TooltipTextUtil.createText(\"e\", TooltipTextUtil.TextType.BOLD), TooltipTextUtil.createText(\" contains the term \"), TooltipTextUtil.createText(\"x\", TooltipTextUtil.TextType.BOLD), TooltipTextUtil.createText(\". \"), TooltipTextUtil.createText(\"The search is case insensitive.\"));\n        TextFlow description = createDescription(query, false, false);\n\n        TextFlowEqualityHelper.assertEquals(expectedTexts, description);\n    }\n","date":"2018-06-04 05:46:01","endLine":125,"groupId":"3255","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testComplexQuery","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/78/55be39bae58d2b1495f0a62b4c35c571e3c962.src","preCode":"    public void testComplexQuery() {\n        double textSize = 13;\n        String query = \"not a=b and c=e or e=\\\"x\\\"\";\n        List<Text> expectedTexts = Arrays.asList(TooltipTextUtil.createText(\"This search contains entries in which \"), TooltipTextUtil.createText(\"not \"), TooltipTextUtil.createText(\"the field \"), TooltipTextUtil.createText(\"a\", TooltipTextUtil.TextType.BOLD),\n                TooltipTextUtil.createText(\" contains the term \"), TooltipTextUtil.createText(\"b\", TooltipTextUtil.TextType.BOLD), TooltipTextUtil.createText(\" and \"), TooltipTextUtil.createText(\"the field \"), TooltipTextUtil.createText(\"c\", TooltipTextUtil.TextType.BOLD), TooltipTextUtil.createText(\" contains the term \"), TooltipTextUtil.createText(\"e\", TooltipTextUtil.TextType.BOLD),\n                TooltipTextUtil.createText(\" or \"), TooltipTextUtil.createText(\"the field \"), TooltipTextUtil.createText(\"e\", TooltipTextUtil.TextType.BOLD), TooltipTextUtil.createText(\" contains the term \"), TooltipTextUtil.createText(\"x\", TooltipTextUtil.TextType.BOLD), TooltipTextUtil.createText(\". \"), TooltipTextUtil.createText(\"The search is case insensitive.\"));\n        TextFlow description = createDescription(query, false, false);\n\n        assertTrue(TextFlowEqualityHelper.checkIfDescriptionEqualsExpectedTexts(description, expectedTexts));\n    }\n","realPath":"src/test/java/org/jabref/gui/search/GrammarBasedSearchRuleDescriberTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":117,"status":"M"}],"commitId":"a989aa42246c4dcf6eadc147d2f612de44a07b94","commitMessage":"@@@Merge remote-tracking branch 'origin/maintable-beta'\n\n# Conflicts:\n#\tsrc/main/java/org/jabref/gui/exporter/ExportAction.java\n#\tsrc/main/java/org/jabref/gui/exporter/ExportToClipboardAction.java\n#\tsrc/main/java/org/jabref/gui/exporter/SaveDatabaseAction.java\n#\tsrc/main/java/org/jabref/gui/importer/ImportFormats.java\n#\tsrc/main/java/org/jabref/gui/importer/actions/OpenDatabaseAction.java\n#\tsrc/main/java/org/jabref/gui/openoffice/StyleSelectDialog.java\n#\tsrc/main/java/org/jabref/gui/preftabs/PreferencesDialog.java\n#\tsrc/main/java/org/jabref/gui/protectedterms/NewProtectedTermsFileDialog.java\n#\tsrc/main/java/org/jabref/gui/shared/ConnectToSharedDatabaseDialog.java\n","date":"2018-06-04 05:46:01","modifiedFileCount":"316","status":"M","submitter":"Oliver Kopp"},{"authorTime":"2021-07-15 03:49:30","codes":[{"authorDate":"2021-07-15 03:49:30","commitOrder":3,"curCode":"    void testComplexQueryRegex() {\n        String query = \"not a=b and c=e or e=\\\"x\\\"\";\n        List<Text> expectedTexts = Arrays.asList(TooltipTextUtil.createText(\"This search contains entries in which \"), TooltipTextUtil.createText(\"not \"), TooltipTextUtil.createText(\"the field \"), TooltipTextUtil.createText(\"a\", TooltipTextUtil.TextType.BOLD),\n                TooltipTextUtil.createText(\" contains the regular expression \"), TooltipTextUtil.createText(\"b\", TooltipTextUtil.TextType.BOLD), TooltipTextUtil.createText(\" and \"), TooltipTextUtil.createText(\"the field \"), TooltipTextUtil.createText(\"c\", TooltipTextUtil.TextType.BOLD), TooltipTextUtil.createText(\" contains the regular expression \"),\n                TooltipTextUtil.createText(\"e\", TooltipTextUtil.TextType.BOLD), TooltipTextUtil.createText(\" or \"), TooltipTextUtil.createText(\"the field \"), TooltipTextUtil.createText(\"e\", TooltipTextUtil.TextType.BOLD), TooltipTextUtil.createText(\" contains the regular expression \"),\n                TooltipTextUtil.createText(\"x\", TooltipTextUtil.TextType.BOLD), TooltipTextUtil.createText(\". \"), TooltipTextUtil.createText(\"The search is case insensitive.\"));\n        TextFlow description = createDescription(query, EnumSet.of(SearchRules.SearchFlags.REGULAR_EXPRESSION));\n\n        TextFlowEqualityHelper.assertEquals(expectedTexts, description);\n    }\n","date":"2021-07-15 03:49:30","endLine":108,"groupId":"1046","id":5,"instanceNumber":1,"isCurCommit":1,"methodName":"testComplexQueryRegex","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/ca/d5aa79e8941a1c1cddd28dc81e85c46272b90a.src","preCode":"    void testComplexQueryRegex() {\n        String query = \"not a=b and c=e or e=\\\"x\\\"\";\n        List<Text> expectedTexts = Arrays.asList(TooltipTextUtil.createText(\"This search contains entries in which \"), TooltipTextUtil.createText(\"not \"), TooltipTextUtil.createText(\"the field \"), TooltipTextUtil.createText(\"a\", TooltipTextUtil.TextType.BOLD),\n                TooltipTextUtil.createText(\" contains the regular expression \"), TooltipTextUtil.createText(\"b\", TooltipTextUtil.TextType.BOLD), TooltipTextUtil.createText(\" and \"), TooltipTextUtil.createText(\"the field \"), TooltipTextUtil.createText(\"c\", TooltipTextUtil.TextType.BOLD), TooltipTextUtil.createText(\" contains the regular expression \"),\n                TooltipTextUtil.createText(\"e\", TooltipTextUtil.TextType.BOLD), TooltipTextUtil.createText(\" or \"), TooltipTextUtil.createText(\"the field \"), TooltipTextUtil.createText(\"e\", TooltipTextUtil.TextType.BOLD), TooltipTextUtil.createText(\" contains the regular expression \"),\n                TooltipTextUtil.createText(\"x\", TooltipTextUtil.TextType.BOLD), TooltipTextUtil.createText(\". \"), TooltipTextUtil.createText(\"The search is case insensitive.\"));\n        TextFlow description = createDescription(query, false, true);\n\n        TextFlowEqualityHelper.assertEquals(expectedTexts, description);\n    }\n","realPath":"src/test/java/org/jabref/gui/search/GrammarBasedSearchRuleDescriberTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":99,"status":"M"},{"authorDate":"2021-07-15 03:49:30","commitOrder":3,"curCode":"    void testComplexQuery() {\n        String query = \"not a=b and c=e or e=\\\"x\\\"\";\n        List<Text> expectedTexts = Arrays.asList(TooltipTextUtil.createText(\"This search contains entries in which \"), TooltipTextUtil.createText(\"not \"), TooltipTextUtil.createText(\"the field \"), TooltipTextUtil.createText(\"a\", TooltipTextUtil.TextType.BOLD),\n                TooltipTextUtil.createText(\" contains the term \"), TooltipTextUtil.createText(\"b\", TooltipTextUtil.TextType.BOLD), TooltipTextUtil.createText(\" and \"), TooltipTextUtil.createText(\"the field \"), TooltipTextUtil.createText(\"c\", TooltipTextUtil.TextType.BOLD), TooltipTextUtil.createText(\" contains the term \"), TooltipTextUtil.createText(\"e\", TooltipTextUtil.TextType.BOLD),\n                TooltipTextUtil.createText(\" or \"), TooltipTextUtil.createText(\"the field \"), TooltipTextUtil.createText(\"e\", TooltipTextUtil.TextType.BOLD), TooltipTextUtil.createText(\" contains the term \"), TooltipTextUtil.createText(\"x\", TooltipTextUtil.TextType.BOLD), TooltipTextUtil.createText(\". \"), TooltipTextUtil.createText(\"The search is case insensitive.\"));\n        TextFlow description = createDescription(query, EnumSet.noneOf(SearchFlags.class));\n\n        TextFlowEqualityHelper.assertEquals(expectedTexts, description);\n    }\n","date":"2021-07-15 03:49:30","endLine":130,"groupId":"1046","id":6,"instanceNumber":2,"isCurCommit":1,"methodName":"testComplexQuery","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/ca/d5aa79e8941a1c1cddd28dc81e85c46272b90a.src","preCode":"    void testComplexQuery() {\n        String query = \"not a=b and c=e or e=\\\"x\\\"\";\n        List<Text> expectedTexts = Arrays.asList(TooltipTextUtil.createText(\"This search contains entries in which \"), TooltipTextUtil.createText(\"not \"), TooltipTextUtil.createText(\"the field \"), TooltipTextUtil.createText(\"a\", TooltipTextUtil.TextType.BOLD),\n                TooltipTextUtil.createText(\" contains the term \"), TooltipTextUtil.createText(\"b\", TooltipTextUtil.TextType.BOLD), TooltipTextUtil.createText(\" and \"), TooltipTextUtil.createText(\"the field \"), TooltipTextUtil.createText(\"c\", TooltipTextUtil.TextType.BOLD), TooltipTextUtil.createText(\" contains the term \"), TooltipTextUtil.createText(\"e\", TooltipTextUtil.TextType.BOLD),\n                TooltipTextUtil.createText(\" or \"), TooltipTextUtil.createText(\"the field \"), TooltipTextUtil.createText(\"e\", TooltipTextUtil.TextType.BOLD), TooltipTextUtil.createText(\" contains the term \"), TooltipTextUtil.createText(\"x\", TooltipTextUtil.TextType.BOLD), TooltipTextUtil.createText(\". \"), TooltipTextUtil.createText(\"The search is case insensitive.\"));\n        TextFlow description = createDescription(query, false, false);\n\n        TextFlowEqualityHelper.assertEquals(expectedTexts, description);\n    }\n","realPath":"src/test/java/org/jabref/gui/search/GrammarBasedSearchRuleDescriberTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":122,"status":"M"}],"commitId":"ddce5735b09cfec22ef55d15431582f19cb54208","commitMessage":"@@@Search in PDF Files (#2838)\n\nCo-authored-by: braunch <braunch.dev@gmail.com>\nCo-authored-by: Oliver Kopp <kopp.dev@gmail.com>\nCo-authored-by: Benedikt Tutzer <btut@users.noreply.github.com>\nCo-authored-by: Carl Christian Snethlage <50491877+calixtus@users.noreply.github.com>\nCo-authored-by: Christoph <siedlerkiller@gmail.com>","date":"2021-07-15 03:49:30","modifiedFileCount":"39","status":"M","submitter":"Linus Dietz"}]
