[{"authorTime":"2018-01-03 02:38:01","codes":[{"authorDate":"2018-01-03 02:38:01","commitOrder":1,"curCode":"    public void simulateUpdateOnNoLongerExistingEntry() {\n        BibEntry bibEntryOfClientA = getBibEntryExample(1);\n        \r\n        clientContextA.getDatabase().insertEntry(bibEntryOfClientA);\n        \r\n        clientContextB.getDBMSSynchronizer().pullChanges();\n\n        assertFalse(clientContextA.getDatabase().getEntries().isEmpty());\n        assertFalse(clientContextB.getDatabase().getEntries().isEmpty());\n        assertEquals(clientContextA.getDatabase().getEntries(), clientContextB.getDatabase().getEntries());\n\n        \r\n        clientContextA.getDatabase().removeEntry(bibEntryOfClientA);\n\n        assertFalse(clientContextB.getDatabase().getEntries().isEmpty());\n        assertNull(eventListenerB.getSharedEntryNotPresentEvent());\n        \r\n        BibEntry bibEntryOfClientB = clientContextB.getDatabase().getEntries().get(0);\n        bibEntryOfClientB.setField(\"year\", \"2009\");\n\n        \r\n        assertNotNull(eventListenerB.getSharedEntryNotPresentEvent());\n        assertEquals(bibEntryOfClientB, eventListenerB.getSharedEntryNotPresentEvent().getBibEntry());\n    }\n","date":"2018-01-03 02:38:01","endLine":136,"groupId":"2620","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"simulateUpdateOnNoLongerExistingEntry","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/48/e99842b5b96aba27f90b0f4d023842d5a46bf3.src","preCode":"    public void simulateUpdateOnNoLongerExistingEntry() {\n        BibEntry bibEntryOfClientA = getBibEntryExample(1);\n        \r\n        clientContextA.getDatabase().insertEntry(bibEntryOfClientA);\n        \r\n        clientContextB.getDBMSSynchronizer().pullChanges();\n\n        assertFalse(clientContextA.getDatabase().getEntries().isEmpty());\n        assertFalse(clientContextB.getDatabase().getEntries().isEmpty());\n        assertEquals(clientContextA.getDatabase().getEntries(), clientContextB.getDatabase().getEntries());\n\n        \r\n        clientContextA.getDatabase().removeEntry(bibEntryOfClientA);\n\n        assertFalse(clientContextB.getDatabase().getEntries().isEmpty());\n        assertNull(eventListenerB.getSharedEntryNotPresentEvent());\n        \r\n        BibEntry bibEntryOfClientB = clientContextB.getDatabase().getEntries().get(0);\n        bibEntryOfClientB.setField(\"year\", \"2009\");\n\n        \r\n        assertNotNull(eventListenerB.getSharedEntryNotPresentEvent());\n        assertEquals(bibEntryOfClientB, eventListenerB.getSharedEntryNotPresentEvent().getBibEntry());\n    }\n","realPath":"src/test/java/org/jabref/logic/shared/SynchronizationTestSimulator.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":113,"status":"B"},{"authorDate":"2018-01-03 02:38:01","commitOrder":1,"curCode":"    public void simulateEntryChangeConflicts() {\n        BibEntry bibEntryOfClientA = getBibEntryExample(1);\n        \r\n        clientContextA.getDatabase().insertEntry(bibEntryOfClientA);\n        \r\n        clientContextB.getDBMSSynchronizer().pullChanges();\n\n        \r\n        bibEntryOfClientA.setField(\"year\", \"2001\");\n\n        \r\n        \r\n        assertFalse(clientContextB.getDatabase().getEntries().isEmpty());\n\n        assertNull(eventListenerB.getUpdateRefusedEvent());\n\n        BibEntry bibEntryOfClientB = clientContextB.getDatabase().getEntries().get(0);\n        \r\n        bibEntryOfClientB.setField(\"year\", \"2016\");\n\n        \r\n        \r\n        assertNotNull(eventListenerB.getUpdateRefusedEvent());\n    }\n","date":"2018-01-03 02:38:01","endLine":162,"groupId":"7206","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"simulateEntryChangeConflicts","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/48/e99842b5b96aba27f90b0f4d023842d5a46bf3.src","preCode":"    public void simulateEntryChangeConflicts() {\n        BibEntry bibEntryOfClientA = getBibEntryExample(1);\n        \r\n        clientContextA.getDatabase().insertEntry(bibEntryOfClientA);\n        \r\n        clientContextB.getDBMSSynchronizer().pullChanges();\n\n        \r\n        bibEntryOfClientA.setField(\"year\", \"2001\");\n\n        \r\n        \r\n        assertFalse(clientContextB.getDatabase().getEntries().isEmpty());\n\n        assertNull(eventListenerB.getUpdateRefusedEvent());\n\n        BibEntry bibEntryOfClientB = clientContextB.getDatabase().getEntries().get(0);\n        \r\n        bibEntryOfClientB.setField(\"year\", \"2016\");\n\n        \r\n        \r\n        assertNotNull(eventListenerB.getUpdateRefusedEvent());\n    }\n","realPath":"src/test/java/org/jabref/logic/shared/SynchronizationTestSimulator.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":139,"status":"B"}],"commitId":"c7517154ffc54aa1b4b2b0103f5e7b316fff61be","commitMessage":"@@@Refactor shared package into the architecture (#3523)\n\n* Refactor shared package into the architecture\n\n* Add DatabaseConnectionProperties to DatabaseSynchronizer interface\n\n* Encapsulate SQLException in IllegalStateException\n","date":"2018-01-03 02:38:01","modifiedFileCount":"12","status":"B","submitter":"J?rg Lenhard"},{"authorTime":"2019-08-02 15:20:10","codes":[{"authorDate":"2019-08-02 15:20:10","commitOrder":2,"curCode":"    public void simulateUpdateOnNoLongerExistingEntry() {\n        BibEntry bibEntryOfClientA = getBibEntryExample(1);\n        \r\n        clientContextA.getDatabase().insertEntry(bibEntryOfClientA);\n        \r\n        clientContextB.getDBMSSynchronizer().pullChanges();\n\n        assertFalse(clientContextA.getDatabase().getEntries().isEmpty());\n        assertFalse(clientContextB.getDatabase().getEntries().isEmpty());\n        assertEquals(clientContextA.getDatabase().getEntries(), clientContextB.getDatabase().getEntries());\n\n        \r\n        clientContextA.getDatabase().removeEntry(bibEntryOfClientA);\n\n        assertFalse(clientContextB.getDatabase().getEntries().isEmpty());\n        assertNull(eventListenerB.getSharedEntryNotPresentEvent());\n        \r\n        BibEntry bibEntryOfClientB = clientContextB.getDatabase().getEntries().get(0);\n        bibEntryOfClientB.setField(StandardField.YEAR, \"2009\");\n\n        \r\n        assertNotNull(eventListenerB.getSharedEntryNotPresentEvent());\n        assertEquals(bibEntryOfClientB, eventListenerB.getSharedEntryNotPresentEvent().getBibEntry());\n    }\n","date":"2019-08-02 15:20:10","endLine":137,"groupId":"2620","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"simulateUpdateOnNoLongerExistingEntry","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/ea/8f44520536b893c2798b2e9ad6ce13355a4820.src","preCode":"    public void simulateUpdateOnNoLongerExistingEntry() {\n        BibEntry bibEntryOfClientA = getBibEntryExample(1);\n        \r\n        clientContextA.getDatabase().insertEntry(bibEntryOfClientA);\n        \r\n        clientContextB.getDBMSSynchronizer().pullChanges();\n\n        assertFalse(clientContextA.getDatabase().getEntries().isEmpty());\n        assertFalse(clientContextB.getDatabase().getEntries().isEmpty());\n        assertEquals(clientContextA.getDatabase().getEntries(), clientContextB.getDatabase().getEntries());\n\n        \r\n        clientContextA.getDatabase().removeEntry(bibEntryOfClientA);\n\n        assertFalse(clientContextB.getDatabase().getEntries().isEmpty());\n        assertNull(eventListenerB.getSharedEntryNotPresentEvent());\n        \r\n        BibEntry bibEntryOfClientB = clientContextB.getDatabase().getEntries().get(0);\n        bibEntryOfClientB.setField(\"year\", \"2009\");\n\n        \r\n        assertNotNull(eventListenerB.getSharedEntryNotPresentEvent());\n        assertEquals(bibEntryOfClientB, eventListenerB.getSharedEntryNotPresentEvent().getBibEntry());\n    }\n","realPath":"src/test/java/org/jabref/logic/shared/SynchronizationTestSimulator.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":114,"status":"M"},{"authorDate":"2019-08-02 15:20:10","commitOrder":2,"curCode":"    public void simulateEntryChangeConflicts() {\n        BibEntry bibEntryOfClientA = getBibEntryExample(1);\n        \r\n        clientContextA.getDatabase().insertEntry(bibEntryOfClientA);\n        \r\n        clientContextB.getDBMSSynchronizer().pullChanges();\n\n        \r\n        bibEntryOfClientA.setField(StandardField.YEAR, \"2001\");\n\n        \r\n        \r\n        assertFalse(clientContextB.getDatabase().getEntries().isEmpty());\n\n        assertNull(eventListenerB.getUpdateRefusedEvent());\n\n        BibEntry bibEntryOfClientB = clientContextB.getDatabase().getEntries().get(0);\n        \r\n        bibEntryOfClientB.setField(StandardField.YEAR, \"2016\");\n\n        \r\n        \r\n        assertNotNull(eventListenerB.getUpdateRefusedEvent());\n    }\n","date":"2019-08-02 15:20:10","endLine":163,"groupId":"13013","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"simulateEntryChangeConflicts","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/ea/8f44520536b893c2798b2e9ad6ce13355a4820.src","preCode":"    public void simulateEntryChangeConflicts() {\n        BibEntry bibEntryOfClientA = getBibEntryExample(1);\n        \r\n        clientContextA.getDatabase().insertEntry(bibEntryOfClientA);\n        \r\n        clientContextB.getDBMSSynchronizer().pullChanges();\n\n        \r\n        bibEntryOfClientA.setField(\"year\", \"2001\");\n\n        \r\n        \r\n        assertFalse(clientContextB.getDatabase().getEntries().isEmpty());\n\n        assertNull(eventListenerB.getUpdateRefusedEvent());\n\n        BibEntry bibEntryOfClientB = clientContextB.getDatabase().getEntries().get(0);\n        \r\n        bibEntryOfClientB.setField(\"year\", \"2016\");\n\n        \r\n        \r\n        assertNotNull(eventListenerB.getUpdateRefusedEvent());\n    }\n","realPath":"src/test/java/org/jabref/logic/shared/SynchronizationTestSimulator.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":140,"status":"M"}],"commitId":"4b39b78e4afcd6c36b385f5c46f1d9a4eac2e29b","commitMessage":"@@@Move to extended enums for fields and entry types (#5148)\n\n* Introduce interface for fields\n\n* Continue using fields interface instead of strings\n\n* Introduce OrFields class\n\n* Move FieldProperty\n\n* Convert entry types to extended enum\n\n* Start fixing build\n\n* Fix build\n\n* Start fixing tests\n\n* Everything compiles again\n\n* Make model tests pass\n\n* Fix most tests\n\n* Fix build\n\n* Fix a few more tests\n\n* Fix a few more tests\n\n* Fix a few more tests\n\n* Fix a few more tests\n\n* Fix checkstyle issues\n\n* Fix more tests\n\n* Fix more tests\n\n* Disable test that fails on CI\n\n* Disable test that fails on CI\n","date":"2019-08-02 15:20:10","modifiedFileCount":"439","status":"M","submitter":"Tobias Diez"},{"authorTime":"2019-08-02 15:20:10","codes":[{"authorDate":"2019-11-11 22:57:18","commitOrder":3,"curCode":"    public void simulateUpdateOnNoLongerExistingEntry() {\n        BibEntry bibEntryOfClientA = getBibEntryExample(1);\n        \r\n        clientContextA.getDatabase().insertEntry(bibEntryOfClientA);\n        \r\n        clientContextB.getDBMSSynchronizer().pullChanges();\n\n        assertFalse(clientContextA.getDatabase().getEntries().isEmpty());\n        assertFalse(clientContextB.getDatabase().getEntries().isEmpty());\n        assertEquals(clientContextA.getDatabase().getEntries(), clientContextB.getDatabase().getEntries());\n\n        \r\n        clientContextA.getDatabase().removeEntry(bibEntryOfClientA);\n\n        assertFalse(clientContextB.getDatabase().getEntries().isEmpty());\n        assertNull(eventListenerB.getSharedEntriesNotPresentEvent());\n        \r\n        BibEntry bibEntryOfClientB = clientContextB.getDatabase().getEntries().get(0);\n        bibEntryOfClientB.setField(StandardField.YEAR, \"2009\");\n\n        \r\n        assertNotNull(eventListenerB.getSharedEntriesNotPresentEvent());\n        assertEquals(bibEntryOfClientB, eventListenerB.getSharedEntriesNotPresentEvent().getBibEntries());\n    }\n","date":"2019-11-11 22:57:18","endLine":137,"groupId":"2620","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"simulateUpdateOnNoLongerExistingEntry","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/78/e11ebefa75a2f6d89c83c96241361a07059005.src","preCode":"    public void simulateUpdateOnNoLongerExistingEntry() {\n        BibEntry bibEntryOfClientA = getBibEntryExample(1);\n        \r\n        clientContextA.getDatabase().insertEntry(bibEntryOfClientA);\n        \r\n        clientContextB.getDBMSSynchronizer().pullChanges();\n\n        assertFalse(clientContextA.getDatabase().getEntries().isEmpty());\n        assertFalse(clientContextB.getDatabase().getEntries().isEmpty());\n        assertEquals(clientContextA.getDatabase().getEntries(), clientContextB.getDatabase().getEntries());\n\n        \r\n        clientContextA.getDatabase().removeEntry(bibEntryOfClientA);\n\n        assertFalse(clientContextB.getDatabase().getEntries().isEmpty());\n        assertNull(eventListenerB.getSharedEntryNotPresentEvent());\n        \r\n        BibEntry bibEntryOfClientB = clientContextB.getDatabase().getEntries().get(0);\n        bibEntryOfClientB.setField(StandardField.YEAR, \"2009\");\n\n        \r\n        assertNotNull(eventListenerB.getSharedEntryNotPresentEvent());\n        assertEquals(bibEntryOfClientB, eventListenerB.getSharedEntryNotPresentEvent().getBibEntry());\n    }\n","realPath":"src/test/java/org/jabref/logic/shared/SynchronizationTestSimulator.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":114,"status":"M"},{"authorDate":"2019-08-02 15:20:10","commitOrder":3,"curCode":"    public void simulateEntryChangeConflicts() {\n        BibEntry bibEntryOfClientA = getBibEntryExample(1);\n        \r\n        clientContextA.getDatabase().insertEntry(bibEntryOfClientA);\n        \r\n        clientContextB.getDBMSSynchronizer().pullChanges();\n\n        \r\n        bibEntryOfClientA.setField(StandardField.YEAR, \"2001\");\n\n        \r\n        \r\n        assertFalse(clientContextB.getDatabase().getEntries().isEmpty());\n\n        assertNull(eventListenerB.getUpdateRefusedEvent());\n\n        BibEntry bibEntryOfClientB = clientContextB.getDatabase().getEntries().get(0);\n        \r\n        bibEntryOfClientB.setField(StandardField.YEAR, \"2016\");\n\n        \r\n        \r\n        assertNotNull(eventListenerB.getUpdateRefusedEvent());\n    }\n","date":"2019-08-02 15:20:10","endLine":163,"groupId":"13013","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"simulateEntryChangeConflicts","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/ea/8f44520536b893c2798b2e9ad6ce13355a4820.src","preCode":"    public void simulateEntryChangeConflicts() {\n        BibEntry bibEntryOfClientA = getBibEntryExample(1);\n        \r\n        clientContextA.getDatabase().insertEntry(bibEntryOfClientA);\n        \r\n        clientContextB.getDBMSSynchronizer().pullChanges();\n\n        \r\n        bibEntryOfClientA.setField(StandardField.YEAR, \"2001\");\n\n        \r\n        \r\n        assertFalse(clientContextB.getDatabase().getEntries().isEmpty());\n\n        assertNull(eventListenerB.getUpdateRefusedEvent());\n\n        BibEntry bibEntryOfClientB = clientContextB.getDatabase().getEntries().get(0);\n        \r\n        bibEntryOfClientB.setField(StandardField.YEAR, \"2016\");\n\n        \r\n        \r\n        assertNotNull(eventListenerB.getUpdateRefusedEvent());\n    }\n","realPath":"src/test/java/org/jabref/logic/shared/SynchronizationTestSimulator.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":140,"status":"N"}],"commitId":"3d8a09d5ca2ed0522992b47e740169396a03da79","commitMessage":"@@@Refactor EntryEvents - removal part (#5410)\n\n* Initial changes to remove entry functionality\n\n* Fix logic error in KeyChangeListener\n\n* Fix logic error in BasePanel\n\n* Changes to tests\n\n* Fix typo\n\n* Move remove entry calls to batch version\n\n* Un-propagate for loop in KeyChangeListener\n\n* Finalize changes to SharedEntriesNotPresentEvent\n\n* Fix bug\n\n* Fix other compile errors\n\n* Fix bug and update tests\n\n* Fix tests\n\n* Fix test omission\n\n* Update l10n\n\n* For loop to citationStyle\n\n* Add comment for method not working\n\n* Clarify var name\n\n* Allow single entry for undo\n\n* Replace compound edit undo with normal undo in BasePanel\n\n* Typo\n\n* Simplify loop in DBMSSynchronizer\n\n* Use if instead of stream\n\n* Pluralize Javadoc\n\n* EntryEvent -> EntriesEvent in Javadoc.  comments.  and var names\n\n* Make imports explicit in BasePanel\n\n* Final EntriesRemovedEvent fixes\n\n* Fix checkStyleMain\n\n* More checkStyle fixes\n\n* More fixes\n\n* Move List coercion into DuplicateSearchResult method\n\n* Fix typo\n\n* Fix pesky BibDatabaseTest error with setStrings\n\n* Fixed BibDatabase Javadoc\n","date":"2019-11-11 22:57:18","modifiedFileCount":"25","status":"M","submitter":"Abraham Polk"},{"authorTime":"2019-11-12 06:47:34","codes":[{"authorDate":"2019-11-12 06:47:34","commitOrder":4,"curCode":"    public void simulateUpdateOnNoLongerExistingEntry(DBMSType dbmsType, DBMSConnection dbmsConnection, DBMSProcessor dbmsProcessor) throws Exception {\n        setUp(dbmsType, dbmsConnection, dbmsProcessor);\n\n        BibEntry bibEntryOfClientA = getBibEntryExample(1);\n        \r\n        clientContextA.getDatabase().insertEntry(bibEntryOfClientA);\n        \r\n        clientContextB.getDBMSSynchronizer().pullChanges();\n\n        assertFalse(clientContextA.getDatabase().getEntries().isEmpty());\n        assertFalse(clientContextB.getDatabase().getEntries().isEmpty());\n        assertEquals(clientContextA.getDatabase().getEntries(), clientContextB.getDatabase().getEntries());\n\n        \r\n        clientContextA.getDatabase().removeEntry(bibEntryOfClientA);\n\n        assertFalse(clientContextB.getDatabase().getEntries().isEmpty());\n        assertNull(eventListenerB.getSharedEntriesNotPresentEvent());\n        \r\n        BibEntry bibEntryOfClientB = clientContextB.getDatabase().getEntries().get(0);\n        bibEntryOfClientB.setField(StandardField.YEAR, \"2009\");\n\n        \r\n        assertNotNull(eventListenerB.getSharedEntriesNotPresentEvent());\n        assertEquals(bibEntryOfClientB, eventListenerB.getSharedEntriesNotPresentEvent().getBibEntries());\n\n        clear(dbmsConnection);\n    }\n","date":"2019-11-12 06:47:34","endLine":139,"groupId":"2620","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"simulateUpdateOnNoLongerExistingEntry","params":"(DBMSTypedbmsType@DBMSConnectiondbmsConnection@DBMSProcessordbmsProcessor)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/fb/8bf59b0d5743f6117cbb4cf5af04425d892a93.src","preCode":"    public void simulateUpdateOnNoLongerExistingEntry() {\n        BibEntry bibEntryOfClientA = getBibEntryExample(1);\n        \r\n        clientContextA.getDatabase().insertEntry(bibEntryOfClientA);\n        \r\n        clientContextB.getDBMSSynchronizer().pullChanges();\n\n        assertFalse(clientContextA.getDatabase().getEntries().isEmpty());\n        assertFalse(clientContextB.getDatabase().getEntries().isEmpty());\n        assertEquals(clientContextA.getDatabase().getEntries(), clientContextB.getDatabase().getEntries());\n\n        \r\n        clientContextA.getDatabase().removeEntry(bibEntryOfClientA);\n\n        assertFalse(clientContextB.getDatabase().getEntries().isEmpty());\n        assertNull(eventListenerB.getSharedEntriesNotPresentEvent());\n        \r\n        BibEntry bibEntryOfClientB = clientContextB.getDatabase().getEntries().get(0);\n        bibEntryOfClientB.setField(StandardField.YEAR, \"2009\");\n\n        \r\n        assertNotNull(eventListenerB.getSharedEntriesNotPresentEvent());\n        assertEquals(bibEntryOfClientB, eventListenerB.getSharedEntriesNotPresentEvent().getBibEntries());\n    }\n","realPath":"src/test/java/org/jabref/logic/shared/SynchronizationTestSimulator.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":112,"status":"M"},{"authorDate":"2019-11-12 06:47:34","commitOrder":4,"curCode":"    public void simulateEntryChangeConflicts(DBMSType dbmsType, DBMSConnection dbmsConnection, DBMSProcessor dbmsProcessor) throws Exception {\n        setUp(dbmsType, dbmsConnection, dbmsProcessor);\n\n        BibEntry bibEntryOfClientA = getBibEntryExample(1);\n        \r\n        clientContextA.getDatabase().insertEntry(bibEntryOfClientA);\n        \r\n        clientContextB.getDBMSSynchronizer().pullChanges();\n\n        \r\n        bibEntryOfClientA.setField(StandardField.YEAR, \"2001\");\n\n        \r\n        \r\n        assertFalse(clientContextB.getDatabase().getEntries().isEmpty());\n\n        assertNull(eventListenerB.getUpdateRefusedEvent());\n\n        BibEntry bibEntryOfClientB = clientContextB.getDatabase().getEntries().get(0);\n        \r\n        bibEntryOfClientB.setField(StandardField.YEAR, \"2016\");\n\n        \r\n        \r\n        assertNotNull(eventListenerB.getUpdateRefusedEvent());\n\n        clear(dbmsConnection);\n    }\n","date":"2019-11-12 06:47:34","endLine":170,"groupId":"13013","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"simulateEntryChangeConflicts","params":"(DBMSTypedbmsType@DBMSConnectiondbmsConnection@DBMSProcessordbmsProcessor)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/fb/8bf59b0d5743f6117cbb4cf5af04425d892a93.src","preCode":"    public void simulateEntryChangeConflicts() {\n        BibEntry bibEntryOfClientA = getBibEntryExample(1);\n        \r\n        clientContextA.getDatabase().insertEntry(bibEntryOfClientA);\n        \r\n        clientContextB.getDBMSSynchronizer().pullChanges();\n\n        \r\n        bibEntryOfClientA.setField(StandardField.YEAR, \"2001\");\n\n        \r\n        \r\n        assertFalse(clientContextB.getDatabase().getEntries().isEmpty());\n\n        assertNull(eventListenerB.getUpdateRefusedEvent());\n\n        BibEntry bibEntryOfClientB = clientContextB.getDatabase().getEntries().get(0);\n        \r\n        bibEntryOfClientB.setField(StandardField.YEAR, \"2016\");\n\n        \r\n        \r\n        assertNotNull(eventListenerB.getUpdateRefusedEvent());\n    }\n","realPath":"src/test/java/org/jabref/logic/shared/SynchronizationTestSimulator.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":143,"status":"M"}],"commitId":"04015b02100913ab6ac562548f48bea546323fc8","commitMessage":"@@@[WIP ] Convert remaining tests to junit 5 (#5394)\n\n* [WIP] Convert remaining tests to junit 5\n\nLet's see if that works\n\n* remove junit 4\n\n* temporaily add system.out.prinltn to test if all are run\n\n* fix gradle not executing tests correclty\n\n* fix gradle syntax error\n\n* add more logging\n\n* fix psql driver name and url\n\n* Manually call setup and clear in each test\n\n* fix typo and call clear\n\n* fix unmodifable error\n\n* fix field map error\n\n* fix id\n\n* SetID does not store value as internal id field\n\n* add some comments for further debugging hints\n\ncall clear in setup to ensure empty tables and no leftovers from failures\n\n* fix copy paste error\n\n* Cleanup code\n\n* Don't allow codecov to fail\n\n* Temporarily allow failure of database tests\n\n* Readd database test to codecov\n\n* Try to ignore failures the other way\n\n* Or maybe this way?\n\n* Yet another try\n\n* Well...maybe now\n\nCo-Authored-By: Tobias Diez <tobiasdiez@gmx.de>\n","date":"2019-11-12 06:47:34","modifiedFileCount":"7","status":"M","submitter":"Christoph"},{"authorTime":"2019-11-29 23:58:12","codes":[{"authorDate":"2019-11-29 23:58:12","commitOrder":5,"curCode":"    public void simulateUpdateOnNoLongerExistingEntry() throws Exception {\n        BibEntry bibEntryOfClientA = getBibEntryExample(1);\n        \r\n        clientContextA.getDatabase().insertEntry(bibEntryOfClientA);\n        \r\n        clientContextB.getDBMSSynchronizer().pullChanges();\n\n        assertFalse(clientContextA.getDatabase().getEntries().isEmpty());\n        assertFalse(clientContextB.getDatabase().getEntries().isEmpty());\n        assertEquals(clientContextA.getDatabase().getEntries(), clientContextB.getDatabase().getEntries());\n\n        \r\n        clientContextA.getDatabase().removeEntry(bibEntryOfClientA);\n\n        assertFalse(clientContextB.getDatabase().getEntries().isEmpty());\n        assertNull(eventListenerB.getSharedEntriesNotPresentEvent());\n        \r\n        BibEntry bibEntryOfClientB = clientContextB.getDatabase().getEntries().get(0);\n        bibEntryOfClientB.setField(StandardField.YEAR, \"2009\");\n\n        \r\n        assertNotNull(eventListenerB.getSharedEntriesNotPresentEvent());\n        assertEquals(List.of(bibEntryOfClientB), eventListenerB.getSharedEntriesNotPresentEvent().getBibEntries());\n    }\n","date":"2019-11-29 23:58:12","endLine":144,"groupId":"10358","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"simulateUpdateOnNoLongerExistingEntry","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/6b/da1fcb9411a1c2aee5c89d54ff18b1b3c52640.src","preCode":"    public void simulateUpdateOnNoLongerExistingEntry(DBMSType dbmsType, DBMSConnection dbmsConnection, DBMSProcessor dbmsProcessor) throws Exception {\n        setUp(dbmsType, dbmsConnection, dbmsProcessor);\n\n        BibEntry bibEntryOfClientA = getBibEntryExample(1);\n        \r\n        clientContextA.getDatabase().insertEntry(bibEntryOfClientA);\n        \r\n        clientContextB.getDBMSSynchronizer().pullChanges();\n\n        assertFalse(clientContextA.getDatabase().getEntries().isEmpty());\n        assertFalse(clientContextB.getDatabase().getEntries().isEmpty());\n        assertEquals(clientContextA.getDatabase().getEntries(), clientContextB.getDatabase().getEntries());\n\n        \r\n        clientContextA.getDatabase().removeEntry(bibEntryOfClientA);\n\n        assertFalse(clientContextB.getDatabase().getEntries().isEmpty());\n        assertNull(eventListenerB.getSharedEntriesNotPresentEvent());\n        \r\n        BibEntry bibEntryOfClientB = clientContextB.getDatabase().getEntries().get(0);\n        bibEntryOfClientB.setField(StandardField.YEAR, \"2009\");\n\n        \r\n        assertNotNull(eventListenerB.getSharedEntriesNotPresentEvent());\n        assertEquals(bibEntryOfClientB, eventListenerB.getSharedEntriesNotPresentEvent().getBibEntries());\n\n        clear(dbmsConnection);\n    }\n","realPath":"src/test/java/org/jabref/logic/shared/SynchronizationTestSimulator.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":121,"status":"M"},{"authorDate":"2019-11-29 23:58:12","commitOrder":5,"curCode":"    public void simulateEntryChangeConflicts() {\n        BibEntry bibEntryOfClientA = getBibEntryExample(1);\n        \r\n        clientContextA.getDatabase().insertEntry(bibEntryOfClientA);\n        \r\n        clientContextB.getDBMSSynchronizer().pullChanges();\n\n        \r\n        bibEntryOfClientA.setField(StandardField.YEAR, \"2001\");\n\n        \r\n        assertFalse(clientContextB.getDatabase().getEntries().isEmpty());\n        assertNull(eventListenerB.getUpdateRefusedEvent());\n\n        BibEntry bibEntryOfClientB = clientContextB.getDatabase().getEntries().get(0);\n        \r\n        bibEntryOfClientB.setField(StandardField.YEAR, \"2016\");\n\n        \r\n        \r\n        assertNotNull(eventListenerB.getUpdateRefusedEvent());\n    }\n","date":"2019-11-29 23:58:12","endLine":168,"groupId":"10358","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"simulateEntryChangeConflicts","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/6b/da1fcb9411a1c2aee5c89d54ff18b1b3c52640.src","preCode":"    public void simulateEntryChangeConflicts(DBMSType dbmsType, DBMSConnection dbmsConnection, DBMSProcessor dbmsProcessor) throws Exception {\n        setUp(dbmsType, dbmsConnection, dbmsProcessor);\n\n        BibEntry bibEntryOfClientA = getBibEntryExample(1);\n        \r\n        clientContextA.getDatabase().insertEntry(bibEntryOfClientA);\n        \r\n        clientContextB.getDBMSSynchronizer().pullChanges();\n\n        \r\n        bibEntryOfClientA.setField(StandardField.YEAR, \"2001\");\n\n        \r\n        \r\n        assertFalse(clientContextB.getDatabase().getEntries().isEmpty());\n\n        assertNull(eventListenerB.getUpdateRefusedEvent());\n\n        BibEntry bibEntryOfClientB = clientContextB.getDatabase().getEntries().get(0);\n        \r\n        bibEntryOfClientB.setField(StandardField.YEAR, \"2016\");\n\n        \r\n        \r\n        assertNotNull(eventListenerB.getUpdateRefusedEvent());\n\n        clear(dbmsConnection);\n    }\n","realPath":"src/test/java/org/jabref/logic/shared/SynchronizationTestSimulator.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":147,"status":"M"}],"commitId":"ea5e632e4e1819673a01bca255304e83924b3dd0","commitMessage":"@@@Fix database tests and enable running using GitHub workflows (#5676)\n\n- fix behavior when no entries have to be inserted during a synch\n- fix database tests\n- have dbms test test only one database\n- DBMS to test is passed via environment variable \"DBMS\".  defaulting to PostgreSQL\n- add shared information on Canonical BibTeX entry\n- some code improvement\n- have checkstyle running on github workflows (not on Travis)\n- One big workflow for tests\n- Make allowPublicKeyRetrieval a property of DBMSConnectionProperties (and create a builder for the properties)\n- Add check-outdated-dependencies as workflow\n- Add formatting of test results (scripts/after-failure.sh)\n- Have fetcher tests and GUI tests run after the database tests (because they currently fail)\n- Update gradle from 6.0.0 to 6.0.1\n","date":"2019-11-29 23:58:12","modifiedFileCount":"16","status":"M","submitter":"Oliver Kopp"}]
