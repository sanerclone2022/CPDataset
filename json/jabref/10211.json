[{"authorTime":"2017-02-17 05:41:47","codes":[{"authorDate":"2017-02-17 05:41:47","commitOrder":1,"curCode":"    public void testImportEntriesWOS() throws IOException, URISyntaxException {\n        Path file = Paths.get(IsiImporterTest.class.getResource(\"IsiImporterTestWOS.isi\").toURI());\n        List<BibEntry> entries = importer.importDatabase(file, StandardCharsets.UTF_8).getDatabase().getEntries();\n\n        assertEquals(2, entries.size());\n        BibEntry a = entries.get(0);\n        BibEntry b = entries.get(1);\n\n        assertEquals(Optional.of(\"Optical and photoelectric spectroscopy of photorefractive Sn2P2S6 crystals\"),\n                a.getField(\"title\"));\n        assertEquals(Optional.of(\"Optical waveguides in Sn2P2S6 by low fluence MeV He+ ion implantation\"),\n                b.getField(\"title\"));\n\n        assertEquals(Optional.of(\"Journal of Physics-condensed Matter\"), a.getField(\"journal\"));\n    }\n","date":"2017-02-17 05:41:47","endLine":218,"groupId":"10861","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testImportEntriesWOS","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/3f/62db57939846b75d69834dd115d80053d43db5.src","preCode":"    public void testImportEntriesWOS() throws IOException, URISyntaxException {\n        Path file = Paths.get(IsiImporterTest.class.getResource(\"IsiImporterTestWOS.isi\").toURI());\n        List<BibEntry> entries = importer.importDatabase(file, StandardCharsets.UTF_8).getDatabase().getEntries();\n\n        assertEquals(2, entries.size());\n        BibEntry a = entries.get(0);\n        BibEntry b = entries.get(1);\n\n        assertEquals(Optional.of(\"Optical and photoelectric spectroscopy of photorefractive Sn2P2S6 crystals\"),\n                a.getField(\"title\"));\n        assertEquals(Optional.of(\"Optical waveguides in Sn2P2S6 by low fluence MeV He+ ion implantation\"),\n                b.getField(\"title\"));\n\n        assertEquals(Optional.of(\"Journal of Physics-condensed Matter\"), a.getField(\"journal\"));\n    }\n","realPath":"src/test/java/org/jabref/logic/importer/fileformat/IsiImporterTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":204,"status":"B"},{"authorDate":"2017-02-17 05:41:47","commitOrder":1,"curCode":"    public void testImportEntriesEmpty() throws IOException, URISyntaxException {\n        Path file = Paths.get(IsiImporterTest.class.getResource(\"IsiImporterTestEmpty.isi\").toURI());\n\n        List<BibEntry> entries = importer.importDatabase(file, StandardCharsets.UTF_8).getDatabase().getEntries();\n\n        assertEquals(1, entries.size());\n    }\n","date":"2017-02-17 05:41:47","endLine":354,"groupId":"2666","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testImportEntriesEmpty","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/3f/62db57939846b75d69834dd115d80053d43db5.src","preCode":"    public void testImportEntriesEmpty() throws IOException, URISyntaxException {\n        Path file = Paths.get(IsiImporterTest.class.getResource(\"IsiImporterTestEmpty.isi\").toURI());\n\n        List<BibEntry> entries = importer.importDatabase(file, StandardCharsets.UTF_8).getDatabase().getEntries();\n\n        assertEquals(1, entries.size());\n    }\n","realPath":"src/test/java/org/jabref/logic/importer/fileformat/IsiImporterTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":348,"status":"B"}],"commitId":"ebbeb1d249edf7134abf92d24c2031ae54d19881","commitMessage":"@@@Merge branch 'net-sf-to-org-jabref'\n","date":"2017-02-17 05:41:47","modifiedFileCount":"1","status":"B","submitter":"Oliver Kopp"},{"authorTime":"2017-02-17 05:41:47","codes":[{"authorDate":"2018-02-01 01:07:12","commitOrder":2,"curCode":"    public void testImportEntriesWOS() throws IOException, URISyntaxException {\n        Path file = Paths.get(IsiImporterTest.class.getResource(\"IsiImporterTestWOS.isi\").toURI());\n        List<BibEntry> entries = importer.importDatabase(file, StandardCharsets.UTF_8).getDatabase().getEntries();\n\n        BibEntry first = entries.get(0);\n        BibEntry second = entries.get(1);\n\n        assertEquals(2, entries.size());\n\n        assertEquals(Optional.of(\"Optical and photoelectric spectroscopy of photorefractive Sn2P2S6 crystals\"),\n                first.getField(\"title\"));\n        assertEquals(Optional.of(\"Optical waveguides in Sn2P2S6 by low fluence MeV He+ ion implantation\"),\n                second.getField(\"title\"));\n\n        assertEquals(Optional.of(\"Journal of Physics-condensed Matter\"), first.getField(\"journal\"));\n    }\n","date":"2018-02-01 01:07:12","endLine":219,"groupId":"5403","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testImportEntriesWOS","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/cc/5e4c87bb7e022e609993276af70f081b07d43f.src","preCode":"    public void testImportEntriesWOS() throws IOException, URISyntaxException {\n        Path file = Paths.get(IsiImporterTest.class.getResource(\"IsiImporterTestWOS.isi\").toURI());\n        List<BibEntry> entries = importer.importDatabase(file, StandardCharsets.UTF_8).getDatabase().getEntries();\n\n        assertEquals(2, entries.size());\n        BibEntry a = entries.get(0);\n        BibEntry b = entries.get(1);\n\n        assertEquals(Optional.of(\"Optical and photoelectric spectroscopy of photorefractive Sn2P2S6 crystals\"),\n                a.getField(\"title\"));\n        assertEquals(Optional.of(\"Optical waveguides in Sn2P2S6 by low fluence MeV He+ ion implantation\"),\n                b.getField(\"title\"));\n\n        assertEquals(Optional.of(\"Journal of Physics-condensed Matter\"), a.getField(\"journal\"));\n    }\n","realPath":"src/test/java/org/jabref/logic/importer/fileformat/IsiImporterTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":204,"status":"M"},{"authorDate":"2017-02-17 05:41:47","commitOrder":2,"curCode":"    public void testImportEntriesEmpty() throws IOException, URISyntaxException {\n        Path file = Paths.get(IsiImporterTest.class.getResource(\"IsiImporterTestEmpty.isi\").toURI());\n\n        List<BibEntry> entries = importer.importDatabase(file, StandardCharsets.UTF_8).getDatabase().getEntries();\n\n        assertEquals(1, entries.size());\n    }\n","date":"2017-02-17 05:41:47","endLine":354,"groupId":"2666","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testImportEntriesEmpty","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/3f/62db57939846b75d69834dd115d80053d43db5.src","preCode":"    public void testImportEntriesEmpty() throws IOException, URISyntaxException {\n        Path file = Paths.get(IsiImporterTest.class.getResource(\"IsiImporterTestEmpty.isi\").toURI());\n\n        List<BibEntry> entries = importer.importDatabase(file, StandardCharsets.UTF_8).getDatabase().getEntries();\n\n        assertEquals(1, entries.size());\n    }\n","realPath":"src/test/java/org/jabref/logic/importer/fileformat/IsiImporterTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":348,"status":"N"}],"commitId":"608e415b643995d3492ad12c411b101311d67358","commitMessage":"@@@Migrate importer tests to JUnit5 (#3665)\n\n* Migrate paramterized RIS tests to JUnit5\n\n* Extract generic importer testing code to new class\n\n* Switch to JUnit5 assertions in BibEntryAssert\n\n* Remove unused imports\n\n* Use static import for Assertion when possible\n\n* Extract file collection from importer test classes\n\n* Refactor biblioscape importer tests\n\n* Refactor BiblioscapeImporterTestTypes to JUnit5 syntax\n\n* Refactor CopacImporterTestFiles\n\n* Migrate medline importer tests to JUnit5\n\n* Convert BibTeXML importer tests to JUnit5\n\n* Move several non-parametric importer test classes to JUnit5\n\n* Refactor Medline importer tests to JUni5\n\n* Migrate parameterized MODS importer tests to JUnit5\n\n* Migrate MrDLib importer tests to JUnit5\n\n* Migrate MsBibImporter tests to JUnit5\n\n* Migrate OvidImporter tests to JUnit5\n\n* Migrate PdfContentImporter tests to JUnit5\n\n* Migrate PdfXmpImporter tests to JUnit5\n\n* Migrate RepecNepImporter tests to JUnit5\n\n* Migrate RISImporter tests to JUnit5\n\n* Migrate SilverPlatterImporter tests to JUnit5\n\n* Fix imports in SilverPlatterImporterTest\n\n* Fix BibTeXMLImporter tests\n\n* Fix and clarify BibTeXMLImporterTestTypes\n\n* Fix medline tests for malformed files\n\n* Remove unused imports\n\n* Fix broken test files that can be fixed and remove the ones with larger syntactic problem\n\n* Fix MODSImporter tests\n\n* Fix test file for MsBibImporter tests\n\n* Convert Before to BeforeEach in OvidImporterTests\n\n* Check starting line of a file for checking whether it is a PDF\n\n* Migrate additional BibTeXML tests to JUnit5\n\n* Refactor and restructure BibTexParser tests\n\n* Refactor CopacImporter tests\n\n* Refactor BibTeXMLImporter tests\n\n* Refactor EndnoteImporter tests\n\n* Refactor FreeCiteImporter tests\n\n* Refactor InspecImporter tests\n\n* Refactor IsiImporter tests\n\n* Refactor MedlineImporter tests\n\n* Refactor MrDLibImporter tests\n\n* Refactor MsBibImporter tests\n\n* Refactor OvidImporter tests\n\n* Refactor PdfXmpImporter tests\n\n* Refactor RepecNepImporter tests\n\n* Refactor SilverPlatterImporter tests\n\n* Fix a bunch of codacy issues\n","date":"2018-02-01 01:07:12","modifiedFileCount":"32","status":"M","submitter":"J?rg Lenhard"},{"authorTime":"2017-02-17 05:41:47","codes":[{"authorDate":"2019-08-02 15:20:10","commitOrder":3,"curCode":"    public void testImportEntriesWOS() throws IOException, URISyntaxException {\n        Path file = Paths.get(IsiImporterTest.class.getResource(\"IsiImporterTestWOS.isi\").toURI());\n        List<BibEntry> entries = importer.importDatabase(file, StandardCharsets.UTF_8).getDatabase().getEntries();\n\n        BibEntry first = entries.get(0);\n        BibEntry second = entries.get(1);\n\n        assertEquals(2, entries.size());\n\n        assertEquals(Optional.of(\"Optical and photoelectric spectroscopy of photorefractive Sn2P2S6 crystals\"),\n                first.getField(StandardField.TITLE));\n        assertEquals(Optional.of(\"Optical waveguides in Sn2P2S6 by low fluence MeV He+ ion implantation\"),\n                second.getField(StandardField.TITLE));\n\n        assertEquals(Optional.of(\"Journal of Physics-condensed Matter\"), first.getField(StandardField.JOURNAL));\n    }\n","date":"2019-08-02 15:20:10","endLine":221,"groupId":"5403","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testImportEntriesWOS","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/5d/37b416bbc2eece3432e819e625a863e4773212.src","preCode":"    public void testImportEntriesWOS() throws IOException, URISyntaxException {\n        Path file = Paths.get(IsiImporterTest.class.getResource(\"IsiImporterTestWOS.isi\").toURI());\n        List<BibEntry> entries = importer.importDatabase(file, StandardCharsets.UTF_8).getDatabase().getEntries();\n\n        BibEntry first = entries.get(0);\n        BibEntry second = entries.get(1);\n\n        assertEquals(2, entries.size());\n\n        assertEquals(Optional.of(\"Optical and photoelectric spectroscopy of photorefractive Sn2P2S6 crystals\"),\n                first.getField(\"title\"));\n        assertEquals(Optional.of(\"Optical waveguides in Sn2P2S6 by low fluence MeV He+ ion implantation\"),\n                second.getField(\"title\"));\n\n        assertEquals(Optional.of(\"Journal of Physics-condensed Matter\"), first.getField(\"journal\"));\n    }\n","realPath":"src/test/java/org/jabref/logic/importer/fileformat/IsiImporterTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":206,"status":"M"},{"authorDate":"2017-02-17 05:41:47","commitOrder":3,"curCode":"    public void testImportEntriesEmpty() throws IOException, URISyntaxException {\n        Path file = Paths.get(IsiImporterTest.class.getResource(\"IsiImporterTestEmpty.isi\").toURI());\n\n        List<BibEntry> entries = importer.importDatabase(file, StandardCharsets.UTF_8).getDatabase().getEntries();\n\n        assertEquals(1, entries.size());\n    }\n","date":"2017-02-17 05:41:47","endLine":354,"groupId":"2666","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testImportEntriesEmpty","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/3f/62db57939846b75d69834dd115d80053d43db5.src","preCode":"    public void testImportEntriesEmpty() throws IOException, URISyntaxException {\n        Path file = Paths.get(IsiImporterTest.class.getResource(\"IsiImporterTestEmpty.isi\").toURI());\n\n        List<BibEntry> entries = importer.importDatabase(file, StandardCharsets.UTF_8).getDatabase().getEntries();\n\n        assertEquals(1, entries.size());\n    }\n","realPath":"src/test/java/org/jabref/logic/importer/fileformat/IsiImporterTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":348,"status":"N"}],"commitId":"4b39b78e4afcd6c36b385f5c46f1d9a4eac2e29b","commitMessage":"@@@Move to extended enums for fields and entry types (#5148)\n\n* Introduce interface for fields\n\n* Continue using fields interface instead of strings\n\n* Introduce OrFields class\n\n* Move FieldProperty\n\n* Convert entry types to extended enum\n\n* Start fixing build\n\n* Fix build\n\n* Start fixing tests\n\n* Everything compiles again\n\n* Make model tests pass\n\n* Fix most tests\n\n* Fix build\n\n* Fix a few more tests\n\n* Fix a few more tests\n\n* Fix a few more tests\n\n* Fix a few more tests\n\n* Fix checkstyle issues\n\n* Fix more tests\n\n* Fix more tests\n\n* Disable test that fails on CI\n\n* Disable test that fails on CI\n","date":"2019-08-02 15:20:10","modifiedFileCount":"439","status":"M","submitter":"Tobias Diez"},{"authorTime":"2020-04-30 17:10:13","codes":[{"authorDate":"2020-04-30 17:10:13","commitOrder":4,"curCode":"    public void testImportEntriesWOS() throws IOException, URISyntaxException {\n        Path file = Path.of(IsiImporterTest.class.getResource(\"IsiImporterTestWOS.isi\").toURI());\n        List<BibEntry> entries = importer.importDatabase(file, StandardCharsets.UTF_8).getDatabase().getEntries();\n\n        BibEntry first = entries.get(0);\n        BibEntry second = entries.get(1);\n\n        assertEquals(2, entries.size());\n\n        assertEquals(Optional.of(\"Optical and photoelectric spectroscopy of photorefractive Sn2P2S6 crystals\"),\n                first.getField(StandardField.TITLE));\n        assertEquals(Optional.of(\"Optical waveguides in Sn2P2S6 by low fluence MeV He+ ion implantation\"),\n                second.getField(StandardField.TITLE));\n\n        assertEquals(Optional.of(\"Journal of Physics-condensed Matter\"), first.getField(StandardField.JOURNAL));\n    }\n","date":"2020-04-30 17:10:13","endLine":218,"groupId":"10211","id":7,"instanceNumber":1,"isCurCommit":1,"methodName":"testImportEntriesWOS","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/f7/1618c1afb13ace88e1ff94d64b79347b6d072c.src","preCode":"    public void testImportEntriesWOS() throws IOException, URISyntaxException {\n        Path file = Paths.get(IsiImporterTest.class.getResource(\"IsiImporterTestWOS.isi\").toURI());\n        List<BibEntry> entries = importer.importDatabase(file, StandardCharsets.UTF_8).getDatabase().getEntries();\n\n        BibEntry first = entries.get(0);\n        BibEntry second = entries.get(1);\n\n        assertEquals(2, entries.size());\n\n        assertEquals(Optional.of(\"Optical and photoelectric spectroscopy of photorefractive Sn2P2S6 crystals\"),\n                first.getField(StandardField.TITLE));\n        assertEquals(Optional.of(\"Optical waveguides in Sn2P2S6 by low fluence MeV He+ ion implantation\"),\n                second.getField(StandardField.TITLE));\n\n        assertEquals(Optional.of(\"Journal of Physics-condensed Matter\"), first.getField(StandardField.JOURNAL));\n    }\n","realPath":"src/test/java/org/jabref/logic/importer/fileformat/IsiImporterTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":203,"status":"M"},{"authorDate":"2020-04-30 17:10:13","commitOrder":4,"curCode":"    public void testImportEntriesEmpty() throws IOException, URISyntaxException {\n        Path file = Path.of(IsiImporterTest.class.getResource(\"IsiImporterTestEmpty.isi\").toURI());\n\n        List<BibEntry> entries = importer.importDatabase(file, StandardCharsets.UTF_8).getDatabase().getEntries();\n\n        assertEquals(1, entries.size());\n    }\n","date":"2020-04-30 17:10:13","endLine":348,"groupId":"10211","id":8,"instanceNumber":2,"isCurCommit":1,"methodName":"testImportEntriesEmpty","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/f7/1618c1afb13ace88e1ff94d64b79347b6d072c.src","preCode":"    public void testImportEntriesEmpty() throws IOException, URISyntaxException {\n        Path file = Paths.get(IsiImporterTest.class.getResource(\"IsiImporterTestEmpty.isi\").toURI());\n\n        List<BibEntry> entries = importer.importDatabase(file, StandardCharsets.UTF_8).getDatabase().getEntries();\n\n        assertEquals(1, entries.size());\n    }\n","realPath":"src/test/java/org/jabref/logic/importer/fileformat/IsiImporterTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":342,"status":"M"}],"commitId":"862078a4db316cfd15bd77be68d3d2b010feab3b","commitMessage":"@@@Fixes #6357: File directory (#6377)\n\n* Fixes #6357: File directory\n\nBug was introduced in https://github.com/JabRef/jabref/commit/1b03f039aa4abf0812a3a8ae0ba248c08fdb39a3.\n\n* Fix tests\n\n* Replace Paths.get\n\n* Fix code style","date":"2020-04-30 17:10:13","modifiedFileCount":"110","status":"M","submitter":"Tobias Diez"}]
