[{"authorTime":"2020-03-06 22:31:23","codes":[{"authorDate":"2020-03-06 22:31:23","commitOrder":5,"curCode":"    private String abbreviate(BibDatabaseContext databaseContext, List<BibEntry> entries) {\n        UndoableAbbreviator undoableAbbreviator = new UndoableAbbreviator(\n                Globals.journalAbbreviationLoader.getRepository(preferences.getJournalAbbreviationPreferences()),\n                abbreviationType);\n\n        NamedCompound ce = new NamedCompound(Localization.lang(\"Abbreviate journal names\"));\n\n        \r\n        Set<Callable<Boolean>> tasks = entries.stream().<Callable<Boolean>>map(entry -> () ->\n                FieldFactory.getJournalNameFields().stream().anyMatch(journalField ->\n                        undoableAbbreviator.abbreviate(databaseContext.getDatabase(), entry, journalField, ce)))\n                .collect(Collectors.toSet());\n\n        \r\n        List<Future<Boolean>> futures = JabRefExecutorService.INSTANCE.executeAll(tasks);\n\n        \r\n        long count = futures.stream().filter(future -> {\n            try {\n                return future.get();\n            } catch (InterruptedException | ExecutionException exception) {\n                LOGGER.error(\"Unable to retrieve value.\", exception);\n                return false;\n            }\n        }).count();\n\n        if (count > 0) {\n            ce.end();\n            frame.getUndoManager().addEdit(ce);\n            frame.getCurrentBasePanel().markBaseChanged();\n            return Localization.lang(\"Abbreviated %0 journal names.\", String.valueOf(count));\n        }\n        return Localization.lang(\"No journal names could be abbreviated.\");\n    }\n","date":"2020-03-06 22:31:23","endLine":131,"groupId":"8370","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"abbreviate","params":"(BibDatabaseContextdatabaseContext@List<BibEntry>entries)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/b2/8ea1e96803c2cad441b2b83f6c5687ca22cce4.src","preCode":"    private String abbreviate(BibDatabaseContext databaseContext, List<BibEntry> entries) {\n        UndoableAbbreviator undoableAbbreviator = new UndoableAbbreviator(\n                Globals.journalAbbreviationLoader.getRepository(preferences.getJournalAbbreviationPreferences()),\n                abbreviationType);\n\n        NamedCompound ce = new NamedCompound(Localization.lang(\"Abbreviate journal names\"));\n\n        \r\n        Set<Callable<Boolean>> tasks = entries.stream().<Callable<Boolean>>map(entry -> () ->\n                FieldFactory.getJournalNameFields().stream().anyMatch(journalField ->\n                        undoableAbbreviator.abbreviate(databaseContext.getDatabase(), entry, journalField, ce)))\n                .collect(Collectors.toSet());\n\n        \r\n        List<Future<Boolean>> futures = JabRefExecutorService.INSTANCE.executeAll(tasks);\n\n        \r\n        long count = futures.stream().filter(future -> {\n            try {\n                return future.get();\n            } catch (InterruptedException | ExecutionException exception) {\n                LOGGER.error(\"Unable to retrieve value.\", exception);\n                return false;\n            }\n        }).count();\n\n        if (count > 0) {\n            ce.end();\n            frame.getUndoManager().addEdit(ce);\n            frame.getCurrentBasePanel().markBaseChanged();\n            return Localization.lang(\"Abbreviated %0 journal names.\", String.valueOf(count));\n        }\n        return Localization.lang(\"No journal names could be abbreviated.\");\n    }\n","realPath":"src/main/java/org/jabref/gui/journals/AbbreviateAction.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":98,"status":"MB"},{"authorDate":"2020-03-06 22:31:23","commitOrder":5,"curCode":"    private String unabbreviate(BibDatabaseContext databaseContext, List<BibEntry> entries) {\n        UndoableUnabbreviator undoableAbbreviator = new UndoableUnabbreviator(Globals.journalAbbreviationLoader\n                .getRepository(Globals.prefs.getJournalAbbreviationPreferences()));\n\n        NamedCompound ce = new NamedCompound(Localization.lang(\"Unabbreviate journal names\"));\n        int count = entries.stream().mapToInt(entry ->\n                (int) FieldFactory.getJournalNameFields().stream().filter(journalField ->\n                        undoableAbbreviator.unabbreviate(databaseContext.getDatabase(), entry, journalField, ce)).count()).sum();\n        if (count > 0) {\n            ce.end();\n            frame.getUndoManager().addEdit(ce);\n            frame.getCurrentBasePanel().markBaseChanged();\n            return Localization.lang(\"Unabbreviated %0 journal names.\", String.valueOf(count));\n        }\n        return Localization.lang(\"No journal names could be unabbreviated.\");\n    }\n","date":"2020-03-06 22:31:23","endLine":148,"groupId":"5911","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"unabbreviate","params":"(BibDatabaseContextdatabaseContext@List<BibEntry>entries)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/b2/8ea1e96803c2cad441b2b83f6c5687ca22cce4.src","preCode":"    private String unabbreviate(BibDatabaseContext databaseContext, List<BibEntry> entries) {\n        UndoableUnabbreviator undoableAbbreviator = new UndoableUnabbreviator(Globals.journalAbbreviationLoader\n                .getRepository(Globals.prefs.getJournalAbbreviationPreferences()));\n\n        NamedCompound ce = new NamedCompound(Localization.lang(\"Unabbreviate journal names\"));\n        int count = entries.stream().mapToInt(entry ->\n                (int) FieldFactory.getJournalNameFields().stream().filter(journalField ->\n                        undoableAbbreviator.unabbreviate(databaseContext.getDatabase(), entry, journalField, ce)).count()).sum();\n        if (count > 0) {\n            ce.end();\n            frame.getUndoManager().addEdit(ce);\n            frame.getCurrentBasePanel().markBaseChanged();\n            return Localization.lang(\"Unabbreviated %0 journal names.\", String.valueOf(count));\n        }\n        return Localization.lang(\"No journal names could be unabbreviated.\");\n    }\n","realPath":"src/main/java/org/jabref/gui/journals/AbbreviateAction.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":133,"status":"B"}],"commitId":"3d24714deb07978972b921025551d5328faff039","commitMessage":"@@@[WIP] Remove BaseAction from JabRefFrame (#6056)\n\n* Added UndoRedoAction\n\n* Refactored AppendDatabaseAction\n\n* Refactored ReplaceStringAction and GenerateBibtexKeyAction\n\n* Refactored CleanupAction\n\n* Added OpenEntryEditorAction.  fixed bug about selected entries without open database\n\n* Refactored AbbreviateAction.  merged UnabbreviateAction.  removed unused Actions\n\n* Refactored DownloadFullTextAction\n\n* Added PullChangesFromSharedAction\n\n* Added SaveAction.  removed remaining deprecated OldDatabaseCommandWrapper.  BaseAction and Actions\n\n* Added UndoRedoAction\n\n* Refactored AppendDatabaseAction\n\n* Refactored ReplaceStringAction and GenerateBibtexKeyAction\n\n* Refactored CleanupAction\n\n* Added OpenEntryEditorAction.  fixed bug about selected entries without open database\n\n* Refactored AbbreviateAction.  merged UnabbreviateAction.  removed unused Actions\n\n* Refactored DownloadFullTextAction\n\n* Added PullChangesFromSharedAction\n\n* Added SaveAction.  removed remaining deprecated OldDatabaseCommandWrapper.  BaseAction and Actions\n\n* Removed test.  added default case for codacy compliance\n\n* Removed test for notifications","date":"2020-03-06 22:31:23","modifiedFileCount":"11","status":"M","submitter":"Carl Christian Snethlage"},{"authorTime":"2020-05-01 20:14:59","codes":[{"authorDate":"2020-05-01 20:14:59","commitOrder":6,"curCode":"    private String abbreviate(BibDatabaseContext databaseContext, List<BibEntry> entries) {\n        UndoableAbbreviator undoableAbbreviator = new UndoableAbbreviator(\n                Globals.journalAbbreviationRepository,\n                abbreviationType);\n\n        NamedCompound ce = new NamedCompound(Localization.lang(\"Abbreviate journal names\"));\n\n        \r\n        Set<Callable<Boolean>> tasks = entries.stream().<Callable<Boolean>>map(entry -> () ->\n                FieldFactory.getJournalNameFields().stream().anyMatch(journalField ->\n                        undoableAbbreviator.abbreviate(databaseContext.getDatabase(), entry, journalField, ce)))\n                .collect(Collectors.toSet());\n\n        \r\n        List<Future<Boolean>> futures = JabRefExecutorService.INSTANCE.executeAll(tasks);\n\n        \r\n        long count = futures.stream().filter(future -> {\n            try {\n                return future.get();\n            } catch (InterruptedException | ExecutionException exception) {\n                LOGGER.error(\"Unable to retrieve value.\", exception);\n                return false;\n            }\n        }).count();\n\n        if (count > 0) {\n            ce.end();\n            frame.getUndoManager().addEdit(ce);\n            frame.getCurrentBasePanel().markBaseChanged();\n            return Localization.lang(\"Abbreviated %0 journal names.\", String.valueOf(count));\n        }\n        return Localization.lang(\"No journal names could be abbreviated.\");\n    }\n","date":"2020-05-01 20:14:59","endLine":127,"groupId":"8370","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"abbreviate","params":"(BibDatabaseContextdatabaseContext@List<BibEntry>entries)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/7c/a1e09cea220ba3e463a9789d91113ff5b1bcc5.src","preCode":"    private String abbreviate(BibDatabaseContext databaseContext, List<BibEntry> entries) {\n        UndoableAbbreviator undoableAbbreviator = new UndoableAbbreviator(\n                Globals.journalAbbreviationLoader.getRepository(preferences.getJournalAbbreviationPreferences()),\n                abbreviationType);\n\n        NamedCompound ce = new NamedCompound(Localization.lang(\"Abbreviate journal names\"));\n\n        \r\n        Set<Callable<Boolean>> tasks = entries.stream().<Callable<Boolean>>map(entry -> () ->\n                FieldFactory.getJournalNameFields().stream().anyMatch(journalField ->\n                        undoableAbbreviator.abbreviate(databaseContext.getDatabase(), entry, journalField, ce)))\n                .collect(Collectors.toSet());\n\n        \r\n        List<Future<Boolean>> futures = JabRefExecutorService.INSTANCE.executeAll(tasks);\n\n        \r\n        long count = futures.stream().filter(future -> {\n            try {\n                return future.get();\n            } catch (InterruptedException | ExecutionException exception) {\n                LOGGER.error(\"Unable to retrieve value.\", exception);\n                return false;\n            }\n        }).count();\n\n        if (count > 0) {\n            ce.end();\n            frame.getUndoManager().addEdit(ce);\n            frame.getCurrentBasePanel().markBaseChanged();\n            return Localization.lang(\"Abbreviated %0 journal names.\", String.valueOf(count));\n        }\n        return Localization.lang(\"No journal names could be abbreviated.\");\n    }\n","realPath":"src/main/java/org/jabref/gui/journals/AbbreviateAction.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":94,"status":"M"},{"authorDate":"2020-05-01 20:14:59","commitOrder":6,"curCode":"    private String unabbreviate(BibDatabaseContext databaseContext, List<BibEntry> entries) {\n        UndoableUnabbreviator undoableAbbreviator = new UndoableUnabbreviator(Globals.journalAbbreviationRepository);\n\n        NamedCompound ce = new NamedCompound(Localization.lang(\"Unabbreviate journal names\"));\n        int count = entries.stream().mapToInt(entry ->\n                (int) FieldFactory.getJournalNameFields().stream().filter(journalField ->\n                        undoableAbbreviator.unabbreviate(databaseContext.getDatabase(), entry, journalField, ce)).count()).sum();\n        if (count > 0) {\n            ce.end();\n            frame.getUndoManager().addEdit(ce);\n            frame.getCurrentBasePanel().markBaseChanged();\n            return Localization.lang(\"Unabbreviated %0 journal names.\", String.valueOf(count));\n        }\n        return Localization.lang(\"No journal names could be unabbreviated.\");\n    }\n","date":"2020-05-01 20:14:59","endLine":143,"groupId":"5911","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"unabbreviate","params":"(BibDatabaseContextdatabaseContext@List<BibEntry>entries)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/7c/a1e09cea220ba3e463a9789d91113ff5b1bcc5.src","preCode":"    private String unabbreviate(BibDatabaseContext databaseContext, List<BibEntry> entries) {\n        UndoableUnabbreviator undoableAbbreviator = new UndoableUnabbreviator(Globals.journalAbbreviationLoader\n                .getRepository(Globals.prefs.getJournalAbbreviationPreferences()));\n\n        NamedCompound ce = new NamedCompound(Localization.lang(\"Unabbreviate journal names\"));\n        int count = entries.stream().mapToInt(entry ->\n                (int) FieldFactory.getJournalNameFields().stream().filter(journalField ->\n                        undoableAbbreviator.unabbreviate(databaseContext.getDatabase(), entry, journalField, ce)).count()).sum();\n        if (count > 0) {\n            ce.end();\n            frame.getUndoManager().addEdit(ce);\n            frame.getCurrentBasePanel().markBaseChanged();\n            return Localization.lang(\"Unabbreviated %0 journal names.\", String.valueOf(count));\n        }\n        return Localization.lang(\"No journal names could be unabbreviated.\");\n    }\n","realPath":"src/main/java/org/jabref/gui/journals/AbbreviateAction.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":129,"status":"M"}],"commitId":"a123eb1bd9d6ea71e286224d452534416c72a945","commitMessage":"@@@Rework journal abbreviation caching (#6304)\n\n* Rework journal abbreviation caching\n\n* Add ADR-0010\n\n* Remove IEEE abbreviations\n\n* Convert abbreviations as part of build process\n\n* Fix tests\n\n* Update according to review feedback\n\n* Fix bug\n\n* Include feedback\n\n* Fix test\n\n* Fix localization\n\nCo-authored-by: Oliver Kopp <kopp.dev@gmail.com>","date":"2020-05-01 20:14:59","modifiedFileCount":"59","status":"M","submitter":"Tobias Diez"},{"authorTime":"2020-10-21 05:27:30","codes":[{"authorDate":"2020-10-21 05:27:30","commitOrder":7,"curCode":"    private String abbreviate(BibDatabaseContext databaseContext, List<BibEntry> entries) {\n        UndoableAbbreviator undoableAbbreviator = new UndoableAbbreviator(\n                Globals.journalAbbreviationRepository,\n                abbreviationType);\n\n        NamedCompound ce = new NamedCompound(Localization.lang(\"Abbreviate journal names\"));\n\n        \r\n        Set<Callable<Boolean>> tasks = entries.stream().<Callable<Boolean>>map(entry -> () ->\n                FieldFactory.getJournalNameFields().stream().anyMatch(journalField ->\n                        undoableAbbreviator.abbreviate(databaseContext.getDatabase(), entry, journalField, ce)))\n                .collect(Collectors.toSet());\n\n        \r\n        List<Future<Boolean>> futures = JabRefExecutorService.INSTANCE.executeAll(tasks);\n\n        \r\n        long count = futures.stream().filter(future -> {\n            try {\n                return future.get();\n            } catch (InterruptedException | ExecutionException exception) {\n                LOGGER.error(\"Unable to retrieve value.\", exception);\n                return false;\n            }\n        }).count();\n\n        if (count > 0) {\n            ce.end();\n            frame.getUndoManager().addEdit(ce);\n            frame.getCurrentLibraryTab().markBaseChanged();\n            return Localization.lang(\"Abbreviated %0 journal names.\", String.valueOf(count));\n        }\n        return Localization.lang(\"No journal names could be abbreviated.\");\n    }\n","date":"2020-10-21 05:27:30","endLine":119,"groupId":"10905","id":5,"instanceNumber":1,"isCurCommit":1,"methodName":"abbreviate","params":"(BibDatabaseContextdatabaseContext@List<BibEntry>entries)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/81/c5ea153222ced723b7741e56fd6552dad8f450.src","preCode":"    private String abbreviate(BibDatabaseContext databaseContext, List<BibEntry> entries) {\n        UndoableAbbreviator undoableAbbreviator = new UndoableAbbreviator(\n                Globals.journalAbbreviationRepository,\n                abbreviationType);\n\n        NamedCompound ce = new NamedCompound(Localization.lang(\"Abbreviate journal names\"));\n\n        \r\n        Set<Callable<Boolean>> tasks = entries.stream().<Callable<Boolean>>map(entry -> () ->\n                FieldFactory.getJournalNameFields().stream().anyMatch(journalField ->\n                        undoableAbbreviator.abbreviate(databaseContext.getDatabase(), entry, journalField, ce)))\n                .collect(Collectors.toSet());\n\n        \r\n        List<Future<Boolean>> futures = JabRefExecutorService.INSTANCE.executeAll(tasks);\n\n        \r\n        long count = futures.stream().filter(future -> {\n            try {\n                return future.get();\n            } catch (InterruptedException | ExecutionException exception) {\n                LOGGER.error(\"Unable to retrieve value.\", exception);\n                return false;\n            }\n        }).count();\n\n        if (count > 0) {\n            ce.end();\n            frame.getUndoManager().addEdit(ce);\n            frame.getCurrentBasePanel().markBaseChanged();\n            return Localization.lang(\"Abbreviated %0 journal names.\", String.valueOf(count));\n        }\n        return Localization.lang(\"No journal names could be abbreviated.\");\n    }\n","realPath":"src/main/java/org/jabref/gui/journals/AbbreviateAction.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":86,"status":"M"},{"authorDate":"2020-10-21 05:27:30","commitOrder":7,"curCode":"    private String unabbreviate(BibDatabaseContext databaseContext, List<BibEntry> entries) {\n        UndoableUnabbreviator undoableAbbreviator = new UndoableUnabbreviator(Globals.journalAbbreviationRepository);\n\n        NamedCompound ce = new NamedCompound(Localization.lang(\"Unabbreviate journal names\"));\n        int count = entries.stream().mapToInt(entry ->\n                (int) FieldFactory.getJournalNameFields().stream().filter(journalField ->\n                        undoableAbbreviator.unabbreviate(databaseContext.getDatabase(), entry, journalField, ce)).count()).sum();\n        if (count > 0) {\n            ce.end();\n            frame.getUndoManager().addEdit(ce);\n            frame.getCurrentLibraryTab().markBaseChanged();\n            return Localization.lang(\"Unabbreviated %0 journal names.\", String.valueOf(count));\n        }\n        return Localization.lang(\"No journal names could be unabbreviated.\");\n    }\n","date":"2020-10-21 05:27:30","endLine":135,"groupId":"10905","id":6,"instanceNumber":2,"isCurCommit":1,"methodName":"unabbreviate","params":"(BibDatabaseContextdatabaseContext@List<BibEntry>entries)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/81/c5ea153222ced723b7741e56fd6552dad8f450.src","preCode":"    private String unabbreviate(BibDatabaseContext databaseContext, List<BibEntry> entries) {\n        UndoableUnabbreviator undoableAbbreviator = new UndoableUnabbreviator(Globals.journalAbbreviationRepository);\n\n        NamedCompound ce = new NamedCompound(Localization.lang(\"Unabbreviate journal names\"));\n        int count = entries.stream().mapToInt(entry ->\n                (int) FieldFactory.getJournalNameFields().stream().filter(journalField ->\n                        undoableAbbreviator.unabbreviate(databaseContext.getDatabase(), entry, journalField, ce)).count()).sum();\n        if (count > 0) {\n            ce.end();\n            frame.getUndoManager().addEdit(ce);\n            frame.getCurrentBasePanel().markBaseChanged();\n            return Localization.lang(\"Unabbreviated %0 journal names.\", String.valueOf(count));\n        }\n        return Localization.lang(\"No journal names could be unabbreviated.\");\n    }\n","realPath":"src/main/java/org/jabref/gui/journals/AbbreviateAction.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":121,"status":"M"}],"commitId":"4cf2fb06d3d876d2043f65ca0e51c3c4185fd05c","commitMessage":"@@@Fix setting of title (and simplify BasePanel to LibraryTab) (#6129)\n\nCo-authored-by: Carl Christian Snethlage <50491877+calixtus@users.noreply.github.com>","date":"2020-10-21 05:27:30","modifiedFileCount":"66","status":"M","submitter":"Oliver Kopp"}]
