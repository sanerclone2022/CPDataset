[{"authorTime":"2017-02-17 05:41:47","codes":[{"authorDate":"2017-02-17 05:41:47","commitOrder":1,"curCode":"    public void testGetAuthorsLastFirstOxfordComma() {\n        \r\n        AuthorList al;\n\n        al = AuthorList.parse(\"\");\n        Assert.assertEquals(\"\", al.getAsLastFirstNames(true, true));\n        Assert.assertEquals(\"\", al.getAsLastFirstNames(false, true));\n\n        al = AuthorList.parse(\"John Smith\");\n        Assert.assertEquals(\"Smith, John\", al.getAsLastFirstNames(false, true));\n        Assert.assertEquals(\"Smith, J.\", al.getAsLastFirstNames(true, true));\n\n        al = AuthorList.parse(\"John Smith and Black Brown, Peter\");\n        Assert.assertEquals(\"Smith, John and Black Brown, Peter\", al.getAsLastFirstNames(false, true));\n        Assert.assertEquals(\"Smith, J. and Black Brown, P.\", al.getAsLastFirstNames(true, true));\n\n        al = AuthorList.parse(\"John von Neumann and John Smith and Black Brown, Peter\");\n        Assert.assertEquals(\"von Neumann, John, Smith, John, and Black Brown, Peter\", al\n                .getAsLastFirstNames(false, true));\n        Assert.assertEquals(\"von Neumann, J., Smith, J., and Black Brown, P.\", al.getAsLastFirstNames(\n                true, true));\n\n        al = AuthorList.parse(\"John Peter von Neumann\");\n        Assert.assertEquals(\"von Neumann, J. P.\", al.getAsLastFirstNames(true, true));\n    }\n","date":"2017-02-17 05:41:47","endLine":502,"groupId":"6010","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testGetAuthorsLastFirstOxfordComma","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/1a/cbb4742700cac0b261d4116fd6bd83ffe08886.src","preCode":"    public void testGetAuthorsLastFirstOxfordComma() {\n        \r\n        AuthorList al;\n\n        al = AuthorList.parse(\"\");\n        Assert.assertEquals(\"\", al.getAsLastFirstNames(true, true));\n        Assert.assertEquals(\"\", al.getAsLastFirstNames(false, true));\n\n        al = AuthorList.parse(\"John Smith\");\n        Assert.assertEquals(\"Smith, John\", al.getAsLastFirstNames(false, true));\n        Assert.assertEquals(\"Smith, J.\", al.getAsLastFirstNames(true, true));\n\n        al = AuthorList.parse(\"John Smith and Black Brown, Peter\");\n        Assert.assertEquals(\"Smith, John and Black Brown, Peter\", al.getAsLastFirstNames(false, true));\n        Assert.assertEquals(\"Smith, J. and Black Brown, P.\", al.getAsLastFirstNames(true, true));\n\n        al = AuthorList.parse(\"John von Neumann and John Smith and Black Brown, Peter\");\n        Assert.assertEquals(\"von Neumann, John, Smith, John, and Black Brown, Peter\", al\n                .getAsLastFirstNames(false, true));\n        Assert.assertEquals(\"von Neumann, J., Smith, J., and Black Brown, P.\", al.getAsLastFirstNames(\n                true, true));\n\n        al = AuthorList.parse(\"John Peter von Neumann\");\n        Assert.assertEquals(\"von Neumann, J. P.\", al.getAsLastFirstNames(true, true));\n    }\n","realPath":"src/test/java/org/jabref/model/entry/AuthorListTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":478,"status":"B"},{"authorDate":"2017-02-17 05:41:47","commitOrder":1,"curCode":"    public void testGetAuthorsFirstFirst() {\n\n        AuthorList al;\n\n        al = AuthorList.parse(\"\");\n        Assert.assertEquals(\"\", al.getAsFirstLastNames(true, false));\n        Assert.assertEquals(\"\", al.getAsFirstLastNames(false, false));\n        Assert.assertEquals(\"\", al.getAsFirstLastNames(true, true));\n        Assert.assertEquals(\"\", al.getAsFirstLastNames(false, true));\n\n        al = AuthorList.parse(\"John Smith\");\n        Assert.assertEquals(\"John Smith\", al.getAsFirstLastNames(false, false));\n        Assert.assertEquals(\"J. Smith\", al.getAsFirstLastNames(true, false));\n        Assert.assertEquals(\"John Smith\", al.getAsFirstLastNames(false, true));\n        Assert.assertEquals(\"J. Smith\", al.getAsFirstLastNames(true, true));\n\n        al = AuthorList.parse(\"John Smith and Black Brown, Peter\");\n        Assert.assertEquals(\"John Smith and Peter Black Brown\", al.getAsFirstLastNames(false, false));\n        Assert.assertEquals(\"J. Smith and P. Black Brown\", al.getAsFirstLastNames(true, false));\n        Assert.assertEquals(\"John Smith and Peter Black Brown\", al.getAsFirstLastNames(false, true));\n        Assert.assertEquals(\"J. Smith and P. Black Brown\", al.getAsFirstLastNames(true, true));\n\n        al = AuthorList.parse(\"John von Neumann and John Smith and Black Brown, Peter\");\n        Assert.assertEquals(\"John von Neumann, John Smith and Peter Black Brown\", al.getAsFirstLastNames(\n                false, false));\n        Assert.assertEquals(\"J. von Neumann, J. Smith and P. Black Brown\", al.getAsFirstLastNames(true,\n                false));\n        Assert.assertEquals(\"John von Neumann, John Smith, and Peter Black Brown\", al\n                .getAsFirstLastNames(false, true));\n        Assert.assertEquals(\"J. von Neumann, J. Smith, and P. Black Brown\", al.getAsFirstLastNames(true,\n                true));\n\n        al = AuthorList.parse(\"John Peter von Neumann\");\n        Assert.assertEquals(\"John Peter von Neumann\", al.getAsFirstLastNames(false, false));\n        Assert.assertEquals(\"John Peter von Neumann\", al.getAsFirstLastNames(false, true));\n        Assert.assertEquals(\"J. P. von Neumann\", al.getAsFirstLastNames(true, false));\n        Assert.assertEquals(\"J. P. von Neumann\", al.getAsFirstLastNames(true, true));\n    }\n","date":"2017-02-17 05:41:47","endLine":574,"groupId":"958","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testGetAuthorsFirstFirst","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/1a/cbb4742700cac0b261d4116fd6bd83ffe08886.src","preCode":"    public void testGetAuthorsFirstFirst() {\n\n        AuthorList al;\n\n        al = AuthorList.parse(\"\");\n        Assert.assertEquals(\"\", al.getAsFirstLastNames(true, false));\n        Assert.assertEquals(\"\", al.getAsFirstLastNames(false, false));\n        Assert.assertEquals(\"\", al.getAsFirstLastNames(true, true));\n        Assert.assertEquals(\"\", al.getAsFirstLastNames(false, true));\n\n        al = AuthorList.parse(\"John Smith\");\n        Assert.assertEquals(\"John Smith\", al.getAsFirstLastNames(false, false));\n        Assert.assertEquals(\"J. Smith\", al.getAsFirstLastNames(true, false));\n        Assert.assertEquals(\"John Smith\", al.getAsFirstLastNames(false, true));\n        Assert.assertEquals(\"J. Smith\", al.getAsFirstLastNames(true, true));\n\n        al = AuthorList.parse(\"John Smith and Black Brown, Peter\");\n        Assert.assertEquals(\"John Smith and Peter Black Brown\", al.getAsFirstLastNames(false, false));\n        Assert.assertEquals(\"J. Smith and P. Black Brown\", al.getAsFirstLastNames(true, false));\n        Assert.assertEquals(\"John Smith and Peter Black Brown\", al.getAsFirstLastNames(false, true));\n        Assert.assertEquals(\"J. Smith and P. Black Brown\", al.getAsFirstLastNames(true, true));\n\n        al = AuthorList.parse(\"John von Neumann and John Smith and Black Brown, Peter\");\n        Assert.assertEquals(\"John von Neumann, John Smith and Peter Black Brown\", al.getAsFirstLastNames(\n                false, false));\n        Assert.assertEquals(\"J. von Neumann, J. Smith and P. Black Brown\", al.getAsFirstLastNames(true,\n                false));\n        Assert.assertEquals(\"John von Neumann, John Smith, and Peter Black Brown\", al\n                .getAsFirstLastNames(false, true));\n        Assert.assertEquals(\"J. von Neumann, J. Smith, and P. Black Brown\", al.getAsFirstLastNames(true,\n                true));\n\n        al = AuthorList.parse(\"John Peter von Neumann\");\n        Assert.assertEquals(\"John Peter von Neumann\", al.getAsFirstLastNames(false, false));\n        Assert.assertEquals(\"John Peter von Neumann\", al.getAsFirstLastNames(false, true));\n        Assert.assertEquals(\"J. P. von Neumann\", al.getAsFirstLastNames(true, false));\n        Assert.assertEquals(\"J. P. von Neumann\", al.getAsFirstLastNames(true, true));\n    }\n","realPath":"src/test/java/org/jabref/model/entry/AuthorListTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":537,"status":"B"}],"commitId":"ebbeb1d249edf7134abf92d24c2031ae54d19881","commitMessage":"@@@Merge branch 'net-sf-to-org-jabref'\n","date":"2017-02-17 05:41:47","modifiedFileCount":"1","status":"B","submitter":"Oliver Kopp"},{"authorTime":"2018-02-12 00:05:54","codes":[{"authorDate":"2018-02-12 00:05:54","commitOrder":2,"curCode":"    public void testGetAuthorsLastFirstOxfordComma() {\n        \r\n        AuthorList al;\n\n        al = AuthorList.parse(\"\");\n        assertEquals(\"\", al.getAsLastFirstNames(true, true));\n        assertEquals(\"\", al.getAsLastFirstNames(false, true));\n\n        al = AuthorList.parse(\"John Smith\");\n        assertEquals(\"Smith, John\", al.getAsLastFirstNames(false, true));\n        assertEquals(\"Smith, J.\", al.getAsLastFirstNames(true, true));\n\n        al = AuthorList.parse(\"John Smith and Black Brown, Peter\");\n        assertEquals(\"Smith, John and Black Brown, Peter\", al.getAsLastFirstNames(false, true));\n        assertEquals(\"Smith, J. and Black Brown, P.\", al.getAsLastFirstNames(true, true));\n\n        al = AuthorList.parse(\"John von Neumann and John Smith and Black Brown, Peter\");\n        assertEquals(\"von Neumann, John, Smith, John, and Black Brown, Peter\", al\n                .getAsLastFirstNames(false, true));\n        assertEquals(\"von Neumann, J., Smith, J., and Black Brown, P.\", al.getAsLastFirstNames(\n                true, true));\n\n        al = AuthorList.parse(\"John Peter von Neumann\");\n        assertEquals(\"von Neumann, J. P.\", al.getAsLastFirstNames(true, true));\n    }\n","date":"2018-02-12 00:05:54","endLine":490,"groupId":"10777","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testGetAuthorsLastFirstOxfordComma","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/73/a15650267af9d2ad89b91c197a8fadcb2bb0e4.src","preCode":"    public void testGetAuthorsLastFirstOxfordComma() {\n        \r\n        AuthorList al;\n\n        al = AuthorList.parse(\"\");\n        Assert.assertEquals(\"\", al.getAsLastFirstNames(true, true));\n        Assert.assertEquals(\"\", al.getAsLastFirstNames(false, true));\n\n        al = AuthorList.parse(\"John Smith\");\n        Assert.assertEquals(\"Smith, John\", al.getAsLastFirstNames(false, true));\n        Assert.assertEquals(\"Smith, J.\", al.getAsLastFirstNames(true, true));\n\n        al = AuthorList.parse(\"John Smith and Black Brown, Peter\");\n        Assert.assertEquals(\"Smith, John and Black Brown, Peter\", al.getAsLastFirstNames(false, true));\n        Assert.assertEquals(\"Smith, J. and Black Brown, P.\", al.getAsLastFirstNames(true, true));\n\n        al = AuthorList.parse(\"John von Neumann and John Smith and Black Brown, Peter\");\n        Assert.assertEquals(\"von Neumann, John, Smith, John, and Black Brown, Peter\", al\n                .getAsLastFirstNames(false, true));\n        Assert.assertEquals(\"von Neumann, J., Smith, J., and Black Brown, P.\", al.getAsLastFirstNames(\n                true, true));\n\n        al = AuthorList.parse(\"John Peter von Neumann\");\n        Assert.assertEquals(\"von Neumann, J. P.\", al.getAsLastFirstNames(true, true));\n    }\n","realPath":"src/test/java/org/jabref/model/entry/AuthorListTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":466,"status":"M"},{"authorDate":"2018-02-12 00:05:54","commitOrder":2,"curCode":"    public void testGetAuthorsFirstFirst() {\n\n        AuthorList al;\n\n        al = AuthorList.parse(\"\");\n        assertEquals(\"\", al.getAsFirstLastNames(true, false));\n        assertEquals(\"\", al.getAsFirstLastNames(false, false));\n        assertEquals(\"\", al.getAsFirstLastNames(true, true));\n        assertEquals(\"\", al.getAsFirstLastNames(false, true));\n\n        al = AuthorList.parse(\"John Smith\");\n        assertEquals(\"John Smith\", al.getAsFirstLastNames(false, false));\n        assertEquals(\"J. Smith\", al.getAsFirstLastNames(true, false));\n        assertEquals(\"John Smith\", al.getAsFirstLastNames(false, true));\n        assertEquals(\"J. Smith\", al.getAsFirstLastNames(true, true));\n\n        al = AuthorList.parse(\"John Smith and Black Brown, Peter\");\n        assertEquals(\"John Smith and Peter Black Brown\", al.getAsFirstLastNames(false, false));\n        assertEquals(\"J. Smith and P. Black Brown\", al.getAsFirstLastNames(true, false));\n        assertEquals(\"John Smith and Peter Black Brown\", al.getAsFirstLastNames(false, true));\n        assertEquals(\"J. Smith and P. Black Brown\", al.getAsFirstLastNames(true, true));\n\n        al = AuthorList.parse(\"John von Neumann and John Smith and Black Brown, Peter\");\n        assertEquals(\"John von Neumann, John Smith and Peter Black Brown\", al.getAsFirstLastNames(\n                false, false));\n        assertEquals(\"J. von Neumann, J. Smith and P. Black Brown\", al.getAsFirstLastNames(true,\n                false));\n        assertEquals(\"John von Neumann, John Smith, and Peter Black Brown\", al\n                .getAsFirstLastNames(false, true));\n        assertEquals(\"J. von Neumann, J. Smith, and P. Black Brown\", al.getAsFirstLastNames(true,\n                true));\n\n        al = AuthorList.parse(\"John Peter von Neumann\");\n        assertEquals(\"John Peter von Neumann\", al.getAsFirstLastNames(false, false));\n        assertEquals(\"John Peter von Neumann\", al.getAsFirstLastNames(false, true));\n        assertEquals(\"J. P. von Neumann\", al.getAsFirstLastNames(true, false));\n        assertEquals(\"J. P. von Neumann\", al.getAsFirstLastNames(true, true));\n    }\n","date":"2018-02-12 00:05:54","endLine":562,"groupId":"10777","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testGetAuthorsFirstFirst","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/73/a15650267af9d2ad89b91c197a8fadcb2bb0e4.src","preCode":"    public void testGetAuthorsFirstFirst() {\n\n        AuthorList al;\n\n        al = AuthorList.parse(\"\");\n        Assert.assertEquals(\"\", al.getAsFirstLastNames(true, false));\n        Assert.assertEquals(\"\", al.getAsFirstLastNames(false, false));\n        Assert.assertEquals(\"\", al.getAsFirstLastNames(true, true));\n        Assert.assertEquals(\"\", al.getAsFirstLastNames(false, true));\n\n        al = AuthorList.parse(\"John Smith\");\n        Assert.assertEquals(\"John Smith\", al.getAsFirstLastNames(false, false));\n        Assert.assertEquals(\"J. Smith\", al.getAsFirstLastNames(true, false));\n        Assert.assertEquals(\"John Smith\", al.getAsFirstLastNames(false, true));\n        Assert.assertEquals(\"J. Smith\", al.getAsFirstLastNames(true, true));\n\n        al = AuthorList.parse(\"John Smith and Black Brown, Peter\");\n        Assert.assertEquals(\"John Smith and Peter Black Brown\", al.getAsFirstLastNames(false, false));\n        Assert.assertEquals(\"J. Smith and P. Black Brown\", al.getAsFirstLastNames(true, false));\n        Assert.assertEquals(\"John Smith and Peter Black Brown\", al.getAsFirstLastNames(false, true));\n        Assert.assertEquals(\"J. Smith and P. Black Brown\", al.getAsFirstLastNames(true, true));\n\n        al = AuthorList.parse(\"John von Neumann and John Smith and Black Brown, Peter\");\n        Assert.assertEquals(\"John von Neumann, John Smith and Peter Black Brown\", al.getAsFirstLastNames(\n                false, false));\n        Assert.assertEquals(\"J. von Neumann, J. Smith and P. Black Brown\", al.getAsFirstLastNames(true,\n                false));\n        Assert.assertEquals(\"John von Neumann, John Smith, and Peter Black Brown\", al\n                .getAsFirstLastNames(false, true));\n        Assert.assertEquals(\"J. von Neumann, J. Smith, and P. Black Brown\", al.getAsFirstLastNames(true,\n                true));\n\n        al = AuthorList.parse(\"John Peter von Neumann\");\n        Assert.assertEquals(\"John Peter von Neumann\", al.getAsFirstLastNames(false, false));\n        Assert.assertEquals(\"John Peter von Neumann\", al.getAsFirstLastNames(false, true));\n        Assert.assertEquals(\"J. P. von Neumann\", al.getAsFirstLastNames(true, false));\n        Assert.assertEquals(\"J. P. von Neumann\", al.getAsFirstLastNames(true, true));\n    }\n","realPath":"src/test/java/org/jabref/model/entry/AuthorListTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":525,"status":"M"}],"commitId":"1cef92447c4ae65ebe28d94cf9acf708861bb67b","commitMessage":"@@@Merge pull request #3711 from JabRef/junit5\n\nmigrate majority of tests to junit5","date":"2018-02-12 00:05:54","modifiedFileCount":"244","status":"M","submitter":"Oliver Kopp"}]
