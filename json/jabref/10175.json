[{"authorTime":"2021-05-01 22:55:15","codes":[{"authorDate":"2021-05-01 22:55:15","commitOrder":1,"curCode":"    public void convertJournalField() throws Exception {\n        IEEEQueryTransformer transformer = ((IEEEQueryTransformer) getTransformer());\n\n        String queryString = \"journal:Nature\";\n        QueryNode luceneQuery = new StandardSyntaxParser().parse(queryString, AbstractQueryTransformer.NO_EXPLICIT_FIELD);\n        transformer.transformLuceneQuery(luceneQuery);\n\n        assertEquals(\"\\\"Nature\\\"\", transformer.getJournal().get());\n    }\n","date":"2021-05-01 22:55:15","endLine":46,"groupId":"9593","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"convertJournalField","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/e1/b252e1f127abe6c469f598093acdbd3e0daa03.src","preCode":"    public void convertJournalField() throws Exception {\n        IEEEQueryTransformer transformer = ((IEEEQueryTransformer) getTransformer());\n\n        String queryString = \"journal:Nature\";\n        QueryNode luceneQuery = new StandardSyntaxParser().parse(queryString, AbstractQueryTransformer.NO_EXPLICIT_FIELD);\n        transformer.transformLuceneQuery(luceneQuery);\n\n        assertEquals(\"\\\"Nature\\\"\", transformer.getJournal().get());\n    }\n","realPath":"src/test/java/org/jabref/logic/importer/fetcher/transformers/IEEEQueryTransformerTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":38,"status":"B"},{"authorDate":"2021-05-01 22:55:15","commitOrder":1,"curCode":"    public void convertYearRangeField() throws Exception {\n        IEEEQueryTransformer transformer = ((IEEEQueryTransformer) getTransformer());\n\n        String queryString = \"year-range:2018-2021\";\n        QueryNode luceneQuery = new StandardSyntaxParser().parse(queryString, AbstractQueryTransformer.NO_EXPLICIT_FIELD);\n        transformer.transformLuceneQuery(luceneQuery);\n\n        assertEquals(2018, transformer.getStartYear());\n        assertEquals(2021, transformer.getEndYear());\n    }\n","date":"2021-05-01 22:55:15","endLine":73,"groupId":"7787","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"convertYearRangeField","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/e1/b252e1f127abe6c469f598093acdbd3e0daa03.src","preCode":"    public void convertYearRangeField() throws Exception {\n        IEEEQueryTransformer transformer = ((IEEEQueryTransformer) getTransformer());\n\n        String queryString = \"year-range:2018-2021\";\n        QueryNode luceneQuery = new StandardSyntaxParser().parse(queryString, AbstractQueryTransformer.NO_EXPLICIT_FIELD);\n        transformer.transformLuceneQuery(luceneQuery);\n\n        assertEquals(2018, transformer.getStartYear());\n        assertEquals(2021, transformer.getEndYear());\n    }\n","realPath":"src/test/java/org/jabref/logic/importer/fetcher/transformers/IEEEQueryTransformerTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":64,"status":"B"}],"commitId":"6e99a3390900a65a8d06b6dfa933889667a619f2","commitMessage":"@@@Fix CCSB and DOAJ (#7426)\n\n","date":"2021-05-01 22:55:15","modifiedFileCount":"21","status":"B","submitter":"Oliver Kopp"},{"authorTime":"2021-06-30 05:54:52","codes":[{"authorDate":"2021-06-30 05:54:52","commitOrder":2,"curCode":"    public void convertJournalField() throws Exception {\n        IEEEQueryTransformer transformer = getTransformer();\n\n        String queryString = \"journal:Nature\";\n        QueryNode luceneQuery = new StandardSyntaxParser().parse(queryString, AbstractQueryTransformer.NO_EXPLICIT_FIELD);\n        transformer.transformLuceneQuery(luceneQuery);\n\n        assertEquals(\"\\\"Nature\\\"\", transformer.getJournal().get());\n    }\n","date":"2021-06-30 05:54:52","endLine":50,"groupId":"10175","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"convertJournalField","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/3a/9e6cd275e08d4964c103d2a403e53b34ca0a31.src","preCode":"    public void convertJournalField() throws Exception {\n        IEEEQueryTransformer transformer = ((IEEEQueryTransformer) getTransformer());\n\n        String queryString = \"journal:Nature\";\n        QueryNode luceneQuery = new StandardSyntaxParser().parse(queryString, AbstractQueryTransformer.NO_EXPLICIT_FIELD);\n        transformer.transformLuceneQuery(luceneQuery);\n\n        assertEquals(\"\\\"Nature\\\"\", transformer.getJournal().get());\n    }\n","realPath":"src/test/java/org/jabref/logic/importer/fetcher/transformers/IEEEQueryTransformerTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":42,"status":"M"},{"authorDate":"2021-06-30 05:54:52","commitOrder":2,"curCode":"    public void convertYearRangeField() throws Exception {\n        IEEEQueryTransformer transformer = getTransformer();\n\n        String queryString = \"year-range:2018-2021\";\n        QueryNode luceneQuery = new StandardSyntaxParser().parse(queryString, AbstractQueryTransformer.NO_EXPLICIT_FIELD);\n        transformer.transformLuceneQuery(luceneQuery);\n\n        assertEquals(2018, transformer.getStartYear());\n        assertEquals(2021, transformer.getEndYear());\n    }\n","date":"2021-06-30 05:54:52","endLine":77,"groupId":"10175","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"convertYearRangeField","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/3a/9e6cd275e08d4964c103d2a403e53b34ca0a31.src","preCode":"    public void convertYearRangeField() throws Exception {\n        IEEEQueryTransformer transformer = ((IEEEQueryTransformer) getTransformer());\n\n        String queryString = \"year-range:2018-2021\";\n        QueryNode luceneQuery = new StandardSyntaxParser().parse(queryString, AbstractQueryTransformer.NO_EXPLICIT_FIELD);\n        transformer.transformLuceneQuery(luceneQuery);\n\n        assertEquals(2018, transformer.getStartYear());\n        assertEquals(2021, transformer.getEndYear());\n    }\n","realPath":"src/test/java/org/jabref/logic/importer/fetcher/transformers/IEEEQueryTransformerTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":68,"status":"M"}],"commitId":"c168fbd4cea905b4aefd4b6221e1435ddcec1595","commitMessage":"@@@Fix IEEE test (#7852)\n\n","date":"2021-06-30 05:54:52","modifiedFileCount":"14","status":"M","submitter":"Oliver Kopp"}]
