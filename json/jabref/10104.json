[{"authorTime":"2020-11-26 00:41:30","codes":[{"authorDate":"2020-11-26 00:41:30","commitOrder":1,"curCode":"    private void setUp() throws Exception {\n        setUpRepository();\n        importFormatPreferences = mock(ImportFormatPreferences.class, Answers.RETURNS_DEEP_STUBS);\n        savePreferences = mock(SavePreferences.class, Answers.RETURNS_DEEP_STUBS);\n        when(savePreferences.getSaveOrder()).thenReturn(new SaveOrderConfig());\n        when(savePreferences.getEncoding()).thenReturn(null);\n        when(savePreferences.takeMetadataSaveOrderInAccount()).thenReturn(true);\n        when(importFormatPreferences.getKeywordSeparator()).thenReturn(',');\n        when(importFormatPreferences.getFieldContentFormatterPreferences()).thenReturn(new FieldContentFormatterPreferences());\n        when(importFormatPreferences.isKeywordSyncEnabled()).thenReturn(false);\n        when(importFormatPreferences.getEncoding()).thenReturn(StandardCharsets.UTF_8);\n        entryTypesManager = new BibEntryTypesManager();\n    }\n","date":"2020-11-26 00:41:30","endLine":84,"groupId":"3112","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"setUp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/7c/6b53e85a236780a4e53c0df764fb7fb31d934d.src","preCode":"    private void setUp() throws Exception {\n        setUpRepository();\n        importFormatPreferences = mock(ImportFormatPreferences.class, Answers.RETURNS_DEEP_STUBS);\n        savePreferences = mock(SavePreferences.class, Answers.RETURNS_DEEP_STUBS);\n        when(savePreferences.getSaveOrder()).thenReturn(new SaveOrderConfig());\n        when(savePreferences.getEncoding()).thenReturn(null);\n        when(savePreferences.takeMetadataSaveOrderInAccount()).thenReturn(true);\n        when(importFormatPreferences.getKeywordSeparator()).thenReturn(',');\n        when(importFormatPreferences.getFieldContentFormatterPreferences()).thenReturn(new FieldContentFormatterPreferences());\n        when(importFormatPreferences.isKeywordSyncEnabled()).thenReturn(false);\n        when(importFormatPreferences.getEncoding()).thenReturn(StandardCharsets.UTF_8);\n        entryTypesManager = new BibEntryTypesManager();\n    }\n","realPath":"src/test/java/org/jabref/logic/crawler/CrawlerTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":72,"status":"B"},{"authorDate":"2020-11-26 00:41:30","commitOrder":1,"curCode":"    public void setUpMocks() {\n        savePreferences = mock(SavePreferences.class, Answers.RETURNS_DEEP_STUBS);\n        importFormatPreferences = mock(ImportFormatPreferences.class, Answers.RETURNS_DEEP_STUBS);\n        citationKeyPatternPreferences = new CitationKeyPatternPreferences(\n                false,\n                false,\n                false,\n                CitationKeyPatternPreferences.KeySuffix.SECOND_WITH_A,\n                \"\",\n                \"\",\n                DEFAULT_UNWANTED_CHARACTERS,\n                GlobalCitationKeyPattern.fromPattern(\"[auth][year]\"),\n                ',');\n        when(savePreferences.getSaveOrder()).thenReturn(new SaveOrderConfig());\n        when(savePreferences.getEncoding()).thenReturn(null);\n        when(savePreferences.takeMetadataSaveOrderInAccount()).thenReturn(true);\n        when(importFormatPreferences.getKeywordSeparator()).thenReturn(',');\n        when(importFormatPreferences.getFieldContentFormatterPreferences()).thenReturn(new FieldContentFormatterPreferences());\n        when(importFormatPreferences.isKeywordSyncEnabled()).thenReturn(false);\n        when(importFormatPreferences.getEncoding()).thenReturn(StandardCharsets.UTF_8);\n        entryTypesManager = new BibEntryTypesManager();\n    }\n","date":"2020-11-26 00:41:30","endLine":86,"groupId":"3112","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"setUpMocks","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/8a/69c6d7a011dfc002a2d5bb3d5da06c2310c6b5.src","preCode":"    public void setUpMocks() {\n        savePreferences = mock(SavePreferences.class, Answers.RETURNS_DEEP_STUBS);\n        importFormatPreferences = mock(ImportFormatPreferences.class, Answers.RETURNS_DEEP_STUBS);\n        citationKeyPatternPreferences = new CitationKeyPatternPreferences(\n                false,\n                false,\n                false,\n                CitationKeyPatternPreferences.KeySuffix.SECOND_WITH_A,\n                \"\",\n                \"\",\n                DEFAULT_UNWANTED_CHARACTERS,\n                GlobalCitationKeyPattern.fromPattern(\"[auth][year]\"),\n                ',');\n        when(savePreferences.getSaveOrder()).thenReturn(new SaveOrderConfig());\n        when(savePreferences.getEncoding()).thenReturn(null);\n        when(savePreferences.takeMetadataSaveOrderInAccount()).thenReturn(true);\n        when(importFormatPreferences.getKeywordSeparator()).thenReturn(',');\n        when(importFormatPreferences.getFieldContentFormatterPreferences()).thenReturn(new FieldContentFormatterPreferences());\n        when(importFormatPreferences.isKeywordSyncEnabled()).thenReturn(false);\n        when(importFormatPreferences.getEncoding()).thenReturn(StandardCharsets.UTF_8);\n        entryTypesManager = new BibEntryTypesManager();\n    }\n","realPath":"src/test/java/org/jabref/logic/crawler/StudyRepositoryTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":65,"status":"B"}],"commitId":"b19c3e4700f82d90a804a5cf3467aedf00385dad","commitMessage":"@@@Enable automated cross library search using a cross library query lan? (#7124)\n\n* Enable automated cross library search using a cross library query language.\n\nSigned-off-by: Dominik Voigt <dominik.ingo.voigt@gmail.com>\n\n* Pull Global upward through constructor.\n\n* Pull Globals and ImportFormatPreferences up through constructor\n\nSigned-off-by: Dominik Voigt <dominik.ingo.voigt@gmail.com>\n\n* Integrate requested changes and fix architecture tests by correcting test classes\n\nSigned-off-by: Dominik Voigt <dominik.ingo.voigt@gmail.com>\n\n* Remove unused imports\n\nSigned-off-by: Dominik Voigt <dominik.ingo.voigt@gmail.com>","date":"2020-11-26 00:41:30","modifiedFileCount":"6","status":"B","submitter":"Dominik Voigt"},{"authorTime":"2020-12-15 04:28:26","codes":[{"authorDate":"2020-12-15 04:28:26","commitOrder":2,"curCode":"    private void setUp() throws Exception {\n        setUpRepository();\n\n        CitationKeyPatternPreferences citationKeyPatternPreferences = new CitationKeyPatternPreferences(\n                false,\n                false,\n                false,\n                CitationKeyPatternPreferences.KeySuffix.SECOND_WITH_A,\n                \"\",\n                \"\",\n                DEFAULT_UNWANTED_CHARACTERS,\n                GlobalCitationKeyPattern.fromPattern(\"[auth][year]\"),\n                ',');\n\n        importFormatPreferences = mock(ImportFormatPreferences.class, Answers.RETURNS_DEEP_STUBS);\n        savePreferences = mock(SavePreferences.class, Answers.RETURNS_DEEP_STUBS);\n        when(savePreferences.getSaveOrder()).thenReturn(new SaveOrderConfig());\n        when(savePreferences.getEncoding()).thenReturn(null);\n        when(savePreferences.takeMetadataSaveOrderInAccount()).thenReturn(true);\n        when(savePreferences.getCitationKeyPatternPreferences()).thenReturn(citationKeyPatternPreferences);\n        when(importFormatPreferences.getKeywordSeparator()).thenReturn(',');\n        when(importFormatPreferences.getFieldContentFormatterPreferences()).thenReturn(new FieldContentFormatterPreferences());\n        when(importFormatPreferences.isKeywordSyncEnabled()).thenReturn(false);\n        when(importFormatPreferences.getEncoding()).thenReturn(StandardCharsets.UTF_8);\n        entryTypesManager = new BibEntryTypesManager();\n    }\n","date":"2020-12-15 04:28:26","endLine":103,"groupId":"5998","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"setUp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/9a/821b409e6df28249c1956e29e0736330ade82a.src","preCode":"    private void setUp() throws Exception {\n        setUpRepository();\n        importFormatPreferences = mock(ImportFormatPreferences.class, Answers.RETURNS_DEEP_STUBS);\n        savePreferences = mock(SavePreferences.class, Answers.RETURNS_DEEP_STUBS);\n        when(savePreferences.getSaveOrder()).thenReturn(new SaveOrderConfig());\n        when(savePreferences.getEncoding()).thenReturn(null);\n        when(savePreferences.takeMetadataSaveOrderInAccount()).thenReturn(true);\n        when(importFormatPreferences.getKeywordSeparator()).thenReturn(',');\n        when(importFormatPreferences.getFieldContentFormatterPreferences()).thenReturn(new FieldContentFormatterPreferences());\n        when(importFormatPreferences.isKeywordSyncEnabled()).thenReturn(false);\n        when(importFormatPreferences.getEncoding()).thenReturn(StandardCharsets.UTF_8);\n        entryTypesManager = new BibEntryTypesManager();\n    }\n","realPath":"src/test/java/org/jabref/logic/crawler/CrawlerTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":78,"status":"M"},{"authorDate":"2020-12-15 04:28:26","commitOrder":2,"curCode":"    public void setUpMocks() {\n        savePreferences = mock(SavePreferences.class, Answers.RETURNS_DEEP_STUBS);\n        importFormatPreferences = mock(ImportFormatPreferences.class, Answers.RETURNS_DEEP_STUBS);\n        citationKeyPatternPreferences = new CitationKeyPatternPreferences(\n                false,\n                false,\n                false,\n                CitationKeyPatternPreferences.KeySuffix.SECOND_WITH_A,\n                \"\",\n                \"\",\n                DEFAULT_UNWANTED_CHARACTERS,\n                GlobalCitationKeyPattern.fromPattern(\"[auth][year]\"),\n                ',');\n        when(savePreferences.getSaveOrder()).thenReturn(new SaveOrderConfig());\n        when(savePreferences.getEncoding()).thenReturn(null);\n        when(savePreferences.takeMetadataSaveOrderInAccount()).thenReturn(true);\n        when(savePreferences.getCitationKeyPatternPreferences()).thenReturn(citationKeyPatternPreferences);\n        when(importFormatPreferences.getKeywordSeparator()).thenReturn(',');\n        when(importFormatPreferences.getFieldContentFormatterPreferences()).thenReturn(new FieldContentFormatterPreferences());\n        when(importFormatPreferences.isKeywordSyncEnabled()).thenReturn(false);\n        when(importFormatPreferences.getEncoding()).thenReturn(StandardCharsets.UTF_8);\n        entryTypesManager = new BibEntryTypesManager();\n    }\n","date":"2020-12-15 04:28:26","endLine":87,"groupId":"3112","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"setUpMocks","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/c7/81fc3274ea6ac1faad74df38f4458a9549cfab.src","preCode":"    public void setUpMocks() {\n        savePreferences = mock(SavePreferences.class, Answers.RETURNS_DEEP_STUBS);\n        importFormatPreferences = mock(ImportFormatPreferences.class, Answers.RETURNS_DEEP_STUBS);\n        citationKeyPatternPreferences = new CitationKeyPatternPreferences(\n                false,\n                false,\n                false,\n                CitationKeyPatternPreferences.KeySuffix.SECOND_WITH_A,\n                \"\",\n                \"\",\n                DEFAULT_UNWANTED_CHARACTERS,\n                GlobalCitationKeyPattern.fromPattern(\"[auth][year]\"),\n                ',');\n        when(savePreferences.getSaveOrder()).thenReturn(new SaveOrderConfig());\n        when(savePreferences.getEncoding()).thenReturn(null);\n        when(savePreferences.takeMetadataSaveOrderInAccount()).thenReturn(true);\n        when(importFormatPreferences.getKeywordSeparator()).thenReturn(',');\n        when(importFormatPreferences.getFieldContentFormatterPreferences()).thenReturn(new FieldContentFormatterPreferences());\n        when(importFormatPreferences.isKeywordSyncEnabled()).thenReturn(false);\n        when(importFormatPreferences.getEncoding()).thenReturn(StandardCharsets.UTF_8);\n        entryTypesManager = new BibEntryTypesManager();\n    }\n","realPath":"src/test/java/org/jabref/logic/crawler/StudyRepositoryTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":65,"status":"M"}],"commitId":"c0153bd501754d220e34f45ca689851f8ffd5fbd","commitMessage":"@@@Extraction of Globals.prefs.put and .get (#7121)\n\nCo-authored-by: Siedlerchr <siedlerkiller@gmail.com>\nCo-authored-by: Tobias Diez <tobiasdiez@gmx.de>","date":"2020-12-15 04:28:26","modifiedFileCount":"132","status":"M","submitter":"Carl Christian Snethlage"},{"authorTime":"2021-01-15 05:25:34","codes":[{"authorDate":"2021-01-15 05:25:34","commitOrder":3,"curCode":"    private void setUp() throws Exception {\n        setUpRepository();\n\n        CitationKeyPatternPreferences citationKeyPatternPreferences = new CitationKeyPatternPreferences(\n                false,\n                false,\n                false,\n                CitationKeyPatternPreferences.KeySuffix.SECOND_WITH_A,\n                \"\",\n                \"\",\n                DEFAULT_UNWANTED_CHARACTERS,\n                GlobalCitationKeyPattern.fromPattern(\"[auth][year]\"),\n                ',');\n\n        importFormatPreferences = mock(ImportFormatPreferences.class, Answers.RETURNS_DEEP_STUBS);\n        savePreferences = mock(SavePreferences.class, Answers.RETURNS_DEEP_STUBS);\n        timestampPreferences = mock(TimestampPreferences.class);\n        when(savePreferences.getSaveOrder()).thenReturn(new SaveOrderConfig());\n        when(savePreferences.getEncoding()).thenReturn(null);\n        when(savePreferences.takeMetadataSaveOrderInAccount()).thenReturn(true);\n        when(savePreferences.getCitationKeyPatternPreferences()).thenReturn(citationKeyPatternPreferences);\n        when(importFormatPreferences.getKeywordSeparator()).thenReturn(',');\n        when(importFormatPreferences.getFieldContentFormatterPreferences()).thenReturn(new FieldContentFormatterPreferences());\n        when(importFormatPreferences.isKeywordSyncEnabled()).thenReturn(false);\n        when(importFormatPreferences.getEncoding()).thenReturn(StandardCharsets.UTF_8);\n        entryTypesManager = new BibEntryTypesManager();\n    }\n","date":"2021-01-15 05:25:34","endLine":107,"groupId":"7435","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"setUp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/df/a6e11ba9ca4c3f704450ffe1e77e53be29556a.src","preCode":"    private void setUp() throws Exception {\n        setUpRepository();\n\n        CitationKeyPatternPreferences citationKeyPatternPreferences = new CitationKeyPatternPreferences(\n                false,\n                false,\n                false,\n                CitationKeyPatternPreferences.KeySuffix.SECOND_WITH_A,\n                \"\",\n                \"\",\n                DEFAULT_UNWANTED_CHARACTERS,\n                GlobalCitationKeyPattern.fromPattern(\"[auth][year]\"),\n                ',');\n\n        importFormatPreferences = mock(ImportFormatPreferences.class, Answers.RETURNS_DEEP_STUBS);\n        savePreferences = mock(SavePreferences.class, Answers.RETURNS_DEEP_STUBS);\n        when(savePreferences.getSaveOrder()).thenReturn(new SaveOrderConfig());\n        when(savePreferences.getEncoding()).thenReturn(null);\n        when(savePreferences.takeMetadataSaveOrderInAccount()).thenReturn(true);\n        when(savePreferences.getCitationKeyPatternPreferences()).thenReturn(citationKeyPatternPreferences);\n        when(importFormatPreferences.getKeywordSeparator()).thenReturn(',');\n        when(importFormatPreferences.getFieldContentFormatterPreferences()).thenReturn(new FieldContentFormatterPreferences());\n        when(importFormatPreferences.isKeywordSyncEnabled()).thenReturn(false);\n        when(importFormatPreferences.getEncoding()).thenReturn(StandardCharsets.UTF_8);\n        entryTypesManager = new BibEntryTypesManager();\n    }\n","realPath":"src/test/java/org/jabref/logic/crawler/CrawlerTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":81,"status":"M"},{"authorDate":"2021-01-15 05:25:34","commitOrder":3,"curCode":"    public void setUpMocks() {\n        savePreferences = mock(SavePreferences.class, Answers.RETURNS_DEEP_STUBS);\n        importFormatPreferences = mock(ImportFormatPreferences.class, Answers.RETURNS_DEEP_STUBS);\n        timestampPreferences = mock(TimestampPreferences.class);\n        citationKeyPatternPreferences = new CitationKeyPatternPreferences(\n                false,\n                false,\n                false,\n                CitationKeyPatternPreferences.KeySuffix.SECOND_WITH_A,\n                \"\",\n                \"\",\n                DEFAULT_UNWANTED_CHARACTERS,\n                GlobalCitationKeyPattern.fromPattern(\"[auth][year]\"),\n                ',');\n        when(savePreferences.getSaveOrder()).thenReturn(new SaveOrderConfig());\n        when(savePreferences.getEncoding()).thenReturn(null);\n        when(savePreferences.takeMetadataSaveOrderInAccount()).thenReturn(true);\n        when(savePreferences.getCitationKeyPatternPreferences()).thenReturn(citationKeyPatternPreferences);\n        when(importFormatPreferences.getKeywordSeparator()).thenReturn(',');\n        when(importFormatPreferences.getFieldContentFormatterPreferences()).thenReturn(new FieldContentFormatterPreferences());\n        when(importFormatPreferences.isKeywordSyncEnabled()).thenReturn(false);\n        when(importFormatPreferences.getEncoding()).thenReturn(StandardCharsets.UTF_8);\n        when(timestampPreferences.getTimestampField()).then(invocation -> StandardField.TIMESTAMP);\n        entryTypesManager = new BibEntryTypesManager();\n    }\n","date":"2021-01-15 05:25:34","endLine":91,"groupId":"3112","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"setUpMocks","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/17/1fbb70168613e4235b346992280bd8c20bdc93.src","preCode":"    public void setUpMocks() {\n        savePreferences = mock(SavePreferences.class, Answers.RETURNS_DEEP_STUBS);\n        importFormatPreferences = mock(ImportFormatPreferences.class, Answers.RETURNS_DEEP_STUBS);\n        citationKeyPatternPreferences = new CitationKeyPatternPreferences(\n                false,\n                false,\n                false,\n                CitationKeyPatternPreferences.KeySuffix.SECOND_WITH_A,\n                \"\",\n                \"\",\n                DEFAULT_UNWANTED_CHARACTERS,\n                GlobalCitationKeyPattern.fromPattern(\"[auth][year]\"),\n                ',');\n        when(savePreferences.getSaveOrder()).thenReturn(new SaveOrderConfig());\n        when(savePreferences.getEncoding()).thenReturn(null);\n        when(savePreferences.takeMetadataSaveOrderInAccount()).thenReturn(true);\n        when(savePreferences.getCitationKeyPatternPreferences()).thenReturn(citationKeyPatternPreferences);\n        when(importFormatPreferences.getKeywordSeparator()).thenReturn(',');\n        when(importFormatPreferences.getFieldContentFormatterPreferences()).thenReturn(new FieldContentFormatterPreferences());\n        when(importFormatPreferences.isKeywordSyncEnabled()).thenReturn(false);\n        when(importFormatPreferences.getEncoding()).thenReturn(StandardCharsets.UTF_8);\n        entryTypesManager = new BibEntryTypesManager();\n    }\n","realPath":"src/test/java/org/jabref/logic/crawler/StudyRepositoryTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":67,"status":"M"}],"commitId":"e66f5be7d82c7a7618fe327fe958ec57a25ea598","commitMessage":"@@@Add date fields (#7334)\n\nCo-authored-by: Oliver Kopp <kopp.dev@gmail.com>\n","date":"2021-01-15 05:25:34","modifiedFileCount":"31","status":"M","submitter":"Dominik Voigt"},{"authorTime":"2021-01-27 05:40:44","codes":[{"authorDate":"2021-01-15 05:25:34","commitOrder":4,"curCode":"    private void setUp() throws Exception {\n        setUpRepository();\n\n        CitationKeyPatternPreferences citationKeyPatternPreferences = new CitationKeyPatternPreferences(\n                false,\n                false,\n                false,\n                CitationKeyPatternPreferences.KeySuffix.SECOND_WITH_A,\n                \"\",\n                \"\",\n                DEFAULT_UNWANTED_CHARACTERS,\n                GlobalCitationKeyPattern.fromPattern(\"[auth][year]\"),\n                ',');\n\n        importFormatPreferences = mock(ImportFormatPreferences.class, Answers.RETURNS_DEEP_STUBS);\n        savePreferences = mock(SavePreferences.class, Answers.RETURNS_DEEP_STUBS);\n        timestampPreferences = mock(TimestampPreferences.class);\n        when(savePreferences.getSaveOrder()).thenReturn(new SaveOrderConfig());\n        when(savePreferences.getEncoding()).thenReturn(null);\n        when(savePreferences.takeMetadataSaveOrderInAccount()).thenReturn(true);\n        when(savePreferences.getCitationKeyPatternPreferences()).thenReturn(citationKeyPatternPreferences);\n        when(importFormatPreferences.getKeywordSeparator()).thenReturn(',');\n        when(importFormatPreferences.getFieldContentFormatterPreferences()).thenReturn(new FieldContentFormatterPreferences());\n        when(importFormatPreferences.isKeywordSyncEnabled()).thenReturn(false);\n        when(importFormatPreferences.getEncoding()).thenReturn(StandardCharsets.UTF_8);\n        entryTypesManager = new BibEntryTypesManager();\n    }\n","date":"2021-01-15 05:25:34","endLine":107,"groupId":"7435","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"setUp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/df/a6e11ba9ca4c3f704450ffe1e77e53be29556a.src","preCode":"    private void setUp() throws Exception {\n        setUpRepository();\n\n        CitationKeyPatternPreferences citationKeyPatternPreferences = new CitationKeyPatternPreferences(\n                false,\n                false,\n                false,\n                CitationKeyPatternPreferences.KeySuffix.SECOND_WITH_A,\n                \"\",\n                \"\",\n                DEFAULT_UNWANTED_CHARACTERS,\n                GlobalCitationKeyPattern.fromPattern(\"[auth][year]\"),\n                ',');\n\n        importFormatPreferences = mock(ImportFormatPreferences.class, Answers.RETURNS_DEEP_STUBS);\n        savePreferences = mock(SavePreferences.class, Answers.RETURNS_DEEP_STUBS);\n        timestampPreferences = mock(TimestampPreferences.class);\n        when(savePreferences.getSaveOrder()).thenReturn(new SaveOrderConfig());\n        when(savePreferences.getEncoding()).thenReturn(null);\n        when(savePreferences.takeMetadataSaveOrderInAccount()).thenReturn(true);\n        when(savePreferences.getCitationKeyPatternPreferences()).thenReturn(citationKeyPatternPreferences);\n        when(importFormatPreferences.getKeywordSeparator()).thenReturn(',');\n        when(importFormatPreferences.getFieldContentFormatterPreferences()).thenReturn(new FieldContentFormatterPreferences());\n        when(importFormatPreferences.isKeywordSyncEnabled()).thenReturn(false);\n        when(importFormatPreferences.getEncoding()).thenReturn(StandardCharsets.UTF_8);\n        entryTypesManager = new BibEntryTypesManager();\n    }\n","realPath":"src/test/java/org/jabref/logic/crawler/CrawlerTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":81,"status":"N"},{"authorDate":"2021-01-27 05:40:44","commitOrder":4,"curCode":"    public void setUpMocks() throws Exception {\n        savePreferences = mock(SavePreferences.class, Answers.RETURNS_DEEP_STUBS);\n        importFormatPreferences = mock(ImportFormatPreferences.class, Answers.RETURNS_DEEP_STUBS);\n        timestampPreferences = mock(TimestampPreferences.class);\n        citationKeyPatternPreferences = new CitationKeyPatternPreferences(\n                false,\n                false,\n                false,\n                CitationKeyPatternPreferences.KeySuffix.SECOND_WITH_A,\n                \"\",\n                \"\",\n                DEFAULT_UNWANTED_CHARACTERS,\n                GlobalCitationKeyPattern.fromPattern(\"[auth][year]\"),\n                ',');\n        when(savePreferences.getSaveOrder()).thenReturn(new SaveOrderConfig());\n        when(savePreferences.getEncoding()).thenReturn(null);\n        when(savePreferences.takeMetadataSaveOrderInAccount()).thenReturn(true);\n        when(savePreferences.getCitationKeyPatternPreferences()).thenReturn(citationKeyPatternPreferences);\n        when(importFormatPreferences.getKeywordSeparator()).thenReturn(',');\n        when(importFormatPreferences.getFieldContentFormatterPreferences()).thenReturn(new FieldContentFormatterPreferences());\n        when(importFormatPreferences.isKeywordSyncEnabled()).thenReturn(false);\n        when(importFormatPreferences.getEncoding()).thenReturn(StandardCharsets.UTF_8);\n        when(timestampPreferences.getTimestampField()).then(invocation -> StandardField.TIMESTAMP);\n        entryTypesManager = new BibEntryTypesManager();\n        getTestStudyRepository();\n    }\n","date":"2021-01-27 05:40:44","endLine":90,"groupId":"3112","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"setUpMocks","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/8b/ba87c2a38ff63042a453e43331bb6246aee308.src","preCode":"    public void setUpMocks() {\n        savePreferences = mock(SavePreferences.class, Answers.RETURNS_DEEP_STUBS);\n        importFormatPreferences = mock(ImportFormatPreferences.class, Answers.RETURNS_DEEP_STUBS);\n        timestampPreferences = mock(TimestampPreferences.class);\n        citationKeyPatternPreferences = new CitationKeyPatternPreferences(\n                false,\n                false,\n                false,\n                CitationKeyPatternPreferences.KeySuffix.SECOND_WITH_A,\n                \"\",\n                \"\",\n                DEFAULT_UNWANTED_CHARACTERS,\n                GlobalCitationKeyPattern.fromPattern(\"[auth][year]\"),\n                ',');\n        when(savePreferences.getSaveOrder()).thenReturn(new SaveOrderConfig());\n        when(savePreferences.getEncoding()).thenReturn(null);\n        when(savePreferences.takeMetadataSaveOrderInAccount()).thenReturn(true);\n        when(savePreferences.getCitationKeyPatternPreferences()).thenReturn(citationKeyPatternPreferences);\n        when(importFormatPreferences.getKeywordSeparator()).thenReturn(',');\n        when(importFormatPreferences.getFieldContentFormatterPreferences()).thenReturn(new FieldContentFormatterPreferences());\n        when(importFormatPreferences.isKeywordSyncEnabled()).thenReturn(false);\n        when(importFormatPreferences.getEncoding()).thenReturn(StandardCharsets.UTF_8);\n        when(timestampPreferences.getTimestampField()).then(invocation -> StandardField.TIMESTAMP);\n        entryTypesManager = new BibEntryTypesManager();\n    }\n","realPath":"src/test/java/org/jabref/logic/crawler/StudyRepositoryTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":65,"status":"M"}],"commitId":"7117b6197aa6f69f6b8b25f9452e875c9051046b","commitMessage":"@@@Change format for study definition to yaml (#7126)\n\n","date":"2021-01-27 05:40:44","modifiedFileCount":"6","status":"M","submitter":"Dominik Voigt"},{"authorTime":"2021-07-05 03:02:18","codes":[{"authorDate":"2021-07-05 03:02:18","commitOrder":5,"curCode":"    private void setUp() throws Exception {\n        setUpRepository();\n\n        CitationKeyPatternPreferences citationKeyPatternPreferences = new CitationKeyPatternPreferences(\n                false,\n                false,\n                false,\n                CitationKeyPatternPreferences.KeySuffix.SECOND_WITH_A,\n                \"\",\n                \"\",\n                DEFAULT_UNWANTED_CHARACTERS,\n                GlobalCitationKeyPattern.fromPattern(\"[auth][year]\"),\n                ',');\n\n        importFormatPreferences = mock(ImportFormatPreferences.class, Answers.RETURNS_DEEP_STUBS);\n        savePreferences = mock(SavePreferences.class, Answers.RETURNS_DEEP_STUBS);\n        timestampPreferences = mock(TimestampPreferences.class);\n        when(savePreferences.getSaveOrder()).thenReturn(new SaveOrderConfig());\n        when(savePreferences.getEncoding()).thenReturn(null);\n        when(savePreferences.takeMetadataSaveOrderInAccount()).thenReturn(true);\n        when(savePreferences.getCitationKeyPatternPreferences()).thenReturn(citationKeyPatternPreferences);\n        when(savePreferences.getEncoding()).thenReturn(Charset.defaultCharset());\n        when(importFormatPreferences.getKeywordSeparator()).thenReturn(',');\n        when(importFormatPreferences.getFieldContentFormatterPreferences()).thenReturn(new FieldContentFormatterPreferences());\n        when(importFormatPreferences.isKeywordSyncEnabled()).thenReturn(false);\n        when(importFormatPreferences.getEncoding()).thenReturn(StandardCharsets.UTF_8);\n        entryTypesManager = new BibEntryTypesManager();\n    }\n","date":"2021-07-05 03:02:18","endLine":100,"groupId":"10104","id":9,"instanceNumber":1,"isCurCommit":1,"methodName":"setUp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/6d/cc82f08ac4d512e0de7ac7e1a353d42765a943.src","preCode":"    private void setUp() throws Exception {\n        setUpRepository();\n\n        CitationKeyPatternPreferences citationKeyPatternPreferences = new CitationKeyPatternPreferences(\n                false,\n                false,\n                false,\n                CitationKeyPatternPreferences.KeySuffix.SECOND_WITH_A,\n                \"\",\n                \"\",\n                DEFAULT_UNWANTED_CHARACTERS,\n                GlobalCitationKeyPattern.fromPattern(\"[auth][year]\"),\n                ',');\n\n        importFormatPreferences = mock(ImportFormatPreferences.class, Answers.RETURNS_DEEP_STUBS);\n        savePreferences = mock(SavePreferences.class, Answers.RETURNS_DEEP_STUBS);\n        timestampPreferences = mock(TimestampPreferences.class);\n        when(savePreferences.getSaveOrder()).thenReturn(new SaveOrderConfig());\n        when(savePreferences.getEncoding()).thenReturn(null);\n        when(savePreferences.takeMetadataSaveOrderInAccount()).thenReturn(true);\n        when(savePreferences.getCitationKeyPatternPreferences()).thenReturn(citationKeyPatternPreferences);\n        when(importFormatPreferences.getKeywordSeparator()).thenReturn(',');\n        when(importFormatPreferences.getFieldContentFormatterPreferences()).thenReturn(new FieldContentFormatterPreferences());\n        when(importFormatPreferences.isKeywordSyncEnabled()).thenReturn(false);\n        when(importFormatPreferences.getEncoding()).thenReturn(StandardCharsets.UTF_8);\n        entryTypesManager = new BibEntryTypesManager();\n    }\n","realPath":"src/test/java/org/jabref/logic/crawler/CrawlerTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":73,"status":"M"},{"authorDate":"2021-07-05 03:02:18","commitOrder":5,"curCode":"    public void setUpMocks() throws Exception {\n        savePreferences = mock(SavePreferences.class, Answers.RETURNS_DEEP_STUBS);\n        importFormatPreferences = mock(ImportFormatPreferences.class, Answers.RETURNS_DEEP_STUBS);\n        timestampPreferences = mock(TimestampPreferences.class);\n        citationKeyPatternPreferences = new CitationKeyPatternPreferences(\n                false,\n                false,\n                false,\n                CitationKeyPatternPreferences.KeySuffix.SECOND_WITH_A,\n                \"\",\n                \"\",\n                DEFAULT_UNWANTED_CHARACTERS,\n                GlobalCitationKeyPattern.fromPattern(\"[auth][year]\"),\n                ',');\n        when(savePreferences.getSaveOrder()).thenReturn(new SaveOrderConfig());\n        when(savePreferences.getEncoding()).thenReturn(null);\n        when(savePreferences.takeMetadataSaveOrderInAccount()).thenReturn(true);\n        when(savePreferences.getEncoding()).thenReturn(Charset.defaultCharset());\n        when(savePreferences.getCitationKeyPatternPreferences()).thenReturn(citationKeyPatternPreferences);\n        when(importFormatPreferences.getKeywordSeparator()).thenReturn(',');\n        when(importFormatPreferences.getFieldContentFormatterPreferences()).thenReturn(new FieldContentFormatterPreferences());\n        when(importFormatPreferences.isKeywordSyncEnabled()).thenReturn(false);\n        when(importFormatPreferences.getEncoding()).thenReturn(StandardCharsets.UTF_8);\n        when(timestampPreferences.getTimestampField()).then(invocation -> StandardField.TIMESTAMP);\n        entryTypesManager = new BibEntryTypesManager();\n        getTestStudyRepository();\n    }\n","date":"2021-07-05 03:02:18","endLine":92,"groupId":"10104","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"setUpMocks","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/d4/becff0a1dfe71b1b76ea0a227bc186aee5078d.src","preCode":"    public void setUpMocks() throws Exception {\n        savePreferences = mock(SavePreferences.class, Answers.RETURNS_DEEP_STUBS);\n        importFormatPreferences = mock(ImportFormatPreferences.class, Answers.RETURNS_DEEP_STUBS);\n        timestampPreferences = mock(TimestampPreferences.class);\n        citationKeyPatternPreferences = new CitationKeyPatternPreferences(\n                false,\n                false,\n                false,\n                CitationKeyPatternPreferences.KeySuffix.SECOND_WITH_A,\n                \"\",\n                \"\",\n                DEFAULT_UNWANTED_CHARACTERS,\n                GlobalCitationKeyPattern.fromPattern(\"[auth][year]\"),\n                ',');\n        when(savePreferences.getSaveOrder()).thenReturn(new SaveOrderConfig());\n        when(savePreferences.getEncoding()).thenReturn(null);\n        when(savePreferences.takeMetadataSaveOrderInAccount()).thenReturn(true);\n        when(savePreferences.getCitationKeyPatternPreferences()).thenReturn(citationKeyPatternPreferences);\n        when(importFormatPreferences.getKeywordSeparator()).thenReturn(',');\n        when(importFormatPreferences.getFieldContentFormatterPreferences()).thenReturn(new FieldContentFormatterPreferences());\n        when(importFormatPreferences.isKeywordSyncEnabled()).thenReturn(false);\n        when(importFormatPreferences.getEncoding()).thenReturn(StandardCharsets.UTF_8);\n        when(timestampPreferences.getTimestampField()).then(invocation -> StandardField.TIMESTAMP);\n        entryTypesManager = new BibEntryTypesManager();\n        getTestStudyRepository();\n    }\n","realPath":"src/test/java/org/jabref/logic/crawler/StudyRepositoryTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":66,"status":"M"}],"commitId":"f0709b71ca0a303d17904e63072ef4abef29d539","commitMessage":"@@@Feature add git workflow for slr search (#7625)\n\n* Add study UI and Git support\n\n* Modify localization\n\n* Fix checkstyle\n\n* Fix test issues\n\n* Fix architecture test.  modify some formulations in UI\n\n* Add DI for services\n\n* Get table views working\nstandardize UI\n\n* Clean up\n\n* Make localization consistent\n\n* Compressed fxml and fixed minor visual issue (table cell too small)\n\n* Reduced code duplication\n\nCo-authored-by: Carl Christian Snethlage <cc.snethlage@gmail.com>\nCo-authored-by: Siedlerchr <siedlerkiller@gmail.com>","date":"2021-07-05 03:02:18","modifiedFileCount":"8","status":"M","submitter":"Dominik Voigt"}]
