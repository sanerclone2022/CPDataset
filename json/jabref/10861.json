[{"authorTime":"2018-03-16 00:10:13","codes":[{"authorDate":"2018-03-16 00:10:13","commitOrder":1,"curCode":"    public void multiLineReviewField() {\n        String commentString = \"My Review\\n\\nSecond Paragraph\\n\\nThird Paragraph\";\n\n        BibEntry actualEntry = createMinimalBibEntry();\n        actualEntry.setField(FieldName.REVIEW, commentString);\n        ParserResult actualParserResult = new ParserResult(Collections.singletonList(actualEntry));\n\n        BibEntry expectedEntry = createMinimalBibEntry();\n        expectedEntry.setField(FieldName.COMMENT, commentString);\n\n        action.performMigration(actualParserResult);\n\n        assertEquals(expectedEntry, actualParserResult.getDatabase().getEntryByKey(\"Entry1\").get());\n    }\n","date":"2018-03-16 00:10:24","endLine":73,"groupId":"2024","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"multiLineReviewField","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/70/90a14c539283835adb1f6b758c6e66b7c115f0.src","preCode":"    public void multiLineReviewField() {\n        String commentString = \"My Review\\n\\nSecond Paragraph\\n\\nThird Paragraph\";\n\n        BibEntry actualEntry = createMinimalBibEntry();\n        actualEntry.setField(FieldName.REVIEW, commentString);\n        ParserResult actualParserResult = new ParserResult(Collections.singletonList(actualEntry));\n\n        BibEntry expectedEntry = createMinimalBibEntry();\n        expectedEntry.setField(FieldName.COMMENT, commentString);\n\n        action.performMigration(actualParserResult);\n\n        assertEquals(expectedEntry, actualParserResult.getDatabase().getEntryByKey(\"Entry1\").get());\n    }\n","realPath":"src/test/java/org/jabref/migrations/MergeReviewIntoCommentActionMigrationTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":60,"status":"B"},{"authorDate":"2018-03-16 00:10:13","commitOrder":1,"curCode":"    public void reviewAndCommentField() {\n        BibEntry actualEntry = createMinimalBibEntry();\n        actualEntry.setField(FieldName.REVIEW, \"My Review\");\n        actualEntry.setField(FieldName.COMMENT, \"My Comment\");\n\n        ParserResult actualParserResult = new ParserResult(Collections.singletonList(actualEntry));\n\n        BibEntry expectedEntry = createMinimalBibEntry();\n        expectedEntry.setField(FieldName.COMMENT, \"My Comment\\n\" + Localization.lang(\"Review\") + \":\\nMy Review\");\n\n        action.performMigration(actualParserResult);\n\n        assertEquals(expectedEntry, actualParserResult.getDatabase().getEntryByKey(\"Entry1\").get());\n    }\n","date":"2018-03-16 00:10:24","endLine":90,"groupId":"3620","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"reviewAndCommentField","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/70/90a14c539283835adb1f6b758c6e66b7c115f0.src","preCode":"    public void reviewAndCommentField() {\n        BibEntry actualEntry = createMinimalBibEntry();\n        actualEntry.setField(FieldName.REVIEW, \"My Review\");\n        actualEntry.setField(FieldName.COMMENT, \"My Comment\");\n\n        ParserResult actualParserResult = new ParserResult(Collections.singletonList(actualEntry));\n\n        BibEntry expectedEntry = createMinimalBibEntry();\n        expectedEntry.setField(FieldName.COMMENT, \"My Comment\\n\" + Localization.lang(\"Review\") + \":\\nMy Review\");\n\n        action.performMigration(actualParserResult);\n\n        assertEquals(expectedEntry, actualParserResult.getDatabase().getEntryByKey(\"Entry1\").get());\n    }\n","realPath":"src/test/java/org/jabref/migrations/MergeReviewIntoCommentActionMigrationTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":77,"status":"B"}],"commitId":"59b246953070b6c413c6cd1319b76da23499820b","commitMessage":"@@@Move migration to top level package\n","date":"2018-03-16 00:10:24","modifiedFileCount":"1","status":"B","submitter":"Stefan Kolb"},{"authorTime":"2019-08-02 15:20:10","codes":[{"authorDate":"2019-08-02 15:20:10","commitOrder":2,"curCode":"    public void multiLineReviewField() {\n        String commentString = \"My Review\\n\\nSecond Paragraph\\n\\nThird Paragraph\";\n\n        BibEntry actualEntry = createMinimalBibEntry();\n        actualEntry.setField(StandardField.REVIEW, commentString);\n        ParserResult actualParserResult = new ParserResult(Collections.singletonList(actualEntry));\n\n        BibEntry expectedEntry = createMinimalBibEntry();\n        expectedEntry.setField(StandardField.COMMENT, commentString);\n\n        action.performMigration(actualParserResult);\n\n        assertEquals(expectedEntry, actualParserResult.getDatabase().getEntryByKey(\"Entry1\").get());\n    }\n","date":"2019-08-02 15:20:10","endLine":73,"groupId":"2024","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"multiLineReviewField","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/57/725eaf5bafa9b4a05826f9432d18631ec12eb6.src","preCode":"    public void multiLineReviewField() {\n        String commentString = \"My Review\\n\\nSecond Paragraph\\n\\nThird Paragraph\";\n\n        BibEntry actualEntry = createMinimalBibEntry();\n        actualEntry.setField(FieldName.REVIEW, commentString);\n        ParserResult actualParserResult = new ParserResult(Collections.singletonList(actualEntry));\n\n        BibEntry expectedEntry = createMinimalBibEntry();\n        expectedEntry.setField(FieldName.COMMENT, commentString);\n\n        action.performMigration(actualParserResult);\n\n        assertEquals(expectedEntry, actualParserResult.getDatabase().getEntryByKey(\"Entry1\").get());\n    }\n","realPath":"src/test/java/org/jabref/migrations/MergeReviewIntoCommentActionMigrationTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":60,"status":"M"},{"authorDate":"2019-08-02 15:20:10","commitOrder":2,"curCode":"    public void reviewAndCommentField() {\n        BibEntry actualEntry = createMinimalBibEntry();\n        actualEntry.setField(StandardField.REVIEW, \"My Review\");\n        actualEntry.setField(StandardField.COMMENT, \"My Comment\");\n\n        ParserResult actualParserResult = new ParserResult(Collections.singletonList(actualEntry));\n\n        BibEntry expectedEntry = createMinimalBibEntry();\n        expectedEntry.setField(StandardField.COMMENT, \"My Comment\\n\" + Localization.lang(\"Review\") + \":\\nMy Review\");\n\n        action.performMigration(actualParserResult);\n\n        assertEquals(expectedEntry, actualParserResult.getDatabase().getEntryByKey(\"Entry1\").get());\n    }\n","date":"2019-08-02 15:20:10","endLine":90,"groupId":"3620","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"reviewAndCommentField","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/57/725eaf5bafa9b4a05826f9432d18631ec12eb6.src","preCode":"    public void reviewAndCommentField() {\n        BibEntry actualEntry = createMinimalBibEntry();\n        actualEntry.setField(FieldName.REVIEW, \"My Review\");\n        actualEntry.setField(FieldName.COMMENT, \"My Comment\");\n\n        ParserResult actualParserResult = new ParserResult(Collections.singletonList(actualEntry));\n\n        BibEntry expectedEntry = createMinimalBibEntry();\n        expectedEntry.setField(FieldName.COMMENT, \"My Comment\\n\" + Localization.lang(\"Review\") + \":\\nMy Review\");\n\n        action.performMigration(actualParserResult);\n\n        assertEquals(expectedEntry, actualParserResult.getDatabase().getEntryByKey(\"Entry1\").get());\n    }\n","realPath":"src/test/java/org/jabref/migrations/MergeReviewIntoCommentActionMigrationTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":77,"status":"M"}],"commitId":"4b39b78e4afcd6c36b385f5c46f1d9a4eac2e29b","commitMessage":"@@@Move to extended enums for fields and entry types (#5148)\n\n* Introduce interface for fields\n\n* Continue using fields interface instead of strings\n\n* Introduce OrFields class\n\n* Move FieldProperty\n\n* Convert entry types to extended enum\n\n* Start fixing build\n\n* Fix build\n\n* Start fixing tests\n\n* Everything compiles again\n\n* Make model tests pass\n\n* Fix most tests\n\n* Fix build\n\n* Fix a few more tests\n\n* Fix a few more tests\n\n* Fix a few more tests\n\n* Fix a few more tests\n\n* Fix checkstyle issues\n\n* Fix more tests\n\n* Fix more tests\n\n* Disable test that fails on CI\n\n* Disable test that fails on CI\n","date":"2019-08-02 15:20:10","modifiedFileCount":"439","status":"M","submitter":"Tobias Diez"},{"authorTime":"2020-09-08 21:34:34","codes":[{"authorDate":"2020-09-08 21:34:34","commitOrder":3,"curCode":"    public void multiLineReviewField() {\n        String commentString = \"My Review\\n\\nSecond Paragraph\\n\\nThird Paragraph\";\n\n        BibEntry actualEntry = createMinimalBibEntry();\n        actualEntry.setField(StandardField.REVIEW, commentString);\n        ParserResult actualParserResult = new ParserResult(Collections.singletonList(actualEntry));\n\n        BibEntry expectedEntry = createMinimalBibEntry();\n        expectedEntry.setField(StandardField.COMMENT, commentString);\n\n        action.performMigration(actualParserResult);\n\n        assertEquals(expectedEntry, actualParserResult.getDatabase().getEntryByCitationKey(\"Entry1\").get());\n    }\n","date":"2020-09-08 21:34:34","endLine":73,"groupId":"2024","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"multiLineReviewField","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/26/68527fd375234d148e98f2c3dca32aea23e0ee.src","preCode":"    public void multiLineReviewField() {\n        String commentString = \"My Review\\n\\nSecond Paragraph\\n\\nThird Paragraph\";\n\n        BibEntry actualEntry = createMinimalBibEntry();\n        actualEntry.setField(StandardField.REVIEW, commentString);\n        ParserResult actualParserResult = new ParserResult(Collections.singletonList(actualEntry));\n\n        BibEntry expectedEntry = createMinimalBibEntry();\n        expectedEntry.setField(StandardField.COMMENT, commentString);\n\n        action.performMigration(actualParserResult);\n\n        assertEquals(expectedEntry, actualParserResult.getDatabase().getEntryByKey(\"Entry1\").get());\n    }\n","realPath":"src/test/java/org/jabref/migrations/MergeReviewIntoCommentActionMigrationTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":60,"status":"M"},{"authorDate":"2020-09-08 21:34:34","commitOrder":3,"curCode":"    public void reviewAndCommentField() {\n        BibEntry actualEntry = createMinimalBibEntry();\n        actualEntry.setField(StandardField.REVIEW, \"My Review\");\n        actualEntry.setField(StandardField.COMMENT, \"My Comment\");\n\n        ParserResult actualParserResult = new ParserResult(Collections.singletonList(actualEntry));\n\n        BibEntry expectedEntry = createMinimalBibEntry();\n        expectedEntry.setField(StandardField.COMMENT, \"My Comment\\n\" + Localization.lang(\"Review\") + \":\\nMy Review\");\n\n        action.performMigration(actualParserResult);\n\n        assertEquals(expectedEntry, actualParserResult.getDatabase().getEntryByCitationKey(\"Entry1\").get());\n    }\n","date":"2020-09-08 21:34:34","endLine":90,"groupId":"3620","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"reviewAndCommentField","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/26/68527fd375234d148e98f2c3dca32aea23e0ee.src","preCode":"    public void reviewAndCommentField() {\n        BibEntry actualEntry = createMinimalBibEntry();\n        actualEntry.setField(StandardField.REVIEW, \"My Review\");\n        actualEntry.setField(StandardField.COMMENT, \"My Comment\");\n\n        ParserResult actualParserResult = new ParserResult(Collections.singletonList(actualEntry));\n\n        BibEntry expectedEntry = createMinimalBibEntry();\n        expectedEntry.setField(StandardField.COMMENT, \"My Comment\\n\" + Localization.lang(\"Review\") + \":\\nMy Review\");\n\n        action.performMigration(actualParserResult);\n\n        assertEquals(expectedEntry, actualParserResult.getDatabase().getEntryByKey(\"Entry1\").get());\n    }\n","realPath":"src/test/java/org/jabref/migrations/MergeReviewIntoCommentActionMigrationTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":77,"status":"M"}],"commitId":"6dec1747d8a1c89f6c62fc1d1939d88411f17eba","commitMessage":"@@@Complete rebranding of `bibtexkey` as `citationkey` (#6875)\n\n","date":"2020-09-08 21:34:34","modifiedFileCount":"127","status":"M","submitter":"Tobias Diez"},{"authorTime":"2021-06-22 05:08:40","codes":[{"authorDate":"2021-06-22 05:08:40","commitOrder":4,"curCode":"    public void multiLineReviewField() {\n        String commentString = \"My Review\\n\\nSecond Paragraph\\n\\nThird Paragraph\";\n\n        entry.setField(StandardField.REVIEW, commentString);\n        ParserResult actualParserResult = new ParserResult(Collections.singletonList(entry));\n\n        expectedEntry.setField(StandardField.COMMENT, commentString);\n\n        action.performMigration(actualParserResult);\n\n        assertEquals(expectedEntry, actualParserResult.getDatabase().getEntryByCitationKey(\"Entry1\").get());\n    }\n","date":"2021-06-22 05:08:40","endLine":72,"groupId":"10861","id":7,"instanceNumber":1,"isCurCommit":1,"methodName":"multiLineReviewField","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/39/d94ef7d52d9de900ab8f75c23c5a6689055cc5.src","preCode":"    public void multiLineReviewField() {\n        String commentString = \"My Review\\n\\nSecond Paragraph\\n\\nThird Paragraph\";\n\n        BibEntry actualEntry = createMinimalBibEntry();\n        actualEntry.setField(StandardField.REVIEW, commentString);\n        ParserResult actualParserResult = new ParserResult(Collections.singletonList(actualEntry));\n\n        BibEntry expectedEntry = createMinimalBibEntry();\n        expectedEntry.setField(StandardField.COMMENT, commentString);\n\n        action.performMigration(actualParserResult);\n\n        assertEquals(expectedEntry, actualParserResult.getDatabase().getEntryByCitationKey(\"Entry1\").get());\n    }\n","realPath":"src/test/java/org/jabref/migrations/MergeReviewIntoCommentActionMigrationTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":61,"status":"M"},{"authorDate":"2021-06-22 05:08:40","commitOrder":4,"curCode":"    public void reviewAndCommentField() {\n        entry.setField(StandardField.REVIEW, \"My Review\");\n        entry.setField(StandardField.COMMENT, \"My Comment\");\n\n        ParserResult actualParserResult = new ParserResult(Collections.singletonList(entry));\n\n        expectedEntry.setField(StandardField.COMMENT, \"My Comment\\n\" + Localization.lang(\"Review\") + \":\\nMy Review\");\n\n        action.performMigration(actualParserResult);\n\n        assertEquals(expectedEntry, actualParserResult.getDatabase().getEntryByCitationKey(\"Entry1\").get());\n    }\n","date":"2021-06-22 05:08:40","endLine":87,"groupId":"10861","id":8,"instanceNumber":2,"isCurCommit":1,"methodName":"reviewAndCommentField","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/39/d94ef7d52d9de900ab8f75c23c5a6689055cc5.src","preCode":"    public void reviewAndCommentField() {\n        BibEntry actualEntry = createMinimalBibEntry();\n        actualEntry.setField(StandardField.REVIEW, \"My Review\");\n        actualEntry.setField(StandardField.COMMENT, \"My Comment\");\n\n        ParserResult actualParserResult = new ParserResult(Collections.singletonList(actualEntry));\n\n        BibEntry expectedEntry = createMinimalBibEntry();\n        expectedEntry.setField(StandardField.COMMENT, \"My Comment\\n\" + Localization.lang(\"Review\") + \":\\nMy Review\");\n\n        action.performMigration(actualParserResult);\n\n        assertEquals(expectedEntry, actualParserResult.getDatabase().getEntryByCitationKey(\"Entry1\").get());\n    }\n","realPath":"src/test/java/org/jabref/migrations/MergeReviewIntoCommentActionMigrationTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":76,"status":"M"}],"commitId":"4e93f719b4f5c6e894c29514c09469831b7ba566","commitMessage":"@@@Refactoring and addition of unit tests (#7597)\n\nCo-authored-by: Oliver Kopp <kopp.dev@gmail.com>","date":"2021-06-22 05:08:40","modifiedFileCount":"11","status":"M","submitter":"Dario Safa"}]
