[{"authorTime":"2017-02-17 05:41:47","codes":[{"authorDate":"2017-02-17 05:41:47","commitOrder":1,"curCode":"    public void entriesAreParsedNoHeader() throws IOException {\n        ParserResult result = OpenDatabase.loadDatabase(bibNoHeader, importFormatPreferences);\n        BibDatabase db = result.getDatabase();\n\n        \r\n        Assert.assertEquals(1, db.getEntryCount());\n        Assert.assertEquals(Optional.of(\"2014\"), db.getEntryByKey(\"1\").get().getField(\"year\"));\n    }\n","date":"2017-02-17 05:41:47","endLine":80,"groupId":"5778","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"entriesAreParsedNoHeader","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/61/4669c68bf506ab494a582c026b7791c27f4680.src","preCode":"    public void entriesAreParsedNoHeader() throws IOException {\n        ParserResult result = OpenDatabase.loadDatabase(bibNoHeader, importFormatPreferences);\n        BibDatabase db = result.getDatabase();\n\n        \r\n        Assert.assertEquals(1, db.getEntryCount());\n        Assert.assertEquals(Optional.of(\"2014\"), db.getEntryByKey(\"1\").get().getField(\"year\"));\n    }\n","realPath":"src/test/java/org/jabref/logic/importer/OpenDatabaseTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":73,"status":"B"},{"authorDate":"2017-02-17 05:41:47","commitOrder":1,"curCode":"    public void entriesAreParsedHeaderAndSignature() throws IOException {\n        ParserResult result = OpenDatabase.loadDatabase(bibHeaderAndSignature, importFormatPreferences);\n        BibDatabase db = result.getDatabase();\n\n        \r\n        Assert.assertEquals(1, db.getEntryCount());\n        Assert.assertEquals(Optional.of(\"2014\"), db.getEntryByKey(\"1\").get().getField(\"year\"));\n    }\n","date":"2017-02-17 05:41:47","endLine":100,"groupId":"5778","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"entriesAreParsedHeaderAndSignature","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/61/4669c68bf506ab494a582c026b7791c27f4680.src","preCode":"    public void entriesAreParsedHeaderAndSignature() throws IOException {\n        ParserResult result = OpenDatabase.loadDatabase(bibHeaderAndSignature, importFormatPreferences);\n        BibDatabase db = result.getDatabase();\n\n        \r\n        Assert.assertEquals(1, db.getEntryCount());\n        Assert.assertEquals(Optional.of(\"2014\"), db.getEntryByKey(\"1\").get().getField(\"year\"));\n    }\n","realPath":"src/test/java/org/jabref/logic/importer/OpenDatabaseTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":93,"status":"B"}],"commitId":"ebbeb1d249edf7134abf92d24c2031ae54d19881","commitMessage":"@@@Merge branch 'net-sf-to-org-jabref'\n","date":"2017-02-17 05:41:47","modifiedFileCount":"1","status":"B","submitter":"Oliver Kopp"},{"authorTime":"2018-01-29 02:37:06","codes":[{"authorDate":"2018-01-29 02:37:06","commitOrder":2,"curCode":"    public void entriesAreParsedNoHeader() throws IOException {\n        ParserResult result = OpenDatabase.loadDatabase(bibNoHeader, importFormatPreferences, fileMonitor);\n        BibDatabase db = result.getDatabase();\n\n        \r\n        Assert.assertEquals(1, db.getEntryCount());\n        Assert.assertEquals(Optional.of(\"2014\"), db.getEntryByKey(\"1\").get().getField(\"year\"));\n    }\n","date":"2018-01-29 02:37:06","endLine":86,"groupId":"5778","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"entriesAreParsedNoHeader","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/b5/c657c12cbd715df4bf7056d0bbd353de0cf78f.src","preCode":"    public void entriesAreParsedNoHeader() throws IOException {\n        ParserResult result = OpenDatabase.loadDatabase(bibNoHeader, importFormatPreferences);\n        BibDatabase db = result.getDatabase();\n\n        \r\n        Assert.assertEquals(1, db.getEntryCount());\n        Assert.assertEquals(Optional.of(\"2014\"), db.getEntryByKey(\"1\").get().getField(\"year\"));\n    }\n","realPath":"src/test/java/org/jabref/logic/importer/OpenDatabaseTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":79,"status":"M"},{"authorDate":"2018-01-29 02:37:06","commitOrder":2,"curCode":"    public void entriesAreParsedHeaderAndSignature() throws IOException {\n        ParserResult result = OpenDatabase.loadDatabase(bibHeaderAndSignature, importFormatPreferences, fileMonitor);\n        BibDatabase db = result.getDatabase();\n\n        \r\n        Assert.assertEquals(1, db.getEntryCount());\n        Assert.assertEquals(Optional.of(\"2014\"), db.getEntryByKey(\"1\").get().getField(\"year\"));\n    }\n","date":"2018-01-29 02:37:06","endLine":106,"groupId":"5778","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"entriesAreParsedHeaderAndSignature","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/b5/c657c12cbd715df4bf7056d0bbd353de0cf78f.src","preCode":"    public void entriesAreParsedHeaderAndSignature() throws IOException {\n        ParserResult result = OpenDatabase.loadDatabase(bibHeaderAndSignature, importFormatPreferences);\n        BibDatabase db = result.getDatabase();\n\n        \r\n        Assert.assertEquals(1, db.getEntryCount());\n        Assert.assertEquals(Optional.of(\"2014\"), db.getEntryByKey(\"1\").get().getField(\"year\"));\n    }\n","realPath":"src/test/java/org/jabref/logic/importer/OpenDatabaseTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":99,"status":"M"}],"commitId":"cfb424f80c2069c61673d5051fa761715edab091","commitMessage":"@@@Implements #1664: group based on aux file (#3444)\n\n* First prototype of aux group\n\n* Refactor so that TexGroup does not depend on logic\n\n* Add changelog entry\n\n* Fix architecture tests\n\n* Add new language key\n\n* Fix tests\n","date":"2018-01-29 02:37:06","modifiedFileCount":"76","status":"M","submitter":"Tobias Diez"},{"authorTime":"2018-02-12 00:05:54","codes":[{"authorDate":"2018-02-12 00:05:54","commitOrder":3,"curCode":"    public void entriesAreParsedNoHeader() throws IOException {\n        ParserResult result = OpenDatabase.loadDatabase(bibNoHeader, importFormatPreferences, fileMonitor);\n        BibDatabase db = result.getDatabase();\n\n        \r\n        assertEquals(1, db.getEntryCount());\n        assertEquals(Optional.of(\"2014\"), db.getEntryByKey(\"1\").get().getField(\"year\"));\n    }\n","date":"2018-02-12 00:05:54","endLine":86,"groupId":"5778","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"entriesAreParsedNoHeader","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/47/ca7b116dcbc1c1e454e30fd1ada4ce2e936c8a.src","preCode":"    public void entriesAreParsedNoHeader() throws IOException {\n        ParserResult result = OpenDatabase.loadDatabase(bibNoHeader, importFormatPreferences, fileMonitor);\n        BibDatabase db = result.getDatabase();\n\n        \r\n        Assert.assertEquals(1, db.getEntryCount());\n        Assert.assertEquals(Optional.of(\"2014\"), db.getEntryByKey(\"1\").get().getField(\"year\"));\n    }\n","realPath":"src/test/java/org/jabref/logic/importer/OpenDatabaseTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":79,"status":"M"},{"authorDate":"2018-02-12 00:05:54","commitOrder":3,"curCode":"    public void entriesAreParsedHeaderAndSignature() throws IOException {\n        ParserResult result = OpenDatabase.loadDatabase(bibHeaderAndSignature, importFormatPreferences, fileMonitor);\n        BibDatabase db = result.getDatabase();\n\n        \r\n        assertEquals(1, db.getEntryCount());\n        assertEquals(Optional.of(\"2014\"), db.getEntryByKey(\"1\").get().getField(\"year\"));\n    }\n","date":"2018-02-12 00:05:54","endLine":106,"groupId":"5778","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"entriesAreParsedHeaderAndSignature","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/47/ca7b116dcbc1c1e454e30fd1ada4ce2e936c8a.src","preCode":"    public void entriesAreParsedHeaderAndSignature() throws IOException {\n        ParserResult result = OpenDatabase.loadDatabase(bibHeaderAndSignature, importFormatPreferences, fileMonitor);\n        BibDatabase db = result.getDatabase();\n\n        \r\n        Assert.assertEquals(1, db.getEntryCount());\n        Assert.assertEquals(Optional.of(\"2014\"), db.getEntryByKey(\"1\").get().getField(\"year\"));\n    }\n","realPath":"src/test/java/org/jabref/logic/importer/OpenDatabaseTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":99,"status":"M"}],"commitId":"1cef92447c4ae65ebe28d94cf9acf708861bb67b","commitMessage":"@@@Merge pull request #3711 from JabRef/junit5\n\nmigrate majority of tests to junit5","date":"2018-02-12 00:05:54","modifiedFileCount":"244","status":"M","submitter":"Oliver Kopp"},{"authorTime":"2019-08-02 15:20:10","codes":[{"authorDate":"2019-08-02 15:20:10","commitOrder":4,"curCode":"    public void entriesAreParsedNoHeader() throws IOException {\n        ParserResult result = OpenDatabase.loadDatabase(bibNoHeader, importFormatPreferences, fileMonitor);\n        BibDatabase db = result.getDatabase();\n\n        \r\n        assertEquals(1, db.getEntryCount());\n        assertEquals(Optional.of(\"2014\"), db.getEntryByKey(\"1\").get().getField(StandardField.YEAR));\n    }\n","date":"2019-08-02 15:20:10","endLine":87,"groupId":"5778","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"entriesAreParsedNoHeader","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/eb/2f326a13c1da9fc5bc4e4a80d70fee184eec42.src","preCode":"    public void entriesAreParsedNoHeader() throws IOException {\n        ParserResult result = OpenDatabase.loadDatabase(bibNoHeader, importFormatPreferences, fileMonitor);\n        BibDatabase db = result.getDatabase();\n\n        \r\n        assertEquals(1, db.getEntryCount());\n        assertEquals(Optional.of(\"2014\"), db.getEntryByKey(\"1\").get().getField(\"year\"));\n    }\n","realPath":"src/test/java/org/jabref/logic/importer/OpenDatabaseTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":80,"status":"M"},{"authorDate":"2019-08-02 15:20:10","commitOrder":4,"curCode":"    public void entriesAreParsedHeaderAndSignature() throws IOException {\n        ParserResult result = OpenDatabase.loadDatabase(bibHeaderAndSignature, importFormatPreferences, fileMonitor);\n        BibDatabase db = result.getDatabase();\n\n        \r\n        assertEquals(1, db.getEntryCount());\n        assertEquals(Optional.of(\"2014\"), db.getEntryByKey(\"1\").get().getField(StandardField.YEAR));\n    }\n","date":"2019-08-02 15:20:10","endLine":107,"groupId":"5778","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"entriesAreParsedHeaderAndSignature","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/eb/2f326a13c1da9fc5bc4e4a80d70fee184eec42.src","preCode":"    public void entriesAreParsedHeaderAndSignature() throws IOException {\n        ParserResult result = OpenDatabase.loadDatabase(bibHeaderAndSignature, importFormatPreferences, fileMonitor);\n        BibDatabase db = result.getDatabase();\n\n        \r\n        assertEquals(1, db.getEntryCount());\n        assertEquals(Optional.of(\"2014\"), db.getEntryByKey(\"1\").get().getField(\"year\"));\n    }\n","realPath":"src/test/java/org/jabref/logic/importer/OpenDatabaseTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":100,"status":"M"}],"commitId":"4b39b78e4afcd6c36b385f5c46f1d9a4eac2e29b","commitMessage":"@@@Move to extended enums for fields and entry types (#5148)\n\n* Introduce interface for fields\n\n* Continue using fields interface instead of strings\n\n* Introduce OrFields class\n\n* Move FieldProperty\n\n* Convert entry types to extended enum\n\n* Start fixing build\n\n* Fix build\n\n* Start fixing tests\n\n* Everything compiles again\n\n* Make model tests pass\n\n* Fix most tests\n\n* Fix build\n\n* Fix a few more tests\n\n* Fix a few more tests\n\n* Fix a few more tests\n\n* Fix a few more tests\n\n* Fix checkstyle issues\n\n* Fix more tests\n\n* Fix more tests\n\n* Disable test that fails on CI\n\n* Disable test that fails on CI\n","date":"2019-08-02 15:20:10","modifiedFileCount":"439","status":"M","submitter":"Tobias Diez"},{"authorTime":"2019-12-20 20:46:59","codes":[{"authorDate":"2019-12-20 20:46:59","commitOrder":5,"curCode":"    void entriesAreParsedNoHeader() throws IOException {\n        ParserResult result = OpenDatabase.loadDatabase(bibNoHeader, importFormatPreferences, fileMonitor);\n        BibDatabase db = result.getDatabase();\n\n        \r\n        assertEquals(1, db.getEntryCount());\n        assertEquals(Optional.of(\"2014\"), db.getEntryByKey(\"1\").get().getField(StandardField.YEAR));\n    }\n","date":"2019-12-20 20:46:59","endLine":86,"groupId":"5778","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"entriesAreParsedNoHeader","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/dd/c83596db2fa736746a1e476e7664b26ae8786c.src","preCode":"    public void entriesAreParsedNoHeader() throws IOException {\n        ParserResult result = OpenDatabase.loadDatabase(bibNoHeader, importFormatPreferences, fileMonitor);\n        BibDatabase db = result.getDatabase();\n\n        \r\n        assertEquals(1, db.getEntryCount());\n        assertEquals(Optional.of(\"2014\"), db.getEntryByKey(\"1\").get().getField(StandardField.YEAR));\n    }\n","realPath":"src/test/java/org/jabref/logic/importer/OpenDatabaseTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":79,"status":"M"},{"authorDate":"2019-12-20 20:46:59","commitOrder":5,"curCode":"    void entriesAreParsedHeaderAndSignature() throws IOException {\n        ParserResult result = OpenDatabase.loadDatabase(bibHeaderAndSignature, importFormatPreferences, fileMonitor);\n        BibDatabase db = result.getDatabase();\n\n        \r\n        assertEquals(1, db.getEntryCount());\n        assertEquals(Optional.of(\"2014\"), db.getEntryByKey(\"1\").get().getField(StandardField.YEAR));\n    }\n","date":"2019-12-20 20:46:59","endLine":106,"groupId":"5778","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"entriesAreParsedHeaderAndSignature","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/dd/c83596db2fa736746a1e476e7664b26ae8786c.src","preCode":"    public void entriesAreParsedHeaderAndSignature() throws IOException {\n        ParserResult result = OpenDatabase.loadDatabase(bibHeaderAndSignature, importFormatPreferences, fileMonitor);\n        BibDatabase db = result.getDatabase();\n\n        \r\n        assertEquals(1, db.getEntryCount());\n        assertEquals(Optional.of(\"2014\"), db.getEntryByKey(\"1\").get().getField(StandardField.YEAR));\n    }\n","realPath":"src/test/java/org/jabref/logic/importer/OpenDatabaseTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":99,"status":"M"}],"commitId":"6431099fe7d5d90da678a78051f12894da82c68d","commitMessage":"@@@Improve things arround change detection (#5770)\n\n* Dismiss changes hides change message\n\n* Show added entries in change dialog\n\n* Improve message when current value is null\n\n* Remove unused reference file\n\n* Apply post-load actions before comparing with currently load database\n","date":"2019-12-20 20:46:59","modifiedFileCount":"13","status":"M","submitter":"Tobias Diez"},{"authorTime":"2020-09-08 21:34:34","codes":[{"authorDate":"2020-09-08 21:34:34","commitOrder":6,"curCode":"    void entriesAreParsedNoHeader() throws IOException {\n        ParserResult result = OpenDatabase.loadDatabase(bibNoHeader, importFormatPreferences, fileMonitor);\n        BibDatabase db = result.getDatabase();\n\n        \r\n        assertEquals(1, db.getEntryCount());\n        assertEquals(Optional.of(\"2014\"), db.getEntryByCitationKey(\"1\").get().getField(StandardField.YEAR));\n    }\n","date":"2020-09-08 21:34:34","endLine":84,"groupId":"5778","id":11,"instanceNumber":1,"isCurCommit":1,"methodName":"entriesAreParsedNoHeader","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/a2/9f248fcc83b35dc05c08dd40c6ed48aca1cfb5.src","preCode":"    void entriesAreParsedNoHeader() throws IOException {\n        ParserResult result = OpenDatabase.loadDatabase(bibNoHeader, importFormatPreferences, fileMonitor);\n        BibDatabase db = result.getDatabase();\n\n        \r\n        assertEquals(1, db.getEntryCount());\n        assertEquals(Optional.of(\"2014\"), db.getEntryByKey(\"1\").get().getField(StandardField.YEAR));\n    }\n","realPath":"src/test/java/org/jabref/logic/importer/OpenDatabaseTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":77,"status":"M"},{"authorDate":"2020-09-08 21:34:34","commitOrder":6,"curCode":"    void entriesAreParsedHeaderAndSignature() throws IOException {\n        ParserResult result = OpenDatabase.loadDatabase(bibHeaderAndSignature, importFormatPreferences, fileMonitor);\n        BibDatabase db = result.getDatabase();\n\n        \r\n        assertEquals(1, db.getEntryCount());\n        assertEquals(Optional.of(\"2014\"), db.getEntryByCitationKey(\"1\").get().getField(StandardField.YEAR));\n    }\n","date":"2020-09-08 21:34:34","endLine":104,"groupId":"5778","id":12,"instanceNumber":2,"isCurCommit":1,"methodName":"entriesAreParsedHeaderAndSignature","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/a2/9f248fcc83b35dc05c08dd40c6ed48aca1cfb5.src","preCode":"    void entriesAreParsedHeaderAndSignature() throws IOException {\n        ParserResult result = OpenDatabase.loadDatabase(bibHeaderAndSignature, importFormatPreferences, fileMonitor);\n        BibDatabase db = result.getDatabase();\n\n        \r\n        assertEquals(1, db.getEntryCount());\n        assertEquals(Optional.of(\"2014\"), db.getEntryByKey(\"1\").get().getField(StandardField.YEAR));\n    }\n","realPath":"src/test/java/org/jabref/logic/importer/OpenDatabaseTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":97,"status":"M"}],"commitId":"6dec1747d8a1c89f6c62fc1d1939d88411f17eba","commitMessage":"@@@Complete rebranding of `bibtexkey` as `citationkey` (#6875)\n\n","date":"2020-09-08 21:34:34","modifiedFileCount":"127","status":"M","submitter":"Tobias Diez"},{"authorTime":"2021-01-15 05:25:34","codes":[{"authorDate":"2021-01-15 05:25:34","commitOrder":7,"curCode":"    void entriesAreParsedNoHeader() throws IOException {\n        ParserResult result = OpenDatabase.loadDatabase(bibNoHeader, importFormatPreferences, timestampPreferences, fileMonitor);\n        BibDatabase db = result.getDatabase();\n\n        \r\n        assertEquals(1, db.getEntryCount());\n        assertEquals(Optional.of(\"2014\"), db.getEntryByCitationKey(\"1\").get().getField(StandardField.YEAR));\n    }\n","date":"2021-01-15 05:25:34","endLine":88,"groupId":"5778","id":13,"instanceNumber":1,"isCurCommit":0,"methodName":"entriesAreParsedNoHeader","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/22/e2cba90bf9b8d39d2ad64854644058552d3912.src","preCode":"    void entriesAreParsedNoHeader() throws IOException {\n        ParserResult result = OpenDatabase.loadDatabase(bibNoHeader, importFormatPreferences, fileMonitor);\n        BibDatabase db = result.getDatabase();\n\n        \r\n        assertEquals(1, db.getEntryCount());\n        assertEquals(Optional.of(\"2014\"), db.getEntryByCitationKey(\"1\").get().getField(StandardField.YEAR));\n    }\n","realPath":"src/test/java/org/jabref/logic/importer/OpenDatabaseTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":81,"status":"M"},{"authorDate":"2021-01-15 05:25:34","commitOrder":7,"curCode":"    void entriesAreParsedHeaderAndSignature() throws IOException {\n        ParserResult result = OpenDatabase.loadDatabase(bibHeaderAndSignature, importFormatPreferences, timestampPreferences, fileMonitor);\n        BibDatabase db = result.getDatabase();\n\n        \r\n        assertEquals(1, db.getEntryCount());\n        assertEquals(Optional.of(\"2014\"), db.getEntryByCitationKey(\"1\").get().getField(StandardField.YEAR));\n    }\n","date":"2021-01-15 05:25:34","endLine":108,"groupId":"5778","id":14,"instanceNumber":2,"isCurCommit":0,"methodName":"entriesAreParsedHeaderAndSignature","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/22/e2cba90bf9b8d39d2ad64854644058552d3912.src","preCode":"    void entriesAreParsedHeaderAndSignature() throws IOException {\n        ParserResult result = OpenDatabase.loadDatabase(bibHeaderAndSignature, importFormatPreferences, fileMonitor);\n        BibDatabase db = result.getDatabase();\n\n        \r\n        assertEquals(1, db.getEntryCount());\n        assertEquals(Optional.of(\"2014\"), db.getEntryByCitationKey(\"1\").get().getField(StandardField.YEAR));\n    }\n","realPath":"src/test/java/org/jabref/logic/importer/OpenDatabaseTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":101,"status":"M"}],"commitId":"e66f5be7d82c7a7618fe327fe958ec57a25ea598","commitMessage":"@@@Add date fields (#7334)\n\nCo-authored-by: Oliver Kopp <kopp.dev@gmail.com>\n","date":"2021-01-15 05:25:34","modifiedFileCount":"31","status":"M","submitter":"Dominik Voigt"},{"authorTime":"2021-08-30 20:57:52","codes":[{"authorDate":"2021-08-30 20:57:52","commitOrder":8,"curCode":"    void entriesAreParsedNoHeader() throws IOException {\n        ParserResult result = OpenDatabase.loadDatabase(bibNoHeader, importFormatPreferences, fileMonitor);\n        BibDatabase db = result.getDatabase();\n\n        \r\n        assertEquals(1, db.getEntryCount());\n        assertEquals(Optional.of(\"2014\"), db.getEntryByCitationKey(\"1\").get().getField(StandardField.YEAR));\n    }\n","date":"2021-08-30 20:57:52","endLine":84,"groupId":"10327","id":15,"instanceNumber":1,"isCurCommit":1,"methodName":"entriesAreParsedNoHeader","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/a2/9f248fcc83b35dc05c08dd40c6ed48aca1cfb5.src","preCode":"    void entriesAreParsedNoHeader() throws IOException {\n        ParserResult result = OpenDatabase.loadDatabase(bibNoHeader, importFormatPreferences, timestampPreferences, fileMonitor);\n        BibDatabase db = result.getDatabase();\n\n        \r\n        assertEquals(1, db.getEntryCount());\n        assertEquals(Optional.of(\"2014\"), db.getEntryByCitationKey(\"1\").get().getField(StandardField.YEAR));\n    }\n","realPath":"src/test/java/org/jabref/logic/importer/OpenDatabaseTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":77,"status":"M"},{"authorDate":"2021-08-30 20:57:52","commitOrder":8,"curCode":"    void entriesAreParsedHeaderAndSignature() throws IOException {\n        ParserResult result = OpenDatabase.loadDatabase(bibHeaderAndSignature, importFormatPreferences, fileMonitor);\n        BibDatabase db = result.getDatabase();\n\n        \r\n        assertEquals(1, db.getEntryCount());\n        assertEquals(Optional.of(\"2014\"), db.getEntryByCitationKey(\"1\").get().getField(StandardField.YEAR));\n    }\n","date":"2021-08-30 20:57:52","endLine":104,"groupId":"10327","id":16,"instanceNumber":2,"isCurCommit":1,"methodName":"entriesAreParsedHeaderAndSignature","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/a2/9f248fcc83b35dc05c08dd40c6ed48aca1cfb5.src","preCode":"    void entriesAreParsedHeaderAndSignature() throws IOException {\n        ParserResult result = OpenDatabase.loadDatabase(bibHeaderAndSignature, importFormatPreferences, timestampPreferences, fileMonitor);\n        BibDatabase db = result.getDatabase();\n\n        \r\n        assertEquals(1, db.getEntryCount());\n        assertEquals(Optional.of(\"2014\"), db.getEntryByCitationKey(\"1\").get().getField(StandardField.YEAR));\n    }\n","realPath":"src/test/java/org/jabref/logic/importer/OpenDatabaseTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":97,"status":"M"}],"commitId":"476dc29ba1aa66c3c78d4734ca345f1414957e61","commitMessage":"@@@Cleanup artifacts and deprecated methods (#8025)\n\n","date":"2021-08-30 20:57:52","modifiedFileCount":"33","status":"M","submitter":"Carl Christian Snethlage"}]
