[{"authorTime":"2020-11-26 00:41:30","codes":[{"authorDate":"2020-11-26 00:41:30","commitOrder":1,"curCode":"    public void testWhetherAllFilesAreCreated() throws Exception {\n        setUp();\n        Crawler testCrawler = new Crawler(getPathToStudyDefinitionFile(),\n                new DummyFileUpdateMonitor(),\n                importFormatPreferences,\n                savePreferences,\n                entryTypesManager\n        );\n\n        testCrawler.performCrawl();\n\n        assertTrue(Files.exists(Path.of(tempRepositoryDirectory.toString(), \"1 - Quantum\")));\n        assertTrue(Files.exists(Path.of(tempRepositoryDirectory.toString(), \"2 - Cloud Computing\")));\n        assertTrue(Files.exists(Path.of(tempRepositoryDirectory.toString(), \"3 - TestSearchQuery3\")));\n\n        assertTrue(Files.exists(Path.of(tempRepositoryDirectory.toString(), \"1 - Quantum\", \"ArXiv.bib\")));\n        assertTrue(Files.exists(Path.of(tempRepositoryDirectory.toString(), \"2 - Cloud Computing\", \"ArXiv.bib\")));\n        assertTrue(Files.exists(Path.of(tempRepositoryDirectory.toString(), \"3 - TestSearchQuery3\", \"ArXiv.bib\")));\n\n        assertTrue(Files.exists(Path.of(tempRepositoryDirectory.toString(), \"1 - Quantum\", \"Springer.bib\")));\n        assertTrue(Files.exists(Path.of(tempRepositoryDirectory.toString(), \"2 - Cloud Computing\", \"Springer.bib\")));\n        assertTrue(Files.exists(Path.of(tempRepositoryDirectory.toString(), \"3 - TestSearchQuery3\", \"Springer.bib\")));\n\n        assertTrue(Files.exists(Path.of(tempRepositoryDirectory.toString(), \"1 - Quantum\", \"result.bib\")));\n        assertTrue(Files.exists(Path.of(tempRepositoryDirectory.toString(), \"2 - Cloud Computing\", \"result.bib\")));\n        assertTrue(Files.exists(Path.of(tempRepositoryDirectory.toString(), \"3 - TestSearchQuery3\", \"result.bib\")));\n        assertTrue(Files.exists(Path.of(tempRepositoryDirectory.toString(), \"studyResult.bib\")));\n    }\n","date":"2020-11-26 00:41:30","endLine":63,"groupId":"9454","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testWhetherAllFilesAreCreated","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/7c/6b53e85a236780a4e53c0df764fb7fb31d934d.src","preCode":"    public void testWhetherAllFilesAreCreated() throws Exception {\n        setUp();\n        Crawler testCrawler = new Crawler(getPathToStudyDefinitionFile(),\n                new DummyFileUpdateMonitor(),\n                importFormatPreferences,\n                savePreferences,\n                entryTypesManager\n        );\n\n        testCrawler.performCrawl();\n\n        assertTrue(Files.exists(Path.of(tempRepositoryDirectory.toString(), \"1 - Quantum\")));\n        assertTrue(Files.exists(Path.of(tempRepositoryDirectory.toString(), \"2 - Cloud Computing\")));\n        assertTrue(Files.exists(Path.of(tempRepositoryDirectory.toString(), \"3 - TestSearchQuery3\")));\n\n        assertTrue(Files.exists(Path.of(tempRepositoryDirectory.toString(), \"1 - Quantum\", \"ArXiv.bib\")));\n        assertTrue(Files.exists(Path.of(tempRepositoryDirectory.toString(), \"2 - Cloud Computing\", \"ArXiv.bib\")));\n        assertTrue(Files.exists(Path.of(tempRepositoryDirectory.toString(), \"3 - TestSearchQuery3\", \"ArXiv.bib\")));\n\n        assertTrue(Files.exists(Path.of(tempRepositoryDirectory.toString(), \"1 - Quantum\", \"Springer.bib\")));\n        assertTrue(Files.exists(Path.of(tempRepositoryDirectory.toString(), \"2 - Cloud Computing\", \"Springer.bib\")));\n        assertTrue(Files.exists(Path.of(tempRepositoryDirectory.toString(), \"3 - TestSearchQuery3\", \"Springer.bib\")));\n\n        assertTrue(Files.exists(Path.of(tempRepositoryDirectory.toString(), \"1 - Quantum\", \"result.bib\")));\n        assertTrue(Files.exists(Path.of(tempRepositoryDirectory.toString(), \"2 - Cloud Computing\", \"result.bib\")));\n        assertTrue(Files.exists(Path.of(tempRepositoryDirectory.toString(), \"3 - TestSearchQuery3\", \"result.bib\")));\n        assertTrue(Files.exists(Path.of(tempRepositoryDirectory.toString(), \"studyResult.bib\")));\n    }\n","realPath":"src/test/java/org/jabref/logic/crawler/CrawlerTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":36,"status":"B"},{"authorDate":"2020-11-26 00:41:30","commitOrder":1,"curCode":"    void repositoryStructureCorrectlyCreated() throws Exception {\n        \r\n        getTestStudyRepository();\n\n        assertTrue(Files.exists(Path.of(tempRepositoryDirectory.toString(), \"1 - Quantum\")));\n        assertTrue(Files.exists(Path.of(tempRepositoryDirectory.toString(), \"2 - Cloud Computing\")));\n        assertTrue(Files.exists(Path.of(tempRepositoryDirectory.toString(), \"3 - TestSearchQuery3\")));\n        assertTrue(Files.exists(Path.of(tempRepositoryDirectory.toString(), \"1 - Quantum\", \"ArXiv.bib\")));\n        assertTrue(Files.exists(Path.of(tempRepositoryDirectory.toString(), \"2 - Cloud Computing\", \"ArXiv.bib\")));\n        assertTrue(Files.exists(Path.of(tempRepositoryDirectory.toString(), \"3 - TestSearchQuery3\", \"ArXiv.bib\")));\n        assertTrue(Files.exists(Path.of(tempRepositoryDirectory.toString(), \"1 - Quantum\", \"Springer.bib\")));\n        assertTrue(Files.exists(Path.of(tempRepositoryDirectory.toString(), \"2 - Cloud Computing\", \"Springer.bib\")));\n        assertTrue(Files.exists(Path.of(tempRepositoryDirectory.toString(), \"3 - TestSearchQuery3\", \"Springer.bib\")));\n        assertTrue(Files.notExists(Path.of(tempRepositoryDirectory.toString(), \"1 - Quantum\", \"IEEEXplore.bib\")));\n        assertTrue(Files.notExists(Path.of(tempRepositoryDirectory.toString(), \"2 - Cloud Computing\", \"IEEEXplore.bib\")));\n        assertTrue(Files.notExists(Path.of(tempRepositoryDirectory.toString(), \"3 - TestSearchQuery3\", \"IEEEXplore.bib\")));\n    }\n","date":"2020-11-26 00:41:30","endLine":143,"groupId":"9454","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"repositoryStructureCorrectlyCreated","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/8a/69c6d7a011dfc002a2d5bb3d5da06c2310c6b5.src","preCode":"    void repositoryStructureCorrectlyCreated() throws Exception {\n        \r\n        getTestStudyRepository();\n\n        assertTrue(Files.exists(Path.of(tempRepositoryDirectory.toString(), \"1 - Quantum\")));\n        assertTrue(Files.exists(Path.of(tempRepositoryDirectory.toString(), \"2 - Cloud Computing\")));\n        assertTrue(Files.exists(Path.of(tempRepositoryDirectory.toString(), \"3 - TestSearchQuery3\")));\n        assertTrue(Files.exists(Path.of(tempRepositoryDirectory.toString(), \"1 - Quantum\", \"ArXiv.bib\")));\n        assertTrue(Files.exists(Path.of(tempRepositoryDirectory.toString(), \"2 - Cloud Computing\", \"ArXiv.bib\")));\n        assertTrue(Files.exists(Path.of(tempRepositoryDirectory.toString(), \"3 - TestSearchQuery3\", \"ArXiv.bib\")));\n        assertTrue(Files.exists(Path.of(tempRepositoryDirectory.toString(), \"1 - Quantum\", \"Springer.bib\")));\n        assertTrue(Files.exists(Path.of(tempRepositoryDirectory.toString(), \"2 - Cloud Computing\", \"Springer.bib\")));\n        assertTrue(Files.exists(Path.of(tempRepositoryDirectory.toString(), \"3 - TestSearchQuery3\", \"Springer.bib\")));\n        assertTrue(Files.notExists(Path.of(tempRepositoryDirectory.toString(), \"1 - Quantum\", \"IEEEXplore.bib\")));\n        assertTrue(Files.notExists(Path.of(tempRepositoryDirectory.toString(), \"2 - Cloud Computing\", \"IEEEXplore.bib\")));\n        assertTrue(Files.notExists(Path.of(tempRepositoryDirectory.toString(), \"3 - TestSearchQuery3\", \"IEEEXplore.bib\")));\n    }\n","realPath":"src/test/java/org/jabref/logic/crawler/StudyRepositoryTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":127,"status":"B"}],"commitId":"b19c3e4700f82d90a804a5cf3467aedf00385dad","commitMessage":"@@@Enable automated cross library search using a cross library query lan? (#7124)\n\n* Enable automated cross library search using a cross library query language.\n\nSigned-off-by: Dominik Voigt <dominik.ingo.voigt@gmail.com>\n\n* Pull Global upward through constructor.\n\n* Pull Globals and ImportFormatPreferences up through constructor\n\nSigned-off-by: Dominik Voigt <dominik.ingo.voigt@gmail.com>\n\n* Integrate requested changes and fix architecture tests by correcting test classes\n\nSigned-off-by: Dominik Voigt <dominik.ingo.voigt@gmail.com>\n\n* Remove unused imports\n\nSigned-off-by: Dominik Voigt <dominik.ingo.voigt@gmail.com>","date":"2020-11-26 00:41:30","modifiedFileCount":"6","status":"B","submitter":"Dominik Voigt"},{"authorTime":"2020-11-26 00:41:30","codes":[{"authorDate":"2020-11-30 00:02:54","commitOrder":2,"curCode":"    public void testWhetherAllFilesAreCreated() throws Exception {\n        setUp();\n        Crawler testCrawler = new Crawler(getPathToStudyDefinitionFile(),\n                gitHandler,\n                new DummyFileUpdateMonitor(),\n                importFormatPreferences,\n                savePreferences,\n                entryTypesManager\n        );\n\n        testCrawler.performCrawl();\n\n        assertTrue(Files.exists(Path.of(tempRepositoryDirectory.toString(), \"1 - Quantum\")));\n        assertTrue(Files.exists(Path.of(tempRepositoryDirectory.toString(), \"2 - Cloud Computing\")));\n        assertTrue(Files.exists(Path.of(tempRepositoryDirectory.toString(), \"3 - TestSearchQuery3\")));\n\n        assertTrue(Files.exists(Path.of(tempRepositoryDirectory.toString(), \"1 - Quantum\", \"ArXiv.bib\")));\n        assertTrue(Files.exists(Path.of(tempRepositoryDirectory.toString(), \"2 - Cloud Computing\", \"ArXiv.bib\")));\n        assertTrue(Files.exists(Path.of(tempRepositoryDirectory.toString(), \"3 - TestSearchQuery3\", \"ArXiv.bib\")));\n\n        assertTrue(Files.exists(Path.of(tempRepositoryDirectory.toString(), \"1 - Quantum\", \"Springer.bib\")));\n        assertTrue(Files.exists(Path.of(tempRepositoryDirectory.toString(), \"2 - Cloud Computing\", \"Springer.bib\")));\n        assertTrue(Files.exists(Path.of(tempRepositoryDirectory.toString(), \"3 - TestSearchQuery3\", \"Springer.bib\")));\n\n        assertTrue(Files.exists(Path.of(tempRepositoryDirectory.toString(), \"1 - Quantum\", \"result.bib\")));\n        assertTrue(Files.exists(Path.of(tempRepositoryDirectory.toString(), \"2 - Cloud Computing\", \"result.bib\")));\n        assertTrue(Files.exists(Path.of(tempRepositoryDirectory.toString(), \"3 - TestSearchQuery3\", \"result.bib\")));\n        assertTrue(Files.exists(Path.of(tempRepositoryDirectory.toString(), \"studyResult.bib\")));\n    }\n","date":"2020-11-30 00:02:54","endLine":66,"groupId":"9454","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testWhetherAllFilesAreCreated","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/c9/3ab4c628d99a42ce20415803017433f99fcead.src","preCode":"    public void testWhetherAllFilesAreCreated() throws Exception {\n        setUp();\n        Crawler testCrawler = new Crawler(getPathToStudyDefinitionFile(),\n                new DummyFileUpdateMonitor(),\n                importFormatPreferences,\n                savePreferences,\n                entryTypesManager\n        );\n\n        testCrawler.performCrawl();\n\n        assertTrue(Files.exists(Path.of(tempRepositoryDirectory.toString(), \"1 - Quantum\")));\n        assertTrue(Files.exists(Path.of(tempRepositoryDirectory.toString(), \"2 - Cloud Computing\")));\n        assertTrue(Files.exists(Path.of(tempRepositoryDirectory.toString(), \"3 - TestSearchQuery3\")));\n\n        assertTrue(Files.exists(Path.of(tempRepositoryDirectory.toString(), \"1 - Quantum\", \"ArXiv.bib\")));\n        assertTrue(Files.exists(Path.of(tempRepositoryDirectory.toString(), \"2 - Cloud Computing\", \"ArXiv.bib\")));\n        assertTrue(Files.exists(Path.of(tempRepositoryDirectory.toString(), \"3 - TestSearchQuery3\", \"ArXiv.bib\")));\n\n        assertTrue(Files.exists(Path.of(tempRepositoryDirectory.toString(), \"1 - Quantum\", \"Springer.bib\")));\n        assertTrue(Files.exists(Path.of(tempRepositoryDirectory.toString(), \"2 - Cloud Computing\", \"Springer.bib\")));\n        assertTrue(Files.exists(Path.of(tempRepositoryDirectory.toString(), \"3 - TestSearchQuery3\", \"Springer.bib\")));\n\n        assertTrue(Files.exists(Path.of(tempRepositoryDirectory.toString(), \"1 - Quantum\", \"result.bib\")));\n        assertTrue(Files.exists(Path.of(tempRepositoryDirectory.toString(), \"2 - Cloud Computing\", \"result.bib\")));\n        assertTrue(Files.exists(Path.of(tempRepositoryDirectory.toString(), \"3 - TestSearchQuery3\", \"result.bib\")));\n        assertTrue(Files.exists(Path.of(tempRepositoryDirectory.toString(), \"studyResult.bib\")));\n    }\n","realPath":"src/test/java/org/jabref/logic/crawler/CrawlerTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":38,"status":"M"},{"authorDate":"2020-11-26 00:41:30","commitOrder":2,"curCode":"    void repositoryStructureCorrectlyCreated() throws Exception {\n        \r\n        getTestStudyRepository();\n\n        assertTrue(Files.exists(Path.of(tempRepositoryDirectory.toString(), \"1 - Quantum\")));\n        assertTrue(Files.exists(Path.of(tempRepositoryDirectory.toString(), \"2 - Cloud Computing\")));\n        assertTrue(Files.exists(Path.of(tempRepositoryDirectory.toString(), \"3 - TestSearchQuery3\")));\n        assertTrue(Files.exists(Path.of(tempRepositoryDirectory.toString(), \"1 - Quantum\", \"ArXiv.bib\")));\n        assertTrue(Files.exists(Path.of(tempRepositoryDirectory.toString(), \"2 - Cloud Computing\", \"ArXiv.bib\")));\n        assertTrue(Files.exists(Path.of(tempRepositoryDirectory.toString(), \"3 - TestSearchQuery3\", \"ArXiv.bib\")));\n        assertTrue(Files.exists(Path.of(tempRepositoryDirectory.toString(), \"1 - Quantum\", \"Springer.bib\")));\n        assertTrue(Files.exists(Path.of(tempRepositoryDirectory.toString(), \"2 - Cloud Computing\", \"Springer.bib\")));\n        assertTrue(Files.exists(Path.of(tempRepositoryDirectory.toString(), \"3 - TestSearchQuery3\", \"Springer.bib\")));\n        assertTrue(Files.notExists(Path.of(tempRepositoryDirectory.toString(), \"1 - Quantum\", \"IEEEXplore.bib\")));\n        assertTrue(Files.notExists(Path.of(tempRepositoryDirectory.toString(), \"2 - Cloud Computing\", \"IEEEXplore.bib\")));\n        assertTrue(Files.notExists(Path.of(tempRepositoryDirectory.toString(), \"3 - TestSearchQuery3\", \"IEEEXplore.bib\")));\n    }\n","date":"2020-11-26 00:41:30","endLine":143,"groupId":"9454","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"repositoryStructureCorrectlyCreated","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/8a/69c6d7a011dfc002a2d5bb3d5da06c2310c6b5.src","preCode":"    void repositoryStructureCorrectlyCreated() throws Exception {\n        \r\n        getTestStudyRepository();\n\n        assertTrue(Files.exists(Path.of(tempRepositoryDirectory.toString(), \"1 - Quantum\")));\n        assertTrue(Files.exists(Path.of(tempRepositoryDirectory.toString(), \"2 - Cloud Computing\")));\n        assertTrue(Files.exists(Path.of(tempRepositoryDirectory.toString(), \"3 - TestSearchQuery3\")));\n        assertTrue(Files.exists(Path.of(tempRepositoryDirectory.toString(), \"1 - Quantum\", \"ArXiv.bib\")));\n        assertTrue(Files.exists(Path.of(tempRepositoryDirectory.toString(), \"2 - Cloud Computing\", \"ArXiv.bib\")));\n        assertTrue(Files.exists(Path.of(tempRepositoryDirectory.toString(), \"3 - TestSearchQuery3\", \"ArXiv.bib\")));\n        assertTrue(Files.exists(Path.of(tempRepositoryDirectory.toString(), \"1 - Quantum\", \"Springer.bib\")));\n        assertTrue(Files.exists(Path.of(tempRepositoryDirectory.toString(), \"2 - Cloud Computing\", \"Springer.bib\")));\n        assertTrue(Files.exists(Path.of(tempRepositoryDirectory.toString(), \"3 - TestSearchQuery3\", \"Springer.bib\")));\n        assertTrue(Files.notExists(Path.of(tempRepositoryDirectory.toString(), \"1 - Quantum\", \"IEEEXplore.bib\")));\n        assertTrue(Files.notExists(Path.of(tempRepositoryDirectory.toString(), \"2 - Cloud Computing\", \"IEEEXplore.bib\")));\n        assertTrue(Files.notExists(Path.of(tempRepositoryDirectory.toString(), \"3 - TestSearchQuery3\", \"IEEEXplore.bib\")));\n    }\n","realPath":"src/test/java/org/jabref/logic/crawler/StudyRepositoryTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":127,"status":"N"}],"commitId":"b05ebac4ccfcd1c57c17e4a07646c09e9446db7e","commitMessage":"@@@Add githandler mock to crawler test to fix NPE (#7133)\n\nPass githandler to crawler to enable mock\n\nSigned-off-by: Dominik Voigt <dominik.ingo.voigt@gmail.com>","date":"2020-11-30 00:02:54","modifiedFileCount":"3","status":"M","submitter":"Dominik Voigt"},{"authorTime":"2020-11-26 00:41:30","codes":[{"authorDate":"2021-01-15 05:25:34","commitOrder":3,"curCode":"    public void testWhetherAllFilesAreCreated() throws Exception {\n        setUp();\n        Crawler testCrawler = new Crawler(getPathToStudyDefinitionFile(),\n                gitHandler,\n                new DummyFileUpdateMonitor(),\n                importFormatPreferences,\n                savePreferences,\n                timestampPreferences,\n                entryTypesManager\n        );\n\n        testCrawler.performCrawl();\n\n        assertTrue(Files.exists(Path.of(tempRepositoryDirectory.toString(), \"1 - Quantum\")));\n        assertTrue(Files.exists(Path.of(tempRepositoryDirectory.toString(), \"2 - Cloud Computing\")));\n        assertTrue(Files.exists(Path.of(tempRepositoryDirectory.toString(), \"3 - TestSearchQuery3\")));\n\n        assertTrue(Files.exists(Path.of(tempRepositoryDirectory.toString(), \"1 - Quantum\", \"ArXiv.bib\")));\n        assertTrue(Files.exists(Path.of(tempRepositoryDirectory.toString(), \"2 - Cloud Computing\", \"ArXiv.bib\")));\n        assertTrue(Files.exists(Path.of(tempRepositoryDirectory.toString(), \"3 - TestSearchQuery3\", \"ArXiv.bib\")));\n\n        assertTrue(Files.exists(Path.of(tempRepositoryDirectory.toString(), \"1 - Quantum\", \"Springer.bib\")));\n        assertTrue(Files.exists(Path.of(tempRepositoryDirectory.toString(), \"2 - Cloud Computing\", \"Springer.bib\")));\n        assertTrue(Files.exists(Path.of(tempRepositoryDirectory.toString(), \"3 - TestSearchQuery3\", \"Springer.bib\")));\n\n        assertTrue(Files.exists(Path.of(tempRepositoryDirectory.toString(), \"1 - Quantum\", \"result.bib\")));\n        assertTrue(Files.exists(Path.of(tempRepositoryDirectory.toString(), \"2 - Cloud Computing\", \"result.bib\")));\n        assertTrue(Files.exists(Path.of(tempRepositoryDirectory.toString(), \"3 - TestSearchQuery3\", \"result.bib\")));\n        assertTrue(Files.exists(Path.of(tempRepositoryDirectory.toString(), \"studyResult.bib\")));\n    }\n","date":"2021-01-15 05:25:34","endLine":72,"groupId":"9454","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testWhetherAllFilesAreCreated","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/df/a6e11ba9ca4c3f704450ffe1e77e53be29556a.src","preCode":"    public void testWhetherAllFilesAreCreated() throws Exception {\n        setUp();\n        Crawler testCrawler = new Crawler(getPathToStudyDefinitionFile(),\n                gitHandler,\n                new DummyFileUpdateMonitor(),\n                importFormatPreferences,\n                savePreferences,\n                entryTypesManager\n        );\n\n        testCrawler.performCrawl();\n\n        assertTrue(Files.exists(Path.of(tempRepositoryDirectory.toString(), \"1 - Quantum\")));\n        assertTrue(Files.exists(Path.of(tempRepositoryDirectory.toString(), \"2 - Cloud Computing\")));\n        assertTrue(Files.exists(Path.of(tempRepositoryDirectory.toString(), \"3 - TestSearchQuery3\")));\n\n        assertTrue(Files.exists(Path.of(tempRepositoryDirectory.toString(), \"1 - Quantum\", \"ArXiv.bib\")));\n        assertTrue(Files.exists(Path.of(tempRepositoryDirectory.toString(), \"2 - Cloud Computing\", \"ArXiv.bib\")));\n        assertTrue(Files.exists(Path.of(tempRepositoryDirectory.toString(), \"3 - TestSearchQuery3\", \"ArXiv.bib\")));\n\n        assertTrue(Files.exists(Path.of(tempRepositoryDirectory.toString(), \"1 - Quantum\", \"Springer.bib\")));\n        assertTrue(Files.exists(Path.of(tempRepositoryDirectory.toString(), \"2 - Cloud Computing\", \"Springer.bib\")));\n        assertTrue(Files.exists(Path.of(tempRepositoryDirectory.toString(), \"3 - TestSearchQuery3\", \"Springer.bib\")));\n\n        assertTrue(Files.exists(Path.of(tempRepositoryDirectory.toString(), \"1 - Quantum\", \"result.bib\")));\n        assertTrue(Files.exists(Path.of(tempRepositoryDirectory.toString(), \"2 - Cloud Computing\", \"result.bib\")));\n        assertTrue(Files.exists(Path.of(tempRepositoryDirectory.toString(), \"3 - TestSearchQuery3\", \"result.bib\")));\n        assertTrue(Files.exists(Path.of(tempRepositoryDirectory.toString(), \"studyResult.bib\")));\n    }\n","realPath":"src/test/java/org/jabref/logic/crawler/CrawlerTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":43,"status":"M"},{"authorDate":"2020-11-26 00:41:30","commitOrder":3,"curCode":"    void repositoryStructureCorrectlyCreated() throws Exception {\n        \r\n        getTestStudyRepository();\n\n        assertTrue(Files.exists(Path.of(tempRepositoryDirectory.toString(), \"1 - Quantum\")));\n        assertTrue(Files.exists(Path.of(tempRepositoryDirectory.toString(), \"2 - Cloud Computing\")));\n        assertTrue(Files.exists(Path.of(tempRepositoryDirectory.toString(), \"3 - TestSearchQuery3\")));\n        assertTrue(Files.exists(Path.of(tempRepositoryDirectory.toString(), \"1 - Quantum\", \"ArXiv.bib\")));\n        assertTrue(Files.exists(Path.of(tempRepositoryDirectory.toString(), \"2 - Cloud Computing\", \"ArXiv.bib\")));\n        assertTrue(Files.exists(Path.of(tempRepositoryDirectory.toString(), \"3 - TestSearchQuery3\", \"ArXiv.bib\")));\n        assertTrue(Files.exists(Path.of(tempRepositoryDirectory.toString(), \"1 - Quantum\", \"Springer.bib\")));\n        assertTrue(Files.exists(Path.of(tempRepositoryDirectory.toString(), \"2 - Cloud Computing\", \"Springer.bib\")));\n        assertTrue(Files.exists(Path.of(tempRepositoryDirectory.toString(), \"3 - TestSearchQuery3\", \"Springer.bib\")));\n        assertTrue(Files.notExists(Path.of(tempRepositoryDirectory.toString(), \"1 - Quantum\", \"IEEEXplore.bib\")));\n        assertTrue(Files.notExists(Path.of(tempRepositoryDirectory.toString(), \"2 - Cloud Computing\", \"IEEEXplore.bib\")));\n        assertTrue(Files.notExists(Path.of(tempRepositoryDirectory.toString(), \"3 - TestSearchQuery3\", \"IEEEXplore.bib\")));\n    }\n","date":"2020-11-26 00:41:30","endLine":143,"groupId":"9454","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"repositoryStructureCorrectlyCreated","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/8a/69c6d7a011dfc002a2d5bb3d5da06c2310c6b5.src","preCode":"    void repositoryStructureCorrectlyCreated() throws Exception {\n        \r\n        getTestStudyRepository();\n\n        assertTrue(Files.exists(Path.of(tempRepositoryDirectory.toString(), \"1 - Quantum\")));\n        assertTrue(Files.exists(Path.of(tempRepositoryDirectory.toString(), \"2 - Cloud Computing\")));\n        assertTrue(Files.exists(Path.of(tempRepositoryDirectory.toString(), \"3 - TestSearchQuery3\")));\n        assertTrue(Files.exists(Path.of(tempRepositoryDirectory.toString(), \"1 - Quantum\", \"ArXiv.bib\")));\n        assertTrue(Files.exists(Path.of(tempRepositoryDirectory.toString(), \"2 - Cloud Computing\", \"ArXiv.bib\")));\n        assertTrue(Files.exists(Path.of(tempRepositoryDirectory.toString(), \"3 - TestSearchQuery3\", \"ArXiv.bib\")));\n        assertTrue(Files.exists(Path.of(tempRepositoryDirectory.toString(), \"1 - Quantum\", \"Springer.bib\")));\n        assertTrue(Files.exists(Path.of(tempRepositoryDirectory.toString(), \"2 - Cloud Computing\", \"Springer.bib\")));\n        assertTrue(Files.exists(Path.of(tempRepositoryDirectory.toString(), \"3 - TestSearchQuery3\", \"Springer.bib\")));\n        assertTrue(Files.notExists(Path.of(tempRepositoryDirectory.toString(), \"1 - Quantum\", \"IEEEXplore.bib\")));\n        assertTrue(Files.notExists(Path.of(tempRepositoryDirectory.toString(), \"2 - Cloud Computing\", \"IEEEXplore.bib\")));\n        assertTrue(Files.notExists(Path.of(tempRepositoryDirectory.toString(), \"3 - TestSearchQuery3\", \"IEEEXplore.bib\")));\n    }\n","realPath":"src/test/java/org/jabref/logic/crawler/StudyRepositoryTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":127,"status":"N"}],"commitId":"e66f5be7d82c7a7618fe327fe958ec57a25ea598","commitMessage":"@@@Add date fields (#7334)\n\nCo-authored-by: Oliver Kopp <kopp.dev@gmail.com>\n","date":"2021-01-15 05:25:34","modifiedFileCount":"31","status":"M","submitter":"Dominik Voigt"},{"authorTime":"2021-01-27 05:40:44","codes":[{"authorDate":"2021-01-27 05:40:44","commitOrder":4,"curCode":"    public void testWhetherAllFilesAreCreated() throws Exception {\n        setUp();\n        Crawler testCrawler = new Crawler(getPathToStudyDefinitionFile(),\n                gitHandler,\n                new DummyFileUpdateMonitor(),\n                importFormatPreferences,\n                savePreferences,\n                timestampPreferences,\n                entryTypesManager\n        );\n\n        testCrawler.performCrawl();\n\n        assertTrue(Files.exists(Path.of(tempRepositoryDirectory.toString(), hashCodeQuantum + \" - Quantum\")));\n        assertTrue(Files.exists(Path.of(tempRepositoryDirectory.toString(), hashCodeCloudComputing + \" - Cloud Computing\")));\n\n        assertTrue(Files.exists(Path.of(tempRepositoryDirectory.toString(), hashCodeQuantum + \" - Quantum\", \"ArXiv.bib\")));\n        assertTrue(Files.exists(Path.of(tempRepositoryDirectory.toString(), hashCodeCloudComputing + \" - Cloud Computing\", \"ArXiv.bib\")));\n\n        assertTrue(Files.exists(Path.of(tempRepositoryDirectory.toString(), hashCodeQuantum + \" - Quantum\", \"Springer.bib\")));\n        assertTrue(Files.exists(Path.of(tempRepositoryDirectory.toString(), hashCodeCloudComputing + \" - Cloud Computing\", \"Springer.bib\")));\n\n        assertTrue(Files.exists(Path.of(tempRepositoryDirectory.toString(), hashCodeQuantum + \" - Quantum\", \"result.bib\")));\n        assertTrue(Files.exists(Path.of(tempRepositoryDirectory.toString(), hashCodeCloudComputing + \" - Cloud Computing\", \"result.bib\")));\n        assertTrue(Files.exists(Path.of(tempRepositoryDirectory.toString(), \"studyResult.bib\")));\n    }\n","date":"2021-01-27 05:40:44","endLine":71,"groupId":"5997","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"testWhetherAllFilesAreCreated","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/b0/7dc48c59fda6029a9a95110b3fe04169a64473.src","preCode":"    public void testWhetherAllFilesAreCreated() throws Exception {\n        setUp();\n        Crawler testCrawler = new Crawler(getPathToStudyDefinitionFile(),\n                gitHandler,\n                new DummyFileUpdateMonitor(),\n                importFormatPreferences,\n                savePreferences,\n                timestampPreferences,\n                entryTypesManager\n        );\n\n        testCrawler.performCrawl();\n\n        assertTrue(Files.exists(Path.of(tempRepositoryDirectory.toString(), \"1 - Quantum\")));\n        assertTrue(Files.exists(Path.of(tempRepositoryDirectory.toString(), \"2 - Cloud Computing\")));\n        assertTrue(Files.exists(Path.of(tempRepositoryDirectory.toString(), \"3 - TestSearchQuery3\")));\n\n        assertTrue(Files.exists(Path.of(tempRepositoryDirectory.toString(), \"1 - Quantum\", \"ArXiv.bib\")));\n        assertTrue(Files.exists(Path.of(tempRepositoryDirectory.toString(), \"2 - Cloud Computing\", \"ArXiv.bib\")));\n        assertTrue(Files.exists(Path.of(tempRepositoryDirectory.toString(), \"3 - TestSearchQuery3\", \"ArXiv.bib\")));\n\n        assertTrue(Files.exists(Path.of(tempRepositoryDirectory.toString(), \"1 - Quantum\", \"Springer.bib\")));\n        assertTrue(Files.exists(Path.of(tempRepositoryDirectory.toString(), \"2 - Cloud Computing\", \"Springer.bib\")));\n        assertTrue(Files.exists(Path.of(tempRepositoryDirectory.toString(), \"3 - TestSearchQuery3\", \"Springer.bib\")));\n\n        assertTrue(Files.exists(Path.of(tempRepositoryDirectory.toString(), \"1 - Quantum\", \"result.bib\")));\n        assertTrue(Files.exists(Path.of(tempRepositoryDirectory.toString(), \"2 - Cloud Computing\", \"result.bib\")));\n        assertTrue(Files.exists(Path.of(tempRepositoryDirectory.toString(), \"3 - TestSearchQuery3\", \"result.bib\")));\n        assertTrue(Files.exists(Path.of(tempRepositoryDirectory.toString(), \"studyResult.bib\")));\n    }\n","realPath":"src/test/java/org/jabref/logic/crawler/CrawlerTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":46,"status":"M"},{"authorDate":"2021-01-27 05:40:44","commitOrder":4,"curCode":"    void repositoryStructureCorrectlyCreated() throws Exception {\n\n        \r\n        assertTrue(Files.exists(Path.of(tempRepositoryDirectory.toString(), hashCodeQuantum + \" - Quantum\")));\n        assertTrue(Files.exists(Path.of(tempRepositoryDirectory.toString(), hashCodeCloudComputing + \" - Cloud Computing\")));\n        assertTrue(Files.exists(Path.of(tempRepositoryDirectory.toString(), hashCodeSoftwareEngineering + \" - Software Engineering\")));\n        assertTrue(Files.exists(Path.of(tempRepositoryDirectory.toString(), hashCodeQuantum + \" - Quantum\", \"ArXiv.bib\")));\n        assertTrue(Files.exists(Path.of(tempRepositoryDirectory.toString(), hashCodeCloudComputing + \" - Cloud Computing\", \"ArXiv.bib\")));\n        assertTrue(Files.exists(Path.of(tempRepositoryDirectory.toString(), hashCodeSoftwareEngineering + \" - Software Engineering\", \"ArXiv.bib\")));\n        assertTrue(Files.exists(Path.of(tempRepositoryDirectory.toString(), hashCodeQuantum + \" - Quantum\", \"Springer.bib\")));\n        assertTrue(Files.exists(Path.of(tempRepositoryDirectory.toString(), hashCodeCloudComputing + \" - Cloud Computing\", \"Springer.bib\")));\n        assertTrue(Files.exists(Path.of(tempRepositoryDirectory.toString(), hashCodeSoftwareEngineering + \" - Software Engineering\", \"Springer.bib\")));\n        assertTrue(Files.notExists(Path.of(tempRepositoryDirectory.toString(), hashCodeQuantum + \" - Quantum\", \"IEEEXplore.bib\")));\n        assertTrue(Files.notExists(Path.of(tempRepositoryDirectory.toString(), hashCodeCloudComputing + \" - Cloud Computing\", \"IEEEXplore.bib\")));\n        assertTrue(Files.notExists(Path.of(tempRepositoryDirectory.toString(), hashCodeSoftwareEngineering + \" - Software Engineering\", \"IEEEXplore.bib\")));\n    }\n","date":"2021-01-27 05:40:44","endLine":118,"groupId":"5997","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"repositoryStructureCorrectlyCreated","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/8b/ba87c2a38ff63042a453e43331bb6246aee308.src","preCode":"    void repositoryStructureCorrectlyCreated() throws Exception {\n        \r\n        getTestStudyRepository();\n\n        assertTrue(Files.exists(Path.of(tempRepositoryDirectory.toString(), \"1 - Quantum\")));\n        assertTrue(Files.exists(Path.of(tempRepositoryDirectory.toString(), \"2 - Cloud Computing\")));\n        assertTrue(Files.exists(Path.of(tempRepositoryDirectory.toString(), \"3 - TestSearchQuery3\")));\n        assertTrue(Files.exists(Path.of(tempRepositoryDirectory.toString(), \"1 - Quantum\", \"ArXiv.bib\")));\n        assertTrue(Files.exists(Path.of(tempRepositoryDirectory.toString(), \"2 - Cloud Computing\", \"ArXiv.bib\")));\n        assertTrue(Files.exists(Path.of(tempRepositoryDirectory.toString(), \"3 - TestSearchQuery3\", \"ArXiv.bib\")));\n        assertTrue(Files.exists(Path.of(tempRepositoryDirectory.toString(), \"1 - Quantum\", \"Springer.bib\")));\n        assertTrue(Files.exists(Path.of(tempRepositoryDirectory.toString(), \"2 - Cloud Computing\", \"Springer.bib\")));\n        assertTrue(Files.exists(Path.of(tempRepositoryDirectory.toString(), \"3 - TestSearchQuery3\", \"Springer.bib\")));\n        assertTrue(Files.notExists(Path.of(tempRepositoryDirectory.toString(), \"1 - Quantum\", \"IEEEXplore.bib\")));\n        assertTrue(Files.notExists(Path.of(tempRepositoryDirectory.toString(), \"2 - Cloud Computing\", \"IEEEXplore.bib\")));\n        assertTrue(Files.notExists(Path.of(tempRepositoryDirectory.toString(), \"3 - TestSearchQuery3\", \"IEEEXplore.bib\")));\n    }\n","realPath":"src/test/java/org/jabref/logic/crawler/StudyRepositoryTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":103,"status":"M"}],"commitId":"7117b6197aa6f69f6b8b25f9452e875c9051046b","commitMessage":"@@@Change format for study definition to yaml (#7126)\n\n","date":"2021-01-27 05:40:44","modifiedFileCount":"6","status":"M","submitter":"Dominik Voigt"},{"authorTime":"2021-01-27 05:40:44","codes":[{"authorDate":"2021-07-05 03:02:18","commitOrder":5,"curCode":"    public void testWhetherAllFilesAreCreated() throws Exception {\n        setUp();\n        Crawler testCrawler = new Crawler(getPathToStudyDefinitionFile(), gitHandler, importFormatPreferences, savePreferences, timestampPreferences, entryTypesManager, new DummyFileUpdateMonitor());\n\n        testCrawler.performCrawl();\n\n        assertTrue(Files.exists(Path.of(tempRepositoryDirectory.toString(), hashCodeQuantum + \" - Quantum\")));\n        assertTrue(Files.exists(Path.of(tempRepositoryDirectory.toString(), hashCodeCloudComputing + \" - Cloud Computing\")));\n\n        assertTrue(Files.exists(Path.of(tempRepositoryDirectory.toString(), hashCodeQuantum + \" - Quantum\", \"ArXiv.bib\")));\n        assertTrue(Files.exists(Path.of(tempRepositoryDirectory.toString(), hashCodeCloudComputing + \" - Cloud Computing\", \"ArXiv.bib\")));\n\n        assertTrue(Files.exists(Path.of(tempRepositoryDirectory.toString(), hashCodeQuantum + \" - Quantum\", \"Springer.bib\")));\n        assertTrue(Files.exists(Path.of(tempRepositoryDirectory.toString(), hashCodeCloudComputing + \" - Cloud Computing\", \"Springer.bib\")));\n\n        assertTrue(Files.exists(Path.of(tempRepositoryDirectory.toString(), hashCodeQuantum + \" - Quantum\", \"result.bib\")));\n        assertTrue(Files.exists(Path.of(tempRepositoryDirectory.toString(), hashCodeCloudComputing + \" - Cloud Computing\", \"result.bib\")));\n        assertTrue(Files.exists(Path.of(tempRepositoryDirectory.toString(), \"studyResult.bib\")));\n    }\n","date":"2021-07-05 03:02:18","endLine":64,"groupId":"10102","id":9,"instanceNumber":1,"isCurCommit":1,"methodName":"testWhetherAllFilesAreCreated","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/6d/cc82f08ac4d512e0de7ac7e1a353d42765a943.src","preCode":"    public void testWhetherAllFilesAreCreated() throws Exception {\n        setUp();\n        Crawler testCrawler = new Crawler(getPathToStudyDefinitionFile(),\n                gitHandler,\n                new DummyFileUpdateMonitor(),\n                importFormatPreferences,\n                savePreferences,\n                timestampPreferences,\n                entryTypesManager\n        );\n\n        testCrawler.performCrawl();\n\n        assertTrue(Files.exists(Path.of(tempRepositoryDirectory.toString(), hashCodeQuantum + \" - Quantum\")));\n        assertTrue(Files.exists(Path.of(tempRepositoryDirectory.toString(), hashCodeCloudComputing + \" - Cloud Computing\")));\n\n        assertTrue(Files.exists(Path.of(tempRepositoryDirectory.toString(), hashCodeQuantum + \" - Quantum\", \"ArXiv.bib\")));\n        assertTrue(Files.exists(Path.of(tempRepositoryDirectory.toString(), hashCodeCloudComputing + \" - Cloud Computing\", \"ArXiv.bib\")));\n\n        assertTrue(Files.exists(Path.of(tempRepositoryDirectory.toString(), hashCodeQuantum + \" - Quantum\", \"Springer.bib\")));\n        assertTrue(Files.exists(Path.of(tempRepositoryDirectory.toString(), hashCodeCloudComputing + \" - Cloud Computing\", \"Springer.bib\")));\n\n        assertTrue(Files.exists(Path.of(tempRepositoryDirectory.toString(), hashCodeQuantum + \" - Quantum\", \"result.bib\")));\n        assertTrue(Files.exists(Path.of(tempRepositoryDirectory.toString(), hashCodeCloudComputing + \" - Cloud Computing\", \"result.bib\")));\n        assertTrue(Files.exists(Path.of(tempRepositoryDirectory.toString(), \"studyResult.bib\")));\n    }\n","realPath":"src/test/java/org/jabref/logic/crawler/CrawlerTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":46,"status":"M"},{"authorDate":"2021-01-27 05:40:44","commitOrder":5,"curCode":"    void repositoryStructureCorrectlyCreated() throws Exception {\n\n        \r\n        assertTrue(Files.exists(Path.of(tempRepositoryDirectory.toString(), hashCodeQuantum + \" - Quantum\")));\n        assertTrue(Files.exists(Path.of(tempRepositoryDirectory.toString(), hashCodeCloudComputing + \" - Cloud Computing\")));\n        assertTrue(Files.exists(Path.of(tempRepositoryDirectory.toString(), hashCodeSoftwareEngineering + \" - Software Engineering\")));\n        assertTrue(Files.exists(Path.of(tempRepositoryDirectory.toString(), hashCodeQuantum + \" - Quantum\", \"ArXiv.bib\")));\n        assertTrue(Files.exists(Path.of(tempRepositoryDirectory.toString(), hashCodeCloudComputing + \" - Cloud Computing\", \"ArXiv.bib\")));\n        assertTrue(Files.exists(Path.of(tempRepositoryDirectory.toString(), hashCodeSoftwareEngineering + \" - Software Engineering\", \"ArXiv.bib\")));\n        assertTrue(Files.exists(Path.of(tempRepositoryDirectory.toString(), hashCodeQuantum + \" - Quantum\", \"Springer.bib\")));\n        assertTrue(Files.exists(Path.of(tempRepositoryDirectory.toString(), hashCodeCloudComputing + \" - Cloud Computing\", \"Springer.bib\")));\n        assertTrue(Files.exists(Path.of(tempRepositoryDirectory.toString(), hashCodeSoftwareEngineering + \" - Software Engineering\", \"Springer.bib\")));\n        assertTrue(Files.notExists(Path.of(tempRepositoryDirectory.toString(), hashCodeQuantum + \" - Quantum\", \"IEEEXplore.bib\")));\n        assertTrue(Files.notExists(Path.of(tempRepositoryDirectory.toString(), hashCodeCloudComputing + \" - Cloud Computing\", \"IEEEXplore.bib\")));\n        assertTrue(Files.notExists(Path.of(tempRepositoryDirectory.toString(), hashCodeSoftwareEngineering + \" - Software Engineering\", \"IEEEXplore.bib\")));\n    }\n","date":"2021-01-27 05:40:44","endLine":118,"groupId":"10102","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"repositoryStructureCorrectlyCreated","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/8b/ba87c2a38ff63042a453e43331bb6246aee308.src","preCode":"    void repositoryStructureCorrectlyCreated() throws Exception {\n\n        \r\n        assertTrue(Files.exists(Path.of(tempRepositoryDirectory.toString(), hashCodeQuantum + \" - Quantum\")));\n        assertTrue(Files.exists(Path.of(tempRepositoryDirectory.toString(), hashCodeCloudComputing + \" - Cloud Computing\")));\n        assertTrue(Files.exists(Path.of(tempRepositoryDirectory.toString(), hashCodeSoftwareEngineering + \" - Software Engineering\")));\n        assertTrue(Files.exists(Path.of(tempRepositoryDirectory.toString(), hashCodeQuantum + \" - Quantum\", \"ArXiv.bib\")));\n        assertTrue(Files.exists(Path.of(tempRepositoryDirectory.toString(), hashCodeCloudComputing + \" - Cloud Computing\", \"ArXiv.bib\")));\n        assertTrue(Files.exists(Path.of(tempRepositoryDirectory.toString(), hashCodeSoftwareEngineering + \" - Software Engineering\", \"ArXiv.bib\")));\n        assertTrue(Files.exists(Path.of(tempRepositoryDirectory.toString(), hashCodeQuantum + \" - Quantum\", \"Springer.bib\")));\n        assertTrue(Files.exists(Path.of(tempRepositoryDirectory.toString(), hashCodeCloudComputing + \" - Cloud Computing\", \"Springer.bib\")));\n        assertTrue(Files.exists(Path.of(tempRepositoryDirectory.toString(), hashCodeSoftwareEngineering + \" - Software Engineering\", \"Springer.bib\")));\n        assertTrue(Files.notExists(Path.of(tempRepositoryDirectory.toString(), hashCodeQuantum + \" - Quantum\", \"IEEEXplore.bib\")));\n        assertTrue(Files.notExists(Path.of(tempRepositoryDirectory.toString(), hashCodeCloudComputing + \" - Cloud Computing\", \"IEEEXplore.bib\")));\n        assertTrue(Files.notExists(Path.of(tempRepositoryDirectory.toString(), hashCodeSoftwareEngineering + \" - Software Engineering\", \"IEEEXplore.bib\")));\n    }\n","realPath":"src/test/java/org/jabref/logic/crawler/StudyRepositoryTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":103,"status":"N"}],"commitId":"f0709b71ca0a303d17904e63072ef4abef29d539","commitMessage":"@@@Feature add git workflow for slr search (#7625)\n\n* Add study UI and Git support\n\n* Modify localization\n\n* Fix checkstyle\n\n* Fix test issues\n\n* Fix architecture test.  modify some formulations in UI\n\n* Add DI for services\n\n* Get table views working\nstandardize UI\n\n* Clean up\n\n* Make localization consistent\n\n* Compressed fxml and fixed minor visual issue (table cell too small)\n\n* Reduced code duplication\n\nCo-authored-by: Carl Christian Snethlage <cc.snethlage@gmail.com>\nCo-authored-by: Siedlerchr <siedlerkiller@gmail.com>","date":"2021-07-05 03:02:18","modifiedFileCount":"8","status":"M","submitter":"Dominik Voigt"}]
