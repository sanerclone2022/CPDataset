[{"authorTime":"2021-01-27 05:40:44","codes":[{"authorDate":"2021-01-15 05:25:34","commitOrder":4,"curCode":"    private void setUp() throws Exception {\n        setUpRepository();\n\n        CitationKeyPatternPreferences citationKeyPatternPreferences = new CitationKeyPatternPreferences(\n                false,\n                false,\n                false,\n                CitationKeyPatternPreferences.KeySuffix.SECOND_WITH_A,\n                \"\",\n                \"\",\n                DEFAULT_UNWANTED_CHARACTERS,\n                GlobalCitationKeyPattern.fromPattern(\"[auth][year]\"),\n                ',');\n\n        importFormatPreferences = mock(ImportFormatPreferences.class, Answers.RETURNS_DEEP_STUBS);\n        savePreferences = mock(SavePreferences.class, Answers.RETURNS_DEEP_STUBS);\n        timestampPreferences = mock(TimestampPreferences.class);\n        when(savePreferences.getSaveOrder()).thenReturn(new SaveOrderConfig());\n        when(savePreferences.getEncoding()).thenReturn(null);\n        when(savePreferences.takeMetadataSaveOrderInAccount()).thenReturn(true);\n        when(savePreferences.getCitationKeyPatternPreferences()).thenReturn(citationKeyPatternPreferences);\n        when(importFormatPreferences.getKeywordSeparator()).thenReturn(',');\n        when(importFormatPreferences.getFieldContentFormatterPreferences()).thenReturn(new FieldContentFormatterPreferences());\n        when(importFormatPreferences.isKeywordSyncEnabled()).thenReturn(false);\n        when(importFormatPreferences.getEncoding()).thenReturn(StandardCharsets.UTF_8);\n        entryTypesManager = new BibEntryTypesManager();\n    }\n","date":"2021-01-15 05:25:34","endLine":107,"groupId":"7435","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"setUp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/df/a6e11ba9ca4c3f704450ffe1e77e53be29556a.src","preCode":"    private void setUp() throws Exception {\n        setUpRepository();\n\n        CitationKeyPatternPreferences citationKeyPatternPreferences = new CitationKeyPatternPreferences(\n                false,\n                false,\n                false,\n                CitationKeyPatternPreferences.KeySuffix.SECOND_WITH_A,\n                \"\",\n                \"\",\n                DEFAULT_UNWANTED_CHARACTERS,\n                GlobalCitationKeyPattern.fromPattern(\"[auth][year]\"),\n                ',');\n\n        importFormatPreferences = mock(ImportFormatPreferences.class, Answers.RETURNS_DEEP_STUBS);\n        savePreferences = mock(SavePreferences.class, Answers.RETURNS_DEEP_STUBS);\n        timestampPreferences = mock(TimestampPreferences.class);\n        when(savePreferences.getSaveOrder()).thenReturn(new SaveOrderConfig());\n        when(savePreferences.getEncoding()).thenReturn(null);\n        when(savePreferences.takeMetadataSaveOrderInAccount()).thenReturn(true);\n        when(savePreferences.getCitationKeyPatternPreferences()).thenReturn(citationKeyPatternPreferences);\n        when(importFormatPreferences.getKeywordSeparator()).thenReturn(',');\n        when(importFormatPreferences.getFieldContentFormatterPreferences()).thenReturn(new FieldContentFormatterPreferences());\n        when(importFormatPreferences.isKeywordSyncEnabled()).thenReturn(false);\n        when(importFormatPreferences.getEncoding()).thenReturn(StandardCharsets.UTF_8);\n        entryTypesManager = new BibEntryTypesManager();\n    }\n","realPath":"src/test/java/org/jabref/logic/crawler/CrawlerTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":81,"status":"NB"},{"authorDate":"2021-01-27 05:40:44","commitOrder":4,"curCode":"    void setUpMocks() {\n        importFormatPreferences = mock(ImportFormatPreferences.class, Answers.RETURNS_DEEP_STUBS);\n        savePreferences = mock(SavePreferences.class, Answers.RETURNS_DEEP_STUBS);\n        timestampPreferences = mock(TimestampPreferences.class);\n        when(savePreferences.getSaveOrder()).thenReturn(new SaveOrderConfig());\n        when(savePreferences.getEncoding()).thenReturn(null);\n        when(savePreferences.takeMetadataSaveOrderInAccount()).thenReturn(true);\n        when(importFormatPreferences.getKeywordSeparator()).thenReturn(',');\n        when(importFormatPreferences.getFieldContentFormatterPreferences()).thenReturn(new FieldContentFormatterPreferences());\n        when(importFormatPreferences.isKeywordSyncEnabled()).thenReturn(false);\n        when(importFormatPreferences.getEncoding()).thenReturn(StandardCharsets.UTF_8);\n        entryTypesManager = new BibEntryTypesManager();\n        gitHandler = mock(GitHandler.class, Answers.RETURNS_DEFAULTS);\n    }\n","date":"2021-01-27 05:40:44","endLine":51,"groupId":"3112","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"setUpMocks","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/f8/50658fefb701f46f2f0f65dac245eac0a2137a.src","preCode":"    void setUpMocks() {\n        importFormatPreferences = mock(ImportFormatPreferences.class, Answers.RETURNS_DEEP_STUBS);\n        savePreferences = mock(SavePreferences.class, Answers.RETURNS_DEEP_STUBS);\n        timestampPreferences = mock(TimestampPreferences.class);\n        when(savePreferences.getSaveOrder()).thenReturn(new SaveOrderConfig());\n        when(savePreferences.getEncoding()).thenReturn(null);\n        when(savePreferences.takeMetadataSaveOrderInAccount()).thenReturn(true);\n        when(importFormatPreferences.getKeywordSeparator()).thenReturn(',');\n        when(importFormatPreferences.getFieldContentFormatterPreferences()).thenReturn(new FieldContentFormatterPreferences());\n        when(importFormatPreferences.isKeywordSyncEnabled()).thenReturn(false);\n        when(importFormatPreferences.getEncoding()).thenReturn(StandardCharsets.UTF_8);\n        entryTypesManager = new BibEntryTypesManager();\n        gitHandler = mock(GitHandler.class, Answers.RETURNS_DEFAULTS);\n    }\n","realPath":"src/test/java/org/jabref/logic/crawler/StudyDatabaseToFetcherConverterTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":38,"status":"B"}],"commitId":"7117b6197aa6f69f6b8b25f9452e875c9051046b","commitMessage":"@@@Change format for study definition to yaml (#7126)\n\n","date":"2021-01-27 05:40:44","modifiedFileCount":"6","status":"M","submitter":"Dominik Voigt"},{"authorTime":"2021-07-05 03:02:18","codes":[{"authorDate":"2021-07-05 03:02:18","commitOrder":5,"curCode":"    private void setUp() throws Exception {\n        setUpRepository();\n\n        CitationKeyPatternPreferences citationKeyPatternPreferences = new CitationKeyPatternPreferences(\n                false,\n                false,\n                false,\n                CitationKeyPatternPreferences.KeySuffix.SECOND_WITH_A,\n                \"\",\n                \"\",\n                DEFAULT_UNWANTED_CHARACTERS,\n                GlobalCitationKeyPattern.fromPattern(\"[auth][year]\"),\n                ',');\n\n        importFormatPreferences = mock(ImportFormatPreferences.class, Answers.RETURNS_DEEP_STUBS);\n        savePreferences = mock(SavePreferences.class, Answers.RETURNS_DEEP_STUBS);\n        timestampPreferences = mock(TimestampPreferences.class);\n        when(savePreferences.getSaveOrder()).thenReturn(new SaveOrderConfig());\n        when(savePreferences.getEncoding()).thenReturn(null);\n        when(savePreferences.takeMetadataSaveOrderInAccount()).thenReturn(true);\n        when(savePreferences.getCitationKeyPatternPreferences()).thenReturn(citationKeyPatternPreferences);\n        when(savePreferences.getEncoding()).thenReturn(Charset.defaultCharset());\n        when(importFormatPreferences.getKeywordSeparator()).thenReturn(',');\n        when(importFormatPreferences.getFieldContentFormatterPreferences()).thenReturn(new FieldContentFormatterPreferences());\n        when(importFormatPreferences.isKeywordSyncEnabled()).thenReturn(false);\n        when(importFormatPreferences.getEncoding()).thenReturn(StandardCharsets.UTF_8);\n        entryTypesManager = new BibEntryTypesManager();\n    }\n","date":"2021-07-05 03:02:18","endLine":100,"groupId":"10103","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"setUp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/6d/cc82f08ac4d512e0de7ac7e1a353d42765a943.src","preCode":"    private void setUp() throws Exception {\n        setUpRepository();\n\n        CitationKeyPatternPreferences citationKeyPatternPreferences = new CitationKeyPatternPreferences(\n                false,\n                false,\n                false,\n                CitationKeyPatternPreferences.KeySuffix.SECOND_WITH_A,\n                \"\",\n                \"\",\n                DEFAULT_UNWANTED_CHARACTERS,\n                GlobalCitationKeyPattern.fromPattern(\"[auth][year]\"),\n                ',');\n\n        importFormatPreferences = mock(ImportFormatPreferences.class, Answers.RETURNS_DEEP_STUBS);\n        savePreferences = mock(SavePreferences.class, Answers.RETURNS_DEEP_STUBS);\n        timestampPreferences = mock(TimestampPreferences.class);\n        when(savePreferences.getSaveOrder()).thenReturn(new SaveOrderConfig());\n        when(savePreferences.getEncoding()).thenReturn(null);\n        when(savePreferences.takeMetadataSaveOrderInAccount()).thenReturn(true);\n        when(savePreferences.getCitationKeyPatternPreferences()).thenReturn(citationKeyPatternPreferences);\n        when(importFormatPreferences.getKeywordSeparator()).thenReturn(',');\n        when(importFormatPreferences.getFieldContentFormatterPreferences()).thenReturn(new FieldContentFormatterPreferences());\n        when(importFormatPreferences.isKeywordSyncEnabled()).thenReturn(false);\n        when(importFormatPreferences.getEncoding()).thenReturn(StandardCharsets.UTF_8);\n        entryTypesManager = new BibEntryTypesManager();\n    }\n","realPath":"src/test/java/org/jabref/logic/crawler/CrawlerTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":73,"status":"M"},{"authorDate":"2021-07-05 03:02:18","commitOrder":5,"curCode":"    void setUpMocks() {\n        importFormatPreferences = mock(ImportFormatPreferences.class, Answers.RETURNS_DEEP_STUBS);\n        savePreferences = mock(SavePreferences.class, Answers.RETURNS_DEEP_STUBS);\n        timestampPreferences = mock(TimestampPreferences.class);\n        when(savePreferences.getSaveOrder()).thenReturn(new SaveOrderConfig());\n        when(savePreferences.getEncoding()).thenReturn(null);\n        when(savePreferences.takeMetadataSaveOrderInAccount()).thenReturn(true);\n        when(importFormatPreferences.getKeywordSeparator()).thenReturn(',');\n        when(importFormatPreferences.getFieldContentFormatterPreferences()).thenReturn(new FieldContentFormatterPreferences());\n        when(importFormatPreferences.isKeywordSyncEnabled()).thenReturn(false);\n        when(importFormatPreferences.getEncoding()).thenReturn(StandardCharsets.UTF_8);\n        entryTypesManager = new BibEntryTypesManager();\n        gitHandler = mock(SlrGitHandler.class, Answers.RETURNS_DEFAULTS);\n    }\n","date":"2021-07-05 03:02:18","endLine":51,"groupId":"10103","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"setUpMocks","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/74/ba78baa1a1b6b2fed191fbfd7d0e0445040f5c.src","preCode":"    void setUpMocks() {\n        importFormatPreferences = mock(ImportFormatPreferences.class, Answers.RETURNS_DEEP_STUBS);\n        savePreferences = mock(SavePreferences.class, Answers.RETURNS_DEEP_STUBS);\n        timestampPreferences = mock(TimestampPreferences.class);\n        when(savePreferences.getSaveOrder()).thenReturn(new SaveOrderConfig());\n        when(savePreferences.getEncoding()).thenReturn(null);\n        when(savePreferences.takeMetadataSaveOrderInAccount()).thenReturn(true);\n        when(importFormatPreferences.getKeywordSeparator()).thenReturn(',');\n        when(importFormatPreferences.getFieldContentFormatterPreferences()).thenReturn(new FieldContentFormatterPreferences());\n        when(importFormatPreferences.isKeywordSyncEnabled()).thenReturn(false);\n        when(importFormatPreferences.getEncoding()).thenReturn(StandardCharsets.UTF_8);\n        entryTypesManager = new BibEntryTypesManager();\n        gitHandler = mock(GitHandler.class, Answers.RETURNS_DEFAULTS);\n    }\n","realPath":"src/test/java/org/jabref/logic/crawler/StudyDatabaseToFetcherConverterTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":38,"status":"M"}],"commitId":"f0709b71ca0a303d17904e63072ef4abef29d539","commitMessage":"@@@Feature add git workflow for slr search (#7625)\n\n* Add study UI and Git support\n\n* Modify localization\n\n* Fix checkstyle\n\n* Fix test issues\n\n* Fix architecture test.  modify some formulations in UI\n\n* Add DI for services\n\n* Get table views working\nstandardize UI\n\n* Clean up\n\n* Make localization consistent\n\n* Compressed fxml and fixed minor visual issue (table cell too small)\n\n* Reduced code duplication\n\nCo-authored-by: Carl Christian Snethlage <cc.snethlage@gmail.com>\nCo-authored-by: Siedlerchr <siedlerkiller@gmail.com>","date":"2021-07-05 03:02:18","modifiedFileCount":"8","status":"M","submitter":"Dominik Voigt"}]
