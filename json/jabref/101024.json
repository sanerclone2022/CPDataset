[{"authorTime":"2018-02-16 23:05:18","codes":[{"authorDate":"2018-02-16 23:05:18","commitOrder":1,"curCode":"    private List<LinkedFile> getLinkedFiles(Record record) {\n        Optional<PdfUrls> urls = Optional.ofNullable(record.getUrls())\n                                         .map(Urls::getPdfUrls);\n        return OptionalUtil.toStream(urls)\n                           .flatMap(pdfUrls -> pdfUrls.getUrl().stream())\n                           .flatMap(url -> OptionalUtil.toStream(getUrlValue(url)))\n                           .map(url -> new LinkedFile(\"\", url, \"PDF\"))\n                           .collect(Collectors.toList());\n    }\n","date":"2018-02-16 23:05:18","endLine":251,"groupId":"7049","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"getLinkedFiles","params":"(Recordrecord)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/34/a600321cbf65a3f49193c6b88f7c110eea4471.src","preCode":"    private List<LinkedFile> getLinkedFiles(Record record) {\n        Optional<PdfUrls> urls = Optional.ofNullable(record.getUrls())\n                                         .map(Urls::getPdfUrls);\n        return OptionalUtil.toStream(urls)\n                           .flatMap(pdfUrls -> pdfUrls.getUrl().stream())\n                           .flatMap(url -> OptionalUtil.toStream(getUrlValue(url)))\n                           .map(url -> new LinkedFile(\"\", url, \"PDF\"))\n                           .collect(Collectors.toList());\n    }\n","realPath":"src/main/java/org/jabref/logic/importer/fileformat/EndnoteXmlImporter.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":243,"status":"B"},{"authorDate":"2018-02-16 23:05:18","commitOrder":1,"curCode":"    private Optional<String> getUrl(Record record) {\n        Optional<RelatedUrls> urls = Optional.ofNullable(record.getUrls())\n                                             .map(Urls::getRelatedUrls);\n        return OptionalUtil.toStream(urls)\n                           .flatMap(url -> url.getUrl().stream())\n                           .flatMap(url -> OptionalUtil.toStream(getUrlValue(url)))\n                           .findFirst();\n    }\n","date":"2018-02-16 23:05:18","endLine":260,"groupId":"7049","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"getUrl","params":"(Recordrecord)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/34/a600321cbf65a3f49193c6b88f7c110eea4471.src","preCode":"    private Optional<String> getUrl(Record record) {\n        Optional<RelatedUrls> urls = Optional.ofNullable(record.getUrls())\n                                             .map(Urls::getRelatedUrls);\n        return OptionalUtil.toStream(urls)\n                           .flatMap(url -> url.getUrl().stream())\n                           .flatMap(url -> OptionalUtil.toStream(getUrlValue(url)))\n                           .findFirst();\n    }\n","realPath":"src/main/java/org/jabref/logic/importer/fileformat/EndnoteXmlImporter.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":253,"status":"B"}],"commitId":"bb2b078336b09df8707e02fc8464ffec1d8b2aaf","commitMessage":"@@@Add EndNote XML importer (#3713)\n\n* Add EndNote XML importer\n\n* add some optionals of Nullable to fix parsing errors\n\n* Implement feedback\n\n* Fix a few other NPE\n\n* Improve importer according to feedback from user\n","date":"2018-02-16 23:05:18","modifiedFileCount":"11","status":"B","submitter":"Tobias Diez"},{"authorTime":"2018-02-16 23:05:18","codes":[{"authorDate":"2020-09-26 05:39:50","commitOrder":2,"curCode":"    private List<LinkedFile> getLinkedFiles(Record record) {\n        Optional<PdfUrls> urls = Optional.ofNullable(record.getUrls())\n                                         .map(Urls::getPdfUrls);\n        return OptionalUtil.toStream(urls)\n                           .flatMap(pdfUrls -> pdfUrls.getUrl().stream())\n                           .flatMap(url -> OptionalUtil.toStream(getUrlValue(url)))\n                           .map(url -> {\n                               try {\n                                   return new LinkedFile(new URL(url), \"PDF\");\n                               } catch (MalformedURLException e) {\n                                   LOGGER.info(\"Unable to parse {}\", url);\n                                   return null;\n                               }\n                           })\n                           .collect(Collectors.toList());\n    }\n","date":"2020-09-26 05:39:50","endLine":251,"groupId":"101024","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"getLinkedFiles","params":"(Recordrecord)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/77/a79883772a33d1eb16564be69d5a9d76cda55a.src","preCode":"    private List<LinkedFile> getLinkedFiles(Record record) {\n        Optional<PdfUrls> urls = Optional.ofNullable(record.getUrls())\n                                         .map(Urls::getPdfUrls);\n        return OptionalUtil.toStream(urls)\n                           .flatMap(pdfUrls -> pdfUrls.getUrl().stream())\n                           .flatMap(url -> OptionalUtil.toStream(getUrlValue(url)))\n                           .map(url -> new LinkedFile(\"\", url, \"PDF\"))\n                           .collect(Collectors.toList());\n    }\n","realPath":"src/main/java/org/jabref/logic/importer/fileformat/EndnoteXmlImporter.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":236,"status":"M"},{"authorDate":"2018-02-16 23:05:18","commitOrder":2,"curCode":"    private Optional<String> getUrl(Record record) {\n        Optional<RelatedUrls> urls = Optional.ofNullable(record.getUrls())\n                                             .map(Urls::getRelatedUrls);\n        return OptionalUtil.toStream(urls)\n                           .flatMap(url -> url.getUrl().stream())\n                           .flatMap(url -> OptionalUtil.toStream(getUrlValue(url)))\n                           .findFirst();\n    }\n","date":"2018-02-16 23:05:18","endLine":260,"groupId":"101024","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"getUrl","params":"(Recordrecord)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/34/a600321cbf65a3f49193c6b88f7c110eea4471.src","preCode":"    private Optional<String> getUrl(Record record) {\n        Optional<RelatedUrls> urls = Optional.ofNullable(record.getUrls())\n                                             .map(Urls::getRelatedUrls);\n        return OptionalUtil.toStream(urls)\n                           .flatMap(url -> url.getUrl().stream())\n                           .flatMap(url -> OptionalUtil.toStream(getUrlValue(url)))\n                           .findFirst();\n    }\n","realPath":"src/main/java/org/jabref/logic/importer/fileformat/EndnoteXmlImporter.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":253,"status":"N"}],"commitId":"3123090b6cf44e853eceae42854d49e78e81be2a","commitMessage":"@@@Changed default value of \"search and store files relative to bibtex file\" to true (#6928)\n\n* Fixes #6863\n\n* CHANGELOG.md\n\n* Reworded bibLocationAsPrimary to reflect real meaning of the preference setting.  changed default val to true\n\n* Cleanup of deprecated methods LinkedFiles(String.  String.  String) and List<String> getFileDirectories(...)\n\n* Reworded package filelist to linkedfile\n\n* Fixed SpringerFetcher","date":"2020-09-26 05:39:50","modifiedFileCount":"45","status":"M","submitter":"Carl Christian Snethlage"}]
