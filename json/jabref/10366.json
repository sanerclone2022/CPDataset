[{"authorTime":"2018-01-03 02:38:01","codes":[{"authorDate":"2018-01-03 02:38:01","commitOrder":1,"curCode":"    public void testUpdateEntry() throws OfflineLockException, SQLException {\n        BibEntry expectedEntry = getBibEntryExample();\n\n        dbmsProcessor.insertEntry(expectedEntry);\n\n        expectedEntry.setType(\"book\");\n        expectedEntry.setField(\"author\", \"Michael J and Hutchings\");\n        expectedEntry.setField(\"customField\", \"custom value\");\n        expectedEntry.clearField(\"booktitle\");\n\n        dbmsProcessor.updateEntry(expectedEntry);\n\n        Optional<BibEntry> actualEntryOptional = dbmsProcessor\n                .getSharedEntry(expectedEntry.getSharedBibEntryData().getSharedID());\n\n        assertEquals(expectedEntry, actualEntryOptional.get());\n    }\n","date":"2018-01-03 02:38:01","endLine":113,"groupId":"12042","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testUpdateEntry","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/6a/a6e2ec8e24ec885b35fe066a4c4f55f1c5db0a.src","preCode":"    public void testUpdateEntry() throws OfflineLockException, SQLException {\n        BibEntry expectedEntry = getBibEntryExample();\n\n        dbmsProcessor.insertEntry(expectedEntry);\n\n        expectedEntry.setType(\"book\");\n        expectedEntry.setField(\"author\", \"Michael J and Hutchings\");\n        expectedEntry.setField(\"customField\", \"custom value\");\n        expectedEntry.clearField(\"booktitle\");\n\n        dbmsProcessor.updateEntry(expectedEntry);\n\n        Optional<BibEntry> actualEntryOptional = dbmsProcessor\n                .getSharedEntry(expectedEntry.getSharedBibEntryData().getSharedID());\n\n        assertEquals(expectedEntry, actualEntryOptional.get());\n    }\n","realPath":"src/test/java/org/jabref/logic/shared/DBMSProcessorTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":97,"status":"B"},{"authorDate":"2018-01-03 02:38:01","commitOrder":1,"curCode":"    public void testUpdateEqualEntry() throws OfflineLockException, SQLException {\n        BibEntry expectedBibEntry = getBibEntryExample();\n\n        dbmsProcessor.insertEntry(expectedBibEntry);\n        \r\n        expectedBibEntry.getSharedBibEntryData().setVersion(0);\n        dbmsProcessor.updateEntry(expectedBibEntry);\n\n        Optional<BibEntry> actualBibEntryOptional = dbmsProcessor\n                .getSharedEntry(expectedBibEntry.getSharedBibEntryData().getSharedID());\n\n        assertEquals(expectedBibEntry, actualBibEntryOptional.get());\n    }\n","date":"2018-01-03 02:38:01","endLine":141,"groupId":"12042","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testUpdateEqualEntry","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/6a/a6e2ec8e24ec885b35fe066a4c4f55f1c5db0a.src","preCode":"    public void testUpdateEqualEntry() throws OfflineLockException, SQLException {\n        BibEntry expectedBibEntry = getBibEntryExample();\n\n        dbmsProcessor.insertEntry(expectedBibEntry);\n        \r\n        expectedBibEntry.getSharedBibEntryData().setVersion(0);\n        dbmsProcessor.updateEntry(expectedBibEntry);\n\n        Optional<BibEntry> actualBibEntryOptional = dbmsProcessor\n                .getSharedEntry(expectedBibEntry.getSharedBibEntryData().getSharedID());\n\n        assertEquals(expectedBibEntry, actualBibEntryOptional.get());\n    }\n","realPath":"src/test/java/org/jabref/logic/shared/DBMSProcessorTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":129,"status":"B"}],"commitId":"c7517154ffc54aa1b4b2b0103f5e7b316fff61be","commitMessage":"@@@Refactor shared package into the architecture (#3523)\n\n* Refactor shared package into the architecture\n\n* Add DatabaseConnectionProperties to DatabaseSynchronizer interface\n\n* Encapsulate SQLException in IllegalStateException\n","date":"2018-01-03 02:38:01","modifiedFileCount":"12","status":"B","submitter":"J?rg Lenhard"},{"authorTime":"2018-08-16 15:17:32","codes":[{"authorDate":"2018-08-16 15:17:32","commitOrder":2,"curCode":"    void testUpdateEntry(DBMSType dbmsType, DBMSConnection dbmsConnection, DBMSProcessor dbmsProcessor) throws OfflineLockException, SQLException {\n        dbmsProcessor.setupSharedDatabase();\n        BibEntry expectedEntry = getBibEntryExample();\n\n        dbmsProcessor.insertEntry(expectedEntry);\n\n        expectedEntry.setType(\"book\");\n        expectedEntry.setField(\"author\", \"Michael J and Hutchings\");\n        expectedEntry.setField(\"customField\", \"custom value\");\n        expectedEntry.clearField(\"booktitle\");\n\n        dbmsProcessor.updateEntry(expectedEntry);\n\n        Optional<BibEntry> actualEntryOptional = dbmsProcessor\n                .getSharedEntry(expectedEntry.getSharedBibEntryData().getSharedID());\n\n        assertEquals(expectedEntry, actualEntryOptional.get());\n    }\n","date":"2018-08-16 15:17:32","endLine":113,"groupId":"12042","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testUpdateEntry","params":"(DBMSTypedbmsType@DBMSConnectiondbmsConnection@DBMSProcessordbmsProcessor)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/c0/99ace2c7ce9fa121aadbc8b47b1aaa1957f740.src","preCode":"    public void testUpdateEntry() throws OfflineLockException, SQLException {\n        BibEntry expectedEntry = getBibEntryExample();\n\n        dbmsProcessor.insertEntry(expectedEntry);\n\n        expectedEntry.setType(\"book\");\n        expectedEntry.setField(\"author\", \"Michael J and Hutchings\");\n        expectedEntry.setField(\"customField\", \"custom value\");\n        expectedEntry.clearField(\"booktitle\");\n\n        dbmsProcessor.updateEntry(expectedEntry);\n\n        Optional<BibEntry> actualEntryOptional = dbmsProcessor\n                .getSharedEntry(expectedEntry.getSharedBibEntryData().getSharedID());\n\n        assertEquals(expectedEntry, actualEntryOptional.get());\n    }\n","realPath":"src/test/java/org/jabref/logic/shared/DBMSProcessorTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":96,"status":"M"},{"authorDate":"2018-08-16 15:17:32","commitOrder":2,"curCode":"    void testUpdateEqualEntry(DBMSType dbmsType, DBMSConnection dbmsConnection, DBMSProcessor dbmsProcessor) throws OfflineLockException, SQLException {\n        dbmsProcessor.setupSharedDatabase();\n        BibEntry expectedBibEntry = getBibEntryExample();\n\n        dbmsProcessor.insertEntry(expectedBibEntry);\n        \r\n        expectedBibEntry.getSharedBibEntryData().setVersion(0);\n        dbmsProcessor.updateEntry(expectedBibEntry);\n\n        Optional<BibEntry> actualBibEntryOptional = dbmsProcessor\n                .getSharedEntry(expectedBibEntry.getSharedBibEntryData().getSharedID());\n\n        assertEquals(expectedBibEntry, actualBibEntryOptional.get());\n    }\n","date":"2018-08-16 15:17:32","endLine":145,"groupId":"12042","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testUpdateEqualEntry","params":"(DBMSTypedbmsType@DBMSConnectiondbmsConnection@DBMSProcessordbmsProcessor)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/c0/99ace2c7ce9fa121aadbc8b47b1aaa1957f740.src","preCode":"    public void testUpdateEqualEntry() throws OfflineLockException, SQLException {\n        BibEntry expectedBibEntry = getBibEntryExample();\n\n        dbmsProcessor.insertEntry(expectedBibEntry);\n        \r\n        expectedBibEntry.getSharedBibEntryData().setVersion(0);\n        dbmsProcessor.updateEntry(expectedBibEntry);\n\n        Optional<BibEntry> actualBibEntryOptional = dbmsProcessor\n                .getSharedEntry(expectedBibEntry.getSharedBibEntryData().getSharedID());\n\n        assertEquals(expectedBibEntry, actualBibEntryOptional.get());\n    }\n","realPath":"src/test/java/org/jabref/logic/shared/DBMSProcessorTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":132,"status":"M"}],"commitId":"a880addc0b9a45ad4461cc46ed261ea7df9c812a","commitMessage":"@@@Fix for issue 3959: migrate all tests to JUnit 5 (#4260)\n\n* Update migrate from JUnit 4 to JUnit 5\n\n* Update migrate from JUnit 4 to JUnit 5\n\n* Trying to change git accounts on my laptop\n\n* Trying to change git accounts on my laptop\n\n* Trying to change git accounts on my laptop\n\n* Using static assert methods.\n\n* Migrate from JUnit 4 to JUnit 5\n\n*AuthorListParameterTest.java\n\n* Migrate from JUnit 4 to JUnit 5\n\n*XmpUtilWriterTest.java\n\n* Migrate from JUnit 4 to JUnit 5\n\n*XmpUtilReaderTest.java\n\n* Migrate from JUnit 4 to JUnit 5\n\n*SearchQueryHighlightObservableTest.java\n\n    -did not use MockitoExtension.class as its official version has not been released yet.\n\n* Migrate from JUnit 4 to JUnit 5\n\n*CitationEntryTest.java\n\n* Migrate from JUnit 4 to JUnit 5\n\n*RTFCharsTest.java\n\n* Migrate from JUnit 4 to JUnit 5\n\n*ProtectedTermsLoaderTest.java\n\n    -When running tests.  outputs in command line are different. I don't know if this change is correct.\n\n* Trying to change to a new branch.\n\n* commit_test\n\n* delete my meaningless txt\n\n* Migrate from JUnit 4 to JUnit 5\n\n*AuthorAndToSemicolonReplacerTest.java\n\n* Migrate from JUnit 4 to JUnit 5\n\n*FileDialogConfigurationTest.java\n\n* Migrate from JUnit 4 to JUnit 5\n\n*IntegrityCheckTest.java\n\n* Migrate from JUnit 4 to JUnit 5\n\n*ModsExportFormatTest.java\n\n* Migrate from JUnit 4 to JUnit 5\n\n*AutoSetFileLinksUtilTest.java\n\n* Migrate from JUnit 4 to JUnit 5\n\n*MsBibExportFormatTest.java\n\n* Migrate from JUnit 4 to JUnit 5\n\n*CsvExportFormatTest.java\n\n* Migrate from JUnit 4 to JUnit 5\n\n*HtmlExportFormatTest.java\n\n* Migrate from JUnit 4 to JUnit 5\n\n*HtmlExportFormatTest.java\n\n* Migrate from JUnit 4 to JUnit 5\n\n*RenamePdfCleanupTest.java\n\n* Migrate from JUnit 4 to JUnit 5\n\n*ProtectedTermsListTest.java\n\n* Migrate from JUnit 4 to JUnit 5\n\n*MoveFilesCleanupTest.java\n\n* Migrate from JUnit 4 to JUnit 5\n\n*ImporterTest.java\n\n* Migrate from JUnit 4 to JUnit 5\n\n    *ExporterTest.java\n\n* Try to trigger the Travis CI build.\n\n* Try to trigger the Travis CI build.\n\n* Migrate from JUnit 4 to JUnit 5\n\n* Try to migrate from JUnit 4 to JUnit 5\n    *BibTeXMLExporterTestFiles.java\n        *Test.  not finished\n\n* Roll back to earlier version.\n    *BibTeXMLExporterTestFiles.java\n    *CleanupWorkerTest.java\n\n* Migrate from JUnit 4 to JUnit 5\n    *ImportFormatReaderIntegrationTest.java\n\n* Migrate from JUnit 4 to JUnit 5\n    *MimeTypeDetectorTest.java\n\n* failed to modify CleanupWorkerTest\n\n* failed to modify cleanupWorkTest\n\n* change cleanupWorkerTest to initial\n\n* ***DatabaseTest***\nMigrate from JUnit 4 to JUnit 5\n    *DBMSProcessorTest.java\n        *Wait for the Travis CI\n\n* ***DatabaseTest***\nMigrate from JUnit 4 to JUnit 5\n    *DBMSProcessorTest.java\n        *Wait for the Travis CI\n\n* Migrate from JUnit 4 to JUnit 5\n    *BibTeXMLExporterTestFiles.java\n    *MSBibExportFormatTestFiles.java\n    *All the GUI tests\n\n* Migrate from JUnit 4 to JUnit 5\n    *CleanupWorkerTest.java\n\n    *It seems that worker doesn't work in cleanupRenamePdfRenamesRelativeFile() and cleanupRelativePathsConvertAbsoluteToRelativePath()\n\n* Migrate JUnit 4 to JUnit 5.\n    *AuthorListParameterTest.java\n        -Follow up tp the newest.\n\n* Migrate JUnit 4 to JUnit 5.\n    *CleanupWorkerTest.java\n        -Delete my sout.\n\n* Migrate JUnit 4 to JUnit 5.\n    *EntryTypesTest.java\n        -Just some method name changes.\n\n* Fix part of CleanupWorkerTest.\n    -cleanupRelativePathsConvertAbsoluteToRelativePath() test passed.\n    -The cleanupRenamePdfRenamesRelativeFile() test still failed.\n\n* Migrate and sync.\n    *CiteKeyBasedFileFinderTest.java\n\n* Migrate.\n    *FileUtilTest.java\nPartly migrate.\n    *ModsExportFormatTestFiles.java\n\n* Fix CleanupWorkerTest.java\n\n* Fix .travis.yml\n\n* Remove unnecessary @Rule.\n    *IntegrityCheckTest.java\n\n* AuxParserTest.java\n\n* BibtexParserTest.java\n\n* EntryComparatorTest.java\n\n* Migrate JUnit 4 to JUnit 5 -------by 1160300229\n\n* Migrate. Some tasks by my team members.\n    *LinkedFileViewModelTest.java\n    *RecursiveTreeItemTest.java\n    *UndoTest.java\n    *EntryComparatorTest.java\n    *MakeLabelWithDatabaseTest.java\n    *MakeLabelWithoutDatabaseTest.java\n    *CleanupUrlFormatterTest.java\n    *BibtexParserTest.java\n    *MedlinePlainImporterTest.java\n    *SilverPlatterImporterTest.java\n    *EntryLinkCheckerTest.java\n    *LocalizationKeyTest.java\n    *JabRefPreferencesTest.java\n\n* Fix 1160300302's error.\n\n* Remove unnecessary \"public\".\n    *AuxParserTest.java\n\n* fix architecture test by removing check for public make some classes default visibility level\n\n* Fix \"cannot find files\" problem in JUnit 4.\n\n* Migrate to JUnit 5.\n    *BibTeXMLExporterTestFiles.java\n    *ModsExportFormatTestFiles.java\n    *MSBibExportFormatTestFiles.java\n\n* Change the slash direction.\n    *BibTeXMLExporterTestFiles.java\n    *ModsExportFormatTestFiles.java\n    *MSBibExportFormatTestFiles.java\n\n* fix resolving of paths in msbibexporterpath update junit and correct resource dirs in gradle\n\n* Fix the path issue in\n    *BibTeXMLExporterTestFiles.java\n    *ModsExportFormatTestFiles.java\n\n* Disable the failing exporter tests and change the build.gradle\n\n* Fix the parent folder issue by make every path to their child once.\n    -You can see in the code. :)\n\n* Fix some minor issues.\n    -Use the NIO methods in MoveFilesCleanupTest.java\n\n    -Use toAbsolutePath() method in RenamePdfCleanupTest.java\n\n    -Rename \"tempFilename\" to \"tempFilePath\" in BibTeXMLExporterTestFiles.java\n\n* include main/java in resources as well convert legalcy file methods to nio\n","date":"2018-08-16 15:17:32","modifiedFileCount":"59","status":"M","submitter":"Yichen Sun"},{"authorTime":"2018-08-16 15:17:32","codes":[{"authorDate":"2019-08-02 15:20:10","commitOrder":3,"curCode":"    void testUpdateEntry(DBMSType dbmsType, DBMSConnection dbmsConnection, DBMSProcessor dbmsProcessor) throws OfflineLockException, SQLException {\n        dbmsProcessor.setupSharedDatabase();\n        BibEntry expectedEntry = getBibEntryExample();\n\n        dbmsProcessor.insertEntry(expectedEntry);\n\n        expectedEntry.setType(StandardEntryType.Book);\n        expectedEntry.setField(StandardField.AUTHOR, \"Michael J and Hutchings\");\n        expectedEntry.setField(new UnknownField(\"customField\"), \"custom value\");\n        expectedEntry.clearField(StandardField.BOOKTITLE);\n\n        dbmsProcessor.updateEntry(expectedEntry);\n\n        Optional<BibEntry> actualEntryOptional = dbmsProcessor\n                .getSharedEntry(expectedEntry.getSharedBibEntryData().getSharedID());\n\n        assertEquals(expectedEntry, actualEntryOptional.get());\n    }\n","date":"2019-08-02 15:20:10","endLine":118,"groupId":"12042","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testUpdateEntry","params":"(DBMSTypedbmsType@DBMSConnectiondbmsConnection@DBMSProcessordbmsProcessor)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/7b/291419b389d17422497d4d64b98a2b78e47179.src","preCode":"    void testUpdateEntry(DBMSType dbmsType, DBMSConnection dbmsConnection, DBMSProcessor dbmsProcessor) throws OfflineLockException, SQLException {\n        dbmsProcessor.setupSharedDatabase();\n        BibEntry expectedEntry = getBibEntryExample();\n\n        dbmsProcessor.insertEntry(expectedEntry);\n\n        expectedEntry.setType(\"book\");\n        expectedEntry.setField(\"author\", \"Michael J and Hutchings\");\n        expectedEntry.setField(\"customField\", \"custom value\");\n        expectedEntry.clearField(\"booktitle\");\n\n        dbmsProcessor.updateEntry(expectedEntry);\n\n        Optional<BibEntry> actualEntryOptional = dbmsProcessor\n                .getSharedEntry(expectedEntry.getSharedBibEntryData().getSharedID());\n\n        assertEquals(expectedEntry, actualEntryOptional.get());\n    }\n","realPath":"src/test/java/org/jabref/logic/shared/DBMSProcessorTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":101,"status":"M"},{"authorDate":"2018-08-16 15:17:32","commitOrder":3,"curCode":"    void testUpdateEqualEntry(DBMSType dbmsType, DBMSConnection dbmsConnection, DBMSProcessor dbmsProcessor) throws OfflineLockException, SQLException {\n        dbmsProcessor.setupSharedDatabase();\n        BibEntry expectedBibEntry = getBibEntryExample();\n\n        dbmsProcessor.insertEntry(expectedBibEntry);\n        \r\n        expectedBibEntry.getSharedBibEntryData().setVersion(0);\n        dbmsProcessor.updateEntry(expectedBibEntry);\n\n        Optional<BibEntry> actualBibEntryOptional = dbmsProcessor\n                .getSharedEntry(expectedBibEntry.getSharedBibEntryData().getSharedID());\n\n        assertEquals(expectedBibEntry, actualBibEntryOptional.get());\n    }\n","date":"2018-08-16 15:17:32","endLine":145,"groupId":"12042","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testUpdateEqualEntry","params":"(DBMSTypedbmsType@DBMSConnectiondbmsConnection@DBMSProcessordbmsProcessor)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/c0/99ace2c7ce9fa121aadbc8b47b1aaa1957f740.src","preCode":"    void testUpdateEqualEntry(DBMSType dbmsType, DBMSConnection dbmsConnection, DBMSProcessor dbmsProcessor) throws OfflineLockException, SQLException {\n        dbmsProcessor.setupSharedDatabase();\n        BibEntry expectedBibEntry = getBibEntryExample();\n\n        dbmsProcessor.insertEntry(expectedBibEntry);\n        \r\n        expectedBibEntry.getSharedBibEntryData().setVersion(0);\n        dbmsProcessor.updateEntry(expectedBibEntry);\n\n        Optional<BibEntry> actualBibEntryOptional = dbmsProcessor\n                .getSharedEntry(expectedBibEntry.getSharedBibEntryData().getSharedID());\n\n        assertEquals(expectedBibEntry, actualBibEntryOptional.get());\n    }\n","realPath":"src/test/java/org/jabref/logic/shared/DBMSProcessorTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":132,"status":"N"}],"commitId":"4b39b78e4afcd6c36b385f5c46f1d9a4eac2e29b","commitMessage":"@@@Move to extended enums for fields and entry types (#5148)\n\n* Introduce interface for fields\n\n* Continue using fields interface instead of strings\n\n* Introduce OrFields class\n\n* Move FieldProperty\n\n* Convert entry types to extended enum\n\n* Start fixing build\n\n* Fix build\n\n* Start fixing tests\n\n* Everything compiles again\n\n* Make model tests pass\n\n* Fix most tests\n\n* Fix build\n\n* Fix a few more tests\n\n* Fix a few more tests\n\n* Fix a few more tests\n\n* Fix a few more tests\n\n* Fix checkstyle issues\n\n* Fix more tests\n\n* Fix more tests\n\n* Disable test that fails on CI\n\n* Disable test that fails on CI\n","date":"2019-08-02 15:20:10","modifiedFileCount":"439","status":"M","submitter":"Tobias Diez"},{"authorTime":"2019-11-12 06:47:34","codes":[{"authorDate":"2019-11-12 06:47:34","commitOrder":4,"curCode":"    void testUpdateEntry(DBMSType dbmsType, DBMSConnection dbmsConnection, DBMSProcessor dbmsProcessor) throws Exception {\n        dbmsProcessor.setupSharedDatabase();\n        BibEntry expectedEntry = getBibEntryExample();\n        dbmsProcessor.insertEntry(expectedEntry);\n\n        expectedEntry.setType(StandardEntryType.Book);\n        expectedEntry.setField(StandardField.AUTHOR, \"Michael J and Hutchings\");\n        expectedEntry.setField(new UnknownField(\"customField\"), \"custom value\");\n        expectedEntry.clearField(StandardField.BOOKTITLE);\n        dbmsProcessor.updateEntry(expectedEntry);\n\n        Optional<BibEntry> actualEntry = dbmsProcessor.getSharedEntry(expectedEntry.getSharedBibEntryData().getSharedID());\n        assertEquals(expectedEntry, actualEntry.get());\n\n        clear(dbmsConnection);\n    }\n","date":"2019-11-12 06:47:34","endLine":106,"groupId":"12042","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"testUpdateEntry","params":"(DBMSTypedbmsType@DBMSConnectiondbmsConnection@DBMSProcessordbmsProcessor)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/4a/59dfea7cb1724724e3d621a6be2b5f3a2e0199.src","preCode":"    void testUpdateEntry(DBMSType dbmsType, DBMSConnection dbmsConnection, DBMSProcessor dbmsProcessor) throws OfflineLockException, SQLException {\n        dbmsProcessor.setupSharedDatabase();\n        BibEntry expectedEntry = getBibEntryExample();\n\n        dbmsProcessor.insertEntry(expectedEntry);\n\n        expectedEntry.setType(StandardEntryType.Book);\n        expectedEntry.setField(StandardField.AUTHOR, \"Michael J and Hutchings\");\n        expectedEntry.setField(new UnknownField(\"customField\"), \"custom value\");\n        expectedEntry.clearField(StandardField.BOOKTITLE);\n\n        dbmsProcessor.updateEntry(expectedEntry);\n\n        Optional<BibEntry> actualEntryOptional = dbmsProcessor\n                .getSharedEntry(expectedEntry.getSharedBibEntryData().getSharedID());\n\n        assertEquals(expectedEntry, actualEntryOptional.get());\n    }\n","realPath":"src/test/java/org/jabref/logic/shared/DBMSProcessorTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":91,"status":"M"},{"authorDate":"2019-11-12 06:47:34","commitOrder":4,"curCode":"    void testUpdateEqualEntry(DBMSType dbmsType, DBMSConnection dbmsConnection, DBMSProcessor dbmsProcessor) throws OfflineLockException, SQLException {\n        dbmsProcessor.setupSharedDatabase();\n        BibEntry expectedBibEntry = getBibEntryExample();\n\n        dbmsProcessor.insertEntry(expectedBibEntry);\n        \r\n        expectedBibEntry.getSharedBibEntryData().setVersion(0);\n        dbmsProcessor.updateEntry(expectedBibEntry);\n\n        Optional<BibEntry> actualBibEntryOptional = dbmsProcessor\n                                                                 .getSharedEntry(expectedBibEntry.getSharedBibEntryData().getSharedID());\n\n        assertEquals(expectedBibEntry, actualBibEntryOptional.get());\n\n        clear(dbmsConnection);\n    }\n","date":"2019-11-12 06:47:34","endLine":163,"groupId":"12042","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"testUpdateEqualEntry","params":"(DBMSTypedbmsType@DBMSConnectiondbmsConnection@DBMSProcessordbmsProcessor)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/4a/59dfea7cb1724724e3d621a6be2b5f3a2e0199.src","preCode":"    void testUpdateEqualEntry(DBMSType dbmsType, DBMSConnection dbmsConnection, DBMSProcessor dbmsProcessor) throws OfflineLockException, SQLException {\n        dbmsProcessor.setupSharedDatabase();\n        BibEntry expectedBibEntry = getBibEntryExample();\n\n        dbmsProcessor.insertEntry(expectedBibEntry);\n        \r\n        expectedBibEntry.getSharedBibEntryData().setVersion(0);\n        dbmsProcessor.updateEntry(expectedBibEntry);\n\n        Optional<BibEntry> actualBibEntryOptional = dbmsProcessor\n                .getSharedEntry(expectedBibEntry.getSharedBibEntryData().getSharedID());\n\n        assertEquals(expectedBibEntry, actualBibEntryOptional.get());\n    }\n","realPath":"src/test/java/org/jabref/logic/shared/DBMSProcessorTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":148,"status":"M"}],"commitId":"04015b02100913ab6ac562548f48bea546323fc8","commitMessage":"@@@[WIP ] Convert remaining tests to junit 5 (#5394)\n\n* [WIP] Convert remaining tests to junit 5\n\nLet's see if that works\n\n* remove junit 4\n\n* temporaily add system.out.prinltn to test if all are run\n\n* fix gradle not executing tests correclty\n\n* fix gradle syntax error\n\n* add more logging\n\n* fix psql driver name and url\n\n* Manually call setup and clear in each test\n\n* fix typo and call clear\n\n* fix unmodifable error\n\n* fix field map error\n\n* fix id\n\n* SetID does not store value as internal id field\n\n* add some comments for further debugging hints\n\ncall clear in setup to ensure empty tables and no leftovers from failures\n\n* fix copy paste error\n\n* Cleanup code\n\n* Don't allow codecov to fail\n\n* Temporarily allow failure of database tests\n\n* Readd database test to codecov\n\n* Try to ignore failures the other way\n\n* Or maybe this way?\n\n* Yet another try\n\n* Well...maybe now\n\nCo-Authored-By: Tobias Diez <tobiasdiez@gmx.de>\n","date":"2019-11-12 06:47:34","modifiedFileCount":"7","status":"M","submitter":"Christoph"},{"authorTime":"2019-11-29 23:58:12","codes":[{"authorDate":"2019-11-29 23:58:12","commitOrder":5,"curCode":"    void testUpdateEntry() throws Exception {\n        BibEntry expectedEntry = getBibEntryExample();\n        dbmsProcessor.insertEntry(expectedEntry);\n\n        expectedEntry.setType(StandardEntryType.Book);\n        expectedEntry.setField(StandardField.AUTHOR, \"Michael J and Hutchings\");\n        expectedEntry.setField(new UnknownField(\"customField\"), \"custom value\");\n        expectedEntry.clearField(StandardField.BOOKTITLE);\n        dbmsProcessor.updateEntry(expectedEntry);\n\n        Optional<BibEntry> actualEntry = dbmsProcessor.getSharedEntry(expectedEntry.getSharedBibEntryData().getSharedID());\n        assertEquals(Optional.of(expectedEntry), actualEntry);\n    }\n","date":"2019-11-29 23:58:12","endLine":111,"groupId":"10366","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"testUpdateEntry","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/1a/ae2ccb1dcf55ab6b3f4019ff3bd8a48a8d9bbd.src","preCode":"    void testUpdateEntry(DBMSType dbmsType, DBMSConnection dbmsConnection, DBMSProcessor dbmsProcessor) throws Exception {\n        dbmsProcessor.setupSharedDatabase();\n        BibEntry expectedEntry = getBibEntryExample();\n        dbmsProcessor.insertEntry(expectedEntry);\n\n        expectedEntry.setType(StandardEntryType.Book);\n        expectedEntry.setField(StandardField.AUTHOR, \"Michael J and Hutchings\");\n        expectedEntry.setField(new UnknownField(\"customField\"), \"custom value\");\n        expectedEntry.clearField(StandardField.BOOKTITLE);\n        dbmsProcessor.updateEntry(expectedEntry);\n\n        Optional<BibEntry> actualEntry = dbmsProcessor.getSharedEntry(expectedEntry.getSharedBibEntryData().getSharedID());\n        assertEquals(expectedEntry, actualEntry.get());\n\n        clear(dbmsConnection);\n    }\n","realPath":"src/test/java/org/jabref/logic/shared/DBMSProcessorTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":99,"status":"M"},{"authorDate":"2019-11-29 23:58:12","commitOrder":5,"curCode":"    void testUpdateEqualEntry() throws OfflineLockException, SQLException {\n        BibEntry expectedBibEntry = getBibEntryExample();\n\n        dbmsProcessor.insertEntry(expectedBibEntry);\n        \r\n        expectedBibEntry.getSharedBibEntryData().setVersion(0);\n        dbmsProcessor.updateEntry(expectedBibEntry);\n\n        Optional<BibEntry> actualBibEntryOptional = dbmsProcessor\n                .getSharedEntry(expectedBibEntry.getSharedBibEntryData().getSharedID());\n\n        assertEquals(Optional.of(expectedBibEntry), actualBibEntryOptional);\n    }\n","date":"2019-11-29 23:58:12","endLine":154,"groupId":"10366","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"testUpdateEqualEntry","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/1a/ae2ccb1dcf55ab6b3f4019ff3bd8a48a8d9bbd.src","preCode":"    void testUpdateEqualEntry(DBMSType dbmsType, DBMSConnection dbmsConnection, DBMSProcessor dbmsProcessor) throws OfflineLockException, SQLException {\n        dbmsProcessor.setupSharedDatabase();\n        BibEntry expectedBibEntry = getBibEntryExample();\n\n        dbmsProcessor.insertEntry(expectedBibEntry);\n        \r\n        expectedBibEntry.getSharedBibEntryData().setVersion(0);\n        dbmsProcessor.updateEntry(expectedBibEntry);\n\n        Optional<BibEntry> actualBibEntryOptional = dbmsProcessor\n                                                                 .getSharedEntry(expectedBibEntry.getSharedBibEntryData().getSharedID());\n\n        assertEquals(expectedBibEntry, actualBibEntryOptional.get());\n\n        clear(dbmsConnection);\n    }\n","realPath":"src/test/java/org/jabref/logic/shared/DBMSProcessorTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":142,"status":"M"}],"commitId":"ea5e632e4e1819673a01bca255304e83924b3dd0","commitMessage":"@@@Fix database tests and enable running using GitHub workflows (#5676)\n\n- fix behavior when no entries have to be inserted during a synch\n- fix database tests\n- have dbms test test only one database\n- DBMS to test is passed via environment variable \"DBMS\".  defaulting to PostgreSQL\n- add shared information on Canonical BibTeX entry\n- some code improvement\n- have checkstyle running on github workflows (not on Travis)\n- One big workflow for tests\n- Make allowPublicKeyRetrieval a property of DBMSConnectionProperties (and create a builder for the properties)\n- Add check-outdated-dependencies as workflow\n- Add formatting of test results (scripts/after-failure.sh)\n- Have fetcher tests and GUI tests run after the database tests (because they currently fail)\n- Update gradle from 6.0.0 to 6.0.1\n","date":"2019-11-29 23:58:12","modifiedFileCount":"16","status":"M","submitter":"Oliver Kopp"}]
