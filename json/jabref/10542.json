[{"authorTime":"2018-01-18 23:38:36","codes":[{"authorDate":"2018-01-18 23:38:36","commitOrder":1,"curCode":"    public void cleanupWithYearAlreadyPresentDoesNothing() {\n        BibEntry entry = new BibEntry();\n        entry.setField(\"year\", \"2011\");\n        entry.setField(\"date\", \"2012\");\n\n        worker.cleanup(entry);\n\n        Assert.assertEquals(Optional.of(\"2011\"), entry.getField(FieldName.YEAR));\n        Assert.assertEquals(Optional.of(\"2012\"), entry.getField(FieldName.DATE));\n    }\n","date":"2018-01-18 23:38:36","endLine":42,"groupId":"3336","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"cleanupWithYearAlreadyPresentDoesNothing","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/5b/5de9d37b4a9abb6367bfbbc0d11cd396c67c46.src","preCode":"    public void cleanupWithYearAlreadyPresentDoesNothing() {\n        BibEntry entry = new BibEntry();\n        entry.setField(\"year\", \"2011\");\n        entry.setField(\"date\", \"2012\");\n\n        worker.cleanup(entry);\n\n        Assert.assertEquals(Optional.of(\"2011\"), entry.getField(FieldName.YEAR));\n        Assert.assertEquals(Optional.of(\"2012\"), entry.getField(FieldName.DATE));\n    }\n","realPath":"src/test/java/org/jabref/logic/cleanup/ConvertToBibtexCleanupTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":33,"status":"B"},{"authorDate":"2018-01-18 23:38:36","commitOrder":1,"curCode":"    public void cleanupMovesJournaltitleToJournal() {\n        BibEntry entry = new BibEntry().withField(\"journaltitle\", \"Best of JabRef\");\n\n        worker.cleanup(entry);\n\n        Assert.assertEquals(Optional.empty(), entry.getField(FieldName.JOURNALTITLE));\n        Assert.assertEquals(Optional.of(\"Best of JabRef\"), entry.getField(FieldName.JOURNAL));\n    }\n","date":"2018-01-18 23:38:36","endLine":52,"groupId":"4521","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"cleanupMovesJournaltitleToJournal","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/5b/5de9d37b4a9abb6367bfbbc0d11cd396c67c46.src","preCode":"    public void cleanupMovesJournaltitleToJournal() {\n        BibEntry entry = new BibEntry().withField(\"journaltitle\", \"Best of JabRef\");\n\n        worker.cleanup(entry);\n\n        Assert.assertEquals(Optional.empty(), entry.getField(FieldName.JOURNALTITLE));\n        Assert.assertEquals(Optional.of(\"Best of JabRef\"), entry.getField(FieldName.JOURNAL));\n    }\n","realPath":"src/test/java/org/jabref/logic/cleanup/ConvertToBibtexCleanupTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":45,"status":"B"}],"commitId":"beb6ee06e4137ab2c864a80bf87c5ffd75188a0d","commitMessage":"@@@[WIP] Add \"Convert to BibTeX format\" cleanup (#3541)\n\n* Add \"Convert to BibTeX format\" cleanup\n\n* Add round-trip tests\n\n* Fix tests\n\n* Make conversations modal\n","date":"2018-01-18 23:38:36","modifiedFileCount":"9","status":"B","submitter":"Tobias Diez"},{"authorTime":"2018-02-12 00:05:54","codes":[{"authorDate":"2018-02-12 00:05:54","commitOrder":2,"curCode":"    public void cleanupWithYearAlreadyPresentDoesNothing() {\n        BibEntry entry = new BibEntry();\n        entry.setField(\"year\", \"2011\");\n        entry.setField(\"date\", \"2012\");\n\n        worker.cleanup(entry);\n\n        assertEquals(Optional.of(\"2011\"), entry.getField(FieldName.YEAR));\n        assertEquals(Optional.of(\"2012\"), entry.getField(FieldName.DATE));\n    }\n","date":"2018-02-12 00:05:54","endLine":43,"groupId":"3336","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"cleanupWithYearAlreadyPresentDoesNothing","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/df/46c7da88492199b02dfed7b473e4d1f27e92ec.src","preCode":"    public void cleanupWithYearAlreadyPresentDoesNothing() {\n        BibEntry entry = new BibEntry();\n        entry.setField(\"year\", \"2011\");\n        entry.setField(\"date\", \"2012\");\n\n        worker.cleanup(entry);\n\n        Assert.assertEquals(Optional.of(\"2011\"), entry.getField(FieldName.YEAR));\n        Assert.assertEquals(Optional.of(\"2012\"), entry.getField(FieldName.DATE));\n    }\n","realPath":"src/test/java/org/jabref/logic/cleanup/ConvertToBibtexCleanupTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":34,"status":"M"},{"authorDate":"2018-02-12 00:05:54","commitOrder":2,"curCode":"    public void cleanupMovesJournaltitleToJournal() {\n        BibEntry entry = new BibEntry().withField(\"journaltitle\", \"Best of JabRef\");\n\n        worker.cleanup(entry);\n\n        assertEquals(Optional.empty(), entry.getField(FieldName.JOURNALTITLE));\n        assertEquals(Optional.of(\"Best of JabRef\"), entry.getField(FieldName.JOURNAL));\n    }\n","date":"2018-02-12 00:05:54","endLine":53,"groupId":"9629","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"cleanupMovesJournaltitleToJournal","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/df/46c7da88492199b02dfed7b473e4d1f27e92ec.src","preCode":"    public void cleanupMovesJournaltitleToJournal() {\n        BibEntry entry = new BibEntry().withField(\"journaltitle\", \"Best of JabRef\");\n\n        worker.cleanup(entry);\n\n        Assert.assertEquals(Optional.empty(), entry.getField(FieldName.JOURNALTITLE));\n        Assert.assertEquals(Optional.of(\"Best of JabRef\"), entry.getField(FieldName.JOURNAL));\n    }\n","realPath":"src/test/java/org/jabref/logic/cleanup/ConvertToBibtexCleanupTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":46,"status":"M"}],"commitId":"1cef92447c4ae65ebe28d94cf9acf708861bb67b","commitMessage":"@@@Merge pull request #3711 from JabRef/junit5\n\nmigrate majority of tests to junit5","date":"2018-02-12 00:05:54","modifiedFileCount":"244","status":"M","submitter":"Oliver Kopp"},{"authorTime":"2019-08-02 15:20:10","codes":[{"authorDate":"2019-08-02 15:20:10","commitOrder":3,"curCode":"    public void cleanupWithYearAlreadyPresentDoesNothing() {\n        BibEntry entry = new BibEntry();\n        entry.setField(StandardField.YEAR, \"2011\");\n        entry.setField(StandardField.DATE, \"2012\");\n\n        worker.cleanup(entry);\n\n        assertEquals(Optional.of(\"2011\"), entry.getField(StandardField.YEAR));\n        assertEquals(Optional.of(\"2012\"), entry.getField(StandardField.DATE));\n    }\n","date":"2019-08-02 15:20:10","endLine":43,"groupId":"10542","id":5,"instanceNumber":1,"isCurCommit":1,"methodName":"cleanupWithYearAlreadyPresentDoesNothing","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/38/259aaef2f6c9ef08c3140f9bf779efa6788788.src","preCode":"    public void cleanupWithYearAlreadyPresentDoesNothing() {\n        BibEntry entry = new BibEntry();\n        entry.setField(\"year\", \"2011\");\n        entry.setField(\"date\", \"2012\");\n\n        worker.cleanup(entry);\n\n        assertEquals(Optional.of(\"2011\"), entry.getField(FieldName.YEAR));\n        assertEquals(Optional.of(\"2012\"), entry.getField(FieldName.DATE));\n    }\n","realPath":"src/test/java/org/jabref/logic/cleanup/ConvertToBibtexCleanupTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":34,"status":"M"},{"authorDate":"2019-08-02 15:20:10","commitOrder":3,"curCode":"    public void cleanupMovesJournaltitleToJournal() {\n        BibEntry entry = new BibEntry().withField(StandardField.JOURNALTITLE, \"Best of JabRef\");\n\n        worker.cleanup(entry);\n\n        assertEquals(Optional.empty(), entry.getField(StandardField.JOURNALTITLE));\n        assertEquals(Optional.of(\"Best of JabRef\"), entry.getField(StandardField.JOURNAL));\n    }\n","date":"2019-08-02 15:20:10","endLine":53,"groupId":"10542","id":6,"instanceNumber":2,"isCurCommit":1,"methodName":"cleanupMovesJournaltitleToJournal","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/38/259aaef2f6c9ef08c3140f9bf779efa6788788.src","preCode":"    public void cleanupMovesJournaltitleToJournal() {\n        BibEntry entry = new BibEntry().withField(\"journaltitle\", \"Best of JabRef\");\n\n        worker.cleanup(entry);\n\n        assertEquals(Optional.empty(), entry.getField(FieldName.JOURNALTITLE));\n        assertEquals(Optional.of(\"Best of JabRef\"), entry.getField(FieldName.JOURNAL));\n    }\n","realPath":"src/test/java/org/jabref/logic/cleanup/ConvertToBibtexCleanupTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":46,"status":"M"}],"commitId":"4b39b78e4afcd6c36b385f5c46f1d9a4eac2e29b","commitMessage":"@@@Move to extended enums for fields and entry types (#5148)\n\n* Introduce interface for fields\n\n* Continue using fields interface instead of strings\n\n* Introduce OrFields class\n\n* Move FieldProperty\n\n* Convert entry types to extended enum\n\n* Start fixing build\n\n* Fix build\n\n* Start fixing tests\n\n* Everything compiles again\n\n* Make model tests pass\n\n* Fix most tests\n\n* Fix build\n\n* Fix a few more tests\n\n* Fix a few more tests\n\n* Fix a few more tests\n\n* Fix a few more tests\n\n* Fix checkstyle issues\n\n* Fix more tests\n\n* Fix more tests\n\n* Disable test that fails on CI\n\n* Disable test that fails on CI\n","date":"2019-08-02 15:20:10","modifiedFileCount":"439","status":"M","submitter":"Tobias Diez"}]
