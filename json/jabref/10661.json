[{"authorTime":"2018-08-16 15:17:32","codes":[{"authorDate":"2018-08-16 15:17:32","commitOrder":1,"curCode":"    public static Stream<String> fileNames() throws IOException, URISyntaxException {\n        resourceDir = Paths.get(MSBibExportFormatTestFiles.class.getResource(\"BibTeXMLExporterTestArticle.bib\").toURI()).getParent();\n\r\n\n        try (Stream<Path> stream = Files.list(resourceDir)) {\n            return stream.map(n -> n.getFileName().toString()).filter(n -> n.endsWith(\".bib\"))\n                    .filter(n -> n.startsWith(\"BibTeXML\")).collect(Collectors.toList()).stream();\n        }\n    }\n","date":"2018-08-16 15:17:32","endLine":54,"groupId":"7455","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"fileNames","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/a6/83dd2bff56c6722bc2a5592c379e7d1d70de03.src","preCode":"    public static Stream<String> fileNames() throws IOException, URISyntaxException {\n        resourceDir = Paths.get(MSBibExportFormatTestFiles.class.getResource(\"BibTeXMLExporterTestArticle.bib\").toURI()).getParent();\n\r\n\n        try (Stream<Path> stream = Files.list(resourceDir)) {\n            return stream.map(n -> n.getFileName().toString()).filter(n -> n.endsWith(\".bib\"))\n                    .filter(n -> n.startsWith(\"BibTeXML\")).collect(Collectors.toList()).stream();\n        }\n    }\n","realPath":"src/test/java/org/jabref/logic/exporter/BibTeXMLExporterTestFiles.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":46,"status":"B"},{"authorDate":"2018-08-16 15:17:32","commitOrder":1,"curCode":"    static Stream<String> fileNames() throws IOException, URISyntaxException {\n        \r\n        resourceDir = Paths.get(MSBibExportFormatTestFiles.class.getResource(\"MsBibExportFormatTest1.bib\").toURI()).getParent();\n        System.out.println(resourceDir);\n        try (Stream<Path> stream = Files.list(resourceDir)) {\n            return stream.map(n -> n.getFileName().toString()).filter(n -> n.endsWith(\".bib\"))\n                         .filter(n -> n.startsWith(\"MsBib\")).collect(Collectors.toList()).stream();\n        }\n    }\n","date":"2018-08-16 15:17:32","endLine":55,"groupId":"7455","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"fileNames","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/f6/7757629824f1f4868b69c03fd323037f42b983.src","preCode":"    static Stream<String> fileNames() throws IOException, URISyntaxException {\n        \r\n        resourceDir = Paths.get(MSBibExportFormatTestFiles.class.getResource(\"MsBibExportFormatTest1.bib\").toURI()).getParent();\n        System.out.println(resourceDir);\n        try (Stream<Path> stream = Files.list(resourceDir)) {\n            return stream.map(n -> n.getFileName().toString()).filter(n -> n.endsWith(\".bib\"))\n                         .filter(n -> n.startsWith(\"MsBib\")).collect(Collectors.toList()).stream();\n        }\n    }\n","realPath":"src/test/java/org/jabref/logic/exporter/MSBibExportFormatTestFiles.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":47,"status":"B"}],"commitId":"a880addc0b9a45ad4461cc46ed261ea7df9c812a","commitMessage":"@@@Fix for issue 3959: migrate all tests to JUnit 5 (#4260)\n\n* Update migrate from JUnit 4 to JUnit 5\n\n* Update migrate from JUnit 4 to JUnit 5\n\n* Trying to change git accounts on my laptop\n\n* Trying to change git accounts on my laptop\n\n* Trying to change git accounts on my laptop\n\n* Using static assert methods.\n\n* Migrate from JUnit 4 to JUnit 5\n\n*AuthorListParameterTest.java\n\n* Migrate from JUnit 4 to JUnit 5\n\n*XmpUtilWriterTest.java\n\n* Migrate from JUnit 4 to JUnit 5\n\n*XmpUtilReaderTest.java\n\n* Migrate from JUnit 4 to JUnit 5\n\n*SearchQueryHighlightObservableTest.java\n\n    -did not use MockitoExtension.class as its official version has not been released yet.\n\n* Migrate from JUnit 4 to JUnit 5\n\n*CitationEntryTest.java\n\n* Migrate from JUnit 4 to JUnit 5\n\n*RTFCharsTest.java\n\n* Migrate from JUnit 4 to JUnit 5\n\n*ProtectedTermsLoaderTest.java\n\n    -When running tests.  outputs in command line are different. I don't know if this change is correct.\n\n* Trying to change to a new branch.\n\n* commit_test\n\n* delete my meaningless txt\n\n* Migrate from JUnit 4 to JUnit 5\n\n*AuthorAndToSemicolonReplacerTest.java\n\n* Migrate from JUnit 4 to JUnit 5\n\n*FileDialogConfigurationTest.java\n\n* Migrate from JUnit 4 to JUnit 5\n\n*IntegrityCheckTest.java\n\n* Migrate from JUnit 4 to JUnit 5\n\n*ModsExportFormatTest.java\n\n* Migrate from JUnit 4 to JUnit 5\n\n*AutoSetFileLinksUtilTest.java\n\n* Migrate from JUnit 4 to JUnit 5\n\n*MsBibExportFormatTest.java\n\n* Migrate from JUnit 4 to JUnit 5\n\n*CsvExportFormatTest.java\n\n* Migrate from JUnit 4 to JUnit 5\n\n*HtmlExportFormatTest.java\n\n* Migrate from JUnit 4 to JUnit 5\n\n*HtmlExportFormatTest.java\n\n* Migrate from JUnit 4 to JUnit 5\n\n*RenamePdfCleanupTest.java\n\n* Migrate from JUnit 4 to JUnit 5\n\n*ProtectedTermsListTest.java\n\n* Migrate from JUnit 4 to JUnit 5\n\n*MoveFilesCleanupTest.java\n\n* Migrate from JUnit 4 to JUnit 5\n\n*ImporterTest.java\n\n* Migrate from JUnit 4 to JUnit 5\n\n    *ExporterTest.java\n\n* Try to trigger the Travis CI build.\n\n* Try to trigger the Travis CI build.\n\n* Migrate from JUnit 4 to JUnit 5\n\n* Try to migrate from JUnit 4 to JUnit 5\n    *BibTeXMLExporterTestFiles.java\n        *Test.  not finished\n\n* Roll back to earlier version.\n    *BibTeXMLExporterTestFiles.java\n    *CleanupWorkerTest.java\n\n* Migrate from JUnit 4 to JUnit 5\n    *ImportFormatReaderIntegrationTest.java\n\n* Migrate from JUnit 4 to JUnit 5\n    *MimeTypeDetectorTest.java\n\n* failed to modify CleanupWorkerTest\n\n* failed to modify cleanupWorkTest\n\n* change cleanupWorkerTest to initial\n\n* ***DatabaseTest***\nMigrate from JUnit 4 to JUnit 5\n    *DBMSProcessorTest.java\n        *Wait for the Travis CI\n\n* ***DatabaseTest***\nMigrate from JUnit 4 to JUnit 5\n    *DBMSProcessorTest.java\n        *Wait for the Travis CI\n\n* Migrate from JUnit 4 to JUnit 5\n    *BibTeXMLExporterTestFiles.java\n    *MSBibExportFormatTestFiles.java\n    *All the GUI tests\n\n* Migrate from JUnit 4 to JUnit 5\n    *CleanupWorkerTest.java\n\n    *It seems that worker doesn't work in cleanupRenamePdfRenamesRelativeFile() and cleanupRelativePathsConvertAbsoluteToRelativePath()\n\n* Migrate JUnit 4 to JUnit 5.\n    *AuthorListParameterTest.java\n        -Follow up tp the newest.\n\n* Migrate JUnit 4 to JUnit 5.\n    *CleanupWorkerTest.java\n        -Delete my sout.\n\n* Migrate JUnit 4 to JUnit 5.\n    *EntryTypesTest.java\n        -Just some method name changes.\n\n* Fix part of CleanupWorkerTest.\n    -cleanupRelativePathsConvertAbsoluteToRelativePath() test passed.\n    -The cleanupRenamePdfRenamesRelativeFile() test still failed.\n\n* Migrate and sync.\n    *CiteKeyBasedFileFinderTest.java\n\n* Migrate.\n    *FileUtilTest.java\nPartly migrate.\n    *ModsExportFormatTestFiles.java\n\n* Fix CleanupWorkerTest.java\n\n* Fix .travis.yml\n\n* Remove unnecessary @Rule.\n    *IntegrityCheckTest.java\n\n* AuxParserTest.java\n\n* BibtexParserTest.java\n\n* EntryComparatorTest.java\n\n* Migrate JUnit 4 to JUnit 5 -------by 1160300229\n\n* Migrate. Some tasks by my team members.\n    *LinkedFileViewModelTest.java\n    *RecursiveTreeItemTest.java\n    *UndoTest.java\n    *EntryComparatorTest.java\n    *MakeLabelWithDatabaseTest.java\n    *MakeLabelWithoutDatabaseTest.java\n    *CleanupUrlFormatterTest.java\n    *BibtexParserTest.java\n    *MedlinePlainImporterTest.java\n    *SilverPlatterImporterTest.java\n    *EntryLinkCheckerTest.java\n    *LocalizationKeyTest.java\n    *JabRefPreferencesTest.java\n\n* Fix 1160300302's error.\n\n* Remove unnecessary \"public\".\n    *AuxParserTest.java\n\n* fix architecture test by removing check for public make some classes default visibility level\n\n* Fix \"cannot find files\" problem in JUnit 4.\n\n* Migrate to JUnit 5.\n    *BibTeXMLExporterTestFiles.java\n    *ModsExportFormatTestFiles.java\n    *MSBibExportFormatTestFiles.java\n\n* Change the slash direction.\n    *BibTeXMLExporterTestFiles.java\n    *ModsExportFormatTestFiles.java\n    *MSBibExportFormatTestFiles.java\n\n* fix resolving of paths in msbibexporterpath update junit and correct resource dirs in gradle\n\n* Fix the path issue in\n    *BibTeXMLExporterTestFiles.java\n    *ModsExportFormatTestFiles.java\n\n* Disable the failing exporter tests and change the build.gradle\n\n* Fix the parent folder issue by make every path to their child once.\n    -You can see in the code. :)\n\n* Fix some minor issues.\n    -Use the NIO methods in MoveFilesCleanupTest.java\n\n    -Use toAbsolutePath() method in RenamePdfCleanupTest.java\n\n    -Rename \"tempFilename\" to \"tempFilePath\" in BibTeXMLExporterTestFiles.java\n\n* include main/java in resources as well convert legalcy file methods to nio\n","date":"2018-08-16 15:17:32","modifiedFileCount":"59","status":"B","submitter":"Yichen Sun"},{"authorTime":"2019-08-25 23:26:12","codes":[{"authorDate":"2018-08-16 15:17:32","commitOrder":2,"curCode":"    public static Stream<String> fileNames() throws IOException, URISyntaxException {\n        resourceDir = Paths.get(MSBibExportFormatTestFiles.class.getResource(\"BibTeXMLExporterTestArticle.bib\").toURI()).getParent();\n\r\n\n        try (Stream<Path> stream = Files.list(resourceDir)) {\n            return stream.map(n -> n.getFileName().toString()).filter(n -> n.endsWith(\".bib\"))\n                    .filter(n -> n.startsWith(\"BibTeXML\")).collect(Collectors.toList()).stream();\n        }\n    }\n","date":"2018-08-16 15:17:32","endLine":54,"groupId":"7455","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"fileNames","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/a6/83dd2bff56c6722bc2a5592c379e7d1d70de03.src","preCode":"    public static Stream<String> fileNames() throws IOException, URISyntaxException {\n        resourceDir = Paths.get(MSBibExportFormatTestFiles.class.getResource(\"BibTeXMLExporterTestArticle.bib\").toURI()).getParent();\n\r\n\n        try (Stream<Path> stream = Files.list(resourceDir)) {\n            return stream.map(n -> n.getFileName().toString()).filter(n -> n.endsWith(\".bib\"))\n                    .filter(n -> n.startsWith(\"BibTeXML\")).collect(Collectors.toList()).stream();\n        }\n    }\n","realPath":"src/test/java/org/jabref/logic/exporter/BibTeXMLExporterTestFiles.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":46,"status":"N"},{"authorDate":"2019-08-25 23:26:12","commitOrder":2,"curCode":"    static Stream<String> fileNames() throws IOException, URISyntaxException {\n        \r\n        resourceDir = Paths.get(MSBibExportFormatTestFiles.class.getResource(\"MsBibExportFormatTest1.bib\").toURI()).getParent();\n        try (Stream<Path> stream = Files.list(resourceDir)) {\n            return stream.map(n -> n.getFileName().toString())\n                         .filter(n -> n.endsWith(\".bib\"))\n                         .filter(n -> n.startsWith(\"MsBib\"))\n                         .collect(Collectors.toList())\n                         .stream();\n        }\n    }\n","date":"2019-08-25 23:26:12","endLine":51,"groupId":"7455","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"fileNames","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/19/0d65a22f6ddec2f36f32a6eb1e71c5ab112532.src","preCode":"    static Stream<String> fileNames() throws IOException, URISyntaxException {\n        \r\n        resourceDir = Paths.get(MSBibExportFormatTestFiles.class.getResource(\"MsBibExportFormatTest1.bib\").toURI()).getParent();\n        System.out.println(resourceDir);\n        try (Stream<Path> stream = Files.list(resourceDir)) {\n            return stream.map(n -> n.getFileName().toString()).filter(n -> n.endsWith(\".bib\"))\n                         .filter(n -> n.startsWith(\"MsBib\")).collect(Collectors.toList()).stream();\n        }\n    }\n","realPath":"src/test/java/org/jabref/logic/exporter/MSBibExportFormatTestFiles.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":41,"status":"M"}],"commitId":"f85c081e75e373820077e720fe9d48db6542704c","commitMessage":"@@@Merge pull request #3421 from JabRef/jdk9\n\nPort JabRef to Java 11","date":"2019-08-25 23:26:12","modifiedFileCount":"47","status":"M","submitter":"Oliver Kopp"},{"authorTime":"2020-04-30 17:10:13","codes":[{"authorDate":"2020-04-30 17:10:13","commitOrder":3,"curCode":"    public static Stream<String> fileNames() throws IOException, URISyntaxException {\n        resourceDir = Path.of(MSBibExportFormatTestFiles.class.getResource(\"BibTeXMLExporterTestArticle.bib\").toURI()).getParent();\n\n        try (Stream<Path> stream = Files.list(resourceDir)) {\n            return stream.map(n -> n.getFileName().toString()).filter(n -> n.endsWith(\".bib\"))\n                         .filter(n -> n.startsWith(\"BibTeXML\")).collect(Collectors.toList()).stream();\n        }\n    }\n","date":"2020-04-30 17:10:13","endLine":49,"groupId":"10661","id":5,"instanceNumber":1,"isCurCommit":1,"methodName":"fileNames","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/2e/8bfa1d5a54ca257486630c152279fed1e60332.src","preCode":"    public static Stream<String> fileNames() throws IOException, URISyntaxException {\n        resourceDir = Paths.get(MSBibExportFormatTestFiles.class.getResource(\"BibTeXMLExporterTestArticle.bib\").toURI()).getParent();\n\n        try (Stream<Path> stream = Files.list(resourceDir)) {\n            return stream.map(n -> n.getFileName().toString()).filter(n -> n.endsWith(\".bib\"))\n                         .filter(n -> n.startsWith(\"BibTeXML\")).collect(Collectors.toList()).stream();\n        }\n    }\n","realPath":"src/test/java/org/jabref/logic/exporter/BibTeXMLExporterTestFiles.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":42,"status":"M"},{"authorDate":"2020-04-30 17:10:13","commitOrder":3,"curCode":"    static Stream<String> fileNames() throws IOException, URISyntaxException {\n        \r\n        resourceDir = Path.of(MSBibExportFormatTestFiles.class.getResource(\"MsBibExportFormatTest1.bib\").toURI()).getParent();\n        try (Stream<Path> stream = Files.list(resourceDir)) {\n            return stream.map(n -> n.getFileName().toString())\n                         .filter(n -> n.endsWith(\".bib\"))\n                         .filter(n -> n.startsWith(\"MsBib\"))\n                         .collect(Collectors.toList())\n                         .stream();\n        }\n    }\n","date":"2020-04-30 17:10:13","endLine":50,"groupId":"10661","id":6,"instanceNumber":2,"isCurCommit":1,"methodName":"fileNames","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/b5/791ce30768e521b206b2d1d1913fdd2a574c58.src","preCode":"    static Stream<String> fileNames() throws IOException, URISyntaxException {\n        \r\n        resourceDir = Paths.get(MSBibExportFormatTestFiles.class.getResource(\"MsBibExportFormatTest1.bib\").toURI()).getParent();\n        try (Stream<Path> stream = Files.list(resourceDir)) {\n            return stream.map(n -> n.getFileName().toString())\n                         .filter(n -> n.endsWith(\".bib\"))\n                         .filter(n -> n.startsWith(\"MsBib\"))\n                         .collect(Collectors.toList())\n                         .stream();\n        }\n    }\n","realPath":"src/test/java/org/jabref/logic/exporter/MSBibExportFormatTestFiles.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":40,"status":"M"}],"commitId":"862078a4db316cfd15bd77be68d3d2b010feab3b","commitMessage":"@@@Fixes #6357: File directory (#6377)\n\n* Fixes #6357: File directory\n\nBug was introduced in https://github.com/JabRef/jabref/commit/1b03f039aa4abf0812a3a8ae0ba248c08fdb39a3.\n\n* Fix tests\n\n* Replace Paths.get\n\n* Fix code style","date":"2020-04-30 17:10:13","modifiedFileCount":"110","status":"M","submitter":"Tobias Diez"}]
