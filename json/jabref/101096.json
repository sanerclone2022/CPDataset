[{"authorTime":"2021-08-02 14:42:00","codes":[{"authorDate":"2021-08-02 14:42:00","commitOrder":1,"curCode":"    public CitedKeys getCitedKeysUnordered() {\n        LinkedHashMap<String, CitedKey> res = new LinkedHashMap<>();\n        for (CitationGroup cg : citationGroupsUnordered.values()) {\n            int storageIndexInGroup = 0;\n            for (Citation cit : cg.citationsInStorageOrder) {\n                String key = cit.citationKey;\n                CitationPath path = new CitationPath(cg.cgid, storageIndexInGroup);\n                if (res.containsKey(key)) {\n                    res.get(key).addPath(path, cit);\n                } else {\n                    res.put(key, new CitedKey(key, path, cit));\n                }\n                storageIndexInGroup++;\n            }\n        }\n        return new CitedKeys(res);\n    }\n","date":"2021-08-02 14:42:00","endLine":174,"groupId":"6233","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"getCitedKeysUnordered","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/0b/fe4a832d0373e2670fa771358d714fcff108f0.src","preCode":"    public CitedKeys getCitedKeysUnordered() {\n        LinkedHashMap<String, CitedKey> res = new LinkedHashMap<>();\n        for (CitationGroup cg : citationGroupsUnordered.values()) {\n            int storageIndexInGroup = 0;\n            for (Citation cit : cg.citationsInStorageOrder) {\n                String key = cit.citationKey;\n                CitationPath path = new CitationPath(cg.cgid, storageIndexInGroup);\n                if (res.containsKey(key)) {\n                    res.get(key).addPath(path, cit);\n                } else {\n                    res.put(key, new CitedKey(key, path, cit));\n                }\n                storageIndexInGroup++;\n            }\n        }\n        return new CitedKeys(res);\n    }\n","realPath":"src/main/java/org/jabref/model/openoffice/style/CitationGroups.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":158,"status":"B"},{"authorDate":"2021-08-02 14:42:00","commitOrder":1,"curCode":"    public CitedKeys getCitedKeysSortedInOrderOfAppearance() {\n        if (!hasGlobalOrder()) {\n            throw new IllegalStateException(\"getSortedCitedKeys: no globalOrder\");\n        }\n        LinkedHashMap<String, CitedKey> res = new LinkedHashMap<>();\n        for (CitationGroup cg : getCitationGroupsInGlobalOrder()) {\n            for (int i : cg.getLocalOrder()) {\n                Citation cit = cg.citationsInStorageOrder.get(i);\n                String citationKey = cit.citationKey;\n                CitationPath path = new CitationPath(cg.cgid, i);\n                if (res.containsKey(citationKey)) {\n                    res.get(citationKey).addPath(path, cit);\n                } else {\n                    res.put(citationKey, new CitedKey(citationKey, path, cit));\n                }\n            }\n        }\n        return new CitedKeys(res);\n    }\n","date":"2021-08-02 14:42:00","endLine":197,"groupId":"6234","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"getCitedKeysSortedInOrderOfAppearance","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/0b/fe4a832d0373e2670fa771358d714fcff108f0.src","preCode":"    public CitedKeys getCitedKeysSortedInOrderOfAppearance() {\n        if (!hasGlobalOrder()) {\n            throw new IllegalStateException(\"getSortedCitedKeys: no globalOrder\");\n        }\n        LinkedHashMap<String, CitedKey> res = new LinkedHashMap<>();\n        for (CitationGroup cg : getCitationGroupsInGlobalOrder()) {\n            for (int i : cg.getLocalOrder()) {\n                Citation cit = cg.citationsInStorageOrder.get(i);\n                String citationKey = cit.citationKey;\n                CitationPath path = new CitationPath(cg.cgid, i);\n                if (res.containsKey(citationKey)) {\n                    res.get(citationKey).addPath(path, cit);\n                } else {\n                    res.put(citationKey, new CitedKey(citationKey, path, cit));\n                }\n            }\n        }\n        return new CitedKeys(res);\n    }\n","realPath":"src/main/java/org/jabref/model/openoffice/style/CitationGroups.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":179,"status":"B"}],"commitId":"44a229b1ad61e0d6217ffab9a73fd3d4ad4a1122","commitMessage":"@@@Oobranch d : apply style (#7789)\n\n* step0 : start model/openoffice.  logic/openoffice/style\n\n* correction: import order\n\n* add general utilities\n\n* add UNO utilities.  move CreationException.  NoDocumentException\n\n* Xlint:unchecked model/openoffice/util\n\n* add ootext\n\n* add rangesort\n\n* add compareStartsUnsafe.  compareStartsThenEndsUnsafe\n\n* add Tuple3\n\n* add ootext\n\n* add rangesort\n\n* delNamesArray size correction\n\n* rangeSort update\n\n* cleanup\n\n* style additions\n\n* checkstyle on tests\n\n* add missing message\n\n* ootext changes from improve-reversibility-rebased-03\n\n* rangesort changes from improve-reversibility-rebased-03\n\n* rangesort update from improve-reversibility-rebased-03\n\nadd comment on RangeSet.add costs\nuse UnoTextRange.compareXXXUnsafe\n\n* use longer lines in comments\n\n* propagate changes from improve-reversibility-rebased-03\n\n* deleted    src/main/java/org/jabref/model/openoffice/rangesort/RangeSet.java\n\n* deleted    src/main/java/org/jabref/model/openoffice/rangesort/RangeSet.java\n\n* use StringUtil.isNullOrEmpty\n\n* no natural sort for ComparableMark\n\n* in response to review\n\nhttps://github.com/JabRef/jabref/pull/7788#pullrequestreview-698494039\n\n- more use of StringUtil.isNullOrEmpty\n- private final XTextRangeCompare cmp;\n- List<V> partition = partitions.computeIfAbsent(partitionKey.  _key -> new ArrayList<>());\n- visualSort does not throw WrappedTargetException.  NoDocumentException\n- set renamed to comparableMarks\n\n* use {@code }.  PMD suggestions\n\n* update model/style from improve-reversibility-rebased-03\n\n* update logic/style from improve-reversibility-rebased-03\n\n* replaced single-character names in OOBibStyle.java (in changed part)\n\n* some longer names in OOBibStyleGetCitationMarker.java\n\n* drop normalizePageInfos.  use 'preferred' and 'fallback' in getAuthorLastSeparatorInTextWithFallBack\n\n* checkstyle\n\n* use putIfAbsent\n\n* use \"{}\" with LOGGER\n\n* use Objects.hash and Objects.equals in CitationLookupResult\n\n* simplified CitedKey.getBibEntry\n\n* more use of \"{}\" in LOGGER\n\n* Citation.lookup: use streams\n\n* Citation.lookup: Optional::get before findFirst","date":"2021-08-02 14:42:00","modifiedFileCount":"3","status":"B","submitter":"antalk2"},{"authorTime":"2021-08-22 04:27:53","codes":[{"authorDate":"2021-08-22 04:27:53","commitOrder":2,"curCode":"    public CitedKeys getCitedKeysUnordered() {\n        LinkedHashMap<String, CitedKey> res = new LinkedHashMap<>();\n        for (CitationGroup group : citationGroupsUnordered.values()) {\n            int storageIndexInGroup = 0;\n            for (Citation cit : group.citationsInStorageOrder) {\n                String key = cit.citationKey;\n                CitationPath path = new CitationPath(group.groupId, storageIndexInGroup);\n                if (res.containsKey(key)) {\n                    res.get(key).addPath(path, cit);\n                } else {\n                    res.put(key, new CitedKey(key, path, cit));\n                }\n                storageIndexInGroup++;\n            }\n        }\n        return new CitedKeys(res);\n    }\n","date":"2021-08-22 04:27:53","endLine":174,"groupId":"101096","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"getCitedKeysUnordered","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/b0/3028b76ef70fea3ec03f2a248ea05432593849.src","preCode":"    public CitedKeys getCitedKeysUnordered() {\n        LinkedHashMap<String, CitedKey> res = new LinkedHashMap<>();\n        for (CitationGroup cg : citationGroupsUnordered.values()) {\n            int storageIndexInGroup = 0;\n            for (Citation cit : cg.citationsInStorageOrder) {\n                String key = cit.citationKey;\n                CitationPath path = new CitationPath(cg.cgid, storageIndexInGroup);\n                if (res.containsKey(key)) {\n                    res.get(key).addPath(path, cit);\n                } else {\n                    res.put(key, new CitedKey(key, path, cit));\n                }\n                storageIndexInGroup++;\n            }\n        }\n        return new CitedKeys(res);\n    }\n","realPath":"src/main/java/org/jabref/model/openoffice/style/CitationGroups.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":158,"status":"M"},{"authorDate":"2021-08-22 04:27:53","commitOrder":2,"curCode":"    public CitedKeys getCitedKeysSortedInOrderOfAppearance() {\n        if (!hasGlobalOrder()) {\n            throw new IllegalStateException(\"getSortedCitedKeys: no globalOrder\");\n        }\n        LinkedHashMap<String, CitedKey> res = new LinkedHashMap<>();\n        for (CitationGroup group : getCitationGroupsInGlobalOrder()) {\n            for (int i : group.getLocalOrder()) {\n                Citation cit = group.citationsInStorageOrder.get(i);\n                String citationKey = cit.citationKey;\n                CitationPath path = new CitationPath(group.groupId, i);\n                if (res.containsKey(citationKey)) {\n                    res.get(citationKey).addPath(path, cit);\n                } else {\n                    res.put(citationKey, new CitedKey(citationKey, path, cit));\n                }\n            }\n        }\n        return new CitedKeys(res);\n    }\n","date":"2021-08-22 04:27:53","endLine":197,"groupId":"101096","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"getCitedKeysSortedInOrderOfAppearance","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/b0/3028b76ef70fea3ec03f2a248ea05432593849.src","preCode":"    public CitedKeys getCitedKeysSortedInOrderOfAppearance() {\n        if (!hasGlobalOrder()) {\n            throw new IllegalStateException(\"getSortedCitedKeys: no globalOrder\");\n        }\n        LinkedHashMap<String, CitedKey> res = new LinkedHashMap<>();\n        for (CitationGroup cg : getCitationGroupsInGlobalOrder()) {\n            for (int i : cg.getLocalOrder()) {\n                Citation cit = cg.citationsInStorageOrder.get(i);\n                String citationKey = cit.citationKey;\n                CitationPath path = new CitationPath(cg.cgid, i);\n                if (res.containsKey(citationKey)) {\n                    res.get(citationKey).addPath(path, cit);\n                } else {\n                    res.put(citationKey, new CitedKey(citationKey, path, cit));\n                }\n            }\n        }\n        return new CitedKeys(res);\n    }\n","realPath":"src/main/java/org/jabref/model/openoffice/style/CitationGroups.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":179,"status":"M"}],"commitId":"644e48de7be0d46ceccb895824972f6e6517c311","commitMessage":"@@@Oobranch e : add backend (#7790)\n\n* step0 : start model/openoffice.  logic/openoffice/style\n\n* correction: import order\n\n* add general utilities\n\n* add UNO utilities.  move CreationException.  NoDocumentException\n\n* Xlint:unchecked model/openoffice/util\n\n* add ootext\n\n* add rangesort\n\n* add compareStartsUnsafe.  compareStartsThenEndsUnsafe\n\n* add Tuple3\n\n* add ootext\n\n* add rangesort\n\n* delNamesArray size correction\n\n* rangeSort update\n\n* cleanup\n\n* style additions\n\n* add backend\n\n* checkstyle on tests\n\n* add missing message\n\n* add backend\n\n* apply  oobranch-D-update.patch\n\n* apply  oobranch-E-update.patch\n\n* deleted    src/main/java/org/jabref/model/openoffice/rangesort/RangeSet.java\n\n* use StringUtil.isNullOrEmpty\n\n* no natural sort for ComparableMark\n\n* in response to review\n\nhttps://github.com/JabRef/jabref/pull/7788#pullrequestreview-698494039\n\n- more use of StringUtil.isNullOrEmpty\n- private final XTextRangeCompare cmp;\n- List<V> partition = partitions.computeIfAbsent(partitionKey.  _key -> new ArrayList<>());\n- visualSort does not throw WrappedTargetException.  NoDocumentException\n- set renamed to comparableMarks\n\n* use {@code }.  PMD suggestions\n\n* update logic/style from improve-reversibility-rebased-03\n\n* update model/style from improve-reversibility-rebased-03\n\n* replaced single-character names in OOBibStyle.java (in changed part)\n\n* some longer names in OOBibStyleGetCitationMarker.java\n\n* drop normalizePageInfos.  use 'preferred' and 'fallback' in getAuthorLastSeparatorInTextWithFallBack\n\n* checkstyle\n\n* use putIfAbsent\n\n* use \"{}\" with LOGGER\n\n* use Objects.hash and Objects.equals in CitationLookupResult\n\n* simplified CitedKey.getBibEntry\n\n* more use of \"{}\" in LOGGER\n\n* more use of \"{}\" in LOGGER\n\n* Citation.lookup: use streams\n\n* Citation.lookup: Optional::get before findFirst\n\n* putIfAbsent returns null for new entry\n\n* What is 52 in Backend52\n\n* apply 2021-08-20-a/oobranch-E-update.patch\n\nBrings oobranch-E up to\n89b096881 @ origin/improve-reversibility-rebased-03 Merge remote-tracking branch 'upstream/main' into improve-reversibility-rebased-03\n\n* putIfAbsent returns null for new entry\n\n* What is 52 in Backend52\n\n* using orElseThrow\n\n* using StringBuilder\n\n* refMarkName renamed to markName\n\n* import StringBuilder is not needed\n\n* orElseThrow correction (now without message)\n\n* update\n\n* orElseThrow correction\n\n* renamed cg to group\n\n* drop message not understandable by end user\n\n* reorganized reference mark name generation\n\nIn Backend52:\n- use a single expression\n- expand comment\n- rename refMarkName to markName\n\nCollectors.joining(\". \") moved to Codec52.getUniqueMarkName\n\n* renamed nCitations to numberOfCitations and totalCitations\n\n* format\n\n* insert dummy case JabRef60: branch\n\n* indent case-label in model/style\n\n* indent case-label in logic/backend\n\n* indent case-label in model/ootext\n\n* rname cgPageInfos tro pageInfos\n\n* renamed cgPageInfo to singlePageInfo\n\n* replace Collectors.toSet() with new HashSet<>()\n\n* use method reference\n\n* drop two comments\n\n* use String.join\n\n* remove nr/nrm prefixes from NamedRange and NamedRangeManager methods\n\n* align dots","date":"2021-08-22 04:27:53","modifiedFileCount":"8","status":"M","submitter":"antalk2"}]
