[{"authorTime":"2017-02-17 05:41:47","codes":[{"authorDate":"2017-02-17 05:41:47","commitOrder":1,"curCode":"    public void testSearchingForOpenBraketInBooktitle() {\n        BibEntry e = new BibEntry(BibtexEntryTypes.INPROCEEDINGS.getName());\n        e.setField(FieldName.BOOKTITLE, \"Super Conference (SC)\");\n\n        SearchQuery searchQuery = new SearchQuery(\"booktitle=\\\"(\\\"\", false, false);\n        assertTrue(searchQuery.isMatch(e));\n    }\n","date":"2017-02-17 05:41:47","endLine":66,"groupId":"10549","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testSearchingForOpenBraketInBooktitle","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/4a/49b7cc80c807fc2c72ef7e8fa922966d797560.src","preCode":"    public void testSearchingForOpenBraketInBooktitle() {\n        BibEntry e = new BibEntry(BibtexEntryTypes.INPROCEEDINGS.getName());\n        e.setField(FieldName.BOOKTITLE, \"Super Conference (SC)\");\n\n        SearchQuery searchQuery = new SearchQuery(\"booktitle=\\\"(\\\"\", false, false);\n        assertTrue(searchQuery.isMatch(e));\n    }\n","realPath":"src/test/java/org/jabref/logic/search/SearchQueryTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":60,"status":"B"},{"authorDate":"2017-02-17 05:41:47","commitOrder":1,"curCode":"    public void testSearchAllFields() {\n        BibEntry e = new BibEntry(BibtexEntryTypes.INPROCEEDINGS.getName());\n        e.setField(\"title\", \"Fruity features\");\n        e.setField(\"keywords\", \"banana, pineapple, orange\");\n\n        SearchQuery searchQuery = new SearchQuery(\"anyfield==\\\"fruity features\\\"\", false, false);\n        assertTrue(searchQuery.isMatch(e));\n    }\n","date":"2017-02-17 05:41:47","endLine":94,"groupId":"10549","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testSearchAllFields","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/4a/49b7cc80c807fc2c72ef7e8fa922966d797560.src","preCode":"    public void testSearchAllFields() {\n        BibEntry e = new BibEntry(BibtexEntryTypes.INPROCEEDINGS.getName());\n        e.setField(\"title\", \"Fruity features\");\n        e.setField(\"keywords\", \"banana, pineapple, orange\");\n\n        SearchQuery searchQuery = new SearchQuery(\"anyfield==\\\"fruity features\\\"\", false, false);\n        assertTrue(searchQuery.isMatch(e));\n    }\n","realPath":"src/test/java/org/jabref/logic/search/SearchQueryTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":87,"status":"B"}],"commitId":"ebbeb1d249edf7134abf92d24c2031ae54d19881","commitMessage":"@@@Merge branch 'net-sf-to-org-jabref'\n","date":"2017-02-17 05:41:47","modifiedFileCount":"1","status":"B","submitter":"Oliver Kopp"},{"authorTime":"2018-12-29 06:39:28","codes":[{"authorDate":"2017-02-17 05:41:47","commitOrder":2,"curCode":"    public void testSearchingForOpenBraketInBooktitle() {\n        BibEntry e = new BibEntry(BibtexEntryTypes.INPROCEEDINGS.getName());\n        e.setField(FieldName.BOOKTITLE, \"Super Conference (SC)\");\n\n        SearchQuery searchQuery = new SearchQuery(\"booktitle=\\\"(\\\"\", false, false);\n        assertTrue(searchQuery.isMatch(e));\n    }\n","date":"2017-02-17 05:41:47","endLine":66,"groupId":"10549","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testSearchingForOpenBraketInBooktitle","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/4a/49b7cc80c807fc2c72ef7e8fa922966d797560.src","preCode":"    public void testSearchingForOpenBraketInBooktitle() {\n        BibEntry e = new BibEntry(BibtexEntryTypes.INPROCEEDINGS.getName());\n        e.setField(FieldName.BOOKTITLE, \"Super Conference (SC)\");\n\n        SearchQuery searchQuery = new SearchQuery(\"booktitle=\\\"(\\\"\", false, false);\n        assertTrue(searchQuery.isMatch(e));\n    }\n","realPath":"src/test/java/org/jabref/logic/search/SearchQueryTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":60,"status":"N"},{"authorDate":"2018-12-29 06:39:28","commitOrder":2,"curCode":"    public void testSearchAllFields() {\n        BibEntry e = new BibEntry(BibtexEntryTypes.INPROCEEDINGS);\n        e.setField(\"title\", \"Fruity features\");\n        e.setField(\"keywords\", \"banana, pineapple, orange\");\n\n        SearchQuery searchQuery = new SearchQuery(\"anyfield==\\\"fruity features\\\"\", false, false);\n        assertTrue(searchQuery.isMatch(e));\n    }\n","date":"2018-12-29 06:39:28","endLine":94,"groupId":"10549","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testSearchAllFields","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/e4/463f75155c76976db939a5e41d002834380886.src","preCode":"    public void testSearchAllFields() {\n        BibEntry e = new BibEntry(BibtexEntryTypes.INPROCEEDINGS.getName());\n        e.setField(\"title\", \"Fruity features\");\n        e.setField(\"keywords\", \"banana, pineapple, orange\");\n\n        SearchQuery searchQuery = new SearchQuery(\"anyfield==\\\"fruity features\\\"\", false, false);\n        assertTrue(searchQuery.isMatch(e));\n    }\n","realPath":"src/test/java/org/jabref/logic/search/SearchQueryTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":87,"status":"M"}],"commitId":"cd1e795e91a0f36ea33386c47f06e31e7f812481","commitMessage":"@@@Refactor BibEntry deprecated method (#4554)\n\n* Refactor BibEntry deprecated method\n\n* Fixed error\n\n* More on checkstyle fixing\n\n* Fixed checkstyle issues\n\n* Added custom entrytype for types not registered in the enumerator.\n\n* Added getTypeOrDefault method refactor code to use it and fix NPE problem\n\n* Fixing checkstyle rules\n\n* More on checkstyle\n\n* More on getType getTypeOrDefault replacement\n\n* Revert Article EntryType into Electronic\n\n* Added break line between different packages\n\n* Refactor BibtextEntryTypes.getTypeOrDefault method\n\n* Removed unused import\n\n* Removed extra new line.  checkstyle error fixing\n","date":"2018-12-29 06:39:28","modifiedFileCount":"36","status":"M","submitter":"Bitor Tonixa Biriato Balen?a"},{"authorTime":"2019-08-02 15:20:10","codes":[{"authorDate":"2017-02-17 05:41:47","commitOrder":3,"curCode":"    public void testSearchingForOpenBraketInBooktitle() {\n        BibEntry e = new BibEntry(BibtexEntryTypes.INPROCEEDINGS.getName());\n        e.setField(FieldName.BOOKTITLE, \"Super Conference (SC)\");\n\n        SearchQuery searchQuery = new SearchQuery(\"booktitle=\\\"(\\\"\", false, false);\n        assertTrue(searchQuery.isMatch(e));\n    }\n","date":"2017-02-17 05:41:47","endLine":66,"groupId":"10549","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testSearchingForOpenBraketInBooktitle","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/4a/49b7cc80c807fc2c72ef7e8fa922966d797560.src","preCode":"    public void testSearchingForOpenBraketInBooktitle() {\n        BibEntry e = new BibEntry(BibtexEntryTypes.INPROCEEDINGS.getName());\n        e.setField(FieldName.BOOKTITLE, \"Super Conference (SC)\");\n\n        SearchQuery searchQuery = new SearchQuery(\"booktitle=\\\"(\\\"\", false, false);\n        assertTrue(searchQuery.isMatch(e));\n    }\n","realPath":"src/test/java/org/jabref/logic/search/SearchQueryTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":60,"status":"N"},{"authorDate":"2019-08-02 15:20:10","commitOrder":3,"curCode":"    public void testSearchAllFields() {\n        BibEntry e = new BibEntry(StandardEntryType.InProceedings);\n        e.setField(StandardField.TITLE, \"Fruity features\");\n        e.setField(StandardField.KEYWORDS, \"banana, pineapple, orange\");\n\n        SearchQuery searchQuery = new SearchQuery(\"anyfield==\\\"fruity features\\\"\", false, false);\n        assertTrue(searchQuery.isMatch(e));\n    }\n","date":"2019-08-02 15:20:10","endLine":97,"groupId":"3881","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testSearchAllFields","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/8e/030482fe75b8768bb5269531c77191fac7c154.src","preCode":"    public void testSearchAllFields() {\n        BibEntry e = new BibEntry(BibtexEntryTypes.INPROCEEDINGS);\n        e.setField(\"title\", \"Fruity features\");\n        e.setField(\"keywords\", \"banana, pineapple, orange\");\n\n        SearchQuery searchQuery = new SearchQuery(\"anyfield==\\\"fruity features\\\"\", false, false);\n        assertTrue(searchQuery.isMatch(e));\n    }\n","realPath":"src/test/java/org/jabref/logic/search/SearchQueryTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":90,"status":"M"}],"commitId":"4b39b78e4afcd6c36b385f5c46f1d9a4eac2e29b","commitMessage":"@@@Move to extended enums for fields and entry types (#5148)\n\n* Introduce interface for fields\n\n* Continue using fields interface instead of strings\n\n* Introduce OrFields class\n\n* Move FieldProperty\n\n* Convert entry types to extended enum\n\n* Start fixing build\n\n* Fix build\n\n* Start fixing tests\n\n* Everything compiles again\n\n* Make model tests pass\n\n* Fix most tests\n\n* Fix build\n\n* Fix a few more tests\n\n* Fix a few more tests\n\n* Fix a few more tests\n\n* Fix a few more tests\n\n* Fix checkstyle issues\n\n* Fix more tests\n\n* Fix more tests\n\n* Disable test that fails on CI\n\n* Disable test that fails on CI\n","date":"2019-08-02 15:20:10","modifiedFileCount":"439","status":"M","submitter":"Tobias Diez"},{"authorTime":"2021-07-15 03:49:30","codes":[{"authorDate":"2021-07-15 03:49:30","commitOrder":4,"curCode":"    public void testSearchingForOpenBraketInBooktitle() {\n        BibEntry e = new BibEntry(StandardEntryType.InProceedings);\n        e.setField(StandardField.BOOKTITLE, \"Super Conference (SC)\");\n\n        SearchQuery searchQuery = new SearchQuery(\"booktitle=\\\"(\\\"\", EnumSet.noneOf(SearchFlags.class));\n        assertTrue(searchQuery.isMatch(e));\n    }\n","date":"2021-07-15 03:49:30","endLine":72,"groupId":"10378","id":7,"instanceNumber":1,"isCurCommit":1,"methodName":"testSearchingForOpenBraketInBooktitle","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/4b/f01fadb736bf0e1f087ebdea5af6679b657180.src","preCode":"    public void testSearchingForOpenBraketInBooktitle() {\n        BibEntry e = new BibEntry(BibtexEntryTypes.INPROCEEDINGS.getName());\n        e.setField(FieldName.BOOKTITLE, \"Super Conference (SC)\");\n\n        SearchQuery searchQuery = new SearchQuery(\"booktitle=\\\"(\\\"\", false, false);\n        assertTrue(searchQuery.isMatch(e));\n    }\n","realPath":"src/test/java/org/jabref/logic/search/SearchQueryTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":66,"status":"M"},{"authorDate":"2021-07-15 03:49:30","commitOrder":4,"curCode":"    public void testSearchAllFields() {\n        BibEntry e = new BibEntry(StandardEntryType.InProceedings);\n        e.setField(StandardField.TITLE, \"Fruity features\");\n        e.setField(StandardField.KEYWORDS, \"banana, pineapple, orange\");\n\n        SearchQuery searchQuery = new SearchQuery(\"anyfield==\\\"fruity features\\\"\", EnumSet.noneOf(SearchFlags.class));\n        assertTrue(searchQuery.isMatch(e));\n    }\n","date":"2021-07-15 03:49:30","endLine":100,"groupId":"10378","id":8,"instanceNumber":2,"isCurCommit":1,"methodName":"testSearchAllFields","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/4b/f01fadb736bf0e1f087ebdea5af6679b657180.src","preCode":"    public void testSearchAllFields() {\n        BibEntry e = new BibEntry(StandardEntryType.InProceedings);\n        e.setField(StandardField.TITLE, \"Fruity features\");\n        e.setField(StandardField.KEYWORDS, \"banana, pineapple, orange\");\n\n        SearchQuery searchQuery = new SearchQuery(\"anyfield==\\\"fruity features\\\"\", false, false);\n        assertTrue(searchQuery.isMatch(e));\n    }\n","realPath":"src/test/java/org/jabref/logic/search/SearchQueryTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":93,"status":"M"}],"commitId":"ddce5735b09cfec22ef55d15431582f19cb54208","commitMessage":"@@@Search in PDF Files (#2838)\n\nCo-authored-by: braunch <braunch.dev@gmail.com>\nCo-authored-by: Oliver Kopp <kopp.dev@gmail.com>\nCo-authored-by: Benedikt Tutzer <btut@users.noreply.github.com>\nCo-authored-by: Carl Christian Snethlage <50491877+calixtus@users.noreply.github.com>\nCo-authored-by: Christoph <siedlerkiller@gmail.com>","date":"2021-07-15 03:49:30","modifiedFileCount":"39","status":"M","submitter":"Linus Dietz"}]
