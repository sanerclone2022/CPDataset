[{"authorTime":"2018-11-24 01:19:38","codes":[{"authorDate":"2018-11-24 01:19:38","commitOrder":2,"curCode":"    public static List<Text> generateDiffHighlighting(String baseString, String modifiedString, String separator) {\n        List<String> stringList = Arrays.asList(baseString.split(separator));\n        List<Text> result = stringList.stream().map(DiffHighlighting::forUnchanged).collect(Collectors.toList());\n        List<AbstractDelta<String>> deltaList;\n        try {\n            deltaList = DiffUtils.diff(stringList, Arrays.asList(modifiedString.split(separator))).getDeltas();\n        } catch (DiffException e) {\n            LOGGER.error(\"Error while generating diff of \" + baseString + \" and \" + modifiedString);\n            return Collections.emptyList();\n        }\n        Collections.reverse(deltaList);\n        for (AbstractDelta<String> delta : deltaList) {\n            int startPos = delta.getSource().getPosition();\n            List<String> lines = delta.getSource().getLines();\n            int offset = 0;\n            switch (delta.getType()) {\n                case CHANGE:\n                    for (String line : lines) {\n                        result.set(startPos + offset, forRemoved(line + separator));\n                        offset++;\n                    }\n                    result.set(startPos + offset - 1, forRemoved(stringList.get((startPos + offset) - 1) + separator));\n                    result.add(startPos + offset, forAdded(String.join(separator, delta.getTarget().getLines())));\n                    break;\n                case DELETE:\n                    for (String line : lines) {\n                        result.set(startPos + offset, forRemoved(line + separator));\n                        offset++;\n                    }\n                    break;\n                case INSERT:\n                    result.add(delta.getSource().getPosition(), forAdded(String.join(separator, delta.getTarget().getLines())));\n                    break;\n                default:\n                    break;\n            }\n        }\n        return result;\n    }\n","date":"2018-11-24 01:19:38","endLine":61,"groupId":"10727","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"generateDiffHighlighting","params":"(StringbaseString@StringmodifiedString@Stringseparator)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/ac/ffbc7acc01d8828a0d8c5bfa7ee6b41bba7982.src","preCode":"    public static List<Text> generateDiffHighlighting(String baseString, String modifiedString, String separator) {\n        List<String> stringList = Arrays.asList(baseString.split(separator));\n        List<Text> result = stringList.stream().map(DiffHighlighting::forUnchanged).collect(Collectors.toList());\n        List<AbstractDelta<String>> deltaList;\n        try {\n            deltaList = DiffUtils.diff(stringList, Arrays.asList(modifiedString.split(separator))).getDeltas();\n        } catch (DiffException e) {\n            LOGGER.error(\"Error while generating diff of \" + baseString + \" and \" + modifiedString);\n            return Collections.emptyList();\n        }\n        Collections.reverse(deltaList);\n        for (AbstractDelta<String> delta : deltaList) {\n            int startPos = delta.getSource().getPosition();\n            List<String> lines = delta.getSource().getLines();\n            int offset = 0;\n            switch (delta.getType()) {\n                case CHANGE:\n                    for (String line : lines) {\n                        result.set(startPos + offset, forRemoved(line + separator));\n                        offset++;\n                    }\n                    result.set(startPos + offset - 1, forRemoved(stringList.get((startPos + offset) - 1) + separator));\n                    result.add(startPos + offset, forAdded(String.join(separator, delta.getTarget().getLines())));\n                    break;\n                case DELETE:\n                    for (String line : lines) {\n                        result.set(startPos + offset, forRemoved(line + separator));\n                        offset++;\n                    }\n                    break;\n                case INSERT:\n                    result.add(delta.getSource().getPosition(), forAdded(String.join(separator, delta.getTarget().getLines())));\n                    break;\n                default:\n                    break;\n            }\n        }\n        return result;\n    }\n","realPath":"src/main/java/org/jabref/gui/mergeentries/DiffHighlighting.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":23,"status":"MB"},{"authorDate":"2018-11-24 01:19:38","commitOrder":2,"curCode":"    public static List<Text> generateSymmetricHighlighting(String baseString, String modifiedString, String separator) {\n        List<String> stringList = Arrays.asList(baseString.split(separator));\n        List<Text> result = stringList.stream().map(text -> DiffHighlighting.forUnchanged(text + separator)).collect(Collectors.toList());\n        List<AbstractDelta<String>> deltaList;\n        try {\n            deltaList = DiffUtils.diff(stringList, Arrays.asList(modifiedString.split(separator))).getDeltas();\n        } catch (DiffException e) {\n            LOGGER.error(\"Error while generating diff of \" + baseString + \" and \" + modifiedString);\n            return Collections.emptyList();\n        }\n        Collections.reverse(deltaList);\n        for (AbstractDelta<String> delta : deltaList) {\n            int startPos = delta.getSource().getPosition();\n            List<String> lines = delta.getSource().getLines();\n            int offset = 0;\n            switch (delta.getType()) {\n                case CHANGE:\n                    for (String line : lines) {\n                        result.set(startPos + offset, forChanged(line + separator));\n                        offset++;\n                    }\n                    break;\n                case DELETE:\n                    for (String line : lines) {\n                        result.set(startPos + offset, forAdded(line + separator));\n                        offset++;\n                    }\n                    break;\n                case INSERT:\n                    break;\n                default:\n                    break;\n            }\n        }\n\n        return result;\n    }\n","date":"2018-11-24 01:19:38","endLine":123,"groupId":"11862","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"generateSymmetricHighlighting","params":"(StringbaseString@StringmodifiedString@Stringseparator)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/ac/ffbc7acc01d8828a0d8c5bfa7ee6b41bba7982.src","preCode":"    public static List<Text> generateSymmetricHighlighting(String baseString, String modifiedString, String separator) {\n        List<String> stringList = Arrays.asList(baseString.split(separator));\n        List<Text> result = stringList.stream().map(text -> DiffHighlighting.forUnchanged(text + separator)).collect(Collectors.toList());\n        List<AbstractDelta<String>> deltaList;\n        try {\n            deltaList = DiffUtils.diff(stringList, Arrays.asList(modifiedString.split(separator))).getDeltas();\n        } catch (DiffException e) {\n            LOGGER.error(\"Error while generating diff of \" + baseString + \" and \" + modifiedString);\n            return Collections.emptyList();\n        }\n        Collections.reverse(deltaList);\n        for (AbstractDelta<String> delta : deltaList) {\n            int startPos = delta.getSource().getPosition();\n            List<String> lines = delta.getSource().getLines();\n            int offset = 0;\n            switch (delta.getType()) {\n                case CHANGE:\n                    for (String line : lines) {\n                        result.set(startPos + offset, forChanged(line + separator));\n                        offset++;\n                    }\n                    break;\n                case DELETE:\n                    for (String line : lines) {\n                        result.set(startPos + offset, forAdded(line + separator));\n                        offset++;\n                    }\n                    break;\n                case INSERT:\n                    break;\n                default:\n                    break;\n            }\n        }\n\n        return result;\n    }\n","realPath":"src/main/java/org/jabref/gui/mergeentries/DiffHighlighting.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":87,"status":"MB"}],"commitId":"742cfce7ed79eb8ea3b79fe31defebdaac6cce19","commitMessage":"@@@Bump java-diff-utils from 2.2.0 to 4.0 (#4507)\n\nCo-Authored-By: Tobias Diez <TobiasDiez@gmx.de>\n\n* Bump java-diff-utils from 2.2.0 to 4.0\n\nBumps [java-diff-utils](https://github.com/java-diff-utils/java-diff-utils) from 2.2.0 to 4.0.\n- [Release notes](https://github.com/java-diff-utils/java-diff-utils/releases)\n- [Commits](https://github.com/java-diff-utils/java-diff-utils/commits/java-diff-utils-4.0)\n\nSigned-off-by: dependabot[bot] <support@dependabot.com>\n\n* Fix build\n","date":"2018-11-24 01:19:38","modifiedFileCount":"1","status":"M","submitter":"dependabot[bot]"},{"authorTime":"2018-11-24 01:19:38","codes":[{"authorDate":"2019-08-24 20:44:34","commitOrder":3,"curCode":"    public static List<Text> generateDiffHighlighting(String baseString, String modifiedString, String separator) {\n        List<String> stringList = Arrays.asList(baseString.split(separator));\n        List<Text> result = stringList.stream().map(text -> forUnchanged(text + separator)).collect(Collectors.toList());\n        List<AbstractDelta<String>> deltaList;\n        try {\n            deltaList = DiffUtils.diff(stringList, Arrays.asList(modifiedString.split(separator))).getDeltas();\n        } catch (DiffException e) {\n            LOGGER.error(\"Error while generating diff of \" + baseString + \" and \" + modifiedString);\n            return Collections.emptyList();\n        }\n        Collections.reverse(deltaList);\n        for (AbstractDelta<String> delta : deltaList) {\n            int startPos = delta.getSource().getPosition();\n            List<String> lines = delta.getSource().getLines();\n            int offset = 0;\n            switch (delta.getType()) {\n                case CHANGE:\n                    for (String line : lines) {\n                        result.set(startPos + offset, forRemoved(line + separator));\n                        offset++;\n                    }\n                    result.set(startPos + offset - 1, forRemoved(stringList.get((startPos + offset) - 1) + separator));\n                    result.add(startPos + offset, forAdded(String.join(separator, delta.getTarget().getLines())));\n                    break;\n                case DELETE:\n                    for (String line : lines) {\n                        result.set(startPos + offset, forRemoved(line + separator));\n                        offset++;\n                    }\n                    break;\n                case INSERT:\n                    result.add(delta.getSource().getPosition(), forAdded(String.join(separator, delta.getTarget().getLines())));\n                    break;\n                default:\n                    break;\n            }\n        }\n        return result;\n    }\n","date":"2019-08-24 20:44:34","endLine":61,"groupId":"10727","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"generateDiffHighlighting","params":"(StringbaseString@StringmodifiedString@Stringseparator)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/4b/93edbb8c8dc731c38dceb9c0e88e4ed7ede8b3.src","preCode":"    public static List<Text> generateDiffHighlighting(String baseString, String modifiedString, String separator) {\n        List<String> stringList = Arrays.asList(baseString.split(separator));\n        List<Text> result = stringList.stream().map(DiffHighlighting::forUnchanged).collect(Collectors.toList());\n        List<AbstractDelta<String>> deltaList;\n        try {\n            deltaList = DiffUtils.diff(stringList, Arrays.asList(modifiedString.split(separator))).getDeltas();\n        } catch (DiffException e) {\n            LOGGER.error(\"Error while generating diff of \" + baseString + \" and \" + modifiedString);\n            return Collections.emptyList();\n        }\n        Collections.reverse(deltaList);\n        for (AbstractDelta<String> delta : deltaList) {\n            int startPos = delta.getSource().getPosition();\n            List<String> lines = delta.getSource().getLines();\n            int offset = 0;\n            switch (delta.getType()) {\n                case CHANGE:\n                    for (String line : lines) {\n                        result.set(startPos + offset, forRemoved(line + separator));\n                        offset++;\n                    }\n                    result.set(startPos + offset - 1, forRemoved(stringList.get((startPos + offset) - 1) + separator));\n                    result.add(startPos + offset, forAdded(String.join(separator, delta.getTarget().getLines())));\n                    break;\n                case DELETE:\n                    for (String line : lines) {\n                        result.set(startPos + offset, forRemoved(line + separator));\n                        offset++;\n                    }\n                    break;\n                case INSERT:\n                    result.add(delta.getSource().getPosition(), forAdded(String.join(separator, delta.getTarget().getLines())));\n                    break;\n                default:\n                    break;\n            }\n        }\n        return result;\n    }\n","realPath":"src/main/java/org/jabref/gui/mergeentries/DiffHighlighting.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":23,"status":"M"},{"authorDate":"2018-11-24 01:19:38","commitOrder":3,"curCode":"    public static List<Text> generateSymmetricHighlighting(String baseString, String modifiedString, String separator) {\n        List<String> stringList = Arrays.asList(baseString.split(separator));\n        List<Text> result = stringList.stream().map(text -> DiffHighlighting.forUnchanged(text + separator)).collect(Collectors.toList());\n        List<AbstractDelta<String>> deltaList;\n        try {\n            deltaList = DiffUtils.diff(stringList, Arrays.asList(modifiedString.split(separator))).getDeltas();\n        } catch (DiffException e) {\n            LOGGER.error(\"Error while generating diff of \" + baseString + \" and \" + modifiedString);\n            return Collections.emptyList();\n        }\n        Collections.reverse(deltaList);\n        for (AbstractDelta<String> delta : deltaList) {\n            int startPos = delta.getSource().getPosition();\n            List<String> lines = delta.getSource().getLines();\n            int offset = 0;\n            switch (delta.getType()) {\n                case CHANGE:\n                    for (String line : lines) {\n                        result.set(startPos + offset, forChanged(line + separator));\n                        offset++;\n                    }\n                    break;\n                case DELETE:\n                    for (String line : lines) {\n                        result.set(startPos + offset, forAdded(line + separator));\n                        offset++;\n                    }\n                    break;\n                case INSERT:\n                    break;\n                default:\n                    break;\n            }\n        }\n\n        return result;\n    }\n","date":"2018-11-24 01:19:38","endLine":123,"groupId":"11862","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"generateSymmetricHighlighting","params":"(StringbaseString@StringmodifiedString@Stringseparator)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/ac/ffbc7acc01d8828a0d8c5bfa7ee6b41bba7982.src","preCode":"    public static List<Text> generateSymmetricHighlighting(String baseString, String modifiedString, String separator) {\n        List<String> stringList = Arrays.asList(baseString.split(separator));\n        List<Text> result = stringList.stream().map(text -> DiffHighlighting.forUnchanged(text + separator)).collect(Collectors.toList());\n        List<AbstractDelta<String>> deltaList;\n        try {\n            deltaList = DiffUtils.diff(stringList, Arrays.asList(modifiedString.split(separator))).getDeltas();\n        } catch (DiffException e) {\n            LOGGER.error(\"Error while generating diff of \" + baseString + \" and \" + modifiedString);\n            return Collections.emptyList();\n        }\n        Collections.reverse(deltaList);\n        for (AbstractDelta<String> delta : deltaList) {\n            int startPos = delta.getSource().getPosition();\n            List<String> lines = delta.getSource().getLines();\n            int offset = 0;\n            switch (delta.getType()) {\n                case CHANGE:\n                    for (String line : lines) {\n                        result.set(startPos + offset, forChanged(line + separator));\n                        offset++;\n                    }\n                    break;\n                case DELETE:\n                    for (String line : lines) {\n                        result.set(startPos + offset, forAdded(line + separator));\n                        offset++;\n                    }\n                    break;\n                case INSERT:\n                    break;\n                default:\n                    break;\n            }\n        }\n\n        return result;\n    }\n","realPath":"src/main/java/org/jabref/gui/mergeentries/DiffHighlighting.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":87,"status":"N"}],"commitId":"72dbfa7a492be39bd86e1c4c38b7cf37c6418863","commitMessage":"@@@Merge pull request #5214 from JabRef/fix-diff-dialog-missing-spaces\n\n","date":"2019-08-24 20:44:34","modifiedFileCount":"1","status":"M","submitter":"Linus Dietz"},{"authorTime":"2020-04-28 15:12:24","codes":[{"authorDate":"2020-04-28 15:12:24","commitOrder":4,"curCode":"    public static List<Text> generateDiffHighlighting(String baseString, String modifiedString, String separator) {\n        List<String> stringList = Arrays.asList(baseString.split(separator));\n        List<Text> result = stringList.stream().map(text -> forUnchanged(text + separator)).collect(Collectors.toList());\n        List<AbstractDelta<String>> deltaList = DiffUtils.diff(stringList, Arrays.asList(modifiedString.split(separator))).getDeltas();\n        Collections.reverse(deltaList);\n        for (AbstractDelta<String> delta : deltaList) {\n            int startPos = delta.getSource().getPosition();\n            List<String> lines = delta.getSource().getLines();\n            int offset = 0;\n            switch (delta.getType()) {\n                case CHANGE:\n                    for (String line : lines) {\n                        result.set(startPos + offset, forRemoved(line + separator));\n                        offset++;\n                    }\n                    result.set(startPos + offset - 1, forRemoved(stringList.get((startPos + offset) - 1) + separator));\n                    result.add(startPos + offset, forAdded(String.join(separator, delta.getTarget().getLines())));\n                    break;\n                case DELETE:\n                    for (String line : lines) {\n                        result.set(startPos + offset, forRemoved(line + separator));\n                        offset++;\n                    }\n                    break;\n                case INSERT:\n                    result.add(delta.getSource().getPosition(), forAdded(String.join(separator, delta.getTarget().getLines())));\n                    break;\n                default:\n                    break;\n            }\n        }\n        return result;\n    }\n","date":"2020-04-28 15:12:24","endLine":54,"groupId":"10960","id":5,"instanceNumber":1,"isCurCommit":1,"methodName":"generateDiffHighlighting","params":"(StringbaseString@StringmodifiedString@Stringseparator)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/51/4ce4fe370930fe4055b85fb8cb7f0d385ceedd.src","preCode":"    public static List<Text> generateDiffHighlighting(String baseString, String modifiedString, String separator) {\n        List<String> stringList = Arrays.asList(baseString.split(separator));\n        List<Text> result = stringList.stream().map(text -> forUnchanged(text + separator)).collect(Collectors.toList());\n        List<AbstractDelta<String>> deltaList;\n        try {\n            deltaList = DiffUtils.diff(stringList, Arrays.asList(modifiedString.split(separator))).getDeltas();\n        } catch (DiffException e) {\n            LOGGER.error(\"Error while generating diff of \" + baseString + \" and \" + modifiedString);\n            return Collections.emptyList();\n        }\n        Collections.reverse(deltaList);\n        for (AbstractDelta<String> delta : deltaList) {\n            int startPos = delta.getSource().getPosition();\n            List<String> lines = delta.getSource().getLines();\n            int offset = 0;\n            switch (delta.getType()) {\n                case CHANGE:\n                    for (String line : lines) {\n                        result.set(startPos + offset, forRemoved(line + separator));\n                        offset++;\n                    }\n                    result.set(startPos + offset - 1, forRemoved(stringList.get((startPos + offset) - 1) + separator));\n                    result.add(startPos + offset, forAdded(String.join(separator, delta.getTarget().getLines())));\n                    break;\n                case DELETE:\n                    for (String line : lines) {\n                        result.set(startPos + offset, forRemoved(line + separator));\n                        offset++;\n                    }\n                    break;\n                case INSERT:\n                    result.add(delta.getSource().getPosition(), forAdded(String.join(separator, delta.getTarget().getLines())));\n                    break;\n                default:\n                    break;\n            }\n        }\n        return result;\n    }\n","realPath":"src/main/java/org/jabref/gui/mergeentries/DiffHighlighting.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":22,"status":"M"},{"authorDate":"2020-04-28 15:12:24","commitOrder":4,"curCode":"    public static List<Text> generateSymmetricHighlighting(String baseString, String modifiedString, String separator) {\n        List<String> stringList = Arrays.asList(baseString.split(separator));\n        List<Text> result = stringList.stream().map(text -> DiffHighlighting.forUnchanged(text + separator)).collect(Collectors.toList());\n        List<AbstractDelta<String>> deltaList = DiffUtils.diff(stringList, Arrays.asList(modifiedString.split(separator))).getDeltas();\n        Collections.reverse(deltaList);\n        for (AbstractDelta<String> delta : deltaList) {\n            int startPos = delta.getSource().getPosition();\n            List<String> lines = delta.getSource().getLines();\n            int offset = 0;\n            switch (delta.getType()) {\n                case CHANGE:\n                    for (String line : lines) {\n                        result.set(startPos + offset, forChanged(line + separator));\n                        offset++;\n                    }\n                    break;\n                case DELETE:\n                    for (String line : lines) {\n                        result.set(startPos + offset, forAdded(line + separator));\n                        offset++;\n                    }\n                    break;\n                case INSERT:\n                    break;\n                default:\n                    break;\n            }\n        }\n\n        return result;\n    }\n","date":"2020-04-28 15:12:24","endLine":110,"groupId":"10960","id":6,"instanceNumber":2,"isCurCommit":1,"methodName":"generateSymmetricHighlighting","params":"(StringbaseString@StringmodifiedString@Stringseparator)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/51/4ce4fe370930fe4055b85fb8cb7f0d385ceedd.src","preCode":"    public static List<Text> generateSymmetricHighlighting(String baseString, String modifiedString, String separator) {\n        List<String> stringList = Arrays.asList(baseString.split(separator));\n        List<Text> result = stringList.stream().map(text -> DiffHighlighting.forUnchanged(text + separator)).collect(Collectors.toList());\n        List<AbstractDelta<String>> deltaList;\n        try {\n            deltaList = DiffUtils.diff(stringList, Arrays.asList(modifiedString.split(separator))).getDeltas();\n        } catch (DiffException e) {\n            LOGGER.error(\"Error while generating diff of \" + baseString + \" and \" + modifiedString);\n            return Collections.emptyList();\n        }\n        Collections.reverse(deltaList);\n        for (AbstractDelta<String> delta : deltaList) {\n            int startPos = delta.getSource().getPosition();\n            List<String> lines = delta.getSource().getLines();\n            int offset = 0;\n            switch (delta.getType()) {\n                case CHANGE:\n                    for (String line : lines) {\n                        result.set(startPos + offset, forChanged(line + separator));\n                        offset++;\n                    }\n                    break;\n                case DELETE:\n                    for (String line : lines) {\n                        result.set(startPos + offset, forAdded(line + separator));\n                        offset++;\n                    }\n                    break;\n                case INSERT:\n                    break;\n                default:\n                    break;\n            }\n        }\n\n        return result;\n    }\n","realPath":"src/main/java/org/jabref/gui/mergeentries/DiffHighlighting.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":80,"status":"M"}],"commitId":"2f848f70dd3dafa8705f2c4eee91602c1a471f5e","commitMessage":"@@@Bump java-diff-utils from 4.5 to 4.7 (#6365)\n\n* Bump java-diff-utils from 4.5 to 4.7\n\nBumps [java-diff-utils](https://github.com/java-diff-utils/java-diff-utils) from 4.5 to 4.7.\n- [Release notes](https://github.com/java-diff-utils/java-diff-utils/releases)\n- [Changelog](https://github.com/java-diff-utils/java-diff-utils/blob/master/CHANGELOG.md)\n- [Commits](https://github.com/java-diff-utils/java-diff-utils/compare/java-diff-utils-parent-4.5...java-diff-utils-parent-4.7)\n\nSigned-off-by: dependabot-preview[bot] <support@dependabot.com>\n\n* Update DiffHighlighting.java\n\n* Update DiffHighlighting.java\n\nCo-authored-by: dependabot-preview[bot] <27856297+dependabot-preview[bot]@users.noreply.github.com>\nCo-authored-by: Tobias Diez <tobiasdiez@gmx.de>","date":"2020-04-28 15:12:24","modifiedFileCount":"1","status":"M","submitter":"dependabot-preview[bot]"}]
