[{"authorTime":"2020-08-31 22:56:34","codes":[{"authorDate":"2020-08-31 22:56:34","commitOrder":4,"curCode":"    public <T> Optional<T> showChoiceDialogAndWait(String title, String content, String okButtonLabel, T defaultChoice, Collection<T> choices) {\n        ChoiceDialog<T> choiceDialog = new ChoiceDialog<>(defaultChoice, choices);\n        ((Stage) choiceDialog.getDialogPane().getScene().getWindow()).getIcons().add(IconTheme.getJabRefImageFX());\n        ButtonType okButtonType = new ButtonType(okButtonLabel, ButtonBar.ButtonData.OK_DONE);\n        choiceDialog.getDialogPane().getButtonTypes().setAll(ButtonType.CANCEL, okButtonType);\n        choiceDialog.setHeaderText(title);\n        choiceDialog.setTitle(title);\n        choiceDialog.setContentText(content);\n        preferences.getTheme().installCss(choiceDialog.getDialogPane().getScene());\n        return choiceDialog.showAndWait();\n    }\n","date":"2020-08-31 22:56:34","endLine":141,"groupId":"8829","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"showChoiceDialogAndWait","params":"(Stringtitle@Stringcontent@StringokButtonLabel@TdefaultChoice@Collection<T>choices)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/29/2486b146a7cf5e092cc1248228a6f1b060bb36.src","preCode":"    public <T> Optional<T> showChoiceDialogAndWait(String title, String content, String okButtonLabel, T defaultChoice, Collection<T> choices) {\n        ChoiceDialog<T> choiceDialog = new ChoiceDialog<>(defaultChoice, choices);\n        ((Stage) choiceDialog.getDialogPane().getScene().getWindow()).getIcons().add(IconTheme.getJabRefImageFX());\n        ButtonType okButtonType = new ButtonType(okButtonLabel, ButtonBar.ButtonData.OK_DONE);\n        choiceDialog.getDialogPane().getButtonTypes().setAll(ButtonType.CANCEL, okButtonType);\n        choiceDialog.setHeaderText(title);\n        choiceDialog.setTitle(title);\n        choiceDialog.setContentText(content);\n        preferences.getTheme().installCss(choiceDialog.getDialogPane().getScene());\n        return choiceDialog.showAndWait();\n    }\n","realPath":"src/main/java/org/jabref/gui/JabRefDialogService.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":131,"status":"MB"},{"authorDate":"2020-08-31 22:56:34","commitOrder":4,"curCode":"    public Optional<String> showInputDialogAndWait(String title, String content) {\n        TextInputDialog inputDialog = new TextInputDialog();\n        inputDialog.setHeaderText(title);\n        inputDialog.setContentText(content);\n        preferences.getTheme().installCss(inputDialog.getDialogPane().getScene());\n        return inputDialog.showAndWait();\n    }\n","date":"2020-08-31 22:56:34","endLine":150,"groupId":"8829","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"showInputDialogAndWait","params":"(Stringtitle@Stringcontent)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/29/2486b146a7cf5e092cc1248228a6f1b060bb36.src","preCode":"    public Optional<String> showInputDialogAndWait(String title, String content) {\n        TextInputDialog inputDialog = new TextInputDialog();\n        inputDialog.setHeaderText(title);\n        inputDialog.setContentText(content);\n        preferences.getTheme().installCss(inputDialog.getDialogPane().getScene());\n        return inputDialog.showAndWait();\n    }\n","realPath":"src/main/java/org/jabref/gui/JabRefDialogService.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":144,"status":"B"}],"commitId":"43c8ba2ea27264f42fed4a96c9f4d24a54a97f47","commitMessage":"@@@Add CSS Customisation (#6725)\n\n* feat/#1 Add CSS file type.  add button in preferences to import custom CSS file.  started on import functionality\n\n* feat/#1 Change so that the log messages uses format specifiers instead of string concatenation\n\n* feat/#1 Add RadioButton for toggling custom theme\n\n* feat/#1 Add preference for setting path to custom CSS theme\n\n* feat/#1 Load custom CSS if toggled\n\n* feat/#1 Add missing language keys\n\n* feat/#1 Remove check if current theme is applied again.  check is remove since we don't need it\n\n* feat/#1 Save path to custom CSS file in program preferences\n\n* Add functionality to let the user import custom CSS file #5790\n\n* Add CSS file type.  add button in preferences to import a custom CSS file.  started on import functionality\n\n* Change so that the log uses format specifiers instead of string concatenation\n\n* Add RadioButton for toggling custom theme\n\n* Add preference for setting the path to custom CSS theme\n\n* Load custom CSS if toggled\n\n* Add missing language keys\n\n* Remove check if the current theme is applied again.  the check is removed since we don't need it\n\n* Save path to the custom CSS file in program preferences\n\n* fix/#5 Add checks so that the theme change notification is only shown once.  disable custom theme radio button i no custom theme has been imported\n\n* Remove added stuff from merge conflict\n\n* Add export current theme #5790\n\n* Add method for saving theme to file\n\n* Add modal for selection witch theme to export as CSS\n\n* Add missing language lines\n\n* Add information about import/export of themes.  #5790\n\n* Fix CodaCy and checkstyle issues.  #5790\n\n* Add fixes from code review.  #5790\n\n* Remove unused import #5790\n\n* Move the import/export buttons to the Appearance tab #5790\n\n* Fixed merge errors\n\n* Fixed easy remarks\n\n* Introduced AppereancePreferences and changed some visual elements\n\n* Refactored ExportThemeDialog\n\n* Fixed merge error\n\n* Removed export theme logic and added validation\n\n* CHANGELOG.md\n\n* Removed obsolete viewmodel class\n\n* Refactored io.File to nio.Path.  use of JabRefPreferences and removed vmOption\n\n* Refactored ThemeLoader object class to enum with static util methods\n\n* Fixed overlooked merge error\n\n* Refactored static methods to object methods\n\n* Checkstyle\n\nCo-authored-by: Nils Streijffert <nils.streijffert@gmail.com>\nCo-authored-by: Christoph <siedlerkiller@gmail.com>","date":"2020-08-31 22:56:34","modifiedFileCount":"13","status":"M","submitter":"Carl Christian Snethlage"},{"authorTime":"2021-01-03 00:34:40","codes":[{"authorDate":"2021-01-03 00:34:40","commitOrder":5,"curCode":"    public <T> Optional<T> showChoiceDialogAndWait(String title, String content, String okButtonLabel, T defaultChoice, Collection<T> choices) {\n        ChoiceDialog<T> choiceDialog = new ChoiceDialog<>(defaultChoice, choices);\n        ((Stage) choiceDialog.getDialogPane().getScene().getWindow()).getIcons().add(IconTheme.getJabRefImageFX());\n        ButtonType okButtonType = new ButtonType(okButtonLabel, ButtonBar.ButtonData.OK_DONE);\n        choiceDialog.getDialogPane().getButtonTypes().setAll(ButtonType.CANCEL, okButtonType);\n        choiceDialog.setHeaderText(title);\n        choiceDialog.setTitle(title);\n        choiceDialog.setContentText(content);\n        choiceDialog.initOwner(mainWindow);\n        preferences.getTheme().installCss(choiceDialog.getDialogPane().getScene());\n        return choiceDialog.showAndWait();\n    }\n","date":"2021-01-03 00:34:40","endLine":145,"groupId":"8829","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"showChoiceDialogAndWait","params":"(Stringtitle@Stringcontent@StringokButtonLabel@TdefaultChoice@Collection<T>choices)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/2f/fe0ad1ae4b3344f6259d46bafb883b0a29c921.src","preCode":"    public <T> Optional<T> showChoiceDialogAndWait(String title, String content, String okButtonLabel, T defaultChoice, Collection<T> choices) {\n        ChoiceDialog<T> choiceDialog = new ChoiceDialog<>(defaultChoice, choices);\n        ((Stage) choiceDialog.getDialogPane().getScene().getWindow()).getIcons().add(IconTheme.getJabRefImageFX());\n        ButtonType okButtonType = new ButtonType(okButtonLabel, ButtonBar.ButtonData.OK_DONE);\n        choiceDialog.getDialogPane().getButtonTypes().setAll(ButtonType.CANCEL, okButtonType);\n        choiceDialog.setHeaderText(title);\n        choiceDialog.setTitle(title);\n        choiceDialog.setContentText(content);\n        preferences.getTheme().installCss(choiceDialog.getDialogPane().getScene());\n        return choiceDialog.showAndWait();\n    }\n","realPath":"src/main/java/org/jabref/gui/JabRefDialogService.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":134,"status":"M"},{"authorDate":"2021-01-03 00:34:40","commitOrder":5,"curCode":"    public Optional<String> showInputDialogAndWait(String title, String content) {\n        TextInputDialog inputDialog = new TextInputDialog();\n        inputDialog.setHeaderText(title);\n        inputDialog.setContentText(content);\n        inputDialog.initOwner(mainWindow);\n        preferences.getTheme().installCss(inputDialog.getDialogPane().getScene());\n        return inputDialog.showAndWait();\n    }\n","date":"2021-01-03 00:34:40","endLine":155,"groupId":"8829","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"showInputDialogAndWait","params":"(Stringtitle@Stringcontent)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/2f/fe0ad1ae4b3344f6259d46bafb883b0a29c921.src","preCode":"    public Optional<String> showInputDialogAndWait(String title, String content) {\n        TextInputDialog inputDialog = new TextInputDialog();\n        inputDialog.setHeaderText(title);\n        inputDialog.setContentText(content);\n        preferences.getTheme().installCss(inputDialog.getDialogPane().getScene());\n        return inputDialog.showAndWait();\n    }\n","realPath":"src/main/java/org/jabref/gui/JabRefDialogService.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":148,"status":"M"}],"commitId":"0b4be8a1417fd7053646bfe10ef22d37614683a9","commitMessage":"@@@Fix for application dialogs opening in wrong displays (#7273)\n\n* [WIP] Fix for application dialogs opening in wrong displays\n\n* [WIP] Fix for application dialogs opening in wrong displays\n\n* [WIP] Fix for application dialogs opening in wrong displays\n\n* [WIP] Fix for application dialogs opening in wrong displays\n\n* Fix for application dialogs opening in wrong displays\n\n- Rename DialogService.show() method to showCustomDialog()\n- Rename showCustomDialog()'s argument\n- Add documentation to showCustomDialog method\n- Make createDialog and createDialogWithOptOut non static\n\n* Add change description to CHANGELOG.md\n\n* Drop unneeded test AboutActionTest\n\n* Document guidelines for creating a new dialog\n\n* Document guidelines for creating a new dialog","date":"2021-01-03 00:34:40","modifiedFileCount":"51","status":"M","submitter":"Fiyinfolu Eludire"},{"authorTime":"2021-01-03 00:34:40","codes":[{"authorDate":"2021-02-24 05:56:42","commitOrder":6,"curCode":"    public <T> Optional<T> showChoiceDialogAndWait(String title, String content, String okButtonLabel, T defaultChoice, Collection<T> choices) {\n        ChoiceDialog<T> choiceDialog = new ChoiceDialog<>(defaultChoice, choices);\n        ((Stage) choiceDialog.getDialogPane().getScene().getWindow()).getIcons().add(IconTheme.getJabRefImage());\n        ButtonType okButtonType = new ButtonType(okButtonLabel, ButtonBar.ButtonData.OK_DONE);\n        choiceDialog.getDialogPane().getButtonTypes().setAll(ButtonType.CANCEL, okButtonType);\n        choiceDialog.setHeaderText(title);\n        choiceDialog.setTitle(title);\n        choiceDialog.setContentText(content);\n        choiceDialog.initOwner(mainWindow);\n        preferences.getTheme().installCss(choiceDialog.getDialogPane().getScene());\n        return choiceDialog.showAndWait();\n    }\n","date":"2021-02-24 05:56:42","endLine":145,"groupId":"10918","id":5,"instanceNumber":1,"isCurCommit":1,"methodName":"showChoiceDialogAndWait","params":"(Stringtitle@Stringcontent@StringokButtonLabel@TdefaultChoice@Collection<T>choices)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/a3/bf7ea74f02e689af2e1aecb5a74ee3bae113e7.src","preCode":"    public <T> Optional<T> showChoiceDialogAndWait(String title, String content, String okButtonLabel, T defaultChoice, Collection<T> choices) {\n        ChoiceDialog<T> choiceDialog = new ChoiceDialog<>(defaultChoice, choices);\n        ((Stage) choiceDialog.getDialogPane().getScene().getWindow()).getIcons().add(IconTheme.getJabRefImageFX());\n        ButtonType okButtonType = new ButtonType(okButtonLabel, ButtonBar.ButtonData.OK_DONE);\n        choiceDialog.getDialogPane().getButtonTypes().setAll(ButtonType.CANCEL, okButtonType);\n        choiceDialog.setHeaderText(title);\n        choiceDialog.setTitle(title);\n        choiceDialog.setContentText(content);\n        choiceDialog.initOwner(mainWindow);\n        preferences.getTheme().installCss(choiceDialog.getDialogPane().getScene());\n        return choiceDialog.showAndWait();\n    }\n","realPath":"src/main/java/org/jabref/gui/JabRefDialogService.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":134,"status":"M"},{"authorDate":"2021-01-03 00:34:40","commitOrder":6,"curCode":"    public Optional<String> showInputDialogAndWait(String title, String content) {\n        TextInputDialog inputDialog = new TextInputDialog();\n        inputDialog.setHeaderText(title);\n        inputDialog.setContentText(content);\n        inputDialog.initOwner(mainWindow);\n        preferences.getTheme().installCss(inputDialog.getDialogPane().getScene());\n        return inputDialog.showAndWait();\n    }\n","date":"2021-01-03 00:34:40","endLine":155,"groupId":"10918","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"showInputDialogAndWait","params":"(Stringtitle@Stringcontent)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/2f/fe0ad1ae4b3344f6259d46bafb883b0a29c921.src","preCode":"    public Optional<String> showInputDialogAndWait(String title, String content) {\n        TextInputDialog inputDialog = new TextInputDialog();\n        inputDialog.setHeaderText(title);\n        inputDialog.setContentText(content);\n        inputDialog.initOwner(mainWindow);\n        preferences.getTheme().installCss(inputDialog.getDialogPane().getScene());\n        return inputDialog.showAndWait();\n    }\n","realPath":"src/main/java/org/jabref/gui/JabRefDialogService.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":148,"status":"N"}],"commitId":"e50566aa00e42cfc459d27eb3ac13934ce5535d8","commitMessage":"@@@Switch to Ikonli (#7424)\n\n* [WIP] Switch to Ikonliy\n\nNeeds some more changes\n\n* Add provider for own icons\n\n* todo fix jabreficonview\n\n* add getIkon method\n\n* try with font family\n\n* Fix loading of icons\n\n* fix groups icon parsing\n\n* convert em to px\n\n* Fix glyphSize property missing getter! Argh!\n\n* checkstyle\n\n* change to search web\n\n* fix checsktyle\nremove fontawesomefx update checker rule from gradle\n\n* remove some obsolete getters\ntry fix gui test\n\n* lazy load icons\n\n* try with ikonli in test modules\n\n* try with add reads :(\n\n* try again with modules\n\n* try again with reading\n\n* add service provider\n\n* fix test by adding missing service provider","date":"2021-02-24 05:56:42","modifiedFileCount":"12","status":"M","submitter":"Christoph"}]
