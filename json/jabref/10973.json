[{"authorTime":"2019-08-02 15:20:10","codes":[{"authorDate":"2019-08-02 15:20:10","commitOrder":1,"curCode":"    protected SortedSet<Field> determineFieldsToShow(BibEntry entry) {\n        Optional<BibEntryType> entryType = Globals.entryTypesManager.enrich(entry.getType(), databaseContext.getMode());\n        if (entryType.isPresent()) {\n            return entryType.get().getPrimaryOptionalFields().stream().map(BibField::getField).collect(Collectors.toCollection(() -> new TreeSet<>(Comparator.comparing(Field::getName))));\n        } else {\n            \r\n            return Collections.emptySortedSet();\n        }\n    }\n","date":"2019-08-02 15:20:10","endLine":43,"groupId":"1566","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"determineFieldsToShow","params":"(BibEntryentry)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/ab/78b7e6677836c49279b8bc1a4699650c41ddc8.src","preCode":"    protected SortedSet<Field> determineFieldsToShow(BibEntry entry) {\n        Optional<BibEntryType> entryType = Globals.entryTypesManager.enrich(entry.getType(), databaseContext.getMode());\n        if (entryType.isPresent()) {\n            return entryType.get().getPrimaryOptionalFields().stream().map(BibField::getField).collect(Collectors.toCollection(() -> new TreeSet<>(Comparator.comparing(Field::getName))));\n        } else {\n            \r\n            return Collections.emptySortedSet();\n        }\n    }\n","realPath":"src/main/java/org/jabref/gui/entryeditor/OptionalFieldsTab.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":35,"status":"B"},{"authorDate":"2019-08-02 15:20:10","commitOrder":1,"curCode":"    protected SortedSet<Field> determineFieldsToShow(BibEntry entry) {\n        Optional<BibEntryType> entryType = Globals.entryTypesManager.enrich(entry.getType(), databaseContext.getMode());\n        if (entryType.isPresent()) {\n            return entryType.get().getSecondaryOptionalNotDeprecatedFields();\n        } else {\n            \r\n            return Collections.emptySortedSet();\n        }\n    }\n","date":"2019-08-02 15:20:10","endLine":39,"groupId":"13198","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"determineFieldsToShow","params":"(BibEntryentry)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/13/305dad0b40fe330c558904feeb41fc84a2f89a.src","preCode":"    protected SortedSet<Field> determineFieldsToShow(BibEntry entry) {\n        Optional<BibEntryType> entryType = Globals.entryTypesManager.enrich(entry.getType(), databaseContext.getMode());\n        if (entryType.isPresent()) {\n            return entryType.get().getSecondaryOptionalNotDeprecatedFields();\n        } else {\n            \r\n            return Collections.emptySortedSet();\n        }\n    }\n","realPath":"src/main/java/org/jabref/gui/entryeditor/OptionalFields2Tab.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":31,"status":"B"}],"commitId":"4b39b78e4afcd6c36b385f5c46f1d9a4eac2e29b","commitMessage":"@@@Move to extended enums for fields and entry types (#5148)\n\n* Introduce interface for fields\n\n* Continue using fields interface instead of strings\n\n* Introduce OrFields class\n\n* Move FieldProperty\n\n* Convert entry types to extended enum\n\n* Start fixing build\n\n* Fix build\n\n* Start fixing tests\n\n* Everything compiles again\n\n* Make model tests pass\n\n* Fix most tests\n\n* Fix build\n\n* Fix a few more tests\n\n* Fix a few more tests\n\n* Fix a few more tests\n\n* Fix a few more tests\n\n* Fix checkstyle issues\n\n* Fix more tests\n\n* Fix more tests\n\n* Disable test that fails on CI\n\n* Disable test that fails on CI\n","date":"2019-08-02 15:20:10","modifiedFileCount":"439","status":"B","submitter":"Tobias Diez"},{"authorTime":"2019-10-17 03:01:50","codes":[{"authorDate":"2019-10-17 03:01:50","commitOrder":2,"curCode":"    protected SortedSet<Field> determineFieldsToShow(BibEntry entry) {\n        Optional<BibEntryType> entryType = entryTypesManager.enrich(entry.getType(), databaseContext.getMode());\n        if (entryType.isPresent()) {\n            return entryType.get().getPrimaryOptionalFields().stream().map(BibField::getField).collect(Collectors.toCollection(() -> new TreeSet<>(Comparator.comparing(Field::getName))));\n        } else {\n            \r\n            return Collections.emptySortedSet();\n        }\n    }\n","date":"2019-10-17 03:01:50","endLine":50,"groupId":"1566","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"determineFieldsToShow","params":"(BibEntryentry)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/80/5105f956a16e2020738a81026baca30249c54e.src","preCode":"    protected SortedSet<Field> determineFieldsToShow(BibEntry entry) {\n        Optional<BibEntryType> entryType = Globals.entryTypesManager.enrich(entry.getType(), databaseContext.getMode());\n        if (entryType.isPresent()) {\n            return entryType.get().getPrimaryOptionalFields().stream().map(BibField::getField).collect(Collectors.toCollection(() -> new TreeSet<>(Comparator.comparing(Field::getName))));\n        } else {\n            \r\n            return Collections.emptySortedSet();\n        }\n    }\n","realPath":"src/main/java/org/jabref/gui/entryeditor/OptionalFieldsTab.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":42,"status":"M"},{"authorDate":"2019-10-17 03:01:50","commitOrder":2,"curCode":"    protected SortedSet<Field> determineFieldsToShow(BibEntry entry) {\n        Optional<BibEntryType> entryType = entryTypesManager.enrich(entry.getType(), databaseContext.getMode());\n        if (entryType.isPresent()) {\n            return entryType.get().getSecondaryOptionalNotDeprecatedFields();\n        } else {\n            \r\n            return Collections.emptySortedSet();\n        }\n    }\n","date":"2019-10-17 03:01:50","endLine":47,"groupId":"13198","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"determineFieldsToShow","params":"(BibEntryentry)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/75/53bc46496ca0c4a21d5beb8dba9ee116ccfea3.src","preCode":"    protected SortedSet<Field> determineFieldsToShow(BibEntry entry) {\n        Optional<BibEntryType> entryType = Globals.entryTypesManager.enrich(entry.getType(), databaseContext.getMode());\n        if (entryType.isPresent()) {\n            return entryType.get().getSecondaryOptionalNotDeprecatedFields();\n        } else {\n            \r\n            return Collections.emptySortedSet();\n        }\n    }\n","realPath":"src/main/java/org/jabref/gui/entryeditor/OptionalFields2Tab.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":39,"status":"M"}],"commitId":"e36daae203f263d1f5ae00761a3a01b98ec139a1","commitMessage":"@@@Add option to display entry preview as tab in entry editor (#5451)\n\n* Add option to display entry preview as tab in entry editor\n\nAdds the entry preview as a tab. Fixes #5244. Plus a bit of refactoring\n\n* Fix checkstyle\n\n* Fix checkstyle part 2\n","date":"2019-10-17 03:01:50","modifiedFileCount":"13","status":"M","submitter":"Tobias Diez"},{"authorTime":"2020-07-01 23:18:08","codes":[{"authorDate":"2020-07-01 23:18:08","commitOrder":3,"curCode":"    protected Set<Field> determineFieldsToShow(BibEntry entry) {\n        Optional<BibEntryType> entryType = entryTypesManager.enrich(entry.getType(), databaseContext.getMode());\n        if (entryType.isPresent()) {\n            return entryType.get().getPrimaryOptionalFields();\n        } else {\n            \r\n            return Collections.emptySet();\n        }\n    }\n","date":"2020-07-01 23:18:08","endLine":46,"groupId":"10973","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"determineFieldsToShow","params":"(BibEntryentry)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/38/bdf973bb9db08533a0155e121bf212ab7bd335.src","preCode":"    protected SortedSet<Field> determineFieldsToShow(BibEntry entry) {\n        Optional<BibEntryType> entryType = entryTypesManager.enrich(entry.getType(), databaseContext.getMode());\n        if (entryType.isPresent()) {\n            return entryType.get().getPrimaryOptionalFields().stream().map(BibField::getField).collect(Collectors.toCollection(() -> new TreeSet<>(Comparator.comparing(Field::getName))));\n        } else {\n            \r\n            return Collections.emptySortedSet();\n        }\n    }\n","realPath":"src/main/java/org/jabref/gui/entryeditor/OptionalFieldsTab.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":38,"status":"M"},{"authorDate":"2020-07-01 23:18:08","commitOrder":3,"curCode":"    protected Set<Field> determineFieldsToShow(BibEntry entry) {\n        Optional<BibEntryType> entryType = entryTypesManager.enrich(entry.getType(), databaseContext.getMode());\n        if (entryType.isPresent()) {\n            return entryType.get().getSecondaryOptionalNotDeprecatedFields();\n        } else {\n            \r\n            return Collections.emptySet();\n        }\n    }\n","date":"2020-07-01 23:18:08","endLine":47,"groupId":"10973","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"determineFieldsToShow","params":"(BibEntryentry)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/b0/82691ca87685c644971b45d0e58872f33671e4.src","preCode":"    protected SortedSet<Field> determineFieldsToShow(BibEntry entry) {\n        Optional<BibEntryType> entryType = entryTypesManager.enrich(entry.getType(), databaseContext.getMode());\n        if (entryType.isPresent()) {\n            return entryType.get().getSecondaryOptionalNotDeprecatedFields();\n        } else {\n            \r\n            return Collections.emptySortedSet();\n        }\n    }\n","realPath":"src/main/java/org/jabref/gui/entryeditor/OptionalFields2Tab.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":39,"status":"M"}],"commitId":"c83ea3fd22a5ce53f7fd0d14422a9b5f33ad55ed","commitMessage":"@@@Merge pull request #6152 from JabRef/allowReordering\n\nAllow reordering of custom entry types fields","date":"2020-07-01 23:18:08","modifiedFileCount":"24","status":"M","submitter":"Christoph"}]
