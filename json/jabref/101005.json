[{"authorTime":"2020-07-09 17:48:40","codes":[{"authorDate":"2017-03-20 02:16:05","commitOrder":3,"curCode":"    private String toAuthors(JSONArray authors) {\n        if (authors == null) {\n            return \"\";\n        }\n\n        \r\n        AuthorList authorsParsed = new AuthorList();\n        for (int i = 0; i < authors.length(); i++) {\n            JSONObject author = authors.getJSONObject(i);\n            authorsParsed.addAuthor(\n                    author.optString(\"given\", \"\"),\n                    \"\",\n                    \"\",\n                    author.optString(\"family\", \"\"),\n                    \"\");\n        }\n        return authorsParsed.getAsFirstLastNamesWithAnd();\n    }\n","date":"2017-03-20 02:16:05","endLine":152,"groupId":"7768","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"toAuthors","params":"(JSONArrayauthors)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/1e/b152fa33d052b7bf2f1c8b369af21a339b4db6.src","preCode":"    private String toAuthors(JSONArray authors) {\n        if (authors == null) {\n            return \"\";\n        }\n\n        \r\n        AuthorList authorsParsed = new AuthorList();\n        for (int i = 0; i < authors.length(); i++) {\n            JSONObject author = authors.getJSONObject(i);\n            authorsParsed.addAuthor(\n                    author.optString(\"given\", \"\"),\n                    \"\",\n                    \"\",\n                    author.optString(\"family\", \"\"),\n                    \"\");\n        }\n        return authorsParsed.getAsFirstLastNamesWithAnd();\n    }\n","realPath":"src/main/java/org/jabref/logic/importer/fetcher/CrossRef.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":135,"status":"NB"},{"authorDate":"2020-07-09 17:48:40","commitOrder":3,"curCode":"    private String toAuthors(JSONArray authors) {\n        if (authors == null) {\n            return \"\";\n        }\n\n        \r\n        AuthorList authorsParsed = new AuthorList();\n        String name = \"\";\n\n        for (int i = 0; i < authors.length(); i++) {\n            JSONObject author = authors.getJSONObject(i);\n            if (author.has(\"literal\")) {\n                \r\n                authorsParsed.addAuthor(author.getString(\"literal\"), \"\", \"\", \"\", \"\");\n            } else {\n                authorsParsed.addAuthor(author.optString(\"given\", \"\"), \"\", \"\", author.optString(\"family\", \"\"), \"\");\n            }\n        }\n        return authorsParsed.getAsFirstLastNamesWithAnd();\n    }\n","date":"2020-07-09 17:48:40","endLine":107,"groupId":"7809","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"toAuthors","params":"(JSONArrayauthors)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/a7/f189428888fa5444983b75931869a1fd00b85d.src","preCode":"    private String toAuthors(JSONArray authors) {\n        if (authors == null) {\n            return \"\";\n        }\n\n        \r\n        AuthorList authorsParsed = new AuthorList();\n        String name = \"\";\n\n        for (int i = 0; i < authors.length(); i++) {\n            JSONObject author = authors.getJSONObject(i);\n            if (author.has(\"literal\")) {\n                \r\n                authorsParsed.addAuthor(author.getString(\"literal\"), \"\", \"\", \"\", \"\");\n            } else {\n                authorsParsed.addAuthor(author.optString(\"given\", \"\"), \"\", \"\", author.optString(\"family\", \"\"), \"\");\n            }\n        }\n        return authorsParsed.getAsFirstLastNamesWithAnd();\n    }\n","realPath":"src/main/java/org/jabref/logic/importer/fetcher/Medra.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":88,"status":"B"}],"commitId":"20e78a4959bb2ccc0155f3a2cd4bf107c7c11352","commitMessage":"@@@mEDRA DOI fetcher implementation. (#6641)\n\n* mEDRA DOI fetcher implementation.\n\n* mEDRA DOI fetcher implementation\n\n* mEDRA DOI fetcher implementation\n\n* mEDRA DOI fetcher implementation\n\n* mEDRA DOI fetcher implementation\n\n* mEDRA DOI fetcher implementation\n\n* mEDRA DOI fetcher implementation\n\n* mEDRA DOI fetcher implementation\n\n* mEDRA DOI fetcher implementation\n\n* mEDRA DOI fetcher implementation\n\n* Revert wrong merge\n\n* mEDRA DOI fetcher implementation\n\n* Rewrite JsonReader to accept an empty input stream\n\n* Introduce \"getUrlDownloadForIdentifier\" and shrink fetcher code\n\n- Rename getURLForID to getUrlForIdentifier\n- Shrink Medra fetcher\n- Shrink CrossRef fetcher\n\n* Use parameterized tests (and add ISSN to Cisternino Paola)\n\n* Fix parsing of names\n\n* Fix checkstyle\n\n* Move \"getUrlDownload\" up to WebFetcher\n\nReastion: It is the common base of both SearchBasedParserFetcher and IdBasedParserFetcher\n\n* Use new method \"getUrlDownload\"\n\n* mEDRA DOI fetcher implementation\n\nCo-authored-by: Oliver Kopp <kopp.dev@gmail.com>\nCo-authored-by: Christoph <siedlerkiller@gmail.com>","date":"2020-07-09 17:48:40","modifiedFileCount":"20","status":"M","submitter":"Giovanni Caldarola"},{"authorTime":"2021-03-26 05:26:03","codes":[{"authorDate":"2021-03-26 05:26:03","commitOrder":4,"curCode":"    private String toAuthors(JSONArray authors) {\n        if (authors == null) {\n            return \"\";\n        }\n\n        \r\n        return IntStream.range(0, authors.length())\n                        .mapToObj(authors::getJSONObject)\n                        .map((author) -> new Author(\n                                author.optString(\"given\", \"\"), \"\", \"\",\n                                author.optString(\"family\", \"\"), \"\"))\n                        .collect(AuthorList.collect())\n                        .getAsFirstLastNamesWithAnd();\n    }\n","date":"2021-03-26 05:26:03","endLine":162,"groupId":"101005","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"toAuthors","params":"(JSONArrayauthors)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/e6/627f17f5487faf2b6de60f5b5ab09dd58a786e.src","preCode":"    private String toAuthors(JSONArray authors) {\n        if (authors == null) {\n            return \"\";\n        }\n\n        \r\n        AuthorList authorsParsed = new AuthorList();\n        for (int i = 0; i < authors.length(); i++) {\n            JSONObject author = authors.getJSONObject(i);\n            authorsParsed.addAuthor(\n                    author.optString(\"given\", \"\"),\n                    \"\",\n                    \"\",\n                    author.optString(\"family\", \"\"),\n                    \"\");\n        }\n        return authorsParsed.getAsFirstLastNamesWithAnd();\n    }\n","realPath":"src/main/java/org/jabref/logic/importer/fetcher/CrossRef.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":149,"status":"M"},{"authorDate":"2021-03-26 05:26:03","commitOrder":4,"curCode":"    private String toAuthors(JSONArray authors) {\n        if (authors == null) {\n            return \"\";\n        }\n        \r\n        return IntStream.range(0, authors.length())\n                        .mapToObj(authors::getJSONObject)\n                        .map((author) -> author.has(\"literal\") ? \r\n                                new Author(author.getString(\"literal\"), \"\", \"\", \"\", \"\") :\n                                new Author(author.optString(\"given\", \"\"), \"\", \"\", author.optString(\"family\", \"\"), \"\"))\n                        .collect(AuthorList.collect())\n                        .getAsFirstLastNamesWithAnd();\n    }\n","date":"2021-03-26 05:26:03","endLine":96,"groupId":"101005","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"toAuthors","params":"(JSONArrayauthors)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/0c/e544ae7a26fd8eb386d3c1d8ff133e194865f5.src","preCode":"    private String toAuthors(JSONArray authors) {\n        if (authors == null) {\n            return \"\";\n        }\n\n        \r\n        AuthorList authorsParsed = new AuthorList();\n        String name = \"\";\n\n        for (int i = 0; i < authors.length(); i++) {\n            JSONObject author = authors.getJSONObject(i);\n            if (author.has(\"literal\")) {\n                \r\n                authorsParsed.addAuthor(author.getString(\"literal\"), \"\", \"\", \"\", \"\");\n            } else {\n                authorsParsed.addAuthor(author.optString(\"given\", \"\"), \"\", \"\", author.optString(\"family\", \"\"), \"\");\n            }\n        }\n        return authorsParsed.getAsFirstLastNamesWithAnd();\n    }\n","realPath":"src/main/java/org/jabref/logic/importer/fetcher/Medra.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":84,"status":"M"}],"commitId":"13a4ad5caf0030d2344010518108b33bceff2872","commitMessage":"@@@Suggestions for changes in caching latex free authors (#7301)\n\n","date":"2021-03-26 05:26:03","modifiedFileCount":"10","status":"M","submitter":"Jonatan Asketorp"}]
