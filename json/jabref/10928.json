[{"authorTime":"2020-05-12 20:23:05","codes":[{"authorDate":"2020-04-28 20:19:48","commitOrder":3,"curCode":"    public Optional<ButtonType> showCustomDialogAndWait(String title, DialogPane contentPane,\n                                                        ButtonType... buttonTypes) {\n        FXDialog alert = new FXDialog(AlertType.NONE, title);\n        alert.setDialogPane(contentPane);\n        alert.getButtonTypes().setAll(buttonTypes);\n        alert.getDialogPane().setMinHeight(Region.USE_PREF_SIZE);\n        alert.setResizable(true);\n        themeLoader.installCss(alert.getDialogPane().getScene(), preferences);\n        return alert.showAndWait();\n    }\n","date":"2020-04-28 20:19:48","endLine":262,"groupId":"8646","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"showCustomDialogAndWait","params":"(Stringtitle@DialogPanecontentPane@ButtonType...buttonTypes)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/6c/0ccf376111c3653130048e9981f8842f413767.src","preCode":"    public Optional<ButtonType> showCustomDialogAndWait(String title, DialogPane contentPane,\n                                                        ButtonType... buttonTypes) {\n        FXDialog alert = new FXDialog(AlertType.NONE, title);\n        alert.setDialogPane(contentPane);\n        alert.getButtonTypes().setAll(buttonTypes);\n        alert.getDialogPane().setMinHeight(Region.USE_PREF_SIZE);\n        alert.setResizable(true);\n        themeLoader.installCss(alert.getDialogPane().getScene(), preferences);\n        return alert.showAndWait();\n    }\n","realPath":"src/main/java/org/jabref/gui/JabRefDialogService.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":253,"status":"NB"},{"authorDate":"2020-05-12 20:23:05","commitOrder":3,"curCode":"    public <V> Optional<ButtonType> showBackgroundProgressDialogAndWait(String title, String content, StateManager stateManager) {\n        TaskProgressView taskProgressView = new TaskProgressView();\n        EasyBind.listBind(taskProgressView.getTasks(), stateManager.getBackgroundTasks());\n        taskProgressView.setRetainTasks(false);\n        taskProgressView.setGraphicFactory(BackgroundTask::getIcon);\n\n        Label message = new Label(content);\n\n        VBox box = new VBox(taskProgressView, message);\n\n        DialogPane contentPane = new DialogPane();\n        contentPane.setContent(box);\n\n        FXDialog alert = new FXDialog(AlertType.WARNING, title);\n        alert.setDialogPane(contentPane);\n        alert.getButtonTypes().setAll(ButtonType.YES, ButtonType.CANCEL);\n        alert.getDialogPane().setMinHeight(Region.USE_PREF_SIZE);\n        alert.setResizable(true);\n        themeLoader.installCss(alert.getDialogPane().getScene(), preferences);\n\n        stateManager.getAnyTaskRunning().addListener((observable, oldValue, newValue) -> {\n            if (!newValue) {\n                alert.setResult(ButtonType.YES);\n                alert.close();\n            }\n        });\n\n        Dialog<ButtonType> dialog = () -> alert.showAndWait();\n\n        return showCustomDialogAndWait(dialog);\n    }\n","date":"2020-05-12 20:23:05","endLine":325,"groupId":"11796","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"showBackgroundProgressDialogAndWait","params":"(Stringtitle@Stringcontent@StateManagerstateManager)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/d1/a190c4979e96ff99600513974faddda1538115.src","preCode":"    public <V> Optional<ButtonType> showBackgroundProgressDialogAndWait(String title, String content, StateManager stateManager) {\n        TaskProgressView taskProgressView = new TaskProgressView();\n        EasyBind.listBind(taskProgressView.getTasks(), stateManager.getBackgroundTasks());\n        taskProgressView.setRetainTasks(false);\n        taskProgressView.setGraphicFactory(BackgroundTask::getIcon);\n\n        Label message = new Label(content);\n\n        VBox box = new VBox(taskProgressView, message);\n\n        DialogPane contentPane = new DialogPane();\n        contentPane.setContent(box);\n\n        FXDialog alert = new FXDialog(AlertType.WARNING, title);\n        alert.setDialogPane(contentPane);\n        alert.getButtonTypes().setAll(ButtonType.YES, ButtonType.CANCEL);\n        alert.getDialogPane().setMinHeight(Region.USE_PREF_SIZE);\n        alert.setResizable(true);\n        themeLoader.installCss(alert.getDialogPane().getScene(), preferences);\n\n        stateManager.getAnyTaskRunning().addListener((observable, oldValue, newValue) -> {\n            if (!newValue) {\n                alert.setResult(ButtonType.YES);\n                alert.close();\n            }\n        });\n\n        Dialog<ButtonType> dialog = () -> alert.showAndWait();\n\n        return showCustomDialogAndWait(dialog);\n    }\n","realPath":"src/main/java/org/jabref/gui/JabRefDialogService.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":295,"status":"B"}],"commitId":"4423d27999393da42a12b68d4a45009272599b7f","commitMessage":"@@@Implement task progress indicator (and dialog) in the toolbar (#6443)\n\n* First draft of a task progress dialog\n\nImplemented a task progress dialog using a TaskProgressView.\nTasks show up.  but without info. Neither the progress nor title and\nmessage are shown.\n\n* Added progress indicator in JabRefFrame\n\nThere now i a progress indicator at the rightmost postition of JabRefs\ntoolbar. It shows the average progress of all running background tasks.\nClicking it will show a TaskProgressDialog.\n\nstill looks ugly and the binding to the average progress does not seem\nto be working.\n\n* Beautified progressindicator and added localization\n\n* Changed to Task<?> in the Tasklist.\n\nThis makes the view work with download tasks for example. Most other\ntasks are still shown without title.  message (because none are set) and\nprogress.\nAlso.  there are a lot of tasks somehow.\n\nThe progress indicator in the main view still does not work as I can't\nget the bindings to work.\n\n* Resolved typing issues for bindings\n\nThe progress indicator is now successfully bound to the list of tasks.\nHowever.  tasks do not show up in the dialogue any more.\n\n* Converted list of Properties to tasks for listbind\n\nWhen using ObjectProperties in the list of tasks.  we can use EasyBind to\nconvert the list into a list of tasks which in turn can be bound to the\nlist of tasks in the view.\n\nWith this.  the basic functionality works. There is a progress indicator\nin the toolbar that shows the average progress of all running background\ntasks. It is indeterminate if any task has indeterminate progress and\nshows 100% if no tasks are running.\n\nClicking it opens an overview of all running tasks and their progress.\n\nCurrently.  there are many tasks running all the time. The only tasks\nthat were adapted for this to be pretty are the download tasks.  and they\nare also still missing an icon.\n\n* New Tasks are first in the list\n\n* Use a PopOver instead of a dialog\n\n* Only show download tasks\n\n* Better messages for download tasks\n\nThese are shorter and therefore the task progress view does not need a\nhorizontal scroll bar.\n\n* Type Witnesses are not needed any more.\n\n* Added extractor to task list\n\n* Made anyTaskRunningBinding public\n\nFor consistency with other variables\n\n* Removed ObjectProperty wrapping\n\n* NOT WORKING: quit dialogue\n\n* Cleanup\n\n* Fix in dialog service\n\nMake showProgressDialogAndWait actually not only show but also wait.\n\n* Add extractor for isRunning\n\n* More informative (and working) quit dialog\n\nThe dialog that is shown when the user quits JabRef during ongoing\nbackground tasks now shows which background tasks are still running.\n\nWhen all of them complete or the user chooses to quit anyway.  JabRef\nquits.\n\nThe user can also cancel the dialog. In that case.  the dialog closes and\nJobRef remains running.\n\n* Added graphics callback\n\n* Fixed some style issues\n\nThere are still some ImportOrder errors though where I can see no issue.\n\n* Registered the save task as background task\n\nThis makes the dialog that pops up if background tasks are running wait\nfor pending saves.\n\n* Revert \"Registered the save task as background task\"\n\nThis reverts commit d7442cc2247772b6e54bcb68cea947a5a2a604bc.\n\n* Added note on dialog-order upon close\n\n* Updated changelog\n\n* Fixed style\n\n* Quickfix for resizing indicator when indeterminate\n\nSet the pref-width when the indicator is determinate to keep the\nindeterminate state from making the indicator wider.\n\n* Styled dialog waiting for background tasks\n\n* Minor style fix\n\n* Removed Globals from DefaultTaskExecutor\n\nAddresses https://github.com/JabRef/jabref/pull/6443#discussion_r422981410\n\n* Removed WaitForBackgroundtasksFinishedDialog\n\nMore in line with the other JabRef dialogs\nAddresses https://github.com/JabRef/jabref/pull/6443#discussion_r422977336\n\n* Made Bindings in StateManager private\n\nAddresses https://github.com/JabRef/jabref/pull/6443#discussion_r422975104\n\n* Added tooltip to progress indicator\n\nAddresses https://github.com/JabRef/jabref/pull/6443#discussion_r422973356\n\n* Not working: own styleclass for toolbar progress indicator\n\nTries to address https://github.com/JabRef/jabref/pull/6443#discussion_r422971198\n\n* Changed callback to method in BackgroundTask\n\nAddresses https://github.com/JabRef/jabref/pull/6443#discussion_r422980468\n\n* Fixed progress-indicator styling\n\n* Improve getIcon method\n\n* Well.  I said hopefully ;-)\n\n* Revert \"Well.  I said hopefully ;-)\"\n\nThis reverts commit 0557c678a657e6315dcb2c2c1c98d90b45a76e08.\n\n* Revert \"Improve getIcon method\"\n\nThis reverts commit 478ee059e5606251361d663b939284f19bc834e4.\n\n* Improved readability in JabRefFrame\n\nCo-authored-by: Benedikt Tutzer <benedikt.tutzer@gmail.com>\nCo-authored-by: Tobias Diez <tobiasdiez@gmx.de>","date":"2020-05-12 20:23:05","modifiedFileCount":"9","status":"M","submitter":"Benedikt Tutzer"},{"authorTime":"2020-05-14 17:07:01","codes":[{"authorDate":"2020-04-28 20:19:48","commitOrder":4,"curCode":"    public Optional<ButtonType> showCustomDialogAndWait(String title, DialogPane contentPane,\n                                                        ButtonType... buttonTypes) {\n        FXDialog alert = new FXDialog(AlertType.NONE, title);\n        alert.setDialogPane(contentPane);\n        alert.getButtonTypes().setAll(buttonTypes);\n        alert.getDialogPane().setMinHeight(Region.USE_PREF_SIZE);\n        alert.setResizable(true);\n        themeLoader.installCss(alert.getDialogPane().getScene(), preferences);\n        return alert.showAndWait();\n    }\n","date":"2020-04-28 20:19:48","endLine":262,"groupId":"8646","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"showCustomDialogAndWait","params":"(Stringtitle@DialogPanecontentPane@ButtonType...buttonTypes)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/6c/0ccf376111c3653130048e9981f8842f413767.src","preCode":"    public Optional<ButtonType> showCustomDialogAndWait(String title, DialogPane contentPane,\n                                                        ButtonType... buttonTypes) {\n        FXDialog alert = new FXDialog(AlertType.NONE, title);\n        alert.setDialogPane(contentPane);\n        alert.getButtonTypes().setAll(buttonTypes);\n        alert.getDialogPane().setMinHeight(Region.USE_PREF_SIZE);\n        alert.setResizable(true);\n        themeLoader.installCss(alert.getDialogPane().getScene(), preferences);\n        return alert.showAndWait();\n    }\n","realPath":"src/main/java/org/jabref/gui/JabRefDialogService.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":253,"status":"N"},{"authorDate":"2020-05-14 17:07:01","commitOrder":4,"curCode":"    public <V> Optional<ButtonType> showBackgroundProgressDialogAndWait(String title, String content, StateManager stateManager) {\n        TaskProgressView taskProgressView = new TaskProgressView<>();\n        EasyBind.listBind(taskProgressView.getTasks(), stateManager.getBackgroundTasks());\n        taskProgressView.setRetainTasks(false);\n        taskProgressView.setGraphicFactory(BackgroundTask::getIcon);\n\n        Label message = new Label(content);\n\n        VBox box = new VBox(taskProgressView, message);\n\n        DialogPane contentPane = new DialogPane();\n        contentPane.setContent(box);\n\n        FXDialog alert = new FXDialog(AlertType.WARNING, title);\n        alert.setDialogPane(contentPane);\n        alert.getButtonTypes().setAll(ButtonType.YES, ButtonType.CANCEL);\n        alert.getDialogPane().setMinHeight(Region.USE_PREF_SIZE);\n        alert.setResizable(true);\n        themeLoader.installCss(alert.getDialogPane().getScene(), preferences);\n\n        stateManager.getAnyTaskRunning().addListener((observable, oldValue, newValue) -> {\n            if (!newValue) {\n                alert.setResult(ButtonType.YES);\n                alert.close();\n            }\n        });\n\n        Dialog<ButtonType> dialog = () -> alert.showAndWait();\n\n        return showCustomDialogAndWait(dialog);\n    }\n","date":"2020-05-14 17:07:01","endLine":325,"groupId":"11796","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"showBackgroundProgressDialogAndWait","params":"(Stringtitle@Stringcontent@StateManagerstateManager)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/b4/31a21c70c07b5f14fb8c2ee05ebffe9268b5f3.src","preCode":"    public <V> Optional<ButtonType> showBackgroundProgressDialogAndWait(String title, String content, StateManager stateManager) {\n        TaskProgressView taskProgressView = new TaskProgressView();\n        EasyBind.listBind(taskProgressView.getTasks(), stateManager.getBackgroundTasks());\n        taskProgressView.setRetainTasks(false);\n        taskProgressView.setGraphicFactory(BackgroundTask::getIcon);\n\n        Label message = new Label(content);\n\n        VBox box = new VBox(taskProgressView, message);\n\n        DialogPane contentPane = new DialogPane();\n        contentPane.setContent(box);\n\n        FXDialog alert = new FXDialog(AlertType.WARNING, title);\n        alert.setDialogPane(contentPane);\n        alert.getButtonTypes().setAll(ButtonType.YES, ButtonType.CANCEL);\n        alert.getDialogPane().setMinHeight(Region.USE_PREF_SIZE);\n        alert.setResizable(true);\n        themeLoader.installCss(alert.getDialogPane().getScene(), preferences);\n\n        stateManager.getAnyTaskRunning().addListener((observable, oldValue, newValue) -> {\n            if (!newValue) {\n                alert.setResult(ButtonType.YES);\n                alert.close();\n            }\n        });\n\n        Dialog<ButtonType> dialog = () -> alert.showAndWait();\n\n        return showCustomDialogAndWait(dialog);\n    }\n","realPath":"src/main/java/org/jabref/gui/JabRefDialogService.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":295,"status":"M"}],"commitId":"46777c20c24a9e7ce2b57a091325247d1bf6fcc5","commitMessage":"@@@Fix libre office connection and other progress dialogs (#6478)\n\n* Fix libre office connection and other progress dialogs\n\nFixes #6477\n\n* fix checkstyle\n\n* Rename to show","date":"2020-05-14 17:07:01","modifiedFileCount":"8","status":"M","submitter":"Christoph"},{"authorTime":"2020-05-15 15:27:24","codes":[{"authorDate":"2020-04-28 20:19:48","commitOrder":5,"curCode":"    public Optional<ButtonType> showCustomDialogAndWait(String title, DialogPane contentPane,\n                                                        ButtonType... buttonTypes) {\n        FXDialog alert = new FXDialog(AlertType.NONE, title);\n        alert.setDialogPane(contentPane);\n        alert.getButtonTypes().setAll(buttonTypes);\n        alert.getDialogPane().setMinHeight(Region.USE_PREF_SIZE);\n        alert.setResizable(true);\n        themeLoader.installCss(alert.getDialogPane().getScene(), preferences);\n        return alert.showAndWait();\n    }\n","date":"2020-04-28 20:19:48","endLine":262,"groupId":"8646","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"showCustomDialogAndWait","params":"(Stringtitle@DialogPanecontentPane@ButtonType...buttonTypes)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/6c/0ccf376111c3653130048e9981f8842f413767.src","preCode":"    public Optional<ButtonType> showCustomDialogAndWait(String title, DialogPane contentPane,\n                                                        ButtonType... buttonTypes) {\n        FXDialog alert = new FXDialog(AlertType.NONE, title);\n        alert.setDialogPane(contentPane);\n        alert.getButtonTypes().setAll(buttonTypes);\n        alert.getDialogPane().setMinHeight(Region.USE_PREF_SIZE);\n        alert.setResizable(true);\n        themeLoader.installCss(alert.getDialogPane().getScene(), preferences);\n        return alert.showAndWait();\n    }\n","realPath":"src/main/java/org/jabref/gui/JabRefDialogService.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":253,"status":"N"},{"authorDate":"2020-05-15 15:27:24","commitOrder":5,"curCode":"    public <V> Optional<ButtonType> showBackgroundProgressDialogAndWait(String title, String content, StateManager stateManager) {\n        TaskProgressView<Task<?>> taskProgressView = new TaskProgressView<>();\n        EasyBind.listBind(taskProgressView.getTasks(), stateManager.getBackgroundTasks());\n        taskProgressView.setRetainTasks(false);\n        taskProgressView.setGraphicFactory(BackgroundTask::getIcon);\n\n        Label message = new Label(content);\n\n        VBox box = new VBox(taskProgressView, message);\n\n        DialogPane contentPane = new DialogPane();\n        contentPane.setContent(box);\n\n        FXDialog alert = new FXDialog(AlertType.WARNING, title);\n        alert.setDialogPane(contentPane);\n        alert.getButtonTypes().setAll(ButtonType.YES, ButtonType.CANCEL);\n        alert.getDialogPane().setMinHeight(Region.USE_PREF_SIZE);\n        alert.setResizable(true);\n        themeLoader.installCss(alert.getDialogPane().getScene(), preferences);\n\n        stateManager.getAnyTaskRunning().addListener((observable, oldValue, newValue) -> {\n            if (!newValue) {\n                alert.setResult(ButtonType.YES);\n                alert.close();\n            }\n        });\n\n        Dialog<ButtonType> dialog = () -> alert.showAndWait();\n\n        return showCustomDialogAndWait(dialog);\n    }\n","date":"2020-05-15 15:27:24","endLine":325,"groupId":"11796","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"showBackgroundProgressDialogAndWait","params":"(Stringtitle@Stringcontent@StateManagerstateManager)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/25/a56b5ff15a28bd0a4c12798a60a6cf3b3cd1c6.src","preCode":"    public <V> Optional<ButtonType> showBackgroundProgressDialogAndWait(String title, String content, StateManager stateManager) {\n        TaskProgressView taskProgressView = new TaskProgressView<>();\n        EasyBind.listBind(taskProgressView.getTasks(), stateManager.getBackgroundTasks());\n        taskProgressView.setRetainTasks(false);\n        taskProgressView.setGraphicFactory(BackgroundTask::getIcon);\n\n        Label message = new Label(content);\n\n        VBox box = new VBox(taskProgressView, message);\n\n        DialogPane contentPane = new DialogPane();\n        contentPane.setContent(box);\n\n        FXDialog alert = new FXDialog(AlertType.WARNING, title);\n        alert.setDialogPane(contentPane);\n        alert.getButtonTypes().setAll(ButtonType.YES, ButtonType.CANCEL);\n        alert.getDialogPane().setMinHeight(Region.USE_PREF_SIZE);\n        alert.setResizable(true);\n        themeLoader.installCss(alert.getDialogPane().getScene(), preferences);\n\n        stateManager.getAnyTaskRunning().addListener((observable, oldValue, newValue) -> {\n            if (!newValue) {\n                alert.setResult(ButtonType.YES);\n                alert.close();\n            }\n        });\n\n        Dialog<ButtonType> dialog = () -> alert.showAndWait();\n\n        return showCustomDialogAndWait(dialog);\n    }\n","realPath":"src/main/java/org/jabref/gui/JabRefDialogService.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":295,"status":"M"}],"commitId":"4b40cce3d99c423e9dc48e6c0a5b124b506e5a61","commitMessage":"@@@Change EasyBind dependency (#6480)\n\n* Change EasyBind dependency\n\n* Fix tests","date":"2020-05-15 15:27:24","modifiedFileCount":"55","status":"M","submitter":"Tobias Diez"},{"authorTime":"2020-07-17 23:33:54","codes":[{"authorDate":"2020-04-28 20:19:48","commitOrder":6,"curCode":"    public Optional<ButtonType> showCustomDialogAndWait(String title, DialogPane contentPane,\n                                                        ButtonType... buttonTypes) {\n        FXDialog alert = new FXDialog(AlertType.NONE, title);\n        alert.setDialogPane(contentPane);\n        alert.getButtonTypes().setAll(buttonTypes);\n        alert.getDialogPane().setMinHeight(Region.USE_PREF_SIZE);\n        alert.setResizable(true);\n        themeLoader.installCss(alert.getDialogPane().getScene(), preferences);\n        return alert.showAndWait();\n    }\n","date":"2020-04-28 20:19:48","endLine":262,"groupId":"8646","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"showCustomDialogAndWait","params":"(Stringtitle@DialogPanecontentPane@ButtonType...buttonTypes)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/6c/0ccf376111c3653130048e9981f8842f413767.src","preCode":"    public Optional<ButtonType> showCustomDialogAndWait(String title, DialogPane contentPane,\n                                                        ButtonType... buttonTypes) {\n        FXDialog alert = new FXDialog(AlertType.NONE, title);\n        alert.setDialogPane(contentPane);\n        alert.getButtonTypes().setAll(buttonTypes);\n        alert.getDialogPane().setMinHeight(Region.USE_PREF_SIZE);\n        alert.setResizable(true);\n        themeLoader.installCss(alert.getDialogPane().getScene(), preferences);\n        return alert.showAndWait();\n    }\n","realPath":"src/main/java/org/jabref/gui/JabRefDialogService.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":253,"status":"N"},{"authorDate":"2020-07-17 23:33:54","commitOrder":6,"curCode":"    public <V> Optional<ButtonType> showBackgroundProgressDialogAndWait(String title, String content, StateManager stateManager) {\n        TaskProgressView<Task<?>> taskProgressView = new TaskProgressView<>();\n        EasyBind.bindContent(taskProgressView.getTasks(), stateManager.getBackgroundTasks());\n        taskProgressView.setRetainTasks(false);\n        taskProgressView.setGraphicFactory(BackgroundTask::getIcon);\n\n        Label message = new Label(content);\n\n        VBox box = new VBox(taskProgressView, message);\n\n        DialogPane contentPane = new DialogPane();\n        contentPane.setContent(box);\n\n        FXDialog alert = new FXDialog(AlertType.WARNING, title);\n        alert.setDialogPane(contentPane);\n        alert.getButtonTypes().setAll(ButtonType.YES, ButtonType.CANCEL);\n        alert.getDialogPane().setMinHeight(Region.USE_PREF_SIZE);\n        alert.setResizable(true);\n        themeLoader.installCss(alert.getDialogPane().getScene(), preferences);\n\n        stateManager.getAnyTaskRunning().addListener((observable, oldValue, newValue) -> {\n            if (!newValue) {\n                alert.setResult(ButtonType.YES);\n                alert.close();\n            }\n        });\n\n        Dialog<ButtonType> dialog = () -> alert.showAndWait();\n\n        return showCustomDialogAndWait(dialog);\n    }\n","date":"2020-07-17 23:33:54","endLine":325,"groupId":"11796","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"showBackgroundProgressDialogAndWait","params":"(Stringtitle@Stringcontent@StateManagerstateManager)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/0f/45d987b0925b59e674180997c84036c5266244.src","preCode":"    public <V> Optional<ButtonType> showBackgroundProgressDialogAndWait(String title, String content, StateManager stateManager) {\n        TaskProgressView<Task<?>> taskProgressView = new TaskProgressView<>();\n        EasyBind.listBind(taskProgressView.getTasks(), stateManager.getBackgroundTasks());\n        taskProgressView.setRetainTasks(false);\n        taskProgressView.setGraphicFactory(BackgroundTask::getIcon);\n\n        Label message = new Label(content);\n\n        VBox box = new VBox(taskProgressView, message);\n\n        DialogPane contentPane = new DialogPane();\n        contentPane.setContent(box);\n\n        FXDialog alert = new FXDialog(AlertType.WARNING, title);\n        alert.setDialogPane(contentPane);\n        alert.getButtonTypes().setAll(ButtonType.YES, ButtonType.CANCEL);\n        alert.getDialogPane().setMinHeight(Region.USE_PREF_SIZE);\n        alert.setResizable(true);\n        themeLoader.installCss(alert.getDialogPane().getScene(), preferences);\n\n        stateManager.getAnyTaskRunning().addListener((observable, oldValue, newValue) -> {\n            if (!newValue) {\n                alert.setResult(ButtonType.YES);\n                alert.close();\n            }\n        });\n\n        Dialog<ButtonType> dialog = () -> alert.showAndWait();\n\n        return showCustomDialogAndWait(dialog);\n    }\n","realPath":"src/main/java/org/jabref/gui/JabRefDialogService.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":295,"status":"M"}],"commitId":"87e824237585e3a33a58c356607cc8a56ffeac54","commitMessage":"@@@fixed issue 6692 (#6693)\n\n","date":"2020-07-17 23:33:54","modifiedFileCount":"5","status":"M","submitter":"Vince250598"},{"authorTime":"2020-08-31 22:56:34","codes":[{"authorDate":"2020-08-31 22:56:34","commitOrder":7,"curCode":"    public Optional<ButtonType> showCustomDialogAndWait(String title, DialogPane contentPane,\n                                                        ButtonType... buttonTypes) {\n        FXDialog alert = new FXDialog(AlertType.NONE, title);\n        alert.setDialogPane(contentPane);\n        alert.getButtonTypes().setAll(buttonTypes);\n        alert.getDialogPane().setMinHeight(Region.USE_PREF_SIZE);\n        alert.setResizable(true);\n        preferences.getTheme().installCss(alert.getDialogPane().getScene());\n        return alert.showAndWait();\n    }\n","date":"2020-08-31 22:56:34","endLine":264,"groupId":"8834","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"showCustomDialogAndWait","params":"(Stringtitle@DialogPanecontentPane@ButtonType...buttonTypes)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/29/2486b146a7cf5e092cc1248228a6f1b060bb36.src","preCode":"    public Optional<ButtonType> showCustomDialogAndWait(String title, DialogPane contentPane,\n                                                        ButtonType... buttonTypes) {\n        FXDialog alert = new FXDialog(AlertType.NONE, title);\n        alert.setDialogPane(contentPane);\n        alert.getButtonTypes().setAll(buttonTypes);\n        alert.getDialogPane().setMinHeight(Region.USE_PREF_SIZE);\n        alert.setResizable(true);\n        themeLoader.installCss(alert.getDialogPane().getScene(), preferences);\n        return alert.showAndWait();\n    }\n","realPath":"src/main/java/org/jabref/gui/JabRefDialogService.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":255,"status":"M"},{"authorDate":"2020-08-31 22:56:34","commitOrder":7,"curCode":"    public <V> Optional<ButtonType> showBackgroundProgressDialogAndWait(String title, String content, StateManager stateManager) {\n        TaskProgressView<Task<?>> taskProgressView = new TaskProgressView<>();\n        EasyBind.bindContent(taskProgressView.getTasks(), stateManager.getBackgroundTasks());\n        taskProgressView.setRetainTasks(false);\n        taskProgressView.setGraphicFactory(BackgroundTask::getIcon);\n\n        Label message = new Label(content);\n\n        VBox box = new VBox(taskProgressView, message);\n\n        DialogPane contentPane = new DialogPane();\n        contentPane.setContent(box);\n\n        FXDialog alert = new FXDialog(AlertType.WARNING, title);\n        alert.setDialogPane(contentPane);\n        alert.getButtonTypes().setAll(ButtonType.YES, ButtonType.CANCEL);\n        alert.getDialogPane().setMinHeight(Region.USE_PREF_SIZE);\n        alert.setResizable(true);\n        preferences.getTheme().installCss(alert.getDialogPane().getScene());\n\n        stateManager.getAnyTaskRunning().addListener((observable, oldValue, newValue) -> {\n            if (!newValue) {\n                alert.setResult(ButtonType.YES);\n                alert.close();\n            }\n        });\n\n        Dialog<ButtonType> dialog = alert::showAndWait;\n\n        return showCustomDialogAndWait(dialog);\n    }\n","date":"2020-08-31 22:56:34","endLine":322,"groupId":"9408","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"showBackgroundProgressDialogAndWait","params":"(Stringtitle@Stringcontent@StateManagerstateManager)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/29/2486b146a7cf5e092cc1248228a6f1b060bb36.src","preCode":"    public <V> Optional<ButtonType> showBackgroundProgressDialogAndWait(String title, String content, StateManager stateManager) {\n        TaskProgressView<Task<?>> taskProgressView = new TaskProgressView<>();\n        EasyBind.bindContent(taskProgressView.getTasks(), stateManager.getBackgroundTasks());\n        taskProgressView.setRetainTasks(false);\n        taskProgressView.setGraphicFactory(BackgroundTask::getIcon);\n\n        Label message = new Label(content);\n\n        VBox box = new VBox(taskProgressView, message);\n\n        DialogPane contentPane = new DialogPane();\n        contentPane.setContent(box);\n\n        FXDialog alert = new FXDialog(AlertType.WARNING, title);\n        alert.setDialogPane(contentPane);\n        alert.getButtonTypes().setAll(ButtonType.YES, ButtonType.CANCEL);\n        alert.getDialogPane().setMinHeight(Region.USE_PREF_SIZE);\n        alert.setResizable(true);\n        themeLoader.installCss(alert.getDialogPane().getScene(), preferences);\n\n        stateManager.getAnyTaskRunning().addListener((observable, oldValue, newValue) -> {\n            if (!newValue) {\n                alert.setResult(ButtonType.YES);\n                alert.close();\n            }\n        });\n\n        Dialog<ButtonType> dialog = () -> alert.showAndWait();\n\n        return showCustomDialogAndWait(dialog);\n    }\n","realPath":"src/main/java/org/jabref/gui/JabRefDialogService.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":292,"status":"M"}],"commitId":"43c8ba2ea27264f42fed4a96c9f4d24a54a97f47","commitMessage":"@@@Add CSS Customisation (#6725)\n\n* feat/#1 Add CSS file type.  add button in preferences to import custom CSS file.  started on import functionality\n\n* feat/#1 Change so that the log messages uses format specifiers instead of string concatenation\n\n* feat/#1 Add RadioButton for toggling custom theme\n\n* feat/#1 Add preference for setting path to custom CSS theme\n\n* feat/#1 Load custom CSS if toggled\n\n* feat/#1 Add missing language keys\n\n* feat/#1 Remove check if current theme is applied again.  check is remove since we don't need it\n\n* feat/#1 Save path to custom CSS file in program preferences\n\n* Add functionality to let the user import custom CSS file #5790\n\n* Add CSS file type.  add button in preferences to import a custom CSS file.  started on import functionality\n\n* Change so that the log uses format specifiers instead of string concatenation\n\n* Add RadioButton for toggling custom theme\n\n* Add preference for setting the path to custom CSS theme\n\n* Load custom CSS if toggled\n\n* Add missing language keys\n\n* Remove check if the current theme is applied again.  the check is removed since we don't need it\n\n* Save path to the custom CSS file in program preferences\n\n* fix/#5 Add checks so that the theme change notification is only shown once.  disable custom theme radio button i no custom theme has been imported\n\n* Remove added stuff from merge conflict\n\n* Add export current theme #5790\n\n* Add method for saving theme to file\n\n* Add modal for selection witch theme to export as CSS\n\n* Add missing language lines\n\n* Add information about import/export of themes.  #5790\n\n* Fix CodaCy and checkstyle issues.  #5790\n\n* Add fixes from code review.  #5790\n\n* Remove unused import #5790\n\n* Move the import/export buttons to the Appearance tab #5790\n\n* Fixed merge errors\n\n* Fixed easy remarks\n\n* Introduced AppereancePreferences and changed some visual elements\n\n* Refactored ExportThemeDialog\n\n* Fixed merge error\n\n* Removed export theme logic and added validation\n\n* CHANGELOG.md\n\n* Removed obsolete viewmodel class\n\n* Refactored io.File to nio.Path.  use of JabRefPreferences and removed vmOption\n\n* Refactored ThemeLoader object class to enum with static util methods\n\n* Fixed overlooked merge error\n\n* Refactored static methods to object methods\n\n* Checkstyle\n\nCo-authored-by: Nils Streijffert <nils.streijffert@gmail.com>\nCo-authored-by: Christoph <siedlerkiller@gmail.com>","date":"2020-08-31 22:56:34","modifiedFileCount":"13","status":"M","submitter":"Carl Christian Snethlage"},{"authorTime":"2021-01-03 00:34:40","codes":[{"authorDate":"2021-01-03 00:34:40","commitOrder":8,"curCode":"    public Optional<ButtonType> showCustomDialogAndWait(String title, DialogPane contentPane,\n                                                        ButtonType... buttonTypes) {\n        FXDialog alert = new FXDialog(AlertType.NONE, title);\n        alert.setDialogPane(contentPane);\n        alert.getButtonTypes().setAll(buttonTypes);\n        alert.getDialogPane().setMinHeight(Region.USE_PREF_SIZE);\n        alert.setResizable(true);\n        alert.initOwner(mainWindow);\n        preferences.getTheme().installCss(alert.getDialogPane().getScene());\n        return alert.showAndWait();\n    }\n","date":"2021-01-03 00:34:40","endLine":273,"groupId":"10928","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"showCustomDialogAndWait","params":"(Stringtitle@DialogPanecontentPane@ButtonType...buttonTypes)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/2f/fe0ad1ae4b3344f6259d46bafb883b0a29c921.src","preCode":"    public Optional<ButtonType> showCustomDialogAndWait(String title, DialogPane contentPane,\n                                                        ButtonType... buttonTypes) {\n        FXDialog alert = new FXDialog(AlertType.NONE, title);\n        alert.setDialogPane(contentPane);\n        alert.getButtonTypes().setAll(buttonTypes);\n        alert.getDialogPane().setMinHeight(Region.USE_PREF_SIZE);\n        alert.setResizable(true);\n        preferences.getTheme().installCss(alert.getDialogPane().getScene());\n        return alert.showAndWait();\n    }\n","realPath":"src/main/java/org/jabref/gui/JabRefDialogService.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":263,"status":"M"},{"authorDate":"2021-01-03 00:34:40","commitOrder":8,"curCode":"    public <V> Optional<ButtonType> showBackgroundProgressDialogAndWait(String title, String content, StateManager stateManager) {\n        TaskProgressView<Task<?>> taskProgressView = new TaskProgressView<>();\n        EasyBind.bindContent(taskProgressView.getTasks(), stateManager.getBackgroundTasks());\n        taskProgressView.setRetainTasks(false);\n        taskProgressView.setGraphicFactory(BackgroundTask::getIcon);\n\n        Label message = new Label(content);\n\n        VBox box = new VBox(taskProgressView, message);\n\n        DialogPane contentPane = new DialogPane();\n        contentPane.setContent(box);\n\n        FXDialog alert = new FXDialog(AlertType.WARNING, title);\n        alert.setDialogPane(contentPane);\n        alert.getButtonTypes().setAll(ButtonType.YES, ButtonType.CANCEL);\n        alert.getDialogPane().setMinHeight(Region.USE_PREF_SIZE);\n        alert.setResizable(true);\n        alert.initOwner(mainWindow);\n        preferences.getTheme().installCss(alert.getDialogPane().getScene());\n\n        stateManager.getAnyTaskRunning().addListener((observable, oldValue, newValue) -> {\n            if (!newValue) {\n                alert.setResult(ButtonType.YES);\n                alert.close();\n            }\n        });\n\n        return alert.showAndWait();\n    }\n","date":"2021-01-03 00:34:40","endLine":332,"groupId":"10928","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"showBackgroundProgressDialogAndWait","params":"(Stringtitle@Stringcontent@StateManagerstateManager)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/2f/fe0ad1ae4b3344f6259d46bafb883b0a29c921.src","preCode":"    public <V> Optional<ButtonType> showBackgroundProgressDialogAndWait(String title, String content, StateManager stateManager) {\n        TaskProgressView<Task<?>> taskProgressView = new TaskProgressView<>();\n        EasyBind.bindContent(taskProgressView.getTasks(), stateManager.getBackgroundTasks());\n        taskProgressView.setRetainTasks(false);\n        taskProgressView.setGraphicFactory(BackgroundTask::getIcon);\n\n        Label message = new Label(content);\n\n        VBox box = new VBox(taskProgressView, message);\n\n        DialogPane contentPane = new DialogPane();\n        contentPane.setContent(box);\n\n        FXDialog alert = new FXDialog(AlertType.WARNING, title);\n        alert.setDialogPane(contentPane);\n        alert.getButtonTypes().setAll(ButtonType.YES, ButtonType.CANCEL);\n        alert.getDialogPane().setMinHeight(Region.USE_PREF_SIZE);\n        alert.setResizable(true);\n        preferences.getTheme().installCss(alert.getDialogPane().getScene());\n\n        stateManager.getAnyTaskRunning().addListener((observable, oldValue, newValue) -> {\n            if (!newValue) {\n                alert.setResult(ButtonType.YES);\n                alert.close();\n            }\n        });\n\n        Dialog<ButtonType> dialog = alert::showAndWait;\n\n        return showCustomDialogAndWait(dialog);\n    }\n","realPath":"src/main/java/org/jabref/gui/JabRefDialogService.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":303,"status":"M"}],"commitId":"0b4be8a1417fd7053646bfe10ef22d37614683a9","commitMessage":"@@@Fix for application dialogs opening in wrong displays (#7273)\n\n* [WIP] Fix for application dialogs opening in wrong displays\n\n* [WIP] Fix for application dialogs opening in wrong displays\n\n* [WIP] Fix for application dialogs opening in wrong displays\n\n* [WIP] Fix for application dialogs opening in wrong displays\n\n* Fix for application dialogs opening in wrong displays\n\n- Rename DialogService.show() method to showCustomDialog()\n- Rename showCustomDialog()'s argument\n- Add documentation to showCustomDialog method\n- Make createDialog and createDialogWithOptOut non static\n\n* Add change description to CHANGELOG.md\n\n* Drop unneeded test AboutActionTest\n\n* Document guidelines for creating a new dialog\n\n* Document guidelines for creating a new dialog","date":"2021-01-03 00:34:40","modifiedFileCount":"51","status":"M","submitter":"Fiyinfolu Eludire"}]
