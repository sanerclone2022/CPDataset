[{"authorTime":"2018-08-30 00:00:58","codes":[{"authorDate":"2018-08-30 00:00:58","commitOrder":3,"curCode":"    public void writeMultipleEntriesInASingleFile(@TempDirectory.TempDir Path testFolder) throws Exception {\n        Path file = testFolder.resolve(\"ThisIsARandomlyNamedFile\");\n        Files.createFile(file);\n\n        BibEntry entryTuring = new BibEntry();\n        entryTuring.setField(\"author\", \"Alan Turing\");\n\n        BibEntry entryArmbrust = new BibEntry();\n        entryArmbrust.setField(\"author\", \"Michael Armbrust\");\n        entryArmbrust.setCiteKey(\"Armbrust2010\");\n\n        exporter.export(databaseContext, file, encoding, Arrays.asList(entryTuring, entryArmbrust));\n\n        String actual = Files.readAllLines(file).stream().collect(Collectors.joining(\"\\n\")); \r\n\n        String expected = \"  <rdf:RDF xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\">\\n\" +\n                          \"    <rdf:Description xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\" rdf:about=\\\"\\\">\\n\" +\n                          \"      <dc:creator>\\n\" +\n                          \"        <rdf:Seq>\\n\" +\n                          \"          <rdf:li>Alan Turing</rdf:li>\\n\" +\n                          \"        </rdf:Seq>\\n\" +\n                          \"      </dc:creator>\\n\" +\n                          \"      <dc:format>application/pdf</dc:format>\\n\" +\n                          \"      <dc:type>\\n\" +\n                          \"        <rdf:Bag>\\n\" +\n                          \"          <rdf:li>Misc</rdf:li>\\n\" +\n                          \"        </rdf:Bag>\\n\" +\n                          \"      </dc:type>\\n\" +\n                          \"    </rdf:Description>\\n\" +\n                          \"    <rdf:Description xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\" rdf:about=\\\"\\\">\\n\" +\n                          \"      <dc:creator>\\n\" +\n                          \"        <rdf:Seq>\\n\" +\n                          \"          <rdf:li>Michael Armbrust</rdf:li>\\n\" +\n                          \"        </rdf:Seq>\\n\" +\n                          \"      </dc:creator>\\n\" +\n                          \"      <dc:relation>\\n\" +\n                          \"        <rdf:Bag>\\n\" +\n                          \"          <rdf:li>bibtex/bibtexkey/Armbrust2010</rdf:li>\\n\" +\n                          \"        </rdf:Bag>\\n\" +\n                          \"      </dc:relation>\\n\" +\n                          \"      <dc:format>application/pdf</dc:format>\\n\" +\n                          \"      <dc:type>\\n\" +\n                          \"        <rdf:Bag>\\n\" +\n                          \"          <rdf:li>Misc</rdf:li>\\n\" +\n                          \"        </rdf:Bag>\\n\" +\n                          \"      </dc:type>\\n\" +\n                          \"    </rdf:Description>\\n\" +\n                          \"  </rdf:RDF>\";\n        assertEquals(expected, actual);\n    }\n","date":"2018-08-30 00:00:58","endLine":129,"groupId":"8989","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"writeMultipleEntriesInASingleFile","params":"(@TempDirectory.TempDirPathtestFolder)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/41/74683a69e0c48edce04822a5eb010b65668b68.src","preCode":"    public void writeMultipleEntriesInASingleFile(@TempDirectory.TempDir Path testFolder) throws Exception {\n        Path file = testFolder.resolve(\"ThisIsARandomlyNamedFile\");\n        Files.createFile(file);\n\n        BibEntry entryTuring = new BibEntry();\n        entryTuring.setField(\"author\", \"Alan Turing\");\n\n        BibEntry entryArmbrust = new BibEntry();\n        entryArmbrust.setField(\"author\", \"Michael Armbrust\");\n        entryArmbrust.setCiteKey(\"Armbrust2010\");\n\n        exporter.export(databaseContext, file, encoding, Arrays.asList(entryTuring, entryArmbrust));\n\n        String actual = Files.readAllLines(file).stream().collect(Collectors.joining(\"\\n\")); \r\n\n        String expected = \"  <rdf:RDF xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\">\\n\" +\n                          \"    <rdf:Description xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\" rdf:about=\\\"\\\">\\n\" +\n                          \"      <dc:creator>\\n\" +\n                          \"        <rdf:Seq>\\n\" +\n                          \"          <rdf:li>Alan Turing</rdf:li>\\n\" +\n                          \"        </rdf:Seq>\\n\" +\n                          \"      </dc:creator>\\n\" +\n                          \"      <dc:format>application/pdf</dc:format>\\n\" +\n                          \"      <dc:type>\\n\" +\n                          \"        <rdf:Bag>\\n\" +\n                          \"          <rdf:li>Misc</rdf:li>\\n\" +\n                          \"        </rdf:Bag>\\n\" +\n                          \"      </dc:type>\\n\" +\n                          \"    </rdf:Description>\\n\" +\n                          \"    <rdf:Description xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\" rdf:about=\\\"\\\">\\n\" +\n                          \"      <dc:creator>\\n\" +\n                          \"        <rdf:Seq>\\n\" +\n                          \"          <rdf:li>Michael Armbrust</rdf:li>\\n\" +\n                          \"        </rdf:Seq>\\n\" +\n                          \"      </dc:creator>\\n\" +\n                          \"      <dc:relation>\\n\" +\n                          \"        <rdf:Bag>\\n\" +\n                          \"          <rdf:li>bibtex/bibtexkey/Armbrust2010</rdf:li>\\n\" +\n                          \"        </rdf:Bag>\\n\" +\n                          \"      </dc:relation>\\n\" +\n                          \"      <dc:format>application/pdf</dc:format>\\n\" +\n                          \"      <dc:type>\\n\" +\n                          \"        <rdf:Bag>\\n\" +\n                          \"          <rdf:li>Misc</rdf:li>\\n\" +\n                          \"        </rdf:Bag>\\n\" +\n                          \"      </dc:type>\\n\" +\n                          \"    </rdf:Description>\\n\" +\n                          \"  </rdf:RDF>\";\n        assertEquals(expected, actual);\n    }\n","realPath":"src/test/java/org/jabref/logic/exporter/XmpExporterTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":80,"status":"MB"},{"authorDate":"2018-08-30 00:00:58","commitOrder":3,"curCode":"    public void exportSingleEntryWithPrivacyFilter(@TempDirectory.TempDir Path testFolder) throws Exception {\n        when(xmpPreferences.getXmpPrivacyFilter()).thenReturn(Arrays.asList(\"author\"));\n        when(xmpPreferences.isUseXMPPrivacyFilter()).thenReturn(true);\n\n        Path file = testFolder.resolve(\"ThisIsARandomlyNamedFile\");\n        Files.createFile(file);\n\n        BibEntry entry = new BibEntry();\n        entry.setField(\"author\", \"Alan Turing\");\n\n        exporter.export(databaseContext, file, encoding, Collections.singletonList(entry));\n        String actual = Files.readAllLines(file).stream().collect(Collectors.joining(\"\\n\"));\n        String expected = \"  <rdf:RDF xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\">\\n\" +\n                          \"    <rdf:Description xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\" rdf:about=\\\"\\\">\\n\" +\n                          \"      <dc:format>application/pdf</dc:format>\\n\" +\n                          \"      <dc:type>\\n\" +\n                          \"        <rdf:Bag>\\n\" +\n                          \"          <rdf:li>Misc</rdf:li>\\n\" +\n                          \"        </rdf:Bag>\\n\" +\n                          \"      </dc:type>\\n\" +\n                          \"    </rdf:Description>\\n\" +\n                          \"  </rdf:RDF>\";\n        assertEquals(expected, actual);\n    }\n","date":"2018-08-30 00:00:58","endLine":221,"groupId":"8895","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"exportSingleEntryWithPrivacyFilter","params":"(@TempDirectory.TempDirPathtestFolder)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/41/74683a69e0c48edce04822a5eb010b65668b68.src","preCode":"    public void exportSingleEntryWithPrivacyFilter(@TempDirectory.TempDir Path testFolder) throws Exception {\n        when(xmpPreferences.getXmpPrivacyFilter()).thenReturn(Arrays.asList(\"author\"));\n        when(xmpPreferences.isUseXMPPrivacyFilter()).thenReturn(true);\n\n        Path file = testFolder.resolve(\"ThisIsARandomlyNamedFile\");\n        Files.createFile(file);\n\n        BibEntry entry = new BibEntry();\n        entry.setField(\"author\", \"Alan Turing\");\n\n        exporter.export(databaseContext, file, encoding, Collections.singletonList(entry));\n        String actual = Files.readAllLines(file).stream().collect(Collectors.joining(\"\\n\"));\n        String expected = \"  <rdf:RDF xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\">\\n\" +\n                          \"    <rdf:Description xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\" rdf:about=\\\"\\\">\\n\" +\n                          \"      <dc:format>application/pdf</dc:format>\\n\" +\n                          \"      <dc:type>\\n\" +\n                          \"        <rdf:Bag>\\n\" +\n                          \"          <rdf:li>Misc</rdf:li>\\n\" +\n                          \"        </rdf:Bag>\\n\" +\n                          \"      </dc:type>\\n\" +\n                          \"    </rdf:Description>\\n\" +\n                          \"  </rdf:RDF>\";\n        assertEquals(expected, actual);\n    }\n","realPath":"src/test/java/org/jabref/logic/exporter/XmpExporterTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":198,"status":"B"}],"commitId":"2d2a0f63d5cd36209a48f993d7f9031c3aa107ff","commitMessage":"@@@fix loading and storing of XMP Field Exclusions (#4291)\n\n* fix loading and storing of XMP Field Exlusions\n\nFixes #4072\n\n* rename variable\n\n* fix l10n and replace textfield with combobox\n\n* adjust xmp test and add case for xmp privacy\n\n* add changelog\n\n* make editable\nremove explicit pref size adjustments\n\n* add delete icon button to table\ndisable when checkbox is unchecked\n\n* fix comment\n","date":"2018-08-30 00:00:58","modifiedFileCount":"3","status":"M","submitter":"Christoph"},{"authorTime":"2019-02-09 22:36:12","codes":[{"authorDate":"2019-02-09 22:36:12","commitOrder":4,"curCode":"    public void writeMultipleEntriesInASingleFile(@TempDir Path testFolder) throws Exception {\n        Path file = testFolder.resolve(\"ThisIsARandomlyNamedFile\");\n        Files.createFile(file);\n\n        BibEntry entryTuring = new BibEntry();\n        entryTuring.setField(\"author\", \"Alan Turing\");\n\n        BibEntry entryArmbrust = new BibEntry();\n        entryArmbrust.setField(\"author\", \"Michael Armbrust\");\n        entryArmbrust.setCiteKey(\"Armbrust2010\");\n\n        exporter.export(databaseContext, file, encoding, Arrays.asList(entryTuring, entryArmbrust));\n\n        String actual = Files.readAllLines(file).stream().collect(Collectors.joining(\"\\n\")); \r\n\n        String expected = \"  <rdf:RDF xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\">\\n\" +\n                \"    <rdf:Description xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\" rdf:about=\\\"\\\">\\n\" +\n                \"      <dc:creator>\\n\" +\n                \"        <rdf:Seq>\\n\" +\n                \"          <rdf:li>Alan Turing</rdf:li>\\n\" +\n                \"        </rdf:Seq>\\n\" +\n                \"      </dc:creator>\\n\" +\n                \"      <dc:format>application/pdf</dc:format>\\n\" +\n                \"      <dc:type>\\n\" +\n                \"        <rdf:Bag>\\n\" +\n                \"          <rdf:li>Misc</rdf:li>\\n\" +\n                \"        </rdf:Bag>\\n\" +\n                \"      </dc:type>\\n\" +\n                \"    </rdf:Description>\\n\" +\n                \"    <rdf:Description xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\" rdf:about=\\\"\\\">\\n\" +\n                \"      <dc:creator>\\n\" +\n                \"        <rdf:Seq>\\n\" +\n                \"          <rdf:li>Michael Armbrust</rdf:li>\\n\" +\n                \"        </rdf:Seq>\\n\" +\n                \"      </dc:creator>\\n\" +\n                \"      <dc:relation>\\n\" +\n                \"        <rdf:Bag>\\n\" +\n                \"          <rdf:li>bibtex/bibtexkey/Armbrust2010</rdf:li>\\n\" +\n                \"        </rdf:Bag>\\n\" +\n                \"      </dc:relation>\\n\" +\n                \"      <dc:format>application/pdf</dc:format>\\n\" +\n                \"      <dc:type>\\n\" +\n                \"        <rdf:Bag>\\n\" +\n                \"          <rdf:li>Misc</rdf:li>\\n\" +\n                \"        </rdf:Bag>\\n\" +\n                \"      </dc:type>\\n\" +\n                \"    </rdf:Description>\\n\" +\n                \"  </rdf:RDF>\";\n        assertEquals(expected, actual);\n    }\n","date":"2019-02-09 22:36:12","endLine":126,"groupId":"8989","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"writeMultipleEntriesInASingleFile","params":"(@TempDirPathtestFolder)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/d2/4b3725624404d77bedaaacf23cb1f5e038f7ce.src","preCode":"    public void writeMultipleEntriesInASingleFile(@TempDirectory.TempDir Path testFolder) throws Exception {\n        Path file = testFolder.resolve(\"ThisIsARandomlyNamedFile\");\n        Files.createFile(file);\n\n        BibEntry entryTuring = new BibEntry();\n        entryTuring.setField(\"author\", \"Alan Turing\");\n\n        BibEntry entryArmbrust = new BibEntry();\n        entryArmbrust.setField(\"author\", \"Michael Armbrust\");\n        entryArmbrust.setCiteKey(\"Armbrust2010\");\n\n        exporter.export(databaseContext, file, encoding, Arrays.asList(entryTuring, entryArmbrust));\n\n        String actual = Files.readAllLines(file).stream().collect(Collectors.joining(\"\\n\")); \r\n\n        String expected = \"  <rdf:RDF xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\">\\n\" +\n                \"    <rdf:Description xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\" rdf:about=\\\"\\\">\\n\" +\n                \"      <dc:creator>\\n\" +\n                \"        <rdf:Seq>\\n\" +\n                \"          <rdf:li>Alan Turing</rdf:li>\\n\" +\n                \"        </rdf:Seq>\\n\" +\n                \"      </dc:creator>\\n\" +\n                \"      <dc:format>application/pdf</dc:format>\\n\" +\n                \"      <dc:type>\\n\" +\n                \"        <rdf:Bag>\\n\" +\n                \"          <rdf:li>Misc</rdf:li>\\n\" +\n                \"        </rdf:Bag>\\n\" +\n                \"      </dc:type>\\n\" +\n                \"    </rdf:Description>\\n\" +\n                \"    <rdf:Description xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\" rdf:about=\\\"\\\">\\n\" +\n                \"      <dc:creator>\\n\" +\n                \"        <rdf:Seq>\\n\" +\n                \"          <rdf:li>Michael Armbrust</rdf:li>\\n\" +\n                \"        </rdf:Seq>\\n\" +\n                \"      </dc:creator>\\n\" +\n                \"      <dc:relation>\\n\" +\n                \"        <rdf:Bag>\\n\" +\n                \"          <rdf:li>bibtex/bibtexkey/Armbrust2010</rdf:li>\\n\" +\n                \"        </rdf:Bag>\\n\" +\n                \"      </dc:relation>\\n\" +\n                \"      <dc:format>application/pdf</dc:format>\\n\" +\n                \"      <dc:type>\\n\" +\n                \"        <rdf:Bag>\\n\" +\n                \"          <rdf:li>Misc</rdf:li>\\n\" +\n                \"        </rdf:Bag>\\n\" +\n                \"      </dc:type>\\n\" +\n                \"    </rdf:Description>\\n\" +\n                \"  </rdf:RDF>\";\n        assertEquals(expected, actual);\n    }\n","realPath":"src/test/java/org/jabref/logic/exporter/XmpExporterTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":77,"status":"M"},{"authorDate":"2019-02-09 22:36:12","commitOrder":4,"curCode":"    public void exportSingleEntryWithPrivacyFilter(@TempDir Path testFolder) throws Exception {\n        when(xmpPreferences.getXmpPrivacyFilter()).thenReturn(Arrays.asList(\"author\"));\n        when(xmpPreferences.isUseXMPPrivacyFilter()).thenReturn(true);\n\n        Path file = testFolder.resolve(\"ThisIsARandomlyNamedFile\");\n        Files.createFile(file);\n\n        BibEntry entry = new BibEntry();\n        entry.setField(\"author\", \"Alan Turing\");\n\n        exporter.export(databaseContext, file, encoding, Collections.singletonList(entry));\n        String actual = Files.readAllLines(file).stream().collect(Collectors.joining(\"\\n\"));\n        String expected = \"  <rdf:RDF xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\">\\n\" +\n                \"    <rdf:Description xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\" rdf:about=\\\"\\\">\\n\" +\n                \"      <dc:format>application/pdf</dc:format>\\n\" +\n                \"      <dc:type>\\n\" +\n                \"        <rdf:Bag>\\n\" +\n                \"          <rdf:li>Misc</rdf:li>\\n\" +\n                \"        </rdf:Bag>\\n\" +\n                \"      </dc:type>\\n\" +\n                \"    </rdf:Description>\\n\" +\n                \"  </rdf:RDF>\";\n        assertEquals(expected, actual);\n    }\n","date":"2019-02-09 22:36:12","endLine":218,"groupId":"8895","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"exportSingleEntryWithPrivacyFilter","params":"(@TempDirPathtestFolder)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/d2/4b3725624404d77bedaaacf23cb1f5e038f7ce.src","preCode":"    public void exportSingleEntryWithPrivacyFilter(@TempDirectory.TempDir Path testFolder) throws Exception {\n        when(xmpPreferences.getXmpPrivacyFilter()).thenReturn(Arrays.asList(\"author\"));\n        when(xmpPreferences.isUseXMPPrivacyFilter()).thenReturn(true);\n\n        Path file = testFolder.resolve(\"ThisIsARandomlyNamedFile\");\n        Files.createFile(file);\n\n        BibEntry entry = new BibEntry();\n        entry.setField(\"author\", \"Alan Turing\");\n\n        exporter.export(databaseContext, file, encoding, Collections.singletonList(entry));\n        String actual = Files.readAllLines(file).stream().collect(Collectors.joining(\"\\n\"));\n        String expected = \"  <rdf:RDF xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\">\\n\" +\n                \"    <rdf:Description xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\" rdf:about=\\\"\\\">\\n\" +\n                \"      <dc:format>application/pdf</dc:format>\\n\" +\n                \"      <dc:type>\\n\" +\n                \"        <rdf:Bag>\\n\" +\n                \"          <rdf:li>Misc</rdf:li>\\n\" +\n                \"        </rdf:Bag>\\n\" +\n                \"      </dc:type>\\n\" +\n                \"    </rdf:Description>\\n\" +\n                \"  </rdf:RDF>\";\n        assertEquals(expected, actual);\n    }\n","realPath":"src/test/java/org/jabref/logic/exporter/XmpExporterTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":195,"status":"M"}],"commitId":"71e02379a068756a3885aa22161337255683fca3","commitMessage":"@@@Fix for issue 4641: Remove usage of TempDirectory extension from junit-pioneer (#4644)\n\n* Removed the TempDirectory extension from junit-pioneer with the built in\nextension of junit 5.4\n\n* Removed unused import\n","date":"2019-02-09 22:36:12","modifiedFileCount":"23","status":"M","submitter":"Akash Deep"},{"authorTime":"2019-08-02 15:20:10","codes":[{"authorDate":"2019-08-02 15:20:10","commitOrder":5,"curCode":"    public void writeMultipleEntriesInASingleFile(@TempDir Path testFolder) throws Exception {\n        Path file = testFolder.resolve(\"ThisIsARandomlyNamedFile\");\n        Files.createFile(file);\n\n        BibEntry entryTuring = new BibEntry();\n        entryTuring.setField(StandardField.AUTHOR, \"Alan Turing\");\n\n        BibEntry entryArmbrust = new BibEntry();\n        entryArmbrust.setField(StandardField.AUTHOR, \"Michael Armbrust\");\n        entryArmbrust.setCiteKey(\"Armbrust2010\");\n\n        exporter.export(databaseContext, file, encoding, Arrays.asList(entryTuring, entryArmbrust));\n\n        String actual = String.join(\"\\n\", Files.readAllLines(file)); \r\n\n        String expected = \"  <rdf:RDF xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\">\\n\" +\n                \"    <rdf:Description xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\" rdf:about=\\\"\\\">\\n\" +\n                \"      <dc:creator>\\n\" +\n                \"        <rdf:Seq>\\n\" +\n                \"          <rdf:li>Alan Turing</rdf:li>\\n\" +\n                \"        </rdf:Seq>\\n\" +\n                \"      </dc:creator>\\n\" +\n                \"      <dc:format>application/pdf</dc:format>\\n\" +\n                \"      <dc:type>\\n\" +\n                \"        <rdf:Bag>\\n\" +\n                \"          <rdf:li>Misc</rdf:li>\\n\" +\n                \"        </rdf:Bag>\\n\" +\n                \"      </dc:type>\\n\" +\n                \"    </rdf:Description>\\n\" +\n                \"    <rdf:Description xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\" rdf:about=\\\"\\\">\\n\" +\n                \"      <dc:creator>\\n\" +\n                \"        <rdf:Seq>\\n\" +\n                \"          <rdf:li>Michael Armbrust</rdf:li>\\n\" +\n                \"        </rdf:Seq>\\n\" +\n                \"      </dc:creator>\\n\" +\n                \"      <dc:relation>\\n\" +\n                \"        <rdf:Bag>\\n\" +\n                \"          <rdf:li>bibtex/bibtexkey/Armbrust2010</rdf:li>\\n\" +\n                \"        </rdf:Bag>\\n\" +\n                \"      </dc:relation>\\n\" +\n                \"      <dc:format>application/pdf</dc:format>\\n\" +\n                \"      <dc:type>\\n\" +\n                \"        <rdf:Bag>\\n\" +\n                \"          <rdf:li>Misc</rdf:li>\\n\" +\n                \"        </rdf:Bag>\\n\" +\n                \"      </dc:type>\\n\" +\n                \"    </rdf:Description>\\n\" +\n                \"  </rdf:RDF>\";\n        assertEquals(expected, actual);\n    }\n","date":"2019-08-02 15:20:10","endLine":118,"groupId":"2095","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"writeMultipleEntriesInASingleFile","params":"(@TempDirPathtestFolder)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/99/947ac7a6bf437c4b7f046fdfd5b176ac6e840b.src","preCode":"    public void writeMultipleEntriesInASingleFile(@TempDir Path testFolder) throws Exception {\n        Path file = testFolder.resolve(\"ThisIsARandomlyNamedFile\");\n        Files.createFile(file);\n\n        BibEntry entryTuring = new BibEntry();\n        entryTuring.setField(\"author\", \"Alan Turing\");\n\n        BibEntry entryArmbrust = new BibEntry();\n        entryArmbrust.setField(\"author\", \"Michael Armbrust\");\n        entryArmbrust.setCiteKey(\"Armbrust2010\");\n\n        exporter.export(databaseContext, file, encoding, Arrays.asList(entryTuring, entryArmbrust));\n\n        String actual = Files.readAllLines(file).stream().collect(Collectors.joining(\"\\n\")); \r\n\n        String expected = \"  <rdf:RDF xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\">\\n\" +\n                \"    <rdf:Description xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\" rdf:about=\\\"\\\">\\n\" +\n                \"      <dc:creator>\\n\" +\n                \"        <rdf:Seq>\\n\" +\n                \"          <rdf:li>Alan Turing</rdf:li>\\n\" +\n                \"        </rdf:Seq>\\n\" +\n                \"      </dc:creator>\\n\" +\n                \"      <dc:format>application/pdf</dc:format>\\n\" +\n                \"      <dc:type>\\n\" +\n                \"        <rdf:Bag>\\n\" +\n                \"          <rdf:li>Misc</rdf:li>\\n\" +\n                \"        </rdf:Bag>\\n\" +\n                \"      </dc:type>\\n\" +\n                \"    </rdf:Description>\\n\" +\n                \"    <rdf:Description xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\" rdf:about=\\\"\\\">\\n\" +\n                \"      <dc:creator>\\n\" +\n                \"        <rdf:Seq>\\n\" +\n                \"          <rdf:li>Michael Armbrust</rdf:li>\\n\" +\n                \"        </rdf:Seq>\\n\" +\n                \"      </dc:creator>\\n\" +\n                \"      <dc:relation>\\n\" +\n                \"        <rdf:Bag>\\n\" +\n                \"          <rdf:li>bibtex/bibtexkey/Armbrust2010</rdf:li>\\n\" +\n                \"        </rdf:Bag>\\n\" +\n                \"      </dc:relation>\\n\" +\n                \"      <dc:format>application/pdf</dc:format>\\n\" +\n                \"      <dc:type>\\n\" +\n                \"        <rdf:Bag>\\n\" +\n                \"          <rdf:li>Misc</rdf:li>\\n\" +\n                \"        </rdf:Bag>\\n\" +\n                \"      </dc:type>\\n\" +\n                \"    </rdf:Description>\\n\" +\n                \"  </rdf:RDF>\";\n        assertEquals(expected, actual);\n    }\n","realPath":"src/test/java/org/jabref/logic/exporter/XmpExporterTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":69,"status":"M"},{"authorDate":"2019-08-02 15:20:10","commitOrder":5,"curCode":"    public void exportSingleEntryWithPrivacyFilter(@TempDir Path testFolder) throws Exception {\n        when(xmpPreferences.getXmpPrivacyFilter()).thenReturn(Collections.singletonList(StandardField.AUTHOR));\n        when(xmpPreferences.isUseXMPPrivacyFilter()).thenReturn(true);\n\n        Path file = testFolder.resolve(\"ThisIsARandomlyNamedFile\");\n        Files.createFile(file);\n\n        BibEntry entry = new BibEntry();\n        entry.setField(StandardField.AUTHOR, \"Alan Turing\");\n\n        exporter.export(databaseContext, file, encoding, Collections.singletonList(entry));\n        String actual = String.join(\"\\n\", Files.readAllLines(file));\n        String expected = \"  <rdf:RDF xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\">\\n\" +\n                \"    <rdf:Description xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\" rdf:about=\\\"\\\">\\n\" +\n                \"      <dc:format>application/pdf</dc:format>\\n\" +\n                \"      <dc:type>\\n\" +\n                \"        <rdf:Bag>\\n\" +\n                \"          <rdf:li>Misc</rdf:li>\\n\" +\n                \"        </rdf:Bag>\\n\" +\n                \"      </dc:type>\\n\" +\n                \"    </rdf:Description>\\n\" +\n                \"  </rdf:RDF>\";\n        assertEquals(expected, actual);\n    }\n","date":"2019-08-02 15:20:10","endLine":209,"groupId":"2097","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"exportSingleEntryWithPrivacyFilter","params":"(@TempDirPathtestFolder)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/99/947ac7a6bf437c4b7f046fdfd5b176ac6e840b.src","preCode":"    public void exportSingleEntryWithPrivacyFilter(@TempDir Path testFolder) throws Exception {\n        when(xmpPreferences.getXmpPrivacyFilter()).thenReturn(Arrays.asList(\"author\"));\n        when(xmpPreferences.isUseXMPPrivacyFilter()).thenReturn(true);\n\n        Path file = testFolder.resolve(\"ThisIsARandomlyNamedFile\");\n        Files.createFile(file);\n\n        BibEntry entry = new BibEntry();\n        entry.setField(\"author\", \"Alan Turing\");\n\n        exporter.export(databaseContext, file, encoding, Collections.singletonList(entry));\n        String actual = Files.readAllLines(file).stream().collect(Collectors.joining(\"\\n\"));\n        String expected = \"  <rdf:RDF xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\">\\n\" +\n                \"    <rdf:Description xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\" rdf:about=\\\"\\\">\\n\" +\n                \"      <dc:format>application/pdf</dc:format>\\n\" +\n                \"      <dc:type>\\n\" +\n                \"        <rdf:Bag>\\n\" +\n                \"          <rdf:li>Misc</rdf:li>\\n\" +\n                \"        </rdf:Bag>\\n\" +\n                \"      </dc:type>\\n\" +\n                \"    </rdf:Description>\\n\" +\n                \"  </rdf:RDF>\";\n        assertEquals(expected, actual);\n    }\n","realPath":"src/test/java/org/jabref/logic/exporter/XmpExporterTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":186,"status":"M"}],"commitId":"4b39b78e4afcd6c36b385f5c46f1d9a4eac2e29b","commitMessage":"@@@Move to extended enums for fields and entry types (#5148)\n\n* Introduce interface for fields\n\n* Continue using fields interface instead of strings\n\n* Introduce OrFields class\n\n* Move FieldProperty\n\n* Convert entry types to extended enum\n\n* Start fixing build\n\n* Fix build\n\n* Start fixing tests\n\n* Everything compiles again\n\n* Make model tests pass\n\n* Fix most tests\n\n* Fix build\n\n* Fix a few more tests\n\n* Fix a few more tests\n\n* Fix a few more tests\n\n* Fix a few more tests\n\n* Fix checkstyle issues\n\n* Fix more tests\n\n* Fix more tests\n\n* Disable test that fails on CI\n\n* Disable test that fails on CI\n","date":"2019-08-02 15:20:10","modifiedFileCount":"439","status":"M","submitter":"Tobias Diez"},{"authorTime":"2019-10-27 18:43:45","codes":[{"authorDate":"2019-08-02 15:20:10","commitOrder":6,"curCode":"    public void writeMultipleEntriesInASingleFile(@TempDir Path testFolder) throws Exception {\n        Path file = testFolder.resolve(\"ThisIsARandomlyNamedFile\");\n        Files.createFile(file);\n\n        BibEntry entryTuring = new BibEntry();\n        entryTuring.setField(StandardField.AUTHOR, \"Alan Turing\");\n\n        BibEntry entryArmbrust = new BibEntry();\n        entryArmbrust.setField(StandardField.AUTHOR, \"Michael Armbrust\");\n        entryArmbrust.setCiteKey(\"Armbrust2010\");\n\n        exporter.export(databaseContext, file, encoding, Arrays.asList(entryTuring, entryArmbrust));\n\n        String actual = String.join(\"\\n\", Files.readAllLines(file)); \r\n\n        String expected = \"  <rdf:RDF xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\">\\n\" +\n                \"    <rdf:Description xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\" rdf:about=\\\"\\\">\\n\" +\n                \"      <dc:creator>\\n\" +\n                \"        <rdf:Seq>\\n\" +\n                \"          <rdf:li>Alan Turing</rdf:li>\\n\" +\n                \"        </rdf:Seq>\\n\" +\n                \"      </dc:creator>\\n\" +\n                \"      <dc:format>application/pdf</dc:format>\\n\" +\n                \"      <dc:type>\\n\" +\n                \"        <rdf:Bag>\\n\" +\n                \"          <rdf:li>Misc</rdf:li>\\n\" +\n                \"        </rdf:Bag>\\n\" +\n                \"      </dc:type>\\n\" +\n                \"    </rdf:Description>\\n\" +\n                \"    <rdf:Description xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\" rdf:about=\\\"\\\">\\n\" +\n                \"      <dc:creator>\\n\" +\n                \"        <rdf:Seq>\\n\" +\n                \"          <rdf:li>Michael Armbrust</rdf:li>\\n\" +\n                \"        </rdf:Seq>\\n\" +\n                \"      </dc:creator>\\n\" +\n                \"      <dc:relation>\\n\" +\n                \"        <rdf:Bag>\\n\" +\n                \"          <rdf:li>bibtex/bibtexkey/Armbrust2010</rdf:li>\\n\" +\n                \"        </rdf:Bag>\\n\" +\n                \"      </dc:relation>\\n\" +\n                \"      <dc:format>application/pdf</dc:format>\\n\" +\n                \"      <dc:type>\\n\" +\n                \"        <rdf:Bag>\\n\" +\n                \"          <rdf:li>Misc</rdf:li>\\n\" +\n                \"        </rdf:Bag>\\n\" +\n                \"      </dc:type>\\n\" +\n                \"    </rdf:Description>\\n\" +\n                \"  </rdf:RDF>\";\n        assertEquals(expected, actual);\n    }\n","date":"2019-08-02 15:20:10","endLine":118,"groupId":"2095","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"writeMultipleEntriesInASingleFile","params":"(@TempDirPathtestFolder)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/99/947ac7a6bf437c4b7f046fdfd5b176ac6e840b.src","preCode":"    public void writeMultipleEntriesInASingleFile(@TempDir Path testFolder) throws Exception {\n        Path file = testFolder.resolve(\"ThisIsARandomlyNamedFile\");\n        Files.createFile(file);\n\n        BibEntry entryTuring = new BibEntry();\n        entryTuring.setField(StandardField.AUTHOR, \"Alan Turing\");\n\n        BibEntry entryArmbrust = new BibEntry();\n        entryArmbrust.setField(StandardField.AUTHOR, \"Michael Armbrust\");\n        entryArmbrust.setCiteKey(\"Armbrust2010\");\n\n        exporter.export(databaseContext, file, encoding, Arrays.asList(entryTuring, entryArmbrust));\n\n        String actual = String.join(\"\\n\", Files.readAllLines(file)); \r\n\n        String expected = \"  <rdf:RDF xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\">\\n\" +\n                \"    <rdf:Description xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\" rdf:about=\\\"\\\">\\n\" +\n                \"      <dc:creator>\\n\" +\n                \"        <rdf:Seq>\\n\" +\n                \"          <rdf:li>Alan Turing</rdf:li>\\n\" +\n                \"        </rdf:Seq>\\n\" +\n                \"      </dc:creator>\\n\" +\n                \"      <dc:format>application/pdf</dc:format>\\n\" +\n                \"      <dc:type>\\n\" +\n                \"        <rdf:Bag>\\n\" +\n                \"          <rdf:li>Misc</rdf:li>\\n\" +\n                \"        </rdf:Bag>\\n\" +\n                \"      </dc:type>\\n\" +\n                \"    </rdf:Description>\\n\" +\n                \"    <rdf:Description xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\" rdf:about=\\\"\\\">\\n\" +\n                \"      <dc:creator>\\n\" +\n                \"        <rdf:Seq>\\n\" +\n                \"          <rdf:li>Michael Armbrust</rdf:li>\\n\" +\n                \"        </rdf:Seq>\\n\" +\n                \"      </dc:creator>\\n\" +\n                \"      <dc:relation>\\n\" +\n                \"        <rdf:Bag>\\n\" +\n                \"          <rdf:li>bibtex/bibtexkey/Armbrust2010</rdf:li>\\n\" +\n                \"        </rdf:Bag>\\n\" +\n                \"      </dc:relation>\\n\" +\n                \"      <dc:format>application/pdf</dc:format>\\n\" +\n                \"      <dc:type>\\n\" +\n                \"        <rdf:Bag>\\n\" +\n                \"          <rdf:li>Misc</rdf:li>\\n\" +\n                \"        </rdf:Bag>\\n\" +\n                \"      </dc:type>\\n\" +\n                \"    </rdf:Description>\\n\" +\n                \"  </rdf:RDF>\";\n        assertEquals(expected, actual);\n    }\n","realPath":"src/test/java/org/jabref/logic/exporter/XmpExporterTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":69,"status":"N"},{"authorDate":"2019-10-27 18:43:45","commitOrder":6,"curCode":"    public void exportSingleEntryWithPrivacyFilter(@TempDir Path testFolder) throws Exception {\n        when(xmpPreferences.getXmpPrivacyFilter()).thenReturn(Collections.singleton(StandardField.AUTHOR));\n        when(xmpPreferences.isUseXMPPrivacyFilter()).thenReturn(true);\n\n        Path file = testFolder.resolve(\"ThisIsARandomlyNamedFile\");\n        Files.createFile(file);\n\n        BibEntry entry = new BibEntry();\n        entry.setField(StandardField.AUTHOR, \"Alan Turing\");\n\n        exporter.export(databaseContext, file, encoding, Collections.singletonList(entry));\n        String actual = String.join(\"\\n\", Files.readAllLines(file));\n        String expected = \"  <rdf:RDF xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\">\\n\" +\n                \"    <rdf:Description xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\" rdf:about=\\\"\\\">\\n\" +\n                \"      <dc:format>application/pdf</dc:format>\\n\" +\n                \"      <dc:type>\\n\" +\n                \"        <rdf:Bag>\\n\" +\n                \"          <rdf:li>Misc</rdf:li>\\n\" +\n                \"        </rdf:Bag>\\n\" +\n                \"      </dc:type>\\n\" +\n                \"    </rdf:Description>\\n\" +\n                \"  </rdf:RDF>\";\n        assertEquals(expected, actual);\n    }\n","date":"2019-10-27 18:43:45","endLine":209,"groupId":"2097","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"exportSingleEntryWithPrivacyFilter","params":"(@TempDirPathtestFolder)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/3f/14e69d66ba1ab809a3757203df50e1a0897358.src","preCode":"    public void exportSingleEntryWithPrivacyFilter(@TempDir Path testFolder) throws Exception {\n        when(xmpPreferences.getXmpPrivacyFilter()).thenReturn(Collections.singletonList(StandardField.AUTHOR));\n        when(xmpPreferences.isUseXMPPrivacyFilter()).thenReturn(true);\n\n        Path file = testFolder.resolve(\"ThisIsARandomlyNamedFile\");\n        Files.createFile(file);\n\n        BibEntry entry = new BibEntry();\n        entry.setField(StandardField.AUTHOR, \"Alan Turing\");\n\n        exporter.export(databaseContext, file, encoding, Collections.singletonList(entry));\n        String actual = String.join(\"\\n\", Files.readAllLines(file));\n        String expected = \"  <rdf:RDF xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\">\\n\" +\n                \"    <rdf:Description xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\" rdf:about=\\\"\\\">\\n\" +\n                \"      <dc:format>application/pdf</dc:format>\\n\" +\n                \"      <dc:type>\\n\" +\n                \"        <rdf:Bag>\\n\" +\n                \"          <rdf:li>Misc</rdf:li>\\n\" +\n                \"        </rdf:Bag>\\n\" +\n                \"      </dc:type>\\n\" +\n                \"    </rdf:Description>\\n\" +\n                \"  </rdf:RDF>\";\n        assertEquals(expected, actual);\n    }\n","realPath":"src/test/java/org/jabref/logic/exporter/XmpExporterTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":186,"status":"M"}],"commitId":"9d8cac4428fc55d78668a024e62932c35cd7ea67","commitMessage":"@@@Merge pull request #5519 from JabRef/fixXmp\n\nFix XMP null error","date":"2019-10-27 18:43:45","modifiedFileCount":"5","status":"M","submitter":"Christoph"},{"authorTime":"2020-09-02 06:36:46","codes":[{"authorDate":"2019-08-02 15:20:10","commitOrder":7,"curCode":"    public void writeMultipleEntriesInASingleFile(@TempDir Path testFolder) throws Exception {\n        Path file = testFolder.resolve(\"ThisIsARandomlyNamedFile\");\n        Files.createFile(file);\n\n        BibEntry entryTuring = new BibEntry();\n        entryTuring.setField(StandardField.AUTHOR, \"Alan Turing\");\n\n        BibEntry entryArmbrust = new BibEntry();\n        entryArmbrust.setField(StandardField.AUTHOR, \"Michael Armbrust\");\n        entryArmbrust.setCiteKey(\"Armbrust2010\");\n\n        exporter.export(databaseContext, file, encoding, Arrays.asList(entryTuring, entryArmbrust));\n\n        String actual = String.join(\"\\n\", Files.readAllLines(file)); \r\n\n        String expected = \"  <rdf:RDF xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\">\\n\" +\n                \"    <rdf:Description xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\" rdf:about=\\\"\\\">\\n\" +\n                \"      <dc:creator>\\n\" +\n                \"        <rdf:Seq>\\n\" +\n                \"          <rdf:li>Alan Turing</rdf:li>\\n\" +\n                \"        </rdf:Seq>\\n\" +\n                \"      </dc:creator>\\n\" +\n                \"      <dc:format>application/pdf</dc:format>\\n\" +\n                \"      <dc:type>\\n\" +\n                \"        <rdf:Bag>\\n\" +\n                \"          <rdf:li>Misc</rdf:li>\\n\" +\n                \"        </rdf:Bag>\\n\" +\n                \"      </dc:type>\\n\" +\n                \"    </rdf:Description>\\n\" +\n                \"    <rdf:Description xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\" rdf:about=\\\"\\\">\\n\" +\n                \"      <dc:creator>\\n\" +\n                \"        <rdf:Seq>\\n\" +\n                \"          <rdf:li>Michael Armbrust</rdf:li>\\n\" +\n                \"        </rdf:Seq>\\n\" +\n                \"      </dc:creator>\\n\" +\n                \"      <dc:relation>\\n\" +\n                \"        <rdf:Bag>\\n\" +\n                \"          <rdf:li>bibtex/bibtexkey/Armbrust2010</rdf:li>\\n\" +\n                \"        </rdf:Bag>\\n\" +\n                \"      </dc:relation>\\n\" +\n                \"      <dc:format>application/pdf</dc:format>\\n\" +\n                \"      <dc:type>\\n\" +\n                \"        <rdf:Bag>\\n\" +\n                \"          <rdf:li>Misc</rdf:li>\\n\" +\n                \"        </rdf:Bag>\\n\" +\n                \"      </dc:type>\\n\" +\n                \"    </rdf:Description>\\n\" +\n                \"  </rdf:RDF>\";\n        assertEquals(expected, actual);\n    }\n","date":"2019-08-02 15:20:10","endLine":118,"groupId":"2095","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"writeMultipleEntriesInASingleFile","params":"(@TempDirPathtestFolder)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/99/947ac7a6bf437c4b7f046fdfd5b176ac6e840b.src","preCode":"    public void writeMultipleEntriesInASingleFile(@TempDir Path testFolder) throws Exception {\n        Path file = testFolder.resolve(\"ThisIsARandomlyNamedFile\");\n        Files.createFile(file);\n\n        BibEntry entryTuring = new BibEntry();\n        entryTuring.setField(StandardField.AUTHOR, \"Alan Turing\");\n\n        BibEntry entryArmbrust = new BibEntry();\n        entryArmbrust.setField(StandardField.AUTHOR, \"Michael Armbrust\");\n        entryArmbrust.setCiteKey(\"Armbrust2010\");\n\n        exporter.export(databaseContext, file, encoding, Arrays.asList(entryTuring, entryArmbrust));\n\n        String actual = String.join(\"\\n\", Files.readAllLines(file)); \r\n\n        String expected = \"  <rdf:RDF xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\">\\n\" +\n                \"    <rdf:Description xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\" rdf:about=\\\"\\\">\\n\" +\n                \"      <dc:creator>\\n\" +\n                \"        <rdf:Seq>\\n\" +\n                \"          <rdf:li>Alan Turing</rdf:li>\\n\" +\n                \"        </rdf:Seq>\\n\" +\n                \"      </dc:creator>\\n\" +\n                \"      <dc:format>application/pdf</dc:format>\\n\" +\n                \"      <dc:type>\\n\" +\n                \"        <rdf:Bag>\\n\" +\n                \"          <rdf:li>Misc</rdf:li>\\n\" +\n                \"        </rdf:Bag>\\n\" +\n                \"      </dc:type>\\n\" +\n                \"    </rdf:Description>\\n\" +\n                \"    <rdf:Description xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\" rdf:about=\\\"\\\">\\n\" +\n                \"      <dc:creator>\\n\" +\n                \"        <rdf:Seq>\\n\" +\n                \"          <rdf:li>Michael Armbrust</rdf:li>\\n\" +\n                \"        </rdf:Seq>\\n\" +\n                \"      </dc:creator>\\n\" +\n                \"      <dc:relation>\\n\" +\n                \"        <rdf:Bag>\\n\" +\n                \"          <rdf:li>bibtex/bibtexkey/Armbrust2010</rdf:li>\\n\" +\n                \"        </rdf:Bag>\\n\" +\n                \"      </dc:relation>\\n\" +\n                \"      <dc:format>application/pdf</dc:format>\\n\" +\n                \"      <dc:type>\\n\" +\n                \"        <rdf:Bag>\\n\" +\n                \"          <rdf:li>Misc</rdf:li>\\n\" +\n                \"        </rdf:Bag>\\n\" +\n                \"      </dc:type>\\n\" +\n                \"    </rdf:Description>\\n\" +\n                \"  </rdf:RDF>\";\n        assertEquals(expected, actual);\n    }\n","realPath":"src/test/java/org/jabref/logic/exporter/XmpExporterTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":69,"status":"N"},{"authorDate":"2020-09-02 06:36:46","commitOrder":7,"curCode":"    public void exportSingleEntryWithPrivacyFilter(@TempDir Path testFolder) throws Exception {\n        when(xmpPreferences.getXmpPrivacyFilter()).thenReturn(Collections.singleton(StandardField.AUTHOR));\n        when(xmpPreferences.shouldUseXmpPrivacyFilter()).thenReturn(true);\n\n        Path file = testFolder.resolve(\"ThisIsARandomlyNamedFile\");\n        Files.createFile(file);\n\n        BibEntry entry = new BibEntry();\n        entry.setField(StandardField.AUTHOR, \"Alan Turing\");\n\n        exporter.export(databaseContext, file, encoding, Collections.singletonList(entry));\n        String actual = String.join(\"\\n\", Files.readAllLines(file));\n        String expected = \"  <rdf:RDF xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\">\\n\" +\n                \"    <rdf:Description xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\" rdf:about=\\\"\\\">\\n\" +\n                \"      <dc:format>application/pdf</dc:format>\\n\" +\n                \"      <dc:type>\\n\" +\n                \"        <rdf:Bag>\\n\" +\n                \"          <rdf:li>Misc</rdf:li>\\n\" +\n                \"        </rdf:Bag>\\n\" +\n                \"      </dc:type>\\n\" +\n                \"    </rdf:Description>\\n\" +\n                \"  </rdf:RDF>\";\n        assertEquals(expected, actual);\n    }\n","date":"2020-09-02 06:36:46","endLine":209,"groupId":"2097","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"exportSingleEntryWithPrivacyFilter","params":"(@TempDirPathtestFolder)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/76/2f14de866327a196f26952f022cbffb4600d5c.src","preCode":"    public void exportSingleEntryWithPrivacyFilter(@TempDir Path testFolder) throws Exception {\n        when(xmpPreferences.getXmpPrivacyFilter()).thenReturn(Collections.singleton(StandardField.AUTHOR));\n        when(xmpPreferences.isUseXMPPrivacyFilter()).thenReturn(true);\n\n        Path file = testFolder.resolve(\"ThisIsARandomlyNamedFile\");\n        Files.createFile(file);\n\n        BibEntry entry = new BibEntry();\n        entry.setField(StandardField.AUTHOR, \"Alan Turing\");\n\n        exporter.export(databaseContext, file, encoding, Collections.singletonList(entry));\n        String actual = String.join(\"\\n\", Files.readAllLines(file));\n        String expected = \"  <rdf:RDF xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\">\\n\" +\n                \"    <rdf:Description xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\" rdf:about=\\\"\\\">\\n\" +\n                \"      <dc:format>application/pdf</dc:format>\\n\" +\n                \"      <dc:type>\\n\" +\n                \"        <rdf:Bag>\\n\" +\n                \"          <rdf:li>Misc</rdf:li>\\n\" +\n                \"        </rdf:Bag>\\n\" +\n                \"      </dc:type>\\n\" +\n                \"    </rdf:Description>\\n\" +\n                \"  </rdf:RDF>\";\n        assertEquals(expected, actual);\n    }\n","realPath":"src/test/java/org/jabref/logic/exporter/XmpExporterTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":186,"status":"M"}],"commitId":"585034197468439e8aede24f80430e7a56868fe4","commitMessage":"@@@Refactor of remaining preference tabs to PreferencesService (#6836)\n\n* Refactored NameFormatterTab to use PreferencesService\n\n* Refactored XmpPreferencesTab\n\n* Fixed missing storeNameFormatterPreferences\n\n* Refactor PreviewPreferences to conventions and use PreferencesService\n\n* Fixed not reloading PreviewPreferences\n\n* Removed unused preference\n\n* Introduced GroupsPreferences and refactored GroupsTabViewModel to use them\n\n* Cleanups\n\n* CHANGELOG.md","date":"2020-09-02 06:36:46","modifiedFileCount":"40","status":"M","submitter":"Carl Christian Snethlage"},{"authorTime":"2020-09-02 06:36:46","codes":[{"authorDate":"2020-09-08 21:34:34","commitOrder":8,"curCode":"    public void writeMultipleEntriesInASingleFile(@TempDir Path testFolder) throws Exception {\n        Path file = testFolder.resolve(\"ThisIsARandomlyNamedFile\");\n        Files.createFile(file);\n\n        BibEntry entryTuring = new BibEntry();\n        entryTuring.setField(StandardField.AUTHOR, \"Alan Turing\");\n\n        BibEntry entryArmbrust = new BibEntry();\n        entryArmbrust.setField(StandardField.AUTHOR, \"Michael Armbrust\");\n        entryArmbrust.setCitationKey(\"Armbrust2010\");\n\n        exporter.export(databaseContext, file, encoding, Arrays.asList(entryTuring, entryArmbrust));\n\n        String actual = String.join(\"\\n\", Files.readAllLines(file)); \r\n\n        String expected = \"  <rdf:RDF xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\">\\n\" +\n                \"    <rdf:Description xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\" rdf:about=\\\"\\\">\\n\" +\n                \"      <dc:creator>\\n\" +\n                \"        <rdf:Seq>\\n\" +\n                \"          <rdf:li>Alan Turing</rdf:li>\\n\" +\n                \"        </rdf:Seq>\\n\" +\n                \"      </dc:creator>\\n\" +\n                \"      <dc:format>application/pdf</dc:format>\\n\" +\n                \"      <dc:type>\\n\" +\n                \"        <rdf:Bag>\\n\" +\n                \"          <rdf:li>Misc</rdf:li>\\n\" +\n                \"        </rdf:Bag>\\n\" +\n                \"      </dc:type>\\n\" +\n                \"    </rdf:Description>\\n\" +\n                \"    <rdf:Description xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\" rdf:about=\\\"\\\">\\n\" +\n                \"      <dc:creator>\\n\" +\n                \"        <rdf:Seq>\\n\" +\n                \"          <rdf:li>Michael Armbrust</rdf:li>\\n\" +\n                \"        </rdf:Seq>\\n\" +\n                \"      </dc:creator>\\n\" +\n                \"      <dc:relation>\\n\" +\n                \"        <rdf:Bag>\\n\" +\n                \"          <rdf:li>bibtex/citationkey/Armbrust2010</rdf:li>\\n\" +\n                \"        </rdf:Bag>\\n\" +\n                \"      </dc:relation>\\n\" +\n                \"      <dc:format>application/pdf</dc:format>\\n\" +\n                \"      <dc:type>\\n\" +\n                \"        <rdf:Bag>\\n\" +\n                \"          <rdf:li>Misc</rdf:li>\\n\" +\n                \"        </rdf:Bag>\\n\" +\n                \"      </dc:type>\\n\" +\n                \"    </rdf:Description>\\n\" +\n                \"  </rdf:RDF>\";\n        assertEquals(expected, actual);\n    }\n","date":"2020-09-08 21:34:34","endLine":117,"groupId":"10724","id":11,"instanceNumber":1,"isCurCommit":1,"methodName":"writeMultipleEntriesInASingleFile","params":"(@TempDirPathtestFolder)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/d6/37a9578586d0f7a98550c3508e4e3fb42f4b87.src","preCode":"    public void writeMultipleEntriesInASingleFile(@TempDir Path testFolder) throws Exception {\n        Path file = testFolder.resolve(\"ThisIsARandomlyNamedFile\");\n        Files.createFile(file);\n\n        BibEntry entryTuring = new BibEntry();\n        entryTuring.setField(StandardField.AUTHOR, \"Alan Turing\");\n\n        BibEntry entryArmbrust = new BibEntry();\n        entryArmbrust.setField(StandardField.AUTHOR, \"Michael Armbrust\");\n        entryArmbrust.setCiteKey(\"Armbrust2010\");\n\n        exporter.export(databaseContext, file, encoding, Arrays.asList(entryTuring, entryArmbrust));\n\n        String actual = String.join(\"\\n\", Files.readAllLines(file)); \r\n\n        String expected = \"  <rdf:RDF xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\">\\n\" +\n                \"    <rdf:Description xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\" rdf:about=\\\"\\\">\\n\" +\n                \"      <dc:creator>\\n\" +\n                \"        <rdf:Seq>\\n\" +\n                \"          <rdf:li>Alan Turing</rdf:li>\\n\" +\n                \"        </rdf:Seq>\\n\" +\n                \"      </dc:creator>\\n\" +\n                \"      <dc:format>application/pdf</dc:format>\\n\" +\n                \"      <dc:type>\\n\" +\n                \"        <rdf:Bag>\\n\" +\n                \"          <rdf:li>Misc</rdf:li>\\n\" +\n                \"        </rdf:Bag>\\n\" +\n                \"      </dc:type>\\n\" +\n                \"    </rdf:Description>\\n\" +\n                \"    <rdf:Description xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\" rdf:about=\\\"\\\">\\n\" +\n                \"      <dc:creator>\\n\" +\n                \"        <rdf:Seq>\\n\" +\n                \"          <rdf:li>Michael Armbrust</rdf:li>\\n\" +\n                \"        </rdf:Seq>\\n\" +\n                \"      </dc:creator>\\n\" +\n                \"      <dc:relation>\\n\" +\n                \"        <rdf:Bag>\\n\" +\n                \"          <rdf:li>bibtex/bibtexkey/Armbrust2010</rdf:li>\\n\" +\n                \"        </rdf:Bag>\\n\" +\n                \"      </dc:relation>\\n\" +\n                \"      <dc:format>application/pdf</dc:format>\\n\" +\n                \"      <dc:type>\\n\" +\n                \"        <rdf:Bag>\\n\" +\n                \"          <rdf:li>Misc</rdf:li>\\n\" +\n                \"        </rdf:Bag>\\n\" +\n                \"      </dc:type>\\n\" +\n                \"    </rdf:Description>\\n\" +\n                \"  </rdf:RDF>\";\n        assertEquals(expected, actual);\n    }\n","realPath":"src/test/java/org/jabref/logic/exporter/XmpExporterTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":68,"status":"M"},{"authorDate":"2020-09-02 06:36:46","commitOrder":8,"curCode":"    public void exportSingleEntryWithPrivacyFilter(@TempDir Path testFolder) throws Exception {\n        when(xmpPreferences.getXmpPrivacyFilter()).thenReturn(Collections.singleton(StandardField.AUTHOR));\n        when(xmpPreferences.shouldUseXmpPrivacyFilter()).thenReturn(true);\n\n        Path file = testFolder.resolve(\"ThisIsARandomlyNamedFile\");\n        Files.createFile(file);\n\n        BibEntry entry = new BibEntry();\n        entry.setField(StandardField.AUTHOR, \"Alan Turing\");\n\n        exporter.export(databaseContext, file, encoding, Collections.singletonList(entry));\n        String actual = String.join(\"\\n\", Files.readAllLines(file));\n        String expected = \"  <rdf:RDF xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\">\\n\" +\n                \"    <rdf:Description xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\" rdf:about=\\\"\\\">\\n\" +\n                \"      <dc:format>application/pdf</dc:format>\\n\" +\n                \"      <dc:type>\\n\" +\n                \"        <rdf:Bag>\\n\" +\n                \"          <rdf:li>Misc</rdf:li>\\n\" +\n                \"        </rdf:Bag>\\n\" +\n                \"      </dc:type>\\n\" +\n                \"    </rdf:Description>\\n\" +\n                \"  </rdf:RDF>\";\n        assertEquals(expected, actual);\n    }\n","date":"2020-09-02 06:36:46","endLine":209,"groupId":"10724","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"exportSingleEntryWithPrivacyFilter","params":"(@TempDirPathtestFolder)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/76/2f14de866327a196f26952f022cbffb4600d5c.src","preCode":"    public void exportSingleEntryWithPrivacyFilter(@TempDir Path testFolder) throws Exception {\n        when(xmpPreferences.getXmpPrivacyFilter()).thenReturn(Collections.singleton(StandardField.AUTHOR));\n        when(xmpPreferences.shouldUseXmpPrivacyFilter()).thenReturn(true);\n\n        Path file = testFolder.resolve(\"ThisIsARandomlyNamedFile\");\n        Files.createFile(file);\n\n        BibEntry entry = new BibEntry();\n        entry.setField(StandardField.AUTHOR, \"Alan Turing\");\n\n        exporter.export(databaseContext, file, encoding, Collections.singletonList(entry));\n        String actual = String.join(\"\\n\", Files.readAllLines(file));\n        String expected = \"  <rdf:RDF xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\">\\n\" +\n                \"    <rdf:Description xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\" rdf:about=\\\"\\\">\\n\" +\n                \"      <dc:format>application/pdf</dc:format>\\n\" +\n                \"      <dc:type>\\n\" +\n                \"        <rdf:Bag>\\n\" +\n                \"          <rdf:li>Misc</rdf:li>\\n\" +\n                \"        </rdf:Bag>\\n\" +\n                \"      </dc:type>\\n\" +\n                \"    </rdf:Description>\\n\" +\n                \"  </rdf:RDF>\";\n        assertEquals(expected, actual);\n    }\n","realPath":"src/test/java/org/jabref/logic/exporter/XmpExporterTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":186,"status":"N"}],"commitId":"6dec1747d8a1c89f6c62fc1d1939d88411f17eba","commitMessage":"@@@Complete rebranding of `bibtexkey` as `citationkey` (#6875)\n\n","date":"2020-09-08 21:34:34","modifiedFileCount":"127","status":"M","submitter":"Tobias Diez"}]
