[{"authorTime":"2017-03-16 23:48:38","codes":[{"authorDate":"2017-03-16 23:48:38","commitOrder":2,"curCode":"    private static ExplicitGroup explicitGroupFromString(String input, Character keywordSeparator) throws ParseException {\n        if (!input.startsWith(MetadataSerializationConfiguration.EXPLICIT_GROUP_ID)) {\n            throw new IllegalArgumentException(\"ExplicitGroup cannot be created from \\\"\" + input + \"\\\".\");\n        }\n        QuotedStringTokenizer tok = new QuotedStringTokenizer(input.substring(MetadataSerializationConfiguration.EXPLICIT_GROUP_ID.length()),\n                MetadataSerializationConfiguration.GROUP_UNIT_SEPARATOR, MetadataSerializationConfiguration.GROUP_QUOTE_CHAR);\n\n        String name = tok.nextToken();\n        try {\n            int context = Integer.parseInt(tok.nextToken());\n            ExplicitGroup newGroup = new ExplicitGroup(name, GroupHierarchyType.getByNumberOrDefault(context), keywordSeparator);\n            addGroupDetails(tok, newGroup);\n            return newGroup;\n        } catch (NumberFormatException exception) {\n            throw new ParseException(\"Could not parse context in \" + input);\n        }\n    }\n","date":"2017-03-16 23:48:38","endLine":178,"groupId":"10282","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"explicitGroupFromString","params":"(Stringinput@CharacterkeywordSeparator)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/a7/69f6e7297d27696d2f9c19a296898b530afa2e.src","preCode":"    private static ExplicitGroup explicitGroupFromString(String input, Character keywordSeparator) throws ParseException {\n        if (!input.startsWith(MetadataSerializationConfiguration.EXPLICIT_GROUP_ID)) {\n            throw new IllegalArgumentException(\"ExplicitGroup cannot be created from \\\"\" + input + \"\\\".\");\n        }\n        QuotedStringTokenizer tok = new QuotedStringTokenizer(input.substring(MetadataSerializationConfiguration.EXPLICIT_GROUP_ID.length()),\n                MetadataSerializationConfiguration.GROUP_UNIT_SEPARATOR, MetadataSerializationConfiguration.GROUP_QUOTE_CHAR);\n\n        String name = tok.nextToken();\n        try {\n            int context = Integer.parseInt(tok.nextToken());\n            ExplicitGroup newGroup = new ExplicitGroup(name, GroupHierarchyType.getByNumberOrDefault(context), keywordSeparator);\n            addGroupDetails(tok, newGroup);\n            return newGroup;\n        } catch (NumberFormatException exception) {\n            throw new ParseException(\"Could not parse context in \" + input);\n        }\n    }\n","realPath":"src/main/java/org/jabref/logic/importer/util/GroupsParser.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":162,"status":"MB"},{"authorDate":"2017-03-16 23:48:38","commitOrder":2,"curCode":"    private static ExplicitGroup legacyExplicitGroupFromString(String input, Character keywordSeparator) throws ParseException {\n        if (!input.startsWith(MetadataSerializationConfiguration.LEGACY_EXPLICIT_GROUP_ID)) {\n            throw new IllegalArgumentException(\"ExplicitGroup cannot be created from \\\"\" + input + \"\\\".\");\n        }\n        QuotedStringTokenizer tok = new QuotedStringTokenizer(input.substring(MetadataSerializationConfiguration.LEGACY_EXPLICIT_GROUP_ID.length()),\n                MetadataSerializationConfiguration.GROUP_UNIT_SEPARATOR, MetadataSerializationConfiguration.GROUP_QUOTE_CHAR);\n\n        String name = tok.nextToken();\n        try {\n            int context = Integer.parseInt(tok.nextToken());\n            ExplicitGroup newGroup = new ExplicitGroup(name, GroupHierarchyType.getByNumberOrDefault(context), keywordSeparator);\n            GroupsParser.addLegacyEntryKeys(tok, newGroup);\n            return newGroup;\n        } catch (NumberFormatException exception) {\n            throw new ParseException(\"Could not parse context in \" + input);\n        }\n    }\n","date":"2017-03-16 23:48:38","endLine":196,"groupId":"10282","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"legacyExplicitGroupFromString","params":"(Stringinput@CharacterkeywordSeparator)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/a7/69f6e7297d27696d2f9c19a296898b530afa2e.src","preCode":"    private static ExplicitGroup legacyExplicitGroupFromString(String input, Character keywordSeparator) throws ParseException {\n        if (!input.startsWith(MetadataSerializationConfiguration.LEGACY_EXPLICIT_GROUP_ID)) {\n            throw new IllegalArgumentException(\"ExplicitGroup cannot be created from \\\"\" + input + \"\\\".\");\n        }\n        QuotedStringTokenizer tok = new QuotedStringTokenizer(input.substring(MetadataSerializationConfiguration.LEGACY_EXPLICIT_GROUP_ID.length()),\n                MetadataSerializationConfiguration.GROUP_UNIT_SEPARATOR, MetadataSerializationConfiguration.GROUP_QUOTE_CHAR);\n\n        String name = tok.nextToken();\n        try {\n            int context = Integer.parseInt(tok.nextToken());\n            ExplicitGroup newGroup = new ExplicitGroup(name, GroupHierarchyType.getByNumberOrDefault(context), keywordSeparator);\n            GroupsParser.addLegacyEntryKeys(tok, newGroup);\n            return newGroup;\n        } catch (NumberFormatException exception) {\n            throw new ParseException(\"Could not parse context in \" + input);\n        }\n    }\n","realPath":"src/main/java/org/jabref/logic/importer/util/GroupsParser.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":180,"status":"B"}],"commitId":"8a436940004887a5e232c903e18139a97c42c461","commitMessage":"@@@Finally write the new group properties to the bib file: icon with color.  description.  expanded status and automatic groups (#2634)\n\n* Add serialization of group details: iconCode.  description.  color.  expanded status\n\n* Add serialization and parsing of automatic groups\n\n* Add changelog entry\n\n* Fix import order\n\n* Minor code cleanup\n\n* Fix tests\n\n* Fix tests part 2\n","date":"2017-03-16 23:48:38","modifiedFileCount":"11","status":"M","submitter":"Tobias Diez"},{"authorTime":"2019-04-05 22:40:30","codes":[{"authorDate":"2019-04-05 22:40:30","commitOrder":3,"curCode":"    private static ExplicitGroup explicitGroupFromString(String input, Character keywordSeparator) throws ParseException {\n        if (!input.startsWith(MetadataSerializationConfiguration.EXPLICIT_GROUP_ID)) {\n            throw new IllegalArgumentException(\"ExplicitGroup cannot be created from \\\"\" + input + \"\\\".\");\n        }\n        QuotedStringTokenizer tok = new QuotedStringTokenizer(input.substring(MetadataSerializationConfiguration.EXPLICIT_GROUP_ID.length()),\n                MetadataSerializationConfiguration.GROUP_UNIT_SEPARATOR, MetadataSerializationConfiguration.GROUP_QUOTE_CHAR);\n\n        String name = StringUtil.unquote(tok.nextToken(), MetadataSerializationConfiguration.GROUP_QUOTE_CHAR);\n        try {\n            int context = Integer.parseInt(tok.nextToken());\n            ExplicitGroup newGroup = new ExplicitGroup(name, GroupHierarchyType.getByNumberOrDefault(context), keywordSeparator);\n            addGroupDetails(tok, newGroup);\n            return newGroup;\n        } catch (NumberFormatException exception) {\n            throw new ParseException(\"Could not parse context in \" + input);\n        }\n    }\n","date":"2019-04-05 22:40:30","endLine":224,"groupId":"101033","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"explicitGroupFromString","params":"(Stringinput@CharacterkeywordSeparator)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/dd/25ce3dc7ac6fff7b059eb09a6547865dff33e0.src","preCode":"    private static ExplicitGroup explicitGroupFromString(String input, Character keywordSeparator) throws ParseException {\n        if (!input.startsWith(MetadataSerializationConfiguration.EXPLICIT_GROUP_ID)) {\n            throw new IllegalArgumentException(\"ExplicitGroup cannot be created from \\\"\" + input + \"\\\".\");\n        }\n        QuotedStringTokenizer tok = new QuotedStringTokenizer(input.substring(MetadataSerializationConfiguration.EXPLICIT_GROUP_ID.length()),\n                MetadataSerializationConfiguration.GROUP_UNIT_SEPARATOR, MetadataSerializationConfiguration.GROUP_QUOTE_CHAR);\n\n        String name = tok.nextToken();\n        try {\n            int context = Integer.parseInt(tok.nextToken());\n            ExplicitGroup newGroup = new ExplicitGroup(name, GroupHierarchyType.getByNumberOrDefault(context), keywordSeparator);\n            addGroupDetails(tok, newGroup);\n            return newGroup;\n        } catch (NumberFormatException exception) {\n            throw new ParseException(\"Could not parse context in \" + input);\n        }\n    }\n","realPath":"src/main/java/org/jabref/logic/importer/util/GroupsParser.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":208,"status":"M"},{"authorDate":"2019-04-05 22:40:30","commitOrder":3,"curCode":"    private static ExplicitGroup legacyExplicitGroupFromString(String input, Character keywordSeparator) throws ParseException {\n        if (!input.startsWith(MetadataSerializationConfiguration.LEGACY_EXPLICIT_GROUP_ID)) {\n            throw new IllegalArgumentException(\"ExplicitGroup cannot be created from \\\"\" + input + \"\\\".\");\n        }\n        QuotedStringTokenizer tok = new QuotedStringTokenizer(input.substring(MetadataSerializationConfiguration.LEGACY_EXPLICIT_GROUP_ID.length()),\n                MetadataSerializationConfiguration.GROUP_UNIT_SEPARATOR, MetadataSerializationConfiguration.GROUP_QUOTE_CHAR);\n\n        String name = StringUtil.unquote(tok.nextToken(), MetadataSerializationConfiguration.GROUP_QUOTE_CHAR);\n        try {\n            int context = Integer.parseInt(tok.nextToken());\n            ExplicitGroup newGroup = new ExplicitGroup(name, GroupHierarchyType.getByNumberOrDefault(context), keywordSeparator);\n            GroupsParser.addLegacyEntryKeys(tok, newGroup);\n            return newGroup;\n        } catch (NumberFormatException exception) {\n            throw new ParseException(\"Could not parse context in \" + input);\n        }\n    }\n","date":"2019-04-05 22:40:30","endLine":242,"groupId":"101033","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"legacyExplicitGroupFromString","params":"(Stringinput@CharacterkeywordSeparator)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/dd/25ce3dc7ac6fff7b059eb09a6547865dff33e0.src","preCode":"    private static ExplicitGroup legacyExplicitGroupFromString(String input, Character keywordSeparator) throws ParseException {\n        if (!input.startsWith(MetadataSerializationConfiguration.LEGACY_EXPLICIT_GROUP_ID)) {\n            throw new IllegalArgumentException(\"ExplicitGroup cannot be created from \\\"\" + input + \"\\\".\");\n        }\n        QuotedStringTokenizer tok = new QuotedStringTokenizer(input.substring(MetadataSerializationConfiguration.LEGACY_EXPLICIT_GROUP_ID.length()),\n                MetadataSerializationConfiguration.GROUP_UNIT_SEPARATOR, MetadataSerializationConfiguration.GROUP_QUOTE_CHAR);\n\n        String name = tok.nextToken();\n        try {\n            int context = Integer.parseInt(tok.nextToken());\n            ExplicitGroup newGroup = new ExplicitGroup(name, GroupHierarchyType.getByNumberOrDefault(context), keywordSeparator);\n            GroupsParser.addLegacyEntryKeys(tok, newGroup);\n            return newGroup;\n        } catch (NumberFormatException exception) {\n            throw new ParseException(\"Could not parse context in \" + input);\n        }\n    }\n","realPath":"src/main/java/org/jabref/logic/importer/util/GroupsParser.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":226,"status":"M"}],"commitId":"17bfe91cd5a87f3c0f7299b86686bde0075b2fc4","commitMessage":"@@@QuotedStringTokenizer now does not unquote (#4830)\n\n* QuotedStringTokenizer now does not unquote\n\n* Unquote to fix test failures\n\n* Add javadoc to nextToken\n","date":"2019-04-05 22:40:30","modifiedFileCount":"2","status":"M","submitter":"Abraham Polk"}]
