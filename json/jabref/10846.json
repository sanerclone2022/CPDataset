[{"authorTime":"2017-02-17 05:41:47","codes":[{"authorDate":"2017-02-17 05:41:47","commitOrder":1,"curCode":"    public void setGroupWithFalseDoesNotAddsPreviousAssignments() throws Exception {\n        ExplicitGroup oldGroup = new ExplicitGroup(\"OldGroup\", GroupHierarchyType.INDEPENDENT, ',');\n        oldGroup.add(entry);\n        GroupTreeNode node = GroupTreeNode.fromGroup(oldGroup);\n        AbstractGroup newGroup = new ExplicitGroup(\"NewGroup\", GroupHierarchyType.INDEPENDENT, ',');\n\n        node.setGroup(newGroup, false, false, entries);\n\n        assertFalse(newGroup.isMatch(entry));\n    }\n","date":"2017-02-17 05:41:47","endLine":234,"groupId":"939","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"setGroupWithFalseDoesNotAddsPreviousAssignments","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/44/d797d9826184ec107fb90053ad048715002e14.src","preCode":"    public void setGroupWithFalseDoesNotAddsPreviousAssignments() throws Exception {\n        ExplicitGroup oldGroup = new ExplicitGroup(\"OldGroup\", GroupHierarchyType.INDEPENDENT, ',');\n        oldGroup.add(entry);\n        GroupTreeNode node = GroupTreeNode.fromGroup(oldGroup);\n        AbstractGroup newGroup = new ExplicitGroup(\"NewGroup\", GroupHierarchyType.INDEPENDENT, ',');\n\n        node.setGroup(newGroup, false, false, entries);\n\n        assertFalse(newGroup.isMatch(entry));\n    }\n","realPath":"src/test/java/org/jabref/model/groups/GroupTreeNodeTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":225,"status":"B"},{"authorDate":"2017-02-17 05:41:47","commitOrder":1,"curCode":"    public void setGroupAddsOnlyPreviousAssignments() throws Exception {\n        ExplicitGroup oldGroup = new ExplicitGroup(\"OldGroup\", GroupHierarchyType.INDEPENDENT, ',');\n        assertFalse(oldGroup.isMatch(entry));\n        GroupTreeNode node = GroupTreeNode.fromGroup(oldGroup);\n        AbstractGroup newGroup = new ExplicitGroup(\"NewGroup\", GroupHierarchyType.INDEPENDENT, ',');\n\n        node.setGroup(newGroup, true, true, entries);\n\n        assertFalse(newGroup.isMatch(entry));\n    }\n","date":"2017-02-17 05:41:47","endLine":246,"groupId":"939","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"setGroupAddsOnlyPreviousAssignments","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/44/d797d9826184ec107fb90053ad048715002e14.src","preCode":"    public void setGroupAddsOnlyPreviousAssignments() throws Exception {\n        ExplicitGroup oldGroup = new ExplicitGroup(\"OldGroup\", GroupHierarchyType.INDEPENDENT, ',');\n        assertFalse(oldGroup.isMatch(entry));\n        GroupTreeNode node = GroupTreeNode.fromGroup(oldGroup);\n        AbstractGroup newGroup = new ExplicitGroup(\"NewGroup\", GroupHierarchyType.INDEPENDENT, ',');\n\n        node.setGroup(newGroup, true, true, entries);\n\n        assertFalse(newGroup.isMatch(entry));\n    }\n","realPath":"src/test/java/org/jabref/model/groups/GroupTreeNodeTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":237,"status":"B"}],"commitId":"ebbeb1d249edf7134abf92d24c2031ae54d19881","commitMessage":"@@@Merge branch 'net-sf-to-org-jabref'\n","date":"2017-02-17 05:41:47","modifiedFileCount":"1","status":"B","submitter":"Oliver Kopp"},{"authorTime":"2020-04-11 17:49:00","codes":[{"authorDate":"2020-04-11 17:49:00","commitOrder":2,"curCode":"    void setGroupWithFalseDoesNotAddsPreviousAssignments() throws Exception {\n        ExplicitGroup oldGroup = new ExplicitGroup(\"OldGroup\", GroupHierarchyType.INDEPENDENT, ',');\n        oldGroup.add(entry);\n        GroupTreeNode node = GroupTreeNode.fromGroup(oldGroup);\n        AbstractGroup newGroup = new ExplicitGroup(\"NewGroup\", GroupHierarchyType.INDEPENDENT, ',');\n\n        node.setGroup(newGroup, false, false, entries);\n\n        assertFalse(newGroup.isMatch(entry));\n    }\n","date":"2020-04-11 17:49:00","endLine":235,"groupId":"939","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"setGroupWithFalseDoesNotAddsPreviousAssignments","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/05/886e41c76bbcfffa9c457250e2227c5fe1fc54.src","preCode":"    public void setGroupWithFalseDoesNotAddsPreviousAssignments() throws Exception {\n        ExplicitGroup oldGroup = new ExplicitGroup(\"OldGroup\", GroupHierarchyType.INDEPENDENT, ',');\n        oldGroup.add(entry);\n        GroupTreeNode node = GroupTreeNode.fromGroup(oldGroup);\n        AbstractGroup newGroup = new ExplicitGroup(\"NewGroup\", GroupHierarchyType.INDEPENDENT, ',');\n\n        node.setGroup(newGroup, false, false, entries);\n\n        assertFalse(newGroup.isMatch(entry));\n    }\n","realPath":"src/test/java/org/jabref/model/groups/GroupTreeNodeTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":226,"status":"M"},{"authorDate":"2020-04-11 17:49:00","commitOrder":2,"curCode":"    void setGroupAddsOnlyPreviousAssignments() throws Exception {\n        ExplicitGroup oldGroup = new ExplicitGroup(\"OldGroup\", GroupHierarchyType.INDEPENDENT, ',');\n        assertFalse(oldGroup.isMatch(entry));\n        GroupTreeNode node = GroupTreeNode.fromGroup(oldGroup);\n        AbstractGroup newGroup = new ExplicitGroup(\"NewGroup\", GroupHierarchyType.INDEPENDENT, ',');\n\n        node.setGroup(newGroup, true, true, entries);\n\n        assertFalse(newGroup.isMatch(entry));\n    }\n","date":"2020-04-11 17:49:00","endLine":247,"groupId":"939","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"setGroupAddsOnlyPreviousAssignments","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/05/886e41c76bbcfffa9c457250e2227c5fe1fc54.src","preCode":"    public void setGroupAddsOnlyPreviousAssignments() throws Exception {\n        ExplicitGroup oldGroup = new ExplicitGroup(\"OldGroup\", GroupHierarchyType.INDEPENDENT, ',');\n        assertFalse(oldGroup.isMatch(entry));\n        GroupTreeNode node = GroupTreeNode.fromGroup(oldGroup);\n        AbstractGroup newGroup = new ExplicitGroup(\"NewGroup\", GroupHierarchyType.INDEPENDENT, ',');\n\n        node.setGroup(newGroup, true, true, entries);\n\n        assertFalse(newGroup.isMatch(entry));\n    }\n","realPath":"src/test/java/org/jabref/model/groups/GroupTreeNodeTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":238,"status":"M"}],"commitId":"1c724f26742ba832c610e5795bc30e35fa0de2b7","commitMessage":"@@@Improve calculation of matched entries upon change (#6268)\n\nInstead of recalculating the number of matched entries for every group (which means `#groups * #entries` operations) now a change triggers a more intelligent re-calculation which needs at maximum `#groups` operations. This gives a huge boost and makes editing entries smooth even for large databases with many groups.","date":"2020-04-11 17:49:00","modifiedFileCount":"4","status":"M","submitter":"Tobias Diez"},{"authorTime":"2021-06-30 05:59:10","codes":[{"authorDate":"2021-06-30 05:59:10","commitOrder":3,"curCode":"    void setGroupWithFalseDoesNotAddsPreviousAssignments() {\n        ExplicitGroup oldGroup = new ExplicitGroup(\"OldGroup\", GroupHierarchyType.INDEPENDENT, ',');\n        oldGroup.add(entry);\n        GroupTreeNode node = GroupTreeNode.fromGroup(oldGroup);\n        AbstractGroup newGroup = new ExplicitGroup(\"NewGroup\", GroupHierarchyType.INDEPENDENT, ',');\n\n        node.setGroup(newGroup, false, false, entries);\n\n        assertFalse(newGroup.isMatch(entry));\n    }\n","date":"2021-06-30 05:59:10","endLine":237,"groupId":"10846","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"setGroupWithFalseDoesNotAddsPreviousAssignments","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/fa/a4d9d3d56ddcaf8e3910c49910120702f8db3c.src","preCode":"    void setGroupWithFalseDoesNotAddsPreviousAssignments() throws Exception {\n        ExplicitGroup oldGroup = new ExplicitGroup(\"OldGroup\", GroupHierarchyType.INDEPENDENT, ',');\n        oldGroup.add(entry);\n        GroupTreeNode node = GroupTreeNode.fromGroup(oldGroup);\n        AbstractGroup newGroup = new ExplicitGroup(\"NewGroup\", GroupHierarchyType.INDEPENDENT, ',');\n\n        node.setGroup(newGroup, false, false, entries);\n\n        assertFalse(newGroup.isMatch(entry));\n    }\n","realPath":"src/test/java/org/jabref/model/groups/GroupTreeNodeTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":228,"status":"M"},{"authorDate":"2021-06-30 05:59:10","commitOrder":3,"curCode":"    void setGroupAddsOnlyPreviousAssignments() {\n        ExplicitGroup oldGroup = new ExplicitGroup(\"OldGroup\", GroupHierarchyType.INDEPENDENT, ',');\n        assertFalse(oldGroup.isMatch(entry));\n        GroupTreeNode node = GroupTreeNode.fromGroup(oldGroup);\n        AbstractGroup newGroup = new ExplicitGroup(\"NewGroup\", GroupHierarchyType.INDEPENDENT, ',');\n\n        node.setGroup(newGroup, true, true, entries);\n\n        assertFalse(newGroup.isMatch(entry));\n    }\n","date":"2021-06-30 05:59:10","endLine":249,"groupId":"10846","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"setGroupAddsOnlyPreviousAssignments","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/fa/a4d9d3d56ddcaf8e3910c49910120702f8db3c.src","preCode":"    void setGroupAddsOnlyPreviousAssignments() throws Exception {\n        ExplicitGroup oldGroup = new ExplicitGroup(\"OldGroup\", GroupHierarchyType.INDEPENDENT, ',');\n        assertFalse(oldGroup.isMatch(entry));\n        GroupTreeNode node = GroupTreeNode.fromGroup(oldGroup);\n        AbstractGroup newGroup = new ExplicitGroup(\"NewGroup\", GroupHierarchyType.INDEPENDENT, ',');\n\n        node.setGroup(newGroup, true, true, entries);\n\n        assertFalse(newGroup.isMatch(entry));\n    }\n","realPath":"src/test/java/org/jabref/model/groups/GroupTreeNodeTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":240,"status":"M"}],"commitId":"a01754cab46d5b4e410caf23e80f81c39559d7c5","commitMessage":"@@@Add unit test to four test classes (#7651)\n\n","date":"2021-06-30 05:59:10","modifiedFileCount":"2","status":"M","submitter":"BShaq"}]
