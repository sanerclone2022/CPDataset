[{"authorTime":"2017-02-17 05:41:47","codes":[{"authorDate":"2017-02-17 05:41:47","commitOrder":1,"curCode":"    public void testAddNewTermListAddsList() throws IOException {\n\n        ProtectedTermsLoader localLoader = new ProtectedTermsLoader(\n                new ProtectedTermsPreferences(Collections.emptyList(), Collections.emptyList(),\n                        ProtectedTermsLoader.getInternalLists(), Collections.emptyList()));\n        localLoader.addNewProtectedTermsList(\"My new list\", temporaryFolder.newFile().getAbsolutePath());\n        assertEquals(ProtectedTermsLoader.getInternalLists().size() + 1, localLoader.getProtectedTermsLists().size());\n    }\n","date":"2017-02-17 05:41:47","endLine":181,"groupId":"6329","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testAddNewTermListAddsList","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/49/39933626b0d57be9a6ccd73629c707cf137f4f.src","preCode":"    public void testAddNewTermListAddsList() throws IOException {\n\n        ProtectedTermsLoader localLoader = new ProtectedTermsLoader(\n                new ProtectedTermsPreferences(Collections.emptyList(), Collections.emptyList(),\n                        ProtectedTermsLoader.getInternalLists(), Collections.emptyList()));\n        localLoader.addNewProtectedTermsList(\"My new list\", temporaryFolder.newFile().getAbsolutePath());\n        assertEquals(ProtectedTermsLoader.getInternalLists().size() + 1, localLoader.getProtectedTermsLists().size());\n    }\n","realPath":"src/test/java/org/jabref/logic/protectedterms/ProtectedTermsLoaderTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":174,"status":"B"},{"authorDate":"2017-02-17 05:41:47","commitOrder":1,"curCode":"    public void testAddNewTermListNewListInList() throws IOException {\n\n        ProtectedTermsLoader localLoader = new ProtectedTermsLoader(\n                new ProtectedTermsPreferences(Collections.emptyList(), Collections.emptyList(),\n                        ProtectedTermsLoader.getInternalLists(), Collections.emptyList()));\n        ProtectedTermsList newList = localLoader.addNewProtectedTermsList(\"My new list\",\n                temporaryFolder.newFile().getAbsolutePath());\n        assertTrue(localLoader.getProtectedTermsLists().contains(newList));\n    }\n","date":"2017-02-17 05:41:47","endLine":192,"groupId":"6329","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testAddNewTermListNewListInList","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/49/39933626b0d57be9a6ccd73629c707cf137f4f.src","preCode":"    public void testAddNewTermListNewListInList() throws IOException {\n\n        ProtectedTermsLoader localLoader = new ProtectedTermsLoader(\n                new ProtectedTermsPreferences(Collections.emptyList(), Collections.emptyList(),\n                        ProtectedTermsLoader.getInternalLists(), Collections.emptyList()));\n        ProtectedTermsList newList = localLoader.addNewProtectedTermsList(\"My new list\",\n                temporaryFolder.newFile().getAbsolutePath());\n        assertTrue(localLoader.getProtectedTermsLists().contains(newList));\n    }\n","realPath":"src/test/java/org/jabref/logic/protectedterms/ProtectedTermsLoaderTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":184,"status":"B"}],"commitId":"ebbeb1d249edf7134abf92d24c2031ae54d19881","commitMessage":"@@@Merge branch 'net-sf-to-org-jabref'\n","date":"2017-02-17 05:41:47","modifiedFileCount":"1","status":"B","submitter":"Oliver Kopp"},{"authorTime":"2018-08-16 15:17:32","codes":[{"authorDate":"2018-08-16 15:17:32","commitOrder":2,"curCode":"    void testAddNewTermListAddsList(@TempDirectory.TempDir Path tempDir) {\n\n        ProtectedTermsLoader localLoader = new ProtectedTermsLoader(\n                new ProtectedTermsPreferences(Collections.emptyList(), Collections.emptyList(),\n                        ProtectedTermsLoader.getInternalLists(), Collections.emptyList()));\n        localLoader.addNewProtectedTermsList(\"My new list\", tempDir.toFile().getAbsolutePath());\n        assertEquals(ProtectedTermsLoader.getInternalLists().size() + 1, localLoader.getProtectedTermsLists().size());\n    }\n","date":"2018-08-16 15:17:32","endLine":177,"groupId":"6329","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testAddNewTermListAddsList","params":"(@TempDirectory.TempDirPathtempDir)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/f7/3da3e5b4587b56f80a3517fdf9844138d37819.src","preCode":"    public void testAddNewTermListAddsList() throws IOException {\n\n        ProtectedTermsLoader localLoader = new ProtectedTermsLoader(\n                new ProtectedTermsPreferences(Collections.emptyList(), Collections.emptyList(),\n                        ProtectedTermsLoader.getInternalLists(), Collections.emptyList()));\n        localLoader.addNewProtectedTermsList(\"My new list\", temporaryFolder.newFile().getAbsolutePath());\n        assertEquals(ProtectedTermsLoader.getInternalLists().size() + 1, localLoader.getProtectedTermsLists().size());\n    }\n","realPath":"src/test/java/org/jabref/logic/protectedterms/ProtectedTermsLoaderTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":170,"status":"M"},{"authorDate":"2018-08-16 15:17:32","commitOrder":2,"curCode":"    void testAddNewTermListNewListInList(@TempDirectory.TempDir Path tempDir) {\n\n        ProtectedTermsLoader localLoader = new ProtectedTermsLoader(\n                new ProtectedTermsPreferences(Collections.emptyList(), Collections.emptyList(),\n                        ProtectedTermsLoader.getInternalLists(), Collections.emptyList()));\n        ProtectedTermsList newList = localLoader.addNewProtectedTermsList(\"My new list\",\n                tempDir.toFile().getAbsolutePath());\n        assertTrue(localLoader.getProtectedTermsLists().contains(newList));\n    }\n","date":"2018-08-16 15:17:32","endLine":188,"groupId":"9905","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testAddNewTermListNewListInList","params":"(@TempDirectory.TempDirPathtempDir)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/f7/3da3e5b4587b56f80a3517fdf9844138d37819.src","preCode":"    public void testAddNewTermListNewListInList() throws IOException {\n\n        ProtectedTermsLoader localLoader = new ProtectedTermsLoader(\n                new ProtectedTermsPreferences(Collections.emptyList(), Collections.emptyList(),\n                        ProtectedTermsLoader.getInternalLists(), Collections.emptyList()));\n        ProtectedTermsList newList = localLoader.addNewProtectedTermsList(\"My new list\",\n                temporaryFolder.newFile().getAbsolutePath());\n        assertTrue(localLoader.getProtectedTermsLists().contains(newList));\n    }\n","realPath":"src/test/java/org/jabref/logic/protectedterms/ProtectedTermsLoaderTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":180,"status":"M"}],"commitId":"a880addc0b9a45ad4461cc46ed261ea7df9c812a","commitMessage":"@@@Fix for issue 3959: migrate all tests to JUnit 5 (#4260)\n\n* Update migrate from JUnit 4 to JUnit 5\n\n* Update migrate from JUnit 4 to JUnit 5\n\n* Trying to change git accounts on my laptop\n\n* Trying to change git accounts on my laptop\n\n* Trying to change git accounts on my laptop\n\n* Using static assert methods.\n\n* Migrate from JUnit 4 to JUnit 5\n\n*AuthorListParameterTest.java\n\n* Migrate from JUnit 4 to JUnit 5\n\n*XmpUtilWriterTest.java\n\n* Migrate from JUnit 4 to JUnit 5\n\n*XmpUtilReaderTest.java\n\n* Migrate from JUnit 4 to JUnit 5\n\n*SearchQueryHighlightObservableTest.java\n\n    -did not use MockitoExtension.class as its official version has not been released yet.\n\n* Migrate from JUnit 4 to JUnit 5\n\n*CitationEntryTest.java\n\n* Migrate from JUnit 4 to JUnit 5\n\n*RTFCharsTest.java\n\n* Migrate from JUnit 4 to JUnit 5\n\n*ProtectedTermsLoaderTest.java\n\n    -When running tests.  outputs in command line are different. I don't know if this change is correct.\n\n* Trying to change to a new branch.\n\n* commit_test\n\n* delete my meaningless txt\n\n* Migrate from JUnit 4 to JUnit 5\n\n*AuthorAndToSemicolonReplacerTest.java\n\n* Migrate from JUnit 4 to JUnit 5\n\n*FileDialogConfigurationTest.java\n\n* Migrate from JUnit 4 to JUnit 5\n\n*IntegrityCheckTest.java\n\n* Migrate from JUnit 4 to JUnit 5\n\n*ModsExportFormatTest.java\n\n* Migrate from JUnit 4 to JUnit 5\n\n*AutoSetFileLinksUtilTest.java\n\n* Migrate from JUnit 4 to JUnit 5\n\n*MsBibExportFormatTest.java\n\n* Migrate from JUnit 4 to JUnit 5\n\n*CsvExportFormatTest.java\n\n* Migrate from JUnit 4 to JUnit 5\n\n*HtmlExportFormatTest.java\n\n* Migrate from JUnit 4 to JUnit 5\n\n*HtmlExportFormatTest.java\n\n* Migrate from JUnit 4 to JUnit 5\n\n*RenamePdfCleanupTest.java\n\n* Migrate from JUnit 4 to JUnit 5\n\n*ProtectedTermsListTest.java\n\n* Migrate from JUnit 4 to JUnit 5\n\n*MoveFilesCleanupTest.java\n\n* Migrate from JUnit 4 to JUnit 5\n\n*ImporterTest.java\n\n* Migrate from JUnit 4 to JUnit 5\n\n    *ExporterTest.java\n\n* Try to trigger the Travis CI build.\n\n* Try to trigger the Travis CI build.\n\n* Migrate from JUnit 4 to JUnit 5\n\n* Try to migrate from JUnit 4 to JUnit 5\n    *BibTeXMLExporterTestFiles.java\n        *Test.  not finished\n\n* Roll back to earlier version.\n    *BibTeXMLExporterTestFiles.java\n    *CleanupWorkerTest.java\n\n* Migrate from JUnit 4 to JUnit 5\n    *ImportFormatReaderIntegrationTest.java\n\n* Migrate from JUnit 4 to JUnit 5\n    *MimeTypeDetectorTest.java\n\n* failed to modify CleanupWorkerTest\n\n* failed to modify cleanupWorkTest\n\n* change cleanupWorkerTest to initial\n\n* ***DatabaseTest***\nMigrate from JUnit 4 to JUnit 5\n    *DBMSProcessorTest.java\n        *Wait for the Travis CI\n\n* ***DatabaseTest***\nMigrate from JUnit 4 to JUnit 5\n    *DBMSProcessorTest.java\n        *Wait for the Travis CI\n\n* Migrate from JUnit 4 to JUnit 5\n    *BibTeXMLExporterTestFiles.java\n    *MSBibExportFormatTestFiles.java\n    *All the GUI tests\n\n* Migrate from JUnit 4 to JUnit 5\n    *CleanupWorkerTest.java\n\n    *It seems that worker doesn't work in cleanupRenamePdfRenamesRelativeFile() and cleanupRelativePathsConvertAbsoluteToRelativePath()\n\n* Migrate JUnit 4 to JUnit 5.\n    *AuthorListParameterTest.java\n        -Follow up tp the newest.\n\n* Migrate JUnit 4 to JUnit 5.\n    *CleanupWorkerTest.java\n        -Delete my sout.\n\n* Migrate JUnit 4 to JUnit 5.\n    *EntryTypesTest.java\n        -Just some method name changes.\n\n* Fix part of CleanupWorkerTest.\n    -cleanupRelativePathsConvertAbsoluteToRelativePath() test passed.\n    -The cleanupRenamePdfRenamesRelativeFile() test still failed.\n\n* Migrate and sync.\n    *CiteKeyBasedFileFinderTest.java\n\n* Migrate.\n    *FileUtilTest.java\nPartly migrate.\n    *ModsExportFormatTestFiles.java\n\n* Fix CleanupWorkerTest.java\n\n* Fix .travis.yml\n\n* Remove unnecessary @Rule.\n    *IntegrityCheckTest.java\n\n* AuxParserTest.java\n\n* BibtexParserTest.java\n\n* EntryComparatorTest.java\n\n* Migrate JUnit 4 to JUnit 5 -------by 1160300229\n\n* Migrate. Some tasks by my team members.\n    *LinkedFileViewModelTest.java\n    *RecursiveTreeItemTest.java\n    *UndoTest.java\n    *EntryComparatorTest.java\n    *MakeLabelWithDatabaseTest.java\n    *MakeLabelWithoutDatabaseTest.java\n    *CleanupUrlFormatterTest.java\n    *BibtexParserTest.java\n    *MedlinePlainImporterTest.java\n    *SilverPlatterImporterTest.java\n    *EntryLinkCheckerTest.java\n    *LocalizationKeyTest.java\n    *JabRefPreferencesTest.java\n\n* Fix 1160300302's error.\n\n* Remove unnecessary \"public\".\n    *AuxParserTest.java\n\n* fix architecture test by removing check for public make some classes default visibility level\n\n* Fix \"cannot find files\" problem in JUnit 4.\n\n* Migrate to JUnit 5.\n    *BibTeXMLExporterTestFiles.java\n    *ModsExportFormatTestFiles.java\n    *MSBibExportFormatTestFiles.java\n\n* Change the slash direction.\n    *BibTeXMLExporterTestFiles.java\n    *ModsExportFormatTestFiles.java\n    *MSBibExportFormatTestFiles.java\n\n* fix resolving of paths in msbibexporterpath update junit and correct resource dirs in gradle\n\n* Fix the path issue in\n    *BibTeXMLExporterTestFiles.java\n    *ModsExportFormatTestFiles.java\n\n* Disable the failing exporter tests and change the build.gradle\n\n* Fix the parent folder issue by make every path to their child once.\n    -You can see in the code. :)\n\n* Fix some minor issues.\n    -Use the NIO methods in MoveFilesCleanupTest.java\n\n    -Use toAbsolutePath() method in RenamePdfCleanupTest.java\n\n    -Rename \"tempFilename\" to \"tempFilePath\" in BibTeXMLExporterTestFiles.java\n\n* include main/java in resources as well convert legalcy file methods to nio\n","date":"2018-08-16 15:17:32","modifiedFileCount":"59","status":"M","submitter":"Yichen Sun"},{"authorTime":"2019-02-09 22:36:12","codes":[{"authorDate":"2019-02-09 22:36:12","commitOrder":3,"curCode":"    void testAddNewTermListAddsList(@TempDir Path tempDir) {\n\n        ProtectedTermsLoader localLoader = new ProtectedTermsLoader(\n                new ProtectedTermsPreferences(Collections.emptyList(), Collections.emptyList(),\n                        ProtectedTermsLoader.getInternalLists(), Collections.emptyList()));\n        localLoader.addNewProtectedTermsList(\"My new list\", tempDir.toFile().getAbsolutePath());\n        assertEquals(ProtectedTermsLoader.getInternalLists().size() + 1, localLoader.getProtectedTermsLists().size());\n    }\n","date":"2019-02-09 22:36:12","endLine":174,"groupId":"10398","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testAddNewTermListAddsList","params":"(@TempDirPathtempDir)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/b0/8c1c3546d5840486b413566d345984fb6af027.src","preCode":"    void testAddNewTermListAddsList(@TempDirectory.TempDir Path tempDir) {\n\n        ProtectedTermsLoader localLoader = new ProtectedTermsLoader(\n                new ProtectedTermsPreferences(Collections.emptyList(), Collections.emptyList(),\n                        ProtectedTermsLoader.getInternalLists(), Collections.emptyList()));\n        localLoader.addNewProtectedTermsList(\"My new list\", tempDir.toFile().getAbsolutePath());\n        assertEquals(ProtectedTermsLoader.getInternalLists().size() + 1, localLoader.getProtectedTermsLists().size());\n    }\n","realPath":"src/test/java/org/jabref/logic/protectedterms/ProtectedTermsLoaderTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":167,"status":"M"},{"authorDate":"2019-02-09 22:36:12","commitOrder":3,"curCode":"    void testAddNewTermListNewListInList(@TempDir Path tempDir) {\n\n        ProtectedTermsLoader localLoader = new ProtectedTermsLoader(\n                new ProtectedTermsPreferences(Collections.emptyList(), Collections.emptyList(),\n                        ProtectedTermsLoader.getInternalLists(), Collections.emptyList()));\n        ProtectedTermsList newList = localLoader.addNewProtectedTermsList(\"My new list\",\n                tempDir.toFile().getAbsolutePath());\n        assertTrue(localLoader.getProtectedTermsLists().contains(newList));\n    }\n","date":"2019-02-09 22:36:12","endLine":185,"groupId":"10398","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testAddNewTermListNewListInList","params":"(@TempDirPathtempDir)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/b0/8c1c3546d5840486b413566d345984fb6af027.src","preCode":"    void testAddNewTermListNewListInList(@TempDirectory.TempDir Path tempDir) {\n\n        ProtectedTermsLoader localLoader = new ProtectedTermsLoader(\n                new ProtectedTermsPreferences(Collections.emptyList(), Collections.emptyList(),\n                        ProtectedTermsLoader.getInternalLists(), Collections.emptyList()));\n        ProtectedTermsList newList = localLoader.addNewProtectedTermsList(\"My new list\",\n                tempDir.toFile().getAbsolutePath());\n        assertTrue(localLoader.getProtectedTermsLists().contains(newList));\n    }\n","realPath":"src/test/java/org/jabref/logic/protectedterms/ProtectedTermsLoaderTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":177,"status":"M"}],"commitId":"71e02379a068756a3885aa22161337255683fca3","commitMessage":"@@@Fix for issue 4641: Remove usage of TempDirectory extension from junit-pioneer (#4644)\n\n* Removed the TempDirectory extension from junit-pioneer with the built in\nextension of junit 5.4\n\n* Removed unused import\n","date":"2019-02-09 22:36:12","modifiedFileCount":"23","status":"M","submitter":"Akash Deep"}]
