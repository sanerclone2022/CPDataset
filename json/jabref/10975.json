[{"authorTime":"2019-11-11 22:57:18","codes":[{"authorDate":"2019-12-31 00:38:24","commitOrder":2,"curCode":"    public String getPresentationName() {\n        if (paste) {\n            if (entries.size() > 1) {\n                return Localization.lang(\"paste entries\");\n            } else if (entries.size() == 1) {\n                return Localization.lang(\"paste entry %0\",\n                        StringUtil.boldHTML(entries.get(0).getCiteKeyOptional().orElse(Localization.lang(\"undefined\"))));\n            } else {\n                return null;\n            }\n        } else {\n            if (entries.size() > 1) {\n                return Localization.lang(\"insert entries\");\n            } else if (entries.size() == 1) {\n                return Localization.lang(\"insert entry %0\",\n                        StringUtil.boldHTML(entries.get(0).getCiteKeyOptional().orElse(Localization.lang(\"undefined\"))));\n            } else {\n                return null;\n            }\n        }\n    }\n","date":"2019-12-31 00:38:24","endLine":61,"groupId":"4097","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"getPresentationName","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/12/0b9eb26edc62466ad2a70ee889a69bf2373929.src","preCode":"    public String getPresentationName() {\n        if (paste) {\n            if (entries.size() > 1) {\n                return Localization.lang(\"paste entries\");\n            } else if (entries.size() == 1) {\n                return Localization.lang(\"paste entry %0\",\n                        StringUtil.boldHTML(entries.get(0).getCiteKeyOptional().orElse(Localization.lang(\"undefined\"))));\n            } else {\n                return null;\n            }\n        } else {\n            if (entries.size() > 1) {\n                return Localization.lang(\"insert entries\");\n            } else if (entries.size() == 1) {\n                return Localization.lang(\"insert entry %0\",\n                        StringUtil.boldHTML(entries.get(0).getCiteKeyOptional().orElse(Localization.lang(\"undefined\"))));\n            } else {\n                return null;\n            }\n        }\n    }\n","realPath":"src/main/java/org/jabref/gui/undo/UndoableInsertEntries.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":41,"status":"B"},{"authorDate":"2019-11-11 22:57:18","commitOrder":2,"curCode":"    public String getPresentationName() {\n        if (cut) {\n            if (entries.size() > 1) {\n                return Localization.lang(\"cut entries\");\n            } else if (entries.size() == 1) {\n                return Localization.lang(\"cut entry %0\",\n                        StringUtil.boldHTML(entries.get(0).getCiteKeyOptional().orElse(Localization.lang(\"undefined\"))));\n            } else {\n                return null;\n            }\n        } else {\n            if (entries.size() > 1) {\n                return Localization.lang(\"remove entries\");\n            } else if (entries.size() == 1) {\n                return Localization.lang(\"remove entry %0\",\n                        StringUtil.boldHTML(entries.get(0).getCiteKeyOptional().orElse(Localization.lang(\"undefined\"))));\n            } else {\n                return null;\n            }\n        }\n    }\n","date":"2019-11-11 22:57:18","endLine":64,"groupId":"4097","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"getPresentationName","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/f0/605b9b58506ab7878f023d02e86d38c8a1f838.src","preCode":"    public String getPresentationName() {\n        if (cut) {\n            if (entries.size() > 1) {\n                return Localization.lang(\"cut entries\");\n            } else if (entries.size() == 1) {\n                return Localization.lang(\"cut entry %0\",\n                        StringUtil.boldHTML(entries.get(0).getCiteKeyOptional().orElse(Localization.lang(\"undefined\"))));\n            } else {\n                return null;\n            }\n        } else {\n            if (entries.size() > 1) {\n                return Localization.lang(\"remove entries\");\n            } else if (entries.size() == 1) {\n                return Localization.lang(\"remove entry %0\",\n                        StringUtil.boldHTML(entries.get(0).getCiteKeyOptional().orElse(Localization.lang(\"undefined\"))));\n            } else {\n                return null;\n            }\n        }\n    }\n","realPath":"src/main/java/org/jabref/gui/undo/UndoableRemoveEntries.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":44,"status":"NB"}],"commitId":"371a863d18944d0fc760a6fcb03ba14f051c3b98","commitMessage":"@@@[WIP] Batch Insert entries (#5691)\n\n* Initial changes to remove entry functionality\n\n* Fix logic error in KeyChangeListener\n\n* Fix logic error in BasePanel\n\n* Changes to tests\n\n* Fix typo\n\n* Move remove entry calls to batch version\n\n* Un-propagate for loop in KeyChangeListener\n\n* Finalize changes to SharedEntriesNotPresentEvent\n\n* Fix bug\n\n* Fix other compile errors\n\n* Fix bug and update tests\n\n* Fix tests\n\n* Fix test omission\n\n* Update l10n\n\n* For loop to citationStyle\n\n* Add comment for method not working\n\n* Clarify var name\n\n* Allow single entry for undo\n\n* Replace compound edit undo with normal undo in BasePanel\n\n* Typo\n\n* Simplify loop in DBMSSynchronizer\n\n* Use if instead of stream\n\n* Pluralize Javadoc\n\n* EntryEvent -> EntriesEvent in Javadoc.  comments.  and var names\n\n* Make imports explicit in BasePanel\n\n* Batch delete to SQL\n\n* Final EntriesRemovedEvent fixes\n\n* Fix checkStyleMain\n\n* More checkStyle fixes\n\n* Initial changes to batch insertEntries calls\n\n* More fixes\n\n* More batching insertEntry\n\n* Move List coercion into DuplicateSearchResult method\n\n* Even more batching insertEntry\n\n* DefaultAuxParser batch insertEntry\n\n* MrDLibImporter batch insertEntry\n\n* Add comment about usage of BasePanel.insertEntry\n\n* Fix typo\n\n* Fix pesky BibDatabaseTest error with setStrings\n\n* Fixed BibDatabase Javadoc\n\n* Finish master merge.  start changing DBMS tests\n\n* Add comment\n\n* Final fixes including checkStyle\n\n* Add DBMSProcessor tests\n\n* Fix checkStyleTest\n\n* Finished batching calls to insertEntries\n\n* Minor change for consistency\n\n* Update comments\n\n* Update comment\n\n* Another update comment\n\n* EntryAddedEvent -> EntriesAddedEvnet and removed AllInsertsFinishedEvent\n\n* Fixed some tests.  aux parser still failing\n\n* AuxParserTest passes now\n\n* Fix checkstyle\n\n* Make corrections\n\n* Typo\n\n* More streaming\n\n* Add UndoableInsertEntries constructor\n\n* Fix bug\n\n* Get rid of \"Integrity Check Failed\" info\n\n* Properly close databases in test to avoid database listener errors\n\n* Fix database tests by adding entries after firing EntryAddedEvent\n\n* Remove redundant DBMS connection closure from DBMSSychronizerTest\n\n* Merge test resources from master\n\n* Remove firstEntry hack\n\n* Remove duplicate code from paste() by and pluralize insertEntries() in BasePanel\n\n* Comment fix\n\n* Clarify BasePanel insertEntries JavaDoc\n\n* Rename vars\n\n* Rename vars\n\n* Remove unnecessary TODO and rename EntriesRemovedListener\n\n* Merge fixes\n\n* Remove old comment\n\n* checkStyle fixes\n","date":"2019-12-31 00:38:24","modifiedFileCount":"26","status":"M","submitter":"Abraham Polk"},{"authorTime":"2020-09-08 21:34:34","codes":[{"authorDate":"2020-09-08 21:34:34","commitOrder":3,"curCode":"    public String getPresentationName() {\n        if (paste) {\n            if (entries.size() > 1) {\n                return Localization.lang(\"paste entries\");\n            } else if (entries.size() == 1) {\n                return Localization.lang(\"paste entry %0\",\n                        StringUtil.boldHTML(entries.get(0).getCitationKey().orElse(Localization.lang(\"undefined\"))));\n            } else {\n                return null;\n            }\n        } else {\n            if (entries.size() > 1) {\n                return Localization.lang(\"insert entries\");\n            } else if (entries.size() == 1) {\n                return Localization.lang(\"insert entry %0\",\n                        StringUtil.boldHTML(entries.get(0).getCitationKey().orElse(Localization.lang(\"undefined\"))));\n            } else {\n                return null;\n            }\n        }\n    }\n","date":"2020-09-08 21:34:34","endLine":61,"groupId":"10975","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"getPresentationName","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/3a/f516b94c1e2f4d85d45190e2d5e23125516f5b.src","preCode":"    public String getPresentationName() {\n        if (paste) {\n            if (entries.size() > 1) {\n                return Localization.lang(\"paste entries\");\n            } else if (entries.size() == 1) {\n                return Localization.lang(\"paste entry %0\",\n                        StringUtil.boldHTML(entries.get(0).getCiteKeyOptional().orElse(Localization.lang(\"undefined\"))));\n            } else {\n                return null;\n            }\n        } else {\n            if (entries.size() > 1) {\n                return Localization.lang(\"insert entries\");\n            } else if (entries.size() == 1) {\n                return Localization.lang(\"insert entry %0\",\n                        StringUtil.boldHTML(entries.get(0).getCiteKeyOptional().orElse(Localization.lang(\"undefined\"))));\n            } else {\n                return null;\n            }\n        }\n    }\n","realPath":"src/main/java/org/jabref/gui/undo/UndoableInsertEntries.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":41,"status":"M"},{"authorDate":"2020-09-08 21:34:34","commitOrder":3,"curCode":"    public String getPresentationName() {\n        if (cut) {\n            if (entries.size() > 1) {\n                return Localization.lang(\"cut entries\");\n            } else if (entries.size() == 1) {\n                return Localization.lang(\"cut entry %0\",\n                        StringUtil.boldHTML(entries.get(0).getCitationKey().orElse(Localization.lang(\"undefined\"))));\n            } else {\n                return null;\n            }\n        } else {\n            if (entries.size() > 1) {\n                return Localization.lang(\"remove entries\");\n            } else if (entries.size() == 1) {\n                return Localization.lang(\"remove entry %0\",\n                        StringUtil.boldHTML(entries.get(0).getCitationKey().orElse(Localization.lang(\"undefined\"))));\n            } else {\n                return null;\n            }\n        }\n    }\n","date":"2020-09-08 21:34:34","endLine":64,"groupId":"10975","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"getPresentationName","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/65/b6ae48331bbe91428cbad9b4b4049008d756e4.src","preCode":"    public String getPresentationName() {\n        if (cut) {\n            if (entries.size() > 1) {\n                return Localization.lang(\"cut entries\");\n            } else if (entries.size() == 1) {\n                return Localization.lang(\"cut entry %0\",\n                        StringUtil.boldHTML(entries.get(0).getCiteKeyOptional().orElse(Localization.lang(\"undefined\"))));\n            } else {\n                return null;\n            }\n        } else {\n            if (entries.size() > 1) {\n                return Localization.lang(\"remove entries\");\n            } else if (entries.size() == 1) {\n                return Localization.lang(\"remove entry %0\",\n                        StringUtil.boldHTML(entries.get(0).getCiteKeyOptional().orElse(Localization.lang(\"undefined\"))));\n            } else {\n                return null;\n            }\n        }\n    }\n","realPath":"src/main/java/org/jabref/gui/undo/UndoableRemoveEntries.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":44,"status":"M"}],"commitId":"6dec1747d8a1c89f6c62fc1d1939d88411f17eba","commitMessage":"@@@Complete rebranding of `bibtexkey` as `citationkey` (#6875)\n\n","date":"2020-09-08 21:34:34","modifiedFileCount":"127","status":"M","submitter":"Tobias Diez"}]
