[{"authorTime":"2019-08-02 15:20:10","codes":[{"authorDate":"2019-10-29 06:58:38","commitOrder":5,"curCode":"    void roundtripWithArticleMonths() throws Exception {\n        Path testBibtexFile = Paths.get(\"src/test/resources/testbib/articleWithMonths.bib\");\n        Charset encoding = StandardCharsets.UTF_8;\n        ParserResult result = new BibtexParser(importFormatPreferences, fileMonitor).parse(Importer.getReader(testBibtexFile, encoding));\n\n        when(preferences.getEncoding()).thenReturn(encoding);\n        when(preferences.isSaveInOriginalOrder()).thenReturn(true);\n        BibDatabaseContext context = new BibDatabaseContext(result.getDatabase(), result.getMetaData(),\n                new Defaults(BibDatabaseMode.BIBTEX));\n\n        databaseWriter.savePartOfDatabase(context, result.getDatabase().getEntries());\n        try (Scanner scanner = new Scanner(testBibtexFile, encoding.name())) {\n            assertEquals(scanner.useDelimiter(\"\\\\A\").next(), stringWriter.toString());\n        }\n    }\n","date":"2019-10-29 06:58:38","endLine":306,"groupId":"4909","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"roundtripWithArticleMonths","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/0e/c73d0ceac1c17501763cde80609d18d94347c5.src","preCode":"    void roundtripWithArticleMonths() throws Exception {\n        Path testBibtexFile = Paths.get(\"src/test/resources/testbib/articleWithMonths.bib\");\n        Charset encoding = StandardCharsets.UTF_8;\n        ParserResult result = new BibtexParser(importFormatPreferences, fileMonitor).parse(Importer.getReader(testBibtexFile, encoding));\n\n        when(preferences.getEncoding()).thenReturn(encoding);\n        when(preferences.isSaveInOriginalOrder()).thenReturn(true);\n        BibDatabaseContext context = new BibDatabaseContext(result.getDatabase(), result.getMetaData(),\n                new Defaults(BibDatabaseMode.BIBTEX));\n\n        databaseWriter.savePartOfDatabase(context, result.getDatabase().getEntries());\n        try (Scanner scanner = new Scanner(testBibtexFile, encoding.name())) {\n            assertEquals(scanner.useDelimiter(\"\\\\A\").next(), stringWriter.toString());\n        }\n    }\n","realPath":"src/test/java/org/jabref/logic/exporter/BibtexDatabaseWriterTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":292,"status":"B"},{"authorDate":"2019-08-02 15:20:10","commitOrder":5,"curCode":"    void roundtripWithUserCommentAndEntryChange() throws Exception {\n        Path testBibtexFile = Paths.get(\"src/test/resources/testbib/bibWithUserComments.bib\");\n        Charset encoding = StandardCharsets.UTF_8;\n        ParserResult result = new BibtexParser(importFormatPreferences, fileMonitor).parse(Importer.getReader(testBibtexFile, encoding));\n\n        BibEntry entry = result.getDatabase().getEntryByKey(\"1137631\").get();\n        entry.setField(StandardField.AUTHOR, \"Mr. Author\");\n\n        when(preferences.getEncoding()).thenReturn(encoding);\n        when(preferences.isSaveInOriginalOrder()).thenReturn(true);\n        BibDatabaseContext context = new BibDatabaseContext(result.getDatabase(), result.getMetaData(),\n                new Defaults(BibDatabaseMode.BIBTEX));\n\n        databaseWriter.savePartOfDatabase(context, result.getDatabase().getEntries());\n\n        try (Scanner scanner = new Scanner(Paths.get(\"src/test/resources/testbib/bibWithUserCommentAndEntryChange.bib\"), encoding.name())) {\n            assertEquals(scanner.useDelimiter(\"\\\\A\").next(), stringWriter.toString());\n        }\n    }\n","date":"2019-08-02 15:20:10","endLine":333,"groupId":"7906","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"roundtripWithUserCommentAndEntryChange","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/33/92af706797fe2ab6b7586980989637818307e4.src","preCode":"    void roundtripWithUserCommentAndEntryChange() throws Exception {\n        Path testBibtexFile = Paths.get(\"src/test/resources/testbib/bibWithUserComments.bib\");\n        Charset encoding = StandardCharsets.UTF_8;\n        ParserResult result = new BibtexParser(importFormatPreferences, fileMonitor).parse(Importer.getReader(testBibtexFile, encoding));\n\n        BibEntry entry = result.getDatabase().getEntryByKey(\"1137631\").get();\n        entry.setField(StandardField.AUTHOR, \"Mr. Author\");\n\n        when(preferences.getEncoding()).thenReturn(encoding);\n        when(preferences.isSaveInOriginalOrder()).thenReturn(true);\n        BibDatabaseContext context = new BibDatabaseContext(result.getDatabase(), result.getMetaData(),\n                new Defaults(BibDatabaseMode.BIBTEX));\n\n        databaseWriter.savePartOfDatabase(context, result.getDatabase().getEntries());\n\n        try (Scanner scanner = new Scanner(Paths.get(\"src/test/resources/testbib/bibWithUserCommentAndEntryChange.bib\"), encoding.name())) {\n            assertEquals(scanner.useDelimiter(\"\\\\A\").next(), stringWriter.toString());\n        }\n    }\n","realPath":"src/test/java/org/jabref/logic/exporter/BibtexDatabaseWriterTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":315,"status":"NB"}],"commitId":"075f191dda4e447d3df66df74f8e387abc078e03","commitMessage":"@@@Add tests for month issue and strings (and some minor code impr? (#5531)\n\n- Fix DBMS modifying and unmodifyable collection\n- Add tests for `month = apr` and `month = \"apr\"`\n- Add tests for JabRef's string types\n- Remove Optional as method parameter in BibEntry.setField\n- Add builder to BibEntry\n- Mark \"BIBTEX_STRING\" as JabRef-internal field\n- Sort constants in InternalField.java - and add some comments\n","date":"2019-10-29 06:58:38","modifiedFileCount":"8","status":"M","submitter":"Oliver Kopp"},{"authorTime":"2019-11-28 14:54:34","codes":[{"authorDate":"2019-11-28 14:54:34","commitOrder":6,"curCode":"    void roundtripWithArticleMonths() throws Exception {\n        Path testBibtexFile = Paths.get(\"src/test/resources/testbib/articleWithMonths.bib\");\n        Charset encoding = StandardCharsets.UTF_8;\n        ParserResult result = new BibtexParser(importFormatPreferences, fileMonitor).parse(Importer.getReader(testBibtexFile, encoding));\n\n        when(preferences.getEncoding()).thenReturn(encoding);\n        when(preferences.isSaveInOriginalOrder()).thenReturn(true);\n        BibDatabaseContext context = new BibDatabaseContext(result.getDatabase(), result.getMetaData(),\n                new Defaults(BibDatabaseMode.BIBTEX));\n\n        databaseWriter.savePartOfDatabase(context, result.getDatabase().getEntries());\n        assertEquals(Files.readString(testBibtexFile, encoding), stringWriter.toString());\n    }\n","date":"2019-11-28 14:54:34","endLine":337,"groupId":"4909","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"roundtripWithArticleMonths","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/1d/779dd50c0826de89ecd53a52756a917cedf52e.src","preCode":"    void roundtripWithArticleMonths() throws Exception {\n        Path testBibtexFile = Paths.get(\"src/test/resources/testbib/articleWithMonths.bib\");\n        Charset encoding = StandardCharsets.UTF_8;\n        ParserResult result = new BibtexParser(importFormatPreferences, fileMonitor).parse(Importer.getReader(testBibtexFile, encoding));\n\n        when(preferences.getEncoding()).thenReturn(encoding);\n        when(preferences.isSaveInOriginalOrder()).thenReturn(true);\n        BibDatabaseContext context = new BibDatabaseContext(result.getDatabase(), result.getMetaData(),\n                new Defaults(BibDatabaseMode.BIBTEX));\n\n        databaseWriter.savePartOfDatabase(context, result.getDatabase().getEntries());\n        try (Scanner scanner = new Scanner(testBibtexFile, encoding.name())) {\n            assertEquals(scanner.useDelimiter(\"\\\\A\").next(), stringWriter.toString());\n        }\n    }\n","realPath":"src/test/java/org/jabref/logic/exporter/BibtexDatabaseWriterTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":325,"status":"M"},{"authorDate":"2019-11-28 14:54:34","commitOrder":6,"curCode":"    void roundtripWithUserCommentAndEntryChange() throws Exception {\n        Path testBibtexFile = Paths.get(\"src/test/resources/testbib/bibWithUserComments.bib\");\n        Charset encoding = StandardCharsets.UTF_8;\n        ParserResult result = new BibtexParser(importFormatPreferences, fileMonitor).parse(Importer.getReader(testBibtexFile, encoding));\n\n        BibEntry entry = result.getDatabase().getEntryByKey(\"1137631\").get();\n        entry.setField(StandardField.AUTHOR, \"Mr. Author\");\n\n        when(preferences.getEncoding()).thenReturn(encoding);\n        when(preferences.isSaveInOriginalOrder()).thenReturn(true);\n        BibDatabaseContext context = new BibDatabaseContext(result.getDatabase(), result.getMetaData(),\n                new Defaults(BibDatabaseMode.BIBTEX));\n\n        databaseWriter.savePartOfDatabase(context, result.getDatabase().getEntries());\n        assertEquals(Files.readString(Paths.get(\"src/test/resources/testbib/bibWithUserCommentAndEntryChange.bib\"), encoding), stringWriter.toString());\n    }\n","date":"2019-11-28 14:54:34","endLine":385,"groupId":"7906","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"roundtripWithUserCommentAndEntryChange","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/1d/779dd50c0826de89ecd53a52756a917cedf52e.src","preCode":"    void roundtripWithUserCommentAndEntryChange() throws Exception {\n        Path testBibtexFile = Paths.get(\"src/test/resources/testbib/bibWithUserComments.bib\");\n        Charset encoding = StandardCharsets.UTF_8;\n        ParserResult result = new BibtexParser(importFormatPreferences, fileMonitor).parse(Importer.getReader(testBibtexFile, encoding));\n\n        BibEntry entry = result.getDatabase().getEntryByKey(\"1137631\").get();\n        entry.setField(StandardField.AUTHOR, \"Mr. Author\");\n\n        when(preferences.getEncoding()).thenReturn(encoding);\n        when(preferences.isSaveInOriginalOrder()).thenReturn(true);\n        BibDatabaseContext context = new BibDatabaseContext(result.getDatabase(), result.getMetaData(),\n                new Defaults(BibDatabaseMode.BIBTEX));\n\n        databaseWriter.savePartOfDatabase(context, result.getDatabase().getEntries());\n\n        try (Scanner scanner = new Scanner(Paths.get(\"src/test/resources/testbib/bibWithUserCommentAndEntryChange.bib\"), encoding.name())) {\n            assertEquals(scanner.useDelimiter(\"\\\\A\").next(), stringWriter.toString());\n        }\n    }\n","realPath":"src/test/java/org/jabref/logic/exporter/BibtexDatabaseWriterTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":370,"status":"M"}],"commitId":"382c4b2190164ec5db9e473cb05ea831b44827eb","commitMessage":"@@@Add tests for \"changed\" flag (#5640)\n\n- Add tests\n- Guard AtomicFileWriter with a try-with-resources during save\n- use Objects.requireNonNull in DefaultFileUpdateMontitor\n- add comment\n- some auto-formattings\n- Fix typo in comment","date":"2019-11-28 14:54:34","modifiedFileCount":"9","status":"M","submitter":"Oliver Kopp"},{"authorTime":"2020-01-18 07:15:28","codes":[{"authorDate":"2020-01-18 07:15:28","commitOrder":7,"curCode":"    void roundtripWithArticleMonths() throws Exception {\n        Path testBibtexFile = Paths.get(\"src/test/resources/testbib/articleWithMonths.bib\");\n        Charset encoding = StandardCharsets.UTF_8;\n        ParserResult result = new BibtexParser(importFormatPreferences, fileMonitor).parse(Importer.getReader(testBibtexFile, encoding));\n\n        when(preferences.getEncoding()).thenReturn(encoding);\n        when(preferences.isSaveInOriginalOrder()).thenReturn(true);\n        BibDatabaseContext context = new BibDatabaseContext(result.getDatabase(), result.getMetaData());\n\n        databaseWriter.savePartOfDatabase(context, result.getDatabase().getEntries());\n        assertEquals(Files.readString(testBibtexFile, encoding), stringWriter.toString());\n    }\n","date":"2020-01-18 07:15:28","endLine":339,"groupId":"7906","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"roundtripWithArticleMonths","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/12/682482a1d1bb932282ee02c20221ad3c96f82e.src","preCode":"    void roundtripWithArticleMonths() throws Exception {\n        Path testBibtexFile = Paths.get(\"src/test/resources/testbib/articleWithMonths.bib\");\n        Charset encoding = StandardCharsets.UTF_8;\n        ParserResult result = new BibtexParser(importFormatPreferences, fileMonitor).parse(Importer.getReader(testBibtexFile, encoding));\n\n        when(preferences.getEncoding()).thenReturn(encoding);\n        when(preferences.isSaveInOriginalOrder()).thenReturn(true);\n        BibDatabaseContext context = new BibDatabaseContext(result.getDatabase(), result.getMetaData(),\n                new Defaults(BibDatabaseMode.BIBTEX));\n\n        databaseWriter.savePartOfDatabase(context, result.getDatabase().getEntries());\n        assertEquals(Files.readString(testBibtexFile, encoding), stringWriter.toString());\n    }\n","realPath":"src/test/java/org/jabref/logic/exporter/BibtexDatabaseWriterTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":328,"status":"M"},{"authorDate":"2020-01-18 07:15:28","commitOrder":7,"curCode":"    void roundtripWithUserCommentAndEntryChange() throws Exception {\n        Path testBibtexFile = Paths.get(\"src/test/resources/testbib/bibWithUserComments.bib\");\n        Charset encoding = StandardCharsets.UTF_8;\n        ParserResult result = new BibtexParser(importFormatPreferences, fileMonitor).parse(Importer.getReader(testBibtexFile, encoding));\n\n        BibEntry entry = result.getDatabase().getEntryByKey(\"1137631\").get();\n        entry.setField(StandardField.AUTHOR, \"Mr. Author\");\n\n        when(preferences.getEncoding()).thenReturn(encoding);\n        when(preferences.isSaveInOriginalOrder()).thenReturn(true);\n        BibDatabaseContext context = new BibDatabaseContext(result.getDatabase(), result.getMetaData());\n\n        databaseWriter.savePartOfDatabase(context, result.getDatabase().getEntries());\n        assertEquals(Files.readString(Paths.get(\"src/test/resources/testbib/bibWithUserCommentAndEntryChange.bib\"), encoding), stringWriter.toString());\n    }\n","date":"2020-01-18 07:15:28","endLine":384,"groupId":"7906","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"roundtripWithUserCommentAndEntryChange","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/12/682482a1d1bb932282ee02c20221ad3c96f82e.src","preCode":"    void roundtripWithUserCommentAndEntryChange() throws Exception {\n        Path testBibtexFile = Paths.get(\"src/test/resources/testbib/bibWithUserComments.bib\");\n        Charset encoding = StandardCharsets.UTF_8;\n        ParserResult result = new BibtexParser(importFormatPreferences, fileMonitor).parse(Importer.getReader(testBibtexFile, encoding));\n\n        BibEntry entry = result.getDatabase().getEntryByKey(\"1137631\").get();\n        entry.setField(StandardField.AUTHOR, \"Mr. Author\");\n\n        when(preferences.getEncoding()).thenReturn(encoding);\n        when(preferences.isSaveInOriginalOrder()).thenReturn(true);\n        BibDatabaseContext context = new BibDatabaseContext(result.getDatabase(), result.getMetaData(),\n                new Defaults(BibDatabaseMode.BIBTEX));\n\n        databaseWriter.savePartOfDatabase(context, result.getDatabase().getEntries());\n        assertEquals(Files.readString(Paths.get(\"src/test/resources/testbib/bibWithUserCommentAndEntryChange.bib\"), encoding), stringWriter.toString());\n    }\n","realPath":"src/test/java/org/jabref/logic/exporter/BibtexDatabaseWriterTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":370,"status":"M"}],"commitId":"e9851d89dce6b39ce7dc99df1d5eca81840487e1","commitMessage":"@@@Improve serialization to fix #4877 (#5838)\n\n* Always remember which encoding was used for saving\n\n* Already infer mode upon loading\n\n* Don't format field values upon writing\n\n* Fix tests\n\n* Fix tests\n\n* Fix localization and add changelog\n\n* Add missing space\n\n* Fix test method name\n\nCo-authored-by: Oliver Kopp <kopp.dev@gmail.com>\n","date":"2020-01-18 07:15:28","modifiedFileCount":"31","status":"M","submitter":"Tobias Diez"},{"authorTime":"2020-04-30 17:10:13","codes":[{"authorDate":"2020-04-30 17:10:13","commitOrder":8,"curCode":"    void roundtripWithArticleMonths() throws Exception {\n        Path testBibtexFile = Path.of(\"src/test/resources/testbib/articleWithMonths.bib\");\n        Charset encoding = StandardCharsets.UTF_8;\n        ParserResult result = new BibtexParser(importFormatPreferences, fileMonitor).parse(Importer.getReader(testBibtexFile, encoding));\n\n        when(preferences.getEncoding()).thenReturn(encoding);\n        when(preferences.isSaveInOriginalOrder()).thenReturn(true);\n        BibDatabaseContext context = new BibDatabaseContext(result.getDatabase(), result.getMetaData());\n\n        databaseWriter.savePartOfDatabase(context, result.getDatabase().getEntries());\n        assertEquals(Files.readString(testBibtexFile, encoding), stringWriter.toString());\n    }\n","date":"2020-04-30 17:10:13","endLine":338,"groupId":"7906","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"roundtripWithArticleMonths","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/6d/3c6231aef8292248c58fa3085c61dfdef819d0.src","preCode":"    void roundtripWithArticleMonths() throws Exception {\n        Path testBibtexFile = Paths.get(\"src/test/resources/testbib/articleWithMonths.bib\");\n        Charset encoding = StandardCharsets.UTF_8;\n        ParserResult result = new BibtexParser(importFormatPreferences, fileMonitor).parse(Importer.getReader(testBibtexFile, encoding));\n\n        when(preferences.getEncoding()).thenReturn(encoding);\n        when(preferences.isSaveInOriginalOrder()).thenReturn(true);\n        BibDatabaseContext context = new BibDatabaseContext(result.getDatabase(), result.getMetaData());\n\n        databaseWriter.savePartOfDatabase(context, result.getDatabase().getEntries());\n        assertEquals(Files.readString(testBibtexFile, encoding), stringWriter.toString());\n    }\n","realPath":"src/test/java/org/jabref/logic/exporter/BibtexDatabaseWriterTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":327,"status":"M"},{"authorDate":"2020-04-30 17:10:13","commitOrder":8,"curCode":"    void roundtripWithUserCommentAndEntryChange() throws Exception {\n        Path testBibtexFile = Path.of(\"src/test/resources/testbib/bibWithUserComments.bib\");\n        Charset encoding = StandardCharsets.UTF_8;\n        ParserResult result = new BibtexParser(importFormatPreferences, fileMonitor).parse(Importer.getReader(testBibtexFile, encoding));\n\n        BibEntry entry = result.getDatabase().getEntryByKey(\"1137631\").get();\n        entry.setField(StandardField.AUTHOR, \"Mr. Author\");\n\n        when(preferences.getEncoding()).thenReturn(encoding);\n        when(preferences.isSaveInOriginalOrder()).thenReturn(true);\n        BibDatabaseContext context = new BibDatabaseContext(result.getDatabase(), result.getMetaData());\n\n        databaseWriter.savePartOfDatabase(context, result.getDatabase().getEntries());\n        assertEquals(Files.readString(Path.of(\"src/test/resources/testbib/bibWithUserCommentAndEntryChange.bib\"), encoding), stringWriter.toString());\n    }\n","date":"2020-04-30 17:10:13","endLine":383,"groupId":"7906","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"roundtripWithUserCommentAndEntryChange","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/6d/3c6231aef8292248c58fa3085c61dfdef819d0.src","preCode":"    void roundtripWithUserCommentAndEntryChange() throws Exception {\n        Path testBibtexFile = Paths.get(\"src/test/resources/testbib/bibWithUserComments.bib\");\n        Charset encoding = StandardCharsets.UTF_8;\n        ParserResult result = new BibtexParser(importFormatPreferences, fileMonitor).parse(Importer.getReader(testBibtexFile, encoding));\n\n        BibEntry entry = result.getDatabase().getEntryByKey(\"1137631\").get();\n        entry.setField(StandardField.AUTHOR, \"Mr. Author\");\n\n        when(preferences.getEncoding()).thenReturn(encoding);\n        when(preferences.isSaveInOriginalOrder()).thenReturn(true);\n        BibDatabaseContext context = new BibDatabaseContext(result.getDatabase(), result.getMetaData());\n\n        databaseWriter.savePartOfDatabase(context, result.getDatabase().getEntries());\n        assertEquals(Files.readString(Paths.get(\"src/test/resources/testbib/bibWithUserCommentAndEntryChange.bib\"), encoding), stringWriter.toString());\n    }\n","realPath":"src/test/java/org/jabref/logic/exporter/BibtexDatabaseWriterTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":369,"status":"M"}],"commitId":"862078a4db316cfd15bd77be68d3d2b010feab3b","commitMessage":"@@@Fixes #6357: File directory (#6377)\n\n* Fixes #6357: File directory\n\nBug was introduced in https://github.com/JabRef/jabref/commit/1b03f039aa4abf0812a3a8ae0ba248c08fdb39a3.\n\n* Fix tests\n\n* Replace Paths.get\n\n* Fix code style","date":"2020-04-30 17:10:13","modifiedFileCount":"110","status":"M","submitter":"Tobias Diez"},{"authorTime":"2020-09-01 20:20:10","codes":[{"authorDate":"2020-09-01 20:20:10","commitOrder":9,"curCode":"    void roundtripWithArticleMonths() throws Exception {\n        Path testBibtexFile = Path.of(\"src/test/resources/testbib/articleWithMonths.bib\");\n        Charset encoding = StandardCharsets.UTF_8;\n        ParserResult result = new BibtexParser(importFormatPreferences, fileMonitor).parse(Importer.getReader(testBibtexFile, encoding));\n\n        when(preferences.getEncoding()).thenReturn(encoding);\n        when(preferences.shouldSaveInOriginalOrder()).thenReturn(true);\n        BibDatabaseContext context = new BibDatabaseContext(result.getDatabase(), result.getMetaData());\n\n        databaseWriter.savePartOfDatabase(context, result.getDatabase().getEntries());\n        assertEquals(Files.readString(testBibtexFile, encoding), stringWriter.toString());\n    }\n","date":"2020-09-01 20:20:10","endLine":338,"groupId":"7906","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"roundtripWithArticleMonths","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/e1/12afedab5ea4eae448baa682d7fbd4b644a23a.src","preCode":"    void roundtripWithArticleMonths() throws Exception {\n        Path testBibtexFile = Path.of(\"src/test/resources/testbib/articleWithMonths.bib\");\n        Charset encoding = StandardCharsets.UTF_8;\n        ParserResult result = new BibtexParser(importFormatPreferences, fileMonitor).parse(Importer.getReader(testBibtexFile, encoding));\n\n        when(preferences.getEncoding()).thenReturn(encoding);\n        when(preferences.isSaveInOriginalOrder()).thenReturn(true);\n        BibDatabaseContext context = new BibDatabaseContext(result.getDatabase(), result.getMetaData());\n\n        databaseWriter.savePartOfDatabase(context, result.getDatabase().getEntries());\n        assertEquals(Files.readString(testBibtexFile, encoding), stringWriter.toString());\n    }\n","realPath":"src/test/java/org/jabref/logic/exporter/BibtexDatabaseWriterTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":327,"status":"M"},{"authorDate":"2020-09-01 20:20:10","commitOrder":9,"curCode":"    void roundtripWithUserCommentAndEntryChange() throws Exception {\n        Path testBibtexFile = Path.of(\"src/test/resources/testbib/bibWithUserComments.bib\");\n        Charset encoding = StandardCharsets.UTF_8;\n        ParserResult result = new BibtexParser(importFormatPreferences, fileMonitor).parse(Importer.getReader(testBibtexFile, encoding));\n\n        BibEntry entry = result.getDatabase().getEntryByKey(\"1137631\").get();\n        entry.setField(StandardField.AUTHOR, \"Mr. Author\");\n\n        when(preferences.getEncoding()).thenReturn(encoding);\n        when(preferences.shouldSaveInOriginalOrder()).thenReturn(true);\n        BibDatabaseContext context = new BibDatabaseContext(result.getDatabase(), result.getMetaData());\n\n        databaseWriter.savePartOfDatabase(context, result.getDatabase().getEntries());\n        assertEquals(Files.readString(Path.of(\"src/test/resources/testbib/bibWithUserCommentAndEntryChange.bib\"), encoding), stringWriter.toString());\n    }\n","date":"2020-09-01 20:20:10","endLine":383,"groupId":"7906","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"roundtripWithUserCommentAndEntryChange","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/e1/12afedab5ea4eae448baa682d7fbd4b644a23a.src","preCode":"    void roundtripWithUserCommentAndEntryChange() throws Exception {\n        Path testBibtexFile = Path.of(\"src/test/resources/testbib/bibWithUserComments.bib\");\n        Charset encoding = StandardCharsets.UTF_8;\n        ParserResult result = new BibtexParser(importFormatPreferences, fileMonitor).parse(Importer.getReader(testBibtexFile, encoding));\n\n        BibEntry entry = result.getDatabase().getEntryByKey(\"1137631\").get();\n        entry.setField(StandardField.AUTHOR, \"Mr. Author\");\n\n        when(preferences.getEncoding()).thenReturn(encoding);\n        when(preferences.isSaveInOriginalOrder()).thenReturn(true);\n        BibDatabaseContext context = new BibDatabaseContext(result.getDatabase(), result.getMetaData());\n\n        databaseWriter.savePartOfDatabase(context, result.getDatabase().getEntries());\n        assertEquals(Files.readString(Path.of(\"src/test/resources/testbib/bibWithUserCommentAndEntryChange.bib\"), encoding), stringWriter.toString());\n    }\n","realPath":"src/test/java/org/jabref/logic/exporter/BibtexDatabaseWriterTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":369,"status":"M"}],"commitId":"5ab494e8b1732f688d4ed8d696740bc7e8ef4101","commitMessage":"@@@Refactor file preferences (#6779)\n\n* Refactored for same basic clean-up and naming consistency\n\n* Refactored for more clean-ups and naming consistency\n\n* Refactored and extended AutoLinkPreferences\n\n* Refactored FilePreferences to immutable class\n\n* Refactored two preferences from AutoLinkPreferences to FilePreferences\n\n* Moved import linked file patterns preferences to FilePreferencesTab\n\n* Extended FilePreferences and refactored FileTab to use it\n\n* Checkstyle\n\n* Fixed merge error\n\n* Moved import-export preferences to exportSortingTab and renamed the tab\n\n* Renamed FileTab to LinkedFilesTab\n\n* Refactored ImportExportTab to PreferencesService\n\n* CHANGELOG.md\n\n* Rewording ImportExport to File\n\n* Make FilePreferences and SavePreferences mutable.  added ADR\n","date":"2020-09-01 20:20:10","modifiedFileCount":"28","status":"M","submitter":"Carl Christian Snethlage"},{"authorTime":"2020-09-08 21:34:34","codes":[{"authorDate":"2020-09-01 20:20:10","commitOrder":10,"curCode":"    void roundtripWithArticleMonths() throws Exception {\n        Path testBibtexFile = Path.of(\"src/test/resources/testbib/articleWithMonths.bib\");\n        Charset encoding = StandardCharsets.UTF_8;\n        ParserResult result = new BibtexParser(importFormatPreferences, fileMonitor).parse(Importer.getReader(testBibtexFile, encoding));\n\n        when(preferences.getEncoding()).thenReturn(encoding);\n        when(preferences.shouldSaveInOriginalOrder()).thenReturn(true);\n        BibDatabaseContext context = new BibDatabaseContext(result.getDatabase(), result.getMetaData());\n\n        databaseWriter.savePartOfDatabase(context, result.getDatabase().getEntries());\n        assertEquals(Files.readString(testBibtexFile, encoding), stringWriter.toString());\n    }\n","date":"2020-09-01 20:20:10","endLine":338,"groupId":"10679","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"roundtripWithArticleMonths","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/e1/12afedab5ea4eae448baa682d7fbd4b644a23a.src","preCode":"    void roundtripWithArticleMonths() throws Exception {\n        Path testBibtexFile = Path.of(\"src/test/resources/testbib/articleWithMonths.bib\");\n        Charset encoding = StandardCharsets.UTF_8;\n        ParserResult result = new BibtexParser(importFormatPreferences, fileMonitor).parse(Importer.getReader(testBibtexFile, encoding));\n\n        when(preferences.getEncoding()).thenReturn(encoding);\n        when(preferences.shouldSaveInOriginalOrder()).thenReturn(true);\n        BibDatabaseContext context = new BibDatabaseContext(result.getDatabase(), result.getMetaData());\n\n        databaseWriter.savePartOfDatabase(context, result.getDatabase().getEntries());\n        assertEquals(Files.readString(testBibtexFile, encoding), stringWriter.toString());\n    }\n","realPath":"src/test/java/org/jabref/logic/exporter/BibtexDatabaseWriterTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":327,"status":"N"},{"authorDate":"2020-09-08 21:34:34","commitOrder":10,"curCode":"    void roundtripWithUserCommentAndEntryChange() throws Exception {\n        Path testBibtexFile = Path.of(\"src/test/resources/testbib/bibWithUserComments.bib\");\n        Charset encoding = StandardCharsets.UTF_8;\n        ParserResult result = new BibtexParser(importFormatPreferences, fileMonitor).parse(Importer.getReader(testBibtexFile, encoding));\n\n        BibEntry entry = result.getDatabase().getEntryByCitationKey(\"1137631\").get();\n        entry.setField(StandardField.AUTHOR, \"Mr. Author\");\n\n        when(preferences.getEncoding()).thenReturn(encoding);\n        when(preferences.shouldSaveInOriginalOrder()).thenReturn(true);\n        BibDatabaseContext context = new BibDatabaseContext(result.getDatabase(), result.getMetaData());\n\n        databaseWriter.savePartOfDatabase(context, result.getDatabase().getEntries());\n        assertEquals(Files.readString(Path.of(\"src/test/resources/testbib/bibWithUserCommentAndEntryChange.bib\"), encoding), stringWriter.toString());\n    }\n","date":"2020-09-08 21:34:34","endLine":383,"groupId":"10679","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"roundtripWithUserCommentAndEntryChange","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/08/54bb57467116d302c8bfbbe8ce0d3dd783e17c.src","preCode":"    void roundtripWithUserCommentAndEntryChange() throws Exception {\n        Path testBibtexFile = Path.of(\"src/test/resources/testbib/bibWithUserComments.bib\");\n        Charset encoding = StandardCharsets.UTF_8;\n        ParserResult result = new BibtexParser(importFormatPreferences, fileMonitor).parse(Importer.getReader(testBibtexFile, encoding));\n\n        BibEntry entry = result.getDatabase().getEntryByKey(\"1137631\").get();\n        entry.setField(StandardField.AUTHOR, \"Mr. Author\");\n\n        when(preferences.getEncoding()).thenReturn(encoding);\n        when(preferences.shouldSaveInOriginalOrder()).thenReturn(true);\n        BibDatabaseContext context = new BibDatabaseContext(result.getDatabase(), result.getMetaData());\n\n        databaseWriter.savePartOfDatabase(context, result.getDatabase().getEntries());\n        assertEquals(Files.readString(Path.of(\"src/test/resources/testbib/bibWithUserCommentAndEntryChange.bib\"), encoding), stringWriter.toString());\n    }\n","realPath":"src/test/java/org/jabref/logic/exporter/BibtexDatabaseWriterTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":369,"status":"M"}],"commitId":"6dec1747d8a1c89f6c62fc1d1939d88411f17eba","commitMessage":"@@@Complete rebranding of `bibtexkey` as `citationkey` (#6875)\n\n","date":"2020-09-08 21:34:34","modifiedFileCount":"127","status":"M","submitter":"Tobias Diez"}]
