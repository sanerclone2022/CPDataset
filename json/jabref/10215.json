[{"authorTime":"2017-02-17 05:41:47","codes":[{"authorDate":"2017-02-17 05:41:47","commitOrder":1,"curCode":"    public void testImportEntriesMedline() throws IOException, URISyntaxException {\n        Path file = Paths.get(IsiImporterTest.class.getResource(\"IsiImporterTestMedline.isi\").toURI());\n\n        List<BibEntry> entries = importer.importDatabase(file, StandardCharsets.UTF_8).getDatabase().getEntries();\n\n        assertEquals(2, entries.size());\n        BibEntry a = entries.get(0);\n        BibEntry b = entries.get(1);\n\n        assertEquals(\n                Optional.of(\"Effects of modafinil on cognitive performance and alertness during sleep deprivation.\"),\n                a.getField(\"title\"));\n\n        assertEquals(Optional.of(\"Wesensten, Nancy J.\"), a.getField(\"author\"));\n        assertEquals(Optional.of(\"Curr Pharm Des\"), a.getField(\"journal\"));\n        assertEquals(Optional.of(\"2006\"), a.getField(\"year\"));\n        assertEquals(Optional.empty(), a.getField(\"month\"));\n        assertEquals(Optional.of(\"12\"), a.getField(\"volume\"));\n        assertEquals(Optional.of(\"20\"), a.getField(\"number\"));\n        assertEquals(Optional.of(\"2457--71\"), a.getField(\"pages\"));\n        assertEquals(\"article\", a.getType());\n\n        assertEquals(\n                Optional.of(\n                        \"Estrogen therapy selectively enhances prefrontal cognitive processes: a randomized, double-blind, placebo-controlled study with functional magnetic resonance imaging in perimenopausal and recently postmenopausal women.\"),\n                b.getField(\"title\"));\n        assertEquals(\n                Optional.of(\n                        \"Joffe, Hadine and Hall, Janet E. and Gruber, Staci and Sarmiento, Ingrid A. and Cohen, Lee S. and Yurgelun-Todd, Deborah and Martin, Kathryn A.\"),\n                b.getField(\"author\"));\n        assertEquals(Optional.of(\"2006\"), b.getField(\"year\"));\n        assertEquals(Optional.of(\"#may#\"), b.getField(\"month\"));\n        assertEquals(Optional.of(\"13\"), b.getField(\"volume\"));\n        assertEquals(Optional.of(\"3\"), b.getField(\"number\"));\n        assertEquals(Optional.of(\"411--22\"), b.getField(\"pages\"));\n        assertEquals(\"article\", b.getType());\n    }\n","date":"2017-02-17 05:41:47","endLine":345,"groupId":"10861","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testImportEntriesMedline","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/3f/62db57939846b75d69834dd115d80053d43db5.src","preCode":"    public void testImportEntriesMedline() throws IOException, URISyntaxException {\n        Path file = Paths.get(IsiImporterTest.class.getResource(\"IsiImporterTestMedline.isi\").toURI());\n\n        List<BibEntry> entries = importer.importDatabase(file, StandardCharsets.UTF_8).getDatabase().getEntries();\n\n        assertEquals(2, entries.size());\n        BibEntry a = entries.get(0);\n        BibEntry b = entries.get(1);\n\n        assertEquals(\n                Optional.of(\"Effects of modafinil on cognitive performance and alertness during sleep deprivation.\"),\n                a.getField(\"title\"));\n\n        assertEquals(Optional.of(\"Wesensten, Nancy J.\"), a.getField(\"author\"));\n        assertEquals(Optional.of(\"Curr Pharm Des\"), a.getField(\"journal\"));\n        assertEquals(Optional.of(\"2006\"), a.getField(\"year\"));\n        assertEquals(Optional.empty(), a.getField(\"month\"));\n        assertEquals(Optional.of(\"12\"), a.getField(\"volume\"));\n        assertEquals(Optional.of(\"20\"), a.getField(\"number\"));\n        assertEquals(Optional.of(\"2457--71\"), a.getField(\"pages\"));\n        assertEquals(\"article\", a.getType());\n\n        assertEquals(\n                Optional.of(\n                        \"Estrogen therapy selectively enhances prefrontal cognitive processes: a randomized, double-blind, placebo-controlled study with functional magnetic resonance imaging in perimenopausal and recently postmenopausal women.\"),\n                b.getField(\"title\"));\n        assertEquals(\n                Optional.of(\n                        \"Joffe, Hadine and Hall, Janet E. and Gruber, Staci and Sarmiento, Ingrid A. and Cohen, Lee S. and Yurgelun-Todd, Deborah and Martin, Kathryn A.\"),\n                b.getField(\"author\"));\n        assertEquals(Optional.of(\"2006\"), b.getField(\"year\"));\n        assertEquals(Optional.of(\"#may#\"), b.getField(\"month\"));\n        assertEquals(Optional.of(\"13\"), b.getField(\"volume\"));\n        assertEquals(Optional.of(\"3\"), b.getField(\"number\"));\n        assertEquals(Optional.of(\"411--22\"), b.getField(\"pages\"));\n        assertEquals(\"article\", b.getType());\n    }\n","realPath":"src/test/java/org/jabref/logic/importer/fileformat/IsiImporterTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":309,"status":"B"},{"authorDate":"2017-02-17 05:41:47","commitOrder":1,"curCode":"    public void testImportEntries0() throws IOException, URISyntaxException {\n        Path file = Paths.get(EndnoteImporterTest.class.getResource(\"Endnote.entries.enw\").toURI());\n        List<BibEntry> bibEntries = importer.importDatabase(file, StandardCharsets.UTF_8).getDatabase().getEntries();\n\n        assertEquals(5, bibEntries.size());\n\n        BibEntry be0 = bibEntries.get(0);\n        assertEquals(\"misc\", be0.getType());\n        assertEquals(Optional.of(\"testA0 and testA1\"), be0.getField(\"author\"));\n        assertEquals(Optional.of(\"testE0 and testE1\"), be0.getField(\"editor\"));\n        assertEquals(Optional.of(\"testT\"), be0.getField(\"title\"));\n\n        BibEntry be1 = bibEntries.get(1);\n        assertEquals(\"misc\", be1.getType());\n        assertEquals(Optional.of(\"testC\"), be1.getField(\"address\"));\n        assertEquals(Optional.of(\"testB2\"), be1.getField(\"booktitle\"));\n        assertEquals(Optional.of(\"test8\"), be1.getField(\"date\"));\n        assertEquals(Optional.of(\"test7\"), be1.getField(\"edition\"));\n        assertEquals(Optional.of(\"testJ\"), be1.getField(\"journal\"));\n        assertEquals(Optional.of(\"testD\"), be1.getField(\"year\"));\n\n        BibEntry be2 = bibEntries.get(2);\n        assertEquals(\"article\", be2.getType());\n        assertEquals(Optional.of(\"testB0\"), be2.getField(\"journal\"));\n\n        BibEntry be3 = bibEntries.get(3);\n        assertEquals(\"book\", be3.getType());\n        assertEquals(Optional.of(\"testI0\"), be3.getField(\"publisher\"));\n        assertEquals(Optional.of(\"testB1\"), be3.getField(\"series\"));\n\n        BibEntry be4 = bibEntries.get(4);\n        assertEquals(\"mastersthesis\", be4.getType());\n        assertEquals(Optional.of(\"testX\"), be4.getField(\"abstract\"));\n        assertEquals(Optional.of(\"testF\"), be4.getField(\"bibtexkey\"));\n        assertEquals(Optional.of(\"testR\"), be4.getField(\"doi\"));\n        assertEquals(Optional.of(\"testK\"), be4.getField(\"keywords\"));\n        assertEquals(Optional.of(\"testO1\"), be4.getField(\"note\"));\n        assertEquals(Optional.of(\"testN\"), be4.getField(\"number\"));\n        assertEquals(Optional.of(\"testP\"), be4.getField(\"pages\"));\n        assertEquals(Optional.of(\"testI1\"), be4.getField(\"school\"));\n        assertEquals(Optional.of(\"testU\"), be4.getField(\"url\"));\n        assertEquals(Optional.of(\"testV\"), be4.getField(\"volume\"));\n    }\n","date":"2017-02-17 05:41:47","endLine":124,"groupId":"12188","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testImportEntries0","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/c2/204447f1ecd7bfb50b19c0d59a0d4cd28a3e7e.src","preCode":"    public void testImportEntries0() throws IOException, URISyntaxException {\n        Path file = Paths.get(EndnoteImporterTest.class.getResource(\"Endnote.entries.enw\").toURI());\n        List<BibEntry> bibEntries = importer.importDatabase(file, StandardCharsets.UTF_8).getDatabase().getEntries();\n\n        assertEquals(5, bibEntries.size());\n\n        BibEntry be0 = bibEntries.get(0);\n        assertEquals(\"misc\", be0.getType());\n        assertEquals(Optional.of(\"testA0 and testA1\"), be0.getField(\"author\"));\n        assertEquals(Optional.of(\"testE0 and testE1\"), be0.getField(\"editor\"));\n        assertEquals(Optional.of(\"testT\"), be0.getField(\"title\"));\n\n        BibEntry be1 = bibEntries.get(1);\n        assertEquals(\"misc\", be1.getType());\n        assertEquals(Optional.of(\"testC\"), be1.getField(\"address\"));\n        assertEquals(Optional.of(\"testB2\"), be1.getField(\"booktitle\"));\n        assertEquals(Optional.of(\"test8\"), be1.getField(\"date\"));\n        assertEquals(Optional.of(\"test7\"), be1.getField(\"edition\"));\n        assertEquals(Optional.of(\"testJ\"), be1.getField(\"journal\"));\n        assertEquals(Optional.of(\"testD\"), be1.getField(\"year\"));\n\n        BibEntry be2 = bibEntries.get(2);\n        assertEquals(\"article\", be2.getType());\n        assertEquals(Optional.of(\"testB0\"), be2.getField(\"journal\"));\n\n        BibEntry be3 = bibEntries.get(3);\n        assertEquals(\"book\", be3.getType());\n        assertEquals(Optional.of(\"testI0\"), be3.getField(\"publisher\"));\n        assertEquals(Optional.of(\"testB1\"), be3.getField(\"series\"));\n\n        BibEntry be4 = bibEntries.get(4);\n        assertEquals(\"mastersthesis\", be4.getType());\n        assertEquals(Optional.of(\"testX\"), be4.getField(\"abstract\"));\n        assertEquals(Optional.of(\"testF\"), be4.getField(\"bibtexkey\"));\n        assertEquals(Optional.of(\"testR\"), be4.getField(\"doi\"));\n        assertEquals(Optional.of(\"testK\"), be4.getField(\"keywords\"));\n        assertEquals(Optional.of(\"testO1\"), be4.getField(\"note\"));\n        assertEquals(Optional.of(\"testN\"), be4.getField(\"number\"));\n        assertEquals(Optional.of(\"testP\"), be4.getField(\"pages\"));\n        assertEquals(Optional.of(\"testI1\"), be4.getField(\"school\"));\n        assertEquals(Optional.of(\"testU\"), be4.getField(\"url\"));\n        assertEquals(Optional.of(\"testV\"), be4.getField(\"volume\"));\n    }\n","realPath":"src/test/java/org/jabref/logic/importer/fileformat/EndnoteImporterTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":82,"status":"B"}],"commitId":"ebbeb1d249edf7134abf92d24c2031ae54d19881","commitMessage":"@@@Merge branch 'net-sf-to-org-jabref'\n","date":"2017-02-17 05:41:47","modifiedFileCount":"1","status":"B","submitter":"Oliver Kopp"},{"authorTime":"2018-02-01 01:07:12","codes":[{"authorDate":"2018-02-01 01:07:12","commitOrder":2,"curCode":"    public void testImportEntriesMedline() throws IOException, URISyntaxException {\n        Path file = Paths.get(IsiImporterTest.class.getResource(\"IsiImporterTestMedline.isi\").toURI());\n        List<BibEntry> entries = importer.importDatabase(file, StandardCharsets.UTF_8).getDatabase().getEntries();\n\n        BibEntry first = entries.get(0);\n        BibEntry second = entries.get(1);\n\n        assertEquals(2, entries.size());\n        assertEquals(\n                Optional.of(\"Effects of modafinil on cognitive performance and alertness during sleep deprivation.\"),\n                first.getField(\"title\"));\n        assertEquals(Optional.of(\"Wesensten, Nancy J.\"), first.getField(\"author\"));\n        assertEquals(Optional.of(\"Curr Pharm Des\"), first.getField(\"journal\"));\n        assertEquals(Optional.of(\"2006\"), first.getField(\"year\"));\n        assertEquals(Optional.empty(), first.getField(\"month\"));\n        assertEquals(Optional.of(\"12\"), first.getField(\"volume\"));\n        assertEquals(Optional.of(\"20\"), first.getField(\"number\"));\n        assertEquals(Optional.of(\"2457--71\"), first.getField(\"pages\"));\n        assertEquals(\"article\", first.getType());\n        assertEquals(\n                Optional.of(\n                        \"Estrogen therapy selectively enhances prefrontal cognitive processes: a randomized, double-blind, placebo-controlled study with functional magnetic resonance imaging in perimenopausal and recently postmenopausal women.\"),\n                second.getField(\"title\"));\n        assertEquals(\n                Optional.of(\n                        \"Joffe, Hadine and Hall, Janet E. and Gruber, Staci and Sarmiento, Ingrid A. and Cohen, Lee S. and Yurgelun-Todd, Deborah and Martin, Kathryn A.\"),\n                second.getField(\"author\"));\n        assertEquals(Optional.of(\"2006\"), second.getField(\"year\"));\n        assertEquals(Optional.of(\"#may#\"), second.getField(\"month\"));\n        assertEquals(Optional.of(\"13\"), second.getField(\"volume\"));\n        assertEquals(Optional.of(\"3\"), second.getField(\"number\"));\n        assertEquals(Optional.of(\"411--22\"), second.getField(\"pages\"));\n        assertEquals(\"article\", second.getType());\n    }\n","date":"2018-02-01 01:07:12","endLine":341,"groupId":"11207","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testImportEntriesMedline","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/cc/5e4c87bb7e022e609993276af70f081b07d43f.src","preCode":"    public void testImportEntriesMedline() throws IOException, URISyntaxException {\n        Path file = Paths.get(IsiImporterTest.class.getResource(\"IsiImporterTestMedline.isi\").toURI());\n\n        List<BibEntry> entries = importer.importDatabase(file, StandardCharsets.UTF_8).getDatabase().getEntries();\n\n        assertEquals(2, entries.size());\n        BibEntry a = entries.get(0);\n        BibEntry b = entries.get(1);\n\n        assertEquals(\n                Optional.of(\"Effects of modafinil on cognitive performance and alertness during sleep deprivation.\"),\n                a.getField(\"title\"));\n\n        assertEquals(Optional.of(\"Wesensten, Nancy J.\"), a.getField(\"author\"));\n        assertEquals(Optional.of(\"Curr Pharm Des\"), a.getField(\"journal\"));\n        assertEquals(Optional.of(\"2006\"), a.getField(\"year\"));\n        assertEquals(Optional.empty(), a.getField(\"month\"));\n        assertEquals(Optional.of(\"12\"), a.getField(\"volume\"));\n        assertEquals(Optional.of(\"20\"), a.getField(\"number\"));\n        assertEquals(Optional.of(\"2457--71\"), a.getField(\"pages\"));\n        assertEquals(\"article\", a.getType());\n\n        assertEquals(\n                Optional.of(\n                        \"Estrogen therapy selectively enhances prefrontal cognitive processes: a randomized, double-blind, placebo-controlled study with functional magnetic resonance imaging in perimenopausal and recently postmenopausal women.\"),\n                b.getField(\"title\"));\n        assertEquals(\n                Optional.of(\n                        \"Joffe, Hadine and Hall, Janet E. and Gruber, Staci and Sarmiento, Ingrid A. and Cohen, Lee S. and Yurgelun-Todd, Deborah and Martin, Kathryn A.\"),\n                b.getField(\"author\"));\n        assertEquals(Optional.of(\"2006\"), b.getField(\"year\"));\n        assertEquals(Optional.of(\"#may#\"), b.getField(\"month\"));\n        assertEquals(Optional.of(\"13\"), b.getField(\"volume\"));\n        assertEquals(Optional.of(\"3\"), b.getField(\"number\"));\n        assertEquals(Optional.of(\"411--22\"), b.getField(\"pages\"));\n        assertEquals(\"article\", b.getType());\n    }\n","realPath":"src/test/java/org/jabref/logic/importer/fileformat/IsiImporterTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":308,"status":"M"},{"authorDate":"2018-02-01 01:07:12","commitOrder":2,"curCode":"    public void testImportEntries0() throws IOException, URISyntaxException {\n        Path file = Paths.get(EndnoteImporterTest.class.getResource(\"Endnote.entries.enw\").toURI());\n        List<BibEntry> bibEntries = importer.importDatabase(file, StandardCharsets.UTF_8).getDatabase().getEntries();\n\n        assertEquals(5, bibEntries.size());\n\n        BibEntry first = bibEntries.get(0);\n        assertEquals(\"misc\", first.getType());\n        assertEquals(Optional.of(\"testA0 and testA1\"), first.getField(\"author\"));\n        assertEquals(Optional.of(\"testE0 and testE1\"), first.getField(\"editor\"));\n        assertEquals(Optional.of(\"testT\"), first.getField(\"title\"));\n\n        BibEntry second = bibEntries.get(1);\n        assertEquals(\"misc\", second.getType());\n        assertEquals(Optional.of(\"testC\"), second.getField(\"address\"));\n        assertEquals(Optional.of(\"testB2\"), second.getField(\"booktitle\"));\n        assertEquals(Optional.of(\"test8\"), second.getField(\"date\"));\n        assertEquals(Optional.of(\"test7\"), second.getField(\"edition\"));\n        assertEquals(Optional.of(\"testJ\"), second.getField(\"journal\"));\n        assertEquals(Optional.of(\"testD\"), second.getField(\"year\"));\n\n        BibEntry third = bibEntries.get(2);\n        assertEquals(\"article\", third.getType());\n        assertEquals(Optional.of(\"testB0\"), third.getField(\"journal\"));\n\n        BibEntry fourth = bibEntries.get(3);\n        assertEquals(\"book\", fourth.getType());\n        assertEquals(Optional.of(\"testI0\"), fourth.getField(\"publisher\"));\n        assertEquals(Optional.of(\"testB1\"), fourth.getField(\"series\"));\n\n        BibEntry fifth = bibEntries.get(4);\n        assertEquals(\"mastersthesis\", fifth.getType());\n        assertEquals(Optional.of(\"testX\"), fifth.getField(\"abstract\"));\n        assertEquals(Optional.of(\"testF\"), fifth.getField(\"bibtexkey\"));\n        assertEquals(Optional.of(\"testR\"), fifth.getField(\"doi\"));\n        assertEquals(Optional.of(\"testK\"), fifth.getField(\"keywords\"));\n        assertEquals(Optional.of(\"testO1\"), fifth.getField(\"note\"));\n        assertEquals(Optional.of(\"testN\"), fifth.getField(\"number\"));\n        assertEquals(Optional.of(\"testP\"), fifth.getField(\"pages\"));\n        assertEquals(Optional.of(\"testI1\"), fifth.getField(\"school\"));\n        assertEquals(Optional.of(\"testU\"), fifth.getField(\"url\"));\n        assertEquals(Optional.of(\"testV\"), fifth.getField(\"volume\"));\n    }\n","date":"2018-02-01 01:07:12","endLine":123,"groupId":"10249","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testImportEntries0","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/7f/e0eacfd84ca199486d08944d2493bc4618548b.src","preCode":"    public void testImportEntries0() throws IOException, URISyntaxException {\n        Path file = Paths.get(EndnoteImporterTest.class.getResource(\"Endnote.entries.enw\").toURI());\n        List<BibEntry> bibEntries = importer.importDatabase(file, StandardCharsets.UTF_8).getDatabase().getEntries();\n\n        assertEquals(5, bibEntries.size());\n\n        BibEntry be0 = bibEntries.get(0);\n        assertEquals(\"misc\", be0.getType());\n        assertEquals(Optional.of(\"testA0 and testA1\"), be0.getField(\"author\"));\n        assertEquals(Optional.of(\"testE0 and testE1\"), be0.getField(\"editor\"));\n        assertEquals(Optional.of(\"testT\"), be0.getField(\"title\"));\n\n        BibEntry be1 = bibEntries.get(1);\n        assertEquals(\"misc\", be1.getType());\n        assertEquals(Optional.of(\"testC\"), be1.getField(\"address\"));\n        assertEquals(Optional.of(\"testB2\"), be1.getField(\"booktitle\"));\n        assertEquals(Optional.of(\"test8\"), be1.getField(\"date\"));\n        assertEquals(Optional.of(\"test7\"), be1.getField(\"edition\"));\n        assertEquals(Optional.of(\"testJ\"), be1.getField(\"journal\"));\n        assertEquals(Optional.of(\"testD\"), be1.getField(\"year\"));\n\n        BibEntry be2 = bibEntries.get(2);\n        assertEquals(\"article\", be2.getType());\n        assertEquals(Optional.of(\"testB0\"), be2.getField(\"journal\"));\n\n        BibEntry be3 = bibEntries.get(3);\n        assertEquals(\"book\", be3.getType());\n        assertEquals(Optional.of(\"testI0\"), be3.getField(\"publisher\"));\n        assertEquals(Optional.of(\"testB1\"), be3.getField(\"series\"));\n\n        BibEntry be4 = bibEntries.get(4);\n        assertEquals(\"mastersthesis\", be4.getType());\n        assertEquals(Optional.of(\"testX\"), be4.getField(\"abstract\"));\n        assertEquals(Optional.of(\"testF\"), be4.getField(\"bibtexkey\"));\n        assertEquals(Optional.of(\"testR\"), be4.getField(\"doi\"));\n        assertEquals(Optional.of(\"testK\"), be4.getField(\"keywords\"));\n        assertEquals(Optional.of(\"testO1\"), be4.getField(\"note\"));\n        assertEquals(Optional.of(\"testN\"), be4.getField(\"number\"));\n        assertEquals(Optional.of(\"testP\"), be4.getField(\"pages\"));\n        assertEquals(Optional.of(\"testI1\"), be4.getField(\"school\"));\n        assertEquals(Optional.of(\"testU\"), be4.getField(\"url\"));\n        assertEquals(Optional.of(\"testV\"), be4.getField(\"volume\"));\n    }\n","realPath":"src/test/java/org/jabref/logic/importer/fileformat/EndnoteImporterTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":81,"status":"M"}],"commitId":"608e415b643995d3492ad12c411b101311d67358","commitMessage":"@@@Migrate importer tests to JUnit5 (#3665)\n\n* Migrate paramterized RIS tests to JUnit5\n\n* Extract generic importer testing code to new class\n\n* Switch to JUnit5 assertions in BibEntryAssert\n\n* Remove unused imports\n\n* Use static import for Assertion when possible\n\n* Extract file collection from importer test classes\n\n* Refactor biblioscape importer tests\n\n* Refactor BiblioscapeImporterTestTypes to JUnit5 syntax\n\n* Refactor CopacImporterTestFiles\n\n* Migrate medline importer tests to JUnit5\n\n* Convert BibTeXML importer tests to JUnit5\n\n* Move several non-parametric importer test classes to JUnit5\n\n* Refactor Medline importer tests to JUni5\n\n* Migrate parameterized MODS importer tests to JUnit5\n\n* Migrate MrDLib importer tests to JUnit5\n\n* Migrate MsBibImporter tests to JUnit5\n\n* Migrate OvidImporter tests to JUnit5\n\n* Migrate PdfContentImporter tests to JUnit5\n\n* Migrate PdfXmpImporter tests to JUnit5\n\n* Migrate RepecNepImporter tests to JUnit5\n\n* Migrate RISImporter tests to JUnit5\n\n* Migrate SilverPlatterImporter tests to JUnit5\n\n* Fix imports in SilverPlatterImporterTest\n\n* Fix BibTeXMLImporter tests\n\n* Fix and clarify BibTeXMLImporterTestTypes\n\n* Fix medline tests for malformed files\n\n* Remove unused imports\n\n* Fix broken test files that can be fixed and remove the ones with larger syntactic problem\n\n* Fix MODSImporter tests\n\n* Fix test file for MsBibImporter tests\n\n* Convert Before to BeforeEach in OvidImporterTests\n\n* Check starting line of a file for checking whether it is a PDF\n\n* Migrate additional BibTeXML tests to JUnit5\n\n* Refactor and restructure BibTexParser tests\n\n* Refactor CopacImporter tests\n\n* Refactor BibTeXMLImporter tests\n\n* Refactor EndnoteImporter tests\n\n* Refactor FreeCiteImporter tests\n\n* Refactor InspecImporter tests\n\n* Refactor IsiImporter tests\n\n* Refactor MedlineImporter tests\n\n* Refactor MrDLibImporter tests\n\n* Refactor MsBibImporter tests\n\n* Refactor OvidImporter tests\n\n* Refactor PdfXmpImporter tests\n\n* Refactor RepecNepImporter tests\n\n* Refactor SilverPlatterImporter tests\n\n* Fix a bunch of codacy issues\n","date":"2018-02-01 01:07:12","modifiedFileCount":"32","status":"M","submitter":"J?rg Lenhard"},{"authorTime":"2019-08-02 15:20:10","codes":[{"authorDate":"2019-08-02 15:20:10","commitOrder":3,"curCode":"    public void testImportEntriesMedline() throws IOException, URISyntaxException {\n        Path file = Paths.get(IsiImporterTest.class.getResource(\"IsiImporterTestMedline.isi\").toURI());\n        List<BibEntry> entries = importer.importDatabase(file, StandardCharsets.UTF_8).getDatabase().getEntries();\n\n        BibEntry first = entries.get(0);\n        BibEntry second = entries.get(1);\n\n        assertEquals(2, entries.size());\n        assertEquals(\n                Optional.of(\"Effects of modafinil on cognitive performance and alertness during sleep deprivation.\"),\n                first.getField(StandardField.TITLE));\n        assertEquals(Optional.of(\"Wesensten, Nancy J.\"), first.getField(StandardField.AUTHOR));\n        assertEquals(Optional.of(\"Curr Pharm Des\"), first.getField(StandardField.JOURNAL));\n        assertEquals(Optional.of(\"2006\"), first.getField(StandardField.YEAR));\n        assertEquals(Optional.empty(), first.getField(StandardField.MONTH));\n        assertEquals(Optional.of(\"12\"), first.getField(StandardField.VOLUME));\n        assertEquals(Optional.of(\"20\"), first.getField(StandardField.NUMBER));\n        assertEquals(Optional.of(\"2457--71\"), first.getField(StandardField.PAGES));\n        assertEquals(StandardEntryType.Article, first.getType());\n        assertEquals(\n                Optional.of(\n                        \"Estrogen therapy selectively enhances prefrontal cognitive processes: a randomized, double-blind, placebo-controlled study with functional magnetic resonance imaging in perimenopausal and recently postmenopausal women.\"),\n                second.getField(StandardField.TITLE));\n        assertEquals(\n                Optional.of(\n                        \"Joffe, Hadine and Hall, Janet E. and Gruber, Staci and Sarmiento, Ingrid A. and Cohen, Lee S. and Yurgelun-Todd, Deborah and Martin, Kathryn A.\"),\n                second.getField(StandardField.AUTHOR));\n        assertEquals(Optional.of(\"2006\"), second.getField(StandardField.YEAR));\n        assertEquals(Optional.of(\"#may#\"), second.getField(StandardField.MONTH));\n        assertEquals(Optional.of(\"13\"), second.getField(StandardField.VOLUME));\n        assertEquals(Optional.of(\"3\"), second.getField(StandardField.NUMBER));\n        assertEquals(Optional.of(\"411--22\"), second.getField(StandardField.PAGES));\n        assertEquals(StandardEntryType.Article, second.getType());\n    }\n","date":"2019-08-02 15:20:10","endLine":342,"groupId":"12882","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testImportEntriesMedline","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/5d/37b416bbc2eece3432e819e625a863e4773212.src","preCode":"    public void testImportEntriesMedline() throws IOException, URISyntaxException {\n        Path file = Paths.get(IsiImporterTest.class.getResource(\"IsiImporterTestMedline.isi\").toURI());\n        List<BibEntry> entries = importer.importDatabase(file, StandardCharsets.UTF_8).getDatabase().getEntries();\n\n        BibEntry first = entries.get(0);\n        BibEntry second = entries.get(1);\n\n        assertEquals(2, entries.size());\n        assertEquals(\n                Optional.of(\"Effects of modafinil on cognitive performance and alertness during sleep deprivation.\"),\n                first.getField(\"title\"));\n        assertEquals(Optional.of(\"Wesensten, Nancy J.\"), first.getField(\"author\"));\n        assertEquals(Optional.of(\"Curr Pharm Des\"), first.getField(\"journal\"));\n        assertEquals(Optional.of(\"2006\"), first.getField(\"year\"));\n        assertEquals(Optional.empty(), first.getField(\"month\"));\n        assertEquals(Optional.of(\"12\"), first.getField(\"volume\"));\n        assertEquals(Optional.of(\"20\"), first.getField(\"number\"));\n        assertEquals(Optional.of(\"2457--71\"), first.getField(\"pages\"));\n        assertEquals(\"article\", first.getType());\n        assertEquals(\n                Optional.of(\n                        \"Estrogen therapy selectively enhances prefrontal cognitive processes: a randomized, double-blind, placebo-controlled study with functional magnetic resonance imaging in perimenopausal and recently postmenopausal women.\"),\n                second.getField(\"title\"));\n        assertEquals(\n                Optional.of(\n                        \"Joffe, Hadine and Hall, Janet E. and Gruber, Staci and Sarmiento, Ingrid A. and Cohen, Lee S. and Yurgelun-Todd, Deborah and Martin, Kathryn A.\"),\n                second.getField(\"author\"));\n        assertEquals(Optional.of(\"2006\"), second.getField(\"year\"));\n        assertEquals(Optional.of(\"#may#\"), second.getField(\"month\"));\n        assertEquals(Optional.of(\"13\"), second.getField(\"volume\"));\n        assertEquals(Optional.of(\"3\"), second.getField(\"number\"));\n        assertEquals(Optional.of(\"411--22\"), second.getField(\"pages\"));\n        assertEquals(\"article\", second.getType());\n    }\n","realPath":"src/test/java/org/jabref/logic/importer/fileformat/IsiImporterTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":309,"status":"M"},{"authorDate":"2019-08-02 15:20:10","commitOrder":3,"curCode":"    public void testImportEntries0() throws IOException, URISyntaxException {\n        Path file = Paths.get(EndnoteImporterTest.class.getResource(\"Endnote.entries.enw\").toURI());\n        List<BibEntry> bibEntries = importer.importDatabase(file, StandardCharsets.UTF_8).getDatabase().getEntries();\n\n        assertEquals(5, bibEntries.size());\n\n        BibEntry first = bibEntries.get(0);\n        assertEquals(StandardEntryType.Misc, first.getType());\n        assertEquals(Optional.of(\"testA0 and testA1\"), first.getField(StandardField.AUTHOR));\n        assertEquals(Optional.of(\"testE0 and testE1\"), first.getField(StandardField.EDITOR));\n        assertEquals(Optional.of(\"testT\"), first.getField(StandardField.TITLE));\n\n        BibEntry second = bibEntries.get(1);\n        assertEquals(StandardEntryType.Misc, second.getType());\n        assertEquals(Optional.of(\"testC\"), second.getField(StandardField.ADDRESS));\n        assertEquals(Optional.of(\"testB2\"), second.getField(StandardField.BOOKTITLE));\n        assertEquals(Optional.of(\"test8\"), second.getField(StandardField.DATE));\n        assertEquals(Optional.of(\"test7\"), second.getField(StandardField.EDITION));\n        assertEquals(Optional.of(\"testJ\"), second.getField(StandardField.JOURNAL));\n        assertEquals(Optional.of(\"testD\"), second.getField(StandardField.YEAR));\n\n        BibEntry third = bibEntries.get(2);\n        assertEquals(StandardEntryType.Article, third.getType());\n        assertEquals(Optional.of(\"testB0\"), third.getField(StandardField.JOURNAL));\n\n        BibEntry fourth = bibEntries.get(3);\n        assertEquals(StandardEntryType.Book, fourth.getType());\n        assertEquals(Optional.of(\"testI0\"), fourth.getField(StandardField.PUBLISHER));\n        assertEquals(Optional.of(\"testB1\"), fourth.getField(StandardField.SERIES));\n\n        BibEntry fifth = bibEntries.get(4);\n        assertEquals(StandardEntryType.MastersThesis, fifth.getType());\n        assertEquals(Optional.of(\"testX\"), fifth.getField(StandardField.ABSTRACT));\n        assertEquals(Optional.of(\"testF\"), fifth.getCiteKeyOptional());\n        assertEquals(Optional.of(\"testR\"), fifth.getField(StandardField.DOI));\n        assertEquals(Optional.of(\"testK\"), fifth.getField(StandardField.KEYWORDS));\n        assertEquals(Optional.of(\"testO1\"), fifth.getField(StandardField.NOTE));\n        assertEquals(Optional.of(\"testN\"), fifth.getField(StandardField.NUMBER));\n        assertEquals(Optional.of(\"testP\"), fifth.getField(StandardField.PAGES));\n        assertEquals(Optional.of(\"testI1\"), fifth.getField(StandardField.SCHOOL));\n        assertEquals(Optional.of(\"testU\"), fifth.getField(StandardField.URL));\n        assertEquals(Optional.of(\"testV\"), fifth.getField(StandardField.VOLUME));\n    }\n","date":"2019-08-02 15:20:10","endLine":125,"groupId":"2423","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testImportEntries0","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/3d/c2e000408b18ad52c590fbdc4177b548c2ce91.src","preCode":"    public void testImportEntries0() throws IOException, URISyntaxException {\n        Path file = Paths.get(EndnoteImporterTest.class.getResource(\"Endnote.entries.enw\").toURI());\n        List<BibEntry> bibEntries = importer.importDatabase(file, StandardCharsets.UTF_8).getDatabase().getEntries();\n\n        assertEquals(5, bibEntries.size());\n\n        BibEntry first = bibEntries.get(0);\n        assertEquals(\"misc\", first.getType());\n        assertEquals(Optional.of(\"testA0 and testA1\"), first.getField(\"author\"));\n        assertEquals(Optional.of(\"testE0 and testE1\"), first.getField(\"editor\"));\n        assertEquals(Optional.of(\"testT\"), first.getField(\"title\"));\n\n        BibEntry second = bibEntries.get(1);\n        assertEquals(\"misc\", second.getType());\n        assertEquals(Optional.of(\"testC\"), second.getField(\"address\"));\n        assertEquals(Optional.of(\"testB2\"), second.getField(\"booktitle\"));\n        assertEquals(Optional.of(\"test8\"), second.getField(\"date\"));\n        assertEquals(Optional.of(\"test7\"), second.getField(\"edition\"));\n        assertEquals(Optional.of(\"testJ\"), second.getField(\"journal\"));\n        assertEquals(Optional.of(\"testD\"), second.getField(\"year\"));\n\n        BibEntry third = bibEntries.get(2);\n        assertEquals(\"article\", third.getType());\n        assertEquals(Optional.of(\"testB0\"), third.getField(\"journal\"));\n\n        BibEntry fourth = bibEntries.get(3);\n        assertEquals(\"book\", fourth.getType());\n        assertEquals(Optional.of(\"testI0\"), fourth.getField(\"publisher\"));\n        assertEquals(Optional.of(\"testB1\"), fourth.getField(\"series\"));\n\n        BibEntry fifth = bibEntries.get(4);\n        assertEquals(\"mastersthesis\", fifth.getType());\n        assertEquals(Optional.of(\"testX\"), fifth.getField(\"abstract\"));\n        assertEquals(Optional.of(\"testF\"), fifth.getField(\"bibtexkey\"));\n        assertEquals(Optional.of(\"testR\"), fifth.getField(\"doi\"));\n        assertEquals(Optional.of(\"testK\"), fifth.getField(\"keywords\"));\n        assertEquals(Optional.of(\"testO1\"), fifth.getField(\"note\"));\n        assertEquals(Optional.of(\"testN\"), fifth.getField(\"number\"));\n        assertEquals(Optional.of(\"testP\"), fifth.getField(\"pages\"));\n        assertEquals(Optional.of(\"testI1\"), fifth.getField(\"school\"));\n        assertEquals(Optional.of(\"testU\"), fifth.getField(\"url\"));\n        assertEquals(Optional.of(\"testV\"), fifth.getField(\"volume\"));\n    }\n","realPath":"src/test/java/org/jabref/logic/importer/fileformat/EndnoteImporterTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":83,"status":"M"}],"commitId":"4b39b78e4afcd6c36b385f5c46f1d9a4eac2e29b","commitMessage":"@@@Move to extended enums for fields and entry types (#5148)\n\n* Introduce interface for fields\n\n* Continue using fields interface instead of strings\n\n* Introduce OrFields class\n\n* Move FieldProperty\n\n* Convert entry types to extended enum\n\n* Start fixing build\n\n* Fix build\n\n* Start fixing tests\n\n* Everything compiles again\n\n* Make model tests pass\n\n* Fix most tests\n\n* Fix build\n\n* Fix a few more tests\n\n* Fix a few more tests\n\n* Fix a few more tests\n\n* Fix a few more tests\n\n* Fix checkstyle issues\n\n* Fix more tests\n\n* Fix more tests\n\n* Disable test that fails on CI\n\n* Disable test that fails on CI\n","date":"2019-08-02 15:20:10","modifiedFileCount":"439","status":"M","submitter":"Tobias Diez"},{"authorTime":"2019-08-02 15:20:10","codes":[{"authorDate":"2019-11-14 07:17:00","commitOrder":4,"curCode":"    public void testImportEntriesMedline() throws IOException, URISyntaxException {\n        Path file = Paths.get(IsiImporterTest.class.getResource(\"IsiImporterTestMedline.isi\").toURI());\n        List<BibEntry> entries = importer.importDatabase(file, StandardCharsets.UTF_8).getDatabase().getEntries();\n\n        BibEntry first = entries.get(0);\n        BibEntry second = entries.get(1);\n\n        assertEquals(2, entries.size());\n        assertEquals(\n                Optional.of(\"Effects of modafinil on cognitive performance and alertness during sleep deprivation.\"),\n                first.getField(StandardField.TITLE));\n        assertEquals(Optional.of(\"Wesensten, Nancy J.\"), first.getField(StandardField.AUTHOR));\n        assertEquals(Optional.of(\"Curr Pharm Des\"), first.getField(StandardField.JOURNAL));\n        assertEquals(Optional.of(\"2006\"), first.getField(StandardField.YEAR));\n        assertEquals(Optional.empty(), first.getField(StandardField.MONTH));\n        assertEquals(Optional.of(\"12\"), first.getField(StandardField.VOLUME));\n        assertEquals(Optional.of(\"20\"), first.getField(StandardField.NUMBER));\n        assertEquals(Optional.of(\"2457--71\"), first.getField(StandardField.PAGES));\n        assertEquals(StandardEntryType.Article, first.getType());\n        assertEquals(\n                Optional.of(\n                        \"Estrogen therapy selectively enhances prefrontal cognitive processes: a randomized, double-blind, placebo-controlled study with functional magnetic resonance imaging in perimenopausal and recently postmenopausal women.\"),\n                second.getField(StandardField.TITLE));\n        assertEquals(\n                Optional.of(\n                        \"Joffe, Hadine and Hall, Janet E. and Gruber, Staci and Sarmiento, Ingrid A. and Cohen, Lee S. and Yurgelun-Todd, Deborah and Martin, Kathryn A.\"),\n                second.getField(StandardField.AUTHOR));\n        assertEquals(Optional.of(\"2006\"), second.getField(StandardField.YEAR));\n        assertEquals(Optional.of(Month.MAY), second.getMonth());\n        assertEquals(Optional.of(\"13\"), second.getField(StandardField.VOLUME));\n        assertEquals(Optional.of(\"3\"), second.getField(StandardField.NUMBER));\n        assertEquals(Optional.of(\"411--22\"), second.getField(StandardField.PAGES));\n        assertEquals(StandardEntryType.Article, second.getType());\n    }\n","date":"2019-11-14 07:17:00","endLine":340,"groupId":"12882","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"testImportEntriesMedline","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/e4/70436f40de5345180968c0abab131d47e1fd10.src","preCode":"    public void testImportEntriesMedline() throws IOException, URISyntaxException {\n        Path file = Paths.get(IsiImporterTest.class.getResource(\"IsiImporterTestMedline.isi\").toURI());\n        List<BibEntry> entries = importer.importDatabase(file, StandardCharsets.UTF_8).getDatabase().getEntries();\n\n        BibEntry first = entries.get(0);\n        BibEntry second = entries.get(1);\n\n        assertEquals(2, entries.size());\n        assertEquals(\n                Optional.of(\"Effects of modafinil on cognitive performance and alertness during sleep deprivation.\"),\n                first.getField(StandardField.TITLE));\n        assertEquals(Optional.of(\"Wesensten, Nancy J.\"), first.getField(StandardField.AUTHOR));\n        assertEquals(Optional.of(\"Curr Pharm Des\"), first.getField(StandardField.JOURNAL));\n        assertEquals(Optional.of(\"2006\"), first.getField(StandardField.YEAR));\n        assertEquals(Optional.empty(), first.getField(StandardField.MONTH));\n        assertEquals(Optional.of(\"12\"), first.getField(StandardField.VOLUME));\n        assertEquals(Optional.of(\"20\"), first.getField(StandardField.NUMBER));\n        assertEquals(Optional.of(\"2457--71\"), first.getField(StandardField.PAGES));\n        assertEquals(StandardEntryType.Article, first.getType());\n        assertEquals(\n                Optional.of(\n                        \"Estrogen therapy selectively enhances prefrontal cognitive processes: a randomized, double-blind, placebo-controlled study with functional magnetic resonance imaging in perimenopausal and recently postmenopausal women.\"),\n                second.getField(StandardField.TITLE));\n        assertEquals(\n                Optional.of(\n                        \"Joffe, Hadine and Hall, Janet E. and Gruber, Staci and Sarmiento, Ingrid A. and Cohen, Lee S. and Yurgelun-Todd, Deborah and Martin, Kathryn A.\"),\n                second.getField(StandardField.AUTHOR));\n        assertEquals(Optional.of(\"2006\"), second.getField(StandardField.YEAR));\n        assertEquals(Optional.of(\"#may#\"), second.getField(StandardField.MONTH));\n        assertEquals(Optional.of(\"13\"), second.getField(StandardField.VOLUME));\n        assertEquals(Optional.of(\"3\"), second.getField(StandardField.NUMBER));\n        assertEquals(Optional.of(\"411--22\"), second.getField(StandardField.PAGES));\n        assertEquals(StandardEntryType.Article, second.getType());\n    }\n","realPath":"src/test/java/org/jabref/logic/importer/fileformat/IsiImporterTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":307,"status":"M"},{"authorDate":"2019-08-02 15:20:10","commitOrder":4,"curCode":"    public void testImportEntries0() throws IOException, URISyntaxException {\n        Path file = Paths.get(EndnoteImporterTest.class.getResource(\"Endnote.entries.enw\").toURI());\n        List<BibEntry> bibEntries = importer.importDatabase(file, StandardCharsets.UTF_8).getDatabase().getEntries();\n\n        assertEquals(5, bibEntries.size());\n\n        BibEntry first = bibEntries.get(0);\n        assertEquals(StandardEntryType.Misc, first.getType());\n        assertEquals(Optional.of(\"testA0 and testA1\"), first.getField(StandardField.AUTHOR));\n        assertEquals(Optional.of(\"testE0 and testE1\"), first.getField(StandardField.EDITOR));\n        assertEquals(Optional.of(\"testT\"), first.getField(StandardField.TITLE));\n\n        BibEntry second = bibEntries.get(1);\n        assertEquals(StandardEntryType.Misc, second.getType());\n        assertEquals(Optional.of(\"testC\"), second.getField(StandardField.ADDRESS));\n        assertEquals(Optional.of(\"testB2\"), second.getField(StandardField.BOOKTITLE));\n        assertEquals(Optional.of(\"test8\"), second.getField(StandardField.DATE));\n        assertEquals(Optional.of(\"test7\"), second.getField(StandardField.EDITION));\n        assertEquals(Optional.of(\"testJ\"), second.getField(StandardField.JOURNAL));\n        assertEquals(Optional.of(\"testD\"), second.getField(StandardField.YEAR));\n\n        BibEntry third = bibEntries.get(2);\n        assertEquals(StandardEntryType.Article, third.getType());\n        assertEquals(Optional.of(\"testB0\"), third.getField(StandardField.JOURNAL));\n\n        BibEntry fourth = bibEntries.get(3);\n        assertEquals(StandardEntryType.Book, fourth.getType());\n        assertEquals(Optional.of(\"testI0\"), fourth.getField(StandardField.PUBLISHER));\n        assertEquals(Optional.of(\"testB1\"), fourth.getField(StandardField.SERIES));\n\n        BibEntry fifth = bibEntries.get(4);\n        assertEquals(StandardEntryType.MastersThesis, fifth.getType());\n        assertEquals(Optional.of(\"testX\"), fifth.getField(StandardField.ABSTRACT));\n        assertEquals(Optional.of(\"testF\"), fifth.getCiteKeyOptional());\n        assertEquals(Optional.of(\"testR\"), fifth.getField(StandardField.DOI));\n        assertEquals(Optional.of(\"testK\"), fifth.getField(StandardField.KEYWORDS));\n        assertEquals(Optional.of(\"testO1\"), fifth.getField(StandardField.NOTE));\n        assertEquals(Optional.of(\"testN\"), fifth.getField(StandardField.NUMBER));\n        assertEquals(Optional.of(\"testP\"), fifth.getField(StandardField.PAGES));\n        assertEquals(Optional.of(\"testI1\"), fifth.getField(StandardField.SCHOOL));\n        assertEquals(Optional.of(\"testU\"), fifth.getField(StandardField.URL));\n        assertEquals(Optional.of(\"testV\"), fifth.getField(StandardField.VOLUME));\n    }\n","date":"2019-08-02 15:20:10","endLine":125,"groupId":"2423","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"testImportEntries0","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/3d/c2e000408b18ad52c590fbdc4177b548c2ce91.src","preCode":"    public void testImportEntries0() throws IOException, URISyntaxException {\n        Path file = Paths.get(EndnoteImporterTest.class.getResource(\"Endnote.entries.enw\").toURI());\n        List<BibEntry> bibEntries = importer.importDatabase(file, StandardCharsets.UTF_8).getDatabase().getEntries();\n\n        assertEquals(5, bibEntries.size());\n\n        BibEntry first = bibEntries.get(0);\n        assertEquals(StandardEntryType.Misc, first.getType());\n        assertEquals(Optional.of(\"testA0 and testA1\"), first.getField(StandardField.AUTHOR));\n        assertEquals(Optional.of(\"testE0 and testE1\"), first.getField(StandardField.EDITOR));\n        assertEquals(Optional.of(\"testT\"), first.getField(StandardField.TITLE));\n\n        BibEntry second = bibEntries.get(1);\n        assertEquals(StandardEntryType.Misc, second.getType());\n        assertEquals(Optional.of(\"testC\"), second.getField(StandardField.ADDRESS));\n        assertEquals(Optional.of(\"testB2\"), second.getField(StandardField.BOOKTITLE));\n        assertEquals(Optional.of(\"test8\"), second.getField(StandardField.DATE));\n        assertEquals(Optional.of(\"test7\"), second.getField(StandardField.EDITION));\n        assertEquals(Optional.of(\"testJ\"), second.getField(StandardField.JOURNAL));\n        assertEquals(Optional.of(\"testD\"), second.getField(StandardField.YEAR));\n\n        BibEntry third = bibEntries.get(2);\n        assertEquals(StandardEntryType.Article, third.getType());\n        assertEquals(Optional.of(\"testB0\"), third.getField(StandardField.JOURNAL));\n\n        BibEntry fourth = bibEntries.get(3);\n        assertEquals(StandardEntryType.Book, fourth.getType());\n        assertEquals(Optional.of(\"testI0\"), fourth.getField(StandardField.PUBLISHER));\n        assertEquals(Optional.of(\"testB1\"), fourth.getField(StandardField.SERIES));\n\n        BibEntry fifth = bibEntries.get(4);\n        assertEquals(StandardEntryType.MastersThesis, fifth.getType());\n        assertEquals(Optional.of(\"testX\"), fifth.getField(StandardField.ABSTRACT));\n        assertEquals(Optional.of(\"testF\"), fifth.getCiteKeyOptional());\n        assertEquals(Optional.of(\"testR\"), fifth.getField(StandardField.DOI));\n        assertEquals(Optional.of(\"testK\"), fifth.getField(StandardField.KEYWORDS));\n        assertEquals(Optional.of(\"testO1\"), fifth.getField(StandardField.NOTE));\n        assertEquals(Optional.of(\"testN\"), fifth.getField(StandardField.NUMBER));\n        assertEquals(Optional.of(\"testP\"), fifth.getField(StandardField.PAGES));\n        assertEquals(Optional.of(\"testI1\"), fifth.getField(StandardField.SCHOOL));\n        assertEquals(Optional.of(\"testU\"), fifth.getField(StandardField.URL));\n        assertEquals(Optional.of(\"testV\"), fifth.getField(StandardField.VOLUME));\n    }\n","realPath":"src/test/java/org/jabref/logic/importer/fileformat/EndnoteImporterTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":83,"status":"N"}],"commitId":"19393bf1d00e4e0028436dc7b364fe3b7a7bfd81","commitMessage":"@@@Unify month field formatting in test bib files (#5578)\n\n* Unify month field formatting in test bib files (fixes JabRef/jabref#5116)\n\n* Fix month creation. #name# is really used within JabRef to determine a BibTeX string content (and not plain text)\n\n- Fix tests\n- Sort BibEntryTests: default constructor.  keywords.  all others\n- Fix name of \"CanonicalBibEntry\" (from CanonicalBibtexEntry)\n- Revert \"fix jabref format of month\".  this also reverts commit 77c25ca0f1702991493cf37278a4cedad0d984a4.\n- Format some code\n- Add comments\n\n* Merge all BibEntry test classes into one\n","date":"2019-11-14 07:17:00","modifiedFileCount":"13","status":"M","submitter":"Oliver Kopp"},{"authorTime":"2020-04-30 17:10:13","codes":[{"authorDate":"2020-04-30 17:10:13","commitOrder":5,"curCode":"    public void testImportEntriesMedline() throws IOException, URISyntaxException {\n        Path file = Path.of(IsiImporterTest.class.getResource(\"IsiImporterTestMedline.isi\").toURI());\n        List<BibEntry> entries = importer.importDatabase(file, StandardCharsets.UTF_8).getDatabase().getEntries();\n\n        BibEntry first = entries.get(0);\n        BibEntry second = entries.get(1);\n\n        assertEquals(2, entries.size());\n        assertEquals(\n                Optional.of(\"Effects of modafinil on cognitive performance and alertness during sleep deprivation.\"),\n                first.getField(StandardField.TITLE));\n        assertEquals(Optional.of(\"Wesensten, Nancy J.\"), first.getField(StandardField.AUTHOR));\n        assertEquals(Optional.of(\"Curr Pharm Des\"), first.getField(StandardField.JOURNAL));\n        assertEquals(Optional.of(\"2006\"), first.getField(StandardField.YEAR));\n        assertEquals(Optional.empty(), first.getField(StandardField.MONTH));\n        assertEquals(Optional.of(\"12\"), first.getField(StandardField.VOLUME));\n        assertEquals(Optional.of(\"20\"), first.getField(StandardField.NUMBER));\n        assertEquals(Optional.of(\"2457--71\"), first.getField(StandardField.PAGES));\n        assertEquals(StandardEntryType.Article, first.getType());\n        assertEquals(\n                Optional.of(\n                        \"Estrogen therapy selectively enhances prefrontal cognitive processes: a randomized, double-blind, placebo-controlled study with functional magnetic resonance imaging in perimenopausal and recently postmenopausal women.\"),\n                second.getField(StandardField.TITLE));\n        assertEquals(\n                Optional.of(\n                        \"Joffe, Hadine and Hall, Janet E. and Gruber, Staci and Sarmiento, Ingrid A. and Cohen, Lee S. and Yurgelun-Todd, Deborah and Martin, Kathryn A.\"),\n                second.getField(StandardField.AUTHOR));\n        assertEquals(Optional.of(\"2006\"), second.getField(StandardField.YEAR));\n        assertEquals(Optional.of(Month.MAY), second.getMonth());\n        assertEquals(Optional.of(\"13\"), second.getField(StandardField.VOLUME));\n        assertEquals(Optional.of(\"3\"), second.getField(StandardField.NUMBER));\n        assertEquals(Optional.of(\"411--22\"), second.getField(StandardField.PAGES));\n        assertEquals(StandardEntryType.Article, second.getType());\n    }\n","date":"2020-04-30 17:10:13","endLine":339,"groupId":"12882","id":9,"instanceNumber":1,"isCurCommit":1,"methodName":"testImportEntriesMedline","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/f7/1618c1afb13ace88e1ff94d64b79347b6d072c.src","preCode":"    public void testImportEntriesMedline() throws IOException, URISyntaxException {\n        Path file = Paths.get(IsiImporterTest.class.getResource(\"IsiImporterTestMedline.isi\").toURI());\n        List<BibEntry> entries = importer.importDatabase(file, StandardCharsets.UTF_8).getDatabase().getEntries();\n\n        BibEntry first = entries.get(0);\n        BibEntry second = entries.get(1);\n\n        assertEquals(2, entries.size());\n        assertEquals(\n                Optional.of(\"Effects of modafinil on cognitive performance and alertness during sleep deprivation.\"),\n                first.getField(StandardField.TITLE));\n        assertEquals(Optional.of(\"Wesensten, Nancy J.\"), first.getField(StandardField.AUTHOR));\n        assertEquals(Optional.of(\"Curr Pharm Des\"), first.getField(StandardField.JOURNAL));\n        assertEquals(Optional.of(\"2006\"), first.getField(StandardField.YEAR));\n        assertEquals(Optional.empty(), first.getField(StandardField.MONTH));\n        assertEquals(Optional.of(\"12\"), first.getField(StandardField.VOLUME));\n        assertEquals(Optional.of(\"20\"), first.getField(StandardField.NUMBER));\n        assertEquals(Optional.of(\"2457--71\"), first.getField(StandardField.PAGES));\n        assertEquals(StandardEntryType.Article, first.getType());\n        assertEquals(\n                Optional.of(\n                        \"Estrogen therapy selectively enhances prefrontal cognitive processes: a randomized, double-blind, placebo-controlled study with functional magnetic resonance imaging in perimenopausal and recently postmenopausal women.\"),\n                second.getField(StandardField.TITLE));\n        assertEquals(\n                Optional.of(\n                        \"Joffe, Hadine and Hall, Janet E. and Gruber, Staci and Sarmiento, Ingrid A. and Cohen, Lee S. and Yurgelun-Todd, Deborah and Martin, Kathryn A.\"),\n                second.getField(StandardField.AUTHOR));\n        assertEquals(Optional.of(\"2006\"), second.getField(StandardField.YEAR));\n        assertEquals(Optional.of(Month.MAY), second.getMonth());\n        assertEquals(Optional.of(\"13\"), second.getField(StandardField.VOLUME));\n        assertEquals(Optional.of(\"3\"), second.getField(StandardField.NUMBER));\n        assertEquals(Optional.of(\"411--22\"), second.getField(StandardField.PAGES));\n        assertEquals(StandardEntryType.Article, second.getType());\n    }\n","realPath":"src/test/java/org/jabref/logic/importer/fileformat/IsiImporterTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":306,"status":"M"},{"authorDate":"2020-04-30 17:10:13","commitOrder":5,"curCode":"    public void testImportEntries0() throws IOException, URISyntaxException {\n        Path file = Path.of(EndnoteImporterTest.class.getResource(\"Endnote.entries.enw\").toURI());\n        List<BibEntry> bibEntries = importer.importDatabase(file, StandardCharsets.UTF_8).getDatabase().getEntries();\n\n        assertEquals(5, bibEntries.size());\n\n        BibEntry first = bibEntries.get(0);\n        assertEquals(StandardEntryType.Misc, first.getType());\n        assertEquals(Optional.of(\"testA0 and testA1\"), first.getField(StandardField.AUTHOR));\n        assertEquals(Optional.of(\"testE0 and testE1\"), first.getField(StandardField.EDITOR));\n        assertEquals(Optional.of(\"testT\"), first.getField(StandardField.TITLE));\n\n        BibEntry second = bibEntries.get(1);\n        assertEquals(StandardEntryType.Misc, second.getType());\n        assertEquals(Optional.of(\"testC\"), second.getField(StandardField.ADDRESS));\n        assertEquals(Optional.of(\"testB2\"), second.getField(StandardField.BOOKTITLE));\n        assertEquals(Optional.of(\"test8\"), second.getField(StandardField.DATE));\n        assertEquals(Optional.of(\"test7\"), second.getField(StandardField.EDITION));\n        assertEquals(Optional.of(\"testJ\"), second.getField(StandardField.JOURNAL));\n        assertEquals(Optional.of(\"testD\"), second.getField(StandardField.YEAR));\n\n        BibEntry third = bibEntries.get(2);\n        assertEquals(StandardEntryType.Article, third.getType());\n        assertEquals(Optional.of(\"testB0\"), third.getField(StandardField.JOURNAL));\n\n        BibEntry fourth = bibEntries.get(3);\n        assertEquals(StandardEntryType.Book, fourth.getType());\n        assertEquals(Optional.of(\"testI0\"), fourth.getField(StandardField.PUBLISHER));\n        assertEquals(Optional.of(\"testB1\"), fourth.getField(StandardField.SERIES));\n\n        BibEntry fifth = bibEntries.get(4);\n        assertEquals(StandardEntryType.MastersThesis, fifth.getType());\n        assertEquals(Optional.of(\"testX\"), fifth.getField(StandardField.ABSTRACT));\n        assertEquals(Optional.of(\"testF\"), fifth.getCiteKeyOptional());\n        assertEquals(Optional.of(\"testR\"), fifth.getField(StandardField.DOI));\n        assertEquals(Optional.of(\"testK\"), fifth.getField(StandardField.KEYWORDS));\n        assertEquals(Optional.of(\"testO1\"), fifth.getField(StandardField.NOTE));\n        assertEquals(Optional.of(\"testN\"), fifth.getField(StandardField.NUMBER));\n        assertEquals(Optional.of(\"testP\"), fifth.getField(StandardField.PAGES));\n        assertEquals(Optional.of(\"testI1\"), fifth.getField(StandardField.SCHOOL));\n        assertEquals(Optional.of(\"testU\"), fifth.getField(StandardField.URL));\n        assertEquals(Optional.of(\"testV\"), fifth.getField(StandardField.VOLUME));\n    }\n","date":"2020-04-30 17:10:13","endLine":124,"groupId":"2423","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"testImportEntries0","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/78/d2d54795f4b77de1c0247f0ba539e1efd74906.src","preCode":"    public void testImportEntries0() throws IOException, URISyntaxException {\n        Path file = Paths.get(EndnoteImporterTest.class.getResource(\"Endnote.entries.enw\").toURI());\n        List<BibEntry> bibEntries = importer.importDatabase(file, StandardCharsets.UTF_8).getDatabase().getEntries();\n\n        assertEquals(5, bibEntries.size());\n\n        BibEntry first = bibEntries.get(0);\n        assertEquals(StandardEntryType.Misc, first.getType());\n        assertEquals(Optional.of(\"testA0 and testA1\"), first.getField(StandardField.AUTHOR));\n        assertEquals(Optional.of(\"testE0 and testE1\"), first.getField(StandardField.EDITOR));\n        assertEquals(Optional.of(\"testT\"), first.getField(StandardField.TITLE));\n\n        BibEntry second = bibEntries.get(1);\n        assertEquals(StandardEntryType.Misc, second.getType());\n        assertEquals(Optional.of(\"testC\"), second.getField(StandardField.ADDRESS));\n        assertEquals(Optional.of(\"testB2\"), second.getField(StandardField.BOOKTITLE));\n        assertEquals(Optional.of(\"test8\"), second.getField(StandardField.DATE));\n        assertEquals(Optional.of(\"test7\"), second.getField(StandardField.EDITION));\n        assertEquals(Optional.of(\"testJ\"), second.getField(StandardField.JOURNAL));\n        assertEquals(Optional.of(\"testD\"), second.getField(StandardField.YEAR));\n\n        BibEntry third = bibEntries.get(2);\n        assertEquals(StandardEntryType.Article, third.getType());\n        assertEquals(Optional.of(\"testB0\"), third.getField(StandardField.JOURNAL));\n\n        BibEntry fourth = bibEntries.get(3);\n        assertEquals(StandardEntryType.Book, fourth.getType());\n        assertEquals(Optional.of(\"testI0\"), fourth.getField(StandardField.PUBLISHER));\n        assertEquals(Optional.of(\"testB1\"), fourth.getField(StandardField.SERIES));\n\n        BibEntry fifth = bibEntries.get(4);\n        assertEquals(StandardEntryType.MastersThesis, fifth.getType());\n        assertEquals(Optional.of(\"testX\"), fifth.getField(StandardField.ABSTRACT));\n        assertEquals(Optional.of(\"testF\"), fifth.getCiteKeyOptional());\n        assertEquals(Optional.of(\"testR\"), fifth.getField(StandardField.DOI));\n        assertEquals(Optional.of(\"testK\"), fifth.getField(StandardField.KEYWORDS));\n        assertEquals(Optional.of(\"testO1\"), fifth.getField(StandardField.NOTE));\n        assertEquals(Optional.of(\"testN\"), fifth.getField(StandardField.NUMBER));\n        assertEquals(Optional.of(\"testP\"), fifth.getField(StandardField.PAGES));\n        assertEquals(Optional.of(\"testI1\"), fifth.getField(StandardField.SCHOOL));\n        assertEquals(Optional.of(\"testU\"), fifth.getField(StandardField.URL));\n        assertEquals(Optional.of(\"testV\"), fifth.getField(StandardField.VOLUME));\n    }\n","realPath":"src/test/java/org/jabref/logic/importer/fileformat/EndnoteImporterTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":82,"status":"M"}],"commitId":"862078a4db316cfd15bd77be68d3d2b010feab3b","commitMessage":"@@@Fixes #6357: File directory (#6377)\n\n* Fixes #6357: File directory\n\nBug was introduced in https://github.com/JabRef/jabref/commit/1b03f039aa4abf0812a3a8ae0ba248c08fdb39a3.\n\n* Fix tests\n\n* Replace Paths.get\n\n* Fix code style","date":"2020-04-30 17:10:13","modifiedFileCount":"110","status":"M","submitter":"Tobias Diez"},{"authorTime":"2020-09-08 21:34:34","codes":[{"authorDate":"2020-04-30 17:10:13","commitOrder":6,"curCode":"    public void testImportEntriesMedline() throws IOException, URISyntaxException {\n        Path file = Path.of(IsiImporterTest.class.getResource(\"IsiImporterTestMedline.isi\").toURI());\n        List<BibEntry> entries = importer.importDatabase(file, StandardCharsets.UTF_8).getDatabase().getEntries();\n\n        BibEntry first = entries.get(0);\n        BibEntry second = entries.get(1);\n\n        assertEquals(2, entries.size());\n        assertEquals(\n                Optional.of(\"Effects of modafinil on cognitive performance and alertness during sleep deprivation.\"),\n                first.getField(StandardField.TITLE));\n        assertEquals(Optional.of(\"Wesensten, Nancy J.\"), first.getField(StandardField.AUTHOR));\n        assertEquals(Optional.of(\"Curr Pharm Des\"), first.getField(StandardField.JOURNAL));\n        assertEquals(Optional.of(\"2006\"), first.getField(StandardField.YEAR));\n        assertEquals(Optional.empty(), first.getField(StandardField.MONTH));\n        assertEquals(Optional.of(\"12\"), first.getField(StandardField.VOLUME));\n        assertEquals(Optional.of(\"20\"), first.getField(StandardField.NUMBER));\n        assertEquals(Optional.of(\"2457--71\"), first.getField(StandardField.PAGES));\n        assertEquals(StandardEntryType.Article, first.getType());\n        assertEquals(\n                Optional.of(\n                        \"Estrogen therapy selectively enhances prefrontal cognitive processes: a randomized, double-blind, placebo-controlled study with functional magnetic resonance imaging in perimenopausal and recently postmenopausal women.\"),\n                second.getField(StandardField.TITLE));\n        assertEquals(\n                Optional.of(\n                        \"Joffe, Hadine and Hall, Janet E. and Gruber, Staci and Sarmiento, Ingrid A. and Cohen, Lee S. and Yurgelun-Todd, Deborah and Martin, Kathryn A.\"),\n                second.getField(StandardField.AUTHOR));\n        assertEquals(Optional.of(\"2006\"), second.getField(StandardField.YEAR));\n        assertEquals(Optional.of(Month.MAY), second.getMonth());\n        assertEquals(Optional.of(\"13\"), second.getField(StandardField.VOLUME));\n        assertEquals(Optional.of(\"3\"), second.getField(StandardField.NUMBER));\n        assertEquals(Optional.of(\"411--22\"), second.getField(StandardField.PAGES));\n        assertEquals(StandardEntryType.Article, second.getType());\n    }\n","date":"2020-04-30 17:10:13","endLine":339,"groupId":"10215","id":11,"instanceNumber":1,"isCurCommit":1,"methodName":"testImportEntriesMedline","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/f7/1618c1afb13ace88e1ff94d64b79347b6d072c.src","preCode":"    public void testImportEntriesMedline() throws IOException, URISyntaxException {\n        Path file = Path.of(IsiImporterTest.class.getResource(\"IsiImporterTestMedline.isi\").toURI());\n        List<BibEntry> entries = importer.importDatabase(file, StandardCharsets.UTF_8).getDatabase().getEntries();\n\n        BibEntry first = entries.get(0);\n        BibEntry second = entries.get(1);\n\n        assertEquals(2, entries.size());\n        assertEquals(\n                Optional.of(\"Effects of modafinil on cognitive performance and alertness during sleep deprivation.\"),\n                first.getField(StandardField.TITLE));\n        assertEquals(Optional.of(\"Wesensten, Nancy J.\"), first.getField(StandardField.AUTHOR));\n        assertEquals(Optional.of(\"Curr Pharm Des\"), first.getField(StandardField.JOURNAL));\n        assertEquals(Optional.of(\"2006\"), first.getField(StandardField.YEAR));\n        assertEquals(Optional.empty(), first.getField(StandardField.MONTH));\n        assertEquals(Optional.of(\"12\"), first.getField(StandardField.VOLUME));\n        assertEquals(Optional.of(\"20\"), first.getField(StandardField.NUMBER));\n        assertEquals(Optional.of(\"2457--71\"), first.getField(StandardField.PAGES));\n        assertEquals(StandardEntryType.Article, first.getType());\n        assertEquals(\n                Optional.of(\n                        \"Estrogen therapy selectively enhances prefrontal cognitive processes: a randomized, double-blind, placebo-controlled study with functional magnetic resonance imaging in perimenopausal and recently postmenopausal women.\"),\n                second.getField(StandardField.TITLE));\n        assertEquals(\n                Optional.of(\n                        \"Joffe, Hadine and Hall, Janet E. and Gruber, Staci and Sarmiento, Ingrid A. and Cohen, Lee S. and Yurgelun-Todd, Deborah and Martin, Kathryn A.\"),\n                second.getField(StandardField.AUTHOR));\n        assertEquals(Optional.of(\"2006\"), second.getField(StandardField.YEAR));\n        assertEquals(Optional.of(Month.MAY), second.getMonth());\n        assertEquals(Optional.of(\"13\"), second.getField(StandardField.VOLUME));\n        assertEquals(Optional.of(\"3\"), second.getField(StandardField.NUMBER));\n        assertEquals(Optional.of(\"411--22\"), second.getField(StandardField.PAGES));\n        assertEquals(StandardEntryType.Article, second.getType());\n    }\n","realPath":"src/test/java/org/jabref/logic/importer/fileformat/IsiImporterTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":306,"status":"N"},{"authorDate":"2020-09-08 21:34:34","commitOrder":6,"curCode":"    public void testImportEntries0() throws IOException, URISyntaxException {\n        Path file = Path.of(EndnoteImporterTest.class.getResource(\"Endnote.entries.enw\").toURI());\n        List<BibEntry> bibEntries = importer.importDatabase(file, StandardCharsets.UTF_8).getDatabase().getEntries();\n\n        assertEquals(5, bibEntries.size());\n\n        BibEntry first = bibEntries.get(0);\n        assertEquals(StandardEntryType.Misc, first.getType());\n        assertEquals(Optional.of(\"testA0 and testA1\"), first.getField(StandardField.AUTHOR));\n        assertEquals(Optional.of(\"testE0 and testE1\"), first.getField(StandardField.EDITOR));\n        assertEquals(Optional.of(\"testT\"), first.getField(StandardField.TITLE));\n\n        BibEntry second = bibEntries.get(1);\n        assertEquals(StandardEntryType.Misc, second.getType());\n        assertEquals(Optional.of(\"testC\"), second.getField(StandardField.ADDRESS));\n        assertEquals(Optional.of(\"testB2\"), second.getField(StandardField.BOOKTITLE));\n        assertEquals(Optional.of(\"test8\"), second.getField(StandardField.DATE));\n        assertEquals(Optional.of(\"test7\"), second.getField(StandardField.EDITION));\n        assertEquals(Optional.of(\"testJ\"), second.getField(StandardField.JOURNAL));\n        assertEquals(Optional.of(\"testD\"), second.getField(StandardField.YEAR));\n\n        BibEntry third = bibEntries.get(2);\n        assertEquals(StandardEntryType.Article, third.getType());\n        assertEquals(Optional.of(\"testB0\"), third.getField(StandardField.JOURNAL));\n\n        BibEntry fourth = bibEntries.get(3);\n        assertEquals(StandardEntryType.Book, fourth.getType());\n        assertEquals(Optional.of(\"testI0\"), fourth.getField(StandardField.PUBLISHER));\n        assertEquals(Optional.of(\"testB1\"), fourth.getField(StandardField.SERIES));\n\n        BibEntry fifth = bibEntries.get(4);\n        assertEquals(StandardEntryType.MastersThesis, fifth.getType());\n        assertEquals(Optional.of(\"testX\"), fifth.getField(StandardField.ABSTRACT));\n        assertEquals(Optional.of(\"testF\"), fifth.getCitationKey());\n        assertEquals(Optional.of(\"testR\"), fifth.getField(StandardField.DOI));\n        assertEquals(Optional.of(\"testK\"), fifth.getField(StandardField.KEYWORDS));\n        assertEquals(Optional.of(\"testO1\"), fifth.getField(StandardField.NOTE));\n        assertEquals(Optional.of(\"testN\"), fifth.getField(StandardField.NUMBER));\n        assertEquals(Optional.of(\"testP\"), fifth.getField(StandardField.PAGES));\n        assertEquals(Optional.of(\"testI1\"), fifth.getField(StandardField.SCHOOL));\n        assertEquals(Optional.of(\"testU\"), fifth.getField(StandardField.URL));\n        assertEquals(Optional.of(\"testV\"), fifth.getField(StandardField.VOLUME));\n    }\n","date":"2020-09-08 21:34:34","endLine":124,"groupId":"10215","id":12,"instanceNumber":2,"isCurCommit":1,"methodName":"testImportEntries0","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/74/bdbe43ca3c0aa27291b0492e1a3a8a1bc32c11.src","preCode":"    public void testImportEntries0() throws IOException, URISyntaxException {\n        Path file = Path.of(EndnoteImporterTest.class.getResource(\"Endnote.entries.enw\").toURI());\n        List<BibEntry> bibEntries = importer.importDatabase(file, StandardCharsets.UTF_8).getDatabase().getEntries();\n\n        assertEquals(5, bibEntries.size());\n\n        BibEntry first = bibEntries.get(0);\n        assertEquals(StandardEntryType.Misc, first.getType());\n        assertEquals(Optional.of(\"testA0 and testA1\"), first.getField(StandardField.AUTHOR));\n        assertEquals(Optional.of(\"testE0 and testE1\"), first.getField(StandardField.EDITOR));\n        assertEquals(Optional.of(\"testT\"), first.getField(StandardField.TITLE));\n\n        BibEntry second = bibEntries.get(1);\n        assertEquals(StandardEntryType.Misc, second.getType());\n        assertEquals(Optional.of(\"testC\"), second.getField(StandardField.ADDRESS));\n        assertEquals(Optional.of(\"testB2\"), second.getField(StandardField.BOOKTITLE));\n        assertEquals(Optional.of(\"test8\"), second.getField(StandardField.DATE));\n        assertEquals(Optional.of(\"test7\"), second.getField(StandardField.EDITION));\n        assertEquals(Optional.of(\"testJ\"), second.getField(StandardField.JOURNAL));\n        assertEquals(Optional.of(\"testD\"), second.getField(StandardField.YEAR));\n\n        BibEntry third = bibEntries.get(2);\n        assertEquals(StandardEntryType.Article, third.getType());\n        assertEquals(Optional.of(\"testB0\"), third.getField(StandardField.JOURNAL));\n\n        BibEntry fourth = bibEntries.get(3);\n        assertEquals(StandardEntryType.Book, fourth.getType());\n        assertEquals(Optional.of(\"testI0\"), fourth.getField(StandardField.PUBLISHER));\n        assertEquals(Optional.of(\"testB1\"), fourth.getField(StandardField.SERIES));\n\n        BibEntry fifth = bibEntries.get(4);\n        assertEquals(StandardEntryType.MastersThesis, fifth.getType());\n        assertEquals(Optional.of(\"testX\"), fifth.getField(StandardField.ABSTRACT));\n        assertEquals(Optional.of(\"testF\"), fifth.getCiteKeyOptional());\n        assertEquals(Optional.of(\"testR\"), fifth.getField(StandardField.DOI));\n        assertEquals(Optional.of(\"testK\"), fifth.getField(StandardField.KEYWORDS));\n        assertEquals(Optional.of(\"testO1\"), fifth.getField(StandardField.NOTE));\n        assertEquals(Optional.of(\"testN\"), fifth.getField(StandardField.NUMBER));\n        assertEquals(Optional.of(\"testP\"), fifth.getField(StandardField.PAGES));\n        assertEquals(Optional.of(\"testI1\"), fifth.getField(StandardField.SCHOOL));\n        assertEquals(Optional.of(\"testU\"), fifth.getField(StandardField.URL));\n        assertEquals(Optional.of(\"testV\"), fifth.getField(StandardField.VOLUME));\n    }\n","realPath":"src/test/java/org/jabref/logic/importer/fileformat/EndnoteImporterTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":82,"status":"M"}],"commitId":"6dec1747d8a1c89f6c62fc1d1939d88411f17eba","commitMessage":"@@@Complete rebranding of `bibtexkey` as `citationkey` (#6875)\n\n","date":"2020-09-08 21:34:34","modifiedFileCount":"127","status":"M","submitter":"Tobias Diez"}]
