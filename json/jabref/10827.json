[{"authorTime":"2017-02-17 05:41:47","codes":[{"authorDate":"2017-02-17 05:41:47","commitOrder":1,"curCode":"    public void addAndRemoveEntry() {\n        BibEntry entry = new BibEntry();\n        entry.setCiteKey(\"AAA\");\n        database.insertEntry(entry);\n        assertEquals(database.getDuplicationChecker().getNumberOfKeyOccurrences(\"AAA\"), 1);\n        database.removeEntry(entry);\n        assertEquals(database.getDuplicationChecker().getNumberOfKeyOccurrences(\"AAA\"), 0);\n    }\n","date":"2017-02-17 05:41:47","endLine":37,"groupId":"10459","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"addAndRemoveEntry","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/09/6a446c11ba701863cd6ba3cd14f021f108dcfd.src","preCode":"    public void addAndRemoveEntry() {\n        BibEntry entry = new BibEntry();\n        entry.setCiteKey(\"AAA\");\n        database.insertEntry(entry);\n        assertEquals(database.getDuplicationChecker().getNumberOfKeyOccurrences(\"AAA\"), 1);\n        database.removeEntry(entry);\n        assertEquals(database.getDuplicationChecker().getNumberOfKeyOccurrences(\"AAA\"), 0);\n    }\n","realPath":"src/test/java/org/jabref/model/database/DuplicationCheckerTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":30,"status":"B"},{"authorDate":"2017-02-17 05:41:47","commitOrder":1,"curCode":"    public void removeEmptyCiteKey(){\n        BibEntry entry = new BibEntry();\n        entry.setCiteKey(\"AAA\");\n        database.insertEntry(entry);\n        assertEquals(database.getDuplicationChecker().getNumberOfKeyOccurrences(\"AAA\"), 1);\n\n        entry.setCiteKey(\"\");\n        database.removeEntry(entry);\n        assertEquals(database.getDuplicationChecker().getNumberOfKeyOccurrences(\"AAA\"), 0);\n    }\n","date":"2017-02-17 05:41:47","endLine":109,"groupId":"10462","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"removeEmptyCiteKey","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/09/6a446c11ba701863cd6ba3cd14f021f108dcfd.src","preCode":"    public void removeEmptyCiteKey(){\n        BibEntry entry = new BibEntry();\n        entry.setCiteKey(\"AAA\");\n        database.insertEntry(entry);\n        assertEquals(database.getDuplicationChecker().getNumberOfKeyOccurrences(\"AAA\"), 1);\n\n        entry.setCiteKey(\"\");\n        database.removeEntry(entry);\n        assertEquals(database.getDuplicationChecker().getNumberOfKeyOccurrences(\"AAA\"), 0);\n    }\n","realPath":"src/test/java/org/jabref/model/database/DuplicationCheckerTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":100,"status":"B"}],"commitId":"ebbeb1d249edf7134abf92d24c2031ae54d19881","commitMessage":"@@@Merge branch 'net-sf-to-org-jabref'\n","date":"2017-02-17 05:41:47","modifiedFileCount":"1","status":"B","submitter":"Oliver Kopp"},{"authorTime":"2017-07-03 19:20:42","codes":[{"authorDate":"2017-07-03 19:20:42","commitOrder":2,"curCode":"    public void addAndRemoveEntry() {\n        BibEntry entry = new BibEntry();\n        entry.setCiteKey(\"AAA\");\n        database.insertEntry(entry);\n        assertEquals(1, database.getDuplicationChecker().getNumberOfKeyOccurrences(\"AAA\"));\n        database.removeEntry(entry);\n        assertEquals(0, database.getDuplicationChecker().getNumberOfKeyOccurrences(\"AAA\"));\n    }\n","date":"2017-07-03 19:20:42","endLine":37,"groupId":"6920","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"addAndRemoveEntry","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/e9/733e9f94efa0fdf7774acf04a5fe04d234ea5d.src","preCode":"    public void addAndRemoveEntry() {\n        BibEntry entry = new BibEntry();\n        entry.setCiteKey(\"AAA\");\n        database.insertEntry(entry);\n        assertEquals(database.getDuplicationChecker().getNumberOfKeyOccurrences(\"AAA\"), 1);\n        database.removeEntry(entry);\n        assertEquals(database.getDuplicationChecker().getNumberOfKeyOccurrences(\"AAA\"), 0);\n    }\n","realPath":"src/test/java/org/jabref/model/database/DuplicationCheckerTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":30,"status":"M"},{"authorDate":"2017-07-03 19:20:42","commitOrder":2,"curCode":"    public void removeEmptyCiteKey(){\n        BibEntry entry = new BibEntry();\n        entry.setCiteKey(\"AAA\");\n        database.insertEntry(entry);\n        assertEquals(1, database.getDuplicationChecker().getNumberOfKeyOccurrences(\"AAA\"));\n\n        entry.setCiteKey(\"\");\n        database.removeEntry(entry);\n        assertEquals(0, database.getDuplicationChecker().getNumberOfKeyOccurrences(\"AAA\"));\n    }\n","date":"2017-07-03 19:20:42","endLine":109,"groupId":"6924","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"removeEmptyCiteKey","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/e9/733e9f94efa0fdf7774acf04a5fe04d234ea5d.src","preCode":"    public void removeEmptyCiteKey(){\n        BibEntry entry = new BibEntry();\n        entry.setCiteKey(\"AAA\");\n        database.insertEntry(entry);\n        assertEquals(database.getDuplicationChecker().getNumberOfKeyOccurrences(\"AAA\"), 1);\n\n        entry.setCiteKey(\"\");\n        database.removeEntry(entry);\n        assertEquals(database.getDuplicationChecker().getNumberOfKeyOccurrences(\"AAA\"), 0);\n    }\n","realPath":"src/test/java/org/jabref/model/database/DuplicationCheckerTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":100,"status":"M"}],"commitId":"32a1f2283f59eb009e1772aa156d6392d7fd4158","commitMessage":"@@@In JUnit tests.  always state the expected value before the actual (#2959)\n\n","date":"2017-07-03 19:20:42","modifiedFileCount":"9","status":"M","submitter":"Linus Dietz"},{"authorTime":"2020-04-17 22:18:04","codes":[{"authorDate":"2020-04-17 22:18:04","commitOrder":3,"curCode":"    void addAndRemoveEntry() {\n        BibEntry entry = new BibEntry();\n        entry.setCiteKey(\"AAA\");\n        database.insertEntry(entry);\n        assertEquals(1, database.getNumberOfKeyOccurrences(\"AAA\"));\n        database.removeEntry(entry);\n        assertEquals(0, database.getNumberOfKeyOccurrences(\"AAA\"));\n    }\n","date":"2020-04-17 22:18:04","endLine":35,"groupId":"11362","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"addAndRemoveEntry","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/eb/fb036eaafd6bac818196168d6a316cff48cffc.src","preCode":"    public void addAndRemoveEntry() {\n        BibEntry entry = new BibEntry();\n        entry.setCiteKey(\"AAA\");\n        database.insertEntry(entry);\n        assertEquals(1, database.getDuplicationChecker().getNumberOfKeyOccurrences(\"AAA\"));\n        database.removeEntry(entry);\n        assertEquals(0, database.getDuplicationChecker().getNumberOfKeyOccurrences(\"AAA\"));\n    }\n","realPath":"src/test/java/org/jabref/model/database/DuplicationCheckerTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":28,"status":"M"},{"authorDate":"2020-04-17 22:18:04","commitOrder":3,"curCode":"    void removeEmptyCiteKey() {\n        BibEntry entry = new BibEntry();\n        entry.setCiteKey(\"AAA\");\n        database.insertEntry(entry);\n        assertEquals(1, database.getNumberOfKeyOccurrences(\"AAA\"));\n\n        entry.setCiteKey(\"\");\n        database.removeEntry(entry);\n        assertEquals(0, database.getNumberOfKeyOccurrences(\"AAA\"));\n    }\n","date":"2020-04-17 22:18:04","endLine":106,"groupId":"11367","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"removeEmptyCiteKey","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/eb/fb036eaafd6bac818196168d6a316cff48cffc.src","preCode":"    public void removeEmptyCiteKey() {\n        BibEntry entry = new BibEntry();\n        entry.setCiteKey(\"AAA\");\n        database.insertEntry(entry);\n        assertEquals(1, database.getDuplicationChecker().getNumberOfKeyOccurrences(\"AAA\"));\n\n        entry.setCiteKey(\"\");\n        database.removeEntry(entry);\n        assertEquals(0, database.getDuplicationChecker().getNumberOfKeyOccurrences(\"AAA\"));\n    }\n","realPath":"src/test/java/org/jabref/model/database/DuplicationCheckerTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":97,"status":"M"}],"commitId":"accd387297c8044a13b1fed924ab004a5acf0627","commitMessage":"@@@Reduce memory footprint (#6298)\n\n* Improve performance\n\n- Cache latex free field values for display in the main table\n- Only access preferences once for how to display names (instead of for every entry again)\n- Update search async only after 400ms without typing\n\n* Fix tests\n\n* Reduce memory footprint\n\nby removing some caching of ids and keys in databases","date":"2020-04-17 22:18:04","modifiedFileCount":"5","status":"M","submitter":"Tobias Diez"},{"authorTime":"2020-09-08 21:34:34","codes":[{"authorDate":"2020-09-08 21:34:34","commitOrder":4,"curCode":"    void addAndRemoveEntry() {\n        BibEntry entry = new BibEntry();\n        entry.setCitationKey(\"AAA\");\n        database.insertEntry(entry);\n        assertEquals(1, database.getNumberOfCitationKeyOccurrences(\"AAA\"));\n        database.removeEntry(entry);\n        assertEquals(0, database.getNumberOfCitationKeyOccurrences(\"AAA\"));\n    }\n","date":"2020-09-08 21:34:34","endLine":35,"groupId":"10827","id":7,"instanceNumber":1,"isCurCommit":1,"methodName":"addAndRemoveEntry","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/de/ea1130357fd50f0250213c9759a0f981e937d2.src","preCode":"    void addAndRemoveEntry() {\n        BibEntry entry = new BibEntry();\n        entry.setCiteKey(\"AAA\");\n        database.insertEntry(entry);\n        assertEquals(1, database.getNumberOfKeyOccurrences(\"AAA\"));\n        database.removeEntry(entry);\n        assertEquals(0, database.getNumberOfKeyOccurrences(\"AAA\"));\n    }\n","realPath":"src/test/java/org/jabref/model/database/DuplicationCheckerTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":28,"status":"M"},{"authorDate":"2020-09-08 21:34:34","commitOrder":4,"curCode":"    void removeEmptyCiteKey() {\n        BibEntry entry = new BibEntry();\n        entry.setCitationKey(\"AAA\");\n        database.insertEntry(entry);\n        assertEquals(1, database.getNumberOfCitationKeyOccurrences(\"AAA\"));\n\n        entry.setCitationKey(\"\");\n        database.removeEntry(entry);\n        assertEquals(0, database.getNumberOfCitationKeyOccurrences(\"AAA\"));\n    }\n","date":"2020-09-08 21:34:34","endLine":106,"groupId":"10827","id":8,"instanceNumber":2,"isCurCommit":1,"methodName":"removeEmptyCiteKey","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/de/ea1130357fd50f0250213c9759a0f981e937d2.src","preCode":"    void removeEmptyCiteKey() {\n        BibEntry entry = new BibEntry();\n        entry.setCiteKey(\"AAA\");\n        database.insertEntry(entry);\n        assertEquals(1, database.getNumberOfKeyOccurrences(\"AAA\"));\n\n        entry.setCiteKey(\"\");\n        database.removeEntry(entry);\n        assertEquals(0, database.getNumberOfKeyOccurrences(\"AAA\"));\n    }\n","realPath":"src/test/java/org/jabref/model/database/DuplicationCheckerTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":97,"status":"M"}],"commitId":"6dec1747d8a1c89f6c62fc1d1939d88411f17eba","commitMessage":"@@@Complete rebranding of `bibtexkey` as `citationkey` (#6875)\n\n","date":"2020-09-08 21:34:34","modifiedFileCount":"127","status":"M","submitter":"Tobias Diez"}]
