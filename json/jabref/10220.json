[{"authorTime":"2018-02-01 01:07:12","codes":[{"authorDate":"2018-02-01 01:07:12","commitOrder":1,"curCode":"    public void testImportDatabaseIsYearSetCorrectly() throws IOException {\n        ParserResult parserResult = importer.importDatabase(inputMax);\n\n        List<BibEntry> resultList = parserResult.getDatabase().getEntries();\n\n        assertEquals(\"2009\",\n                resultList.get(0).getLatexFreeField(FieldName.YEAR).get());\n    }\n","date":"2018-02-01 01:07:12","endLine":70,"groupId":"2762","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testImportDatabaseIsYearSetCorrectly","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/af/11c939e9f2387e7e8e12525de1d996bfd37e79.src","preCode":"    public void testImportDatabaseIsYearSetCorrectly() throws IOException {\n        ParserResult parserResult = importer.importDatabase(inputMax);\n\n        List<BibEntry> resultList = parserResult.getDatabase().getEntries();\n\n        assertEquals(\"2009\",\n                resultList.get(0).getLatexFreeField(FieldName.YEAR).get());\n    }\n","realPath":"src/test/java/org/jabref/logic/importer/fileformat/MrDLibImporterTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":63,"status":"B"},{"authorDate":"2018-02-01 01:07:12","commitOrder":1,"curCode":"    public void testImportDatabaseIsTitleSetCorrectly() throws IOException {\n        ParserResult parserResult = importer.importDatabase(inputMax);\n\n        List<BibEntry> resultList = parserResult.getDatabase().getEntries();\n\n        assertEquals(\"Gesundheit von Arbeitslosen f������rdern!: ein Handbuch f������r Wissenschaft und Praxis\",\n                resultList.get(0).getLatexFreeField(FieldName.TITLE).get());\n    }\n","date":"2018-02-01 01:07:12","endLine":80,"groupId":"2763","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testImportDatabaseIsTitleSetCorrectly","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/af/11c939e9f2387e7e8e12525de1d996bfd37e79.src","preCode":"    public void testImportDatabaseIsTitleSetCorrectly() throws IOException {\n        ParserResult parserResult = importer.importDatabase(inputMax);\n\n        List<BibEntry> resultList = parserResult.getDatabase().getEntries();\n\n        assertEquals(\"Gesundheit von Arbeitslosen f������rdern!: ein Handbuch f������r Wissenschaft und Praxis\",\n                resultList.get(0).getLatexFreeField(FieldName.TITLE).get());\n    }\n","realPath":"src/test/java/org/jabref/logic/importer/fileformat/MrDLibImporterTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":73,"status":"B"}],"commitId":"608e415b643995d3492ad12c411b101311d67358","commitMessage":"@@@Migrate importer tests to JUnit5 (#3665)\n\n* Migrate paramterized RIS tests to JUnit5\n\n* Extract generic importer testing code to new class\n\n* Switch to JUnit5 assertions in BibEntryAssert\n\n* Remove unused imports\n\n* Use static import for Assertion when possible\n\n* Extract file collection from importer test classes\n\n* Refactor biblioscape importer tests\n\n* Refactor BiblioscapeImporterTestTypes to JUnit5 syntax\n\n* Refactor CopacImporterTestFiles\n\n* Migrate medline importer tests to JUnit5\n\n* Convert BibTeXML importer tests to JUnit5\n\n* Move several non-parametric importer test classes to JUnit5\n\n* Refactor Medline importer tests to JUni5\n\n* Migrate parameterized MODS importer tests to JUnit5\n\n* Migrate MrDLib importer tests to JUnit5\n\n* Migrate MsBibImporter tests to JUnit5\n\n* Migrate OvidImporter tests to JUnit5\n\n* Migrate PdfContentImporter tests to JUnit5\n\n* Migrate PdfXmpImporter tests to JUnit5\n\n* Migrate RepecNepImporter tests to JUnit5\n\n* Migrate RISImporter tests to JUnit5\n\n* Migrate SilverPlatterImporter tests to JUnit5\n\n* Fix imports in SilverPlatterImporterTest\n\n* Fix BibTeXMLImporter tests\n\n* Fix and clarify BibTeXMLImporterTestTypes\n\n* Fix medline tests for malformed files\n\n* Remove unused imports\n\n* Fix broken test files that can be fixed and remove the ones with larger syntactic problem\n\n* Fix MODSImporter tests\n\n* Fix test file for MsBibImporter tests\n\n* Convert Before to BeforeEach in OvidImporterTests\n\n* Check starting line of a file for checking whether it is a PDF\n\n* Migrate additional BibTeXML tests to JUnit5\n\n* Refactor and restructure BibTexParser tests\n\n* Refactor CopacImporter tests\n\n* Refactor BibTeXMLImporter tests\n\n* Refactor EndnoteImporter tests\n\n* Refactor FreeCiteImporter tests\n\n* Refactor InspecImporter tests\n\n* Refactor IsiImporter tests\n\n* Refactor MedlineImporter tests\n\n* Refactor MrDLibImporter tests\n\n* Refactor MsBibImporter tests\n\n* Refactor OvidImporter tests\n\n* Refactor PdfXmpImporter tests\n\n* Refactor RepecNepImporter tests\n\n* Refactor SilverPlatterImporter tests\n\n* Fix a bunch of codacy issues\n","date":"2018-02-01 01:07:12","modifiedFileCount":"32","status":"B","submitter":"J?rg Lenhard"},{"authorTime":"2018-10-26 15:53:07","codes":[{"authorDate":"2018-10-26 15:53:07","commitOrder":2,"curCode":"    public void testImportDatabaseIsYearSetCorrectly() throws IOException {\n        ParserResult parserResult = importer.importDatabase(input);\n\n        List<BibEntry> resultList = parserResult.getDatabase().getEntries();\n\n        assertEquals(\"2006\",\n                resultList.get(0).getLatexFreeField(FieldName.YEAR).get());\n    }\n","date":"2018-10-26 15:53:07","endLine":54,"groupId":"5146","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testImportDatabaseIsYearSetCorrectly","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/5a/f07b4dfa3825f175d58c9af982fe24fa152366.src","preCode":"    public void testImportDatabaseIsYearSetCorrectly() throws IOException {\n        ParserResult parserResult = importer.importDatabase(inputMax);\n\n        List<BibEntry> resultList = parserResult.getDatabase().getEntries();\n\n        assertEquals(\"2009\",\n                resultList.get(0).getLatexFreeField(FieldName.YEAR).get());\n    }\n","realPath":"src/test/java/org/jabref/logic/importer/fileformat/MrDLibImporterTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":47,"status":"M"},{"authorDate":"2018-10-26 15:53:07","commitOrder":2,"curCode":"    public void testImportDatabaseIsTitleSetCorrectly() throws IOException {\n        ParserResult parserResult = importer.importDatabase(input);\n\n        List<BibEntry> resultList = parserResult.getDatabase().getEntries();\n\n        assertEquals(\"The protection of rural lands with the spatial development strategy on the case of Hrastnik commune\",\n                resultList.get(0).getLatexFreeField(FieldName.TITLE).get());\n    }\n","date":"2018-10-26 15:53:07","endLine":64,"groupId":"5150","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testImportDatabaseIsTitleSetCorrectly","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/5a/f07b4dfa3825f175d58c9af982fe24fa152366.src","preCode":"    public void testImportDatabaseIsTitleSetCorrectly() throws IOException {\n        ParserResult parserResult = importer.importDatabase(inputMax);\n\n        List<BibEntry> resultList = parserResult.getDatabase().getEntries();\n\n        assertEquals(\"Gesundheit von Arbeitslosen f������rdern!: ein Handbuch f������r Wissenschaft und Praxis\",\n                resultList.get(0).getLatexFreeField(FieldName.TITLE).get());\n    }\n","realPath":"src/test/java/org/jabref/logic/importer/fileformat/MrDLibImporterTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":57,"status":"M"}],"commitId":"f1c29c2e1ac89a2d7704ed0e4552dd70424174fb","commitMessage":"@@@Integrate mrdlib redesign (#4361)\n\n* Recommendation retrieval from new Mr. DLib\n\nMrDLibImporter and MrDLibFetcher updated to support JSON and new Mr.\nDLib format. Tests updated and passing.\n\n* Create GDPR dialog and update GUI\n\nCreated dialog to ask for consent to sed data to Mr. DLib\nCreated preference setting to keep track of consent\nUpdated the recommendations GUI to use JavaFX\n\n* Privacy dialog text wrapping\n\nChanged privacy dialog text and allowed the text to wrap.\n\n* Created dev switch based on JabRef version\n\n* Adjusted Hyperlink styling\n\n* Removed .bib file included by mistake\n\n* Simplification of Dev switch\n\nReplaced if/else with in-line conditional\n\n* Removed unnecessary setting of html_representation\n\nRecommendation html_representation field no longer set as it is not used\n\n* Removed .orig file mistakenly added\n\n* Fixed Codacy issues and removed abstracts from tests\n\nRemoved html representation test\nRemoved abstracts from tests\n\n* Moved root styling to css file\n\n* Removed Print Stack Trace call\n\n* Replaced UI strings with Localization.lang strings\n\n* everted to EntryEditorPreferences\n\n* Removed reference to Globals in MrDLibFetcher\n\n* Fixed awkward syntax with JSONObject\n\n* Implemented Dialogs\n\nOne to notify the user to restart JabRef after changing preferences\nTwo to show IOExceptions to the user\n\n* Reverting unintended change\n\n* Set Accept button as default button\n\n* Updated CHANGELOG.md\n\n* Fix for broken MrDLibFetcherTest\n\n* Fix unused imports.  refactor event listener to lambda.  call static method through classname\n\n* Fix localization strings\n\nCo-authored-by: halirutan <patrick@halirutan.de>","date":"2018-10-26 15:53:07","modifiedFileCount":"10","status":"M","submitter":"conorfos"},{"authorTime":"2019-08-02 15:20:10","codes":[{"authorDate":"2019-08-02 15:20:10","commitOrder":3,"curCode":"    public void testImportDatabaseIsYearSetCorrectly() throws IOException {\n        ParserResult parserResult = importer.importDatabase(input);\n\n        List<BibEntry> resultList = parserResult.getDatabase().getEntries();\n\n        assertEquals(\"2006\",\n                resultList.get(0).getLatexFreeField(StandardField.YEAR).get());\n    }\n","date":"2019-08-02 15:20:10","endLine":54,"groupId":"10220","id":5,"instanceNumber":1,"isCurCommit":1,"methodName":"testImportDatabaseIsYearSetCorrectly","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/e7/3582c3901a37f3b685c3093ef2a26bd527c6c0.src","preCode":"    public void testImportDatabaseIsYearSetCorrectly() throws IOException {\n        ParserResult parserResult = importer.importDatabase(input);\n\n        List<BibEntry> resultList = parserResult.getDatabase().getEntries();\n\n        assertEquals(\"2006\",\n                resultList.get(0).getLatexFreeField(FieldName.YEAR).get());\n    }\n","realPath":"src/test/java/org/jabref/logic/importer/fileformat/MrDLibImporterTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":47,"status":"M"},{"authorDate":"2019-08-02 15:20:10","commitOrder":3,"curCode":"    public void testImportDatabaseIsTitleSetCorrectly() throws IOException {\n        ParserResult parserResult = importer.importDatabase(input);\n\n        List<BibEntry> resultList = parserResult.getDatabase().getEntries();\n\n        assertEquals(\"The protection of rural lands with the spatial development strategy on the case of Hrastnik commune\",\n                resultList.get(0).getLatexFreeField(StandardField.TITLE).get());\n    }\n","date":"2019-08-02 15:20:10","endLine":64,"groupId":"10220","id":6,"instanceNumber":2,"isCurCommit":1,"methodName":"testImportDatabaseIsTitleSetCorrectly","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/e7/3582c3901a37f3b685c3093ef2a26bd527c6c0.src","preCode":"    public void testImportDatabaseIsTitleSetCorrectly() throws IOException {\n        ParserResult parserResult = importer.importDatabase(input);\n\n        List<BibEntry> resultList = parserResult.getDatabase().getEntries();\n\n        assertEquals(\"The protection of rural lands with the spatial development strategy on the case of Hrastnik commune\",\n                resultList.get(0).getLatexFreeField(FieldName.TITLE).get());\n    }\n","realPath":"src/test/java/org/jabref/logic/importer/fileformat/MrDLibImporterTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":57,"status":"M"}],"commitId":"4b39b78e4afcd6c36b385f5c46f1d9a4eac2e29b","commitMessage":"@@@Move to extended enums for fields and entry types (#5148)\n\n* Introduce interface for fields\n\n* Continue using fields interface instead of strings\n\n* Introduce OrFields class\n\n* Move FieldProperty\n\n* Convert entry types to extended enum\n\n* Start fixing build\n\n* Fix build\n\n* Start fixing tests\n\n* Everything compiles again\n\n* Make model tests pass\n\n* Fix most tests\n\n* Fix build\n\n* Fix a few more tests\n\n* Fix a few more tests\n\n* Fix a few more tests\n\n* Fix a few more tests\n\n* Fix checkstyle issues\n\n* Fix more tests\n\n* Fix more tests\n\n* Disable test that fails on CI\n\n* Disable test that fails on CI\n","date":"2019-08-02 15:20:10","modifiedFileCount":"439","status":"M","submitter":"Tobias Diez"}]
