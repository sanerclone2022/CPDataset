[{"authorTime":"2017-08-10 23:24:26","codes":[{"authorDate":"2017-08-10 23:24:26","commitOrder":5,"curCode":"    public OwnerEditor(String fieldName, JabRefPreferences preferences, AutoCompleteSuggestionProvider<?> suggestionProvider, FieldCheckers fieldCheckers) {\n        this.viewModel = new OwnerEditorViewModel(fieldName, suggestionProvider, preferences, fieldCheckers);\n\n        ControlHelper.loadFXMLForControl(this);\n\n        textArea.textProperty().bindBidirectional(viewModel.textProperty());\n\n        ControlsFxVisualizer validationVisualizer = new ControlsFxVisualizer();\n        validationVisualizer.initVisualization(viewModel.getFieldValidator().getValidationStatus(), textArea);\n    }\n","date":"2017-08-10 23:24:26","endLine":30,"groupId":"3373","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"OwnerEditor","params":"(StringfieldName@JabRefPreferencespreferences@AutoCompleteSuggestionProvider<?>suggestionProvider@FieldCheckersfieldCheckers)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/c1/558ed889938dfe1c21435fa73d2d061a28f3af.src","preCode":"    public OwnerEditor(String fieldName, JabRefPreferences preferences, AutoCompleteSuggestionProvider<?> suggestionProvider, FieldCheckers fieldCheckers) {\n        this.viewModel = new OwnerEditorViewModel(fieldName, suggestionProvider, preferences, fieldCheckers);\n\n        ControlHelper.loadFXMLForControl(this);\n\n        textArea.textProperty().bindBidirectional(viewModel.textProperty());\n\n        ControlsFxVisualizer validationVisualizer = new ControlsFxVisualizer();\n        validationVisualizer.initVisualization(viewModel.getFieldValidator().getValidationStatus(), textArea);\n    }\n","realPath":"src/main/java/org/jabref/gui/fieldeditors/OwnerEditor.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":21,"status":"B"},{"authorDate":"2017-08-10 23:24:26","commitOrder":5,"curCode":"    public IdentifierEditor(String fieldName, TaskExecutor taskExecutor, DialogService dialogService, AutoCompleteSuggestionProvider<?> suggestionProvider, FieldCheckers fieldCheckers) {\n        this.viewModel = new IdentifierEditorViewModel(fieldName, suggestionProvider, taskExecutor, dialogService, fieldCheckers);\n\n        ControlHelper.loadFXMLForControl(this);\n\n        textArea.textProperty().bindBidirectional(viewModel.textProperty());\n\n        fetchInformationByIdentifierButton.setTooltip(\n                new Tooltip(Localization.lang(\"Get BibTeX data from %0\", FieldName.getDisplayName(fieldName))));\n        lookupIdentifierButton.setTooltip(\n                new Tooltip(Localization.lang(\"Look up %0\", FieldName.getDisplayName(fieldName))));\n\n        List<MenuItem> menuItems = new ArrayList<>();\n        if (fieldName.equalsIgnoreCase(FieldName.DOI)) {\n            menuItems.addAll(EditorMenus.getDOIMenu(textArea));\n        }\n        menuItems.addAll(EditorMenus.getDefaultMenu(textArea));\n        textArea.addToContextMenu(menuItems);\n\n        ControlsFxVisualizer validationVisualizer = new ControlsFxVisualizer();\n        validationVisualizer.initVisualization(viewModel.getFieldValidator().getValidationStatus(), textArea);\n    }\n","date":"2017-08-10 23:24:26","endLine":56,"groupId":"3373","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"IdentifierEditor","params":"(StringfieldName@TaskExecutortaskExecutor@DialogServicedialogService@AutoCompleteSuggestionProvider<?>suggestionProvider@FieldCheckersfieldCheckers)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/d9/9389be2e67dab2b3df4354567a12a2abd1548d.src","preCode":"    public IdentifierEditor(String fieldName, TaskExecutor taskExecutor, DialogService dialogService, AutoCompleteSuggestionProvider<?> suggestionProvider, FieldCheckers fieldCheckers) {\n        this.viewModel = new IdentifierEditorViewModel(fieldName, suggestionProvider, taskExecutor, dialogService, fieldCheckers);\n\n        ControlHelper.loadFXMLForControl(this);\n\n        textArea.textProperty().bindBidirectional(viewModel.textProperty());\n\n        fetchInformationByIdentifierButton.setTooltip(\n                new Tooltip(Localization.lang(\"Get BibTeX data from %0\", FieldName.getDisplayName(fieldName))));\n        lookupIdentifierButton.setTooltip(\n                new Tooltip(Localization.lang(\"Look up %0\", FieldName.getDisplayName(fieldName))));\n\n        List<MenuItem> menuItems = new ArrayList<>();\n        if (fieldName.equalsIgnoreCase(FieldName.DOI)) {\n            menuItems.addAll(EditorMenus.getDOIMenu(textArea));\n        }\n        menuItems.addAll(EditorMenus.getDefaultMenu(textArea));\n        textArea.addToContextMenu(menuItems);\n\n        ControlsFxVisualizer validationVisualizer = new ControlsFxVisualizer();\n        validationVisualizer.initVisualization(viewModel.getFieldValidator().getValidationStatus(), textArea);\n    }\n","realPath":"src/main/java/org/jabref/gui/fieldeditors/IdentifierEditor.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":35,"status":"MB"}],"commitId":"f0b90baf80aa9b2bcc48991923637e3ed0861436","commitMessage":"@@@Add validation to entry editor (#3090)\n\n* Add validation to entry editor\n\n* Fix build\n","date":"2017-08-10 23:24:26","modifiedFileCount":"48","status":"M","submitter":"Tobias Diez"},{"authorTime":"2017-08-28 00:10:34","codes":[{"authorDate":"2017-08-28 00:10:34","commitOrder":6,"curCode":"    public OwnerEditor(String fieldName, JabRefPreferences preferences, AutoCompleteSuggestionProvider<?> suggestionProvider, FieldCheckers fieldCheckers) {\n        this.viewModel = new OwnerEditorViewModel(fieldName, suggestionProvider, preferences, fieldCheckers);\n\n        ControlHelper.loadFXMLForControl(this);\n\n        textArea.textProperty().bindBidirectional(viewModel.textProperty());\n\n        new EditorValidator(preferences).configureValidation(viewModel.getFieldValidator().getValidationStatus(), textArea);\n    }\n","date":"2017-08-28 00:10:34","endLine":27,"groupId":"10772","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"OwnerEditor","params":"(StringfieldName@JabRefPreferencespreferences@AutoCompleteSuggestionProvider<?>suggestionProvider@FieldCheckersfieldCheckers)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/0b/05e11ca5f73537a9aa1d652a030952a968c174.src","preCode":"    public OwnerEditor(String fieldName, JabRefPreferences preferences, AutoCompleteSuggestionProvider<?> suggestionProvider, FieldCheckers fieldCheckers) {\n        this.viewModel = new OwnerEditorViewModel(fieldName, suggestionProvider, preferences, fieldCheckers);\n\n        ControlHelper.loadFXMLForControl(this);\n\n        textArea.textProperty().bindBidirectional(viewModel.textProperty());\n\n        ControlsFxVisualizer validationVisualizer = new ControlsFxVisualizer();\n        validationVisualizer.initVisualization(viewModel.getFieldValidator().getValidationStatus(), textArea);\n    }\n","realPath":"src/main/java/org/jabref/gui/fieldeditors/OwnerEditor.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":19,"status":"M"},{"authorDate":"2017-08-28 00:10:34","commitOrder":6,"curCode":"    public IdentifierEditor(String fieldName, TaskExecutor taskExecutor, DialogService dialogService, AutoCompleteSuggestionProvider<?> suggestionProvider, FieldCheckers fieldCheckers, JabRefPreferences preferences) {\n        this.viewModel = new IdentifierEditorViewModel(fieldName, suggestionProvider, taskExecutor, dialogService, fieldCheckers);\n\n        ControlHelper.loadFXMLForControl(this);\n\n        textArea.textProperty().bindBidirectional(viewModel.textProperty());\n\n        fetchInformationByIdentifierButton.setTooltip(\n                new Tooltip(Localization.lang(\"Get BibTeX data from %0\", FieldName.getDisplayName(fieldName))));\n        lookupIdentifierButton.setTooltip(\n                new Tooltip(Localization.lang(\"Look up %0\", FieldName.getDisplayName(fieldName))));\n\n        List<MenuItem> menuItems = new ArrayList<>();\n        if (fieldName.equalsIgnoreCase(FieldName.DOI)) {\n            menuItems.addAll(EditorMenus.getDOIMenu(textArea));\n        }\n        menuItems.addAll(EditorMenus.getDefaultMenu(textArea));\n        textArea.addToContextMenu(menuItems);\n\n        new EditorValidator(preferences).configureValidation(viewModel.getFieldValidator().getValidationStatus(), textArea);\n    }\n","date":"2017-08-28 00:10:34","endLine":54,"groupId":"3373","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"IdentifierEditor","params":"(StringfieldName@TaskExecutortaskExecutor@DialogServicedialogService@AutoCompleteSuggestionProvider<?>suggestionProvider@FieldCheckersfieldCheckers@JabRefPreferencespreferences)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/12/d546554a6eac660a650aa55fcf1826f9b8cdd4.src","preCode":"    public IdentifierEditor(String fieldName, TaskExecutor taskExecutor, DialogService dialogService, AutoCompleteSuggestionProvider<?> suggestionProvider, FieldCheckers fieldCheckers) {\n        this.viewModel = new IdentifierEditorViewModel(fieldName, suggestionProvider, taskExecutor, dialogService, fieldCheckers);\n\n        ControlHelper.loadFXMLForControl(this);\n\n        textArea.textProperty().bindBidirectional(viewModel.textProperty());\n\n        fetchInformationByIdentifierButton.setTooltip(\n                new Tooltip(Localization.lang(\"Get BibTeX data from %0\", FieldName.getDisplayName(fieldName))));\n        lookupIdentifierButton.setTooltip(\n                new Tooltip(Localization.lang(\"Look up %0\", FieldName.getDisplayName(fieldName))));\n\n        List<MenuItem> menuItems = new ArrayList<>();\n        if (fieldName.equalsIgnoreCase(FieldName.DOI)) {\n            menuItems.addAll(EditorMenus.getDOIMenu(textArea));\n        }\n        menuItems.addAll(EditorMenus.getDefaultMenu(textArea));\n        textArea.addToContextMenu(menuItems);\n\n        ControlsFxVisualizer validationVisualizer = new ControlsFxVisualizer();\n        validationVisualizer.initVisualization(viewModel.getFieldValidator().getValidationStatus(), textArea);\n    }\n","realPath":"src/main/java/org/jabref/gui/fieldeditors/IdentifierEditor.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":34,"status":"M"}],"commitId":"6a26798aa88d49e72977cfbc464324baa73c9d0d","commitMessage":"@@@Add preference to disable validation in the entry editor by default (#3154)\n\n* Add preference to disable validation in the entry editor by default\n\n* Fix order of import statements\n\n* Remove Globals dependency from entry editor validation\n","date":"2017-08-28 00:10:34","modifiedFileCount":"9","status":"M","submitter":"J?rg Lenhard"},{"authorTime":"2017-10-25 17:40:33","codes":[{"authorDate":"2017-08-28 00:10:34","commitOrder":7,"curCode":"    public OwnerEditor(String fieldName, JabRefPreferences preferences, AutoCompleteSuggestionProvider<?> suggestionProvider, FieldCheckers fieldCheckers) {\n        this.viewModel = new OwnerEditorViewModel(fieldName, suggestionProvider, preferences, fieldCheckers);\n\n        ControlHelper.loadFXMLForControl(this);\n\n        textArea.textProperty().bindBidirectional(viewModel.textProperty());\n\n        new EditorValidator(preferences).configureValidation(viewModel.getFieldValidator().getValidationStatus(), textArea);\n    }\n","date":"2017-08-28 00:10:34","endLine":27,"groupId":"10772","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"OwnerEditor","params":"(StringfieldName@JabRefPreferencespreferences@AutoCompleteSuggestionProvider<?>suggestionProvider@FieldCheckersfieldCheckers)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/0b/05e11ca5f73537a9aa1d652a030952a968c174.src","preCode":"    public OwnerEditor(String fieldName, JabRefPreferences preferences, AutoCompleteSuggestionProvider<?> suggestionProvider, FieldCheckers fieldCheckers) {\n        this.viewModel = new OwnerEditorViewModel(fieldName, suggestionProvider, preferences, fieldCheckers);\n\n        ControlHelper.loadFXMLForControl(this);\n\n        textArea.textProperty().bindBidirectional(viewModel.textProperty());\n\n        new EditorValidator(preferences).configureValidation(viewModel.getFieldValidator().getValidationStatus(), textArea);\n    }\n","realPath":"src/main/java/org/jabref/gui/fieldeditors/OwnerEditor.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":19,"status":"N"},{"authorDate":"2017-10-25 17:40:33","commitOrder":7,"curCode":"    public IdentifierEditor(String fieldName, TaskExecutor taskExecutor, DialogService dialogService, AutoCompleteSuggestionProvider<?> suggestionProvider, FieldCheckers fieldCheckers, JabRefPreferences preferences) {\n        this.viewModel = new IdentifierEditorViewModel(fieldName, suggestionProvider, taskExecutor, dialogService, fieldCheckers);\n\n        ControlHelper.loadFXMLForControl(this);\n\n        textArea.textProperty().bindBidirectional(viewModel.textProperty());\n\n        fetchInformationByIdentifierButton.setTooltip(\n                new Tooltip(Localization.lang(\"Get BibTeX data from %0\", FieldName.getDisplayName(fieldName))));\n        lookupIdentifierButton.setTooltip(\n                new Tooltip(Localization.lang(\"Look up %0\", FieldName.getDisplayName(fieldName))));\n\n        if (fieldName.equalsIgnoreCase(FieldName.DOI)) {\n            textArea.addToContextMenu(EditorMenus.getDOIMenu(textArea));\n        } else {\n            textArea.addToContextMenu(EditorMenus.getDefaultMenu(textArea));\n        }\n\n        new EditorValidator(preferences).configureValidation(viewModel.getFieldValidator().getValidationStatus(), textArea);\n    }\n","date":"2017-10-25 17:40:33","endLine":50,"groupId":"3373","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"IdentifierEditor","params":"(StringfieldName@TaskExecutortaskExecutor@DialogServicedialogService@AutoCompleteSuggestionProvider<?>suggestionProvider@FieldCheckersfieldCheckers@JabRefPreferencespreferences)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/2e/0bc0a457fddf14ac8270a558e0e6ca526bfc57.src","preCode":"    public IdentifierEditor(String fieldName, TaskExecutor taskExecutor, DialogService dialogService, AutoCompleteSuggestionProvider<?> suggestionProvider, FieldCheckers fieldCheckers, JabRefPreferences preferences) {\n        this.viewModel = new IdentifierEditorViewModel(fieldName, suggestionProvider, taskExecutor, dialogService, fieldCheckers);\n\n        ControlHelper.loadFXMLForControl(this);\n\n        textArea.textProperty().bindBidirectional(viewModel.textProperty());\n\n        fetchInformationByIdentifierButton.setTooltip(\n                new Tooltip(Localization.lang(\"Get BibTeX data from %0\", FieldName.getDisplayName(fieldName))));\n        lookupIdentifierButton.setTooltip(\n                new Tooltip(Localization.lang(\"Look up %0\", FieldName.getDisplayName(fieldName))));\n\n        List<MenuItem> menuItems = new ArrayList<>();\n        if (fieldName.equalsIgnoreCase(FieldName.DOI)) {\n            menuItems.addAll(EditorMenus.getDOIMenu(textArea));\n        }\n        menuItems.addAll(EditorMenus.getDefaultMenu(textArea));\n        textArea.addToContextMenu(menuItems);\n\n        new EditorValidator(preferences).configureValidation(viewModel.getFieldValidator().getValidationStatus(), textArea);\n    }\n","realPath":"src/main/java/org/jabref/gui/fieldeditors/IdentifierEditor.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":31,"status":"M"}],"commitId":"f6651cfc5f88544d2cc9a17bb83de3634ecfebe7","commitMessage":"@@@Used late initialization for context menus (#3340)\n\n* Used late initialization for context menus in the entry editor with Supplier\nUpdated checkstyle in gradle to 8.3 to be able to use {@link ..} in doc comments that refer to classes that would otherwise be \"unused\".\n\n* Annotation formatting and entry into changelog.\n","date":"2017-10-25 17:40:33","modifiedFileCount":"3","status":"M","submitter":"Patrick Scheibe"},{"authorTime":"2018-06-04 05:46:01","codes":[{"authorDate":"2018-06-04 05:46:01","commitOrder":8,"curCode":"    public OwnerEditor(String fieldName, JabRefPreferences preferences, AutoCompleteSuggestionProvider<?> suggestionProvider, FieldCheckers fieldCheckers) {\n        this.viewModel = new OwnerEditorViewModel(fieldName, suggestionProvider, preferences, fieldCheckers);\n\n        ViewLoader.view(this)\n                  .root(this)\n                  .load();\n\n        textArea.textProperty().bindBidirectional(viewModel.textProperty());\n\n        new EditorValidator(preferences).configureValidation(viewModel.getFieldValidator().getValidationStatus(), textArea);\n    }\n","date":"2018-06-04 05:46:01","endLine":30,"groupId":"10772","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"OwnerEditor","params":"(StringfieldName@JabRefPreferencespreferences@AutoCompleteSuggestionProvider<?>suggestionProvider@FieldCheckersfieldCheckers)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/f5/43670f1ae0948aa397ea20838a0c4eea468f5f.src","preCode":"    public OwnerEditor(String fieldName, JabRefPreferences preferences, AutoCompleteSuggestionProvider<?> suggestionProvider, FieldCheckers fieldCheckers) {\n        this.viewModel = new OwnerEditorViewModel(fieldName, suggestionProvider, preferences, fieldCheckers);\n\n        ControlHelper.loadFXMLForControl(this);\n\n        textArea.textProperty().bindBidirectional(viewModel.textProperty());\n\n        new EditorValidator(preferences).configureValidation(viewModel.getFieldValidator().getValidationStatus(), textArea);\n    }\n","realPath":"src/main/java/org/jabref/gui/fieldeditors/OwnerEditor.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":20,"status":"M"},{"authorDate":"2018-06-04 05:46:01","commitOrder":8,"curCode":"    public IdentifierEditor(String fieldName, TaskExecutor taskExecutor, DialogService dialogService, AutoCompleteSuggestionProvider<?> suggestionProvider, FieldCheckers fieldCheckers, JabRefPreferences preferences) {\n        this.viewModel = new IdentifierEditorViewModel(fieldName, suggestionProvider, taskExecutor, dialogService, fieldCheckers);\n\n        ViewLoader.view(this)\n                  .root(this)\n                  .load();\n\n        textArea.textProperty().bindBidirectional(viewModel.textProperty());\n\n        fetchInformationByIdentifierButton.setTooltip(\n                new Tooltip(Localization.lang(\"Get BibTeX data from %0\", FieldName.getDisplayName(fieldName))));\n        lookupIdentifierButton.setTooltip(\n                new Tooltip(Localization.lang(\"Look up %0\", FieldName.getDisplayName(fieldName))));\n\n        if (fieldName.equalsIgnoreCase(FieldName.DOI)) {\n            textArea.addToContextMenu(EditorMenus.getDOIMenu(textArea));\n        } else {\n            textArea.addToContextMenu(EditorMenus.getDefaultMenu(textArea));\n        }\n\n        new EditorValidator(preferences).configureValidation(viewModel.getFieldValidator().getValidationStatus(), textArea);\n    }\n","date":"2018-06-04 05:46:01","endLine":53,"groupId":"3373","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"IdentifierEditor","params":"(StringfieldName@TaskExecutortaskExecutor@DialogServicedialogService@AutoCompleteSuggestionProvider<?>suggestionProvider@FieldCheckersfieldCheckers@JabRefPreferencespreferences)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/1c/671091b2f713fe74dd1b078f84680554337f11.src","preCode":"    public IdentifierEditor(String fieldName, TaskExecutor taskExecutor, DialogService dialogService, AutoCompleteSuggestionProvider<?> suggestionProvider, FieldCheckers fieldCheckers, JabRefPreferences preferences) {\n        this.viewModel = new IdentifierEditorViewModel(fieldName, suggestionProvider, taskExecutor, dialogService, fieldCheckers);\n\n        ControlHelper.loadFXMLForControl(this);\n\n        textArea.textProperty().bindBidirectional(viewModel.textProperty());\n\n        fetchInformationByIdentifierButton.setTooltip(\n                new Tooltip(Localization.lang(\"Get BibTeX data from %0\", FieldName.getDisplayName(fieldName))));\n        lookupIdentifierButton.setTooltip(\n                new Tooltip(Localization.lang(\"Look up %0\", FieldName.getDisplayName(fieldName))));\n\n        if (fieldName.equalsIgnoreCase(FieldName.DOI)) {\n            textArea.addToContextMenu(EditorMenus.getDOIMenu(textArea));\n        } else {\n            textArea.addToContextMenu(EditorMenus.getDefaultMenu(textArea));\n        }\n\n        new EditorValidator(preferences).configureValidation(viewModel.getFieldValidator().getValidationStatus(), textArea);\n    }\n","realPath":"src/main/java/org/jabref/gui/fieldeditors/IdentifierEditor.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":32,"status":"M"}],"commitId":"a989aa42246c4dcf6eadc147d2f612de44a07b94","commitMessage":"@@@Merge remote-tracking branch 'origin/maintable-beta'\n\n# Conflicts:\n#\tsrc/main/java/org/jabref/gui/exporter/ExportAction.java\n#\tsrc/main/java/org/jabref/gui/exporter/ExportToClipboardAction.java\n#\tsrc/main/java/org/jabref/gui/exporter/SaveDatabaseAction.java\n#\tsrc/main/java/org/jabref/gui/importer/ImportFormats.java\n#\tsrc/main/java/org/jabref/gui/importer/actions/OpenDatabaseAction.java\n#\tsrc/main/java/org/jabref/gui/openoffice/StyleSelectDialog.java\n#\tsrc/main/java/org/jabref/gui/preftabs/PreferencesDialog.java\n#\tsrc/main/java/org/jabref/gui/protectedterms/NewProtectedTermsFileDialog.java\n#\tsrc/main/java/org/jabref/gui/shared/ConnectToSharedDatabaseDialog.java\n","date":"2018-06-04 05:46:01","modifiedFileCount":"316","status":"M","submitter":"Oliver Kopp"},{"authorTime":"2019-08-02 15:20:10","codes":[{"authorDate":"2019-08-02 15:20:10","commitOrder":9,"curCode":"    public OwnerEditor(Field field, JabRefPreferences preferences, AutoCompleteSuggestionProvider<?> suggestionProvider, FieldCheckers fieldCheckers) {\n        this.viewModel = new OwnerEditorViewModel(field, suggestionProvider, preferences, fieldCheckers);\n\n        ViewLoader.view(this)\n                  .root(this)\n                  .load();\n\n        textArea.textProperty().bindBidirectional(viewModel.textProperty());\n\n        new EditorValidator(preferences).configureValidation(viewModel.getFieldValidator().getValidationStatus(), textArea);\n    }\n","date":"2019-08-02 15:20:10","endLine":31,"groupId":"10772","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"OwnerEditor","params":"(Fieldfield@JabRefPreferencespreferences@AutoCompleteSuggestionProvider<?>suggestionProvider@FieldCheckersfieldCheckers)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/0f/3660e6e35e4cea2bab9697edf41ea41d05317e.src","preCode":"    public OwnerEditor(String fieldName, JabRefPreferences preferences, AutoCompleteSuggestionProvider<?> suggestionProvider, FieldCheckers fieldCheckers) {\n        this.viewModel = new OwnerEditorViewModel(fieldName, suggestionProvider, preferences, fieldCheckers);\n\n        ViewLoader.view(this)\n                  .root(this)\n                  .load();\n\n        textArea.textProperty().bindBidirectional(viewModel.textProperty());\n\n        new EditorValidator(preferences).configureValidation(viewModel.getFieldValidator().getValidationStatus(), textArea);\n    }\n","realPath":"src/main/java/org/jabref/gui/fieldeditors/OwnerEditor.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":21,"status":"M"},{"authorDate":"2019-08-02 15:20:10","commitOrder":9,"curCode":"    public IdentifierEditor(Field field, TaskExecutor taskExecutor, DialogService dialogService, AutoCompleteSuggestionProvider<?> suggestionProvider, FieldCheckers fieldCheckers, JabRefPreferences preferences) {\n        this.viewModel = new IdentifierEditorViewModel(field, suggestionProvider, taskExecutor, dialogService, fieldCheckers);\n\n        ViewLoader.view(this)\n                  .root(this)\n                  .load();\n\n        textArea.textProperty().bindBidirectional(viewModel.textProperty());\n\n        fetchInformationByIdentifierButton.setTooltip(\n                new Tooltip(Localization.lang(\"Get BibTeX data from %0\", field.getDisplayName())));\n        lookupIdentifierButton.setTooltip(\n                new Tooltip(Localization.lang(\"Look up %0\", field.getDisplayName())));\n\n        if (field.equals(StandardField.DOI)) {\n            textArea.addToContextMenu(EditorMenus.getDOIMenu(textArea));\n        } else {\n            textArea.addToContextMenu(EditorMenus.getDefaultMenu(textArea));\n        }\n\n        new EditorValidator(preferences).configureValidation(viewModel.getFieldValidator().getValidationStatus(), textArea);\n    }\n","date":"2019-08-02 15:20:10","endLine":54,"groupId":"4335","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"IdentifierEditor","params":"(Fieldfield@TaskExecutortaskExecutor@DialogServicedialogService@AutoCompleteSuggestionProvider<?>suggestionProvider@FieldCheckersfieldCheckers@JabRefPreferencespreferences)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/9a/3262dee69c6395f55b1fe45ff1f4e9072ae1a2.src","preCode":"    public IdentifierEditor(String fieldName, TaskExecutor taskExecutor, DialogService dialogService, AutoCompleteSuggestionProvider<?> suggestionProvider, FieldCheckers fieldCheckers, JabRefPreferences preferences) {\n        this.viewModel = new IdentifierEditorViewModel(fieldName, suggestionProvider, taskExecutor, dialogService, fieldCheckers);\n\n        ViewLoader.view(this)\n                  .root(this)\n                  .load();\n\n        textArea.textProperty().bindBidirectional(viewModel.textProperty());\n\n        fetchInformationByIdentifierButton.setTooltip(\n                new Tooltip(Localization.lang(\"Get BibTeX data from %0\", FieldName.getDisplayName(fieldName))));\n        lookupIdentifierButton.setTooltip(\n                new Tooltip(Localization.lang(\"Look up %0\", FieldName.getDisplayName(fieldName))));\n\n        if (fieldName.equalsIgnoreCase(FieldName.DOI)) {\n            textArea.addToContextMenu(EditorMenus.getDOIMenu(textArea));\n        } else {\n            textArea.addToContextMenu(EditorMenus.getDefaultMenu(textArea));\n        }\n\n        new EditorValidator(preferences).configureValidation(viewModel.getFieldValidator().getValidationStatus(), textArea);\n    }\n","realPath":"src/main/java/org/jabref/gui/fieldeditors/IdentifierEditor.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":33,"status":"M"}],"commitId":"4b39b78e4afcd6c36b385f5c46f1d9a4eac2e29b","commitMessage":"@@@Move to extended enums for fields and entry types (#5148)\n\n* Introduce interface for fields\n\n* Continue using fields interface instead of strings\n\n* Introduce OrFields class\n\n* Move FieldProperty\n\n* Convert entry types to extended enum\n\n* Start fixing build\n\n* Fix build\n\n* Start fixing tests\n\n* Everything compiles again\n\n* Make model tests pass\n\n* Fix most tests\n\n* Fix build\n\n* Fix a few more tests\n\n* Fix a few more tests\n\n* Fix a few more tests\n\n* Fix a few more tests\n\n* Fix checkstyle issues\n\n* Fix more tests\n\n* Fix more tests\n\n* Disable test that fails on CI\n\n* Disable test that fails on CI\n","date":"2019-08-02 15:20:10","modifiedFileCount":"439","status":"M","submitter":"Tobias Diez"},{"authorTime":"2020-04-20 04:47:09","codes":[{"authorDate":"2020-04-20 04:47:09","commitOrder":10,"curCode":"    public OwnerEditor(Field field, JabRefPreferences preferences, SuggestionProvider<?> suggestionProvider, FieldCheckers fieldCheckers) {\n        this.viewModel = new OwnerEditorViewModel(field, suggestionProvider, preferences, fieldCheckers);\n\n        ViewLoader.view(this)\n                  .root(this)\n                  .load();\n\n        textArea.textProperty().bindBidirectional(viewModel.textProperty());\n\n        new EditorValidator(preferences).configureValidation(viewModel.getFieldValidator().getValidationStatus(), textArea);\n    }\n","date":"2020-04-20 04:47:09","endLine":31,"groupId":"10772","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"OwnerEditor","params":"(Fieldfield@JabRefPreferencespreferences@SuggestionProvider<?>suggestionProvider@FieldCheckersfieldCheckers)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/1a/40dbb6e0897c9f498193d7dce72583e4efa8c6.src","preCode":"    public OwnerEditor(Field field, JabRefPreferences preferences, AutoCompleteSuggestionProvider<?> suggestionProvider, FieldCheckers fieldCheckers) {\n        this.viewModel = new OwnerEditorViewModel(field, suggestionProvider, preferences, fieldCheckers);\n\n        ViewLoader.view(this)\n                  .root(this)\n                  .load();\n\n        textArea.textProperty().bindBidirectional(viewModel.textProperty());\n\n        new EditorValidator(preferences).configureValidation(viewModel.getFieldValidator().getValidationStatus(), textArea);\n    }\n","realPath":"src/main/java/org/jabref/gui/fieldeditors/OwnerEditor.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":21,"status":"M"},{"authorDate":"2020-04-20 04:47:09","commitOrder":10,"curCode":"    public IdentifierEditor(Field field, TaskExecutor taskExecutor, DialogService dialogService, SuggestionProvider<?> suggestionProvider, FieldCheckers fieldCheckers, JabRefPreferences preferences) {\n        this.viewModel = new IdentifierEditorViewModel(field, suggestionProvider, taskExecutor, dialogService, fieldCheckers);\n\n        ViewLoader.view(this)\n                  .root(this)\n                  .load();\n\n        textArea.textProperty().bindBidirectional(viewModel.textProperty());\n\n        fetchInformationByIdentifierButton.setTooltip(\n                new Tooltip(Localization.lang(\"Get BibTeX data from %0\", field.getDisplayName())));\n        lookupIdentifierButton.setTooltip(\n                new Tooltip(Localization.lang(\"Look up %0\", field.getDisplayName())));\n\n        if (field.equals(StandardField.DOI)) {\n            textArea.addToContextMenu(EditorMenus.getDOIMenu(textArea));\n        } else {\n            textArea.addToContextMenu(EditorMenus.getDefaultMenu(textArea));\n        }\n\n        new EditorValidator(preferences).configureValidation(viewModel.getFieldValidator().getValidationStatus(), textArea);\n    }\n","date":"2020-04-20 04:47:09","endLine":54,"groupId":"4335","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"IdentifierEditor","params":"(Fieldfield@TaskExecutortaskExecutor@DialogServicedialogService@SuggestionProvider<?>suggestionProvider@FieldCheckersfieldCheckers@JabRefPreferencespreferences)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/cb/c572f521696f7e5b660bc0d8728eff1395e316.src","preCode":"    public IdentifierEditor(Field field, TaskExecutor taskExecutor, DialogService dialogService, AutoCompleteSuggestionProvider<?> suggestionProvider, FieldCheckers fieldCheckers, JabRefPreferences preferences) {\n        this.viewModel = new IdentifierEditorViewModel(field, suggestionProvider, taskExecutor, dialogService, fieldCheckers);\n\n        ViewLoader.view(this)\n                  .root(this)\n                  .load();\n\n        textArea.textProperty().bindBidirectional(viewModel.textProperty());\n\n        fetchInformationByIdentifierButton.setTooltip(\n                new Tooltip(Localization.lang(\"Get BibTeX data from %0\", field.getDisplayName())));\n        lookupIdentifierButton.setTooltip(\n                new Tooltip(Localization.lang(\"Look up %0\", field.getDisplayName())));\n\n        if (field.equals(StandardField.DOI)) {\n            textArea.addToContextMenu(EditorMenus.getDOIMenu(textArea));\n        } else {\n            textArea.addToContextMenu(EditorMenus.getDefaultMenu(textArea));\n        }\n\n        new EditorValidator(preferences).configureValidation(viewModel.getFieldValidator().getValidationStatus(), textArea);\n    }\n","realPath":"src/main/java/org/jabref/gui/fieldeditors/IdentifierEditor.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":33,"status":"M"}],"commitId":"5217bade557aa51bf3031f3764adca197beb34bf","commitMessage":"@@@Remove cache of auto completion results (#6310)\n\n","date":"2020-04-20 04:47:09","modifiedFileCount":"48","status":"M","submitter":"Tobias Diez"},{"authorTime":"2020-10-07 03:42:11","codes":[{"authorDate":"2020-04-20 04:47:09","commitOrder":11,"curCode":"    public OwnerEditor(Field field, JabRefPreferences preferences, SuggestionProvider<?> suggestionProvider, FieldCheckers fieldCheckers) {\n        this.viewModel = new OwnerEditorViewModel(field, suggestionProvider, preferences, fieldCheckers);\n\n        ViewLoader.view(this)\n                  .root(this)\n                  .load();\n\n        textArea.textProperty().bindBidirectional(viewModel.textProperty());\n\n        new EditorValidator(preferences).configureValidation(viewModel.getFieldValidator().getValidationStatus(), textArea);\n    }\n","date":"2020-04-20 04:47:09","endLine":31,"groupId":"10772","id":13,"instanceNumber":1,"isCurCommit":0,"methodName":"OwnerEditor","params":"(Fieldfield@JabRefPreferencespreferences@SuggestionProvider<?>suggestionProvider@FieldCheckersfieldCheckers)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/1a/40dbb6e0897c9f498193d7dce72583e4efa8c6.src","preCode":"    public OwnerEditor(Field field, JabRefPreferences preferences, SuggestionProvider<?> suggestionProvider, FieldCheckers fieldCheckers) {\n        this.viewModel = new OwnerEditorViewModel(field, suggestionProvider, preferences, fieldCheckers);\n\n        ViewLoader.view(this)\n                  .root(this)\n                  .load();\n\n        textArea.textProperty().bindBidirectional(viewModel.textProperty());\n\n        new EditorValidator(preferences).configureValidation(viewModel.getFieldValidator().getValidationStatus(), textArea);\n    }\n","realPath":"src/main/java/org/jabref/gui/fieldeditors/OwnerEditor.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":21,"status":"N"},{"authorDate":"2020-10-07 03:42:11","commitOrder":11,"curCode":"    public IdentifierEditor(Field field, TaskExecutor taskExecutor, DialogService dialogService, SuggestionProvider<?> suggestionProvider, FieldCheckers fieldCheckers, JabRefPreferences preferences) {\n        this.viewModel = new IdentifierEditorViewModel(field, suggestionProvider, taskExecutor, dialogService, fieldCheckers);\n\n        ViewLoader.view(this)\n                  .root(this)\n                  .load();\n\n        textArea.textProperty().bindBidirectional(viewModel.textProperty());\n\n        fetchInformationByIdentifierButton.setTooltip(\n                new Tooltip(Localization.lang(\"Get bibliographic data from %0\", field.getDisplayName())));\n        lookupIdentifierButton.setTooltip(\n                new Tooltip(Localization.lang(\"Look up %0\", field.getDisplayName())));\n\n        if (field.equals(StandardField.DOI)) {\n            textArea.addToContextMenu(EditorMenus.getDOIMenu(textArea));\n        } else {\n            textArea.addToContextMenu(EditorMenus.getDefaultMenu(textArea));\n        }\n\n        new EditorValidator(preferences).configureValidation(viewModel.getFieldValidator().getValidationStatus(), textArea);\n    }\n","date":"2020-10-07 03:42:11","endLine":54,"groupId":"4335","id":14,"instanceNumber":2,"isCurCommit":0,"methodName":"IdentifierEditor","params":"(Fieldfield@TaskExecutortaskExecutor@DialogServicedialogService@SuggestionProvider<?>suggestionProvider@FieldCheckersfieldCheckers@JabRefPreferencespreferences)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/2d/2eb46be71b53c05898fefb76943614cddaf78f.src","preCode":"    public IdentifierEditor(Field field, TaskExecutor taskExecutor, DialogService dialogService, SuggestionProvider<?> suggestionProvider, FieldCheckers fieldCheckers, JabRefPreferences preferences) {\n        this.viewModel = new IdentifierEditorViewModel(field, suggestionProvider, taskExecutor, dialogService, fieldCheckers);\n\n        ViewLoader.view(this)\n                  .root(this)\n                  .load();\n\n        textArea.textProperty().bindBidirectional(viewModel.textProperty());\n\n        fetchInformationByIdentifierButton.setTooltip(\n                new Tooltip(Localization.lang(\"Get BibTeX data from %0\", field.getDisplayName())));\n        lookupIdentifierButton.setTooltip(\n                new Tooltip(Localization.lang(\"Look up %0\", field.getDisplayName())));\n\n        if (field.equals(StandardField.DOI)) {\n            textArea.addToContextMenu(EditorMenus.getDOIMenu(textArea));\n        } else {\n            textArea.addToContextMenu(EditorMenus.getDefaultMenu(textArea));\n        }\n\n        new EditorValidator(preferences).configureValidation(viewModel.getFieldValidator().getValidationStatus(), textArea);\n    }\n","realPath":"src/main/java/org/jabref/gui/fieldeditors/IdentifierEditor.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":33,"status":"M"}],"commitId":"d7e39f3da168596f125860a77854de1f1d7d7b3f","commitMessage":"@@@Removing \"BibTeX\" when not specific to BibTeX (#6983)\n\n* BibTeX field => following field\n\n* Update Changelog\n\n* Adding issue number to changelog\n\n* Get BibTeX data ==> Get bibliographic data\n\n* \"Get BibTeX data\" ==> \"Get bibliographic data\"\n\n* Localization EN\n\n* Localizing strings in New group UI\n\n* Adding localization strings to EN file\n\n* Localization formatting\n\n* Tidying up","date":"2020-10-07 03:42:11","modifiedFileCount":"2","status":"M","submitter":"MLEP"},{"authorTime":"2020-12-15 04:28:26","codes":[{"authorDate":"2020-12-15 04:28:26","commitOrder":12,"curCode":"    public OwnerEditor(Field field,\n                       PreferencesService preferences,\n                       SuggestionProvider<?> suggestionProvider,\n                       FieldCheckers fieldCheckers) {\n        this.viewModel = new OwnerEditorViewModel(field, suggestionProvider, preferences, fieldCheckers);\n\n        ViewLoader.view(this)\n                  .root(this)\n                  .load();\n\n        textArea.textProperty().bindBidirectional(viewModel.textProperty());\n\n        new EditorValidator(preferences).configureValidation(viewModel.getFieldValidator().getValidationStatus(), textArea);\n    }\n","date":"2020-12-15 04:28:26","endLine":33,"groupId":"10772","id":15,"instanceNumber":1,"isCurCommit":0,"methodName":"OwnerEditor","params":"(Fieldfield@PreferencesServicepreferences@SuggestionProvider<?>suggestionProvider@FieldCheckersfieldCheckers)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/51/c2489f9350fd6db6993e658e5c06d35f71c0ee.src","preCode":"    public OwnerEditor(Field field, JabRefPreferences preferences, SuggestionProvider<?> suggestionProvider, FieldCheckers fieldCheckers) {\n        this.viewModel = new OwnerEditorViewModel(field, suggestionProvider, preferences, fieldCheckers);\n\n        ViewLoader.view(this)\n                  .root(this)\n                  .load();\n\n        textArea.textProperty().bindBidirectional(viewModel.textProperty());\n\n        new EditorValidator(preferences).configureValidation(viewModel.getFieldValidator().getValidationStatus(), textArea);\n    }\n","realPath":"src/main/java/org/jabref/gui/fieldeditors/OwnerEditor.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":20,"status":"M"},{"authorDate":"2020-12-15 04:28:26","commitOrder":12,"curCode":"    public IdentifierEditor(Field field,\n                            TaskExecutor taskExecutor,\n                            DialogService dialogService,\n                            SuggestionProvider<?> suggestionProvider,\n                            FieldCheckers fieldCheckers,\n                            PreferencesService preferences) {\n        this.viewModel = new IdentifierEditorViewModel(field, suggestionProvider, taskExecutor, dialogService, fieldCheckers);\n\n        ViewLoader.view(this)\n                  .root(this)\n                  .load();\n\n        textArea.textProperty().bindBidirectional(viewModel.textProperty());\n\n        fetchInformationByIdentifierButton.setTooltip(\n                new Tooltip(Localization.lang(\"Get bibliographic data from %0\", field.getDisplayName())));\n        lookupIdentifierButton.setTooltip(\n                new Tooltip(Localization.lang(\"Look up %0\", field.getDisplayName())));\n\n        if (field.equals(StandardField.DOI)) {\n            textArea.addToContextMenu(EditorMenus.getDOIMenu(textArea));\n        } else {\n            textArea.addToContextMenu(EditorMenus.getDefaultMenu(textArea));\n        }\n\n        new EditorValidator(preferences).configureValidation(viewModel.getFieldValidator().getValidationStatus(), textArea);\n    }\n","date":"2020-12-15 04:28:26","endLine":58,"groupId":"4335","id":16,"instanceNumber":2,"isCurCommit":0,"methodName":"IdentifierEditor","params":"(Fieldfield@TaskExecutortaskExecutor@DialogServicedialogService@SuggestionProvider<?>suggestionProvider@FieldCheckersfieldCheckers@PreferencesServicepreferences)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/f6/59ffb57479fda0b8a4e26878ad332a403e554b.src","preCode":"    public IdentifierEditor(Field field, TaskExecutor taskExecutor, DialogService dialogService, SuggestionProvider<?> suggestionProvider, FieldCheckers fieldCheckers, JabRefPreferences preferences) {\n        this.viewModel = new IdentifierEditorViewModel(field, suggestionProvider, taskExecutor, dialogService, fieldCheckers);\n\n        ViewLoader.view(this)\n                  .root(this)\n                  .load();\n\n        textArea.textProperty().bindBidirectional(viewModel.textProperty());\n\n        fetchInformationByIdentifierButton.setTooltip(\n                new Tooltip(Localization.lang(\"Get bibliographic data from %0\", field.getDisplayName())));\n        lookupIdentifierButton.setTooltip(\n                new Tooltip(Localization.lang(\"Look up %0\", field.getDisplayName())));\n\n        if (field.equals(StandardField.DOI)) {\n            textArea.addToContextMenu(EditorMenus.getDOIMenu(textArea));\n        } else {\n            textArea.addToContextMenu(EditorMenus.getDefaultMenu(textArea));\n        }\n\n        new EditorValidator(preferences).configureValidation(viewModel.getFieldValidator().getValidationStatus(), textArea);\n    }\n","realPath":"src/main/java/org/jabref/gui/fieldeditors/IdentifierEditor.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":32,"status":"M"}],"commitId":"c0153bd501754d220e34f45ca689851f8ffd5fbd","commitMessage":"@@@Extraction of Globals.prefs.put and .get (#7121)\n\nCo-authored-by: Siedlerchr <siedlerkiller@gmail.com>\nCo-authored-by: Tobias Diez <tobiasdiez@gmx.de>","date":"2020-12-15 04:28:26","modifiedFileCount":"132","status":"M","submitter":"Carl Christian Snethlage"},{"authorTime":"2021-01-04 17:43:15","codes":[{"authorDate":"2021-01-04 17:43:15","commitOrder":13,"curCode":"    public OwnerEditor(Field field,\n                       PreferencesService preferences,\n                       SuggestionProvider<?> suggestionProvider,\n                       FieldCheckers fieldCheckers) {\n        this.viewModel = new OwnerEditorViewModel(field, suggestionProvider, preferences, fieldCheckers);\n\n        ViewLoader.view(this)\n                  .root(this)\n                  .load();\n\n        textArea.textProperty().bindBidirectional(viewModel.textProperty());\n\n        textArea.initContextMenu(EditorMenus.getNameMenu(textArea));\n\n        new EditorValidator(preferences).configureValidation(viewModel.getFieldValidator().getValidationStatus(), textArea);\n    }\n","date":"2021-01-04 17:43:15","endLine":36,"groupId":"0","id":17,"instanceNumber":1,"isCurCommit":1,"methodName":"OwnerEditor","params":"(Fieldfield@PreferencesServicepreferences@SuggestionProvider<?>suggestionProvider@FieldCheckersfieldCheckers)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/2c/9ba1d1dfb687ca8da0fd712759b11424d978c0.src","preCode":"    public OwnerEditor(Field field,\n                       PreferencesService preferences,\n                       SuggestionProvider<?> suggestionProvider,\n                       FieldCheckers fieldCheckers) {\n        this.viewModel = new OwnerEditorViewModel(field, suggestionProvider, preferences, fieldCheckers);\n\n        ViewLoader.view(this)\n                  .root(this)\n                  .load();\n\n        textArea.textProperty().bindBidirectional(viewModel.textProperty());\n\n        new EditorValidator(preferences).configureValidation(viewModel.getFieldValidator().getValidationStatus(), textArea);\n    }\n","realPath":"src/main/java/org/jabref/gui/fieldeditors/OwnerEditor.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":21,"status":"M"},{"authorDate":"2021-01-04 17:43:15","commitOrder":13,"curCode":"    public IdentifierEditor(Field field,\n                            TaskExecutor taskExecutor,\n                            DialogService dialogService,\n                            SuggestionProvider<?> suggestionProvider,\n                            FieldCheckers fieldCheckers,\n                            PreferencesService preferences) {\n        this.viewModel = new IdentifierEditorViewModel(field, suggestionProvider, taskExecutor, dialogService, fieldCheckers);\n\n        ViewLoader.view(this)\n                  .root(this)\n                  .load();\n\n        textArea.textProperty().bindBidirectional(viewModel.textProperty());\n\n        fetchInformationByIdentifierButton.setTooltip(\n                new Tooltip(Localization.lang(\"Get bibliographic data from %0\", field.getDisplayName())));\n        lookupIdentifierButton.setTooltip(\n                new Tooltip(Localization.lang(\"Look up %0\", field.getDisplayName())));\n\n        if (field.equals(StandardField.DOI)) {\n            textArea.initContextMenu(EditorMenus.getDOIMenu(textArea));\n        } else {\n            textArea.initContextMenu(new DefaultMenu(textArea));\n        }\n\n        new EditorValidator(preferences).configureValidation(viewModel.getFieldValidator().getValidationStatus(), textArea);\n    }\n","date":"2021-01-04 17:43:15","endLine":59,"groupId":"4335","id":18,"instanceNumber":2,"isCurCommit":0,"methodName":"IdentifierEditor","params":"(Fieldfield@TaskExecutortaskExecutor@DialogServicedialogService@SuggestionProvider<?>suggestionProvider@FieldCheckersfieldCheckers@PreferencesServicepreferences)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/5d/e21fb6f043a2ef140a18d08f9685ea2f12674a.src","preCode":"    public IdentifierEditor(Field field,\n                            TaskExecutor taskExecutor,\n                            DialogService dialogService,\n                            SuggestionProvider<?> suggestionProvider,\n                            FieldCheckers fieldCheckers,\n                            PreferencesService preferences) {\n        this.viewModel = new IdentifierEditorViewModel(field, suggestionProvider, taskExecutor, dialogService, fieldCheckers);\n\n        ViewLoader.view(this)\n                  .root(this)\n                  .load();\n\n        textArea.textProperty().bindBidirectional(viewModel.textProperty());\n\n        fetchInformationByIdentifierButton.setTooltip(\n                new Tooltip(Localization.lang(\"Get bibliographic data from %0\", field.getDisplayName())));\n        lookupIdentifierButton.setTooltip(\n                new Tooltip(Localization.lang(\"Look up %0\", field.getDisplayName())));\n\n        if (field.equals(StandardField.DOI)) {\n            textArea.addToContextMenu(EditorMenus.getDOIMenu(textArea));\n        } else {\n            textArea.addToContextMenu(EditorMenus.getDefaultMenu(textArea));\n        }\n\n        new EditorValidator(preferences).configureValidation(viewModel.getFieldValidator().getValidationStatus(), textArea);\n    }\n","realPath":"src/main/java/org/jabref/gui/fieldeditors/IdentifierEditor.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":33,"status":"M"}],"commitId":"0f3b01696a610f4b0b319d6253c7f71ed35843c8","commitMessage":"@@@Added eye candy in entry editor context menus (#7268)\n\n* Added eye candy in entry editor context menus\n\n* Refactor ProtectedTermsMenu\n\n* Rafactored small cleanups\n\n* CHANGELOG.md and l10n","date":"2021-01-04 17:43:15","modifiedFileCount":"18","status":"M","submitter":"Carl Christian Snethlage"},{"authorTime":"2021-03-08 16:47:01","codes":[{"authorDate":"2021-01-04 17:43:15","commitOrder":14,"curCode":"    public OwnerEditor(Field field,\n                       PreferencesService preferences,\n                       SuggestionProvider<?> suggestionProvider,\n                       FieldCheckers fieldCheckers) {\n        this.viewModel = new OwnerEditorViewModel(field, suggestionProvider, preferences, fieldCheckers);\n\n        ViewLoader.view(this)\n                  .root(this)\n                  .load();\n\n        textArea.textProperty().bindBidirectional(viewModel.textProperty());\n\n        textArea.initContextMenu(EditorMenus.getNameMenu(textArea));\n\n        new EditorValidator(preferences).configureValidation(viewModel.getFieldValidator().getValidationStatus(), textArea);\n    }\n","date":"2021-01-04 17:43:15","endLine":36,"groupId":"10880","id":19,"instanceNumber":1,"isCurCommit":1,"methodName":"OwnerEditor","params":"(Fieldfield@PreferencesServicepreferences@SuggestionProvider<?>suggestionProvider@FieldCheckersfieldCheckers)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/2c/9ba1d1dfb687ca8da0fd712759b11424d978c0.src","preCode":"    public OwnerEditor(Field field,\n                       PreferencesService preferences,\n                       SuggestionProvider<?> suggestionProvider,\n                       FieldCheckers fieldCheckers) {\n        this.viewModel = new OwnerEditorViewModel(field, suggestionProvider, preferences, fieldCheckers);\n\n        ViewLoader.view(this)\n                  .root(this)\n                  .load();\n\n        textArea.textProperty().bindBidirectional(viewModel.textProperty());\n\n        textArea.initContextMenu(EditorMenus.getNameMenu(textArea));\n\n        new EditorValidator(preferences).configureValidation(viewModel.getFieldValidator().getValidationStatus(), textArea);\n    }\n","realPath":"src/main/java/org/jabref/gui/fieldeditors/OwnerEditor.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":21,"status":"N"},{"authorDate":"2021-03-08 16:47:01","commitOrder":14,"curCode":"    public IdentifierEditor(Field field,\n                            TaskExecutor taskExecutor,\n                            DialogService dialogService,\n                            SuggestionProvider<?> suggestionProvider,\n                            FieldCheckers fieldCheckers,\n                            PreferencesService preferences) {\n        this.viewModel = new IdentifierEditorViewModel(field, suggestionProvider, taskExecutor, dialogService, fieldCheckers, preferences);\n\n        ViewLoader.view(this)\n                  .root(this)\n                  .load();\n\n        textArea.textProperty().bindBidirectional(viewModel.textProperty());\n\n        fetchInformationByIdentifierButton.setTooltip(\n                new Tooltip(Localization.lang(\"Get bibliographic data from %0\", field.getDisplayName())));\n        lookupIdentifierButton.setTooltip(\n                new Tooltip(Localization.lang(\"Look up %0\", field.getDisplayName())));\n\n        if (field.equals(StandardField.DOI)) {\n\n            textArea.initContextMenu(EditorMenus.getDOIMenu(textArea));\n        } else {\n            textArea.initContextMenu(new DefaultMenu(textArea));\n        }\n\n        new EditorValidator(preferences).configureValidation(viewModel.getFieldValidator().getValidationStatus(), textArea);\n    }\n","date":"2021-03-08 16:47:01","endLine":60,"groupId":"10880","id":20,"instanceNumber":2,"isCurCommit":1,"methodName":"IdentifierEditor","params":"(Fieldfield@TaskExecutortaskExecutor@DialogServicedialogService@SuggestionProvider<?>suggestionProvider@FieldCheckersfieldCheckers@PreferencesServicepreferences)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/56/7d643bdfdf9766c75c9d97be83c2adad40dc0f.src","preCode":"    public IdentifierEditor(Field field,\n                            TaskExecutor taskExecutor,\n                            DialogService dialogService,\n                            SuggestionProvider<?> suggestionProvider,\n                            FieldCheckers fieldCheckers,\n                            PreferencesService preferences) {\n        this.viewModel = new IdentifierEditorViewModel(field, suggestionProvider, taskExecutor, dialogService, fieldCheckers);\n\n        ViewLoader.view(this)\n                  .root(this)\n                  .load();\n\n        textArea.textProperty().bindBidirectional(viewModel.textProperty());\n\n        fetchInformationByIdentifierButton.setTooltip(\n                new Tooltip(Localization.lang(\"Get bibliographic data from %0\", field.getDisplayName())));\n        lookupIdentifierButton.setTooltip(\n                new Tooltip(Localization.lang(\"Look up %0\", field.getDisplayName())));\n\n        if (field.equals(StandardField.DOI)) {\n            textArea.initContextMenu(EditorMenus.getDOIMenu(textArea));\n        } else {\n            textArea.initContextMenu(new DefaultMenu(textArea));\n        }\n\n        new EditorValidator(preferences).configureValidation(viewModel.getFieldValidator().getValidationStatus(), textArea);\n    }\n","realPath":"src/main/java/org/jabref/gui/fieldeditors/IdentifierEditor.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":33,"status":"M"}],"commitId":"2c7715cf0476d504475cde7b5e23c4bff677036b","commitMessage":"@@@Added preference option to use custom URL for DOI generation (#7480)\n\n","date":"2021-03-08 16:47:01","modifiedFileCount":"8","status":"M","submitter":"BJaroszkowski"}]
