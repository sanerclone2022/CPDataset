[{"authorTime":"2018-06-04 05:46:01","codes":[{"authorDate":"2018-06-04 05:46:01","commitOrder":3,"curCode":"    public void exportSingleEntry() throws Exception {\n        Path file = testFolder.newFile().toPath();\n\n        BibEntry entry = new BibEntry();\n        entry.setField(\"author\", \"Alan Turing\");\n\n        exporter.export(databaseContext, file, encoding, Collections.singletonList(entry));\n\n        List<String> lines = Files.readAllLines(file);\n        assertEquals(15, lines.size());\n        assertEquals(\"<rdf:li>Alan Turing</rdf:li>\", lines.get(4).trim());\n    }\n","date":"2018-06-04 05:46:01","endLine":62,"groupId":"12546","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"exportSingleEntry","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/6f/c1542c9be7983492c0ca63f1839d834f8dcc64.src","preCode":"    public void exportSingleEntry() throws Exception {\n        Path file = testFolder.newFile().toPath();\n\n        BibEntry entry = new BibEntry();\n        entry.setField(\"author\", \"Alan Turing\");\n\n        exporter.export(databaseContext, file, encoding, Collections.singletonList(entry));\n\n        List<String> lines = Files.readAllLines(file);\n        assertEquals(15, lines.size());\n        assertEquals(\"<rdf:li>Alan Turing</rdf:li>\", lines.get(4).trim());\n    }\n","realPath":"src/test/java/org/jabref/logic/exporter/XmpExporterTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":51,"status":"MB"},{"authorDate":"2018-06-04 05:46:01","commitOrder":3,"curCode":"    public void writeMultipleEntriesInASingleFile() throws Exception {\n        Path file = testFolder.newFile().toPath();\n\n        BibEntry entryTuring = new BibEntry();\n        entryTuring.setField(\"author\", \"Alan Turing\");\n\n        BibEntry entryArmbrust = new BibEntry();\n        entryArmbrust.setField(\"author\", \"Michael Armbrust\");\n        entryArmbrust.setCiteKey(\"Armbrust2010\");\n\n        exporter.export(databaseContext, file, encoding, Arrays.asList(entryTuring, entryArmbrust));\n\n        List<String> lines = Files.readAllLines(file);\n        assertEquals(33, lines.size());\n        assertEquals(\"<rdf:li>Alan Turing</rdf:li>\", lines.get(4).trim());\n        assertEquals(\"<rdf:li>Michael Armbrust</rdf:li>\", lines.get(17).trim());\n    }\n","date":"2018-06-04 05:46:01","endLine":81,"groupId":"12547","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"writeMultipleEntriesInASingleFile","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/6f/c1542c9be7983492c0ca63f1839d834f8dcc64.src","preCode":"    public void writeMultipleEntriesInASingleFile() throws Exception {\n        Path file = testFolder.newFile().toPath();\n\n        BibEntry entryTuring = new BibEntry();\n        entryTuring.setField(\"author\", \"Alan Turing\");\n\n        BibEntry entryArmbrust = new BibEntry();\n        entryArmbrust.setField(\"author\", \"Michael Armbrust\");\n        entryArmbrust.setCiteKey(\"Armbrust2010\");\n\n        exporter.export(databaseContext, file, encoding, Arrays.asList(entryTuring, entryArmbrust));\n\n        List<String> lines = Files.readAllLines(file);\n        assertEquals(33, lines.size());\n        assertEquals(\"<rdf:li>Alan Turing</rdf:li>\", lines.get(4).trim());\n        assertEquals(\"<rdf:li>Michael Armbrust</rdf:li>\", lines.get(17).trim());\n    }\n","realPath":"src/test/java/org/jabref/logic/exporter/XmpExporterTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":65,"status":"B"}],"commitId":"a989aa42246c4dcf6eadc147d2f612de44a07b94","commitMessage":"@@@Merge remote-tracking branch 'origin/maintable-beta'\n\n# Conflicts:\n#\tsrc/main/java/org/jabref/gui/exporter/ExportAction.java\n#\tsrc/main/java/org/jabref/gui/exporter/ExportToClipboardAction.java\n#\tsrc/main/java/org/jabref/gui/exporter/SaveDatabaseAction.java\n#\tsrc/main/java/org/jabref/gui/importer/ImportFormats.java\n#\tsrc/main/java/org/jabref/gui/importer/actions/OpenDatabaseAction.java\n#\tsrc/main/java/org/jabref/gui/openoffice/StyleSelectDialog.java\n#\tsrc/main/java/org/jabref/gui/preftabs/PreferencesDialog.java\n#\tsrc/main/java/org/jabref/gui/protectedterms/NewProtectedTermsFileDialog.java\n#\tsrc/main/java/org/jabref/gui/shared/ConnectToSharedDatabaseDialog.java\n","date":"2018-06-04 05:46:01","modifiedFileCount":"316","status":"M","submitter":"Oliver Kopp"},{"authorTime":"2018-08-16 15:17:32","codes":[{"authorDate":"2018-08-16 15:17:32","commitOrder":4,"curCode":"    public void exportSingleEntry(@TempDirectory.TempDir Path testFolder) throws Exception {\n        Path file = testFolder.resolve(\"ThisIsARandomlyNamedFile\");\n        Files.createFile(file);\n\n        BibEntry entry = new BibEntry();\n        entry.setField(\"author\", \"Alan Turing\");\n\n        exporter.export(databaseContext, file, encoding, Collections.singletonList(entry));\n\n        List<String> lines = Files.readAllLines(file);\n        assertEquals(15, lines.size());\n        assertEquals(\"<rdf:li>Alan Turing</rdf:li>\", lines.get(4).trim());\n    }\n","date":"2018-08-16 15:17:32","endLine":62,"groupId":"12546","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"exportSingleEntry","params":"(@TempDirectory.TempDirPathtestFolder)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/3e/a662508e688c81f08dc2c23302b3c4c7ffa7ec.src","preCode":"    public void exportSingleEntry() throws Exception {\n        Path file = testFolder.newFile().toPath();\n\n        BibEntry entry = new BibEntry();\n        entry.setField(\"author\", \"Alan Turing\");\n\n        exporter.export(databaseContext, file, encoding, Collections.singletonList(entry));\n\n        List<String> lines = Files.readAllLines(file);\n        assertEquals(15, lines.size());\n        assertEquals(\"<rdf:li>Alan Turing</rdf:li>\", lines.get(4).trim());\n    }\n","realPath":"src/test/java/org/jabref/logic/exporter/XmpExporterTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":50,"status":"M"},{"authorDate":"2018-08-16 15:17:32","commitOrder":4,"curCode":"    public void writeMultipleEntriesInASingleFile(@TempDirectory.TempDir Path testFolder) throws Exception {\n        Path file = testFolder.resolve(\"ThisIsARandomlyNamedFile\");\n        Files.createFile(file);\n\n        BibEntry entryTuring = new BibEntry();\n        entryTuring.setField(\"author\", \"Alan Turing\");\n\n        BibEntry entryArmbrust = new BibEntry();\n        entryArmbrust.setField(\"author\", \"Michael Armbrust\");\n        entryArmbrust.setCiteKey(\"Armbrust2010\");\n\n        exporter.export(databaseContext, file, encoding, Arrays.asList(entryTuring, entryArmbrust));\n\n        List<String> lines = Files.readAllLines(file);\n        assertEquals(33, lines.size());\n        assertEquals(\"<rdf:li>Alan Turing</rdf:li>\", lines.get(4).trim());\n        assertEquals(\"<rdf:li>Michael Armbrust</rdf:li>\", lines.get(17).trim());\n    }\n","date":"2018-08-16 15:17:32","endLine":82,"groupId":"12547","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"writeMultipleEntriesInASingleFile","params":"(@TempDirectory.TempDirPathtestFolder)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/3e/a662508e688c81f08dc2c23302b3c4c7ffa7ec.src","preCode":"    public void writeMultipleEntriesInASingleFile() throws Exception {\n        Path file = testFolder.newFile().toPath();\n\n        BibEntry entryTuring = new BibEntry();\n        entryTuring.setField(\"author\", \"Alan Turing\");\n\n        BibEntry entryArmbrust = new BibEntry();\n        entryArmbrust.setField(\"author\", \"Michael Armbrust\");\n        entryArmbrust.setCiteKey(\"Armbrust2010\");\n\n        exporter.export(databaseContext, file, encoding, Arrays.asList(entryTuring, entryArmbrust));\n\n        List<String> lines = Files.readAllLines(file);\n        assertEquals(33, lines.size());\n        assertEquals(\"<rdf:li>Alan Turing</rdf:li>\", lines.get(4).trim());\n        assertEquals(\"<rdf:li>Michael Armbrust</rdf:li>\", lines.get(17).trim());\n    }\n","realPath":"src/test/java/org/jabref/logic/exporter/XmpExporterTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":65,"status":"M"}],"commitId":"a880addc0b9a45ad4461cc46ed261ea7df9c812a","commitMessage":"@@@Fix for issue 3959: migrate all tests to JUnit 5 (#4260)\n\n* Update migrate from JUnit 4 to JUnit 5\n\n* Update migrate from JUnit 4 to JUnit 5\n\n* Trying to change git accounts on my laptop\n\n* Trying to change git accounts on my laptop\n\n* Trying to change git accounts on my laptop\n\n* Using static assert methods.\n\n* Migrate from JUnit 4 to JUnit 5\n\n*AuthorListParameterTest.java\n\n* Migrate from JUnit 4 to JUnit 5\n\n*XmpUtilWriterTest.java\n\n* Migrate from JUnit 4 to JUnit 5\n\n*XmpUtilReaderTest.java\n\n* Migrate from JUnit 4 to JUnit 5\n\n*SearchQueryHighlightObservableTest.java\n\n    -did not use MockitoExtension.class as its official version has not been released yet.\n\n* Migrate from JUnit 4 to JUnit 5\n\n*CitationEntryTest.java\n\n* Migrate from JUnit 4 to JUnit 5\n\n*RTFCharsTest.java\n\n* Migrate from JUnit 4 to JUnit 5\n\n*ProtectedTermsLoaderTest.java\n\n    -When running tests.  outputs in command line are different. I don't know if this change is correct.\n\n* Trying to change to a new branch.\n\n* commit_test\n\n* delete my meaningless txt\n\n* Migrate from JUnit 4 to JUnit 5\n\n*AuthorAndToSemicolonReplacerTest.java\n\n* Migrate from JUnit 4 to JUnit 5\n\n*FileDialogConfigurationTest.java\n\n* Migrate from JUnit 4 to JUnit 5\n\n*IntegrityCheckTest.java\n\n* Migrate from JUnit 4 to JUnit 5\n\n*ModsExportFormatTest.java\n\n* Migrate from JUnit 4 to JUnit 5\n\n*AutoSetFileLinksUtilTest.java\n\n* Migrate from JUnit 4 to JUnit 5\n\n*MsBibExportFormatTest.java\n\n* Migrate from JUnit 4 to JUnit 5\n\n*CsvExportFormatTest.java\n\n* Migrate from JUnit 4 to JUnit 5\n\n*HtmlExportFormatTest.java\n\n* Migrate from JUnit 4 to JUnit 5\n\n*HtmlExportFormatTest.java\n\n* Migrate from JUnit 4 to JUnit 5\n\n*RenamePdfCleanupTest.java\n\n* Migrate from JUnit 4 to JUnit 5\n\n*ProtectedTermsListTest.java\n\n* Migrate from JUnit 4 to JUnit 5\n\n*MoveFilesCleanupTest.java\n\n* Migrate from JUnit 4 to JUnit 5\n\n*ImporterTest.java\n\n* Migrate from JUnit 4 to JUnit 5\n\n    *ExporterTest.java\n\n* Try to trigger the Travis CI build.\n\n* Try to trigger the Travis CI build.\n\n* Migrate from JUnit 4 to JUnit 5\n\n* Try to migrate from JUnit 4 to JUnit 5\n    *BibTeXMLExporterTestFiles.java\n        *Test.  not finished\n\n* Roll back to earlier version.\n    *BibTeXMLExporterTestFiles.java\n    *CleanupWorkerTest.java\n\n* Migrate from JUnit 4 to JUnit 5\n    *ImportFormatReaderIntegrationTest.java\n\n* Migrate from JUnit 4 to JUnit 5\n    *MimeTypeDetectorTest.java\n\n* failed to modify CleanupWorkerTest\n\n* failed to modify cleanupWorkTest\n\n* change cleanupWorkerTest to initial\n\n* ***DatabaseTest***\nMigrate from JUnit 4 to JUnit 5\n    *DBMSProcessorTest.java\n        *Wait for the Travis CI\n\n* ***DatabaseTest***\nMigrate from JUnit 4 to JUnit 5\n    *DBMSProcessorTest.java\n        *Wait for the Travis CI\n\n* Migrate from JUnit 4 to JUnit 5\n    *BibTeXMLExporterTestFiles.java\n    *MSBibExportFormatTestFiles.java\n    *All the GUI tests\n\n* Migrate from JUnit 4 to JUnit 5\n    *CleanupWorkerTest.java\n\n    *It seems that worker doesn't work in cleanupRenamePdfRenamesRelativeFile() and cleanupRelativePathsConvertAbsoluteToRelativePath()\n\n* Migrate JUnit 4 to JUnit 5.\n    *AuthorListParameterTest.java\n        -Follow up tp the newest.\n\n* Migrate JUnit 4 to JUnit 5.\n    *CleanupWorkerTest.java\n        -Delete my sout.\n\n* Migrate JUnit 4 to JUnit 5.\n    *EntryTypesTest.java\n        -Just some method name changes.\n\n* Fix part of CleanupWorkerTest.\n    -cleanupRelativePathsConvertAbsoluteToRelativePath() test passed.\n    -The cleanupRenamePdfRenamesRelativeFile() test still failed.\n\n* Migrate and sync.\n    *CiteKeyBasedFileFinderTest.java\n\n* Migrate.\n    *FileUtilTest.java\nPartly migrate.\n    *ModsExportFormatTestFiles.java\n\n* Fix CleanupWorkerTest.java\n\n* Fix .travis.yml\n\n* Remove unnecessary @Rule.\n    *IntegrityCheckTest.java\n\n* AuxParserTest.java\n\n* BibtexParserTest.java\n\n* EntryComparatorTest.java\n\n* Migrate JUnit 4 to JUnit 5 -------by 1160300229\n\n* Migrate. Some tasks by my team members.\n    *LinkedFileViewModelTest.java\n    *RecursiveTreeItemTest.java\n    *UndoTest.java\n    *EntryComparatorTest.java\n    *MakeLabelWithDatabaseTest.java\n    *MakeLabelWithoutDatabaseTest.java\n    *CleanupUrlFormatterTest.java\n    *BibtexParserTest.java\n    *MedlinePlainImporterTest.java\n    *SilverPlatterImporterTest.java\n    *EntryLinkCheckerTest.java\n    *LocalizationKeyTest.java\n    *JabRefPreferencesTest.java\n\n* Fix 1160300302's error.\n\n* Remove unnecessary \"public\".\n    *AuxParserTest.java\n\n* fix architecture test by removing check for public make some classes default visibility level\n\n* Fix \"cannot find files\" problem in JUnit 4.\n\n* Migrate to JUnit 5.\n    *BibTeXMLExporterTestFiles.java\n    *ModsExportFormatTestFiles.java\n    *MSBibExportFormatTestFiles.java\n\n* Change the slash direction.\n    *BibTeXMLExporterTestFiles.java\n    *ModsExportFormatTestFiles.java\n    *MSBibExportFormatTestFiles.java\n\n* fix resolving of paths in msbibexporterpath update junit and correct resource dirs in gradle\n\n* Fix the path issue in\n    *BibTeXMLExporterTestFiles.java\n    *ModsExportFormatTestFiles.java\n\n* Disable the failing exporter tests and change the build.gradle\n\n* Fix the parent folder issue by make every path to their child once.\n    -You can see in the code. :)\n\n* Fix some minor issues.\n    -Use the NIO methods in MoveFilesCleanupTest.java\n\n    -Use toAbsolutePath() method in RenamePdfCleanupTest.java\n\n    -Rename \"tempFilename\" to \"tempFilePath\" in BibTeXMLExporterTestFiles.java\n\n* include main/java in resources as well convert legalcy file methods to nio\n","date":"2018-08-16 15:17:32","modifiedFileCount":"59","status":"M","submitter":"Yichen Sun"},{"authorTime":"2018-08-30 00:00:58","codes":[{"authorDate":"2018-08-30 00:00:58","commitOrder":5,"curCode":"    public void exportSingleEntry(@TempDirectory.TempDir Path testFolder) throws Exception {\n        Path file = testFolder.resolve(\"ThisIsARandomlyNamedFile\");\n        Files.createFile(file);\n\n        BibEntry entry = new BibEntry();\n        entry.setField(\"author\", \"Alan Turing\");\n\n        exporter.export(databaseContext, file, encoding, Collections.singletonList(entry));\n        String actual = Files.readAllLines(file).stream().collect(Collectors.joining(\"\\n\")); \r\n        String expected = \"  <rdf:RDF xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\">\\n\" +\n                          \"    <rdf:Description xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\" rdf:about=\\\"\\\">\\n\" +\n                          \"      <dc:creator>\\n\" +\n                          \"        <rdf:Seq>\\n\" +\n                          \"          <rdf:li>Alan Turing</rdf:li>\\n\" +\n                          \"        </rdf:Seq>\\n\" +\n                          \"      </dc:creator>\\n\" +\n                          \"      <dc:format>application/pdf</dc:format>\\n\" +\n                          \"      <dc:type>\\n\" +\n                          \"        <rdf:Bag>\\n\" +\n                          \"          <rdf:li>Misc</rdf:li>\\n\" +\n                          \"        </rdf:Bag>\\n\" +\n                          \"      </dc:type>\\n\" +\n                          \"    </rdf:Description>\\n\" +\n                          \"  </rdf:RDF>\";\n        assertEquals(expected, actual);\n    }\n","date":"2018-08-30 00:00:58","endLine":77,"groupId":"8895","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"exportSingleEntry","params":"(@TempDirectory.TempDirPathtestFolder)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/41/74683a69e0c48edce04822a5eb010b65668b68.src","preCode":"    public void exportSingleEntry(@TempDirectory.TempDir Path testFolder) throws Exception {\n        Path file = testFolder.resolve(\"ThisIsARandomlyNamedFile\");\n        Files.createFile(file);\n\n        BibEntry entry = new BibEntry();\n        entry.setField(\"author\", \"Alan Turing\");\n\n        exporter.export(databaseContext, file, encoding, Collections.singletonList(entry));\n\n        List<String> lines = Files.readAllLines(file);\n        assertEquals(15, lines.size());\n        assertEquals(\"<rdf:li>Alan Turing</rdf:li>\", lines.get(4).trim());\n    }\n","realPath":"src/test/java/org/jabref/logic/exporter/XmpExporterTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":52,"status":"M"},{"authorDate":"2018-08-30 00:00:58","commitOrder":5,"curCode":"    public void writeMultipleEntriesInASingleFile(@TempDirectory.TempDir Path testFolder) throws Exception {\n        Path file = testFolder.resolve(\"ThisIsARandomlyNamedFile\");\n        Files.createFile(file);\n\n        BibEntry entryTuring = new BibEntry();\n        entryTuring.setField(\"author\", \"Alan Turing\");\n\n        BibEntry entryArmbrust = new BibEntry();\n        entryArmbrust.setField(\"author\", \"Michael Armbrust\");\n        entryArmbrust.setCiteKey(\"Armbrust2010\");\n\n        exporter.export(databaseContext, file, encoding, Arrays.asList(entryTuring, entryArmbrust));\n\n        String actual = Files.readAllLines(file).stream().collect(Collectors.joining(\"\\n\")); \r\n\n        String expected = \"  <rdf:RDF xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\">\\n\" +\n                          \"    <rdf:Description xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\" rdf:about=\\\"\\\">\\n\" +\n                          \"      <dc:creator>\\n\" +\n                          \"        <rdf:Seq>\\n\" +\n                          \"          <rdf:li>Alan Turing</rdf:li>\\n\" +\n                          \"        </rdf:Seq>\\n\" +\n                          \"      </dc:creator>\\n\" +\n                          \"      <dc:format>application/pdf</dc:format>\\n\" +\n                          \"      <dc:type>\\n\" +\n                          \"        <rdf:Bag>\\n\" +\n                          \"          <rdf:li>Misc</rdf:li>\\n\" +\n                          \"        </rdf:Bag>\\n\" +\n                          \"      </dc:type>\\n\" +\n                          \"    </rdf:Description>\\n\" +\n                          \"    <rdf:Description xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\" rdf:about=\\\"\\\">\\n\" +\n                          \"      <dc:creator>\\n\" +\n                          \"        <rdf:Seq>\\n\" +\n                          \"          <rdf:li>Michael Armbrust</rdf:li>\\n\" +\n                          \"        </rdf:Seq>\\n\" +\n                          \"      </dc:creator>\\n\" +\n                          \"      <dc:relation>\\n\" +\n                          \"        <rdf:Bag>\\n\" +\n                          \"          <rdf:li>bibtex/bibtexkey/Armbrust2010</rdf:li>\\n\" +\n                          \"        </rdf:Bag>\\n\" +\n                          \"      </dc:relation>\\n\" +\n                          \"      <dc:format>application/pdf</dc:format>\\n\" +\n                          \"      <dc:type>\\n\" +\n                          \"        <rdf:Bag>\\n\" +\n                          \"          <rdf:li>Misc</rdf:li>\\n\" +\n                          \"        </rdf:Bag>\\n\" +\n                          \"      </dc:type>\\n\" +\n                          \"    </rdf:Description>\\n\" +\n                          \"  </rdf:RDF>\";\n        assertEquals(expected, actual);\n    }\n","date":"2018-08-30 00:00:58","endLine":129,"groupId":"8989","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"writeMultipleEntriesInASingleFile","params":"(@TempDirectory.TempDirPathtestFolder)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/41/74683a69e0c48edce04822a5eb010b65668b68.src","preCode":"    public void writeMultipleEntriesInASingleFile(@TempDirectory.TempDir Path testFolder) throws Exception {\n        Path file = testFolder.resolve(\"ThisIsARandomlyNamedFile\");\n        Files.createFile(file);\n\n        BibEntry entryTuring = new BibEntry();\n        entryTuring.setField(\"author\", \"Alan Turing\");\n\n        BibEntry entryArmbrust = new BibEntry();\n        entryArmbrust.setField(\"author\", \"Michael Armbrust\");\n        entryArmbrust.setCiteKey(\"Armbrust2010\");\n\n        exporter.export(databaseContext, file, encoding, Arrays.asList(entryTuring, entryArmbrust));\n\n        List<String> lines = Files.readAllLines(file);\n        assertEquals(33, lines.size());\n        assertEquals(\"<rdf:li>Alan Turing</rdf:li>\", lines.get(4).trim());\n        assertEquals(\"<rdf:li>Michael Armbrust</rdf:li>\", lines.get(17).trim());\n    }\n","realPath":"src/test/java/org/jabref/logic/exporter/XmpExporterTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":80,"status":"M"}],"commitId":"2d2a0f63d5cd36209a48f993d7f9031c3aa107ff","commitMessage":"@@@fix loading and storing of XMP Field Exclusions (#4291)\n\n* fix loading and storing of XMP Field Exlusions\n\nFixes #4072\n\n* rename variable\n\n* fix l10n and replace textfield with combobox\n\n* adjust xmp test and add case for xmp privacy\n\n* add changelog\n\n* make editable\nremove explicit pref size adjustments\n\n* add delete icon button to table\ndisable when checkbox is unchecked\n\n* fix comment\n","date":"2018-08-30 00:00:58","modifiedFileCount":"3","status":"M","submitter":"Christoph"},{"authorTime":"2019-02-09 22:36:12","codes":[{"authorDate":"2019-02-09 22:36:12","commitOrder":6,"curCode":"    public void exportSingleEntry(@TempDir Path testFolder) throws Exception {\n        Path file = testFolder.resolve(\"ThisIsARandomlyNamedFile\");\n        Files.createFile(file);\n\n        BibEntry entry = new BibEntry();\n        entry.setField(\"author\", \"Alan Turing\");\n\n        exporter.export(databaseContext, file, encoding, Collections.singletonList(entry));\n        String actual = Files.readAllLines(file).stream().collect(Collectors.joining(\"\\n\")); \r\n        String expected = \"  <rdf:RDF xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\">\\n\" +\n                \"    <rdf:Description xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\" rdf:about=\\\"\\\">\\n\" +\n                \"      <dc:creator>\\n\" +\n                \"        <rdf:Seq>\\n\" +\n                \"          <rdf:li>Alan Turing</rdf:li>\\n\" +\n                \"        </rdf:Seq>\\n\" +\n                \"      </dc:creator>\\n\" +\n                \"      <dc:format>application/pdf</dc:format>\\n\" +\n                \"      <dc:type>\\n\" +\n                \"        <rdf:Bag>\\n\" +\n                \"          <rdf:li>Misc</rdf:li>\\n\" +\n                \"        </rdf:Bag>\\n\" +\n                \"      </dc:type>\\n\" +\n                \"    </rdf:Description>\\n\" +\n                \"  </rdf:RDF>\";\n        assertEquals(expected, actual);\n    }\n","date":"2019-02-09 22:36:12","endLine":74,"groupId":"8895","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"exportSingleEntry","params":"(@TempDirPathtestFolder)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/d2/4b3725624404d77bedaaacf23cb1f5e038f7ce.src","preCode":"    public void exportSingleEntry(@TempDirectory.TempDir Path testFolder) throws Exception {\n        Path file = testFolder.resolve(\"ThisIsARandomlyNamedFile\");\n        Files.createFile(file);\n\n        BibEntry entry = new BibEntry();\n        entry.setField(\"author\", \"Alan Turing\");\n\n        exporter.export(databaseContext, file, encoding, Collections.singletonList(entry));\n        String actual = Files.readAllLines(file).stream().collect(Collectors.joining(\"\\n\")); \r\n        String expected = \"  <rdf:RDF xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\">\\n\" +\n                \"    <rdf:Description xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\" rdf:about=\\\"\\\">\\n\" +\n                \"      <dc:creator>\\n\" +\n                \"        <rdf:Seq>\\n\" +\n                \"          <rdf:li>Alan Turing</rdf:li>\\n\" +\n                \"        </rdf:Seq>\\n\" +\n                \"      </dc:creator>\\n\" +\n                \"      <dc:format>application/pdf</dc:format>\\n\" +\n                \"      <dc:type>\\n\" +\n                \"        <rdf:Bag>\\n\" +\n                \"          <rdf:li>Misc</rdf:li>\\n\" +\n                \"        </rdf:Bag>\\n\" +\n                \"      </dc:type>\\n\" +\n                \"    </rdf:Description>\\n\" +\n                \"  </rdf:RDF>\";\n        assertEquals(expected, actual);\n    }\n","realPath":"src/test/java/org/jabref/logic/exporter/XmpExporterTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":49,"status":"M"},{"authorDate":"2019-02-09 22:36:12","commitOrder":6,"curCode":"    public void writeMultipleEntriesInASingleFile(@TempDir Path testFolder) throws Exception {\n        Path file = testFolder.resolve(\"ThisIsARandomlyNamedFile\");\n        Files.createFile(file);\n\n        BibEntry entryTuring = new BibEntry();\n        entryTuring.setField(\"author\", \"Alan Turing\");\n\n        BibEntry entryArmbrust = new BibEntry();\n        entryArmbrust.setField(\"author\", \"Michael Armbrust\");\n        entryArmbrust.setCiteKey(\"Armbrust2010\");\n\n        exporter.export(databaseContext, file, encoding, Arrays.asList(entryTuring, entryArmbrust));\n\n        String actual = Files.readAllLines(file).stream().collect(Collectors.joining(\"\\n\")); \r\n\n        String expected = \"  <rdf:RDF xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\">\\n\" +\n                \"    <rdf:Description xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\" rdf:about=\\\"\\\">\\n\" +\n                \"      <dc:creator>\\n\" +\n                \"        <rdf:Seq>\\n\" +\n                \"          <rdf:li>Alan Turing</rdf:li>\\n\" +\n                \"        </rdf:Seq>\\n\" +\n                \"      </dc:creator>\\n\" +\n                \"      <dc:format>application/pdf</dc:format>\\n\" +\n                \"      <dc:type>\\n\" +\n                \"        <rdf:Bag>\\n\" +\n                \"          <rdf:li>Misc</rdf:li>\\n\" +\n                \"        </rdf:Bag>\\n\" +\n                \"      </dc:type>\\n\" +\n                \"    </rdf:Description>\\n\" +\n                \"    <rdf:Description xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\" rdf:about=\\\"\\\">\\n\" +\n                \"      <dc:creator>\\n\" +\n                \"        <rdf:Seq>\\n\" +\n                \"          <rdf:li>Michael Armbrust</rdf:li>\\n\" +\n                \"        </rdf:Seq>\\n\" +\n                \"      </dc:creator>\\n\" +\n                \"      <dc:relation>\\n\" +\n                \"        <rdf:Bag>\\n\" +\n                \"          <rdf:li>bibtex/bibtexkey/Armbrust2010</rdf:li>\\n\" +\n                \"        </rdf:Bag>\\n\" +\n                \"      </dc:relation>\\n\" +\n                \"      <dc:format>application/pdf</dc:format>\\n\" +\n                \"      <dc:type>\\n\" +\n                \"        <rdf:Bag>\\n\" +\n                \"          <rdf:li>Misc</rdf:li>\\n\" +\n                \"        </rdf:Bag>\\n\" +\n                \"      </dc:type>\\n\" +\n                \"    </rdf:Description>\\n\" +\n                \"  </rdf:RDF>\";\n        assertEquals(expected, actual);\n    }\n","date":"2019-02-09 22:36:12","endLine":126,"groupId":"8989","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"writeMultipleEntriesInASingleFile","params":"(@TempDirPathtestFolder)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/d2/4b3725624404d77bedaaacf23cb1f5e038f7ce.src","preCode":"    public void writeMultipleEntriesInASingleFile(@TempDirectory.TempDir Path testFolder) throws Exception {\n        Path file = testFolder.resolve(\"ThisIsARandomlyNamedFile\");\n        Files.createFile(file);\n\n        BibEntry entryTuring = new BibEntry();\n        entryTuring.setField(\"author\", \"Alan Turing\");\n\n        BibEntry entryArmbrust = new BibEntry();\n        entryArmbrust.setField(\"author\", \"Michael Armbrust\");\n        entryArmbrust.setCiteKey(\"Armbrust2010\");\n\n        exporter.export(databaseContext, file, encoding, Arrays.asList(entryTuring, entryArmbrust));\n\n        String actual = Files.readAllLines(file).stream().collect(Collectors.joining(\"\\n\")); \r\n\n        String expected = \"  <rdf:RDF xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\">\\n\" +\n                \"    <rdf:Description xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\" rdf:about=\\\"\\\">\\n\" +\n                \"      <dc:creator>\\n\" +\n                \"        <rdf:Seq>\\n\" +\n                \"          <rdf:li>Alan Turing</rdf:li>\\n\" +\n                \"        </rdf:Seq>\\n\" +\n                \"      </dc:creator>\\n\" +\n                \"      <dc:format>application/pdf</dc:format>\\n\" +\n                \"      <dc:type>\\n\" +\n                \"        <rdf:Bag>\\n\" +\n                \"          <rdf:li>Misc</rdf:li>\\n\" +\n                \"        </rdf:Bag>\\n\" +\n                \"      </dc:type>\\n\" +\n                \"    </rdf:Description>\\n\" +\n                \"    <rdf:Description xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\" rdf:about=\\\"\\\">\\n\" +\n                \"      <dc:creator>\\n\" +\n                \"        <rdf:Seq>\\n\" +\n                \"          <rdf:li>Michael Armbrust</rdf:li>\\n\" +\n                \"        </rdf:Seq>\\n\" +\n                \"      </dc:creator>\\n\" +\n                \"      <dc:relation>\\n\" +\n                \"        <rdf:Bag>\\n\" +\n                \"          <rdf:li>bibtex/bibtexkey/Armbrust2010</rdf:li>\\n\" +\n                \"        </rdf:Bag>\\n\" +\n                \"      </dc:relation>\\n\" +\n                \"      <dc:format>application/pdf</dc:format>\\n\" +\n                \"      <dc:type>\\n\" +\n                \"        <rdf:Bag>\\n\" +\n                \"          <rdf:li>Misc</rdf:li>\\n\" +\n                \"        </rdf:Bag>\\n\" +\n                \"      </dc:type>\\n\" +\n                \"    </rdf:Description>\\n\" +\n                \"  </rdf:RDF>\";\n        assertEquals(expected, actual);\n    }\n","realPath":"src/test/java/org/jabref/logic/exporter/XmpExporterTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":77,"status":"M"}],"commitId":"71e02379a068756a3885aa22161337255683fca3","commitMessage":"@@@Fix for issue 4641: Remove usage of TempDirectory extension from junit-pioneer (#4644)\n\n* Removed the TempDirectory extension from junit-pioneer with the built in\nextension of junit 5.4\n\n* Removed unused import\n","date":"2019-02-09 22:36:12","modifiedFileCount":"23","status":"M","submitter":"Akash Deep"},{"authorTime":"2019-08-02 15:20:10","codes":[{"authorDate":"2019-08-02 15:20:10","commitOrder":7,"curCode":"    public void exportSingleEntry(@TempDir Path testFolder) throws Exception {\n        Path file = testFolder.resolve(\"ThisIsARandomlyNamedFile\");\n        Files.createFile(file);\n\n        BibEntry entry = new BibEntry();\n        entry.setField(StandardField.AUTHOR, \"Alan Turing\");\n\n        exporter.export(databaseContext, file, encoding, Collections.singletonList(entry));\n        String actual = String.join(\"\\n\", Files.readAllLines(file)); \r\n        String expected = \"  <rdf:RDF xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\">\\n\" +\n                \"    <rdf:Description xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\" rdf:about=\\\"\\\">\\n\" +\n                \"      <dc:creator>\\n\" +\n                \"        <rdf:Seq>\\n\" +\n                \"          <rdf:li>Alan Turing</rdf:li>\\n\" +\n                \"        </rdf:Seq>\\n\" +\n                \"      </dc:creator>\\n\" +\n                \"      <dc:format>application/pdf</dc:format>\\n\" +\n                \"      <dc:type>\\n\" +\n                \"        <rdf:Bag>\\n\" +\n                \"          <rdf:li>Misc</rdf:li>\\n\" +\n                \"        </rdf:Bag>\\n\" +\n                \"      </dc:type>\\n\" +\n                \"    </rdf:Description>\\n\" +\n                \"  </rdf:RDF>\";\n        assertEquals(expected, actual);\n    }\n","date":"2019-08-02 15:20:10","endLine":66,"groupId":"2097","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"exportSingleEntry","params":"(@TempDirPathtestFolder)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/99/947ac7a6bf437c4b7f046fdfd5b176ac6e840b.src","preCode":"    public void exportSingleEntry(@TempDir Path testFolder) throws Exception {\n        Path file = testFolder.resolve(\"ThisIsARandomlyNamedFile\");\n        Files.createFile(file);\n\n        BibEntry entry = new BibEntry();\n        entry.setField(\"author\", \"Alan Turing\");\n\n        exporter.export(databaseContext, file, encoding, Collections.singletonList(entry));\n        String actual = Files.readAllLines(file).stream().collect(Collectors.joining(\"\\n\")); \r\n        String expected = \"  <rdf:RDF xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\">\\n\" +\n                \"    <rdf:Description xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\" rdf:about=\\\"\\\">\\n\" +\n                \"      <dc:creator>\\n\" +\n                \"        <rdf:Seq>\\n\" +\n                \"          <rdf:li>Alan Turing</rdf:li>\\n\" +\n                \"        </rdf:Seq>\\n\" +\n                \"      </dc:creator>\\n\" +\n                \"      <dc:format>application/pdf</dc:format>\\n\" +\n                \"      <dc:type>\\n\" +\n                \"        <rdf:Bag>\\n\" +\n                \"          <rdf:li>Misc</rdf:li>\\n\" +\n                \"        </rdf:Bag>\\n\" +\n                \"      </dc:type>\\n\" +\n                \"    </rdf:Description>\\n\" +\n                \"  </rdf:RDF>\";\n        assertEquals(expected, actual);\n    }\n","realPath":"src/test/java/org/jabref/logic/exporter/XmpExporterTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":41,"status":"M"},{"authorDate":"2019-08-02 15:20:10","commitOrder":7,"curCode":"    public void writeMultipleEntriesInASingleFile(@TempDir Path testFolder) throws Exception {\n        Path file = testFolder.resolve(\"ThisIsARandomlyNamedFile\");\n        Files.createFile(file);\n\n        BibEntry entryTuring = new BibEntry();\n        entryTuring.setField(StandardField.AUTHOR, \"Alan Turing\");\n\n        BibEntry entryArmbrust = new BibEntry();\n        entryArmbrust.setField(StandardField.AUTHOR, \"Michael Armbrust\");\n        entryArmbrust.setCiteKey(\"Armbrust2010\");\n\n        exporter.export(databaseContext, file, encoding, Arrays.asList(entryTuring, entryArmbrust));\n\n        String actual = String.join(\"\\n\", Files.readAllLines(file)); \r\n\n        String expected = \"  <rdf:RDF xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\">\\n\" +\n                \"    <rdf:Description xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\" rdf:about=\\\"\\\">\\n\" +\n                \"      <dc:creator>\\n\" +\n                \"        <rdf:Seq>\\n\" +\n                \"          <rdf:li>Alan Turing</rdf:li>\\n\" +\n                \"        </rdf:Seq>\\n\" +\n                \"      </dc:creator>\\n\" +\n                \"      <dc:format>application/pdf</dc:format>\\n\" +\n                \"      <dc:type>\\n\" +\n                \"        <rdf:Bag>\\n\" +\n                \"          <rdf:li>Misc</rdf:li>\\n\" +\n                \"        </rdf:Bag>\\n\" +\n                \"      </dc:type>\\n\" +\n                \"    </rdf:Description>\\n\" +\n                \"    <rdf:Description xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\" rdf:about=\\\"\\\">\\n\" +\n                \"      <dc:creator>\\n\" +\n                \"        <rdf:Seq>\\n\" +\n                \"          <rdf:li>Michael Armbrust</rdf:li>\\n\" +\n                \"        </rdf:Seq>\\n\" +\n                \"      </dc:creator>\\n\" +\n                \"      <dc:relation>\\n\" +\n                \"        <rdf:Bag>\\n\" +\n                \"          <rdf:li>bibtex/bibtexkey/Armbrust2010</rdf:li>\\n\" +\n                \"        </rdf:Bag>\\n\" +\n                \"      </dc:relation>\\n\" +\n                \"      <dc:format>application/pdf</dc:format>\\n\" +\n                \"      <dc:type>\\n\" +\n                \"        <rdf:Bag>\\n\" +\n                \"          <rdf:li>Misc</rdf:li>\\n\" +\n                \"        </rdf:Bag>\\n\" +\n                \"      </dc:type>\\n\" +\n                \"    </rdf:Description>\\n\" +\n                \"  </rdf:RDF>\";\n        assertEquals(expected, actual);\n    }\n","date":"2019-08-02 15:20:10","endLine":118,"groupId":"2095","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"writeMultipleEntriesInASingleFile","params":"(@TempDirPathtestFolder)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/99/947ac7a6bf437c4b7f046fdfd5b176ac6e840b.src","preCode":"    public void writeMultipleEntriesInASingleFile(@TempDir Path testFolder) throws Exception {\n        Path file = testFolder.resolve(\"ThisIsARandomlyNamedFile\");\n        Files.createFile(file);\n\n        BibEntry entryTuring = new BibEntry();\n        entryTuring.setField(\"author\", \"Alan Turing\");\n\n        BibEntry entryArmbrust = new BibEntry();\n        entryArmbrust.setField(\"author\", \"Michael Armbrust\");\n        entryArmbrust.setCiteKey(\"Armbrust2010\");\n\n        exporter.export(databaseContext, file, encoding, Arrays.asList(entryTuring, entryArmbrust));\n\n        String actual = Files.readAllLines(file).stream().collect(Collectors.joining(\"\\n\")); \r\n\n        String expected = \"  <rdf:RDF xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\">\\n\" +\n                \"    <rdf:Description xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\" rdf:about=\\\"\\\">\\n\" +\n                \"      <dc:creator>\\n\" +\n                \"        <rdf:Seq>\\n\" +\n                \"          <rdf:li>Alan Turing</rdf:li>\\n\" +\n                \"        </rdf:Seq>\\n\" +\n                \"      </dc:creator>\\n\" +\n                \"      <dc:format>application/pdf</dc:format>\\n\" +\n                \"      <dc:type>\\n\" +\n                \"        <rdf:Bag>\\n\" +\n                \"          <rdf:li>Misc</rdf:li>\\n\" +\n                \"        </rdf:Bag>\\n\" +\n                \"      </dc:type>\\n\" +\n                \"    </rdf:Description>\\n\" +\n                \"    <rdf:Description xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\" rdf:about=\\\"\\\">\\n\" +\n                \"      <dc:creator>\\n\" +\n                \"        <rdf:Seq>\\n\" +\n                \"          <rdf:li>Michael Armbrust</rdf:li>\\n\" +\n                \"        </rdf:Seq>\\n\" +\n                \"      </dc:creator>\\n\" +\n                \"      <dc:relation>\\n\" +\n                \"        <rdf:Bag>\\n\" +\n                \"          <rdf:li>bibtex/bibtexkey/Armbrust2010</rdf:li>\\n\" +\n                \"        </rdf:Bag>\\n\" +\n                \"      </dc:relation>\\n\" +\n                \"      <dc:format>application/pdf</dc:format>\\n\" +\n                \"      <dc:type>\\n\" +\n                \"        <rdf:Bag>\\n\" +\n                \"          <rdf:li>Misc</rdf:li>\\n\" +\n                \"        </rdf:Bag>\\n\" +\n                \"      </dc:type>\\n\" +\n                \"    </rdf:Description>\\n\" +\n                \"  </rdf:RDF>\";\n        assertEquals(expected, actual);\n    }\n","realPath":"src/test/java/org/jabref/logic/exporter/XmpExporterTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":69,"status":"M"}],"commitId":"4b39b78e4afcd6c36b385f5c46f1d9a4eac2e29b","commitMessage":"@@@Move to extended enums for fields and entry types (#5148)\n\n* Introduce interface for fields\n\n* Continue using fields interface instead of strings\n\n* Introduce OrFields class\n\n* Move FieldProperty\n\n* Convert entry types to extended enum\n\n* Start fixing build\n\n* Fix build\n\n* Start fixing tests\n\n* Everything compiles again\n\n* Make model tests pass\n\n* Fix most tests\n\n* Fix build\n\n* Fix a few more tests\n\n* Fix a few more tests\n\n* Fix a few more tests\n\n* Fix a few more tests\n\n* Fix checkstyle issues\n\n* Fix more tests\n\n* Fix more tests\n\n* Disable test that fails on CI\n\n* Disable test that fails on CI\n","date":"2019-08-02 15:20:10","modifiedFileCount":"439","status":"M","submitter":"Tobias Diez"},{"authorTime":"2020-09-08 21:34:34","codes":[{"authorDate":"2019-08-02 15:20:10","commitOrder":8,"curCode":"    public void exportSingleEntry(@TempDir Path testFolder) throws Exception {\n        Path file = testFolder.resolve(\"ThisIsARandomlyNamedFile\");\n        Files.createFile(file);\n\n        BibEntry entry = new BibEntry();\n        entry.setField(StandardField.AUTHOR, \"Alan Turing\");\n\n        exporter.export(databaseContext, file, encoding, Collections.singletonList(entry));\n        String actual = String.join(\"\\n\", Files.readAllLines(file)); \r\n        String expected = \"  <rdf:RDF xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\">\\n\" +\n                \"    <rdf:Description xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\" rdf:about=\\\"\\\">\\n\" +\n                \"      <dc:creator>\\n\" +\n                \"        <rdf:Seq>\\n\" +\n                \"          <rdf:li>Alan Turing</rdf:li>\\n\" +\n                \"        </rdf:Seq>\\n\" +\n                \"      </dc:creator>\\n\" +\n                \"      <dc:format>application/pdf</dc:format>\\n\" +\n                \"      <dc:type>\\n\" +\n                \"        <rdf:Bag>\\n\" +\n                \"          <rdf:li>Misc</rdf:li>\\n\" +\n                \"        </rdf:Bag>\\n\" +\n                \"      </dc:type>\\n\" +\n                \"    </rdf:Description>\\n\" +\n                \"  </rdf:RDF>\";\n        assertEquals(expected, actual);\n    }\n","date":"2019-08-02 15:20:10","endLine":66,"groupId":"10722","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"exportSingleEntry","params":"(@TempDirPathtestFolder)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/99/947ac7a6bf437c4b7f046fdfd5b176ac6e840b.src","preCode":"    public void exportSingleEntry(@TempDir Path testFolder) throws Exception {\n        Path file = testFolder.resolve(\"ThisIsARandomlyNamedFile\");\n        Files.createFile(file);\n\n        BibEntry entry = new BibEntry();\n        entry.setField(StandardField.AUTHOR, \"Alan Turing\");\n\n        exporter.export(databaseContext, file, encoding, Collections.singletonList(entry));\n        String actual = String.join(\"\\n\", Files.readAllLines(file)); \r\n        String expected = \"  <rdf:RDF xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\">\\n\" +\n                \"    <rdf:Description xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\" rdf:about=\\\"\\\">\\n\" +\n                \"      <dc:creator>\\n\" +\n                \"        <rdf:Seq>\\n\" +\n                \"          <rdf:li>Alan Turing</rdf:li>\\n\" +\n                \"        </rdf:Seq>\\n\" +\n                \"      </dc:creator>\\n\" +\n                \"      <dc:format>application/pdf</dc:format>\\n\" +\n                \"      <dc:type>\\n\" +\n                \"        <rdf:Bag>\\n\" +\n                \"          <rdf:li>Misc</rdf:li>\\n\" +\n                \"        </rdf:Bag>\\n\" +\n                \"      </dc:type>\\n\" +\n                \"    </rdf:Description>\\n\" +\n                \"  </rdf:RDF>\";\n        assertEquals(expected, actual);\n    }\n","realPath":"src/test/java/org/jabref/logic/exporter/XmpExporterTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":41,"status":"N"},{"authorDate":"2020-09-08 21:34:34","commitOrder":8,"curCode":"    public void writeMultipleEntriesInASingleFile(@TempDir Path testFolder) throws Exception {\n        Path file = testFolder.resolve(\"ThisIsARandomlyNamedFile\");\n        Files.createFile(file);\n\n        BibEntry entryTuring = new BibEntry();\n        entryTuring.setField(StandardField.AUTHOR, \"Alan Turing\");\n\n        BibEntry entryArmbrust = new BibEntry();\n        entryArmbrust.setField(StandardField.AUTHOR, \"Michael Armbrust\");\n        entryArmbrust.setCitationKey(\"Armbrust2010\");\n\n        exporter.export(databaseContext, file, encoding, Arrays.asList(entryTuring, entryArmbrust));\n\n        String actual = String.join(\"\\n\", Files.readAllLines(file)); \r\n\n        String expected = \"  <rdf:RDF xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\">\\n\" +\n                \"    <rdf:Description xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\" rdf:about=\\\"\\\">\\n\" +\n                \"      <dc:creator>\\n\" +\n                \"        <rdf:Seq>\\n\" +\n                \"          <rdf:li>Alan Turing</rdf:li>\\n\" +\n                \"        </rdf:Seq>\\n\" +\n                \"      </dc:creator>\\n\" +\n                \"      <dc:format>application/pdf</dc:format>\\n\" +\n                \"      <dc:type>\\n\" +\n                \"        <rdf:Bag>\\n\" +\n                \"          <rdf:li>Misc</rdf:li>\\n\" +\n                \"        </rdf:Bag>\\n\" +\n                \"      </dc:type>\\n\" +\n                \"    </rdf:Description>\\n\" +\n                \"    <rdf:Description xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\" rdf:about=\\\"\\\">\\n\" +\n                \"      <dc:creator>\\n\" +\n                \"        <rdf:Seq>\\n\" +\n                \"          <rdf:li>Michael Armbrust</rdf:li>\\n\" +\n                \"        </rdf:Seq>\\n\" +\n                \"      </dc:creator>\\n\" +\n                \"      <dc:relation>\\n\" +\n                \"        <rdf:Bag>\\n\" +\n                \"          <rdf:li>bibtex/citationkey/Armbrust2010</rdf:li>\\n\" +\n                \"        </rdf:Bag>\\n\" +\n                \"      </dc:relation>\\n\" +\n                \"      <dc:format>application/pdf</dc:format>\\n\" +\n                \"      <dc:type>\\n\" +\n                \"        <rdf:Bag>\\n\" +\n                \"          <rdf:li>Misc</rdf:li>\\n\" +\n                \"        </rdf:Bag>\\n\" +\n                \"      </dc:type>\\n\" +\n                \"    </rdf:Description>\\n\" +\n                \"  </rdf:RDF>\";\n        assertEquals(expected, actual);\n    }\n","date":"2020-09-08 21:34:34","endLine":117,"groupId":"10722","id":12,"instanceNumber":2,"isCurCommit":1,"methodName":"writeMultipleEntriesInASingleFile","params":"(@TempDirPathtestFolder)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/d6/37a9578586d0f7a98550c3508e4e3fb42f4b87.src","preCode":"    public void writeMultipleEntriesInASingleFile(@TempDir Path testFolder) throws Exception {\n        Path file = testFolder.resolve(\"ThisIsARandomlyNamedFile\");\n        Files.createFile(file);\n\n        BibEntry entryTuring = new BibEntry();\n        entryTuring.setField(StandardField.AUTHOR, \"Alan Turing\");\n\n        BibEntry entryArmbrust = new BibEntry();\n        entryArmbrust.setField(StandardField.AUTHOR, \"Michael Armbrust\");\n        entryArmbrust.setCiteKey(\"Armbrust2010\");\n\n        exporter.export(databaseContext, file, encoding, Arrays.asList(entryTuring, entryArmbrust));\n\n        String actual = String.join(\"\\n\", Files.readAllLines(file)); \r\n\n        String expected = \"  <rdf:RDF xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\">\\n\" +\n                \"    <rdf:Description xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\" rdf:about=\\\"\\\">\\n\" +\n                \"      <dc:creator>\\n\" +\n                \"        <rdf:Seq>\\n\" +\n                \"          <rdf:li>Alan Turing</rdf:li>\\n\" +\n                \"        </rdf:Seq>\\n\" +\n                \"      </dc:creator>\\n\" +\n                \"      <dc:format>application/pdf</dc:format>\\n\" +\n                \"      <dc:type>\\n\" +\n                \"        <rdf:Bag>\\n\" +\n                \"          <rdf:li>Misc</rdf:li>\\n\" +\n                \"        </rdf:Bag>\\n\" +\n                \"      </dc:type>\\n\" +\n                \"    </rdf:Description>\\n\" +\n                \"    <rdf:Description xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\" rdf:about=\\\"\\\">\\n\" +\n                \"      <dc:creator>\\n\" +\n                \"        <rdf:Seq>\\n\" +\n                \"          <rdf:li>Michael Armbrust</rdf:li>\\n\" +\n                \"        </rdf:Seq>\\n\" +\n                \"      </dc:creator>\\n\" +\n                \"      <dc:relation>\\n\" +\n                \"        <rdf:Bag>\\n\" +\n                \"          <rdf:li>bibtex/bibtexkey/Armbrust2010</rdf:li>\\n\" +\n                \"        </rdf:Bag>\\n\" +\n                \"      </dc:relation>\\n\" +\n                \"      <dc:format>application/pdf</dc:format>\\n\" +\n                \"      <dc:type>\\n\" +\n                \"        <rdf:Bag>\\n\" +\n                \"          <rdf:li>Misc</rdf:li>\\n\" +\n                \"        </rdf:Bag>\\n\" +\n                \"      </dc:type>\\n\" +\n                \"    </rdf:Description>\\n\" +\n                \"  </rdf:RDF>\";\n        assertEquals(expected, actual);\n    }\n","realPath":"src/test/java/org/jabref/logic/exporter/XmpExporterTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":68,"status":"M"}],"commitId":"6dec1747d8a1c89f6c62fc1d1939d88411f17eba","commitMessage":"@@@Complete rebranding of `bibtexkey` as `citationkey` (#6875)\n\n","date":"2020-09-08 21:34:34","modifiedFileCount":"127","status":"M","submitter":"Tobias Diez"}]
