[{"authorTime":"2020-09-08 21:34:34","codes":[{"authorDate":"2020-10-22 09:13:11","commitOrder":9,"curCode":"    static void setUp() {\n        List<TemplateExporter> customFormats = new ArrayList<>();\n        LayoutFormatterPreferences layoutPreferences = mock(LayoutFormatterPreferences.class, Answers.RETURNS_DEEP_STUBS);\n        SavePreferences savePreferences = mock(SavePreferences.class);\n        XmpPreferences xmpPreferences = mock(XmpPreferences.class);\n        ExporterFactory exporterFactory = ExporterFactory.create(customFormats, layoutPreferences, savePreferences, xmpPreferences);\n\n        databaseContext = new BibDatabaseContext();\n        charset = StandardCharsets.UTF_8;\n        yamlExporter = exporterFactory.getExporterByName(\"yaml\").get();\n    }\n","date":"2020-10-22 09:13:11","endLine":43,"groupId":"10063","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"setUp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/cb/5268cf005005d55972973ea4724ad8b950c1cc.src","preCode":"    static void setUp() {\n        List<TemplateExporter> customFormats = new ArrayList<>();\n        LayoutFormatterPreferences layoutPreferences = mock(LayoutFormatterPreferences.class, Answers.RETURNS_DEEP_STUBS);\n        SavePreferences savePreferences = mock(SavePreferences.class);\n        XmpPreferences xmpPreferences = mock(XmpPreferences.class);\n        ExporterFactory exporterFactory = ExporterFactory.create(customFormats, layoutPreferences, savePreferences, xmpPreferences);\n\n        databaseContext = new BibDatabaseContext();\n        charset = StandardCharsets.UTF_8;\n        yamlExporter = exporterFactory.getExporterByName(\"yaml\").get();\n    }\n","realPath":"src/test/java/org/jabref/logic/exporter/YamlExporterTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":33,"status":"B"},{"authorDate":"2020-09-08 21:34:34","commitOrder":9,"curCode":"    public void setUp() {\n        List<TemplateExporter> customFormats = new ArrayList<>();\n        LayoutFormatterPreferences layoutPreferences = mock(LayoutFormatterPreferences.class, Answers.RETURNS_DEEP_STUBS);\n        SavePreferences savePreferences = mock(SavePreferences.class);\n        XmpPreferences xmpPreferences = mock(XmpPreferences.class);\n        ExporterFactory exporterFactory = ExporterFactory.create(customFormats, layoutPreferences, savePreferences, xmpPreferences);\n\n        exportFormat = exporterFactory.getExporterByName(\"html\").get();\n\n        databaseContext = new BibDatabaseContext();\n        charset = StandardCharsets.UTF_8;\n        BibEntry entry = new BibEntry();\n        entry.setField(StandardField.TITLE, \"my paper title\");\n        entry.setField(StandardField.AUTHOR, \"Stefan Kolb\");\n        entry.setCitationKey(\"mykey\");\n        entries = Arrays.asList(entry);\n    }\n","date":"2020-09-08 21:34:34","endLine":49,"groupId":"10063","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"setUp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/6b/1b05a5f0097dc5883bf883bfa47401cd25d36c.src","preCode":"    public void setUp() {\n        List<TemplateExporter> customFormats = new ArrayList<>();\n        LayoutFormatterPreferences layoutPreferences = mock(LayoutFormatterPreferences.class, Answers.RETURNS_DEEP_STUBS);\n        SavePreferences savePreferences = mock(SavePreferences.class);\n        XmpPreferences xmpPreferences = mock(XmpPreferences.class);\n        ExporterFactory exporterFactory = ExporterFactory.create(customFormats, layoutPreferences, savePreferences, xmpPreferences);\n\n        exportFormat = exporterFactory.getExporterByName(\"html\").get();\n\n        databaseContext = new BibDatabaseContext();\n        charset = StandardCharsets.UTF_8;\n        BibEntry entry = new BibEntry();\n        entry.setField(StandardField.TITLE, \"my paper title\");\n        entry.setField(StandardField.AUTHOR, \"Stefan Kolb\");\n        entry.setCitationKey(\"mykey\");\n        entries = Arrays.asList(entry);\n    }\n","realPath":"src/test/java/org/jabref/logic/exporter/HtmlExportFormatTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":33,"status":"NB"}],"commitId":"7f4c36c03629498db8e56281906241a82846e1e3","commitMessage":"@@@Support for exporting to YAML format (#7007)\n\n","date":"2020-10-22 09:13:11","modifiedFileCount":"4","status":"M","submitter":"Johannes Theiner"},{"authorTime":"2021-08-31 20:52:33","codes":[{"authorDate":"2021-08-31 20:52:33","commitOrder":10,"curCode":"    static void setUp() {\n        List<TemplateExporter> customFormats = new ArrayList<>();\n        LayoutFormatterPreferences layoutPreferences = mock(LayoutFormatterPreferences.class, Answers.RETURNS_DEEP_STUBS);\n        SavePreferences savePreferences = mock(SavePreferences.class);\n        XmpPreferences xmpPreferences = mock(XmpPreferences.class);\n        BibEntryTypesManager entryTypesManager = mock(BibEntryTypesManager.class);\n        ExporterFactory exporterFactory = ExporterFactory.create(customFormats, layoutPreferences, savePreferences, xmpPreferences, BibDatabaseMode.BIBTEX, entryTypesManager);\n\n        databaseContext = new BibDatabaseContext();\n        charset = StandardCharsets.UTF_8;\n        yamlExporter = exporterFactory.getExporterByName(\"yaml\").get();\n    }\n","date":"2021-08-31 20:52:33","endLine":46,"groupId":"10703","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"setUp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/dc/ef2c1e12e23c60d5748295e90be67691c0ce45.src","preCode":"    static void setUp() {\n        List<TemplateExporter> customFormats = new ArrayList<>();\n        LayoutFormatterPreferences layoutPreferences = mock(LayoutFormatterPreferences.class, Answers.RETURNS_DEEP_STUBS);\n        SavePreferences savePreferences = mock(SavePreferences.class);\n        XmpPreferences xmpPreferences = mock(XmpPreferences.class);\n        ExporterFactory exporterFactory = ExporterFactory.create(customFormats, layoutPreferences, savePreferences, xmpPreferences);\n\n        databaseContext = new BibDatabaseContext();\n        charset = StandardCharsets.UTF_8;\n        yamlExporter = exporterFactory.getExporterByName(\"yaml\").get();\n    }\n","realPath":"src/test/java/org/jabref/logic/exporter/YamlExporterTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":35,"status":"M"},{"authorDate":"2021-08-31 20:52:33","commitOrder":10,"curCode":"    public void setUp() {\n        List<TemplateExporter> customFormats = new ArrayList<>();\n        LayoutFormatterPreferences layoutPreferences = mock(LayoutFormatterPreferences.class, Answers.RETURNS_DEEP_STUBS);\n        SavePreferences savePreferences = mock(SavePreferences.class);\n        XmpPreferences xmpPreferences = mock(XmpPreferences.class);\n        BibEntryTypesManager entryTypesManager = mock(BibEntryTypesManager.class);\n        ExporterFactory exporterFactory = ExporterFactory.create(customFormats, layoutPreferences, savePreferences, xmpPreferences, BibDatabaseMode.BIBTEX, entryTypesManager);\n\n        exportFormat = exporterFactory.getExporterByName(\"html\").get();\n\n        databaseContext = new BibDatabaseContext();\n        charset = StandardCharsets.UTF_8;\n        BibEntry entry = new BibEntry();\n        entry.setField(StandardField.TITLE, \"my paper title\");\n        entry.setField(StandardField.AUTHOR, \"Stefan Kolb\");\n        entry.setCitationKey(\"mykey\");\n        entries = Arrays.asList(entry);\n    }\n","date":"2021-08-31 20:52:33","endLine":52,"groupId":"10703","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"setUp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/82/1b9f4933b21e5a1a5ac3fc48fc2daa8d526903.src","preCode":"    public void setUp() {\n        List<TemplateExporter> customFormats = new ArrayList<>();\n        LayoutFormatterPreferences layoutPreferences = mock(LayoutFormatterPreferences.class, Answers.RETURNS_DEEP_STUBS);\n        SavePreferences savePreferences = mock(SavePreferences.class);\n        XmpPreferences xmpPreferences = mock(XmpPreferences.class);\n        ExporterFactory exporterFactory = ExporterFactory.create(customFormats, layoutPreferences, savePreferences, xmpPreferences);\n\n        exportFormat = exporterFactory.getExporterByName(\"html\").get();\n\n        databaseContext = new BibDatabaseContext();\n        charset = StandardCharsets.UTF_8;\n        BibEntry entry = new BibEntry();\n        entry.setField(StandardField.TITLE, \"my paper title\");\n        entry.setField(StandardField.AUTHOR, \"Stefan Kolb\");\n        entry.setCitationKey(\"mykey\");\n        entries = Arrays.asList(entry);\n    }\n","realPath":"src/test/java/org/jabref/logic/exporter/HtmlExportFormatTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":35,"status":"M"}],"commitId":"577f51c9c2270f50c4e025a2038c8a75782b0499","commitMessage":"@@@Write embedded bib in addition to XMP metadata (#8037)\n\n* EmbeddedBibFilePdfExporter\n\n* Standard Action\n\n* Gui triggers\n\n* Fix empty optional\n\n* CLI triggers\n\n* Localization\n\n* CHANGELOG\n\n* use System streams instead of Logger for user out\n\n* Typo in CHANGELOG.md\n\nCo-authored-by: Christoph <siedlerkiller@gmail.com>\n\nCo-authored-by: Benedikt Tutzer <benedikt.tutzer@tuwien.ac.at>\nCo-authored-by: Christoph <siedlerkiller@gmail.com>","date":"2021-08-31 20:52:33","modifiedFileCount":"17","status":"M","submitter":"Benedikt Tutzer"}]
