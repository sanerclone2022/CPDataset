[{"authorTime":"2017-04-26 01:33:02","codes":[{"authorDate":"2017-04-20 20:52:24","commitOrder":3,"curCode":"    public void setUp() {\n        Map<String, ExportFormat> customFormats = new HashMap<>();\n        LayoutFormatterPreferences layoutPreferences = mock(LayoutFormatterPreferences.class, Answers.RETURNS_DEEP_STUBS);\n        SavePreferences savePreferences = mock(SavePreferences.class);\n        ExportFormats.initAllExports(customFormats, layoutPreferences, savePreferences);\n\n        exportFormat = ExportFormats.getExportFormat(\"html\");\n\n        databaseContext = new BibDatabaseContext();\n        charset = Charsets.UTF_8;\n        BibEntry entry = new BibEntry();\n        entry.setField(\"title\", \"my paper title\");\n        entry.setField(\"author\", \"Stefan Kolb\");\n        entry.setCiteKey(\"mykey\");\n        entries = Arrays.asList(entry);\n    }\n","date":"2017-04-20 20:52:24","endLine":51,"groupId":"7325","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"setUp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/19/01812a1fa8c3204082c4110e84a12eb576960c.src","preCode":"    public void setUp() {\n        Map<String, ExportFormat> customFormats = new HashMap<>();\n        LayoutFormatterPreferences layoutPreferences = mock(LayoutFormatterPreferences.class, Answers.RETURNS_DEEP_STUBS);\n        SavePreferences savePreferences = mock(SavePreferences.class);\n        ExportFormats.initAllExports(customFormats, layoutPreferences, savePreferences);\n\n        exportFormat = ExportFormats.getExportFormat(\"html\");\n\n        databaseContext = new BibDatabaseContext();\n        charset = Charsets.UTF_8;\n        BibEntry entry = new BibEntry();\n        entry.setField(\"title\", \"my paper title\");\n        entry.setField(\"author\", \"Stefan Kolb\");\n        entry.setCiteKey(\"mykey\");\n        entries = Arrays.asList(entry);\n    }\n","realPath":"src/test/java/org/jabref/logic/exporter/HtmlExportFormatTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":36,"status":"NB"},{"authorDate":"2017-04-26 01:33:02","commitOrder":3,"curCode":"    public void setUp() {\n        Map<String, ExportFormat> customFormats = new HashMap<>();\n        LayoutFormatterPreferences layoutPreferences = mock(LayoutFormatterPreferences.class, Answers.RETURNS_DEEP_STUBS);\n        SavePreferences savePreferences = mock(SavePreferences.class);\n        ExportFormats.initAllExports(customFormats, layoutPreferences, savePreferences);\n\n        exportFormat = ExportFormats.getExportFormat(\"oocsv\");\n\n        databaseContext = new BibDatabaseContext();\n        charset = Charsets.UTF_8;\n    }\n","date":"2017-04-26 01:33:02","endLine":45,"groupId":"7325","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"setUp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/33/2e7ad49a93e23cfe32b5940c8406760c2388a3.src","preCode":"    public void setUp() {\n        Map<String, ExportFormat> customFormats = new HashMap<>();\n        LayoutFormatterPreferences layoutPreferences = mock(LayoutFormatterPreferences.class, Answers.RETURNS_DEEP_STUBS);\n        SavePreferences savePreferences = mock(SavePreferences.class);\n        ExportFormats.initAllExports(customFormats, layoutPreferences, savePreferences);\n\n        exportFormat = ExportFormats.getExportFormat(\"oocsv\");\n\n        databaseContext = new BibDatabaseContext();\n        charset = Charsets.UTF_8;\n    }\n","realPath":"src/test/java/org/jabref/logic/exporter/CsvExportFormatTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":35,"status":"B"}],"commitId":"b8cd026d36ea283814b3fa66f1d8149dcda44cd4","commitMessage":"@@@Fix for issue 2762: Change CSV export to separate all names using semicolon (#2793)\n\n* Change CSV export to separate all names using semicolon (#2762)\n\nAdd LayoutFormatter AuthorAndToSemicolonReplacer that replaces all \" and \" with \"; \". This formatter is used to format authors and editors for the openoffice-csv layout.\n\n* add changelog entry for author and editor separation in csv exports (#2762)\n\n* split test cases for CsvExportFormatTest and AuthorAndToSemicolonReplacerTest (#2793)\n\n* add reference to issue 2762 in changelog (#2793)\n","date":"2017-04-26 01:33:02","modifiedFileCount":"1","status":"M","submitter":"125m125"},{"authorTime":"2017-07-20 22:01:30","codes":[{"authorDate":"2017-07-20 22:01:30","commitOrder":4,"curCode":"    public void setUp() {\n        Map<String, ExportFormat> customFormats = new HashMap<>();\n        LayoutFormatterPreferences layoutPreferences = mock(LayoutFormatterPreferences.class, Answers.RETURNS_DEEP_STUBS);\n        SavePreferences savePreferences = mock(SavePreferences.class);\n        ExportFormats.initAllExports(customFormats, layoutPreferences, savePreferences);\n\n        exportFormat = ExportFormats.getExportFormat(\"html\");\n\n        databaseContext = new BibDatabaseContext();\n        charset = StandardCharsets.UTF_8;\n        BibEntry entry = new BibEntry();\n        entry.setField(\"title\", \"my paper title\");\n        entry.setField(\"author\", \"Stefan Kolb\");\n        entry.setCiteKey(\"mykey\");\n        entries = Arrays.asList(entry);\n    }\n","date":"2017-07-20 22:01:30","endLine":51,"groupId":"7325","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"setUp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/dd/b38e608b21d31fd5fe4be57235c21e0f5ef5ba.src","preCode":"    public void setUp() {\n        Map<String, ExportFormat> customFormats = new HashMap<>();\n        LayoutFormatterPreferences layoutPreferences = mock(LayoutFormatterPreferences.class, Answers.RETURNS_DEEP_STUBS);\n        SavePreferences savePreferences = mock(SavePreferences.class);\n        ExportFormats.initAllExports(customFormats, layoutPreferences, savePreferences);\n\n        exportFormat = ExportFormats.getExportFormat(\"html\");\n\n        databaseContext = new BibDatabaseContext();\n        charset = Charsets.UTF_8;\n        BibEntry entry = new BibEntry();\n        entry.setField(\"title\", \"my paper title\");\n        entry.setField(\"author\", \"Stefan Kolb\");\n        entry.setCiteKey(\"mykey\");\n        entries = Arrays.asList(entry);\n    }\n","realPath":"src/test/java/org/jabref/logic/exporter/HtmlExportFormatTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":36,"status":"M"},{"authorDate":"2017-07-20 22:01:30","commitOrder":4,"curCode":"    public void setUp() {\n        Map<String, ExportFormat> customFormats = new HashMap<>();\n        LayoutFormatterPreferences layoutPreferences = mock(LayoutFormatterPreferences.class, Answers.RETURNS_DEEP_STUBS);\n        SavePreferences savePreferences = mock(SavePreferences.class);\n        ExportFormats.initAllExports(customFormats, layoutPreferences, savePreferences);\n\n        exportFormat = ExportFormats.getExportFormat(\"oocsv\");\n\n        databaseContext = new BibDatabaseContext();\n        charset = StandardCharsets.UTF_8;\n    }\n","date":"2017-07-20 22:01:30","endLine":45,"groupId":"7325","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"setUp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/b4/7819a932e1cd8e8a9dcf308893182df1efdc8a.src","preCode":"    public void setUp() {\n        Map<String, ExportFormat> customFormats = new HashMap<>();\n        LayoutFormatterPreferences layoutPreferences = mock(LayoutFormatterPreferences.class, Answers.RETURNS_DEEP_STUBS);\n        SavePreferences savePreferences = mock(SavePreferences.class);\n        ExportFormats.initAllExports(customFormats, layoutPreferences, savePreferences);\n\n        exportFormat = ExportFormats.getExportFormat(\"oocsv\");\n\n        databaseContext = new BibDatabaseContext();\n        charset = Charsets.UTF_8;\n    }\n","realPath":"src/test/java/org/jabref/logic/exporter/CsvExportFormatTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":35,"status":"M"}],"commitId":"53589c27f4a35409c2e41ce47b7f36fadc02adb8","commitMessage":"@@@Modernizer improvements\n","date":"2017-07-20 22:01:30","modifiedFileCount":"12","status":"M","submitter":"Stefan Kolb"},{"authorTime":"2018-01-03 05:13:37","codes":[{"authorDate":"2018-01-03 05:13:37","commitOrder":5,"curCode":"    public void setUp() {\n        Map<String, TemplateExporter> customFormats = new HashMap<>();\n        LayoutFormatterPreferences layoutPreferences = mock(LayoutFormatterPreferences.class, Answers.RETURNS_DEEP_STUBS);\n        SavePreferences savePreferences = mock(SavePreferences.class);\n        ExporterFactory exporterFactory = ExporterFactory.create(customFormats, layoutPreferences, savePreferences);\n\n        exportFormat = exporterFactory.getExporterByName(\"html\").get();\n\n        databaseContext = new BibDatabaseContext();\n        charset = StandardCharsets.UTF_8;\n        BibEntry entry = new BibEntry();\n        entry.setField(\"title\", \"my paper title\");\n        entry.setField(\"author\", \"Stefan Kolb\");\n        entry.setCiteKey(\"mykey\");\n        entries = Arrays.asList(entry);\n    }\n","date":"2018-01-03 05:13:37","endLine":51,"groupId":"2354","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"setUp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/b3/661c61a885789e0e026e602a72f017e5fbb90b.src","preCode":"    public void setUp() {\n        Map<String, ExportFormat> customFormats = new HashMap<>();\n        LayoutFormatterPreferences layoutPreferences = mock(LayoutFormatterPreferences.class, Answers.RETURNS_DEEP_STUBS);\n        SavePreferences savePreferences = mock(SavePreferences.class);\n        ExportFormats.initAllExports(customFormats, layoutPreferences, savePreferences);\n\n        exportFormat = ExportFormats.getExportFormat(\"html\");\n\n        databaseContext = new BibDatabaseContext();\n        charset = StandardCharsets.UTF_8;\n        BibEntry entry = new BibEntry();\n        entry.setField(\"title\", \"my paper title\");\n        entry.setField(\"author\", \"Stefan Kolb\");\n        entry.setCiteKey(\"mykey\");\n        entries = Arrays.asList(entry);\n    }\n","realPath":"src/test/java/org/jabref/logic/exporter/HtmlExportFormatTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":36,"status":"M"},{"authorDate":"2018-01-03 05:13:37","commitOrder":5,"curCode":"    public void setUp() {\n        Map<String, TemplateExporter> customFormats = new HashMap<>();\n        LayoutFormatterPreferences layoutPreferences = mock(LayoutFormatterPreferences.class, Answers.RETURNS_DEEP_STUBS);\n        SavePreferences savePreferences = mock(SavePreferences.class);\n        ExporterFactory exporterFactory = ExporterFactory.create(customFormats, layoutPreferences, savePreferences);\n\n        exportFormat = exporterFactory.getExporterByName(\"oocsv\").get();\n\n        databaseContext = new BibDatabaseContext();\n        charset = StandardCharsets.UTF_8;\n    }\n","date":"2018-01-03 05:13:37","endLine":45,"groupId":"2354","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"setUp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/c6/20578c82602e2a47582d8afd8328d87fae2245.src","preCode":"    public void setUp() {\n        Map<String, ExportFormat> customFormats = new HashMap<>();\n        LayoutFormatterPreferences layoutPreferences = mock(LayoutFormatterPreferences.class, Answers.RETURNS_DEEP_STUBS);\n        SavePreferences savePreferences = mock(SavePreferences.class);\n        ExportFormats.initAllExports(customFormats, layoutPreferences, savePreferences);\n\n        exportFormat = ExportFormats.getExportFormat(\"oocsv\");\n\n        databaseContext = new BibDatabaseContext();\n        charset = StandardCharsets.UTF_8;\n    }\n","realPath":"src/test/java/org/jabref/logic/exporter/CsvExportFormatTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":35,"status":"M"}],"commitId":"d38183928d7915bf33a5366af11d9dde3f695c5e","commitMessage":"@@@Refactor export code to fix #3576 (#3578)\n\n* Refactor exports to fix #3576\n\n* Add changelog\n\n* Fix build\n\n* Implement feedback and fix tests\n\n* Include feedback\n\n* Fix checkstyle...again...joy!\n","date":"2018-01-03 05:13:37","modifiedFileCount":"83","status":"M","submitter":"Tobias Diez"},{"authorTime":"2018-04-12 23:25:44","codes":[{"authorDate":"2018-04-12 23:25:44","commitOrder":6,"curCode":"    public void setUp() {\n        Map<String, TemplateExporter> customFormats = new HashMap<>();\n        LayoutFormatterPreferences layoutPreferences = mock(LayoutFormatterPreferences.class, Answers.RETURNS_DEEP_STUBS);\n        SavePreferences savePreferences = mock(SavePreferences.class);\n        XmpPreferences xmpPreferences = mock(XmpPreferences.class);\n        ExporterFactory exporterFactory = ExporterFactory.create(customFormats, layoutPreferences, savePreferences, xmpPreferences);\n\n        exportFormat = exporterFactory.getExporterByName(\"html\").get();\n\n        databaseContext = new BibDatabaseContext();\n        charset = StandardCharsets.UTF_8;\n        BibEntry entry = new BibEntry();\n        entry.setField(\"title\", \"my paper title\");\n        entry.setField(\"author\", \"Stefan Kolb\");\n        entry.setCiteKey(\"mykey\");\n        entries = Arrays.asList(entry);\n    }\n","date":"2018-04-12 23:25:44","endLine":53,"groupId":"10063","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"setUp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/05/3f16f935acc8b39e42c0ca7c85940ca17284aa.src","preCode":"    public void setUp() {\n        Map<String, TemplateExporter> customFormats = new HashMap<>();\n        LayoutFormatterPreferences layoutPreferences = mock(LayoutFormatterPreferences.class, Answers.RETURNS_DEEP_STUBS);\n        SavePreferences savePreferences = mock(SavePreferences.class);\n        ExporterFactory exporterFactory = ExporterFactory.create(customFormats, layoutPreferences, savePreferences);\n\n        exportFormat = exporterFactory.getExporterByName(\"html\").get();\n\n        databaseContext = new BibDatabaseContext();\n        charset = StandardCharsets.UTF_8;\n        BibEntry entry = new BibEntry();\n        entry.setField(\"title\", \"my paper title\");\n        entry.setField(\"author\", \"Stefan Kolb\");\n        entry.setCiteKey(\"mykey\");\n        entries = Arrays.asList(entry);\n    }\n","realPath":"src/test/java/org/jabref/logic/exporter/HtmlExportFormatTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":37,"status":"M"},{"authorDate":"2018-04-12 23:25:44","commitOrder":6,"curCode":"    public void setUp() {\n        Map<String, TemplateExporter> customFormats = new HashMap<>();\n        LayoutFormatterPreferences layoutPreferences = mock(LayoutFormatterPreferences.class, Answers.RETURNS_DEEP_STUBS);\n        SavePreferences savePreferences = mock(SavePreferences.class);\n        XmpPreferences xmpPreferences = mock(XmpPreferences.class);\n        ExporterFactory exporterFactory = ExporterFactory.create(customFormats, layoutPreferences, savePreferences, xmpPreferences);\n\n        exportFormat = exporterFactory.getExporterByName(\"oocsv\").get();\n\n        databaseContext = new BibDatabaseContext();\n        charset = StandardCharsets.UTF_8;\n    }\n","date":"2018-04-12 23:25:44","endLine":47,"groupId":"10063","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"setUp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/ce/7d1058d253421c1187b0ed175cbdf6a258d66e.src","preCode":"    public void setUp() {\n        Map<String, TemplateExporter> customFormats = new HashMap<>();\n        LayoutFormatterPreferences layoutPreferences = mock(LayoutFormatterPreferences.class, Answers.RETURNS_DEEP_STUBS);\n        SavePreferences savePreferences = mock(SavePreferences.class);\n        ExporterFactory exporterFactory = ExporterFactory.create(customFormats, layoutPreferences, savePreferences);\n\n        exportFormat = exporterFactory.getExporterByName(\"oocsv\").get();\n\n        databaseContext = new BibDatabaseContext();\n        charset = StandardCharsets.UTF_8;\n    }\n","realPath":"src/test/java/org/jabref/logic/exporter/CsvExportFormatTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":36,"status":"M"}],"commitId":"73fb95f987df4f9cec72e625e0511534411d4636","commitMessage":"@@@Add XMP Exporter (#3895)\n\n","date":"2018-04-12 23:25:44","modifiedFileCount":"7","status":"M","submitter":"Johannes Manner"},{"authorTime":"2018-12-09 16:49:51","codes":[{"authorDate":"2018-12-09 16:49:51","commitOrder":7,"curCode":"    public void setUp() {\n        List<TemplateExporter> customFormats = new ArrayList<>();\n        LayoutFormatterPreferences layoutPreferences = mock(LayoutFormatterPreferences.class, Answers.RETURNS_DEEP_STUBS);\n        SavePreferences savePreferences = mock(SavePreferences.class);\n        XmpPreferences xmpPreferences = mock(XmpPreferences.class);\n        ExporterFactory exporterFactory = ExporterFactory.create(customFormats, layoutPreferences, savePreferences, xmpPreferences);\n\n        exportFormat = exporterFactory.getExporterByName(\"html\").get();\n\n        databaseContext = new BibDatabaseContext();\n        charset = StandardCharsets.UTF_8;\n        BibEntry entry = new BibEntry();\n        entry.setField(\"title\", \"my paper title\");\n        entry.setField(\"author\", \"Stefan Kolb\");\n        entry.setCiteKey(\"mykey\");\n        entries = Arrays.asList(entry);\n    }\n","date":"2018-12-09 16:49:51","endLine":50,"groupId":"10063","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"setUp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/28/067d99bde5d3eeff10897b59b93c01d0f2577b.src","preCode":"    public void setUp() {\n        Map<String, TemplateExporter> customFormats = new HashMap<>();\n        LayoutFormatterPreferences layoutPreferences = mock(LayoutFormatterPreferences.class, Answers.RETURNS_DEEP_STUBS);\n        SavePreferences savePreferences = mock(SavePreferences.class);\n        XmpPreferences xmpPreferences = mock(XmpPreferences.class);\n        ExporterFactory exporterFactory = ExporterFactory.create(customFormats, layoutPreferences, savePreferences, xmpPreferences);\n\n        exportFormat = exporterFactory.getExporterByName(\"html\").get();\n\n        databaseContext = new BibDatabaseContext();\n        charset = StandardCharsets.UTF_8;\n        BibEntry entry = new BibEntry();\n        entry.setField(\"title\", \"my paper title\");\n        entry.setField(\"author\", \"Stefan Kolb\");\n        entry.setCiteKey(\"mykey\");\n        entries = Arrays.asList(entry);\n    }\n","realPath":"src/test/java/org/jabref/logic/exporter/HtmlExportFormatTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":34,"status":"M"},{"authorDate":"2018-12-09 16:49:51","commitOrder":7,"curCode":"    public void setUp() {\n        List<TemplateExporter> customFormats = new ArrayList<>();\n        LayoutFormatterPreferences layoutPreferences = mock(LayoutFormatterPreferences.class, Answers.RETURNS_DEEP_STUBS);\n        SavePreferences savePreferences = mock(SavePreferences.class);\n        XmpPreferences xmpPreferences = mock(XmpPreferences.class);\n        ExporterFactory exporterFactory = ExporterFactory.create(customFormats, layoutPreferences, savePreferences, xmpPreferences);\n\n        exportFormat = exporterFactory.getExporterByName(\"oocsv\").get();\n\n        databaseContext = new BibDatabaseContext();\n        charset = StandardCharsets.UTF_8;\n    }\n","date":"2018-12-09 16:49:51","endLine":46,"groupId":"10063","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"setUp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/a4/08b03522112f220ded9546f4a71db106e4f3a5.src","preCode":"    public void setUp() {\n        Map<String, TemplateExporter> customFormats = new HashMap<>();\n        LayoutFormatterPreferences layoutPreferences = mock(LayoutFormatterPreferences.class, Answers.RETURNS_DEEP_STUBS);\n        SavePreferences savePreferences = mock(SavePreferences.class);\n        XmpPreferences xmpPreferences = mock(XmpPreferences.class);\n        ExporterFactory exporterFactory = ExporterFactory.create(customFormats, layoutPreferences, savePreferences, xmpPreferences);\n\n        exportFormat = exporterFactory.getExporterByName(\"oocsv\").get();\n\n        databaseContext = new BibDatabaseContext();\n        charset = StandardCharsets.UTF_8;\n    }\n","realPath":"src/test/java/org/jabref/logic/exporter/CsvExportFormatTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":35,"status":"M"}],"commitId":"41f2d613e72adb2abf6fb553a0a06372258e8d1d","commitMessage":"@@@[WIP] Convert Exporter Customization Dialog to javafx (#4394)\n\n* Exporter to JavaFX commit 1\n\n* Work on Export Customization Dialog VM\n\n* Work on VM\n\n* Combine methods in CustomExporterList and move to preferences\n\n* work on VM\n\n* Add methods to VM\n\n* Fix typos\n\n* started work on exporter subdialog\n\n* Continue work on exporter subdialog\n\n* Implement save exporter from add/modify exporter dialog\n\n* Add two comments\n\n* More work on VMs and prefs\n\n* Fix browse method in export customization subdialog\n\n* Remove int reference in VM\n\n* Create FXML for main exporter customization dialog\n\n* Work on View.  not complete\n\n* Work on using EasyBind\n\n* fix some binding issues add stubs\n\n* More work on Export Customization Dialog\n\n* FXML changes among other things\n\n* Work on View for subdialog\n\n* Changes to View and logic\n\n* Deal with stubs.  convert some EVMs to Optionals\n\n* Change Optional in subdialog\n\n* Add FXML and View\n\n* Remove typos and syntax error\n\n* Move various code to logic\n\n* Fix modify exporter\n\n* Fix remove and close bugs\n\n* Fix customExports references\n\n* Fix get custom prefs\n\n* Remove prefs.customExports object from JabRef\n\n* Small FXML changes\n\n* Remove unused old Swing dialogs\n\n* Fix indentation\n\n* Make clear comments and Javadoc\n\n* Remove CustomExportList\n\n* Use new TemplateExporter constructor\n\n* Fix spacing and a var name\n\n* Add constant vars to prefs\n\n* Remove comments\n\n* Change log message\n\n* Fix tests\n\n* Add spacing between imports\n\n* Update localization\n\n* Replace Optional parameter with null\n\n* Replace Optional return with null\n\n* Remove AnchorPane\n\n* Localize FXML labels\n\n* Add subdialog injections\n\n* Set browse action in FXML\n\n* Add to l10n\n\n* Add cancel button to subdialog\n\n* Correction to VM try-catch\n\n* Inline setTextFields\n\n* Remove SortedList TODO\n\n* Inline closeDialog\n\n* loadExporters to private\n\n* forEach to Stream and other fixes\n\n* inline init\n\n* Fixes to ExporterViewModel\n\n* Remove Optional\n\n* Add constants to TemplateExporter\n\n* Simplify getExtensions without dot\n\n* Change try-catch to empty list check\n\n* Remove unnecessary method\n\n* Fix property getters\n\n* Fix property getters again\n\n* Fix typo\n\n* Update references to customFormats\n\n* Add import\n\n* Travis CI fixes\n\n* Further Travis CI fixes\n\n* Remove extra comments\n\n* Remove extra newlines\n","date":"2018-12-09 16:49:51","modifiedFileCount":"15","status":"M","submitter":"Abraham Polk"},{"authorTime":"2018-12-09 16:49:51","codes":[{"authorDate":"2019-08-02 15:20:10","commitOrder":8,"curCode":"    public void setUp() {\n        List<TemplateExporter> customFormats = new ArrayList<>();\n        LayoutFormatterPreferences layoutPreferences = mock(LayoutFormatterPreferences.class, Answers.RETURNS_DEEP_STUBS);\n        SavePreferences savePreferences = mock(SavePreferences.class);\n        XmpPreferences xmpPreferences = mock(XmpPreferences.class);\n        ExporterFactory exporterFactory = ExporterFactory.create(customFormats, layoutPreferences, savePreferences, xmpPreferences);\n\n        exportFormat = exporterFactory.getExporterByName(\"html\").get();\n\n        databaseContext = new BibDatabaseContext();\n        charset = StandardCharsets.UTF_8;\n        BibEntry entry = new BibEntry();\n        entry.setField(StandardField.TITLE, \"my paper title\");\n        entry.setField(StandardField.AUTHOR, \"Stefan Kolb\");\n        entry.setCiteKey(\"mykey\");\n        entries = Arrays.asList(entry);\n    }\n","date":"2019-08-02 15:20:10","endLine":49,"groupId":"10063","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"setUp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/f4/4b059967db77974f00c4d08d6bcc839211870d.src","preCode":"    public void setUp() {\n        List<TemplateExporter> customFormats = new ArrayList<>();\n        LayoutFormatterPreferences layoutPreferences = mock(LayoutFormatterPreferences.class, Answers.RETURNS_DEEP_STUBS);\n        SavePreferences savePreferences = mock(SavePreferences.class);\n        XmpPreferences xmpPreferences = mock(XmpPreferences.class);\n        ExporterFactory exporterFactory = ExporterFactory.create(customFormats, layoutPreferences, savePreferences, xmpPreferences);\n\n        exportFormat = exporterFactory.getExporterByName(\"html\").get();\n\n        databaseContext = new BibDatabaseContext();\n        charset = StandardCharsets.UTF_8;\n        BibEntry entry = new BibEntry();\n        entry.setField(\"title\", \"my paper title\");\n        entry.setField(\"author\", \"Stefan Kolb\");\n        entry.setCiteKey(\"mykey\");\n        entries = Arrays.asList(entry);\n    }\n","realPath":"src/test/java/org/jabref/logic/exporter/HtmlExportFormatTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":33,"status":"M"},{"authorDate":"2018-12-09 16:49:51","commitOrder":8,"curCode":"    public void setUp() {\n        List<TemplateExporter> customFormats = new ArrayList<>();\n        LayoutFormatterPreferences layoutPreferences = mock(LayoutFormatterPreferences.class, Answers.RETURNS_DEEP_STUBS);\n        SavePreferences savePreferences = mock(SavePreferences.class);\n        XmpPreferences xmpPreferences = mock(XmpPreferences.class);\n        ExporterFactory exporterFactory = ExporterFactory.create(customFormats, layoutPreferences, savePreferences, xmpPreferences);\n\n        exportFormat = exporterFactory.getExporterByName(\"oocsv\").get();\n\n        databaseContext = new BibDatabaseContext();\n        charset = StandardCharsets.UTF_8;\n    }\n","date":"2018-12-09 16:49:51","endLine":46,"groupId":"10063","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"setUp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/a4/08b03522112f220ded9546f4a71db106e4f3a5.src","preCode":"    public void setUp() {\n        List<TemplateExporter> customFormats = new ArrayList<>();\n        LayoutFormatterPreferences layoutPreferences = mock(LayoutFormatterPreferences.class, Answers.RETURNS_DEEP_STUBS);\n        SavePreferences savePreferences = mock(SavePreferences.class);\n        XmpPreferences xmpPreferences = mock(XmpPreferences.class);\n        ExporterFactory exporterFactory = ExporterFactory.create(customFormats, layoutPreferences, savePreferences, xmpPreferences);\n\n        exportFormat = exporterFactory.getExporterByName(\"oocsv\").get();\n\n        databaseContext = new BibDatabaseContext();\n        charset = StandardCharsets.UTF_8;\n    }\n","realPath":"src/test/java/org/jabref/logic/exporter/CsvExportFormatTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":35,"status":"N"}],"commitId":"4b39b78e4afcd6c36b385f5c46f1d9a4eac2e29b","commitMessage":"@@@Move to extended enums for fields and entry types (#5148)\n\n* Introduce interface for fields\n\n* Continue using fields interface instead of strings\n\n* Introduce OrFields class\n\n* Move FieldProperty\n\n* Convert entry types to extended enum\n\n* Start fixing build\n\n* Fix build\n\n* Start fixing tests\n\n* Everything compiles again\n\n* Make model tests pass\n\n* Fix most tests\n\n* Fix build\n\n* Fix a few more tests\n\n* Fix a few more tests\n\n* Fix a few more tests\n\n* Fix a few more tests\n\n* Fix checkstyle issues\n\n* Fix more tests\n\n* Fix more tests\n\n* Disable test that fails on CI\n\n* Disable test that fails on CI\n","date":"2019-08-02 15:20:10","modifiedFileCount":"439","status":"M","submitter":"Tobias Diez"},{"authorTime":"2018-12-09 16:49:51","codes":[{"authorDate":"2020-09-08 21:34:34","commitOrder":9,"curCode":"    public void setUp() {\n        List<TemplateExporter> customFormats = new ArrayList<>();\n        LayoutFormatterPreferences layoutPreferences = mock(LayoutFormatterPreferences.class, Answers.RETURNS_DEEP_STUBS);\n        SavePreferences savePreferences = mock(SavePreferences.class);\n        XmpPreferences xmpPreferences = mock(XmpPreferences.class);\n        ExporterFactory exporterFactory = ExporterFactory.create(customFormats, layoutPreferences, savePreferences, xmpPreferences);\n\n        exportFormat = exporterFactory.getExporterByName(\"html\").get();\n\n        databaseContext = new BibDatabaseContext();\n        charset = StandardCharsets.UTF_8;\n        BibEntry entry = new BibEntry();\n        entry.setField(StandardField.TITLE, \"my paper title\");\n        entry.setField(StandardField.AUTHOR, \"Stefan Kolb\");\n        entry.setCitationKey(\"mykey\");\n        entries = Arrays.asList(entry);\n    }\n","date":"2020-09-08 21:34:34","endLine":49,"groupId":"10063","id":13,"instanceNumber":1,"isCurCommit":0,"methodName":"setUp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/6b/1b05a5f0097dc5883bf883bfa47401cd25d36c.src","preCode":"    public void setUp() {\n        List<TemplateExporter> customFormats = new ArrayList<>();\n        LayoutFormatterPreferences layoutPreferences = mock(LayoutFormatterPreferences.class, Answers.RETURNS_DEEP_STUBS);\n        SavePreferences savePreferences = mock(SavePreferences.class);\n        XmpPreferences xmpPreferences = mock(XmpPreferences.class);\n        ExporterFactory exporterFactory = ExporterFactory.create(customFormats, layoutPreferences, savePreferences, xmpPreferences);\n\n        exportFormat = exporterFactory.getExporterByName(\"html\").get();\n\n        databaseContext = new BibDatabaseContext();\n        charset = StandardCharsets.UTF_8;\n        BibEntry entry = new BibEntry();\n        entry.setField(StandardField.TITLE, \"my paper title\");\n        entry.setField(StandardField.AUTHOR, \"Stefan Kolb\");\n        entry.setCiteKey(\"mykey\");\n        entries = Arrays.asList(entry);\n    }\n","realPath":"src/test/java/org/jabref/logic/exporter/HtmlExportFormatTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":33,"status":"M"},{"authorDate":"2018-12-09 16:49:51","commitOrder":9,"curCode":"    public void setUp() {\n        List<TemplateExporter> customFormats = new ArrayList<>();\n        LayoutFormatterPreferences layoutPreferences = mock(LayoutFormatterPreferences.class, Answers.RETURNS_DEEP_STUBS);\n        SavePreferences savePreferences = mock(SavePreferences.class);\n        XmpPreferences xmpPreferences = mock(XmpPreferences.class);\n        ExporterFactory exporterFactory = ExporterFactory.create(customFormats, layoutPreferences, savePreferences, xmpPreferences);\n\n        exportFormat = exporterFactory.getExporterByName(\"oocsv\").get();\n\n        databaseContext = new BibDatabaseContext();\n        charset = StandardCharsets.UTF_8;\n    }\n","date":"2018-12-09 16:49:51","endLine":46,"groupId":"10063","id":14,"instanceNumber":2,"isCurCommit":0,"methodName":"setUp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/a4/08b03522112f220ded9546f4a71db106e4f3a5.src","preCode":"    public void setUp() {\n        List<TemplateExporter> customFormats = new ArrayList<>();\n        LayoutFormatterPreferences layoutPreferences = mock(LayoutFormatterPreferences.class, Answers.RETURNS_DEEP_STUBS);\n        SavePreferences savePreferences = mock(SavePreferences.class);\n        XmpPreferences xmpPreferences = mock(XmpPreferences.class);\n        ExporterFactory exporterFactory = ExporterFactory.create(customFormats, layoutPreferences, savePreferences, xmpPreferences);\n\n        exportFormat = exporterFactory.getExporterByName(\"oocsv\").get();\n\n        databaseContext = new BibDatabaseContext();\n        charset = StandardCharsets.UTF_8;\n    }\n","realPath":"src/test/java/org/jabref/logic/exporter/CsvExportFormatTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":35,"status":"N"}],"commitId":"6dec1747d8a1c89f6c62fc1d1939d88411f17eba","commitMessage":"@@@Complete rebranding of `bibtexkey` as `citationkey` (#6875)\n\n","date":"2020-09-08 21:34:34","modifiedFileCount":"127","status":"M","submitter":"Tobias Diez"},{"authorTime":"2021-08-31 20:52:33","codes":[{"authorDate":"2021-08-31 20:52:33","commitOrder":10,"curCode":"    public void setUp() {\n        List<TemplateExporter> customFormats = new ArrayList<>();\n        LayoutFormatterPreferences layoutPreferences = mock(LayoutFormatterPreferences.class, Answers.RETURNS_DEEP_STUBS);\n        SavePreferences savePreferences = mock(SavePreferences.class);\n        XmpPreferences xmpPreferences = mock(XmpPreferences.class);\n        BibEntryTypesManager entryTypesManager = mock(BibEntryTypesManager.class);\n        ExporterFactory exporterFactory = ExporterFactory.create(customFormats, layoutPreferences, savePreferences, xmpPreferences, BibDatabaseMode.BIBTEX, entryTypesManager);\n\n        exportFormat = exporterFactory.getExporterByName(\"html\").get();\n\n        databaseContext = new BibDatabaseContext();\n        charset = StandardCharsets.UTF_8;\n        BibEntry entry = new BibEntry();\n        entry.setField(StandardField.TITLE, \"my paper title\");\n        entry.setField(StandardField.AUTHOR, \"Stefan Kolb\");\n        entry.setCitationKey(\"mykey\");\n        entries = Arrays.asList(entry);\n    }\n","date":"2021-08-31 20:52:33","endLine":52,"groupId":"10706","id":15,"instanceNumber":1,"isCurCommit":1,"methodName":"setUp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/82/1b9f4933b21e5a1a5ac3fc48fc2daa8d526903.src","preCode":"    public void setUp() {\n        List<TemplateExporter> customFormats = new ArrayList<>();\n        LayoutFormatterPreferences layoutPreferences = mock(LayoutFormatterPreferences.class, Answers.RETURNS_DEEP_STUBS);\n        SavePreferences savePreferences = mock(SavePreferences.class);\n        XmpPreferences xmpPreferences = mock(XmpPreferences.class);\n        ExporterFactory exporterFactory = ExporterFactory.create(customFormats, layoutPreferences, savePreferences, xmpPreferences);\n\n        exportFormat = exporterFactory.getExporterByName(\"html\").get();\n\n        databaseContext = new BibDatabaseContext();\n        charset = StandardCharsets.UTF_8;\n        BibEntry entry = new BibEntry();\n        entry.setField(StandardField.TITLE, \"my paper title\");\n        entry.setField(StandardField.AUTHOR, \"Stefan Kolb\");\n        entry.setCitationKey(\"mykey\");\n        entries = Arrays.asList(entry);\n    }\n","realPath":"src/test/java/org/jabref/logic/exporter/HtmlExportFormatTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":35,"status":"M"},{"authorDate":"2021-08-31 20:52:33","commitOrder":10,"curCode":"    public void setUp() {\n        List<TemplateExporter> customFormats = new ArrayList<>();\n        LayoutFormatterPreferences layoutPreferences = mock(LayoutFormatterPreferences.class, Answers.RETURNS_DEEP_STUBS);\n        SavePreferences savePreferences = mock(SavePreferences.class);\n        XmpPreferences xmpPreferences = mock(XmpPreferences.class);\n        BibEntryTypesManager entryTypesManager = mock(BibEntryTypesManager.class);\n        ExporterFactory exporterFactory = ExporterFactory.create(customFormats, layoutPreferences, savePreferences, xmpPreferences, BibDatabaseMode.BIBTEX, entryTypesManager);\n\n        exportFormat = exporterFactory.getExporterByName(\"oocsv\").get();\n\n        databaseContext = new BibDatabaseContext();\n        charset = StandardCharsets.UTF_8;\n    }\n","date":"2021-08-31 20:52:33","endLine":48,"groupId":"10706","id":16,"instanceNumber":2,"isCurCommit":1,"methodName":"setUp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/d6/41b1a7e59342f7e95d2ce19ae36ad3ec8dc498.src","preCode":"    public void setUp() {\n        List<TemplateExporter> customFormats = new ArrayList<>();\n        LayoutFormatterPreferences layoutPreferences = mock(LayoutFormatterPreferences.class, Answers.RETURNS_DEEP_STUBS);\n        SavePreferences savePreferences = mock(SavePreferences.class);\n        XmpPreferences xmpPreferences = mock(XmpPreferences.class);\n        ExporterFactory exporterFactory = ExporterFactory.create(customFormats, layoutPreferences, savePreferences, xmpPreferences);\n\n        exportFormat = exporterFactory.getExporterByName(\"oocsv\").get();\n\n        databaseContext = new BibDatabaseContext();\n        charset = StandardCharsets.UTF_8;\n    }\n","realPath":"src/test/java/org/jabref/logic/exporter/CsvExportFormatTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":36,"status":"M"}],"commitId":"577f51c9c2270f50c4e025a2038c8a75782b0499","commitMessage":"@@@Write embedded bib in addition to XMP metadata (#8037)\n\n* EmbeddedBibFilePdfExporter\n\n* Standard Action\n\n* Gui triggers\n\n* Fix empty optional\n\n* CLI triggers\n\n* Localization\n\n* CHANGELOG\n\n* use System streams instead of Logger for user out\n\n* Typo in CHANGELOG.md\n\nCo-authored-by: Christoph <siedlerkiller@gmail.com>\n\nCo-authored-by: Benedikt Tutzer <benedikt.tutzer@tuwien.ac.at>\nCo-authored-by: Christoph <siedlerkiller@gmail.com>","date":"2021-08-31 20:52:33","modifiedFileCount":"17","status":"M","submitter":"Benedikt Tutzer"}]
