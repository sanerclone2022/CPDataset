[{"authorTime":"2020-10-21 05:27:30","codes":[{"authorDate":"2020-12-07 01:48:14","commitOrder":22,"curCode":"    public void onDatabaseLoadingSucceed(ParserResult result) {\n        BibDatabaseContext context = result.getDatabaseContext();\n        OpenDatabaseAction.performPostOpenActions(this, result);\n\n        feedData(context);\n        \r\n        Globals.stateManager.activeDatabaseProperty().bind(\n                EasyBind.map(frame.getTabbedPane().getSelectionModel().selectedItemProperty(),\n                        selectedTab -> Optional.ofNullable(selectedTab)\n                                               .map(tab -> (LibraryTab) tab)\n                                               .map(LibraryTab::getBibDatabaseContext)));\n    }\n","date":"2020-12-07 01:48:14","endLine":189,"groupId":"4207","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"onDatabaseLoadingSucceed","params":"(ParserResultresult)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/b8/f1f8aabf574d4ae72d3900b1e8ba80ff4b6e97.src","preCode":"    public void onDatabaseLoadingSucceed(ParserResult result) {\n        BibDatabaseContext context = result.getDatabaseContext();\n        OpenDatabaseAction.performPostOpenActions(this, result);\n\n        feedData(context);\n        \r\n        Globals.stateManager.activeDatabaseProperty().bind(\n                EasyBind.map(frame.getTabbedPane().getSelectionModel().selectedItemProperty(),\n                        selectedTab -> Optional.ofNullable(selectedTab)\n                                               .map(tab -> (LibraryTab) tab)\n                                               .map(LibraryTab::getBibDatabaseContext)));\n    }\n","realPath":"src/main/java/org/jabref/gui/LibraryTab.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":178,"status":"B"},{"authorDate":"2020-10-21 05:27:30","commitOrder":22,"curCode":"    public void init() {\n        sidePaneManager = new SidePaneManager(Globals.prefs, this);\n        sidePane = sidePaneManager.getPane();\n\n        tabbedPane = new TabPane();\n        tabbedPane.setTabDragPolicy(TabPane.TabDragPolicy.REORDER);\n\n        initLayout();\n        initKeyBindings();\n        initDragAndDrop();\n\n        \r\n\n        \r\n        openDatabaseList = EasyBind.map(tabbedPane.getTabs(), tab -> ((LibraryTab) tab).getBibDatabaseContext());\n        EasyBind.bindContent(stateManager.getOpenDatabases(), openDatabaseList);\n\n        stateManager.activeDatabaseProperty().bind(\n                EasyBind.map(tabbedPane.getSelectionModel().selectedItemProperty(),\n                        selectedTab -> Optional.ofNullable(selectedTab)\n                                               .map(tab -> (LibraryTab) tab)\n                                               .map(LibraryTab::getBibDatabaseContext)));\n\n        \r\n        EasyBind.subscribe(stateManager.activeSearchQueryProperty(),\n                query -> {\n                    if (getCurrentLibraryTab() != null) {\n                        getCurrentLibraryTab().setCurrentSearchQuery(query);\n                    }\n                });\n\n        \r\n        Platform.runLater(() -> stateManager.focusOwnerProperty().bind(\n                EasyBind.map(mainStage.getScene().focusOwnerProperty(), Optional::ofNullable)));\n        \r\n\r\n\r\n\r\n\n        EasyBind.subscribe(tabbedPane.getSelectionModel().selectedItemProperty(), tab -> {\n            if (tab == null) {\n                stateManager.setSelectedEntries(Collections.emptyList());\n                mainStage.titleProperty().unbind();\n                mainStage.setTitle(FRAME_TITLE);\n                return;\n            }\n\n            LibraryTab libraryTab = (LibraryTab) tab;\n\n            \r\n            stateManager.setSelectedEntries(libraryTab.getSelectedEntries());\n\n            \r\n            stateManager.activeSearchQueryProperty().set(libraryTab.getCurrentSearchQuery());\n\n            \r\n            libraryTab.updateSearchManager();\n\n            libraryTab.getUndoManager().postUndoRedoEvent();\n            libraryTab.getMainTable().requestFocus();\n\n            \r\n            StringBinding windowTitle = Bindings.createStringBinding(\n                    () -> libraryTab.textProperty().getValue() + \" \\u2013 \" + FRAME_TITLE,\n                    libraryTab.textProperty());\n            mainStage.titleProperty().bind(windowTitle);\n        });\n        initShowTrackingNotification();\n    }\n","date":"2020-10-21 05:27:30","endLine":636,"groupId":"1318","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"init","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/48/55a16e3ca5a8085f21e425370b8ab55ac24417.src","preCode":"    public void init() {\n        sidePaneManager = new SidePaneManager(Globals.prefs, this);\n        sidePane = sidePaneManager.getPane();\n\n        tabbedPane = new TabPane();\n        tabbedPane.setTabDragPolicy(TabPane.TabDragPolicy.REORDER);\n\n        initLayout();\n        initKeyBindings();\n        initDragAndDrop();\n\n        \r\n\n        \r\n        openDatabaseList = EasyBind.map(tabbedPane.getTabs(), tab -> ((LibraryTab) tab).getBibDatabaseContext());\n        EasyBind.bindContent(stateManager.getOpenDatabases(), openDatabaseList);\n\n        stateManager.activeDatabaseProperty().bind(\n                EasyBind.map(tabbedPane.getSelectionModel().selectedItemProperty(),\n                        selectedTab -> Optional.ofNullable(selectedTab)\n                                               .map(tab -> (LibraryTab) tab)\n                                               .map(LibraryTab::getBibDatabaseContext)));\n\n        \r\n        EasyBind.subscribe(stateManager.activeSearchQueryProperty(),\n                query -> {\n                    if (getCurrentLibraryTab() != null) {\n                        getCurrentLibraryTab().setCurrentSearchQuery(query);\n                    }\n                });\n\n        \r\n        Platform.runLater(() -> stateManager.focusOwnerProperty().bind(\n                EasyBind.map(mainStage.getScene().focusOwnerProperty(), Optional::ofNullable)));\n        \r\n\r\n\r\n\r\n\n        EasyBind.subscribe(tabbedPane.getSelectionModel().selectedItemProperty(), tab -> {\n            if (tab == null) {\n                stateManager.setSelectedEntries(Collections.emptyList());\n                mainStage.titleProperty().unbind();\n                mainStage.setTitle(FRAME_TITLE);\n                return;\n            }\n\n            LibraryTab libraryTab = (LibraryTab) tab;\n\n            \r\n            stateManager.setSelectedEntries(libraryTab.getSelectedEntries());\n\n            \r\n            stateManager.activeSearchQueryProperty().set(libraryTab.getCurrentSearchQuery());\n\n            \r\n            libraryTab.updateSearchManager();\n\n            libraryTab.getUndoManager().postUndoRedoEvent();\n            libraryTab.getMainTable().requestFocus();\n\n            \r\n            StringBinding windowTitle = Bindings.createStringBinding(\n                    () -> libraryTab.textProperty().getValue() + \" \\u2013 \" + FRAME_TITLE,\n                    libraryTab.textProperty());\n            mainStage.titleProperty().bind(windowTitle);\n        });\n        initShowTrackingNotification();\n    }\n","realPath":"src/main/java/org/jabref/gui/JabRefFrame.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":568,"status":"NB"}],"commitId":"33b931539a360a95e049944eda96d432258ff834","commitMessage":"@@@Improve library loading UX (#7119)\n\n* refactoring LibraryTab to be able to create an empty tab and feed it data when it's available\n\n* applying the improvement when opening database using action\n\n* checkstyle\n\n* add exception parameter to error dialog\n\n* Adding DataLoadingTask to LibraryTab\n\n* Add getter for dataLoadingTask\n\n* Fixing memory leak by canceling dataLoadingTask when tab is closed\n\n* Relocate LibraryTab method trackOpenNewDatabase() to OpenDatabaseAction\n\n* Refactor LibraryTab to handle dataLoadingTask callbacks\n\n* Put performPostOpenActions() before feedData() for performance reasons\n\n* Fix groups pane not updating bug\n\n* Cleanup code\n\n* Extracted JabRefPreferences.  fixed imports\n\n* Extracted JabRefPreferences.  fixed imports.  removed dead code.  shortened method name\n\nCo-authored-by: Carl Christian Snethlage <50491877+calixtus@users.noreply.github.com>\nCo-authored-by: Carl Christian Snethlage <cc.snethlage@gmail.com>","date":"2020-12-07 01:48:14","modifiedFileCount":"3","status":"M","submitter":"Houssem Nasri"},{"authorTime":"2020-12-15 04:28:26","codes":[{"authorDate":"2020-12-07 01:48:14","commitOrder":23,"curCode":"    public void onDatabaseLoadingSucceed(ParserResult result) {\n        BibDatabaseContext context = result.getDatabaseContext();\n        OpenDatabaseAction.performPostOpenActions(this, result);\n\n        feedData(context);\n        \r\n        Globals.stateManager.activeDatabaseProperty().bind(\n                EasyBind.map(frame.getTabbedPane().getSelectionModel().selectedItemProperty(),\n                        selectedTab -> Optional.ofNullable(selectedTab)\n                                               .map(tab -> (LibraryTab) tab)\n                                               .map(LibraryTab::getBibDatabaseContext)));\n    }\n","date":"2020-12-07 01:48:14","endLine":189,"groupId":"4207","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"onDatabaseLoadingSucceed","params":"(ParserResultresult)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/b8/f1f8aabf574d4ae72d3900b1e8ba80ff4b6e97.src","preCode":"    public void onDatabaseLoadingSucceed(ParserResult result) {\n        BibDatabaseContext context = result.getDatabaseContext();\n        OpenDatabaseAction.performPostOpenActions(this, result);\n\n        feedData(context);\n        \r\n        Globals.stateManager.activeDatabaseProperty().bind(\n                EasyBind.map(frame.getTabbedPane().getSelectionModel().selectedItemProperty(),\n                        selectedTab -> Optional.ofNullable(selectedTab)\n                                               .map(tab -> (LibraryTab) tab)\n                                               .map(LibraryTab::getBibDatabaseContext)));\n    }\n","realPath":"src/main/java/org/jabref/gui/LibraryTab.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":178,"status":"N"},{"authorDate":"2020-12-15 04:28:26","commitOrder":23,"curCode":"    public void init() {\n        sidePaneManager = new SidePaneManager(prefs, this, dialogService, stateManager);\n        sidePane = sidePaneManager.getPane();\n\n        tabbedPane = new TabPane();\n        tabbedPane.setTabDragPolicy(TabPane.TabDragPolicy.REORDER);\n\n        initLayout();\n        initKeyBindings();\n        initDragAndDrop();\n\n        \r\n\n        \r\n        openDatabaseList = EasyBind.map(tabbedPane.getTabs(), tab -> ((LibraryTab) tab).getBibDatabaseContext());\n        EasyBind.bindContent(stateManager.getOpenDatabases(), openDatabaseList);\n\n        stateManager.activeDatabaseProperty().bind(\n                EasyBind.map(tabbedPane.getSelectionModel().selectedItemProperty(),\n                        selectedTab -> Optional.ofNullable(selectedTab)\n                                               .map(tab -> (LibraryTab) tab)\n                                               .map(LibraryTab::getBibDatabaseContext)));\n\n        \r\n        EasyBind.subscribe(stateManager.activeSearchQueryProperty(),\n                query -> {\n                    if (getCurrentLibraryTab() != null) {\n                        getCurrentLibraryTab().setCurrentSearchQuery(query);\n                    }\n                });\n\n        \r\n        Platform.runLater(() -> stateManager.focusOwnerProperty().bind(\n                EasyBind.map(mainStage.getScene().focusOwnerProperty(), Optional::ofNullable)));\n        \r\n\r\n\r\n\r\n\n        EasyBind.subscribe(tabbedPane.getSelectionModel().selectedItemProperty(), tab -> {\n            if (tab == null) {\n                stateManager.setSelectedEntries(Collections.emptyList());\n                mainStage.titleProperty().unbind();\n                mainStage.setTitle(FRAME_TITLE);\n                return;\n            }\n\n            LibraryTab libraryTab = (LibraryTab) tab;\n\n            \r\n            stateManager.setSelectedEntries(libraryTab.getSelectedEntries());\n\n            \r\n            stateManager.activeSearchQueryProperty().set(libraryTab.getCurrentSearchQuery());\n\n            \r\n            libraryTab.updateSearchManager();\n\n            libraryTab.getUndoManager().postUndoRedoEvent();\n            libraryTab.getMainTable().requestFocus();\n\n            \r\n            StringBinding windowTitle = Bindings.createStringBinding(\n                    () -> libraryTab.textProperty().getValue() + \" \\u2013 \" + FRAME_TITLE,\n                    libraryTab.textProperty());\n            mainStage.titleProperty().bind(windowTitle);\n        });\n        initShowTrackingNotification();\n    }\n","date":"2020-12-15 04:28:26","endLine":638,"groupId":"1318","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"init","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/e7/51db5784aaf71c8b902f4de1029da543e9cd1f.src","preCode":"    public void init() {\n        sidePaneManager = new SidePaneManager(Globals.prefs, this);\n        sidePane = sidePaneManager.getPane();\n\n        tabbedPane = new TabPane();\n        tabbedPane.setTabDragPolicy(TabPane.TabDragPolicy.REORDER);\n\n        initLayout();\n        initKeyBindings();\n        initDragAndDrop();\n\n        \r\n\n        \r\n        openDatabaseList = EasyBind.map(tabbedPane.getTabs(), tab -> ((LibraryTab) tab).getBibDatabaseContext());\n        EasyBind.bindContent(stateManager.getOpenDatabases(), openDatabaseList);\n\n        stateManager.activeDatabaseProperty().bind(\n                EasyBind.map(tabbedPane.getSelectionModel().selectedItemProperty(),\n                        selectedTab -> Optional.ofNullable(selectedTab)\n                                               .map(tab -> (LibraryTab) tab)\n                                               .map(LibraryTab::getBibDatabaseContext)));\n\n        \r\n        EasyBind.subscribe(stateManager.activeSearchQueryProperty(),\n                query -> {\n                    if (getCurrentLibraryTab() != null) {\n                        getCurrentLibraryTab().setCurrentSearchQuery(query);\n                    }\n                });\n\n        \r\n        Platform.runLater(() -> stateManager.focusOwnerProperty().bind(\n                EasyBind.map(mainStage.getScene().focusOwnerProperty(), Optional::ofNullable)));\n        \r\n\r\n\r\n\r\n\n        EasyBind.subscribe(tabbedPane.getSelectionModel().selectedItemProperty(), tab -> {\n            if (tab == null) {\n                stateManager.setSelectedEntries(Collections.emptyList());\n                mainStage.titleProperty().unbind();\n                mainStage.setTitle(FRAME_TITLE);\n                return;\n            }\n\n            LibraryTab libraryTab = (LibraryTab) tab;\n\n            \r\n            stateManager.setSelectedEntries(libraryTab.getSelectedEntries());\n\n            \r\n            stateManager.activeSearchQueryProperty().set(libraryTab.getCurrentSearchQuery());\n\n            \r\n            libraryTab.updateSearchManager();\n\n            libraryTab.getUndoManager().postUndoRedoEvent();\n            libraryTab.getMainTable().requestFocus();\n\n            \r\n            StringBinding windowTitle = Bindings.createStringBinding(\n                    () -> libraryTab.textProperty().getValue() + \" \\u2013 \" + FRAME_TITLE,\n                    libraryTab.textProperty());\n            mainStage.titleProperty().bind(windowTitle);\n        });\n        initShowTrackingNotification();\n    }\n","realPath":"src/main/java/org/jabref/gui/JabRefFrame.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":570,"status":"M"}],"commitId":"c0153bd501754d220e34f45ca689851f8ffd5fbd","commitMessage":"@@@Extraction of Globals.prefs.put and .get (#7121)\n\nCo-authored-by: Siedlerchr <siedlerkiller@gmail.com>\nCo-authored-by: Tobias Diez <tobiasdiez@gmx.de>","date":"2020-12-15 04:28:26","modifiedFileCount":"132","status":"M","submitter":"Carl Christian Snethlage"},{"authorTime":"2021-02-27 14:47:27","codes":[{"authorDate":"2021-02-27 14:47:27","commitOrder":24,"curCode":"    public void onDatabaseLoadingSucceed(ParserResult result) {\n        BibDatabaseContext context = result.getDatabaseContext();\n        OpenDatabaseAction.performPostOpenActions(this, result);\n\n        feedData(context);\n        \r\n        Globals.stateManager.activeDatabaseProperty().bind(\n                EasyBind.map(frame.getTabbedPane().getSelectionModel().selectedItemProperty(),\n                        selectedTab -> Optional.ofNullable(selectedTab)\n                                               .filter(tab -> tab instanceof LibraryTab)\n                                               .map(tab -> (LibraryTab) tab)\n                                               .map(LibraryTab::getBibDatabaseContext)));\n    }\n","date":"2021-02-27 14:47:27","endLine":190,"groupId":"4207","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"onDatabaseLoadingSucceed","params":"(ParserResultresult)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/88/648beff2bf34531ee7d5ebf8e01e614c859a25.src","preCode":"    public void onDatabaseLoadingSucceed(ParserResult result) {\n        BibDatabaseContext context = result.getDatabaseContext();\n        OpenDatabaseAction.performPostOpenActions(this, result);\n\n        feedData(context);\n        \r\n        Globals.stateManager.activeDatabaseProperty().bind(\n                EasyBind.map(frame.getTabbedPane().getSelectionModel().selectedItemProperty(),\n                        selectedTab -> Optional.ofNullable(selectedTab)\n                                               .map(tab -> (LibraryTab) tab)\n                                               .map(LibraryTab::getBibDatabaseContext)));\n    }\n","realPath":"src/main/java/org/jabref/gui/LibraryTab.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":178,"status":"M"},{"authorDate":"2021-02-27 14:47:27","commitOrder":24,"curCode":"    public void init() {\n        sidePaneManager = new SidePaneManager(prefs, this, dialogService, stateManager);\n        sidePane = sidePaneManager.getPane();\n\n        tabbedPane = new TabPane();\n        tabbedPane.setTabDragPolicy(TabPane.TabDragPolicy.REORDER);\n\n        initLayout();\n        initKeyBindings();\n        initDragAndDrop();\n\n        \r\n        FilteredList<Tab> filteredTabs = new FilteredList<>(tabbedPane.getTabs());\n        filteredTabs.setPredicate(tab -> tab instanceof LibraryTab);\n\n        \r\n        openDatabaseList = EasyBind.map(filteredTabs, tab -> ((LibraryTab) tab).getBibDatabaseContext());\n        EasyBind.bindContent(stateManager.getOpenDatabases(), openDatabaseList);\n\n        stateManager.activeDatabaseProperty().bind(\n                EasyBind.map(tabbedPane.getSelectionModel().selectedItemProperty(),\n                        selectedTab -> Optional.ofNullable(selectedTab)\n                                               .filter(tab -> tab instanceof LibraryTab)\n                                               .map(tab -> (LibraryTab) tab)\n                                               .map(LibraryTab::getBibDatabaseContext)));\n\n        \r\n        EasyBind.subscribe(stateManager.activeSearchQueryProperty(),\n                query -> {\n                    if (getCurrentLibraryTab() != null) {\n                        getCurrentLibraryTab().setCurrentSearchQuery(query);\n                    }\n                });\n\n        \r\n        Platform.runLater(() -> stateManager.focusOwnerProperty().bind(\n                EasyBind.map(mainStage.getScene().focusOwnerProperty(), Optional::ofNullable)));\n        \r\n\r\n\r\n\r\n\n        EasyBind.subscribe(tabbedPane.getSelectionModel().selectedItemProperty(), tab -> {\n            if ((tab == null) || (!(tab instanceof LibraryTab))) {\n                stateManager.setSelectedEntries(Collections.emptyList());\n                mainStage.titleProperty().unbind();\n                mainStage.setTitle(FRAME_TITLE);\n                return;\n            }\n\n            LibraryTab libraryTab = (LibraryTab) tab;\n\n            \r\n            stateManager.setSelectedEntries(libraryTab.getSelectedEntries());\n\n            \r\n            stateManager.activeSearchQueryProperty().set(libraryTab.getCurrentSearchQuery());\n\n            \r\n            libraryTab.updateSearchManager();\n\n            libraryTab.getUndoManager().postUndoRedoEvent();\n            libraryTab.getMainTable().requestFocus();\n\n            \r\n            StringBinding windowTitle = Bindings.createStringBinding(\n                    () -> libraryTab.textProperty().getValue() + \" \\u2013 \" + FRAME_TITLE,\n                    libraryTab.textProperty());\n            mainStage.titleProperty().bind(windowTitle);\n        });\n        initShowTrackingNotification();\n    }\n","date":"2021-02-27 14:47:27","endLine":636,"groupId":"8296","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"init","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/ab/97e04e22d67b033386331e57c6a53461a5abaa.src","preCode":"    public void init() {\n        sidePaneManager = new SidePaneManager(prefs, this, dialogService, stateManager);\n        sidePane = sidePaneManager.getPane();\n\n        tabbedPane = new TabPane();\n        tabbedPane.setTabDragPolicy(TabPane.TabDragPolicy.REORDER);\n\n        initLayout();\n        initKeyBindings();\n        initDragAndDrop();\n\n        \r\n\n        \r\n        openDatabaseList = EasyBind.map(tabbedPane.getTabs(), tab -> ((LibraryTab) tab).getBibDatabaseContext());\n        EasyBind.bindContent(stateManager.getOpenDatabases(), openDatabaseList);\n\n        stateManager.activeDatabaseProperty().bind(\n                EasyBind.map(tabbedPane.getSelectionModel().selectedItemProperty(),\n                        selectedTab -> Optional.ofNullable(selectedTab)\n                                               .map(tab -> (LibraryTab) tab)\n                                               .map(LibraryTab::getBibDatabaseContext)));\n\n        \r\n        EasyBind.subscribe(stateManager.activeSearchQueryProperty(),\n                query -> {\n                    if (getCurrentLibraryTab() != null) {\n                        getCurrentLibraryTab().setCurrentSearchQuery(query);\n                    }\n                });\n\n        \r\n        Platform.runLater(() -> stateManager.focusOwnerProperty().bind(\n                EasyBind.map(mainStage.getScene().focusOwnerProperty(), Optional::ofNullable)));\n        \r\n\r\n\r\n\r\n\n        EasyBind.subscribe(tabbedPane.getSelectionModel().selectedItemProperty(), tab -> {\n            if (tab == null) {\n                stateManager.setSelectedEntries(Collections.emptyList());\n                mainStage.titleProperty().unbind();\n                mainStage.setTitle(FRAME_TITLE);\n                return;\n            }\n\n            LibraryTab libraryTab = (LibraryTab) tab;\n\n            \r\n            stateManager.setSelectedEntries(libraryTab.getSelectedEntries());\n\n            \r\n            stateManager.activeSearchQueryProperty().set(libraryTab.getCurrentSearchQuery());\n\n            \r\n            libraryTab.updateSearchManager();\n\n            libraryTab.getUndoManager().postUndoRedoEvent();\n            libraryTab.getMainTable().requestFocus();\n\n            \r\n            StringBinding windowTitle = Bindings.createStringBinding(\n                    () -> libraryTab.textProperty().getValue() + \" \\u2013 \" + FRAME_TITLE,\n                    libraryTab.textProperty());\n            mainStage.titleProperty().bind(windowTitle);\n        });\n        initShowTrackingNotification();\n    }\n","realPath":"src/main/java/org/jabref/gui/JabRefFrame.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":565,"status":"M"}],"commitId":"c7f2671730f28fb75af823f574ba7d27106c1b06","commitMessage":"@@@Fix drag and drop of bib files  (#7470)\n\n","date":"2021-02-27 14:47:27","modifiedFileCount":"2","status":"M","submitter":"Christoph"},{"authorTime":"2021-08-31 16:57:32","codes":[{"authorDate":"2021-02-27 14:47:27","commitOrder":25,"curCode":"    public void onDatabaseLoadingSucceed(ParserResult result) {\n        BibDatabaseContext context = result.getDatabaseContext();\n        OpenDatabaseAction.performPostOpenActions(this, result);\n\n        feedData(context);\n        \r\n        Globals.stateManager.activeDatabaseProperty().bind(\n                EasyBind.map(frame.getTabbedPane().getSelectionModel().selectedItemProperty(),\n                        selectedTab -> Optional.ofNullable(selectedTab)\n                                               .filter(tab -> tab instanceof LibraryTab)\n                                               .map(tab -> (LibraryTab) tab)\n                                               .map(LibraryTab::getBibDatabaseContext)));\n    }\n","date":"2021-02-27 14:47:27","endLine":190,"groupId":"4207","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"onDatabaseLoadingSucceed","params":"(ParserResultresult)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/88/648beff2bf34531ee7d5ebf8e01e614c859a25.src","preCode":"    public void onDatabaseLoadingSucceed(ParserResult result) {\n        BibDatabaseContext context = result.getDatabaseContext();\n        OpenDatabaseAction.performPostOpenActions(this, result);\n\n        feedData(context);\n        \r\n        Globals.stateManager.activeDatabaseProperty().bind(\n                EasyBind.map(frame.getTabbedPane().getSelectionModel().selectedItemProperty(),\n                        selectedTab -> Optional.ofNullable(selectedTab)\n                                               .filter(tab -> tab instanceof LibraryTab)\n                                               .map(tab -> (LibraryTab) tab)\n                                               .map(LibraryTab::getBibDatabaseContext)));\n    }\n","realPath":"src/main/java/org/jabref/gui/LibraryTab.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":178,"status":"N"},{"authorDate":"2021-08-31 16:57:32","commitOrder":25,"curCode":"    public void init() {\n        sidePaneManager = new SidePaneManager(prefs, this, taskExecutor, dialogService, stateManager);\n        sidePane = sidePaneManager.getPane();\n\n        tabbedPane = new TabPane();\n        tabbedPane.setTabDragPolicy(TabPane.TabDragPolicy.REORDER);\n\n        initLayout();\n        initKeyBindings();\n        initDragAndDrop();\n\n        \r\n        FilteredList<Tab> filteredTabs = new FilteredList<>(tabbedPane.getTabs());\n        filteredTabs.setPredicate(tab -> tab instanceof LibraryTab);\n\n        \r\n        openDatabaseList = EasyBind.map(filteredTabs, tab -> ((LibraryTab) tab).getBibDatabaseContext());\n        EasyBind.bindContent(stateManager.getOpenDatabases(), openDatabaseList);\n\n        stateManager.activeDatabaseProperty().bind(\n                EasyBind.map(tabbedPane.getSelectionModel().selectedItemProperty(),\n                        selectedTab -> Optional.ofNullable(selectedTab)\n                                               .filter(tab -> tab instanceof LibraryTab)\n                                               .map(tab -> (LibraryTab) tab)\n                                               .map(LibraryTab::getBibDatabaseContext)));\n\n        \r\n        EasyBind.subscribe(stateManager.activeSearchQueryProperty(),\n                query -> {\n                    if (getCurrentLibraryTab() != null) {\n                        getCurrentLibraryTab().setCurrentSearchQuery(query);\n                    }\n                });\n\n        \r\n        Platform.runLater(() -> stateManager.focusOwnerProperty().bind(\n                EasyBind.map(mainStage.getScene().focusOwnerProperty(), Optional::ofNullable)));\n        \r\n\r\n\r\n\r\n\n        EasyBind.subscribe(tabbedPane.getSelectionModel().selectedItemProperty(), tab -> {\n            if ((tab == null) || (!(tab instanceof LibraryTab))) {\n                stateManager.setSelectedEntries(Collections.emptyList());\n                mainStage.titleProperty().unbind();\n                mainStage.setTitle(FRAME_TITLE);\n                return;\n            }\n\n            LibraryTab libraryTab = (LibraryTab) tab;\n\n            \r\n            stateManager.setSelectedEntries(libraryTab.getSelectedEntries());\n\n            \r\n            stateManager.activeSearchQueryProperty().set(libraryTab.getCurrentSearchQuery());\n\n            \r\n            libraryTab.updateSearchManager();\n\n            libraryTab.getUndoManager().postUndoRedoEvent();\n            libraryTab.getMainTable().requestFocus();\n\n            \r\n            StringBinding windowTitle = Bindings.createStringBinding(\n                    () -> libraryTab.textProperty().getValue() + \" \\u2013 \" + FRAME_TITLE,\n                    libraryTab.textProperty());\n            mainStage.titleProperty().bind(windowTitle);\n        });\n        initShowTrackingNotification();\n    }\n","date":"2021-08-31 16:57:32","endLine":638,"groupId":"8296","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"init","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/6a/5638649e70e42989bfd5bc8b7f9f2444a445b2.src","preCode":"    public void init() {\n        sidePaneManager = new SidePaneManager(prefs, this, dialogService, stateManager);\n        sidePane = sidePaneManager.getPane();\n\n        tabbedPane = new TabPane();\n        tabbedPane.setTabDragPolicy(TabPane.TabDragPolicy.REORDER);\n\n        initLayout();\n        initKeyBindings();\n        initDragAndDrop();\n\n        \r\n        FilteredList<Tab> filteredTabs = new FilteredList<>(tabbedPane.getTabs());\n        filteredTabs.setPredicate(tab -> tab instanceof LibraryTab);\n\n        \r\n        openDatabaseList = EasyBind.map(filteredTabs, tab -> ((LibraryTab) tab).getBibDatabaseContext());\n        EasyBind.bindContent(stateManager.getOpenDatabases(), openDatabaseList);\n\n        stateManager.activeDatabaseProperty().bind(\n                EasyBind.map(tabbedPane.getSelectionModel().selectedItemProperty(),\n                        selectedTab -> Optional.ofNullable(selectedTab)\n                                               .filter(tab -> tab instanceof LibraryTab)\n                                               .map(tab -> (LibraryTab) tab)\n                                               .map(LibraryTab::getBibDatabaseContext)));\n\n        \r\n        EasyBind.subscribe(stateManager.activeSearchQueryProperty(),\n                query -> {\n                    if (getCurrentLibraryTab() != null) {\n                        getCurrentLibraryTab().setCurrentSearchQuery(query);\n                    }\n                });\n\n        \r\n        Platform.runLater(() -> stateManager.focusOwnerProperty().bind(\n                EasyBind.map(mainStage.getScene().focusOwnerProperty(), Optional::ofNullable)));\n        \r\n\r\n\r\n\r\n\n        EasyBind.subscribe(tabbedPane.getSelectionModel().selectedItemProperty(), tab -> {\n            if ((tab == null) || (!(tab instanceof LibraryTab))) {\n                stateManager.setSelectedEntries(Collections.emptyList());\n                mainStage.titleProperty().unbind();\n                mainStage.setTitle(FRAME_TITLE);\n                return;\n            }\n\n            LibraryTab libraryTab = (LibraryTab) tab;\n\n            \r\n            stateManager.setSelectedEntries(libraryTab.getSelectedEntries());\n\n            \r\n            stateManager.activeSearchQueryProperty().set(libraryTab.getCurrentSearchQuery());\n\n            \r\n            libraryTab.updateSearchManager();\n\n            libraryTab.getUndoManager().postUndoRedoEvent();\n            libraryTab.getMainTable().requestFocus();\n\n            \r\n            StringBinding windowTitle = Bindings.createStringBinding(\n                    () -> libraryTab.textProperty().getValue() + \" \\u2013 \" + FRAME_TITLE,\n                    libraryTab.textProperty());\n            mainStage.titleProperty().bind(windowTitle);\n        });\n        initShowTrackingNotification();\n    }\n","realPath":"src/main/java/org/jabref/gui/JabRefFrame.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":567,"status":"M"}],"commitId":"95c8d19e9faefab367eb0b0b1754f5686a312e1d","commitMessage":"@@@Refactored GroupTree.fxml to plain java (#8035)\n\n","date":"2021-08-31 16:57:32","modifiedFileCount":"4","status":"M","submitter":"Carl Christian Snethlage"},{"authorTime":"2021-08-31 19:50:57","codes":[{"authorDate":"2021-08-31 19:50:57","commitOrder":26,"curCode":"    public void onDatabaseLoadingSucceed(ParserResult result) {\n        BibDatabaseContext context = result.getDatabaseContext();\n        OpenDatabaseAction.performPostOpenActions(this, result);\n\n        feedData(context);\n        \r\n        stateManager.activeDatabaseProperty().bind(\n                EasyBind.map(frame.getTabbedPane().getSelectionModel().selectedItemProperty(),\n                        selectedTab -> Optional.ofNullable(selectedTab)\n                                               .filter(tab -> tab instanceof LibraryTab)\n                                               .map(tab -> (LibraryTab) tab)\n                                               .map(LibraryTab::getBibDatabaseContext)));\n    }\n","date":"2021-08-31 19:50:57","endLine":213,"groupId":"4207","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"onDatabaseLoadingSucceed","params":"(ParserResultresult)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/d5/443bf343ba5148f136ce844a2322ff2d812561.src","preCode":"    public void onDatabaseLoadingSucceed(ParserResult result) {\n        BibDatabaseContext context = result.getDatabaseContext();\n        OpenDatabaseAction.performPostOpenActions(this, result);\n\n        feedData(context);\n        \r\n        Globals.stateManager.activeDatabaseProperty().bind(\n                EasyBind.map(frame.getTabbedPane().getSelectionModel().selectedItemProperty(),\n                        selectedTab -> Optional.ofNullable(selectedTab)\n                                               .filter(tab -> tab instanceof LibraryTab)\n                                               .map(tab -> (LibraryTab) tab)\n                                               .map(LibraryTab::getBibDatabaseContext)));\n    }\n","realPath":"src/main/java/org/jabref/gui/LibraryTab.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":201,"status":"M"},{"authorDate":"2021-08-31 19:50:57","commitOrder":26,"curCode":"    public void init() {\n        sidePaneManager = new SidePaneManager(prefs, this, taskExecutor, dialogService, stateManager);\n        sidePane = sidePaneManager.getPane();\n\n        tabbedPane = new TabPane();\n        tabbedPane.setTabDragPolicy(TabPane.TabDragPolicy.REORDER);\n\n        initLayout();\n        initKeyBindings();\n        initDragAndDrop();\n\n        \r\n        FilteredList<Tab> filteredTabs = new FilteredList<>(tabbedPane.getTabs());\n        filteredTabs.setPredicate(tab -> tab instanceof LibraryTab);\n\n        \r\n        openDatabaseList = EasyBind.map(filteredTabs, tab -> ((LibraryTab) tab).getBibDatabaseContext());\n        EasyBind.bindContent(stateManager.getOpenDatabases(), openDatabaseList);\n\n        stateManager.activeDatabaseProperty().bind(\n                EasyBind.map(tabbedPane.getSelectionModel().selectedItemProperty(),\n                        selectedTab -> Optional.ofNullable(selectedTab)\n                                               .filter(tab -> tab instanceof LibraryTab)\n                                               .map(tab -> (LibraryTab) tab)\n                                               .map(LibraryTab::getBibDatabaseContext)));\n\n        \r\n        EasyBind.subscribe(stateManager.activeSearchQueryProperty(),\n                query -> {\n                    if (getCurrentLibraryTab() != null) {\n                        getCurrentLibraryTab().setCurrentSearchQuery(query);\n                    }\n                });\n\n        \r\n        Platform.runLater(() -> stateManager.focusOwnerProperty().bind(\n                EasyBind.map(mainStage.getScene().focusOwnerProperty(), Optional::ofNullable)));\n        \r\n\r\n\r\n\r\n\n        EasyBind.subscribe(tabbedPane.getSelectionModel().selectedItemProperty(), tab -> {\n            if (!(tab instanceof LibraryTab libraryTab)) {\n                stateManager.setSelectedEntries(Collections.emptyList());\n                mainStage.titleProperty().unbind();\n                mainStage.setTitle(FRAME_TITLE);\n                return;\n            }\n\n            \r\n            stateManager.setSelectedEntries(libraryTab.getSelectedEntries());\n\n            \r\n            stateManager.activeSearchQueryProperty().set(libraryTab.getCurrentSearchQuery());\n\n            \r\n            libraryTab.updateSearchManager();\n\n            libraryTab.getUndoManager().postUndoRedoEvent();\n            libraryTab.getMainTable().requestFocus();\n\n            \r\n            StringBinding windowTitle = Bindings.createStringBinding(\n                    () -> libraryTab.textProperty().getValue() + \" \\u2013 \" + FRAME_TITLE,\n                    libraryTab.textProperty());\n            mainStage.titleProperty().bind(windowTitle);\n        });\n        initShowTrackingNotification();\n    }\n","date":"2021-08-31 19:50:57","endLine":637,"groupId":"9376","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"init","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/fc/2abd1155407a345d0880b6365065f0898f63b5.src","preCode":"    public void init() {\n        sidePaneManager = new SidePaneManager(prefs, this, taskExecutor, dialogService, stateManager);\n        sidePane = sidePaneManager.getPane();\n\n        tabbedPane = new TabPane();\n        tabbedPane.setTabDragPolicy(TabPane.TabDragPolicy.REORDER);\n\n        initLayout();\n        initKeyBindings();\n        initDragAndDrop();\n\n        \r\n        FilteredList<Tab> filteredTabs = new FilteredList<>(tabbedPane.getTabs());\n        filteredTabs.setPredicate(tab -> tab instanceof LibraryTab);\n\n        \r\n        openDatabaseList = EasyBind.map(filteredTabs, tab -> ((LibraryTab) tab).getBibDatabaseContext());\n        EasyBind.bindContent(stateManager.getOpenDatabases(), openDatabaseList);\n\n        stateManager.activeDatabaseProperty().bind(\n                EasyBind.map(tabbedPane.getSelectionModel().selectedItemProperty(),\n                        selectedTab -> Optional.ofNullable(selectedTab)\n                                               .filter(tab -> tab instanceof LibraryTab)\n                                               .map(tab -> (LibraryTab) tab)\n                                               .map(LibraryTab::getBibDatabaseContext)));\n\n        \r\n        EasyBind.subscribe(stateManager.activeSearchQueryProperty(),\n                query -> {\n                    if (getCurrentLibraryTab() != null) {\n                        getCurrentLibraryTab().setCurrentSearchQuery(query);\n                    }\n                });\n\n        \r\n        Platform.runLater(() -> stateManager.focusOwnerProperty().bind(\n                EasyBind.map(mainStage.getScene().focusOwnerProperty(), Optional::ofNullable)));\n        \r\n\r\n\r\n\r\n\n        EasyBind.subscribe(tabbedPane.getSelectionModel().selectedItemProperty(), tab -> {\n            if ((tab == null) || (!(tab instanceof LibraryTab))) {\n                stateManager.setSelectedEntries(Collections.emptyList());\n                mainStage.titleProperty().unbind();\n                mainStage.setTitle(FRAME_TITLE);\n                return;\n            }\n\n            LibraryTab libraryTab = (LibraryTab) tab;\n\n            \r\n            stateManager.setSelectedEntries(libraryTab.getSelectedEntries());\n\n            \r\n            stateManager.activeSearchQueryProperty().set(libraryTab.getCurrentSearchQuery());\n\n            \r\n            libraryTab.updateSearchManager();\n\n            libraryTab.getUndoManager().postUndoRedoEvent();\n            libraryTab.getMainTable().requestFocus();\n\n            \r\n            StringBinding windowTitle = Bindings.createStringBinding(\n                    () -> libraryTab.textProperty().getValue() + \" \\u2013 \" + FRAME_TITLE,\n                    libraryTab.textProperty());\n            mainStage.titleProperty().bind(windowTitle);\n        });\n        initShowTrackingNotification();\n    }\n","realPath":"src/main/java/org/jabref/gui/JabRefFrame.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":568,"status":"M"}],"commitId":"df83c9d8c709c121e69868c8149263ac2988b2ac","commitMessage":"@@@Cleanup preferences (#8036)\n\n* Extracted Globals.prefs from JabRefDesktop\n\n* Extracted Globals.prefs from EntryAddChangeViewModel and Globals.stateManager\n\n* More simple extractions of Globals.prefs\n\n* Remove double return of standardWorkingDirectory\n\n* More simple extractions of Globals.prefs\n\nCo-authored-by: Siedlerchr <siedlerkiller@gmail.com>","date":"2021-08-31 19:50:57","modifiedFileCount":"28","status":"M","submitter":"Carl Christian Snethlage"},{"authorTime":"2021-09-02 22:29:11","codes":[{"authorDate":"2021-08-31 19:50:57","commitOrder":27,"curCode":"    public void onDatabaseLoadingSucceed(ParserResult result) {\n        BibDatabaseContext context = result.getDatabaseContext();\n        OpenDatabaseAction.performPostOpenActions(this, result);\n\n        feedData(context);\n        \r\n        stateManager.activeDatabaseProperty().bind(\n                EasyBind.map(frame.getTabbedPane().getSelectionModel().selectedItemProperty(),\n                        selectedTab -> Optional.ofNullable(selectedTab)\n                                               .filter(tab -> tab instanceof LibraryTab)\n                                               .map(tab -> (LibraryTab) tab)\n                                               .map(LibraryTab::getBibDatabaseContext)));\n    }\n","date":"2021-08-31 19:50:57","endLine":213,"groupId":"10914","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"onDatabaseLoadingSucceed","params":"(ParserResultresult)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/d5/443bf343ba5148f136ce844a2322ff2d812561.src","preCode":"    public void onDatabaseLoadingSucceed(ParserResult result) {\n        BibDatabaseContext context = result.getDatabaseContext();\n        OpenDatabaseAction.performPostOpenActions(this, result);\n\n        feedData(context);\n        \r\n        stateManager.activeDatabaseProperty().bind(\n                EasyBind.map(frame.getTabbedPane().getSelectionModel().selectedItemProperty(),\n                        selectedTab -> Optional.ofNullable(selectedTab)\n                                               .filter(tab -> tab instanceof LibraryTab)\n                                               .map(tab -> (LibraryTab) tab)\n                                               .map(LibraryTab::getBibDatabaseContext)));\n    }\n","realPath":"src/main/java/org/jabref/gui/LibraryTab.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":201,"status":"N"},{"authorDate":"2021-09-02 22:29:11","commitOrder":27,"curCode":"    public void init() {\n        sidePaneManager = new SidePaneManager(prefs, this, taskExecutor, dialogService, stateManager);\n        sidePane = sidePaneManager.getPane();\n\n        tabbedPane = new TabPane();\n        tabbedPane.setTabDragPolicy(TabPane.TabDragPolicy.REORDER);\n\n        initLayout();\n        initKeyBindings();\n        initDragAndDrop();\n\n        \r\n        FilteredList<Tab> filteredTabs = new FilteredList<>(tabbedPane.getTabs());\n        filteredTabs.setPredicate(tab -> tab instanceof LibraryTab);\n\n        \r\n        openDatabaseList = EasyBind.map(filteredTabs, tab -> ((LibraryTab) tab).getBibDatabaseContext());\n        EasyBind.bindContent(stateManager.getOpenDatabases(), openDatabaseList);\n\n        stateManager.activeDatabaseProperty().bind(\n                EasyBind.map(tabbedPane.getSelectionModel().selectedItemProperty(),\n                        selectedTab -> Optional.ofNullable(selectedTab)\n                                               .filter(tab -> tab instanceof LibraryTab)\n                                               .map(tab -> (LibraryTab) tab)\n                                               .map(LibraryTab::getBibDatabaseContext)));\n\n        \r\n        EasyBind.subscribe(stateManager.activeSearchQueryProperty(),\n                query -> {\n                    if (prefs.getSearchPreferences().isKeepSearchString()) {\n                        for (LibraryTab tab : getLibraryTabs()) {\n                            tab.setCurrentSearchQuery(query);\n                        }\n                    } else {\n                        if (getCurrentLibraryTab() != null) {\n                            getCurrentLibraryTab().setCurrentSearchQuery(query);\n                        }\n                    }\n                });\n\n        \r\n        Platform.runLater(() -> stateManager.focusOwnerProperty().bind(\n                EasyBind.map(mainStage.getScene().focusOwnerProperty(), Optional::ofNullable)));\n        \r\n\r\n\r\n\r\n\n        EasyBind.subscribe(tabbedPane.getSelectionModel().selectedItemProperty(), tab -> {\n            if (!(tab instanceof LibraryTab libraryTab)) {\n                stateManager.setSelectedEntries(Collections.emptyList());\n                mainStage.titleProperty().unbind();\n                mainStage.setTitle(FRAME_TITLE);\n                return;\n            }\n\n            \r\n            stateManager.setSelectedEntries(libraryTab.getSelectedEntries());\n\n            \r\n            stateManager.activeSearchQueryProperty().set(libraryTab.getCurrentSearchQuery());\n\n            \r\n            libraryTab.updateSearchManager();\n\n            libraryTab.getUndoManager().postUndoRedoEvent();\n            libraryTab.getMainTable().requestFocus();\n\n            \r\n            StringBinding windowTitle = Bindings.createStringBinding(\n                    () -> libraryTab.textProperty().getValue() + \" \\u2013 \" + FRAME_TITLE,\n                    libraryTab.textProperty());\n            mainStage.titleProperty().bind(windowTitle);\n        });\n        initShowTrackingNotification();\n    }\n","date":"2021-09-02 22:29:11","endLine":643,"groupId":"10914","id":12,"instanceNumber":2,"isCurCommit":1,"methodName":"init","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/22/ab411189c49838e5742e6ad1deeac3768b1c03.src","preCode":"    public void init() {\n        sidePaneManager = new SidePaneManager(prefs, this, taskExecutor, dialogService, stateManager);\n        sidePane = sidePaneManager.getPane();\n\n        tabbedPane = new TabPane();\n        tabbedPane.setTabDragPolicy(TabPane.TabDragPolicy.REORDER);\n\n        initLayout();\n        initKeyBindings();\n        initDragAndDrop();\n\n        \r\n        FilteredList<Tab> filteredTabs = new FilteredList<>(tabbedPane.getTabs());\n        filteredTabs.setPredicate(tab -> tab instanceof LibraryTab);\n\n        \r\n        openDatabaseList = EasyBind.map(filteredTabs, tab -> ((LibraryTab) tab).getBibDatabaseContext());\n        EasyBind.bindContent(stateManager.getOpenDatabases(), openDatabaseList);\n\n        stateManager.activeDatabaseProperty().bind(\n                EasyBind.map(tabbedPane.getSelectionModel().selectedItemProperty(),\n                        selectedTab -> Optional.ofNullable(selectedTab)\n                                               .filter(tab -> tab instanceof LibraryTab)\n                                               .map(tab -> (LibraryTab) tab)\n                                               .map(LibraryTab::getBibDatabaseContext)));\n\n        \r\n        EasyBind.subscribe(stateManager.activeSearchQueryProperty(),\n                query -> {\n                    if (getCurrentLibraryTab() != null) {\n                        getCurrentLibraryTab().setCurrentSearchQuery(query);\n                    }\n                });\n\n        \r\n        Platform.runLater(() -> stateManager.focusOwnerProperty().bind(\n                EasyBind.map(mainStage.getScene().focusOwnerProperty(), Optional::ofNullable)));\n        \r\n\r\n\r\n\r\n\n        EasyBind.subscribe(tabbedPane.getSelectionModel().selectedItemProperty(), tab -> {\n            if (!(tab instanceof LibraryTab libraryTab)) {\n                stateManager.setSelectedEntries(Collections.emptyList());\n                mainStage.titleProperty().unbind();\n                mainStage.setTitle(FRAME_TITLE);\n                return;\n            }\n\n            \r\n            stateManager.setSelectedEntries(libraryTab.getSelectedEntries());\n\n            \r\n            stateManager.activeSearchQueryProperty().set(libraryTab.getCurrentSearchQuery());\n\n            \r\n            libraryTab.updateSearchManager();\n\n            libraryTab.getUndoManager().postUndoRedoEvent();\n            libraryTab.getMainTable().requestFocus();\n\n            \r\n            StringBinding windowTitle = Bindings.createStringBinding(\n                    () -> libraryTab.textProperty().getValue() + \" \\u2013 \" + FRAME_TITLE,\n                    libraryTab.textProperty());\n            mainStage.titleProperty().bind(windowTitle);\n        });\n        initShowTrackingNotification();\n    }\n","realPath":"src/main/java/org/jabref/gui/JabRefFrame.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":568,"status":"M"}],"commitId":"9c5b8ab5cf458447c57caee726705f8202aa3d88","commitMessage":"@@@New global search (#8045)\n\nCo-authored-by: Carl Christian Snethlage <50491877+calixtus@users.noreply.github.com>\n","date":"2021-09-02 22:29:11","modifiedFileCount":"10","status":"M","submitter":"Christoph"}]
