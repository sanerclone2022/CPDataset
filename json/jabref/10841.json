[{"authorTime":"2020-04-11 17:49:00","codes":[{"authorDate":"2020-04-11 17:49:00","commitOrder":1,"curCode":"    void findMatchesWorksForRefiningGroups() throws Exception {\n        GroupTreeNode grandParent = getNodeInSimpleTree();\n        GroupTreeNode parent = grandParent.addSubgroup(\n                new WordKeywordGroup(\"node\", GroupHierarchyType.INDEPENDENT, StandardField.AUTHOR, \"author2\", true, ',', false));\n        GroupTreeNode node = parent.addSubgroup(\n                new WordKeywordGroup(\"node\", GroupHierarchyType.REFINING, StandardField.AUTHOR, \"author1\", true, ',', false));\n        assertEquals(1, node.findMatches(entries).size());\n    }\n","date":"2020-04-11 17:49:00","endLine":191,"groupId":"10941","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"findMatchesWorksForRefiningGroups","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/05/886e41c76bbcfffa9c457250e2227c5fe1fc54.src","preCode":"    void findMatchesWorksForRefiningGroups() throws Exception {\n        GroupTreeNode grandParent = getNodeInSimpleTree();\n        GroupTreeNode parent = grandParent.addSubgroup(\n                new WordKeywordGroup(\"node\", GroupHierarchyType.INDEPENDENT, StandardField.AUTHOR, \"author2\", true, ',', false));\n        GroupTreeNode node = parent.addSubgroup(\n                new WordKeywordGroup(\"node\", GroupHierarchyType.REFINING, StandardField.AUTHOR, \"author1\", true, ',', false));\n        assertEquals(1, node.findMatches(entries).size());\n    }\n","realPath":"src/test/java/org/jabref/model/groups/GroupTreeNodeTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":184,"status":"B"},{"authorDate":"2020-04-11 17:49:00","commitOrder":1,"curCode":"    void findMatchesWorksForHierarchyOfIndependentGroups() throws Exception {\n        GroupTreeNode grandParent = getNodeInSimpleTree();\n        GroupTreeNode parent = grandParent.addSubgroup(\n                new WordKeywordGroup(\"node\", GroupHierarchyType.INDEPENDENT, StandardField.AUTHOR, \"author2\", true, ',', false));\n        GroupTreeNode node = parent.addSubgroup(\n                new WordKeywordGroup(\"node\", GroupHierarchyType.INDEPENDENT, StandardField.AUTHOR, \"author1\", true, ',', false));\n        assertEquals(2, node.findMatches(entries).size());\n    }\n","date":"2020-04-11 17:49:00","endLine":201,"groupId":"11594","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"findMatchesWorksForHierarchyOfIndependentGroups","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/05/886e41c76bbcfffa9c457250e2227c5fe1fc54.src","preCode":"    void findMatchesWorksForHierarchyOfIndependentGroups() throws Exception {\n        GroupTreeNode grandParent = getNodeInSimpleTree();\n        GroupTreeNode parent = grandParent.addSubgroup(\n                new WordKeywordGroup(\"node\", GroupHierarchyType.INDEPENDENT, StandardField.AUTHOR, \"author2\", true, ',', false));\n        GroupTreeNode node = parent.addSubgroup(\n                new WordKeywordGroup(\"node\", GroupHierarchyType.INDEPENDENT, StandardField.AUTHOR, \"author1\", true, ',', false));\n        assertEquals(2, node.findMatches(entries).size());\n    }\n","realPath":"src/test/java/org/jabref/model/groups/GroupTreeNodeTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":194,"status":"B"}],"commitId":"1c724f26742ba832c610e5795bc30e35fa0de2b7","commitMessage":"@@@Improve calculation of matched entries upon change (#6268)\n\nInstead of recalculating the number of matched entries for every group (which means `#groups * #entries` operations) now a change triggers a more intelligent re-calculation which needs at maximum `#groups` operations. This gives a huge boost and makes editing entries smooth even for large databases with many groups.","date":"2020-04-11 17:49:00","modifiedFileCount":"4","status":"B","submitter":"Tobias Diez"},{"authorTime":"2021-06-30 05:59:10","codes":[{"authorDate":"2021-06-30 05:59:10","commitOrder":2,"curCode":"    void findMatchesWorksForRefiningGroups() {\n        GroupTreeNode grandParent = getNodeInSimpleTree();\n        GroupTreeNode parent = grandParent.addSubgroup(\n                new WordKeywordGroup(\"node\", GroupHierarchyType.INDEPENDENT, StandardField.AUTHOR, \"author2\", true, ',', false));\n        GroupTreeNode node = parent.addSubgroup(\n                new WordKeywordGroup(\"node\", GroupHierarchyType.REFINING, StandardField.AUTHOR, \"author1\", true, ',', false));\n        assertEquals(1, node.findMatches(entries).size());\n    }\n","date":"2021-06-30 05:59:10","endLine":193,"groupId":"10841","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"findMatchesWorksForRefiningGroups","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/fa/a4d9d3d56ddcaf8e3910c49910120702f8db3c.src","preCode":"    void findMatchesWorksForRefiningGroups() throws Exception {\n        GroupTreeNode grandParent = getNodeInSimpleTree();\n        GroupTreeNode parent = grandParent.addSubgroup(\n                new WordKeywordGroup(\"node\", GroupHierarchyType.INDEPENDENT, StandardField.AUTHOR, \"author2\", true, ',', false));\n        GroupTreeNode node = parent.addSubgroup(\n                new WordKeywordGroup(\"node\", GroupHierarchyType.REFINING, StandardField.AUTHOR, \"author1\", true, ',', false));\n        assertEquals(1, node.findMatches(entries).size());\n    }\n","realPath":"src/test/java/org/jabref/model/groups/GroupTreeNodeTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":186,"status":"M"},{"authorDate":"2021-06-30 05:59:10","commitOrder":2,"curCode":"    void findMatchesWorksForHierarchyOfIndependentGroups() {\n        GroupTreeNode grandParent = getNodeInSimpleTree();\n        GroupTreeNode parent = grandParent.addSubgroup(\n                new WordKeywordGroup(\"node\", GroupHierarchyType.INDEPENDENT, StandardField.AUTHOR, \"author2\", true, ',', false));\n        GroupTreeNode node = parent.addSubgroup(\n                new WordKeywordGroup(\"node\", GroupHierarchyType.INDEPENDENT, StandardField.AUTHOR, \"author1\", true, ',', false));\n        assertEquals(2, node.findMatches(entries).size());\n    }\n","date":"2021-06-30 05:59:10","endLine":203,"groupId":"10841","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"findMatchesWorksForHierarchyOfIndependentGroups","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/fa/a4d9d3d56ddcaf8e3910c49910120702f8db3c.src","preCode":"    void findMatchesWorksForHierarchyOfIndependentGroups() throws Exception {\n        GroupTreeNode grandParent = getNodeInSimpleTree();\n        GroupTreeNode parent = grandParent.addSubgroup(\n                new WordKeywordGroup(\"node\", GroupHierarchyType.INDEPENDENT, StandardField.AUTHOR, \"author2\", true, ',', false));\n        GroupTreeNode node = parent.addSubgroup(\n                new WordKeywordGroup(\"node\", GroupHierarchyType.INDEPENDENT, StandardField.AUTHOR, \"author1\", true, ',', false));\n        assertEquals(2, node.findMatches(entries).size());\n    }\n","realPath":"src/test/java/org/jabref/model/groups/GroupTreeNodeTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":196,"status":"M"}],"commitId":"a01754cab46d5b4e410caf23e80f81c39559d7c5","commitMessage":"@@@Add unit test to four test classes (#7651)\n\n","date":"2021-06-30 05:59:10","modifiedFileCount":"2","status":"M","submitter":"BShaq"}]
