[{"authorTime":"2018-01-29 02:37:06","codes":[{"authorDate":"2017-03-16 23:48:38","commitOrder":3,"curCode":"    private String serializeKeywordGroup(KeywordGroup group) {\n        Boolean isRegex = group instanceof RegexKeywordGroup;\n        StringBuilder sb = new StringBuilder();\n        sb.append(MetadataSerializationConfiguration.KEYWORD_GROUP_ID);\n        sb.append(StringUtil.quote(group.getName(), MetadataSerializationConfiguration.GROUP_UNIT_SEPARATOR, MetadataSerializationConfiguration.GROUP_QUOTE_CHAR));\n        sb.append(MetadataSerializationConfiguration.GROUP_UNIT_SEPARATOR);\n        sb.append(group.getHierarchicalContext().ordinal());\n        sb.append(MetadataSerializationConfiguration.GROUP_UNIT_SEPARATOR);\n        sb.append(StringUtil.quote(group.getSearchField(), MetadataSerializationConfiguration.GROUP_UNIT_SEPARATOR, MetadataSerializationConfiguration.GROUP_QUOTE_CHAR));\n        sb.append(MetadataSerializationConfiguration.GROUP_UNIT_SEPARATOR);\n        sb.append(StringUtil.quote(group.getSearchExpression(), MetadataSerializationConfiguration.GROUP_UNIT_SEPARATOR, MetadataSerializationConfiguration.GROUP_QUOTE_CHAR));\n        sb.append(MetadataSerializationConfiguration.GROUP_UNIT_SEPARATOR);\n        sb.append(StringUtil.booleanToBinaryString(group.isCaseSensitive()));\n        sb.append(MetadataSerializationConfiguration.GROUP_UNIT_SEPARATOR);\n        sb.append(StringUtil.booleanToBinaryString(isRegex));\n        sb.append(MetadataSerializationConfiguration.GROUP_UNIT_SEPARATOR);\n\n        appendGroupDetails(sb, group);\n\n        return sb.toString();\n    }\n","date":"2017-03-16 23:48:38","endLine":59,"groupId":"7475","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"serializeKeywordGroup","params":"(KeywordGroupgroup)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/b1/74cfc31e0bb2c0b9d15edc8dcdf725b9fac70a.src","preCode":"    private String serializeKeywordGroup(KeywordGroup group) {\n        Boolean isRegex = group instanceof RegexKeywordGroup;\n        StringBuilder sb = new StringBuilder();\n        sb.append(MetadataSerializationConfiguration.KEYWORD_GROUP_ID);\n        sb.append(StringUtil.quote(group.getName(), MetadataSerializationConfiguration.GROUP_UNIT_SEPARATOR, MetadataSerializationConfiguration.GROUP_QUOTE_CHAR));\n        sb.append(MetadataSerializationConfiguration.GROUP_UNIT_SEPARATOR);\n        sb.append(group.getHierarchicalContext().ordinal());\n        sb.append(MetadataSerializationConfiguration.GROUP_UNIT_SEPARATOR);\n        sb.append(StringUtil.quote(group.getSearchField(), MetadataSerializationConfiguration.GROUP_UNIT_SEPARATOR, MetadataSerializationConfiguration.GROUP_QUOTE_CHAR));\n        sb.append(MetadataSerializationConfiguration.GROUP_UNIT_SEPARATOR);\n        sb.append(StringUtil.quote(group.getSearchExpression(), MetadataSerializationConfiguration.GROUP_UNIT_SEPARATOR, MetadataSerializationConfiguration.GROUP_QUOTE_CHAR));\n        sb.append(MetadataSerializationConfiguration.GROUP_UNIT_SEPARATOR);\n        sb.append(StringUtil.booleanToBinaryString(group.isCaseSensitive()));\n        sb.append(MetadataSerializationConfiguration.GROUP_UNIT_SEPARATOR);\n        sb.append(StringUtil.booleanToBinaryString(isRegex));\n        sb.append(MetadataSerializationConfiguration.GROUP_UNIT_SEPARATOR);\n\n        appendGroupDetails(sb, group);\n\n        return sb.toString();\n    }\n","realPath":"src/main/java/org/jabref/logic/exporter/GroupSerializer.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":39,"status":"NB"},{"authorDate":"2018-01-29 02:37:06","commitOrder":3,"curCode":"    private String serializeTexGroup(TexGroup group) {\n        StringBuilder sb = new StringBuilder();\n        sb.append(MetadataSerializationConfiguration.TEX_GROUP_ID);\n        sb.append(StringUtil.quote(group.getName(), MetadataSerializationConfiguration.GROUP_UNIT_SEPARATOR, MetadataSerializationConfiguration.GROUP_QUOTE_CHAR));\n        sb.append(MetadataSerializationConfiguration.GROUP_UNIT_SEPARATOR);\n        sb.append(group.getHierarchicalContext().ordinal());\n        sb.append(MetadataSerializationConfiguration.GROUP_UNIT_SEPARATOR);\n        sb.append(StringUtil.quote(FileUtil.toPortableString(group.getFilePath()), MetadataSerializationConfiguration.GROUP_UNIT_SEPARATOR, MetadataSerializationConfiguration.GROUP_QUOTE_CHAR));\n        sb.append(MetadataSerializationConfiguration.GROUP_UNIT_SEPARATOR);\n\n        appendGroupDetails(sb, group);\n\n        return sb.toString();\n    }\n","date":"2018-01-29 02:37:06","endLine":149,"groupId":"4466","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"serializeTexGroup","params":"(TexGroupgroup)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/e8/ce0925c398d6e54dd7118d7c0d17a30614a265.src","preCode":"    private String serializeTexGroup(TexGroup group) {\n        StringBuilder sb = new StringBuilder();\n        sb.append(MetadataSerializationConfiguration.TEX_GROUP_ID);\n        sb.append(StringUtil.quote(group.getName(), MetadataSerializationConfiguration.GROUP_UNIT_SEPARATOR, MetadataSerializationConfiguration.GROUP_QUOTE_CHAR));\n        sb.append(MetadataSerializationConfiguration.GROUP_UNIT_SEPARATOR);\n        sb.append(group.getHierarchicalContext().ordinal());\n        sb.append(MetadataSerializationConfiguration.GROUP_UNIT_SEPARATOR);\n        sb.append(StringUtil.quote(FileUtil.toPortableString(group.getFilePath()), MetadataSerializationConfiguration.GROUP_UNIT_SEPARATOR, MetadataSerializationConfiguration.GROUP_QUOTE_CHAR));\n        sb.append(MetadataSerializationConfiguration.GROUP_UNIT_SEPARATOR);\n\n        appendGroupDetails(sb, group);\n\n        return sb.toString();\n    }\n","realPath":"src/main/java/org/jabref/logic/exporter/GroupSerializer.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":136,"status":"B"}],"commitId":"cfb424f80c2069c61673d5051fa761715edab091","commitMessage":"@@@Implements #1664: group based on aux file (#3444)\n\n* First prototype of aux group\n\n* Refactor so that TexGroup does not depend on logic\n\n* Add changelog entry\n\n* Fix architecture tests\n\n* Add new language key\n\n* Fix tests\n","date":"2018-01-29 02:37:06","modifiedFileCount":"76","status":"M","submitter":"Tobias Diez"},{"authorTime":"2018-01-29 02:37:06","codes":[{"authorDate":"2019-08-02 15:20:10","commitOrder":4,"curCode":"    private String serializeKeywordGroup(KeywordGroup group) {\n        Boolean isRegex = group instanceof RegexKeywordGroup;\n        StringBuilder sb = new StringBuilder();\n        sb.append(MetadataSerializationConfiguration.KEYWORD_GROUP_ID);\n        sb.append(StringUtil.quote(group.getName(), MetadataSerializationConfiguration.GROUP_UNIT_SEPARATOR, MetadataSerializationConfiguration.GROUP_QUOTE_CHAR));\n        sb.append(MetadataSerializationConfiguration.GROUP_UNIT_SEPARATOR);\n        sb.append(group.getHierarchicalContext().ordinal());\n        sb.append(MetadataSerializationConfiguration.GROUP_UNIT_SEPARATOR);\n        sb.append(StringUtil.quote(group.getSearchField().getName(), MetadataSerializationConfiguration.GROUP_UNIT_SEPARATOR, MetadataSerializationConfiguration.GROUP_QUOTE_CHAR));\n        sb.append(MetadataSerializationConfiguration.GROUP_UNIT_SEPARATOR);\n        sb.append(StringUtil.quote(group.getSearchExpression(), MetadataSerializationConfiguration.GROUP_UNIT_SEPARATOR, MetadataSerializationConfiguration.GROUP_QUOTE_CHAR));\n        sb.append(MetadataSerializationConfiguration.GROUP_UNIT_SEPARATOR);\n        sb.append(StringUtil.booleanToBinaryString(group.isCaseSensitive()));\n        sb.append(MetadataSerializationConfiguration.GROUP_UNIT_SEPARATOR);\n        sb.append(StringUtil.booleanToBinaryString(isRegex));\n        sb.append(MetadataSerializationConfiguration.GROUP_UNIT_SEPARATOR);\n\n        appendGroupDetails(sb, group);\n\n        return sb.toString();\n    }\n","date":"2019-08-02 15:20:10","endLine":61,"groupId":"101078","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"serializeKeywordGroup","params":"(KeywordGroupgroup)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/3e/1c9d9fa03ca783ed882c6d3a7bcc9319e64028.src","preCode":"    private String serializeKeywordGroup(KeywordGroup group) {\n        Boolean isRegex = group instanceof RegexKeywordGroup;\n        StringBuilder sb = new StringBuilder();\n        sb.append(MetadataSerializationConfiguration.KEYWORD_GROUP_ID);\n        sb.append(StringUtil.quote(group.getName(), MetadataSerializationConfiguration.GROUP_UNIT_SEPARATOR, MetadataSerializationConfiguration.GROUP_QUOTE_CHAR));\n        sb.append(MetadataSerializationConfiguration.GROUP_UNIT_SEPARATOR);\n        sb.append(group.getHierarchicalContext().ordinal());\n        sb.append(MetadataSerializationConfiguration.GROUP_UNIT_SEPARATOR);\n        sb.append(StringUtil.quote(group.getSearchField(), MetadataSerializationConfiguration.GROUP_UNIT_SEPARATOR, MetadataSerializationConfiguration.GROUP_QUOTE_CHAR));\n        sb.append(MetadataSerializationConfiguration.GROUP_UNIT_SEPARATOR);\n        sb.append(StringUtil.quote(group.getSearchExpression(), MetadataSerializationConfiguration.GROUP_UNIT_SEPARATOR, MetadataSerializationConfiguration.GROUP_QUOTE_CHAR));\n        sb.append(MetadataSerializationConfiguration.GROUP_UNIT_SEPARATOR);\n        sb.append(StringUtil.booleanToBinaryString(group.isCaseSensitive()));\n        sb.append(MetadataSerializationConfiguration.GROUP_UNIT_SEPARATOR);\n        sb.append(StringUtil.booleanToBinaryString(isRegex));\n        sb.append(MetadataSerializationConfiguration.GROUP_UNIT_SEPARATOR);\n\n        appendGroupDetails(sb, group);\n\n        return sb.toString();\n    }\n","realPath":"src/main/java/org/jabref/logic/exporter/GroupSerializer.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":41,"status":"M"},{"authorDate":"2018-01-29 02:37:06","commitOrder":4,"curCode":"    private String serializeTexGroup(TexGroup group) {\n        StringBuilder sb = new StringBuilder();\n        sb.append(MetadataSerializationConfiguration.TEX_GROUP_ID);\n        sb.append(StringUtil.quote(group.getName(), MetadataSerializationConfiguration.GROUP_UNIT_SEPARATOR, MetadataSerializationConfiguration.GROUP_QUOTE_CHAR));\n        sb.append(MetadataSerializationConfiguration.GROUP_UNIT_SEPARATOR);\n        sb.append(group.getHierarchicalContext().ordinal());\n        sb.append(MetadataSerializationConfiguration.GROUP_UNIT_SEPARATOR);\n        sb.append(StringUtil.quote(FileUtil.toPortableString(group.getFilePath()), MetadataSerializationConfiguration.GROUP_UNIT_SEPARATOR, MetadataSerializationConfiguration.GROUP_QUOTE_CHAR));\n        sb.append(MetadataSerializationConfiguration.GROUP_UNIT_SEPARATOR);\n\n        appendGroupDetails(sb, group);\n\n        return sb.toString();\n    }\n","date":"2018-01-29 02:37:06","endLine":149,"groupId":"101078","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"serializeTexGroup","params":"(TexGroupgroup)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/e8/ce0925c398d6e54dd7118d7c0d17a30614a265.src","preCode":"    private String serializeTexGroup(TexGroup group) {\n        StringBuilder sb = new StringBuilder();\n        sb.append(MetadataSerializationConfiguration.TEX_GROUP_ID);\n        sb.append(StringUtil.quote(group.getName(), MetadataSerializationConfiguration.GROUP_UNIT_SEPARATOR, MetadataSerializationConfiguration.GROUP_QUOTE_CHAR));\n        sb.append(MetadataSerializationConfiguration.GROUP_UNIT_SEPARATOR);\n        sb.append(group.getHierarchicalContext().ordinal());\n        sb.append(MetadataSerializationConfiguration.GROUP_UNIT_SEPARATOR);\n        sb.append(StringUtil.quote(FileUtil.toPortableString(group.getFilePath()), MetadataSerializationConfiguration.GROUP_UNIT_SEPARATOR, MetadataSerializationConfiguration.GROUP_QUOTE_CHAR));\n        sb.append(MetadataSerializationConfiguration.GROUP_UNIT_SEPARATOR);\n\n        appendGroupDetails(sb, group);\n\n        return sb.toString();\n    }\n","realPath":"src/main/java/org/jabref/logic/exporter/GroupSerializer.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":136,"status":"N"}],"commitId":"4b39b78e4afcd6c36b385f5c46f1d9a4eac2e29b","commitMessage":"@@@Move to extended enums for fields and entry types (#5148)\n\n* Introduce interface for fields\n\n* Continue using fields interface instead of strings\n\n* Introduce OrFields class\n\n* Move FieldProperty\n\n* Convert entry types to extended enum\n\n* Start fixing build\n\n* Fix build\n\n* Start fixing tests\n\n* Everything compiles again\n\n* Make model tests pass\n\n* Fix most tests\n\n* Fix build\n\n* Fix a few more tests\n\n* Fix a few more tests\n\n* Fix a few more tests\n\n* Fix a few more tests\n\n* Fix checkstyle issues\n\n* Fix more tests\n\n* Fix more tests\n\n* Disable test that fails on CI\n\n* Disable test that fails on CI\n","date":"2019-08-02 15:20:10","modifiedFileCount":"439","status":"M","submitter":"Tobias Diez"}]
