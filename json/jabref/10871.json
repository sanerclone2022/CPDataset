[{"authorTime":"2020-04-27 00:34:54","codes":[{"authorDate":"2020-04-27 00:34:54","commitOrder":1,"curCode":"    void testChangeColumnPreferencesVariableNamesFor51() {\n        List<String> columnNames = Arrays.asList(\"entrytype\", \"author/editor\", \"title\", \"year\", \"journal/booktitle\", \"bibtexkey\", \"printed\");\n        List<String> columnWidths = Arrays.asList(\"75\", \"300\", \"470\", \"60\", \"130\", \"100\", \"30\");\n\n        \r\n        when(prefs.getStringList(\"columnNames\")).thenReturn(columnNames);\n        when(prefs.getStringList(\"columnWidths\")).thenReturn(columnWidths);\n        when(prefs.getStringList(\"mainTableColumnSortTypes\")).thenReturn(columnNames);\n        when(prefs.getStringList(\"mainTableColumnSortOrder\")).thenReturn(columnWidths);\n\n        when(prefs.getStringList(JabRefPreferences.COLUMN_NAMES)).thenReturn(Collections.emptyList());\n        when(prefs.getStringList(JabRefPreferences.COLUMN_WIDTHS)).thenReturn(Collections.emptyList());\n        when(prefs.getStringList(JabRefPreferences.COLUMN_SORT_TYPES)).thenReturn(Collections.emptyList());\n        when(prefs.getStringList(JabRefPreferences.COLUMN_SORT_ORDER)).thenReturn(Collections.emptyList());\n\n        PreferencesMigrations.changeColumnVariableNamesFor51(prefs);\n\n        verify(prefs).putStringList(JabRefPreferences.COLUMN_NAMES, columnNames);\n        verify(prefs).putStringList(JabRefPreferences.COLUMN_WIDTHS, columnWidths);\n        verify(prefs).putStringList(JabRefPreferences.COLUMN_NAMES, columnNames);\n        verify(prefs).putStringList(JabRefPreferences.COLUMN_WIDTHS, columnWidths);\n    }\n","date":"2020-04-27 00:34:54","endLine":246,"groupId":"8250","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testChangeColumnPreferencesVariableNamesFor51","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/78/d3fc37a6bacaf21c8e4aa16c6ca13259a5d6e3.src","preCode":"    void testChangeColumnPreferencesVariableNamesFor51() {\n        List<String> columnNames = Arrays.asList(\"entrytype\", \"author/editor\", \"title\", \"year\", \"journal/booktitle\", \"bibtexkey\", \"printed\");\n        List<String> columnWidths = Arrays.asList(\"75\", \"300\", \"470\", \"60\", \"130\", \"100\", \"30\");\n\n        \r\n        when(prefs.getStringList(\"columnNames\")).thenReturn(columnNames);\n        when(prefs.getStringList(\"columnWidths\")).thenReturn(columnWidths);\n        when(prefs.getStringList(\"mainTableColumnSortTypes\")).thenReturn(columnNames);\n        when(prefs.getStringList(\"mainTableColumnSortOrder\")).thenReturn(columnWidths);\n\n        when(prefs.getStringList(JabRefPreferences.COLUMN_NAMES)).thenReturn(Collections.emptyList());\n        when(prefs.getStringList(JabRefPreferences.COLUMN_WIDTHS)).thenReturn(Collections.emptyList());\n        when(prefs.getStringList(JabRefPreferences.COLUMN_SORT_TYPES)).thenReturn(Collections.emptyList());\n        when(prefs.getStringList(JabRefPreferences.COLUMN_SORT_ORDER)).thenReturn(Collections.emptyList());\n\n        PreferencesMigrations.changeColumnVariableNamesFor51(prefs);\n\n        verify(prefs).putStringList(JabRefPreferences.COLUMN_NAMES, columnNames);\n        verify(prefs).putStringList(JabRefPreferences.COLUMN_WIDTHS, columnWidths);\n        verify(prefs).putStringList(JabRefPreferences.COLUMN_NAMES, columnNames);\n        verify(prefs).putStringList(JabRefPreferences.COLUMN_WIDTHS, columnWidths);\n    }\n","realPath":"src/test/java/org/jabref/migrations/PreferencesMigrationsTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":225,"status":"B"},{"authorDate":"2020-04-27 00:34:54","commitOrder":1,"curCode":"    void testChangeColumnPreferencesVariableNamesBackwardsCompatibility() {\n        List<String> columnNames = Arrays.asList(\"entrytype\", \"author/editor\", \"title\", \"year\", \"journal/booktitle\", \"bibtexkey\", \"printed\");\n        List<String> columnWidths = Arrays.asList(\"75\", \"300\", \"470\", \"60\", \"130\", \"100\", \"30\");\n\n        \r\n        when(prefs.getStringList(\"columnNames\")).thenReturn(columnNames);\n        when(prefs.getStringList(\"columnWidths\")).thenReturn(columnWidths);\n        when(prefs.getStringList(\"mainTableColumnSortTypes\")).thenReturn(columnNames);\n        when(prefs.getStringList(\"mainTableColumnSortOrder\")).thenReturn(columnWidths);\n\n        when(prefs.getStringList(JabRefPreferences.COLUMN_NAMES)).thenReturn(Collections.emptyList());\n        when(prefs.getStringList(JabRefPreferences.COLUMN_WIDTHS)).thenReturn(Collections.emptyList());\n        when(prefs.getStringList(JabRefPreferences.COLUMN_SORT_TYPES)).thenReturn(Collections.emptyList());\n        when(prefs.getStringList(JabRefPreferences.COLUMN_SORT_ORDER)).thenReturn(Collections.emptyList());\n\n        PreferencesMigrations.upgradeColumnPreferences(prefs);\n\n        verify(prefs, never()).put(\"columnNames\", \"anyString\");\n        verify(prefs, never()).put(\"columnWidths\", \"anyString\");\n        verify(prefs, never()).put(\"mainTableColumnSortTypes\", \"anyString\");\n        verify(prefs, never()).put(\"mainTableColumnSortOrder\", \"anyString\");\n    }\n","date":"2020-04-27 00:34:54","endLine":270,"groupId":"8250","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testChangeColumnPreferencesVariableNamesBackwardsCompatibility","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/78/d3fc37a6bacaf21c8e4aa16c6ca13259a5d6e3.src","preCode":"    void testChangeColumnPreferencesVariableNamesBackwardsCompatibility() {\n        List<String> columnNames = Arrays.asList(\"entrytype\", \"author/editor\", \"title\", \"year\", \"journal/booktitle\", \"bibtexkey\", \"printed\");\n        List<String> columnWidths = Arrays.asList(\"75\", \"300\", \"470\", \"60\", \"130\", \"100\", \"30\");\n\n        \r\n        when(prefs.getStringList(\"columnNames\")).thenReturn(columnNames);\n        when(prefs.getStringList(\"columnWidths\")).thenReturn(columnWidths);\n        when(prefs.getStringList(\"mainTableColumnSortTypes\")).thenReturn(columnNames);\n        when(prefs.getStringList(\"mainTableColumnSortOrder\")).thenReturn(columnWidths);\n\n        when(prefs.getStringList(JabRefPreferences.COLUMN_NAMES)).thenReturn(Collections.emptyList());\n        when(prefs.getStringList(JabRefPreferences.COLUMN_WIDTHS)).thenReturn(Collections.emptyList());\n        when(prefs.getStringList(JabRefPreferences.COLUMN_SORT_TYPES)).thenReturn(Collections.emptyList());\n        when(prefs.getStringList(JabRefPreferences.COLUMN_SORT_ORDER)).thenReturn(Collections.emptyList());\n\n        PreferencesMigrations.upgradeColumnPreferences(prefs);\n\n        verify(prefs, never()).put(\"columnNames\", \"anyString\");\n        verify(prefs, never()).put(\"columnWidths\", \"anyString\");\n        verify(prefs, never()).put(\"mainTableColumnSortTypes\", \"anyString\");\n        verify(prefs, never()).put(\"mainTableColumnSortOrder\", \"anyString\");\n    }\n","realPath":"src/test/java/org/jabref/migrations/PreferencesMigrationsTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":249,"status":"B"}],"commitId":"d7a57b8b14e074dd9f74ba6bf291d0f5a9c36476","commitMessage":"@@@Backward compatibility for 4.3.1 (#6296)\n\n","date":"2020-04-27 00:34:54","modifiedFileCount":"3","status":"B","submitter":"Carl Christian Snethlage"},{"authorTime":"2020-09-08 21:34:34","codes":[{"authorDate":"2020-09-08 21:34:34","commitOrder":2,"curCode":"    void testChangeColumnPreferencesVariableNamesFor51() {\n        List<String> columnNames = Arrays.asList(\"entrytype\", \"author/editor\", \"title\", \"year\", \"journal/booktitle\", \"citationkey\", \"printed\");\n        List<String> columnWidths = Arrays.asList(\"75\", \"300\", \"470\", \"60\", \"130\", \"100\", \"30\");\n\n        \r\n        when(prefs.getStringList(\"columnNames\")).thenReturn(columnNames);\n        when(prefs.getStringList(\"columnWidths\")).thenReturn(columnWidths);\n        when(prefs.getStringList(\"mainTableColumnSortTypes\")).thenReturn(columnNames);\n        when(prefs.getStringList(\"mainTableColumnSortOrder\")).thenReturn(columnWidths);\n\n        when(prefs.getStringList(JabRefPreferences.COLUMN_NAMES)).thenReturn(Collections.emptyList());\n        when(prefs.getStringList(JabRefPreferences.COLUMN_WIDTHS)).thenReturn(Collections.emptyList());\n        when(prefs.getStringList(JabRefPreferences.COLUMN_SORT_TYPES)).thenReturn(Collections.emptyList());\n        when(prefs.getStringList(JabRefPreferences.COLUMN_SORT_ORDER)).thenReturn(Collections.emptyList());\n\n        PreferencesMigrations.changeColumnVariableNamesFor51(prefs);\n\n        verify(prefs).putStringList(JabRefPreferences.COLUMN_NAMES, columnNames);\n        verify(prefs).putStringList(JabRefPreferences.COLUMN_WIDTHS, columnWidths);\n        verify(prefs).putStringList(JabRefPreferences.COLUMN_NAMES, columnNames);\n        verify(prefs).putStringList(JabRefPreferences.COLUMN_WIDTHS, columnWidths);\n    }\n","date":"2020-09-08 21:34:34","endLine":246,"groupId":"10871","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"testChangeColumnPreferencesVariableNamesFor51","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/2a/6f3cfb482c71b22e334b350d113444a4b9a8ab.src","preCode":"    void testChangeColumnPreferencesVariableNamesFor51() {\n        List<String> columnNames = Arrays.asList(\"entrytype\", \"author/editor\", \"title\", \"year\", \"journal/booktitle\", \"bibtexkey\", \"printed\");\n        List<String> columnWidths = Arrays.asList(\"75\", \"300\", \"470\", \"60\", \"130\", \"100\", \"30\");\n\n        \r\n        when(prefs.getStringList(\"columnNames\")).thenReturn(columnNames);\n        when(prefs.getStringList(\"columnWidths\")).thenReturn(columnWidths);\n        when(prefs.getStringList(\"mainTableColumnSortTypes\")).thenReturn(columnNames);\n        when(prefs.getStringList(\"mainTableColumnSortOrder\")).thenReturn(columnWidths);\n\n        when(prefs.getStringList(JabRefPreferences.COLUMN_NAMES)).thenReturn(Collections.emptyList());\n        when(prefs.getStringList(JabRefPreferences.COLUMN_WIDTHS)).thenReturn(Collections.emptyList());\n        when(prefs.getStringList(JabRefPreferences.COLUMN_SORT_TYPES)).thenReturn(Collections.emptyList());\n        when(prefs.getStringList(JabRefPreferences.COLUMN_SORT_ORDER)).thenReturn(Collections.emptyList());\n\n        PreferencesMigrations.changeColumnVariableNamesFor51(prefs);\n\n        verify(prefs).putStringList(JabRefPreferences.COLUMN_NAMES, columnNames);\n        verify(prefs).putStringList(JabRefPreferences.COLUMN_WIDTHS, columnWidths);\n        verify(prefs).putStringList(JabRefPreferences.COLUMN_NAMES, columnNames);\n        verify(prefs).putStringList(JabRefPreferences.COLUMN_WIDTHS, columnWidths);\n    }\n","realPath":"src/test/java/org/jabref/migrations/PreferencesMigrationsTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":225,"status":"M"},{"authorDate":"2020-09-08 21:34:34","commitOrder":2,"curCode":"    void testChangeColumnPreferencesVariableNamesBackwardsCompatibility() {\n        List<String> columnNames = Arrays.asList(\"entrytype\", \"author/editor\", \"title\", \"year\", \"journal/booktitle\", \"citationkey\", \"printed\");\n        List<String> columnWidths = Arrays.asList(\"75\", \"300\", \"470\", \"60\", \"130\", \"100\", \"30\");\n\n        \r\n        when(prefs.getStringList(\"columnNames\")).thenReturn(columnNames);\n        when(prefs.getStringList(\"columnWidths\")).thenReturn(columnWidths);\n        when(prefs.getStringList(\"mainTableColumnSortTypes\")).thenReturn(columnNames);\n        when(prefs.getStringList(\"mainTableColumnSortOrder\")).thenReturn(columnWidths);\n\n        when(prefs.getStringList(JabRefPreferences.COLUMN_NAMES)).thenReturn(Collections.emptyList());\n        when(prefs.getStringList(JabRefPreferences.COLUMN_WIDTHS)).thenReturn(Collections.emptyList());\n        when(prefs.getStringList(JabRefPreferences.COLUMN_SORT_TYPES)).thenReturn(Collections.emptyList());\n        when(prefs.getStringList(JabRefPreferences.COLUMN_SORT_ORDER)).thenReturn(Collections.emptyList());\n\n        PreferencesMigrations.upgradeColumnPreferences(prefs);\n\n        verify(prefs, never()).put(\"columnNames\", \"anyString\");\n        verify(prefs, never()).put(\"columnWidths\", \"anyString\");\n        verify(prefs, never()).put(\"mainTableColumnSortTypes\", \"anyString\");\n        verify(prefs, never()).put(\"mainTableColumnSortOrder\", \"anyString\");\n    }\n","date":"2020-09-08 21:34:34","endLine":270,"groupId":"10871","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"testChangeColumnPreferencesVariableNamesBackwardsCompatibility","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-jabref-10-0.7/blobInfo/CC_OUT/blobs/2a/6f3cfb482c71b22e334b350d113444a4b9a8ab.src","preCode":"    void testChangeColumnPreferencesVariableNamesBackwardsCompatibility() {\n        List<String> columnNames = Arrays.asList(\"entrytype\", \"author/editor\", \"title\", \"year\", \"journal/booktitle\", \"bibtexkey\", \"printed\");\n        List<String> columnWidths = Arrays.asList(\"75\", \"300\", \"470\", \"60\", \"130\", \"100\", \"30\");\n\n        \r\n        when(prefs.getStringList(\"columnNames\")).thenReturn(columnNames);\n        when(prefs.getStringList(\"columnWidths\")).thenReturn(columnWidths);\n        when(prefs.getStringList(\"mainTableColumnSortTypes\")).thenReturn(columnNames);\n        when(prefs.getStringList(\"mainTableColumnSortOrder\")).thenReturn(columnWidths);\n\n        when(prefs.getStringList(JabRefPreferences.COLUMN_NAMES)).thenReturn(Collections.emptyList());\n        when(prefs.getStringList(JabRefPreferences.COLUMN_WIDTHS)).thenReturn(Collections.emptyList());\n        when(prefs.getStringList(JabRefPreferences.COLUMN_SORT_TYPES)).thenReturn(Collections.emptyList());\n        when(prefs.getStringList(JabRefPreferences.COLUMN_SORT_ORDER)).thenReturn(Collections.emptyList());\n\n        PreferencesMigrations.upgradeColumnPreferences(prefs);\n\n        verify(prefs, never()).put(\"columnNames\", \"anyString\");\n        verify(prefs, never()).put(\"columnWidths\", \"anyString\");\n        verify(prefs, never()).put(\"mainTableColumnSortTypes\", \"anyString\");\n        verify(prefs, never()).put(\"mainTableColumnSortOrder\", \"anyString\");\n    }\n","realPath":"src/test/java/org/jabref/migrations/PreferencesMigrationsTest.java","repoName":"jabref","snippetEndLine":0,"snippetStartLine":0,"startLine":249,"status":"M"}],"commitId":"6dec1747d8a1c89f6c62fc1d1939d88411f17eba","commitMessage":"@@@Complete rebranding of `bibtexkey` as `citationkey` (#6875)\n\n","date":"2020-09-08 21:34:34","modifiedFileCount":"127","status":"M","submitter":"Tobias Diez"}]
