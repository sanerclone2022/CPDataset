[{"authorTime":"2019-08-26 18:16:33","codes":[{"authorDate":"2017-07-05 12:38:33","commitOrder":3,"curCode":"    public void start() {\n        super.start();\n\n        if (!embeddedServer.isStart()) {\n            embeddedServer.start();\n        }\n\n        this.bootstrap = new ServerBootstrap(new NioServerSocketChannelFactory(Executors.newCachedThreadPool(),\n            Executors.newCachedThreadPool()));\n        \r\n\r\n\r\n\r\n\r\n\r\n\r\n\n        bootstrap.setOption(\"child.keepAlive\", true);\n        \r\n\r\n\n        bootstrap.setOption(\"child.tcpNoDelay\", true);\n\n        \r\n        bootstrap.setPipelineFactory(new ChannelPipelineFactory() {\n\n            public ChannelPipeline getPipeline() throws Exception {\n                ChannelPipeline pipelines = Channels.pipeline();\n                pipelines.addLast(FixedHeaderFrameDecoder.class.getName(), new FixedHeaderFrameDecoder());\n                \r\n                pipelines.addLast(HandshakeInitializationHandler.class.getName(), new HandshakeInitializationHandler(childGroups));\n                pipelines.addLast(ClientAuthenticationHandler.class.getName(),\n                    new ClientAuthenticationHandler(embeddedServer));\n\n                SessionHandler sessionHandler = new SessionHandler(embeddedServer);\n                pipelines.addLast(SessionHandler.class.getName(), sessionHandler);\n                return pipelines;\n            }\n        });\n\n        \r\n        if (StringUtils.isNotEmpty(ip)) {\n            this.serverChannel = bootstrap.bind(new InetSocketAddress(this.ip, this.port));\n        } else {\n            this.serverChannel = bootstrap.bind(new InetSocketAddress(this.port));\n        }\n    }\n","date":"2017-07-05 12:38:33","endLine":99,"groupId":"1425","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"start","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-canal-10-0.7/blobInfo/CC_OUT/blobs/57/289f7a7ae1385bc00a24109b8daddc260c11fd.src","preCode":"    public void start() {\n        super.start();\n\n        if (!embeddedServer.isStart()) {\n            embeddedServer.start();\n        }\n\n        this.bootstrap = new ServerBootstrap(new NioServerSocketChannelFactory(Executors.newCachedThreadPool(),\n            Executors.newCachedThreadPool()));\n        \r\n\r\n\r\n\r\n\r\n\r\n\r\n\n        bootstrap.setOption(\"child.keepAlive\", true);\n        \r\n\r\n\n        bootstrap.setOption(\"child.tcpNoDelay\", true);\n\n        \r\n        bootstrap.setPipelineFactory(new ChannelPipelineFactory() {\n\n            public ChannelPipeline getPipeline() throws Exception {\n                ChannelPipeline pipelines = Channels.pipeline();\n                pipelines.addLast(FixedHeaderFrameDecoder.class.getName(), new FixedHeaderFrameDecoder());\n                \r\n                pipelines.addLast(HandshakeInitializationHandler.class.getName(), new HandshakeInitializationHandler(childGroups));\n                pipelines.addLast(ClientAuthenticationHandler.class.getName(),\n                    new ClientAuthenticationHandler(embeddedServer));\n\n                SessionHandler sessionHandler = new SessionHandler(embeddedServer);\n                pipelines.addLast(SessionHandler.class.getName(), sessionHandler);\n                return pipelines;\n            }\n        });\n\n        \r\n        if (StringUtils.isNotEmpty(ip)) {\n            this.serverChannel = bootstrap.bind(new InetSocketAddress(this.ip, this.port));\n        } else {\n            this.serverChannel = bootstrap.bind(new InetSocketAddress(this.port));\n        }\n    }\n","realPath":"server/src/main/java/com/alibaba/otter/canal/server/netty/CanalServerWithNetty.java","repoName":"canal","snippetEndLine":0,"snippetStartLine":0,"startLine":53,"status":"NB"},{"authorDate":"2019-08-26 18:16:33","commitOrder":3,"curCode":"    public void start() {\n        super.start();\n\n        this.bootstrap = new ServerBootstrap(new NioServerSocketChannelFactory(Executors.newCachedThreadPool(),\n            Executors.newCachedThreadPool()));\n        \r\n\r\n\r\n\r\n\r\n\n        bootstrap.setOption(\"child.keepAlive\", true);\n        \r\n\r\n\n        bootstrap.setOption(\"child.tcpNoDelay\", true);\n\n        \r\n        bootstrap.setPipelineFactory(new ChannelPipelineFactory() {\n\n            public ChannelPipeline getPipeline() throws Exception {\n                ChannelPipeline pipelines = Channels.pipeline();\n                pipelines.addLast(FixedHeaderFrameDecoder.class.getName(), new FixedHeaderFrameDecoder());\n                \r\n                pipelines.addLast(HandshakeInitializationHandler.class.getName(),\n                    new HandshakeInitializationHandler(childGroups));\n                pipelines.addLast(ClientAuthenticationHandler.class.getName(),\n                    new ClientAuthenticationHandler(canalAdmin));\n\n                SessionHandler sessionHandler = new SessionHandler(canalAdmin);\n                pipelines.addLast(SessionHandler.class.getName(), sessionHandler);\n                return pipelines;\n            }\n        });\n\n        \r\n        if (StringUtils.isNotEmpty(ip)) {\n            this.serverChannel = bootstrap.bind(new InetSocketAddress(this.ip, this.port));\n        } else {\n            this.serverChannel = bootstrap.bind(new InetSocketAddress(this.port));\n        }\n    }\n","date":"2019-08-26 18:16:33","endLine":95,"groupId":"446","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"start","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-canal-10-0.7/blobInfo/CC_OUT/blobs/f0/9cce077dd440194412194ea9e1cede9abc0a95.src","preCode":"    public void start() {\n        super.start();\n\n        this.bootstrap = new ServerBootstrap(new NioServerSocketChannelFactory(Executors.newCachedThreadPool(),\n            Executors.newCachedThreadPool()));\n        \r\n\r\n\r\n\r\n\r\n\n        bootstrap.setOption(\"child.keepAlive\", true);\n        \r\n\r\n\n        bootstrap.setOption(\"child.tcpNoDelay\", true);\n\n        \r\n        bootstrap.setPipelineFactory(new ChannelPipelineFactory() {\n\n            public ChannelPipeline getPipeline() throws Exception {\n                ChannelPipeline pipelines = Channels.pipeline();\n                pipelines.addLast(FixedHeaderFrameDecoder.class.getName(), new FixedHeaderFrameDecoder());\n                \r\n                pipelines.addLast(HandshakeInitializationHandler.class.getName(),\n                    new HandshakeInitializationHandler(childGroups));\n                pipelines.addLast(ClientAuthenticationHandler.class.getName(),\n                    new ClientAuthenticationHandler(canalAdmin));\n\n                SessionHandler sessionHandler = new SessionHandler(canalAdmin);\n                pipelines.addLast(SessionHandler.class.getName(), sessionHandler);\n                return pipelines;\n            }\n        });\n\n        \r\n        if (StringUtils.isNotEmpty(ip)) {\n            this.serverChannel = bootstrap.bind(new InetSocketAddress(this.ip, this.port));\n        } else {\n            this.serverChannel = bootstrap.bind(new InetSocketAddress(this.port));\n        }\n    }\n","realPath":"server/src/main/java/com/alibaba/otter/canal/admin/netty/CanalAdminWithNetty.java","repoName":"canal","snippetEndLine":0,"snippetStartLine":0,"startLine":54,"status":"B"}],"commitId":"3d4dbc9a8c53de730e5b0433c39ea1d69e2dd480","commitMessage":"@@@fixed issue #2099 .  support user/passwd acl and canal admin operator\n","date":"2019-08-26 18:16:33","modifiedFileCount":"24","status":"M","submitter":"agapple"},{"authorTime":"2020-09-17 10:48:15","codes":[{"authorDate":"2020-09-17 10:48:15","commitOrder":4,"curCode":"    public void start() {\n        super.start();\n\n        if (!embeddedServer.isStart()) {\n            embeddedServer.start();\n        }\n\n        this.bootstrap = new ServerBootstrap(new NioServerSocketChannelFactory(Executors.newCachedThreadPool(),\n            Executors.newCachedThreadPool()));\n        \r\n\r\n\r\n\r\n\r\n\n        bootstrap.setOption(\"child.keepAlive\", true);\n        \r\n\r\n\n        bootstrap.setOption(\"child.tcpNoDelay\", true);\n\n        \r\n        bootstrap.setPipelineFactory(() -> {\n            ChannelPipeline pipelines = Channels.pipeline();\n            pipelines.addLast(FixedHeaderFrameDecoder.class.getName(), new FixedHeaderFrameDecoder());\n            \r\n            pipelines.addLast(HandshakeInitializationHandler.class.getName(),\n                new HandshakeInitializationHandler(childGroups));\n            pipelines.addLast(ClientAuthenticationHandler.class.getName(),\n                new ClientAuthenticationHandler(embeddedServer));\n\n            SessionHandler sessionHandler = new SessionHandler(embeddedServer);\n            pipelines.addLast(SessionHandler.class.getName(), sessionHandler);\n            return pipelines;\n        });\n\n        \r\n        if (StringUtils.isNotEmpty(ip)) {\n            this.serverChannel = bootstrap.bind(new InetSocketAddress(this.ip, this.port));\n        } else {\n            this.serverChannel = bootstrap.bind(new InetSocketAddress(this.port));\n        }\n    }\n","date":"2020-09-17 17:46:20","endLine":98,"groupId":"1040","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"start","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-canal-10-0.7/blobInfo/CC_OUT/blobs/78/7e078fa1a33d7c7352477adfd9b9f470c9d4c3.src","preCode":"    public void start() {\n        super.start();\n\n        if (!embeddedServer.isStart()) {\n            embeddedServer.start();\n        }\n\n        this.bootstrap = new ServerBootstrap(new NioServerSocketChannelFactory(Executors.newCachedThreadPool(),\n            Executors.newCachedThreadPool()));\n        \r\n\r\n\r\n\r\n\r\n\n        bootstrap.setOption(\"child.keepAlive\", true);\n        \r\n\r\n\n        bootstrap.setOption(\"child.tcpNoDelay\", true);\n\n        \r\n        bootstrap.setPipelineFactory(new ChannelPipelineFactory() {\n\n            public ChannelPipeline getPipeline() throws Exception {\n                ChannelPipeline pipelines = Channels.pipeline();\n                pipelines.addLast(FixedHeaderFrameDecoder.class.getName(), new FixedHeaderFrameDecoder());\n                \r\n                pipelines.addLast(HandshakeInitializationHandler.class.getName(),\n                    new HandshakeInitializationHandler(childGroups));\n                pipelines.addLast(ClientAuthenticationHandler.class.getName(),\n                    new ClientAuthenticationHandler(embeddedServer));\n\n                SessionHandler sessionHandler = new SessionHandler(embeddedServer);\n                pipelines.addLast(SessionHandler.class.getName(), sessionHandler);\n                return pipelines;\n            }\n        });\n\n        \r\n        if (StringUtils.isNotEmpty(ip)) {\n            this.serverChannel = bootstrap.bind(new InetSocketAddress(this.ip, this.port));\n        } else {\n            this.serverChannel = bootstrap.bind(new InetSocketAddress(this.port));\n        }\n    }\n","realPath":"server/src/main/java/com/alibaba/otter/canal/server/netty/CanalServerWithNetty.java","repoName":"canal","snippetEndLine":0,"snippetStartLine":0,"startLine":56,"status":"M"},{"authorDate":"2020-09-17 10:48:15","commitOrder":4,"curCode":"    public void start() {\n        super.start();\n\n        this.bootstrap = new ServerBootstrap(new NioServerSocketChannelFactory(Executors.newCachedThreadPool(),\n            Executors.newCachedThreadPool()));\n        \r\n\r\n\r\n\r\n\r\n\n        bootstrap.setOption(\"child.keepAlive\", true);\n        \r\n\r\n\n        bootstrap.setOption(\"child.tcpNoDelay\", true);\n\n        \r\n        bootstrap.setPipelineFactory(() -> {\n            ChannelPipeline pipelines = Channels.pipeline();\n            pipelines.addLast(FixedHeaderFrameDecoder.class.getName(), new FixedHeaderFrameDecoder());\n            \r\n            pipelines.addLast(HandshakeInitializationHandler.class.getName(),\n                new HandshakeInitializationHandler(childGroups));\n            pipelines.addLast(ClientAuthenticationHandler.class.getName(),\n                new ClientAuthenticationHandler(canalAdmin));\n\n            SessionHandler sessionHandler = new SessionHandler(canalAdmin);\n            pipelines.addLast(SessionHandler.class.getName(), sessionHandler);\n            return pipelines;\n        });\n\n        \r\n        if (StringUtils.isNotEmpty(ip)) {\n            this.serverChannel = bootstrap.bind(new InetSocketAddress(this.ip, this.port));\n        } else {\n            this.serverChannel = bootstrap.bind(new InetSocketAddress(this.port));\n        }\n    }\n","date":"2020-09-17 17:46:20","endLine":92,"groupId":"1040","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"start","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-canal-10-0.7/blobInfo/CC_OUT/blobs/12/250734ed873c27962befb3efd2e4fba69d743a.src","preCode":"    public void start() {\n        super.start();\n\n        this.bootstrap = new ServerBootstrap(new NioServerSocketChannelFactory(Executors.newCachedThreadPool(),\n            Executors.newCachedThreadPool()));\n        \r\n\r\n\r\n\r\n\r\n\n        bootstrap.setOption(\"child.keepAlive\", true);\n        \r\n\r\n\n        bootstrap.setOption(\"child.tcpNoDelay\", true);\n\n        \r\n        bootstrap.setPipelineFactory(new ChannelPipelineFactory() {\n\n            public ChannelPipeline getPipeline() throws Exception {\n                ChannelPipeline pipelines = Channels.pipeline();\n                pipelines.addLast(FixedHeaderFrameDecoder.class.getName(), new FixedHeaderFrameDecoder());\n                \r\n                pipelines.addLast(HandshakeInitializationHandler.class.getName(),\n                    new HandshakeInitializationHandler(childGroups));\n                pipelines.addLast(ClientAuthenticationHandler.class.getName(),\n                    new ClientAuthenticationHandler(canalAdmin));\n\n                SessionHandler sessionHandler = new SessionHandler(canalAdmin);\n                pipelines.addLast(SessionHandler.class.getName(), sessionHandler);\n                return pipelines;\n            }\n        });\n\n        \r\n        if (StringUtils.isNotEmpty(ip)) {\n            this.serverChannel = bootstrap.bind(new InetSocketAddress(this.ip, this.port));\n        } else {\n            this.serverChannel = bootstrap.bind(new InetSocketAddress(this.port));\n        }\n    }\n","realPath":"server/src/main/java/com/alibaba/otter/canal/admin/netty/CanalAdminWithNetty.java","repoName":"canal","snippetEndLine":0,"snippetStartLine":0,"startLine":54,"status":"M"}],"commitId":"e7658879bce801da20c3ebd571ceb0a9fff8f6c8","commitMessage":"@@@= cold cleanup\n\n  * using lambda if possible (we are already building in Java8)\n  * using diamond when new generic instance\n  * remove used improt\n","date":"2020-09-17 17:46:20","modifiedFileCount":"133","status":"M","submitter":"zavakid"}]
