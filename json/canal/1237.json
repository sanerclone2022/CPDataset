[{"authorTime":"2019-08-26 18:16:33","codes":[{"authorDate":"2018-07-19 17:55:53","commitOrder":2,"curCode":"    public static void write(Channel channel, ByteBuffer body, ChannelFutureListener channelFutureListner) {\n        byte[] header = ByteBuffer.allocate(HEADER_LENGTH).order(ByteOrder.BIG_ENDIAN).putInt(body.limit()).array();\n        List<ChannelBuffer> components = new ArrayList<ChannelBuffer>(2);\n        components.add(ChannelBuffers.wrappedBuffer(ByteOrder.BIG_ENDIAN, header));\n        components.add(ChannelBuffers.wrappedBuffer(body));\n\n        if (channelFutureListner == null) {\n            Channels.write(channel, new CompositeChannelBuffer(ByteOrder.BIG_ENDIAN, components));\n        } else {\n            Channels.write(channel, new CompositeChannelBuffer(ByteOrder.BIG_ENDIAN, components))\n                .addListener(channelFutureListner);\n        }\n    }\n","date":"2018-07-19 17:55:53","endLine":41,"groupId":"1646","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"write","params":"(Channelchannel@ByteBufferbody@ChannelFutureListenerchannelFutureListner)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-canal-10-0.7/blobInfo/CC_OUT/blobs/20/532400e65bf0a376c981a2cbe13d659c4798f4.src","preCode":"    public static void write(Channel channel, ByteBuffer body, ChannelFutureListener channelFutureListner) {\n        byte[] header = ByteBuffer.allocate(HEADER_LENGTH).order(ByteOrder.BIG_ENDIAN).putInt(body.limit()).array();\n        List<ChannelBuffer> components = new ArrayList<ChannelBuffer>(2);\n        components.add(ChannelBuffers.wrappedBuffer(ByteOrder.BIG_ENDIAN, header));\n        components.add(ChannelBuffers.wrappedBuffer(body));\n\n        if (channelFutureListner == null) {\n            Channels.write(channel, new CompositeChannelBuffer(ByteOrder.BIG_ENDIAN, components));\n        } else {\n            Channels.write(channel, new CompositeChannelBuffer(ByteOrder.BIG_ENDIAN, components))\n                .addListener(channelFutureListner);\n        }\n    }\n","realPath":"server/src/main/java/com/alibaba/otter/canal/server/netty/NettyUtils.java","repoName":"canal","snippetEndLine":0,"snippetStartLine":0,"startLine":29,"status":"NB"},{"authorDate":"2019-08-26 18:16:33","commitOrder":2,"curCode":"    public static void write(Channel channel, ByteBuffer body) {\n        byte[] header = ByteBuffer.allocate(HEADER_LENGTH).order(ByteOrder.BIG_ENDIAN).putInt(body.limit()).array();\n        List<ChannelBuffer> components = new ArrayList<ChannelBuffer>(2);\n        components.add(ChannelBuffers.wrappedBuffer(ByteOrder.BIG_ENDIAN, header));\n        components.add(ChannelBuffers.wrappedBuffer(body));\n        Channels.write(channel, new CompositeChannelBuffer(ByteOrder.BIG_ENDIAN, components));\n    }\n","date":"2019-08-26 18:16:33","endLine":30,"groupId":"1646","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"write","params":"(Channelchannel@ByteBufferbody)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-canal-10-0.7/blobInfo/CC_OUT/blobs/54/cab8b522abced27fb58b3c66175be479c34aff.src","preCode":"    public static void write(Channel channel, ByteBuffer body) {\n        byte[] header = ByteBuffer.allocate(HEADER_LENGTH).order(ByteOrder.BIG_ENDIAN).putInt(body.limit()).array();\n        List<ChannelBuffer> components = new ArrayList<ChannelBuffer>(2);\n        components.add(ChannelBuffers.wrappedBuffer(ByteOrder.BIG_ENDIAN, header));\n        components.add(ChannelBuffers.wrappedBuffer(body));\n        Channels.write(channel, new CompositeChannelBuffer(ByteOrder.BIG_ENDIAN, components));\n    }\n","realPath":"server/src/main/java/com/alibaba/otter/canal/admin/netty/AdminNettyUtils.java","repoName":"canal","snippetEndLine":0,"snippetStartLine":0,"startLine":24,"status":"B"}],"commitId":"3d4dbc9a8c53de730e5b0433c39ea1d69e2dd480","commitMessage":"@@@fixed issue #2099 .  support user/passwd acl and canal admin operator\n","date":"2019-08-26 18:16:33","modifiedFileCount":"24","status":"M","submitter":"agapple"},{"authorTime":"2020-09-17 10:48:15","codes":[{"authorDate":"2020-09-17 10:48:15","commitOrder":3,"curCode":"    public static void write(Channel channel, ByteBuffer body, ChannelFutureListener channelFutureListner) {\n        byte[] header = ByteBuffer.allocate(HEADER_LENGTH).order(ByteOrder.BIG_ENDIAN).putInt(body.limit()).array();\n        List<ChannelBuffer> components = new ArrayList<>(2);\n        components.add(ChannelBuffers.wrappedBuffer(ByteOrder.BIG_ENDIAN, header));\n        components.add(ChannelBuffers.wrappedBuffer(body));\n\n        if (channelFutureListner == null) {\n            Channels.write(channel, new CompositeChannelBuffer(ByteOrder.BIG_ENDIAN, components));\n        } else {\n            Channels.write(channel, new CompositeChannelBuffer(ByteOrder.BIG_ENDIAN, components))\n                .addListener(channelFutureListner);\n        }\n    }\n","date":"2020-09-17 17:46:20","endLine":42,"groupId":"1237","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"write","params":"(Channelchannel@ByteBufferbody@ChannelFutureListenerchannelFutureListner)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-canal-10-0.7/blobInfo/CC_OUT/blobs/4c/6356b3f8be332055177a6908000b7d8521f507.src","preCode":"    public static void write(Channel channel, ByteBuffer body, ChannelFutureListener channelFutureListner) {\n        byte[] header = ByteBuffer.allocate(HEADER_LENGTH).order(ByteOrder.BIG_ENDIAN).putInt(body.limit()).array();\n        List<ChannelBuffer> components = new ArrayList<ChannelBuffer>(2);\n        components.add(ChannelBuffers.wrappedBuffer(ByteOrder.BIG_ENDIAN, header));\n        components.add(ChannelBuffers.wrappedBuffer(body));\n\n        if (channelFutureListner == null) {\n            Channels.write(channel, new CompositeChannelBuffer(ByteOrder.BIG_ENDIAN, components));\n        } else {\n            Channels.write(channel, new CompositeChannelBuffer(ByteOrder.BIG_ENDIAN, components))\n                .addListener(channelFutureListner);\n        }\n    }\n","realPath":"server/src/main/java/com/alibaba/otter/canal/server/netty/NettyUtils.java","repoName":"canal","snippetEndLine":0,"snippetStartLine":0,"startLine":30,"status":"M"},{"authorDate":"2020-09-17 10:48:15","commitOrder":3,"curCode":"    public static void write(Channel channel, ByteBuffer body) {\n        byte[] header = ByteBuffer.allocate(HEADER_LENGTH).order(ByteOrder.BIG_ENDIAN).putInt(body.limit()).array();\n        List<ChannelBuffer> components = new ArrayList<>(2);\n        components.add(ChannelBuffers.wrappedBuffer(ByteOrder.BIG_ENDIAN, header));\n        components.add(ChannelBuffers.wrappedBuffer(body));\n        Channels.write(channel, new CompositeChannelBuffer(ByteOrder.BIG_ENDIAN, components));\n    }\n","date":"2020-09-17 17:46:20","endLine":30,"groupId":"1237","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"write","params":"(Channelchannel@ByteBufferbody)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-canal-10-0.7/blobInfo/CC_OUT/blobs/0f/1d654e6ee6503217f5a613dbce4711e6a9e890.src","preCode":"    public static void write(Channel channel, ByteBuffer body) {\n        byte[] header = ByteBuffer.allocate(HEADER_LENGTH).order(ByteOrder.BIG_ENDIAN).putInt(body.limit()).array();\n        List<ChannelBuffer> components = new ArrayList<ChannelBuffer>(2);\n        components.add(ChannelBuffers.wrappedBuffer(ByteOrder.BIG_ENDIAN, header));\n        components.add(ChannelBuffers.wrappedBuffer(body));\n        Channels.write(channel, new CompositeChannelBuffer(ByteOrder.BIG_ENDIAN, components));\n    }\n","realPath":"server/src/main/java/com/alibaba/otter/canal/admin/netty/AdminNettyUtils.java","repoName":"canal","snippetEndLine":0,"snippetStartLine":0,"startLine":24,"status":"M"}],"commitId":"e7658879bce801da20c3ebd571ceb0a9fff8f6c8","commitMessage":"@@@= cold cleanup\n\n  * using lambda if possible (we are already building in Java8)\n  * using diamond when new generic instance\n  * remove used improt\n","date":"2020-09-17 17:46:20","modifiedFileCount":"133","status":"M","submitter":"zavakid"}]
