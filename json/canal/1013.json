[{"authorTime":"2019-03-21 19:27:39","codes":[{"authorDate":"2019-03-21 19:27:39","commitOrder":1,"curCode":"    private void process() {\n        while (!running) {\n            try {\n                Thread.sleep(1000);\n            } catch (InterruptedException e) {\n            }\n        }\n\n        while (running) {\n            try {\n                connector.connect();\n                connector.subscribe();\n                while (running) {\n                    List<Message> messages = connector.getListWithoutAck(100L, TimeUnit.MILLISECONDS); \r\n                    for (Message message : messages) {\n                        long batchId = message.getId();\n                        int size = message.getEntries().size();\n                        if (batchId == -1 || size == 0) {\n                            \r\n                            \r\n                            \r\n                            \r\n                        } else {\n                            printSummary(message, batchId, size);\n                            printEntry(message.getEntries());\n                            \r\n                        }\n                    }\n\n                    connector.ack(); \r\n                }\n            } catch (Exception e) {\n                logger.error(e.getMessage(), e);\n            }\n        }\n\n        connector.unsubscribe();\n        \r\n    }\n","date":"2019-03-21 19:27:39","endLine":136,"groupId":"1722","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"process","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-canal-10-0.7/blobInfo/CC_OUT/blobs/c9/5abb0177c1432013ed0a88774f0f61d074eeff.src","preCode":"    private void process() {\n        while (!running) {\n            try {\n                Thread.sleep(1000);\n            } catch (InterruptedException e) {\n            }\n        }\n\n        while (running) {\n            try {\n                connector.connect();\n                connector.subscribe();\n                while (running) {\n                    List<Message> messages = connector.getListWithoutAck(100L, TimeUnit.MILLISECONDS); \r\n                    for (Message message : messages) {\n                        long batchId = message.getId();\n                        int size = message.getEntries().size();\n                        if (batchId == -1 || size == 0) {\n                            \r\n                            \r\n                            \r\n                            \r\n                        } else {\n                            printSummary(message, batchId, size);\n                            printEntry(message.getEntries());\n                            \r\n                        }\n                    }\n\n                    connector.ack(); \r\n                }\n            } catch (Exception e) {\n                logger.error(e.getMessage(), e);\n            }\n        }\n\n        connector.unsubscribe();\n        \r\n    }\n","realPath":"example/src/main/java/com/alibaba/otter/canal/example/rocketmq/CanalRocketMQClientExample.java","repoName":"canal","snippetEndLine":0,"snippetStartLine":0,"startLine":98,"status":"B"},{"authorDate":"2019-03-21 19:27:39","commitOrder":1,"curCode":"    private void process() {\n        while (!running) {\n            try {\n                Thread.sleep(1000);\n            } catch (InterruptedException e) {\n            }\n        }\n\n        while (running) {\n            try {\n                connector.connect();\n                connector.subscribe();\n                while (running) {\n                    List<FlatMessage> messages = connector.getFlatList(100L, TimeUnit.MILLISECONDS); \r\n                    for (FlatMessage message : messages) {\n                        long batchId = message.getId();\n                        if (batchId == -1 || message.getData() == null) {\n                            \r\n                            \r\n                            \r\n                            \r\n                        } else {\n                            logger.info(message.toString());\n                        }\n                    }\n\n                    connector.ack(); \r\n                }\n            } catch (Exception e) {\n                logger.error(e.getMessage(), e);\n            }\n        }\n\n        connector.unsubscribe();\n        \r\n    }\n","date":"2019-03-21 19:27:39","endLine":133,"groupId":"71","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"process","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-canal-10-0.7/blobInfo/CC_OUT/blobs/6b/55377165ca831f51c28fd9a861947c6fb52b9c.src","preCode":"    private void process() {\n        while (!running) {\n            try {\n                Thread.sleep(1000);\n            } catch (InterruptedException e) {\n            }\n        }\n\n        while (running) {\n            try {\n                connector.connect();\n                connector.subscribe();\n                while (running) {\n                    List<FlatMessage> messages = connector.getFlatList(100L, TimeUnit.MILLISECONDS); \r\n                    for (FlatMessage message : messages) {\n                        long batchId = message.getId();\n                        if (batchId == -1 || message.getData() == null) {\n                            \r\n                            \r\n                            \r\n                            \r\n                        } else {\n                            logger.info(message.toString());\n                        }\n                    }\n\n                    connector.ack(); \r\n                }\n            } catch (Exception e) {\n                logger.error(e.getMessage(), e);\n            }\n        }\n\n        connector.unsubscribe();\n        \r\n    }\n","realPath":"example/src/main/java/com/alibaba/otter/canal/example/rocketmq/CanalRocketMQClientFlatMessageExample.java","repoName":"canal","snippetEndLine":0,"snippetStartLine":0,"startLine":98,"status":"B"}],"commitId":"a81d2710ff927925301c7fef0aee51696676cec0","commitMessage":"@@@fixed MQ partition\n","date":"2019-03-21 19:27:39","modifiedFileCount":"6","status":"B","submitter":"agapple"},{"authorTime":"2019-03-21 19:27:39","codes":[{"authorDate":"2019-05-27 23:51:32","commitOrder":2,"curCode":"    private void process() {\n        while (!running) {\n            try {\n                Thread.sleep(1000);\n            } catch (InterruptedException e) {\n            }\n        }\n\n        while (running) {\n            try {\n                connector.connect();\n                connector.subscribe();\n                while (running) {\n                    List<Message> messages = connector.getListWithoutAck(1000L, TimeUnit.MILLISECONDS); \r\n                    for (Message message : messages) {\n                        long batchId = message.getId();\n                        int size = message.getEntries().size();\n                        if (batchId == -1 || size == 0) {\n                            \r\n                            \r\n                            \r\n                            \r\n                        } else {\n                            printSummary(message, batchId, size);\n                            printEntry(message.getEntries());\n                            \r\n                        }\n                    }\n\n                    connector.ack(); \r\n                }\n            } catch (Exception e) {\n                logger.error(e.getMessage(), e);\n            }\n        }\n\n        connector.unsubscribe();\n        \r\n    }\n","date":"2019-05-27 23:51:32","endLine":145,"groupId":"1013","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"process","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-canal-10-0.7/blobInfo/CC_OUT/blobs/3c/88900e25d5a40377b84bf2f23febdeecb3721f.src","preCode":"    private void process() {\n        while (!running) {\n            try {\n                Thread.sleep(1000);\n            } catch (InterruptedException e) {\n            }\n        }\n\n        while (running) {\n            try {\n                connector.connect();\n                connector.subscribe();\n                while (running) {\n                    List<Message> messages = connector.getListWithoutAck(100L, TimeUnit.MILLISECONDS); \r\n                    for (Message message : messages) {\n                        long batchId = message.getId();\n                        int size = message.getEntries().size();\n                        if (batchId == -1 || size == 0) {\n                            \r\n                            \r\n                            \r\n                            \r\n                        } else {\n                            printSummary(message, batchId, size);\n                            printEntry(message.getEntries());\n                            \r\n                        }\n                    }\n\n                    connector.ack(); \r\n                }\n            } catch (Exception e) {\n                logger.error(e.getMessage(), e);\n            }\n        }\n\n        connector.unsubscribe();\n        \r\n    }\n","realPath":"example/src/main/java/com/alibaba/otter/canal/example/rocketmq/CanalRocketMQClientExample.java","repoName":"canal","snippetEndLine":0,"snippetStartLine":0,"startLine":107,"status":"M"},{"authorDate":"2019-03-21 19:27:39","commitOrder":2,"curCode":"    private void process() {\n        while (!running) {\n            try {\n                Thread.sleep(1000);\n            } catch (InterruptedException e) {\n            }\n        }\n\n        while (running) {\n            try {\n                connector.connect();\n                connector.subscribe();\n                while (running) {\n                    List<FlatMessage> messages = connector.getFlatList(100L, TimeUnit.MILLISECONDS); \r\n                    for (FlatMessage message : messages) {\n                        long batchId = message.getId();\n                        if (batchId == -1 || message.getData() == null) {\n                            \r\n                            \r\n                            \r\n                            \r\n                        } else {\n                            logger.info(message.toString());\n                        }\n                    }\n\n                    connector.ack(); \r\n                }\n            } catch (Exception e) {\n                logger.error(e.getMessage(), e);\n            }\n        }\n\n        connector.unsubscribe();\n        \r\n    }\n","date":"2019-03-21 19:27:39","endLine":133,"groupId":"1013","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"process","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-canal-10-0.7/blobInfo/CC_OUT/blobs/6b/55377165ca831f51c28fd9a861947c6fb52b9c.src","preCode":"    private void process() {\n        while (!running) {\n            try {\n                Thread.sleep(1000);\n            } catch (InterruptedException e) {\n            }\n        }\n\n        while (running) {\n            try {\n                connector.connect();\n                connector.subscribe();\n                while (running) {\n                    List<FlatMessage> messages = connector.getFlatList(100L, TimeUnit.MILLISECONDS); \r\n                    for (FlatMessage message : messages) {\n                        long batchId = message.getId();\n                        if (batchId == -1 || message.getData() == null) {\n                            \r\n                            \r\n                            \r\n                            \r\n                        } else {\n                            logger.info(message.toString());\n                        }\n                    }\n\n                    connector.ack(); \r\n                }\n            } catch (Exception e) {\n                logger.error(e.getMessage(), e);\n            }\n        }\n\n        connector.unsubscribe();\n        \r\n    }\n","realPath":"example/src/main/java/com/alibaba/otter/canal/example/rocketmq/CanalRocketMQClientFlatMessageExample.java","repoName":"canal","snippetEndLine":0,"snippetStartLine":0,"startLine":98,"status":"N"}],"commitId":"d0a83aad2758c28e84b5581fbf740ed5a4ffee55","commitMessage":"@@@Support seamless docking with Alibaba Cloud RocketMQ commercial service (#1849)\n\n","date":"2019-05-27 23:51:32","modifiedFileCount":"10","status":"M","submitter":"Heng Du"}]
