[{"authorTime":"2019-08-22 23:03:22","codes":[{"authorDate":"2019-08-22 23:03:22","commitOrder":1,"curCode":"    public void testFullPut() {\n        int bufferSize = 16;\n        MemoryEventStoreWithBuffer eventStore = new MemoryEventStoreWithBuffer();\n        eventStore.setBufferSize(bufferSize);\n        eventStore.start();\n\n        for (int i = 0; i < bufferSize; i++) {\n            boolean result = eventStore.tryPut(buildEvent(\"1\", 1L, 1L + i));\n            Assert.assertTrue(result);\n        }\n\n        boolean result = eventStore.tryPut(buildEvent(\"1\", 1L, 1L + bufferSize));\n        Assert.assertFalse(result);\n\n        try {\n            result = eventStore.put(buildEvent(\"1\", 1L, 1L + bufferSize), 1000L, TimeUnit.MILLISECONDS);\n        } catch (CanalStoreException e) {\n            Assert.fail(e.getMessage());\n        } catch (InterruptedException e) {\n            Assert.fail(e.getMessage());\n        }\n\n        Assert.assertFalse(result);\n\n        eventStore.stop();\n    }\n","date":"2019-08-22 23:03:22","endLine":76,"groupId":"1343","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testFullPut","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-canal-10-0.7/blobInfo/CC_OUT/blobs/5c/8b9424df14e1b457eacf4df30af0d9b3e49949.src","preCode":"    public void testFullPut() {\n        int bufferSize = 16;\n        MemoryEventStoreWithBuffer eventStore = new MemoryEventStoreWithBuffer();\n        eventStore.setBufferSize(bufferSize);\n        eventStore.start();\n\n        for (int i = 0; i < bufferSize; i++) {\n            boolean result = eventStore.tryPut(buildEvent(\"1\", 1L, 1L + i));\n            Assert.assertTrue(result);\n        }\n\n        boolean result = eventStore.tryPut(buildEvent(\"1\", 1L, 1L + bufferSize));\n        Assert.assertFalse(result);\n\n        try {\n            result = eventStore.put(buildEvent(\"1\", 1L, 1L + bufferSize), 1000L, TimeUnit.MILLISECONDS);\n        } catch (CanalStoreException e) {\n            Assert.fail(e.getMessage());\n        } catch (InterruptedException e) {\n            Assert.fail(e.getMessage());\n        }\n\n        Assert.assertFalse(result);\n\n        eventStore.stop();\n    }\n","realPath":"store/src/test/java/com/alibaba/otter/canal/store/memory/buffer/MemoryEventStorePutAndGetTest.java","repoName":"canal","snippetEndLine":0,"snippetStartLine":0,"startLine":51,"status":"B"},{"authorDate":"2019-08-22 23:03:22","commitOrder":1,"curCode":"    public void testFullPut() {\n        int bufferSize = 16;\n        MemoryEventStoreWithBuffer eventStore = new MemoryEventStoreWithBuffer();\n        eventStore.setBufferSize(bufferSize);\n        eventStore.setBatchMode(BatchMode.MEMSIZE);\n        eventStore.start();\n\n        for (int i = 0; i < bufferSize; i++) {\n            boolean result = eventStore.tryPut(buildEvent(\"1\", 1L, 1L + i));\n            Assert.assertTrue(result);\n        }\n\n        boolean result = eventStore.tryPut(buildEvent(\"1\", 1L, 1L + bufferSize));\n        Assert.assertFalse(result);\n\n        try {\n            result = eventStore.put(buildEvent(\"1\", 1L, 1L + bufferSize), 1000L, TimeUnit.MILLISECONDS);\n        } catch (CanalStoreException e) {\n            Assert.fail(e.getMessage());\n        } catch (InterruptedException e) {\n            Assert.fail(e.getMessage());\n        }\n\n        Assert.assertFalse(result);\n\n        eventStore.stop();\n    }\n","date":"2019-08-22 23:03:22","endLine":93,"groupId":"1343","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testFullPut","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-canal-10-0.7/blobInfo/CC_OUT/blobs/d6/4c22bbae698bd1bce298287c89bc7ae223d829.src","preCode":"    public void testFullPut() {\n        int bufferSize = 16;\n        MemoryEventStoreWithBuffer eventStore = new MemoryEventStoreWithBuffer();\n        eventStore.setBufferSize(bufferSize);\n        eventStore.setBatchMode(BatchMode.MEMSIZE);\n        eventStore.start();\n\n        for (int i = 0; i < bufferSize; i++) {\n            boolean result = eventStore.tryPut(buildEvent(\"1\", 1L, 1L + i));\n            Assert.assertTrue(result);\n        }\n\n        boolean result = eventStore.tryPut(buildEvent(\"1\", 1L, 1L + bufferSize));\n        Assert.assertFalse(result);\n\n        try {\n            result = eventStore.put(buildEvent(\"1\", 1L, 1L + bufferSize), 1000L, TimeUnit.MILLISECONDS);\n        } catch (CanalStoreException e) {\n            Assert.fail(e.getMessage());\n        } catch (InterruptedException e) {\n            Assert.fail(e.getMessage());\n        }\n\n        Assert.assertFalse(result);\n\n        eventStore.stop();\n    }\n","realPath":"store/src/test/java/com/alibaba/otter/canal/store/memory/buffer/MemoryEventStoreMemBatchTest.java","repoName":"canal","snippetEndLine":0,"snippetStartLine":0,"startLine":67,"status":"B"}],"commitId":"bd974e3da82dd0be95ed1f7fb55828463aba2835","commitMessage":"@@@upgrade fastjson 1.2.58\n","date":"2019-08-22 23:03:22","modifiedFileCount":"2","status":"B","submitter":"agapple"},{"authorTime":"2020-09-17 22:49:35","codes":[{"authorDate":"2020-09-17 22:49:35","commitOrder":2,"curCode":"    public void testFullPut() {\n        int bufferSize = 16;\n        MemoryEventStoreWithBuffer eventStore = new MemoryEventStoreWithBuffer();\n        eventStore.setBufferSize(bufferSize);\n        eventStore.start();\n\n        for (int i = 0; i < bufferSize; i++) {\n            boolean result = eventStore.tryPut(buildEvent(\"1\", 1L, 1L + i));\n            Assert.assertTrue(result);\n        }\n\n        boolean result = eventStore.tryPut(buildEvent(\"1\", 1L, 1L + bufferSize));\n        Assert.assertFalse(result);\n\n        try {\n            result = eventStore.put(buildEvent(\"1\", 1L, 1L + bufferSize), 1000L, TimeUnit.MILLISECONDS);\n        } catch (CanalStoreException | InterruptedException e) {\n            Assert.fail(e.getMessage());\n        }\n\n        Assert.assertFalse(result);\n\n        eventStore.stop();\n    }\n","date":"2020-09-17 23:22:25","endLine":74,"groupId":"1017","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"testFullPut","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-canal-10-0.7/blobInfo/CC_OUT/blobs/df/80c0735c3e32c8e05d03198e24ee9d7072af1a.src","preCode":"    public void testFullPut() {\n        int bufferSize = 16;\n        MemoryEventStoreWithBuffer eventStore = new MemoryEventStoreWithBuffer();\n        eventStore.setBufferSize(bufferSize);\n        eventStore.start();\n\n        for (int i = 0; i < bufferSize; i++) {\n            boolean result = eventStore.tryPut(buildEvent(\"1\", 1L, 1L + i));\n            Assert.assertTrue(result);\n        }\n\n        boolean result = eventStore.tryPut(buildEvent(\"1\", 1L, 1L + bufferSize));\n        Assert.assertFalse(result);\n\n        try {\n            result = eventStore.put(buildEvent(\"1\", 1L, 1L + bufferSize), 1000L, TimeUnit.MILLISECONDS);\n        } catch (CanalStoreException e) {\n            Assert.fail(e.getMessage());\n        } catch (InterruptedException e) {\n            Assert.fail(e.getMessage());\n        }\n\n        Assert.assertFalse(result);\n\n        eventStore.stop();\n    }\n","realPath":"store/src/test/java/com/alibaba/otter/canal/store/memory/buffer/MemoryEventStorePutAndGetTest.java","repoName":"canal","snippetEndLine":0,"snippetStartLine":0,"startLine":51,"status":"M"},{"authorDate":"2020-09-17 22:49:35","commitOrder":2,"curCode":"    public void testFullPut() {\n        int bufferSize = 16;\n        MemoryEventStoreWithBuffer eventStore = new MemoryEventStoreWithBuffer();\n        eventStore.setBufferSize(bufferSize);\n        eventStore.setBatchMode(BatchMode.MEMSIZE);\n        eventStore.start();\n\n        for (int i = 0; i < bufferSize; i++) {\n            boolean result = eventStore.tryPut(buildEvent(\"1\", 1L, 1L + i));\n            Assert.assertTrue(result);\n        }\n\n        boolean result = eventStore.tryPut(buildEvent(\"1\", 1L, 1L + bufferSize));\n        Assert.assertFalse(result);\n\n        try {\n            result = eventStore.put(buildEvent(\"1\", 1L, 1L + bufferSize), 1000L, TimeUnit.MILLISECONDS);\n        } catch (CanalStoreException | InterruptedException e) {\n            Assert.fail(e.getMessage());\n        }\n\n        Assert.assertFalse(result);\n\n        eventStore.stop();\n    }\n","date":"2020-09-17 23:22:25","endLine":91,"groupId":"1017","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"testFullPut","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-canal-10-0.7/blobInfo/CC_OUT/blobs/87/fa015eff038fa5c810749a619e425b3834fecf.src","preCode":"    public void testFullPut() {\n        int bufferSize = 16;\n        MemoryEventStoreWithBuffer eventStore = new MemoryEventStoreWithBuffer();\n        eventStore.setBufferSize(bufferSize);\n        eventStore.setBatchMode(BatchMode.MEMSIZE);\n        eventStore.start();\n\n        for (int i = 0; i < bufferSize; i++) {\n            boolean result = eventStore.tryPut(buildEvent(\"1\", 1L, 1L + i));\n            Assert.assertTrue(result);\n        }\n\n        boolean result = eventStore.tryPut(buildEvent(\"1\", 1L, 1L + bufferSize));\n        Assert.assertFalse(result);\n\n        try {\n            result = eventStore.put(buildEvent(\"1\", 1L, 1L + bufferSize), 1000L, TimeUnit.MILLISECONDS);\n        } catch (CanalStoreException e) {\n            Assert.fail(e.getMessage());\n        } catch (InterruptedException e) {\n            Assert.fail(e.getMessage());\n        }\n\n        Assert.assertFalse(result);\n\n        eventStore.stop();\n    }\n","realPath":"store/src/test/java/com/alibaba/otter/canal/store/memory/buffer/MemoryEventStoreMemBatchTest.java","repoName":"canal","snippetEndLine":0,"snippetStartLine":0,"startLine":67,"status":"M"}],"commitId":"df24596092971cf2578244b69c61129d8ce2b336","commitMessage":"@@@= code cleanup\n\n  - for loop replaceable with enhanced 'for' loop\n  - using diamond in generic type\n  - collapse try catch exception\n  - using try-with-resource\n  - using  List#sort instead of Collections#sort\n  - replaced lambda with method reference\n  - using native compare method to compare numbers\n  - using switch instead of if for in ESSyncUtil\n","date":"2020-09-17 23:22:25","modifiedFileCount":"33","status":"M","submitter":"zavakid"}]
