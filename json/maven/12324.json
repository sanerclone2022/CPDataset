[{"authorTime":"2014-07-30 11:57:53","codes":[{"authorDate":"2015-01-25 06:37:00","commitOrder":3,"curCode":"    public void process( CliRequest cliRequest )\n        throws Exception\n    {\n        CommandLine commandLine = cliRequest.getCommandLine();\n        String workingDirectory = cliRequest.getWorkingDirectory();\n        MavenExecutionRequest request = cliRequest.getRequest();\n\n        File userSettingsFile;\n\n        if ( commandLine.hasOption( CLIManager.ALTERNATE_USER_SETTINGS ) )\n        {\n            userSettingsFile = new File( commandLine.getOptionValue( CLIManager.ALTERNATE_USER_SETTINGS ) );\n            userSettingsFile = resolveFile( userSettingsFile, workingDirectory );\n\n            if ( !userSettingsFile.isFile() )\n            {\n                throw new FileNotFoundException( \"The specified user settings file does not exist: \"\n                    + userSettingsFile );\n            }\n        }\n        else\n        {\n            userSettingsFile = DEFAULT_USER_SETTINGS_FILE;\n        }\n\n        File globalSettingsFile;\n\n        if ( commandLine.hasOption( CLIManager.ALTERNATE_GLOBAL_SETTINGS ) )\n        {\n            globalSettingsFile = new File( commandLine.getOptionValue( CLIManager.ALTERNATE_GLOBAL_SETTINGS ) );\n            globalSettingsFile = resolveFile( globalSettingsFile, workingDirectory );\n\n            if ( !globalSettingsFile.isFile() )\n            {\n                throw new FileNotFoundException( \"The specified global settings file does not exist: \"\n                    + globalSettingsFile );\n            }\n        }\n        else\n        {\n            globalSettingsFile = DEFAULT_GLOBAL_SETTINGS_FILE;\n        }\n\n        request.setGlobalSettingsFile( globalSettingsFile );\n        request.setUserSettingsFile( userSettingsFile );\n\n        SettingsBuildingRequest settingsRequest = new DefaultSettingsBuildingRequest();\n        settingsRequest.setGlobalSettingsFile( globalSettingsFile );\n        settingsRequest.setUserSettingsFile( userSettingsFile );\n        settingsRequest.setSystemProperties( cliRequest.getSystemProperties() );\n        settingsRequest.setUserProperties( cliRequest.getUserProperties() );\n\n        if ( request.getEventSpyDispatcher() != null )\n        {\n            request.getEventSpyDispatcher().onEvent( settingsRequest );\n        }\n\n        logger.debug( \"Reading global settings from \"\n            + getLocation( settingsRequest.getGlobalSettingsSource(), settingsRequest.getGlobalSettingsFile() ) );\n        logger.debug( \"Reading user settings from \"\n            + getLocation( settingsRequest.getUserSettingsSource(), settingsRequest.getUserSettingsFile() ) );\n\n        SettingsBuildingResult settingsResult = settingsBuilder.build( settingsRequest );\n\n        if ( request.getEventSpyDispatcher() != null )\n        {\n            request.getEventSpyDispatcher().onEvent( settingsResult );\n        }\n\n        populateFromSettings( request, settingsResult.getEffectiveSettings() );\n\n        if ( !settingsResult.getProblems().isEmpty() && logger.isWarnEnabled() )\n        {\n            logger.warn( \"\" );\n            logger.warn( \"Some problems were encountered while building the effective settings\" );\n\n            for ( SettingsProblem problem : settingsResult.getProblems() )\n            {\n                logger.warn( problem.getMessage() + \" @ \" + problem.getLocation() );\n            }\n            logger.warn( \"\" );\n        }\n\n        DefaultSettingsDecryptionRequest decrypt = new DefaultSettingsDecryptionRequest();\n        decrypt.setProxies( request.getProxies() );\n        decrypt.setServers( request.getServers() );\n        SettingsDecryptionResult decrypted = settingsDecrypter.decrypt( decrypt );\n\n        if ( logger.isDebugEnabled() )\n        {\n            for ( SettingsProblem problem : decrypted.getProblems() )\n            {\n                logger.debug( problem.getMessage(), problem.getException() );\n            }\n        }\n\n        request.setProxies( decrypt.getProxies() );\n        request.setServers( decrypt.getServers() );\n    }\n","date":"2015-03-02 02:22:26","endLine":175,"groupId":"7345","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"process","params":"(CliRequestcliRequest)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-maven-10-0.7/blobInfo/CC_OUT/blobs/89/0a6581fdf39525b9bc39c84d9c9aaa1540fb09.src","preCode":"    public void process( CliRequest cliRequest )\n        throws Exception\n    {\n        CommandLine commandLine = cliRequest.getCommandLine();\n        String workingDirectory = cliRequest.getWorkingDirectory();\n        MavenExecutionRequest request = cliRequest.getRequest();\n\n        File userSettingsFile;\n\n        if ( commandLine.hasOption( CLIManager.ALTERNATE_USER_SETTINGS ) )\n        {\n            userSettingsFile = new File( commandLine.getOptionValue( CLIManager.ALTERNATE_USER_SETTINGS ) );\n            userSettingsFile = resolveFile( userSettingsFile, workingDirectory );\n\n            if ( !userSettingsFile.isFile() )\n            {\n                throw new FileNotFoundException( \"The specified user settings file does not exist: \"\n                    + userSettingsFile );\n            }\n        }\n        else\n        {\n            userSettingsFile = DEFAULT_USER_SETTINGS_FILE;\n        }\n\n        File globalSettingsFile;\n\n        if ( commandLine.hasOption( CLIManager.ALTERNATE_GLOBAL_SETTINGS ) )\n        {\n            globalSettingsFile = new File( commandLine.getOptionValue( CLIManager.ALTERNATE_GLOBAL_SETTINGS ) );\n            globalSettingsFile = resolveFile( globalSettingsFile, workingDirectory );\n\n            if ( !globalSettingsFile.isFile() )\n            {\n                throw new FileNotFoundException( \"The specified global settings file does not exist: \"\n                    + globalSettingsFile );\n            }\n        }\n        else\n        {\n            globalSettingsFile = DEFAULT_GLOBAL_SETTINGS_FILE;\n        }\n\n        request.setGlobalSettingsFile( globalSettingsFile );\n        request.setUserSettingsFile( userSettingsFile );\n\n        SettingsBuildingRequest settingsRequest = new DefaultSettingsBuildingRequest();\n        settingsRequest.setGlobalSettingsFile( globalSettingsFile );\n        settingsRequest.setUserSettingsFile( userSettingsFile );\n        settingsRequest.setSystemProperties( cliRequest.getSystemProperties() );\n        settingsRequest.setUserProperties( cliRequest.getUserProperties() );\n\n        if ( request.getEventSpyDispatcher() != null )\n        {\n            request.getEventSpyDispatcher().onEvent( settingsRequest );\n        }\n\n        logger.debug( \"Reading global settings from \"\n            + getLocation( settingsRequest.getGlobalSettingsSource(), settingsRequest.getGlobalSettingsFile() ) );\n        logger.debug( \"Reading user settings from \"\n            + getLocation( settingsRequest.getUserSettingsSource(), settingsRequest.getUserSettingsFile() ) );\n\n        SettingsBuildingResult settingsResult = settingsBuilder.build( settingsRequest );\n\n        if ( request.getEventSpyDispatcher() != null )\n        {\n            request.getEventSpyDispatcher().onEvent( settingsResult );\n        }\n\n        populateFromSettings( request, settingsResult.getEffectiveSettings() );\n\n        if ( !settingsResult.getProblems().isEmpty() && logger.isWarnEnabled() )\n        {\n            logger.warn( \"\" );\n            logger.warn( \"Some problems were encountered while building the effective settings\" );\n\n            for ( SettingsProblem problem : settingsResult.getProblems() )\n            {\n                logger.warn( problem.getMessage() + \" @ \" + problem.getLocation() );\n            }\n            logger.warn( \"\" );\n        }\n\n        DefaultSettingsDecryptionRequest decrypt = new DefaultSettingsDecryptionRequest();\n        decrypt.setProxies( request.getProxies() );\n        decrypt.setServers( request.getServers() );\n        SettingsDecryptionResult decrypted = settingsDecrypter.decrypt( decrypt );\n\n        if ( logger.isDebugEnabled() )\n        {\n            for ( SettingsProblem problem : decrypted.getProblems() )\n            {\n                logger.debug( problem.getMessage(), problem.getException() );\n            }\n        }\n\n        request.setProxies( decrypt.getProxies() );\n        request.setServers( decrypt.getServers() );\n    }\n","realPath":"maven-embedder/src/main/java/org/apache/maven/cli/configuration/SettingsXmlConfigurationProcessor.java","repoName":"maven","snippetEndLine":0,"snippetStartLine":0,"startLine":77,"status":"B"},{"authorDate":"2014-07-30 11:57:53","commitOrder":3,"curCode":"    public Settings buildSettings( File userSettingsFile )\n        throws IOException, XmlPullParserException\n    {\n        File globalSettingsFile =\n            getFile( \"${maven.home}/conf/settings.xml\", \"maven.home\",\n                     MavenSettingsBuilder.ALT_GLOBAL_SETTINGS_XML_LOCATION );\n\n        SettingsBuildingRequest request = new DefaultSettingsBuildingRequest();\n        request.setUserSettingsFile( userSettingsFile );\n        request.setGlobalSettingsFile( globalSettingsFile );\n        request.setSystemProperties( SystemProperties.getSystemProperties() );\n        return build( request );\n    }\n","date":"2014-07-30 11:57:53","endLine":77,"groupId":"3988","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"buildSettings","params":"(FileuserSettingsFile)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-maven-10-0.7/blobInfo/CC_OUT/blobs/82/0d886e29b996283bc48648ef5f57d6599bd720.src","preCode":"    public Settings buildSettings( File userSettingsFile )\n        throws IOException, XmlPullParserException\n    {\n        File globalSettingsFile =\n            getFile( \"${maven.home}/conf/settings.xml\", \"maven.home\",\n                     MavenSettingsBuilder.ALT_GLOBAL_SETTINGS_XML_LOCATION );\n\n        SettingsBuildingRequest request = new DefaultSettingsBuildingRequest();\n        request.setUserSettingsFile( userSettingsFile );\n        request.setGlobalSettingsFile( globalSettingsFile );\n        request.setSystemProperties( SystemProperties.getSystemProperties() );\n        return build( request );\n    }\n","realPath":"maven-core/src/main/java/org/apache/maven/settings/DefaultMavenSettingsBuilder.java","repoName":"maven","snippetEndLine":0,"snippetStartLine":0,"startLine":65,"status":"NB"}],"commitId":"7997634209cf2e666aa94ece24e089da179d8aa3","commitMessage":"@@@MNG-5774 Provide an extension point for alternate CLI configuration source\n","date":"2015-03-02 02:22:26","modifiedFileCount":"7","status":"M","submitter":"Jason van Zyl"},{"authorTime":"2014-07-30 11:57:53","codes":[{"authorDate":"2015-04-02 12:21:00","commitOrder":4,"curCode":"    public void process( CliRequest cliRequest )\n        throws Exception\n    {\n        CommandLine commandLine = cliRequest.getCommandLine();\n        String workingDirectory = cliRequest.getWorkingDirectory();\n        MavenExecutionRequest request = cliRequest.getRequest();\n\n        File userSettingsFile;\n\n        if ( commandLine.hasOption( CLIManager.ALTERNATE_USER_SETTINGS ) )\n        {\n            userSettingsFile = new File( commandLine.getOptionValue( CLIManager.ALTERNATE_USER_SETTINGS ) );\n            userSettingsFile = resolveFile( userSettingsFile, workingDirectory );\n\n            if ( !userSettingsFile.isFile() )\n            {\n                throw new FileNotFoundException( \"The specified user settings file does not exist: \"\n                    + userSettingsFile );\n            }\n        }\n        else\n        {\n            userSettingsFile = DEFAULT_USER_SETTINGS_FILE;\n        }\n\n        File globalSettingsFile;\n\n        if ( commandLine.hasOption( CLIManager.ALTERNATE_GLOBAL_SETTINGS ) )\n        {\n            globalSettingsFile = new File( commandLine.getOptionValue( CLIManager.ALTERNATE_GLOBAL_SETTINGS ) );\n            globalSettingsFile = resolveFile( globalSettingsFile, workingDirectory );\n\n            if ( !globalSettingsFile.isFile() )\n            {\n                throw new FileNotFoundException( \"The specified global settings file does not exist: \"\n                    + globalSettingsFile );\n            }\n        }\n        else\n        {\n            globalSettingsFile = DEFAULT_GLOBAL_SETTINGS_FILE;\n        }\n\n        request.setGlobalSettingsFile( globalSettingsFile );\n        request.setUserSettingsFile( userSettingsFile );\n\n        SettingsBuildingRequest settingsRequest = new DefaultSettingsBuildingRequest();\n        settingsRequest.setGlobalSettingsFile( globalSettingsFile );\n        settingsRequest.setUserSettingsFile( userSettingsFile );\n        settingsRequest.setSystemProperties( cliRequest.getSystemProperties() );\n        settingsRequest.setUserProperties( cliRequest.getUserProperties() );\n\n        if ( request.getEventSpyDispatcher() != null )\n        {\n            request.getEventSpyDispatcher().onEvent( settingsRequest );\n        }\n\n        logger.debug( \"Reading global settings from \"\n            + getLocation( settingsRequest.getGlobalSettingsSource(), settingsRequest.getGlobalSettingsFile() ) );\n        logger.debug( \"Reading user settings from \"\n            + getLocation( settingsRequest.getUserSettingsSource(), settingsRequest.getUserSettingsFile() ) );\n\n        SettingsBuildingResult settingsResult = settingsBuilder.build( settingsRequest );\n\n        if ( request.getEventSpyDispatcher() != null )\n        {\n            request.getEventSpyDispatcher().onEvent( settingsResult );\n        }\n\n        populateFromSettings( request, settingsResult.getEffectiveSettings() );\n\n        if ( !settingsResult.getProblems().isEmpty() && logger.isWarnEnabled() )\n        {\n            logger.warn( \"\" );\n            logger.warn( \"Some problems were encountered while building the effective settings\" );\n\n            for ( SettingsProblem problem : settingsResult.getProblems() )\n            {\n                logger.warn( problem.getMessage() + \" @ \" + problem.getLocation() );\n            }\n            logger.warn( \"\" );\n        }\n    }\n","date":"2015-04-02 12:49:50","endLine":157,"groupId":"7345","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"process","params":"(CliRequestcliRequest)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-maven-10-0.7/blobInfo/CC_OUT/blobs/79/1a2267478385094a71dad7fbe4c2c1a7426097.src","preCode":"    public void process( CliRequest cliRequest )\n        throws Exception\n    {\n        CommandLine commandLine = cliRequest.getCommandLine();\n        String workingDirectory = cliRequest.getWorkingDirectory();\n        MavenExecutionRequest request = cliRequest.getRequest();\n\n        File userSettingsFile;\n\n        if ( commandLine.hasOption( CLIManager.ALTERNATE_USER_SETTINGS ) )\n        {\n            userSettingsFile = new File( commandLine.getOptionValue( CLIManager.ALTERNATE_USER_SETTINGS ) );\n            userSettingsFile = resolveFile( userSettingsFile, workingDirectory );\n\n            if ( !userSettingsFile.isFile() )\n            {\n                throw new FileNotFoundException( \"The specified user settings file does not exist: \"\n                    + userSettingsFile );\n            }\n        }\n        else\n        {\n            userSettingsFile = DEFAULT_USER_SETTINGS_FILE;\n        }\n\n        File globalSettingsFile;\n\n        if ( commandLine.hasOption( CLIManager.ALTERNATE_GLOBAL_SETTINGS ) )\n        {\n            globalSettingsFile = new File( commandLine.getOptionValue( CLIManager.ALTERNATE_GLOBAL_SETTINGS ) );\n            globalSettingsFile = resolveFile( globalSettingsFile, workingDirectory );\n\n            if ( !globalSettingsFile.isFile() )\n            {\n                throw new FileNotFoundException( \"The specified global settings file does not exist: \"\n                    + globalSettingsFile );\n            }\n        }\n        else\n        {\n            globalSettingsFile = DEFAULT_GLOBAL_SETTINGS_FILE;\n        }\n\n        request.setGlobalSettingsFile( globalSettingsFile );\n        request.setUserSettingsFile( userSettingsFile );\n\n        SettingsBuildingRequest settingsRequest = new DefaultSettingsBuildingRequest();\n        settingsRequest.setGlobalSettingsFile( globalSettingsFile );\n        settingsRequest.setUserSettingsFile( userSettingsFile );\n        settingsRequest.setSystemProperties( cliRequest.getSystemProperties() );\n        settingsRequest.setUserProperties( cliRequest.getUserProperties() );\n\n        if ( request.getEventSpyDispatcher() != null )\n        {\n            request.getEventSpyDispatcher().onEvent( settingsRequest );\n        }\n\n        logger.debug( \"Reading global settings from \"\n            + getLocation( settingsRequest.getGlobalSettingsSource(), settingsRequest.getGlobalSettingsFile() ) );\n        logger.debug( \"Reading user settings from \"\n            + getLocation( settingsRequest.getUserSettingsSource(), settingsRequest.getUserSettingsFile() ) );\n\n        SettingsBuildingResult settingsResult = settingsBuilder.build( settingsRequest );\n\n        if ( request.getEventSpyDispatcher() != null )\n        {\n            request.getEventSpyDispatcher().onEvent( settingsResult );\n        }\n\n        populateFromSettings( request, settingsResult.getEffectiveSettings() );\n\n        if ( !settingsResult.getProblems().isEmpty() && logger.isWarnEnabled() )\n        {\n            logger.warn( \"\" );\n            logger.warn( \"Some problems were encountered while building the effective settings\" );\n\n            for ( SettingsProblem problem : settingsResult.getProblems() )\n            {\n                logger.warn( problem.getMessage() + \" @ \" + problem.getLocation() );\n            }\n            logger.warn( \"\" );\n        }\n\n        DefaultSettingsDecryptionRequest decrypt = new DefaultSettingsDecryptionRequest();\n        decrypt.setProxies( request.getProxies() );\n        decrypt.setServers( request.getServers() );\n        SettingsDecryptionResult decrypted = settingsDecrypter.decrypt( decrypt );\n\n        if ( logger.isDebugEnabled() )\n        {\n            for ( SettingsProblem problem : decrypted.getProblems() )\n            {\n                logger.debug( problem.getMessage(), problem.getException() );\n            }\n        }\n\n        request.setProxies( decrypt.getProxies() );\n        request.setServers( decrypt.getServers() );\n    }\n","realPath":"maven-embedder/src/main/java/org/apache/maven/cli/configuration/SettingsXmlConfigurationProcessor.java","repoName":"maven","snippetEndLine":0,"snippetStartLine":0,"startLine":75,"status":"M"},{"authorDate":"2014-07-30 11:57:53","commitOrder":4,"curCode":"    public Settings buildSettings( File userSettingsFile )\n        throws IOException, XmlPullParserException\n    {\n        File globalSettingsFile =\n            getFile( \"${maven.home}/conf/settings.xml\", \"maven.home\",\n                     MavenSettingsBuilder.ALT_GLOBAL_SETTINGS_XML_LOCATION );\n\n        SettingsBuildingRequest request = new DefaultSettingsBuildingRequest();\n        request.setUserSettingsFile( userSettingsFile );\n        request.setGlobalSettingsFile( globalSettingsFile );\n        request.setSystemProperties( SystemProperties.getSystemProperties() );\n        return build( request );\n    }\n","date":"2014-07-30 11:57:53","endLine":77,"groupId":"3988","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"buildSettings","params":"(FileuserSettingsFile)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-maven-10-0.7/blobInfo/CC_OUT/blobs/82/0d886e29b996283bc48648ef5f57d6599bd720.src","preCode":"    public Settings buildSettings( File userSettingsFile )\n        throws IOException, XmlPullParserException\n    {\n        File globalSettingsFile =\n            getFile( \"${maven.home}/conf/settings.xml\", \"maven.home\",\n                     MavenSettingsBuilder.ALT_GLOBAL_SETTINGS_XML_LOCATION );\n\n        SettingsBuildingRequest request = new DefaultSettingsBuildingRequest();\n        request.setUserSettingsFile( userSettingsFile );\n        request.setGlobalSettingsFile( globalSettingsFile );\n        request.setSystemProperties( SystemProperties.getSystemProperties() );\n        return build( request );\n    }\n","realPath":"maven-core/src/main/java/org/apache/maven/settings/DefaultMavenSettingsBuilder.java","repoName":"maven","snippetEndLine":0,"snippetStartLine":0,"startLine":65,"status":"N"}],"commitId":"56e6db123150d08c15f1920ed8cc571480161b3c","commitMessage":"@@@MNG-5795: Maven extensions can not be retrieved from authenticated repositories\n","date":"2015-04-02 12:49:50","modifiedFileCount":"4","status":"M","submitter":"Jason van Zyl"},{"authorTime":"2016-10-10 03:00:42","codes":[{"authorDate":"2015-04-02 12:21:00","commitOrder":5,"curCode":"    public void process( CliRequest cliRequest )\n        throws Exception\n    {\n        CommandLine commandLine = cliRequest.getCommandLine();\n        String workingDirectory = cliRequest.getWorkingDirectory();\n        MavenExecutionRequest request = cliRequest.getRequest();\n\n        File userSettingsFile;\n\n        if ( commandLine.hasOption( CLIManager.ALTERNATE_USER_SETTINGS ) )\n        {\n            userSettingsFile = new File( commandLine.getOptionValue( CLIManager.ALTERNATE_USER_SETTINGS ) );\n            userSettingsFile = resolveFile( userSettingsFile, workingDirectory );\n\n            if ( !userSettingsFile.isFile() )\n            {\n                throw new FileNotFoundException( \"The specified user settings file does not exist: \"\n                    + userSettingsFile );\n            }\n        }\n        else\n        {\n            userSettingsFile = DEFAULT_USER_SETTINGS_FILE;\n        }\n\n        File globalSettingsFile;\n\n        if ( commandLine.hasOption( CLIManager.ALTERNATE_GLOBAL_SETTINGS ) )\n        {\n            globalSettingsFile = new File( commandLine.getOptionValue( CLIManager.ALTERNATE_GLOBAL_SETTINGS ) );\n            globalSettingsFile = resolveFile( globalSettingsFile, workingDirectory );\n\n            if ( !globalSettingsFile.isFile() )\n            {\n                throw new FileNotFoundException( \"The specified global settings file does not exist: \"\n                    + globalSettingsFile );\n            }\n        }\n        else\n        {\n            globalSettingsFile = DEFAULT_GLOBAL_SETTINGS_FILE;\n        }\n\n        request.setGlobalSettingsFile( globalSettingsFile );\n        request.setUserSettingsFile( userSettingsFile );\n\n        SettingsBuildingRequest settingsRequest = new DefaultSettingsBuildingRequest();\n        settingsRequest.setGlobalSettingsFile( globalSettingsFile );\n        settingsRequest.setUserSettingsFile( userSettingsFile );\n        settingsRequest.setSystemProperties( cliRequest.getSystemProperties() );\n        settingsRequest.setUserProperties( cliRequest.getUserProperties() );\n\n        if ( request.getEventSpyDispatcher() != null )\n        {\n            request.getEventSpyDispatcher().onEvent( settingsRequest );\n        }\n\n        logger.debug( \"Reading global settings from \"\n            + getLocation( settingsRequest.getGlobalSettingsSource(), settingsRequest.getGlobalSettingsFile() ) );\n        logger.debug( \"Reading user settings from \"\n            + getLocation( settingsRequest.getUserSettingsSource(), settingsRequest.getUserSettingsFile() ) );\n\n        SettingsBuildingResult settingsResult = settingsBuilder.build( settingsRequest );\n\n        if ( request.getEventSpyDispatcher() != null )\n        {\n            request.getEventSpyDispatcher().onEvent( settingsResult );\n        }\n\n        populateFromSettings( request, settingsResult.getEffectiveSettings() );\n\n        if ( !settingsResult.getProblems().isEmpty() && logger.isWarnEnabled() )\n        {\n            logger.warn( \"\" );\n            logger.warn( \"Some problems were encountered while building the effective settings\" );\n\n            for ( SettingsProblem problem : settingsResult.getProblems() )\n            {\n                logger.warn( problem.getMessage() + \" @ \" + problem.getLocation() );\n            }\n            logger.warn( \"\" );\n        }\n    }\n","date":"2015-04-02 12:49:50","endLine":157,"groupId":"7345","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"process","params":"(CliRequestcliRequest)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-maven-10-0.7/blobInfo/CC_OUT/blobs/79/1a2267478385094a71dad7fbe4c2c1a7426097.src","preCode":"    public void process( CliRequest cliRequest )\n        throws Exception\n    {\n        CommandLine commandLine = cliRequest.getCommandLine();\n        String workingDirectory = cliRequest.getWorkingDirectory();\n        MavenExecutionRequest request = cliRequest.getRequest();\n\n        File userSettingsFile;\n\n        if ( commandLine.hasOption( CLIManager.ALTERNATE_USER_SETTINGS ) )\n        {\n            userSettingsFile = new File( commandLine.getOptionValue( CLIManager.ALTERNATE_USER_SETTINGS ) );\n            userSettingsFile = resolveFile( userSettingsFile, workingDirectory );\n\n            if ( !userSettingsFile.isFile() )\n            {\n                throw new FileNotFoundException( \"The specified user settings file does not exist: \"\n                    + userSettingsFile );\n            }\n        }\n        else\n        {\n            userSettingsFile = DEFAULT_USER_SETTINGS_FILE;\n        }\n\n        File globalSettingsFile;\n\n        if ( commandLine.hasOption( CLIManager.ALTERNATE_GLOBAL_SETTINGS ) )\n        {\n            globalSettingsFile = new File( commandLine.getOptionValue( CLIManager.ALTERNATE_GLOBAL_SETTINGS ) );\n            globalSettingsFile = resolveFile( globalSettingsFile, workingDirectory );\n\n            if ( !globalSettingsFile.isFile() )\n            {\n                throw new FileNotFoundException( \"The specified global settings file does not exist: \"\n                    + globalSettingsFile );\n            }\n        }\n        else\n        {\n            globalSettingsFile = DEFAULT_GLOBAL_SETTINGS_FILE;\n        }\n\n        request.setGlobalSettingsFile( globalSettingsFile );\n        request.setUserSettingsFile( userSettingsFile );\n\n        SettingsBuildingRequest settingsRequest = new DefaultSettingsBuildingRequest();\n        settingsRequest.setGlobalSettingsFile( globalSettingsFile );\n        settingsRequest.setUserSettingsFile( userSettingsFile );\n        settingsRequest.setSystemProperties( cliRequest.getSystemProperties() );\n        settingsRequest.setUserProperties( cliRequest.getUserProperties() );\n\n        if ( request.getEventSpyDispatcher() != null )\n        {\n            request.getEventSpyDispatcher().onEvent( settingsRequest );\n        }\n\n        logger.debug( \"Reading global settings from \"\n            + getLocation( settingsRequest.getGlobalSettingsSource(), settingsRequest.getGlobalSettingsFile() ) );\n        logger.debug( \"Reading user settings from \"\n            + getLocation( settingsRequest.getUserSettingsSource(), settingsRequest.getUserSettingsFile() ) );\n\n        SettingsBuildingResult settingsResult = settingsBuilder.build( settingsRequest );\n\n        if ( request.getEventSpyDispatcher() != null )\n        {\n            request.getEventSpyDispatcher().onEvent( settingsResult );\n        }\n\n        populateFromSettings( request, settingsResult.getEffectiveSettings() );\n\n        if ( !settingsResult.getProblems().isEmpty() && logger.isWarnEnabled() )\n        {\n            logger.warn( \"\" );\n            logger.warn( \"Some problems were encountered while building the effective settings\" );\n\n            for ( SettingsProblem problem : settingsResult.getProblems() )\n            {\n                logger.warn( problem.getMessage() + \" @ \" + problem.getLocation() );\n            }\n            logger.warn( \"\" );\n        }\n    }\n","realPath":"maven-embedder/src/main/java/org/apache/maven/cli/configuration/SettingsXmlConfigurationProcessor.java","repoName":"maven","snippetEndLine":0,"snippetStartLine":0,"startLine":75,"status":"N"},{"authorDate":"2016-10-10 03:00:42","commitOrder":5,"curCode":"    public Settings buildSettings( File userSettingsFile )\n        throws IOException, XmlPullParserException\n    {\n        File globalSettingsFile =\n            getFile( \"${maven.conf}/settings.xml\", \"maven.conf\",\n                     MavenSettingsBuilder.ALT_GLOBAL_SETTINGS_XML_LOCATION );\n\n        SettingsBuildingRequest request = new DefaultSettingsBuildingRequest();\n        request.setUserSettingsFile( userSettingsFile );\n        request.setGlobalSettingsFile( globalSettingsFile );\n        request.setSystemProperties( SystemProperties.getSystemProperties() );\n        return build( request );\n    }\n","date":"2017-01-24 03:54:54","endLine":77,"groupId":"3988","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"buildSettings","params":"(FileuserSettingsFile)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-maven-10-0.7/blobInfo/CC_OUT/blobs/20/7b9aa472624f9e64fa5c5d50ef688b01df97b8.src","preCode":"    public Settings buildSettings( File userSettingsFile )\n        throws IOException, XmlPullParserException\n    {\n        File globalSettingsFile =\n            getFile( \"${maven.home}/conf/settings.xml\", \"maven.home\",\n                     MavenSettingsBuilder.ALT_GLOBAL_SETTINGS_XML_LOCATION );\n\n        SettingsBuildingRequest request = new DefaultSettingsBuildingRequest();\n        request.setUserSettingsFile( userSettingsFile );\n        request.setGlobalSettingsFile( globalSettingsFile );\n        request.setSystemProperties( SystemProperties.getSystemProperties() );\n        return build( request );\n    }\n","realPath":"maven-core/src/main/java/org/apache/maven/settings/DefaultMavenSettingsBuilder.java","repoName":"maven","snippetEndLine":0,"snippetStartLine":0,"startLine":65,"status":"M"}],"commitId":"be5caccaff3d00ffca4b3cefe9665b6106bc44bf","commitMessage":"@@@[MNG-6102] Introduce ${maven.conf} in m2.conf\n\nSet maven.conf to default ${maven.home}/conf in ${maven.home}/bin/m2.conf\nto have a canonical property pointing to global configuration files from\nwithin Java code.\n\nThis also helps package maintainers to decouple the Maven installation\nfrom a global configuration by solely modifying m2.conf instead of using\ndirty hacks.  if possible at all.\n","date":"2017-01-24 03:54:54","modifiedFileCount":"3","status":"M","submitter":"Michael Osipov"},{"authorTime":"2016-10-10 03:00:42","codes":[{"authorDate":"2019-01-11 10:19:11","commitOrder":6,"curCode":"    public void process( CliRequest cliRequest )\n        throws Exception\n    {\n        CommandLine commandLine = cliRequest.getCommandLine();\n        String workingDirectory = cliRequest.getWorkingDirectory();\n        MavenExecutionRequest request = cliRequest.getRequest();\n\n        File userSettingsFile;\n\n        if ( commandLine.hasOption( CLIManager.ALTERNATE_USER_SETTINGS ) )\n        {\n            userSettingsFile = new File( commandLine.getOptionValue( CLIManager.ALTERNATE_USER_SETTINGS ) );\n            userSettingsFile = resolveFile( userSettingsFile, workingDirectory );\n\n            if ( !userSettingsFile.isFile() )\n            {\n                throw new FileNotFoundException( \"The specified user settings file does not exist: \"\n                    + userSettingsFile );\n            }\n        }\n        else\n        {\n            userSettingsFile = DEFAULT_USER_SETTINGS_FILE;\n        }\n\n        File globalSettingsFile;\n\n        if ( commandLine.hasOption( CLIManager.ALTERNATE_GLOBAL_SETTINGS ) )\n        {\n            globalSettingsFile = new File( commandLine.getOptionValue( CLIManager.ALTERNATE_GLOBAL_SETTINGS ) );\n            globalSettingsFile = resolveFile( globalSettingsFile, workingDirectory );\n\n            if ( !globalSettingsFile.isFile() )\n            {\n                throw new FileNotFoundException( \"The specified global settings file does not exist: \"\n                    + globalSettingsFile );\n            }\n        }\n        else\n        {\n            globalSettingsFile = DEFAULT_GLOBAL_SETTINGS_FILE;\n        }\n\n        request.setGlobalSettingsFile( globalSettingsFile );\n        request.setUserSettingsFile( userSettingsFile );\n\n        SettingsBuildingRequest settingsRequest = new DefaultSettingsBuildingRequest();\n        settingsRequest.setGlobalSettingsFile( globalSettingsFile );\n        settingsRequest.setUserSettingsFile( userSettingsFile );\n        settingsRequest.setSystemProperties( cliRequest.getSystemProperties() );\n        settingsRequest.setUserProperties( cliRequest.getUserProperties() );\n\n        if ( request.getEventSpyDispatcher() != null )\n        {\n            request.getEventSpyDispatcher().onEvent( settingsRequest );\n        }\n\n        logger.debug( \"Reading global settings from {}\",\n            getLocation( settingsRequest.getGlobalSettingsSource(), settingsRequest.getGlobalSettingsFile() ) );\n        logger.debug( \"Reading user settings from {}\",\n            getLocation( settingsRequest.getUserSettingsSource(), settingsRequest.getUserSettingsFile() ) );\n\n        SettingsBuildingResult settingsResult = settingsBuilder.build( settingsRequest );\n\n        if ( request.getEventSpyDispatcher() != null )\n        {\n            request.getEventSpyDispatcher().onEvent( settingsResult );\n        }\n\n        populateFromSettings( request, settingsResult.getEffectiveSettings() );\n\n        if ( !settingsResult.getProblems().isEmpty() && logger.isWarnEnabled() )\n        {\n            logger.warn( \"\" );\n            logger.warn( \"Some problems were encountered while building the effective settings\" );\n\n            for ( SettingsProblem problem : settingsResult.getProblems() )\n            {\n                logger.warn( \"{} @ {}\", problem.getMessage(), problem.getLocation() );\n            }\n            logger.warn( \"\" );\n        }\n    }\n","date":"2019-06-22 05:57:49","endLine":163,"groupId":"3679","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"process","params":"(CliRequestcliRequest)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-maven-10-0.7/blobInfo/CC_OUT/blobs/0a/862c43b4cbe5ad41b5334cc421385328d0c1cd.src","preCode":"    public void process( CliRequest cliRequest )\n        throws Exception\n    {\n        CommandLine commandLine = cliRequest.getCommandLine();\n        String workingDirectory = cliRequest.getWorkingDirectory();\n        MavenExecutionRequest request = cliRequest.getRequest();\n\n        File userSettingsFile;\n\n        if ( commandLine.hasOption( CLIManager.ALTERNATE_USER_SETTINGS ) )\n        {\n            userSettingsFile = new File( commandLine.getOptionValue( CLIManager.ALTERNATE_USER_SETTINGS ) );\n            userSettingsFile = resolveFile( userSettingsFile, workingDirectory );\n\n            if ( !userSettingsFile.isFile() )\n            {\n                throw new FileNotFoundException( \"The specified user settings file does not exist: \"\n                    + userSettingsFile );\n            }\n        }\n        else\n        {\n            userSettingsFile = DEFAULT_USER_SETTINGS_FILE;\n        }\n\n        File globalSettingsFile;\n\n        if ( commandLine.hasOption( CLIManager.ALTERNATE_GLOBAL_SETTINGS ) )\n        {\n            globalSettingsFile = new File( commandLine.getOptionValue( CLIManager.ALTERNATE_GLOBAL_SETTINGS ) );\n            globalSettingsFile = resolveFile( globalSettingsFile, workingDirectory );\n\n            if ( !globalSettingsFile.isFile() )\n            {\n                throw new FileNotFoundException( \"The specified global settings file does not exist: \"\n                    + globalSettingsFile );\n            }\n        }\n        else\n        {\n            globalSettingsFile = DEFAULT_GLOBAL_SETTINGS_FILE;\n        }\n\n        request.setGlobalSettingsFile( globalSettingsFile );\n        request.setUserSettingsFile( userSettingsFile );\n\n        SettingsBuildingRequest settingsRequest = new DefaultSettingsBuildingRequest();\n        settingsRequest.setGlobalSettingsFile( globalSettingsFile );\n        settingsRequest.setUserSettingsFile( userSettingsFile );\n        settingsRequest.setSystemProperties( cliRequest.getSystemProperties() );\n        settingsRequest.setUserProperties( cliRequest.getUserProperties() );\n\n        if ( request.getEventSpyDispatcher() != null )\n        {\n            request.getEventSpyDispatcher().onEvent( settingsRequest );\n        }\n\n        logger.debug( \"Reading global settings from \"\n            + getLocation( settingsRequest.getGlobalSettingsSource(), settingsRequest.getGlobalSettingsFile() ) );\n        logger.debug( \"Reading user settings from \"\n            + getLocation( settingsRequest.getUserSettingsSource(), settingsRequest.getUserSettingsFile() ) );\n\n        SettingsBuildingResult settingsResult = settingsBuilder.build( settingsRequest );\n\n        if ( request.getEventSpyDispatcher() != null )\n        {\n            request.getEventSpyDispatcher().onEvent( settingsResult );\n        }\n\n        populateFromSettings( request, settingsResult.getEffectiveSettings() );\n\n        if ( !settingsResult.getProblems().isEmpty() && logger.isWarnEnabled() )\n        {\n            logger.warn( \"\" );\n            logger.warn( \"Some problems were encountered while building the effective settings\" );\n\n            for ( SettingsProblem problem : settingsResult.getProblems() )\n            {\n                logger.warn( problem.getMessage() + \" @ \" + problem.getLocation() );\n            }\n            logger.warn( \"\" );\n        }\n    }\n","realPath":"maven-embedder/src/main/java/org/apache/maven/cli/configuration/SettingsXmlConfigurationProcessor.java","repoName":"maven","snippetEndLine":0,"snippetStartLine":0,"startLine":81,"status":"M"},{"authorDate":"2016-10-10 03:00:42","commitOrder":6,"curCode":"    public Settings buildSettings( File userSettingsFile )\n        throws IOException, XmlPullParserException\n    {\n        File globalSettingsFile =\n            getFile( \"${maven.conf}/settings.xml\", \"maven.conf\",\n                     MavenSettingsBuilder.ALT_GLOBAL_SETTINGS_XML_LOCATION );\n\n        SettingsBuildingRequest request = new DefaultSettingsBuildingRequest();\n        request.setUserSettingsFile( userSettingsFile );\n        request.setGlobalSettingsFile( globalSettingsFile );\n        request.setSystemProperties( SystemProperties.getSystemProperties() );\n        return build( request );\n    }\n","date":"2017-01-24 03:54:54","endLine":77,"groupId":"3988","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"buildSettings","params":"(FileuserSettingsFile)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-maven-10-0.7/blobInfo/CC_OUT/blobs/20/7b9aa472624f9e64fa5c5d50ef688b01df97b8.src","preCode":"    public Settings buildSettings( File userSettingsFile )\n        throws IOException, XmlPullParserException\n    {\n        File globalSettingsFile =\n            getFile( \"${maven.conf}/settings.xml\", \"maven.conf\",\n                     MavenSettingsBuilder.ALT_GLOBAL_SETTINGS_XML_LOCATION );\n\n        SettingsBuildingRequest request = new DefaultSettingsBuildingRequest();\n        request.setUserSettingsFile( userSettingsFile );\n        request.setGlobalSettingsFile( globalSettingsFile );\n        request.setSystemProperties( SystemProperties.getSystemProperties() );\n        return build( request );\n    }\n","realPath":"maven-core/src/main/java/org/apache/maven/settings/DefaultMavenSettingsBuilder.java","repoName":"maven","snippetEndLine":0,"snippetStartLine":0,"startLine":65,"status":"N"}],"commitId":"59bd396e6e85295c69b0cda98796821a97c28562","commitMessage":"@@@[MNG-6686] Convert Maven Embedder to JSR 330\n\nThis closes #257\n","date":"2019-06-22 05:57:49","modifiedFileCount":"6","status":"M","submitter":"Sylwester Lachiewicz"},{"authorTime":"2016-10-10 03:00:42","codes":[{"authorDate":"2021-01-01 21:09:07","commitOrder":7,"curCode":"    public void process( CliRequest cliRequest )\n        throws Exception\n    {\n        CommandLine commandLine = cliRequest.getCommandLine();\n        String workingDirectory = cliRequest.getWorkingDirectory();\n        MavenExecutionRequest request = cliRequest.getRequest();\n\n        File userSettingsFile;\n\n        if ( commandLine.hasOption( CLIManager.ALTERNATE_USER_SETTINGS ) )\n        {\n            userSettingsFile = new File( commandLine.getOptionValue( CLIManager.ALTERNATE_USER_SETTINGS ) );\n            userSettingsFile = resolveFile( userSettingsFile, workingDirectory );\n\n            if ( !userSettingsFile.isFile() )\n            {\n                throw new FileNotFoundException( \"The specified user settings file does not exist: \"\n                    + userSettingsFile );\n            }\n        }\n        else\n        {\n            userSettingsFile = DEFAULT_USER_SETTINGS_FILE;\n        }\n\n        File globalSettingsFile;\n\n        if ( commandLine.hasOption( CLIManager.ALTERNATE_GLOBAL_SETTINGS ) )\n        {\n            globalSettingsFile = new File( commandLine.getOptionValue( CLIManager.ALTERNATE_GLOBAL_SETTINGS ) );\n            globalSettingsFile = resolveFile( globalSettingsFile, workingDirectory );\n\n            if ( !globalSettingsFile.isFile() )\n            {\n                throw new FileNotFoundException( \"The specified global settings file does not exist: \"\n                    + globalSettingsFile );\n            }\n        }\n        else\n        {\n            globalSettingsFile = DEFAULT_GLOBAL_SETTINGS_FILE;\n        }\n\n        request.setGlobalSettingsFile( globalSettingsFile );\n        request.setUserSettingsFile( userSettingsFile );\n\n        SettingsBuildingRequest settingsRequest = new DefaultSettingsBuildingRequest();\n        settingsRequest.setGlobalSettingsFile( globalSettingsFile );\n        settingsRequest.setUserSettingsFile( userSettingsFile );\n        settingsRequest.setSystemProperties( cliRequest.getSystemProperties() );\n        settingsRequest.setUserProperties( cliRequest.getUserProperties() );\n\n        if ( request.getEventSpyDispatcher() != null )\n        {\n            request.getEventSpyDispatcher().onEvent( settingsRequest );\n        }\n\n        logger.debug( \"Reading global settings from '{}'\",\n            getLocation( settingsRequest.getGlobalSettingsSource(), settingsRequest.getGlobalSettingsFile() ) );\n        logger.debug( \"Reading user settings from '{}'\",\n            getLocation( settingsRequest.getUserSettingsSource(), settingsRequest.getUserSettingsFile() ) );\n\n        SettingsBuildingResult settingsResult = settingsBuilder.build( settingsRequest );\n\n        if ( request.getEventSpyDispatcher() != null )\n        {\n            request.getEventSpyDispatcher().onEvent( settingsResult );\n        }\n\n        populateFromSettings( request, settingsResult.getEffectiveSettings() );\n\n        if ( !settingsResult.getProblems().isEmpty() && logger.isWarnEnabled() )\n        {\n            logger.warn( \"\" );\n            logger.warn( \"Some problems were encountered while building the effective settings\" );\n\n            for ( SettingsProblem problem : settingsResult.getProblems() )\n            {\n                logger.warn( \"{} @ {}\", problem.getMessage(), problem.getLocation() );\n            }\n            logger.warn( \"\" );\n        }\n    }\n","date":"2021-01-05 22:47:20","endLine":165,"groupId":"1555","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"process","params":"(CliRequestcliRequest)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-maven-10-0.7/blobInfo/CC_OUT/blobs/f5/7d78233e97ef04d44007b13baa4021e91298e2.src","preCode":"    public void process( CliRequest cliRequest )\n        throws Exception\n    {\n        CommandLine commandLine = cliRequest.getCommandLine();\n        String workingDirectory = cliRequest.getWorkingDirectory();\n        MavenExecutionRequest request = cliRequest.getRequest();\n\n        File userSettingsFile;\n\n        if ( commandLine.hasOption( CLIManager.ALTERNATE_USER_SETTINGS ) )\n        {\n            userSettingsFile = new File( commandLine.getOptionValue( CLIManager.ALTERNATE_USER_SETTINGS ) );\n            userSettingsFile = resolveFile( userSettingsFile, workingDirectory );\n\n            if ( !userSettingsFile.isFile() )\n            {\n                throw new FileNotFoundException( \"The specified user settings file does not exist: \"\n                    + userSettingsFile );\n            }\n        }\n        else\n        {\n            userSettingsFile = DEFAULT_USER_SETTINGS_FILE;\n        }\n\n        File globalSettingsFile;\n\n        if ( commandLine.hasOption( CLIManager.ALTERNATE_GLOBAL_SETTINGS ) )\n        {\n            globalSettingsFile = new File( commandLine.getOptionValue( CLIManager.ALTERNATE_GLOBAL_SETTINGS ) );\n            globalSettingsFile = resolveFile( globalSettingsFile, workingDirectory );\n\n            if ( !globalSettingsFile.isFile() )\n            {\n                throw new FileNotFoundException( \"The specified global settings file does not exist: \"\n                    + globalSettingsFile );\n            }\n        }\n        else\n        {\n            globalSettingsFile = DEFAULT_GLOBAL_SETTINGS_FILE;\n        }\n\n        request.setGlobalSettingsFile( globalSettingsFile );\n        request.setUserSettingsFile( userSettingsFile );\n\n        SettingsBuildingRequest settingsRequest = new DefaultSettingsBuildingRequest();\n        settingsRequest.setGlobalSettingsFile( globalSettingsFile );\n        settingsRequest.setUserSettingsFile( userSettingsFile );\n        settingsRequest.setSystemProperties( cliRequest.getSystemProperties() );\n        settingsRequest.setUserProperties( cliRequest.getUserProperties() );\n\n        if ( request.getEventSpyDispatcher() != null )\n        {\n            request.getEventSpyDispatcher().onEvent( settingsRequest );\n        }\n\n        logger.debug( \"Reading global settings from {}\",\n            getLocation( settingsRequest.getGlobalSettingsSource(), settingsRequest.getGlobalSettingsFile() ) );\n        logger.debug( \"Reading user settings from {}\",\n            getLocation( settingsRequest.getUserSettingsSource(), settingsRequest.getUserSettingsFile() ) );\n\n        SettingsBuildingResult settingsResult = settingsBuilder.build( settingsRequest );\n\n        if ( request.getEventSpyDispatcher() != null )\n        {\n            request.getEventSpyDispatcher().onEvent( settingsResult );\n        }\n\n        populateFromSettings( request, settingsResult.getEffectiveSettings() );\n\n        if ( !settingsResult.getProblems().isEmpty() && logger.isWarnEnabled() )\n        {\n            logger.warn( \"\" );\n            logger.warn( \"Some problems were encountered while building the effective settings\" );\n\n            for ( SettingsProblem problem : settingsResult.getProblems() )\n            {\n                logger.warn( \"{} @ {}\", problem.getMessage(), problem.getLocation() );\n            }\n            logger.warn( \"\" );\n        }\n    }\n","realPath":"maven-embedder/src/main/java/org/apache/maven/cli/configuration/SettingsXmlConfigurationProcessor.java","repoName":"maven","snippetEndLine":0,"snippetStartLine":0,"startLine":83,"status":"M"},{"authorDate":"2016-10-10 03:00:42","commitOrder":7,"curCode":"    public Settings buildSettings( File userSettingsFile )\n        throws IOException, XmlPullParserException\n    {\n        File globalSettingsFile =\n            getFile( \"${maven.conf}/settings.xml\", \"maven.conf\",\n                     MavenSettingsBuilder.ALT_GLOBAL_SETTINGS_XML_LOCATION );\n\n        SettingsBuildingRequest request = new DefaultSettingsBuildingRequest();\n        request.setUserSettingsFile( userSettingsFile );\n        request.setGlobalSettingsFile( globalSettingsFile );\n        request.setSystemProperties( SystemProperties.getSystemProperties() );\n        return build( request );\n    }\n","date":"2017-01-24 03:54:54","endLine":77,"groupId":"3988","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"buildSettings","params":"(FileuserSettingsFile)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-maven-10-0.7/blobInfo/CC_OUT/blobs/20/7b9aa472624f9e64fa5c5d50ef688b01df97b8.src","preCode":"    public Settings buildSettings( File userSettingsFile )\n        throws IOException, XmlPullParserException\n    {\n        File globalSettingsFile =\n            getFile( \"${maven.conf}/settings.xml\", \"maven.conf\",\n                     MavenSettingsBuilder.ALT_GLOBAL_SETTINGS_XML_LOCATION );\n\n        SettingsBuildingRequest request = new DefaultSettingsBuildingRequest();\n        request.setUserSettingsFile( userSettingsFile );\n        request.setGlobalSettingsFile( globalSettingsFile );\n        request.setSystemProperties( SystemProperties.getSystemProperties() );\n        return build( request );\n    }\n","realPath":"maven-core/src/main/java/org/apache/maven/settings/DefaultMavenSettingsBuilder.java","repoName":"maven","snippetEndLine":0,"snippetStartLine":0,"startLine":65,"status":"N"}],"commitId":"22016982341262193d802ef51b2c236bac98464a","commitMessage":"@@@Apply consistent log argument quoting for sigle- and multi-valued args\n","date":"2021-01-05 22:47:20","modifiedFileCount":"7","status":"M","submitter":"Michael Osipov"},{"authorTime":"2016-10-10 03:00:42","codes":[{"authorDate":"2021-01-01 21:10:01","commitOrder":8,"curCode":"    public void process( CliRequest cliRequest )\n        throws Exception\n    {\n        CommandLine commandLine = cliRequest.getCommandLine();\n        String workingDirectory = cliRequest.getWorkingDirectory();\n        MavenExecutionRequest request = cliRequest.getRequest();\n\n        File userSettingsFile;\n\n        if ( commandLine.hasOption( CLIManager.ALTERNATE_USER_SETTINGS ) )\n        {\n            userSettingsFile = new File( commandLine.getOptionValue( CLIManager.ALTERNATE_USER_SETTINGS ) );\n            userSettingsFile = resolveFile( userSettingsFile, workingDirectory );\n\n            if ( !userSettingsFile.isFile() )\n            {\n                throw new FileNotFoundException( \"The specified user settings file does not exist: \"\n                    + userSettingsFile );\n            }\n        }\n        else\n        {\n            userSettingsFile = DEFAULT_USER_SETTINGS_FILE;\n        }\n\n        File globalSettingsFile;\n\n        if ( commandLine.hasOption( CLIManager.ALTERNATE_GLOBAL_SETTINGS ) )\n        {\n            globalSettingsFile = new File( commandLine.getOptionValue( CLIManager.ALTERNATE_GLOBAL_SETTINGS ) );\n            globalSettingsFile = resolveFile( globalSettingsFile, workingDirectory );\n\n            if ( !globalSettingsFile.isFile() )\n            {\n                throw new FileNotFoundException( \"The specified global settings file does not exist: \"\n                    + globalSettingsFile );\n            }\n        }\n        else\n        {\n            globalSettingsFile = DEFAULT_GLOBAL_SETTINGS_FILE;\n        }\n\n        request.setGlobalSettingsFile( globalSettingsFile );\n        request.setUserSettingsFile( userSettingsFile );\n\n        SettingsBuildingRequest settingsRequest = new DefaultSettingsBuildingRequest();\n        settingsRequest.setGlobalSettingsFile( globalSettingsFile );\n        settingsRequest.setUserSettingsFile( userSettingsFile );\n        settingsRequest.setSystemProperties( cliRequest.getSystemProperties() );\n        settingsRequest.setUserProperties( cliRequest.getUserProperties() );\n\n        if ( request.getEventSpyDispatcher() != null )\n        {\n            request.getEventSpyDispatcher().onEvent( settingsRequest );\n        }\n\n        LOGGER.debug( \"Reading global settings from '{}'\",\n            getLocation( settingsRequest.getGlobalSettingsSource(), settingsRequest.getGlobalSettingsFile() ) );\n        LOGGER.debug( \"Reading user settings from '{}'\",\n            getLocation( settingsRequest.getUserSettingsSource(), settingsRequest.getUserSettingsFile() ) );\n\n        SettingsBuildingResult settingsResult = settingsBuilder.build( settingsRequest );\n\n        if ( request.getEventSpyDispatcher() != null )\n        {\n            request.getEventSpyDispatcher().onEvent( settingsResult );\n        }\n\n        populateFromSettings( request, settingsResult.getEffectiveSettings() );\n\n        if ( !settingsResult.getProblems().isEmpty() && LOGGER.isWarnEnabled() )\n        {\n            LOGGER.warn( \"\" );\n            LOGGER.warn( \"Some problems were encountered while building the effective settings\" );\n\n            for ( SettingsProblem problem : settingsResult.getProblems() )\n            {\n                LOGGER.warn( \"{} @ {}\", problem.getMessage(), problem.getLocation() );\n            }\n            LOGGER.warn( \"\" );\n        }\n    }\n","date":"2021-01-05 22:47:20","endLine":165,"groupId":"12324","id":11,"instanceNumber":1,"isCurCommit":1,"methodName":"process","params":"(CliRequestcliRequest)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-maven-10-0.7/blobInfo/CC_OUT/blobs/51/97f320027bf218fa3ec1cd04213cf4a7dfaafe.src","preCode":"    public void process( CliRequest cliRequest )\n        throws Exception\n    {\n        CommandLine commandLine = cliRequest.getCommandLine();\n        String workingDirectory = cliRequest.getWorkingDirectory();\n        MavenExecutionRequest request = cliRequest.getRequest();\n\n        File userSettingsFile;\n\n        if ( commandLine.hasOption( CLIManager.ALTERNATE_USER_SETTINGS ) )\n        {\n            userSettingsFile = new File( commandLine.getOptionValue( CLIManager.ALTERNATE_USER_SETTINGS ) );\n            userSettingsFile = resolveFile( userSettingsFile, workingDirectory );\n\n            if ( !userSettingsFile.isFile() )\n            {\n                throw new FileNotFoundException( \"The specified user settings file does not exist: \"\n                    + userSettingsFile );\n            }\n        }\n        else\n        {\n            userSettingsFile = DEFAULT_USER_SETTINGS_FILE;\n        }\n\n        File globalSettingsFile;\n\n        if ( commandLine.hasOption( CLIManager.ALTERNATE_GLOBAL_SETTINGS ) )\n        {\n            globalSettingsFile = new File( commandLine.getOptionValue( CLIManager.ALTERNATE_GLOBAL_SETTINGS ) );\n            globalSettingsFile = resolveFile( globalSettingsFile, workingDirectory );\n\n            if ( !globalSettingsFile.isFile() )\n            {\n                throw new FileNotFoundException( \"The specified global settings file does not exist: \"\n                    + globalSettingsFile );\n            }\n        }\n        else\n        {\n            globalSettingsFile = DEFAULT_GLOBAL_SETTINGS_FILE;\n        }\n\n        request.setGlobalSettingsFile( globalSettingsFile );\n        request.setUserSettingsFile( userSettingsFile );\n\n        SettingsBuildingRequest settingsRequest = new DefaultSettingsBuildingRequest();\n        settingsRequest.setGlobalSettingsFile( globalSettingsFile );\n        settingsRequest.setUserSettingsFile( userSettingsFile );\n        settingsRequest.setSystemProperties( cliRequest.getSystemProperties() );\n        settingsRequest.setUserProperties( cliRequest.getUserProperties() );\n\n        if ( request.getEventSpyDispatcher() != null )\n        {\n            request.getEventSpyDispatcher().onEvent( settingsRequest );\n        }\n\n        logger.debug( \"Reading global settings from '{}'\",\n            getLocation( settingsRequest.getGlobalSettingsSource(), settingsRequest.getGlobalSettingsFile() ) );\n        logger.debug( \"Reading user settings from '{}'\",\n            getLocation( settingsRequest.getUserSettingsSource(), settingsRequest.getUserSettingsFile() ) );\n\n        SettingsBuildingResult settingsResult = settingsBuilder.build( settingsRequest );\n\n        if ( request.getEventSpyDispatcher() != null )\n        {\n            request.getEventSpyDispatcher().onEvent( settingsResult );\n        }\n\n        populateFromSettings( request, settingsResult.getEffectiveSettings() );\n\n        if ( !settingsResult.getProblems().isEmpty() && logger.isWarnEnabled() )\n        {\n            logger.warn( \"\" );\n            logger.warn( \"Some problems were encountered while building the effective settings\" );\n\n            for ( SettingsProblem problem : settingsResult.getProblems() )\n            {\n                logger.warn( \"{} @ {}\", problem.getMessage(), problem.getLocation() );\n            }\n            logger.warn( \"\" );\n        }\n    }\n","realPath":"maven-embedder/src/main/java/org/apache/maven/cli/configuration/SettingsXmlConfigurationProcessor.java","repoName":"maven","snippetEndLine":0,"snippetStartLine":0,"startLine":83,"status":"M"},{"authorDate":"2016-10-10 03:00:42","commitOrder":8,"curCode":"    public Settings buildSettings( File userSettingsFile )\n        throws IOException, XmlPullParserException\n    {\n        File globalSettingsFile =\n            getFile( \"${maven.conf}/settings.xml\", \"maven.conf\",\n                     MavenSettingsBuilder.ALT_GLOBAL_SETTINGS_XML_LOCATION );\n\n        SettingsBuildingRequest request = new DefaultSettingsBuildingRequest();\n        request.setUserSettingsFile( userSettingsFile );\n        request.setGlobalSettingsFile( globalSettingsFile );\n        request.setSystemProperties( SystemProperties.getSystemProperties() );\n        return build( request );\n    }\n","date":"2017-01-24 03:54:54","endLine":77,"groupId":"12324","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"buildSettings","params":"(FileuserSettingsFile)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-maven-10-0.7/blobInfo/CC_OUT/blobs/20/7b9aa472624f9e64fa5c5d50ef688b01df97b8.src","preCode":"    public Settings buildSettings( File userSettingsFile )\n        throws IOException, XmlPullParserException\n    {\n        File globalSettingsFile =\n            getFile( \"${maven.conf}/settings.xml\", \"maven.conf\",\n                     MavenSettingsBuilder.ALT_GLOBAL_SETTINGS_XML_LOCATION );\n\n        SettingsBuildingRequest request = new DefaultSettingsBuildingRequest();\n        request.setUserSettingsFile( userSettingsFile );\n        request.setGlobalSettingsFile( globalSettingsFile );\n        request.setSystemProperties( SystemProperties.getSystemProperties() );\n        return build( request );\n    }\n","realPath":"maven-core/src/main/java/org/apache/maven/settings/DefaultMavenSettingsBuilder.java","repoName":"maven","snippetEndLine":0,"snippetStartLine":0,"startLine":65,"status":"N"}],"commitId":"a6d5e8615527bf99f1fcd2c463903762625dd19e","commitMessage":"@@@Use consistent static final loggers","date":"2021-01-05 22:47:20","modifiedFileCount":"4","status":"M","submitter":"Michael Osipov"}]
