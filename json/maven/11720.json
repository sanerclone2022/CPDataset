[{"authorTime":"2015-02-14 22:59:02","codes":[{"authorDate":"2015-02-14 22:59:02","commitOrder":1,"curCode":"    public static CoreExtensionEntry discoverFrom( ClassRealm loader )\n    {\n        Set<String> artifacts = new LinkedHashSet<String>();\n        Set<String> packages = new LinkedHashSet<String>();\n\n        try\n        {\n            Enumeration<URL> urls = loader.getResources( builder.getExtensionDescriptorLocation() );\n            while ( urls.hasMoreElements() )\n            {\n                InputStream is = urls.nextElement().openStream();\n                try\n                {\n                    ExtensionDescriptor descriptor = builder.build( is );\n                    artifacts.addAll( descriptor.getExportedArtifacts() );\n                    packages.addAll( descriptor.getExportedPackages() );\n                }\n                finally\n                {\n                    IOUtil.close( is );\n                }\n            }\n        }\n        catch ( IOException ignored )\n        {\n            \r\n        }\n\n        return new CoreExtensionEntry( loader, artifacts, packages );\n    }\n","date":"2015-02-21 03:05:54","endLine":114,"groupId":"4905","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"discoverFrom","params":"(ClassRealmloader)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-maven-10-0.7/blobInfo/CC_OUT/blobs/d7/4c39040c6627402812aacfa1d9b5d7df1cca50.src","preCode":"    public static CoreExtensionEntry discoverFrom( ClassRealm loader )\n    {\n        Set<String> artifacts = new LinkedHashSet<String>();\n        Set<String> packages = new LinkedHashSet<String>();\n\n        try\n        {\n            Enumeration<URL> urls = loader.getResources( builder.getExtensionDescriptorLocation() );\n            while ( urls.hasMoreElements() )\n            {\n                InputStream is = urls.nextElement().openStream();\n                try\n                {\n                    ExtensionDescriptor descriptor = builder.build( is );\n                    artifacts.addAll( descriptor.getExportedArtifacts() );\n                    packages.addAll( descriptor.getExportedPackages() );\n                }\n                finally\n                {\n                    IOUtil.close( is );\n                }\n            }\n        }\n        catch ( IOException ignored )\n        {\n            \r\n        }\n\n        return new CoreExtensionEntry( loader, artifacts, packages );\n    }\n","realPath":"maven-core/src/main/java/org/apache/maven/extension/internal/CoreExtensionEntry.java","repoName":"maven","snippetEndLine":0,"snippetStartLine":0,"startLine":85,"status":"B"},{"authorDate":"2015-02-14 22:59:02","commitOrder":1,"curCode":"    public static CoreExtensionEntry discoverFrom( ClassRealm loader, Collection<File> classpath )\n    {\n        Set<String> artifacts = new LinkedHashSet<String>();\n        Set<String> packages = new LinkedHashSet<String>();\n\n        try\n        {\n            for ( File entry : classpath )\n            {\n                ExtensionDescriptor descriptor = builder.build( entry );\n                if ( descriptor != null )\n                {\n                    artifacts.addAll( descriptor.getExportedArtifacts() );\n                    packages.addAll( descriptor.getExportedPackages() );\n                }\n            }\n        }\n        catch ( IOException ignored )\n        {\n            \r\n        }\n\n        return new CoreExtensionEntry( loader, artifacts, packages );\n    }\n","date":"2015-02-21 03:05:54","endLine":139,"groupId":"4906","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"discoverFrom","params":"(ClassRealmloader@Collection<File>classpath)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-maven-10-0.7/blobInfo/CC_OUT/blobs/d7/4c39040c6627402812aacfa1d9b5d7df1cca50.src","preCode":"    public static CoreExtensionEntry discoverFrom( ClassRealm loader, Collection<File> classpath )\n    {\n        Set<String> artifacts = new LinkedHashSet<String>();\n        Set<String> packages = new LinkedHashSet<String>();\n\n        try\n        {\n            for ( File entry : classpath )\n            {\n                ExtensionDescriptor descriptor = builder.build( entry );\n                if ( descriptor != null )\n                {\n                    artifacts.addAll( descriptor.getExportedArtifacts() );\n                    packages.addAll( descriptor.getExportedPackages() );\n                }\n            }\n        }\n        catch ( IOException ignored )\n        {\n            \r\n        }\n\n        return new CoreExtensionEntry( loader, artifacts, packages );\n    }\n","realPath":"maven-core/src/main/java/org/apache/maven/extension/internal/CoreExtensionEntry.java","repoName":"maven","snippetEndLine":0,"snippetStartLine":0,"startLine":116,"status":"B"}],"commitId":"6efacdb3fc5e8369fa3586c0603184dc785303da","commitMessage":"@@@MNG-5771 user-defined core extensions\n\nread ${maven.projectBasedir}/.mvn/extensions.xml and create core\nextensions realms during maven runtime bootstrap. this required\nshort-lived bootstrap plexus container to resolve extensions.\n\nindividual extensions realms are wired to maven.ext realm according\nto META-INF/maven/extension.xml exported packages specification\n\nSigned-off-by: Igor Fedorenko <ifedorenko@apache.org>\n","date":"2015-02-21 03:05:54","modifiedFileCount":"4","status":"B","submitter":"Igor Fedorenko"},{"authorTime":"2015-03-06 14:12:21","codes":[{"authorDate":"2015-03-06 14:12:21","commitOrder":2,"curCode":"    public static CoreExtensionEntry discoverFrom( ClassRealm loader )\n    {\n        Set<String> artifacts = new LinkedHashSet<>();\n        Set<String> packages = new LinkedHashSet<>();\n\n        try\n        {\n            Enumeration<URL> urls = loader.getResources( builder.getExtensionDescriptorLocation() );\n            while ( urls.hasMoreElements() )\n            {\n                InputStream is = urls.nextElement().openStream();\n                try\n                {\n                    ExtensionDescriptor descriptor = builder.build( is );\n                    artifacts.addAll( descriptor.getExportedArtifacts() );\n                    packages.addAll( descriptor.getExportedPackages() );\n                }\n                finally\n                {\n                    IOUtil.close( is );\n                }\n            }\n        }\n        catch ( IOException ignored )\n        {\n            \r\n        }\n\n        return new CoreExtensionEntry( loader, artifacts, packages );\n    }\n","date":"2015-06-20 16:56:07","endLine":114,"groupId":"4905","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"discoverFrom","params":"(ClassRealmloader)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-maven-10-0.7/blobInfo/CC_OUT/blobs/4a/c5183d521bc311080e5eb5956611e20e173089.src","preCode":"    public static CoreExtensionEntry discoverFrom( ClassRealm loader )\n    {\n        Set<String> artifacts = new LinkedHashSet<String>();\n        Set<String> packages = new LinkedHashSet<String>();\n\n        try\n        {\n            Enumeration<URL> urls = loader.getResources( builder.getExtensionDescriptorLocation() );\n            while ( urls.hasMoreElements() )\n            {\n                InputStream is = urls.nextElement().openStream();\n                try\n                {\n                    ExtensionDescriptor descriptor = builder.build( is );\n                    artifacts.addAll( descriptor.getExportedArtifacts() );\n                    packages.addAll( descriptor.getExportedPackages() );\n                }\n                finally\n                {\n                    IOUtil.close( is );\n                }\n            }\n        }\n        catch ( IOException ignored )\n        {\n            \r\n        }\n\n        return new CoreExtensionEntry( loader, artifacts, packages );\n    }\n","realPath":"maven-core/src/main/java/org/apache/maven/extension/internal/CoreExtensionEntry.java","repoName":"maven","snippetEndLine":0,"snippetStartLine":0,"startLine":85,"status":"M"},{"authorDate":"2015-03-06 14:12:21","commitOrder":2,"curCode":"    public static CoreExtensionEntry discoverFrom( ClassRealm loader, Collection<File> classpath )\n    {\n        Set<String> artifacts = new LinkedHashSet<>();\n        Set<String> packages = new LinkedHashSet<>();\n\n        try\n        {\n            for ( File entry : classpath )\n            {\n                ExtensionDescriptor descriptor = builder.build( entry );\n                if ( descriptor != null )\n                {\n                    artifacts.addAll( descriptor.getExportedArtifacts() );\n                    packages.addAll( descriptor.getExportedPackages() );\n                }\n            }\n        }\n        catch ( IOException ignored )\n        {\n            \r\n        }\n\n        return new CoreExtensionEntry( loader, artifacts, packages );\n    }\n","date":"2015-06-20 16:56:07","endLine":139,"groupId":"4906","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"discoverFrom","params":"(ClassRealmloader@Collection<File>classpath)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-maven-10-0.7/blobInfo/CC_OUT/blobs/4a/c5183d521bc311080e5eb5956611e20e173089.src","preCode":"    public static CoreExtensionEntry discoverFrom( ClassRealm loader, Collection<File> classpath )\n    {\n        Set<String> artifacts = new LinkedHashSet<String>();\n        Set<String> packages = new LinkedHashSet<String>();\n\n        try\n        {\n            for ( File entry : classpath )\n            {\n                ExtensionDescriptor descriptor = builder.build( entry );\n                if ( descriptor != null )\n                {\n                    artifacts.addAll( descriptor.getExportedArtifacts() );\n                    packages.addAll( descriptor.getExportedPackages() );\n                }\n            }\n        }\n        catch ( IOException ignored )\n        {\n            \r\n        }\n\n        return new CoreExtensionEntry( loader, artifacts, packages );\n    }\n","realPath":"maven-core/src/main/java/org/apache/maven/extension/internal/CoreExtensionEntry.java","repoName":"maven","snippetEndLine":0,"snippetStartLine":0,"startLine":116,"status":"M"}],"commitId":"7badeb5b5bdfb48dd3c9533d224418d0648b76ce","commitMessage":"@@@Upgraded to java7 language features\n","date":"2015-06-20 16:56:07","modifiedFileCount":"234","status":"M","submitter":"Kristian Rosenvold"},{"authorTime":"2015-03-06 14:12:21","codes":[{"authorDate":"2015-06-19 17:10:43","commitOrder":3,"curCode":"    public static CoreExtensionEntry discoverFrom( ClassRealm loader )\n    {\n        Set<String> artifacts = new LinkedHashSet<>();\n        Set<String> packages = new LinkedHashSet<>();\n\n        try\n        {\n            Enumeration<URL> urls = loader.getResources( builder.getExtensionDescriptorLocation() );\n            while ( urls.hasMoreElements() )\n            {\n\n                try ( InputStream is = urls.nextElement().openStream() )\n                {\n                    ExtensionDescriptor descriptor = builder.build( is );\n                    artifacts.addAll( descriptor.getExportedArtifacts() );\n                    packages.addAll( descriptor.getExportedPackages() );\n                }\n            }\n        }\n        catch ( IOException ignored )\n        {\n            \r\n        }\n\n        return new CoreExtensionEntry( loader, artifacts, packages );\n    }\n","date":"2015-06-20 20:32:46","endLine":108,"groupId":"4905","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"discoverFrom","params":"(ClassRealmloader)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-maven-10-0.7/blobInfo/CC_OUT/blobs/ce/740a9679f227ab873294bfc93826bb8f8011a1.src","preCode":"    public static CoreExtensionEntry discoverFrom( ClassRealm loader )\n    {\n        Set<String> artifacts = new LinkedHashSet<>();\n        Set<String> packages = new LinkedHashSet<>();\n\n        try\n        {\n            Enumeration<URL> urls = loader.getResources( builder.getExtensionDescriptorLocation() );\n            while ( urls.hasMoreElements() )\n            {\n                InputStream is = urls.nextElement().openStream();\n                try\n                {\n                    ExtensionDescriptor descriptor = builder.build( is );\n                    artifacts.addAll( descriptor.getExportedArtifacts() );\n                    packages.addAll( descriptor.getExportedPackages() );\n                }\n                finally\n                {\n                    IOUtil.close( is );\n                }\n            }\n        }\n        catch ( IOException ignored )\n        {\n            \r\n        }\n\n        return new CoreExtensionEntry( loader, artifacts, packages );\n    }\n","realPath":"maven-core/src/main/java/org/apache/maven/extension/internal/CoreExtensionEntry.java","repoName":"maven","snippetEndLine":0,"snippetStartLine":0,"startLine":83,"status":"M"},{"authorDate":"2015-03-06 14:12:21","commitOrder":3,"curCode":"    public static CoreExtensionEntry discoverFrom( ClassRealm loader, Collection<File> classpath )\n    {\n        Set<String> artifacts = new LinkedHashSet<>();\n        Set<String> packages = new LinkedHashSet<>();\n\n        try\n        {\n            for ( File entry : classpath )\n            {\n                ExtensionDescriptor descriptor = builder.build( entry );\n                if ( descriptor != null )\n                {\n                    artifacts.addAll( descriptor.getExportedArtifacts() );\n                    packages.addAll( descriptor.getExportedPackages() );\n                }\n            }\n        }\n        catch ( IOException ignored )\n        {\n            \r\n        }\n\n        return new CoreExtensionEntry( loader, artifacts, packages );\n    }\n","date":"2015-06-20 16:56:07","endLine":139,"groupId":"4906","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"discoverFrom","params":"(ClassRealmloader@Collection<File>classpath)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-maven-10-0.7/blobInfo/CC_OUT/blobs/4a/c5183d521bc311080e5eb5956611e20e173089.src","preCode":"    public static CoreExtensionEntry discoverFrom( ClassRealm loader, Collection<File> classpath )\n    {\n        Set<String> artifacts = new LinkedHashSet<>();\n        Set<String> packages = new LinkedHashSet<>();\n\n        try\n        {\n            for ( File entry : classpath )\n            {\n                ExtensionDescriptor descriptor = builder.build( entry );\n                if ( descriptor != null )\n                {\n                    artifacts.addAll( descriptor.getExportedArtifacts() );\n                    packages.addAll( descriptor.getExportedPackages() );\n                }\n            }\n        }\n        catch ( IOException ignored )\n        {\n            \r\n        }\n\n        return new CoreExtensionEntry( loader, artifacts, packages );\n    }\n","realPath":"maven-core/src/main/java/org/apache/maven/extension/internal/CoreExtensionEntry.java","repoName":"maven","snippetEndLine":0,"snippetStartLine":0,"startLine":116,"status":"N"}],"commitId":"7f206ef1cc11585094cb045db4ec35fcbb1715a1","commitMessage":"@@@try-with-resources\n\nReformatted to code style by me. This fixes #53\n","date":"2015-06-20 20:32:46","modifiedFileCount":"25","status":"M","submitter":"sugartxy"},{"authorTime":"2018-02-02 05:57:39","codes":[{"authorDate":"2018-02-02 05:57:39","commitOrder":4,"curCode":"    public static CoreExtensionEntry discoverFrom( ClassRealm loader )\n    {\n        Set<String> artifacts = new LinkedHashSet<>();\n        Set<String> packages = new LinkedHashSet<>();\n\n        try\n        {\n            Enumeration<URL> urls = loader.getResources( BUILDER.getExtensionDescriptorLocation() );\n            while ( urls.hasMoreElements() )\n            {\n\n                try ( InputStream is = urls.nextElement().openStream() )\n                {\n                    ExtensionDescriptor descriptor = BUILDER.build( is );\n                    artifacts.addAll( descriptor.getExportedArtifacts() );\n                    packages.addAll( descriptor.getExportedPackages() );\n                }\n            }\n        }\n        catch ( IOException ignored )\n        {\n            \r\n        }\n\n        return new CoreExtensionEntry( loader, artifacts, packages );\n    }\n","date":"2018-02-11 18:41:16","endLine":108,"groupId":"11720","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"discoverFrom","params":"(ClassRealmloader)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-maven-10-0.7/blobInfo/CC_OUT/blobs/ff/ac1d39b1cb6faf8119c6bd6f55cbf479e7a03c.src","preCode":"    public static CoreExtensionEntry discoverFrom( ClassRealm loader )\n    {\n        Set<String> artifacts = new LinkedHashSet<>();\n        Set<String> packages = new LinkedHashSet<>();\n\n        try\n        {\n            Enumeration<URL> urls = loader.getResources( builder.getExtensionDescriptorLocation() );\n            while ( urls.hasMoreElements() )\n            {\n\n                try ( InputStream is = urls.nextElement().openStream() )\n                {\n                    ExtensionDescriptor descriptor = builder.build( is );\n                    artifacts.addAll( descriptor.getExportedArtifacts() );\n                    packages.addAll( descriptor.getExportedPackages() );\n                }\n            }\n        }\n        catch ( IOException ignored )\n        {\n            \r\n        }\n\n        return new CoreExtensionEntry( loader, artifacts, packages );\n    }\n","realPath":"maven-core/src/main/java/org/apache/maven/extension/internal/CoreExtensionEntry.java","repoName":"maven","snippetEndLine":0,"snippetStartLine":0,"startLine":83,"status":"M"},{"authorDate":"2018-02-02 05:57:39","commitOrder":4,"curCode":"    public static CoreExtensionEntry discoverFrom( ClassRealm loader, Collection<File> classpath )\n    {\n        Set<String> artifacts = new LinkedHashSet<>();\n        Set<String> packages = new LinkedHashSet<>();\n\n        try\n        {\n            for ( File entry : classpath )\n            {\n                ExtensionDescriptor descriptor = BUILDER.build( entry );\n                if ( descriptor != null )\n                {\n                    artifacts.addAll( descriptor.getExportedArtifacts() );\n                    packages.addAll( descriptor.getExportedPackages() );\n                }\n            }\n        }\n        catch ( IOException ignored )\n        {\n            \r\n        }\n\n        return new CoreExtensionEntry( loader, artifacts, packages );\n    }\n","date":"2018-02-11 18:41:16","endLine":133,"groupId":"11720","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"discoverFrom","params":"(ClassRealmloader@Collection<File>classpath)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-maven-10-0.7/blobInfo/CC_OUT/blobs/ff/ac1d39b1cb6faf8119c6bd6f55cbf479e7a03c.src","preCode":"    public static CoreExtensionEntry discoverFrom( ClassRealm loader, Collection<File> classpath )\n    {\n        Set<String> artifacts = new LinkedHashSet<>();\n        Set<String> packages = new LinkedHashSet<>();\n\n        try\n        {\n            for ( File entry : classpath )\n            {\n                ExtensionDescriptor descriptor = builder.build( entry );\n                if ( descriptor != null )\n                {\n                    artifacts.addAll( descriptor.getExportedArtifacts() );\n                    packages.addAll( descriptor.getExportedPackages() );\n                }\n            }\n        }\n        catch ( IOException ignored )\n        {\n            \r\n        }\n\n        return new CoreExtensionEntry( loader, artifacts, packages );\n    }\n","realPath":"maven-core/src/main/java/org/apache/maven/extension/internal/CoreExtensionEntry.java","repoName":"maven","snippetEndLine":0,"snippetStartLine":0,"startLine":110,"status":"M"}],"commitId":"d92508179410897404bcc7e826bb0877be2d08b8","commitMessage":"@@@Reduce number of global checkstyle rule violations\n\nFix code for following checkstyle rules:\nConstantName.  FileLength.  InnerAssignment.  JavadocType.  MagicNumber.  MethodLength.  MethodName.  NewlineAtEndOfFile.  ParameterNumber.  RedundantThrows.  VisibilityModifier\n\nFixes #149","date":"2018-02-11 18:41:16","modifiedFileCount":"180","status":"M","submitter":"Sylwester Lachiewicz"}]
