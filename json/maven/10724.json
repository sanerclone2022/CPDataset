[{"authorTime":"2014-09-27 08:18:47","codes":[{"authorDate":"2013-12-15 08:43:42","commitOrder":3,"curCode":"    public <T> Provider<T> scope( final Key<T> key, final Provider<T> unscoped )\n    {\n        return new Provider<T>()\n        {\n            @SuppressWarnings( \"unchecked\" )\n            public T get()\n            {\n                LinkedList<ScopeState> stack = values.get();\n                if ( stack == null || stack.isEmpty() )\n                {\n                    throw new OutOfScopeException( \"Cannot access \" + key + \" outside of a scoping block\" );\n                }\n\n                ScopeState state = stack.getFirst();\n\n                Provider<?> seeded = state.seeded.get( key );\n\n                if ( seeded != null )\n                {\n                    return (T) seeded.get();\n                }\n\n                T provided = (T) state.provided.get( key );\n                if ( provided == null && unscoped != null )\n                {\n                    provided = unscoped.get();\n                    state.provided.put( key, provided );\n                }\n\n                return provided;\n            }\n        };\n    }\n","date":"2013-12-15 08:43:42","endLine":152,"groupId":"3122","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"scope","params":"(finalKey<T>key@finalProvider<T>unscoped)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-maven-10-0.7/blobInfo/CC_OUT/blobs/80/badfc75eedbf93d5df2781a7edcdab58874372.src","preCode":"    public <T> Provider<T> scope( final Key<T> key, final Provider<T> unscoped )\n    {\n        return new Provider<T>()\n        {\n            @SuppressWarnings( \"unchecked\" )\n            public T get()\n            {\n                LinkedList<ScopeState> stack = values.get();\n                if ( stack == null || stack.isEmpty() )\n                {\n                    throw new OutOfScopeException( \"Cannot access \" + key + \" outside of a scoping block\" );\n                }\n\n                ScopeState state = stack.getFirst();\n\n                Provider<?> seeded = state.seeded.get( key );\n\n                if ( seeded != null )\n                {\n                    return (T) seeded.get();\n                }\n\n                T provided = (T) state.provided.get( key );\n                if ( provided == null && unscoped != null )\n                {\n                    provided = unscoped.get();\n                    state.provided.put( key, provided );\n                }\n\n                return provided;\n            }\n        };\n    }\n","realPath":"maven-core/src/main/java/org/apache/maven/execution/scope/internal/MojoExecutionScope.java","repoName":"maven","snippetEndLine":0,"snippetStartLine":0,"startLine":120,"status":"NB"},{"authorDate":"2014-09-27 08:18:47","commitOrder":3,"curCode":"    public <T> Provider<T> scope( final Key<T> key, final Provider<T> unscoped )\n    {\n        return new Provider<T>()\n        {\n            @SuppressWarnings( \"unchecked\" )\n            public T get()\n            {\n                LinkedList<ScopeState> stack = values.get();\n                if ( stack == null || stack.isEmpty() )\n                {\n                    throw new OutOfScopeException( \"Cannot access \" + key + \" outside of a scoping block\" );\n                }\n\n                ScopeState state = stack.getFirst();\n\n                Provider<?> seeded = state.seeded.get( key );\n\n                if ( seeded != null )\n                {\n                    return (T) seeded.get();\n                }\n\n                T provided = (T) state.provided.get( key );\n                if ( provided == null && unscoped != null )\n                {\n                    provided = unscoped.get();\n                    state.provided.put( key, provided );\n                }\n\n                return provided;\n            }\n        };\n    }\n","date":"2014-09-27 09:55:30","endLine":129,"groupId":"3122","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"scope","params":"(finalKey<T>key@finalProvider<T>unscoped)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-maven-10-0.7/blobInfo/CC_OUT/blobs/ea/8b677efbcc9b772565f93dd2f807df5fd0afd4.src","preCode":"    public <T> Provider<T> scope( final Key<T> key, final Provider<T> unscoped )\n    {\n        return new Provider<T>()\n        {\n            @SuppressWarnings( \"unchecked\" )\n            public T get()\n            {\n                LinkedList<ScopeState> stack = values.get();\n                if ( stack == null || stack.isEmpty() )\n                {\n                    throw new OutOfScopeException( \"Cannot access \" + key + \" outside of a scoping block\" );\n                }\n\n                ScopeState state = stack.getFirst();\n\n                Provider<?> seeded = state.seeded.get( key );\n\n                if ( seeded != null )\n                {\n                    return (T) seeded.get();\n                }\n\n                T provided = (T) state.provided.get( key );\n                if ( provided == null && unscoped != null )\n                {\n                    provided = unscoped.get();\n                    state.provided.put( key, provided );\n                }\n\n                return provided;\n            }\n        };\n    }\n","realPath":"maven-core/src/main/java/org/apache/maven/session/scope/internal/SessionScope.java","repoName":"maven","snippetEndLine":0,"snippetStartLine":0,"startLine":97,"status":"B"}],"commitId":"b80fb7d7ce46c67cc2caa4e136430add83535e23","commitMessage":"@@@MNG-5695 fixed inconsistent/incomplete custom guice scope bindings\n\nMojoExecution scope was only available for maven plugins and could not\nbe used for components defined in maven core or maven code extensions.\n\nSession scope was only available for maven core and core extensions\nbut did not work for components from maven plugins.\n\nMade both custom scopes available available in all realms.\n\nSigned-off-by: Igor Fedorenko <ifedorenko@apache.org>\n","date":"2014-09-27 09:55:30","modifiedFileCount":"5","status":"M","submitter":"Igor Fedorenko"},{"authorTime":"2020-01-04 20:02:31","codes":[{"authorDate":"2020-01-04 20:02:31","commitOrder":4,"curCode":"    public <T> Provider<T> scope( final Key<T> key, final Provider<T> unscoped )\n    {\n        return () ->\n        {\n            LinkedList<ScopeState> stack = values.get();\n            if ( stack == null || stack.isEmpty() )\n            {\n                throw new OutOfScopeException( \"Cannot access \" + key + \" outside of a scoping block\" );\n            }\n\n            ScopeState state = stack.getFirst();\n\n            Provider<?> seeded = state.seeded.get( key );\n\n            if ( seeded != null )\n            {\n                return (T) seeded.get();\n            }\n\n            T provided = (T) state.provided.get( key );\n            if ( provided == null && unscoped != null )\n            {\n                provided = unscoped.get();\n                state.provided.put( key, provided );\n            }\n\n            return provided;\n        };\n    }\n","date":"2020-01-26 05:52:20","endLine":137,"groupId":"10724","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"scope","params":"(finalKey<T>key@finalProvider<T>unscoped)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-maven-10-0.7/blobInfo/CC_OUT/blobs/86/d7c73a6ee65ed8072b1df17c76e871d681364c.src","preCode":"    public <T> Provider<T> scope( final Key<T> key, final Provider<T> unscoped )\n    {\n        return new Provider<T>()\n        {\n            @SuppressWarnings( \"unchecked\" )\n            public T get()\n            {\n                LinkedList<ScopeState> stack = values.get();\n                if ( stack == null || stack.isEmpty() )\n                {\n                    throw new OutOfScopeException( \"Cannot access \" + key + \" outside of a scoping block\" );\n                }\n\n                ScopeState state = stack.getFirst();\n\n                Provider<?> seeded = state.seeded.get( key );\n\n                if ( seeded != null )\n                {\n                    return (T) seeded.get();\n                }\n\n                T provided = (T) state.provided.get( key );\n                if ( provided == null && unscoped != null )\n                {\n                    provided = unscoped.get();\n                    state.provided.put( key, provided );\n                }\n\n                return provided;\n            }\n        };\n    }\n","realPath":"maven-core/src/main/java/org/apache/maven/execution/scope/internal/MojoExecutionScope.java","repoName":"maven","snippetEndLine":0,"snippetStartLine":0,"startLine":109,"status":"M"},{"authorDate":"2020-01-04 20:02:31","commitOrder":4,"curCode":"    public <T> Provider<T> scope( final Key<T> key, final Provider<T> unscoped )\n    {\n        return () ->\n        {\n            LinkedList<ScopeState> stack = values.get();\n            if ( stack == null || stack.isEmpty() )\n            {\n                throw new OutOfScopeException( \"Cannot access \" + key + \" outside of a scoping block\" );\n            }\n\n            ScopeState state = stack.getFirst();\n\n            Provider<?> seeded = state.seeded.get( key );\n\n            if ( seeded != null )\n            {\n                return (T) seeded.get();\n            }\n\n            T provided = (T) state.provided.get( key );\n            if ( provided == null && unscoped != null )\n            {\n                provided = unscoped.get();\n                state.provided.put( key, provided );\n            }\n\n            return provided;\n        };\n    }\n","date":"2020-01-26 05:52:20","endLine":160,"groupId":"10724","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"scope","params":"(finalKey<T>key@finalProvider<T>unscoped)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-maven-10-0.7/blobInfo/CC_OUT/blobs/31/c2900944aa9e19e20815ab607a9368b95fc6fa.src","preCode":"    public <T> Provider<T> scope( final Key<T> key, final Provider<T> unscoped )\n    {\n        return new Provider<T>()\n        {\n            @SuppressWarnings( \"unchecked\" )\n            public T get()\n            {\n                LinkedList<ScopeState> stack = values.get();\n                if ( stack == null || stack.isEmpty() )\n                {\n                    throw new OutOfScopeException( \"Cannot access \" + key + \" outside of a scoping block\" );\n                }\n\n                ScopeState state = stack.getFirst();\n\n                Provider<?> seeded = state.seeded.get( key );\n\n                if ( seeded != null )\n                {\n                    return (T) seeded.get();\n                }\n\n                T provided = (T) state.provided.get( key );\n                if ( provided == null && unscoped != null )\n                {\n                    provided = unscoped.get();\n                    state.provided.put( key, provided );\n                }\n\n                return provided;\n            }\n        };\n    }\n","realPath":"maven-core/src/main/java/org/apache/maven/session/scope/internal/SessionScope.java","repoName":"maven","snippetEndLine":0,"snippetStartLine":0,"startLine":132,"status":"M"}],"commitId":"ddb454ac83e83b5178f9a5bb40a3250d9b543a3e","commitMessage":"@@@[MNG-6831] Replace Anonymous classes by lambdas\n\nCloses #303","date":"2020-01-26 05:52:20","modifiedFileCount":"19","status":"M","submitter":"Artem Krosheninnikov"}]
