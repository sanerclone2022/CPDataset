[{"authorTime":"2014-09-04 02:48:28","codes":[{"authorDate":"2016-12-12 06:36:04","commitOrder":2,"curCode":"    public ModelSource resolveModel( String groupId, String artifactId, String version )\n        throws UnresolvableModelException\n    {\n        Artifact pomArtifact = new DefaultArtifact( groupId, artifactId, \"\", \"pom\", version );\n\n        try\n        {\n            ArtifactRequest request = new ArtifactRequest( pomArtifact, repositories, context );\n            request.setTrace( trace );\n            pomArtifact = resolver.resolveArtifact( session, request ).getArtifact();\n        }\n        catch ( ArtifactResolutionException e )\n        {\n            throw new UnresolvableModelException( e.getMessage(), groupId, artifactId, version, e );\n        }\n\n        File pomFile = pomArtifact.getFile();\n\n        return new FileModelSource( pomFile );\n    }\n","date":"2017-02-01 14:59:53","endLine":183,"groupId":"6437","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"resolveModel","params":"(StringgroupId@StringartifactId@Stringversion)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-maven-10-0.7/blobInfo/CC_OUT/blobs/f3/44959f1413cbc602f671719587fa3d0ff6f198.src","preCode":"    public ModelSource resolveModel( String groupId, String artifactId, String version )\n        throws UnresolvableModelException\n    {\n        Artifact pomArtifact = new DefaultArtifact( groupId, artifactId, \"\", \"pom\", version );\n\n        try\n        {\n            ArtifactRequest request = new ArtifactRequest( pomArtifact, repositories, context );\n            request.setTrace( trace );\n            pomArtifact = resolver.resolveArtifact( session, request ).getArtifact();\n        }\n        catch ( ArtifactResolutionException e )\n        {\n            throw new UnresolvableModelException( e.getMessage(), groupId, artifactId, version, e );\n        }\n\n        File pomFile = pomArtifact.getFile();\n\n        return new FileModelSource( pomFile );\n    }\n","realPath":"maven-resolver-provider/src/main/java/org/apache/maven/repository/internal/DefaultModelResolver.java","repoName":"maven","snippetEndLine":0,"snippetStartLine":0,"startLine":164,"status":"B"},{"authorDate":"2014-09-04 02:48:28","commitOrder":2,"curCode":"    public ModelSource resolveModel( String groupId, String artifactId, String version )\n        throws UnresolvableModelException\n    {\n        File pomFile = null;\n\n        if ( modelPool != null )\n        {\n            pomFile = modelPool.get( groupId, artifactId, version );\n        }\n\n        if ( pomFile == null )\n        {\n            Artifact pomArtifact = new DefaultArtifact( groupId, artifactId, \"\", \"pom\", version );\n\n            try\n            {\n                ArtifactRequest request = new ArtifactRequest( pomArtifact, repositories, context );\n                request.setTrace( trace );\n                pomArtifact = resolver.resolveArtifact( session, request ).getArtifact();\n            }\n            catch ( ArtifactResolutionException e )\n            {\n                throw new UnresolvableModelException( e.getMessage(), groupId, artifactId, version, e );\n            }\n\n            pomFile = pomArtifact.getFile();\n        }\n\n        return new FileModelSource( pomFile );\n    }\n","date":"2015-03-02 04:39:30","endLine":203,"groupId":"6437","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"resolveModel","params":"(StringgroupId@StringartifactId@Stringversion)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-maven-10-0.7/blobInfo/CC_OUT/blobs/77/e7c4986338dfaf5a50e9c585f35f4eb1d0f4c4.src","preCode":"    public ModelSource resolveModel( String groupId, String artifactId, String version )\n        throws UnresolvableModelException\n    {\n        File pomFile = null;\n\n        if ( modelPool != null )\n        {\n            pomFile = modelPool.get( groupId, artifactId, version );\n        }\n\n        if ( pomFile == null )\n        {\n            Artifact pomArtifact = new DefaultArtifact( groupId, artifactId, \"\", \"pom\", version );\n\n            try\n            {\n                ArtifactRequest request = new ArtifactRequest( pomArtifact, repositories, context );\n                request.setTrace( trace );\n                pomArtifact = resolver.resolveArtifact( session, request ).getArtifact();\n            }\n            catch ( ArtifactResolutionException e )\n            {\n                throw new UnresolvableModelException( e.getMessage(), groupId, artifactId, version, e );\n            }\n\n            pomFile = pomArtifact.getFile();\n        }\n\n        return new FileModelSource( pomFile );\n    }\n","realPath":"maven-core/src/main/java/org/apache/maven/project/ProjectModelResolver.java","repoName":"maven","snippetEndLine":0,"snippetStartLine":0,"startLine":174,"status":"NB"}],"commitId":"8972072e3200e2ecfe2acb6d0b2dc40b10a6bc31","commitMessage":"@@@[MNG-6110] renamed 'maven-aether-provider' to 'maven-resolver-provider'","date":"2017-02-01 14:59:53","modifiedFileCount":"0","status":"M","submitter":"Christian Schulte"},{"authorTime":"2014-09-04 02:48:28","codes":[{"authorDate":"2020-01-30 04:18:42","commitOrder":3,"curCode":"    public ModelSource resolveModel( String groupId, String artifactId, String version )\n        throws UnresolvableModelException\n    {\n        Artifact pomArtifact = new DefaultArtifact( groupId, artifactId, \"\", \"pom\", version );\n\n        try\n        {\n            ArtifactRequest request = new ArtifactRequest( pomArtifact, repositories, context );\n            request.setTrace( trace );\n            pomArtifact = resolver.resolveArtifact( session, request ).getArtifact();\n        }\n        catch ( ArtifactResolutionException e )\n        {\n            throw new UnresolvableModelException( e.getMessage(), groupId, artifactId, version, e );\n        }\n\n        return new ArtifactModelSource( pomArtifact.getFile(), groupId, artifactId, version );\n    }\n","date":"2020-01-30 04:18:42","endLine":179,"groupId":"6437","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"resolveModel","params":"(StringgroupId@StringartifactId@Stringversion)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-maven-10-0.7/blobInfo/CC_OUT/blobs/f2/3bfe4ef8b6efd828423a1e3f9f1eeb42df8af1.src","preCode":"    public ModelSource resolveModel( String groupId, String artifactId, String version )\n        throws UnresolvableModelException\n    {\n        Artifact pomArtifact = new DefaultArtifact( groupId, artifactId, \"\", \"pom\", version );\n\n        try\n        {\n            ArtifactRequest request = new ArtifactRequest( pomArtifact, repositories, context );\n            request.setTrace( trace );\n            pomArtifact = resolver.resolveArtifact( session, request ).getArtifact();\n        }\n        catch ( ArtifactResolutionException e )\n        {\n            throw new UnresolvableModelException( e.getMessage(), groupId, artifactId, version, e );\n        }\n\n        File pomFile = pomArtifact.getFile();\n\n        return new FileModelSource( pomFile );\n    }\n","realPath":"maven-resolver-provider/src/main/java/org/apache/maven/repository/internal/DefaultModelResolver.java","repoName":"maven","snippetEndLine":0,"snippetStartLine":0,"startLine":162,"status":"M"},{"authorDate":"2014-09-04 02:48:28","commitOrder":3,"curCode":"    public ModelSource resolveModel( String groupId, String artifactId, String version )\n        throws UnresolvableModelException\n    {\n        File pomFile = null;\n\n        if ( modelPool != null )\n        {\n            pomFile = modelPool.get( groupId, artifactId, version );\n        }\n\n        if ( pomFile == null )\n        {\n            Artifact pomArtifact = new DefaultArtifact( groupId, artifactId, \"\", \"pom\", version );\n\n            try\n            {\n                ArtifactRequest request = new ArtifactRequest( pomArtifact, repositories, context );\n                request.setTrace( trace );\n                pomArtifact = resolver.resolveArtifact( session, request ).getArtifact();\n            }\n            catch ( ArtifactResolutionException e )\n            {\n                throw new UnresolvableModelException( e.getMessage(), groupId, artifactId, version, e );\n            }\n\n            pomFile = pomArtifact.getFile();\n        }\n\n        return new FileModelSource( pomFile );\n    }\n","date":"2015-03-02 04:39:30","endLine":203,"groupId":"6437","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"resolveModel","params":"(StringgroupId@StringartifactId@Stringversion)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-maven-10-0.7/blobInfo/CC_OUT/blobs/77/e7c4986338dfaf5a50e9c585f35f4eb1d0f4c4.src","preCode":"    public ModelSource resolveModel( String groupId, String artifactId, String version )\n        throws UnresolvableModelException\n    {\n        File pomFile = null;\n\n        if ( modelPool != null )\n        {\n            pomFile = modelPool.get( groupId, artifactId, version );\n        }\n\n        if ( pomFile == null )\n        {\n            Artifact pomArtifact = new DefaultArtifact( groupId, artifactId, \"\", \"pom\", version );\n\n            try\n            {\n                ArtifactRequest request = new ArtifactRequest( pomArtifact, repositories, context );\n                request.setTrace( trace );\n                pomArtifact = resolver.resolveArtifact( session, request ).getArtifact();\n            }\n            catch ( ArtifactResolutionException e )\n            {\n                throw new UnresolvableModelException( e.getMessage(), groupId, artifactId, version, e );\n            }\n\n            pomFile = pomArtifact.getFile();\n        }\n\n        return new FileModelSource( pomFile );\n    }\n","realPath":"maven-core/src/main/java/org/apache/maven/project/ProjectModelResolver.java","repoName":"maven","snippetEndLine":0,"snippetStartLine":0,"startLine":174,"status":"N"}],"commitId":"716cc1fe02661897232a7cc3e4c1bb3b3df3b832","commitMessage":"@@@[MNG-5669] same pom.xml is read multiple times\n","date":"2020-01-30 04:18:42","modifiedFileCount":"11","status":"M","submitter":"rfscholte"},{"authorTime":"2020-06-23 03:24:49","codes":[{"authorDate":"2020-01-30 04:18:42","commitOrder":4,"curCode":"    public ModelSource resolveModel( String groupId, String artifactId, String version )\n        throws UnresolvableModelException\n    {\n        Artifact pomArtifact = new DefaultArtifact( groupId, artifactId, \"\", \"pom\", version );\n\n        try\n        {\n            ArtifactRequest request = new ArtifactRequest( pomArtifact, repositories, context );\n            request.setTrace( trace );\n            pomArtifact = resolver.resolveArtifact( session, request ).getArtifact();\n        }\n        catch ( ArtifactResolutionException e )\n        {\n            throw new UnresolvableModelException( e.getMessage(), groupId, artifactId, version, e );\n        }\n\n        return new ArtifactModelSource( pomArtifact.getFile(), groupId, artifactId, version );\n    }\n","date":"2020-01-30 04:18:42","endLine":179,"groupId":"12142","id":5,"instanceNumber":1,"isCurCommit":1,"methodName":"resolveModel","params":"(StringgroupId@StringartifactId@Stringversion)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-maven-10-0.7/blobInfo/CC_OUT/blobs/f2/3bfe4ef8b6efd828423a1e3f9f1eeb42df8af1.src","preCode":"    public ModelSource resolveModel( String groupId, String artifactId, String version )\n        throws UnresolvableModelException\n    {\n        Artifact pomArtifact = new DefaultArtifact( groupId, artifactId, \"\", \"pom\", version );\n\n        try\n        {\n            ArtifactRequest request = new ArtifactRequest( pomArtifact, repositories, context );\n            request.setTrace( trace );\n            pomArtifact = resolver.resolveArtifact( session, request ).getArtifact();\n        }\n        catch ( ArtifactResolutionException e )\n        {\n            throw new UnresolvableModelException( e.getMessage(), groupId, artifactId, version, e );\n        }\n\n        return new ArtifactModelSource( pomArtifact.getFile(), groupId, artifactId, version );\n    }\n","realPath":"maven-resolver-provider/src/main/java/org/apache/maven/repository/internal/DefaultModelResolver.java","repoName":"maven","snippetEndLine":0,"snippetStartLine":0,"startLine":162,"status":"N"},{"authorDate":"2020-06-23 03:24:49","commitOrder":4,"curCode":"    public ModelSource resolveModel( String groupId, String artifactId, String version )\n        throws UnresolvableModelException\n    {\n        Artifact pomArtifact = new DefaultArtifact( groupId, artifactId, \"\", \"pom\", version );\n\n        try\n        {\n            ArtifactRequest request = new ArtifactRequest( pomArtifact, repositories, context );\n            request.setTrace( trace );\n            pomArtifact = resolver.resolveArtifact( session, request ).getArtifact();\n        }\n        catch ( ArtifactResolutionException e )\n        {\n            throw new UnresolvableModelException( e.getMessage(), groupId, artifactId, version, e );\n        }\n\n        return new ArtifactModelSource( pomArtifact.getFile(), groupId, artifactId, version );\n    }\n","date":"2020-06-23 03:24:49","endLine":192,"groupId":"12142","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"resolveModel","params":"(StringgroupId@StringartifactId@Stringversion)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-maven-10-0.7/blobInfo/CC_OUT/blobs/bc/c3730e72bbf037197807e0175d5c53a75f7678.src","preCode":"    public ModelSource resolveModel( String groupId, String artifactId, String version )\n        throws UnresolvableModelException\n    {\n        File pomFile = null;\n\n        if ( modelPool != null )\n        {\n            pomFile = modelPool.get( groupId, artifactId, version );\n        }\n\n        if ( pomFile == null )\n        {\n            Artifact pomArtifact = new DefaultArtifact( groupId, artifactId, \"\", \"pom\", version );\n\n            try\n            {\n                ArtifactRequest request = new ArtifactRequest( pomArtifact, repositories, context );\n                request.setTrace( trace );\n                pomArtifact = resolver.resolveArtifact( session, request ).getArtifact();\n            }\n            catch ( ArtifactResolutionException e )\n            {\n                throw new UnresolvableModelException( e.getMessage(), groupId, artifactId, version, e );\n            }\n\n            pomFile = pomArtifact.getFile();\n        }\n\n        return new FileModelSource( pomFile );\n    }\n","realPath":"maven-core/src/main/java/org/apache/maven/project/ProjectModelResolver.java","repoName":"maven","snippetEndLine":0,"snippetStartLine":0,"startLine":175,"status":"M"}],"commitId":"bdec668de9c600165bb69c95b6ea0625d9f74fb0","commitMessage":"@@@[MNG-6656] Introduce base for build/consumer pom\n","date":"2020-06-23 03:24:49","modifiedFileCount":"17","status":"M","submitter":"rfscholte"}]
