[{"authorTime":"2008-11-28 06:32:16","codes":[{"authorDate":"2009-06-28 19:16:34","commitOrder":2,"curCode":"    private ArtifactMetadata createMetadata( Artifact artifact )\n    {\n        Versioning versioning = new Versioning();\n        versioning.updateTimestamp();\n        versioning.addVersion( artifact.getVersion() );\n\n        if ( artifact.isRelease() )\n        {\n            versioning.setRelease( artifact.getVersion() );\n        }\n\n        return new ArtifactRepositoryMetadata( artifact, versioning );\n    }\n","date":"2009-06-28 19:16:34","endLine":99,"groupId":"2427","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"createMetadata","params":"(Artifactartifact)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-maven-10-0.7/blobInfo/CC_OUT/blobs/95/262b6e64634d727a920ccb1d45fb894ccbd3d0.src","preCode":"    private ArtifactMetadata createMetadata( Artifact artifact )\n    {\n        Versioning versioning = new Versioning();\n        versioning.updateTimestamp();\n        versioning.addVersion( artifact.getVersion() );\n\n        if ( artifact.isRelease() )\n        {\n            versioning.setRelease( artifact.getVersion() );\n        }\n\n        return new ArtifactRepositoryMetadata( artifact, versioning );\n    }\n","realPath":"maven-compat/src/main/java/org/apache/maven/repository/legacy/resolver/transform/ReleaseArtifactTransformation.java","repoName":"maven","snippetEndLine":0,"snippetStartLine":0,"startLine":87,"status":"B"},{"authorDate":"2008-11-28 06:32:16","commitOrder":2,"curCode":"    public void install( File source, Artifact artifact, ArtifactRepository localRepository )\n        throws ArtifactInstallationException\n    {\n        try\n        {\n            transformationManager.transformForInstall( artifact, localRepository );\n\n            String localPath = localRepository.pathOf( artifact );\n\n            \r\n            File destination = new File( localRepository.getBasedir(), localPath );\n            if ( !destination.getParentFile().exists() )\n            {\n                destination.getParentFile().mkdirs();\n            }\n\n            getLogger().info( \"Installing \" + source.getPath() + \" to \" + destination );\n\n            FileUtils.copyFile( source, destination );\n\n            \r\n            for ( ArtifactMetadata metadata : artifact.getMetadataList() )\n            {\n                repositoryMetadataManager.install( metadata, localRepository );\n            }\n            \r\n            \r\n            \r\n            \r\n        }\n        catch ( IOException e )\n        {\n            throw new ArtifactInstallationException( \"Error installing artifact: \" + e.getMessage(), e );\n        }\n        catch ( RepositoryMetadataInstallationException e )\n        {\n            throw new ArtifactInstallationException( \"Error installing artifact's metadata: \" + e.getMessage(), e );\n        }\n    }\n","date":"2008-11-28 06:32:16","endLine":97,"groupId":"2005","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"install","params":"(Filesource@Artifactartifact@ArtifactRepositorylocalRepository)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-maven-10-0.7/blobInfo/CC_OUT/blobs/d7/4afbe523c64fee80ac9bb0cef87afa402b4355.src","preCode":"    public void install( File source, Artifact artifact, ArtifactRepository localRepository )\n        throws ArtifactInstallationException\n    {\n        try\n        {\n            transformationManager.transformForInstall( artifact, localRepository );\n\n            String localPath = localRepository.pathOf( artifact );\n\n            \r\n            File destination = new File( localRepository.getBasedir(), localPath );\n            if ( !destination.getParentFile().exists() )\n            {\n                destination.getParentFile().mkdirs();\n            }\n\n            getLogger().info( \"Installing \" + source.getPath() + \" to \" + destination );\n\n            FileUtils.copyFile( source, destination );\n\n            \r\n            for ( ArtifactMetadata metadata : artifact.getMetadataList() )\n            {\n                repositoryMetadataManager.install( metadata, localRepository );\n            }\n            \r\n            \r\n            \r\n            \r\n        }\n        catch ( IOException e )\n        {\n            throw new ArtifactInstallationException( \"Error installing artifact: \" + e.getMessage(), e );\n        }\n        catch ( RepositoryMetadataInstallationException e )\n        {\n            throw new ArtifactInstallationException( \"Error installing artifact's metadata: \" + e.getMessage(), e );\n        }\n    }\n","realPath":"maven-compat/src/main/java/org/apache/maven/artifact/installer/DefaultArtifactInstaller.java","repoName":"maven","snippetEndLine":0,"snippetStartLine":0,"startLine":59,"status":"NB"}],"commitId":"ee5dd78bd1a0b96edf2cc53480b342bb74b9a173","commitMessage":"@@@MNG-4221: hide the artifact transformation classes\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@789088 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2009-06-28 19:16:34","modifiedFileCount":"4","status":"M","submitter":"Jason van Zyl"},{"authorTime":"2009-08-28 01:09:42","codes":[{"authorDate":"2009-06-28 19:16:34","commitOrder":3,"curCode":"    private ArtifactMetadata createMetadata( Artifact artifact )\n    {\n        Versioning versioning = new Versioning();\n        versioning.updateTimestamp();\n        versioning.addVersion( artifact.getVersion() );\n\n        if ( artifact.isRelease() )\n        {\n            versioning.setRelease( artifact.getVersion() );\n        }\n\n        return new ArtifactRepositoryMetadata( artifact, versioning );\n    }\n","date":"2009-06-28 19:16:34","endLine":99,"groupId":"2427","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"createMetadata","params":"(Artifactartifact)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-maven-10-0.7/blobInfo/CC_OUT/blobs/95/262b6e64634d727a920ccb1d45fb894ccbd3d0.src","preCode":"    private ArtifactMetadata createMetadata( Artifact artifact )\n    {\n        Versioning versioning = new Versioning();\n        versioning.updateTimestamp();\n        versioning.addVersion( artifact.getVersion() );\n\n        if ( artifact.isRelease() )\n        {\n            versioning.setRelease( artifact.getVersion() );\n        }\n\n        return new ArtifactRepositoryMetadata( artifact, versioning );\n    }\n","realPath":"maven-compat/src/main/java/org/apache/maven/repository/legacy/resolver/transform/ReleaseArtifactTransformation.java","repoName":"maven","snippetEndLine":0,"snippetStartLine":0,"startLine":87,"status":"N"},{"authorDate":"2009-08-28 01:09:42","commitOrder":3,"curCode":"    public void install( File source, Artifact artifact, ArtifactRepository localRepository )\n        throws ArtifactInstallationException\n    {\n        try\n        {\n            transformationManager.transformForInstall( artifact, localRepository );\n\n            String localPath = localRepository.pathOf( artifact );\n\n            \r\n            File destination = new File( localRepository.getBasedir(), localPath );\n            if ( !destination.getParentFile().exists() )\n            {\n                destination.getParentFile().mkdirs();\n            }\n\n            getLogger().info( \"Installing \" + source.getPath() + \" to \" + destination );\n\n            FileUtils.copyFileIfModified( source, destination );\n\n            \r\n            for ( ArtifactMetadata metadata : artifact.getMetadataList() )\n            {\n                repositoryMetadataManager.install( metadata, localRepository );\n            }\n            \r\n            \r\n            \r\n            \r\n        }\n        catch ( IOException e )\n        {\n            throw new ArtifactInstallationException( \"Error installing artifact: \" + e.getMessage(), e );\n        }\n        catch ( RepositoryMetadataInstallationException e )\n        {\n            throw new ArtifactInstallationException( \"Error installing artifact's metadata: \" + e.getMessage(), e );\n        }\n    }\n","date":"2009-08-28 01:09:42","endLine":99,"groupId":"4422","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"install","params":"(Filesource@Artifactartifact@ArtifactRepositorylocalRepository)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-maven-10-0.7/blobInfo/CC_OUT/blobs/42/e48a40cf8e12f6c9432de9859865202bf33c1d.src","preCode":"    public void install( File source, Artifact artifact, ArtifactRepository localRepository )\n        throws ArtifactInstallationException\n    {\n        try\n        {\n            transformationManager.transformForInstall( artifact, localRepository );\n\n            String localPath = localRepository.pathOf( artifact );\n\n            \r\n            File destination = new File( localRepository.getBasedir(), localPath );\n            if ( !destination.getParentFile().exists() )\n            {\n                destination.getParentFile().mkdirs();\n            }\n\n            getLogger().info( \"Installing \" + source.getPath() + \" to \" + destination );\n\n            FileUtils.copyFile( source, destination );\n\n            \r\n            for ( ArtifactMetadata metadata : artifact.getMetadataList() )\n            {\n                repositoryMetadataManager.install( metadata, localRepository );\n            }\n            \r\n            \r\n            \r\n            \r\n        }\n        catch ( IOException e )\n        {\n            throw new ArtifactInstallationException( \"Error installing artifact: \" + e.getMessage(), e );\n        }\n        catch ( RepositoryMetadataInstallationException e )\n        {\n            throw new ArtifactInstallationException( \"Error installing artifact's metadata: \" + e.getMessage(), e );\n        }\n    }\n","realPath":"maven-compat/src/main/java/org/apache/maven/artifact/installer/DefaultArtifactInstaller.java","repoName":"maven","snippetEndLine":0,"snippetStartLine":0,"startLine":61,"status":"M"}],"commitId":"7e24255ab4be3250c581bdd9a8a53ce05dba1968","commitMessage":"@@@[MARTIFACT-19] DefaultArtifactInstaller should only overwrite files if timestamp has changed\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@808537 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2009-08-28 01:09:42","modifiedFileCount":"1","status":"M","submitter":"Daniel Fabulich"},{"authorTime":"2009-10-21 22:19:17","codes":[{"authorDate":"2009-06-28 19:16:34","commitOrder":4,"curCode":"    private ArtifactMetadata createMetadata( Artifact artifact )\n    {\n        Versioning versioning = new Versioning();\n        versioning.updateTimestamp();\n        versioning.addVersion( artifact.getVersion() );\n\n        if ( artifact.isRelease() )\n        {\n            versioning.setRelease( artifact.getVersion() );\n        }\n\n        return new ArtifactRepositoryMetadata( artifact, versioning );\n    }\n","date":"2009-06-28 19:16:34","endLine":99,"groupId":"2427","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"createMetadata","params":"(Artifactartifact)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-maven-10-0.7/blobInfo/CC_OUT/blobs/95/262b6e64634d727a920ccb1d45fb894ccbd3d0.src","preCode":"    private ArtifactMetadata createMetadata( Artifact artifact )\n    {\n        Versioning versioning = new Versioning();\n        versioning.updateTimestamp();\n        versioning.addVersion( artifact.getVersion() );\n\n        if ( artifact.isRelease() )\n        {\n            versioning.setRelease( artifact.getVersion() );\n        }\n\n        return new ArtifactRepositoryMetadata( artifact, versioning );\n    }\n","realPath":"maven-compat/src/main/java/org/apache/maven/repository/legacy/resolver/transform/ReleaseArtifactTransformation.java","repoName":"maven","snippetEndLine":0,"snippetStartLine":0,"startLine":87,"status":"N"},{"authorDate":"2009-10-21 22:19:17","commitOrder":4,"curCode":"    public void install( File source, Artifact artifact, ArtifactRepository localRepository )\n        throws ArtifactInstallationException\n    {\n        try\n        {\n            transformationManager.transformForInstall( artifact, localRepository );\n\n            String localPath = localRepository.pathOf( artifact );\n\n            \r\n            File destination = new File( localRepository.getBasedir(), localPath );\n            if ( !destination.getParentFile().exists() )\n            {\n                destination.getParentFile().mkdirs();\n            }\n\n            getLogger().info( \"Installing \" + source.getPath() + \" to \" + destination );\n\n            FileUtils.copyFileIfModified( source, destination );\n\n            \r\n            for ( ArtifactMetadata metadata : artifact.getMetadataList() )\n            {\n                repositoryMetadataManager.install( metadata, localRepository );\n            }\n            \r\n            \r\n            \r\n            \r\n\n            if ( localRepositoryMaintainer != null )\n            {\n                LocalRepositoryMaintainerEvent event =\n                    new DefaultLocalRepositoryMaintainerEvent( artifact, destination );\n                localRepositoryMaintainer.artifactInstalled( event );\n            }\n        }\n        catch ( IOException e )\n        {\n            throw new ArtifactInstallationException( \"Error installing artifact: \" + e.getMessage(), e );\n        }\n        catch ( RepositoryMetadataInstallationException e )\n        {\n            throw new ArtifactInstallationException( \"Error installing artifact's metadata: \" + e.getMessage(), e );\n        }\n    }\n","date":"2009-10-21 22:19:17","endLine":112,"groupId":"4422","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"install","params":"(Filesource@Artifactartifact@ArtifactRepositorylocalRepository)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-maven-10-0.7/blobInfo/CC_OUT/blobs/05/129b7db70d606d1a12f100f985c51d95fae182.src","preCode":"    public void install( File source, Artifact artifact, ArtifactRepository localRepository )\n        throws ArtifactInstallationException\n    {\n        try\n        {\n            transformationManager.transformForInstall( artifact, localRepository );\n\n            String localPath = localRepository.pathOf( artifact );\n\n            \r\n            File destination = new File( localRepository.getBasedir(), localPath );\n            if ( !destination.getParentFile().exists() )\n            {\n                destination.getParentFile().mkdirs();\n            }\n\n            getLogger().info( \"Installing \" + source.getPath() + \" to \" + destination );\n\n            FileUtils.copyFileIfModified( source, destination );\n\n            \r\n            for ( ArtifactMetadata metadata : artifact.getMetadataList() )\n            {\n                repositoryMetadataManager.install( metadata, localRepository );\n            }\n            \r\n            \r\n            \r\n            \r\n        }\n        catch ( IOException e )\n        {\n            throw new ArtifactInstallationException( \"Error installing artifact: \" + e.getMessage(), e );\n        }\n        catch ( RepositoryMetadataInstallationException e )\n        {\n            throw new ArtifactInstallationException( \"Error installing artifact's metadata: \" + e.getMessage(), e );\n        }\n    }\n","realPath":"maven-compat/src/main/java/org/apache/maven/artifact/installer/DefaultArtifactInstaller.java","repoName":"maven","snippetEndLine":0,"snippetStartLine":0,"startLine":67,"status":"M"}],"commitId":"658b110eeec1ffce33c599839bb955cdb91e50f7","commitMessage":"@@@[MNG-4398] Provide an extension point to track artifact additions to the local repository\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/maven-3/trunk@828031 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2009-10-21 22:19:17","modifiedFileCount":"2","status":"M","submitter":"Benjamin Bentmann"},{"authorTime":"2009-10-26 22:03:49","codes":[{"authorDate":"2009-06-28 19:16:34","commitOrder":5,"curCode":"    private ArtifactMetadata createMetadata( Artifact artifact )\n    {\n        Versioning versioning = new Versioning();\n        versioning.updateTimestamp();\n        versioning.addVersion( artifact.getVersion() );\n\n        if ( artifact.isRelease() )\n        {\n            versioning.setRelease( artifact.getVersion() );\n        }\n\n        return new ArtifactRepositoryMetadata( artifact, versioning );\n    }\n","date":"2009-06-28 19:16:34","endLine":99,"groupId":"2427","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"createMetadata","params":"(Artifactartifact)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-maven-10-0.7/blobInfo/CC_OUT/blobs/95/262b6e64634d727a920ccb1d45fb894ccbd3d0.src","preCode":"    private ArtifactMetadata createMetadata( Artifact artifact )\n    {\n        Versioning versioning = new Versioning();\n        versioning.updateTimestamp();\n        versioning.addVersion( artifact.getVersion() );\n\n        if ( artifact.isRelease() )\n        {\n            versioning.setRelease( artifact.getVersion() );\n        }\n\n        return new ArtifactRepositoryMetadata( artifact, versioning );\n    }\n","realPath":"maven-compat/src/main/java/org/apache/maven/repository/legacy/resolver/transform/ReleaseArtifactTransformation.java","repoName":"maven","snippetEndLine":0,"snippetStartLine":0,"startLine":87,"status":"N"},{"authorDate":"2009-10-26 22:03:49","commitOrder":5,"curCode":"    public void install( File source, Artifact artifact, ArtifactRepository localRepository )\n        throws ArtifactInstallationException\n    {\n        try\n        {\n            transformationManager.transformForInstall( artifact, localRepository );\n\n            String localPath = localRepository.pathOf( artifact );\n\n            \r\n            File destination = new File( localRepository.getBasedir(), localPath );\n            if ( !destination.getParentFile().exists() )\n            {\n                destination.getParentFile().mkdirs();\n            }\n\n            getLogger().info( \"Installing \" + source.getPath() + \" to \" + destination );\n\n            FileUtils.copyFileIfModified( source, destination );\n\n            \r\n            for ( ArtifactMetadata metadata : artifact.getMetadataList() )\n            {\n                repositoryMetadataManager.install( metadata, localRepository );\n            }\n            \r\n            \r\n            \r\n            \r\n\n            if ( localRepositoryMaintainer != null )\n            {\n                LocalRepositoryMaintainerEvent event =\n                    new DefaultLocalRepositoryMaintainerEvent( localRepository, artifact, destination );\n                localRepositoryMaintainer.artifactInstalled( event );\n            }\n        }\n        catch ( IOException e )\n        {\n            throw new ArtifactInstallationException( \"Error installing artifact: \" + e.getMessage(), e );\n        }\n        catch ( RepositoryMetadataInstallationException e )\n        {\n            throw new ArtifactInstallationException( \"Error installing artifact's metadata: \" + e.getMessage(), e );\n        }\n    }\n","date":"2009-10-26 22:03:49","endLine":112,"groupId":"4422","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"install","params":"(Filesource@Artifactartifact@ArtifactRepositorylocalRepository)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-maven-10-0.7/blobInfo/CC_OUT/blobs/6a/d6180a401053178bd1f66a953871858c2b82ec.src","preCode":"    public void install( File source, Artifact artifact, ArtifactRepository localRepository )\n        throws ArtifactInstallationException\n    {\n        try\n        {\n            transformationManager.transformForInstall( artifact, localRepository );\n\n            String localPath = localRepository.pathOf( artifact );\n\n            \r\n            File destination = new File( localRepository.getBasedir(), localPath );\n            if ( !destination.getParentFile().exists() )\n            {\n                destination.getParentFile().mkdirs();\n            }\n\n            getLogger().info( \"Installing \" + source.getPath() + \" to \" + destination );\n\n            FileUtils.copyFileIfModified( source, destination );\n\n            \r\n            for ( ArtifactMetadata metadata : artifact.getMetadataList() )\n            {\n                repositoryMetadataManager.install( metadata, localRepository );\n            }\n            \r\n            \r\n            \r\n            \r\n\n            if ( localRepositoryMaintainer != null )\n            {\n                LocalRepositoryMaintainerEvent event =\n                    new DefaultLocalRepositoryMaintainerEvent( artifact, destination );\n                localRepositoryMaintainer.artifactInstalled( event );\n            }\n        }\n        catch ( IOException e )\n        {\n            throw new ArtifactInstallationException( \"Error installing artifact: \" + e.getMessage(), e );\n        }\n        catch ( RepositoryMetadataInstallationException e )\n        {\n            throw new ArtifactInstallationException( \"Error installing artifact's metadata: \" + e.getMessage(), e );\n        }\n    }\n","realPath":"maven-compat/src/main/java/org/apache/maven/artifact/installer/DefaultArtifactInstaller.java","repoName":"maven","snippetEndLine":0,"snippetStartLine":0,"startLine":67,"status":"M"}],"commitId":"6e7ef4a045f4109020f3b68050fa9893240efa0c","commitMessage":"@@@[MNG-4398] Provide an extension point to track artifact additions to the local repository\n\no Applied patch from Igor Fedorenko to actually associate events with the originating local repo\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/maven-3/trunk@829805 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2009-10-26 22:03:49","modifiedFileCount":"5","status":"M","submitter":"Benjamin Bentmann"},{"authorTime":"2009-12-28 07:26:54","codes":[{"authorDate":"2009-06-28 19:16:34","commitOrder":6,"curCode":"    private ArtifactMetadata createMetadata( Artifact artifact )\n    {\n        Versioning versioning = new Versioning();\n        versioning.updateTimestamp();\n        versioning.addVersion( artifact.getVersion() );\n\n        if ( artifact.isRelease() )\n        {\n            versioning.setRelease( artifact.getVersion() );\n        }\n\n        return new ArtifactRepositoryMetadata( artifact, versioning );\n    }\n","date":"2009-06-28 19:16:34","endLine":99,"groupId":"2427","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"createMetadata","params":"(Artifactartifact)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-maven-10-0.7/blobInfo/CC_OUT/blobs/95/262b6e64634d727a920ccb1d45fb894ccbd3d0.src","preCode":"    private ArtifactMetadata createMetadata( Artifact artifact )\n    {\n        Versioning versioning = new Versioning();\n        versioning.updateTimestamp();\n        versioning.addVersion( artifact.getVersion() );\n\n        if ( artifact.isRelease() )\n        {\n            versioning.setRelease( artifact.getVersion() );\n        }\n\n        return new ArtifactRepositoryMetadata( artifact, versioning );\n    }\n","realPath":"maven-compat/src/main/java/org/apache/maven/repository/legacy/resolver/transform/ReleaseArtifactTransformation.java","repoName":"maven","snippetEndLine":0,"snippetStartLine":0,"startLine":87,"status":"N"},{"authorDate":"2009-12-28 07:26:54","commitOrder":6,"curCode":"    public void install( File source, Artifact artifact, ArtifactRepository localRepository )\n        throws ArtifactInstallationException\n    {\n        try\n        {\n            transformationManager.transformForInstall( artifact, localRepository );\n\n            String localPath = localRepository.pathOf( artifact );\n\n            \r\n            File destination = new File( localRepository.getBasedir(), localPath );\n            if ( !destination.getParentFile().exists() )\n            {\n                destination.getParentFile().mkdirs();\n            }\n\n            getLogger().info( \"Installing \" + source.getPath() + \" to \" + destination );\n\n            boolean copy =\n                !destination.exists() || \"pom\".equals( artifact.getType() )\n                    || source.lastModified() != destination.lastModified() || source.length() != destination.length();\n\n            if ( copy )\n            {\n                FileUtils.copyFile( source, destination );\n                destination.setLastModified( source.lastModified() );\n            }\n            else\n            {\n                getLogger().debug( \"Skipped re-installation of \" + destination + \", seems unchanged\" );\n            }\n\n            \r\n            for ( ArtifactMetadata metadata : artifact.getMetadataList() )\n            {\n                repositoryMetadataManager.install( metadata, localRepository );\n            }\n            \r\n            \r\n            \r\n            \r\n\n            if ( localRepositoryMaintainer != null )\n            {\n                LocalRepositoryMaintainerEvent event =\n                    new DefaultLocalRepositoryMaintainerEvent( localRepository, artifact, destination );\n                localRepositoryMaintainer.artifactInstalled( event );\n            }\n        }\n        catch ( IOException e )\n        {\n            throw new ArtifactInstallationException( \"Error installing artifact: \" + e.getMessage(), e );\n        }\n        catch ( RepositoryMetadataInstallationException e )\n        {\n            throw new ArtifactInstallationException( \"Error installing artifact's metadata: \" + e.getMessage(), e );\n        }\n    }\n","date":"2009-12-28 07:26:54","endLine":124,"groupId":"0","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"install","params":"(Filesource@Artifactartifact@ArtifactRepositorylocalRepository)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-maven-10-0.7/blobInfo/CC_OUT/blobs/8f/16888b3bd096329beea9bf37d8da8228fd5787.src","preCode":"    public void install( File source, Artifact artifact, ArtifactRepository localRepository )\n        throws ArtifactInstallationException\n    {\n        try\n        {\n            transformationManager.transformForInstall( artifact, localRepository );\n\n            String localPath = localRepository.pathOf( artifact );\n\n            \r\n            File destination = new File( localRepository.getBasedir(), localPath );\n            if ( !destination.getParentFile().exists() )\n            {\n                destination.getParentFile().mkdirs();\n            }\n\n            getLogger().info( \"Installing \" + source.getPath() + \" to \" + destination );\n\n            FileUtils.copyFileIfModified( source, destination );\n\n            \r\n            for ( ArtifactMetadata metadata : artifact.getMetadataList() )\n            {\n                repositoryMetadataManager.install( metadata, localRepository );\n            }\n            \r\n            \r\n            \r\n            \r\n\n            if ( localRepositoryMaintainer != null )\n            {\n                LocalRepositoryMaintainerEvent event =\n                    new DefaultLocalRepositoryMaintainerEvent( localRepository, artifact, destination );\n                localRepositoryMaintainer.artifactInstalled( event );\n            }\n        }\n        catch ( IOException e )\n        {\n            throw new ArtifactInstallationException( \"Error installing artifact: \" + e.getMessage(), e );\n        }\n        catch ( RepositoryMetadataInstallationException e )\n        {\n            throw new ArtifactInstallationException( \"Error installing artifact's metadata: \" + e.getMessage(), e );\n        }\n    }\n","realPath":"maven-compat/src/main/java/org/apache/maven/artifact/installer/DefaultArtifactInstaller.java","repoName":"maven","snippetEndLine":0,"snippetStartLine":0,"startLine":67,"status":"M"}],"commitId":"9d137583dd35358ea473a30536a0eab4686150ca","commitMessage":"@@@[MNG-4368] DefaultArtifactInstaller should only overwrite files if timestamp has changed\n\no Revised to install upon any difference in file timestamp or length\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/maven-3/trunk@894114 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2009-12-28 07:26:54","modifiedFileCount":"1","status":"M","submitter":"Benjamin Bentmann"},{"authorTime":"2009-12-29 18:58:04","codes":[{"authorDate":"2009-06-28 19:16:34","commitOrder":7,"curCode":"    private ArtifactMetadata createMetadata( Artifact artifact )\n    {\n        Versioning versioning = new Versioning();\n        versioning.updateTimestamp();\n        versioning.addVersion( artifact.getVersion() );\n\n        if ( artifact.isRelease() )\n        {\n            versioning.setRelease( artifact.getVersion() );\n        }\n\n        return new ArtifactRepositoryMetadata( artifact, versioning );\n    }\n","date":"2009-06-28 19:16:34","endLine":99,"groupId":"2427","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"createMetadata","params":"(Artifactartifact)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-maven-10-0.7/blobInfo/CC_OUT/blobs/95/262b6e64634d727a920ccb1d45fb894ccbd3d0.src","preCode":"    private ArtifactMetadata createMetadata( Artifact artifact )\n    {\n        Versioning versioning = new Versioning();\n        versioning.updateTimestamp();\n        versioning.addVersion( artifact.getVersion() );\n\n        if ( artifact.isRelease() )\n        {\n            versioning.setRelease( artifact.getVersion() );\n        }\n\n        return new ArtifactRepositoryMetadata( artifact, versioning );\n    }\n","realPath":"maven-compat/src/main/java/org/apache/maven/repository/legacy/resolver/transform/ReleaseArtifactTransformation.java","repoName":"maven","snippetEndLine":0,"snippetStartLine":0,"startLine":87,"status":"N"},{"authorDate":"2009-12-29 18:58:04","commitOrder":7,"curCode":"    public void install( File source, Artifact artifact, ArtifactRepository localRepository )\n        throws ArtifactInstallationException\n    {\n        try\n        {\n            transformationManager.transformForInstall( artifact, localRepository );\n\n            String localPath = localRepository.pathOf( artifact );\n\n            \r\n            File destination = new File( localRepository.getBasedir(), localPath );\n            if ( !destination.getParentFile().exists() )\n            {\n                destination.getParentFile().mkdirs();\n            }\n\n            boolean copy =\n                !destination.exists() || \"pom\".equals( artifact.getType() )\n                    || source.lastModified() != destination.lastModified() || source.length() != destination.length();\n\n            if ( copy )\n            {\n                getLogger().info( \"Installing \" + source + \" to \" + destination );\n\n                FileUtils.copyFile( source, destination );\n                destination.setLastModified( source.lastModified() );\n            }\n            else\n            {\n                getLogger().info( \"Skipped re-installing \" + source + \" to \" + destination + \", seems unchanged\" );\n            }\n\n            \r\n            for ( ArtifactMetadata metadata : artifact.getMetadataList() )\n            {\n                repositoryMetadataManager.install( metadata, localRepository );\n            }\n            \r\n            \r\n            \r\n            \r\n\n            if ( localRepositoryMaintainer != null )\n            {\n                LocalRepositoryMaintainerEvent event =\n                    new DefaultLocalRepositoryMaintainerEvent( localRepository, artifact, destination );\n                localRepositoryMaintainer.artifactInstalled( event );\n            }\n        }\n        catch ( IOException e )\n        {\n            throw new ArtifactInstallationException( \"Error installing artifact: \" + e.getMessage(), e );\n        }\n        catch ( RepositoryMetadataInstallationException e )\n        {\n            throw new ArtifactInstallationException( \"Error installing artifact's metadata: \" + e.getMessage(), e );\n        }\n    }\n","date":"2009-12-29 18:58:04","endLine":124,"groupId":"55","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"install","params":"(Filesource@Artifactartifact@ArtifactRepositorylocalRepository)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-maven-10-0.7/blobInfo/CC_OUT/blobs/cd/67685e1e2d7c8918c066246c2f8912d223f113.src","preCode":"    public void install( File source, Artifact artifact, ArtifactRepository localRepository )\n        throws ArtifactInstallationException\n    {\n        try\n        {\n            transformationManager.transformForInstall( artifact, localRepository );\n\n            String localPath = localRepository.pathOf( artifact );\n\n            \r\n            File destination = new File( localRepository.getBasedir(), localPath );\n            if ( !destination.getParentFile().exists() )\n            {\n                destination.getParentFile().mkdirs();\n            }\n\n            getLogger().info( \"Installing \" + source.getPath() + \" to \" + destination );\n\n            boolean copy =\n                !destination.exists() || \"pom\".equals( artifact.getType() )\n                    || source.lastModified() != destination.lastModified() || source.length() != destination.length();\n\n            if ( copy )\n            {\n                FileUtils.copyFile( source, destination );\n                destination.setLastModified( source.lastModified() );\n            }\n            else\n            {\n                getLogger().debug( \"Skipped re-installation of \" + destination + \", seems unchanged\" );\n            }\n\n            \r\n            for ( ArtifactMetadata metadata : artifact.getMetadataList() )\n            {\n                repositoryMetadataManager.install( metadata, localRepository );\n            }\n            \r\n            \r\n            \r\n            \r\n\n            if ( localRepositoryMaintainer != null )\n            {\n                LocalRepositoryMaintainerEvent event =\n                    new DefaultLocalRepositoryMaintainerEvent( localRepository, artifact, destination );\n                localRepositoryMaintainer.artifactInstalled( event );\n            }\n        }\n        catch ( IOException e )\n        {\n            throw new ArtifactInstallationException( \"Error installing artifact: \" + e.getMessage(), e );\n        }\n        catch ( RepositoryMetadataInstallationException e )\n        {\n            throw new ArtifactInstallationException( \"Error installing artifact's metadata: \" + e.getMessage(), e );\n        }\n    }\n","realPath":"maven-compat/src/main/java/org/apache/maven/artifact/installer/DefaultArtifactInstaller.java","repoName":"maven","snippetEndLine":0,"snippetStartLine":0,"startLine":67,"status":"M"}],"commitId":"02e2e6664c0ec5e2b75da76a188fb9ffd5918a97","commitMessage":"@@@[MNG-4368] DefaultArtifactInstaller should only overwrite files if timestamp has changed\n\no Improved logging to make optimization visible to end-user\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/maven-3/trunk@894349 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2009-12-29 18:58:04","modifiedFileCount":"1","status":"M","submitter":"Benjamin Bentmann"},{"authorTime":"2010-08-25 06:46:07","codes":[{"authorDate":"2009-06-28 19:16:34","commitOrder":8,"curCode":"    private ArtifactMetadata createMetadata( Artifact artifact )\n    {\n        Versioning versioning = new Versioning();\n        versioning.updateTimestamp();\n        versioning.addVersion( artifact.getVersion() );\n\n        if ( artifact.isRelease() )\n        {\n            versioning.setRelease( artifact.getVersion() );\n        }\n\n        return new ArtifactRepositoryMetadata( artifact, versioning );\n    }\n","date":"2009-06-28 19:16:34","endLine":99,"groupId":"2427","id":13,"instanceNumber":1,"isCurCommit":0,"methodName":"createMetadata","params":"(Artifactartifact)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-maven-10-0.7/blobInfo/CC_OUT/blobs/95/262b6e64634d727a920ccb1d45fb894ccbd3d0.src","preCode":"    private ArtifactMetadata createMetadata( Artifact artifact )\n    {\n        Versioning versioning = new Versioning();\n        versioning.updateTimestamp();\n        versioning.addVersion( artifact.getVersion() );\n\n        if ( artifact.isRelease() )\n        {\n            versioning.setRelease( artifact.getVersion() );\n        }\n\n        return new ArtifactRepositoryMetadata( artifact, versioning );\n    }\n","realPath":"maven-compat/src/main/java/org/apache/maven/repository/legacy/resolver/transform/ReleaseArtifactTransformation.java","repoName":"maven","snippetEndLine":0,"snippetStartLine":0,"startLine":87,"status":"N"},{"authorDate":"2010-08-25 06:46:07","commitOrder":8,"curCode":"    public void install( File source, Artifact artifact, ArtifactRepository localRepository )\n        throws ArtifactInstallationException\n    {\n        DefaultRepositorySystemSession session =\n            new DefaultRepositorySystemSession( legacySupport.getRepositorySession() );\n        LocalRepository localRepo = new LocalRepository( localRepository.getBasedir() );\n        session.setLocalRepositoryManager( repoSystem.newLocalRepositoryManager( localRepo ) );\n\n        InstallRequest request = new InstallRequest();\n\n        org.sonatype.aether.artifact.Artifact mainArtifact = RepositoryUtils.toArtifact( artifact );\n        mainArtifact = mainArtifact.setFile( source );\n        request.addArtifact( mainArtifact );\n\n        for ( ArtifactMetadata metadata : artifact.getMetadataList() )\n        {\n            if ( metadata instanceof ProjectArtifactMetadata )\n            {\n                org.sonatype.aether.artifact.Artifact pomArtifact = new SubArtifact( mainArtifact, \"\", \"pom\" );\n                pomArtifact = pomArtifact.setFile( ( (ProjectArtifactMetadata) metadata ).getFile() );\n                request.addArtifact( pomArtifact );\n            }\n            else if ( metadata instanceof SnapshotArtifactRepositoryMetadata\n                || metadata instanceof ArtifactRepositoryMetadata )\n            {\n                \r\n            }\n            else\n            {\n                request.addMetadata( new MetadataBridge( metadata ) );\n            }\n        }\n\n        try\n        {\n            repoSystem.install( session, request );\n        }\n        catch ( InstallationException e )\n        {\n            throw new ArtifactInstallationException( e.getMessage(), e );\n        }\n\n        \r\n\r\n\n\n        if ( artifact.isSnapshot() )\n        {\n            Snapshot snapshot = new Snapshot();\n            snapshot.setLocalCopy( true );\n            artifact.addMetadata( new SnapshotArtifactRepositoryMetadata( artifact, snapshot ) );\n        }\n\n        Versioning versioning = new Versioning();\n        versioning.updateTimestamp();\n        versioning.addVersion( artifact.getBaseVersion() );\n        if ( artifact.isRelease() )\n        {\n            versioning.setRelease( artifact.getBaseVersion() );\n        }\n        artifact.addMetadata( new ArtifactRepositoryMetadata( artifact, versioning ) );\n    }\n","date":"2010-08-25 06:46:07","endLine":132,"groupId":"2427","id":14,"instanceNumber":2,"isCurCommit":0,"methodName":"install","params":"(Filesource@Artifactartifact@ArtifactRepositorylocalRepository)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-maven-10-0.7/blobInfo/CC_OUT/blobs/39/89e49d9fee8f367b97ab85da539cd943ff09ed.src","preCode":"    public void install( File source, Artifact artifact, ArtifactRepository localRepository )\n        throws ArtifactInstallationException\n    {\n        try\n        {\n            transformationManager.transformForInstall( artifact, localRepository );\n\n            String localPath = localRepository.pathOf( artifact );\n\n            \r\n            File destination = new File( localRepository.getBasedir(), localPath );\n            if ( !destination.getParentFile().exists() )\n            {\n                destination.getParentFile().mkdirs();\n            }\n\n            boolean copy =\n                !destination.exists() || \"pom\".equals( artifact.getType() )\n                    || source.lastModified() != destination.lastModified() || source.length() != destination.length();\n\n            if ( copy )\n            {\n                getLogger().info( \"Installing \" + source + \" to \" + destination );\n\n                FileUtils.copyFile( source, destination );\n                destination.setLastModified( source.lastModified() );\n            }\n            else\n            {\n                getLogger().info( \"Skipped re-installing \" + source + \" to \" + destination + \", seems unchanged\" );\n            }\n\n            \r\n            for ( ArtifactMetadata metadata : artifact.getMetadataList() )\n            {\n                repositoryMetadataManager.install( metadata, localRepository );\n            }\n            \r\n            \r\n            \r\n            \r\n\n            if ( localRepositoryMaintainer != null )\n            {\n                LocalRepositoryMaintainerEvent event =\n                    new DefaultLocalRepositoryMaintainerEvent( localRepository, artifact, destination );\n                localRepositoryMaintainer.artifactInstalled( event );\n            }\n        }\n        catch ( IOException e )\n        {\n            throw new ArtifactInstallationException( \"Error installing artifact: \" + e.getMessage(), e );\n        }\n        catch ( RepositoryMetadataInstallationException e )\n        {\n            throw new ArtifactInstallationException( \"Error installing artifact's metadata: \" + e.getMessage(), e );\n        }\n    }\n","realPath":"maven-compat/src/main/java/org/apache/maven/artifact/installer/DefaultArtifactInstaller.java","repoName":"maven","snippetEndLine":0,"snippetStartLine":0,"startLine":71,"status":"M"}],"commitId":"6c37a89744149e68f198429fb7eac70fe1707360","commitMessage":"@@@[MNG-4756] Aether integration\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/maven-3/trunk@988749 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2010-08-25 06:46:07","modifiedFileCount":"102","status":"M","submitter":"Benjamin Bentmann"},{"authorTime":"2010-09-09 06:40:23","codes":[{"authorDate":"2009-06-28 19:16:34","commitOrder":9,"curCode":"    private ArtifactMetadata createMetadata( Artifact artifact )\n    {\n        Versioning versioning = new Versioning();\n        versioning.updateTimestamp();\n        versioning.addVersion( artifact.getVersion() );\n\n        if ( artifact.isRelease() )\n        {\n            versioning.setRelease( artifact.getVersion() );\n        }\n\n        return new ArtifactRepositoryMetadata( artifact, versioning );\n    }\n","date":"2009-06-28 19:16:34","endLine":99,"groupId":"2427","id":15,"instanceNumber":1,"isCurCommit":0,"methodName":"createMetadata","params":"(Artifactartifact)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-maven-10-0.7/blobInfo/CC_OUT/blobs/95/262b6e64634d727a920ccb1d45fb894ccbd3d0.src","preCode":"    private ArtifactMetadata createMetadata( Artifact artifact )\n    {\n        Versioning versioning = new Versioning();\n        versioning.updateTimestamp();\n        versioning.addVersion( artifact.getVersion() );\n\n        if ( artifact.isRelease() )\n        {\n            versioning.setRelease( artifact.getVersion() );\n        }\n\n        return new ArtifactRepositoryMetadata( artifact, versioning );\n    }\n","realPath":"maven-compat/src/main/java/org/apache/maven/repository/legacy/resolver/transform/ReleaseArtifactTransformation.java","repoName":"maven","snippetEndLine":0,"snippetStartLine":0,"startLine":87,"status":"N"},{"authorDate":"2010-09-09 06:40:23","commitOrder":9,"curCode":"    public void install( File source, Artifact artifact, ArtifactRepository localRepository )\n        throws ArtifactInstallationException\n    {\n        DefaultRepositorySystemSession session =\n            new DefaultRepositorySystemSession( legacySupport.getRepositorySession() );\n        session.setLocalRepositoryManager( LegacyLocalRepositoryManager.wrap( localRepository, repoSystem ) );\n\n        InstallRequest request = new InstallRequest();\n\n        org.sonatype.aether.artifact.Artifact mainArtifact = RepositoryUtils.toArtifact( artifact );\n        mainArtifact = mainArtifact.setFile( source );\n        request.addArtifact( mainArtifact );\n\n        for ( ArtifactMetadata metadata : artifact.getMetadataList() )\n        {\n            if ( metadata instanceof ProjectArtifactMetadata )\n            {\n                org.sonatype.aether.artifact.Artifact pomArtifact = new SubArtifact( mainArtifact, \"\", \"pom\" );\n                pomArtifact = pomArtifact.setFile( ( (ProjectArtifactMetadata) metadata ).getFile() );\n                request.addArtifact( pomArtifact );\n            }\n            else if ( metadata instanceof SnapshotArtifactRepositoryMetadata\n                || metadata instanceof ArtifactRepositoryMetadata )\n            {\n                \r\n            }\n            else\n            {\n                request.addMetadata( new MetadataBridge( metadata ) );\n            }\n        }\n\n        try\n        {\n            repoSystem.install( session, request );\n        }\n        catch ( InstallationException e )\n        {\n            throw new ArtifactInstallationException( e.getMessage(), e );\n        }\n\n        \r\n\r\n\n\n        if ( artifact.isSnapshot() )\n        {\n            Snapshot snapshot = new Snapshot();\n            snapshot.setLocalCopy( true );\n            artifact.addMetadata( new SnapshotArtifactRepositoryMetadata( artifact, snapshot ) );\n        }\n\n        Versioning versioning = new Versioning();\n        versioning.updateTimestamp();\n        versioning.addVersion( artifact.getBaseVersion() );\n        if ( artifact.isRelease() )\n        {\n            versioning.setRelease( artifact.getBaseVersion() );\n        }\n        artifact.addMetadata( new ArtifactRepositoryMetadata( artifact, versioning ) );\n    }\n","date":"2010-09-09 06:40:23","endLine":132,"groupId":"2427","id":16,"instanceNumber":2,"isCurCommit":0,"methodName":"install","params":"(Filesource@Artifactartifact@ArtifactRepositorylocalRepository)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-maven-10-0.7/blobInfo/CC_OUT/blobs/c1/658a269eb74b18c100ae1bcad8135188623b21.src","preCode":"    public void install( File source, Artifact artifact, ArtifactRepository localRepository )\n        throws ArtifactInstallationException\n    {\n        DefaultRepositorySystemSession session =\n            new DefaultRepositorySystemSession( legacySupport.getRepositorySession() );\n        LocalRepository localRepo = new LocalRepository( localRepository.getBasedir() );\n        session.setLocalRepositoryManager( repoSystem.newLocalRepositoryManager( localRepo ) );\n\n        InstallRequest request = new InstallRequest();\n\n        org.sonatype.aether.artifact.Artifact mainArtifact = RepositoryUtils.toArtifact( artifact );\n        mainArtifact = mainArtifact.setFile( source );\n        request.addArtifact( mainArtifact );\n\n        for ( ArtifactMetadata metadata : artifact.getMetadataList() )\n        {\n            if ( metadata instanceof ProjectArtifactMetadata )\n            {\n                org.sonatype.aether.artifact.Artifact pomArtifact = new SubArtifact( mainArtifact, \"\", \"pom\" );\n                pomArtifact = pomArtifact.setFile( ( (ProjectArtifactMetadata) metadata ).getFile() );\n                request.addArtifact( pomArtifact );\n            }\n            else if ( metadata instanceof SnapshotArtifactRepositoryMetadata\n                || metadata instanceof ArtifactRepositoryMetadata )\n            {\n                \r\n            }\n            else\n            {\n                request.addMetadata( new MetadataBridge( metadata ) );\n            }\n        }\n\n        try\n        {\n            repoSystem.install( session, request );\n        }\n        catch ( InstallationException e )\n        {\n            throw new ArtifactInstallationException( e.getMessage(), e );\n        }\n\n        \r\n\r\n\n\n        if ( artifact.isSnapshot() )\n        {\n            Snapshot snapshot = new Snapshot();\n            snapshot.setLocalCopy( true );\n            artifact.addMetadata( new SnapshotArtifactRepositoryMetadata( artifact, snapshot ) );\n        }\n\n        Versioning versioning = new Versioning();\n        versioning.updateTimestamp();\n        versioning.addVersion( artifact.getBaseVersion() );\n        if ( artifact.isRelease() )\n        {\n            versioning.setRelease( artifact.getBaseVersion() );\n        }\n        artifact.addMetadata( new ArtifactRepositoryMetadata( artifact, versioning ) );\n    }\n","realPath":"maven-compat/src/main/java/org/apache/maven/artifact/installer/DefaultArtifactInstaller.java","repoName":"maven","snippetEndLine":0,"snippetStartLine":0,"startLine":72,"status":"M"}],"commitId":"ee07bb36d559be79d7134b930d9c3c1dc42df31f","commitMessage":"@@@[MNG-4788] [regression] Appassembler Maven Plugin doesn't work like as it should\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/maven-3/trunk@995272 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2010-09-09 06:40:23","modifiedFileCount":"4","status":"M","submitter":"Benjamin Bentmann"},{"authorTime":"2011-02-24 04:25:29","codes":[{"authorDate":"2009-06-28 19:16:34","commitOrder":10,"curCode":"    private ArtifactMetadata createMetadata( Artifact artifact )\n    {\n        Versioning versioning = new Versioning();\n        versioning.updateTimestamp();\n        versioning.addVersion( artifact.getVersion() );\n\n        if ( artifact.isRelease() )\n        {\n            versioning.setRelease( artifact.getVersion() );\n        }\n\n        return new ArtifactRepositoryMetadata( artifact, versioning );\n    }\n","date":"2009-06-28 19:16:34","endLine":99,"groupId":"2427","id":17,"instanceNumber":1,"isCurCommit":0,"methodName":"createMetadata","params":"(Artifactartifact)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-maven-10-0.7/blobInfo/CC_OUT/blobs/95/262b6e64634d727a920ccb1d45fb894ccbd3d0.src","preCode":"    private ArtifactMetadata createMetadata( Artifact artifact )\n    {\n        Versioning versioning = new Versioning();\n        versioning.updateTimestamp();\n        versioning.addVersion( artifact.getVersion() );\n\n        if ( artifact.isRelease() )\n        {\n            versioning.setRelease( artifact.getVersion() );\n        }\n\n        return new ArtifactRepositoryMetadata( artifact, versioning );\n    }\n","realPath":"maven-compat/src/main/java/org/apache/maven/repository/legacy/resolver/transform/ReleaseArtifactTransformation.java","repoName":"maven","snippetEndLine":0,"snippetStartLine":0,"startLine":87,"status":"N"},{"authorDate":"2011-02-24 04:25:29","commitOrder":10,"curCode":"    public void install( File source, Artifact artifact, ArtifactRepository localRepository )\n        throws ArtifactInstallationException\n    {\n        RepositorySystemSession session =\n            LegacyLocalRepositoryManager.overlay( localRepository, legacySupport.getRepositorySession(), repoSystem );\n\n        InstallRequest request = new InstallRequest();\n\n        org.sonatype.aether.artifact.Artifact mainArtifact = RepositoryUtils.toArtifact( artifact );\n        mainArtifact = mainArtifact.setFile( source );\n        request.addArtifact( mainArtifact );\n\n        for ( ArtifactMetadata metadata : artifact.getMetadataList() )\n        {\n            if ( metadata instanceof ProjectArtifactMetadata )\n            {\n                org.sonatype.aether.artifact.Artifact pomArtifact = new SubArtifact( mainArtifact, \"\", \"pom\" );\n                pomArtifact = pomArtifact.setFile( ( (ProjectArtifactMetadata) metadata ).getFile() );\n                request.addArtifact( pomArtifact );\n            }\n            else if ( metadata instanceof SnapshotArtifactRepositoryMetadata\n                || metadata instanceof ArtifactRepositoryMetadata )\n            {\n                \r\n            }\n            else\n            {\n                request.addMetadata( new MetadataBridge( metadata ) );\n            }\n        }\n\n        try\n        {\n            repoSystem.install( session, request );\n        }\n        catch ( InstallationException e )\n        {\n            throw new ArtifactInstallationException( e.getMessage(), e );\n        }\n\n        \r\n\r\n\n\n        if ( artifact.isSnapshot() )\n        {\n            Snapshot snapshot = new Snapshot();\n            snapshot.setLocalCopy( true );\n            artifact.addMetadata( new SnapshotArtifactRepositoryMetadata( artifact, snapshot ) );\n        }\n\n        Versioning versioning = new Versioning();\n        versioning.updateTimestamp();\n        versioning.addVersion( artifact.getBaseVersion() );\n        if ( artifact.isRelease() )\n        {\n            versioning.setRelease( artifact.getBaseVersion() );\n        }\n        artifact.addMetadata( new ArtifactRepositoryMetadata( artifact, versioning ) );\n    }\n","date":"2011-02-24 04:25:29","endLine":130,"groupId":"2427","id":18,"instanceNumber":2,"isCurCommit":0,"methodName":"install","params":"(Filesource@Artifactartifact@ArtifactRepositorylocalRepository)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-maven-10-0.7/blobInfo/CC_OUT/blobs/c8/2770b960182a27b4686f1251bfcddb0639f8ee.src","preCode":"    public void install( File source, Artifact artifact, ArtifactRepository localRepository )\n        throws ArtifactInstallationException\n    {\n        DefaultRepositorySystemSession session =\n            new DefaultRepositorySystemSession( legacySupport.getRepositorySession() );\n        session.setLocalRepositoryManager( LegacyLocalRepositoryManager.wrap( localRepository, repoSystem ) );\n\n        InstallRequest request = new InstallRequest();\n\n        org.sonatype.aether.artifact.Artifact mainArtifact = RepositoryUtils.toArtifact( artifact );\n        mainArtifact = mainArtifact.setFile( source );\n        request.addArtifact( mainArtifact );\n\n        for ( ArtifactMetadata metadata : artifact.getMetadataList() )\n        {\n            if ( metadata instanceof ProjectArtifactMetadata )\n            {\n                org.sonatype.aether.artifact.Artifact pomArtifact = new SubArtifact( mainArtifact, \"\", \"pom\" );\n                pomArtifact = pomArtifact.setFile( ( (ProjectArtifactMetadata) metadata ).getFile() );\n                request.addArtifact( pomArtifact );\n            }\n            else if ( metadata instanceof SnapshotArtifactRepositoryMetadata\n                || metadata instanceof ArtifactRepositoryMetadata )\n            {\n                \r\n            }\n            else\n            {\n                request.addMetadata( new MetadataBridge( metadata ) );\n            }\n        }\n\n        try\n        {\n            repoSystem.install( session, request );\n        }\n        catch ( InstallationException e )\n        {\n            throw new ArtifactInstallationException( e.getMessage(), e );\n        }\n\n        \r\n\r\n\n\n        if ( artifact.isSnapshot() )\n        {\n            Snapshot snapshot = new Snapshot();\n            snapshot.setLocalCopy( true );\n            artifact.addMetadata( new SnapshotArtifactRepositoryMetadata( artifact, snapshot ) );\n        }\n\n        Versioning versioning = new Versioning();\n        versioning.updateTimestamp();\n        versioning.addVersion( artifact.getBaseVersion() );\n        if ( artifact.isRelease() )\n        {\n            versioning.setRelease( artifact.getBaseVersion() );\n        }\n        artifact.addMetadata( new ArtifactRepositoryMetadata( artifact, versioning ) );\n    }\n","realPath":"maven-compat/src/main/java/org/apache/maven/artifact/installer/DefaultArtifactInstaller.java","repoName":"maven","snippetEndLine":0,"snippetStartLine":0,"startLine":71,"status":"M"}],"commitId":"ed12e0a541096523449996195663d0762fff2e05","commitMessage":"@@@[MNG-4990] RepositorySystem#resolve(request) uses two different local repositories\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/maven-3/trunk@1073928 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2011-02-24 04:25:29","modifiedFileCount":"4","status":"M","submitter":"Benjamin Bentmann"},{"authorTime":"2011-02-25 00:06:26","codes":[{"authorDate":"2009-06-28 19:16:34","commitOrder":11,"curCode":"    private ArtifactMetadata createMetadata( Artifact artifact )\n    {\n        Versioning versioning = new Versioning();\n        versioning.updateTimestamp();\n        versioning.addVersion( artifact.getVersion() );\n\n        if ( artifact.isRelease() )\n        {\n            versioning.setRelease( artifact.getVersion() );\n        }\n\n        return new ArtifactRepositoryMetadata( artifact, versioning );\n    }\n","date":"2009-06-28 19:16:34","endLine":99,"groupId":"2427","id":19,"instanceNumber":1,"isCurCommit":0,"methodName":"createMetadata","params":"(Artifactartifact)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-maven-10-0.7/blobInfo/CC_OUT/blobs/95/262b6e64634d727a920ccb1d45fb894ccbd3d0.src","preCode":"    private ArtifactMetadata createMetadata( Artifact artifact )\n    {\n        Versioning versioning = new Versioning();\n        versioning.updateTimestamp();\n        versioning.addVersion( artifact.getVersion() );\n\n        if ( artifact.isRelease() )\n        {\n            versioning.setRelease( artifact.getVersion() );\n        }\n\n        return new ArtifactRepositoryMetadata( artifact, versioning );\n    }\n","realPath":"maven-compat/src/main/java/org/apache/maven/repository/legacy/resolver/transform/ReleaseArtifactTransformation.java","repoName":"maven","snippetEndLine":0,"snippetStartLine":0,"startLine":87,"status":"N"},{"authorDate":"2011-02-25 00:06:26","commitOrder":11,"curCode":"    public void install( File source, Artifact artifact, ArtifactRepository localRepository )\n        throws ArtifactInstallationException\n    {\n        RepositorySystemSession session =\n            LegacyLocalRepositoryManager.overlay( localRepository, legacySupport.getRepositorySession(), repoSystem );\n\n        InstallRequest request = new InstallRequest();\n\n        request.setTrace( DefaultRequestTrace.newChild( null, legacySupport.getSession().getCurrentProject() ) );\n\n        org.sonatype.aether.artifact.Artifact mainArtifact = RepositoryUtils.toArtifact( artifact );\n        mainArtifact = mainArtifact.setFile( source );\n        request.addArtifact( mainArtifact );\n\n        for ( ArtifactMetadata metadata : artifact.getMetadataList() )\n        {\n            if ( metadata instanceof ProjectArtifactMetadata )\n            {\n                org.sonatype.aether.artifact.Artifact pomArtifact = new SubArtifact( mainArtifact, \"\", \"pom\" );\n                pomArtifact = pomArtifact.setFile( ( (ProjectArtifactMetadata) metadata ).getFile() );\n                request.addArtifact( pomArtifact );\n            }\n            else if ( metadata instanceof SnapshotArtifactRepositoryMetadata\n                || metadata instanceof ArtifactRepositoryMetadata )\n            {\n                \r\n            }\n            else\n            {\n                request.addMetadata( new MetadataBridge( metadata ) );\n            }\n        }\n\n        try\n        {\n            repoSystem.install( session, request );\n        }\n        catch ( InstallationException e )\n        {\n            throw new ArtifactInstallationException( e.getMessage(), e );\n        }\n\n        \r\n\r\n\n\n        if ( artifact.isSnapshot() )\n        {\n            Snapshot snapshot = new Snapshot();\n            snapshot.setLocalCopy( true );\n            artifact.addMetadata( new SnapshotArtifactRepositoryMetadata( artifact, snapshot ) );\n        }\n\n        Versioning versioning = new Versioning();\n        versioning.updateTimestamp();\n        versioning.addVersion( artifact.getBaseVersion() );\n        if ( artifact.isRelease() )\n        {\n            versioning.setRelease( artifact.getBaseVersion() );\n        }\n        artifact.addMetadata( new ArtifactRepositoryMetadata( artifact, versioning ) );\n    }\n","date":"2011-02-25 00:06:26","endLine":133,"groupId":"2427","id":20,"instanceNumber":2,"isCurCommit":0,"methodName":"install","params":"(Filesource@Artifactartifact@ArtifactRepositorylocalRepository)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-maven-10-0.7/blobInfo/CC_OUT/blobs/d6/8a65c24d61890f95913efbf0b70a0776db71bf.src","preCode":"    public void install( File source, Artifact artifact, ArtifactRepository localRepository )\n        throws ArtifactInstallationException\n    {\n        RepositorySystemSession session =\n            LegacyLocalRepositoryManager.overlay( localRepository, legacySupport.getRepositorySession(), repoSystem );\n\n        InstallRequest request = new InstallRequest();\n\n        org.sonatype.aether.artifact.Artifact mainArtifact = RepositoryUtils.toArtifact( artifact );\n        mainArtifact = mainArtifact.setFile( source );\n        request.addArtifact( mainArtifact );\n\n        for ( ArtifactMetadata metadata : artifact.getMetadataList() )\n        {\n            if ( metadata instanceof ProjectArtifactMetadata )\n            {\n                org.sonatype.aether.artifact.Artifact pomArtifact = new SubArtifact( mainArtifact, \"\", \"pom\" );\n                pomArtifact = pomArtifact.setFile( ( (ProjectArtifactMetadata) metadata ).getFile() );\n                request.addArtifact( pomArtifact );\n            }\n            else if ( metadata instanceof SnapshotArtifactRepositoryMetadata\n                || metadata instanceof ArtifactRepositoryMetadata )\n            {\n                \r\n            }\n            else\n            {\n                request.addMetadata( new MetadataBridge( metadata ) );\n            }\n        }\n\n        try\n        {\n            repoSystem.install( session, request );\n        }\n        catch ( InstallationException e )\n        {\n            throw new ArtifactInstallationException( e.getMessage(), e );\n        }\n\n        \r\n\r\n\n\n        if ( artifact.isSnapshot() )\n        {\n            Snapshot snapshot = new Snapshot();\n            snapshot.setLocalCopy( true );\n            artifact.addMetadata( new SnapshotArtifactRepositoryMetadata( artifact, snapshot ) );\n        }\n\n        Versioning versioning = new Versioning();\n        versioning.updateTimestamp();\n        versioning.addVersion( artifact.getBaseVersion() );\n        if ( artifact.isRelease() )\n        {\n            versioning.setRelease( artifact.getBaseVersion() );\n        }\n        artifact.addMetadata( new ArtifactRepositoryMetadata( artifact, versioning ) );\n    }\n","realPath":"maven-compat/src/main/java/org/apache/maven/artifact/installer/DefaultArtifactInstaller.java","repoName":"maven","snippetEndLine":0,"snippetStartLine":0,"startLine":72,"status":"M"}],"commitId":"3c37fb7071e10f933c4a103dd263c05b761782d7","commitMessage":"@@@o Enabled request tracing for repository events to provide more context for event spies\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/maven-3/trunk@1074195 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2011-02-25 00:06:26","modifiedFileCount":"12","status":"M","submitter":"Benjamin Bentmann"},{"authorTime":"2013-03-15 04:03:31","codes":[{"authorDate":"2009-06-28 19:16:34","commitOrder":12,"curCode":"    private ArtifactMetadata createMetadata( Artifact artifact )\n    {\n        Versioning versioning = new Versioning();\n        versioning.updateTimestamp();\n        versioning.addVersion( artifact.getVersion() );\n\n        if ( artifact.isRelease() )\n        {\n            versioning.setRelease( artifact.getVersion() );\n        }\n\n        return new ArtifactRepositoryMetadata( artifact, versioning );\n    }\n","date":"2009-06-28 19:16:34","endLine":99,"groupId":"10297","id":21,"instanceNumber":1,"isCurCommit":0,"methodName":"createMetadata","params":"(Artifactartifact)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-maven-10-0.7/blobInfo/CC_OUT/blobs/95/262b6e64634d727a920ccb1d45fb894ccbd3d0.src","preCode":"    private ArtifactMetadata createMetadata( Artifact artifact )\n    {\n        Versioning versioning = new Versioning();\n        versioning.updateTimestamp();\n        versioning.addVersion( artifact.getVersion() );\n\n        if ( artifact.isRelease() )\n        {\n            versioning.setRelease( artifact.getVersion() );\n        }\n\n        return new ArtifactRepositoryMetadata( artifact, versioning );\n    }\n","realPath":"maven-compat/src/main/java/org/apache/maven/repository/legacy/resolver/transform/ReleaseArtifactTransformation.java","repoName":"maven","snippetEndLine":0,"snippetStartLine":0,"startLine":87,"status":"N"},{"authorDate":"2013-03-15 04:03:31","commitOrder":12,"curCode":"    public void install( File source, Artifact artifact, ArtifactRepository localRepository )\n        throws ArtifactInstallationException\n    {\n        RepositorySystemSession session =\n            LegacyLocalRepositoryManager.overlay( localRepository, legacySupport.getRepositorySession(), repoSystem );\n\n        InstallRequest request = new InstallRequest();\n\n        request.setTrace( RequestTrace.newChild( null, legacySupport.getSession().getCurrentProject() ) );\n\n        org.eclipse.aether.artifact.Artifact mainArtifact = RepositoryUtils.toArtifact( artifact );\n        mainArtifact = mainArtifact.setFile( source );\n        request.addArtifact( mainArtifact );\n\n        for ( ArtifactMetadata metadata : artifact.getMetadataList() )\n        {\n            if ( metadata instanceof ProjectArtifactMetadata )\n            {\n                org.eclipse.aether.artifact.Artifact pomArtifact = new SubArtifact( mainArtifact, \"\", \"pom\" );\n                pomArtifact = pomArtifact.setFile( ( (ProjectArtifactMetadata) metadata ).getFile() );\n                request.addArtifact( pomArtifact );\n            }\n            else if ( metadata instanceof SnapshotArtifactRepositoryMetadata\n                || metadata instanceof ArtifactRepositoryMetadata )\n            {\n                \r\n            }\n            else\n            {\n                request.addMetadata( new MetadataBridge( metadata ) );\n            }\n        }\n\n        try\n        {\n            repoSystem.install( session, request );\n        }\n        catch ( InstallationException e )\n        {\n            throw new ArtifactInstallationException( e.getMessage(), e );\n        }\n\n        \r\n\r\n\n\n        if ( artifact.isSnapshot() )\n        {\n            Snapshot snapshot = new Snapshot();\n            snapshot.setLocalCopy( true );\n            artifact.addMetadata( new SnapshotArtifactRepositoryMetadata( artifact, snapshot ) );\n        }\n\n        Versioning versioning = new Versioning();\n        versioning.updateTimestamp();\n        versioning.addVersion( artifact.getBaseVersion() );\n        if ( artifact.isRelease() )\n        {\n            versioning.setRelease( artifact.getBaseVersion() );\n        }\n        artifact.addMetadata( new ArtifactRepositoryMetadata( artifact, versioning ) );\n    }\n","date":"2013-03-15 04:03:31","endLine":133,"groupId":"10297","id":22,"instanceNumber":2,"isCurCommit":0,"methodName":"install","params":"(Filesource@Artifactartifact@ArtifactRepositorylocalRepository)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-maven-10-0.7/blobInfo/CC_OUT/blobs/aa/924e8b7a5874ba6f6a517c0dee2ea0c2d3485e.src","preCode":"    public void install( File source, Artifact artifact, ArtifactRepository localRepository )\n        throws ArtifactInstallationException\n    {\n        RepositorySystemSession session =\n            LegacyLocalRepositoryManager.overlay( localRepository, legacySupport.getRepositorySession(), repoSystem );\n\n        InstallRequest request = new InstallRequest();\n\n        request.setTrace( DefaultRequestTrace.newChild( null, legacySupport.getSession().getCurrentProject() ) );\n\n        org.sonatype.aether.artifact.Artifact mainArtifact = RepositoryUtils.toArtifact( artifact );\n        mainArtifact = mainArtifact.setFile( source );\n        request.addArtifact( mainArtifact );\n\n        for ( ArtifactMetadata metadata : artifact.getMetadataList() )\n        {\n            if ( metadata instanceof ProjectArtifactMetadata )\n            {\n                org.sonatype.aether.artifact.Artifact pomArtifact = new SubArtifact( mainArtifact, \"\", \"pom\" );\n                pomArtifact = pomArtifact.setFile( ( (ProjectArtifactMetadata) metadata ).getFile() );\n                request.addArtifact( pomArtifact );\n            }\n            else if ( metadata instanceof SnapshotArtifactRepositoryMetadata\n                || metadata instanceof ArtifactRepositoryMetadata )\n            {\n                \r\n            }\n            else\n            {\n                request.addMetadata( new MetadataBridge( metadata ) );\n            }\n        }\n\n        try\n        {\n            repoSystem.install( session, request );\n        }\n        catch ( InstallationException e )\n        {\n            throw new ArtifactInstallationException( e.getMessage(), e );\n        }\n\n        \r\n\r\n\n\n        if ( artifact.isSnapshot() )\n        {\n            Snapshot snapshot = new Snapshot();\n            snapshot.setLocalCopy( true );\n            artifact.addMetadata( new SnapshotArtifactRepositoryMetadata( artifact, snapshot ) );\n        }\n\n        Versioning versioning = new Versioning();\n        versioning.updateTimestamp();\n        versioning.addVersion( artifact.getBaseVersion() );\n        if ( artifact.isRelease() )\n        {\n            versioning.setRelease( artifact.getBaseVersion() );\n        }\n        artifact.addMetadata( new ArtifactRepositoryMetadata( artifact, versioning ) );\n    }\n","realPath":"maven-compat/src/main/java/org/apache/maven/artifact/installer/DefaultArtifactInstaller.java","repoName":"maven","snippetEndLine":0,"snippetStartLine":0,"startLine":72,"status":"M"}],"commitId":"ebf2e4ddeaee2c7634a66b7c08bf4bf197768896","commitMessage":"@@@Merge branch 'eclipse-aether' of github.com:tesla/tesla-build into eclipse-aether\n\nConflicts:\n\t.gitignore\n\tpom.xml\n","date":"2013-03-15 04:03:31","modifiedFileCount":"110","status":"M","submitter":"Jason van Zyl"}]
