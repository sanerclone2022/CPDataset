[{"authorTime":"2009-09-18 17:48:49","codes":[{"authorDate":"2009-09-18 17:48:49","commitOrder":2,"curCode":"    public boolean isUpdateRequired( Artifact artifact, ArtifactRepository repository )\n    {\n        File file = artifact.getFile();\n\n        ArtifactRepositoryPolicy policy = artifact.isSnapshot() ? repository.getSnapshots() : repository.getReleases();\n\n        if ( !policy.isEnabled() )\n        {\n            if ( getLogger().isDebugEnabled() )\n            {\n                getLogger().debug(\n                                   \"Skipping update check for \" + artifact + \" (\" + file + \") from \"\n                                       + repository.getId() + \" (\" + repository.getUrl() + \")\" );\n            }\n\n            return false;\n        }\n\n        if ( getLogger().isDebugEnabled() )\n        {\n            getLogger().debug(\n                               \"Determining update check for \" + artifact + \" (\" + file + \") from \"\n                                   + repository.getId() + \" (\" + repository.getUrl() + \")\" );\n        }\n\n        if ( file == null )\n        {\n            \r\n            return true;\n        }\n\n        Date lastCheckDate;\n\n        if ( file.exists() )\n        {\n            lastCheckDate = new Date ( file.lastModified() );\n        }\n        else\n        {\n            File touchfile = getTouchfile( artifact );\n            lastCheckDate = readLastUpdated( touchfile, getRepositoryKey( repository ) );\n        }\n\n        return ( lastCheckDate == null ) || policy.checkOutOfDate( lastCheckDate );\n    }\n","date":"2009-09-18 17:48:49","endLine":106,"groupId":"2616","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"isUpdateRequired","params":"(Artifactartifact@ArtifactRepositoryrepository)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-maven-10-0.7/blobInfo/CC_OUT/blobs/9f/ecd1f0451e9fe451ba8ae45b2b31c97f6d2f4b.src","preCode":"    public boolean isUpdateRequired( Artifact artifact, ArtifactRepository repository )\n    {\n        File file = artifact.getFile();\n\n        ArtifactRepositoryPolicy policy = artifact.isSnapshot() ? repository.getSnapshots() : repository.getReleases();\n\n        if ( !policy.isEnabled() )\n        {\n            if ( getLogger().isDebugEnabled() )\n            {\n                getLogger().debug(\n                                   \"Skipping update check for \" + artifact + \" (\" + file + \") from \"\n                                       + repository.getId() + \" (\" + repository.getUrl() + \")\" );\n            }\n\n            return false;\n        }\n\n        if ( getLogger().isDebugEnabled() )\n        {\n            getLogger().debug(\n                               \"Determining update check for \" + artifact + \" (\" + file + \") from \"\n                                   + repository.getId() + \" (\" + repository.getUrl() + \")\" );\n        }\n\n        if ( file == null )\n        {\n            \r\n            return true;\n        }\n\n        Date lastCheckDate;\n\n        if ( file.exists() )\n        {\n            lastCheckDate = new Date ( file.lastModified() );\n        }\n        else\n        {\n            File touchfile = getTouchfile( artifact );\n            lastCheckDate = readLastUpdated( touchfile, getRepositoryKey( repository ) );\n        }\n\n        return ( lastCheckDate == null ) || policy.checkOutOfDate( lastCheckDate );\n    }\n","realPath":"maven-compat/src/main/java/org/apache/maven/repository/legacy/DefaultUpdateCheckManager.java","repoName":"maven","snippetEndLine":0,"snippetStartLine":0,"startLine":62,"status":"B"},{"authorDate":"2009-09-18 17:48:49","commitOrder":2,"curCode":"    public boolean isUpdateRequired( RepositoryMetadata metadata, ArtifactRepository repository, File file )\n    {\n        \r\n        \r\n        \r\n        \r\n        \r\n        \r\n        ArtifactRepositoryPolicy policy = metadata.isSnapshot() ? repository.getSnapshots() : repository.getReleases();\n\n        if ( !policy.isEnabled() )\n        {\n            if ( getLogger().isDebugEnabled() )\n            {\n                getLogger().debug(\n                                   \"Skipping update check for \" + metadata.getKey() + \" (\" + file + \") from \"\n                                       + repository.getId() + \" (\" + repository.getUrl() + \")\" );\n            }\n\n            return false;\n        }\n\n        if ( getLogger().isDebugEnabled() )\n        {\n            getLogger().debug(\n                               \"Determining update check for \" + metadata.getKey() + \" (\" + file + \") from \"\n                                   + repository.getId() + \" (\" + repository.getUrl() + \")\" );\n        }\n\n        if ( file == null )\n        {\n            \r\n            return true;\n        }\n\n        Date lastCheckDate = readLastUpdated( metadata, repository, file );\n\n        return ( lastCheckDate == null ) || policy.checkOutOfDate( lastCheckDate );\n    }\n","date":"2009-09-18 17:48:49","endLine":146,"groupId":"2616","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"isUpdateRequired","params":"(RepositoryMetadatametadata@ArtifactRepositoryrepository@Filefile)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-maven-10-0.7/blobInfo/CC_OUT/blobs/9f/ecd1f0451e9fe451ba8ae45b2b31c97f6d2f4b.src","preCode":"    public boolean isUpdateRequired( RepositoryMetadata metadata, ArtifactRepository repository, File file )\n    {\n        \r\n        \r\n        \r\n        \r\n        \r\n        \r\n        ArtifactRepositoryPolicy policy = metadata.isSnapshot() ? repository.getSnapshots() : repository.getReleases();\n\n        if ( !policy.isEnabled() )\n        {\n            if ( getLogger().isDebugEnabled() )\n            {\n                getLogger().debug(\n                                   \"Skipping update check for \" + metadata.getKey() + \" (\" + file + \") from \"\n                                       + repository.getId() + \" (\" + repository.getUrl() + \")\" );\n            }\n\n            return false;\n        }\n\n        if ( getLogger().isDebugEnabled() )\n        {\n            getLogger().debug(\n                               \"Determining update check for \" + metadata.getKey() + \" (\" + file + \") from \"\n                                   + repository.getId() + \" (\" + repository.getUrl() + \")\" );\n        }\n\n        if ( file == null )\n        {\n            \r\n            return true;\n        }\n\n        Date lastCheckDate = readLastUpdated( metadata, repository, file );\n\n        return ( lastCheckDate == null ) || policy.checkOutOfDate( lastCheckDate );\n    }\n","realPath":"maven-compat/src/main/java/org/apache/maven/repository/legacy/DefaultUpdateCheckManager.java","repoName":"maven","snippetEndLine":0,"snippetStartLine":0,"startLine":108,"status":"MB"}],"commitId":"5097fd51169e312cafc81052d921f7d1aa4d4af2","commitMessage":"@@@[MNG-4343] maven always checks missing release artifacts\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/maven-3/trunk@816563 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2009-09-18 17:48:49","modifiedFileCount":"9","status":"M","submitter":"Benjamin Bentmann"},{"authorTime":"2010-04-09 05:29:56","codes":[{"authorDate":"2009-09-18 17:48:49","commitOrder":3,"curCode":"    public boolean isUpdateRequired( Artifact artifact, ArtifactRepository repository )\n    {\n        File file = artifact.getFile();\n\n        ArtifactRepositoryPolicy policy = artifact.isSnapshot() ? repository.getSnapshots() : repository.getReleases();\n\n        if ( !policy.isEnabled() )\n        {\n            if ( getLogger().isDebugEnabled() )\n            {\n                getLogger().debug(\n                                   \"Skipping update check for \" + artifact + \" (\" + file + \") from \"\n                                       + repository.getId() + \" (\" + repository.getUrl() + \")\" );\n            }\n\n            return false;\n        }\n\n        if ( getLogger().isDebugEnabled() )\n        {\n            getLogger().debug(\n                               \"Determining update check for \" + artifact + \" (\" + file + \") from \"\n                                   + repository.getId() + \" (\" + repository.getUrl() + \")\" );\n        }\n\n        if ( file == null )\n        {\n            \r\n            return true;\n        }\n\n        Date lastCheckDate;\n\n        if ( file.exists() )\n        {\n            lastCheckDate = new Date ( file.lastModified() );\n        }\n        else\n        {\n            File touchfile = getTouchfile( artifact );\n            lastCheckDate = readLastUpdated( touchfile, getRepositoryKey( repository ) );\n        }\n\n        return ( lastCheckDate == null ) || policy.checkOutOfDate( lastCheckDate );\n    }\n","date":"2009-09-18 17:48:49","endLine":106,"groupId":"11294","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"isUpdateRequired","params":"(Artifactartifact@ArtifactRepositoryrepository)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-maven-10-0.7/blobInfo/CC_OUT/blobs/9f/ecd1f0451e9fe451ba8ae45b2b31c97f6d2f4b.src","preCode":"    public boolean isUpdateRequired( Artifact artifact, ArtifactRepository repository )\n    {\n        File file = artifact.getFile();\n\n        ArtifactRepositoryPolicy policy = artifact.isSnapshot() ? repository.getSnapshots() : repository.getReleases();\n\n        if ( !policy.isEnabled() )\n        {\n            if ( getLogger().isDebugEnabled() )\n            {\n                getLogger().debug(\n                                   \"Skipping update check for \" + artifact + \" (\" + file + \") from \"\n                                       + repository.getId() + \" (\" + repository.getUrl() + \")\" );\n            }\n\n            return false;\n        }\n\n        if ( getLogger().isDebugEnabled() )\n        {\n            getLogger().debug(\n                               \"Determining update check for \" + artifact + \" (\" + file + \") from \"\n                                   + repository.getId() + \" (\" + repository.getUrl() + \")\" );\n        }\n\n        if ( file == null )\n        {\n            \r\n            return true;\n        }\n\n        Date lastCheckDate;\n\n        if ( file.exists() )\n        {\n            lastCheckDate = new Date ( file.lastModified() );\n        }\n        else\n        {\n            File touchfile = getTouchfile( artifact );\n            lastCheckDate = readLastUpdated( touchfile, getRepositoryKey( repository ) );\n        }\n\n        return ( lastCheckDate == null ) || policy.checkOutOfDate( lastCheckDate );\n    }\n","realPath":"maven-compat/src/main/java/org/apache/maven/repository/legacy/DefaultUpdateCheckManager.java","repoName":"maven","snippetEndLine":0,"snippetStartLine":0,"startLine":62,"status":"N"},{"authorDate":"2010-04-09 05:29:56","commitOrder":3,"curCode":"    public boolean isUpdateRequired( RepositoryMetadata metadata, ArtifactRepository repository, File file )\n    {\n        \r\n        \r\n        \r\n        \r\n        \r\n        \r\n        ArtifactRepositoryPolicy policy = metadata.getPolicy( repository );\n\n        if ( !policy.isEnabled() )\n        {\n            if ( getLogger().isDebugEnabled() )\n            {\n                getLogger().debug(\n                                   \"Skipping update check for \" + metadata.getKey() + \" (\" + file + \") from \"\n                                       + repository.getId() + \" (\" + repository.getUrl() + \")\" );\n            }\n\n            return false;\n        }\n\n        if ( getLogger().isDebugEnabled() )\n        {\n            getLogger().debug(\n                               \"Determining update check for \" + metadata.getKey() + \" (\" + file + \") from \"\n                                   + repository.getId() + \" (\" + repository.getUrl() + \")\" );\n        }\n\n        if ( file == null )\n        {\n            \r\n            return true;\n        }\n\n        Date lastCheckDate = readLastUpdated( metadata, repository, file );\n\n        return ( lastCheckDate == null ) || policy.checkOutOfDate( lastCheckDate );\n    }\n","date":"2010-04-09 05:29:56","endLine":150,"groupId":"11294","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"isUpdateRequired","params":"(RepositoryMetadatametadata@ArtifactRepositoryrepository@Filefile)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-maven-10-0.7/blobInfo/CC_OUT/blobs/23/323854f2c83d54084f30186f0c83afa63144a4.src","preCode":"    public boolean isUpdateRequired( RepositoryMetadata metadata, ArtifactRepository repository, File file )\n    {\n        \r\n        \r\n        \r\n        \r\n        \r\n        \r\n        ArtifactRepositoryPolicy policy = metadata.isSnapshot() ? repository.getSnapshots() : repository.getReleases();\n\n        if ( !policy.isEnabled() )\n        {\n            if ( getLogger().isDebugEnabled() )\n            {\n                getLogger().debug(\n                                   \"Skipping update check for \" + metadata.getKey() + \" (\" + file + \") from \"\n                                       + repository.getId() + \" (\" + repository.getUrl() + \")\" );\n            }\n\n            return false;\n        }\n\n        if ( getLogger().isDebugEnabled() )\n        {\n            getLogger().debug(\n                               \"Determining update check for \" + metadata.getKey() + \" (\" + file + \") from \"\n                                   + repository.getId() + \" (\" + repository.getUrl() + \")\" );\n        }\n\n        if ( file == null )\n        {\n            \r\n            return true;\n        }\n\n        Date lastCheckDate = readLastUpdated( metadata, repository, file );\n\n        return ( lastCheckDate == null ) || policy.checkOutOfDate( lastCheckDate );\n    }\n","realPath":"maven-compat/src/main/java/org/apache/maven/repository/legacy/DefaultUpdateCheckManager.java","repoName":"maven","snippetEndLine":0,"snippetStartLine":0,"startLine":112,"status":"M"}],"commitId":"238f8c02fb5c1589342ee212b8575f1b88f67d6d","commitMessage":"@@@[MNG-2994] Snapshot repositories are not checked when using ranges\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/maven-3/trunk@932128 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2010-04-09 05:29:56","modifiedFileCount":"8","status":"M","submitter":"Benjamin Bentmann"}]
