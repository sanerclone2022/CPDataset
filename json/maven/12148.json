[{"authorTime":"2015-03-06 14:12:21","codes":[{"authorDate":"2016-12-12 06:36:04","commitOrder":4,"curCode":"    private Dependency convert( org.apache.maven.model.Dependency dependency, ArtifactTypeRegistry stereotypes )\n    {\n        ArtifactType stereotype = stereotypes.get( dependency.getType() );\n        if ( stereotype == null )\n        {\n            stereotype = new DefaultArtifactType( dependency.getType() );\n        }\n\n        boolean system = dependency.getSystemPath() != null && dependency.getSystemPath().length() > 0;\n\n        Map<String, String> props = null;\n        if ( system )\n        {\n            props = Collections.singletonMap( ArtifactProperties.LOCAL_PATH, dependency.getSystemPath() );\n        }\n\n        Artifact artifact =\n            new DefaultArtifact( dependency.getGroupId(), dependency.getArtifactId(), dependency.getClassifier(), null,\n                                 dependency.getVersion(), props, stereotype );\n\n        List<Exclusion> exclusions = new ArrayList<>( dependency.getExclusions().size() );\n        for ( org.apache.maven.model.Exclusion exclusion : dependency.getExclusions() )\n        {\n            exclusions.add( convert( exclusion ) );\n        }\n\n        Dependency result = new Dependency( artifact, dependency.getScope(), dependency.isOptional(), exclusions );\n\n        return result;\n    }\n","date":"2017-02-01 14:59:53","endLine":130,"groupId":"6496","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"convert","params":"(org.apache.maven.model.Dependencydependency@ArtifactTypeRegistrystereotypes)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-maven-10-0.7/blobInfo/CC_OUT/blobs/23/95b36fbd7e04b4f288f2c7f9153de64d590f4b.src","preCode":"    private Dependency convert( org.apache.maven.model.Dependency dependency, ArtifactTypeRegistry stereotypes )\n    {\n        ArtifactType stereotype = stereotypes.get( dependency.getType() );\n        if ( stereotype == null )\n        {\n            stereotype = new DefaultArtifactType( dependency.getType() );\n        }\n\n        boolean system = dependency.getSystemPath() != null && dependency.getSystemPath().length() > 0;\n\n        Map<String, String> props = null;\n        if ( system )\n        {\n            props = Collections.singletonMap( ArtifactProperties.LOCAL_PATH, dependency.getSystemPath() );\n        }\n\n        Artifact artifact =\n            new DefaultArtifact( dependency.getGroupId(), dependency.getArtifactId(), dependency.getClassifier(), null,\n                                 dependency.getVersion(), props, stereotype );\n\n        List<Exclusion> exclusions = new ArrayList<>( dependency.getExclusions().size() );\n        for ( org.apache.maven.model.Exclusion exclusion : dependency.getExclusions() )\n        {\n            exclusions.add( convert( exclusion ) );\n        }\n\n        Dependency result = new Dependency( artifact, dependency.getScope(), dependency.isOptional(), exclusions );\n\n        return result;\n    }\n","realPath":"maven-resolver-provider/src/main/java/org/apache/maven/repository/internal/ArtifactDescriptorReaderDelegate.java","repoName":"maven","snippetEndLine":0,"snippetStartLine":0,"startLine":101,"status":"B"},{"authorDate":"2015-03-06 14:12:21","commitOrder":4,"curCode":"    public static Dependency toDependency( org.apache.maven.model.Dependency dependency,\n                                           ArtifactTypeRegistry stereotypes )\n    {\n        ArtifactType stereotype = stereotypes.get( dependency.getType() );\n        if ( stereotype == null )\n        {\n            stereotype = new DefaultArtifactType( dependency.getType() );\n        }\n\n        boolean system = dependency.getSystemPath() != null && dependency.getSystemPath().length() > 0;\n\n        Map<String, String> props = null;\n        if ( system )\n        {\n            props = Collections.singletonMap( ArtifactProperties.LOCAL_PATH, dependency.getSystemPath() );\n        }\n\n        Artifact artifact =\n            new DefaultArtifact( dependency.getGroupId(), dependency.getArtifactId(), dependency.getClassifier(), null,\n                                 dependency.getVersion(), props, stereotype );\n\n        List<Exclusion> exclusions = new ArrayList<>( dependency.getExclusions().size() );\n        for ( org.apache.maven.model.Exclusion exclusion : dependency.getExclusions() )\n        {\n            exclusions.add( toExclusion( exclusion ) );\n        }\n\n        Dependency result = new Dependency( artifact, dependency.getScope(), dependency.isOptional(), exclusions );\n\n        return result;\n    }\n","date":"2015-06-20 16:56:07","endLine":322,"groupId":"6496","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"toDependency","params":"(org.apache.maven.model.Dependencydependency@ArtifactTypeRegistrystereotypes)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-maven-10-0.7/blobInfo/CC_OUT/blobs/86/eab4e0263448d33fe37b2efde6ae70884c4980.src","preCode":"    public static Dependency toDependency( org.apache.maven.model.Dependency dependency,\n                                           ArtifactTypeRegistry stereotypes )\n    {\n        ArtifactType stereotype = stereotypes.get( dependency.getType() );\n        if ( stereotype == null )\n        {\n            stereotype = new DefaultArtifactType( dependency.getType() );\n        }\n\n        boolean system = dependency.getSystemPath() != null && dependency.getSystemPath().length() > 0;\n\n        Map<String, String> props = null;\n        if ( system )\n        {\n            props = Collections.singletonMap( ArtifactProperties.LOCAL_PATH, dependency.getSystemPath() );\n        }\n\n        Artifact artifact =\n            new DefaultArtifact( dependency.getGroupId(), dependency.getArtifactId(), dependency.getClassifier(), null,\n                                 dependency.getVersion(), props, stereotype );\n\n        List<Exclusion> exclusions = new ArrayList<>( dependency.getExclusions().size() );\n        for ( org.apache.maven.model.Exclusion exclusion : dependency.getExclusions() )\n        {\n            exclusions.add( toExclusion( exclusion ) );\n        }\n\n        Dependency result = new Dependency( artifact, dependency.getScope(), dependency.isOptional(), exclusions );\n\n        return result;\n    }\n","realPath":"maven-core/src/main/java/org/apache/maven/RepositoryUtils.java","repoName":"maven","snippetEndLine":0,"snippetStartLine":0,"startLine":292,"status":"NB"}],"commitId":"8972072e3200e2ecfe2acb6d0b2dc40b10a6bc31","commitMessage":"@@@[MNG-6110] renamed 'maven-aether-provider' to 'maven-resolver-provider'","date":"2017-02-01 14:59:53","modifiedFileCount":"0","status":"M","submitter":"Christian Schulte"},{"authorTime":"2016-02-11 15:45:19","codes":[{"authorDate":"2016-02-11 15:45:19","commitOrder":5,"curCode":"    private Dependency convert( org.apache.maven.model.Dependency dependency, ArtifactTypeRegistry stereotypes )\n    {\n        ArtifactType stereotype = stereotypes.get( dependency.getType() );\n        if ( stereotype == null )\n        {\n            stereotype = new DefaultArtifactType( dependency.getType() );\n        }\n\n        boolean system = dependency.getSystemPath() != null && dependency.getSystemPath().length() > 0;\n\n        Map<String, String> props = null;\n        if ( system )\n        {\n            props = Collections.singletonMap( ArtifactProperties.LOCAL_PATH, dependency.getSystemPath() );\n        }\n\n        Artifact artifact =\n            new DefaultArtifact( dependency.getGroupId(), dependency.getArtifactId(), dependency.getClassifier(), null,\n                                 dependency.getVersion(), props, stereotype );\n\n        List<Exclusion> exclusions = new ArrayList<>( dependency.getExclusions().size() );\n        for ( org.apache.maven.model.Exclusion exclusion : dependency.getExclusions() )\n        {\n            exclusions.add( convert( exclusion ) );\n        }\n\n        Dependency result = new Dependency( artifact, dependency.getScope(),\n                                            dependency.getOptional() != null\n                                                ? dependency.isOptional()\n                                                : null,\n                                            exclusions );\n\n        return result;\n    }\n","date":"2017-05-10 16:36:19","endLine":134,"groupId":"12148","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"convert","params":"(org.apache.maven.model.Dependencydependency@ArtifactTypeRegistrystereotypes)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-maven-10-0.7/blobInfo/CC_OUT/blobs/82/192058c86714134ce437e0acc76f12d78b9e6d.src","preCode":"    private Dependency convert( org.apache.maven.model.Dependency dependency, ArtifactTypeRegistry stereotypes )\n    {\n        ArtifactType stereotype = stereotypes.get( dependency.getType() );\n        if ( stereotype == null )\n        {\n            stereotype = new DefaultArtifactType( dependency.getType() );\n        }\n\n        boolean system = dependency.getSystemPath() != null && dependency.getSystemPath().length() > 0;\n\n        Map<String, String> props = null;\n        if ( system )\n        {\n            props = Collections.singletonMap( ArtifactProperties.LOCAL_PATH, dependency.getSystemPath() );\n        }\n\n        Artifact artifact =\n            new DefaultArtifact( dependency.getGroupId(), dependency.getArtifactId(), dependency.getClassifier(), null,\n                                 dependency.getVersion(), props, stereotype );\n\n        List<Exclusion> exclusions = new ArrayList<>( dependency.getExclusions().size() );\n        for ( org.apache.maven.model.Exclusion exclusion : dependency.getExclusions() )\n        {\n            exclusions.add( convert( exclusion ) );\n        }\n\n        Dependency result = new Dependency( artifact, dependency.getScope(), dependency.isOptional(), exclusions );\n\n        return result;\n    }\n","realPath":"maven-resolver-provider/src/main/java/org/apache/maven/repository/internal/ArtifactDescriptorReaderDelegate.java","repoName":"maven","snippetEndLine":0,"snippetStartLine":0,"startLine":101,"status":"M"},{"authorDate":"2016-02-11 15:45:19","commitOrder":5,"curCode":"    public static Dependency toDependency( org.apache.maven.model.Dependency dependency,\n                                           ArtifactTypeRegistry stereotypes )\n    {\n        ArtifactType stereotype = stereotypes.get( dependency.getType() );\n        if ( stereotype == null )\n        {\n            stereotype = new DefaultArtifactType( dependency.getType() );\n        }\n\n        boolean system = dependency.getSystemPath() != null && dependency.getSystemPath().length() > 0;\n\n        Map<String, String> props = null;\n        if ( system )\n        {\n            props = Collections.singletonMap( ArtifactProperties.LOCAL_PATH, dependency.getSystemPath() );\n        }\n\n        Artifact artifact =\n            new DefaultArtifact( dependency.getGroupId(), dependency.getArtifactId(), dependency.getClassifier(), null,\n                                 dependency.getVersion(), props, stereotype );\n\n        List<Exclusion> exclusions = new ArrayList<>( dependency.getExclusions().size() );\n        for ( org.apache.maven.model.Exclusion exclusion : dependency.getExclusions() )\n        {\n            exclusions.add( toExclusion( exclusion ) );\n        }\n\n        Dependency result = new Dependency( artifact,\n                                            dependency.getScope(),\n                                            dependency.getOptional() != null\n                                                ? dependency.isOptional()\n                                                : null,\n                                            exclusions );\n\n        return result;\n    }\n","date":"2017-05-10 16:36:19","endLine":327,"groupId":"12148","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"toDependency","params":"(org.apache.maven.model.Dependencydependency@ArtifactTypeRegistrystereotypes)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-maven-10-0.7/blobInfo/CC_OUT/blobs/52/442b716427d3dfa86b65cca0383b58aa2ccf5d.src","preCode":"    public static Dependency toDependency( org.apache.maven.model.Dependency dependency,\n                                           ArtifactTypeRegistry stereotypes )\n    {\n        ArtifactType stereotype = stereotypes.get( dependency.getType() );\n        if ( stereotype == null )\n        {\n            stereotype = new DefaultArtifactType( dependency.getType() );\n        }\n\n        boolean system = dependency.getSystemPath() != null && dependency.getSystemPath().length() > 0;\n\n        Map<String, String> props = null;\n        if ( system )\n        {\n            props = Collections.singletonMap( ArtifactProperties.LOCAL_PATH, dependency.getSystemPath() );\n        }\n\n        Artifact artifact =\n            new DefaultArtifact( dependency.getGroupId(), dependency.getArtifactId(), dependency.getClassifier(), null,\n                                 dependency.getVersion(), props, stereotype );\n\n        List<Exclusion> exclusions = new ArrayList<>( dependency.getExclusions().size() );\n        for ( org.apache.maven.model.Exclusion exclusion : dependency.getExclusions() )\n        {\n            exclusions.add( toExclusion( exclusion ) );\n        }\n\n        Dependency result = new Dependency( artifact, dependency.getScope(), dependency.isOptional(), exclusions );\n\n        return result;\n    }\n","realPath":"maven-core/src/main/java/org/apache/maven/RepositoryUtils.java","repoName":"maven","snippetEndLine":0,"snippetStartLine":0,"startLine":292,"status":"M"}],"commitId":"f4ede96fd06c8d3e1e2b2fb679baec058cce30e1","commitMessage":"@@@[MNG-5935] Optional true getting lost in managed dependencies when transitive\n\nUpdated to correctly map the optional flag of Maven model dependencies to\nAether dependencies. Prior to this change all managed dependencies implicitly\nhad the optional flag set to 'false' leading to Aether managing that flag to\n'false' on all managed dependencies when transitive.\n","date":"2017-05-10 16:36:19","modifiedFileCount":"2","status":"M","submitter":"Christian Schulte"}]
