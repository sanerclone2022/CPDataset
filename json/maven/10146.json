[{"authorTime":"2016-12-12 06:36:04","codes":[{"authorDate":"2016-12-12 06:36:04","commitOrder":1,"curCode":"    public Collection<? extends Metadata> prepare( Collection<? extends Artifact> artifacts )\n    {\n        for ( Artifact artifact : artifacts )\n        {\n            if ( artifact.isSnapshot() )\n            {\n                Object key = RemoteSnapshotMetadata.getKey( artifact );\n                RemoteSnapshotMetadata snapshotMetadata = snapshots.get( key );\n                if ( snapshotMetadata == null )\n                {\n                    snapshotMetadata = new RemoteSnapshotMetadata( artifact, legacyFormat );\n                    snapshots.put( key, snapshotMetadata );\n                }\n                snapshotMetadata.bind( artifact );\n            }\n        }\n\n        return snapshots.values();\n    }\n","date":"2017-02-01 14:59:53","endLine":85,"groupId":"2318","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"prepare","params":"(Collection<?extendsArtifact>artifacts)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-maven-10-0.7/blobInfo/CC_OUT/blobs/82/5896620512b7de01fde3f944a9f429cb276899.src","preCode":"    public Collection<? extends Metadata> prepare( Collection<? extends Artifact> artifacts )\n    {\n        for ( Artifact artifact : artifacts )\n        {\n            if ( artifact.isSnapshot() )\n            {\n                Object key = RemoteSnapshotMetadata.getKey( artifact );\n                RemoteSnapshotMetadata snapshotMetadata = snapshots.get( key );\n                if ( snapshotMetadata == null )\n                {\n                    snapshotMetadata = new RemoteSnapshotMetadata( artifact, legacyFormat );\n                    snapshots.put( key, snapshotMetadata );\n                }\n                snapshotMetadata.bind( artifact );\n            }\n        }\n\n        return snapshots.values();\n    }\n","realPath":"maven-resolver-provider/src/main/java/org/apache/maven/repository/internal/RemoteSnapshotMetadataGenerator.java","repoName":"maven","snippetEndLine":0,"snippetStartLine":0,"startLine":67,"status":"B"},{"authorDate":"2016-12-12 06:36:04","commitOrder":1,"curCode":"    public Collection<? extends Metadata> prepare( Collection<? extends Artifact> artifacts )\n    {\n        for ( Artifact artifact : artifacts )\n        {\n            if ( artifact.isSnapshot() )\n            {\n                Object key = LocalSnapshotMetadata.getKey( artifact );\n                LocalSnapshotMetadata snapshotMetadata = snapshots.get( key );\n                if ( snapshotMetadata == null )\n                {\n                    snapshotMetadata = new LocalSnapshotMetadata( artifact, legacyFormat );\n                    snapshots.put( key, snapshotMetadata );\n                }\n                snapshotMetadata.bind( artifact );\n            }\n        }\n\n        return Collections.emptyList();\n    }\n","date":"2017-02-01 14:59:53","endLine":70,"groupId":"2318","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"prepare","params":"(Collection<?extendsArtifact>artifacts)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-maven-10-0.7/blobInfo/CC_OUT/blobs/07/2ba660e06c0db2df6a9e481067e0b8f468f923.src","preCode":"    public Collection<? extends Metadata> prepare( Collection<? extends Artifact> artifacts )\n    {\n        for ( Artifact artifact : artifacts )\n        {\n            if ( artifact.isSnapshot() )\n            {\n                Object key = LocalSnapshotMetadata.getKey( artifact );\n                LocalSnapshotMetadata snapshotMetadata = snapshots.get( key );\n                if ( snapshotMetadata == null )\n                {\n                    snapshotMetadata = new LocalSnapshotMetadata( artifact, legacyFormat );\n                    snapshots.put( key, snapshotMetadata );\n                }\n                snapshotMetadata.bind( artifact );\n            }\n        }\n\n        return Collections.emptyList();\n    }\n","realPath":"maven-resolver-provider/src/main/java/org/apache/maven/repository/internal/LocalSnapshotMetadataGenerator.java","repoName":"maven","snippetEndLine":0,"snippetStartLine":0,"startLine":52,"status":"B"}],"commitId":"8972072e3200e2ecfe2acb6d0b2dc40b10a6bc31","commitMessage":"@@@[MNG-6110] renamed 'maven-aether-provider' to 'maven-resolver-provider'","date":"2017-02-01 14:59:53","modifiedFileCount":"0","status":"B","submitter":"Christian Schulte"},{"authorTime":"2020-10-12 02:27:49","codes":[{"authorDate":"2020-10-12 02:27:49","commitOrder":2,"curCode":"    public Collection<? extends Metadata> prepare( Collection<? extends Artifact> artifacts )\n    {\n        for ( Artifact artifact : artifacts )\n        {\n            if ( artifact.isSnapshot() )\n            {\n                Object key = RemoteSnapshotMetadata.getKey( artifact );\n                RemoteSnapshotMetadata snapshotMetadata = snapshots.get( key );\n                if ( snapshotMetadata == null )\n                {\n                    snapshotMetadata = new RemoteSnapshotMetadata( artifact, legacyFormat, timestamp );\n                    snapshots.put( key, snapshotMetadata );\n                }\n                snapshotMetadata.bind( artifact );\n            }\n        }\n\n        return snapshots.values();\n    }\n","date":"2020-11-12 06:09:49","endLine":90,"groupId":"10146","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"prepare","params":"(Collection<?extendsArtifact>artifacts)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-maven-10-0.7/blobInfo/CC_OUT/blobs/2e/42bee7d5c76c94211d7d184f11441ca360394f.src","preCode":"    public Collection<? extends Metadata> prepare( Collection<? extends Artifact> artifacts )\n    {\n        for ( Artifact artifact : artifacts )\n        {\n            if ( artifact.isSnapshot() )\n            {\n                Object key = RemoteSnapshotMetadata.getKey( artifact );\n                RemoteSnapshotMetadata snapshotMetadata = snapshots.get( key );\n                if ( snapshotMetadata == null )\n                {\n                    snapshotMetadata = new RemoteSnapshotMetadata( artifact, legacyFormat );\n                    snapshots.put( key, snapshotMetadata );\n                }\n                snapshotMetadata.bind( artifact );\n            }\n        }\n\n        return snapshots.values();\n    }\n","realPath":"maven-resolver-provider/src/main/java/org/apache/maven/repository/internal/RemoteSnapshotMetadataGenerator.java","repoName":"maven","snippetEndLine":0,"snippetStartLine":0,"startLine":72,"status":"M"},{"authorDate":"2020-10-12 02:27:49","commitOrder":2,"curCode":"    public Collection<? extends Metadata> prepare( Collection<? extends Artifact> artifacts )\n    {\n        for ( Artifact artifact : artifacts )\n        {\n            if ( artifact.isSnapshot() )\n            {\n                Object key = LocalSnapshotMetadata.getKey( artifact );\n                LocalSnapshotMetadata snapshotMetadata = snapshots.get( key );\n                if ( snapshotMetadata == null )\n                {\n                    snapshotMetadata = new LocalSnapshotMetadata( artifact, legacyFormat, timestamp );\n                    snapshots.put( key, snapshotMetadata );\n                }\n                snapshotMetadata.bind( artifact );\n            }\n        }\n\n        return Collections.emptyList();\n    }\n","date":"2020-11-12 06:09:49","endLine":75,"groupId":"10146","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"prepare","params":"(Collection<?extendsArtifact>artifacts)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-maven-10-0.7/blobInfo/CC_OUT/blobs/75/b4e6b9390078b354dcf82678843d7de5d90dd5.src","preCode":"    public Collection<? extends Metadata> prepare( Collection<? extends Artifact> artifacts )\n    {\n        for ( Artifact artifact : artifacts )\n        {\n            if ( artifact.isSnapshot() )\n            {\n                Object key = LocalSnapshotMetadata.getKey( artifact );\n                LocalSnapshotMetadata snapshotMetadata = snapshots.get( key );\n                if ( snapshotMetadata == null )\n                {\n                    snapshotMetadata = new LocalSnapshotMetadata( artifact, legacyFormat );\n                    snapshots.put( key, snapshotMetadata );\n                }\n                snapshotMetadata.bind( artifact );\n            }\n        }\n\n        return Collections.emptyList();\n    }\n","realPath":"maven-resolver-provider/src/main/java/org/apache/maven/repository/internal/LocalSnapshotMetadataGenerator.java","repoName":"maven","snippetEndLine":0,"snippetStartLine":0,"startLine":57,"status":"M"}],"commitId":"72688805c4f95f8ab4ca9ab2ac2cd114667790c9","commitMessage":"@@@[MNG-6754] Set the same timestamp in multi module builds\n\nReuse MavenExecutionRequest#getStartTime() throughout for snapshot versions. \nlast updated fields in metadata consistently for local and remote repositories\nfor the entire reactor and its modules.\n\nThis closes #381\n","date":"2020-11-12 06:09:49","modifiedFileCount":"14","status":"M","submitter":"Michael Osipov"}]
