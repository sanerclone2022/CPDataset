[{"authorTime":"2014-06-16 03:01:55","codes":[{"authorDate":"2014-06-16 03:01:55","commitOrder":1,"curCode":"    public void testDefaultBuildTimestampFormatShouldFormatTimeIn24HourFormat()\n    {\n        Calendar cal = Calendar.getInstance();\n        cal.setTimeZone(TimeZone.getTimeZone(\"UTC\"));\n        cal.set( Calendar.HOUR, 12 );\n        cal.set( Calendar.AM_PM, Calendar.AM );\n\n        \r\n        cal.set( Calendar.HOUR_OF_DAY, 0 );\n        cal.set( Calendar.MINUTE, 16 );\n        cal.set( Calendar.SECOND, 0 );\n        cal.set( Calendar.YEAR, 1976 );\n        cal.set( Calendar.MONTH, Calendar.NOVEMBER );\n        cal.set( Calendar.DATE, 11 );\n\n        Date firstTestDate = cal.getTime();\n\n        cal.set( Calendar.HOUR, 11 );\n        cal.set( Calendar.AM_PM, Calendar.PM );\n\n        \r\n        cal.set( Calendar.HOUR_OF_DAY, 23 );\n\n        Date secondTestDate = cal.getTime();\n\n        SimpleDateFormat format =\n            new SimpleDateFormat( MavenBuildTimestamp.DEFAULT_BUILD_TIMESTAMP_FORMAT );\n        format.setTimeZone(TimeZone.getTimeZone(\"UTC\"));\n        assertEquals( \"1976-11-11T00:16:00Z\", format.format( firstTestDate ) );\n        assertEquals( \"1976-11-11T23:16:00Z\", format.format( secondTestDate ) );\n    }\n","date":"2014-06-16 03:01:55","endLine":118,"groupId":"3412","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testDefaultBuildTimestampFormatShouldFormatTimeIn24HourFormat","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-maven-10-0.7/blobInfo/CC_OUT/blobs/99/842dfe083d8bee81d8f22c73e337ae40ec8bc6.src","preCode":"    public void testDefaultBuildTimestampFormatShouldFormatTimeIn24HourFormat()\n    {\n        Calendar cal = Calendar.getInstance();\n        cal.setTimeZone(TimeZone.getTimeZone(\"UTC\"));\n        cal.set( Calendar.HOUR, 12 );\n        cal.set( Calendar.AM_PM, Calendar.AM );\n\n        \r\n        cal.set( Calendar.HOUR_OF_DAY, 0 );\n        cal.set( Calendar.MINUTE, 16 );\n        cal.set( Calendar.SECOND, 0 );\n        cal.set( Calendar.YEAR, 1976 );\n        cal.set( Calendar.MONTH, Calendar.NOVEMBER );\n        cal.set( Calendar.DATE, 11 );\n\n        Date firstTestDate = cal.getTime();\n\n        cal.set( Calendar.HOUR, 11 );\n        cal.set( Calendar.AM_PM, Calendar.PM );\n\n        \r\n        cal.set( Calendar.HOUR_OF_DAY, 23 );\n\n        Date secondTestDate = cal.getTime();\n\n        SimpleDateFormat format =\n            new SimpleDateFormat( MavenBuildTimestamp.DEFAULT_BUILD_TIMESTAMP_FORMAT );\n        format.setTimeZone(TimeZone.getTimeZone(\"UTC\"));\n        assertEquals( \"1976-11-11T00:16:00Z\", format.format( firstTestDate ) );\n        assertEquals( \"1976-11-11T23:16:00Z\", format.format( secondTestDate ) );\n    }\n","realPath":"maven-model-builder/src/test/java/org/apache/maven/model/interpolation/AbstractModelInterpolatorTest.java","repoName":"maven","snippetEndLine":0,"snippetStartLine":0,"startLine":88,"status":"B"},{"authorDate":"2014-06-16 03:01:55","commitOrder":1,"curCode":"    public void testDefaultBuildTimestampFormatWithLocalTimeZoneMidnightRollover()\n    {\n        Calendar cal = Calendar.getInstance();\n        cal.setTimeZone(TimeZone.getTimeZone(\"Europe/Berlin\"));\n\n        cal.set( Calendar.HOUR_OF_DAY, 1 );\n        cal.set( Calendar.MINUTE, 16 );\n        cal.set( Calendar.SECOND, 0 );\n        cal.set( Calendar.YEAR, 2014 );\n        cal.set( Calendar.MONTH, Calendar.JUNE );\n        cal.set( Calendar.DATE, 16 );\n\n        Date firstTestDate = cal.getTime();\n\n        cal.set( Calendar.MONTH, Calendar.NOVEMBER );\n\n        Date secondTestDate = cal.getTime();\n\n        SimpleDateFormat format =\n            new SimpleDateFormat( MavenBuildTimestamp.DEFAULT_BUILD_TIMESTAMP_FORMAT );\n        format.setTimeZone(TimeZone.getTimeZone(\"UTC\"));\n        assertEquals( \"2014-06-15T23:16:00Z\", format.format( firstTestDate ) );\n        assertEquals( \"2014-11-16T00:16:00Z\", format.format( secondTestDate ) );\n    }\n","date":"2014-06-16 03:01:55","endLine":143,"groupId":"3413","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testDefaultBuildTimestampFormatWithLocalTimeZoneMidnightRollover","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-maven-10-0.7/blobInfo/CC_OUT/blobs/99/842dfe083d8bee81d8f22c73e337ae40ec8bc6.src","preCode":"    public void testDefaultBuildTimestampFormatWithLocalTimeZoneMidnightRollover()\n    {\n        Calendar cal = Calendar.getInstance();\n        cal.setTimeZone(TimeZone.getTimeZone(\"Europe/Berlin\"));\n\n        cal.set( Calendar.HOUR_OF_DAY, 1 );\n        cal.set( Calendar.MINUTE, 16 );\n        cal.set( Calendar.SECOND, 0 );\n        cal.set( Calendar.YEAR, 2014 );\n        cal.set( Calendar.MONTH, Calendar.JUNE );\n        cal.set( Calendar.DATE, 16 );\n\n        Date firstTestDate = cal.getTime();\n\n        cal.set( Calendar.MONTH, Calendar.NOVEMBER );\n\n        Date secondTestDate = cal.getTime();\n\n        SimpleDateFormat format =\n            new SimpleDateFormat( MavenBuildTimestamp.DEFAULT_BUILD_TIMESTAMP_FORMAT );\n        format.setTimeZone(TimeZone.getTimeZone(\"UTC\"));\n        assertEquals( \"2014-06-15T23:16:00Z\", format.format( firstTestDate ) );\n        assertEquals( \"2014-11-16T00:16:00Z\", format.format( secondTestDate ) );\n    }\n","realPath":"maven-model-builder/src/test/java/org/apache/maven/model/interpolation/AbstractModelInterpolatorTest.java","repoName":"maven","snippetEndLine":0,"snippetStartLine":0,"startLine":120,"status":"B"}],"commitId":"cdb8ad6dd1ee5e24abede7ec22dce7a8197dbd1a","commitMessage":"@@@[MNG-5647] ${maven.build.timestamp} uses incorrect ISO datetime\nseparator\n\n- Fully utilize extended ISO timestamp\n- Added changes to index.apt","date":"2014-06-16 03:01:55","modifiedFileCount":"3","status":"B","submitter":"Michael Osipov"},{"authorTime":"2015-10-10 20:39:31","codes":[{"authorDate":"2015-10-10 20:39:31","commitOrder":2,"curCode":"    public void testDefaultBuildTimestampFormatShouldFormatTimeIn24HourFormat()\n    {\n        Calendar cal = Calendar.getInstance();\n        cal.setTimeZone( MavenBuildTimestamp.DEFAULT_BUILD_TIME_ZONE );\n        cal.set( Calendar.HOUR, 12 );\n        cal.set( Calendar.AM_PM, Calendar.AM );\n\n        \r\n        cal.set( Calendar.HOUR_OF_DAY, 0 );\n        cal.set( Calendar.MINUTE, 16 );\n        cal.set( Calendar.SECOND, 0 );\n        cal.set( Calendar.YEAR, 1976 );\n        cal.set( Calendar.MONTH, Calendar.NOVEMBER );\n        cal.set( Calendar.DATE, 11 );\n\n        Date firstTestDate = cal.getTime();\n\n        cal.set( Calendar.HOUR, 11 );\n        cal.set( Calendar.AM_PM, Calendar.PM );\n\n        \r\n        cal.set( Calendar.HOUR_OF_DAY, 23 );\n\n        Date secondTestDate = cal.getTime();\n\n        SimpleDateFormat format =\n            new SimpleDateFormat( MavenBuildTimestamp.DEFAULT_BUILD_TIMESTAMP_FORMAT );\n        format.setTimeZone( MavenBuildTimestamp.DEFAULT_BUILD_TIME_ZONE );\n        assertEquals( \"1976-11-11T00:16:00Z\", format.format( firstTestDate ) );\n        assertEquals( \"1976-11-11T23:16:00Z\", format.format( secondTestDate ) );\n    }\n","date":"2015-10-10 20:39:31","endLine":118,"groupId":"102","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testDefaultBuildTimestampFormatShouldFormatTimeIn24HourFormat","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-maven-10-0.7/blobInfo/CC_OUT/blobs/b5/6bc155535ee825e10fcfdd44398ff2eedfa251.src","preCode":"    public void testDefaultBuildTimestampFormatShouldFormatTimeIn24HourFormat()\n    {\n        Calendar cal = Calendar.getInstance();\n        cal.setTimeZone(TimeZone.getTimeZone(\"UTC\"));\n        cal.set( Calendar.HOUR, 12 );\n        cal.set( Calendar.AM_PM, Calendar.AM );\n\n        \r\n        cal.set( Calendar.HOUR_OF_DAY, 0 );\n        cal.set( Calendar.MINUTE, 16 );\n        cal.set( Calendar.SECOND, 0 );\n        cal.set( Calendar.YEAR, 1976 );\n        cal.set( Calendar.MONTH, Calendar.NOVEMBER );\n        cal.set( Calendar.DATE, 11 );\n\n        Date firstTestDate = cal.getTime();\n\n        cal.set( Calendar.HOUR, 11 );\n        cal.set( Calendar.AM_PM, Calendar.PM );\n\n        \r\n        cal.set( Calendar.HOUR_OF_DAY, 23 );\n\n        Date secondTestDate = cal.getTime();\n\n        SimpleDateFormat format =\n            new SimpleDateFormat( MavenBuildTimestamp.DEFAULT_BUILD_TIMESTAMP_FORMAT );\n        format.setTimeZone(TimeZone.getTimeZone(\"UTC\"));\n        assertEquals( \"1976-11-11T00:16:00Z\", format.format( firstTestDate ) );\n        assertEquals( \"1976-11-11T23:16:00Z\", format.format( secondTestDate ) );\n    }\n","realPath":"maven-model-builder/src/test/java/org/apache/maven/model/interpolation/AbstractModelInterpolatorTest.java","repoName":"maven","snippetEndLine":0,"snippetStartLine":0,"startLine":88,"status":"M"},{"authorDate":"2015-10-10 20:39:31","commitOrder":2,"curCode":"    public void testDefaultBuildTimestampFormatWithLocalTimeZoneMidnightRollover()\n    {\n        Calendar cal = Calendar.getInstance();\n        cal.setTimeZone( TimeZone.getTimeZone( \"Europe/Berlin\" ) );\n\n        cal.set( Calendar.HOUR_OF_DAY, 1 );\n        cal.set( Calendar.MINUTE, 16 );\n        cal.set( Calendar.SECOND, 0 );\n        cal.set( Calendar.YEAR, 2014 );\n        cal.set( Calendar.MONTH, Calendar.JUNE );\n        cal.set( Calendar.DATE, 16 );\n\n        Date firstTestDate = cal.getTime();\n\n        cal.set( Calendar.MONTH, Calendar.NOVEMBER );\n\n        Date secondTestDate = cal.getTime();\n\n        SimpleDateFormat format =\n            new SimpleDateFormat( MavenBuildTimestamp.DEFAULT_BUILD_TIMESTAMP_FORMAT );\n        format.setTimeZone( MavenBuildTimestamp.DEFAULT_BUILD_TIME_ZONE );\n        assertEquals( \"2014-06-15T23:16:00Z\", format.format( firstTestDate ) );\n        assertEquals( \"2014-11-16T00:16:00Z\", format.format( secondTestDate ) );\n    }\n","date":"2015-10-10 20:39:31","endLine":143,"groupId":"102","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testDefaultBuildTimestampFormatWithLocalTimeZoneMidnightRollover","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-maven-10-0.7/blobInfo/CC_OUT/blobs/b5/6bc155535ee825e10fcfdd44398ff2eedfa251.src","preCode":"    public void testDefaultBuildTimestampFormatWithLocalTimeZoneMidnightRollover()\n    {\n        Calendar cal = Calendar.getInstance();\n        cal.setTimeZone(TimeZone.getTimeZone(\"Europe/Berlin\"));\n\n        cal.set( Calendar.HOUR_OF_DAY, 1 );\n        cal.set( Calendar.MINUTE, 16 );\n        cal.set( Calendar.SECOND, 0 );\n        cal.set( Calendar.YEAR, 2014 );\n        cal.set( Calendar.MONTH, Calendar.JUNE );\n        cal.set( Calendar.DATE, 16 );\n\n        Date firstTestDate = cal.getTime();\n\n        cal.set( Calendar.MONTH, Calendar.NOVEMBER );\n\n        Date secondTestDate = cal.getTime();\n\n        SimpleDateFormat format =\n            new SimpleDateFormat( MavenBuildTimestamp.DEFAULT_BUILD_TIMESTAMP_FORMAT );\n        format.setTimeZone(TimeZone.getTimeZone(\"UTC\"));\n        assertEquals( \"2014-06-15T23:16:00Z\", format.format( firstTestDate ) );\n        assertEquals( \"2014-11-16T00:16:00Z\", format.format( secondTestDate ) );\n    }\n","realPath":"maven-model-builder/src/test/java/org/apache/maven/model/interpolation/AbstractModelInterpolatorTest.java","repoName":"maven","snippetEndLine":0,"snippetStartLine":0,"startLine":120,"status":"M"}],"commitId":"b711de57dcd7d5db5b97ab4c9e1a618293e33a4d","commitMessage":"@@@[MNG-5906] Use canonical name for UTC timezone\n","date":"2015-10-10 20:39:31","modifiedFileCount":"4","status":"M","submitter":"Michael Osipov"}]
