[{"authorTime":"2009-08-14 01:52:27","codes":[{"authorDate":"2009-10-27 04:16:00","commitOrder":6,"curCode":"    protected MavenProject getProjectWithDependencies( File pom )\n        throws Exception\n    {\n        ProjectBuildingRequest configuration = new DefaultProjectBuildingRequest();\n        configuration.setLocalRepository( getLocalRepository() );\n        configuration.setRemoteRepositories( Arrays.asList( new ArtifactRepository[] {} ) );\n        configuration.setProcessPlugins( false );\n        configuration.setResolveDependencies( true );\n\n        try\n        {\n            return projectBuilder.build( pom, configuration ).getProject();\n        }\n        catch ( Exception e )\n        {\n            Throwable cause = e.getCause();\n            if ( cause instanceof ModelBuildingException )\n            {\n                String message = \"In: \" + pom + \"\\n\\n\";\n                for ( ModelProblem problem : ( (ModelBuildingException) cause ).getProblems() )\n                {\n                    message += problem + \"\\n\";\n                }\n                System.out.println( message );\n                fail( message );\n            }\n\n            throw e;\n        }\n    }\n","date":"2009-10-27 04:16:00","endLine":153,"groupId":"6299","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"getProjectWithDependencies","params":"(Filepom)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-maven-10-0.7/blobInfo/CC_OUT/blobs/36/025f7da9ec54523fd69ca91fa5967412e457ce.src","preCode":"    protected MavenProject getProjectWithDependencies( File pom )\n        throws Exception\n    {\n        ProjectBuildingRequest configuration = new DefaultProjectBuildingRequest();\n        configuration.setLocalRepository( getLocalRepository() );\n        configuration.setRemoteRepositories( Arrays.asList( new ArtifactRepository[] {} ) );\n        configuration.setProcessPlugins( false );\n        configuration.setResolveDependencies( true );\n\n        try\n        {\n            return projectBuilder.build( pom, configuration ).getProject();\n        }\n        catch ( Exception e )\n        {\n            Throwable cause = e.getCause();\n            if ( cause instanceof ModelBuildingException )\n            {\n                String message = \"In: \" + pom + \"\\n\\n\";\n                for ( ModelProblem problem : ( (ModelBuildingException) cause ).getProblems() )\n                {\n                    message += problem + \"\\n\";\n                }\n                System.out.println( message );\n                fail( message );\n            }\n\n            throw e;\n        }\n    }\n","realPath":"maven-compat/src/test/java/org/apache/maven/project/AbstractMavenProjectTestCase.java","repoName":"maven","snippetEndLine":0,"snippetStartLine":0,"startLine":124,"status":"B"},{"authorDate":"2009-08-14 01:52:27","commitOrder":6,"curCode":"    protected MavenProject getProjectWithDependencies( File pom )\n        throws Exception\n    {\n        ProjectBuildingRequest configuration = new DefaultProjectBuildingRequest();\n        configuration.setLocalRepository( getLocalRepository() );\n        configuration.setRemoteRepositories( Arrays.asList( new ArtifactRepository[] {} ) );\n        configuration.setProcessPlugins( false );\n        configuration.setResolveDependencies( true );\n\n        try\n        {\n            return projectBuilder.build( pom, configuration ).getProject();\n        }\n        catch ( Exception e )\n        {\n            Throwable cause = e.getCause();\n            if ( cause instanceof ModelBuildingException )\n            {\n                String message = \"In: \" + pom + \"\\n\\n\";\n                for ( ModelProblem problem : ( (ModelBuildingException) cause ).getProblems() )\n                {\n                    message += problem + \"\\n\";\n                }\n                System.out.println( message );\n                fail( message );\n            }\n\n            throw e;\n        }\n    }\n","date":"2009-08-14 01:52:27","endLine":154,"groupId":"6299","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"getProjectWithDependencies","params":"(Filepom)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-maven-10-0.7/blobInfo/CC_OUT/blobs/44/e9c9cfdabf29e0d3a86573fc835e12e7bfda8b.src","preCode":"    protected MavenProject getProjectWithDependencies( File pom )\n        throws Exception\n    {\n        ProjectBuildingRequest configuration = new DefaultProjectBuildingRequest();\n        configuration.setLocalRepository( getLocalRepository() );\n        configuration.setRemoteRepositories( Arrays.asList( new ArtifactRepository[] {} ) );\n        configuration.setProcessPlugins( false );\n        configuration.setResolveDependencies( true );\n\n        try\n        {\n            return projectBuilder.build( pom, configuration ).getProject();\n        }\n        catch ( Exception e )\n        {\n            Throwable cause = e.getCause();\n            if ( cause instanceof ModelBuildingException )\n            {\n                String message = \"In: \" + pom + \"\\n\\n\";\n                for ( ModelProblem problem : ( (ModelBuildingException) cause ).getProblems() )\n                {\n                    message += problem + \"\\n\";\n                }\n                System.out.println( message );\n                fail( message );\n            }\n\n            throw e;\n        }\n    }\n","realPath":"maven-core/src/test/java/org/apache/maven/project/AbstractMavenProjectTestCase.java","repoName":"maven","snippetEndLine":0,"snippetStartLine":0,"startLine":125,"status":"NB"}],"commitId":"20f8323b0a993799f77db49c787829449a17b8c0","commitMessage":"@@@[MNG-4221] Push all repository/artifact related code into a legacy module and create a backward compat layer for external consumers\n\no Refactored code to make maven-compat depend on maven-core.  this got ugly regarding some tests which to a high degree depend on a full-blown repository system\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/maven-3/trunk@829934 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2009-10-27 04:16:00","modifiedFileCount":"12","status":"M","submitter":"Benjamin Bentmann"},{"authorTime":"2010-08-25 06:46:07","codes":[{"authorDate":"2010-08-25 06:46:07","commitOrder":7,"curCode":"    protected MavenProject getProjectWithDependencies( File pom )\n        throws Exception\n    {\n        ProjectBuildingRequest configuration = new DefaultProjectBuildingRequest();\n        configuration.setLocalRepository( getLocalRepository() );\n        configuration.setRemoteRepositories( Arrays.asList( new ArtifactRepository[] {} ) );\n        configuration.setProcessPlugins( false );\n        configuration.setResolveDependencies( true );\n        initRepoSession( configuration );\n\n        try\n        {\n            return projectBuilder.build( pom, configuration ).getProject();\n        }\n        catch ( Exception e )\n        {\n            Throwable cause = e.getCause();\n            if ( cause instanceof ModelBuildingException )\n            {\n                String message = \"In: \" + pom + \"\\n\\n\";\n                for ( ModelProblem problem : ( (ModelBuildingException) cause ).getProblems() )\n                {\n                    message += problem + \"\\n\";\n                }\n                System.out.println( message );\n                fail( message );\n            }\n\n            throw e;\n        }\n    }\n","date":"2010-08-25 06:46:07","endLine":155,"groupId":"4915","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"getProjectWithDependencies","params":"(Filepom)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-maven-10-0.7/blobInfo/CC_OUT/blobs/49/cfa6a32816dc552ebe295061b7fdf497f75225.src","preCode":"    protected MavenProject getProjectWithDependencies( File pom )\n        throws Exception\n    {\n        ProjectBuildingRequest configuration = new DefaultProjectBuildingRequest();\n        configuration.setLocalRepository( getLocalRepository() );\n        configuration.setRemoteRepositories( Arrays.asList( new ArtifactRepository[] {} ) );\n        configuration.setProcessPlugins( false );\n        configuration.setResolveDependencies( true );\n\n        try\n        {\n            return projectBuilder.build( pom, configuration ).getProject();\n        }\n        catch ( Exception e )\n        {\n            Throwable cause = e.getCause();\n            if ( cause instanceof ModelBuildingException )\n            {\n                String message = \"In: \" + pom + \"\\n\\n\";\n                for ( ModelProblem problem : ( (ModelBuildingException) cause ).getProblems() )\n                {\n                    message += problem + \"\\n\";\n                }\n                System.out.println( message );\n                fail( message );\n            }\n\n            throw e;\n        }\n    }\n","realPath":"maven-compat/src/test/java/org/apache/maven/project/AbstractMavenProjectTestCase.java","repoName":"maven","snippetEndLine":0,"snippetStartLine":0,"startLine":125,"status":"M"},{"authorDate":"2010-08-25 06:46:07","commitOrder":7,"curCode":"    protected MavenProject getProjectWithDependencies( File pom )\n        throws Exception\n    {\n        ProjectBuildingRequest configuration = new DefaultProjectBuildingRequest();\n        configuration.setLocalRepository( getLocalRepository() );\n        configuration.setRemoteRepositories( Arrays.asList( new ArtifactRepository[] {} ) );\n        configuration.setProcessPlugins( false );\n        configuration.setResolveDependencies( true );\n        initRepoSession( configuration );\n\n        try\n        {\n            return projectBuilder.build( pom, configuration ).getProject();\n        }\n        catch ( Exception e )\n        {\n            Throwable cause = e.getCause();\n            if ( cause instanceof ModelBuildingException )\n            {\n                String message = \"In: \" + pom + \"\\n\\n\";\n                for ( ModelProblem problem : ( (ModelBuildingException) cause ).getProblems() )\n                {\n                    message += problem + \"\\n\";\n                }\n                System.out.println( message );\n                fail( message );\n            }\n\n            throw e;\n        }\n    }\n","date":"2010-08-25 06:46:07","endLine":155,"groupId":"4915","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"getProjectWithDependencies","params":"(Filepom)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-maven-10-0.7/blobInfo/CC_OUT/blobs/b3/959c64e3a6d085dd1772b23391087b7b091cd1.src","preCode":"    protected MavenProject getProjectWithDependencies( File pom )\n        throws Exception\n    {\n        ProjectBuildingRequest configuration = new DefaultProjectBuildingRequest();\n        configuration.setLocalRepository( getLocalRepository() );\n        configuration.setRemoteRepositories( Arrays.asList( new ArtifactRepository[] {} ) );\n        configuration.setProcessPlugins( false );\n        configuration.setResolveDependencies( true );\n\n        try\n        {\n            return projectBuilder.build( pom, configuration ).getProject();\n        }\n        catch ( Exception e )\n        {\n            Throwable cause = e.getCause();\n            if ( cause instanceof ModelBuildingException )\n            {\n                String message = \"In: \" + pom + \"\\n\\n\";\n                for ( ModelProblem problem : ( (ModelBuildingException) cause ).getProblems() )\n                {\n                    message += problem + \"\\n\";\n                }\n                System.out.println( message );\n                fail( message );\n            }\n\n            throw e;\n        }\n    }\n","realPath":"maven-core/src/test/java/org/apache/maven/project/AbstractMavenProjectTestCase.java","repoName":"maven","snippetEndLine":0,"snippetStartLine":0,"startLine":125,"status":"M"}],"commitId":"6c37a89744149e68f198429fb7eac70fe1707360","commitMessage":"@@@[MNG-4756] Aether integration\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/maven-3/trunk@988749 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2010-08-25 06:46:07","modifiedFileCount":"102","status":"M","submitter":"Benjamin Bentmann"},{"authorTime":"2011-09-27 22:55:56","codes":[{"authorDate":"2010-08-25 06:46:07","commitOrder":8,"curCode":"    protected MavenProject getProjectWithDependencies( File pom )\n        throws Exception\n    {\n        ProjectBuildingRequest configuration = new DefaultProjectBuildingRequest();\n        configuration.setLocalRepository( getLocalRepository() );\n        configuration.setRemoteRepositories( Arrays.asList( new ArtifactRepository[] {} ) );\n        configuration.setProcessPlugins( false );\n        configuration.setResolveDependencies( true );\n        initRepoSession( configuration );\n\n        try\n        {\n            return projectBuilder.build( pom, configuration ).getProject();\n        }\n        catch ( Exception e )\n        {\n            Throwable cause = e.getCause();\n            if ( cause instanceof ModelBuildingException )\n            {\n                String message = \"In: \" + pom + \"\\n\\n\";\n                for ( ModelProblem problem : ( (ModelBuildingException) cause ).getProblems() )\n                {\n                    message += problem + \"\\n\";\n                }\n                System.out.println( message );\n                fail( message );\n            }\n\n            throw e;\n        }\n    }\n","date":"2010-08-25 06:46:07","endLine":155,"groupId":"10210","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"getProjectWithDependencies","params":"(Filepom)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-maven-10-0.7/blobInfo/CC_OUT/blobs/49/cfa6a32816dc552ebe295061b7fdf497f75225.src","preCode":"    protected MavenProject getProjectWithDependencies( File pom )\n        throws Exception\n    {\n        ProjectBuildingRequest configuration = new DefaultProjectBuildingRequest();\n        configuration.setLocalRepository( getLocalRepository() );\n        configuration.setRemoteRepositories( Arrays.asList( new ArtifactRepository[] {} ) );\n        configuration.setProcessPlugins( false );\n        configuration.setResolveDependencies( true );\n        initRepoSession( configuration );\n\n        try\n        {\n            return projectBuilder.build( pom, configuration ).getProject();\n        }\n        catch ( Exception e )\n        {\n            Throwable cause = e.getCause();\n            if ( cause instanceof ModelBuildingException )\n            {\n                String message = \"In: \" + pom + \"\\n\\n\";\n                for ( ModelProblem problem : ( (ModelBuildingException) cause ).getProblems() )\n                {\n                    message += problem + \"\\n\";\n                }\n                System.out.println( message );\n                fail( message );\n            }\n\n            throw e;\n        }\n    }\n","realPath":"maven-compat/src/test/java/org/apache/maven/project/AbstractMavenProjectTestCase.java","repoName":"maven","snippetEndLine":0,"snippetStartLine":0,"startLine":125,"status":"N"},{"authorDate":"2011-09-27 22:55:56","commitOrder":8,"curCode":"    protected MavenProject getProjectWithDependencies( File pom )\n        throws Exception\n    {\n        ProjectBuildingRequest configuration = newBuildingRequest();\n        configuration.setRemoteRepositories( Arrays.asList( new ArtifactRepository[] {} ) );\n        configuration.setProcessPlugins( false );\n        configuration.setResolveDependencies( true );\n\n        try\n        {\n            return projectBuilder.build( pom, configuration ).getProject();\n        }\n        catch ( Exception e )\n        {\n            Throwable cause = e.getCause();\n            if ( cause instanceof ModelBuildingException )\n            {\n                String message = \"In: \" + pom + \"\\n\\n\";\n                for ( ModelProblem problem : ( (ModelBuildingException) cause ).getProblems() )\n                {\n                    message += problem + \"\\n\";\n                }\n                System.out.println( message );\n            }\n\n            throw e;\n        }\n    }\n","date":"2011-09-27 22:55:56","endLine":151,"groupId":"10210","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"getProjectWithDependencies","params":"(Filepom)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-maven-10-0.7/blobInfo/CC_OUT/blobs/aa/54f3eae4d810d9bf98ccf9e96b5e5a8bb815fa.src","preCode":"    protected MavenProject getProjectWithDependencies( File pom )\n        throws Exception\n    {\n        ProjectBuildingRequest configuration = new DefaultProjectBuildingRequest();\n        configuration.setLocalRepository( getLocalRepository() );\n        configuration.setRemoteRepositories( Arrays.asList( new ArtifactRepository[] {} ) );\n        configuration.setProcessPlugins( false );\n        configuration.setResolveDependencies( true );\n        initRepoSession( configuration );\n\n        try\n        {\n            return projectBuilder.build( pom, configuration ).getProject();\n        }\n        catch ( Exception e )\n        {\n            Throwable cause = e.getCause();\n            if ( cause instanceof ModelBuildingException )\n            {\n                String message = \"In: \" + pom + \"\\n\\n\";\n                for ( ModelProblem problem : ( (ModelBuildingException) cause ).getProblems() )\n                {\n                    message += problem + \"\\n\";\n                }\n                System.out.println( message );\n                fail( message );\n            }\n\n            throw e;\n        }\n    }\n","realPath":"maven-core/src/test/java/org/apache/maven/project/AbstractMavenProjectTestCase.java","repoName":"maven","snippetEndLine":0,"snippetStartLine":0,"startLine":124,"status":"M"}],"commitId":"86197aa24a098d90477e71feed6659689d5ac331","commitMessage":"@@@[MNG-5073] ProjectBuilder.build(File. ProjectBuildingRequest) returns null project if dependency version info is missing\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/maven-3/trunk@1176414 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2011-09-27 22:55:56","modifiedFileCount":"8","status":"M","submitter":"Benjamin Bentmann"}]
