[{"authorTime":"2010-08-25 06:46:07","codes":[{"authorDate":"2010-08-25 06:46:07","commitOrder":5,"curCode":"        public CacheKey( Plugin plugin, DependencyFilter extensionFilter, List<RemoteRepository> repositories,\n                         RepositorySystemSession session )\n        {\n            this.plugin = plugin.clone();\n            workspace = CacheUtils.getWorkspace( session );\n            this.localRepo = session.getLocalRepository();\n            this.repositories = new ArrayList<RemoteRepository>( repositories.size() );\n            for ( RemoteRepository repository : repositories )\n            {\n                if ( repository.isRepositoryManager() )\n                {\n                    this.repositories.addAll( repository.getMirroredRepositories() );\n                }\n                else\n                {\n                    this.repositories.add( repository );\n                }\n            }\n            this.filter = extensionFilter;\n\n            int hash = 17;\n            hash = hash * 31 + CacheUtils.pluginHashCode( plugin );\n            hash = hash * 31 + hash( workspace );\n            hash = hash * 31 + hash( localRepo );\n            hash = hash * 31 + CacheUtils.repositoriesHashCode( repositories );\n            hash = hash * 31 + hash( extensionFilter );\n            this.hashCode = hash;\n        }\n","date":"2010-08-25 06:46:07","endLine":90,"groupId":"6849","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"CacheKey","params":"(Pluginplugin@DependencyFilterextensionFilter@List<RemoteRepository>repositories@RepositorySystemSessionsession)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-maven-10-0.7/blobInfo/CC_OUT/blobs/b6/6dc22c9bb0a015a3c5da4092dc7fdccedb22a4.src","preCode":"        public CacheKey( Plugin plugin, DependencyFilter extensionFilter, List<RemoteRepository> repositories,\n                         RepositorySystemSession session )\n        {\n            this.plugin = plugin.clone();\n            workspace = CacheUtils.getWorkspace( session );\n            this.localRepo = session.getLocalRepository();\n            this.repositories = new ArrayList<RemoteRepository>( repositories.size() );\n            for ( RemoteRepository repository : repositories )\n            {\n                if ( repository.isRepositoryManager() )\n                {\n                    this.repositories.addAll( repository.getMirroredRepositories() );\n                }\n                else\n                {\n                    this.repositories.add( repository );\n                }\n            }\n            this.filter = extensionFilter;\n\n            int hash = 17;\n            hash = hash * 31 + CacheUtils.pluginHashCode( plugin );\n            hash = hash * 31 + hash( workspace );\n            hash = hash * 31 + hash( localRepo );\n            hash = hash * 31 + CacheUtils.repositoriesHashCode( repositories );\n            hash = hash * 31 + hash( extensionFilter );\n            this.hashCode = hash;\n        }\n","realPath":"maven-core/src/main/java/org/apache/maven/plugin/DefaultPluginArtifactsCache.java","repoName":"maven","snippetEndLine":0,"snippetStartLine":0,"startLine":63,"status":"MB"},{"authorDate":"2010-08-25 06:46:07","commitOrder":5,"curCode":"        public CacheKey( Plugin plugin, ClassLoader parentRealm, List<String> parentImports,\n                         DependencyFilter dependencyFilter, List<RemoteRepository> repositories,\n                         RepositorySystemSession session )\n        {\n            this.plugin = plugin.clone();\n            this.workspace = CacheUtils.getWorkspace( session );\n            this.localRepo = session.getLocalRepository();\n            this.repositories = new ArrayList<RemoteRepository>( repositories.size() );\n            for ( RemoteRepository repository : repositories )\n            {\n                if ( repository.isRepositoryManager() )\n                {\n                    this.repositories.addAll( repository.getMirroredRepositories() );\n                }\n                else\n                {\n                    this.repositories.add( repository );\n                }\n            }\n            this.parentRealm = parentRealm;\n            this.parentImports = ( parentImports != null ) ? parentImports : Collections.<String> emptyList();\n            this.filter = dependencyFilter;\n\n            int hash = 17;\n            hash = hash * 31 + CacheUtils.pluginHashCode( plugin );\n            hash = hash * 31 + hash( workspace );\n            hash = hash * 31 + hash( localRepo );\n            hash = hash * 31 + CacheUtils.repositoriesHashCode( repositories );\n            hash = hash * 31 + hash( parentRealm );\n            hash = hash * 31 + this.parentImports.hashCode();\n            hash = hash * 31 + hash( dependencyFilter );\n            this.hashCode = hash;\n        }\n","date":"2010-08-25 06:46:07","endLine":99,"groupId":"113","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"CacheKey","params":"(Pluginplugin@ClassLoaderparentRealm@List<String>parentImports@DependencyFilterdependencyFilter@List<RemoteRepository>repositories@RepositorySystemSessionsession)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-maven-10-0.7/blobInfo/CC_OUT/blobs/f1/b46bb9bfba8e39734f04bb1280c996093f15b1.src","preCode":"        public CacheKey( Plugin plugin, ClassLoader parentRealm, List<String> parentImports,\n                         DependencyFilter dependencyFilter, List<RemoteRepository> repositories,\n                         RepositorySystemSession session )\n        {\n            this.plugin = plugin.clone();\n            this.workspace = CacheUtils.getWorkspace( session );\n            this.localRepo = session.getLocalRepository();\n            this.repositories = new ArrayList<RemoteRepository>( repositories.size() );\n            for ( RemoteRepository repository : repositories )\n            {\n                if ( repository.isRepositoryManager() )\n                {\n                    this.repositories.addAll( repository.getMirroredRepositories() );\n                }\n                else\n                {\n                    this.repositories.add( repository );\n                }\n            }\n            this.parentRealm = parentRealm;\n            this.parentImports = ( parentImports != null ) ? parentImports : Collections.<String> emptyList();\n            this.filter = dependencyFilter;\n\n            int hash = 17;\n            hash = hash * 31 + CacheUtils.pluginHashCode( plugin );\n            hash = hash * 31 + hash( workspace );\n            hash = hash * 31 + hash( localRepo );\n            hash = hash * 31 + CacheUtils.repositoriesHashCode( repositories );\n            hash = hash * 31 + hash( parentRealm );\n            hash = hash * 31 + this.parentImports.hashCode();\n            hash = hash * 31 + hash( dependencyFilter );\n            this.hashCode = hash;\n        }\n","realPath":"maven-core/src/main/java/org/apache/maven/plugin/DefaultPluginRealmCache.java","repoName":"maven","snippetEndLine":0,"snippetStartLine":0,"startLine":67,"status":"MB"}],"commitId":"6c37a89744149e68f198429fb7eac70fe1707360","commitMessage":"@@@[MNG-4756] Aether integration\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/maven-3/trunk@988749 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2010-08-25 06:46:07","modifiedFileCount":"102","status":"M","submitter":"Benjamin Bentmann"},{"authorTime":"2011-01-15 13:25:59","codes":[{"authorDate":"2010-08-25 06:46:07","commitOrder":6,"curCode":"        public CacheKey( Plugin plugin, DependencyFilter extensionFilter, List<RemoteRepository> repositories,\n                         RepositorySystemSession session )\n        {\n            this.plugin = plugin.clone();\n            workspace = CacheUtils.getWorkspace( session );\n            this.localRepo = session.getLocalRepository();\n            this.repositories = new ArrayList<RemoteRepository>( repositories.size() );\n            for ( RemoteRepository repository : repositories )\n            {\n                if ( repository.isRepositoryManager() )\n                {\n                    this.repositories.addAll( repository.getMirroredRepositories() );\n                }\n                else\n                {\n                    this.repositories.add( repository );\n                }\n            }\n            this.filter = extensionFilter;\n\n            int hash = 17;\n            hash = hash * 31 + CacheUtils.pluginHashCode( plugin );\n            hash = hash * 31 + hash( workspace );\n            hash = hash * 31 + hash( localRepo );\n            hash = hash * 31 + CacheUtils.repositoriesHashCode( repositories );\n            hash = hash * 31 + hash( extensionFilter );\n            this.hashCode = hash;\n        }\n","date":"2010-08-25 06:46:07","endLine":90,"groupId":"6849","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"CacheKey","params":"(Pluginplugin@DependencyFilterextensionFilter@List<RemoteRepository>repositories@RepositorySystemSessionsession)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-maven-10-0.7/blobInfo/CC_OUT/blobs/b6/6dc22c9bb0a015a3c5da4092dc7fdccedb22a4.src","preCode":"        public CacheKey( Plugin plugin, DependencyFilter extensionFilter, List<RemoteRepository> repositories,\n                         RepositorySystemSession session )\n        {\n            this.plugin = plugin.clone();\n            workspace = CacheUtils.getWorkspace( session );\n            this.localRepo = session.getLocalRepository();\n            this.repositories = new ArrayList<RemoteRepository>( repositories.size() );\n            for ( RemoteRepository repository : repositories )\n            {\n                if ( repository.isRepositoryManager() )\n                {\n                    this.repositories.addAll( repository.getMirroredRepositories() );\n                }\n                else\n                {\n                    this.repositories.add( repository );\n                }\n            }\n            this.filter = extensionFilter;\n\n            int hash = 17;\n            hash = hash * 31 + CacheUtils.pluginHashCode( plugin );\n            hash = hash * 31 + hash( workspace );\n            hash = hash * 31 + hash( localRepo );\n            hash = hash * 31 + CacheUtils.repositoriesHashCode( repositories );\n            hash = hash * 31 + hash( extensionFilter );\n            this.hashCode = hash;\n        }\n","realPath":"maven-core/src/main/java/org/apache/maven/plugin/DefaultPluginArtifactsCache.java","repoName":"maven","snippetEndLine":0,"snippetStartLine":0,"startLine":63,"status":"N"},{"authorDate":"2011-01-15 13:25:59","commitOrder":6,"curCode":"        public CacheKey( Plugin plugin, ClassLoader parentRealm, Map<String, ClassLoader> foreignImports,\n                         DependencyFilter dependencyFilter, List<RemoteRepository> repositories,\n                         RepositorySystemSession session )\n        {\n            this.plugin = plugin.clone();\n            this.workspace = CacheUtils.getWorkspace( session );\n            this.localRepo = session.getLocalRepository();\n            this.repositories = new ArrayList<RemoteRepository>( repositories.size() );\n            for ( RemoteRepository repository : repositories )\n            {\n                if ( repository.isRepositoryManager() )\n                {\n                    this.repositories.addAll( repository.getMirroredRepositories() );\n                }\n                else\n                {\n                    this.repositories.add( repository );\n                }\n            }\n            this.parentRealm = parentRealm;\n            this.foreignImports =\n                ( foreignImports != null ) ? foreignImports : Collections.<String, ClassLoader> emptyMap();\n            this.filter = dependencyFilter;\n\n            int hash = 17;\n            hash = hash * 31 + CacheUtils.pluginHashCode( plugin );\n            hash = hash * 31 + hash( workspace );\n            hash = hash * 31 + hash( localRepo );\n            hash = hash * 31 + CacheUtils.repositoriesHashCode( repositories );\n            hash = hash * 31 + hash( parentRealm );\n            hash = hash * 31 + this.foreignImports.hashCode();\n            hash = hash * 31 + hash( dependencyFilter );\n            this.hashCode = hash;\n        }\n","date":"2011-01-15 13:25:59","endLine":100,"groupId":"113","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"CacheKey","params":"(Pluginplugin@ClassLoaderparentRealm@Map<String@ClassLoader>foreignImports@DependencyFilterdependencyFilter@List<RemoteRepository>repositories@RepositorySystemSessionsession)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-maven-10-0.7/blobInfo/CC_OUT/blobs/89/6236741eb14474d9d60500e9f45266278c2c67.src","preCode":"        public CacheKey( Plugin plugin, ClassLoader parentRealm, List<String> parentImports,\n                         DependencyFilter dependencyFilter, List<RemoteRepository> repositories,\n                         RepositorySystemSession session )\n        {\n            this.plugin = plugin.clone();\n            this.workspace = CacheUtils.getWorkspace( session );\n            this.localRepo = session.getLocalRepository();\n            this.repositories = new ArrayList<RemoteRepository>( repositories.size() );\n            for ( RemoteRepository repository : repositories )\n            {\n                if ( repository.isRepositoryManager() )\n                {\n                    this.repositories.addAll( repository.getMirroredRepositories() );\n                }\n                else\n                {\n                    this.repositories.add( repository );\n                }\n            }\n            this.parentRealm = parentRealm;\n            this.parentImports = ( parentImports != null ) ? parentImports : Collections.<String> emptyList();\n            this.filter = dependencyFilter;\n\n            int hash = 17;\n            hash = hash * 31 + CacheUtils.pluginHashCode( plugin );\n            hash = hash * 31 + hash( workspace );\n            hash = hash * 31 + hash( localRepo );\n            hash = hash * 31 + CacheUtils.repositoriesHashCode( repositories );\n            hash = hash * 31 + hash( parentRealm );\n            hash = hash * 31 + this.parentImports.hashCode();\n            hash = hash * 31 + hash( dependencyFilter );\n            this.hashCode = hash;\n        }\n","realPath":"maven-core/src/main/java/org/apache/maven/plugin/DefaultPluginRealmCache.java","repoName":"maven","snippetEndLine":0,"snippetStartLine":0,"startLine":67,"status":"M"}],"commitId":"586709aadd290ed67e5f80e00a8dc555afb7f912","commitMessage":"@@@[MNG-4973] [regression] Build extensions are invisible to plugins in multi module build\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/maven-3/trunk@1059266 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2011-01-15 13:25:59","modifiedFileCount":"3","status":"M","submitter":"Benjamin Bentmann"},{"authorTime":"2015-03-06 14:12:21","codes":[{"authorDate":"2015-03-06 14:12:21","commitOrder":7,"curCode":"        public CacheKey( Plugin plugin, DependencyFilter extensionFilter, List<RemoteRepository> repositories,\n                         RepositorySystemSession session )\n        {\n            this.plugin = plugin.clone();\n            workspace = CacheUtils.getWorkspace( session );\n            this.localRepo = session.getLocalRepository();\n            this.repositories = new ArrayList<>( repositories.size() );\n            for ( RemoteRepository repository : repositories )\n            {\n                if ( repository.isRepositoryManager() )\n                {\n                    this.repositories.addAll( repository.getMirroredRepositories() );\n                }\n                else\n                {\n                    this.repositories.add( repository );\n                }\n            }\n            this.filter = extensionFilter;\n\n            int hash = 17;\n            hash = hash * 31 + CacheUtils.pluginHashCode( plugin );\n            hash = hash * 31 + hash( workspace );\n            hash = hash * 31 + hash( localRepo );\n            hash = hash * 31 + CacheUtils.repositoriesHashCode( repositories );\n            hash = hash * 31 + hash( extensionFilter );\n            this.hashCode = hash;\n        }\n","date":"2015-06-20 16:56:07","endLine":90,"groupId":"6849","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"CacheKey","params":"(Pluginplugin@DependencyFilterextensionFilter@List<RemoteRepository>repositories@RepositorySystemSessionsession)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-maven-10-0.7/blobInfo/CC_OUT/blobs/34/170618bcc9c45cfad2f6147727aa468009dcff.src","preCode":"        public CacheKey( Plugin plugin, DependencyFilter extensionFilter, List<RemoteRepository> repositories,\n                         RepositorySystemSession session )\n        {\n            this.plugin = plugin.clone();\n            workspace = CacheUtils.getWorkspace( session );\n            this.localRepo = session.getLocalRepository();\n            this.repositories = new ArrayList<RemoteRepository>( repositories.size() );\n            for ( RemoteRepository repository : repositories )\n            {\n                if ( repository.isRepositoryManager() )\n                {\n                    this.repositories.addAll( repository.getMirroredRepositories() );\n                }\n                else\n                {\n                    this.repositories.add( repository );\n                }\n            }\n            this.filter = extensionFilter;\n\n            int hash = 17;\n            hash = hash * 31 + CacheUtils.pluginHashCode( plugin );\n            hash = hash * 31 + hash( workspace );\n            hash = hash * 31 + hash( localRepo );\n            hash = hash * 31 + CacheUtils.repositoriesHashCode( repositories );\n            hash = hash * 31 + hash( extensionFilter );\n            this.hashCode = hash;\n        }\n","realPath":"maven-core/src/main/java/org/apache/maven/plugin/DefaultPluginArtifactsCache.java","repoName":"maven","snippetEndLine":0,"snippetStartLine":0,"startLine":63,"status":"M"},{"authorDate":"2015-03-06 14:12:21","commitOrder":7,"curCode":"        public CacheKey( Plugin plugin, ClassLoader parentRealm, Map<String, ClassLoader> foreignImports,\n                         DependencyFilter dependencyFilter, List<RemoteRepository> repositories,\n                         RepositorySystemSession session )\n        {\n            this.plugin = plugin.clone();\n            this.workspace = CacheUtils.getWorkspace( session );\n            this.localRepo = session.getLocalRepository();\n            this.repositories = new ArrayList<>( repositories.size() );\n            for ( RemoteRepository repository : repositories )\n            {\n                if ( repository.isRepositoryManager() )\n                {\n                    this.repositories.addAll( repository.getMirroredRepositories() );\n                }\n                else\n                {\n                    this.repositories.add( repository );\n                }\n            }\n            this.parentRealm = parentRealm;\n            this.foreignImports =\n                ( foreignImports != null ) ? foreignImports : Collections.<String, ClassLoader>emptyMap();\n            this.filter = dependencyFilter;\n\n            int hash = 17;\n            hash = hash * 31 + CacheUtils.pluginHashCode( plugin );\n            hash = hash * 31 + hash( workspace );\n            hash = hash * 31 + hash( localRepo );\n            hash = hash * 31 + CacheUtils.repositoriesHashCode( repositories );\n            hash = hash * 31 + hash( parentRealm );\n            hash = hash * 31 + this.foreignImports.hashCode();\n            hash = hash * 31 + hash( dependencyFilter );\n            this.hashCode = hash;\n        }\n","date":"2015-06-20 16:56:07","endLine":102,"groupId":"113","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"CacheKey","params":"(Pluginplugin@ClassLoaderparentRealm@Map<String@ClassLoader>foreignImports@DependencyFilterdependencyFilter@List<RemoteRepository>repositories@RepositorySystemSessionsession)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-maven-10-0.7/blobInfo/CC_OUT/blobs/56/a34c1d3e18cfbfae1057dea493ff3c46ceaf67.src","preCode":"        public CacheKey( Plugin plugin, ClassLoader parentRealm, Map<String, ClassLoader> foreignImports,\n                         DependencyFilter dependencyFilter, List<RemoteRepository> repositories,\n                         RepositorySystemSession session )\n        {\n            this.plugin = plugin.clone();\n            this.workspace = CacheUtils.getWorkspace( session );\n            this.localRepo = session.getLocalRepository();\n            this.repositories = new ArrayList<RemoteRepository>( repositories.size() );\n            for ( RemoteRepository repository : repositories )\n            {\n                if ( repository.isRepositoryManager() )\n                {\n                    this.repositories.addAll( repository.getMirroredRepositories() );\n                }\n                else\n                {\n                    this.repositories.add( repository );\n                }\n            }\n            this.parentRealm = parentRealm;\n            this.foreignImports =\n                ( foreignImports != null ) ? foreignImports : Collections.<String, ClassLoader>emptyMap();\n            this.filter = dependencyFilter;\n\n            int hash = 17;\n            hash = hash * 31 + CacheUtils.pluginHashCode( plugin );\n            hash = hash * 31 + hash( workspace );\n            hash = hash * 31 + hash( localRepo );\n            hash = hash * 31 + CacheUtils.repositoriesHashCode( repositories );\n            hash = hash * 31 + hash( parentRealm );\n            hash = hash * 31 + this.foreignImports.hashCode();\n            hash = hash * 31 + hash( dependencyFilter );\n            this.hashCode = hash;\n        }\n","realPath":"maven-core/src/main/java/org/apache/maven/plugin/DefaultPluginRealmCache.java","repoName":"maven","snippetEndLine":0,"snippetStartLine":0,"startLine":69,"status":"M"}],"commitId":"7badeb5b5bdfb48dd3c9533d224418d0648b76ce","commitMessage":"@@@Upgraded to java7 language features\n","date":"2015-06-20 16:56:07","modifiedFileCount":"234","status":"M","submitter":"Kristian Rosenvold"},{"authorTime":"2017-12-22 21:25:46","codes":[{"authorDate":"2017-12-22 21:25:46","commitOrder":8,"curCode":"        public CacheKey( Plugin plugin, DependencyFilter extensionFilter, List<RemoteRepository> repositories,\n                         RepositorySystemSession session )\n        {\n            this.plugin = plugin.clone();\n            workspace = RepositoryUtils.getWorkspace( session );\n            this.localRepo = session.getLocalRepository();\n            this.repositories = new ArrayList<>( repositories.size() );\n            for ( RemoteRepository repository : repositories )\n            {\n                if ( repository.isRepositoryManager() )\n                {\n                    this.repositories.addAll( repository.getMirroredRepositories() );\n                }\n                else\n                {\n                    this.repositories.add( repository );\n                }\n            }\n            this.filter = extensionFilter;\n\n            int hash = 17;\n            hash = hash * 31 + CacheUtils.pluginHashCode( plugin );\n            hash = hash * 31 + Objects.hashCode( workspace );\n            hash = hash * 31 + Objects.hashCode( localRepo );\n            hash = hash * 31 + RepositoryUtils.repositoriesHashCode( repositories );\n            hash = hash * 31 + Objects.hashCode( extensionFilter );\n            this.hashCode = hash;\n        }\n","date":"2017-12-22 21:25:46","endLine":92,"groupId":"10676","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"CacheKey","params":"(Pluginplugin@DependencyFilterextensionFilter@List<RemoteRepository>repositories@RepositorySystemSessionsession)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-maven-10-0.7/blobInfo/CC_OUT/blobs/b4/9e25e7010e8b198f39e536290ce77b9471ab68.src","preCode":"        public CacheKey( Plugin plugin, DependencyFilter extensionFilter, List<RemoteRepository> repositories,\n                         RepositorySystemSession session )\n        {\n            this.plugin = plugin.clone();\n            workspace = CacheUtils.getWorkspace( session );\n            this.localRepo = session.getLocalRepository();\n            this.repositories = new ArrayList<>( repositories.size() );\n            for ( RemoteRepository repository : repositories )\n            {\n                if ( repository.isRepositoryManager() )\n                {\n                    this.repositories.addAll( repository.getMirroredRepositories() );\n                }\n                else\n                {\n                    this.repositories.add( repository );\n                }\n            }\n            this.filter = extensionFilter;\n\n            int hash = 17;\n            hash = hash * 31 + CacheUtils.pluginHashCode( plugin );\n            hash = hash * 31 + hash( workspace );\n            hash = hash * 31 + hash( localRepo );\n            hash = hash * 31 + CacheUtils.repositoriesHashCode( repositories );\n            hash = hash * 31 + hash( extensionFilter );\n            this.hashCode = hash;\n        }\n","realPath":"maven-core/src/main/java/org/apache/maven/plugin/DefaultPluginArtifactsCache.java","repoName":"maven","snippetEndLine":0,"snippetStartLine":0,"startLine":65,"status":"M"},{"authorDate":"2017-12-22 21:25:46","commitOrder":8,"curCode":"        public CacheKey( Plugin plugin, ClassLoader parentRealm, Map<String, ClassLoader> foreignImports,\n                         DependencyFilter dependencyFilter, List<RemoteRepository> repositories,\n                         RepositorySystemSession session )\n        {\n            this.plugin = plugin.clone();\n            this.workspace = RepositoryUtils.getWorkspace( session );\n            this.localRepo = session.getLocalRepository();\n            this.repositories = new ArrayList<>( repositories.size() );\n            for ( RemoteRepository repository : repositories )\n            {\n                if ( repository.isRepositoryManager() )\n                {\n                    this.repositories.addAll( repository.getMirroredRepositories() );\n                }\n                else\n                {\n                    this.repositories.add( repository );\n                }\n            }\n            this.parentRealm = parentRealm;\n            this.foreignImports =\n                ( foreignImports != null ) ? foreignImports : Collections.<String, ClassLoader>emptyMap();\n            this.filter = dependencyFilter;\n\n            int hash = 17;\n            hash = hash * 31 + CacheUtils.pluginHashCode( plugin );\n            hash = hash * 31 + Objects.hashCode( workspace );\n            hash = hash * 31 + Objects.hashCode( localRepo );\n            hash = hash * 31 + RepositoryUtils.repositoriesHashCode( repositories );\n            hash = hash * 31 + Objects.hashCode( parentRealm );\n            hash = hash * 31 + this.foreignImports.hashCode();\n            hash = hash * 31 + Objects.hashCode( dependencyFilter );\n            this.hashCode = hash;\n        }\n","date":"2017-12-22 21:25:46","endLine":105,"groupId":"10676","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"CacheKey","params":"(Pluginplugin@ClassLoaderparentRealm@Map<String@ClassLoader>foreignImports@DependencyFilterdependencyFilter@List<RemoteRepository>repositories@RepositorySystemSessionsession)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-maven-10-0.7/blobInfo/CC_OUT/blobs/1c/09d9b4e51201d21ec3f2a724fd7f48a0300e39.src","preCode":"        public CacheKey( Plugin plugin, ClassLoader parentRealm, Map<String, ClassLoader> foreignImports,\n                         DependencyFilter dependencyFilter, List<RemoteRepository> repositories,\n                         RepositorySystemSession session )\n        {\n            this.plugin = plugin.clone();\n            this.workspace = CacheUtils.getWorkspace( session );\n            this.localRepo = session.getLocalRepository();\n            this.repositories = new ArrayList<>( repositories.size() );\n            for ( RemoteRepository repository : repositories )\n            {\n                if ( repository.isRepositoryManager() )\n                {\n                    this.repositories.addAll( repository.getMirroredRepositories() );\n                }\n                else\n                {\n                    this.repositories.add( repository );\n                }\n            }\n            this.parentRealm = parentRealm;\n            this.foreignImports =\n                ( foreignImports != null ) ? foreignImports : Collections.<String, ClassLoader>emptyMap();\n            this.filter = dependencyFilter;\n\n            int hash = 17;\n            hash = hash * 31 + CacheUtils.pluginHashCode( plugin );\n            hash = hash * 31 + hash( workspace );\n            hash = hash * 31 + hash( localRepo );\n            hash = hash * 31 + CacheUtils.repositoriesHashCode( repositories );\n            hash = hash * 31 + hash( parentRealm );\n            hash = hash * 31 + this.foreignImports.hashCode();\n            hash = hash * 31 + hash( dependencyFilter );\n            this.hashCode = hash;\n        }\n","realPath":"maven-core/src/main/java/org/apache/maven/plugin/DefaultPluginRealmCache.java","repoName":"maven","snippetEndLine":0,"snippetStartLine":0,"startLine":72,"status":"M"}],"commitId":"98af937bc6298e82e489b5f0cd3fb0a1c3d37109","commitMessage":"@@@[MNG-6300] Multi module release creates empty directories in war file instead of jars\n","date":"2017-12-22 21:25:46","modifiedFileCount":"7","status":"M","submitter":"rfscholte"}]
