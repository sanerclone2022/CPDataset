[{"authorTime":"2009-10-27 04:16:00","codes":[{"authorDate":"2009-10-27 04:16:00","commitOrder":1,"curCode":"    public void testDependencyManagementOverridesTransitiveDependencyVersion()\n        throws Exception\n    {\n        File localRepo = getLocalRepositoryPath();\n        File pom0 = new File( localRepo, \"p0/pom.xml\" );\n        File pom0Basedir = pom0.getParentFile();\n        File pom1 = new File( pom0Basedir, \"p1/pom.xml\" );\n\n        \r\n        MavenProject project0 = getProjectWithDependencies( pom0 );\n        MavenProject project1 = getProjectWithDependencies( pom1 );\n\n        assertEquals( pom0Basedir, project1.getParent().getBasedir().getCanonicalFile() );\n        Set set = project1.getArtifacts();\n        assertNotNull( \"No artifacts\", set );\n        assertTrue( \"No Artifacts\", set.size() > 0 );\n        assertTrue( \"Set size should be 3, is \" + set.size(), set.size() == 3 );\n\n        Iterator iter = set.iterator();\n        while ( iter.hasNext() )\n        {\n            Artifact artifact = (Artifact) iter.next();\n            System.out.println( \"Artifact: \" + artifact.getDependencyConflictId() + \" \" + artifact.getVersion()\n              + \" Optional=\" + ( artifact.isOptional() ? \"true\" : \"false\" ) );\n            assertTrue( \"Incorrect version for \" + artifact.getDependencyConflictId(),\n                        artifact.getVersion().equals( \"1.0\" ) );\n        }\n\n    }\n","date":"2009-10-27 04:16:00","endLine":84,"groupId":"2082","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testDependencyManagementOverridesTransitiveDependencyVersion","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-maven-10-0.7/blobInfo/CC_OUT/blobs/0f/5b5180cdf4a983de001efc4cd6c7a67c526354.src","preCode":"    public void testDependencyManagementOverridesTransitiveDependencyVersion()\n        throws Exception\n    {\n        File localRepo = getLocalRepositoryPath();\n        File pom0 = new File( localRepo, \"p0/pom.xml\" );\n        File pom0Basedir = pom0.getParentFile();\n        File pom1 = new File( pom0Basedir, \"p1/pom.xml\" );\n\n        \r\n        MavenProject project0 = getProjectWithDependencies( pom0 );\n        MavenProject project1 = getProjectWithDependencies( pom1 );\n\n        assertEquals( pom0Basedir, project1.getParent().getBasedir().getCanonicalFile() );\n        Set set = project1.getArtifacts();\n        assertNotNull( \"No artifacts\", set );\n        assertTrue( \"No Artifacts\", set.size() > 0 );\n        assertTrue( \"Set size should be 3, is \" + set.size(), set.size() == 3 );\n\n        Iterator iter = set.iterator();\n        while ( iter.hasNext() )\n        {\n            Artifact artifact = (Artifact) iter.next();\n            System.out.println( \"Artifact: \" + artifact.getDependencyConflictId() + \" \" + artifact.getVersion()\n              + \" Optional=\" + ( artifact.isOptional() ? \"true\" : \"false\" ) );\n            assertTrue( \"Incorrect version for \" + artifact.getDependencyConflictId(),\n                        artifact.getVersion().equals( \"1.0\" ) );\n        }\n\n    }\n","realPath":"maven-compat/src/test/java/org/apache/maven/project/inheritance/t04/ProjectInheritanceTest.java","repoName":"maven","snippetEndLine":0,"snippetStartLine":0,"startLine":56,"status":"B"},{"authorDate":"2009-10-27 04:16:00","commitOrder":1,"curCode":"    public void testDependencyManagementOverridesTransitiveDependencyVersion()\n        throws Exception\n    {\n        File localRepo = getLocalRepositoryPath();\n\n        File pom0 = new File( localRepo, \"p0/pom.xml\" );\n        File pom0Basedir = pom0.getParentFile();\n        File pom1 = new File( pom0Basedir, \"p1/pom.xml\" );\n\n        \r\n        MavenProject project0 = getProjectWithDependencies( pom0 );\n        MavenProject project1 = getProjectWithDependencies( pom1 );\n\n        assertEquals( pom0Basedir, project1.getParent().getBasedir().getCanonicalFile() );\n        System.out.println(\"Project \" + project1.getId() + \" \" + project1);\n        Map map = project1.getArtifactMap();\n        assertNotNull(\"No artifacts\", map);\n        assertTrue(\"No Artifacts\", map.size() > 0);\n        assertTrue(\"Set size should be 3, is \" + map.size(), map.size() == 3);\n\n        Artifact a = (Artifact) map.get(\"maven-test:t10-a\");\n        Artifact b = (Artifact) map.get(\"maven-test:t10-b\");\n        Artifact c = (Artifact) map.get(\"maven-test:t10-c\");\n\n        assertNotNull( a );\n        assertNotNull( b );\n        assertNotNull( c );\n\n        \r\n        System.out.println(a.getScope());\n        assertTrue(\"Incorrect scope for \" + a.getDependencyConflictId(), a.getScope().equals(\"test\"));\n\n        \r\n        assertTrue(\"Incorrect scope for \" + b.getDependencyConflictId(), b.getScope().equals(\"runtime\"));\n\n        \r\n        assertTrue(\"Incorrect scope for \" + c.getDependencyConflictId(), c.getScope().equals(\"runtime\"));\n\n    }\n","date":"2009-10-27 04:16:00","endLine":94,"groupId":"2082","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testDependencyManagementOverridesTransitiveDependencyVersion","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-maven-10-0.7/blobInfo/CC_OUT/blobs/34/57e827e407e42dbd8e1b0540ffa74d9b4bf55d.src","preCode":"    public void testDependencyManagementOverridesTransitiveDependencyVersion()\n        throws Exception\n    {\n        File localRepo = getLocalRepositoryPath();\n\n        File pom0 = new File( localRepo, \"p0/pom.xml\" );\n        File pom0Basedir = pom0.getParentFile();\n        File pom1 = new File( pom0Basedir, \"p1/pom.xml\" );\n\n        \r\n        MavenProject project0 = getProjectWithDependencies( pom0 );\n        MavenProject project1 = getProjectWithDependencies( pom1 );\n\n        assertEquals( pom0Basedir, project1.getParent().getBasedir().getCanonicalFile() );\n        System.out.println(\"Project \" + project1.getId() + \" \" + project1);\n        Map map = project1.getArtifactMap();\n        assertNotNull(\"No artifacts\", map);\n        assertTrue(\"No Artifacts\", map.size() > 0);\n        assertTrue(\"Set size should be 3, is \" + map.size(), map.size() == 3);\n\n        Artifact a = (Artifact) map.get(\"maven-test:t10-a\");\n        Artifact b = (Artifact) map.get(\"maven-test:t10-b\");\n        Artifact c = (Artifact) map.get(\"maven-test:t10-c\");\n\n        assertNotNull( a );\n        assertNotNull( b );\n        assertNotNull( c );\n\n        \r\n        System.out.println(a.getScope());\n        assertTrue(\"Incorrect scope for \" + a.getDependencyConflictId(), a.getScope().equals(\"test\"));\n\n        \r\n        assertTrue(\"Incorrect scope for \" + b.getDependencyConflictId(), b.getScope().equals(\"runtime\"));\n\n        \r\n        assertTrue(\"Incorrect scope for \" + c.getDependencyConflictId(), c.getScope().equals(\"runtime\"));\n\n    }\n","realPath":"maven-compat/src/test/java/org/apache/maven/project/inheritance/t10/ProjectInheritanceTest.java","repoName":"maven","snippetEndLine":0,"snippetStartLine":0,"startLine":56,"status":"B"}],"commitId":"20f8323b0a993799f77db49c787829449a17b8c0","commitMessage":"@@@[MNG-4221] Push all repository/artifact related code into a legacy module and create a backward compat layer for external consumers\n\no Refactored code to make maven-compat depend on maven-core.  this got ugly regarding some tests which to a high degree depend on a full-blown repository system\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/maven-3/trunk@829934 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2009-10-27 04:16:00","modifiedFileCount":"12","status":"B","submitter":"Benjamin Bentmann"},{"authorTime":"2010-05-27 14:37:07","codes":[{"authorDate":"2010-05-27 14:37:07","commitOrder":2,"curCode":"    public void testDependencyManagementOverridesTransitiveDependencyVersion()\n        throws Exception\n    {\n        File localRepo = getLocalRepositoryPath();\n        File pom0 = new File( localRepo, \"p0/pom.xml\" );\n        File pom0Basedir = pom0.getParentFile();\n        File pom1 = new File( pom0Basedir, \"p1/pom.xml\" );\n\n        \r\n        MavenProject project0 = getProjectWithDependencies( pom0 );\n        MavenProject project1 = getProjectWithDependencies( pom1 );\n\n        assertEquals( pom0Basedir, project1.getParent().getBasedir() );\n        Set set = project1.getArtifacts();\n        assertNotNull( \"No artifacts\", set );\n        assertTrue( \"No Artifacts\", set.size() > 0 );\n        assertTrue( \"Set size should be 3, is \" + set.size(), set.size() == 3 );\n\n        Iterator iter = set.iterator();\n        while ( iter.hasNext() )\n        {\n            Artifact artifact = (Artifact) iter.next();\n            System.out.println( \"Artifact: \" + artifact.getDependencyConflictId() + \" \" + artifact.getVersion()\n              + \" Optional=\" + ( artifact.isOptional() ? \"true\" : \"false\" ) );\n            assertTrue( \"Incorrect version for \" + artifact.getDependencyConflictId(),\n                        artifact.getVersion().equals( \"1.0\" ) );\n        }\n\n    }\n","date":"2010-05-27 14:37:07","endLine":84,"groupId":"1443","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testDependencyManagementOverridesTransitiveDependencyVersion","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-maven-10-0.7/blobInfo/CC_OUT/blobs/f4/aa2c7eb50ead5f4fb1c3bdb303315313be93c1.src","preCode":"    public void testDependencyManagementOverridesTransitiveDependencyVersion()\n        throws Exception\n    {\n        File localRepo = getLocalRepositoryPath();\n        File pom0 = new File( localRepo, \"p0/pom.xml\" );\n        File pom0Basedir = pom0.getParentFile();\n        File pom1 = new File( pom0Basedir, \"p1/pom.xml\" );\n\n        \r\n        MavenProject project0 = getProjectWithDependencies( pom0 );\n        MavenProject project1 = getProjectWithDependencies( pom1 );\n\n        assertEquals( pom0Basedir, project1.getParent().getBasedir().getCanonicalFile() );\n        Set set = project1.getArtifacts();\n        assertNotNull( \"No artifacts\", set );\n        assertTrue( \"No Artifacts\", set.size() > 0 );\n        assertTrue( \"Set size should be 3, is \" + set.size(), set.size() == 3 );\n\n        Iterator iter = set.iterator();\n        while ( iter.hasNext() )\n        {\n            Artifact artifact = (Artifact) iter.next();\n            System.out.println( \"Artifact: \" + artifact.getDependencyConflictId() + \" \" + artifact.getVersion()\n              + \" Optional=\" + ( artifact.isOptional() ? \"true\" : \"false\" ) );\n            assertTrue( \"Incorrect version for \" + artifact.getDependencyConflictId(),\n                        artifact.getVersion().equals( \"1.0\" ) );\n        }\n\n    }\n","realPath":"maven-compat/src/test/java/org/apache/maven/project/inheritance/t04/ProjectInheritanceTest.java","repoName":"maven","snippetEndLine":0,"snippetStartLine":0,"startLine":56,"status":"M"},{"authorDate":"2010-05-27 14:37:07","commitOrder":2,"curCode":"    public void testDependencyManagementOverridesTransitiveDependencyVersion()\n        throws Exception\n    {\n        File localRepo = getLocalRepositoryPath();\n\n        File pom0 = new File( localRepo, \"p0/pom.xml\" );\n        File pom0Basedir = pom0.getParentFile();\n        File pom1 = new File( pom0Basedir, \"p1/pom.xml\" );\n\n        \r\n        MavenProject project0 = getProjectWithDependencies( pom0 );\n        MavenProject project1 = getProjectWithDependencies( pom1 );\n\n        assertEquals( pom0Basedir, project1.getParent().getBasedir() );\n        System.out.println(\"Project \" + project1.getId() + \" \" + project1);\n        Map map = project1.getArtifactMap();\n        assertNotNull(\"No artifacts\", map);\n        assertTrue(\"No Artifacts\", map.size() > 0);\n        assertTrue(\"Set size should be 3, is \" + map.size(), map.size() == 3);\n\n        Artifact a = (Artifact) map.get(\"maven-test:t10-a\");\n        Artifact b = (Artifact) map.get(\"maven-test:t10-b\");\n        Artifact c = (Artifact) map.get(\"maven-test:t10-c\");\n\n        assertNotNull( a );\n        assertNotNull( b );\n        assertNotNull( c );\n\n        \r\n        System.out.println(a.getScope());\n        assertTrue(\"Incorrect scope for \" + a.getDependencyConflictId(), a.getScope().equals(\"test\"));\n\n        \r\n        assertTrue(\"Incorrect scope for \" + b.getDependencyConflictId(), b.getScope().equals(\"runtime\"));\n\n        \r\n        assertTrue(\"Incorrect scope for \" + c.getDependencyConflictId(), c.getScope().equals(\"runtime\"));\n\n    }\n","date":"2010-05-27 14:37:07","endLine":94,"groupId":"2082","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testDependencyManagementOverridesTransitiveDependencyVersion","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-maven-10-0.7/blobInfo/CC_OUT/blobs/6b/113ad84124ef75a4caa1b86c87805d570c1d4e.src","preCode":"    public void testDependencyManagementOverridesTransitiveDependencyVersion()\n        throws Exception\n    {\n        File localRepo = getLocalRepositoryPath();\n\n        File pom0 = new File( localRepo, \"p0/pom.xml\" );\n        File pom0Basedir = pom0.getParentFile();\n        File pom1 = new File( pom0Basedir, \"p1/pom.xml\" );\n\n        \r\n        MavenProject project0 = getProjectWithDependencies( pom0 );\n        MavenProject project1 = getProjectWithDependencies( pom1 );\n\n        assertEquals( pom0Basedir, project1.getParent().getBasedir().getCanonicalFile() );\n        System.out.println(\"Project \" + project1.getId() + \" \" + project1);\n        Map map = project1.getArtifactMap();\n        assertNotNull(\"No artifacts\", map);\n        assertTrue(\"No Artifacts\", map.size() > 0);\n        assertTrue(\"Set size should be 3, is \" + map.size(), map.size() == 3);\n\n        Artifact a = (Artifact) map.get(\"maven-test:t10-a\");\n        Artifact b = (Artifact) map.get(\"maven-test:t10-b\");\n        Artifact c = (Artifact) map.get(\"maven-test:t10-c\");\n\n        assertNotNull( a );\n        assertNotNull( b );\n        assertNotNull( c );\n\n        \r\n        System.out.println(a.getScope());\n        assertTrue(\"Incorrect scope for \" + a.getDependencyConflictId(), a.getScope().equals(\"test\"));\n\n        \r\n        assertTrue(\"Incorrect scope for \" + b.getDependencyConflictId(), b.getScope().equals(\"runtime\"));\n\n        \r\n        assertTrue(\"Incorrect scope for \" + c.getDependencyConflictId(), c.getScope().equals(\"runtime\"));\n\n    }\n","realPath":"maven-compat/src/test/java/org/apache/maven/project/inheritance/t10/ProjectInheritanceTest.java","repoName":"maven","snippetEndLine":0,"snippetStartLine":0,"startLine":56,"status":"M"}],"commitId":"770b6d905f3e0a13c6cbc09e24d0cf8b5c1c2833","commitMessage":"@@@o Fixed tests to account for the discrepancy that OSX has a case-insensitive file system yet java.io.File compares case-sensitively\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/maven-3/trunk@948687 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2010-05-27 14:37:07","modifiedFileCount":"9","status":"M","submitter":"Benjamin Bentmann"},{"authorTime":"2010-05-27 14:37:07","codes":[{"authorDate":"2013-06-12 04:21:54","commitOrder":3,"curCode":"    public void testDependencyManagementOverridesTransitiveDependencyVersion()\n        throws Exception\n    {\n        File localRepo = getLocalRepositoryPath();\n        File pom0 = new File( localRepo, \"p0/pom.xml\" );\n        File pom0Basedir = pom0.getParentFile();\n        File pom1 = new File( pom0Basedir, \"p1/pom.xml\" );\n\n        \r\n        MavenProject project0 = getProjectWithDependencies( pom0 );\n        MavenProject project1 = getProjectWithDependencies( pom1 );\n\n        assertEquals( pom0Basedir, project1.getParent().getBasedir() );\n        Set set = project1.getArtifacts();\n        assertNotNull( \"No artifacts\", set );\n        assertTrue( \"No Artifacts\", set.size() > 0 );\n        assertTrue( \"Set size should be 3, is \" + set.size(), set.size() == 3 );\n\n        for ( Object aSet : set )\n        {\n            Artifact artifact = (Artifact) aSet;\n            System.out.println(\n                \"Artifact: \" + artifact.getDependencyConflictId() + \" \" + artifact.getVersion() + \" Optional=\" + (\n                    artifact.isOptional()\n                        ? \"true\"\n                        : \"false\" ) );\n            assertTrue( \"Incorrect version for \" + artifact.getDependencyConflictId(),\n                        artifact.getVersion().equals( \"1.0\" ) );\n        }\n\n    }\n","date":"2013-06-12 04:21:54","endLine":85,"groupId":"5972","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testDependencyManagementOverridesTransitiveDependencyVersion","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-maven-10-0.7/blobInfo/CC_OUT/blobs/e2/4262f1a3dfb4d2196be217c460987b14ef1842.src","preCode":"    public void testDependencyManagementOverridesTransitiveDependencyVersion()\n        throws Exception\n    {\n        File localRepo = getLocalRepositoryPath();\n        File pom0 = new File( localRepo, \"p0/pom.xml\" );\n        File pom0Basedir = pom0.getParentFile();\n        File pom1 = new File( pom0Basedir, \"p1/pom.xml\" );\n\n        \r\n        MavenProject project0 = getProjectWithDependencies( pom0 );\n        MavenProject project1 = getProjectWithDependencies( pom1 );\n\n        assertEquals( pom0Basedir, project1.getParent().getBasedir() );\n        Set set = project1.getArtifacts();\n        assertNotNull( \"No artifacts\", set );\n        assertTrue( \"No Artifacts\", set.size() > 0 );\n        assertTrue( \"Set size should be 3, is \" + set.size(), set.size() == 3 );\n\n        Iterator iter = set.iterator();\n        while ( iter.hasNext() )\n        {\n            Artifact artifact = (Artifact) iter.next();\n            System.out.println( \"Artifact: \" + artifact.getDependencyConflictId() + \" \" + artifact.getVersion()\n              + \" Optional=\" + ( artifact.isOptional() ? \"true\" : \"false\" ) );\n            assertTrue( \"Incorrect version for \" + artifact.getDependencyConflictId(),\n                        artifact.getVersion().equals( \"1.0\" ) );\n        }\n\n    }\n","realPath":"maven-compat/src/test/java/org/apache/maven/project/inheritance/t04/ProjectInheritanceTest.java","repoName":"maven","snippetEndLine":0,"snippetStartLine":0,"startLine":55,"status":"M"},{"authorDate":"2010-05-27 14:37:07","commitOrder":3,"curCode":"    public void testDependencyManagementOverridesTransitiveDependencyVersion()\n        throws Exception\n    {\n        File localRepo = getLocalRepositoryPath();\n\n        File pom0 = new File( localRepo, \"p0/pom.xml\" );\n        File pom0Basedir = pom0.getParentFile();\n        File pom1 = new File( pom0Basedir, \"p1/pom.xml\" );\n\n        \r\n        MavenProject project0 = getProjectWithDependencies( pom0 );\n        MavenProject project1 = getProjectWithDependencies( pom1 );\n\n        assertEquals( pom0Basedir, project1.getParent().getBasedir() );\n        System.out.println(\"Project \" + project1.getId() + \" \" + project1);\n        Map map = project1.getArtifactMap();\n        assertNotNull(\"No artifacts\", map);\n        assertTrue(\"No Artifacts\", map.size() > 0);\n        assertTrue(\"Set size should be 3, is \" + map.size(), map.size() == 3);\n\n        Artifact a = (Artifact) map.get(\"maven-test:t10-a\");\n        Artifact b = (Artifact) map.get(\"maven-test:t10-b\");\n        Artifact c = (Artifact) map.get(\"maven-test:t10-c\");\n\n        assertNotNull( a );\n        assertNotNull( b );\n        assertNotNull( c );\n\n        \r\n        System.out.println(a.getScope());\n        assertTrue(\"Incorrect scope for \" + a.getDependencyConflictId(), a.getScope().equals(\"test\"));\n\n        \r\n        assertTrue(\"Incorrect scope for \" + b.getDependencyConflictId(), b.getScope().equals(\"runtime\"));\n\n        \r\n        assertTrue(\"Incorrect scope for \" + c.getDependencyConflictId(), c.getScope().equals(\"runtime\"));\n\n    }\n","date":"2010-05-27 14:37:07","endLine":94,"groupId":"2082","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testDependencyManagementOverridesTransitiveDependencyVersion","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-maven-10-0.7/blobInfo/CC_OUT/blobs/6b/113ad84124ef75a4caa1b86c87805d570c1d4e.src","preCode":"    public void testDependencyManagementOverridesTransitiveDependencyVersion()\n        throws Exception\n    {\n        File localRepo = getLocalRepositoryPath();\n\n        File pom0 = new File( localRepo, \"p0/pom.xml\" );\n        File pom0Basedir = pom0.getParentFile();\n        File pom1 = new File( pom0Basedir, \"p1/pom.xml\" );\n\n        \r\n        MavenProject project0 = getProjectWithDependencies( pom0 );\n        MavenProject project1 = getProjectWithDependencies( pom1 );\n\n        assertEquals( pom0Basedir, project1.getParent().getBasedir() );\n        System.out.println(\"Project \" + project1.getId() + \" \" + project1);\n        Map map = project1.getArtifactMap();\n        assertNotNull(\"No artifacts\", map);\n        assertTrue(\"No Artifacts\", map.size() > 0);\n        assertTrue(\"Set size should be 3, is \" + map.size(), map.size() == 3);\n\n        Artifact a = (Artifact) map.get(\"maven-test:t10-a\");\n        Artifact b = (Artifact) map.get(\"maven-test:t10-b\");\n        Artifact c = (Artifact) map.get(\"maven-test:t10-c\");\n\n        assertNotNull( a );\n        assertNotNull( b );\n        assertNotNull( c );\n\n        \r\n        System.out.println(a.getScope());\n        assertTrue(\"Incorrect scope for \" + a.getDependencyConflictId(), a.getScope().equals(\"test\"));\n\n        \r\n        assertTrue(\"Incorrect scope for \" + b.getDependencyConflictId(), b.getScope().equals(\"runtime\"));\n\n        \r\n        assertTrue(\"Incorrect scope for \" + c.getDependencyConflictId(), c.getScope().equals(\"runtime\"));\n\n    }\n","realPath":"maven-compat/src/test/java/org/apache/maven/project/inheritance/t10/ProjectInheritanceTest.java","repoName":"maven","snippetEndLine":0,"snippetStartLine":0,"startLine":56,"status":"N"}],"commitId":"d92746dc25bdce073571cf6fd8f78d6573fe75f0","commitMessage":"@@@Code cleanup - Maven requires Java 5+ : Replace for and while loops by for each\n","date":"2013-06-12 04:21:54","modifiedFileCount":"20","status":"M","submitter":"Arnaud He?ritier"},{"authorTime":"2021-01-15 22:07:06","codes":[{"authorDate":"2021-01-15 22:07:06","commitOrder":4,"curCode":"    public void testDependencyManagementOverridesTransitiveDependencyVersion()\n        throws Exception\n    {\n        File localRepo = getLocalRepositoryPath();\n        File pom0 = new File( localRepo, \"p0/pom.xml\" );\n        File pom0Basedir = pom0.getParentFile();\n        File pom1 = new File( pom0Basedir, \"p1/pom.xml\" );\n\n        \r\n        MavenProject project0 = getProjectWithDependencies( pom0 );\n        MavenProject project1 = getProjectWithDependencies( pom1 );\n\n        assertEquals( pom0Basedir, project1.getParent().getBasedir() );\n        Set set = project1.getArtifacts();\n        assertNotNull( set, \"No artifacts\" );\n        assertTrue( set.size() > 0, \"No Artifacts\" );\n        assertTrue( set.size() == 3, \"Set size should be 3, is \" + set.size() );\n\n        for ( Object aSet : set )\n        {\n            Artifact artifact = (Artifact) aSet;\n            System.out.println(\n                \"Artifact: \" + artifact.getDependencyConflictId() + \" \" + artifact.getVersion() + \" Optional=\" + (\n                    artifact.isOptional()\n                        ? \"true\"\n                        : \"false\" ) );\n            assertTrue( artifact.getVersion().equals( \"1.0\" ),\n                        \"Incorrect version for \" + artifact.getDependencyConflictId() );\n        }\n\n    }\n","date":"2021-01-15 22:07:06","endLine":90,"groupId":"10161","id":7,"instanceNumber":1,"isCurCommit":1,"methodName":"testDependencyManagementOverridesTransitiveDependencyVersion","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-maven-10-0.7/blobInfo/CC_OUT/blobs/34/a31d5e2104ad22d2d1516145b90475f04990c5.src","preCode":"    public void testDependencyManagementOverridesTransitiveDependencyVersion()\n        throws Exception\n    {\n        File localRepo = getLocalRepositoryPath();\n        File pom0 = new File( localRepo, \"p0/pom.xml\" );\n        File pom0Basedir = pom0.getParentFile();\n        File pom1 = new File( pom0Basedir, \"p1/pom.xml\" );\n\n        \r\n        MavenProject project0 = getProjectWithDependencies( pom0 );\n        MavenProject project1 = getProjectWithDependencies( pom1 );\n\n        assertEquals( pom0Basedir, project1.getParent().getBasedir() );\n        Set set = project1.getArtifacts();\n        assertNotNull( \"No artifacts\", set );\n        assertTrue( \"No Artifacts\", set.size() > 0 );\n        assertTrue( \"Set size should be 3, is \" + set.size(), set.size() == 3 );\n\n        for ( Object aSet : set )\n        {\n            Artifact artifact = (Artifact) aSet;\n            System.out.println(\n                \"Artifact: \" + artifact.getDependencyConflictId() + \" \" + artifact.getVersion() + \" Optional=\" + (\n                    artifact.isOptional()\n                        ? \"true\"\n                        : \"false\" ) );\n            assertTrue( \"Incorrect version for \" + artifact.getDependencyConflictId(),\n                        artifact.getVersion().equals( \"1.0\" ) );\n        }\n\n    }\n","realPath":"maven-compat/src/test/java/org/apache/maven/project/inheritance/t04/ProjectInheritanceTest.java","repoName":"maven","snippetEndLine":0,"snippetStartLine":0,"startLine":60,"status":"M"},{"authorDate":"2021-01-15 22:07:06","commitOrder":4,"curCode":"    public void testDependencyManagementOverridesTransitiveDependencyVersion()\n        throws Exception\n    {\n        File localRepo = getLocalRepositoryPath();\n\n        File pom0 = new File( localRepo, \"p0/pom.xml\" );\n        File pom0Basedir = pom0.getParentFile();\n        File pom1 = new File( pom0Basedir, \"p1/pom.xml\" );\n\n        \r\n        MavenProject project0 = getProjectWithDependencies( pom0 );\n        MavenProject project1 = getProjectWithDependencies( pom1 );\n\n        assertEquals( pom0Basedir, project1.getParent().getBasedir() );\n        System.out.println(\"Project \" + project1.getId() + \" \" + project1);\n        Map map = project1.getArtifactMap();\n        assertNotNull( map, \"No artifacts\" );\n        assertTrue( map.size() > 0, \"No Artifacts\" );\n        assertTrue( map.size() == 3, \"Set size should be 3, is \" + map.size() );\n\n        Artifact a = (Artifact) map.get(\"maven-test:t10-a\");\n        Artifact b = (Artifact) map.get(\"maven-test:t10-b\");\n        Artifact c = (Artifact) map.get(\"maven-test:t10-c\");\n\n        assertNotNull( a );\n        assertNotNull( b );\n        assertNotNull( c );\n\n        \r\n        System.out.println(a.getScope());\n        assertTrue( a.getScope().equals(\"test\"), \"Incorrect scope for \" + a.getDependencyConflictId() );\n\n        \r\n        assertTrue( b.getScope().equals(\"runtime\"), \"Incorrect scope for \" + b.getDependencyConflictId() );\n\n        \r\n        assertTrue( c.getScope().equals(\"runtime\"), \"Incorrect scope for \" + c.getDependencyConflictId() );\n\n    }\n","date":"2021-01-15 22:07:06","endLine":99,"groupId":"10161","id":8,"instanceNumber":2,"isCurCommit":1,"methodName":"testDependencyManagementOverridesTransitiveDependencyVersion","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-maven-10-0.7/blobInfo/CC_OUT/blobs/b1/e74087ba5a05a1ac93d384764e40cc8530e777.src","preCode":"    public void testDependencyManagementOverridesTransitiveDependencyVersion()\n        throws Exception\n    {\n        File localRepo = getLocalRepositoryPath();\n\n        File pom0 = new File( localRepo, \"p0/pom.xml\" );\n        File pom0Basedir = pom0.getParentFile();\n        File pom1 = new File( pom0Basedir, \"p1/pom.xml\" );\n\n        \r\n        MavenProject project0 = getProjectWithDependencies( pom0 );\n        MavenProject project1 = getProjectWithDependencies( pom1 );\n\n        assertEquals( pom0Basedir, project1.getParent().getBasedir() );\n        System.out.println(\"Project \" + project1.getId() + \" \" + project1);\n        Map map = project1.getArtifactMap();\n        assertNotNull(\"No artifacts\", map);\n        assertTrue(\"No Artifacts\", map.size() > 0);\n        assertTrue(\"Set size should be 3, is \" + map.size(), map.size() == 3);\n\n        Artifact a = (Artifact) map.get(\"maven-test:t10-a\");\n        Artifact b = (Artifact) map.get(\"maven-test:t10-b\");\n        Artifact c = (Artifact) map.get(\"maven-test:t10-c\");\n\n        assertNotNull( a );\n        assertNotNull( b );\n        assertNotNull( c );\n\n        \r\n        System.out.println(a.getScope());\n        assertTrue(\"Incorrect scope for \" + a.getDependencyConflictId(), a.getScope().equals(\"test\"));\n\n        \r\n        assertTrue(\"Incorrect scope for \" + b.getDependencyConflictId(), b.getScope().equals(\"runtime\"));\n\n        \r\n        assertTrue(\"Incorrect scope for \" + c.getDependencyConflictId(), c.getScope().equals(\"runtime\"));\n\n    }\n","realPath":"maven-compat/src/test/java/org/apache/maven/project/inheritance/t10/ProjectInheritanceTest.java","repoName":"maven","snippetEndLine":0,"snippetStartLine":0,"startLine":61,"status":"M"}],"commitId":"bb916d0784c7631866167928e4d0615df3317567","commitMessage":"@@@[MNG-7035] Migrate unit tests to Unit 5\n\nSigned-off-by: rfscholte <rfscholte@apache.org>\n","date":"2021-01-15 22:07:06","modifiedFileCount":"208","status":"M","submitter":"Guillaume Nodet"}]
