[{"authorTime":"2010-04-08 19:29:13","codes":[{"authorDate":"2010-04-08 19:29:13","commitOrder":1,"curCode":"    public static MavenExecutionPlan getProjectAExceutionPlan()\n        throws PluginNotFoundException, PluginResolutionException, LifecyclePhaseNotFoundException,\n        PluginDescriptorParsingException, MojoNotFoundException, InvalidPluginDescriptorException,\n        NoPluginFoundForPrefixException, LifecycleNotFoundException, PluginVersionResolutionException\n    {\n        List<MojoExecution> me = new ArrayList<MojoExecution>();\n        me.add( createMojoExecution( new Plugin(), \"enforce\", \"enforce-versions\", VALIDATE ) );\n        me.add( createMojoExecution( new Plugin(), \"resources\", \"default-resources\", PROCESS_RESOURCES ) );\n        me.add( createMojoExecution( new Plugin(), \"compile\", \"default-compile\", COMPILE ) );\n        me.add( createMojoExecution( new Plugin(), \"testResources\", \"default-testResources\", PROCESS_TEST_RESOURCES ) );\n        me.add( createMojoExecution( new Plugin(), \"testCompile\", \"default-testCompile\", TEST_COMPILE ) );\n        me.add( createMojoExecution( new Plugin(), \"test\", \"default-test\", TEST ) );\n        me.add( createMojoExecution( new Plugin(), \"war\", \"default-war\", PACKAGE ) );\n        me.add( createMojoExecution( new Plugin(), \"install\", \"default-install\", INSTALL ) );\n        final List<ExecutionPlanItem> executionPlanItem =\n            DefaultLifecyclesStub.createDefaultLifeCycles().createExecutionPlanItem(\n                ProjectDependencyGraphStub.A.getExecutionProject(), me );\n        return new MavenExecutionPlan( getScopes(), getScopes(), executionPlanItem );\n    }\n","date":"2010-04-08 19:29:13","endLine":125,"groupId":"659","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"getProjectAExceutionPlan","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-maven-10-0.7/blobInfo/CC_OUT/blobs/bd/d4aa30a7117bea87dd907d980583331d09148e.src","preCode":"    public static MavenExecutionPlan getProjectAExceutionPlan()\n        throws PluginNotFoundException, PluginResolutionException, LifecyclePhaseNotFoundException,\n        PluginDescriptorParsingException, MojoNotFoundException, InvalidPluginDescriptorException,\n        NoPluginFoundForPrefixException, LifecycleNotFoundException, PluginVersionResolutionException\n    {\n        List<MojoExecution> me = new ArrayList<MojoExecution>();\n        me.add( createMojoExecution( new Plugin(), \"enforce\", \"enforce-versions\", VALIDATE ) );\n        me.add( createMojoExecution( new Plugin(), \"resources\", \"default-resources\", PROCESS_RESOURCES ) );\n        me.add( createMojoExecution( new Plugin(), \"compile\", \"default-compile\", COMPILE ) );\n        me.add( createMojoExecution( new Plugin(), \"testResources\", \"default-testResources\", PROCESS_TEST_RESOURCES ) );\n        me.add( createMojoExecution( new Plugin(), \"testCompile\", \"default-testCompile\", TEST_COMPILE ) );\n        me.add( createMojoExecution( new Plugin(), \"test\", \"default-test\", TEST ) );\n        me.add( createMojoExecution( new Plugin(), \"war\", \"default-war\", PACKAGE ) );\n        me.add( createMojoExecution( new Plugin(), \"install\", \"default-install\", INSTALL ) );\n        final List<ExecutionPlanItem> executionPlanItem =\n            DefaultLifecyclesStub.createDefaultLifeCycles().createExecutionPlanItem(\n                ProjectDependencyGraphStub.A.getExecutionProject(), me );\n        return new MavenExecutionPlan( getScopes(), getScopes(), executionPlanItem );\n    }\n","realPath":"maven-core/src/test/java/org/apache/maven/lifecycle/internal/stub/LifecycleExecutionPlanCalculatorStub.java","repoName":"maven","snippetEndLine":0,"snippetStartLine":0,"startLine":107,"status":"B"},{"authorDate":"2010-04-08 19:29:13","commitOrder":1,"curCode":"    public static MavenExecutionPlan getProjectBExecutionPlan()\n        throws PluginNotFoundException, PluginResolutionException, LifecyclePhaseNotFoundException,\n        PluginDescriptorParsingException, MojoNotFoundException, InvalidPluginDescriptorException,\n        NoPluginFoundForPrefixException, LifecycleNotFoundException, PluginVersionResolutionException\n    {\n        List<MojoExecution> me = new ArrayList<MojoExecution>();\n        me.add( createMojoExecution( new Plugin(), \"enforce\", \"enforce-versions\", VALIDATE ) );\n        me.add( createMojoExecution( new Plugin(), \"resources\", \"default-resources\", PROCESS_RESOURCES ) );\n        me.add( createMojoExecution( new Plugin(), \"compile\", \"default-compile\", COMPILE ) );\n        me.add( createMojoExecution( new Plugin(), \"testResources\", \"default-testResources\", PROCESS_TEST_RESOURCES ) );\n        me.add( createMojoExecution( new Plugin(), \"testCompile\", \"default-testCompile\", TEST_COMPILE ) );\n        me.add( createMojoExecution( new Plugin(), \"test\", \"default-test\", TEST ) );\n        final List<ExecutionPlanItem> planItem =\n            DefaultLifecyclesStub.createDefaultLifeCycles().createExecutionPlanItem(\n                ProjectDependencyGraphStub.B.getExecutionProject(), me );\n        return new MavenExecutionPlan( getScopes(), getScopes(), planItem );\n    }\n","date":"2010-04-08 19:29:13","endLine":143,"groupId":"659","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"getProjectBExecutionPlan","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-maven-10-0.7/blobInfo/CC_OUT/blobs/bd/d4aa30a7117bea87dd907d980583331d09148e.src","preCode":"    public static MavenExecutionPlan getProjectBExecutionPlan()\n        throws PluginNotFoundException, PluginResolutionException, LifecyclePhaseNotFoundException,\n        PluginDescriptorParsingException, MojoNotFoundException, InvalidPluginDescriptorException,\n        NoPluginFoundForPrefixException, LifecycleNotFoundException, PluginVersionResolutionException\n    {\n        List<MojoExecution> me = new ArrayList<MojoExecution>();\n        me.add( createMojoExecution( new Plugin(), \"enforce\", \"enforce-versions\", VALIDATE ) );\n        me.add( createMojoExecution( new Plugin(), \"resources\", \"default-resources\", PROCESS_RESOURCES ) );\n        me.add( createMojoExecution( new Plugin(), \"compile\", \"default-compile\", COMPILE ) );\n        me.add( createMojoExecution( new Plugin(), \"testResources\", \"default-testResources\", PROCESS_TEST_RESOURCES ) );\n        me.add( createMojoExecution( new Plugin(), \"testCompile\", \"default-testCompile\", TEST_COMPILE ) );\n        me.add( createMojoExecution( new Plugin(), \"test\", \"default-test\", TEST ) );\n        final List<ExecutionPlanItem> planItem =\n            DefaultLifecyclesStub.createDefaultLifeCycles().createExecutionPlanItem(\n                ProjectDependencyGraphStub.B.getExecutionProject(), me );\n        return new MavenExecutionPlan( getScopes(), getScopes(), planItem );\n    }\n","realPath":"maven-core/src/test/java/org/apache/maven/lifecycle/internal/stub/LifecycleExecutionPlanCalculatorStub.java","repoName":"maven","snippetEndLine":0,"snippetStartLine":0,"startLine":127,"status":"B"}],"commitId":"83237e46af5654c51c5c9005b054c1ffa01e327d","commitMessage":"@@@[MNG-3004] Concurrent building of multimodule projects\n\nThis commit consists of a modularization of the DefaultLifecycleExecutor into smaller\ncomponents. This is primarily done with the intention of extracting execution strategy \nsomewhat from the rest of the logic.\n\nIt also contains three differenent execution strategies:\nA) Linear (\"Classic\")\nB) Parallel (Based on Dan's original implemementation)\nC) Weave (Still experimental) \n\n \nThe command line -T option activates parallel running.  and the argument\nis in the form -T <[nThreads.  a float][C][W]|auto>\n\nNotes:\n* The output demultiplexer is disabled in this commit.  and output will appear intermingled.\n* The modello plugin has known problems\n* Surefire must be run in forkmode at least once.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/maven-3/trunk@931884 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2010-04-08 19:29:13","modifiedFileCount":"21","status":"B","submitter":"Kristian Rosenvold"},{"authorTime":"2010-04-15 05:23:26","codes":[{"authorDate":"2010-04-15 05:23:26","commitOrder":2,"curCode":"    public static MavenExecutionPlan getProjectAExceutionPlan()\n        throws PluginNotFoundException, PluginResolutionException, LifecyclePhaseNotFoundException,\n        PluginDescriptorParsingException, MojoNotFoundException, InvalidPluginDescriptorException,\n        NoPluginFoundForPrefixException, LifecycleNotFoundException, PluginVersionResolutionException\n    {\n        List<MojoExecution> me = new ArrayList<MojoExecution>();\n        me.add( createMojoExecution( new Plugin(), \"initialize\", \"default-initialize\", INITIALIZE ) ); \n        me.add( createMojoExecution( new Plugin(), \"resources\", \"default-resources\", PROCESS_RESOURCES ) );\n        me.add( createMojoExecution( new Plugin(), \"compile\", \"default-compile\", COMPILE ) );\n        me.add( createMojoExecution( new Plugin(), \"testResources\", \"default-testResources\", PROCESS_TEST_RESOURCES ) );\n        me.add( createMojoExecution( new Plugin(), \"testCompile\", \"default-testCompile\", TEST_COMPILE ) );\n        me.add( createMojoExecution( new Plugin(), \"test\", \"default-test\", TEST ) );\n        me.add( createMojoExecution( new Plugin(), \"war\", \"default-war\", PACKAGE ) );\n        me.add( createMojoExecution( new Plugin(), \"install\", \"default-install\", INSTALL ) );\n        return createExecutionPlan( ProjectDependencyGraphStub.A.getExecutionProject(), me );\n    }\n","date":"2010-04-15 05:23:26","endLine":135,"groupId":"659","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"getProjectAExceutionPlan","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-maven-10-0.7/blobInfo/CC_OUT/blobs/6e/9e997bfd7d36df0e6d85e99e68cccda5f4aa5d.src","preCode":"    public static MavenExecutionPlan getProjectAExceutionPlan()\n        throws PluginNotFoundException, PluginResolutionException, LifecyclePhaseNotFoundException,\n        PluginDescriptorParsingException, MojoNotFoundException, InvalidPluginDescriptorException,\n        NoPluginFoundForPrefixException, LifecycleNotFoundException, PluginVersionResolutionException\n    {\n        List<MojoExecution> me = new ArrayList<MojoExecution>();\n        me.add( createMojoExecution( new Plugin(), \"enforce\", \"enforce-versions\", VALIDATE ) );\n        me.add( createMojoExecution( new Plugin(), \"resources\", \"default-resources\", PROCESS_RESOURCES ) );\n        me.add( createMojoExecution( new Plugin(), \"compile\", \"default-compile\", COMPILE ) );\n        me.add( createMojoExecution( new Plugin(), \"testResources\", \"default-testResources\", PROCESS_TEST_RESOURCES ) );\n        me.add( createMojoExecution( new Plugin(), \"testCompile\", \"default-testCompile\", TEST_COMPILE ) );\n        me.add( createMojoExecution( new Plugin(), \"test\", \"default-test\", TEST ) );\n        me.add( createMojoExecution( new Plugin(), \"war\", \"default-war\", PACKAGE ) );\n        me.add( createMojoExecution( new Plugin(), \"install\", \"default-install\", INSTALL ) );\n        final List<ExecutionPlanItem> executionPlanItem =\n            DefaultLifecyclesStub.createDefaultLifeCycles().createExecutionPlanItem(\n                ProjectDependencyGraphStub.A.getExecutionProject(), me );\n        return new MavenExecutionPlan( getScopes(), getScopes(), executionPlanItem );\n    }\n","realPath":"maven-core/src/test/java/org/apache/maven/lifecycle/internal/stub/LifecycleExecutionPlanCalculatorStub.java","repoName":"maven","snippetEndLine":0,"snippetStartLine":0,"startLine":120,"status":"M"},{"authorDate":"2010-04-15 05:23:26","commitOrder":2,"curCode":"    public static MavenExecutionPlan getProjectBExecutionPlan()\n        throws PluginNotFoundException, PluginResolutionException, LifecyclePhaseNotFoundException,\n        PluginDescriptorParsingException, MojoNotFoundException, InvalidPluginDescriptorException,\n        NoPluginFoundForPrefixException, LifecycleNotFoundException, PluginVersionResolutionException\n    {\n        List<MojoExecution> me = new ArrayList<MojoExecution>();\n        me.add( createMojoExecution( new Plugin(), \"enforce\", \"enforce-versions\", VALIDATE ) );\n        me.add( createMojoExecution( new Plugin(), \"resources\", \"default-resources\", PROCESS_RESOURCES ) );\n        me.add( createMojoExecution( new Plugin(), \"compile\", \"default-compile\", COMPILE ) );\n        me.add( createMojoExecution( new Plugin(), \"testResources\", \"default-testResources\", PROCESS_TEST_RESOURCES ) );\n        me.add( createMojoExecution( new Plugin(), \"testCompile\", \"default-testCompile\", TEST_COMPILE ) );\n        me.add( createMojoExecution( new Plugin(), \"test\", \"default-test\", TEST ) );\n        return createExecutionPlan( ProjectDependencyGraphStub.B.getExecutionProject(), me );\n    }\n","date":"2010-04-15 05:23:26","endLine":151,"groupId":"659","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"getProjectBExecutionPlan","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-maven-10-0.7/blobInfo/CC_OUT/blobs/6e/9e997bfd7d36df0e6d85e99e68cccda5f4aa5d.src","preCode":"    public static MavenExecutionPlan getProjectBExecutionPlan()\n        throws PluginNotFoundException, PluginResolutionException, LifecyclePhaseNotFoundException,\n        PluginDescriptorParsingException, MojoNotFoundException, InvalidPluginDescriptorException,\n        NoPluginFoundForPrefixException, LifecycleNotFoundException, PluginVersionResolutionException\n    {\n        List<MojoExecution> me = new ArrayList<MojoExecution>();\n        me.add( createMojoExecution( new Plugin(), \"enforce\", \"enforce-versions\", VALIDATE ) );\n        me.add( createMojoExecution( new Plugin(), \"resources\", \"default-resources\", PROCESS_RESOURCES ) );\n        me.add( createMojoExecution( new Plugin(), \"compile\", \"default-compile\", COMPILE ) );\n        me.add( createMojoExecution( new Plugin(), \"testResources\", \"default-testResources\", PROCESS_TEST_RESOURCES ) );\n        me.add( createMojoExecution( new Plugin(), \"testCompile\", \"default-testCompile\", TEST_COMPILE ) );\n        me.add( createMojoExecution( new Plugin(), \"test\", \"default-test\", TEST ) );\n        final List<ExecutionPlanItem> planItem =\n            DefaultLifecyclesStub.createDefaultLifeCycles().createExecutionPlanItem(\n                ProjectDependencyGraphStub.B.getExecutionProject(), me );\n        return new MavenExecutionPlan( getScopes(), getScopes(), planItem );\n    }\n","realPath":"maven-core/src/test/java/org/apache/maven/lifecycle/internal/stub/LifecycleExecutionPlanCalculatorStub.java","repoName":"maven","snippetEndLine":0,"snippetStartLine":0,"startLine":138,"status":"M"}],"commitId":"95330133d9354eb64c9dc5791bde9aeba7efa9e1","commitMessage":"@@@[MNG-4633] Fixed weave mode bug when building m3 itself in weave mode.\n\nUpdated testcase for MEP.\n\nAlso removed all unused/unecessar code from weave mode.\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/maven-3/trunk@934201 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2010-04-15 05:23:26","modifiedFileCount":"12","status":"M","submitter":"Kristian Rosenvold"},{"authorTime":"2010-04-27 21:07:17","codes":[{"authorDate":"2010-04-27 21:07:17","commitOrder":3,"curCode":"    public static MavenExecutionPlan getProjectAExceutionPlan()\n        throws PluginNotFoundException, PluginResolutionException, LifecyclePhaseNotFoundException,\n        PluginDescriptorParsingException, MojoNotFoundException, InvalidPluginDescriptorException,\n        NoPluginFoundForPrefixException, LifecycleNotFoundException, PluginVersionResolutionException\n    {\n        List<MojoExecution> me = new ArrayList<MojoExecution>();\n        me.add( createMojoExecution( \"initialize\", \"default-initialize\", INITIALIZE ) );\n        me.add( createMojoExecution( \"resources\", \"default-resources\", PROCESS_RESOURCES ) );\n        me.add( createMojoExecution( \"compile\", \"default-compile\", COMPILE ) );\n        me.add( createMojoExecution( \"testResources\", \"default-testResources\", PROCESS_TEST_RESOURCES ) );\n        me.add( createMojoExecution( \"testCompile\", \"default-testCompile\", TEST_COMPILE ) );\n        me.add( createMojoExecution( \"test\", \"default-test\", TEST ) );\n        me.add( createMojoExecution( \"war\", \"default-war\", PACKAGE ) );\n        me.add( createMojoExecution( \"install\", \"default-install\", INSTALL ) );\n        return createExecutionPlan( ProjectDependencyGraphStub.A.getExecutionProject(), me );\n    }\n","date":"2010-04-27 21:07:17","endLine":141,"groupId":"2987","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"getProjectAExceutionPlan","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-maven-10-0.7/blobInfo/CC_OUT/blobs/d8/119d5c781a22a99485ec280427341b3b833de8.src","preCode":"    public static MavenExecutionPlan getProjectAExceutionPlan()\n        throws PluginNotFoundException, PluginResolutionException, LifecyclePhaseNotFoundException,\n        PluginDescriptorParsingException, MojoNotFoundException, InvalidPluginDescriptorException,\n        NoPluginFoundForPrefixException, LifecycleNotFoundException, PluginVersionResolutionException\n    {\n        List<MojoExecution> me = new ArrayList<MojoExecution>();\n        me.add( createMojoExecution( new Plugin(), \"initialize\", \"default-initialize\", INITIALIZE ) ); \n        me.add( createMojoExecution( new Plugin(), \"resources\", \"default-resources\", PROCESS_RESOURCES ) );\n        me.add( createMojoExecution( new Plugin(), \"compile\", \"default-compile\", COMPILE ) );\n        me.add( createMojoExecution( new Plugin(), \"testResources\", \"default-testResources\", PROCESS_TEST_RESOURCES ) );\n        me.add( createMojoExecution( new Plugin(), \"testCompile\", \"default-testCompile\", TEST_COMPILE ) );\n        me.add( createMojoExecution( new Plugin(), \"test\", \"default-test\", TEST ) );\n        me.add( createMojoExecution( new Plugin(), \"war\", \"default-war\", PACKAGE ) );\n        me.add( createMojoExecution( new Plugin(), \"install\", \"default-install\", INSTALL ) );\n        return createExecutionPlan( ProjectDependencyGraphStub.A.getExecutionProject(), me );\n    }\n","realPath":"maven-core/src/test/java/org/apache/maven/lifecycle/internal/stub/LifecycleExecutionPlanCalculatorStub.java","repoName":"maven","snippetEndLine":0,"snippetStartLine":0,"startLine":126,"status":"M"},{"authorDate":"2010-04-27 21:07:17","commitOrder":3,"curCode":"    public static MavenExecutionPlan getProjectBExecutionPlan()\n        throws PluginNotFoundException, PluginResolutionException, LifecyclePhaseNotFoundException,\n        PluginDescriptorParsingException, MojoNotFoundException, InvalidPluginDescriptorException,\n        NoPluginFoundForPrefixException, LifecycleNotFoundException, PluginVersionResolutionException\n    {\n        List<MojoExecution> me = new ArrayList<MojoExecution>();\n        me.add( createMojoExecution( \"enforce\", \"enforce-versions\", VALIDATE ) );\n        me.add( createMojoExecution( \"resources\", \"default-resources\", PROCESS_RESOURCES ) );\n        me.add( createMojoExecution( \"compile\", \"default-compile\", COMPILE ) );\n        me.add( createMojoExecution( \"testResources\", \"default-testResources\", PROCESS_TEST_RESOURCES ) );\n        me.add( createMojoExecution( \"testCompile\", \"default-testCompile\", TEST_COMPILE ) );\n        me.add( createMojoExecution( \"test\", \"default-test\", TEST ) );\n        return createExecutionPlan( ProjectDependencyGraphStub.B.getExecutionProject(), me );\n    }\n","date":"2010-04-27 21:07:17","endLine":156,"groupId":"2987","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"getProjectBExecutionPlan","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-maven-10-0.7/blobInfo/CC_OUT/blobs/d8/119d5c781a22a99485ec280427341b3b833de8.src","preCode":"    public static MavenExecutionPlan getProjectBExecutionPlan()\n        throws PluginNotFoundException, PluginResolutionException, LifecyclePhaseNotFoundException,\n        PluginDescriptorParsingException, MojoNotFoundException, InvalidPluginDescriptorException,\n        NoPluginFoundForPrefixException, LifecycleNotFoundException, PluginVersionResolutionException\n    {\n        List<MojoExecution> me = new ArrayList<MojoExecution>();\n        me.add( createMojoExecution( new Plugin(), \"enforce\", \"enforce-versions\", VALIDATE ) );\n        me.add( createMojoExecution( new Plugin(), \"resources\", \"default-resources\", PROCESS_RESOURCES ) );\n        me.add( createMojoExecution( new Plugin(), \"compile\", \"default-compile\", COMPILE ) );\n        me.add( createMojoExecution( new Plugin(), \"testResources\", \"default-testResources\", PROCESS_TEST_RESOURCES ) );\n        me.add( createMojoExecution( new Plugin(), \"testCompile\", \"default-testCompile\", TEST_COMPILE ) );\n        me.add( createMojoExecution( new Plugin(), \"test\", \"default-test\", TEST ) );\n        return createExecutionPlan( ProjectDependencyGraphStub.B.getExecutionProject(), me );\n    }\n","realPath":"maven-core/src/test/java/org/apache/maven/lifecycle/internal/stub/LifecycleExecutionPlanCalculatorStub.java","repoName":"maven","snippetEndLine":0,"snippetStartLine":0,"startLine":143,"status":"M"}],"commitId":"1a7361596b905497890d5ca90268003b4b0c3ace","commitMessage":"@@@[MNG-4642] Extended MojoDescriptor with threadSafe attribute\n\nAdded support for detecting @threadSafe annotation and a nice noisy.  warning message.\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/maven-3/trunk@938443 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2010-04-27 21:07:17","modifiedFileCount":"8","status":"M","submitter":"Kristian Rosenvold"},{"authorTime":"2015-03-06 14:12:21","codes":[{"authorDate":"2015-03-06 14:12:21","commitOrder":4,"curCode":"    public static MavenExecutionPlan getProjectAExceutionPlan()\n        throws PluginNotFoundException, PluginResolutionException, LifecyclePhaseNotFoundException,\n        PluginDescriptorParsingException, MojoNotFoundException, InvalidPluginDescriptorException,\n        NoPluginFoundForPrefixException, LifecycleNotFoundException, PluginVersionResolutionException\n    {\n        List<MojoExecution> me = new ArrayList<>();\n        me.add( createMojoExecution( \"initialize\", \"default-initialize\", INITIALIZE ) );\n        me.add( createMojoExecution( \"resources\", \"default-resources\", PROCESS_RESOURCES ) );\n        me.add( createMojoExecution( \"compile\", \"default-compile\", COMPILE ) );\n        me.add( createMojoExecution( \"testResources\", \"default-testResources\", PROCESS_TEST_RESOURCES ) );\n        me.add( createMojoExecution( \"testCompile\", \"default-testCompile\", TEST_COMPILE ) );\n        me.add( createMojoExecution( \"test\", \"default-test\", TEST ) );\n        me.add( createMojoExecution( \"war\", \"default-war\", PACKAGE ) );\n        me.add( createMojoExecution( \"install\", \"default-install\", INSTALL ) );\n        return createExecutionPlan( ProjectDependencyGraphStub.A.getExecutionProject(), me );\n    }\n","date":"2015-06-20 16:56:07","endLine":165,"groupId":"10607","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"getProjectAExceutionPlan","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-maven-10-0.7/blobInfo/CC_OUT/blobs/ad/08549379c0794cfc4ffa476132780d105dde03.src","preCode":"    public static MavenExecutionPlan getProjectAExceutionPlan()\n        throws PluginNotFoundException, PluginResolutionException, LifecyclePhaseNotFoundException,\n        PluginDescriptorParsingException, MojoNotFoundException, InvalidPluginDescriptorException,\n        NoPluginFoundForPrefixException, LifecycleNotFoundException, PluginVersionResolutionException\n    {\n        List<MojoExecution> me = new ArrayList<MojoExecution>();\n        me.add( createMojoExecution( \"initialize\", \"default-initialize\", INITIALIZE ) );\n        me.add( createMojoExecution( \"resources\", \"default-resources\", PROCESS_RESOURCES ) );\n        me.add( createMojoExecution( \"compile\", \"default-compile\", COMPILE ) );\n        me.add( createMojoExecution( \"testResources\", \"default-testResources\", PROCESS_TEST_RESOURCES ) );\n        me.add( createMojoExecution( \"testCompile\", \"default-testCompile\", TEST_COMPILE ) );\n        me.add( createMojoExecution( \"test\", \"default-test\", TEST ) );\n        me.add( createMojoExecution( \"war\", \"default-war\", PACKAGE ) );\n        me.add( createMojoExecution( \"install\", \"default-install\", INSTALL ) );\n        return createExecutionPlan( ProjectDependencyGraphStub.A.getExecutionProject(), me );\n    }\n","realPath":"maven-core/src/test/java/org/apache/maven/lifecycle/internal/stub/LifecycleExecutionPlanCalculatorStub.java","repoName":"maven","snippetEndLine":0,"snippetStartLine":0,"startLine":150,"status":"M"},{"authorDate":"2015-03-06 14:12:21","commitOrder":4,"curCode":"    public static MavenExecutionPlan getProjectBExecutionPlan()\n        throws PluginNotFoundException, PluginResolutionException, LifecyclePhaseNotFoundException,\n        PluginDescriptorParsingException, MojoNotFoundException, InvalidPluginDescriptorException,\n        NoPluginFoundForPrefixException, LifecycleNotFoundException, PluginVersionResolutionException\n    {\n        List<MojoExecution> me = new ArrayList<>();\n        me.add( createMojoExecution( \"enforce\", \"enforce-versions\", VALIDATE ) );\n        me.add( createMojoExecution( \"resources\", \"default-resources\", PROCESS_RESOURCES ) );\n        me.add( createMojoExecution( \"compile\", \"default-compile\", COMPILE ) );\n        me.add( createMojoExecution( \"testResources\", \"default-testResources\", PROCESS_TEST_RESOURCES ) );\n        me.add( createMojoExecution( \"testCompile\", \"default-testCompile\", TEST_COMPILE ) );\n        me.add( createMojoExecution( \"test\", \"default-test\", TEST ) );\n        return createExecutionPlan( ProjectDependencyGraphStub.B.getExecutionProject(), me );\n    }\n","date":"2015-06-20 16:56:07","endLine":180,"groupId":"10607","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"getProjectBExecutionPlan","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-maven-10-0.7/blobInfo/CC_OUT/blobs/ad/08549379c0794cfc4ffa476132780d105dde03.src","preCode":"    public static MavenExecutionPlan getProjectBExecutionPlan()\n        throws PluginNotFoundException, PluginResolutionException, LifecyclePhaseNotFoundException,\n        PluginDescriptorParsingException, MojoNotFoundException, InvalidPluginDescriptorException,\n        NoPluginFoundForPrefixException, LifecycleNotFoundException, PluginVersionResolutionException\n    {\n        List<MojoExecution> me = new ArrayList<MojoExecution>();\n        me.add( createMojoExecution( \"enforce\", \"enforce-versions\", VALIDATE ) );\n        me.add( createMojoExecution( \"resources\", \"default-resources\", PROCESS_RESOURCES ) );\n        me.add( createMojoExecution( \"compile\", \"default-compile\", COMPILE ) );\n        me.add( createMojoExecution( \"testResources\", \"default-testResources\", PROCESS_TEST_RESOURCES ) );\n        me.add( createMojoExecution( \"testCompile\", \"default-testCompile\", TEST_COMPILE ) );\n        me.add( createMojoExecution( \"test\", \"default-test\", TEST ) );\n        return createExecutionPlan( ProjectDependencyGraphStub.B.getExecutionProject(), me );\n    }\n","realPath":"maven-core/src/test/java/org/apache/maven/lifecycle/internal/stub/LifecycleExecutionPlanCalculatorStub.java","repoName":"maven","snippetEndLine":0,"snippetStartLine":0,"startLine":167,"status":"M"}],"commitId":"7badeb5b5bdfb48dd3c9533d224418d0648b76ce","commitMessage":"@@@Upgraded to java7 language features\n","date":"2015-06-20 16:56:07","modifiedFileCount":"234","status":"M","submitter":"Kristian Rosenvold"}]
