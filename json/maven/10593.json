[{"authorTime":"2015-01-18 23:53:56","codes":[{"authorDate":"2015-01-18 23:53:56","commitOrder":1,"curCode":"    public void testModelAndFactory()\n    {\n        MavenSession session = mock( MavenSession.class );\n        MavenExecutionRequest executionRequest = new DefaultMavenExecutionRequest();\n        Map<String, List<ToolchainModel>> toolchainModels = new HashMap<String, List<ToolchainModel>>();\n        toolchainModels.put( \"basic\", Arrays.asList( new ToolchainModel(), new ToolchainModel() ) );\n        toolchainModels.put( \"rare\", Collections.singletonList( new ToolchainModel() ) );\n        executionRequest.setToolchains( toolchainModels );\n        when( session.getRequest() ).thenReturn( executionRequest );\n\n        List<Toolchain> toolchains = toolchainManager.getToolchains( session, \"rare\", null );\n\n        assertEquals( 1, toolchains.size() );\n    }\n","date":"2015-01-18 23:53:56","endLine":115,"groupId":"2428","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testModelAndFactory","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-maven-10-0.7/blobInfo/CC_OUT/blobs/d4/64502f2f4e979fe91dd8899089e51ea32d6e38.src","preCode":"    public void testModelAndFactory()\n    {\n        MavenSession session = mock( MavenSession.class );\n        MavenExecutionRequest executionRequest = new DefaultMavenExecutionRequest();\n        Map<String, List<ToolchainModel>> toolchainModels = new HashMap<String, List<ToolchainModel>>();\n        toolchainModels.put( \"basic\", Arrays.asList( new ToolchainModel(), new ToolchainModel() ) );\n        toolchainModels.put( \"rare\", Collections.singletonList( new ToolchainModel() ) );\n        executionRequest.setToolchains( toolchainModels );\n        when( session.getRequest() ).thenReturn( executionRequest );\n\n        List<Toolchain> toolchains = toolchainManager.getToolchains( session, \"rare\", null );\n\n        assertEquals( 1, toolchains.size() );\n    }\n","realPath":"maven-core/src/test/java/org/apache/maven/toolchain/DefaultToolchainManagerTest.java","repoName":"maven","snippetEndLine":0,"snippetStartLine":0,"startLine":102,"status":"B"},{"authorDate":"2015-01-18 23:53:56","commitOrder":1,"curCode":"    public void testRequirements()\n        throws Exception\n    {\n        MavenSession session = mock( MavenSession.class );\n        MavenExecutionRequest executionRequest = new DefaultMavenExecutionRequest();\n        Map<String, List<ToolchainModel>> toolchainModels = new HashMap<String, List<ToolchainModel>>();\n        toolchainModels.put( \"basic\", Arrays.asList( new ToolchainModel(), new ToolchainModel() ) );\n        toolchainModels.put( \"rare\", Collections.singletonList( new ToolchainModel() ) );\n        executionRequest.setToolchains( toolchainModels );\n        when( session.getRequest() ).thenReturn( executionRequest );\n        ToolchainPrivate basicPrivate = mock( ToolchainPrivate.class );\n        when( basicPrivate.matchesRequirements( anyMap() ) ).thenReturn( false ).thenReturn( true );\n        when( toolchainFactory_basicType.createToolchain( isA( ToolchainModel.class ) ) ).thenReturn( basicPrivate );\n\n        List<Toolchain> toolchains =\n            toolchainManager.getToolchains( session, \"basic\", Collections.singletonMap( \"key\", \"value\" ) );\n\n        assertEquals( 1, toolchains.size() );\n    }\n","date":"2015-01-18 23:53:56","endLine":152,"groupId":"2428","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testRequirements","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-maven-10-0.7/blobInfo/CC_OUT/blobs/d4/64502f2f4e979fe91dd8899089e51ea32d6e38.src","preCode":"    public void testRequirements()\n        throws Exception\n    {\n        MavenSession session = mock( MavenSession.class );\n        MavenExecutionRequest executionRequest = new DefaultMavenExecutionRequest();\n        Map<String, List<ToolchainModel>> toolchainModels = new HashMap<String, List<ToolchainModel>>();\n        toolchainModels.put( \"basic\", Arrays.asList( new ToolchainModel(), new ToolchainModel() ) );\n        toolchainModels.put( \"rare\", Collections.singletonList( new ToolchainModel() ) );\n        executionRequest.setToolchains( toolchainModels );\n        when( session.getRequest() ).thenReturn( executionRequest );\n        ToolchainPrivate basicPrivate = mock( ToolchainPrivate.class );\n        when( basicPrivate.matchesRequirements( anyMap() ) ).thenReturn( false ).thenReturn( true );\n        when( toolchainFactory_basicType.createToolchain( isA( ToolchainModel.class ) ) ).thenReturn( basicPrivate );\n\n        List<Toolchain> toolchains =\n            toolchainManager.getToolchains( session, \"basic\", Collections.singletonMap( \"key\", \"value\" ) );\n\n        assertEquals( 1, toolchains.size() );\n    }\n","realPath":"maven-core/src/test/java/org/apache/maven/toolchain/DefaultToolchainManagerTest.java","repoName":"maven","snippetEndLine":0,"snippetStartLine":0,"startLine":134,"status":"B"}],"commitId":"4b263106db043f5c1d7c314237ab2bc8708c0538","commitMessage":"@@@[MNG-5755] Access toolchains without maven-toolchain-plugin\nAdded List<Toolchain> getToolchains( MavenSession session.  String type.  Map<String.  String> requirements ) to ToolchainManager\n","date":"2015-01-18 23:53:56","modifiedFileCount":"3","status":"B","submitter":"Robert Scholte"},{"authorTime":"2015-03-06 14:12:21","codes":[{"authorDate":"2015-03-06 14:12:21","commitOrder":2,"curCode":"    public void testModelAndFactory()\n    {\n        MavenSession session = mock( MavenSession.class );\n        MavenExecutionRequest executionRequest = new DefaultMavenExecutionRequest();\n        Map<String, List<ToolchainModel>> toolchainModels = new HashMap<>();\n        toolchainModels.put( \"basic\", Arrays.asList( new ToolchainModel(), new ToolchainModel() ) );\n        toolchainModels.put( \"rare\", Collections.singletonList( new ToolchainModel() ) );\n        executionRequest.setToolchains( toolchainModels );\n        when( session.getRequest() ).thenReturn( executionRequest );\n\n        List<Toolchain> toolchains = toolchainManager.getToolchains( session, \"rare\", null );\n\n        assertEquals( 1, toolchains.size() );\n    }\n","date":"2015-06-20 16:56:07","endLine":115,"groupId":"2428","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testModelAndFactory","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-maven-10-0.7/blobInfo/CC_OUT/blobs/6e/85c4246f6d93142ea416eaae851c1627b24a17.src","preCode":"    public void testModelAndFactory()\n    {\n        MavenSession session = mock( MavenSession.class );\n        MavenExecutionRequest executionRequest = new DefaultMavenExecutionRequest();\n        Map<String, List<ToolchainModel>> toolchainModels = new HashMap<String, List<ToolchainModel>>();\n        toolchainModels.put( \"basic\", Arrays.asList( new ToolchainModel(), new ToolchainModel() ) );\n        toolchainModels.put( \"rare\", Collections.singletonList( new ToolchainModel() ) );\n        executionRequest.setToolchains( toolchainModels );\n        when( session.getRequest() ).thenReturn( executionRequest );\n\n        List<Toolchain> toolchains = toolchainManager.getToolchains( session, \"rare\", null );\n\n        assertEquals( 1, toolchains.size() );\n    }\n","realPath":"maven-core/src/test/java/org/apache/maven/toolchain/DefaultToolchainManagerTest.java","repoName":"maven","snippetEndLine":0,"snippetStartLine":0,"startLine":102,"status":"M"},{"authorDate":"2015-03-06 14:12:21","commitOrder":2,"curCode":"    public void testRequirements()\n        throws Exception\n    {\n        MavenSession session = mock( MavenSession.class );\n        MavenExecutionRequest executionRequest = new DefaultMavenExecutionRequest();\n        Map<String, List<ToolchainModel>> toolchainModels = new HashMap<>();\n        toolchainModels.put( \"basic\", Arrays.asList( new ToolchainModel(), new ToolchainModel() ) );\n        toolchainModels.put( \"rare\", Collections.singletonList( new ToolchainModel() ) );\n        executionRequest.setToolchains( toolchainModels );\n        when( session.getRequest() ).thenReturn( executionRequest );\n        ToolchainPrivate basicPrivate = mock( ToolchainPrivate.class );\n        when( basicPrivate.matchesRequirements( anyMap() ) ).thenReturn( false ).thenReturn( true );\n        when( toolchainFactory_basicType.createToolchain( isA( ToolchainModel.class ) ) ).thenReturn( basicPrivate );\n\n        List<Toolchain> toolchains =\n            toolchainManager.getToolchains( session, \"basic\", Collections.singletonMap( \"key\", \"value\" ) );\n\n        assertEquals( 1, toolchains.size() );\n    }\n","date":"2015-06-20 16:56:07","endLine":152,"groupId":"2428","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testRequirements","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-maven-10-0.7/blobInfo/CC_OUT/blobs/6e/85c4246f6d93142ea416eaae851c1627b24a17.src","preCode":"    public void testRequirements()\n        throws Exception\n    {\n        MavenSession session = mock( MavenSession.class );\n        MavenExecutionRequest executionRequest = new DefaultMavenExecutionRequest();\n        Map<String, List<ToolchainModel>> toolchainModels = new HashMap<String, List<ToolchainModel>>();\n        toolchainModels.put( \"basic\", Arrays.asList( new ToolchainModel(), new ToolchainModel() ) );\n        toolchainModels.put( \"rare\", Collections.singletonList( new ToolchainModel() ) );\n        executionRequest.setToolchains( toolchainModels );\n        when( session.getRequest() ).thenReturn( executionRequest );\n        ToolchainPrivate basicPrivate = mock( ToolchainPrivate.class );\n        when( basicPrivate.matchesRequirements( anyMap() ) ).thenReturn( false ).thenReturn( true );\n        when( toolchainFactory_basicType.createToolchain( isA( ToolchainModel.class ) ) ).thenReturn( basicPrivate );\n\n        List<Toolchain> toolchains =\n            toolchainManager.getToolchains( session, \"basic\", Collections.singletonMap( \"key\", \"value\" ) );\n\n        assertEquals( 1, toolchains.size() );\n    }\n","realPath":"maven-core/src/test/java/org/apache/maven/toolchain/DefaultToolchainManagerTest.java","repoName":"maven","snippetEndLine":0,"snippetStartLine":0,"startLine":134,"status":"M"}],"commitId":"7badeb5b5bdfb48dd3c9533d224418d0648b76ce","commitMessage":"@@@Upgraded to java7 language features\n","date":"2015-06-20 16:56:07","modifiedFileCount":"234","status":"M","submitter":"Kristian Rosenvold"},{"authorTime":"2018-01-07 08:17:32","codes":[{"authorDate":"2015-03-06 14:12:21","commitOrder":3,"curCode":"    public void testModelAndFactory()\n    {\n        MavenSession session = mock( MavenSession.class );\n        MavenExecutionRequest executionRequest = new DefaultMavenExecutionRequest();\n        Map<String, List<ToolchainModel>> toolchainModels = new HashMap<>();\n        toolchainModels.put( \"basic\", Arrays.asList( new ToolchainModel(), new ToolchainModel() ) );\n        toolchainModels.put( \"rare\", Collections.singletonList( new ToolchainModel() ) );\n        executionRequest.setToolchains( toolchainModels );\n        when( session.getRequest() ).thenReturn( executionRequest );\n\n        List<Toolchain> toolchains = toolchainManager.getToolchains( session, \"rare\", null );\n\n        assertEquals( 1, toolchains.size() );\n    }\n","date":"2015-06-20 16:56:07","endLine":115,"groupId":"10593","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testModelAndFactory","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-maven-10-0.7/blobInfo/CC_OUT/blobs/6e/85c4246f6d93142ea416eaae851c1627b24a17.src","preCode":"    public void testModelAndFactory()\n    {\n        MavenSession session = mock( MavenSession.class );\n        MavenExecutionRequest executionRequest = new DefaultMavenExecutionRequest();\n        Map<String, List<ToolchainModel>> toolchainModels = new HashMap<>();\n        toolchainModels.put( \"basic\", Arrays.asList( new ToolchainModel(), new ToolchainModel() ) );\n        toolchainModels.put( \"rare\", Collections.singletonList( new ToolchainModel() ) );\n        executionRequest.setToolchains( toolchainModels );\n        when( session.getRequest() ).thenReturn( executionRequest );\n\n        List<Toolchain> toolchains = toolchainManager.getToolchains( session, \"rare\", null );\n\n        assertEquals( 1, toolchains.size() );\n    }\n","realPath":"maven-core/src/test/java/org/apache/maven/toolchain/DefaultToolchainManagerTest.java","repoName":"maven","snippetEndLine":0,"snippetStartLine":0,"startLine":102,"status":"N"},{"authorDate":"2018-01-07 08:17:32","commitOrder":3,"curCode":"    public void testRequirements()\n        throws Exception\n    {\n        MavenSession session = mock( MavenSession.class );\n        MavenExecutionRequest executionRequest = new DefaultMavenExecutionRequest();\n        Map<String, List<ToolchainModel>> toolchainModels = new HashMap<>();\n        toolchainModels.put( \"basic\", Arrays.asList( new ToolchainModel(), new ToolchainModel() ) );\n        toolchainModels.put( \"rare\", Collections.singletonList( new ToolchainModel() ) );\n        executionRequest.setToolchains( toolchainModels );\n        when( session.getRequest() ).thenReturn( executionRequest );\n        ToolchainPrivate basicPrivate = mock( ToolchainPrivate.class );\n        when( basicPrivate.matchesRequirements( ArgumentMatchers.<String, String>anyMap() ) ).thenReturn( false ).thenReturn( true );\n        when( toolchainFactory_basicType.createToolchain( isA( ToolchainModel.class ) ) ).thenReturn( basicPrivate );\n\n        List<Toolchain> toolchains =\n            toolchainManager.getToolchains( session, \"basic\", Collections.singletonMap( \"key\", \"value\" ) );\n\n        assertEquals( 1, toolchains.size() );\n    }\n","date":"2018-02-09 07:20:03","endLine":152,"groupId":"10593","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testRequirements","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-maven-10-0.7/blobInfo/CC_OUT/blobs/84/444c08ed662a71214c52c7718246e5d03ff472.src","preCode":"    public void testRequirements()\n        throws Exception\n    {\n        MavenSession session = mock( MavenSession.class );\n        MavenExecutionRequest executionRequest = new DefaultMavenExecutionRequest();\n        Map<String, List<ToolchainModel>> toolchainModels = new HashMap<>();\n        toolchainModels.put( \"basic\", Arrays.asList( new ToolchainModel(), new ToolchainModel() ) );\n        toolchainModels.put( \"rare\", Collections.singletonList( new ToolchainModel() ) );\n        executionRequest.setToolchains( toolchainModels );\n        when( session.getRequest() ).thenReturn( executionRequest );\n        ToolchainPrivate basicPrivate = mock( ToolchainPrivate.class );\n        when( basicPrivate.matchesRequirements( anyMap() ) ).thenReturn( false ).thenReturn( true );\n        when( toolchainFactory_basicType.createToolchain( isA( ToolchainModel.class ) ) ).thenReturn( basicPrivate );\n\n        List<Toolchain> toolchains =\n            toolchainManager.getToolchains( session, \"basic\", Collections.singletonMap( \"key\", \"value\" ) );\n\n        assertEquals( 1, toolchains.size() );\n    }\n","realPath":"maven-core/src/test/java/org/apache/maven/toolchain/DefaultToolchainManagerTest.java","repoName":"maven","snippetEndLine":0,"snippetStartLine":0,"startLine":134,"status":"M"}],"commitId":"a03489b67d04a4b014ff5d1c151b331a39bf100b","commitMessage":"@@@[ MNG-6335] Update Mockito to 2.12.0\n\nAlso change scope to test","date":"2018-02-09 07:20:03","modifiedFileCount":"3","status":"M","submitter":"Sylwester Lachiewicz"}]
