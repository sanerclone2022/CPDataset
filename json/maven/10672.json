[{"authorTime":"2009-08-20 06:11:34","codes":[{"authorDate":"2009-08-20 06:11:34","commitOrder":1,"curCode":"    public Object getPluginComponent( Plugin plugin, String role, String roleHint )\n        throws PluginManagerException, ComponentLookupException\n    {\n        MavenSession session = legacySupport.getSession();\n\n        PluginDescriptor pluginDescriptor;\n        try\n        {\n            RepositoryRequest repositoryRequest = getRepositoryRequest( session, session.getCurrentProject() );\n\n            pluginDescriptor = pluginManager.getPluginDescriptor( plugin, repositoryRequest );\n\n            pluginManager.setupPluginRealm( pluginDescriptor, session, null, null );\n        }\n        catch ( Exception e )\n        {\n            throw new PluginManagerException( plugin, e.getMessage(), e );\n        }\n\n        ClassRealm oldRealm = container.getLookupRealm();\n        try\n        {\n            container.setLookupRealm( pluginDescriptor.getClassRealm() );\n\n            return container.lookup( role, roleHint );\n        }\n        finally\n        {\n            container.setLookupRealm( oldRealm );\n        }\n    }\n","date":"2009-08-20 06:11:34","endLine":132,"groupId":"3502","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"getPluginComponent","params":"(Pluginplugin@Stringrole@StringroleHint)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-maven-10-0.7/blobInfo/CC_OUT/blobs/72/34c9ac7493c8b787c3d01a6ef755d42128cf25.src","preCode":"    public Object getPluginComponent( Plugin plugin, String role, String roleHint )\n        throws PluginManagerException, ComponentLookupException\n    {\n        MavenSession session = legacySupport.getSession();\n\n        PluginDescriptor pluginDescriptor;\n        try\n        {\n            RepositoryRequest repositoryRequest = getRepositoryRequest( session, session.getCurrentProject() );\n\n            pluginDescriptor = pluginManager.getPluginDescriptor( plugin, repositoryRequest );\n\n            pluginManager.setupPluginRealm( pluginDescriptor, session, null, null );\n        }\n        catch ( Exception e )\n        {\n            throw new PluginManagerException( plugin, e.getMessage(), e );\n        }\n\n        ClassRealm oldRealm = container.getLookupRealm();\n        try\n        {\n            container.setLookupRealm( pluginDescriptor.getClassRealm() );\n\n            return container.lookup( role, roleHint );\n        }\n        finally\n        {\n            container.setLookupRealm( oldRealm );\n        }\n    }\n","realPath":"maven-core/src/main/java/org/apache/maven/plugin/internal/DefaultPluginManager.java","repoName":"maven","snippetEndLine":0,"snippetStartLine":0,"startLine":102,"status":"B"},{"authorDate":"2009-08-20 06:11:34","commitOrder":1,"curCode":"    public Map getPluginComponents( Plugin plugin, String role )\n        throws ComponentLookupException, PluginManagerException\n    {\n        MavenSession session = legacySupport.getSession();\n\n        PluginDescriptor pluginDescriptor;\n        try\n        {\n            RepositoryRequest repositoryRequest = getRepositoryRequest( session, session.getCurrentProject() );\n\n            pluginDescriptor = pluginManager.getPluginDescriptor( plugin, repositoryRequest );\n\n            pluginManager.setupPluginRealm( pluginDescriptor, session, null, null );\n        }\n        catch ( Exception e )\n        {\n            throw new PluginManagerException( plugin, e.getMessage(), e );\n        }\n\n        ClassRealm oldRealm = container.getLookupRealm();\n        try\n        {\n            container.setLookupRealm( pluginDescriptor.getClassRealm() );\n\n            return container.lookupMap( role );\n        }\n        finally\n        {\n            container.setLookupRealm( oldRealm );\n        }\n    }\n","date":"2009-08-20 06:11:34","endLine":164,"groupId":"3502","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"getPluginComponents","params":"(Pluginplugin@Stringrole)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-maven-10-0.7/blobInfo/CC_OUT/blobs/72/34c9ac7493c8b787c3d01a6ef755d42128cf25.src","preCode":"    public Map getPluginComponents( Plugin plugin, String role )\n        throws ComponentLookupException, PluginManagerException\n    {\n        MavenSession session = legacySupport.getSession();\n\n        PluginDescriptor pluginDescriptor;\n        try\n        {\n            RepositoryRequest repositoryRequest = getRepositoryRequest( session, session.getCurrentProject() );\n\n            pluginDescriptor = pluginManager.getPluginDescriptor( plugin, repositoryRequest );\n\n            pluginManager.setupPluginRealm( pluginDescriptor, session, null, null );\n        }\n        catch ( Exception e )\n        {\n            throw new PluginManagerException( plugin, e.getMessage(), e );\n        }\n\n        ClassRealm oldRealm = container.getLookupRealm();\n        try\n        {\n            container.setLookupRealm( pluginDescriptor.getClassRealm() );\n\n            return container.lookupMap( role );\n        }\n        finally\n        {\n            container.setLookupRealm( oldRealm );\n        }\n    }\n","realPath":"maven-core/src/main/java/org/apache/maven/plugin/internal/DefaultPluginManager.java","repoName":"maven","snippetEndLine":0,"snippetStartLine":0,"startLine":134,"status":"B"}],"commitId":"14a19354e0fa13bcb9e9b8179a164062106fc637","commitMessage":"@@@o Restored more backward-compat code\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@805995 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2009-08-20 06:11:34","modifiedFileCount":"5","status":"B","submitter":"Benjamin Bentmann"},{"authorTime":"2009-11-18 22:53:55","codes":[{"authorDate":"2009-11-18 22:53:55","commitOrder":2,"curCode":"    public Object getPluginComponent( Plugin plugin, String role, String roleHint )\n        throws PluginManagerException, ComponentLookupException\n    {\n        MavenSession session = legacySupport.getSession();\n\n        PluginDescriptor pluginDescriptor;\n        try\n        {\n            RepositoryRequest repositoryRequest = getRepositoryRequest( session, session.getCurrentProject() );\n\n            pluginDescriptor = pluginManager.getPluginDescriptor( plugin, repositoryRequest );\n\n            pluginManager.setupPluginRealm( pluginDescriptor, session, null, null, null );\n        }\n        catch ( Exception e )\n        {\n            throw new PluginManagerException( plugin, e.getMessage(), e );\n        }\n\n        ClassRealm oldRealm = container.getLookupRealm();\n        try\n        {\n            container.setLookupRealm( pluginDescriptor.getClassRealm() );\n\n            return container.lookup( role, roleHint );\n        }\n        finally\n        {\n            container.setLookupRealm( oldRealm );\n        }\n    }\n","date":"2009-11-18 22:53:55","endLine":140,"groupId":"528","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"getPluginComponent","params":"(Pluginplugin@Stringrole@StringroleHint)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-maven-10-0.7/blobInfo/CC_OUT/blobs/b6/54a6fd908505e023acacbe44c5d51587711b82.src","preCode":"    public Object getPluginComponent( Plugin plugin, String role, String roleHint )\n        throws PluginManagerException, ComponentLookupException\n    {\n        MavenSession session = legacySupport.getSession();\n\n        PluginDescriptor pluginDescriptor;\n        try\n        {\n            RepositoryRequest repositoryRequest = getRepositoryRequest( session, session.getCurrentProject() );\n\n            pluginDescriptor = pluginManager.getPluginDescriptor( plugin, repositoryRequest );\n\n            pluginManager.setupPluginRealm( pluginDescriptor, session, null, null );\n        }\n        catch ( Exception e )\n        {\n            throw new PluginManagerException( plugin, e.getMessage(), e );\n        }\n\n        ClassRealm oldRealm = container.getLookupRealm();\n        try\n        {\n            container.setLookupRealm( pluginDescriptor.getClassRealm() );\n\n            return container.lookup( role, roleHint );\n        }\n        finally\n        {\n            container.setLookupRealm( oldRealm );\n        }\n    }\n","realPath":"maven-core/src/main/java/org/apache/maven/plugin/internal/DefaultPluginManager.java","repoName":"maven","snippetEndLine":0,"snippetStartLine":0,"startLine":110,"status":"M"},{"authorDate":"2009-11-18 22:53:55","commitOrder":2,"curCode":"    public Map getPluginComponents( Plugin plugin, String role )\n        throws ComponentLookupException, PluginManagerException\n    {\n        MavenSession session = legacySupport.getSession();\n\n        PluginDescriptor pluginDescriptor;\n        try\n        {\n            RepositoryRequest repositoryRequest = getRepositoryRequest( session, session.getCurrentProject() );\n\n            pluginDescriptor = pluginManager.getPluginDescriptor( plugin, repositoryRequest );\n\n            pluginManager.setupPluginRealm( pluginDescriptor, session, null, null, null );\n        }\n        catch ( Exception e )\n        {\n            throw new PluginManagerException( plugin, e.getMessage(), e );\n        }\n\n        ClassRealm oldRealm = container.getLookupRealm();\n        try\n        {\n            container.setLookupRealm( pluginDescriptor.getClassRealm() );\n\n            return container.lookupMap( role );\n        }\n        finally\n        {\n            container.setLookupRealm( oldRealm );\n        }\n    }\n","date":"2009-11-18 22:53:55","endLine":172,"groupId":"528","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"getPluginComponents","params":"(Pluginplugin@Stringrole)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-maven-10-0.7/blobInfo/CC_OUT/blobs/b6/54a6fd908505e023acacbe44c5d51587711b82.src","preCode":"    public Map getPluginComponents( Plugin plugin, String role )\n        throws ComponentLookupException, PluginManagerException\n    {\n        MavenSession session = legacySupport.getSession();\n\n        PluginDescriptor pluginDescriptor;\n        try\n        {\n            RepositoryRequest repositoryRequest = getRepositoryRequest( session, session.getCurrentProject() );\n\n            pluginDescriptor = pluginManager.getPluginDescriptor( plugin, repositoryRequest );\n\n            pluginManager.setupPluginRealm( pluginDescriptor, session, null, null );\n        }\n        catch ( Exception e )\n        {\n            throw new PluginManagerException( plugin, e.getMessage(), e );\n        }\n\n        ClassRealm oldRealm = container.getLookupRealm();\n        try\n        {\n            container.setLookupRealm( pluginDescriptor.getClassRealm() );\n\n            return container.lookupMap( role );\n        }\n        finally\n        {\n            container.setLookupRealm( oldRealm );\n        }\n    }\n","realPath":"maven-core/src/main/java/org/apache/maven/plugin/internal/DefaultPluginManager.java","repoName":"maven","snippetEndLine":0,"snippetStartLine":0,"startLine":142,"status":"M"}],"commitId":"9e424878291cb52e8806a54a36b0004b0f979e0b","commitMessage":"@@@o Extended base plugin manager to allow for caller-supplied exclusions of certain plugin dependencies\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/maven-3/trunk@881793 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2009-11-18 22:53:55","modifiedFileCount":"6","status":"M","submitter":"Benjamin Bentmann"},{"authorTime":"2010-04-08 19:29:13","codes":[{"authorDate":"2010-04-08 19:29:13","commitOrder":3,"curCode":"    public Object getPluginComponent( Plugin plugin, String role, String roleHint )\n        throws PluginManagerException, ComponentLookupException\n    {\n        MavenSession session = legacySupport.getSession();\n\n        PluginDescriptor pluginDescriptor;\n        try\n        {\n            RepositoryRequest repositoryRequest = DefaultRepositoryRequest.getRepositoryRequest( session, session.getCurrentProject() );\n\n            pluginDescriptor = pluginManager.getPluginDescriptor( plugin, repositoryRequest );\n\n            pluginManager.setupPluginRealm( pluginDescriptor, session, null, null, null );\n        }\n        catch ( Exception e )\n        {\n            throw new PluginManagerException( plugin, e.getMessage(), e );\n        }\n\n        ClassRealm oldRealm = container.getLookupRealm();\n        try\n        {\n            container.setLookupRealm( pluginDescriptor.getClassRealm() );\n\n            return container.lookup( role, roleHint );\n        }\n        finally\n        {\n            container.setLookupRealm( oldRealm );\n        }\n    }\n","date":"2010-04-08 19:29:13","endLine":125,"groupId":"528","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"getPluginComponent","params":"(Pluginplugin@Stringrole@StringroleHint)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-maven-10-0.7/blobInfo/CC_OUT/blobs/a5/c1a09189a9c829e5180dcbea93adb818bd854e.src","preCode":"    public Object getPluginComponent( Plugin plugin, String role, String roleHint )\n        throws PluginManagerException, ComponentLookupException\n    {\n        MavenSession session = legacySupport.getSession();\n\n        PluginDescriptor pluginDescriptor;\n        try\n        {\n            RepositoryRequest repositoryRequest = getRepositoryRequest( session, session.getCurrentProject() );\n\n            pluginDescriptor = pluginManager.getPluginDescriptor( plugin, repositoryRequest );\n\n            pluginManager.setupPluginRealm( pluginDescriptor, session, null, null, null );\n        }\n        catch ( Exception e )\n        {\n            throw new PluginManagerException( plugin, e.getMessage(), e );\n        }\n\n        ClassRealm oldRealm = container.getLookupRealm();\n        try\n        {\n            container.setLookupRealm( pluginDescriptor.getClassRealm() );\n\n            return container.lookup( role, roleHint );\n        }\n        finally\n        {\n            container.setLookupRealm( oldRealm );\n        }\n    }\n","realPath":"maven-core/src/main/java/org/apache/maven/plugin/internal/DefaultPluginManager.java","repoName":"maven","snippetEndLine":0,"snippetStartLine":0,"startLine":95,"status":"M"},{"authorDate":"2010-04-08 19:29:13","commitOrder":3,"curCode":"    public Map getPluginComponents( Plugin plugin, String role )\n        throws ComponentLookupException, PluginManagerException\n    {\n        MavenSession session = legacySupport.getSession();\n\n        PluginDescriptor pluginDescriptor;\n        try\n        {\n            RepositoryRequest repositoryRequest = DefaultRepositoryRequest.getRepositoryRequest( session, session.getCurrentProject() );\n\n            pluginDescriptor = pluginManager.getPluginDescriptor( plugin, repositoryRequest );\n\n            pluginManager.setupPluginRealm( pluginDescriptor, session, null, null, null );\n        }\n        catch ( Exception e )\n        {\n            throw new PluginManagerException( plugin, e.getMessage(), e );\n        }\n\n        ClassRealm oldRealm = container.getLookupRealm();\n        try\n        {\n            container.setLookupRealm( pluginDescriptor.getClassRealm() );\n\n            return container.lookupMap( role );\n        }\n        finally\n        {\n            container.setLookupRealm( oldRealm );\n        }\n    }\n","date":"2010-04-08 19:29:13","endLine":157,"groupId":"528","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"getPluginComponents","params":"(Pluginplugin@Stringrole)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-maven-10-0.7/blobInfo/CC_OUT/blobs/a5/c1a09189a9c829e5180dcbea93adb818bd854e.src","preCode":"    public Map getPluginComponents( Plugin plugin, String role )\n        throws ComponentLookupException, PluginManagerException\n    {\n        MavenSession session = legacySupport.getSession();\n\n        PluginDescriptor pluginDescriptor;\n        try\n        {\n            RepositoryRequest repositoryRequest = getRepositoryRequest( session, session.getCurrentProject() );\n\n            pluginDescriptor = pluginManager.getPluginDescriptor( plugin, repositoryRequest );\n\n            pluginManager.setupPluginRealm( pluginDescriptor, session, null, null, null );\n        }\n        catch ( Exception e )\n        {\n            throw new PluginManagerException( plugin, e.getMessage(), e );\n        }\n\n        ClassRealm oldRealm = container.getLookupRealm();\n        try\n        {\n            container.setLookupRealm( pluginDescriptor.getClassRealm() );\n\n            return container.lookupMap( role );\n        }\n        finally\n        {\n            container.setLookupRealm( oldRealm );\n        }\n    }\n","realPath":"maven-core/src/main/java/org/apache/maven/plugin/internal/DefaultPluginManager.java","repoName":"maven","snippetEndLine":0,"snippetStartLine":0,"startLine":127,"status":"M"}],"commitId":"83237e46af5654c51c5c9005b054c1ffa01e327d","commitMessage":"@@@[MNG-3004] Concurrent building of multimodule projects\n\nThis commit consists of a modularization of the DefaultLifecycleExecutor into smaller\ncomponents. This is primarily done with the intention of extracting execution strategy \nsomewhat from the rest of the logic.\n\nIt also contains three differenent execution strategies:\nA) Linear (\"Classic\")\nB) Parallel (Based on Dan's original implemementation)\nC) Weave (Still experimental) \n\n \nThe command line -T option activates parallel running.  and the argument\nis in the form -T <[nThreads.  a float][C][W]|auto>\n\nNotes:\n* The output demultiplexer is disabled in this commit.  and output will appear intermingled.\n* The modello plugin has known problems\n* Surefire must be run in forkmode at least once.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/maven-3/trunk@931884 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2010-04-08 19:29:13","modifiedFileCount":"21","status":"M","submitter":"Kristian Rosenvold"},{"authorTime":"2010-08-25 06:46:07","codes":[{"authorDate":"2010-08-25 06:46:07","commitOrder":4,"curCode":"    public Object getPluginComponent( Plugin plugin, String role, String roleHint )\n        throws PluginManagerException, ComponentLookupException\n    {\n        MavenSession session = legacySupport.getSession();\n\n        PluginDescriptor pluginDescriptor;\n        try\n        {\n            pluginDescriptor =\n                pluginManager.getPluginDescriptor( plugin, session.getCurrentProject().getRemotePluginRepositories(),\n                                                   session.getRepositorySession() );\n\n            pluginManager.setupPluginRealm( pluginDescriptor, session, null, null, null );\n        }\n        catch ( Exception e )\n        {\n            throw new PluginManagerException( plugin, e.getMessage(), e );\n        }\n\n        ClassRealm oldRealm = container.getLookupRealm();\n        try\n        {\n            container.setLookupRealm( pluginDescriptor.getClassRealm() );\n\n            return container.lookup( role, roleHint );\n        }\n        finally\n        {\n            container.setLookupRealm( oldRealm );\n        }\n    }\n","date":"2010-08-25 06:46:07","endLine":123,"groupId":"3009","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"getPluginComponent","params":"(Pluginplugin@Stringrole@StringroleHint)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-maven-10-0.7/blobInfo/CC_OUT/blobs/5d/467e89889c049902c86a3d551485a8f9eed25d.src","preCode":"    public Object getPluginComponent( Plugin plugin, String role, String roleHint )\n        throws PluginManagerException, ComponentLookupException\n    {\n        MavenSession session = legacySupport.getSession();\n\n        PluginDescriptor pluginDescriptor;\n        try\n        {\n            RepositoryRequest repositoryRequest =\n                DefaultRepositoryRequest.getRepositoryRequest( session, session.getCurrentProject() );\n\n            pluginDescriptor = pluginManager.getPluginDescriptor( plugin, repositoryRequest );\n\n            pluginManager.setupPluginRealm( pluginDescriptor, session, null, null, null );\n        }\n        catch ( Exception e )\n        {\n            throw new PluginManagerException( plugin, e.getMessage(), e );\n        }\n\n        ClassRealm oldRealm = container.getLookupRealm();\n        try\n        {\n            container.setLookupRealm( pluginDescriptor.getClassRealm() );\n\n            return container.lookup( role, roleHint );\n        }\n        finally\n        {\n            container.setLookupRealm( oldRealm );\n        }\n    }\n","realPath":"maven-core/src/main/java/org/apache/maven/plugin/internal/DefaultPluginManager.java","repoName":"maven","snippetEndLine":0,"snippetStartLine":0,"startLine":93,"status":"M"},{"authorDate":"2010-08-25 06:46:07","commitOrder":4,"curCode":"    public Map getPluginComponents( Plugin plugin, String role )\n        throws ComponentLookupException, PluginManagerException\n    {\n        MavenSession session = legacySupport.getSession();\n\n        PluginDescriptor pluginDescriptor;\n        try\n        {\n            pluginDescriptor =\n                pluginManager.getPluginDescriptor( plugin, session.getCurrentProject().getRemotePluginRepositories(),\n                                                   session.getRepositorySession() );\n\n            pluginManager.setupPluginRealm( pluginDescriptor, session, null, null, null );\n        }\n        catch ( Exception e )\n        {\n            throw new PluginManagerException( plugin, e.getMessage(), e );\n        }\n\n        ClassRealm oldRealm = container.getLookupRealm();\n        try\n        {\n            container.setLookupRealm( pluginDescriptor.getClassRealm() );\n\n            return container.lookupMap( role );\n        }\n        finally\n        {\n            container.setLookupRealm( oldRealm );\n        }\n    }\n","date":"2010-08-25 06:46:07","endLine":155,"groupId":"3009","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"getPluginComponents","params":"(Pluginplugin@Stringrole)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-maven-10-0.7/blobInfo/CC_OUT/blobs/5d/467e89889c049902c86a3d551485a8f9eed25d.src","preCode":"    public Map getPluginComponents( Plugin plugin, String role )\n        throws ComponentLookupException, PluginManagerException\n    {\n        MavenSession session = legacySupport.getSession();\n\n        PluginDescriptor pluginDescriptor;\n        try\n        {\n            RepositoryRequest repositoryRequest =\n                DefaultRepositoryRequest.getRepositoryRequest( session, session.getCurrentProject() );\n\n            pluginDescriptor = pluginManager.getPluginDescriptor( plugin, repositoryRequest );\n\n            pluginManager.setupPluginRealm( pluginDescriptor, session, null, null, null );\n        }\n        catch ( Exception e )\n        {\n            throw new PluginManagerException( plugin, e.getMessage(), e );\n        }\n\n        ClassRealm oldRealm = container.getLookupRealm();\n        try\n        {\n            container.setLookupRealm( pluginDescriptor.getClassRealm() );\n\n            return container.lookupMap( role );\n        }\n        finally\n        {\n            container.setLookupRealm( oldRealm );\n        }\n    }\n","realPath":"maven-core/src/main/java/org/apache/maven/plugin/internal/DefaultPluginManager.java","repoName":"maven","snippetEndLine":0,"snippetStartLine":0,"startLine":125,"status":"M"}],"commitId":"6c37a89744149e68f198429fb7eac70fe1707360","commitMessage":"@@@[MNG-4756] Aether integration\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/maven-3/trunk@988749 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2010-08-25 06:46:07","modifiedFileCount":"102","status":"M","submitter":"Benjamin Bentmann"},{"authorTime":"2011-02-24 23:12:30","codes":[{"authorDate":"2011-02-24 23:12:30","commitOrder":5,"curCode":"    public Object getPluginComponent( Plugin plugin, String role, String roleHint )\n        throws PluginManagerException, ComponentLookupException\n    {\n        MavenSession session = legacySupport.getSession();\n\n        PluginDescriptor pluginDescriptor;\n        try\n        {\n            pluginDescriptor =\n                pluginManager.getPluginDescriptor( plugin, session.getCurrentProject().getRemotePluginRepositories(),\n                                                   session.getRepositorySession() );\n\n            pluginManager.setupPluginRealm( pluginDescriptor, session, null, null, null );\n        }\n        catch ( Exception e )\n        {\n            throw new PluginManagerException( plugin, e.getMessage(), e );\n        }\n\n        ClassLoader oldClassLoader = Thread.currentThread().getContextClassLoader();\n        try\n        {\n            Thread.currentThread().setContextClassLoader( pluginDescriptor.getClassRealm() );\n\n            return container.lookup( role, roleHint );\n        }\n        finally\n        {\n            Thread.currentThread().setContextClassLoader( oldClassLoader );\n        }\n    }\n","date":"2011-02-24 23:12:30","endLine":123,"groupId":"2201","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"getPluginComponent","params":"(Pluginplugin@Stringrole@StringroleHint)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-maven-10-0.7/blobInfo/CC_OUT/blobs/8d/2dc92574b5eba66ca3599343d89c5af39a22f2.src","preCode":"    public Object getPluginComponent( Plugin plugin, String role, String roleHint )\n        throws PluginManagerException, ComponentLookupException\n    {\n        MavenSession session = legacySupport.getSession();\n\n        PluginDescriptor pluginDescriptor;\n        try\n        {\n            pluginDescriptor =\n                pluginManager.getPluginDescriptor( plugin, session.getCurrentProject().getRemotePluginRepositories(),\n                                                   session.getRepositorySession() );\n\n            pluginManager.setupPluginRealm( pluginDescriptor, session, null, null, null );\n        }\n        catch ( Exception e )\n        {\n            throw new PluginManagerException( plugin, e.getMessage(), e );\n        }\n\n        ClassRealm oldRealm = container.getLookupRealm();\n        try\n        {\n            container.setLookupRealm( pluginDescriptor.getClassRealm() );\n\n            return container.lookup( role, roleHint );\n        }\n        finally\n        {\n            container.setLookupRealm( oldRealm );\n        }\n    }\n","realPath":"maven-core/src/main/java/org/apache/maven/plugin/internal/DefaultPluginManager.java","repoName":"maven","snippetEndLine":0,"snippetStartLine":0,"startLine":93,"status":"M"},{"authorDate":"2011-02-24 23:12:30","commitOrder":5,"curCode":"    public Map getPluginComponents( Plugin plugin, String role )\n        throws ComponentLookupException, PluginManagerException\n    {\n        MavenSession session = legacySupport.getSession();\n\n        PluginDescriptor pluginDescriptor;\n        try\n        {\n            pluginDescriptor =\n                pluginManager.getPluginDescriptor( plugin, session.getCurrentProject().getRemotePluginRepositories(),\n                                                   session.getRepositorySession() );\n\n            pluginManager.setupPluginRealm( pluginDescriptor, session, null, null, null );\n        }\n        catch ( Exception e )\n        {\n            throw new PluginManagerException( plugin, e.getMessage(), e );\n        }\n\n        ClassLoader oldClassLoader = Thread.currentThread().getContextClassLoader();\n        try\n        {\n            Thread.currentThread().setContextClassLoader( pluginDescriptor.getClassRealm() );\n\n            return container.lookupMap( role );\n        }\n        finally\n        {\n            Thread.currentThread().setContextClassLoader( oldClassLoader );\n        }\n    }\n","date":"2011-02-24 23:12:30","endLine":155,"groupId":"2201","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"getPluginComponents","params":"(Pluginplugin@Stringrole)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-maven-10-0.7/blobInfo/CC_OUT/blobs/8d/2dc92574b5eba66ca3599343d89c5af39a22f2.src","preCode":"    public Map getPluginComponents( Plugin plugin, String role )\n        throws ComponentLookupException, PluginManagerException\n    {\n        MavenSession session = legacySupport.getSession();\n\n        PluginDescriptor pluginDescriptor;\n        try\n        {\n            pluginDescriptor =\n                pluginManager.getPluginDescriptor( plugin, session.getCurrentProject().getRemotePluginRepositories(),\n                                                   session.getRepositorySession() );\n\n            pluginManager.setupPluginRealm( pluginDescriptor, session, null, null, null );\n        }\n        catch ( Exception e )\n        {\n            throw new PluginManagerException( plugin, e.getMessage(), e );\n        }\n\n        ClassRealm oldRealm = container.getLookupRealm();\n        try\n        {\n            container.setLookupRealm( pluginDescriptor.getClassRealm() );\n\n            return container.lookupMap( role );\n        }\n        finally\n        {\n            container.setLookupRealm( oldRealm );\n        }\n    }\n","realPath":"maven-core/src/main/java/org/apache/maven/plugin/internal/DefaultPluginManager.java","repoName":"maven","snippetEndLine":0,"snippetStartLine":0,"startLine":125,"status":"M"}],"commitId":"b6ee02c3df435718f7201daa736bc524f411a237","commitMessage":"@@@[MNG-5019] [regression] String-based component lookups performed by report mojos fail with ClassCastException\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/maven-3/trunk@1074184 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2011-02-24 23:12:30","modifiedFileCount":"3","status":"M","submitter":"Benjamin Bentmann"},{"authorTime":"2015-06-20 21:21:10","codes":[{"authorDate":"2011-02-24 23:12:30","commitOrder":6,"curCode":"    public Object getPluginComponent( Plugin plugin, String role, String roleHint )\n        throws PluginManagerException, ComponentLookupException\n    {\n        MavenSession session = legacySupport.getSession();\n\n        PluginDescriptor pluginDescriptor;\n        try\n        {\n            pluginDescriptor =\n                pluginManager.getPluginDescriptor( plugin, session.getCurrentProject().getRemotePluginRepositories(),\n                                                   session.getRepositorySession() );\n\n            pluginManager.setupPluginRealm( pluginDescriptor, session, null, null, null );\n        }\n        catch ( Exception e )\n        {\n            throw new PluginManagerException( plugin, e.getMessage(), e );\n        }\n\n        ClassLoader oldClassLoader = Thread.currentThread().getContextClassLoader();\n        try\n        {\n            Thread.currentThread().setContextClassLoader( pluginDescriptor.getClassRealm() );\n\n            return container.lookup( role, roleHint );\n        }\n        finally\n        {\n            Thread.currentThread().setContextClassLoader( oldClassLoader );\n        }\n    }\n","date":"2011-02-24 23:12:30","endLine":123,"groupId":"10672","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"getPluginComponent","params":"(Pluginplugin@Stringrole@StringroleHint)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-maven-10-0.7/blobInfo/CC_OUT/blobs/8d/2dc92574b5eba66ca3599343d89c5af39a22f2.src","preCode":"    public Object getPluginComponent( Plugin plugin, String role, String roleHint )\n        throws PluginManagerException, ComponentLookupException\n    {\n        MavenSession session = legacySupport.getSession();\n\n        PluginDescriptor pluginDescriptor;\n        try\n        {\n            pluginDescriptor =\n                pluginManager.getPluginDescriptor( plugin, session.getCurrentProject().getRemotePluginRepositories(),\n                                                   session.getRepositorySession() );\n\n            pluginManager.setupPluginRealm( pluginDescriptor, session, null, null, null );\n        }\n        catch ( Exception e )\n        {\n            throw new PluginManagerException( plugin, e.getMessage(), e );\n        }\n\n        ClassLoader oldClassLoader = Thread.currentThread().getContextClassLoader();\n        try\n        {\n            Thread.currentThread().setContextClassLoader( pluginDescriptor.getClassRealm() );\n\n            return container.lookup( role, roleHint );\n        }\n        finally\n        {\n            Thread.currentThread().setContextClassLoader( oldClassLoader );\n        }\n    }\n","realPath":"maven-core/src/main/java/org/apache/maven/plugin/internal/DefaultPluginManager.java","repoName":"maven","snippetEndLine":0,"snippetStartLine":0,"startLine":93,"status":"N"},{"authorDate":"2015-06-20 21:21:10","commitOrder":6,"curCode":"    public Map<String, Object> getPluginComponents( Plugin plugin, String role )\n        throws ComponentLookupException, PluginManagerException\n    {\n        MavenSession session = legacySupport.getSession();\n\n        PluginDescriptor pluginDescriptor;\n        try\n        {\n            pluginDescriptor =\n                pluginManager.getPluginDescriptor( plugin, session.getCurrentProject().getRemotePluginRepositories(),\n                                                   session.getRepositorySession() );\n\n            pluginManager.setupPluginRealm( pluginDescriptor, session, null, null, null );\n        }\n        catch ( Exception e )\n        {\n            throw new PluginManagerException( plugin, e.getMessage(), e );\n        }\n\n        ClassLoader oldClassLoader = Thread.currentThread().getContextClassLoader();\n        try\n        {\n            Thread.currentThread().setContextClassLoader( pluginDescriptor.getClassRealm() );\n\n            return container.lookupMap( role );\n        }\n        finally\n        {\n            Thread.currentThread().setContextClassLoader( oldClassLoader );\n        }\n    }\n","date":"2015-06-20 21:21:10","endLine":154,"groupId":"10672","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"getPluginComponents","params":"(Pluginplugin@Stringrole)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-maven-10-0.7/blobInfo/CC_OUT/blobs/a8/ac9ebd0302f883782f6c8525a416a9f0d84677.src","preCode":"    public Map getPluginComponents( Plugin plugin, String role )\n        throws ComponentLookupException, PluginManagerException\n    {\n        MavenSession session = legacySupport.getSession();\n\n        PluginDescriptor pluginDescriptor;\n        try\n        {\n            pluginDescriptor =\n                pluginManager.getPluginDescriptor( plugin, session.getCurrentProject().getRemotePluginRepositories(),\n                                                   session.getRepositorySession() );\n\n            pluginManager.setupPluginRealm( pluginDescriptor, session, null, null, null );\n        }\n        catch ( Exception e )\n        {\n            throw new PluginManagerException( plugin, e.getMessage(), e );\n        }\n\n        ClassLoader oldClassLoader = Thread.currentThread().getContextClassLoader();\n        try\n        {\n            Thread.currentThread().setContextClassLoader( pluginDescriptor.getClassRealm() );\n\n            return container.lookupMap( role );\n        }\n        finally\n        {\n            Thread.currentThread().setContextClassLoader( oldClassLoader );\n        }\n    }\n","realPath":"maven-core/src/main/java/org/apache/maven/plugin/internal/DefaultPluginManager.java","repoName":"maven","snippetEndLine":0,"snippetStartLine":0,"startLine":124,"status":"M"}],"commitId":"cfd1fbe6131eb9f03f0af0f5942863bc5ef4f2aa","commitMessage":"@@@More java7. Bye bye 2006\n","date":"2015-06-20 21:21:10","modifiedFileCount":"13","status":"M","submitter":"Kristian Rosenvold"}]
