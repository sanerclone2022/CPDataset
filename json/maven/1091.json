[{"authorTime":"2019-06-04 04:33:44","codes":[{"authorDate":"2012-07-05 21:11:15","commitOrder":7,"curCode":"    private boolean validateEnum( String fieldName, ModelProblemCollector problems, Severity severity, Version version, String string,\n                                  String sourceHint, InputLocationTracker tracker, String... validValues )\n    {\n        if ( string == null || string.length() <= 0 )\n        {\n            return true;\n        }\n\n        List<String> values = Arrays.asList( validValues );\n\n        if ( values.contains( string ) )\n        {\n            return true;\n        }\n\n        addViolation( problems, severity, version, fieldName, sourceHint, \"must be one of \" + values + \" but is '\" + string\n            + \"'.\", tracker );\n\n        return false;\n    }\n","date":"2012-07-05 21:11:15","endLine":747,"groupId":"6420","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"validateEnum","params":"(StringfieldName@ModelProblemCollectorproblems@Severityseverity@Versionversion@Stringstring@StringsourceHint@InputLocationTrackertracker@String...validValues)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-maven-10-0.7/blobInfo/CC_OUT/blobs/5e/e424e27e303c68edf24743515dd12045567ec4.src","preCode":"    private boolean validateEnum( String fieldName, ModelProblemCollector problems, Severity severity, Version version, String string,\n                                  String sourceHint, InputLocationTracker tracker, String... validValues )\n    {\n        if ( string == null || string.length() <= 0 )\n        {\n            return true;\n        }\n\n        List<String> values = Arrays.asList( validValues );\n\n        if ( values.contains( string ) )\n        {\n            return true;\n        }\n\n        addViolation( problems, severity, version, fieldName, sourceHint, \"must be one of \" + values + \" but is '\" + string\n            + \"'.\", tracker );\n\n        return false;\n    }\n","realPath":"maven-model-builder/src/main/java/org/apache/maven/model/validation/DefaultModelValidator.java","repoName":"maven","snippetEndLine":0,"snippetStartLine":0,"startLine":728,"status":"NB"},{"authorDate":"2019-06-04 04:33:44","commitOrder":7,"curCode":"    private boolean validateModelVersion( ModelProblemCollector problems, String string, InputLocationTracker tracker,\n                                          String... validVersions )\n    {\n        if ( string == null || string.length() <= 0 )\n        {\n            return true;\n        }\n\n        List<String> values = Arrays.asList( validVersions );\n\n        if ( values.contains( string ) )\n        {\n            return true;\n        }\n\n        boolean newerThanAll = true;\n        boolean olderThanAll = true;\n        for ( String validValue : validVersions )\n        {\n            final int comparison = compareModelVersions( validValue, string );\n            newerThanAll = newerThanAll && comparison < 0;\n            olderThanAll = olderThanAll && comparison > 0;\n        }\n\n        if ( newerThanAll )\n        {\n            addViolation( problems, Severity.FATAL, Version.V20, \"modelVersion\", null,\n                          \"of '\" + string + \"' is newer than the versions supported by this version of Maven: \" + values\n                              + \". Building this project requires a newer version of Maven.\", tracker );\n\n        }\n        else if ( olderThanAll )\n        {\n            \r\n            addViolation( problems, Severity.FATAL, Version.V20, \"modelVersion\", null,\n                          \"of '\" + string + \"' is older than the versions supported by this version of Maven: \" + values\n                              + \". Building this project requires an older version of Maven.\", tracker );\n\n        }\n        else\n        {\n            addViolation( problems, Severity.ERROR, Version.V20, \"modelVersion\", null,\n                          \"must be one of \" + values + \" but is '\" + string + \"'.\", tracker );\n        }\n\n        return false;\n    }\n","date":"2019-06-04 04:33:44","endLine":1090,"groupId":"5563","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"validateModelVersion","params":"(ModelProblemCollectorproblems@Stringstring@InputLocationTrackertracker@String...validVersions)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-maven-10-0.7/blobInfo/CC_OUT/blobs/72/2c8c2b56ad20c08a439ed28a71730a3dba5d45.src","preCode":"    private boolean validateModelVersion( ModelProblemCollector problems, String string, InputLocationTracker tracker,\n                                          String... validVersions )\n    {\n        if ( string == null || string.length() <= 0 )\n        {\n            return true;\n        }\n\n        List<String> values = Arrays.asList( validVersions );\n\n        if ( values.contains( string ) )\n        {\n            return true;\n        }\n\n        boolean newerThanAll = true;\n        boolean olderThanAll = true;\n        for ( String validValue : validVersions )\n        {\n            final int comparison = compareModelVersions( validValue, string );\n            newerThanAll = newerThanAll && comparison < 0;\n            olderThanAll = olderThanAll && comparison > 0;\n        }\n\n        if ( newerThanAll )\n        {\n            addViolation( problems, Severity.FATAL, Version.V20, \"modelVersion\", null,\n                          \"of '\" + string + \"' is newer than the versions supported by this version of Maven: \" + values\n                              + \". Building this project requires a newer version of Maven.\", tracker );\n\n        }\n        else if ( olderThanAll )\n        {\n            \r\n            addViolation( problems, Severity.FATAL, Version.V20, \"modelVersion\", null,\n                          \"of '\" + string + \"' is older than the versions supported by this version of Maven: \" + values\n                              + \". Building this project requires an older version of Maven.\", tracker );\n\n        }\n        else\n        {\n            addViolation( problems, Severity.ERROR, Version.V20, \"modelVersion\", null,\n                          \"must be one of \" + values + \" but is '\" + string + \"'.\", tracker );\n        }\n\n        return false;\n    }\n","realPath":"maven-model-builder/src/main/java/org/apache/maven/model/validation/DefaultModelValidator.java","repoName":"maven","snippetEndLine":0,"snippetStartLine":0,"startLine":1044,"status":"B"}],"commitId":"01405a2d60ec44f9c11843a8f904822a9ed280fc","commitMessage":"@@@[MNG-6667] Enhance the error reporting when trying to build a modelVersion that the current Maven doesn't understand\n","date":"2019-06-04 04:33:44","modifiedFileCount":"3","status":"M","submitter":"Stephen Connolly"},{"authorTime":"2019-06-04 04:33:44","codes":[{"authorDate":"2019-06-28 16:44:10","commitOrder":8,"curCode":"    private boolean validateEnum( String prefix, String fieldName, ModelProblemCollector problems, Severity severity,\n                                  Version version, String string, String sourceHint, InputLocationTracker tracker,\n                                  String... validValues )\n    {\n        if ( string == null || string.length() <= 0 )\n        {\n            return true;\n        }\n\n        List<String> values = Arrays.asList( validValues );\n\n        if ( values.contains( string ) )\n        {\n            return true;\n        }\n\n        addViolation( problems, severity, version, prefix + fieldName, sourceHint,\n                      \"must be one of \" + values + \" but is '\" + string + \"'.\", tracker );\n\n        return false;\n    }\n","date":"2019-07-11 03:27:36","endLine":1110,"groupId":"1091","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"validateEnum","params":"(Stringprefix@StringfieldName@ModelProblemCollectorproblems@Severityseverity@Versionversion@Stringstring@StringsourceHint@InputLocationTrackertracker@String...validValues)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-maven-10-0.7/blobInfo/CC_OUT/blobs/cf/a6e20f6cdcfb8ae23b3b1ed17506db4b505415.src","preCode":"    private boolean validateEnum( String fieldName, ModelProblemCollector problems, Severity severity, Version version,\n                                  String string, String sourceHint, InputLocationTracker tracker,\n                                  String... validValues )\n    {\n        if ( string == null || string.length() <= 0 )\n        {\n            return true;\n        }\n\n        List<String> values = Arrays.asList( validValues );\n\n        if ( values.contains( string ) )\n        {\n            return true;\n        }\n\n        addViolation( problems, severity, version, fieldName, sourceHint,\n                      \"must be one of \" + values + \" but is '\" + string + \"'.\", tracker );\n\n        return false;\n    }\n","realPath":"maven-model-builder/src/main/java/org/apache/maven/model/validation/DefaultModelValidator.java","repoName":"maven","snippetEndLine":0,"snippetStartLine":0,"startLine":1090,"status":"M"},{"authorDate":"2019-06-04 04:33:44","commitOrder":8,"curCode":"    private boolean validateModelVersion( ModelProblemCollector problems, String string, InputLocationTracker tracker,\n                                          String... validVersions )\n    {\n        if ( string == null || string.length() <= 0 )\n        {\n            return true;\n        }\n\n        List<String> values = Arrays.asList( validVersions );\n\n        if ( values.contains( string ) )\n        {\n            return true;\n        }\n\n        boolean newerThanAll = true;\n        boolean olderThanAll = true;\n        for ( String validValue : validVersions )\n        {\n            final int comparison = compareModelVersions( validValue, string );\n            newerThanAll = newerThanAll && comparison < 0;\n            olderThanAll = olderThanAll && comparison > 0;\n        }\n\n        if ( newerThanAll )\n        {\n            addViolation( problems, Severity.FATAL, Version.V20, \"modelVersion\", null,\n                          \"of '\" + string + \"' is newer than the versions supported by this version of Maven: \" + values\n                              + \". Building this project requires a newer version of Maven.\", tracker );\n\n        }\n        else if ( olderThanAll )\n        {\n            \r\n            addViolation( problems, Severity.FATAL, Version.V20, \"modelVersion\", null,\n                          \"of '\" + string + \"' is older than the versions supported by this version of Maven: \" + values\n                              + \". Building this project requires an older version of Maven.\", tracker );\n\n        }\n        else\n        {\n            addViolation( problems, Severity.ERROR, Version.V20, \"modelVersion\", null,\n                          \"must be one of \" + values + \" but is '\" + string + \"'.\", tracker );\n        }\n\n        return false;\n    }\n","date":"2019-06-04 04:33:44","endLine":1090,"groupId":"1091","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"validateModelVersion","params":"(ModelProblemCollectorproblems@Stringstring@InputLocationTrackertracker@String...validVersions)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-maven-10-0.7/blobInfo/CC_OUT/blobs/72/2c8c2b56ad20c08a439ed28a71730a3dba5d45.src","preCode":"    private boolean validateModelVersion( ModelProblemCollector problems, String string, InputLocationTracker tracker,\n                                          String... validVersions )\n    {\n        if ( string == null || string.length() <= 0 )\n        {\n            return true;\n        }\n\n        List<String> values = Arrays.asList( validVersions );\n\n        if ( values.contains( string ) )\n        {\n            return true;\n        }\n\n        boolean newerThanAll = true;\n        boolean olderThanAll = true;\n        for ( String validValue : validVersions )\n        {\n            final int comparison = compareModelVersions( validValue, string );\n            newerThanAll = newerThanAll && comparison < 0;\n            olderThanAll = olderThanAll && comparison > 0;\n        }\n\n        if ( newerThanAll )\n        {\n            addViolation( problems, Severity.FATAL, Version.V20, \"modelVersion\", null,\n                          \"of '\" + string + \"' is newer than the versions supported by this version of Maven: \" + values\n                              + \". Building this project requires a newer version of Maven.\", tracker );\n\n        }\n        else if ( olderThanAll )\n        {\n            \r\n            addViolation( problems, Severity.FATAL, Version.V20, \"modelVersion\", null,\n                          \"of '\" + string + \"' is older than the versions supported by this version of Maven: \" + values\n                              + \". Building this project requires an older version of Maven.\", tracker );\n\n        }\n        else\n        {\n            addViolation( problems, Severity.ERROR, Version.V20, \"modelVersion\", null,\n                          \"must be one of \" + values + \" but is '\" + string + \"'.\", tracker );\n        }\n\n        return false;\n    }\n","realPath":"maven-model-builder/src/main/java/org/apache/maven/model/validation/DefaultModelValidator.java","repoName":"maven","snippetEndLine":0,"snippetStartLine":0,"startLine":1044,"status":"N"}],"commitId":"9b8ae7d5281cbb4e789e50fb42ae42734a54a6dd","commitMessage":"@@@[MNG-6702] Improve DefaultModelValidator performance:\n\nAvoid tons of string concatenations that are done but usually not used\n\nThis closes #268\n","date":"2019-07-11 03:27:36","modifiedFileCount":"2","status":"M","submitter":"Guillaume Nodet"}]
