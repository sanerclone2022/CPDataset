[{"authorTime":"2009-10-27 04:16:00","codes":[{"authorDate":"2009-07-23 06:43:05","commitOrder":6,"curCode":"    protected List<ValueSource> createValueSources( final Model model, final File projectDir, final ModelBuildingRequest config )\n    {\n        Properties modelProperties = model.getProperties();\n\n        ValueSource modelValueSource1 = new PrefixedObjectValueSource( PROJECT_PREFIXES, model, false );\n        ValueSource modelValueSource2 = new ObjectBasedValueSource( model );\n\n        \r\n        List<ValueSource> valueSources = new ArrayList<ValueSource>( 9 );\n\n        if ( projectDir != null )\n        {\n            ValueSource basedirValueSource = new PrefixedValueSourceWrapper( new AbstractValueSource( false )\n            {\n                public Object getValue( String expression )\n                {\n                    if ( \"basedir\".equals( expression ) )\n                    {\n                        return projectDir.getAbsolutePath();\n                    }\n                    return null;\n                }\n            }, PROJECT_PREFIXES, true );\n            valueSources.add( basedirValueSource );\n\n            ValueSource baseUriValueSource = new PrefixedValueSourceWrapper( new AbstractValueSource( false )\n            {\n                public Object getValue( String expression )\n                {\n                    if ( \"baseUri\".equals( expression ) )\n                    {\n                        return projectDir.getAbsoluteFile().toURI().toString();\n                    }\n                    return null;\n                }\n            }, PROJECT_PREFIXES, false );\n            valueSources.add( baseUriValueSource );\n\n            String timestampFormat = DEFAULT_BUILD_TIMESTAMP_FORMAT;\n            if ( modelProperties != null )\n            {\n                timestampFormat = modelProperties.getProperty( BUILD_TIMESTAMP_FORMAT_PROPERTY, timestampFormat );\n            }\n            valueSources.add( new BuildTimestampValueSource( config.getBuildStartTime(), timestampFormat ) );\n        }\n\n        valueSources.add( modelValueSource1 );\n\n        valueSources.add( new MapBasedValueSource( config.getUserProperties() ) );\n\n        valueSources.add( new MapBasedValueSource( modelProperties ) );\n\n        valueSources.add( new MapBasedValueSource( config.getSystemProperties() ) );\n\n        valueSources.add( new AbstractValueSource( false )\n        {\n            public Object getValue( String expression )\n            {\n                return config.getSystemProperties().getProperty( \"env.\" + expression );\n            }\n        } );\n\n        valueSources.add( modelValueSource2 );\n\n        return valueSources;\n    }\n","date":"2009-07-23 06:43:05","endLine":171,"groupId":"5271","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"createValueSources","params":"(finalModelmodel@finalFileprojectDir@finalModelBuildingRequestconfig)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-maven-10-0.7/blobInfo/CC_OUT/blobs/83/045a41c84f844f57ca15dc2d4bc277de21e32f.src","preCode":"    protected List<ValueSource> createValueSources( final Model model, final File projectDir, final ModelBuildingRequest config )\n    {\n        Properties modelProperties = model.getProperties();\n\n        ValueSource modelValueSource1 = new PrefixedObjectValueSource( PROJECT_PREFIXES, model, false );\n        ValueSource modelValueSource2 = new ObjectBasedValueSource( model );\n\n        \r\n        List<ValueSource> valueSources = new ArrayList<ValueSource>( 9 );\n\n        if ( projectDir != null )\n        {\n            ValueSource basedirValueSource = new PrefixedValueSourceWrapper( new AbstractValueSource( false )\n            {\n                public Object getValue( String expression )\n                {\n                    if ( \"basedir\".equals( expression ) )\n                    {\n                        return projectDir.getAbsolutePath();\n                    }\n                    return null;\n                }\n            }, PROJECT_PREFIXES, true );\n            valueSources.add( basedirValueSource );\n\n            ValueSource baseUriValueSource = new PrefixedValueSourceWrapper( new AbstractValueSource( false )\n            {\n                public Object getValue( String expression )\n                {\n                    if ( \"baseUri\".equals( expression ) )\n                    {\n                        return projectDir.getAbsoluteFile().toURI().toString();\n                    }\n                    return null;\n                }\n            }, PROJECT_PREFIXES, false );\n            valueSources.add( baseUriValueSource );\n\n            String timestampFormat = DEFAULT_BUILD_TIMESTAMP_FORMAT;\n            if ( modelProperties != null )\n            {\n                timestampFormat = modelProperties.getProperty( BUILD_TIMESTAMP_FORMAT_PROPERTY, timestampFormat );\n            }\n            valueSources.add( new BuildTimestampValueSource( config.getBuildStartTime(), timestampFormat ) );\n        }\n\n        valueSources.add( modelValueSource1 );\n\n        valueSources.add( new MapBasedValueSource( config.getUserProperties() ) );\n\n        valueSources.add( new MapBasedValueSource( modelProperties ) );\n\n        valueSources.add( new MapBasedValueSource( config.getSystemProperties() ) );\n\n        valueSources.add( new AbstractValueSource( false )\n        {\n            public Object getValue( String expression )\n            {\n                return config.getSystemProperties().getProperty( \"env.\" + expression );\n            }\n        } );\n\n        valueSources.add( modelValueSource2 );\n\n        return valueSources;\n    }\n","realPath":"maven-model-builder/src/main/java/org/apache/maven/model/interpolation/AbstractStringBasedModelInterpolator.java","repoName":"maven","snippetEndLine":0,"snippetStartLine":0,"startLine":106,"status":"NB"},{"authorDate":"2009-10-27 04:16:00","commitOrder":6,"curCode":"    protected List<ValueSource> createValueSources( final Model model, final File projectDir, final ProjectBuilderConfiguration config )\n    {\n        String timestampFormat = DEFAULT_BUILD_TIMESTAMP_FORMAT;\n\n        Properties modelProperties = model.getProperties();\n        if ( modelProperties != null )\n        {\n            timestampFormat = modelProperties.getProperty( BUILD_TIMESTAMP_FORMAT_PROPERTY, timestampFormat );\n        }\n\n        ValueSource modelValueSource1 = new PrefixedObjectValueSource( PROJECT_PREFIXES, model, false );\n        ValueSource modelValueSource2 = new ObjectBasedValueSource( model );\n\n        ValueSource basedirValueSource = new PrefixedValueSourceWrapper( new AbstractValueSource( false ){\n            public Object getValue( String expression )\n            {\n                if ( projectDir != null && \"basedir\".equals( expression ) )\n                {\n                    return projectDir.getAbsolutePath();\n                }\n                return null;\n            }\n        },\n        PROJECT_PREFIXES, true );\n        ValueSource baseUriValueSource = new PrefixedValueSourceWrapper( new AbstractValueSource( false ){\n            public Object getValue( String expression )\n            {\n                if ( projectDir != null && \"baseUri\".equals( expression ) )\n                {\n                    return projectDir.getAbsoluteFile().toURI().toString();\n                }\n                return null;\n            }\n        },\n        PROJECT_PREFIXES, false );\n        \n        List<ValueSource> valueSources = new ArrayList<ValueSource>( 9 );\n        \n        \r\n        valueSources.add( basedirValueSource );\n        valueSources.add( baseUriValueSource );\n        valueSources.add( new BuildTimestampValueSource( config.getBuildStartTime(), timestampFormat ) );\n        valueSources.add( modelValueSource1 );\n        valueSources.add( new MapBasedValueSource( config.getUserProperties() ) );\n        valueSources.add( new MapBasedValueSource( modelProperties ) );\n        valueSources.add( new MapBasedValueSource( config.getSystemProperties() ) );\n        valueSources.add( new AbstractValueSource( false )\n        {\n            public Object getValue( String expression )\n            {\n                return config.getSystemProperties().getProperty( \"env.\" + expression );\n            }\n        } );\n        valueSources.add( modelValueSource2 );\n        \n        return valueSources;\n    }\n","date":"2009-10-27 04:16:00","endLine":274,"groupId":"1845","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"createValueSources","params":"(finalModelmodel@finalFileprojectDir@finalProjectBuilderConfigurationconfig)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-maven-10-0.7/blobInfo/CC_OUT/blobs/69/01bb40783d092ee5c2493a4fcc776fdf53c930.src","preCode":"    protected List<ValueSource> createValueSources( final Model model, final File projectDir, final ProjectBuilderConfiguration config )\n    {\n        String timestampFormat = DEFAULT_BUILD_TIMESTAMP_FORMAT;\n\n        Properties modelProperties = model.getProperties();\n        if ( modelProperties != null )\n        {\n            timestampFormat = modelProperties.getProperty( BUILD_TIMESTAMP_FORMAT_PROPERTY, timestampFormat );\n        }\n\n        ValueSource modelValueSource1 = new PrefixedObjectValueSource( PROJECT_PREFIXES, model, false );\n        ValueSource modelValueSource2 = new ObjectBasedValueSource( model );\n\n        ValueSource basedirValueSource = new PrefixedValueSourceWrapper( new AbstractValueSource( false ){\n            public Object getValue( String expression )\n            {\n                if ( projectDir != null && \"basedir\".equals( expression ) )\n                {\n                    return projectDir.getAbsolutePath();\n                }\n                return null;\n            }\n        },\n        PROJECT_PREFIXES, true );\n        ValueSource baseUriValueSource = new PrefixedValueSourceWrapper( new AbstractValueSource( false ){\n            public Object getValue( String expression )\n            {\n                if ( projectDir != null && \"baseUri\".equals( expression ) )\n                {\n                    return projectDir.getAbsoluteFile().toURI().toString();\n                }\n                return null;\n            }\n        },\n        PROJECT_PREFIXES, false );\n        \n        List<ValueSource> valueSources = new ArrayList<ValueSource>( 9 );\n        \n        \r\n        valueSources.add( basedirValueSource );\n        valueSources.add( baseUriValueSource );\n        valueSources.add( new BuildTimestampValueSource( config.getBuildStartTime(), timestampFormat ) );\n        valueSources.add( modelValueSource1 );\n        valueSources.add( new MapBasedValueSource( config.getUserProperties() ) );\n        valueSources.add( new MapBasedValueSource( modelProperties ) );\n        valueSources.add( new MapBasedValueSource( config.getSystemProperties() ) );\n        valueSources.add( new AbstractValueSource( false )\n        {\n            public Object getValue( String expression )\n            {\n                return config.getSystemProperties().getProperty( \"env.\" + expression );\n            }\n        } );\n        valueSources.add( modelValueSource2 );\n        \n        return valueSources;\n    }\n","realPath":"maven-compat/src/main/java/org/apache/maven/project/interpolation/AbstractStringBasedModelInterpolator.java","repoName":"maven","snippetEndLine":0,"snippetStartLine":0,"startLine":218,"status":"B"}],"commitId":"20f8323b0a993799f77db49c787829449a17b8c0","commitMessage":"@@@[MNG-4221] Push all repository/artifact related code into a legacy module and create a backward compat layer for external consumers\n\no Refactored code to make maven-compat depend on maven-core.  this got ugly regarding some tests which to a high degree depend on a full-blown repository system\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/maven-3/trunk@829934 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2009-10-27 04:16:00","modifiedFileCount":"12","status":"M","submitter":"Benjamin Bentmann"},{"authorTime":"2009-10-27 04:16:00","codes":[{"authorDate":"2009-11-01 02:25:48","commitOrder":7,"curCode":"    protected List<ValueSource> createValueSources( final Model model, final File projectDir,\n                                                    final ModelBuildingRequest config,\n                                                    final ModelProblemCollector problems )\n    {\n        Properties modelProperties = model.getProperties();\n\n        ValueSource modelValueSource1 = new PrefixedObjectValueSource( PROJECT_PREFIXES, model, false );\n        if ( config.getValidationLevel() >= ModelBuildingRequest.VALIDATION_LEVEL_MAVEN_2_0 )\n        {\n            modelValueSource1 = new ProblemDetectingValueSource( modelValueSource1, \"pom.\", \"project.\", problems );\n        }\n\n        ValueSource modelValueSource2 = new ObjectBasedValueSource( model );\n        if ( config.getValidationLevel() >= ModelBuildingRequest.VALIDATION_LEVEL_MAVEN_2_0 )\n        {\n            modelValueSource2 = new ProblemDetectingValueSource( modelValueSource2, \"\", \"project.\", problems );\n        }\n\n        \r\n        List<ValueSource> valueSources = new ArrayList<ValueSource>( 9 );\n\n        if ( projectDir != null )\n        {\n            ValueSource basedirValueSource = new PrefixedValueSourceWrapper( new AbstractValueSource( false )\n            {\n                public Object getValue( String expression )\n                {\n                    if ( \"basedir\".equals( expression ) )\n                    {\n                        return projectDir.getAbsolutePath();\n                    }\n                    return null;\n                }\n            }, PROJECT_PREFIXES, true );\n            valueSources.add( basedirValueSource );\n\n            ValueSource baseUriValueSource = new PrefixedValueSourceWrapper( new AbstractValueSource( false )\n            {\n                public Object getValue( String expression )\n                {\n                    if ( \"baseUri\".equals( expression ) )\n                    {\n                        return projectDir.getAbsoluteFile().toURI().toString();\n                    }\n                    return null;\n                }\n            }, PROJECT_PREFIXES, false );\n            valueSources.add( baseUriValueSource );\n\n            String timestampFormat = DEFAULT_BUILD_TIMESTAMP_FORMAT;\n            if ( modelProperties != null )\n            {\n                timestampFormat = modelProperties.getProperty( BUILD_TIMESTAMP_FORMAT_PROPERTY, timestampFormat );\n            }\n            valueSources.add( new BuildTimestampValueSource( config.getBuildStartTime(), timestampFormat ) );\n        }\n\n        valueSources.add( modelValueSource1 );\n\n        valueSources.add( new MapBasedValueSource( config.getUserProperties() ) );\n\n        valueSources.add( new MapBasedValueSource( modelProperties ) );\n\n        valueSources.add( new MapBasedValueSource( config.getSystemProperties() ) );\n\n        valueSources.add( new AbstractValueSource( false )\n        {\n            public Object getValue( String expression )\n            {\n                return config.getSystemProperties().getProperty( \"env.\" + expression );\n            }\n        } );\n\n        valueSources.add( modelValueSource2 );\n\n        return valueSources;\n    }\n","date":"2009-11-01 02:25:48","endLine":183,"groupId":"5271","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"createValueSources","params":"(finalModelmodel@finalFileprojectDir@finalModelBuildingRequestconfig@finalModelProblemCollectorproblems)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-maven-10-0.7/blobInfo/CC_OUT/blobs/0f/7c658f16aabd0570293c1e08c31fa331ea9b8c.src","preCode":"    protected List<ValueSource> createValueSources( final Model model, final File projectDir, final ModelBuildingRequest config )\n    {\n        Properties modelProperties = model.getProperties();\n\n        ValueSource modelValueSource1 = new PrefixedObjectValueSource( PROJECT_PREFIXES, model, false );\n        ValueSource modelValueSource2 = new ObjectBasedValueSource( model );\n\n        \r\n        List<ValueSource> valueSources = new ArrayList<ValueSource>( 9 );\n\n        if ( projectDir != null )\n        {\n            ValueSource basedirValueSource = new PrefixedValueSourceWrapper( new AbstractValueSource( false )\n            {\n                public Object getValue( String expression )\n                {\n                    if ( \"basedir\".equals( expression ) )\n                    {\n                        return projectDir.getAbsolutePath();\n                    }\n                    return null;\n                }\n            }, PROJECT_PREFIXES, true );\n            valueSources.add( basedirValueSource );\n\n            ValueSource baseUriValueSource = new PrefixedValueSourceWrapper( new AbstractValueSource( false )\n            {\n                public Object getValue( String expression )\n                {\n                    if ( \"baseUri\".equals( expression ) )\n                    {\n                        return projectDir.getAbsoluteFile().toURI().toString();\n                    }\n                    return null;\n                }\n            }, PROJECT_PREFIXES, false );\n            valueSources.add( baseUriValueSource );\n\n            String timestampFormat = DEFAULT_BUILD_TIMESTAMP_FORMAT;\n            if ( modelProperties != null )\n            {\n                timestampFormat = modelProperties.getProperty( BUILD_TIMESTAMP_FORMAT_PROPERTY, timestampFormat );\n            }\n            valueSources.add( new BuildTimestampValueSource( config.getBuildStartTime(), timestampFormat ) );\n        }\n\n        valueSources.add( modelValueSource1 );\n\n        valueSources.add( new MapBasedValueSource( config.getUserProperties() ) );\n\n        valueSources.add( new MapBasedValueSource( modelProperties ) );\n\n        valueSources.add( new MapBasedValueSource( config.getSystemProperties() ) );\n\n        valueSources.add( new AbstractValueSource( false )\n        {\n            public Object getValue( String expression )\n            {\n                return config.getSystemProperties().getProperty( \"env.\" + expression );\n            }\n        } );\n\n        valueSources.add( modelValueSource2 );\n\n        return valueSources;\n    }\n","realPath":"maven-model-builder/src/main/java/org/apache/maven/model/interpolation/AbstractStringBasedModelInterpolator.java","repoName":"maven","snippetEndLine":0,"snippetStartLine":0,"startLine":107,"status":"M"},{"authorDate":"2009-10-27 04:16:00","commitOrder":7,"curCode":"    protected List<ValueSource> createValueSources( final Model model, final File projectDir, final ProjectBuilderConfiguration config )\n    {\n        String timestampFormat = DEFAULT_BUILD_TIMESTAMP_FORMAT;\n\n        Properties modelProperties = model.getProperties();\n        if ( modelProperties != null )\n        {\n            timestampFormat = modelProperties.getProperty( BUILD_TIMESTAMP_FORMAT_PROPERTY, timestampFormat );\n        }\n\n        ValueSource modelValueSource1 = new PrefixedObjectValueSource( PROJECT_PREFIXES, model, false );\n        ValueSource modelValueSource2 = new ObjectBasedValueSource( model );\n\n        ValueSource basedirValueSource = new PrefixedValueSourceWrapper( new AbstractValueSource( false ){\n            public Object getValue( String expression )\n            {\n                if ( projectDir != null && \"basedir\".equals( expression ) )\n                {\n                    return projectDir.getAbsolutePath();\n                }\n                return null;\n            }\n        },\n        PROJECT_PREFIXES, true );\n        ValueSource baseUriValueSource = new PrefixedValueSourceWrapper( new AbstractValueSource( false ){\n            public Object getValue( String expression )\n            {\n                if ( projectDir != null && \"baseUri\".equals( expression ) )\n                {\n                    return projectDir.getAbsoluteFile().toURI().toString();\n                }\n                return null;\n            }\n        },\n        PROJECT_PREFIXES, false );\n        \n        List<ValueSource> valueSources = new ArrayList<ValueSource>( 9 );\n        \n        \r\n        valueSources.add( basedirValueSource );\n        valueSources.add( baseUriValueSource );\n        valueSources.add( new BuildTimestampValueSource( config.getBuildStartTime(), timestampFormat ) );\n        valueSources.add( modelValueSource1 );\n        valueSources.add( new MapBasedValueSource( config.getUserProperties() ) );\n        valueSources.add( new MapBasedValueSource( modelProperties ) );\n        valueSources.add( new MapBasedValueSource( config.getSystemProperties() ) );\n        valueSources.add( new AbstractValueSource( false )\n        {\n            public Object getValue( String expression )\n            {\n                return config.getSystemProperties().getProperty( \"env.\" + expression );\n            }\n        } );\n        valueSources.add( modelValueSource2 );\n        \n        return valueSources;\n    }\n","date":"2009-10-27 04:16:00","endLine":274,"groupId":"1845","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"createValueSources","params":"(finalModelmodel@finalFileprojectDir@finalProjectBuilderConfigurationconfig)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-maven-10-0.7/blobInfo/CC_OUT/blobs/69/01bb40783d092ee5c2493a4fcc776fdf53c930.src","preCode":"    protected List<ValueSource> createValueSources( final Model model, final File projectDir, final ProjectBuilderConfiguration config )\n    {\n        String timestampFormat = DEFAULT_BUILD_TIMESTAMP_FORMAT;\n\n        Properties modelProperties = model.getProperties();\n        if ( modelProperties != null )\n        {\n            timestampFormat = modelProperties.getProperty( BUILD_TIMESTAMP_FORMAT_PROPERTY, timestampFormat );\n        }\n\n        ValueSource modelValueSource1 = new PrefixedObjectValueSource( PROJECT_PREFIXES, model, false );\n        ValueSource modelValueSource2 = new ObjectBasedValueSource( model );\n\n        ValueSource basedirValueSource = new PrefixedValueSourceWrapper( new AbstractValueSource( false ){\n            public Object getValue( String expression )\n            {\n                if ( projectDir != null && \"basedir\".equals( expression ) )\n                {\n                    return projectDir.getAbsolutePath();\n                }\n                return null;\n            }\n        },\n        PROJECT_PREFIXES, true );\n        ValueSource baseUriValueSource = new PrefixedValueSourceWrapper( new AbstractValueSource( false ){\n            public Object getValue( String expression )\n            {\n                if ( projectDir != null && \"baseUri\".equals( expression ) )\n                {\n                    return projectDir.getAbsoluteFile().toURI().toString();\n                }\n                return null;\n            }\n        },\n        PROJECT_PREFIXES, false );\n        \n        List<ValueSource> valueSources = new ArrayList<ValueSource>( 9 );\n        \n        \r\n        valueSources.add( basedirValueSource );\n        valueSources.add( baseUriValueSource );\n        valueSources.add( new BuildTimestampValueSource( config.getBuildStartTime(), timestampFormat ) );\n        valueSources.add( modelValueSource1 );\n        valueSources.add( new MapBasedValueSource( config.getUserProperties() ) );\n        valueSources.add( new MapBasedValueSource( modelProperties ) );\n        valueSources.add( new MapBasedValueSource( config.getSystemProperties() ) );\n        valueSources.add( new AbstractValueSource( false )\n        {\n            public Object getValue( String expression )\n            {\n                return config.getSystemProperties().getProperty( \"env.\" + expression );\n            }\n        } );\n        valueSources.add( modelValueSource2 );\n        \n        return valueSources;\n    }\n","realPath":"maven-compat/src/main/java/org/apache/maven/project/interpolation/AbstractStringBasedModelInterpolator.java","repoName":"maven","snippetEndLine":0,"snippetStartLine":0,"startLine":218,"status":"N"}],"commitId":"002f0a443264222e231b077c2430fa308d8af2b1","commitMessage":"@@@[MNG-4421] Warn regarding old-style references when used in a project build\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/maven-3/trunk@831579 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2009-11-01 02:25:48","modifiedFileCount":"2","status":"M","submitter":"Benjamin Bentmann"},{"authorTime":"2010-08-20 06:26:55","codes":[{"authorDate":"2009-11-01 02:25:48","commitOrder":8,"curCode":"    protected List<ValueSource> createValueSources( final Model model, final File projectDir,\n                                                    final ModelBuildingRequest config,\n                                                    final ModelProblemCollector problems )\n    {\n        Properties modelProperties = model.getProperties();\n\n        ValueSource modelValueSource1 = new PrefixedObjectValueSource( PROJECT_PREFIXES, model, false );\n        if ( config.getValidationLevel() >= ModelBuildingRequest.VALIDATION_LEVEL_MAVEN_2_0 )\n        {\n            modelValueSource1 = new ProblemDetectingValueSource( modelValueSource1, \"pom.\", \"project.\", problems );\n        }\n\n        ValueSource modelValueSource2 = new ObjectBasedValueSource( model );\n        if ( config.getValidationLevel() >= ModelBuildingRequest.VALIDATION_LEVEL_MAVEN_2_0 )\n        {\n            modelValueSource2 = new ProblemDetectingValueSource( modelValueSource2, \"\", \"project.\", problems );\n        }\n\n        \r\n        List<ValueSource> valueSources = new ArrayList<ValueSource>( 9 );\n\n        if ( projectDir != null )\n        {\n            ValueSource basedirValueSource = new PrefixedValueSourceWrapper( new AbstractValueSource( false )\n            {\n                public Object getValue( String expression )\n                {\n                    if ( \"basedir\".equals( expression ) )\n                    {\n                        return projectDir.getAbsolutePath();\n                    }\n                    return null;\n                }\n            }, PROJECT_PREFIXES, true );\n            valueSources.add( basedirValueSource );\n\n            ValueSource baseUriValueSource = new PrefixedValueSourceWrapper( new AbstractValueSource( false )\n            {\n                public Object getValue( String expression )\n                {\n                    if ( \"baseUri\".equals( expression ) )\n                    {\n                        return projectDir.getAbsoluteFile().toURI().toString();\n                    }\n                    return null;\n                }\n            }, PROJECT_PREFIXES, false );\n            valueSources.add( baseUriValueSource );\n\n            String timestampFormat = DEFAULT_BUILD_TIMESTAMP_FORMAT;\n            if ( modelProperties != null )\n            {\n                timestampFormat = modelProperties.getProperty( BUILD_TIMESTAMP_FORMAT_PROPERTY, timestampFormat );\n            }\n            valueSources.add( new BuildTimestampValueSource( config.getBuildStartTime(), timestampFormat ) );\n        }\n\n        valueSources.add( modelValueSource1 );\n\n        valueSources.add( new MapBasedValueSource( config.getUserProperties() ) );\n\n        valueSources.add( new MapBasedValueSource( modelProperties ) );\n\n        valueSources.add( new MapBasedValueSource( config.getSystemProperties() ) );\n\n        valueSources.add( new AbstractValueSource( false )\n        {\n            public Object getValue( String expression )\n            {\n                return config.getSystemProperties().getProperty( \"env.\" + expression );\n            }\n        } );\n\n        valueSources.add( modelValueSource2 );\n\n        return valueSources;\n    }\n","date":"2009-11-01 02:25:48","endLine":183,"groupId":"5271","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"createValueSources","params":"(finalModelmodel@finalFileprojectDir@finalModelBuildingRequestconfig@finalModelProblemCollectorproblems)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-maven-10-0.7/blobInfo/CC_OUT/blobs/0f/7c658f16aabd0570293c1e08c31fa331ea9b8c.src","preCode":"    protected List<ValueSource> createValueSources( final Model model, final File projectDir,\n                                                    final ModelBuildingRequest config,\n                                                    final ModelProblemCollector problems )\n    {\n        Properties modelProperties = model.getProperties();\n\n        ValueSource modelValueSource1 = new PrefixedObjectValueSource( PROJECT_PREFIXES, model, false );\n        if ( config.getValidationLevel() >= ModelBuildingRequest.VALIDATION_LEVEL_MAVEN_2_0 )\n        {\n            modelValueSource1 = new ProblemDetectingValueSource( modelValueSource1, \"pom.\", \"project.\", problems );\n        }\n\n        ValueSource modelValueSource2 = new ObjectBasedValueSource( model );\n        if ( config.getValidationLevel() >= ModelBuildingRequest.VALIDATION_LEVEL_MAVEN_2_0 )\n        {\n            modelValueSource2 = new ProblemDetectingValueSource( modelValueSource2, \"\", \"project.\", problems );\n        }\n\n        \r\n        List<ValueSource> valueSources = new ArrayList<ValueSource>( 9 );\n\n        if ( projectDir != null )\n        {\n            ValueSource basedirValueSource = new PrefixedValueSourceWrapper( new AbstractValueSource( false )\n            {\n                public Object getValue( String expression )\n                {\n                    if ( \"basedir\".equals( expression ) )\n                    {\n                        return projectDir.getAbsolutePath();\n                    }\n                    return null;\n                }\n            }, PROJECT_PREFIXES, true );\n            valueSources.add( basedirValueSource );\n\n            ValueSource baseUriValueSource = new PrefixedValueSourceWrapper( new AbstractValueSource( false )\n            {\n                public Object getValue( String expression )\n                {\n                    if ( \"baseUri\".equals( expression ) )\n                    {\n                        return projectDir.getAbsoluteFile().toURI().toString();\n                    }\n                    return null;\n                }\n            }, PROJECT_PREFIXES, false );\n            valueSources.add( baseUriValueSource );\n\n            String timestampFormat = DEFAULT_BUILD_TIMESTAMP_FORMAT;\n            if ( modelProperties != null )\n            {\n                timestampFormat = modelProperties.getProperty( BUILD_TIMESTAMP_FORMAT_PROPERTY, timestampFormat );\n            }\n            valueSources.add( new BuildTimestampValueSource( config.getBuildStartTime(), timestampFormat ) );\n        }\n\n        valueSources.add( modelValueSource1 );\n\n        valueSources.add( new MapBasedValueSource( config.getUserProperties() ) );\n\n        valueSources.add( new MapBasedValueSource( modelProperties ) );\n\n        valueSources.add( new MapBasedValueSource( config.getSystemProperties() ) );\n\n        valueSources.add( new AbstractValueSource( false )\n        {\n            public Object getValue( String expression )\n            {\n                return config.getSystemProperties().getProperty( \"env.\" + expression );\n            }\n        } );\n\n        valueSources.add( modelValueSource2 );\n\n        return valueSources;\n    }\n","realPath":"maven-model-builder/src/main/java/org/apache/maven/model/interpolation/AbstractStringBasedModelInterpolator.java","repoName":"maven","snippetEndLine":0,"snippetStartLine":0,"startLine":107,"status":"N"},{"authorDate":"2010-08-20 06:26:55","commitOrder":8,"curCode":"    protected List<ValueSource> createValueSources( final Model model, final File projectDir,\n                                                    final ProjectBuilderConfiguration config )\n    {\n        String timestampFormat = DEFAULT_BUILD_TIMESTAMP_FORMAT;\n\n        Properties modelProperties = model.getProperties();\n        if ( modelProperties != null )\n        {\n            timestampFormat = modelProperties.getProperty( BUILD_TIMESTAMP_FORMAT_PROPERTY, timestampFormat );\n        }\n\n        ValueSource modelValueSource1 = new PrefixedObjectValueSource( PROJECT_PREFIXES, model, false );\n        ValueSource modelValueSource2 = new ObjectBasedValueSource( model );\n\n        ValueSource basedirValueSource = new PrefixedValueSourceWrapper( new AbstractValueSource( false )\n        {\n            public Object getValue( String expression )\n            {\n                if ( projectDir != null && \"basedir\".equals( expression ) )\n                {\n                    return projectDir.getAbsolutePath();\n                }\n                return null;\n            }\n        }, PROJECT_PREFIXES, true );\n        ValueSource baseUriValueSource = new PrefixedValueSourceWrapper( new AbstractValueSource( false )\n        {\n            public Object getValue( String expression )\n            {\n                if ( projectDir != null && \"baseUri\".equals( expression ) )\n                {\n                    return projectDir.getAbsoluteFile().toURI().toString();\n                }\n                return null;\n            }\n        }, PROJECT_PREFIXES, false );\n\n        List<ValueSource> valueSources = new ArrayList<ValueSource>( 9 );\n\n        \r\n        valueSources.add( basedirValueSource );\n        valueSources.add( baseUriValueSource );\n        valueSources.add( new BuildTimestampValueSource( config.getBuildStartTime(), timestampFormat ) );\n        valueSources.add( modelValueSource1 );\n        valueSources.add( new MapBasedValueSource( config.getUserProperties() ) );\n        valueSources.add( new MapBasedValueSource( modelProperties ) );\n        valueSources.add( new MapBasedValueSource( config.getExecutionProperties() ) );\n        valueSources.add( new AbstractValueSource( false )\n        {\n            public Object getValue( String expression )\n            {\n                return config.getExecutionProperties().getProperty( \"env.\" + expression );\n            }\n        } );\n        valueSources.add( modelValueSource2 );\n\n        return valueSources;\n    }\n","date":"2010-08-20 06:26:55","endLine":275,"groupId":"1845","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"createValueSources","params":"(finalModelmodel@finalFileprojectDir@finalProjectBuilderConfigurationconfig)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-maven-10-0.7/blobInfo/CC_OUT/blobs/94/97f17115ac20b43af149b8066b65e04446fa1f.src","preCode":"    protected List<ValueSource> createValueSources( final Model model, final File projectDir,\n                                                    final ProjectBuilderConfiguration config )\n    {\n        String timestampFormat = DEFAULT_BUILD_TIMESTAMP_FORMAT;\n\n        Properties modelProperties = model.getProperties();\n        if ( modelProperties != null )\n        {\n            timestampFormat = modelProperties.getProperty( BUILD_TIMESTAMP_FORMAT_PROPERTY, timestampFormat );\n        }\n\n        ValueSource modelValueSource1 = new PrefixedObjectValueSource( PROJECT_PREFIXES, model, false );\n        ValueSource modelValueSource2 = new ObjectBasedValueSource( model );\n\n        ValueSource basedirValueSource = new PrefixedValueSourceWrapper( new AbstractValueSource( false )\n        {\n            public Object getValue( String expression )\n            {\n                if ( projectDir != null && \"basedir\".equals( expression ) )\n                {\n                    return projectDir.getAbsolutePath();\n                }\n                return null;\n            }\n        }, PROJECT_PREFIXES, true );\n        ValueSource baseUriValueSource = new PrefixedValueSourceWrapper( new AbstractValueSource( false )\n        {\n            public Object getValue( String expression )\n            {\n                if ( projectDir != null && \"baseUri\".equals( expression ) )\n                {\n                    return projectDir.getAbsoluteFile().toURI().toString();\n                }\n                return null;\n            }\n        }, PROJECT_PREFIXES, false );\n\n        List<ValueSource> valueSources = new ArrayList<ValueSource>( 9 );\n\n        \r\n        valueSources.add( basedirValueSource );\n        valueSources.add( baseUriValueSource );\n        valueSources.add( new BuildTimestampValueSource( config.getBuildStartTime(), timestampFormat ) );\n        valueSources.add( modelValueSource1 );\n        valueSources.add( new MapBasedValueSource( config.getUserProperties() ) );\n        valueSources.add( new MapBasedValueSource( modelProperties ) );\n        valueSources.add( new MapBasedValueSource( config.getSystemProperties() ) );\n        valueSources.add( new AbstractValueSource( false )\n        {\n            public Object getValue( String expression )\n            {\n                return config.getSystemProperties().getProperty( \"env.\" + expression );\n            }\n        } );\n        valueSources.add( modelValueSource2 );\n\n        return valueSources;\n    }\n","realPath":"maven-compat/src/main/java/org/apache/maven/project/interpolation/AbstractStringBasedModelInterpolator.java","repoName":"maven","snippetEndLine":0,"snippetStartLine":0,"startLine":218,"status":"M"}],"commitId":"2225bc7bbe9f79eb8608cc0f83e59585b9513654","commitMessage":"@@@[MNG-4765] Failing to determine java version for profile....\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/maven-3/trunk@987335 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2010-08-20 06:26:55","modifiedFileCount":"3","status":"M","submitter":"Benjamin Bentmann"},{"authorTime":"2010-08-20 06:26:55","codes":[{"authorDate":"2014-06-13 02:09:19","commitOrder":9,"curCode":"    protected List<ValueSource> createValueSources( final Model model, final File projectDir,\n                                                    final ModelBuildingRequest config,\n                                                    final ModelProblemCollector problems )\n    {\n        Properties modelProperties = model.getProperties();\n\n        ValueSource modelValueSource1 = new PrefixedObjectValueSource( PROJECT_PREFIXES, model, false );\n        if ( config.getValidationLevel() >= ModelBuildingRequest.VALIDATION_LEVEL_MAVEN_2_0 )\n        {\n            modelValueSource1 = new ProblemDetectingValueSource( modelValueSource1, \"pom.\", \"project.\", problems );\n        }\n\n        ValueSource modelValueSource2 = new ObjectBasedValueSource( model );\n        if ( config.getValidationLevel() >= ModelBuildingRequest.VALIDATION_LEVEL_MAVEN_2_0 )\n        {\n            modelValueSource2 = new ProblemDetectingValueSource( modelValueSource2, \"\", \"project.\", problems );\n        }\n\n        \r\n        List<ValueSource> valueSources = new ArrayList<ValueSource>( 9 );\n\n        if ( projectDir != null )\n        {\n            ValueSource basedirValueSource = new PrefixedValueSourceWrapper( new AbstractValueSource( false )\n            {\n                public Object getValue( String expression )\n                {\n                    if ( \"basedir\".equals( expression ) )\n                    {\n                        return projectDir.getAbsolutePath();\n                    }\n                    return null;\n                }\n            }, PROJECT_PREFIXES, true );\n            valueSources.add( basedirValueSource );\n\n            ValueSource baseUriValueSource = new PrefixedValueSourceWrapper( new AbstractValueSource( false )\n            {\n                public Object getValue( String expression )\n                {\n                    if ( \"baseUri\".equals( expression ) )\n                    {\n                        return projectDir.getAbsoluteFile().toURI().toString();\n                    }\n                    return null;\n                }\n            }, PROJECT_PREFIXES, false );\n            valueSources.add( baseUriValueSource );\n            valueSources.add( new BuildTimestampValueSource( config.getBuildStartTime(), modelProperties ) );\n        }\n\n        valueSources.add( modelValueSource1 );\n\n        valueSources.add( new MapBasedValueSource( config.getUserProperties() ) );\n\n        valueSources.add( new MapBasedValueSource( modelProperties ) );\n\n        valueSources.add( new MapBasedValueSource( config.getSystemProperties() ) );\n\n        valueSources.add( new AbstractValueSource( false )\n        {\n            public Object getValue( String expression )\n            {\n                return config.getSystemProperties().getProperty( \"env.\" + expression );\n            }\n        } );\n\n        valueSources.add( modelValueSource2 );\n\n        return valueSources;\n    }\n","date":"2014-06-13 22:25:37","endLine":181,"groupId":"0","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"createValueSources","params":"(finalModelmodel@finalFileprojectDir@finalModelBuildingRequestconfig@finalModelProblemCollectorproblems)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-maven-10-0.7/blobInfo/CC_OUT/blobs/3a/d2348e37267ff5b9a606eaf9737b51340bf757.src","preCode":"    protected List<ValueSource> createValueSources( final Model model, final File projectDir,\n                                                    final ModelBuildingRequest config,\n                                                    final ModelProblemCollector problems )\n    {\n        Properties modelProperties = model.getProperties();\n\n        ValueSource modelValueSource1 = new PrefixedObjectValueSource( PROJECT_PREFIXES, model, false );\n        if ( config.getValidationLevel() >= ModelBuildingRequest.VALIDATION_LEVEL_MAVEN_2_0 )\n        {\n            modelValueSource1 = new ProblemDetectingValueSource( modelValueSource1, \"pom.\", \"project.\", problems );\n        }\n\n        ValueSource modelValueSource2 = new ObjectBasedValueSource( model );\n        if ( config.getValidationLevel() >= ModelBuildingRequest.VALIDATION_LEVEL_MAVEN_2_0 )\n        {\n            modelValueSource2 = new ProblemDetectingValueSource( modelValueSource2, \"\", \"project.\", problems );\n        }\n\n        \r\n        List<ValueSource> valueSources = new ArrayList<ValueSource>( 9 );\n\n        if ( projectDir != null )\n        {\n            ValueSource basedirValueSource = new PrefixedValueSourceWrapper( new AbstractValueSource( false )\n            {\n                public Object getValue( String expression )\n                {\n                    if ( \"basedir\".equals( expression ) )\n                    {\n                        return projectDir.getAbsolutePath();\n                    }\n                    return null;\n                }\n            }, PROJECT_PREFIXES, true );\n            valueSources.add( basedirValueSource );\n\n            ValueSource baseUriValueSource = new PrefixedValueSourceWrapper( new AbstractValueSource( false )\n            {\n                public Object getValue( String expression )\n                {\n                    if ( \"baseUri\".equals( expression ) )\n                    {\n                        return projectDir.getAbsoluteFile().toURI().toString();\n                    }\n                    return null;\n                }\n            }, PROJECT_PREFIXES, false );\n            valueSources.add( baseUriValueSource );\n\n            String timestampFormat = DEFAULT_BUILD_TIMESTAMP_FORMAT;\n            if ( modelProperties != null )\n            {\n                timestampFormat = modelProperties.getProperty( BUILD_TIMESTAMP_FORMAT_PROPERTY, timestampFormat );\n            }\n            valueSources.add( new BuildTimestampValueSource( config.getBuildStartTime(), timestampFormat ) );\n        }\n\n        valueSources.add( modelValueSource1 );\n\n        valueSources.add( new MapBasedValueSource( config.getUserProperties() ) );\n\n        valueSources.add( new MapBasedValueSource( modelProperties ) );\n\n        valueSources.add( new MapBasedValueSource( config.getSystemProperties() ) );\n\n        valueSources.add( new AbstractValueSource( false )\n        {\n            public Object getValue( String expression )\n            {\n                return config.getSystemProperties().getProperty( \"env.\" + expression );\n            }\n        } );\n\n        valueSources.add( modelValueSource2 );\n\n        return valueSources;\n    }\n","realPath":"maven-model-builder/src/main/java/org/apache/maven/model/interpolation/AbstractStringBasedModelInterpolator.java","repoName":"maven","snippetEndLine":0,"snippetStartLine":0,"startLine":111,"status":"M"},{"authorDate":"2010-08-20 06:26:55","commitOrder":9,"curCode":"    protected List<ValueSource> createValueSources( final Model model, final File projectDir,\n                                                    final ProjectBuilderConfiguration config )\n    {\n        String timestampFormat = DEFAULT_BUILD_TIMESTAMP_FORMAT;\n\n        Properties modelProperties = model.getProperties();\n        if ( modelProperties != null )\n        {\n            timestampFormat = modelProperties.getProperty( BUILD_TIMESTAMP_FORMAT_PROPERTY, timestampFormat );\n        }\n\n        ValueSource modelValueSource1 = new PrefixedObjectValueSource( PROJECT_PREFIXES, model, false );\n        ValueSource modelValueSource2 = new ObjectBasedValueSource( model );\n\n        ValueSource basedirValueSource = new PrefixedValueSourceWrapper( new AbstractValueSource( false )\n        {\n            public Object getValue( String expression )\n            {\n                if ( projectDir != null && \"basedir\".equals( expression ) )\n                {\n                    return projectDir.getAbsolutePath();\n                }\n                return null;\n            }\n        }, PROJECT_PREFIXES, true );\n        ValueSource baseUriValueSource = new PrefixedValueSourceWrapper( new AbstractValueSource( false )\n        {\n            public Object getValue( String expression )\n            {\n                if ( projectDir != null && \"baseUri\".equals( expression ) )\n                {\n                    return projectDir.getAbsoluteFile().toURI().toString();\n                }\n                return null;\n            }\n        }, PROJECT_PREFIXES, false );\n\n        List<ValueSource> valueSources = new ArrayList<ValueSource>( 9 );\n\n        \r\n        valueSources.add( basedirValueSource );\n        valueSources.add( baseUriValueSource );\n        valueSources.add( new BuildTimestampValueSource( config.getBuildStartTime(), timestampFormat ) );\n        valueSources.add( modelValueSource1 );\n        valueSources.add( new MapBasedValueSource( config.getUserProperties() ) );\n        valueSources.add( new MapBasedValueSource( modelProperties ) );\n        valueSources.add( new MapBasedValueSource( config.getExecutionProperties() ) );\n        valueSources.add( new AbstractValueSource( false )\n        {\n            public Object getValue( String expression )\n            {\n                return config.getExecutionProperties().getProperty( \"env.\" + expression );\n            }\n        } );\n        valueSources.add( modelValueSource2 );\n\n        return valueSources;\n    }\n","date":"2010-08-20 06:26:55","endLine":275,"groupId":"1845","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"createValueSources","params":"(finalModelmodel@finalFileprojectDir@finalProjectBuilderConfigurationconfig)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-maven-10-0.7/blobInfo/CC_OUT/blobs/94/97f17115ac20b43af149b8066b65e04446fa1f.src","preCode":"    protected List<ValueSource> createValueSources( final Model model, final File projectDir,\n                                                    final ProjectBuilderConfiguration config )\n    {\n        String timestampFormat = DEFAULT_BUILD_TIMESTAMP_FORMAT;\n\n        Properties modelProperties = model.getProperties();\n        if ( modelProperties != null )\n        {\n            timestampFormat = modelProperties.getProperty( BUILD_TIMESTAMP_FORMAT_PROPERTY, timestampFormat );\n        }\n\n        ValueSource modelValueSource1 = new PrefixedObjectValueSource( PROJECT_PREFIXES, model, false );\n        ValueSource modelValueSource2 = new ObjectBasedValueSource( model );\n\n        ValueSource basedirValueSource = new PrefixedValueSourceWrapper( new AbstractValueSource( false )\n        {\n            public Object getValue( String expression )\n            {\n                if ( projectDir != null && \"basedir\".equals( expression ) )\n                {\n                    return projectDir.getAbsolutePath();\n                }\n                return null;\n            }\n        }, PROJECT_PREFIXES, true );\n        ValueSource baseUriValueSource = new PrefixedValueSourceWrapper( new AbstractValueSource( false )\n        {\n            public Object getValue( String expression )\n            {\n                if ( projectDir != null && \"baseUri\".equals( expression ) )\n                {\n                    return projectDir.getAbsoluteFile().toURI().toString();\n                }\n                return null;\n            }\n        }, PROJECT_PREFIXES, false );\n\n        List<ValueSource> valueSources = new ArrayList<ValueSource>( 9 );\n\n        \r\n        valueSources.add( basedirValueSource );\n        valueSources.add( baseUriValueSource );\n        valueSources.add( new BuildTimestampValueSource( config.getBuildStartTime(), timestampFormat ) );\n        valueSources.add( modelValueSource1 );\n        valueSources.add( new MapBasedValueSource( config.getUserProperties() ) );\n        valueSources.add( new MapBasedValueSource( modelProperties ) );\n        valueSources.add( new MapBasedValueSource( config.getExecutionProperties() ) );\n        valueSources.add( new AbstractValueSource( false )\n        {\n            public Object getValue( String expression )\n            {\n                return config.getExecutionProperties().getProperty( \"env.\" + expression );\n            }\n        } );\n        valueSources.add( modelValueSource2 );\n\n        return valueSources;\n    }\n","realPath":"maven-compat/src/main/java/org/apache/maven/project/interpolation/AbstractStringBasedModelInterpolator.java","repoName":"maven","snippetEndLine":0,"snippetStartLine":0,"startLine":218,"status":"N"}],"commitId":"2a4d172600a6252da662edb450e9513067d6ef9e","commitMessage":"@@@MNG-5452: ${maven.build.timestamp} should use UTC instead of local timezone (or be configurable)\n","date":"2014-06-13 22:25:37","modifiedFileCount":"4","status":"M","submitter":"Jason van Zyl"},{"authorTime":"2010-08-20 06:26:55","codes":[{"authorDate":"2015-01-25 03:43:42","commitOrder":10,"curCode":"    protected List<ValueSource> createValueSources( final Model model, final File projectDir,\n                                                    final ModelBuildingRequest config,\n                                                    final ModelProblemCollector problems )\n    {\n        Properties modelProperties = model.getProperties();\n\n        ValueSource modelValueSource1 = new PrefixedObjectValueSource( PROJECT_PREFIXES, model, false );\n        if ( config.getValidationLevel() >= ModelBuildingRequest.VALIDATION_LEVEL_MAVEN_2_0 )\n        {\n            modelValueSource1 = new ProblemDetectingValueSource( modelValueSource1, \"pom.\", \"project.\", problems );\n        }\n\n        ValueSource modelValueSource2 = new ObjectBasedValueSource( model );\n        if ( config.getValidationLevel() >= ModelBuildingRequest.VALIDATION_LEVEL_MAVEN_2_0 )\n        {\n            modelValueSource2 = new ProblemDetectingValueSource( modelValueSource2, \"\", \"project.\", problems );\n        }\n\n        \r\n        List<ValueSource> valueSources = new ArrayList<ValueSource>( 9 );\n\n        if ( projectDir != null )\n        {\n            ValueSource basedirValueSource = new PrefixedValueSourceWrapper( new AbstractValueSource( false )\n            {\n                @Override\n                public Object getValue( String expression )\n                {\n                    if ( \"basedir\".equals( expression ) )\n                    {\n                        return projectDir.getAbsolutePath();\n                    }\n                    return null;\n                }\n            }, PROJECT_PREFIXES, true );\n            valueSources.add( basedirValueSource );\n\n            ValueSource baseUriValueSource = new PrefixedValueSourceWrapper( new AbstractValueSource( false )\n            {\n                @Override\n                public Object getValue( String expression )\n                {\n                    if ( \"baseUri\".equals( expression ) )\n                    {\n                        return projectDir.getAbsoluteFile().toURI().toString();\n                    }\n                    return null;\n                }\n            }, PROJECT_PREFIXES, false );\n            valueSources.add( baseUriValueSource );\n            valueSources.add( new BuildTimestampValueSource( config.getBuildStartTime(), modelProperties ) );\n        }\n\n        valueSources.add( modelValueSource1 );\n\n        valueSources.add( new MapBasedValueSource( config.getUserProperties() ) );\n\n        valueSources.add( new MapBasedValueSource( modelProperties ) );\n\n        valueSources.add( new MapBasedValueSource( config.getSystemProperties() ) );\n\n        valueSources.add( new AbstractValueSource( false )\n        {\n            @Override\n            public Object getValue( String expression )\n            {\n                return config.getSystemProperties().getProperty( \"env.\" + expression );\n            }\n        } );\n\n        valueSources.add( modelValueSource2 );\n\n        return valueSources;\n    }\n","date":"2015-01-25 03:45:25","endLine":184,"groupId":"4221","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"createValueSources","params":"(finalModelmodel@finalFileprojectDir@finalModelBuildingRequestconfig@finalModelProblemCollectorproblems)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-maven-10-0.7/blobInfo/CC_OUT/blobs/13/90a4ed5807d5769657c55656267b97edc552ad.src","preCode":"    protected List<ValueSource> createValueSources( final Model model, final File projectDir,\n                                                    final ModelBuildingRequest config,\n                                                    final ModelProblemCollector problems )\n    {\n        Properties modelProperties = model.getProperties();\n\n        ValueSource modelValueSource1 = new PrefixedObjectValueSource( PROJECT_PREFIXES, model, false );\n        if ( config.getValidationLevel() >= ModelBuildingRequest.VALIDATION_LEVEL_MAVEN_2_0 )\n        {\n            modelValueSource1 = new ProblemDetectingValueSource( modelValueSource1, \"pom.\", \"project.\", problems );\n        }\n\n        ValueSource modelValueSource2 = new ObjectBasedValueSource( model );\n        if ( config.getValidationLevel() >= ModelBuildingRequest.VALIDATION_LEVEL_MAVEN_2_0 )\n        {\n            modelValueSource2 = new ProblemDetectingValueSource( modelValueSource2, \"\", \"project.\", problems );\n        }\n\n        \r\n        List<ValueSource> valueSources = new ArrayList<ValueSource>( 9 );\n\n        if ( projectDir != null )\n        {\n            ValueSource basedirValueSource = new PrefixedValueSourceWrapper( new AbstractValueSource( false )\n            {\n                public Object getValue( String expression )\n                {\n                    if ( \"basedir\".equals( expression ) )\n                    {\n                        return projectDir.getAbsolutePath();\n                    }\n                    return null;\n                }\n            }, PROJECT_PREFIXES, true );\n            valueSources.add( basedirValueSource );\n\n            ValueSource baseUriValueSource = new PrefixedValueSourceWrapper( new AbstractValueSource( false )\n            {\n                public Object getValue( String expression )\n                {\n                    if ( \"baseUri\".equals( expression ) )\n                    {\n                        return projectDir.getAbsoluteFile().toURI().toString();\n                    }\n                    return null;\n                }\n            }, PROJECT_PREFIXES, false );\n            valueSources.add( baseUriValueSource );\n            valueSources.add( new BuildTimestampValueSource( config.getBuildStartTime(), modelProperties ) );\n        }\n\n        valueSources.add( modelValueSource1 );\n\n        valueSources.add( new MapBasedValueSource( config.getUserProperties() ) );\n\n        valueSources.add( new MapBasedValueSource( modelProperties ) );\n\n        valueSources.add( new MapBasedValueSource( config.getSystemProperties() ) );\n\n        valueSources.add( new AbstractValueSource( false )\n        {\n            public Object getValue( String expression )\n            {\n                return config.getSystemProperties().getProperty( \"env.\" + expression );\n            }\n        } );\n\n        valueSources.add( modelValueSource2 );\n\n        return valueSources;\n    }\n","realPath":"maven-model-builder/src/main/java/org/apache/maven/model/interpolation/AbstractStringBasedModelInterpolator.java","repoName":"maven","snippetEndLine":0,"snippetStartLine":0,"startLine":111,"status":"M"},{"authorDate":"2010-08-20 06:26:55","commitOrder":10,"curCode":"    protected List<ValueSource> createValueSources( final Model model, final File projectDir,\n                                                    final ProjectBuilderConfiguration config )\n    {\n        String timestampFormat = DEFAULT_BUILD_TIMESTAMP_FORMAT;\n\n        Properties modelProperties = model.getProperties();\n        if ( modelProperties != null )\n        {\n            timestampFormat = modelProperties.getProperty( BUILD_TIMESTAMP_FORMAT_PROPERTY, timestampFormat );\n        }\n\n        ValueSource modelValueSource1 = new PrefixedObjectValueSource( PROJECT_PREFIXES, model, false );\n        ValueSource modelValueSource2 = new ObjectBasedValueSource( model );\n\n        ValueSource basedirValueSource = new PrefixedValueSourceWrapper( new AbstractValueSource( false )\n        {\n            public Object getValue( String expression )\n            {\n                if ( projectDir != null && \"basedir\".equals( expression ) )\n                {\n                    return projectDir.getAbsolutePath();\n                }\n                return null;\n            }\n        }, PROJECT_PREFIXES, true );\n        ValueSource baseUriValueSource = new PrefixedValueSourceWrapper( new AbstractValueSource( false )\n        {\n            public Object getValue( String expression )\n            {\n                if ( projectDir != null && \"baseUri\".equals( expression ) )\n                {\n                    return projectDir.getAbsoluteFile().toURI().toString();\n                }\n                return null;\n            }\n        }, PROJECT_PREFIXES, false );\n\n        List<ValueSource> valueSources = new ArrayList<ValueSource>( 9 );\n\n        \r\n        valueSources.add( basedirValueSource );\n        valueSources.add( baseUriValueSource );\n        valueSources.add( new BuildTimestampValueSource( config.getBuildStartTime(), timestampFormat ) );\n        valueSources.add( modelValueSource1 );\n        valueSources.add( new MapBasedValueSource( config.getUserProperties() ) );\n        valueSources.add( new MapBasedValueSource( modelProperties ) );\n        valueSources.add( new MapBasedValueSource( config.getExecutionProperties() ) );\n        valueSources.add( new AbstractValueSource( false )\n        {\n            public Object getValue( String expression )\n            {\n                return config.getExecutionProperties().getProperty( \"env.\" + expression );\n            }\n        } );\n        valueSources.add( modelValueSource2 );\n\n        return valueSources;\n    }\n","date":"2010-08-20 06:26:55","endLine":275,"groupId":"1845","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"createValueSources","params":"(finalModelmodel@finalFileprojectDir@finalProjectBuilderConfigurationconfig)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-maven-10-0.7/blobInfo/CC_OUT/blobs/94/97f17115ac20b43af149b8066b65e04446fa1f.src","preCode":"    protected List<ValueSource> createValueSources( final Model model, final File projectDir,\n                                                    final ProjectBuilderConfiguration config )\n    {\n        String timestampFormat = DEFAULT_BUILD_TIMESTAMP_FORMAT;\n\n        Properties modelProperties = model.getProperties();\n        if ( modelProperties != null )\n        {\n            timestampFormat = modelProperties.getProperty( BUILD_TIMESTAMP_FORMAT_PROPERTY, timestampFormat );\n        }\n\n        ValueSource modelValueSource1 = new PrefixedObjectValueSource( PROJECT_PREFIXES, model, false );\n        ValueSource modelValueSource2 = new ObjectBasedValueSource( model );\n\n        ValueSource basedirValueSource = new PrefixedValueSourceWrapper( new AbstractValueSource( false )\n        {\n            public Object getValue( String expression )\n            {\n                if ( projectDir != null && \"basedir\".equals( expression ) )\n                {\n                    return projectDir.getAbsolutePath();\n                }\n                return null;\n            }\n        }, PROJECT_PREFIXES, true );\n        ValueSource baseUriValueSource = new PrefixedValueSourceWrapper( new AbstractValueSource( false )\n        {\n            public Object getValue( String expression )\n            {\n                if ( projectDir != null && \"baseUri\".equals( expression ) )\n                {\n                    return projectDir.getAbsoluteFile().toURI().toString();\n                }\n                return null;\n            }\n        }, PROJECT_PREFIXES, false );\n\n        List<ValueSource> valueSources = new ArrayList<ValueSource>( 9 );\n\n        \r\n        valueSources.add( basedirValueSource );\n        valueSources.add( baseUriValueSource );\n        valueSources.add( new BuildTimestampValueSource( config.getBuildStartTime(), timestampFormat ) );\n        valueSources.add( modelValueSource1 );\n        valueSources.add( new MapBasedValueSource( config.getUserProperties() ) );\n        valueSources.add( new MapBasedValueSource( modelProperties ) );\n        valueSources.add( new MapBasedValueSource( config.getExecutionProperties() ) );\n        valueSources.add( new AbstractValueSource( false )\n        {\n            public Object getValue( String expression )\n            {\n                return config.getExecutionProperties().getProperty( \"env.\" + expression );\n            }\n        } );\n        valueSources.add( modelValueSource2 );\n\n        return valueSources;\n    }\n","realPath":"maven-compat/src/main/java/org/apache/maven/project/interpolation/AbstractStringBasedModelInterpolator.java","repoName":"maven","snippetEndLine":0,"snippetStartLine":0,"startLine":218,"status":"N"}],"commitId":"786285f1f495f3f1df93cd404f132dd811909ec6","commitMessage":"@@@Add @Override on matching methods\n","date":"2015-01-25 03:45:25","modifiedFileCount":"43","status":"M","submitter":"Robert Scholte"},{"authorTime":"2015-03-06 14:12:21","codes":[{"authorDate":"2015-03-06 14:12:21","commitOrder":11,"curCode":"    protected List<ValueSource> createValueSources( final Model model, final File projectDir,\n                                                    final ModelBuildingRequest config,\n                                                    final ModelProblemCollector problems )\n    {\n        Properties modelProperties = model.getProperties();\n\n        ValueSource modelValueSource1 = new PrefixedObjectValueSource( PROJECT_PREFIXES, model, false );\n        if ( config.getValidationLevel() >= ModelBuildingRequest.VALIDATION_LEVEL_MAVEN_2_0 )\n        {\n            modelValueSource1 = new ProblemDetectingValueSource( modelValueSource1, \"pom.\", \"project.\", problems );\n        }\n\n        ValueSource modelValueSource2 = new ObjectBasedValueSource( model );\n        if ( config.getValidationLevel() >= ModelBuildingRequest.VALIDATION_LEVEL_MAVEN_2_0 )\n        {\n            modelValueSource2 = new ProblemDetectingValueSource( modelValueSource2, \"\", \"project.\", problems );\n        }\n\n        \r\n        List<ValueSource> valueSources = new ArrayList<>( 9 );\n\n        if ( projectDir != null )\n        {\n            ValueSource basedirValueSource = new PrefixedValueSourceWrapper( new AbstractValueSource( false )\n            {\n                @Override\n                public Object getValue( String expression )\n                {\n                    if ( \"basedir\".equals( expression ) )\n                    {\n                        return projectDir.getAbsolutePath();\n                    }\n                    return null;\n                }\n            }, PROJECT_PREFIXES, true );\n            valueSources.add( basedirValueSource );\n\n            ValueSource baseUriValueSource = new PrefixedValueSourceWrapper( new AbstractValueSource( false )\n            {\n                @Override\n                public Object getValue( String expression )\n                {\n                    if ( \"baseUri\".equals( expression ) )\n                    {\n                        return projectDir.getAbsoluteFile().toURI().toString();\n                    }\n                    return null;\n                }\n            }, PROJECT_PREFIXES, false );\n            valueSources.add( baseUriValueSource );\n            valueSources.add( new BuildTimestampValueSource( config.getBuildStartTime(), modelProperties ) );\n        }\n\n        valueSources.add( modelValueSource1 );\n\n        valueSources.add( new MapBasedValueSource( config.getUserProperties() ) );\n\n        valueSources.add( new MapBasedValueSource( modelProperties ) );\n\n        valueSources.add( new MapBasedValueSource( config.getSystemProperties() ) );\n\n        valueSources.add( new AbstractValueSource( false )\n        {\n            @Override\n            public Object getValue( String expression )\n            {\n                return config.getSystemProperties().getProperty( \"env.\" + expression );\n            }\n        } );\n\n        valueSources.add( modelValueSource2 );\n\n        return valueSources;\n    }\n","date":"2015-06-20 16:56:07","endLine":184,"groupId":"4221","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"createValueSources","params":"(finalModelmodel@finalFileprojectDir@finalModelBuildingRequestconfig@finalModelProblemCollectorproblems)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-maven-10-0.7/blobInfo/CC_OUT/blobs/ce/e376f1134db6d78a8bd78ff9f0c7108d86e448.src","preCode":"    protected List<ValueSource> createValueSources( final Model model, final File projectDir,\n                                                    final ModelBuildingRequest config,\n                                                    final ModelProblemCollector problems )\n    {\n        Properties modelProperties = model.getProperties();\n\n        ValueSource modelValueSource1 = new PrefixedObjectValueSource( PROJECT_PREFIXES, model, false );\n        if ( config.getValidationLevel() >= ModelBuildingRequest.VALIDATION_LEVEL_MAVEN_2_0 )\n        {\n            modelValueSource1 = new ProblemDetectingValueSource( modelValueSource1, \"pom.\", \"project.\", problems );\n        }\n\n        ValueSource modelValueSource2 = new ObjectBasedValueSource( model );\n        if ( config.getValidationLevel() >= ModelBuildingRequest.VALIDATION_LEVEL_MAVEN_2_0 )\n        {\n            modelValueSource2 = new ProblemDetectingValueSource( modelValueSource2, \"\", \"project.\", problems );\n        }\n\n        \r\n        List<ValueSource> valueSources = new ArrayList<ValueSource>( 9 );\n\n        if ( projectDir != null )\n        {\n            ValueSource basedirValueSource = new PrefixedValueSourceWrapper( new AbstractValueSource( false )\n            {\n                @Override\n                public Object getValue( String expression )\n                {\n                    if ( \"basedir\".equals( expression ) )\n                    {\n                        return projectDir.getAbsolutePath();\n                    }\n                    return null;\n                }\n            }, PROJECT_PREFIXES, true );\n            valueSources.add( basedirValueSource );\n\n            ValueSource baseUriValueSource = new PrefixedValueSourceWrapper( new AbstractValueSource( false )\n            {\n                @Override\n                public Object getValue( String expression )\n                {\n                    if ( \"baseUri\".equals( expression ) )\n                    {\n                        return projectDir.getAbsoluteFile().toURI().toString();\n                    }\n                    return null;\n                }\n            }, PROJECT_PREFIXES, false );\n            valueSources.add( baseUriValueSource );\n            valueSources.add( new BuildTimestampValueSource( config.getBuildStartTime(), modelProperties ) );\n        }\n\n        valueSources.add( modelValueSource1 );\n\n        valueSources.add( new MapBasedValueSource( config.getUserProperties() ) );\n\n        valueSources.add( new MapBasedValueSource( modelProperties ) );\n\n        valueSources.add( new MapBasedValueSource( config.getSystemProperties() ) );\n\n        valueSources.add( new AbstractValueSource( false )\n        {\n            @Override\n            public Object getValue( String expression )\n            {\n                return config.getSystemProperties().getProperty( \"env.\" + expression );\n            }\n        } );\n\n        valueSources.add( modelValueSource2 );\n\n        return valueSources;\n    }\n","realPath":"maven-model-builder/src/main/java/org/apache/maven/model/interpolation/AbstractStringBasedModelInterpolator.java","repoName":"maven","snippetEndLine":0,"snippetStartLine":0,"startLine":111,"status":"M"},{"authorDate":"2015-03-06 14:12:21","commitOrder":11,"curCode":"    protected List<ValueSource> createValueSources( final Model model, final File projectDir,\n                                                    final ProjectBuilderConfiguration config )\n    {\n        String timestampFormat = DEFAULT_BUILD_TIMESTAMP_FORMAT;\n\n        Properties modelProperties = model.getProperties();\n        if ( modelProperties != null )\n        {\n            timestampFormat = modelProperties.getProperty( BUILD_TIMESTAMP_FORMAT_PROPERTY, timestampFormat );\n        }\n\n        ValueSource modelValueSource1 = new PrefixedObjectValueSource( PROJECT_PREFIXES, model, false );\n        ValueSource modelValueSource2 = new ObjectBasedValueSource( model );\n\n        ValueSource basedirValueSource = new PrefixedValueSourceWrapper( new AbstractValueSource( false )\n        {\n            public Object getValue( String expression )\n            {\n                if ( projectDir != null && \"basedir\".equals( expression ) )\n                {\n                    return projectDir.getAbsolutePath();\n                }\n                return null;\n            }\n        }, PROJECT_PREFIXES, true );\n        ValueSource baseUriValueSource = new PrefixedValueSourceWrapper( new AbstractValueSource( false )\n        {\n            public Object getValue( String expression )\n            {\n                if ( projectDir != null && \"baseUri\".equals( expression ) )\n                {\n                    return projectDir.getAbsoluteFile().toURI().toString();\n                }\n                return null;\n            }\n        }, PROJECT_PREFIXES, false );\n\n        List<ValueSource> valueSources = new ArrayList<>( 9 );\n\n        \r\n        valueSources.add( basedirValueSource );\n        valueSources.add( baseUriValueSource );\n        valueSources.add( new BuildTimestampValueSource( config.getBuildStartTime(), timestampFormat ) );\n        valueSources.add( modelValueSource1 );\n        valueSources.add( new MapBasedValueSource( config.getUserProperties() ) );\n        valueSources.add( new MapBasedValueSource( modelProperties ) );\n        valueSources.add( new MapBasedValueSource( config.getExecutionProperties() ) );\n        valueSources.add( new AbstractValueSource( false )\n        {\n            public Object getValue( String expression )\n            {\n                return config.getExecutionProperties().getProperty( \"env.\" + expression );\n            }\n        } );\n        valueSources.add( modelValueSource2 );\n\n        return valueSources;\n    }\n","date":"2015-06-20 16:56:07","endLine":271,"groupId":"1566","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"createValueSources","params":"(finalModelmodel@finalFileprojectDir@finalProjectBuilderConfigurationconfig)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-maven-10-0.7/blobInfo/CC_OUT/blobs/56/8196cb99311c3226e1d69074119c2a92299b6f.src","preCode":"    protected List<ValueSource> createValueSources( final Model model, final File projectDir,\n                                                    final ProjectBuilderConfiguration config )\n    {\n        String timestampFormat = DEFAULT_BUILD_TIMESTAMP_FORMAT;\n\n        Properties modelProperties = model.getProperties();\n        if ( modelProperties != null )\n        {\n            timestampFormat = modelProperties.getProperty( BUILD_TIMESTAMP_FORMAT_PROPERTY, timestampFormat );\n        }\n\n        ValueSource modelValueSource1 = new PrefixedObjectValueSource( PROJECT_PREFIXES, model, false );\n        ValueSource modelValueSource2 = new ObjectBasedValueSource( model );\n\n        ValueSource basedirValueSource = new PrefixedValueSourceWrapper( new AbstractValueSource( false )\n        {\n            public Object getValue( String expression )\n            {\n                if ( projectDir != null && \"basedir\".equals( expression ) )\n                {\n                    return projectDir.getAbsolutePath();\n                }\n                return null;\n            }\n        }, PROJECT_PREFIXES, true );\n        ValueSource baseUriValueSource = new PrefixedValueSourceWrapper( new AbstractValueSource( false )\n        {\n            public Object getValue( String expression )\n            {\n                if ( projectDir != null && \"baseUri\".equals( expression ) )\n                {\n                    return projectDir.getAbsoluteFile().toURI().toString();\n                }\n                return null;\n            }\n        }, PROJECT_PREFIXES, false );\n\n        List<ValueSource> valueSources = new ArrayList<ValueSource>( 9 );\n\n        \r\n        valueSources.add( basedirValueSource );\n        valueSources.add( baseUriValueSource );\n        valueSources.add( new BuildTimestampValueSource( config.getBuildStartTime(), timestampFormat ) );\n        valueSources.add( modelValueSource1 );\n        valueSources.add( new MapBasedValueSource( config.getUserProperties() ) );\n        valueSources.add( new MapBasedValueSource( modelProperties ) );\n        valueSources.add( new MapBasedValueSource( config.getExecutionProperties() ) );\n        valueSources.add( new AbstractValueSource( false )\n        {\n            public Object getValue( String expression )\n            {\n                return config.getExecutionProperties().getProperty( \"env.\" + expression );\n            }\n        } );\n        valueSources.add( modelValueSource2 );\n\n        return valueSources;\n    }\n","realPath":"maven-compat/src/main/java/org/apache/maven/project/interpolation/AbstractStringBasedModelInterpolator.java","repoName":"maven","snippetEndLine":0,"snippetStartLine":0,"startLine":214,"status":"M"}],"commitId":"7badeb5b5bdfb48dd3c9533d224418d0648b76ce","commitMessage":"@@@Upgraded to java7 language features\n","date":"2015-06-20 16:56:07","modifiedFileCount":"234","status":"M","submitter":"Kristian Rosenvold"},{"authorTime":"2015-03-06 14:12:21","codes":[{"authorDate":"2015-09-29 17:46:48","commitOrder":12,"curCode":"    protected List<ValueSource> createValueSources( final Model model, final File projectDir,\n                                                    final ModelBuildingRequest config,\n                                                    final ModelProblemCollector problems )\n    {\n        Properties modelProperties = model.getProperties();\n\n        ValueSource modelValueSource1 = new PrefixedObjectValueSource( PROJECT_PREFIXES, model, false );\n        if ( config.getValidationLevel() >= ModelBuildingRequest.VALIDATION_LEVEL_MAVEN_2_0 )\n        {\n            modelValueSource1 = new ProblemDetectingValueSource( modelValueSource1, \"pom.\", \"project.\", problems );\n        }\n\n        ValueSource modelValueSource2 = new ObjectBasedValueSource( model );\n        if ( config.getValidationLevel() >= ModelBuildingRequest.VALIDATION_LEVEL_MAVEN_2_0 )\n        {\n            modelValueSource2 = new ProblemDetectingValueSource( modelValueSource2, \"\", \"project.\", problems );\n        }\n\n        \r\n        List<ValueSource> valueSources = new ArrayList<>( 9 );\n\n        if ( projectDir != null )\n        {\n            ValueSource basedirValueSource = new PrefixedValueSourceWrapper( new AbstractValueSource( false )\n            {\n                @Override\n                public Object getValue( String expression )\n                {\n                    if ( \"basedir\".equals( expression ) )\n                    {\n                        return projectDir.getAbsolutePath();\n                    }\n                    return null;\n                }\n            }, PROJECT_PREFIXES, true );\n            valueSources.add( basedirValueSource );\n\n            ValueSource baseUriValueSource = new PrefixedValueSourceWrapper( new AbstractValueSource( false )\n            {\n                @Override\n                public Object getValue( String expression )\n                {\n                    if ( \"baseUri\".equals( expression ) )\n                    {\n                        return projectDir.getAbsoluteFile().toURI().toString();\n                    }\n                    return null;\n                }\n            }, PROJECT_PREFIXES, false );\n            valueSources.add( baseUriValueSource );\n            valueSources.add( new BuildTimestampValueSource( config.getBuildStartTime(), modelProperties ) );\n        }\n\n        valueSources.add( modelValueSource1 );\n\n        valueSources.add( new MapBasedValueSource( config.getUserProperties() ) );\n\n        \r\n        \r\n        if ( config.getSystemProperties().containsKey( REVISION_PROPERTY ) )\n        {\n            modelProperties.put( REVISION_PROPERTY, config.getSystemProperties().get( REVISION_PROPERTY ) );\n        }\n        if ( config.getSystemProperties().containsKey( CHANGELIST_PROPERTY ) )\n        {\n            modelProperties.put( CHANGELIST_PROPERTY, config.getSystemProperties().get( CHANGELIST_PROPERTY ) );\n        }\n        if ( config.getSystemProperties().containsKey( SHA1_PROPERTY ) )\n        {\n            modelProperties.put( SHA1_PROPERTY, config.getSystemProperties().get( SHA1_PROPERTY ) );\n        }\n        valueSources.add( new MapBasedValueSource( modelProperties ) );\n\n        valueSources.add( new MapBasedValueSource( config.getSystemProperties() ) );\n\n        valueSources.add( new AbstractValueSource( false )\n        {\n            @Override\n            public Object getValue( String expression )\n            {\n                return config.getSystemProperties().getProperty( \"env.\" + expression );\n            }\n        } );\n\n        valueSources.add( modelValueSource2 );\n\n        return valueSources;\n    }\n","date":"2017-03-14 05:08:51","endLine":204,"groupId":"4221","id":13,"instanceNumber":1,"isCurCommit":0,"methodName":"createValueSources","params":"(finalModelmodel@finalFileprojectDir@finalModelBuildingRequestconfig@finalModelProblemCollectorproblems)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-maven-10-0.7/blobInfo/CC_OUT/blobs/b4/7edbe9898b42e25e53afdfb0447ba59183f6a5.src","preCode":"    protected List<ValueSource> createValueSources( final Model model, final File projectDir,\n                                                    final ModelBuildingRequest config,\n                                                    final ModelProblemCollector problems )\n    {\n        Properties modelProperties = model.getProperties();\n\n        ValueSource modelValueSource1 = new PrefixedObjectValueSource( PROJECT_PREFIXES, model, false );\n        if ( config.getValidationLevel() >= ModelBuildingRequest.VALIDATION_LEVEL_MAVEN_2_0 )\n        {\n            modelValueSource1 = new ProblemDetectingValueSource( modelValueSource1, \"pom.\", \"project.\", problems );\n        }\n\n        ValueSource modelValueSource2 = new ObjectBasedValueSource( model );\n        if ( config.getValidationLevel() >= ModelBuildingRequest.VALIDATION_LEVEL_MAVEN_2_0 )\n        {\n            modelValueSource2 = new ProblemDetectingValueSource( modelValueSource2, \"\", \"project.\", problems );\n        }\n\n        \r\n        List<ValueSource> valueSources = new ArrayList<>( 9 );\n\n        if ( projectDir != null )\n        {\n            ValueSource basedirValueSource = new PrefixedValueSourceWrapper( new AbstractValueSource( false )\n            {\n                @Override\n                public Object getValue( String expression )\n                {\n                    if ( \"basedir\".equals( expression ) )\n                    {\n                        return projectDir.getAbsolutePath();\n                    }\n                    return null;\n                }\n            }, PROJECT_PREFIXES, true );\n            valueSources.add( basedirValueSource );\n\n            ValueSource baseUriValueSource = new PrefixedValueSourceWrapper( new AbstractValueSource( false )\n            {\n                @Override\n                public Object getValue( String expression )\n                {\n                    if ( \"baseUri\".equals( expression ) )\n                    {\n                        return projectDir.getAbsoluteFile().toURI().toString();\n                    }\n                    return null;\n                }\n            }, PROJECT_PREFIXES, false );\n            valueSources.add( baseUriValueSource );\n            valueSources.add( new BuildTimestampValueSource( config.getBuildStartTime(), modelProperties ) );\n        }\n\n        valueSources.add( modelValueSource1 );\n\n        valueSources.add( new MapBasedValueSource( config.getUserProperties() ) );\n\n        valueSources.add( new MapBasedValueSource( modelProperties ) );\n\n        valueSources.add( new MapBasedValueSource( config.getSystemProperties() ) );\n\n        valueSources.add( new AbstractValueSource( false )\n        {\n            @Override\n            public Object getValue( String expression )\n            {\n                return config.getSystemProperties().getProperty( \"env.\" + expression );\n            }\n        } );\n\n        valueSources.add( modelValueSource2 );\n\n        return valueSources;\n    }\n","realPath":"maven-model-builder/src/main/java/org/apache/maven/model/interpolation/AbstractStringBasedModelInterpolator.java","repoName":"maven","snippetEndLine":0,"snippetStartLine":0,"startLine":117,"status":"M"},{"authorDate":"2015-03-06 14:12:21","commitOrder":12,"curCode":"    protected List<ValueSource> createValueSources( final Model model, final File projectDir,\n                                                    final ProjectBuilderConfiguration config )\n    {\n        String timestampFormat = DEFAULT_BUILD_TIMESTAMP_FORMAT;\n\n        Properties modelProperties = model.getProperties();\n        if ( modelProperties != null )\n        {\n            timestampFormat = modelProperties.getProperty( BUILD_TIMESTAMP_FORMAT_PROPERTY, timestampFormat );\n        }\n\n        ValueSource modelValueSource1 = new PrefixedObjectValueSource( PROJECT_PREFIXES, model, false );\n        ValueSource modelValueSource2 = new ObjectBasedValueSource( model );\n\n        ValueSource basedirValueSource = new PrefixedValueSourceWrapper( new AbstractValueSource( false )\n        {\n            public Object getValue( String expression )\n            {\n                if ( projectDir != null && \"basedir\".equals( expression ) )\n                {\n                    return projectDir.getAbsolutePath();\n                }\n                return null;\n            }\n        }, PROJECT_PREFIXES, true );\n        ValueSource baseUriValueSource = new PrefixedValueSourceWrapper( new AbstractValueSource( false )\n        {\n            public Object getValue( String expression )\n            {\n                if ( projectDir != null && \"baseUri\".equals( expression ) )\n                {\n                    return projectDir.getAbsoluteFile().toURI().toString();\n                }\n                return null;\n            }\n        }, PROJECT_PREFIXES, false );\n\n        List<ValueSource> valueSources = new ArrayList<>( 9 );\n\n        \r\n        valueSources.add( basedirValueSource );\n        valueSources.add( baseUriValueSource );\n        valueSources.add( new BuildTimestampValueSource( config.getBuildStartTime(), timestampFormat ) );\n        valueSources.add( modelValueSource1 );\n        valueSources.add( new MapBasedValueSource( config.getUserProperties() ) );\n        valueSources.add( new MapBasedValueSource( modelProperties ) );\n        valueSources.add( new MapBasedValueSource( config.getExecutionProperties() ) );\n        valueSources.add( new AbstractValueSource( false )\n        {\n            public Object getValue( String expression )\n            {\n                return config.getExecutionProperties().getProperty( \"env.\" + expression );\n            }\n        } );\n        valueSources.add( modelValueSource2 );\n\n        return valueSources;\n    }\n","date":"2015-06-20 16:56:07","endLine":271,"groupId":"1566","id":14,"instanceNumber":2,"isCurCommit":0,"methodName":"createValueSources","params":"(finalModelmodel@finalFileprojectDir@finalProjectBuilderConfigurationconfig)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-maven-10-0.7/blobInfo/CC_OUT/blobs/56/8196cb99311c3226e1d69074119c2a92299b6f.src","preCode":"    protected List<ValueSource> createValueSources( final Model model, final File projectDir,\n                                                    final ProjectBuilderConfiguration config )\n    {\n        String timestampFormat = DEFAULT_BUILD_TIMESTAMP_FORMAT;\n\n        Properties modelProperties = model.getProperties();\n        if ( modelProperties != null )\n        {\n            timestampFormat = modelProperties.getProperty( BUILD_TIMESTAMP_FORMAT_PROPERTY, timestampFormat );\n        }\n\n        ValueSource modelValueSource1 = new PrefixedObjectValueSource( PROJECT_PREFIXES, model, false );\n        ValueSource modelValueSource2 = new ObjectBasedValueSource( model );\n\n        ValueSource basedirValueSource = new PrefixedValueSourceWrapper( new AbstractValueSource( false )\n        {\n            public Object getValue( String expression )\n            {\n                if ( projectDir != null && \"basedir\".equals( expression ) )\n                {\n                    return projectDir.getAbsolutePath();\n                }\n                return null;\n            }\n        }, PROJECT_PREFIXES, true );\n        ValueSource baseUriValueSource = new PrefixedValueSourceWrapper( new AbstractValueSource( false )\n        {\n            public Object getValue( String expression )\n            {\n                if ( projectDir != null && \"baseUri\".equals( expression ) )\n                {\n                    return projectDir.getAbsoluteFile().toURI().toString();\n                }\n                return null;\n            }\n        }, PROJECT_PREFIXES, false );\n\n        List<ValueSource> valueSources = new ArrayList<>( 9 );\n\n        \r\n        valueSources.add( basedirValueSource );\n        valueSources.add( baseUriValueSource );\n        valueSources.add( new BuildTimestampValueSource( config.getBuildStartTime(), timestampFormat ) );\n        valueSources.add( modelValueSource1 );\n        valueSources.add( new MapBasedValueSource( config.getUserProperties() ) );\n        valueSources.add( new MapBasedValueSource( modelProperties ) );\n        valueSources.add( new MapBasedValueSource( config.getExecutionProperties() ) );\n        valueSources.add( new AbstractValueSource( false )\n        {\n            public Object getValue( String expression )\n            {\n                return config.getExecutionProperties().getProperty( \"env.\" + expression );\n            }\n        } );\n        valueSources.add( modelValueSource2 );\n\n        return valueSources;\n    }\n","realPath":"maven-compat/src/main/java/org/apache/maven/project/interpolation/AbstractStringBasedModelInterpolator.java","repoName":"maven","snippetEndLine":0,"snippetStartLine":0,"startLine":214,"status":"N"}],"commitId":"51cc76c32625be2f807dcf2ffbeb085984729b57","commitMessage":"@@@[MNG-6090] CI friendly properties break submodule builds\n[MNG-6057] Problem with CI friendly usage of ${..} reactor order is changed\n o Based on the missing replacement of the versions ${revision}\n   ${changelist} or ${sha1} within the parent element the order\n   of the reactor changes.\n[MNG-5895] Problem with CI friendly usage of ${..} which is already\ndefined via property in pom file.\n","date":"2017-03-14 05:08:51","modifiedFileCount":"4","status":"M","submitter":"Karl Heinz Marbaise"},{"authorTime":"2018-03-31 04:07:18","codes":[{"authorDate":"2018-03-31 04:07:18","commitOrder":13,"curCode":"    protected List<ValueSource> createValueSources( final Model model, final File projectDir,\n                                                    final ModelBuildingRequest config,\n                                                    final ModelProblemCollector problems )\n    {\n        Properties modelProperties = model.getProperties();\n\n        ValueSource modelValueSource1 = new PrefixedObjectValueSource( PROJECT_PREFIXES, model, false );\n        if ( config.getValidationLevel() >= ModelBuildingRequest.VALIDATION_LEVEL_MAVEN_2_0 )\n        {\n            modelValueSource1 = new ProblemDetectingValueSource( modelValueSource1, \"pom.\", \"project.\", problems );\n        }\n\n        ValueSource modelValueSource2 = new ObjectBasedValueSource( model );\n        if ( config.getValidationLevel() >= ModelBuildingRequest.VALIDATION_LEVEL_MAVEN_2_0 )\n        {\n            modelValueSource2 = new ProblemDetectingValueSource( modelValueSource2, \"\", \"project.\", problems );\n        }\n\n        \r\n        List<ValueSource> valueSources = new ArrayList<>( 9 );\n\n        if ( projectDir != null )\n        {\n            ValueSource basedirValueSource = new PrefixedValueSourceWrapper( new AbstractValueSource( false )\n            {\n                @Override\n                public Object getValue( String expression )\n                {\n                    if ( \"basedir\".equals( expression ) )\n                    {\n                        return projectDir.getAbsolutePath();\n                    }\n                    return null;\n                }\n            }, PROJECT_PREFIXES, true );\n            valueSources.add( basedirValueSource );\n\n            ValueSource baseUriValueSource = new PrefixedValueSourceWrapper( new AbstractValueSource( false )\n            {\n                @Override\n                public Object getValue( String expression )\n                {\n                    if ( \"baseUri\".equals( expression ) )\n                    {\n                        return projectDir.getAbsoluteFile().toPath().toUri().toASCIIString();\n                    }\n                    return null;\n                }\n            }, PROJECT_PREFIXES, false );\n            valueSources.add( baseUriValueSource );\n            valueSources.add( new BuildTimestampValueSource( config.getBuildStartTime(), modelProperties ) );\n        }\n\n        valueSources.add( modelValueSource1 );\n\n        valueSources.add( new MapBasedValueSource( config.getUserProperties() ) );\n\n        \r\n        \r\n        if ( config.getSystemProperties().containsKey( REVISION_PROPERTY ) )\n        {\n            modelProperties.put( REVISION_PROPERTY, config.getSystemProperties().get( REVISION_PROPERTY ) );\n        }\n        if ( config.getSystemProperties().containsKey( CHANGELIST_PROPERTY ) )\n        {\n            modelProperties.put( CHANGELIST_PROPERTY, config.getSystemProperties().get( CHANGELIST_PROPERTY ) );\n        }\n        if ( config.getSystemProperties().containsKey( SHA1_PROPERTY ) )\n        {\n            modelProperties.put( SHA1_PROPERTY, config.getSystemProperties().get( SHA1_PROPERTY ) );\n        }\n        valueSources.add( new MapBasedValueSource( modelProperties ) );\n\n        valueSources.add( new MapBasedValueSource( config.getSystemProperties() ) );\n\n        valueSources.add( new AbstractValueSource( false )\n        {\n            @Override\n            public Object getValue( String expression )\n            {\n                return config.getSystemProperties().getProperty( \"env.\" + expression );\n            }\n        } );\n\n        valueSources.add( modelValueSource2 );\n\n        return valueSources;\n    }\n","date":"2018-05-08 04:35:43","endLine":204,"groupId":"1064","id":15,"instanceNumber":1,"isCurCommit":0,"methodName":"createValueSources","params":"(finalModelmodel@finalFileprojectDir@finalModelBuildingRequestconfig@finalModelProblemCollectorproblems)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-maven-10-0.7/blobInfo/CC_OUT/blobs/03/22f8990c6b7e809462bb1d4406ae74584433d4.src","preCode":"    protected List<ValueSource> createValueSources( final Model model, final File projectDir,\n                                                    final ModelBuildingRequest config,\n                                                    final ModelProblemCollector problems )\n    {\n        Properties modelProperties = model.getProperties();\n\n        ValueSource modelValueSource1 = new PrefixedObjectValueSource( PROJECT_PREFIXES, model, false );\n        if ( config.getValidationLevel() >= ModelBuildingRequest.VALIDATION_LEVEL_MAVEN_2_0 )\n        {\n            modelValueSource1 = new ProblemDetectingValueSource( modelValueSource1, \"pom.\", \"project.\", problems );\n        }\n\n        ValueSource modelValueSource2 = new ObjectBasedValueSource( model );\n        if ( config.getValidationLevel() >= ModelBuildingRequest.VALIDATION_LEVEL_MAVEN_2_0 )\n        {\n            modelValueSource2 = new ProblemDetectingValueSource( modelValueSource2, \"\", \"project.\", problems );\n        }\n\n        \r\n        List<ValueSource> valueSources = new ArrayList<>( 9 );\n\n        if ( projectDir != null )\n        {\n            ValueSource basedirValueSource = new PrefixedValueSourceWrapper( new AbstractValueSource( false )\n            {\n                @Override\n                public Object getValue( String expression )\n                {\n                    if ( \"basedir\".equals( expression ) )\n                    {\n                        return projectDir.getAbsolutePath();\n                    }\n                    return null;\n                }\n            }, PROJECT_PREFIXES, true );\n            valueSources.add( basedirValueSource );\n\n            ValueSource baseUriValueSource = new PrefixedValueSourceWrapper( new AbstractValueSource( false )\n            {\n                @Override\n                public Object getValue( String expression )\n                {\n                    if ( \"baseUri\".equals( expression ) )\n                    {\n                        return projectDir.getAbsoluteFile().toURI().toString();\n                    }\n                    return null;\n                }\n            }, PROJECT_PREFIXES, false );\n            valueSources.add( baseUriValueSource );\n            valueSources.add( new BuildTimestampValueSource( config.getBuildStartTime(), modelProperties ) );\n        }\n\n        valueSources.add( modelValueSource1 );\n\n        valueSources.add( new MapBasedValueSource( config.getUserProperties() ) );\n\n        \r\n        \r\n        if ( config.getSystemProperties().containsKey( REVISION_PROPERTY ) )\n        {\n            modelProperties.put( REVISION_PROPERTY, config.getSystemProperties().get( REVISION_PROPERTY ) );\n        }\n        if ( config.getSystemProperties().containsKey( CHANGELIST_PROPERTY ) )\n        {\n            modelProperties.put( CHANGELIST_PROPERTY, config.getSystemProperties().get( CHANGELIST_PROPERTY ) );\n        }\n        if ( config.getSystemProperties().containsKey( SHA1_PROPERTY ) )\n        {\n            modelProperties.put( SHA1_PROPERTY, config.getSystemProperties().get( SHA1_PROPERTY ) );\n        }\n        valueSources.add( new MapBasedValueSource( modelProperties ) );\n\n        valueSources.add( new MapBasedValueSource( config.getSystemProperties() ) );\n\n        valueSources.add( new AbstractValueSource( false )\n        {\n            @Override\n            public Object getValue( String expression )\n            {\n                return config.getSystemProperties().getProperty( \"env.\" + expression );\n            }\n        } );\n\n        valueSources.add( modelValueSource2 );\n\n        return valueSources;\n    }\n","realPath":"maven-model-builder/src/main/java/org/apache/maven/model/interpolation/AbstractStringBasedModelInterpolator.java","repoName":"maven","snippetEndLine":0,"snippetStartLine":0,"startLine":117,"status":"M"},{"authorDate":"2018-03-31 04:07:18","commitOrder":13,"curCode":"    protected List<ValueSource> createValueSources( final Model model, final File projectDir,\n                                                    final ProjectBuilderConfiguration config )\n    {\n        String timestampFormat = DEFAULT_BUILD_TIMESTAMP_FORMAT;\n\n        Properties modelProperties = model.getProperties();\n        if ( modelProperties != null )\n        {\n            timestampFormat = modelProperties.getProperty( BUILD_TIMESTAMP_FORMAT_PROPERTY, timestampFormat );\n        }\n\n        ValueSource modelValueSource1 = new PrefixedObjectValueSource( PROJECT_PREFIXES, model, false );\n        ValueSource modelValueSource2 = new ObjectBasedValueSource( model );\n\n        ValueSource basedirValueSource = new PrefixedValueSourceWrapper( new AbstractValueSource( false )\n        {\n\n            public Object getValue( String expression )\n            {\n                if ( projectDir != null && \"basedir\".equals( expression ) )\n                {\n                    return projectDir.getAbsolutePath();\n                }\n                return null;\n            }\n\n        }, PROJECT_PREFIXES, true );\n        ValueSource baseUriValueSource = new PrefixedValueSourceWrapper( new AbstractValueSource( false )\n        {\n\n            public Object getValue( String expression )\n            {\n                if ( projectDir != null && \"baseUri\".equals( expression ) )\n                {\n                    return projectDir.getAbsoluteFile().toPath().toUri().toASCIIString();\n                }\n                return null;\n            }\n\n        }, PROJECT_PREFIXES, false );\n\n        List<ValueSource> valueSources = new ArrayList<>( 9 );\n\n        \r\n        valueSources.add( basedirValueSource );\n        valueSources.add( baseUriValueSource );\n        valueSources.add( new BuildTimestampValueSource( config.getBuildStartTime(), timestampFormat ) );\n        valueSources.add( modelValueSource1 );\n        valueSources.add( new MapBasedValueSource( config.getUserProperties() ) );\n        valueSources.add( new MapBasedValueSource( modelProperties ) );\n        valueSources.add( new MapBasedValueSource( config.getExecutionProperties() ) );\n        valueSources.add( new AbstractValueSource( false )\n        {\n\n            public Object getValue( String expression )\n            {\n                return config.getExecutionProperties().getProperty( \"env.\" + expression );\n            }\n\n        } );\n        valueSources.add( modelValueSource2 );\n\n        return valueSources;\n    }\n","date":"2018-05-08 04:35:43","endLine":273,"groupId":"1064","id":16,"instanceNumber":2,"isCurCommit":1,"methodName":"createValueSources","params":"(finalModelmodel@finalFileprojectDir@finalProjectBuilderConfigurationconfig)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-maven-10-0.7/blobInfo/CC_OUT/blobs/99/6baef590ab0097d4edc9d7a7e3f249d5fd6026.src","preCode":"    protected List<ValueSource> createValueSources( final Model model, final File projectDir,\n                                                    final ProjectBuilderConfiguration config )\n    {\n        String timestampFormat = DEFAULT_BUILD_TIMESTAMP_FORMAT;\n\n        Properties modelProperties = model.getProperties();\n        if ( modelProperties != null )\n        {\n            timestampFormat = modelProperties.getProperty( BUILD_TIMESTAMP_FORMAT_PROPERTY, timestampFormat );\n        }\n\n        ValueSource modelValueSource1 = new PrefixedObjectValueSource( PROJECT_PREFIXES, model, false );\n        ValueSource modelValueSource2 = new ObjectBasedValueSource( model );\n\n        ValueSource basedirValueSource = new PrefixedValueSourceWrapper( new AbstractValueSource( false )\n        {\n\n            public Object getValue( String expression )\n            {\n                if ( projectDir != null && \"basedir\".equals( expression ) )\n                {\n                    return projectDir.getAbsolutePath();\n                }\n                return null;\n            }\n\n        }, PROJECT_PREFIXES, true );\n        ValueSource baseUriValueSource = new PrefixedValueSourceWrapper( new AbstractValueSource( false )\n        {\n\n            public Object getValue( String expression )\n            {\n                if ( projectDir != null && \"baseUri\".equals( expression ) )\n                {\n                    return projectDir.getAbsoluteFile().toURI().toString();\n                }\n                return null;\n            }\n\n        }, PROJECT_PREFIXES, false );\n\n        List<ValueSource> valueSources = new ArrayList<>( 9 );\n\n        \r\n        valueSources.add( basedirValueSource );\n        valueSources.add( baseUriValueSource );\n        valueSources.add( new BuildTimestampValueSource( config.getBuildStartTime(), timestampFormat ) );\n        valueSources.add( modelValueSource1 );\n        valueSources.add( new MapBasedValueSource( config.getUserProperties() ) );\n        valueSources.add( new MapBasedValueSource( modelProperties ) );\n        valueSources.add( new MapBasedValueSource( config.getExecutionProperties() ) );\n        valueSources.add( new AbstractValueSource( false )\n        {\n\n            public Object getValue( String expression )\n            {\n                return config.getExecutionProperties().getProperty( \"env.\" + expression );\n            }\n\n        } );\n        valueSources.add( modelValueSource2 );\n\n        return valueSources;\n    }\n","realPath":"maven-compat/src/main/java/org/apache/maven/project/interpolation/AbstractStringBasedModelInterpolator.java","repoName":"maven","snippetEndLine":0,"snippetStartLine":0,"startLine":210,"status":"M"}],"commitId":"8e0efaa107c5dab09a9dc0a0405a3bfbebecda3b","commitMessage":"@@@[MNG-6386] ${project.baseUri} is not a valid URI (according to RFC 3986)\n\nFile#toURI()#toString() produces a non-compliant URI making tools like\nSubversion or Git to choke on those URIs. Whereas Path#toUri()#toASCIIString()\ndoes the right job.\n","date":"2018-05-08 04:35:43","modifiedFileCount":"3","status":"M","submitter":"Michael Osipov"}]
