[{"authorTime":"2015-02-09 14:44:32","codes":[{"authorDate":"2014-06-12 10:26:18","commitOrder":3,"curCode":"    static boolean matchPattern( ArtifactRepository originalRepository, String pattern )\n    {\n        boolean result = false;\n        String originalId = originalRepository.getId();\n\n        \r\n        if ( WILDCARD.equals( pattern ) || pattern.equals( originalId ) )\n        {\n            result = true;\n        }\n        else\n        {\n            \r\n            String[] repos = pattern.split( \",\" );\n            for ( String repo : repos )\n            {\n                repo = repo.trim();\n                \r\n                if ( repo.length() > 1 && repo.startsWith( \"!\" ) )\n                {\n                    if ( repo.substring( 1 ).equals( originalId ) )\n                    {\n                        \r\n                        result = false;\n                        break;\n                    }\n                }\n                \r\n                else if ( repo.equals( originalId ) )\n                {\n                    result = true;\n                    break;\n                }\n                \r\n                else if ( EXTERNAL_WILDCARD.equals( repo ) && isExternalRepo( originalRepository ) )\n                {\n                    result = true;\n                    \r\n                }\n                else if ( WILDCARD.equals( repo ) )\n                {\n                    result = true;\n                    \r\n                }\n            }\n        }\n        return result;\n    }\n","date":"2014-06-12 10:26:18","endLine":123,"groupId":"1045","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"matchPattern","params":"(ArtifactRepositoryoriginalRepository@Stringpattern)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-maven-10-0.7/blobInfo/CC_OUT/blobs/53/e7bd4a68a203973043d8c4ceb3568fc029a586.src","preCode":"    static boolean matchPattern( ArtifactRepository originalRepository, String pattern )\n    {\n        boolean result = false;\n        String originalId = originalRepository.getId();\n\n        \r\n        if ( WILDCARD.equals( pattern ) || pattern.equals( originalId ) )\n        {\n            result = true;\n        }\n        else\n        {\n            \r\n            String[] repos = pattern.split( \",\" );\n            for ( String repo : repos )\n            {\n                repo = repo.trim();\n                \r\n                if ( repo.length() > 1 && repo.startsWith( \"!\" ) )\n                {\n                    if ( repo.substring( 1 ).equals( originalId ) )\n                    {\n                        \r\n                        result = false;\n                        break;\n                    }\n                }\n                \r\n                else if ( repo.equals( originalId ) )\n                {\n                    result = true;\n                    break;\n                }\n                \r\n                else if ( EXTERNAL_WILDCARD.equals( repo ) && isExternalRepo( originalRepository ) )\n                {\n                    result = true;\n                    \r\n                }\n                else if ( WILDCARD.equals( repo ) )\n                {\n                    result = true;\n                    \r\n                }\n            }\n        }\n        return result;\n    }\n","realPath":"maven-compat/src/main/java/org/apache/maven/repository/DefaultMirrorSelector.java","repoName":"maven","snippetEndLine":0,"snippetStartLine":0,"startLine":76,"status":"NB"},{"authorDate":"2015-02-09 14:44:32","commitOrder":3,"curCode":"    static boolean matchPattern( ArtifactRepository originalRepository, String pattern )\n    {\n        boolean result = false;\n        String originalId = originalRepository.getId();\n\n        \r\n        if ( WILDCARD.equals( pattern ) || pattern.equals( originalId ) )\n        {\n            result = true;\n        }\n        else\n        {\n            \r\n            String[] repos = pattern.split( \",\" );\n            for ( String repo : repos )\n            {\n                \r\n                if ( repo.length() > 1 && repo.startsWith( \"!\" ) )\n                {\n                    if ( repo.substring( 1 ).equals( originalId ) )\n                    {\n                        \r\n                        result = false;\n                        break;\n                    }\n                }\n                \r\n                else if ( repo.equals( originalId ) )\n                {\n                    result = true;\n                    break;\n                }\n                \r\n                else if ( EXTERNAL_WILDCARD.equals( repo ) && isExternalRepo( originalRepository ) )\n                {\n                    result = true;\n                    \r\n                }\n                else if ( WILDCARD.equals( repo ) )\n                {\n                    result = true;\n                    \r\n                }\n            }\n        }\n        return result;\n    }\n","date":"2015-02-09 14:44:32","endLine":705,"groupId":"3657","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"matchPattern","params":"(ArtifactRepositoryoriginalRepository@Stringpattern)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-maven-10-0.7/blobInfo/CC_OUT/blobs/06/0713f60c5ecb2bc71bbb22235977bc67afc1c5.src","preCode":"    static boolean matchPattern( ArtifactRepository originalRepository, String pattern )\n    {\n        boolean result = false;\n        String originalId = originalRepository.getId();\n\n        \r\n        if ( WILDCARD.equals( pattern ) || pattern.equals( originalId ) )\n        {\n            result = true;\n        }\n        else\n        {\n            \r\n            String[] repos = pattern.split( \",\" );\n            for ( String repo : repos )\n            {\n                \r\n                if ( repo.length() > 1 && repo.startsWith( \"!\" ) )\n                {\n                    if ( repo.substring( 1 ).equals( originalId ) )\n                    {\n                        \r\n                        result = false;\n                        break;\n                    }\n                }\n                \r\n                else if ( repo.equals( originalId ) )\n                {\n                    result = true;\n                    break;\n                }\n                \r\n                else if ( EXTERNAL_WILDCARD.equals( repo ) && isExternalRepo( originalRepository ) )\n                {\n                    result = true;\n                    \r\n                }\n                else if ( WILDCARD.equals( repo ) )\n                {\n                    result = true;\n                    \r\n                }\n            }\n        }\n        return result;\n    }\n","realPath":"maven-core/src/main/java/org/apache/maven/bridge/MavenRepositorySystem.java","repoName":"maven","snippetEndLine":0,"snippetStartLine":0,"startLine":659,"status":"B"}],"commitId":"dd5eb31a08ae84f560c36ad1145d835ffd90b1ee","commitMessage":"@@@Fold back into MavenRepositorySystem and work from there to clean up all references to the legacy system and Settings.\n","date":"2015-02-09 14:44:32","modifiedFileCount":"4","status":"M","submitter":"Jason van Zyl"},{"authorTime":"2021-03-14 01:40:48","codes":[{"authorDate":"2021-03-14 01:40:48","commitOrder":4,"curCode":"    static boolean matchPattern( ArtifactRepository originalRepository, String pattern )\n    {\n        boolean result = false;\n        String originalId = originalRepository.getId();\n\n        \r\n        if ( WILDCARD.equals( pattern ) || pattern.equals( originalId ) )\n        {\n            result = true;\n        }\n        else\n        {\n            \r\n            String[] repos = pattern.split( \",\" );\n            for ( String repo : repos )\n            {\n                repo = repo.trim();\n                \r\n                if ( repo.length() > 1 && repo.startsWith( \"!\" ) )\n                {\n                    if ( repo.substring( 1 ).equals( originalId ) )\n                    {\n                        \r\n                        result = false;\n                        break;\n                    }\n                }\n                \r\n                else if ( repo.equals( originalId ) )\n                {\n                    result = true;\n                    break;\n                }\n                \r\n                else if ( EXTERNAL_WILDCARD.equals( repo ) && isExternalRepo( originalRepository ) )\n                {\n                    result = true;\n                    \r\n                }\n                \r\n                else if ( EXTERNAL_HTTP_WILDCARD.equals( repo ) && isExternalHttpRepo( originalRepository ) )\n                {\n                    result = true;\n                    \r\n                }\n                else if ( WILDCARD.equals( repo ) )\n                {\n                    result = true;\n                    \r\n                }\n            }\n        }\n        return result;\n    }\n","date":"2021-03-20 03:35:50","endLine":139,"groupId":"10299","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"matchPattern","params":"(ArtifactRepositoryoriginalRepository@Stringpattern)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-maven-10-0.7/blobInfo/CC_OUT/blobs/5c/176e69b3a2f64daa7bfb8558edc72280682d0c.src","preCode":"    static boolean matchPattern( ArtifactRepository originalRepository, String pattern )\n    {\n        boolean result = false;\n        String originalId = originalRepository.getId();\n\n        \r\n        if ( WILDCARD.equals( pattern ) || pattern.equals( originalId ) )\n        {\n            result = true;\n        }\n        else\n        {\n            \r\n            String[] repos = pattern.split( \",\" );\n            for ( String repo : repos )\n            {\n                repo = repo.trim();\n                \r\n                if ( repo.length() > 1 && repo.startsWith( \"!\" ) )\n                {\n                    if ( repo.substring( 1 ).equals( originalId ) )\n                    {\n                        \r\n                        result = false;\n                        break;\n                    }\n                }\n                \r\n                else if ( repo.equals( originalId ) )\n                {\n                    result = true;\n                    break;\n                }\n                \r\n                else if ( EXTERNAL_WILDCARD.equals( repo ) && isExternalRepo( originalRepository ) )\n                {\n                    result = true;\n                    \r\n                }\n                else if ( WILDCARD.equals( repo ) )\n                {\n                    result = true;\n                    \r\n                }\n            }\n        }\n        return result;\n    }\n","realPath":"maven-compat/src/main/java/org/apache/maven/repository/DefaultMirrorSelector.java","repoName":"maven","snippetEndLine":0,"snippetStartLine":0,"startLine":86,"status":"M"},{"authorDate":"2021-03-14 01:40:48","commitOrder":4,"curCode":"    static boolean matchPattern( ArtifactRepository originalRepository, String pattern )\n    {\n        boolean result = false;\n        String originalId = originalRepository.getId();\n\n        \r\n        if ( WILDCARD.equals( pattern ) || pattern.equals( originalId ) )\n        {\n            result = true;\n        }\n        else\n        {\n            \r\n            String[] repos = pattern.split( \",\" );\n            for ( String repo : repos )\n            {\n                \r\n                if ( repo.length() > 1 && repo.startsWith( \"!\" ) )\n                {\n                    if ( repo.substring( 1 ).equals( originalId ) )\n                    {\n                        \r\n                        result = false;\n                        break;\n                    }\n                }\n                \r\n                else if ( repo.equals( originalId ) )\n                {\n                    result = true;\n                    break;\n                }\n                \r\n                else if ( EXTERNAL_WILDCARD.equals( repo ) && isExternalRepo( originalRepository ) )\n                {\n                    result = true;\n                    \r\n                }\n                \r\n                else if ( EXTERNAL_HTTP_WILDCARD.equals( repo ) && isExternalHttpRepo( originalRepository ) )\n                {\n                    result = true;\n                    \r\n                }\n                else if ( WILDCARD.equals( repo ) )\n                {\n                    result = true;\n                    \r\n                }\n            }\n        }\n        return result;\n    }\n","date":"2021-03-20 03:35:50","endLine":810,"groupId":"10299","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"matchPattern","params":"(ArtifactRepositoryoriginalRepository@Stringpattern)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-maven-10-0.7/blobInfo/CC_OUT/blobs/e3/7db0428ee1fc58a7f22c6a6f25d6b738aeed24.src","preCode":"    static boolean matchPattern( ArtifactRepository originalRepository, String pattern )\n    {\n        boolean result = false;\n        String originalId = originalRepository.getId();\n\n        \r\n        if ( WILDCARD.equals( pattern ) || pattern.equals( originalId ) )\n        {\n            result = true;\n        }\n        else\n        {\n            \r\n            String[] repos = pattern.split( \",\" );\n            for ( String repo : repos )\n            {\n                \r\n                if ( repo.length() > 1 && repo.startsWith( \"!\" ) )\n                {\n                    if ( repo.substring( 1 ).equals( originalId ) )\n                    {\n                        \r\n                        result = false;\n                        break;\n                    }\n                }\n                \r\n                else if ( repo.equals( originalId ) )\n                {\n                    result = true;\n                    break;\n                }\n                \r\n                else if ( EXTERNAL_WILDCARD.equals( repo ) && isExternalRepo( originalRepository ) )\n                {\n                    result = true;\n                    \r\n                }\n                else if ( WILDCARD.equals( repo ) )\n                {\n                    result = true;\n                    \r\n                }\n            }\n        }\n        return result;\n    }\n","realPath":"maven-core/src/main/java/org/apache/maven/bridge/MavenRepositorySystem.java","repoName":"maven","snippetEndLine":0,"snippetStartLine":0,"startLine":758,"status":"M"}],"commitId":"3b21386c3f1ab85060f6c950fb2fb17123df8647","commitMessage":"@@@[MNG-7116] add support for mirrorOf external:http:*","date":"2021-03-20 03:35:50","modifiedFileCount":"2","status":"M","submitter":"Herv? Boutemy"}]
