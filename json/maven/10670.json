[{"authorTime":"2010-08-25 06:46:07","codes":[{"authorDate":"2010-08-25 06:46:07","commitOrder":1,"curCode":"        public boolean visitEnter( DependencyNode node )\n        {\n            StringBuilder buffer = new StringBuilder( 128 );\n            buffer.append( indent );\n            org.sonatype.aether.graph.Dependency dep = node.getDependency();\n            if ( dep != null )\n            {\n                org.sonatype.aether.artifact.Artifact art = dep.getArtifact();\n\n                buffer.append( art );\n                buffer.append( ':' ).append( dep.getScope() );\n\n                if ( node.getPremanagedScope() != null && !node.getPremanagedScope().equals( dep.getScope() ) )\n                {\n                    buffer.append( \" (scope managed from \" ).append( node.getPremanagedScope() ).append( \")\" );\n                }\n\n                if ( node.getPremanagedVersion() != null && !node.getPremanagedVersion().equals( art.getVersion() ) )\n                {\n                    buffer.append( \" (version managed from \" ).append( node.getPremanagedVersion() ).append( \")\" );\n                }\n            }\n\n            logger.debug( buffer.toString() );\n            indent += \"   \";\n            return true;\n        }\n","date":"2010-08-25 06:46:07","endLine":201,"groupId":"1015","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"visitEnter","params":"(DependencyNodenode)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-maven-10-0.7/blobInfo/CC_OUT/blobs/26/4d153aee9f9c8cbf3e8062cf0290bdacc73184.src","preCode":"        public boolean visitEnter( DependencyNode node )\n        {\n            StringBuilder buffer = new StringBuilder( 128 );\n            buffer.append( indent );\n            org.sonatype.aether.graph.Dependency dep = node.getDependency();\n            if ( dep != null )\n            {\n                org.sonatype.aether.artifact.Artifact art = dep.getArtifact();\n\n                buffer.append( art );\n                buffer.append( ':' ).append( dep.getScope() );\n\n                if ( node.getPremanagedScope() != null && !node.getPremanagedScope().equals( dep.getScope() ) )\n                {\n                    buffer.append( \" (scope managed from \" ).append( node.getPremanagedScope() ).append( \")\" );\n                }\n\n                if ( node.getPremanagedVersion() != null && !node.getPremanagedVersion().equals( art.getVersion() ) )\n                {\n                    buffer.append( \" (version managed from \" ).append( node.getPremanagedVersion() ).append( \")\" );\n                }\n            }\n\n            logger.debug( buffer.toString() );\n            indent += \"   \";\n            return true;\n        }\n","realPath":"maven-core/src/main/java/org/apache/maven/plugin/internal/DefaultPluginDependenciesResolver.java","repoName":"maven","snippetEndLine":0,"snippetStartLine":0,"startLine":175,"status":"B"},{"authorDate":"2010-08-25 06:46:07","commitOrder":1,"curCode":"        public boolean visitEnter( DependencyNode node )\n        {\n            StringBuilder buffer = new StringBuilder( 128 );\n            buffer.append( indent );\n            org.sonatype.aether.graph.Dependency dep = node.getDependency();\n            if ( dep != null )\n            {\n                org.sonatype.aether.artifact.Artifact art = dep.getArtifact();\n\n                buffer.append( art );\n                buffer.append( ':' ).append( dep.getScope() );\n\n                if ( node.getPremanagedScope() != null && !node.getPremanagedScope().equals( dep.getScope() ) )\n                {\n                    buffer.append( \" (scope managed from \" ).append( node.getPremanagedScope() ).append( \")\" );\n                }\n\n                if ( node.getPremanagedVersion() != null && !node.getPremanagedVersion().equals( art.getVersion() ) )\n                {\n                    buffer.append( \" (version managed from \" ).append( node.getPremanagedVersion() ).append( \")\" );\n                }\n            }\n            else\n            {\n                buffer.append( project.getGroupId() );\n                buffer.append( ':' ).append( project.getArtifactId() );\n                buffer.append( ':' ).append( project.getPackaging() );\n                buffer.append( ':' ).append( project.getVersion() );\n            }\n\n            logger.debug( buffer.toString() );\n            indent += \"   \";\n            return true;\n        }\n","date":"2010-08-25 06:46:07","endLine":222,"groupId":"1015","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"visitEnter","params":"(DependencyNodenode)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-maven-10-0.7/blobInfo/CC_OUT/blobs/db/7ca64b7feddca0b38af4817b76005fc8f055e4.src","preCode":"        public boolean visitEnter( DependencyNode node )\n        {\n            StringBuilder buffer = new StringBuilder( 128 );\n            buffer.append( indent );\n            org.sonatype.aether.graph.Dependency dep = node.getDependency();\n            if ( dep != null )\n            {\n                org.sonatype.aether.artifact.Artifact art = dep.getArtifact();\n\n                buffer.append( art );\n                buffer.append( ':' ).append( dep.getScope() );\n\n                if ( node.getPremanagedScope() != null && !node.getPremanagedScope().equals( dep.getScope() ) )\n                {\n                    buffer.append( \" (scope managed from \" ).append( node.getPremanagedScope() ).append( \")\" );\n                }\n\n                if ( node.getPremanagedVersion() != null && !node.getPremanagedVersion().equals( art.getVersion() ) )\n                {\n                    buffer.append( \" (version managed from \" ).append( node.getPremanagedVersion() ).append( \")\" );\n                }\n            }\n            else\n            {\n                buffer.append( project.getGroupId() );\n                buffer.append( ':' ).append( project.getArtifactId() );\n                buffer.append( ':' ).append( project.getPackaging() );\n                buffer.append( ':' ).append( project.getVersion() );\n            }\n\n            logger.debug( buffer.toString() );\n            indent += \"   \";\n            return true;\n        }\n","realPath":"maven-core/src/main/java/org/apache/maven/project/DefaultProjectDependenciesResolver.java","repoName":"maven","snippetEndLine":0,"snippetStartLine":0,"startLine":189,"status":"B"}],"commitId":"6c37a89744149e68f198429fb7eac70fe1707360","commitMessage":"@@@[MNG-4756] Aether integration\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/maven-3/trunk@988749 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2010-08-25 06:46:07","modifiedFileCount":"102","status":"B","submitter":"Benjamin Bentmann"},{"authorTime":"2011-02-25 01:22:48","codes":[{"authorDate":"2010-08-25 06:46:07","commitOrder":2,"curCode":"        public boolean visitEnter( DependencyNode node )\n        {\n            StringBuilder buffer = new StringBuilder( 128 );\n            buffer.append( indent );\n            org.sonatype.aether.graph.Dependency dep = node.getDependency();\n            if ( dep != null )\n            {\n                org.sonatype.aether.artifact.Artifact art = dep.getArtifact();\n\n                buffer.append( art );\n                buffer.append( ':' ).append( dep.getScope() );\n\n                if ( node.getPremanagedScope() != null && !node.getPremanagedScope().equals( dep.getScope() ) )\n                {\n                    buffer.append( \" (scope managed from \" ).append( node.getPremanagedScope() ).append( \")\" );\n                }\n\n                if ( node.getPremanagedVersion() != null && !node.getPremanagedVersion().equals( art.getVersion() ) )\n                {\n                    buffer.append( \" (version managed from \" ).append( node.getPremanagedVersion() ).append( \")\" );\n                }\n            }\n\n            logger.debug( buffer.toString() );\n            indent += \"   \";\n            return true;\n        }\n","date":"2010-08-25 06:46:07","endLine":201,"groupId":"1015","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"visitEnter","params":"(DependencyNodenode)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-maven-10-0.7/blobInfo/CC_OUT/blobs/26/4d153aee9f9c8cbf3e8062cf0290bdacc73184.src","preCode":"        public boolean visitEnter( DependencyNode node )\n        {\n            StringBuilder buffer = new StringBuilder( 128 );\n            buffer.append( indent );\n            org.sonatype.aether.graph.Dependency dep = node.getDependency();\n            if ( dep != null )\n            {\n                org.sonatype.aether.artifact.Artifact art = dep.getArtifact();\n\n                buffer.append( art );\n                buffer.append( ':' ).append( dep.getScope() );\n\n                if ( node.getPremanagedScope() != null && !node.getPremanagedScope().equals( dep.getScope() ) )\n                {\n                    buffer.append( \" (scope managed from \" ).append( node.getPremanagedScope() ).append( \")\" );\n                }\n\n                if ( node.getPremanagedVersion() != null && !node.getPremanagedVersion().equals( art.getVersion() ) )\n                {\n                    buffer.append( \" (version managed from \" ).append( node.getPremanagedVersion() ).append( \")\" );\n                }\n            }\n\n            logger.debug( buffer.toString() );\n            indent += \"   \";\n            return true;\n        }\n","realPath":"maven-core/src/main/java/org/apache/maven/plugin/internal/DefaultPluginDependenciesResolver.java","repoName":"maven","snippetEndLine":0,"snippetStartLine":0,"startLine":175,"status":"N"},{"authorDate":"2011-02-25 01:22:48","commitOrder":2,"curCode":"        public boolean visitEnter( DependencyNode node )\n        {\n            StringBuilder buffer = new StringBuilder( 128 );\n            buffer.append( indent );\n            org.sonatype.aether.graph.Dependency dep = node.getDependency();\n            if ( dep != null )\n            {\n                org.sonatype.aether.artifact.Artifact art = dep.getArtifact();\n\n                buffer.append( art );\n                buffer.append( ':' ).append( dep.getScope() );\n\n                if ( node.getPremanagedScope() != null && !node.getPremanagedScope().equals( dep.getScope() ) )\n                {\n                    buffer.append( \" (scope managed from \" ).append( node.getPremanagedScope() );\n                    appendManagementSource( buffer, art, \"scope\" );\n                    buffer.append( \")\" );\n                }\n\n                if ( node.getPremanagedVersion() != null && !node.getPremanagedVersion().equals( art.getVersion() ) )\n                {\n                    buffer.append( \" (version managed from \" ).append( node.getPremanagedVersion() );\n                    appendManagementSource( buffer, art, \"version\" );\n                    buffer.append( \")\" );\n                }\n            }\n            else\n            {\n                buffer.append( project.getGroupId() );\n                buffer.append( ':' ).append( project.getArtifactId() );\n                buffer.append( ':' ).append( project.getPackaging() );\n                buffer.append( ':' ).append( project.getVersion() );\n            }\n\n            logger.debug( buffer.toString() );\n            indent += \"   \";\n            return true;\n        }\n","date":"2011-02-25 01:22:48","endLine":245,"groupId":"1015","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"visitEnter","params":"(DependencyNodenode)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-maven-10-0.7/blobInfo/CC_OUT/blobs/11/f9846a8ee4c67d8a23f22467579aebb62fef14.src","preCode":"        public boolean visitEnter( DependencyNode node )\n        {\n            StringBuilder buffer = new StringBuilder( 128 );\n            buffer.append( indent );\n            org.sonatype.aether.graph.Dependency dep = node.getDependency();\n            if ( dep != null )\n            {\n                org.sonatype.aether.artifact.Artifact art = dep.getArtifact();\n\n                buffer.append( art );\n                buffer.append( ':' ).append( dep.getScope() );\n\n                if ( node.getPremanagedScope() != null && !node.getPremanagedScope().equals( dep.getScope() ) )\n                {\n                    buffer.append( \" (scope managed from \" ).append( node.getPremanagedScope() ).append( \")\" );\n                }\n\n                if ( node.getPremanagedVersion() != null && !node.getPremanagedVersion().equals( art.getVersion() ) )\n                {\n                    buffer.append( \" (version managed from \" ).append( node.getPremanagedVersion() ).append( \")\" );\n                }\n            }\n            else\n            {\n                buffer.append( project.getGroupId() );\n                buffer.append( ':' ).append( project.getArtifactId() );\n                buffer.append( ':' ).append( project.getPackaging() );\n                buffer.append( ':' ).append( project.getVersion() );\n            }\n\n            logger.debug( buffer.toString() );\n            indent += \"   \";\n            return true;\n        }\n","realPath":"maven-core/src/main/java/org/apache/maven/project/DefaultProjectDependenciesResolver.java","repoName":"maven","snippetEndLine":0,"snippetStartLine":0,"startLine":208,"status":"M"}],"commitId":"06642a9eb7dd6607379b802e32bcabda5e2a42f9","commitMessage":"@@@o Extended debug logging for project dependency graph to include source location of dependency management\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/maven-3/trunk@1074222 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2011-02-25 01:22:48","modifiedFileCount":"1","status":"M","submitter":"Benjamin Bentmann"},{"authorTime":"2013-03-15 04:03:31","codes":[{"authorDate":"2013-03-15 04:03:31","commitOrder":3,"curCode":"        public boolean visitEnter( DependencyNode node )\n        {\n            StringBuilder buffer = new StringBuilder( 128 );\n            buffer.append( indent );\n            org.eclipse.aether.graph.Dependency dep = node.getDependency();\n            if ( dep != null )\n            {\n                org.eclipse.aether.artifact.Artifact art = dep.getArtifact();\n\n                buffer.append( art );\n                buffer.append( ':' ).append( dep.getScope() );\n            }\n\n            logger.debug( buffer.toString() );\n            indent += \"   \";\n            return true;\n        }\n","date":"2013-03-15 04:03:31","endLine":236,"groupId":"1106","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"visitEnter","params":"(DependencyNodenode)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-maven-10-0.7/blobInfo/CC_OUT/blobs/81/53aed8e75022525c0a1163f4986a16e6ea82c0.src","preCode":"        public boolean visitEnter( DependencyNode node )\n        {\n            StringBuilder buffer = new StringBuilder( 128 );\n            buffer.append( indent );\n            org.sonatype.aether.graph.Dependency dep = node.getDependency();\n            if ( dep != null )\n            {\n                org.sonatype.aether.artifact.Artifact art = dep.getArtifact();\n\n                buffer.append( art );\n                buffer.append( ':' ).append( dep.getScope() );\n\n                if ( node.getPremanagedScope() != null && !node.getPremanagedScope().equals( dep.getScope() ) )\n                {\n                    buffer.append( \" (scope managed from \" ).append( node.getPremanagedScope() ).append( \")\" );\n                }\n\n                if ( node.getPremanagedVersion() != null && !node.getPremanagedVersion().equals( art.getVersion() ) )\n                {\n                    buffer.append( \" (version managed from \" ).append( node.getPremanagedVersion() ).append( \")\" );\n                }\n            }\n\n            logger.debug( buffer.toString() );\n            indent += \"   \";\n            return true;\n        }\n","realPath":"maven-core/src/main/java/org/apache/maven/plugin/internal/DefaultPluginDependenciesResolver.java","repoName":"maven","snippetEndLine":0,"snippetStartLine":0,"startLine":220,"status":"M"},{"authorDate":"2013-03-15 04:03:31","commitOrder":3,"curCode":"        public boolean visitEnter( DependencyNode node )\n        {\n            StringBuilder buffer = new StringBuilder( 128 );\n            buffer.append( indent );\n            org.eclipse.aether.graph.Dependency dep = node.getDependency();\n            if ( dep != null )\n            {\n                org.eclipse.aether.artifact.Artifact art = dep.getArtifact();\n\n                buffer.append( art );\n                buffer.append( ':' ).append( dep.getScope() );\n\n                String premanagedScope = DependencyManagerUtils.getPremanagedScope( node );\n                if ( premanagedScope != null && !premanagedScope.equals( dep.getScope() ) )\n                {\n                    buffer.append( \" (scope managed from \" ).append( premanagedScope );\n                    appendManagementSource( buffer, art, \"scope\" );\n                    buffer.append( \")\" );\n                }\n\n                String premanagedVersion = DependencyManagerUtils.getPremanagedVersion( node );\n                if ( premanagedVersion != null && !premanagedVersion.equals( art.getVersion() ) )\n                {\n                    buffer.append( \" (version managed from \" ).append( premanagedVersion );\n                    appendManagementSource( buffer, art, \"version\" );\n                    buffer.append( \")\" );\n                }\n            }\n            else\n            {\n                buffer.append( project.getGroupId() );\n                buffer.append( ':' ).append( project.getArtifactId() );\n                buffer.append( ':' ).append( project.getPackaging() );\n                buffer.append( ':' ).append( project.getVersion() );\n            }\n\n            logger.debug( buffer.toString() );\n            indent += \"   \";\n            return true;\n        }\n","date":"2013-03-15 04:03:31","endLine":275,"groupId":"4787","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"visitEnter","params":"(DependencyNodenode)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-maven-10-0.7/blobInfo/CC_OUT/blobs/2a/6be6d23b9ee287d0c972b5bacadb211b286a56.src","preCode":"        public boolean visitEnter( DependencyNode node )\n        {\n            StringBuilder buffer = new StringBuilder( 128 );\n            buffer.append( indent );\n            org.sonatype.aether.graph.Dependency dep = node.getDependency();\n            if ( dep != null )\n            {\n                org.sonatype.aether.artifact.Artifact art = dep.getArtifact();\n\n                buffer.append( art );\n                buffer.append( ':' ).append( dep.getScope() );\n\n                if ( node.getPremanagedScope() != null && !node.getPremanagedScope().equals( dep.getScope() ) )\n                {\n                    buffer.append( \" (scope managed from \" ).append( node.getPremanagedScope() );\n                    appendManagementSource( buffer, art, \"scope\" );\n                    buffer.append( \")\" );\n                }\n\n                if ( node.getPremanagedVersion() != null && !node.getPremanagedVersion().equals( art.getVersion() ) )\n                {\n                    buffer.append( \" (version managed from \" ).append( node.getPremanagedVersion() );\n                    appendManagementSource( buffer, art, \"version\" );\n                    buffer.append( \")\" );\n                }\n            }\n            else\n            {\n                buffer.append( project.getGroupId() );\n                buffer.append( ':' ).append( project.getArtifactId() );\n                buffer.append( ':' ).append( project.getPackaging() );\n                buffer.append( ':' ).append( project.getVersion() );\n            }\n\n            logger.debug( buffer.toString() );\n            indent += \"   \";\n            return true;\n        }\n","realPath":"maven-core/src/main/java/org/apache/maven/project/DefaultProjectDependenciesResolver.java","repoName":"maven","snippetEndLine":0,"snippetStartLine":0,"startLine":236,"status":"M"}],"commitId":"ebf2e4ddeaee2c7634a66b7c08bf4bf197768896","commitMessage":"@@@Merge branch 'eclipse-aether' of github.com:tesla/tesla-build into eclipse-aether\n\nConflicts:\n\t.gitignore\n\tpom.xml\n","date":"2013-03-15 04:03:31","modifiedFileCount":"110","status":"M","submitter":"Jason van Zyl"},{"authorTime":"2013-03-15 04:03:31","codes":[{"authorDate":"2014-05-25 06:00:26","commitOrder":4,"curCode":"        public boolean visitEnter( DependencyNode node )\n        {\n            StringBuilder buffer = new StringBuilder( 128 );\n            buffer.append( indent );\n            org.eclipse.aether.graph.Dependency dep = node.getDependency();\n            if ( dep != null )\n            {\n                Artifact art = dep.getArtifact();\n\n                buffer.append( art );\n                buffer.append( ':' ).append( dep.getScope() );\n            }\n\n            logger.debug( buffer.toString() );\n            indent += \"   \";\n            return true;\n        }\n","date":"2014-05-25 06:00:26","endLine":236,"groupId":"3092","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"visitEnter","params":"(DependencyNodenode)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-maven-10-0.7/blobInfo/CC_OUT/blobs/a1/b735e5d9e5c5b845ee984cd78640df1e49f0f2.src","preCode":"        public boolean visitEnter( DependencyNode node )\n        {\n            StringBuilder buffer = new StringBuilder( 128 );\n            buffer.append( indent );\n            org.eclipse.aether.graph.Dependency dep = node.getDependency();\n            if ( dep != null )\n            {\n                org.eclipse.aether.artifact.Artifact art = dep.getArtifact();\n\n                buffer.append( art );\n                buffer.append( ':' ).append( dep.getScope() );\n            }\n\n            logger.debug( buffer.toString() );\n            indent += \"   \";\n            return true;\n        }\n","realPath":"maven-core/src/main/java/org/apache/maven/plugin/internal/DefaultPluginDependenciesResolver.java","repoName":"maven","snippetEndLine":0,"snippetStartLine":0,"startLine":220,"status":"M"},{"authorDate":"2013-03-15 04:03:31","commitOrder":4,"curCode":"        public boolean visitEnter( DependencyNode node )\n        {\n            StringBuilder buffer = new StringBuilder( 128 );\n            buffer.append( indent );\n            org.eclipse.aether.graph.Dependency dep = node.getDependency();\n            if ( dep != null )\n            {\n                org.eclipse.aether.artifact.Artifact art = dep.getArtifact();\n\n                buffer.append( art );\n                buffer.append( ':' ).append( dep.getScope() );\n\n                String premanagedScope = DependencyManagerUtils.getPremanagedScope( node );\n                if ( premanagedScope != null && !premanagedScope.equals( dep.getScope() ) )\n                {\n                    buffer.append( \" (scope managed from \" ).append( premanagedScope );\n                    appendManagementSource( buffer, art, \"scope\" );\n                    buffer.append( \")\" );\n                }\n\n                String premanagedVersion = DependencyManagerUtils.getPremanagedVersion( node );\n                if ( premanagedVersion != null && !premanagedVersion.equals( art.getVersion() ) )\n                {\n                    buffer.append( \" (version managed from \" ).append( premanagedVersion );\n                    appendManagementSource( buffer, art, \"version\" );\n                    buffer.append( \")\" );\n                }\n            }\n            else\n            {\n                buffer.append( project.getGroupId() );\n                buffer.append( ':' ).append( project.getArtifactId() );\n                buffer.append( ':' ).append( project.getPackaging() );\n                buffer.append( ':' ).append( project.getVersion() );\n            }\n\n            logger.debug( buffer.toString() );\n            indent += \"   \";\n            return true;\n        }\n","date":"2013-03-15 04:03:31","endLine":275,"groupId":"4787","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"visitEnter","params":"(DependencyNodenode)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-maven-10-0.7/blobInfo/CC_OUT/blobs/2a/6be6d23b9ee287d0c972b5bacadb211b286a56.src","preCode":"        public boolean visitEnter( DependencyNode node )\n        {\n            StringBuilder buffer = new StringBuilder( 128 );\n            buffer.append( indent );\n            org.eclipse.aether.graph.Dependency dep = node.getDependency();\n            if ( dep != null )\n            {\n                org.eclipse.aether.artifact.Artifact art = dep.getArtifact();\n\n                buffer.append( art );\n                buffer.append( ':' ).append( dep.getScope() );\n\n                String premanagedScope = DependencyManagerUtils.getPremanagedScope( node );\n                if ( premanagedScope != null && !premanagedScope.equals( dep.getScope() ) )\n                {\n                    buffer.append( \" (scope managed from \" ).append( premanagedScope );\n                    appendManagementSource( buffer, art, \"scope\" );\n                    buffer.append( \")\" );\n                }\n\n                String premanagedVersion = DependencyManagerUtils.getPremanagedVersion( node );\n                if ( premanagedVersion != null && !premanagedVersion.equals( art.getVersion() ) )\n                {\n                    buffer.append( \" (version managed from \" ).append( premanagedVersion );\n                    appendManagementSource( buffer, art, \"version\" );\n                    buffer.append( \")\" );\n                }\n            }\n            else\n            {\n                buffer.append( project.getGroupId() );\n                buffer.append( ':' ).append( project.getArtifactId() );\n                buffer.append( ':' ).append( project.getPackaging() );\n                buffer.append( ':' ).append( project.getVersion() );\n            }\n\n            logger.debug( buffer.toString() );\n            indent += \"   \";\n            return true;\n        }\n","realPath":"maven-core/src/main/java/org/apache/maven/project/DefaultProjectDependenciesResolver.java","repoName":"maven","snippetEndLine":0,"snippetStartLine":0,"startLine":236,"status":"N"}],"commitId":"73d35ba9597cd867717310ae8813376888debb9b","commitMessage":"@@@fixed errors reported by Checkstyle","date":"2014-05-25 06:00:26","modifiedFileCount":"14","status":"M","submitter":"Herv? Boutemy"},{"authorTime":"2016-01-20 03:04:59","codes":[{"authorDate":"2014-05-25 06:00:26","commitOrder":5,"curCode":"        public boolean visitEnter( DependencyNode node )\n        {\n            StringBuilder buffer = new StringBuilder( 128 );\n            buffer.append( indent );\n            org.eclipse.aether.graph.Dependency dep = node.getDependency();\n            if ( dep != null )\n            {\n                Artifact art = dep.getArtifact();\n\n                buffer.append( art );\n                buffer.append( ':' ).append( dep.getScope() );\n            }\n\n            logger.debug( buffer.toString() );\n            indent += \"   \";\n            return true;\n        }\n","date":"2014-05-25 06:00:26","endLine":236,"groupId":"3092","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"visitEnter","params":"(DependencyNodenode)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-maven-10-0.7/blobInfo/CC_OUT/blobs/a1/b735e5d9e5c5b845ee984cd78640df1e49f0f2.src","preCode":"        public boolean visitEnter( DependencyNode node )\n        {\n            StringBuilder buffer = new StringBuilder( 128 );\n            buffer.append( indent );\n            org.eclipse.aether.graph.Dependency dep = node.getDependency();\n            if ( dep != null )\n            {\n                Artifact art = dep.getArtifact();\n\n                buffer.append( art );\n                buffer.append( ':' ).append( dep.getScope() );\n            }\n\n            logger.debug( buffer.toString() );\n            indent += \"   \";\n            return true;\n        }\n","realPath":"maven-core/src/main/java/org/apache/maven/plugin/internal/DefaultPluginDependenciesResolver.java","repoName":"maven","snippetEndLine":0,"snippetStartLine":0,"startLine":220,"status":"N"},{"authorDate":"2016-01-20 03:04:59","commitOrder":5,"curCode":"        public boolean visitEnter( DependencyNode node )\n        {\n            StringBuilder buffer = new StringBuilder( 128 );\n            buffer.append( indent );\n            org.eclipse.aether.graph.Dependency dep = node.getDependency();\n            if ( dep != null )\n            {\n                org.eclipse.aether.artifact.Artifact art = dep.getArtifact();\n\n                buffer.append( art );\n                buffer.append( ':' ).append( dep.getScope() );\n\n                String premanagedScope = DependencyManagerUtils.getPremanagedScope( node );\n                if ( premanagedScope != null && !premanagedScope.equals( dep.getScope() ) )\n                {\n                    buffer.append( \" (scope managed from \" ).append( premanagedScope );\n                    appendManagementSource( buffer, art, \"scope\" );\n                    buffer.append( ')' );\n                }\n\n                String premanagedVersion = DependencyManagerUtils.getPremanagedVersion( node );\n                if ( premanagedVersion != null && !premanagedVersion.equals( art.getVersion() ) )\n                {\n                    buffer.append( \" (version managed from \" ).append( premanagedVersion );\n                    appendManagementSource( buffer, art, \"version\" );\n                    buffer.append( ')' );\n                }\n            }\n            else\n            {\n                buffer.append( project.getGroupId() );\n                buffer.append( ':' ).append( project.getArtifactId() );\n                buffer.append( ':' ).append( project.getPackaging() );\n                buffer.append( ':' ).append( project.getVersion() );\n            }\n\n            logger.debug( buffer.toString() );\n            indent += \"   \";\n            return true;\n        }\n","date":"2017-02-11 21:08:24","endLine":288,"groupId":"484","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"visitEnter","params":"(DependencyNodenode)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-maven-10-0.7/blobInfo/CC_OUT/blobs/16/b60c20040b62b1c90d284a89f9c3d981f35daf.src","preCode":"        public boolean visitEnter( DependencyNode node )\n        {\n            StringBuilder buffer = new StringBuilder( 128 );\n            buffer.append( indent );\n            org.eclipse.aether.graph.Dependency dep = node.getDependency();\n            if ( dep != null )\n            {\n                org.eclipse.aether.artifact.Artifact art = dep.getArtifact();\n\n                buffer.append( art );\n                buffer.append( ':' ).append( dep.getScope() );\n\n                String premanagedScope = DependencyManagerUtils.getPremanagedScope( node );\n                if ( premanagedScope != null && !premanagedScope.equals( dep.getScope() ) )\n                {\n                    buffer.append( \" (scope managed from \" ).append( premanagedScope );\n                    appendManagementSource( buffer, art, \"scope\" );\n                    buffer.append( \")\" );\n                }\n\n                String premanagedVersion = DependencyManagerUtils.getPremanagedVersion( node );\n                if ( premanagedVersion != null && !premanagedVersion.equals( art.getVersion() ) )\n                {\n                    buffer.append( \" (version managed from \" ).append( premanagedVersion );\n                    appendManagementSource( buffer, art, \"version\" );\n                    buffer.append( \")\" );\n                }\n            }\n            else\n            {\n                buffer.append( project.getGroupId() );\n                buffer.append( ':' ).append( project.getArtifactId() );\n                buffer.append( ':' ).append( project.getPackaging() );\n                buffer.append( ':' ).append( project.getVersion() );\n            }\n\n            logger.debug( buffer.toString() );\n            indent += \"   \";\n            return true;\n        }\n","realPath":"maven-core/src/main/java/org/apache/maven/project/DefaultProjectDependenciesResolver.java","repoName":"maven","snippetEndLine":0,"snippetStartLine":0,"startLine":249,"status":"M"}],"commitId":"8d91726f7872f4462d9fa085ef5b6f32bfd0a2e1","commitMessage":"@@@[MNG-5934] String handling issues identified by PMD\n","date":"2017-02-11 21:08:24","modifiedFileCount":"38","status":"M","submitter":"Alex Henrie"},{"authorTime":"2016-01-27 10:46:11","codes":[{"authorDate":"2014-05-25 06:00:26","commitOrder":6,"curCode":"        public boolean visitEnter( DependencyNode node )\n        {\n            StringBuilder buffer = new StringBuilder( 128 );\n            buffer.append( indent );\n            org.eclipse.aether.graph.Dependency dep = node.getDependency();\n            if ( dep != null )\n            {\n                Artifact art = dep.getArtifact();\n\n                buffer.append( art );\n                buffer.append( ':' ).append( dep.getScope() );\n            }\n\n            logger.debug( buffer.toString() );\n            indent += \"   \";\n            return true;\n        }\n","date":"2014-05-25 06:00:26","endLine":236,"groupId":"3092","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"visitEnter","params":"(DependencyNodenode)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-maven-10-0.7/blobInfo/CC_OUT/blobs/a1/b735e5d9e5c5b845ee984cd78640df1e49f0f2.src","preCode":"        public boolean visitEnter( DependencyNode node )\n        {\n            StringBuilder buffer = new StringBuilder( 128 );\n            buffer.append( indent );\n            org.eclipse.aether.graph.Dependency dep = node.getDependency();\n            if ( dep != null )\n            {\n                Artifact art = dep.getArtifact();\n\n                buffer.append( art );\n                buffer.append( ':' ).append( dep.getScope() );\n            }\n\n            logger.debug( buffer.toString() );\n            indent += \"   \";\n            return true;\n        }\n","realPath":"maven-core/src/main/java/org/apache/maven/plugin/internal/DefaultPluginDependenciesResolver.java","repoName":"maven","snippetEndLine":0,"snippetStartLine":0,"startLine":220,"status":"N"},{"authorDate":"2016-01-27 10:46:11","commitOrder":6,"curCode":"        public boolean visitEnter( DependencyNode node )\n        {\n            StringBuilder buffer = new StringBuilder( 128 );\n            buffer.append( indent );\n            org.eclipse.aether.graph.Dependency dep = node.getDependency();\n            if ( dep != null )\n            {\n                org.eclipse.aether.artifact.Artifact art = dep.getArtifact();\n\n                buffer.append( art );\n                buffer.append( ':' ).append( dep.getScope() );\n\n                String premanagedScope = DependencyManagerUtils.getPremanagedScope( node );\n                if ( premanagedScope != null && !premanagedScope.equals( dep.getScope() ) )\n                {\n                    buffer.append( \" (scope managed from \" ).append( premanagedScope );\n                    appendManagementSource( buffer, art, \"scope\" );\n                    buffer.append( ')' );\n                }\n\n                String premanagedVersion = DependencyManagerUtils.getPremanagedVersion( node );\n                if ( premanagedVersion != null && !premanagedVersion.equals( art.getVersion() ) )\n                {\n                    buffer.append( \" (version managed from \" ).append( premanagedVersion );\n                    appendManagementSource( buffer, art, \"version\" );\n                    buffer.append( ')' );\n                }\n\n                Boolean premanagedOptional = DependencyManagerUtils.getPremanagedOptional( node );\n                if ( premanagedOptional != null && !premanagedOptional.equals( dep.getOptional() ) )\n                {\n                    buffer.append( \" (optionality managed from \" ).append( premanagedOptional );\n                    appendManagementSource( buffer, art, \"optional\" );\n                    buffer.append( ')' );\n                }\n            }\n            else\n            {\n                buffer.append( project.getGroupId() );\n                buffer.append( ':' ).append( project.getArtifactId() );\n                buffer.append( ':' ).append( project.getPackaging() );\n                buffer.append( ':' ).append( project.getVersion() );\n            }\n\n            logger.debug( buffer.toString() );\n            indent += \"   \";\n            return true;\n        }\n","date":"2017-03-09 02:37:31","endLine":296,"groupId":"484","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"visitEnter","params":"(DependencyNodenode)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-maven-10-0.7/blobInfo/CC_OUT/blobs/21/dfaa23953f22191c6ba4aec849220f44b101a5.src","preCode":"        public boolean visitEnter( DependencyNode node )\n        {\n            StringBuilder buffer = new StringBuilder( 128 );\n            buffer.append( indent );\n            org.eclipse.aether.graph.Dependency dep = node.getDependency();\n            if ( dep != null )\n            {\n                org.eclipse.aether.artifact.Artifact art = dep.getArtifact();\n\n                buffer.append( art );\n                buffer.append( ':' ).append( dep.getScope() );\n\n                String premanagedScope = DependencyManagerUtils.getPremanagedScope( node );\n                if ( premanagedScope != null && !premanagedScope.equals( dep.getScope() ) )\n                {\n                    buffer.append( \" (scope managed from \" ).append( premanagedScope );\n                    appendManagementSource( buffer, art, \"scope\" );\n                    buffer.append( ')' );\n                }\n\n                String premanagedVersion = DependencyManagerUtils.getPremanagedVersion( node );\n                if ( premanagedVersion != null && !premanagedVersion.equals( art.getVersion() ) )\n                {\n                    buffer.append( \" (version managed from \" ).append( premanagedVersion );\n                    appendManagementSource( buffer, art, \"version\" );\n                    buffer.append( ')' );\n                }\n            }\n            else\n            {\n                buffer.append( project.getGroupId() );\n                buffer.append( ':' ).append( project.getArtifactId() );\n                buffer.append( ':' ).append( project.getPackaging() );\n                buffer.append( ':' ).append( project.getVersion() );\n            }\n\n            logger.debug( buffer.toString() );\n            indent += \"   \";\n            return true;\n        }\n","realPath":"maven-core/src/main/java/org/apache/maven/project/DefaultProjectDependenciesResolver.java","repoName":"maven","snippetEndLine":0,"snippetStartLine":0,"startLine":249,"status":"M"}],"commitId":"34afec69c866f731f3f9d9b3606bbc31b51d64e7","commitMessage":"@@@[MNG-6183] Dependency management debug message enhancements.\n\no Updated to add debug log messages about optional flag management.\n","date":"2017-03-09 02:37:31","modifiedFileCount":"1","status":"M","submitter":"Christian Schulte"},{"authorTime":"2017-03-15 02:20:47","codes":[{"authorDate":"2014-05-25 06:00:26","commitOrder":7,"curCode":"        public boolean visitEnter( DependencyNode node )\n        {\n            StringBuilder buffer = new StringBuilder( 128 );\n            buffer.append( indent );\n            org.eclipse.aether.graph.Dependency dep = node.getDependency();\n            if ( dep != null )\n            {\n                Artifact art = dep.getArtifact();\n\n                buffer.append( art );\n                buffer.append( ':' ).append( dep.getScope() );\n            }\n\n            logger.debug( buffer.toString() );\n            indent += \"   \";\n            return true;\n        }\n","date":"2014-05-25 06:00:26","endLine":236,"groupId":"3092","id":13,"instanceNumber":1,"isCurCommit":0,"methodName":"visitEnter","params":"(DependencyNodenode)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-maven-10-0.7/blobInfo/CC_OUT/blobs/a1/b735e5d9e5c5b845ee984cd78640df1e49f0f2.src","preCode":"        public boolean visitEnter( DependencyNode node )\n        {\n            StringBuilder buffer = new StringBuilder( 128 );\n            buffer.append( indent );\n            org.eclipse.aether.graph.Dependency dep = node.getDependency();\n            if ( dep != null )\n            {\n                Artifact art = dep.getArtifact();\n\n                buffer.append( art );\n                buffer.append( ':' ).append( dep.getScope() );\n            }\n\n            logger.debug( buffer.toString() );\n            indent += \"   \";\n            return true;\n        }\n","realPath":"maven-core/src/main/java/org/apache/maven/plugin/internal/DefaultPluginDependenciesResolver.java","repoName":"maven","snippetEndLine":0,"snippetStartLine":0,"startLine":220,"status":"N"},{"authorDate":"2017-03-15 02:20:47","commitOrder":7,"curCode":"        public boolean visitEnter( DependencyNode node )\n        {\n            StringBuilder buffer = new StringBuilder( 128 );\n            buffer.append( indent );\n            org.eclipse.aether.graph.Dependency dep = node.getDependency();\n            if ( dep != null )\n            {\n                org.eclipse.aether.artifact.Artifact art = dep.getArtifact();\n\n                buffer.append( art );\n                buffer.append( ':' ).append( dep.getScope() );\n\n                \r\n                \r\n                \r\n                if ( ( node.getManagedBits() & DependencyNode.MANAGED_SCOPE ) == DependencyNode.MANAGED_SCOPE )\n                {\n                    final String premanagedScope = DependencyManagerUtils.getPremanagedScope( node );\n                    buffer.append( \" (scope managed from \" );\n                    buffer.append( StringUtils.defaultString( premanagedScope, \"default\" ) );\n                    buffer.append( ')' );\n                }\n\n                if ( ( node.getManagedBits() & DependencyNode.MANAGED_VERSION ) == DependencyNode.MANAGED_VERSION )\n                {\n                    final String premanagedVersion = DependencyManagerUtils.getPremanagedVersion( node );\n                    buffer.append( \" (version managed from \" );\n                    buffer.append( StringUtils.defaultString( premanagedVersion, \"default\" ) );\n                    buffer.append( ')' );\n                }\n\n                if ( ( node.getManagedBits() & DependencyNode.MANAGED_OPTIONAL ) == DependencyNode.MANAGED_OPTIONAL )\n                {\n                    final Boolean premanagedOptional = DependencyManagerUtils.getPremanagedOptional( node );\n                    buffer.append( \" (optionality managed from \" );\n                    buffer.append( StringUtils.defaultString( premanagedOptional, \"default\" ) );\n                    buffer.append( ')' );\n                }\n\n                if ( ( node.getManagedBits() & DependencyNode.MANAGED_EXCLUSIONS )\n                        == DependencyNode.MANAGED_EXCLUSIONS )\n                {\n                    \r\n                    \r\n                    buffer.append( \" (exclusions managed)\" );\n                }\n\n                if ( ( node.getManagedBits() & DependencyNode.MANAGED_PROPERTIES )\n                        == DependencyNode.MANAGED_PROPERTIES )\n                {\n                    \r\n                    \r\n                    buffer.append( \" (properties managed)\" );\n                }\n            }\n            else\n            {\n                buffer.append( project.getGroupId() );\n                buffer.append( ':' ).append( project.getArtifactId() );\n                buffer.append( ':' ).append( project.getPackaging() );\n                buffer.append( ':' ).append( project.getVersion() );\n            }\n\n            logger.debug( buffer.toString() );\n            indent += \"   \";\n            return true;\n        }\n","date":"2017-03-15 02:20:47","endLine":310,"groupId":"1106","id":14,"instanceNumber":2,"isCurCommit":0,"methodName":"visitEnter","params":"(DependencyNodenode)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-maven-10-0.7/blobInfo/CC_OUT/blobs/5a/803afb5b811b426f6c12e2544c362d4d0c59c2.src","preCode":"        public boolean visitEnter( DependencyNode node )\n        {\n            StringBuilder buffer = new StringBuilder( 128 );\n            buffer.append( indent );\n            org.eclipse.aether.graph.Dependency dep = node.getDependency();\n            if ( dep != null )\n            {\n                org.eclipse.aether.artifact.Artifact art = dep.getArtifact();\n\n                buffer.append( art );\n                buffer.append( ':' ).append( dep.getScope() );\n\n                String premanagedScope = DependencyManagerUtils.getPremanagedScope( node );\n                if ( premanagedScope != null && !premanagedScope.equals( dep.getScope() ) )\n                {\n                    buffer.append( \" (scope managed from \" ).append( premanagedScope );\n                    appendManagementSource( buffer, art, \"scope\" );\n                    buffer.append( ')' );\n                }\n\n                String premanagedVersion = DependencyManagerUtils.getPremanagedVersion( node );\n                if ( premanagedVersion != null && !premanagedVersion.equals( art.getVersion() ) )\n                {\n                    buffer.append( \" (version managed from \" ).append( premanagedVersion );\n                    appendManagementSource( buffer, art, \"version\" );\n                    buffer.append( ')' );\n                }\n\n                Boolean premanagedOptional = DependencyManagerUtils.getPremanagedOptional( node );\n                if ( premanagedOptional != null && !premanagedOptional.equals( dep.getOptional() ) )\n                {\n                    buffer.append( \" (optionality managed from \" ).append( premanagedOptional );\n                    appendManagementSource( buffer, art, \"optional\" );\n                    buffer.append( ')' );\n                }\n            }\n            else\n            {\n                buffer.append( project.getGroupId() );\n                buffer.append( ':' ).append( project.getArtifactId() );\n                buffer.append( ':' ).append( project.getPackaging() );\n                buffer.append( ':' ).append( project.getVersion() );\n            }\n\n            logger.debug( buffer.toString() );\n            indent += \"   \";\n            return true;\n        }\n","realPath":"maven-core/src/main/java/org/apache/maven/project/DefaultProjectDependenciesResolver.java","repoName":"maven","snippetEndLine":0,"snippetStartLine":0,"startLine":244,"status":"M"}],"commitId":"da03d6b03192399237750c15f96fa021977dd83b","commitMessage":"@@@[MNG-6183] Dependency management debug message corrections.\n","date":"2017-03-15 02:20:47","modifiedFileCount":"1","status":"M","submitter":"Christian Schulte"},{"authorTime":"2017-05-10 04:15:21","codes":[{"authorDate":"2014-05-25 06:00:26","commitOrder":8,"curCode":"        public boolean visitEnter( DependencyNode node )\n        {\n            StringBuilder buffer = new StringBuilder( 128 );\n            buffer.append( indent );\n            org.eclipse.aether.graph.Dependency dep = node.getDependency();\n            if ( dep != null )\n            {\n                Artifact art = dep.getArtifact();\n\n                buffer.append( art );\n                buffer.append( ':' ).append( dep.getScope() );\n            }\n\n            logger.debug( buffer.toString() );\n            indent += \"   \";\n            return true;\n        }\n","date":"2014-05-25 06:00:26","endLine":236,"groupId":"3092","id":15,"instanceNumber":1,"isCurCommit":0,"methodName":"visitEnter","params":"(DependencyNodenode)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-maven-10-0.7/blobInfo/CC_OUT/blobs/a1/b735e5d9e5c5b845ee984cd78640df1e49f0f2.src","preCode":"        public boolean visitEnter( DependencyNode node )\n        {\n            StringBuilder buffer = new StringBuilder( 128 );\n            buffer.append( indent );\n            org.eclipse.aether.graph.Dependency dep = node.getDependency();\n            if ( dep != null )\n            {\n                Artifact art = dep.getArtifact();\n\n                buffer.append( art );\n                buffer.append( ':' ).append( dep.getScope() );\n            }\n\n            logger.debug( buffer.toString() );\n            indent += \"   \";\n            return true;\n        }\n","realPath":"maven-core/src/main/java/org/apache/maven/plugin/internal/DefaultPluginDependenciesResolver.java","repoName":"maven","snippetEndLine":0,"snippetStartLine":0,"startLine":220,"status":"N"},{"authorDate":"2017-05-10 04:15:21","commitOrder":8,"curCode":"        public boolean visitEnter( DependencyNode node )\n        {\n            StringBuilder buffer = new StringBuilder( 128 );\n            buffer.append( indent );\n            org.eclipse.aether.graph.Dependency dep = node.getDependency();\n            if ( dep != null )\n            {\n                org.eclipse.aether.artifact.Artifact art = dep.getArtifact();\n\n                buffer.append( art );\n                buffer.append( ':' ).append( dep.getScope() );\n\n                \r\n                \r\n                \r\n                if ( ( node.getManagedBits() & DependencyNode.MANAGED_SCOPE ) == DependencyNode.MANAGED_SCOPE )\n                {\n                    final String premanagedScope = DependencyManagerUtils.getPremanagedScope( node );\n                    buffer.append( \" (scope managed from \" );\n                    buffer.append( StringUtils.defaultString( premanagedScope, \"default\" ) );\n                    buffer.append( ')' );\n                }\n\n                if ( ( node.getManagedBits() & DependencyNode.MANAGED_VERSION ) == DependencyNode.MANAGED_VERSION )\n                {\n                    final String premanagedVersion = DependencyManagerUtils.getPremanagedVersion( node );\n                    buffer.append( \" (version managed from \" );\n                    buffer.append( StringUtils.defaultString( premanagedVersion, \"default\" ) );\n                    buffer.append( ')' );\n                }\n\n                if ( ( node.getManagedBits() & DependencyNode.MANAGED_OPTIONAL ) == DependencyNode.MANAGED_OPTIONAL )\n                {\n                    final Boolean premanagedOptional = DependencyManagerUtils.getPremanagedOptional( node );\n                    buffer.append( \" (optionality managed from \" );\n                    buffer.append( StringUtils.defaultString( premanagedOptional, \"default\" ) );\n                    buffer.append( ')' );\n                }\n\n                if ( ( node.getManagedBits() & DependencyNode.MANAGED_EXCLUSIONS )\n                        == DependencyNode.MANAGED_EXCLUSIONS )\n                {\n                    \r\n                    \r\n                    buffer.append( \" (exclusions managed)\" );\n                }\n\n                if ( ( node.getManagedBits() & DependencyNode.MANAGED_PROPERTIES )\n                        == DependencyNode.MANAGED_PROPERTIES )\n                {\n                    \r\n                    \r\n                    buffer.append( \" (properties managed)\" );\n                }\n\n                if ( dep.isOptional() )\n                {\n                    buffer.append( \" (optional)\" );\n                }\n            }\n            else\n            {\n                buffer.append( project.getGroupId() );\n                buffer.append( ':' ).append( project.getArtifactId() );\n                buffer.append( ':' ).append( project.getPackaging() );\n                buffer.append( ':' ).append( project.getVersion() );\n            }\n\n            logger.debug( buffer.toString() );\n            indent += \"   \";\n            return true;\n        }\n","date":"2017-05-10 04:15:21","endLine":315,"groupId":"1106","id":16,"instanceNumber":2,"isCurCommit":0,"methodName":"visitEnter","params":"(DependencyNodenode)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-maven-10-0.7/blobInfo/CC_OUT/blobs/4e/26de27d49c47faaac1665bcbbaa276117d3a85.src","preCode":"        public boolean visitEnter( DependencyNode node )\n        {\n            StringBuilder buffer = new StringBuilder( 128 );\n            buffer.append( indent );\n            org.eclipse.aether.graph.Dependency dep = node.getDependency();\n            if ( dep != null )\n            {\n                org.eclipse.aether.artifact.Artifact art = dep.getArtifact();\n\n                buffer.append( art );\n                buffer.append( ':' ).append( dep.getScope() );\n\n                \r\n                \r\n                \r\n                if ( ( node.getManagedBits() & DependencyNode.MANAGED_SCOPE ) == DependencyNode.MANAGED_SCOPE )\n                {\n                    final String premanagedScope = DependencyManagerUtils.getPremanagedScope( node );\n                    buffer.append( \" (scope managed from \" );\n                    buffer.append( StringUtils.defaultString( premanagedScope, \"default\" ) );\n                    buffer.append( ')' );\n                }\n\n                if ( ( node.getManagedBits() & DependencyNode.MANAGED_VERSION ) == DependencyNode.MANAGED_VERSION )\n                {\n                    final String premanagedVersion = DependencyManagerUtils.getPremanagedVersion( node );\n                    buffer.append( \" (version managed from \" );\n                    buffer.append( StringUtils.defaultString( premanagedVersion, \"default\" ) );\n                    buffer.append( ')' );\n                }\n\n                if ( ( node.getManagedBits() & DependencyNode.MANAGED_OPTIONAL ) == DependencyNode.MANAGED_OPTIONAL )\n                {\n                    final Boolean premanagedOptional = DependencyManagerUtils.getPremanagedOptional( node );\n                    buffer.append( \" (optionality managed from \" );\n                    buffer.append( StringUtils.defaultString( premanagedOptional, \"default\" ) );\n                    buffer.append( ')' );\n                }\n\n                if ( ( node.getManagedBits() & DependencyNode.MANAGED_EXCLUSIONS )\n                        == DependencyNode.MANAGED_EXCLUSIONS )\n                {\n                    \r\n                    \r\n                    buffer.append( \" (exclusions managed)\" );\n                }\n\n                if ( ( node.getManagedBits() & DependencyNode.MANAGED_PROPERTIES )\n                        == DependencyNode.MANAGED_PROPERTIES )\n                {\n                    \r\n                    \r\n                    buffer.append( \" (properties managed)\" );\n                }\n            }\n            else\n            {\n                buffer.append( project.getGroupId() );\n                buffer.append( ':' ).append( project.getArtifactId() );\n                buffer.append( ':' ).append( project.getPackaging() );\n                buffer.append( ':' ).append( project.getVersion() );\n            }\n\n            logger.debug( buffer.toString() );\n            indent += \"   \";\n            return true;\n        }\n","realPath":"maven-core/src/main/java/org/apache/maven/project/DefaultProjectDependenciesResolver.java","repoName":"maven","snippetEndLine":0,"snippetStartLine":0,"startLine":244,"status":"M"}],"commitId":"fd988e78e95a53c3a39ec944869ba62b0c7fc0f0","commitMessage":"@@@[MNG-6228] Optionality not displayed in dependency tree when run in debug mode\n\nLog message in DefaultProjectDependenciesResolver has been extended with\n\"(optional)\" if dependency is marked as optional (direct or transitive).\n","date":"2017-05-10 04:15:21","modifiedFileCount":"1","status":"M","submitter":"Michael Osipov"},{"authorTime":"2017-06-22 08:31:30","codes":[{"authorDate":"2017-06-22 08:31:30","commitOrder":9,"curCode":"        public boolean visitEnter( DependencyNode node )\n        {\n            StringBuilder buffer = new StringBuilder( 128 );\n            buffer.append( indent );\n            org.eclipse.aether.graph.Dependency dep = node.getDependency();\n            if ( dep != null )\n            {\n                org.eclipse.aether.artifact.Artifact art = dep.getArtifact();\n\n                buffer.append( art );\n                if ( StringUtils.isNotEmpty( dep.getScope() ) )\n                {\n                    buffer.append( ':' ).append( dep.getScope() );\n                }\n\n                if ( dep.isOptional() )\n                {\n                    buffer.append( \" (optional)\" );\n                }\n\n                \r\n                \r\n                \r\n                if ( ( node.getManagedBits() & DependencyNode.MANAGED_SCOPE ) == DependencyNode.MANAGED_SCOPE )\n                {\n                    final String premanagedScope = DependencyManagerUtils.getPremanagedScope( node );\n                    buffer.append( \" (scope managed from \" );\n                    buffer.append( StringUtils.defaultString( premanagedScope, \"default\" ) );\n                    buffer.append( ')' );\n                }\n\n                if ( ( node.getManagedBits() & DependencyNode.MANAGED_VERSION ) == DependencyNode.MANAGED_VERSION )\n                {\n                    final String premanagedVersion = DependencyManagerUtils.getPremanagedVersion( node );\n                    buffer.append( \" (version managed from \" );\n                    buffer.append( StringUtils.defaultString( premanagedVersion, \"default\" ) );\n                    buffer.append( ')' );\n                }\n\n                if ( ( node.getManagedBits() & DependencyNode.MANAGED_OPTIONAL ) == DependencyNode.MANAGED_OPTIONAL )\n                {\n                    final Boolean premanagedOptional = DependencyManagerUtils.getPremanagedOptional( node );\n                    buffer.append( \" (optionality managed from \" );\n                    buffer.append( StringUtils.defaultString( premanagedOptional, \"default\" ) );\n                    buffer.append( ')' );\n                }\n\n                if ( ( node.getManagedBits() & DependencyNode.MANAGED_EXCLUSIONS )\n                         == DependencyNode.MANAGED_EXCLUSIONS )\n                {\n                    final Collection<org.eclipse.aether.graph.Exclusion> premanagedExclusions =\n                        DependencyManagerUtils.getPremanagedExclusions( node );\n\n                    buffer.append( \" (exclusions managed from \" );\n                    buffer.append( StringUtils.defaultString( premanagedExclusions, \"default\" ) );\n                    buffer.append( ')' );\n                }\n\n                if ( ( node.getManagedBits() & DependencyNode.MANAGED_PROPERTIES )\n                         == DependencyNode.MANAGED_PROPERTIES )\n                {\n                    final Map<String, String> premanagedProperties =\n                        DependencyManagerUtils.getPremanagedProperties( node );\n\n                    buffer.append( \" (properties managed from \" );\n                    buffer.append( StringUtils.defaultString( premanagedProperties, \"default\" ) );\n                    buffer.append( ')' );\n                }\n            }\n\n            logger.debug( buffer.toString() );\n            indent += \"   \";\n            return true;\n        }\n","date":"2019-06-16 02:12:36","endLine":307,"groupId":"1861","id":17,"instanceNumber":1,"isCurCommit":0,"methodName":"visitEnter","params":"(DependencyNodenode)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-maven-10-0.7/blobInfo/CC_OUT/blobs/80/8c09d9ad7bd979de22041574ef2469bc1b949a.src","preCode":"        public boolean visitEnter( DependencyNode node )\n        {\n            StringBuilder buffer = new StringBuilder( 128 );\n            buffer.append( indent );\n            org.eclipse.aether.graph.Dependency dep = node.getDependency();\n            if ( dep != null )\n            {\n                Artifact art = dep.getArtifact();\n\n                buffer.append( art );\n                buffer.append( ':' ).append( dep.getScope() );\n            }\n\n            logger.debug( buffer.toString() );\n            indent += \"   \";\n            return true;\n        }\n","realPath":"maven-core/src/main/java/org/apache/maven/plugin/internal/DefaultPluginDependenciesResolver.java","repoName":"maven","snippetEndLine":0,"snippetStartLine":0,"startLine":234,"status":"M"},{"authorDate":"2017-06-22 08:31:30","commitOrder":9,"curCode":"        public boolean visitEnter( DependencyNode node )\n        {\n            StringBuilder buffer = new StringBuilder( 128 );\n            buffer.append( indent );\n            org.eclipse.aether.graph.Dependency dep = node.getDependency();\n            if ( dep != null )\n            {\n                org.eclipse.aether.artifact.Artifact art = dep.getArtifact();\n\n                buffer.append( art );\n                if ( StringUtils.isNotEmpty( dep.getScope() ) )\n                {\n                    buffer.append( ':' ).append( dep.getScope() );\n                }\n\n                if ( dep.isOptional() )\n                {\n                    buffer.append( \" (optional)\" );\n                }\n\n                \r\n                \r\n                \r\n                if ( ( node.getManagedBits() & DependencyNode.MANAGED_SCOPE ) == DependencyNode.MANAGED_SCOPE )\n                {\n                    final String premanagedScope = DependencyManagerUtils.getPremanagedScope( node );\n                    buffer.append( \" (scope managed from \" );\n                    buffer.append( StringUtils.defaultString( premanagedScope, \"default\" ) );\n                    buffer.append( ')' );\n                }\n\n                if ( ( node.getManagedBits() & DependencyNode.MANAGED_VERSION ) == DependencyNode.MANAGED_VERSION )\n                {\n                    final String premanagedVersion = DependencyManagerUtils.getPremanagedVersion( node );\n                    buffer.append( \" (version managed from \" );\n                    buffer.append( StringUtils.defaultString( premanagedVersion, \"default\" ) );\n                    buffer.append( ')' );\n                }\n\n                if ( ( node.getManagedBits() & DependencyNode.MANAGED_OPTIONAL ) == DependencyNode.MANAGED_OPTIONAL )\n                {\n                    final Boolean premanagedOptional = DependencyManagerUtils.getPremanagedOptional( node );\n                    buffer.append( \" (optionality managed from \" );\n                    buffer.append( StringUtils.defaultString( premanagedOptional, \"default\" ) );\n                    buffer.append( ')' );\n                }\n\n                if ( ( node.getManagedBits() & DependencyNode.MANAGED_EXCLUSIONS )\n                         == DependencyNode.MANAGED_EXCLUSIONS )\n                {\n                    final Collection<org.eclipse.aether.graph.Exclusion> premanagedExclusions =\n                        DependencyManagerUtils.getPremanagedExclusions( node );\n\n                    buffer.append( \" (exclusions managed from \" );\n                    buffer.append( StringUtils.defaultString( premanagedExclusions, \"default\" ) );\n                    buffer.append( ')' );\n                }\n\n                if ( ( node.getManagedBits() & DependencyNode.MANAGED_PROPERTIES )\n                         == DependencyNode.MANAGED_PROPERTIES )\n                {\n                    final Map<String, String> premanagedProperties =\n                        DependencyManagerUtils.getPremanagedProperties( node );\n\n                    buffer.append( \" (properties managed from \" );\n                    buffer.append( StringUtils.defaultString( premanagedProperties, \"default\" ) );\n                    buffer.append( ')' );\n                }\n            }\n            else\n            {\n                buffer.append( project.getGroupId() );\n                buffer.append( ':' ).append( project.getArtifactId() );\n                buffer.append( ':' ).append( project.getPackaging() );\n                buffer.append( ':' ).append( project.getVersion() );\n            }\n\n            logger.debug( buffer.toString() );\n            indent += \"   \";\n            return true;\n        }\n","date":"2019-06-16 02:12:36","endLine":325,"groupId":"1861","id":18,"instanceNumber":2,"isCurCommit":0,"methodName":"visitEnter","params":"(DependencyNodenode)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-maven-10-0.7/blobInfo/CC_OUT/blobs/04/09fb885bde7c834a157e53409e763bc682326b.src","preCode":"        public boolean visitEnter( DependencyNode node )\n        {\n            StringBuilder buffer = new StringBuilder( 128 );\n            buffer.append( indent );\n            org.eclipse.aether.graph.Dependency dep = node.getDependency();\n            if ( dep != null )\n            {\n                org.eclipse.aether.artifact.Artifact art = dep.getArtifact();\n\n                buffer.append( art );\n                buffer.append( ':' ).append( dep.getScope() );\n\n                \r\n                \r\n                \r\n                if ( ( node.getManagedBits() & DependencyNode.MANAGED_SCOPE ) == DependencyNode.MANAGED_SCOPE )\n                {\n                    final String premanagedScope = DependencyManagerUtils.getPremanagedScope( node );\n                    buffer.append( \" (scope managed from \" );\n                    buffer.append( StringUtils.defaultString( premanagedScope, \"default\" ) );\n                    buffer.append( ')' );\n                }\n\n                if ( ( node.getManagedBits() & DependencyNode.MANAGED_VERSION ) == DependencyNode.MANAGED_VERSION )\n                {\n                    final String premanagedVersion = DependencyManagerUtils.getPremanagedVersion( node );\n                    buffer.append( \" (version managed from \" );\n                    buffer.append( StringUtils.defaultString( premanagedVersion, \"default\" ) );\n                    buffer.append( ')' );\n                }\n\n                if ( ( node.getManagedBits() & DependencyNode.MANAGED_OPTIONAL ) == DependencyNode.MANAGED_OPTIONAL )\n                {\n                    final Boolean premanagedOptional = DependencyManagerUtils.getPremanagedOptional( node );\n                    buffer.append( \" (optionality managed from \" );\n                    buffer.append( StringUtils.defaultString( premanagedOptional, \"default\" ) );\n                    buffer.append( ')' );\n                }\n\n                if ( ( node.getManagedBits() & DependencyNode.MANAGED_EXCLUSIONS )\n                        == DependencyNode.MANAGED_EXCLUSIONS )\n                {\n                    \r\n                    \r\n                    buffer.append( \" (exclusions managed)\" );\n                }\n\n                if ( ( node.getManagedBits() & DependencyNode.MANAGED_PROPERTIES )\n                        == DependencyNode.MANAGED_PROPERTIES )\n                {\n                    \r\n                    \r\n                    buffer.append( \" (properties managed)\" );\n                }\n\n                if ( dep.isOptional() )\n                {\n                    buffer.append( \" (optional)\" );\n                }\n            }\n            else\n            {\n                buffer.append( project.getGroupId() );\n                buffer.append( ':' ).append( project.getArtifactId() );\n                buffer.append( ':' ).append( project.getPackaging() );\n                buffer.append( ':' ).append( project.getVersion() );\n            }\n\n            logger.debug( buffer.toString() );\n            indent += \"   \";\n            return true;\n        }\n","realPath":"maven-core/src/main/java/org/apache/maven/project/DefaultProjectDependenciesResolver.java","repoName":"maven","snippetEndLine":0,"snippetStartLine":0,"startLine":245,"status":"M"}],"commitId":"c2f13f7e87acc95e7df4b2205303e2668c4a5445","commitMessage":"@@@[MNG-6675] Make Resolver debug log messages for projects and plugins consistent\n\nThis closes #124 and closes #253\n","date":"2019-06-16 02:12:36","modifiedFileCount":"2","status":"M","submitter":"Christian Schulte"},{"authorTime":"2019-12-17 16:30:28","codes":[{"authorDate":"2019-12-17 16:30:28","commitOrder":10,"curCode":"        public boolean visitEnter( DependencyNode node )\n        {\n            StringBuilder buffer = new StringBuilder( 128 );\n            buffer.append( indent );\n            org.eclipse.aether.graph.Dependency dep = node.getDependency();\n            if ( dep != null )\n            {\n                org.eclipse.aether.artifact.Artifact art = dep.getArtifact();\n\n                buffer.append( art );\n                if ( StringUtils.isNotEmpty( dep.getScope() ) )\n                {\n                    buffer.append( ':' ).append( dep.getScope() );\n                }\n\n                if ( dep.isOptional() )\n                {\n                    buffer.append( \" (optional)\" );\n                }\n\n                \r\n                \r\n                \r\n                if ( ( node.getManagedBits() & DependencyNode.MANAGED_SCOPE ) == DependencyNode.MANAGED_SCOPE )\n                {\n                    final String premanagedScope = DependencyManagerUtils.getPremanagedScope( node );\n                    buffer.append( \" (scope managed from \" );\n                    buffer.append( Objects.toString( premanagedScope, \"default\" ) );\n                    buffer.append( ')' );\n                }\n\n                if ( ( node.getManagedBits() & DependencyNode.MANAGED_VERSION ) == DependencyNode.MANAGED_VERSION )\n                {\n                    final String premanagedVersion = DependencyManagerUtils.getPremanagedVersion( node );\n                    buffer.append( \" (version managed from \" );\n                    buffer.append( Objects.toString( premanagedVersion, \"default\" ) );\n                    buffer.append( ')' );\n                }\n\n                if ( ( node.getManagedBits() & DependencyNode.MANAGED_OPTIONAL ) == DependencyNode.MANAGED_OPTIONAL )\n                {\n                    final Boolean premanagedOptional = DependencyManagerUtils.getPremanagedOptional( node );\n                    buffer.append( \" (optionality managed from \" );\n                    buffer.append( Objects.toString( premanagedOptional, \"default\" ) );\n                    buffer.append( ')' );\n                }\n\n                if ( ( node.getManagedBits() & DependencyNode.MANAGED_EXCLUSIONS )\n                         == DependencyNode.MANAGED_EXCLUSIONS )\n                {\n                    final Collection<org.eclipse.aether.graph.Exclusion> premanagedExclusions =\n                        DependencyManagerUtils.getPremanagedExclusions( node );\n\n                    buffer.append( \" (exclusions managed from \" );\n                    buffer.append( Objects.toString( premanagedExclusions, \"default\" ) );\n                    buffer.append( ')' );\n                }\n\n                if ( ( node.getManagedBits() & DependencyNode.MANAGED_PROPERTIES )\n                         == DependencyNode.MANAGED_PROPERTIES )\n                {\n                    final Map<String, String> premanagedProperties =\n                        DependencyManagerUtils.getPremanagedProperties( node );\n\n                    buffer.append( \" (properties managed from \" );\n                    buffer.append( Objects.toString( premanagedProperties, \"default\" ) );\n                    buffer.append( ')' );\n                }\n            }\n\n            logger.debug( buffer.toString() );\n            indent += \"   \";\n            return true;\n        }\n","date":"2019-12-22 19:57:34","endLine":308,"groupId":"10670","id":19,"instanceNumber":1,"isCurCommit":0,"methodName":"visitEnter","params":"(DependencyNodenode)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-maven-10-0.7/blobInfo/CC_OUT/blobs/8d/16c6136671f1501c3ab93de10e9b7b1161b6fa.src","preCode":"        public boolean visitEnter( DependencyNode node )\n        {\n            StringBuilder buffer = new StringBuilder( 128 );\n            buffer.append( indent );\n            org.eclipse.aether.graph.Dependency dep = node.getDependency();\n            if ( dep != null )\n            {\n                org.eclipse.aether.artifact.Artifact art = dep.getArtifact();\n\n                buffer.append( art );\n                if ( StringUtils.isNotEmpty( dep.getScope() ) )\n                {\n                    buffer.append( ':' ).append( dep.getScope() );\n                }\n\n                if ( dep.isOptional() )\n                {\n                    buffer.append( \" (optional)\" );\n                }\n\n                \r\n                \r\n                \r\n                if ( ( node.getManagedBits() & DependencyNode.MANAGED_SCOPE ) == DependencyNode.MANAGED_SCOPE )\n                {\n                    final String premanagedScope = DependencyManagerUtils.getPremanagedScope( node );\n                    buffer.append( \" (scope managed from \" );\n                    buffer.append( StringUtils.defaultString( premanagedScope, \"default\" ) );\n                    buffer.append( ')' );\n                }\n\n                if ( ( node.getManagedBits() & DependencyNode.MANAGED_VERSION ) == DependencyNode.MANAGED_VERSION )\n                {\n                    final String premanagedVersion = DependencyManagerUtils.getPremanagedVersion( node );\n                    buffer.append( \" (version managed from \" );\n                    buffer.append( StringUtils.defaultString( premanagedVersion, \"default\" ) );\n                    buffer.append( ')' );\n                }\n\n                if ( ( node.getManagedBits() & DependencyNode.MANAGED_OPTIONAL ) == DependencyNode.MANAGED_OPTIONAL )\n                {\n                    final Boolean premanagedOptional = DependencyManagerUtils.getPremanagedOptional( node );\n                    buffer.append( \" (optionality managed from \" );\n                    buffer.append( StringUtils.defaultString( premanagedOptional, \"default\" ) );\n                    buffer.append( ')' );\n                }\n\n                if ( ( node.getManagedBits() & DependencyNode.MANAGED_EXCLUSIONS )\n                         == DependencyNode.MANAGED_EXCLUSIONS )\n                {\n                    final Collection<org.eclipse.aether.graph.Exclusion> premanagedExclusions =\n                        DependencyManagerUtils.getPremanagedExclusions( node );\n\n                    buffer.append( \" (exclusions managed from \" );\n                    buffer.append( StringUtils.defaultString( premanagedExclusions, \"default\" ) );\n                    buffer.append( ')' );\n                }\n\n                if ( ( node.getManagedBits() & DependencyNode.MANAGED_PROPERTIES )\n                         == DependencyNode.MANAGED_PROPERTIES )\n                {\n                    final Map<String, String> premanagedProperties =\n                        DependencyManagerUtils.getPremanagedProperties( node );\n\n                    buffer.append( \" (properties managed from \" );\n                    buffer.append( StringUtils.defaultString( premanagedProperties, \"default\" ) );\n                    buffer.append( ')' );\n                }\n            }\n\n            logger.debug( buffer.toString() );\n            indent += \"   \";\n            return true;\n        }\n","realPath":"maven-core/src/main/java/org/apache/maven/plugin/internal/DefaultPluginDependenciesResolver.java","repoName":"maven","snippetEndLine":0,"snippetStartLine":0,"startLine":235,"status":"M"},{"authorDate":"2019-12-17 16:30:28","commitOrder":10,"curCode":"        public boolean visitEnter( DependencyNode node )\n        {\n            StringBuilder buffer = new StringBuilder( 128 );\n            buffer.append( indent );\n            org.eclipse.aether.graph.Dependency dep = node.getDependency();\n            if ( dep != null )\n            {\n                org.eclipse.aether.artifact.Artifact art = dep.getArtifact();\n\n                buffer.append( art );\n                if ( StringUtils.isNotEmpty( dep.getScope() ) )\n                {\n                    buffer.append( ':' ).append( dep.getScope() );\n                }\n\n                if ( dep.isOptional() )\n                {\n                    buffer.append( \" (optional)\" );\n                }\n\n                \r\n                \r\n                \r\n                if ( ( node.getManagedBits() & DependencyNode.MANAGED_SCOPE ) == DependencyNode.MANAGED_SCOPE )\n                {\n                    final String premanagedScope = DependencyManagerUtils.getPremanagedScope( node );\n                    buffer.append( \" (scope managed from \" );\n                    buffer.append( Objects.toString( premanagedScope, \"default\" ) );\n                    buffer.append( ')' );\n                }\n\n                if ( ( node.getManagedBits() & DependencyNode.MANAGED_VERSION ) == DependencyNode.MANAGED_VERSION )\n                {\n                    final String premanagedVersion = DependencyManagerUtils.getPremanagedVersion( node );\n                    buffer.append( \" (version managed from \" );\n                    buffer.append( Objects.toString( premanagedVersion, \"default\" ) );\n                    buffer.append( ')' );\n                }\n\n                if ( ( node.getManagedBits() & DependencyNode.MANAGED_OPTIONAL ) == DependencyNode.MANAGED_OPTIONAL )\n                {\n                    final Boolean premanagedOptional = DependencyManagerUtils.getPremanagedOptional( node );\n                    buffer.append( \" (optionality managed from \" );\n                    buffer.append( Objects.toString( premanagedOptional, \"default\" ) );\n                    buffer.append( ')' );\n                }\n\n                if ( ( node.getManagedBits() & DependencyNode.MANAGED_EXCLUSIONS )\n                         == DependencyNode.MANAGED_EXCLUSIONS )\n                {\n                    final Collection<org.eclipse.aether.graph.Exclusion> premanagedExclusions =\n                        DependencyManagerUtils.getPremanagedExclusions( node );\n\n                    buffer.append( \" (exclusions managed from \" );\n                    buffer.append( Objects.toString( premanagedExclusions, \"default\" ) );\n                    buffer.append( ')' );\n                }\n\n                if ( ( node.getManagedBits() & DependencyNode.MANAGED_PROPERTIES )\n                         == DependencyNode.MANAGED_PROPERTIES )\n                {\n                    final Map<String, String> premanagedProperties =\n                        DependencyManagerUtils.getPremanagedProperties( node );\n\n                    buffer.append( \" (properties managed from \" );\n                    buffer.append( Objects.toString( premanagedProperties, \"default\" ) );\n                    buffer.append( ')' );\n                }\n            }\n            else\n            {\n                buffer.append( project.getGroupId() );\n                buffer.append( ':' ).append( project.getArtifactId() );\n                buffer.append( ':' ).append( project.getPackaging() );\n                buffer.append( ':' ).append( project.getVersion() );\n            }\n\n            logger.debug( buffer.toString() );\n            indent += \"   \";\n            return true;\n        }\n","date":"2019-12-22 19:57:34","endLine":326,"groupId":"10670","id":20,"instanceNumber":2,"isCurCommit":0,"methodName":"visitEnter","params":"(DependencyNodenode)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-maven-10-0.7/blobInfo/CC_OUT/blobs/75/00e43d2a38d14577f629736213b877128b4708.src","preCode":"        public boolean visitEnter( DependencyNode node )\n        {\n            StringBuilder buffer = new StringBuilder( 128 );\n            buffer.append( indent );\n            org.eclipse.aether.graph.Dependency dep = node.getDependency();\n            if ( dep != null )\n            {\n                org.eclipse.aether.artifact.Artifact art = dep.getArtifact();\n\n                buffer.append( art );\n                if ( StringUtils.isNotEmpty( dep.getScope() ) )\n                {\n                    buffer.append( ':' ).append( dep.getScope() );\n                }\n\n                if ( dep.isOptional() )\n                {\n                    buffer.append( \" (optional)\" );\n                }\n\n                \r\n                \r\n                \r\n                if ( ( node.getManagedBits() & DependencyNode.MANAGED_SCOPE ) == DependencyNode.MANAGED_SCOPE )\n                {\n                    final String premanagedScope = DependencyManagerUtils.getPremanagedScope( node );\n                    buffer.append( \" (scope managed from \" );\n                    buffer.append( StringUtils.defaultString( premanagedScope, \"default\" ) );\n                    buffer.append( ')' );\n                }\n\n                if ( ( node.getManagedBits() & DependencyNode.MANAGED_VERSION ) == DependencyNode.MANAGED_VERSION )\n                {\n                    final String premanagedVersion = DependencyManagerUtils.getPremanagedVersion( node );\n                    buffer.append( \" (version managed from \" );\n                    buffer.append( StringUtils.defaultString( premanagedVersion, \"default\" ) );\n                    buffer.append( ')' );\n                }\n\n                if ( ( node.getManagedBits() & DependencyNode.MANAGED_OPTIONAL ) == DependencyNode.MANAGED_OPTIONAL )\n                {\n                    final Boolean premanagedOptional = DependencyManagerUtils.getPremanagedOptional( node );\n                    buffer.append( \" (optionality managed from \" );\n                    buffer.append( StringUtils.defaultString( premanagedOptional, \"default\" ) );\n                    buffer.append( ')' );\n                }\n\n                if ( ( node.getManagedBits() & DependencyNode.MANAGED_EXCLUSIONS )\n                         == DependencyNode.MANAGED_EXCLUSIONS )\n                {\n                    final Collection<org.eclipse.aether.graph.Exclusion> premanagedExclusions =\n                        DependencyManagerUtils.getPremanagedExclusions( node );\n\n                    buffer.append( \" (exclusions managed from \" );\n                    buffer.append( StringUtils.defaultString( premanagedExclusions, \"default\" ) );\n                    buffer.append( ')' );\n                }\n\n                if ( ( node.getManagedBits() & DependencyNode.MANAGED_PROPERTIES )\n                         == DependencyNode.MANAGED_PROPERTIES )\n                {\n                    final Map<String, String> premanagedProperties =\n                        DependencyManagerUtils.getPremanagedProperties( node );\n\n                    buffer.append( \" (properties managed from \" );\n                    buffer.append( StringUtils.defaultString( premanagedProperties, \"default\" ) );\n                    buffer.append( ')' );\n                }\n            }\n            else\n            {\n                buffer.append( project.getGroupId() );\n                buffer.append( ':' ).append( project.getArtifactId() );\n                buffer.append( ':' ).append( project.getPackaging() );\n                buffer.append( ':' ).append( project.getVersion() );\n            }\n\n            logger.debug( buffer.toString() );\n            indent += \"   \";\n            return true;\n        }\n","realPath":"maven-core/src/main/java/org/apache/maven/project/DefaultProjectDependenciesResolver.java","repoName":"maven","snippetEndLine":0,"snippetStartLine":0,"startLine":246,"status":"M"}],"commitId":"1ad780143cac7e0bd8d7578fbdac7de3dc596e00","commitMessage":"@@@[MNG-6827] Replace deprecated StringUtils#defaultString() from Plexus Utils\n\nThis closes #302\n","date":"2019-12-22 19:57:34","modifiedFileCount":"4","status":"M","submitter":"Artem Krosheninnikov"}]
