[{"authorTime":"2009-10-27 04:16:00","codes":[{"authorDate":"2009-08-04 01:15:11","commitOrder":3,"curCode":"        private void evaluateArray( Object target )\n        {\n            int len = Array.getLength( target );\n            for( int i = 0; i < len; i++ )\n            {\n                Object value = Array.get( target, i );\n                if ( value != null )\n                {\n                    if ( String.class == value.getClass() )\n                    {\n                        String interpolated =\n                            modelInterpolator.interpolateInternal( (String) value, valueSources, postProcessors,\n                                                                   problems );\n                        \n                        if ( !interpolated.equals( value ) )\n                        {\n                            Array.set( target, i, interpolated );\n                        }\n                    }\n                    else\n                    {\n                        interpolationTargets.add( value );\n                    }\n                }\n            }\n        }\n","date":"2009-08-04 01:15:11","endLine":363,"groupId":"4464","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"evaluateArray","params":"(Objecttarget)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-maven-10-0.7/blobInfo/CC_OUT/blobs/a2/656fbf54a9ec00df3241d641d42e381ec57968.src","preCode":"        private void evaluateArray( Object target )\n        {\n            int len = Array.getLength( target );\n            for( int i = 0; i < len; i++ )\n            {\n                Object value = Array.get( target, i );\n                if ( value != null )\n                {\n                    if ( String.class == value.getClass() )\n                    {\n                        String interpolated =\n                            modelInterpolator.interpolateInternal( (String) value, valueSources, postProcessors,\n                                                                   problems );\n                        \n                        if ( !interpolated.equals( value ) )\n                        {\n                            Array.set( target, i, interpolated );\n                        }\n                    }\n                    else\n                    {\n                        interpolationTargets.add( value );\n                    }\n                }\n            }\n        }\n","realPath":"maven-model-builder/src/main/java/org/apache/maven/model/interpolation/StringSearchModelInterpolator.java","repoName":"maven","snippetEndLine":0,"snippetStartLine":0,"startLine":338,"status":"NB"},{"authorDate":"2009-10-27 04:16:00","commitOrder":3,"curCode":"        private void traverseObjectWithParents( Class<?> cls, Object target )\n            throws ModelInterpolationException\n        {\n            if ( cls == null )\n            {\n                return;\n            }\n            \n            \n            if ( cls.isArray() )\n            {\n                evaluateArray( target );\n            }\n            else if ( isQualifiedForInterpolation( cls ) )\n            {\n                Field[] fields = fieldsByClass.get( cls );\n                if ( fields == null )\n                {\n                    fields = cls.getDeclaredFields();\n                    fieldsByClass.put( cls, fields );\n                }\n                \n                for ( int i = 0; i < fields.length; i++ )\n                {\n                    Class<?> type = fields[i].getType();\n                    if ( isQualifiedForInterpolation( fields[i], type ) )\n                    {\n                        boolean isAccessible = fields[i].isAccessible();\n                        fields[i].setAccessible( true );\n                        try\n                        {\n                            try\n                            {\n                                if ( String.class == type )\n                                {\n                                    String value = (String) fields[i].get( target );\n                                    if ( value != null )\n                                    {\n                                        String interpolated = modelInterpolator.interpolateInternal( value, valueSources, postProcessors, debugEnabled );\n                                        \n                                        if ( !interpolated.equals( value ) )\n                                        {\n                                            fields[i].set( target, interpolated );\n                                        }\n                                    }\n                                }\n                                else if ( Collection.class.isAssignableFrom( type ) )\n                                {\n                                    Collection<Object> c = (Collection<Object>) fields[i].get( target );\n                                    if ( c != null && !c.isEmpty() )\n                                    {\n                                        List<Object> originalValues = new ArrayList<Object>( c );\n                                        try\n                                        {\n                                            c.clear();\n                                        }\n                                        catch( UnsupportedOperationException e )\n                                        {\n                                            if ( debugEnabled && logger != null )\n                                            {\n                                                logger.debug( \"Skipping interpolation of field: \" + fields[i] + \" in: \" + cls.getName() + \"; it is an unmodifiable collection.\" );\n                                            }\n                                            continue;\n                                        }\n                                        \n                                        for ( Object value : originalValues )\n                                        {\n                                            if ( value != null )\n                                            {\n                                                if( String.class == value.getClass() )\n                                                {\n                                                    String interpolated = modelInterpolator.interpolateInternal( (String) value, valueSources, postProcessors, debugEnabled );\n                                                    \n                                                    if ( !interpolated.equals( value ) )\n                                                    {\n                                                        c.add( interpolated );\n                                                    }\n                                                    else\n                                                    {\n                                                        c.add( value );\n                                                    }\n                                                }\n                                                else\n                                                {\n                                                    c.add( value );\n                                                    if ( value.getClass().isArray() )\n                                                    {\n                                                        evaluateArray( value );\n                                                    }\n                                                    else\n                                                    {\n                                                        interpolationTargets.add( value );\n                                                    }\n                                                }\n                                            }\n                                            else\n                                            {\n                                                \r\n                                                c.add( value );\n                                            }\n                                        }\n                                    }\n                                }\n                                else if ( Map.class.isAssignableFrom( type ) )\n                                {\n                                    Map<Object, Object> m = (Map<Object, Object>) fields[i].get( target );\n                                    if ( m != null && !m.isEmpty() )\n                                    {\n                                        for ( Map.Entry<Object, Object> entry : m.entrySet() )\n                                        {\n                                            Object value = entry.getValue();\n                                            \n                                            if ( value != null )\n                                            {\n                                                if( String.class == value.getClass() )\n                                                {\n                                                    String interpolated = modelInterpolator.interpolateInternal( (String) value, valueSources, postProcessors, debugEnabled );\n                                                    \n                                                    if ( !interpolated.equals( value ) )\n                                                    {\n                                                        try\n                                                        {\n                                                            entry.setValue( interpolated );\n                                                        }\n                                                        catch( UnsupportedOperationException e )\n                                                        {\n                                                            if ( debugEnabled && logger != null )\n                                                            {\n                                                                logger.debug( \"Skipping interpolation of field: \" + fields[i] + \" (key: \" + entry.getKey() + \") in: \" + cls.getName() + \"; it is an unmodifiable collection.\" );\n                                                            }\n                                                            continue;\n                                                        }\n                                                    }\n                                                }\n                                                else\n                                                {\n                                                    if ( value.getClass().isArray() )\n                                                    {\n                                                        evaluateArray( value );\n                                                    }\n                                                    else\n                                                    {\n                                                        interpolationTargets.add( value );\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else\n                                {\n                                    Object value = fields[i].get( target );\n                                    if ( value != null )\n                                    {\n                                        if ( fields[i].getType().isArray() )\n                                        {\n                                            evaluateArray( value );\n                                        }\n                                        else\n                                        {\n                                            interpolationTargets.add( value );\n                                        }\n                                    }\n                                }\n                            }\n                            catch ( IllegalArgumentException e )\n                            {\n                                throw new ModelInterpolationException( \"Failed to interpolate field: \" + fields[i] + \" on class: \" + cls.getName(), e );\n                            }\n                            catch ( IllegalAccessException e )\n                            {\n                                throw new ModelInterpolationException( \"Failed to interpolate field: \" + fields[i] + \" on class: \" + cls.getName(), e );\n                            }\n                        }\n                        finally\n                        {\n                            fields[i].setAccessible( isAccessible );\n                        }\n                    }\n                }\n                \n                traverseObjectWithParents( cls.getSuperclass(), target );\n            }\n        }\n","date":"2009-10-27 04:16:00","endLine":332,"groupId":"2620","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"traverseObjectWithParents","params":"(Class<?>cls@Objecttarget)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-maven-10-0.7/blobInfo/CC_OUT/blobs/59/5fb81f772c5cdfa77561c65bc706222b65fc22.src","preCode":"        private void traverseObjectWithParents( Class<?> cls, Object target )\n            throws ModelInterpolationException\n        {\n            if ( cls == null )\n            {\n                return;\n            }\n            \n            \n            if ( cls.isArray() )\n            {\n                evaluateArray( target );\n            }\n            else if ( isQualifiedForInterpolation( cls ) )\n            {\n                Field[] fields = fieldsByClass.get( cls );\n                if ( fields == null )\n                {\n                    fields = cls.getDeclaredFields();\n                    fieldsByClass.put( cls, fields );\n                }\n                \n                for ( int i = 0; i < fields.length; i++ )\n                {\n                    Class<?> type = fields[i].getType();\n                    if ( isQualifiedForInterpolation( fields[i], type ) )\n                    {\n                        boolean isAccessible = fields[i].isAccessible();\n                        fields[i].setAccessible( true );\n                        try\n                        {\n                            try\n                            {\n                                if ( String.class == type )\n                                {\n                                    String value = (String) fields[i].get( target );\n                                    if ( value != null )\n                                    {\n                                        String interpolated = modelInterpolator.interpolateInternal( value, valueSources, postProcessors, debugEnabled );\n                                        \n                                        if ( !interpolated.equals( value ) )\n                                        {\n                                            fields[i].set( target, interpolated );\n                                        }\n                                    }\n                                }\n                                else if ( Collection.class.isAssignableFrom( type ) )\n                                {\n                                    Collection<Object> c = (Collection<Object>) fields[i].get( target );\n                                    if ( c != null && !c.isEmpty() )\n                                    {\n                                        List<Object> originalValues = new ArrayList<Object>( c );\n                                        try\n                                        {\n                                            c.clear();\n                                        }\n                                        catch( UnsupportedOperationException e )\n                                        {\n                                            if ( debugEnabled && logger != null )\n                                            {\n                                                logger.debug( \"Skipping interpolation of field: \" + fields[i] + \" in: \" + cls.getName() + \"; it is an unmodifiable collection.\" );\n                                            }\n                                            continue;\n                                        }\n                                        \n                                        for ( Object value : originalValues )\n                                        {\n                                            if ( value != null )\n                                            {\n                                                if( String.class == value.getClass() )\n                                                {\n                                                    String interpolated = modelInterpolator.interpolateInternal( (String) value, valueSources, postProcessors, debugEnabled );\n                                                    \n                                                    if ( !interpolated.equals( value ) )\n                                                    {\n                                                        c.add( interpolated );\n                                                    }\n                                                    else\n                                                    {\n                                                        c.add( value );\n                                                    }\n                                                }\n                                                else\n                                                {\n                                                    c.add( value );\n                                                    if ( value.getClass().isArray() )\n                                                    {\n                                                        evaluateArray( value );\n                                                    }\n                                                    else\n                                                    {\n                                                        interpolationTargets.add( value );\n                                                    }\n                                                }\n                                            }\n                                            else\n                                            {\n                                                \r\n                                                c.add( value );\n                                            }\n                                        }\n                                    }\n                                }\n                                else if ( Map.class.isAssignableFrom( type ) )\n                                {\n                                    Map<Object, Object> m = (Map<Object, Object>) fields[i].get( target );\n                                    if ( m != null && !m.isEmpty() )\n                                    {\n                                        for ( Map.Entry<Object, Object> entry : m.entrySet() )\n                                        {\n                                            Object value = entry.getValue();\n                                            \n                                            if ( value != null )\n                                            {\n                                                if( String.class == value.getClass() )\n                                                {\n                                                    String interpolated = modelInterpolator.interpolateInternal( (String) value, valueSources, postProcessors, debugEnabled );\n                                                    \n                                                    if ( !interpolated.equals( value ) )\n                                                    {\n                                                        try\n                                                        {\n                                                            entry.setValue( interpolated );\n                                                        }\n                                                        catch( UnsupportedOperationException e )\n                                                        {\n                                                            if ( debugEnabled && logger != null )\n                                                            {\n                                                                logger.debug( \"Skipping interpolation of field: \" + fields[i] + \" (key: \" + entry.getKey() + \") in: \" + cls.getName() + \"; it is an unmodifiable collection.\" );\n                                                            }\n                                                            continue;\n                                                        }\n                                                    }\n                                                }\n                                                else\n                                                {\n                                                    if ( value.getClass().isArray() )\n                                                    {\n                                                        evaluateArray( value );\n                                                    }\n                                                    else\n                                                    {\n                                                        interpolationTargets.add( value );\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else\n                                {\n                                    Object value = fields[i].get( target );\n                                    if ( value != null )\n                                    {\n                                        if ( fields[i].getType().isArray() )\n                                        {\n                                            evaluateArray( value );\n                                        }\n                                        else\n                                        {\n                                            interpolationTargets.add( value );\n                                        }\n                                    }\n                                }\n                            }\n                            catch ( IllegalArgumentException e )\n                            {\n                                throw new ModelInterpolationException( \"Failed to interpolate field: \" + fields[i] + \" on class: \" + cls.getName(), e );\n                            }\n                            catch ( IllegalAccessException e )\n                            {\n                                throw new ModelInterpolationException( \"Failed to interpolate field: \" + fields[i] + \" on class: \" + cls.getName(), e );\n                            }\n                        }\n                        finally\n                        {\n                            fields[i].setAccessible( isAccessible );\n                        }\n                    }\n                }\n                \n                traverseObjectWithParents( cls.getSuperclass(), target );\n            }\n        }\n","realPath":"maven-compat/src/main/java/org/apache/maven/project/interpolation/StringSearchModelInterpolator.java","repoName":"maven","snippetEndLine":0,"snippetStartLine":0,"startLine":149,"status":"B"}],"commitId":"20f8323b0a993799f77db49c787829449a17b8c0","commitMessage":"@@@[MNG-4221] Push all repository/artifact related code into a legacy module and create a backward compat layer for external consumers\n\no Refactored code to make maven-compat depend on maven-core.  this got ugly regarding some tests which to a high degree depend on a full-blown repository system\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/maven-3/trunk@829934 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2009-10-27 04:16:00","modifiedFileCount":"12","status":"M","submitter":"Benjamin Bentmann"},{"authorTime":"2009-10-27 04:16:00","codes":[{"authorDate":"2012-08-22 22:55:33","commitOrder":4,"curCode":"        private static void evaluateArray( Object target, InterpolateObjectAction ctx )\n        {\n            int len = Array.getLength( target );\n            for ( int i = 0; i < len; i++ )\n            {\n                Object value = Array.get( target, i );\n                if ( value != null )\n                {\n                    if ( String.class == value.getClass() )\n                    {\n                        String interpolated = ctx.interpolate( (String) value );\n\n                        if ( !interpolated.equals( value ) )\n                        {\n                            Array.set( target, i, interpolated );\n                        }\n                    }\n                    else\n                    {\n                        ctx.interpolationTargets.add( value );\n                    }\n                }\n            }\n        }\n","date":"2012-08-22 22:55:33","endLine":216,"groupId":"5264","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"evaluateArray","params":"(Objecttarget@InterpolateObjectActionctx)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-maven-10-0.7/blobInfo/CC_OUT/blobs/28/a5273c3bfb3033de0445315e8ea36d945450df.src","preCode":"        private void evaluateArray( Object target )\n        {\n            int len = Array.getLength( target );\n            for ( int i = 0; i < len; i++ )\n            {\n                Object value = Array.get( target, i );\n                if ( value != null )\n                {\n                    if ( String.class == value.getClass() )\n                    {\n                        String interpolated =\n                            modelInterpolator.interpolateInternal( (String) value, valueSources, postProcessors,\n                                                                   problems );\n\n                        if ( !interpolated.equals( value ) )\n                        {\n                            Array.set( target, i, interpolated );\n                        }\n                    }\n                    else\n                    {\n                        interpolationTargets.add( value );\n                    }\n                }\n            }\n        }\n","realPath":"maven-model-builder/src/main/java/org/apache/maven/model/interpolation/StringSearchModelInterpolator.java","repoName":"maven","snippetEndLine":0,"snippetStartLine":0,"startLine":193,"status":"M"},{"authorDate":"2009-10-27 04:16:00","commitOrder":4,"curCode":"        private void traverseObjectWithParents( Class<?> cls, Object target )\n            throws ModelInterpolationException\n        {\n            if ( cls == null )\n            {\n                return;\n            }\n            \n            \n            if ( cls.isArray() )\n            {\n                evaluateArray( target );\n            }\n            else if ( isQualifiedForInterpolation( cls ) )\n            {\n                Field[] fields = fieldsByClass.get( cls );\n                if ( fields == null )\n                {\n                    fields = cls.getDeclaredFields();\n                    fieldsByClass.put( cls, fields );\n                }\n                \n                for ( int i = 0; i < fields.length; i++ )\n                {\n                    Class<?> type = fields[i].getType();\n                    if ( isQualifiedForInterpolation( fields[i], type ) )\n                    {\n                        boolean isAccessible = fields[i].isAccessible();\n                        fields[i].setAccessible( true );\n                        try\n                        {\n                            try\n                            {\n                                if ( String.class == type )\n                                {\n                                    String value = (String) fields[i].get( target );\n                                    if ( value != null )\n                                    {\n                                        String interpolated = modelInterpolator.interpolateInternal( value, valueSources, postProcessors, debugEnabled );\n                                        \n                                        if ( !interpolated.equals( value ) )\n                                        {\n                                            fields[i].set( target, interpolated );\n                                        }\n                                    }\n                                }\n                                else if ( Collection.class.isAssignableFrom( type ) )\n                                {\n                                    Collection<Object> c = (Collection<Object>) fields[i].get( target );\n                                    if ( c != null && !c.isEmpty() )\n                                    {\n                                        List<Object> originalValues = new ArrayList<Object>( c );\n                                        try\n                                        {\n                                            c.clear();\n                                        }\n                                        catch( UnsupportedOperationException e )\n                                        {\n                                            if ( debugEnabled && logger != null )\n                                            {\n                                                logger.debug( \"Skipping interpolation of field: \" + fields[i] + \" in: \" + cls.getName() + \"; it is an unmodifiable collection.\" );\n                                            }\n                                            continue;\n                                        }\n                                        \n                                        for ( Object value : originalValues )\n                                        {\n                                            if ( value != null )\n                                            {\n                                                if( String.class == value.getClass() )\n                                                {\n                                                    String interpolated = modelInterpolator.interpolateInternal( (String) value, valueSources, postProcessors, debugEnabled );\n                                                    \n                                                    if ( !interpolated.equals( value ) )\n                                                    {\n                                                        c.add( interpolated );\n                                                    }\n                                                    else\n                                                    {\n                                                        c.add( value );\n                                                    }\n                                                }\n                                                else\n                                                {\n                                                    c.add( value );\n                                                    if ( value.getClass().isArray() )\n                                                    {\n                                                        evaluateArray( value );\n                                                    }\n                                                    else\n                                                    {\n                                                        interpolationTargets.add( value );\n                                                    }\n                                                }\n                                            }\n                                            else\n                                            {\n                                                \r\n                                                c.add( value );\n                                            }\n                                        }\n                                    }\n                                }\n                                else if ( Map.class.isAssignableFrom( type ) )\n                                {\n                                    Map<Object, Object> m = (Map<Object, Object>) fields[i].get( target );\n                                    if ( m != null && !m.isEmpty() )\n                                    {\n                                        for ( Map.Entry<Object, Object> entry : m.entrySet() )\n                                        {\n                                            Object value = entry.getValue();\n                                            \n                                            if ( value != null )\n                                            {\n                                                if( String.class == value.getClass() )\n                                                {\n                                                    String interpolated = modelInterpolator.interpolateInternal( (String) value, valueSources, postProcessors, debugEnabled );\n                                                    \n                                                    if ( !interpolated.equals( value ) )\n                                                    {\n                                                        try\n                                                        {\n                                                            entry.setValue( interpolated );\n                                                        }\n                                                        catch( UnsupportedOperationException e )\n                                                        {\n                                                            if ( debugEnabled && logger != null )\n                                                            {\n                                                                logger.debug( \"Skipping interpolation of field: \" + fields[i] + \" (key: \" + entry.getKey() + \") in: \" + cls.getName() + \"; it is an unmodifiable collection.\" );\n                                                            }\n                                                            continue;\n                                                        }\n                                                    }\n                                                }\n                                                else\n                                                {\n                                                    if ( value.getClass().isArray() )\n                                                    {\n                                                        evaluateArray( value );\n                                                    }\n                                                    else\n                                                    {\n                                                        interpolationTargets.add( value );\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else\n                                {\n                                    Object value = fields[i].get( target );\n                                    if ( value != null )\n                                    {\n                                        if ( fields[i].getType().isArray() )\n                                        {\n                                            evaluateArray( value );\n                                        }\n                                        else\n                                        {\n                                            interpolationTargets.add( value );\n                                        }\n                                    }\n                                }\n                            }\n                            catch ( IllegalArgumentException e )\n                            {\n                                throw new ModelInterpolationException( \"Failed to interpolate field: \" + fields[i] + \" on class: \" + cls.getName(), e );\n                            }\n                            catch ( IllegalAccessException e )\n                            {\n                                throw new ModelInterpolationException( \"Failed to interpolate field: \" + fields[i] + \" on class: \" + cls.getName(), e );\n                            }\n                        }\n                        finally\n                        {\n                            fields[i].setAccessible( isAccessible );\n                        }\n                    }\n                }\n                \n                traverseObjectWithParents( cls.getSuperclass(), target );\n            }\n        }\n","date":"2009-10-27 04:16:00","endLine":332,"groupId":"2620","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"traverseObjectWithParents","params":"(Class<?>cls@Objecttarget)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-maven-10-0.7/blobInfo/CC_OUT/blobs/59/5fb81f772c5cdfa77561c65bc706222b65fc22.src","preCode":"        private void traverseObjectWithParents( Class<?> cls, Object target )\n            throws ModelInterpolationException\n        {\n            if ( cls == null )\n            {\n                return;\n            }\n            \n            \n            if ( cls.isArray() )\n            {\n                evaluateArray( target );\n            }\n            else if ( isQualifiedForInterpolation( cls ) )\n            {\n                Field[] fields = fieldsByClass.get( cls );\n                if ( fields == null )\n                {\n                    fields = cls.getDeclaredFields();\n                    fieldsByClass.put( cls, fields );\n                }\n                \n                for ( int i = 0; i < fields.length; i++ )\n                {\n                    Class<?> type = fields[i].getType();\n                    if ( isQualifiedForInterpolation( fields[i], type ) )\n                    {\n                        boolean isAccessible = fields[i].isAccessible();\n                        fields[i].setAccessible( true );\n                        try\n                        {\n                            try\n                            {\n                                if ( String.class == type )\n                                {\n                                    String value = (String) fields[i].get( target );\n                                    if ( value != null )\n                                    {\n                                        String interpolated = modelInterpolator.interpolateInternal( value, valueSources, postProcessors, debugEnabled );\n                                        \n                                        if ( !interpolated.equals( value ) )\n                                        {\n                                            fields[i].set( target, interpolated );\n                                        }\n                                    }\n                                }\n                                else if ( Collection.class.isAssignableFrom( type ) )\n                                {\n                                    Collection<Object> c = (Collection<Object>) fields[i].get( target );\n                                    if ( c != null && !c.isEmpty() )\n                                    {\n                                        List<Object> originalValues = new ArrayList<Object>( c );\n                                        try\n                                        {\n                                            c.clear();\n                                        }\n                                        catch( UnsupportedOperationException e )\n                                        {\n                                            if ( debugEnabled && logger != null )\n                                            {\n                                                logger.debug( \"Skipping interpolation of field: \" + fields[i] + \" in: \" + cls.getName() + \"; it is an unmodifiable collection.\" );\n                                            }\n                                            continue;\n                                        }\n                                        \n                                        for ( Object value : originalValues )\n                                        {\n                                            if ( value != null )\n                                            {\n                                                if( String.class == value.getClass() )\n                                                {\n                                                    String interpolated = modelInterpolator.interpolateInternal( (String) value, valueSources, postProcessors, debugEnabled );\n                                                    \n                                                    if ( !interpolated.equals( value ) )\n                                                    {\n                                                        c.add( interpolated );\n                                                    }\n                                                    else\n                                                    {\n                                                        c.add( value );\n                                                    }\n                                                }\n                                                else\n                                                {\n                                                    c.add( value );\n                                                    if ( value.getClass().isArray() )\n                                                    {\n                                                        evaluateArray( value );\n                                                    }\n                                                    else\n                                                    {\n                                                        interpolationTargets.add( value );\n                                                    }\n                                                }\n                                            }\n                                            else\n                                            {\n                                                \r\n                                                c.add( value );\n                                            }\n                                        }\n                                    }\n                                }\n                                else if ( Map.class.isAssignableFrom( type ) )\n                                {\n                                    Map<Object, Object> m = (Map<Object, Object>) fields[i].get( target );\n                                    if ( m != null && !m.isEmpty() )\n                                    {\n                                        for ( Map.Entry<Object, Object> entry : m.entrySet() )\n                                        {\n                                            Object value = entry.getValue();\n                                            \n                                            if ( value != null )\n                                            {\n                                                if( String.class == value.getClass() )\n                                                {\n                                                    String interpolated = modelInterpolator.interpolateInternal( (String) value, valueSources, postProcessors, debugEnabled );\n                                                    \n                                                    if ( !interpolated.equals( value ) )\n                                                    {\n                                                        try\n                                                        {\n                                                            entry.setValue( interpolated );\n                                                        }\n                                                        catch( UnsupportedOperationException e )\n                                                        {\n                                                            if ( debugEnabled && logger != null )\n                                                            {\n                                                                logger.debug( \"Skipping interpolation of field: \" + fields[i] + \" (key: \" + entry.getKey() + \") in: \" + cls.getName() + \"; it is an unmodifiable collection.\" );\n                                                            }\n                                                            continue;\n                                                        }\n                                                    }\n                                                }\n                                                else\n                                                {\n                                                    if ( value.getClass().isArray() )\n                                                    {\n                                                        evaluateArray( value );\n                                                    }\n                                                    else\n                                                    {\n                                                        interpolationTargets.add( value );\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else\n                                {\n                                    Object value = fields[i].get( target );\n                                    if ( value != null )\n                                    {\n                                        if ( fields[i].getType().isArray() )\n                                        {\n                                            evaluateArray( value );\n                                        }\n                                        else\n                                        {\n                                            interpolationTargets.add( value );\n                                        }\n                                    }\n                                }\n                            }\n                            catch ( IllegalArgumentException e )\n                            {\n                                throw new ModelInterpolationException( \"Failed to interpolate field: \" + fields[i] + \" on class: \" + cls.getName(), e );\n                            }\n                            catch ( IllegalAccessException e )\n                            {\n                                throw new ModelInterpolationException( \"Failed to interpolate field: \" + fields[i] + \" on class: \" + cls.getName(), e );\n                            }\n                        }\n                        finally\n                        {\n                            fields[i].setAccessible( isAccessible );\n                        }\n                    }\n                }\n                \n                traverseObjectWithParents( cls.getSuperclass(), target );\n            }\n        }\n","realPath":"maven-compat/src/main/java/org/apache/maven/project/interpolation/StringSearchModelInterpolator.java","repoName":"maven","snippetEndLine":0,"snippetStartLine":0,"startLine":149,"status":"N"}],"commitId":"100bbd031b2cc30024ae0036735e72455b404a30","commitMessage":"@@@o Optimized the cache around the hotspot in interpolation somewhat\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/maven-3/trunk@1376085 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2012-08-22 22:55:33","modifiedFileCount":"1","status":"M","submitter":"Kristian Rosenvold"},{"authorTime":"2013-06-12 04:09:51","codes":[{"authorDate":"2012-08-22 22:55:33","commitOrder":5,"curCode":"        private static void evaluateArray( Object target, InterpolateObjectAction ctx )\n        {\n            int len = Array.getLength( target );\n            for ( int i = 0; i < len; i++ )\n            {\n                Object value = Array.get( target, i );\n                if ( value != null )\n                {\n                    if ( String.class == value.getClass() )\n                    {\n                        String interpolated = ctx.interpolate( (String) value );\n\n                        if ( !interpolated.equals( value ) )\n                        {\n                            Array.set( target, i, interpolated );\n                        }\n                    }\n                    else\n                    {\n                        ctx.interpolationTargets.add( value );\n                    }\n                }\n            }\n        }\n","date":"2012-08-22 22:55:33","endLine":216,"groupId":"5264","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"evaluateArray","params":"(Objecttarget@InterpolateObjectActionctx)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-maven-10-0.7/blobInfo/CC_OUT/blobs/28/a5273c3bfb3033de0445315e8ea36d945450df.src","preCode":"        private static void evaluateArray( Object target, InterpolateObjectAction ctx )\n        {\n            int len = Array.getLength( target );\n            for ( int i = 0; i < len; i++ )\n            {\n                Object value = Array.get( target, i );\n                if ( value != null )\n                {\n                    if ( String.class == value.getClass() )\n                    {\n                        String interpolated = ctx.interpolate( (String) value );\n\n                        if ( !interpolated.equals( value ) )\n                        {\n                            Array.set( target, i, interpolated );\n                        }\n                    }\n                    else\n                    {\n                        ctx.interpolationTargets.add( value );\n                    }\n                }\n            }\n        }\n","realPath":"maven-model-builder/src/main/java/org/apache/maven/model/interpolation/StringSearchModelInterpolator.java","repoName":"maven","snippetEndLine":0,"snippetStartLine":0,"startLine":193,"status":"N"},{"authorDate":"2013-06-12 04:09:51","commitOrder":5,"curCode":"        private void traverseObjectWithParents( Class<?> cls, Object target )\n            throws ModelInterpolationException\n        {\n            if ( cls == null )\n            {\n                return;\n            }\n\n\n            if ( cls.isArray() )\n            {\n                evaluateArray( target );\n            }\n            else if ( isQualifiedForInterpolation( cls ) )\n            {\n                Field[] fields = fieldsByClass.get( cls );\n                if ( fields == null )\n                {\n                    fields = cls.getDeclaredFields();\n                    fieldsByClass.put( cls, fields );\n                }\n\n                for ( int i = 0; i < fields.length; i++ )\n                {\n                    Class<?> type = fields[i].getType();\n                    if ( isQualifiedForInterpolation( fields[i], type ) )\n                    {\n                        boolean isAccessible = fields[i].isAccessible();\n                        fields[i].setAccessible( true );\n                        try\n                        {\n                            try\n                            {\n                                if ( String.class == type )\n                                {\n                                    String value = (String) fields[i].get( target );\n                                    if ( value != null )\n                                    {\n                                        String interpolated = modelInterpolator.interpolateInternal( value, valueSources, postProcessors, debugEnabled );\n\n                                        if ( !interpolated.equals( value ) )\n                                        {\n                                            fields[i].set( target, interpolated );\n                                        }\n                                    }\n                                }\n                                else if ( Collection.class.isAssignableFrom( type ) )\n                                {\n                                    Collection<Object> c = (Collection<Object>) fields[i].get( target );\n                                    if ( c != null && !c.isEmpty() )\n                                    {\n                                        List<Object> originalValues = new ArrayList<Object>( c );\n                                        try\n                                        {\n                                            c.clear();\n                                        }\n                                        catch ( UnsupportedOperationException e )\n                                        {\n                                            if ( debugEnabled && logger != null )\n                                            {\n                                                logger.debug( \"Skipping interpolation of field: \" + fields[i] + \" in: \"\n                                                    + cls.getName() + \"; it is an unmodifiable collection.\" );\n                                            }\n                                            continue;\n                                        }\n\n                                        for ( Object value : originalValues )\n                                        {\n                                            if ( value != null )\n                                            {\n                                                if ( String.class == value.getClass() )\n                                                {\n                                                    String interpolated =\n                                                        modelInterpolator.interpolateInternal( (String) value,\n                                                                                               valueSources,\n                                                                                               postProcessors,\n                                                                                               debugEnabled );\n\n                                                    if ( !interpolated.equals( value ) )\n                                                    {\n                                                        c.add( interpolated );\n                                                    }\n                                                    else\n                                                    {\n                                                        c.add( value );\n                                                    }\n                                                }\n                                                else\n                                                {\n                                                    c.add( value );\n                                                    if ( value.getClass().isArray() )\n                                                    {\n                                                        evaluateArray( value );\n                                                    }\n                                                    else\n                                                    {\n                                                        interpolationTargets.add( value );\n                                                    }\n                                                }\n                                            }\n                                            else\n                                            {\n                                                \r\n                                                c.add( value );\n                                            }\n                                        }\n                                    }\n                                }\n                                else if ( Map.class.isAssignableFrom( type ) )\n                                {\n                                    Map<Object, Object> m = (Map<Object, Object>) fields[i].get( target );\n                                    if ( m != null && !m.isEmpty() )\n                                    {\n                                        for ( Map.Entry<Object, Object> entry : m.entrySet() )\n                                        {\n                                            Object value = entry.getValue();\n\n                                            if ( value != null )\n                                            {\n                                                if ( String.class == value.getClass() )\n                                                {\n                                                    String interpolated =\n                                                        modelInterpolator.interpolateInternal( (String) value,\n                                                                                               valueSources,\n                                                                                               postProcessors,\n                                                                                               debugEnabled );\n\n                                                    if ( !interpolated.equals( value ) )\n                                                    {\n                                                        try\n                                                        {\n                                                            entry.setValue( interpolated );\n                                                        }\n                                                        catch ( UnsupportedOperationException e )\n                                                        {\n                                                            if ( debugEnabled && logger != null )\n                                                            {\n                                                                logger.debug( \"Skipping interpolation of field: \"\n                                                                    + fields[i] + \" (key: \" + entry.getKey() + \") in: \"\n                                                                    + cls.getName()\n                                                                    + \"; it is an unmodifiable collection.\" );\n                                                            }\n                                                        }\n                                                    }\n                                                }\n                                                else\n                                                {\n                                                    if ( value.getClass().isArray() )\n                                                    {\n                                                        evaluateArray( value );\n                                                    }\n                                                    else\n                                                    {\n                                                        interpolationTargets.add( value );\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else\n                                {\n                                    Object value = fields[i].get( target );\n                                    if ( value != null )\n                                    {\n                                        if ( fields[i].getType().isArray() )\n                                        {\n                                            evaluateArray( value );\n                                        }\n                                        else\n                                        {\n                                            interpolationTargets.add( value );\n                                        }\n                                    }\n                                }\n                            }\n                            catch ( IllegalArgumentException e )\n                            {\n                                throw new ModelInterpolationException( \"Failed to interpolate field: \" + fields[i]\n                                    + \" on class: \" + cls.getName(), e );\n                            }\n                            catch ( IllegalAccessException e )\n                            {\n                                throw new ModelInterpolationException( \"Failed to interpolate field: \" + fields[i]\n                                    + \" on class: \" + cls.getName(), e );\n                            }\n                        }\n                        finally\n                        {\n                            fields[i].setAccessible( isAccessible );\n                        }\n                    }\n                }\n\n                traverseObjectWithParents( cls.getSuperclass(), target );\n            }\n        }\n","date":"2013-06-12 04:09:51","endLine":345,"groupId":"2620","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"traverseObjectWithParents","params":"(Class<?>cls@Objecttarget)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-maven-10-0.7/blobInfo/CC_OUT/blobs/1e/f5579e00ba464d10c9f694a8d3d72c72afe870.src","preCode":"        private void traverseObjectWithParents( Class<?> cls, Object target )\n            throws ModelInterpolationException\n        {\n            if ( cls == null )\n            {\n                return;\n            }\n\n\n            if ( cls.isArray() )\n            {\n                evaluateArray( target );\n            }\n            else if ( isQualifiedForInterpolation( cls ) )\n            {\n                Field[] fields = fieldsByClass.get( cls );\n                if ( fields == null )\n                {\n                    fields = cls.getDeclaredFields();\n                    fieldsByClass.put( cls, fields );\n                }\n\n                for ( int i = 0; i < fields.length; i++ )\n                {\n                    Class<?> type = fields[i].getType();\n                    if ( isQualifiedForInterpolation( fields[i], type ) )\n                    {\n                        boolean isAccessible = fields[i].isAccessible();\n                        fields[i].setAccessible( true );\n                        try\n                        {\n                            try\n                            {\n                                if ( String.class == type )\n                                {\n                                    String value = (String) fields[i].get( target );\n                                    if ( value != null )\n                                    {\n                                        String interpolated = modelInterpolator.interpolateInternal( value, valueSources, postProcessors, debugEnabled );\n\n                                        if ( !interpolated.equals( value ) )\n                                        {\n                                            fields[i].set( target, interpolated );\n                                        }\n                                    }\n                                }\n                                else if ( Collection.class.isAssignableFrom( type ) )\n                                {\n                                    Collection<Object> c = (Collection<Object>) fields[i].get( target );\n                                    if ( c != null && !c.isEmpty() )\n                                    {\n                                        List<Object> originalValues = new ArrayList<Object>( c );\n                                        try\n                                        {\n                                            c.clear();\n                                        }\n                                        catch ( UnsupportedOperationException e )\n                                        {\n                                            if ( debugEnabled && logger != null )\n                                            {\n                                                logger.debug( \"Skipping interpolation of field: \" + fields[i] + \" in: \"\n                                                    + cls.getName() + \"; it is an unmodifiable collection.\" );\n                                            }\n                                            continue;\n                                        }\n\n                                        for ( Object value : originalValues )\n                                        {\n                                            if ( value != null )\n                                            {\n                                                if ( String.class == value.getClass() )\n                                                {\n                                                    String interpolated =\n                                                        modelInterpolator.interpolateInternal( (String) value,\n                                                                                               valueSources,\n                                                                                               postProcessors,\n                                                                                               debugEnabled );\n\n                                                    if ( !interpolated.equals( value ) )\n                                                    {\n                                                        c.add( interpolated );\n                                                    }\n                                                    else\n                                                    {\n                                                        c.add( value );\n                                                    }\n                                                }\n                                                else\n                                                {\n                                                    c.add( value );\n                                                    if ( value.getClass().isArray() )\n                                                    {\n                                                        evaluateArray( value );\n                                                    }\n                                                    else\n                                                    {\n                                                        interpolationTargets.add( value );\n                                                    }\n                                                }\n                                            }\n                                            else\n                                            {\n                                                \r\n                                                c.add( value );\n                                            }\n                                        }\n                                    }\n                                }\n                                else if ( Map.class.isAssignableFrom( type ) )\n                                {\n                                    Map<Object, Object> m = (Map<Object, Object>) fields[i].get( target );\n                                    if ( m != null && !m.isEmpty() )\n                                    {\n                                        for ( Map.Entry<Object, Object> entry : m.entrySet() )\n                                        {\n                                            Object value = entry.getValue();\n\n                                            if ( value != null )\n                                            {\n                                                if ( String.class == value.getClass() )\n                                                {\n                                                    String interpolated =\n                                                        modelInterpolator.interpolateInternal( (String) value,\n                                                                                               valueSources,\n                                                                                               postProcessors,\n                                                                                               debugEnabled );\n\n                                                    if ( !interpolated.equals( value ) )\n                                                    {\n                                                        try\n                                                        {\n                                                            entry.setValue( interpolated );\n                                                        }\n                                                        catch ( UnsupportedOperationException e )\n                                                        {\n                                                            if ( debugEnabled && logger != null )\n                                                            {\n                                                                logger.debug( \"Skipping interpolation of field: \"\n                                                                    + fields[i] + \" (key: \" + entry.getKey() + \") in: \"\n                                                                    + cls.getName()\n                                                                    + \"; it is an unmodifiable collection.\" );\n                                                            }\n                                                            continue;\n                                                        }\n                                                    }\n                                                }\n                                                else\n                                                {\n                                                    if ( value.getClass().isArray() )\n                                                    {\n                                                        evaluateArray( value );\n                                                    }\n                                                    else\n                                                    {\n                                                        interpolationTargets.add( value );\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else\n                                {\n                                    Object value = fields[i].get( target );\n                                    if ( value != null )\n                                    {\n                                        if ( fields[i].getType().isArray() )\n                                        {\n                                            evaluateArray( value );\n                                        }\n                                        else\n                                        {\n                                            interpolationTargets.add( value );\n                                        }\n                                    }\n                                }\n                            }\n                            catch ( IllegalArgumentException e )\n                            {\n                                throw new ModelInterpolationException( \"Failed to interpolate field: \" + fields[i]\n                                    + \" on class: \" + cls.getName(), e );\n                            }\n                            catch ( IllegalAccessException e )\n                            {\n                                throw new ModelInterpolationException( \"Failed to interpolate field: \" + fields[i]\n                                    + \" on class: \" + cls.getName(), e );\n                            }\n                        }\n                        finally\n                        {\n                            fields[i].setAccessible( isAccessible );\n                        }\n                    }\n                }\n\n                traverseObjectWithParents( cls.getSuperclass(), target );\n            }\n        }\n","realPath":"maven-compat/src/main/java/org/apache/maven/project/interpolation/StringSearchModelInterpolator.java","repoName":"maven","snippetEndLine":0,"snippetStartLine":0,"startLine":149,"status":"M"}],"commitId":"9e5183f0ad9dc2bdbf0feaabd9c70a4d26b79382","commitMessage":"@@@Code cleanup - Various code simplifications (tests.  loops.  ?)\n","date":"2013-06-12 04:09:51","modifiedFileCount":"11","status":"M","submitter":"Arnaud He?ritier"},{"authorTime":"2013-06-12 04:21:54","codes":[{"authorDate":"2012-08-22 22:55:33","commitOrder":6,"curCode":"        private static void evaluateArray( Object target, InterpolateObjectAction ctx )\n        {\n            int len = Array.getLength( target );\n            for ( int i = 0; i < len; i++ )\n            {\n                Object value = Array.get( target, i );\n                if ( value != null )\n                {\n                    if ( String.class == value.getClass() )\n                    {\n                        String interpolated = ctx.interpolate( (String) value );\n\n                        if ( !interpolated.equals( value ) )\n                        {\n                            Array.set( target, i, interpolated );\n                        }\n                    }\n                    else\n                    {\n                        ctx.interpolationTargets.add( value );\n                    }\n                }\n            }\n        }\n","date":"2012-08-22 22:55:33","endLine":216,"groupId":"5264","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"evaluateArray","params":"(Objecttarget@InterpolateObjectActionctx)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-maven-10-0.7/blobInfo/CC_OUT/blobs/28/a5273c3bfb3033de0445315e8ea36d945450df.src","preCode":"        private static void evaluateArray( Object target, InterpolateObjectAction ctx )\n        {\n            int len = Array.getLength( target );\n            for ( int i = 0; i < len; i++ )\n            {\n                Object value = Array.get( target, i );\n                if ( value != null )\n                {\n                    if ( String.class == value.getClass() )\n                    {\n                        String interpolated = ctx.interpolate( (String) value );\n\n                        if ( !interpolated.equals( value ) )\n                        {\n                            Array.set( target, i, interpolated );\n                        }\n                    }\n                    else\n                    {\n                        ctx.interpolationTargets.add( value );\n                    }\n                }\n            }\n        }\n","realPath":"maven-model-builder/src/main/java/org/apache/maven/model/interpolation/StringSearchModelInterpolator.java","repoName":"maven","snippetEndLine":0,"snippetStartLine":0,"startLine":193,"status":"N"},{"authorDate":"2013-06-12 04:21:54","commitOrder":6,"curCode":"        private void traverseObjectWithParents( Class<?> cls, Object target )\n            throws ModelInterpolationException\n        {\n            if ( cls == null )\n            {\n                return;\n            }\n\n\n            if ( cls.isArray() )\n            {\n                evaluateArray( target );\n            }\n            else if ( isQualifiedForInterpolation( cls ) )\n            {\n                Field[] fields = fieldsByClass.get( cls );\n                if ( fields == null )\n                {\n                    fields = cls.getDeclaredFields();\n                    fieldsByClass.put( cls, fields );\n                }\n\n                for ( Field field : fields )\n                {\n                    Class<?> type = field.getType();\n                    if ( isQualifiedForInterpolation( field, type ) )\n                    {\n                        boolean isAccessible = field.isAccessible();\n                        field.setAccessible( true );\n                        try\n                        {\n                            try\n                            {\n                                if ( String.class == type )\n                                {\n                                    String value = (String) field.get( target );\n                                    if ( value != null )\n                                    {\n                                        String interpolated =\n                                            modelInterpolator.interpolateInternal( value, valueSources, postProcessors,\n                                                                                   debugEnabled );\n\n                                        if ( !interpolated.equals( value ) )\n                                        {\n                                            field.set( target, interpolated );\n                                        }\n                                    }\n                                }\n                                else if ( Collection.class.isAssignableFrom( type ) )\n                                {\n                                    Collection<Object> c = (Collection<Object>) field.get( target );\n                                    if ( c != null && !c.isEmpty() )\n                                    {\n                                        List<Object> originalValues = new ArrayList<Object>( c );\n                                        try\n                                        {\n                                            c.clear();\n                                        }\n                                        catch ( UnsupportedOperationException e )\n                                        {\n                                            if ( debugEnabled && logger != null )\n                                            {\n                                                logger.debug( \"Skipping interpolation of field: \" + field + \" in: \"\n                                                                  + cls.getName()\n                                                                  + \"; it is an unmodifiable collection.\" );\n                                            }\n                                            continue;\n                                        }\n\n                                        for ( Object value : originalValues )\n                                        {\n                                            if ( value != null )\n                                            {\n                                                if ( String.class == value.getClass() )\n                                                {\n                                                    String interpolated =\n                                                        modelInterpolator.interpolateInternal( (String) value,\n                                                                                               valueSources,\n                                                                                               postProcessors,\n                                                                                               debugEnabled );\n\n                                                    if ( !interpolated.equals( value ) )\n                                                    {\n                                                        c.add( interpolated );\n                                                    }\n                                                    else\n                                                    {\n                                                        c.add( value );\n                                                    }\n                                                }\n                                                else\n                                                {\n                                                    c.add( value );\n                                                    if ( value.getClass().isArray() )\n                                                    {\n                                                        evaluateArray( value );\n                                                    }\n                                                    else\n                                                    {\n                                                        interpolationTargets.add( value );\n                                                    }\n                                                }\n                                            }\n                                            else\n                                            {\n                                                \r\n                                                c.add( value );\n                                            }\n                                        }\n                                    }\n                                }\n                                else if ( Map.class.isAssignableFrom( type ) )\n                                {\n                                    Map<Object, Object> m = (Map<Object, Object>) field.get( target );\n                                    if ( m != null && !m.isEmpty() )\n                                    {\n                                        for ( Map.Entry<Object, Object> entry : m.entrySet() )\n                                        {\n                                            Object value = entry.getValue();\n\n                                            if ( value != null )\n                                            {\n                                                if ( String.class == value.getClass() )\n                                                {\n                                                    String interpolated =\n                                                        modelInterpolator.interpolateInternal( (String) value,\n                                                                                               valueSources,\n                                                                                               postProcessors,\n                                                                                               debugEnabled );\n\n                                                    if ( !interpolated.equals( value ) )\n                                                    {\n                                                        try\n                                                        {\n                                                            entry.setValue( interpolated );\n                                                        }\n                                                        catch ( UnsupportedOperationException e )\n                                                        {\n                                                            if ( debugEnabled && logger != null )\n                                                            {\n                                                                logger.debug(\n                                                                    \"Skipping interpolation of field: \" + field\n                                                                        + \" (key: \" + entry.getKey() + \") in: \"\n                                                                        + cls.getName()\n                                                                        + \"; it is an unmodifiable collection.\" );\n                                                            }\n                                                        }\n                                                    }\n                                                }\n                                                else\n                                                {\n                                                    if ( value.getClass().isArray() )\n                                                    {\n                                                        evaluateArray( value );\n                                                    }\n                                                    else\n                                                    {\n                                                        interpolationTargets.add( value );\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else\n                                {\n                                    Object value = field.get( target );\n                                    if ( value != null )\n                                    {\n                                        if ( field.getType().isArray() )\n                                        {\n                                            evaluateArray( value );\n                                        }\n                                        else\n                                        {\n                                            interpolationTargets.add( value );\n                                        }\n                                    }\n                                }\n                            }\n                            catch ( IllegalArgumentException e )\n                            {\n                                throw new ModelInterpolationException(\n                                    \"Failed to interpolate field: \" + field + \" on class: \" + cls.getName(), e );\n                            }\n                            catch ( IllegalAccessException e )\n                            {\n                                throw new ModelInterpolationException(\n                                    \"Failed to interpolate field: \" + field + \" on class: \" + cls.getName(), e );\n                            }\n                        }\n                        finally\n                        {\n                            field.setAccessible( isAccessible );\n                        }\n                    }\n                }\n\n                traverseObjectWithParents( cls.getSuperclass(), target );\n            }\n        }\n","date":"2013-06-12 04:21:54","endLine":349,"groupId":"2282","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"traverseObjectWithParents","params":"(Class<?>cls@Objecttarget)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-maven-10-0.7/blobInfo/CC_OUT/blobs/dc/b8e2bdcee279720b4730a88f12eccbac69866d.src","preCode":"        private void traverseObjectWithParents( Class<?> cls, Object target )\n            throws ModelInterpolationException\n        {\n            if ( cls == null )\n            {\n                return;\n            }\n\n\n            if ( cls.isArray() )\n            {\n                evaluateArray( target );\n            }\n            else if ( isQualifiedForInterpolation( cls ) )\n            {\n                Field[] fields = fieldsByClass.get( cls );\n                if ( fields == null )\n                {\n                    fields = cls.getDeclaredFields();\n                    fieldsByClass.put( cls, fields );\n                }\n\n                for ( int i = 0; i < fields.length; i++ )\n                {\n                    Class<?> type = fields[i].getType();\n                    if ( isQualifiedForInterpolation( fields[i], type ) )\n                    {\n                        boolean isAccessible = fields[i].isAccessible();\n                        fields[i].setAccessible( true );\n                        try\n                        {\n                            try\n                            {\n                                if ( String.class == type )\n                                {\n                                    String value = (String) fields[i].get( target );\n                                    if ( value != null )\n                                    {\n                                        String interpolated = modelInterpolator.interpolateInternal( value, valueSources, postProcessors, debugEnabled );\n\n                                        if ( !interpolated.equals( value ) )\n                                        {\n                                            fields[i].set( target, interpolated );\n                                        }\n                                    }\n                                }\n                                else if ( Collection.class.isAssignableFrom( type ) )\n                                {\n                                    Collection<Object> c = (Collection<Object>) fields[i].get( target );\n                                    if ( c != null && !c.isEmpty() )\n                                    {\n                                        List<Object> originalValues = new ArrayList<Object>( c );\n                                        try\n                                        {\n                                            c.clear();\n                                        }\n                                        catch ( UnsupportedOperationException e )\n                                        {\n                                            if ( debugEnabled && logger != null )\n                                            {\n                                                logger.debug( \"Skipping interpolation of field: \" + fields[i] + \" in: \"\n                                                    + cls.getName() + \"; it is an unmodifiable collection.\" );\n                                            }\n                                            continue;\n                                        }\n\n                                        for ( Object value : originalValues )\n                                        {\n                                            if ( value != null )\n                                            {\n                                                if ( String.class == value.getClass() )\n                                                {\n                                                    String interpolated =\n                                                        modelInterpolator.interpolateInternal( (String) value,\n                                                                                               valueSources,\n                                                                                               postProcessors,\n                                                                                               debugEnabled );\n\n                                                    if ( !interpolated.equals( value ) )\n                                                    {\n                                                        c.add( interpolated );\n                                                    }\n                                                    else\n                                                    {\n                                                        c.add( value );\n                                                    }\n                                                }\n                                                else\n                                                {\n                                                    c.add( value );\n                                                    if ( value.getClass().isArray() )\n                                                    {\n                                                        evaluateArray( value );\n                                                    }\n                                                    else\n                                                    {\n                                                        interpolationTargets.add( value );\n                                                    }\n                                                }\n                                            }\n                                            else\n                                            {\n                                                \r\n                                                c.add( value );\n                                            }\n                                        }\n                                    }\n                                }\n                                else if ( Map.class.isAssignableFrom( type ) )\n                                {\n                                    Map<Object, Object> m = (Map<Object, Object>) fields[i].get( target );\n                                    if ( m != null && !m.isEmpty() )\n                                    {\n                                        for ( Map.Entry<Object, Object> entry : m.entrySet() )\n                                        {\n                                            Object value = entry.getValue();\n\n                                            if ( value != null )\n                                            {\n                                                if ( String.class == value.getClass() )\n                                                {\n                                                    String interpolated =\n                                                        modelInterpolator.interpolateInternal( (String) value,\n                                                                                               valueSources,\n                                                                                               postProcessors,\n                                                                                               debugEnabled );\n\n                                                    if ( !interpolated.equals( value ) )\n                                                    {\n                                                        try\n                                                        {\n                                                            entry.setValue( interpolated );\n                                                        }\n                                                        catch ( UnsupportedOperationException e )\n                                                        {\n                                                            if ( debugEnabled && logger != null )\n                                                            {\n                                                                logger.debug( \"Skipping interpolation of field: \"\n                                                                    + fields[i] + \" (key: \" + entry.getKey() + \") in: \"\n                                                                    + cls.getName()\n                                                                    + \"; it is an unmodifiable collection.\" );\n                                                            }\n                                                        }\n                                                    }\n                                                }\n                                                else\n                                                {\n                                                    if ( value.getClass().isArray() )\n                                                    {\n                                                        evaluateArray( value );\n                                                    }\n                                                    else\n                                                    {\n                                                        interpolationTargets.add( value );\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else\n                                {\n                                    Object value = fields[i].get( target );\n                                    if ( value != null )\n                                    {\n                                        if ( fields[i].getType().isArray() )\n                                        {\n                                            evaluateArray( value );\n                                        }\n                                        else\n                                        {\n                                            interpolationTargets.add( value );\n                                        }\n                                    }\n                                }\n                            }\n                            catch ( IllegalArgumentException e )\n                            {\n                                throw new ModelInterpolationException( \"Failed to interpolate field: \" + fields[i]\n                                    + \" on class: \" + cls.getName(), e );\n                            }\n                            catch ( IllegalAccessException e )\n                            {\n                                throw new ModelInterpolationException( \"Failed to interpolate field: \" + fields[i]\n                                    + \" on class: \" + cls.getName(), e );\n                            }\n                        }\n                        finally\n                        {\n                            fields[i].setAccessible( isAccessible );\n                        }\n                    }\n                }\n\n                traverseObjectWithParents( cls.getSuperclass(), target );\n            }\n        }\n","realPath":"maven-compat/src/main/java/org/apache/maven/project/interpolation/StringSearchModelInterpolator.java","repoName":"maven","snippetEndLine":0,"snippetStartLine":0,"startLine":149,"status":"M"}],"commitId":"d92746dc25bdce073571cf6fd8f78d6573fe75f0","commitMessage":"@@@Code cleanup - Maven requires Java 5+ : Replace for and while loops by for each\n","date":"2013-06-12 04:21:54","modifiedFileCount":"20","status":"M","submitter":"Arnaud He?ritier"},{"authorTime":"2015-03-06 14:12:21","codes":[{"authorDate":"2012-08-22 22:55:33","commitOrder":7,"curCode":"        private static void evaluateArray( Object target, InterpolateObjectAction ctx )\n        {\n            int len = Array.getLength( target );\n            for ( int i = 0; i < len; i++ )\n            {\n                Object value = Array.get( target, i );\n                if ( value != null )\n                {\n                    if ( String.class == value.getClass() )\n                    {\n                        String interpolated = ctx.interpolate( (String) value );\n\n                        if ( !interpolated.equals( value ) )\n                        {\n                            Array.set( target, i, interpolated );\n                        }\n                    }\n                    else\n                    {\n                        ctx.interpolationTargets.add( value );\n                    }\n                }\n            }\n        }\n","date":"2012-08-22 22:55:33","endLine":216,"groupId":"5264","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"evaluateArray","params":"(Objecttarget@InterpolateObjectActionctx)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-maven-10-0.7/blobInfo/CC_OUT/blobs/28/a5273c3bfb3033de0445315e8ea36d945450df.src","preCode":"        private static void evaluateArray( Object target, InterpolateObjectAction ctx )\n        {\n            int len = Array.getLength( target );\n            for ( int i = 0; i < len; i++ )\n            {\n                Object value = Array.get( target, i );\n                if ( value != null )\n                {\n                    if ( String.class == value.getClass() )\n                    {\n                        String interpolated = ctx.interpolate( (String) value );\n\n                        if ( !interpolated.equals( value ) )\n                        {\n                            Array.set( target, i, interpolated );\n                        }\n                    }\n                    else\n                    {\n                        ctx.interpolationTargets.add( value );\n                    }\n                }\n            }\n        }\n","realPath":"maven-model-builder/src/main/java/org/apache/maven/model/interpolation/StringSearchModelInterpolator.java","repoName":"maven","snippetEndLine":0,"snippetStartLine":0,"startLine":193,"status":"N"},{"authorDate":"2015-03-06 14:12:21","commitOrder":7,"curCode":"        private void traverseObjectWithParents( Class<?> cls, Object target )\n            throws ModelInterpolationException\n        {\n            if ( cls == null )\n            {\n                return;\n            }\n\n\n            if ( cls.isArray() )\n            {\n                evaluateArray( target );\n            }\n            else if ( isQualifiedForInterpolation( cls ) )\n            {\n                Field[] fields = fieldsByClass.get( cls );\n                if ( fields == null )\n                {\n                    fields = cls.getDeclaredFields();\n                    fieldsByClass.put( cls, fields );\n                }\n\n                for ( Field field : fields )\n                {\n                    Class<?> type = field.getType();\n                    if ( isQualifiedForInterpolation( field, type ) )\n                    {\n                        boolean isAccessible = field.isAccessible();\n                        field.setAccessible( true );\n                        try\n                        {\n                            try\n                            {\n                                if ( String.class == type )\n                                {\n                                    String value = (String) field.get( target );\n                                    if ( value != null )\n                                    {\n                                        String interpolated =\n                                            modelInterpolator.interpolateInternal( value, valueSources, postProcessors,\n                                                                                   debugEnabled );\n\n                                        if ( !interpolated.equals( value ) )\n                                        {\n                                            field.set( target, interpolated );\n                                        }\n                                    }\n                                }\n                                else if ( Collection.class.isAssignableFrom( type ) )\n                                {\n                                    Collection<Object> c = (Collection<Object>) field.get( target );\n                                    if ( c != null && !c.isEmpty() )\n                                    {\n                                        List<Object> originalValues = new ArrayList<>( c );\n                                        try\n                                        {\n                                            c.clear();\n                                        }\n                                        catch ( UnsupportedOperationException e )\n                                        {\n                                            if ( debugEnabled && logger != null )\n                                            {\n                                                logger.debug( \"Skipping interpolation of field: \" + field + \" in: \"\n                                                                  + cls.getName()\n                                                                  + \"; it is an unmodifiable collection.\" );\n                                            }\n                                            continue;\n                                        }\n\n                                        for ( Object value : originalValues )\n                                        {\n                                            if ( value != null )\n                                            {\n                                                if ( String.class == value.getClass() )\n                                                {\n                                                    String interpolated =\n                                                        modelInterpolator.interpolateInternal( (String) value,\n                                                                                               valueSources,\n                                                                                               postProcessors,\n                                                                                               debugEnabled );\n\n                                                    if ( !interpolated.equals( value ) )\n                                                    {\n                                                        c.add( interpolated );\n                                                    }\n                                                    else\n                                                    {\n                                                        c.add( value );\n                                                    }\n                                                }\n                                                else\n                                                {\n                                                    c.add( value );\n                                                    if ( value.getClass().isArray() )\n                                                    {\n                                                        evaluateArray( value );\n                                                    }\n                                                    else\n                                                    {\n                                                        interpolationTargets.add( value );\n                                                    }\n                                                }\n                                            }\n                                            else\n                                            {\n                                                \r\n                                                c.add( value );\n                                            }\n                                        }\n                                    }\n                                }\n                                else if ( Map.class.isAssignableFrom( type ) )\n                                {\n                                    Map<Object, Object> m = (Map<Object, Object>) field.get( target );\n                                    if ( m != null && !m.isEmpty() )\n                                    {\n                                        for ( Map.Entry<Object, Object> entry : m.entrySet() )\n                                        {\n                                            Object value = entry.getValue();\n\n                                            if ( value != null )\n                                            {\n                                                if ( String.class == value.getClass() )\n                                                {\n                                                    String interpolated =\n                                                        modelInterpolator.interpolateInternal( (String) value,\n                                                                                               valueSources,\n                                                                                               postProcessors,\n                                                                                               debugEnabled );\n\n                                                    if ( !interpolated.equals( value ) )\n                                                    {\n                                                        try\n                                                        {\n                                                            entry.setValue( interpolated );\n                                                        }\n                                                        catch ( UnsupportedOperationException e )\n                                                        {\n                                                            if ( debugEnabled && logger != null )\n                                                            {\n                                                                logger.debug(\n                                                                    \"Skipping interpolation of field: \" + field\n                                                                        + \" (key: \" + entry.getKey() + \") in: \"\n                                                                        + cls.getName()\n                                                                        + \"; it is an unmodifiable collection.\" );\n                                                            }\n                                                        }\n                                                    }\n                                                }\n                                                else\n                                                {\n                                                    if ( value.getClass().isArray() )\n                                                    {\n                                                        evaluateArray( value );\n                                                    }\n                                                    else\n                                                    {\n                                                        interpolationTargets.add( value );\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else\n                                {\n                                    Object value = field.get( target );\n                                    if ( value != null )\n                                    {\n                                        if ( field.getType().isArray() )\n                                        {\n                                            evaluateArray( value );\n                                        }\n                                        else\n                                        {\n                                            interpolationTargets.add( value );\n                                        }\n                                    }\n                                }\n                            }\n                            catch ( IllegalArgumentException | IllegalAccessException e )\n                            {\n                                throw new ModelInterpolationException(\n                                    \"Failed to interpolate field: \" + field + \" on class: \" + cls.getName(), e );\n                            }\n                        }\n                        finally\n                        {\n                            field.setAccessible( isAccessible );\n                        }\n                    }\n                }\n\n                traverseObjectWithParents( cls.getSuperclass(), target );\n            }\n        }\n","date":"2015-06-20 16:56:07","endLine":344,"groupId":"2282","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"traverseObjectWithParents","params":"(Class<?>cls@Objecttarget)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-maven-10-0.7/blobInfo/CC_OUT/blobs/13/ceaf7e5fc69a9d83662268f78d971a5ac795d5.src","preCode":"        private void traverseObjectWithParents( Class<?> cls, Object target )\n            throws ModelInterpolationException\n        {\n            if ( cls == null )\n            {\n                return;\n            }\n\n\n            if ( cls.isArray() )\n            {\n                evaluateArray( target );\n            }\n            else if ( isQualifiedForInterpolation( cls ) )\n            {\n                Field[] fields = fieldsByClass.get( cls );\n                if ( fields == null )\n                {\n                    fields = cls.getDeclaredFields();\n                    fieldsByClass.put( cls, fields );\n                }\n\n                for ( Field field : fields )\n                {\n                    Class<?> type = field.getType();\n                    if ( isQualifiedForInterpolation( field, type ) )\n                    {\n                        boolean isAccessible = field.isAccessible();\n                        field.setAccessible( true );\n                        try\n                        {\n                            try\n                            {\n                                if ( String.class == type )\n                                {\n                                    String value = (String) field.get( target );\n                                    if ( value != null )\n                                    {\n                                        String interpolated =\n                                            modelInterpolator.interpolateInternal( value, valueSources, postProcessors,\n                                                                                   debugEnabled );\n\n                                        if ( !interpolated.equals( value ) )\n                                        {\n                                            field.set( target, interpolated );\n                                        }\n                                    }\n                                }\n                                else if ( Collection.class.isAssignableFrom( type ) )\n                                {\n                                    Collection<Object> c = (Collection<Object>) field.get( target );\n                                    if ( c != null && !c.isEmpty() )\n                                    {\n                                        List<Object> originalValues = new ArrayList<Object>( c );\n                                        try\n                                        {\n                                            c.clear();\n                                        }\n                                        catch ( UnsupportedOperationException e )\n                                        {\n                                            if ( debugEnabled && logger != null )\n                                            {\n                                                logger.debug( \"Skipping interpolation of field: \" + field + \" in: \"\n                                                                  + cls.getName()\n                                                                  + \"; it is an unmodifiable collection.\" );\n                                            }\n                                            continue;\n                                        }\n\n                                        for ( Object value : originalValues )\n                                        {\n                                            if ( value != null )\n                                            {\n                                                if ( String.class == value.getClass() )\n                                                {\n                                                    String interpolated =\n                                                        modelInterpolator.interpolateInternal( (String) value,\n                                                                                               valueSources,\n                                                                                               postProcessors,\n                                                                                               debugEnabled );\n\n                                                    if ( !interpolated.equals( value ) )\n                                                    {\n                                                        c.add( interpolated );\n                                                    }\n                                                    else\n                                                    {\n                                                        c.add( value );\n                                                    }\n                                                }\n                                                else\n                                                {\n                                                    c.add( value );\n                                                    if ( value.getClass().isArray() )\n                                                    {\n                                                        evaluateArray( value );\n                                                    }\n                                                    else\n                                                    {\n                                                        interpolationTargets.add( value );\n                                                    }\n                                                }\n                                            }\n                                            else\n                                            {\n                                                \r\n                                                c.add( value );\n                                            }\n                                        }\n                                    }\n                                }\n                                else if ( Map.class.isAssignableFrom( type ) )\n                                {\n                                    Map<Object, Object> m = (Map<Object, Object>) field.get( target );\n                                    if ( m != null && !m.isEmpty() )\n                                    {\n                                        for ( Map.Entry<Object, Object> entry : m.entrySet() )\n                                        {\n                                            Object value = entry.getValue();\n\n                                            if ( value != null )\n                                            {\n                                                if ( String.class == value.getClass() )\n                                                {\n                                                    String interpolated =\n                                                        modelInterpolator.interpolateInternal( (String) value,\n                                                                                               valueSources,\n                                                                                               postProcessors,\n                                                                                               debugEnabled );\n\n                                                    if ( !interpolated.equals( value ) )\n                                                    {\n                                                        try\n                                                        {\n                                                            entry.setValue( interpolated );\n                                                        }\n                                                        catch ( UnsupportedOperationException e )\n                                                        {\n                                                            if ( debugEnabled && logger != null )\n                                                            {\n                                                                logger.debug(\n                                                                    \"Skipping interpolation of field: \" + field\n                                                                        + \" (key: \" + entry.getKey() + \") in: \"\n                                                                        + cls.getName()\n                                                                        + \"; it is an unmodifiable collection.\" );\n                                                            }\n                                                        }\n                                                    }\n                                                }\n                                                else\n                                                {\n                                                    if ( value.getClass().isArray() )\n                                                    {\n                                                        evaluateArray( value );\n                                                    }\n                                                    else\n                                                    {\n                                                        interpolationTargets.add( value );\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else\n                                {\n                                    Object value = field.get( target );\n                                    if ( value != null )\n                                    {\n                                        if ( field.getType().isArray() )\n                                        {\n                                            evaluateArray( value );\n                                        }\n                                        else\n                                        {\n                                            interpolationTargets.add( value );\n                                        }\n                                    }\n                                }\n                            }\n                            catch ( IllegalArgumentException e )\n                            {\n                                throw new ModelInterpolationException(\n                                    \"Failed to interpolate field: \" + field + \" on class: \" + cls.getName(), e );\n                            }\n                            catch ( IllegalAccessException e )\n                            {\n                                throw new ModelInterpolationException(\n                                    \"Failed to interpolate field: \" + field + \" on class: \" + cls.getName(), e );\n                            }\n                        }\n                        finally\n                        {\n                            field.setAccessible( isAccessible );\n                        }\n                    }\n                }\n\n                traverseObjectWithParents( cls.getSuperclass(), target );\n            }\n        }\n","realPath":"maven-compat/src/main/java/org/apache/maven/project/interpolation/StringSearchModelInterpolator.java","repoName":"maven","snippetEndLine":0,"snippetStartLine":0,"startLine":149,"status":"M"}],"commitId":"7badeb5b5bdfb48dd3c9533d224418d0648b76ce","commitMessage":"@@@Upgraded to java7 language features\n","date":"2015-06-20 16:56:07","modifiedFileCount":"234","status":"M","submitter":"Kristian Rosenvold"},{"authorTime":"2016-06-15 03:26:56","codes":[{"authorDate":"2012-08-22 22:55:33","commitOrder":8,"curCode":"        private static void evaluateArray( Object target, InterpolateObjectAction ctx )\n        {\n            int len = Array.getLength( target );\n            for ( int i = 0; i < len; i++ )\n            {\n                Object value = Array.get( target, i );\n                if ( value != null )\n                {\n                    if ( String.class == value.getClass() )\n                    {\n                        String interpolated = ctx.interpolate( (String) value );\n\n                        if ( !interpolated.equals( value ) )\n                        {\n                            Array.set( target, i, interpolated );\n                        }\n                    }\n                    else\n                    {\n                        ctx.interpolationTargets.add( value );\n                    }\n                }\n            }\n        }\n","date":"2012-08-22 22:55:33","endLine":216,"groupId":"10272","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"evaluateArray","params":"(Objecttarget@InterpolateObjectActionctx)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-maven-10-0.7/blobInfo/CC_OUT/blobs/28/a5273c3bfb3033de0445315e8ea36d945450df.src","preCode":"        private static void evaluateArray( Object target, InterpolateObjectAction ctx )\n        {\n            int len = Array.getLength( target );\n            for ( int i = 0; i < len; i++ )\n            {\n                Object value = Array.get( target, i );\n                if ( value != null )\n                {\n                    if ( String.class == value.getClass() )\n                    {\n                        String interpolated = ctx.interpolate( (String) value );\n\n                        if ( !interpolated.equals( value ) )\n                        {\n                            Array.set( target, i, interpolated );\n                        }\n                    }\n                    else\n                    {\n                        ctx.interpolationTargets.add( value );\n                    }\n                }\n            }\n        }\n","realPath":"maven-model-builder/src/main/java/org/apache/maven/model/interpolation/StringSearchModelInterpolator.java","repoName":"maven","snippetEndLine":0,"snippetStartLine":0,"startLine":193,"status":"N"},{"authorDate":"2016-06-15 03:26:56","commitOrder":8,"curCode":"        private void traverseObjectWithParents( Class<?> cls, Object target )\n            throws ModelInterpolationException\n        {\n            if ( cls == null )\n            {\n                return;\n            }\n\n\n            if ( cls.isArray() )\n            {\n                evaluateArray( target );\n            }\n            else if ( isQualifiedForInterpolation( cls ) )\n            {\n                Field[] fields = FIELDS_BY_CLASS.get( cls );\n                if ( fields == null )\n                {\n                    fields = cls.getDeclaredFields();\n                    FIELDS_BY_CLASS.put( cls, fields );\n                }\n\n                for ( Field field : fields )\n                {\n                    Class<?> type = field.getType();\n                    if ( isQualifiedForInterpolation( field, type ) )\n                    {\n                        boolean isAccessible = field.isAccessible();\n                        field.setAccessible( true );\n                        try\n                        {\n                            try\n                            {\n                                if ( String.class == type )\n                                {\n                                    String value = (String) field.get( target );\n                                    if ( value != null )\n                                    {\n                                        String interpolated =\n                                            modelInterpolator.interpolateInternal( value, valueSources, postProcessors,\n                                                                                   debugEnabled );\n\n                                        if ( !interpolated.equals( value ) )\n                                        {\n                                            field.set( target, interpolated );\n                                        }\n                                    }\n                                }\n                                else if ( Collection.class.isAssignableFrom( type ) )\n                                {\n                                    Collection<Object> c = (Collection<Object>) field.get( target );\n                                    if ( c != null && !c.isEmpty() )\n                                    {\n                                        List<Object> originalValues = new ArrayList<>( c );\n                                        try\n                                        {\n                                            c.clear();\n                                        }\n                                        catch ( UnsupportedOperationException e )\n                                        {\n                                            if ( debugEnabled && logger != null )\n                                            {\n                                                logger.debug( \"Skipping interpolation of field: \" + field + \" in: \"\n                                                                  + cls.getName()\n                                                                  + \"; it is an unmodifiable collection.\" );\n                                            }\n                                            continue;\n                                        }\n\n                                        for ( Object value : originalValues )\n                                        {\n                                            if ( value != null )\n                                            {\n                                                if ( String.class == value.getClass() )\n                                                {\n                                                    String interpolated =\n                                                        modelInterpolator.interpolateInternal( (String) value,\n                                                                                               valueSources,\n                                                                                               postProcessors,\n                                                                                               debugEnabled );\n\n                                                    if ( !interpolated.equals( value ) )\n                                                    {\n                                                        c.add( interpolated );\n                                                    }\n                                                    else\n                                                    {\n                                                        c.add( value );\n                                                    }\n                                                }\n                                                else\n                                                {\n                                                    c.add( value );\n                                                    if ( value.getClass().isArray() )\n                                                    {\n                                                        evaluateArray( value );\n                                                    }\n                                                    else\n                                                    {\n                                                        interpolationTargets.add( value );\n                                                    }\n                                                }\n                                            }\n                                            else\n                                            {\n                                                \r\n                                                c.add( value );\n                                            }\n                                        }\n                                    }\n                                }\n                                else if ( Map.class.isAssignableFrom( type ) )\n                                {\n                                    Map<Object, Object> m = (Map<Object, Object>) field.get( target );\n                                    if ( m != null && !m.isEmpty() )\n                                    {\n                                        for ( Map.Entry<Object, Object> entry : m.entrySet() )\n                                        {\n                                            Object value = entry.getValue();\n\n                                            if ( value != null )\n                                            {\n                                                if ( String.class == value.getClass() )\n                                                {\n                                                    String interpolated =\n                                                        modelInterpolator.interpolateInternal( (String) value,\n                                                                                               valueSources,\n                                                                                               postProcessors,\n                                                                                               debugEnabled );\n\n                                                    if ( !interpolated.equals( value ) )\n                                                    {\n                                                        try\n                                                        {\n                                                            entry.setValue( interpolated );\n                                                        }\n                                                        catch ( UnsupportedOperationException e )\n                                                        {\n                                                            if ( debugEnabled && logger != null )\n                                                            {\n                                                                logger.debug(\n                                                                    \"Skipping interpolation of field: \" + field\n                                                                        + \" (key: \" + entry.getKey() + \") in: \"\n                                                                        + cls.getName()\n                                                                        + \"; it is an unmodifiable collection.\" );\n                                                            }\n                                                        }\n                                                    }\n                                                }\n                                                else\n                                                {\n                                                    if ( value.getClass().isArray() )\n                                                    {\n                                                        evaluateArray( value );\n                                                    }\n                                                    else\n                                                    {\n                                                        interpolationTargets.add( value );\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else\n                                {\n                                    Object value = field.get( target );\n                                    if ( value != null )\n                                    {\n                                        if ( field.getType().isArray() )\n                                        {\n                                            evaluateArray( value );\n                                        }\n                                        else\n                                        {\n                                            interpolationTargets.add( value );\n                                        }\n                                    }\n                                }\n                            }\n                            catch ( IllegalArgumentException | IllegalAccessException e )\n                            {\n                                throw new ModelInterpolationException(\n                                    \"Failed to interpolate field: \" + field + \" on class: \" + cls.getName(), e );\n                            }\n                        }\n                        finally\n                        {\n                            field.setAccessible( isAccessible );\n                        }\n                    }\n                }\n\n                traverseObjectWithParents( cls.getSuperclass(), target );\n            }\n        }\n","date":"2017-01-25 15:09:30","endLine":344,"groupId":"10272","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"traverseObjectWithParents","params":"(Class<?>cls@Objecttarget)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-maven-10-0.7/blobInfo/CC_OUT/blobs/ec/de27f170182f7066858322f415e0884c71a2fe.src","preCode":"        private void traverseObjectWithParents( Class<?> cls, Object target )\n            throws ModelInterpolationException\n        {\n            if ( cls == null )\n            {\n                return;\n            }\n\n\n            if ( cls.isArray() )\n            {\n                evaluateArray( target );\n            }\n            else if ( isQualifiedForInterpolation( cls ) )\n            {\n                Field[] fields = fieldsByClass.get( cls );\n                if ( fields == null )\n                {\n                    fields = cls.getDeclaredFields();\n                    fieldsByClass.put( cls, fields );\n                }\n\n                for ( Field field : fields )\n                {\n                    Class<?> type = field.getType();\n                    if ( isQualifiedForInterpolation( field, type ) )\n                    {\n                        boolean isAccessible = field.isAccessible();\n                        field.setAccessible( true );\n                        try\n                        {\n                            try\n                            {\n                                if ( String.class == type )\n                                {\n                                    String value = (String) field.get( target );\n                                    if ( value != null )\n                                    {\n                                        String interpolated =\n                                            modelInterpolator.interpolateInternal( value, valueSources, postProcessors,\n                                                                                   debugEnabled );\n\n                                        if ( !interpolated.equals( value ) )\n                                        {\n                                            field.set( target, interpolated );\n                                        }\n                                    }\n                                }\n                                else if ( Collection.class.isAssignableFrom( type ) )\n                                {\n                                    Collection<Object> c = (Collection<Object>) field.get( target );\n                                    if ( c != null && !c.isEmpty() )\n                                    {\n                                        List<Object> originalValues = new ArrayList<>( c );\n                                        try\n                                        {\n                                            c.clear();\n                                        }\n                                        catch ( UnsupportedOperationException e )\n                                        {\n                                            if ( debugEnabled && logger != null )\n                                            {\n                                                logger.debug( \"Skipping interpolation of field: \" + field + \" in: \"\n                                                                  + cls.getName()\n                                                                  + \"; it is an unmodifiable collection.\" );\n                                            }\n                                            continue;\n                                        }\n\n                                        for ( Object value : originalValues )\n                                        {\n                                            if ( value != null )\n                                            {\n                                                if ( String.class == value.getClass() )\n                                                {\n                                                    String interpolated =\n                                                        modelInterpolator.interpolateInternal( (String) value,\n                                                                                               valueSources,\n                                                                                               postProcessors,\n                                                                                               debugEnabled );\n\n                                                    if ( !interpolated.equals( value ) )\n                                                    {\n                                                        c.add( interpolated );\n                                                    }\n                                                    else\n                                                    {\n                                                        c.add( value );\n                                                    }\n                                                }\n                                                else\n                                                {\n                                                    c.add( value );\n                                                    if ( value.getClass().isArray() )\n                                                    {\n                                                        evaluateArray( value );\n                                                    }\n                                                    else\n                                                    {\n                                                        interpolationTargets.add( value );\n                                                    }\n                                                }\n                                            }\n                                            else\n                                            {\n                                                \r\n                                                c.add( value );\n                                            }\n                                        }\n                                    }\n                                }\n                                else if ( Map.class.isAssignableFrom( type ) )\n                                {\n                                    Map<Object, Object> m = (Map<Object, Object>) field.get( target );\n                                    if ( m != null && !m.isEmpty() )\n                                    {\n                                        for ( Map.Entry<Object, Object> entry : m.entrySet() )\n                                        {\n                                            Object value = entry.getValue();\n\n                                            if ( value != null )\n                                            {\n                                                if ( String.class == value.getClass() )\n                                                {\n                                                    String interpolated =\n                                                        modelInterpolator.interpolateInternal( (String) value,\n                                                                                               valueSources,\n                                                                                               postProcessors,\n                                                                                               debugEnabled );\n\n                                                    if ( !interpolated.equals( value ) )\n                                                    {\n                                                        try\n                                                        {\n                                                            entry.setValue( interpolated );\n                                                        }\n                                                        catch ( UnsupportedOperationException e )\n                                                        {\n                                                            if ( debugEnabled && logger != null )\n                                                            {\n                                                                logger.debug(\n                                                                    \"Skipping interpolation of field: \" + field\n                                                                        + \" (key: \" + entry.getKey() + \") in: \"\n                                                                        + cls.getName()\n                                                                        + \"; it is an unmodifiable collection.\" );\n                                                            }\n                                                        }\n                                                    }\n                                                }\n                                                else\n                                                {\n                                                    if ( value.getClass().isArray() )\n                                                    {\n                                                        evaluateArray( value );\n                                                    }\n                                                    else\n                                                    {\n                                                        interpolationTargets.add( value );\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else\n                                {\n                                    Object value = field.get( target );\n                                    if ( value != null )\n                                    {\n                                        if ( field.getType().isArray() )\n                                        {\n                                            evaluateArray( value );\n                                        }\n                                        else\n                                        {\n                                            interpolationTargets.add( value );\n                                        }\n                                    }\n                                }\n                            }\n                            catch ( IllegalArgumentException | IllegalAccessException e )\n                            {\n                                throw new ModelInterpolationException(\n                                    \"Failed to interpolate field: \" + field + \" on class: \" + cls.getName(), e );\n                            }\n                        }\n                        finally\n                        {\n                            field.setAccessible( isAccessible );\n                        }\n                    }\n                }\n\n                traverseObjectWithParents( cls.getSuperclass(), target );\n            }\n        }\n","realPath":"maven-compat/src/main/java/org/apache/maven/project/interpolation/StringSearchModelInterpolator.java","repoName":"maven","snippetEndLine":0,"snippetStartLine":0,"startLine":149,"status":"M"}],"commitId":"a99a78984c1f20394abf6e76b6167b9e61e6163c","commitMessage":"@@@o Updated to remove errors reported by Checkstyle.","date":"2017-01-25 15:09:30","modifiedFileCount":"21","status":"M","submitter":"Christian Schulte"}]
