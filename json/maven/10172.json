[{"authorTime":"2009-09-01 05:31:01","codes":[{"authorDate":"2009-10-27 04:16:00","commitOrder":3,"curCode":"    public Set<Plugin> getPluginsBoundByDefaultToAllLifecycles( String packaging )\n    {\n        Set<Plugin> plugins;\n\n        \r\n        if ( \"JAR\".equals( packaging ) )\n        {\n            plugins = new LinkedHashSet<Plugin>();\n\n            plugins.add( newPlugin( \"maven-compiler-plugin\", \"compile\", \"testCompile\" ) );\n            plugins.add( newPlugin( \"maven-resources-plugin\", \"resources\", \"testResources\" ) );\n            plugins.add( newPlugin( \"maven-surefire-plugin\", \"test\" ) );\n            plugins.add( newPlugin( \"maven-jar-plugin\", \"jar\" ) );\n            plugins.add( newPlugin( \"maven-install-plugin\", \"install\" ) );\n            plugins.add( newPlugin( \"maven-deploy-plugin\", \"deploy\" ) );\n        }\n        else\n        {\n            plugins = Collections.emptySet();\n        }\n\n        return plugins;\n    }\n","date":"2009-10-27 04:16:00","endLine":107,"groupId":"7034","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"getPluginsBoundByDefaultToAllLifecycles","params":"(Stringpackaging)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-maven-10-0.7/blobInfo/CC_OUT/blobs/74/9e648367580383752d6370803279a1c5b52aa6.src","preCode":"    public Set<Plugin> getPluginsBoundByDefaultToAllLifecycles( String packaging )\n    {\n        Set<Plugin> plugins;\n\n        \r\n        if ( \"JAR\".equals( packaging ) )\n        {\n            plugins = new LinkedHashSet<Plugin>();\n\n            plugins.add( newPlugin( \"maven-compiler-plugin\", \"compile\", \"testCompile\" ) );\n            plugins.add( newPlugin( \"maven-resources-plugin\", \"resources\", \"testResources\" ) );\n            plugins.add( newPlugin( \"maven-surefire-plugin\", \"test\" ) );\n            plugins.add( newPlugin( \"maven-jar-plugin\", \"jar\" ) );\n            plugins.add( newPlugin( \"maven-install-plugin\", \"install\" ) );\n            plugins.add( newPlugin( \"maven-deploy-plugin\", \"deploy\" ) );\n        }\n        else\n        {\n            plugins = Collections.emptySet();\n        }\n\n        return plugins;\n    }\n","realPath":"maven-compat/src/test/java/org/apache/maven/project/EmptyLifecycleExecutor.java","repoName":"maven","snippetEndLine":0,"snippetStartLine":0,"startLine":85,"status":"B"},{"authorDate":"2009-09-01 05:31:01","commitOrder":3,"curCode":"    public Set<Plugin> getPluginsBoundByDefaultToAllLifecycles( String packaging )\n    {\n        Set<Plugin> plugins;\n\n        \r\n        if ( \"JAR\".equals( packaging ) )\n        {\n            plugins = new LinkedHashSet<Plugin>();\n\n            plugins.add( newPlugin( \"maven-compiler-plugin\", \"compile\", \"testCompile\" ) );\n            plugins.add( newPlugin( \"maven-resources-plugin\", \"resources\", \"testResources\" ) );\n            plugins.add( newPlugin( \"maven-surefire-plugin\", \"test\" ) );\n            plugins.add( newPlugin( \"maven-jar-plugin\", \"jar\" ) );\n            plugins.add( newPlugin( \"maven-install-plugin\", \"install\" ) );\n            plugins.add( newPlugin( \"maven-deploy-plugin\", \"deploy\" ) );\n        }\n        else\n        {\n            plugins = Collections.emptySet();\n        }\n\n        return plugins;\n    }\n","date":"2009-09-01 05:31:01","endLine":107,"groupId":"7034","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"getPluginsBoundByDefaultToAllLifecycles","params":"(Stringpackaging)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-maven-10-0.7/blobInfo/CC_OUT/blobs/74/9e648367580383752d6370803279a1c5b52aa6.src","preCode":"    public Set<Plugin> getPluginsBoundByDefaultToAllLifecycles( String packaging )\n    {\n        Set<Plugin> plugins;\n\n        \r\n        if ( \"JAR\".equals( packaging ) )\n        {\n            plugins = new LinkedHashSet<Plugin>();\n\n            plugins.add( newPlugin( \"maven-compiler-plugin\", \"compile\", \"testCompile\" ) );\n            plugins.add( newPlugin( \"maven-resources-plugin\", \"resources\", \"testResources\" ) );\n            plugins.add( newPlugin( \"maven-surefire-plugin\", \"test\" ) );\n            plugins.add( newPlugin( \"maven-jar-plugin\", \"jar\" ) );\n            plugins.add( newPlugin( \"maven-install-plugin\", \"install\" ) );\n            plugins.add( newPlugin( \"maven-deploy-plugin\", \"deploy\" ) );\n        }\n        else\n        {\n            plugins = Collections.emptySet();\n        }\n\n        return plugins;\n    }\n","realPath":"maven-core/src/test/java/org/apache/maven/project/EmptyLifecycleExecutor.java","repoName":"maven","snippetEndLine":0,"snippetStartLine":0,"startLine":85,"status":"NB"}],"commitId":"20f8323b0a993799f77db49c787829449a17b8c0","commitMessage":"@@@[MNG-4221] Push all repository/artifact related code into a legacy module and create a backward compat layer for external consumers\n\no Refactored code to make maven-compat depend on maven-core.  this got ugly regarding some tests which to a high degree depend on a full-blown repository system\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/maven-3/trunk@829934 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2009-10-27 04:16:00","modifiedFileCount":"12","status":"M","submitter":"Benjamin Bentmann"},{"authorTime":"2015-03-06 14:12:21","codes":[{"authorDate":"2015-03-06 14:12:21","commitOrder":4,"curCode":"    public Set<Plugin> getPluginsBoundByDefaultToAllLifecycles( String packaging )\n    {\n        Set<Plugin> plugins;\n\n        \r\n        if ( \"JAR\".equals( packaging ) )\n        {\n            plugins = new LinkedHashSet<>();\n\n            plugins.add( newPlugin( \"maven-compiler-plugin\", \"compile\", \"testCompile\" ) );\n            plugins.add( newPlugin( \"maven-resources-plugin\", \"resources\", \"testResources\" ) );\n            plugins.add( newPlugin( \"maven-surefire-plugin\", \"test\" ) );\n            plugins.add( newPlugin( \"maven-jar-plugin\", \"jar\" ) );\n            plugins.add( newPlugin( \"maven-install-plugin\", \"install\" ) );\n            plugins.add( newPlugin( \"maven-deploy-plugin\", \"deploy\" ) );\n        }\n        else\n        {\n            plugins = Collections.emptySet();\n        }\n\n        return plugins;\n    }\n","date":"2015-06-20 16:56:07","endLine":81,"groupId":"10172","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"getPluginsBoundByDefaultToAllLifecycles","params":"(Stringpackaging)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-maven-10-0.7/blobInfo/CC_OUT/blobs/21/c73497623ec485414cc65e6da235b7ce25e133.src","preCode":"    public Set<Plugin> getPluginsBoundByDefaultToAllLifecycles( String packaging )\n    {\n        Set<Plugin> plugins;\n\n        \r\n        if ( \"JAR\".equals( packaging ) )\n        {\n            plugins = new LinkedHashSet<Plugin>();\n\n            plugins.add( newPlugin( \"maven-compiler-plugin\", \"compile\", \"testCompile\" ) );\n            plugins.add( newPlugin( \"maven-resources-plugin\", \"resources\", \"testResources\" ) );\n            plugins.add( newPlugin( \"maven-surefire-plugin\", \"test\" ) );\n            plugins.add( newPlugin( \"maven-jar-plugin\", \"jar\" ) );\n            plugins.add( newPlugin( \"maven-install-plugin\", \"install\" ) );\n            plugins.add( newPlugin( \"maven-deploy-plugin\", \"deploy\" ) );\n        }\n        else\n        {\n            plugins = Collections.emptySet();\n        }\n\n        return plugins;\n    }\n","realPath":"maven-compat/src/test/java/org/apache/maven/project/EmptyLifecycleExecutor.java","repoName":"maven","snippetEndLine":0,"snippetStartLine":0,"startLine":59,"status":"M"},{"authorDate":"2015-03-06 14:12:21","commitOrder":4,"curCode":"    public Set<Plugin> getPluginsBoundByDefaultToAllLifecycles( String packaging )\n    {\n        Set<Plugin> plugins;\n\n        \r\n        if ( \"JAR\".equals( packaging ) )\n        {\n            plugins = new LinkedHashSet<>();\n\n            plugins.add( newPlugin( \"maven-compiler-plugin\", \"compile\", \"testCompile\" ) );\n            plugins.add( newPlugin( \"maven-resources-plugin\", \"resources\", \"testResources\" ) );\n            plugins.add( newPlugin( \"maven-surefire-plugin\", \"test\" ) );\n            plugins.add( newPlugin( \"maven-jar-plugin\", \"jar\" ) );\n            plugins.add( newPlugin( \"maven-install-plugin\", \"install\" ) );\n            plugins.add( newPlugin( \"maven-deploy-plugin\", \"deploy\" ) );\n        }\n        else\n        {\n            plugins = Collections.emptySet();\n        }\n\n        return plugins;\n    }\n","date":"2015-06-20 16:56:07","endLine":80,"groupId":"10172","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"getPluginsBoundByDefaultToAllLifecycles","params":"(Stringpackaging)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-maven-10-0.7/blobInfo/CC_OUT/blobs/55/b29b67ec836d10c038e42ad9c1bdd4d82c551d.src","preCode":"    public Set<Plugin> getPluginsBoundByDefaultToAllLifecycles( String packaging )\n    {\n        Set<Plugin> plugins;\n\n        \r\n        if ( \"JAR\".equals( packaging ) )\n        {\n            plugins = new LinkedHashSet<Plugin>();\n\n            plugins.add( newPlugin( \"maven-compiler-plugin\", \"compile\", \"testCompile\" ) );\n            plugins.add( newPlugin( \"maven-resources-plugin\", \"resources\", \"testResources\" ) );\n            plugins.add( newPlugin( \"maven-surefire-plugin\", \"test\" ) );\n            plugins.add( newPlugin( \"maven-jar-plugin\", \"jar\" ) );\n            plugins.add( newPlugin( \"maven-install-plugin\", \"install\" ) );\n            plugins.add( newPlugin( \"maven-deploy-plugin\", \"deploy\" ) );\n        }\n        else\n        {\n            plugins = Collections.emptySet();\n        }\n\n        return plugins;\n    }\n","realPath":"maven-core/src/test/java/org/apache/maven/project/EmptyLifecycleExecutor.java","repoName":"maven","snippetEndLine":0,"snippetStartLine":0,"startLine":58,"status":"M"}],"commitId":"7badeb5b5bdfb48dd3c9533d224418d0648b76ce","commitMessage":"@@@Upgraded to java7 language features\n","date":"2015-06-20 16:56:07","modifiedFileCount":"234","status":"M","submitter":"Kristian Rosenvold"}]
