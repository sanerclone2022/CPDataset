[{"authorTime":"2009-08-24 22:29:47","codes":[{"authorDate":"2010-04-08 19:29:13","commitOrder":19,"curCode":"    MavenExecutionPlan calculateExecutionPlan( MavenSession session, String... tasks )\n        throws PluginNotFoundException, PluginResolutionException, PluginDescriptorParsingException,\n        MojoNotFoundException, NoPluginFoundForPrefixException, InvalidPluginDescriptorException,\n        PluginManagerException, LifecyclePhaseNotFoundException, LifecycleNotFoundException,\n        PluginVersionResolutionException\n    {\n        List<org.apache.maven.lifecycle.internal.TaskSegment> taskSegments =\n            lifeCycleTaskSegmentCalculator.calculateTaskSegments( session, Arrays.asList( tasks ) );\n\n        org.apache.maven.lifecycle.internal.TaskSegment mergedSegment =\n            new org.apache.maven.lifecycle.internal.TaskSegment( false );\n\n        for ( org.apache.maven.lifecycle.internal.TaskSegment taskSegment : taskSegments )\n        {\n            mergedSegment.getTasks().addAll( taskSegment.getTasks() );\n        }\n\n        return lifeCycleExecutionPlanCalculator.calculateExecutionPlan( session, session.getCurrentProject(),\n                                                                        mergedSegment.getTasks() );\n    }\n","date":"2010-04-08 19:29:13","endLine":330,"groupId":"2094","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"calculateExecutionPlan","params":"(MavenSessionsession@String...tasks)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-maven-10-0.7/blobInfo/CC_OUT/blobs/c5/9156b7c804bee989273b02000f378639bc858e.src","preCode":"    MavenExecutionPlan calculateExecutionPlan( MavenSession session, String... tasks )\n        throws PluginNotFoundException, PluginResolutionException, PluginDescriptorParsingException,\n        MojoNotFoundException, NoPluginFoundForPrefixException, InvalidPluginDescriptorException,\n        PluginManagerException, LifecyclePhaseNotFoundException, LifecycleNotFoundException,\n        PluginVersionResolutionException\n    {\n        List<org.apache.maven.lifecycle.internal.TaskSegment> taskSegments =\n            lifeCycleTaskSegmentCalculator.calculateTaskSegments( session, Arrays.asList( tasks ) );\n\n        org.apache.maven.lifecycle.internal.TaskSegment mergedSegment =\n            new org.apache.maven.lifecycle.internal.TaskSegment( false );\n\n        for ( org.apache.maven.lifecycle.internal.TaskSegment taskSegment : taskSegments )\n        {\n            mergedSegment.getTasks().addAll( taskSegment.getTasks() );\n        }\n\n        return lifeCycleExecutionPlanCalculator.calculateExecutionPlan( session, session.getCurrentProject(),\n                                                                        mergedSegment.getTasks() );\n    }\n","realPath":"maven-core/src/test/java/org/apache/maven/lifecycle/LifecycleExecutorTest.java","repoName":"maven","snippetEndLine":0,"snippetStartLine":0,"startLine":311,"status":"B"},{"authorDate":"2009-08-24 22:29:47","commitOrder":19,"curCode":"    public MavenExecutionPlan calculateExecutionPlan( MavenSession session, String... tasks )\n        throws PluginNotFoundException, PluginResolutionException, PluginDescriptorParsingException,\n        MojoNotFoundException, NoPluginFoundForPrefixException, InvalidPluginDescriptorException,\n        PluginManagerException, LifecyclePhaseNotFoundException, LifecycleNotFoundException,\n        PluginVersionResolutionException\n    {\n        MavenProject project = session.getCurrentProject();\n\n        List<MojoExecution> lifecyclePlan = new ArrayList<MojoExecution>();\n\n        Set<String> requiredDependencyResolutionScopes = new HashSet<String>();\n\n        for ( String task : tasks )\n        {\n            if ( task.indexOf( \":\" ) > 0 )\n            {\n                calculateExecutionForIndividualGoal( session, lifecyclePlan, task );\n            }\n            else\n            {\n                calculateExecutionForLifecyclePhase( session, lifecyclePlan, task );\n            }\n        }\n\n        \r\n        \r\n        for ( MojoExecution mojoExecution : lifecyclePlan )\n        {\n            \r\n            \r\n            \r\n            \r\n\n            MojoDescriptor mojoDescriptor = mojoExecution.getMojoDescriptor();\n\n            if ( mojoDescriptor == null )\n            {\n                mojoDescriptor =\n                    pluginManager.getMojoDescriptor( mojoExecution.getPlugin(), mojoExecution.getGoal(),\n                                                     getRepositoryRequest( session, project ) );\n\n                mojoExecution.setMojoDescriptor( mojoDescriptor );\n            }\n\n            populateMojoExecutionConfiguration( project, mojoExecution,\n                                                MojoExecution.Source.CLI.equals( mojoExecution.getSource() ) );\n\n            extractMojoConfiguration( mojoExecution );\n\n            calculateForkedExecutions( mojoExecution, session, project, new HashSet<MojoDescriptor>() );\n\n            collectDependencyResolutionScopes( requiredDependencyResolutionScopes, mojoExecution );\n        }\n\n        return new MavenExecutionPlan( lifecyclePlan, requiredDependencyResolutionScopes );\n    }\n","date":"2009-08-24 22:29:47","endLine":436,"groupId":"962","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"calculateExecutionPlan","params":"(MavenSessionsession@String...tasks)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-maven-10-0.7/blobInfo/CC_OUT/blobs/bf/04d9bfa4d38db868450b21c117172a10377dcd.src","preCode":"    public MavenExecutionPlan calculateExecutionPlan( MavenSession session, String... tasks )\n        throws PluginNotFoundException, PluginResolutionException, PluginDescriptorParsingException,\n        MojoNotFoundException, NoPluginFoundForPrefixException, InvalidPluginDescriptorException,\n        PluginManagerException, LifecyclePhaseNotFoundException, LifecycleNotFoundException,\n        PluginVersionResolutionException\n    {\n        MavenProject project = session.getCurrentProject();\n\n        List<MojoExecution> lifecyclePlan = new ArrayList<MojoExecution>();\n\n        Set<String> requiredDependencyResolutionScopes = new HashSet<String>();\n\n        for ( String task : tasks )\n        {\n            if ( task.indexOf( \":\" ) > 0 )\n            {\n                calculateExecutionForIndividualGoal( session, lifecyclePlan, task );\n            }\n            else\n            {\n                calculateExecutionForLifecyclePhase( session, lifecyclePlan, task );\n            }\n        }\n\n        \r\n        \r\n        for ( MojoExecution mojoExecution : lifecyclePlan )\n        {\n            \r\n            \r\n            \r\n            \r\n\n            MojoDescriptor mojoDescriptor = mojoExecution.getMojoDescriptor();\n\n            if ( mojoDescriptor == null )\n            {\n                mojoDescriptor =\n                    pluginManager.getMojoDescriptor( mojoExecution.getPlugin(), mojoExecution.getGoal(),\n                                                     getRepositoryRequest( session, project ) );\n\n                mojoExecution.setMojoDescriptor( mojoDescriptor );\n            }\n\n            populateMojoExecutionConfiguration( project, mojoExecution,\n                                                MojoExecution.Source.CLI.equals( mojoExecution.getSource() ) );\n\n            extractMojoConfiguration( mojoExecution );\n\n            calculateForkedExecutions( mojoExecution, session, project, new HashSet<MojoDescriptor>() );\n\n            collectDependencyResolutionScopes( requiredDependencyResolutionScopes, mojoExecution );\n        }\n\n        return new MavenExecutionPlan( lifecyclePlan, requiredDependencyResolutionScopes );\n    }\n","realPath":"maven-core/src/main/java/org/apache/maven/lifecycle/DefaultLifecycleExecutor.java","repoName":"maven","snippetEndLine":0,"snippetStartLine":0,"startLine":381,"status":"NB"}],"commitId":"83237e46af5654c51c5c9005b054c1ffa01e327d","commitMessage":"@@@[MNG-3004] Concurrent building of multimodule projects\n\nThis commit consists of a modularization of the DefaultLifecycleExecutor into smaller\ncomponents. This is primarily done with the intention of extracting execution strategy \nsomewhat from the rest of the logic.\n\nIt also contains three differenent execution strategies:\nA) Linear (\"Classic\")\nB) Parallel (Based on Dan's original implemementation)\nC) Weave (Still experimental) \n\n \nThe command line -T option activates parallel running.  and the argument\nis in the form -T <[nThreads.  a float][C][W]|auto>\n\nNotes:\n* The output demultiplexer is disabled in this commit.  and output will appear intermingled.\n* The modello plugin has known problems\n* Surefire must be run in forkmode at least once.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/maven-3/trunk@931884 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2010-04-08 19:29:13","modifiedFileCount":"21","status":"M","submitter":"Kristian Rosenvold"},{"authorTime":"2010-04-08 21:06:58","codes":[{"authorDate":"2010-04-08 19:29:13","commitOrder":20,"curCode":"    MavenExecutionPlan calculateExecutionPlan( MavenSession session, String... tasks )\n        throws PluginNotFoundException, PluginResolutionException, PluginDescriptorParsingException,\n        MojoNotFoundException, NoPluginFoundForPrefixException, InvalidPluginDescriptorException,\n        PluginManagerException, LifecyclePhaseNotFoundException, LifecycleNotFoundException,\n        PluginVersionResolutionException\n    {\n        List<org.apache.maven.lifecycle.internal.TaskSegment> taskSegments =\n            lifeCycleTaskSegmentCalculator.calculateTaskSegments( session, Arrays.asList( tasks ) );\n\n        org.apache.maven.lifecycle.internal.TaskSegment mergedSegment =\n            new org.apache.maven.lifecycle.internal.TaskSegment( false );\n\n        for ( org.apache.maven.lifecycle.internal.TaskSegment taskSegment : taskSegments )\n        {\n            mergedSegment.getTasks().addAll( taskSegment.getTasks() );\n        }\n\n        return lifeCycleExecutionPlanCalculator.calculateExecutionPlan( session, session.getCurrentProject(),\n                                                                        mergedSegment.getTasks() );\n    }\n","date":"2010-04-08 19:29:13","endLine":330,"groupId":"2094","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"calculateExecutionPlan","params":"(MavenSessionsession@String...tasks)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-maven-10-0.7/blobInfo/CC_OUT/blobs/c5/9156b7c804bee989273b02000f378639bc858e.src","preCode":"    MavenExecutionPlan calculateExecutionPlan( MavenSession session, String... tasks )\n        throws PluginNotFoundException, PluginResolutionException, PluginDescriptorParsingException,\n        MojoNotFoundException, NoPluginFoundForPrefixException, InvalidPluginDescriptorException,\n        PluginManagerException, LifecyclePhaseNotFoundException, LifecycleNotFoundException,\n        PluginVersionResolutionException\n    {\n        List<org.apache.maven.lifecycle.internal.TaskSegment> taskSegments =\n            lifeCycleTaskSegmentCalculator.calculateTaskSegments( session, Arrays.asList( tasks ) );\n\n        org.apache.maven.lifecycle.internal.TaskSegment mergedSegment =\n            new org.apache.maven.lifecycle.internal.TaskSegment( false );\n\n        for ( org.apache.maven.lifecycle.internal.TaskSegment taskSegment : taskSegments )\n        {\n            mergedSegment.getTasks().addAll( taskSegment.getTasks() );\n        }\n\n        return lifeCycleExecutionPlanCalculator.calculateExecutionPlan( session, session.getCurrentProject(),\n                                                                        mergedSegment.getTasks() );\n    }\n","realPath":"maven-core/src/test/java/org/apache/maven/lifecycle/LifecycleExecutorTest.java","repoName":"maven","snippetEndLine":0,"snippetStartLine":0,"startLine":311,"status":"N"},{"authorDate":"2010-04-08 21:06:58","commitOrder":20,"curCode":"    public MavenExecutionPlan calculateExecutionPlan( MavenSession session, String... tasks )\n        throws PluginNotFoundException, PluginResolutionException, PluginDescriptorParsingException,\n        MojoNotFoundException, NoPluginFoundForPrefixException, InvalidPluginDescriptorException,\n        PluginManagerException, LifecyclePhaseNotFoundException, LifecycleNotFoundException,\n        PluginVersionResolutionException\n    {\n\n        List<TaskSegment> taskSegments = buildListCalculator.calculateTaskSegments( session );\n\n        TaskSegment mergedSegment = new TaskSegment( false );\n\n        for ( TaskSegment taskSegment : taskSegments )\n        {\n            mergedSegment.getTasks().addAll( taskSegment.getTasks() );\n        }\n\n        return lifecycleExecutionPlanCalculator.calculateExecutionPlan( session, session.getCurrentProject(),\n                                                                        mergedSegment.getTasks() );\n    }\n","date":"2010-04-08 21:06:58","endLine":310,"groupId":"2549","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"calculateExecutionPlan","params":"(MavenSessionsession@String...tasks)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-maven-10-0.7/blobInfo/CC_OUT/blobs/5b/0a6719f340f858f2d5c39830a3ab12eac7758c.src","preCode":"    public MavenExecutionPlan calculateExecutionPlan( MavenSession session, String... tasks )\n        throws PluginNotFoundException, PluginResolutionException, PluginDescriptorParsingException,\n        MojoNotFoundException, NoPluginFoundForPrefixException, InvalidPluginDescriptorException,\n        PluginManagerException, LifecyclePhaseNotFoundException, LifecycleNotFoundException,\n        PluginVersionResolutionException\n    {\n        MavenProject project = session.getCurrentProject();\n\n        List<MojoExecution> lifecyclePlan = new ArrayList<MojoExecution>();\n\n        Set<String> requiredDependencyResolutionScopes = new HashSet<String>();\n\n        for ( String task : tasks )\n        {\n            if ( task.indexOf( \":\" ) > 0 )\n            {\n                calculateExecutionForIndividualGoal( session, lifecyclePlan, task );\n            }\n            else\n            {\n                calculateExecutionForLifecyclePhase( session, lifecyclePlan, task );\n            }\n        }\n\n        \r\n        \r\n        for ( MojoExecution mojoExecution : lifecyclePlan )\n        {\n            \r\n            \r\n            \r\n            \r\n\n            MojoDescriptor mojoDescriptor = mojoExecution.getMojoDescriptor();\n\n            if ( mojoDescriptor == null )\n            {\n                mojoDescriptor =\n                    pluginManager.getMojoDescriptor( mojoExecution.getPlugin(), mojoExecution.getGoal(),\n                                                     getRepositoryRequest( session, project ) );\n\n                mojoExecution.setMojoDescriptor( mojoDescriptor );\n            }\n\n            populateMojoExecutionConfiguration( project, mojoExecution,\n                                                MojoExecution.Source.CLI.equals( mojoExecution.getSource() ) );\n\n            extractMojoConfiguration( mojoExecution );\n\n            calculateForkedExecutions( mojoExecution, session, project, new HashSet<MojoDescriptor>() );\n\n            collectDependencyResolutionScopes( requiredDependencyResolutionScopes, mojoExecution );\n        }\n\n        return new MavenExecutionPlan( lifecyclePlan, requiredDependencyResolutionScopes );\n    }\n","realPath":"maven-core/src/main/java/org/apache/maven/lifecycle/DefaultLifecycleExecutor.java","repoName":"maven","snippetEndLine":0,"snippetStartLine":0,"startLine":292,"status":"M"}],"commitId":"643337864b460a4045bd6f2d65bfa495cf557d63","commitMessage":"@@@[MNG-3004] Re-added calculateExecutionPlan to DLE.  fixed ASF code standard\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/maven-3/trunk@931921 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2010-04-08 21:06:58","modifiedFileCount":"5","status":"M","submitter":"Kristian Rosenvold"},{"authorTime":"2010-04-20 04:57:44","codes":[{"authorDate":"2010-04-08 19:29:13","commitOrder":21,"curCode":"    MavenExecutionPlan calculateExecutionPlan( MavenSession session, String... tasks )\n        throws PluginNotFoundException, PluginResolutionException, PluginDescriptorParsingException,\n        MojoNotFoundException, NoPluginFoundForPrefixException, InvalidPluginDescriptorException,\n        PluginManagerException, LifecyclePhaseNotFoundException, LifecycleNotFoundException,\n        PluginVersionResolutionException\n    {\n        List<org.apache.maven.lifecycle.internal.TaskSegment> taskSegments =\n            lifeCycleTaskSegmentCalculator.calculateTaskSegments( session, Arrays.asList( tasks ) );\n\n        org.apache.maven.lifecycle.internal.TaskSegment mergedSegment =\n            new org.apache.maven.lifecycle.internal.TaskSegment( false );\n\n        for ( org.apache.maven.lifecycle.internal.TaskSegment taskSegment : taskSegments )\n        {\n            mergedSegment.getTasks().addAll( taskSegment.getTasks() );\n        }\n\n        return lifeCycleExecutionPlanCalculator.calculateExecutionPlan( session, session.getCurrentProject(),\n                                                                        mergedSegment.getTasks() );\n    }\n","date":"2010-04-08 19:29:13","endLine":330,"groupId":"2094","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"calculateExecutionPlan","params":"(MavenSessionsession@String...tasks)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-maven-10-0.7/blobInfo/CC_OUT/blobs/c5/9156b7c804bee989273b02000f378639bc858e.src","preCode":"    MavenExecutionPlan calculateExecutionPlan( MavenSession session, String... tasks )\n        throws PluginNotFoundException, PluginResolutionException, PluginDescriptorParsingException,\n        MojoNotFoundException, NoPluginFoundForPrefixException, InvalidPluginDescriptorException,\n        PluginManagerException, LifecyclePhaseNotFoundException, LifecycleNotFoundException,\n        PluginVersionResolutionException\n    {\n        List<org.apache.maven.lifecycle.internal.TaskSegment> taskSegments =\n            lifeCycleTaskSegmentCalculator.calculateTaskSegments( session, Arrays.asList( tasks ) );\n\n        org.apache.maven.lifecycle.internal.TaskSegment mergedSegment =\n            new org.apache.maven.lifecycle.internal.TaskSegment( false );\n\n        for ( org.apache.maven.lifecycle.internal.TaskSegment taskSegment : taskSegments )\n        {\n            mergedSegment.getTasks().addAll( taskSegment.getTasks() );\n        }\n\n        return lifeCycleExecutionPlanCalculator.calculateExecutionPlan( session, session.getCurrentProject(),\n                                                                        mergedSegment.getTasks() );\n    }\n","realPath":"maven-core/src/test/java/org/apache/maven/lifecycle/LifecycleExecutorTest.java","repoName":"maven","snippetEndLine":0,"snippetStartLine":0,"startLine":311,"status":"N"},{"authorDate":"2010-04-20 04:57:44","commitOrder":21,"curCode":"    public MavenExecutionPlan calculateExecutionPlan( MavenSession session, String... tasks )\n        throws PluginNotFoundException, PluginResolutionException, PluginDescriptorParsingException,\n        MojoNotFoundException, NoPluginFoundForPrefixException, InvalidPluginDescriptorException,\n        PluginManagerException, LifecyclePhaseNotFoundException, LifecycleNotFoundException,\n        PluginVersionResolutionException\n    {\n\n        List<TaskSegment> taskSegments = lifecycleTaskSegmentCalculator.calculateTaskSegments( session );\n\n        TaskSegment mergedSegment = new TaskSegment( false );\n\n        for ( TaskSegment taskSegment : taskSegments )\n        {\n            mergedSegment.getTasks().addAll( taskSegment.getTasks() );\n        }\n\n        return lifecycleExecutionPlanCalculator.calculateExecutionPlan( session, session.getCurrentProject(),\n                                                                        mergedSegment.getTasks() );\n    }\n","date":"2010-04-20 04:57:44","endLine":299,"groupId":"2549","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"calculateExecutionPlan","params":"(MavenSessionsession@String...tasks)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-maven-10-0.7/blobInfo/CC_OUT/blobs/47/38101a93e463aa9a63e635612d4bb9c4153d70.src","preCode":"    public MavenExecutionPlan calculateExecutionPlan( MavenSession session, String... tasks )\n        throws PluginNotFoundException, PluginResolutionException, PluginDescriptorParsingException,\n        MojoNotFoundException, NoPluginFoundForPrefixException, InvalidPluginDescriptorException,\n        PluginManagerException, LifecyclePhaseNotFoundException, LifecycleNotFoundException,\n        PluginVersionResolutionException\n    {\n\n        List<TaskSegment> taskSegments = buildListCalculator.calculateTaskSegments( session );\n\n        TaskSegment mergedSegment = new TaskSegment( false );\n\n        for ( TaskSegment taskSegment : taskSegments )\n        {\n            mergedSegment.getTasks().addAll( taskSegment.getTasks() );\n        }\n\n        return lifecycleExecutionPlanCalculator.calculateExecutionPlan( session, session.getCurrentProject(),\n                                                                        mergedSegment.getTasks() );\n    }\n","realPath":"maven-core/src/main/java/org/apache/maven/lifecycle/DefaultLifecycleExecutor.java","repoName":"maven","snippetEndLine":0,"snippetStartLine":0,"startLine":281,"status":"M"}],"commitId":"2339e167506a3e0cdc33513f2905343564f16976","commitMessage":"@@@o Refactoring: Moved one incorrectly placed method from BuildListCalculator to TaskSegmentCalculator\n\nThis method was creating a lot of strange internal dependencies since it was mis-placed\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/maven-3/trunk@935741 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2010-04-20 04:57:44","modifiedFileCount":"9","status":"M","submitter":"Kristian Rosenvold"},{"authorTime":"2010-04-20 04:57:44","codes":[{"authorDate":"2010-08-19 04:23:21","commitOrder":22,"curCode":"    MavenExecutionPlan calculateExecutionPlan( MavenSession session, String... tasks )\n        throws PluginNotFoundException, PluginResolutionException, PluginDescriptorParsingException,\n        MojoNotFoundException, NoPluginFoundForPrefixException, InvalidPluginDescriptorException,\n        PluginManagerException, LifecyclePhaseNotFoundException, LifecycleNotFoundException,\n        PluginVersionResolutionException\n    {\n        List<TaskSegment> taskSegments =\n            lifeCycleTaskSegmentCalculator.calculateTaskSegments( session, Arrays.asList( tasks ) );\n\n        TaskSegment mergedSegment = new TaskSegment( false );\n\n        for ( TaskSegment taskSegment : taskSegments )\n        {\n            mergedSegment.getTasks().addAll( taskSegment.getTasks() );\n        }\n\n        return lifeCycleExecutionPlanCalculator.calculateExecutionPlan( session, session.getCurrentProject(),\n                                                                        mergedSegment.getTasks() );\n    }\n","date":"2010-08-19 04:23:21","endLine":326,"groupId":"2549","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"calculateExecutionPlan","params":"(MavenSessionsession@String...tasks)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-maven-10-0.7/blobInfo/CC_OUT/blobs/17/7b5d54f9c1fe0205519768c21775f7c7b074c1.src","preCode":"    MavenExecutionPlan calculateExecutionPlan( MavenSession session, String... tasks )\n        throws PluginNotFoundException, PluginResolutionException, PluginDescriptorParsingException,\n        MojoNotFoundException, NoPluginFoundForPrefixException, InvalidPluginDescriptorException,\n        PluginManagerException, LifecyclePhaseNotFoundException, LifecycleNotFoundException,\n        PluginVersionResolutionException\n    {\n        List<org.apache.maven.lifecycle.internal.TaskSegment> taskSegments =\n            lifeCycleTaskSegmentCalculator.calculateTaskSegments( session, Arrays.asList( tasks ) );\n\n        org.apache.maven.lifecycle.internal.TaskSegment mergedSegment =\n            new org.apache.maven.lifecycle.internal.TaskSegment( false );\n\n        for ( org.apache.maven.lifecycle.internal.TaskSegment taskSegment : taskSegments )\n        {\n            mergedSegment.getTasks().addAll( taskSegment.getTasks() );\n        }\n\n        return lifeCycleExecutionPlanCalculator.calculateExecutionPlan( session, session.getCurrentProject(),\n                                                                        mergedSegment.getTasks() );\n    }\n","realPath":"maven-core/src/test/java/org/apache/maven/lifecycle/LifecycleExecutorTest.java","repoName":"maven","snippetEndLine":0,"snippetStartLine":0,"startLine":308,"status":"M"},{"authorDate":"2010-04-20 04:57:44","commitOrder":22,"curCode":"    public MavenExecutionPlan calculateExecutionPlan( MavenSession session, String... tasks )\n        throws PluginNotFoundException, PluginResolutionException, PluginDescriptorParsingException,\n        MojoNotFoundException, NoPluginFoundForPrefixException, InvalidPluginDescriptorException,\n        PluginManagerException, LifecyclePhaseNotFoundException, LifecycleNotFoundException,\n        PluginVersionResolutionException\n    {\n\n        List<TaskSegment> taskSegments = lifecycleTaskSegmentCalculator.calculateTaskSegments( session );\n\n        TaskSegment mergedSegment = new TaskSegment( false );\n\n        for ( TaskSegment taskSegment : taskSegments )\n        {\n            mergedSegment.getTasks().addAll( taskSegment.getTasks() );\n        }\n\n        return lifecycleExecutionPlanCalculator.calculateExecutionPlan( session, session.getCurrentProject(),\n                                                                        mergedSegment.getTasks() );\n    }\n","date":"2010-04-20 04:57:44","endLine":299,"groupId":"2549","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"calculateExecutionPlan","params":"(MavenSessionsession@String...tasks)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-maven-10-0.7/blobInfo/CC_OUT/blobs/47/38101a93e463aa9a63e635612d4bb9c4153d70.src","preCode":"    public MavenExecutionPlan calculateExecutionPlan( MavenSession session, String... tasks )\n        throws PluginNotFoundException, PluginResolutionException, PluginDescriptorParsingException,\n        MojoNotFoundException, NoPluginFoundForPrefixException, InvalidPluginDescriptorException,\n        PluginManagerException, LifecyclePhaseNotFoundException, LifecycleNotFoundException,\n        PluginVersionResolutionException\n    {\n\n        List<TaskSegment> taskSegments = lifecycleTaskSegmentCalculator.calculateTaskSegments( session );\n\n        TaskSegment mergedSegment = new TaskSegment( false );\n\n        for ( TaskSegment taskSegment : taskSegments )\n        {\n            mergedSegment.getTasks().addAll( taskSegment.getTasks() );\n        }\n\n        return lifecycleExecutionPlanCalculator.calculateExecutionPlan( session, session.getCurrentProject(),\n                                                                        mergedSegment.getTasks() );\n    }\n","realPath":"maven-core/src/main/java/org/apache/maven/lifecycle/DefaultLifecycleExecutor.java","repoName":"maven","snippetEndLine":0,"snippetStartLine":0,"startLine":281,"status":"N"}],"commitId":"62a4bb86ce8d9a4d84429ad0c69cde9104ff8732","commitMessage":"@@@renamed *Impl classes to Default* to match usual convention\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/maven-3/trunk@986913 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2010-08-19 04:23:21","modifiedFileCount":"4","status":"M","submitter":"Herve Boutemy"},{"authorTime":"2010-04-20 04:57:44","codes":[{"authorDate":"2010-08-25 06:46:07","commitOrder":23,"curCode":"    MavenExecutionPlan calculateExecutionPlan( MavenSession session, String... tasks )\n        throws Exception\n    {\n        List<TaskSegment> taskSegments =\n            lifeCycleTaskSegmentCalculator.calculateTaskSegments( session, Arrays.asList( tasks ) );\n\n        TaskSegment mergedSegment = new TaskSegment( false );\n\n        for ( TaskSegment taskSegment : taskSegments )\n        {\n            mergedSegment.getTasks().addAll( taskSegment.getTasks() );\n        }\n\n        return lifeCycleExecutionPlanCalculator.calculateExecutionPlan( session, session.getCurrentProject(),\n                                                                        mergedSegment.getTasks() );\n    }\n","date":"2010-08-25 06:46:07","endLine":315,"groupId":"2549","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"calculateExecutionPlan","params":"(MavenSessionsession@String...tasks)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-maven-10-0.7/blobInfo/CC_OUT/blobs/b3/3649028f434923868f097ab6e8790bff8c863d.src","preCode":"    MavenExecutionPlan calculateExecutionPlan( MavenSession session, String... tasks )\n        throws PluginNotFoundException, PluginResolutionException, PluginDescriptorParsingException,\n        MojoNotFoundException, NoPluginFoundForPrefixException, InvalidPluginDescriptorException,\n        PluginManagerException, LifecyclePhaseNotFoundException, LifecycleNotFoundException,\n        PluginVersionResolutionException\n    {\n        List<TaskSegment> taskSegments =\n            lifeCycleTaskSegmentCalculator.calculateTaskSegments( session, Arrays.asList( tasks ) );\n\n        TaskSegment mergedSegment = new TaskSegment( false );\n\n        for ( TaskSegment taskSegment : taskSegments )\n        {\n            mergedSegment.getTasks().addAll( taskSegment.getTasks() );\n        }\n\n        return lifeCycleExecutionPlanCalculator.calculateExecutionPlan( session, session.getCurrentProject(),\n                                                                        mergedSegment.getTasks() );\n    }\n","realPath":"maven-core/src/test/java/org/apache/maven/lifecycle/LifecycleExecutorTest.java","repoName":"maven","snippetEndLine":0,"snippetStartLine":0,"startLine":300,"status":"M"},{"authorDate":"2010-04-20 04:57:44","commitOrder":23,"curCode":"    public MavenExecutionPlan calculateExecutionPlan( MavenSession session, String... tasks )\n        throws PluginNotFoundException, PluginResolutionException, PluginDescriptorParsingException,\n        MojoNotFoundException, NoPluginFoundForPrefixException, InvalidPluginDescriptorException,\n        PluginManagerException, LifecyclePhaseNotFoundException, LifecycleNotFoundException,\n        PluginVersionResolutionException\n    {\n\n        List<TaskSegment> taskSegments = lifecycleTaskSegmentCalculator.calculateTaskSegments( session );\n\n        TaskSegment mergedSegment = new TaskSegment( false );\n\n        for ( TaskSegment taskSegment : taskSegments )\n        {\n            mergedSegment.getTasks().addAll( taskSegment.getTasks() );\n        }\n\n        return lifecycleExecutionPlanCalculator.calculateExecutionPlan( session, session.getCurrentProject(),\n                                                                        mergedSegment.getTasks() );\n    }\n","date":"2010-04-20 04:57:44","endLine":299,"groupId":"2549","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"calculateExecutionPlan","params":"(MavenSessionsession@String...tasks)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-maven-10-0.7/blobInfo/CC_OUT/blobs/47/38101a93e463aa9a63e635612d4bb9c4153d70.src","preCode":"    public MavenExecutionPlan calculateExecutionPlan( MavenSession session, String... tasks )\n        throws PluginNotFoundException, PluginResolutionException, PluginDescriptorParsingException,\n        MojoNotFoundException, NoPluginFoundForPrefixException, InvalidPluginDescriptorException,\n        PluginManagerException, LifecyclePhaseNotFoundException, LifecycleNotFoundException,\n        PluginVersionResolutionException\n    {\n\n        List<TaskSegment> taskSegments = lifecycleTaskSegmentCalculator.calculateTaskSegments( session );\n\n        TaskSegment mergedSegment = new TaskSegment( false );\n\n        for ( TaskSegment taskSegment : taskSegments )\n        {\n            mergedSegment.getTasks().addAll( taskSegment.getTasks() );\n        }\n\n        return lifecycleExecutionPlanCalculator.calculateExecutionPlan( session, session.getCurrentProject(),\n                                                                        mergedSegment.getTasks() );\n    }\n","realPath":"maven-core/src/main/java/org/apache/maven/lifecycle/DefaultLifecycleExecutor.java","repoName":"maven","snippetEndLine":0,"snippetStartLine":0,"startLine":281,"status":"N"}],"commitId":"6c37a89744149e68f198429fb7eac70fe1707360","commitMessage":"@@@[MNG-4756] Aether integration\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/maven-3/trunk@988749 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2010-08-25 06:46:07","modifiedFileCount":"102","status":"M","submitter":"Benjamin Bentmann"},{"authorTime":"2011-01-21 08:52:20","codes":[{"authorDate":"2010-08-25 06:46:07","commitOrder":24,"curCode":"    MavenExecutionPlan calculateExecutionPlan( MavenSession session, String... tasks )\n        throws Exception\n    {\n        List<TaskSegment> taskSegments =\n            lifeCycleTaskSegmentCalculator.calculateTaskSegments( session, Arrays.asList( tasks ) );\n\n        TaskSegment mergedSegment = new TaskSegment( false );\n\n        for ( TaskSegment taskSegment : taskSegments )\n        {\n            mergedSegment.getTasks().addAll( taskSegment.getTasks() );\n        }\n\n        return lifeCycleExecutionPlanCalculator.calculateExecutionPlan( session, session.getCurrentProject(),\n                                                                        mergedSegment.getTasks() );\n    }\n","date":"2010-08-25 06:46:07","endLine":315,"groupId":"10605","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"calculateExecutionPlan","params":"(MavenSessionsession@String...tasks)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-maven-10-0.7/blobInfo/CC_OUT/blobs/b3/3649028f434923868f097ab6e8790bff8c863d.src","preCode":"    MavenExecutionPlan calculateExecutionPlan( MavenSession session, String... tasks )\n        throws Exception\n    {\n        List<TaskSegment> taskSegments =\n            lifeCycleTaskSegmentCalculator.calculateTaskSegments( session, Arrays.asList( tasks ) );\n\n        TaskSegment mergedSegment = new TaskSegment( false );\n\n        for ( TaskSegment taskSegment : taskSegments )\n        {\n            mergedSegment.getTasks().addAll( taskSegment.getTasks() );\n        }\n\n        return lifeCycleExecutionPlanCalculator.calculateExecutionPlan( session, session.getCurrentProject(),\n                                                                        mergedSegment.getTasks() );\n    }\n","realPath":"maven-core/src/test/java/org/apache/maven/lifecycle/LifecycleExecutorTest.java","repoName":"maven","snippetEndLine":0,"snippetStartLine":0,"startLine":300,"status":"N"},{"authorDate":"2011-01-21 08:52:20","commitOrder":24,"curCode":"    public MavenExecutionPlan calculateExecutionPlan( MavenSession session, boolean setup, String... tasks )\n        throws PluginNotFoundException, PluginResolutionException, PluginDescriptorParsingException,\n        MojoNotFoundException, NoPluginFoundForPrefixException, InvalidPluginDescriptorException,\n        PluginManagerException, LifecyclePhaseNotFoundException, LifecycleNotFoundException,\n        PluginVersionResolutionException\n    {\n        List<TaskSegment> taskSegments =\n            lifecycleTaskSegmentCalculator.calculateTaskSegments( session, Arrays.asList( tasks ) );\n\n        TaskSegment mergedSegment = new TaskSegment( false );\n\n        for ( TaskSegment taskSegment : taskSegments )\n        {\n            mergedSegment.getTasks().addAll( taskSegment.getTasks() );\n        }\n\n        return lifecycleExecutionPlanCalculator.calculateExecutionPlan( session, session.getCurrentProject(),\n                                                                        mergedSegment.getTasks(), setup );\n    }\n","date":"2011-01-21 08:52:20","endLine":150,"groupId":"10605","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"calculateExecutionPlan","params":"(MavenSessionsession@booleansetup@String...tasks)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-maven-10-0.7/blobInfo/CC_OUT/blobs/a7/19a0c7041032f60bdb1dbeb902e537d488a238.src","preCode":"    public MavenExecutionPlan calculateExecutionPlan( MavenSession session, String... tasks )\n        throws PluginNotFoundException, PluginResolutionException, PluginDescriptorParsingException,\n        MojoNotFoundException, NoPluginFoundForPrefixException, InvalidPluginDescriptorException,\n        PluginManagerException, LifecyclePhaseNotFoundException, LifecycleNotFoundException,\n        PluginVersionResolutionException\n    {\n\n        List<TaskSegment> taskSegments = lifecycleTaskSegmentCalculator.calculateTaskSegments( session );\n\n        TaskSegment mergedSegment = new TaskSegment( false );\n\n        for ( TaskSegment taskSegment : taskSegments )\n        {\n            mergedSegment.getTasks().addAll( taskSegment.getTasks() );\n        }\n\n        return lifecycleExecutionPlanCalculator.calculateExecutionPlan( session, session.getCurrentProject(),\n                                                                        mergedSegment.getTasks() );\n    }\n","realPath":"maven-core/src/main/java/org/apache/maven/lifecycle/DefaultLifecycleExecutor.java","repoName":"maven","snippetEndLine":0,"snippetStartLine":0,"startLine":132,"status":"M"}],"commitId":"e8f8fdbadc5bea26d0483deb11974ee45f82c29e","commitMessage":"@@@MNG-4988  API to calculate execution plan without full mojo execution configuration\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/maven-3/trunk@1061589 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2011-01-21 08:52:20","modifiedFileCount":"9","status":"M","submitter":"Igor Fedorenko"}]
