[{"authorTime":"2015-02-09 14:44:32","codes":[{"authorDate":"2015-01-25 06:37:00","commitOrder":6,"curCode":"    public MavenExecutionRequest populateFromSettings( MavenExecutionRequest request, Settings settings )\n        throws MavenExecutionRequestPopulationException\n    {\n        if ( settings == null )\n        {\n            return request;\n        }\n\n        request.setOffline( settings.isOffline() );\n\n        request.setInteractiveMode( settings.isInteractiveMode() );\n\n        request.setPluginGroups( settings.getPluginGroups() );\n\n        request.setLocalRepositoryPath( settings.getLocalRepository() );\n\n        for ( Server server : settings.getServers() )\n        {\n            server = server.clone();\n\n            request.addServer( server );\n        }\n\n        \r\n        \r\n        \r\n        \r\n        \r\n        \r\n        \r\n        \r\n        \r\n        \r\n        \r\n\n        for ( Proxy proxy : settings.getProxies() )\n        {\n            if ( !proxy.isActive() )\n            {\n                continue;\n            }\n\n            proxy = proxy.clone();\n\n            request.addProxy( proxy );\n        }\n\n        \r\n        \r\n        \r\n        \r\n        \r\n        \r\n        \r\n\n        for ( Mirror mirror : settings.getMirrors() )\n        {\n            mirror = mirror.clone();\n\n            request.addMirror( mirror );\n        }\n\n        request.setActiveProfiles( settings.getActiveProfiles() );\n\n        for ( org.apache.maven.settings.Profile rawProfile : settings.getProfiles() )\n        {\n            request.addProfile( SettingsUtils.convertFromSettingsProfile( rawProfile ) );\n\n            if ( settings.getActiveProfiles().contains( rawProfile.getId() ) )\n            {\n                List<Repository> remoteRepositories = rawProfile.getRepositories();\n                for ( Repository remoteRepository : remoteRepositories )\n                {\n                    try\n                    {\n                        request.addRemoteRepository( \n                            MavenRepositorySystem.buildArtifactRepository( remoteRepository ) );\n                    }\n                    catch ( InvalidRepositoryException e )\n                    {\n                        \r\n                    }\n                }\n                \n                List<Repository> pluginRepositories = rawProfile.getPluginRepositories();\n                for ( Repository pluginRepository : pluginRepositories )\n                {\n                    try\n                    {\n                        request.addPluginArtifactRepository( \n                            MavenRepositorySystem.buildArtifactRepository( pluginRepository ) );\n                    }\n                    catch ( InvalidRepositoryException e )\n                    {\n                        \r\n                    }\n                }                \n            }\n        }\n        return request;\n    }\n","date":"2015-03-02 02:22:26","endLine":277,"groupId":"5394","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"populateFromSettings","params":"(MavenExecutionRequestrequest@Settingssettings)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-maven-10-0.7/blobInfo/CC_OUT/blobs/89/0a6581fdf39525b9bc39c84d9c9aaa1540fb09.src","preCode":"    public MavenExecutionRequest populateFromSettings( MavenExecutionRequest request, Settings settings )\n        throws MavenExecutionRequestPopulationException\n    {\n        if ( settings == null )\n        {\n            return request;\n        }\n\n        request.setOffline( settings.isOffline() );\n\n        request.setInteractiveMode( settings.isInteractiveMode() );\n\n        request.setPluginGroups( settings.getPluginGroups() );\n\n        request.setLocalRepositoryPath( settings.getLocalRepository() );\n\n        for ( Server server : settings.getServers() )\n        {\n            server = server.clone();\n\n            request.addServer( server );\n        }\n\n        \r\n        \r\n        \r\n        \r\n        \r\n        \r\n        \r\n        \r\n        \r\n        \r\n        \r\n\n        for ( Proxy proxy : settings.getProxies() )\n        {\n            if ( !proxy.isActive() )\n            {\n                continue;\n            }\n\n            proxy = proxy.clone();\n\n            request.addProxy( proxy );\n        }\n\n        \r\n        \r\n        \r\n        \r\n        \r\n        \r\n        \r\n\n        for ( Mirror mirror : settings.getMirrors() )\n        {\n            mirror = mirror.clone();\n\n            request.addMirror( mirror );\n        }\n\n        request.setActiveProfiles( settings.getActiveProfiles() );\n\n        for ( org.apache.maven.settings.Profile rawProfile : settings.getProfiles() )\n        {\n            request.addProfile( SettingsUtils.convertFromSettingsProfile( rawProfile ) );\n\n            if ( settings.getActiveProfiles().contains( rawProfile.getId() ) )\n            {\n                List<Repository> remoteRepositories = rawProfile.getRepositories();\n                for ( Repository remoteRepository : remoteRepositories )\n                {\n                    try\n                    {\n                        request.addRemoteRepository( \n                            MavenRepositorySystem.buildArtifactRepository( remoteRepository ) );\n                    }\n                    catch ( InvalidRepositoryException e )\n                    {\n                        \r\n                    }\n                }\n                \n                List<Repository> pluginRepositories = rawProfile.getPluginRepositories();\n                for ( Repository pluginRepository : pluginRepositories )\n                {\n                    try\n                    {\n                        request.addPluginArtifactRepository( \n                            MavenRepositorySystem.buildArtifactRepository( pluginRepository ) );\n                    }\n                    catch ( InvalidRepositoryException e )\n                    {\n                        \r\n                    }\n                }                \n            }\n        }\n        return request;\n    }\n","realPath":"maven-embedder/src/main/java/org/apache/maven/cli/configuration/SettingsXmlConfigurationProcessor.java","repoName":"maven","snippetEndLine":0,"snippetStartLine":0,"startLine":177,"status":"B"},{"authorDate":"2015-02-09 14:44:32","commitOrder":6,"curCode":"    public MavenExecutionRequest populateFromSettings( MavenExecutionRequest request, Settings settings )\n        throws MavenExecutionRequestPopulationException\n    {\n        if ( settings == null )\n        {\n            return request;\n        }\n\n        request.setOffline( settings.isOffline() );\n\n        request.setInteractiveMode( settings.isInteractiveMode() );\n\n        request.setPluginGroups( settings.getPluginGroups() );\n\n        request.setLocalRepositoryPath( settings.getLocalRepository() );\n\n        for ( Server server : settings.getServers() )\n        {\n            server = server.clone();\n\n            request.addServer( server );\n        }\n\n        \r\n        \r\n        \r\n        \r\n        \r\n        \r\n        \r\n        \r\n        \r\n        \r\n        \r\n\n        for ( Proxy proxy : settings.getProxies() )\n        {\n            if ( !proxy.isActive() )\n            {\n                continue;\n            }\n\n            proxy = proxy.clone();\n\n            request.addProxy( proxy );\n        }\n\n        \r\n        \r\n        \r\n        \r\n        \r\n        \r\n        \r\n\n        for ( Mirror mirror : settings.getMirrors() )\n        {\n            mirror = mirror.clone();\n\n            request.addMirror( mirror );\n        }\n\n        request.setActiveProfiles( settings.getActiveProfiles() );\n\n        for ( org.apache.maven.settings.Profile rawProfile : settings.getProfiles() )\n        {\n            request.addProfile( SettingsUtils.convertFromSettingsProfile( rawProfile ) );\n\n            if ( settings.getActiveProfiles().contains( rawProfile.getId() ) )\n            {\n                List<Repository> remoteRepositories = rawProfile.getRepositories();\n                for ( Repository remoteRepository : remoteRepositories )\n                {\n                    try\n                    {\n                        request.addRemoteRepository( repositorySystem.buildArtifactRepository( remoteRepository ) );\n                    }\n                    catch ( InvalidRepositoryException e )\n                    {\n                        \r\n                    }\n                }\n\n                List<Repository> pluginRepositories = rawProfile.getPluginRepositories();\n                for ( Repository pluginRepository : pluginRepositories )\n                {\n                    try\n                    {\n                        request.addPluginArtifactRepository( repositorySystem.buildArtifactRepository( pluginRepository ) );\n                    }\n                    catch ( InvalidRepositoryException e )\n                    {\n                        \r\n                    }\n                }\n            }\n        }\n\n        return request;\n    }\n","date":"2015-02-09 14:44:32","endLine":165,"groupId":"5394","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"populateFromSettings","params":"(MavenExecutionRequestrequest@Settingssettings)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-maven-10-0.7/blobInfo/CC_OUT/blobs/fa/c1eb9cdefb50a57dedf5b6b042ba7c4971169a.src","preCode":"    public MavenExecutionRequest populateFromSettings( MavenExecutionRequest request, Settings settings )\n        throws MavenExecutionRequestPopulationException\n    {\n        if ( settings == null )\n        {\n            return request;\n        }\n\n        request.setOffline( settings.isOffline() );\n\n        request.setInteractiveMode( settings.isInteractiveMode() );\n\n        request.setPluginGroups( settings.getPluginGroups() );\n\n        request.setLocalRepositoryPath( settings.getLocalRepository() );\n\n        for ( Server server : settings.getServers() )\n        {\n            server = server.clone();\n\n            request.addServer( server );\n        }\n\n        \r\n        \r\n        \r\n        \r\n        \r\n        \r\n        \r\n        \r\n        \r\n        \r\n        \r\n\n        for ( Proxy proxy : settings.getProxies() )\n        {\n            if ( !proxy.isActive() )\n            {\n                continue;\n            }\n\n            proxy = proxy.clone();\n\n            request.addProxy( proxy );\n        }\n\n        \r\n        \r\n        \r\n        \r\n        \r\n        \r\n        \r\n\n        for ( Mirror mirror : settings.getMirrors() )\n        {\n            mirror = mirror.clone();\n\n            request.addMirror( mirror );\n        }\n\n        request.setActiveProfiles( settings.getActiveProfiles() );\n\n        for ( org.apache.maven.settings.Profile rawProfile : settings.getProfiles() )\n        {\n            request.addProfile( SettingsUtils.convertFromSettingsProfile( rawProfile ) );\n\n            if ( settings.getActiveProfiles().contains( rawProfile.getId() ) )\n            {\n                List<Repository> remoteRepositories = rawProfile.getRepositories();\n                for ( Repository remoteRepository : remoteRepositories )\n                {\n                    try\n                    {\n                        request.addRemoteRepository( repositorySystem.buildArtifactRepository( remoteRepository ) );\n                    }\n                    catch ( InvalidRepositoryException e )\n                    {\n                        \r\n                    }\n                }\n\n                List<Repository> pluginRepositories = rawProfile.getPluginRepositories();\n                for ( Repository pluginRepository : pluginRepositories )\n                {\n                    try\n                    {\n                        request.addPluginArtifactRepository( repositorySystem.buildArtifactRepository( pluginRepository ) );\n                    }\n                    catch ( InvalidRepositoryException e )\n                    {\n                        \r\n                    }\n                }\n            }\n        }\n\n        return request;\n    }\n","realPath":"maven-core/src/main/java/org/apache/maven/execution/DefaultMavenExecutionRequestPopulator.java","repoName":"maven","snippetEndLine":0,"snippetStartLine":0,"startLine":66,"status":"NB"}],"commitId":"7997634209cf2e666aa94ece24e089da179d8aa3","commitMessage":"@@@MNG-5774 Provide an extension point for alternate CLI configuration source\n","date":"2015-03-02 02:22:26","modifiedFileCount":"7","status":"M","submitter":"Jason van Zyl"},{"authorTime":"2015-03-04 10:17:46","codes":[{"authorDate":"2015-01-25 06:37:00","commitOrder":7,"curCode":"    public MavenExecutionRequest populateFromSettings( MavenExecutionRequest request, Settings settings )\n        throws MavenExecutionRequestPopulationException\n    {\n        if ( settings == null )\n        {\n            return request;\n        }\n\n        request.setOffline( settings.isOffline() );\n\n        request.setInteractiveMode( settings.isInteractiveMode() );\n\n        request.setPluginGroups( settings.getPluginGroups() );\n\n        request.setLocalRepositoryPath( settings.getLocalRepository() );\n\n        for ( Server server : settings.getServers() )\n        {\n            server = server.clone();\n\n            request.addServer( server );\n        }\n\n        \r\n        \r\n        \r\n        \r\n        \r\n        \r\n        \r\n        \r\n        \r\n        \r\n        \r\n\n        for ( Proxy proxy : settings.getProxies() )\n        {\n            if ( !proxy.isActive() )\n            {\n                continue;\n            }\n\n            proxy = proxy.clone();\n\n            request.addProxy( proxy );\n        }\n\n        \r\n        \r\n        \r\n        \r\n        \r\n        \r\n        \r\n\n        for ( Mirror mirror : settings.getMirrors() )\n        {\n            mirror = mirror.clone();\n\n            request.addMirror( mirror );\n        }\n\n        request.setActiveProfiles( settings.getActiveProfiles() );\n\n        for ( org.apache.maven.settings.Profile rawProfile : settings.getProfiles() )\n        {\n            request.addProfile( SettingsUtils.convertFromSettingsProfile( rawProfile ) );\n\n            if ( settings.getActiveProfiles().contains( rawProfile.getId() ) )\n            {\n                List<Repository> remoteRepositories = rawProfile.getRepositories();\n                for ( Repository remoteRepository : remoteRepositories )\n                {\n                    try\n                    {\n                        request.addRemoteRepository( \n                            MavenRepositorySystem.buildArtifactRepository( remoteRepository ) );\n                    }\n                    catch ( InvalidRepositoryException e )\n                    {\n                        \r\n                    }\n                }\n                \n                List<Repository> pluginRepositories = rawProfile.getPluginRepositories();\n                for ( Repository pluginRepository : pluginRepositories )\n                {\n                    try\n                    {\n                        request.addPluginArtifactRepository( \n                            MavenRepositorySystem.buildArtifactRepository( pluginRepository ) );\n                    }\n                    catch ( InvalidRepositoryException e )\n                    {\n                        \r\n                    }\n                }                \n            }\n        }\n        return request;\n    }\n","date":"2015-03-02 02:22:26","endLine":277,"groupId":"5394","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"populateFromSettings","params":"(MavenExecutionRequestrequest@Settingssettings)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-maven-10-0.7/blobInfo/CC_OUT/blobs/89/0a6581fdf39525b9bc39c84d9c9aaa1540fb09.src","preCode":"    public MavenExecutionRequest populateFromSettings( MavenExecutionRequest request, Settings settings )\n        throws MavenExecutionRequestPopulationException\n    {\n        if ( settings == null )\n        {\n            return request;\n        }\n\n        request.setOffline( settings.isOffline() );\n\n        request.setInteractiveMode( settings.isInteractiveMode() );\n\n        request.setPluginGroups( settings.getPluginGroups() );\n\n        request.setLocalRepositoryPath( settings.getLocalRepository() );\n\n        for ( Server server : settings.getServers() )\n        {\n            server = server.clone();\n\n            request.addServer( server );\n        }\n\n        \r\n        \r\n        \r\n        \r\n        \r\n        \r\n        \r\n        \r\n        \r\n        \r\n        \r\n\n        for ( Proxy proxy : settings.getProxies() )\n        {\n            if ( !proxy.isActive() )\n            {\n                continue;\n            }\n\n            proxy = proxy.clone();\n\n            request.addProxy( proxy );\n        }\n\n        \r\n        \r\n        \r\n        \r\n        \r\n        \r\n        \r\n\n        for ( Mirror mirror : settings.getMirrors() )\n        {\n            mirror = mirror.clone();\n\n            request.addMirror( mirror );\n        }\n\n        request.setActiveProfiles( settings.getActiveProfiles() );\n\n        for ( org.apache.maven.settings.Profile rawProfile : settings.getProfiles() )\n        {\n            request.addProfile( SettingsUtils.convertFromSettingsProfile( rawProfile ) );\n\n            if ( settings.getActiveProfiles().contains( rawProfile.getId() ) )\n            {\n                List<Repository> remoteRepositories = rawProfile.getRepositories();\n                for ( Repository remoteRepository : remoteRepositories )\n                {\n                    try\n                    {\n                        request.addRemoteRepository( \n                            MavenRepositorySystem.buildArtifactRepository( remoteRepository ) );\n                    }\n                    catch ( InvalidRepositoryException e )\n                    {\n                        \r\n                    }\n                }\n                \n                List<Repository> pluginRepositories = rawProfile.getPluginRepositories();\n                for ( Repository pluginRepository : pluginRepositories )\n                {\n                    try\n                    {\n                        request.addPluginArtifactRepository( \n                            MavenRepositorySystem.buildArtifactRepository( pluginRepository ) );\n                    }\n                    catch ( InvalidRepositoryException e )\n                    {\n                        \r\n                    }\n                }                \n            }\n        }\n        return request;\n    }\n","realPath":"maven-embedder/src/main/java/org/apache/maven/cli/configuration/SettingsXmlConfigurationProcessor.java","repoName":"maven","snippetEndLine":0,"snippetStartLine":0,"startLine":177,"status":"N"},{"authorDate":"2015-03-04 10:17:46","commitOrder":7,"curCode":"    public MavenExecutionRequest populateFromSettings( MavenExecutionRequest request, Settings settings )\n        throws MavenExecutionRequestPopulationException\n    {\n        if ( settings == null )\n        {\n            return request;\n        }\n\n        request.setOffline( settings.isOffline() );\n\n        request.setInteractiveMode( settings.isInteractiveMode() );\n\n        request.setPluginGroups( settings.getPluginGroups() );\n\n        request.setLocalRepositoryPath( settings.getLocalRepository() );\n\n        for ( Server server : settings.getServers() )\n        {\n            server = server.clone();\n\n            request.addServer( server );\n        }\n\n        \r\n        \r\n        \r\n        \r\n        \r\n        \r\n        \r\n        \r\n        \r\n        \r\n        \r\n\n        for ( Proxy proxy : settings.getProxies() )\n        {\n            if ( !proxy.isActive() )\n            {\n                continue;\n            }\n\n            proxy = proxy.clone();\n\n            request.addProxy( proxy );\n        }\n\n        \r\n        \r\n        \r\n        \r\n        \r\n        \r\n        \r\n\n        for ( Mirror mirror : settings.getMirrors() )\n        {\n            mirror = mirror.clone();\n\n            request.addMirror( mirror );\n        }\n\n        request.setActiveProfiles( settings.getActiveProfiles() );\n\n        for ( org.apache.maven.settings.Profile rawProfile : settings.getProfiles() )\n        {\n            request.addProfile( SettingsUtils.convertFromSettingsProfile( rawProfile ) );\n\n            if ( settings.getActiveProfiles().contains( rawProfile.getId() ) )\n            {\n                List<Repository> remoteRepositories = rawProfile.getRepositories();\n                for ( Repository remoteRepository : remoteRepositories )\n                {\n                    try\n                    {\n                        request.addRemoteRepository( repositorySystem.buildArtifactRepository( remoteRepository ) );\n                    }\n                    catch ( InvalidRepositoryException e )\n                    {\n                        \r\n                    }\n                }\n\n                List<Repository> pluginRepositories = rawProfile.getPluginRepositories();\n                for ( Repository pluginRepo : pluginRepositories )\n                {\n                    try\n                    {\n                        request.addPluginArtifactRepository( repositorySystem.buildArtifactRepository( pluginRepo ) );\n                    }\n                    catch ( InvalidRepositoryException e )\n                    {\n                        \r\n                    }\n                }\n            }\n        }\n\n        return request;\n    }\n","date":"2015-03-04 10:17:46","endLine":165,"groupId":"5394","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"populateFromSettings","params":"(MavenExecutionRequestrequest@Settingssettings)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-maven-10-0.7/blobInfo/CC_OUT/blobs/ed/b29ce9902268ab4b61f5df68aad91fe65ee155.src","preCode":"    public MavenExecutionRequest populateFromSettings( MavenExecutionRequest request, Settings settings )\n        throws MavenExecutionRequestPopulationException\n    {\n        if ( settings == null )\n        {\n            return request;\n        }\n\n        request.setOffline( settings.isOffline() );\n\n        request.setInteractiveMode( settings.isInteractiveMode() );\n\n        request.setPluginGroups( settings.getPluginGroups() );\n\n        request.setLocalRepositoryPath( settings.getLocalRepository() );\n\n        for ( Server server : settings.getServers() )\n        {\n            server = server.clone();\n\n            request.addServer( server );\n        }\n\n        \r\n        \r\n        \r\n        \r\n        \r\n        \r\n        \r\n        \r\n        \r\n        \r\n        \r\n\n        for ( Proxy proxy : settings.getProxies() )\n        {\n            if ( !proxy.isActive() )\n            {\n                continue;\n            }\n\n            proxy = proxy.clone();\n\n            request.addProxy( proxy );\n        }\n\n        \r\n        \r\n        \r\n        \r\n        \r\n        \r\n        \r\n\n        for ( Mirror mirror : settings.getMirrors() )\n        {\n            mirror = mirror.clone();\n\n            request.addMirror( mirror );\n        }\n\n        request.setActiveProfiles( settings.getActiveProfiles() );\n\n        for ( org.apache.maven.settings.Profile rawProfile : settings.getProfiles() )\n        {\n            request.addProfile( SettingsUtils.convertFromSettingsProfile( rawProfile ) );\n\n            if ( settings.getActiveProfiles().contains( rawProfile.getId() ) )\n            {\n                List<Repository> remoteRepositories = rawProfile.getRepositories();\n                for ( Repository remoteRepository : remoteRepositories )\n                {\n                    try\n                    {\n                        request.addRemoteRepository( repositorySystem.buildArtifactRepository( remoteRepository ) );\n                    }\n                    catch ( InvalidRepositoryException e )\n                    {\n                        \r\n                    }\n                }\n\n                List<Repository> pluginRepositories = rawProfile.getPluginRepositories();\n                for ( Repository pluginRepository : pluginRepositories )\n                {\n                    try\n                    {\n                        request.addPluginArtifactRepository( repositorySystem.buildArtifactRepository( pluginRepository ) );\n                    }\n                    catch ( InvalidRepositoryException e )\n                    {\n                        \r\n                    }\n                }\n            }\n        }\n\n        return request;\n    }\n","realPath":"maven-core/src/main/java/org/apache/maven/execution/DefaultMavenExecutionRequestPopulator.java","repoName":"maven","snippetEndLine":0,"snippetStartLine":0,"startLine":66,"status":"M"}],"commitId":"eecdc9a1719f8220e5c4a9633f75cf3845752b26","commitMessage":"@@@reintroduced LineLength Checkstyle rule and fixed code...","date":"2015-03-04 10:17:46","modifiedFileCount":"41","status":"M","submitter":"Herv? Boutemy"},{"authorTime":"2015-03-04 10:17:46","codes":[{"authorDate":"2015-04-02 12:21:00","commitOrder":8,"curCode":"    private MavenExecutionRequest populateFromSettings( MavenExecutionRequest request, Settings settings )\n        throws MavenExecutionRequestPopulationException\n    {\n        if ( settings == null )\n        {\n            return request;\n        }\n\n        request.setOffline( settings.isOffline() );\n\n        request.setInteractiveMode( settings.isInteractiveMode() );\n\n        request.setPluginGroups( settings.getPluginGroups() );\n\n        request.setLocalRepositoryPath( settings.getLocalRepository() );\n\n        for ( Server server : settings.getServers() )\n        {\n            server = server.clone();\n\n            request.addServer( server );\n        }\n\n        \r\n        \r\n        \r\n        \r\n        \r\n        \r\n        \r\n        \r\n        \r\n        \r\n        \r\n\n        for ( Proxy proxy : settings.getProxies() )\n        {\n            if ( !proxy.isActive() )\n            {\n                continue;\n            }\n\n            proxy = proxy.clone();\n\n            request.addProxy( proxy );\n        }\n\n        \r\n        \r\n        \r\n        \r\n        \r\n        \r\n        \r\n\n        for ( Mirror mirror : settings.getMirrors() )\n        {\n            mirror = mirror.clone();\n\n            request.addMirror( mirror );\n        }\n\n        request.setActiveProfiles( settings.getActiveProfiles() );\n\n        for ( org.apache.maven.settings.Profile rawProfile : settings.getProfiles() )\n        {\n            request.addProfile( SettingsUtils.convertFromSettingsProfile( rawProfile ) );\n\n            if ( settings.getActiveProfiles().contains( rawProfile.getId() ) )\n            {\n                List<Repository> remoteRepositories = rawProfile.getRepositories();\n                for ( Repository remoteRepository : remoteRepositories )\n                {\n                    try\n                    {\n                        request.addRemoteRepository( \n                            MavenRepositorySystem.buildArtifactRepository( remoteRepository ) );\n                    }\n                    catch ( InvalidRepositoryException e )\n                    {\n                        \r\n                    }\n                }\n                \n                List<Repository> pluginRepositories = rawProfile.getPluginRepositories();\n                for ( Repository pluginRepository : pluginRepositories )\n                {\n                    try\n                    {\n                        request.addPluginArtifactRepository( \n                            MavenRepositorySystem.buildArtifactRepository( pluginRepository ) );\n                    }\n                    catch ( InvalidRepositoryException e )\n                    {\n                        \r\n                    }\n                }                \n            }\n        }\n        return request;\n    }\n","date":"2015-04-02 12:49:50","endLine":259,"groupId":"10325","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"populateFromSettings","params":"(MavenExecutionRequestrequest@Settingssettings)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-maven-10-0.7/blobInfo/CC_OUT/blobs/79/1a2267478385094a71dad7fbe4c2c1a7426097.src","preCode":"    public MavenExecutionRequest populateFromSettings( MavenExecutionRequest request, Settings settings )\n        throws MavenExecutionRequestPopulationException\n    {\n        if ( settings == null )\n        {\n            return request;\n        }\n\n        request.setOffline( settings.isOffline() );\n\n        request.setInteractiveMode( settings.isInteractiveMode() );\n\n        request.setPluginGroups( settings.getPluginGroups() );\n\n        request.setLocalRepositoryPath( settings.getLocalRepository() );\n\n        for ( Server server : settings.getServers() )\n        {\n            server = server.clone();\n\n            request.addServer( server );\n        }\n\n        \r\n        \r\n        \r\n        \r\n        \r\n        \r\n        \r\n        \r\n        \r\n        \r\n        \r\n\n        for ( Proxy proxy : settings.getProxies() )\n        {\n            if ( !proxy.isActive() )\n            {\n                continue;\n            }\n\n            proxy = proxy.clone();\n\n            request.addProxy( proxy );\n        }\n\n        \r\n        \r\n        \r\n        \r\n        \r\n        \r\n        \r\n\n        for ( Mirror mirror : settings.getMirrors() )\n        {\n            mirror = mirror.clone();\n\n            request.addMirror( mirror );\n        }\n\n        request.setActiveProfiles( settings.getActiveProfiles() );\n\n        for ( org.apache.maven.settings.Profile rawProfile : settings.getProfiles() )\n        {\n            request.addProfile( SettingsUtils.convertFromSettingsProfile( rawProfile ) );\n\n            if ( settings.getActiveProfiles().contains( rawProfile.getId() ) )\n            {\n                List<Repository> remoteRepositories = rawProfile.getRepositories();\n                for ( Repository remoteRepository : remoteRepositories )\n                {\n                    try\n                    {\n                        request.addRemoteRepository( \n                            MavenRepositorySystem.buildArtifactRepository( remoteRepository ) );\n                    }\n                    catch ( InvalidRepositoryException e )\n                    {\n                        \r\n                    }\n                }\n                \n                List<Repository> pluginRepositories = rawProfile.getPluginRepositories();\n                for ( Repository pluginRepository : pluginRepositories )\n                {\n                    try\n                    {\n                        request.addPluginArtifactRepository( \n                            MavenRepositorySystem.buildArtifactRepository( pluginRepository ) );\n                    }\n                    catch ( InvalidRepositoryException e )\n                    {\n                        \r\n                    }\n                }                \n            }\n        }\n        return request;\n    }\n","realPath":"maven-embedder/src/main/java/org/apache/maven/cli/configuration/SettingsXmlConfigurationProcessor.java","repoName":"maven","snippetEndLine":0,"snippetStartLine":0,"startLine":159,"status":"M"},{"authorDate":"2015-03-04 10:17:46","commitOrder":8,"curCode":"    public MavenExecutionRequest populateFromSettings( MavenExecutionRequest request, Settings settings )\n        throws MavenExecutionRequestPopulationException\n    {\n        if ( settings == null )\n        {\n            return request;\n        }\n\n        request.setOffline( settings.isOffline() );\n\n        request.setInteractiveMode( settings.isInteractiveMode() );\n\n        request.setPluginGroups( settings.getPluginGroups() );\n\n        request.setLocalRepositoryPath( settings.getLocalRepository() );\n\n        for ( Server server : settings.getServers() )\n        {\n            server = server.clone();\n\n            request.addServer( server );\n        }\n\n        \r\n        \r\n        \r\n        \r\n        \r\n        \r\n        \r\n        \r\n        \r\n        \r\n        \r\n\n        for ( Proxy proxy : settings.getProxies() )\n        {\n            if ( !proxy.isActive() )\n            {\n                continue;\n            }\n\n            proxy = proxy.clone();\n\n            request.addProxy( proxy );\n        }\n\n        \r\n        \r\n        \r\n        \r\n        \r\n        \r\n        \r\n\n        for ( Mirror mirror : settings.getMirrors() )\n        {\n            mirror = mirror.clone();\n\n            request.addMirror( mirror );\n        }\n\n        request.setActiveProfiles( settings.getActiveProfiles() );\n\n        for ( org.apache.maven.settings.Profile rawProfile : settings.getProfiles() )\n        {\n            request.addProfile( SettingsUtils.convertFromSettingsProfile( rawProfile ) );\n\n            if ( settings.getActiveProfiles().contains( rawProfile.getId() ) )\n            {\n                List<Repository> remoteRepositories = rawProfile.getRepositories();\n                for ( Repository remoteRepository : remoteRepositories )\n                {\n                    try\n                    {\n                        request.addRemoteRepository( repositorySystem.buildArtifactRepository( remoteRepository ) );\n                    }\n                    catch ( InvalidRepositoryException e )\n                    {\n                        \r\n                    }\n                }\n\n                List<Repository> pluginRepositories = rawProfile.getPluginRepositories();\n                for ( Repository pluginRepo : pluginRepositories )\n                {\n                    try\n                    {\n                        request.addPluginArtifactRepository( repositorySystem.buildArtifactRepository( pluginRepo ) );\n                    }\n                    catch ( InvalidRepositoryException e )\n                    {\n                        \r\n                    }\n                }\n            }\n        }\n\n        return request;\n    }\n","date":"2015-03-04 10:17:46","endLine":165,"groupId":"10325","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"populateFromSettings","params":"(MavenExecutionRequestrequest@Settingssettings)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-maven-10-0.7/blobInfo/CC_OUT/blobs/ed/b29ce9902268ab4b61f5df68aad91fe65ee155.src","preCode":"    public MavenExecutionRequest populateFromSettings( MavenExecutionRequest request, Settings settings )\n        throws MavenExecutionRequestPopulationException\n    {\n        if ( settings == null )\n        {\n            return request;\n        }\n\n        request.setOffline( settings.isOffline() );\n\n        request.setInteractiveMode( settings.isInteractiveMode() );\n\n        request.setPluginGroups( settings.getPluginGroups() );\n\n        request.setLocalRepositoryPath( settings.getLocalRepository() );\n\n        for ( Server server : settings.getServers() )\n        {\n            server = server.clone();\n\n            request.addServer( server );\n        }\n\n        \r\n        \r\n        \r\n        \r\n        \r\n        \r\n        \r\n        \r\n        \r\n        \r\n        \r\n\n        for ( Proxy proxy : settings.getProxies() )\n        {\n            if ( !proxy.isActive() )\n            {\n                continue;\n            }\n\n            proxy = proxy.clone();\n\n            request.addProxy( proxy );\n        }\n\n        \r\n        \r\n        \r\n        \r\n        \r\n        \r\n        \r\n\n        for ( Mirror mirror : settings.getMirrors() )\n        {\n            mirror = mirror.clone();\n\n            request.addMirror( mirror );\n        }\n\n        request.setActiveProfiles( settings.getActiveProfiles() );\n\n        for ( org.apache.maven.settings.Profile rawProfile : settings.getProfiles() )\n        {\n            request.addProfile( SettingsUtils.convertFromSettingsProfile( rawProfile ) );\n\n            if ( settings.getActiveProfiles().contains( rawProfile.getId() ) )\n            {\n                List<Repository> remoteRepositories = rawProfile.getRepositories();\n                for ( Repository remoteRepository : remoteRepositories )\n                {\n                    try\n                    {\n                        request.addRemoteRepository( repositorySystem.buildArtifactRepository( remoteRepository ) );\n                    }\n                    catch ( InvalidRepositoryException e )\n                    {\n                        \r\n                    }\n                }\n\n                List<Repository> pluginRepositories = rawProfile.getPluginRepositories();\n                for ( Repository pluginRepo : pluginRepositories )\n                {\n                    try\n                    {\n                        request.addPluginArtifactRepository( repositorySystem.buildArtifactRepository( pluginRepo ) );\n                    }\n                    catch ( InvalidRepositoryException e )\n                    {\n                        \r\n                    }\n                }\n            }\n        }\n\n        return request;\n    }\n","realPath":"maven-core/src/main/java/org/apache/maven/execution/DefaultMavenExecutionRequestPopulator.java","repoName":"maven","snippetEndLine":0,"snippetStartLine":0,"startLine":66,"status":"N"}],"commitId":"56e6db123150d08c15f1920ed8cc571480161b3c","commitMessage":"@@@MNG-5795: Maven extensions can not be retrieved from authenticated repositories\n","date":"2015-04-02 12:49:50","modifiedFileCount":"4","status":"M","submitter":"Jason van Zyl"}]
