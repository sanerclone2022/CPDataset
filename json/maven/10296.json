[{"authorTime":"2009-06-28 19:16:34","codes":[{"authorDate":"2009-06-28 19:16:34","commitOrder":1,"curCode":"    public void transformForResolve( Artifact artifact,\n                                     List<ArtifactRepository> remoteRepositories,\n                                     ArtifactRepository localRepository )\n        throws ArtifactResolutionException, ArtifactNotFoundException\n    {\n        if ( Artifact.RELEASE_VERSION.equals( artifact.getVersion() ) )\n        {\n            try\n            {\n                String version = resolveVersion( artifact, localRepository, remoteRepositories );\n\n                if ( Artifact.RELEASE_VERSION.equals( version ) )\n                {\n                    throw new ArtifactNotFoundException( \"Unable to determine the release version\", artifact );\n                }\n\n                artifact.setBaseVersion( version );\n                artifact.updateVersion( version, localRepository );\n            }\n            catch ( RepositoryMetadataResolutionException e )\n            {\n                throw new ArtifactResolutionException( e.getMessage(), artifact, e );\n            }\n        }\n    }\n","date":"2009-06-28 19:16:34","endLine":68,"groupId":"1230","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"transformForResolve","params":"(Artifactartifact@List<ArtifactRepository>remoteRepositories@ArtifactRepositorylocalRepository)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-maven-10-0.7/blobInfo/CC_OUT/blobs/95/262b6e64634d727a920ccb1d45fb894ccbd3d0.src","preCode":"    public void transformForResolve( Artifact artifact,\n                                     List<ArtifactRepository> remoteRepositories,\n                                     ArtifactRepository localRepository )\n        throws ArtifactResolutionException, ArtifactNotFoundException\n    {\n        if ( Artifact.RELEASE_VERSION.equals( artifact.getVersion() ) )\n        {\n            try\n            {\n                String version = resolveVersion( artifact, localRepository, remoteRepositories );\n\n                if ( Artifact.RELEASE_VERSION.equals( version ) )\n                {\n                    throw new ArtifactNotFoundException( \"Unable to determine the release version\", artifact );\n                }\n\n                artifact.setBaseVersion( version );\n                artifact.updateVersion( version, localRepository );\n            }\n            catch ( RepositoryMetadataResolutionException e )\n            {\n                throw new ArtifactResolutionException( e.getMessage(), artifact, e );\n            }\n        }\n    }\n","realPath":"maven-compat/src/main/java/org/apache/maven/repository/legacy/resolver/transform/ReleaseArtifactTransformation.java","repoName":"maven","snippetEndLine":0,"snippetStartLine":0,"startLine":44,"status":"B"},{"authorDate":"2009-06-28 19:16:34","commitOrder":1,"curCode":"    public void transformForResolve( Artifact artifact,\n                                     List<ArtifactRepository> remoteRepositories,\n                                     ArtifactRepository localRepository )\n        throws ArtifactResolutionException, ArtifactNotFoundException\n    {\n        if ( Artifact.LATEST_VERSION.equals( artifact.getVersion() ) )\n        {\n            try\n            {\n                String version = resolveVersion( artifact, localRepository, remoteRepositories );\n                if ( Artifact.LATEST_VERSION.equals( version ) )\n                {\n                    throw new ArtifactNotFoundException( \"Unable to determine the latest version\", artifact );\n                }\n\n                artifact.setBaseVersion( version );\n                artifact.updateVersion( version, localRepository );\n            }\n            catch ( RepositoryMetadataResolutionException e )\n            {\n                throw new ArtifactResolutionException( e.getMessage(), artifact, e );\n            }\n        }\n    }\n","date":"2009-06-28 19:16:34","endLine":59,"groupId":"1230","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"transformForResolve","params":"(Artifactartifact@List<ArtifactRepository>remoteRepositories@ArtifactRepositorylocalRepository)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-maven-10-0.7/blobInfo/CC_OUT/blobs/6d/fe5271595ba51b9de54d8b831f35676147ccd5.src","preCode":"    public void transformForResolve( Artifact artifact,\n                                     List<ArtifactRepository> remoteRepositories,\n                                     ArtifactRepository localRepository )\n        throws ArtifactResolutionException, ArtifactNotFoundException\n    {\n        if ( Artifact.LATEST_VERSION.equals( artifact.getVersion() ) )\n        {\n            try\n            {\n                String version = resolveVersion( artifact, localRepository, remoteRepositories );\n                if ( Artifact.LATEST_VERSION.equals( version ) )\n                {\n                    throw new ArtifactNotFoundException( \"Unable to determine the latest version\", artifact );\n                }\n\n                artifact.setBaseVersion( version );\n                artifact.updateVersion( version, localRepository );\n            }\n            catch ( RepositoryMetadataResolutionException e )\n            {\n                throw new ArtifactResolutionException( e.getMessage(), artifact, e );\n            }\n        }\n    }\n","realPath":"maven-compat/src/main/java/org/apache/maven/repository/legacy/resolver/transform/LatestArtifactTransformation.java","repoName":"maven","snippetEndLine":0,"snippetStartLine":0,"startLine":36,"status":"B"}],"commitId":"ee5dd78bd1a0b96edf2cc53480b342bb74b9a173","commitMessage":"@@@MNG-4221: hide the artifact transformation classes\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@789088 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2009-06-28 19:16:34","modifiedFileCount":"4","status":"B","submitter":"Jason van Zyl"},{"authorTime":"2010-04-01 03:50:06","codes":[{"authorDate":"2010-04-01 03:50:06","commitOrder":2,"curCode":"    public void transformForResolve( Artifact artifact, RepositoryRequest request )\n        throws ArtifactResolutionException, ArtifactNotFoundException\n    {\n        if ( Artifact.RELEASE_VERSION.equals( artifact.getVersion() ) )\n        {\n            try\n            {\n                String version = resolveVersion( artifact, request );\n\n                if ( Artifact.RELEASE_VERSION.equals( version ) )\n                {\n                    throw new ArtifactNotFoundException( \"Unable to determine the release version\", artifact );\n                }\n\n                artifact.setBaseVersion( version );\n                artifact.updateVersion( version, request.getLocalRepository() );\n            }\n            catch ( RepositoryMetadataResolutionException e )\n            {\n                throw new ArtifactResolutionException( e.getMessage(), artifact, e );\n            }\n        }\n    }\n","date":"2010-04-01 03:50:06","endLine":66,"groupId":"10296","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"transformForResolve","params":"(Artifactartifact@RepositoryRequestrequest)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-maven-10-0.7/blobInfo/CC_OUT/blobs/69/6620d48fde6cc9c1561170c26bef6e4446b401.src","preCode":"    public void transformForResolve( Artifact artifact,\n                                     List<ArtifactRepository> remoteRepositories,\n                                     ArtifactRepository localRepository )\n        throws ArtifactResolutionException, ArtifactNotFoundException\n    {\n        if ( Artifact.RELEASE_VERSION.equals( artifact.getVersion() ) )\n        {\n            try\n            {\n                String version = resolveVersion( artifact, localRepository, remoteRepositories );\n\n                if ( Artifact.RELEASE_VERSION.equals( version ) )\n                {\n                    throw new ArtifactNotFoundException( \"Unable to determine the release version\", artifact );\n                }\n\n                artifact.setBaseVersion( version );\n                artifact.updateVersion( version, localRepository );\n            }\n            catch ( RepositoryMetadataResolutionException e )\n            {\n                throw new ArtifactResolutionException( e.getMessage(), artifact, e );\n            }\n        }\n    }\n","realPath":"maven-compat/src/main/java/org/apache/maven/repository/legacy/resolver/transform/ReleaseArtifactTransformation.java","repoName":"maven","snippetEndLine":0,"snippetStartLine":0,"startLine":44,"status":"M"},{"authorDate":"2010-04-01 03:50:06","commitOrder":2,"curCode":"    public void transformForResolve( Artifact artifact, RepositoryRequest request )\n        throws ArtifactResolutionException, ArtifactNotFoundException\n    {\n        if ( Artifact.LATEST_VERSION.equals( artifact.getVersion() ) )\n        {\n            try\n            {\n                String version = resolveVersion( artifact, request );\n                if ( Artifact.LATEST_VERSION.equals( version ) )\n                {\n                    throw new ArtifactNotFoundException( \"Unable to determine the latest version\", artifact );\n                }\n\n                artifact.setBaseVersion( version );\n                artifact.updateVersion( version, request.getLocalRepository() );\n            }\n            catch ( RepositoryMetadataResolutionException e )\n            {\n                throw new ArtifactResolutionException( e.getMessage(), artifact, e );\n            }\n        }\n    }\n","date":"2010-04-01 03:50:06","endLine":57,"groupId":"10296","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"transformForResolve","params":"(Artifactartifact@RepositoryRequestrequest)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-maven-10-0.7/blobInfo/CC_OUT/blobs/61/6a86545e1cb493c378daa93da6570fe8102f60.src","preCode":"    public void transformForResolve( Artifact artifact,\n                                     List<ArtifactRepository> remoteRepositories,\n                                     ArtifactRepository localRepository )\n        throws ArtifactResolutionException, ArtifactNotFoundException\n    {\n        if ( Artifact.LATEST_VERSION.equals( artifact.getVersion() ) )\n        {\n            try\n            {\n                String version = resolveVersion( artifact, localRepository, remoteRepositories );\n                if ( Artifact.LATEST_VERSION.equals( version ) )\n                {\n                    throw new ArtifactNotFoundException( \"Unable to determine the latest version\", artifact );\n                }\n\n                artifact.setBaseVersion( version );\n                artifact.updateVersion( version, localRepository );\n            }\n            catch ( RepositoryMetadataResolutionException e )\n            {\n                throw new ArtifactResolutionException( e.getMessage(), artifact, e );\n            }\n        }\n    }\n","realPath":"maven-compat/src/main/java/org/apache/maven/repository/legacy/resolver/transform/LatestArtifactTransformation.java","repoName":"maven","snippetEndLine":0,"snippetStartLine":0,"startLine":36,"status":"M"}],"commitId":"ceef52904f772dffab7c8f63a3124001e7fcbefb","commitMessage":"@@@[MNG-4555] mvn archetype:generate -o (offline) still results in a \"checking updates from central\"\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/maven-3/trunk@929691 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2010-04-01 03:50:06","modifiedFileCount":"4","status":"M","submitter":"Benjamin Bentmann"}]
