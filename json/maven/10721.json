[{"authorTime":"2009-10-02 14:51:50","codes":[{"authorDate":"2009-10-02 14:51:50","commitOrder":1,"curCode":"    private void injectDefaultRepositories( MavenExecutionRequest request )\n        throws MavenExecutionRequestPopulationException\n    {\n        Set<String> definedRepositories = getRepoIds( request.getRemoteRepositories() );\n\n        if ( !definedRepositories.contains( RepositorySystem.DEFAULT_REMOTE_REPO_ID ) )\n        {\n            try\n            {\n                request.addRemoteRepository( repositorySystem.createDefaultRemoteRepository() );\n            }\n            catch ( InvalidRepositoryException e )\n            {\n                throw new MavenExecutionRequestPopulationException( \"Cannot create default remote repository.\", e );\n            }\n        }\n    }\n","date":"2009-10-02 14:51:50","endLine":213,"groupId":"4818","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"injectDefaultRepositories","params":"(MavenExecutionRequestrequest)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-maven-10-0.7/blobInfo/CC_OUT/blobs/bc/a6a4c0885cb3c6f54541bb60d066cd6a41f7a3.src","preCode":"    private void injectDefaultRepositories( MavenExecutionRequest request )\n        throws MavenExecutionRequestPopulationException\n    {\n        Set<String> definedRepositories = getRepoIds( request.getRemoteRepositories() );\n\n        if ( !definedRepositories.contains( RepositorySystem.DEFAULT_REMOTE_REPO_ID ) )\n        {\n            try\n            {\n                request.addRemoteRepository( repositorySystem.createDefaultRemoteRepository() );\n            }\n            catch ( InvalidRepositoryException e )\n            {\n                throw new MavenExecutionRequestPopulationException( \"Cannot create default remote repository.\", e );\n            }\n        }\n    }\n","realPath":"maven-core/src/main/java/org/apache/maven/execution/DefaultMavenExecutionRequestPopulator.java","repoName":"maven","snippetEndLine":0,"snippetStartLine":0,"startLine":197,"status":"B"},{"authorDate":"2009-10-02 14:51:50","commitOrder":1,"curCode":"    private void injectDefaultPluginRepositories( MavenExecutionRequest request )\n        throws MavenExecutionRequestPopulationException\n    {\n        Set<String> definedRepositories = getRepoIds( request.getPluginArtifactRepositories() );\n\n        if ( !definedRepositories.contains( RepositorySystem.DEFAULT_REMOTE_REPO_ID ) )\n        {\n            try\n            {\n                request.addPluginArtifactRepository( repositorySystem.createDefaultRemoteRepository() );\n            }\n            catch ( InvalidRepositoryException e )\n            {\n                throw new MavenExecutionRequestPopulationException( \"Cannot create default remote repository.\", e );\n            }\n        }\n    }\n","date":"2009-10-02 14:51:50","endLine":231,"groupId":"4818","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"injectDefaultPluginRepositories","params":"(MavenExecutionRequestrequest)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-maven-10-0.7/blobInfo/CC_OUT/blobs/bc/a6a4c0885cb3c6f54541bb60d066cd6a41f7a3.src","preCode":"    private void injectDefaultPluginRepositories( MavenExecutionRequest request )\n        throws MavenExecutionRequestPopulationException\n    {\n        Set<String> definedRepositories = getRepoIds( request.getPluginArtifactRepositories() );\n\n        if ( !definedRepositories.contains( RepositorySystem.DEFAULT_REMOTE_REPO_ID ) )\n        {\n            try\n            {\n                request.addPluginArtifactRepository( repositorySystem.createDefaultRemoteRepository() );\n            }\n            catch ( InvalidRepositoryException e )\n            {\n                throw new MavenExecutionRequestPopulationException( \"Cannot create default remote repository.\", e );\n            }\n        }\n    }\n","realPath":"maven-core/src/main/java/org/apache/maven/execution/DefaultMavenExecutionRequestPopulator.java","repoName":"maven","snippetEndLine":0,"snippetStartLine":0,"startLine":215,"status":"B"}],"commitId":"dc92f346104249da7ff785cda8b40eefb291c785","commitMessage":"@@@o first pass at cleaning up the embedding pattern\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/maven-3/trunk@820905 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2009-10-02 14:51:50","modifiedFileCount":"4","status":"B","submitter":"Jason van Zyl"},{"authorTime":"2015-02-08 21:41:05","codes":[{"authorDate":"2015-02-08 21:41:05","commitOrder":2,"curCode":"    private void injectDefaultRepositories( MavenExecutionRequest request )\n        throws MavenExecutionRequestPopulationException\n    {\n        Set<String> definedRepositories = getRepoIds( request.getRemoteRepositories() );\n\n        if ( !definedRepositories.contains( RepositorySystem.DEFAULT_REMOTE_REPO_ID ) )\n        {\n            try\n            {\n                request.addRemoteRepository( createDefaultRemoteRepository( request ) );\n            }\n            catch ( Exception e )\n            {\n                throw new MavenExecutionRequestPopulationException( \"Cannot create default remote repository.\", e );\n            }\n        }\n    }\n","date":"2015-02-09 11:26:48","endLine":250,"groupId":"2292","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"injectDefaultRepositories","params":"(MavenExecutionRequestrequest)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-maven-10-0.7/blobInfo/CC_OUT/blobs/dc/2521c672b1e5774e3c1ce34fa7cbf8d97ca66a.src","preCode":"    private void injectDefaultRepositories( MavenExecutionRequest request )\n        throws MavenExecutionRequestPopulationException\n    {\n        Set<String> definedRepositories = getRepoIds( request.getRemoteRepositories() );\n\n        if ( !definedRepositories.contains( RepositorySystem.DEFAULT_REMOTE_REPO_ID ) )\n        {\n            try\n            {\n                request.addRemoteRepository( repositorySystem.createDefaultRemoteRepository() );\n            }\n            catch ( InvalidRepositoryException e )\n            {\n                throw new MavenExecutionRequestPopulationException( \"Cannot create default remote repository.\", e );\n            }\n        }\n    }\n","realPath":"maven-core/src/main/java/org/apache/maven/execution/DefaultMavenExecutionRequestPopulator.java","repoName":"maven","snippetEndLine":0,"snippetStartLine":0,"startLine":234,"status":"M"},{"authorDate":"2015-02-08 21:41:05","commitOrder":2,"curCode":"    private void injectDefaultPluginRepositories( MavenExecutionRequest request )\n        throws MavenExecutionRequestPopulationException\n    {\n        Set<String> definedRepositories = getRepoIds( request.getPluginArtifactRepositories() );\n\n        if ( !definedRepositories.contains( RepositorySystem.DEFAULT_REMOTE_REPO_ID ) )\n        {\n            try\n            {\n                request.addPluginArtifactRepository( createDefaultRemoteRepository( request ) );\n            }\n            catch ( Exception e )\n            {\n                throw new MavenExecutionRequestPopulationException( \"Cannot create default remote repository.\", e );\n            }\n        }\n    }\n","date":"2015-02-09 11:26:48","endLine":268,"groupId":"2292","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"injectDefaultPluginRepositories","params":"(MavenExecutionRequestrequest)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-maven-10-0.7/blobInfo/CC_OUT/blobs/dc/2521c672b1e5774e3c1ce34fa7cbf8d97ca66a.src","preCode":"    private void injectDefaultPluginRepositories( MavenExecutionRequest request )\n        throws MavenExecutionRequestPopulationException\n    {\n        Set<String> definedRepositories = getRepoIds( request.getPluginArtifactRepositories() );\n\n        if ( !definedRepositories.contains( RepositorySystem.DEFAULT_REMOTE_REPO_ID ) )\n        {\n            try\n            {\n                request.addPluginArtifactRepository( repositorySystem.createDefaultRemoteRepository() );\n            }\n            catch ( InvalidRepositoryException e )\n            {\n                throw new MavenExecutionRequestPopulationException( \"Cannot create default remote repository.\", e );\n            }\n        }\n    }\n","realPath":"maven-core/src/main/java/org/apache/maven/execution/DefaultMavenExecutionRequestPopulator.java","repoName":"maven","snippetEndLine":0,"snippetStartLine":0,"startLine":252,"status":"M"}],"commitId":"2d34e67eedb2dd8e9856beae7ccee53f62f1a1ee","commitMessage":"@@@First pass at cleaning up MavenExecutionRequestPopulator and its use.\n\nPush MavenExecutionRequestPopulator down to only operate in the MavenCli. Two of the three methods were already called from MavenCli so now all of them are. In the process I deleted a bunch of code and pursue my quest to remove Settings from the core in order to make a general configuration mechanism that can be plugged into the core via the MavenCli.\n\nAlso removed the requirement of the LegacyRepositorySystem in the DefaultMavenExecutionRequestPopulator which breaks another tie with the legacy code. I took the bits that were needed and a lot of the code.  after tracing through it.  is redundant so it has been deleted.\n\nTurning off:\n\ninjectMirror( request.  request.getRemoteRepositories().  request.getMirrors() );\ninjectMirror( request.  request.getPluginArtifactRepositories().  request.getMirrors() );\n\nin DefaultMavenExecutionRequestPopulator\n\nResults :\n\nFailed tests:\n  MavenITmng4190MirrorRepoMergingTest>AbstractMavenIntegrationTestCase.runTest:220->testit:76 null expected:<[1]> but was:<[4]>\n\nTests in error:\n  MavenITmng4991NonProxyHostsTest>AbstractMavenIntegrationTestCase.runTest:220->testit:89 ?? Verification\n  MavenITmng4963ParentResolutionFromMirrorTest>AbstractMavenIntegrationTestCase.runTest:220->testit:58 ?? Verification\n\nThere is mirror evaluation code in DefaultMaven:newRepositorySession( MavenExecutionRequest request ) which appears to\nduplicate this logic but not quite enough for the ITs to pass.\n\n---\n\nTurning off:\n\ninjectProxy( request.getRemoteRepositories().  request.getProxies() );\ninjectProxy( request.getPluginArtifactRepositories().  request.getProxies() );\n\nin\n\nDefaultMavenExecutionRequestPopulator\n\nResult:\n\nThe ITs pass\n\nSo the code is not needed so it has been deleted.\n\n---\n\nTurning off:\n\ninjectProxy( request.getRemoteRepositories().  request.getProxies() );\ninjectProxy( request.getPluginArtifactRepositories().  request.getProxies() );\ninjectAuthentication( request.getRemoteRepositories().  request.getServers() );\ninjectAuthentication( request.getPluginArtifactRepositories().  request.getServers() );\n\nin\n\nDefaultMavenExecutionRequestPopulator\n\nResult:\n\nThe ITs pass\n\nThe code in DefaultMaven:newRepositorySession( MavenExecutionRequest request ) appears to populate proxies and authentication correctly. The injectAuthentication code has been deleted.\n\n---\n\nThis is also perfunctory in DefaultMavenExecutionRequestPopulator after tracing through it:\n\nrequest.setRemoteRepositories( getEffectiveRepositories( request.  request.getRemoteRepositories() ) );\nrequest.setPluginArtifactRepositories( getEffectiveRepositories( request.  request.getPluginArtifactRepositories() ) );\n","date":"2015-02-09 11:26:48","modifiedFileCount":"5","status":"M","submitter":"Jason van Zyl"},{"authorTime":"2015-02-09 14:44:32","codes":[{"authorDate":"2015-02-09 14:44:32","commitOrder":3,"curCode":"    private void injectDefaultRepositories( MavenExecutionRequest request )\n        throws MavenExecutionRequestPopulationException\n    {\n        Set<String> definedRepositories = repositorySystem.getRepoIds( request.getRemoteRepositories() );\n\n        if ( !definedRepositories.contains( RepositorySystem.DEFAULT_REMOTE_REPO_ID ) )\n        {\n            try\n            {\n                request.addRemoteRepository( repositorySystem.createDefaultRemoteRepository( request ) );\n            }\n            catch ( Exception e )\n            {\n                throw new MavenExecutionRequestPopulationException( \"Cannot create default remote repository.\", e );\n            }\n        }\n    }\n","date":"2015-02-09 14:44:32","endLine":235,"groupId":"10721","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"injectDefaultRepositories","params":"(MavenExecutionRequestrequest)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-maven-10-0.7/blobInfo/CC_OUT/blobs/fa/c1eb9cdefb50a57dedf5b6b042ba7c4971169a.src","preCode":"    private void injectDefaultRepositories( MavenExecutionRequest request )\n        throws MavenExecutionRequestPopulationException\n    {\n        Set<String> definedRepositories = getRepoIds( request.getRemoteRepositories() );\n\n        if ( !definedRepositories.contains( RepositorySystem.DEFAULT_REMOTE_REPO_ID ) )\n        {\n            try\n            {\n                request.addRemoteRepository( createDefaultRemoteRepository( request ) );\n            }\n            catch ( Exception e )\n            {\n                throw new MavenExecutionRequestPopulationException( \"Cannot create default remote repository.\", e );\n            }\n        }\n    }\n","realPath":"maven-core/src/main/java/org/apache/maven/execution/DefaultMavenExecutionRequestPopulator.java","repoName":"maven","snippetEndLine":0,"snippetStartLine":0,"startLine":219,"status":"M"},{"authorDate":"2015-02-09 14:44:32","commitOrder":3,"curCode":"    private void injectDefaultPluginRepositories( MavenExecutionRequest request )\n        throws MavenExecutionRequestPopulationException\n    {\n        Set<String> definedRepositories = repositorySystem.getRepoIds( request.getPluginArtifactRepositories() );\n\n        if ( !definedRepositories.contains( RepositorySystem.DEFAULT_REMOTE_REPO_ID ) )\n        {\n            try\n            {\n                request.addPluginArtifactRepository( repositorySystem.createDefaultRemoteRepository( request ) );\n            }\n            catch ( Exception e )\n            {\n                throw new MavenExecutionRequestPopulationException( \"Cannot create default remote repository.\", e );\n            }\n        }\n    }\n","date":"2015-02-09 14:44:32","endLine":253,"groupId":"10721","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"injectDefaultPluginRepositories","params":"(MavenExecutionRequestrequest)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-maven-10-0.7/blobInfo/CC_OUT/blobs/fa/c1eb9cdefb50a57dedf5b6b042ba7c4971169a.src","preCode":"    private void injectDefaultPluginRepositories( MavenExecutionRequest request )\n        throws MavenExecutionRequestPopulationException\n    {\n        Set<String> definedRepositories = getRepoIds( request.getPluginArtifactRepositories() );\n\n        if ( !definedRepositories.contains( RepositorySystem.DEFAULT_REMOTE_REPO_ID ) )\n        {\n            try\n            {\n                request.addPluginArtifactRepository( createDefaultRemoteRepository( request ) );\n            }\n            catch ( Exception e )\n            {\n                throw new MavenExecutionRequestPopulationException( \"Cannot create default remote repository.\", e );\n            }\n        }\n    }\n","realPath":"maven-core/src/main/java/org/apache/maven/execution/DefaultMavenExecutionRequestPopulator.java","repoName":"maven","snippetEndLine":0,"snippetStartLine":0,"startLine":237,"status":"M"}],"commitId":"dd5eb31a08ae84f560c36ad1145d835ffd90b1ee","commitMessage":"@@@Fold back into MavenRepositorySystem and work from there to clean up all references to the legacy system and Settings.\n","date":"2015-02-09 14:44:32","modifiedFileCount":"4","status":"M","submitter":"Jason van Zyl"}]
