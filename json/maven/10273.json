[{"authorTime":"2009-10-27 04:16:00","codes":[{"authorDate":"2009-08-04 01:15:11","commitOrder":3,"curCode":"        private void evaluateArray( Object target )\n        {\n            int len = Array.getLength( target );\n            for( int i = 0; i < len; i++ )\n            {\n                Object value = Array.get( target, i );\n                if ( value != null )\n                {\n                    if ( String.class == value.getClass() )\n                    {\n                        String interpolated =\n                            modelInterpolator.interpolateInternal( (String) value, valueSources, postProcessors,\n                                                                   problems );\n                        \n                        if ( !interpolated.equals( value ) )\n                        {\n                            Array.set( target, i, interpolated );\n                        }\n                    }\n                    else\n                    {\n                        interpolationTargets.add( value );\n                    }\n                }\n            }\n        }\n","date":"2009-08-04 01:15:11","endLine":363,"groupId":"4464","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"evaluateArray","params":"(Objecttarget)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-maven-10-0.7/blobInfo/CC_OUT/blobs/a2/656fbf54a9ec00df3241d641d42e381ec57968.src","preCode":"        private void evaluateArray( Object target )\n        {\n            int len = Array.getLength( target );\n            for( int i = 0; i < len; i++ )\n            {\n                Object value = Array.get( target, i );\n                if ( value != null )\n                {\n                    if ( String.class == value.getClass() )\n                    {\n                        String interpolated =\n                            modelInterpolator.interpolateInternal( (String) value, valueSources, postProcessors,\n                                                                   problems );\n                        \n                        if ( !interpolated.equals( value ) )\n                        {\n                            Array.set( target, i, interpolated );\n                        }\n                    }\n                    else\n                    {\n                        interpolationTargets.add( value );\n                    }\n                }\n            }\n        }\n","realPath":"maven-model-builder/src/main/java/org/apache/maven/model/interpolation/StringSearchModelInterpolator.java","repoName":"maven","snippetEndLine":0,"snippetStartLine":0,"startLine":338,"status":"NB"},{"authorDate":"2009-10-27 04:16:00","commitOrder":3,"curCode":"        private void evaluateArray( Object target )\n            throws ModelInterpolationException\n        {\n            int len = Array.getLength( target );\n            for( int i = 0; i < len; i++ )\n            {\n                Object value = Array.get( target, i );\n                if ( value != null )\n                {\n                    if ( String.class == value.getClass() )\n                    {\n                        String interpolated = modelInterpolator.interpolateInternal( (String) value, valueSources, postProcessors, debugEnabled );\n                        \n                        if ( !interpolated.equals( value ) )\n                        {\n                            Array.set( target, i, interpolated );\n                        }\n                    }\n                    else\n                    {\n                        interpolationTargets.add( value );\n                    }\n                }\n            }\n        }\n","date":"2009-10-27 04:16:00","endLine":388,"groupId":"2620","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"evaluateArray","params":"(Objecttarget)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-maven-10-0.7/blobInfo/CC_OUT/blobs/59/5fb81f772c5cdfa77561c65bc706222b65fc22.src","preCode":"        private void evaluateArray( Object target )\n            throws ModelInterpolationException\n        {\n            int len = Array.getLength( target );\n            for( int i = 0; i < len; i++ )\n            {\n                Object value = Array.get( target, i );\n                if ( value != null )\n                {\n                    if ( String.class == value.getClass() )\n                    {\n                        String interpolated = modelInterpolator.interpolateInternal( (String) value, valueSources, postProcessors, debugEnabled );\n                        \n                        if ( !interpolated.equals( value ) )\n                        {\n                            Array.set( target, i, interpolated );\n                        }\n                    }\n                    else\n                    {\n                        interpolationTargets.add( value );\n                    }\n                }\n            }\n        }\n","realPath":"maven-compat/src/main/java/org/apache/maven/project/interpolation/StringSearchModelInterpolator.java","repoName":"maven","snippetEndLine":0,"snippetStartLine":0,"startLine":364,"status":"B"}],"commitId":"20f8323b0a993799f77db49c787829449a17b8c0","commitMessage":"@@@[MNG-4221] Push all repository/artifact related code into a legacy module and create a backward compat layer for external consumers\n\no Refactored code to make maven-compat depend on maven-core.  this got ugly regarding some tests which to a high degree depend on a full-blown repository system\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/maven-3/trunk@829934 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2009-10-27 04:16:00","modifiedFileCount":"12","status":"M","submitter":"Benjamin Bentmann"},{"authorTime":"2009-10-27 04:16:00","codes":[{"authorDate":"2012-08-22 22:55:33","commitOrder":4,"curCode":"        private static void evaluateArray( Object target, InterpolateObjectAction ctx )\n        {\n            int len = Array.getLength( target );\n            for ( int i = 0; i < len; i++ )\n            {\n                Object value = Array.get( target, i );\n                if ( value != null )\n                {\n                    if ( String.class == value.getClass() )\n                    {\n                        String interpolated = ctx.interpolate( (String) value );\n\n                        if ( !interpolated.equals( value ) )\n                        {\n                            Array.set( target, i, interpolated );\n                        }\n                    }\n                    else\n                    {\n                        ctx.interpolationTargets.add( value );\n                    }\n                }\n            }\n        }\n","date":"2012-08-22 22:55:33","endLine":216,"groupId":"10273","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"evaluateArray","params":"(Objecttarget@InterpolateObjectActionctx)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-maven-10-0.7/blobInfo/CC_OUT/blobs/28/a5273c3bfb3033de0445315e8ea36d945450df.src","preCode":"        private void evaluateArray( Object target )\n        {\n            int len = Array.getLength( target );\n            for ( int i = 0; i < len; i++ )\n            {\n                Object value = Array.get( target, i );\n                if ( value != null )\n                {\n                    if ( String.class == value.getClass() )\n                    {\n                        String interpolated =\n                            modelInterpolator.interpolateInternal( (String) value, valueSources, postProcessors,\n                                                                   problems );\n\n                        if ( !interpolated.equals( value ) )\n                        {\n                            Array.set( target, i, interpolated );\n                        }\n                    }\n                    else\n                    {\n                        interpolationTargets.add( value );\n                    }\n                }\n            }\n        }\n","realPath":"maven-model-builder/src/main/java/org/apache/maven/model/interpolation/StringSearchModelInterpolator.java","repoName":"maven","snippetEndLine":0,"snippetStartLine":0,"startLine":193,"status":"M"},{"authorDate":"2009-10-27 04:16:00","commitOrder":4,"curCode":"        private void evaluateArray( Object target )\n            throws ModelInterpolationException\n        {\n            int len = Array.getLength( target );\n            for( int i = 0; i < len; i++ )\n            {\n                Object value = Array.get( target, i );\n                if ( value != null )\n                {\n                    if ( String.class == value.getClass() )\n                    {\n                        String interpolated = modelInterpolator.interpolateInternal( (String) value, valueSources, postProcessors, debugEnabled );\n                        \n                        if ( !interpolated.equals( value ) )\n                        {\n                            Array.set( target, i, interpolated );\n                        }\n                    }\n                    else\n                    {\n                        interpolationTargets.add( value );\n                    }\n                }\n            }\n        }\n","date":"2009-10-27 04:16:00","endLine":388,"groupId":"10273","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"evaluateArray","params":"(Objecttarget)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-maven-10-0.7/blobInfo/CC_OUT/blobs/59/5fb81f772c5cdfa77561c65bc706222b65fc22.src","preCode":"        private void evaluateArray( Object target )\n            throws ModelInterpolationException\n        {\n            int len = Array.getLength( target );\n            for( int i = 0; i < len; i++ )\n            {\n                Object value = Array.get( target, i );\n                if ( value != null )\n                {\n                    if ( String.class == value.getClass() )\n                    {\n                        String interpolated = modelInterpolator.interpolateInternal( (String) value, valueSources, postProcessors, debugEnabled );\n                        \n                        if ( !interpolated.equals( value ) )\n                        {\n                            Array.set( target, i, interpolated );\n                        }\n                    }\n                    else\n                    {\n                        interpolationTargets.add( value );\n                    }\n                }\n            }\n        }\n","realPath":"maven-compat/src/main/java/org/apache/maven/project/interpolation/StringSearchModelInterpolator.java","repoName":"maven","snippetEndLine":0,"snippetStartLine":0,"startLine":364,"status":"N"}],"commitId":"100bbd031b2cc30024ae0036735e72455b404a30","commitMessage":"@@@o Optimized the cache around the hotspot in interpolation somewhat\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/maven-3/trunk@1376085 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2012-08-22 22:55:33","modifiedFileCount":"1","status":"M","submitter":"Kristian Rosenvold"}]
