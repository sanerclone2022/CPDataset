[{"authorTime":"2019-08-05 22:47:27","codes":[{"authorDate":"2019-08-05 22:47:27","commitOrder":1,"curCode":"    public void testNotInterpolateObjectWithFile()\n            throws Exception\n    {\n        Model model = new Model();\n\n        File baseDir = new File( System.getProperty( \"user.dir\" ) );\n\n        Properties p = new Properties();\n\n        ObjectWithNotInterpolatedFile obj = new ObjectWithNotInterpolatedFile( baseDir );\n\n        StringSearchModelInterpolator interpolator = (StringSearchModelInterpolator) createInterpolator();\n\n        ModelBuildingRequest config = createModelBuildingRequest( p );\n\n        SimpleProblemCollector collector = new SimpleProblemCollector();\n        interpolator.interpolateObject( obj, model, new File( \".\" ), config, collector );\n        assertProblemFree( collector );\n\n        \r\n        Map<Class<?>, ?> cache =\n                (Map<Class<?>, ?>) getField( StringSearchModelInterpolator.class, \"CACHED_ENTRIES\" )\n                        .get( null );\n\n        Object objCacheItem = cache.get( Object.class );\n        Object fileCacheItem = cache.get( File.class );\n\n        assertNotNull( objCacheItem );\n        assertNotNull( fileCacheItem );\n\n        assertThat( ( (Object[]) getInternalState( objCacheItem, \"fields\" ) ).length, is( 0 ) );\n        assertThat( ( (Object[]) getInternalState( fileCacheItem, \"fields\" ) ).length, is( 0 ) );\n    }\n","date":"2019-08-09 22:00:03","endLine":409,"groupId":"6846","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testNotInterpolateObjectWithFile","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-maven-10-0.7/blobInfo/CC_OUT/blobs/b6/6abcade2a95c2d8e25ca30e5114ab94df40fcb.src","preCode":"    public void testNotInterpolateObjectWithFile()\n            throws Exception\n    {\n        Model model = new Model();\n\n        File baseDir = new File( System.getProperty( \"user.dir\" ) );\n\n        Properties p = new Properties();\n\n        ObjectWithNotInterpolatedFile obj = new ObjectWithNotInterpolatedFile( baseDir );\n\n        StringSearchModelInterpolator interpolator = (StringSearchModelInterpolator) createInterpolator();\n\n        ModelBuildingRequest config = createModelBuildingRequest( p );\n\n        SimpleProblemCollector collector = new SimpleProblemCollector();\n        interpolator.interpolateObject( obj, model, new File( \".\" ), config, collector );\n        assertProblemFree( collector );\n\n        \r\n        Map<Class<?>, ?> cache =\n                (Map<Class<?>, ?>) getField( StringSearchModelInterpolator.class, \"CACHED_ENTRIES\" )\n                        .get( null );\n\n        Object objCacheItem = cache.get( Object.class );\n        Object fileCacheItem = cache.get( File.class );\n\n        assertNotNull( objCacheItem );\n        assertNotNull( fileCacheItem );\n\n        assertThat( ( (Object[]) getInternalState( objCacheItem, \"fields\" ) ).length, is( 0 ) );\n        assertThat( ( (Object[]) getInternalState( fileCacheItem, \"fields\" ) ).length, is( 0 ) );\n    }\n","realPath":"maven-model-builder/src/test/java/org/apache/maven/model/interpolation/StringSearchModelInterpolatorTest.java","repoName":"maven","snippetEndLine":0,"snippetStartLine":0,"startLine":377,"status":"B"},{"authorDate":"2019-08-05 22:47:27","commitOrder":1,"curCode":"    public void testNotInterpolateFile()\n            throws Exception\n    {\n        Model model = new Model();\n\n        File baseDir = new File( System.getProperty( \"user.dir\" ) );\n\n        Properties p = new Properties();\n\n        StringSearchModelInterpolator interpolator = (StringSearchModelInterpolator) createInterpolator();\n\n        ModelBuildingRequest config = createModelBuildingRequest( p );\n\n        SimpleProblemCollector collector = new SimpleProblemCollector();\n        interpolator.interpolateObject( baseDir, model, new File( \".\" ), config, collector );\n        assertProblemFree( collector );\n\n        \r\n        Map<Class<?>, ?> cache =\n                (Map<Class<?>, ?>) getField( StringSearchModelInterpolator.class, \"CACHED_ENTRIES\" )\n                        .get( null );\n\n        Object fileCacheItem = cache.get( File.class );\n\n        assertNotNull( fileCacheItem );\n\n        assertThat( ( (Object[]) getInternalState( fileCacheItem, \"fields\" ) ).length, is( 0 ) );\n    }\n","date":"2019-08-09 22:00:03","endLine":438,"groupId":"6847","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testNotInterpolateFile","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-maven-10-0.7/blobInfo/CC_OUT/blobs/b6/6abcade2a95c2d8e25ca30e5114ab94df40fcb.src","preCode":"    public void testNotInterpolateFile()\n            throws Exception\n    {\n        Model model = new Model();\n\n        File baseDir = new File( System.getProperty( \"user.dir\" ) );\n\n        Properties p = new Properties();\n\n        StringSearchModelInterpolator interpolator = (StringSearchModelInterpolator) createInterpolator();\n\n        ModelBuildingRequest config = createModelBuildingRequest( p );\n\n        SimpleProblemCollector collector = new SimpleProblemCollector();\n        interpolator.interpolateObject( baseDir, model, new File( \".\" ), config, collector );\n        assertProblemFree( collector );\n\n        \r\n        Map<Class<?>, ?> cache =\n                (Map<Class<?>, ?>) getField( StringSearchModelInterpolator.class, \"CACHED_ENTRIES\" )\n                        .get( null );\n\n        Object fileCacheItem = cache.get( File.class );\n\n        assertNotNull( fileCacheItem );\n\n        assertThat( ( (Object[]) getInternalState( fileCacheItem, \"fields\" ) ).length, is( 0 ) );\n    }\n","realPath":"maven-model-builder/src/test/java/org/apache/maven/model/interpolation/StringSearchModelInterpolatorTest.java","repoName":"maven","snippetEndLine":0,"snippetStartLine":0,"startLine":411,"status":"B"}],"commitId":"203cfc67cc4cf58662a4f05477878c6c735acb91","commitMessage":"@@@[MNG-6729] StringSearchModelInterpolator introspects objects from Java API\n","date":"2019-08-09 22:00:03","modifiedFileCount":"2","status":"B","submitter":"tibordigana"},{"authorTime":"2020-01-26 23:59:44","codes":[{"authorDate":"2020-01-26 23:59:44","commitOrder":2,"curCode":"    public void testNotInterpolateObjectWithFile()\n            throws Exception\n    {\n        Model model = new Model();\n\n        File baseDir = new File( System.getProperty( \"user.dir\" ) );\n\n        Properties p = new Properties();\n\n        ObjectWithNotInterpolatedFile obj = new ObjectWithNotInterpolatedFile( baseDir );\n\n        StringSearchModelInterpolator interpolator = (StringSearchModelInterpolator) createInterpolator();\n\n        ModelBuildingRequest config = createModelBuildingRequest( p );\n\n        SimpleProblemCollector collector = new SimpleProblemCollector();\n        interpolator.interpolateObject( obj, model, new File( \".\" ), config, collector );\n        assertProblemFree( collector );\n\n        Map<Class<?>, ?> cache = getCachedEntries();\n\n        Object objCacheItem = cache.get( Object.class );\n        Object fileCacheItem = cache.get( File.class );\n\n        assertNotNull( objCacheItem );\n        assertNotNull( fileCacheItem );\n\n        assertThat( readFieldsArray( objCacheItem ).length, is( 0 ) );\n        assertThat( readFieldsArray( fileCacheItem ).length, is( 0 ) );\n    }\n","date":"2020-05-04 04:09:25","endLine":396,"groupId":"1017","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testNotInterpolateObjectWithFile","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-maven-10-0.7/blobInfo/CC_OUT/blobs/47/9f68172f9a3ff6832c4c83800a4e32832294a3.src","preCode":"    public void testNotInterpolateObjectWithFile()\n            throws Exception\n    {\n        Model model = new Model();\n\n        File baseDir = new File( System.getProperty( \"user.dir\" ) );\n\n        Properties p = new Properties();\n\n        ObjectWithNotInterpolatedFile obj = new ObjectWithNotInterpolatedFile( baseDir );\n\n        StringSearchModelInterpolator interpolator = (StringSearchModelInterpolator) createInterpolator();\n\n        ModelBuildingRequest config = createModelBuildingRequest( p );\n\n        SimpleProblemCollector collector = new SimpleProblemCollector();\n        interpolator.interpolateObject( obj, model, new File( \".\" ), config, collector );\n        assertProblemFree( collector );\n\n        \r\n        Map<Class<?>, ?> cache =\n                (Map<Class<?>, ?>) getField( StringSearchModelInterpolator.class, \"CACHED_ENTRIES\" )\n                        .get( null );\n\n        Object objCacheItem = cache.get( Object.class );\n        Object fileCacheItem = cache.get( File.class );\n\n        assertNotNull( objCacheItem );\n        assertNotNull( fileCacheItem );\n\n        assertThat( ( (Object[]) getInternalState( objCacheItem, \"fields\" ) ).length, is( 0 ) );\n        assertThat( ( (Object[]) getInternalState( fileCacheItem, \"fields\" ) ).length, is( 0 ) );\n    }\n","realPath":"maven-model-builder/src/test/java/org/apache/maven/model/interpolation/StringSearchModelInterpolatorTest.java","repoName":"maven","snippetEndLine":0,"snippetStartLine":0,"startLine":367,"status":"M"},{"authorDate":"2020-01-26 23:59:44","commitOrder":2,"curCode":"    public void testNotInterpolateFile()\n            throws Exception\n    {\n        Model model = new Model();\n\n        File baseDir = new File( System.getProperty( \"user.dir\" ) );\n\n        Properties p = new Properties();\n\n        StringSearchModelInterpolator interpolator = (StringSearchModelInterpolator) createInterpolator();\n\n        ModelBuildingRequest config = createModelBuildingRequest( p );\n\n        SimpleProblemCollector collector = new SimpleProblemCollector();\n        interpolator.interpolateObject( baseDir, model, new File( \".\" ), config, collector );\n        assertProblemFree( collector );\n\n        Map<Class<?>, ?> cache = getCachedEntries();\n\n        Object fileCacheItem = cache.get( File.class );\n\n        assertNotNull( fileCacheItem );\n\n        assertThat( readFieldsArray( fileCacheItem ).length, is( 0 ) );\n    }\n","date":"2020-05-04 04:09:25","endLine":438,"groupId":"1017","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testNotInterpolateFile","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-maven-10-0.7/blobInfo/CC_OUT/blobs/47/9f68172f9a3ff6832c4c83800a4e32832294a3.src","preCode":"    public void testNotInterpolateFile()\n            throws Exception\n    {\n        Model model = new Model();\n\n        File baseDir = new File( System.getProperty( \"user.dir\" ) );\n\n        Properties p = new Properties();\n\n        StringSearchModelInterpolator interpolator = (StringSearchModelInterpolator) createInterpolator();\n\n        ModelBuildingRequest config = createModelBuildingRequest( p );\n\n        SimpleProblemCollector collector = new SimpleProblemCollector();\n        interpolator.interpolateObject( baseDir, model, new File( \".\" ), config, collector );\n        assertProblemFree( collector );\n\n        \r\n        Map<Class<?>, ?> cache =\n                (Map<Class<?>, ?>) getField( StringSearchModelInterpolator.class, \"CACHED_ENTRIES\" )\n                        .get( null );\n\n        Object fileCacheItem = cache.get( File.class );\n\n        assertNotNull( fileCacheItem );\n\n        assertThat( ( (Object[]) getInternalState( fileCacheItem, \"fields\" ) ).length, is( 0 ) );\n    }\n","realPath":"maven-model-builder/src/test/java/org/apache/maven/model/interpolation/StringSearchModelInterpolatorTest.java","repoName":"maven","snippetEndLine":0,"snippetStartLine":0,"startLine":414,"status":"M"}],"commitId":"eda1b9290641dfaa10d0551d97eb5f715fdfacfd","commitMessage":"@@@[MNG-6856] Remove dependency to Powermock\n\n","date":"2020-05-04 04:09:25","modifiedFileCount":"1","status":"M","submitter":"Sylwester Lachiewicz"}]
