[{"authorTime":"2009-05-29 00:46:43","codes":[{"authorDate":"2009-05-29 00:46:43","commitOrder":1,"curCode":"    public void testCalculationOfBuildPlanWithIndividualTaskOfTheCleanLifecycle()\n        throws Exception\n    {\n        \r\n        \r\n        File pom = getProject( \"project-with-additional-lifecycle-elements\" );\n        MavenSession session = createMavenSession( pom );\n        assertEquals( \"project-with-additional-lifecycle-elements\", session.getCurrentProject().getArtifactId() );\n        assertEquals( \"1.0\", session.getCurrentProject().getVersion() );\n        List<MojoExecution> executionPlan = lifecycleExecutor.calculateExecutionPlan( session, \"clean\" ).getExecutions();\n        assertEquals( 1, executionPlan.size() );\n        MojoExecution mojoExecution = executionPlan.get( 0 );\n        assertNotNull( mojoExecution );\n        assertEquals( \"org.apache.maven.plugins\", mojoExecution.getMojoDescriptor().getPluginDescriptor().getGroupId() );\n        assertEquals( \"maven-clean-plugin\", mojoExecution.getMojoDescriptor().getPluginDescriptor().getArtifactId() );\n        assertEquals( \"2.3\", mojoExecution.getMojoDescriptor().getPluginDescriptor().getVersion() );\n    }\n","date":"2009-05-29 00:46:43","endLine":91,"groupId":"5255","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testCalculationOfBuildPlanWithIndividualTaskOfTheCleanLifecycle","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-maven-10-0.7/blobInfo/CC_OUT/blobs/28/a44d20a95449b6f79df8ae335a1ed6bd6451bc.src","preCode":"    public void testCalculationOfBuildPlanWithIndividualTaskOfTheCleanLifecycle()\n        throws Exception\n    {\n        \r\n        \r\n        File pom = getProject( \"project-with-additional-lifecycle-elements\" );\n        MavenSession session = createMavenSession( pom );\n        assertEquals( \"project-with-additional-lifecycle-elements\", session.getCurrentProject().getArtifactId() );\n        assertEquals( \"1.0\", session.getCurrentProject().getVersion() );\n        List<MojoExecution> executionPlan = lifecycleExecutor.calculateExecutionPlan( session, \"clean\" ).getExecutions();\n        assertEquals( 1, executionPlan.size() );\n        MojoExecution mojoExecution = executionPlan.get( 0 );\n        assertNotNull( mojoExecution );\n        assertEquals( \"org.apache.maven.plugins\", mojoExecution.getMojoDescriptor().getPluginDescriptor().getGroupId() );\n        assertEquals( \"maven-clean-plugin\", mojoExecution.getMojoDescriptor().getPluginDescriptor().getArtifactId() );\n        assertEquals( \"2.3\", mojoExecution.getMojoDescriptor().getPluginDescriptor().getVersion() );\n    }\n","realPath":"maven-core/src/test/java/org/apache/maven/lifecycle/LifecycleExecutorTest.java","repoName":"maven","snippetEndLine":0,"snippetStartLine":0,"startLine":75,"status":"B"},{"authorDate":"2009-05-29 00:46:43","commitOrder":1,"curCode":"    public void testCalculationOfBuildPlanWithIndividualTaskOfTheCleanCleanGoal()\n        throws Exception\n    {\n        \r\n        \r\n        File pom = getProject( \"project-with-additional-lifecycle-elements\" );\n        MavenSession session = createMavenSession( pom );\n        assertEquals( \"project-with-additional-lifecycle-elements\", session.getCurrentProject().getArtifactId() );\n        assertEquals( \"1.0\", session.getCurrentProject().getVersion() );\n        List<MojoExecution> executionPlan = lifecycleExecutor.calculateExecutionPlan( session, \"clean:clean\" ).getExecutions();\n        assertEquals( 1, executionPlan.size() );\n        MojoExecution mojoExecution = executionPlan.get( 0 );\n        assertNotNull( mojoExecution );\n        assertEquals( \"org.apache.maven.plugins\", mojoExecution.getMojoDescriptor().getPluginDescriptor().getGroupId() );\n        assertEquals( \"maven-clean-plugin\", mojoExecution.getMojoDescriptor().getPluginDescriptor().getArtifactId() );\n        assertEquals( \"2.2\", mojoExecution.getMojoDescriptor().getPluginDescriptor().getVersion() );\n    }\n","date":"2009-05-29 00:46:43","endLine":200,"groupId":"5255","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testCalculationOfBuildPlanWithIndividualTaskOfTheCleanCleanGoal","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-maven-10-0.7/blobInfo/CC_OUT/blobs/28/a44d20a95449b6f79df8ae335a1ed6bd6451bc.src","preCode":"    public void testCalculationOfBuildPlanWithIndividualTaskOfTheCleanCleanGoal()\n        throws Exception\n    {\n        \r\n        \r\n        File pom = getProject( \"project-with-additional-lifecycle-elements\" );\n        MavenSession session = createMavenSession( pom );\n        assertEquals( \"project-with-additional-lifecycle-elements\", session.getCurrentProject().getArtifactId() );\n        assertEquals( \"1.0\", session.getCurrentProject().getVersion() );\n        List<MojoExecution> executionPlan = lifecycleExecutor.calculateExecutionPlan( session, \"clean:clean\" ).getExecutions();\n        assertEquals( 1, executionPlan.size() );\n        MojoExecution mojoExecution = executionPlan.get( 0 );\n        assertNotNull( mojoExecution );\n        assertEquals( \"org.apache.maven.plugins\", mojoExecution.getMojoDescriptor().getPluginDescriptor().getGroupId() );\n        assertEquals( \"maven-clean-plugin\", mojoExecution.getMojoDescriptor().getPluginDescriptor().getArtifactId() );\n        assertEquals( \"2.2\", mojoExecution.getMojoDescriptor().getPluginDescriptor().getVersion() );\n    }\n","realPath":"maven-core/src/test/java/org/apache/maven/lifecycle/LifecycleExecutorTest.java","repoName":"maven","snippetEndLine":0,"snippetStartLine":0,"startLine":184,"status":"B"}],"commitId":"d5fcfe0e19fb6de2c1f26b6d9b4188c2584621ac","commitMessage":"@@@o swapping the branch to trunk\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@779660 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2009-05-29 00:46:43","modifiedFileCount":"153","status":"B","submitter":"Jason van Zyl"},{"authorTime":"2009-08-20 06:51:43","codes":[{"authorDate":"2009-05-29 00:46:43","commitOrder":2,"curCode":"    public void testCalculationOfBuildPlanWithIndividualTaskOfTheCleanLifecycle()\n        throws Exception\n    {\n        \r\n        \r\n        File pom = getProject( \"project-with-additional-lifecycle-elements\" );\n        MavenSession session = createMavenSession( pom );\n        assertEquals( \"project-with-additional-lifecycle-elements\", session.getCurrentProject().getArtifactId() );\n        assertEquals( \"1.0\", session.getCurrentProject().getVersion() );\n        List<MojoExecution> executionPlan = lifecycleExecutor.calculateExecutionPlan( session, \"clean\" ).getExecutions();\n        assertEquals( 1, executionPlan.size() );\n        MojoExecution mojoExecution = executionPlan.get( 0 );\n        assertNotNull( mojoExecution );\n        assertEquals( \"org.apache.maven.plugins\", mojoExecution.getMojoDescriptor().getPluginDescriptor().getGroupId() );\n        assertEquals( \"maven-clean-plugin\", mojoExecution.getMojoDescriptor().getPluginDescriptor().getArtifactId() );\n        assertEquals( \"2.3\", mojoExecution.getMojoDescriptor().getPluginDescriptor().getVersion() );\n    }\n","date":"2009-05-29 00:46:43","endLine":91,"groupId":"5255","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testCalculationOfBuildPlanWithIndividualTaskOfTheCleanLifecycle","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-maven-10-0.7/blobInfo/CC_OUT/blobs/28/a44d20a95449b6f79df8ae335a1ed6bd6451bc.src","preCode":"    public void testCalculationOfBuildPlanWithIndividualTaskOfTheCleanLifecycle()\n        throws Exception\n    {\n        \r\n        \r\n        File pom = getProject( \"project-with-additional-lifecycle-elements\" );\n        MavenSession session = createMavenSession( pom );\n        assertEquals( \"project-with-additional-lifecycle-elements\", session.getCurrentProject().getArtifactId() );\n        assertEquals( \"1.0\", session.getCurrentProject().getVersion() );\n        List<MojoExecution> executionPlan = lifecycleExecutor.calculateExecutionPlan( session, \"clean\" ).getExecutions();\n        assertEquals( 1, executionPlan.size() );\n        MojoExecution mojoExecution = executionPlan.get( 0 );\n        assertNotNull( mojoExecution );\n        assertEquals( \"org.apache.maven.plugins\", mojoExecution.getMojoDescriptor().getPluginDescriptor().getGroupId() );\n        assertEquals( \"maven-clean-plugin\", mojoExecution.getMojoDescriptor().getPluginDescriptor().getArtifactId() );\n        assertEquals( \"2.3\", mojoExecution.getMojoDescriptor().getPluginDescriptor().getVersion() );\n    }\n","realPath":"maven-core/src/test/java/org/apache/maven/lifecycle/LifecycleExecutorTest.java","repoName":"maven","snippetEndLine":0,"snippetStartLine":0,"startLine":75,"status":"N"},{"authorDate":"2009-08-20 06:51:43","commitOrder":2,"curCode":"    public void testCalculationOfBuildPlanWithIndividualTaskOfTheCleanCleanGoal()\n        throws Exception\n    {\n        \r\n        \r\n        File pom = getProject( \"project-with-additional-lifecycle-elements\" );\n        MavenSession session = createMavenSession( pom );\n        assertEquals( \"project-with-additional-lifecycle-elements\", session.getCurrentProject().getArtifactId() );\n        assertEquals( \"1.0\", session.getCurrentProject().getVersion() );\n        List<MojoExecution> executionPlan = lifecycleExecutor.calculateExecutionPlan( session, \"clean:clean\" ).getExecutions();\n        assertEquals( 1, executionPlan.size() );\n        MojoExecution mojoExecution = executionPlan.get( 0 );\n        assertNotNull( mojoExecution );\n        assertEquals( \"org.apache.maven.plugins\", mojoExecution.getMojoDescriptor().getPluginDescriptor().getGroupId() );\n        assertEquals( \"maven-clean-plugin\", mojoExecution.getMojoDescriptor().getPluginDescriptor().getArtifactId() );\n        assertEquals( \"2.3\", mojoExecution.getMojoDescriptor().getPluginDescriptor().getVersion() );\n    }\n","date":"2009-08-20 06:51:43","endLine":193,"groupId":"5255","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testCalculationOfBuildPlanWithIndividualTaskOfTheCleanCleanGoal","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-maven-10-0.7/blobInfo/CC_OUT/blobs/54/53a91863e0d65e758ae0c4e475be2c91c545e1.src","preCode":"    public void testCalculationOfBuildPlanWithIndividualTaskOfTheCleanCleanGoal()\n        throws Exception\n    {\n        \r\n        \r\n        File pom = getProject( \"project-with-additional-lifecycle-elements\" );\n        MavenSession session = createMavenSession( pom );\n        assertEquals( \"project-with-additional-lifecycle-elements\", session.getCurrentProject().getArtifactId() );\n        assertEquals( \"1.0\", session.getCurrentProject().getVersion() );\n        List<MojoExecution> executionPlan = lifecycleExecutor.calculateExecutionPlan( session, \"clean:clean\" ).getExecutions();\n        assertEquals( 1, executionPlan.size() );\n        MojoExecution mojoExecution = executionPlan.get( 0 );\n        assertNotNull( mojoExecution );\n        assertEquals( \"org.apache.maven.plugins\", mojoExecution.getMojoDescriptor().getPluginDescriptor().getGroupId() );\n        assertEquals( \"maven-clean-plugin\", mojoExecution.getMojoDescriptor().getPluginDescriptor().getArtifactId() );\n        assertEquals( \"2.2\", mojoExecution.getMojoDescriptor().getPluginDescriptor().getVersion() );\n    }\n","realPath":"maven-core/src/test/java/org/apache/maven/lifecycle/LifecycleExecutorTest.java","repoName":"maven","snippetEndLine":0,"snippetStartLine":0,"startLine":177,"status":"M"}],"commitId":"2e0b074c5ea443e0c73eac80b7c5ddd1e5db8693","commitMessage":"@@@o Decoupled test from super POM\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@806004 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2009-08-20 06:51:43","modifiedFileCount":"1","status":"M","submitter":"Benjamin Bentmann"},{"authorTime":"2009-10-24 07:48:02","codes":[{"authorDate":"2009-10-24 07:48:02","commitOrder":3,"curCode":"    public void testCalculationOfBuildPlanWithIndividualTaskOfTheCleanLifecycle()\n        throws Exception\n    {\n        \r\n        \r\n        File pom = getProject( \"project-basic\" );\n        MavenSession session = createMavenSession( pom );\n        assertEquals( \"project-basic\", session.getCurrentProject().getArtifactId() );\n        assertEquals( \"1.0\", session.getCurrentProject().getVersion() );\n        List<MojoExecution> executionPlan = lifecycleExecutor.calculateExecutionPlan( session, \"clean\" ).getExecutions();\n        assertEquals( 1, executionPlan.size() );\n        MojoExecution mojoExecution = executionPlan.get( 0 );\n        assertNotNull( mojoExecution );\n        assertEquals( \"org.apache.maven.plugins\", mojoExecution.getMojoDescriptor().getPluginDescriptor().getGroupId() );\n        assertEquals( \"maven-clean-plugin\", mojoExecution.getMojoDescriptor().getPluginDescriptor().getArtifactId() );\n        assertEquals( \"0.1\", mojoExecution.getMojoDescriptor().getPluginDescriptor().getVersion() );\n    }\n","date":"2009-10-24 07:48:02","endLine":82,"groupId":"5255","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testCalculationOfBuildPlanWithIndividualTaskOfTheCleanLifecycle","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-maven-10-0.7/blobInfo/CC_OUT/blobs/e2/dadd010418d92bc9dfb64ea632c1295fec13fb.src","preCode":"    public void testCalculationOfBuildPlanWithIndividualTaskOfTheCleanLifecycle()\n        throws Exception\n    {\n        \r\n        \r\n        File pom = getProject( \"project-with-additional-lifecycle-elements\" );\n        MavenSession session = createMavenSession( pom );\n        assertEquals( \"project-with-additional-lifecycle-elements\", session.getCurrentProject().getArtifactId() );\n        assertEquals( \"1.0\", session.getCurrentProject().getVersion() );\n        List<MojoExecution> executionPlan = lifecycleExecutor.calculateExecutionPlan( session, \"clean\" ).getExecutions();\n        assertEquals( 1, executionPlan.size() );\n        MojoExecution mojoExecution = executionPlan.get( 0 );\n        assertNotNull( mojoExecution );\n        assertEquals( \"org.apache.maven.plugins\", mojoExecution.getMojoDescriptor().getPluginDescriptor().getGroupId() );\n        assertEquals( \"maven-clean-plugin\", mojoExecution.getMojoDescriptor().getPluginDescriptor().getArtifactId() );\n        assertEquals( \"2.3\", mojoExecution.getMojoDescriptor().getPluginDescriptor().getVersion() );\n    }\n","realPath":"maven-core/src/test/java/org/apache/maven/lifecycle/LifecycleExecutorTest.java","repoName":"maven","snippetEndLine":0,"snippetStartLine":0,"startLine":66,"status":"M"},{"authorDate":"2009-10-24 07:48:02","commitOrder":3,"curCode":"    public void testCalculationOfBuildPlanWithIndividualTaskOfTheCleanCleanGoal()\n        throws Exception\n    {\n        \r\n        \r\n        File pom = getProject( \"project-basic\" );\n        MavenSession session = createMavenSession( pom );\n        assertEquals( \"project-basic\", session.getCurrentProject().getArtifactId() );\n        assertEquals( \"1.0\", session.getCurrentProject().getVersion() );\n        List<MojoExecution> executionPlan = lifecycleExecutor.calculateExecutionPlan( session, \"clean:clean\" ).getExecutions();\n        assertEquals( 1, executionPlan.size() );\n        MojoExecution mojoExecution = executionPlan.get( 0 );\n        assertNotNull( mojoExecution );\n        assertEquals( \"org.apache.maven.plugins\", mojoExecution.getMojoDescriptor().getPluginDescriptor().getGroupId() );\n        assertEquals( \"maven-clean-plugin\", mojoExecution.getMojoDescriptor().getPluginDescriptor().getArtifactId() );\n        assertEquals( \"0.1\", mojoExecution.getMojoDescriptor().getPluginDescriptor().getVersion() );\n    }\n","date":"2009-10-24 07:48:02","endLine":100,"groupId":"5255","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testCalculationOfBuildPlanWithIndividualTaskOfTheCleanCleanGoal","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-maven-10-0.7/blobInfo/CC_OUT/blobs/e2/dadd010418d92bc9dfb64ea632c1295fec13fb.src","preCode":"    public void testCalculationOfBuildPlanWithIndividualTaskOfTheCleanCleanGoal()\n        throws Exception\n    {\n        \r\n        \r\n        File pom = getProject( \"project-with-additional-lifecycle-elements\" );\n        MavenSession session = createMavenSession( pom );\n        assertEquals( \"project-with-additional-lifecycle-elements\", session.getCurrentProject().getArtifactId() );\n        assertEquals( \"1.0\", session.getCurrentProject().getVersion() );\n        List<MojoExecution> executionPlan = lifecycleExecutor.calculateExecutionPlan( session, \"clean:clean\" ).getExecutions();\n        assertEquals( 1, executionPlan.size() );\n        MojoExecution mojoExecution = executionPlan.get( 0 );\n        assertNotNull( mojoExecution );\n        assertEquals( \"org.apache.maven.plugins\", mojoExecution.getMojoDescriptor().getPluginDescriptor().getGroupId() );\n        assertEquals( \"maven-clean-plugin\", mojoExecution.getMojoDescriptor().getPluginDescriptor().getArtifactId() );\n        assertEquals( \"2.3\", mojoExecution.getMojoDescriptor().getPluginDescriptor().getVersion() );\n    }\n","realPath":"maven-core/src/test/java/org/apache/maven/lifecycle/LifecycleExecutorTest.java","repoName":"maven","snippetEndLine":0,"snippetStartLine":0,"startLine":84,"status":"M"}],"commitId":"86c8236aab60d0b34974ede7bf3aeec6b779b279","commitMessage":"@@@o Decoupled tests from central and used a file-based stub repo\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/maven-3/trunk@829280 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2009-10-24 07:48:02","modifiedFileCount":"5","status":"M","submitter":"Benjamin Bentmann"},{"authorTime":"2010-04-08 19:29:13","codes":[{"authorDate":"2010-04-08 19:29:13","commitOrder":4,"curCode":"    public void testCalculationOfBuildPlanWithIndividualTaskOfTheCleanLifecycle()\n        throws Exception\n    {\n        \r\n        \r\n        File pom = getProject( \"project-basic\" );\n        MavenSession session = createMavenSession( pom );\n        assertEquals( \"project-basic\", session.getCurrentProject().getArtifactId() );\n        assertEquals( \"1.0\", session.getCurrentProject().getVersion() );\n        List<MojoExecution> executionPlan = getExecutions( calculateExecutionPlan( session, \"clean\" ) );\n        assertEquals( 1, executionPlan.size() );\n        MojoExecution mojoExecution = executionPlan.get( 0 );\n        assertNotNull( mojoExecution );\n        assertEquals( \"org.apache.maven.plugins\",\n                      mojoExecution.getMojoDescriptor().getPluginDescriptor().getGroupId() );\n        assertEquals( \"maven-clean-plugin\", mojoExecution.getMojoDescriptor().getPluginDescriptor().getArtifactId() );\n        assertEquals( \"0.1\", mojoExecution.getMojoDescriptor().getPluginDescriptor().getVersion() );\n    }\n","date":"2010-04-08 19:29:13","endLine":129,"groupId":"10603","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"testCalculationOfBuildPlanWithIndividualTaskOfTheCleanLifecycle","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-maven-10-0.7/blobInfo/CC_OUT/blobs/c5/9156b7c804bee989273b02000f378639bc858e.src","preCode":"    public void testCalculationOfBuildPlanWithIndividualTaskOfTheCleanLifecycle()\n        throws Exception\n    {\n        \r\n        \r\n        File pom = getProject( \"project-basic\" );\n        MavenSession session = createMavenSession( pom );\n        assertEquals( \"project-basic\", session.getCurrentProject().getArtifactId() );\n        assertEquals( \"1.0\", session.getCurrentProject().getVersion() );\n        List<MojoExecution> executionPlan = lifecycleExecutor.calculateExecutionPlan( session, \"clean\" ).getExecutions();\n        assertEquals( 1, executionPlan.size() );\n        MojoExecution mojoExecution = executionPlan.get( 0 );\n        assertNotNull( mojoExecution );\n        assertEquals( \"org.apache.maven.plugins\", mojoExecution.getMojoDescriptor().getPluginDescriptor().getGroupId() );\n        assertEquals( \"maven-clean-plugin\", mojoExecution.getMojoDescriptor().getPluginDescriptor().getArtifactId() );\n        assertEquals( \"0.1\", mojoExecution.getMojoDescriptor().getPluginDescriptor().getVersion() );\n    }\n","realPath":"maven-core/src/test/java/org/apache/maven/lifecycle/LifecycleExecutorTest.java","repoName":"maven","snippetEndLine":0,"snippetStartLine":0,"startLine":112,"status":"M"},{"authorDate":"2010-04-08 19:29:13","commitOrder":4,"curCode":"    public void testCalculationOfBuildPlanWithIndividualTaskOfTheCleanCleanGoal()\n        throws Exception\n    {\n        \r\n        \r\n        File pom = getProject( \"project-basic\" );\n        MavenSession session = createMavenSession( pom );\n        assertEquals( \"project-basic\", session.getCurrentProject().getArtifactId() );\n        assertEquals( \"1.0\", session.getCurrentProject().getVersion() );\n        List<MojoExecution> executionPlan = getExecutions( calculateExecutionPlan( session, \"clean:clean\" ) );\n        assertEquals( 1, executionPlan.size() );\n        MojoExecution mojoExecution = executionPlan.get( 0 );\n        assertNotNull( mojoExecution );\n        assertEquals( \"org.apache.maven.plugins\",\n                      mojoExecution.getMojoDescriptor().getPluginDescriptor().getGroupId() );\n        assertEquals( \"maven-clean-plugin\", mojoExecution.getMojoDescriptor().getPluginDescriptor().getArtifactId() );\n        assertEquals( \"0.1\", mojoExecution.getMojoDescriptor().getPluginDescriptor().getVersion() );\n    }\n","date":"2010-04-08 19:29:13","endLine":148,"groupId":"10603","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"testCalculationOfBuildPlanWithIndividualTaskOfTheCleanCleanGoal","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-maven-10-0.7/blobInfo/CC_OUT/blobs/c5/9156b7c804bee989273b02000f378639bc858e.src","preCode":"    public void testCalculationOfBuildPlanWithIndividualTaskOfTheCleanCleanGoal()\n        throws Exception\n    {\n        \r\n        \r\n        File pom = getProject( \"project-basic\" );\n        MavenSession session = createMavenSession( pom );\n        assertEquals( \"project-basic\", session.getCurrentProject().getArtifactId() );\n        assertEquals( \"1.0\", session.getCurrentProject().getVersion() );\n        List<MojoExecution> executionPlan = lifecycleExecutor.calculateExecutionPlan( session, \"clean:clean\" ).getExecutions();\n        assertEquals( 1, executionPlan.size() );\n        MojoExecution mojoExecution = executionPlan.get( 0 );\n        assertNotNull( mojoExecution );\n        assertEquals( \"org.apache.maven.plugins\", mojoExecution.getMojoDescriptor().getPluginDescriptor().getGroupId() );\n        assertEquals( \"maven-clean-plugin\", mojoExecution.getMojoDescriptor().getPluginDescriptor().getArtifactId() );\n        assertEquals( \"0.1\", mojoExecution.getMojoDescriptor().getPluginDescriptor().getVersion() );\n    }\n","realPath":"maven-core/src/test/java/org/apache/maven/lifecycle/LifecycleExecutorTest.java","repoName":"maven","snippetEndLine":0,"snippetStartLine":0,"startLine":131,"status":"M"}],"commitId":"83237e46af5654c51c5c9005b054c1ffa01e327d","commitMessage":"@@@[MNG-3004] Concurrent building of multimodule projects\n\nThis commit consists of a modularization of the DefaultLifecycleExecutor into smaller\ncomponents. This is primarily done with the intention of extracting execution strategy \nsomewhat from the rest of the logic.\n\nIt also contains three differenent execution strategies:\nA) Linear (\"Classic\")\nB) Parallel (Based on Dan's original implemementation)\nC) Weave (Still experimental) \n\n \nThe command line -T option activates parallel running.  and the argument\nis in the form -T <[nThreads.  a float][C][W]|auto>\n\nNotes:\n* The output demultiplexer is disabled in this commit.  and output will appear intermingled.\n* The modello plugin has known problems\n* Surefire must be run in forkmode at least once.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/maven-3/trunk@931884 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2010-04-08 19:29:13","modifiedFileCount":"21","status":"M","submitter":"Kristian Rosenvold"}]
