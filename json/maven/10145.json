[{"authorTime":"2013-03-15 04:03:31","codes":[{"authorDate":"2016-12-12 06:36:04","commitOrder":3,"curCode":"    public static DefaultRepositorySystemSession newSession()\n    {\n        DefaultRepositorySystemSession session = new DefaultRepositorySystemSession();\n\n        DependencyTraverser depTraverser = new FatArtifactTraverser();\n        session.setDependencyTraverser( depTraverser );\n\n        DependencyManager depManager = new ClassicDependencyManager();\n        session.setDependencyManager( depManager );\n\n        DependencySelector depFilter =\n            new AndDependencySelector( new ScopeDependencySelector( \"test\", \"provided\" ),\n                                       new OptionalDependencySelector(), new ExclusionDependencySelector() );\n        session.setDependencySelector( depFilter );\n\n        DependencyGraphTransformer transformer =\n            new ConflictResolver( new NearestVersionSelector(), new JavaScopeSelector(),\n                                  new SimpleOptionalitySelector(), new JavaScopeDeriver() );\n        new ChainedDependencyGraphTransformer( transformer, new JavaDependencyContextRefiner() );\n        session.setDependencyGraphTransformer( transformer );\n\n        DefaultArtifactTypeRegistry stereotypes = new DefaultArtifactTypeRegistry();\n        stereotypes.add( new DefaultArtifactType( \"pom\" ) );\n        stereotypes.add( new DefaultArtifactType( \"maven-plugin\", \"jar\", \"\", \"java\" ) );\n        stereotypes.add( new DefaultArtifactType( \"jar\", \"jar\", \"\", \"java\" ) );\n        stereotypes.add( new DefaultArtifactType( \"ejb\", \"jar\", \"\", \"java\" ) );\n        stereotypes.add( new DefaultArtifactType( \"ejb-client\", \"jar\", \"client\", \"java\" ) );\n        stereotypes.add( new DefaultArtifactType( \"test-jar\", \"jar\", \"tests\", \"java\" ) );\n        stereotypes.add( new DefaultArtifactType( \"javadoc\", \"jar\", \"javadoc\", \"java\" ) );\n        stereotypes.add( new DefaultArtifactType( \"java-source\", \"jar\", \"sources\", \"java\", false, false ) );\n        stereotypes.add( new DefaultArtifactType( \"war\", \"war\", \"\", \"java\", false, true ) );\n        stereotypes.add( new DefaultArtifactType( \"ear\", \"ear\", \"\", \"java\", false, true ) );\n        stereotypes.add( new DefaultArtifactType( \"rar\", \"rar\", \"\", \"java\", false, true ) );\n        stereotypes.add( new DefaultArtifactType( \"par\", \"par\", \"\", \"java\", false, true ) );\n        session.setArtifactTypeRegistry( stereotypes );\n\n        session.setArtifactDescriptorPolicy( new SimpleArtifactDescriptorPolicy( true, true ) );\n\n        final Properties systemProperties = new Properties();\n        \n        \r\n        \r\n        Properties sysProp = System.getProperties();\n        synchronized ( sysProp )\n        {\n            systemProperties.putAll( sysProp );\n        }\n\n        session.setSystemProperties( systemProperties );\n        session.setConfigProperties( systemProperties );\n\n        return session;\n    }\n","date":"2017-02-01 14:59:53","endLine":143,"groupId":"6827","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"newSession","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-maven-10-0.7/blobInfo/CC_OUT/blobs/1b/11cb34aa55ee806ca556891d4390362433e5ca.src","preCode":"    public static DefaultRepositorySystemSession newSession()\n    {\n        DefaultRepositorySystemSession session = new DefaultRepositorySystemSession();\n\n        DependencyTraverser depTraverser = new FatArtifactTraverser();\n        session.setDependencyTraverser( depTraverser );\n\n        DependencyManager depManager = new ClassicDependencyManager();\n        session.setDependencyManager( depManager );\n\n        DependencySelector depFilter =\n            new AndDependencySelector( new ScopeDependencySelector( \"test\", \"provided\" ),\n                                       new OptionalDependencySelector(), new ExclusionDependencySelector() );\n        session.setDependencySelector( depFilter );\n\n        DependencyGraphTransformer transformer =\n            new ConflictResolver( new NearestVersionSelector(), new JavaScopeSelector(),\n                                  new SimpleOptionalitySelector(), new JavaScopeDeriver() );\n        new ChainedDependencyGraphTransformer( transformer, new JavaDependencyContextRefiner() );\n        session.setDependencyGraphTransformer( transformer );\n\n        DefaultArtifactTypeRegistry stereotypes = new DefaultArtifactTypeRegistry();\n        stereotypes.add( new DefaultArtifactType( \"pom\" ) );\n        stereotypes.add( new DefaultArtifactType( \"maven-plugin\", \"jar\", \"\", \"java\" ) );\n        stereotypes.add( new DefaultArtifactType( \"jar\", \"jar\", \"\", \"java\" ) );\n        stereotypes.add( new DefaultArtifactType( \"ejb\", \"jar\", \"\", \"java\" ) );\n        stereotypes.add( new DefaultArtifactType( \"ejb-client\", \"jar\", \"client\", \"java\" ) );\n        stereotypes.add( new DefaultArtifactType( \"test-jar\", \"jar\", \"tests\", \"java\" ) );\n        stereotypes.add( new DefaultArtifactType( \"javadoc\", \"jar\", \"javadoc\", \"java\" ) );\n        stereotypes.add( new DefaultArtifactType( \"java-source\", \"jar\", \"sources\", \"java\", false, false ) );\n        stereotypes.add( new DefaultArtifactType( \"war\", \"war\", \"\", \"java\", false, true ) );\n        stereotypes.add( new DefaultArtifactType( \"ear\", \"ear\", \"\", \"java\", false, true ) );\n        stereotypes.add( new DefaultArtifactType( \"rar\", \"rar\", \"\", \"java\", false, true ) );\n        stereotypes.add( new DefaultArtifactType( \"par\", \"par\", \"\", \"java\", false, true ) );\n        session.setArtifactTypeRegistry( stereotypes );\n\n        session.setArtifactDescriptorPolicy( new SimpleArtifactDescriptorPolicy( true, true ) );\n\n        final Properties systemProperties = new Properties();\n        \n        \r\n        \r\n        Properties sysProp = System.getProperties();\n        synchronized ( sysProp )\n        {\n            systemProperties.putAll( sysProp );\n        }\n\n        session.setSystemProperties( systemProperties );\n        session.setConfigProperties( systemProperties );\n\n        return session;\n    }\n","realPath":"maven-resolver-provider/src/main/java/org/apache/maven/repository/internal/MavenRepositorySystemUtils.java","repoName":"maven","snippetEndLine":0,"snippetStartLine":0,"startLine":91,"status":"B"},{"authorDate":"2013-03-15 04:03:31","commitOrder":3,"curCode":"    protected RepositorySystemSession initRepoSession()\n        throws Exception\n    {\n        DefaultRepositorySystemSession session = new DefaultRepositorySystemSession();\n        session.setArtifactDescriptorPolicy( new SimpleArtifactDescriptorPolicy( true, true ) );\n        DependencyTraverser depTraverser = new FatArtifactTraverser();\n        session.setDependencyTraverser( depTraverser );\n\n        DependencyManager depManager = new ClassicDependencyManager();\n        session.setDependencyManager( depManager );\n\n        DependencySelector depFilter =\n            new AndDependencySelector( new ScopeDependencySelector( \"test\", \"provided\" ),\n                                       new OptionalDependencySelector(), new ExclusionDependencySelector() );\n        session.setDependencySelector( depFilter );\n\n        DependencyGraphTransformer transformer =\n            new ConflictResolver( new NearestVersionSelector(), new JavaScopeSelector(),\n                                  new SimpleOptionalitySelector(), new JavaScopeDeriver() );\n        new ChainedDependencyGraphTransformer( transformer, new JavaDependencyContextRefiner() );\n        session.setDependencyGraphTransformer( transformer );\n\n        LocalRepository localRepo = new LocalRepository( localRepository().getBasedir() );\n        session.setLocalRepositoryManager( new SimpleLocalRepositoryManagerFactory().newInstance( session, localRepo ) );\n\n        return session;\n    }\n","date":"2013-03-15 04:03:31","endLine":367,"groupId":"2384","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"initRepoSession","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-maven-10-0.7/blobInfo/CC_OUT/blobs/3f/96793a35294c06a39847f9e473d9c27a5e89c1.src","preCode":"    protected RepositorySystemSession initRepoSession()\n        throws Exception\n    {\n        DefaultRepositorySystemSession session = new DefaultRepositorySystemSession();\n        session.setArtifactDescriptorPolicy( new SimpleArtifactDescriptorPolicy( true, true ) );\n        DependencyTraverser depTraverser = new FatArtifactTraverser();\n        session.setDependencyTraverser( depTraverser );\n\n        DependencyManager depManager = new ClassicDependencyManager();\n        session.setDependencyManager( depManager );\n\n        DependencySelector depFilter =\n            new AndDependencySelector( new ScopeDependencySelector( \"test\", \"provided\" ),\n                                       new OptionalDependencySelector(), new ExclusionDependencySelector() );\n        session.setDependencySelector( depFilter );\n\n        DependencyGraphTransformer transformer =\n            new ConflictResolver( new NearestVersionSelector(), new JavaScopeSelector(),\n                                  new SimpleOptionalitySelector(), new JavaScopeDeriver() );\n        new ChainedDependencyGraphTransformer( transformer, new JavaDependencyContextRefiner() );\n        session.setDependencyGraphTransformer( transformer );\n\n        LocalRepository localRepo = new LocalRepository( localRepository().getBasedir() );\n        session.setLocalRepositoryManager( new SimpleLocalRepositoryManagerFactory().newInstance( session, localRepo ) );\n\n        return session;\n    }\n","realPath":"maven-compat/src/test/java/org/apache/maven/artifact/AbstractArtifactComponentTestCase.java","repoName":"maven","snippetEndLine":0,"snippetStartLine":0,"startLine":341,"status":"NB"}],"commitId":"8972072e3200e2ecfe2acb6d0b2dc40b10a6bc31","commitMessage":"@@@[MNG-6110] renamed 'maven-aether-provider' to 'maven-resolver-provider'","date":"2017-02-01 14:59:53","modifiedFileCount":"0","status":"M","submitter":"Christian Schulte"},{"authorTime":"2019-07-11 17:48:58","codes":[{"authorDate":"2019-07-11 17:48:58","commitOrder":4,"curCode":"    public static DefaultRepositorySystemSession newSession()\n    {\n        DefaultRepositorySystemSession session = new DefaultRepositorySystemSession();\n\n        DependencyTraverser depTraverser = new FatArtifactTraverser();\n        session.setDependencyTraverser( depTraverser );\n\n        DependencyManager depManager = new ClassicDependencyManager();\n        session.setDependencyManager( depManager );\n\n        DependencySelector depFilter =\n            new AndDependencySelector( new ScopeDependencySelector( \"test\", \"provided\" ),\n                                       new OptionalDependencySelector(), new ExclusionDependencySelector() );\n        session.setDependencySelector( depFilter );\n\n        DependencyGraphTransformer transformer =\n            new ConflictResolver( new NearestVersionSelector(), new JavaScopeSelector(),\n                                  new SimpleOptionalitySelector(), new JavaScopeDeriver() );\n        transformer = new ChainedDependencyGraphTransformer( transformer, new JavaDependencyContextRefiner() );\n        session.setDependencyGraphTransformer( transformer );\n\n        DefaultArtifactTypeRegistry stereotypes = new DefaultArtifactTypeRegistry();\n        stereotypes.add( new DefaultArtifactType( \"pom\" ) );\n        stereotypes.add( new DefaultArtifactType( \"maven-plugin\", \"jar\", \"\", \"java\" ) );\n        stereotypes.add( new DefaultArtifactType( \"jar\", \"jar\", \"\", \"java\" ) );\n        stereotypes.add( new DefaultArtifactType( \"ejb\", \"jar\", \"\", \"java\" ) );\n        stereotypes.add( new DefaultArtifactType( \"ejb-client\", \"jar\", \"client\", \"java\" ) );\n        stereotypes.add( new DefaultArtifactType( \"test-jar\", \"jar\", \"tests\", \"java\" ) );\n        stereotypes.add( new DefaultArtifactType( \"javadoc\", \"jar\", \"javadoc\", \"java\" ) );\n        stereotypes.add( new DefaultArtifactType( \"java-source\", \"jar\", \"sources\", \"java\", false, false ) );\n        stereotypes.add( new DefaultArtifactType( \"war\", \"war\", \"\", \"java\", false, true ) );\n        stereotypes.add( new DefaultArtifactType( \"ear\", \"ear\", \"\", \"java\", false, true ) );\n        stereotypes.add( new DefaultArtifactType( \"rar\", \"rar\", \"\", \"java\", false, true ) );\n        stereotypes.add( new DefaultArtifactType( \"par\", \"par\", \"\", \"java\", false, true ) );\n        session.setArtifactTypeRegistry( stereotypes );\n\n        session.setArtifactDescriptorPolicy( new SimpleArtifactDescriptorPolicy( true, true ) );\n\n        final Properties systemProperties = new Properties();\n\n        \r\n        \r\n        Properties sysProp = System.getProperties();\n        synchronized ( sysProp )\n        {\n            systemProperties.putAll( sysProp );\n        }\n\n        session.setSystemProperties( systemProperties );\n        session.setConfigProperties( systemProperties );\n\n        return session;\n    }\n","date":"2019-07-26 03:58:26","endLine":143,"groupId":"10145","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"newSession","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-maven-10-0.7/blobInfo/CC_OUT/blobs/97/035b3cc8211c32240d1e0f84b44f9c922f8d10.src","preCode":"    public static DefaultRepositorySystemSession newSession()\n    {\n        DefaultRepositorySystemSession session = new DefaultRepositorySystemSession();\n\n        DependencyTraverser depTraverser = new FatArtifactTraverser();\n        session.setDependencyTraverser( depTraverser );\n\n        DependencyManager depManager = new ClassicDependencyManager();\n        session.setDependencyManager( depManager );\n\n        DependencySelector depFilter =\n            new AndDependencySelector( new ScopeDependencySelector( \"test\", \"provided\" ),\n                                       new OptionalDependencySelector(), new ExclusionDependencySelector() );\n        session.setDependencySelector( depFilter );\n\n        DependencyGraphTransformer transformer =\n            new ConflictResolver( new NearestVersionSelector(), new JavaScopeSelector(),\n                                  new SimpleOptionalitySelector(), new JavaScopeDeriver() );\n        new ChainedDependencyGraphTransformer( transformer, new JavaDependencyContextRefiner() );\n        session.setDependencyGraphTransformer( transformer );\n\n        DefaultArtifactTypeRegistry stereotypes = new DefaultArtifactTypeRegistry();\n        stereotypes.add( new DefaultArtifactType( \"pom\" ) );\n        stereotypes.add( new DefaultArtifactType( \"maven-plugin\", \"jar\", \"\", \"java\" ) );\n        stereotypes.add( new DefaultArtifactType( \"jar\", \"jar\", \"\", \"java\" ) );\n        stereotypes.add( new DefaultArtifactType( \"ejb\", \"jar\", \"\", \"java\" ) );\n        stereotypes.add( new DefaultArtifactType( \"ejb-client\", \"jar\", \"client\", \"java\" ) );\n        stereotypes.add( new DefaultArtifactType( \"test-jar\", \"jar\", \"tests\", \"java\" ) );\n        stereotypes.add( new DefaultArtifactType( \"javadoc\", \"jar\", \"javadoc\", \"java\" ) );\n        stereotypes.add( new DefaultArtifactType( \"java-source\", \"jar\", \"sources\", \"java\", false, false ) );\n        stereotypes.add( new DefaultArtifactType( \"war\", \"war\", \"\", \"java\", false, true ) );\n        stereotypes.add( new DefaultArtifactType( \"ear\", \"ear\", \"\", \"java\", false, true ) );\n        stereotypes.add( new DefaultArtifactType( \"rar\", \"rar\", \"\", \"java\", false, true ) );\n        stereotypes.add( new DefaultArtifactType( \"par\", \"par\", \"\", \"java\", false, true ) );\n        session.setArtifactTypeRegistry( stereotypes );\n\n        session.setArtifactDescriptorPolicy( new SimpleArtifactDescriptorPolicy( true, true ) );\n\n        final Properties systemProperties = new Properties();\n        \n        \r\n        \r\n        Properties sysProp = System.getProperties();\n        synchronized ( sysProp )\n        {\n            systemProperties.putAll( sysProp );\n        }\n\n        session.setSystemProperties( systemProperties );\n        session.setConfigProperties( systemProperties );\n\n        return session;\n    }\n","realPath":"maven-resolver-provider/src/main/java/org/apache/maven/repository/internal/MavenRepositorySystemUtils.java","repoName":"maven","snippetEndLine":0,"snippetStartLine":0,"startLine":91,"status":"M"},{"authorDate":"2019-07-11 17:48:58","commitOrder":4,"curCode":"    protected RepositorySystemSession initRepoSession()\n        throws Exception\n    {\n        DefaultRepositorySystemSession session = new DefaultRepositorySystemSession();\n        session.setArtifactDescriptorPolicy( new SimpleArtifactDescriptorPolicy( true, true ) );\n        DependencyTraverser depTraverser = new FatArtifactTraverser();\n        session.setDependencyTraverser( depTraverser );\n\n        DependencyManager depManager = new ClassicDependencyManager();\n        session.setDependencyManager( depManager );\n\n        DependencySelector depFilter = new AndDependencySelector( new ScopeDependencySelector( \"test\", \"provided\" ),\n                                                                  new OptionalDependencySelector(),\n                                                                  new ExclusionDependencySelector() );\n        session.setDependencySelector( depFilter );\n\n        DependencyGraphTransformer transformer =\n            new ConflictResolver( new NearestVersionSelector(), new JavaScopeSelector(),\n                                  new SimpleOptionalitySelector(), new JavaScopeDeriver() );\n        transformer = new ChainedDependencyGraphTransformer( transformer, new JavaDependencyContextRefiner() );\n        session.setDependencyGraphTransformer( transformer );\n\n        LocalRepository localRepo = new LocalRepository( localRepository().getBasedir() );\n        session.setLocalRepositoryManager(\n            new SimpleLocalRepositoryManagerFactory().newInstance( session, localRepo ) );\n\n        return session;\n    }\n","date":"2019-07-26 03:58:26","endLine":371,"groupId":"10145","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"initRepoSession","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-maven-10-0.7/blobInfo/CC_OUT/blobs/2c/e37940791aae80ba7526be8b6448fe77c57ace.src","preCode":"    protected RepositorySystemSession initRepoSession()\n        throws Exception\n    {\n        DefaultRepositorySystemSession session = new DefaultRepositorySystemSession();\n        session.setArtifactDescriptorPolicy( new SimpleArtifactDescriptorPolicy( true, true ) );\n        DependencyTraverser depTraverser = new FatArtifactTraverser();\n        session.setDependencyTraverser( depTraverser );\n\n        DependencyManager depManager = new ClassicDependencyManager();\n        session.setDependencyManager( depManager );\n\n        DependencySelector depFilter = new AndDependencySelector( new ScopeDependencySelector( \"test\", \"provided\" ),\n                                                                  new OptionalDependencySelector(),\n                                                                  new ExclusionDependencySelector() );\n        session.setDependencySelector( depFilter );\n\n        DependencyGraphTransformer transformer =\n            new ConflictResolver( new NearestVersionSelector(), new JavaScopeSelector(),\n                                  new SimpleOptionalitySelector(), new JavaScopeDeriver() );\n        new ChainedDependencyGraphTransformer( transformer, new JavaDependencyContextRefiner() );\n        session.setDependencyGraphTransformer( transformer );\n\n        LocalRepository localRepo = new LocalRepository( localRepository().getBasedir() );\n        session.setLocalRepositoryManager(\n            new SimpleLocalRepositoryManagerFactory().newInstance( session, localRepo ) );\n\n        return session;\n    }\n","realPath":"maven-compat/src/test/java/org/apache/maven/artifact/AbstractArtifactComponentTestCase.java","repoName":"maven","snippetEndLine":0,"snippetStartLine":0,"startLine":344,"status":"M"}],"commitId":"2d0c3bc75b9fa191846ce5b43f6900701a1bf825","commitMessage":"@@@[MNG-6704] MavenRepositorySystemUtils.newSession() misses assignment\n","date":"2019-07-26 03:58:26","modifiedFileCount":"2","status":"M","submitter":"Michael Osipov"}]
