[{"authorTime":"2009-03-14 03:25:02","codes":[{"authorDate":"2009-06-01 23:55:41","commitOrder":3,"curCode":"    public void alignToBaseDirectory( Model model, File basedir )\n    {\n        if ( model == null || basedir == null )\n        {\n            return;\n        }\n\n        Build build = model.getBuild();\n\n        if ( build != null )\n        {\n            build.setDirectory( alignToBaseDirectory( build.getDirectory(), basedir ) );\n\n            build.setSourceDirectory( alignToBaseDirectory( build.getSourceDirectory(), basedir ) );\n\n            build.setTestSourceDirectory( alignToBaseDirectory( build.getTestSourceDirectory(), basedir ) );\n\n            build.setScriptSourceDirectory( alignToBaseDirectory( build.getScriptSourceDirectory(), basedir ) );\n\n            for ( Resource resource : build.getResources() )\n            {\n                resource.setDirectory( alignToBaseDirectory( resource.getDirectory(), basedir ) );\n            }\n\n            for ( Resource resource : build.getTestResources() )\n            {\n                resource.setDirectory( alignToBaseDirectory( resource.getDirectory(), basedir ) );\n            }\n\n            if ( build.getFilters() != null )\n            {\n                List<String> filters = new ArrayList<String>( build.getFilters().size() );\n                for ( String filter : build.getFilters() )\n                {\n                    filters.add( alignToBaseDirectory( filter, basedir ) );\n                }\n                build.setFilters( filters );\n            }\n\n            build.setOutputDirectory( alignToBaseDirectory( build.getOutputDirectory(), basedir ) );\n\n            build.setTestOutputDirectory( alignToBaseDirectory( build.getTestOutputDirectory(), basedir ) );\n        }\n\n        Reporting reporting = model.getReporting();\n\n        if ( reporting != null )\n        {\n            reporting.setOutputDirectory( alignToBaseDirectory( reporting.getOutputDirectory(), basedir ) );\n        }\n    }\n","date":"2009-06-01 23:55:41","endLine":96,"groupId":"4660","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"alignToBaseDirectory","params":"(Modelmodel@Filebasedir)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-maven-10-0.7/blobInfo/CC_OUT/blobs/0d/ca677ef2ce348842726220684dccbef3477f9f.src","preCode":"    public void alignToBaseDirectory( Model model, File basedir )\n    {\n        if ( model == null || basedir == null )\n        {\n            return;\n        }\n\n        Build build = model.getBuild();\n\n        if ( build != null )\n        {\n            build.setDirectory( alignToBaseDirectory( build.getDirectory(), basedir ) );\n\n            build.setSourceDirectory( alignToBaseDirectory( build.getSourceDirectory(), basedir ) );\n\n            build.setTestSourceDirectory( alignToBaseDirectory( build.getTestSourceDirectory(), basedir ) );\n\n            build.setScriptSourceDirectory( alignToBaseDirectory( build.getScriptSourceDirectory(), basedir ) );\n\n            for ( Resource resource : build.getResources() )\n            {\n                resource.setDirectory( alignToBaseDirectory( resource.getDirectory(), basedir ) );\n            }\n\n            for ( Resource resource : build.getTestResources() )\n            {\n                resource.setDirectory( alignToBaseDirectory( resource.getDirectory(), basedir ) );\n            }\n\n            if ( build.getFilters() != null )\n            {\n                List<String> filters = new ArrayList<String>( build.getFilters().size() );\n                for ( String filter : build.getFilters() )\n                {\n                    filters.add( alignToBaseDirectory( filter, basedir ) );\n                }\n                build.setFilters( filters );\n            }\n\n            build.setOutputDirectory( alignToBaseDirectory( build.getOutputDirectory(), basedir ) );\n\n            build.setTestOutputDirectory( alignToBaseDirectory( build.getTestOutputDirectory(), basedir ) );\n        }\n\n        Reporting reporting = model.getReporting();\n\n        if ( reporting != null )\n        {\n            reporting.setOutputDirectory( alignToBaseDirectory( reporting.getOutputDirectory(), basedir ) );\n        }\n    }\n","realPath":"maven-model-builder/src/main/java/org/apache/maven/model/path/DefaultModelPathTranslator.java","repoName":"maven","snippetEndLine":0,"snippetStartLine":0,"startLine":46,"status":"B"},{"authorDate":"2009-03-14 03:25:02","commitOrder":3,"curCode":"    public void unalignFromBaseDirectory( Model model, File basedir )\n    {\n        Build build = model.getBuild();\n\n        if ( build != null )\n        {\n            build.setDirectory( unalignFromBaseDirectory( build.getDirectory(), basedir ) );\n\n            build.setSourceDirectory( unalignFromBaseDirectory( build.getSourceDirectory(), basedir ) );\n\n            build.setTestSourceDirectory( unalignFromBaseDirectory( build.getTestSourceDirectory(), basedir ) );\n\n            for ( Iterator i = build.getResources().iterator(); i.hasNext(); )\n            {\n                Resource resource = (Resource) i.next();\n\n                resource.setDirectory( unalignFromBaseDirectory( resource.getDirectory(), basedir ) );\n            }\n\n            for ( Iterator i = build.getTestResources().iterator(); i.hasNext(); )\n            {\n                Resource resource = (Resource) i.next();\n\n                resource.setDirectory( unalignFromBaseDirectory( resource.getDirectory(), basedir ) );\n            }\n\n            if ( build.getFilters() != null )\n            {\n                List filters = new ArrayList();\n                for ( Iterator i = build.getFilters().iterator(); i.hasNext(); )\n                {\n                    String filter = (String) i.next();\n\n                    filters.add( unalignFromBaseDirectory( filter, basedir ) );\n                }\n                build.setFilters( filters );\n            }\n\n            build.setOutputDirectory( unalignFromBaseDirectory( build.getOutputDirectory(), basedir ) );\n\n            build.setTestOutputDirectory( unalignFromBaseDirectory( build.getTestOutputDirectory(), basedir ) );\n        }\n\n        Reporting reporting = model.getReporting();\n\n        if ( reporting != null )\n        {\n            reporting.setOutputDirectory( unalignFromBaseDirectory( reporting.getOutputDirectory(), basedir ) );\n        }\n    }\n","date":"2009-03-14 03:25:02","endLine":222,"groupId":"2316","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"unalignFromBaseDirectory","params":"(Modelmodel@Filebasedir)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-maven-10-0.7/blobInfo/CC_OUT/blobs/3b/9f82152dad2a31452eebc882ae7965b47a9080.src","preCode":"    public void unalignFromBaseDirectory( Model model, File basedir )\n    {\n        Build build = model.getBuild();\n\n        if ( build != null )\n        {\n            build.setDirectory( unalignFromBaseDirectory( build.getDirectory(), basedir ) );\n\n            build.setSourceDirectory( unalignFromBaseDirectory( build.getSourceDirectory(), basedir ) );\n\n            build.setTestSourceDirectory( unalignFromBaseDirectory( build.getTestSourceDirectory(), basedir ) );\n\n            for ( Iterator i = build.getResources().iterator(); i.hasNext(); )\n            {\n                Resource resource = (Resource) i.next();\n\n                resource.setDirectory( unalignFromBaseDirectory( resource.getDirectory(), basedir ) );\n            }\n\n            for ( Iterator i = build.getTestResources().iterator(); i.hasNext(); )\n            {\n                Resource resource = (Resource) i.next();\n\n                resource.setDirectory( unalignFromBaseDirectory( resource.getDirectory(), basedir ) );\n            }\n\n            if ( build.getFilters() != null )\n            {\n                List filters = new ArrayList();\n                for ( Iterator i = build.getFilters().iterator(); i.hasNext(); )\n                {\n                    String filter = (String) i.next();\n\n                    filters.add( unalignFromBaseDirectory( filter, basedir ) );\n                }\n                build.setFilters( filters );\n            }\n\n            build.setOutputDirectory( unalignFromBaseDirectory( build.getOutputDirectory(), basedir ) );\n\n            build.setTestOutputDirectory( unalignFromBaseDirectory( build.getTestOutputDirectory(), basedir ) );\n        }\n\n        Reporting reporting = model.getReporting();\n\n        if ( reporting != null )\n        {\n            reporting.setOutputDirectory( unalignFromBaseDirectory( reporting.getOutputDirectory(), basedir ) );\n        }\n    }\n","realPath":"maven-compat/src/main/java/org/apache/maven/project/path/DefaultPathTranslator.java","repoName":"maven","snippetEndLine":0,"snippetStartLine":0,"startLine":173,"status":"NB"}],"commitId":"9501ad88354927bdd7d1b88d1f4fb7a0a802a4c7","commitMessage":"@@@o Resurrected the path translator component (on this occasion.  splitting it to separate the single path translation from the model translation)\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@780698 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2009-06-01 23:55:41","modifiedFileCount":"3","status":"M","submitter":"Benjamin Bentmann"},{"authorTime":"2009-03-14 03:25:02","codes":[{"authorDate":"2009-06-03 03:31:34","commitOrder":4,"curCode":"    public void alignToBaseDirectory( Model model, File basedir, ModelBuildingRequest request )\n    {\n        if ( model == null || basedir == null )\n        {\n            return;\n        }\n\n        Build build = model.getBuild();\n\n        if ( build != null )\n        {\n            build.setDirectory( alignToBaseDirectory( build.getDirectory(), basedir ) );\n\n            build.setSourceDirectory( alignToBaseDirectory( build.getSourceDirectory(), basedir ) );\n\n            build.setTestSourceDirectory( alignToBaseDirectory( build.getTestSourceDirectory(), basedir ) );\n\n            build.setScriptSourceDirectory( alignToBaseDirectory( build.getScriptSourceDirectory(), basedir ) );\n\n            for ( Resource resource : build.getResources() )\n            {\n                resource.setDirectory( alignToBaseDirectory( resource.getDirectory(), basedir ) );\n            }\n\n            for ( Resource resource : build.getTestResources() )\n            {\n                resource.setDirectory( alignToBaseDirectory( resource.getDirectory(), basedir ) );\n            }\n\n            if ( build.getFilters() != null )\n            {\n                List<String> filters = new ArrayList<String>( build.getFilters().size() );\n                for ( String filter : build.getFilters() )\n                {\n                    filters.add( alignToBaseDirectory( filter, basedir ) );\n                }\n                build.setFilters( filters );\n            }\n\n            build.setOutputDirectory( alignToBaseDirectory( build.getOutputDirectory(), basedir ) );\n\n            build.setTestOutputDirectory( alignToBaseDirectory( build.getTestOutputDirectory(), basedir ) );\n        }\n\n        Reporting reporting = model.getReporting();\n\n        if ( reporting != null )\n        {\n            reporting.setOutputDirectory( alignToBaseDirectory( reporting.getOutputDirectory(), basedir ) );\n        }\n    }\n","date":"2009-06-03 03:31:34","endLine":97,"groupId":"4660","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"alignToBaseDirectory","params":"(Modelmodel@Filebasedir@ModelBuildingRequestrequest)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-maven-10-0.7/blobInfo/CC_OUT/blobs/3a/a35ea95843c7c12fb916f8fd75b70b1aa6c84d.src","preCode":"    public void alignToBaseDirectory( Model model, File basedir )\n    {\n        if ( model == null || basedir == null )\n        {\n            return;\n        }\n\n        Build build = model.getBuild();\n\n        if ( build != null )\n        {\n            build.setDirectory( alignToBaseDirectory( build.getDirectory(), basedir ) );\n\n            build.setSourceDirectory( alignToBaseDirectory( build.getSourceDirectory(), basedir ) );\n\n            build.setTestSourceDirectory( alignToBaseDirectory( build.getTestSourceDirectory(), basedir ) );\n\n            build.setScriptSourceDirectory( alignToBaseDirectory( build.getScriptSourceDirectory(), basedir ) );\n\n            for ( Resource resource : build.getResources() )\n            {\n                resource.setDirectory( alignToBaseDirectory( resource.getDirectory(), basedir ) );\n            }\n\n            for ( Resource resource : build.getTestResources() )\n            {\n                resource.setDirectory( alignToBaseDirectory( resource.getDirectory(), basedir ) );\n            }\n\n            if ( build.getFilters() != null )\n            {\n                List<String> filters = new ArrayList<String>( build.getFilters().size() );\n                for ( String filter : build.getFilters() )\n                {\n                    filters.add( alignToBaseDirectory( filter, basedir ) );\n                }\n                build.setFilters( filters );\n            }\n\n            build.setOutputDirectory( alignToBaseDirectory( build.getOutputDirectory(), basedir ) );\n\n            build.setTestOutputDirectory( alignToBaseDirectory( build.getTestOutputDirectory(), basedir ) );\n        }\n\n        Reporting reporting = model.getReporting();\n\n        if ( reporting != null )\n        {\n            reporting.setOutputDirectory( alignToBaseDirectory( reporting.getOutputDirectory(), basedir ) );\n        }\n    }\n","realPath":"maven-model-builder/src/main/java/org/apache/maven/model/path/DefaultModelPathTranslator.java","repoName":"maven","snippetEndLine":0,"snippetStartLine":0,"startLine":47,"status":"M"},{"authorDate":"2009-03-14 03:25:02","commitOrder":4,"curCode":"    public void unalignFromBaseDirectory( Model model, File basedir )\n    {\n        Build build = model.getBuild();\n\n        if ( build != null )\n        {\n            build.setDirectory( unalignFromBaseDirectory( build.getDirectory(), basedir ) );\n\n            build.setSourceDirectory( unalignFromBaseDirectory( build.getSourceDirectory(), basedir ) );\n\n            build.setTestSourceDirectory( unalignFromBaseDirectory( build.getTestSourceDirectory(), basedir ) );\n\n            for ( Iterator i = build.getResources().iterator(); i.hasNext(); )\n            {\n                Resource resource = (Resource) i.next();\n\n                resource.setDirectory( unalignFromBaseDirectory( resource.getDirectory(), basedir ) );\n            }\n\n            for ( Iterator i = build.getTestResources().iterator(); i.hasNext(); )\n            {\n                Resource resource = (Resource) i.next();\n\n                resource.setDirectory( unalignFromBaseDirectory( resource.getDirectory(), basedir ) );\n            }\n\n            if ( build.getFilters() != null )\n            {\n                List filters = new ArrayList();\n                for ( Iterator i = build.getFilters().iterator(); i.hasNext(); )\n                {\n                    String filter = (String) i.next();\n\n                    filters.add( unalignFromBaseDirectory( filter, basedir ) );\n                }\n                build.setFilters( filters );\n            }\n\n            build.setOutputDirectory( unalignFromBaseDirectory( build.getOutputDirectory(), basedir ) );\n\n            build.setTestOutputDirectory( unalignFromBaseDirectory( build.getTestOutputDirectory(), basedir ) );\n        }\n\n        Reporting reporting = model.getReporting();\n\n        if ( reporting != null )\n        {\n            reporting.setOutputDirectory( unalignFromBaseDirectory( reporting.getOutputDirectory(), basedir ) );\n        }\n    }\n","date":"2009-03-14 03:25:02","endLine":222,"groupId":"2316","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"unalignFromBaseDirectory","params":"(Modelmodel@Filebasedir)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-maven-10-0.7/blobInfo/CC_OUT/blobs/3b/9f82152dad2a31452eebc882ae7965b47a9080.src","preCode":"    public void unalignFromBaseDirectory( Model model, File basedir )\n    {\n        Build build = model.getBuild();\n\n        if ( build != null )\n        {\n            build.setDirectory( unalignFromBaseDirectory( build.getDirectory(), basedir ) );\n\n            build.setSourceDirectory( unalignFromBaseDirectory( build.getSourceDirectory(), basedir ) );\n\n            build.setTestSourceDirectory( unalignFromBaseDirectory( build.getTestSourceDirectory(), basedir ) );\n\n            for ( Iterator i = build.getResources().iterator(); i.hasNext(); )\n            {\n                Resource resource = (Resource) i.next();\n\n                resource.setDirectory( unalignFromBaseDirectory( resource.getDirectory(), basedir ) );\n            }\n\n            for ( Iterator i = build.getTestResources().iterator(); i.hasNext(); )\n            {\n                Resource resource = (Resource) i.next();\n\n                resource.setDirectory( unalignFromBaseDirectory( resource.getDirectory(), basedir ) );\n            }\n\n            if ( build.getFilters() != null )\n            {\n                List filters = new ArrayList();\n                for ( Iterator i = build.getFilters().iterator(); i.hasNext(); )\n                {\n                    String filter = (String) i.next();\n\n                    filters.add( unalignFromBaseDirectory( filter, basedir ) );\n                }\n                build.setFilters( filters );\n            }\n\n            build.setOutputDirectory( unalignFromBaseDirectory( build.getOutputDirectory(), basedir ) );\n\n            build.setTestOutputDirectory( unalignFromBaseDirectory( build.getTestOutputDirectory(), basedir ) );\n        }\n\n        Reporting reporting = model.getReporting();\n\n        if ( reporting != null )\n        {\n            reporting.setOutputDirectory( unalignFromBaseDirectory( reporting.getOutputDirectory(), basedir ) );\n        }\n    }\n","realPath":"maven-compat/src/main/java/org/apache/maven/project/path/DefaultPathTranslator.java","repoName":"maven","snippetEndLine":0,"snippetStartLine":0,"startLine":173,"status":"N"}],"commitId":"7a2d55b8d1512ab5704e70de4e5f6461321ffeda","commitMessage":"@@@o Gave each model diddling component access to the building request to easy future extensions\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@781133 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2009-06-03 03:31:34","modifiedFileCount":"16","status":"M","submitter":"Benjamin Bentmann"},{"authorTime":"2010-06-27 07:16:18","codes":[{"authorDate":"2009-06-03 03:31:34","commitOrder":5,"curCode":"    public void alignToBaseDirectory( Model model, File basedir, ModelBuildingRequest request )\n    {\n        if ( model == null || basedir == null )\n        {\n            return;\n        }\n\n        Build build = model.getBuild();\n\n        if ( build != null )\n        {\n            build.setDirectory( alignToBaseDirectory( build.getDirectory(), basedir ) );\n\n            build.setSourceDirectory( alignToBaseDirectory( build.getSourceDirectory(), basedir ) );\n\n            build.setTestSourceDirectory( alignToBaseDirectory( build.getTestSourceDirectory(), basedir ) );\n\n            build.setScriptSourceDirectory( alignToBaseDirectory( build.getScriptSourceDirectory(), basedir ) );\n\n            for ( Resource resource : build.getResources() )\n            {\n                resource.setDirectory( alignToBaseDirectory( resource.getDirectory(), basedir ) );\n            }\n\n            for ( Resource resource : build.getTestResources() )\n            {\n                resource.setDirectory( alignToBaseDirectory( resource.getDirectory(), basedir ) );\n            }\n\n            if ( build.getFilters() != null )\n            {\n                List<String> filters = new ArrayList<String>( build.getFilters().size() );\n                for ( String filter : build.getFilters() )\n                {\n                    filters.add( alignToBaseDirectory( filter, basedir ) );\n                }\n                build.setFilters( filters );\n            }\n\n            build.setOutputDirectory( alignToBaseDirectory( build.getOutputDirectory(), basedir ) );\n\n            build.setTestOutputDirectory( alignToBaseDirectory( build.getTestOutputDirectory(), basedir ) );\n        }\n\n        Reporting reporting = model.getReporting();\n\n        if ( reporting != null )\n        {\n            reporting.setOutputDirectory( alignToBaseDirectory( reporting.getOutputDirectory(), basedir ) );\n        }\n    }\n","date":"2009-06-03 03:31:34","endLine":97,"groupId":"4660","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"alignToBaseDirectory","params":"(Modelmodel@Filebasedir@ModelBuildingRequestrequest)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-maven-10-0.7/blobInfo/CC_OUT/blobs/3a/a35ea95843c7c12fb916f8fd75b70b1aa6c84d.src","preCode":"    public void alignToBaseDirectory( Model model, File basedir, ModelBuildingRequest request )\n    {\n        if ( model == null || basedir == null )\n        {\n            return;\n        }\n\n        Build build = model.getBuild();\n\n        if ( build != null )\n        {\n            build.setDirectory( alignToBaseDirectory( build.getDirectory(), basedir ) );\n\n            build.setSourceDirectory( alignToBaseDirectory( build.getSourceDirectory(), basedir ) );\n\n            build.setTestSourceDirectory( alignToBaseDirectory( build.getTestSourceDirectory(), basedir ) );\n\n            build.setScriptSourceDirectory( alignToBaseDirectory( build.getScriptSourceDirectory(), basedir ) );\n\n            for ( Resource resource : build.getResources() )\n            {\n                resource.setDirectory( alignToBaseDirectory( resource.getDirectory(), basedir ) );\n            }\n\n            for ( Resource resource : build.getTestResources() )\n            {\n                resource.setDirectory( alignToBaseDirectory( resource.getDirectory(), basedir ) );\n            }\n\n            if ( build.getFilters() != null )\n            {\n                List<String> filters = new ArrayList<String>( build.getFilters().size() );\n                for ( String filter : build.getFilters() )\n                {\n                    filters.add( alignToBaseDirectory( filter, basedir ) );\n                }\n                build.setFilters( filters );\n            }\n\n            build.setOutputDirectory( alignToBaseDirectory( build.getOutputDirectory(), basedir ) );\n\n            build.setTestOutputDirectory( alignToBaseDirectory( build.getTestOutputDirectory(), basedir ) );\n        }\n\n        Reporting reporting = model.getReporting();\n\n        if ( reporting != null )\n        {\n            reporting.setOutputDirectory( alignToBaseDirectory( reporting.getOutputDirectory(), basedir ) );\n        }\n    }\n","realPath":"maven-model-builder/src/main/java/org/apache/maven/model/path/DefaultModelPathTranslator.java","repoName":"maven","snippetEndLine":0,"snippetStartLine":0,"startLine":47,"status":"N"},{"authorDate":"2010-06-27 07:16:18","commitOrder":5,"curCode":"    public void unalignFromBaseDirectory( Model model, File basedir )\n    {\n        Build build = model.getBuild();\n\n        if ( build != null )\n        {\n            build.setDirectory( unalignFromBaseDirectory( build.getDirectory(), basedir ) );\n\n            build.setSourceDirectory( unalignFromBaseDirectory( build.getSourceDirectory(), basedir ) );\n\n            build.setTestSourceDirectory( unalignFromBaseDirectory( build.getTestSourceDirectory(), basedir ) );\n\n            for ( Resource resource : build.getResources() )\n            {\n                resource.setDirectory( unalignFromBaseDirectory( resource.getDirectory(), basedir ) );\n            }\n\n            for ( Resource resource : build.getTestResources() )\n            {\n                resource.setDirectory( unalignFromBaseDirectory( resource.getDirectory(), basedir ) );\n            }\n\n            if ( build.getFilters() != null )\n            {\n                List<String> filters = new ArrayList<String>();\n                for ( String filter : build.getFilters() )\n                {\n                    filters.add( unalignFromBaseDirectory( filter, basedir ) );\n                }\n                build.setFilters( filters );\n            }\n\n            build.setOutputDirectory( unalignFromBaseDirectory( build.getOutputDirectory(), basedir ) );\n\n            build.setTestOutputDirectory( unalignFromBaseDirectory( build.getTestOutputDirectory(), basedir ) );\n        }\n\n        Reporting reporting = model.getReporting();\n\n        if ( reporting != null )\n        {\n            reporting.setOutputDirectory( unalignFromBaseDirectory( reporting.getOutputDirectory(), basedir ) );\n        }\n    }\n","date":"2010-06-27 07:16:18","endLine":210,"groupId":"3101","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"unalignFromBaseDirectory","params":"(Modelmodel@Filebasedir)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-maven-10-0.7/blobInfo/CC_OUT/blobs/c9/ec15de6d622d7f757bcfc7d63032d5ce9ae149.src","preCode":"    public void unalignFromBaseDirectory( Model model, File basedir )\n    {\n        Build build = model.getBuild();\n\n        if ( build != null )\n        {\n            build.setDirectory( unalignFromBaseDirectory( build.getDirectory(), basedir ) );\n\n            build.setSourceDirectory( unalignFromBaseDirectory( build.getSourceDirectory(), basedir ) );\n\n            build.setTestSourceDirectory( unalignFromBaseDirectory( build.getTestSourceDirectory(), basedir ) );\n\n            for ( Iterator i = build.getResources().iterator(); i.hasNext(); )\n            {\n                Resource resource = (Resource) i.next();\n\n                resource.setDirectory( unalignFromBaseDirectory( resource.getDirectory(), basedir ) );\n            }\n\n            for ( Iterator i = build.getTestResources().iterator(); i.hasNext(); )\n            {\n                Resource resource = (Resource) i.next();\n\n                resource.setDirectory( unalignFromBaseDirectory( resource.getDirectory(), basedir ) );\n            }\n\n            if ( build.getFilters() != null )\n            {\n                List filters = new ArrayList();\n                for ( Iterator i = build.getFilters().iterator(); i.hasNext(); )\n                {\n                    String filter = (String) i.next();\n\n                    filters.add( unalignFromBaseDirectory( filter, basedir ) );\n                }\n                build.setFilters( filters );\n            }\n\n            build.setOutputDirectory( unalignFromBaseDirectory( build.getOutputDirectory(), basedir ) );\n\n            build.setTestOutputDirectory( unalignFromBaseDirectory( build.getTestOutputDirectory(), basedir ) );\n        }\n\n        Reporting reporting = model.getReporting();\n\n        if ( reporting != null )\n        {\n            reporting.setOutputDirectory( unalignFromBaseDirectory( reporting.getOutputDirectory(), basedir ) );\n        }\n    }\n","realPath":"maven-compat/src/main/java/org/apache/maven/project/path/DefaultPathTranslator.java","repoName":"maven","snippetEndLine":0,"snippetStartLine":0,"startLine":167,"status":"M"}],"commitId":"23f20956520e583c36f4c9a0351c0021d86929cd","commitMessage":"@@@fixed errors reported by Checkstyle\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/maven-3/trunk@958295 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2010-06-27 07:16:18","modifiedFileCount":"234","status":"M","submitter":"Herve Boutemy"},{"authorTime":"2011-01-04 03:11:36","codes":[{"authorDate":"2009-06-03 03:31:34","commitOrder":6,"curCode":"    public void alignToBaseDirectory( Model model, File basedir, ModelBuildingRequest request )\n    {\n        if ( model == null || basedir == null )\n        {\n            return;\n        }\n\n        Build build = model.getBuild();\n\n        if ( build != null )\n        {\n            build.setDirectory( alignToBaseDirectory( build.getDirectory(), basedir ) );\n\n            build.setSourceDirectory( alignToBaseDirectory( build.getSourceDirectory(), basedir ) );\n\n            build.setTestSourceDirectory( alignToBaseDirectory( build.getTestSourceDirectory(), basedir ) );\n\n            build.setScriptSourceDirectory( alignToBaseDirectory( build.getScriptSourceDirectory(), basedir ) );\n\n            for ( Resource resource : build.getResources() )\n            {\n                resource.setDirectory( alignToBaseDirectory( resource.getDirectory(), basedir ) );\n            }\n\n            for ( Resource resource : build.getTestResources() )\n            {\n                resource.setDirectory( alignToBaseDirectory( resource.getDirectory(), basedir ) );\n            }\n\n            if ( build.getFilters() != null )\n            {\n                List<String> filters = new ArrayList<String>( build.getFilters().size() );\n                for ( String filter : build.getFilters() )\n                {\n                    filters.add( alignToBaseDirectory( filter, basedir ) );\n                }\n                build.setFilters( filters );\n            }\n\n            build.setOutputDirectory( alignToBaseDirectory( build.getOutputDirectory(), basedir ) );\n\n            build.setTestOutputDirectory( alignToBaseDirectory( build.getTestOutputDirectory(), basedir ) );\n        }\n\n        Reporting reporting = model.getReporting();\n\n        if ( reporting != null )\n        {\n            reporting.setOutputDirectory( alignToBaseDirectory( reporting.getOutputDirectory(), basedir ) );\n        }\n    }\n","date":"2009-06-03 03:31:34","endLine":97,"groupId":"4660","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"alignToBaseDirectory","params":"(Modelmodel@Filebasedir@ModelBuildingRequestrequest)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-maven-10-0.7/blobInfo/CC_OUT/blobs/3a/a35ea95843c7c12fb916f8fd75b70b1aa6c84d.src","preCode":"    public void alignToBaseDirectory( Model model, File basedir, ModelBuildingRequest request )\n    {\n        if ( model == null || basedir == null )\n        {\n            return;\n        }\n\n        Build build = model.getBuild();\n\n        if ( build != null )\n        {\n            build.setDirectory( alignToBaseDirectory( build.getDirectory(), basedir ) );\n\n            build.setSourceDirectory( alignToBaseDirectory( build.getSourceDirectory(), basedir ) );\n\n            build.setTestSourceDirectory( alignToBaseDirectory( build.getTestSourceDirectory(), basedir ) );\n\n            build.setScriptSourceDirectory( alignToBaseDirectory( build.getScriptSourceDirectory(), basedir ) );\n\n            for ( Resource resource : build.getResources() )\n            {\n                resource.setDirectory( alignToBaseDirectory( resource.getDirectory(), basedir ) );\n            }\n\n            for ( Resource resource : build.getTestResources() )\n            {\n                resource.setDirectory( alignToBaseDirectory( resource.getDirectory(), basedir ) );\n            }\n\n            if ( build.getFilters() != null )\n            {\n                List<String> filters = new ArrayList<String>( build.getFilters().size() );\n                for ( String filter : build.getFilters() )\n                {\n                    filters.add( alignToBaseDirectory( filter, basedir ) );\n                }\n                build.setFilters( filters );\n            }\n\n            build.setOutputDirectory( alignToBaseDirectory( build.getOutputDirectory(), basedir ) );\n\n            build.setTestOutputDirectory( alignToBaseDirectory( build.getTestOutputDirectory(), basedir ) );\n        }\n\n        Reporting reporting = model.getReporting();\n\n        if ( reporting != null )\n        {\n            reporting.setOutputDirectory( alignToBaseDirectory( reporting.getOutputDirectory(), basedir ) );\n        }\n    }\n","realPath":"maven-model-builder/src/main/java/org/apache/maven/model/path/DefaultModelPathTranslator.java","repoName":"maven","snippetEndLine":0,"snippetStartLine":0,"startLine":47,"status":"N"},{"authorDate":"2011-01-04 03:11:36","commitOrder":6,"curCode":"    public void unalignFromBaseDirectory( Model model, File basedir )\n    {\n        if ( basedir == null )\n        {\n            return;\n        }\n\n        Build build = model.getBuild();\n\n        if ( build != null )\n        {\n            build.setDirectory( unalignFromBaseDirectory( build.getDirectory(), basedir ) );\n\n            build.setSourceDirectory( unalignFromBaseDirectory( build.getSourceDirectory(), basedir ) );\n\n            build.setTestSourceDirectory( unalignFromBaseDirectory( build.getTestSourceDirectory(), basedir ) );\n\n            for ( Resource resource : build.getResources() )\n            {\n                resource.setDirectory( unalignFromBaseDirectory( resource.getDirectory(), basedir ) );\n            }\n\n            for ( Resource resource : build.getTestResources() )\n            {\n                resource.setDirectory( unalignFromBaseDirectory( resource.getDirectory(), basedir ) );\n            }\n\n            if ( build.getFilters() != null )\n            {\n                List<String> filters = new ArrayList<String>();\n                for ( String filter : build.getFilters() )\n                {\n                    filters.add( unalignFromBaseDirectory( filter, basedir ) );\n                }\n                build.setFilters( filters );\n            }\n\n            build.setOutputDirectory( unalignFromBaseDirectory( build.getOutputDirectory(), basedir ) );\n\n            build.setTestOutputDirectory( unalignFromBaseDirectory( build.getTestOutputDirectory(), basedir ) );\n        }\n\n        Reporting reporting = model.getReporting();\n\n        if ( reporting != null )\n        {\n            reporting.setOutputDirectory( unalignFromBaseDirectory( reporting.getOutputDirectory(), basedir ) );\n        }\n    }\n","date":"2011-01-04 03:11:36","endLine":225,"groupId":"3101","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"unalignFromBaseDirectory","params":"(Modelmodel@Filebasedir)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-maven-10-0.7/blobInfo/CC_OUT/blobs/02/0b6526504e1004ad287091096ce0aade8091df.src","preCode":"    public void unalignFromBaseDirectory( Model model, File basedir )\n    {\n        Build build = model.getBuild();\n\n        if ( build != null )\n        {\n            build.setDirectory( unalignFromBaseDirectory( build.getDirectory(), basedir ) );\n\n            build.setSourceDirectory( unalignFromBaseDirectory( build.getSourceDirectory(), basedir ) );\n\n            build.setTestSourceDirectory( unalignFromBaseDirectory( build.getTestSourceDirectory(), basedir ) );\n\n            for ( Resource resource : build.getResources() )\n            {\n                resource.setDirectory( unalignFromBaseDirectory( resource.getDirectory(), basedir ) );\n            }\n\n            for ( Resource resource : build.getTestResources() )\n            {\n                resource.setDirectory( unalignFromBaseDirectory( resource.getDirectory(), basedir ) );\n            }\n\n            if ( build.getFilters() != null )\n            {\n                List<String> filters = new ArrayList<String>();\n                for ( String filter : build.getFilters() )\n                {\n                    filters.add( unalignFromBaseDirectory( filter, basedir ) );\n                }\n                build.setFilters( filters );\n            }\n\n            build.setOutputDirectory( unalignFromBaseDirectory( build.getOutputDirectory(), basedir ) );\n\n            build.setTestOutputDirectory( unalignFromBaseDirectory( build.getTestOutputDirectory(), basedir ) );\n        }\n\n        Reporting reporting = model.getReporting();\n\n        if ( reporting != null )\n        {\n            reporting.setOutputDirectory( unalignFromBaseDirectory( reporting.getOutputDirectory(), basedir ) );\n        }\n    }\n","realPath":"maven-compat/src/main/java/org/apache/maven/project/path/DefaultPathTranslator.java","repoName":"maven","snippetEndLine":0,"snippetStartLine":0,"startLine":177,"status":"M"}],"commitId":"469d0096fdae81b066c88757ed44bbef8ce5bfc3","commitMessage":"@@@[MNG-4933] With a resource directory as . maven raise an java.lang.StringIndexOutOfBoundsException:217\n\no Aligned code with r1050425 of https://svn.apache.org/repos/asf/maven/maven-2/branches/maven-2.2.x/maven-project/src/main/java/org/apache/maven/project/path/DefaultPathTranslator.java\no Fixed special case of path=${basedir} to yield valid/non-empty path \".\"\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/maven-3/trunk@1054712 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2011-01-04 03:11:36","modifiedFileCount":"2","status":"M","submitter":"Benjamin Bentmann"},{"authorTime":"2015-03-06 14:12:21","codes":[{"authorDate":"2015-03-06 14:12:21","commitOrder":7,"curCode":"    public void alignToBaseDirectory( Model model, File basedir, ModelBuildingRequest request )\n    {\n        if ( model == null || basedir == null )\n        {\n            return;\n        }\n\n        Build build = model.getBuild();\n\n        if ( build != null )\n        {\n            build.setDirectory( alignToBaseDirectory( build.getDirectory(), basedir ) );\n\n            build.setSourceDirectory( alignToBaseDirectory( build.getSourceDirectory(), basedir ) );\n\n            build.setTestSourceDirectory( alignToBaseDirectory( build.getTestSourceDirectory(), basedir ) );\n\n            build.setScriptSourceDirectory( alignToBaseDirectory( build.getScriptSourceDirectory(), basedir ) );\n\n            for ( Resource resource : build.getResources() )\n            {\n                resource.setDirectory( alignToBaseDirectory( resource.getDirectory(), basedir ) );\n            }\n\n            for ( Resource resource : build.getTestResources() )\n            {\n                resource.setDirectory( alignToBaseDirectory( resource.getDirectory(), basedir ) );\n            }\n\n            if ( build.getFilters() != null )\n            {\n                List<String> filters = new ArrayList<>( build.getFilters().size() );\n                for ( String filter : build.getFilters() )\n                {\n                    filters.add( alignToBaseDirectory( filter, basedir ) );\n                }\n                build.setFilters( filters );\n            }\n\n            build.setOutputDirectory( alignToBaseDirectory( build.getOutputDirectory(), basedir ) );\n\n            build.setTestOutputDirectory( alignToBaseDirectory( build.getTestOutputDirectory(), basedir ) );\n        }\n\n        Reporting reporting = model.getReporting();\n\n        if ( reporting != null )\n        {\n            reporting.setOutputDirectory( alignToBaseDirectory( reporting.getOutputDirectory(), basedir ) );\n        }\n    }\n","date":"2015-06-20 16:56:07","endLine":104,"groupId":"12276","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"alignToBaseDirectory","params":"(Modelmodel@Filebasedir@ModelBuildingRequestrequest)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-maven-10-0.7/blobInfo/CC_OUT/blobs/e4/f319c9b4c78109662feebd9fdd15ba954af362.src","preCode":"    public void alignToBaseDirectory( Model model, File basedir, ModelBuildingRequest request )\n    {\n        if ( model == null || basedir == null )\n        {\n            return;\n        }\n\n        Build build = model.getBuild();\n\n        if ( build != null )\n        {\n            build.setDirectory( alignToBaseDirectory( build.getDirectory(), basedir ) );\n\n            build.setSourceDirectory( alignToBaseDirectory( build.getSourceDirectory(), basedir ) );\n\n            build.setTestSourceDirectory( alignToBaseDirectory( build.getTestSourceDirectory(), basedir ) );\n\n            build.setScriptSourceDirectory( alignToBaseDirectory( build.getScriptSourceDirectory(), basedir ) );\n\n            for ( Resource resource : build.getResources() )\n            {\n                resource.setDirectory( alignToBaseDirectory( resource.getDirectory(), basedir ) );\n            }\n\n            for ( Resource resource : build.getTestResources() )\n            {\n                resource.setDirectory( alignToBaseDirectory( resource.getDirectory(), basedir ) );\n            }\n\n            if ( build.getFilters() != null )\n            {\n                List<String> filters = new ArrayList<String>( build.getFilters().size() );\n                for ( String filter : build.getFilters() )\n                {\n                    filters.add( alignToBaseDirectory( filter, basedir ) );\n                }\n                build.setFilters( filters );\n            }\n\n            build.setOutputDirectory( alignToBaseDirectory( build.getOutputDirectory(), basedir ) );\n\n            build.setTestOutputDirectory( alignToBaseDirectory( build.getTestOutputDirectory(), basedir ) );\n        }\n\n        Reporting reporting = model.getReporting();\n\n        if ( reporting != null )\n        {\n            reporting.setOutputDirectory( alignToBaseDirectory( reporting.getOutputDirectory(), basedir ) );\n        }\n    }\n","realPath":"maven-model-builder/src/main/java/org/apache/maven/model/path/DefaultModelPathTranslator.java","repoName":"maven","snippetEndLine":0,"snippetStartLine":0,"startLine":54,"status":"M"},{"authorDate":"2015-03-06 14:12:21","commitOrder":7,"curCode":"    public void unalignFromBaseDirectory( Model model, File basedir )\n    {\n        if ( basedir == null )\n        {\n            return;\n        }\n\n        Build build = model.getBuild();\n\n        if ( build != null )\n        {\n            build.setDirectory( unalignFromBaseDirectory( build.getDirectory(), basedir ) );\n\n            build.setSourceDirectory( unalignFromBaseDirectory( build.getSourceDirectory(), basedir ) );\n\n            build.setTestSourceDirectory( unalignFromBaseDirectory( build.getTestSourceDirectory(), basedir ) );\n\n            for ( Resource resource : build.getResources() )\n            {\n                resource.setDirectory( unalignFromBaseDirectory( resource.getDirectory(), basedir ) );\n            }\n\n            for ( Resource resource : build.getTestResources() )\n            {\n                resource.setDirectory( unalignFromBaseDirectory( resource.getDirectory(), basedir ) );\n            }\n\n            if ( build.getFilters() != null )\n            {\n                List<String> filters = new ArrayList<>();\n                for ( String filter : build.getFilters() )\n                {\n                    filters.add( unalignFromBaseDirectory( filter, basedir ) );\n                }\n                build.setFilters( filters );\n            }\n\n            build.setOutputDirectory( unalignFromBaseDirectory( build.getOutputDirectory(), basedir ) );\n\n            build.setTestOutputDirectory( unalignFromBaseDirectory( build.getTestOutputDirectory(), basedir ) );\n        }\n\n        Reporting reporting = model.getReporting();\n\n        if ( reporting != null )\n        {\n            reporting.setOutputDirectory( unalignFromBaseDirectory( reporting.getOutputDirectory(), basedir ) );\n        }\n    }\n","date":"2015-06-20 16:56:07","endLine":225,"groupId":"12276","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"unalignFromBaseDirectory","params":"(Modelmodel@Filebasedir)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-maven-10-0.7/blobInfo/CC_OUT/blobs/b4/061ec9944ead5035f22c33c674faa5537f6e93.src","preCode":"    public void unalignFromBaseDirectory( Model model, File basedir )\n    {\n        if ( basedir == null )\n        {\n            return;\n        }\n\n        Build build = model.getBuild();\n\n        if ( build != null )\n        {\n            build.setDirectory( unalignFromBaseDirectory( build.getDirectory(), basedir ) );\n\n            build.setSourceDirectory( unalignFromBaseDirectory( build.getSourceDirectory(), basedir ) );\n\n            build.setTestSourceDirectory( unalignFromBaseDirectory( build.getTestSourceDirectory(), basedir ) );\n\n            for ( Resource resource : build.getResources() )\n            {\n                resource.setDirectory( unalignFromBaseDirectory( resource.getDirectory(), basedir ) );\n            }\n\n            for ( Resource resource : build.getTestResources() )\n            {\n                resource.setDirectory( unalignFromBaseDirectory( resource.getDirectory(), basedir ) );\n            }\n\n            if ( build.getFilters() != null )\n            {\n                List<String> filters = new ArrayList<String>();\n                for ( String filter : build.getFilters() )\n                {\n                    filters.add( unalignFromBaseDirectory( filter, basedir ) );\n                }\n                build.setFilters( filters );\n            }\n\n            build.setOutputDirectory( unalignFromBaseDirectory( build.getOutputDirectory(), basedir ) );\n\n            build.setTestOutputDirectory( unalignFromBaseDirectory( build.getTestOutputDirectory(), basedir ) );\n        }\n\n        Reporting reporting = model.getReporting();\n\n        if ( reporting != null )\n        {\n            reporting.setOutputDirectory( unalignFromBaseDirectory( reporting.getOutputDirectory(), basedir ) );\n        }\n    }\n","realPath":"maven-compat/src/main/java/org/apache/maven/project/path/DefaultPathTranslator.java","repoName":"maven","snippetEndLine":0,"snippetStartLine":0,"startLine":177,"status":"M"}],"commitId":"7badeb5b5bdfb48dd3c9533d224418d0648b76ce","commitMessage":"@@@Upgraded to java7 language features\n","date":"2015-06-20 16:56:07","modifiedFileCount":"234","status":"M","submitter":"Kristian Rosenvold"}]
