[{"authorTime":"2009-05-29 00:46:43","codes":[{"authorDate":"2009-05-29 00:46:43","commitOrder":1,"curCode":"    public void testClone()\n        throws Exception\n    {\n        File f = getFileForClasspathResource( \"canonical-pom.xml\" );\n        MavenProject projectToClone = getProject( f );\n\n        MavenProject clonedProject = (MavenProject) projectToClone.clone();\n        assertEquals( \"maven-core\", clonedProject.getArtifactId() );\n        Map clonedMap = clonedProject.getManagedVersionMap();\n        assertNotNull( \"ManagedVersionMap not copied\", clonedMap );\n        assertTrue( \"ManagedVersionMap is not empty\", clonedMap.isEmpty() );\n    }\n","date":"2009-05-29 00:46:43","endLine":102,"groupId":"1211","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testClone","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-maven-10-0.7/blobInfo/CC_OUT/blobs/4c/6ba9920a484e3b9cc8e5391e965e2182be21af.src","preCode":"    public void testClone()\n        throws Exception\n    {\n        File f = getFileForClasspathResource( \"canonical-pom.xml\" );\n        MavenProject projectToClone = getProject( f );\n\n        MavenProject clonedProject = (MavenProject) projectToClone.clone();\n        assertEquals( \"maven-core\", clonedProject.getArtifactId() );\n        Map clonedMap = clonedProject.getManagedVersionMap();\n        assertNotNull( \"ManagedVersionMap not copied\", clonedMap );\n        assertTrue( \"ManagedVersionMap is not empty\", clonedMap.isEmpty() );\n    }\n","realPath":"maven-core/src/test/java/org/apache/maven/project/MavenProjectTest.java","repoName":"maven","snippetEndLine":0,"snippetStartLine":0,"startLine":91,"status":"B"},{"authorDate":"2009-05-29 00:46:43","commitOrder":1,"curCode":"    public void testCloneWithDependencyManagement()\n        throws Exception\n    {\n        File f = getFileForClasspathResource( \"dependencyManagement-pom.xml\" );\n        MavenProject projectToClone = getProjectWithDependencies( f );\n        DependencyManagement dep = projectToClone.getDependencyManagement();\n        assertNotNull( \"No dependencyManagement\", dep );\n        List list = dep.getDependencies();\n        assertNotNull( \"No dependencies\", list );\n        assertTrue( \"Empty dependency list\", !list.isEmpty() );\n\n        Map map = projectToClone.getManagedVersionMap();\n        assertNotNull( \"No ManagedVersionMap\", map );\n        assertTrue( \"ManagedVersionMap is empty\", !map.isEmpty() );\n\n        MavenProject clonedProject = (MavenProject) projectToClone.clone();\n        assertEquals( \"maven-core\", clonedProject.getArtifactId() );\n        Map clonedMap = clonedProject.getManagedVersionMap();\n        assertNotNull( \"ManagedVersionMap not copied\", clonedMap );\n        assertTrue( \"ManagedVersionMap is empty\", !clonedMap.isEmpty() );\n        assertTrue( \"Not a ManagedVersionMap\", clonedMap instanceof ManagedVersionMap );\n        assertTrue( \"ManagedVersionMap does not contain test key\",\n                    clonedMap.containsKey( \"maven-test:maven-test-b:jar\" ) );\n    }\n","date":"2009-05-29 00:46:43","endLine":127,"groupId":"1213","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testCloneWithDependencyManagement","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-maven-10-0.7/blobInfo/CC_OUT/blobs/4c/6ba9920a484e3b9cc8e5391e965e2182be21af.src","preCode":"    public void testCloneWithDependencyManagement()\n        throws Exception\n    {\n        File f = getFileForClasspathResource( \"dependencyManagement-pom.xml\" );\n        MavenProject projectToClone = getProjectWithDependencies( f );\n        DependencyManagement dep = projectToClone.getDependencyManagement();\n        assertNotNull( \"No dependencyManagement\", dep );\n        List list = dep.getDependencies();\n        assertNotNull( \"No dependencies\", list );\n        assertTrue( \"Empty dependency list\", !list.isEmpty() );\n\n        Map map = projectToClone.getManagedVersionMap();\n        assertNotNull( \"No ManagedVersionMap\", map );\n        assertTrue( \"ManagedVersionMap is empty\", !map.isEmpty() );\n\n        MavenProject clonedProject = (MavenProject) projectToClone.clone();\n        assertEquals( \"maven-core\", clonedProject.getArtifactId() );\n        Map clonedMap = clonedProject.getManagedVersionMap();\n        assertNotNull( \"ManagedVersionMap not copied\", clonedMap );\n        assertTrue( \"ManagedVersionMap is empty\", !clonedMap.isEmpty() );\n        assertTrue( \"Not a ManagedVersionMap\", clonedMap instanceof ManagedVersionMap );\n        assertTrue( \"ManagedVersionMap does not contain test key\",\n                    clonedMap.containsKey( \"maven-test:maven-test-b:jar\" ) );\n    }\n","realPath":"maven-core/src/test/java/org/apache/maven/project/MavenProjectTest.java","repoName":"maven","snippetEndLine":0,"snippetStartLine":0,"startLine":104,"status":"B"}],"commitId":"d5fcfe0e19fb6de2c1f26b6d9b4188c2584621ac","commitMessage":"@@@o swapping the branch to trunk\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@779660 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2009-05-29 00:46:43","modifiedFileCount":"153","status":"B","submitter":"Jason van Zyl"},{"authorTime":"2009-10-27 04:16:00","codes":[{"authorDate":"2009-05-29 00:46:43","commitOrder":2,"curCode":"    public void testClone()\n        throws Exception\n    {\n        File f = getFileForClasspathResource( \"canonical-pom.xml\" );\n        MavenProject projectToClone = getProject( f );\n\n        MavenProject clonedProject = (MavenProject) projectToClone.clone();\n        assertEquals( \"maven-core\", clonedProject.getArtifactId() );\n        Map clonedMap = clonedProject.getManagedVersionMap();\n        assertNotNull( \"ManagedVersionMap not copied\", clonedMap );\n        assertTrue( \"ManagedVersionMap is not empty\", clonedMap.isEmpty() );\n    }\n","date":"2009-05-29 00:46:43","endLine":102,"groupId":"1211","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testClone","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-maven-10-0.7/blobInfo/CC_OUT/blobs/4c/6ba9920a484e3b9cc8e5391e965e2182be21af.src","preCode":"    public void testClone()\n        throws Exception\n    {\n        File f = getFileForClasspathResource( \"canonical-pom.xml\" );\n        MavenProject projectToClone = getProject( f );\n\n        MavenProject clonedProject = (MavenProject) projectToClone.clone();\n        assertEquals( \"maven-core\", clonedProject.getArtifactId() );\n        Map clonedMap = clonedProject.getManagedVersionMap();\n        assertNotNull( \"ManagedVersionMap not copied\", clonedMap );\n        assertTrue( \"ManagedVersionMap is not empty\", clonedMap.isEmpty() );\n    }\n","realPath":"maven-core/src/test/java/org/apache/maven/project/MavenProjectTest.java","repoName":"maven","snippetEndLine":0,"snippetStartLine":0,"startLine":91,"status":"N"},{"authorDate":"2009-10-27 04:16:00","commitOrder":2,"curCode":"    public void testCloneWithDependencyManagement()\n        throws Exception\n    {\n        File f = getFileForClasspathResource( \"dependencyManagement-pom.xml\" );\n        MavenProject projectToClone = getProjectWithDependencies( f );\n        DependencyManagement dep = projectToClone.getDependencyManagement();\n        assertNotNull( \"No dependencyManagement\", dep );\n        List list = dep.getDependencies();\n        assertNotNull( \"No dependencies\", list );\n        assertTrue( \"Empty dependency list\", !list.isEmpty() );\n\n        Map map = projectToClone.getManagedVersionMap();\n        assertNotNull( \"No ManagedVersionMap\", map );\n        assertTrue( \"ManagedVersionMap is empty\", !map.isEmpty() );\n\n        MavenProject clonedProject = (MavenProject) projectToClone.clone();\n        assertEquals( \"maven-core\", clonedProject.getArtifactId() );\n        Map clonedMap = clonedProject.getManagedVersionMap();\n        assertNotNull( \"ManagedVersionMap not copied\", clonedMap );\n        assertTrue( \"ManagedVersionMap is empty\", !clonedMap.isEmpty() );\n        assertTrue( \"ManagedVersionMap does not contain test key\",\n                    clonedMap.containsKey( \"maven-test:maven-test-b:jar\" ) );\n    }\n","date":"2009-10-27 04:16:00","endLine":125,"groupId":"1213","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testCloneWithDependencyManagement","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-maven-10-0.7/blobInfo/CC_OUT/blobs/ba/78d8378c0aec3155532be9c3b2e4bb2326283a.src","preCode":"    public void testCloneWithDependencyManagement()\n        throws Exception\n    {\n        File f = getFileForClasspathResource( \"dependencyManagement-pom.xml\" );\n        MavenProject projectToClone = getProjectWithDependencies( f );\n        DependencyManagement dep = projectToClone.getDependencyManagement();\n        assertNotNull( \"No dependencyManagement\", dep );\n        List list = dep.getDependencies();\n        assertNotNull( \"No dependencies\", list );\n        assertTrue( \"Empty dependency list\", !list.isEmpty() );\n\n        Map map = projectToClone.getManagedVersionMap();\n        assertNotNull( \"No ManagedVersionMap\", map );\n        assertTrue( \"ManagedVersionMap is empty\", !map.isEmpty() );\n\n        MavenProject clonedProject = (MavenProject) projectToClone.clone();\n        assertEquals( \"maven-core\", clonedProject.getArtifactId() );\n        Map clonedMap = clonedProject.getManagedVersionMap();\n        assertNotNull( \"ManagedVersionMap not copied\", clonedMap );\n        assertTrue( \"ManagedVersionMap is empty\", !clonedMap.isEmpty() );\n        assertTrue( \"Not a ManagedVersionMap\", clonedMap instanceof ManagedVersionMap );\n        assertTrue( \"ManagedVersionMap does not contain test key\",\n                    clonedMap.containsKey( \"maven-test:maven-test-b:jar\" ) );\n    }\n","realPath":"maven-core/src/test/java/org/apache/maven/project/MavenProjectTest.java","repoName":"maven","snippetEndLine":0,"snippetStartLine":0,"startLine":103,"status":"M"}],"commitId":"20f8323b0a993799f77db49c787829449a17b8c0","commitMessage":"@@@[MNG-4221] Push all repository/artifact related code into a legacy module and create a backward compat layer for external consumers\n\no Refactored code to make maven-compat depend on maven-core.  this got ugly regarding some tests which to a high degree depend on a full-blown repository system\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/maven-3/trunk@829934 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2009-10-27 04:16:00","modifiedFileCount":"12","status":"M","submitter":"Benjamin Bentmann"},{"authorTime":"2010-11-26 20:24:25","codes":[{"authorDate":"2010-11-26 20:24:25","commitOrder":3,"curCode":"    public void testClone()\n        throws Exception\n    {\n        File f = getFileForClasspathResource( \"canonical-pom.xml\" );\n        MavenProject projectToClone = getProject( f );\n\n        MavenProject clonedProject = (MavenProject) projectToClone.clone();\n        assertEquals( \"maven-core\", clonedProject.getArtifactId() );\n        Map<?, ?> clonedMap = clonedProject.getManagedVersionMap();\n        assertNotNull( \"ManagedVersionMap not copied\", clonedMap );\n        assertTrue( \"ManagedVersionMap is not empty\", clonedMap.isEmpty() );\n    }\n","date":"2010-11-26 20:24:25","endLine":102,"groupId":"796","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testClone","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-maven-10-0.7/blobInfo/CC_OUT/blobs/db/ff28a1921f748736addfd37a2ea41e0acc528e.src","preCode":"    public void testClone()\n        throws Exception\n    {\n        File f = getFileForClasspathResource( \"canonical-pom.xml\" );\n        MavenProject projectToClone = getProject( f );\n\n        MavenProject clonedProject = (MavenProject) projectToClone.clone();\n        assertEquals( \"maven-core\", clonedProject.getArtifactId() );\n        Map clonedMap = clonedProject.getManagedVersionMap();\n        assertNotNull( \"ManagedVersionMap not copied\", clonedMap );\n        assertTrue( \"ManagedVersionMap is not empty\", clonedMap.isEmpty() );\n    }\n","realPath":"maven-core/src/test/java/org/apache/maven/project/MavenProjectTest.java","repoName":"maven","snippetEndLine":0,"snippetStartLine":0,"startLine":91,"status":"M"},{"authorDate":"2010-11-26 20:24:25","commitOrder":3,"curCode":"    public void testCloneWithDependencyManagement()\n        throws Exception\n    {\n        File f = getFileForClasspathResource( \"dependencyManagement-pom.xml\" );\n        MavenProject projectToClone = getProjectWithDependencies( f );\n        DependencyManagement dep = projectToClone.getDependencyManagement();\n        assertNotNull( \"No dependencyManagement\", dep );\n        List<?> list = dep.getDependencies();\n        assertNotNull( \"No dependencies\", list );\n        assertTrue( \"Empty dependency list\", !list.isEmpty() );\n\n        Map<?, ?> map = projectToClone.getManagedVersionMap();\n        assertNotNull( \"No ManagedVersionMap\", map );\n        assertTrue( \"ManagedVersionMap is empty\", !map.isEmpty() );\n\n        MavenProject clonedProject = (MavenProject) projectToClone.clone();\n        assertEquals( \"maven-core\", clonedProject.getArtifactId() );\n        Map<?, ?> clonedMap = clonedProject.getManagedVersionMap();\n        assertNotNull( \"ManagedVersionMap not copied\", clonedMap );\n        assertTrue( \"ManagedVersionMap is empty\", !clonedMap.isEmpty() );\n        assertTrue( \"ManagedVersionMap does not contain test key\",\n                    clonedMap.containsKey( \"maven-test:maven-test-b:jar\" ) );\n    }\n","date":"2010-11-26 20:24:25","endLine":126,"groupId":"2403","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testCloneWithDependencyManagement","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-maven-10-0.7/blobInfo/CC_OUT/blobs/db/ff28a1921f748736addfd37a2ea41e0acc528e.src","preCode":"    public void testCloneWithDependencyManagement()\n        throws Exception\n    {\n        File f = getFileForClasspathResource( \"dependencyManagement-pom.xml\" );\n        MavenProject projectToClone = getProjectWithDependencies( f );\n        DependencyManagement dep = projectToClone.getDependencyManagement();\n        assertNotNull( \"No dependencyManagement\", dep );\n        List list = dep.getDependencies();\n        assertNotNull( \"No dependencies\", list );\n        assertTrue( \"Empty dependency list\", !list.isEmpty() );\n\n        Map map = projectToClone.getManagedVersionMap();\n        assertNotNull( \"No ManagedVersionMap\", map );\n        assertTrue( \"ManagedVersionMap is empty\", !map.isEmpty() );\n\n        MavenProject clonedProject = (MavenProject) projectToClone.clone();\n        assertEquals( \"maven-core\", clonedProject.getArtifactId() );\n        Map clonedMap = clonedProject.getManagedVersionMap();\n        assertNotNull( \"ManagedVersionMap not copied\", clonedMap );\n        assertTrue( \"ManagedVersionMap is empty\", !clonedMap.isEmpty() );\n        assertTrue( \"ManagedVersionMap does not contain test key\",\n                    clonedMap.containsKey( \"maven-test:maven-test-b:jar\" ) );\n    }\n","realPath":"maven-core/src/test/java/org/apache/maven/project/MavenProjectTest.java","repoName":"maven","snippetEndLine":0,"snippetStartLine":0,"startLine":104,"status":"M"}],"commitId":"990f4519fe0fcf59d0488d81aeb0cddcfe6b29e1","commitMessage":"@@@o Used generics\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/maven-3/trunk@1039329 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2010-11-26 20:24:25","modifiedFileCount":"1","status":"M","submitter":"Benjamin Bentmann"},{"authorTime":"2011-12-11 16:48:07","codes":[{"authorDate":"2011-12-11 16:48:07","commitOrder":4,"curCode":"    public void testClone()\n        throws Exception\n    {\n        File f = getFileForClasspathResource( \"canonical-pom.xml\" );\n        MavenProject projectToClone = getProject( f );\n\n        MavenProject clonedProject = projectToClone.clone();\n        assertEquals( \"maven-core\", clonedProject.getArtifactId() );\n        Map<?, ?> clonedMap = clonedProject.getManagedVersionMap();\n        assertNotNull( \"ManagedVersionMap not copied\", clonedMap );\n        assertTrue( \"ManagedVersionMap is not empty\", clonedMap.isEmpty() );\n    }\n","date":"2011-12-11 16:48:07","endLine":104,"groupId":"796","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"testClone","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-maven-10-0.7/blobInfo/CC_OUT/blobs/60/736a384d595445b94b4a0d9ca2789ea77d6896.src","preCode":"    public void testClone()\n        throws Exception\n    {\n        File f = getFileForClasspathResource( \"canonical-pom.xml\" );\n        MavenProject projectToClone = getProject( f );\n\n        MavenProject clonedProject = (MavenProject) projectToClone.clone();\n        assertEquals( \"maven-core\", clonedProject.getArtifactId() );\n        Map<?, ?> clonedMap = clonedProject.getManagedVersionMap();\n        assertNotNull( \"ManagedVersionMap not copied\", clonedMap );\n        assertTrue( \"ManagedVersionMap is not empty\", clonedMap.isEmpty() );\n    }\n","realPath":"maven-core/src/test/java/org/apache/maven/project/MavenProjectTest.java","repoName":"maven","snippetEndLine":0,"snippetStartLine":0,"startLine":93,"status":"M"},{"authorDate":"2011-12-11 16:48:07","commitOrder":4,"curCode":"    public void testCloneWithDependencyManagement()\n        throws Exception\n    {\n        File f = getFileForClasspathResource( \"dependencyManagement-pom.xml\" );\n        MavenProject projectToClone = getProjectWithDependencies( f );\n        DependencyManagement dep = projectToClone.getDependencyManagement();\n        assertNotNull( \"No dependencyManagement\", dep );\n        List<?> list = dep.getDependencies();\n        assertNotNull( \"No dependencies\", list );\n        assertTrue( \"Empty dependency list\", !list.isEmpty() );\n\n        Map<?, ?> map = projectToClone.getManagedVersionMap();\n        assertNotNull( \"No ManagedVersionMap\", map );\n        assertTrue( \"ManagedVersionMap is empty\", !map.isEmpty() );\n\n        MavenProject clonedProject = projectToClone.clone();\n        assertEquals( \"maven-core\", clonedProject.getArtifactId() );\n        Map<?, ?> clonedMap = clonedProject.getManagedVersionMap();\n        assertNotNull( \"ManagedVersionMap not copied\", clonedMap );\n        assertTrue( \"ManagedVersionMap is empty\", !clonedMap.isEmpty() );\n        assertTrue( \"ManagedVersionMap does not contain test key\",\n                    clonedMap.containsKey( \"maven-test:maven-test-b:jar\" ) );\n    }\n","date":"2011-12-11 16:48:07","endLine":128,"groupId":"2403","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"testCloneWithDependencyManagement","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-maven-10-0.7/blobInfo/CC_OUT/blobs/60/736a384d595445b94b4a0d9ca2789ea77d6896.src","preCode":"    public void testCloneWithDependencyManagement()\n        throws Exception\n    {\n        File f = getFileForClasspathResource( \"dependencyManagement-pom.xml\" );\n        MavenProject projectToClone = getProjectWithDependencies( f );\n        DependencyManagement dep = projectToClone.getDependencyManagement();\n        assertNotNull( \"No dependencyManagement\", dep );\n        List<?> list = dep.getDependencies();\n        assertNotNull( \"No dependencies\", list );\n        assertTrue( \"Empty dependency list\", !list.isEmpty() );\n\n        Map<?, ?> map = projectToClone.getManagedVersionMap();\n        assertNotNull( \"No ManagedVersionMap\", map );\n        assertTrue( \"ManagedVersionMap is empty\", !map.isEmpty() );\n\n        MavenProject clonedProject = (MavenProject) projectToClone.clone();\n        assertEquals( \"maven-core\", clonedProject.getArtifactId() );\n        Map<?, ?> clonedMap = clonedProject.getManagedVersionMap();\n        assertNotNull( \"ManagedVersionMap not copied\", clonedMap );\n        assertTrue( \"ManagedVersionMap is empty\", !clonedMap.isEmpty() );\n        assertTrue( \"ManagedVersionMap does not contain test key\",\n                    clonedMap.containsKey( \"maven-test:maven-test-b:jar\" ) );\n    }\n","realPath":"maven-core/src/test/java/org/apache/maven/project/MavenProjectTest.java","repoName":"maven","snippetEndLine":0,"snippetStartLine":0,"startLine":106,"status":"M"}],"commitId":"c07f369278db5971586c6deeddc82fb381a24005","commitMessage":"@@@remove redundant cast\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/maven-3/trunk@1212981 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2011-12-11 16:48:07","modifiedFileCount":"1","status":"M","submitter":"Olivier Lamy"},{"authorTime":"2021-01-15 22:07:06","codes":[{"authorDate":"2021-01-15 22:07:06","commitOrder":5,"curCode":"    public void testClone()\n        throws Exception\n    {\n        File f = getFileForClasspathResource( \"canonical-pom.xml\" );\n        MavenProject projectToClone = getProject( f );\n\n        MavenProject clonedProject = projectToClone.clone();\n        assertEquals( \"maven-core\", clonedProject.getArtifactId() );\n        Map<?, ?> clonedMap = clonedProject.getManagedVersionMap();\n        assertNotNull( clonedMap, \"ManagedVersionMap not copied\" );\n        assertTrue( clonedMap.isEmpty(), \"ManagedVersionMap is not empty\" );\n    }\n","date":"2021-01-15 22:07:06","endLine":115,"groupId":"10628","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"testClone","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-maven-10-0.7/blobInfo/CC_OUT/blobs/d2/cba20a41b94482e4e6536fa27ac9193cdd9ba5.src","preCode":"    public void testClone()\n        throws Exception\n    {\n        File f = getFileForClasspathResource( \"canonical-pom.xml\" );\n        MavenProject projectToClone = getProject( f );\n\n        MavenProject clonedProject = projectToClone.clone();\n        assertEquals( \"maven-core\", clonedProject.getArtifactId() );\n        Map<?, ?> clonedMap = clonedProject.getManagedVersionMap();\n        assertNotNull( \"ManagedVersionMap not copied\", clonedMap );\n        assertTrue( \"ManagedVersionMap is not empty\", clonedMap.isEmpty() );\n    }\n","realPath":"maven-core/src/test/java/org/apache/maven/project/MavenProjectTest.java","repoName":"maven","snippetEndLine":0,"snippetStartLine":0,"startLine":104,"status":"M"},{"authorDate":"2021-01-15 22:07:06","commitOrder":5,"curCode":"    public void testCloneWithDependencyManagement()\n        throws Exception\n    {\n        File f = getFileForClasspathResource( \"dependencyManagement-pom.xml\" );\n        MavenProject projectToClone = getProjectWithDependencies( f );\n        DependencyManagement dep = projectToClone.getDependencyManagement();\n        assertNotNull( dep, \"No dependencyManagement\" );\n        List<?> list = dep.getDependencies();\n        assertNotNull( list, \"No dependencies\" );\n        assertTrue( !list.isEmpty(), \"Empty dependency list\" );\n\n        Map<?, ?> map = projectToClone.getManagedVersionMap();\n        assertNotNull( map, \"No ManagedVersionMap\" );\n        assertTrue( !map.isEmpty(), \"ManagedVersionMap is empty\" );\n\n        MavenProject clonedProject = projectToClone.clone();\n        assertEquals( \"maven-core\", clonedProject.getArtifactId() );\n        Map<?, ?> clonedMap = clonedProject.getManagedVersionMap();\n        assertNotNull( clonedMap, \"ManagedVersionMap not copied\" );\n        assertTrue( !clonedMap.isEmpty(), \"ManagedVersionMap is empty\" );\n        assertTrue( clonedMap.containsKey( \"maven-test:maven-test-b:jar\" ), \"ManagedVersionMap does not contain test key\" );\n    }\n","date":"2021-01-15 22:07:06","endLine":139,"groupId":"10628","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"testCloneWithDependencyManagement","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-maven-10-0.7/blobInfo/CC_OUT/blobs/d2/cba20a41b94482e4e6536fa27ac9193cdd9ba5.src","preCode":"    public void testCloneWithDependencyManagement()\n        throws Exception\n    {\n        File f = getFileForClasspathResource( \"dependencyManagement-pom.xml\" );\n        MavenProject projectToClone = getProjectWithDependencies( f );\n        DependencyManagement dep = projectToClone.getDependencyManagement();\n        assertNotNull( \"No dependencyManagement\", dep );\n        List<?> list = dep.getDependencies();\n        assertNotNull( \"No dependencies\", list );\n        assertTrue( \"Empty dependency list\", !list.isEmpty() );\n\n        Map<?, ?> map = projectToClone.getManagedVersionMap();\n        assertNotNull( \"No ManagedVersionMap\", map );\n        assertTrue( \"ManagedVersionMap is empty\", !map.isEmpty() );\n\n        MavenProject clonedProject = projectToClone.clone();\n        assertEquals( \"maven-core\", clonedProject.getArtifactId() );\n        Map<?, ?> clonedMap = clonedProject.getManagedVersionMap();\n        assertNotNull( \"ManagedVersionMap not copied\", clonedMap );\n        assertTrue( \"ManagedVersionMap is empty\", !clonedMap.isEmpty() );\n        assertTrue( \"ManagedVersionMap does not contain test key\",\n                    clonedMap.containsKey( \"maven-test:maven-test-b:jar\" ) );\n    }\n","realPath":"maven-core/src/test/java/org/apache/maven/project/MavenProjectTest.java","repoName":"maven","snippetEndLine":0,"snippetStartLine":0,"startLine":118,"status":"M"}],"commitId":"bb916d0784c7631866167928e4d0615df3317567","commitMessage":"@@@[MNG-7035] Migrate unit tests to Unit 5\n\nSigned-off-by: rfscholte <rfscholte@apache.org>\n","date":"2021-01-15 22:07:06","modifiedFileCount":"208","status":"M","submitter":"Guillaume Nodet"}]
