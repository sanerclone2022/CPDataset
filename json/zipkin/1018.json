[{"authorTime":"2019-08-23 12:04:12","codes":[{"authorDate":"2019-08-23 12:04:12","commitOrder":3,"curCode":"  @Test public void providesCollectorComponent_whenBootstrapServersSet() {\n    TestPropertyValues.of(\"zipkin.collector.kafka.bootstrap-servers:localhost:9092\")\n      .applyTo(context);\n    context.register(\n      PropertyPlaceholderAutoConfiguration.class,\n      ZipkinKafkaCollectorConfiguration.class,\n      InMemoryConfiguration.class);\n    context.refresh();\n\n    assertThat(context.getBean(KafkaCollector.class)).isNotNull();\n  }\n","date":"2019-08-23 12:04:12","endLine":72,"groupId":"3053","id":1,"instanceNumber":1,"isCurCommit":1,"methodName":"providesCollectorComponent_whenBootstrapServersSet","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zipkin-10-0.7/blobInfo/CC_OUT/blobs/5b/f293b26a0d7610d10deae2e5b02dc3cd86f518.src","preCode":"  @Test public void providesCollectorComponent_whenBootstrapServersSet() {\n    TestPropertyValues.of(\"zipkin.collector.kafka.bootstrap-servers:localhost:9092\")\n      .applyTo(context);\n    context.register(\n      PropertyPlaceholderAutoConfiguration.class,\n      ZipkinKafkaCollectorConfiguration.class,\n      InMemoryConfiguration.class);\n    context.refresh();\n\n    assertThat(context.getBean(KafkaCollector.class)).isNotNull();\n  }\n","realPath":"zipkin-server/src/test/java/zipkin2/server/internal/kafka/ZipkinKafkaCollectorConfigurationTest.java","repoName":"zipkin","snippetEndLine":0,"snippetStartLine":0,"startLine":62,"status":"MB"},{"authorDate":"2019-08-23 12:04:12","commitOrder":3,"curCode":"  @Test public void doesNotProvidesCollectorComponent_whenUrlSetAndDisabled() {\n    TestPropertyValues.of(\"zipkin.collector.activemq.url:tcp://localhost:61616\")\n      .applyTo(context);\n    TestPropertyValues.of(\"zipkin.collector.activemq.enabled:false\").applyTo(context);\n    context.register(\n      PropertyPlaceholderAutoConfiguration.class,\n      ZipkinActiveMQCollectorConfiguration.class,\n      InMemoryConfiguration.class);\n    context.refresh();\n\n    thrown.expect(NoSuchBeanDefinitionException.class);\n    context.getBean(ActiveMQCollector.class);\n  }\n","date":"2019-08-23 12:04:12","endLine":76,"groupId":"3053","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"doesNotProvidesCollectorComponent_whenUrlSetAndDisabled","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zipkin-10-0.7/blobInfo/CC_OUT/blobs/3c/5cbbb22775429eee9192b570ab249b6a00e8f4.src","preCode":"  @Test public void doesNotProvidesCollectorComponent_whenUrlSetAndDisabled() {\n    TestPropertyValues.of(\"zipkin.collector.activemq.url:tcp://localhost:61616\")\n      .applyTo(context);\n    TestPropertyValues.of(\"zipkin.collector.activemq.enabled:false\").applyTo(context);\n    context.register(\n      PropertyPlaceholderAutoConfiguration.class,\n      ZipkinActiveMQCollectorConfiguration.class,\n      InMemoryConfiguration.class);\n    context.refresh();\n\n    thrown.expect(NoSuchBeanDefinitionException.class);\n    context.getBean(ActiveMQCollector.class);\n  }\n","realPath":"zipkin-server/src/test/java/zipkin2/server/internal/activemq/ZipkinActiveMQCollectorPropertiesTest.java","repoName":"zipkin","snippetEndLine":0,"snippetStartLine":0,"startLine":64,"status":"B"}],"commitId":"b40b9656551fcf28ebd9c8f13698b1757d67bcb2","commitMessage":"@@@Add enabled variable for collectors (#2770)\n\n","date":"2019-08-23 12:04:12","modifiedFileCount":"7","status":"M","submitter":"Jorge Quilcate Otoya"},{"authorTime":"2020-09-16 08:28:43","codes":[{"authorDate":"2019-08-23 12:04:12","commitOrder":4,"curCode":"  @Test public void providesCollectorComponent_whenBootstrapServersSet() {\n    TestPropertyValues.of(\"zipkin.collector.kafka.bootstrap-servers:localhost:9092\")\n      .applyTo(context);\n    context.register(\n      PropertyPlaceholderAutoConfiguration.class,\n      ZipkinKafkaCollectorConfiguration.class,\n      InMemoryConfiguration.class);\n    context.refresh();\n\n    assertThat(context.getBean(KafkaCollector.class)).isNotNull();\n  }\n","date":"2019-08-23 12:04:12","endLine":72,"groupId":"1018","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"providesCollectorComponent_whenBootstrapServersSet","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zipkin-10-0.7/blobInfo/CC_OUT/blobs/5b/f293b26a0d7610d10deae2e5b02dc3cd86f518.src","preCode":"  @Test public void providesCollectorComponent_whenBootstrapServersSet() {\n    TestPropertyValues.of(\"zipkin.collector.kafka.bootstrap-servers:localhost:9092\")\n      .applyTo(context);\n    context.register(\n      PropertyPlaceholderAutoConfiguration.class,\n      ZipkinKafkaCollectorConfiguration.class,\n      InMemoryConfiguration.class);\n    context.refresh();\n\n    assertThat(context.getBean(KafkaCollector.class)).isNotNull();\n  }\n","realPath":"zipkin-server/src/test/java/zipkin2/server/internal/kafka/ZipkinKafkaCollectorConfigurationTest.java","repoName":"zipkin","snippetEndLine":0,"snippetStartLine":0,"startLine":62,"status":"N"},{"authorDate":"2020-09-16 08:28:43","commitOrder":4,"curCode":"  @Test public void doesNotProvidesCollectorComponent_whenUrlSetAndDisabled() {\n    TestPropertyValues.of(\"zipkin.collector.activemq.url:tcp://localhost:61616\")\n      .applyTo(context);\n    TestPropertyValues.of(\"zipkin.collector.activemq.enabled:false\").applyTo(context);\n    context.register(\n      PropertyPlaceholderAutoConfiguration.class,\n      ZipkinActiveMQCollectorConfiguration.class,\n      InMemoryConfiguration.class);\n    context.refresh();\n\n    assertThatThrownBy(() -> context.getBean(ActiveMQCollector.class))\n      .isInstanceOf(NoSuchBeanDefinitionException.class);\n  }\n","date":"2020-09-16 08:28:43","endLine":64,"groupId":"1018","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"doesNotProvidesCollectorComponent_whenUrlSetAndDisabled","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zipkin-10-0.7/blobInfo/CC_OUT/blobs/4c/91a2fca4541111006a25f23dc578521093fdb4.src","preCode":"  @Test public void doesNotProvidesCollectorComponent_whenUrlSetAndDisabled() {\n    TestPropertyValues.of(\"zipkin.collector.activemq.url:tcp://localhost:61616\")\n      .applyTo(context);\n    TestPropertyValues.of(\"zipkin.collector.activemq.enabled:false\").applyTo(context);\n    context.register(\n      PropertyPlaceholderAutoConfiguration.class,\n      ZipkinActiveMQCollectorConfiguration.class,\n      InMemoryConfiguration.class);\n    context.refresh();\n\n    thrown.expect(NoSuchBeanDefinitionException.class);\n    context.getBean(ActiveMQCollector.class);\n  }\n","realPath":"zipkin-server/src/test/java/zipkin2/server/internal/activemq/ZipkinActiveMQCollectorPropertiesTest.java","repoName":"zipkin","snippetEndLine":0,"snippetStartLine":0,"startLine":52,"status":"M"}],"commitId":"e9290d725c6aa42b56f7346e866cb0c6c9828b82","commitMessage":"@@@Bumps all versions and gets rid of NPM audit problems (#3207)\n\nBesides bumping versions.  this moves the defunct `mvy` command to maven. \nso it can still work in windows but not rely on something that trips\naudits.","date":"2020-09-16 08:28:43","modifiedFileCount":"11","status":"M","submitter":"Adrian Cole"}]
