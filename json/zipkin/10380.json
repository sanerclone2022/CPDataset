[{"authorTime":"2019-08-24 11:17:27","codes":[{"authorDate":"2019-08-24 11:17:27","commitOrder":3,"curCode":"  @Test void wrongScheme() {\n    server.enqueue(SUCCESS_RESPONSE);\n\n    http = new HttpCall.Factory(new HttpClientBuilder(\"https://localhost:\" + server.httpPort())\n      .build());\n\n    assertThatThrownBy(() -> http.newCall(REQUEST, NULL, \"test\").execute())\n      .isInstanceOf(RejectedExecutionException.class)\n      .hasMessage(\"ClosedSessionException\");\n  }\n","date":"2019-08-24 11:17:27","endLine":248,"groupId":"2981","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"wrongScheme","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zipkin-10-0.7/blobInfo/CC_OUT/blobs/cf/49d6234267dd74c155ff34f1e5fb9abe58402e.src","preCode":"  @Test void wrongScheme() {\n    server.enqueue(SUCCESS_RESPONSE);\n\n    http = new HttpCall.Factory(new HttpClientBuilder(\"https://localhost:\" + server.httpPort())\n      .build());\n\n    assertThatThrownBy(() -> http.newCall(REQUEST, NULL, \"test\").execute())\n      .isInstanceOf(RejectedExecutionException.class)\n      .hasMessage(\"ClosedSessionException\");\n  }\n","realPath":"zipkin-storage/elasticsearch/src/test/java/zipkin2/elasticsearch/internal/client/HttpCallTest.java","repoName":"zipkin","snippetEndLine":0,"snippetStartLine":0,"startLine":239,"status":"B"},{"authorDate":"2019-08-24 11:17:27","commitOrder":3,"curCode":"  @Test void unprocessedRequest() {\n    server.enqueue(SUCCESS_RESPONSE);\n\n    http = new HttpCall.Factory(new HttpClientBuilder(server.httpUri(\"/\"))\n      .decorator((client, ctx, req) -> {\n        throw new UnprocessedRequestException(\"Could not process request.\",\n          new EndpointGroupException(\"No endpoints\"));\n      })\n      .build());\n\n    assertThatThrownBy(() -> http.newCall(REQUEST, NULL, \"test\").execute())\n      .isInstanceOf(RejectedExecutionException.class)\n      .hasMessage(\"No endpoints\");\n  }\n","date":"2019-08-24 11:17:27","endLine":263,"groupId":"54","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"unprocessedRequest","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zipkin-10-0.7/blobInfo/CC_OUT/blobs/cf/49d6234267dd74c155ff34f1e5fb9abe58402e.src","preCode":"  @Test void unprocessedRequest() {\n    server.enqueue(SUCCESS_RESPONSE);\n\n    http = new HttpCall.Factory(new HttpClientBuilder(server.httpUri(\"/\"))\n      .decorator((client, ctx, req) -> {\n        throw new UnprocessedRequestException(\"Could not process request.\",\n          new EndpointGroupException(\"No endpoints\"));\n      })\n      .build());\n\n    assertThatThrownBy(() -> http.newCall(REQUEST, NULL, \"test\").execute())\n      .isInstanceOf(RejectedExecutionException.class)\n      .hasMessage(\"No endpoints\");\n  }\n","realPath":"zipkin-storage/elasticsearch/src/test/java/zipkin2/elasticsearch/internal/client/HttpCallTest.java","repoName":"zipkin","snippetEndLine":0,"snippetStartLine":0,"startLine":250,"status":"MB"}],"commitId":"1d48abfb20d8929cb7d6190e7b78f99a6a1ab8e7","commitMessage":"@@@Falls back to simple name and stops prefixing rejected ES exceptions (#2777)\n\nArmeria has a number of constant throwables.  which neither have a stack\ntrace.  nor a message. This switches to use these while we figure out if\nthere is a better way to unveil an underlying http connection problem\nthe health-check sees.  but a health-checked client would not.\n\nThe approach is used all over in zipkin.  most notably Brave.\n\nThis also stops prefixing RejectionException messages also with the word\nas it is annoying to read it twice in toString.\n\nMost importantly.  this unwraps RejectionException in health check as it\ndoesn't effectively describe the cause of the problem.  rather obfuscates\nit.\n\nBefore:\n```bash\ncurl -s localhost:9411/health\n{\"status\":\"DOWN\". \"zipkin\":{\"status\":\"DOWN\". \"details\":{\"ElasticsearchStorage{initialEndpoints=https://localhost:9200.  index=zipkin}\":{\"status\":\"DOWN\". \"details\":{\"error\":\"java.util.concurrent.RejectedExecutionException: Rejected execution: null\"}}}}}\n```\n\nNow:\n```bash\ncurl -s localhost:9411/health\n{\"status\":\"DOWN\". \"zipkin\":{\"status\":\"DOWN\". \"details\":{\"ElasticsearchStorage{initialEndpoints=https://localhost:9200.  index=zipkin}\":{\"status\":\"DOWN\". \"details\":{\"error\":\"com.linecorp.armeria.common.ClosedSessionException\"}}}}}\n```","date":"2019-08-24 11:17:27","modifiedFileCount":"6","status":"M","submitter":"Adrian Cole"},{"authorTime":"2019-12-08 16:51:25","codes":[{"authorDate":"2019-12-08 16:51:25","commitOrder":4,"curCode":"  @Test void wrongScheme() {\n    server.enqueue(SUCCESS_RESPONSE);\n\n    http = new HttpCall.Factory(WebClient.builder(\"https://localhost:\" + server.httpPort())\n      .build());\n\n    assertThatThrownBy(() -> http.newCall(REQUEST, NULL, \"test\").execute())\n      .isInstanceOf(RejectedExecutionException.class)\n      .hasMessage(\"ClosedSessionException\");\n  }\n","date":"2019-12-08 16:51:25","endLine":247,"groupId":"2981","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"wrongScheme","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zipkin-10-0.7/blobInfo/CC_OUT/blobs/6c/e9d704e8398f3315676c68803306d1d964dfe3.src","preCode":"  @Test void wrongScheme() {\n    server.enqueue(SUCCESS_RESPONSE);\n\n    http = new HttpCall.Factory(new HttpClientBuilder(\"https://localhost:\" + server.httpPort())\n      .build());\n\n    assertThatThrownBy(() -> http.newCall(REQUEST, NULL, \"test\").execute())\n      .isInstanceOf(RejectedExecutionException.class)\n      .hasMessage(\"ClosedSessionException\");\n  }\n","realPath":"zipkin-storage/elasticsearch/src/test/java/zipkin2/elasticsearch/internal/client/HttpCallTest.java","repoName":"zipkin","snippetEndLine":0,"snippetStartLine":0,"startLine":238,"status":"M"},{"authorDate":"2019-12-08 16:51:25","commitOrder":4,"curCode":"  @Test void unprocessedRequest() {\n    server.enqueue(SUCCESS_RESPONSE);\n\n    http = new HttpCall.Factory(WebClient.builder(server.httpUri(\"/\"))\n      .decorator((client, ctx, req) -> {\n        throw new UnprocessedRequestException(\"Could not process request.\",\n          new EndpointGroupException(\"No endpoints\"));\n      })\n      .build());\n\n    assertThatThrownBy(() -> http.newCall(REQUEST, NULL, \"test\").execute())\n      .isInstanceOf(RejectedExecutionException.class)\n      .hasMessage(\"No endpoints\");\n  }\n","date":"2019-12-08 16:51:25","endLine":262,"groupId":"54","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"unprocessedRequest","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zipkin-10-0.7/blobInfo/CC_OUT/blobs/6c/e9d704e8398f3315676c68803306d1d964dfe3.src","preCode":"  @Test void unprocessedRequest() {\n    server.enqueue(SUCCESS_RESPONSE);\n\n    http = new HttpCall.Factory(new HttpClientBuilder(server.httpUri(\"/\"))\n      .decorator((client, ctx, req) -> {\n        throw new UnprocessedRequestException(\"Could not process request.\",\n          new EndpointGroupException(\"No endpoints\"));\n      })\n      .build());\n\n    assertThatThrownBy(() -> http.newCall(REQUEST, NULL, \"test\").execute())\n      .isInstanceOf(RejectedExecutionException.class)\n      .hasMessage(\"No endpoints\");\n  }\n","realPath":"zipkin-storage/elasticsearch/src/test/java/zipkin2/elasticsearch/internal/client/HttpCallTest.java","repoName":"zipkin","snippetEndLine":0,"snippetStartLine":0,"startLine":249,"status":"M"}],"commitId":"05bfa8f33cfe50ac5a8ba899636c77b07e47f044","commitMessage":"@@@Update to Armeria 0.97.0 (#2943)\n\n* Update to Armeria 0.97.0\n\n* Update benchmark too\n","date":"2019-12-08 16:51:25","modifiedFileCount":"22","status":"M","submitter":"Anuraag Agrawal"},{"authorTime":"2019-12-08 16:51:25","codes":[{"authorDate":"2020-02-25 15:32:20","commitOrder":5,"curCode":"  @Test void wrongScheme() {\n    server.enqueue(SUCCESS_RESPONSE);\n\n    http = new HttpCall.Factory(WebClient.builder(\"https://localhost:\" + server.httpPort())\n      .build());\n\n    assertThatThrownBy(() -> http.newCall(REQUEST, NULL, \"test\").execute())\n      .isInstanceOf(RejectedExecutionException.class)\n      .hasMessageContaining(\"OPENSSL_internal\");\n  }\n","date":"2020-02-25 15:32:20","endLine":245,"groupId":"2981","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"wrongScheme","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zipkin-10-0.7/blobInfo/CC_OUT/blobs/52/97fc317ee68d68c0c128ad4b7a960656782b8a.src","preCode":"  @Test void wrongScheme() {\n    server.enqueue(SUCCESS_RESPONSE);\n\n    http = new HttpCall.Factory(WebClient.builder(\"https://localhost:\" + server.httpPort())\n      .build());\n\n    assertThatThrownBy(() -> http.newCall(REQUEST, NULL, \"test\").execute())\n      .isInstanceOf(RejectedExecutionException.class)\n      .hasMessage(\"ClosedSessionException\");\n  }\n","realPath":"zipkin-storage/elasticsearch/src/test/java/zipkin2/elasticsearch/internal/client/HttpCallTest.java","repoName":"zipkin","snippetEndLine":0,"snippetStartLine":0,"startLine":236,"status":"M"},{"authorDate":"2019-12-08 16:51:25","commitOrder":5,"curCode":"  @Test void unprocessedRequest() {\n    server.enqueue(SUCCESS_RESPONSE);\n\n    http = new HttpCall.Factory(WebClient.builder(server.httpUri(\"/\"))\n      .decorator((client, ctx, req) -> {\n        throw new UnprocessedRequestException(\"Could not process request.\",\n          new EndpointGroupException(\"No endpoints\"));\n      })\n      .build());\n\n    assertThatThrownBy(() -> http.newCall(REQUEST, NULL, \"test\").execute())\n      .isInstanceOf(RejectedExecutionException.class)\n      .hasMessage(\"No endpoints\");\n  }\n","date":"2019-12-08 16:51:25","endLine":262,"groupId":"54","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"unprocessedRequest","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zipkin-10-0.7/blobInfo/CC_OUT/blobs/6c/e9d704e8398f3315676c68803306d1d964dfe3.src","preCode":"  @Test void unprocessedRequest() {\n    server.enqueue(SUCCESS_RESPONSE);\n\n    http = new HttpCall.Factory(WebClient.builder(server.httpUri(\"/\"))\n      .decorator((client, ctx, req) -> {\n        throw new UnprocessedRequestException(\"Could not process request.\",\n          new EndpointGroupException(\"No endpoints\"));\n      })\n      .build());\n\n    assertThatThrownBy(() -> http.newCall(REQUEST, NULL, \"test\").execute())\n      .isInstanceOf(RejectedExecutionException.class)\n      .hasMessage(\"No endpoints\");\n  }\n","realPath":"zipkin-storage/elasticsearch/src/test/java/zipkin2/elasticsearch/internal/client/HttpCallTest.java","repoName":"zipkin","snippetEndLine":0,"snippetStartLine":0,"startLine":249,"status":"N"}],"commitId":"7f60427c86daf1e35aefcd911edbc3ca8025b246","commitMessage":"@@@Migrate to Armeria 0.98.2 (#2977)\n\n* Migrate to Armeria 0.98.1\n\n* Exclamation\n\n* Scrubs\n\n* Remove RawContentLogger\n\n* Workaround https://github.com/line/armeria/issues/2493\n\n* Different exception\n\n* 0.98.2 and fixes\n\n* Man\n\n* Nice test\n","date":"2020-02-25 15:32:20","modifiedFileCount":"14","status":"M","submitter":"Anuraag Agrawal"},{"authorTime":"2020-03-27 16:59:14","codes":[{"authorDate":"2020-02-25 15:32:20","commitOrder":6,"curCode":"  @Test void wrongScheme() {\n    server.enqueue(SUCCESS_RESPONSE);\n\n    http = new HttpCall.Factory(WebClient.builder(\"https://localhost:\" + server.httpPort())\n      .build());\n\n    assertThatThrownBy(() -> http.newCall(REQUEST, NULL, \"test\").execute())\n      .isInstanceOf(RejectedExecutionException.class)\n      .hasMessageContaining(\"OPENSSL_internal\");\n  }\n","date":"2020-02-25 15:32:20","endLine":245,"groupId":"2981","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"wrongScheme","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zipkin-10-0.7/blobInfo/CC_OUT/blobs/52/97fc317ee68d68c0c128ad4b7a960656782b8a.src","preCode":"  @Test void wrongScheme() {\n    server.enqueue(SUCCESS_RESPONSE);\n\n    http = new HttpCall.Factory(WebClient.builder(\"https://localhost:\" + server.httpPort())\n      .build());\n\n    assertThatThrownBy(() -> http.newCall(REQUEST, NULL, \"test\").execute())\n      .isInstanceOf(RejectedExecutionException.class)\n      .hasMessageContaining(\"OPENSSL_internal\");\n  }\n","realPath":"zipkin-storage/elasticsearch/src/test/java/zipkin2/elasticsearch/internal/client/HttpCallTest.java","repoName":"zipkin","snippetEndLine":0,"snippetStartLine":0,"startLine":236,"status":"N"},{"authorDate":"2020-03-27 16:59:14","commitOrder":6,"curCode":"  @Test void unprocessedRequest() {\n    server.enqueue(SUCCESS_RESPONSE);\n\n    http = new HttpCall.Factory(WebClient.builder(server.httpUri())\n      .decorator((client, ctx, req) -> {\n        throw new UnprocessedRequestException(\"Could not process request.\",\n          new EndpointGroupException(\"No endpoints\"));\n      })\n      .build());\n\n    assertThatThrownBy(() -> http.newCall(REQUEST, NULL, \"test\").execute())\n      .isInstanceOf(RejectedExecutionException.class)\n      .hasMessage(\"No endpoints\");\n  }\n","date":"2020-03-27 16:59:14","endLine":259,"groupId":"54","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"unprocessedRequest","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zipkin-10-0.7/blobInfo/CC_OUT/blobs/35/5d2f0abd5814f639ef74b06e1532567eb9a288.src","preCode":"  @Test void unprocessedRequest() {\n    server.enqueue(SUCCESS_RESPONSE);\n\n    http = new HttpCall.Factory(WebClient.builder(server.httpUri(\"/\"))\n      .decorator((client, ctx, req) -> {\n        throw new UnprocessedRequestException(\"Could not process request.\",\n          new EndpointGroupException(\"No endpoints\"));\n      })\n      .build());\n\n    assertThatThrownBy(() -> http.newCall(REQUEST, NULL, \"test\").execute())\n      .isInstanceOf(RejectedExecutionException.class)\n      .hasMessage(\"No endpoints\");\n  }\n","realPath":"zipkin-storage/elasticsearch/src/test/java/zipkin2/elasticsearch/internal/client/HttpCallTest.java","repoName":"zipkin","snippetEndLine":0,"snippetStartLine":0,"startLine":246,"status":"M"}],"commitId":"1cb4bfec95d55c0eeadfd982920465e92cd3caed","commitMessage":"@@@Updates to latest Armeria and Spring Boot (#3049)\n\n","date":"2020-03-27 16:59:14","modifiedFileCount":"14","status":"M","submitter":"Adrian Cole"},{"authorTime":"2020-07-03 22:03:22","codes":[{"authorDate":"2020-07-03 22:03:22","commitOrder":7,"curCode":"  @Test void wrongScheme() {\n    server.enqueue(SUCCESS_RESPONSE);\n\n    http = new HttpCall.Factory(PooledWebClient.of(\n      WebClient.builder(\"https://localhost:\" + server.httpPort()).build()));\n\n    assertThatThrownBy(() -> http.newCall(REQUEST, NULL, \"test\").execute())\n      .isInstanceOf(RejectedExecutionException.class)\n      .hasMessageContaining(\"OPENSSL_internal\");\n  }\n","date":"2020-07-03 22:03:22","endLine":245,"groupId":"2095","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"wrongScheme","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zipkin-10-0.7/blobInfo/CC_OUT/blobs/71/4caa272fadedd1ddb49f62f81725748c3c16ee.src","preCode":"  @Test void wrongScheme() {\n    server.enqueue(SUCCESS_RESPONSE);\n\n    http = new HttpCall.Factory(WebClient.builder(\"https://localhost:\" + server.httpPort())\n      .build());\n\n    assertThatThrownBy(() -> http.newCall(REQUEST, NULL, \"test\").execute())\n      .isInstanceOf(RejectedExecutionException.class)\n      .hasMessageContaining(\"OPENSSL_internal\");\n  }\n","realPath":"zipkin-storage/elasticsearch/src/test/java/zipkin2/elasticsearch/internal/client/HttpCallTest.java","repoName":"zipkin","snippetEndLine":0,"snippetStartLine":0,"startLine":236,"status":"M"},{"authorDate":"2020-07-03 22:03:22","commitOrder":7,"curCode":"  @Test void unprocessedRequest() {\n    server.enqueue(SUCCESS_RESPONSE);\n\n    http = new HttpCall.Factory(PooledWebClient.of(WebClient.builder(server.httpUri())\n      .decorator((client, ctx, req) -> {\n        throw UnprocessedRequestException.of(new EndpointGroupException(\"No endpoints\"));\n      })\n      .build()));\n\n    assertThatThrownBy(() -> http.newCall(REQUEST, NULL, \"test\").execute())\n      .isInstanceOf(RejectedExecutionException.class)\n      .hasMessage(\"No endpoints\");\n  }\n","date":"2020-07-03 22:03:22","endLine":259,"groupId":"2096","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"unprocessedRequest","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zipkin-10-0.7/blobInfo/CC_OUT/blobs/71/4caa272fadedd1ddb49f62f81725748c3c16ee.src","preCode":"  @Test void unprocessedRequest() {\n    server.enqueue(SUCCESS_RESPONSE);\n\n    http = new HttpCall.Factory(WebClient.builder(server.httpUri())\n      .decorator((client, ctx, req) -> {\n        throw new UnprocessedRequestException(\"Could not process request.\",\n          new EndpointGroupException(\"No endpoints\"));\n      })\n      .build());\n\n    assertThatThrownBy(() -> http.newCall(REQUEST, NULL, \"test\").execute())\n      .isInstanceOf(RejectedExecutionException.class)\n      .hasMessage(\"No endpoints\");\n  }\n","realPath":"zipkin-storage/elasticsearch/src/test/java/zipkin2/elasticsearch/internal/client/HttpCallTest.java","repoName":"zipkin","snippetEndLine":0,"snippetStartLine":0,"startLine":247,"status":"M"}],"commitId":"5cfde9ea1264779dadce175a5c2fd1e43294a13c","commitMessage":"@@@Updates versions.  most notably Armeria (#3130)\n\n","date":"2020-07-03 22:03:22","modifiedFileCount":"17","status":"M","submitter":"Adrian Cole"},{"authorTime":"2020-08-07 11:57:00","codes":[{"authorDate":"2020-08-07 11:57:00","commitOrder":8,"curCode":"  @Test void wrongScheme() {\n    server.enqueue(SUCCESS_RESPONSE);\n\n    http = new HttpCall.Factory(WebClient.builder(\"https://localhost:\" + server.httpPort()).build());\n\n    assertThatThrownBy(() -> http.newCall(REQUEST, NULL, \"test\").execute())\n      .isInstanceOf(RejectedExecutionException.class)\n      .hasMessageContaining(\"OPENSSL_internal\");\n  }\n","date":"2020-08-07 11:57:00","endLine":222,"groupId":"2981","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"wrongScheme","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zipkin-10-0.7/blobInfo/CC_OUT/blobs/da/087f86aeea1f5c17c1ee8e2184d7a21e242af6.src","preCode":"  @Test void wrongScheme() {\n    server.enqueue(SUCCESS_RESPONSE);\n\n    http = new HttpCall.Factory(PooledWebClient.of(\n      WebClient.builder(\"https://localhost:\" + server.httpPort()).build()));\n\n    assertThatThrownBy(() -> http.newCall(REQUEST, NULL, \"test\").execute())\n      .isInstanceOf(RejectedExecutionException.class)\n      .hasMessageContaining(\"OPENSSL_internal\");\n  }\n","realPath":"zipkin-storage/elasticsearch/src/test/java/zipkin2/elasticsearch/internal/client/HttpCallTest.java","repoName":"zipkin","snippetEndLine":0,"snippetStartLine":0,"startLine":214,"status":"M"},{"authorDate":"2020-08-07 11:57:00","commitOrder":8,"curCode":"  @Test void unprocessedRequest() {\n    server.enqueue(SUCCESS_RESPONSE);\n\n    http = new HttpCall.Factory(WebClient.builder(server.httpUri())\n      .decorator((client, ctx, req) -> {\n        throw UnprocessedRequestException.of(new EndpointGroupException(\"No endpoints\"));\n      })\n      .build());\n\n    assertThatThrownBy(() -> http.newCall(REQUEST, NULL, \"test\").execute())\n      .isInstanceOf(RejectedExecutionException.class)\n      .hasMessage(\"No endpoints\");\n  }\n","date":"2020-08-07 11:57:00","endLine":236,"groupId":"2491","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"unprocessedRequest","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zipkin-10-0.7/blobInfo/CC_OUT/blobs/da/087f86aeea1f5c17c1ee8e2184d7a21e242af6.src","preCode":"  @Test void unprocessedRequest() {\n    server.enqueue(SUCCESS_RESPONSE);\n\n    http = new HttpCall.Factory(PooledWebClient.of(WebClient.builder(server.httpUri())\n      .decorator((client, ctx, req) -> {\n        throw UnprocessedRequestException.of(new EndpointGroupException(\"No endpoints\"));\n      })\n      .build()));\n\n    assertThatThrownBy(() -> http.newCall(REQUEST, NULL, \"test\").execute())\n      .isInstanceOf(RejectedExecutionException.class)\n      .hasMessage(\"No endpoints\");\n  }\n","realPath":"zipkin-storage/elasticsearch/src/test/java/zipkin2/elasticsearch/internal/client/HttpCallTest.java","repoName":"zipkin","snippetEndLine":0,"snippetStartLine":0,"startLine":224,"status":"M"}],"commitId":"1845702272992ec430af6dc23a340186b5c9d285","commitMessage":"@@@Update Armeria and Netty dependencies (#3167)\n\nArmeria 0.99.8 -> 0.99.9\nNetty 4.1.50.Final -> 4.1.51.Final","date":"2020-08-07 11:57:00","modifiedFileCount":"11","status":"M","submitter":"minux"},{"authorTime":"2020-08-07 11:57:00","codes":[{"authorDate":"2020-10-28 16:13:34","commitOrder":9,"curCode":"  @Test void wrongScheme() {\n    server.enqueue(SUCCESS_RESPONSE);\n\n    http = new HttpCall.Factory(WebClient.builder(\"https://localhost:\" + server.httpPort()).build());\n\n    assertThatThrownBy(() -> http.newCall(REQUEST, NULL, \"test\").execute())\n      .isInstanceOf(RejectedExecutionException.class)\n      \r\n      .hasMessageContaining(\"SSL\");\n  }\n","date":"2020-10-28 16:13:34","endLine":223,"groupId":"10380","id":13,"instanceNumber":1,"isCurCommit":1,"methodName":"wrongScheme","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zipkin-10-0.7/blobInfo/CC_OUT/blobs/82/4d30379129588510a8c792385334b37e9cc8de.src","preCode":"  @Test void wrongScheme() {\n    server.enqueue(SUCCESS_RESPONSE);\n\n    http = new HttpCall.Factory(WebClient.builder(\"https://localhost:\" + server.httpPort()).build());\n\n    assertThatThrownBy(() -> http.newCall(REQUEST, NULL, \"test\").execute())\n      .isInstanceOf(RejectedExecutionException.class)\n      .hasMessageContaining(\"OPENSSL_internal\");\n  }\n","realPath":"zipkin-storage/elasticsearch/src/test/java/zipkin2/elasticsearch/internal/client/HttpCallTest.java","repoName":"zipkin","snippetEndLine":0,"snippetStartLine":0,"startLine":214,"status":"M"},{"authorDate":"2020-08-07 11:57:00","commitOrder":9,"curCode":"  @Test void unprocessedRequest() {\n    server.enqueue(SUCCESS_RESPONSE);\n\n    http = new HttpCall.Factory(WebClient.builder(server.httpUri())\n      .decorator((client, ctx, req) -> {\n        throw UnprocessedRequestException.of(new EndpointGroupException(\"No endpoints\"));\n      })\n      .build());\n\n    assertThatThrownBy(() -> http.newCall(REQUEST, NULL, \"test\").execute())\n      .isInstanceOf(RejectedExecutionException.class)\n      .hasMessage(\"No endpoints\");\n  }\n","date":"2020-08-07 11:57:00","endLine":236,"groupId":"10380","id":14,"instanceNumber":2,"isCurCommit":0,"methodName":"unprocessedRequest","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zipkin-10-0.7/blobInfo/CC_OUT/blobs/da/087f86aeea1f5c17c1ee8e2184d7a21e242af6.src","preCode":"  @Test void unprocessedRequest() {\n    server.enqueue(SUCCESS_RESPONSE);\n\n    http = new HttpCall.Factory(WebClient.builder(server.httpUri())\n      .decorator((client, ctx, req) -> {\n        throw UnprocessedRequestException.of(new EndpointGroupException(\"No endpoints\"));\n      })\n      .build());\n\n    assertThatThrownBy(() -> http.newCall(REQUEST, NULL, \"test\").execute())\n      .isInstanceOf(RejectedExecutionException.class)\n      .hasMessage(\"No endpoints\");\n  }\n","realPath":"zipkin-storage/elasticsearch/src/test/java/zipkin2/elasticsearch/internal/client/HttpCallTest.java","repoName":"zipkin","snippetEndLine":0,"snippetStartLine":0,"startLine":224,"status":"N"}],"commitId":"bfaa01fbfe51b4227eab20461e433862f40d856e","commitMessage":"@@@Republishes zipkin-builder only when on master.  as a separate job (#3265)\n\n","date":"2020-10-28 16:13:34","modifiedFileCount":"3","status":"M","submitter":"Adrian Cole"}]
