[{"authorTime":"2019-05-07 07:36:36","codes":[{"authorDate":"2019-05-07 07:36:36","commitOrder":1,"curCode":"  @Test public void version5() throws Exception {\n    es.enqueue(VERSION_RESPONSE_5);\n\n    IndexTemplates template = new VersionSpecificTemplates(storage).get(storage.http());\n\n    assertThat(template.version()).isEqualTo(5.0f);\n    assertThat(template.autocomplete())\n      .withFailMessage(\"In v5.x, the index_patterns field was named template\")\n      .contains(\"\\\"template\\\":\");\n    assertThat(template.autocomplete())\n      .withFailMessage(\"Until v7.x, we delimited index and type with a colon\")\n      .contains(\"\\\"template\\\": \\\"zipkin:autocomplete-*\\\"\");\n    assertThat(template.autocomplete())\n      .contains(\"\\\"index.mapper.dynamic\\\": false\");\n  }\n","date":"2019-05-07 07:36:36","endLine":127,"groupId":"165","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"version5","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zipkin-10-0.7/blobInfo/CC_OUT/blobs/2b/bc3c1a446dd8ad059caccd57b8ce6cbf061a34.src","preCode":"  @Test public void version5() throws Exception {\n    es.enqueue(VERSION_RESPONSE_5);\n\n    IndexTemplates template = new VersionSpecificTemplates(storage).get(storage.http());\n\n    assertThat(template.version()).isEqualTo(5.0f);\n    assertThat(template.autocomplete())\n      .withFailMessage(\"In v5.x, the index_patterns field was named template\")\n      .contains(\"\\\"template\\\":\");\n    assertThat(template.autocomplete())\n      .withFailMessage(\"Until v7.x, we delimited index and type with a colon\")\n      .contains(\"\\\"template\\\": \\\"zipkin:autocomplete-*\\\"\");\n    assertThat(template.autocomplete())\n      .contains(\"\\\"index.mapper.dynamic\\\": false\");\n  }\n","realPath":"zipkin-storage/elasticsearch/src/test/java/zipkin2/elasticsearch/VersionSpecificTemplatesTest.java","repoName":"zipkin","snippetEndLine":0,"snippetStartLine":0,"startLine":113,"status":"B"},{"authorDate":"2019-05-07 07:36:36","commitOrder":1,"curCode":"  @Test public void version7() throws Exception {\n    es.enqueue(VERSION_RESPONSE_7);\n\n    IndexTemplates template = new VersionSpecificTemplates(storage).get(storage.http());\n\n    assertThat(template.version()).isEqualTo(7.0f);\n    assertThat(template.autocomplete())\n      .withFailMessage(\"Starting at v7.x, we delimit index and type with hyphen\")\n      .contains(\"\\\"index_patterns\\\": \\\"zipkin-autocomplete-*\\\"\");\n    assertThat(template.autocomplete())\n      .withFailMessage(\"7.x does not support the key index.mapper.dynamic\")\n      .doesNotContain(\"\\\"index.mapper.dynamic\\\": false\");\n  }\n","date":"2019-05-07 07:36:36","endLine":154,"groupId":"1760","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"version7","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zipkin-10-0.7/blobInfo/CC_OUT/blobs/2b/bc3c1a446dd8ad059caccd57b8ce6cbf061a34.src","preCode":"  @Test public void version7() throws Exception {\n    es.enqueue(VERSION_RESPONSE_7);\n\n    IndexTemplates template = new VersionSpecificTemplates(storage).get(storage.http());\n\n    assertThat(template.version()).isEqualTo(7.0f);\n    assertThat(template.autocomplete())\n      .withFailMessage(\"Starting at v7.x, we delimit index and type with hyphen\")\n      .contains(\"\\\"index_patterns\\\": \\\"zipkin-autocomplete-*\\\"\");\n    assertThat(template.autocomplete())\n      .withFailMessage(\"7.x does not support the key index.mapper.dynamic\")\n      .doesNotContain(\"\\\"index.mapper.dynamic\\\": false\");\n  }\n","realPath":"zipkin-storage/elasticsearch/src/test/java/zipkin2/elasticsearch/VersionSpecificTemplatesTest.java","repoName":"zipkin","snippetEndLine":0,"snippetStartLine":0,"startLine":142,"status":"B"}],"commitId":"a6778ecbefaade7b271555f52847b0ee1a5a593b","commitMessage":"@@@Verifies ES 5.x with unit tests as opposed to integration tests (#2560)\n\nOur builds currently take too long due in part to checking 3 different\nversions of Elasticsearch. Elastic no longer supports version 5.  so our\nsupport of it is \"best efforts\". Accordingly.  integration testing v5.x\nknowing we break the build on timeouts is not the best call.\n\nThis increases the unit test coverage of version specific code to 100%\nand removes the Elasticsearch 5.x integration tests.","date":"2019-05-07 07:36:36","modifiedFileCount":"2","status":"B","submitter":"Adrian Cole"},{"authorTime":"2019-05-07 11:04:49","codes":[{"authorDate":"2019-05-07 07:36:36","commitOrder":2,"curCode":"  @Test public void version5() throws Exception {\n    es.enqueue(VERSION_RESPONSE_5);\n\n    IndexTemplates template = new VersionSpecificTemplates(storage).get(storage.http());\n\n    assertThat(template.version()).isEqualTo(5.0f);\n    assertThat(template.autocomplete())\n      .withFailMessage(\"In v5.x, the index_patterns field was named template\")\n      .contains(\"\\\"template\\\":\");\n    assertThat(template.autocomplete())\n      .withFailMessage(\"Until v7.x, we delimited index and type with a colon\")\n      .contains(\"\\\"template\\\": \\\"zipkin:autocomplete-*\\\"\");\n    assertThat(template.autocomplete())\n      .contains(\"\\\"index.mapper.dynamic\\\": false\");\n  }\n","date":"2019-05-07 07:36:36","endLine":127,"groupId":"165","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"version5","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zipkin-10-0.7/blobInfo/CC_OUT/blobs/2b/bc3c1a446dd8ad059caccd57b8ce6cbf061a34.src","preCode":"  @Test public void version5() throws Exception {\n    es.enqueue(VERSION_RESPONSE_5);\n\n    IndexTemplates template = new VersionSpecificTemplates(storage).get(storage.http());\n\n    assertThat(template.version()).isEqualTo(5.0f);\n    assertThat(template.autocomplete())\n      .withFailMessage(\"In v5.x, the index_patterns field was named template\")\n      .contains(\"\\\"template\\\":\");\n    assertThat(template.autocomplete())\n      .withFailMessage(\"Until v7.x, we delimited index and type with a colon\")\n      .contains(\"\\\"template\\\": \\\"zipkin:autocomplete-*\\\"\");\n    assertThat(template.autocomplete())\n      .contains(\"\\\"index.mapper.dynamic\\\": false\");\n  }\n","realPath":"zipkin-storage/elasticsearch/src/test/java/zipkin2/elasticsearch/VersionSpecificTemplatesTest.java","repoName":"zipkin","snippetEndLine":0,"snippetStartLine":0,"startLine":113,"status":"N"},{"authorDate":"2019-05-07 11:04:49","commitOrder":2,"curCode":"  @Test public void version7() throws Exception {\n    es.enqueue(VERSION_RESPONSE_7);\n\n    IndexTemplates template = new VersionSpecificTemplates(storage).get(storage.http());\n\n    assertThat(template.version()).isEqualTo(7.0f);\n    assertThat(template.autocomplete())\n      .withFailMessage(\"Starting at v7.x, we delimit index and type with hyphen\")\n      .contains(\"\\\"index_patterns\\\": \\\"zipkin-autocomplete-*\\\"\");\n    assertThat(template.autocomplete())\n      \r\n      .doesNotContain(\"\\\"index.mapper.dynamic\\\": false\");\n  }\n","date":"2019-05-07 11:04:49","endLine":154,"groupId":"1760","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"version7","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zipkin-10-0.7/blobInfo/CC_OUT/blobs/06/3640374d2325eedf3d156584fe9a1faea97b86.src","preCode":"  @Test public void version7() throws Exception {\n    es.enqueue(VERSION_RESPONSE_7);\n\n    IndexTemplates template = new VersionSpecificTemplates(storage).get(storage.http());\n\n    assertThat(template.version()).isEqualTo(7.0f);\n    assertThat(template.autocomplete())\n      .withFailMessage(\"Starting at v7.x, we delimit index and type with hyphen\")\n      .contains(\"\\\"index_patterns\\\": \\\"zipkin-autocomplete-*\\\"\");\n    assertThat(template.autocomplete())\n      .withFailMessage(\"7.x does not support the key index.mapper.dynamic\")\n      .doesNotContain(\"\\\"index.mapper.dynamic\\\": false\");\n  }\n","realPath":"zipkin-storage/elasticsearch/src/test/java/zipkin2/elasticsearch/VersionSpecificTemplatesTest.java","repoName":"zipkin","snippetEndLine":0,"snippetStartLine":0,"startLine":142,"status":"M"}],"commitId":"2a55aa1c7a1d2fd82b148ed8ad166ff89e7a8b80","commitMessage":"@@@Simplifies Elasticsearch index template when strict trace ID is enabled (#2561)\n\nBy default.  we use strict trace IDs. This removes the analysis section\nof the index template when that's the case.  simplifying it.","date":"2019-05-07 11:04:49","modifiedFileCount":"5","status":"M","submitter":"Adrian Cole"},{"authorTime":"2019-05-07 16:19:02","codes":[{"authorDate":"2019-05-07 16:19:02","commitOrder":3,"curCode":"  @Test public void version5() throws Exception {\n    es.enqueue(VERSION_RESPONSE_5);\n\n    IndexTemplates template = new VersionSpecificTemplates(storage).get();\n\n    assertThat(template.version()).isEqualTo(5.0f);\n    assertThat(template.autocomplete())\n      .withFailMessage(\"In v5.x, the index_patterns field was named template\")\n      .contains(\"\\\"template\\\":\");\n    assertThat(template.autocomplete())\n      .withFailMessage(\"Until v7.x, we delimited index and type with a colon\")\n      .contains(\"\\\"template\\\": \\\"zipkin:autocomplete-*\\\"\");\n    assertThat(template.autocomplete())\n      .contains(\"\\\"index.mapper.dynamic\\\": false\");\n  }\n","date":"2019-05-07 16:19:02","endLine":127,"groupId":"165","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"version5","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zipkin-10-0.7/blobInfo/CC_OUT/blobs/16/4db5b04655b3da052117cb2117561b211630c9.src","preCode":"  @Test public void version5() throws Exception {\n    es.enqueue(VERSION_RESPONSE_5);\n\n    IndexTemplates template = new VersionSpecificTemplates(storage).get(storage.http());\n\n    assertThat(template.version()).isEqualTo(5.0f);\n    assertThat(template.autocomplete())\n      .withFailMessage(\"In v5.x, the index_patterns field was named template\")\n      .contains(\"\\\"template\\\":\");\n    assertThat(template.autocomplete())\n      .withFailMessage(\"Until v7.x, we delimited index and type with a colon\")\n      .contains(\"\\\"template\\\": \\\"zipkin:autocomplete-*\\\"\");\n    assertThat(template.autocomplete())\n      .contains(\"\\\"index.mapper.dynamic\\\": false\");\n  }\n","realPath":"zipkin-storage/elasticsearch/src/test/java/zipkin2/elasticsearch/VersionSpecificTemplatesTest.java","repoName":"zipkin","snippetEndLine":0,"snippetStartLine":0,"startLine":113,"status":"M"},{"authorDate":"2019-05-07 16:19:02","commitOrder":3,"curCode":"  @Test public void version7() throws Exception {\n    es.enqueue(VERSION_RESPONSE_7);\n\n    IndexTemplates template = new VersionSpecificTemplates(storage).get();\n\n    assertThat(template.version()).isEqualTo(7.0f);\n    assertThat(template.autocomplete())\n      .withFailMessage(\"Starting at v7.x, we delimit index and type with hyphen\")\n      .contains(\"\\\"index_patterns\\\": \\\"zipkin-autocomplete-*\\\"\");\n    assertThat(template.autocomplete())\n      .withFailMessage(\"7.x does not support the key index.mapper.dynamic\")\n      .doesNotContain(\"\\\"index.mapper.dynamic\\\": false\");\n  }\n","date":"2019-05-07 16:19:02","endLine":178,"groupId":"1760","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"version7","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zipkin-10-0.7/blobInfo/CC_OUT/blobs/16/4db5b04655b3da052117cb2117561b211630c9.src","preCode":"  @Test public void version7() throws Exception {\n    es.enqueue(VERSION_RESPONSE_7);\n\n    IndexTemplates template = new VersionSpecificTemplates(storage).get(storage.http());\n\n    assertThat(template.version()).isEqualTo(7.0f);\n    assertThat(template.autocomplete())\n      .withFailMessage(\"Starting at v7.x, we delimit index and type with hyphen\")\n      .contains(\"\\\"index_patterns\\\": \\\"zipkin-autocomplete-*\\\"\");\n    assertThat(template.autocomplete())\n      \r\n      .doesNotContain(\"\\\"index.mapper.dynamic\\\": false\");\n  }\n","realPath":"zipkin-storage/elasticsearch/src/test/java/zipkin2/elasticsearch/VersionSpecificTemplatesTest.java","repoName":"zipkin","snippetEndLine":0,"snippetStartLine":0,"startLine":166,"status":"M"}],"commitId":"38a0e73734885ee5b2c25f4e8d05b1a6700ae471","commitMessage":"@@@Conditionally wraps in Elasticsearch index template based on version (#2562)\n\nElasticsearch 7.x no longer wraps mappings by top-level type. They have\na compatibility mode.  but it complicates secondary templates as noticed\nby @chefky\n\n> For my custom index issue in elasticsearch 7.0 -- I figured it out.  but I think it does have an implication with the code. You are still creating the index template with the mapping type.  which ElasticSearch has deprecated in 7.0. When I do a 'GET /_template/zipkin-span_template'.  the mapping type 'span' is removed.  and so my updated version did not include the mapping type. I can only get it to work by including the mapping type 'span' in my updated index template.  but I have to append 'includeTypeName=true' in the URL.  which then results in a message from ElasticSearch indicating that this is deprecated and that they will not support this in the next major version. Do you also use 'includeTypeName=true' when creating the span index template in ElasticSearch? Because I tried to edit the source code to remove the mapping type.  but I was getting this error: \"Malformed [mappings] section for type [dynamic_templates].  should include an inner object describing the mapping\". I was able to replicate it in the Kibana dev tool if I explicitly pass in includeTypeName=true and omit the mapping type in my json.\n\nThis addresses the issue depending on the version of Elasticsearch in\nuse.\n\nFixes #2559","date":"2019-05-07 16:19:02","modifiedFileCount":"5","status":"M","submitter":"Adrian Cole"},{"authorTime":"2019-07-14 08:06:42","codes":[{"authorDate":"2019-07-14 08:06:42","commitOrder":4,"curCode":"  @Test public void version5() throws Exception {\n    MOCK_RESPONSE.set(VERSION_RESPONSE_5);\n\n    IndexTemplates template = new VersionSpecificTemplates(storage).get();\n\n    assertThat(template.version()).isEqualTo(5.0f);\n    assertThat(template.autocomplete())\n      .withFailMessage(\"In v5.x, the index_patterns field was named template\")\n      .contains(\"\\\"template\\\":\");\n    assertThat(template.autocomplete())\n      .withFailMessage(\"Until v7.x, we delimited index and type with a colon\")\n      .contains(\"\\\"template\\\": \\\"zipkin:autocomplete-*\\\"\");\n    assertThat(template.autocomplete())\n      .contains(\"\\\"index.mapper.dynamic\\\": false\");\n  }\n","date":"2019-07-14 08:06:42","endLine":151,"groupId":"165","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"version5","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zipkin-10-0.7/blobInfo/CC_OUT/blobs/1f/998128bfa6ec23c48e563594c95fc1b3c7dd65.src","preCode":"  @Test public void version5() throws Exception {\n    es.enqueue(VERSION_RESPONSE_5);\n\n    IndexTemplates template = new VersionSpecificTemplates(storage).get();\n\n    assertThat(template.version()).isEqualTo(5.0f);\n    assertThat(template.autocomplete())\n      .withFailMessage(\"In v5.x, the index_patterns field was named template\")\n      .contains(\"\\\"template\\\":\");\n    assertThat(template.autocomplete())\n      .withFailMessage(\"Until v7.x, we delimited index and type with a colon\")\n      .contains(\"\\\"template\\\": \\\"zipkin:autocomplete-*\\\"\");\n    assertThat(template.autocomplete())\n      .contains(\"\\\"index.mapper.dynamic\\\": false\");\n  }\n","realPath":"zipkin-storage/elasticsearch/src/test/java/zipkin2/elasticsearch/VersionSpecificTemplatesTest.java","repoName":"zipkin","snippetEndLine":0,"snippetStartLine":0,"startLine":137,"status":"M"},{"authorDate":"2019-07-14 08:06:42","commitOrder":4,"curCode":"  @Test public void version7() throws Exception {\n    MOCK_RESPONSE.set(VERSION_RESPONSE_7);\n\n    IndexTemplates template = new VersionSpecificTemplates(storage).get();\n\n    assertThat(template.version()).isEqualTo(7.0f);\n    assertThat(template.autocomplete())\n      .withFailMessage(\"Starting at v7.x, we delimit index and type with hyphen\")\n      .contains(\"\\\"index_patterns\\\": \\\"zipkin-autocomplete-*\\\"\");\n    assertThat(template.autocomplete())\n      .withFailMessage(\"7.x does not support the key index.mapper.dynamic\")\n      .doesNotContain(\"\\\"index.mapper.dynamic\\\": false\");\n  }\n","date":"2019-07-14 08:06:42","endLine":202,"groupId":"1760","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"version7","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zipkin-10-0.7/blobInfo/CC_OUT/blobs/1f/998128bfa6ec23c48e563594c95fc1b3c7dd65.src","preCode":"  @Test public void version7() throws Exception {\n    es.enqueue(VERSION_RESPONSE_7);\n\n    IndexTemplates template = new VersionSpecificTemplates(storage).get();\n\n    assertThat(template.version()).isEqualTo(7.0f);\n    assertThat(template.autocomplete())\n      .withFailMessage(\"Starting at v7.x, we delimit index and type with hyphen\")\n      .contains(\"\\\"index_patterns\\\": \\\"zipkin-autocomplete-*\\\"\");\n    assertThat(template.autocomplete())\n      .withFailMessage(\"7.x does not support the key index.mapper.dynamic\")\n      .doesNotContain(\"\\\"index.mapper.dynamic\\\": false\");\n  }\n","realPath":"zipkin-storage/elasticsearch/src/test/java/zipkin2/elasticsearch/VersionSpecificTemplatesTest.java","repoName":"zipkin","snippetEndLine":0,"snippetStartLine":0,"startLine":190,"status":"M"}],"commitId":"fc8cc19a78d01c472b4b79412f378a43f179b772","commitMessage":"@@@Migrates Elasticsearch storage from okhttp to armeria (#2653)\n\n","date":"2019-07-14 08:06:42","modifiedFileCount":"23","status":"M","submitter":"Anuraag Agrawal"},{"authorTime":"2019-09-02 08:30:42","codes":[{"authorDate":"2019-09-02 08:30:42","commitOrder":5,"curCode":"  @Test void version5() throws Exception {\n    server.enqueue(VERSION_RESPONSE_5);\n\n    IndexTemplates template = new VersionSpecificTemplates(storage).get();\n\n    assertThat(template.version()).isEqualTo(5.0f);\n    assertThat(template.autocomplete())\n      .withFailMessage(\"In v5.x, the index_patterns field was named template\")\n      .contains(\"\\\"template\\\":\");\n    assertThat(template.autocomplete())\n      .withFailMessage(\"Until v7.x, we delimited index and type with a colon\")\n      .contains(\"\\\"template\\\": \\\"zipkin:autocomplete-*\\\"\");\n    assertThat(template.autocomplete())\n      .contains(\"\\\"index.mapper.dynamic\\\": false\");\n  }\n","date":"2019-09-02 08:30:42","endLine":151,"groupId":"165","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"version5","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zipkin-10-0.7/blobInfo/CC_OUT/blobs/19/e8d025fc9a7cedd2b012508d2f7c7a4e40f697.src","preCode":"  @Test public void version5() throws Exception {\n    MOCK_RESPONSE.set(VERSION_RESPONSE_5);\n\n    IndexTemplates template = new VersionSpecificTemplates(storage).get();\n\n    assertThat(template.version()).isEqualTo(5.0f);\n    assertThat(template.autocomplete())\n      .withFailMessage(\"In v5.x, the index_patterns field was named template\")\n      .contains(\"\\\"template\\\":\");\n    assertThat(template.autocomplete())\n      .withFailMessage(\"Until v7.x, we delimited index and type with a colon\")\n      .contains(\"\\\"template\\\": \\\"zipkin:autocomplete-*\\\"\");\n    assertThat(template.autocomplete())\n      .contains(\"\\\"index.mapper.dynamic\\\": false\");\n  }\n","realPath":"zipkin-storage/elasticsearch/src/test/java/zipkin2/elasticsearch/VersionSpecificTemplatesTest.java","repoName":"zipkin","snippetEndLine":0,"snippetStartLine":0,"startLine":137,"status":"M"},{"authorDate":"2019-09-02 08:30:42","commitOrder":5,"curCode":"  @Test void version7() throws Exception {\n    server.enqueue(VERSION_RESPONSE_7);\n\n    IndexTemplates template = new VersionSpecificTemplates(storage).get();\n\n    assertThat(template.version()).isEqualTo(7.0f);\n    assertThat(template.autocomplete())\n      .withFailMessage(\"Starting at v7.x, we delimit index and type with hyphen\")\n      .contains(\"\\\"index_patterns\\\": \\\"zipkin-autocomplete-*\\\"\");\n    assertThat(template.autocomplete())\n      .withFailMessage(\"7.x does not support the key index.mapper.dynamic\")\n      .doesNotContain(\"\\\"index.mapper.dynamic\\\": false\");\n  }\n","date":"2019-09-02 08:30:42","endLine":202,"groupId":"1760","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"version7","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zipkin-10-0.7/blobInfo/CC_OUT/blobs/19/e8d025fc9a7cedd2b012508d2f7c7a4e40f697.src","preCode":"  @Test public void version7() throws Exception {\n    MOCK_RESPONSE.set(VERSION_RESPONSE_7);\n\n    IndexTemplates template = new VersionSpecificTemplates(storage).get();\n\n    assertThat(template.version()).isEqualTo(7.0f);\n    assertThat(template.autocomplete())\n      .withFailMessage(\"Starting at v7.x, we delimit index and type with hyphen\")\n      .contains(\"\\\"index_patterns\\\": \\\"zipkin-autocomplete-*\\\"\");\n    assertThat(template.autocomplete())\n      .withFailMessage(\"7.x does not support the key index.mapper.dynamic\")\n      .doesNotContain(\"\\\"index.mapper.dynamic\\\": false\");\n  }\n","realPath":"zipkin-storage/elasticsearch/src/test/java/zipkin2/elasticsearch/VersionSpecificTemplatesTest.java","repoName":"zipkin","snippetEndLine":0,"snippetStartLine":0,"startLine":190,"status":"M"}],"commitId":"ee0997d3fb51441d94863bcfe7d5f2151dcf6572","commitMessage":"@@@Migrate from ServerRule to MockWebServerExtension. (#2792)\n\n","date":"2019-09-02 08:30:42","modifiedFileCount":"7","status":"M","submitter":"Anuraag Agrawal"},{"authorTime":"2019-10-01 19:13:42","codes":[{"authorDate":"2019-10-01 19:13:42","commitOrder":6,"curCode":"  @Test void version5() throws Exception {\n    server.enqueue(VERSION_RESPONSE_5);\n\n    IndexTemplates template = storage.versionSpecificTemplates(storage.http());\n\n    assertThat(template.version()).isEqualTo(5.0f);\n    assertThat(template.autocomplete())\n      .withFailMessage(\"In v5.x, the index_patterns field was named template\")\n      .contains(\"\\\"template\\\":\");\n    assertThat(template.autocomplete())\n      .withFailMessage(\"Until v7.x, we delimited index and type with a colon\")\n      .contains(\"\\\"template\\\": \\\"zipkin:autocomplete-*\\\"\");\n    assertThat(template.autocomplete())\n      .contains(\"\\\"index.mapper.dynamic\\\": false\");\n  }\n","date":"2019-10-01 19:13:42","endLine":151,"groupId":"165","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"version5","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zipkin-10-0.7/blobInfo/CC_OUT/blobs/9c/29a0fd23cf869a2c8fa33ac8c81e1cdd27c564.src","preCode":"  @Test void version5() throws Exception {\n    server.enqueue(VERSION_RESPONSE_5);\n\n    IndexTemplates template = new VersionSpecificTemplates(storage).get();\n\n    assertThat(template.version()).isEqualTo(5.0f);\n    assertThat(template.autocomplete())\n      .withFailMessage(\"In v5.x, the index_patterns field was named template\")\n      .contains(\"\\\"template\\\":\");\n    assertThat(template.autocomplete())\n      .withFailMessage(\"Until v7.x, we delimited index and type with a colon\")\n      .contains(\"\\\"template\\\": \\\"zipkin:autocomplete-*\\\"\");\n    assertThat(template.autocomplete())\n      .contains(\"\\\"index.mapper.dynamic\\\": false\");\n  }\n","realPath":"zipkin-storage/elasticsearch/src/test/java/zipkin2/elasticsearch/VersionSpecificTemplatesTest.java","repoName":"zipkin","snippetEndLine":0,"snippetStartLine":0,"startLine":137,"status":"M"},{"authorDate":"2019-10-01 19:13:42","commitOrder":6,"curCode":"  @Test void version7() throws Exception {\n    server.enqueue(VERSION_RESPONSE_7);\n\n    IndexTemplates template = storage.versionSpecificTemplates(storage.http());\n\n    assertThat(template.version()).isEqualTo(7.0f);\n    assertThat(template.autocomplete())\n      .withFailMessage(\"Starting at v7.x, we delimit index and type with hyphen\")\n      .contains(\"\\\"index_patterns\\\": \\\"zipkin-autocomplete-*\\\"\");\n    assertThat(template.autocomplete())\n      .withFailMessage(\"7.x does not support the key index.mapper.dynamic\")\n      .doesNotContain(\"\\\"index.mapper.dynamic\\\": false\");\n  }\n","date":"2019-10-01 19:13:42","endLine":202,"groupId":"1760","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"version7","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zipkin-10-0.7/blobInfo/CC_OUT/blobs/9c/29a0fd23cf869a2c8fa33ac8c81e1cdd27c564.src","preCode":"  @Test void version7() throws Exception {\n    server.enqueue(VERSION_RESPONSE_7);\n\n    IndexTemplates template = new VersionSpecificTemplates(storage).get();\n\n    assertThat(template.version()).isEqualTo(7.0f);\n    assertThat(template.autocomplete())\n      .withFailMessage(\"Starting at v7.x, we delimit index and type with hyphen\")\n      .contains(\"\\\"index_patterns\\\": \\\"zipkin-autocomplete-*\\\"\");\n    assertThat(template.autocomplete())\n      .withFailMessage(\"7.x does not support the key index.mapper.dynamic\")\n      .doesNotContain(\"\\\"index.mapper.dynamic\\\": false\");\n  }\n","realPath":"zipkin-storage/elasticsearch/src/test/java/zipkin2/elasticsearch/VersionSpecificTemplatesTest.java","repoName":"zipkin","snippetEndLine":0,"snippetStartLine":0,"startLine":190,"status":"M"}],"commitId":"797f36d0ab169173d43de5de1cb7e7bd98dcd39a","commitMessage":"@@@Ensures index templates are verified before passing health. (#2827)\n\nCurrently.  we pass health checks which can hide errors provisioning\nindex templates.  and also worsen template provisioning race conditions.\n\nThis makes sure index templates are at least checked once per startup.\n\nThis also refactors the code so that someone can later do offline\ntemplate installation.\n\nFixes #2825","date":"2019-10-01 19:13:42","modifiedFileCount":"11","status":"M","submitter":"Adrian Cole"},{"authorTime":"2020-04-15 13:30:04","codes":[{"authorDate":"2020-04-15 13:30:04","commitOrder":7,"curCode":"  @Test void version5() {\n    IndexTemplates template = storage.versionSpecificTemplates(5.0f);\n\n    assertThat(template.version()).isEqualTo(5.0f);\n    assertThat(template.autocomplete())\n      .withFailMessage(\"In v5.x, the index_patterns field was named template\")\n      .contains(\"\\\"template\\\":\");\n    assertThat(template.autocomplete())\n      .withFailMessage(\"Until v7.x, we delimited index and type with a colon\")\n      .contains(\"\\\"template\\\": \\\"zipkin:autocomplete-*\\\"\");\n    assertThat(template.autocomplete())\n      .contains(\"\\\"index.mapper.dynamic\\\": false\");\n  }\n","date":"2020-04-15 13:30:04","endLine":45,"groupId":"165","id":13,"instanceNumber":1,"isCurCommit":0,"methodName":"version5","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zipkin-10-0.7/blobInfo/CC_OUT/blobs/11/51ed3a4d6899aed4f9667f48d658fee0d603b7.src","preCode":"  @Test void version5() throws Exception {\n    server.enqueue(VERSION_RESPONSE_5);\n\n    IndexTemplates template = storage.versionSpecificTemplates(storage.http());\n\n    assertThat(template.version()).isEqualTo(5.0f);\n    assertThat(template.autocomplete())\n      .withFailMessage(\"In v5.x, the index_patterns field was named template\")\n      .contains(\"\\\"template\\\":\");\n    assertThat(template.autocomplete())\n      .withFailMessage(\"Until v7.x, we delimited index and type with a colon\")\n      .contains(\"\\\"template\\\": \\\"zipkin:autocomplete-*\\\"\");\n    assertThat(template.autocomplete())\n      .contains(\"\\\"index.mapper.dynamic\\\": false\");\n  }\n","realPath":"zipkin-storage/elasticsearch/src/test/java/zipkin2/elasticsearch/VersionSpecificTemplatesTest.java","repoName":"zipkin","snippetEndLine":0,"snippetStartLine":0,"startLine":33,"status":"M"},{"authorDate":"2020-04-15 13:30:04","commitOrder":7,"curCode":"  @Test void version7() {\n    IndexTemplates template = storage.versionSpecificTemplates(7.0f);\n\n    assertThat(template.version()).isEqualTo(7.0f);\n    assertThat(template.autocomplete())\n      .withFailMessage(\"Starting at v7.x, we delimit index and type with hyphen\")\n      .contains(\"\\\"index_patterns\\\": \\\"zipkin-autocomplete-*\\\"\");\n    assertThat(template.autocomplete())\n      .withFailMessage(\"7.x does not support the key index.mapper.dynamic\")\n      .doesNotContain(\"\\\"index.mapper.dynamic\\\": false\");\n  }\n","date":"2020-04-15 13:30:04","endLine":90,"groupId":"1760","id":14,"instanceNumber":2,"isCurCommit":0,"methodName":"version7","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zipkin-10-0.7/blobInfo/CC_OUT/blobs/11/51ed3a4d6899aed4f9667f48d658fee0d603b7.src","preCode":"  @Test void version7() throws Exception {\n    server.enqueue(VERSION_RESPONSE_7);\n\n    IndexTemplates template = storage.versionSpecificTemplates(storage.http());\n\n    assertThat(template.version()).isEqualTo(7.0f);\n    assertThat(template.autocomplete())\n      .withFailMessage(\"Starting at v7.x, we delimit index and type with hyphen\")\n      .contains(\"\\\"index_patterns\\\": \\\"zipkin-autocomplete-*\\\"\");\n    assertThat(template.autocomplete())\n      .withFailMessage(\"7.x does not support the key index.mapper.dynamic\")\n      .doesNotContain(\"\\\"index.mapper.dynamic\\\": false\");\n  }\n","realPath":"zipkin-storage/elasticsearch/src/test/java/zipkin2/elasticsearch/VersionSpecificTemplatesTest.java","repoName":"zipkin","snippetEndLine":0,"snippetStartLine":0,"startLine":80,"status":"M"}],"commitId":"10c478ba049696e9ef32e8400a3d7209e3f31c5a","commitMessage":"@@@Allows opting out via ES_ENSURE_TEMPLATES=false (#3063)\n\nUsers can now disable Elasticsearch index template creation at startup\nvia `ES_ENSURE_TEMPLATES=false`. This breaks the warranty of the install\nand any upgrades when they do this.\n\nFixes #3025","date":"2020-04-15 13:30:04","modifiedFileCount":"9","status":"M","submitter":"Adrian Cole"},{"authorTime":"2020-04-15 13:30:04","codes":[{"authorDate":"2020-10-14 15:58:08","commitOrder":8,"curCode":"  @Test void version5() {\n    IndexTemplates template = storage.versionSpecificTemplates(5.0f);\n\n    assertThat(template.version()).isEqualTo(5.0f);\n    assertThat(template.autocomplete())\n      .withFailMessage(\"In v5.x, the index_patterns field was named template\")\n      .contains(\"\\\"template\\\":\");\n    assertThat(template.autocomplete())\n      .withFailMessage(\"Until v7.x, we delimited index and type with a colon\")\n      .contains(\"\\\"template\\\": \\\"zipkin:autocomplete-*\\\"\");\n  }\n","date":"2020-10-14 15:58:08","endLine":43,"groupId":"165","id":15,"instanceNumber":1,"isCurCommit":0,"methodName":"version5","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zipkin-10-0.7/blobInfo/CC_OUT/blobs/62/2b799d0e7766786c883ef32db52fbec5ece11a.src","preCode":"  @Test void version5() {\n    IndexTemplates template = storage.versionSpecificTemplates(5.0f);\n\n    assertThat(template.version()).isEqualTo(5.0f);\n    assertThat(template.autocomplete())\n      .withFailMessage(\"In v5.x, the index_patterns field was named template\")\n      .contains(\"\\\"template\\\":\");\n    assertThat(template.autocomplete())\n      .withFailMessage(\"Until v7.x, we delimited index and type with a colon\")\n      .contains(\"\\\"template\\\": \\\"zipkin:autocomplete-*\\\"\");\n    assertThat(template.autocomplete())\n      .contains(\"\\\"index.mapper.dynamic\\\": false\");\n  }\n","realPath":"zipkin-storage/elasticsearch/src/test/java/zipkin2/elasticsearch/VersionSpecificTemplatesTest.java","repoName":"zipkin","snippetEndLine":0,"snippetStartLine":0,"startLine":33,"status":"M"},{"authorDate":"2020-04-15 13:30:04","commitOrder":8,"curCode":"  @Test void version7() {\n    IndexTemplates template = storage.versionSpecificTemplates(7.0f);\n\n    assertThat(template.version()).isEqualTo(7.0f);\n    assertThat(template.autocomplete())\n      .withFailMessage(\"Starting at v7.x, we delimit index and type with hyphen\")\n      .contains(\"\\\"index_patterns\\\": \\\"zipkin-autocomplete-*\\\"\");\n    assertThat(template.autocomplete())\n      .withFailMessage(\"7.x does not support the key index.mapper.dynamic\")\n      .doesNotContain(\"\\\"index.mapper.dynamic\\\": false\");\n  }\n","date":"2020-04-15 13:30:04","endLine":90,"groupId":"1760","id":16,"instanceNumber":2,"isCurCommit":0,"methodName":"version7","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zipkin-10-0.7/blobInfo/CC_OUT/blobs/11/51ed3a4d6899aed4f9667f48d658fee0d603b7.src","preCode":"  @Test void version7() {\n    IndexTemplates template = storage.versionSpecificTemplates(7.0f);\n\n    assertThat(template.version()).isEqualTo(7.0f);\n    assertThat(template.autocomplete())\n      .withFailMessage(\"Starting at v7.x, we delimit index and type with hyphen\")\n      .contains(\"\\\"index_patterns\\\": \\\"zipkin-autocomplete-*\\\"\");\n    assertThat(template.autocomplete())\n      .withFailMessage(\"7.x does not support the key index.mapper.dynamic\")\n      .doesNotContain(\"\\\"index.mapper.dynamic\\\": false\");\n  }\n","realPath":"zipkin-storage/elasticsearch/src/test/java/zipkin2/elasticsearch/VersionSpecificTemplatesTest.java","repoName":"zipkin","snippetEndLine":0,"snippetStartLine":0,"startLine":80,"status":"N"}],"commitId":"9af0dd83349f0bd2e1b60ad366b3362e917fa31a","commitMessage":"@@@es early deprecation fail (#3171)\n\n* add global and per-method deprecation check\n\n* lowercase 'warning' as header  names in Armeria are always lowercase.\n\n* cluster warnings should not fail tests.  because they rely on the configuration of our docker images which is not representative for a site instance. Nevertheless log a big WARN message so it's visible.\n\n* - more warning fixes\n- exclude colon warning for ES 6\n\n* factor out deprecation warnings that should be ignored\n\nCo-authored-by: Adrian Cole <adrian.f.cole@gmail.com>","date":"2020-10-14 15:58:08","modifiedFileCount":"5","status":"M","submitter":"Jorg Heymans"},{"authorTime":"2020-12-25 09:44:40","codes":[{"authorDate":"2020-12-25 09:44:40","commitOrder":9,"curCode":"  @Test void version5() {\n    IndexTemplates template = storage.versionSpecificTemplates(V5_0);\n\n    assertThat(template.version()).isEqualTo(V5_0);\n    assertThat(template.autocomplete())\n      .withFailMessage(\"In v5.x, the index_patterns field was named template\")\n      .contains(\"\\\"template\\\":\");\n    assertThat(template.autocomplete())\n      .withFailMessage(\"Until v7.x, we delimited index and type with a colon\")\n      .contains(\"\\\"template\\\": \\\"zipkin:autocomplete-*\\\"\");\n  }\n","date":"2020-12-25 09:44:40","endLine":50,"groupId":"10403","id":17,"instanceNumber":1,"isCurCommit":1,"methodName":"version5","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zipkin-10-0.7/blobInfo/CC_OUT/blobs/71/2abcd4fef37ed31b248d12b5973094138e36d3.src","preCode":"  @Test void version5() {\n    IndexTemplates template = storage.versionSpecificTemplates(5.0f);\n\n    assertThat(template.version()).isEqualTo(5.0f);\n    assertThat(template.autocomplete())\n      .withFailMessage(\"In v5.x, the index_patterns field was named template\")\n      .contains(\"\\\"template\\\":\");\n    assertThat(template.autocomplete())\n      .withFailMessage(\"Until v7.x, we delimited index and type with a colon\")\n      .contains(\"\\\"template\\\": \\\"zipkin:autocomplete-*\\\"\");\n  }\n","realPath":"zipkin-storage/elasticsearch/src/test/java/zipkin2/elasticsearch/VersionSpecificTemplatesTest.java","repoName":"zipkin","snippetEndLine":0,"snippetStartLine":0,"startLine":40,"status":"M"},{"authorDate":"2020-12-25 09:44:40","commitOrder":9,"curCode":"  @Test void version7() {\n    IndexTemplates template = storage.versionSpecificTemplates(V7_0);\n\n    assertThat(template.version()).isEqualTo(V7_0);\n    assertThat(template.autocomplete())\n      .withFailMessage(\"Starting at v7.x, we delimit index and type with hyphen\")\n      .contains(\"\\\"index_patterns\\\": \\\"zipkin-autocomplete-*\\\"\");\n    assertThat(template.autocomplete())\n      .withFailMessage(\"7.x does not support the key index.mapper.dynamic\")\n      .doesNotContain(\"\\\"index.mapper.dynamic\\\": false\");\n  }\n","date":"2020-12-25 09:44:40","endLine":93,"groupId":"10403","id":18,"instanceNumber":2,"isCurCommit":1,"methodName":"version7","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zipkin-10-0.7/blobInfo/CC_OUT/blobs/71/2abcd4fef37ed31b248d12b5973094138e36d3.src","preCode":"  @Test void version7() {\n    IndexTemplates template = storage.versionSpecificTemplates(7.0f);\n\n    assertThat(template.version()).isEqualTo(7.0f);\n    assertThat(template.autocomplete())\n      .withFailMessage(\"Starting at v7.x, we delimit index and type with hyphen\")\n      .contains(\"\\\"index_patterns\\\": \\\"zipkin-autocomplete-*\\\"\");\n    assertThat(template.autocomplete())\n      .withFailMessage(\"7.x does not support the key index.mapper.dynamic\")\n      .doesNotContain(\"\\\"index.mapper.dynamic\\\": false\");\n  }\n","realPath":"zipkin-storage/elasticsearch/src/test/java/zipkin2/elasticsearch/VersionSpecificTemplatesTest.java","repoName":"zipkin","snippetEndLine":0,"snippetStartLine":0,"startLine":83,"status":"M"}],"commitId":"ad8520e1e535d52d9f20a94a1086924726158a05","commitMessage":"@@@Adds support for Elasticsearch 7.10 (#3333)\n\nThis fixes a comparison bug which installed the incorrect template.\n\nWhat happened was v7.10 was mistaken for v7.1","date":"2020-12-25 09:44:40","modifiedFileCount":"12","status":"M","submitter":"Adrian Cole"}]
