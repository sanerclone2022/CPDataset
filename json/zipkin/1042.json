[{"authorTime":"2020-03-27 16:59:14","codes":[{"authorDate":"2020-04-14 09:10:22","commitOrder":4,"curCode":"  @Test void healthcheck_usesDynamicCredentialsAndTls() throws IOException {\n    pretendIndexTemplatesExist(storage);\n\n    server.enqueue(YELLOW_RESPONSE.toHttpResponse());\n    assertThat(storage.check().ok()).isTrue();\n    AggregatedHttpRequest next = server.takeRequest().request();\n    assertThat(next.headers().get(\"Authorization\")).isEqualTo(\"Basic Zm9vOmJhcg==\");\n  }\n","date":"2020-04-14 09:10:22","endLine":90,"groupId":"963","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"healthcheck_usesDynamicCredentialsAndTls","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zipkin-10-0.7/blobInfo/CC_OUT/blobs/b6/8f8a9b171016807054b34f5e8d22cf4c9b055f.src","preCode":"  @Test void healthcheck_usesDynamicCredentialsAndTls() throws IOException {\n    pretendIndexTemplatesExist(storage);\n\n    server.enqueue(YELLOW_RESPONSE.toHttpResponse());\n    assertThat(storage.check().ok()).isTrue();\n    AggregatedHttpRequest next = server.takeRequest().request();\n    assertThat(next.headers().get(\"Authorization\")).isEqualTo(\"Basic Zm9vOmJhcg==\");\n  }\n","realPath":"zipkin-server/src/test/java/zipkin2/server/internal/elasticsearch/ITElasticsearchDynamicCredentials.java","repoName":"zipkin","snippetEndLine":0,"snippetStartLine":0,"startLine":83,"status":"B"},{"authorDate":"2020-03-27 16:59:14","commitOrder":4,"curCode":"  @Test void healthcheck_usesAuthAndTls() {\n    pretendIndexTemplatesExist(storage);\n    server.enqueue(YELLOW_RESPONSE.toHttpResponse());\n\n    assertThat(storage.check().ok()).isTrue();\n\n    AggregatedHttpRequest next = server.takeRequest().request();\n    \r\n    assertThat(next.headers().get(\"Authorization\"))\n      .isEqualTo(\"Basic QWxhZGRpbjpPcGVuU2VzYW1l\");\n  }\n","date":"2020-03-27 16:59:14","endLine":89,"groupId":"963","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"healthcheck_usesAuthAndTls","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zipkin-10-0.7/blobInfo/CC_OUT/blobs/60/3449e3ef8a433ebf4e3f810eec73cfc385bb2c.src","preCode":"  @Test void healthcheck_usesAuthAndTls() {\n    pretendIndexTemplatesExist(storage);\n    server.enqueue(YELLOW_RESPONSE.toHttpResponse());\n\n    assertThat(storage.check().ok()).isTrue();\n\n    AggregatedHttpRequest next = server.takeRequest().request();\n    \r\n    assertThat(next.headers().get(\"Authorization\"))\n      .isEqualTo(\"Basic QWxhZGRpbjpPcGVuU2VzYW1l\");\n  }\n","realPath":"zipkin-server/src/test/java/zipkin2/server/internal/elasticsearch/ITElasticsearchAuth.java","repoName":"zipkin","snippetEndLine":0,"snippetStartLine":0,"startLine":79,"status":"NB"}],"commitId":"e3e4832dd4e9f3737c612db7128b3a7f5c56d01f","commitMessage":"@@@Adds Dynamic elasticsearch credentials file (#3050)\n\nLoad elasticsearch credentials from a properties file in a fixed rate interval. There are two parameters to control it:\n\n    ES_CREDENTIALS_FILE: An absolute path of the file.\n    ES_CREDENTIALS_REFRESH_INTERVAL: Refresh interval in\n    seconds.\n","date":"2020-04-14 09:10:22","modifiedFileCount":"4","status":"M","submitter":"Gao Hongtao"},{"authorTime":"2020-04-15 13:30:04","codes":[{"authorDate":"2020-04-15 13:30:04","commitOrder":5,"curCode":"  @Test void healthcheck_usesDynamicCredentialsAndTls() {\n    server.enqueue(VERSION_RESPONSE.toHttpResponse());\n    server.enqueue(YELLOW_RESPONSE.toHttpResponse());\n    assertThat(storage.check().ok()).isTrue();\n    AggregatedHttpRequest next = server.takeRequest().request();\n    assertThat(next.headers().get(\"Authorization\")).isEqualTo(\"Basic Zm9vOmJhcg==\");\n  }\n","date":"2020-04-15 13:30:04","endLine":88,"groupId":"1042","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"healthcheck_usesDynamicCredentialsAndTls","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zipkin-10-0.7/blobInfo/CC_OUT/blobs/0d/4b00efeb68e8461f99de3fc67e11b40cbd83a1.src","preCode":"  @Test void healthcheck_usesDynamicCredentialsAndTls() throws IOException {\n    pretendIndexTemplatesExist(storage);\n\n    server.enqueue(YELLOW_RESPONSE.toHttpResponse());\n    assertThat(storage.check().ok()).isTrue();\n    AggregatedHttpRequest next = server.takeRequest().request();\n    assertThat(next.headers().get(\"Authorization\")).isEqualTo(\"Basic Zm9vOmJhcg==\");\n  }\n","realPath":"zipkin-server/src/test/java/zipkin2/server/internal/elasticsearch/ITElasticsearchDynamicCredentials.java","repoName":"zipkin","snippetEndLine":0,"snippetStartLine":0,"startLine":82,"status":"M"},{"authorDate":"2020-04-15 13:30:04","commitOrder":5,"curCode":"  @Test void healthcheck_usesAuthAndTls() {\n    server.enqueue(VERSION_RESPONSE.toHttpResponse());\n    server.enqueue(YELLOW_RESPONSE.toHttpResponse());\n\n    assertThat(storage.check().ok()).isTrue();\n\n    AggregatedHttpRequest next = server.takeRequest().request();\n    \r\n    assertThat(next.headers().get(\"Authorization\"))\n      .isEqualTo(\"Basic QWxhZGRpbjpPcGVuU2VzYW1l\");\n  }\n","date":"2020-04-15 13:30:04","endLine":90,"groupId":"1042","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"healthcheck_usesAuthAndTls","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zipkin-10-0.7/blobInfo/CC_OUT/blobs/8a/86f7e849a2355cb580d3c18fe0135b6f59b085.src","preCode":"  @Test void healthcheck_usesAuthAndTls() {\n    pretendIndexTemplatesExist(storage);\n    server.enqueue(YELLOW_RESPONSE.toHttpResponse());\n\n    assertThat(storage.check().ok()).isTrue();\n\n    AggregatedHttpRequest next = server.takeRequest().request();\n    \r\n    assertThat(next.headers().get(\"Authorization\"))\n      .isEqualTo(\"Basic QWxhZGRpbjpPcGVuU2VzYW1l\");\n  }\n","realPath":"zipkin-server/src/test/java/zipkin2/server/internal/elasticsearch/ITElasticsearchAuth.java","repoName":"zipkin","snippetEndLine":0,"snippetStartLine":0,"startLine":80,"status":"M"}],"commitId":"10c478ba049696e9ef32e8400a3d7209e3f31c5a","commitMessage":"@@@Allows opting out via ES_ENSURE_TEMPLATES=false (#3063)\n\nUsers can now disable Elasticsearch index template creation at startup\nvia `ES_ENSURE_TEMPLATES=false`. This breaks the warranty of the install\nand any upgrades when they do this.\n\nFixes #3025","date":"2020-04-15 13:30:04","modifiedFileCount":"9","status":"M","submitter":"Adrian Cole"}]
