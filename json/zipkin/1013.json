[{"authorTime":"2019-04-21 12:13:52","codes":[{"authorDate":"2019-04-21 11:40:59","commitOrder":2,"curCode":"  public void providesCollectorComponent_whenBootstrapServersEmptyString() {\n    context = new AnnotationConfigApplicationContext();\n    TestPropertyValues.of(\"zipkin.collector.kafka.bootstrap-servers:\").applyTo(context);\n    context.register(\n        PropertyPlaceholderAutoConfiguration.class,\n        ZipkinKafkaCollectorConfiguration.class,\n        InMemoryConfiguration.class);\n    context.refresh();\n\n    thrown.expect(NoSuchBeanDefinitionException.class);\n    context.getBean(KafkaCollector.class);\n  }\n","date":"2019-04-22 12:17:35","endLine":72,"groupId":"3053","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"providesCollectorComponent_whenBootstrapServersEmptyString","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zipkin-10-0.7/blobInfo/CC_OUT/blobs/22/c1fa110b37bb5b69466212092adcefe7f3ae9f.src","preCode":"  public void providesCollectorComponent_whenBootstrapServersEmptyString() {\n    context = new AnnotationConfigApplicationContext();\n    TestPropertyValues.of(\"zipkin.collector.kafka.bootstrap-servers:\").applyTo(context);\n    context.register(\n        PropertyPlaceholderAutoConfiguration.class,\n        ZipkinKafkaCollectorConfiguration.class,\n        InMemoryConfiguration.class);\n    context.refresh();\n\n    thrown.expect(NoSuchBeanDefinitionException.class);\n    context.getBean(KafkaCollector.class);\n  }\n","realPath":"zipkin-server/src/test/java/zipkin2/server/internal/kafka/ZipkinKafkaCollectorConfigurationTest.java","repoName":"zipkin","snippetEndLine":0,"snippetStartLine":0,"startLine":61,"status":"NB"},{"authorDate":"2019-04-21 12:13:52","commitOrder":2,"curCode":"  public void doesNotProvideCollectorComponent_whenAddressesAndUriIsEmptyString() {\n    context = new AnnotationConfigApplicationContext();\n    TestPropertyValues.of(\n      \"zipkin.collector.rabbitmq.addresses:\",\n      \"zipkin.collector.rabbitmq.uri:\")\n    .applyTo(context);\n    context.register(\n        PropertyPlaceholderAutoConfiguration.class,\n        ZipkinRabbitMQCollectorConfiguration.class,\n        InMemoryConfiguration.class);\n    context.refresh();\n\n    thrown.expect(NoSuchBeanDefinitionException.class);\n    context.getBean(RabbitMQCollector.class);\n  }\n","date":"2019-04-22 12:17:35","endLine":76,"groupId":"3053","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"doesNotProvideCollectorComponent_whenAddressesAndUriIsEmptyString","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zipkin-10-0.7/blobInfo/CC_OUT/blobs/bb/337a7bb8865f2c1a741a63653a97769f5fc825.src","preCode":"  public void doesNotProvideCollectorComponent_whenAddressesAndUriIsEmptyString() {\n    context = new AnnotationConfigApplicationContext();\n    TestPropertyValues.of(\n      \"zipkin.collector.rabbitmq.addresses:\",\n      \"zipkin.collector.rabbitmq.uri:\")\n    .applyTo(context);\n    context.register(\n        PropertyPlaceholderAutoConfiguration.class,\n        ZipkinRabbitMQCollectorConfiguration.class,\n        InMemoryConfiguration.class);\n    context.refresh();\n\n    thrown.expect(NoSuchBeanDefinitionException.class);\n    context.getBean(RabbitMQCollector.class);\n  }\n","realPath":"zipkin-server/src/test/java/zipkin2/server/internal/rabbitmq/ZipkinRabbitMQCollectorConfigurationTest.java","repoName":"zipkin","snippetEndLine":0,"snippetStartLine":0,"startLine":62,"status":"B"}],"commitId":"ecab90e28ee03fd23f89e071a4fa20cf9e9e3344","commitMessage":"@@@Inlines RabbitMQ autoconfiguration\n","date":"2019-04-22 12:17:35","modifiedFileCount":"1","status":"M","submitter":"Adrian Cole"},{"authorTime":"2019-07-17 18:26:25","codes":[{"authorDate":"2019-07-17 18:26:25","commitOrder":3,"curCode":"  @Test public void providesCollectorComponent_whenBootstrapServersEmptyString() {\n    TestPropertyValues.of(\"zipkin.collector.kafka.bootstrap-servers:\").applyTo(context);\n    context.register(\n      PropertyPlaceholderAutoConfiguration.class,\n      ZipkinKafkaCollectorConfiguration.class,\n      InMemoryConfiguration.class);\n    context.refresh();\n\n    thrown.expect(NoSuchBeanDefinitionException.class);\n    context.getBean(KafkaCollector.class);\n  }\n","date":"2019-07-17 18:26:25","endLine":60,"groupId":"1013","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"providesCollectorComponent_whenBootstrapServersEmptyString","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zipkin-10-0.7/blobInfo/CC_OUT/blobs/c3/e333e12961a7fabb5f3e7040364787d6d7167d.src","preCode":"  public void providesCollectorComponent_whenBootstrapServersEmptyString() {\n    context = new AnnotationConfigApplicationContext();\n    TestPropertyValues.of(\"zipkin.collector.kafka.bootstrap-servers:\").applyTo(context);\n    context.register(\n        PropertyPlaceholderAutoConfiguration.class,\n        ZipkinKafkaCollectorConfiguration.class,\n        InMemoryConfiguration.class);\n    context.refresh();\n\n    thrown.expect(NoSuchBeanDefinitionException.class);\n    context.getBean(KafkaCollector.class);\n  }\n","realPath":"zipkin-server/src/test/java/zipkin2/server/internal/kafka/ZipkinKafkaCollectorConfigurationTest.java","repoName":"zipkin","snippetEndLine":0,"snippetStartLine":0,"startLine":50,"status":"M"},{"authorDate":"2019-07-17 18:26:25","commitOrder":3,"curCode":"  @Test public void doesNotProvideCollectorComponent_whenAddressesAndUriIsEmptyString() {\n    context = new AnnotationConfigApplicationContext();\n    TestPropertyValues.of(\n      \"zipkin.collector.rabbitmq.addresses:\",\n      \"zipkin.collector.rabbitmq.uri:\")\n      .applyTo(context);\n    context.register(\n      PropertyPlaceholderAutoConfiguration.class,\n      ZipkinRabbitMQCollectorConfiguration.class,\n      InMemoryConfiguration.class);\n    context.refresh();\n\n    thrown.expect(NoSuchBeanDefinitionException.class);\n    context.getBean(RabbitMQCollector.class);\n  }\n","date":"2019-07-17 18:26:25","endLine":66,"groupId":"1013","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"doesNotProvideCollectorComponent_whenAddressesAndUriIsEmptyString","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zipkin-10-0.7/blobInfo/CC_OUT/blobs/0f/4657c4ac1adef6e32d59f9f66056c95d4f6c50.src","preCode":"  public void doesNotProvideCollectorComponent_whenAddressesAndUriIsEmptyString() {\n    context = new AnnotationConfigApplicationContext();\n    TestPropertyValues.of(\n      \"zipkin.collector.rabbitmq.addresses:\",\n      \"zipkin.collector.rabbitmq.uri:\")\n    .applyTo(context);\n    context.register(\n        PropertyPlaceholderAutoConfiguration.class,\n        ZipkinRabbitMQCollectorConfiguration.class,\n        InMemoryConfiguration.class);\n    context.refresh();\n\n    thrown.expect(NoSuchBeanDefinitionException.class);\n    context.getBean(RabbitMQCollector.class);\n  }\n","realPath":"zipkin-server/src/test/java/zipkin2/server/internal/rabbitmq/ZipkinRabbitMQCollectorConfigurationTest.java","repoName":"zipkin","snippetEndLine":0,"snippetStartLine":0,"startLine":52,"status":"M"}],"commitId":"d2342f183f4ad81c6800cbf4595d0d66783da858","commitMessage":"@@@Reverts usage of Kotlin in tests (#2679)\n\n","date":"2019-07-17 18:26:25","modifiedFileCount":"1","status":"M","submitter":"Adrian Cole"}]
