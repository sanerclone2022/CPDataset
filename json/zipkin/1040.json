[{"authorTime":"2019-09-02 08:30:42","codes":[{"authorDate":"2020-04-14 09:10:22","commitOrder":5,"curCode":"  @BeforeEach void init() throws IOException {\n    credentialsFile = pathOfResource(\"es-credentials\");\n    TestPropertyValues.of(\n      \"spring.config.name=zipkin-server\",\n      \"zipkin.storage.type:elasticsearch\",\n      \"zipkin.storage.elasticsearch.hosts:https://localhost:\" + server.httpsPort(),\n      \"zipkin.storage.elasticsearch.credentials-file=\" + credentialsFile,\n      \"zipkin.storage.elasticsearch.credentials-refresh-interval=3\",\n      \"zipkin.storage.elasticsearch.ssl.key-store=classpath:keystore.jks\",\n      \"zipkin.storage.elasticsearch.ssl.key-store-password=password\",\n      \"zipkin.storage.elasticsearch.ssl.trust-store=classpath:keystore.jks\",\n      \"zipkin.storage.elasticsearch.ssl.trust-store-password=password\")\n      .applyTo(context);\n    Access.registerElasticsearch(context);\n    context.refresh();\n    storage = context.getBean(ElasticsearchStorage.class);\n  }\n","date":"2020-04-14 09:10:22","endLine":77,"groupId":"962","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"init","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zipkin-10-0.7/blobInfo/CC_OUT/blobs/b6/8f8a9b171016807054b34f5e8d22cf4c9b055f.src","preCode":"  @BeforeEach void init() throws IOException {\n    credentialsFile = pathOfResource(\"es-credentials\");\n    TestPropertyValues.of(\n      \"spring.config.name=zipkin-server\",\n      \"zipkin.storage.type:elasticsearch\",\n      \"zipkin.storage.elasticsearch.hosts:https://localhost:\" + server.httpsPort(),\n      \"zipkin.storage.elasticsearch.credentials-file=\" + credentialsFile,\n      \"zipkin.storage.elasticsearch.credentials-refresh-interval=3\",\n      \"zipkin.storage.elasticsearch.ssl.key-store=classpath:keystore.jks\",\n      \"zipkin.storage.elasticsearch.ssl.key-store-password=password\",\n      \"zipkin.storage.elasticsearch.ssl.trust-store=classpath:keystore.jks\",\n      \"zipkin.storage.elasticsearch.ssl.trust-store-password=password\")\n      .applyTo(context);\n    Access.registerElasticsearch(context);\n    context.refresh();\n    storage = context.getBean(ElasticsearchStorage.class);\n  }\n","realPath":"zipkin-server/src/test/java/zipkin2/server/internal/elasticsearch/ITElasticsearchDynamicCredentials.java","repoName":"zipkin","snippetEndLine":0,"snippetStartLine":0,"startLine":61,"status":"B"},{"authorDate":"2019-09-02 08:30:42","commitOrder":5,"curCode":"  @BeforeEach void init() {\n    TestPropertyValues.of(\n      \"spring.config.name=zipkin-server\",\n      \"zipkin.storage.type:elasticsearch\",\n      \"zipkin.storage.elasticsearch.username:Aladdin\",\n      \"zipkin.storage.elasticsearch.password:OpenSesame\",\n      \"zipkin.storage.elasticsearch.hosts:https://localhost:\" + server.httpsPort(),\n      \"zipkin.storage.elasticsearch.ssl.key-store=classpath:keystore.jks\",\n      \"zipkin.storage.elasticsearch.ssl.key-store-password=password\",\n      \"zipkin.storage.elasticsearch.ssl.trust-store=classpath:keystore.jks\",\n      \"zipkin.storage.elasticsearch.ssl.trust-store-password=password\")\n      .applyTo(context);\n    Access.registerElasticsearch(context);\n    context.refresh();\n    storage = context.getBean(ElasticsearchStorage.class);\n  }\n","date":"2019-09-02 08:30:42","endLine":70,"groupId":"506","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"init","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zipkin-10-0.7/blobInfo/CC_OUT/blobs/ec/8e63ba85fdf87c97d1726a57fce9d4be71d7ee.src","preCode":"  @BeforeEach void init() {\n    TestPropertyValues.of(\n      \"spring.config.name=zipkin-server\",\n      \"zipkin.storage.type:elasticsearch\",\n      \"zipkin.storage.elasticsearch.username:Aladdin\",\n      \"zipkin.storage.elasticsearch.password:OpenSesame\",\n      \"zipkin.storage.elasticsearch.hosts:https://localhost:\" + server.httpsPort(),\n      \"zipkin.storage.elasticsearch.ssl.key-store=classpath:keystore.jks\",\n      \"zipkin.storage.elasticsearch.ssl.key-store-password=password\",\n      \"zipkin.storage.elasticsearch.ssl.trust-store=classpath:keystore.jks\",\n      \"zipkin.storage.elasticsearch.ssl.trust-store-password=password\")\n      .applyTo(context);\n    Access.registerElasticsearch(context);\n    context.refresh();\n    storage = context.getBean(ElasticsearchStorage.class);\n  }\n","realPath":"zipkin-server/src/test/java/zipkin2/server/internal/elasticsearch/ITElasticsearchAuth.java","repoName":"zipkin","snippetEndLine":0,"snippetStartLine":0,"startLine":55,"status":"NB"}],"commitId":"e3e4832dd4e9f3737c612db7128b3a7f5c56d01f","commitMessage":"@@@Adds Dynamic elasticsearch credentials file (#3050)\n\nLoad elasticsearch credentials from a properties file in a fixed rate interval. There are two parameters to control it:\n\n    ES_CREDENTIALS_FILE: An absolute path of the file.\n    ES_CREDENTIALS_REFRESH_INTERVAL: Refresh interval in\n    seconds.\n","date":"2020-04-14 09:10:22","modifiedFileCount":"4","status":"M","submitter":"Gao Hongtao"},{"authorTime":"2020-04-15 13:30:04","codes":[{"authorDate":"2020-04-15 13:30:04","commitOrder":6,"curCode":"  @BeforeEach void init() {\n    credentialsFile = pathOfResource(\"es-credentials\");\n    TestPropertyValues.of(\n      \"spring.config.name=zipkin-server\",\n      \"zipkin.storage.type=elasticsearch\",\n      \"zipkin.storage.elasticsearch.ensure-templates=false\",\n      \"zipkin.storage.elasticsearch.hosts=https://localhost:\" + server.httpsPort(),\n      \"zipkin.storage.elasticsearch.credentials-file=\" + credentialsFile,\n      \"zipkin.storage.elasticsearch.credentials-refresh-interval=3\",\n      \"zipkin.storage.elasticsearch.ssl.key-store=classpath:keystore.jks\",\n      \"zipkin.storage.elasticsearch.ssl.key-store-password=password\",\n      \"zipkin.storage.elasticsearch.ssl.trust-store=classpath:keystore.jks\",\n      \"zipkin.storage.elasticsearch.ssl.trust-store-password=password\")\n      .applyTo(context);\n    Access.registerElasticsearch(context);\n    context.refresh();\n    storage = context.getBean(ElasticsearchStorage.class);\n  }\n","date":"2020-04-15 13:30:04","endLine":76,"groupId":"1040","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"init","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zipkin-10-0.7/blobInfo/CC_OUT/blobs/0d/4b00efeb68e8461f99de3fc67e11b40cbd83a1.src","preCode":"  @BeforeEach void init() throws IOException {\n    credentialsFile = pathOfResource(\"es-credentials\");\n    TestPropertyValues.of(\n      \"spring.config.name=zipkin-server\",\n      \"zipkin.storage.type:elasticsearch\",\n      \"zipkin.storage.elasticsearch.hosts:https://localhost:\" + server.httpsPort(),\n      \"zipkin.storage.elasticsearch.credentials-file=\" + credentialsFile,\n      \"zipkin.storage.elasticsearch.credentials-refresh-interval=3\",\n      \"zipkin.storage.elasticsearch.ssl.key-store=classpath:keystore.jks\",\n      \"zipkin.storage.elasticsearch.ssl.key-store-password=password\",\n      \"zipkin.storage.elasticsearch.ssl.trust-store=classpath:keystore.jks\",\n      \"zipkin.storage.elasticsearch.ssl.trust-store-password=password\")\n      .applyTo(context);\n    Access.registerElasticsearch(context);\n    context.refresh();\n    storage = context.getBean(ElasticsearchStorage.class);\n  }\n","realPath":"zipkin-server/src/test/java/zipkin2/server/internal/elasticsearch/ITElasticsearchDynamicCredentials.java","repoName":"zipkin","snippetEndLine":0,"snippetStartLine":0,"startLine":59,"status":"M"},{"authorDate":"2020-04-15 13:30:04","commitOrder":6,"curCode":"  @BeforeEach void init() {\n    TestPropertyValues.of(\n      \"spring.config.name=zipkin-server\",\n      \"zipkin.storage.type=elasticsearch\",\n      \"zipkin.storage.elasticsearch.ensure-templates=false\",\n      \"zipkin.storage.elasticsearch.username=Aladdin\",\n      \"zipkin.storage.elasticsearch.password=OpenSesame\",\n      \"zipkin.storage.elasticsearch.hosts=https://localhost:\" + server.httpsPort(),\n      \"zipkin.storage.elasticsearch.ssl.key-store=classpath:keystore.jks\",\n      \"zipkin.storage.elasticsearch.ssl.key-store-password=password\",\n      \"zipkin.storage.elasticsearch.ssl.trust-store=classpath:keystore.jks\",\n      \"zipkin.storage.elasticsearch.ssl.trust-store-password=password\")\n      .applyTo(context);\n    Access.registerElasticsearch(context);\n    context.refresh();\n    storage = context.getBean(ElasticsearchStorage.class);\n  }\n","date":"2020-04-15 13:30:04","endLine":74,"groupId":"1040","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"init","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zipkin-10-0.7/blobInfo/CC_OUT/blobs/8a/86f7e849a2355cb580d3c18fe0135b6f59b085.src","preCode":"  @BeforeEach void init() {\n    TestPropertyValues.of(\n      \"spring.config.name=zipkin-server\",\n      \"zipkin.storage.type:elasticsearch\",\n      \"zipkin.storage.elasticsearch.username:Aladdin\",\n      \"zipkin.storage.elasticsearch.password:OpenSesame\",\n      \"zipkin.storage.elasticsearch.hosts:https://localhost:\" + server.httpsPort(),\n      \"zipkin.storage.elasticsearch.ssl.key-store=classpath:keystore.jks\",\n      \"zipkin.storage.elasticsearch.ssl.key-store-password=password\",\n      \"zipkin.storage.elasticsearch.ssl.trust-store=classpath:keystore.jks\",\n      \"zipkin.storage.elasticsearch.ssl.trust-store-password=password\")\n      .applyTo(context);\n    Access.registerElasticsearch(context);\n    context.refresh();\n    storage = context.getBean(ElasticsearchStorage.class);\n  }\n","realPath":"zipkin-server/src/test/java/zipkin2/server/internal/elasticsearch/ITElasticsearchAuth.java","repoName":"zipkin","snippetEndLine":0,"snippetStartLine":0,"startLine":58,"status":"M"}],"commitId":"10c478ba049696e9ef32e8400a3d7209e3f31c5a","commitMessage":"@@@Allows opting out via ES_ENSURE_TEMPLATES=false (#3063)\n\nUsers can now disable Elasticsearch index template creation at startup\nvia `ES_ENSURE_TEMPLATES=false`. This breaks the warranty of the install\nand any upgrades when they do this.\n\nFixes #3025","date":"2020-04-15 13:30:04","modifiedFileCount":"9","status":"M","submitter":"Adrian Cole"}]
