[{"authorTime":"2019-07-30 22:07:29","codes":[{"authorDate":"2019-07-30 22:07:29","commitOrder":1,"curCode":"  @Test public void usesInterceptorsQualifiedWith_zipkinElasticsearchHttp() {\n    TestPropertyValues.of(\"zipkin.storage.type:elasticsearch\").applyTo(context);\n    Access.registerElasticsearchHttp(context);\n    context.register(CustomizerConfiguration.class);\n    context.refresh();\n\n    HttpClientFactory factory = context.getBean(HttpClientFactory.class);\n    assertThat(factory.options.maxResponseLength()).isEqualTo(12345L);\n    assertThat(factory.options.httpHeaders().get(\"test\")).isEqualTo(\"bar\");\n  }\n","date":"2019-07-30 22:07:29","endLine":180,"groupId":"1664","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"usesInterceptorsQualifiedWith_zipkinElasticsearchHttp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zipkin-10-0.7/blobInfo/CC_OUT/blobs/2e/1d6ef68cfc28a24e8143b25617bea4bed83e89.src","preCode":"  @Test public void usesInterceptorsQualifiedWith_zipkinElasticsearchHttp() {\n    TestPropertyValues.of(\"zipkin.storage.type:elasticsearch\").applyTo(context);\n    Access.registerElasticsearchHttp(context);\n    context.register(CustomizerConfiguration.class);\n    context.refresh();\n\n    HttpClientFactory factory = context.getBean(HttpClientFactory.class);\n    assertThat(factory.options.maxResponseLength()).isEqualTo(12345L);\n    assertThat(factory.options.httpHeaders().get(\"test\")).isEqualTo(\"bar\");\n  }\n","realPath":"zipkin-server/src/test/java/zipkin2/server/internal/elasticsearch/ZipkinElasticsearchStorageConfigurationTest.java","repoName":"zipkin","snippetEndLine":0,"snippetStartLine":0,"startLine":171,"status":"B"},{"authorDate":"2019-07-30 22:07:29","commitOrder":1,"curCode":"  @Test public void timeout_defaultsTo10Seconds() {\n    TestPropertyValues.of(\"zipkin.storage.type:elasticsearch\").applyTo(context);\n    Access.registerElasticsearchHttp(context);\n    context.refresh();\n\n    HttpClientFactory factory = context.getBean(HttpClientFactory.class);\n    \r\n    assertThat(factory.options.responseTimeoutMillis()).isEqualTo(10000L);\n    assertThat(factory.options.writeTimeoutMillis()).isEqualTo(10000L);\n  }\n","date":"2019-07-30 22:07:29","endLine":191,"groupId":"946","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"timeout_defaultsTo10Seconds","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zipkin-10-0.7/blobInfo/CC_OUT/blobs/2e/1d6ef68cfc28a24e8143b25617bea4bed83e89.src","preCode":"  @Test public void timeout_defaultsTo10Seconds() {\n    TestPropertyValues.of(\"zipkin.storage.type:elasticsearch\").applyTo(context);\n    Access.registerElasticsearchHttp(context);\n    context.refresh();\n\n    HttpClientFactory factory = context.getBean(HttpClientFactory.class);\n    \r\n    assertThat(factory.options.responseTimeoutMillis()).isEqualTo(10000L);\n    assertThat(factory.options.writeTimeoutMillis()).isEqualTo(10000L);\n  }\n","realPath":"zipkin-server/src/test/java/zipkin2/server/internal/elasticsearch/ZipkinElasticsearchStorageConfigurationTest.java","repoName":"zipkin","snippetEndLine":0,"snippetStartLine":0,"startLine":182,"status":"B"}],"commitId":"473fdc76991452c9c81b8bafa21a1e4b5322f568","commitMessage":"@@@Moves Elasticsearch Armeria client wiring to spring (#2711)\n\n","date":"2019-07-30 22:07:29","modifiedFileCount":"14","status":"B","submitter":"Adrian Cole"},{"authorTime":"2019-08-06 17:09:05","codes":[{"authorDate":"2019-08-06 17:09:05","commitOrder":2,"curCode":"  @Test public void usesInterceptorsQualifiedWith_zipkinElasticsearchHttp() {\n    TestPropertyValues.of(\"zipkin.storage.type:elasticsearch\").applyTo(context);\n    Access.registerElasticsearch(context);\n    context.register(CustomizerConfiguration.class);\n    context.refresh();\n\n    HttpClientFactory factory = context.getBean(HttpClientFactory.class);\n    assertThat(factory.options.maxResponseLength()).isEqualTo(12345L);\n    assertThat(factory.options.httpHeaders().get(\"test\")).isEqualTo(\"bar\");\n  }\n","date":"2019-08-06 17:09:05","endLine":192,"groupId":"1664","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"usesInterceptorsQualifiedWith_zipkinElasticsearchHttp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zipkin-10-0.7/blobInfo/CC_OUT/blobs/7d/c3f08ea82e11672d06587dee27985d369ab775.src","preCode":"  @Test public void usesInterceptorsQualifiedWith_zipkinElasticsearchHttp() {\n    TestPropertyValues.of(\"zipkin.storage.type:elasticsearch\").applyTo(context);\n    Access.registerElasticsearchHttp(context);\n    context.register(CustomizerConfiguration.class);\n    context.refresh();\n\n    HttpClientFactory factory = context.getBean(HttpClientFactory.class);\n    assertThat(factory.options.maxResponseLength()).isEqualTo(12345L);\n    assertThat(factory.options.httpHeaders().get(\"test\")).isEqualTo(\"bar\");\n  }\n","realPath":"zipkin-server/src/test/java/zipkin2/server/internal/elasticsearch/ZipkinElasticsearchStorageConfigurationTest.java","repoName":"zipkin","snippetEndLine":0,"snippetStartLine":0,"startLine":183,"status":"M"},{"authorDate":"2019-08-06 17:09:05","commitOrder":2,"curCode":"  @Test public void timeout_defaultsTo10Seconds() {\n    TestPropertyValues.of(\"zipkin.storage.type:elasticsearch\").applyTo(context);\n    Access.registerElasticsearch(context);\n    context.refresh();\n\n    HttpClientFactory factory = context.getBean(HttpClientFactory.class);\n    \r\n    assertThat(factory.options.responseTimeoutMillis()).isEqualTo(10000L);\n    assertThat(factory.options.writeTimeoutMillis()).isEqualTo(10000L);\n  }\n","date":"2019-08-06 17:09:05","endLine":203,"groupId":"946","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"timeout_defaultsTo10Seconds","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zipkin-10-0.7/blobInfo/CC_OUT/blobs/7d/c3f08ea82e11672d06587dee27985d369ab775.src","preCode":"  @Test public void timeout_defaultsTo10Seconds() {\n    TestPropertyValues.of(\"zipkin.storage.type:elasticsearch\").applyTo(context);\n    Access.registerElasticsearchHttp(context);\n    context.refresh();\n\n    HttpClientFactory factory = context.getBean(HttpClientFactory.class);\n    \r\n    assertThat(factory.options.responseTimeoutMillis()).isEqualTo(10000L);\n    assertThat(factory.options.writeTimeoutMillis()).isEqualTo(10000L);\n  }\n","realPath":"zipkin-server/src/test/java/zipkin2/server/internal/elasticsearch/ZipkinElasticsearchStorageConfigurationTest.java","repoName":"zipkin","snippetEndLine":0,"snippetStartLine":0,"startLine":194,"status":"M"}],"commitId":"68412118cf8df493bb0e54beb223120663e5ce22","commitMessage":"@@@Instruments when STORAGE_THROTTLE_ENABLED=true (#2735)\n\n","date":"2019-08-06 17:09:05","modifiedFileCount":"14","status":"M","submitter":"Adrian Cole"},{"authorTime":"2019-08-06 17:09:05","codes":[{"authorDate":"2020-08-23 08:22:34","commitOrder":3,"curCode":"  @Test public void usesInterceptorsQualifiedWith_zipkinElasticsearchHttp() {\n    TestPropertyValues.of(\"zipkin.storage.type:elasticsearch\").applyTo(context);\n    Access.registerElasticsearch(context);\n    context.register(CustomizerConfiguration.class);\n    context.refresh();\n\n    HttpClientFactory factory = context.getBean(HttpClientFactory.class);\n    assertThat(factory.options.maxResponseLength()).isEqualTo(12345L);\n    assertThat(factory.options.headers().get(\"test\")).isEqualTo(\"bar\");\n  }\n","date":"2020-08-23 08:22:34","endLine":153,"groupId":"1043","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"usesInterceptorsQualifiedWith_zipkinElasticsearchHttp","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zipkin-10-0.7/blobInfo/CC_OUT/blobs/6d/bf1d17d5155eb5069f9ca90b4f08e0a55b4108.src","preCode":"  @Test public void usesInterceptorsQualifiedWith_zipkinElasticsearchHttp() {\n    TestPropertyValues.of(\"zipkin.storage.type:elasticsearch\").applyTo(context);\n    Access.registerElasticsearch(context);\n    context.register(CustomizerConfiguration.class);\n    context.refresh();\n\n    HttpClientFactory factory = context.getBean(HttpClientFactory.class);\n    assertThat(factory.options.maxResponseLength()).isEqualTo(12345L);\n    assertThat(factory.options.httpHeaders().get(\"test\")).isEqualTo(\"bar\");\n  }\n","realPath":"zipkin-server/src/test/java/zipkin2/server/internal/elasticsearch/ZipkinElasticsearchStorageConfigurationTest.java","repoName":"zipkin","snippetEndLine":0,"snippetStartLine":0,"startLine":144,"status":"M"},{"authorDate":"2019-08-06 17:09:05","commitOrder":3,"curCode":"  @Test public void timeout_defaultsTo10Seconds() {\n    TestPropertyValues.of(\"zipkin.storage.type:elasticsearch\").applyTo(context);\n    Access.registerElasticsearch(context);\n    context.refresh();\n\n    HttpClientFactory factory = context.getBean(HttpClientFactory.class);\n    \r\n    assertThat(factory.options.responseTimeoutMillis()).isEqualTo(10000L);\n    assertThat(factory.options.writeTimeoutMillis()).isEqualTo(10000L);\n  }\n","date":"2019-08-06 17:09:05","endLine":203,"groupId":"1043","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"timeout_defaultsTo10Seconds","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zipkin-10-0.7/blobInfo/CC_OUT/blobs/7d/c3f08ea82e11672d06587dee27985d369ab775.src","preCode":"  @Test public void timeout_defaultsTo10Seconds() {\n    TestPropertyValues.of(\"zipkin.storage.type:elasticsearch\").applyTo(context);\n    Access.registerElasticsearch(context);\n    context.refresh();\n\n    HttpClientFactory factory = context.getBean(HttpClientFactory.class);\n    \r\n    assertThat(factory.options.responseTimeoutMillis()).isEqualTo(10000L);\n    assertThat(factory.options.writeTimeoutMillis()).isEqualTo(10000L);\n  }\n","realPath":"zipkin-server/src/test/java/zipkin2/server/internal/elasticsearch/ZipkinElasticsearchStorageConfigurationTest.java","repoName":"zipkin","snippetEndLine":0,"snippetStartLine":0,"startLine":194,"status":"N"}],"commitId":"ba9876da3799b8b08110414edb6f193ba08c28c0","commitMessage":"@@@Update Armeria to 1.0.0 (#3183)\n\nArmeria 1.0.0 is released. :smile:","date":"2020-08-23 08:22:34","modifiedFileCount":"2","status":"M","submitter":"minux"}]
