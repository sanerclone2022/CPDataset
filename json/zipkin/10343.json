[{"authorTime":"2020-10-18 06:38:49","codes":[{"authorDate":"2020-10-18 06:38:49","commitOrder":1,"curCode":"  @Test public void dedupesSameCalls() throws Exception {\n    List<Call<Void>> calls = new ArrayList<>();\n    callFactory.maybeAdd(\"foo\", calls);\n    callFactory.maybeAdd(\"bar\", calls);\n    callFactory.maybeAdd(\"foo\", calls);\n    callFactory.maybeAdd(\"bar\", calls);\n    callFactory.maybeAdd(\"bar\", calls);\n    assertThat(calls).hasSize(2);\n\n    for (Call<Void> call : calls) {\n      call.execute();\n    }\n    assertThat(values).containsExactly(\"foo\", \"bar\");\n  }\n","date":"2020-10-18 06:38:49","endLine":51,"groupId":"2475","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"dedupesSameCalls","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zipkin-10-0.7/blobInfo/CC_OUT/blobs/b7/742d7b2b9fa58d15da0814288b405a1aa2660c.src","preCode":"  @Test public void dedupesSameCalls() throws Exception {\n    List<Call<Void>> calls = new ArrayList<>();\n    callFactory.maybeAdd(\"foo\", calls);\n    callFactory.maybeAdd(\"bar\", calls);\n    callFactory.maybeAdd(\"foo\", calls);\n    callFactory.maybeAdd(\"bar\", calls);\n    callFactory.maybeAdd(\"bar\", calls);\n    assertThat(calls).hasSize(2);\n\n    for (Call<Void> call : calls) {\n      call.execute();\n    }\n    assertThat(values).containsExactly(\"foo\", \"bar\");\n  }\n","realPath":"zipkin-storage/cassandra/src/test/java/zipkin2/storage/cassandra/internal/call/DeduplicatingInsertTest.java","repoName":"zipkin","snippetEndLine":0,"snippetStartLine":0,"startLine":38,"status":"B"},{"authorDate":"2020-10-18 06:38:49","commitOrder":1,"curCode":"  @Test public void enqueuesInOrder() {\n    List<Call<Void>> calls = new ArrayList<>();\n    callFactory.maybeAdd(\"foo\", calls);\n    callFactory.maybeAdd(\"bar\", calls);\n\n    for (Call<Void> call : calls) {\n      call.enqueue(assertFailOnError);\n    }\n    assertThat(values).containsExactly(\"foo\", \"bar\");\n  }\n","date":"2020-10-18 06:38:49","endLine":71,"groupId":"2476","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"enqueuesInOrder","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zipkin-10-0.7/blobInfo/CC_OUT/blobs/b7/742d7b2b9fa58d15da0814288b405a1aa2660c.src","preCode":"  @Test public void enqueuesInOrder() {\n    List<Call<Void>> calls = new ArrayList<>();\n    callFactory.maybeAdd(\"foo\", calls);\n    callFactory.maybeAdd(\"bar\", calls);\n\n    for (Call<Void> call : calls) {\n      call.enqueue(assertFailOnError);\n    }\n    assertThat(values).containsExactly(\"foo\", \"bar\");\n  }\n","realPath":"zipkin-storage/cassandra/src/test/java/zipkin2/storage/cassandra/internal/call/DeduplicatingInsertTest.java","repoName":"zipkin","snippetEndLine":0,"snippetStartLine":0,"startLine":62,"status":"B"}],"commitId":"12cae10958370b64fbbc450ae31c1a0a642114f4","commitMessage":"@@@Refactors Cassandra queries so they are cheaper and easier to migrate (#3243)\n\nBefore.  we used labels a lot.  and generally a lot of query builder code.\nThis switches most to positional syntax.  which is cheaper and easier to\nmigrate to cassandra driver 4.\n\nThis also reformats everything to make the migration feel like less\nchange.\n\nFinally.  this consolidates as much code as possible.  notably repetitive\ninserts and queries.  again to reduce the heft needed to upgrade later.\n","date":"2020-10-18 06:38:49","modifiedFileCount":"72","status":"B","submitter":"Adrian Cole"},{"authorTime":"2020-10-28 16:13:34","codes":[{"authorDate":"2020-10-28 16:13:34","commitOrder":2,"curCode":"  @Test void dedupesSameCalls() throws Exception {\n    TestFactory testFactory = new TestFactory();\n\n    List<Call<Void>> calls = new ArrayList<>();\n    testFactory.maybeAdd(\"foo\", calls);\n    testFactory.maybeAdd(\"bar\", calls);\n    testFactory.maybeAdd(\"foo\", calls);\n    testFactory.maybeAdd(\"bar\", calls);\n    testFactory.maybeAdd(\"bar\", calls);\n    assertThat(calls).hasSize(2);\n\n    for (Call<Void> call : calls) {\n      call.execute();\n    }\n    assertThat(testFactory.values).containsExactly(\"foo\", \"bar\");\n  }\n","date":"2020-10-28 16:13:34","endLine":46,"groupId":"10343","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"dedupesSameCalls","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zipkin-10-0.7/blobInfo/CC_OUT/blobs/8f/9452fe9b8e273523a2abac8bff23d287b2456a.src","preCode":"  @Test public void dedupesSameCalls() throws Exception {\n    List<Call<Void>> calls = new ArrayList<>();\n    callFactory.maybeAdd(\"foo\", calls);\n    callFactory.maybeAdd(\"bar\", calls);\n    callFactory.maybeAdd(\"foo\", calls);\n    callFactory.maybeAdd(\"bar\", calls);\n    callFactory.maybeAdd(\"bar\", calls);\n    assertThat(calls).hasSize(2);\n\n    for (Call<Void> call : calls) {\n      call.execute();\n    }\n    assertThat(values).containsExactly(\"foo\", \"bar\");\n  }\n","realPath":"zipkin-storage/cassandra/src/test/java/zipkin2/storage/cassandra/internal/call/DeduplicatingInsertTest.java","repoName":"zipkin","snippetEndLine":0,"snippetStartLine":0,"startLine":31,"status":"M"},{"authorDate":"2020-10-28 16:13:34","commitOrder":2,"curCode":"  @Test void enqueuesInOrder() {\n    TestFactory testFactory = new TestFactory();\n\n    List<Call<Void>> calls = new ArrayList<>();\n    testFactory.maybeAdd(\"foo\", calls);\n    testFactory.maybeAdd(\"bar\", calls);\n\n    for (Call<Void> call : calls) {\n      call.enqueue(assertFailOnError);\n    }\n    assertThat(testFactory.values).containsExactly(\"foo\", \"bar\");\n  }\n","date":"2020-10-28 16:13:34","endLine":68,"groupId":"10343","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"enqueuesInOrder","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zipkin-10-0.7/blobInfo/CC_OUT/blobs/8f/9452fe9b8e273523a2abac8bff23d287b2456a.src","preCode":"  @Test public void enqueuesInOrder() {\n    List<Call<Void>> calls = new ArrayList<>();\n    callFactory.maybeAdd(\"foo\", calls);\n    callFactory.maybeAdd(\"bar\", calls);\n\n    for (Call<Void> call : calls) {\n      call.enqueue(assertFailOnError);\n    }\n    assertThat(values).containsExactly(\"foo\", \"bar\");\n  }\n","realPath":"zipkin-storage/cassandra/src/test/java/zipkin2/storage/cassandra/internal/call/DeduplicatingInsertTest.java","repoName":"zipkin","snippetEndLine":0,"snippetStartLine":0,"startLine":57,"status":"M"}],"commitId":"bfaa01fbfe51b4227eab20461e433862f40d856e","commitMessage":"@@@Republishes zipkin-builder only when on master.  as a separate job (#3265)\n\n","date":"2020-10-28 16:13:34","modifiedFileCount":"3","status":"M","submitter":"Adrian Cole"}]
