[{"authorTime":"2019-09-24 11:23:06","codes":[{"authorDate":"2019-09-24 11:23:06","commitOrder":1,"curCode":"  static String writeJsonError(String error) throws IOException {\n    StringWriter writer = new StringWriter();\n    JsonGenerator generator = JSON_FACTORY.createGenerator(writer);\n    generator.writeStartObject();\n    generator.writeStringField(\"status\", STATUS_DOWN);\n    generator.writeObjectFieldStart(\"zipkin\");\n    generator.writeStringField(\"status\", STATUS_DOWN);\n    generator.writeObjectFieldStart(\"details\");\n    generator.writeStringField(\"error\", error);\n    generator.writeEndObject(); \r\n    generator.writeEndObject(); \r\n    generator.writeEndObject(); \r\n    generator.flush();\n    return writer.toString();\n  }\n","date":"2019-09-24 11:23:06","endLine":122,"groupId":"1637","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"writeJsonError","params":"(Stringerror)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zipkin-10-0.7/blobInfo/CC_OUT/blobs/66/863c37c144d936287b492022afb6b660eb5170.src","preCode":"  static String writeJsonError(String error) throws IOException {\n    StringWriter writer = new StringWriter();\n    JsonGenerator generator = JSON_FACTORY.createGenerator(writer);\n    generator.writeStartObject();\n    generator.writeStringField(\"status\", STATUS_DOWN);\n    generator.writeObjectFieldStart(\"zipkin\");\n    generator.writeStringField(\"status\", STATUS_DOWN);\n    generator.writeObjectFieldStart(\"details\");\n    generator.writeStringField(\"error\", error);\n    generator.writeEndObject(); \r\n    generator.writeEndObject(); \r\n    generator.writeEndObject(); \r\n    generator.flush();\n    return writer.toString();\n  }\n","realPath":"zipkin-server/src/main/java/zipkin2/server/internal/health/ZipkinHealthController.java","repoName":"zipkin","snippetEndLine":0,"snippetStartLine":0,"startLine":108,"status":"B"},{"authorDate":"2019-09-24 11:23:06","commitOrder":1,"curCode":"  static String writeJson(String overallStatus, List<ComponentHealth> healths) throws IOException {\n    StringWriter writer = new StringWriter();\n    JsonGenerator generator = JSON_FACTORY.createGenerator(writer);\n    generator.useDefaultPrettyPrinter();\n    generator.writeStartObject();\n    generator.writeStringField(\"status\", overallStatus);\n    generator.writeObjectFieldStart(\"zipkin\");\n    generator.writeStringField(\"status\", overallStatus);\n    generator.writeObjectFieldStart(\"details\");\n\n    for (ComponentHealth health : healths) {\n      generator.writeObjectFieldStart(health.name);\n      generator.writeStringField(\"status\", health.status);\n\n      if (health.status.equals(STATUS_DOWN)) {\n        generator.writeObjectFieldStart(\"details\");\n        generator.writeStringField(\"error\", health.error);\n        generator.writeEndObject(); \r\n      }\n\n      generator.writeEndObject(); \r\n    }\n\n    generator.writeEndObject(); \r\n    generator.writeEndObject(); \r\n    generator.writeEndObject(); \r\n    generator.flush();\n    return writer.toString();\n  }\n","date":"2019-09-24 11:23:06","endLine":152,"groupId":"1903","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"writeJson","params":"(StringoverallStatus@List<ComponentHealth>healths)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zipkin-10-0.7/blobInfo/CC_OUT/blobs/66/863c37c144d936287b492022afb6b660eb5170.src","preCode":"  static String writeJson(String overallStatus, List<ComponentHealth> healths) throws IOException {\n    StringWriter writer = new StringWriter();\n    JsonGenerator generator = JSON_FACTORY.createGenerator(writer);\n    generator.useDefaultPrettyPrinter();\n    generator.writeStartObject();\n    generator.writeStringField(\"status\", overallStatus);\n    generator.writeObjectFieldStart(\"zipkin\");\n    generator.writeStringField(\"status\", overallStatus);\n    generator.writeObjectFieldStart(\"details\");\n\n    for (ComponentHealth health : healths) {\n      generator.writeObjectFieldStart(health.name);\n      generator.writeStringField(\"status\", health.status);\n\n      if (health.status.equals(STATUS_DOWN)) {\n        generator.writeObjectFieldStart(\"details\");\n        generator.writeStringField(\"error\", health.error);\n        generator.writeEndObject(); \r\n      }\n\n      generator.writeEndObject(); \r\n    }\n\n    generator.writeEndObject(); \r\n    generator.writeEndObject(); \r\n    generator.writeEndObject(); \r\n    generator.flush();\n    return writer.toString();\n  }\n","realPath":"zipkin-server/src/main/java/zipkin2/server/internal/health/ZipkinHealthController.java","repoName":"zipkin","snippetEndLine":0,"snippetStartLine":0,"startLine":124,"status":"B"}],"commitId":"00bab807d36ffe01b3964ecf8271e5ef4a129de4","commitMessage":"@@@Decouples health and metrics controllers.  backfills tests for health (#2819)\n\nBefore.  we had health and metrics code mixed in the same controller.\nThis decouples that and ensures not only that health json is pretty by\ndefault.  but that it is also verified. For example.  we had an encoding\nbug on an error path we didn't notice.","date":"2019-09-24 11:23:06","modifiedFileCount":"2","status":"B","submitter":"Adrian Cole"},{"authorTime":"2019-10-12 03:29:55","codes":[{"authorDate":"2019-10-12 03:29:55","commitOrder":2,"curCode":"  static String writeJsonError(String error) throws IOException {\n    StringWriter writer = new StringWriter();\n    try (JsonGenerator generator = JSON_FACTORY.createGenerator(writer)) {\n      generator.useDefaultPrettyPrinter();\n      generator.writeStartObject();\n      generator.writeStringField(\"status\", STATUS_DOWN);\n      generator.writeObjectFieldStart(\"zipkin\");\n      generator.writeStringField(\"status\", STATUS_DOWN);\n      generator.writeObjectFieldStart(\"details\");\n      generator.writeStringField(\"error\", error);\n      generator.writeEndObject(); \r\n      generator.writeEndObject(); \r\n      generator.writeEndObject(); \r\n    }\n    return writer.toString();\n  }\n","date":"2019-10-12 03:29:55","endLine":114,"groupId":"1637","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"writeJsonError","params":"(Stringerror)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zipkin-10-0.7/blobInfo/CC_OUT/blobs/ab/33b40f8d6e7475f3e16fbd154205512c1007e1.src","preCode":"  static String writeJsonError(String error) throws IOException {\n    StringWriter writer = new StringWriter();\n    JsonGenerator generator = JSON_FACTORY.createGenerator(writer);\n    generator.writeStartObject();\n    generator.writeStringField(\"status\", STATUS_DOWN);\n    generator.writeObjectFieldStart(\"zipkin\");\n    generator.writeStringField(\"status\", STATUS_DOWN);\n    generator.writeObjectFieldStart(\"details\");\n    generator.writeStringField(\"error\", error);\n    generator.writeEndObject(); \r\n    generator.writeEndObject(); \r\n    generator.writeEndObject(); \r\n    generator.flush();\n    return writer.toString();\n  }\n","realPath":"zipkin-server/src/main/java/zipkin2/server/internal/health/ZipkinHealthController.java","repoName":"zipkin","snippetEndLine":0,"snippetStartLine":0,"startLine":99,"status":"M"},{"authorDate":"2019-10-12 03:29:55","commitOrder":2,"curCode":"  static String writeJson(String overallStatus, List<ComponentHealth> healths) throws IOException {\n    StringWriter writer = new StringWriter();\n    try (JsonGenerator generator = JSON_FACTORY.createGenerator(writer)) {\n      generator.useDefaultPrettyPrinter();\n      generator.writeStartObject();\n      generator.writeStringField(\"status\", overallStatus);\n      generator.writeObjectFieldStart(\"zipkin\");\n      generator.writeStringField(\"status\", overallStatus);\n      generator.writeObjectFieldStart(\"details\");\n\n      for (ComponentHealth health : healths) {\n        generator.writeObjectFieldStart(health.name);\n        generator.writeStringField(\"status\", health.status);\n\n        if (health.status.equals(STATUS_DOWN)) {\n          generator.writeObjectFieldStart(\"details\");\n          generator.writeStringField(\"error\", health.error);\n          generator.writeEndObject(); \r\n        }\n\n        generator.writeEndObject(); \r\n      }\n\n      generator.writeEndObject(); \r\n      generator.writeEndObject(); \r\n      generator.writeEndObject(); \r\n    }\n    return writer.toString();\n  }\n","date":"2019-10-12 03:29:55","endLine":144,"groupId":"1903","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"writeJson","params":"(StringoverallStatus@List<ComponentHealth>healths)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zipkin-10-0.7/blobInfo/CC_OUT/blobs/ab/33b40f8d6e7475f3e16fbd154205512c1007e1.src","preCode":"  static String writeJson(String overallStatus, List<ComponentHealth> healths) throws IOException {\n    StringWriter writer = new StringWriter();\n    JsonGenerator generator = JSON_FACTORY.createGenerator(writer);\n    generator.useDefaultPrettyPrinter();\n    generator.writeStartObject();\n    generator.writeStringField(\"status\", overallStatus);\n    generator.writeObjectFieldStart(\"zipkin\");\n    generator.writeStringField(\"status\", overallStatus);\n    generator.writeObjectFieldStart(\"details\");\n\n    for (ComponentHealth health : healths) {\n      generator.writeObjectFieldStart(health.name);\n      generator.writeStringField(\"status\", health.status);\n\n      if (health.status.equals(STATUS_DOWN)) {\n        generator.writeObjectFieldStart(\"details\");\n        generator.writeStringField(\"error\", health.error);\n        generator.writeEndObject(); \r\n      }\n\n      generator.writeEndObject(); \r\n    }\n\n    generator.writeEndObject(); \r\n    generator.writeEndObject(); \r\n    generator.writeEndObject(); \r\n    generator.flush();\n    return writer.toString();\n  }\n","realPath":"zipkin-server/src/main/java/zipkin2/server/internal/health/ZipkinHealthController.java","repoName":"zipkin","snippetEndLine":0,"snippetStartLine":0,"startLine":116,"status":"M"}],"commitId":"6b678b302f8e0f200d7c84aafb3fc7ce2107b01e","commitMessage":"@@@Removes remaining use of jackson-databind from zipkin-server (#2821)\n\nThis is still in use in elasticsearch.  but the server no longer uses it.\nAlso addresses feedback from @anuraaga in https://github.com/openzipkin/zipkin/pull/2819","date":"2019-10-12 03:29:55","modifiedFileCount":"7","status":"M","submitter":"Adrian Cole"},{"authorTime":"2019-10-20 07:47:56","codes":[{"authorDate":"2019-10-20 07:47:56","commitOrder":3,"curCode":"  static String writeJsonError(String error) throws IOException {\n    StringWriter writer = new StringWriter();\n    try (JsonGenerator generator = JsonUtil.createGenerator(writer)) {\n      generator.writeStartObject();\n      generator.writeStringField(\"status\", STATUS_DOWN);\n      generator.writeObjectFieldStart(\"zipkin\");\n      generator.writeStringField(\"status\", STATUS_DOWN);\n      generator.writeObjectFieldStart(\"details\");\n      generator.writeStringField(\"error\", error);\n      generator.writeEndObject(); \r\n      generator.writeEndObject(); \r\n      generator.writeEndObject(); \r\n    }\n    return writer.toString();\n  }\n","date":"2019-10-20 07:47:56","endLine":111,"groupId":"1060","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"writeJsonError","params":"(Stringerror)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zipkin-10-0.7/blobInfo/CC_OUT/blobs/62/ba16050446c8b6d7cf03b01cb95c5f5fc38da9.src","preCode":"  static String writeJsonError(String error) throws IOException {\n    StringWriter writer = new StringWriter();\n    try (JsonGenerator generator = JSON_FACTORY.createGenerator(writer)) {\n      generator.useDefaultPrettyPrinter();\n      generator.writeStartObject();\n      generator.writeStringField(\"status\", STATUS_DOWN);\n      generator.writeObjectFieldStart(\"zipkin\");\n      generator.writeStringField(\"status\", STATUS_DOWN);\n      generator.writeObjectFieldStart(\"details\");\n      generator.writeStringField(\"error\", error);\n      generator.writeEndObject(); \r\n      generator.writeEndObject(); \r\n      generator.writeEndObject(); \r\n    }\n    return writer.toString();\n  }\n","realPath":"zipkin-server/src/main/java/zipkin2/server/internal/health/ZipkinHealthController.java","repoName":"zipkin","snippetEndLine":0,"snippetStartLine":0,"startLine":97,"status":"M"},{"authorDate":"2019-10-20 07:47:56","commitOrder":3,"curCode":"  static String writeJson(String overallStatus, List<ComponentHealth> healths) throws IOException {\n    StringWriter writer = new StringWriter();\n    try (JsonGenerator generator = JsonUtil.createGenerator(writer)) {\n      generator.writeStartObject();\n      generator.writeStringField(\"status\", overallStatus);\n      generator.writeObjectFieldStart(\"zipkin\");\n      generator.writeStringField(\"status\", overallStatus);\n      generator.writeObjectFieldStart(\"details\");\n\n      for (ComponentHealth health : healths) {\n        generator.writeObjectFieldStart(health.name);\n        generator.writeStringField(\"status\", health.status);\n\n        if (health.status.equals(STATUS_DOWN)) {\n          generator.writeObjectFieldStart(\"details\");\n          generator.writeStringField(\"error\", health.error);\n          generator.writeEndObject(); \r\n        }\n\n        generator.writeEndObject(); \r\n      }\n\n      generator.writeEndObject(); \r\n      generator.writeEndObject(); \r\n      generator.writeEndObject(); \r\n    }\n    return writer.toString();\n  }\n","date":"2019-10-20 07:47:56","endLine":140,"groupId":"1060","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"writeJson","params":"(StringoverallStatus@List<ComponentHealth>healths)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zipkin-10-0.7/blobInfo/CC_OUT/blobs/62/ba16050446c8b6d7cf03b01cb95c5f5fc38da9.src","preCode":"  static String writeJson(String overallStatus, List<ComponentHealth> healths) throws IOException {\n    StringWriter writer = new StringWriter();\n    try (JsonGenerator generator = JSON_FACTORY.createGenerator(writer)) {\n      generator.useDefaultPrettyPrinter();\n      generator.writeStartObject();\n      generator.writeStringField(\"status\", overallStatus);\n      generator.writeObjectFieldStart(\"zipkin\");\n      generator.writeStringField(\"status\", overallStatus);\n      generator.writeObjectFieldStart(\"details\");\n\n      for (ComponentHealth health : healths) {\n        generator.writeObjectFieldStart(health.name);\n        generator.writeStringField(\"status\", health.status);\n\n        if (health.status.equals(STATUS_DOWN)) {\n          generator.writeObjectFieldStart(\"details\");\n          generator.writeStringField(\"error\", health.error);\n          generator.writeEndObject(); \r\n        }\n\n        generator.writeEndObject(); \r\n      }\n\n      generator.writeEndObject(); \r\n      generator.writeEndObject(); \r\n      generator.writeEndObject(); \r\n    }\n    return writer.toString();\n  }\n","realPath":"zipkin-server/src/main/java/zipkin2/server/internal/health/ZipkinHealthController.java","repoName":"zipkin","snippetEndLine":0,"snippetStartLine":0,"startLine":113,"status":"M"}],"commitId":"6900ddbac922c9cf24dd62b96e83dfbceac1a509","commitMessage":"@@@Remove invocation of Bean methods. (#2867)\n\n","date":"2019-10-20 07:47:56","modifiedFileCount":"6","status":"M","submitter":"Anuraag Agrawal"}]
