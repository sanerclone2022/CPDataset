[{"authorTime":"2018-06-07 08:04:47","codes":[{"authorDate":"2018-06-07 08:04:47","commitOrder":1,"curCode":"  public void annotationKeys() {\n    assertThat(\n            CassandraUtil.annotationKeys(\n                QueryRequest.newBuilder()\n                    .endTs(System.currentTimeMillis())\n                    .limit(10)\n                    .lookback(86400000L)\n                    .serviceName(\"service\")\n                    .parseAnnotationQuery(\"error and http.method=GET\")\n                    .build()))\n        .containsExactly(\"error\", \"http.method=GET\");\n  }\n","date":"2018-06-07 13:12:30","endLine":58,"groupId":"2902","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"annotationKeys","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zipkin-10-0.7/blobInfo/CC_OUT/blobs/c1/f66093050c3230f579b895994a79aebb5ea2e0.src","preCode":"  public void annotationKeys() {\n    assertThat(\n            CassandraUtil.annotationKeys(\n                QueryRequest.newBuilder()\n                    .endTs(System.currentTimeMillis())\n                    .limit(10)\n                    .lookback(86400000L)\n                    .serviceName(\"service\")\n                    .parseAnnotationQuery(\"error and http.method=GET\")\n                    .build()))\n        .containsExactly(\"error\", \"http.method=GET\");\n  }\n","realPath":"zipkin-storage/cassandra/src/test/java/zipkin2/storage/cassandra/CassandraUtilTest.java","repoName":"zipkin","snippetEndLine":0,"snippetStartLine":0,"startLine":47,"status":"B"},{"authorDate":"2018-06-07 08:04:47","commitOrder":1,"curCode":"  public void annotationKeys_dedupes() {\n    assertThat(\n            CassandraUtil.annotationKeys(\n                QueryRequest.newBuilder()\n                    .endTs(System.currentTimeMillis())\n                    .limit(10)\n                    .lookback(86400000L)\n                    .serviceName(\"service\")\n                    .parseAnnotationQuery(\"error and error\")\n                    .build()))\n        .containsExactly(\"error\");\n  }\n","date":"2018-06-07 13:12:30","endLine":72,"groupId":"2902","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"annotationKeys_dedupes","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zipkin-10-0.7/blobInfo/CC_OUT/blobs/c1/f66093050c3230f579b895994a79aebb5ea2e0.src","preCode":"  public void annotationKeys_dedupes() {\n    assertThat(\n            CassandraUtil.annotationKeys(\n                QueryRequest.newBuilder()\n                    .endTs(System.currentTimeMillis())\n                    .limit(10)\n                    .lookback(86400000L)\n                    .serviceName(\"service\")\n                    .parseAnnotationQuery(\"error and error\")\n                    .build()))\n        .containsExactly(\"error\");\n  }\n","realPath":"zipkin-storage/cassandra/src/test/java/zipkin2/storage/cassandra/CassandraUtilTest.java","repoName":"zipkin","snippetEndLine":0,"snippetStartLine":0,"startLine":61,"status":"B"}],"commitId":"8e14ac167035a8ed03a0afd7691c69dc67b483de","commitMessage":"@@@Refactors project around v2 storage apis\n\nThis does the following towards unifying the storage layer:\n* Removes zipkin-guava storage adapters as they aren't used anymore\n* Removes the \"legacy read\" of our first Elasticsearch model\n* Refactors artifact and directory names wher -v1 implies legacy\n* Refactors README to discourage v1 storage components\n* Makes the server only depend on zipkin2.storage.StorageComponent\n\nFollow-up work can refactor more once a v2 collector component is\navailable.\n","date":"2018-06-07 13:12:30","modifiedFileCount":"32","status":"B","submitter":"Adrian Cole"},{"authorTime":"2020-10-18 06:38:49","codes":[{"authorDate":"2020-10-18 06:38:49","commitOrder":2,"curCode":"  @Test public void annotationKeys() {\n    QueryRequest request = QueryRequest.newBuilder()\n      .endTs(System.currentTimeMillis())\n      .limit(10)\n      .lookback(86400000L)\n      .serviceName(\"service\")\n      .parseAnnotationQuery(\"error and http.method=GET\")\n      .build();\n\n    assertThat(CassandraUtil.annotationKeys(request))\n      .containsExactly(\"error\", \"http.method=GET\");\n  }\n","date":"2020-10-18 06:38:49","endLine":55,"groupId":"10362","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"annotationKeys","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zipkin-10-0.7/blobInfo/CC_OUT/blobs/a0/cd7bc356bae220a285bf905301ee7850fc3206.src","preCode":"  public void annotationKeys() {\n    assertThat(\n            CassandraUtil.annotationKeys(\n                QueryRequest.newBuilder()\n                    .endTs(System.currentTimeMillis())\n                    .limit(10)\n                    .lookback(86400000L)\n                    .serviceName(\"service\")\n                    .parseAnnotationQuery(\"error and http.method=GET\")\n                    .build()))\n        .containsExactly(\"error\", \"http.method=GET\");\n  }\n","realPath":"zipkin-storage/cassandra/src/test/java/zipkin2/storage/cassandra/CassandraUtilTest.java","repoName":"zipkin","snippetEndLine":0,"snippetStartLine":0,"startLine":44,"status":"M"},{"authorDate":"2020-10-18 06:38:49","commitOrder":2,"curCode":"  @Test public void annotationKeys_dedupes() {\n    QueryRequest request = QueryRequest.newBuilder()\n      .endTs(System.currentTimeMillis())\n      .limit(10)\n      .lookback(86400000L)\n      .serviceName(\"service\")\n      .parseAnnotationQuery(\"error and error\")\n      .build();\n\n    assertThat(CassandraUtil.annotationKeys(request))\n      .containsExactly(\"error\");\n  }\n","date":"2020-10-18 06:38:49","endLine":68,"groupId":"10362","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"annotationKeys_dedupes","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-zipkin-10-0.7/blobInfo/CC_OUT/blobs/a0/cd7bc356bae220a285bf905301ee7850fc3206.src","preCode":"  public void annotationKeys_dedupes() {\n    assertThat(\n            CassandraUtil.annotationKeys(\n                QueryRequest.newBuilder()\n                    .endTs(System.currentTimeMillis())\n                    .limit(10)\n                    .lookback(86400000L)\n                    .serviceName(\"service\")\n                    .parseAnnotationQuery(\"error and error\")\n                    .build()))\n        .containsExactly(\"error\");\n  }\n","realPath":"zipkin-storage/cassandra/src/test/java/zipkin2/storage/cassandra/CassandraUtilTest.java","repoName":"zipkin","snippetEndLine":0,"snippetStartLine":0,"startLine":57,"status":"M"}],"commitId":"12cae10958370b64fbbc450ae31c1a0a642114f4","commitMessage":"@@@Refactors Cassandra queries so they are cheaper and easier to migrate (#3243)\n\nBefore.  we used labels a lot.  and generally a lot of query builder code.\nThis switches most to positional syntax.  which is cheaper and easier to\nmigrate to cassandra driver 4.\n\nThis also reformats everything to make the migration feel like less\nchange.\n\nFinally.  this consolidates as much code as possible.  notably repetitive\ninserts and queries.  again to reduce the heft needed to upgrade later.\n","date":"2020-10-18 06:38:49","modifiedFileCount":"72","status":"M","submitter":"Adrian Cole"}]
