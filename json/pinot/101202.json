[{"authorTime":"2019-01-12 01:43:41","codes":[{"authorDate":"2019-01-12 01:43:41","commitOrder":1,"curCode":"  public int compareTo(AggregationInfo other) {\n    if (!getClass().equals(other.getClass())) {\n      return getClass().getName().compareTo(other.getClass().getName());\n    }\n\n    int lastComparison = 0;\n\n    lastComparison = Boolean.valueOf(isSetAggregationType()).compareTo(other.isSetAggregationType());\n    if (lastComparison != 0) {\n      return lastComparison;\n    }\n    if (isSetAggregationType()) {\n      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.aggregationType, other.aggregationType);\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n    }\n    lastComparison = Boolean.valueOf(isSetAggregationParams()).compareTo(other.isSetAggregationParams());\n    if (lastComparison != 0) {\n      return lastComparison;\n    }\n    if (isSetAggregationParams()) {\n      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.aggregationParams, other.aggregationParams);\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n    }\n    lastComparison = Boolean.valueOf(isSetIsInSelectList()).compareTo(other.isSetIsInSelectList());\n    if (lastComparison != 0) {\n      return lastComparison;\n    }\n    if (isSetIsInSelectList()) {\n      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.isInSelectList, other.isInSelectList);\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n    }\n    return 0;\n  }\n","date":"2019-01-12 01:43:41","endLine":435,"groupId":"13440","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"compareTo","params":"(AggregationInfoother)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-pinot-10-0.7/blobInfo/CC_OUT/blobs/31/170fd5715b34ec479a3a0b2615d581a50b7ebc.src","preCode":"  public int compareTo(AggregationInfo other) {\n    if (!getClass().equals(other.getClass())) {\n      return getClass().getName().compareTo(other.getClass().getName());\n    }\n\n    int lastComparison = 0;\n\n    lastComparison = Boolean.valueOf(isSetAggregationType()).compareTo(other.isSetAggregationType());\n    if (lastComparison != 0) {\n      return lastComparison;\n    }\n    if (isSetAggregationType()) {\n      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.aggregationType, other.aggregationType);\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n    }\n    lastComparison = Boolean.valueOf(isSetAggregationParams()).compareTo(other.isSetAggregationParams());\n    if (lastComparison != 0) {\n      return lastComparison;\n    }\n    if (isSetAggregationParams()) {\n      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.aggregationParams, other.aggregationParams);\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n    }\n    lastComparison = Boolean.valueOf(isSetIsInSelectList()).compareTo(other.isSetIsInSelectList());\n    if (lastComparison != 0) {\n      return lastComparison;\n    }\n    if (isSetIsInSelectList()) {\n      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.isInSelectList, other.isInSelectList);\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n    }\n    return 0;\n  }\n","realPath":"pinot-common/src/main/java/org/apache/pinot/common/request/AggregationInfo.java","repoName":"pinot","snippetEndLine":0,"snippetStartLine":0,"startLine":397,"status":"B"},{"authorDate":"2019-01-12 01:43:41","commitOrder":1,"curCode":"  public int compareTo(BrokerRequest other) {\n    if (!getClass().equals(other.getClass())) {\n      return getClass().getName().compareTo(other.getClass().getName());\n    }\n\n    int lastComparison = 0;\n\n    lastComparison = Boolean.valueOf(isSetQueryType()).compareTo(other.isSetQueryType());\n    if (lastComparison != 0) {\n      return lastComparison;\n    }\n    if (isSetQueryType()) {\n      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.queryType, other.queryType);\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n    }\n    lastComparison = Boolean.valueOf(isSetQuerySource()).compareTo(other.isSetQuerySource());\n    if (lastComparison != 0) {\n      return lastComparison;\n    }\n    if (isSetQuerySource()) {\n      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.querySource, other.querySource);\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n    }\n    lastComparison = Boolean.valueOf(isSetTimeInterval()).compareTo(other.isSetTimeInterval());\n    if (lastComparison != 0) {\n      return lastComparison;\n    }\n    if (isSetTimeInterval()) {\n      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.timeInterval, other.timeInterval);\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n    }\n    lastComparison = Boolean.valueOf(isSetDuration()).compareTo(other.isSetDuration());\n    if (lastComparison != 0) {\n      return lastComparison;\n    }\n    if (isSetDuration()) {\n      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.duration, other.duration);\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n    }\n    lastComparison = Boolean.valueOf(isSetFilterQuery()).compareTo(other.isSetFilterQuery());\n    if (lastComparison != 0) {\n      return lastComparison;\n    }\n    if (isSetFilterQuery()) {\n      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.filterQuery, other.filterQuery);\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n    }\n    lastComparison = Boolean.valueOf(isSetAggregationsInfo()).compareTo(other.isSetAggregationsInfo());\n    if (lastComparison != 0) {\n      return lastComparison;\n    }\n    if (isSetAggregationsInfo()) {\n      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.aggregationsInfo, other.aggregationsInfo);\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n    }\n    lastComparison = Boolean.valueOf(isSetGroupBy()).compareTo(other.isSetGroupBy());\n    if (lastComparison != 0) {\n      return lastComparison;\n    }\n    if (isSetGroupBy()) {\n      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.groupBy, other.groupBy);\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n    }\n    lastComparison = Boolean.valueOf(isSetSelections()).compareTo(other.isSetSelections());\n    if (lastComparison != 0) {\n      return lastComparison;\n    }\n    if (isSetSelections()) {\n      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.selections, other.selections);\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n    }\n    lastComparison = Boolean.valueOf(isSetFilterSubQueryMap()).compareTo(other.isSetFilterSubQueryMap());\n    if (lastComparison != 0) {\n      return lastComparison;\n    }\n    if (isSetFilterSubQueryMap()) {\n      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.filterSubQueryMap, other.filterSubQueryMap);\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n    }\n    lastComparison = Boolean.valueOf(isSetBucketHashKey()).compareTo(other.isSetBucketHashKey());\n    if (lastComparison != 0) {\n      return lastComparison;\n    }\n    if (isSetBucketHashKey()) {\n      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.bucketHashKey, other.bucketHashKey);\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n    }\n    lastComparison = Boolean.valueOf(isSetEnableTrace()).compareTo(other.isSetEnableTrace());\n    if (lastComparison != 0) {\n      return lastComparison;\n    }\n    if (isSetEnableTrace()) {\n      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.enableTrace, other.enableTrace);\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n    }\n    lastComparison = Boolean.valueOf(isSetResponseFormat()).compareTo(other.isSetResponseFormat());\n    if (lastComparison != 0) {\n      return lastComparison;\n    }\n    if (isSetResponseFormat()) {\n      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.responseFormat, other.responseFormat);\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n    }\n    lastComparison = Boolean.valueOf(isSetDebugOptions()).compareTo(other.isSetDebugOptions());\n    if (lastComparison != 0) {\n      return lastComparison;\n    }\n    if (isSetDebugOptions()) {\n      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.debugOptions, other.debugOptions);\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n    }\n    lastComparison = Boolean.valueOf(isSetQueryOptions()).compareTo(other.isSetQueryOptions());\n    if (lastComparison != 0) {\n      return lastComparison;\n    }\n    if (isSetQueryOptions()) {\n      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.queryOptions, other.queryOptions);\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n    }\n    lastComparison = Boolean.valueOf(isSetHavingFilterQuery()).compareTo(other.isSetHavingFilterQuery());\n    if (lastComparison != 0) {\n      return lastComparison;\n    }\n    if (isSetHavingFilterQuery()) {\n      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.havingFilterQuery, other.havingFilterQuery);\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n    }\n    lastComparison = Boolean.valueOf(isSetHavingFilterSubQueryMap()).compareTo(other.isSetHavingFilterSubQueryMap());\n    if (lastComparison != 0) {\n      return lastComparison;\n    }\n    if (isSetHavingFilterSubQueryMap()) {\n      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.havingFilterSubQueryMap, other.havingFilterSubQueryMap);\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n    }\n    return 0;\n  }\n","date":"2019-01-12 01:43:41","endLine":1392,"groupId":"12867","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"compareTo","params":"(BrokerRequestother)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-pinot-10-0.7/blobInfo/CC_OUT/blobs/1d/ddae8142a1d556a676c27656930a866a7dda18.src","preCode":"  public int compareTo(BrokerRequest other) {\n    if (!getClass().equals(other.getClass())) {\n      return getClass().getName().compareTo(other.getClass().getName());\n    }\n\n    int lastComparison = 0;\n\n    lastComparison = Boolean.valueOf(isSetQueryType()).compareTo(other.isSetQueryType());\n    if (lastComparison != 0) {\n      return lastComparison;\n    }\n    if (isSetQueryType()) {\n      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.queryType, other.queryType);\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n    }\n    lastComparison = Boolean.valueOf(isSetQuerySource()).compareTo(other.isSetQuerySource());\n    if (lastComparison != 0) {\n      return lastComparison;\n    }\n    if (isSetQuerySource()) {\n      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.querySource, other.querySource);\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n    }\n    lastComparison = Boolean.valueOf(isSetTimeInterval()).compareTo(other.isSetTimeInterval());\n    if (lastComparison != 0) {\n      return lastComparison;\n    }\n    if (isSetTimeInterval()) {\n      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.timeInterval, other.timeInterval);\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n    }\n    lastComparison = Boolean.valueOf(isSetDuration()).compareTo(other.isSetDuration());\n    if (lastComparison != 0) {\n      return lastComparison;\n    }\n    if (isSetDuration()) {\n      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.duration, other.duration);\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n    }\n    lastComparison = Boolean.valueOf(isSetFilterQuery()).compareTo(other.isSetFilterQuery());\n    if (lastComparison != 0) {\n      return lastComparison;\n    }\n    if (isSetFilterQuery()) {\n      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.filterQuery, other.filterQuery);\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n    }\n    lastComparison = Boolean.valueOf(isSetAggregationsInfo()).compareTo(other.isSetAggregationsInfo());\n    if (lastComparison != 0) {\n      return lastComparison;\n    }\n    if (isSetAggregationsInfo()) {\n      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.aggregationsInfo, other.aggregationsInfo);\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n    }\n    lastComparison = Boolean.valueOf(isSetGroupBy()).compareTo(other.isSetGroupBy());\n    if (lastComparison != 0) {\n      return lastComparison;\n    }\n    if (isSetGroupBy()) {\n      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.groupBy, other.groupBy);\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n    }\n    lastComparison = Boolean.valueOf(isSetSelections()).compareTo(other.isSetSelections());\n    if (lastComparison != 0) {\n      return lastComparison;\n    }\n    if (isSetSelections()) {\n      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.selections, other.selections);\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n    }\n    lastComparison = Boolean.valueOf(isSetFilterSubQueryMap()).compareTo(other.isSetFilterSubQueryMap());\n    if (lastComparison != 0) {\n      return lastComparison;\n    }\n    if (isSetFilterSubQueryMap()) {\n      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.filterSubQueryMap, other.filterSubQueryMap);\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n    }\n    lastComparison = Boolean.valueOf(isSetBucketHashKey()).compareTo(other.isSetBucketHashKey());\n    if (lastComparison != 0) {\n      return lastComparison;\n    }\n    if (isSetBucketHashKey()) {\n      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.bucketHashKey, other.bucketHashKey);\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n    }\n    lastComparison = Boolean.valueOf(isSetEnableTrace()).compareTo(other.isSetEnableTrace());\n    if (lastComparison != 0) {\n      return lastComparison;\n    }\n    if (isSetEnableTrace()) {\n      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.enableTrace, other.enableTrace);\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n    }\n    lastComparison = Boolean.valueOf(isSetResponseFormat()).compareTo(other.isSetResponseFormat());\n    if (lastComparison != 0) {\n      return lastComparison;\n    }\n    if (isSetResponseFormat()) {\n      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.responseFormat, other.responseFormat);\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n    }\n    lastComparison = Boolean.valueOf(isSetDebugOptions()).compareTo(other.isSetDebugOptions());\n    if (lastComparison != 0) {\n      return lastComparison;\n    }\n    if (isSetDebugOptions()) {\n      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.debugOptions, other.debugOptions);\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n    }\n    lastComparison = Boolean.valueOf(isSetQueryOptions()).compareTo(other.isSetQueryOptions());\n    if (lastComparison != 0) {\n      return lastComparison;\n    }\n    if (isSetQueryOptions()) {\n      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.queryOptions, other.queryOptions);\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n    }\n    lastComparison = Boolean.valueOf(isSetHavingFilterQuery()).compareTo(other.isSetHavingFilterQuery());\n    if (lastComparison != 0) {\n      return lastComparison;\n    }\n    if (isSetHavingFilterQuery()) {\n      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.havingFilterQuery, other.havingFilterQuery);\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n    }\n    lastComparison = Boolean.valueOf(isSetHavingFilterSubQueryMap()).compareTo(other.isSetHavingFilterSubQueryMap());\n    if (lastComparison != 0) {\n      return lastComparison;\n    }\n    if (isSetHavingFilterSubQueryMap()) {\n      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.havingFilterSubQueryMap, other.havingFilterSubQueryMap);\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n    }\n    return 0;\n  }\n","realPath":"pinot-common/src/main/java/org/apache/pinot/common/request/BrokerRequest.java","repoName":"pinot","snippetEndLine":0,"snippetStartLine":0,"startLine":1224,"status":"B"}],"commitId":"b497851f3406b72b7f36596c362e1fcbcb4a162a","commitMessage":"@@@Move all files in com.linkedin to org.apache (#3680)\n\n","date":"2019-01-12 01:43:41","modifiedFileCount":"0","status":"B","submitter":"Neha Pawar"},{"authorTime":"2019-06-13 04:21:05","codes":[{"authorDate":"2019-01-12 01:43:41","commitOrder":2,"curCode":"  public int compareTo(AggregationInfo other) {\n    if (!getClass().equals(other.getClass())) {\n      return getClass().getName().compareTo(other.getClass().getName());\n    }\n\n    int lastComparison = 0;\n\n    lastComparison = Boolean.valueOf(isSetAggregationType()).compareTo(other.isSetAggregationType());\n    if (lastComparison != 0) {\n      return lastComparison;\n    }\n    if (isSetAggregationType()) {\n      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.aggregationType, other.aggregationType);\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n    }\n    lastComparison = Boolean.valueOf(isSetAggregationParams()).compareTo(other.isSetAggregationParams());\n    if (lastComparison != 0) {\n      return lastComparison;\n    }\n    if (isSetAggregationParams()) {\n      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.aggregationParams, other.aggregationParams);\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n    }\n    lastComparison = Boolean.valueOf(isSetIsInSelectList()).compareTo(other.isSetIsInSelectList());\n    if (lastComparison != 0) {\n      return lastComparison;\n    }\n    if (isSetIsInSelectList()) {\n      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.isInSelectList, other.isInSelectList);\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n    }\n    return 0;\n  }\n","date":"2019-01-12 01:43:41","endLine":435,"groupId":"13440","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"compareTo","params":"(AggregationInfoother)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-pinot-10-0.7/blobInfo/CC_OUT/blobs/31/170fd5715b34ec479a3a0b2615d581a50b7ebc.src","preCode":"  public int compareTo(AggregationInfo other) {\n    if (!getClass().equals(other.getClass())) {\n      return getClass().getName().compareTo(other.getClass().getName());\n    }\n\n    int lastComparison = 0;\n\n    lastComparison = Boolean.valueOf(isSetAggregationType()).compareTo(other.isSetAggregationType());\n    if (lastComparison != 0) {\n      return lastComparison;\n    }\n    if (isSetAggregationType()) {\n      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.aggregationType, other.aggregationType);\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n    }\n    lastComparison = Boolean.valueOf(isSetAggregationParams()).compareTo(other.isSetAggregationParams());\n    if (lastComparison != 0) {\n      return lastComparison;\n    }\n    if (isSetAggregationParams()) {\n      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.aggregationParams, other.aggregationParams);\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n    }\n    lastComparison = Boolean.valueOf(isSetIsInSelectList()).compareTo(other.isSetIsInSelectList());\n    if (lastComparison != 0) {\n      return lastComparison;\n    }\n    if (isSetIsInSelectList()) {\n      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.isInSelectList, other.isInSelectList);\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n    }\n    return 0;\n  }\n","realPath":"pinot-common/src/main/java/org/apache/pinot/common/request/AggregationInfo.java","repoName":"pinot","snippetEndLine":0,"snippetStartLine":0,"startLine":397,"status":"N"},{"authorDate":"2019-06-13 04:21:05","commitOrder":2,"curCode":"  public int compareTo(BrokerRequest other) {\n    if (!getClass().equals(other.getClass())) {\n      return getClass().getName().compareTo(other.getClass().getName());\n    }\n\n    int lastComparison = 0;\n\n    lastComparison = Boolean.valueOf(isSetQueryType()).compareTo(other.isSetQueryType());\n    if (lastComparison != 0) {\n      return lastComparison;\n    }\n    if (isSetQueryType()) {\n      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.queryType, other.queryType);\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n    }\n    lastComparison = Boolean.valueOf(isSetQuerySource()).compareTo(other.isSetQuerySource());\n    if (lastComparison != 0) {\n      return lastComparison;\n    }\n    if (isSetQuerySource()) {\n      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.querySource, other.querySource);\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n    }\n    lastComparison = Boolean.valueOf(isSetTimeInterval()).compareTo(other.isSetTimeInterval());\n    if (lastComparison != 0) {\n      return lastComparison;\n    }\n    if (isSetTimeInterval()) {\n      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.timeInterval, other.timeInterval);\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n    }\n    lastComparison = Boolean.valueOf(isSetDuration()).compareTo(other.isSetDuration());\n    if (lastComparison != 0) {\n      return lastComparison;\n    }\n    if (isSetDuration()) {\n      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.duration, other.duration);\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n    }\n    lastComparison = Boolean.valueOf(isSetFilterQuery()).compareTo(other.isSetFilterQuery());\n    if (lastComparison != 0) {\n      return lastComparison;\n    }\n    if (isSetFilterQuery()) {\n      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.filterQuery, other.filterQuery);\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n    }\n    lastComparison = Boolean.valueOf(isSetAggregationsInfo()).compareTo(other.isSetAggregationsInfo());\n    if (lastComparison != 0) {\n      return lastComparison;\n    }\n    if (isSetAggregationsInfo()) {\n      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.aggregationsInfo, other.aggregationsInfo);\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n    }\n    lastComparison = Boolean.valueOf(isSetGroupBy()).compareTo(other.isSetGroupBy());\n    if (lastComparison != 0) {\n      return lastComparison;\n    }\n    if (isSetGroupBy()) {\n      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.groupBy, other.groupBy);\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n    }\n    lastComparison = Boolean.valueOf(isSetSelections()).compareTo(other.isSetSelections());\n    if (lastComparison != 0) {\n      return lastComparison;\n    }\n    if (isSetSelections()) {\n      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.selections, other.selections);\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n    }\n    lastComparison = Boolean.valueOf(isSetFilterSubQueryMap()).compareTo(other.isSetFilterSubQueryMap());\n    if (lastComparison != 0) {\n      return lastComparison;\n    }\n    if (isSetFilterSubQueryMap()) {\n      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.filterSubQueryMap, other.filterSubQueryMap);\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n    }\n    lastComparison = Boolean.valueOf(isSetBucketHashKey()).compareTo(other.isSetBucketHashKey());\n    if (lastComparison != 0) {\n      return lastComparison;\n    }\n    if (isSetBucketHashKey()) {\n      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.bucketHashKey, other.bucketHashKey);\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n    }\n    lastComparison = Boolean.valueOf(isSetEnableTrace()).compareTo(other.isSetEnableTrace());\n    if (lastComparison != 0) {\n      return lastComparison;\n    }\n    if (isSetEnableTrace()) {\n      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.enableTrace, other.enableTrace);\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n    }\n    lastComparison = Boolean.valueOf(isSetResponseFormat()).compareTo(other.isSetResponseFormat());\n    if (lastComparison != 0) {\n      return lastComparison;\n    }\n    if (isSetResponseFormat()) {\n      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.responseFormat, other.responseFormat);\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n    }\n    lastComparison = Boolean.valueOf(isSetDebugOptions()).compareTo(other.isSetDebugOptions());\n    if (lastComparison != 0) {\n      return lastComparison;\n    }\n    if (isSetDebugOptions()) {\n      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.debugOptions, other.debugOptions);\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n    }\n    lastComparison = Boolean.valueOf(isSetQueryOptions()).compareTo(other.isSetQueryOptions());\n    if (lastComparison != 0) {\n      return lastComparison;\n    }\n    if (isSetQueryOptions()) {\n      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.queryOptions, other.queryOptions);\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n    }\n    lastComparison = Boolean.valueOf(isSetHavingFilterQuery()).compareTo(other.isSetHavingFilterQuery());\n    if (lastComparison != 0) {\n      return lastComparison;\n    }\n    if (isSetHavingFilterQuery()) {\n      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.havingFilterQuery, other.havingFilterQuery);\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n    }\n    lastComparison = Boolean.valueOf(isSetHavingFilterSubQueryMap()).compareTo(other.isSetHavingFilterSubQueryMap());\n    if (lastComparison != 0) {\n      return lastComparison;\n    }\n    if (isSetHavingFilterSubQueryMap()) {\n      lastComparison =\n          org.apache.thrift.TBaseHelper.compareTo(this.havingFilterSubQueryMap, other.havingFilterSubQueryMap);\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n    }\n    lastComparison = Boolean.valueOf(isSetPinotQuery()).compareTo(other.isSetPinotQuery());\n    if (lastComparison != 0) {\n      return lastComparison;\n    }\n    if (isSetPinotQuery()) {\n      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.pinotQuery, other.pinotQuery);\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n    }\n    return 0;\n  }\n","date":"2019-06-13 04:21:05","endLine":1556,"groupId":"12867","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"compareTo","params":"(BrokerRequestother)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-pinot-10-0.7/blobInfo/CC_OUT/blobs/9a/25d6e20c3c49d42b75614b56b9d7528feaf17f.src","preCode":"  public int compareTo(BrokerRequest other) {\n    if (!getClass().equals(other.getClass())) {\n      return getClass().getName().compareTo(other.getClass().getName());\n    }\n\n    int lastComparison = 0;\n\n    lastComparison = Boolean.valueOf(isSetQueryType()).compareTo(other.isSetQueryType());\n    if (lastComparison != 0) {\n      return lastComparison;\n    }\n    if (isSetQueryType()) {\n      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.queryType, other.queryType);\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n    }\n    lastComparison = Boolean.valueOf(isSetQuerySource()).compareTo(other.isSetQuerySource());\n    if (lastComparison != 0) {\n      return lastComparison;\n    }\n    if (isSetQuerySource()) {\n      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.querySource, other.querySource);\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n    }\n    lastComparison = Boolean.valueOf(isSetTimeInterval()).compareTo(other.isSetTimeInterval());\n    if (lastComparison != 0) {\n      return lastComparison;\n    }\n    if (isSetTimeInterval()) {\n      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.timeInterval, other.timeInterval);\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n    }\n    lastComparison = Boolean.valueOf(isSetDuration()).compareTo(other.isSetDuration());\n    if (lastComparison != 0) {\n      return lastComparison;\n    }\n    if (isSetDuration()) {\n      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.duration, other.duration);\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n    }\n    lastComparison = Boolean.valueOf(isSetFilterQuery()).compareTo(other.isSetFilterQuery());\n    if (lastComparison != 0) {\n      return lastComparison;\n    }\n    if (isSetFilterQuery()) {\n      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.filterQuery, other.filterQuery);\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n    }\n    lastComparison = Boolean.valueOf(isSetAggregationsInfo()).compareTo(other.isSetAggregationsInfo());\n    if (lastComparison != 0) {\n      return lastComparison;\n    }\n    if (isSetAggregationsInfo()) {\n      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.aggregationsInfo, other.aggregationsInfo);\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n    }\n    lastComparison = Boolean.valueOf(isSetGroupBy()).compareTo(other.isSetGroupBy());\n    if (lastComparison != 0) {\n      return lastComparison;\n    }\n    if (isSetGroupBy()) {\n      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.groupBy, other.groupBy);\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n    }\n    lastComparison = Boolean.valueOf(isSetSelections()).compareTo(other.isSetSelections());\n    if (lastComparison != 0) {\n      return lastComparison;\n    }\n    if (isSetSelections()) {\n      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.selections, other.selections);\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n    }\n    lastComparison = Boolean.valueOf(isSetFilterSubQueryMap()).compareTo(other.isSetFilterSubQueryMap());\n    if (lastComparison != 0) {\n      return lastComparison;\n    }\n    if (isSetFilterSubQueryMap()) {\n      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.filterSubQueryMap, other.filterSubQueryMap);\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n    }\n    lastComparison = Boolean.valueOf(isSetBucketHashKey()).compareTo(other.isSetBucketHashKey());\n    if (lastComparison != 0) {\n      return lastComparison;\n    }\n    if (isSetBucketHashKey()) {\n      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.bucketHashKey, other.bucketHashKey);\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n    }\n    lastComparison = Boolean.valueOf(isSetEnableTrace()).compareTo(other.isSetEnableTrace());\n    if (lastComparison != 0) {\n      return lastComparison;\n    }\n    if (isSetEnableTrace()) {\n      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.enableTrace, other.enableTrace);\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n    }\n    lastComparison = Boolean.valueOf(isSetResponseFormat()).compareTo(other.isSetResponseFormat());\n    if (lastComparison != 0) {\n      return lastComparison;\n    }\n    if (isSetResponseFormat()) {\n      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.responseFormat, other.responseFormat);\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n    }\n    lastComparison = Boolean.valueOf(isSetDebugOptions()).compareTo(other.isSetDebugOptions());\n    if (lastComparison != 0) {\n      return lastComparison;\n    }\n    if (isSetDebugOptions()) {\n      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.debugOptions, other.debugOptions);\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n    }\n    lastComparison = Boolean.valueOf(isSetQueryOptions()).compareTo(other.isSetQueryOptions());\n    if (lastComparison != 0) {\n      return lastComparison;\n    }\n    if (isSetQueryOptions()) {\n      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.queryOptions, other.queryOptions);\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n    }\n    lastComparison = Boolean.valueOf(isSetHavingFilterQuery()).compareTo(other.isSetHavingFilterQuery());\n    if (lastComparison != 0) {\n      return lastComparison;\n    }\n    if (isSetHavingFilterQuery()) {\n      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.havingFilterQuery, other.havingFilterQuery);\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n    }\n    lastComparison = Boolean.valueOf(isSetHavingFilterSubQueryMap()).compareTo(other.isSetHavingFilterSubQueryMap());\n    if (lastComparison != 0) {\n      return lastComparison;\n    }\n    if (isSetHavingFilterSubQueryMap()) {\n      lastComparison =\n          org.apache.thrift.TBaseHelper.compareTo(this.havingFilterSubQueryMap, other.havingFilterSubQueryMap);\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n    }\n    return 0;\n  }\n","realPath":"pinot-common/src/main/java/org/apache/pinot/common/request/BrokerRequest.java","repoName":"pinot","snippetEndLine":0,"snippetStartLine":0,"startLine":1377,"status":"M"}],"commitId":"9f3fe4e4ac42db2a39115cc4fe9a4ed7cd7599b1","commitMessage":"@@@PQL -> SQL enhancement - phase 1 - new Pinot Query Struct (#4216)\n\n* Adding query.thrift - enhancing broker request (#15)\n\n* Adding pinot query to broker request converter (#16)\n\n* Adding pinot query to broker request converter\n\n* Addressing review comments and fixing bug in handling filter expression\n\n* Adding license header\n\n* Adding AST parser to PinotQuery insider BrokerRequest (#17)\n\n* Adding AST parser to PinotQuery insider BrokerRequest\n\n* Fixing Predicate implementation\n\n* Make filter expression in PinotQuery use calcite function names in SqlKind (#20)\n\n* Adding more filter operators into FilterKind (#21)\n\n* Adding validation mode to compare broker request and pinot query (#19)\n\n* Adding validation mode to compare broker request and pinot query\n\n* Fixing the logic to assign ids to sub filter in the current code\n\n* Logging PQL when conversion fails\n\n* Adding SelectionSort and make standardizeExpression to take one more paramter to single quote non-string literal inside functions\n\n* ignore test of having queries\n\n* Minor clean. Warning on mismatch instead of throwing exception\n\n* Adding license header\n\n* Addressing review comments\n\n* not format thrift auto-gen code\n\n* rebase\n\n* address comments\n\n* addressing review comments\n\n* Addressing review comments and disabling creation of pinot query by default\n\n* Pulling some changes that were missed in this PR. Test case passes now\n\n* Removing InstanceRequestV2 class file and adding license headers\n\n* Moving all tests with pinot query in testConverter method\n\n* Deduping In predicate values and adding test case\n","date":"2019-06-13 04:21:05","modifiedFileCount":"40","status":"M","submitter":"Xiang Fu"},{"authorTime":"2019-07-23 05:24:26","codes":[{"authorDate":"2019-07-23 05:24:26","commitOrder":3,"curCode":"  public int compareTo(AggregationInfo other) {\n    if (!getClass().equals(other.getClass())) {\n      return getClass().getName().compareTo(other.getClass().getName());\n    }\n\n    int lastComparison = 0;\n\n    lastComparison = java.lang.Boolean.valueOf(isSetAggregationType()).compareTo(other.isSetAggregationType());\n    if (lastComparison != 0) {\n      return lastComparison;\n    }\n    if (isSetAggregationType()) {\n      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.aggregationType, other.aggregationType);\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n    }\n    lastComparison = java.lang.Boolean.valueOf(isSetAggregationParams()).compareTo(other.isSetAggregationParams());\n    if (lastComparison != 0) {\n      return lastComparison;\n    }\n    if (isSetAggregationParams()) {\n      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.aggregationParams, other.aggregationParams);\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n    }\n    lastComparison = java.lang.Boolean.valueOf(isSetIsInSelectList()).compareTo(other.isSetIsInSelectList());\n    if (lastComparison != 0) {\n      return lastComparison;\n    }\n    if (isSetIsInSelectList()) {\n      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.isInSelectList, other.isInSelectList);\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n    }\n    return 0;\n  }\n","date":"2019-07-23 05:24:26","endLine":412,"groupId":"12697","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"compareTo","params":"(AggregationInfoother)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-pinot-10-0.7/blobInfo/CC_OUT/blobs/f3/dc1d579fd21824c8788d1bde20c8891402854b.src","preCode":"  public int compareTo(AggregationInfo other) {\n    if (!getClass().equals(other.getClass())) {\n      return getClass().getName().compareTo(other.getClass().getName());\n    }\n\n    int lastComparison = 0;\n\n    lastComparison = Boolean.valueOf(isSetAggregationType()).compareTo(other.isSetAggregationType());\n    if (lastComparison != 0) {\n      return lastComparison;\n    }\n    if (isSetAggregationType()) {\n      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.aggregationType, other.aggregationType);\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n    }\n    lastComparison = Boolean.valueOf(isSetAggregationParams()).compareTo(other.isSetAggregationParams());\n    if (lastComparison != 0) {\n      return lastComparison;\n    }\n    if (isSetAggregationParams()) {\n      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.aggregationParams, other.aggregationParams);\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n    }\n    lastComparison = Boolean.valueOf(isSetIsInSelectList()).compareTo(other.isSetIsInSelectList());\n    if (lastComparison != 0) {\n      return lastComparison;\n    }\n    if (isSetIsInSelectList()) {\n      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.isInSelectList, other.isInSelectList);\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n    }\n    return 0;\n  }\n","realPath":"pinot-common/src/main/java/org/apache/pinot/common/request/AggregationInfo.java","repoName":"pinot","snippetEndLine":0,"snippetStartLine":0,"startLine":374,"status":"M"},{"authorDate":"2019-07-23 05:24:26","commitOrder":3,"curCode":"  public int compareTo(BrokerRequest other) {\n    if (!getClass().equals(other.getClass())) {\n      return getClass().getName().compareTo(other.getClass().getName());\n    }\n\n    int lastComparison = 0;\n\n    lastComparison = java.lang.Boolean.valueOf(isSetQueryType()).compareTo(other.isSetQueryType());\n    if (lastComparison != 0) {\n      return lastComparison;\n    }\n    if (isSetQueryType()) {\n      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.queryType, other.queryType);\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n    }\n    lastComparison = java.lang.Boolean.valueOf(isSetQuerySource()).compareTo(other.isSetQuerySource());\n    if (lastComparison != 0) {\n      return lastComparison;\n    }\n    if (isSetQuerySource()) {\n      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.querySource, other.querySource);\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n    }\n    lastComparison = java.lang.Boolean.valueOf(isSetTimeInterval()).compareTo(other.isSetTimeInterval());\n    if (lastComparison != 0) {\n      return lastComparison;\n    }\n    if (isSetTimeInterval()) {\n      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.timeInterval, other.timeInterval);\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n    }\n    lastComparison = java.lang.Boolean.valueOf(isSetDuration()).compareTo(other.isSetDuration());\n    if (lastComparison != 0) {\n      return lastComparison;\n    }\n    if (isSetDuration()) {\n      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.duration, other.duration);\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n    }\n    lastComparison = java.lang.Boolean.valueOf(isSetFilterQuery()).compareTo(other.isSetFilterQuery());\n    if (lastComparison != 0) {\n      return lastComparison;\n    }\n    if (isSetFilterQuery()) {\n      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.filterQuery, other.filterQuery);\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n    }\n    lastComparison = java.lang.Boolean.valueOf(isSetAggregationsInfo()).compareTo(other.isSetAggregationsInfo());\n    if (lastComparison != 0) {\n      return lastComparison;\n    }\n    if (isSetAggregationsInfo()) {\n      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.aggregationsInfo, other.aggregationsInfo);\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n    }\n    lastComparison = java.lang.Boolean.valueOf(isSetGroupBy()).compareTo(other.isSetGroupBy());\n    if (lastComparison != 0) {\n      return lastComparison;\n    }\n    if (isSetGroupBy()) {\n      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.groupBy, other.groupBy);\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n    }\n    lastComparison = java.lang.Boolean.valueOf(isSetSelections()).compareTo(other.isSetSelections());\n    if (lastComparison != 0) {\n      return lastComparison;\n    }\n    if (isSetSelections()) {\n      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.selections, other.selections);\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n    }\n    lastComparison = java.lang.Boolean.valueOf(isSetFilterSubQueryMap()).compareTo(other.isSetFilterSubQueryMap());\n    if (lastComparison != 0) {\n      return lastComparison;\n    }\n    if (isSetFilterSubQueryMap()) {\n      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.filterSubQueryMap, other.filterSubQueryMap);\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n    }\n    lastComparison = java.lang.Boolean.valueOf(isSetBucketHashKey()).compareTo(other.isSetBucketHashKey());\n    if (lastComparison != 0) {\n      return lastComparison;\n    }\n    if (isSetBucketHashKey()) {\n      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.bucketHashKey, other.bucketHashKey);\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n    }\n    lastComparison = java.lang.Boolean.valueOf(isSetEnableTrace()).compareTo(other.isSetEnableTrace());\n    if (lastComparison != 0) {\n      return lastComparison;\n    }\n    if (isSetEnableTrace()) {\n      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.enableTrace, other.enableTrace);\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n    }\n    lastComparison = java.lang.Boolean.valueOf(isSetResponseFormat()).compareTo(other.isSetResponseFormat());\n    if (lastComparison != 0) {\n      return lastComparison;\n    }\n    if (isSetResponseFormat()) {\n      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.responseFormat, other.responseFormat);\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n    }\n    lastComparison = java.lang.Boolean.valueOf(isSetDebugOptions()).compareTo(other.isSetDebugOptions());\n    if (lastComparison != 0) {\n      return lastComparison;\n    }\n    if (isSetDebugOptions()) {\n      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.debugOptions, other.debugOptions);\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n    }\n    lastComparison = java.lang.Boolean.valueOf(isSetQueryOptions()).compareTo(other.isSetQueryOptions());\n    if (lastComparison != 0) {\n      return lastComparison;\n    }\n    if (isSetQueryOptions()) {\n      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.queryOptions, other.queryOptions);\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n    }\n    lastComparison = java.lang.Boolean.valueOf(isSetHavingFilterQuery()).compareTo(other.isSetHavingFilterQuery());\n    if (lastComparison != 0) {\n      return lastComparison;\n    }\n    if (isSetHavingFilterQuery()) {\n      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.havingFilterQuery, other.havingFilterQuery);\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n    }\n    lastComparison = java.lang.Boolean.valueOf(isSetHavingFilterSubQueryMap()).compareTo(other.isSetHavingFilterSubQueryMap());\n    if (lastComparison != 0) {\n      return lastComparison;\n    }\n    if (isSetHavingFilterSubQueryMap()) {\n      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.havingFilterSubQueryMap, other.havingFilterSubQueryMap);\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n    }\n    lastComparison = java.lang.Boolean.valueOf(isSetPinotQuery()).compareTo(other.isSetPinotQuery());\n    if (lastComparison != 0) {\n      return lastComparison;\n    }\n    if (isSetPinotQuery()) {\n      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.pinotQuery, other.pinotQuery);\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n    }\n    lastComparison = java.lang.Boolean.valueOf(isSetOrderBy()).compareTo(other.isSetOrderBy());\n    if (lastComparison != 0) {\n      return lastComparison;\n    }\n    if (isSetOrderBy()) {\n      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.orderBy, other.orderBy);\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n    }\n    return 0;\n  }\n","date":"2019-07-23 05:24:26","endLine":1548,"groupId":"14253","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"compareTo","params":"(BrokerRequestother)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-pinot-10-0.7/blobInfo/CC_OUT/blobs/30/35303263dd46bc8ddd618caa655a6a851c9e51.src","preCode":"  public int compareTo(BrokerRequest other) {\n    if (!getClass().equals(other.getClass())) {\n      return getClass().getName().compareTo(other.getClass().getName());\n    }\n\n    int lastComparison = 0;\n\n    lastComparison = Boolean.valueOf(isSetQueryType()).compareTo(other.isSetQueryType());\n    if (lastComparison != 0) {\n      return lastComparison;\n    }\n    if (isSetQueryType()) {\n      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.queryType, other.queryType);\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n    }\n    lastComparison = Boolean.valueOf(isSetQuerySource()).compareTo(other.isSetQuerySource());\n    if (lastComparison != 0) {\n      return lastComparison;\n    }\n    if (isSetQuerySource()) {\n      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.querySource, other.querySource);\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n    }\n    lastComparison = Boolean.valueOf(isSetTimeInterval()).compareTo(other.isSetTimeInterval());\n    if (lastComparison != 0) {\n      return lastComparison;\n    }\n    if (isSetTimeInterval()) {\n      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.timeInterval, other.timeInterval);\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n    }\n    lastComparison = Boolean.valueOf(isSetDuration()).compareTo(other.isSetDuration());\n    if (lastComparison != 0) {\n      return lastComparison;\n    }\n    if (isSetDuration()) {\n      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.duration, other.duration);\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n    }\n    lastComparison = Boolean.valueOf(isSetFilterQuery()).compareTo(other.isSetFilterQuery());\n    if (lastComparison != 0) {\n      return lastComparison;\n    }\n    if (isSetFilterQuery()) {\n      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.filterQuery, other.filterQuery);\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n    }\n    lastComparison = Boolean.valueOf(isSetAggregationsInfo()).compareTo(other.isSetAggregationsInfo());\n    if (lastComparison != 0) {\n      return lastComparison;\n    }\n    if (isSetAggregationsInfo()) {\n      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.aggregationsInfo, other.aggregationsInfo);\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n    }\n    lastComparison = Boolean.valueOf(isSetGroupBy()).compareTo(other.isSetGroupBy());\n    if (lastComparison != 0) {\n      return lastComparison;\n    }\n    if (isSetGroupBy()) {\n      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.groupBy, other.groupBy);\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n    }\n    lastComparison = Boolean.valueOf(isSetSelections()).compareTo(other.isSetSelections());\n    if (lastComparison != 0) {\n      return lastComparison;\n    }\n    if (isSetSelections()) {\n      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.selections, other.selections);\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n    }\n    lastComparison = Boolean.valueOf(isSetFilterSubQueryMap()).compareTo(other.isSetFilterSubQueryMap());\n    if (lastComparison != 0) {\n      return lastComparison;\n    }\n    if (isSetFilterSubQueryMap()) {\n      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.filterSubQueryMap, other.filterSubQueryMap);\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n    }\n    lastComparison = Boolean.valueOf(isSetBucketHashKey()).compareTo(other.isSetBucketHashKey());\n    if (lastComparison != 0) {\n      return lastComparison;\n    }\n    if (isSetBucketHashKey()) {\n      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.bucketHashKey, other.bucketHashKey);\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n    }\n    lastComparison = Boolean.valueOf(isSetEnableTrace()).compareTo(other.isSetEnableTrace());\n    if (lastComparison != 0) {\n      return lastComparison;\n    }\n    if (isSetEnableTrace()) {\n      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.enableTrace, other.enableTrace);\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n    }\n    lastComparison = Boolean.valueOf(isSetResponseFormat()).compareTo(other.isSetResponseFormat());\n    if (lastComparison != 0) {\n      return lastComparison;\n    }\n    if (isSetResponseFormat()) {\n      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.responseFormat, other.responseFormat);\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n    }\n    lastComparison = Boolean.valueOf(isSetDebugOptions()).compareTo(other.isSetDebugOptions());\n    if (lastComparison != 0) {\n      return lastComparison;\n    }\n    if (isSetDebugOptions()) {\n      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.debugOptions, other.debugOptions);\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n    }\n    lastComparison = Boolean.valueOf(isSetQueryOptions()).compareTo(other.isSetQueryOptions());\n    if (lastComparison != 0) {\n      return lastComparison;\n    }\n    if (isSetQueryOptions()) {\n      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.queryOptions, other.queryOptions);\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n    }\n    lastComparison = Boolean.valueOf(isSetHavingFilterQuery()).compareTo(other.isSetHavingFilterQuery());\n    if (lastComparison != 0) {\n      return lastComparison;\n    }\n    if (isSetHavingFilterQuery()) {\n      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.havingFilterQuery, other.havingFilterQuery);\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n    }\n    lastComparison = Boolean.valueOf(isSetHavingFilterSubQueryMap()).compareTo(other.isSetHavingFilterSubQueryMap());\n    if (lastComparison != 0) {\n      return lastComparison;\n    }\n    if (isSetHavingFilterSubQueryMap()) {\n      lastComparison =\n          org.apache.thrift.TBaseHelper.compareTo(this.havingFilterSubQueryMap, other.havingFilterSubQueryMap);\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n    }\n    lastComparison = Boolean.valueOf(isSetPinotQuery()).compareTo(other.isSetPinotQuery());\n    if (lastComparison != 0) {\n      return lastComparison;\n    }\n    if (isSetPinotQuery()) {\n      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.pinotQuery, other.pinotQuery);\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n    }\n    return 0;\n  }\n","realPath":"pinot-common/src/main/java/org/apache/pinot/common/request/BrokerRequest.java","repoName":"pinot","snippetEndLine":0,"snippetStartLine":0,"startLine":1360,"status":"M"}],"commitId":"6dc820a6e77e412e843b60d32c4b5b9470f630e8","commitMessage":"@@@Issue #4450: Support parsing of `Order By` clause in PQL compiler. (#4453)\n\nThis is the first of several PR's to come for implementing group-by +\norder-by support in PQL. The changes in this PR are limited to parsing\nthe order-by clause.\n\n1. Added a top level orderBy field in BrokerRequest. The existing\nselectionSort field is tied to selection only queries.  and removing it\nwill break backward compatibility. Once the code is moved to use\nPinotQuery instead of BrokerRequest.  this will get cleaned up\nautomatically.\n\n2. Moved to latest Thrift version 0.12.0. This required removing the\norg.apache.commons.lang3 exclusion from pom.xml.\n\n3. Added unit test for order-by compilation.","date":"2019-07-23 05:24:26","modifiedFileCount":"22","status":"M","submitter":"Mayank Shrivastava"},{"authorTime":"2019-09-25 01:20:45","codes":[{"authorDate":"2019-07-23 05:24:26","commitOrder":4,"curCode":"  public int compareTo(AggregationInfo other) {\n    if (!getClass().equals(other.getClass())) {\n      return getClass().getName().compareTo(other.getClass().getName());\n    }\n\n    int lastComparison = 0;\n\n    lastComparison = java.lang.Boolean.valueOf(isSetAggregationType()).compareTo(other.isSetAggregationType());\n    if (lastComparison != 0) {\n      return lastComparison;\n    }\n    if (isSetAggregationType()) {\n      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.aggregationType, other.aggregationType);\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n    }\n    lastComparison = java.lang.Boolean.valueOf(isSetAggregationParams()).compareTo(other.isSetAggregationParams());\n    if (lastComparison != 0) {\n      return lastComparison;\n    }\n    if (isSetAggregationParams()) {\n      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.aggregationParams, other.aggregationParams);\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n    }\n    lastComparison = java.lang.Boolean.valueOf(isSetIsInSelectList()).compareTo(other.isSetIsInSelectList());\n    if (lastComparison != 0) {\n      return lastComparison;\n    }\n    if (isSetIsInSelectList()) {\n      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.isInSelectList, other.isInSelectList);\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n    }\n    return 0;\n  }\n","date":"2019-07-23 05:24:26","endLine":412,"groupId":"12697","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"compareTo","params":"(AggregationInfoother)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-pinot-10-0.7/blobInfo/CC_OUT/blobs/f3/dc1d579fd21824c8788d1bde20c8891402854b.src","preCode":"  public int compareTo(AggregationInfo other) {\n    if (!getClass().equals(other.getClass())) {\n      return getClass().getName().compareTo(other.getClass().getName());\n    }\n\n    int lastComparison = 0;\n\n    lastComparison = java.lang.Boolean.valueOf(isSetAggregationType()).compareTo(other.isSetAggregationType());\n    if (lastComparison != 0) {\n      return lastComparison;\n    }\n    if (isSetAggregationType()) {\n      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.aggregationType, other.aggregationType);\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n    }\n    lastComparison = java.lang.Boolean.valueOf(isSetAggregationParams()).compareTo(other.isSetAggregationParams());\n    if (lastComparison != 0) {\n      return lastComparison;\n    }\n    if (isSetAggregationParams()) {\n      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.aggregationParams, other.aggregationParams);\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n    }\n    lastComparison = java.lang.Boolean.valueOf(isSetIsInSelectList()).compareTo(other.isSetIsInSelectList());\n    if (lastComparison != 0) {\n      return lastComparison;\n    }\n    if (isSetIsInSelectList()) {\n      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.isInSelectList, other.isInSelectList);\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n    }\n    return 0;\n  }\n","realPath":"pinot-common/src/main/java/org/apache/pinot/common/request/AggregationInfo.java","repoName":"pinot","snippetEndLine":0,"snippetStartLine":0,"startLine":374,"status":"N"},{"authorDate":"2019-09-25 01:20:45","commitOrder":4,"curCode":"  public int compareTo(BrokerRequest other) {\n    if (!getClass().equals(other.getClass())) {\n      return getClass().getName().compareTo(other.getClass().getName());\n    }\n\n    int lastComparison = 0;\n\n    lastComparison = java.lang.Boolean.valueOf(isSetQueryType()).compareTo(other.isSetQueryType());\n    if (lastComparison != 0) {\n      return lastComparison;\n    }\n    if (isSetQueryType()) {\n      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.queryType, other.queryType);\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n    }\n    lastComparison = java.lang.Boolean.valueOf(isSetQuerySource()).compareTo(other.isSetQuerySource());\n    if (lastComparison != 0) {\n      return lastComparison;\n    }\n    if (isSetQuerySource()) {\n      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.querySource, other.querySource);\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n    }\n    lastComparison = java.lang.Boolean.valueOf(isSetTimeInterval()).compareTo(other.isSetTimeInterval());\n    if (lastComparison != 0) {\n      return lastComparison;\n    }\n    if (isSetTimeInterval()) {\n      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.timeInterval, other.timeInterval);\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n    }\n    lastComparison = java.lang.Boolean.valueOf(isSetDuration()).compareTo(other.isSetDuration());\n    if (lastComparison != 0) {\n      return lastComparison;\n    }\n    if (isSetDuration()) {\n      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.duration, other.duration);\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n    }\n    lastComparison = java.lang.Boolean.valueOf(isSetFilterQuery()).compareTo(other.isSetFilterQuery());\n    if (lastComparison != 0) {\n      return lastComparison;\n    }\n    if (isSetFilterQuery()) {\n      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.filterQuery, other.filterQuery);\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n    }\n    lastComparison = java.lang.Boolean.valueOf(isSetAggregationsInfo()).compareTo(other.isSetAggregationsInfo());\n    if (lastComparison != 0) {\n      return lastComparison;\n    }\n    if (isSetAggregationsInfo()) {\n      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.aggregationsInfo, other.aggregationsInfo);\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n    }\n    lastComparison = java.lang.Boolean.valueOf(isSetGroupBy()).compareTo(other.isSetGroupBy());\n    if (lastComparison != 0) {\n      return lastComparison;\n    }\n    if (isSetGroupBy()) {\n      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.groupBy, other.groupBy);\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n    }\n    lastComparison = java.lang.Boolean.valueOf(isSetSelections()).compareTo(other.isSetSelections());\n    if (lastComparison != 0) {\n      return lastComparison;\n    }\n    if (isSetSelections()) {\n      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.selections, other.selections);\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n    }\n    lastComparison = java.lang.Boolean.valueOf(isSetFilterSubQueryMap()).compareTo(other.isSetFilterSubQueryMap());\n    if (lastComparison != 0) {\n      return lastComparison;\n    }\n    if (isSetFilterSubQueryMap()) {\n      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.filterSubQueryMap, other.filterSubQueryMap);\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n    }\n    lastComparison = java.lang.Boolean.valueOf(isSetBucketHashKey()).compareTo(other.isSetBucketHashKey());\n    if (lastComparison != 0) {\n      return lastComparison;\n    }\n    if (isSetBucketHashKey()) {\n      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.bucketHashKey, other.bucketHashKey);\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n    }\n    lastComparison = java.lang.Boolean.valueOf(isSetEnableTrace()).compareTo(other.isSetEnableTrace());\n    if (lastComparison != 0) {\n      return lastComparison;\n    }\n    if (isSetEnableTrace()) {\n      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.enableTrace, other.enableTrace);\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n    }\n    lastComparison = java.lang.Boolean.valueOf(isSetResponseFormat()).compareTo(other.isSetResponseFormat());\n    if (lastComparison != 0) {\n      return lastComparison;\n    }\n    if (isSetResponseFormat()) {\n      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.responseFormat, other.responseFormat);\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n    }\n    lastComparison = java.lang.Boolean.valueOf(isSetDebugOptions()).compareTo(other.isSetDebugOptions());\n    if (lastComparison != 0) {\n      return lastComparison;\n    }\n    if (isSetDebugOptions()) {\n      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.debugOptions, other.debugOptions);\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n    }\n    lastComparison = java.lang.Boolean.valueOf(isSetQueryOptions()).compareTo(other.isSetQueryOptions());\n    if (lastComparison != 0) {\n      return lastComparison;\n    }\n    if (isSetQueryOptions()) {\n      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.queryOptions, other.queryOptions);\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n    }\n    lastComparison = java.lang.Boolean.valueOf(isSetHavingFilterQuery()).compareTo(other.isSetHavingFilterQuery());\n    if (lastComparison != 0) {\n      return lastComparison;\n    }\n    if (isSetHavingFilterQuery()) {\n      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.havingFilterQuery, other.havingFilterQuery);\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n    }\n    lastComparison = java.lang.Boolean.valueOf(isSetHavingFilterSubQueryMap()).compareTo(other.isSetHavingFilterSubQueryMap());\n    if (lastComparison != 0) {\n      return lastComparison;\n    }\n    if (isSetHavingFilterSubQueryMap()) {\n      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.havingFilterSubQueryMap, other.havingFilterSubQueryMap);\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n    }\n    lastComparison = java.lang.Boolean.valueOf(isSetPinotQuery()).compareTo(other.isSetPinotQuery());\n    if (lastComparison != 0) {\n      return lastComparison;\n    }\n    if (isSetPinotQuery()) {\n      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.pinotQuery, other.pinotQuery);\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n    }\n    lastComparison = java.lang.Boolean.valueOf(isSetOrderBy()).compareTo(other.isSetOrderBy());\n    if (lastComparison != 0) {\n      return lastComparison;\n    }\n    if (isSetOrderBy()) {\n      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.orderBy, other.orderBy);\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n    }\n    lastComparison = java.lang.Boolean.valueOf(isSetLimit()).compareTo(other.isSetLimit());\n    if (lastComparison != 0) {\n      return lastComparison;\n    }\n    if (isSetLimit()) {\n      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.limit, other.limit);\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n    }\n    return 0;\n  }\n","date":"2019-09-25 01:20:45","endLine":1620,"groupId":"14253","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"compareTo","params":"(BrokerRequestother)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-pinot-10-0.7/blobInfo/CC_OUT/blobs/f3/ff93a6454d827115a020603d8d652ecb4399a3.src","preCode":"  public int compareTo(BrokerRequest other) {\n    if (!getClass().equals(other.getClass())) {\n      return getClass().getName().compareTo(other.getClass().getName());\n    }\n\n    int lastComparison = 0;\n\n    lastComparison = java.lang.Boolean.valueOf(isSetQueryType()).compareTo(other.isSetQueryType());\n    if (lastComparison != 0) {\n      return lastComparison;\n    }\n    if (isSetQueryType()) {\n      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.queryType, other.queryType);\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n    }\n    lastComparison = java.lang.Boolean.valueOf(isSetQuerySource()).compareTo(other.isSetQuerySource());\n    if (lastComparison != 0) {\n      return lastComparison;\n    }\n    if (isSetQuerySource()) {\n      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.querySource, other.querySource);\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n    }\n    lastComparison = java.lang.Boolean.valueOf(isSetTimeInterval()).compareTo(other.isSetTimeInterval());\n    if (lastComparison != 0) {\n      return lastComparison;\n    }\n    if (isSetTimeInterval()) {\n      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.timeInterval, other.timeInterval);\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n    }\n    lastComparison = java.lang.Boolean.valueOf(isSetDuration()).compareTo(other.isSetDuration());\n    if (lastComparison != 0) {\n      return lastComparison;\n    }\n    if (isSetDuration()) {\n      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.duration, other.duration);\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n    }\n    lastComparison = java.lang.Boolean.valueOf(isSetFilterQuery()).compareTo(other.isSetFilterQuery());\n    if (lastComparison != 0) {\n      return lastComparison;\n    }\n    if (isSetFilterQuery()) {\n      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.filterQuery, other.filterQuery);\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n    }\n    lastComparison = java.lang.Boolean.valueOf(isSetAggregationsInfo()).compareTo(other.isSetAggregationsInfo());\n    if (lastComparison != 0) {\n      return lastComparison;\n    }\n    if (isSetAggregationsInfo()) {\n      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.aggregationsInfo, other.aggregationsInfo);\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n    }\n    lastComparison = java.lang.Boolean.valueOf(isSetGroupBy()).compareTo(other.isSetGroupBy());\n    if (lastComparison != 0) {\n      return lastComparison;\n    }\n    if (isSetGroupBy()) {\n      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.groupBy, other.groupBy);\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n    }\n    lastComparison = java.lang.Boolean.valueOf(isSetSelections()).compareTo(other.isSetSelections());\n    if (lastComparison != 0) {\n      return lastComparison;\n    }\n    if (isSetSelections()) {\n      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.selections, other.selections);\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n    }\n    lastComparison = java.lang.Boolean.valueOf(isSetFilterSubQueryMap()).compareTo(other.isSetFilterSubQueryMap());\n    if (lastComparison != 0) {\n      return lastComparison;\n    }\n    if (isSetFilterSubQueryMap()) {\n      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.filterSubQueryMap, other.filterSubQueryMap);\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n    }\n    lastComparison = java.lang.Boolean.valueOf(isSetBucketHashKey()).compareTo(other.isSetBucketHashKey());\n    if (lastComparison != 0) {\n      return lastComparison;\n    }\n    if (isSetBucketHashKey()) {\n      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.bucketHashKey, other.bucketHashKey);\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n    }\n    lastComparison = java.lang.Boolean.valueOf(isSetEnableTrace()).compareTo(other.isSetEnableTrace());\n    if (lastComparison != 0) {\n      return lastComparison;\n    }\n    if (isSetEnableTrace()) {\n      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.enableTrace, other.enableTrace);\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n    }\n    lastComparison = java.lang.Boolean.valueOf(isSetResponseFormat()).compareTo(other.isSetResponseFormat());\n    if (lastComparison != 0) {\n      return lastComparison;\n    }\n    if (isSetResponseFormat()) {\n      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.responseFormat, other.responseFormat);\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n    }\n    lastComparison = java.lang.Boolean.valueOf(isSetDebugOptions()).compareTo(other.isSetDebugOptions());\n    if (lastComparison != 0) {\n      return lastComparison;\n    }\n    if (isSetDebugOptions()) {\n      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.debugOptions, other.debugOptions);\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n    }\n    lastComparison = java.lang.Boolean.valueOf(isSetQueryOptions()).compareTo(other.isSetQueryOptions());\n    if (lastComparison != 0) {\n      return lastComparison;\n    }\n    if (isSetQueryOptions()) {\n      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.queryOptions, other.queryOptions);\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n    }\n    lastComparison = java.lang.Boolean.valueOf(isSetHavingFilterQuery()).compareTo(other.isSetHavingFilterQuery());\n    if (lastComparison != 0) {\n      return lastComparison;\n    }\n    if (isSetHavingFilterQuery()) {\n      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.havingFilterQuery, other.havingFilterQuery);\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n    }\n    lastComparison = java.lang.Boolean.valueOf(isSetHavingFilterSubQueryMap()).compareTo(other.isSetHavingFilterSubQueryMap());\n    if (lastComparison != 0) {\n      return lastComparison;\n    }\n    if (isSetHavingFilterSubQueryMap()) {\n      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.havingFilterSubQueryMap, other.havingFilterSubQueryMap);\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n    }\n    lastComparison = java.lang.Boolean.valueOf(isSetPinotQuery()).compareTo(other.isSetPinotQuery());\n    if (lastComparison != 0) {\n      return lastComparison;\n    }\n    if (isSetPinotQuery()) {\n      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.pinotQuery, other.pinotQuery);\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n    }\n    lastComparison = java.lang.Boolean.valueOf(isSetOrderBy()).compareTo(other.isSetOrderBy());\n    if (lastComparison != 0) {\n      return lastComparison;\n    }\n    if (isSetOrderBy()) {\n      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.orderBy, other.orderBy);\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n    }\n    return 0;\n  }\n","realPath":"pinot-common/src/main/java/org/apache/pinot/common/request/BrokerRequest.java","repoName":"pinot","snippetEndLine":0,"snippetStartLine":0,"startLine":1422,"status":"M"}],"commitId":"a0c84fe2555720efc2872cbc188b6b8c05aa45f7","commitMessage":"@@@Implement DISTINCT (#4535)\n\nTODOs\n\n(1) Integrate with OrderByUtils work done as part of 'group by\nand order by' feature to support order by for distinct queries\n\n(2) Remove the constraint of a single argument on other\naggregation functions\n\n(3) Optimize for single column distinct query","date":"2019-09-25 01:20:45","modifiedFileCount":"30","status":"M","submitter":"Sidd"},{"authorTime":"2019-09-25 01:20:45","codes":[{"authorDate":"2020-04-20 07:51:21","commitOrder":5,"curCode":"  public int compareTo(AggregationInfo other) {\n    if (!getClass().equals(other.getClass())) {\n      return getClass().getName().compareTo(other.getClass().getName());\n    }\n\n    int lastComparison = 0;\n\n    lastComparison = java.lang.Boolean.valueOf(isSetAggregationType()).compareTo(other.isSetAggregationType());\n    if (lastComparison != 0) {\n      return lastComparison;\n    }\n    if (isSetAggregationType()) {\n      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.aggregationType, other.aggregationType);\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n    }\n    lastComparison = java.lang.Boolean.valueOf(isSetAggregationParams()).compareTo(other.isSetAggregationParams());\n    if (lastComparison != 0) {\n      return lastComparison;\n    }\n    if (isSetAggregationParams()) {\n      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.aggregationParams, other.aggregationParams);\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n    }\n    lastComparison = java.lang.Boolean.valueOf(isSetIsInSelectList()).compareTo(other.isSetIsInSelectList());\n    if (lastComparison != 0) {\n      return lastComparison;\n    }\n    if (isSetIsInSelectList()) {\n      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.isInSelectList, other.isInSelectList);\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n    }\n    lastComparison = java.lang.Boolean.valueOf(isSetExpressions()).compareTo(other.isSetExpressions());\n    if (lastComparison != 0) {\n      return lastComparison;\n    }\n    if (isSetExpressions()) {\n      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.expressions, other.expressions);\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n    }\n    return 0;\n  }\n","date":"2020-04-20 07:51:21","endLine":502,"groupId":"101202","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"compareTo","params":"(AggregationInfoother)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-pinot-10-0.7/blobInfo/CC_OUT/blobs/d3/eb2f1219ffba934d190c3ff6d88b42ee894dc0.src","preCode":"  public int compareTo(AggregationInfo other) {\n    if (!getClass().equals(other.getClass())) {\n      return getClass().getName().compareTo(other.getClass().getName());\n    }\n\n    int lastComparison = 0;\n\n    lastComparison = java.lang.Boolean.valueOf(isSetAggregationType()).compareTo(other.isSetAggregationType());\n    if (lastComparison != 0) {\n      return lastComparison;\n    }\n    if (isSetAggregationType()) {\n      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.aggregationType, other.aggregationType);\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n    }\n    lastComparison = java.lang.Boolean.valueOf(isSetAggregationParams()).compareTo(other.isSetAggregationParams());\n    if (lastComparison != 0) {\n      return lastComparison;\n    }\n    if (isSetAggregationParams()) {\n      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.aggregationParams, other.aggregationParams);\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n    }\n    lastComparison = java.lang.Boolean.valueOf(isSetIsInSelectList()).compareTo(other.isSetIsInSelectList());\n    if (lastComparison != 0) {\n      return lastComparison;\n    }\n    if (isSetIsInSelectList()) {\n      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.isInSelectList, other.isInSelectList);\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n    }\n    return 0;\n  }\n","realPath":"pinot-common/src/main/java/org/apache/pinot/common/request/AggregationInfo.java","repoName":"pinot","snippetEndLine":0,"snippetStartLine":0,"startLine":454,"status":"M"},{"authorDate":"2019-09-25 01:20:45","commitOrder":5,"curCode":"  public int compareTo(BrokerRequest other) {\n    if (!getClass().equals(other.getClass())) {\n      return getClass().getName().compareTo(other.getClass().getName());\n    }\n\n    int lastComparison = 0;\n\n    lastComparison = java.lang.Boolean.valueOf(isSetQueryType()).compareTo(other.isSetQueryType());\n    if (lastComparison != 0) {\n      return lastComparison;\n    }\n    if (isSetQueryType()) {\n      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.queryType, other.queryType);\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n    }\n    lastComparison = java.lang.Boolean.valueOf(isSetQuerySource()).compareTo(other.isSetQuerySource());\n    if (lastComparison != 0) {\n      return lastComparison;\n    }\n    if (isSetQuerySource()) {\n      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.querySource, other.querySource);\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n    }\n    lastComparison = java.lang.Boolean.valueOf(isSetTimeInterval()).compareTo(other.isSetTimeInterval());\n    if (lastComparison != 0) {\n      return lastComparison;\n    }\n    if (isSetTimeInterval()) {\n      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.timeInterval, other.timeInterval);\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n    }\n    lastComparison = java.lang.Boolean.valueOf(isSetDuration()).compareTo(other.isSetDuration());\n    if (lastComparison != 0) {\n      return lastComparison;\n    }\n    if (isSetDuration()) {\n      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.duration, other.duration);\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n    }\n    lastComparison = java.lang.Boolean.valueOf(isSetFilterQuery()).compareTo(other.isSetFilterQuery());\n    if (lastComparison != 0) {\n      return lastComparison;\n    }\n    if (isSetFilterQuery()) {\n      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.filterQuery, other.filterQuery);\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n    }\n    lastComparison = java.lang.Boolean.valueOf(isSetAggregationsInfo()).compareTo(other.isSetAggregationsInfo());\n    if (lastComparison != 0) {\n      return lastComparison;\n    }\n    if (isSetAggregationsInfo()) {\n      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.aggregationsInfo, other.aggregationsInfo);\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n    }\n    lastComparison = java.lang.Boolean.valueOf(isSetGroupBy()).compareTo(other.isSetGroupBy());\n    if (lastComparison != 0) {\n      return lastComparison;\n    }\n    if (isSetGroupBy()) {\n      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.groupBy, other.groupBy);\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n    }\n    lastComparison = java.lang.Boolean.valueOf(isSetSelections()).compareTo(other.isSetSelections());\n    if (lastComparison != 0) {\n      return lastComparison;\n    }\n    if (isSetSelections()) {\n      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.selections, other.selections);\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n    }\n    lastComparison = java.lang.Boolean.valueOf(isSetFilterSubQueryMap()).compareTo(other.isSetFilterSubQueryMap());\n    if (lastComparison != 0) {\n      return lastComparison;\n    }\n    if (isSetFilterSubQueryMap()) {\n      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.filterSubQueryMap, other.filterSubQueryMap);\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n    }\n    lastComparison = java.lang.Boolean.valueOf(isSetBucketHashKey()).compareTo(other.isSetBucketHashKey());\n    if (lastComparison != 0) {\n      return lastComparison;\n    }\n    if (isSetBucketHashKey()) {\n      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.bucketHashKey, other.bucketHashKey);\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n    }\n    lastComparison = java.lang.Boolean.valueOf(isSetEnableTrace()).compareTo(other.isSetEnableTrace());\n    if (lastComparison != 0) {\n      return lastComparison;\n    }\n    if (isSetEnableTrace()) {\n      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.enableTrace, other.enableTrace);\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n    }\n    lastComparison = java.lang.Boolean.valueOf(isSetResponseFormat()).compareTo(other.isSetResponseFormat());\n    if (lastComparison != 0) {\n      return lastComparison;\n    }\n    if (isSetResponseFormat()) {\n      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.responseFormat, other.responseFormat);\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n    }\n    lastComparison = java.lang.Boolean.valueOf(isSetDebugOptions()).compareTo(other.isSetDebugOptions());\n    if (lastComparison != 0) {\n      return lastComparison;\n    }\n    if (isSetDebugOptions()) {\n      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.debugOptions, other.debugOptions);\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n    }\n    lastComparison = java.lang.Boolean.valueOf(isSetQueryOptions()).compareTo(other.isSetQueryOptions());\n    if (lastComparison != 0) {\n      return lastComparison;\n    }\n    if (isSetQueryOptions()) {\n      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.queryOptions, other.queryOptions);\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n    }\n    lastComparison = java.lang.Boolean.valueOf(isSetHavingFilterQuery()).compareTo(other.isSetHavingFilterQuery());\n    if (lastComparison != 0) {\n      return lastComparison;\n    }\n    if (isSetHavingFilterQuery()) {\n      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.havingFilterQuery, other.havingFilterQuery);\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n    }\n    lastComparison = java.lang.Boolean.valueOf(isSetHavingFilterSubQueryMap()).compareTo(other.isSetHavingFilterSubQueryMap());\n    if (lastComparison != 0) {\n      return lastComparison;\n    }\n    if (isSetHavingFilterSubQueryMap()) {\n      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.havingFilterSubQueryMap, other.havingFilterSubQueryMap);\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n    }\n    lastComparison = java.lang.Boolean.valueOf(isSetPinotQuery()).compareTo(other.isSetPinotQuery());\n    if (lastComparison != 0) {\n      return lastComparison;\n    }\n    if (isSetPinotQuery()) {\n      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.pinotQuery, other.pinotQuery);\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n    }\n    lastComparison = java.lang.Boolean.valueOf(isSetOrderBy()).compareTo(other.isSetOrderBy());\n    if (lastComparison != 0) {\n      return lastComparison;\n    }\n    if (isSetOrderBy()) {\n      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.orderBy, other.orderBy);\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n    }\n    lastComparison = java.lang.Boolean.valueOf(isSetLimit()).compareTo(other.isSetLimit());\n    if (lastComparison != 0) {\n      return lastComparison;\n    }\n    if (isSetLimit()) {\n      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.limit, other.limit);\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n    }\n    return 0;\n  }\n","date":"2019-09-25 01:20:45","endLine":1620,"groupId":"101202","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"compareTo","params":"(BrokerRequestother)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-pinot-10-0.7/blobInfo/CC_OUT/blobs/f3/ff93a6454d827115a020603d8d652ecb4399a3.src","preCode":"  public int compareTo(BrokerRequest other) {\n    if (!getClass().equals(other.getClass())) {\n      return getClass().getName().compareTo(other.getClass().getName());\n    }\n\n    int lastComparison = 0;\n\n    lastComparison = java.lang.Boolean.valueOf(isSetQueryType()).compareTo(other.isSetQueryType());\n    if (lastComparison != 0) {\n      return lastComparison;\n    }\n    if (isSetQueryType()) {\n      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.queryType, other.queryType);\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n    }\n    lastComparison = java.lang.Boolean.valueOf(isSetQuerySource()).compareTo(other.isSetQuerySource());\n    if (lastComparison != 0) {\n      return lastComparison;\n    }\n    if (isSetQuerySource()) {\n      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.querySource, other.querySource);\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n    }\n    lastComparison = java.lang.Boolean.valueOf(isSetTimeInterval()).compareTo(other.isSetTimeInterval());\n    if (lastComparison != 0) {\n      return lastComparison;\n    }\n    if (isSetTimeInterval()) {\n      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.timeInterval, other.timeInterval);\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n    }\n    lastComparison = java.lang.Boolean.valueOf(isSetDuration()).compareTo(other.isSetDuration());\n    if (lastComparison != 0) {\n      return lastComparison;\n    }\n    if (isSetDuration()) {\n      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.duration, other.duration);\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n    }\n    lastComparison = java.lang.Boolean.valueOf(isSetFilterQuery()).compareTo(other.isSetFilterQuery());\n    if (lastComparison != 0) {\n      return lastComparison;\n    }\n    if (isSetFilterQuery()) {\n      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.filterQuery, other.filterQuery);\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n    }\n    lastComparison = java.lang.Boolean.valueOf(isSetAggregationsInfo()).compareTo(other.isSetAggregationsInfo());\n    if (lastComparison != 0) {\n      return lastComparison;\n    }\n    if (isSetAggregationsInfo()) {\n      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.aggregationsInfo, other.aggregationsInfo);\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n    }\n    lastComparison = java.lang.Boolean.valueOf(isSetGroupBy()).compareTo(other.isSetGroupBy());\n    if (lastComparison != 0) {\n      return lastComparison;\n    }\n    if (isSetGroupBy()) {\n      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.groupBy, other.groupBy);\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n    }\n    lastComparison = java.lang.Boolean.valueOf(isSetSelections()).compareTo(other.isSetSelections());\n    if (lastComparison != 0) {\n      return lastComparison;\n    }\n    if (isSetSelections()) {\n      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.selections, other.selections);\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n    }\n    lastComparison = java.lang.Boolean.valueOf(isSetFilterSubQueryMap()).compareTo(other.isSetFilterSubQueryMap());\n    if (lastComparison != 0) {\n      return lastComparison;\n    }\n    if (isSetFilterSubQueryMap()) {\n      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.filterSubQueryMap, other.filterSubQueryMap);\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n    }\n    lastComparison = java.lang.Boolean.valueOf(isSetBucketHashKey()).compareTo(other.isSetBucketHashKey());\n    if (lastComparison != 0) {\n      return lastComparison;\n    }\n    if (isSetBucketHashKey()) {\n      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.bucketHashKey, other.bucketHashKey);\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n    }\n    lastComparison = java.lang.Boolean.valueOf(isSetEnableTrace()).compareTo(other.isSetEnableTrace());\n    if (lastComparison != 0) {\n      return lastComparison;\n    }\n    if (isSetEnableTrace()) {\n      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.enableTrace, other.enableTrace);\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n    }\n    lastComparison = java.lang.Boolean.valueOf(isSetResponseFormat()).compareTo(other.isSetResponseFormat());\n    if (lastComparison != 0) {\n      return lastComparison;\n    }\n    if (isSetResponseFormat()) {\n      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.responseFormat, other.responseFormat);\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n    }\n    lastComparison = java.lang.Boolean.valueOf(isSetDebugOptions()).compareTo(other.isSetDebugOptions());\n    if (lastComparison != 0) {\n      return lastComparison;\n    }\n    if (isSetDebugOptions()) {\n      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.debugOptions, other.debugOptions);\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n    }\n    lastComparison = java.lang.Boolean.valueOf(isSetQueryOptions()).compareTo(other.isSetQueryOptions());\n    if (lastComparison != 0) {\n      return lastComparison;\n    }\n    if (isSetQueryOptions()) {\n      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.queryOptions, other.queryOptions);\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n    }\n    lastComparison = java.lang.Boolean.valueOf(isSetHavingFilterQuery()).compareTo(other.isSetHavingFilterQuery());\n    if (lastComparison != 0) {\n      return lastComparison;\n    }\n    if (isSetHavingFilterQuery()) {\n      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.havingFilterQuery, other.havingFilterQuery);\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n    }\n    lastComparison = java.lang.Boolean.valueOf(isSetHavingFilterSubQueryMap()).compareTo(other.isSetHavingFilterSubQueryMap());\n    if (lastComparison != 0) {\n      return lastComparison;\n    }\n    if (isSetHavingFilterSubQueryMap()) {\n      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.havingFilterSubQueryMap, other.havingFilterSubQueryMap);\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n    }\n    lastComparison = java.lang.Boolean.valueOf(isSetPinotQuery()).compareTo(other.isSetPinotQuery());\n    if (lastComparison != 0) {\n      return lastComparison;\n    }\n    if (isSetPinotQuery()) {\n      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.pinotQuery, other.pinotQuery);\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n    }\n    lastComparison = java.lang.Boolean.valueOf(isSetOrderBy()).compareTo(other.isSetOrderBy());\n    if (lastComparison != 0) {\n      return lastComparison;\n    }\n    if (isSetOrderBy()) {\n      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.orderBy, other.orderBy);\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n    }\n    lastComparison = java.lang.Boolean.valueOf(isSetLimit()).compareTo(other.isSetLimit());\n    if (lastComparison != 0) {\n      return lastComparison;\n    }\n    if (isSetLimit()) {\n      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.limit, other.limit);\n      if (lastComparison != 0) {\n        return lastComparison;\n      }\n    }\n    return 0;\n  }\n","realPath":"pinot-common/src/main/java/org/apache/pinot/common/request/BrokerRequest.java","repoName":"pinot","snippetEndLine":0,"snippetStartLine":0,"startLine":1422,"status":"N"}],"commitId":"bd79861e7bca87406fc184ec70ce504667f76daf","commitMessage":"@@@Issue 5261: Support AggregationFunctions with multiple arguments (contd). (#5275)\n\nThis PR is a continuation of https://github.com/apache/incubator-pinot/pull/5259\nto address the issue https://github.com/apache/incubator-pinot/issues/5261.\n\n1. Added new field in request.thrift `aggregationFunctionArgs` as a list of String\n   arguments for the aggregation funciton.\n   - Could not use the existing `aggregationParams` as it is a Map.  and functions with\n     variable arguments may not provide a name for the arg (to be used as key in Map).\n   - Maintain backward compatibility by first check for the new field.  and fall back to\n     the existing one if it does not exist.\n\n2. Ensure that all calls to the old AggregationInfo.getAggregationParams() is replaced\n   with backward compatible AgguregationFunctionUtils.getAggregationArgs().\n\n3. Since most aggregation functions today have just one argument.  added a separate api\n   AggregationFuncitonContext.getFirstArgument() as an optimization.\n\n4. Cleaned up getColumnName() and getResultColumnName() api's in AggregationFunctionContext\n   class to not require the column name argument.  as this is already stored in the\n   AggregationFunction.\n\n5. Modified all tests to use aggregationFunctionArgs instead of aggregationParams.\n\nTODO:\nRemove the AggregationFunctionContext class as AggregationFunctions now store their arguments. \nand this class no longer provides any additional value.","date":"2020-04-20 07:51:21","modifiedFileCount":"52","status":"M","submitter":"Mayank Shrivastava"}]
