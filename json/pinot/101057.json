[{"authorTime":"2020-08-12 08:06:24","codes":[{"authorDate":"2020-02-25 04:51:09","commitOrder":3,"curCode":"  public String getBrokerHealth() {\n    ServiceStatus.Status status = ServiceStatus.getServiceStatus();\n    if (status == ServiceStatus.Status.GOOD) {\n      brokerMetrics.addMeteredGlobalValue(BrokerMeter.HEALTHCHECK_OK_CALLS, 1);\n      return \"OK\";\n    }\n    brokerMetrics.addMeteredGlobalValue(BrokerMeter.HEALTHCHECK_BAD_CALLS, 1);\n    throw new WebApplicationException(String.format(\"Pinot broker status is %s\", status),\n        Response.Status.SERVICE_UNAVAILABLE);\n  }\n","date":"2020-02-25 04:51:09","endLine":58,"groupId":"10806","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"getBrokerHealth","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-pinot-10-0.7/blobInfo/CC_OUT/blobs/75/e53ab76b984f01aa58e179dd7afc66a051d48f.src","preCode":"  public String getBrokerHealth() {\n    ServiceStatus.Status status = ServiceStatus.getServiceStatus();\n    if (status == ServiceStatus.Status.GOOD) {\n      brokerMetrics.addMeteredGlobalValue(BrokerMeter.HEALTHCHECK_OK_CALLS, 1);\n      return \"OK\";\n    }\n    brokerMetrics.addMeteredGlobalValue(BrokerMeter.HEALTHCHECK_BAD_CALLS, 1);\n    throw new WebApplicationException(String.format(\"Pinot broker status is %s\", status),\n        Response.Status.SERVICE_UNAVAILABLE);\n  }\n","realPath":"pinot-broker/src/main/java/org/apache/pinot/broker/api/resources/PinotBrokerHealthCheck.java","repoName":"pinot","snippetEndLine":0,"snippetStartLine":0,"startLine":49,"status":"NB"},{"authorDate":"2020-08-12 08:06:24","commitOrder":3,"curCode":"  public String checkHealth() {\n    ServiceStatus.Status status = ServiceStatus.getServiceStatus();\n    if (status == ServiceStatus.Status.GOOD) {\n      controllerMetrics.addMeteredGlobalValue(ControllerMeter.HEALTHCHECK_OK_CALLS, 1);\n      return \"OK\";\n    }\n    controllerMetrics.addMeteredGlobalValue(ControllerMeter.HEALTHCHECK_BAD_CALLS, 1);\n    throw new WebApplicationException(String.format(\"Pinot broker status is %s\", status),\n        Response.Status.SERVICE_UNAVAILABLE);\n  }\n","date":"2020-08-12 08:06:24","endLine":75,"groupId":"10806","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"checkHealth","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-pinot-10-0.7/blobInfo/CC_OUT/blobs/d8/44989089b33cd5edd777f900b49e950c8707a4.src","preCode":"  public String checkHealth() {\n    ServiceStatus.Status status = ServiceStatus.getServiceStatus();\n    if (status == ServiceStatus.Status.GOOD) {\n      controllerMetrics.addMeteredGlobalValue(ControllerMeter.HEALTHCHECK_OK_CALLS, 1);\n      return \"OK\";\n    }\n    controllerMetrics.addMeteredGlobalValue(ControllerMeter.HEALTHCHECK_BAD_CALLS, 1);\n    throw new WebApplicationException(String.format(\"Pinot broker status is %s\", status),\n        Response.Status.SERVICE_UNAVAILABLE);\n  }\n","realPath":"pinot-controller/src/main/java/org/apache/pinot/controller/api/resources/PinotControllerHealthCheck.java","repoName":"pinot","snippetEndLine":0,"snippetStartLine":0,"startLine":66,"status":"B"}],"commitId":"db48107e1e13e26f91da038ca8c2c2174b1ac5b3","commitMessage":"@@@Adding controller healthcheck endpoint: /health (#5846)\n\n* Adding /health endpoint in pinot controller\n\n* Adding controller health check endpoint","date":"2020-08-12 08:06:24","modifiedFileCount":"2","status":"M","submitter":"Xiang Fu"},{"authorTime":"2021-08-21 17:02:19","codes":[{"authorDate":"2020-02-25 04:51:09","commitOrder":4,"curCode":"  public String getBrokerHealth() {\n    ServiceStatus.Status status = ServiceStatus.getServiceStatus();\n    if (status == ServiceStatus.Status.GOOD) {\n      brokerMetrics.addMeteredGlobalValue(BrokerMeter.HEALTHCHECK_OK_CALLS, 1);\n      return \"OK\";\n    }\n    brokerMetrics.addMeteredGlobalValue(BrokerMeter.HEALTHCHECK_BAD_CALLS, 1);\n    throw new WebApplicationException(String.format(\"Pinot broker status is %s\", status),\n        Response.Status.SERVICE_UNAVAILABLE);\n  }\n","date":"2020-02-25 04:51:09","endLine":58,"groupId":"10806","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"getBrokerHealth","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-pinot-10-0.7/blobInfo/CC_OUT/blobs/75/e53ab76b984f01aa58e179dd7afc66a051d48f.src","preCode":"  public String getBrokerHealth() {\n    ServiceStatus.Status status = ServiceStatus.getServiceStatus();\n    if (status == ServiceStatus.Status.GOOD) {\n      brokerMetrics.addMeteredGlobalValue(BrokerMeter.HEALTHCHECK_OK_CALLS, 1);\n      return \"OK\";\n    }\n    brokerMetrics.addMeteredGlobalValue(BrokerMeter.HEALTHCHECK_BAD_CALLS, 1);\n    throw new WebApplicationException(String.format(\"Pinot broker status is %s\", status),\n        Response.Status.SERVICE_UNAVAILABLE);\n  }\n","realPath":"pinot-broker/src/main/java/org/apache/pinot/broker/api/resources/PinotBrokerHealthCheck.java","repoName":"pinot","snippetEndLine":0,"snippetStartLine":0,"startLine":49,"status":"N"},{"authorDate":"2021-08-21 17:02:19","commitOrder":4,"curCode":"  public String checkHealth() {\n    ServiceStatus.Status status = ServiceStatus.getServiceStatus();\n    if (status == ServiceStatus.Status.GOOD) {\n      _controllerMetrics.addMeteredGlobalValue(ControllerMeter.HEALTHCHECK_OK_CALLS, 1);\n      return \"OK\";\n    }\n    _controllerMetrics.addMeteredGlobalValue(ControllerMeter.HEALTHCHECK_BAD_CALLS, 1);\n    throw new WebApplicationException(String.format(\"Pinot broker status is %s\", status),\n        Response.Status.SERVICE_UNAVAILABLE);\n  }\n","date":"2021-08-21 17:02:19","endLine":75,"groupId":"10806","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"checkHealth","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-pinot-10-0.7/blobInfo/CC_OUT/blobs/90/1829f698c283db768756da9e577ce37e328520.src","preCode":"  public String checkHealth() {\n    ServiceStatus.Status status = ServiceStatus.getServiceStatus();\n    if (status == ServiceStatus.Status.GOOD) {\n      controllerMetrics.addMeteredGlobalValue(ControllerMeter.HEALTHCHECK_OK_CALLS, 1);\n      return \"OK\";\n    }\n    controllerMetrics.addMeteredGlobalValue(ControllerMeter.HEALTHCHECK_BAD_CALLS, 1);\n    throw new WebApplicationException(String.format(\"Pinot broker status is %s\", status),\n        Response.Status.SERVICE_UNAVAILABLE);\n  }\n","realPath":"pinot-controller/src/main/java/org/apache/pinot/controller/api/resources/PinotControllerHealthCheck.java","repoName":"pinot","snippetEndLine":0,"snippetStartLine":0,"startLine":66,"status":"M"}],"commitId":"bb34406aaa205f5c85b88c928d477fd267eda1b4","commitMessage":"@@@reformat pinot-controller (#7331)\n\n","date":"2021-08-21 17:02:19","modifiedFileCount":"151","status":"M","submitter":"Xiang Fu"},{"authorTime":"2021-08-21 17:02:19","codes":[{"authorDate":"2021-08-24 02:24:27","commitOrder":5,"curCode":"  public String getBrokerHealth() {\n    ServiceStatus.Status status = ServiceStatus.getServiceStatus();\n    if (status == ServiceStatus.Status.GOOD) {\n      _brokerMetrics.addMeteredGlobalValue(BrokerMeter.HEALTHCHECK_OK_CALLS, 1);\n      return \"OK\";\n    }\n    _brokerMetrics.addMeteredGlobalValue(BrokerMeter.HEALTHCHECK_BAD_CALLS, 1);\n    throw new WebApplicationException(String.format(\"Pinot broker status is %s\", status),\n        Response.Status.SERVICE_UNAVAILABLE);\n  }\n","date":"2021-08-24 02:24:27","endLine":61,"groupId":"101057","id":5,"instanceNumber":1,"isCurCommit":1,"methodName":"getBrokerHealth","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-pinot-10-0.7/blobInfo/CC_OUT/blobs/f9/8ecbe7bf54ae9bf12f266405d3e4b99a530d0d.src","preCode":"  public String getBrokerHealth() {\n    ServiceStatus.Status status = ServiceStatus.getServiceStatus();\n    if (status == ServiceStatus.Status.GOOD) {\n      brokerMetrics.addMeteredGlobalValue(BrokerMeter.HEALTHCHECK_OK_CALLS, 1);\n      return \"OK\";\n    }\n    brokerMetrics.addMeteredGlobalValue(BrokerMeter.HEALTHCHECK_BAD_CALLS, 1);\n    throw new WebApplicationException(String.format(\"Pinot broker status is %s\", status),\n        Response.Status.SERVICE_UNAVAILABLE);\n  }\n","realPath":"pinot-broker/src/main/java/org/apache/pinot/broker/api/resources/PinotBrokerHealthCheck.java","repoName":"pinot","snippetEndLine":0,"snippetStartLine":0,"startLine":52,"status":"M"},{"authorDate":"2021-08-21 17:02:19","commitOrder":5,"curCode":"  public String checkHealth() {\n    ServiceStatus.Status status = ServiceStatus.getServiceStatus();\n    if (status == ServiceStatus.Status.GOOD) {\n      _controllerMetrics.addMeteredGlobalValue(ControllerMeter.HEALTHCHECK_OK_CALLS, 1);\n      return \"OK\";\n    }\n    _controllerMetrics.addMeteredGlobalValue(ControllerMeter.HEALTHCHECK_BAD_CALLS, 1);\n    throw new WebApplicationException(String.format(\"Pinot broker status is %s\", status),\n        Response.Status.SERVICE_UNAVAILABLE);\n  }\n","date":"2021-08-21 17:02:19","endLine":75,"groupId":"101057","id":6,"instanceNumber":2,"isCurCommit":1,"methodName":"checkHealth","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-pinot-10-0.7/blobInfo/CC_OUT/blobs/90/1829f698c283db768756da9e577ce37e328520.src","preCode":"  public String checkHealth() {\n    ServiceStatus.Status status = ServiceStatus.getServiceStatus();\n    if (status == ServiceStatus.Status.GOOD) {\n      _controllerMetrics.addMeteredGlobalValue(ControllerMeter.HEALTHCHECK_OK_CALLS, 1);\n      return \"OK\";\n    }\n    _controllerMetrics.addMeteredGlobalValue(ControllerMeter.HEALTHCHECK_BAD_CALLS, 1);\n    throw new WebApplicationException(String.format(\"Pinot broker status is %s\", status),\n        Response.Status.SERVICE_UNAVAILABLE);\n  }\n","realPath":"pinot-controller/src/main/java/org/apache/pinot/controller/api/resources/PinotControllerHealthCheck.java","repoName":"pinot","snippetEndLine":0,"snippetStartLine":0,"startLine":66,"status":"N"}],"commitId":"2fddf2864ce067d1891b6322cef50d40dd7576d2","commitMessage":"@@@fixing code styling for pinot-broker (#7333)\n\n* reformat pinot-broker\n\n* rename package","date":"2021-08-24 02:24:27","modifiedFileCount":"11","status":"M","submitter":"Xiang Fu"}]
