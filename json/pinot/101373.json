[{"authorTime":"2019-01-12 01:43:41","codes":[{"authorDate":"2019-01-12 01:43:41","commitOrder":1,"curCode":"  public static String sendPostRequest(String urlString, String payload) throws IOException {\n    HttpURLConnection httpConnection = (HttpURLConnection) new URL(urlString).openConnection();\n    httpConnection.setRequestMethod(\"POST\");\n\n    if (payload != null && !payload.isEmpty()) {\n      httpConnection.setDoOutput(true);\n      try (BufferedWriter writer = new BufferedWriter(\n          new OutputStreamWriter(httpConnection.getOutputStream(), \"UTF-8\"))) {\n        writer.write(payload, 0, payload.length());\n        writer.flush();\n      }\n    }\n\n    return constructResponse(httpConnection.getInputStream());\n  }\n","date":"2019-01-12 01:43:41","endLine":196,"groupId":"7457","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"sendPostRequest","params":"(StringurlString@Stringpayload)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-pinot-10-0.7/blobInfo/CC_OUT/blobs/7c/05d92a11ab08cbd795c5537b3e583f433b6595.src","preCode":"  public static String sendPostRequest(String urlString, String payload) throws IOException {\n    HttpURLConnection httpConnection = (HttpURLConnection) new URL(urlString).openConnection();\n    httpConnection.setRequestMethod(\"POST\");\n\n    if (payload != null && !payload.isEmpty()) {\n      httpConnection.setDoOutput(true);\n      try (BufferedWriter writer = new BufferedWriter(\n          new OutputStreamWriter(httpConnection.getOutputStream(), \"UTF-8\"))) {\n        writer.write(payload, 0, payload.length());\n        writer.flush();\n      }\n    }\n\n    return constructResponse(httpConnection.getInputStream());\n  }\n","realPath":"pinot-controller/src/test/java/org/apache/pinot/controller/helix/ControllerTest.java","repoName":"pinot","snippetEndLine":0,"snippetStartLine":0,"startLine":182,"status":"B"},{"authorDate":"2019-01-12 01:43:41","commitOrder":1,"curCode":"  public static String sendPutRequest(String urlString, String payload) throws IOException {\n    HttpURLConnection httpConnection = (HttpURLConnection) new URL(urlString).openConnection();\n    httpConnection.setDoOutput(true);\n    httpConnection.setRequestMethod(\"PUT\");\n\n    try (\n        BufferedWriter writer = new BufferedWriter(new OutputStreamWriter(httpConnection.getOutputStream(), \"UTF-8\"))) {\n      writer.write(payload);\n      writer.flush();\n    }\n\n    return constructResponse(httpConnection.getInputStream());\n  }\n","date":"2019-01-12 01:43:41","endLine":210,"groupId":"13232","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"sendPutRequest","params":"(StringurlString@Stringpayload)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-pinot-10-0.7/blobInfo/CC_OUT/blobs/7c/05d92a11ab08cbd795c5537b3e583f433b6595.src","preCode":"  public static String sendPutRequest(String urlString, String payload) throws IOException {\n    HttpURLConnection httpConnection = (HttpURLConnection) new URL(urlString).openConnection();\n    httpConnection.setDoOutput(true);\n    httpConnection.setRequestMethod(\"PUT\");\n\n    try (\n        BufferedWriter writer = new BufferedWriter(new OutputStreamWriter(httpConnection.getOutputStream(), \"UTF-8\"))) {\n      writer.write(payload);\n      writer.flush();\n    }\n\n    return constructResponse(httpConnection.getInputStream());\n  }\n","realPath":"pinot-controller/src/test/java/org/apache/pinot/controller/helix/ControllerTest.java","repoName":"pinot","snippetEndLine":0,"snippetStartLine":0,"startLine":198,"status":"B"}],"commitId":"b497851f3406b72b7f36596c362e1fcbcb4a162a","commitMessage":"@@@Move all files in com.linkedin to org.apache (#3680)\n\n","date":"2019-01-12 01:43:41","modifiedFileCount":"0","status":"B","submitter":"Neha Pawar"},{"authorTime":"2019-07-30 09:50:18","codes":[{"authorDate":"2019-07-30 09:50:18","commitOrder":2,"curCode":"  public static String sendPostRequest(String urlString, String payload)\n      throws IOException {\n    HttpURLConnection httpConnection = (HttpURLConnection) new URL(urlString).openConnection();\n    httpConnection.setRequestMethod(\"POST\");\n\n    if (payload != null && !payload.isEmpty()) {\n      httpConnection.setDoOutput(true);\n      try (BufferedWriter writer = new BufferedWriter(\n          new OutputStreamWriter(httpConnection.getOutputStream(), StandardCharsets.UTF_8))) {\n        writer.write(payload, 0, payload.length());\n        writer.flush();\n      }\n    }\n\n    return constructResponse(httpConnection.getInputStream());\n  }\n","date":"2019-07-30 09:50:18","endLine":468,"groupId":"6019","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"sendPostRequest","params":"(StringurlString@Stringpayload)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-pinot-10-0.7/blobInfo/CC_OUT/blobs/ab/1ea56b388e3f2bffdb2b53220ab6b5437ed1a1.src","preCode":"  public static String sendPostRequest(String urlString, String payload)\n      throws IOException {\n    HttpURLConnection httpConnection = (HttpURLConnection) new URL(urlString).openConnection();\n    httpConnection.setRequestMethod(\"POST\");\n\n    if (payload != null && !payload.isEmpty()) {\n      httpConnection.setDoOutput(true);\n      try (BufferedWriter writer = new BufferedWriter(\n          new OutputStreamWriter(httpConnection.getOutputStream(), \"UTF-8\"))) {\n        writer.write(payload, 0, payload.length());\n        writer.flush();\n      }\n    }\n\n    return constructResponse(httpConnection.getInputStream());\n  }\n","realPath":"pinot-controller/src/test/java/org/apache/pinot/controller/helix/ControllerTest.java","repoName":"pinot","snippetEndLine":0,"snippetStartLine":0,"startLine":453,"status":"M"},{"authorDate":"2019-07-30 09:50:18","commitOrder":2,"curCode":"  public static String sendPutRequest(String urlString, String payload)\n      throws IOException {\n    HttpURLConnection httpConnection = (HttpURLConnection) new URL(urlString).openConnection();\n    httpConnection.setDoOutput(true);\n    httpConnection.setRequestMethod(\"PUT\");\n\n    try (BufferedWriter writer = new BufferedWriter(\n        new OutputStreamWriter(httpConnection.getOutputStream(), StandardCharsets.UTF_8))) {\n      writer.write(payload);\n      writer.flush();\n    }\n\n    return constructResponse(httpConnection.getInputStream());\n  }\n","date":"2019-07-30 09:50:18","endLine":483,"groupId":"13232","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"sendPutRequest","params":"(StringurlString@Stringpayload)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-pinot-10-0.7/blobInfo/CC_OUT/blobs/ab/1ea56b388e3f2bffdb2b53220ab6b5437ed1a1.src","preCode":"  public static String sendPutRequest(String urlString, String payload)\n      throws IOException {\n    HttpURLConnection httpConnection = (HttpURLConnection) new URL(urlString).openConnection();\n    httpConnection.setDoOutput(true);\n    httpConnection.setRequestMethod(\"PUT\");\n\n    try (\n        BufferedWriter writer = new BufferedWriter(new OutputStreamWriter(httpConnection.getOutputStream(), \"UTF-8\"))) {\n      writer.write(payload);\n      writer.flush();\n    }\n\n    return constructResponse(httpConnection.getInputStream());\n  }\n","realPath":"pinot-controller/src/test/java/org/apache/pinot/controller/helix/ControllerTest.java","repoName":"pinot","snippetEndLine":0,"snippetStartLine":0,"startLine":470,"status":"M"}],"commitId":"93166101f7d1d97c6042f519c2b019106361268b","commitMessage":"@@@Clean up test utils.  disconnect fake instances (#4476)\n\n- Remove redundant util classes\n- Move controller test related methods into ControllerTest for easier usage\n- Disconnect fake instances created in the test\n- Update state model to include the missing transitions\n- Fix the flakiness in ValidationManagerTest\n- No change for the test logic","date":"2019-07-30 09:50:18","modifiedFileCount":"23","status":"M","submitter":"Xiaotian (Jackie) Jiang"},{"authorTime":"2019-07-30 09:50:18","codes":[{"authorDate":"2019-09-25 14:50:02","commitOrder":3,"curCode":"  public static String sendPostRequest(String urlString, String payload, Map<String, String> headers)\n      throws IOException {\n    HttpURLConnection httpConnection = (HttpURLConnection) new URL(urlString).openConnection();\n    httpConnection.setRequestMethod(\"POST\");\n    if (headers != null) {\n      for (String key : headers.keySet()) {\n        httpConnection.setRequestProperty(key, headers.get(key));\n      }\n    }\n\n    if (payload != null && !payload.isEmpty()) {\n      httpConnection.setDoOutput(true);\n      try (BufferedWriter writer = new BufferedWriter(\n          new OutputStreamWriter(httpConnection.getOutputStream(), StandardCharsets.UTF_8))) {\n        writer.write(payload, 0, payload.length());\n        writer.flush();\n      }\n    }\n\n    return constructResponse(httpConnection.getInputStream());\n  }\n","date":"2019-09-25 14:50:02","endLine":493,"groupId":"6019","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"sendPostRequest","params":"(StringurlString@Stringpayload@Map<String@String>headers)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-pinot-10-0.7/blobInfo/CC_OUT/blobs/4c/e7ce1b7ba4bf75a5bf63e13fb750723adaabd2.src","preCode":"  public static String sendPostRequest(String urlString, String payload)\n      throws IOException {\n    HttpURLConnection httpConnection = (HttpURLConnection) new URL(urlString).openConnection();\n    httpConnection.setRequestMethod(\"POST\");\n\n    if (payload != null && !payload.isEmpty()) {\n      httpConnection.setDoOutput(true);\n      try (BufferedWriter writer = new BufferedWriter(\n          new OutputStreamWriter(httpConnection.getOutputStream(), StandardCharsets.UTF_8))) {\n        writer.write(payload, 0, payload.length());\n        writer.flush();\n      }\n    }\n\n    return constructResponse(httpConnection.getInputStream());\n  }\n","realPath":"pinot-controller/src/test/java/org/apache/pinot/controller/helix/ControllerTest.java","repoName":"pinot","snippetEndLine":0,"snippetStartLine":0,"startLine":473,"status":"M"},{"authorDate":"2019-07-30 09:50:18","commitOrder":3,"curCode":"  public static String sendPutRequest(String urlString, String payload)\n      throws IOException {\n    HttpURLConnection httpConnection = (HttpURLConnection) new URL(urlString).openConnection();\n    httpConnection.setDoOutput(true);\n    httpConnection.setRequestMethod(\"PUT\");\n\n    try (BufferedWriter writer = new BufferedWriter(\n        new OutputStreamWriter(httpConnection.getOutputStream(), StandardCharsets.UTF_8))) {\n      writer.write(payload);\n      writer.flush();\n    }\n\n    return constructResponse(httpConnection.getInputStream());\n  }\n","date":"2019-07-30 09:50:18","endLine":483,"groupId":"13232","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"sendPutRequest","params":"(StringurlString@Stringpayload)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-pinot-10-0.7/blobInfo/CC_OUT/blobs/ab/1ea56b388e3f2bffdb2b53220ab6b5437ed1a1.src","preCode":"  public static String sendPutRequest(String urlString, String payload)\n      throws IOException {\n    HttpURLConnection httpConnection = (HttpURLConnection) new URL(urlString).openConnection();\n    httpConnection.setDoOutput(true);\n    httpConnection.setRequestMethod(\"PUT\");\n\n    try (BufferedWriter writer = new BufferedWriter(\n        new OutputStreamWriter(httpConnection.getOutputStream(), StandardCharsets.UTF_8))) {\n      writer.write(payload);\n      writer.flush();\n    }\n\n    return constructResponse(httpConnection.getInputStream());\n  }\n","realPath":"pinot-controller/src/test/java/org/apache/pinot/controller/helix/ControllerTest.java","repoName":"pinot","snippetEndLine":0,"snippetStartLine":0,"startLine":470,"status":"N"}],"commitId":"4c4800bf65413105ecf0fde7c189f3378dfa0d3a","commitMessage":"@@@Support HTTP POST/PUT JSON schema (#4639)\n\n* Support HTTP POST JSON schema\n\n* address comments\n","date":"2019-09-25 14:50:02","modifiedFileCount":"3","status":"M","submitter":"Xiang Fu"},{"authorTime":"2021-03-30 03:38:42","codes":[{"authorDate":"2019-09-25 14:50:02","commitOrder":4,"curCode":"  public static String sendPostRequest(String urlString, String payload, Map<String, String> headers)\n      throws IOException {\n    HttpURLConnection httpConnection = (HttpURLConnection) new URL(urlString).openConnection();\n    httpConnection.setRequestMethod(\"POST\");\n    if (headers != null) {\n      for (String key : headers.keySet()) {\n        httpConnection.setRequestProperty(key, headers.get(key));\n      }\n    }\n\n    if (payload != null && !payload.isEmpty()) {\n      httpConnection.setDoOutput(true);\n      try (BufferedWriter writer = new BufferedWriter(\n          new OutputStreamWriter(httpConnection.getOutputStream(), StandardCharsets.UTF_8))) {\n        writer.write(payload, 0, payload.length());\n        writer.flush();\n      }\n    }\n\n    return constructResponse(httpConnection.getInputStream());\n  }\n","date":"2019-09-25 14:50:02","endLine":493,"groupId":"101373","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"sendPostRequest","params":"(StringurlString@Stringpayload@Map<String@String>headers)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-pinot-10-0.7/blobInfo/CC_OUT/blobs/4c/e7ce1b7ba4bf75a5bf63e13fb750723adaabd2.src","preCode":"  public static String sendPostRequest(String urlString, String payload, Map<String, String> headers)\n      throws IOException {\n    HttpURLConnection httpConnection = (HttpURLConnection) new URL(urlString).openConnection();\n    httpConnection.setRequestMethod(\"POST\");\n    if (headers != null) {\n      for (String key : headers.keySet()) {\n        httpConnection.setRequestProperty(key, headers.get(key));\n      }\n    }\n\n    if (payload != null && !payload.isEmpty()) {\n      httpConnection.setDoOutput(true);\n      try (BufferedWriter writer = new BufferedWriter(\n          new OutputStreamWriter(httpConnection.getOutputStream(), StandardCharsets.UTF_8))) {\n        writer.write(payload, 0, payload.length());\n        writer.flush();\n      }\n    }\n\n    return constructResponse(httpConnection.getInputStream());\n  }\n","realPath":"pinot-controller/src/test/java/org/apache/pinot/controller/helix/ControllerTest.java","repoName":"pinot","snippetEndLine":0,"snippetStartLine":0,"startLine":473,"status":"N"},{"authorDate":"2021-03-30 03:38:42","commitOrder":4,"curCode":"  public static String sendPutRequest(String urlString, String payload, Map<String, String> headers) throws IOException {\n    HttpURLConnection httpConnection = (HttpURLConnection) new URL(urlString).openConnection();\n    httpConnection.setDoOutput(true);\n    httpConnection.setRequestMethod(\"PUT\");\n    if (headers != null) {\n      for (String key : headers.keySet()) {\n        httpConnection.setRequestProperty(key, headers.get(key));\n      }\n    }\n\n    try (BufferedWriter writer = new BufferedWriter(\n        new OutputStreamWriter(httpConnection.getOutputStream(), StandardCharsets.UTF_8))) {\n      writer.write(payload);\n      writer.flush();\n    }\n\n    return constructResponse(httpConnection.getInputStream());\n  }\n","date":"2021-03-30 03:38:42","endLine":650,"groupId":"101373","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"sendPutRequest","params":"(StringurlString@Stringpayload@Map<String@String>headers)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-pinot-10-0.7/blobInfo/CC_OUT/blobs/37/6b75b80febc8182b811b1fd46dcacf39ce8466.src","preCode":"  public static String sendPutRequest(String urlString, String payload) throws IOException {\n    HttpURLConnection httpConnection = (HttpURLConnection) new URL(urlString).openConnection();\n    httpConnection.setDoOutput(true);\n    httpConnection.setRequestMethod(\"PUT\");\n\n    try (BufferedWriter writer = new BufferedWriter(\n        new OutputStreamWriter(httpConnection.getOutputStream(), StandardCharsets.UTF_8))) {\n      writer.write(payload);\n      writer.flush();\n    }\n\n    return constructResponse(httpConnection.getInputStream());\n  }\n","realPath":"pinot-controller/src/test/java/org/apache/pinot/controller/helix/ControllerTest.java","repoName":"pinot","snippetEndLine":0,"snippetStartLine":0,"startLine":633,"status":"M"}],"commitId":"89a22f097c5ff26396e58950c90d764066a56121","commitMessage":"@@@Basic Auth for pinot-controller (#6613)\n\nAdds support for token-based authentication in pinot-controller.  pinot-broker.  pinot-server.  minion.  and any associated tooling. Furthermore.  adds endpoints to manage different auth workflows via UI and provides a sample implementation using basic auth. Builds on #6507.  relates to #6435.","date":"2021-03-30 03:38:42","modifiedFileCount":"66","status":"M","submitter":"Alexander Pucher"}]
