[{"authorTime":"2013-04-25 19:45:17","codes":[{"authorDate":"2013-04-25 19:45:17","commitOrder":1,"curCode":"    public void testGetOneBuffer3Bytes() {\n        ByteBuffer bb = ByteBuffer.allocate(5);\n        bb.put(\"012\".getBytes());\n        bb.flip();\n\n        IoBuffer ioBuffer = new IoBuffer(bb);\n        assertEquals(0, ioBuffer.position());\n        assertEquals(3, ioBuffer.limit());\n\n        assertTrue(ioBuffer.hasRemaining());\n        assertEquals('0', ioBuffer.get());\n        assertTrue(ioBuffer.hasRemaining());\n        assertEquals('1', ioBuffer.get());\n        assertTrue(ioBuffer.hasRemaining());\n        assertEquals('2', ioBuffer.get());\n\n        try {\n            assertFalse(ioBuffer.hasRemaining());\n            ioBuffer.get();\n            fail();\n        } catch (BufferUnderflowException bufe) {\n            \r\n            assertEquals(3, ioBuffer.position());\n        }\n    }\n","date":"2013-04-25 19:45:17","endLine":262,"groupId":"978","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testGetOneBuffer3Bytes","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mina-10-0.7/blobInfo/CC_OUT/blobs/73/49eb80bcdd04f041bca660388e14914097259a.src","preCode":"    public void testGetOneBuffer3Bytes() {\n        ByteBuffer bb = ByteBuffer.allocate(5);\n        bb.put(\"012\".getBytes());\n        bb.flip();\n\n        IoBuffer ioBuffer = new IoBuffer(bb);\n        assertEquals(0, ioBuffer.position());\n        assertEquals(3, ioBuffer.limit());\n\n        assertTrue(ioBuffer.hasRemaining());\n        assertEquals('0', ioBuffer.get());\n        assertTrue(ioBuffer.hasRemaining());\n        assertEquals('1', ioBuffer.get());\n        assertTrue(ioBuffer.hasRemaining());\n        assertEquals('2', ioBuffer.get());\n\n        try {\n            assertFalse(ioBuffer.hasRemaining());\n            ioBuffer.get();\n            fail();\n        } catch (BufferUnderflowException bufe) {\n            \r\n            assertEquals(3, ioBuffer.position());\n        }\n    }\n","realPath":"codec/src/test/java/org/apache/mina/codec/IoBufferTest.java","repoName":"mina","snippetEndLine":0,"snippetStartLine":0,"startLine":238,"status":"B"},{"authorDate":"2013-04-25 19:45:17","commitOrder":1,"curCode":"    public void testGetTwoBuffer3Bytes() {\n        ByteBuffer bb1 = ByteBuffer.allocate(5);\n        bb1.put(\"012\".getBytes());\n        bb1.flip();\n\n        ByteBuffer bb2 = ByteBuffer.allocate(5);\n        bb2.put(\"345\".getBytes());\n        bb2.flip();\n\n        IoBuffer ioBuffer = new IoBuffer(bb1, bb2);\n\n        assertEquals(0, ioBuffer.position());\n        assertEquals(6, ioBuffer.limit());\n        assertTrue(ioBuffer.hasRemaining());\n\n        assertEquals('0', ioBuffer.get());\n        assertTrue(ioBuffer.hasRemaining());\n        assertEquals('1', ioBuffer.get());\n        assertTrue(ioBuffer.hasRemaining());\n        assertEquals('2', ioBuffer.get());\n        assertTrue(ioBuffer.hasRemaining());\n        assertEquals('3', ioBuffer.get());\n        assertTrue(ioBuffer.hasRemaining());\n        assertEquals('4', ioBuffer.get());\n        assertTrue(ioBuffer.hasRemaining());\n        assertEquals('5', ioBuffer.get());\n\n        try {\n            assertFalse(ioBuffer.hasRemaining());\n            ioBuffer.get();\n            fail();\n        } catch (BufferUnderflowException bufe) {\n            \r\n            assertEquals(6, ioBuffer.position());\n        }\n    }\n","date":"2013-04-25 19:45:17","endLine":324,"groupId":"1171","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testGetTwoBuffer3Bytes","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mina-10-0.7/blobInfo/CC_OUT/blobs/73/49eb80bcdd04f041bca660388e14914097259a.src","preCode":"    public void testGetTwoBuffer3Bytes() {\n        ByteBuffer bb1 = ByteBuffer.allocate(5);\n        bb1.put(\"012\".getBytes());\n        bb1.flip();\n\n        ByteBuffer bb2 = ByteBuffer.allocate(5);\n        bb2.put(\"345\".getBytes());\n        bb2.flip();\n\n        IoBuffer ioBuffer = new IoBuffer(bb1, bb2);\n\n        assertEquals(0, ioBuffer.position());\n        assertEquals(6, ioBuffer.limit());\n        assertTrue(ioBuffer.hasRemaining());\n\n        assertEquals('0', ioBuffer.get());\n        assertTrue(ioBuffer.hasRemaining());\n        assertEquals('1', ioBuffer.get());\n        assertTrue(ioBuffer.hasRemaining());\n        assertEquals('2', ioBuffer.get());\n        assertTrue(ioBuffer.hasRemaining());\n        assertEquals('3', ioBuffer.get());\n        assertTrue(ioBuffer.hasRemaining());\n        assertEquals('4', ioBuffer.get());\n        assertTrue(ioBuffer.hasRemaining());\n        assertEquals('5', ioBuffer.get());\n\n        try {\n            assertFalse(ioBuffer.hasRemaining());\n            ioBuffer.get();\n            fail();\n        } catch (BufferUnderflowException bufe) {\n            \r\n            assertEquals(6, ioBuffer.position());\n        }\n    }\n","realPath":"codec/src/test/java/org/apache/mina/codec/IoBufferTest.java","repoName":"mina","snippetEndLine":0,"snippetStartLine":0,"startLine":289,"status":"B"}],"commitId":"809673918572c3c5e0674385fed0773341521e89","commitMessage":"@@@moved IoBuffer to codec project because it's usefull only for decoder implementation\n","date":"2013-04-25 19:45:17","modifiedFileCount":"0","status":"B","submitter":"jvermillard"},{"authorTime":"2013-06-30 17:01:41","codes":[{"authorDate":"2013-06-30 17:01:41","commitOrder":2,"curCode":"    public void testGetOneBuffer3Bytes() {\n        ByteBuffer bb = ByteBuffer.allocate(5);\n        bb.put(\"012\".getBytes());\n        bb.flip();\n\n        IoBuffer ioBuffer = IoBuffer.wrap(bb);\n        assertEquals(0, ioBuffer.position());\n        assertEquals(3, ioBuffer.limit());\n\n        assertTrue(ioBuffer.hasRemaining());\n        assertEquals('0', ioBuffer.get());\n        assertTrue(ioBuffer.hasRemaining());\n        assertEquals('1', ioBuffer.get());\n        assertTrue(ioBuffer.hasRemaining());\n        assertEquals('2', ioBuffer.get());\n\n        try {\n            assertFalse(ioBuffer.hasRemaining());\n            ioBuffer.get();\n            fail();\n        } catch (BufferUnderflowException bufe) {\n            \r\n            assertEquals(3, ioBuffer.position());\n        }\n    }\n","date":"2013-06-30 17:03:48","endLine":261,"groupId":"1038","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testGetOneBuffer3Bytes","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mina-10-0.7/blobInfo/CC_OUT/blobs/3c/92f662e468b428ca0cb64ec3708bb8a6343f21.src","preCode":"    public void testGetOneBuffer3Bytes() {\n        ByteBuffer bb = ByteBuffer.allocate(5);\n        bb.put(\"012\".getBytes());\n        bb.flip();\n\n        IoBuffer ioBuffer = new IoBuffer(bb);\n        assertEquals(0, ioBuffer.position());\n        assertEquals(3, ioBuffer.limit());\n\n        assertTrue(ioBuffer.hasRemaining());\n        assertEquals('0', ioBuffer.get());\n        assertTrue(ioBuffer.hasRemaining());\n        assertEquals('1', ioBuffer.get());\n        assertTrue(ioBuffer.hasRemaining());\n        assertEquals('2', ioBuffer.get());\n\n        try {\n            assertFalse(ioBuffer.hasRemaining());\n            ioBuffer.get();\n            fail();\n        } catch (BufferUnderflowException bufe) {\n            \r\n            assertEquals(3, ioBuffer.position());\n        }\n    }\n","realPath":"codec/src/test/java/org/apache/mina/codec/IoBufferTest.java","repoName":"mina","snippetEndLine":0,"snippetStartLine":0,"startLine":237,"status":"M"},{"authorDate":"2013-06-30 17:01:41","commitOrder":2,"curCode":"    public void testGetTwoBuffer3Bytes() {\n        ByteBuffer bb1 = ByteBuffer.allocate(5);\n        bb1.put(\"012\".getBytes());\n        bb1.flip();\n\n        ByteBuffer bb2 = ByteBuffer.allocate(5);\n        bb2.put(\"345\".getBytes());\n        bb2.flip();\n\n        IoBuffer ioBuffer = IoBuffer.wrap(bb1, bb2);\n\n        assertEquals(0, ioBuffer.position());\n        assertEquals(6, ioBuffer.limit());\n        assertTrue(ioBuffer.hasRemaining());\n\n        assertEquals('0', ioBuffer.get());\n        assertTrue(ioBuffer.hasRemaining());\n        assertEquals('1', ioBuffer.get());\n        assertTrue(ioBuffer.hasRemaining());\n        assertEquals('2', ioBuffer.get());\n        assertTrue(ioBuffer.hasRemaining());\n        assertEquals('3', ioBuffer.get());\n        assertTrue(ioBuffer.hasRemaining());\n        assertEquals('4', ioBuffer.get());\n        assertTrue(ioBuffer.hasRemaining());\n        assertEquals('5', ioBuffer.get());\n\n        try {\n            assertFalse(ioBuffer.hasRemaining());\n            ioBuffer.get();\n            fail();\n        } catch (BufferUnderflowException bufe) {\n            \r\n            assertEquals(6, ioBuffer.position());\n        }\n    }\n","date":"2013-06-30 17:03:48","endLine":323,"groupId":"1038","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testGetTwoBuffer3Bytes","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mina-10-0.7/blobInfo/CC_OUT/blobs/3c/92f662e468b428ca0cb64ec3708bb8a6343f21.src","preCode":"    public void testGetTwoBuffer3Bytes() {\n        ByteBuffer bb1 = ByteBuffer.allocate(5);\n        bb1.put(\"012\".getBytes());\n        bb1.flip();\n\n        ByteBuffer bb2 = ByteBuffer.allocate(5);\n        bb2.put(\"345\".getBytes());\n        bb2.flip();\n\n        IoBuffer ioBuffer = new IoBuffer(bb1, bb2);\n\n        assertEquals(0, ioBuffer.position());\n        assertEquals(6, ioBuffer.limit());\n        assertTrue(ioBuffer.hasRemaining());\n\n        assertEquals('0', ioBuffer.get());\n        assertTrue(ioBuffer.hasRemaining());\n        assertEquals('1', ioBuffer.get());\n        assertTrue(ioBuffer.hasRemaining());\n        assertEquals('2', ioBuffer.get());\n        assertTrue(ioBuffer.hasRemaining());\n        assertEquals('3', ioBuffer.get());\n        assertTrue(ioBuffer.hasRemaining());\n        assertEquals('4', ioBuffer.get());\n        assertTrue(ioBuffer.hasRemaining());\n        assertEquals('5', ioBuffer.get());\n\n        try {\n            assertFalse(ioBuffer.hasRemaining());\n            ioBuffer.get();\n            fail();\n        } catch (BufferUnderflowException bufe) {\n            \r\n            assertEquals(6, ioBuffer.position());\n        }\n    }\n","realPath":"codec/src/test/java/org/apache/mina/codec/IoBufferTest.java","repoName":"mina","snippetEndLine":0,"snippetStartLine":0,"startLine":288,"status":"M"}],"commitId":"fb03fe6818487455b38ac4fcf9688bbf94d16170","commitMessage":"@@@removed direct access to constructors\n","date":"2013-06-30 17:03:48","modifiedFileCount":"2","status":"M","submitter":"Rapha?l P. Barazzutti"}]
