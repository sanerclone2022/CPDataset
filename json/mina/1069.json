[{"authorTime":"2013-04-08 00:21:47","codes":[{"authorDate":"2013-04-08 00:21:47","commitOrder":1,"curCode":"    public void testThatWindowsLineTerminatedStringReturnsNonEmptyResult() {\n        TextLineDecoder decoder = new TextLineDecoder(LineDelimiter.UNIX);\n        Context context = decoder.createDecoderState();\n        String[] results = decoder.decode(ByteBuffer.wrap(\"a string\\r\\n\".getBytes()), context);\n        assertNotNull(results);\n        assertEquals(1, results.length);\n        assertEquals(\"a string\\r\", results[0]);\n        assertEquals(0, context.getBuffer().position());\n    }\n","date":"2013-04-08 00:21:47","endLine":76,"groupId":"2329","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testThatWindowsLineTerminatedStringReturnsNonEmptyResult","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mina-10-0.7/blobInfo/CC_OUT/blobs/20/2318795f29179ffcef25c3c7c0b3fd6be96e12.src","preCode":"    public void testThatWindowsLineTerminatedStringReturnsNonEmptyResult() {\n        TextLineDecoder decoder = new TextLineDecoder(LineDelimiter.UNIX);\n        Context context = decoder.createDecoderState();\n        String[] results = decoder.decode(ByteBuffer.wrap(\"a string\\r\\n\".getBytes()), context);\n        assertNotNull(results);\n        assertEquals(1, results.length);\n        assertEquals(\"a string\\r\", results[0]);\n        assertEquals(0, context.getBuffer().position());\n    }\n","realPath":"codec/src/test/java/org/apache/mina/codec/textline/UnixTextLineDecoderTest.java","repoName":"mina","snippetEndLine":0,"snippetStartLine":0,"startLine":68,"status":"B"},{"authorDate":"2013-04-08 00:21:47","commitOrder":1,"curCode":"    public void testThatContextIsMaintainedBetweenMessages() {\n        TextLineDecoder decoder = new TextLineDecoder(LineDelimiter.WINDOWS);\n        Context context = decoder.createDecoderState();\n        String[] results = decoder.decode(ByteBuffer.wrap(\"a string\\r\\na\".getBytes()), context);\n        assertNotNull(results);\n        assertEquals(1, results.length);\n        assertEquals(\"a string\", results[0]);\n        assertEquals(1, context.getBuffer().position());\n        results = decoder.decode(ByteBuffer.wrap(\" string\\r\\n\".getBytes()), context);\n        assertNotNull(results);\n        assertEquals(1, results.length);\n        assertEquals(\"a string\", results[0]);\n        assertEquals(0, context.getBuffer().position());\n    }\n","date":"2013-04-08 00:21:47","endLine":91,"groupId":"2329","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testThatContextIsMaintainedBetweenMessages","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mina-10-0.7/blobInfo/CC_OUT/blobs/72/7fd1713fc1505b98c2405e0c2aded64c00d54a.src","preCode":"    public void testThatContextIsMaintainedBetweenMessages() {\n        TextLineDecoder decoder = new TextLineDecoder(LineDelimiter.WINDOWS);\n        Context context = decoder.createDecoderState();\n        String[] results = decoder.decode(ByteBuffer.wrap(\"a string\\r\\na\".getBytes()), context);\n        assertNotNull(results);\n        assertEquals(1, results.length);\n        assertEquals(\"a string\", results[0]);\n        assertEquals(1, context.getBuffer().position());\n        results = decoder.decode(ByteBuffer.wrap(\" string\\r\\n\".getBytes()), context);\n        assertNotNull(results);\n        assertEquals(1, results.length);\n        assertEquals(\"a string\", results[0]);\n        assertEquals(0, context.getBuffer().position());\n    }\n","realPath":"codec/src/test/java/org/apache/mina/codec/textline/WindowsTextLineDecoderTest.java","repoName":"mina","snippetEndLine":0,"snippetStartLine":0,"startLine":78,"status":"B"}],"commitId":"653d1a5ff37904e4515bc375d24dcb301862dad4","commitMessage":"@@@Added text line coded and related unit tests\n","date":"2013-04-08 00:21:47","modifiedFileCount":"0","status":"B","submitter":"Jeff MAURY"},{"authorTime":"2013-04-10 20:27:18","codes":[{"authorDate":"2013-04-10 20:27:18","commitOrder":2,"curCode":"    public void testThatWindowsLineTerminatedStringReturnsNonEmptyResult() {\n        TextLineDecoder decoder = new TextLineDecoder(LineDelimiter.UNIX);\n        Context context = decoder.createDecoderState();\n        String results = decoder.decode(ByteBuffer.wrap(\"a string\\r\\n\".getBytes()), context);\n        assertNotNull(results);\n        assertEquals(\"a string\\r\", results);\n        assertEquals(0, context.getBuffer().position());\n    }\n","date":"2013-04-10 20:27:18","endLine":71,"groupId":"1069","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"testThatWindowsLineTerminatedStringReturnsNonEmptyResult","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mina-10-0.7/blobInfo/CC_OUT/blobs/4e/ac157b8f3db462cd3ce07a9f8931293b615a07.src","preCode":"    public void testThatWindowsLineTerminatedStringReturnsNonEmptyResult() {\n        TextLineDecoder decoder = new TextLineDecoder(LineDelimiter.UNIX);\n        Context context = decoder.createDecoderState();\n        String[] results = decoder.decode(ByteBuffer.wrap(\"a string\\r\\n\".getBytes()), context);\n        assertNotNull(results);\n        assertEquals(1, results.length);\n        assertEquals(\"a string\\r\", results[0]);\n        assertEquals(0, context.getBuffer().position());\n    }\n","realPath":"codec/src/test/java/org/apache/mina/codec/textline/UnixTextLineDecoderTest.java","repoName":"mina","snippetEndLine":0,"snippetStartLine":0,"startLine":64,"status":"M"},{"authorDate":"2013-04-10 20:27:18","commitOrder":2,"curCode":"    public void testThatContextIsMaintainedBetweenMessages() {\n        TextLineDecoder decoder = new TextLineDecoder(LineDelimiter.WINDOWS);\n        Context context = decoder.createDecoderState();\n        String results = decoder.decode(ByteBuffer.wrap(\"a string\\r\\na\".getBytes()), context);\n        assertNotNull(results);\n        assertEquals(\"a string\", results);\n        assertEquals(1, context.getBuffer().position());\n        results = decoder.decode(ByteBuffer.wrap(\" string\\r\\n\".getBytes()), context);\n        assertNotNull(results);\n        assertEquals(\"a string\", results);\n        assertEquals(0, context.getBuffer().position());\n    }\n","date":"2013-04-10 20:27:18","endLine":84,"groupId":"1069","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"testThatContextIsMaintainedBetweenMessages","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mina-10-0.7/blobInfo/CC_OUT/blobs/13/9d211e124b2da0bd7deed418e2eb9ec5d121c2.src","preCode":"    public void testThatContextIsMaintainedBetweenMessages() {\n        TextLineDecoder decoder = new TextLineDecoder(LineDelimiter.WINDOWS);\n        Context context = decoder.createDecoderState();\n        String[] results = decoder.decode(ByteBuffer.wrap(\"a string\\r\\na\".getBytes()), context);\n        assertNotNull(results);\n        assertEquals(1, results.length);\n        assertEquals(\"a string\", results[0]);\n        assertEquals(1, context.getBuffer().position());\n        results = decoder.decode(ByteBuffer.wrap(\" string\\r\\n\".getBytes()), context);\n        assertNotNull(results);\n        assertEquals(1, results.length);\n        assertEquals(\"a string\", results[0]);\n        assertEquals(0, context.getBuffer().position());\n    }\n","realPath":"codec/src/test/java/org/apache/mina/codec/textline/WindowsTextLineDecoderTest.java","repoName":"mina","snippetEndLine":0,"snippetStartLine":0,"startLine":73,"status":"M"}],"commitId":"3d3767d6287bb12377b96fa12922aeccfdc9d02e","commitMessage":"@@@now return only one object and not an array from the ProtocolDecoder\n","date":"2013-04-10 20:27:18","modifiedFileCount":"9","status":"M","submitter":"jvermillard"}]
