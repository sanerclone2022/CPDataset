[{"authorTime":"2013-04-08 00:21:47","codes":[{"authorDate":"2013-04-08 00:21:47","commitOrder":1,"curCode":"    public void testThatUnixLineTerminatedLongStringReturnsNonEmptyResult() {\n        TextLineDecoder decoder = new TextLineDecoder(LineDelimiter.UNIX);\n        Context context = decoder.createDecoderState();\n        StringBuffer sb = new StringBuffer();\n        for(int i=0; i < 100;++i) {\n            sb.append(\"a string\");\n        }\n        String[] results = decoder.decode(ByteBuffer.wrap((sb.toString() + \"\\n\").getBytes()), context);\n        assertNotNull(results);\n        assertEquals(1, results.length);\n        assertEquals(sb.toString(), results[0]);\n        assertEquals(0, context.getBuffer().position());\n    }\n","date":"2013-04-08 00:21:47","endLine":107,"groupId":"2508","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testThatUnixLineTerminatedLongStringReturnsNonEmptyResult","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mina-10-0.7/blobInfo/CC_OUT/blobs/20/2318795f29179ffcef25c3c7c0b3fd6be96e12.src","preCode":"    public void testThatUnixLineTerminatedLongStringReturnsNonEmptyResult() {\n        TextLineDecoder decoder = new TextLineDecoder(LineDelimiter.UNIX);\n        Context context = decoder.createDecoderState();\n        StringBuffer sb = new StringBuffer();\n        for(int i=0; i < 100;++i) {\n            sb.append(\"a string\");\n        }\n        String[] results = decoder.decode(ByteBuffer.wrap((sb.toString() + \"\\n\").getBytes()), context);\n        assertNotNull(results);\n        assertEquals(1, results.length);\n        assertEquals(sb.toString(), results[0]);\n        assertEquals(0, context.getBuffer().position());\n    }\n","realPath":"codec/src/test/java/org/apache/mina/codec/textline/UnixTextLineDecoderTest.java","repoName":"mina","snippetEndLine":0,"snippetStartLine":0,"startLine":95,"status":"B"},{"authorDate":"2013-04-08 00:21:47","commitOrder":1,"curCode":"    public void testThatWindowsLineTerminatedLongStringReturnsNonEmptyResult() {\n        TextLineDecoder decoder = new TextLineDecoder(LineDelimiter.UNIX);\n        Context context = decoder.createDecoderState();\n        StringBuffer sb = new StringBuffer();\n        for(int i=0; i < 100;++i) {\n            sb.append(\"a string\");\n        }\n        String[] results = decoder.decode(ByteBuffer.wrap((sb.toString() + \"\\r\\n\").getBytes()), context);\n        assertNotNull(results);\n        assertEquals(1, results.length);\n        assertEquals(sb.toString() + \"\\r\", results[0]);\n        assertEquals(0, context.getBuffer().position());\n    }\n","date":"2013-04-08 00:21:47","endLine":122,"groupId":"2508","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testThatWindowsLineTerminatedLongStringReturnsNonEmptyResult","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mina-10-0.7/blobInfo/CC_OUT/blobs/20/2318795f29179ffcef25c3c7c0b3fd6be96e12.src","preCode":"    public void testThatWindowsLineTerminatedLongStringReturnsNonEmptyResult() {\n        TextLineDecoder decoder = new TextLineDecoder(LineDelimiter.UNIX);\n        Context context = decoder.createDecoderState();\n        StringBuffer sb = new StringBuffer();\n        for(int i=0; i < 100;++i) {\n            sb.append(\"a string\");\n        }\n        String[] results = decoder.decode(ByteBuffer.wrap((sb.toString() + \"\\r\\n\").getBytes()), context);\n        assertNotNull(results);\n        assertEquals(1, results.length);\n        assertEquals(sb.toString() + \"\\r\", results[0]);\n        assertEquals(0, context.getBuffer().position());\n    }\n","realPath":"codec/src/test/java/org/apache/mina/codec/textline/UnixTextLineDecoderTest.java","repoName":"mina","snippetEndLine":0,"snippetStartLine":0,"startLine":110,"status":"B"}],"commitId":"653d1a5ff37904e4515bc375d24dcb301862dad4","commitMessage":"@@@Added text line coded and related unit tests\n","date":"2013-04-08 00:21:47","modifiedFileCount":"0","status":"B","submitter":"Jeff MAURY"},{"authorTime":"2013-04-10 20:27:18","codes":[{"authorDate":"2013-04-10 20:27:18","commitOrder":2,"curCode":"    public void testThatUnixLineTerminatedLongStringReturnsNonEmptyResult() {\n        TextLineDecoder decoder = new TextLineDecoder(LineDelimiter.UNIX);\n        Context context = decoder.createDecoderState();\n        StringBuffer sb = new StringBuffer();\n        for (int i = 0; i < 100; ++i) {\n            sb.append(\"a string\");\n        }\n        String results = decoder.decode(ByteBuffer.wrap((sb.toString() + \"\\n\").getBytes()), context);\n        assertNotNull(results);\n        assertEquals(sb.toString(), results);\n        assertEquals(0, context.getBuffer().position());\n    }\n","date":"2013-04-10 20:27:18","endLine":99,"groupId":"1095","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"testThatUnixLineTerminatedLongStringReturnsNonEmptyResult","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mina-10-0.7/blobInfo/CC_OUT/blobs/4e/ac157b8f3db462cd3ce07a9f8931293b615a07.src","preCode":"    public void testThatUnixLineTerminatedLongStringReturnsNonEmptyResult() {\n        TextLineDecoder decoder = new TextLineDecoder(LineDelimiter.UNIX);\n        Context context = decoder.createDecoderState();\n        StringBuffer sb = new StringBuffer();\n        for(int i=0; i < 100;++i) {\n            sb.append(\"a string\");\n        }\n        String[] results = decoder.decode(ByteBuffer.wrap((sb.toString() + \"\\n\").getBytes()), context);\n        assertNotNull(results);\n        assertEquals(1, results.length);\n        assertEquals(sb.toString(), results[0]);\n        assertEquals(0, context.getBuffer().position());\n    }\n","realPath":"codec/src/test/java/org/apache/mina/codec/textline/UnixTextLineDecoderTest.java","repoName":"mina","snippetEndLine":0,"snippetStartLine":0,"startLine":88,"status":"M"},{"authorDate":"2013-04-10 20:27:18","commitOrder":2,"curCode":"    public void testThatWindowsLineTerminatedLongStringReturnsNonEmptyResult() {\n        TextLineDecoder decoder = new TextLineDecoder(LineDelimiter.UNIX);\n        Context context = decoder.createDecoderState();\n        StringBuffer sb = new StringBuffer();\n        for (int i = 0; i < 100; ++i) {\n            sb.append(\"a string\");\n        }\n        String results = decoder.decode(ByteBuffer.wrap((sb.toString() + \"\\r\\n\").getBytes()), context);\n        assertNotNull(results);\n        assertEquals(sb.toString() + \"\\r\", results);\n        assertEquals(0, context.getBuffer().position());\n    }\n","date":"2013-04-10 20:27:18","endLine":113,"groupId":"1095","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"testThatWindowsLineTerminatedLongStringReturnsNonEmptyResult","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mina-10-0.7/blobInfo/CC_OUT/blobs/4e/ac157b8f3db462cd3ce07a9f8931293b615a07.src","preCode":"    public void testThatWindowsLineTerminatedLongStringReturnsNonEmptyResult() {\n        TextLineDecoder decoder = new TextLineDecoder(LineDelimiter.UNIX);\n        Context context = decoder.createDecoderState();\n        StringBuffer sb = new StringBuffer();\n        for(int i=0; i < 100;++i) {\n            sb.append(\"a string\");\n        }\n        String[] results = decoder.decode(ByteBuffer.wrap((sb.toString() + \"\\r\\n\").getBytes()), context);\n        assertNotNull(results);\n        assertEquals(1, results.length);\n        assertEquals(sb.toString() + \"\\r\", results[0]);\n        assertEquals(0, context.getBuffer().position());\n    }\n","realPath":"codec/src/test/java/org/apache/mina/codec/textline/UnixTextLineDecoderTest.java","repoName":"mina","snippetEndLine":0,"snippetStartLine":0,"startLine":102,"status":"M"}],"commitId":"3d3767d6287bb12377b96fa12922aeccfdc9d02e","commitMessage":"@@@now return only one object and not an array from the ProtocolDecoder\n","date":"2013-04-10 20:27:18","modifiedFileCount":"9","status":"M","submitter":"jvermillard"}]
