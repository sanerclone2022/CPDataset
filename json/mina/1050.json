[{"authorTime":"2013-04-25 19:45:17","codes":[{"authorDate":"2013-04-25 19:45:17","commitOrder":1,"curCode":"    public void testPositionAboveValue() {\n        ByteBuffer bb1 = ByteBuffer.allocate(4);\n        bb1.put(\"012\".getBytes());\n        bb1.flip();\n\n        ByteBuffer bb2 = ByteBuffer.allocate(4);\n        bb2.put(\"3456\".getBytes());\n        bb2.flip();\n\n        ByteBuffer bb3 = ByteBuffer.allocate(4);\n        bb3.put(\"789\".getBytes());\n        bb3.flip();\n\n        \r\n        IoBuffer ioBuffer = new IoBuffer(bb1, bb2, bb3);\n\n        ioBuffer.position(10);\n    }\n","date":"2013-04-25 19:45:17","endLine":739,"groupId":"2049","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testPositionAboveValue","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mina-10-0.7/blobInfo/CC_OUT/blobs/73/49eb80bcdd04f041bca660388e14914097259a.src","preCode":"    public void testPositionAboveValue() {\n        ByteBuffer bb1 = ByteBuffer.allocate(4);\n        bb1.put(\"012\".getBytes());\n        bb1.flip();\n\n        ByteBuffer bb2 = ByteBuffer.allocate(4);\n        bb2.put(\"3456\".getBytes());\n        bb2.flip();\n\n        ByteBuffer bb3 = ByteBuffer.allocate(4);\n        bb3.put(\"789\".getBytes());\n        bb3.flip();\n\n        \r\n        IoBuffer ioBuffer = new IoBuffer(bb1, bb2, bb3);\n\n        ioBuffer.position(10);\n    }\n","realPath":"codec/src/test/java/org/apache/mina/codec/IoBufferTest.java","repoName":"mina","snippetEndLine":0,"snippetStartLine":0,"startLine":722,"status":"B"},{"authorDate":"2013-04-25 19:45:17","commitOrder":1,"curCode":"    public void testPositionCurrentBuffer() {\n        ByteBuffer bb1 = ByteBuffer.allocate(4);\n        bb1.put(\"012\".getBytes());\n        bb1.flip();\n\n        ByteBuffer bb2 = ByteBuffer.allocate(4);\n        bb2.put(\"3456\".getBytes());\n        bb2.flip();\n\n        ByteBuffer bb3 = ByteBuffer.allocate(4);\n        bb3.put(\"789\".getBytes());\n        bb3.flip();\n\n        \r\n        IoBuffer ioBuffer = new IoBuffer(bb1, bb2, bb3);\n\n        \r\n        ioBuffer.position(5);\n\n        assertEquals('5', ioBuffer.get());\n\n        \r\n        ioBuffer.position(3);\n\n        assertEquals('3', ioBuffer.get());\n\n        \r\n        ioBuffer.position(6);\n\n        assertEquals('6', ioBuffer.get());\n\n        \r\n        ioBuffer.position(2);\n        assertEquals('2', ioBuffer.get());\n\n        \r\n        ioBuffer.position(7);\n        assertEquals('7', ioBuffer.get());\n\n        \r\n        \r\n        for (int i = 0; i < ioBuffer.limit(); i++) {\n            ioBuffer.position(i);\n            assertEquals('0' + i, ioBuffer.get());\n        }\n\n        \r\n        for (int i = ioBuffer.limit() - 1; i >= 0; i--) {\n            ioBuffer.position(i);\n            assertEquals('0' + i, ioBuffer.get());\n        }\n    }\n","date":"2013-04-25 19:45:17","endLine":796,"groupId":"2049","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testPositionCurrentBuffer","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mina-10-0.7/blobInfo/CC_OUT/blobs/73/49eb80bcdd04f041bca660388e14914097259a.src","preCode":"    public void testPositionCurrentBuffer() {\n        ByteBuffer bb1 = ByteBuffer.allocate(4);\n        bb1.put(\"012\".getBytes());\n        bb1.flip();\n\n        ByteBuffer bb2 = ByteBuffer.allocate(4);\n        bb2.put(\"3456\".getBytes());\n        bb2.flip();\n\n        ByteBuffer bb3 = ByteBuffer.allocate(4);\n        bb3.put(\"789\".getBytes());\n        bb3.flip();\n\n        \r\n        IoBuffer ioBuffer = new IoBuffer(bb1, bb2, bb3);\n\n        \r\n        ioBuffer.position(5);\n\n        assertEquals('5', ioBuffer.get());\n\n        \r\n        ioBuffer.position(3);\n\n        assertEquals('3', ioBuffer.get());\n\n        \r\n        ioBuffer.position(6);\n\n        assertEquals('6', ioBuffer.get());\n\n        \r\n        ioBuffer.position(2);\n        assertEquals('2', ioBuffer.get());\n\n        \r\n        ioBuffer.position(7);\n        assertEquals('7', ioBuffer.get());\n\n        \r\n        \r\n        for (int i = 0; i < ioBuffer.limit(); i++) {\n            ioBuffer.position(i);\n            assertEquals('0' + i, ioBuffer.get());\n        }\n\n        \r\n        for (int i = ioBuffer.limit() - 1; i >= 0; i--) {\n            ioBuffer.position(i);\n            assertEquals('0' + i, ioBuffer.get());\n        }\n    }\n","realPath":"codec/src/test/java/org/apache/mina/codec/IoBufferTest.java","repoName":"mina","snippetEndLine":0,"snippetStartLine":0,"startLine":745,"status":"B"}],"commitId":"809673918572c3c5e0674385fed0773341521e89","commitMessage":"@@@moved IoBuffer to codec project because it's usefull only for decoder implementation\n","date":"2013-04-25 19:45:17","modifiedFileCount":"0","status":"B","submitter":"jvermillard"},{"authorTime":"2013-04-25 19:45:17","codes":[{"authorDate":"2013-06-24 17:44:21","commitOrder":2,"curCode":"    public void testPositionAboveValue() {\n        ByteBuffer bb1 = ByteBuffer.allocate(4);\n        bb1.put(\"012\".getBytes());\n        bb1.flip();\n\n        ByteBuffer bb2 = ByteBuffer.allocate(4);\n        bb2.put(\"3456\".getBytes());\n        bb2.flip();\n\n        ByteBuffer bb3 = ByteBuffer.allocate(4);\n        bb3.put(\"789\".getBytes());\n        bb3.flip();\n\n        \r\n        IoBuffer ioBuffer = new IoBuffer(bb1, bb2, bb3);\n\n        ioBuffer.position(11);\n    }\n","date":"2013-06-24 17:44:21","endLine":717,"groupId":"2049","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testPositionAboveValue","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mina-10-0.7/blobInfo/CC_OUT/blobs/39/9eeef71582b997e4f02ce39f695d2c4382bd69.src","preCode":"    public void testPositionAboveValue() {\n        ByteBuffer bb1 = ByteBuffer.allocate(4);\n        bb1.put(\"012\".getBytes());\n        bb1.flip();\n\n        ByteBuffer bb2 = ByteBuffer.allocate(4);\n        bb2.put(\"3456\".getBytes());\n        bb2.flip();\n\n        ByteBuffer bb3 = ByteBuffer.allocate(4);\n        bb3.put(\"789\".getBytes());\n        bb3.flip();\n\n        \r\n        IoBuffer ioBuffer = new IoBuffer(bb1, bb2, bb3);\n\n        ioBuffer.position(10);\n    }\n","realPath":"codec/src/test/java/org/apache/mina/codec/IoBufferTest.java","repoName":"mina","snippetEndLine":0,"snippetStartLine":0,"startLine":700,"status":"M"},{"authorDate":"2013-04-25 19:45:17","commitOrder":2,"curCode":"    public void testPositionCurrentBuffer() {\n        ByteBuffer bb1 = ByteBuffer.allocate(4);\n        bb1.put(\"012\".getBytes());\n        bb1.flip();\n\n        ByteBuffer bb2 = ByteBuffer.allocate(4);\n        bb2.put(\"3456\".getBytes());\n        bb2.flip();\n\n        ByteBuffer bb3 = ByteBuffer.allocate(4);\n        bb3.put(\"789\".getBytes());\n        bb3.flip();\n\n        \r\n        IoBuffer ioBuffer = new IoBuffer(bb1, bb2, bb3);\n\n        \r\n        ioBuffer.position(5);\n\n        assertEquals('5', ioBuffer.get());\n\n        \r\n        ioBuffer.position(3);\n\n        assertEquals('3', ioBuffer.get());\n\n        \r\n        ioBuffer.position(6);\n\n        assertEquals('6', ioBuffer.get());\n\n        \r\n        ioBuffer.position(2);\n        assertEquals('2', ioBuffer.get());\n\n        \r\n        ioBuffer.position(7);\n        assertEquals('7', ioBuffer.get());\n\n        \r\n        \r\n        for (int i = 0; i < ioBuffer.limit(); i++) {\n            ioBuffer.position(i);\n            assertEquals('0' + i, ioBuffer.get());\n        }\n\n        \r\n        for (int i = ioBuffer.limit() - 1; i >= 0; i--) {\n            ioBuffer.position(i);\n            assertEquals('0' + i, ioBuffer.get());\n        }\n    }\n","date":"2013-04-25 19:45:17","endLine":796,"groupId":"2049","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testPositionCurrentBuffer","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mina-10-0.7/blobInfo/CC_OUT/blobs/73/49eb80bcdd04f041bca660388e14914097259a.src","preCode":"    public void testPositionCurrentBuffer() {\n        ByteBuffer bb1 = ByteBuffer.allocate(4);\n        bb1.put(\"012\".getBytes());\n        bb1.flip();\n\n        ByteBuffer bb2 = ByteBuffer.allocate(4);\n        bb2.put(\"3456\".getBytes());\n        bb2.flip();\n\n        ByteBuffer bb3 = ByteBuffer.allocate(4);\n        bb3.put(\"789\".getBytes());\n        bb3.flip();\n\n        \r\n        IoBuffer ioBuffer = new IoBuffer(bb1, bb2, bb3);\n\n        \r\n        ioBuffer.position(5);\n\n        assertEquals('5', ioBuffer.get());\n\n        \r\n        ioBuffer.position(3);\n\n        assertEquals('3', ioBuffer.get());\n\n        \r\n        ioBuffer.position(6);\n\n        assertEquals('6', ioBuffer.get());\n\n        \r\n        ioBuffer.position(2);\n        assertEquals('2', ioBuffer.get());\n\n        \r\n        ioBuffer.position(7);\n        assertEquals('7', ioBuffer.get());\n\n        \r\n        \r\n        for (int i = 0; i < ioBuffer.limit(); i++) {\n            ioBuffer.position(i);\n            assertEquals('0' + i, ioBuffer.get());\n        }\n\n        \r\n        for (int i = ioBuffer.limit() - 1; i >= 0; i--) {\n            ioBuffer.position(i);\n            assertEquals('0' + i, ioBuffer.get());\n        }\n    }\n","realPath":"codec/src/test/java/org/apache/mina/codec/IoBufferTest.java","repoName":"mina","snippetEndLine":0,"snippetStartLine":0,"startLine":745,"status":"N"}],"commitId":"527aa62e5abcc6a3fe1f83cf56b721e58b23ecd9","commitMessage":"@@@Imporve IoBuffer\n\nSquashed commit of the following:\n\ncommit 5fb7b37bcee6490ea9409843c4e81b4b25ab2324\nAuthor: Raphae?l P. Barazzutti <raphael.barazzutti@gmail.com>\nDate:   Mon Jun 24 07:03:54 2013 +0200\n\n    IoBuffer.compact() fix and dedicated test\n\ncommit 3462c4785a72b7dc77753ad12d76b3a27f10504e\nAuthor: Raphae?l P. Barazzutti <raphael.barazzutti@gmail.com>\nDate:   Mon Jun 24 01:43:54 2013 +0200\n\n    added a few tests for IoBuffer\n\ncommit c19c4917ca6fd62efdd4d128e2d400204fc253e2\nAuthor: Raphae?l P. Barazzutti <raphael.barazzutti@gmail.com>\nDate:   Mon Jun 24 01:43:26 2013 +0200\n\n    IoBuffer with some new features\n\ncommit 60d85e2dc000437c3b0d1d715cde8a5a83192d6d\nAuthor: Raphae?l P. Barazzutti <raphael.barazzutti@gmail.com>\nDate:   Sun Jun 23 23:16:19 2013 +0200\n\n    It is possible to set the position to the last index + 1 on a IoBuffer (like on java.nio.Buffer)\n\ncommit fbc4085eb446795c08f2693a75cd53ab7570ee7e\nAuthor: Raphae?l P. Barazzutti <raphael.barazzutti@gmail.com>\nDate:   Sun Jun 23 23:08:33 2013 +0200\n\n    IoBuffer's contains the available bytes of the ByteBuffers used for it's creation\n\ncommit 61b6b7431a637c89e3c0fda7c39ab32b9e169f21\nAuthor: Raphae?l P. Barazzutti <raphael.barazzutti@gmail.com>\nDate:   Sun Jun 23 23:06:11 2013 +0200\n\n    Endianness at the IoBuffer level\n\ncommit 5348a560805c53a4c5ead81c403d0b3348fa51eb\nAuthor: Raphae?l P. Barazzutti <raphael.barazzutti@gmail.com>\nDate:   Sun Jun 23 23:02:40 2013 +0200\n\n    mixed typed buffers should be handled by IoBuffers\n\ncommit 68c48c5e9b247b2e67dd551b67b8b8b113a6db81\nAuthor: Raphae?l P. Barazzutti <raphael.barazzutti@gmail.com>\nDate:   Sun Jun 23 22:51:22 2013 +0200\n\n    the endianness is handled at the IoBuffer level\n\ncommit 4e3f5a5d6e0627ee876514a6d3ff6e489f9529c3\nAuthor: Raphae?l P. Barazzutti <raphael.barazzutti@gmail.com>\nDate:   Sun Jun 23 22:38:52 2013 +0200\n\n    This test scenario doesn't match the array() specifications of the ByteBuffer class\n\ncommit a1c93c922d12b56459e6f8c53c2052c5805bcaf8\nAuthor: Raphae?l P. Barazzutti <raphael.barazzutti@gmail.com>\nDate:   Sun Jun 23 22:30:45 2013 +0200\n\n    when available it should return the array really backing the buffer\n","date":"2013-06-24 17:44:21","modifiedFileCount":"2","status":"M","submitter":"jvermillard"},{"authorTime":"2013-06-30 17:01:41","codes":[{"authorDate":"2013-06-30 17:01:41","commitOrder":3,"curCode":"    public void testPositionAboveValue() {\n        ByteBuffer bb1 = ByteBuffer.allocate(4);\n        bb1.put(\"012\".getBytes());\n        bb1.flip();\n\n        ByteBuffer bb2 = ByteBuffer.allocate(4);\n        bb2.put(\"3456\".getBytes());\n        bb2.flip();\n\n        ByteBuffer bb3 = ByteBuffer.allocate(4);\n        bb3.put(\"789\".getBytes());\n        bb3.flip();\n\n        \r\n        IoBuffer ioBuffer = IoBuffer.wrap(bb1, bb2, bb3);\n\n        ioBuffer.position(11);\n    }\n","date":"2013-06-30 17:03:48","endLine":717,"groupId":"1050","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testPositionAboveValue","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mina-10-0.7/blobInfo/CC_OUT/blobs/3c/92f662e468b428ca0cb64ec3708bb8a6343f21.src","preCode":"    public void testPositionAboveValue() {\n        ByteBuffer bb1 = ByteBuffer.allocate(4);\n        bb1.put(\"012\".getBytes());\n        bb1.flip();\n\n        ByteBuffer bb2 = ByteBuffer.allocate(4);\n        bb2.put(\"3456\".getBytes());\n        bb2.flip();\n\n        ByteBuffer bb3 = ByteBuffer.allocate(4);\n        bb3.put(\"789\".getBytes());\n        bb3.flip();\n\n        \r\n        IoBuffer ioBuffer = new IoBuffer(bb1, bb2, bb3);\n\n        ioBuffer.position(11);\n    }\n","realPath":"codec/src/test/java/org/apache/mina/codec/IoBufferTest.java","repoName":"mina","snippetEndLine":0,"snippetStartLine":0,"startLine":700,"status":"M"},{"authorDate":"2013-06-30 17:01:41","commitOrder":3,"curCode":"    public void testPositionCurrentBuffer() {\n        ByteBuffer bb1 = ByteBuffer.allocate(4);\n        bb1.put(\"012\".getBytes());\n        bb1.flip();\n\n        ByteBuffer bb2 = ByteBuffer.allocate(4);\n        bb2.put(\"3456\".getBytes());\n        bb2.flip();\n\n        ByteBuffer bb3 = ByteBuffer.allocate(4);\n        bb3.put(\"789\".getBytes());\n        bb3.flip();\n\n        \r\n        IoBuffer ioBuffer = IoBuffer.wrap(bb1, bb2, bb3);\n\n        \r\n        ioBuffer.position(5);\n\n        assertEquals('5', ioBuffer.get());\n\n        \r\n        ioBuffer.position(3);\n\n        assertEquals('3', ioBuffer.get());\n\n        \r\n        ioBuffer.position(6);\n\n        assertEquals('6', ioBuffer.get());\n\n        \r\n        ioBuffer.position(2);\n        assertEquals('2', ioBuffer.get());\n\n        \r\n        ioBuffer.position(7);\n        assertEquals('7', ioBuffer.get());\n\n        \r\n        \r\n        for (int i = 0; i < ioBuffer.limit(); i++) {\n            ioBuffer.position(i);\n            assertEquals('0' + i, ioBuffer.get());\n        }\n\n        \r\n        for (int i = ioBuffer.limit() - 1; i >= 0; i--) {\n            ioBuffer.position(i);\n            assertEquals('0' + i, ioBuffer.get());\n        }\n    }\n","date":"2013-06-30 17:03:48","endLine":774,"groupId":"1050","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testPositionCurrentBuffer","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mina-10-0.7/blobInfo/CC_OUT/blobs/3c/92f662e468b428ca0cb64ec3708bb8a6343f21.src","preCode":"    public void testPositionCurrentBuffer() {\n        ByteBuffer bb1 = ByteBuffer.allocate(4);\n        bb1.put(\"012\".getBytes());\n        bb1.flip();\n\n        ByteBuffer bb2 = ByteBuffer.allocate(4);\n        bb2.put(\"3456\".getBytes());\n        bb2.flip();\n\n        ByteBuffer bb3 = ByteBuffer.allocate(4);\n        bb3.put(\"789\".getBytes());\n        bb3.flip();\n\n        \r\n        IoBuffer ioBuffer = new IoBuffer(bb1, bb2, bb3);\n\n        \r\n        ioBuffer.position(5);\n\n        assertEquals('5', ioBuffer.get());\n\n        \r\n        ioBuffer.position(3);\n\n        assertEquals('3', ioBuffer.get());\n\n        \r\n        ioBuffer.position(6);\n\n        assertEquals('6', ioBuffer.get());\n\n        \r\n        ioBuffer.position(2);\n        assertEquals('2', ioBuffer.get());\n\n        \r\n        ioBuffer.position(7);\n        assertEquals('7', ioBuffer.get());\n\n        \r\n        \r\n        for (int i = 0; i < ioBuffer.limit(); i++) {\n            ioBuffer.position(i);\n            assertEquals('0' + i, ioBuffer.get());\n        }\n\n        \r\n        for (int i = ioBuffer.limit() - 1; i >= 0; i--) {\n            ioBuffer.position(i);\n            assertEquals('0' + i, ioBuffer.get());\n        }\n    }\n","realPath":"codec/src/test/java/org/apache/mina/codec/IoBufferTest.java","repoName":"mina","snippetEndLine":0,"snippetStartLine":0,"startLine":723,"status":"M"}],"commitId":"fb03fe6818487455b38ac4fcf9688bbf94d16170","commitMessage":"@@@removed direct access to constructors\n","date":"2013-06-30 17:03:48","modifiedFileCount":"2","status":"M","submitter":"Rapha?l P. Barazzutti"}]
