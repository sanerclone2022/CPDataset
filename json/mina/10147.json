[{"authorTime":"2014-09-05 18:32:20","codes":[{"authorDate":"2014-09-05 18:32:20","commitOrder":1,"curCode":"    public void start(int port, final CountDownLatch counter, final byte[] data) throws IOException {\n        client = new NioTcpClient();\n        client.getSessionConfig().setSendBufferSize(64 * 1024);\n        client.getSessionConfig().setTcpNoDelay(true);\n        client.setIoHandler(new IoHandler() {\n            private void sendMessage(IoSession session, byte[] data) {\n                ByteBuffer iobuf = ByteBuffer.wrap(data);\n                session.write(iobuf);\n            }\n\n            public void sessionOpened(IoSession session) {\n                sendMessage(session, data);\n            }\n\n            public void messageReceived(IoSession session, Object message) {\n                if (message instanceof ByteBuffer) {\n                    ByteBuffer buffer = (ByteBuffer) message;\n\n                    for (int i = 0; i < buffer.remaining(); ++i) {\n                        counter.countDown();\n                        long count = counter.getCount();\n                        if (count > 0) {\n                            sendMessage(session, data);\n                        }\n                    }\n                }\n            }\n\n            public void exceptionCaught(IoSession session, Exception cause) {\n                cause.printStackTrace();\n            }\n\n            @Override\n            public void sessionClosed(IoSession session) {\n            }\n\n            @Override\n            public void sessionIdle(IoSession session, IdleStatus status) {\n            }\n\n            @Override\n            public void messageSent(IoSession session, Object message) {\n            }\n\n            @Override\n            public void serviceActivated(IoService service) {\n            }\n\n            @Override\n            public void serviceInactivated(IoService service) {\n            }\n        });\n\n        client.connect(new InetSocketAddress(port));\n    }\n","date":"2014-09-05 18:32:20","endLine":99,"groupId":"1426","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"start","params":"(intport@finalCountDownLatchcounter@finalbyte[]data)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mina-10-0.7/blobInfo/CC_OUT/blobs/44/ceeb7af2039146499607b9b35a672d18e21cd7.src","preCode":"    public void start(int port, final CountDownLatch counter, final byte[] data) throws IOException {\n        client = new NioTcpClient();\n        client.getSessionConfig().setSendBufferSize(64 * 1024);\n        client.getSessionConfig().setTcpNoDelay(true);\n        client.setIoHandler(new IoHandler() {\n            private void sendMessage(IoSession session, byte[] data) {\n                ByteBuffer iobuf = ByteBuffer.wrap(data);\n                session.write(iobuf);\n            }\n\n            public void sessionOpened(IoSession session) {\n                sendMessage(session, data);\n            }\n\n            public void messageReceived(IoSession session, Object message) {\n                if (message instanceof ByteBuffer) {\n                    ByteBuffer buffer = (ByteBuffer) message;\n\n                    for (int i = 0; i < buffer.remaining(); ++i) {\n                        counter.countDown();\n                        long count = counter.getCount();\n                        if (count > 0) {\n                            sendMessage(session, data);\n                        }\n                    }\n                }\n            }\n\n            public void exceptionCaught(IoSession session, Exception cause) {\n                cause.printStackTrace();\n            }\n\n            @Override\n            public void sessionClosed(IoSession session) {\n            }\n\n            @Override\n            public void sessionIdle(IoSession session, IdleStatus status) {\n            }\n\n            @Override\n            public void messageSent(IoSession session, Object message) {\n            }\n\n            @Override\n            public void serviceActivated(IoService service) {\n            }\n\n            @Override\n            public void serviceInactivated(IoService service) {\n            }\n        });\n\n        client.connect(new InetSocketAddress(port));\n    }\n","realPath":"benchmarks/common/src/test/java/org/apache/mina/core/nio/tcp/Mina3TcpBenchmarkClient.java","repoName":"mina","snippetEndLine":0,"snippetStartLine":0,"startLine":45,"status":"B"},{"authorDate":"2014-09-05 18:32:20","commitOrder":1,"curCode":"    public void start(int port, final CountDownLatch counter, final byte[] data) throws IOException {\n        udpClient = new NioUdpClient();\n        udpClient.setIoHandler(new IoHandler() {\n            private void sendMessage(IoSession session, byte[] data) {\n                ByteBuffer iobuf = ByteBuffer.wrap(data);\n                session.write(iobuf);\n            }\n\n            public void sessionOpened(IoSession session) {\n                sendMessage(session, data);\n            }\n\n            public void messageReceived(IoSession session, Object message) {\n                if (message instanceof ByteBuffer) {\n                    ByteBuffer buffer = (ByteBuffer) message;\n                    for (int i = 0; i < buffer.remaining(); ++i) {\n                        counter.countDown();\n                        long count = counter.getCount();\n                        if (count > 0) {\n                            sendMessage(session, data);\n                        }\n                    }\n                }\n            }\n\n            public void exceptionCaught(IoSession session, Exception cause) {\n                cause.printStackTrace();\n            }\n\n            @Override\n            public void sessionClosed(IoSession session) {\n            }\n\n            @Override\n            public void sessionIdle(IoSession session, IdleStatus status) {\n            }\n\n            @Override\n            public void messageSent(IoSession session, Object message) {\n            }\n\n            @Override\n            public void serviceActivated(IoService service) {\n            }\n\n            @Override\n            public void serviceInactivated(IoService service) {\n            }\n        });\n\n        IoFuture<IoSession> future = udpClient.connect(new InetSocketAddress(port));\n\n        try {\n            IoSession session = future.get();\n        } catch (InterruptedException e) {\n            \r\n            e.printStackTrace();\n        } catch (ExecutionException e) {\n            \r\n            e.printStackTrace();\n        }\n    }\n","date":"2014-09-05 18:32:20","endLine":109,"groupId":"1426","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"start","params":"(intport@finalCountDownLatchcounter@finalbyte[]data)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mina-10-0.7/blobInfo/CC_OUT/blobs/a4/dcf4d5815a4f9882cb8014a4346eed3f7c0cb7.src","preCode":"    public void start(int port, final CountDownLatch counter, final byte[] data) throws IOException {\n        udpClient = new NioUdpClient();\n        udpClient.setIoHandler(new IoHandler() {\n            private void sendMessage(IoSession session, byte[] data) {\n                ByteBuffer iobuf = ByteBuffer.wrap(data);\n                session.write(iobuf);\n            }\n\n            public void sessionOpened(IoSession session) {\n                sendMessage(session, data);\n            }\n\n            public void messageReceived(IoSession session, Object message) {\n                if (message instanceof ByteBuffer) {\n                    ByteBuffer buffer = (ByteBuffer) message;\n                    for (int i = 0; i < buffer.remaining(); ++i) {\n                        counter.countDown();\n                        long count = counter.getCount();\n                        if (count > 0) {\n                            sendMessage(session, data);\n                        }\n                    }\n                }\n            }\n\n            public void exceptionCaught(IoSession session, Exception cause) {\n                cause.printStackTrace();\n            }\n\n            @Override\n            public void sessionClosed(IoSession session) {\n            }\n\n            @Override\n            public void sessionIdle(IoSession session, IdleStatus status) {\n            }\n\n            @Override\n            public void messageSent(IoSession session, Object message) {\n            }\n\n            @Override\n            public void serviceActivated(IoService service) {\n            }\n\n            @Override\n            public void serviceInactivated(IoService service) {\n            }\n        });\n\n        IoFuture<IoSession> future = udpClient.connect(new InetSocketAddress(port));\n\n        try {\n            IoSession session = future.get();\n        } catch (InterruptedException e) {\n            \r\n            e.printStackTrace();\n        } catch (ExecutionException e) {\n            \r\n            e.printStackTrace();\n        }\n    }\n","realPath":"benchmarks/common/src/test/java/org/apache/mina/core/nio/udp/Mina3UdpBenchmarkClient.java","repoName":"mina","snippetEndLine":0,"snippetStartLine":0,"startLine":48,"status":"B"}],"commitId":"d38458d353ee5dace8c6daed967eccde2e867fe9","commitMessage":"@@@Applied many patches\n\nMerge branch 'trunk' of https://git-wip-us.apache.org/repos/asf/mina into trunk\n","date":"2014-09-05 18:32:20","modifiedFileCount":"0","status":"B","submitter":"Emmanuel L?charny"},{"authorTime":"2014-12-13 05:21:00","codes":[{"authorDate":"2014-12-13 05:21:00","commitOrder":2,"curCode":"    public void start(int port, final CountDownLatch counter, final byte[] data) throws IOException {\n        client = new NioTcpClient();\n        client.getSessionConfig().setSendBufferSize(64 * 1024);\n        client.getSessionConfig().setTcpNoDelay(true);\n        client.setIoHandler(new AbstractIoHandler() {\n            private void sendMessage(IoSession session, byte[] data) {\n                ByteBuffer iobuf = ByteBuffer.wrap(data);\n                session.write(iobuf);\n            }\n\n            public void sessionOpened(IoSession session) {\n                sendMessage(session, data);\n            }\n\n            public void messageReceived(IoSession session, Object message) {\n                if (message instanceof ByteBuffer) {\n                    ByteBuffer buffer = (ByteBuffer) message;\n\n                    for (int i = 0; i < buffer.remaining(); ++i) {\n                        counter.countDown();\n                        long count = counter.getCount();\n                        if (count > 0) {\n                            sendMessage(session, data);\n                        }\n                    }\n                }\n            }\n\n            public void exceptionCaught(IoSession session, Exception cause) {\n                cause.printStackTrace();\n            }\n\n            @Override\n            public void sessionClosed(IoSession session) {\n            }\n\n            @Override\n            public void sessionIdle(IoSession session, IdleStatus status) {\n            }\n\n            @Override\n            public void messageSent(IoSession session, Object message) {\n            }\n\n            @Override\n            public void serviceActivated(IoService service) {\n            }\n\n            @Override\n            public void serviceInactivated(IoService service) {\n            }\n        });\n\n        client.connect(new InetSocketAddress(port));\n    }\n","date":"2014-12-13 05:21:00","endLine":99,"groupId":"10147","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"start","params":"(intport@finalCountDownLatchcounter@finalbyte[]data)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mina-10-0.7/blobInfo/CC_OUT/blobs/77/acf2a781e700ec48e9afdea23fcf75f1fb3ef2.src","preCode":"    public void start(int port, final CountDownLatch counter, final byte[] data) throws IOException {\n        client = new NioTcpClient();\n        client.getSessionConfig().setSendBufferSize(64 * 1024);\n        client.getSessionConfig().setTcpNoDelay(true);\n        client.setIoHandler(new IoHandler() {\n            private void sendMessage(IoSession session, byte[] data) {\n                ByteBuffer iobuf = ByteBuffer.wrap(data);\n                session.write(iobuf);\n            }\n\n            public void sessionOpened(IoSession session) {\n                sendMessage(session, data);\n            }\n\n            public void messageReceived(IoSession session, Object message) {\n                if (message instanceof ByteBuffer) {\n                    ByteBuffer buffer = (ByteBuffer) message;\n\n                    for (int i = 0; i < buffer.remaining(); ++i) {\n                        counter.countDown();\n                        long count = counter.getCount();\n                        if (count > 0) {\n                            sendMessage(session, data);\n                        }\n                    }\n                }\n            }\n\n            public void exceptionCaught(IoSession session, Exception cause) {\n                cause.printStackTrace();\n            }\n\n            @Override\n            public void sessionClosed(IoSession session) {\n            }\n\n            @Override\n            public void sessionIdle(IoSession session, IdleStatus status) {\n            }\n\n            @Override\n            public void messageSent(IoSession session, Object message) {\n            }\n\n            @Override\n            public void serviceActivated(IoService service) {\n            }\n\n            @Override\n            public void serviceInactivated(IoService service) {\n            }\n        });\n\n        client.connect(new InetSocketAddress(port));\n    }\n","realPath":"benchmarks/common/src/test/java/org/apache/mina/core/nio/tcp/Mina3TcpBenchmarkClient.java","repoName":"mina","snippetEndLine":0,"snippetStartLine":0,"startLine":45,"status":"M"},{"authorDate":"2014-12-13 05:21:00","commitOrder":2,"curCode":"    public void start(int port, final CountDownLatch counter, final byte[] data) throws IOException {\n        udpClient = new NioUdpClient();\n        udpClient.setIoHandler(new AbstractIoHandler() {\n            private void sendMessage(IoSession session, byte[] data) {\n                ByteBuffer iobuf = ByteBuffer.wrap(data);\n                session.write(iobuf);\n            }\n\n            public void sessionOpened(IoSession session) {\n                sendMessage(session, data);\n            }\n\n            public void messageReceived(IoSession session, Object message) {\n                if (message instanceof ByteBuffer) {\n                    ByteBuffer buffer = (ByteBuffer) message;\n                    for (int i = 0; i < buffer.remaining(); ++i) {\n                        counter.countDown();\n                        long count = counter.getCount();\n                        if (count > 0) {\n                            sendMessage(session, data);\n                        }\n                    }\n                }\n            }\n\n            public void exceptionCaught(IoSession session, Exception cause) {\n                cause.printStackTrace();\n            }\n\n            @Override\n            public void sessionClosed(IoSession session) {\n            }\n\n            @Override\n            public void sessionIdle(IoSession session, IdleStatus status) {\n            }\n\n            @Override\n            public void messageSent(IoSession session, Object message) {\n            }\n\n            @Override\n            public void serviceActivated(IoService service) {\n            }\n\n            @Override\n            public void serviceInactivated(IoService service) {\n            }\n        });\n\n        IoFuture<IoSession> future = udpClient.connect(new InetSocketAddress(port));\n\n        try {\n            IoSession session = future.get();\n        } catch (InterruptedException e) {\n            \r\n            e.printStackTrace();\n        } catch (ExecutionException e) {\n            \r\n            e.printStackTrace();\n        }\n    }\n","date":"2014-12-13 05:21:00","endLine":109,"groupId":"10147","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"start","params":"(intport@finalCountDownLatchcounter@finalbyte[]data)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mina-10-0.7/blobInfo/CC_OUT/blobs/f8/d7dc73bb923c4e8b8a04d396bbd95ee9bf7b4d.src","preCode":"    public void start(int port, final CountDownLatch counter, final byte[] data) throws IOException {\n        udpClient = new NioUdpClient();\n        udpClient.setIoHandler(new IoHandler() {\n            private void sendMessage(IoSession session, byte[] data) {\n                ByteBuffer iobuf = ByteBuffer.wrap(data);\n                session.write(iobuf);\n            }\n\n            public void sessionOpened(IoSession session) {\n                sendMessage(session, data);\n            }\n\n            public void messageReceived(IoSession session, Object message) {\n                if (message instanceof ByteBuffer) {\n                    ByteBuffer buffer = (ByteBuffer) message;\n                    for (int i = 0; i < buffer.remaining(); ++i) {\n                        counter.countDown();\n                        long count = counter.getCount();\n                        if (count > 0) {\n                            sendMessage(session, data);\n                        }\n                    }\n                }\n            }\n\n            public void exceptionCaught(IoSession session, Exception cause) {\n                cause.printStackTrace();\n            }\n\n            @Override\n            public void sessionClosed(IoSession session) {\n            }\n\n            @Override\n            public void sessionIdle(IoSession session, IdleStatus status) {\n            }\n\n            @Override\n            public void messageSent(IoSession session, Object message) {\n            }\n\n            @Override\n            public void serviceActivated(IoService service) {\n            }\n\n            @Override\n            public void serviceInactivated(IoService service) {\n            }\n        });\n\n        IoFuture<IoSession> future = udpClient.connect(new InetSocketAddress(port));\n\n        try {\n            IoSession session = future.get();\n        } catch (InterruptedException e) {\n            \r\n            e.printStackTrace();\n        } catch (ExecutionException e) {\n            \r\n            e.printStackTrace();\n        }\n    }\n","realPath":"benchmarks/common/src/test/java/org/apache/mina/core/nio/udp/Mina3UdpBenchmarkClient.java","repoName":"mina","snippetEndLine":0,"snippetStartLine":0,"startLine":48,"status":"M"}],"commitId":"904f44473dde13a7dd7848626998f6a0ba06a56e","commitMessage":"@@@Fix previous commit\n","date":"2014-12-13 05:21:00","modifiedFileCount":"5","status":"M","submitter":"Jeff MAURY"}]
