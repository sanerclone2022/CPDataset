[{"authorTime":"2013-04-23 16:18:14","codes":[{"authorDate":"2013-04-23 16:18:14","commitOrder":1,"curCode":"\tpublic void testSizedValues() {\n\t\tfor (int value : new int[] { 0, 1, 127, 128, 65536, 198649,\n\t\t\t\tInteger.MAX_VALUE }) {\n\t\t\tByteBuffer buffer = encoder.encode(value, null);\n\n\t\t\ttry {\n\t\t\t\tassertEquals(value, decoder.decode(buffer, null).intValue());\n\t\t\t} catch (ProtocolDecoderException e) {\n\t\t\t\tfail(\"Should not throw exception\");\n\t\t\t}\n\t\t}\n\t}\n","date":"2013-05-08 03:07:21","endLine":81,"groupId":"2518","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testSizedValues","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mina-10-0.7/blobInfo/CC_OUT/blobs/14/d4f78a11dd5fd7409d2c112ffa1155f1505016.src","preCode":"\tpublic void testSizedValues() {\n\t\tfor (int value : new int[] { 0, 1, 127, 128, 65536, 198649,\n\t\t\t\tInteger.MAX_VALUE }) {\n\t\t\tByteBuffer buffer = encoder.encode(value, null);\n\n\t\t\ttry {\n\t\t\t\tassertEquals(value, decoder.decode(buffer, null).intValue());\n\t\t\t} catch (ProtocolDecoderException e) {\n\t\t\t\tfail(\"Should not throw exception\");\n\t\t\t}\n\t\t}\n\t}\n","realPath":"codec/src/test/java/org/apache/mina/codec/delimited/ints/IntEncodingTest.java","repoName":"mina","snippetEndLine":0,"snippetStartLine":0,"startLine":70,"status":"B"},{"authorDate":"2013-04-23 16:18:14","commitOrder":1,"curCode":"\tpublic void testExtendedValues() {\n\t\tfor (int value : new int[] { 0, 1, 127, 128, 65536, 198649,\n\t\t\t\tInteger.MAX_VALUE }) {\n\n\t\t\tByteBuffer buffer = encoder.encode(value, null);\n\n\t\t\tfor (int i = 1; i < 5; i++) {\n\t\t\t\tint size = buffer.remaining() + i;\n\t\t\t\tByteBuffer extendedBuffer = ByteBuffer.allocate(size);\n\t\t\t\tint start = extendedBuffer.position();\n\t\t\t\textendedBuffer.put(buffer.slice());\n\t\t\t\textendedBuffer.position(start);\n\t\t\t\textendedBuffer.limit(start + size);\n\n\t\t\t\ttry {\n\t\t\t\t\tdecoder.decode(extendedBuffer, null);\n\t\t\t\t\tassertEquals(i, extendedBuffer.remaining());\n\t\t\t\t} catch (ProtocolDecoderException e) {\n\t\t\t\t\tfail(\"Should not throw exception\");\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n","date":"2013-05-08 03:07:21","endLine":106,"groupId":"430","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testExtendedValues","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mina-10-0.7/blobInfo/CC_OUT/blobs/14/d4f78a11dd5fd7409d2c112ffa1155f1505016.src","preCode":"\tpublic void testExtendedValues() {\n\t\tfor (int value : new int[] { 0, 1, 127, 128, 65536, 198649,\n\t\t\t\tInteger.MAX_VALUE }) {\n\n\t\t\tByteBuffer buffer = encoder.encode(value, null);\n\n\t\t\tfor (int i = 1; i < 5; i++) {\n\t\t\t\tint size = buffer.remaining() + i;\n\t\t\t\tByteBuffer extendedBuffer = ByteBuffer.allocate(size);\n\t\t\t\tint start = extendedBuffer.position();\n\t\t\t\textendedBuffer.put(buffer.slice());\n\t\t\t\textendedBuffer.position(start);\n\t\t\t\textendedBuffer.limit(start + size);\n\n\t\t\t\ttry {\n\t\t\t\t\tdecoder.decode(extendedBuffer, null);\n\t\t\t\t\tassertEquals(i, extendedBuffer.remaining());\n\t\t\t\t} catch (ProtocolDecoderException e) {\n\t\t\t\t\tfail(\"Should not throw exception\");\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n","realPath":"codec/src/test/java/org/apache/mina/codec/delimited/ints/IntEncodingTest.java","repoName":"mina","snippetEndLine":0,"snippetStartLine":0,"startLine":84,"status":"B"}],"commitId":"d3c080d325ca9b329f2bd1c36843192a2386edc8","commitMessage":"@@@base port of framed mina\n","date":"2013-05-08 03:07:21","modifiedFileCount":"0","status":"B","submitter":"Raphae?l P. Barazzutti"},{"authorTime":"2013-04-29 06:24:13","codes":[{"authorDate":"2013-04-29 06:24:13","commitOrder":2,"curCode":"    public void testSizedValues() {\n        for (int value : new int[] { 0, 1, 127, 128, 65536, 198649, Integer.MAX_VALUE }) {\n            ByteBuffer buffer = encoder.encode(value);\n\n            try {\n                assertEquals(value, decoder.decode(buffer).intValue());\n            } catch (ProtocolDecoderException e) {\n                fail(\"Should not throw exception\");\n            }\n        }\n    }\n","date":"2013-05-08 03:10:23","endLine":88,"groupId":"299","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testSizedValues","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mina-10-0.7/blobInfo/CC_OUT/blobs/36/4c3b482ff3ad74cad8f7f0b3fb058bbb468db5.src","preCode":"    public void testSizedValues() {\n        for (int value : new int[] { 0, 1, 127, 128, 65536, 198649, Integer.MAX_VALUE }) {\n            ByteBuffer buffer = encoder.encode(value, null);\n\n            try {\n                assertEquals(value, decoder.decode(buffer, null).intValue());\n            } catch (ProtocolDecoderException e) {\n                fail(\"Should not throw exception\");\n            }\n        }\n    }\n","realPath":"codec/src/test/java/org/apache/mina/codec/delimited/ints/IntEncodingTest.java","repoName":"mina","snippetEndLine":0,"snippetStartLine":0,"startLine":78,"status":"M"},{"authorDate":"2013-04-29 06:24:13","commitOrder":2,"curCode":"    public void testExtendedValues() {\n        for (int value : new int[] { 0, 1, 127, 128, 65536, 198649, Integer.MAX_VALUE }) {\n\n            ByteBuffer buffer = encoder.encode(value);\n\n            for (int i = 1; i < 5; i++) {\n                int size = buffer.remaining() + i;\n                ByteBuffer extendedBuffer = ByteBuffer.allocate(size);\n                int start = extendedBuffer.position();\n                extendedBuffer.put(buffer.slice());\n                extendedBuffer.position(start);\n                extendedBuffer.limit(start + size);\n\n                try {\n                    decoder.decode(extendedBuffer);\n                    assertEquals(i, extendedBuffer.remaining());\n                } catch (ProtocolDecoderException e) {\n                    fail(\"Should not throw exception\");\n                }\n            }\n        }\n    }\n","date":"2013-05-08 03:10:23","endLine":112,"groupId":"1271","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testExtendedValues","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mina-10-0.7/blobInfo/CC_OUT/blobs/36/4c3b482ff3ad74cad8f7f0b3fb058bbb468db5.src","preCode":"    public void testExtendedValues() {\n        for (int value : new int[] { 0, 1, 127, 128, 65536, 198649, Integer.MAX_VALUE }) {\n\n            ByteBuffer buffer = encoder.encode(value, null);\n\n            for (int i = 1; i < 5; i++) {\n                int size = buffer.remaining() + i;\n                ByteBuffer extendedBuffer = ByteBuffer.allocate(size);\n                int start = extendedBuffer.position();\n                extendedBuffer.put(buffer.slice());\n                extendedBuffer.position(start);\n                extendedBuffer.limit(start + size);\n\n                try {\n                    decoder.decode(extendedBuffer, null);\n                    assertEquals(i, extendedBuffer.remaining());\n                } catch (ProtocolDecoderException e) {\n                    fail(\"Should not throw exception\");\n                }\n            }\n        }\n    }\n","realPath":"codec/src/test/java/org/apache/mina/codec/delimited/ints/IntEncodingTest.java","repoName":"mina","snippetEndLine":0,"snippetStartLine":0,"startLine":91,"status":"M"}],"commitId":"baff7ce4f777463b24b0d8f6c4336826ec14b95b","commitMessage":"@@@various fixes\n","date":"2013-05-08 03:10:23","modifiedFileCount":"5","status":"M","submitter":"Raphae?l P. Barazzutti"},{"authorTime":"2013-07-04 03:11:53","codes":[{"authorDate":"2013-07-04 03:11:53","commitOrder":3,"curCode":"    public void testSizedValues() {\n        for (int value : new int[] { 0, 1, 127, 128, 65536, 198649, Integer.MAX_VALUE }) {\n            ByteBuffer buffer = encoder.encode(value);\n\n            try {\n                assertEquals(value, decoder.decode(IoBuffer.wrap(buffer)).intValue());\n            } catch (ProtocolDecoderException e) {\n                fail(\"Should not throw exception\");\n            }\n        }\n    }\n","date":"2013-07-04 06:39:46","endLine":90,"groupId":"102","id":5,"instanceNumber":1,"isCurCommit":1,"methodName":"testSizedValues","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mina-10-0.7/blobInfo/CC_OUT/blobs/01/9b44db1c4f33e64218eda214fe96b0eddb31b1.src","preCode":"    public void testSizedValues() {\n        for (int value : new int[] { 0, 1, 127, 128, 65536, 198649, Integer.MAX_VALUE }) {\n            ByteBuffer buffer = encoder.encode(value);\n\n            try {\n                assertEquals(value, decoder.decode(buffer).intValue());\n            } catch (ProtocolDecoderException e) {\n                fail(\"Should not throw exception\");\n            }\n        }\n    }\n","realPath":"codec/src/test/java/org/apache/mina/codec/delimited/ints/IntEncodingTest.java","repoName":"mina","snippetEndLine":0,"snippetStartLine":0,"startLine":80,"status":"M"},{"authorDate":"2013-07-04 03:11:53","commitOrder":3,"curCode":"    public void testExtendedValues() {\n        for (int value : new int[] { 0, 1, 127, 128, 65536, 198649, Integer.MAX_VALUE }) {\n\n            ByteBuffer buffer = encoder.encode(value);\n\n            for (int i = 1; i < 5; i++) {\n                int size = buffer.remaining() + i;\n                IoBuffer extendedBuffer = IoBuffer.wrap(ByteBuffer.allocate(size));\n                int start = extendedBuffer.position();\n                extendedBuffer.put(buffer.slice());\n                extendedBuffer.position(start);\n                extendedBuffer.limit(start + size);\n\n                try {\n                    decoder.decode(extendedBuffer);\n                    assertEquals(i, extendedBuffer.remaining());\n                } catch (ProtocolDecoderException e) {\n                    fail(\"Should not throw exception\");\n                }\n            }\n        }\n    }\n","date":"2013-07-04 06:39:46","endLine":114,"groupId":"102","id":6,"instanceNumber":2,"isCurCommit":1,"methodName":"testExtendedValues","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mina-10-0.7/blobInfo/CC_OUT/blobs/01/9b44db1c4f33e64218eda214fe96b0eddb31b1.src","preCode":"    public void testExtendedValues() {\n        for (int value : new int[] { 0, 1, 127, 128, 65536, 198649, Integer.MAX_VALUE }) {\n\n            ByteBuffer buffer = encoder.encode(value);\n\n            for (int i = 1; i < 5; i++) {\n                int size = buffer.remaining() + i;\n                ByteBuffer extendedBuffer = ByteBuffer.allocate(size);\n                int start = extendedBuffer.position();\n                extendedBuffer.put(buffer.slice());\n                extendedBuffer.position(start);\n                extendedBuffer.limit(start + size);\n\n                try {\n                    decoder.decode(extendedBuffer);\n                    assertEquals(i, extendedBuffer.remaining());\n                } catch (ProtocolDecoderException e) {\n                    fail(\"Should not throw exception\");\n                }\n            }\n        }\n    }\n","realPath":"codec/src/test/java/org/apache/mina/codec/delimited/ints/IntEncodingTest.java","repoName":"mina","snippetEndLine":0,"snippetStartLine":0,"startLine":93,"status":"M"}],"commitId":"ed49620224d1224956e1c23b84b29ddc52c9efd2","commitMessage":"@@@int serializations redesign and fixes\n","date":"2013-07-04 06:39:46","modifiedFileCount":"11","status":"M","submitter":"Raphae?l P. Barazzutti"}]
