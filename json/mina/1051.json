[{"authorTime":"2012-05-25 19:58:20","codes":[{"authorDate":"2012-05-25 19:58:20","commitOrder":1,"curCode":"    public synchronized void bind(final SocketAddress localAddress) throws IOException {\n        if (localAddress == null) {\n            \r\n            throw new IllegalArgumentException(\"LocalAdress cannot be null\");\n        }\n\n        \r\n        if (this.address != null) {\n            throw new IOException(\"address \" + address + \" already bound\");\n        }\n\n        LOG.info(\"binding address {}\", localAddress);\n        this.address = localAddress;\n\n        serverChannel = ServerSocketChannel.open();\n        serverChannel.socket().setReuseAddress(isReuseAddress());\n        serverChannel.socket().bind(address);\n        serverChannel.configureBlocking(false);\n\n        acceptProcessor = this.strategy.getSelectorForBindNewAddress();\n\n        acceptProcessor.addServer(this);\n\n        \r\n        this.fireServiceActivated();\n    }\n","date":"2012-05-25 19:58:20","endLine":102,"groupId":"2373","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"bind","params":"(finalSocketAddresslocalAddress)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mina-10-0.7/blobInfo/CC_OUT/blobs/bc/1cd1b0dca0db607425b584a3a044bd97d0ba5f.src","preCode":"    public synchronized void bind(final SocketAddress localAddress) throws IOException {\n        if (localAddress == null) {\n            \r\n            throw new IllegalArgumentException(\"LocalAdress cannot be null\");\n        }\n\n        \r\n        if (this.address != null) {\n            throw new IOException(\"address \" + address + \" already bound\");\n        }\n\n        LOG.info(\"binding address {}\", localAddress);\n        this.address = localAddress;\n\n        serverChannel = ServerSocketChannel.open();\n        serverChannel.socket().setReuseAddress(isReuseAddress());\n        serverChannel.socket().bind(address);\n        serverChannel.configureBlocking(false);\n\n        acceptProcessor = this.strategy.getSelectorForBindNewAddress();\n\n        acceptProcessor.addServer(this);\n\n        \r\n        this.fireServiceActivated();\n    }\n","realPath":"core/src/main/java/org/apache/mina/transport/nio/NioTcpServer.java","repoName":"mina","snippetEndLine":0,"snippetStartLine":0,"startLine":77,"status":"B"},{"authorDate":"2012-05-25 19:58:20","commitOrder":1,"curCode":"    public void bind(SocketAddress localAddress) throws IOException {\n        if (localAddress == null) {\n            \r\n            throw new IllegalArgumentException(\"LocalAdress cannot be null\");\n        }\n\n        \r\n        if (this.address != null) {\n            throw new IOException(\"address \" + address + \" already bound\");\n        }\n        address = localAddress;\n\n        LOG.info(\"binding address {}\", localAddress);\n\n        datagramChannel = DatagramChannel.open();\n\n        datagramChannel.socket().setReuseAddress(isReuseAddress());\n        datagramChannel.socket().bind(address);\n        datagramChannel.configureBlocking(false);\n\n        processor = this.strategy.getSelectorForBindNewAddress();\n\n        processor.addServer(this);\n\n        \r\n        this.fireServiceActivated();\n    }\n","date":"2012-05-25 19:58:20","endLine":128,"groupId":"393","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"bind","params":"(SocketAddresslocalAddress)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mina-10-0.7/blobInfo/CC_OUT/blobs/25/1dc9a7e67c9b3733bb8615c73c4096df979e2e.src","preCode":"    public void bind(SocketAddress localAddress) throws IOException {\n        if (localAddress == null) {\n            \r\n            throw new IllegalArgumentException(\"LocalAdress cannot be null\");\n        }\n\n        \r\n        if (this.address != null) {\n            throw new IOException(\"address \" + address + \" already bound\");\n        }\n        address = localAddress;\n\n        LOG.info(\"binding address {}\", localAddress);\n\n        datagramChannel = DatagramChannel.open();\n\n        datagramChannel.socket().setReuseAddress(isReuseAddress());\n        datagramChannel.socket().bind(address);\n        datagramChannel.configureBlocking(false);\n\n        processor = this.strategy.getSelectorForBindNewAddress();\n\n        processor.addServer(this);\n\n        \r\n        this.fireServiceActivated();\n    }\n","realPath":"core/src/main/java/org/apache/mina/transport/nio/NioUdpServer.java","repoName":"mina","snippetEndLine":0,"snippetStartLine":0,"startLine":102,"status":"B"}],"commitId":"e2047bfca8b41a5bf23d3925a5a24144a657b6d4","commitMessage":"@@@* flattened the nio hierarchy for sharing bits between UDP and TCP NIO implementation\n* moved some logic to the servers & session\n* read datagram events\n\ngit-svn-id: https://svn.apache.org/repos/asf/mina/trunk@1342586 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2012-05-25 19:58:20","modifiedFileCount":"8","status":"B","submitter":"Julien Vermillard"},{"authorTime":"2012-09-30 23:35:05","codes":[{"authorDate":"2012-09-30 23:35:05","commitOrder":2,"curCode":"    public synchronized void bind(final SocketAddress localAddress) throws IOException {\n        if (localAddress == null) {\n            \r\n            throw new IllegalArgumentException(\"LocalAdress cannot be null\");\n        }\n\n        \r\n        if (this.address != null) {\n            throw new IOException(\"address \" + address + \" already bound\");\n        }\n\n        LOG.info(\"binding address {}\", localAddress);\n        this.address = localAddress;\n\n        serverChannel = ServerSocketChannel.open();\n        serverChannel.socket().setReuseAddress(isReuseAddress());\n        serverChannel.socket().bind(address);\n        serverChannel.configureBlocking(false);\n\n        acceptSelectorLoop.register(true, false, false, this, serverChannel);\n\n        \r\n        this.fireServiceActivated();\n\n        \r\n        acceptSelectorLoop.incrementServiceCount();\n    }\n","date":"2012-09-30 23:35:05","endLine":108,"groupId":"2373","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"bind","params":"(finalSocketAddresslocalAddress)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mina-10-0.7/blobInfo/CC_OUT/blobs/2a/3e602c11784fa71c1326456d0ef73f1749a066.src","preCode":"    public synchronized void bind(final SocketAddress localAddress) throws IOException {\n        if (localAddress == null) {\n            \r\n            throw new IllegalArgumentException(\"LocalAdress cannot be null\");\n        }\n\n        \r\n        if (this.address != null) {\n            throw new IOException(\"address \" + address + \" already bound\");\n        }\n\n        LOG.info(\"binding address {}\", localAddress);\n        this.address = localAddress;\n\n        serverChannel = ServerSocketChannel.open();\n        serverChannel.socket().setReuseAddress(isReuseAddress());\n        serverChannel.socket().bind(address);\n        serverChannel.configureBlocking(false);\n\n        acceptProcessor = this.strategy.getSelectorForBindNewAddress();\n\n        acceptProcessor.addServer(this);\n\n        \r\n        this.fireServiceActivated();\n    }\n","realPath":"core/src/main/java/org/apache/mina/transport/nio/NioTcpServer.java","repoName":"mina","snippetEndLine":0,"snippetStartLine":0,"startLine":82,"status":"M"},{"authorDate":"2012-09-30 23:35:05","commitOrder":2,"curCode":"    public void bind(SocketAddress localAddress) throws IOException {\n        if (localAddress == null) {\n            \r\n            throw new IllegalArgumentException(\"LocalAdress cannot be null\");\n        }\n\n        \r\n        if (this.address != null) {\n            throw new IOException(\"address \" + address + \" already bound\");\n        }\n        address = localAddress;\n\n        LOG.info(\"binding address {}\", localAddress);\n\n        datagramChannel = DatagramChannel.open();\n\n        datagramChannel.socket().setReuseAddress(isReuseAddress());\n        datagramChannel.socket().bind(address);\n        datagramChannel.configureBlocking(false);\n\n        selectorLoop.register(false, true, false, this, datagramChannel);\n        selectorLoop.incrementServiceCount();\n\n        \r\n        this.fireServiceActivated();\n    }\n","date":"2012-09-30 23:35:05","endLine":128,"groupId":"393","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"bind","params":"(SocketAddresslocalAddress)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mina-10-0.7/blobInfo/CC_OUT/blobs/ac/0eb98dd151a8ca1f0ac7884d32d74fa92ca731.src","preCode":"    public void bind(SocketAddress localAddress) throws IOException {\n        if (localAddress == null) {\n            \r\n            throw new IllegalArgumentException(\"LocalAdress cannot be null\");\n        }\n\n        \r\n        if (this.address != null) {\n            throw new IOException(\"address \" + address + \" already bound\");\n        }\n        address = localAddress;\n\n        LOG.info(\"binding address {}\", localAddress);\n\n        datagramChannel = DatagramChannel.open();\n\n        datagramChannel.socket().setReuseAddress(isReuseAddress());\n        datagramChannel.socket().bind(address);\n        datagramChannel.configureBlocking(false);\n\n        processor = this.strategy.getSelectorForBindNewAddress();\n\n        processor.addServer(this);\n\n        \r\n        this.fireServiceActivated();\n    }\n","realPath":"core/src/main/java/org/apache/mina/transport/nio/NioUdpServer.java","repoName":"mina","snippetEndLine":0,"snippetStartLine":0,"startLine":103,"status":"M"}],"commitId":"a09ad9d2ef0c18aeeed411c719d3b881496a137e","commitMessage":"@@@major rework of NioSelector\n\ngit-svn-id: https://svn.apache.org/repos/asf/mina/trunk@1392037 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2012-09-30 23:35:05","modifiedFileCount":"12","status":"M","submitter":"Julien Vermillard"},{"authorTime":"2012-09-30 23:35:05","codes":[{"authorDate":"2012-11-07 20:02:09","commitOrder":3,"curCode":"    public synchronized void bind(final SocketAddress localAddress) throws IOException {\n        if (localAddress == null) {\n            \r\n            throw new IllegalArgumentException(\"LocalAdress cannot be null\");\n        }\n\n        \r\n        if (this.address != null) {\n            throw new IOException(\"address \" + address + \" already bound\");\n        }\n\n        LOG.info(\"binding address {}\", localAddress);\n        this.address = localAddress;\n\n        serverChannel = ServerSocketChannel.open();\n        serverChannel.socket().setReuseAddress(isReuseAddress());\n        serverChannel.socket().bind(address);\n        serverChannel.configureBlocking(false);\n\n        acceptSelectorLoop.register(true, false, false, this, serverChannel);\n\n        idleChecker = new IndexedIdleChecker();\n        idleChecker.start();\n\n        \r\n        this.fireServiceActivated();\n\n        \r\n        acceptSelectorLoop.incrementServiceCount();\n    }\n","date":"2012-11-07 20:02:09","endLine":126,"groupId":"2373","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"bind","params":"(finalSocketAddresslocalAddress)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mina-10-0.7/blobInfo/CC_OUT/blobs/a6/17cb7cd051ad874699e2bce4c4c40757cca29f.src","preCode":"    public synchronized void bind(final SocketAddress localAddress) throws IOException {\n        if (localAddress == null) {\n            \r\n            throw new IllegalArgumentException(\"LocalAdress cannot be null\");\n        }\n\n        \r\n        if (this.address != null) {\n            throw new IOException(\"address \" + address + \" already bound\");\n        }\n\n        LOG.info(\"binding address {}\", localAddress);\n        this.address = localAddress;\n\n        serverChannel = ServerSocketChannel.open();\n        serverChannel.socket().setReuseAddress(isReuseAddress());\n        serverChannel.socket().bind(address);\n        serverChannel.configureBlocking(false);\n\n        acceptSelectorLoop.register(true, false, false, this, serverChannel);\n\n        \r\n        this.fireServiceActivated();\n\n        \r\n        acceptSelectorLoop.incrementServiceCount();\n    }\n","realPath":"core/src/main/java/org/apache/mina/transport/nio/NioTcpServer.java","repoName":"mina","snippetEndLine":0,"snippetStartLine":0,"startLine":97,"status":"M"},{"authorDate":"2012-09-30 23:35:05","commitOrder":3,"curCode":"    public void bind(SocketAddress localAddress) throws IOException {\n        if (localAddress == null) {\n            \r\n            throw new IllegalArgumentException(\"LocalAdress cannot be null\");\n        }\n\n        \r\n        if (this.address != null) {\n            throw new IOException(\"address \" + address + \" already bound\");\n        }\n        address = localAddress;\n\n        LOG.info(\"binding address {}\", localAddress);\n\n        datagramChannel = DatagramChannel.open();\n\n        datagramChannel.socket().setReuseAddress(isReuseAddress());\n        datagramChannel.socket().bind(address);\n        datagramChannel.configureBlocking(false);\n\n        selectorLoop.register(false, true, false, this, datagramChannel);\n        selectorLoop.incrementServiceCount();\n\n        \r\n        this.fireServiceActivated();\n    }\n","date":"2012-09-30 23:35:05","endLine":128,"groupId":"393","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"bind","params":"(SocketAddresslocalAddress)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mina-10-0.7/blobInfo/CC_OUT/blobs/ac/0eb98dd151a8ca1f0ac7884d32d74fa92ca731.src","preCode":"    public void bind(SocketAddress localAddress) throws IOException {\n        if (localAddress == null) {\n            \r\n            throw new IllegalArgumentException(\"LocalAdress cannot be null\");\n        }\n\n        \r\n        if (this.address != null) {\n            throw new IOException(\"address \" + address + \" already bound\");\n        }\n        address = localAddress;\n\n        LOG.info(\"binding address {}\", localAddress);\n\n        datagramChannel = DatagramChannel.open();\n\n        datagramChannel.socket().setReuseAddress(isReuseAddress());\n        datagramChannel.socket().bind(address);\n        datagramChannel.configureBlocking(false);\n\n        selectorLoop.register(false, true, false, this, datagramChannel);\n        selectorLoop.incrementServiceCount();\n\n        \r\n        this.fireServiceActivated();\n    }\n","realPath":"core/src/main/java/org/apache/mina/transport/nio/NioUdpServer.java","repoName":"mina","snippetEndLine":0,"snippetStartLine":0,"startLine":103,"status":"N"}],"commitId":"71cf543247fcaabbf4dfd54a1cc66d0ddf5a53d8","commitMessage":"@@@now idle checker use its own thread\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/mina/mina/trunk@1406579 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2012-11-07 20:02:09","modifiedFileCount":"5","status":"M","submitter":"Julien Vermillard"},{"authorTime":"2012-11-08 18:43:24","codes":[{"authorDate":"2012-11-08 18:43:24","commitOrder":4,"curCode":"    public synchronized void bind(final SocketAddress localAddress) throws IOException {\n        if (localAddress == null) {\n            \r\n            throw new IllegalArgumentException(\"LocalAdress cannot be null\");\n        }\n\n        \r\n        if (this.address != null) {\n            throw new IOException(\"address \" + address + \" already bound\");\n        }\n\n        LOG.info(\"binding address {}\", localAddress);\n        this.address = localAddress;\n\n        serverChannel = ServerSocketChannel.open();\n        serverChannel.socket().setReuseAddress(isReuseAddress());\n        serverChannel.socket().bind(address);\n        serverChannel.configureBlocking(false);\n\n        acceptSelectorLoop.register(true, false, false, this, serverChannel);\n\n        idleChecker = new IndexedIdleChecker();\n        idleChecker.start();\n\n        \r\n        this.fireServiceActivated();\n    }\n","date":"2012-11-08 18:43:24","endLine":123,"groupId":"2373","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"bind","params":"(finalSocketAddresslocalAddress)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mina-10-0.7/blobInfo/CC_OUT/blobs/54/41691fc80cfec3a34d1ab4c607ee2ebeab2676.src","preCode":"    public synchronized void bind(final SocketAddress localAddress) throws IOException {\n        if (localAddress == null) {\n            \r\n            throw new IllegalArgumentException(\"LocalAdress cannot be null\");\n        }\n\n        \r\n        if (this.address != null) {\n            throw new IOException(\"address \" + address + \" already bound\");\n        }\n\n        LOG.info(\"binding address {}\", localAddress);\n        this.address = localAddress;\n\n        serverChannel = ServerSocketChannel.open();\n        serverChannel.socket().setReuseAddress(isReuseAddress());\n        serverChannel.socket().bind(address);\n        serverChannel.configureBlocking(false);\n\n        acceptSelectorLoop.register(true, false, false, this, serverChannel);\n\n        idleChecker = new IndexedIdleChecker();\n        idleChecker.start();\n\n        \r\n        this.fireServiceActivated();\n\n        \r\n        acceptSelectorLoop.incrementServiceCount();\n    }\n","realPath":"core/src/main/java/org/apache/mina/transport/nio/NioTcpServer.java","repoName":"mina","snippetEndLine":0,"snippetStartLine":0,"startLine":97,"status":"M"},{"authorDate":"2012-11-08 18:43:24","commitOrder":4,"curCode":"    public void bind(final SocketAddress localAddress) throws IOException {\n        if (localAddress == null) {\n            \r\n            throw new IllegalArgumentException(\"LocalAdress cannot be null\");\n        }\n\n        \r\n        if (this.address != null) {\n            throw new IOException(\"address \" + address + \" already bound\");\n        }\n        address = localAddress;\n\n        LOG.info(\"binding address {}\", localAddress);\n\n        datagramChannel = DatagramChannel.open();\n\n        datagramChannel.socket().setReuseAddress(isReuseAddress());\n        datagramChannel.socket().bind(address);\n        datagramChannel.configureBlocking(false);\n\n        selectorLoop.register(false, true, false, this, datagramChannel);\n\n        \r\n        this.fireServiceActivated();\n    }\n","date":"2012-11-08 18:43:24","endLine":126,"groupId":"393","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"bind","params":"(finalSocketAddresslocalAddress)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mina-10-0.7/blobInfo/CC_OUT/blobs/c4/647dee01f5c9a461751d59ace4f204435be19f.src","preCode":"    public void bind(SocketAddress localAddress) throws IOException {\n        if (localAddress == null) {\n            \r\n            throw new IllegalArgumentException(\"LocalAdress cannot be null\");\n        }\n\n        \r\n        if (this.address != null) {\n            throw new IOException(\"address \" + address + \" already bound\");\n        }\n        address = localAddress;\n\n        LOG.info(\"binding address {}\", localAddress);\n\n        datagramChannel = DatagramChannel.open();\n\n        datagramChannel.socket().setReuseAddress(isReuseAddress());\n        datagramChannel.socket().bind(address);\n        datagramChannel.configureBlocking(false);\n\n        selectorLoop.register(false, true, false, this, datagramChannel);\n        selectorLoop.incrementServiceCount();\n\n        \r\n        this.fireServiceActivated();\n    }\n","realPath":"core/src/main/java/org/apache/mina/transport/nio/NioUdpServer.java","repoName":"mina","snippetEndLine":0,"snippetStartLine":0,"startLine":102,"status":"M"}],"commitId":"a685b2574da2424f2edf8a7b9d9384ad40ff209f","commitMessage":"@@@ * fixed a dead lock on registration\n * no more select timeout\n * selector are started before the first connection\n * added the messageSent event \n\n\ngit-svn-id: https://svn.apache.org/repos/asf/mina/mina/trunk@1407005 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2012-11-08 18:43:24","modifiedFileCount":"13","status":"M","submitter":"Julien Vermillard"},{"authorTime":"2012-12-28 21:01:20","codes":[{"authorDate":"2012-12-28 21:01:20","commitOrder":5,"curCode":"    public synchronized void bind(final SocketAddress localAddress) throws IOException {\n        Assert.assertNotNull(localAddress, \"localAddress\");\n\n        \r\n        if (this.address != null) {\n            throw new IOException(\"address \" + address + \" already bound\");\n        }\n\n        LOG.info(\"binding address {}\", localAddress);\n        this.address = localAddress;\n\n        serverChannel = ServerSocketChannel.open();\n        serverChannel.socket().setReuseAddress(isReuseAddress());\n        serverChannel.socket().bind(address);\n        serverChannel.configureBlocking(false);\n\n        acceptSelectorLoop.register(true, false, false, false, this, serverChannel, null);\n\n        idleChecker = new IndexedIdleChecker();\n        idleChecker.start();\n\n        \r\n        this.fireServiceActivated();\n    }\n","date":"2012-12-28 21:01:20","endLine":154,"groupId":"2373","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"bind","params":"(finalSocketAddresslocalAddress)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mina-10-0.7/blobInfo/CC_OUT/blobs/66/aab399ded6c08c14cf2ca3984029a855d81789.src","preCode":"    public synchronized void bind(final SocketAddress localAddress) throws IOException {\n        if (localAddress == null) {\n            \r\n            throw new IllegalArgumentException(\"LocalAdress cannot be null\");\n        }\n\n        \r\n        if (this.address != null) {\n            throw new IOException(\"address \" + address + \" already bound\");\n        }\n\n        LOG.info(\"binding address {}\", localAddress);\n        this.address = localAddress;\n\n        serverChannel = ServerSocketChannel.open();\n        serverChannel.socket().setReuseAddress(isReuseAddress());\n        serverChannel.socket().bind(address);\n        serverChannel.configureBlocking(false);\n\n        acceptSelectorLoop.register(true, false, false, this, serverChannel);\n\n        idleChecker = new IndexedIdleChecker();\n        idleChecker.start();\n\n        \r\n        this.fireServiceActivated();\n    }\n","realPath":"core/src/main/java/org/apache/mina/transport/nio/NioTcpServer.java","repoName":"mina","snippetEndLine":0,"snippetStartLine":0,"startLine":131,"status":"M"},{"authorDate":"2012-12-28 21:01:20","commitOrder":5,"curCode":"    public void bind(final SocketAddress localAddress) throws IOException {\n        if (localAddress == null) {\n            \r\n            throw new IllegalArgumentException(\"LocalAdress cannot be null\");\n        }\n\n        \r\n        if (this.address != null) {\n            throw new IOException(\"address \" + address + \" already bound\");\n        }\n        address = localAddress;\n\n        LOG.info(\"binding address {}\", localAddress);\n\n        datagramChannel = DatagramChannel.open();\n\n        datagramChannel.socket().setReuseAddress(isReuseAddress());\n        datagramChannel.socket().bind(address);\n        datagramChannel.configureBlocking(false);\n\n        selectorLoop.register(false, false, true, false, this, datagramChannel, null);\n\n        \r\n        this.fireServiceActivated();\n    }\n","date":"2012-12-28 21:01:20","endLine":136,"groupId":"393","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"bind","params":"(finalSocketAddresslocalAddress)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mina-10-0.7/blobInfo/CC_OUT/blobs/5b/032ab5add4fdab840e124863216acda08c21a8.src","preCode":"    public void bind(final SocketAddress localAddress) throws IOException {\n        if (localAddress == null) {\n            \r\n            throw new IllegalArgumentException(\"LocalAdress cannot be null\");\n        }\n\n        \r\n        if (this.address != null) {\n            throw new IOException(\"address \" + address + \" already bound\");\n        }\n        address = localAddress;\n\n        LOG.info(\"binding address {}\", localAddress);\n\n        datagramChannel = DatagramChannel.open();\n\n        datagramChannel.socket().setReuseAddress(isReuseAddress());\n        datagramChannel.socket().bind(address);\n        datagramChannel.configureBlocking(false);\n\n        selectorLoop.register(false, true, false, this, datagramChannel);\n\n        \r\n        this.fireServiceActivated();\n    }\n","realPath":"core/src/main/java/org/apache/mina/transport/nio/NioUdpServer.java","repoName":"mina","snippetEndLine":0,"snippetStartLine":0,"startLine":112,"status":"M"}],"commitId":"c216982db793cf2423b5672921d6daf30c6fb563","commitMessage":"@@@TCP client (WIP)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/mina/mina/trunk@1426490 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2012-12-28 21:01:20","modifiedFileCount":"15","status":"M","submitter":"Julien Vermillard"},{"authorTime":"2013-03-21 16:34:15","codes":[{"authorDate":"2012-12-28 21:01:20","commitOrder":6,"curCode":"    public synchronized void bind(final SocketAddress localAddress) throws IOException {\n        Assert.assertNotNull(localAddress, \"localAddress\");\n\n        \r\n        if (this.address != null) {\n            throw new IOException(\"address \" + address + \" already bound\");\n        }\n\n        LOG.info(\"binding address {}\", localAddress);\n        this.address = localAddress;\n\n        serverChannel = ServerSocketChannel.open();\n        serverChannel.socket().setReuseAddress(isReuseAddress());\n        serverChannel.socket().bind(address);\n        serverChannel.configureBlocking(false);\n\n        acceptSelectorLoop.register(true, false, false, false, this, serverChannel, null);\n\n        idleChecker = new IndexedIdleChecker();\n        idleChecker.start();\n\n        \r\n        this.fireServiceActivated();\n    }\n","date":"2012-12-28 21:01:20","endLine":154,"groupId":"2373","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"bind","params":"(finalSocketAddresslocalAddress)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mina-10-0.7/blobInfo/CC_OUT/blobs/66/aab399ded6c08c14cf2ca3984029a855d81789.src","preCode":"    public synchronized void bind(final SocketAddress localAddress) throws IOException {\n        Assert.assertNotNull(localAddress, \"localAddress\");\n\n        \r\n        if (this.address != null) {\n            throw new IOException(\"address \" + address + \" already bound\");\n        }\n\n        LOG.info(\"binding address {}\", localAddress);\n        this.address = localAddress;\n\n        serverChannel = ServerSocketChannel.open();\n        serverChannel.socket().setReuseAddress(isReuseAddress());\n        serverChannel.socket().bind(address);\n        serverChannel.configureBlocking(false);\n\n        acceptSelectorLoop.register(true, false, false, false, this, serverChannel, null);\n\n        idleChecker = new IndexedIdleChecker();\n        idleChecker.start();\n\n        \r\n        this.fireServiceActivated();\n    }\n","realPath":"core/src/main/java/org/apache/mina/transport/nio/NioTcpServer.java","repoName":"mina","snippetEndLine":0,"snippetStartLine":0,"startLine":131,"status":"N"},{"authorDate":"2013-03-21 16:34:15","commitOrder":6,"curCode":"    public void bind(final SocketAddress localAddress) throws IOException {\n        if (localAddress == null) {\n            \r\n            throw new IllegalArgumentException(\"LocalAdress cannot be null\");\n        }\n\n        \r\n        if (this.address != null) {\n            throw new IOException(\"address \" + address + \" already bound\");\n        }\n        address = localAddress;\n\n        LOG.info(\"binding address {}\", localAddress);\n\n        datagramChannel = DatagramChannel.open();\n\n        datagramChannel.socket().setReuseAddress(isReuseAddress());\n        datagramChannel.socket().bind(address);\n        datagramChannel.configureBlocking(false);\n\n        acceptSelectorLoop.register(false, false, true, false, this, datagramChannel, null);\n\n        \r\n        this.fireServiceActivated();\n    }\n","date":"2013-03-21 16:34:15","endLine":208,"groupId":"393","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"bind","params":"(finalSocketAddresslocalAddress)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mina-10-0.7/blobInfo/CC_OUT/blobs/23/66e1a1d2e79687b0e6d82e27e76b3375249635.src","preCode":"    public void bind(final SocketAddress localAddress) throws IOException {\n        if (localAddress == null) {\n            \r\n            throw new IllegalArgumentException(\"LocalAdress cannot be null\");\n        }\n\n        \r\n        if (this.address != null) {\n            throw new IOException(\"address \" + address + \" already bound\");\n        }\n        address = localAddress;\n\n        LOG.info(\"binding address {}\", localAddress);\n\n        datagramChannel = DatagramChannel.open();\n\n        datagramChannel.socket().setReuseAddress(isReuseAddress());\n        datagramChannel.socket().bind(address);\n        datagramChannel.configureBlocking(false);\n\n        selectorLoop.register(false, false, true, false, this, datagramChannel, null);\n\n        \r\n        this.fireServiceActivated();\n    }\n","realPath":"core/src/main/java/org/apache/mina/transport/nio/NioUdpServer.java","repoName":"mina","snippetEndLine":0,"snippetStartLine":0,"startLine":184,"status":"M"}],"commitId":"638f2abd2f4c39e19fe4660164a5e9bd1fd8a6ae","commitMessage":"@@@o Injected the IoSessionConfig in the Tcp and Udp server constructors\no Moved the config to the AbstractIoServer class\no Moved all the DefaultTcpSessionConfig fields to teh top of the class\n","date":"2013-03-21 16:34:15","modifiedFileCount":"7","status":"M","submitter":"Emmanuel L?charny"},{"authorTime":"2013-03-22 21:04:48","codes":[{"authorDate":"2012-12-28 21:01:20","commitOrder":7,"curCode":"    public synchronized void bind(final SocketAddress localAddress) throws IOException {\n        Assert.assertNotNull(localAddress, \"localAddress\");\n\n        \r\n        if (this.address != null) {\n            throw new IOException(\"address \" + address + \" already bound\");\n        }\n\n        LOG.info(\"binding address {}\", localAddress);\n        this.address = localAddress;\n\n        serverChannel = ServerSocketChannel.open();\n        serverChannel.socket().setReuseAddress(isReuseAddress());\n        serverChannel.socket().bind(address);\n        serverChannel.configureBlocking(false);\n\n        acceptSelectorLoop.register(true, false, false, false, this, serverChannel, null);\n\n        idleChecker = new IndexedIdleChecker();\n        idleChecker.start();\n\n        \r\n        this.fireServiceActivated();\n    }\n","date":"2012-12-28 21:01:20","endLine":154,"groupId":"2373","id":13,"instanceNumber":1,"isCurCommit":0,"methodName":"bind","params":"(finalSocketAddresslocalAddress)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mina-10-0.7/blobInfo/CC_OUT/blobs/66/aab399ded6c08c14cf2ca3984029a855d81789.src","preCode":"    public synchronized void bind(final SocketAddress localAddress) throws IOException {\n        Assert.assertNotNull(localAddress, \"localAddress\");\n\n        \r\n        if (this.address != null) {\n            throw new IOException(\"address \" + address + \" already bound\");\n        }\n\n        LOG.info(\"binding address {}\", localAddress);\n        this.address = localAddress;\n\n        serverChannel = ServerSocketChannel.open();\n        serverChannel.socket().setReuseAddress(isReuseAddress());\n        serverChannel.socket().bind(address);\n        serverChannel.configureBlocking(false);\n\n        acceptSelectorLoop.register(true, false, false, false, this, serverChannel, null);\n\n        idleChecker = new IndexedIdleChecker();\n        idleChecker.start();\n\n        \r\n        this.fireServiceActivated();\n    }\n","realPath":"core/src/main/java/org/apache/mina/transport/nio/NioTcpServer.java","repoName":"mina","snippetEndLine":0,"snippetStartLine":0,"startLine":131,"status":"N"},{"authorDate":"2013-03-22 21:04:48","commitOrder":7,"curCode":"    public void bind(final SocketAddress localAddress) throws IOException {\n        if (localAddress == null) {\n            \r\n            throw new IllegalArgumentException(\"LocalAdress cannot be null\");\n        }\n\n        \r\n        if (this.address != null) {\n            throw new IOException(\"address \" + address + \" already bound\");\n        }\n        address = localAddress;\n\n        LOG.info(\"binding address {}\", localAddress);\n\n        datagramChannel = DatagramChannel.open();\n\n        datagramChannel.socket().setReuseAddress(isReuseAddress());\n        datagramChannel.socket().bind(address);\n        datagramChannel.configureBlocking(false);\n\n        readSelectorLoop.register(false, false, true, false, this, datagramChannel, null);\n\n        \r\n        this.fireServiceActivated();\n    }\n","date":"2013-03-22 21:04:48","endLine":170,"groupId":"393","id":14,"instanceNumber":2,"isCurCommit":0,"methodName":"bind","params":"(finalSocketAddresslocalAddress)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mina-10-0.7/blobInfo/CC_OUT/blobs/93/90bf5c7c94f887e07afb21faea25ea2cda5b8a.src","preCode":"    public void bind(final SocketAddress localAddress) throws IOException {\n        if (localAddress == null) {\n            \r\n            throw new IllegalArgumentException(\"LocalAdress cannot be null\");\n        }\n\n        \r\n        if (this.address != null) {\n            throw new IOException(\"address \" + address + \" already bound\");\n        }\n        address = localAddress;\n\n        LOG.info(\"binding address {}\", localAddress);\n\n        datagramChannel = DatagramChannel.open();\n\n        datagramChannel.socket().setReuseAddress(isReuseAddress());\n        datagramChannel.socket().bind(address);\n        datagramChannel.configureBlocking(false);\n\n        acceptSelectorLoop.register(false, false, true, false, this, datagramChannel, null);\n\n        \r\n        this.fireServiceActivated();\n    }\n","realPath":"core/src/main/java/org/apache/mina/transport/nio/NioUdpServer.java","repoName":"mina","snippetEndLine":0,"snippetStartLine":0,"startLine":146,"status":"M"}],"commitId":"6426f182d8092d925864f8a76e7d170f82c66e46","commitMessage":"@@@o Removed some final keyword\no Implemented the first part of the NioUdpServer : handling new session","date":"2013-03-22 21:04:48","modifiedFileCount":"2","status":"M","submitter":"Emmanuel L?charny"},{"authorTime":"2013-06-06 21:33:33","codes":[{"authorDate":"2013-06-06 21:33:33","commitOrder":8,"curCode":"    public synchronized void bind(final SocketAddress localAddress) {\n        Assert.assertNotNull(localAddress, \"localAddress\");\n\n        \r\n        if (this.address != null) {\n            throw new IllegalStateException(\"address \" + address + \" already bound\");\n        }\n\n        LOG.info(\"binding address {}\", localAddress);\n        this.address = localAddress;\n\n        try {\n            serverChannel = ServerSocketChannel.open();\n            serverChannel.socket().setReuseAddress(isReuseAddress());\n            serverChannel.socket().bind(address);\n            serverChannel.configureBlocking(false);\n        } catch (IOException e) {\n            throw new MinaRuntimeException(\"can't bind address\" + address, e);\n        }\n\n        acceptSelectorLoop.register(true, false, false, false, this, serverChannel, null);\n\n        idleChecker = new IndexedIdleChecker();\n        idleChecker.start();\n\n        \r\n        this.fireServiceActivated();\n    }\n","date":"2013-06-06 21:33:33","endLine":200,"groupId":"0","id":15,"instanceNumber":1,"isCurCommit":0,"methodName":"bind","params":"(finalSocketAddresslocalAddress)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mina-10-0.7/blobInfo/CC_OUT/blobs/20/31a08cbdb1a17210b3fdf1e6088453340ee082.src","preCode":"    public synchronized void bind(final SocketAddress localAddress) throws IOException {\n        Assert.assertNotNull(localAddress, \"localAddress\");\n\n        \r\n        if (this.address != null) {\n            throw new IOException(\"address \" + address + \" already bound\");\n        }\n\n        LOG.info(\"binding address {}\", localAddress);\n        this.address = localAddress;\n\n        serverChannel = ServerSocketChannel.open();\n        serverChannel.socket().setReuseAddress(isReuseAddress());\n        serverChannel.socket().bind(address);\n        serverChannel.configureBlocking(false);\n\n        acceptSelectorLoop.register(true, false, false, false, this, serverChannel, null);\n\n        idleChecker = new IndexedIdleChecker();\n        idleChecker.start();\n\n        \r\n        this.fireServiceActivated();\n    }\n","realPath":"core/src/main/java/org/apache/mina/transport/nio/NioTcpServer.java","repoName":"mina","snippetEndLine":0,"snippetStartLine":0,"startLine":173,"status":"M"},{"authorDate":"2013-06-06 21:33:33","commitOrder":8,"curCode":"    public void bind(final SocketAddress localAddress) {\n        if (localAddress == null) {\n            \r\n            throw new IllegalArgumentException(\"LocalAdress cannot be null\");\n        }\n\n        \r\n        if (this.address != null) {\n            throw new IllegalStateException(\"address \" + address + \" already bound\");\n        }\n        address = localAddress;\n\n        LOG.info(\"binding address {}\", localAddress);\n\n        try {\n            datagramChannel = DatagramChannel.open();\n            datagramChannel.socket().setReuseAddress(isReuseAddress());\n            datagramChannel.socket().bind(address);\n            datagramChannel.configureBlocking(false);\n        } catch (IOException e) {\n            throw new MinaRuntimeException(\"can't open the address \" + address, e);\n        }\n\n        readSelectorLoop.register(false, false, true, false, this, datagramChannel, null);\n\n        \r\n        this.fireServiceActivated();\n    }\n","date":"2013-06-06 21:33:33","endLine":175,"groupId":"0","id":16,"instanceNumber":2,"isCurCommit":1,"methodName":"bind","params":"(finalSocketAddresslocalAddress)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mina-10-0.7/blobInfo/CC_OUT/blobs/62/cf5207910a43bf8f7e59114219c26194ebd237.src","preCode":"    public void bind(final SocketAddress localAddress) throws IOException {\n        if (localAddress == null) {\n            \r\n            throw new IllegalArgumentException(\"LocalAdress cannot be null\");\n        }\n\n        \r\n        if (this.address != null) {\n            throw new IOException(\"address \" + address + \" already bound\");\n        }\n        address = localAddress;\n\n        LOG.info(\"binding address {}\", localAddress);\n\n        datagramChannel = DatagramChannel.open();\n\n        datagramChannel.socket().setReuseAddress(isReuseAddress());\n        datagramChannel.socket().bind(address);\n        datagramChannel.configureBlocking(false);\n\n        readSelectorLoop.register(false, false, true, false, this, datagramChannel, null);\n\n        \r\n        this.fireServiceActivated();\n    }\n","realPath":"core/src/main/java/org/apache/mina/transport/nio/NioUdpServer.java","repoName":"mina","snippetEndLine":0,"snippetStartLine":0,"startLine":148,"status":"M"}],"commitId":"c885df4b7e8eac97e12de2316e81945284315170","commitMessage":"@@@removed IOException for bind/unbind\n","date":"2013-06-06 21:33:33","modifiedFileCount":"4","status":"M","submitter":"jvermillard"},{"authorTime":"2013-06-06 21:33:33","codes":[{"authorDate":"2013-06-20 08:17:48","commitOrder":9,"curCode":"    public synchronized void bind(SocketAddress localAddress) {\n        Assert.assertNotNull(localAddress, \"localAddress\");\n\n        \r\n        if (address != null) {\n            throw new IllegalStateException(\"address \" + address + \" already bound\");\n        }\n\n        LOG.info(\"binding address {}\", localAddress);\n        address = localAddress;\n\n        try {\n            serverChannel = ServerSocketChannel.open();\n            serverChannel.socket().setReuseAddress(isReuseAddress());\n            serverChannel.socket().bind(address);\n            serverChannel.configureBlocking(false);\n        } catch (IOException e) {\n            throw new MinaRuntimeException(\"can't bind address\" + address, e);\n        }\n\n        acceptSelectorLoop.register(true, false, false, false, this, serverChannel, null);\n\n        idleChecker = new IndexedIdleChecker();\n        idleChecker.start();\n\n        \r\n        fireServiceActivated();\n    }\n","date":"2013-06-20 08:17:48","endLine":200,"groupId":"1051","id":17,"instanceNumber":1,"isCurCommit":1,"methodName":"bind","params":"(SocketAddresslocalAddress)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mina-10-0.7/blobInfo/CC_OUT/blobs/ef/5bf4b6bc478a5890e4da879c822c8e4192d35d.src","preCode":"    public synchronized void bind(final SocketAddress localAddress) {\n        Assert.assertNotNull(localAddress, \"localAddress\");\n\n        \r\n        if (this.address != null) {\n            throw new IllegalStateException(\"address \" + address + \" already bound\");\n        }\n\n        LOG.info(\"binding address {}\", localAddress);\n        this.address = localAddress;\n\n        try {\n            serverChannel = ServerSocketChannel.open();\n            serverChannel.socket().setReuseAddress(isReuseAddress());\n            serverChannel.socket().bind(address);\n            serverChannel.configureBlocking(false);\n        } catch (IOException e) {\n            throw new MinaRuntimeException(\"can't bind address\" + address, e);\n        }\n\n        acceptSelectorLoop.register(true, false, false, false, this, serverChannel, null);\n\n        idleChecker = new IndexedIdleChecker();\n        idleChecker.start();\n\n        \r\n        this.fireServiceActivated();\n    }\n","realPath":"core/src/main/java/org/apache/mina/transport/nio/NioTcpServer.java","repoName":"mina","snippetEndLine":0,"snippetStartLine":0,"startLine":173,"status":"M"},{"authorDate":"2013-06-06 21:33:33","commitOrder":9,"curCode":"    public void bind(final SocketAddress localAddress) {\n        if (localAddress == null) {\n            \r\n            throw new IllegalArgumentException(\"LocalAdress cannot be null\");\n        }\n\n        \r\n        if (this.address != null) {\n            throw new IllegalStateException(\"address \" + address + \" already bound\");\n        }\n        address = localAddress;\n\n        LOG.info(\"binding address {}\", localAddress);\n\n        try {\n            datagramChannel = DatagramChannel.open();\n            datagramChannel.socket().setReuseAddress(isReuseAddress());\n            datagramChannel.socket().bind(address);\n            datagramChannel.configureBlocking(false);\n        } catch (IOException e) {\n            throw new MinaRuntimeException(\"can't open the address \" + address, e);\n        }\n\n        readSelectorLoop.register(false, false, true, false, this, datagramChannel, null);\n\n        \r\n        this.fireServiceActivated();\n    }\n","date":"2013-06-06 21:33:33","endLine":175,"groupId":"1051","id":18,"instanceNumber":2,"isCurCommit":1,"methodName":"bind","params":"(finalSocketAddresslocalAddress)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mina-10-0.7/blobInfo/CC_OUT/blobs/62/cf5207910a43bf8f7e59114219c26194ebd237.src","preCode":"    public void bind(final SocketAddress localAddress) {\n        if (localAddress == null) {\n            \r\n            throw new IllegalArgumentException(\"LocalAdress cannot be null\");\n        }\n\n        \r\n        if (this.address != null) {\n            throw new IllegalStateException(\"address \" + address + \" already bound\");\n        }\n        address = localAddress;\n\n        LOG.info(\"binding address {}\", localAddress);\n\n        try {\n            datagramChannel = DatagramChannel.open();\n            datagramChannel.socket().setReuseAddress(isReuseAddress());\n            datagramChannel.socket().bind(address);\n            datagramChannel.configureBlocking(false);\n        } catch (IOException e) {\n            throw new MinaRuntimeException(\"can't open the address \" + address, e);\n        }\n\n        readSelectorLoop.register(false, false, true, false, this, datagramChannel, null);\n\n        \r\n        this.fireServiceActivated();\n    }\n","realPath":"core/src/main/java/org/apache/mina/transport/nio/NioUdpServer.java","repoName":"mina","snippetEndLine":0,"snippetStartLine":0,"startLine":148,"status":"N"}],"commitId":"0163b5b1b61009bfbfbd4d250fdb38efd01a8cdb","commitMessage":"@@@Updated the NOTICE and LICENSE files\n","date":"2013-06-20 08:17:48","modifiedFileCount":"2","status":"M","submitter":"Emmanuel L?charny"}]
