[{"authorTime":"2011-12-01 23:27:23","codes":[{"authorDate":"2011-12-09 16:02:25","commitOrder":6,"curCode":"    public static void main(String[] args) throws Exception {\n\n        OneThreadSelectorStrategy strategy = new OneThreadSelectorStrategy(new SelectorFactory(\n                NioSelectorProcessor.class));\n        NioTcpServer acceptor = new NioTcpServer(strategy);\n        \n        \r\n        acceptor.setSslContext(BogusSslContextFactory\n            .getInstance(true));\n        \n        acceptor.setFilters(new LoggingFilter(\"INCOMING\"), new HttpServerCodec(), new LoggingFilter(\"DECODED\"),\n                new DummyHttpSever());\n\n        acceptor.getSessionConfig().setTcpNoDelay(true);\n\n        acceptor.bind(new InetSocketAddress(8080));\n\n        \r\n        Thread.sleep(2000000);\n        acceptor.unbindAll();\n\n    }\n","date":"2011-12-09 16:02:25","endLine":73,"groupId":"1323","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"main","params":"(String[]args)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mina-10-0.7/blobInfo/CC_OUT/blobs/01/cbf7bad9fb3b6f91ab44a7a54e513433f7b216.src","preCode":"    public static void main(String[] args) throws Exception {\n\n        OneThreadSelectorStrategy strategy = new OneThreadSelectorStrategy(new SelectorFactory(\n                NioSelectorProcessor.class));\n        NioTcpServer acceptor = new NioTcpServer(strategy);\n        \n        \r\n        acceptor.setSslContext(BogusSslContextFactory\n            .getInstance(true));\n        \n        acceptor.setFilters(new LoggingFilter(\"INCOMING\"), new HttpServerCodec(), new LoggingFilter(\"DECODED\"),\n                new DummyHttpSever());\n\n        acceptor.getSessionConfig().setTcpNoDelay(true);\n\n        acceptor.bind(new InetSocketAddress(8080));\n\n        \r\n        Thread.sleep(2000000);\n        acceptor.unbindAll();\n\n    }\n","realPath":"examples/src/main/java/org/apache/mina/examples/http/HttpsTest.java","repoName":"mina","snippetEndLine":0,"snippetStartLine":0,"startLine":52,"status":"B"},{"authorDate":"2011-12-01 23:27:23","commitOrder":6,"curCode":"    public static void main(String[] args) throws Exception {\n\n        OneThreadSelectorStrategy strategy = new OneThreadSelectorStrategy(new SelectorFactory(\n                NioSelectorProcessor.class));\n        NioTcpServer acceptor = new NioTcpServer(strategy);\n        acceptor.setFilters(new LoggingFilter(\"INCOMING\"), new HttpServerCodec(), new LoggingFilter(\"DECODED\"),\n                new DummyHttpSever());\n\n        acceptor.getSessionConfig().setTcpNoDelay(true);\n\n        acceptor.bind(new InetSocketAddress(8080));\n\n        \r\n        Thread.sleep(20000);\n        acceptor.unbindAll();\n\n    }\n","date":"2011-12-01 23:27:23","endLine":68,"groupId":"1323","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"main","params":"(String[]args)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mina-10-0.7/blobInfo/CC_OUT/blobs/96/b1253256f3127dd2b040f98318412aa6462527.src","preCode":"    public static void main(String[] args) throws Exception {\n\n        OneThreadSelectorStrategy strategy = new OneThreadSelectorStrategy(new SelectorFactory(\n                NioSelectorProcessor.class));\n        NioTcpServer acceptor = new NioTcpServer(strategy);\n        acceptor.setFilters(new LoggingFilter(\"INCOMING\"), new HttpServerCodec(), new LoggingFilter(\"DECODED\"),\n                new DummyHttpSever());\n\n        acceptor.getSessionConfig().setTcpNoDelay(true);\n\n        acceptor.bind(new InetSocketAddress(8080));\n\n        \r\n        Thread.sleep(20000);\n        acceptor.unbindAll();\n\n    }\n","realPath":"examples/src/main/java/org/apache/mina/examples/http/HttpTest.java","repoName":"mina","snippetEndLine":0,"snippetStartLine":0,"startLine":52,"status":"NB"}],"commitId":"68eef0e1ca7c6df4117efef0bcbed07e53bfa6fb","commitMessage":"@@@Added a test for HTTPS\n\ngit-svn-id: https://svn.apache.org/repos/asf/mina/trunk@1212267 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2011-12-09 16:02:25","modifiedFileCount":"0","status":"M","submitter":"Emmanuel Lecharny"},{"authorTime":"2011-12-01 23:27:23","codes":[{"authorDate":"2011-12-13 20:47:24","commitOrder":7,"curCode":"    public static void main(String[] args) throws Exception {\n\n        OneThreadSelectorStrategy strategy = new OneThreadSelectorStrategy(new SelectorFactory(\n                NioSelectorProcessor.class));\n        NioTcpServer acceptor = new NioTcpServer(strategy);\n        \n        \r\n        acceptor.setSslContext(BogusSslContextFactory\n            .getInstance(true));\n        \n        acceptor.setFilters(new LoggingFilter(\"INCOMING\"), new HttpServerCodec(), new LoggingFilter(\"DECODED\"),\n                new DummyHttpSever());\n\n        acceptor.getSessionConfig().setTcpNoDelay(true);\n\n        acceptor.bind(new InetSocketAddress(8080));\n\n        \r\n        Thread.sleep(20000);\n        acceptor.unbindAll();\n\n    }\n","date":"2011-12-13 20:47:24","endLine":73,"groupId":"1323","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"main","params":"(String[]args)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mina-10-0.7/blobInfo/CC_OUT/blobs/28/f81d946498db17bce0aa679762bbcb511145f7.src","preCode":"    public static void main(String[] args) throws Exception {\n\n        OneThreadSelectorStrategy strategy = new OneThreadSelectorStrategy(new SelectorFactory(\n                NioSelectorProcessor.class));\n        NioTcpServer acceptor = new NioTcpServer(strategy);\n        \n        \r\n        acceptor.setSslContext(BogusSslContextFactory\n            .getInstance(true));\n        \n        acceptor.setFilters(new LoggingFilter(\"INCOMING\"), new HttpServerCodec(), new LoggingFilter(\"DECODED\"),\n                new DummyHttpSever());\n\n        acceptor.getSessionConfig().setTcpNoDelay(true);\n\n        acceptor.bind(new InetSocketAddress(8080));\n\n        \r\n        Thread.sleep(2000000);\n        acceptor.unbindAll();\n\n    }\n","realPath":"examples/src/main/java/org/apache/mina/examples/http/HttpsTest.java","repoName":"mina","snippetEndLine":0,"snippetStartLine":0,"startLine":52,"status":"M"},{"authorDate":"2011-12-01 23:27:23","commitOrder":7,"curCode":"    public static void main(String[] args) throws Exception {\n\n        OneThreadSelectorStrategy strategy = new OneThreadSelectorStrategy(new SelectorFactory(\n                NioSelectorProcessor.class));\n        NioTcpServer acceptor = new NioTcpServer(strategy);\n        acceptor.setFilters(new LoggingFilter(\"INCOMING\"), new HttpServerCodec(), new LoggingFilter(\"DECODED\"),\n                new DummyHttpSever());\n\n        acceptor.getSessionConfig().setTcpNoDelay(true);\n\n        acceptor.bind(new InetSocketAddress(8080));\n\n        \r\n        Thread.sleep(20000);\n        acceptor.unbindAll();\n\n    }\n","date":"2011-12-01 23:27:23","endLine":68,"groupId":"1323","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"main","params":"(String[]args)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mina-10-0.7/blobInfo/CC_OUT/blobs/96/b1253256f3127dd2b040f98318412aa6462527.src","preCode":"    public static void main(String[] args) throws Exception {\n\n        OneThreadSelectorStrategy strategy = new OneThreadSelectorStrategy(new SelectorFactory(\n                NioSelectorProcessor.class));\n        NioTcpServer acceptor = new NioTcpServer(strategy);\n        acceptor.setFilters(new LoggingFilter(\"INCOMING\"), new HttpServerCodec(), new LoggingFilter(\"DECODED\"),\n                new DummyHttpSever());\n\n        acceptor.getSessionConfig().setTcpNoDelay(true);\n\n        acceptor.bind(new InetSocketAddress(8080));\n\n        \r\n        Thread.sleep(20000);\n        acceptor.unbindAll();\n\n    }\n","realPath":"examples/src/main/java/org/apache/mina/examples/http/HttpTest.java","repoName":"mina","snippetEndLine":0,"snippetStartLine":0,"startLine":52,"status":"N"}],"commitId":"c4fea8c6280a61b7860fdde193e95f9975f62994","commitMessage":"@@@o Fixed the delay for the test to 20 seconds instead of 2000\n\ngit-svn-id: https://svn.apache.org/repos/asf/mina/trunk@1213664 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2011-12-13 20:47:24","modifiedFileCount":"1","status":"M","submitter":"Emmanuel Lecharny"},{"authorTime":"2011-12-01 23:27:23","codes":[{"authorDate":"2012-05-03 22:45:07","commitOrder":8,"curCode":"    public static void main(String[] args) throws Exception {\n\n        OneThreadSelectorStrategy strategy = new OneThreadSelectorStrategy(new SelectorFactory(\n                NioSelectorProcessor.class));\n        NioTcpServer acceptor = new NioTcpServer(strategy);\n\n        acceptor.setFilters(new LoggingFilter(\"INCOMING\"), new HttpServerCodec(), new LoggingFilter(\"DECODED\"),\n                new DummyHttpSever());\n\n        acceptor.getSessionConfig().setTcpNoDelay(true);\n\n        \r\n        acceptor.getSessionConfig().setSslContext(BogusSslContextFactory.getInstance(true));\n\n        acceptor.bind(new InetSocketAddress(8080));\n\n        \r\n        Thread.sleep(20000);\n        acceptor.unbindAll();\n\n    }\n","date":"2012-05-03 22:45:07","endLine":72,"groupId":"1323","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"main","params":"(String[]args)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mina-10-0.7/blobInfo/CC_OUT/blobs/c8/9dec4c459cc5a4ad566248f2c9dcc4ec9264b2.src","preCode":"    public static void main(String[] args) throws Exception {\n\n        OneThreadSelectorStrategy strategy = new OneThreadSelectorStrategy(new SelectorFactory(\n                NioSelectorProcessor.class));\n        NioTcpServer acceptor = new NioTcpServer(strategy);\n\n        \r\n        acceptor.setSslContext(BogusSslContextFactory.getInstance(true));\n\n        acceptor.setFilters(new LoggingFilter(\"INCOMING\"), new HttpServerCodec(), new LoggingFilter(\"DECODED\"),\n                new DummyHttpSever());\n\n        acceptor.getSessionConfig().setTcpNoDelay(true);\n\n        acceptor.bind(new InetSocketAddress(8080));\n\n        \r\n        Thread.sleep(20000);\n        acceptor.unbindAll();\n\n    }\n","realPath":"examples/src/main/java/org/apache/mina/examples/http/HttpsTest.java","repoName":"mina","snippetEndLine":0,"snippetStartLine":0,"startLine":52,"status":"M"},{"authorDate":"2011-12-01 23:27:23","commitOrder":8,"curCode":"    public static void main(String[] args) throws Exception {\n\n        OneThreadSelectorStrategy strategy = new OneThreadSelectorStrategy(new SelectorFactory(\n                NioSelectorProcessor.class));\n        NioTcpServer acceptor = new NioTcpServer(strategy);\n        acceptor.setFilters(new LoggingFilter(\"INCOMING\"), new HttpServerCodec(), new LoggingFilter(\"DECODED\"),\n                new DummyHttpSever());\n\n        acceptor.getSessionConfig().setTcpNoDelay(true);\n\n        acceptor.bind(new InetSocketAddress(8080));\n\n        \r\n        Thread.sleep(20000);\n        acceptor.unbindAll();\n\n    }\n","date":"2011-12-01 23:27:23","endLine":68,"groupId":"1323","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"main","params":"(String[]args)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mina-10-0.7/blobInfo/CC_OUT/blobs/96/b1253256f3127dd2b040f98318412aa6462527.src","preCode":"    public static void main(String[] args) throws Exception {\n\n        OneThreadSelectorStrategy strategy = new OneThreadSelectorStrategy(new SelectorFactory(\n                NioSelectorProcessor.class));\n        NioTcpServer acceptor = new NioTcpServer(strategy);\n        acceptor.setFilters(new LoggingFilter(\"INCOMING\"), new HttpServerCodec(), new LoggingFilter(\"DECODED\"),\n                new DummyHttpSever());\n\n        acceptor.getSessionConfig().setTcpNoDelay(true);\n\n        acceptor.bind(new InetSocketAddress(8080));\n\n        \r\n        Thread.sleep(20000);\n        acceptor.unbindAll();\n\n    }\n","realPath":"examples/src/main/java/org/apache/mina/examples/http/HttpTest.java","repoName":"mina","snippetEndLine":0,"snippetStartLine":0,"startLine":52,"status":"N"}],"commitId":"9d745ee883f4b03fcc93d23f9b230ec8e922f171","commitMessage":"@@@Refactored the code to move the SSL handling to the Session configuration instead of the service\n\ngit-svn-id: https://svn.apache.org/repos/asf/mina/trunk@1333483 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2012-05-03 22:45:07","modifiedFileCount":"10","status":"M","submitter":"Emmanuel Lecharny"},{"authorTime":"2012-05-22 23:02:28","codes":[{"authorDate":"2012-05-22 23:02:28","commitOrder":9,"curCode":"    public static void main(String[] args) throws Exception {\n\n        OneThreadSelectorStrategy<NioSelectorProcessor> strategy = new OneThreadSelectorStrategy<NioSelectorProcessor>(new NioSelectorProcessor());\n        NioTcpServer acceptor = new NioTcpServer(strategy);\n\n        acceptor.setFilters(new LoggingFilter(\"INCOMING\"), new HttpServerCodec(), new LoggingFilter(\"DECODED\"),\n                new DummyHttpSever());\n\n        acceptor.getSessionConfig().setTcpNoDelay(true);\n\n        \r\n        acceptor.getSessionConfig().setSslContext(BogusSslContextFactory.getInstance(true));\n\n        acceptor.bind(new InetSocketAddress(8080));\n\n        \r\n        Thread.sleep(20000);\n        acceptor.unbindAll();\n\n    }\n","date":"2012-05-22 23:02:28","endLine":70,"groupId":"1323","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"main","params":"(String[]args)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mina-10-0.7/blobInfo/CC_OUT/blobs/26/764dc563dd69d2daff2160b33135bf7474aa03.src","preCode":"    public static void main(String[] args) throws Exception {\n\n        OneThreadSelectorStrategy strategy = new OneThreadSelectorStrategy(new SelectorFactory(\n                NioSelectorProcessor.class));\n        NioTcpServer acceptor = new NioTcpServer(strategy);\n\n        acceptor.setFilters(new LoggingFilter(\"INCOMING\"), new HttpServerCodec(), new LoggingFilter(\"DECODED\"),\n                new DummyHttpSever());\n\n        acceptor.getSessionConfig().setTcpNoDelay(true);\n\n        \r\n        acceptor.getSessionConfig().setSslContext(BogusSslContextFactory.getInstance(true));\n\n        acceptor.bind(new InetSocketAddress(8080));\n\n        \r\n        Thread.sleep(20000);\n        acceptor.unbindAll();\n\n    }\n","realPath":"examples/src/main/java/org/apache/mina/examples/http/HttpsTest.java","repoName":"mina","snippetEndLine":0,"snippetStartLine":0,"startLine":51,"status":"M"},{"authorDate":"2012-05-22 23:02:28","commitOrder":9,"curCode":"    public static void main(String[] args) throws Exception {\n\n        OneThreadSelectorStrategy<NioSelectorProcessor> strategy = new OneThreadSelectorStrategy<NioSelectorProcessor>(new NioSelectorProcessor());\n\n        NioTcpServer acceptor = new NioTcpServer(strategy);\n        acceptor.setFilters(new LoggingFilter(\"INCOMING\"), new HttpServerCodec(), new LoggingFilter(\"DECODED\"),\n                new DummyHttpSever());\n\n        acceptor.getSessionConfig().setTcpNoDelay(true);\n\n        acceptor.bind(new InetSocketAddress(8080));\n\n        \r\n        Thread.sleep(20000);\n        acceptor.unbindAll();\n\n    }\n","date":"2012-05-22 23:02:28","endLine":67,"groupId":"1323","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"main","params":"(String[]args)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mina-10-0.7/blobInfo/CC_OUT/blobs/17/575c965abe0c2ec7684a326695560eda13a2b8.src","preCode":"    public static void main(String[] args) throws Exception {\n\n        OneThreadSelectorStrategy strategy = new OneThreadSelectorStrategy(new SelectorFactory(\n                NioSelectorProcessor.class));\n        NioTcpServer acceptor = new NioTcpServer(strategy);\n        acceptor.setFilters(new LoggingFilter(\"INCOMING\"), new HttpServerCodec(), new LoggingFilter(\"DECODED\"),\n                new DummyHttpSever());\n\n        acceptor.getSessionConfig().setTcpNoDelay(true);\n\n        acceptor.bind(new InetSocketAddress(8080));\n\n        \r\n        Thread.sleep(20000);\n        acceptor.unbindAll();\n\n    }\n","realPath":"examples/src/main/java/org/apache/mina/examples/http/HttpTest.java","repoName":"mina","snippetEndLine":0,"snippetStartLine":0,"startLine":51,"status":"M"}],"commitId":"2aa0492c4d7733a19d0c533e523a0278aa1c2b84","commitMessage":"@@@removed ugly selector factory.  preparing for UDP server\n\ngit-svn-id: https://svn.apache.org/repos/asf/mina/trunk@1341509 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2012-05-22 23:02:28","modifiedFileCount":"11","status":"M","submitter":"Julien Vermillard"},{"authorTime":"2012-05-23 23:35:21","codes":[{"authorDate":"2012-05-23 23:35:21","commitOrder":10,"curCode":"    public static void main(String[] args) throws Exception {\n\n        OneThreadSelectorStrategy<NioSelectorProcessor> strategy = new OneThreadSelectorStrategy<NioSelectorProcessor>(new NioSelectorProcessor());\n        NioTcpServer acceptor = new NioTcpServer(strategy);\n\n        acceptor.setFilters(new LoggingFilter(\"INCOMING\"), new HttpServerCodec(), new LoggingFilter(\"DECODED\"),\n                new DummyHttpSever());\n\n        acceptor.getSessionConfig().setTcpNoDelay(true);\n\n        \r\n        acceptor.getSessionConfig().setSslContext(BogusSslContextFactory.getInstance(true));\n\n        acceptor.bind(new InetSocketAddress(8080));\n\n        \r\n        Thread.sleep(20000);\n        acceptor.unbind();\n\n    }\n","date":"2012-05-23 23:35:21","endLine":70,"groupId":"1323","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"main","params":"(String[]args)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mina-10-0.7/blobInfo/CC_OUT/blobs/0b/0ecfd753f17e4ddbbcb8ec897b5df723819452.src","preCode":"    public static void main(String[] args) throws Exception {\n\n        OneThreadSelectorStrategy<NioSelectorProcessor> strategy = new OneThreadSelectorStrategy<NioSelectorProcessor>(new NioSelectorProcessor());\n        NioTcpServer acceptor = new NioTcpServer(strategy);\n\n        acceptor.setFilters(new LoggingFilter(\"INCOMING\"), new HttpServerCodec(), new LoggingFilter(\"DECODED\"),\n                new DummyHttpSever());\n\n        acceptor.getSessionConfig().setTcpNoDelay(true);\n\n        \r\n        acceptor.getSessionConfig().setSslContext(BogusSslContextFactory.getInstance(true));\n\n        acceptor.bind(new InetSocketAddress(8080));\n\n        \r\n        Thread.sleep(20000);\n        acceptor.unbindAll();\n\n    }\n","realPath":"examples/src/main/java/org/apache/mina/examples/http/HttpsTest.java","repoName":"mina","snippetEndLine":0,"snippetStartLine":0,"startLine":51,"status":"M"},{"authorDate":"2012-05-23 23:35:21","commitOrder":10,"curCode":"    public static void main(String[] args) throws Exception {\n\n        OneThreadSelectorStrategy<NioSelectorProcessor> strategy = new OneThreadSelectorStrategy<NioSelectorProcessor>(new NioSelectorProcessor());\n\n        NioTcpServer acceptor = new NioTcpServer(strategy);\n        acceptor.setFilters(new LoggingFilter(\"INCOMING\"), new HttpServerCodec(), new LoggingFilter(\"DECODED\"),\n                new DummyHttpSever());\n\n        acceptor.getSessionConfig().setTcpNoDelay(true);\n\n        acceptor.bind(new InetSocketAddress(8080));\n\n        \r\n        Thread.sleep(20000);\n        acceptor.unbind();\n\n    }\n","date":"2012-05-23 23:35:21","endLine":67,"groupId":"1323","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"main","params":"(String[]args)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mina-10-0.7/blobInfo/CC_OUT/blobs/cb/86e691998d29a2db14ec5d01270a26eac0ce38.src","preCode":"    public static void main(String[] args) throws Exception {\n\n        OneThreadSelectorStrategy<NioSelectorProcessor> strategy = new OneThreadSelectorStrategy<NioSelectorProcessor>(new NioSelectorProcessor());\n\n        NioTcpServer acceptor = new NioTcpServer(strategy);\n        acceptor.setFilters(new LoggingFilter(\"INCOMING\"), new HttpServerCodec(), new LoggingFilter(\"DECODED\"),\n                new DummyHttpSever());\n\n        acceptor.getSessionConfig().setTcpNoDelay(true);\n\n        acceptor.bind(new InetSocketAddress(8080));\n\n        \r\n        Thread.sleep(20000);\n        acceptor.unbindAll();\n\n    }\n","realPath":"examples/src/main/java/org/apache/mina/examples/http/HttpTest.java","repoName":"mina","snippetEndLine":0,"snippetStartLine":0,"startLine":51,"status":"M"}],"commitId":"b9e36dcf819bceff8012d9543e6da64010777f68","commitMessage":"@@@* one server => one server socket channel\n* added more typing and generics\n* start of NIO UDP server\n\ngit-svn-id: https://svn.apache.org/repos/asf/mina/trunk@1341900 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2012-05-23 23:35:21","modifiedFileCount":"12","status":"M","submitter":"Julien Vermillard"},{"authorTime":"2012-09-30 23:35:05","codes":[{"authorDate":"2012-09-30 23:35:05","commitOrder":11,"curCode":"    public static void main(String[] args) throws Exception {\n\n        NioTcpServer acceptor = new NioTcpServer(new NioSelectorLoop(), new NioSelectorLoop());\n\n        acceptor.setFilters(new LoggingFilter(\"INCOMING\"), new HttpServerCodec(), new LoggingFilter(\"DECODED\"),\n                new DummyHttpSever());\n\n        acceptor.getSessionConfig().setTcpNoDelay(true);\n\n        \r\n        acceptor.getSessionConfig().setSslContext(BogusSslContextFactory.getInstance(true));\n\n        acceptor.bind(new InetSocketAddress(8080));\n\n        \r\n        Thread.sleep(20000);\n        acceptor.unbind();\n\n    }\n","date":"2012-09-30 23:35:05","endLine":68,"groupId":"1323","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"main","params":"(String[]args)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mina-10-0.7/blobInfo/CC_OUT/blobs/64/74112ac60ee73b82ea19ab0b9e79ca2ec30270.src","preCode":"    public static void main(String[] args) throws Exception {\n\n        OneThreadSelectorStrategy<NioSelectorProcessor> strategy = new OneThreadSelectorStrategy<NioSelectorProcessor>(new NioSelectorProcessor());\n        NioTcpServer acceptor = new NioTcpServer(strategy);\n\n        acceptor.setFilters(new LoggingFilter(\"INCOMING\"), new HttpServerCodec(), new LoggingFilter(\"DECODED\"),\n                new DummyHttpSever());\n\n        acceptor.getSessionConfig().setTcpNoDelay(true);\n\n        \r\n        acceptor.getSessionConfig().setSslContext(BogusSslContextFactory.getInstance(true));\n\n        acceptor.bind(new InetSocketAddress(8080));\n\n        \r\n        Thread.sleep(20000);\n        acceptor.unbind();\n\n    }\n","realPath":"examples/src/main/java/org/apache/mina/examples/http/HttpsTest.java","repoName":"mina","snippetEndLine":0,"snippetStartLine":0,"startLine":50,"status":"M"},{"authorDate":"2012-09-30 23:35:05","commitOrder":11,"curCode":"    public static void main(String[] args) throws Exception {\n\n        NioTcpServer acceptor = new NioTcpServer(new NioSelectorLoop(), new NioSelectorLoop());\n        acceptor.setFilters(new LoggingFilter(\"INCOMING\"), new HttpServerCodec(), new LoggingFilter(\"DECODED\"),\n                new DummyHttpSever());\n\n        acceptor.getSessionConfig().setTcpNoDelay(true);\n\n        acceptor.bind(new InetSocketAddress(8080));\n\n        \r\n        Thread.sleep(20000);\n        acceptor.unbind();\n\n    }\n","date":"2012-09-30 23:35:05","endLine":64,"groupId":"1323","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"main","params":"(String[]args)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mina-10-0.7/blobInfo/CC_OUT/blobs/5e/193d2413947a87055b80a20f312e5329c384e9.src","preCode":"    public static void main(String[] args) throws Exception {\n\n        OneThreadSelectorStrategy<NioSelectorProcessor> strategy = new OneThreadSelectorStrategy<NioSelectorProcessor>(new NioSelectorProcessor());\n\n        NioTcpServer acceptor = new NioTcpServer(strategy);\n        acceptor.setFilters(new LoggingFilter(\"INCOMING\"), new HttpServerCodec(), new LoggingFilter(\"DECODED\"),\n                new DummyHttpSever());\n\n        acceptor.getSessionConfig().setTcpNoDelay(true);\n\n        acceptor.bind(new InetSocketAddress(8080));\n\n        \r\n        Thread.sleep(20000);\n        acceptor.unbind();\n\n    }\n","realPath":"examples/src/main/java/org/apache/mina/examples/http/HttpTest.java","repoName":"mina","snippetEndLine":0,"snippetStartLine":0,"startLine":50,"status":"M"}],"commitId":"a09ad9d2ef0c18aeeed411c719d3b881496a137e","commitMessage":"@@@major rework of NioSelector\n\ngit-svn-id: https://svn.apache.org/repos/asf/mina/trunk@1392037 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2012-09-30 23:35:05","modifiedFileCount":"12","status":"M","submitter":"Julien Vermillard"},{"authorTime":"2012-11-06 21:35:23","codes":[{"authorDate":"2012-11-06 21:35:23","commitOrder":12,"curCode":"    public static void main(String[] args) throws Exception {\n\n        NioTcpServer acceptor = new NioTcpServer();\n\n        acceptor.setFilters(new LoggingFilter(\"INCOMING\"), new HttpServerCodec(), new LoggingFilter(\"DECODED\"),\n                new DummyHttpSever());\n\n        acceptor.getSessionConfig().setTcpNoDelay(true);\n\n        \r\n        acceptor.getSessionConfig().setSslContext(BogusSslContextFactory.getInstance(true));\n\n        acceptor.bind(new InetSocketAddress(8080));\n\n        \r\n        Thread.sleep(20000);\n        acceptor.unbind();\n\n    }\n","date":"2012-11-06 21:35:23","endLine":67,"groupId":"1323","id":13,"instanceNumber":1,"isCurCommit":0,"methodName":"main","params":"(String[]args)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mina-10-0.7/blobInfo/CC_OUT/blobs/26/f060f7671d37e77d33ec08527c8c49046a5f8c.src","preCode":"    public static void main(String[] args) throws Exception {\n\n        NioTcpServer acceptor = new NioTcpServer(new NioSelectorLoop(), new NioSelectorLoop());\n\n        acceptor.setFilters(new LoggingFilter(\"INCOMING\"), new HttpServerCodec(), new LoggingFilter(\"DECODED\"),\n                new DummyHttpSever());\n\n        acceptor.getSessionConfig().setTcpNoDelay(true);\n\n        \r\n        acceptor.getSessionConfig().setSslContext(BogusSslContextFactory.getInstance(true));\n\n        acceptor.bind(new InetSocketAddress(8080));\n\n        \r\n        Thread.sleep(20000);\n        acceptor.unbind();\n\n    }\n","realPath":"examples/src/main/java/org/apache/mina/examples/http/HttpsTest.java","repoName":"mina","snippetEndLine":0,"snippetStartLine":0,"startLine":49,"status":"M"},{"authorDate":"2012-11-06 21:35:23","commitOrder":12,"curCode":"    public static void main(String[] args) throws Exception {\n\n        NioTcpServer acceptor = new NioTcpServer();\n        acceptor.setFilters(new LoggingFilter(\"INCOMING\"), new HttpServerCodec(), new LoggingFilter(\"DECODED\"),\n                new DummyHttpSever());\n\n        acceptor.getSessionConfig().setTcpNoDelay(true);\n\n        acceptor.bind(new InetSocketAddress(8080));\n\n        \r\n        Thread.sleep(20000);\n        acceptor.unbind();\n\n    }\n","date":"2012-11-06 21:35:23","endLine":63,"groupId":"1323","id":14,"instanceNumber":2,"isCurCommit":0,"methodName":"main","params":"(String[]args)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mina-10-0.7/blobInfo/CC_OUT/blobs/d5/152473ac20bf6a4c25bc8d3d86d2d1514efc92.src","preCode":"    public static void main(String[] args) throws Exception {\n\n        NioTcpServer acceptor = new NioTcpServer(new NioSelectorLoop(), new NioSelectorLoop());\n        acceptor.setFilters(new LoggingFilter(\"INCOMING\"), new HttpServerCodec(), new LoggingFilter(\"DECODED\"),\n                new DummyHttpSever());\n\n        acceptor.getSessionConfig().setTcpNoDelay(true);\n\n        acceptor.bind(new InetSocketAddress(8080));\n\n        \r\n        Thread.sleep(20000);\n        acceptor.unbind();\n\n    }\n","realPath":"examples/src/main/java/org/apache/mina/examples/http/HttpTest.java","repoName":"mina","snippetEndLine":0,"snippetStartLine":0,"startLine":49,"status":"M"}],"commitId":"ae73b8de4ef79a99bf05232e2ffd91148e440a34","commitMessage":"@@@pool of selector for read/write events\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/mina/mina/trunk@1406131 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2012-11-06 21:35:23","modifiedFileCount":"5","status":"M","submitter":"Julien Vermillard"},{"authorTime":"2013-01-24 05:27:11","codes":[{"authorDate":"2012-11-06 21:35:23","commitOrder":13,"curCode":"    public static void main(String[] args) throws Exception {\n\n        NioTcpServer acceptor = new NioTcpServer();\n\n        acceptor.setFilters(new LoggingFilter(\"INCOMING\"), new HttpServerCodec(), new LoggingFilter(\"DECODED\"),\n                new DummyHttpSever());\n\n        acceptor.getSessionConfig().setTcpNoDelay(true);\n\n        \r\n        acceptor.getSessionConfig().setSslContext(BogusSslContextFactory.getInstance(true));\n\n        acceptor.bind(new InetSocketAddress(8080));\n\n        \r\n        Thread.sleep(20000);\n        acceptor.unbind();\n\n    }\n","date":"2012-11-06 21:35:23","endLine":67,"groupId":"1323","id":15,"instanceNumber":1,"isCurCommit":0,"methodName":"main","params":"(String[]args)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mina-10-0.7/blobInfo/CC_OUT/blobs/26/f060f7671d37e77d33ec08527c8c49046a5f8c.src","preCode":"    public static void main(String[] args) throws Exception {\n\n        NioTcpServer acceptor = new NioTcpServer();\n\n        acceptor.setFilters(new LoggingFilter(\"INCOMING\"), new HttpServerCodec(), new LoggingFilter(\"DECODED\"),\n                new DummyHttpSever());\n\n        acceptor.getSessionConfig().setTcpNoDelay(true);\n\n        \r\n        acceptor.getSessionConfig().setSslContext(BogusSslContextFactory.getInstance(true));\n\n        acceptor.bind(new InetSocketAddress(8080));\n\n        \r\n        Thread.sleep(20000);\n        acceptor.unbind();\n\n    }\n","realPath":"examples/src/main/java/org/apache/mina/examples/http/HttpsTest.java","repoName":"mina","snippetEndLine":0,"snippetStartLine":0,"startLine":49,"status":"N"},{"authorDate":"2013-01-24 05:27:11","commitOrder":13,"curCode":"    public static void main(String[] args) throws Exception {\n\n        NioTcpServer acceptor = new NioTcpServer();\n        acceptor.setFilters(new ProtocolCodecFilter<HttpPdu, ByteBuffer>(\n                HttpServerEncoder.class, HttpServerDecoder.class), \n                new DummyHttpSever());\n\n        acceptor.getSessionConfig().setTcpNoDelay(true);\n\n        acceptor.bind(new InetSocketAddress(8080));\n\n        \r\n        Thread.sleep(20000);\n        acceptor.unbind();\n\n    }\n","date":"2013-01-24 05:27:11","endLine":62,"groupId":"0","id":16,"instanceNumber":2,"isCurCommit":0,"methodName":"main","params":"(String[]args)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mina-10-0.7/blobInfo/CC_OUT/blobs/df/6c02015200eee52998e22a13c3f17a63eb1a0c.src","preCode":"    public static void main(String[] args) throws Exception {\n\n        NioTcpServer acceptor = new NioTcpServer();\n        acceptor.setFilters(new LoggingFilter(\"INCOMING\"), new HttpServerCodec(), new LoggingFilter(\"DECODED\"),\n                new DummyHttpSever());\n\n        acceptor.getSessionConfig().setTcpNoDelay(true);\n\n        acceptor.bind(new InetSocketAddress(8080));\n\n        \r\n        Thread.sleep(20000);\n        acceptor.unbind();\n\n    }\n","realPath":"examples/src/main/java/org/apache/mina/examples/http/HttpTest.java","repoName":"mina","snippetEndLine":0,"snippetStartLine":0,"startLine":47,"status":"M"}],"commitId":"469cb85269d2b10438712566b0200b87daf8bf16","commitMessage":"@@@trying new codec idea.  apated HTTP codec for using it\n","date":"2013-01-24 05:27:11","modifiedFileCount":"18","status":"M","submitter":"Julien Vermillard"},{"authorTime":"2013-01-29 03:28:48","codes":[{"authorDate":"2013-01-29 03:28:48","commitOrder":14,"curCode":"    public static void main(String[] args) throws Exception {\n\n        NioTcpServer httpServer = new NioTcpServer();\n\n        httpServer.setFilters(new LoggingFilter(\"INCOMING\"), new ProtocolCodecFilter<HttpPdu, ByteBuffer>(\n                HttpServerEncoder.class, HttpServerDecoder.class), new LoggingFilter(\"DECODED\"), new DummyHttpSever());\n\n        httpServer.getSessionConfig().setTcpNoDelay(true);\n\n        \r\n        httpServer.getSessionConfig().setSslContext(BogusSslContextFactory.getInstance(true));\n\n        httpServer.bind(new InetSocketAddress(8080));\n\n        \r\n        Thread.sleep(20000);\n        httpServer.unbind();\n\n    }\n","date":"2013-01-29 03:28:48","endLine":66,"groupId":"1897","id":17,"instanceNumber":1,"isCurCommit":0,"methodName":"main","params":"(String[]args)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mina-10-0.7/blobInfo/CC_OUT/blobs/84/0436785bd584a93a94f2a0d81bce4e1b308cdb.src","preCode":"    public static void main(String[] args) throws Exception {\n\n        NioTcpServer acceptor = new NioTcpServer();\n\n        acceptor.setFilters(new LoggingFilter(\"INCOMING\"), new HttpServerCodec(), new LoggingFilter(\"DECODED\"),\n                new DummyHttpSever());\n\n        acceptor.getSessionConfig().setTcpNoDelay(true);\n\n        \r\n        acceptor.getSessionConfig().setSslContext(BogusSslContextFactory.getInstance(true));\n\n        acceptor.bind(new InetSocketAddress(8080));\n\n        \r\n        Thread.sleep(20000);\n        acceptor.unbind();\n\n    }\n","realPath":"examples/src/main/java/org/apache/mina/examples/http/HttpsTest.java","repoName":"mina","snippetEndLine":0,"snippetStartLine":0,"startLine":48,"status":"M"},{"authorDate":"2013-01-29 03:28:48","commitOrder":14,"curCode":"    public static void main(String[] args) throws Exception {\n\n        NioTcpServer httpServer = new NioTcpServer();\n        httpServer.setReuseAddress(true);\n        httpServer.setFilters(new LoggingFilter(\"INCOMING\"), new ProtocolCodecFilter<HttpPdu, ByteBuffer>(\n                HttpServerEncoder.class, HttpServerDecoder.class), new LoggingFilter(\"DECODED\"), new DummyHttpSever());\n\n        httpServer.getSessionConfig().setTcpNoDelay(true);\n\n        httpServer.bind(new InetSocketAddress(8080));\n\n        \r\n        Thread.sleep(20000);\n        httpServer.unbind();\n\n    }\n","date":"2013-01-29 03:28:48","endLine":64,"groupId":"1863","id":18,"instanceNumber":2,"isCurCommit":0,"methodName":"main","params":"(String[]args)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mina-10-0.7/blobInfo/CC_OUT/blobs/50/4fbfefb7ad266e6acab58312c9f24a4b158b74.src","preCode":"    public static void main(String[] args) throws Exception {\n\n        NioTcpServer acceptor = new NioTcpServer();\n        acceptor.setFilters(new ProtocolCodecFilter<HttpPdu, ByteBuffer>(\n                HttpServerEncoder.class, HttpServerDecoder.class), \n                new DummyHttpSever());\n\n        acceptor.getSessionConfig().setTcpNoDelay(true);\n\n        acceptor.bind(new InetSocketAddress(8080));\n\n        \r\n        Thread.sleep(20000);\n        acceptor.unbind();\n\n    }\n","realPath":"examples/src/main/java/org/apache/mina/examples/http/HttpTest.java","repoName":"mina","snippetEndLine":0,"snippetStartLine":0,"startLine":49,"status":"M"}],"commitId":"6aa154411c09497e4856999435d99dbbd2450f22","commitMessage":"@@@make example HTTP server works\n","date":"2013-01-29 03:28:48","modifiedFileCount":"3","status":"M","submitter":"jvermillard"},{"authorTime":"2013-03-26 20:26:04","codes":[{"authorDate":"2013-03-26 20:26:04","commitOrder":15,"curCode":"    public static void main(String[] args) throws Exception {\n\n        NioTcpServer httpServer = new NioTcpServer();\n\n        httpServer.setFilters(new LoggingFilter(\"INCOMING\"),\n                new ProtocolCodecFilter<HttpPdu, ByteBuffer, Void, HttpDecoderState>(new HttpServerEncoder(),\n                        new HttpServerDecoder()), new LoggingFilter(\"DECODED\"), new DummyHttpSever());\n\n        httpServer.getSessionConfig().setTcpNoDelay(true);\n\n        \r\n        httpServer.getSessionConfig().setSslContext(BogusSslContextFactory.getInstance(true));\n\n        httpServer.bind(new InetSocketAddress(8080));\n\n        \r\n        Thread.sleep(20000);\n        httpServer.unbind();\n\n    }\n","date":"2013-03-26 20:26:04","endLine":68,"groupId":"10230","id":19,"instanceNumber":1,"isCurCommit":0,"methodName":"main","params":"(String[]args)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mina-10-0.7/blobInfo/CC_OUT/blobs/a9/69163cbcc71557d14108531214e468a75a097a.src","preCode":"    public static void main(String[] args) throws Exception {\n\n        NioTcpServer httpServer = new NioTcpServer();\n\n        httpServer.setFilters(new LoggingFilter(\"INCOMING\"), new ProtocolCodecFilter<HttpPdu, ByteBuffer>(\n                HttpServerEncoder.class, HttpServerDecoder.class), new LoggingFilter(\"DECODED\"), new DummyHttpSever());\n\n        httpServer.getSessionConfig().setTcpNoDelay(true);\n\n        \r\n        httpServer.getSessionConfig().setSslContext(BogusSslContextFactory.getInstance(true));\n\n        httpServer.bind(new InetSocketAddress(8080));\n\n        \r\n        Thread.sleep(20000);\n        httpServer.unbind();\n\n    }\n","realPath":"examples/src/main/java/org/apache/mina/examples/http/HttpsTest.java","repoName":"mina","snippetEndLine":0,"snippetStartLine":0,"startLine":49,"status":"M"},{"authorDate":"2013-03-26 20:26:04","commitOrder":15,"curCode":"    public static void main(String[] args) throws Exception {\n\n        NioTcpServer httpServer = new NioTcpServer();\n        httpServer.setReuseAddress(true);\n        httpServer.setFilters(new LoggingFilter(\"INCOMING\"),\n                new ProtocolCodecFilter<HttpPdu, ByteBuffer, Void, HttpDecoderState>(new HttpServerEncoder(),\n                        new HttpServerDecoder()), new LoggingFilter(\"DECODED\"), new DummyHttpSever());\n\n        httpServer.getSessionConfig().setTcpNoDelay(true);\n\n        httpServer.bind(new InetSocketAddress(8080));\n\n        \r\n        Thread.sleep(20000);\n        httpServer.unbind();\n\n    }\n","date":"2013-03-26 20:26:04","endLine":66,"groupId":"10230","id":20,"instanceNumber":2,"isCurCommit":0,"methodName":"main","params":"(String[]args)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mina-10-0.7/blobInfo/CC_OUT/blobs/1a/348386c936ad655b070db7520f9e400bc78917.src","preCode":"    public static void main(String[] args) throws Exception {\n\n        NioTcpServer httpServer = new NioTcpServer();\n        httpServer.setReuseAddress(true);\n        httpServer.setFilters(new LoggingFilter(\"INCOMING\"), new ProtocolCodecFilter<HttpPdu, ByteBuffer>(\n                HttpServerEncoder.class, HttpServerDecoder.class), new LoggingFilter(\"DECODED\"), new DummyHttpSever());\n\n        httpServer.getSessionConfig().setTcpNoDelay(true);\n\n        httpServer.bind(new InetSocketAddress(8080));\n\n        \r\n        Thread.sleep(20000);\n        httpServer.unbind();\n\n    }\n","realPath":"examples/src/main/java/org/apache/mina/examples/http/HttpTest.java","repoName":"mina","snippetEndLine":0,"snippetStartLine":0,"startLine":50,"status":"M"}],"commitId":"1a4ad866eb25e509a8eb4b5d52e4660152cc5ded","commitMessage":"@@@new try for a codec API\n","date":"2013-03-26 20:26:04","modifiedFileCount":"8","status":"M","submitter":"jvermillard"}]
