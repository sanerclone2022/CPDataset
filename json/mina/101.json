[{"authorTime":"2011-08-26 19:21:42","codes":[{"authorDate":"2011-08-26 19:21:42","commitOrder":1,"curCode":"    public void testSetListenersAlreadySet() {\n        MockAbstractIoFuture<Boolean> future = spy(new MockAbstractIoFuture<Boolean>());\n        IoFutureListener<Boolean> listener = mock(IoFutureListener.class);\n\n        assertFalse(future.isCancelled());\n        assertFalse(future.isDone());\n\n        future.setResult(true);\n        future.register(listener);\n\n        assertFalse(future.isCancelled());\n        assertTrue(future.isDone());\n\n        verify(listener).completed(true);\n        verify(listener, never()).exception(Matchers.<Throwable>any());\n    }\n","date":"2011-08-26 19:21:42","endLine":100,"groupId":"860","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testSetListenersAlreadySet","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mina-10-0.7/blobInfo/CC_OUT/blobs/e1/d377088037bfe81cb04ae1d9ce5c835a42865f.src","preCode":"    public void testSetListenersAlreadySet() {\n        MockAbstractIoFuture<Boolean> future = spy(new MockAbstractIoFuture<Boolean>());\n        IoFutureListener<Boolean> listener = mock(IoFutureListener.class);\n\n        assertFalse(future.isCancelled());\n        assertFalse(future.isDone());\n\n        future.setResult(true);\n        future.register(listener);\n\n        assertFalse(future.isCancelled());\n        assertTrue(future.isDone());\n\n        verify(listener).completed(true);\n        verify(listener, never()).exception(Matchers.<Throwable>any());\n    }\n","realPath":"core/src/test/java/org/apache/mina/util/AbstractIoFutureTest.java","repoName":"mina","snippetEndLine":0,"snippetStartLine":0,"startLine":85,"status":"B"},{"authorDate":"2011-08-26 19:21:42","commitOrder":1,"curCode":"    public void testExceptionListenersExceptionAlreadySet() {\n        MockAbstractIoFuture<Boolean> future = spy(new MockAbstractIoFuture<Boolean>());\n        IoFutureListener<Boolean> listener = mock(IoFutureListener.class);\n\n        assertFalse(future.isCancelled());\n        assertFalse(future.isDone());\n\n        future.setException(new NullPointerException());\n        future.register(listener);\n\n        assertFalse(future.isCancelled());\n        assertTrue(future.isDone());\n\n        verify(listener).exception(argThat(matchesExecutionException()));\n        verify(listener, never()).completed(Matchers.<Boolean>any());\n    }\n","date":"2011-08-26 19:21:42","endLine":195,"groupId":"860","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testExceptionListenersExceptionAlreadySet","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mina-10-0.7/blobInfo/CC_OUT/blobs/e1/d377088037bfe81cb04ae1d9ce5c835a42865f.src","preCode":"    public void testExceptionListenersExceptionAlreadySet() {\n        MockAbstractIoFuture<Boolean> future = spy(new MockAbstractIoFuture<Boolean>());\n        IoFutureListener<Boolean> listener = mock(IoFutureListener.class);\n\n        assertFalse(future.isCancelled());\n        assertFalse(future.isDone());\n\n        future.setException(new NullPointerException());\n        future.register(listener);\n\n        assertFalse(future.isCancelled());\n        assertTrue(future.isDone());\n\n        verify(listener).exception(argThat(matchesExecutionException()));\n        verify(listener, never()).completed(Matchers.<Boolean>any());\n    }\n","realPath":"core/src/test/java/org/apache/mina/util/AbstractIoFutureTest.java","repoName":"mina","snippetEndLine":0,"snippetStartLine":0,"startLine":180,"status":"B"}],"commitId":"7420a6d05316d17dd0952b26c4fdd39c1872b516","commitMessage":"@@@replacing trunk with 3.0 branch\n\ngit-svn-id: https://svn.apache.org/repos/asf/mina/trunk@1162066 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2011-08-26 19:21:42","modifiedFileCount":"0","status":"B","submitter":"Julien Vermillard"},{"authorTime":"2012-11-15 20:45:17","codes":[{"authorDate":"2012-11-15 20:45:17","commitOrder":2,"curCode":"    public void testSetListenersAlreadySet() {\n        final MockAbstractIoFuture<Boolean> future = spy(new MockAbstractIoFuture<Boolean>());\n        final IoFutureListener<Boolean> listener = mock(IoFutureListener.class);\n\n        assertFalse(future.isCancelled());\n        assertFalse(future.isDone());\n\n        future.setResult(true);\n        future.register(listener);\n\n        assertFalse(future.isCancelled());\n        assertTrue(future.isDone());\n\n        verify(listener).completed(true);\n        verify(listener, never()).exception(Matchers.<Throwable> any());\n    }\n","date":"2012-11-15 20:45:17","endLine":99,"groupId":"101","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"testSetListenersAlreadySet","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mina-10-0.7/blobInfo/CC_OUT/blobs/18/61891e847c772eeb9f04b4b695925657b7cf97.src","preCode":"    public void testSetListenersAlreadySet() {\n        MockAbstractIoFuture<Boolean> future = spy(new MockAbstractIoFuture<Boolean>());\n        IoFutureListener<Boolean> listener = mock(IoFutureListener.class);\n\n        assertFalse(future.isCancelled());\n        assertFalse(future.isDone());\n\n        future.setResult(true);\n        future.register(listener);\n\n        assertFalse(future.isCancelled());\n        assertTrue(future.isDone());\n\n        verify(listener).completed(true);\n        verify(listener, never()).exception(Matchers.<Throwable> any());\n    }\n","realPath":"core/src/test/java/org/apache/mina/util/AbstractIoFutureTest.java","repoName":"mina","snippetEndLine":0,"snippetStartLine":0,"startLine":84,"status":"M"},{"authorDate":"2012-11-15 20:45:17","commitOrder":2,"curCode":"    public void testExceptionListenersExceptionAlreadySet() {\n        final MockAbstractIoFuture<Boolean> future = spy(new MockAbstractIoFuture<Boolean>());\n        final IoFutureListener<Boolean> listener = mock(IoFutureListener.class);\n\n        assertFalse(future.isCancelled());\n        assertFalse(future.isDone());\n\n        future.setException(new NullPointerException());\n        future.register(listener);\n\n        assertFalse(future.isCancelled());\n        assertTrue(future.isDone());\n\n        verify(listener).exception(argThat(matchesExecutionException()));\n        verify(listener, never()).completed(Matchers.<Boolean> any());\n    }\n","date":"2012-11-15 20:45:17","endLine":194,"groupId":"101","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"testExceptionListenersExceptionAlreadySet","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-mina-10-0.7/blobInfo/CC_OUT/blobs/18/61891e847c772eeb9f04b4b695925657b7cf97.src","preCode":"    public void testExceptionListenersExceptionAlreadySet() {\n        MockAbstractIoFuture<Boolean> future = spy(new MockAbstractIoFuture<Boolean>());\n        IoFutureListener<Boolean> listener = mock(IoFutureListener.class);\n\n        assertFalse(future.isCancelled());\n        assertFalse(future.isDone());\n\n        future.setException(new NullPointerException());\n        future.register(listener);\n\n        assertFalse(future.isCancelled());\n        assertTrue(future.isDone());\n\n        verify(listener).exception(argThat(matchesExecutionException()));\n        verify(listener, never()).completed(Matchers.<Boolean> any());\n    }\n","realPath":"core/src/test/java/org/apache/mina/util/AbstractIoFutureTest.java","repoName":"mina","snippetEndLine":0,"snippetStartLine":0,"startLine":179,"status":"M"}],"commitId":"97366137b2803d49735924b295ac93d91a8e8455","commitMessage":"@@@added Iohandler events and tests\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/mina/mina/trunk@1409756 13f79535-47bb-0310-9956-ffa450edef68\n","date":"2012-11-15 20:45:17","modifiedFileCount":"6","status":"M","submitter":"Julien Vermillard"}]
