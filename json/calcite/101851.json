[{"authorTime":"2014-11-14 09:39:29","codes":[{"authorDate":"2014-11-14 09:39:29","commitOrder":1,"curCode":"  protected SqlSelect createSourceSelectForUpdate(SqlUpdate call) {\n    final SqlNodeList selectList = new SqlNodeList(SqlParserPos.ZERO);\n    selectList.add(new SqlIdentifier(\"*\", SqlParserPos.ZERO));\n    int ordinal = 0;\n    for (SqlNode exp : call.getSourceExpressionList()) {\n      \r\n      \r\n      String alias = SqlUtil.deriveAliasFromOrdinal(ordinal);\n      selectList.add(SqlValidatorUtil.addAlias(exp, alias));\n      ++ordinal;\n    }\n    SqlNode sourceTable = call.getTargetTable();\n    if (call.getAlias() != null) {\n      sourceTable =\n          SqlValidatorUtil.addAlias(\n              sourceTable,\n              call.getAlias().getSimple());\n    }\n    return new SqlSelect(SqlParserPos.ZERO, null, selectList, sourceTable,\n        call.getCondition(), null, null, null, null, null, null);\n  }\n","date":"2014-11-14 09:39:34","endLine":1216,"groupId":"6749","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"createSourceSelectForUpdate","params":"(SqlUpdatecall)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/63/1ccf694b0fa39fe974ed5163c5f3d6b0ceb7c9.src","preCode":"  protected SqlSelect createSourceSelectForUpdate(SqlUpdate call) {\n    final SqlNodeList selectList = new SqlNodeList(SqlParserPos.ZERO);\n    selectList.add(new SqlIdentifier(\"*\", SqlParserPos.ZERO));\n    int ordinal = 0;\n    for (SqlNode exp : call.getSourceExpressionList()) {\n      \r\n      \r\n      String alias = SqlUtil.deriveAliasFromOrdinal(ordinal);\n      selectList.add(SqlValidatorUtil.addAlias(exp, alias));\n      ++ordinal;\n    }\n    SqlNode sourceTable = call.getTargetTable();\n    if (call.getAlias() != null) {\n      sourceTable =\n          SqlValidatorUtil.addAlias(\n              sourceTable,\n              call.getAlias().getSimple());\n    }\n    return new SqlSelect(SqlParserPos.ZERO, null, selectList, sourceTable,\n        call.getCondition(), null, null, null, null, null, null);\n  }\n","realPath":"core/src/main/java/org/apache/calcite/sql/validate/SqlValidatorImpl.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":1196,"status":"B"},{"authorDate":"2014-11-14 09:39:29","commitOrder":1,"curCode":"  protected SqlSelect createSourceSelectForDelete(SqlDelete call) {\n    final SqlNodeList selectList = new SqlNodeList(SqlParserPos.ZERO);\n    selectList.add(new SqlIdentifier(\"*\", SqlParserPos.ZERO));\n    SqlNode sourceTable = call.getTargetTable();\n    if (call.getAlias() != null) {\n      sourceTable =\n          SqlValidatorUtil.addAlias(\n              sourceTable,\n              call.getAlias().getSimple());\n    }\n    return new SqlSelect(SqlParserPos.ZERO, null, selectList, sourceTable,\n        call.getCondition(), null, null, null, null, null, null);\n  }\n","date":"2014-11-14 09:39:34","endLine":1237,"groupId":"6749","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"createSourceSelectForDelete","params":"(SqlDeletecall)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/63/1ccf694b0fa39fe974ed5163c5f3d6b0ceb7c9.src","preCode":"  protected SqlSelect createSourceSelectForDelete(SqlDelete call) {\n    final SqlNodeList selectList = new SqlNodeList(SqlParserPos.ZERO);\n    selectList.add(new SqlIdentifier(\"*\", SqlParserPos.ZERO));\n    SqlNode sourceTable = call.getTargetTable();\n    if (call.getAlias() != null) {\n      sourceTable =\n          SqlValidatorUtil.addAlias(\n              sourceTable,\n              call.getAlias().getSimple());\n    }\n    return new SqlSelect(SqlParserPos.ZERO, null, selectList, sourceTable,\n        call.getCondition(), null, null, null, null, null, null);\n  }\n","realPath":"core/src/main/java/org/apache/calcite/sql/validate/SqlValidatorImpl.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":1225,"status":"B"}],"commitId":"a611d645ad754844a39f3d98f5f814f13dbd9404","commitMessage":"@@@[CALCITE-296] Re-organize package structure;\n[CALCITE-419] Naming convention for planner rules\n\nThis change only renames files (and deletes some obsolete files). There are no content changes.\n","date":"2014-11-14 09:39:34","modifiedFileCount":"0","status":"B","submitter":"Julian Hyde"},{"authorTime":"2015-11-20 06:59:46","codes":[{"authorDate":"2015-11-20 06:59:46","commitOrder":2,"curCode":"  protected SqlSelect createSourceSelectForUpdate(SqlUpdate call) {\n    final SqlNodeList selectList = new SqlNodeList(SqlParserPos.ZERO);\n    selectList.add(SqlIdentifier.star(SqlParserPos.ZERO));\n    int ordinal = 0;\n    for (SqlNode exp : call.getSourceExpressionList()) {\n      \r\n      \r\n      String alias = SqlUtil.deriveAliasFromOrdinal(ordinal);\n      selectList.add(SqlValidatorUtil.addAlias(exp, alias));\n      ++ordinal;\n    }\n    SqlNode sourceTable = call.getTargetTable();\n    if (call.getAlias() != null) {\n      sourceTable =\n          SqlValidatorUtil.addAlias(\n              sourceTable,\n              call.getAlias().getSimple());\n    }\n    return new SqlSelect(SqlParserPos.ZERO, null, selectList, sourceTable,\n        call.getCondition(), null, null, null, null, null, null);\n  }\n","date":"2015-11-20 09:08:20","endLine":1327,"groupId":"6749","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"createSourceSelectForUpdate","params":"(SqlUpdatecall)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/03/90c0781c816a9b6da72306edf2507b93b5eb70.src","preCode":"  protected SqlSelect createSourceSelectForUpdate(SqlUpdate call) {\n    final SqlNodeList selectList = new SqlNodeList(SqlParserPos.ZERO);\n    selectList.add(new SqlIdentifier(\"*\", SqlParserPos.ZERO));\n    int ordinal = 0;\n    for (SqlNode exp : call.getSourceExpressionList()) {\n      \r\n      \r\n      String alias = SqlUtil.deriveAliasFromOrdinal(ordinal);\n      selectList.add(SqlValidatorUtil.addAlias(exp, alias));\n      ++ordinal;\n    }\n    SqlNode sourceTable = call.getTargetTable();\n    if (call.getAlias() != null) {\n      sourceTable =\n          SqlValidatorUtil.addAlias(\n              sourceTable,\n              call.getAlias().getSimple());\n    }\n    return new SqlSelect(SqlParserPos.ZERO, null, selectList, sourceTable,\n        call.getCondition(), null, null, null, null, null, null);\n  }\n","realPath":"core/src/main/java/org/apache/calcite/sql/validate/SqlValidatorImpl.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":1307,"status":"M"},{"authorDate":"2015-11-20 06:59:46","commitOrder":2,"curCode":"  protected SqlSelect createSourceSelectForDelete(SqlDelete call) {\n    final SqlNodeList selectList = new SqlNodeList(SqlParserPos.ZERO);\n    selectList.add(SqlIdentifier.star(SqlParserPos.ZERO));\n    SqlNode sourceTable = call.getTargetTable();\n    if (call.getAlias() != null) {\n      sourceTable =\n          SqlValidatorUtil.addAlias(\n              sourceTable,\n              call.getAlias().getSimple());\n    }\n    return new SqlSelect(SqlParserPos.ZERO, null, selectList, sourceTable,\n        call.getCondition(), null, null, null, null, null, null);\n  }\n","date":"2015-11-20 09:08:20","endLine":1348,"groupId":"6749","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"createSourceSelectForDelete","params":"(SqlDeletecall)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/03/90c0781c816a9b6da72306edf2507b93b5eb70.src","preCode":"  protected SqlSelect createSourceSelectForDelete(SqlDelete call) {\n    final SqlNodeList selectList = new SqlNodeList(SqlParserPos.ZERO);\n    selectList.add(new SqlIdentifier(\"*\", SqlParserPos.ZERO));\n    SqlNode sourceTable = call.getTargetTable();\n    if (call.getAlias() != null) {\n      sourceTable =\n          SqlValidatorUtil.addAlias(\n              sourceTable,\n              call.getAlias().getSimple());\n    }\n    return new SqlSelect(SqlParserPos.ZERO, null, selectList, sourceTable,\n        call.getCondition(), null, null, null, null, null, null);\n  }\n","realPath":"core/src/main/java/org/apache/calcite/sql/validate/SqlValidatorImpl.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":1336,"status":"M"}],"commitId":"737846ee992cbeb6513075fdda5d99b42b6cf515","commitMessage":"@@@[CALCITE-974] Exception while validating DELETE (Yuri Au Yong)\n","date":"2015-11-20 09:08:20","modifiedFileCount":"1","status":"M","submitter":"Yuri Au Yong"},{"authorTime":"2019-08-04 15:52:20","codes":[{"authorDate":"2019-08-04 15:52:20","commitOrder":3,"curCode":"  protected SqlSelect createSourceSelectForUpdate(SqlUpdate call) {\n    final SqlNodeList selectList = new SqlNodeList(SqlParserPos.ZERO);\n    selectList.add(SqlIdentifier.star(SqlParserPos.ZERO));\n    int ordinal = 0;\n    for (SqlNode exp : call.getSourceExpressionList()) {\n      \r\n      \r\n      String alias = SqlUtil.deriveAliasFromOrdinal(ordinal);\n      selectList.add(SqlValidatorUtil.addAlias(exp, alias));\n      ++ordinal;\n    }\n    SqlNode sourceTable = call.getTargetTable();\n    if (call.getAlias() != null) {\n      sourceTable =\n          SqlValidatorUtil.addAlias(\n              sourceTable,\n              call.getAlias().getSimple());\n    }\n    return new SqlSelect(SqlParserPos.ZERO, null, selectList, sourceTable,\n        call.getCondition(), null, null, null, null, null, null, null);\n  }\n","date":"2019-11-12 10:21:39","endLine":1540,"groupId":"6749","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"createSourceSelectForUpdate","params":"(SqlUpdatecall)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/88/55ea464f2318160751b9be42fa56b4717f0e00.src","preCode":"  protected SqlSelect createSourceSelectForUpdate(SqlUpdate call) {\n    final SqlNodeList selectList = new SqlNodeList(SqlParserPos.ZERO);\n    selectList.add(SqlIdentifier.star(SqlParserPos.ZERO));\n    int ordinal = 0;\n    for (SqlNode exp : call.getSourceExpressionList()) {\n      \r\n      \r\n      String alias = SqlUtil.deriveAliasFromOrdinal(ordinal);\n      selectList.add(SqlValidatorUtil.addAlias(exp, alias));\n      ++ordinal;\n    }\n    SqlNode sourceTable = call.getTargetTable();\n    if (call.getAlias() != null) {\n      sourceTable =\n          SqlValidatorUtil.addAlias(\n              sourceTable,\n              call.getAlias().getSimple());\n    }\n    return new SqlSelect(SqlParserPos.ZERO, null, selectList, sourceTable,\n        call.getCondition(), null, null, null, null, null, null);\n  }\n","realPath":"core/src/main/java/org/apache/calcite/sql/validate/SqlValidatorImpl.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":1520,"status":"M"},{"authorDate":"2019-08-04 15:52:20","commitOrder":3,"curCode":"  protected SqlSelect createSourceSelectForDelete(SqlDelete call) {\n    final SqlNodeList selectList = new SqlNodeList(SqlParserPos.ZERO);\n    selectList.add(SqlIdentifier.star(SqlParserPos.ZERO));\n    SqlNode sourceTable = call.getTargetTable();\n    if (call.getAlias() != null) {\n      sourceTable =\n          SqlValidatorUtil.addAlias(\n              sourceTable,\n              call.getAlias().getSimple());\n    }\n    return new SqlSelect(SqlParserPos.ZERO, null, selectList, sourceTable,\n        call.getCondition(), null, null, null, null, null, null, null);\n  }\n","date":"2019-11-12 10:21:39","endLine":1561,"groupId":"6749","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"createSourceSelectForDelete","params":"(SqlDeletecall)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/88/55ea464f2318160751b9be42fa56b4717f0e00.src","preCode":"  protected SqlSelect createSourceSelectForDelete(SqlDelete call) {\n    final SqlNodeList selectList = new SqlNodeList(SqlParserPos.ZERO);\n    selectList.add(SqlIdentifier.star(SqlParserPos.ZERO));\n    SqlNode sourceTable = call.getTargetTable();\n    if (call.getAlias() != null) {\n      sourceTable =\n          SqlValidatorUtil.addAlias(\n              sourceTable,\n              call.getAlias().getSimple());\n    }\n    return new SqlSelect(SqlParserPos.ZERO, null, selectList, sourceTable,\n        call.getCondition(), null, null, null, null, null, null);\n  }\n","realPath":"core/src/main/java/org/apache/calcite/sql/validate/SqlValidatorImpl.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":1549,"status":"M"}],"commitId":"52bc246d5e07510689635f407f4d9dc494b0af4d","commitMessage":"@@@[CALCITE-482] Implement sql and planner hints\n\n* Define a ORACLE stype hint syntax for both query(after SELECT keyword) hint and table(after table reference) hint\n* The hints would be translated to RelHint instances and propagated\nright after the sql node was converted to relational expression\n* Introduce HintStrategyTable and HintStrategy to customize the hints\npropagation\n* Add a new interface RelOptRuleCall.transformTo(RelNode.  Map.  BiFunction) to\nmake the hints copy strategy overridable\n* Cache the hint strategies into RelOptCluster so that user can query the\nstrategies during rule planning\n","date":"2019-11-12 10:21:39","modifiedFileCount":"36","status":"M","submitter":"yuzhao.cyz"},{"authorTime":"2020-05-29 00:04:40","codes":[{"authorDate":"2020-05-29 00:04:40","commitOrder":4,"curCode":"  protected SqlSelect createSourceSelectForUpdate(SqlUpdate call) {\n    final SqlNodeList selectList = new SqlNodeList(SqlParserPos.ZERO);\n    selectList.add(SqlIdentifier.star(SqlParserPos.ZERO));\n    int ordinal = 0;\n    for (SqlNode exp : call.getSourceExpressionList()) {\n      \r\n      \r\n      String alias = SqlUtil.deriveAliasFromOrdinal(ordinal);\n      selectList.add(SqlValidatorUtil.addAlias(exp, alias));\n      ++ordinal;\n    }\n    SqlNode sourceTable = call.getTargetTable();\n    SqlIdentifier alias = call.getAlias();\n    if (alias != null) {\n      sourceTable =\n          SqlValidatorUtil.addAlias(\n              sourceTable,\n              alias.getSimple());\n    }\n    return new SqlSelect(SqlParserPos.ZERO, null, selectList, sourceTable,\n        call.getCondition(), null, null, null, null, null, null, null);\n  }\n","date":"2020-11-30 06:45:33","endLine":1700,"groupId":"101851","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"createSourceSelectForUpdate","params":"(SqlUpdatecall)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/42/8f1d3a3f0cf3ef4a3ecc26bac058934422699c.src","preCode":"  protected SqlSelect createSourceSelectForUpdate(SqlUpdate call) {\n    final SqlNodeList selectList = new SqlNodeList(SqlParserPos.ZERO);\n    selectList.add(SqlIdentifier.star(SqlParserPos.ZERO));\n    int ordinal = 0;\n    for (SqlNode exp : call.getSourceExpressionList()) {\n      \r\n      \r\n      String alias = SqlUtil.deriveAliasFromOrdinal(ordinal);\n      selectList.add(SqlValidatorUtil.addAlias(exp, alias));\n      ++ordinal;\n    }\n    SqlNode sourceTable = call.getTargetTable();\n    if (call.getAlias() != null) {\n      sourceTable =\n          SqlValidatorUtil.addAlias(\n              sourceTable,\n              call.getAlias().getSimple());\n    }\n    return new SqlSelect(SqlParserPos.ZERO, null, selectList, sourceTable,\n        call.getCondition(), null, null, null, null, null, null, null);\n  }\n","realPath":"core/src/main/java/org/apache/calcite/sql/validate/SqlValidatorImpl.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":1679,"status":"M"},{"authorDate":"2020-05-29 00:04:40","commitOrder":4,"curCode":"  protected SqlSelect createSourceSelectForDelete(SqlDelete call) {\n    final SqlNodeList selectList = new SqlNodeList(SqlParserPos.ZERO);\n    selectList.add(SqlIdentifier.star(SqlParserPos.ZERO));\n    SqlNode sourceTable = call.getTargetTable();\n    SqlIdentifier alias = call.getAlias();\n    if (alias != null) {\n      sourceTable =\n          SqlValidatorUtil.addAlias(\n              sourceTable,\n              alias.getSimple());\n    }\n    return new SqlSelect(SqlParserPos.ZERO, null, selectList, sourceTable,\n        call.getCondition(), null, null, null, null, null, null, null);\n  }\n","date":"2020-11-30 06:45:33","endLine":1722,"groupId":"101851","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"createSourceSelectForDelete","params":"(SqlDeletecall)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/42/8f1d3a3f0cf3ef4a3ecc26bac058934422699c.src","preCode":"  protected SqlSelect createSourceSelectForDelete(SqlDelete call) {\n    final SqlNodeList selectList = new SqlNodeList(SqlParserPos.ZERO);\n    selectList.add(SqlIdentifier.star(SqlParserPos.ZERO));\n    SqlNode sourceTable = call.getTargetTable();\n    if (call.getAlias() != null) {\n      sourceTable =\n          SqlValidatorUtil.addAlias(\n              sourceTable,\n              call.getAlias().getSimple());\n    }\n    return new SqlSelect(SqlParserPos.ZERO, null, selectList, sourceTable,\n        call.getCondition(), null, null, null, null, null, null, null);\n  }\n","realPath":"core/src/main/java/org/apache/calcite/sql/validate/SqlValidatorImpl.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":1709,"status":"M"}],"commitId":"d9a81b88ad561e7e4cedae93e805e0d7a53a7f1a","commitMessage":"@@@[CALCITE-4199] Add nullability annotations\n\nThe commit includes javadoc updates and refactorings made by Julian Hyde in https://github.com/apache/calcite/pull/2278\n","date":"2020-11-30 06:45:33","modifiedFileCount":"1012","status":"M","submitter":"Vladimir Sitnikov"}]
