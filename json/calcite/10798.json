[{"authorTime":"2018-06-12 05:23:22","codes":[{"authorDate":"2018-06-12 05:23:22","commitOrder":2,"curCode":"  @Test public void testMemberOfOperator() {\n    tester.setFor(\n        SqlStdOperatorTable.MEMBER_OF,\n        VM_FENNEL,\n        VM_JAVA);\n    tester.checkBoolean(\"1 member of multiset[1]\", Boolean.TRUE);\n    tester.checkBoolean(\n        \"'2' member of multiset['1']\",\n         Boolean.FALSE);\n    tester.checkBoolean(\n        \"cast(null as double) member of multiset[cast(null as double)]\",\n         Boolean.TRUE);\n    tester.checkBoolean(\n        \"cast(null as double) member of multiset[1.1]\",\n         Boolean.FALSE);\n    tester.checkBoolean(\n        \"1.1 member of multiset[cast(null as double)]\", Boolean.FALSE);\n  }\n","date":"2018-06-13 09:52:07","endLine":5342,"groupId":"11296","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testMemberOfOperator","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/16/948643f688eca7b3e733599c1f56916473a8dc.src","preCode":"  @Test public void testMemberOfOperator() {\n    tester.setFor(\n        SqlStdOperatorTable.MEMBER_OF,\n        VM_FENNEL,\n        VM_JAVA);\n    tester.checkBoolean(\"1 member of multiset[1]\", Boolean.TRUE);\n    tester.checkBoolean(\n        \"'2' member of multiset['1']\",\n         Boolean.FALSE);\n    tester.checkBoolean(\n        \"cast(null as double) member of multiset[cast(null as double)]\",\n         Boolean.TRUE);\n    tester.checkBoolean(\n        \"cast(null as double) member of multiset[1.1]\",\n         Boolean.FALSE);\n    tester.checkBoolean(\n        \"1.1 member of multiset[cast(null as double)]\", Boolean.FALSE);\n  }\n","realPath":"core/src/test/java/org/apache/calcite/sql/test/SqlOperatorBaseTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":5325,"status":"MB"},{"authorDate":"2018-06-12 05:23:22","commitOrder":2,"curCode":"  @Test public void testSubMultisetOfOperator() {\n    tester.setFor(\n        SqlStdOperatorTable.SUBMULTISET_OF,\n        VM_FENNEL,\n        VM_JAVA);\n    tester.checkBoolean(\"multiset[2] submultiset of multiset[1]\", Boolean.FALSE);\n    tester.checkBoolean(\"multiset[1] submultiset of multiset[1]\", Boolean.TRUE);\n    tester.checkBoolean(\"multiset[1, 2] submultiset of multiset[1]\", Boolean.FALSE);\n    tester.checkBoolean(\"multiset[1] submultiset of multiset[1, 2]\", Boolean.TRUE);\n    tester.checkBoolean(\"multiset[1, 2] submultiset of multiset[1, 2]\", Boolean.TRUE);\n    tester.checkBoolean(\n        \"multiset['a', 'b'] submultiset of multiset['c', 'd', 's', 'a']\", Boolean.FALSE);\n    tester.checkBoolean(\n        \"multiset['a', 'd'] submultiset of multiset['c', 's', 'a', 'w', 'd']\", Boolean.TRUE);\n    tester.checkBoolean(\"multiset['q', 'a'] submultiset of multiset['a', 'q']\", Boolean.TRUE);\n  }\n","date":"2018-06-13 09:52:07","endLine":5447,"groupId":"11296","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testSubMultisetOfOperator","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/16/948643f688eca7b3e733599c1f56916473a8dc.src","preCode":"  @Test public void testSubMultisetOfOperator() {\n    tester.setFor(\n        SqlStdOperatorTable.SUBMULTISET_OF,\n        VM_FENNEL,\n        VM_JAVA);\n    tester.checkBoolean(\"multiset[2] submultiset of multiset[1]\", Boolean.FALSE);\n    tester.checkBoolean(\"multiset[1] submultiset of multiset[1]\", Boolean.TRUE);\n    tester.checkBoolean(\"multiset[1, 2] submultiset of multiset[1]\", Boolean.FALSE);\n    tester.checkBoolean(\"multiset[1] submultiset of multiset[1, 2]\", Boolean.TRUE);\n    tester.checkBoolean(\"multiset[1, 2] submultiset of multiset[1, 2]\", Boolean.TRUE);\n    tester.checkBoolean(\n        \"multiset['a', 'b'] submultiset of multiset['c', 'd', 's', 'a']\", Boolean.FALSE);\n    tester.checkBoolean(\n        \"multiset['a', 'd'] submultiset of multiset['c', 's', 'a', 'w', 'd']\", Boolean.TRUE);\n    tester.checkBoolean(\"multiset['q', 'a'] submultiset of multiset['a', 'q']\", Boolean.TRUE);\n  }\n","realPath":"core/src/test/java/org/apache/calcite/sql/test/SqlOperatorBaseTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":5432,"status":"B"}],"commitId":"d35c11c73cc78cf379d7e886cbbfb62b91d75fad","commitMessage":"@@@[CALCITE-2355] Implement multiset operations (Sergey Nuyanzin)\n\nImplement multiset operations: IS A SET.  SUBMULTISET OF.  MEMBER OF. \nMULTISET EXCEPT/INTESECT/UNION [ALL | DISTINCT].  FUSION; add\nmultiset operations: IS NOT A SET.  IS EMPTY.  IS NOT EMPTY.  SUBMULTISET OF.\n\nFix behavior if neither ALL nor DISTINCT is specified for the case of\nMULTISET EXCEPT/INTERSECT/UNION.\n\nClose apache/calcite#727\n","date":"2018-06-13 09:52:07","modifiedFileCount":"9","status":"M","submitter":"snuyanzin"},{"authorTime":"2020-04-02 10:39:10","codes":[{"authorDate":"2020-04-02 10:39:10","commitOrder":3,"curCode":"  @Test void testMemberOfOperator() {\n    tester.setFor(\n        SqlStdOperatorTable.MEMBER_OF,\n        VM_FENNEL,\n        VM_JAVA);\n    tester.checkBoolean(\"1 member of multiset[1]\", Boolean.TRUE);\n    tester.checkBoolean(\n        \"'2' member of multiset['1']\",\n         Boolean.FALSE);\n    tester.checkBoolean(\n        \"cast(null as double) member of multiset[cast(null as double)]\",\n         Boolean.TRUE);\n    tester.checkBoolean(\n        \"cast(null as double) member of multiset[1.1]\",\n         Boolean.FALSE);\n    tester.checkBoolean(\n        \"1.1 member of multiset[cast(null as double)]\", Boolean.FALSE);\n  }\n","date":"2020-04-06 04:57:49","endLine":6843,"groupId":"10798","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testMemberOfOperator","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/63/8682f250d7c070d5d126ca9e1e757179e57de4.src","preCode":"  @Test public void testMemberOfOperator() {\n    tester.setFor(\n        SqlStdOperatorTable.MEMBER_OF,\n        VM_FENNEL,\n        VM_JAVA);\n    tester.checkBoolean(\"1 member of multiset[1]\", Boolean.TRUE);\n    tester.checkBoolean(\n        \"'2' member of multiset['1']\",\n         Boolean.FALSE);\n    tester.checkBoolean(\n        \"cast(null as double) member of multiset[cast(null as double)]\",\n         Boolean.TRUE);\n    tester.checkBoolean(\n        \"cast(null as double) member of multiset[1.1]\",\n         Boolean.FALSE);\n    tester.checkBoolean(\n        \"1.1 member of multiset[cast(null as double)]\", Boolean.FALSE);\n  }\n","realPath":"core/src/test/java/org/apache/calcite/sql/test/SqlOperatorBaseTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":6826,"status":"M"},{"authorDate":"2020-04-02 10:39:10","commitOrder":3,"curCode":"  @Test void testSubMultisetOfOperator() {\n    tester.setFor(\n        SqlStdOperatorTable.SUBMULTISET_OF,\n        VM_FENNEL,\n        VM_JAVA);\n    tester.checkBoolean(\"multiset[2] submultiset of multiset[1]\", Boolean.FALSE);\n    tester.checkBoolean(\"multiset[1] submultiset of multiset[1]\", Boolean.TRUE);\n    tester.checkBoolean(\"multiset[1, 2] submultiset of multiset[1]\", Boolean.FALSE);\n    tester.checkBoolean(\"multiset[1] submultiset of multiset[1, 2]\", Boolean.TRUE);\n    tester.checkBoolean(\"multiset[1, 2] submultiset of multiset[1, 2]\", Boolean.TRUE);\n    tester.checkBoolean(\n        \"multiset['a', 'b'] submultiset of multiset['c', 'd', 's', 'a']\", Boolean.FALSE);\n    tester.checkBoolean(\n        \"multiset['a', 'd'] submultiset of multiset['c', 's', 'a', 'w', 'd']\", Boolean.TRUE);\n    tester.checkBoolean(\"multiset['q', 'a'] submultiset of multiset['a', 'q']\", Boolean.TRUE);\n  }\n","date":"2020-04-06 04:57:49","endLine":6948,"groupId":"10798","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testSubMultisetOfOperator","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/63/8682f250d7c070d5d126ca9e1e757179e57de4.src","preCode":"  @Test public void testSubMultisetOfOperator() {\n    tester.setFor(\n        SqlStdOperatorTable.SUBMULTISET_OF,\n        VM_FENNEL,\n        VM_JAVA);\n    tester.checkBoolean(\"multiset[2] submultiset of multiset[1]\", Boolean.FALSE);\n    tester.checkBoolean(\"multiset[1] submultiset of multiset[1]\", Boolean.TRUE);\n    tester.checkBoolean(\"multiset[1, 2] submultiset of multiset[1]\", Boolean.FALSE);\n    tester.checkBoolean(\"multiset[1] submultiset of multiset[1, 2]\", Boolean.TRUE);\n    tester.checkBoolean(\"multiset[1, 2] submultiset of multiset[1, 2]\", Boolean.TRUE);\n    tester.checkBoolean(\n        \"multiset['a', 'b'] submultiset of multiset['c', 'd', 's', 'a']\", Boolean.FALSE);\n    tester.checkBoolean(\n        \"multiset['a', 'd'] submultiset of multiset['c', 's', 'a', 'w', 'd']\", Boolean.TRUE);\n    tester.checkBoolean(\"multiset['q', 'a'] submultiset of multiset['a', 'q']\", Boolean.TRUE);\n  }\n","realPath":"core/src/test/java/org/apache/calcite/sql/test/SqlOperatorBaseTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":6933,"status":"M"}],"commitId":"9492dd4146f63ddc028010d6c4e86f6a5cb29a8d","commitMessage":"@@@[CALCITE-3892] Make junit test classes and methods non-public where possible\n\nPrior to junit 5.  classes and methods had to be public. This is no\nlonger the case.\n\nSome classes need to remain public because they are referenced from\nelsewhere.  or if they use reflection somehow. The remaining 'public'\nkeyword will be informative to maintainers.\n","date":"2020-04-06 04:57:49","modifiedFileCount":"196","status":"M","submitter":"Julian Hyde"}]
