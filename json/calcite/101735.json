[{"authorTime":"2014-11-14 09:39:29","codes":[{"authorDate":"2014-11-14 09:39:29","commitOrder":1,"curCode":"  private static int lookup(List<RelDataTypeField> fields, String name) {\n    for (int i = 0; i < fields.size(); i++) {\n      final RelDataTypeField field = fields.get(i);\n      if (field.getName().equals(name)) {\n        return i;\n      }\n    }\n    return -1;\n  }\n","date":"2014-11-14 09:39:34","endLine":113,"groupId":"8008","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"lookup","params":"(List<RelDataTypeField>fields@Stringname)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/f9/d7b1ec8704fceeaa9c698249d4327fed357a0c.src","preCode":"  private static int lookup(List<RelDataTypeField> fields, String name) {\n    for (int i = 0; i < fields.size(); i++) {\n      final RelDataTypeField field = fields.get(i);\n      if (field.getName().equals(name)) {\n        return i;\n      }\n    }\n    return -1;\n  }\n","realPath":"core/src/main/java/org/apache/calcite/rex/RexPermuteInputsShuttle.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":105,"status":"B"},{"authorDate":"2014-11-14 09:39:29","commitOrder":1,"curCode":"  public static int findField(RelDataType type, String fieldName) {\n    List<RelDataTypeField> fields = type.getFieldList();\n    for (int i = 0; i < fields.size(); i++) {\n      RelDataTypeField field = fields.get(i);\n      if (field.getName().equals(fieldName)) {\n        return i;\n      }\n    }\n    return -1;\n  }\n","date":"2014-11-14 09:39:34","endLine":1102,"groupId":"8008","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"findField","params":"(RelDataTypetype@StringfieldName)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/2a/fc8e17a1f7af635c8ba1fe68373ed888bf9021.src","preCode":"  public static int findField(RelDataType type, String fieldName) {\n    List<RelDataTypeField> fields = type.getFieldList();\n    for (int i = 0; i < fields.size(); i++) {\n      RelDataTypeField field = fields.get(i);\n      if (field.getName().equals(fieldName)) {\n        return i;\n      }\n    }\n    return -1;\n  }\n","realPath":"core/src/main/java/org/apache/calcite/sql/type/SqlTypeUtil.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":1093,"status":"B"}],"commitId":"a611d645ad754844a39f3d98f5f814f13dbd9404","commitMessage":"@@@[CALCITE-296] Re-organize package structure;\n[CALCITE-419] Naming convention for planner rules\n\nThis change only renames files (and deletes some obsolete files). There are no content changes.\n","date":"2014-11-14 09:39:34","modifiedFileCount":"0","status":"B","submitter":"Julian Hyde"},{"authorTime":"2020-07-29 10:49:50","codes":[{"authorDate":"2014-11-14 09:39:29","commitOrder":2,"curCode":"  private static int lookup(List<RelDataTypeField> fields, String name) {\n    for (int i = 0; i < fields.size(); i++) {\n      final RelDataTypeField field = fields.get(i);\n      if (field.getName().equals(name)) {\n        return i;\n      }\n    }\n    return -1;\n  }\n","date":"2014-11-14 09:39:34","endLine":113,"groupId":"8008","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"lookup","params":"(List<RelDataTypeField>fields@Stringname)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/f9/d7b1ec8704fceeaa9c698249d4327fed357a0c.src","preCode":"  private static int lookup(List<RelDataTypeField> fields, String name) {\n    for (int i = 0; i < fields.size(); i++) {\n      final RelDataTypeField field = fields.get(i);\n      if (field.getName().equals(name)) {\n        return i;\n      }\n    }\n    return -1;\n  }\n","realPath":"core/src/main/java/org/apache/calcite/rex/RexPermuteInputsShuttle.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":105,"status":"N"},{"authorDate":"2020-07-29 10:49:50","commitOrder":2,"curCode":"  public static int findField(RelDataType type, String fieldName) {\n    List<RelDataTypeField> fields = type.getFieldList();\n    for (int i = 0; i < fields.size(); i++) {\n      RelDataTypeField field = fields.get(i);\n      if (field.getName().equals(fieldName)) {\n        return i;\n      }\n      final RelDataType fieldType = field.getType();\n      if (fieldType.isStruct() && findField(fieldType, fieldName) != -1) {\n        return i;\n      }\n    }\n    return -1;\n  }\n","date":"2020-07-29 11:22:29","endLine":1285,"groupId":"8008","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"findField","params":"(RelDataTypetype@StringfieldName)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/3b/a355cfa0192997e029289dc90ff1855c2d6566.src","preCode":"  public static int findField(RelDataType type, String fieldName) {\n    List<RelDataTypeField> fields = type.getFieldList();\n    for (int i = 0; i < fields.size(); i++) {\n      RelDataTypeField field = fields.get(i);\n      if (field.getName().equals(fieldName)) {\n        return i;\n      }\n    }\n    return -1;\n  }\n","realPath":"core/src/main/java/org/apache/calcite/sql/type/SqlTypeUtil.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":1272,"status":"M"}],"commitId":"c52f0e527c86f6a6b18e138310359ac0c72ca529","commitMessage":"@@@[CALCITE-4145] Exception when query from UDF field with structured type\n","date":"2020-07-29 11:22:29","modifiedFileCount":"4","status":"M","submitter":"yuzhao.cyz"},{"authorTime":"2020-07-29 10:49:50","codes":[{"authorDate":"2020-05-29 00:04:40","commitOrder":3,"curCode":"  private static int lookup(List<RelDataTypeField> fields, @Nullable String name) {\n    for (int i = 0; i < fields.size(); i++) {\n      final RelDataTypeField field = fields.get(i);\n      if (field.getName().equals(name)) {\n        return i;\n      }\n    }\n    return -1;\n  }\n","date":"2020-11-30 06:45:33","endLine":113,"groupId":"101735","id":5,"instanceNumber":1,"isCurCommit":1,"methodName":"lookup","params":"(List<RelDataTypeField>fields@@NullableStringname)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/9f/418b1b72417b68f595382dd5813e716485db5e.src","preCode":"  private static int lookup(List<RelDataTypeField> fields, String name) {\n    for (int i = 0; i < fields.size(); i++) {\n      final RelDataTypeField field = fields.get(i);\n      if (field.getName().equals(name)) {\n        return i;\n      }\n    }\n    return -1;\n  }\n","realPath":"core/src/main/java/org/apache/calcite/rex/RexPermuteInputsShuttle.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":105,"status":"M"},{"authorDate":"2020-07-29 10:49:50","commitOrder":3,"curCode":"  public static int findField(RelDataType type, String fieldName) {\n    List<RelDataTypeField> fields = type.getFieldList();\n    for (int i = 0; i < fields.size(); i++) {\n      RelDataTypeField field = fields.get(i);\n      if (field.getName().equals(fieldName)) {\n        return i;\n      }\n      final RelDataType fieldType = field.getType();\n      if (fieldType.isStruct() && findField(fieldType, fieldName) != -1) {\n        return i;\n      }\n    }\n    return -1;\n  }\n","date":"2020-07-29 11:22:29","endLine":1285,"groupId":"101735","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"findField","params":"(RelDataTypetype@StringfieldName)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/3b/a355cfa0192997e029289dc90ff1855c2d6566.src","preCode":"  public static int findField(RelDataType type, String fieldName) {\n    List<RelDataTypeField> fields = type.getFieldList();\n    for (int i = 0; i < fields.size(); i++) {\n      RelDataTypeField field = fields.get(i);\n      if (field.getName().equals(fieldName)) {\n        return i;\n      }\n      final RelDataType fieldType = field.getType();\n      if (fieldType.isStruct() && findField(fieldType, fieldName) != -1) {\n        return i;\n      }\n    }\n    return -1;\n  }\n","realPath":"core/src/main/java/org/apache/calcite/sql/type/SqlTypeUtil.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":1272,"status":"N"}],"commitId":"d9a81b88ad561e7e4cedae93e805e0d7a53a7f1a","commitMessage":"@@@[CALCITE-4199] Add nullability annotations\n\nThe commit includes javadoc updates and refactorings made by Julian Hyde in https://github.com/apache/calcite/pull/2278\n","date":"2020-11-30 06:45:33","modifiedFileCount":"1012","status":"M","submitter":"Vladimir Sitnikov"}]
