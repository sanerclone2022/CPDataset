[{"authorTime":"2018-05-17 04:34:16","codes":[{"authorDate":"2017-08-15 08:46:42","commitOrder":6,"curCode":"  public Object getValue2() {\n    if (value == null) {\n      return null;\n    }\n    switch (typeName) {\n    case CHAR:\n      return getValueAs(String.class);\n    case DECIMAL:\n    case TIMESTAMP:\n    case TIMESTAMP_WITH_LOCAL_TIME_ZONE:\n      return getValueAs(Long.class);\n    case DATE:\n    case TIME:\n    case TIME_WITH_LOCAL_TIME_ZONE:\n      return getValueAs(Integer.class);\n    default:\n      return value;\n    }\n  }\n","date":"2017-09-06 06:00:36","endLine":748,"groupId":"8235","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"getValue2","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/a5/ed9188b3cf3e8f6f0f0198ef785f02650e75d3.src","preCode":"  public Object getValue2() {\n    if (value == null) {\n      return null;\n    }\n    switch (typeName) {\n    case CHAR:\n      return getValueAs(String.class);\n    case DECIMAL:\n    case TIMESTAMP:\n    case TIMESTAMP_WITH_LOCAL_TIME_ZONE:\n      return getValueAs(Long.class);\n    case DATE:\n    case TIME:\n    case TIME_WITH_LOCAL_TIME_ZONE:\n      return getValueAs(Integer.class);\n    default:\n      return value;\n    }\n  }\n","realPath":"core/src/main/java/org/apache/calcite/rex/RexLiteral.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":730,"status":"NB"},{"authorDate":"2018-05-17 04:34:16","commitOrder":6,"curCode":"  public Comparable getValue4() {\n    if (value == null) {\n      return null;\n    }\n    switch (typeName) {\n    case TIMESTAMP:\n    case TIMESTAMP_WITH_LOCAL_TIME_ZONE:\n      return getValueAs(Long.class);\n    case DATE:\n    case TIME:\n    case TIME_WITH_LOCAL_TIME_ZONE:\n      return getValueAs(Integer.class);\n    default:\n      return value;\n    }\n  }\n","date":"2018-05-29 12:36:57","endLine":786,"groupId":"8235","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"getValue4","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/94/ea886a622c6b5a615aa7d03f7d194fbf651f9b.src","preCode":"  public Comparable getValue4() {\n    if (value == null) {\n      return null;\n    }\n    switch (typeName) {\n    case TIMESTAMP:\n    case TIMESTAMP_WITH_LOCAL_TIME_ZONE:\n      return getValueAs(Long.class);\n    case DATE:\n    case TIME:\n    case TIME_WITH_LOCAL_TIME_ZONE:\n      return getValueAs(Integer.class);\n    default:\n      return value;\n    }\n  }\n","realPath":"core/src/main/java/org/apache/calcite/rex/RexLiteral.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":771,"status":"B"}],"commitId":"6fe55e3ecc1f476bb0d629007f128ee62e771ff0","commitMessage":"@@@[CALCITE-2314] Verify RexNode transformations by evaluating before and after expressions against sample values\n\nAdd RexInterpreter.  a simple (and incomplete.  but good enough for\ntesting) interpreter of RexNode expressions.\n\nInterpreter skips expressions involving CAST.\n\nPrint NullSentinel.INSTANCE as \"NULL\"\n\nDisable test for simplifying CEIL/FLOOR (logged CALCITE-2332)\n\nFix bugs in RexInterpreter. (Zoltan Haindrich)\n","date":"2018-05-29 12:36:57","modifiedFileCount":"7","status":"M","submitter":"Julian Hyde"},{"authorTime":"2020-05-29 00:04:40","codes":[{"authorDate":"2020-05-29 00:04:40","commitOrder":7,"curCode":"  public @Nullable Object getValue2() {\n    if (value == null) {\n      return null;\n    }\n    switch (typeName) {\n    case CHAR:\n      return getValueAs(String.class);\n    case DECIMAL:\n    case TIMESTAMP:\n    case TIMESTAMP_WITH_LOCAL_TIME_ZONE:\n      return getValueAs(Long.class);\n    case DATE:\n    case TIME:\n    case TIME_WITH_LOCAL_TIME_ZONE:\n      return getValueAs(Integer.class);\n    default:\n      return value;\n    }\n  }\n","date":"2020-11-30 06:45:33","endLine":955,"groupId":"101711","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"getValue2","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/8d/7cf44e96d41e75c4a6b9b0c3339338d9d5cb2f.src","preCode":"  public Object getValue2() {\n    if (value == null) {\n      return null;\n    }\n    switch (typeName) {\n    case CHAR:\n      return getValueAs(String.class);\n    case DECIMAL:\n    case TIMESTAMP:\n    case TIMESTAMP_WITH_LOCAL_TIME_ZONE:\n      return getValueAs(Long.class);\n    case DATE:\n    case TIME:\n    case TIME_WITH_LOCAL_TIME_ZONE:\n      return getValueAs(Integer.class);\n    default:\n      return value;\n    }\n  }\n","realPath":"core/src/main/java/org/apache/calcite/rex/RexLiteral.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":937,"status":"M"},{"authorDate":"2020-05-29 00:04:40","commitOrder":7,"curCode":"  public @Nullable Comparable getValue4() {\n    if (value == null) {\n      return null;\n    }\n    switch (typeName) {\n    case TIMESTAMP:\n    case TIMESTAMP_WITH_LOCAL_TIME_ZONE:\n      return getValueAs(Long.class);\n    case DATE:\n    case TIME:\n    case TIME_WITH_LOCAL_TIME_ZONE:\n      return getValueAs(Integer.class);\n    default:\n      return value;\n    }\n  }\n","date":"2020-11-30 06:45:33","endLine":993,"groupId":"101711","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"getValue4","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/8d/7cf44e96d41e75c4a6b9b0c3339338d9d5cb2f.src","preCode":"  public Comparable getValue4() {\n    if (value == null) {\n      return null;\n    }\n    switch (typeName) {\n    case TIMESTAMP:\n    case TIMESTAMP_WITH_LOCAL_TIME_ZONE:\n      return getValueAs(Long.class);\n    case DATE:\n    case TIME:\n    case TIME_WITH_LOCAL_TIME_ZONE:\n      return getValueAs(Integer.class);\n    default:\n      return value;\n    }\n  }\n","realPath":"core/src/main/java/org/apache/calcite/rex/RexLiteral.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":978,"status":"M"}],"commitId":"d9a81b88ad561e7e4cedae93e805e0d7a53a7f1a","commitMessage":"@@@[CALCITE-4199] Add nullability annotations\n\nThe commit includes javadoc updates and refactorings made by Julian Hyde in https://github.com/apache/calcite/pull/2278\n","date":"2020-11-30 06:45:33","modifiedFileCount":"1012","status":"M","submitter":"Vladimir Sitnikov"}]
