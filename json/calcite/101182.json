[{"authorTime":"2014-11-14 09:39:29","codes":[{"authorDate":"2014-11-14 09:39:29","commitOrder":1,"curCode":"  @Test public void testIntervalOperators() {\n    checkExpType(\"interval '1' hour + TIME '8:8:8'\", \"TIME(0) NOT NULL\");\n    checkExpType(\"TIME '8:8:8' - interval '1' hour\", \"TIME(0) NOT NULL\");\n    checkExpType(\"TIME '8:8:8' + interval '1' hour\", \"TIME(0) NOT NULL\");\n\n    checkExpType(\n        \"interval '1' day + interval '1' DAY(4)\",\n        \"INTERVAL DAY(4) NOT NULL\");\n    checkExpType(\n        \"interval '1' day(5) + interval '1' DAY\",\n        \"INTERVAL DAY(5) NOT NULL\");\n    checkExpType(\n        \"interval '1' day + interval '1' HOUR(10)\",\n        \"INTERVAL DAY TO HOUR NOT NULL\");\n    checkExpType(\n        \"interval '1' day + interval '1' MINUTE\",\n        \"INTERVAL DAY TO MINUTE NOT NULL\");\n    checkExpType(\n        \"interval '1' day + interval '1' second\",\n        \"INTERVAL DAY TO SECOND NOT NULL\");\n\n    checkExpType(\n        \"interval '1:2' hour to minute + interval '1' second\",\n        \"INTERVAL HOUR TO SECOND NOT NULL\");\n    checkExpType(\n        \"interval '1:3' hour to minute + interval '1 1:2:3.4' day to second\",\n        \"INTERVAL DAY TO SECOND NOT NULL\");\n    checkExpType(\n        \"interval '1:2' hour to minute + interval '1 1' day to hour\",\n        \"INTERVAL DAY TO MINUTE NOT NULL\");\n    checkExpType(\n        \"interval '1:2' hour to minute + interval '1 1' day to hour\",\n        \"INTERVAL DAY TO MINUTE NOT NULL\");\n    checkExpType(\n        \"interval '1 2' day to hour + interval '1:1' minute to second\",\n        \"INTERVAL DAY TO SECOND NOT NULL\");\n\n    checkExpType(\n        \"interval '1' year + interval '1' month\",\n        \"INTERVAL YEAR TO MONTH NOT NULL\");\n    checkExpType(\n        \"interval '1' day - interval '1' hour\",\n        \"INTERVAL DAY TO HOUR NOT NULL\");\n    checkExpType(\n        \"interval '1' year - interval '1' month\",\n        \"INTERVAL YEAR TO MONTH NOT NULL\");\n    checkExpType(\n        \"interval '1' month - interval '1' year\",\n        \"INTERVAL YEAR TO MONTH NOT NULL\");\n    checkWholeExpFails(\n        \"interval '1' year + interval '1' day\",\n        \"(?s).*Cannot apply '\\\\+' to arguments of type '<INTERVAL YEAR> \\\\+ <INTERVAL DAY>'.*\");\n    checkWholeExpFails(\n        \"interval '1' month + interval '1' second\",\n        \"(?s).*Cannot apply '\\\\+' to arguments of type '<INTERVAL MONTH> \\\\+ <INTERVAL SECOND>'.*\");\n    checkWholeExpFails(\n        \"interval '1' year - interval '1' day\",\n        \"(?s).*Cannot apply '-' to arguments of type '<INTERVAL YEAR> - <INTERVAL DAY>'.*\");\n    checkWholeExpFails(\n        \"interval '1' month - interval '1' second\",\n        \"(?s).*Cannot apply '-' to arguments of type '<INTERVAL MONTH> - <INTERVAL SECOND>'.*\");\n\n    \r\n    \r\n    \r\n    \r\n\n    \r\n    checkExpType(\"interval '1' year * 2\", \"INTERVAL YEAR NOT NULL\");\n    checkExpType(\n        \"1.234*interval '1 1:2:3' day to second \",\n        \"INTERVAL DAY TO SECOND NOT NULL\");\n\n    \r\n    checkExpType(\"interval '1' month / 0.1\", \"INTERVAL MONTH NOT NULL\");\n    checkExpType(\n        \"interval '1-2' year TO month / 0.1e-9\",\n        \"INTERVAL YEAR TO MONTH NOT NULL\");\n    checkWholeExpFails(\n        \"1.234/interval '1 1:2:3' day to second\",\n        \"(?s).*Cannot apply '/' to arguments of type '<DECIMAL.4, 3.> / <INTERVAL DAY TO SECOND>'.*\");\n  }\n","date":"2014-11-14 09:39:34","endLine":3564,"groupId":"7709","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testIntervalOperators","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/df/99443f0f8e3b70c5add71a8c451bf22a3a1e3b.src","preCode":"  @Test public void testIntervalOperators() {\n    checkExpType(\"interval '1' hour + TIME '8:8:8'\", \"TIME(0) NOT NULL\");\n    checkExpType(\"TIME '8:8:8' - interval '1' hour\", \"TIME(0) NOT NULL\");\n    checkExpType(\"TIME '8:8:8' + interval '1' hour\", \"TIME(0) NOT NULL\");\n\n    checkExpType(\n        \"interval '1' day + interval '1' DAY(4)\",\n        \"INTERVAL DAY(4) NOT NULL\");\n    checkExpType(\n        \"interval '1' day(5) + interval '1' DAY\",\n        \"INTERVAL DAY(5) NOT NULL\");\n    checkExpType(\n        \"interval '1' day + interval '1' HOUR(10)\",\n        \"INTERVAL DAY TO HOUR NOT NULL\");\n    checkExpType(\n        \"interval '1' day + interval '1' MINUTE\",\n        \"INTERVAL DAY TO MINUTE NOT NULL\");\n    checkExpType(\n        \"interval '1' day + interval '1' second\",\n        \"INTERVAL DAY TO SECOND NOT NULL\");\n\n    checkExpType(\n        \"interval '1:2' hour to minute + interval '1' second\",\n        \"INTERVAL HOUR TO SECOND NOT NULL\");\n    checkExpType(\n        \"interval '1:3' hour to minute + interval '1 1:2:3.4' day to second\",\n        \"INTERVAL DAY TO SECOND NOT NULL\");\n    checkExpType(\n        \"interval '1:2' hour to minute + interval '1 1' day to hour\",\n        \"INTERVAL DAY TO MINUTE NOT NULL\");\n    checkExpType(\n        \"interval '1:2' hour to minute + interval '1 1' day to hour\",\n        \"INTERVAL DAY TO MINUTE NOT NULL\");\n    checkExpType(\n        \"interval '1 2' day to hour + interval '1:1' minute to second\",\n        \"INTERVAL DAY TO SECOND NOT NULL\");\n\n    checkExpType(\n        \"interval '1' year + interval '1' month\",\n        \"INTERVAL YEAR TO MONTH NOT NULL\");\n    checkExpType(\n        \"interval '1' day - interval '1' hour\",\n        \"INTERVAL DAY TO HOUR NOT NULL\");\n    checkExpType(\n        \"interval '1' year - interval '1' month\",\n        \"INTERVAL YEAR TO MONTH NOT NULL\");\n    checkExpType(\n        \"interval '1' month - interval '1' year\",\n        \"INTERVAL YEAR TO MONTH NOT NULL\");\n    checkWholeExpFails(\n        \"interval '1' year + interval '1' day\",\n        \"(?s).*Cannot apply '\\\\+' to arguments of type '<INTERVAL YEAR> \\\\+ <INTERVAL DAY>'.*\");\n    checkWholeExpFails(\n        \"interval '1' month + interval '1' second\",\n        \"(?s).*Cannot apply '\\\\+' to arguments of type '<INTERVAL MONTH> \\\\+ <INTERVAL SECOND>'.*\");\n    checkWholeExpFails(\n        \"interval '1' year - interval '1' day\",\n        \"(?s).*Cannot apply '-' to arguments of type '<INTERVAL YEAR> - <INTERVAL DAY>'.*\");\n    checkWholeExpFails(\n        \"interval '1' month - interval '1' second\",\n        \"(?s).*Cannot apply '-' to arguments of type '<INTERVAL MONTH> - <INTERVAL SECOND>'.*\");\n\n    \r\n    \r\n    \r\n    \r\n\n    \r\n    checkExpType(\"interval '1' year * 2\", \"INTERVAL YEAR NOT NULL\");\n    checkExpType(\n        \"1.234*interval '1 1:2:3' day to second \",\n        \"INTERVAL DAY TO SECOND NOT NULL\");\n\n    \r\n    checkExpType(\"interval '1' month / 0.1\", \"INTERVAL MONTH NOT NULL\");\n    checkExpType(\n        \"interval '1-2' year TO month / 0.1e-9\",\n        \"INTERVAL YEAR TO MONTH NOT NULL\");\n    checkWholeExpFails(\n        \"1.234/interval '1 1:2:3' day to second\",\n        \"(?s).*Cannot apply '/' to arguments of type '<DECIMAL.4, 3.> / <INTERVAL DAY TO SECOND>'.*\");\n  }\n","realPath":"core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":3483,"status":"B"},{"authorDate":"2014-11-14 09:39:29","commitOrder":1,"curCode":"  @Test public void testIntervalCompare() {\n    checkExpType(\n        \"interval '1' hour = interval '1' day\",\n        \"BOOLEAN NOT NULL\");\n    checkExpType(\n        \"interval '1' hour <> interval '1' hour\",\n        \"BOOLEAN NOT NULL\");\n    checkExpType(\n        \"interval '1' hour < interval '1' second\",\n        \"BOOLEAN NOT NULL\");\n    checkExpType(\n        \"interval '1' hour <= interval '1' minute\",\n        \"BOOLEAN NOT NULL\");\n    checkExpType(\n        \"interval '1' minute > interval '1' second\",\n        \"BOOLEAN NOT NULL\");\n    checkExpType(\n        \"interval '1' second >= interval '1' day\",\n        \"BOOLEAN NOT NULL\");\n    checkExpType(\n        \"interval '1' year >= interval '1' year\",\n        \"BOOLEAN NOT NULL\");\n    checkExpType(\n        \"interval '1' month = interval '1' year\",\n        \"BOOLEAN NOT NULL\");\n    checkExpType(\n        \"interval '1' month <> interval '1' month\",\n        \"BOOLEAN NOT NULL\");\n    checkExpType(\n        \"interval '1' year >= interval '1' month\",\n        \"BOOLEAN NOT NULL\");\n\n    checkWholeExpFails(\n        \"interval '1' second >= interval '1' year\",\n        \"(?s).*Cannot apply '>=' to arguments of type '<INTERVAL SECOND> >= <INTERVAL YEAR>'.*\");\n    checkWholeExpFails(\n        \"interval '1' month = interval '1' day\",\n        \"(?s).*Cannot apply '=' to arguments of type '<INTERVAL MONTH> = <INTERVAL DAY>'.*\");\n  }\n","date":"2014-11-14 09:39:34","endLine":5848,"groupId":"16236","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testIntervalCompare","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/df/99443f0f8e3b70c5add71a8c451bf22a3a1e3b.src","preCode":"  @Test public void testIntervalCompare() {\n    checkExpType(\n        \"interval '1' hour = interval '1' day\",\n        \"BOOLEAN NOT NULL\");\n    checkExpType(\n        \"interval '1' hour <> interval '1' hour\",\n        \"BOOLEAN NOT NULL\");\n    checkExpType(\n        \"interval '1' hour < interval '1' second\",\n        \"BOOLEAN NOT NULL\");\n    checkExpType(\n        \"interval '1' hour <= interval '1' minute\",\n        \"BOOLEAN NOT NULL\");\n    checkExpType(\n        \"interval '1' minute > interval '1' second\",\n        \"BOOLEAN NOT NULL\");\n    checkExpType(\n        \"interval '1' second >= interval '1' day\",\n        \"BOOLEAN NOT NULL\");\n    checkExpType(\n        \"interval '1' year >= interval '1' year\",\n        \"BOOLEAN NOT NULL\");\n    checkExpType(\n        \"interval '1' month = interval '1' year\",\n        \"BOOLEAN NOT NULL\");\n    checkExpType(\n        \"interval '1' month <> interval '1' month\",\n        \"BOOLEAN NOT NULL\");\n    checkExpType(\n        \"interval '1' year >= interval '1' month\",\n        \"BOOLEAN NOT NULL\");\n\n    checkWholeExpFails(\n        \"interval '1' second >= interval '1' year\",\n        \"(?s).*Cannot apply '>=' to arguments of type '<INTERVAL SECOND> >= <INTERVAL YEAR>'.*\");\n    checkWholeExpFails(\n        \"interval '1' month = interval '1' day\",\n        \"(?s).*Cannot apply '=' to arguments of type '<INTERVAL MONTH> = <INTERVAL DAY>'.*\");\n  }\n","realPath":"core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":5810,"status":"B"}],"commitId":"a611d645ad754844a39f3d98f5f814f13dbd9404","commitMessage":"@@@[CALCITE-296] Re-organize package structure;\n[CALCITE-419] Naming convention for planner rules\n\nThis change only renames files (and deletes some obsolete files). There are no content changes.\n","date":"2014-11-14 09:39:34","modifiedFileCount":"0","status":"B","submitter":"Julian Hyde"},{"authorTime":"2019-09-07 07:51:19","codes":[{"authorDate":"2019-09-07 07:51:19","commitOrder":2,"curCode":"  @Test public void testIntervalOperators() {\n    expr(\"interval '1' hour + TIME '8:8:8'\")\n        .columnType(\"TIME(0) NOT NULL\");\n    expr(\"TIME '8:8:8' - interval '1' hour\")\n        .columnType(\"TIME(0) NOT NULL\");\n    expr(\"TIME '8:8:8' + interval '1' hour\")\n        .columnType(\"TIME(0) NOT NULL\");\n\n    expr(\"interval '1' day + interval '1' DAY(4)\")\n        .columnType(\"INTERVAL DAY(4) NOT NULL\");\n    expr(\"interval '1' day(5) + interval '1' DAY\")\n        .columnType(\"INTERVAL DAY(5) NOT NULL\");\n    expr(\"interval '1' day + interval '1' HOUR(10)\")\n        .columnType(\"INTERVAL DAY TO HOUR NOT NULL\");\n    expr(\"interval '1' day + interval '1' MINUTE\")\n        .columnType(\"INTERVAL DAY TO MINUTE NOT NULL\");\n    expr(\"interval '1' day + interval '1' second\")\n        .columnType(\"INTERVAL DAY TO SECOND NOT NULL\");\n\n    expr(\"interval '1:2' hour to minute + interval '1' second\")\n        .columnType(\"INTERVAL HOUR TO SECOND NOT NULL\");\n    expr(\"interval '1:3' hour to minute + interval '1 1:2:3.4' day to second\")\n        .columnType(\"INTERVAL DAY TO SECOND NOT NULL\");\n    expr(\"interval '1:2' hour to minute + interval '1 1' day to hour\")\n        .columnType(\"INTERVAL DAY TO MINUTE NOT NULL\");\n    expr(\"interval '1:2' hour to minute + interval '1 1' day to hour\")\n        .columnType(\"INTERVAL DAY TO MINUTE NOT NULL\");\n    expr(\"interval '1 2' day to hour + interval '1:1' minute to second\")\n        .columnType(\"INTERVAL DAY TO SECOND NOT NULL\");\n\n    expr(\"interval '1' year + interval '1' month\")\n        .columnType(\"INTERVAL YEAR TO MONTH NOT NULL\");\n    expr(\"interval '1' day - interval '1' hour\")\n        .columnType(\"INTERVAL DAY TO HOUR NOT NULL\");\n    expr(\"interval '1' year - interval '1' month\")\n        .columnType(\"INTERVAL YEAR TO MONTH NOT NULL\");\n    expr(\"interval '1' month - interval '1' year\")\n        .columnType(\"INTERVAL YEAR TO MONTH NOT NULL\");\n    wholeExpr(\"interval '1' year + interval '1' day\")\n        .fails(\"(?s).*Cannot apply '\\\\+' to arguments of type \"\n            + \"'<INTERVAL YEAR> \\\\+ <INTERVAL DAY>'.*\");\n    wholeExpr(\"interval '1' month + interval '1' second\")\n        .fails(\"(?s).*Cannot apply '\\\\+' to arguments of type \"\n            + \"'<INTERVAL MONTH> \\\\+ <INTERVAL SECOND>'.*\");\n    wholeExpr(\"interval '1' year - interval '1' day\")\n        .fails(\"(?s).*Cannot apply '-' to arguments of type \"\n            + \"'<INTERVAL YEAR> - <INTERVAL DAY>'.*\");\n    wholeExpr(\"interval '1' month - interval '1' second\")\n        .fails(\"(?s).*Cannot apply '-' to arguments of type \"\n            + \"'<INTERVAL MONTH> - <INTERVAL SECOND>'.*\");\n\n    \r\n    \r\n    \r\n    \r\n\n    \r\n    expr(\"interval '1' year * 2\")\n        .columnType(\"INTERVAL YEAR NOT NULL\");\n    expr(\"1.234*interval '1 1:2:3' day to second \")\n        .columnType(\"INTERVAL DAY TO SECOND NOT NULL\");\n\n    \r\n    expr(\"interval '1' month / 0.1\")\n        .columnType(\"INTERVAL MONTH NOT NULL\");\n    expr(\"interval '1-2' year TO month / 0.1e-9\")\n        .columnType(\"INTERVAL YEAR TO MONTH NOT NULL\");\n    wholeExpr(\"1.234/interval '1 1:2:3' day to second\")\n        .fails(\"(?s).*Cannot apply '/' to arguments of type \"\n            + \"'<DECIMAL.4, 3.> / <INTERVAL DAY TO SECOND>'.*\");\n  }\n","date":"2019-09-24 02:59:18","endLine":3606,"groupId":"10501","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testIntervalOperators","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/a3/d33ba8e946a499cac312fa98a0e5b21a080452.src","preCode":"  @Test public void testIntervalOperators() {\n    checkExpType(\"interval '1' hour + TIME '8:8:8'\", \"TIME(0) NOT NULL\");\n    checkExpType(\"TIME '8:8:8' - interval '1' hour\", \"TIME(0) NOT NULL\");\n    checkExpType(\"TIME '8:8:8' + interval '1' hour\", \"TIME(0) NOT NULL\");\n\n    checkExpType(\n        \"interval '1' day + interval '1' DAY(4)\",\n        \"INTERVAL DAY(4) NOT NULL\");\n    checkExpType(\n        \"interval '1' day(5) + interval '1' DAY\",\n        \"INTERVAL DAY(5) NOT NULL\");\n    checkExpType(\n        \"interval '1' day + interval '1' HOUR(10)\",\n        \"INTERVAL DAY TO HOUR NOT NULL\");\n    checkExpType(\n        \"interval '1' day + interval '1' MINUTE\",\n        \"INTERVAL DAY TO MINUTE NOT NULL\");\n    checkExpType(\n        \"interval '1' day + interval '1' second\",\n        \"INTERVAL DAY TO SECOND NOT NULL\");\n\n    checkExpType(\n        \"interval '1:2' hour to minute + interval '1' second\",\n        \"INTERVAL HOUR TO SECOND NOT NULL\");\n    checkExpType(\n        \"interval '1:3' hour to minute + interval '1 1:2:3.4' day to second\",\n        \"INTERVAL DAY TO SECOND NOT NULL\");\n    checkExpType(\n        \"interval '1:2' hour to minute + interval '1 1' day to hour\",\n        \"INTERVAL DAY TO MINUTE NOT NULL\");\n    checkExpType(\n        \"interval '1:2' hour to minute + interval '1 1' day to hour\",\n        \"INTERVAL DAY TO MINUTE NOT NULL\");\n    checkExpType(\n        \"interval '1 2' day to hour + interval '1:1' minute to second\",\n        \"INTERVAL DAY TO SECOND NOT NULL\");\n\n    checkExpType(\n        \"interval '1' year + interval '1' month\",\n        \"INTERVAL YEAR TO MONTH NOT NULL\");\n    checkExpType(\n        \"interval '1' day - interval '1' hour\",\n        \"INTERVAL DAY TO HOUR NOT NULL\");\n    checkExpType(\n        \"interval '1' year - interval '1' month\",\n        \"INTERVAL YEAR TO MONTH NOT NULL\");\n    checkExpType(\n        \"interval '1' month - interval '1' year\",\n        \"INTERVAL YEAR TO MONTH NOT NULL\");\n    checkWholeExpFails(\n        \"interval '1' year + interval '1' day\",\n        \"(?s).*Cannot apply '\\\\+' to arguments of type '<INTERVAL YEAR> \\\\+ <INTERVAL DAY>'.*\");\n    checkWholeExpFails(\n        \"interval '1' month + interval '1' second\",\n        \"(?s).*Cannot apply '\\\\+' to arguments of type '<INTERVAL MONTH> \\\\+ <INTERVAL SECOND>'.*\");\n    checkWholeExpFails(\n        \"interval '1' year - interval '1' day\",\n        \"(?s).*Cannot apply '-' to arguments of type '<INTERVAL YEAR> - <INTERVAL DAY>'.*\");\n    checkWholeExpFails(\n        \"interval '1' month - interval '1' second\",\n        \"(?s).*Cannot apply '-' to arguments of type '<INTERVAL MONTH> - <INTERVAL SECOND>'.*\");\n\n    \r\n    \r\n    \r\n    \r\n\n    \r\n    checkExpType(\"interval '1' year * 2\", \"INTERVAL YEAR NOT NULL\");\n    checkExpType(\n        \"1.234*interval '1 1:2:3' day to second \",\n        \"INTERVAL DAY TO SECOND NOT NULL\");\n\n    \r\n    checkExpType(\"interval '1' month / 0.1\", \"INTERVAL MONTH NOT NULL\");\n    checkExpType(\n        \"interval '1-2' year TO month / 0.1e-9\",\n        \"INTERVAL YEAR TO MONTH NOT NULL\");\n    checkWholeExpFails(\n        \"1.234/interval '1 1:2:3' day to second\",\n        \"(?s).*Cannot apply '/' to arguments of type '<DECIMAL.4, 3.> / <INTERVAL DAY TO SECOND>'.*\");\n  }\n","realPath":"core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":3536,"status":"M"},{"authorDate":"2019-09-07 07:51:19","commitOrder":2,"curCode":"  @Test public void testIntervalCompare() {\n    expr(\"interval '1' hour = interval '1' day\")\n        .columnType(\"BOOLEAN NOT NULL\");\n    expr(\"interval '1' hour <> interval '1' hour\")\n        .columnType(\"BOOLEAN NOT NULL\");\n    expr(\"interval '1' hour < interval '1' second\")\n        .columnType(\"BOOLEAN NOT NULL\");\n    expr(\"interval '1' hour <= interval '1' minute\")\n        .columnType(\"BOOLEAN NOT NULL\");\n    expr(\"interval '1' minute > interval '1' second\")\n        .columnType(\"BOOLEAN NOT NULL\");\n    expr(\"interval '1' second >= interval '1' day\")\n        .columnType(\"BOOLEAN NOT NULL\");\n    expr(\"interval '1' year >= interval '1' year\")\n        .columnType(\"BOOLEAN NOT NULL\");\n    expr(\"interval '1' month = interval '1' year\")\n        .columnType(\"BOOLEAN NOT NULL\");\n    expr(\"interval '1' month <> interval '1' month\")\n        .columnType(\"BOOLEAN NOT NULL\");\n    expr(\"interval '1' year >= interval '1' month\")\n        .columnType(\"BOOLEAN NOT NULL\");\n\n    wholeExpr(\"interval '1' second >= interval '1' year\")\n        .fails(\"(?s).*Cannot apply '>=' to arguments of type \"\n            + \"'<INTERVAL SECOND> >= <INTERVAL YEAR>'.*\");\n    wholeExpr(\"interval '1' month = interval '1' day\")\n        .fails(\"(?s).*Cannot apply '=' to arguments of type \"\n            + \"'<INTERVAL MONTH> = <INTERVAL DAY>'.*\");\n  }\n","date":"2019-09-24 02:59:18","endLine":7154,"groupId":"12351","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testIntervalCompare","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/a3/d33ba8e946a499cac312fa98a0e5b21a080452.src","preCode":"  @Test public void testIntervalCompare() {\n    checkExpType(\n        \"interval '1' hour = interval '1' day\",\n        \"BOOLEAN NOT NULL\");\n    checkExpType(\n        \"interval '1' hour <> interval '1' hour\",\n        \"BOOLEAN NOT NULL\");\n    checkExpType(\n        \"interval '1' hour < interval '1' second\",\n        \"BOOLEAN NOT NULL\");\n    checkExpType(\n        \"interval '1' hour <= interval '1' minute\",\n        \"BOOLEAN NOT NULL\");\n    checkExpType(\n        \"interval '1' minute > interval '1' second\",\n        \"BOOLEAN NOT NULL\");\n    checkExpType(\n        \"interval '1' second >= interval '1' day\",\n        \"BOOLEAN NOT NULL\");\n    checkExpType(\n        \"interval '1' year >= interval '1' year\",\n        \"BOOLEAN NOT NULL\");\n    checkExpType(\n        \"interval '1' month = interval '1' year\",\n        \"BOOLEAN NOT NULL\");\n    checkExpType(\n        \"interval '1' month <> interval '1' month\",\n        \"BOOLEAN NOT NULL\");\n    checkExpType(\n        \"interval '1' year >= interval '1' month\",\n        \"BOOLEAN NOT NULL\");\n\n    checkWholeExpFails(\n        \"interval '1' second >= interval '1' year\",\n        \"(?s).*Cannot apply '>=' to arguments of type '<INTERVAL SECOND> >= <INTERVAL YEAR>'.*\");\n    checkWholeExpFails(\"interval '1' month = interval '1' day\",\n        \"(?s).*Cannot apply '=' to arguments of type '<INTERVAL MONTH> = <INTERVAL DAY>'.*\");\n  }\n","realPath":"core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":7126,"status":"M"}],"commitId":"405614f87b75eb515e767b78a2c47481a0efc701","commitMessage":"@@@[CALCITE-3327] Simplify SqlValidatorTest and SqlParserTest by making test methods fluent\n\nReplace 'boolean typeCoercion' parameter with fluent method 'Sql.withTypeCoercion(boolean)'.\n\nDeprecate various checkXxx methods. For example. \ncheckExp(sql.  expected) becomes expr(sql).ok();\ncheckExpFails(sql.  e) becomes expr(s).fails(e).\n\nRename SqlParserTest.exp to expr.\n","date":"2019-09-24 02:59:18","modifiedFileCount":"16","status":"M","submitter":"Julian Hyde"},{"authorTime":"2020-04-02 10:39:10","codes":[{"authorDate":"2020-04-02 10:39:10","commitOrder":3,"curCode":"  @Test void testIntervalOperators() {\n    expr(\"interval '1' hour + TIME '8:8:8'\")\n        .columnType(\"TIME(0) NOT NULL\");\n    expr(\"TIME '8:8:8' - interval '1' hour\")\n        .columnType(\"TIME(0) NOT NULL\");\n    expr(\"TIME '8:8:8' + interval '1' hour\")\n        .columnType(\"TIME(0) NOT NULL\");\n\n    expr(\"interval '1' day + interval '1' DAY(4)\")\n        .columnType(\"INTERVAL DAY(4) NOT NULL\");\n    expr(\"interval '1' day(5) + interval '1' DAY\")\n        .columnType(\"INTERVAL DAY(5) NOT NULL\");\n    expr(\"interval '1' day + interval '1' HOUR(10)\")\n        .columnType(\"INTERVAL DAY TO HOUR NOT NULL\");\n    expr(\"interval '1' day + interval '1' MINUTE\")\n        .columnType(\"INTERVAL DAY TO MINUTE NOT NULL\");\n    expr(\"interval '1' day + interval '1' second\")\n        .columnType(\"INTERVAL DAY TO SECOND NOT NULL\");\n\n    expr(\"interval '1:2' hour to minute + interval '1' second\")\n        .columnType(\"INTERVAL HOUR TO SECOND NOT NULL\");\n    expr(\"interval '1:3' hour to minute + interval '1 1:2:3.4' day to second\")\n        .columnType(\"INTERVAL DAY TO SECOND NOT NULL\");\n    expr(\"interval '1:2' hour to minute + interval '1 1' day to hour\")\n        .columnType(\"INTERVAL DAY TO MINUTE NOT NULL\");\n    expr(\"interval '1:2' hour to minute + interval '1 1' day to hour\")\n        .columnType(\"INTERVAL DAY TO MINUTE NOT NULL\");\n    expr(\"interval '1 2' day to hour + interval '1:1' minute to second\")\n        .columnType(\"INTERVAL DAY TO SECOND NOT NULL\");\n\n    expr(\"interval '1' year + interval '1' month\")\n        .columnType(\"INTERVAL YEAR TO MONTH NOT NULL\");\n    expr(\"interval '1' day - interval '1' hour\")\n        .columnType(\"INTERVAL DAY TO HOUR NOT NULL\");\n    expr(\"interval '1' year - interval '1' month\")\n        .columnType(\"INTERVAL YEAR TO MONTH NOT NULL\");\n    expr(\"interval '1' month - interval '1' year\")\n        .columnType(\"INTERVAL YEAR TO MONTH NOT NULL\");\n    wholeExpr(\"interval '1' year + interval '1' day\")\n        .fails(\"(?s).*Cannot apply '\\\\+' to arguments of type \"\n            + \"'<INTERVAL YEAR> \\\\+ <INTERVAL DAY>'.*\");\n    wholeExpr(\"interval '1' month + interval '1' second\")\n        .fails(\"(?s).*Cannot apply '\\\\+' to arguments of type \"\n            + \"'<INTERVAL MONTH> \\\\+ <INTERVAL SECOND>'.*\");\n    wholeExpr(\"interval '1' year - interval '1' day\")\n        .fails(\"(?s).*Cannot apply '-' to arguments of type \"\n            + \"'<INTERVAL YEAR> - <INTERVAL DAY>'.*\");\n    wholeExpr(\"interval '1' month - interval '1' second\")\n        .fails(\"(?s).*Cannot apply '-' to arguments of type \"\n            + \"'<INTERVAL MONTH> - <INTERVAL SECOND>'.*\");\n\n    \r\n    \r\n    \r\n    \r\n\n    \r\n    expr(\"interval '1' year * 2\")\n        .columnType(\"INTERVAL YEAR NOT NULL\");\n    expr(\"1.234*interval '1 1:2:3' day to second \")\n        .columnType(\"INTERVAL DAY TO SECOND NOT NULL\");\n\n    \r\n    expr(\"interval '1' month / 0.1\")\n        .columnType(\"INTERVAL MONTH NOT NULL\");\n    expr(\"interval '1-2' year TO month / 0.1e-9\")\n        .columnType(\"INTERVAL YEAR TO MONTH NOT NULL\");\n    wholeExpr(\"1.234/interval '1 1:2:3' day to second\")\n        .fails(\"(?s).*Cannot apply '/' to arguments of type \"\n            + \"'<DECIMAL.4, 3.> / <INTERVAL DAY TO SECOND>'.*\");\n  }\n","date":"2020-04-06 04:57:49","endLine":3640,"groupId":"101182","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testIntervalOperators","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/b6/f9115009e28a63267b183e3a0a9a5e7f343a61.src","preCode":"  @Test public void testIntervalOperators() {\n    expr(\"interval '1' hour + TIME '8:8:8'\")\n        .columnType(\"TIME(0) NOT NULL\");\n    expr(\"TIME '8:8:8' - interval '1' hour\")\n        .columnType(\"TIME(0) NOT NULL\");\n    expr(\"TIME '8:8:8' + interval '1' hour\")\n        .columnType(\"TIME(0) NOT NULL\");\n\n    expr(\"interval '1' day + interval '1' DAY(4)\")\n        .columnType(\"INTERVAL DAY(4) NOT NULL\");\n    expr(\"interval '1' day(5) + interval '1' DAY\")\n        .columnType(\"INTERVAL DAY(5) NOT NULL\");\n    expr(\"interval '1' day + interval '1' HOUR(10)\")\n        .columnType(\"INTERVAL DAY TO HOUR NOT NULL\");\n    expr(\"interval '1' day + interval '1' MINUTE\")\n        .columnType(\"INTERVAL DAY TO MINUTE NOT NULL\");\n    expr(\"interval '1' day + interval '1' second\")\n        .columnType(\"INTERVAL DAY TO SECOND NOT NULL\");\n\n    expr(\"interval '1:2' hour to minute + interval '1' second\")\n        .columnType(\"INTERVAL HOUR TO SECOND NOT NULL\");\n    expr(\"interval '1:3' hour to minute + interval '1 1:2:3.4' day to second\")\n        .columnType(\"INTERVAL DAY TO SECOND NOT NULL\");\n    expr(\"interval '1:2' hour to minute + interval '1 1' day to hour\")\n        .columnType(\"INTERVAL DAY TO MINUTE NOT NULL\");\n    expr(\"interval '1:2' hour to minute + interval '1 1' day to hour\")\n        .columnType(\"INTERVAL DAY TO MINUTE NOT NULL\");\n    expr(\"interval '1 2' day to hour + interval '1:1' minute to second\")\n        .columnType(\"INTERVAL DAY TO SECOND NOT NULL\");\n\n    expr(\"interval '1' year + interval '1' month\")\n        .columnType(\"INTERVAL YEAR TO MONTH NOT NULL\");\n    expr(\"interval '1' day - interval '1' hour\")\n        .columnType(\"INTERVAL DAY TO HOUR NOT NULL\");\n    expr(\"interval '1' year - interval '1' month\")\n        .columnType(\"INTERVAL YEAR TO MONTH NOT NULL\");\n    expr(\"interval '1' month - interval '1' year\")\n        .columnType(\"INTERVAL YEAR TO MONTH NOT NULL\");\n    wholeExpr(\"interval '1' year + interval '1' day\")\n        .fails(\"(?s).*Cannot apply '\\\\+' to arguments of type \"\n            + \"'<INTERVAL YEAR> \\\\+ <INTERVAL DAY>'.*\");\n    wholeExpr(\"interval '1' month + interval '1' second\")\n        .fails(\"(?s).*Cannot apply '\\\\+' to arguments of type \"\n            + \"'<INTERVAL MONTH> \\\\+ <INTERVAL SECOND>'.*\");\n    wholeExpr(\"interval '1' year - interval '1' day\")\n        .fails(\"(?s).*Cannot apply '-' to arguments of type \"\n            + \"'<INTERVAL YEAR> - <INTERVAL DAY>'.*\");\n    wholeExpr(\"interval '1' month - interval '1' second\")\n        .fails(\"(?s).*Cannot apply '-' to arguments of type \"\n            + \"'<INTERVAL MONTH> - <INTERVAL SECOND>'.*\");\n\n    \r\n    \r\n    \r\n    \r\n\n    \r\n    expr(\"interval '1' year * 2\")\n        .columnType(\"INTERVAL YEAR NOT NULL\");\n    expr(\"1.234*interval '1 1:2:3' day to second \")\n        .columnType(\"INTERVAL DAY TO SECOND NOT NULL\");\n\n    \r\n    expr(\"interval '1' month / 0.1\")\n        .columnType(\"INTERVAL MONTH NOT NULL\");\n    expr(\"interval '1-2' year TO month / 0.1e-9\")\n        .columnType(\"INTERVAL YEAR TO MONTH NOT NULL\");\n    wholeExpr(\"1.234/interval '1 1:2:3' day to second\")\n        .fails(\"(?s).*Cannot apply '/' to arguments of type \"\n            + \"'<DECIMAL.4, 3.> / <INTERVAL DAY TO SECOND>'.*\");\n  }\n","realPath":"core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":3570,"status":"M"},{"authorDate":"2020-04-02 10:39:10","commitOrder":3,"curCode":"  @Test void testIntervalCompare() {\n    expr(\"interval '1' hour = interval '1' day\")\n        .columnType(\"BOOLEAN NOT NULL\");\n    expr(\"interval '1' hour <> interval '1' hour\")\n        .columnType(\"BOOLEAN NOT NULL\");\n    expr(\"interval '1' hour < interval '1' second\")\n        .columnType(\"BOOLEAN NOT NULL\");\n    expr(\"interval '1' hour <= interval '1' minute\")\n        .columnType(\"BOOLEAN NOT NULL\");\n    expr(\"interval '1' minute > interval '1' second\")\n        .columnType(\"BOOLEAN NOT NULL\");\n    expr(\"interval '1' second >= interval '1' day\")\n        .columnType(\"BOOLEAN NOT NULL\");\n    expr(\"interval '1' year >= interval '1' year\")\n        .columnType(\"BOOLEAN NOT NULL\");\n    expr(\"interval '1' month = interval '1' year\")\n        .columnType(\"BOOLEAN NOT NULL\");\n    expr(\"interval '1' month <> interval '1' month\")\n        .columnType(\"BOOLEAN NOT NULL\");\n    expr(\"interval '1' year >= interval '1' month\")\n        .columnType(\"BOOLEAN NOT NULL\");\n\n    wholeExpr(\"interval '1' second >= interval '1' year\")\n        .fails(\"(?s).*Cannot apply '>=' to arguments of type \"\n            + \"'<INTERVAL SECOND> >= <INTERVAL YEAR>'.*\");\n    wholeExpr(\"interval '1' month = interval '1' day\")\n        .fails(\"(?s).*Cannot apply '=' to arguments of type \"\n            + \"'<INTERVAL MONTH> = <INTERVAL DAY>'.*\");\n  }\n","date":"2020-04-06 04:57:49","endLine":7234,"groupId":"101182","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testIntervalCompare","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/b6/f9115009e28a63267b183e3a0a9a5e7f343a61.src","preCode":"  @Test public void testIntervalCompare() {\n    expr(\"interval '1' hour = interval '1' day\")\n        .columnType(\"BOOLEAN NOT NULL\");\n    expr(\"interval '1' hour <> interval '1' hour\")\n        .columnType(\"BOOLEAN NOT NULL\");\n    expr(\"interval '1' hour < interval '1' second\")\n        .columnType(\"BOOLEAN NOT NULL\");\n    expr(\"interval '1' hour <= interval '1' minute\")\n        .columnType(\"BOOLEAN NOT NULL\");\n    expr(\"interval '1' minute > interval '1' second\")\n        .columnType(\"BOOLEAN NOT NULL\");\n    expr(\"interval '1' second >= interval '1' day\")\n        .columnType(\"BOOLEAN NOT NULL\");\n    expr(\"interval '1' year >= interval '1' year\")\n        .columnType(\"BOOLEAN NOT NULL\");\n    expr(\"interval '1' month = interval '1' year\")\n        .columnType(\"BOOLEAN NOT NULL\");\n    expr(\"interval '1' month <> interval '1' month\")\n        .columnType(\"BOOLEAN NOT NULL\");\n    expr(\"interval '1' year >= interval '1' month\")\n        .columnType(\"BOOLEAN NOT NULL\");\n\n    wholeExpr(\"interval '1' second >= interval '1' year\")\n        .fails(\"(?s).*Cannot apply '>=' to arguments of type \"\n            + \"'<INTERVAL SECOND> >= <INTERVAL YEAR>'.*\");\n    wholeExpr(\"interval '1' month = interval '1' day\")\n        .fails(\"(?s).*Cannot apply '=' to arguments of type \"\n            + \"'<INTERVAL MONTH> = <INTERVAL DAY>'.*\");\n  }\n","realPath":"core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":7206,"status":"M"}],"commitId":"9492dd4146f63ddc028010d6c4e86f6a5cb29a8d","commitMessage":"@@@[CALCITE-3892] Make junit test classes and methods non-public where possible\n\nPrior to junit 5.  classes and methods had to be public. This is no\nlonger the case.\n\nSome classes need to remain public because they are referenced from\nelsewhere.  or if they use reflection somehow. The remaining 'public'\nkeyword will be informative to maintainers.\n","date":"2020-04-06 04:57:49","modifiedFileCount":"196","status":"M","submitter":"Julian Hyde"}]
