[{"authorTime":"2017-11-08 19:12:51","codes":[{"authorDate":"2016-01-28 06:43:50","commitOrder":6,"curCode":"    public RelNode convert(RelNode rel) {\n      final LogicalAggregate agg = (LogicalAggregate) rel;\n      final RelTraitSet traitSet =\n          agg.getTraitSet().replace(out);\n      try {\n        return new MongoAggregate(\n            rel.getCluster(),\n            traitSet,\n            convert(agg.getInput(), traitSet.simplify()),\n            agg.indicator,\n            agg.getGroupSet(),\n            agg.getGroupSets(),\n            agg.getAggCallList());\n      } catch (InvalidRelException e) {\n        LOGGER.warn(e.toString());\n        return null;\n      }\n    }\n","date":"2016-01-28 07:59:10","endLine":525,"groupId":"4287","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"convert","params":"(RelNoderel)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/2f/4bbefd575e1a21f708f4434e99ef111c19c8cf.src","preCode":"    public RelNode convert(RelNode rel) {\n      final LogicalAggregate agg = (LogicalAggregate) rel;\n      final RelTraitSet traitSet =\n          agg.getTraitSet().replace(out);\n      try {\n        return new MongoAggregate(\n            rel.getCluster(),\n            traitSet,\n            convert(agg.getInput(), traitSet.simplify()),\n            agg.indicator,\n            agg.getGroupSet(),\n            agg.getGroupSets(),\n            agg.getAggCallList());\n      } catch (InvalidRelException e) {\n        LOGGER.warn(e.toString());\n        return null;\n      }\n    }\n","realPath":"mongodb/src/main/java/org/apache/calcite/adapter/mongodb/MongoRules.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":508,"status":"NB"},{"authorDate":"2017-11-08 19:12:51","commitOrder":6,"curCode":"    public RelNode convert(RelNode rel) {\n      final LogicalAggregate agg = (LogicalAggregate) rel;\n      final RelTraitSet traitSet =\n          agg.getTraitSet().replace(BindableConvention.INSTANCE);\n      try {\n        return new BindableAggregate(rel.getCluster(), traitSet,\n            convert(agg.getInput(), traitSet), agg.indicator, agg.getGroupSet(),\n            agg.getGroupSets(), agg.getAggCallList());\n      } catch (InvalidRelException e) {\n        RelOptPlanner.LOGGER.debug(e.toString());\n        return null;\n      }\n    }\n","date":"2017-11-16 03:48:57","endLine":693,"groupId":"8683","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"convert","params":"(RelNoderel)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/c5/287eba39166cf03d8cf7f011ff2054dfb358c8.src","preCode":"    public RelNode convert(RelNode rel) {\n      final LogicalAggregate agg = (LogicalAggregate) rel;\n      final RelTraitSet traitSet =\n          agg.getTraitSet().replace(BindableConvention.INSTANCE);\n      try {\n        return new BindableAggregate(rel.getCluster(), traitSet,\n            convert(agg.getInput(), traitSet), agg.indicator, agg.getGroupSet(),\n            agg.getGroupSets(), agg.getAggCallList());\n      } catch (InvalidRelException e) {\n        RelOptPlanner.LOGGER.debug(e.toString());\n        return null;\n      }\n    }\n","realPath":"core/src/main/java/org/apache/calcite/interpreter/Bindables.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":681,"status":"B"}],"commitId":"d407395e05b5b37e019a44f812aae04540e6f398","commitMessage":"@@@[CALCITE-2043] Use custom RelBuilder implementation in some rules (Volodymyr Vysotskyi)\n\nClose apache/calcite#564\n","date":"2017-11-16 03:48:57","modifiedFileCount":"77","status":"M","submitter":"Volodymyr Vysotskyi"},{"authorTime":"2019-05-31 01:41:41","codes":[{"authorDate":"2016-01-28 06:43:50","commitOrder":7,"curCode":"    public RelNode convert(RelNode rel) {\n      final LogicalAggregate agg = (LogicalAggregate) rel;\n      final RelTraitSet traitSet =\n          agg.getTraitSet().replace(out);\n      try {\n        return new MongoAggregate(\n            rel.getCluster(),\n            traitSet,\n            convert(agg.getInput(), traitSet.simplify()),\n            agg.indicator,\n            agg.getGroupSet(),\n            agg.getGroupSets(),\n            agg.getAggCallList());\n      } catch (InvalidRelException e) {\n        LOGGER.warn(e.toString());\n        return null;\n      }\n    }\n","date":"2016-01-28 07:59:10","endLine":525,"groupId":"4287","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"convert","params":"(RelNoderel)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/2f/4bbefd575e1a21f708f4434e99ef111c19c8cf.src","preCode":"    public RelNode convert(RelNode rel) {\n      final LogicalAggregate agg = (LogicalAggregate) rel;\n      final RelTraitSet traitSet =\n          agg.getTraitSet().replace(out);\n      try {\n        return new MongoAggregate(\n            rel.getCluster(),\n            traitSet,\n            convert(agg.getInput(), traitSet.simplify()),\n            agg.indicator,\n            agg.getGroupSet(),\n            agg.getGroupSets(),\n            agg.getAggCallList());\n      } catch (InvalidRelException e) {\n        LOGGER.warn(e.toString());\n        return null;\n      }\n    }\n","realPath":"mongodb/src/main/java/org/apache/calcite/adapter/mongodb/MongoRules.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":508,"status":"N"},{"authorDate":"2019-05-31 01:41:41","commitOrder":7,"curCode":"    public RelNode convert(RelNode rel) {\n      final LogicalAggregate agg = (LogicalAggregate) rel;\n      final RelTraitSet traitSet =\n          agg.getTraitSet().replace(BindableConvention.INSTANCE);\n      try {\n        return new BindableAggregate(rel.getCluster(), traitSet,\n            convert(agg.getInput(), traitSet), false, agg.getGroupSet(),\n            agg.getGroupSets(), agg.getAggCallList());\n      } catch (InvalidRelException e) {\n        RelOptPlanner.LOGGER.debug(e.toString());\n        return null;\n      }\n    }\n","date":"2019-06-01 02:41:23","endLine":691,"groupId":"1296","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"convert","params":"(RelNoderel)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/35/41bfa22127f8e662c9a74815c1e9fec50c05c6.src","preCode":"    public RelNode convert(RelNode rel) {\n      final LogicalAggregate agg = (LogicalAggregate) rel;\n      final RelTraitSet traitSet =\n          agg.getTraitSet().replace(BindableConvention.INSTANCE);\n      try {\n        return new BindableAggregate(rel.getCluster(), traitSet,\n            convert(agg.getInput(), traitSet), agg.indicator, agg.getGroupSet(),\n            agg.getGroupSets(), agg.getAggCallList());\n      } catch (InvalidRelException e) {\n        RelOptPlanner.LOGGER.debug(e.toString());\n        return null;\n      }\n    }\n","realPath":"core/src/main/java/org/apache/calcite/interpreter/Bindables.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":679,"status":"M"}],"commitId":"8a2578787910e3c05c4d17006439de1940c0b195","commitMessage":"@@@[CALCITE-2944] Deprecate Aggregate indicator and remove fields where possible\n","date":"2019-06-01 02:41:23","modifiedFileCount":"24","status":"M","submitter":"Haisheng Yuan"},{"authorTime":"2019-05-31 01:41:41","codes":[{"authorDate":"2019-06-01 11:36:14","commitOrder":8,"curCode":"    public RelNode convert(RelNode rel) {\n      final LogicalAggregate agg = (LogicalAggregate) rel;\n      final RelTraitSet traitSet =\n          agg.getTraitSet().replace(out);\n      try {\n        return new MongoAggregate(\n            rel.getCluster(),\n            traitSet,\n            convert(agg.getInput(), traitSet.simplify()),\n            agg.getGroupSet(),\n            agg.getGroupSets(),\n            agg.getAggCallList());\n      } catch (InvalidRelException e) {\n        LOGGER.warn(e.toString());\n        return null;\n      }\n    }\n","date":"2019-06-02 07:22:34","endLine":523,"groupId":"15727","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"convert","params":"(RelNoderel)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/55/84791730ff37430c98f3c003bf69f276e89c69.src","preCode":"    public RelNode convert(RelNode rel) {\n      final LogicalAggregate agg = (LogicalAggregate) rel;\n      final RelTraitSet traitSet =\n          agg.getTraitSet().replace(out);\n      try {\n        return new MongoAggregate(\n            rel.getCluster(),\n            traitSet,\n            convert(agg.getInput(), traitSet.simplify()),\n            agg.indicator,\n            agg.getGroupSet(),\n            agg.getGroupSets(),\n            agg.getAggCallList());\n      } catch (InvalidRelException e) {\n        LOGGER.warn(e.toString());\n        return null;\n      }\n    }\n","realPath":"mongodb/src/main/java/org/apache/calcite/adapter/mongodb/MongoRules.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":507,"status":"M"},{"authorDate":"2019-05-31 01:41:41","commitOrder":8,"curCode":"    public RelNode convert(RelNode rel) {\n      final LogicalAggregate agg = (LogicalAggregate) rel;\n      final RelTraitSet traitSet =\n          agg.getTraitSet().replace(BindableConvention.INSTANCE);\n      try {\n        return new BindableAggregate(rel.getCluster(), traitSet,\n            convert(agg.getInput(), traitSet), false, agg.getGroupSet(),\n            agg.getGroupSets(), agg.getAggCallList());\n      } catch (InvalidRelException e) {\n        RelOptPlanner.LOGGER.debug(e.toString());\n        return null;\n      }\n    }\n","date":"2019-06-01 02:41:23","endLine":691,"groupId":"1296","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"convert","params":"(RelNoderel)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/35/41bfa22127f8e662c9a74815c1e9fec50c05c6.src","preCode":"    public RelNode convert(RelNode rel) {\n      final LogicalAggregate agg = (LogicalAggregate) rel;\n      final RelTraitSet traitSet =\n          agg.getTraitSet().replace(BindableConvention.INSTANCE);\n      try {\n        return new BindableAggregate(rel.getCluster(), traitSet,\n            convert(agg.getInput(), traitSet), false, agg.getGroupSet(),\n            agg.getGroupSets(), agg.getAggCallList());\n      } catch (InvalidRelException e) {\n        RelOptPlanner.LOGGER.debug(e.toString());\n        return null;\n      }\n    }\n","realPath":"core/src/main/java/org/apache/calcite/interpreter/Bindables.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":679,"status":"N"}],"commitId":"b0e83c469ff57257c1ea621ff943ca76f626a9b7","commitMessage":"@@@Following [CALCITE-2944] remove internal uses of Aggregate.indicator\n\nThese were generating deprecation warnings.\n","date":"2019-06-02 07:22:34","modifiedFileCount":"31","status":"M","submitter":"Julian Hyde"},{"authorTime":"2020-07-09 05:31:40","codes":[{"authorDate":"2020-07-09 05:31:40","commitOrder":9,"curCode":"    @Override public RelNode convert(RelNode rel) {\n      final LogicalAggregate agg = (LogicalAggregate) rel;\n      final RelTraitSet traitSet =\n          agg.getTraitSet().replace(out);\n      try {\n        return new MongoAggregate(\n            rel.getCluster(),\n            traitSet,\n            convert(agg.getInput(), traitSet.simplify()),\n            agg.getGroupSet(),\n            agg.getGroupSets(),\n            agg.getAggCallList());\n      } catch (InvalidRelException e) {\n        LOGGER.warn(e.toString());\n        return null;\n      }\n    }\n","date":"2020-07-29 02:27:24","endLine":521,"groupId":"15727","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"convert","params":"(RelNoderel)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/83/abe1ff5b33f4cb3b85c044b499eeb46678e736.src","preCode":"    public RelNode convert(RelNode rel) {\n      final LogicalAggregate agg = (LogicalAggregate) rel;\n      final RelTraitSet traitSet =\n          agg.getTraitSet().replace(out);\n      try {\n        return new MongoAggregate(\n            rel.getCluster(),\n            traitSet,\n            convert(agg.getInput(), traitSet.simplify()),\n            agg.getGroupSet(),\n            agg.getGroupSets(),\n            agg.getAggCallList());\n      } catch (InvalidRelException e) {\n        LOGGER.warn(e.toString());\n        return null;\n      }\n    }\n","realPath":"mongodb/src/main/java/org/apache/calcite/adapter/mongodb/MongoRules.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":505,"status":"M"},{"authorDate":"2020-07-09 05:31:40","commitOrder":9,"curCode":"    @Override public RelNode convert(RelNode rel) {\n      final LogicalAggregate agg = (LogicalAggregate) rel;\n      final RelTraitSet traitSet =\n          agg.getTraitSet().replace(BindableConvention.INSTANCE);\n      try {\n        return new BindableAggregate(rel.getCluster(), traitSet,\n            convert(agg.getInput(), traitSet), false, agg.getGroupSet(),\n            agg.getGroupSets(), agg.getAggCallList());\n      } catch (InvalidRelException e) {\n        RelOptPlanner.LOGGER.debug(e.toString());\n        return null;\n      }\n    }\n","date":"2020-07-29 02:27:24","endLine":804,"groupId":"1296","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"convert","params":"(RelNoderel)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/7d/9adac0f3890fcb2dc0ce55c28783d07534b896.src","preCode":"    public RelNode convert(RelNode rel) {\n      final LogicalAggregate agg = (LogicalAggregate) rel;\n      final RelTraitSet traitSet =\n          agg.getTraitSet().replace(BindableConvention.INSTANCE);\n      try {\n        return new BindableAggregate(rel.getCluster(), traitSet,\n            convert(agg.getInput(), traitSet), false, agg.getGroupSet(),\n            agg.getGroupSets(), agg.getAggCallList());\n      } catch (InvalidRelException e) {\n        RelOptPlanner.LOGGER.debug(e.toString());\n        return null;\n      }\n    }\n","realPath":"core/src/main/java/org/apache/calcite/interpreter/Bindables.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":792,"status":"M"}],"commitId":"998cd83ebe2fcd7ff3ee565299fed6e199269715","commitMessage":"@@@[CALCITE-3923] Refactor how planner rules are parameterized\n\nCreate operands using a builder interface.  OperandBuilder.  and\ndeprecate methods RelOptRule.operand etc.\n\nThe change is backwards compatible.  in the sense that\nexisting rule constructors are deprecated but still work.\nFrom now on.  to create rules.  call RelOptRule.Config.toRule()\n(which calls the rule's (Config) constructor).\n\nSub-classes of ConverterRule are a little different.  They\ndon't need their own sub-class of Config.  You just need to\ncall Config.withRuleFactory to specify the constructor of the\nsub-class of ConverterRule.\n\nMove rule instances into holder classes such as CoreRules. \nMaterializedViewRules. Deprecate existing rule INSTANCE fields\n(to be removed in 1.25). Deprecate previous rule constructors\n(to be removed in 2.0).\n\nDescribe how to write rules in howto and tutorial.\n\nRemove rule instances marked 'deprecated.  to be removed before\n1.25'.\n\nClose apache/calcite#2024\n","date":"2020-07-29 02:27:24","modifiedFileCount":"191","status":"M","submitter":"Julian Hyde"},{"authorTime":"2020-05-29 00:04:40","codes":[{"authorDate":"2020-07-09 05:31:40","commitOrder":10,"curCode":"    @Override public RelNode convert(RelNode rel) {\n      final LogicalAggregate agg = (LogicalAggregate) rel;\n      final RelTraitSet traitSet =\n          agg.getTraitSet().replace(out);\n      try {\n        return new MongoAggregate(\n            rel.getCluster(),\n            traitSet,\n            convert(agg.getInput(), traitSet.simplify()),\n            agg.getGroupSet(),\n            agg.getGroupSets(),\n            agg.getAggCallList());\n      } catch (InvalidRelException e) {\n        LOGGER.warn(e.toString());\n        return null;\n      }\n    }\n","date":"2020-07-29 02:27:24","endLine":521,"groupId":"12177","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"convert","params":"(RelNoderel)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/83/abe1ff5b33f4cb3b85c044b499eeb46678e736.src","preCode":"    @Override public RelNode convert(RelNode rel) {\n      final LogicalAggregate agg = (LogicalAggregate) rel;\n      final RelTraitSet traitSet =\n          agg.getTraitSet().replace(out);\n      try {\n        return new MongoAggregate(\n            rel.getCluster(),\n            traitSet,\n            convert(agg.getInput(), traitSet.simplify()),\n            agg.getGroupSet(),\n            agg.getGroupSets(),\n            agg.getAggCallList());\n      } catch (InvalidRelException e) {\n        LOGGER.warn(e.toString());\n        return null;\n      }\n    }\n","realPath":"mongodb/src/main/java/org/apache/calcite/adapter/mongodb/MongoRules.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":505,"status":"N"},{"authorDate":"2020-05-29 00:04:40","commitOrder":10,"curCode":"    @Override public @Nullable RelNode convert(RelNode rel) {\n      final LogicalAggregate agg = (LogicalAggregate) rel;\n      final RelTraitSet traitSet =\n          agg.getTraitSet().replace(BindableConvention.INSTANCE);\n      try {\n        return new BindableAggregate(rel.getCluster(), traitSet,\n            convert(agg.getInput(), traitSet), false, agg.getGroupSet(),\n            agg.getGroupSets(), agg.getAggCallList());\n      } catch (InvalidRelException e) {\n        RelOptPlanner.LOGGER.debug(e.toString());\n        return null;\n      }\n    }\n","date":"2020-11-30 06:45:33","endLine":809,"groupId":"12177","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"convert","params":"(RelNoderel)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/55/c3f686e41b94ba1b629bc2d98d9f2de2197211.src","preCode":"    @Override public RelNode convert(RelNode rel) {\n      final LogicalAggregate agg = (LogicalAggregate) rel;\n      final RelTraitSet traitSet =\n          agg.getTraitSet().replace(BindableConvention.INSTANCE);\n      try {\n        return new BindableAggregate(rel.getCluster(), traitSet,\n            convert(agg.getInput(), traitSet), false, agg.getGroupSet(),\n            agg.getGroupSets(), agg.getAggCallList());\n      } catch (InvalidRelException e) {\n        RelOptPlanner.LOGGER.debug(e.toString());\n        return null;\n      }\n    }\n","realPath":"core/src/main/java/org/apache/calcite/interpreter/Bindables.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":797,"status":"M"}],"commitId":"d9a81b88ad561e7e4cedae93e805e0d7a53a7f1a","commitMessage":"@@@[CALCITE-4199] Add nullability annotations\n\nThe commit includes javadoc updates and refactorings made by Julian Hyde in https://github.com/apache/calcite/pull/2278\n","date":"2020-11-30 06:45:33","modifiedFileCount":"1012","status":"M","submitter":"Vladimir Sitnikov"}]
