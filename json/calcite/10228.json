[{"authorTime":"2016-04-15 05:31:10","codes":[{"authorDate":"2016-06-01 13:07:04","commitOrder":3,"curCode":"  public Result implement(EnumerableRelImplementor implementor, Prefer pref) {\n    PhysType physType =\n        PhysTypeImpl.of(\n            implementor.getTypeFactory(),\n            getRowType(),\n            pref.preferArray());\n\n    if (table instanceof JsonTable) {\n      return implementor.result(\n          physType,\n          Blocks.toBlock(\n              Expressions.call(table.getExpression(JsonTable.class),\n                  \"enumerable\")));\n    }\n    return implementor.result(\n        physType,\n        Blocks.toBlock(\n            Expressions.call(table.getExpression(CsvTranslatableTable.class),\n                \"project\", implementor.getRootExpression(),\n                Expressions.constant(fields))));\n  }\n","date":"2016-07-07 10:44:17","endLine":102,"groupId":"8608","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"implement","params":"(EnumerableRelImplementorimplementor@Preferpref)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/51/65aabe2010d72746d4812985d80de7ca082271.src","preCode":"  public Result implement(EnumerableRelImplementor implementor, Prefer pref) {\n    PhysType physType =\n        PhysTypeImpl.of(\n            implementor.getTypeFactory(),\n            getRowType(),\n            pref.preferArray());\n\n    if (table instanceof JsonTable) {\n      return implementor.result(\n          physType,\n          Blocks.toBlock(\n              Expressions.call(table.getExpression(JsonTable.class),\n                  \"enumerable\")));\n    }\n    return implementor.result(\n        physType,\n        Blocks.toBlock(\n            Expressions.call(table.getExpression(CsvTranslatableTable.class),\n                \"project\", implementor.getRootExpression(),\n                Expressions.constant(fields))));\n  }\n","realPath":"example/csv/src/main/java/org/apache/calcite/adapter/csv/CsvTableScan.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":82,"status":"NB"},{"authorDate":"2016-04-15 05:31:10","commitOrder":3,"curCode":"  public Result implement(EnumerableRelImplementor implementor, Prefer pref) {\n    PhysType physType =\n        PhysTypeImpl.of(\n            implementor.getTypeFactory(),\n            getRowType(),\n            pref.preferArray());\n\n    return implementor.result(\n        physType,\n        Blocks.toBlock(\n            Expressions.call(table.getExpression(FileTable.class), \"project\",\n                Expressions.constant(fields))));\n  }\n","date":"2017-02-23 13:09:47","endLine":91,"groupId":"4636","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"implement","params":"(EnumerableRelImplementorimplementor@Preferpref)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/bd/d1d508b65ee5236fad0b1e526a90b9061a140b.src","preCode":"  public Result implement(EnumerableRelImplementor implementor, Prefer pref) {\n    PhysType physType =\n        PhysTypeImpl.of(\n            implementor.getTypeFactory(),\n            getRowType(),\n            pref.preferArray());\n\n    return implementor.result(\n        physType,\n        Blocks.toBlock(\n            Expressions.call(table.getExpression(FileTable.class), \"project\",\n                Expressions.constant(fields))));\n  }\n","realPath":"file/src/main/java/org/apache/calcite/adapter/file/FileTableScan.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":79,"status":"B"}],"commitId":"cf46d3be19f701ad056aba3b60a701b962e0f1b0","commitMessage":"@@@[CALCITE-884] Web adapter (Henry Olson)\n\nSome fix-ups (Julian Hyde):\n* Upgrade calcite;\n* Upgrade natty.  jsoup;\n* Rename files.  and move to org.apache.calcite.adapter.file package;\n* Add file adapter documentation and history (based on original README\n  and HISTORY);\n* Add EMPS.html and DEPTS.html examples.\n","date":"2017-02-23 13:09:47","modifiedFileCount":"1","status":"M","submitter":"Henry Olson"},{"authorTime":"2020-09-29 22:09:05","codes":[{"authorDate":"2020-09-29 22:09:05","commitOrder":4,"curCode":"  @Override public Result implement(EnumerableRelImplementor implementor, Prefer pref) {\n    PhysType physType =\n        PhysTypeImpl.of(\n            implementor.getTypeFactory(),\n            getRowType(),\n            pref.preferArray());\n\n    if (table instanceof JsonTable) {\n      return implementor.result(\n          physType,\n          Blocks.toBlock(\n              Expressions.call(table.getExpression(JsonTable.class),\n                  \"enumerable\")));\n    }\n    return implementor.result(\n        physType,\n        Blocks.toBlock(\n            Expressions.call(table.getExpression(CsvTranslatableTable.class),\n                \"project\", implementor.getRootExpression(),\n                Expressions.constant(fields))));\n  }\n","date":"2020-10-07 05:42:47","endLine":121,"groupId":"10228","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"implement","params":"(EnumerableRelImplementorimplementor@Preferpref)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/ba/f1fd082d722b67692ee13014c3fd84a41cb3cc.src","preCode":"  public Result implement(EnumerableRelImplementor implementor, Prefer pref) {\n    PhysType physType =\n        PhysTypeImpl.of(\n            implementor.getTypeFactory(),\n            getRowType(),\n            pref.preferArray());\n\n    if (table instanceof JsonTable) {\n      return implementor.result(\n          physType,\n          Blocks.toBlock(\n              Expressions.call(table.getExpression(JsonTable.class),\n                  \"enumerable\")));\n    }\n    return implementor.result(\n        physType,\n        Blocks.toBlock(\n            Expressions.call(table.getExpression(CsvTranslatableTable.class),\n                \"project\", implementor.getRootExpression(),\n                Expressions.constant(fields))));\n  }\n","realPath":"example/csv/src/main/java/org/apache/calcite/adapter/csv/CsvTableScan.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":101,"status":"M"},{"authorDate":"2020-09-29 22:09:05","commitOrder":4,"curCode":"  @Override public Result implement(EnumerableRelImplementor implementor, Prefer pref) {\n    PhysType physType =\n        PhysTypeImpl.of(\n            implementor.getTypeFactory(),\n            getRowType(),\n            pref.preferArray());\n\n    return implementor.result(\n        physType,\n        Blocks.toBlock(\n            Expressions.call(table.getExpression(FileTable.class), \"project\",\n                Expressions.constant(fields))));\n  }\n","date":"2020-10-07 05:42:47","endLine":93,"groupId":"10228","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"implement","params":"(EnumerableRelImplementorimplementor@Preferpref)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/42/00ed569a5d0cd4bdaff31351a2d50c069285f8.src","preCode":"  public Result implement(EnumerableRelImplementor implementor, Prefer pref) {\n    PhysType physType =\n        PhysTypeImpl.of(\n            implementor.getTypeFactory(),\n            getRowType(),\n            pref.preferArray());\n\n    return implementor.result(\n        physType,\n        Blocks.toBlock(\n            Expressions.call(table.getExpression(FileTable.class), \"project\",\n                Expressions.constant(fields))));\n  }\n","realPath":"file/src/main/java/org/apache/calcite/adapter/file/FileTableScan.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":81,"status":"M"}],"commitId":"66caa54c5e272f8287ca132ca012733898a38768","commitMessage":"@@@[CALCITE-4314] Add missing @Override annotations\n","date":"2020-10-07 05:42:47","modifiedFileCount":"745","status":"M","submitter":"Vladimir Sitnikov"}]
