[{"authorTime":"2015-07-12 05:56:42","codes":[{"authorDate":"2015-07-12 05:56:42","commitOrder":2,"curCode":"  @Test public void testDistinctRowCountTable() {\n    \r\n    RelNode rel = convertSql(\"select * from emp where deptno = 10\");\n    final RelMetadataQuery mq = RelMetadataQuery.instance();\n    ImmutableBitSet groupKey =\n        ImmutableBitSet.of(rel.getRowType().getFieldNames().indexOf(\"DEPTNO\"));\n    Double result = mq.getDistinctRowCount(rel, groupKey, null);\n    assertThat(result, nullValue());\n  }\n","date":"2016-01-10 16:51:25","endLine":769,"groupId":"15174","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testDistinctRowCountTable","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/96/cd23b3aab9084129ca47bf4bd5480d0b3c35d4.src","preCode":"  @Test public void testDistinctRowCountTable() {\n    \r\n    RelNode rel = convertSql(\"select * from emp where deptno = 10\");\n    final RelMetadataQuery mq = RelMetadataQuery.instance();\n    ImmutableBitSet groupKey =\n        ImmutableBitSet.of(rel.getRowType().getFieldNames().indexOf(\"DEPTNO\"));\n    Double result = mq.getDistinctRowCount(rel, groupKey, null);\n    assertThat(result, nullValue());\n  }\n","realPath":"core/src/test/java/org/apache/calcite/test/RelMetadataTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":761,"status":"MB"},{"authorDate":"2015-07-12 05:56:42","commitOrder":2,"curCode":"  @Test public void testDistinctRowCountTableEmptyKey() {\n    RelNode rel = convertSql(\"select * from emp where deptno = 10\");\n    ImmutableBitSet groupKey = ImmutableBitSet.of(); \r\n    final RelMetadataQuery mq = RelMetadataQuery.instance();\n    Double result = mq.getDistinctRowCount(rel, groupKey, null);\n    assertThat(result, is(1D));\n  }\n","date":"2016-01-10 16:51:25","endLine":777,"groupId":"6463","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testDistinctRowCountTableEmptyKey","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/96/cd23b3aab9084129ca47bf4bd5480d0b3c35d4.src","preCode":"  @Test public void testDistinctRowCountTableEmptyKey() {\n    RelNode rel = convertSql(\"select * from emp where deptno = 10\");\n    ImmutableBitSet groupKey = ImmutableBitSet.of(); \r\n    final RelMetadataQuery mq = RelMetadataQuery.instance();\n    Double result = mq.getDistinctRowCount(rel, groupKey, null);\n    assertThat(result, is(1D));\n  }\n","realPath":"core/src/test/java/org/apache/calcite/test/RelMetadataTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":771,"status":"B"}],"commitId":"cabdcf44e4aec4d4ceea7f97c8c6fd9e9dbd36b1","commitMessage":"@@@[CALCITE-794] Detect cycles when computing statistics\n\nMake RelMetadataQuery methods non-static. Each active call is\nregistered in the RelMetadataQuery instance; it throws\nCyclicMetadataException when it detects a cycle.  and the caller can\ncatch it to return a sensible default value for the particular kind of\nmetadata.\n\nChange signature of FlatLists.of(Object...) to\nFlatLists.copyOf(Comparable...).\n\nTemporarily disable all failing tests.\n\nAdd metadata for EnumerableLimit.\n","date":"2016-01-10 16:51:25","modifiedFileCount":"122","status":"M","submitter":"Julian Hyde"},{"authorTime":"2019-10-16 19:22:37","codes":[{"authorDate":"2019-10-16 19:22:37","commitOrder":3,"curCode":"  @Test public void testDistinctRowCountTable() {\n    \r\n    RelNode rel = convertSql(\"select * from emp where deptno = 10\");\n    final RelMetadataQuery mq = rel.getCluster().getMetadataQuery();\n    ImmutableBitSet groupKey =\n        ImmutableBitSet.of(rel.getRowType().getFieldNames().indexOf(\"DEPTNO\"));\n    Double result = mq.getDistinctRowCount(rel, groupKey, null);\n    assertThat(result, nullValue());\n  }\n","date":"2019-10-18 06:51:31","endLine":840,"groupId":"15174","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testDistinctRowCountTable","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/a5/546e7bd8ccd670f7df343a68ec43f14ff8ea11.src","preCode":"  @Test public void testDistinctRowCountTable() {\n    \r\n    RelNode rel = convertSql(\"select * from emp where deptno = 10\");\n    final RelMetadataQuery mq = RelMetadataQuery.instance();\n    ImmutableBitSet groupKey =\n        ImmutableBitSet.of(rel.getRowType().getFieldNames().indexOf(\"DEPTNO\"));\n    Double result = mq.getDistinctRowCount(rel, groupKey, null);\n    assertThat(result, nullValue());\n  }\n","realPath":"core/src/test/java/org/apache/calcite/test/RelMetadataTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":832,"status":"M"},{"authorDate":"2019-10-16 19:22:37","commitOrder":3,"curCode":"  @Test public void testDistinctRowCountTableEmptyKey() {\n    RelNode rel = convertSql(\"select * from emp where deptno = 10\");\n    ImmutableBitSet groupKey = ImmutableBitSet.of(); \r\n    final RelMetadataQuery mq = rel.getCluster().getMetadataQuery();\n    Double result = mq.getDistinctRowCount(rel, groupKey, null);\n    assertThat(result, is(1D));\n  }\n","date":"2019-10-18 06:51:31","endLine":848,"groupId":"6463","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testDistinctRowCountTableEmptyKey","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/a5/546e7bd8ccd670f7df343a68ec43f14ff8ea11.src","preCode":"  @Test public void testDistinctRowCountTableEmptyKey() {\n    RelNode rel = convertSql(\"select * from emp where deptno = 10\");\n    ImmutableBitSet groupKey = ImmutableBitSet.of(); \r\n    final RelMetadataQuery mq = RelMetadataQuery.instance();\n    Double result = mq.getDistinctRowCount(rel, groupKey, null);\n    assertThat(result, is(1D));\n  }\n","realPath":"core/src/test/java/org/apache/calcite/test/RelMetadataTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":842,"status":"M"}],"commitId":"ebc16afa935888578b5befc870c1997f307a6cb5","commitMessage":"@@@[CALCITE-3421] Reuse RelMetadataQuery in test suites\n\nClose #1513\n","date":"2019-10-18 06:51:31","modifiedFileCount":"5","status":"M","submitter":"dz"},{"authorTime":"2020-04-02 10:39:10","codes":[{"authorDate":"2020-04-02 10:39:10","commitOrder":4,"curCode":"  @Test void testDistinctRowCountTable() {\n    \r\n    RelNode rel = convertSql(\"select * from emp where deptno = 10\");\n    final RelMetadataQuery mq = rel.getCluster().getMetadataQuery();\n    ImmutableBitSet groupKey =\n        ImmutableBitSet.of(rel.getRowType().getFieldNames().indexOf(\"DEPTNO\"));\n    Double result = mq.getDistinctRowCount(rel, groupKey, null);\n    assertThat(result, nullValue());\n  }\n","date":"2020-04-06 04:57:49","endLine":879,"groupId":"15174","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testDistinctRowCountTable","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/cf/1ece4728b283bdc8ffdff6174002f52f235fb8.src","preCode":"  @Test public void testDistinctRowCountTable() {\n    \r\n    RelNode rel = convertSql(\"select * from emp where deptno = 10\");\n    final RelMetadataQuery mq = rel.getCluster().getMetadataQuery();\n    ImmutableBitSet groupKey =\n        ImmutableBitSet.of(rel.getRowType().getFieldNames().indexOf(\"DEPTNO\"));\n    Double result = mq.getDistinctRowCount(rel, groupKey, null);\n    assertThat(result, nullValue());\n  }\n","realPath":"core/src/test/java/org/apache/calcite/test/RelMetadataTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":871,"status":"M"},{"authorDate":"2020-04-02 10:39:10","commitOrder":4,"curCode":"  @Test void testDistinctRowCountTableEmptyKey() {\n    RelNode rel = convertSql(\"select * from emp where deptno = 10\");\n    ImmutableBitSet groupKey = ImmutableBitSet.of(); \r\n    final RelMetadataQuery mq = rel.getCluster().getMetadataQuery();\n    Double result = mq.getDistinctRowCount(rel, groupKey, null);\n    assertThat(result, is(1D));\n  }\n","date":"2020-04-06 04:57:49","endLine":887,"groupId":"6463","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testDistinctRowCountTableEmptyKey","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/cf/1ece4728b283bdc8ffdff6174002f52f235fb8.src","preCode":"  @Test public void testDistinctRowCountTableEmptyKey() {\n    RelNode rel = convertSql(\"select * from emp where deptno = 10\");\n    ImmutableBitSet groupKey = ImmutableBitSet.of(); \r\n    final RelMetadataQuery mq = rel.getCluster().getMetadataQuery();\n    Double result = mq.getDistinctRowCount(rel, groupKey, null);\n    assertThat(result, is(1D));\n  }\n","realPath":"core/src/test/java/org/apache/calcite/test/RelMetadataTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":881,"status":"M"}],"commitId":"9492dd4146f63ddc028010d6c4e86f6a5cb29a8d","commitMessage":"@@@[CALCITE-3892] Make junit test classes and methods non-public where possible\n\nPrior to junit 5.  classes and methods had to be public. This is no\nlonger the case.\n\nSome classes need to remain public because they are referenced from\nelsewhere.  or if they use reflection somehow. The remaining 'public'\nkeyword will be informative to maintainers.\n","date":"2020-04-06 04:57:49","modifiedFileCount":"196","status":"M","submitter":"Julian Hyde"},{"authorTime":"2020-04-02 10:39:10","codes":[{"authorDate":"2020-09-10 16:36:57","commitOrder":5,"curCode":"  @Test void testDistinctRowCountTable() {\n    \r\n    RelNode rel = convertSql(\"select * from (values \"\n        + \"(1, 2, 3, null), \"\n        + \"(3, 4, 5, 6), \"\n        + \"(3, 4, null, 6), \"\n        + \"(8, 4, 5, null) \"\n        + \") t(c1, c2, c3, c4)\");\n    final RelMetadataQuery mq = rel.getCluster().getMetadataQuery();\n\n    ImmutableBitSet groupKey = ImmutableBitSet.of(0, 1, 2, 3);\n    Double result = mq.getDistinctRowCount(rel, groupKey, null);\n    \r\n    assertThat(result, is(4D));\n\n    groupKey = ImmutableBitSet.of(1, 2);\n    result = mq.getDistinctRowCount(rel, groupKey, null);\n    \r\n    assertThat(result, is(3D));\n\n    groupKey = ImmutableBitSet.of(0);\n    result = mq.getDistinctRowCount(rel, groupKey, null);\n    \r\n    assertThat(result, is(3D));\n\n    groupKey = ImmutableBitSet.of(3);\n    result = mq.getDistinctRowCount(rel, groupKey, null);\n    \r\n    assertThat(result, is(2D));\n  }\n","date":"2020-09-21 11:51:56","endLine":948,"groupId":"101106","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"testDistinctRowCountTable","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/62/485dc45d9a2a083b41b70c9f8079d948573697.src","preCode":"  @Test void testDistinctRowCountTable() {\n    \r\n    RelNode rel = convertSql(\"select * from emp where deptno = 10\");\n    final RelMetadataQuery mq = rel.getCluster().getMetadataQuery();\n    ImmutableBitSet groupKey =\n        ImmutableBitSet.of(rel.getRowType().getFieldNames().indexOf(\"DEPTNO\"));\n    Double result = mq.getDistinctRowCount(rel, groupKey, null);\n    assertThat(result, nullValue());\n  }\n","realPath":"core/src/test/java/org/apache/calcite/test/RelMetadataTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":919,"status":"M"},{"authorDate":"2020-04-02 10:39:10","commitOrder":5,"curCode":"  @Test void testDistinctRowCountTableEmptyKey() {\n    RelNode rel = convertSql(\"select * from emp where deptno = 10\");\n    ImmutableBitSet groupKey = ImmutableBitSet.of(); \r\n    final RelMetadataQuery mq = rel.getCluster().getMetadataQuery();\n    Double result = mq.getDistinctRowCount(rel, groupKey, null);\n    assertThat(result, is(1D));\n  }\n","date":"2020-04-06 04:57:49","endLine":887,"groupId":"101106","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"testDistinctRowCountTableEmptyKey","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/cf/1ece4728b283bdc8ffdff6174002f52f235fb8.src","preCode":"  @Test void testDistinctRowCountTableEmptyKey() {\n    RelNode rel = convertSql(\"select * from emp where deptno = 10\");\n    ImmutableBitSet groupKey = ImmutableBitSet.of(); \r\n    final RelMetadataQuery mq = rel.getCluster().getMetadataQuery();\n    Double result = mq.getDistinctRowCount(rel, groupKey, null);\n    assertThat(result, is(1D));\n  }\n","realPath":"core/src/test/java/org/apache/calcite/test/RelMetadataTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":881,"status":"N"}],"commitId":"e7ac26d6ec083848531b456d2acf3f7f58a499b5","commitMessage":"@@@[CALCITE-4241] Some improvements to metadata query\n","date":"2020-09-21 11:51:56","modifiedFileCount":"4","status":"M","submitter":"liyafan82"}]
