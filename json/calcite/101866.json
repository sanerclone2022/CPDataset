[{"authorTime":"2014-11-14 09:39:29","codes":[{"authorDate":"2014-11-14 09:39:29","commitOrder":1,"curCode":"  @Override public void setOperand(int i, SqlNode operand) {\n    switch (i) {\n    case 0:\n      keywords = (SqlNodeList) operand;\n      break;\n    case 1:\n      targetTable = (SqlIdentifier) operand;\n      break;\n    case 2:\n      source = operand;\n      break;\n    case 3:\n      columnList = (SqlNodeList) operand;\n      break;\n    default:\n      throw new AssertionError(i);\n    }\n  }\n","date":"2014-11-14 09:39:34","endLine":84,"groupId":"1289","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"setOperand","params":"(inti@SqlNodeoperand)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/6a/917b7f6a568a6416e191b03822708b0f983d2b.src","preCode":"  @Override public void setOperand(int i, SqlNode operand) {\n    switch (i) {\n    case 0:\n      keywords = (SqlNodeList) operand;\n      break;\n    case 1:\n      targetTable = (SqlIdentifier) operand;\n      break;\n    case 2:\n      source = operand;\n      break;\n    case 3:\n      columnList = (SqlNodeList) operand;\n      break;\n    default:\n      throw new AssertionError(i);\n    }\n  }\n","realPath":"core/src/main/java/org/apache/calcite/sql/SqlInsert.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":67,"status":"B"},{"authorDate":"2014-11-14 09:39:29","commitOrder":1,"curCode":"  public void setOperand(int i, SqlNode operand) {\n    switch (i) {\n    case 0:\n      targetTable = (SqlIdentifier) operand;\n      break;\n    case 1:\n      condition = operand;\n      break;\n    case 2:\n      source = operand;\n      break;\n    case 3:\n      updateCall = (SqlUpdate) operand;\n      break;\n    case 4:\n      insertCall = (SqlInsert) operand;\n      break;\n    case 5:\n      sourceSelect = (SqlSelect) operand;\n      break;\n    case 6:\n      alias = (SqlIdentifier) operand;\n      break;\n    default:\n      throw new AssertionError(i);\n    }\n  }\n","date":"2014-11-14 09:39:34","endLine":104,"groupId":"5720","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"setOperand","params":"(inti@SqlNodeoperand)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/ed/d584b998f02d49ef5510ba0cd12bdba9bced73.src","preCode":"  public void setOperand(int i, SqlNode operand) {\n    switch (i) {\n    case 0:\n      targetTable = (SqlIdentifier) operand;\n      break;\n    case 1:\n      condition = operand;\n      break;\n    case 2:\n      source = operand;\n      break;\n    case 3:\n      updateCall = (SqlUpdate) operand;\n      break;\n    case 4:\n      insertCall = (SqlInsert) operand;\n      break;\n    case 5:\n      sourceSelect = (SqlSelect) operand;\n      break;\n    case 6:\n      alias = (SqlIdentifier) operand;\n      break;\n    default:\n      throw new AssertionError(i);\n    }\n  }\n","realPath":"core/src/main/java/org/apache/calcite/sql/SqlMerge.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":78,"status":"B"}],"commitId":"a611d645ad754844a39f3d98f5f814f13dbd9404","commitMessage":"@@@[CALCITE-296] Re-organize package structure;\n[CALCITE-419] Naming convention for planner rules\n\nThis change only renames files (and deletes some obsolete files). There are no content changes.\n","date":"2014-11-14 09:39:34","modifiedFileCount":"0","status":"B","submitter":"Julian Hyde"},{"authorTime":"2014-11-14 10:11:34","codes":[{"authorDate":"2014-11-14 09:39:29","commitOrder":2,"curCode":"  @Override public void setOperand(int i, SqlNode operand) {\n    switch (i) {\n    case 0:\n      keywords = (SqlNodeList) operand;\n      break;\n    case 1:\n      targetTable = (SqlIdentifier) operand;\n      break;\n    case 2:\n      source = operand;\n      break;\n    case 3:\n      columnList = (SqlNodeList) operand;\n      break;\n    default:\n      throw new AssertionError(i);\n    }\n  }\n","date":"2014-11-14 09:39:34","endLine":84,"groupId":"1289","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"setOperand","params":"(inti@SqlNodeoperand)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/6a/917b7f6a568a6416e191b03822708b0f983d2b.src","preCode":"  @Override public void setOperand(int i, SqlNode operand) {\n    switch (i) {\n    case 0:\n      keywords = (SqlNodeList) operand;\n      break;\n    case 1:\n      targetTable = (SqlIdentifier) operand;\n      break;\n    case 2:\n      source = operand;\n      break;\n    case 3:\n      columnList = (SqlNodeList) operand;\n      break;\n    default:\n      throw new AssertionError(i);\n    }\n  }\n","realPath":"core/src/main/java/org/apache/calcite/sql/SqlInsert.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":67,"status":"N"},{"authorDate":"2014-11-14 10:11:34","commitOrder":2,"curCode":"  @Override public void setOperand(int i, SqlNode operand) {\n    switch (i) {\n    case 0:\n      targetTable = (SqlIdentifier) operand;\n      break;\n    case 1:\n      condition = operand;\n      break;\n    case 2:\n      source = operand;\n      break;\n    case 3:\n      updateCall = (SqlUpdate) operand;\n      break;\n    case 4:\n      insertCall = (SqlInsert) operand;\n      break;\n    case 5:\n      sourceSelect = (SqlSelect) operand;\n      break;\n    case 6:\n      alias = (SqlIdentifier) operand;\n      break;\n    default:\n      throw new AssertionError(i);\n    }\n  }\n","date":"2014-11-14 10:22:06","endLine":106,"groupId":"5720","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"setOperand","params":"(inti@SqlNodeoperand)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/59/317e34bc986955c4abd5a9a2f3a2a2e698f437.src","preCode":"  public void setOperand(int i, SqlNode operand) {\n    switch (i) {\n    case 0:\n      targetTable = (SqlIdentifier) operand;\n      break;\n    case 1:\n      condition = operand;\n      break;\n    case 2:\n      source = operand;\n      break;\n    case 3:\n      updateCall = (SqlUpdate) operand;\n      break;\n    case 4:\n      insertCall = (SqlInsert) operand;\n      break;\n    case 5:\n      sourceSelect = (SqlSelect) operand;\n      break;\n    case 6:\n      alias = (SqlIdentifier) operand;\n      break;\n    default:\n      throw new AssertionError(i);\n    }\n  }\n","realPath":"core/src/main/java/org/apache/calcite/sql/SqlMerge.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":80,"status":"M"}],"commitId":"a0ba73cd2de76696b96a1cd828d2aa4d3ef9eb55","commitMessage":"@@@[CALCITE-306] Standardize code style for \"import package.*;\"\n\nRename classes and packages and generally fix things up after [CALCITE-296] and [CALCITE-419].\n\nMake many inner classes of EnumerableRules (e.g. EnumerableFilter.  EnumerableFilterRule) top-level classes.\n\nApply a consistent formatting convention for string literals split over multiple lines.\n\nRename generated file org.eigenbase.resource.Resources to org.apache.calcite.runtime.Resources.\n\nChange occurrences of \"optiq\" and \"eigenbase\" in java code to \"calcite\".\n","date":"2014-11-14 10:22:06","modifiedFileCount":"1156","status":"M","submitter":"Julian Hyde"},{"authorTime":"2015-08-20 07:25:30","codes":[{"authorDate":"2014-11-14 09:39:29","commitOrder":3,"curCode":"  @Override public void setOperand(int i, SqlNode operand) {\n    switch (i) {\n    case 0:\n      keywords = (SqlNodeList) operand;\n      break;\n    case 1:\n      targetTable = (SqlIdentifier) operand;\n      break;\n    case 2:\n      source = operand;\n      break;\n    case 3:\n      columnList = (SqlNodeList) operand;\n      break;\n    default:\n      throw new AssertionError(i);\n    }\n  }\n","date":"2014-11-14 09:39:34","endLine":84,"groupId":"1289","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"setOperand","params":"(inti@SqlNodeoperand)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/6a/917b7f6a568a6416e191b03822708b0f983d2b.src","preCode":"  @Override public void setOperand(int i, SqlNode operand) {\n    switch (i) {\n    case 0:\n      keywords = (SqlNodeList) operand;\n      break;\n    case 1:\n      targetTable = (SqlIdentifier) operand;\n      break;\n    case 2:\n      source = operand;\n      break;\n    case 3:\n      columnList = (SqlNodeList) operand;\n      break;\n    default:\n      throw new AssertionError(i);\n    }\n  }\n","realPath":"core/src/main/java/org/apache/calcite/sql/SqlInsert.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":67,"status":"N"},{"authorDate":"2015-08-20 07:25:30","commitOrder":3,"curCode":"  @Override public void setOperand(int i, SqlNode operand) {\n    switch (i) {\n    case 0:\n      assert operand instanceof SqlIdentifier;\n      targetTable = operand;\n      break;\n    case 1:\n      condition = operand;\n      break;\n    case 2:\n      source = operand;\n      break;\n    case 3:\n      updateCall = (SqlUpdate) operand;\n      break;\n    case 4:\n      insertCall = (SqlInsert) operand;\n      break;\n    case 5:\n      sourceSelect = (SqlSelect) operand;\n      break;\n    case 6:\n      alias = (SqlIdentifier) operand;\n      break;\n    default:\n      throw new AssertionError(i);\n    }\n  }\n","date":"2016-01-10 16:51:24","endLine":106,"groupId":"5720","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"setOperand","params":"(inti@SqlNodeoperand)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/af/38c391dacb59050ebeb92638569d74dbcdddbc.src","preCode":"  @Override public void setOperand(int i, SqlNode operand) {\n    switch (i) {\n    case 0:\n      targetTable = (SqlIdentifier) operand;\n      break;\n    case 1:\n      condition = operand;\n      break;\n    case 2:\n      source = operand;\n      break;\n    case 3:\n      updateCall = (SqlUpdate) operand;\n      break;\n    case 4:\n      insertCall = (SqlInsert) operand;\n      break;\n    case 5:\n      sourceSelect = (SqlSelect) operand;\n      break;\n    case 6:\n      alias = (SqlIdentifier) operand;\n      break;\n    default:\n      throw new AssertionError(i);\n    }\n  }\n","realPath":"core/src/main/java/org/apache/calcite/sql/SqlMerge.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":79,"status":"M"}],"commitId":"7837e64c3294aa776ca38cba3f756550af3494ab","commitMessage":"@@@Simplify RexProgram.  in particular \"(NOT CASE ... END) IS TRUE\".  which occurs in NOT IN\n","date":"2016-01-10 16:51:24","modifiedFileCount":"12","status":"M","submitter":"Julian Hyde"},{"authorTime":"2015-08-20 07:25:30","codes":[{"authorDate":"2016-03-05 05:51:02","commitOrder":4,"curCode":"  @Override public void setOperand(int i, SqlNode operand) {\n    switch (i) {\n    case 0:\n      keywords = (SqlNodeList) operand;\n      break;\n    case 1:\n      assert operand instanceof SqlIdentifier;\n      targetTable = operand;\n      break;\n    case 2:\n      source = operand;\n      break;\n    case 3:\n      columnList = (SqlNodeList) operand;\n      break;\n    default:\n      throw new AssertionError(i);\n    }\n  }\n","date":"2016-03-08 13:20:51","endLine":95,"groupId":"7087","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"setOperand","params":"(inti@SqlNodeoperand)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/19/472a7c660a9295655aed211ce78008c3762b19.src","preCode":"  @Override public void setOperand(int i, SqlNode operand) {\n    switch (i) {\n    case 0:\n      keywords = (SqlNodeList) operand;\n      break;\n    case 1:\n      targetTable = (SqlIdentifier) operand;\n      break;\n    case 2:\n      source = operand;\n      break;\n    case 3:\n      columnList = (SqlNodeList) operand;\n      break;\n    default:\n      throw new AssertionError(i);\n    }\n  }\n","realPath":"core/src/main/java/org/apache/calcite/sql/SqlInsert.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":77,"status":"M"},{"authorDate":"2015-08-20 07:25:30","commitOrder":4,"curCode":"  @Override public void setOperand(int i, SqlNode operand) {\n    switch (i) {\n    case 0:\n      assert operand instanceof SqlIdentifier;\n      targetTable = operand;\n      break;\n    case 1:\n      condition = operand;\n      break;\n    case 2:\n      source = operand;\n      break;\n    case 3:\n      updateCall = (SqlUpdate) operand;\n      break;\n    case 4:\n      insertCall = (SqlInsert) operand;\n      break;\n    case 5:\n      sourceSelect = (SqlSelect) operand;\n      break;\n    case 6:\n      alias = (SqlIdentifier) operand;\n      break;\n    default:\n      throw new AssertionError(i);\n    }\n  }\n","date":"2016-01-10 16:51:24","endLine":106,"groupId":"5720","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"setOperand","params":"(inti@SqlNodeoperand)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/af/38c391dacb59050ebeb92638569d74dbcdddbc.src","preCode":"  @Override public void setOperand(int i, SqlNode operand) {\n    switch (i) {\n    case 0:\n      assert operand instanceof SqlIdentifier;\n      targetTable = operand;\n      break;\n    case 1:\n      condition = operand;\n      break;\n    case 2:\n      source = operand;\n      break;\n    case 3:\n      updateCall = (SqlUpdate) operand;\n      break;\n    case 4:\n      insertCall = (SqlInsert) operand;\n      break;\n    case 5:\n      sourceSelect = (SqlSelect) operand;\n      break;\n    case 6:\n      alias = (SqlIdentifier) operand;\n      break;\n    default:\n      throw new AssertionError(i);\n    }\n  }\n","realPath":"core/src/main/java/org/apache/calcite/sql/SqlMerge.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":79,"status":"N"}],"commitId":"9c62adac2a218b428e322e8467263cec0ed9874b","commitMessage":"@@@Deprecate SqlLiteral.SqlSymbol; SqlSymbol can now wrap any Enum\n","date":"2016-03-08 13:20:51","modifiedFileCount":"15","status":"M","submitter":"Julian Hyde"},{"authorTime":"2020-05-29 00:04:40","codes":[{"authorDate":"2020-05-29 00:04:40","commitOrder":5,"curCode":"  @Override public void setOperand(int i, @Nullable SqlNode operand) {\n    switch (i) {\n    case 0:\n      keywords = (SqlNodeList) operand;\n      break;\n    case 1:\n      assert operand instanceof SqlIdentifier;\n      targetTable = operand;\n      break;\n    case 2:\n      source = operand;\n      break;\n    case 3:\n      columnList = (SqlNodeList) operand;\n      break;\n    default:\n      throw new AssertionError(i);\n    }\n  }\n","date":"2020-11-30 06:45:33","endLine":112,"groupId":"101866","id":9,"instanceNumber":1,"isCurCommit":1,"methodName":"setOperand","params":"(inti@@NullableSqlNodeoperand)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/69/9298b0ff777180de15fa4136fc73a535089f37.src","preCode":"  @Override public void setOperand(int i, SqlNode operand) {\n    switch (i) {\n    case 0:\n      keywords = (SqlNodeList) operand;\n      break;\n    case 1:\n      assert operand instanceof SqlIdentifier;\n      targetTable = operand;\n      break;\n    case 2:\n      source = operand;\n      break;\n    case 3:\n      columnList = (SqlNodeList) operand;\n      break;\n    default:\n      throw new AssertionError(i);\n    }\n  }\n","realPath":"core/src/main/java/org/apache/calcite/sql/SqlInsert.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":94,"status":"M"},{"authorDate":"2020-05-29 00:04:40","commitOrder":5,"curCode":"  @Override public void setOperand(int i, @Nullable SqlNode operand) {\n    switch (i) {\n    case 0:\n      assert operand instanceof SqlIdentifier;\n      targetTable = operand;\n      break;\n    case 1:\n      condition = operand;\n      break;\n    case 2:\n      source = operand;\n      break;\n    case 3:\n      updateCall = (@Nullable SqlUpdate) operand;\n      break;\n    case 4:\n      insertCall = (@Nullable SqlInsert) operand;\n      break;\n    case 5:\n      sourceSelect = (@Nullable SqlSelect) operand;\n      break;\n    case 6:\n      alias = (SqlIdentifier) operand;\n      break;\n    default:\n      throw new AssertionError(i);\n    }\n  }\n","date":"2020-11-30 06:45:33","endLine":111,"groupId":"101866","id":10,"instanceNumber":2,"isCurCommit":1,"methodName":"setOperand","params":"(inti@@NullableSqlNodeoperand)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/7f/77650c6b4b8abc895064c7cfb37541f655d049.src","preCode":"  @Override public void setOperand(int i, SqlNode operand) {\n    switch (i) {\n    case 0:\n      assert operand instanceof SqlIdentifier;\n      targetTable = operand;\n      break;\n    case 1:\n      condition = operand;\n      break;\n    case 2:\n      source = operand;\n      break;\n    case 3:\n      updateCall = (SqlUpdate) operand;\n      break;\n    case 4:\n      insertCall = (SqlInsert) operand;\n      break;\n    case 5:\n      sourceSelect = (SqlSelect) operand;\n      break;\n    case 6:\n      alias = (SqlIdentifier) operand;\n      break;\n    default:\n      throw new AssertionError(i);\n    }\n  }\n","realPath":"core/src/main/java/org/apache/calcite/sql/SqlMerge.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":84,"status":"M"}],"commitId":"d9a81b88ad561e7e4cedae93e805e0d7a53a7f1a","commitMessage":"@@@[CALCITE-4199] Add nullability annotations\n\nThe commit includes javadoc updates and refactorings made by Julian Hyde in https://github.com/apache/calcite/pull/2278\n","date":"2020-11-30 06:45:33","modifiedFileCount":"1012","status":"M","submitter":"Vladimir Sitnikov"}]
