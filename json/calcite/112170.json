[{"authorTime":"2015-08-13 16:00:09","codes":[{"authorDate":"2015-08-13 16:00:09","commitOrder":3,"curCode":"  public RexNode convertExpression(\n      SqlNode node) {\n    Map<String, RelDataType> nameToTypeMap = Collections.emptyMap();\n    final ParameterScope scope =\n        new ParameterScope((SqlValidatorImpl) validator, nameToTypeMap);\n    final Blackboard bb = createBlackboard(scope, null, false);\n    return bb.convertExpression(node);\n  }\n","date":"2015-09-02 07:17:16","endLine":1754,"groupId":"13817","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"convertExpression","params":"(SqlNodenode)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/50/f22c139bc77baa47059d95e1716608d124b7b7.src","preCode":"  public RexNode convertExpression(\n      SqlNode node) {\n    Map<String, RelDataType> nameToTypeMap = Collections.emptyMap();\n    final ParameterScope scope =\n        new ParameterScope((SqlValidatorImpl) validator, nameToTypeMap);\n    final Blackboard bb = createBlackboard(scope, null, false);\n    return bb.convertExpression(node);\n  }\n","realPath":"core/src/main/java/org/apache/calcite/sql2rel/SqlToRelConverter.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":1747,"status":"B"},{"authorDate":"2015-08-13 16:00:09","commitOrder":3,"curCode":"  public RexNode convertExpression(\n      SqlNode node,\n      Map<String, RexNode> nameToNodeMap) {\n    final Map<String, RelDataType> nameToTypeMap = new HashMap<>();\n    for (Map.Entry<String, RexNode> entry : nameToNodeMap.entrySet()) {\n      nameToTypeMap.put(entry.getKey(), entry.getValue().getType());\n    }\n    final ParameterScope scope =\n        new ParameterScope((SqlValidatorImpl) validator, nameToTypeMap);\n    final Blackboard bb = createBlackboard(scope, nameToNodeMap, false);\n    return bb.convertExpression(node);\n  }\n","date":"2015-09-02 07:17:16","endLine":1778,"groupId":"5233","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"convertExpression","params":"(SqlNodenode@Map<String@RexNode>nameToNodeMap)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/50/f22c139bc77baa47059d95e1716608d124b7b7.src","preCode":"  public RexNode convertExpression(\n      SqlNode node,\n      Map<String, RexNode> nameToNodeMap) {\n    final Map<String, RelDataType> nameToTypeMap = new HashMap<>();\n    for (Map.Entry<String, RexNode> entry : nameToNodeMap.entrySet()) {\n      nameToTypeMap.put(entry.getKey(), entry.getValue().getType());\n    }\n    final ParameterScope scope =\n        new ParameterScope((SqlValidatorImpl) validator, nameToTypeMap);\n    final Blackboard bb = createBlackboard(scope, nameToNodeMap, false);\n    return bb.convertExpression(node);\n  }\n","realPath":"core/src/main/java/org/apache/calcite/sql2rel/SqlToRelConverter.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":1767,"status":"MB"}],"commitId":"5a3970635030ddde27e4237da5d8c5c3419c34b5","commitMessage":"@@@[CALCITE-819] Add RelRoot.  a contract for the result of a relational expression\n\nRemove PRESERVE collation\n","date":"2015-09-02 07:17:16","modifiedFileCount":"36","status":"M","submitter":"Julian Hyde"},{"authorTime":"2020-05-29 00:04:40","codes":[{"authorDate":"2020-05-29 00:04:40","commitOrder":4,"curCode":"  public RexNode convertExpression(\n      SqlNode node) {\n    Map<String, RelDataType> nameToTypeMap = Collections.emptyMap();\n    final ParameterScope scope =\n        new ParameterScope((SqlValidatorImpl) validator(), nameToTypeMap);\n    final Blackboard bb = createBlackboard(scope, null, false);\n    return bb.convertExpression(node);\n  }\n","date":"2020-11-30 06:45:33","endLine":1942,"groupId":"13817","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"convertExpression","params":"(SqlNodenode)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/a4/cd6728443b814926fc4c228bcd7624abce4f50.src","preCode":"  public RexNode convertExpression(\n      SqlNode node) {\n    Map<String, RelDataType> nameToTypeMap = Collections.emptyMap();\n    final ParameterScope scope =\n        new ParameterScope((SqlValidatorImpl) validator, nameToTypeMap);\n    final Blackboard bb = createBlackboard(scope, null, false);\n    return bb.convertExpression(node);\n  }\n","realPath":"core/src/main/java/org/apache/calcite/sql2rel/SqlToRelConverter.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":1935,"status":"M"},{"authorDate":"2020-05-29 00:04:40","commitOrder":4,"curCode":"  public RexNode convertExpression(\n      SqlNode node,\n      Map<String, RexNode> nameToNodeMap) {\n    final Map<String, RelDataType> nameToTypeMap = new HashMap<>();\n    for (Map.Entry<String, RexNode> entry : nameToNodeMap.entrySet()) {\n      nameToTypeMap.put(entry.getKey(), entry.getValue().getType());\n    }\n    final ParameterScope scope =\n        new ParameterScope((SqlValidatorImpl) validator(), nameToTypeMap);\n    final Blackboard bb = createBlackboard(scope, nameToNodeMap, false);\n    return bb.convertExpression(node);\n  }\n","date":"2020-11-30 06:45:33","endLine":1966,"groupId":"5233","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"convertExpression","params":"(SqlNodenode@Map<String@RexNode>nameToNodeMap)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/a4/cd6728443b814926fc4c228bcd7624abce4f50.src","preCode":"  public RexNode convertExpression(\n      SqlNode node,\n      Map<String, RexNode> nameToNodeMap) {\n    final Map<String, RelDataType> nameToTypeMap = new HashMap<>();\n    for (Map.Entry<String, RexNode> entry : nameToNodeMap.entrySet()) {\n      nameToTypeMap.put(entry.getKey(), entry.getValue().getType());\n    }\n    final ParameterScope scope =\n        new ParameterScope((SqlValidatorImpl) validator, nameToTypeMap);\n    final Blackboard bb = createBlackboard(scope, nameToNodeMap, false);\n    return bb.convertExpression(node);\n  }\n","realPath":"core/src/main/java/org/apache/calcite/sql2rel/SqlToRelConverter.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":1955,"status":"M"}],"commitId":"d9a81b88ad561e7e4cedae93e805e0d7a53a7f1a","commitMessage":"@@@[CALCITE-4199] Add nullability annotations\n\nThe commit includes javadoc updates and refactorings made by Julian Hyde in https://github.com/apache/calcite/pull/2278\n","date":"2020-11-30 06:45:33","modifiedFileCount":"1012","status":"M","submitter":"Vladimir Sitnikov"},{"authorTime":"2021-03-26 17:58:56","codes":[{"authorDate":"2021-03-26 17:58:56","commitOrder":5,"curCode":"  public RexNode convertExpression(\n      SqlNode node) {\n    Map<String, RelDataType> nameToTypeMap = Collections.emptyMap();\n    final ParameterScope scope =\n        new ParameterScope((SqlValidatorImpl) validator(), nameToTypeMap);\n    final Blackboard bb = createBlackboard(scope, null, false);\n    replaceSubQueries(bb, node, RelOptUtil.Logic.TRUE_FALSE_UNKNOWN);\n    return bb.convertExpression(node);\n  }\n","date":"2021-05-11 17:29:54","endLine":1945,"groupId":"112170","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"convertExpression","params":"(SqlNodenode)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/a1/d14de653d172a94c4dc2ed7e49779222e8eae1.src","preCode":"  public RexNode convertExpression(\n      SqlNode node) {\n    Map<String, RelDataType> nameToTypeMap = Collections.emptyMap();\n    final ParameterScope scope =\n        new ParameterScope((SqlValidatorImpl) validator(), nameToTypeMap);\n    final Blackboard bb = createBlackboard(scope, null, false);\n    return bb.convertExpression(node);\n  }\n","realPath":"core/src/main/java/org/apache/calcite/sql2rel/SqlToRelConverter.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":1937,"status":"M"},{"authorDate":"2021-03-26 17:58:56","commitOrder":5,"curCode":"  public RexNode convertExpression(\n      SqlNode node,\n      Map<String, RexNode> nameToNodeMap) {\n    final Map<String, RelDataType> nameToTypeMap = new HashMap<>();\n    for (Map.Entry<String, RexNode> entry : nameToNodeMap.entrySet()) {\n      nameToTypeMap.put(entry.getKey(), entry.getValue().getType());\n    }\n    final ParameterScope scope =\n        new ParameterScope((SqlValidatorImpl) validator(), nameToTypeMap);\n    final Blackboard bb = createBlackboard(scope, nameToNodeMap, false);\n    replaceSubQueries(bb, node, RelOptUtil.Logic.TRUE_FALSE_UNKNOWN);\n    return bb.convertExpression(node);\n  }\n","date":"2021-05-11 17:29:54","endLine":1970,"groupId":"112170","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"convertExpression","params":"(SqlNodenode@Map<String@RexNode>nameToNodeMap)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/a1/d14de653d172a94c4dc2ed7e49779222e8eae1.src","preCode":"  public RexNode convertExpression(\n      SqlNode node,\n      Map<String, RexNode> nameToNodeMap) {\n    final Map<String, RelDataType> nameToTypeMap = new HashMap<>();\n    for (Map.Entry<String, RexNode> entry : nameToNodeMap.entrySet()) {\n      nameToTypeMap.put(entry.getKey(), entry.getValue().getType());\n    }\n    final ParameterScope scope =\n        new ParameterScope((SqlValidatorImpl) validator(), nameToTypeMap);\n    final Blackboard bb = createBlackboard(scope, nameToNodeMap, false);\n    return bb.convertExpression(node);\n  }\n","realPath":"core/src/main/java/org/apache/calcite/sql2rel/SqlToRelConverter.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":1958,"status":"M"}],"commitId":"796675c9b33e0461bc45a72780162d474a4b098b","commitMessage":"@@@[CALCITE-4548] Support convert subQuery for SqlToRelConverter#convertExpression (jibiyr)\n\nclose apache/calcite#2382\n","date":"2021-05-11 17:29:54","modifiedFileCount":"3","status":"M","submitter":"laughing.sheng"}]
