[{"authorTime":"2015-09-14 18:31:53","codes":[{"authorDate":"2015-09-14 18:31:53","commitOrder":1,"curCode":"  @Test public void testDefaultIfEmpty() {\n    final List<String> experience = Arrays.asList(\"jimi\", \"mitch\", \"noel\");\n    final Enumerable<String> notEmptyEnumerable = Linq4j.asEnumerable(experience).defaultIfEmpty();\n    final Enumerator<String> notEmptyEnumerator = notEmptyEnumerable.enumerator();\n    notEmptyEnumerator.moveNext();\n    assertEquals(\"jimi\", notEmptyEnumerator.current());\n    notEmptyEnumerator.moveNext();\n    assertEquals(\"mitch\", notEmptyEnumerator.current());\n    notEmptyEnumerator.moveNext();\n    assertEquals(\"noel\", notEmptyEnumerator.current());\n\n    final Enumerable<String> emptyEnumerable =\n        Linq4j.asEnumerable(Linq4j.<String>emptyEnumerable()).defaultIfEmpty();\n    final Enumerator<String> emptyEnumerator = emptyEnumerable.enumerator();\n    assertTrue(emptyEnumerator.moveNext());\n    assertNull(emptyEnumerator.current());\n    assertFalse(emptyEnumerator.moveNext());\n  }\n","date":"2015-09-18 13:45:02","endLine":1769,"groupId":"7610","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testDefaultIfEmpty","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/0d/59b63fc06c67e362127760ce45737cea9c6df6.src","preCode":"  @Test public void testDefaultIfEmpty() {\n    final List<String> experience = Arrays.asList(\"jimi\", \"mitch\", \"noel\");\n    final Enumerable<String> notEmptyEnumerable = Linq4j.asEnumerable(experience).defaultIfEmpty();\n    final Enumerator<String> notEmptyEnumerator = notEmptyEnumerable.enumerator();\n    notEmptyEnumerator.moveNext();\n    assertEquals(\"jimi\", notEmptyEnumerator.current());\n    notEmptyEnumerator.moveNext();\n    assertEquals(\"mitch\", notEmptyEnumerator.current());\n    notEmptyEnumerator.moveNext();\n    assertEquals(\"noel\", notEmptyEnumerator.current());\n\n    final Enumerable<String> emptyEnumerable =\n        Linq4j.asEnumerable(Linq4j.<String>emptyEnumerable()).defaultIfEmpty();\n    final Enumerator<String> emptyEnumerator = emptyEnumerable.enumerator();\n    assertTrue(emptyEnumerator.moveNext());\n    assertNull(emptyEnumerator.current());\n    assertFalse(emptyEnumerator.moveNext());\n  }\n","realPath":"linq4j/src/test/java/org/apache/calcite/linq4j/test/Linq4jTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":1752,"status":"B"},{"authorDate":"2015-09-14 18:31:53","commitOrder":1,"curCode":"  @Test public void testDefaultIfEmpty2() {\n    final List<String> experience = Arrays.asList(\"jimi\", \"mitch\", \"noel\");\n    final Enumerable<String> notEmptyEnumerable =\n        Linq4j.asEnumerable(experience).defaultIfEmpty(\"dummy\");\n    final Enumerator<String> notEmptyEnumerator = notEmptyEnumerable.enumerator();\n    notEmptyEnumerator.moveNext();\n    assertEquals(\"jimi\", notEmptyEnumerator.current());\n    notEmptyEnumerator.moveNext();\n    assertEquals(\"mitch\", notEmptyEnumerator.current());\n    notEmptyEnumerator.moveNext();\n    assertEquals(\"noel\", notEmptyEnumerator.current());\n\n    final Enumerable<String> emptyEnumerable =\n        Linq4j.asEnumerable(Linq4j.<String>emptyEnumerable()).defaultIfEmpty(\"N/A\");\n    final Enumerator<String> emptyEnumerator = emptyEnumerable.enumerator();\n    assertTrue(emptyEnumerator.moveNext());\n    assertEquals(\"N/A\", emptyEnumerator.current());\n    assertFalse(emptyEnumerator.moveNext());\n  }\n","date":"2015-09-18 13:45:02","endLine":1789,"groupId":"7610","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testDefaultIfEmpty2","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/0d/59b63fc06c67e362127760ce45737cea9c6df6.src","preCode":"  @Test public void testDefaultIfEmpty2() {\n    final List<String> experience = Arrays.asList(\"jimi\", \"mitch\", \"noel\");\n    final Enumerable<String> notEmptyEnumerable =\n        Linq4j.asEnumerable(experience).defaultIfEmpty(\"dummy\");\n    final Enumerator<String> notEmptyEnumerator = notEmptyEnumerable.enumerator();\n    notEmptyEnumerator.moveNext();\n    assertEquals(\"jimi\", notEmptyEnumerator.current());\n    notEmptyEnumerator.moveNext();\n    assertEquals(\"mitch\", notEmptyEnumerator.current());\n    notEmptyEnumerator.moveNext();\n    assertEquals(\"noel\", notEmptyEnumerator.current());\n\n    final Enumerable<String> emptyEnumerable =\n        Linq4j.asEnumerable(Linq4j.<String>emptyEnumerable()).defaultIfEmpty(\"N/A\");\n    final Enumerator<String> emptyEnumerator = emptyEnumerable.enumerator();\n    assertTrue(emptyEnumerator.moveNext());\n    assertEquals(\"N/A\", emptyEnumerator.current());\n    assertFalse(emptyEnumerator.moveNext());\n  }\n","realPath":"linq4j/src/test/java/org/apache/calcite/linq4j/test/Linq4jTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":1771,"status":"B"}],"commitId":"02cfd7fdacb2f43ed06f2ebb32cf3205ca26df95","commitMessage":"@@@Linq4j: Implement EnumerableDefaults methods (MiNG)\n\nMethods are:\n* \"defaultIfEmpty\"\n* \"elementAt\" and \"elementAtOrDefault\"\n* \"last\" and \"lastOrDefault\"\n* \"selectMany\"\n* \"sequenceEqual\"\n* \"groupBy\" and \"groupByK\"\n* \"groupJoin\"\n* \"toMap\"\n* \"zip\"\n\nFix up.  removing unnecessary @Override annotations and type\nparameters.  and some problems on JDK 1.7. (Julian Hyde)\n\nClose apache/incubator-calcite#132\n","date":"2015-09-18 13:45:02","modifiedFileCount":"10","status":"B","submitter":"MiNG"},{"authorTime":"2020-04-02 10:39:10","codes":[{"authorDate":"2020-04-02 10:39:10","commitOrder":2,"curCode":"  @Test void testDefaultIfEmpty() {\n    final List<String> experience = Arrays.asList(\"jimi\", \"mitch\", \"noel\");\n    final Enumerable<String> notEmptyEnumerable = Linq4j.asEnumerable(experience).defaultIfEmpty();\n    final Enumerator<String> notEmptyEnumerator = notEmptyEnumerable.enumerator();\n    notEmptyEnumerator.moveNext();\n    assertEquals(\"jimi\", notEmptyEnumerator.current());\n    notEmptyEnumerator.moveNext();\n    assertEquals(\"mitch\", notEmptyEnumerator.current());\n    notEmptyEnumerator.moveNext();\n    assertEquals(\"noel\", notEmptyEnumerator.current());\n\n    final Enumerable<String> emptyEnumerable =\n        Linq4j.asEnumerable(Linq4j.<String>emptyEnumerable()).defaultIfEmpty();\n    final Enumerator<String> emptyEnumerator = emptyEnumerable.enumerator();\n    assertTrue(emptyEnumerator.moveNext());\n    assertNull(emptyEnumerator.current());\n    assertFalse(emptyEnumerator.moveNext());\n  }\n","date":"2020-04-06 04:57:49","endLine":1590,"groupId":"1058","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"testDefaultIfEmpty","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/99/176b0c20dace781059f888f45af815a228f4c7.src","preCode":"  @Test public void testDefaultIfEmpty() {\n    final List<String> experience = Arrays.asList(\"jimi\", \"mitch\", \"noel\");\n    final Enumerable<String> notEmptyEnumerable = Linq4j.asEnumerable(experience).defaultIfEmpty();\n    final Enumerator<String> notEmptyEnumerator = notEmptyEnumerable.enumerator();\n    notEmptyEnumerator.moveNext();\n    assertEquals(\"jimi\", notEmptyEnumerator.current());\n    notEmptyEnumerator.moveNext();\n    assertEquals(\"mitch\", notEmptyEnumerator.current());\n    notEmptyEnumerator.moveNext();\n    assertEquals(\"noel\", notEmptyEnumerator.current());\n\n    final Enumerable<String> emptyEnumerable =\n        Linq4j.asEnumerable(Linq4j.<String>emptyEnumerable()).defaultIfEmpty();\n    final Enumerator<String> emptyEnumerator = emptyEnumerable.enumerator();\n    assertTrue(emptyEnumerator.moveNext());\n    assertNull(emptyEnumerator.current());\n    assertFalse(emptyEnumerator.moveNext());\n  }\n","realPath":"linq4j/src/test/java/org/apache/calcite/linq4j/test/Linq4jTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":1573,"status":"M"},{"authorDate":"2020-04-02 10:39:10","commitOrder":2,"curCode":"  @Test void testDefaultIfEmpty2() {\n    final List<String> experience = Arrays.asList(\"jimi\", \"mitch\", \"noel\");\n    final Enumerable<String> notEmptyEnumerable =\n        Linq4j.asEnumerable(experience).defaultIfEmpty(\"dummy\");\n    final Enumerator<String> notEmptyEnumerator = notEmptyEnumerable.enumerator();\n    notEmptyEnumerator.moveNext();\n    assertEquals(\"jimi\", notEmptyEnumerator.current());\n    notEmptyEnumerator.moveNext();\n    assertEquals(\"mitch\", notEmptyEnumerator.current());\n    notEmptyEnumerator.moveNext();\n    assertEquals(\"noel\", notEmptyEnumerator.current());\n\n    final Enumerable<String> emptyEnumerable =\n        Linq4j.asEnumerable(Linq4j.<String>emptyEnumerable()).defaultIfEmpty(\"N/A\");\n    final Enumerator<String> emptyEnumerator = emptyEnumerable.enumerator();\n    assertTrue(emptyEnumerator.moveNext());\n    assertEquals(\"N/A\", emptyEnumerator.current());\n    assertFalse(emptyEnumerator.moveNext());\n  }\n","date":"2020-04-06 04:57:49","endLine":1610,"groupId":"1058","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"testDefaultIfEmpty2","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/99/176b0c20dace781059f888f45af815a228f4c7.src","preCode":"  @Test public void testDefaultIfEmpty2() {\n    final List<String> experience = Arrays.asList(\"jimi\", \"mitch\", \"noel\");\n    final Enumerable<String> notEmptyEnumerable =\n        Linq4j.asEnumerable(experience).defaultIfEmpty(\"dummy\");\n    final Enumerator<String> notEmptyEnumerator = notEmptyEnumerable.enumerator();\n    notEmptyEnumerator.moveNext();\n    assertEquals(\"jimi\", notEmptyEnumerator.current());\n    notEmptyEnumerator.moveNext();\n    assertEquals(\"mitch\", notEmptyEnumerator.current());\n    notEmptyEnumerator.moveNext();\n    assertEquals(\"noel\", notEmptyEnumerator.current());\n\n    final Enumerable<String> emptyEnumerable =\n        Linq4j.asEnumerable(Linq4j.<String>emptyEnumerable()).defaultIfEmpty(\"N/A\");\n    final Enumerator<String> emptyEnumerator = emptyEnumerable.enumerator();\n    assertTrue(emptyEnumerator.moveNext());\n    assertEquals(\"N/A\", emptyEnumerator.current());\n    assertFalse(emptyEnumerator.moveNext());\n  }\n","realPath":"linq4j/src/test/java/org/apache/calcite/linq4j/test/Linq4jTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":1592,"status":"M"}],"commitId":"9492dd4146f63ddc028010d6c4e86f6a5cb29a8d","commitMessage":"@@@[CALCITE-3892] Make junit test classes and methods non-public where possible\n\nPrior to junit 5.  classes and methods had to be public. This is no\nlonger the case.\n\nSome classes need to remain public because they are referenced from\nelsewhere.  or if they use reflection somehow. The remaining 'public'\nkeyword will be informative to maintainers.\n","date":"2020-04-06 04:57:49","modifiedFileCount":"196","status":"M","submitter":"Julian Hyde"}]
