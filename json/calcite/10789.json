[{"authorTime":"2020-01-07 00:10:59","codes":[{"authorDate":"2020-01-08 01:24:53","commitOrder":2,"curCode":"  @Test public void testCoshFunc() {\n    SqlTester tester = tester(SqlLibrary.ORACLE);\n    tester.checkType(\"cosh(1)\", \"DOUBLE NOT NULL\");\n    tester.checkType(\"cosh(cast(1 as float))\", \"DOUBLE NOT NULL\");\n    tester.checkType(\n        \"cosh(case when false then 1 else null end)\", \"DOUBLE\");\n    strictTester.checkFails(\n        \"^cosh('abc')^\",\n        \"No match found for function signature COSH\\\\(<CHARACTER>\\\\)\",\n        false);\n    tester.checkType(\"cosh('abc')\", \"DOUBLE NOT NULL\");\n    tester.checkScalarApprox(\n        \"cosh(1)\",\n        \"DOUBLE NOT NULL\",\n        1.5430d,\n        0.0001d);\n    tester.checkScalarApprox(\n        \"cosh(cast(1 as decimal(1, 0)))\",\n        \"DOUBLE NOT NULL\",\n        1.5430d,\n        0.0001d);\n    tester.checkNull(\"cosh(cast(null as integer))\");\n    tester.checkNull(\"cosh(cast(null as double))\");\n  }\n","date":"2020-02-02 05:42:13","endLine":5771,"groupId":"15983","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testCoshFunc","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/98/b39750bde0d0e4fc8eae5f2ef2db7cbb8d2aff.src","preCode":"  @Test public void testCoshFunc() {\n    SqlTester tester = tester(SqlLibrary.ORACLE);\n    tester.checkType(\"cosh(1)\", \"DOUBLE NOT NULL\");\n    tester.checkType(\"cosh(cast(1 as float))\", \"DOUBLE NOT NULL\");\n    tester.checkType(\n        \"cosh(case when false then 1 else null end)\", \"DOUBLE\");\n    strictTester.checkFails(\n        \"^cosh('abc')^\",\n        \"No match found for function signature COSH\\\\(<CHARACTER>\\\\)\",\n        false);\n    tester.checkType(\"cosh('abc')\", \"DOUBLE NOT NULL\");\n    tester.checkScalarApprox(\n        \"cosh(1)\",\n        \"DOUBLE NOT NULL\",\n        1.5430d,\n        0.0001d);\n    tester.checkScalarApprox(\n        \"cosh(cast(1 as decimal(1, 0)))\",\n        \"DOUBLE NOT NULL\",\n        1.5430d,\n        0.0001d);\n    tester.checkNull(\"cosh(cast(null as integer))\");\n    tester.checkNull(\"cosh(cast(null as double))\");\n  }\n","realPath":"core/src/test/java/org/apache/calcite/sql/test/SqlOperatorBaseTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":5748,"status":"NB"},{"authorDate":"2020-01-07 00:10:59","commitOrder":2,"curCode":"  @Test public void testSinhFunc() {\n    SqlTester tester = tester(SqlLibrary.ORACLE);\n    tester.checkType(\"sinh(1)\", \"DOUBLE NOT NULL\");\n    tester.checkType(\"sinh(cast(1 as float))\", \"DOUBLE NOT NULL\");\n    tester.checkType(\n        \"sinh(case when false then 1 else null end)\", \"DOUBLE\");\n    strictTester.checkFails(\n        \"^sinh('abc')^\",\n        \"No match found for function signature SINH\\\\(<CHARACTER>\\\\)\",\n        false);\n    tester.checkType(\"sinh('abc')\", \"DOUBLE NOT NULL\");\n    tester.checkScalarApprox(\n        \"sinh(1)\",\n        \"DOUBLE NOT NULL\",\n        1.1752d,\n        0.0001d);\n    tester.checkScalarApprox(\n        \"sinh(cast(1 as decimal(1, 0)))\",\n        \"DOUBLE NOT NULL\",\n        1.1752d,\n        0.0001d);\n    tester.checkNull(\"sinh(cast(null as integer))\");\n    tester.checkNull(\"sinh(cast(null as double))\");\n  }\n","date":"2020-03-16 10:16:21","endLine":6009,"groupId":"15983","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testSinhFunc","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/53/f6478d30f39162442a331ac907da9fa6f9153c.src","preCode":"  @Test public void testSinhFunc() {\n    SqlTester tester = tester(SqlLibrary.ORACLE);\n    tester.checkType(\"sinh(1)\", \"DOUBLE NOT NULL\");\n    tester.checkType(\"sinh(cast(1 as float))\", \"DOUBLE NOT NULL\");\n    tester.checkType(\n        \"sinh(case when false then 1 else null end)\", \"DOUBLE\");\n    strictTester.checkFails(\n        \"^sinh('abc')^\",\n        \"No match found for function signature SINH\\\\(<CHARACTER>\\\\)\",\n        false);\n    tester.checkType(\"sinh('abc')\", \"DOUBLE NOT NULL\");\n    tester.checkScalarApprox(\n        \"sinh(1)\",\n        \"DOUBLE NOT NULL\",\n        1.1752d,\n        0.0001d);\n    tester.checkScalarApprox(\n        \"sinh(cast(1 as decimal(1, 0)))\",\n        \"DOUBLE NOT NULL\",\n        1.1752d,\n        0.0001d);\n    tester.checkNull(\"sinh(cast(null as integer))\");\n    tester.checkNull(\"sinh(cast(null as double))\");\n  }\n","realPath":"core/src/test/java/org/apache/calcite/sql/test/SqlOperatorBaseTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":5986,"status":"B"}],"commitId":"d234626227954eefffe49f42abec65c649ffe3a6","commitMessage":"@@@[CALCITE-3694] Implement SINH function\n","date":"2020-03-16 10:16:21","modifiedFileCount":"6","status":"M","submitter":"XuQianJin-Stars"},{"authorTime":"2020-04-02 10:39:10","codes":[{"authorDate":"2020-04-02 10:39:10","commitOrder":3,"curCode":"  @Test void testCoshFunc() {\n    SqlTester tester = tester(SqlLibrary.ORACLE);\n    tester.checkType(\"cosh(1)\", \"DOUBLE NOT NULL\");\n    tester.checkType(\"cosh(cast(1 as float))\", \"DOUBLE NOT NULL\");\n    tester.checkType(\n        \"cosh(case when false then 1 else null end)\", \"DOUBLE\");\n    strictTester.checkFails(\n        \"^cosh('abc')^\",\n        \"No match found for function signature COSH\\\\(<CHARACTER>\\\\)\",\n        false);\n    tester.checkType(\"cosh('abc')\", \"DOUBLE NOT NULL\");\n    tester.checkScalarApprox(\n        \"cosh(1)\",\n        \"DOUBLE NOT NULL\",\n        1.5430d,\n        0.0001d);\n    tester.checkScalarApprox(\n        \"cosh(cast(1 as decimal(1, 0)))\",\n        \"DOUBLE NOT NULL\",\n        1.5430d,\n        0.0001d);\n    tester.checkNull(\"cosh(cast(null as integer))\");\n    tester.checkNull(\"cosh(cast(null as double))\");\n  }\n","date":"2020-04-06 04:57:49","endLine":5833,"groupId":"10789","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testCoshFunc","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/63/8682f250d7c070d5d126ca9e1e757179e57de4.src","preCode":"  @Test public void testCoshFunc() {\n    SqlTester tester = tester(SqlLibrary.ORACLE);\n    tester.checkType(\"cosh(1)\", \"DOUBLE NOT NULL\");\n    tester.checkType(\"cosh(cast(1 as float))\", \"DOUBLE NOT NULL\");\n    tester.checkType(\n        \"cosh(case when false then 1 else null end)\", \"DOUBLE\");\n    strictTester.checkFails(\n        \"^cosh('abc')^\",\n        \"No match found for function signature COSH\\\\(<CHARACTER>\\\\)\",\n        false);\n    tester.checkType(\"cosh('abc')\", \"DOUBLE NOT NULL\");\n    tester.checkScalarApprox(\n        \"cosh(1)\",\n        \"DOUBLE NOT NULL\",\n        1.5430d,\n        0.0001d);\n    tester.checkScalarApprox(\n        \"cosh(cast(1 as decimal(1, 0)))\",\n        \"DOUBLE NOT NULL\",\n        1.5430d,\n        0.0001d);\n    tester.checkNull(\"cosh(cast(null as integer))\");\n    tester.checkNull(\"cosh(cast(null as double))\");\n  }\n","realPath":"core/src/test/java/org/apache/calcite/sql/test/SqlOperatorBaseTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":5810,"status":"M"},{"authorDate":"2020-04-02 10:39:10","commitOrder":3,"curCode":"  @Test void testSinhFunc() {\n    SqlTester tester = tester(SqlLibrary.ORACLE);\n    tester.checkType(\"sinh(1)\", \"DOUBLE NOT NULL\");\n    tester.checkType(\"sinh(cast(1 as float))\", \"DOUBLE NOT NULL\");\n    tester.checkType(\n        \"sinh(case when false then 1 else null end)\", \"DOUBLE\");\n    strictTester.checkFails(\n        \"^sinh('abc')^\",\n        \"No match found for function signature SINH\\\\(<CHARACTER>\\\\)\",\n        false);\n    tester.checkType(\"sinh('abc')\", \"DOUBLE NOT NULL\");\n    tester.checkScalarApprox(\n        \"sinh(1)\",\n        \"DOUBLE NOT NULL\",\n        1.1752d,\n        0.0001d);\n    tester.checkScalarApprox(\n        \"sinh(cast(1 as decimal(1, 0)))\",\n        \"DOUBLE NOT NULL\",\n        1.1752d,\n        0.0001d);\n    tester.checkNull(\"sinh(cast(null as integer))\");\n    tester.checkNull(\"sinh(cast(null as double))\");\n  }\n","date":"2020-04-06 04:57:49","endLine":6044,"groupId":"10789","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testSinhFunc","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/63/8682f250d7c070d5d126ca9e1e757179e57de4.src","preCode":"  @Test public void testSinhFunc() {\n    SqlTester tester = tester(SqlLibrary.ORACLE);\n    tester.checkType(\"sinh(1)\", \"DOUBLE NOT NULL\");\n    tester.checkType(\"sinh(cast(1 as float))\", \"DOUBLE NOT NULL\");\n    tester.checkType(\n        \"sinh(case when false then 1 else null end)\", \"DOUBLE\");\n    strictTester.checkFails(\n        \"^sinh('abc')^\",\n        \"No match found for function signature SINH\\\\(<CHARACTER>\\\\)\",\n        false);\n    tester.checkType(\"sinh('abc')\", \"DOUBLE NOT NULL\");\n    tester.checkScalarApprox(\n        \"sinh(1)\",\n        \"DOUBLE NOT NULL\",\n        1.1752d,\n        0.0001d);\n    tester.checkScalarApprox(\n        \"sinh(cast(1 as decimal(1, 0)))\",\n        \"DOUBLE NOT NULL\",\n        1.1752d,\n        0.0001d);\n    tester.checkNull(\"sinh(cast(null as integer))\");\n    tester.checkNull(\"sinh(cast(null as double))\");\n  }\n","realPath":"core/src/test/java/org/apache/calcite/sql/test/SqlOperatorBaseTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":6021,"status":"M"}],"commitId":"9492dd4146f63ddc028010d6c4e86f6a5cb29a8d","commitMessage":"@@@[CALCITE-3892] Make junit test classes and methods non-public where possible\n\nPrior to junit 5.  classes and methods had to be public. This is no\nlonger the case.\n\nSome classes need to remain public because they are referenced from\nelsewhere.  or if they use reflection somehow. The remaining 'public'\nkeyword will be informative to maintainers.\n","date":"2020-04-06 04:57:49","modifiedFileCount":"196","status":"M","submitter":"Julian Hyde"}]
