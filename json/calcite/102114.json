[{"authorTime":"2014-11-14 10:11:34","codes":[{"authorDate":"2014-11-14 10:11:34","commitOrder":1,"curCode":"    public JdbcTableModify(RelOptCluster cluster,\n        RelTraitSet traits,\n        RelOptTable table,\n        Prepare.CatalogReader catalogReader,\n        RelNode child,\n        Operation operation,\n        List<String> updateColumnList,\n        boolean flattened) {\n      super(cluster, traits, table, catalogReader, child, operation,\n          updateColumnList, flattened);\n      assert child.getConvention() instanceof JdbcConvention;\n      assert getConvention() instanceof JdbcConvention;\n      final ModifiableTable modifiableTable =\n          table.unwrap(ModifiableTable.class);\n      if (modifiableTable == null) {\n        throw new AssertionError(); \r\n      }\n      this.expression = table.getExpression(Queryable.class);\n      if (expression == null) {\n        throw new AssertionError(); \r\n      }\n    }\n","date":"2014-11-14 10:22:06","endLine":875,"groupId":"12470","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"JdbcTableModify","params":"(RelOptClustercluster@RelTraitSettraits@RelOptTabletable@Prepare.CatalogReadercatalogReader@RelNodechild@Operationoperation@List<String>updateColumnList@booleanflattened)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/f7/93a436f11f4263d34b8874428b28afd62587de.src","preCode":"    public JdbcTableModify(RelOptCluster cluster,\n        RelTraitSet traits,\n        RelOptTable table,\n        Prepare.CatalogReader catalogReader,\n        RelNode child,\n        Operation operation,\n        List<String> updateColumnList,\n        boolean flattened) {\n      super(cluster, traits, table, catalogReader, child, operation,\n          updateColumnList, flattened);\n      assert child.getConvention() instanceof JdbcConvention;\n      assert getConvention() instanceof JdbcConvention;\n      final ModifiableTable modifiableTable =\n          table.unwrap(ModifiableTable.class);\n      if (modifiableTable == null) {\n        throw new AssertionError(); \r\n      }\n      this.expression = table.getExpression(Queryable.class);\n      if (expression == null) {\n        throw new AssertionError(); \r\n      }\n    }\n","realPath":"core/src/main/java/org/apache/calcite/adapter/jdbc/JdbcRules.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":854,"status":"B"},{"authorDate":"2014-11-14 10:11:34","commitOrder":1,"curCode":"  public EnumerableTableModify(RelOptCluster cluster, RelTraitSet traits,\n      RelOptTable table, Prepare.CatalogReader catalogReader, RelNode child,\n      Operation operation, List<String> updateColumnList, boolean flattened) {\n    super(cluster, traits, table, catalogReader, child, operation,\n        updateColumnList, flattened);\n    assert child.getConvention() instanceof EnumerableConvention;\n    assert getConvention() instanceof EnumerableConvention;\n    final ModifiableTable modifiableTable =\n        table.unwrap(ModifiableTable.class);\n    if (modifiableTable == null) {\n      throw new AssertionError(); \r\n    }\n  }\n","date":"2014-11-14 10:22:06","endLine":55,"groupId":"12470","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"EnumerableTableModify","params":"(RelOptClustercluster@RelTraitSettraits@RelOptTabletable@Prepare.CatalogReadercatalogReader@RelNodechild@Operationoperation@List<String>updateColumnList@booleanflattened)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/94/4577c31214f21053e35ea7cb5335c7ec3b4d67.src","preCode":"  public EnumerableTableModify(RelOptCluster cluster, RelTraitSet traits,\n      RelOptTable table, Prepare.CatalogReader catalogReader, RelNode child,\n      Operation operation, List<String> updateColumnList, boolean flattened) {\n    super(cluster, traits, table, catalogReader, child, operation,\n        updateColumnList, flattened);\n    assert child.getConvention() instanceof EnumerableConvention;\n    assert getConvention() instanceof EnumerableConvention;\n    final ModifiableTable modifiableTable =\n        table.unwrap(ModifiableTable.class);\n    if (modifiableTable == null) {\n      throw new AssertionError(); \r\n    }\n  }\n","realPath":"core/src/main/java/org/apache/calcite/adapter/enumerable/EnumerableTableModify.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":43,"status":"B"}],"commitId":"a0ba73cd2de76696b96a1cd828d2aa4d3ef9eb55","commitMessage":"@@@[CALCITE-306] Standardize code style for \"import package.*;\"\n\nRename classes and packages and generally fix things up after [CALCITE-296] and [CALCITE-419].\n\nMake many inner classes of EnumerableRules (e.g. EnumerableFilter.  EnumerableFilterRule) top-level classes.\n\nApply a consistent formatting convention for string literals split over multiple lines.\n\nRename generated file org.eigenbase.resource.Resources to org.apache.calcite.runtime.Resources.\n\nChange occurrences of \"optiq\" and \"eigenbase\" in java code to \"calcite\".\n","date":"2014-11-14 10:22:06","modifiedFileCount":"1156","status":"B","submitter":"Julian Hyde"},{"authorTime":"2014-11-14 10:11:34","codes":[{"authorDate":"2015-02-09 09:41:35","commitOrder":2,"curCode":"    public JdbcTableModify(RelOptCluster cluster,\n        RelTraitSet traitSet,\n        RelOptTable table,\n        Prepare.CatalogReader catalogReader,\n        RelNode input,\n        Operation operation,\n        List<String> updateColumnList,\n        boolean flattened) {\n      super(cluster, traitSet, table, catalogReader, input, operation,\n          updateColumnList, flattened);\n      assert input.getConvention() instanceof JdbcConvention;\n      assert getConvention() instanceof JdbcConvention;\n      final ModifiableTable modifiableTable =\n          table.unwrap(ModifiableTable.class);\n      if (modifiableTable == null) {\n        throw new AssertionError(); \r\n      }\n      this.expression = table.getExpression(Queryable.class);\n      if (expression == null) {\n        throw new AssertionError(); \r\n      }\n    }\n","date":"2015-02-09 09:41:35","endLine":889,"groupId":"12470","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"JdbcTableModify","params":"(RelOptClustercluster@RelTraitSettraitSet@RelOptTabletable@Prepare.CatalogReadercatalogReader@RelNodeinput@Operationoperation@List<String>updateColumnList@booleanflattened)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/7f/a748aacb0a8fd1fe7231b1f24e161481ef3706.src","preCode":"    public JdbcTableModify(RelOptCluster cluster,\n        RelTraitSet traits,\n        RelOptTable table,\n        Prepare.CatalogReader catalogReader,\n        RelNode child,\n        Operation operation,\n        List<String> updateColumnList,\n        boolean flattened) {\n      super(cluster, traits, table, catalogReader, child, operation,\n          updateColumnList, flattened);\n      assert child.getConvention() instanceof JdbcConvention;\n      assert getConvention() instanceof JdbcConvention;\n      final ModifiableTable modifiableTable =\n          table.unwrap(ModifiableTable.class);\n      if (modifiableTable == null) {\n        throw new AssertionError(); \r\n      }\n      this.expression = table.getExpression(Queryable.class);\n      if (expression == null) {\n        throw new AssertionError(); \r\n      }\n    }\n","realPath":"core/src/main/java/org/apache/calcite/adapter/jdbc/JdbcRules.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":868,"status":"M"},{"authorDate":"2014-11-14 10:11:34","commitOrder":2,"curCode":"  public EnumerableTableModify(RelOptCluster cluster, RelTraitSet traits,\n      RelOptTable table, Prepare.CatalogReader catalogReader, RelNode child,\n      Operation operation, List<String> updateColumnList, boolean flattened) {\n    super(cluster, traits, table, catalogReader, child, operation,\n        updateColumnList, flattened);\n    assert child.getConvention() instanceof EnumerableConvention;\n    assert getConvention() instanceof EnumerableConvention;\n    final ModifiableTable modifiableTable =\n        table.unwrap(ModifiableTable.class);\n    if (modifiableTable == null) {\n      throw new AssertionError(); \r\n    }\n  }\n","date":"2014-11-14 10:22:06","endLine":55,"groupId":"12470","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"EnumerableTableModify","params":"(RelOptClustercluster@RelTraitSettraits@RelOptTabletable@Prepare.CatalogReadercatalogReader@RelNodechild@Operationoperation@List<String>updateColumnList@booleanflattened)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/94/4577c31214f21053e35ea7cb5335c7ec3b4d67.src","preCode":"  public EnumerableTableModify(RelOptCluster cluster, RelTraitSet traits,\n      RelOptTable table, Prepare.CatalogReader catalogReader, RelNode child,\n      Operation operation, List<String> updateColumnList, boolean flattened) {\n    super(cluster, traits, table, catalogReader, child, operation,\n        updateColumnList, flattened);\n    assert child.getConvention() instanceof EnumerableConvention;\n    assert getConvention() instanceof EnumerableConvention;\n    final ModifiableTable modifiableTable =\n        table.unwrap(ModifiableTable.class);\n    if (modifiableTable == null) {\n      throw new AssertionError(); \r\n    }\n  }\n","realPath":"core/src/main/java/org/apache/calcite/adapter/enumerable/EnumerableTableModify.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":43,"status":"N"}],"commitId":"9bd3ba36edf776a1b0a3b7798c6927f5dc1d9408","commitMessage":"@@@Restore methods removed in [CALCITE-572]; they are now deprecated and will be removed just before 2.0\n\nRename a few parameters to the preferred names: traits -> traitSet.  child -> input.  exps -> projects.\n","date":"2015-02-09 09:41:35","modifiedFileCount":"7","status":"M","submitter":"Julian Hyde"},{"authorTime":"2016-12-05 00:41:32","codes":[{"authorDate":"2016-12-05 00:41:32","commitOrder":3,"curCode":"    public JdbcTableModify(RelOptCluster cluster,\n        RelTraitSet traitSet,\n        RelOptTable table,\n        Prepare.CatalogReader catalogReader,\n        RelNode input,\n        Operation operation,\n        List<String> updateColumnList,\n        List<RexNode> sourceExpressionList,\n        boolean flattened) {\n      super(cluster, traitSet, table, catalogReader, input, operation,\n          updateColumnList, sourceExpressionList, flattened);\n      assert input.getConvention() instanceof JdbcConvention;\n      assert getConvention() instanceof JdbcConvention;\n      final ModifiableTable modifiableTable =\n          table.unwrap(ModifiableTable.class);\n      if (modifiableTable == null) {\n        throw new AssertionError(); \r\n      }\n      this.expression = table.getExpression(Queryable.class);\n      if (expression == null) {\n        throw new AssertionError(); \r\n      }\n    }\n","date":"2016-12-08 00:34:46","endLine":763,"groupId":"12470","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"JdbcTableModify","params":"(RelOptClustercluster@RelTraitSettraitSet@RelOptTabletable@Prepare.CatalogReadercatalogReader@RelNodeinput@Operationoperation@List<String>updateColumnList@List<RexNode>sourceExpressionList@booleanflattened)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/88/5ff0c2d348c57e350647e9cebb3c1cc3540584.src","preCode":"    public JdbcTableModify(RelOptCluster cluster,\n        RelTraitSet traitSet,\n        RelOptTable table,\n        Prepare.CatalogReader catalogReader,\n        RelNode input,\n        Operation operation,\n        List<String> updateColumnList,\n        boolean flattened) {\n      super(cluster, traitSet, table, catalogReader, input, operation,\n          updateColumnList, flattened);\n      assert input.getConvention() instanceof JdbcConvention;\n      assert getConvention() instanceof JdbcConvention;\n      final ModifiableTable modifiableTable =\n          table.unwrap(ModifiableTable.class);\n      if (modifiableTable == null) {\n        throw new AssertionError(); \r\n      }\n      this.expression = table.getExpression(Queryable.class);\n      if (expression == null) {\n        throw new AssertionError(); \r\n      }\n    }\n","realPath":"core/src/main/java/org/apache/calcite/adapter/jdbc/JdbcRules.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":741,"status":"M"},{"authorDate":"2016-12-05 00:41:32","commitOrder":3,"curCode":"  public EnumerableTableModify(RelOptCluster cluster, RelTraitSet traits,\n      RelOptTable table, Prepare.CatalogReader catalogReader, RelNode child,\n      Operation operation, List<String> updateColumnList,\n      List<RexNode> sourceExpressionList, boolean flattened) {\n    super(cluster, traits, table, catalogReader, child, operation,\n        updateColumnList, sourceExpressionList, flattened);\n    assert child.getConvention() instanceof EnumerableConvention;\n    assert getConvention() instanceof EnumerableConvention;\n    final ModifiableTable modifiableTable =\n        table.unwrap(ModifiableTable.class);\n    if (modifiableTable == null) {\n      throw new AssertionError(); \r\n    }\n  }\n","date":"2016-12-08 00:34:46","endLine":58,"groupId":"12470","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"EnumerableTableModify","params":"(RelOptClustercluster@RelTraitSettraits@RelOptTabletable@Prepare.CatalogReadercatalogReader@RelNodechild@Operationoperation@List<String>updateColumnList@List<RexNode>sourceExpressionList@booleanflattened)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/07/128e40eb8455793be5313ba95bc32d9e1f8492.src","preCode":"  public EnumerableTableModify(RelOptCluster cluster, RelTraitSet traits,\n      RelOptTable table, Prepare.CatalogReader catalogReader, RelNode child,\n      Operation operation, List<String> updateColumnList, boolean flattened) {\n    super(cluster, traits, table, catalogReader, child, operation,\n        updateColumnList, flattened);\n    assert child.getConvention() instanceof EnumerableConvention;\n    assert getConvention() instanceof EnumerableConvention;\n    final ModifiableTable modifiableTable =\n        table.unwrap(ModifiableTable.class);\n    if (modifiableTable == null) {\n      throw new AssertionError(); \r\n    }\n  }\n","realPath":"core/src/main/java/org/apache/calcite/adapter/enumerable/EnumerableTableModify.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":45,"status":"M"}],"commitId":"02752fe78f817ed317b8873d2f4c7b79bfe8b9b5","commitMessage":"@@@[CALCITE-1527] Support DML in the JDBC adapter (Christian Tzolov)\n\nExtend CalcisteAssert to verify DML statements;\nResolve the RowType for SqlNode UPDATE consistently with the INSERT and DELETE;\nAdd field sourceExpressionList field to TableModify;\nImplement DML for JDBC Adapter (i.e. DmlRel-To-Sql);\nMake sure the ResultSetEnumerable keeps the statment/connection open.\n\nUse same code path for INSERT ... VALUES and INSERT ... SELECT;\nfix pretty-printing of INSERT ... VALUES (Julian Hyde).\n","date":"2016-12-08 00:34:46","modifiedFileCount":"28","status":"M","submitter":"Christian Tzolov"},{"authorTime":"2020-05-29 00:04:40","codes":[{"authorDate":"2020-05-29 00:04:40","commitOrder":4,"curCode":"    public JdbcTableModify(RelOptCluster cluster,\n        RelTraitSet traitSet,\n        RelOptTable table,\n        Prepare.CatalogReader catalogReader,\n        RelNode input,\n        Operation operation,\n        @Nullable List<String> updateColumnList,\n        @Nullable List<RexNode> sourceExpressionList,\n        boolean flattened) {\n      super(cluster, traitSet, table, catalogReader, input, operation,\n          updateColumnList, sourceExpressionList, flattened);\n      assert input.getConvention() instanceof JdbcConvention;\n      assert getConvention() instanceof JdbcConvention;\n      final ModifiableTable modifiableTable =\n          table.unwrap(ModifiableTable.class);\n      if (modifiableTable == null) {\n        throw new AssertionError(); \r\n      }\n      Expression expression = table.getExpression(Queryable.class);\n      if (expression == null) {\n        throw new AssertionError(); \r\n      }\n    }\n","date":"2020-11-30 06:45:33","endLine":1052,"groupId":"102114","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"JdbcTableModify","params":"(RelOptClustercluster@RelTraitSettraitSet@RelOptTabletable@Prepare.CatalogReadercatalogReader@RelNodeinput@Operationoperation@@NullableList<String>updateColumnList@@NullableList<RexNode>sourceExpressionList@booleanflattened)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/6a/ed23c58e84f4cbbb3c9821b817c1b4ade0fea9.src","preCode":"    public JdbcTableModify(RelOptCluster cluster,\n        RelTraitSet traitSet,\n        RelOptTable table,\n        Prepare.CatalogReader catalogReader,\n        RelNode input,\n        Operation operation,\n        List<String> updateColumnList,\n        List<RexNode> sourceExpressionList,\n        boolean flattened) {\n      super(cluster, traitSet, table, catalogReader, input, operation,\n          updateColumnList, sourceExpressionList, flattened);\n      assert input.getConvention() instanceof JdbcConvention;\n      assert getConvention() instanceof JdbcConvention;\n      final ModifiableTable modifiableTable =\n          table.unwrap(ModifiableTable.class);\n      if (modifiableTable == null) {\n        throw new AssertionError(); \r\n      }\n      this.expression = table.getExpression(Queryable.class);\n      if (expression == null) {\n        throw new AssertionError(); \r\n      }\n    }\n","realPath":"core/src/main/java/org/apache/calcite/adapter/jdbc/JdbcRules.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":1030,"status":"M"},{"authorDate":"2020-05-29 00:04:40","commitOrder":4,"curCode":"  public EnumerableTableModify(RelOptCluster cluster, RelTraitSet traits,\n      RelOptTable table, Prepare.CatalogReader catalogReader, RelNode child,\n      Operation operation, @Nullable List<String> updateColumnList,\n      @Nullable List<RexNode> sourceExpressionList, boolean flattened) {\n    super(cluster, traits, table, catalogReader, child, operation,\n        updateColumnList, sourceExpressionList, flattened);\n    assert child.getConvention() instanceof EnumerableConvention;\n    assert getConvention() instanceof EnumerableConvention;\n    final ModifiableTable modifiableTable =\n        table.unwrap(ModifiableTable.class);\n    if (modifiableTable == null) {\n      throw new AssertionError(); \r\n    }\n  }\n","date":"2020-11-30 06:45:33","endLine":60,"groupId":"102114","id":8,"instanceNumber":2,"isCurCommit":1,"methodName":"EnumerableTableModify","params":"(RelOptClustercluster@RelTraitSettraits@RelOptTabletable@Prepare.CatalogReadercatalogReader@RelNodechild@Operationoperation@@NullableList<String>updateColumnList@@NullableList<RexNode>sourceExpressionList@booleanflattened)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/d0/084fc7472595c83815a899482a966a0f0b6803.src","preCode":"  public EnumerableTableModify(RelOptCluster cluster, RelTraitSet traits,\n      RelOptTable table, Prepare.CatalogReader catalogReader, RelNode child,\n      Operation operation, List<String> updateColumnList,\n      List<RexNode> sourceExpressionList, boolean flattened) {\n    super(cluster, traits, table, catalogReader, child, operation,\n        updateColumnList, sourceExpressionList, flattened);\n    assert child.getConvention() instanceof EnumerableConvention;\n    assert getConvention() instanceof EnumerableConvention;\n    final ModifiableTable modifiableTable =\n        table.unwrap(ModifiableTable.class);\n    if (modifiableTable == null) {\n      throw new AssertionError(); \r\n    }\n  }\n","realPath":"core/src/main/java/org/apache/calcite/adapter/enumerable/EnumerableTableModify.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":47,"status":"M"}],"commitId":"d9a81b88ad561e7e4cedae93e805e0d7a53a7f1a","commitMessage":"@@@[CALCITE-4199] Add nullability annotations\n\nThe commit includes javadoc updates and refactorings made by Julian Hyde in https://github.com/apache/calcite/pull/2278\n","date":"2020-11-30 06:45:33","modifiedFileCount":"1012","status":"M","submitter":"Vladimir Sitnikov"}]
