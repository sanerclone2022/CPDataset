[{"authorTime":"2021-08-12 14:23:53","codes":[{"authorDate":"2021-08-12 14:23:53","commitOrder":1,"curCode":"  @Test void testSelectWithoutFrom() {\n    final String query = \"select 2 + 2\";\n    final String expectedBigQuery = \"SELECT 2 + 2\";\n    final String expectedHive = expectedBigQuery;\n    final String expectedMysql = \"SELECT 2 + 2\";\n    final String expectedPostgresql = \"SELECT 2 + 2\\n\"\n        + \"FROM (VALUES (0)) AS \\\"t\\\" (\\\"ZERO\\\")\";\n    sql(query)\n        .withBigQuery().ok(expectedBigQuery)\n        .withHive().ok(expectedHive)\n        .withMysql().ok(expectedMysql)\n        .withPostgresql().ok(expectedPostgresql);\n  }\n","date":"2021-08-14 15:52:54","endLine":4893,"groupId":"15981","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testSelectWithoutFrom","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/98/f75c93796391bbde612ea6420ab122a1868587.src","preCode":"  @Test void testSelectWithoutFrom() {\n    final String query = \"select 2 + 2\";\n    final String expectedBigQuery = \"SELECT 2 + 2\";\n    final String expectedHive = expectedBigQuery;\n    final String expectedMysql = \"SELECT 2 + 2\";\n    final String expectedPostgresql = \"SELECT 2 + 2\\n\"\n        + \"FROM (VALUES (0)) AS \\\"t\\\" (\\\"ZERO\\\")\";\n    sql(query)\n        .withBigQuery().ok(expectedBigQuery)\n        .withHive().ok(expectedHive)\n        .withMysql().ok(expectedMysql)\n        .withPostgresql().ok(expectedPostgresql);\n  }\n","realPath":"core/src/test/java/org/apache/calcite/rel/rel2sql/RelToSqlConverterTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":4881,"status":"B"},{"authorDate":"2021-08-12 14:23:53","commitOrder":1,"curCode":"  @Test void testSelectOne() {\n    final String query = \"select 1\";\n    final String expectedBigQuery = \"SELECT 1\";\n    final String expectedHive = expectedBigQuery;\n    final String expectedMysql = expectedBigQuery;\n    final String expectedPostgresql = \"SELECT *\\n\"\n        + \"FROM (VALUES (1)) AS \\\"t\\\" (\\\"EXPR$0\\\")\";\n    sql(query)\n        .withBigQuery().ok(expectedBigQuery)\n        .withHive().ok(expectedHive)\n        .withMysql().ok(expectedMysql)\n        .withPostgresql().ok(expectedPostgresql);\n  }\n","date":"2021-08-14 15:52:54","endLine":4907,"groupId":"15981","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testSelectOne","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/98/f75c93796391bbde612ea6420ab122a1868587.src","preCode":"  @Test void testSelectOne() {\n    final String query = \"select 1\";\n    final String expectedBigQuery = \"SELECT 1\";\n    final String expectedHive = expectedBigQuery;\n    final String expectedMysql = expectedBigQuery;\n    final String expectedPostgresql = \"SELECT *\\n\"\n        + \"FROM (VALUES (1)) AS \\\"t\\\" (\\\"EXPR$0\\\")\";\n    sql(query)\n        .withBigQuery().ok(expectedBigQuery)\n        .withHive().ok(expectedHive)\n        .withMysql().ok(expectedMysql)\n        .withPostgresql().ok(expectedPostgresql);\n  }\n","realPath":"core/src/test/java/org/apache/calcite/rel/rel2sql/RelToSqlConverterTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":4895,"status":"B"}],"commitId":"dff28d1ce49871a451c7ff3e740259441da7c72a","commitMessage":"@@@Cosmetic\n\nIn RelToSqlConverterTest. \nmerge methods that test the same query in several dialects;\nmerge '.withXxx().ok(expectedXxx)' into one line. \nand sort such lines alphabetically;\nnormalize 'expectedPostgreSQL' and 'expectedPostgreSql' to\n'expectedPostgresql'.  and so forth.\n","date":"2021-08-14 15:52:54","modifiedFileCount":"2","status":"B","submitter":"Julian Hyde"},{"authorTime":"2021-08-11 13:50:25","codes":[{"authorDate":"2021-08-11 13:50:25","commitOrder":2,"curCode":"  @Test void testSelectWithoutFrom() {\n    final String query = \"select 2 + 2\";\n    final String expectedBigQuery = \"SELECT 2 + 2\";\n    final String expectedClickHouse = expectedBigQuery;\n    final String expectedHive = expectedBigQuery;\n    final String expectedMysql = expectedBigQuery;\n    final String expectedPostgresql = \"SELECT 2 + 2\\n\"\n        + \"FROM (VALUES (0)) AS \\\"t\\\" (\\\"ZERO\\\")\";\n    sql(query)\n        .withBigQuery().ok(expectedBigQuery)\n        .withClickHouse().ok(expectedClickHouse)\n        .withHive().ok(expectedHive)\n        .withMysql().ok(expectedMysql)\n        .withPostgresql().ok(expectedPostgresql);\n  }\n","date":"2021-08-15 03:41:34","endLine":4907,"groupId":"101592","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testSelectWithoutFrom","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/35/39c315a31579b755138750f1ae5a85de4c3d03.src","preCode":"  @Test void testSelectWithoutFrom() {\n    final String query = \"select 2 + 2\";\n    final String expectedBigQuery = \"SELECT 2 + 2\";\n    final String expectedHive = expectedBigQuery;\n    final String expectedMysql = \"SELECT 2 + 2\";\n    final String expectedPostgresql = \"SELECT 2 + 2\\n\"\n        + \"FROM (VALUES (0)) AS \\\"t\\\" (\\\"ZERO\\\")\";\n    sql(query)\n        .withBigQuery().ok(expectedBigQuery)\n        .withHive().ok(expectedHive)\n        .withMysql().ok(expectedMysql)\n        .withPostgresql().ok(expectedPostgresql);\n  }\n","realPath":"core/src/test/java/org/apache/calcite/rel/rel2sql/RelToSqlConverterTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":4893,"status":"M"},{"authorDate":"2021-08-11 13:50:25","commitOrder":2,"curCode":"  @Test void testSelectOne() {\n    final String query = \"select 1\";\n    final String expectedBigQuery = \"SELECT 1\";\n    final String expectedClickHouse = expectedBigQuery;\n    final String expectedHive = expectedBigQuery;\n    final String expectedMysql = expectedBigQuery;\n    final String expectedPostgresql = \"SELECT *\\n\"\n        + \"FROM (VALUES (1)) AS \\\"t\\\" (\\\"EXPR$0\\\")\";\n    sql(query)\n        .withBigQuery().ok(expectedBigQuery)\n        .withClickHouse().ok(expectedClickHouse)\n        .withHive().ok(expectedHive)\n        .withMysql().ok(expectedMysql)\n        .withPostgresql().ok(expectedPostgresql);\n  }\n","date":"2021-08-15 03:41:34","endLine":4923,"groupId":"101592","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testSelectOne","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/35/39c315a31579b755138750f1ae5a85de4c3d03.src","preCode":"  @Test void testSelectOne() {\n    final String query = \"select 1\";\n    final String expectedBigQuery = \"SELECT 1\";\n    final String expectedHive = expectedBigQuery;\n    final String expectedMysql = expectedBigQuery;\n    final String expectedPostgresql = \"SELECT *\\n\"\n        + \"FROM (VALUES (1)) AS \\\"t\\\" (\\\"EXPR$0\\\")\";\n    sql(query)\n        .withBigQuery().ok(expectedBigQuery)\n        .withHive().ok(expectedHive)\n        .withMysql().ok(expectedMysql)\n        .withPostgresql().ok(expectedPostgresql);\n  }\n","realPath":"core/src/test/java/org/apache/calcite/rel/rel2sql/RelToSqlConverterTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":4909,"status":"M"}],"commitId":"d64fd60477b7c9a15473d89b350fc80c2151ee6e","commitMessage":"@@@[CALCITE-4724] In JDBC adapter for ClickHouse.  implement Values by generating SELECT without FROM (Liu Enze)\n\nFix by making SqlDialect.supportsAliasedValues return false\nin the ClickHouse dialect.  similar to MySQL.\n\nClose apache/calcite#2480\n","date":"2021-08-15 03:41:34","modifiedFileCount":"2","status":"M","submitter":"Liu Enze"}]
