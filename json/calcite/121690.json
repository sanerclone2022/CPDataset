[{"authorTime":"2017-04-19 04:40:16","codes":[{"authorDate":"2019-03-11 14:10:49","commitOrder":3,"curCode":"  public static int lastDay(long timestamp) {\n    int date = (int) (timestamp / DateTimeUtils.MILLIS_PER_DAY);\n    int y0 = (int) DateTimeUtils.unixDateExtract(TimeUnitRange.YEAR, date);\n    int m0 = (int) DateTimeUtils.unixDateExtract(TimeUnitRange.MONTH, date);\n    int last = lastDay(y0, m0);\n    return DateTimeUtils.ymdToUnixDate(y0, m0, last);\n  }\n","date":"2019-03-26 04:08:37","endLine":1958,"groupId":"16792","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"lastDay","params":"(longtimestamp)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/50/079cb599131b4bceace54fa4b1d5454a9d4af6.src","preCode":"  public static int lastDay(long timestamp) {\n    int date = (int) (timestamp / DateTimeUtils.MILLIS_PER_DAY);\n    int y0 = (int) DateTimeUtils.unixDateExtract(TimeUnitRange.YEAR, date);\n    int m0 = (int) DateTimeUtils.unixDateExtract(TimeUnitRange.MONTH, date);\n    int last = lastDay(y0, m0);\n    return DateTimeUtils.ymdToUnixDate(y0, m0, last);\n  }\n","realPath":"core/src/main/java/org/apache/calcite/runtime/SqlFunctions.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":1952,"status":"B"},{"authorDate":"2017-04-19 04:40:16","commitOrder":3,"curCode":"  public static int addMonths(int date, int m) {\n    int y0 = (int) DateTimeUtils.unixDateExtract(TimeUnitRange.YEAR, date);\n    int m0 = (int) DateTimeUtils.unixDateExtract(TimeUnitRange.MONTH, date);\n    int d0 = (int) DateTimeUtils.unixDateExtract(TimeUnitRange.DAY, date);\n    int y = m / 12;\n    y0 += y;\n    m0 += m - y * 12;\n    int last = lastDay(y0, m0);\n    if (d0 > last) {\n      d0 = last;\n    }\n    return DateTimeUtils.ymdToUnixDate(y0, m0, d0);\n  }\n","date":"2017-04-20 01:39:17","endLine":2095,"groupId":"13505","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"addMonths","params":"(intdate@intm)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/fe/c73c66a236058d837e3199cb520a071eb27f93.src","preCode":"  public static int addMonths(int date, int m) {\n    int y0 = (int) DateTimeUtils.unixDateExtract(TimeUnitRange.YEAR, date);\n    int m0 = (int) DateTimeUtils.unixDateExtract(TimeUnitRange.MONTH, date);\n    int d0 = (int) DateTimeUtils.unixDateExtract(TimeUnitRange.DAY, date);\n    int y = m / 12;\n    y0 += y;\n    m0 += m - y * 12;\n    int last = lastDay(y0, m0);\n    if (d0 > last) {\n      d0 = last;\n    }\n    return DateTimeUtils.ymdToUnixDate(y0, m0, d0);\n  }\n","realPath":"core/src/main/java/org/apache/calcite/runtime/SqlFunctions.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":2083,"status":"NB"}],"commitId":"25ffeb4ac9c996855f8a946f6180dc01844f80dc","commitMessage":"@@@[CALCITE-2908] Implement SQL LAST_DAY function (Chunwei Lei)\n","date":"2019-03-26 04:08:37","modifiedFileCount":"6","status":"M","submitter":"Chunwei Lei"},{"authorTime":"2020-03-30 16:26:38","codes":[{"authorDate":"2019-03-11 14:10:49","commitOrder":4,"curCode":"  public static int lastDay(long timestamp) {\n    int date = (int) (timestamp / DateTimeUtils.MILLIS_PER_DAY);\n    int y0 = (int) DateTimeUtils.unixDateExtract(TimeUnitRange.YEAR, date);\n    int m0 = (int) DateTimeUtils.unixDateExtract(TimeUnitRange.MONTH, date);\n    int last = lastDay(y0, m0);\n    return DateTimeUtils.ymdToUnixDate(y0, m0, last);\n  }\n","date":"2019-03-26 04:08:37","endLine":1958,"groupId":"121690","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"lastDay","params":"(longtimestamp)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/50/079cb599131b4bceace54fa4b1d5454a9d4af6.src","preCode":"  public static int lastDay(long timestamp) {\n    int date = (int) (timestamp / DateTimeUtils.MILLIS_PER_DAY);\n    int y0 = (int) DateTimeUtils.unixDateExtract(TimeUnitRange.YEAR, date);\n    int m0 = (int) DateTimeUtils.unixDateExtract(TimeUnitRange.MONTH, date);\n    int last = lastDay(y0, m0);\n    return DateTimeUtils.ymdToUnixDate(y0, m0, last);\n  }\n","realPath":"core/src/main/java/org/apache/calcite/runtime/SqlFunctions.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":1952,"status":"N"},{"authorDate":"2020-03-30 16:26:38","commitOrder":4,"curCode":"  public static int addMonths(int date, int m) {\n    int y0 = (int) DateTimeUtils.unixDateExtract(TimeUnitRange.YEAR, date);\n    int m0 = (int) DateTimeUtils.unixDateExtract(TimeUnitRange.MONTH, date);\n    int d0 = (int) DateTimeUtils.unixDateExtract(TimeUnitRange.DAY, date);\n    m0 += m;\n    int deltaYear = (int) DateTimeUtils.floorDiv(m0, 12);\n    y0 += deltaYear;\n    m0 = (int) DateTimeUtils.floorMod(m0, 12);\n    if (m0 == 0) {\n      y0 -= 1;\n      m0 += 12;\n    }\n\n    int last = lastDay(y0, m0);\n    if (d0 > last) {\n      d0 = last;\n    }\n    return DateTimeUtils.ymdToUnixDate(y0, m0, d0);\n  }\n","date":"2020-04-15 17:39:37","endLine":2719,"groupId":"121690","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"addMonths","params":"(intdate@intm)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/4b/89963e85d8fdc26c025897db620aa5349b79b9.src","preCode":"  public static int addMonths(int date, int m) {\n    int y0 = (int) DateTimeUtils.unixDateExtract(TimeUnitRange.YEAR, date);\n    int m0 = (int) DateTimeUtils.unixDateExtract(TimeUnitRange.MONTH, date);\n    int d0 = (int) DateTimeUtils.unixDateExtract(TimeUnitRange.DAY, date);\n    int y = m / 12;\n    y0 += y;\n    m0 += m - y * 12;\n    int last = lastDay(y0, m0);\n    if (d0 > last) {\n      d0 = last;\n    }\n    return DateTimeUtils.ymdToUnixDate(y0, m0, d0);\n  }\n","realPath":"core/src/main/java/org/apache/calcite/runtime/SqlFunctions.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":2701,"status":"M"}],"commitId":"43261e4094a37ce23eb181a6a8f653dabc4db599","commitMessage":"@@@[CALCITE-3881] SqlFunctions#addMonths yields incorrect results in some corner case (Zhenghua Gao)\n\nSqlFunctions#addMonths use DateTimeUtils#ymdToUnixDate to calculate the\nJDN(julian day number). But in some corner cases it yields incorrent\nresults. The root cause is: the algorithm of DateTimeUtils#ymdToUnixDate\nrequires reasonable month(1 to 12)[1].  but SqlFunctions#addMonths may\npass in a month out of the reasonable range. This PR will fix it.\n\nclose apache/calcite#1890\n","date":"2020-04-15 17:39:37","modifiedFileCount":"3","status":"M","submitter":"Zhenghua Gao"}]
