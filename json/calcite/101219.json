[{"authorTime":"2017-07-25 05:05:45","codes":[{"authorDate":"2017-07-25 05:05:45","commitOrder":1,"curCode":"  @Test public void testSelectAggregateOnRolledUpColumn() {\n    final String maxError = \"Rolled up column 'SLACKINGMIN' is not allowed in MAX\";\n    final String plusError = \"Rolled up column 'SLACKINGMIN' is not allowed in PLUS\";\n\n    sql(\"select max(^slackingmin^) from emp_r\")\n            .fails(maxError);\n\n    sql(\"select count(slackingmin) from emp_r\").ok();\n\n    sql(\"select count(empno, deptno, slackingmin) from emp_r\").ok();\n\n    sql(\"select sum(slackingmin) from emp_r\").ok();\n\n    sql(\"select empno, min(slackingmin) from emp_r group by empno\").ok();\n\n    sql(\"select count(distinct slackingmin) from emp_r\").ok();\n\n    sql(\"select sum(empno + ^slackingmin^) from emp_r\")\n            .fails(plusError);\n\n    sql(\"select max(^slackingmin^) over t as a \"\n            + \"from emp_r window t as (partition by empno order by empno)\")\n            .fails(maxError);\n  }\n","date":"2017-08-17 05:36:32","endLine":10318,"groupId":"9729","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testSelectAggregateOnRolledUpColumn","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/15/d44319694a944308c94d05b7faa7e842d45dd8.src","preCode":"  @Test public void testSelectAggregateOnRolledUpColumn() {\n    final String maxError = \"Rolled up column 'SLACKINGMIN' is not allowed in MAX\";\n    final String plusError = \"Rolled up column 'SLACKINGMIN' is not allowed in PLUS\";\n\n    sql(\"select max(^slackingmin^) from emp_r\")\n            .fails(maxError);\n\n    sql(\"select count(slackingmin) from emp_r\").ok();\n\n    sql(\"select count(empno, deptno, slackingmin) from emp_r\").ok();\n\n    sql(\"select sum(slackingmin) from emp_r\").ok();\n\n    sql(\"select empno, min(slackingmin) from emp_r group by empno\").ok();\n\n    sql(\"select count(distinct slackingmin) from emp_r\").ok();\n\n    sql(\"select sum(empno + ^slackingmin^) from emp_r\")\n            .fails(plusError);\n\n    sql(\"select max(^slackingmin^) over t as a \"\n            + \"from emp_r window t as (partition by empno order by empno)\")\n            .fails(maxError);\n  }\n","realPath":"core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":10295,"status":"B"},{"authorDate":"2017-07-25 05:05:45","commitOrder":1,"curCode":"  @Test public void testRollUpInWindow() {\n    final String partitionError = \"Rolled up column 'SLACKINGMIN' is not allowed in PARTITION BY\";\n    final String orderByError = \"Rolled up column 'SLACKINGMIN' is not allowed in ORDER BY\";\n\n    sql(\"select empno, sum(slackingmin) over (partition by ^slackingmin^) from emp_r\")\n            .fails(partitionError);\n\n    sql(\"select empno, sum(slackingmin) over (partition by empno, ^slackingmin^) from emp_r\")\n            .fails(partitionError);\n\n    sql(\"select empno, sum(slackingmin) over (partition by empno order by ^slackingmin^) \"\n            + \"from emp_r\")\n            .fails(orderByError);\n\n    sql(\"select empno, sum(slackingmin) over slackingmin \"\n            + \"from emp_r window slackingmin as (partition by ^slackingmin^)\")\n            .fails(partitionError);\n\n    sql(\"select sum(slackingmin) over t \"\n            + \"from emp_r window t as (partition by empno order by ^slackingmin^, empno)\")\n            .fails(orderByError);\n\n    sql(\"select sum(slackingmin) over t as a \"\n            + \"from emp_r window t as (partition by empno order by ^slackingmin^, empno)\")\n            .fails(orderByError);\n  }\n","date":"2017-08-17 05:36:32","endLine":10364,"groupId":"2377","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testRollUpInWindow","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/15/d44319694a944308c94d05b7faa7e842d45dd8.src","preCode":"  @Test public void testRollUpInWindow() {\n    final String partitionError = \"Rolled up column 'SLACKINGMIN' is not allowed in PARTITION BY\";\n    final String orderByError = \"Rolled up column 'SLACKINGMIN' is not allowed in ORDER BY\";\n\n    sql(\"select empno, sum(slackingmin) over (partition by ^slackingmin^) from emp_r\")\n            .fails(partitionError);\n\n    sql(\"select empno, sum(slackingmin) over (partition by empno, ^slackingmin^) from emp_r\")\n            .fails(partitionError);\n\n    sql(\"select empno, sum(slackingmin) over (partition by empno order by ^slackingmin^) \"\n            + \"from emp_r\")\n            .fails(orderByError);\n\n    sql(\"select empno, sum(slackingmin) over slackingmin \"\n            + \"from emp_r window slackingmin as (partition by ^slackingmin^)\")\n            .fails(partitionError);\n\n    sql(\"select sum(slackingmin) over t \"\n            + \"from emp_r window t as (partition by empno order by ^slackingmin^, empno)\")\n            .fails(orderByError);\n\n    sql(\"select sum(slackingmin) over t as a \"\n            + \"from emp_r window t as (partition by empno order by ^slackingmin^, empno)\")\n            .fails(orderByError);\n  }\n","realPath":"core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":10339,"status":"B"}],"commitId":"025eaf118f820ce4659d3891b838aa01016e7012","commitMessage":"@@@[CALCITE-1787] Add ThetaSketch and HyperUnique support to Calcite via rolled up columns (Zain Humayun)\n\nClose apache/calcite#503\n","date":"2017-08-17 05:36:32","modifiedFileCount":"33","status":"B","submitter":"Zain Humayun"},{"authorTime":"2020-04-02 10:39:10","codes":[{"authorDate":"2020-04-02 10:39:10","commitOrder":2,"curCode":"  @Test void testSelectAggregateOnRolledUpColumn() {\n    final String maxError = \"Rolled up column 'SLACKINGMIN' is not allowed in MAX\";\n    final String plusError = \"Rolled up column 'SLACKINGMIN' is not allowed in PLUS\";\n\n    sql(\"select max(^slackingmin^) from emp_r\")\n        .fails(maxError);\n\n    sql(\"select count(slackingmin) from emp_r\").ok();\n\n    sql(\"select count(empno, deptno, slackingmin) from emp_r\").ok();\n\n    sql(\"select sum(slackingmin) from emp_r\").ok();\n\n    sql(\"select empno, min(slackingmin) from emp_r group by empno\").ok();\n\n    sql(\"select count(distinct slackingmin) from emp_r\").ok();\n\n    sql(\"select sum(empno + ^slackingmin^) from emp_r\")\n        .fails(plusError);\n\n    sql(\"select max(^slackingmin^) over t as a \"\n        + \"from emp_r window t as (partition by empno order by empno)\")\n        .fails(maxError);\n  }\n","date":"2020-04-06 04:57:49","endLine":10921,"groupId":"101219","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testSelectAggregateOnRolledUpColumn","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/b6/f9115009e28a63267b183e3a0a9a5e7f343a61.src","preCode":"  @Test public void testSelectAggregateOnRolledUpColumn() {\n    final String maxError = \"Rolled up column 'SLACKINGMIN' is not allowed in MAX\";\n    final String plusError = \"Rolled up column 'SLACKINGMIN' is not allowed in PLUS\";\n\n    sql(\"select max(^slackingmin^) from emp_r\")\n        .fails(maxError);\n\n    sql(\"select count(slackingmin) from emp_r\").ok();\n\n    sql(\"select count(empno, deptno, slackingmin) from emp_r\").ok();\n\n    sql(\"select sum(slackingmin) from emp_r\").ok();\n\n    sql(\"select empno, min(slackingmin) from emp_r group by empno\").ok();\n\n    sql(\"select count(distinct slackingmin) from emp_r\").ok();\n\n    sql(\"select sum(empno + ^slackingmin^) from emp_r\")\n        .fails(plusError);\n\n    sql(\"select max(^slackingmin^) over t as a \"\n        + \"from emp_r window t as (partition by empno order by empno)\")\n        .fails(maxError);\n  }\n","realPath":"core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":10898,"status":"M"},{"authorDate":"2020-04-02 10:39:10","commitOrder":2,"curCode":"  @Test void testRollUpInWindow() {\n    final String partitionError = \"Rolled up column 'SLACKINGMIN' is not allowed in PARTITION BY\";\n    final String orderByError = \"Rolled up column 'SLACKINGMIN' is not allowed in ORDER BY\";\n\n    sql(\"select empno, sum(slackingmin) over (partition by ^slackingmin^) from emp_r\")\n        .fails(partitionError);\n\n    sql(\"select empno, sum(slackingmin) over (partition by empno, ^slackingmin^) from emp_r\")\n        .fails(partitionError);\n\n    sql(\"select empno, sum(slackingmin) over (partition by empno order by ^slackingmin^) \"\n        + \"from emp_r\")\n        .fails(orderByError);\n\n    sql(\"select empno, sum(slackingmin) over slackingmin \"\n        + \"from emp_r window slackingmin as (partition by ^slackingmin^)\")\n        .fails(partitionError);\n\n    sql(\"select sum(slackingmin) over t \"\n        + \"from emp_r window t as (partition by empno order by ^slackingmin^, empno)\")\n        .fails(orderByError);\n\n    sql(\"select sum(slackingmin) over t as a \"\n        + \"from emp_r window t as (partition by empno order by ^slackingmin^, empno)\")\n        .fails(orderByError);\n  }\n","date":"2020-04-06 04:57:49","endLine":10967,"groupId":"101219","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testRollUpInWindow","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/b6/f9115009e28a63267b183e3a0a9a5e7f343a61.src","preCode":"  @Test public void testRollUpInWindow() {\n    final String partitionError = \"Rolled up column 'SLACKINGMIN' is not allowed in PARTITION BY\";\n    final String orderByError = \"Rolled up column 'SLACKINGMIN' is not allowed in ORDER BY\";\n\n    sql(\"select empno, sum(slackingmin) over (partition by ^slackingmin^) from emp_r\")\n        .fails(partitionError);\n\n    sql(\"select empno, sum(slackingmin) over (partition by empno, ^slackingmin^) from emp_r\")\n        .fails(partitionError);\n\n    sql(\"select empno, sum(slackingmin) over (partition by empno order by ^slackingmin^) \"\n        + \"from emp_r\")\n        .fails(orderByError);\n\n    sql(\"select empno, sum(slackingmin) over slackingmin \"\n        + \"from emp_r window slackingmin as (partition by ^slackingmin^)\")\n        .fails(partitionError);\n\n    sql(\"select sum(slackingmin) over t \"\n        + \"from emp_r window t as (partition by empno order by ^slackingmin^, empno)\")\n        .fails(orderByError);\n\n    sql(\"select sum(slackingmin) over t as a \"\n        + \"from emp_r window t as (partition by empno order by ^slackingmin^, empno)\")\n        .fails(orderByError);\n  }\n","realPath":"core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":10942,"status":"M"}],"commitId":"9492dd4146f63ddc028010d6c4e86f6a5cb29a8d","commitMessage":"@@@[CALCITE-3892] Make junit test classes and methods non-public where possible\n\nPrior to junit 5.  classes and methods had to be public. This is no\nlonger the case.\n\nSome classes need to remain public because they are referenced from\nelsewhere.  or if they use reflection somehow. The remaining 'public'\nkeyword will be informative to maintainers.\n","date":"2020-04-06 04:57:49","modifiedFileCount":"196","status":"M","submitter":"Julian Hyde"}]
