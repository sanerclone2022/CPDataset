[{"authorTime":"2019-12-26 14:53:49","codes":[{"authorDate":"2019-09-03 12:07:18","commitOrder":2,"curCode":"    public UnifyResult apply(UnifyRuleCall call) {\n      final MutableUnion query = (MutableUnion) call.query;\n      final MutableUnion target = (MutableUnion) call.target;\n      final List<MutableRel> queryInputs = new ArrayList<>(query.getInputs());\n      final List<MutableRel> targetInputs = new ArrayList<>(target.getInputs());\n      if (query.isAll() == target.isAll()\n          && sameRelCollectionNoOrderConsidered(queryInputs, targetInputs)) {\n        return call.result(target);\n      }\n      return null;\n    }\n","date":"2019-10-28 13:09:26","endLine":1565,"groupId":"9992","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"apply","params":"(UnifyRuleCallcall)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/0c/4e22f8417cd0d0b4bcef07e9e92a2493708b2b.src","preCode":"    public UnifyResult apply(UnifyRuleCall call) {\n      final MutableUnion query = (MutableUnion) call.query;\n      final MutableUnion target = (MutableUnion) call.target;\n      final List<MutableRel> queryInputs = new ArrayList<>(query.getInputs());\n      final List<MutableRel> targetInputs = new ArrayList<>(target.getInputs());\n      if (query.isAll() == target.isAll()\n          && sameRelCollectionNoOrderConsidered(queryInputs, targetInputs)) {\n        return call.result(target);\n      }\n      return null;\n    }\n","realPath":"core/src/main/java/org/apache/calcite/plan/SubstitutionVisitor.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":1555,"status":"NB"},{"authorDate":"2019-12-26 14:53:49","commitOrder":2,"curCode":"    public UnifyResult apply(UnifyRuleCall call) {\n      final MutableIntersect query = (MutableIntersect) call.query;\n      final MutableIntersect target = (MutableIntersect) call.target;\n      final List<MutableRel> queryInputs = new ArrayList<>(query.getInputs());\n      final List<MutableRel> targetInputs = new ArrayList<>(target.getInputs());\n      if (query.isAll() == target.isAll()\n          && sameRelCollectionNoOrderConsidered(queryInputs, targetInputs)) {\n        return call.result(target);\n      }\n      return null;\n    }\n","date":"2019-12-29 21:30:29","endLine":1658,"groupId":"9992","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"apply","params":"(UnifyRuleCallcall)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/53/98fcca4592fc498c493ca908c59930123abb0e.src","preCode":"    public UnifyResult apply(UnifyRuleCall call) {\n      final MutableIntersect query = (MutableIntersect) call.query;\n      final MutableIntersect target = (MutableIntersect) call.target;\n      final List<MutableRel> queryInputs = new ArrayList<>(query.getInputs());\n      final List<MutableRel> targetInputs = new ArrayList<>(target.getInputs());\n      if (query.isAll() == target.isAll()\n          && sameRelCollectionNoOrderConsidered(queryInputs, targetInputs)) {\n        return call.result(target);\n      }\n      return null;\n    }\n","realPath":"core/src/main/java/org/apache/calcite/plan/SubstitutionVisitor.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":1648,"status":"B"}],"commitId":"5ddded14bf510edec83c007a3bad89cda9ff2935","commitMessage":"@@@[CALCITE-3632] Add IntersectToIntersectUnify Rule in SubstitutionVisitor (xy2953396112)\n\nClose apache/calcite#1692\n","date":"2019-12-29 21:30:29","modifiedFileCount":"2","status":"M","submitter":"dz"},{"authorTime":"2020-09-29 22:09:05","codes":[{"authorDate":"2020-09-29 22:09:05","commitOrder":3,"curCode":"    @Override public UnifyResult apply(UnifyRuleCall call) {\n      final MutableUnion query = (MutableUnion) call.query;\n      final MutableUnion target = (MutableUnion) call.target;\n      final List<MutableRel> queryInputs = new ArrayList<>(query.getInputs());\n      final List<MutableRel> targetInputs = new ArrayList<>(target.getInputs());\n      if (query.isAll() == target.isAll()\n          && sameRelCollectionNoOrderConsidered(queryInputs, targetInputs)) {\n        return call.result(target);\n      }\n      return null;\n    }\n","date":"2020-10-07 05:42:47","endLine":1598,"groupId":"9992","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"apply","params":"(UnifyRuleCallcall)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/68/321d682a1f2748b830d161235cf1ee0e5010ae.src","preCode":"    public UnifyResult apply(UnifyRuleCall call) {\n      final MutableUnion query = (MutableUnion) call.query;\n      final MutableUnion target = (MutableUnion) call.target;\n      final List<MutableRel> queryInputs = new ArrayList<>(query.getInputs());\n      final List<MutableRel> targetInputs = new ArrayList<>(target.getInputs());\n      if (query.isAll() == target.isAll()\n          && sameRelCollectionNoOrderConsidered(queryInputs, targetInputs)) {\n        return call.result(target);\n      }\n      return null;\n    }\n","realPath":"core/src/main/java/org/apache/calcite/plan/SubstitutionVisitor.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":1588,"status":"M"},{"authorDate":"2020-09-29 22:09:05","commitOrder":3,"curCode":"    @Override public UnifyResult apply(UnifyRuleCall call) {\n      final MutableIntersect query = (MutableIntersect) call.query;\n      final MutableIntersect target = (MutableIntersect) call.target;\n      final List<MutableRel> queryInputs = new ArrayList<>(query.getInputs());\n      final List<MutableRel> targetInputs = new ArrayList<>(target.getInputs());\n      if (query.isAll() == target.isAll()\n          && sameRelCollectionNoOrderConsidered(queryInputs, targetInputs)) {\n        return call.result(target);\n      }\n      return null;\n    }\n","date":"2020-10-07 05:42:47","endLine":1643,"groupId":"9992","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"apply","params":"(UnifyRuleCallcall)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/68/321d682a1f2748b830d161235cf1ee0e5010ae.src","preCode":"    public UnifyResult apply(UnifyRuleCall call) {\n      final MutableIntersect query = (MutableIntersect) call.query;\n      final MutableIntersect target = (MutableIntersect) call.target;\n      final List<MutableRel> queryInputs = new ArrayList<>(query.getInputs());\n      final List<MutableRel> targetInputs = new ArrayList<>(target.getInputs());\n      if (query.isAll() == target.isAll()\n          && sameRelCollectionNoOrderConsidered(queryInputs, targetInputs)) {\n        return call.result(target);\n      }\n      return null;\n    }\n","realPath":"core/src/main/java/org/apache/calcite/plan/SubstitutionVisitor.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":1633,"status":"M"}],"commitId":"66caa54c5e272f8287ca132ca012733898a38768","commitMessage":"@@@[CALCITE-4314] Add missing @Override annotations\n","date":"2020-10-07 05:42:47","modifiedFileCount":"745","status":"M","submitter":"Vladimir Sitnikov"},{"authorTime":"2020-05-29 00:04:40","codes":[{"authorDate":"2020-05-29 00:04:40","commitOrder":4,"curCode":"    @Override public @Nullable UnifyResult apply(UnifyRuleCall call) {\n      final MutableUnion query = (MutableUnion) call.query;\n      final MutableUnion target = (MutableUnion) call.target;\n      final List<MutableRel> queryInputs = new ArrayList<>(query.getInputs());\n      final List<MutableRel> targetInputs = new ArrayList<>(target.getInputs());\n      if (query.isAll() == target.isAll()\n          && sameRelCollectionNoOrderConsidered(queryInputs, targetInputs)) {\n        return call.result(target);\n      }\n      return null;\n    }\n","date":"2020-11-30 06:45:33","endLine":1612,"groupId":"111881","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"apply","params":"(UnifyRuleCallcall)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/cf/987d23d57d4619eae578c60232ea52836bdf5c.src","preCode":"    @Override public UnifyResult apply(UnifyRuleCall call) {\n      final MutableUnion query = (MutableUnion) call.query;\n      final MutableUnion target = (MutableUnion) call.target;\n      final List<MutableRel> queryInputs = new ArrayList<>(query.getInputs());\n      final List<MutableRel> targetInputs = new ArrayList<>(target.getInputs());\n      if (query.isAll() == target.isAll()\n          && sameRelCollectionNoOrderConsidered(queryInputs, targetInputs)) {\n        return call.result(target);\n      }\n      return null;\n    }\n","realPath":"core/src/main/java/org/apache/calcite/plan/SubstitutionVisitor.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":1602,"status":"M"},{"authorDate":"2020-05-29 00:04:40","commitOrder":4,"curCode":"    @Override public @Nullable UnifyResult apply(UnifyRuleCall call) {\n      final MutableIntersect query = (MutableIntersect) call.query;\n      final MutableIntersect target = (MutableIntersect) call.target;\n      final List<MutableRel> queryInputs = new ArrayList<>(query.getInputs());\n      final List<MutableRel> targetInputs = new ArrayList<>(target.getInputs());\n      if (query.isAll() == target.isAll()\n          && sameRelCollectionNoOrderConsidered(queryInputs, targetInputs)) {\n        return call.result(target);\n      }\n      return null;\n    }\n","date":"2020-11-30 06:45:33","endLine":1657,"groupId":"111881","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"apply","params":"(UnifyRuleCallcall)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/cf/987d23d57d4619eae578c60232ea52836bdf5c.src","preCode":"    @Override public UnifyResult apply(UnifyRuleCall call) {\n      final MutableIntersect query = (MutableIntersect) call.query;\n      final MutableIntersect target = (MutableIntersect) call.target;\n      final List<MutableRel> queryInputs = new ArrayList<>(query.getInputs());\n      final List<MutableRel> targetInputs = new ArrayList<>(target.getInputs());\n      if (query.isAll() == target.isAll()\n          && sameRelCollectionNoOrderConsidered(queryInputs, targetInputs)) {\n        return call.result(target);\n      }\n      return null;\n    }\n","realPath":"core/src/main/java/org/apache/calcite/plan/SubstitutionVisitor.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":1647,"status":"M"}],"commitId":"d9a81b88ad561e7e4cedae93e805e0d7a53a7f1a","commitMessage":"@@@[CALCITE-4199] Add nullability annotations\n\nThe commit includes javadoc updates and refactorings made by Julian Hyde in https://github.com/apache/calcite/pull/2278\n","date":"2020-11-30 06:45:33","modifiedFileCount":"1012","status":"M","submitter":"Vladimir Sitnikov"}]
