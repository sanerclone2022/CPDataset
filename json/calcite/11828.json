[{"authorTime":"2014-11-14 09:39:29","codes":[{"authorDate":"2014-11-14 09:39:29","commitOrder":1,"curCode":"    public void checkResult(ResultSet result) throws Exception {\n      Throwable thrown = null;\n      try {\n        result.next();\n        fail(\"expected exception\");\n      } catch (SQLException e) {\n        thrown = e;\n      }\n      final String stack = Util.getStackTrace(thrown);\n      for (Pattern pattern : patterns) {\n        if (pattern.matcher(stack).matches()) {\n          return;\n        }\n      }\n      fail(\"Stack did not match any pattern; \" + stack);\n    }\n","date":"2014-11-14 09:39:34","endLine":5092,"groupId":"2704","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"checkResult","params":"(ResultSetresult)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/c1/ce9911d6cdbc46441ce964a9cf5f40a7143e6e.src","preCode":"    public void checkResult(ResultSet result) throws Exception {\n      Throwable thrown = null;\n      try {\n        result.next();\n        fail(\"expected exception\");\n      } catch (SQLException e) {\n        thrown = e;\n      }\n      final String stack = Util.getStackTrace(thrown);\n      for (Pattern pattern : patterns) {\n        if (pattern.matcher(stack).matches()) {\n          return;\n        }\n      }\n      fail(\"Stack did not match any pattern; \" + stack);\n    }\n","realPath":"core/src/test/java/org/apache/calcite/sql/test/SqlOperatorBaseTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":5077,"status":"B"},{"authorDate":"2014-11-14 09:39:29","commitOrder":1,"curCode":"    public void checkResult(ResultSet result) throws Exception {\n      Throwable thrown = null;\n      try {\n        if (!result.next()) {\n          \r\n          return;\n        }\n        final Object actual = result.getObject(1);\n        assertEquals(expected, actual);\n      } catch (SQLException e) {\n        thrown = e;\n      }\n      if (thrown != null) {\n        final String stack = Util.getStackTrace(thrown);\n        for (Pattern pattern : patterns) {\n          if (pattern.matcher(stack).matches()) {\n            return;\n          }\n        }\n        fail(\"Stack did not match any pattern; \" + stack);\n      }\n    }\n","date":"2014-11-14 09:39:34","endLine":5135,"groupId":"9365","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"checkResult","params":"(ResultSetresult)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/c1/ce9911d6cdbc46441ce964a9cf5f40a7143e6e.src","preCode":"    public void checkResult(ResultSet result) throws Exception {\n      Throwable thrown = null;\n      try {\n        if (!result.next()) {\n          \r\n          return;\n        }\n        final Object actual = result.getObject(1);\n        assertEquals(expected, actual);\n      } catch (SQLException e) {\n        thrown = e;\n      }\n      if (thrown != null) {\n        final String stack = Util.getStackTrace(thrown);\n        for (Pattern pattern : patterns) {\n          if (pattern.matcher(stack).matches()) {\n            return;\n          }\n        }\n        fail(\"Stack did not match any pattern; \" + stack);\n      }\n    }\n","realPath":"core/src/test/java/org/apache/calcite/sql/test/SqlOperatorBaseTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":5114,"status":"B"}],"commitId":"a611d645ad754844a39f3d98f5f814f13dbd9404","commitMessage":"@@@[CALCITE-296] Re-organize package structure;\n[CALCITE-419] Naming convention for planner rules\n\nThis change only renames files (and deletes some obsolete files). There are no content changes.\n","date":"2014-11-14 09:39:34","modifiedFileCount":"0","status":"B","submitter":"Julian Hyde"},{"authorTime":"2015-09-11 10:27:49","codes":[{"authorDate":"2015-09-11 10:27:49","commitOrder":2,"curCode":"    public void checkResult(ResultSet result) throws Exception {\n      Throwable thrown = null;\n      try {\n        result.next();\n        fail(\"expected exception\");\n      } catch (SQLException e) {\n        thrown = e;\n      }\n      final String stack = Throwables.getStackTraceAsString(thrown);\n      for (Pattern pattern : patterns) {\n        if (pattern.matcher(stack).matches()) {\n          return;\n        }\n      }\n      fail(\"Stack did not match any pattern; \" + stack);\n    }\n","date":"2016-01-10 16:51:24","endLine":5285,"groupId":"11828","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"checkResult","params":"(ResultSetresult)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/6a/3564106185f377ab91d41894fbebaf29428ae8.src","preCode":"    public void checkResult(ResultSet result) throws Exception {\n      Throwable thrown = null;\n      try {\n        result.next();\n        fail(\"expected exception\");\n      } catch (SQLException e) {\n        thrown = e;\n      }\n      final String stack = Util.getStackTrace(thrown);\n      for (Pattern pattern : patterns) {\n        if (pattern.matcher(stack).matches()) {\n          return;\n        }\n      }\n      fail(\"Stack did not match any pattern; \" + stack);\n    }\n","realPath":"core/src/test/java/org/apache/calcite/sql/test/SqlOperatorBaseTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":5270,"status":"M"},{"authorDate":"2015-09-11 10:27:49","commitOrder":2,"curCode":"    public void checkResult(ResultSet result) throws Exception {\n      Throwable thrown = null;\n      try {\n        if (!result.next()) {\n          \r\n          return;\n        }\n        final Object actual = result.getObject(1);\n        assertEquals(expected, actual);\n      } catch (SQLException e) {\n        thrown = e;\n      }\n      if (thrown != null) {\n        final String stack = Throwables.getStackTraceAsString(thrown);\n        for (Pattern pattern : patterns) {\n          if (pattern.matcher(stack).matches()) {\n            return;\n          }\n        }\n        fail(\"Stack did not match any pattern; \" + stack);\n      }\n    }\n","date":"2016-01-10 16:51:24","endLine":5328,"groupId":"11828","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"checkResult","params":"(ResultSetresult)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/6a/3564106185f377ab91d41894fbebaf29428ae8.src","preCode":"    public void checkResult(ResultSet result) throws Exception {\n      Throwable thrown = null;\n      try {\n        if (!result.next()) {\n          \r\n          return;\n        }\n        final Object actual = result.getObject(1);\n        assertEquals(expected, actual);\n      } catch (SQLException e) {\n        thrown = e;\n      }\n      if (thrown != null) {\n        final String stack = Util.getStackTrace(thrown);\n        for (Pattern pattern : patterns) {\n          if (pattern.matcher(stack).matches()) {\n            return;\n          }\n        }\n        fail(\"Stack did not match any pattern; \" + stack);\n      }\n    }\n","realPath":"core/src/test/java/org/apache/calcite/sql/test/SqlOperatorBaseTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":5307,"status":"M"}],"commitId":"4ae0298688d402484be7c76610e46c6f610a8bc6","commitMessage":"@@@Deprecate some Util methods.  and upgrade last modules to JDK 1.7\n","date":"2016-01-10 16:51:24","modifiedFileCount":"6","status":"M","submitter":"Julian Hyde"}]
