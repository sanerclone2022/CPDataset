[{"authorTime":"2019-05-05 17:23:45","codes":[{"authorDate":"2018-11-02 00:19:40","commitOrder":3,"curCode":"  @Test public void testCreateTable() throws Exception {\n    try (Connection c = connect();\n         Statement s = c.createStatement()) {\n      boolean b = s.execute(\"create table t (i int not null)\");\n      assertThat(b, is(false));\n      int x = s.executeUpdate(\"insert into t values 1\");\n      assertThat(x, is(1));\n      x = s.executeUpdate(\"insert into t values 3\");\n      assertThat(x, is(1));\n      try (ResultSet r = s.executeQuery(\"select sum(i) from t\")) {\n        assertThat(r.next(), is(true));\n        assertThat(r.getInt(1), is(4));\n        assertThat(r.next(), is(false));\n      }\n\n      \r\n      b = s.execute(\"create type mytype as (i int)\");\n      assertThat(b, is(false));\n      b = s.execute(\"create table w (i int not null, j mytype)\");\n      assertThat(b, is(false));\n      x = s.executeUpdate(\"insert into w values (1, NULL)\");\n      assertThat(x, is(1));\n    }\n  }\n","date":"2019-02-23 00:45:56","endLine":151,"groupId":"12512","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testCreateTable","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/2d/8b24176f587f3118c95ae802c40721c1e2e14d.src","preCode":"  @Test public void testCreateTable() throws Exception {\n    try (Connection c = connect();\n         Statement s = c.createStatement()) {\n      boolean b = s.execute(\"create table t (i int not null)\");\n      assertThat(b, is(false));\n      int x = s.executeUpdate(\"insert into t values 1\");\n      assertThat(x, is(1));\n      x = s.executeUpdate(\"insert into t values 3\");\n      assertThat(x, is(1));\n      try (ResultSet r = s.executeQuery(\"select sum(i) from t\")) {\n        assertThat(r.next(), is(true));\n        assertThat(r.getInt(1), is(4));\n        assertThat(r.next(), is(false));\n      }\n\n      \r\n      b = s.execute(\"create type mytype as (i int)\");\n      assertThat(b, is(false));\n      b = s.execute(\"create table w (i int not null, j mytype)\");\n      assertThat(b, is(false));\n      x = s.executeUpdate(\"insert into w values (1, NULL)\");\n      assertThat(x, is(1));\n    }\n  }\n","realPath":"server/src/test/java/org/apache/calcite/test/ServerTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":128,"status":"NB"},{"authorDate":"2019-05-05 17:23:45","commitOrder":3,"curCode":"  @Test public void testInsertCastedValueOfCompositeUdt() throws Exception {\n    try (Connection c = connect();\n         Statement s = c.createStatement()) {\n      boolean b = s.execute(\"create type mytype as (i int, j int)\");\n      assertThat(b, is(false));\n      b = s.execute(\"create table w (i int not null, j mytype)\");\n      assertThat(b, is(false));\n      int x = s.executeUpdate(\"insert into w \"\n          + \"values (1, cast((select j from w limit 1) as mytype))\");\n      assertThat(x, is(1));\n    }\n  }\n","date":"2019-05-08 23:37:29","endLine":168,"groupId":"7054","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testInsertCastedValueOfCompositeUdt","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/3e/4a71b74bd64d1b783d4c316b4ee3ba8c973b45.src","preCode":"  @Test public void testInsertCastedValueOfCompositeUdt() throws Exception {\n    try (Connection c = connect();\n         Statement s = c.createStatement()) {\n      boolean b = s.execute(\"create type mytype as (i int, j int)\");\n      assertThat(b, is(false));\n      b = s.execute(\"create table w (i int not null, j mytype)\");\n      assertThat(b, is(false));\n      int x = s.executeUpdate(\"insert into w \"\n          + \"values (1, cast((select j from w limit 1) as mytype))\");\n      assertThat(x, is(1));\n    }\n  }\n","realPath":"server/src/test/java/org/apache/calcite/test/ServerTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":157,"status":"B"}],"commitId":"b8bdfb074be12f90c98f9f1fa2af8cf46f2d36f1","commitMessage":"@@@[CALCITE-3046] CompileException when inserting casted value of composited user defined type into table\n\nAlso.  add several test cases for EnumerableRelImplementor.TypeFinder.\n","date":"2019-05-08 23:37:29","modifiedFileCount":"3","status":"M","submitter":"Hongze Zhang"},{"authorTime":"2019-05-05 17:23:45","codes":[{"authorDate":"2019-08-19 19:59:46","commitOrder":4,"curCode":"  @Test public void testCreateTable() throws Exception {\n    try (Connection c = connect();\n         Statement s = c.createStatement()) {\n      boolean b = s.execute(\"create table t (i int not null)\");\n      assertThat(b, is(false));\n      int x = s.executeUpdate(\"insert into t values 1\");\n      assertThat(x, is(1));\n      x = s.executeUpdate(\"insert into t values 3\");\n      assertThat(x, is(1));\n      try (ResultSet r = s.executeQuery(\"select sum(i) from t\")) {\n        assertThat(r.next(), is(true));\n        assertThat(r.getInt(1), is(4));\n        assertThat(r.next(), is(false));\n      }\n\n      \r\n      b = s.execute(\"create type mytype as (i int)\");\n      assertThat(b, is(false));\n      b = s.execute(\"create table w (i int not null, j mytype)\");\n      assertThat(b, is(false));\n      x = s.executeUpdate(\"insert into w values (1, NULL)\");\n      assertThat(x, is(1));\n\n      \r\n      b = s.execute(\"create schema a\");\n      assertThat(b, is(false));\n      b = s.execute(\"create schema a.b\");\n      assertThat(b, is(false));\n      b = s.execute(\"create type a.b.mytype as (i varchar(5))\");\n      assertThat(b, is(false));\n      b = s.execute(\"create table t2 (i int not null, j a.b.mytype)\");\n      assertThat(b, is(false));\n      x = s.executeUpdate(\"insert into t2 values (1, NULL)\");\n      assertThat(x, is(1));\n    }\n  }\n","date":"2019-08-20 18:07:10","endLine":167,"groupId":"12512","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testCreateTable","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/37/847e0f10f36391f43152897559db3cdecc3455.src","preCode":"  @Test public void testCreateTable() throws Exception {\n    try (Connection c = connect();\n         Statement s = c.createStatement()) {\n      boolean b = s.execute(\"create table t (i int not null)\");\n      assertThat(b, is(false));\n      int x = s.executeUpdate(\"insert into t values 1\");\n      assertThat(x, is(1));\n      x = s.executeUpdate(\"insert into t values 3\");\n      assertThat(x, is(1));\n      try (ResultSet r = s.executeQuery(\"select sum(i) from t\")) {\n        assertThat(r.next(), is(true));\n        assertThat(r.getInt(1), is(4));\n        assertThat(r.next(), is(false));\n      }\n\n      \r\n      b = s.execute(\"create type mytype as (i int)\");\n      assertThat(b, is(false));\n      b = s.execute(\"create table w (i int not null, j mytype)\");\n      assertThat(b, is(false));\n      x = s.executeUpdate(\"insert into w values (1, NULL)\");\n      assertThat(x, is(1));\n    }\n  }\n","realPath":"server/src/test/java/org/apache/calcite/test/ServerTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":132,"status":"M"},{"authorDate":"2019-05-05 17:23:45","commitOrder":4,"curCode":"  @Test public void testInsertCastedValueOfCompositeUdt() throws Exception {\n    try (Connection c = connect();\n         Statement s = c.createStatement()) {\n      boolean b = s.execute(\"create type mytype as (i int, j int)\");\n      assertThat(b, is(false));\n      b = s.execute(\"create table w (i int not null, j mytype)\");\n      assertThat(b, is(false));\n      int x = s.executeUpdate(\"insert into w \"\n          + \"values (1, cast((select j from w limit 1) as mytype))\");\n      assertThat(x, is(1));\n    }\n  }\n","date":"2019-05-08 23:37:29","endLine":168,"groupId":"7054","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testInsertCastedValueOfCompositeUdt","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/3e/4a71b74bd64d1b783d4c316b4ee3ba8c973b45.src","preCode":"  @Test public void testInsertCastedValueOfCompositeUdt() throws Exception {\n    try (Connection c = connect();\n         Statement s = c.createStatement()) {\n      boolean b = s.execute(\"create type mytype as (i int, j int)\");\n      assertThat(b, is(false));\n      b = s.execute(\"create table w (i int not null, j mytype)\");\n      assertThat(b, is(false));\n      int x = s.executeUpdate(\"insert into w \"\n          + \"values (1, cast((select j from w limit 1) as mytype))\");\n      assertThat(x, is(1));\n    }\n  }\n","realPath":"server/src/test/java/org/apache/calcite/test/ServerTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":157,"status":"N"}],"commitId":"6b600e4bd13d130a4ea48ab9b8451d81ed095da0","commitMessage":"@@@[CALCITE-3267] Remove method SqlDataTypeSpec#deriveType(RelDataTypefactory)\n\nChanges:\n* Remove method SqlDataTypeSpec#deriveType(RelDataTypefactory);\n* Add a SqlValidator subType ContextSqlValidator used to derive type during DDL\nnodes execution;\n* Support create table with user defined type and add test case.\n","date":"2019-08-20 18:07:10","modifiedFileCount":"16","status":"M","submitter":"yuzhao.cyz"},{"authorTime":"2020-04-02 10:39:10","codes":[{"authorDate":"2020-04-02 10:39:10","commitOrder":5,"curCode":"  @Test void testCreateTable() throws Exception {\n    try (Connection c = connect();\n         Statement s = c.createStatement()) {\n      boolean b = s.execute(\"create table t (i int not null)\");\n      assertThat(b, is(false));\n      int x = s.executeUpdate(\"insert into t values 1\");\n      assertThat(x, is(1));\n      x = s.executeUpdate(\"insert into t values 3\");\n      assertThat(x, is(1));\n      try (ResultSet r = s.executeQuery(\"select sum(i) from t\")) {\n        assertThat(r.next(), is(true));\n        assertThat(r.getInt(1), is(4));\n        assertThat(r.next(), is(false));\n      }\n\n      \r\n      b = s.execute(\"create type mytype as (i int)\");\n      assertThat(b, is(false));\n      b = s.execute(\"create table w (i int not null, j mytype)\");\n      assertThat(b, is(false));\n      x = s.executeUpdate(\"insert into w values (1, NULL)\");\n      assertThat(x, is(1));\n\n      \r\n      b = s.execute(\"create schema a\");\n      assertThat(b, is(false));\n      b = s.execute(\"create schema a.b\");\n      assertThat(b, is(false));\n      b = s.execute(\"create type a.b.mytype as (i varchar(5))\");\n      assertThat(b, is(false));\n      b = s.execute(\"create table t2 (i int not null, j a.b.mytype)\");\n      assertThat(b, is(false));\n      x = s.executeUpdate(\"insert into t2 values (1, NULL)\");\n      assertThat(x, is(1));\n    }\n  }\n","date":"2020-04-06 04:57:49","endLine":173,"groupId":"12512","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testCreateTable","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/f9/1c68810b97ce4f4b6d473470bf13f83e7ad116.src","preCode":"  @Test public void testCreateTable() throws Exception {\n    try (Connection c = connect();\n         Statement s = c.createStatement()) {\n      boolean b = s.execute(\"create table t (i int not null)\");\n      assertThat(b, is(false));\n      int x = s.executeUpdate(\"insert into t values 1\");\n      assertThat(x, is(1));\n      x = s.executeUpdate(\"insert into t values 3\");\n      assertThat(x, is(1));\n      try (ResultSet r = s.executeQuery(\"select sum(i) from t\")) {\n        assertThat(r.next(), is(true));\n        assertThat(r.getInt(1), is(4));\n        assertThat(r.next(), is(false));\n      }\n\n      \r\n      b = s.execute(\"create type mytype as (i int)\");\n      assertThat(b, is(false));\n      b = s.execute(\"create table w (i int not null, j mytype)\");\n      assertThat(b, is(false));\n      x = s.executeUpdate(\"insert into w values (1, NULL)\");\n      assertThat(x, is(1));\n\n      \r\n      b = s.execute(\"create schema a\");\n      assertThat(b, is(false));\n      b = s.execute(\"create schema a.b\");\n      assertThat(b, is(false));\n      b = s.execute(\"create type a.b.mytype as (i varchar(5))\");\n      assertThat(b, is(false));\n      b = s.execute(\"create table t2 (i int not null, j a.b.mytype)\");\n      assertThat(b, is(false));\n      x = s.executeUpdate(\"insert into t2 values (1, NULL)\");\n      assertThat(x, is(1));\n    }\n  }\n","realPath":"server/src/test/java/org/apache/calcite/test/ServerTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":138,"status":"M"},{"authorDate":"2020-04-02 10:39:10","commitOrder":5,"curCode":"  @Test void testInsertCastedValueOfCompositeUdt() throws Exception {\n    try (Connection c = connect();\n         Statement s = c.createStatement()) {\n      boolean b = s.execute(\"create type mytype as (i int, j int)\");\n      assertThat(b, is(false));\n      b = s.execute(\"create table w (i int not null, j mytype)\");\n      assertThat(b, is(false));\n      int x = s.executeUpdate(\"insert into w \"\n          + \"values (1, cast((select j from w limit 1) as mytype))\");\n      assertThat(x, is(1));\n    }\n  }\n","date":"2020-04-06 04:57:49","endLine":248,"groupId":"7054","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testInsertCastedValueOfCompositeUdt","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/f9/1c68810b97ce4f4b6d473470bf13f83e7ad116.src","preCode":"  @Test public void testInsertCastedValueOfCompositeUdt() throws Exception {\n    try (Connection c = connect();\n         Statement s = c.createStatement()) {\n      boolean b = s.execute(\"create type mytype as (i int, j int)\");\n      assertThat(b, is(false));\n      b = s.execute(\"create table w (i int not null, j mytype)\");\n      assertThat(b, is(false));\n      int x = s.executeUpdate(\"insert into w \"\n          + \"values (1, cast((select j from w limit 1) as mytype))\");\n      assertThat(x, is(1));\n    }\n  }\n","realPath":"server/src/test/java/org/apache/calcite/test/ServerTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":237,"status":"M"}],"commitId":"9492dd4146f63ddc028010d6c4e86f6a5cb29a8d","commitMessage":"@@@[CALCITE-3892] Make junit test classes and methods non-public where possible\n\nPrior to junit 5.  classes and methods had to be public. This is no\nlonger the case.\n\nSome classes need to remain public because they are referenced from\nelsewhere.  or if they use reflection somehow. The remaining 'public'\nkeyword will be informative to maintainers.\n","date":"2020-04-06 04:57:49","modifiedFileCount":"196","status":"M","submitter":"Julian Hyde"},{"authorTime":"2020-04-02 10:39:10","codes":[{"authorDate":"2021-03-12 23:50:31","commitOrder":6,"curCode":"  @Test void testCreateTable() throws Exception {\n    try (Connection c = connect();\n         Statement s = c.createStatement()) {\n      boolean b = s.execute(\"create table t (i int not null)\");\n      assertThat(b, is(false));\n      int x = s.executeUpdate(\"insert into t values 1\");\n      assertThat(x, is(1));\n      x = s.executeUpdate(\"insert into t values 3\");\n      assertThat(x, is(1));\n      try (ResultSet r = s.executeQuery(\"select sum(i) from t\")) {\n        assertThat(r.next(), is(true));\n        assertThat(r.getInt(1), is(4));\n        assertThat(r.next(), is(false));\n      }\n\n      \r\n      b = s.execute(\"create type mytype as (i int)\");\n      assertThat(b, is(false));\n      b = s.execute(\"create table w (i int not null, j mytype)\");\n      assertThat(b, is(false));\n      x = s.executeUpdate(\"insert into w values (1, NULL)\");\n      assertThat(x, is(1));\n\n      \r\n      b = s.execute(\"create schema a\");\n      assertThat(b, is(false));\n      b = s.execute(\"create schema a.b\");\n      assertThat(b, is(false));\n      b = s.execute(\"create type a.b.mytype as (i varchar(5))\");\n      assertThat(b, is(false));\n      b = s.execute(\"create table t2 (i int not null, j a.b.mytype)\");\n      assertThat(b, is(false));\n      x = s.executeUpdate(\"insert into t2 values (1, NULL)\");\n      assertThat(x, is(1));\n\n      assertDoesNotThrow(() -> {\n        s.execute(\"create or replace table t2 (i int not null)\");\n        s.executeUpdate(\"insert into t2 values (1)\");\n      }, \"REPLACE must recreate the table, leaving only one column\");\n    }\n  }\n","date":"2021-03-13 02:13:42","endLine":223,"groupId":"10236","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"testCreateTable","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/55/9e949e3d9b0eafbc661c35448799387c4b9a9e.src","preCode":"  @Test void testCreateTable() throws Exception {\n    try (Connection c = connect();\n         Statement s = c.createStatement()) {\n      boolean b = s.execute(\"create table t (i int not null)\");\n      assertThat(b, is(false));\n      int x = s.executeUpdate(\"insert into t values 1\");\n      assertThat(x, is(1));\n      x = s.executeUpdate(\"insert into t values 3\");\n      assertThat(x, is(1));\n      try (ResultSet r = s.executeQuery(\"select sum(i) from t\")) {\n        assertThat(r.next(), is(true));\n        assertThat(r.getInt(1), is(4));\n        assertThat(r.next(), is(false));\n      }\n\n      \r\n      b = s.execute(\"create type mytype as (i int)\");\n      assertThat(b, is(false));\n      b = s.execute(\"create table w (i int not null, j mytype)\");\n      assertThat(b, is(false));\n      x = s.executeUpdate(\"insert into w values (1, NULL)\");\n      assertThat(x, is(1));\n\n      \r\n      b = s.execute(\"create schema a\");\n      assertThat(b, is(false));\n      b = s.execute(\"create schema a.b\");\n      assertThat(b, is(false));\n      b = s.execute(\"create type a.b.mytype as (i varchar(5))\");\n      assertThat(b, is(false));\n      b = s.execute(\"create table t2 (i int not null, j a.b.mytype)\");\n      assertThat(b, is(false));\n      x = s.executeUpdate(\"insert into t2 values (1, NULL)\");\n      assertThat(x, is(1));\n    }\n  }\n","realPath":"server/src/test/java/org/apache/calcite/test/ServerTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":183,"status":"M"},{"authorDate":"2020-04-02 10:39:10","commitOrder":6,"curCode":"  @Test void testInsertCastedValueOfCompositeUdt() throws Exception {\n    try (Connection c = connect();\n         Statement s = c.createStatement()) {\n      boolean b = s.execute(\"create type mytype as (i int, j int)\");\n      assertThat(b, is(false));\n      b = s.execute(\"create table w (i int not null, j mytype)\");\n      assertThat(b, is(false));\n      int x = s.executeUpdate(\"insert into w \"\n          + \"values (1, cast((select j from w limit 1) as mytype))\");\n      assertThat(x, is(1));\n    }\n  }\n","date":"2020-04-06 04:57:49","endLine":248,"groupId":"10236","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"testInsertCastedValueOfCompositeUdt","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/f9/1c68810b97ce4f4b6d473470bf13f83e7ad116.src","preCode":"  @Test void testInsertCastedValueOfCompositeUdt() throws Exception {\n    try (Connection c = connect();\n         Statement s = c.createStatement()) {\n      boolean b = s.execute(\"create type mytype as (i int, j int)\");\n      assertThat(b, is(false));\n      b = s.execute(\"create table w (i int not null, j mytype)\");\n      assertThat(b, is(false));\n      int x = s.executeUpdate(\"insert into w \"\n          + \"values (1, cast((select j from w limit 1) as mytype))\");\n      assertThat(x, is(1));\n    }\n  }\n","realPath":"server/src/test/java/org/apache/calcite/test/ServerTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":237,"status":"N"}],"commitId":"008930a5a0a4310d642ae902365a883208d097cb","commitMessage":"@@@[CALCITE-4533] Fix handling of REPLACE and IF NOT EXISTS keywords for CREATE TABLE/SCHEMA commands (Vladimir Ozerov)\n","date":"2021-03-13 02:13:42","modifiedFileCount":"2","status":"M","submitter":"devozerov"}]
