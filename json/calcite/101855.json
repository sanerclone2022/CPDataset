[{"authorTime":"2014-11-14 09:39:29","codes":[{"authorDate":"2014-11-14 09:39:29","commitOrder":1,"curCode":"  public void validateDelete(SqlDelete call) {\n    SqlSelect sqlSelect = call.getSourceSelect();\n    validateSelect(sqlSelect, unknownType);\n\n    IdentifierNamespace targetNamespace =\n        getNamespace(call.getTargetTable()).unwrap(\n            IdentifierNamespace.class);\n    validateNamespace(targetNamespace);\n    SqlValidatorTable table = targetNamespace.getTable();\n\n    validateAccess(call.getTargetTable(), table, SqlAccessEnum.DELETE);\n  }\n","date":"2014-11-14 09:39:34","endLine":3371,"groupId":"5404","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"validateDelete","params":"(SqlDeletecall)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/63/1ccf694b0fa39fe974ed5163c5f3d6b0ceb7c9.src","preCode":"  public void validateDelete(SqlDelete call) {\n    SqlSelect sqlSelect = call.getSourceSelect();\n    validateSelect(sqlSelect, unknownType);\n\n    IdentifierNamespace targetNamespace =\n        getNamespace(call.getTargetTable()).unwrap(\n            IdentifierNamespace.class);\n    validateNamespace(targetNamespace);\n    SqlValidatorTable table = targetNamespace.getTable();\n\n    validateAccess(call.getTargetTable(), table, SqlAccessEnum.DELETE);\n  }\n","realPath":"core/src/main/java/org/apache/calcite/sql/validate/SqlValidatorImpl.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":3360,"status":"B"},{"authorDate":"2014-11-14 09:39:29","commitOrder":1,"curCode":"  public void validateMerge(SqlMerge call) {\n    SqlSelect sqlSelect = call.getSourceSelect();\n    \r\n    \r\n\n    \r\n    \r\n    \r\n    \r\n    \r\n\n    \r\n    \r\n    \r\n    IdentifierNamespace targetNamespace =\n        (IdentifierNamespace) getNamespace(call.getTargetTable());\n    validateNamespace(targetNamespace);\n\n    SqlValidatorTable table = targetNamespace.getTable();\n    validateAccess(call.getTargetTable(), table, SqlAccessEnum.UPDATE);\n\n    RelDataType targetRowType = unknownType;\n\n    if (call.getUpdateCall() != null) {\n      targetRowType = createTargetRowType(\n          table,\n          call.getUpdateCall().getTargetColumnList(),\n          true);\n    }\n    if (call.getInsertCall() != null) {\n      targetRowType = createTargetRowType(\n          table,\n          call.getInsertCall().getTargetColumnList(),\n          false);\n    }\n\n    validateSelect(sqlSelect, targetRowType);\n\n    if (call.getUpdateCall() != null) {\n      validateUpdate(call.getUpdateCall());\n    }\n    if (call.getInsertCall() != null) {\n      validateInsert(call.getInsertCall());\n    }\n  }\n","date":"2014-11-14 09:39:34","endLine":3439,"groupId":"4032","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"validateMerge","params":"(SqlMergecall)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/63/1ccf694b0fa39fe974ed5163c5f3d6b0ceb7c9.src","preCode":"  public void validateMerge(SqlMerge call) {\n    SqlSelect sqlSelect = call.getSourceSelect();\n    \r\n    \r\n\n    \r\n    \r\n    \r\n    \r\n    \r\n\n    \r\n    \r\n    \r\n    IdentifierNamespace targetNamespace =\n        (IdentifierNamespace) getNamespace(call.getTargetTable());\n    validateNamespace(targetNamespace);\n\n    SqlValidatorTable table = targetNamespace.getTable();\n    validateAccess(call.getTargetTable(), table, SqlAccessEnum.UPDATE);\n\n    RelDataType targetRowType = unknownType;\n\n    if (call.getUpdateCall() != null) {\n      targetRowType = createTargetRowType(\n          table,\n          call.getUpdateCall().getTargetColumnList(),\n          true);\n    }\n    if (call.getInsertCall() != null) {\n      targetRowType = createTargetRowType(\n          table,\n          call.getInsertCall().getTargetColumnList(),\n          false);\n    }\n\n    validateSelect(sqlSelect, targetRowType);\n\n    if (call.getUpdateCall() != null) {\n      validateUpdate(call.getUpdateCall());\n    }\n    if (call.getInsertCall() != null) {\n      validateInsert(call.getInsertCall());\n    }\n  }\n","realPath":"core/src/main/java/org/apache/calcite/sql/validate/SqlValidatorImpl.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":3395,"status":"B"}],"commitId":"a611d645ad754844a39f3d98f5f814f13dbd9404","commitMessage":"@@@[CALCITE-296] Re-organize package structure;\n[CALCITE-419] Naming convention for planner rules\n\nThis change only renames files (and deletes some obsolete files). There are no content changes.\n","date":"2014-11-14 09:39:34","modifiedFileCount":"0","status":"B","submitter":"Julian Hyde"},{"authorTime":"2016-05-18 10:05:34","codes":[{"authorDate":"2016-05-18 10:05:34","commitOrder":2,"curCode":"  public void validateDelete(SqlDelete call) {\n    SqlSelect sqlSelect = call.getSourceSelect();\n    validateSelect(sqlSelect, unknownType);\n\n    IdentifierNamespace targetNamespace =\n        getNamespace(call.getTargetTable()).unwrap(\n            IdentifierNamespace.class);\n    validateNamespace(targetNamespace, unknownType);\n    SqlValidatorTable table = targetNamespace.getTable();\n\n    validateAccess(call.getTargetTable(), table, SqlAccessEnum.DELETE);\n  }\n","date":"2016-05-23 03:46:46","endLine":3827,"groupId":"5404","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"validateDelete","params":"(SqlDeletecall)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/95/51a16d826d0b63d44a4cfca155f605eba499c0.src","preCode":"  public void validateDelete(SqlDelete call) {\n    SqlSelect sqlSelect = call.getSourceSelect();\n    validateSelect(sqlSelect, unknownType);\n\n    IdentifierNamespace targetNamespace =\n        getNamespace(call.getTargetTable()).unwrap(\n            IdentifierNamespace.class);\n    validateNamespace(targetNamespace);\n    SqlValidatorTable table = targetNamespace.getTable();\n\n    validateAccess(call.getTargetTable(), table, SqlAccessEnum.DELETE);\n  }\n","realPath":"core/src/main/java/org/apache/calcite/sql/validate/SqlValidatorImpl.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":3816,"status":"M"},{"authorDate":"2016-05-18 10:05:34","commitOrder":2,"curCode":"  public void validateMerge(SqlMerge call) {\n    SqlSelect sqlSelect = call.getSourceSelect();\n    \r\n    \r\n\n    \r\n    \r\n    \r\n    \r\n    \r\n\n    \r\n    \r\n    \r\n    IdentifierNamespace targetNamespace =\n        (IdentifierNamespace) getNamespace(call.getTargetTable());\n    validateNamespace(targetNamespace, unknownType);\n\n    SqlValidatorTable table = targetNamespace.getTable();\n    validateAccess(call.getTargetTable(), table, SqlAccessEnum.UPDATE);\n\n    RelDataType targetRowType = unknownType;\n\n    if (call.getUpdateCall() != null) {\n      targetRowType = createTargetRowType(\n          table,\n          call.getUpdateCall().getTargetColumnList(),\n          true);\n    }\n    if (call.getInsertCall() != null) {\n      targetRowType = createTargetRowType(\n          table,\n          call.getInsertCall().getTargetColumnList(),\n          false);\n    }\n\n    validateSelect(sqlSelect, targetRowType);\n\n    if (call.getUpdateCall() != null) {\n      validateUpdate(call.getUpdateCall());\n    }\n    if (call.getInsertCall() != null) {\n      validateInsert(call.getInsertCall());\n    }\n  }\n","date":"2016-05-23 03:46:46","endLine":3895,"groupId":"4032","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"validateMerge","params":"(SqlMergecall)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/95/51a16d826d0b63d44a4cfca155f605eba499c0.src","preCode":"  public void validateMerge(SqlMerge call) {\n    SqlSelect sqlSelect = call.getSourceSelect();\n    \r\n    \r\n\n    \r\n    \r\n    \r\n    \r\n    \r\n\n    \r\n    \r\n    \r\n    IdentifierNamespace targetNamespace =\n        (IdentifierNamespace) getNamespace(call.getTargetTable());\n    validateNamespace(targetNamespace);\n\n    SqlValidatorTable table = targetNamespace.getTable();\n    validateAccess(call.getTargetTable(), table, SqlAccessEnum.UPDATE);\n\n    RelDataType targetRowType = unknownType;\n\n    if (call.getUpdateCall() != null) {\n      targetRowType = createTargetRowType(\n          table,\n          call.getUpdateCall().getTargetColumnList(),\n          true);\n    }\n    if (call.getInsertCall() != null) {\n      targetRowType = createTargetRowType(\n          table,\n          call.getInsertCall().getTargetColumnList(),\n          false);\n    }\n\n    validateSelect(sqlSelect, targetRowType);\n\n    if (call.getUpdateCall() != null) {\n      validateUpdate(call.getUpdateCall());\n    }\n    if (call.getInsertCall() != null) {\n      validateInsert(call.getInsertCall());\n    }\n  }\n","realPath":"core/src/main/java/org/apache/calcite/sql/validate/SqlValidatorImpl.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":3851,"status":"M"}],"commitId":"f191a386aedaee05c6ffcc1d4b155193bfa4ca01","commitMessage":"@@@[CALCITE-1228] Bind parameters in INSERT\n\nDeduce number and types of bind parameters for all DML statements.  in\nvalidator and in simple JDBC tests.\n\nAlso infer types of bind parameters in other kinds of query.\n","date":"2016-05-23 03:46:46","modifiedFileCount":"32","status":"M","submitter":"Julian Hyde"},{"authorTime":"2016-05-18 10:05:34","codes":[{"authorDate":"2017-03-29 12:29:27","commitOrder":3,"curCode":"  public void validateDelete(SqlDelete call) {\n    final SqlSelect sqlSelect = call.getSourceSelect();\n    validateSelect(sqlSelect, unknownType);\n\n    final SqlValidatorNamespace targetNamespace = getNamespace(call);\n    validateNamespace(targetNamespace, unknownType);\n    final SqlValidatorTable table = targetNamespace.getTable();\n\n    validateAccess(call.getTargetTable(), table, SqlAccessEnum.DELETE);\n  }\n","date":"2017-03-30 15:33:30","endLine":4168,"groupId":"5404","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"validateDelete","params":"(SqlDeletecall)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/6e/3d0175a11fd4db73a91e2164b6ae5f3a483443.src","preCode":"  public void validateDelete(SqlDelete call) {\n    SqlSelect sqlSelect = call.getSourceSelect();\n    validateSelect(sqlSelect, unknownType);\n\n    IdentifierNamespace targetNamespace =\n        getNamespace(call.getTargetTable()).unwrap(\n            IdentifierNamespace.class);\n    validateNamespace(targetNamespace, unknownType);\n    SqlValidatorTable table = targetNamespace.getTable();\n\n    validateAccess(call.getTargetTable(), table, SqlAccessEnum.DELETE);\n  }\n","realPath":"core/src/main/java/org/apache/calcite/sql/validate/SqlValidatorImpl.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":4159,"status":"M"},{"authorDate":"2016-05-18 10:05:34","commitOrder":3,"curCode":"  public void validateMerge(SqlMerge call) {\n    SqlSelect sqlSelect = call.getSourceSelect();\n    \r\n    \r\n\n    \r\n    \r\n    \r\n    \r\n    \r\n\n    \r\n    \r\n    \r\n    IdentifierNamespace targetNamespace =\n        (IdentifierNamespace) getNamespace(call.getTargetTable());\n    validateNamespace(targetNamespace, unknownType);\n\n    SqlValidatorTable table = targetNamespace.getTable();\n    validateAccess(call.getTargetTable(), table, SqlAccessEnum.UPDATE);\n\n    RelDataType targetRowType = unknownType;\n\n    if (call.getUpdateCall() != null) {\n      targetRowType = createTargetRowType(\n          table,\n          call.getUpdateCall().getTargetColumnList(),\n          true);\n    }\n    if (call.getInsertCall() != null) {\n      targetRowType = createTargetRowType(\n          table,\n          call.getInsertCall().getTargetColumnList(),\n          false);\n    }\n\n    validateSelect(sqlSelect, targetRowType);\n\n    if (call.getUpdateCall() != null) {\n      validateUpdate(call.getUpdateCall());\n    }\n    if (call.getInsertCall() != null) {\n      validateInsert(call.getInsertCall());\n    }\n  }\n","date":"2016-05-23 03:46:46","endLine":3895,"groupId":"4032","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"validateMerge","params":"(SqlMergecall)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/95/51a16d826d0b63d44a4cfca155f605eba499c0.src","preCode":"  public void validateMerge(SqlMerge call) {\n    SqlSelect sqlSelect = call.getSourceSelect();\n    \r\n    \r\n\n    \r\n    \r\n    \r\n    \r\n    \r\n\n    \r\n    \r\n    \r\n    IdentifierNamespace targetNamespace =\n        (IdentifierNamespace) getNamespace(call.getTargetTable());\n    validateNamespace(targetNamespace, unknownType);\n\n    SqlValidatorTable table = targetNamespace.getTable();\n    validateAccess(call.getTargetTable(), table, SqlAccessEnum.UPDATE);\n\n    RelDataType targetRowType = unknownType;\n\n    if (call.getUpdateCall() != null) {\n      targetRowType = createTargetRowType(\n          table,\n          call.getUpdateCall().getTargetColumnList(),\n          true);\n    }\n    if (call.getInsertCall() != null) {\n      targetRowType = createTargetRowType(\n          table,\n          call.getInsertCall().getTargetColumnList(),\n          false);\n    }\n\n    validateSelect(sqlSelect, targetRowType);\n\n    if (call.getUpdateCall() != null) {\n      validateUpdate(call.getUpdateCall());\n    }\n    if (call.getInsertCall() != null) {\n      validateInsert(call.getInsertCall());\n    }\n  }\n","realPath":"core/src/main/java/org/apache/calcite/sql/validate/SqlValidatorImpl.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":3851,"status":"N"}],"commitId":"8a1a287ded230138390f859584fa8f847d9e7a0f","commitMessage":"@@@[CALCITE-1702] Support extended columns in DML (Kevin Liew)\n\nClose apache/calcite#408\n","date":"2017-03-30 15:33:30","modifiedFileCount":"21","status":"M","submitter":"kliewkliew"},{"authorTime":"2020-09-29 22:09:05","codes":[{"authorDate":"2020-09-29 22:09:05","commitOrder":4,"curCode":"  @Override public void validateDelete(SqlDelete call) {\n    final SqlSelect sqlSelect = call.getSourceSelect();\n    validateSelect(sqlSelect, unknownType);\n\n    final SqlValidatorNamespace targetNamespace = getNamespace(call);\n    validateNamespace(targetNamespace, unknownType);\n    final SqlValidatorTable table = targetNamespace.getTable();\n\n    validateAccess(call.getTargetTable(), table, SqlAccessEnum.DELETE);\n  }\n","date":"2020-10-07 05:42:47","endLine":4772,"groupId":"5404","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"validateDelete","params":"(SqlDeletecall)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/1d/e2f640194abdd8d51f339bd04507320c8175bc.src","preCode":"  public void validateDelete(SqlDelete call) {\n    final SqlSelect sqlSelect = call.getSourceSelect();\n    validateSelect(sqlSelect, unknownType);\n\n    final SqlValidatorNamespace targetNamespace = getNamespace(call);\n    validateNamespace(targetNamespace, unknownType);\n    final SqlValidatorTable table = targetNamespace.getTable();\n\n    validateAccess(call.getTargetTable(), table, SqlAccessEnum.DELETE);\n  }\n","realPath":"core/src/main/java/org/apache/calcite/sql/validate/SqlValidatorImpl.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":4763,"status":"M"},{"authorDate":"2020-09-29 22:09:05","commitOrder":4,"curCode":"  @Override public void validateMerge(SqlMerge call) {\n    SqlSelect sqlSelect = call.getSourceSelect();\n    \r\n    \r\n\n    \r\n    \r\n    \r\n    \r\n    \r\n\n    \r\n    \r\n    \r\n    IdentifierNamespace targetNamespace =\n        (IdentifierNamespace) getNamespace(call.getTargetTable());\n    validateNamespace(targetNamespace, unknownType);\n\n    SqlValidatorTable table = targetNamespace.getTable();\n    validateAccess(call.getTargetTable(), table, SqlAccessEnum.UPDATE);\n\n    RelDataType targetRowType = unknownType;\n\n    if (call.getUpdateCall() != null) {\n      targetRowType = createTargetRowType(\n          table,\n          call.getUpdateCall().getTargetColumnList(),\n          true);\n    }\n    if (call.getInsertCall() != null) {\n      targetRowType = createTargetRowType(\n          table,\n          call.getInsertCall().getTargetColumnList(),\n          false);\n    }\n\n    validateSelect(sqlSelect, targetRowType);\n\n    if (call.getUpdateCall() != null) {\n      validateUpdate(call.getUpdateCall());\n    }\n    if (call.getInsertCall() != null) {\n      validateInsert(call.getInsertCall());\n    }\n  }\n","date":"2020-10-07 05:42:47","endLine":4848,"groupId":"4032","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"validateMerge","params":"(SqlMergecall)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/1d/e2f640194abdd8d51f339bd04507320c8175bc.src","preCode":"  public void validateMerge(SqlMerge call) {\n    SqlSelect sqlSelect = call.getSourceSelect();\n    \r\n    \r\n\n    \r\n    \r\n    \r\n    \r\n    \r\n\n    \r\n    \r\n    \r\n    IdentifierNamespace targetNamespace =\n        (IdentifierNamespace) getNamespace(call.getTargetTable());\n    validateNamespace(targetNamespace, unknownType);\n\n    SqlValidatorTable table = targetNamespace.getTable();\n    validateAccess(call.getTargetTable(), table, SqlAccessEnum.UPDATE);\n\n    RelDataType targetRowType = unknownType;\n\n    if (call.getUpdateCall() != null) {\n      targetRowType = createTargetRowType(\n          table,\n          call.getUpdateCall().getTargetColumnList(),\n          true);\n    }\n    if (call.getInsertCall() != null) {\n      targetRowType = createTargetRowType(\n          table,\n          call.getInsertCall().getTargetColumnList(),\n          false);\n    }\n\n    validateSelect(sqlSelect, targetRowType);\n\n    if (call.getUpdateCall() != null) {\n      validateUpdate(call.getUpdateCall());\n    }\n    if (call.getInsertCall() != null) {\n      validateInsert(call.getInsertCall());\n    }\n  }\n","realPath":"core/src/main/java/org/apache/calcite/sql/validate/SqlValidatorImpl.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":4804,"status":"M"}],"commitId":"66caa54c5e272f8287ca132ca012733898a38768","commitMessage":"@@@[CALCITE-4314] Add missing @Override annotations\n","date":"2020-10-07 05:42:47","modifiedFileCount":"745","status":"M","submitter":"Vladimir Sitnikov"},{"authorTime":"2020-05-29 00:04:40","codes":[{"authorDate":"2020-05-29 00:04:40","commitOrder":5,"curCode":"  @Override public void validateDelete(SqlDelete call) {\n    final SqlSelect sqlSelect = SqlNonNullableAccessors.getSourceSelect(call);\n    validateSelect(sqlSelect, unknownType);\n\n    final SqlValidatorNamespace targetNamespace = getNamespaceOrThrow(call);\n    validateNamespace(targetNamespace, unknownType);\n    final SqlValidatorTable table = targetNamespace.getTable();\n\n    validateAccess(call.getTargetTable(), table, SqlAccessEnum.DELETE);\n  }\n","date":"2020-11-30 06:45:33","endLine":4949,"groupId":"101855","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"validateDelete","params":"(SqlDeletecall)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/42/8f1d3a3f0cf3ef4a3ecc26bac058934422699c.src","preCode":"  @Override public void validateDelete(SqlDelete call) {\n    final SqlSelect sqlSelect = call.getSourceSelect();\n    validateSelect(sqlSelect, unknownType);\n\n    final SqlValidatorNamespace targetNamespace = getNamespace(call);\n    validateNamespace(targetNamespace, unknownType);\n    final SqlValidatorTable table = targetNamespace.getTable();\n\n    validateAccess(call.getTargetTable(), table, SqlAccessEnum.DELETE);\n  }\n","realPath":"core/src/main/java/org/apache/calcite/sql/validate/SqlValidatorImpl.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":4940,"status":"M"},{"authorDate":"2020-05-29 00:04:40","commitOrder":5,"curCode":"  @Override public void validateMerge(SqlMerge call) {\n    SqlSelect sqlSelect = SqlNonNullableAccessors.getSourceSelect(call);\n    \r\n    \r\n\n    \r\n    \r\n    \r\n    \r\n    \r\n\n    \r\n    \r\n    \r\n    IdentifierNamespace targetNamespace =\n        (IdentifierNamespace) getNamespaceOrThrow(call.getTargetTable());\n    validateNamespace(targetNamespace, unknownType);\n\n    SqlValidatorTable table = targetNamespace.getTable();\n    validateAccess(call.getTargetTable(), table, SqlAccessEnum.UPDATE);\n\n    RelDataType targetRowType = unknownType;\n\n    SqlUpdate updateCall = call.getUpdateCall();\n    if (updateCall != null) {\n      requireNonNull(table, () -> \"ns.getTable() for \" + targetNamespace);\n      targetRowType = createTargetRowType(\n          table,\n          updateCall.getTargetColumnList(),\n          true);\n    }\n    SqlInsert insertCall = call.getInsertCall();\n    if (insertCall != null) {\n      requireNonNull(table, () -> \"ns.getTable() for \" + targetNamespace);\n      targetRowType = createTargetRowType(\n          table,\n          insertCall.getTargetColumnList(),\n          false);\n    }\n\n    validateSelect(sqlSelect, targetRowType);\n\n    SqlUpdate updateCallAfterValidate = call.getUpdateCall();\n    if (updateCallAfterValidate != null) {\n      validateUpdate(updateCallAfterValidate);\n    }\n    SqlInsert insertCallAfterValidate = call.getInsertCall();\n    if (insertCallAfterValidate != null) {\n      validateInsert(insertCallAfterValidate);\n    }\n  }\n","date":"2020-11-30 06:45:33","endLine":5032,"groupId":"101855","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"validateMerge","params":"(SqlMergecall)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/42/8f1d3a3f0cf3ef4a3ecc26bac058934422699c.src","preCode":"  @Override public void validateMerge(SqlMerge call) {\n    SqlSelect sqlSelect = call.getSourceSelect();\n    \r\n    \r\n\n    \r\n    \r\n    \r\n    \r\n    \r\n\n    \r\n    \r\n    \r\n    IdentifierNamespace targetNamespace =\n        (IdentifierNamespace) getNamespace(call.getTargetTable());\n    validateNamespace(targetNamespace, unknownType);\n\n    SqlValidatorTable table = targetNamespace.getTable();\n    validateAccess(call.getTargetTable(), table, SqlAccessEnum.UPDATE);\n\n    RelDataType targetRowType = unknownType;\n\n    if (call.getUpdateCall() != null) {\n      targetRowType = createTargetRowType(\n          table,\n          call.getUpdateCall().getTargetColumnList(),\n          true);\n    }\n    if (call.getInsertCall() != null) {\n      targetRowType = createTargetRowType(\n          table,\n          call.getInsertCall().getTargetColumnList(),\n          false);\n    }\n\n    validateSelect(sqlSelect, targetRowType);\n\n    if (call.getUpdateCall() != null) {\n      validateUpdate(call.getUpdateCall());\n    }\n    if (call.getInsertCall() != null) {\n      validateInsert(call.getInsertCall());\n    }\n  }\n","realPath":"core/src/main/java/org/apache/calcite/sql/validate/SqlValidatorImpl.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":4982,"status":"M"}],"commitId":"d9a81b88ad561e7e4cedae93e805e0d7a53a7f1a","commitMessage":"@@@[CALCITE-4199] Add nullability annotations\n\nThe commit includes javadoc updates and refactorings made by Julian Hyde in https://github.com/apache/calcite/pull/2278\n","date":"2020-11-30 06:45:33","modifiedFileCount":"1012","status":"M","submitter":"Vladimir Sitnikov"}]
