[{"authorTime":"2019-06-28 17:55:40","codes":[{"authorDate":"2019-10-21 19:58:11","commitOrder":3,"curCode":"  @Test public void testHiveSelectQueryWithOrderByDescAndHighNullsWithVersionGreaterThanOrEq21() {\n    final HiveSqlDialect hive2_1Dialect =\n        new HiveSqlDialect(HiveSqlDialect.DEFAULT_CONTEXT\n            .withDatabaseMajorVersion(2)\n            .withDatabaseMinorVersion(1)\n            .withNullCollation(NullCollation.LOW));\n\n    final HiveSqlDialect hive2_2_Dialect =\n        new HiveSqlDialect(HiveSqlDialect.DEFAULT_CONTEXT\n            .withDatabaseMajorVersion(2)\n            .withDatabaseMinorVersion(2)\n            .withNullCollation(NullCollation.LOW));\n\n    final String query = \"select \\\"product_id\\\" from \\\"product\\\"\\n\"\n        + \"order by \\\"product_id\\\" desc nulls first\";\n    final String expected = \"SELECT product_id\\n\"\n        + \"FROM foodmart.product\\n\"\n        + \"ORDER BY product_id DESC NULLS FIRST\";\n    sql(query).dialect(hive2_1Dialect).ok(expected);\n    sql(query).dialect(hive2_2_Dialect).ok(expected);\n  }\n","date":"2019-10-23 10:33:14","endLine":1218,"groupId":"14683","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testHiveSelectQueryWithOrderByDescAndHighNullsWithVersionGreaterThanOrEq21","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/03/1cdb733bb839d94a8497549c9a61c7fefe34ef.src","preCode":"  @Test public void testHiveSelectQueryWithOrderByDescAndHighNullsWithVersionGreaterThanOrEq21() {\n    final HiveSqlDialect hive2_1Dialect =\n        new HiveSqlDialect(HiveSqlDialect.DEFAULT_CONTEXT\n            .withDatabaseMajorVersion(2)\n            .withDatabaseMinorVersion(1)\n            .withNullCollation(NullCollation.LOW));\n\n    final HiveSqlDialect hive2_2_Dialect =\n        new HiveSqlDialect(HiveSqlDialect.DEFAULT_CONTEXT\n            .withDatabaseMajorVersion(2)\n            .withDatabaseMinorVersion(2)\n            .withNullCollation(NullCollation.LOW));\n\n    final String query = \"select \\\"product_id\\\" from \\\"product\\\"\\n\"\n        + \"order by \\\"product_id\\\" desc nulls first\";\n    final String expected = \"SELECT product_id\\n\"\n        + \"FROM foodmart.product\\n\"\n        + \"ORDER BY product_id DESC NULLS FIRST\";\n    sql(query).dialect(hive2_1Dialect).ok(expected);\n    sql(query).dialect(hive2_2_Dialect).ok(expected);\n  }\n","realPath":"core/src/test/java/org/apache/calcite/rel/rel2sql/RelToSqlConverterTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":1198,"status":"NB"},{"authorDate":"2019-06-28 17:55:40","commitOrder":3,"curCode":"  @Test public void testHiveSelectQueryWithOverDescAndHighNullsWithVersionGreaterThanOrEq21() {\n    final HiveSqlDialect hive2_1Dialect =\n            new HiveSqlDialect(SqlDialect.EMPTY_CONTEXT\n                    .withDatabaseMajorVersion(2)\n                    .withDatabaseMinorVersion(1)\n                    .withNullCollation(NullCollation.LOW));\n\n    final HiveSqlDialect hive2_2_Dialect =\n            new HiveSqlDialect(SqlDialect.EMPTY_CONTEXT\n                    .withDatabaseMajorVersion(2)\n                    .withDatabaseMinorVersion(2)\n                    .withNullCollation(NullCollation.LOW));\n\n    final String query = \"SELECT row_number() over \"\n            + \"(order by \\\"hire_date\\\" desc nulls first) FROM \\\"employee\\\"\";\n    final String expected = \"SELECT ROW_NUMBER() OVER (ORDER BY hire_date DESC NULLS FIRST)\\n\"\n            + \"FROM foodmart.employee\";\n    sql(query).dialect(hive2_1Dialect).ok(expected);\n    sql(query).dialect(hive2_2_Dialect).ok(expected);\n  }\n","date":"2020-01-07 11:36:56","endLine":1377,"groupId":"9004","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testHiveSelectQueryWithOverDescAndHighNullsWithVersionGreaterThanOrEq21","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/d0/b08f0caa66f39ea9b4f51931b84be3381fcbbc.src","preCode":"  @Test public void testHiveSelectQueryWithOverDescAndHighNullsWithVersionGreaterThanOrEq21() {\n    final HiveSqlDialect hive2_1Dialect =\n            new HiveSqlDialect(SqlDialect.EMPTY_CONTEXT\n                    .withDatabaseMajorVersion(2)\n                    .withDatabaseMinorVersion(1)\n                    .withNullCollation(NullCollation.LOW));\n\n    final HiveSqlDialect hive2_2_Dialect =\n            new HiveSqlDialect(SqlDialect.EMPTY_CONTEXT\n                    .withDatabaseMajorVersion(2)\n                    .withDatabaseMinorVersion(2)\n                    .withNullCollation(NullCollation.LOW));\n\n    final String query = \"SELECT row_number() over \"\n            + \"(order by \\\"hire_date\\\" desc nulls first) FROM \\\"employee\\\"\";\n    final String expected = \"SELECT ROW_NUMBER() OVER (ORDER BY hire_date DESC NULLS FIRST)\\n\"\n            + \"FROM foodmart.employee\";\n    sql(query).dialect(hive2_1Dialect).ok(expected);\n    sql(query).dialect(hive2_2_Dialect).ok(expected);\n  }\n","realPath":"core/src/test/java/org/apache/calcite/rel/rel2sql/RelToSqlConverterTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":1358,"status":"B"}],"commitId":"40f5a0faaa4c5d974b0815ea2216d91551755e7b","commitMessage":"@@@[CALCITE-3154] RelToSqlConverter generates NULLS LAST and NULLS FIRST wrongly when using MysqlSqlDialect to convert RexOver to sql (Wenhui Tang)\n\nclose apache/calcite#1285\n","date":"2020-01-07 11:36:56","modifiedFileCount":"2","status":"M","submitter":"winifredtamg"},{"authorTime":"2020-04-02 10:39:10","codes":[{"authorDate":"2020-04-02 10:39:10","commitOrder":4,"curCode":"  @Test void testHiveSelectQueryWithOrderByDescAndHighNullsWithVersionGreaterThanOrEq21() {\n    final HiveSqlDialect hive2_1Dialect =\n        new HiveSqlDialect(HiveSqlDialect.DEFAULT_CONTEXT\n            .withDatabaseMajorVersion(2)\n            .withDatabaseMinorVersion(1)\n            .withNullCollation(NullCollation.LOW));\n\n    final HiveSqlDialect hive2_2_Dialect =\n        new HiveSqlDialect(HiveSqlDialect.DEFAULT_CONTEXT\n            .withDatabaseMajorVersion(2)\n            .withDatabaseMinorVersion(2)\n            .withNullCollation(NullCollation.LOW));\n\n    final String query = \"select \\\"product_id\\\" from \\\"product\\\"\\n\"\n        + \"order by \\\"product_id\\\" desc nulls first\";\n    final String expected = \"SELECT product_id\\n\"\n        + \"FROM foodmart.product\\n\"\n        + \"ORDER BY product_id DESC NULLS FIRST\";\n    sql(query).dialect(hive2_1Dialect).ok(expected);\n    sql(query).dialect(hive2_2_Dialect).ok(expected);\n  }\n","date":"2020-04-06 04:57:49","endLine":1688,"groupId":"101549","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testHiveSelectQueryWithOrderByDescAndHighNullsWithVersionGreaterThanOrEq21","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/a7/568223fb7dbbd6fb8b19514d3893973975f662.src","preCode":"  @Test public void testHiveSelectQueryWithOrderByDescAndHighNullsWithVersionGreaterThanOrEq21() {\n    final HiveSqlDialect hive2_1Dialect =\n        new HiveSqlDialect(HiveSqlDialect.DEFAULT_CONTEXT\n            .withDatabaseMajorVersion(2)\n            .withDatabaseMinorVersion(1)\n            .withNullCollation(NullCollation.LOW));\n\n    final HiveSqlDialect hive2_2_Dialect =\n        new HiveSqlDialect(HiveSqlDialect.DEFAULT_CONTEXT\n            .withDatabaseMajorVersion(2)\n            .withDatabaseMinorVersion(2)\n            .withNullCollation(NullCollation.LOW));\n\n    final String query = \"select \\\"product_id\\\" from \\\"product\\\"\\n\"\n        + \"order by \\\"product_id\\\" desc nulls first\";\n    final String expected = \"SELECT product_id\\n\"\n        + \"FROM foodmart.product\\n\"\n        + \"ORDER BY product_id DESC NULLS FIRST\";\n    sql(query).dialect(hive2_1Dialect).ok(expected);\n    sql(query).dialect(hive2_2_Dialect).ok(expected);\n  }\n","realPath":"core/src/test/java/org/apache/calcite/rel/rel2sql/RelToSqlConverterTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":1668,"status":"M"},{"authorDate":"2020-04-02 10:39:10","commitOrder":4,"curCode":"  @Test void testHiveSelectQueryWithOverDescAndHighNullsWithVersionGreaterThanOrEq21() {\n    final HiveSqlDialect hive2_1Dialect =\n            new HiveSqlDialect(SqlDialect.EMPTY_CONTEXT\n                    .withDatabaseMajorVersion(2)\n                    .withDatabaseMinorVersion(1)\n                    .withNullCollation(NullCollation.LOW));\n\n    final HiveSqlDialect hive2_2_Dialect =\n            new HiveSqlDialect(SqlDialect.EMPTY_CONTEXT\n                    .withDatabaseMajorVersion(2)\n                    .withDatabaseMinorVersion(2)\n                    .withNullCollation(NullCollation.LOW));\n\n    final String query = \"SELECT row_number() over \"\n            + \"(order by \\\"hire_date\\\" desc nulls first) FROM \\\"employee\\\"\";\n    final String expected = \"SELECT ROW_NUMBER() OVER (ORDER BY hire_date DESC NULLS FIRST)\\n\"\n            + \"FROM foodmart.employee\";\n    sql(query).dialect(hive2_1Dialect).ok(expected);\n    sql(query).dialect(hive2_2_Dialect).ok(expected);\n  }\n","date":"2020-04-06 04:57:49","endLine":1709,"groupId":"101549","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testHiveSelectQueryWithOverDescAndHighNullsWithVersionGreaterThanOrEq21","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/a7/568223fb7dbbd6fb8b19514d3893973975f662.src","preCode":"  @Test public void testHiveSelectQueryWithOverDescAndHighNullsWithVersionGreaterThanOrEq21() {\n    final HiveSqlDialect hive2_1Dialect =\n            new HiveSqlDialect(SqlDialect.EMPTY_CONTEXT\n                    .withDatabaseMajorVersion(2)\n                    .withDatabaseMinorVersion(1)\n                    .withNullCollation(NullCollation.LOW));\n\n    final HiveSqlDialect hive2_2_Dialect =\n            new HiveSqlDialect(SqlDialect.EMPTY_CONTEXT\n                    .withDatabaseMajorVersion(2)\n                    .withDatabaseMinorVersion(2)\n                    .withNullCollation(NullCollation.LOW));\n\n    final String query = \"SELECT row_number() over \"\n            + \"(order by \\\"hire_date\\\" desc nulls first) FROM \\\"employee\\\"\";\n    final String expected = \"SELECT ROW_NUMBER() OVER (ORDER BY hire_date DESC NULLS FIRST)\\n\"\n            + \"FROM foodmart.employee\";\n    sql(query).dialect(hive2_1Dialect).ok(expected);\n    sql(query).dialect(hive2_2_Dialect).ok(expected);\n  }\n","realPath":"core/src/test/java/org/apache/calcite/rel/rel2sql/RelToSqlConverterTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":1690,"status":"M"}],"commitId":"9492dd4146f63ddc028010d6c4e86f6a5cb29a8d","commitMessage":"@@@[CALCITE-3892] Make junit test classes and methods non-public where possible\n\nPrior to junit 5.  classes and methods had to be public. This is no\nlonger the case.\n\nSome classes need to remain public because they are referenced from\nelsewhere.  or if they use reflection somehow. The remaining 'public'\nkeyword will be informative to maintainers.\n","date":"2020-04-06 04:57:49","modifiedFileCount":"196","status":"M","submitter":"Julian Hyde"}]
