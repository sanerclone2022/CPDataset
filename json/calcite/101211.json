[{"authorTime":"2019-12-24 15:48:25","codes":[{"authorDate":"2019-12-24 15:48:25","commitOrder":1,"curCode":"  @Test public void testTumbleTableFunction() {\n    sql(\"select * from table(\\n\"\n        + \"^tumble(table orders, descriptor(rowtime), interval '2' hour, 'test')^)\")\n        .fails(\"Invalid number of arguments to function 'TUMBLE'. Was expecting 3 arguments\");\n    sql(\"select rowtime, productid, orderid, 'window_start', 'window_end' from table(\\n\"\n        + \"tumble(table orders, descriptor(rowtime), interval '2' hour))\").ok();\n    sql(\"select * from table(\\n\"\n        + \"^tumble(table orders, descriptor(rowtime), 'test')^)\")\n        .fails(\"Cannot apply 'TUMBLE' to arguments of type 'TUMBLE\\\\(<RECORDTYPE\\\\\"\n            + \"(TIMESTAMP\\\\(0\\\\) ROWTIME, INTEGER PRODUCTID, INTEGER ORDERID\\\\)>, <COLUMN_LIST>,\"\n            + \" <CHAR\\\\(4\\\\)>\\\\)'\\\\. Supported form\\\\(s\\\\): TUMBLE\\\\(TABLE \"\n            + \"table_name, DESCRIPTOR\\\\(col1, col2 \\\\.\\\\.\\\\.\\\\), datetime interval\\\\)\");\n    sql(\"select * from table(\\n\"\n        + \"^tumble(table orders, 'test', interval '2' hour)^)\")\n        .fails(\"Cannot apply 'TUMBLE' to arguments of type 'TUMBLE\\\\(<RECORDTYPE\\\\\"\n            + \"(TIMESTAMP\\\\(0\\\\) ROWTIME, INTEGER PRODUCTID, INTEGER ORDERID\\\\)>, <CHAR\\\\\"\n            + \"(4\\\\)>, <INTERVAL HOUR>\\\\)'\\\\. Supported form\\\\(s\\\\): TUMBLE\\\\(TABLE \"\n            + \"table_name, DESCRIPTOR\\\\(col1, col2 \\\\.\\\\.\\\\.\\\\), datetime interval\\\\)\");\n    sql(\"select * from table(\\n\"\n        + \"tumble(TABLE ^tabler_not_exist^, descriptor(rowtime), interval '2' hour))\")\n        .fails(\"Object 'TABLER_NOT_EXIST' not found\");\n  }\n","date":"2020-05-09 20:23:46","endLine":10238,"groupId":"2836","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testTumbleTableFunction","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/24/1898e614ee7815d31284e118ed373e0f48ae4f.src","preCode":"  @Test public void testTumbleTableFunction() {\n    sql(\"select * from table(\\n\"\n        + \"^tumble(table orders, descriptor(rowtime), interval '2' hour, 'test')^)\")\n        .fails(\"Invalid number of arguments to function 'TUMBLE'. Was expecting 3 arguments\");\n    sql(\"select rowtime, productid, orderid, 'window_start', 'window_end' from table(\\n\"\n        + \"tumble(table orders, descriptor(rowtime), interval '2' hour))\").ok();\n    sql(\"select * from table(\\n\"\n        + \"^tumble(table orders, descriptor(rowtime), 'test')^)\")\n        .fails(\"Cannot apply 'TUMBLE' to arguments of type 'TUMBLE\\\\(<RECORDTYPE\\\\\"\n            + \"(TIMESTAMP\\\\(0\\\\) ROWTIME, INTEGER PRODUCTID, INTEGER ORDERID\\\\)>, <COLUMN_LIST>,\"\n            + \" <CHAR\\\\(4\\\\)>\\\\)'\\\\. Supported form\\\\(s\\\\): TUMBLE\\\\(TABLE \"\n            + \"table_name, DESCRIPTOR\\\\(col1, col2 \\\\.\\\\.\\\\.\\\\), datetime interval\\\\)\");\n    sql(\"select * from table(\\n\"\n        + \"^tumble(table orders, 'test', interval '2' hour)^)\")\n        .fails(\"Cannot apply 'TUMBLE' to arguments of type 'TUMBLE\\\\(<RECORDTYPE\\\\\"\n            + \"(TIMESTAMP\\\\(0\\\\) ROWTIME, INTEGER PRODUCTID, INTEGER ORDERID\\\\)>, <CHAR\\\\\"\n            + \"(4\\\\)>, <INTERVAL HOUR>\\\\)'\\\\. Supported form\\\\(s\\\\): TUMBLE\\\\(TABLE \"\n            + \"table_name, DESCRIPTOR\\\\(col1, col2 \\\\.\\\\.\\\\.\\\\), datetime interval\\\\)\");\n    sql(\"select * from table(\\n\"\n        + \"tumble(TABLE ^tabler_not_exist^, descriptor(rowtime), interval '2' hour))\")\n        .fails(\"Object 'TABLER_NOT_EXIST' not found\");\n  }\n","realPath":"core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":10217,"status":"B"},{"authorDate":"2019-12-24 15:48:25","commitOrder":1,"curCode":"  @Test public void testHopTableFunction() {\n    sql(\"select * from table(\\n\"\n        + \"hop(table orders, descriptor(rowtime), interval '2' hour, interval '1' hour))\").ok();\n    sql(\"select * from table(\\n\"\n        + \"^hop(table orders, descriptor(rowtime), interval '2' hour)^)\")\n        .fails(\"Invalid number of arguments to function 'HOP'. Was expecting 4 arguments\");\n    sql(\"select * from table(\\n\"\n        + \"^hop(table orders, descriptor(rowtime), interval '2' hour, 'test')^)\")\n        .fails(\"Cannot apply 'HOP' to arguments of type 'HOP\\\\(<RECORDTYPE\\\\(TIMESTAMP\\\\(0\\\\) \"\n            + \"ROWTIME, INTEGER PRODUCTID, INTEGER ORDERID\\\\)>, <COLUMN_LIST>, <INTERVAL HOUR>, \"\n            + \"<CHAR\\\\(4\\\\)>\\\\)'. Supported form\\\\(s\\\\): HOP\\\\(TABLE table_name, DESCRIPTOR\\\\(\"\n            + \"col1, col2 \\\\.\\\\.\\\\.\\\\), datetime interval, datetime interval\\\\)\");\n    sql(\"select * from table(\\n\"\n        + \"^hop(table orders, descriptor(rowtime), 'test', interval '2' hour)^)\")\n        .fails(\"Cannot apply 'HOP' to arguments of type 'HOP\\\\(<RECORDTYPE\\\\(TIMESTAMP\\\\(0\\\\) \"\n            + \"ROWTIME, INTEGER PRODUCTID, INTEGER ORDERID\\\\)>, <COLUMN_LIST>, <CHAR\\\\(4\\\\)>, \"\n            + \"<INTERVAL HOUR>\\\\)'. Supported form\\\\(s\\\\): HOP\\\\(TABLE table_name, DESCRIPTOR\\\\(\"\n            + \"col1, col2 \\\\.\\\\.\\\\.\\\\), datetime interval, datetime interval\\\\)\");\n    sql(\"select * from table(\\n\"\n        + \"^hop(table orders, 'test', interval '2' hour, interval '2' hour)^)\")\n        .fails(\"Cannot apply 'HOP' to arguments of type 'HOP\\\\(<RECORDTYPE\\\\(TIMESTAMP\\\\(0\\\\) \"\n            + \"ROWTIME, INTEGER PRODUCTID, INTEGER ORDERID\\\\)>, <CHAR\\\\(4\\\\)>, <INTERVAL HOUR>, \"\n            + \"<INTERVAL HOUR>\\\\)'. Supported form\\\\(s\\\\): HOP\\\\(TABLE table_name, DESCRIPTOR\\\\(\"\n            + \"col1, col2 \\\\.\\\\.\\\\.\\\\), datetime interval, datetime interval\\\\)\");\n    sql(\"select * from table(\\n\"\n        + \"hop(TABLE ^tabler_not_exist^, descriptor(rowtime), interval '2' hour, interval '1' hour))\")\n        .fails(\"Object 'TABLER_NOT_EXIST' not found\");\n  }\n","date":"2020-05-09 20:23:46","endLine":10267,"groupId":"1718","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testHopTableFunction","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/24/1898e614ee7815d31284e118ed373e0f48ae4f.src","preCode":"  @Test public void testHopTableFunction() {\n    sql(\"select * from table(\\n\"\n        + \"hop(table orders, descriptor(rowtime), interval '2' hour, interval '1' hour))\").ok();\n    sql(\"select * from table(\\n\"\n        + \"^hop(table orders, descriptor(rowtime), interval '2' hour)^)\")\n        .fails(\"Invalid number of arguments to function 'HOP'. Was expecting 4 arguments\");\n    sql(\"select * from table(\\n\"\n        + \"^hop(table orders, descriptor(rowtime), interval '2' hour, 'test')^)\")\n        .fails(\"Cannot apply 'HOP' to arguments of type 'HOP\\\\(<RECORDTYPE\\\\(TIMESTAMP\\\\(0\\\\) \"\n            + \"ROWTIME, INTEGER PRODUCTID, INTEGER ORDERID\\\\)>, <COLUMN_LIST>, <INTERVAL HOUR>, \"\n            + \"<CHAR\\\\(4\\\\)>\\\\)'. Supported form\\\\(s\\\\): HOP\\\\(TABLE table_name, DESCRIPTOR\\\\(\"\n            + \"col1, col2 \\\\.\\\\.\\\\.\\\\), datetime interval, datetime interval\\\\)\");\n    sql(\"select * from table(\\n\"\n        + \"^hop(table orders, descriptor(rowtime), 'test', interval '2' hour)^)\")\n        .fails(\"Cannot apply 'HOP' to arguments of type 'HOP\\\\(<RECORDTYPE\\\\(TIMESTAMP\\\\(0\\\\) \"\n            + \"ROWTIME, INTEGER PRODUCTID, INTEGER ORDERID\\\\)>, <COLUMN_LIST>, <CHAR\\\\(4\\\\)>, \"\n            + \"<INTERVAL HOUR>\\\\)'. Supported form\\\\(s\\\\): HOP\\\\(TABLE table_name, DESCRIPTOR\\\\(\"\n            + \"col1, col2 \\\\.\\\\.\\\\.\\\\), datetime interval, datetime interval\\\\)\");\n    sql(\"select * from table(\\n\"\n        + \"^hop(table orders, 'test', interval '2' hour, interval '2' hour)^)\")\n        .fails(\"Cannot apply 'HOP' to arguments of type 'HOP\\\\(<RECORDTYPE\\\\(TIMESTAMP\\\\(0\\\\) \"\n            + \"ROWTIME, INTEGER PRODUCTID, INTEGER ORDERID\\\\)>, <CHAR\\\\(4\\\\)>, <INTERVAL HOUR>, \"\n            + \"<INTERVAL HOUR>\\\\)'. Supported form\\\\(s\\\\): HOP\\\\(TABLE table_name, DESCRIPTOR\\\\(\"\n            + \"col1, col2 \\\\.\\\\.\\\\.\\\\), datetime interval, datetime interval\\\\)\");\n    sql(\"select * from table(\\n\"\n        + \"hop(TABLE ^tabler_not_exist^, descriptor(rowtime), interval '2' hour, interval '1' hour))\")\n        .fails(\"Object 'TABLER_NOT_EXIST' not found\");\n  }\n","realPath":"core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":10240,"status":"B"}],"commitId":"40e588de5f999034e5030b12cdbc90f4073808fe","commitMessage":"@@@[CALCITE-3737] HOP Table Function (Rui Wang)\n","date":"2020-05-09 20:23:46","modifiedFileCount":"8","status":"B","submitter":"amaliujia"},{"authorTime":"2020-02-09 14:35:35","codes":[{"authorDate":"2019-12-24 15:48:25","commitOrder":2,"curCode":"  @Test public void testTumbleTableFunction() {\n    sql(\"select * from table(\\n\"\n        + \"^tumble(table orders, descriptor(rowtime), interval '2' hour, 'test')^)\")\n        .fails(\"Invalid number of arguments to function 'TUMBLE'. Was expecting 3 arguments\");\n    sql(\"select rowtime, productid, orderid, 'window_start', 'window_end' from table(\\n\"\n        + \"tumble(table orders, descriptor(rowtime), interval '2' hour))\").ok();\n    sql(\"select * from table(\\n\"\n        + \"^tumble(table orders, descriptor(rowtime), 'test')^)\")\n        .fails(\"Cannot apply 'TUMBLE' to arguments of type 'TUMBLE\\\\(<RECORDTYPE\\\\\"\n            + \"(TIMESTAMP\\\\(0\\\\) ROWTIME, INTEGER PRODUCTID, INTEGER ORDERID\\\\)>, <COLUMN_LIST>,\"\n            + \" <CHAR\\\\(4\\\\)>\\\\)'\\\\. Supported form\\\\(s\\\\): TUMBLE\\\\(TABLE \"\n            + \"table_name, DESCRIPTOR\\\\(col1, col2 \\\\.\\\\.\\\\.\\\\), datetime interval\\\\)\");\n    sql(\"select * from table(\\n\"\n        + \"^tumble(table orders, 'test', interval '2' hour)^)\")\n        .fails(\"Cannot apply 'TUMBLE' to arguments of type 'TUMBLE\\\\(<RECORDTYPE\\\\\"\n            + \"(TIMESTAMP\\\\(0\\\\) ROWTIME, INTEGER PRODUCTID, INTEGER ORDERID\\\\)>, <CHAR\\\\\"\n            + \"(4\\\\)>, <INTERVAL HOUR>\\\\)'\\\\. Supported form\\\\(s\\\\): TUMBLE\\\\(TABLE \"\n            + \"table_name, DESCRIPTOR\\\\(col1, col2 \\\\.\\\\.\\\\.\\\\), datetime interval\\\\)\");\n    sql(\"select * from table(\\n\"\n        + \"tumble(TABLE ^tabler_not_exist^, descriptor(rowtime), interval '2' hour))\")\n        .fails(\"Object 'TABLER_NOT_EXIST' not found\");\n  }\n","date":"2020-05-09 20:23:46","endLine":10238,"groupId":"2836","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testTumbleTableFunction","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/24/1898e614ee7815d31284e118ed373e0f48ae4f.src","preCode":"  @Test public void testTumbleTableFunction() {\n    sql(\"select * from table(\\n\"\n        + \"^tumble(table orders, descriptor(rowtime), interval '2' hour, 'test')^)\")\n        .fails(\"Invalid number of arguments to function 'TUMBLE'. Was expecting 3 arguments\");\n    sql(\"select rowtime, productid, orderid, 'window_start', 'window_end' from table(\\n\"\n        + \"tumble(table orders, descriptor(rowtime), interval '2' hour))\").ok();\n    sql(\"select * from table(\\n\"\n        + \"^tumble(table orders, descriptor(rowtime), 'test')^)\")\n        .fails(\"Cannot apply 'TUMBLE' to arguments of type 'TUMBLE\\\\(<RECORDTYPE\\\\\"\n            + \"(TIMESTAMP\\\\(0\\\\) ROWTIME, INTEGER PRODUCTID, INTEGER ORDERID\\\\)>, <COLUMN_LIST>,\"\n            + \" <CHAR\\\\(4\\\\)>\\\\)'\\\\. Supported form\\\\(s\\\\): TUMBLE\\\\(TABLE \"\n            + \"table_name, DESCRIPTOR\\\\(col1, col2 \\\\.\\\\.\\\\.\\\\), datetime interval\\\\)\");\n    sql(\"select * from table(\\n\"\n        + \"^tumble(table orders, 'test', interval '2' hour)^)\")\n        .fails(\"Cannot apply 'TUMBLE' to arguments of type 'TUMBLE\\\\(<RECORDTYPE\\\\\"\n            + \"(TIMESTAMP\\\\(0\\\\) ROWTIME, INTEGER PRODUCTID, INTEGER ORDERID\\\\)>, <CHAR\\\\\"\n            + \"(4\\\\)>, <INTERVAL HOUR>\\\\)'\\\\. Supported form\\\\(s\\\\): TUMBLE\\\\(TABLE \"\n            + \"table_name, DESCRIPTOR\\\\(col1, col2 \\\\.\\\\.\\\\.\\\\), datetime interval\\\\)\");\n    sql(\"select * from table(\\n\"\n        + \"tumble(TABLE ^tabler_not_exist^, descriptor(rowtime), interval '2' hour))\")\n        .fails(\"Object 'TABLER_NOT_EXIST' not found\");\n  }\n","realPath":"core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":10217,"status":"NB"},{"authorDate":"2020-02-09 14:35:35","commitOrder":2,"curCode":"  @Test public void testHopTableFunction() {\n    sql(\"select * from table(\\n\"\n        + \"hop(table orders, descriptor(rowtime), interval '2' hour, interval '1' hour))\").ok();\n    sql(\"select * from table(\\n\"\n        + \"^hop(table orders, descriptor(rowtime), interval '2' hour)^)\")\n        .fails(\"Invalid number of arguments to function 'HOP'. Was expecting 4 arguments\");\n    sql(\"select * from table(\\n\"\n        + \"^hop(table orders, descriptor(rowtime), interval '2' hour, 'test')^)\")\n        .fails(\"Cannot apply 'HOP' to arguments of type 'HOP\\\\(<RECORDTYPE\\\\(TIMESTAMP\\\\(0\\\\) \"\n            + \"ROWTIME, INTEGER PRODUCTID, INTEGER ORDERID\\\\)>, <COLUMN_LIST>, <INTERVAL HOUR>, \"\n            + \"<CHAR\\\\(4\\\\)>\\\\)'. Supported form\\\\(s\\\\): HOP\\\\(TABLE table_name, DESCRIPTOR\\\\(\"\n            + \"col\\\\), datetime interval, datetime interval\\\\)\");\n    sql(\"select * from table(\\n\"\n        + \"^hop(table orders, descriptor(rowtime), 'test', interval '2' hour)^)\")\n        .fails(\"Cannot apply 'HOP' to arguments of type 'HOP\\\\(<RECORDTYPE\\\\(TIMESTAMP\\\\(0\\\\) \"\n            + \"ROWTIME, INTEGER PRODUCTID, INTEGER ORDERID\\\\)>, <COLUMN_LIST>, <CHAR\\\\(4\\\\)>, \"\n            + \"<INTERVAL HOUR>\\\\)'. Supported form\\\\(s\\\\): HOP\\\\(TABLE table_name, DESCRIPTOR\\\\(\"\n            + \"col\\\\), datetime interval, datetime interval\\\\)\");\n    sql(\"select * from table(\\n\"\n        + \"^hop(table orders, 'test', interval '2' hour, interval '2' hour)^)\")\n        .fails(\"Cannot apply 'HOP' to arguments of type 'HOP\\\\(<RECORDTYPE\\\\(TIMESTAMP\\\\(0\\\\) \"\n            + \"ROWTIME, INTEGER PRODUCTID, INTEGER ORDERID\\\\)>, <CHAR\\\\(4\\\\)>, <INTERVAL HOUR>, \"\n            + \"<INTERVAL HOUR>\\\\)'. Supported form\\\\(s\\\\): HOP\\\\(TABLE table_name, DESCRIPTOR\\\\(\"\n            + \"col\\\\), datetime interval, datetime interval\\\\)\");\n    sql(\"select * from table(\\n\"\n        + \"hop(TABLE ^tabler_not_exist^, descriptor(rowtime), interval '2' hour, interval '1' hour))\")\n        .fails(\"Object 'TABLER_NOT_EXIST' not found\");\n  }\n","date":"2020-05-09 20:23:46","endLine":10267,"groupId":"1718","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testHopTableFunction","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/f1/99035a9f2736b022f47ab5dcc93e03ee674a59.src","preCode":"  @Test public void testHopTableFunction() {\n    sql(\"select * from table(\\n\"\n        + \"hop(table orders, descriptor(rowtime), interval '2' hour, interval '1' hour))\").ok();\n    sql(\"select * from table(\\n\"\n        + \"^hop(table orders, descriptor(rowtime), interval '2' hour)^)\")\n        .fails(\"Invalid number of arguments to function 'HOP'. Was expecting 4 arguments\");\n    sql(\"select * from table(\\n\"\n        + \"^hop(table orders, descriptor(rowtime), interval '2' hour, 'test')^)\")\n        .fails(\"Cannot apply 'HOP' to arguments of type 'HOP\\\\(<RECORDTYPE\\\\(TIMESTAMP\\\\(0\\\\) \"\n            + \"ROWTIME, INTEGER PRODUCTID, INTEGER ORDERID\\\\)>, <COLUMN_LIST>, <INTERVAL HOUR>, \"\n            + \"<CHAR\\\\(4\\\\)>\\\\)'. Supported form\\\\(s\\\\): HOP\\\\(TABLE table_name, DESCRIPTOR\\\\(\"\n            + \"col\\\\), datetime interval, datetime interval\\\\)\");\n    sql(\"select * from table(\\n\"\n        + \"^hop(table orders, descriptor(rowtime), 'test', interval '2' hour)^)\")\n        .fails(\"Cannot apply 'HOP' to arguments of type 'HOP\\\\(<RECORDTYPE\\\\(TIMESTAMP\\\\(0\\\\) \"\n            + \"ROWTIME, INTEGER PRODUCTID, INTEGER ORDERID\\\\)>, <COLUMN_LIST>, <CHAR\\\\(4\\\\)>, \"\n            + \"<INTERVAL HOUR>\\\\)'. Supported form\\\\(s\\\\): HOP\\\\(TABLE table_name, DESCRIPTOR\\\\(\"\n            + \"col\\\\), datetime interval, datetime interval\\\\)\");\n    sql(\"select * from table(\\n\"\n        + \"^hop(table orders, 'test', interval '2' hour, interval '2' hour)^)\")\n        .fails(\"Cannot apply 'HOP' to arguments of type 'HOP\\\\(<RECORDTYPE\\\\(TIMESTAMP\\\\(0\\\\) \"\n            + \"ROWTIME, INTEGER PRODUCTID, INTEGER ORDERID\\\\)>, <CHAR\\\\(4\\\\)>, <INTERVAL HOUR>, \"\n            + \"<INTERVAL HOUR>\\\\)'. Supported form\\\\(s\\\\): HOP\\\\(TABLE table_name, DESCRIPTOR\\\\(\"\n            + \"col\\\\), datetime interval, datetime interval\\\\)\");\n    sql(\"select * from table(\\n\"\n        + \"hop(TABLE ^tabler_not_exist^, descriptor(rowtime), interval '2' hour, interval '1' hour))\")\n        .fails(\"Object 'TABLER_NOT_EXIST' not found\");\n  }\n","realPath":"core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":10240,"status":"MB"}],"commitId":"890eb61efcccc486e2192110cefe4cac5aa6f150","commitMessage":"@@@[CALCITE-3780] SESSION Table function (Rui Wang)\n","date":"2020-05-09 20:23:46","modifiedFileCount":"9","status":"M","submitter":"amaliujia"},{"authorTime":"2020-05-16 12:15:17","codes":[{"authorDate":"2020-05-16 12:15:17","commitOrder":3,"curCode":"  @Test public void testTumbleTableFunction() {\n    sql(\"select * from table(\\n\"\n        + \"^tumble(table orders, descriptor(rowtime))^)\")\n        .fails(\"Invalid number of arguments to function 'TUMBLE'. Was expecting 3 arguments\");\n    sql(\"select rowtime, productid, orderid, 'window_start', 'window_end' from table(\\n\"\n        + \"tumble(table orders, descriptor(rowtime), interval '2' hour))\").ok();\n    sql(\"select rowtime, productid, orderid, 'window_start', 'window_end' from table(\\n\"\n        + \"tumble(table orders, descriptor(rowtime), interval '2' hour, interval '1' hour))\").ok();\n    sql(\"select * from table(\\n\"\n        + \"^tumble(table orders, descriptor(rowtime), 'test')^)\")\n        .fails(\"Cannot apply 'TUMBLE' to arguments of type 'TUMBLE\\\\(<RECORDTYPE\\\\\"\n            + \"(TIMESTAMP\\\\(0\\\\) ROWTIME, INTEGER PRODUCTID, INTEGER ORDERID\\\\)>, <COLUMN_LIST>,\"\n            + \" <CHAR\\\\(4\\\\)>\\\\)'\\\\. Supported form\\\\(s\\\\): TUMBLE\\\\(TABLE \"\n            + \"table_name, DESCRIPTOR\\\\(col1, col2 \\\\.\\\\.\\\\.\\\\), datetime interval\"\n            + \"\\\\[, datetime interval\\\\]\\\\)\");\n    sql(\"select * from table(\\n\"\n        + \"^tumble(table orders, 'test', interval '2' hour)^)\")\n        .fails(\"Cannot apply 'TUMBLE' to arguments of type 'TUMBLE\\\\(<RECORDTYPE\\\\\"\n            + \"(TIMESTAMP\\\\(0\\\\) ROWTIME, INTEGER PRODUCTID, INTEGER ORDERID\\\\)>, <CHAR\\\\\"\n            + \"(4\\\\)>, <INTERVAL HOUR>\\\\)'\\\\. Supported form\\\\(s\\\\): TUMBLE\\\\(TABLE \"\n            + \"table_name, DESCRIPTOR\\\\(col1, col2 \\\\.\\\\.\\\\.\\\\), datetime interval\"\n            + \"\\\\[, datetime interval\\\\]\\\\)\");\n    sql(\"select rowtime, productid, orderid, 'window_start', 'window_end' from table(\\n\"\n        + \"^tumble(table orders, descriptor(rowtime), interval '2' hour, 'test')^)\")\n        .fails(\"Cannot apply 'TUMBLE' to arguments of type 'TUMBLE\\\\(<RECORDTYPE\\\\\"\n            + \"(TIMESTAMP\\\\(0\\\\) ROWTIME, INTEGER PRODUCTID, INTEGER ORDERID\\\\)>, <COLUMN_LIST>,\"\n            + \" <INTERVAL HOUR>, <CHAR\\\\(4\\\\)>\\\\)'\\\\. Supported form\\\\(s\\\\): TUMBLE\\\\(TABLE \"\n            + \"table_name, DESCRIPTOR\\\\(col1, col2 \\\\.\\\\.\\\\.\\\\), datetime interval\"\n            + \"\\\\[, datetime interval\\\\]\\\\)\");\n    sql(\"select * from table(\\n\"\n        + \"tumble(TABLE ^tabler_not_exist^, descriptor(rowtime), interval '2' hour))\")\n        .fails(\"Object 'TABLER_NOT_EXIST' not found\");\n  }\n","date":"2020-07-16 14:09:25","endLine":10258,"groupId":"2836","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testTumbleTableFunction","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/ab/d89b48ce0ab97f95f3646b362707a187e8f23a.src","preCode":"  @Test public void testTumbleTableFunction() {\n    sql(\"select * from table(\\n\"\n        + \"^tumble(table orders, descriptor(rowtime), interval '2' hour, 'test')^)\")\n        .fails(\"Invalid number of arguments to function 'TUMBLE'. Was expecting 3 arguments\");\n    sql(\"select rowtime, productid, orderid, 'window_start', 'window_end' from table(\\n\"\n        + \"tumble(table orders, descriptor(rowtime), interval '2' hour))\").ok();\n    sql(\"select * from table(\\n\"\n        + \"^tumble(table orders, descriptor(rowtime), 'test')^)\")\n        .fails(\"Cannot apply 'TUMBLE' to arguments of type 'TUMBLE\\\\(<RECORDTYPE\\\\\"\n            + \"(TIMESTAMP\\\\(0\\\\) ROWTIME, INTEGER PRODUCTID, INTEGER ORDERID\\\\)>, <COLUMN_LIST>,\"\n            + \" <CHAR\\\\(4\\\\)>\\\\)'\\\\. Supported form\\\\(s\\\\): TUMBLE\\\\(TABLE \"\n            + \"table_name, DESCRIPTOR\\\\(col1, col2 \\\\.\\\\.\\\\.\\\\), datetime interval\\\\)\");\n    sql(\"select * from table(\\n\"\n        + \"^tumble(table orders, 'test', interval '2' hour)^)\")\n        .fails(\"Cannot apply 'TUMBLE' to arguments of type 'TUMBLE\\\\(<RECORDTYPE\\\\\"\n            + \"(TIMESTAMP\\\\(0\\\\) ROWTIME, INTEGER PRODUCTID, INTEGER ORDERID\\\\)>, <CHAR\\\\\"\n            + \"(4\\\\)>, <INTERVAL HOUR>\\\\)'\\\\. Supported form\\\\(s\\\\): TUMBLE\\\\(TABLE \"\n            + \"table_name, DESCRIPTOR\\\\(col1, col2 \\\\.\\\\.\\\\.\\\\), datetime interval\\\\)\");\n    sql(\"select * from table(\\n\"\n        + \"tumble(TABLE ^tabler_not_exist^, descriptor(rowtime), interval '2' hour))\")\n        .fails(\"Object 'TABLER_NOT_EXIST' not found\");\n  }\n","realPath":"core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":10226,"status":"M"},{"authorDate":"2020-05-16 12:15:17","commitOrder":3,"curCode":"  @Test public void testHopTableFunction() {\n    sql(\"select * from table(\\n\"\n        + \"hop(table orders, descriptor(rowtime), interval '2' hour, interval '1' hour))\").ok();\n    sql(\"select * from table(\\n\"\n        + \"hop(table orders, descriptor(rowtime), interval '2' hour, interval '1' hour, \"\n        + \"interval '20' minute))\").ok();\n    sql(\"select * from table(\\n\"\n        + \"^hop(table orders, descriptor(rowtime), interval '2' hour)^)\")\n        .fails(\"Invalid number of arguments to function 'HOP'. Was expecting 4 arguments\");\n    sql(\"select * from table(\\n\"\n        + \"^hop(table orders, descriptor(rowtime), interval '2' hour, 'test')^)\")\n        .fails(\"Cannot apply 'HOP' to arguments of type 'HOP\\\\(<RECORDTYPE\\\\(TIMESTAMP\\\\(0\\\\) \"\n            + \"ROWTIME, INTEGER PRODUCTID, INTEGER ORDERID\\\\)>, <COLUMN_LIST>, <INTERVAL HOUR>, \"\n            + \"<CHAR\\\\(4\\\\)>\\\\)'. Supported form\\\\(s\\\\): HOP\\\\(TABLE table_name, DESCRIPTOR\\\\(\"\n            + \"col\\\\), datetime interval, datetime interval\\\\[, datetime interval\\\\]\\\\)\");\n    sql(\"select * from table(\\n\"\n        + \"^hop(table orders, descriptor(rowtime), 'test', interval '2' hour)^)\")\n        .fails(\"Cannot apply 'HOP' to arguments of type 'HOP\\\\(<RECORDTYPE\\\\(TIMESTAMP\\\\(0\\\\) \"\n            + \"ROWTIME, INTEGER PRODUCTID, INTEGER ORDERID\\\\)>, <COLUMN_LIST>, <CHAR\\\\(4\\\\)>, \"\n            + \"<INTERVAL HOUR>\\\\)'. Supported form\\\\(s\\\\): HOP\\\\(TABLE table_name, DESCRIPTOR\\\\(\"\n            + \"col\\\\), datetime interval, datetime interval\\\\[, datetime interval\\\\]\\\\)\");\n    sql(\"select * from table(\\n\"\n        + \"^hop(table orders, 'test', interval '2' hour, interval '2' hour)^)\")\n        .fails(\"Cannot apply 'HOP' to arguments of type 'HOP\\\\(<RECORDTYPE\\\\(TIMESTAMP\\\\(0\\\\) \"\n            + \"ROWTIME, INTEGER PRODUCTID, INTEGER ORDERID\\\\)>, <CHAR\\\\(4\\\\)>, <INTERVAL HOUR>, \"\n            + \"<INTERVAL HOUR>\\\\)'. Supported form\\\\(s\\\\): HOP\\\\(TABLE table_name, DESCRIPTOR\\\\(\"\n            + \"col\\\\), datetime interval, datetime interval\\\\[, datetime interval\\\\]\\\\)\");\n    sql(\"select * from table(\\n\"\n        + \"^hop(table orders, descriptor(rowtime), interval '2' hour, interval '1' hour, 'test')^)\")\n        .fails(\"Cannot apply 'HOP' to arguments of type 'HOP\\\\(<RECORDTYPE\\\\(TIMESTAMP\\\\(0\\\\) \"\n            + \"ROWTIME, INTEGER PRODUCTID, INTEGER ORDERID\\\\)>, <COLUMN_LIST>, <INTERVAL HOUR>, \"\n            + \"<INTERVAL HOUR>, <CHAR\\\\(4\\\\)>\\\\)'. Supported form\\\\(s\\\\): HOP\\\\(TABLE table_name, \"\n            + \"DESCRIPTOR\\\\(col\\\\), datetime interval, datetime interval\\\\[, datetime interval\\\\]\\\\)\");\n    sql(\"select * from table(\\n\"\n        + \"hop(TABLE ^tabler_not_exist^, descriptor(rowtime), interval '2' hour, interval '1' hour))\")\n        .fails(\"Object 'TABLER_NOT_EXIST' not found\");\n  }\n","date":"2020-07-16 14:09:25","endLine":10296,"groupId":"1718","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testHopTableFunction","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/ab/d89b48ce0ab97f95f3646b362707a187e8f23a.src","preCode":"  @Test public void testHopTableFunction() {\n    sql(\"select * from table(\\n\"\n        + \"hop(table orders, descriptor(rowtime), interval '2' hour, interval '1' hour))\").ok();\n    sql(\"select * from table(\\n\"\n        + \"^hop(table orders, descriptor(rowtime), interval '2' hour)^)\")\n        .fails(\"Invalid number of arguments to function 'HOP'. Was expecting 4 arguments\");\n    sql(\"select * from table(\\n\"\n        + \"^hop(table orders, descriptor(rowtime), interval '2' hour, 'test')^)\")\n        .fails(\"Cannot apply 'HOP' to arguments of type 'HOP\\\\(<RECORDTYPE\\\\(TIMESTAMP\\\\(0\\\\) \"\n            + \"ROWTIME, INTEGER PRODUCTID, INTEGER ORDERID\\\\)>, <COLUMN_LIST>, <INTERVAL HOUR>, \"\n            + \"<CHAR\\\\(4\\\\)>\\\\)'. Supported form\\\\(s\\\\): HOP\\\\(TABLE table_name, DESCRIPTOR\\\\(\"\n            + \"col\\\\), datetime interval, datetime interval\\\\)\");\n    sql(\"select * from table(\\n\"\n        + \"^hop(table orders, descriptor(rowtime), 'test', interval '2' hour)^)\")\n        .fails(\"Cannot apply 'HOP' to arguments of type 'HOP\\\\(<RECORDTYPE\\\\(TIMESTAMP\\\\(0\\\\) \"\n            + \"ROWTIME, INTEGER PRODUCTID, INTEGER ORDERID\\\\)>, <COLUMN_LIST>, <CHAR\\\\(4\\\\)>, \"\n            + \"<INTERVAL HOUR>\\\\)'. Supported form\\\\(s\\\\): HOP\\\\(TABLE table_name, DESCRIPTOR\\\\(\"\n            + \"col\\\\), datetime interval, datetime interval\\\\)\");\n    sql(\"select * from table(\\n\"\n        + \"^hop(table orders, 'test', interval '2' hour, interval '2' hour)^)\")\n        .fails(\"Cannot apply 'HOP' to arguments of type 'HOP\\\\(<RECORDTYPE\\\\(TIMESTAMP\\\\(0\\\\) \"\n            + \"ROWTIME, INTEGER PRODUCTID, INTEGER ORDERID\\\\)>, <CHAR\\\\(4\\\\)>, <INTERVAL HOUR>, \"\n            + \"<INTERVAL HOUR>\\\\)'. Supported form\\\\(s\\\\): HOP\\\\(TABLE table_name, DESCRIPTOR\\\\(\"\n            + \"col\\\\), datetime interval, datetime interval\\\\)\");\n    sql(\"select * from table(\\n\"\n        + \"hop(TABLE ^tabler_not_exist^, descriptor(rowtime), interval '2' hour, interval '1' hour))\")\n        .fails(\"Object 'TABLER_NOT_EXIST' not found\");\n  }\n","realPath":"core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":10260,"status":"M"}],"commitId":"9accb166b50417763a34a1d5664ab23ae12716fd","commitMessage":"@@@[CALCITE-4000] Support OFFSET parameter in TUMBLE/HOP table functions (Rui Wang)\n","date":"2020-07-16 14:09:25","modifiedFileCount":"7","status":"M","submitter":"amaliujia"},{"authorTime":"2020-08-17 13:44:41","codes":[{"authorDate":"2020-08-17 13:44:41","commitOrder":4,"curCode":"  @Test public void testTumbleTableFunction() {\n    sql(\"select rowtime, productid, orderid, 'window_start', 'window_end' from table(\\n\"\n        + \"tumble(table orders, descriptor(rowtime), interval '2' hour))\").ok();\n    sql(\"select rowtime, productid, orderid, 'window_start', 'window_end' from table(\\n\"\n        + \"tumble(table orders, descriptor(rowtime), interval '2' hour, interval '1' hour))\").ok();\n    \r\n    sql(\"select rowtime, productid, orderid, 'window_start', 'window_end'\\n\"\n        + \"from table(\\n\"\n        + \"tumble(\\n\"\n        + \"data => table orders,\\n\"\n        + \"timecol => descriptor(rowtime),\\n\"\n        + \"size => interval '2' hour))\").ok();\n    sql(\"select rowtime, productid, orderid, 'window_start', 'window_end'\\n\"\n        + \"from table(\\n\"\n        + \"tumble(\\n\"\n        + \"data => table orders,\\n\"\n        + \"timecol => descriptor(rowtime),\\n\"\n        + \"size => interval '2' hour,\\n\"\n        + \"\\\"OFFSET\\\" => interval '1' hour))\").ok();\n    \r\n    sql(\"select rowtime, productid, orderid, 'window_start', 'window_end'\\n\"\n        + \"from table(\\n\"\n        + \"tumble(\\n\"\n        + \"^\\\"data\\\"^ => table orders,\\n\"\n        + \"TIMECOL => descriptor(rowtime),\\n\"\n        + \"SIZE => interval '2' hour))\")\n        .fails(\"Param 'data' not found in function 'TUMBLE'; did you mean 'DATA'\\\\?\");\n    sql(\"select rowtime, productid, orderid, 'window_start', 'window_end'\\n\"\n        + \"from table(\\n\"\n        + \"^tumble(\\n\"\n        + \"data => table orders,\\n\"\n        + \"SIZE => interval '2' hour)^)\")\n        .fails(\"Invalid number of arguments to function 'TUMBLE'. Was expecting 3 arguments\");\n    sql(\"select * from table(\\n\"\n        + \"^tumble(table orders, descriptor(rowtime))^)\")\n        .fails(\"Invalid number of arguments to function 'TUMBLE'. Was expecting 3 arguments\");\n    sql(\"select * from table(\\n\"\n        + \"^tumble(table orders, descriptor(rowtime), 'test')^)\")\n        .fails(\"Cannot apply 'TUMBLE' to arguments of type 'TUMBLE\\\\(<RECORDTYPE\\\\\"\n            + \"(TIMESTAMP\\\\(0\\\\) ROWTIME, INTEGER PRODUCTID, INTEGER ORDERID\\\\)>, <COLUMN_LIST>,\"\n            + \" <CHAR\\\\(4\\\\)>\\\\)'\\\\. Supported form\\\\(s\\\\): TUMBLE\\\\(TABLE \"\n            + \"table_name, DESCRIPTOR\\\\(col1, col2 \\\\.\\\\.\\\\.\\\\), datetime interval\"\n            + \"\\\\[, datetime interval\\\\]\\\\)\");\n    sql(\"select * from table(\\n\"\n        + \"^tumble(table orders, 'test', interval '2' hour)^)\")\n        .fails(\"Cannot apply 'TUMBLE' to arguments of type 'TUMBLE\\\\(<RECORDTYPE\\\\\"\n            + \"(TIMESTAMP\\\\(0\\\\) ROWTIME, INTEGER PRODUCTID, INTEGER ORDERID\\\\)>, <CHAR\\\\\"\n            + \"(4\\\\)>, <INTERVAL HOUR>\\\\)'\\\\. Supported form\\\\(s\\\\): TUMBLE\\\\(TABLE \"\n            + \"table_name, DESCRIPTOR\\\\(col1, col2 \\\\.\\\\.\\\\.\\\\), datetime interval\"\n            + \"\\\\[, datetime interval\\\\]\\\\)\");\n    sql(\"select rowtime, productid, orderid, 'window_start', 'window_end' from table(\\n\"\n        + \"^tumble(table orders, descriptor(rowtime), interval '2' hour, 'test')^)\")\n        .fails(\"Cannot apply 'TUMBLE' to arguments of type 'TUMBLE\\\\(<RECORDTYPE\\\\\"\n            + \"(TIMESTAMP\\\\(0\\\\) ROWTIME, INTEGER PRODUCTID, INTEGER ORDERID\\\\)>, <COLUMN_LIST>,\"\n            + \" <INTERVAL HOUR>, <CHAR\\\\(4\\\\)>\\\\)'\\\\. Supported form\\\\(s\\\\): TUMBLE\\\\(TABLE \"\n            + \"table_name, DESCRIPTOR\\\\(col1, col2 \\\\.\\\\.\\\\.\\\\), datetime interval\"\n            + \"\\\\[, datetime interval\\\\]\\\\)\");\n    sql(\"select * from table(\\n\"\n        + \"tumble(TABLE ^tabler_not_exist^, descriptor(rowtime), interval '2' hour))\")\n        .fails(\"Object 'TABLER_NOT_EXIST' not found\");\n  }\n","date":"2020-08-18 16:52:00","endLine":10349,"groupId":"1719","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"testTumbleTableFunction","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/bb/6a82f2065d50217059ff117a4358c1741899f3.src","preCode":"  @Test public void testTumbleTableFunction() {\n    sql(\"select * from table(\\n\"\n        + \"^tumble(table orders, descriptor(rowtime))^)\")\n        .fails(\"Invalid number of arguments to function 'TUMBLE'. Was expecting 3 arguments\");\n    sql(\"select rowtime, productid, orderid, 'window_start', 'window_end' from table(\\n\"\n        + \"tumble(table orders, descriptor(rowtime), interval '2' hour))\").ok();\n    sql(\"select rowtime, productid, orderid, 'window_start', 'window_end' from table(\\n\"\n        + \"tumble(table orders, descriptor(rowtime), interval '2' hour, interval '1' hour))\").ok();\n    sql(\"select * from table(\\n\"\n        + \"^tumble(table orders, descriptor(rowtime), 'test')^)\")\n        .fails(\"Cannot apply 'TUMBLE' to arguments of type 'TUMBLE\\\\(<RECORDTYPE\\\\\"\n            + \"(TIMESTAMP\\\\(0\\\\) ROWTIME, INTEGER PRODUCTID, INTEGER ORDERID\\\\)>, <COLUMN_LIST>,\"\n            + \" <CHAR\\\\(4\\\\)>\\\\)'\\\\. Supported form\\\\(s\\\\): TUMBLE\\\\(TABLE \"\n            + \"table_name, DESCRIPTOR\\\\(col1, col2 \\\\.\\\\.\\\\.\\\\), datetime interval\"\n            + \"\\\\[, datetime interval\\\\]\\\\)\");\n    sql(\"select * from table(\\n\"\n        + \"^tumble(table orders, 'test', interval '2' hour)^)\")\n        .fails(\"Cannot apply 'TUMBLE' to arguments of type 'TUMBLE\\\\(<RECORDTYPE\\\\\"\n            + \"(TIMESTAMP\\\\(0\\\\) ROWTIME, INTEGER PRODUCTID, INTEGER ORDERID\\\\)>, <CHAR\\\\\"\n            + \"(4\\\\)>, <INTERVAL HOUR>\\\\)'\\\\. Supported form\\\\(s\\\\): TUMBLE\\\\(TABLE \"\n            + \"table_name, DESCRIPTOR\\\\(col1, col2 \\\\.\\\\.\\\\.\\\\), datetime interval\"\n            + \"\\\\[, datetime interval\\\\]\\\\)\");\n    sql(\"select rowtime, productid, orderid, 'window_start', 'window_end' from table(\\n\"\n        + \"^tumble(table orders, descriptor(rowtime), interval '2' hour, 'test')^)\")\n        .fails(\"Cannot apply 'TUMBLE' to arguments of type 'TUMBLE\\\\(<RECORDTYPE\\\\\"\n            + \"(TIMESTAMP\\\\(0\\\\) ROWTIME, INTEGER PRODUCTID, INTEGER ORDERID\\\\)>, <COLUMN_LIST>,\"\n            + \" <INTERVAL HOUR>, <CHAR\\\\(4\\\\)>\\\\)'\\\\. Supported form\\\\(s\\\\): TUMBLE\\\\(TABLE \"\n            + \"table_name, DESCRIPTOR\\\\(col1, col2 \\\\.\\\\.\\\\.\\\\), datetime interval\"\n            + \"\\\\[, datetime interval\\\\]\\\\)\");\n    sql(\"select * from table(\\n\"\n        + \"tumble(TABLE ^tabler_not_exist^, descriptor(rowtime), interval '2' hour))\")\n        .fails(\"Object 'TABLER_NOT_EXIST' not found\");\n  }\n","realPath":"core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":10289,"status":"M"},{"authorDate":"2020-08-17 13:44:41","commitOrder":4,"curCode":"  @Test public void testHopTableFunction() {\n    sql(\"select * from table(\\n\"\n        + \"hop(table orders, descriptor(rowtime), interval '2' hour, interval '1' hour))\").ok();\n    sql(\"select * from table(\\n\"\n        + \"hop(table orders, descriptor(rowtime), interval '2' hour, interval '1' hour, \"\n        + \"interval '20' minute))\").ok();\n    \r\n    sql(\"select * from table(\\n\"\n        + \"hop(\\n\"\n        + \"data => table orders,\\n\"\n        + \"timecol => descriptor(rowtime),\\n\"\n        + \"slide => interval '2' hour,\\n\"\n        + \"size => interval '1' hour))\").ok();\n    sql(\"select * from table(\\n\"\n        + \"hop(\\n\"\n        + \"data => table orders,\\n\"\n        + \"timecol => descriptor(rowtime),\\n\"\n        + \"slide => interval '2' hour,\\n\"\n        + \"size => interval '1' hour,\\n\"\n        + \"\\\"OFFSET\\\" => interval '20' minute))\").ok();\n    \r\n    sql(\"select * from table(\\n\"\n        + \"hop(\\n\"\n        + \"^\\\"data\\\"^ => table orders,\\n\"\n        + \"timecol => descriptor(rowtime),\\n\"\n        + \"slide => interval '2' hour,\\n\"\n        + \"size => interval '1' hour))\")\n        .fails(\"Param 'data' not found in function 'HOP'; did you mean 'DATA'\\\\?\");\n    sql(\"select * from table(\\n\"\n        + \"^hop(\\n\"\n        + \"data => table orders,\\n\"\n        + \"slide => interval '2' hour,\\n\"\n        + \"size => interval '1' hour)^)\")\n        .fails(\"Invalid number of arguments to function 'HOP'. Was expecting 4 arguments\");\n    sql(\"select * from table(\\n\"\n        + \"^hop(table orders, descriptor(rowtime), interval '2' hour)^)\")\n        .fails(\"Invalid number of arguments to function 'HOP'. Was expecting 4 arguments\");\n    sql(\"select * from table(\\n\"\n        + \"^hop(table orders, descriptor(rowtime), interval '2' hour, 'test')^)\")\n        .fails(\"Cannot apply 'HOP' to arguments of type 'HOP\\\\(<RECORDTYPE\\\\(TIMESTAMP\\\\(0\\\\) \"\n            + \"ROWTIME, INTEGER PRODUCTID, INTEGER ORDERID\\\\)>, <COLUMN_LIST>, <INTERVAL HOUR>, \"\n            + \"<CHAR\\\\(4\\\\)>\\\\)'. Supported form\\\\(s\\\\): HOP\\\\(TABLE table_name, DESCRIPTOR\\\\(\"\n            + \"timecol\\\\), datetime interval, datetime interval\\\\[, datetime interval\\\\]\\\\)\");\n    sql(\"select * from table(\\n\"\n        + \"^hop(table orders, descriptor(rowtime), 'test', interval '2' hour)^)\")\n        .fails(\"Cannot apply 'HOP' to arguments of type 'HOP\\\\(<RECORDTYPE\\\\(TIMESTAMP\\\\(0\\\\) \"\n            + \"ROWTIME, INTEGER PRODUCTID, INTEGER ORDERID\\\\)>, <COLUMN_LIST>, <CHAR\\\\(4\\\\)>, \"\n            + \"<INTERVAL HOUR>\\\\)'. Supported form\\\\(s\\\\): HOP\\\\(TABLE table_name, DESCRIPTOR\\\\(\"\n            + \"timecol\\\\), datetime interval, datetime interval\\\\[, datetime interval\\\\]\\\\)\");\n    sql(\"select * from table(\\n\"\n        + \"^hop(table orders, 'test', interval '2' hour, interval '2' hour)^)\")\n        .fails(\"Cannot apply 'HOP' to arguments of type 'HOP\\\\(<RECORDTYPE\\\\(TIMESTAMP\\\\(0\\\\) \"\n            + \"ROWTIME, INTEGER PRODUCTID, INTEGER ORDERID\\\\)>, <CHAR\\\\(4\\\\)>, <INTERVAL HOUR>, \"\n            + \"<INTERVAL HOUR>\\\\)'. Supported form\\\\(s\\\\): HOP\\\\(TABLE table_name, DESCRIPTOR\\\\(\"\n            + \"timecol\\\\), datetime interval, datetime interval\\\\[, datetime interval\\\\]\\\\)\");\n    sql(\"select * from table(\\n\"\n        + \"^hop(table orders, descriptor(rowtime), interval '2' hour, interval '1' hour, 'test')^)\")\n        .fails(\"Cannot apply 'HOP' to arguments of type 'HOP\\\\(<RECORDTYPE\\\\(TIMESTAMP\\\\(0\\\\) \"\n            + \"ROWTIME, INTEGER PRODUCTID, INTEGER ORDERID\\\\)>, <COLUMN_LIST>, <INTERVAL HOUR>, \"\n            + \"<INTERVAL HOUR>, <CHAR\\\\(4\\\\)>\\\\)'. Supported form\\\\(s\\\\): HOP\\\\(TABLE table_name, \"\n            + \"DESCRIPTOR\\\\(timecol\\\\), datetime interval, datetime interval\\\\[, datetime interval\\\\]\\\\)\");\n    sql(\"select * from table(\\n\"\n        + \"hop(TABLE ^tabler_not_exist^, descriptor(rowtime), interval '2' hour, interval '1' hour))\")\n        .fails(\"Object 'TABLER_NOT_EXIST' not found\");\n  }\n","date":"2020-08-18 16:52:00","endLine":10415,"groupId":"1718","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"testHopTableFunction","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/bb/6a82f2065d50217059ff117a4358c1741899f3.src","preCode":"  @Test public void testHopTableFunction() {\n    sql(\"select * from table(\\n\"\n        + \"hop(table orders, descriptor(rowtime), interval '2' hour, interval '1' hour))\").ok();\n    sql(\"select * from table(\\n\"\n        + \"hop(table orders, descriptor(rowtime), interval '2' hour, interval '1' hour, \"\n        + \"interval '20' minute))\").ok();\n    sql(\"select * from table(\\n\"\n        + \"^hop(table orders, descriptor(rowtime), interval '2' hour)^)\")\n        .fails(\"Invalid number of arguments to function 'HOP'. Was expecting 4 arguments\");\n    sql(\"select * from table(\\n\"\n        + \"^hop(table orders, descriptor(rowtime), interval '2' hour, 'test')^)\")\n        .fails(\"Cannot apply 'HOP' to arguments of type 'HOP\\\\(<RECORDTYPE\\\\(TIMESTAMP\\\\(0\\\\) \"\n            + \"ROWTIME, INTEGER PRODUCTID, INTEGER ORDERID\\\\)>, <COLUMN_LIST>, <INTERVAL HOUR>, \"\n            + \"<CHAR\\\\(4\\\\)>\\\\)'. Supported form\\\\(s\\\\): HOP\\\\(TABLE table_name, DESCRIPTOR\\\\(\"\n            + \"col\\\\), datetime interval, datetime interval\\\\[, datetime interval\\\\]\\\\)\");\n    sql(\"select * from table(\\n\"\n        + \"^hop(table orders, descriptor(rowtime), 'test', interval '2' hour)^)\")\n        .fails(\"Cannot apply 'HOP' to arguments of type 'HOP\\\\(<RECORDTYPE\\\\(TIMESTAMP\\\\(0\\\\) \"\n            + \"ROWTIME, INTEGER PRODUCTID, INTEGER ORDERID\\\\)>, <COLUMN_LIST>, <CHAR\\\\(4\\\\)>, \"\n            + \"<INTERVAL HOUR>\\\\)'. Supported form\\\\(s\\\\): HOP\\\\(TABLE table_name, DESCRIPTOR\\\\(\"\n            + \"col\\\\), datetime interval, datetime interval\\\\[, datetime interval\\\\]\\\\)\");\n    sql(\"select * from table(\\n\"\n        + \"^hop(table orders, 'test', interval '2' hour, interval '2' hour)^)\")\n        .fails(\"Cannot apply 'HOP' to arguments of type 'HOP\\\\(<RECORDTYPE\\\\(TIMESTAMP\\\\(0\\\\) \"\n            + \"ROWTIME, INTEGER PRODUCTID, INTEGER ORDERID\\\\)>, <CHAR\\\\(4\\\\)>, <INTERVAL HOUR>, \"\n            + \"<INTERVAL HOUR>\\\\)'. Supported form\\\\(s\\\\): HOP\\\\(TABLE table_name, DESCRIPTOR\\\\(\"\n            + \"col\\\\), datetime interval, datetime interval\\\\[, datetime interval\\\\]\\\\)\");\n    sql(\"select * from table(\\n\"\n        + \"^hop(table orders, descriptor(rowtime), interval '2' hour, interval '1' hour, 'test')^)\")\n        .fails(\"Cannot apply 'HOP' to arguments of type 'HOP\\\\(<RECORDTYPE\\\\(TIMESTAMP\\\\(0\\\\) \"\n            + \"ROWTIME, INTEGER PRODUCTID, INTEGER ORDERID\\\\)>, <COLUMN_LIST>, <INTERVAL HOUR>, \"\n            + \"<INTERVAL HOUR>, <CHAR\\\\(4\\\\)>\\\\)'. Supported form\\\\(s\\\\): HOP\\\\(TABLE table_name, \"\n            + \"DESCRIPTOR\\\\(col\\\\), datetime interval, datetime interval\\\\[, datetime interval\\\\]\\\\)\");\n    sql(\"select * from table(\\n\"\n        + \"hop(TABLE ^tabler_not_exist^, descriptor(rowtime), interval '2' hour, interval '1' hour))\")\n        .fails(\"Object 'TABLER_NOT_EXIST' not found\");\n  }\n","realPath":"core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":10351,"status":"M"}],"commitId":"e84f635020a6c3653b4f1456d64edb86efb2fea8","commitMessage":"@@@[CALCITE-4171] Support named parameters for table window functions\n\n* Changes SqlArgumentAssignmentOperator to allow non-scala query as operand\n* In SqlCallBinding.  matches the permuted operand by name with name matcher\n* Refactor SqlWindowTableFunction and its sub-class to reuse same logic\n* Do not patch up the SqlWindowTableFunction with DEFAULTs when sql validation\n","date":"2020-08-18 16:52:00","modifiedFileCount":"11","status":"M","submitter":"yuzhao.cyz"},{"authorTime":"2020-09-22 20:08:53","codes":[{"authorDate":"2020-09-22 20:08:53","commitOrder":5,"curCode":"  @Test public void testTumbleTableFunction() {\n    sql(\"select rowtime, productid, orderid, 'window_start', 'window_end' from table(\\n\"\n        + \"tumble(table orders, descriptor(rowtime), interval '2' hour))\").ok();\n    sql(\"select rowtime, productid, orderid, 'window_start', 'window_end' from table(\\n\"\n        + \"tumble(table orders, descriptor(rowtime), interval '2' hour, interval '1' hour))\").ok();\n    \r\n    sql(\"select rowtime, productid, orderid, 'window_start', 'window_end'\\n\"\n        + \"from table(\\n\"\n        + \"tumble(\\n\"\n        + \"data => table orders,\\n\"\n        + \"timecol => descriptor(rowtime),\\n\"\n        + \"size => interval '2' hour))\").ok();\n    sql(\"select rowtime, productid, orderid, 'window_start', 'window_end'\\n\"\n        + \"from table(\\n\"\n        + \"tumble(\\n\"\n        + \"data => table orders,\\n\"\n        + \"timecol => descriptor(rowtime),\\n\"\n        + \"size => interval '2' hour,\\n\"\n        + \"\\\"OFFSET\\\" => interval '1' hour))\").ok();\n    \r\n    sql(\"select rowtime, productid, orderid, 'window_start', 'window_end'\\n\"\n        + \"from table(\\n\"\n        + \"^tumble(table orders, descriptor(productid), interval '2' hour)^)\")\n        .fails(\"Cannot apply 'TUMBLE' to arguments of type 'TUMBLE\\\\(<RECORDTYPE\\\\\"\n            + \"(TIMESTAMP\\\\(0\\\\) ROWTIME, INTEGER PRODUCTID, INTEGER ORDERID\\\\)>, <COLUMN_LIST>, \"\n            + \"<INTERVAL HOUR>\\\\)'\\\\. Supported form\\\\(s\\\\): TUMBLE\\\\(TABLE table_name, \"\n            + \"DESCRIPTOR\\\\(col1, col2 \\\\.\\\\.\\\\.\\\\), datetime interval\\\\[, datetime interval\\\\]\\\\)\");\n    sql(\"select rowtime, productid, orderid, 'window_start', 'window_end'\\n\"\n        + \"from table(\\n\"\n        + \"^tumble(\\n\"\n        + \"data => table orders,\\n\"\n        + \"timecol => descriptor(productid),\\n\"\n        + \"size => interval '2' hour)^)\")\n        .fails(\"Cannot apply 'TUMBLE' to arguments of type 'TUMBLE\\\\(<RECORDTYPE\\\\\"\n            + \"(TIMESTAMP\\\\(0\\\\) ROWTIME, INTEGER PRODUCTID, INTEGER ORDERID\\\\)>, <COLUMN_LIST>, \"\n            + \"<INTERVAL HOUR>\\\\)'\\\\. Supported form\\\\(s\\\\): TUMBLE\\\\(TABLE table_name, \"\n            + \"DESCRIPTOR\\\\(col1, col2 \\\\.\\\\.\\\\.\\\\), datetime interval\\\\[, datetime interval\\\\]\\\\)\");\n    sql(\"select rowtime, productid, orderid, 'window_start', 'window_end'\\n\"\n        + \"from table(\\n\"\n        + \"tumble(\\n\"\n        + \"^\\\"data\\\"^ => table orders,\\n\"\n        + \"TIMECOL => descriptor(rowtime),\\n\"\n        + \"SIZE => interval '2' hour))\")\n        .fails(\"Param 'data' not found in function 'TUMBLE'; did you mean 'DATA'\\\\?\");\n    sql(\"select rowtime, productid, orderid, 'window_start', 'window_end'\\n\"\n        + \"from table(\\n\"\n        + \"^tumble(\\n\"\n        + \"data => table orders,\\n\"\n        + \"SIZE => interval '2' hour)^)\")\n        .fails(\"Invalid number of arguments to function 'TUMBLE'. Was expecting 3 arguments\");\n    sql(\"select * from table(\\n\"\n        + \"^tumble(table orders, descriptor(rowtime))^)\")\n        .fails(\"Invalid number of arguments to function 'TUMBLE'. Was expecting 3 arguments\");\n    sql(\"select * from table(\\n\"\n        + \"^tumble(table orders, descriptor(rowtime), 'test')^)\")\n        .fails(\"Cannot apply 'TUMBLE' to arguments of type 'TUMBLE\\\\(<RECORDTYPE\\\\\"\n            + \"(TIMESTAMP\\\\(0\\\\) ROWTIME, INTEGER PRODUCTID, INTEGER ORDERID\\\\)>, <COLUMN_LIST>,\"\n            + \" <CHAR\\\\(4\\\\)>\\\\)'\\\\. Supported form\\\\(s\\\\): TUMBLE\\\\(TABLE \"\n            + \"table_name, DESCRIPTOR\\\\(col1, col2 \\\\.\\\\.\\\\.\\\\), datetime interval\"\n            + \"\\\\[, datetime interval\\\\]\\\\)\");\n    sql(\"select * from table(\\n\"\n        + \"^tumble(table orders, 'test', interval '2' hour)^)\")\n        .fails(\"Cannot apply 'TUMBLE' to arguments of type 'TUMBLE\\\\(<RECORDTYPE\\\\\"\n            + \"(TIMESTAMP\\\\(0\\\\) ROWTIME, INTEGER PRODUCTID, INTEGER ORDERID\\\\)>, <CHAR\\\\\"\n            + \"(4\\\\)>, <INTERVAL HOUR>\\\\)'\\\\. Supported form\\\\(s\\\\): TUMBLE\\\\(TABLE \"\n            + \"table_name, DESCRIPTOR\\\\(col1, col2 \\\\.\\\\.\\\\.\\\\), datetime interval\"\n            + \"\\\\[, datetime interval\\\\]\\\\)\");\n    sql(\"select rowtime, productid, orderid, 'window_start', 'window_end' from table(\\n\"\n        + \"^tumble(table orders, descriptor(rowtime), interval '2' hour, 'test')^)\")\n        .fails(\"Cannot apply 'TUMBLE' to arguments of type 'TUMBLE\\\\(<RECORDTYPE\\\\\"\n            + \"(TIMESTAMP\\\\(0\\\\) ROWTIME, INTEGER PRODUCTID, INTEGER ORDERID\\\\)>, <COLUMN_LIST>,\"\n            + \" <INTERVAL HOUR>, <CHAR\\\\(4\\\\)>\\\\)'\\\\. Supported form\\\\(s\\\\): TUMBLE\\\\(TABLE \"\n            + \"table_name, DESCRIPTOR\\\\(col1, col2 \\\\.\\\\.\\\\.\\\\), datetime interval\"\n            + \"\\\\[, datetime interval\\\\]\\\\)\");\n    sql(\"select * from table(\\n\"\n        + \"tumble(TABLE ^tabler_not_exist^, descriptor(rowtime), interval '2' hour))\")\n        .fails(\"Object 'TABLER_NOT_EXIST' not found\");\n  }\n","date":"2020-09-28 01:45:06","endLine":10452,"groupId":"1719","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"testTumbleTableFunction","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/8b/1fdb0084dfc58dd176882fa670a05f3871215e.src","preCode":"  @Test public void testTumbleTableFunction() {\n    sql(\"select rowtime, productid, orderid, 'window_start', 'window_end' from table(\\n\"\n        + \"tumble(table orders, descriptor(rowtime), interval '2' hour))\").ok();\n    sql(\"select rowtime, productid, orderid, 'window_start', 'window_end' from table(\\n\"\n        + \"tumble(table orders, descriptor(rowtime), interval '2' hour, interval '1' hour))\").ok();\n    \r\n    sql(\"select rowtime, productid, orderid, 'window_start', 'window_end'\\n\"\n        + \"from table(\\n\"\n        + \"tumble(\\n\"\n        + \"data => table orders,\\n\"\n        + \"timecol => descriptor(rowtime),\\n\"\n        + \"size => interval '2' hour))\").ok();\n    sql(\"select rowtime, productid, orderid, 'window_start', 'window_end'\\n\"\n        + \"from table(\\n\"\n        + \"tumble(\\n\"\n        + \"data => table orders,\\n\"\n        + \"timecol => descriptor(rowtime),\\n\"\n        + \"size => interval '2' hour,\\n\"\n        + \"\\\"OFFSET\\\" => interval '1' hour))\").ok();\n    \r\n    sql(\"select rowtime, productid, orderid, 'window_start', 'window_end'\\n\"\n        + \"from table(\\n\"\n        + \"tumble(\\n\"\n        + \"^\\\"data\\\"^ => table orders,\\n\"\n        + \"TIMECOL => descriptor(rowtime),\\n\"\n        + \"SIZE => interval '2' hour))\")\n        .fails(\"Param 'data' not found in function 'TUMBLE'; did you mean 'DATA'\\\\?\");\n    sql(\"select rowtime, productid, orderid, 'window_start', 'window_end'\\n\"\n        + \"from table(\\n\"\n        + \"^tumble(\\n\"\n        + \"data => table orders,\\n\"\n        + \"SIZE => interval '2' hour)^)\")\n        .fails(\"Invalid number of arguments to function 'TUMBLE'. Was expecting 3 arguments\");\n    sql(\"select * from table(\\n\"\n        + \"^tumble(table orders, descriptor(rowtime))^)\")\n        .fails(\"Invalid number of arguments to function 'TUMBLE'. Was expecting 3 arguments\");\n    sql(\"select * from table(\\n\"\n        + \"^tumble(table orders, descriptor(rowtime), 'test')^)\")\n        .fails(\"Cannot apply 'TUMBLE' to arguments of type 'TUMBLE\\\\(<RECORDTYPE\\\\\"\n            + \"(TIMESTAMP\\\\(0\\\\) ROWTIME, INTEGER PRODUCTID, INTEGER ORDERID\\\\)>, <COLUMN_LIST>,\"\n            + \" <CHAR\\\\(4\\\\)>\\\\)'\\\\. Supported form\\\\(s\\\\): TUMBLE\\\\(TABLE \"\n            + \"table_name, DESCRIPTOR\\\\(col1, col2 \\\\.\\\\.\\\\.\\\\), datetime interval\"\n            + \"\\\\[, datetime interval\\\\]\\\\)\");\n    sql(\"select * from table(\\n\"\n        + \"^tumble(table orders, 'test', interval '2' hour)^)\")\n        .fails(\"Cannot apply 'TUMBLE' to arguments of type 'TUMBLE\\\\(<RECORDTYPE\\\\\"\n            + \"(TIMESTAMP\\\\(0\\\\) ROWTIME, INTEGER PRODUCTID, INTEGER ORDERID\\\\)>, <CHAR\\\\\"\n            + \"(4\\\\)>, <INTERVAL HOUR>\\\\)'\\\\. Supported form\\\\(s\\\\): TUMBLE\\\\(TABLE \"\n            + \"table_name, DESCRIPTOR\\\\(col1, col2 \\\\.\\\\.\\\\.\\\\), datetime interval\"\n            + \"\\\\[, datetime interval\\\\]\\\\)\");\n    sql(\"select rowtime, productid, orderid, 'window_start', 'window_end' from table(\\n\"\n        + \"^tumble(table orders, descriptor(rowtime), interval '2' hour, 'test')^)\")\n        .fails(\"Cannot apply 'TUMBLE' to arguments of type 'TUMBLE\\\\(<RECORDTYPE\\\\\"\n            + \"(TIMESTAMP\\\\(0\\\\) ROWTIME, INTEGER PRODUCTID, INTEGER ORDERID\\\\)>, <COLUMN_LIST>,\"\n            + \" <INTERVAL HOUR>, <CHAR\\\\(4\\\\)>\\\\)'\\\\. Supported form\\\\(s\\\\): TUMBLE\\\\(TABLE \"\n            + \"table_name, DESCRIPTOR\\\\(col1, col2 \\\\.\\\\.\\\\.\\\\), datetime interval\"\n            + \"\\\\[, datetime interval\\\\]\\\\)\");\n    sql(\"select * from table(\\n\"\n        + \"tumble(TABLE ^tabler_not_exist^, descriptor(rowtime), interval '2' hour))\")\n        .fails(\"Object 'TABLER_NOT_EXIST' not found\");\n  }\n","realPath":"core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":10375,"status":"M"},{"authorDate":"2020-09-22 20:08:53","commitOrder":5,"curCode":"  @Test public void testHopTableFunction() {\n    sql(\"select * from table(\\n\"\n        + \"hop(table orders, descriptor(rowtime), interval '2' hour, interval '1' hour))\").ok();\n    sql(\"select * from table(\\n\"\n        + \"hop(table orders, descriptor(rowtime), interval '2' hour, interval '1' hour, \"\n        + \"interval '20' minute))\").ok();\n    \r\n    sql(\"select * from table(\\n\"\n        + \"hop(\\n\"\n        + \"data => table orders,\\n\"\n        + \"timecol => descriptor(rowtime),\\n\"\n        + \"slide => interval '2' hour,\\n\"\n        + \"size => interval '1' hour))\").ok();\n    sql(\"select * from table(\\n\"\n        + \"hop(\\n\"\n        + \"data => table orders,\\n\"\n        + \"timecol => descriptor(rowtime),\\n\"\n        + \"slide => interval '2' hour,\\n\"\n        + \"size => interval '1' hour,\\n\"\n        + \"\\\"OFFSET\\\" => interval '20' minute))\").ok();\n    \r\n    sql(\"select rowtime, productid, orderid, 'window_start', 'window_end'\\n\"\n        + \"from table(\\n\"\n        + \"^hop(table orders, descriptor(productid), interval '2' hour, interval '1' hour)^)\")\n        .fails(\"Cannot apply 'HOP' to arguments of type 'HOP\\\\(<RECORDTYPE\\\\\"\n            + \"(TIMESTAMP\\\\(0\\\\) ROWTIME, INTEGER PRODUCTID, INTEGER ORDERID\\\\)>, <COLUMN_LIST>, \"\n            + \"<INTERVAL HOUR>, <INTERVAL HOUR>\\\\)'\\\\. Supported form\\\\(s\\\\): \"\n            + \"HOP\\\\(TABLE table_name, DESCRIPTOR\\\\(timecol\\\\), \"\n            + \"datetime interval, datetime interval\\\\[, datetime interval\\\\]\\\\)\");\n    sql(\"select rowtime, productid, orderid, 'window_start', 'window_end'\\n\"\n        + \"from table(\\n\"\n        + \"^hop(\\n\"\n        + \"data => table orders,\\n\"\n        + \"timecol => descriptor(productid),\\n\"\n        + \"size => interval '2' hour,\\n\"\n        + \"slide => interval '1' hour)^)\")\n        .fails(\"Cannot apply 'HOP' to arguments of type 'HOP\\\\(<RECORDTYPE\\\\\"\n            + \"(TIMESTAMP\\\\(0\\\\) ROWTIME, INTEGER PRODUCTID, INTEGER ORDERID\\\\)>, <COLUMN_LIST>, \"\n            + \"<INTERVAL HOUR>, <INTERVAL HOUR>\\\\)'\\\\. Supported form\\\\(s\\\\): \"\n            + \"HOP\\\\(TABLE table_name, DESCRIPTOR\\\\(timecol\\\\), \"\n            + \"datetime interval, datetime interval\\\\[, datetime interval\\\\]\\\\)\");\n    sql(\"select * from table(\\n\"\n        + \"hop(\\n\"\n        + \"^\\\"data\\\"^ => table orders,\\n\"\n        + \"timecol => descriptor(rowtime),\\n\"\n        + \"slide => interval '2' hour,\\n\"\n        + \"size => interval '1' hour))\")\n        .fails(\"Param 'data' not found in function 'HOP'; did you mean 'DATA'\\\\?\");\n    sql(\"select * from table(\\n\"\n        + \"^hop(\\n\"\n        + \"data => table orders,\\n\"\n        + \"slide => interval '2' hour,\\n\"\n        + \"size => interval '1' hour)^)\")\n        .fails(\"Invalid number of arguments to function 'HOP'. Was expecting 4 arguments\");\n    sql(\"select * from table(\\n\"\n        + \"^hop(table orders, descriptor(rowtime), interval '2' hour)^)\")\n        .fails(\"Invalid number of arguments to function 'HOP'. Was expecting 4 arguments\");\n    sql(\"select * from table(\\n\"\n        + \"^hop(table orders, descriptor(rowtime), interval '2' hour, 'test')^)\")\n        .fails(\"Cannot apply 'HOP' to arguments of type 'HOP\\\\(<RECORDTYPE\\\\(TIMESTAMP\\\\(0\\\\) \"\n            + \"ROWTIME, INTEGER PRODUCTID, INTEGER ORDERID\\\\)>, <COLUMN_LIST>, <INTERVAL HOUR>, \"\n            + \"<CHAR\\\\(4\\\\)>\\\\)'. Supported form\\\\(s\\\\): HOP\\\\(TABLE table_name, DESCRIPTOR\\\\(\"\n            + \"timecol\\\\), datetime interval, datetime interval\\\\[, datetime interval\\\\]\\\\)\");\n    sql(\"select * from table(\\n\"\n        + \"^hop(table orders, descriptor(rowtime), 'test', interval '2' hour)^)\")\n        .fails(\"Cannot apply 'HOP' to arguments of type 'HOP\\\\(<RECORDTYPE\\\\(TIMESTAMP\\\\(0\\\\) \"\n            + \"ROWTIME, INTEGER PRODUCTID, INTEGER ORDERID\\\\)>, <COLUMN_LIST>, <CHAR\\\\(4\\\\)>, \"\n            + \"<INTERVAL HOUR>\\\\)'. Supported form\\\\(s\\\\): HOP\\\\(TABLE table_name, DESCRIPTOR\\\\(\"\n            + \"timecol\\\\), datetime interval, datetime interval\\\\[, datetime interval\\\\]\\\\)\");\n    sql(\"select * from table(\\n\"\n        + \"^hop(table orders, 'test', interval '2' hour, interval '2' hour)^)\")\n        .fails(\"Cannot apply 'HOP' to arguments of type 'HOP\\\\(<RECORDTYPE\\\\(TIMESTAMP\\\\(0\\\\) \"\n            + \"ROWTIME, INTEGER PRODUCTID, INTEGER ORDERID\\\\)>, <CHAR\\\\(4\\\\)>, <INTERVAL HOUR>, \"\n            + \"<INTERVAL HOUR>\\\\)'. Supported form\\\\(s\\\\): HOP\\\\(TABLE table_name, DESCRIPTOR\\\\(\"\n            + \"timecol\\\\), datetime interval, datetime interval\\\\[, datetime interval\\\\]\\\\)\");\n    sql(\"select * from table(\\n\"\n        + \"^hop(table orders, descriptor(rowtime), interval '2' hour, interval '1' hour, 'test')^)\")\n        .fails(\"Cannot apply 'HOP' to arguments of type 'HOP\\\\(<RECORDTYPE\\\\(TIMESTAMP\\\\(0\\\\) \"\n            + \"ROWTIME, INTEGER PRODUCTID, INTEGER ORDERID\\\\)>, <COLUMN_LIST>, <INTERVAL HOUR>, \"\n            + \"<INTERVAL HOUR>, <CHAR\\\\(4\\\\)>\\\\)'. Supported form\\\\(s\\\\): HOP\\\\(TABLE table_name, \"\n            + \"DESCRIPTOR\\\\(timecol\\\\), datetime interval, datetime interval\\\\[, datetime interval\\\\]\\\\)\");\n    sql(\"select * from table(\\n\"\n        + \"hop(TABLE ^tabler_not_exist^, descriptor(rowtime), interval '2' hour, interval '1' hour))\")\n        .fails(\"Object 'TABLER_NOT_EXIST' not found\");\n  }\n","date":"2020-09-28 01:45:06","endLine":10538,"groupId":"1718","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"testHopTableFunction","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/8b/1fdb0084dfc58dd176882fa670a05f3871215e.src","preCode":"  @Test public void testHopTableFunction() {\n    sql(\"select * from table(\\n\"\n        + \"hop(table orders, descriptor(rowtime), interval '2' hour, interval '1' hour))\").ok();\n    sql(\"select * from table(\\n\"\n        + \"hop(table orders, descriptor(rowtime), interval '2' hour, interval '1' hour, \"\n        + \"interval '20' minute))\").ok();\n    \r\n    sql(\"select * from table(\\n\"\n        + \"hop(\\n\"\n        + \"data => table orders,\\n\"\n        + \"timecol => descriptor(rowtime),\\n\"\n        + \"slide => interval '2' hour,\\n\"\n        + \"size => interval '1' hour))\").ok();\n    sql(\"select * from table(\\n\"\n        + \"hop(\\n\"\n        + \"data => table orders,\\n\"\n        + \"timecol => descriptor(rowtime),\\n\"\n        + \"slide => interval '2' hour,\\n\"\n        + \"size => interval '1' hour,\\n\"\n        + \"\\\"OFFSET\\\" => interval '20' minute))\").ok();\n    \r\n    sql(\"select * from table(\\n\"\n        + \"hop(\\n\"\n        + \"^\\\"data\\\"^ => table orders,\\n\"\n        + \"timecol => descriptor(rowtime),\\n\"\n        + \"slide => interval '2' hour,\\n\"\n        + \"size => interval '1' hour))\")\n        .fails(\"Param 'data' not found in function 'HOP'; did you mean 'DATA'\\\\?\");\n    sql(\"select * from table(\\n\"\n        + \"^hop(\\n\"\n        + \"data => table orders,\\n\"\n        + \"slide => interval '2' hour,\\n\"\n        + \"size => interval '1' hour)^)\")\n        .fails(\"Invalid number of arguments to function 'HOP'. Was expecting 4 arguments\");\n    sql(\"select * from table(\\n\"\n        + \"^hop(table orders, descriptor(rowtime), interval '2' hour)^)\")\n        .fails(\"Invalid number of arguments to function 'HOP'. Was expecting 4 arguments\");\n    sql(\"select * from table(\\n\"\n        + \"^hop(table orders, descriptor(rowtime), interval '2' hour, 'test')^)\")\n        .fails(\"Cannot apply 'HOP' to arguments of type 'HOP\\\\(<RECORDTYPE\\\\(TIMESTAMP\\\\(0\\\\) \"\n            + \"ROWTIME, INTEGER PRODUCTID, INTEGER ORDERID\\\\)>, <COLUMN_LIST>, <INTERVAL HOUR>, \"\n            + \"<CHAR\\\\(4\\\\)>\\\\)'. Supported form\\\\(s\\\\): HOP\\\\(TABLE table_name, DESCRIPTOR\\\\(\"\n            + \"timecol\\\\), datetime interval, datetime interval\\\\[, datetime interval\\\\]\\\\)\");\n    sql(\"select * from table(\\n\"\n        + \"^hop(table orders, descriptor(rowtime), 'test', interval '2' hour)^)\")\n        .fails(\"Cannot apply 'HOP' to arguments of type 'HOP\\\\(<RECORDTYPE\\\\(TIMESTAMP\\\\(0\\\\) \"\n            + \"ROWTIME, INTEGER PRODUCTID, INTEGER ORDERID\\\\)>, <COLUMN_LIST>, <CHAR\\\\(4\\\\)>, \"\n            + \"<INTERVAL HOUR>\\\\)'. Supported form\\\\(s\\\\): HOP\\\\(TABLE table_name, DESCRIPTOR\\\\(\"\n            + \"timecol\\\\), datetime interval, datetime interval\\\\[, datetime interval\\\\]\\\\)\");\n    sql(\"select * from table(\\n\"\n        + \"^hop(table orders, 'test', interval '2' hour, interval '2' hour)^)\")\n        .fails(\"Cannot apply 'HOP' to arguments of type 'HOP\\\\(<RECORDTYPE\\\\(TIMESTAMP\\\\(0\\\\) \"\n            + \"ROWTIME, INTEGER PRODUCTID, INTEGER ORDERID\\\\)>, <CHAR\\\\(4\\\\)>, <INTERVAL HOUR>, \"\n            + \"<INTERVAL HOUR>\\\\)'. Supported form\\\\(s\\\\): HOP\\\\(TABLE table_name, DESCRIPTOR\\\\(\"\n            + \"timecol\\\\), datetime interval, datetime interval\\\\[, datetime interval\\\\]\\\\)\");\n    sql(\"select * from table(\\n\"\n        + \"^hop(table orders, descriptor(rowtime), interval '2' hour, interval '1' hour, 'test')^)\")\n        .fails(\"Cannot apply 'HOP' to arguments of type 'HOP\\\\(<RECORDTYPE\\\\(TIMESTAMP\\\\(0\\\\) \"\n            + \"ROWTIME, INTEGER PRODUCTID, INTEGER ORDERID\\\\)>, <COLUMN_LIST>, <INTERVAL HOUR>, \"\n            + \"<INTERVAL HOUR>, <CHAR\\\\(4\\\\)>\\\\)'. Supported form\\\\(s\\\\): HOP\\\\(TABLE table_name, \"\n            + \"DESCRIPTOR\\\\(timecol\\\\), datetime interval, datetime interval\\\\[, datetime interval\\\\]\\\\)\");\n    sql(\"select * from table(\\n\"\n        + \"hop(TABLE ^tabler_not_exist^, descriptor(rowtime), interval '2' hour, interval '1' hour))\")\n        .fails(\"Object 'TABLER_NOT_EXIST' not found\");\n  }\n","realPath":"core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":10454,"status":"M"}],"commitId":"d701495640df77992b43093422e9331de103d9fd","commitMessage":"@@@[CALCITE-4176] Key descriptor can be optional in SESSION table function\n\nFix style\n\nFix style\n\nAdding tests to check time column for TUMBLE/HOP table function\n\nFix style\n","date":"2020-09-28 01:45:06","modifiedFileCount":"5","status":"M","submitter":"davonliu"},{"authorTime":"2020-09-22 20:08:53","codes":[{"authorDate":"2020-09-28 12:55:18","commitOrder":6,"curCode":"  @Test public void testTumbleTableFunction() {\n    sql(\"select rowtime, productid, orderid, 'window_start', 'window_end' from table(\\n\"\n        + \"tumble(table orders, descriptor(rowtime), interval '2' hour))\").ok();\n    sql(\"select rowtime, productid, orderid, 'window_start', 'window_end' from table(\\n\"\n        + \"tumble(table orders, descriptor(rowtime), interval '2' hour, interval '1' hour))\").ok();\n    \r\n    sql(\"select rowtime, productid, orderid, 'window_start', 'window_end'\\n\"\n        + \"from table(\\n\"\n        + \"tumble(\\n\"\n        + \"data => table orders,\\n\"\n        + \"timecol => descriptor(rowtime),\\n\"\n        + \"size => interval '2' hour))\").ok();\n    sql(\"select rowtime, productid, orderid, 'window_start', 'window_end'\\n\"\n        + \"from table(\\n\"\n        + \"tumble(\\n\"\n        + \"data => table orders,\\n\"\n        + \"timecol => descriptor(rowtime),\\n\"\n        + \"size => interval '2' hour,\\n\"\n        + \"\\\"OFFSET\\\" => interval '1' hour))\").ok();\n    \r\n    sql(\"select rowtime, productid, orderid, 'window_start', 'window_end'\\n\"\n        + \"from table(\\n\"\n        + \"^tumble(table orders, descriptor(productid), interval '2' hour)^)\")\n        .fails(\"Cannot apply 'TUMBLE' to arguments of type 'TUMBLE\\\\(<RECORDTYPE\\\\\"\n            + \"(TIMESTAMP\\\\(0\\\\) ROWTIME, INTEGER PRODUCTID, INTEGER ORDERID\\\\)>, <COLUMN_LIST>, \"\n            + \"<INTERVAL HOUR>\\\\)'\\\\. Supported form\\\\(s\\\\): TUMBLE\\\\(TABLE table_name, \"\n            + \"DESCRIPTOR\\\\(timecol\\\\), datetime interval\\\\[, datetime interval\\\\]\\\\)\");\n    sql(\"select rowtime, productid, orderid, 'window_start', 'window_end'\\n\"\n        + \"from table(\\n\"\n        + \"^tumble(\\n\"\n        + \"data => table orders,\\n\"\n        + \"timecol => descriptor(productid),\\n\"\n        + \"size => interval '2' hour)^)\")\n        .fails(\"Cannot apply 'TUMBLE' to arguments of type 'TUMBLE\\\\(<RECORDTYPE\\\\\"\n            + \"(TIMESTAMP\\\\(0\\\\) ROWTIME, INTEGER PRODUCTID, INTEGER ORDERID\\\\)>, <COLUMN_LIST>, \"\n            + \"<INTERVAL HOUR>\\\\)'\\\\. Supported form\\\\(s\\\\): TUMBLE\\\\(TABLE table_name, \"\n            + \"DESCRIPTOR\\\\(timecol\\\\), datetime interval\\\\[, datetime interval\\\\]\\\\)\");\n    sql(\"select rowtime, productid, orderid, 'window_start', 'window_end'\\n\"\n        + \"from table(\\n\"\n        + \"tumble(\\n\"\n        + \"^\\\"data\\\"^ => table orders,\\n\"\n        + \"TIMECOL => descriptor(rowtime),\\n\"\n        + \"SIZE => interval '2' hour))\")\n        .fails(\"Param 'data' not found in function 'TUMBLE'; did you mean 'DATA'\\\\?\");\n    sql(\"select rowtime, productid, orderid, 'window_start', 'window_end'\\n\"\n        + \"from table(\\n\"\n        + \"^tumble(\\n\"\n        + \"data => table orders,\\n\"\n        + \"SIZE => interval '2' hour)^)\")\n        .fails(\"Invalid number of arguments to function 'TUMBLE'. Was expecting 3 arguments\");\n    sql(\"select * from table(\\n\"\n        + \"^tumble(table orders, descriptor(rowtime))^)\")\n        .fails(\"Invalid number of arguments to function 'TUMBLE'. Was expecting 3 arguments\");\n    sql(\"select * from table(\\n\"\n        + \"^tumble(table orders, descriptor(rowtime), 'test')^)\")\n        .fails(\"Cannot apply 'TUMBLE' to arguments of type 'TUMBLE\\\\(<RECORDTYPE\\\\\"\n            + \"(TIMESTAMP\\\\(0\\\\) ROWTIME, INTEGER PRODUCTID, INTEGER ORDERID\\\\)>, <COLUMN_LIST>,\"\n            + \" <CHAR\\\\(4\\\\)>\\\\)'\\\\. Supported form\\\\(s\\\\): TUMBLE\\\\(TABLE \"\n            + \"table_name, DESCRIPTOR\\\\(timecol\\\\), datetime interval\"\n            + \"\\\\[, datetime interval\\\\]\\\\)\");\n    sql(\"select * from table(\\n\"\n        + \"^tumble(table orders, 'test', interval '2' hour)^)\")\n        .fails(\"Cannot apply 'TUMBLE' to arguments of type 'TUMBLE\\\\(<RECORDTYPE\\\\\"\n            + \"(TIMESTAMP\\\\(0\\\\) ROWTIME, INTEGER PRODUCTID, INTEGER ORDERID\\\\)>, <CHAR\\\\\"\n            + \"(4\\\\)>, <INTERVAL HOUR>\\\\)'\\\\. Supported form\\\\(s\\\\): TUMBLE\\\\(TABLE \"\n            + \"table_name, DESCRIPTOR\\\\(timecol\\\\), datetime interval\"\n            + \"\\\\[, datetime interval\\\\]\\\\)\");\n    sql(\"select rowtime, productid, orderid, 'window_start', 'window_end' from table(\\n\"\n        + \"^tumble(table orders, descriptor(rowtime), interval '2' hour, 'test')^)\")\n        .fails(\"Cannot apply 'TUMBLE' to arguments of type 'TUMBLE\\\\(<RECORDTYPE\\\\\"\n            + \"(TIMESTAMP\\\\(0\\\\) ROWTIME, INTEGER PRODUCTID, INTEGER ORDERID\\\\)>, <COLUMN_LIST>,\"\n            + \" <INTERVAL HOUR>, <CHAR\\\\(4\\\\)>\\\\)'\\\\. Supported form\\\\(s\\\\): TUMBLE\\\\(TABLE \"\n            + \"table_name, DESCRIPTOR\\\\(timecol\\\\), datetime interval\"\n            + \"\\\\[, datetime interval\\\\]\\\\)\");\n    sql(\"select * from table(\\n\"\n        + \"tumble(TABLE ^tabler_not_exist^, descriptor(rowtime), interval '2' hour))\")\n        .fails(\"Object 'TABLER_NOT_EXIST' not found\");\n  }\n","date":"2020-09-29 02:00:03","endLine":10452,"groupId":"101211","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"testTumbleTableFunction","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/96/a7d40c145b82fc3992c4f8500ee5765550fe93.src","preCode":"  @Test public void testTumbleTableFunction() {\n    sql(\"select rowtime, productid, orderid, 'window_start', 'window_end' from table(\\n\"\n        + \"tumble(table orders, descriptor(rowtime), interval '2' hour))\").ok();\n    sql(\"select rowtime, productid, orderid, 'window_start', 'window_end' from table(\\n\"\n        + \"tumble(table orders, descriptor(rowtime), interval '2' hour, interval '1' hour))\").ok();\n    \r\n    sql(\"select rowtime, productid, orderid, 'window_start', 'window_end'\\n\"\n        + \"from table(\\n\"\n        + \"tumble(\\n\"\n        + \"data => table orders,\\n\"\n        + \"timecol => descriptor(rowtime),\\n\"\n        + \"size => interval '2' hour))\").ok();\n    sql(\"select rowtime, productid, orderid, 'window_start', 'window_end'\\n\"\n        + \"from table(\\n\"\n        + \"tumble(\\n\"\n        + \"data => table orders,\\n\"\n        + \"timecol => descriptor(rowtime),\\n\"\n        + \"size => interval '2' hour,\\n\"\n        + \"\\\"OFFSET\\\" => interval '1' hour))\").ok();\n    \r\n    sql(\"select rowtime, productid, orderid, 'window_start', 'window_end'\\n\"\n        + \"from table(\\n\"\n        + \"^tumble(table orders, descriptor(productid), interval '2' hour)^)\")\n        .fails(\"Cannot apply 'TUMBLE' to arguments of type 'TUMBLE\\\\(<RECORDTYPE\\\\\"\n            + \"(TIMESTAMP\\\\(0\\\\) ROWTIME, INTEGER PRODUCTID, INTEGER ORDERID\\\\)>, <COLUMN_LIST>, \"\n            + \"<INTERVAL HOUR>\\\\)'\\\\. Supported form\\\\(s\\\\): TUMBLE\\\\(TABLE table_name, \"\n            + \"DESCRIPTOR\\\\(col1, col2 \\\\.\\\\.\\\\.\\\\), datetime interval\\\\[, datetime interval\\\\]\\\\)\");\n    sql(\"select rowtime, productid, orderid, 'window_start', 'window_end'\\n\"\n        + \"from table(\\n\"\n        + \"^tumble(\\n\"\n        + \"data => table orders,\\n\"\n        + \"timecol => descriptor(productid),\\n\"\n        + \"size => interval '2' hour)^)\")\n        .fails(\"Cannot apply 'TUMBLE' to arguments of type 'TUMBLE\\\\(<RECORDTYPE\\\\\"\n            + \"(TIMESTAMP\\\\(0\\\\) ROWTIME, INTEGER PRODUCTID, INTEGER ORDERID\\\\)>, <COLUMN_LIST>, \"\n            + \"<INTERVAL HOUR>\\\\)'\\\\. Supported form\\\\(s\\\\): TUMBLE\\\\(TABLE table_name, \"\n            + \"DESCRIPTOR\\\\(col1, col2 \\\\.\\\\.\\\\.\\\\), datetime interval\\\\[, datetime interval\\\\]\\\\)\");\n    sql(\"select rowtime, productid, orderid, 'window_start', 'window_end'\\n\"\n        + \"from table(\\n\"\n        + \"tumble(\\n\"\n        + \"^\\\"data\\\"^ => table orders,\\n\"\n        + \"TIMECOL => descriptor(rowtime),\\n\"\n        + \"SIZE => interval '2' hour))\")\n        .fails(\"Param 'data' not found in function 'TUMBLE'; did you mean 'DATA'\\\\?\");\n    sql(\"select rowtime, productid, orderid, 'window_start', 'window_end'\\n\"\n        + \"from table(\\n\"\n        + \"^tumble(\\n\"\n        + \"data => table orders,\\n\"\n        + \"SIZE => interval '2' hour)^)\")\n        .fails(\"Invalid number of arguments to function 'TUMBLE'. Was expecting 3 arguments\");\n    sql(\"select * from table(\\n\"\n        + \"^tumble(table orders, descriptor(rowtime))^)\")\n        .fails(\"Invalid number of arguments to function 'TUMBLE'. Was expecting 3 arguments\");\n    sql(\"select * from table(\\n\"\n        + \"^tumble(table orders, descriptor(rowtime), 'test')^)\")\n        .fails(\"Cannot apply 'TUMBLE' to arguments of type 'TUMBLE\\\\(<RECORDTYPE\\\\\"\n            + \"(TIMESTAMP\\\\(0\\\\) ROWTIME, INTEGER PRODUCTID, INTEGER ORDERID\\\\)>, <COLUMN_LIST>,\"\n            + \" <CHAR\\\\(4\\\\)>\\\\)'\\\\. Supported form\\\\(s\\\\): TUMBLE\\\\(TABLE \"\n            + \"table_name, DESCRIPTOR\\\\(col1, col2 \\\\.\\\\.\\\\.\\\\), datetime interval\"\n            + \"\\\\[, datetime interval\\\\]\\\\)\");\n    sql(\"select * from table(\\n\"\n        + \"^tumble(table orders, 'test', interval '2' hour)^)\")\n        .fails(\"Cannot apply 'TUMBLE' to arguments of type 'TUMBLE\\\\(<RECORDTYPE\\\\\"\n            + \"(TIMESTAMP\\\\(0\\\\) ROWTIME, INTEGER PRODUCTID, INTEGER ORDERID\\\\)>, <CHAR\\\\\"\n            + \"(4\\\\)>, <INTERVAL HOUR>\\\\)'\\\\. Supported form\\\\(s\\\\): TUMBLE\\\\(TABLE \"\n            + \"table_name, DESCRIPTOR\\\\(col1, col2 \\\\.\\\\.\\\\.\\\\), datetime interval\"\n            + \"\\\\[, datetime interval\\\\]\\\\)\");\n    sql(\"select rowtime, productid, orderid, 'window_start', 'window_end' from table(\\n\"\n        + \"^tumble(table orders, descriptor(rowtime), interval '2' hour, 'test')^)\")\n        .fails(\"Cannot apply 'TUMBLE' to arguments of type 'TUMBLE\\\\(<RECORDTYPE\\\\\"\n            + \"(TIMESTAMP\\\\(0\\\\) ROWTIME, INTEGER PRODUCTID, INTEGER ORDERID\\\\)>, <COLUMN_LIST>,\"\n            + \" <INTERVAL HOUR>, <CHAR\\\\(4\\\\)>\\\\)'\\\\. Supported form\\\\(s\\\\): TUMBLE\\\\(TABLE \"\n            + \"table_name, DESCRIPTOR\\\\(col1, col2 \\\\.\\\\.\\\\.\\\\), datetime interval\"\n            + \"\\\\[, datetime interval\\\\]\\\\)\");\n    sql(\"select * from table(\\n\"\n        + \"tumble(TABLE ^tabler_not_exist^, descriptor(rowtime), interval '2' hour))\")\n        .fails(\"Object 'TABLER_NOT_EXIST' not found\");\n  }\n","realPath":"core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":10375,"status":"M"},{"authorDate":"2020-09-22 20:08:53","commitOrder":6,"curCode":"  @Test public void testHopTableFunction() {\n    sql(\"select * from table(\\n\"\n        + \"hop(table orders, descriptor(rowtime), interval '2' hour, interval '1' hour))\").ok();\n    sql(\"select * from table(\\n\"\n        + \"hop(table orders, descriptor(rowtime), interval '2' hour, interval '1' hour, \"\n        + \"interval '20' minute))\").ok();\n    \r\n    sql(\"select * from table(\\n\"\n        + \"hop(\\n\"\n        + \"data => table orders,\\n\"\n        + \"timecol => descriptor(rowtime),\\n\"\n        + \"slide => interval '2' hour,\\n\"\n        + \"size => interval '1' hour))\").ok();\n    sql(\"select * from table(\\n\"\n        + \"hop(\\n\"\n        + \"data => table orders,\\n\"\n        + \"timecol => descriptor(rowtime),\\n\"\n        + \"slide => interval '2' hour,\\n\"\n        + \"size => interval '1' hour,\\n\"\n        + \"\\\"OFFSET\\\" => interval '20' minute))\").ok();\n    \r\n    sql(\"select rowtime, productid, orderid, 'window_start', 'window_end'\\n\"\n        + \"from table(\\n\"\n        + \"^hop(table orders, descriptor(productid), interval '2' hour, interval '1' hour)^)\")\n        .fails(\"Cannot apply 'HOP' to arguments of type 'HOP\\\\(<RECORDTYPE\\\\\"\n            + \"(TIMESTAMP\\\\(0\\\\) ROWTIME, INTEGER PRODUCTID, INTEGER ORDERID\\\\)>, <COLUMN_LIST>, \"\n            + \"<INTERVAL HOUR>, <INTERVAL HOUR>\\\\)'\\\\. Supported form\\\\(s\\\\): \"\n            + \"HOP\\\\(TABLE table_name, DESCRIPTOR\\\\(timecol\\\\), \"\n            + \"datetime interval, datetime interval\\\\[, datetime interval\\\\]\\\\)\");\n    sql(\"select rowtime, productid, orderid, 'window_start', 'window_end'\\n\"\n        + \"from table(\\n\"\n        + \"^hop(\\n\"\n        + \"data => table orders,\\n\"\n        + \"timecol => descriptor(productid),\\n\"\n        + \"size => interval '2' hour,\\n\"\n        + \"slide => interval '1' hour)^)\")\n        .fails(\"Cannot apply 'HOP' to arguments of type 'HOP\\\\(<RECORDTYPE\\\\\"\n            + \"(TIMESTAMP\\\\(0\\\\) ROWTIME, INTEGER PRODUCTID, INTEGER ORDERID\\\\)>, <COLUMN_LIST>, \"\n            + \"<INTERVAL HOUR>, <INTERVAL HOUR>\\\\)'\\\\. Supported form\\\\(s\\\\): \"\n            + \"HOP\\\\(TABLE table_name, DESCRIPTOR\\\\(timecol\\\\), \"\n            + \"datetime interval, datetime interval\\\\[, datetime interval\\\\]\\\\)\");\n    sql(\"select * from table(\\n\"\n        + \"hop(\\n\"\n        + \"^\\\"data\\\"^ => table orders,\\n\"\n        + \"timecol => descriptor(rowtime),\\n\"\n        + \"slide => interval '2' hour,\\n\"\n        + \"size => interval '1' hour))\")\n        .fails(\"Param 'data' not found in function 'HOP'; did you mean 'DATA'\\\\?\");\n    sql(\"select * from table(\\n\"\n        + \"^hop(\\n\"\n        + \"data => table orders,\\n\"\n        + \"slide => interval '2' hour,\\n\"\n        + \"size => interval '1' hour)^)\")\n        .fails(\"Invalid number of arguments to function 'HOP'. Was expecting 4 arguments\");\n    sql(\"select * from table(\\n\"\n        + \"^hop(table orders, descriptor(rowtime), interval '2' hour)^)\")\n        .fails(\"Invalid number of arguments to function 'HOP'. Was expecting 4 arguments\");\n    sql(\"select * from table(\\n\"\n        + \"^hop(table orders, descriptor(rowtime), interval '2' hour, 'test')^)\")\n        .fails(\"Cannot apply 'HOP' to arguments of type 'HOP\\\\(<RECORDTYPE\\\\(TIMESTAMP\\\\(0\\\\) \"\n            + \"ROWTIME, INTEGER PRODUCTID, INTEGER ORDERID\\\\)>, <COLUMN_LIST>, <INTERVAL HOUR>, \"\n            + \"<CHAR\\\\(4\\\\)>\\\\)'. Supported form\\\\(s\\\\): HOP\\\\(TABLE table_name, DESCRIPTOR\\\\(\"\n            + \"timecol\\\\), datetime interval, datetime interval\\\\[, datetime interval\\\\]\\\\)\");\n    sql(\"select * from table(\\n\"\n        + \"^hop(table orders, descriptor(rowtime), 'test', interval '2' hour)^)\")\n        .fails(\"Cannot apply 'HOP' to arguments of type 'HOP\\\\(<RECORDTYPE\\\\(TIMESTAMP\\\\(0\\\\) \"\n            + \"ROWTIME, INTEGER PRODUCTID, INTEGER ORDERID\\\\)>, <COLUMN_LIST>, <CHAR\\\\(4\\\\)>, \"\n            + \"<INTERVAL HOUR>\\\\)'. Supported form\\\\(s\\\\): HOP\\\\(TABLE table_name, DESCRIPTOR\\\\(\"\n            + \"timecol\\\\), datetime interval, datetime interval\\\\[, datetime interval\\\\]\\\\)\");\n    sql(\"select * from table(\\n\"\n        + \"^hop(table orders, 'test', interval '2' hour, interval '2' hour)^)\")\n        .fails(\"Cannot apply 'HOP' to arguments of type 'HOP\\\\(<RECORDTYPE\\\\(TIMESTAMP\\\\(0\\\\) \"\n            + \"ROWTIME, INTEGER PRODUCTID, INTEGER ORDERID\\\\)>, <CHAR\\\\(4\\\\)>, <INTERVAL HOUR>, \"\n            + \"<INTERVAL HOUR>\\\\)'. Supported form\\\\(s\\\\): HOP\\\\(TABLE table_name, DESCRIPTOR\\\\(\"\n            + \"timecol\\\\), datetime interval, datetime interval\\\\[, datetime interval\\\\]\\\\)\");\n    sql(\"select * from table(\\n\"\n        + \"^hop(table orders, descriptor(rowtime), interval '2' hour, interval '1' hour, 'test')^)\")\n        .fails(\"Cannot apply 'HOP' to arguments of type 'HOP\\\\(<RECORDTYPE\\\\(TIMESTAMP\\\\(0\\\\) \"\n            + \"ROWTIME, INTEGER PRODUCTID, INTEGER ORDERID\\\\)>, <COLUMN_LIST>, <INTERVAL HOUR>, \"\n            + \"<INTERVAL HOUR>, <CHAR\\\\(4\\\\)>\\\\)'. Supported form\\\\(s\\\\): HOP\\\\(TABLE table_name, \"\n            + \"DESCRIPTOR\\\\(timecol\\\\), datetime interval, datetime interval\\\\[, datetime interval\\\\]\\\\)\");\n    sql(\"select * from table(\\n\"\n        + \"hop(TABLE ^tabler_not_exist^, descriptor(rowtime), interval '2' hour, interval '1' hour))\")\n        .fails(\"Object 'TABLER_NOT_EXIST' not found\");\n  }\n","date":"2020-09-28 01:45:06","endLine":10538,"groupId":"101211","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"testHopTableFunction","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/8b/1fdb0084dfc58dd176882fa670a05f3871215e.src","preCode":"  @Test public void testHopTableFunction() {\n    sql(\"select * from table(\\n\"\n        + \"hop(table orders, descriptor(rowtime), interval '2' hour, interval '1' hour))\").ok();\n    sql(\"select * from table(\\n\"\n        + \"hop(table orders, descriptor(rowtime), interval '2' hour, interval '1' hour, \"\n        + \"interval '20' minute))\").ok();\n    \r\n    sql(\"select * from table(\\n\"\n        + \"hop(\\n\"\n        + \"data => table orders,\\n\"\n        + \"timecol => descriptor(rowtime),\\n\"\n        + \"slide => interval '2' hour,\\n\"\n        + \"size => interval '1' hour))\").ok();\n    sql(\"select * from table(\\n\"\n        + \"hop(\\n\"\n        + \"data => table orders,\\n\"\n        + \"timecol => descriptor(rowtime),\\n\"\n        + \"slide => interval '2' hour,\\n\"\n        + \"size => interval '1' hour,\\n\"\n        + \"\\\"OFFSET\\\" => interval '20' minute))\").ok();\n    \r\n    sql(\"select rowtime, productid, orderid, 'window_start', 'window_end'\\n\"\n        + \"from table(\\n\"\n        + \"^hop(table orders, descriptor(productid), interval '2' hour, interval '1' hour)^)\")\n        .fails(\"Cannot apply 'HOP' to arguments of type 'HOP\\\\(<RECORDTYPE\\\\\"\n            + \"(TIMESTAMP\\\\(0\\\\) ROWTIME, INTEGER PRODUCTID, INTEGER ORDERID\\\\)>, <COLUMN_LIST>, \"\n            + \"<INTERVAL HOUR>, <INTERVAL HOUR>\\\\)'\\\\. Supported form\\\\(s\\\\): \"\n            + \"HOP\\\\(TABLE table_name, DESCRIPTOR\\\\(timecol\\\\), \"\n            + \"datetime interval, datetime interval\\\\[, datetime interval\\\\]\\\\)\");\n    sql(\"select rowtime, productid, orderid, 'window_start', 'window_end'\\n\"\n        + \"from table(\\n\"\n        + \"^hop(\\n\"\n        + \"data => table orders,\\n\"\n        + \"timecol => descriptor(productid),\\n\"\n        + \"size => interval '2' hour,\\n\"\n        + \"slide => interval '1' hour)^)\")\n        .fails(\"Cannot apply 'HOP' to arguments of type 'HOP\\\\(<RECORDTYPE\\\\\"\n            + \"(TIMESTAMP\\\\(0\\\\) ROWTIME, INTEGER PRODUCTID, INTEGER ORDERID\\\\)>, <COLUMN_LIST>, \"\n            + \"<INTERVAL HOUR>, <INTERVAL HOUR>\\\\)'\\\\. Supported form\\\\(s\\\\): \"\n            + \"HOP\\\\(TABLE table_name, DESCRIPTOR\\\\(timecol\\\\), \"\n            + \"datetime interval, datetime interval\\\\[, datetime interval\\\\]\\\\)\");\n    sql(\"select * from table(\\n\"\n        + \"hop(\\n\"\n        + \"^\\\"data\\\"^ => table orders,\\n\"\n        + \"timecol => descriptor(rowtime),\\n\"\n        + \"slide => interval '2' hour,\\n\"\n        + \"size => interval '1' hour))\")\n        .fails(\"Param 'data' not found in function 'HOP'; did you mean 'DATA'\\\\?\");\n    sql(\"select * from table(\\n\"\n        + \"^hop(\\n\"\n        + \"data => table orders,\\n\"\n        + \"slide => interval '2' hour,\\n\"\n        + \"size => interval '1' hour)^)\")\n        .fails(\"Invalid number of arguments to function 'HOP'. Was expecting 4 arguments\");\n    sql(\"select * from table(\\n\"\n        + \"^hop(table orders, descriptor(rowtime), interval '2' hour)^)\")\n        .fails(\"Invalid number of arguments to function 'HOP'. Was expecting 4 arguments\");\n    sql(\"select * from table(\\n\"\n        + \"^hop(table orders, descriptor(rowtime), interval '2' hour, 'test')^)\")\n        .fails(\"Cannot apply 'HOP' to arguments of type 'HOP\\\\(<RECORDTYPE\\\\(TIMESTAMP\\\\(0\\\\) \"\n            + \"ROWTIME, INTEGER PRODUCTID, INTEGER ORDERID\\\\)>, <COLUMN_LIST>, <INTERVAL HOUR>, \"\n            + \"<CHAR\\\\(4\\\\)>\\\\)'. Supported form\\\\(s\\\\): HOP\\\\(TABLE table_name, DESCRIPTOR\\\\(\"\n            + \"timecol\\\\), datetime interval, datetime interval\\\\[, datetime interval\\\\]\\\\)\");\n    sql(\"select * from table(\\n\"\n        + \"^hop(table orders, descriptor(rowtime), 'test', interval '2' hour)^)\")\n        .fails(\"Cannot apply 'HOP' to arguments of type 'HOP\\\\(<RECORDTYPE\\\\(TIMESTAMP\\\\(0\\\\) \"\n            + \"ROWTIME, INTEGER PRODUCTID, INTEGER ORDERID\\\\)>, <COLUMN_LIST>, <CHAR\\\\(4\\\\)>, \"\n            + \"<INTERVAL HOUR>\\\\)'. Supported form\\\\(s\\\\): HOP\\\\(TABLE table_name, DESCRIPTOR\\\\(\"\n            + \"timecol\\\\), datetime interval, datetime interval\\\\[, datetime interval\\\\]\\\\)\");\n    sql(\"select * from table(\\n\"\n        + \"^hop(table orders, 'test', interval '2' hour, interval '2' hour)^)\")\n        .fails(\"Cannot apply 'HOP' to arguments of type 'HOP\\\\(<RECORDTYPE\\\\(TIMESTAMP\\\\(0\\\\) \"\n            + \"ROWTIME, INTEGER PRODUCTID, INTEGER ORDERID\\\\)>, <CHAR\\\\(4\\\\)>, <INTERVAL HOUR>, \"\n            + \"<INTERVAL HOUR>\\\\)'. Supported form\\\\(s\\\\): HOP\\\\(TABLE table_name, DESCRIPTOR\\\\(\"\n            + \"timecol\\\\), datetime interval, datetime interval\\\\[, datetime interval\\\\]\\\\)\");\n    sql(\"select * from table(\\n\"\n        + \"^hop(table orders, descriptor(rowtime), interval '2' hour, interval '1' hour, 'test')^)\")\n        .fails(\"Cannot apply 'HOP' to arguments of type 'HOP\\\\(<RECORDTYPE\\\\(TIMESTAMP\\\\(0\\\\) \"\n            + \"ROWTIME, INTEGER PRODUCTID, INTEGER ORDERID\\\\)>, <COLUMN_LIST>, <INTERVAL HOUR>, \"\n            + \"<INTERVAL HOUR>, <CHAR\\\\(4\\\\)>\\\\)'. Supported form\\\\(s\\\\): HOP\\\\(TABLE table_name, \"\n            + \"DESCRIPTOR\\\\(timecol\\\\), datetime interval, datetime interval\\\\[, datetime interval\\\\]\\\\)\");\n    sql(\"select * from table(\\n\"\n        + \"hop(TABLE ^tabler_not_exist^, descriptor(rowtime), interval '2' hour, interval '1' hour))\")\n        .fails(\"Object 'TABLER_NOT_EXIST' not found\");\n  }\n","realPath":"core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":10454,"status":"N"}],"commitId":"00f2dbacb7675b65fa19fe7cfe6f446687f92f8f","commitMessage":"@@@[CALCITE-4289] Fix wrong signature message in SqlTumbleWindowFunction\n","date":"2020-09-29 02:00:03","modifiedFileCount":"2","status":"M","submitter":"davonliu"}]
