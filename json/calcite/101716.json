[{"authorTime":"2020-05-30 01:18:41","codes":[{"authorDate":"2014-11-14 09:39:29","commitOrder":2,"curCode":"  protected List<RexNode> visitList(\n      List<? extends RexNode> exprs, boolean[] update) {\n    ImmutableList.Builder<RexNode> clonedOperands = ImmutableList.builder();\n    for (RexNode operand : exprs) {\n      RexNode clonedOperand = operand.accept(this);\n      if ((clonedOperand != operand) && (update != null)) {\n        update[0] = true;\n      }\n      clonedOperands.add(clonedOperand);\n    }\n    return clonedOperands.build();\n  }\n","date":"2014-11-14 09:39:34","endLine":136,"groupId":"13712","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"visitList","params":"(List<?extendsRexNode>exprs@boolean[]update)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/96/49b62b7fd0c28f7a234840d7e8fc912e7d6f6d.src","preCode":"  protected List<RexNode> visitList(\n      List<? extends RexNode> exprs, boolean[] update) {\n    ImmutableList.Builder<RexNode> clonedOperands = ImmutableList.builder();\n    for (RexNode operand : exprs) {\n      RexNode clonedOperand = operand.accept(this);\n      if ((clonedOperand != operand) && (update != null)) {\n        update[0] = true;\n      }\n      clonedOperands.add(clonedOperand);\n    }\n    return clonedOperands.build();\n  }\n","realPath":"core/src/main/java/org/apache/calcite/rex/RexShuttle.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":125,"status":"NB"},{"authorDate":"2020-05-30 01:18:41","commitOrder":2,"curCode":"    @Override protected List<RexNode> visitList(List<? extends RexNode> exprs,\n        boolean[] update) {\n      ImmutableList.Builder<RexNode> clonedOperands = ImmutableList.builder();\n      for (RexNode operand : exprs) {\n        RexNode clonedOperand = visit(operand);\n        if ((clonedOperand != operand) && (update != null)) {\n          update[0] = true;\n        }\n        clonedOperands.add(clonedOperand);\n      }\n      return clonedOperands.build();\n    }\n","date":"2020-06-12 02:23:07","endLine":261,"groupId":"4456","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"visitList","params":"(List<?extendsRexNode>exprs@boolean[]update)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/59/3a7c83a55007bc6c4725d81a87806d37dcde98.src","preCode":"    @Override protected List<RexNode> visitList(List<? extends RexNode> exprs,\n        boolean[] update) {\n      ImmutableList.Builder<RexNode> clonedOperands = ImmutableList.builder();\n      for (RexNode operand : exprs) {\n        RexNode clonedOperand = visit(operand);\n        if ((clonedOperand != operand) && (update != null)) {\n          update[0] = true;\n        }\n        clonedOperands.add(clonedOperand);\n      }\n      return clonedOperands.build();\n    }\n","realPath":"core/src/main/java/org/apache/calcite/rel/rules/ProjectFilterTransposeRule.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":250,"status":"B"}],"commitId":"eb22c01867a54cbe521a69725608351491f971ca","commitMessage":"@@@[CALCITE-3975] Add options to ProjectFilterTransposeRule to push down project and filter expressions whole.  not just field references\n\nClose apache/calcite#1999\n","date":"2020-06-12 02:23:07","modifiedFileCount":"3","status":"M","submitter":"Julian Hyde"},{"authorTime":"2020-05-29 00:04:40","codes":[{"authorDate":"2020-05-29 00:04:40","commitOrder":3,"curCode":"  protected List<RexNode> visitList(\n      List<? extends RexNode> exprs, boolean @Nullable [] update) {\n    ImmutableList.Builder<RexNode> clonedOperands = ImmutableList.builder();\n    for (RexNode operand : exprs) {\n      RexNode clonedOperand = operand.accept(this);\n      if ((clonedOperand != operand) && (update != null)) {\n        update[0] = true;\n      }\n      clonedOperands.add(clonedOperand);\n    }\n    return clonedOperands.build();\n  }\n","date":"2020-11-30 06:45:33","endLine":168,"groupId":"101716","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"visitList","params":"(List<?extendsRexNode>exprs@boolean@Nullable[]update)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/f5/46a50ca90979bd2d64082c35258089a1ae0081.src","preCode":"  protected List<RexNode> visitList(\n      List<? extends RexNode> exprs, boolean[] update) {\n    ImmutableList.Builder<RexNode> clonedOperands = ImmutableList.builder();\n    for (RexNode operand : exprs) {\n      RexNode clonedOperand = operand.accept(this);\n      if ((clonedOperand != operand) && (update != null)) {\n        update[0] = true;\n      }\n      clonedOperands.add(clonedOperand);\n    }\n    return clonedOperands.build();\n  }\n","realPath":"core/src/main/java/org/apache/calcite/rex/RexShuttle.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":157,"status":"M"},{"authorDate":"2020-05-29 00:04:40","commitOrder":3,"curCode":"    @Override protected List<RexNode> visitList(List<? extends RexNode> exprs,\n        boolean @Nullable [] update) {\n      ImmutableList.Builder<RexNode> clonedOperands = ImmutableList.builder();\n      for (RexNode operand : exprs) {\n        RexNode clonedOperand = visit(operand);\n        if ((clonedOperand != operand) && (update != null)) {\n          update[0] = true;\n        }\n        clonedOperands.add(clonedOperand);\n      }\n      return clonedOperands.build();\n    }\n","date":"2020-11-30 06:45:33","endLine":228,"groupId":"101716","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"visitList","params":"(List<?extendsRexNode>exprs@boolean@Nullable[]update)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/72/d24a3ab6456ac436b7724ad9b1b8c2cd0f9fa6.src","preCode":"    @Override protected List<RexNode> visitList(List<? extends RexNode> exprs,\n        boolean[] update) {\n      ImmutableList.Builder<RexNode> clonedOperands = ImmutableList.builder();\n      for (RexNode operand : exprs) {\n        RexNode clonedOperand = visit(operand);\n        if ((clonedOperand != operand) && (update != null)) {\n          update[0] = true;\n        }\n        clonedOperands.add(clonedOperand);\n      }\n      return clonedOperands.build();\n    }\n","realPath":"core/src/main/java/org/apache/calcite/rel/rules/ProjectFilterTransposeRule.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":217,"status":"M"}],"commitId":"d9a81b88ad561e7e4cedae93e805e0d7a53a7f1a","commitMessage":"@@@[CALCITE-4199] Add nullability annotations\n\nThe commit includes javadoc updates and refactorings made by Julian Hyde in https://github.com/apache/calcite/pull/2278\n","date":"2020-11-30 06:45:33","modifiedFileCount":"1012","status":"M","submitter":"Vladimir Sitnikov"}]
