[{"authorTime":"2017-06-20 17:22:24","codes":[{"authorDate":"2017-06-20 16:30:46","commitOrder":2,"curCode":"  public void testUnionMergeRule() throws Exception {\n    HepProgram program = new HepProgramBuilder()\n            .addRuleInstance(ProjectSetOpTransposeRule.INSTANCE)\n            .addRuleInstance(ProjectRemoveRule.INSTANCE)\n            .addRuleInstance(UnionMergeRule.INSTANCE)\n            .build();\n\n    checkPlanning(program,\n            \"select * from (\\n\"\n                    + \"select * from (\\n\"\n                    + \"  select name, deptno from dept\\n\"\n                    + \"  union all\\n\"\n                    + \"  select name, deptno from\\n\"\n                    + \"  (\\n\"\n                    + \"    select name, deptno, count(1) from dept group by name, deptno\\n\"\n                    + \"    union all\\n\"\n                    + \"    select name, deptno, count(1) from dept group by name, deptno\\n\"\n                    + \"  ) subq\\n\"\n                    + \") a\\n\"\n                    + \"union all\\n\"\n                    + \"select name, deptno from dept\\n\"\n                    + \") aa\\n\");\n  }\n","date":"2017-06-20 17:58:48","endLine":1101,"groupId":"9214","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testUnionMergeRule","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/89/1ea102d10089216cede4ebf4534d52a4fe225e.src","preCode":"  public void testUnionMergeRule() throws Exception {\n    HepProgram program = new HepProgramBuilder()\n            .addRuleInstance(ProjectSetOpTransposeRule.INSTANCE)\n            .addRuleInstance(ProjectRemoveRule.INSTANCE)\n            .addRuleInstance(UnionMergeRule.INSTANCE)\n            .build();\n\n    checkPlanning(program,\n            \"select * from (\\n\"\n                    + \"select * from (\\n\"\n                    + \"  select name, deptno from dept\\n\"\n                    + \"  union all\\n\"\n                    + \"  select name, deptno from\\n\"\n                    + \"  (\\n\"\n                    + \"    select name, deptno, count(1) from dept group by name, deptno\\n\"\n                    + \"    union all\\n\"\n                    + \"    select name, deptno, count(1) from dept group by name, deptno\\n\"\n                    + \"  ) subq\\n\"\n                    + \") a\\n\"\n                    + \"union all\\n\"\n                    + \"select name, deptno from dept\\n\"\n                    + \") aa\\n\");\n  }\n","realPath":"core/src/test/java/org/apache/calcite/test/RelOptRulesTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":1079,"status":"NB"},{"authorDate":"2017-06-20 17:22:24","commitOrder":2,"curCode":"  public void testMinusMergeRule() throws Exception {\n    HepProgram program = new HepProgramBuilder()\n            .addRuleInstance(ProjectSetOpTransposeRule.INSTANCE)\n            .addRuleInstance(ProjectRemoveRule.INSTANCE)\n            .addRuleInstance(UnionMergeRule.MINUS_INSTANCE)\n            .build();\n\n    checkPlanning(program,\n            \"select * from (\\n\"\n                    + \"select * from (\\n\"\n                    + \"  select name, deptno from\\n\"\n                    + \"  (\\n\"\n                    + \"    select name, deptno, count(1) from dept group by name, deptno\\n\"\n                    + \"    except all\\n\"\n                    + \"    select name, deptno, 1 from dept\\n\"\n                    + \"  ) subq\\n\"\n                    + \"  except all\\n\"\n                    + \"  select name, deptno from\\n\"\n                    + \"  (\\n\"\n                    + \"    select name, deptno, 1 from dept\\n\"\n                    + \"    except all\\n\"\n                    + \"    select name, deptno, count(1) from dept group by name, deptno\\n\"\n                    + \"  ) subq2\\n\"\n                    + \") a\\n\"\n                    + \"except all\\n\"\n                    + \"select name, deptno from dept\\n\"\n                    + \") aa\\n\");\n  }\n","date":"2017-06-20 18:12:37","endLine":1131,"groupId":"9214","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testMinusMergeRule","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/db/29c0fb77d8e8dc07460cd0194f333eb54fd475.src","preCode":"  public void testMinusMergeRule() throws Exception {\n    HepProgram program = new HepProgramBuilder()\n            .addRuleInstance(ProjectSetOpTransposeRule.INSTANCE)\n            .addRuleInstance(ProjectRemoveRule.INSTANCE)\n            .addRuleInstance(UnionMergeRule.MINUS_INSTANCE)\n            .build();\n\n    checkPlanning(program,\n            \"select * from (\\n\"\n                    + \"select * from (\\n\"\n                    + \"  select name, deptno from\\n\"\n                    + \"  (\\n\"\n                    + \"    select name, deptno, count(1) from dept group by name, deptno\\n\"\n                    + \"    except all\\n\"\n                    + \"    select name, deptno, 1 from dept\\n\"\n                    + \"  ) subq\\n\"\n                    + \"  except all\\n\"\n                    + \"  select name, deptno from\\n\"\n                    + \"  (\\n\"\n                    + \"    select name, deptno, 1 from dept\\n\"\n                    + \"    except all\\n\"\n                    + \"    select name, deptno, count(1) from dept group by name, deptno\\n\"\n                    + \"  ) subq2\\n\"\n                    + \") a\\n\"\n                    + \"except all\\n\"\n                    + \"select name, deptno from dept\\n\"\n                    + \") aa\\n\");\n  }\n","realPath":"core/src/test/java/org/apache/calcite/test/RelOptRulesTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":1104,"status":"B"}],"commitId":"f63a65a8c6ffd9a771e27ef0446496c6b67baeea","commitMessage":"@@@[CALCITE-1852] Fix for UnionMergeRule to deal correctly with EXCEPT\n","date":"2017-06-20 18:12:37","modifiedFileCount":"2","status":"M","submitter":"Jesus Camacho Rodriguez"},{"authorTime":"2019-10-14 20:53:23","codes":[{"authorDate":"2019-10-14 20:53:23","commitOrder":3,"curCode":"  public void testUnionMergeRule() throws Exception {\n    HepProgram program = new HepProgramBuilder()\n            .addRuleInstance(ProjectSetOpTransposeRule.INSTANCE)\n            .addRuleInstance(ProjectRemoveRule.INSTANCE)\n            .addRuleInstance(UnionMergeRule.INSTANCE)\n            .build();\n\n    final String sql = \"select * from (\\n\"\n        + \"select * from (\\n\"\n        + \"  select name, deptno from dept\\n\"\n        + \"  union all\\n\"\n        + \"  select name, deptno from\\n\"\n        + \"  (\\n\"\n        + \"    select name, deptno, count(1) from dept group by name, deptno\\n\"\n        + \"    union all\\n\"\n        + \"    select name, deptno, count(1) from dept group by name, deptno\\n\"\n        + \"  ) subq\\n\"\n        + \") a\\n\"\n        + \"union all\\n\"\n        + \"select name, deptno from dept\\n\"\n        + \") aa\\n\";\n    sql(sql).with(program).check();\n  }\n","date":"2019-10-15 09:37:32","endLine":1936,"groupId":"9214","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testUnionMergeRule","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/51/b671b65dfc7e5613e63058680b48e9da669c6b.src","preCode":"  public void testUnionMergeRule() throws Exception {\n    HepProgram program = new HepProgramBuilder()\n            .addRuleInstance(ProjectSetOpTransposeRule.INSTANCE)\n            .addRuleInstance(ProjectRemoveRule.INSTANCE)\n            .addRuleInstance(UnionMergeRule.INSTANCE)\n            .build();\n\n    checkPlanning(program,\n            \"select * from (\\n\"\n                    + \"select * from (\\n\"\n                    + \"  select name, deptno from dept\\n\"\n                    + \"  union all\\n\"\n                    + \"  select name, deptno from\\n\"\n                    + \"  (\\n\"\n                    + \"    select name, deptno, count(1) from dept group by name, deptno\\n\"\n                    + \"    union all\\n\"\n                    + \"    select name, deptno, count(1) from dept group by name, deptno\\n\"\n                    + \"  ) subq\\n\"\n                    + \") a\\n\"\n                    + \"union all\\n\"\n                    + \"select name, deptno from dept\\n\"\n                    + \") aa\\n\");\n  }\n","realPath":"core/src/test/java/org/apache/calcite/test/RelOptRulesTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":1914,"status":"M"},{"authorDate":"2019-10-14 20:53:23","commitOrder":3,"curCode":"  public void testMinusMergeRule() throws Exception {\n    HepProgram program = new HepProgramBuilder()\n            .addRuleInstance(ProjectSetOpTransposeRule.INSTANCE)\n            .addRuleInstance(ProjectRemoveRule.INSTANCE)\n            .addRuleInstance(UnionMergeRule.MINUS_INSTANCE)\n            .build();\n\n    final String sql = \"select * from (\\n\"\n        + \"select * from (\\n\"\n        + \"  select name, deptno from\\n\"\n        + \"  (\\n\"\n        + \"    select name, deptno, count(1) from dept group by name, deptno\\n\"\n        + \"    except all\\n\"\n        + \"    select name, deptno, 1 from dept\\n\"\n        + \"  ) subq\\n\"\n        + \"  except all\\n\"\n        + \"  select name, deptno from\\n\"\n        + \"  (\\n\"\n        + \"    select name, deptno, 1 from dept\\n\"\n        + \"    except all\\n\"\n        + \"    select name, deptno, count(1) from dept group by name, deptno\\n\"\n        + \"  ) subq2\\n\"\n        + \") a\\n\"\n        + \"except all\\n\"\n        + \"select name, deptno from dept\\n\"\n        + \") aa\\n\";\n    sql(sql).with(program).check();\n  }\n","date":"2019-10-15 09:37:32","endLine":1966,"groupId":"9214","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testMinusMergeRule","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/51/b671b65dfc7e5613e63058680b48e9da669c6b.src","preCode":"  public void testMinusMergeRule() throws Exception {\n    HepProgram program = new HepProgramBuilder()\n            .addRuleInstance(ProjectSetOpTransposeRule.INSTANCE)\n            .addRuleInstance(ProjectRemoveRule.INSTANCE)\n            .addRuleInstance(UnionMergeRule.MINUS_INSTANCE)\n            .build();\n\n    checkPlanning(program,\n            \"select * from (\\n\"\n                    + \"select * from (\\n\"\n                    + \"  select name, deptno from\\n\"\n                    + \"  (\\n\"\n                    + \"    select name, deptno, count(1) from dept group by name, deptno\\n\"\n                    + \"    except all\\n\"\n                    + \"    select name, deptno, 1 from dept\\n\"\n                    + \"  ) subq\\n\"\n                    + \"  except all\\n\"\n                    + \"  select name, deptno from\\n\"\n                    + \"  (\\n\"\n                    + \"    select name, deptno, 1 from dept\\n\"\n                    + \"    except all\\n\"\n                    + \"    select name, deptno, count(1) from dept group by name, deptno\\n\"\n                    + \"  ) subq2\\n\"\n                    + \") a\\n\"\n                    + \"except all\\n\"\n                    + \"select name, deptno from dept\\n\"\n                    + \") aa\\n\");\n  }\n","realPath":"core/src/test/java/org/apache/calcite/test/RelOptRulesTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":1939,"status":"M"}],"commitId":"8da131c08afe67861ced49bc6180a20f66be52fb","commitMessage":"@@@[CALCITE-3410] Simplify RelOptRulesTest and HepPlannerTest by making test methods fluent\n\n* Add method 'Sql.withTester'\n* In RelOptTestBase.  deprecate checkPlanning method\n","date":"2019-10-15 09:37:32","modifiedFileCount":"3","status":"M","submitter":"yuzhao.cyz"},{"authorTime":"2019-12-04 02:44:13","codes":[{"authorDate":"2019-12-04 02:44:13","commitOrder":4,"curCode":"  @Test public void testUnionMergeRule() throws Exception {\n    HepProgram program = new HepProgramBuilder()\n            .addRuleInstance(ProjectSetOpTransposeRule.INSTANCE)\n            .addRuleInstance(ProjectRemoveRule.INSTANCE)\n            .addRuleInstance(UnionMergeRule.INSTANCE)\n            .build();\n\n    final String sql = \"select * from (\\n\"\n        + \"select * from (\\n\"\n        + \"  select name, deptno from dept\\n\"\n        + \"  union all\\n\"\n        + \"  select name, deptno from\\n\"\n        + \"  (\\n\"\n        + \"    select name, deptno, count(1) from dept group by name, deptno\\n\"\n        + \"    union all\\n\"\n        + \"    select name, deptno, count(1) from dept group by name, deptno\\n\"\n        + \"  ) subq\\n\"\n        + \") a\\n\"\n        + \"union all\\n\"\n        + \"select name, deptno from dept\\n\"\n        + \") aa\\n\";\n    sql(sql).with(program).check();\n  }\n","date":"2019-12-14 23:57:27","endLine":1986,"groupId":"9214","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testUnionMergeRule","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/d8/2d3eb312a395419b09c45ded78ffaddb9f16cd.src","preCode":"  public void testUnionMergeRule() throws Exception {\n    HepProgram program = new HepProgramBuilder()\n            .addRuleInstance(ProjectSetOpTransposeRule.INSTANCE)\n            .addRuleInstance(ProjectRemoveRule.INSTANCE)\n            .addRuleInstance(UnionMergeRule.INSTANCE)\n            .build();\n\n    final String sql = \"select * from (\\n\"\n        + \"select * from (\\n\"\n        + \"  select name, deptno from dept\\n\"\n        + \"  union all\\n\"\n        + \"  select name, deptno from\\n\"\n        + \"  (\\n\"\n        + \"    select name, deptno, count(1) from dept group by name, deptno\\n\"\n        + \"    union all\\n\"\n        + \"    select name, deptno, count(1) from dept group by name, deptno\\n\"\n        + \"  ) subq\\n\"\n        + \") a\\n\"\n        + \"union all\\n\"\n        + \"select name, deptno from dept\\n\"\n        + \") aa\\n\";\n    sql(sql).with(program).check();\n  }\n","realPath":"core/src/test/java/org/apache/calcite/test/RelOptRulesTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":1964,"status":"M"},{"authorDate":"2019-12-04 02:44:13","commitOrder":4,"curCode":"  @Test public void testMinusMergeRule() throws Exception {\n    HepProgram program = new HepProgramBuilder()\n            .addRuleInstance(ProjectSetOpTransposeRule.INSTANCE)\n            .addRuleInstance(ProjectRemoveRule.INSTANCE)\n            .addRuleInstance(UnionMergeRule.MINUS_INSTANCE)\n            .build();\n\n    final String sql = \"select * from (\\n\"\n        + \"select * from (\\n\"\n        + \"  select name, deptno from\\n\"\n        + \"  (\\n\"\n        + \"    select name, deptno, count(1) from dept group by name, deptno\\n\"\n        + \"    except all\\n\"\n        + \"    select name, deptno, 1 from dept\\n\"\n        + \"  ) subq\\n\"\n        + \"  except all\\n\"\n        + \"  select name, deptno from\\n\"\n        + \"  (\\n\"\n        + \"    select name, deptno, 1 from dept\\n\"\n        + \"    except all\\n\"\n        + \"    select name, deptno, count(1) from dept group by name, deptno\\n\"\n        + \"  ) subq2\\n\"\n        + \") a\\n\"\n        + \"except all\\n\"\n        + \"select name, deptno from dept\\n\"\n        + \") aa\\n\";\n    sql(sql).with(program).check();\n  }\n","date":"2019-12-14 23:57:27","endLine":2015,"groupId":"9214","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testMinusMergeRule","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/d8/2d3eb312a395419b09c45ded78ffaddb9f16cd.src","preCode":"  public void testMinusMergeRule() throws Exception {\n    HepProgram program = new HepProgramBuilder()\n            .addRuleInstance(ProjectSetOpTransposeRule.INSTANCE)\n            .addRuleInstance(ProjectRemoveRule.INSTANCE)\n            .addRuleInstance(UnionMergeRule.MINUS_INSTANCE)\n            .build();\n\n    final String sql = \"select * from (\\n\"\n        + \"select * from (\\n\"\n        + \"  select name, deptno from\\n\"\n        + \"  (\\n\"\n        + \"    select name, deptno, count(1) from dept group by name, deptno\\n\"\n        + \"    except all\\n\"\n        + \"    select name, deptno, 1 from dept\\n\"\n        + \"  ) subq\\n\"\n        + \"  except all\\n\"\n        + \"  select name, deptno from\\n\"\n        + \"  (\\n\"\n        + \"    select name, deptno, 1 from dept\\n\"\n        + \"    except all\\n\"\n        + \"    select name, deptno, count(1) from dept group by name, deptno\\n\"\n        + \"  ) subq2\\n\"\n        + \") a\\n\"\n        + \"except all\\n\"\n        + \"select name, deptno from dept\\n\"\n        + \") aa\\n\";\n    sql(sql).with(program).check();\n  }\n","realPath":"core/src/test/java/org/apache/calcite/test/RelOptRulesTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":1988,"status":"M"}],"commitId":"571731b80a58eb095ebac7123285c375e7afff90","commitMessage":"@@@[CALCITE-3559] Update formatting: remove \"// End\" trailers.  move @Test from their own lines\n","date":"2019-12-14 23:57:27","modifiedFileCount":"1961","status":"M","submitter":"Vladimir Sitnikov"},{"authorTime":"2020-04-02 10:39:10","codes":[{"authorDate":"2020-04-02 10:39:10","commitOrder":5,"curCode":"  @Test void testUnionMergeRule() throws Exception {\n    HepProgram program = new HepProgramBuilder()\n            .addRuleInstance(ProjectSetOpTransposeRule.INSTANCE)\n            .addRuleInstance(ProjectRemoveRule.INSTANCE)\n            .addRuleInstance(UnionMergeRule.INSTANCE)\n            .build();\n\n    final String sql = \"select * from (\\n\"\n        + \"select * from (\\n\"\n        + \"  select name, deptno from dept\\n\"\n        + \"  union all\\n\"\n        + \"  select name, deptno from\\n\"\n        + \"  (\\n\"\n        + \"    select name, deptno, count(1) from dept group by name, deptno\\n\"\n        + \"    union all\\n\"\n        + \"    select name, deptno, count(1) from dept group by name, deptno\\n\"\n        + \"  ) subq\\n\"\n        + \") a\\n\"\n        + \"union all\\n\"\n        + \"select name, deptno from dept\\n\"\n        + \") aa\\n\";\n    sql(sql).with(program).check();\n  }\n","date":"2020-04-06 04:57:49","endLine":2050,"groupId":"9214","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"testUnionMergeRule","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/c1/c56354833d8acfcc210ae25313c78e9332a2ba.src","preCode":"  @Test public void testUnionMergeRule() throws Exception {\n    HepProgram program = new HepProgramBuilder()\n            .addRuleInstance(ProjectSetOpTransposeRule.INSTANCE)\n            .addRuleInstance(ProjectRemoveRule.INSTANCE)\n            .addRuleInstance(UnionMergeRule.INSTANCE)\n            .build();\n\n    final String sql = \"select * from (\\n\"\n        + \"select * from (\\n\"\n        + \"  select name, deptno from dept\\n\"\n        + \"  union all\\n\"\n        + \"  select name, deptno from\\n\"\n        + \"  (\\n\"\n        + \"    select name, deptno, count(1) from dept group by name, deptno\\n\"\n        + \"    union all\\n\"\n        + \"    select name, deptno, count(1) from dept group by name, deptno\\n\"\n        + \"  ) subq\\n\"\n        + \") a\\n\"\n        + \"union all\\n\"\n        + \"select name, deptno from dept\\n\"\n        + \") aa\\n\";\n    sql(sql).with(program).check();\n  }\n","realPath":"core/src/test/java/org/apache/calcite/test/RelOptRulesTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":2028,"status":"M"},{"authorDate":"2020-04-02 10:39:10","commitOrder":5,"curCode":"  @Test void testMinusMergeRule() throws Exception {\n    HepProgram program = new HepProgramBuilder()\n            .addRuleInstance(ProjectSetOpTransposeRule.INSTANCE)\n            .addRuleInstance(ProjectRemoveRule.INSTANCE)\n            .addRuleInstance(UnionMergeRule.MINUS_INSTANCE)\n            .build();\n\n    final String sql = \"select * from (\\n\"\n        + \"select * from (\\n\"\n        + \"  select name, deptno from\\n\"\n        + \"  (\\n\"\n        + \"    select name, deptno, count(1) from dept group by name, deptno\\n\"\n        + \"    except all\\n\"\n        + \"    select name, deptno, 1 from dept\\n\"\n        + \"  ) subq\\n\"\n        + \"  except all\\n\"\n        + \"  select name, deptno from\\n\"\n        + \"  (\\n\"\n        + \"    select name, deptno, 1 from dept\\n\"\n        + \"    except all\\n\"\n        + \"    select name, deptno, count(1) from dept group by name, deptno\\n\"\n        + \"  ) subq2\\n\"\n        + \") a\\n\"\n        + \"except all\\n\"\n        + \"select name, deptno from dept\\n\"\n        + \") aa\\n\";\n    sql(sql).with(program).check();\n  }\n","date":"2020-04-06 04:57:49","endLine":2079,"groupId":"9214","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"testMinusMergeRule","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/c1/c56354833d8acfcc210ae25313c78e9332a2ba.src","preCode":"  @Test public void testMinusMergeRule() throws Exception {\n    HepProgram program = new HepProgramBuilder()\n            .addRuleInstance(ProjectSetOpTransposeRule.INSTANCE)\n            .addRuleInstance(ProjectRemoveRule.INSTANCE)\n            .addRuleInstance(UnionMergeRule.MINUS_INSTANCE)\n            .build();\n\n    final String sql = \"select * from (\\n\"\n        + \"select * from (\\n\"\n        + \"  select name, deptno from\\n\"\n        + \"  (\\n\"\n        + \"    select name, deptno, count(1) from dept group by name, deptno\\n\"\n        + \"    except all\\n\"\n        + \"    select name, deptno, 1 from dept\\n\"\n        + \"  ) subq\\n\"\n        + \"  except all\\n\"\n        + \"  select name, deptno from\\n\"\n        + \"  (\\n\"\n        + \"    select name, deptno, 1 from dept\\n\"\n        + \"    except all\\n\"\n        + \"    select name, deptno, count(1) from dept group by name, deptno\\n\"\n        + \"  ) subq2\\n\"\n        + \") a\\n\"\n        + \"except all\\n\"\n        + \"select name, deptno from dept\\n\"\n        + \") aa\\n\";\n    sql(sql).with(program).check();\n  }\n","realPath":"core/src/test/java/org/apache/calcite/test/RelOptRulesTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":2052,"status":"M"}],"commitId":"9492dd4146f63ddc028010d6c4e86f6a5cb29a8d","commitMessage":"@@@[CALCITE-3892] Make junit test classes and methods non-public where possible\n\nPrior to junit 5.  classes and methods had to be public. This is no\nlonger the case.\n\nSome classes need to remain public because they are referenced from\nelsewhere.  or if they use reflection somehow. The remaining 'public'\nkeyword will be informative to maintainers.\n","date":"2020-04-06 04:57:49","modifiedFileCount":"196","status":"M","submitter":"Julian Hyde"},{"authorTime":"2020-07-09 04:45:12","codes":[{"authorDate":"2020-07-09 04:45:12","commitOrder":6,"curCode":"  @Test void testUnionMergeRule() throws Exception {\n    HepProgram program = new HepProgramBuilder()\n        .addRuleInstance(CoreRules.PROJECT_SET_OP_TRANSPOSE)\n        .addRuleInstance(CoreRules.PROJECT_REMOVE)\n        .addRuleInstance(CoreRules.UNION_MERGE)\n        .build();\n\n    final String sql = \"select * from (\\n\"\n        + \"select * from (\\n\"\n        + \"  select name, deptno from dept\\n\"\n        + \"  union all\\n\"\n        + \"  select name, deptno from\\n\"\n        + \"  (\\n\"\n        + \"    select name, deptno, count(1) from dept group by name, deptno\\n\"\n        + \"    union all\\n\"\n        + \"    select name, deptno, count(1) from dept group by name, deptno\\n\"\n        + \"  ) subq\\n\"\n        + \") a\\n\"\n        + \"union all\\n\"\n        + \"select name, deptno from dept\\n\"\n        + \") aa\\n\";\n    sql(sql).with(program).check();\n  }\n","date":"2020-07-12 06:58:28","endLine":2161,"groupId":"729","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"testUnionMergeRule","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/41/d77aee9e74f65d9e26a1ffa96400062e1eb119.src","preCode":"  @Test void testUnionMergeRule() throws Exception {\n    HepProgram program = new HepProgramBuilder()\n            .addRuleInstance(ProjectSetOpTransposeRule.INSTANCE)\n            .addRuleInstance(ProjectRemoveRule.INSTANCE)\n            .addRuleInstance(UnionMergeRule.INSTANCE)\n            .build();\n\n    final String sql = \"select * from (\\n\"\n        + \"select * from (\\n\"\n        + \"  select name, deptno from dept\\n\"\n        + \"  union all\\n\"\n        + \"  select name, deptno from\\n\"\n        + \"  (\\n\"\n        + \"    select name, deptno, count(1) from dept group by name, deptno\\n\"\n        + \"    union all\\n\"\n        + \"    select name, deptno, count(1) from dept group by name, deptno\\n\"\n        + \"  ) subq\\n\"\n        + \") a\\n\"\n        + \"union all\\n\"\n        + \"select name, deptno from dept\\n\"\n        + \") aa\\n\";\n    sql(sql).with(program).check();\n  }\n","realPath":"core/src/test/java/org/apache/calcite/test/RelOptRulesTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":2139,"status":"M"},{"authorDate":"2020-07-09 04:45:12","commitOrder":6,"curCode":"  @Test void testMinusMergeRule() throws Exception {\n    HepProgram program = new HepProgramBuilder()\n            .addRuleInstance(CoreRules.PROJECT_SET_OP_TRANSPOSE)\n            .addRuleInstance(CoreRules.PROJECT_REMOVE)\n            .addRuleInstance(CoreRules.MINUS_MERGE)\n            .build();\n\n    final String sql = \"select * from (\\n\"\n        + \"select * from (\\n\"\n        + \"  select name, deptno from\\n\"\n        + \"  (\\n\"\n        + \"    select name, deptno, count(1) from dept group by name, deptno\\n\"\n        + \"    except all\\n\"\n        + \"    select name, deptno, 1 from dept\\n\"\n        + \"  ) subq\\n\"\n        + \"  except all\\n\"\n        + \"  select name, deptno from\\n\"\n        + \"  (\\n\"\n        + \"    select name, deptno, 1 from dept\\n\"\n        + \"    except all\\n\"\n        + \"    select name, deptno, count(1) from dept group by name, deptno\\n\"\n        + \"  ) subq2\\n\"\n        + \") a\\n\"\n        + \"except all\\n\"\n        + \"select name, deptno from dept\\n\"\n        + \") aa\\n\";\n    sql(sql).with(program).check();\n  }\n","date":"2020-07-12 06:58:28","endLine":2190,"groupId":"729","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"testMinusMergeRule","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/41/d77aee9e74f65d9e26a1ffa96400062e1eb119.src","preCode":"  @Test void testMinusMergeRule() throws Exception {\n    HepProgram program = new HepProgramBuilder()\n            .addRuleInstance(ProjectSetOpTransposeRule.INSTANCE)\n            .addRuleInstance(ProjectRemoveRule.INSTANCE)\n            .addRuleInstance(UnionMergeRule.MINUS_INSTANCE)\n            .build();\n\n    final String sql = \"select * from (\\n\"\n        + \"select * from (\\n\"\n        + \"  select name, deptno from\\n\"\n        + \"  (\\n\"\n        + \"    select name, deptno, count(1) from dept group by name, deptno\\n\"\n        + \"    except all\\n\"\n        + \"    select name, deptno, 1 from dept\\n\"\n        + \"  ) subq\\n\"\n        + \"  except all\\n\"\n        + \"  select name, deptno from\\n\"\n        + \"  (\\n\"\n        + \"    select name, deptno, 1 from dept\\n\"\n        + \"    except all\\n\"\n        + \"    select name, deptno, count(1) from dept group by name, deptno\\n\"\n        + \"  ) subq2\\n\"\n        + \") a\\n\"\n        + \"except all\\n\"\n        + \"select name, deptno from dept\\n\"\n        + \") aa\\n\";\n    sql(sql).with(program).check();\n  }\n","realPath":"core/src/test/java/org/apache/calcite/test/RelOptRulesTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":2163,"status":"M"}],"commitId":"23b26b6287315cc2cd236e705bb651077488fc5c","commitMessage":"@@@In preparation for [CALCITE-3923] and [CALCITE-4079].  deprecate fields and methods that will be removed between 1.24 and 1.25\n\nAlso.  in RelNode.  change some methods from 'to removed before 2.0'\nto 'to be removed before 1.25'. The methods are sDistinct(). \nisKey(ImmutableBitSet).  getQuery().  getRows().  getVariablesStopped(). \ncomputeSelfCost().  isValid(boolean).  getCollationList().  getChildExps().\n","date":"2020-07-12 06:58:28","modifiedFileCount":"137","status":"M","submitter":"Julian Hyde"},{"authorTime":"2020-07-09 05:31:40","codes":[{"authorDate":"2020-07-09 05:31:40","commitOrder":7,"curCode":"  @Test void testUnionMergeRule() {\n    HepProgram program = new HepProgramBuilder()\n        .addRuleInstance(CoreRules.PROJECT_SET_OP_TRANSPOSE)\n        .addRuleInstance(CoreRules.PROJECT_REMOVE)\n        .addRuleInstance(CoreRules.UNION_MERGE)\n        .build();\n\n    final String sql = \"select * from (\\n\"\n        + \"select * from (\\n\"\n        + \"  select name, deptno from dept\\n\"\n        + \"  union all\\n\"\n        + \"  select name, deptno from\\n\"\n        + \"  (\\n\"\n        + \"    select name, deptno, count(1) from dept group by name, deptno\\n\"\n        + \"    union all\\n\"\n        + \"    select name, deptno, count(1) from dept group by name, deptno\\n\"\n        + \"  ) subq\\n\"\n        + \") a\\n\"\n        + \"union all\\n\"\n        + \"select name, deptno from dept\\n\"\n        + \") aa\\n\";\n    sql(sql).with(program).check();\n  }\n","date":"2020-07-29 02:27:24","endLine":2184,"groupId":"729","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"testUnionMergeRule","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/40/40570b99f5fa273879b44bd2b31dffdf03345c.src","preCode":"  @Test void testUnionMergeRule() throws Exception {\n    HepProgram program = new HepProgramBuilder()\n        .addRuleInstance(CoreRules.PROJECT_SET_OP_TRANSPOSE)\n        .addRuleInstance(CoreRules.PROJECT_REMOVE)\n        .addRuleInstance(CoreRules.UNION_MERGE)\n        .build();\n\n    final String sql = \"select * from (\\n\"\n        + \"select * from (\\n\"\n        + \"  select name, deptno from dept\\n\"\n        + \"  union all\\n\"\n        + \"  select name, deptno from\\n\"\n        + \"  (\\n\"\n        + \"    select name, deptno, count(1) from dept group by name, deptno\\n\"\n        + \"    union all\\n\"\n        + \"    select name, deptno, count(1) from dept group by name, deptno\\n\"\n        + \"  ) subq\\n\"\n        + \") a\\n\"\n        + \"union all\\n\"\n        + \"select name, deptno from dept\\n\"\n        + \") aa\\n\";\n    sql(sql).with(program).check();\n  }\n","realPath":"core/src/test/java/org/apache/calcite/test/RelOptRulesTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":2162,"status":"M"},{"authorDate":"2020-07-09 05:31:40","commitOrder":7,"curCode":"  @Test void testMinusMergeRule() {\n    HepProgram program = new HepProgramBuilder()\n            .addRuleInstance(CoreRules.PROJECT_SET_OP_TRANSPOSE)\n            .addRuleInstance(CoreRules.PROJECT_REMOVE)\n            .addRuleInstance(CoreRules.MINUS_MERGE)\n            .build();\n\n    final String sql = \"select * from (\\n\"\n        + \"select * from (\\n\"\n        + \"  select name, deptno from\\n\"\n        + \"  (\\n\"\n        + \"    select name, deptno, count(1) from dept group by name, deptno\\n\"\n        + \"    except all\\n\"\n        + \"    select name, deptno, 1 from dept\\n\"\n        + \"  ) subq\\n\"\n        + \"  except all\\n\"\n        + \"  select name, deptno from\\n\"\n        + \"  (\\n\"\n        + \"    select name, deptno, 1 from dept\\n\"\n        + \"    except all\\n\"\n        + \"    select name, deptno, count(1) from dept group by name, deptno\\n\"\n        + \"  ) subq2\\n\"\n        + \") a\\n\"\n        + \"except all\\n\"\n        + \"select name, deptno from dept\\n\"\n        + \") aa\\n\";\n    sql(sql).with(program).check();\n  }\n","date":"2020-07-29 02:27:24","endLine":2213,"groupId":"729","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"testMinusMergeRule","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/40/40570b99f5fa273879b44bd2b31dffdf03345c.src","preCode":"  @Test void testMinusMergeRule() throws Exception {\n    HepProgram program = new HepProgramBuilder()\n            .addRuleInstance(CoreRules.PROJECT_SET_OP_TRANSPOSE)\n            .addRuleInstance(CoreRules.PROJECT_REMOVE)\n            .addRuleInstance(CoreRules.MINUS_MERGE)\n            .build();\n\n    final String sql = \"select * from (\\n\"\n        + \"select * from (\\n\"\n        + \"  select name, deptno from\\n\"\n        + \"  (\\n\"\n        + \"    select name, deptno, count(1) from dept group by name, deptno\\n\"\n        + \"    except all\\n\"\n        + \"    select name, deptno, 1 from dept\\n\"\n        + \"  ) subq\\n\"\n        + \"  except all\\n\"\n        + \"  select name, deptno from\\n\"\n        + \"  (\\n\"\n        + \"    select name, deptno, 1 from dept\\n\"\n        + \"    except all\\n\"\n        + \"    select name, deptno, count(1) from dept group by name, deptno\\n\"\n        + \"  ) subq2\\n\"\n        + \") a\\n\"\n        + \"except all\\n\"\n        + \"select name, deptno from dept\\n\"\n        + \") aa\\n\";\n    sql(sql).with(program).check();\n  }\n","realPath":"core/src/test/java/org/apache/calcite/test/RelOptRulesTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":2186,"status":"M"}],"commitId":"998cd83ebe2fcd7ff3ee565299fed6e199269715","commitMessage":"@@@[CALCITE-3923] Refactor how planner rules are parameterized\n\nCreate operands using a builder interface.  OperandBuilder.  and\ndeprecate methods RelOptRule.operand etc.\n\nThe change is backwards compatible.  in the sense that\nexisting rule constructors are deprecated but still work.\nFrom now on.  to create rules.  call RelOptRule.Config.toRule()\n(which calls the rule's (Config) constructor).\n\nSub-classes of ConverterRule are a little different.  They\ndon't need their own sub-class of Config.  You just need to\ncall Config.withRuleFactory to specify the constructor of the\nsub-class of ConverterRule.\n\nMove rule instances into holder classes such as CoreRules. \nMaterializedViewRules. Deprecate existing rule INSTANCE fields\n(to be removed in 1.25). Deprecate previous rule constructors\n(to be removed in 2.0).\n\nDescribe how to write rules in howto and tutorial.\n\nRemove rule instances marked 'deprecated.  to be removed before\n1.25'.\n\nClose apache/calcite#2024\n","date":"2020-07-29 02:27:24","modifiedFileCount":"191","status":"M","submitter":"Julian Hyde"},{"authorTime":"2020-08-05 16:20:39","codes":[{"authorDate":"2020-08-05 16:20:39","commitOrder":8,"curCode":"  @Test void testUnionMergeRule() {\n    final String sql = \"select * from (\\n\"\n        + \"select * from (\\n\"\n        + \"  select name, deptno from dept\\n\"\n        + \"  union all\\n\"\n        + \"  select name, deptno from\\n\"\n        + \"  (\\n\"\n        + \"    select name, deptno, count(1) from dept group by name, deptno\\n\"\n        + \"    union all\\n\"\n        + \"    select name, deptno, count(1) from dept group by name, deptno\\n\"\n        + \"  ) subq\\n\"\n        + \") a\\n\"\n        + \"union all\\n\"\n        + \"select name, deptno from dept\\n\"\n        + \") aa\\n\";\n    sql(sql)\n        .withRule(CoreRules.PROJECT_SET_OP_TRANSPOSE,\n            CoreRules.PROJECT_REMOVE,\n            CoreRules.UNION_MERGE)\n        .check();\n  }\n","date":"2020-08-08 06:49:00","endLine":2020,"groupId":"10989","id":13,"instanceNumber":1,"isCurCommit":0,"methodName":"testUnionMergeRule","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/c7/a464a80ae93f49d699fc44643f1fd0e5bacd57.src","preCode":"  @Test void testUnionMergeRule() {\n    HepProgram program = new HepProgramBuilder()\n        .addRuleInstance(CoreRules.PROJECT_SET_OP_TRANSPOSE)\n        .addRuleInstance(CoreRules.PROJECT_REMOVE)\n        .addRuleInstance(CoreRules.UNION_MERGE)\n        .build();\n\n    final String sql = \"select * from (\\n\"\n        + \"select * from (\\n\"\n        + \"  select name, deptno from dept\\n\"\n        + \"  union all\\n\"\n        + \"  select name, deptno from\\n\"\n        + \"  (\\n\"\n        + \"    select name, deptno, count(1) from dept group by name, deptno\\n\"\n        + \"    union all\\n\"\n        + \"    select name, deptno, count(1) from dept group by name, deptno\\n\"\n        + \"  ) subq\\n\"\n        + \") a\\n\"\n        + \"union all\\n\"\n        + \"select name, deptno from dept\\n\"\n        + \") aa\\n\";\n    sql(sql).with(program).check();\n  }\n","realPath":"core/src/test/java/org/apache/calcite/test/RelOptRulesTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":2000,"status":"M"},{"authorDate":"2020-08-05 16:20:39","commitOrder":8,"curCode":"  @Test void testMinusMergeRule() {\n    final String sql = \"select * from (\\n\"\n        + \"select * from (\\n\"\n        + \"  select name, deptno from\\n\"\n        + \"  (\\n\"\n        + \"    select name, deptno, count(1) from dept group by name, deptno\\n\"\n        + \"    except all\\n\"\n        + \"    select name, deptno, 1 from dept\\n\"\n        + \"  ) subq\\n\"\n        + \"  except all\\n\"\n        + \"  select name, deptno from\\n\"\n        + \"  (\\n\"\n        + \"    select name, deptno, 1 from dept\\n\"\n        + \"    except all\\n\"\n        + \"    select name, deptno, count(1) from dept group by name, deptno\\n\"\n        + \"  ) subq2\\n\"\n        + \") a\\n\"\n        + \"except all\\n\"\n        + \"select name, deptno from dept\\n\"\n        + \") aa\\n\";\n    sql(sql)\n        .withRule(CoreRules.PROJECT_SET_OP_TRANSPOSE,\n            CoreRules.PROJECT_REMOVE,\n            CoreRules.MINUS_MERGE)\n        .check();\n  }\n","date":"2020-08-08 06:49:00","endLine":2047,"groupId":"10989","id":14,"instanceNumber":2,"isCurCommit":0,"methodName":"testMinusMergeRule","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/c7/a464a80ae93f49d699fc44643f1fd0e5bacd57.src","preCode":"  @Test void testMinusMergeRule() {\n    HepProgram program = new HepProgramBuilder()\n            .addRuleInstance(CoreRules.PROJECT_SET_OP_TRANSPOSE)\n            .addRuleInstance(CoreRules.PROJECT_REMOVE)\n            .addRuleInstance(CoreRules.MINUS_MERGE)\n            .build();\n\n    final String sql = \"select * from (\\n\"\n        + \"select * from (\\n\"\n        + \"  select name, deptno from\\n\"\n        + \"  (\\n\"\n        + \"    select name, deptno, count(1) from dept group by name, deptno\\n\"\n        + \"    except all\\n\"\n        + \"    select name, deptno, 1 from dept\\n\"\n        + \"  ) subq\\n\"\n        + \"  except all\\n\"\n        + \"  select name, deptno from\\n\"\n        + \"  (\\n\"\n        + \"    select name, deptno, 1 from dept\\n\"\n        + \"    except all\\n\"\n        + \"    select name, deptno, count(1) from dept group by name, deptno\\n\"\n        + \"  ) subq2\\n\"\n        + \") a\\n\"\n        + \"except all\\n\"\n        + \"select name, deptno from dept\\n\"\n        + \") aa\\n\";\n    sql(sql).with(program).check();\n  }\n","realPath":"core/src/test/java/org/apache/calcite/test/RelOptRulesTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":2022,"status":"M"}],"commitId":"3f75e5ee4c9393842d5df61d1f32eb4255a77dde","commitMessage":"@@@Refactor RelOptRulesTest\n\nIn tests that use programs that are simple lists of rules. \nuse the `withRule` and `withPreRule` methods rather than\ncreating explicit programs. It makes tests more concise.\n","date":"2020-08-08 06:49:00","modifiedFileCount":"2","status":"M","submitter":"Julian Hyde"}]
