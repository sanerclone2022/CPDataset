[{"authorTime":"2016-11-03 13:30:04","codes":[{"authorDate":"2015-06-09 01:25:55","commitOrder":4,"curCode":"  private static Object convert(Object o, Class clazz) {\n    if (o == null) {\n      return null;\n    }\n    Primitive primitive = Primitive.of(clazz);\n    if (primitive != null) {\n      clazz = primitive.boxClass;\n    } else {\n      primitive = Primitive.ofBox(clazz);\n    }\n    if (clazz.isInstance(o)) {\n      return o;\n    }\n    if (o instanceof Date && primitive != null) {\n      o = ((Date) o).getTime() / DateTimeUtils.MILLIS_PER_DAY;\n    }\n    if (o instanceof Number && primitive != null) {\n      return primitive.number((Number) o);\n    }\n    return o;\n  }\n","date":"2015-06-09 01:25:55","endLine":145,"groupId":"1124","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"convert","params":"(Objecto@Classclazz)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/08/21f3216ea78e21263498b81878b4df20cd8588.src","preCode":"  private static Object convert(Object o, Class clazz) {\n    if (o == null) {\n      return null;\n    }\n    Primitive primitive = Primitive.of(clazz);\n    if (primitive != null) {\n      clazz = primitive.boxClass;\n    } else {\n      primitive = Primitive.ofBox(clazz);\n    }\n    if (clazz.isInstance(o)) {\n      return o;\n    }\n    if (o instanceof Date && primitive != null) {\n      o = ((Date) o).getTime() / DateTimeUtils.MILLIS_PER_DAY;\n    }\n    if (o instanceof Number && primitive != null) {\n      return primitive.number((Number) o);\n    }\n    return o;\n  }\n","realPath":"mongodb/src/main/java/org/apache/calcite/adapter/mongodb/MongoEnumerator.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":125,"status":"NB"},{"authorDate":"2016-11-03 13:30:04","commitOrder":4,"curCode":"  private static Object convert(Object o, Class clazz) {\n    if (o == null) {\n      return null;\n    }\n    Primitive primitive = Primitive.of(clazz);\n    if (primitive != null) {\n      clazz = primitive.boxClass;\n    } else {\n      primitive = Primitive.ofBox(clazz);\n    }\n    if (clazz == null) {\n      \r\n      if (o instanceof PdxInstance) {\n        return Util.toString(\n            ((PdxInstance) o).getFieldNames(), \"PDX[\", \",\", \"]\");\n      }\n      return o.toString();\n    }\n    if (clazz.isInstance(o)) {\n      return o;\n    }\n    if (o instanceof Date && primitive != null) {\n      o = ((Date) o).getTime() / DateTimeUtils.MILLIS_PER_DAY;\n    }\n    if (o instanceof Number && primitive != null) {\n      return primitive.number((Number) o);\n    }\n    return o;\n  }\n","date":"2018-02-17 02:18:02","endLine":264,"groupId":"11150","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"convert","params":"(Objecto@Classclazz)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/fb/1c09576d2bf0f89bc1475ae24363ac590696ea.src","preCode":"  private static Object convert(Object o, Class clazz) {\n    if (o == null) {\n      return null;\n    }\n    Primitive primitive = Primitive.of(clazz);\n    if (primitive != null) {\n      clazz = primitive.boxClass;\n    } else {\n      primitive = Primitive.ofBox(clazz);\n    }\n    if (clazz == null) {\n      \r\n      if (o instanceof PdxInstance) {\n        return Util.toString(\n            ((PdxInstance) o).getFieldNames(), \"PDX[\", \",\", \"]\");\n      }\n      return o.toString();\n    }\n    if (clazz.isInstance(o)) {\n      return o;\n    }\n    if (o instanceof Date && primitive != null) {\n      o = ((Date) o).getTime() / DateTimeUtils.MILLIS_PER_DAY;\n    }\n    if (o instanceof Number && primitive != null) {\n      return primitive.number((Number) o);\n    }\n    return o;\n  }\n","realPath":"geode/src/main/java/org/apache/calcite/adapter/geode/util/GeodeUtils.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":236,"status":"B"}],"commitId":"707f4de9cafc474d0daf807b1e4c339f6eb42d7e","commitMessage":"@@@[CALCITE-2059] Apache Geode Adapter (Christian Tzolov)\n\n- Downgrade Geode from 1.4.0 to 1.3.0 - Geode server allows connections\n  only from clients with same or lower version\n- Add links to presentations and tutorials\n\nClose apache/calcite#581\n","date":"2018-02-17 02:18:02","modifiedFileCount":"0","status":"M","submitter":"Christian Tzolov"},{"authorTime":"2019-10-18 20:09:01","codes":[{"authorDate":"2015-06-09 01:25:55","commitOrder":5,"curCode":"  private static Object convert(Object o, Class clazz) {\n    if (o == null) {\n      return null;\n    }\n    Primitive primitive = Primitive.of(clazz);\n    if (primitive != null) {\n      clazz = primitive.boxClass;\n    } else {\n      primitive = Primitive.ofBox(clazz);\n    }\n    if (clazz.isInstance(o)) {\n      return o;\n    }\n    if (o instanceof Date && primitive != null) {\n      o = ((Date) o).getTime() / DateTimeUtils.MILLIS_PER_DAY;\n    }\n    if (o instanceof Number && primitive != null) {\n      return primitive.number((Number) o);\n    }\n    return o;\n  }\n","date":"2015-06-09 01:25:55","endLine":145,"groupId":"10163","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"convert","params":"(Objecto@Classclazz)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/08/21f3216ea78e21263498b81878b4df20cd8588.src","preCode":"  private static Object convert(Object o, Class clazz) {\n    if (o == null) {\n      return null;\n    }\n    Primitive primitive = Primitive.of(clazz);\n    if (primitive != null) {\n      clazz = primitive.boxClass;\n    } else {\n      primitive = Primitive.ofBox(clazz);\n    }\n    if (clazz.isInstance(o)) {\n      return o;\n    }\n    if (o instanceof Date && primitive != null) {\n      o = ((Date) o).getTime() / DateTimeUtils.MILLIS_PER_DAY;\n    }\n    if (o instanceof Number && primitive != null) {\n      return primitive.number((Number) o);\n    }\n    return o;\n  }\n","realPath":"mongodb/src/main/java/org/apache/calcite/adapter/mongodb/MongoEnumerator.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":125,"status":"N"},{"authorDate":"2019-10-18 20:09:01","commitOrder":5,"curCode":"  private static Object convert(Object o, Class clazz) {\n    if (o == null) {\n      return null;\n    }\n    Primitive primitive = Primitive.of(clazz);\n    if (primitive != null) {\n      clazz = primitive.boxClass;\n    } else {\n      primitive = Primitive.ofBox(clazz);\n    }\n    if (clazz == null) {\n      return o.toString();\n    }\n    if (Map.class.isAssignableFrom(clazz)\n            && o instanceof PdxInstance) {\n      \r\n      return Util.toString(\n              ((PdxInstance) o).getFieldNames(), \"PDX[\", \",\", \"]\");\n    }\n    if (clazz.isInstance(o)) {\n      return o;\n    }\n    if (o instanceof Date && primitive != null) {\n      o = ((Date) o).getTime() / DateTimeUtils.MILLIS_PER_DAY;\n    }\n    if (o instanceof Number && primitive != null) {\n      return primitive.number((Number) o);\n    }\n    return o;\n  }\n","date":"2019-12-06 09:31:00","endLine":277,"groupId":"10163","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"convert","params":"(Objecto@Classclazz)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/84/acb329c07ac57d5ac7b2e24f430d952d43f6ef.src","preCode":"  private static Object convert(Object o, Class clazz) {\n    if (o == null) {\n      return null;\n    }\n    Primitive primitive = Primitive.of(clazz);\n    if (primitive != null) {\n      clazz = primitive.boxClass;\n    } else {\n      primitive = Primitive.ofBox(clazz);\n    }\n    if (clazz == null) {\n      \r\n      if (o instanceof PdxInstance) {\n        return Util.toString(\n            ((PdxInstance) o).getFieldNames(), \"PDX[\", \",\", \"]\");\n      }\n      return o.toString();\n    }\n    if (clazz.isInstance(o)) {\n      return o;\n    }\n    if (o instanceof Date && primitive != null) {\n      o = ((Date) o).getTime() / DateTimeUtils.MILLIS_PER_DAY;\n    }\n    if (o instanceof Number && primitive != null) {\n      return primitive.number((Number) o);\n    }\n    return o;\n  }\n","realPath":"geode/src/main/java/org/apache/calcite/adapter/geode/util/GeodeUtils.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":248,"status":"M"}],"commitId":"ff44204dc2899e0c34e94f70c2e0c301170daca3","commitMessage":"@@@[CALCITE-3429] AssertionError for user-defined table function with map argument (Wang Yanlin)\n\n1. Add map info from Java Map class to SqlTypeName.Map\n2. SqlTypeName.Map is not a basic type.  should not be used in factory method \"createSqlType\".  just like SqlTypeName.Array\n3. Add coerce rule for SqlTypeName.MAP\n\nFix-up(by Danny):\n* Fix GeodeTable#query field type inference;\n* Fix GeodeUtils#convert for nested PdxInstance because in\nJavaTypeFactoryExtImpl#createPdxType.  the nested PdxInstance is inferred\nas Map type(we can not describe nested JavaType correctly now).\n\nclose apache/calcite#1521\n","date":"2019-12-06 09:31:00","modifiedFileCount":"10","status":"M","submitter":"yanlin-Lynn"}]
