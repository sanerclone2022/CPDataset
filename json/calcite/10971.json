[{"authorTime":"2016-12-02 08:02:13","codes":[{"authorDate":"2016-12-02 08:02:13","commitOrder":1,"curCode":"  @Test public void testSemiJoinRuleRight() {\n    final HepProgram preProgram =\n        HepProgram.builder()\n            .addRuleInstance(FilterProjectTransposeRule.INSTANCE)\n            .addRuleInstance(FilterJoinRule.FILTER_ON_JOIN)\n            .addRuleInstance(ProjectMergeRule.INSTANCE)\n            .build();\n    final HepProgram program =\n        HepProgram.builder()\n            .addRuleInstance(SemiJoinRule.INSTANCE)\n            .build();\n    final String sql = \"select dept.* from dept right join (\\n\"\n        + \"  select distinct deptno from emp\\n\"\n        + \"  where sal > 100) using (deptno)\";\n    sql(sql)\n        .withPre(preProgram)\n        .with(program)\n        .withDecorrelation(true)\n        .withTrim(true)\n        .checkUnchanged();\n  }\n","date":"2016-12-02 12:10:18","endLine":564,"groupId":"4137","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testSemiJoinRuleRight","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/eb/c0e996452cdcc1e593c680f1c60d2ee6caf7b9.src","preCode":"  @Test public void testSemiJoinRuleRight() {\n    final HepProgram preProgram =\n        HepProgram.builder()\n            .addRuleInstance(FilterProjectTransposeRule.INSTANCE)\n            .addRuleInstance(FilterJoinRule.FILTER_ON_JOIN)\n            .addRuleInstance(ProjectMergeRule.INSTANCE)\n            .build();\n    final HepProgram program =\n        HepProgram.builder()\n            .addRuleInstance(SemiJoinRule.INSTANCE)\n            .build();\n    final String sql = \"select dept.* from dept right join (\\n\"\n        + \"  select distinct deptno from emp\\n\"\n        + \"  where sal > 100) using (deptno)\";\n    sql(sql)\n        .withPre(preProgram)\n        .with(program)\n        .withDecorrelation(true)\n        .withTrim(true)\n        .checkUnchanged();\n  }\n","realPath":"core/src/test/java/org/apache/calcite/test/RelOptRulesTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":544,"status":"B"},{"authorDate":"2016-12-02 08:02:13","commitOrder":1,"curCode":"  @Test public void testSemiJoinRuleLeft() {\n    final HepProgram preProgram =\n        HepProgram.builder()\n            .addRuleInstance(FilterProjectTransposeRule.INSTANCE)\n            .addRuleInstance(FilterJoinRule.FILTER_ON_JOIN)\n            .addRuleInstance(ProjectMergeRule.INSTANCE)\n            .build();\n    final HepProgram program =\n        HepProgram.builder()\n            .addRuleInstance(SemiJoinRule.INSTANCE)\n            .build();\n    final String sql = \"select name from dept left join (\\n\"\n        + \"  select distinct deptno from emp\\n\"\n        + \"  where sal > 100) using (deptno)\";\n    sql(sql)\n        .withPre(preProgram)\n        .with(program)\n        .withDecorrelation(true)\n        .withTrim(true)\n        .check();\n  }\n","date":"2016-12-02 12:10:18","endLine":610,"groupId":"4137","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testSemiJoinRuleLeft","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/eb/c0e996452cdcc1e593c680f1c60d2ee6caf7b9.src","preCode":"  @Test public void testSemiJoinRuleLeft() {\n    final HepProgram preProgram =\n        HepProgram.builder()\n            .addRuleInstance(FilterProjectTransposeRule.INSTANCE)\n            .addRuleInstance(FilterJoinRule.FILTER_ON_JOIN)\n            .addRuleInstance(ProjectMergeRule.INSTANCE)\n            .build();\n    final HepProgram program =\n        HepProgram.builder()\n            .addRuleInstance(SemiJoinRule.INSTANCE)\n            .build();\n    final String sql = \"select name from dept left join (\\n\"\n        + \"  select distinct deptno from emp\\n\"\n        + \"  where sal > 100) using (deptno)\";\n    sql(sql)\n        .withPre(preProgram)\n        .with(program)\n        .withDecorrelation(true)\n        .withTrim(true)\n        .check();\n  }\n","realPath":"core/src/test/java/org/apache/calcite/test/RelOptRulesTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":590,"status":"B"}],"commitId":"565d639261d126462a78e57ff7f21527f38697a9","commitMessage":"@@@[CALCITE-1495] SemiJoinRule should not apply to RIGHT and FULL JOIN.  and should strip LEFT JOIN\n\nAlso.  update SemiJoinRule to accept RelBuilderFactory and class parameters.\n","date":"2016-12-02 12:10:18","modifiedFileCount":"2","status":"B","submitter":"Julian Hyde"},{"authorTime":"2017-02-10 04:23:20","codes":[{"authorDate":"2017-02-10 04:23:20","commitOrder":2,"curCode":"  @Test public void testSemiJoinRuleRight() {\n    final HepProgram preProgram =\n        HepProgram.builder()\n            .addRuleInstance(FilterProjectTransposeRule.INSTANCE)\n            .addRuleInstance(FilterJoinRule.FILTER_ON_JOIN)\n            .addRuleInstance(ProjectMergeRule.INSTANCE)\n            .build();\n    final HepProgram program =\n        HepProgram.builder()\n            .addRuleInstance(SemiJoinRule.PROJECT)\n            .build();\n    final String sql = \"select dept.* from dept right join (\\n\"\n        + \"  select distinct deptno from emp\\n\"\n        + \"  where sal > 100) using (deptno)\";\n    sql(sql)\n        .withPre(preProgram)\n        .with(program)\n        .withDecorrelation(true)\n        .withTrim(true)\n        .checkUnchanged();\n  }\n","date":"2017-02-10 04:23:20","endLine":576,"groupId":"12618","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testSemiJoinRuleRight","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/a9/00339a7ce09efe95297e9f526d6b4351589631.src","preCode":"  @Test public void testSemiJoinRuleRight() {\n    final HepProgram preProgram =\n        HepProgram.builder()\n            .addRuleInstance(FilterProjectTransposeRule.INSTANCE)\n            .addRuleInstance(FilterJoinRule.FILTER_ON_JOIN)\n            .addRuleInstance(ProjectMergeRule.INSTANCE)\n            .build();\n    final HepProgram program =\n        HepProgram.builder()\n            .addRuleInstance(SemiJoinRule.INSTANCE)\n            .build();\n    final String sql = \"select dept.* from dept right join (\\n\"\n        + \"  select distinct deptno from emp\\n\"\n        + \"  where sal > 100) using (deptno)\";\n    sql(sql)\n        .withPre(preProgram)\n        .with(program)\n        .withDecorrelation(true)\n        .withTrim(true)\n        .checkUnchanged();\n  }\n","realPath":"core/src/test/java/org/apache/calcite/test/RelOptRulesTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":556,"status":"M"},{"authorDate":"2017-02-10 04:23:20","commitOrder":2,"curCode":"  @Test public void testSemiJoinRuleLeft() {\n    final HepProgram preProgram =\n        HepProgram.builder()\n            .addRuleInstance(FilterProjectTransposeRule.INSTANCE)\n            .addRuleInstance(FilterJoinRule.FILTER_ON_JOIN)\n            .addRuleInstance(ProjectMergeRule.INSTANCE)\n            .build();\n    final HepProgram program =\n        HepProgram.builder()\n            .addRuleInstance(SemiJoinRule.PROJECT)\n            .build();\n    final String sql = \"select name from dept left join (\\n\"\n        + \"  select distinct deptno from emp\\n\"\n        + \"  where sal > 100) using (deptno)\";\n    sql(sql)\n        .withPre(preProgram)\n        .with(program)\n        .withDecorrelation(true)\n        .withTrim(true)\n        .check();\n  }\n","date":"2017-02-10 04:23:20","endLine":622,"groupId":"12618","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testSemiJoinRuleLeft","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/a9/00339a7ce09efe95297e9f526d6b4351589631.src","preCode":"  @Test public void testSemiJoinRuleLeft() {\n    final HepProgram preProgram =\n        HepProgram.builder()\n            .addRuleInstance(FilterProjectTransposeRule.INSTANCE)\n            .addRuleInstance(FilterJoinRule.FILTER_ON_JOIN)\n            .addRuleInstance(ProjectMergeRule.INSTANCE)\n            .build();\n    final HepProgram program =\n        HepProgram.builder()\n            .addRuleInstance(SemiJoinRule.INSTANCE)\n            .build();\n    final String sql = \"select name from dept left join (\\n\"\n        + \"  select distinct deptno from emp\\n\"\n        + \"  where sal > 100) using (deptno)\";\n    sql(sql)\n        .withPre(preProgram)\n        .with(program)\n        .withDecorrelation(true)\n        .withTrim(true)\n        .check();\n  }\n","realPath":"core/src/test/java/org/apache/calcite/test/RelOptRulesTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":602,"status":"M"}],"commitId":"824d7e7a5943891ed39052c4e6e737646e52721c","commitMessage":"@@@[CALCITE-1628] Add an alternative match pattern for SemiJoinRule\n","date":"2017-02-10 04:23:20","modifiedFileCount":"4","status":"M","submitter":"maryannxue"},{"authorTime":"2020-04-02 10:39:10","codes":[{"authorDate":"2020-04-02 10:39:10","commitOrder":3,"curCode":"  @Test void testSemiJoinRuleRight() {\n    final HepProgram preProgram =\n        HepProgram.builder()\n            .addRuleInstance(FilterProjectTransposeRule.INSTANCE)\n            .addRuleInstance(FilterJoinRule.FILTER_ON_JOIN)\n            .addRuleInstance(ProjectMergeRule.INSTANCE)\n            .build();\n    final HepProgram program =\n        HepProgram.builder()\n            .addRuleInstance(SemiJoinRule.PROJECT)\n            .build();\n    final String sql = \"select dept.* from dept right join (\\n\"\n        + \"  select distinct deptno from emp\\n\"\n        + \"  where sal > 100) using (deptno)\";\n    sql(sql)\n        .withPre(preProgram)\n        .with(program)\n        .withDecorrelation(true)\n        .withTrim(true)\n        .checkUnchanged();\n  }\n","date":"2020-04-06 04:57:49","endLine":1105,"groupId":"12618","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testSemiJoinRuleRight","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/c1/c56354833d8acfcc210ae25313c78e9332a2ba.src","preCode":"  @Test public void testSemiJoinRuleRight() {\n    final HepProgram preProgram =\n        HepProgram.builder()\n            .addRuleInstance(FilterProjectTransposeRule.INSTANCE)\n            .addRuleInstance(FilterJoinRule.FILTER_ON_JOIN)\n            .addRuleInstance(ProjectMergeRule.INSTANCE)\n            .build();\n    final HepProgram program =\n        HepProgram.builder()\n            .addRuleInstance(SemiJoinRule.PROJECT)\n            .build();\n    final String sql = \"select dept.* from dept right join (\\n\"\n        + \"  select distinct deptno from emp\\n\"\n        + \"  where sal > 100) using (deptno)\";\n    sql(sql)\n        .withPre(preProgram)\n        .with(program)\n        .withDecorrelation(true)\n        .withTrim(true)\n        .checkUnchanged();\n  }\n","realPath":"core/src/test/java/org/apache/calcite/test/RelOptRulesTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":1085,"status":"M"},{"authorDate":"2020-04-02 10:39:10","commitOrder":3,"curCode":"  @Test void testSemiJoinRuleLeft() {\n    final HepProgram preProgram =\n        HepProgram.builder()\n            .addRuleInstance(FilterProjectTransposeRule.INSTANCE)\n            .addRuleInstance(FilterJoinRule.FILTER_ON_JOIN)\n            .addRuleInstance(ProjectMergeRule.INSTANCE)\n            .build();\n    final HepProgram program =\n        HepProgram.builder()\n            .addRuleInstance(SemiJoinRule.PROJECT)\n            .build();\n    final String sql = \"select name from dept left join (\\n\"\n        + \"  select distinct deptno from emp\\n\"\n        + \"  where sal > 100) using (deptno)\";\n    sql(sql)\n        .withPre(preProgram)\n        .with(program)\n        .withDecorrelation(true)\n        .withTrim(true)\n        .check();\n  }\n","date":"2020-04-06 04:57:49","endLine":1151,"groupId":"12618","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testSemiJoinRuleLeft","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/c1/c56354833d8acfcc210ae25313c78e9332a2ba.src","preCode":"  @Test public void testSemiJoinRuleLeft() {\n    final HepProgram preProgram =\n        HepProgram.builder()\n            .addRuleInstance(FilterProjectTransposeRule.INSTANCE)\n            .addRuleInstance(FilterJoinRule.FILTER_ON_JOIN)\n            .addRuleInstance(ProjectMergeRule.INSTANCE)\n            .build();\n    final HepProgram program =\n        HepProgram.builder()\n            .addRuleInstance(SemiJoinRule.PROJECT)\n            .build();\n    final String sql = \"select name from dept left join (\\n\"\n        + \"  select distinct deptno from emp\\n\"\n        + \"  where sal > 100) using (deptno)\";\n    sql(sql)\n        .withPre(preProgram)\n        .with(program)\n        .withDecorrelation(true)\n        .withTrim(true)\n        .check();\n  }\n","realPath":"core/src/test/java/org/apache/calcite/test/RelOptRulesTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":1131,"status":"M"}],"commitId":"9492dd4146f63ddc028010d6c4e86f6a5cb29a8d","commitMessage":"@@@[CALCITE-3892] Make junit test classes and methods non-public where possible\n\nPrior to junit 5.  classes and methods had to be public. This is no\nlonger the case.\n\nSome classes need to remain public because they are referenced from\nelsewhere.  or if they use reflection somehow. The remaining 'public'\nkeyword will be informative to maintainers.\n","date":"2020-04-06 04:57:49","modifiedFileCount":"196","status":"M","submitter":"Julian Hyde"},{"authorTime":"2020-07-09 04:45:12","codes":[{"authorDate":"2020-07-09 04:45:12","commitOrder":4,"curCode":"  @Test void testSemiJoinRuleRight() {\n    final HepProgram preProgram =\n        HepProgram.builder()\n            .addRuleInstance(CoreRules.FILTER_PROJECT_TRANSPOSE)\n            .addRuleInstance(CoreRules.FILTER_INTO_JOIN)\n            .addRuleInstance(CoreRules.PROJECT_MERGE)\n            .build();\n    final HepProgram program =\n        HepProgram.builder()\n            .addRuleInstance(CoreRules.PROJECT_TO_SEMI_JOIN)\n            .build();\n    final String sql = \"select dept.* from dept right join (\\n\"\n        + \"  select distinct deptno from emp\\n\"\n        + \"  where sal > 100) using (deptno)\";\n    sql(sql)\n        .withPre(preProgram)\n        .with(program)\n        .withDecorrelation(true)\n        .withTrim(true)\n        .checkUnchanged();\n  }\n","date":"2020-07-12 06:58:28","endLine":1167,"groupId":"5117","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"testSemiJoinRuleRight","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/41/d77aee9e74f65d9e26a1ffa96400062e1eb119.src","preCode":"  @Test void testSemiJoinRuleRight() {\n    final HepProgram preProgram =\n        HepProgram.builder()\n            .addRuleInstance(FilterProjectTransposeRule.INSTANCE)\n            .addRuleInstance(FilterJoinRule.FILTER_ON_JOIN)\n            .addRuleInstance(ProjectMergeRule.INSTANCE)\n            .build();\n    final HepProgram program =\n        HepProgram.builder()\n            .addRuleInstance(SemiJoinRule.PROJECT)\n            .build();\n    final String sql = \"select dept.* from dept right join (\\n\"\n        + \"  select distinct deptno from emp\\n\"\n        + \"  where sal > 100) using (deptno)\";\n    sql(sql)\n        .withPre(preProgram)\n        .with(program)\n        .withDecorrelation(true)\n        .withTrim(true)\n        .checkUnchanged();\n  }\n","realPath":"core/src/test/java/org/apache/calcite/test/RelOptRulesTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":1147,"status":"M"},{"authorDate":"2020-07-09 04:45:12","commitOrder":4,"curCode":"  @Test void testSemiJoinRuleLeft() {\n    final HepProgram preProgram =\n        HepProgram.builder()\n            .addRuleInstance(CoreRules.FILTER_PROJECT_TRANSPOSE)\n            .addRuleInstance(CoreRules.FILTER_INTO_JOIN)\n            .addRuleInstance(CoreRules.PROJECT_MERGE)\n            .build();\n    final HepProgram program =\n        HepProgram.builder()\n            .addRuleInstance(CoreRules.PROJECT_TO_SEMI_JOIN)\n            .build();\n    final String sql = \"select name from dept left join (\\n\"\n        + \"  select distinct deptno from emp\\n\"\n        + \"  where sal > 100) using (deptno)\";\n    sql(sql)\n        .withPre(preProgram)\n        .with(program)\n        .withDecorrelation(true)\n        .withTrim(true)\n        .check();\n  }\n","date":"2020-07-12 06:58:28","endLine":1213,"groupId":"5117","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"testSemiJoinRuleLeft","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/41/d77aee9e74f65d9e26a1ffa96400062e1eb119.src","preCode":"  @Test void testSemiJoinRuleLeft() {\n    final HepProgram preProgram =\n        HepProgram.builder()\n            .addRuleInstance(FilterProjectTransposeRule.INSTANCE)\n            .addRuleInstance(FilterJoinRule.FILTER_ON_JOIN)\n            .addRuleInstance(ProjectMergeRule.INSTANCE)\n            .build();\n    final HepProgram program =\n        HepProgram.builder()\n            .addRuleInstance(SemiJoinRule.PROJECT)\n            .build();\n    final String sql = \"select name from dept left join (\\n\"\n        + \"  select distinct deptno from emp\\n\"\n        + \"  where sal > 100) using (deptno)\";\n    sql(sql)\n        .withPre(preProgram)\n        .with(program)\n        .withDecorrelation(true)\n        .withTrim(true)\n        .check();\n  }\n","realPath":"core/src/test/java/org/apache/calcite/test/RelOptRulesTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":1193,"status":"M"}],"commitId":"23b26b6287315cc2cd236e705bb651077488fc5c","commitMessage":"@@@In preparation for [CALCITE-3923] and [CALCITE-4079].  deprecate fields and methods that will be removed between 1.24 and 1.25\n\nAlso.  in RelNode.  change some methods from 'to removed before 2.0'\nto 'to be removed before 1.25'. The methods are sDistinct(). \nisKey(ImmutableBitSet).  getQuery().  getRows().  getVariablesStopped(). \ncomputeSelfCost().  isValid(boolean).  getCollationList().  getChildExps().\n","date":"2020-07-12 06:58:28","modifiedFileCount":"137","status":"M","submitter":"Julian Hyde"},{"authorTime":"2020-08-05 16:20:39","codes":[{"authorDate":"2020-08-05 16:20:39","commitOrder":5,"curCode":"  @Test void testSemiJoinRuleRight() {\n    final String sql = \"select dept.* from dept right join (\\n\"\n        + \"  select distinct deptno from emp\\n\"\n        + \"  where sal > 100) using (deptno)\";\n    sql(sql)\n        .withPreRule(CoreRules.FILTER_PROJECT_TRANSPOSE,\n            CoreRules.FILTER_INTO_JOIN,\n            CoreRules.PROJECT_MERGE)\n        .withRule(CoreRules.PROJECT_TO_SEMI_JOIN)\n        .withDecorrelation(true)\n        .withTrim(true)\n        .checkUnchanged();\n  }\n","date":"2020-08-08 06:49:00","endLine":1086,"groupId":"10971","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"testSemiJoinRuleRight","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/c7/a464a80ae93f49d699fc44643f1fd0e5bacd57.src","preCode":"  @Test void testSemiJoinRuleRight() {\n    final HepProgram preProgram =\n        HepProgram.builder()\n            .addRuleInstance(CoreRules.FILTER_PROJECT_TRANSPOSE)\n            .addRuleInstance(CoreRules.FILTER_INTO_JOIN)\n            .addRuleInstance(CoreRules.PROJECT_MERGE)\n            .build();\n    final HepProgram program =\n        HepProgram.builder()\n            .addRuleInstance(CoreRules.PROJECT_TO_SEMI_JOIN)\n            .build();\n    final String sql = \"select dept.* from dept right join (\\n\"\n        + \"  select distinct deptno from emp\\n\"\n        + \"  where sal > 100) using (deptno)\";\n    sql(sql)\n        .withPre(preProgram)\n        .with(program)\n        .withDecorrelation(true)\n        .withTrim(true)\n        .checkUnchanged();\n  }\n","realPath":"core/src/test/java/org/apache/calcite/test/RelOptRulesTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":1074,"status":"M"},{"authorDate":"2020-08-05 16:20:39","commitOrder":5,"curCode":"  @Test void testSemiJoinRuleLeft() {\n    final String sql = \"select name from dept left join (\\n\"\n        + \"  select distinct deptno from emp\\n\"\n        + \"  where sal > 100) using (deptno)\";\n    sql(sql)\n        .withPreRule(CoreRules.FILTER_PROJECT_TRANSPOSE,\n            CoreRules.FILTER_INTO_JOIN,\n            CoreRules.PROJECT_MERGE)\n        .withRule(CoreRules.PROJECT_TO_SEMI_JOIN)\n        .withDecorrelation(true)\n        .withTrim(true)\n        .check();\n  }\n","date":"2020-08-08 06:49:00","endLine":1116,"groupId":"10971","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"testSemiJoinRuleLeft","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/c7/a464a80ae93f49d699fc44643f1fd0e5bacd57.src","preCode":"  @Test void testSemiJoinRuleLeft() {\n    final HepProgram preProgram =\n        HepProgram.builder()\n            .addRuleInstance(CoreRules.FILTER_PROJECT_TRANSPOSE)\n            .addRuleInstance(CoreRules.FILTER_INTO_JOIN)\n            .addRuleInstance(CoreRules.PROJECT_MERGE)\n            .build();\n    final HepProgram program =\n        HepProgram.builder()\n            .addRuleInstance(CoreRules.PROJECT_TO_SEMI_JOIN)\n            .build();\n    final String sql = \"select name from dept left join (\\n\"\n        + \"  select distinct deptno from emp\\n\"\n        + \"  where sal > 100) using (deptno)\";\n    sql(sql)\n        .withPre(preProgram)\n        .with(program)\n        .withDecorrelation(true)\n        .withTrim(true)\n        .check();\n  }\n","realPath":"core/src/test/java/org/apache/calcite/test/RelOptRulesTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":1104,"status":"M"}],"commitId":"3f75e5ee4c9393842d5df61d1f32eb4255a77dde","commitMessage":"@@@Refactor RelOptRulesTest\n\nIn tests that use programs that are simple lists of rules. \nuse the `withRule` and `withPreRule` methods rather than\ncreating explicit programs. It makes tests more concise.\n","date":"2020-08-08 06:49:00","modifiedFileCount":"2","status":"M","submitter":"Julian Hyde"}]
