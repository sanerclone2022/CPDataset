[{"authorTime":"2019-05-05 17:23:45","codes":[{"authorDate":"2018-01-31 11:37:56","commitOrder":2,"curCode":"  @Test public void testCreateType() throws Exception {\n    try (Connection c = connect();\n         Statement s = c.createStatement()) {\n      boolean b = s.execute(\"create type mytype1 as BIGINT\");\n      assertThat(b, is(false));\n      b = s.execute(\"create or replace type mytype2 as (i int not null, jj mytype1)\");\n      assertThat(b, is(false));\n      b = s.execute(\"create type mytype3 as (i int not null, jj mytype2)\");\n      assertThat(b, is(false));\n      b = s.execute(\"create or replace type mytype1 as DOUBLE\");\n      assertThat(b, is(false));\n      b = s.execute(\"create table t (c mytype1 NOT NULL)\");\n      assertThat(b, is(false));\n      b = s.execute(\"create type mytype4 as BIGINT\");\n      assertThat(b, is(false));\n      int x = s.executeUpdate(\"insert into t values 12.0\");\n      assertThat(x, is(1));\n      x = s.executeUpdate(\"insert into t values 3.0\");\n      assertThat(x, is(1));\n      try (ResultSet r = s.executeQuery(\"select CAST(c AS mytype4) from t\")) {\n        assertThat(r.next(), is(true));\n        assertThat(r.getInt(1), is(12));\n        assertThat(r.next(), is(true));\n        assertThat(r.getInt(1), is(3));\n        assertThat(r.next(), is(false));\n      }\n    }\n  }\n","date":"2018-04-21 02:11:59","endLine":116,"groupId":"8279","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testCreateType","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/83/5c19a91b835c792496ea034e24c40319c726bc.src","preCode":"  @Test public void testCreateType() throws Exception {\n    try (Connection c = connect();\n         Statement s = c.createStatement()) {\n      boolean b = s.execute(\"create type mytype1 as BIGINT\");\n      assertThat(b, is(false));\n      b = s.execute(\"create or replace type mytype2 as (i int not null, jj mytype1)\");\n      assertThat(b, is(false));\n      b = s.execute(\"create type mytype3 as (i int not null, jj mytype2)\");\n      assertThat(b, is(false));\n      b = s.execute(\"create or replace type mytype1 as DOUBLE\");\n      assertThat(b, is(false));\n      b = s.execute(\"create table t (c mytype1 NOT NULL)\");\n      assertThat(b, is(false));\n      b = s.execute(\"create type mytype4 as BIGINT\");\n      assertThat(b, is(false));\n      int x = s.executeUpdate(\"insert into t values 12.0\");\n      assertThat(x, is(1));\n      x = s.executeUpdate(\"insert into t values 3.0\");\n      assertThat(x, is(1));\n      try (ResultSet r = s.executeQuery(\"select CAST(c AS mytype4) from t\")) {\n        assertThat(r.next(), is(true));\n        assertThat(r.getInt(1), is(12));\n        assertThat(r.next(), is(true));\n        assertThat(r.getInt(1), is(3));\n        assertThat(r.next(), is(false));\n      }\n    }\n  }\n","realPath":"server/src/test/java/org/apache/calcite/test/ServerTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":89,"status":"NB"},{"authorDate":"2019-05-05 17:23:45","commitOrder":2,"curCode":"  @Test public void testInsertCastedValueOfCompositeUdt() throws Exception {\n    try (Connection c = connect();\n         Statement s = c.createStatement()) {\n      boolean b = s.execute(\"create type mytype as (i int, j int)\");\n      assertThat(b, is(false));\n      b = s.execute(\"create table w (i int not null, j mytype)\");\n      assertThat(b, is(false));\n      int x = s.executeUpdate(\"insert into w \"\n          + \"values (1, cast((select j from w limit 1) as mytype))\");\n      assertThat(x, is(1));\n    }\n  }\n","date":"2019-05-08 23:37:29","endLine":168,"groupId":"7054","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testInsertCastedValueOfCompositeUdt","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/3e/4a71b74bd64d1b783d4c316b4ee3ba8c973b45.src","preCode":"  @Test public void testInsertCastedValueOfCompositeUdt() throws Exception {\n    try (Connection c = connect();\n         Statement s = c.createStatement()) {\n      boolean b = s.execute(\"create type mytype as (i int, j int)\");\n      assertThat(b, is(false));\n      b = s.execute(\"create table w (i int not null, j mytype)\");\n      assertThat(b, is(false));\n      int x = s.executeUpdate(\"insert into w \"\n          + \"values (1, cast((select j from w limit 1) as mytype))\");\n      assertThat(x, is(1));\n    }\n  }\n","realPath":"server/src/test/java/org/apache/calcite/test/ServerTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":157,"status":"B"}],"commitId":"b8bdfb074be12f90c98f9f1fa2af8cf46f2d36f1","commitMessage":"@@@[CALCITE-3046] CompileException when inserting casted value of composited user defined type into table\n\nAlso.  add several test cases for EnumerableRelImplementor.TypeFinder.\n","date":"2019-05-08 23:37:29","modifiedFileCount":"3","status":"M","submitter":"Hongze Zhang"},{"authorTime":"2020-04-02 10:39:10","codes":[{"authorDate":"2020-04-02 10:39:10","commitOrder":3,"curCode":"  @Test void testCreateType() throws Exception {\n    try (Connection c = connect();\n         Statement s = c.createStatement()) {\n      boolean b = s.execute(\"create type mytype1 as BIGINT\");\n      assertThat(b, is(false));\n      b = s.execute(\"create or replace type mytype2 as (i int not null, jj mytype1)\");\n      assertThat(b, is(false));\n      b = s.execute(\"create type mytype3 as (i int not null, jj mytype2)\");\n      assertThat(b, is(false));\n      b = s.execute(\"create or replace type mytype1 as DOUBLE\");\n      assertThat(b, is(false));\n      b = s.execute(\"create table t (c mytype1 NOT NULL)\");\n      assertThat(b, is(false));\n      b = s.execute(\"create type mytype4 as BIGINT\");\n      assertThat(b, is(false));\n      int x = s.executeUpdate(\"insert into t values 12.0\");\n      assertThat(x, is(1));\n      x = s.executeUpdate(\"insert into t values 3.0\");\n      assertThat(x, is(1));\n      try (ResultSet r = s.executeQuery(\"select CAST(c AS mytype4) from t\")) {\n        assertThat(r.next(), is(true));\n        assertThat(r.getInt(1), is(12));\n        assertThat(r.next(), is(true));\n        assertThat(r.getInt(1), is(3));\n        assertThat(r.next(), is(false));\n      }\n    }\n  }\n","date":"2020-04-06 04:57:49","endLine":122,"groupId":"10233","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testCreateType","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/f9/1c68810b97ce4f4b6d473470bf13f83e7ad116.src","preCode":"  @Test public void testCreateType() throws Exception {\n    try (Connection c = connect();\n         Statement s = c.createStatement()) {\n      boolean b = s.execute(\"create type mytype1 as BIGINT\");\n      assertThat(b, is(false));\n      b = s.execute(\"create or replace type mytype2 as (i int not null, jj mytype1)\");\n      assertThat(b, is(false));\n      b = s.execute(\"create type mytype3 as (i int not null, jj mytype2)\");\n      assertThat(b, is(false));\n      b = s.execute(\"create or replace type mytype1 as DOUBLE\");\n      assertThat(b, is(false));\n      b = s.execute(\"create table t (c mytype1 NOT NULL)\");\n      assertThat(b, is(false));\n      b = s.execute(\"create type mytype4 as BIGINT\");\n      assertThat(b, is(false));\n      int x = s.executeUpdate(\"insert into t values 12.0\");\n      assertThat(x, is(1));\n      x = s.executeUpdate(\"insert into t values 3.0\");\n      assertThat(x, is(1));\n      try (ResultSet r = s.executeQuery(\"select CAST(c AS mytype4) from t\")) {\n        assertThat(r.next(), is(true));\n        assertThat(r.getInt(1), is(12));\n        assertThat(r.next(), is(true));\n        assertThat(r.getInt(1), is(3));\n        assertThat(r.next(), is(false));\n      }\n    }\n  }\n","realPath":"server/src/test/java/org/apache/calcite/test/ServerTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":95,"status":"M"},{"authorDate":"2020-04-02 10:39:10","commitOrder":3,"curCode":"  @Test void testInsertCastedValueOfCompositeUdt() throws Exception {\n    try (Connection c = connect();\n         Statement s = c.createStatement()) {\n      boolean b = s.execute(\"create type mytype as (i int, j int)\");\n      assertThat(b, is(false));\n      b = s.execute(\"create table w (i int not null, j mytype)\");\n      assertThat(b, is(false));\n      int x = s.executeUpdate(\"insert into w \"\n          + \"values (1, cast((select j from w limit 1) as mytype))\");\n      assertThat(x, is(1));\n    }\n  }\n","date":"2020-04-06 04:57:49","endLine":248,"groupId":"10233","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testInsertCastedValueOfCompositeUdt","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/f9/1c68810b97ce4f4b6d473470bf13f83e7ad116.src","preCode":"  @Test public void testInsertCastedValueOfCompositeUdt() throws Exception {\n    try (Connection c = connect();\n         Statement s = c.createStatement()) {\n      boolean b = s.execute(\"create type mytype as (i int, j int)\");\n      assertThat(b, is(false));\n      b = s.execute(\"create table w (i int not null, j mytype)\");\n      assertThat(b, is(false));\n      int x = s.executeUpdate(\"insert into w \"\n          + \"values (1, cast((select j from w limit 1) as mytype))\");\n      assertThat(x, is(1));\n    }\n  }\n","realPath":"server/src/test/java/org/apache/calcite/test/ServerTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":237,"status":"M"}],"commitId":"9492dd4146f63ddc028010d6c4e86f6a5cb29a8d","commitMessage":"@@@[CALCITE-3892] Make junit test classes and methods non-public where possible\n\nPrior to junit 5.  classes and methods had to be public. This is no\nlonger the case.\n\nSome classes need to remain public because they are referenced from\nelsewhere.  or if they use reflection somehow. The remaining 'public'\nkeyword will be informative to maintainers.\n","date":"2020-04-06 04:57:49","modifiedFileCount":"196","status":"M","submitter":"Julian Hyde"}]
