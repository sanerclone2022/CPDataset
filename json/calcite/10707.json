[{"authorTime":"2019-01-02 18:56:57","codes":[{"authorDate":"2019-01-02 18:56:57","commitOrder":1,"curCode":"  public void testCoalesce() {\n    final Project project = (Project) convertSqlToRel(\n            \"SELECT COALESCE(NULL, 'a')\", false);\n    final RexNode rex = project.getChildExps().get(0);\n    final RexToSqlNodeConverter rexToSqlNodeConverter = rexToSqlNodeConverter();\n    final SqlNode convertedSql = rexToSqlNodeConverter.convertNode(rex);\n    assertEquals(\n            \"CASE WHEN NULL IS NOT NULL THEN NULL ELSE 'a' END\",\n            convertedSql.toString());\n  }\n","date":"2019-01-04 22:53:12","endLine":53,"groupId":"780","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testCoalesce","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/2f/6f132eb48201620a8aa0e4feaca13bac802504.src","preCode":"  public void testCoalesce() {\n    final Project project = (Project) convertSqlToRel(\n            \"SELECT COALESCE(NULL, 'a')\", false);\n    final RexNode rex = project.getChildExps().get(0);\n    final RexToSqlNodeConverter rexToSqlNodeConverter = rexToSqlNodeConverter();\n    final SqlNode convertedSql = rexToSqlNodeConverter.convertNode(rex);\n    assertEquals(\n            \"CASE WHEN NULL IS NOT NULL THEN NULL ELSE 'a' END\",\n            convertedSql.toString());\n  }\n","realPath":"core/src/test/java/org/apache/calcite/rex/RexSqlStandardConvertletTableTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":44,"status":"B"},{"authorDate":"2019-01-02 18:56:57","commitOrder":1,"curCode":"  public void testCaseNoValue() {\n    final Project project = (Project) convertSqlToRel(\n            \"SELECT CASE WHEN NULL IS NULL THEN NULL ELSE 'a' END\", false);\n    final RexNode rex = project.getChildExps().get(0);\n    final RexToSqlNodeConverter rexToSqlNodeConverter = rexToSqlNodeConverter();\n    final SqlNode convertedSql = rexToSqlNodeConverter.convertNode(rex);\n    assertEquals(\n            \"CASE WHEN NULL IS NULL THEN NULL ELSE 'a' END\",\n            convertedSql.toString());\n  }\n","date":"2019-01-04 22:53:12","endLine":78,"groupId":"780","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testCaseNoValue","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/2f/6f132eb48201620a8aa0e4feaca13bac802504.src","preCode":"  public void testCaseNoValue() {\n    final Project project = (Project) convertSqlToRel(\n            \"SELECT CASE WHEN NULL IS NULL THEN NULL ELSE 'a' END\", false);\n    final RexNode rex = project.getChildExps().get(0);\n    final RexToSqlNodeConverter rexToSqlNodeConverter = rexToSqlNodeConverter();\n    final SqlNode convertedSql = rexToSqlNodeConverter.convertNode(rex);\n    assertEquals(\n            \"CASE WHEN NULL IS NULL THEN NULL ELSE 'a' END\",\n            convertedSql.toString());\n  }\n","realPath":"core/src/test/java/org/apache/calcite/rex/RexSqlStandardConvertletTableTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":69,"status":"B"}],"commitId":"e67eb2d74c0a1f32d74025048f30fd8a94d98f8f","commitMessage":"@@@[CALCITE-2767] Fix conversion of Case in RexSqlStandardConvertletTable (Benoit Hanotte)\n\n`SqlCaseOperator.createCall()` requires 4 operands [1]:\n 1. first value (i.e. CASE value WHEN...)\n 2. when condifitions (as SqlNodeList)\n 3. then values (as SqlNodeLists)\n 4. else value\n\n`RexSqlStandardConvertletTable` always only pass 3 arguments [2] as it uses the generic form such as\n`CASE WHEN condition1 THEN val2 ... ELSE val3 END` and never the form\n`CASE val WHEN condition1 THEN val2 ELSE val3`.\n\nWhen calling `SqlCaseOperator.createCall()`.  it needs to pass a null sql node for the first value in\norder to correctly provide the 4 expected arguments and not only the last 3.\n\n[1] https://github.com/apache/calcite/blob/59b76701d9c805f51b0929577ca604fdbfe00b0b/core/src/main/java/org/apache/calcite/sql/fun/SqlCaseOperator.java#L288\n[2] https://github.com/apache/calcite/blob/59b76701d9c805f51b0929577ca604fdbfe00b0b/core/src/main/java/org/apache/calcite/rex/RexSqlStandardConvertletTable.java#L239\n\nfixes #990\n","date":"2019-01-04 22:53:12","modifiedFileCount":"3","status":"B","submitter":"Benoit Hanotte"},{"authorTime":"2019-12-04 02:44:13","codes":[{"authorDate":"2019-12-04 02:44:13","commitOrder":2,"curCode":"  @Test public void testCoalesce() {\n    final Project project = (Project) convertSqlToRel(\n            \"SELECT COALESCE(NULL, 'a')\", false);\n    final RexNode rex = project.getChildExps().get(0);\n    final RexToSqlNodeConverter rexToSqlNodeConverter = rexToSqlNodeConverter();\n    final SqlNode convertedSql = rexToSqlNodeConverter.convertNode(rex);\n    assertEquals(\n            \"CASE WHEN NULL IS NOT NULL THEN NULL ELSE 'a' END\",\n            convertedSql.toString());\n  }\n","date":"2019-12-14 23:57:27","endLine":53,"groupId":"780","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testCoalesce","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/52/bac681ab4341df2551208dad4e4ae2061dbd55.src","preCode":"  public void testCoalesce() {\n    final Project project = (Project) convertSqlToRel(\n            \"SELECT COALESCE(NULL, 'a')\", false);\n    final RexNode rex = project.getChildExps().get(0);\n    final RexToSqlNodeConverter rexToSqlNodeConverter = rexToSqlNodeConverter();\n    final SqlNode convertedSql = rexToSqlNodeConverter.convertNode(rex);\n    assertEquals(\n            \"CASE WHEN NULL IS NOT NULL THEN NULL ELSE 'a' END\",\n            convertedSql.toString());\n  }\n","realPath":"core/src/test/java/org/apache/calcite/rex/RexSqlStandardConvertletTableTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":44,"status":"M"},{"authorDate":"2019-12-04 02:44:13","commitOrder":2,"curCode":"  @Test public void testCaseNoValue() {\n    final Project project = (Project) convertSqlToRel(\n            \"SELECT CASE WHEN NULL IS NULL THEN NULL ELSE 'a' END\", false);\n    final RexNode rex = project.getChildExps().get(0);\n    final RexToSqlNodeConverter rexToSqlNodeConverter = rexToSqlNodeConverter();\n    final SqlNode convertedSql = rexToSqlNodeConverter.convertNode(rex);\n    assertEquals(\n            \"CASE WHEN NULL IS NULL THEN NULL ELSE 'a' END\",\n            convertedSql.toString());\n  }\n","date":"2019-12-14 23:57:27","endLine":76,"groupId":"780","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testCaseNoValue","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/52/bac681ab4341df2551208dad4e4ae2061dbd55.src","preCode":"  public void testCaseNoValue() {\n    final Project project = (Project) convertSqlToRel(\n            \"SELECT CASE WHEN NULL IS NULL THEN NULL ELSE 'a' END\", false);\n    final RexNode rex = project.getChildExps().get(0);\n    final RexToSqlNodeConverter rexToSqlNodeConverter = rexToSqlNodeConverter();\n    final SqlNode convertedSql = rexToSqlNodeConverter.convertNode(rex);\n    assertEquals(\n            \"CASE WHEN NULL IS NULL THEN NULL ELSE 'a' END\",\n            convertedSql.toString());\n  }\n","realPath":"core/src/test/java/org/apache/calcite/rex/RexSqlStandardConvertletTableTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":67,"status":"M"}],"commitId":"571731b80a58eb095ebac7123285c375e7afff90","commitMessage":"@@@[CALCITE-3559] Update formatting: remove \"// End\" trailers.  move @Test from their own lines\n","date":"2019-12-14 23:57:27","modifiedFileCount":"1961","status":"M","submitter":"Vladimir Sitnikov"},{"authorTime":"2020-04-02 10:39:10","codes":[{"authorDate":"2020-04-02 10:39:10","commitOrder":3,"curCode":"  @Test void testCoalesce() {\n    final Project project = (Project) convertSqlToRel(\n            \"SELECT COALESCE(NULL, 'a')\", false);\n    final RexNode rex = project.getChildExps().get(0);\n    final RexToSqlNodeConverter rexToSqlNodeConverter = rexToSqlNodeConverter();\n    final SqlNode convertedSql = rexToSqlNodeConverter.convertNode(rex);\n    assertEquals(\n            \"CASE WHEN NULL IS NOT NULL THEN NULL ELSE 'a' END\",\n            convertedSql.toString());\n  }\n","date":"2020-04-06 04:57:49","endLine":53,"groupId":"780","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testCoalesce","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/8a/d835725b14ab2c9485d2ca20f7e0be1c683d2d.src","preCode":"  @Test public void testCoalesce() {\n    final Project project = (Project) convertSqlToRel(\n            \"SELECT COALESCE(NULL, 'a')\", false);\n    final RexNode rex = project.getChildExps().get(0);\n    final RexToSqlNodeConverter rexToSqlNodeConverter = rexToSqlNodeConverter();\n    final SqlNode convertedSql = rexToSqlNodeConverter.convertNode(rex);\n    assertEquals(\n            \"CASE WHEN NULL IS NOT NULL THEN NULL ELSE 'a' END\",\n            convertedSql.toString());\n  }\n","realPath":"core/src/test/java/org/apache/calcite/rex/RexSqlStandardConvertletTableTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":44,"status":"M"},{"authorDate":"2020-04-02 10:39:10","commitOrder":3,"curCode":"  @Test void testCaseNoValue() {\n    final Project project = (Project) convertSqlToRel(\n            \"SELECT CASE WHEN NULL IS NULL THEN NULL ELSE 'a' END\", false);\n    final RexNode rex = project.getChildExps().get(0);\n    final RexToSqlNodeConverter rexToSqlNodeConverter = rexToSqlNodeConverter();\n    final SqlNode convertedSql = rexToSqlNodeConverter.convertNode(rex);\n    assertEquals(\n            \"CASE WHEN NULL IS NULL THEN NULL ELSE 'a' END\",\n            convertedSql.toString());\n  }\n","date":"2020-04-06 04:57:49","endLine":76,"groupId":"780","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testCaseNoValue","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/8a/d835725b14ab2c9485d2ca20f7e0be1c683d2d.src","preCode":"  @Test public void testCaseNoValue() {\n    final Project project = (Project) convertSqlToRel(\n            \"SELECT CASE WHEN NULL IS NULL THEN NULL ELSE 'a' END\", false);\n    final RexNode rex = project.getChildExps().get(0);\n    final RexToSqlNodeConverter rexToSqlNodeConverter = rexToSqlNodeConverter();\n    final SqlNode convertedSql = rexToSqlNodeConverter.convertNode(rex);\n    assertEquals(\n            \"CASE WHEN NULL IS NULL THEN NULL ELSE 'a' END\",\n            convertedSql.toString());\n  }\n","realPath":"core/src/test/java/org/apache/calcite/rex/RexSqlStandardConvertletTableTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":67,"status":"M"}],"commitId":"9492dd4146f63ddc028010d6c4e86f6a5cb29a8d","commitMessage":"@@@[CALCITE-3892] Make junit test classes and methods non-public where possible\n\nPrior to junit 5.  classes and methods had to be public. This is no\nlonger the case.\n\nSome classes need to remain public because they are referenced from\nelsewhere.  or if they use reflection somehow. The remaining 'public'\nkeyword will be informative to maintainers.\n","date":"2020-04-06 04:57:49","modifiedFileCount":"196","status":"M","submitter":"Julian Hyde"},{"authorTime":"2020-06-09 21:16:22","codes":[{"authorDate":"2020-06-09 21:16:22","commitOrder":4,"curCode":"  @Test void testCoalesce() {\n    final Project project = (Project) convertSqlToRel(\n            \"SELECT COALESCE(NULL, 'a')\", false);\n    final RexNode rex = project.getProjects().get(0);\n    final RexToSqlNodeConverter rexToSqlNodeConverter = rexToSqlNodeConverter();\n    final SqlNode convertedSql = rexToSqlNodeConverter.convertNode(rex);\n    assertEquals(\n            \"CASE WHEN NULL IS NOT NULL THEN NULL ELSE 'a' END\",\n            convertedSql.toString());\n  }\n","date":"2020-06-16 11:11:13","endLine":53,"groupId":"10707","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"testCoalesce","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/f5/e235b02425b71ddbb29cdefa7cd0c3c85ceccd.src","preCode":"  @Test void testCoalesce() {\n    final Project project = (Project) convertSqlToRel(\n            \"SELECT COALESCE(NULL, 'a')\", false);\n    final RexNode rex = project.getChildExps().get(0);\n    final RexToSqlNodeConverter rexToSqlNodeConverter = rexToSqlNodeConverter();\n    final SqlNode convertedSql = rexToSqlNodeConverter.convertNode(rex);\n    assertEquals(\n            \"CASE WHEN NULL IS NOT NULL THEN NULL ELSE 'a' END\",\n            convertedSql.toString());\n  }\n","realPath":"core/src/test/java/org/apache/calcite/rex/RexSqlStandardConvertletTableTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":44,"status":"M"},{"authorDate":"2020-06-09 21:16:22","commitOrder":4,"curCode":"  @Test void testCaseNoValue() {\n    final Project project = (Project) convertSqlToRel(\n            \"SELECT CASE WHEN NULL IS NULL THEN NULL ELSE 'a' END\", false);\n    final RexNode rex = project.getProjects().get(0);\n    final RexToSqlNodeConverter rexToSqlNodeConverter = rexToSqlNodeConverter();\n    final SqlNode convertedSql = rexToSqlNodeConverter.convertNode(rex);\n    assertEquals(\n            \"CASE WHEN NULL IS NULL THEN NULL ELSE 'a' END\",\n            convertedSql.toString());\n  }\n","date":"2020-06-16 11:11:13","endLine":76,"groupId":"10707","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"testCaseNoValue","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/f5/e235b02425b71ddbb29cdefa7cd0c3c85ceccd.src","preCode":"  @Test void testCaseNoValue() {\n    final Project project = (Project) convertSqlToRel(\n            \"SELECT CASE WHEN NULL IS NULL THEN NULL ELSE 'a' END\", false);\n    final RexNode rex = project.getChildExps().get(0);\n    final RexToSqlNodeConverter rexToSqlNodeConverter = rexToSqlNodeConverter();\n    final SqlNode convertedSql = rexToSqlNodeConverter.convertNode(rex);\n    assertEquals(\n            \"CASE WHEN NULL IS NULL THEN NULL ELSE 'a' END\",\n            convertedSql.toString());\n  }\n","realPath":"core/src/test/java/org/apache/calcite/rex/RexSqlStandardConvertletTableTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":67,"status":"M"}],"commitId":"69f25863f5f4197c17927a39a82cbf1cffd12b80","commitMessage":"@@@[CALCITE-3786] Add Digest interface to enable efficient hashCode(equals) for RexNode and RelNode\n\n* Add class Digest used to identify the node;\n* There is a pre-computed hashcode to speedup #hashCode and #equals;\n* Change RexCall to use object#equals instead of pure string digest\ncomparison;\n* We only support RexInputRef normalization which is the most common\ncase;\n* Remove RexNode#toStringRaw because it makes the thing complicated. \nRexNode can always be normalized(default true).\n","date":"2020-06-16 11:11:13","modifiedFileCount":"51","status":"M","submitter":"yuzhao.cyz"}]
