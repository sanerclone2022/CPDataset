[{"authorTime":"2014-11-14 09:39:29","codes":[{"authorDate":"2014-11-14 09:39:29","commitOrder":1,"curCode":"  @Test public void testToCamelCase() {\n    assertEquals(\"myJdbcDriver\", Util.toCamelCase(\"MY_JDBC_DRIVER\"));\n    assertEquals(\"myJdbcDriver\", Util.toCamelCase(\"MY_JDBC__DRIVER\"));\n    assertEquals(\"myJdbcDriver\", Util.toCamelCase(\"my_jdbc_driver\"));\n    assertEquals(\"abCdefGHij\", Util.toCamelCase(\"ab_cdEf_g_Hij\"));\n    assertEquals(\"JdbcDriver\", Util.toCamelCase(\"_JDBC_DRIVER\"));\n    assertEquals(\"\", Util.toCamelCase(\"_\"));\n    assertEquals(\"\", Util.toCamelCase(\"\"));\n  }\n","date":"2014-11-14 09:39:34","endLine":936,"groupId":"3249","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testToCamelCase","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/b6/bcf00b20c160eb6cf88dba6e1c55077cd2af9e.src","preCode":"  @Test public void testToCamelCase() {\n    assertEquals(\"myJdbcDriver\", Util.toCamelCase(\"MY_JDBC_DRIVER\"));\n    assertEquals(\"myJdbcDriver\", Util.toCamelCase(\"MY_JDBC__DRIVER\"));\n    assertEquals(\"myJdbcDriver\", Util.toCamelCase(\"my_jdbc_driver\"));\n    assertEquals(\"abCdefGHij\", Util.toCamelCase(\"ab_cdEf_g_Hij\"));\n    assertEquals(\"JdbcDriver\", Util.toCamelCase(\"_JDBC_DRIVER\"));\n    assertEquals(\"\", Util.toCamelCase(\"_\"));\n    assertEquals(\"\", Util.toCamelCase(\"\"));\n  }\n","realPath":"core/src/test/java/org/apache/calcite/util/UtilTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":928,"status":"B"},{"authorDate":"2014-11-14 09:39:29","commitOrder":1,"curCode":"  @Test public void testCamelToUpper() {\n    assertEquals(\"MY_JDBC_DRIVER\", Util.camelToUpper(\"myJdbcDriver\"));\n    assertEquals(\"MY_J_D_B_C_DRIVER\", Util.camelToUpper(\"myJDBCDriver\"));\n    assertEquals(\"AB_CDEF_G_HIJ\", Util.camelToUpper(\"abCdefGHij\"));\n    assertEquals(\"_JDBC_DRIVER\", Util.camelToUpper(\"JdbcDriver\"));\n    assertEquals(\"\", Util.camelToUpper(\"\"));\n  }\n","date":"2014-11-14 09:39:34","endLine":947,"groupId":"3249","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testCamelToUpper","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/b6/bcf00b20c160eb6cf88dba6e1c55077cd2af9e.src","preCode":"  @Test public void testCamelToUpper() {\n    assertEquals(\"MY_JDBC_DRIVER\", Util.camelToUpper(\"myJdbcDriver\"));\n    assertEquals(\"MY_J_D_B_C_DRIVER\", Util.camelToUpper(\"myJDBCDriver\"));\n    assertEquals(\"AB_CDEF_G_HIJ\", Util.camelToUpper(\"abCdefGHij\"));\n    assertEquals(\"_JDBC_DRIVER\", Util.camelToUpper(\"JdbcDriver\"));\n    assertEquals(\"\", Util.camelToUpper(\"\"));\n  }\n","realPath":"core/src/test/java/org/apache/calcite/util/UtilTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":941,"status":"B"}],"commitId":"a611d645ad754844a39f3d98f5f814f13dbd9404","commitMessage":"@@@[CALCITE-296] Re-organize package structure;\n[CALCITE-419] Naming convention for planner rules\n\nThis change only renames files (and deletes some obsolete files). There are no content changes.\n","date":"2014-11-14 09:39:34","modifiedFileCount":"0","status":"B","submitter":"Julian Hyde"},{"authorTime":"2014-12-01 23:51:36","codes":[{"authorDate":"2014-12-01 23:51:36","commitOrder":2,"curCode":"  @Test public void testToCamelCase() {\n    assertEquals(\"myJdbcDriver\", AvaticaUtils.toCamelCase(\"MY_JDBC_DRIVER\"));\n    assertEquals(\"myJdbcDriver\", AvaticaUtils.toCamelCase(\"MY_JDBC__DRIVER\"));\n    assertEquals(\"myJdbcDriver\", AvaticaUtils.toCamelCase(\"my_jdbc_driver\"));\n    assertEquals(\"abCdefGHij\", AvaticaUtils.toCamelCase(\"ab_cdEf_g_Hij\"));\n    assertEquals(\"JdbcDriver\", AvaticaUtils.toCamelCase(\"_JDBC_DRIVER\"));\n    assertEquals(\"\", AvaticaUtils.toCamelCase(\"_\"));\n    assertEquals(\"\", AvaticaUtils.toCamelCase(\"\"));\n  }\n","date":"2014-12-09 06:56:01","endLine":959,"groupId":"3249","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testToCamelCase","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/31/aaef50fd6647c7759de5f96816151e4634bd33.src","preCode":"  @Test public void testToCamelCase() {\n    assertEquals(\"myJdbcDriver\", Util.toCamelCase(\"MY_JDBC_DRIVER\"));\n    assertEquals(\"myJdbcDriver\", Util.toCamelCase(\"MY_JDBC__DRIVER\"));\n    assertEquals(\"myJdbcDriver\", Util.toCamelCase(\"my_jdbc_driver\"));\n    assertEquals(\"abCdefGHij\", Util.toCamelCase(\"ab_cdEf_g_Hij\"));\n    assertEquals(\"JdbcDriver\", Util.toCamelCase(\"_JDBC_DRIVER\"));\n    assertEquals(\"\", Util.toCamelCase(\"_\"));\n    assertEquals(\"\", Util.toCamelCase(\"\"));\n  }\n","realPath":"core/src/test/java/org/apache/calcite/util/UtilTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":951,"status":"M"},{"authorDate":"2014-12-01 23:51:36","commitOrder":2,"curCode":"  @Test public void testCamelToUpper() {\n    assertEquals(\"MY_JDBC_DRIVER\", AvaticaUtils.camelToUpper(\"myJdbcDriver\"));\n    assertEquals(\"MY_J_D_B_C_DRIVER\",\n        AvaticaUtils.camelToUpper(\"myJDBCDriver\"));\n    assertEquals(\"AB_CDEF_G_HIJ\", AvaticaUtils.camelToUpper(\"abCdefGHij\"));\n    assertEquals(\"_JDBC_DRIVER\", AvaticaUtils.camelToUpper(\"JdbcDriver\"));\n    assertEquals(\"\", AvaticaUtils.camelToUpper(\"\"));\n  }\n","date":"2014-12-09 06:56:01","endLine":969,"groupId":"3249","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testCamelToUpper","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/31/aaef50fd6647c7759de5f96816151e4634bd33.src","preCode":"  @Test public void testCamelToUpper() {\n    assertEquals(\"MY_JDBC_DRIVER\", Util.camelToUpper(\"myJdbcDriver\"));\n    assertEquals(\"MY_J_D_B_C_DRIVER\", Util.camelToUpper(\"myJDBCDriver\"));\n    assertEquals(\"AB_CDEF_G_HIJ\", Util.camelToUpper(\"abCdefGHij\"));\n    assertEquals(\"_JDBC_DRIVER\", Util.camelToUpper(\"JdbcDriver\"));\n    assertEquals(\"\", Util.camelToUpper(\"\"));\n  }\n","realPath":"core/src/test/java/org/apache/calcite/util/UtilTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":962,"status":"M"}],"commitId":"94752a6066cd8a379782510a78a885cffb5aadb9","commitMessage":"@@@[CALCITE-93] Calcite RPC server;\n[CALCITE-94] Remote JDBC driver\n\nAdd module.  calcite-avatica-server. HttpServer is an RPC server that listens on port 8765 for JSON requests over HTTP.\n\nWe can now execute basic queries.  and schema and catalogs metadata requests.  over request-response.\n\nChange interface AvaticaPrepareResult to class Meta.Signature.\n\nMove DateTimeUtil to Avatica and rename to DateTimeUtils.\n\nLinq4j.iterableEnumerator checks whether the Iterable is already an Enumerable; IterableEnumerator calls close() if the Iterator implements Closeable.\n\nAdd test case for [CALCITE-508] (not fixed yet).\n\nFor remote testing.  allow CalciteAssert to test all connections.  not just CalciteConnection.\n","date":"2014-12-09 06:56:01","modifiedFileCount":"88","status":"M","submitter":"Julian Hyde"},{"authorTime":"2020-04-02 10:39:10","codes":[{"authorDate":"2020-04-02 10:39:10","commitOrder":3,"curCode":"  @Test void testToCamelCase() {\n    assertEquals(\"myJdbcDriver\", AvaticaUtils.toCamelCase(\"MY_JDBC_DRIVER\"));\n    assertEquals(\"myJdbcDriver\", AvaticaUtils.toCamelCase(\"MY_JDBC__DRIVER\"));\n    assertEquals(\"myJdbcDriver\", AvaticaUtils.toCamelCase(\"my_jdbc_driver\"));\n    assertEquals(\"abCdefGHij\", AvaticaUtils.toCamelCase(\"ab_cdEf_g_Hij\"));\n    assertEquals(\"JdbcDriver\", AvaticaUtils.toCamelCase(\"_JDBC_DRIVER\"));\n    assertEquals(\"\", AvaticaUtils.toCamelCase(\"_\"));\n    assertEquals(\"\", AvaticaUtils.toCamelCase(\"\"));\n  }\n","date":"2020-04-06 04:57:49","endLine":1412,"groupId":"101619","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testToCamelCase","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/d9/52fa7b0745fb802cadd23bc7e7ec1c1e082924.src","preCode":"  @Test public void testToCamelCase() {\n    assertEquals(\"myJdbcDriver\", AvaticaUtils.toCamelCase(\"MY_JDBC_DRIVER\"));\n    assertEquals(\"myJdbcDriver\", AvaticaUtils.toCamelCase(\"MY_JDBC__DRIVER\"));\n    assertEquals(\"myJdbcDriver\", AvaticaUtils.toCamelCase(\"my_jdbc_driver\"));\n    assertEquals(\"abCdefGHij\", AvaticaUtils.toCamelCase(\"ab_cdEf_g_Hij\"));\n    assertEquals(\"JdbcDriver\", AvaticaUtils.toCamelCase(\"_JDBC_DRIVER\"));\n    assertEquals(\"\", AvaticaUtils.toCamelCase(\"_\"));\n    assertEquals(\"\", AvaticaUtils.toCamelCase(\"\"));\n  }\n","realPath":"core/src/test/java/org/apache/calcite/util/UtilTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":1404,"status":"M"},{"authorDate":"2020-04-02 10:39:10","commitOrder":3,"curCode":"  @Test void testCamelToUpper() {\n    assertEquals(\"MY_JDBC_DRIVER\", AvaticaUtils.camelToUpper(\"myJdbcDriver\"));\n    assertEquals(\"MY_J_D_B_C_DRIVER\",\n        AvaticaUtils.camelToUpper(\"myJDBCDriver\"));\n    assertEquals(\"AB_CDEF_G_HIJ\", AvaticaUtils.camelToUpper(\"abCdefGHij\"));\n    assertEquals(\"_JDBC_DRIVER\", AvaticaUtils.camelToUpper(\"JdbcDriver\"));\n    assertEquals(\"\", AvaticaUtils.camelToUpper(\"\"));\n  }\n","date":"2020-04-06 04:57:49","endLine":1422,"groupId":"101619","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testCamelToUpper","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/d9/52fa7b0745fb802cadd23bc7e7ec1c1e082924.src","preCode":"  @Test public void testCamelToUpper() {\n    assertEquals(\"MY_JDBC_DRIVER\", AvaticaUtils.camelToUpper(\"myJdbcDriver\"));\n    assertEquals(\"MY_J_D_B_C_DRIVER\",\n        AvaticaUtils.camelToUpper(\"myJDBCDriver\"));\n    assertEquals(\"AB_CDEF_G_HIJ\", AvaticaUtils.camelToUpper(\"abCdefGHij\"));\n    assertEquals(\"_JDBC_DRIVER\", AvaticaUtils.camelToUpper(\"JdbcDriver\"));\n    assertEquals(\"\", AvaticaUtils.camelToUpper(\"\"));\n  }\n","realPath":"core/src/test/java/org/apache/calcite/util/UtilTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":1415,"status":"M"}],"commitId":"9492dd4146f63ddc028010d6c4e86f6a5cb29a8d","commitMessage":"@@@[CALCITE-3892] Make junit test classes and methods non-public where possible\n\nPrior to junit 5.  classes and methods had to be public. This is no\nlonger the case.\n\nSome classes need to remain public because they are referenced from\nelsewhere.  or if they use reflection somehow. The remaining 'public'\nkeyword will be informative to maintainers.\n","date":"2020-04-06 04:57:49","modifiedFileCount":"196","status":"M","submitter":"Julian Hyde"}]
