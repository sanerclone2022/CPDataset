[{"authorTime":"2016-05-22 03:33:32","codes":[{"authorDate":"2015-04-07 07:11:40","commitOrder":4,"curCode":"    public RelNode convert(RelNode rel) {\n      final LogicalFilter filter = (LogicalFilter) rel;\n      final RelTraitSet traitSet = filter.getTraitSet().replace(out);\n      return new MongoFilter(\n          rel.getCluster(),\n          traitSet,\n          convert(filter.getInput(), out),\n          filter.getCondition());\n    }\n","date":"2015-04-08 03:23:04","endLine":244,"groupId":"5875","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"convert","params":"(RelNoderel)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/02/49cce81aacf8a34a75a71d1bcf7d87578f3bb1.src","preCode":"    public RelNode convert(RelNode rel) {\n      final LogicalFilter filter = (LogicalFilter) rel;\n      final RelTraitSet traitSet = filter.getTraitSet().replace(out);\n      return new MongoFilter(\n          rel.getCluster(),\n          traitSet,\n          convert(filter.getInput(), out),\n          filter.getCondition());\n    }\n","realPath":"mongodb/src/main/java/org/apache/calcite/adapter/mongodb/MongoRules.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":236,"status":"NB"},{"authorDate":"2016-05-22 03:33:32","commitOrder":4,"curCode":"    @Override public RelNode convert(RelNode relNode) {\n      final LogicalFilter filter = (LogicalFilter) relNode;\n      final RelTraitSet traitSet = filter.getTraitSet().replace(out);\n      return new ElasticsearchFilter(relNode.getCluster(), traitSet,\n        convert(filter.getInput(), out),\n        filter.getCondition());\n    }\n","date":"2016-05-27 05:57:06","endLine":216,"groupId":"411","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"convert","params":"(RelNoderelNode)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/2e/681563d37c867477bcebee2ed1fbcbc96392b1.src","preCode":"    @Override public RelNode convert(RelNode relNode) {\n      final LogicalFilter filter = (LogicalFilter) relNode;\n      final RelTraitSet traitSet = filter.getTraitSet().replace(out);\n      return new ElasticsearchFilter(relNode.getCluster(), traitSet,\n        convert(filter.getInput(), out),\n        filter.getCondition());\n    }\n","realPath":"elasticsearch/src/main/java/org/apache/calcite/adapter/elasticsearch/ElasticsearchRules.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":210,"status":"B"}],"commitId":"f3caf13b9f1cd92f95dcf27716466bf2133e1ed7","commitMessage":"@@@[CALCITE-1253] Elasticsearch adapter (Subhobrata Dey)\n\nClose apache/calcite#236\n","date":"2016-05-27 05:57:06","modifiedFileCount":"0","status":"M","submitter":"Subhobrata Dey"},{"authorTime":"2016-05-22 03:33:32","codes":[{"authorDate":"2020-07-09 05:31:40","commitOrder":5,"curCode":"    @Override public RelNode convert(RelNode rel) {\n      final LogicalFilter filter = (LogicalFilter) rel;\n      final RelTraitSet traitSet = filter.getTraitSet().replace(out);\n      return new MongoFilter(\n          rel.getCluster(),\n          traitSet,\n          convert(filter.getInput(), out),\n          filter.getCondition());\n    }\n","date":"2020-07-29 02:27:24","endLine":294,"groupId":"12170","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"convert","params":"(RelNoderel)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/83/abe1ff5b33f4cb3b85c044b499eeb46678e736.src","preCode":"    public RelNode convert(RelNode rel) {\n      final LogicalFilter filter = (LogicalFilter) rel;\n      final RelTraitSet traitSet = filter.getTraitSet().replace(out);\n      return new MongoFilter(\n          rel.getCluster(),\n          traitSet,\n          convert(filter.getInput(), out),\n          filter.getCondition());\n    }\n","realPath":"mongodb/src/main/java/org/apache/calcite/adapter/mongodb/MongoRules.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":286,"status":"M"},{"authorDate":"2016-05-22 03:33:32","commitOrder":5,"curCode":"    @Override public RelNode convert(RelNode relNode) {\n      final LogicalFilter filter = (LogicalFilter) relNode;\n      final RelTraitSet traitSet = filter.getTraitSet().replace(out);\n      return new ElasticsearchFilter(relNode.getCluster(), traitSet,\n        convert(filter.getInput(), out),\n        filter.getCondition());\n    }\n","date":"2016-05-27 05:57:06","endLine":216,"groupId":"12170","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"convert","params":"(RelNoderelNode)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/2e/681563d37c867477bcebee2ed1fbcbc96392b1.src","preCode":"    @Override public RelNode convert(RelNode relNode) {\n      final LogicalFilter filter = (LogicalFilter) relNode;\n      final RelTraitSet traitSet = filter.getTraitSet().replace(out);\n      return new ElasticsearchFilter(relNode.getCluster(), traitSet,\n        convert(filter.getInput(), out),\n        filter.getCondition());\n    }\n","realPath":"elasticsearch/src/main/java/org/apache/calcite/adapter/elasticsearch/ElasticsearchRules.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":210,"status":"N"}],"commitId":"998cd83ebe2fcd7ff3ee565299fed6e199269715","commitMessage":"@@@[CALCITE-3923] Refactor how planner rules are parameterized\n\nCreate operands using a builder interface.  OperandBuilder.  and\ndeprecate methods RelOptRule.operand etc.\n\nThe change is backwards compatible.  in the sense that\nexisting rule constructors are deprecated but still work.\nFrom now on.  to create rules.  call RelOptRule.Config.toRule()\n(which calls the rule's (Config) constructor).\n\nSub-classes of ConverterRule are a little different.  They\ndon't need their own sub-class of Config.  You just need to\ncall Config.withRuleFactory to specify the constructor of the\nsub-class of ConverterRule.\n\nMove rule instances into holder classes such as CoreRules. \nMaterializedViewRules. Deprecate existing rule INSTANCE fields\n(to be removed in 1.25). Deprecate previous rule constructors\n(to be removed in 2.0).\n\nDescribe how to write rules in howto and tutorial.\n\nRemove rule instances marked 'deprecated.  to be removed before\n1.25'.\n\nClose apache/calcite#2024\n","date":"2020-07-29 02:27:24","modifiedFileCount":"191","status":"M","submitter":"Julian Hyde"}]
