[{"authorTime":"2020-06-12 11:38:32","codes":[{"authorDate":"2020-05-20 14:52:40","commitOrder":2,"curCode":"  @Override public Pair<RelTraitSet, List<RelTraitSet>> deriveTraits(\n      final RelTraitSet childTraits, final int childId) {\n    RelCollation collation = childTraits.getCollation();\n    if (collation == null || collation == RelCollations.EMPTY) {\n      return null;\n    }\n    RelTraitSet traits = traitSet.replace(collation);\n    return Pair.of(traits, ImmutableList.of(traits));\n  }\n","date":"2020-05-30 03:06:17","endLine":97,"groupId":"16133","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"deriveTraits","params":"(finalRelTraitSetchildTraits@finalintchildId)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/5a/f195c826fe668df2ac2302725f28a11ea9d410.src","preCode":"  @Override public Pair<RelTraitSet, List<RelTraitSet>> deriveTraits(\n      final RelTraitSet childTraits, final int childId) {\n    RelCollation collation = childTraits.getCollation();\n    if (collation == null || collation == RelCollations.EMPTY) {\n      return null;\n    }\n    RelTraitSet traits = traitSet.replace(collation);\n    return Pair.of(traits, ImmutableList.of(traits));\n  }\n","realPath":"core/src/main/java/org/apache/calcite/adapter/enumerable/EnumerableFilter.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":89,"status":"NB"},{"authorDate":"2020-06-12 11:38:32","commitOrder":2,"curCode":"  static Pair<RelTraitSet, List<RelTraitSet>> deriveTraitsForJoin(\n      RelTraitSet childTraits, int childId, JoinRelType joinType,\n      RelTraitSet joinTraitSet, RelTraitSet rightTraitSet) {\n    \r\n    assert childId == 0;\n\n    RelCollation collation = childTraits.getCollation();\n    if (collation == null\n        || collation == RelCollations.EMPTY\n        || joinType == JoinRelType.FULL\n        || joinType == JoinRelType.RIGHT) {\n      return null;\n    }\n\n    RelTraitSet derivedTraits = joinTraitSet.replace(collation);\n    return Pair.of(\n        derivedTraits,\n        ImmutableList.of(derivedTraits, rightTraitSet));\n  }\n","date":"2020-06-14 05:12:30","endLine":215,"groupId":"16825","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"deriveTraitsForJoin","params":"(RelTraitSetchildTraits@intchildId@JoinRelTypejoinType@RelTraitSetjoinTraitSet@RelTraitSetrightTraitSet)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/16/dc2aa85575cd9420dff88da8d72ee499e455ab.src","preCode":"  static Pair<RelTraitSet, List<RelTraitSet>> deriveTraitsForJoin(\n      RelTraitSet childTraits, int childId, JoinRelType joinType,\n      RelTraitSet joinTraitSet, RelTraitSet rightTraitSet) {\n    \r\n    assert childId == 0;\n\n    RelCollation collation = childTraits.getCollation();\n    if (collation == null\n        || collation == RelCollations.EMPTY\n        || joinType == JoinRelType.FULL\n        || joinType == JoinRelType.RIGHT) {\n      return null;\n    }\n\n    RelTraitSet derivedTraits = joinTraitSet.replace(collation);\n    return Pair.of(\n        derivedTraits,\n        ImmutableList.of(derivedTraits, rightTraitSet));\n  }\n","realPath":"core/src/main/java/org/apache/calcite/adapter/enumerable/EnumerableTraitsUtils.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":197,"status":"B"}],"commitId":"978bb7ea44969351468d1b5e240e8f57af7e5770","commitMessage":"@@@[CALCITE-4057] Support trait propagation for EnumerableBatchNestedLoopJoin (Rui Wang)\n\nClose #2023\n","date":"2020-06-14 05:12:30","modifiedFileCount":"7","status":"M","submitter":"amaliujia"},{"authorTime":"2020-05-29 00:04:40","codes":[{"authorDate":"2020-05-29 00:04:40","commitOrder":3,"curCode":"  @Override public @Nullable Pair<RelTraitSet, List<RelTraitSet>> deriveTraits(\n      final RelTraitSet childTraits, final int childId) {\n    RelCollation collation = childTraits.getCollation();\n    if (collation == null || collation == RelCollations.EMPTY) {\n      return null;\n    }\n    RelTraitSet traits = traitSet.replace(collation);\n    return Pair.of(traits, ImmutableList.of(traits));\n  }\n","date":"2020-11-30 06:45:33","endLine":99,"groupId":"102129","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"deriveTraits","params":"(finalRelTraitSetchildTraits@finalintchildId)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/f4/943ce8917c44504156f62db77988d02b7064ee.src","preCode":"  @Override public Pair<RelTraitSet, List<RelTraitSet>> deriveTraits(\n      final RelTraitSet childTraits, final int childId) {\n    RelCollation collation = childTraits.getCollation();\n    if (collation == null || collation == RelCollations.EMPTY) {\n      return null;\n    }\n    RelTraitSet traits = traitSet.replace(collation);\n    return Pair.of(traits, ImmutableList.of(traits));\n  }\n","realPath":"core/src/main/java/org/apache/calcite/adapter/enumerable/EnumerableFilter.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":91,"status":"M"},{"authorDate":"2020-05-29 00:04:40","commitOrder":3,"curCode":"  static @Nullable Pair<RelTraitSet, List<RelTraitSet>> deriveTraitsForJoin(\n      RelTraitSet childTraits, int childId, JoinRelType joinType,\n      RelTraitSet joinTraitSet, RelTraitSet rightTraitSet) {\n    \r\n    assert childId == 0;\n\n    RelCollation collation = childTraits.getCollation();\n    if (collation == null\n        || collation == RelCollations.EMPTY\n        || joinType == JoinRelType.FULL\n        || joinType == JoinRelType.RIGHT) {\n      return null;\n    }\n\n    RelTraitSet derivedTraits = joinTraitSet.replace(collation);\n    return Pair.of(\n        derivedTraits,\n        ImmutableList.of(derivedTraits, rightTraitSet));\n  }\n","date":"2020-11-30 06:45:33","endLine":216,"groupId":"102129","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"deriveTraitsForJoin","params":"(RelTraitSetchildTraits@intchildId@JoinRelTypejoinType@RelTraitSetjoinTraitSet@RelTraitSetrightTraitSet)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/3f/ddfbd2fd65381e806badfa2206a144baf58bf0.src","preCode":"  static Pair<RelTraitSet, List<RelTraitSet>> deriveTraitsForJoin(\n      RelTraitSet childTraits, int childId, JoinRelType joinType,\n      RelTraitSet joinTraitSet, RelTraitSet rightTraitSet) {\n    \r\n    assert childId == 0;\n\n    RelCollation collation = childTraits.getCollation();\n    if (collation == null\n        || collation == RelCollations.EMPTY\n        || joinType == JoinRelType.FULL\n        || joinType == JoinRelType.RIGHT) {\n      return null;\n    }\n\n    RelTraitSet derivedTraits = joinTraitSet.replace(collation);\n    return Pair.of(\n        derivedTraits,\n        ImmutableList.of(derivedTraits, rightTraitSet));\n  }\n","realPath":"core/src/main/java/org/apache/calcite/adapter/enumerable/EnumerableTraitsUtils.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":198,"status":"M"}],"commitId":"d9a81b88ad561e7e4cedae93e805e0d7a53a7f1a","commitMessage":"@@@[CALCITE-4199] Add nullability annotations\n\nThe commit includes javadoc updates and refactorings made by Julian Hyde in https://github.com/apache/calcite/pull/2278\n","date":"2020-11-30 06:45:33","modifiedFileCount":"1012","status":"M","submitter":"Vladimir Sitnikov"}]
