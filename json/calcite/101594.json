[{"authorTime":"2019-01-23 02:44:29","codes":[{"authorDate":"2019-09-14 11:09:57","commitOrder":2,"curCode":"    Sql withMssql(int majorVersion) {\n      final SqlDialect mssqlDialect = DatabaseProduct.MSSQL.getDialect();\n      return dialect(\n          new MssqlSqlDialect(SqlDialect.EMPTY_CONTEXT\n              .withDatabaseProduct(DatabaseProduct.MSSQL)\n              .withDatabaseMajorVersion(majorVersion)\n              .withIdentifierQuoteString(mssqlDialect.quoteIdentifier(\"\")\n                  .substring(0, 1))\n              .withNullCollation(mssqlDialect.getNullCollation())));\n    }\n","date":"2019-09-21 01:11:14","endLine":3973,"groupId":"10434","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"withMssql","params":"(intmajorVersion)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/37/82504624b243f1bde1bc3bb588313e4a94acfd.src","preCode":"    Sql withMssql(int majorVersion) {\n      final SqlDialect mssqlDialect = DatabaseProduct.MSSQL.getDialect();\n      return dialect(\n          new MssqlSqlDialect(SqlDialect.EMPTY_CONTEXT\n              .withDatabaseProduct(DatabaseProduct.MSSQL)\n              .withDatabaseMajorVersion(majorVersion)\n              .withIdentifierQuoteString(mssqlDialect.quoteIdentifier(\"\")\n                  .substring(0, 1))\n              .withNullCollation(mssqlDialect.getNullCollation())));\n    }\n","realPath":"core/src/test/java/org/apache/calcite/rel/rel2sql/RelToSqlConverterTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":3964,"status":"B"},{"authorDate":"2019-01-23 02:44:29","commitOrder":2,"curCode":"    Sql withMysql8() {\n      final SqlDialect mysqlDialect = DatabaseProduct.MYSQL.getDialect();\n      return dialect(\n          new SqlDialect(SqlDialect.EMPTY_CONTEXT\n              .withDatabaseProduct(DatabaseProduct.MYSQL)\n              .withDatabaseMajorVersion(8)\n              .withIdentifierQuoteString(mysqlDialect.quoteIdentifier(\"\")\n                  .substring(0, 1))\n              .withNullCollation(mysqlDialect.getNullCollation())));\n    }\n","date":"2019-03-28 02:12:44","endLine":3295,"groupId":"8295","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"withMysql8","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/37/8c4056b04c4ac7f0cfe160da46938e29d1016d.src","preCode":"    Sql withMysql8() {\n      final SqlDialect mysqlDialect = DatabaseProduct.MYSQL.getDialect();\n      return dialect(\n          new SqlDialect(SqlDialect.EMPTY_CONTEXT\n              .withDatabaseProduct(DatabaseProduct.MYSQL)\n              .withDatabaseMajorVersion(8)\n              .withIdentifierQuoteString(mysqlDialect.quoteIdentifier(\"\")\n                  .substring(0, 1))\n              .withNullCollation(mysqlDialect.getNullCollation())));\n    }\n","realPath":"core/src/test/java/org/apache/calcite/rel/rel2sql/RelToSqlConverterTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":3286,"status":"NB"}],"commitId":"02a4ced35cb1f9fdc18b16528db1f922365a33c2","commitMessage":"@@@[CALCITE-3344] In JDBC adapter.  generate \"SELECT TOP(n)\" for MSSQL 2008 and earlier.  and for Sybase ASE\n","date":"2019-09-21 01:11:14","modifiedFileCount":"7","status":"M","submitter":"Julian Hyde"},{"authorTime":"2019-10-21 19:58:11","codes":[{"authorDate":"2019-10-21 19:58:11","commitOrder":3,"curCode":"    Sql withMssql(int majorVersion) {\n      final SqlDialect mssqlDialect = DatabaseProduct.MSSQL.getDialect();\n      return dialect(\n          new MssqlSqlDialect(MssqlSqlDialect.DEFAULT_CONTEXT\n              .withDatabaseMajorVersion(majorVersion)\n              .withIdentifierQuoteString(mssqlDialect.quoteIdentifier(\"\")\n                  .substring(0, 1))\n              .withNullCollation(mssqlDialect.getNullCollation())));\n    }\n","date":"2019-10-23 10:33:14","endLine":4098,"groupId":"101594","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"withMssql","params":"(intmajorVersion)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/03/1cdb733bb839d94a8497549c9a61c7fefe34ef.src","preCode":"    Sql withMssql(int majorVersion) {\n      final SqlDialect mssqlDialect = DatabaseProduct.MSSQL.getDialect();\n      return dialect(\n          new MssqlSqlDialect(SqlDialect.EMPTY_CONTEXT\n              .withDatabaseProduct(DatabaseProduct.MSSQL)\n              .withDatabaseMajorVersion(majorVersion)\n              .withIdentifierQuoteString(mssqlDialect.quoteIdentifier(\"\")\n                  .substring(0, 1))\n              .withNullCollation(mssqlDialect.getNullCollation())));\n    }\n","realPath":"core/src/test/java/org/apache/calcite/rel/rel2sql/RelToSqlConverterTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":4090,"status":"M"},{"authorDate":"2019-10-21 19:58:11","commitOrder":3,"curCode":"    Sql withMysql8() {\n      final SqlDialect mysqlDialect = DatabaseProduct.MYSQL.getDialect();\n      return dialect(\n          new SqlDialect(MysqlSqlDialect.DEFAULT_CONTEXT\n              .withDatabaseMajorVersion(8)\n              .withIdentifierQuoteString(mysqlDialect.quoteIdentifier(\"\")\n                  .substring(0, 1))\n              .withNullCollation(mysqlDialect.getNullCollation())));\n    }\n","date":"2019-10-23 10:33:14","endLine":4112,"groupId":"101594","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"withMysql8","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/03/1cdb733bb839d94a8497549c9a61c7fefe34ef.src","preCode":"    Sql withMysql8() {\n      final SqlDialect mysqlDialect = DatabaseProduct.MYSQL.getDialect();\n      return dialect(\n          new SqlDialect(SqlDialect.EMPTY_CONTEXT\n              .withDatabaseProduct(DatabaseProduct.MYSQL)\n              .withDatabaseMajorVersion(8)\n              .withIdentifierQuoteString(mysqlDialect.quoteIdentifier(\"\")\n                  .substring(0, 1))\n              .withNullCollation(mysqlDialect.getNullCollation())));\n    }\n","realPath":"core/src/test/java/org/apache/calcite/rel/rel2sql/RelToSqlConverterTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":4104,"status":"M"}],"commitId":"ff43dcb95caa251e5fc8120980fc70c8fea8ac40","commitMessage":"@@@[CALCITE-3416] SQL Dialects DEFAULTs should be more extensible\n\n* In each SqlDialect sub-class.  add a new public static final member\nnamed DEFAULT_CONTEXT used to extend the dialect\n* Make SqlDialect.emptyContext private.  we should now always use\nSqlDialect.EMPTY_CONTEXT instead\n","date":"2019-10-23 10:33:14","modifiedFileCount":"32","status":"M","submitter":"yuzhao.cyz"}]
