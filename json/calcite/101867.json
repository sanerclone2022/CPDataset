[{"authorTime":"2014-11-14 09:39:29","codes":[{"authorDate":"2014-11-14 09:39:29","commitOrder":1,"curCode":"  @Override public void setOperand(int i, SqlNode operand) {\n    switch (i) {\n    case 0:\n      targetTable = (SqlIdentifier) operand;\n      break;\n    case 1:\n      condition = operand;\n      break;\n    case 2:\n      sourceSelect = (SqlSelect) operand;\n      break;\n    case 3:\n      alias = (SqlIdentifier) operand;\n      break;\n    default:\n      throw new AssertionError(i);\n    }\n  }\n","date":"2014-11-14 09:39:34","endLine":84,"groupId":"5720","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"setOperand","params":"(inti@SqlNodeoperand)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/35/33c9947bd9a6eb1b57066398f586290bffa085.src","preCode":"  @Override public void setOperand(int i, SqlNode operand) {\n    switch (i) {\n    case 0:\n      targetTable = (SqlIdentifier) operand;\n      break;\n    case 1:\n      condition = operand;\n      break;\n    case 2:\n      sourceSelect = (SqlSelect) operand;\n      break;\n    case 3:\n      alias = (SqlIdentifier) operand;\n      break;\n    default:\n      throw new AssertionError(i);\n    }\n  }\n","realPath":"core/src/main/java/org/apache/calcite/sql/SqlDelete.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":67,"status":"B"},{"authorDate":"2014-11-14 09:39:29","commitOrder":1,"curCode":"  public void setOperand(int i, SqlNode operand) {\n    switch (i) {\n    case 0:\n      targetTable = (SqlIdentifier) operand;\n      break;\n    case 1:\n      targetColumnList = (SqlNodeList) operand;\n      break;\n    case 2:\n      sourceExpressionList = (SqlNodeList) operand;\n      break;\n    case 3:\n      condition = operand;\n      break;\n    case 4:\n      sourceExpressionList = (SqlNodeList) operand;\n      break;\n    case 5:\n      alias = (SqlIdentifier) operand;\n      break;\n    default:\n      throw new AssertionError(i);\n    }\n  }\n","date":"2014-11-14 09:39:34","endLine":99,"groupId":"10673","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"setOperand","params":"(inti@SqlNodeoperand)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/17/3571e5045b29b22bb51d272a22371aaccfde90.src","preCode":"  public void setOperand(int i, SqlNode operand) {\n    switch (i) {\n    case 0:\n      targetTable = (SqlIdentifier) operand;\n      break;\n    case 1:\n      targetColumnList = (SqlNodeList) operand;\n      break;\n    case 2:\n      sourceExpressionList = (SqlNodeList) operand;\n      break;\n    case 3:\n      condition = operand;\n      break;\n    case 4:\n      sourceExpressionList = (SqlNodeList) operand;\n      break;\n    case 5:\n      alias = (SqlIdentifier) operand;\n      break;\n    default:\n      throw new AssertionError(i);\n    }\n  }\n","realPath":"core/src/main/java/org/apache/calcite/sql/SqlUpdate.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":76,"status":"B"}],"commitId":"a611d645ad754844a39f3d98f5f814f13dbd9404","commitMessage":"@@@[CALCITE-296] Re-organize package structure;\n[CALCITE-419] Naming convention for planner rules\n\nThis change only renames files (and deletes some obsolete files). There are no content changes.\n","date":"2014-11-14 09:39:34","modifiedFileCount":"0","status":"B","submitter":"Julian Hyde"},{"authorTime":"2014-11-14 10:11:34","codes":[{"authorDate":"2014-11-14 09:39:29","commitOrder":2,"curCode":"  @Override public void setOperand(int i, SqlNode operand) {\n    switch (i) {\n    case 0:\n      targetTable = (SqlIdentifier) operand;\n      break;\n    case 1:\n      condition = operand;\n      break;\n    case 2:\n      sourceSelect = (SqlSelect) operand;\n      break;\n    case 3:\n      alias = (SqlIdentifier) operand;\n      break;\n    default:\n      throw new AssertionError(i);\n    }\n  }\n","date":"2014-11-14 09:39:34","endLine":84,"groupId":"5720","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"setOperand","params":"(inti@SqlNodeoperand)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/35/33c9947bd9a6eb1b57066398f586290bffa085.src","preCode":"  @Override public void setOperand(int i, SqlNode operand) {\n    switch (i) {\n    case 0:\n      targetTable = (SqlIdentifier) operand;\n      break;\n    case 1:\n      condition = operand;\n      break;\n    case 2:\n      sourceSelect = (SqlSelect) operand;\n      break;\n    case 3:\n      alias = (SqlIdentifier) operand;\n      break;\n    default:\n      throw new AssertionError(i);\n    }\n  }\n","realPath":"core/src/main/java/org/apache/calcite/sql/SqlDelete.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":67,"status":"N"},{"authorDate":"2014-11-14 10:11:34","commitOrder":2,"curCode":"  @Override public void setOperand(int i, SqlNode operand) {\n    switch (i) {\n    case 0:\n      targetTable = (SqlIdentifier) operand;\n      break;\n    case 1:\n      targetColumnList = (SqlNodeList) operand;\n      break;\n    case 2:\n      sourceExpressionList = (SqlNodeList) operand;\n      break;\n    case 3:\n      condition = operand;\n      break;\n    case 4:\n      sourceExpressionList = (SqlNodeList) operand;\n      break;\n    case 5:\n      alias = (SqlIdentifier) operand;\n      break;\n    default:\n      throw new AssertionError(i);\n    }\n  }\n","date":"2014-11-14 10:22:06","endLine":100,"groupId":"10673","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"setOperand","params":"(inti@SqlNodeoperand)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/67/73aa86bdb72ff0b48dbab84f2e5482a9f333d6.src","preCode":"  public void setOperand(int i, SqlNode operand) {\n    switch (i) {\n    case 0:\n      targetTable = (SqlIdentifier) operand;\n      break;\n    case 1:\n      targetColumnList = (SqlNodeList) operand;\n      break;\n    case 2:\n      sourceExpressionList = (SqlNodeList) operand;\n      break;\n    case 3:\n      condition = operand;\n      break;\n    case 4:\n      sourceExpressionList = (SqlNodeList) operand;\n      break;\n    case 5:\n      alias = (SqlIdentifier) operand;\n      break;\n    default:\n      throw new AssertionError(i);\n    }\n  }\n","realPath":"core/src/main/java/org/apache/calcite/sql/SqlUpdate.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":77,"status":"M"}],"commitId":"a0ba73cd2de76696b96a1cd828d2aa4d3ef9eb55","commitMessage":"@@@[CALCITE-306] Standardize code style for \"import package.*;\"\n\nRename classes and packages and generally fix things up after [CALCITE-296] and [CALCITE-419].\n\nMake many inner classes of EnumerableRules (e.g. EnumerableFilter.  EnumerableFilterRule) top-level classes.\n\nApply a consistent formatting convention for string literals split over multiple lines.\n\nRename generated file org.eigenbase.resource.Resources to org.apache.calcite.runtime.Resources.\n\nChange occurrences of \"optiq\" and \"eigenbase\" in java code to \"calcite\".\n","date":"2014-11-14 10:22:06","modifiedFileCount":"1156","status":"M","submitter":"Julian Hyde"},{"authorTime":"2014-11-14 10:11:34","codes":[{"authorDate":"2014-12-09 09:15:23","commitOrder":3,"curCode":"  @Override public void setOperand(int i, SqlNode operand) {\n    switch (i) {\n    case 0:\n      targetTable = operand;\n      break;\n    case 1:\n      condition = operand;\n      break;\n    case 2:\n      sourceSelect = (SqlSelect) operand;\n      break;\n    case 3:\n      alias = (SqlIdentifier) operand;\n      break;\n    default:\n      throw new AssertionError(i);\n    }\n  }\n","date":"2014-12-11 00:38:18","endLine":86,"groupId":"5720","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"setOperand","params":"(inti@SqlNodeoperand)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/ed/416577b63cf07e3bd8c35351c091f12e2539c8.src","preCode":"  @Override public void setOperand(int i, SqlNode operand) {\n    switch (i) {\n    case 0:\n      targetTable = (SqlIdentifier) operand;\n      break;\n    case 1:\n      condition = operand;\n      break;\n    case 2:\n      sourceSelect = (SqlSelect) operand;\n      break;\n    case 3:\n      alias = (SqlIdentifier) operand;\n      break;\n    default:\n      throw new AssertionError(i);\n    }\n  }\n","realPath":"core/src/main/java/org/apache/calcite/sql/SqlDelete.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":69,"status":"M"},{"authorDate":"2014-11-14 10:11:34","commitOrder":3,"curCode":"  @Override public void setOperand(int i, SqlNode operand) {\n    switch (i) {\n    case 0:\n      targetTable = (SqlIdentifier) operand;\n      break;\n    case 1:\n      targetColumnList = (SqlNodeList) operand;\n      break;\n    case 2:\n      sourceExpressionList = (SqlNodeList) operand;\n      break;\n    case 3:\n      condition = operand;\n      break;\n    case 4:\n      sourceExpressionList = (SqlNodeList) operand;\n      break;\n    case 5:\n      alias = (SqlIdentifier) operand;\n      break;\n    default:\n      throw new AssertionError(i);\n    }\n  }\n","date":"2014-11-14 10:22:06","endLine":100,"groupId":"10673","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"setOperand","params":"(inti@SqlNodeoperand)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/67/73aa86bdb72ff0b48dbab84f2e5482a9f333d6.src","preCode":"  @Override public void setOperand(int i, SqlNode operand) {\n    switch (i) {\n    case 0:\n      targetTable = (SqlIdentifier) operand;\n      break;\n    case 1:\n      targetColumnList = (SqlNodeList) operand;\n      break;\n    case 2:\n      sourceExpressionList = (SqlNodeList) operand;\n      break;\n    case 3:\n      condition = operand;\n      break;\n    case 4:\n      sourceExpressionList = (SqlNodeList) operand;\n      break;\n    case 5:\n      alias = (SqlIdentifier) operand;\n      break;\n    default:\n      throw new AssertionError(i);\n    }\n  }\n","realPath":"core/src/main/java/org/apache/calcite/sql/SqlUpdate.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":77,"status":"N"}],"commitId":"ecc5f4c2fff0a7a2a310b109b070d402c156f25a","commitMessage":"@@@[CALCITE-493] Add EXTEND clause.  for defining columns and their types at query/DML time\n","date":"2014-12-11 00:38:18","modifiedFileCount":"21","status":"M","submitter":"Julian Hyde"},{"authorTime":"2016-05-18 10:05:34","codes":[{"authorDate":"2014-12-09 09:15:23","commitOrder":4,"curCode":"  @Override public void setOperand(int i, SqlNode operand) {\n    switch (i) {\n    case 0:\n      targetTable = operand;\n      break;\n    case 1:\n      condition = operand;\n      break;\n    case 2:\n      sourceSelect = (SqlSelect) operand;\n      break;\n    case 3:\n      alias = (SqlIdentifier) operand;\n      break;\n    default:\n      throw new AssertionError(i);\n    }\n  }\n","date":"2014-12-11 00:38:18","endLine":86,"groupId":"5720","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"setOperand","params":"(inti@SqlNodeoperand)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/ed/416577b63cf07e3bd8c35351c091f12e2539c8.src","preCode":"  @Override public void setOperand(int i, SqlNode operand) {\n    switch (i) {\n    case 0:\n      targetTable = operand;\n      break;\n    case 1:\n      condition = operand;\n      break;\n    case 2:\n      sourceSelect = (SqlSelect) operand;\n      break;\n    case 3:\n      alias = (SqlIdentifier) operand;\n      break;\n    default:\n      throw new AssertionError(i);\n    }\n  }\n","realPath":"core/src/main/java/org/apache/calcite/sql/SqlDelete.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":69,"status":"N"},{"authorDate":"2016-05-18 10:05:34","commitOrder":4,"curCode":"  @Override public void setOperand(int i, SqlNode operand) {\n    switch (i) {\n    case 0:\n      assert operand instanceof SqlIdentifier;\n      targetTable = operand;\n      break;\n    case 1:\n      targetColumnList = (SqlNodeList) operand;\n      break;\n    case 2:\n      sourceExpressionList = (SqlNodeList) operand;\n      break;\n    case 3:\n      condition = operand;\n      break;\n    case 4:\n      sourceExpressionList = (SqlNodeList) operand;\n      break;\n    case 5:\n      alias = (SqlIdentifier) operand;\n      break;\n    default:\n      throw new AssertionError(i);\n    }\n  }\n","date":"2016-05-23 03:46:46","endLine":101,"groupId":"10673","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"setOperand","params":"(inti@SqlNodeoperand)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/47/5d00dadd3c0cfb8222c13a966838992d4e6b56.src","preCode":"  @Override public void setOperand(int i, SqlNode operand) {\n    switch (i) {\n    case 0:\n      targetTable = (SqlIdentifier) operand;\n      break;\n    case 1:\n      targetColumnList = (SqlNodeList) operand;\n      break;\n    case 2:\n      sourceExpressionList = (SqlNodeList) operand;\n      break;\n    case 3:\n      condition = operand;\n      break;\n    case 4:\n      sourceExpressionList = (SqlNodeList) operand;\n      break;\n    case 5:\n      alias = (SqlIdentifier) operand;\n      break;\n    default:\n      throw new AssertionError(i);\n    }\n  }\n","realPath":"core/src/main/java/org/apache/calcite/sql/SqlUpdate.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":77,"status":"M"}],"commitId":"f191a386aedaee05c6ffcc1d4b155193bfa4ca01","commitMessage":"@@@[CALCITE-1228] Bind parameters in INSERT\n\nDeduce number and types of bind parameters for all DML statements.  in\nvalidator and in simple JDBC tests.\n\nAlso infer types of bind parameters in other kinds of query.\n","date":"2016-05-23 03:46:46","modifiedFileCount":"32","status":"M","submitter":"Julian Hyde"},{"authorTime":"2020-05-29 00:04:40","codes":[{"authorDate":"2020-05-29 00:04:40","commitOrder":5,"curCode":"  @Override public void setOperand(int i, @Nullable SqlNode operand) {\n    switch (i) {\n    case 0:\n      targetTable = operand;\n      break;\n    case 1:\n      condition = operand;\n      break;\n    case 2:\n      sourceSelect = (SqlSelect) operand;\n      break;\n    case 3:\n      alias = (SqlIdentifier) operand;\n      break;\n    default:\n      throw new AssertionError(i);\n    }\n  }\n","date":"2020-11-30 06:45:33","endLine":90,"groupId":"101867","id":9,"instanceNumber":1,"isCurCommit":1,"methodName":"setOperand","params":"(inti@@NullableSqlNodeoperand)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/63/32c1126b36ba382f1c5bcb2c67b96ae272e5d7.src","preCode":"  @Override public void setOperand(int i, SqlNode operand) {\n    switch (i) {\n    case 0:\n      targetTable = operand;\n      break;\n    case 1:\n      condition = operand;\n      break;\n    case 2:\n      sourceSelect = (SqlSelect) operand;\n      break;\n    case 3:\n      alias = (SqlIdentifier) operand;\n      break;\n    default:\n      throw new AssertionError(i);\n    }\n  }\n","realPath":"core/src/main/java/org/apache/calcite/sql/SqlDelete.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":73,"status":"M"},{"authorDate":"2020-05-29 00:04:40","commitOrder":5,"curCode":"  @Override public void setOperand(int i, @Nullable SqlNode operand) {\n    switch (i) {\n    case 0:\n      assert operand instanceof SqlIdentifier;\n      targetTable = operand;\n      break;\n    case 1:\n      targetColumnList = (SqlNodeList) operand;\n      break;\n    case 2:\n      sourceExpressionList = (SqlNodeList) operand;\n      break;\n    case 3:\n      condition = operand;\n      break;\n    case 4:\n      sourceExpressionList = (SqlNodeList) operand;\n      break;\n    case 5:\n      alias = (SqlIdentifier) operand;\n      break;\n    default:\n      throw new AssertionError(i);\n    }\n  }\n","date":"2020-11-30 06:45:33","endLine":106,"groupId":"101867","id":10,"instanceNumber":2,"isCurCommit":1,"methodName":"setOperand","params":"(inti@@NullableSqlNodeoperand)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/50/e051dea3e9bf02c81f3f16e22a45cd6c7f5111.src","preCode":"  @Override public void setOperand(int i, SqlNode operand) {\n    switch (i) {\n    case 0:\n      assert operand instanceof SqlIdentifier;\n      targetTable = operand;\n      break;\n    case 1:\n      targetColumnList = (SqlNodeList) operand;\n      break;\n    case 2:\n      sourceExpressionList = (SqlNodeList) operand;\n      break;\n    case 3:\n      condition = operand;\n      break;\n    case 4:\n      sourceExpressionList = (SqlNodeList) operand;\n      break;\n    case 5:\n      alias = (SqlIdentifier) operand;\n      break;\n    default:\n      throw new AssertionError(i);\n    }\n  }\n","realPath":"core/src/main/java/org/apache/calcite/sql/SqlUpdate.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":82,"status":"M"}],"commitId":"d9a81b88ad561e7e4cedae93e805e0d7a53a7f1a","commitMessage":"@@@[CALCITE-4199] Add nullability annotations\n\nThe commit includes javadoc updates and refactorings made by Julian Hyde in https://github.com/apache/calcite/pull/2278\n","date":"2020-11-30 06:45:33","modifiedFileCount":"1012","status":"M","submitter":"Vladimir Sitnikov"}]
