[{"authorTime":"2017-06-16 15:51:44","codes":[{"authorDate":"2017-04-20 12:10:00","commitOrder":5,"curCode":"  @Test public void testInList() {\n    check(\"select * from emp where empno in (10,20)\");\n\n    \r\n    check(\"select * from emp\\n\"\n        + \"where empno in (10 + deptno, cast(null as integer))\");\n    checkFails(\n        \"select * from emp where empno in ^(10, '20')^\",\n        ERR_IN_VALUES_INCOMPATIBLE);\n\n    checkExpType(\"1 in (2, 3, 4)\", \"BOOLEAN NOT NULL\");\n    checkExpType(\"cast(null as integer) in (2, 3, 4)\", \"BOOLEAN\");\n    checkExpType(\"1 in (2, cast(null as integer) , 4)\", \"BOOLEAN\");\n    checkExpType(\"1 in (2.5, 3.14)\", \"BOOLEAN NOT NULL\");\n    checkExpType(\"true in (false, unknown)\", \"BOOLEAN\");\n    checkExpType(\"true in (false, false or unknown)\", \"BOOLEAN\");\n    checkExpType(\"true in (false, true)\", \"BOOLEAN NOT NULL\");\n    checkExpType(\"(1,2) in ((1,2), (3,4))\", \"BOOLEAN NOT NULL\");\n    checkExpType(\n        \"'medium' in (cast(null as varchar(10)), 'bc')\",\n        \"BOOLEAN\");\n\n    \r\n    checkColumnType(\"select empno in (1, 2) from emp\", \"BOOLEAN NOT NULL\");\n    checkColumnType(\n        \"select nullif(empno,empno) in (1, 2) from emp\",\n        \"BOOLEAN\");\n    checkColumnType(\n        \"select empno in (1, nullif(empno,empno), 2) from emp\",\n        \"BOOLEAN\");\n\n    checkExpFails(\n        \"1 in ^(2, 'c')^\",\n        ERR_IN_VALUES_INCOMPATIBLE);\n    checkExpFails(\n        \"1 in ^((2), (3,4))^\",\n        ERR_IN_VALUES_INCOMPATIBLE);\n    checkExp(\"false and ^1 in ('b', 'c')^\");\n    checkExpFails(\"false and ^1 in (date '2012-01-02', date '2012-01-04')^\",\n        ERR_IN_OPERANDS_INCOMPATIBLE);\n    checkExpFails(\n        \"1 > 5 or ^(1, 2) in (3, 4)^\",\n        ERR_IN_OPERANDS_INCOMPATIBLE);\n  }\n","date":"2017-04-27 05:21:11","endLine":4783,"groupId":"851","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testInList","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/95/fdef03cd8dc95c30ce34f3a92865501310bb93.src","preCode":"  @Test public void testInList() {\n    check(\"select * from emp where empno in (10,20)\");\n\n    \r\n    check(\"select * from emp\\n\"\n        + \"where empno in (10 + deptno, cast(null as integer))\");\n    checkFails(\n        \"select * from emp where empno in ^(10, '20')^\",\n        ERR_IN_VALUES_INCOMPATIBLE);\n\n    checkExpType(\"1 in (2, 3, 4)\", \"BOOLEAN NOT NULL\");\n    checkExpType(\"cast(null as integer) in (2, 3, 4)\", \"BOOLEAN\");\n    checkExpType(\"1 in (2, cast(null as integer) , 4)\", \"BOOLEAN\");\n    checkExpType(\"1 in (2.5, 3.14)\", \"BOOLEAN NOT NULL\");\n    checkExpType(\"true in (false, unknown)\", \"BOOLEAN\");\n    checkExpType(\"true in (false, false or unknown)\", \"BOOLEAN\");\n    checkExpType(\"true in (false, true)\", \"BOOLEAN NOT NULL\");\n    checkExpType(\"(1,2) in ((1,2), (3,4))\", \"BOOLEAN NOT NULL\");\n    checkExpType(\n        \"'medium' in (cast(null as varchar(10)), 'bc')\",\n        \"BOOLEAN\");\n\n    \r\n    checkColumnType(\"select empno in (1, 2) from emp\", \"BOOLEAN NOT NULL\");\n    checkColumnType(\n        \"select nullif(empno,empno) in (1, 2) from emp\",\n        \"BOOLEAN\");\n    checkColumnType(\n        \"select empno in (1, nullif(empno,empno), 2) from emp\",\n        \"BOOLEAN\");\n\n    checkExpFails(\n        \"1 in ^(2, 'c')^\",\n        ERR_IN_VALUES_INCOMPATIBLE);\n    checkExpFails(\n        \"1 in ^((2), (3,4))^\",\n        ERR_IN_VALUES_INCOMPATIBLE);\n    checkExp(\"false and ^1 in ('b', 'c')^\");\n    checkExpFails(\"false and ^1 in (date '2012-01-02', date '2012-01-04')^\",\n        ERR_IN_OPERANDS_INCOMPATIBLE);\n    checkExpFails(\n        \"1 > 5 or ^(1, 2) in (3, 4)^\",\n        ERR_IN_OPERANDS_INCOMPATIBLE);\n  }\n","realPath":"core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":4740,"status":"NB"},{"authorDate":"2017-06-16 15:51:44","commitOrder":5,"curCode":"  @Test public void testAnyList() {\n    check(\"select * from emp where empno = any (10,20)\");\n\n    check(\"select * from emp\\n\"\n        + \"where empno < any (10 + deptno, cast(null as integer))\");\n    checkFails(\n        \"select * from emp where empno < any ^(10, '20')^\",\n        ERR_IN_VALUES_INCOMPATIBLE);\n\n    checkExpType(\"1 < all (2, 3, 4)\", \"BOOLEAN NOT NULL\");\n    checkExpType(\"cast(null as integer) < all (2, 3, 4)\", \"BOOLEAN\");\n    checkExpType(\"1 > some (2, cast(null as integer) , 4)\", \"BOOLEAN\");\n    checkExpType(\"1 > any (2.5, 3.14)\", \"BOOLEAN NOT NULL\");\n    checkExpType(\"true = any (false, unknown)\", \"BOOLEAN\");\n    checkExpType(\"true = any (false, false or unknown)\", \"BOOLEAN\");\n    checkExpType(\"true <> any (false, true)\", \"BOOLEAN NOT NULL\");\n    checkExpType(\"(1,2) = any ((1,2), (3,4))\", \"BOOLEAN NOT NULL\");\n    checkExpType(\"(1,2) < any ((1,2), (3,4))\", \"BOOLEAN NOT NULL\");\n    checkExpType(\"'abc' < any (cast(null as varchar(10)), 'bc')\",\n        \"BOOLEAN\");\n\n    \r\n    checkColumnType(\"select empno < any (1, 2) from emp\", \"BOOLEAN NOT NULL\");\n    checkColumnType(\n        \"select nullif(empno,empno) > all (1, 2) from emp\",\n        \"BOOLEAN\");\n    checkColumnType(\n        \"select empno in (1, nullif(empno,empno), 2) from emp\",\n        \"BOOLEAN\");\n\n    checkExpFails(\"1 = any ^(2, 'c')^\",\n        ERR_IN_VALUES_INCOMPATIBLE);\n    checkExpFails(\"1 > all ^((2), (3,4))^\",\n        ERR_IN_VALUES_INCOMPATIBLE);\n    checkExp(\"false and 1 = any ('b', 'c')\");\n    checkExpFails(\"false and ^1 = any (date '2012-01-02', date '2012-01-04')^\",\n        ERR_IN_OPERANDS_INCOMPATIBLE);\n    checkExpFails(\"1 > 5 or ^(1, 2) < any (3, 4)^\",\n        ERR_IN_OPERANDS_INCOMPATIBLE);\n  }\n","date":"2017-07-04 12:32:04","endLine":4839,"groupId":"851","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testAnyList","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/41/acc8201621b883cf243500c2e5b37555ea30e8.src","preCode":"  @Test public void testAnyList() {\n    check(\"select * from emp where empno = any (10,20)\");\n\n    check(\"select * from emp\\n\"\n        + \"where empno < any (10 + deptno, cast(null as integer))\");\n    checkFails(\n        \"select * from emp where empno < any ^(10, '20')^\",\n        ERR_IN_VALUES_INCOMPATIBLE);\n\n    checkExpType(\"1 < all (2, 3, 4)\", \"BOOLEAN NOT NULL\");\n    checkExpType(\"cast(null as integer) < all (2, 3, 4)\", \"BOOLEAN\");\n    checkExpType(\"1 > some (2, cast(null as integer) , 4)\", \"BOOLEAN\");\n    checkExpType(\"1 > any (2.5, 3.14)\", \"BOOLEAN NOT NULL\");\n    checkExpType(\"true = any (false, unknown)\", \"BOOLEAN\");\n    checkExpType(\"true = any (false, false or unknown)\", \"BOOLEAN\");\n    checkExpType(\"true <> any (false, true)\", \"BOOLEAN NOT NULL\");\n    checkExpType(\"(1,2) = any ((1,2), (3,4))\", \"BOOLEAN NOT NULL\");\n    checkExpType(\"(1,2) < any ((1,2), (3,4))\", \"BOOLEAN NOT NULL\");\n    checkExpType(\"'abc' < any (cast(null as varchar(10)), 'bc')\",\n        \"BOOLEAN\");\n\n    \r\n    checkColumnType(\"select empno < any (1, 2) from emp\", \"BOOLEAN NOT NULL\");\n    checkColumnType(\n        \"select nullif(empno,empno) > all (1, 2) from emp\",\n        \"BOOLEAN\");\n    checkColumnType(\n        \"select empno in (1, nullif(empno,empno), 2) from emp\",\n        \"BOOLEAN\");\n\n    checkExpFails(\"1 = any ^(2, 'c')^\",\n        ERR_IN_VALUES_INCOMPATIBLE);\n    checkExpFails(\"1 > all ^((2), (3,4))^\",\n        ERR_IN_VALUES_INCOMPATIBLE);\n    checkExp(\"false and 1 = any ('b', 'c')\");\n    checkExpFails(\"false and ^1 = any (date '2012-01-02', date '2012-01-04')^\",\n        ERR_IN_OPERANDS_INCOMPATIBLE);\n    checkExpFails(\"1 > 5 or ^(1, 2) < any (3, 4)^\",\n        ERR_IN_OPERANDS_INCOMPATIBLE);\n  }\n","realPath":"core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":4800,"status":"B"}],"commitId":"f47465236b7650f2280092b708fa39062fe79ffd","commitMessage":"@@@[CALCITE-1845] Quantified comparison predicates (SOME.  ANY.  ALL)\n\nAdd SqlKind.NOT_IN.  and deprecate SqlInOperator.isNotIn()\n\nAdd a test case for [DRILL-5644] (already worked).\n","date":"2017-07-04 12:32:04","modifiedFileCount":"13","status":"M","submitter":"Julian Hyde"},{"authorTime":"2018-05-30 12:16:57","codes":[{"authorDate":"2018-05-30 12:16:57","commitOrder":6,"curCode":"  @Test public void testInList() {\n    check(\"select * from emp where empno in (10,20)\");\n\n    \r\n    check(\"select * from emp\\n\"\n        + \"where empno in (10 + deptno, cast(null as integer))\");\n    check(\"select * from emp where empno in (10, '20')\");\n    checkFails(\n        \"select * from emp where empno in ^(10, '20')^\",\n        ERR_IN_VALUES_INCOMPATIBLE, false);\n\n    checkExpType(\"1 in (2, 3, 4)\", \"BOOLEAN NOT NULL\");\n    checkExpType(\"cast(null as integer) in (2, 3, 4)\", \"BOOLEAN\");\n    checkExpType(\"1 in (2, cast(null as integer) , 4)\", \"BOOLEAN\");\n    checkExpType(\"1 in (2.5, 3.14)\", \"BOOLEAN NOT NULL\");\n    checkExpType(\"true in (false, unknown)\", \"BOOLEAN\");\n    checkExpType(\"true in (false, false or unknown)\", \"BOOLEAN\");\n    checkExpType(\"true in (false, true)\", \"BOOLEAN NOT NULL\");\n    checkExpType(\"(1,2) in ((1,2), (3,4))\", \"BOOLEAN NOT NULL\");\n    checkExpType(\n        \"'medium' in (cast(null as varchar(10)), 'bc')\",\n        \"BOOLEAN\");\n\n    \r\n    checkColumnType(\"select empno in (1, 2) from emp\", \"BOOLEAN NOT NULL\");\n    checkColumnType(\n        \"select nullif(empno,empno) in (1, 2) from emp\",\n        \"BOOLEAN\");\n    checkColumnType(\n        \"select empno in (1, nullif(empno,empno), 2) from emp\",\n        \"BOOLEAN\");\n\n    checkExp(\"1 in (2, 'c')\");\n    checkExpFails(\n        \"1 in ^(2, 'c')^\",\n        ERR_IN_VALUES_INCOMPATIBLE,\n        false);\n    checkExpFails(\n        \"1 in ^((2), (3,4))^\",\n        ERR_IN_VALUES_INCOMPATIBLE);\n    checkExp(\"false and ^1 in ('b', 'c')^\");\n    checkExpFails(\"false and ^1 in (date '2012-01-02', date '2012-01-04')^\",\n        ERR_IN_OPERANDS_INCOMPATIBLE);\n    checkExpFails(\n        \"1 > 5 or ^(1, 2) in (3, 4)^\",\n        ERR_IN_OPERANDS_INCOMPATIBLE);\n  }\n","date":"2019-08-29 17:01:46","endLine":5229,"groupId":"851","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testInList","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/43/621a7d61dd840b7e1253728a5784565dc4f2c4.src","preCode":"  @Test public void testInList() {\n    check(\"select * from emp where empno in (10,20)\");\n\n    \r\n    check(\"select * from emp\\n\"\n        + \"where empno in (10 + deptno, cast(null as integer))\");\n    checkFails(\n        \"select * from emp where empno in ^(10, '20')^\",\n        ERR_IN_VALUES_INCOMPATIBLE);\n\n    checkExpType(\"1 in (2, 3, 4)\", \"BOOLEAN NOT NULL\");\n    checkExpType(\"cast(null as integer) in (2, 3, 4)\", \"BOOLEAN\");\n    checkExpType(\"1 in (2, cast(null as integer) , 4)\", \"BOOLEAN\");\n    checkExpType(\"1 in (2.5, 3.14)\", \"BOOLEAN NOT NULL\");\n    checkExpType(\"true in (false, unknown)\", \"BOOLEAN\");\n    checkExpType(\"true in (false, false or unknown)\", \"BOOLEAN\");\n    checkExpType(\"true in (false, true)\", \"BOOLEAN NOT NULL\");\n    checkExpType(\"(1,2) in ((1,2), (3,4))\", \"BOOLEAN NOT NULL\");\n    checkExpType(\n        \"'medium' in (cast(null as varchar(10)), 'bc')\",\n        \"BOOLEAN\");\n\n    \r\n    checkColumnType(\"select empno in (1, 2) from emp\", \"BOOLEAN NOT NULL\");\n    checkColumnType(\n        \"select nullif(empno,empno) in (1, 2) from emp\",\n        \"BOOLEAN\");\n    checkColumnType(\n        \"select empno in (1, nullif(empno,empno), 2) from emp\",\n        \"BOOLEAN\");\n\n    checkExpFails(\n        \"1 in ^(2, 'c')^\",\n        ERR_IN_VALUES_INCOMPATIBLE);\n    checkExpFails(\n        \"1 in ^((2), (3,4))^\",\n        ERR_IN_VALUES_INCOMPATIBLE);\n    checkExp(\"false and ^1 in ('b', 'c')^\");\n    checkExpFails(\"false and ^1 in (date '2012-01-02', date '2012-01-04')^\",\n        ERR_IN_OPERANDS_INCOMPATIBLE);\n    checkExpFails(\n        \"1 > 5 or ^(1, 2) in (3, 4)^\",\n        ERR_IN_OPERANDS_INCOMPATIBLE);\n  }\n","realPath":"core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":5183,"status":"M"},{"authorDate":"2018-05-30 12:16:57","commitOrder":6,"curCode":"  @Test public void testAnyList() {\n    check(\"select * from emp where empno = any (10,20)\");\n\n    check(\"select * from emp\\n\"\n        + \"where empno < any (10 + deptno, cast(null as integer))\");\n    check(\"select * from emp where empno < any (10, '20')\");\n    checkFails(\n        \"select * from emp where empno < any ^(10, '20')^\",\n        ERR_IN_VALUES_INCOMPATIBLE, false);\n\n    checkExpType(\"1 < all (2, 3, 4)\", \"BOOLEAN NOT NULL\");\n    checkExpType(\"cast(null as integer) < all (2, 3, 4)\", \"BOOLEAN\");\n    checkExpType(\"1 > some (2, cast(null as integer) , 4)\", \"BOOLEAN\");\n    checkExpType(\"1 > any (2.5, 3.14)\", \"BOOLEAN NOT NULL\");\n    checkExpType(\"true = any (false, unknown)\", \"BOOLEAN\");\n    checkExpType(\"true = any (false, false or unknown)\", \"BOOLEAN\");\n    checkExpType(\"true <> any (false, true)\", \"BOOLEAN NOT NULL\");\n    checkExpType(\"(1,2) = any ((1,2), (3,4))\", \"BOOLEAN NOT NULL\");\n    checkExpType(\"(1,2) < any ((1,2), (3,4))\", \"BOOLEAN NOT NULL\");\n    checkExpType(\"'abc' < any (cast(null as varchar(10)), 'bc')\",\n        \"BOOLEAN\");\n\n    \r\n    checkColumnType(\"select empno < any (1, 2) from emp\", \"BOOLEAN NOT NULL\");\n    checkColumnType(\n        \"select nullif(empno,empno) > all (1, 2) from emp\",\n        \"BOOLEAN\");\n    checkColumnType(\n        \"select empno in (1, nullif(empno,empno), 2) from emp\",\n        \"BOOLEAN\");\n\n    checkExp(\"1 = any (2, 'c')\");\n    checkExpFails(\"1 = any ^(2, 'c')^\",\n        ERR_IN_VALUES_INCOMPATIBLE, false);\n    checkExpFails(\"1 > all ^((2), (3,4))^\",\n        ERR_IN_VALUES_INCOMPATIBLE);\n    checkExp(\"false and 1 = any ('b', 'c')\");\n    checkExpFails(\"false and ^1 = any (date '2012-01-02', date '2012-01-04')^\",\n        ERR_IN_OPERANDS_INCOMPATIBLE);\n    checkExpFails(\"1 > 5 or ^(1, 2) < any (3, 4)^\",\n        ERR_IN_OPERANDS_INCOMPATIBLE);\n  }\n","date":"2019-08-29 17:01:46","endLine":5286,"groupId":"2310","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testAnyList","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/43/621a7d61dd840b7e1253728a5784565dc4f2c4.src","preCode":"  @Test public void testAnyList() {\n    check(\"select * from emp where empno = any (10,20)\");\n\n    check(\"select * from emp\\n\"\n        + \"where empno < any (10 + deptno, cast(null as integer))\");\n    checkFails(\n        \"select * from emp where empno < any ^(10, '20')^\",\n        ERR_IN_VALUES_INCOMPATIBLE);\n\n    checkExpType(\"1 < all (2, 3, 4)\", \"BOOLEAN NOT NULL\");\n    checkExpType(\"cast(null as integer) < all (2, 3, 4)\", \"BOOLEAN\");\n    checkExpType(\"1 > some (2, cast(null as integer) , 4)\", \"BOOLEAN\");\n    checkExpType(\"1 > any (2.5, 3.14)\", \"BOOLEAN NOT NULL\");\n    checkExpType(\"true = any (false, unknown)\", \"BOOLEAN\");\n    checkExpType(\"true = any (false, false or unknown)\", \"BOOLEAN\");\n    checkExpType(\"true <> any (false, true)\", \"BOOLEAN NOT NULL\");\n    checkExpType(\"(1,2) = any ((1,2), (3,4))\", \"BOOLEAN NOT NULL\");\n    checkExpType(\"(1,2) < any ((1,2), (3,4))\", \"BOOLEAN NOT NULL\");\n    checkExpType(\"'abc' < any (cast(null as varchar(10)), 'bc')\",\n        \"BOOLEAN\");\n\n    \r\n    checkColumnType(\"select empno < any (1, 2) from emp\", \"BOOLEAN NOT NULL\");\n    checkColumnType(\n        \"select nullif(empno,empno) > all (1, 2) from emp\",\n        \"BOOLEAN\");\n    checkColumnType(\n        \"select empno in (1, nullif(empno,empno), 2) from emp\",\n        \"BOOLEAN\");\n\n    checkExpFails(\"1 = any ^(2, 'c')^\",\n        ERR_IN_VALUES_INCOMPATIBLE);\n    checkExpFails(\"1 > all ^((2), (3,4))^\",\n        ERR_IN_VALUES_INCOMPATIBLE);\n    checkExp(\"false and 1 = any ('b', 'c')\");\n    checkExpFails(\"false and ^1 = any (date '2012-01-02', date '2012-01-04')^\",\n        ERR_IN_OPERANDS_INCOMPATIBLE);\n    checkExpFails(\"1 > 5 or ^(1, 2) < any (3, 4)^\",\n        ERR_IN_OPERANDS_INCOMPATIBLE);\n  }\n","realPath":"core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":5245,"status":"M"}],"commitId":"01477c42ded991aaa7b14cf72a6e4ea1a20edf5e","commitMessage":"@@@[CALCITE-2302] Implicit type cast support\n\nChanges:\n* Support full implicit type coercion for SQL contexts:\nSet operation.  binary arithmetic exprs.  binary equality\nexprs.  binary comparison exprs.  case when(COALESCE). \nIN operation.  builtin functions.  user defined function(UDF);\n* The SqlValidator now takes a component named `TypeCoercion`\nresponsible for the coercion work.  you can turn off the coercion with\n`SqlValidator#setEnableTypeCoercion(false)`;\n* We follow PostgreSQL and SQL-SERVER conversion style for two integers division. \ni.e. `'9'/2` returns INTEGER 4.\n","date":"2019-08-29 17:01:46","modifiedFileCount":"50","status":"M","submitter":"yuzhao.cyz"},{"authorTime":"2019-09-07 07:51:19","codes":[{"authorDate":"2019-09-07 07:51:19","commitOrder":7,"curCode":"  @Test public void testInList() {\n    sql(\"select * from emp where empno in (10,20)\").ok();\n\n    \r\n    sql(\"select * from emp\\n\"\n        + \"where empno in (10 + deptno, cast(null as integer))\").ok();\n    sql(\"select * from emp where empno in (10, '20')\").ok();\n    sql(\"select * from emp where empno in ^(10, '20')^\")\n        .withTypeCoercion(false)\n        .fails(ERR_IN_VALUES_INCOMPATIBLE);\n\n    expr(\"1 in (2, 3, 4)\")\n        .columnType(\"BOOLEAN NOT NULL\");\n    expr(\"cast(null as integer) in (2, 3, 4)\")\n        .columnType(\"BOOLEAN\");\n    expr(\"1 in (2, cast(null as integer) , 4)\")\n        .columnType(\"BOOLEAN\");\n    expr(\"1 in (2.5, 3.14)\")\n        .columnType(\"BOOLEAN NOT NULL\");\n    expr(\"true in (false, unknown)\")\n        .columnType(\"BOOLEAN\");\n    expr(\"true in (false, false or unknown)\")\n        .columnType(\"BOOLEAN\");\n    expr(\"true in (false, true)\")\n        .columnType(\"BOOLEAN NOT NULL\");\n    expr(\"(1,2) in ((1,2), (3,4))\")\n        .columnType(\"BOOLEAN NOT NULL\");\n    expr(\"'medium' in (cast(null as varchar(10)), 'bc')\")\n        .columnType(\"BOOLEAN\");\n\n    \r\n    sql(\"select empno in (1, 2) from emp\")\n        .columnType(\"BOOLEAN NOT NULL\");\n    sql(\"select nullif(empno,empno) in (1, 2) from emp\")\n        .columnType(\"BOOLEAN\");\n    sql(\"select empno in (1, nullif(empno,empno), 2) from emp\")\n        .columnType(\"BOOLEAN\");\n\n    expr(\"1 in (2, 'c')\").ok();\n    expr(\"1 in ^(2, 'c')^\")\n        .withTypeCoercion(false)\n        .fails(ERR_IN_VALUES_INCOMPATIBLE);\n    expr(\"1 in ^((2), (3,4))^\")\n        .fails(ERR_IN_VALUES_INCOMPATIBLE);\n    expr(\"false and ^1 in ('b', 'c')^\").ok();\n    expr(\"false and ^1 in (date '2012-01-02', date '2012-01-04')^\")\n        .fails(ERR_IN_OPERANDS_INCOMPATIBLE);\n    expr(\"1 > 5 or ^(1, 2) in (3, 4)^\")\n        .fails(ERR_IN_OPERANDS_INCOMPATIBLE);\n  }\n","date":"2019-09-24 02:59:18","endLine":4893,"groupId":"15397","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testInList","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/a3/d33ba8e946a499cac312fa98a0e5b21a080452.src","preCode":"  @Test public void testInList() {\n    check(\"select * from emp where empno in (10,20)\");\n\n    \r\n    check(\"select * from emp\\n\"\n        + \"where empno in (10 + deptno, cast(null as integer))\");\n    check(\"select * from emp where empno in (10, '20')\");\n    checkFails(\n        \"select * from emp where empno in ^(10, '20')^\",\n        ERR_IN_VALUES_INCOMPATIBLE, false);\n\n    checkExpType(\"1 in (2, 3, 4)\", \"BOOLEAN NOT NULL\");\n    checkExpType(\"cast(null as integer) in (2, 3, 4)\", \"BOOLEAN\");\n    checkExpType(\"1 in (2, cast(null as integer) , 4)\", \"BOOLEAN\");\n    checkExpType(\"1 in (2.5, 3.14)\", \"BOOLEAN NOT NULL\");\n    checkExpType(\"true in (false, unknown)\", \"BOOLEAN\");\n    checkExpType(\"true in (false, false or unknown)\", \"BOOLEAN\");\n    checkExpType(\"true in (false, true)\", \"BOOLEAN NOT NULL\");\n    checkExpType(\"(1,2) in ((1,2), (3,4))\", \"BOOLEAN NOT NULL\");\n    checkExpType(\n        \"'medium' in (cast(null as varchar(10)), 'bc')\",\n        \"BOOLEAN\");\n\n    \r\n    checkColumnType(\"select empno in (1, 2) from emp\", \"BOOLEAN NOT NULL\");\n    checkColumnType(\n        \"select nullif(empno,empno) in (1, 2) from emp\",\n        \"BOOLEAN\");\n    checkColumnType(\n        \"select empno in (1, nullif(empno,empno), 2) from emp\",\n        \"BOOLEAN\");\n\n    checkExp(\"1 in (2, 'c')\");\n    checkExpFails(\n        \"1 in ^(2, 'c')^\",\n        ERR_IN_VALUES_INCOMPATIBLE,\n        false);\n    checkExpFails(\n        \"1 in ^((2), (3,4))^\",\n        ERR_IN_VALUES_INCOMPATIBLE);\n    checkExp(\"false and ^1 in ('b', 'c')^\");\n    checkExpFails(\"false and ^1 in (date '2012-01-02', date '2012-01-04')^\",\n        ERR_IN_OPERANDS_INCOMPATIBLE);\n    checkExpFails(\n        \"1 > 5 or ^(1, 2) in (3, 4)^\",\n        ERR_IN_OPERANDS_INCOMPATIBLE);\n  }\n","realPath":"core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":4844,"status":"M"},{"authorDate":"2019-09-07 07:51:19","commitOrder":7,"curCode":"  @Test public void testAnyList() {\n    sql(\"select * from emp where empno = any (10,20)\").ok();\n\n    sql(\"select * from emp\\n\"\n        + \"where empno < any (10 + deptno, cast(null as integer))\").ok();\n    sql(\"select * from emp where empno < any (10, '20')\").ok();\n    sql(\"select * from emp where empno < any ^(10, '20')^\")\n        .withTypeCoercion(false)\n        .fails(ERR_IN_VALUES_INCOMPATIBLE);\n\n    expr(\"1 < all (2, 3, 4)\")\n        .columnType(\"BOOLEAN NOT NULL\");\n    expr(\"cast(null as integer) < all (2, 3, 4)\")\n        .columnType(\"BOOLEAN\");\n    expr(\"1 > some (2, cast(null as integer) , 4)\")\n        .columnType(\"BOOLEAN\");\n    expr(\"1 > any (2.5, 3.14)\")\n        .columnType(\"BOOLEAN NOT NULL\");\n    expr(\"true = any (false, unknown)\")\n        .columnType(\"BOOLEAN\");\n    expr(\"true = any (false, false or unknown)\")\n        .columnType(\"BOOLEAN\");\n    expr(\"true <> any (false, true)\")\n        .columnType(\"BOOLEAN NOT NULL\");\n    expr(\"(1,2) = any ((1,2), (3,4))\")\n        .columnType(\"BOOLEAN NOT NULL\");\n    expr(\"(1,2) < any ((1,2), (3,4))\")\n        .columnType(\"BOOLEAN NOT NULL\");\n    expr(\"'abc' < any (cast(null as varchar(10)), 'bc')\")\n        .columnType(\"BOOLEAN\");\n\n    \r\n    sql(\"select empno < any (1, 2) from emp\")\n        .columnType(\"BOOLEAN NOT NULL\");\n    sql(\"select nullif(empno,empno) > all (1, 2) from emp\")\n        .columnType(\"BOOLEAN\");\n    sql(\"select empno in (1, nullif(empno,empno), 2) from emp\")\n        .columnType(\"BOOLEAN\");\n\n    expr(\"1 = any (2, 'c')\").ok();\n    expr(\"1 = any ^(2, 'c')^\")\n        .withTypeCoercion(false)\n        .fails(ERR_IN_VALUES_INCOMPATIBLE);\n    expr(\"1 > all ^((2), (3,4))^\")\n        .fails(ERR_IN_VALUES_INCOMPATIBLE);\n    expr(\"false and 1 = any ('b', 'c')\").ok();\n    expr(\"false and ^1 = any (date '2012-01-02', date '2012-01-04')^\")\n        .fails(ERR_IN_OPERANDS_INCOMPATIBLE);\n    expr(\"1 > 5 or ^(1, 2) < any (3, 4)^\")\n        .fails(ERR_IN_OPERANDS_INCOMPATIBLE);\n  }\n","date":"2019-09-24 02:59:18","endLine":4958,"groupId":"15397","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testAnyList","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/a3/d33ba8e946a499cac312fa98a0e5b21a080452.src","preCode":"  @Test public void testAnyList() {\n    check(\"select * from emp where empno = any (10,20)\");\n\n    check(\"select * from emp\\n\"\n        + \"where empno < any (10 + deptno, cast(null as integer))\");\n    check(\"select * from emp where empno < any (10, '20')\");\n    checkFails(\n        \"select * from emp where empno < any ^(10, '20')^\",\n        ERR_IN_VALUES_INCOMPATIBLE, false);\n\n    checkExpType(\"1 < all (2, 3, 4)\", \"BOOLEAN NOT NULL\");\n    checkExpType(\"cast(null as integer) < all (2, 3, 4)\", \"BOOLEAN\");\n    checkExpType(\"1 > some (2, cast(null as integer) , 4)\", \"BOOLEAN\");\n    checkExpType(\"1 > any (2.5, 3.14)\", \"BOOLEAN NOT NULL\");\n    checkExpType(\"true = any (false, unknown)\", \"BOOLEAN\");\n    checkExpType(\"true = any (false, false or unknown)\", \"BOOLEAN\");\n    checkExpType(\"true <> any (false, true)\", \"BOOLEAN NOT NULL\");\n    checkExpType(\"(1,2) = any ((1,2), (3,4))\", \"BOOLEAN NOT NULL\");\n    checkExpType(\"(1,2) < any ((1,2), (3,4))\", \"BOOLEAN NOT NULL\");\n    checkExpType(\"'abc' < any (cast(null as varchar(10)), 'bc')\",\n        \"BOOLEAN\");\n\n    \r\n    checkColumnType(\"select empno < any (1, 2) from emp\", \"BOOLEAN NOT NULL\");\n    checkColumnType(\n        \"select nullif(empno,empno) > all (1, 2) from emp\",\n        \"BOOLEAN\");\n    checkColumnType(\n        \"select empno in (1, nullif(empno,empno), 2) from emp\",\n        \"BOOLEAN\");\n\n    checkExp(\"1 = any (2, 'c')\");\n    checkExpFails(\"1 = any ^(2, 'c')^\",\n        ERR_IN_VALUES_INCOMPATIBLE, false);\n    checkExpFails(\"1 > all ^((2), (3,4))^\",\n        ERR_IN_VALUES_INCOMPATIBLE);\n    checkExp(\"false and 1 = any ('b', 'c')\");\n    checkExpFails(\"false and ^1 = any (date '2012-01-02', date '2012-01-04')^\",\n        ERR_IN_OPERANDS_INCOMPATIBLE);\n    checkExpFails(\"1 > 5 or ^(1, 2) < any (3, 4)^\",\n        ERR_IN_OPERANDS_INCOMPATIBLE);\n  }\n","realPath":"core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":4908,"status":"M"}],"commitId":"405614f87b75eb515e767b78a2c47481a0efc701","commitMessage":"@@@[CALCITE-3327] Simplify SqlValidatorTest and SqlParserTest by making test methods fluent\n\nReplace 'boolean typeCoercion' parameter with fluent method 'Sql.withTypeCoercion(boolean)'.\n\nDeprecate various checkXxx methods. For example. \ncheckExp(sql.  expected) becomes expr(sql).ok();\ncheckExpFails(sql.  e) becomes expr(s).fails(e).\n\nRename SqlParserTest.exp to expr.\n","date":"2019-09-24 02:59:18","modifiedFileCount":"16","status":"M","submitter":"Julian Hyde"},{"authorTime":"2020-04-02 10:39:10","codes":[{"authorDate":"2020-04-02 10:39:10","commitOrder":8,"curCode":"  @Test void testInList() {\n    sql(\"select * from emp where empno in (10,20)\").ok();\n\n    \r\n    sql(\"select * from emp\\n\"\n        + \"where empno in (10 + deptno, cast(null as integer))\").ok();\n    sql(\"select * from emp where empno in (10, '20')\").ok();\n    sql(\"select * from emp where empno in ^(10, '20')^\")\n        .withTypeCoercion(false)\n        .fails(ERR_IN_VALUES_INCOMPATIBLE);\n\n    expr(\"1 in (2, 3, 4)\")\n        .columnType(\"BOOLEAN NOT NULL\");\n    expr(\"cast(null as integer) in (2, 3, 4)\")\n        .columnType(\"BOOLEAN\");\n    expr(\"1 in (2, cast(null as integer) , 4)\")\n        .columnType(\"BOOLEAN\");\n    expr(\"1 in (2.5, 3.14)\")\n        .columnType(\"BOOLEAN NOT NULL\");\n    expr(\"true in (false, unknown)\")\n        .columnType(\"BOOLEAN\");\n    expr(\"true in (false, false or unknown)\")\n        .columnType(\"BOOLEAN\");\n    expr(\"true in (false, true)\")\n        .columnType(\"BOOLEAN NOT NULL\");\n    expr(\"(1,2) in ((1,2), (3,4))\")\n        .columnType(\"BOOLEAN NOT NULL\");\n    expr(\"'medium' in (cast(null as varchar(10)), 'bc')\")\n        .columnType(\"BOOLEAN\");\n\n    \r\n    sql(\"select empno in (1, 2) from emp\")\n        .columnType(\"BOOLEAN NOT NULL\");\n    sql(\"select nullif(empno,empno) in (1, 2) from emp\")\n        .columnType(\"BOOLEAN\");\n    sql(\"select empno in (1, nullif(empno,empno), 2) from emp\")\n        .columnType(\"BOOLEAN\");\n\n    expr(\"1 in (2, 'c')\").ok();\n    expr(\"1 in ^(2, 'c')^\")\n        .withTypeCoercion(false)\n        .fails(ERR_IN_VALUES_INCOMPATIBLE);\n    expr(\"1 in ^((2), (3,4))^\")\n        .fails(ERR_IN_VALUES_INCOMPATIBLE);\n    expr(\"false and ^1 in ('b', 'c')^\").ok();\n    expr(\"false and ^1 in (date '2012-01-02', date '2012-01-04')^\")\n        .fails(ERR_IN_OPERANDS_INCOMPATIBLE);\n    expr(\"1 > 5 or ^(1, 2) in (3, 4)^\")\n        .fails(ERR_IN_OPERANDS_INCOMPATIBLE);\n  }\n","date":"2020-04-06 04:57:49","endLine":4933,"groupId":"101184","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"testInList","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/b6/f9115009e28a63267b183e3a0a9a5e7f343a61.src","preCode":"  @Test public void testInList() {\n    sql(\"select * from emp where empno in (10,20)\").ok();\n\n    \r\n    sql(\"select * from emp\\n\"\n        + \"where empno in (10 + deptno, cast(null as integer))\").ok();\n    sql(\"select * from emp where empno in (10, '20')\").ok();\n    sql(\"select * from emp where empno in ^(10, '20')^\")\n        .withTypeCoercion(false)\n        .fails(ERR_IN_VALUES_INCOMPATIBLE);\n\n    expr(\"1 in (2, 3, 4)\")\n        .columnType(\"BOOLEAN NOT NULL\");\n    expr(\"cast(null as integer) in (2, 3, 4)\")\n        .columnType(\"BOOLEAN\");\n    expr(\"1 in (2, cast(null as integer) , 4)\")\n        .columnType(\"BOOLEAN\");\n    expr(\"1 in (2.5, 3.14)\")\n        .columnType(\"BOOLEAN NOT NULL\");\n    expr(\"true in (false, unknown)\")\n        .columnType(\"BOOLEAN\");\n    expr(\"true in (false, false or unknown)\")\n        .columnType(\"BOOLEAN\");\n    expr(\"true in (false, true)\")\n        .columnType(\"BOOLEAN NOT NULL\");\n    expr(\"(1,2) in ((1,2), (3,4))\")\n        .columnType(\"BOOLEAN NOT NULL\");\n    expr(\"'medium' in (cast(null as varchar(10)), 'bc')\")\n        .columnType(\"BOOLEAN\");\n\n    \r\n    sql(\"select empno in (1, 2) from emp\")\n        .columnType(\"BOOLEAN NOT NULL\");\n    sql(\"select nullif(empno,empno) in (1, 2) from emp\")\n        .columnType(\"BOOLEAN\");\n    sql(\"select empno in (1, nullif(empno,empno), 2) from emp\")\n        .columnType(\"BOOLEAN\");\n\n    expr(\"1 in (2, 'c')\").ok();\n    expr(\"1 in ^(2, 'c')^\")\n        .withTypeCoercion(false)\n        .fails(ERR_IN_VALUES_INCOMPATIBLE);\n    expr(\"1 in ^((2), (3,4))^\")\n        .fails(ERR_IN_VALUES_INCOMPATIBLE);\n    expr(\"false and ^1 in ('b', 'c')^\").ok();\n    expr(\"false and ^1 in (date '2012-01-02', date '2012-01-04')^\")\n        .fails(ERR_IN_OPERANDS_INCOMPATIBLE);\n    expr(\"1 > 5 or ^(1, 2) in (3, 4)^\")\n        .fails(ERR_IN_OPERANDS_INCOMPATIBLE);\n  }\n","realPath":"core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":4884,"status":"M"},{"authorDate":"2020-04-02 10:39:10","commitOrder":8,"curCode":"  @Test void testAnyList() {\n    sql(\"select * from emp where empno = any (10,20)\").ok();\n\n    sql(\"select * from emp\\n\"\n        + \"where empno < any (10 + deptno, cast(null as integer))\").ok();\n    sql(\"select * from emp where empno < any (10, '20')\").ok();\n    sql(\"select * from emp where empno < any ^(10, '20')^\")\n        .withTypeCoercion(false)\n        .fails(ERR_IN_VALUES_INCOMPATIBLE);\n\n    expr(\"1 < all (2, 3, 4)\")\n        .columnType(\"BOOLEAN NOT NULL\");\n    expr(\"cast(null as integer) < all (2, 3, 4)\")\n        .columnType(\"BOOLEAN\");\n    expr(\"1 > some (2, cast(null as integer) , 4)\")\n        .columnType(\"BOOLEAN\");\n    expr(\"1 > any (2.5, 3.14)\")\n        .columnType(\"BOOLEAN NOT NULL\");\n    expr(\"true = any (false, unknown)\")\n        .columnType(\"BOOLEAN\");\n    expr(\"true = any (false, false or unknown)\")\n        .columnType(\"BOOLEAN\");\n    expr(\"true <> any (false, true)\")\n        .columnType(\"BOOLEAN NOT NULL\");\n    expr(\"(1,2) = any ((1,2), (3,4))\")\n        .columnType(\"BOOLEAN NOT NULL\");\n    expr(\"(1,2) < any ((1,2), (3,4))\")\n        .columnType(\"BOOLEAN NOT NULL\");\n    expr(\"'abc' < any (cast(null as varchar(10)), 'bc')\")\n        .columnType(\"BOOLEAN\");\n\n    \r\n    sql(\"select empno < any (1, 2) from emp\")\n        .columnType(\"BOOLEAN NOT NULL\");\n    sql(\"select nullif(empno,empno) > all (1, 2) from emp\")\n        .columnType(\"BOOLEAN\");\n    sql(\"select empno in (1, nullif(empno,empno), 2) from emp\")\n        .columnType(\"BOOLEAN\");\n\n    expr(\"1 = any (2, 'c')\").ok();\n    expr(\"1 = any ^(2, 'c')^\")\n        .withTypeCoercion(false)\n        .fails(ERR_IN_VALUES_INCOMPATIBLE);\n    expr(\"1 > all ^((2), (3,4))^\")\n        .fails(ERR_IN_VALUES_INCOMPATIBLE);\n    expr(\"false and 1 = any ('b', 'c')\").ok();\n    expr(\"false and ^1 = any (date '2012-01-02', date '2012-01-04')^\")\n        .fails(ERR_IN_OPERANDS_INCOMPATIBLE);\n    expr(\"1 > 5 or ^(1, 2) < any (3, 4)^\")\n        .fails(ERR_IN_OPERANDS_INCOMPATIBLE);\n  }\n","date":"2020-04-06 04:57:49","endLine":4998,"groupId":"101184","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"testAnyList","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/b6/f9115009e28a63267b183e3a0a9a5e7f343a61.src","preCode":"  @Test public void testAnyList() {\n    sql(\"select * from emp where empno = any (10,20)\").ok();\n\n    sql(\"select * from emp\\n\"\n        + \"where empno < any (10 + deptno, cast(null as integer))\").ok();\n    sql(\"select * from emp where empno < any (10, '20')\").ok();\n    sql(\"select * from emp where empno < any ^(10, '20')^\")\n        .withTypeCoercion(false)\n        .fails(ERR_IN_VALUES_INCOMPATIBLE);\n\n    expr(\"1 < all (2, 3, 4)\")\n        .columnType(\"BOOLEAN NOT NULL\");\n    expr(\"cast(null as integer) < all (2, 3, 4)\")\n        .columnType(\"BOOLEAN\");\n    expr(\"1 > some (2, cast(null as integer) , 4)\")\n        .columnType(\"BOOLEAN\");\n    expr(\"1 > any (2.5, 3.14)\")\n        .columnType(\"BOOLEAN NOT NULL\");\n    expr(\"true = any (false, unknown)\")\n        .columnType(\"BOOLEAN\");\n    expr(\"true = any (false, false or unknown)\")\n        .columnType(\"BOOLEAN\");\n    expr(\"true <> any (false, true)\")\n        .columnType(\"BOOLEAN NOT NULL\");\n    expr(\"(1,2) = any ((1,2), (3,4))\")\n        .columnType(\"BOOLEAN NOT NULL\");\n    expr(\"(1,2) < any ((1,2), (3,4))\")\n        .columnType(\"BOOLEAN NOT NULL\");\n    expr(\"'abc' < any (cast(null as varchar(10)), 'bc')\")\n        .columnType(\"BOOLEAN\");\n\n    \r\n    sql(\"select empno < any (1, 2) from emp\")\n        .columnType(\"BOOLEAN NOT NULL\");\n    sql(\"select nullif(empno,empno) > all (1, 2) from emp\")\n        .columnType(\"BOOLEAN\");\n    sql(\"select empno in (1, nullif(empno,empno), 2) from emp\")\n        .columnType(\"BOOLEAN\");\n\n    expr(\"1 = any (2, 'c')\").ok();\n    expr(\"1 = any ^(2, 'c')^\")\n        .withTypeCoercion(false)\n        .fails(ERR_IN_VALUES_INCOMPATIBLE);\n    expr(\"1 > all ^((2), (3,4))^\")\n        .fails(ERR_IN_VALUES_INCOMPATIBLE);\n    expr(\"false and 1 = any ('b', 'c')\").ok();\n    expr(\"false and ^1 = any (date '2012-01-02', date '2012-01-04')^\")\n        .fails(ERR_IN_OPERANDS_INCOMPATIBLE);\n    expr(\"1 > 5 or ^(1, 2) < any (3, 4)^\")\n        .fails(ERR_IN_OPERANDS_INCOMPATIBLE);\n  }\n","realPath":"core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":4948,"status":"M"}],"commitId":"9492dd4146f63ddc028010d6c4e86f6a5cb29a8d","commitMessage":"@@@[CALCITE-3892] Make junit test classes and methods non-public where possible\n\nPrior to junit 5.  classes and methods had to be public. This is no\nlonger the case.\n\nSome classes need to remain public because they are referenced from\nelsewhere.  or if they use reflection somehow. The remaining 'public'\nkeyword will be informative to maintainers.\n","date":"2020-04-06 04:57:49","modifiedFileCount":"196","status":"M","submitter":"Julian Hyde"}]
