[{"authorTime":"2014-11-14 09:39:29","codes":[{"authorDate":"2014-11-14 09:39:29","commitOrder":1,"curCode":"  @Test public void testLoadSorted() {\n    final JavaTypeFactoryImpl typeFactory =\n        new JavaTypeFactoryImpl(RelDataTypeSystem.DEFAULT);\n    final RelDataType rowType =\n        typeFactory.builder()\n            .add(\"empid\", typeFactory.createType(int.class))\n            .add(\"deptno\", typeFactory.createType(int.class))\n            .add(\"name\", typeFactory.createType(String.class))\n            .build();\n    final Enumerable<Object[]> enumerable =\n        Linq4j.asEnumerable(\n            Arrays.asList(\n                new Object[]{100, 10, \"Bill\"},\n                new Object[]{200, 20, \"Eric\"},\n                new Object[]{150, 10, \"Sebastian\"},\n                new Object[]{160, 10, \"Theodore\"}));\n    final ColumnLoader<Object[]> loader =\n        new ColumnLoader<Object[]>(typeFactory, enumerable,\n            RelDataTypeImpl.proto(rowType), null);\n    checkColumn(\n        loader.representationValues.get(0),\n        ArrayTable.RepresentationType.BIT_SLICED_PRIMITIVE_ARRAY,\n        \"Column(representation=BitSlicedPrimitiveArray(ordinal=0, bitCount=8, primitive=INT, signed=false), value=[100, 150, 160, 200, 0, 0, 0, 0])\");\n    checkColumn(\n        loader.representationValues.get(1),\n        ArrayTable.RepresentationType.BIT_SLICED_PRIMITIVE_ARRAY,\n        \"Column(representation=BitSlicedPrimitiveArray(ordinal=1, bitCount=5, primitive=INT, signed=false), value=[10, 10, 10, 20, 0, 0, 0, 0, 0, 0, 0, 0])\");\n    checkColumn(\n        loader.representationValues.get(2),\n        ArrayTable.RepresentationType.OBJECT_ARRAY,\n        \"Column(representation=ObjectArray(ordinal=2), value=[Bill, Sebastian, Theodore, Eric])\");\n  }\n","date":"2014-11-14 09:39:34","endLine":315,"groupId":"552","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testLoadSorted","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/53/4e9c2bb58814b61ec3751609c01c9032d0bb76.src","preCode":"  @Test public void testLoadSorted() {\n    final JavaTypeFactoryImpl typeFactory =\n        new JavaTypeFactoryImpl(RelDataTypeSystem.DEFAULT);\n    final RelDataType rowType =\n        typeFactory.builder()\n            .add(\"empid\", typeFactory.createType(int.class))\n            .add(\"deptno\", typeFactory.createType(int.class))\n            .add(\"name\", typeFactory.createType(String.class))\n            .build();\n    final Enumerable<Object[]> enumerable =\n        Linq4j.asEnumerable(\n            Arrays.asList(\n                new Object[]{100, 10, \"Bill\"},\n                new Object[]{200, 20, \"Eric\"},\n                new Object[]{150, 10, \"Sebastian\"},\n                new Object[]{160, 10, \"Theodore\"}));\n    final ColumnLoader<Object[]> loader =\n        new ColumnLoader<Object[]>(typeFactory, enumerable,\n            RelDataTypeImpl.proto(rowType), null);\n    checkColumn(\n        loader.representationValues.get(0),\n        ArrayTable.RepresentationType.BIT_SLICED_PRIMITIVE_ARRAY,\n        \"Column(representation=BitSlicedPrimitiveArray(ordinal=0, bitCount=8, primitive=INT, signed=false), value=[100, 150, 160, 200, 0, 0, 0, 0])\");\n    checkColumn(\n        loader.representationValues.get(1),\n        ArrayTable.RepresentationType.BIT_SLICED_PRIMITIVE_ARRAY,\n        \"Column(representation=BitSlicedPrimitiveArray(ordinal=1, bitCount=5, primitive=INT, signed=false), value=[10, 10, 10, 20, 0, 0, 0, 0, 0, 0, 0, 0])\");\n    checkColumn(\n        loader.representationValues.get(2),\n        ArrayTable.RepresentationType.OBJECT_ARRAY,\n        \"Column(representation=ObjectArray(ordinal=2), value=[Bill, Sebastian, Theodore, Eric])\");\n  }\n","realPath":"core/src/test/java/org/apache/calcite/adapter/clone/ArrayTableTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":284,"status":"B"},{"authorDate":"2014-11-14 09:39:29","commitOrder":1,"curCode":"  @Test public void testLoadSorted2() {\n    final JavaTypeFactoryImpl typeFactory =\n        new JavaTypeFactoryImpl(RelDataTypeSystem.DEFAULT);\n    final RelDataType rowType =\n        typeFactory.builder()\n            .add(\"deptno\", typeFactory.createType(int.class))\n            .add(\"empid\", typeFactory.createType(int.class))\n            .add(\"name\", typeFactory.createType(String.class))\n            .build();\n    final Enumerable<Object[]> enumerable =\n        Linq4j.asEnumerable(\n            Arrays.asList(\n                new Object[]{10, 100, \"Bill\"},\n                new Object[]{20, 200, \"Eric\"},\n                new Object[]{30, 150, \"Sebastian\"},\n                new Object[]{10, 160, \"Theodore\"}));\n    final ColumnLoader<Object[]> loader =\n        new ColumnLoader<Object[]>(typeFactory, enumerable,\n            RelDataTypeImpl.proto(rowType), null);\n    \r\n    \r\n    checkColumn(\n        loader.representationValues.get(0),\n        ArrayTable.RepresentationType.BIT_SLICED_PRIMITIVE_ARRAY,\n        \"Column(representation=BitSlicedPrimitiveArray(ordinal=0, bitCount=5, primitive=INT, signed=false), value=[10, 30, 10, 20, 0, 0, 0, 0, 0, 0, 0, 0])\");\n    checkColumn(\n        loader.representationValues.get(1),\n        ArrayTable.RepresentationType.BIT_SLICED_PRIMITIVE_ARRAY,\n        \"Column(representation=BitSlicedPrimitiveArray(ordinal=1, bitCount=8, primitive=INT, signed=false), value=[100, 150, 160, 200, 0, 0, 0, 0])\");\n    checkColumn(\n        loader.representationValues.get(2),\n        ArrayTable.RepresentationType.OBJECT_ARRAY,\n        \"Column(representation=ObjectArray(ordinal=2), value=[Bill, Sebastian, Theodore, Eric])\");\n  }\n","date":"2014-11-14 09:39:34","endLine":353,"groupId":"552","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testLoadSorted2","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/53/4e9c2bb58814b61ec3751609c01c9032d0bb76.src","preCode":"  @Test public void testLoadSorted2() {\n    final JavaTypeFactoryImpl typeFactory =\n        new JavaTypeFactoryImpl(RelDataTypeSystem.DEFAULT);\n    final RelDataType rowType =\n        typeFactory.builder()\n            .add(\"deptno\", typeFactory.createType(int.class))\n            .add(\"empid\", typeFactory.createType(int.class))\n            .add(\"name\", typeFactory.createType(String.class))\n            .build();\n    final Enumerable<Object[]> enumerable =\n        Linq4j.asEnumerable(\n            Arrays.asList(\n                new Object[]{10, 100, \"Bill\"},\n                new Object[]{20, 200, \"Eric\"},\n                new Object[]{30, 150, \"Sebastian\"},\n                new Object[]{10, 160, \"Theodore\"}));\n    final ColumnLoader<Object[]> loader =\n        new ColumnLoader<Object[]>(typeFactory, enumerable,\n            RelDataTypeImpl.proto(rowType), null);\n    \r\n    \r\n    checkColumn(\n        loader.representationValues.get(0),\n        ArrayTable.RepresentationType.BIT_SLICED_PRIMITIVE_ARRAY,\n        \"Column(representation=BitSlicedPrimitiveArray(ordinal=0, bitCount=5, primitive=INT, signed=false), value=[10, 30, 10, 20, 0, 0, 0, 0, 0, 0, 0, 0])\");\n    checkColumn(\n        loader.representationValues.get(1),\n        ArrayTable.RepresentationType.BIT_SLICED_PRIMITIVE_ARRAY,\n        \"Column(representation=BitSlicedPrimitiveArray(ordinal=1, bitCount=8, primitive=INT, signed=false), value=[100, 150, 160, 200, 0, 0, 0, 0])\");\n    checkColumn(\n        loader.representationValues.get(2),\n        ArrayTable.RepresentationType.OBJECT_ARRAY,\n        \"Column(representation=ObjectArray(ordinal=2), value=[Bill, Sebastian, Theodore, Eric])\");\n  }\n","realPath":"core/src/test/java/org/apache/calcite/adapter/clone/ArrayTableTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":320,"status":"B"}],"commitId":"a611d645ad754844a39f3d98f5f814f13dbd9404","commitMessage":"@@@[CALCITE-296] Re-organize package structure;\n[CALCITE-419] Naming convention for planner rules\n\nThis change only renames files (and deletes some obsolete files). There are no content changes.\n","date":"2014-11-14 09:39:34","modifiedFileCount":"0","status":"B","submitter":"Julian Hyde"},{"authorTime":"2020-04-02 10:39:10","codes":[{"authorDate":"2020-04-02 10:39:10","commitOrder":2,"curCode":"  @Test void testLoadSorted() {\n    final JavaTypeFactoryImpl typeFactory =\n        new JavaTypeFactoryImpl(RelDataTypeSystem.DEFAULT);\n    final RelDataType rowType =\n        typeFactory.builder()\n            .add(\"empid\", typeFactory.createType(int.class))\n            .add(\"deptno\", typeFactory.createType(int.class))\n            .add(\"name\", typeFactory.createType(String.class))\n            .build();\n    final Enumerable<Object[]> enumerable =\n        Linq4j.asEnumerable(\n            Arrays.asList(\n                new Object[]{100, 10, \"Bill\"},\n                new Object[]{200, 20, \"Eric\"},\n                new Object[]{150, 10, \"Sebastian\"},\n                new Object[]{160, 10, \"Theodore\"}));\n    final ColumnLoader<Object[]> loader =\n        new ColumnLoader<Object[]>(typeFactory, enumerable,\n            RelDataTypeImpl.proto(rowType), null);\n    checkColumn(\n        loader.representationValues.get(0),\n        ArrayTable.RepresentationType.BIT_SLICED_PRIMITIVE_ARRAY,\n        \"Column(representation=BitSlicedPrimitiveArray(ordinal=0, bitCount=8, primitive=INT, signed=false), value=[100, 150, 160, 200, 0, 0, 0, 0])\");\n    checkColumn(\n        loader.representationValues.get(1),\n        ArrayTable.RepresentationType.BIT_SLICED_PRIMITIVE_ARRAY,\n        \"Column(representation=BitSlicedPrimitiveArray(ordinal=1, bitCount=5, primitive=INT, signed=false), value=[10, 10, 10, 20, 0, 0, 0, 0, 0, 0, 0, 0])\");\n    checkColumn(\n        loader.representationValues.get(2),\n        ArrayTable.RepresentationType.OBJECT_ARRAY,\n        \"Column(representation=ObjectArray(ordinal=2), value=[Bill, Sebastian, Theodore, Eric])\");\n  }\n","date":"2020-04-06 04:57:49","endLine":316,"groupId":"101602","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"testLoadSorted","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/55/60ebbfb8d7dab7cd17c367a6c6b9bb41c7f07e.src","preCode":"  @Test public void testLoadSorted() {\n    final JavaTypeFactoryImpl typeFactory =\n        new JavaTypeFactoryImpl(RelDataTypeSystem.DEFAULT);\n    final RelDataType rowType =\n        typeFactory.builder()\n            .add(\"empid\", typeFactory.createType(int.class))\n            .add(\"deptno\", typeFactory.createType(int.class))\n            .add(\"name\", typeFactory.createType(String.class))\n            .build();\n    final Enumerable<Object[]> enumerable =\n        Linq4j.asEnumerable(\n            Arrays.asList(\n                new Object[]{100, 10, \"Bill\"},\n                new Object[]{200, 20, \"Eric\"},\n                new Object[]{150, 10, \"Sebastian\"},\n                new Object[]{160, 10, \"Theodore\"}));\n    final ColumnLoader<Object[]> loader =\n        new ColumnLoader<Object[]>(typeFactory, enumerable,\n            RelDataTypeImpl.proto(rowType), null);\n    checkColumn(\n        loader.representationValues.get(0),\n        ArrayTable.RepresentationType.BIT_SLICED_PRIMITIVE_ARRAY,\n        \"Column(representation=BitSlicedPrimitiveArray(ordinal=0, bitCount=8, primitive=INT, signed=false), value=[100, 150, 160, 200, 0, 0, 0, 0])\");\n    checkColumn(\n        loader.representationValues.get(1),\n        ArrayTable.RepresentationType.BIT_SLICED_PRIMITIVE_ARRAY,\n        \"Column(representation=BitSlicedPrimitiveArray(ordinal=1, bitCount=5, primitive=INT, signed=false), value=[10, 10, 10, 20, 0, 0, 0, 0, 0, 0, 0, 0])\");\n    checkColumn(\n        loader.representationValues.get(2),\n        ArrayTable.RepresentationType.OBJECT_ARRAY,\n        \"Column(representation=ObjectArray(ordinal=2), value=[Bill, Sebastian, Theodore, Eric])\");\n  }\n","realPath":"core/src/test/java/org/apache/calcite/adapter/clone/ArrayTableTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":285,"status":"M"},{"authorDate":"2020-04-02 10:39:10","commitOrder":2,"curCode":"  @Test void testLoadSorted2() {\n    final JavaTypeFactoryImpl typeFactory =\n        new JavaTypeFactoryImpl(RelDataTypeSystem.DEFAULT);\n    final RelDataType rowType =\n        typeFactory.builder()\n            .add(\"deptno\", typeFactory.createType(int.class))\n            .add(\"empid\", typeFactory.createType(int.class))\n            .add(\"name\", typeFactory.createType(String.class))\n            .build();\n    final Enumerable<Object[]> enumerable =\n        Linq4j.asEnumerable(\n            Arrays.asList(\n                new Object[]{10, 100, \"Bill\"},\n                new Object[]{20, 200, \"Eric\"},\n                new Object[]{30, 150, \"Sebastian\"},\n                new Object[]{10, 160, \"Theodore\"}));\n    final ColumnLoader<Object[]> loader =\n        new ColumnLoader<Object[]>(typeFactory, enumerable,\n            RelDataTypeImpl.proto(rowType), null);\n    \r\n    \r\n    checkColumn(\n        loader.representationValues.get(0),\n        ArrayTable.RepresentationType.BIT_SLICED_PRIMITIVE_ARRAY,\n        \"Column(representation=BitSlicedPrimitiveArray(ordinal=0, bitCount=5, primitive=INT, signed=false), value=[10, 30, 10, 20, 0, 0, 0, 0, 0, 0, 0, 0])\");\n    checkColumn(\n        loader.representationValues.get(1),\n        ArrayTable.RepresentationType.BIT_SLICED_PRIMITIVE_ARRAY,\n        \"Column(representation=BitSlicedPrimitiveArray(ordinal=1, bitCount=8, primitive=INT, signed=false), value=[100, 150, 160, 200, 0, 0, 0, 0])\");\n    checkColumn(\n        loader.representationValues.get(2),\n        ArrayTable.RepresentationType.OBJECT_ARRAY,\n        \"Column(representation=ObjectArray(ordinal=2), value=[Bill, Sebastian, Theodore, Eric])\");\n  }\n","date":"2020-04-06 04:57:49","endLine":354,"groupId":"101602","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"testLoadSorted2","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/55/60ebbfb8d7dab7cd17c367a6c6b9bb41c7f07e.src","preCode":"  @Test public void testLoadSorted2() {\n    final JavaTypeFactoryImpl typeFactory =\n        new JavaTypeFactoryImpl(RelDataTypeSystem.DEFAULT);\n    final RelDataType rowType =\n        typeFactory.builder()\n            .add(\"deptno\", typeFactory.createType(int.class))\n            .add(\"empid\", typeFactory.createType(int.class))\n            .add(\"name\", typeFactory.createType(String.class))\n            .build();\n    final Enumerable<Object[]> enumerable =\n        Linq4j.asEnumerable(\n            Arrays.asList(\n                new Object[]{10, 100, \"Bill\"},\n                new Object[]{20, 200, \"Eric\"},\n                new Object[]{30, 150, \"Sebastian\"},\n                new Object[]{10, 160, \"Theodore\"}));\n    final ColumnLoader<Object[]> loader =\n        new ColumnLoader<Object[]>(typeFactory, enumerable,\n            RelDataTypeImpl.proto(rowType), null);\n    \r\n    \r\n    checkColumn(\n        loader.representationValues.get(0),\n        ArrayTable.RepresentationType.BIT_SLICED_PRIMITIVE_ARRAY,\n        \"Column(representation=BitSlicedPrimitiveArray(ordinal=0, bitCount=5, primitive=INT, signed=false), value=[10, 30, 10, 20, 0, 0, 0, 0, 0, 0, 0, 0])\");\n    checkColumn(\n        loader.representationValues.get(1),\n        ArrayTable.RepresentationType.BIT_SLICED_PRIMITIVE_ARRAY,\n        \"Column(representation=BitSlicedPrimitiveArray(ordinal=1, bitCount=8, primitive=INT, signed=false), value=[100, 150, 160, 200, 0, 0, 0, 0])\");\n    checkColumn(\n        loader.representationValues.get(2),\n        ArrayTable.RepresentationType.OBJECT_ARRAY,\n        \"Column(representation=ObjectArray(ordinal=2), value=[Bill, Sebastian, Theodore, Eric])\");\n  }\n","realPath":"core/src/test/java/org/apache/calcite/adapter/clone/ArrayTableTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":321,"status":"M"}],"commitId":"9492dd4146f63ddc028010d6c4e86f6a5cb29a8d","commitMessage":"@@@[CALCITE-3892] Make junit test classes and methods non-public where possible\n\nPrior to junit 5.  classes and methods had to be public. This is no\nlonger the case.\n\nSome classes need to remain public because they are referenced from\nelsewhere.  or if they use reflection somehow. The remaining 'public'\nkeyword will be informative to maintainers.\n","date":"2020-04-06 04:57:49","modifiedFileCount":"196","status":"M","submitter":"Julian Hyde"}]
