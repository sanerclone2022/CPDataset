[{"authorTime":"2014-11-14 09:39:29","codes":[{"authorDate":"2016-02-19 03:49:20","commitOrder":2,"curCode":"  public Object current() {\n    if (fieldTypes.size() == 1) {\n      \r\n      return currentRowField(0, fieldTypes.get(0).getType().getSqlTypeName());\n    } else {\n      \r\n      Object[] row = new Object[fieldTypes.size()];\n      for (int i = 0; i < fieldTypes.size(); i++) {\n        row[i] = currentRowField(i, fieldTypes.get(i).getType().getSqlTypeName());\n      }\n\n      return row;\n    }\n  }\n","date":"2016-02-19 13:16:50","endLine":71,"groupId":"10566","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"current","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/0c/0680002c4ebf7ae5f99ae890e2b96ee2495c24.src","preCode":"  public Object current() {\n    if (fieldTypes.size() == 1) {\n      \r\n      return currentRowField(0, fieldTypes.get(0).getType().getSqlTypeName());\n    } else {\n      \r\n      Object[] row = new Object[fieldTypes.size()];\n      for (int i = 0; i < fieldTypes.size(); i++) {\n        row[i] = currentRowField(i, fieldTypes.get(i).getType().getSqlTypeName());\n      }\n\n      return row;\n    }\n  }\n","realPath":"cassandra/src/main/java/org/apache/calcite/adapter/cassandra/CassandraEnumerator.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":58,"status":"B"},{"authorDate":"2014-11-14 09:39:29","commitOrder":2,"curCode":"  public String format(Map<Object, Object> argMap) {\n    Object[] args = new Object[parameterNames.size()];\n    for (int i = 0; i < parameterNames.size(); i++) {\n      args[i] = getArg(argMap, i);\n    }\n    return format(args);\n  }\n","date":"2014-11-14 09:39:34","endLine":223,"groupId":"10566","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"format","params":"(Map<Object@Object>argMap)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/d7/e1737a83297b6f1928b5dbe0aadc531fc24de7.src","preCode":"  public String format(Map<Object, Object> argMap) {\n    Object[] args = new Object[parameterNames.size()];\n    for (int i = 0; i < parameterNames.size(); i++) {\n      args[i] = getArg(argMap, i);\n    }\n    return format(args);\n  }\n","realPath":"core/src/main/java/org/apache/calcite/util/Template.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":217,"status":"NB"}],"commitId":"91887366c40310f2435b2677ac0d9616bed842cb","commitMessage":"@@@[CALCITE-1080] Cassandra adapter (Michael Mior)\n\nClose apache/calcite#195\n","date":"2016-02-19 13:16:50","modifiedFileCount":"0","status":"M","submitter":"Michael Mior"},{"authorTime":"2014-11-14 09:39:29","codes":[{"authorDate":"2019-11-06 05:23:52","commitOrder":3,"curCode":"  public Object current() {\n    if (fieldTypes.size() == 1) {\n      \r\n      return currentRowField(0);\n    } else {\n      \r\n      Object[] row = new Object[fieldTypes.size()];\n      for (int i = 0; i < fieldTypes.size(); i++) {\n        row[i] = currentRowField(i);\n      }\n\n      return row;\n    }\n  }\n","date":"2020-02-07 02:18:09","endLine":77,"groupId":"10566","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"current","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/04/138191c6e52a17aff23d07acd2d5a3274a4bab.src","preCode":"  public Object current() {\n    if (fieldTypes.size() == 1) {\n      \r\n      return currentRowField(0, fieldTypes.get(0).getType().getSqlTypeName());\n    } else {\n      \r\n      Object[] row = new Object[fieldTypes.size()];\n      for (int i = 0; i < fieldTypes.size(); i++) {\n        row[i] = currentRowField(i, fieldTypes.get(i).getType().getSqlTypeName());\n      }\n\n      return row;\n    }\n  }\n","realPath":"cassandra/src/main/java/org/apache/calcite/adapter/cassandra/CassandraEnumerator.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":64,"status":"M"},{"authorDate":"2014-11-14 09:39:29","commitOrder":3,"curCode":"  public String format(Map<Object, Object> argMap) {\n    Object[] args = new Object[parameterNames.size()];\n    for (int i = 0; i < parameterNames.size(); i++) {\n      args[i] = getArg(argMap, i);\n    }\n    return format(args);\n  }\n","date":"2014-11-14 09:39:34","endLine":223,"groupId":"10566","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"format","params":"(Map<Object@Object>argMap)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/d7/e1737a83297b6f1928b5dbe0aadc531fc24de7.src","preCode":"  public String format(Map<Object, Object> argMap) {\n    Object[] args = new Object[parameterNames.size()];\n    for (int i = 0; i < parameterNames.size(); i++) {\n      args[i] = getArg(argMap, i);\n    }\n    return format(args);\n  }\n","realPath":"core/src/main/java/org/apache/calcite/util/Template.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":217,"status":"N"}],"commitId":"5d37a0e990a2b84c6616338490d7451065fdd3e5","commitMessage":"@@@[CALCITE-3465] Add support for missing Cassandra 3.x data types (Alessandro Solimando)\n\nCloses #1774\n","date":"2020-02-07 02:18:09","modifiedFileCount":"5","status":"M","submitter":"Alessandro Solimando"},{"authorTime":"2014-11-14 09:39:29","codes":[{"authorDate":"2020-09-29 22:09:05","commitOrder":4,"curCode":"  @Override public Object current() {\n    if (fieldTypes.size() == 1) {\n      \r\n      return currentRowField(0);\n    } else {\n      \r\n      Object[] row = new Object[fieldTypes.size()];\n      for (int i = 0; i < fieldTypes.size(); i++) {\n        row[i] = currentRowField(i);\n      }\n\n      return row;\n    }\n  }\n","date":"2020-10-07 05:42:47","endLine":77,"groupId":"10566","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"current","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/e6/a4be488d027e80be9bba1a320381679d571fd3.src","preCode":"  public Object current() {\n    if (fieldTypes.size() == 1) {\n      \r\n      return currentRowField(0);\n    } else {\n      \r\n      Object[] row = new Object[fieldTypes.size()];\n      for (int i = 0; i < fieldTypes.size(); i++) {\n        row[i] = currentRowField(i);\n      }\n\n      return row;\n    }\n  }\n","realPath":"cassandra/src/main/java/org/apache/calcite/adapter/cassandra/CassandraEnumerator.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":64,"status":"M"},{"authorDate":"2014-11-14 09:39:29","commitOrder":4,"curCode":"  public String format(Map<Object, Object> argMap) {\n    Object[] args = new Object[parameterNames.size()];\n    for (int i = 0; i < parameterNames.size(); i++) {\n      args[i] = getArg(argMap, i);\n    }\n    return format(args);\n  }\n","date":"2014-11-14 09:39:34","endLine":223,"groupId":"10566","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"format","params":"(Map<Object@Object>argMap)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/d7/e1737a83297b6f1928b5dbe0aadc531fc24de7.src","preCode":"  public String format(Map<Object, Object> argMap) {\n    Object[] args = new Object[parameterNames.size()];\n    for (int i = 0; i < parameterNames.size(); i++) {\n      args[i] = getArg(argMap, i);\n    }\n    return format(args);\n  }\n","realPath":"core/src/main/java/org/apache/calcite/util/Template.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":217,"status":"N"}],"commitId":"66caa54c5e272f8287ca132ca012733898a38768","commitMessage":"@@@[CALCITE-4314] Add missing @Override annotations\n","date":"2020-10-07 05:42:47","modifiedFileCount":"745","status":"M","submitter":"Vladimir Sitnikov"},{"authorTime":"2020-05-29 00:04:40","codes":[{"authorDate":"2020-09-29 22:09:05","commitOrder":5,"curCode":"  @Override public Object current() {\n    if (fieldTypes.size() == 1) {\n      \r\n      return currentRowField(0);\n    } else {\n      \r\n      Object[] row = new Object[fieldTypes.size()];\n      for (int i = 0; i < fieldTypes.size(); i++) {\n        row[i] = currentRowField(i);\n      }\n\n      return row;\n    }\n  }\n","date":"2020-10-07 05:42:47","endLine":77,"groupId":"10496","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"current","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/e6/a4be488d027e80be9bba1a320381679d571fd3.src","preCode":"  @Override public Object current() {\n    if (fieldTypes.size() == 1) {\n      \r\n      return currentRowField(0);\n    } else {\n      \r\n      Object[] row = new Object[fieldTypes.size()];\n      for (int i = 0; i < fieldTypes.size(); i++) {\n        row[i] = currentRowField(i);\n      }\n\n      return row;\n    }\n  }\n","realPath":"cassandra/src/main/java/org/apache/calcite/adapter/cassandra/CassandraEnumerator.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":64,"status":"N"},{"authorDate":"2020-05-29 00:04:40","commitOrder":5,"curCode":"  public String format(Map<Object, Object> argMap) {\n    @Nullable Object[] args = new Object[parameterNames.size()];\n    for (int i = 0; i < parameterNames.size(); i++) {\n      args[i] = getArg(argMap, i);\n    }\n    return format(args);\n  }\n","date":"2020-11-30 06:45:33","endLine":228,"groupId":"10496","id":8,"instanceNumber":2,"isCurCommit":1,"methodName":"format","params":"(Map<Object@Object>argMap)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/11/047261af4f8237bccb4e7b7602ccc70853757a.src","preCode":"  public String format(Map<Object, Object> argMap) {\n    Object[] args = new Object[parameterNames.size()];\n    for (int i = 0; i < parameterNames.size(); i++) {\n      args[i] = getArg(argMap, i);\n    }\n    return format(args);\n  }\n","realPath":"core/src/main/java/org/apache/calcite/util/Template.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":222,"status":"M"}],"commitId":"d9a81b88ad561e7e4cedae93e805e0d7a53a7f1a","commitMessage":"@@@[CALCITE-4199] Add nullability annotations\n\nThe commit includes javadoc updates and refactorings made by Julian Hyde in https://github.com/apache/calcite/pull/2278\n","date":"2020-11-30 06:45:33","modifiedFileCount":"1012","status":"M","submitter":"Vladimir Sitnikov"}]
