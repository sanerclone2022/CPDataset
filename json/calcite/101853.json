[{"authorTime":"2017-07-25 05:05:45","codes":[{"authorDate":"2017-07-25 05:05:45","commitOrder":1,"curCode":"  private boolean isRolledUpColumnAllowedInAgg(SqlIdentifier identifier, SqlValidatorScope scope,\n                                               SqlCall aggCall, SqlNode parent) {\n    Pair<String, String> pair = findTableColumnPair(identifier, scope);\n\n    if (pair == null) {\n      return true;\n    }\n\n    String tableAlias = pair.left;\n    String columnName = pair.right;\n\n    Table table = findTable(tableAlias);\n    if (table != null) {\n      return table.rolledUpColumnValidInsideAgg(columnName, aggCall, parent,\n              catalogReader.getConfig());\n    }\n    return true;\n  }\n","date":"2017-08-17 05:36:32","endLine":3362,"groupId":"7262","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"isRolledUpColumnAllowedInAgg","params":"(SqlIdentifieridentifier@SqlValidatorScopescope@SqlCallaggCall@SqlNodeparent)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/97/12a25fc505f4c357febda1e3c8771613cb33cf.src","preCode":"  private boolean isRolledUpColumnAllowedInAgg(SqlIdentifier identifier, SqlValidatorScope scope,\n                                               SqlCall aggCall, SqlNode parent) {\n    Pair<String, String> pair = findTableColumnPair(identifier, scope);\n\n    if (pair == null) {\n      return true;\n    }\n\n    String tableAlias = pair.left;\n    String columnName = pair.right;\n\n    Table table = findTable(tableAlias);\n    if (table != null) {\n      return table.rolledUpColumnValidInsideAgg(columnName, aggCall, parent,\n              catalogReader.getConfig());\n    }\n    return true;\n  }\n","realPath":"core/src/main/java/org/apache/calcite/sql/validate/SqlValidatorImpl.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":3345,"status":"B"},{"authorDate":"2017-07-25 05:05:45","commitOrder":1,"curCode":"  private boolean isRolledUpColumn(SqlIdentifier identifier, SqlValidatorScope scope) {\n    Pair<String, String> pair = findTableColumnPair(identifier, scope);\n\n    if (pair == null) {\n      return false;\n    }\n\n    String tableAlias = pair.left;\n    String columnName = pair.right;\n\n    Table table = findTable(tableAlias);\n    if (table != null) {\n      return table.isRolledUp(columnName);\n    }\n    return false;\n  }\n","date":"2017-08-17 05:36:32","endLine":3381,"groupId":"4697","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"isRolledUpColumn","params":"(SqlIdentifieridentifier@SqlValidatorScopescope)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/97/12a25fc505f4c357febda1e3c8771613cb33cf.src","preCode":"  private boolean isRolledUpColumn(SqlIdentifier identifier, SqlValidatorScope scope) {\n    Pair<String, String> pair = findTableColumnPair(identifier, scope);\n\n    if (pair == null) {\n      return false;\n    }\n\n    String tableAlias = pair.left;\n    String columnName = pair.right;\n\n    Table table = findTable(tableAlias);\n    if (table != null) {\n      return table.isRolledUp(columnName);\n    }\n    return false;\n  }\n","realPath":"core/src/main/java/org/apache/calcite/sql/validate/SqlValidatorImpl.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":3366,"status":"B"}],"commitId":"025eaf118f820ce4659d3891b838aa01016e7012","commitMessage":"@@@[CALCITE-1787] Add ThetaSketch and HyperUnique support to Calcite via rolled up columns (Zain Humayun)\n\nClose apache/calcite#503\n","date":"2017-08-17 05:36:32","modifiedFileCount":"33","status":"B","submitter":"Zain Humayun"},{"authorTime":"2019-05-11 00:16:34","codes":[{"authorDate":"2019-05-11 00:16:34","commitOrder":2,"curCode":"  private boolean isRolledUpColumnAllowedInAgg(SqlIdentifier identifier, SqlValidatorScope scope,\n                                               SqlCall aggCall, SqlNode parent) {\n    Pair<String, String> pair = findTableColumnPair(identifier, scope);\n\n    if (pair == null) {\n      return true;\n    }\n\n    String columnName = pair.right;\n\n    SqlValidatorTable sqlValidatorTable =\n        scope.fullyQualify(identifier).namespace.getTable();\n    if (sqlValidatorTable != null) {\n      Table table = sqlValidatorTable.unwrap(Table.class);\n      return table.rolledUpColumnValidInsideAgg(columnName, aggCall, parent,\n          catalogReader.getConfig());\n    }\n    return true;\n  }\n","date":"2019-05-13 16:41:14","endLine":3530,"groupId":"7262","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"isRolledUpColumnAllowedInAgg","params":"(SqlIdentifieridentifier@SqlValidatorScopescope@SqlCallaggCall@SqlNodeparent)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/e2/a2e59bc5e7c56715b443589f99707d3b0446ab.src","preCode":"  private boolean isRolledUpColumnAllowedInAgg(SqlIdentifier identifier, SqlValidatorScope scope,\n                                               SqlCall aggCall, SqlNode parent) {\n    Pair<String, String> pair = findTableColumnPair(identifier, scope);\n\n    if (pair == null) {\n      return true;\n    }\n\n    String tableAlias = pair.left;\n    String columnName = pair.right;\n\n    Table table = findTable(tableAlias);\n    if (table != null) {\n      return table.rolledUpColumnValidInsideAgg(columnName, aggCall, parent,\n              catalogReader.getConfig());\n    }\n    return true;\n  }\n","realPath":"core/src/main/java/org/apache/calcite/sql/validate/SqlValidatorImpl.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":3512,"status":"M"},{"authorDate":"2019-05-11 00:16:34","commitOrder":2,"curCode":"  private boolean isRolledUpColumn(SqlIdentifier identifier, SqlValidatorScope scope) {\n    Pair<String, String> pair = findTableColumnPair(identifier, scope);\n\n    if (pair == null) {\n      return false;\n    }\n\n    String columnName = pair.right;\n\n    SqlValidatorTable sqlValidatorTable =\n        scope.fullyQualify(identifier).namespace.getTable();\n    if (sqlValidatorTable != null) {\n      Table table = sqlValidatorTable.unwrap(Table.class);\n      return table.isRolledUp(columnName);\n    }\n    return false;\n  }\n","date":"2019-05-13 16:41:14","endLine":3550,"groupId":"13341","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"isRolledUpColumn","params":"(SqlIdentifieridentifier@SqlValidatorScopescope)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/e2/a2e59bc5e7c56715b443589f99707d3b0446ab.src","preCode":"  private boolean isRolledUpColumn(SqlIdentifier identifier, SqlValidatorScope scope) {\n    Pair<String, String> pair = findTableColumnPair(identifier, scope);\n\n    if (pair == null) {\n      return false;\n    }\n\n    String tableAlias = pair.left;\n    String columnName = pair.right;\n\n    Table table = findTable(tableAlias);\n    if (table != null) {\n      return table.isRolledUp(columnName);\n    }\n    return false;\n  }\n","realPath":"core/src/main/java/org/apache/calcite/sql/validate/SqlValidatorImpl.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":3534,"status":"M"}],"commitId":"d0a06f78644906c2ca73e6fb5ea08f7d17f55dab","commitMessage":"@@@[CALCITE-3061] Query with WITH clause fails when alias is the same as the table with rolled up column\n\nClose #1206\n","date":"2019-05-13 16:41:14","modifiedFileCount":"3","status":"M","submitter":"Volodymyr Vysotskyi"},{"authorTime":"2020-05-29 00:04:40","codes":[{"authorDate":"2020-05-29 00:04:40","commitOrder":3,"curCode":"  private boolean isRolledUpColumnAllowedInAgg(SqlIdentifier identifier, SqlValidatorScope scope,\n      SqlCall aggCall, @Nullable SqlNode parent) {\n    Pair<String, String> pair = findTableColumnPair(identifier, scope);\n\n    if (pair == null) {\n      return true;\n    }\n\n    String columnName = pair.right;\n\n    Table table = resolveTable(identifier, scope);\n    if (table != null) {\n      return table.rolledUpColumnValidInsideAgg(columnName, aggCall, parent,\n          catalogReader.getConfig());\n    }\n    return true;\n  }\n","date":"2020-11-30 06:45:33","endLine":3768,"groupId":"101853","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"isRolledUpColumnAllowedInAgg","params":"(SqlIdentifieridentifier@SqlValidatorScopescope@SqlCallaggCall@@NullableSqlNodeparent)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/42/8f1d3a3f0cf3ef4a3ecc26bac058934422699c.src","preCode":"  private boolean isRolledUpColumnAllowedInAgg(SqlIdentifier identifier, SqlValidatorScope scope,\n      SqlCall aggCall, SqlNode parent) {\n    Pair<String, String> pair = findTableColumnPair(identifier, scope);\n\n    if (pair == null) {\n      return true;\n    }\n\n    String columnName = pair.right;\n\n    SqlValidatorTable sqlValidatorTable =\n        scope.fullyQualify(identifier).namespace.getTable();\n    if (sqlValidatorTable != null) {\n      Table table = sqlValidatorTable.unwrap(Table.class);\n      return table.rolledUpColumnValidInsideAgg(columnName, aggCall, parent,\n          catalogReader.getConfig());\n    }\n    return true;\n  }\n","realPath":"core/src/main/java/org/apache/calcite/sql/validate/SqlValidatorImpl.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":3752,"status":"M"},{"authorDate":"2020-05-29 00:04:40","commitOrder":3,"curCode":"  private boolean isRolledUpColumn(SqlIdentifier identifier, SqlValidatorScope scope) {\n    Pair<String, String> pair = findTableColumnPair(identifier, scope);\n\n    if (pair == null) {\n      return false;\n    }\n\n    String columnName = pair.right;\n\n    Table table = resolveTable(identifier, scope);\n    if (table != null) {\n      return table.isRolledUp(columnName);\n    }\n    return false;\n  }\n","date":"2020-11-30 06:45:33","endLine":3797,"groupId":"101853","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"isRolledUpColumn","params":"(SqlIdentifieridentifier@SqlValidatorScopescope)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/42/8f1d3a3f0cf3ef4a3ecc26bac058934422699c.src","preCode":"  private boolean isRolledUpColumn(SqlIdentifier identifier, SqlValidatorScope scope) {\n    Pair<String, String> pair = findTableColumnPair(identifier, scope);\n\n    if (pair == null) {\n      return false;\n    }\n\n    String columnName = pair.right;\n\n    SqlValidatorTable sqlValidatorTable =\n        scope.fullyQualify(identifier).namespace.getTable();\n    if (sqlValidatorTable != null) {\n      Table table = sqlValidatorTable.unwrap(Table.class);\n      return table.isRolledUp(columnName);\n    }\n    return false;\n  }\n","realPath":"core/src/main/java/org/apache/calcite/sql/validate/SqlValidatorImpl.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":3783,"status":"M"}],"commitId":"d9a81b88ad561e7e4cedae93e805e0d7a53a7f1a","commitMessage":"@@@[CALCITE-4199] Add nullability annotations\n\nThe commit includes javadoc updates and refactorings made by Julian Hyde in https://github.com/apache/calcite/pull/2278\n","date":"2020-11-30 06:45:33","modifiedFileCount":"1012","status":"M","submitter":"Vladimir Sitnikov"}]
