[{"authorTime":"2019-11-25 17:27:31","codes":[{"authorDate":"2019-11-25 17:27:31","commitOrder":1,"curCode":"  @Test public void testIntersect() {\n    \r\n    \r\n    \r\n    \r\n    final RelBuilder builder = builder();\n    RelNode rel =\n        builder.scan(\"DEPT\")\n            .project(builder.field(\"DEPTNO\"))\n            .scan(\"EMP\")\n            .project(builder.field(\"DEPTNO\"))\n            .intersect(true)\n            .build();\n    String expectedPhysial =\n        \"\"\n            + \"EnumerableIntersect(all=[true])\\n\"\n            + \"  EnumerableProject(DEPTNO=[$0])\\n\"\n            + \"    EnumerableTableScan(table=[[scott, DEPT]])\\n\"\n            + \"  EnumerableProject(DEPTNO=[$7])\\n\"\n            + \"    EnumerableTableScan(table=[[scott, EMP]])\\n\";\n    String expectedLogical =\n        \"\"\n            + \"LogicalIntersect(all=[true])\\n\"\n            + \"  LogicalProject(DEPTNO=[$0])\\n\"\n            + \"    LogicalTableScan(table=[[scott, DEPT]])\\n\"\n            + \"  LogicalProject(DEPTNO=[$7])\\n\"\n            + \"    LogicalTableScan(table=[[scott, EMP]])\\n\";\n    verify(rel, expectedPhysial, expectedLogical);\n  }\n","date":"2019-12-05 08:45:24","endLine":400,"groupId":"670","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testIntersect","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/f2/537658b7279f6e30f43841d63ad2ce34304670.src","preCode":"  @Test public void testIntersect() {\n    \r\n    \r\n    \r\n    \r\n    final RelBuilder builder = builder();\n    RelNode rel =\n        builder.scan(\"DEPT\")\n            .project(builder.field(\"DEPTNO\"))\n            .scan(\"EMP\")\n            .project(builder.field(\"DEPTNO\"))\n            .intersect(true)\n            .build();\n    String expectedPhysial =\n        \"\"\n            + \"EnumerableIntersect(all=[true])\\n\"\n            + \"  EnumerableProject(DEPTNO=[$0])\\n\"\n            + \"    EnumerableTableScan(table=[[scott, DEPT]])\\n\"\n            + \"  EnumerableProject(DEPTNO=[$7])\\n\"\n            + \"    EnumerableTableScan(table=[[scott, EMP]])\\n\";\n    String expectedLogical =\n        \"\"\n            + \"LogicalIntersect(all=[true])\\n\"\n            + \"  LogicalProject(DEPTNO=[$0])\\n\"\n            + \"    LogicalTableScan(table=[[scott, DEPT]])\\n\"\n            + \"  LogicalProject(DEPTNO=[$7])\\n\"\n            + \"    LogicalTableScan(table=[[scott, EMP]])\\n\";\n    verify(rel, expectedPhysial, expectedLogical);\n  }\n","realPath":"core/src/test/java/org/apache/calcite/rel/logical/ToLogicalConverterTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":372,"status":"B"},{"authorDate":"2019-11-25 17:27:31","commitOrder":1,"curCode":"  @Test public void testMinus() {\n    \r\n    \r\n    \r\n    \r\n    final RelBuilder builder = builder();\n    RelNode rel =\n        builder.scan(\"DEPT\")\n            .project(builder.field(\"DEPTNO\"))\n            .scan(\"EMP\")\n            .project(builder.field(\"DEPTNO\"))\n            .minus(true)\n            .build();\n    String expectedPhysial =\n        \"\"\n            + \"EnumerableMinus(all=[true])\\n\"\n            + \"  EnumerableProject(DEPTNO=[$0])\\n\"\n            + \"    EnumerableTableScan(table=[[scott, DEPT]])\\n\"\n            + \"  EnumerableProject(DEPTNO=[$7])\\n\"\n            + \"    EnumerableTableScan(table=[[scott, EMP]])\\n\";\n    String expectedLogical =\n        \"\"\n            + \"LogicalMinus(all=[true])\\n\"\n            + \"  LogicalProject(DEPTNO=[$0])\\n\"\n            + \"    LogicalTableScan(table=[[scott, DEPT]])\\n\"\n            + \"  LogicalProject(DEPTNO=[$7])\\n\"\n            + \"    LogicalTableScan(table=[[scott, EMP]])\\n\";\n    verify(rel, expectedPhysial, expectedLogical);\n  }\n","date":"2019-12-05 08:45:24","endLine":430,"groupId":"670","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testMinus","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/f2/537658b7279f6e30f43841d63ad2ce34304670.src","preCode":"  @Test public void testMinus() {\n    \r\n    \r\n    \r\n    \r\n    final RelBuilder builder = builder();\n    RelNode rel =\n        builder.scan(\"DEPT\")\n            .project(builder.field(\"DEPTNO\"))\n            .scan(\"EMP\")\n            .project(builder.field(\"DEPTNO\"))\n            .minus(true)\n            .build();\n    String expectedPhysial =\n        \"\"\n            + \"EnumerableMinus(all=[true])\\n\"\n            + \"  EnumerableProject(DEPTNO=[$0])\\n\"\n            + \"    EnumerableTableScan(table=[[scott, DEPT]])\\n\"\n            + \"  EnumerableProject(DEPTNO=[$7])\\n\"\n            + \"    EnumerableTableScan(table=[[scott, EMP]])\\n\";\n    String expectedLogical =\n        \"\"\n            + \"LogicalMinus(all=[true])\\n\"\n            + \"  LogicalProject(DEPTNO=[$0])\\n\"\n            + \"    LogicalTableScan(table=[[scott, DEPT]])\\n\"\n            + \"  LogicalProject(DEPTNO=[$7])\\n\"\n            + \"    LogicalTableScan(table=[[scott, EMP]])\\n\";\n    verify(rel, expectedPhysial, expectedLogical);\n  }\n","realPath":"core/src/test/java/org/apache/calcite/rel/logical/ToLogicalConverterTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":402,"status":"B"}],"commitId":"0aaf4f628ba145ed7299701ae20f0e723fd37142","commitMessage":"@@@[CALCITE-3566] EnumerableIntersect and EnumerableMinus convert to Logical (xzh_dz)\n","date":"2019-12-05 08:45:24","modifiedFileCount":"2","status":"B","submitter":"dz"},{"authorTime":"2020-01-23 04:53:15","codes":[{"authorDate":"2020-01-23 04:53:15","commitOrder":2,"curCode":"  @Test public void testIntersect() {\n    \r\n    \r\n    \r\n    \r\n    final RelBuilder builder = builder();\n    RelNode rel =\n        builder.scan(\"DEPT\")\n            .project(builder.field(\"DEPTNO\"))\n            .scan(\"EMP\")\n            .project(builder.field(\"DEPTNO\"))\n            .intersect(true)\n            .build();\n    String expectedPhysical = \"\"\n        + \"EnumerableIntersect(all=[true])\\n\"\n        + \"  EnumerableProject(DEPTNO=[$0])\\n\"\n        + \"    EnumerableTableScan(table=[[scott, DEPT]])\\n\"\n        + \"  EnumerableProject(DEPTNO=[$7])\\n\"\n        + \"    EnumerableTableScan(table=[[scott, EMP]])\\n\";\n    String expectedLogical = \"\"\n        + \"LogicalIntersect(all=[true])\\n\"\n        + \"  LogicalProject(DEPTNO=[$0])\\n\"\n        + \"    LogicalTableScan(table=[[scott, DEPT]])\\n\"\n        + \"  LogicalProject(DEPTNO=[$7])\\n\"\n        + \"    LogicalTableScan(table=[[scott, EMP]])\\n\";\n    verify(rel, expectedPhysical, expectedLogical);\n  }\n","date":"2020-01-30 07:35:36","endLine":380,"groupId":"670","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testIntersect","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/42/a647cd2e99e6f149f726162a1abdf956d925e2.src","preCode":"  @Test public void testIntersect() {\n    \r\n    \r\n    \r\n    \r\n    final RelBuilder builder = builder();\n    RelNode rel =\n        builder.scan(\"DEPT\")\n            .project(builder.field(\"DEPTNO\"))\n            .scan(\"EMP\")\n            .project(builder.field(\"DEPTNO\"))\n            .intersect(true)\n            .build();\n    String expectedPhysial =\n        \"\"\n            + \"EnumerableIntersect(all=[true])\\n\"\n            + \"  EnumerableProject(DEPTNO=[$0])\\n\"\n            + \"    EnumerableTableScan(table=[[scott, DEPT]])\\n\"\n            + \"  EnumerableProject(DEPTNO=[$7])\\n\"\n            + \"    EnumerableTableScan(table=[[scott, EMP]])\\n\";\n    String expectedLogical =\n        \"\"\n            + \"LogicalIntersect(all=[true])\\n\"\n            + \"  LogicalProject(DEPTNO=[$0])\\n\"\n            + \"    LogicalTableScan(table=[[scott, DEPT]])\\n\"\n            + \"  LogicalProject(DEPTNO=[$7])\\n\"\n            + \"    LogicalTableScan(table=[[scott, EMP]])\\n\";\n    verify(rel, expectedPhysial, expectedLogical);\n  }\n","realPath":"core/src/test/java/org/apache/calcite/rel/logical/ToLogicalConverterTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":354,"status":"M"},{"authorDate":"2020-01-23 04:53:15","commitOrder":2,"curCode":"  @Test public void testMinus() {\n    \r\n    \r\n    \r\n    \r\n    final RelBuilder builder = builder();\n    RelNode rel =\n        builder.scan(\"DEPT\")\n            .project(builder.field(\"DEPTNO\"))\n            .scan(\"EMP\")\n            .project(builder.field(\"DEPTNO\"))\n            .minus(true)\n            .build();\n    String expectedPhysical = \"\"\n        + \"EnumerableMinus(all=[true])\\n\"\n        + \"  EnumerableProject(DEPTNO=[$0])\\n\"\n        + \"    EnumerableTableScan(table=[[scott, DEPT]])\\n\"\n        + \"  EnumerableProject(DEPTNO=[$7])\\n\"\n        + \"    EnumerableTableScan(table=[[scott, EMP]])\\n\";\n    String expectedLogical = \"\"\n        + \"LogicalMinus(all=[true])\\n\"\n        + \"  LogicalProject(DEPTNO=[$0])\\n\"\n        + \"    LogicalTableScan(table=[[scott, DEPT]])\\n\"\n        + \"  LogicalProject(DEPTNO=[$7])\\n\"\n        + \"    LogicalTableScan(table=[[scott, EMP]])\\n\";\n    verify(rel, expectedPhysical, expectedLogical);\n  }\n","date":"2020-01-30 07:35:36","endLine":408,"groupId":"670","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testMinus","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/42/a647cd2e99e6f149f726162a1abdf956d925e2.src","preCode":"  @Test public void testMinus() {\n    \r\n    \r\n    \r\n    \r\n    final RelBuilder builder = builder();\n    RelNode rel =\n        builder.scan(\"DEPT\")\n            .project(builder.field(\"DEPTNO\"))\n            .scan(\"EMP\")\n            .project(builder.field(\"DEPTNO\"))\n            .minus(true)\n            .build();\n    String expectedPhysial =\n        \"\"\n            + \"EnumerableMinus(all=[true])\\n\"\n            + \"  EnumerableProject(DEPTNO=[$0])\\n\"\n            + \"    EnumerableTableScan(table=[[scott, DEPT]])\\n\"\n            + \"  EnumerableProject(DEPTNO=[$7])\\n\"\n            + \"    EnumerableTableScan(table=[[scott, EMP]])\\n\";\n    String expectedLogical =\n        \"\"\n            + \"LogicalMinus(all=[true])\\n\"\n            + \"  LogicalProject(DEPTNO=[$0])\\n\"\n            + \"    LogicalTableScan(table=[[scott, DEPT]])\\n\"\n            + \"  LogicalProject(DEPTNO=[$7])\\n\"\n            + \"    LogicalTableScan(table=[[scott, EMP]])\\n\";\n    verify(rel, expectedPhysial, expectedLogical);\n  }\n","realPath":"core/src/test/java/org/apache/calcite/rel/logical/ToLogicalConverterTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":382,"status":"M"}],"commitId":"3892bcd215724a697814426f26d7b8dcd77a4568","commitMessage":"@@@Trim trailing spaces in test SQL\n","date":"2020-01-30 07:35:36","modifiedFileCount":"22","status":"M","submitter":"Julian Hyde"},{"authorTime":"2020-04-02 10:39:10","codes":[{"authorDate":"2020-04-02 10:39:10","commitOrder":3,"curCode":"  @Test void testIntersect() {\n    \r\n    \r\n    \r\n    \r\n    final RelBuilder builder = builder();\n    RelNode rel =\n        builder.scan(\"DEPT\")\n            .project(builder.field(\"DEPTNO\"))\n            .scan(\"EMP\")\n            .project(builder.field(\"DEPTNO\"))\n            .intersect(true)\n            .build();\n    String expectedPhysical = \"\"\n        + \"EnumerableIntersect(all=[true])\\n\"\n        + \"  EnumerableProject(DEPTNO=[$0])\\n\"\n        + \"    EnumerableTableScan(table=[[scott, DEPT]])\\n\"\n        + \"  EnumerableProject(DEPTNO=[$7])\\n\"\n        + \"    EnumerableTableScan(table=[[scott, EMP]])\\n\";\n    String expectedLogical = \"\"\n        + \"LogicalIntersect(all=[true])\\n\"\n        + \"  LogicalProject(DEPTNO=[$0])\\n\"\n        + \"    LogicalTableScan(table=[[scott, DEPT]])\\n\"\n        + \"  LogicalProject(DEPTNO=[$7])\\n\"\n        + \"    LogicalTableScan(table=[[scott, EMP]])\\n\";\n    verify(rel, expectedPhysical, expectedLogical);\n  }\n","date":"2020-04-06 04:57:49","endLine":379,"groupId":"101487","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testIntersect","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/f4/afd7374de8cf43c006c123c7cc2225199e33b1.src","preCode":"  @Test public void testIntersect() {\n    \r\n    \r\n    \r\n    \r\n    final RelBuilder builder = builder();\n    RelNode rel =\n        builder.scan(\"DEPT\")\n            .project(builder.field(\"DEPTNO\"))\n            .scan(\"EMP\")\n            .project(builder.field(\"DEPTNO\"))\n            .intersect(true)\n            .build();\n    String expectedPhysical = \"\"\n        + \"EnumerableIntersect(all=[true])\\n\"\n        + \"  EnumerableProject(DEPTNO=[$0])\\n\"\n        + \"    EnumerableTableScan(table=[[scott, DEPT]])\\n\"\n        + \"  EnumerableProject(DEPTNO=[$7])\\n\"\n        + \"    EnumerableTableScan(table=[[scott, EMP]])\\n\";\n    String expectedLogical = \"\"\n        + \"LogicalIntersect(all=[true])\\n\"\n        + \"  LogicalProject(DEPTNO=[$0])\\n\"\n        + \"    LogicalTableScan(table=[[scott, DEPT]])\\n\"\n        + \"  LogicalProject(DEPTNO=[$7])\\n\"\n        + \"    LogicalTableScan(table=[[scott, EMP]])\\n\";\n    verify(rel, expectedPhysical, expectedLogical);\n  }\n","realPath":"core/src/test/java/org/apache/calcite/rel/logical/ToLogicalConverterTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":353,"status":"M"},{"authorDate":"2020-04-02 10:39:10","commitOrder":3,"curCode":"  @Test void testMinus() {\n    \r\n    \r\n    \r\n    \r\n    final RelBuilder builder = builder();\n    RelNode rel =\n        builder.scan(\"DEPT\")\n            .project(builder.field(\"DEPTNO\"))\n            .scan(\"EMP\")\n            .project(builder.field(\"DEPTNO\"))\n            .minus(true)\n            .build();\n    String expectedPhysical = \"\"\n        + \"EnumerableMinus(all=[true])\\n\"\n        + \"  EnumerableProject(DEPTNO=[$0])\\n\"\n        + \"    EnumerableTableScan(table=[[scott, DEPT]])\\n\"\n        + \"  EnumerableProject(DEPTNO=[$7])\\n\"\n        + \"    EnumerableTableScan(table=[[scott, EMP]])\\n\";\n    String expectedLogical = \"\"\n        + \"LogicalMinus(all=[true])\\n\"\n        + \"  LogicalProject(DEPTNO=[$0])\\n\"\n        + \"    LogicalTableScan(table=[[scott, DEPT]])\\n\"\n        + \"  LogicalProject(DEPTNO=[$7])\\n\"\n        + \"    LogicalTableScan(table=[[scott, EMP]])\\n\";\n    verify(rel, expectedPhysical, expectedLogical);\n  }\n","date":"2020-04-06 04:57:49","endLine":407,"groupId":"101487","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testMinus","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/f4/afd7374de8cf43c006c123c7cc2225199e33b1.src","preCode":"  @Test public void testMinus() {\n    \r\n    \r\n    \r\n    \r\n    final RelBuilder builder = builder();\n    RelNode rel =\n        builder.scan(\"DEPT\")\n            .project(builder.field(\"DEPTNO\"))\n            .scan(\"EMP\")\n            .project(builder.field(\"DEPTNO\"))\n            .minus(true)\n            .build();\n    String expectedPhysical = \"\"\n        + \"EnumerableMinus(all=[true])\\n\"\n        + \"  EnumerableProject(DEPTNO=[$0])\\n\"\n        + \"    EnumerableTableScan(table=[[scott, DEPT]])\\n\"\n        + \"  EnumerableProject(DEPTNO=[$7])\\n\"\n        + \"    EnumerableTableScan(table=[[scott, EMP]])\\n\";\n    String expectedLogical = \"\"\n        + \"LogicalMinus(all=[true])\\n\"\n        + \"  LogicalProject(DEPTNO=[$0])\\n\"\n        + \"    LogicalTableScan(table=[[scott, DEPT]])\\n\"\n        + \"  LogicalProject(DEPTNO=[$7])\\n\"\n        + \"    LogicalTableScan(table=[[scott, EMP]])\\n\";\n    verify(rel, expectedPhysical, expectedLogical);\n  }\n","realPath":"core/src/test/java/org/apache/calcite/rel/logical/ToLogicalConverterTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":381,"status":"M"}],"commitId":"9492dd4146f63ddc028010d6c4e86f6a5cb29a8d","commitMessage":"@@@[CALCITE-3892] Make junit test classes and methods non-public where possible\n\nPrior to junit 5.  classes and methods had to be public. This is no\nlonger the case.\n\nSome classes need to remain public because they are referenced from\nelsewhere.  or if they use reflection somehow. The remaining 'public'\nkeyword will be informative to maintainers.\n","date":"2020-04-06 04:57:49","modifiedFileCount":"196","status":"M","submitter":"Julian Hyde"}]
