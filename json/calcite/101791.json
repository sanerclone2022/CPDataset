[{"authorTime":"2021-01-01 19:27:09","codes":[{"authorDate":"2021-01-01 19:27:09","commitOrder":3,"curCode":"  SqlBasicAggFunction withDistinct(Optionality distinctOptionality) {\n    return new SqlBasicAggFunction(getName(), getSqlIdentifier(), kind,\n        getReturnTypeInference(), getOperandTypeInference(),\n        getOperandTypeChecker(), getFunctionType(), requiresOrder(),\n        requiresOver(), requiresGroupOrder(), distinctOptionality, syntax,\n        allowsNullTreatment, allowsSeparator);\n  }\n","date":"2021-01-17 05:38:22","endLine":135,"groupId":"3852","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"withDistinct","params":"(OptionalitydistinctOptionality)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/31/e3080e507008b17d2f498ef7379a85c37644fb.src","preCode":"  SqlBasicAggFunction withDistinct(Optionality distinctOptionality) {\n    return new SqlBasicAggFunction(getName(), getSqlIdentifier(), kind,\n        getReturnTypeInference(), getOperandTypeInference(),\n        getOperandTypeChecker(), getFunctionType(), requiresOrder(),\n        requiresOver(), requiresGroupOrder(), distinctOptionality, syntax,\n        allowsNullTreatment, allowsSeparator);\n  }\n","realPath":"core/src/main/java/org/apache/calcite/sql/fun/SqlBasicAggFunction.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":129,"status":"MB"},{"authorDate":"2021-01-01 19:27:09","commitOrder":3,"curCode":"  public SqlBasicAggFunction withGroupOrder(Optionality groupOrder) {\n    return new SqlBasicAggFunction(getName(), getSqlIdentifier(), kind,\n        getReturnTypeInference(), getOperandTypeInference(),\n        getOperandTypeChecker(), getFunctionType(), requiresOrder(),\n        requiresOver(), groupOrder, distinctOptionality, syntax,\n        allowsNullTreatment, allowsSeparator);\n  }\n","date":"2021-01-17 05:38:22","endLine":194,"groupId":"3852","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"withGroupOrder","params":"(OptionalitygroupOrder)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/31/e3080e507008b17d2f498ef7379a85c37644fb.src","preCode":"  public SqlBasicAggFunction withGroupOrder(Optionality groupOrder) {\n    return new SqlBasicAggFunction(getName(), getSqlIdentifier(), kind,\n        getReturnTypeInference(), getOperandTypeInference(),\n        getOperandTypeChecker(), getFunctionType(), requiresOrder(),\n        requiresOver(), groupOrder, distinctOptionality, syntax,\n        allowsNullTreatment, allowsSeparator);\n  }\n","realPath":"core/src/main/java/org/apache/calcite/sql/fun/SqlBasicAggFunction.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":188,"status":"B"}],"commitId":"f277a2468805999a446e5bcd0ef70aa1e9550562","commitMessage":"@@@[CALCITE-4349] GROUP_CONCAT aggregate function (MySQL's equivalent of LISTAGG)\n\nClose apache/calcite#2311\n","date":"2021-01-17 05:38:22","modifiedFileCount":"11","status":"M","submitter":"zhen wang"},{"authorTime":"2021-06-15 07:53:09","codes":[{"authorDate":"2021-06-15 07:53:09","commitOrder":4,"curCode":"  SqlBasicAggFunction withDistinct(Optionality distinctOptionality) {\n    return new SqlBasicAggFunction(getName(), getSqlIdentifier(), kind,\n        getReturnTypeInference(), getOperandTypeInference(),\n        getOperandTypeChecker(), getFunctionType(), requiresOrder(),\n        requiresOver(), requiresGroupOrder(), distinctOptionality, syntax,\n        allowsNullTreatment, allowsSeparator, percentile);\n  }\n","date":"2021-07-05 11:06:51","endLine":138,"groupId":"101791","id":3,"instanceNumber":1,"isCurCommit":1,"methodName":"withDistinct","params":"(OptionalitydistinctOptionality)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/54/b07254fa23f9da93a0398f43af5c0adc812562.src","preCode":"  SqlBasicAggFunction withDistinct(Optionality distinctOptionality) {\n    return new SqlBasicAggFunction(getName(), getSqlIdentifier(), kind,\n        getReturnTypeInference(), getOperandTypeInference(),\n        getOperandTypeChecker(), getFunctionType(), requiresOrder(),\n        requiresOver(), requiresGroupOrder(), distinctOptionality, syntax,\n        allowsNullTreatment, allowsSeparator);\n  }\n","realPath":"core/src/main/java/org/apache/calcite/sql/fun/SqlBasicAggFunction.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":132,"status":"M"},{"authorDate":"2021-06-15 07:53:09","commitOrder":4,"curCode":"  public SqlBasicAggFunction withGroupOrder(Optionality groupOrder) {\n    return new SqlBasicAggFunction(getName(), getSqlIdentifier(), kind,\n        getReturnTypeInference(), getOperandTypeInference(),\n        getOperandTypeChecker(), getFunctionType(), requiresOrder(),\n        requiresOver(), groupOrder, distinctOptionality, syntax,\n        allowsNullTreatment, allowsSeparator, percentile);\n  }\n","date":"2021-07-05 11:06:51","endLine":210,"groupId":"101791","id":4,"instanceNumber":2,"isCurCommit":1,"methodName":"withGroupOrder","params":"(OptionalitygroupOrder)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/54/b07254fa23f9da93a0398f43af5c0adc812562.src","preCode":"  public SqlBasicAggFunction withGroupOrder(Optionality groupOrder) {\n    return new SqlBasicAggFunction(getName(), getSqlIdentifier(), kind,\n        getReturnTypeInference(), getOperandTypeInference(),\n        getOperandTypeChecker(), getFunctionType(), requiresOrder(),\n        requiresOver(), groupOrder, distinctOptionality, syntax,\n        allowsNullTreatment, allowsSeparator);\n  }\n","realPath":"core/src/main/java/org/apache/calcite/sql/fun/SqlBasicAggFunction.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":204,"status":"M"}],"commitId":"85953ceb99e07b95129f4934797760a88709fcf6","commitMessage":"@@@[CALCITE-4644] Add PERCENTILE_CONT and PERCENTILE_DISC functions (Rafay)\n\nIn this change.  we can parse and validate those functions. \nbut execution will be [CALCITE-4666].\n\nValidation is based on new method SqlAggFunction.isPercentile()\n(experimental and subject to change without notice).\n\nThere are connections between the RANGE clause in windowed\naggregate functions and interpolation used by PERCENTILE_CONT.\nTherefore use the same logic to determine whether \"x\" is a\nvalid type in OVER (ORDER BY x RANGE r)\" and\n\"PERCENTILE_CONT(f) WITHIN GROUP (ORER BY x)\"\n\nClose apache/calcite#2444\n","date":"2021-07-05 11:06:51","modifiedFileCount":"14","status":"M","submitter":"Rafay"}]
