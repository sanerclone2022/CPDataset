[{"authorTime":"2014-11-14 09:39:29","codes":[{"authorDate":"2014-11-14 09:39:29","commitOrder":1,"curCode":"  @Test public void testIsNotUnknownOperator() {\n    tester.setFor(SqlStdOperatorTable.IS_NOT_UNKNOWN, VM_EXPAND);\n    tester.checkBoolean(\"false is not unknown\", Boolean.TRUE);\n    tester.checkBoolean(\"true is not unknown\", Boolean.TRUE);\n    tester.checkBoolean(\n        \"cast(null as boolean) is not unknown\",\n        Boolean.FALSE);\n    tester.checkBoolean(\"unknown is not unknown\", Boolean.FALSE);\n    tester.checkFails(\n        \"^'abc' IS NOT UNKNOWN^\",\n        \"(?s).*Cannot apply 'IS NOT UNKNOWN'.*\",\n        false);\n  }\n","date":"2014-11-14 09:39:34","endLine":2866,"groupId":"5709","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testIsNotUnknownOperator","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/c1/ce9911d6cdbc46441ce964a9cf5f40a7143e6e.src","preCode":"  @Test public void testIsNotUnknownOperator() {\n    tester.setFor(SqlStdOperatorTable.IS_NOT_UNKNOWN, VM_EXPAND);\n    tester.checkBoolean(\"false is not unknown\", Boolean.TRUE);\n    tester.checkBoolean(\"true is not unknown\", Boolean.TRUE);\n    tester.checkBoolean(\n        \"cast(null as boolean) is not unknown\",\n        Boolean.FALSE);\n    tester.checkBoolean(\"unknown is not unknown\", Boolean.FALSE);\n    tester.checkFails(\n        \"^'abc' IS NOT UNKNOWN^\",\n        \"(?s).*Cannot apply 'IS NOT UNKNOWN'.*\",\n        false);\n  }\n","realPath":"core/src/test/java/org/apache/calcite/sql/test/SqlOperatorBaseTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":2854,"status":"B"},{"authorDate":"2014-11-14 09:39:29","commitOrder":1,"curCode":"  @Test public void testIsUnknownOperator() {\n    tester.setFor(SqlStdOperatorTable.IS_UNKNOWN, VM_EXPAND);\n    tester.checkBoolean(\"false is unknown\", Boolean.FALSE);\n    tester.checkBoolean(\"true is unknown\", Boolean.FALSE);\n    tester.checkBoolean(\n        \"cast(null as boolean) is unknown\",\n        Boolean.TRUE);\n    tester.checkBoolean(\"unknown is unknown\", Boolean.TRUE);\n    tester.checkFails(\n        \"0 = 1 AND ^2 IS UNKNOWN^ AND 3 > 4\",\n        \"(?s).*Cannot apply 'IS UNKNOWN'.*\",\n        false);\n  }\n","date":"2014-11-14 09:39:34","endLine":2880,"groupId":"601","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testIsUnknownOperator","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/c1/ce9911d6cdbc46441ce964a9cf5f40a7143e6e.src","preCode":"  @Test public void testIsUnknownOperator() {\n    tester.setFor(SqlStdOperatorTable.IS_UNKNOWN, VM_EXPAND);\n    tester.checkBoolean(\"false is unknown\", Boolean.FALSE);\n    tester.checkBoolean(\"true is unknown\", Boolean.FALSE);\n    tester.checkBoolean(\n        \"cast(null as boolean) is unknown\",\n        Boolean.TRUE);\n    tester.checkBoolean(\"unknown is unknown\", Boolean.TRUE);\n    tester.checkFails(\n        \"0 = 1 AND ^2 IS UNKNOWN^ AND 3 > 4\",\n        \"(?s).*Cannot apply 'IS UNKNOWN'.*\",\n        false);\n  }\n","realPath":"core/src/test/java/org/apache/calcite/sql/test/SqlOperatorBaseTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":2868,"status":"B"}],"commitId":"a611d645ad754844a39f3d98f5f814f13dbd9404","commitMessage":"@@@[CALCITE-296] Re-organize package structure;\n[CALCITE-419] Naming convention for planner rules\n\nThis change only renames files (and deletes some obsolete files). There are no content changes.\n","date":"2014-11-14 09:39:34","modifiedFileCount":"0","status":"B","submitter":"Julian Hyde"},{"authorTime":"2020-04-02 10:39:10","codes":[{"authorDate":"2020-04-02 10:39:10","commitOrder":2,"curCode":"  @Test void testIsNotUnknownOperator() {\n    tester.setFor(SqlStdOperatorTable.IS_NOT_UNKNOWN, VM_EXPAND);\n    tester.checkBoolean(\"false is not unknown\", Boolean.TRUE);\n    tester.checkBoolean(\"true is not unknown\", Boolean.TRUE);\n    tester.checkBoolean(\n        \"cast(null as boolean) is not unknown\",\n        Boolean.FALSE);\n    tester.checkBoolean(\"unknown is not unknown\", Boolean.FALSE);\n    tester.checkFails(\n        \"^'abc' IS NOT UNKNOWN^\",\n        \"(?s).*Cannot apply 'IS NOT UNKNOWN'.*\",\n        false);\n  }\n","date":"2020-04-06 04:57:49","endLine":3613,"groupId":"10760","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testIsNotUnknownOperator","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/63/8682f250d7c070d5d126ca9e1e757179e57de4.src","preCode":"  @Test public void testIsNotUnknownOperator() {\n    tester.setFor(SqlStdOperatorTable.IS_NOT_UNKNOWN, VM_EXPAND);\n    tester.checkBoolean(\"false is not unknown\", Boolean.TRUE);\n    tester.checkBoolean(\"true is not unknown\", Boolean.TRUE);\n    tester.checkBoolean(\n        \"cast(null as boolean) is not unknown\",\n        Boolean.FALSE);\n    tester.checkBoolean(\"unknown is not unknown\", Boolean.FALSE);\n    tester.checkFails(\n        \"^'abc' IS NOT UNKNOWN^\",\n        \"(?s).*Cannot apply 'IS NOT UNKNOWN'.*\",\n        false);\n  }\n","realPath":"core/src/test/java/org/apache/calcite/sql/test/SqlOperatorBaseTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":3601,"status":"M"},{"authorDate":"2020-04-02 10:39:10","commitOrder":2,"curCode":"  @Test void testIsUnknownOperator() {\n    tester.setFor(SqlStdOperatorTable.IS_UNKNOWN, VM_EXPAND);\n    tester.checkBoolean(\"false is unknown\", Boolean.FALSE);\n    tester.checkBoolean(\"true is unknown\", Boolean.FALSE);\n    tester.checkBoolean(\n        \"cast(null as boolean) is unknown\",\n        Boolean.TRUE);\n    tester.checkBoolean(\"unknown is unknown\", Boolean.TRUE);\n    tester.checkFails(\n        \"0 = 1 AND ^2 IS UNKNOWN^ AND 3 > 4\",\n        \"(?s).*Cannot apply 'IS UNKNOWN'.*\",\n        false);\n  }\n","date":"2020-04-06 04:57:49","endLine":3627,"groupId":"10760","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testIsUnknownOperator","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/63/8682f250d7c070d5d126ca9e1e757179e57de4.src","preCode":"  @Test public void testIsUnknownOperator() {\n    tester.setFor(SqlStdOperatorTable.IS_UNKNOWN, VM_EXPAND);\n    tester.checkBoolean(\"false is unknown\", Boolean.FALSE);\n    tester.checkBoolean(\"true is unknown\", Boolean.FALSE);\n    tester.checkBoolean(\n        \"cast(null as boolean) is unknown\",\n        Boolean.TRUE);\n    tester.checkBoolean(\"unknown is unknown\", Boolean.TRUE);\n    tester.checkFails(\n        \"0 = 1 AND ^2 IS UNKNOWN^ AND 3 > 4\",\n        \"(?s).*Cannot apply 'IS UNKNOWN'.*\",\n        false);\n  }\n","realPath":"core/src/test/java/org/apache/calcite/sql/test/SqlOperatorBaseTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":3615,"status":"M"}],"commitId":"9492dd4146f63ddc028010d6c4e86f6a5cb29a8d","commitMessage":"@@@[CALCITE-3892] Make junit test classes and methods non-public where possible\n\nPrior to junit 5.  classes and methods had to be public. This is no\nlonger the case.\n\nSome classes need to remain public because they are referenced from\nelsewhere.  or if they use reflection somehow. The remaining 'public'\nkeyword will be informative to maintainers.\n","date":"2020-04-06 04:57:49","modifiedFileCount":"196","status":"M","submitter":"Julian Hyde"}]
