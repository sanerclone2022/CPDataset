[{"authorTime":"2014-11-14 09:39:29","codes":[{"authorDate":"2014-11-14 09:39:29","commitOrder":1,"curCode":"  public void validateDelete(SqlDelete call) {\n    SqlSelect sqlSelect = call.getSourceSelect();\n    validateSelect(sqlSelect, unknownType);\n\n    IdentifierNamespace targetNamespace =\n        getNamespace(call.getTargetTable()).unwrap(\n            IdentifierNamespace.class);\n    validateNamespace(targetNamespace);\n    SqlValidatorTable table = targetNamespace.getTable();\n\n    validateAccess(call.getTargetTable(), table, SqlAccessEnum.DELETE);\n  }\n","date":"2014-11-14 09:39:34","endLine":3371,"groupId":"5404","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"validateDelete","params":"(SqlDeletecall)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/63/1ccf694b0fa39fe974ed5163c5f3d6b0ceb7c9.src","preCode":"  public void validateDelete(SqlDelete call) {\n    SqlSelect sqlSelect = call.getSourceSelect();\n    validateSelect(sqlSelect, unknownType);\n\n    IdentifierNamespace targetNamespace =\n        getNamespace(call.getTargetTable()).unwrap(\n            IdentifierNamespace.class);\n    validateNamespace(targetNamespace);\n    SqlValidatorTable table = targetNamespace.getTable();\n\n    validateAccess(call.getTargetTable(), table, SqlAccessEnum.DELETE);\n  }\n","realPath":"core/src/main/java/org/apache/calcite/sql/validate/SqlValidatorImpl.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":3360,"status":"B"},{"authorDate":"2014-11-14 09:39:29","commitOrder":1,"curCode":"  public void validateUpdate(SqlUpdate call) {\n    IdentifierNamespace targetNamespace =\n        getNamespace(call.getTargetTable()).unwrap(\n            IdentifierNamespace.class);\n    validateNamespace(targetNamespace);\n    SqlValidatorTable table = targetNamespace.getTable();\n\n    RelDataType targetRowType =\n        createTargetRowType(\n            table,\n            call.getTargetColumnList(),\n            true);\n\n    SqlSelect select = call.getSourceSelect();\n    validateSelect(select, targetRowType);\n\n    RelDataType sourceRowType = getNamespace(select).getRowType();\n    checkTypeAssignment(sourceRowType, targetRowType, call);\n\n    validateAccess(call.getTargetTable(), table, SqlAccessEnum.UPDATE);\n  }\n","date":"2014-11-14 09:39:34","endLine":3393,"groupId":"14916","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"validateUpdate","params":"(SqlUpdatecall)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/63/1ccf694b0fa39fe974ed5163c5f3d6b0ceb7c9.src","preCode":"  public void validateUpdate(SqlUpdate call) {\n    IdentifierNamespace targetNamespace =\n        getNamespace(call.getTargetTable()).unwrap(\n            IdentifierNamespace.class);\n    validateNamespace(targetNamespace);\n    SqlValidatorTable table = targetNamespace.getTable();\n\n    RelDataType targetRowType =\n        createTargetRowType(\n            table,\n            call.getTargetColumnList(),\n            true);\n\n    SqlSelect select = call.getSourceSelect();\n    validateSelect(select, targetRowType);\n\n    RelDataType sourceRowType = getNamespace(select).getRowType();\n    checkTypeAssignment(sourceRowType, targetRowType, call);\n\n    validateAccess(call.getTargetTable(), table, SqlAccessEnum.UPDATE);\n  }\n","realPath":"core/src/main/java/org/apache/calcite/sql/validate/SqlValidatorImpl.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":3373,"status":"B"}],"commitId":"a611d645ad754844a39f3d98f5f814f13dbd9404","commitMessage":"@@@[CALCITE-296] Re-organize package structure;\n[CALCITE-419] Naming convention for planner rules\n\nThis change only renames files (and deletes some obsolete files). There are no content changes.\n","date":"2014-11-14 09:39:34","modifiedFileCount":"0","status":"B","submitter":"Julian Hyde"},{"authorTime":"2016-05-18 10:05:34","codes":[{"authorDate":"2016-05-18 10:05:34","commitOrder":2,"curCode":"  public void validateDelete(SqlDelete call) {\n    SqlSelect sqlSelect = call.getSourceSelect();\n    validateSelect(sqlSelect, unknownType);\n\n    IdentifierNamespace targetNamespace =\n        getNamespace(call.getTargetTable()).unwrap(\n            IdentifierNamespace.class);\n    validateNamespace(targetNamespace, unknownType);\n    SqlValidatorTable table = targetNamespace.getTable();\n\n    validateAccess(call.getTargetTable(), table, SqlAccessEnum.DELETE);\n  }\n","date":"2016-05-23 03:46:46","endLine":3827,"groupId":"5404","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"validateDelete","params":"(SqlDeletecall)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/95/51a16d826d0b63d44a4cfca155f605eba499c0.src","preCode":"  public void validateDelete(SqlDelete call) {\n    SqlSelect sqlSelect = call.getSourceSelect();\n    validateSelect(sqlSelect, unknownType);\n\n    IdentifierNamespace targetNamespace =\n        getNamespace(call.getTargetTable()).unwrap(\n            IdentifierNamespace.class);\n    validateNamespace(targetNamespace);\n    SqlValidatorTable table = targetNamespace.getTable();\n\n    validateAccess(call.getTargetTable(), table, SqlAccessEnum.DELETE);\n  }\n","realPath":"core/src/main/java/org/apache/calcite/sql/validate/SqlValidatorImpl.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":3816,"status":"M"},{"authorDate":"2016-05-18 10:05:34","commitOrder":2,"curCode":"  public void validateUpdate(SqlUpdate call) {\n    IdentifierNamespace targetNamespace =\n        getNamespace(call.getTargetTable()).unwrap(\n            IdentifierNamespace.class);\n    validateNamespace(targetNamespace, unknownType);\n    SqlValidatorTable table = targetNamespace.getTable();\n\n    RelDataType targetRowType =\n        createTargetRowType(\n            table,\n            call.getTargetColumnList(),\n            true);\n\n    SqlSelect select = call.getSourceSelect();\n    validateSelect(select, targetRowType);\n\n    RelDataType sourceRowType = getNamespace(select).getRowType();\n    checkTypeAssignment(sourceRowType, targetRowType, call);\n\n    validateAccess(call.getTargetTable(), table, SqlAccessEnum.UPDATE);\n  }\n","date":"2016-05-23 03:46:46","endLine":3849,"groupId":"14916","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"validateUpdate","params":"(SqlUpdatecall)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/95/51a16d826d0b63d44a4cfca155f605eba499c0.src","preCode":"  public void validateUpdate(SqlUpdate call) {\n    IdentifierNamespace targetNamespace =\n        getNamespace(call.getTargetTable()).unwrap(\n            IdentifierNamespace.class);\n    validateNamespace(targetNamespace);\n    SqlValidatorTable table = targetNamespace.getTable();\n\n    RelDataType targetRowType =\n        createTargetRowType(\n            table,\n            call.getTargetColumnList(),\n            true);\n\n    SqlSelect select = call.getSourceSelect();\n    validateSelect(select, targetRowType);\n\n    RelDataType sourceRowType = getNamespace(select).getRowType();\n    checkTypeAssignment(sourceRowType, targetRowType, call);\n\n    validateAccess(call.getTargetTable(), table, SqlAccessEnum.UPDATE);\n  }\n","realPath":"core/src/main/java/org/apache/calcite/sql/validate/SqlValidatorImpl.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":3829,"status":"M"}],"commitId":"f191a386aedaee05c6ffcc1d4b155193bfa4ca01","commitMessage":"@@@[CALCITE-1228] Bind parameters in INSERT\n\nDeduce number and types of bind parameters for all DML statements.  in\nvalidator and in simple JDBC tests.\n\nAlso infer types of bind parameters in other kinds of query.\n","date":"2016-05-23 03:46:46","modifiedFileCount":"32","status":"M","submitter":"Julian Hyde"},{"authorTime":"2017-03-02 15:43:18","codes":[{"authorDate":"2016-05-18 10:05:34","commitOrder":3,"curCode":"  public void validateDelete(SqlDelete call) {\n    SqlSelect sqlSelect = call.getSourceSelect();\n    validateSelect(sqlSelect, unknownType);\n\n    IdentifierNamespace targetNamespace =\n        getNamespace(call.getTargetTable()).unwrap(\n            IdentifierNamespace.class);\n    validateNamespace(targetNamespace, unknownType);\n    SqlValidatorTable table = targetNamespace.getTable();\n\n    validateAccess(call.getTargetTable(), table, SqlAccessEnum.DELETE);\n  }\n","date":"2016-05-23 03:46:46","endLine":3827,"groupId":"5404","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"validateDelete","params":"(SqlDeletecall)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/95/51a16d826d0b63d44a4cfca155f605eba499c0.src","preCode":"  public void validateDelete(SqlDelete call) {\n    SqlSelect sqlSelect = call.getSourceSelect();\n    validateSelect(sqlSelect, unknownType);\n\n    IdentifierNamespace targetNamespace =\n        getNamespace(call.getTargetTable()).unwrap(\n            IdentifierNamespace.class);\n    validateNamespace(targetNamespace, unknownType);\n    SqlValidatorTable table = targetNamespace.getTable();\n\n    validateAccess(call.getTargetTable(), table, SqlAccessEnum.DELETE);\n  }\n","realPath":"core/src/main/java/org/apache/calcite/sql/validate/SqlValidatorImpl.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":3816,"status":"N"},{"authorDate":"2017-03-02 15:43:18","commitOrder":3,"curCode":"  public void validateUpdate(SqlUpdate call) {\n    IdentifierNamespace targetNamespace =\n        getNamespace(call.getTargetTable()).unwrap(\n            IdentifierNamespace.class);\n    validateNamespace(targetNamespace, unknownType);\n    SqlValidatorTable table = targetNamespace.getTable();\n\n    RelDataType targetRowType =\n        createTargetRowType(\n            table,\n            call.getTargetColumnList(),\n            true);\n\n    SqlSelect select = call.getSourceSelect();\n    validateSelect(select, targetRowType);\n\n    RelDataType sourceRowType = getNamespace(select).getRowType();\n    checkTypeAssignment(sourceRowType, targetRowType, call);\n\n    checkConstraint(table, call, targetRowType);\n\n    validateAccess(call.getTargetTable(), table, SqlAccessEnum.UPDATE);\n  }\n","date":"2017-03-15 12:42:13","endLine":4187,"groupId":"14916","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"validateUpdate","params":"(SqlUpdatecall)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/ad/2d4c1314ea286a5138d2f12d25b205333a5912.src","preCode":"  public void validateUpdate(SqlUpdate call) {\n    IdentifierNamespace targetNamespace =\n        getNamespace(call.getTargetTable()).unwrap(\n            IdentifierNamespace.class);\n    validateNamespace(targetNamespace, unknownType);\n    SqlValidatorTable table = targetNamespace.getTable();\n\n    RelDataType targetRowType =\n        createTargetRowType(\n            table,\n            call.getTargetColumnList(),\n            true);\n\n    SqlSelect select = call.getSourceSelect();\n    validateSelect(select, targetRowType);\n\n    RelDataType sourceRowType = getNamespace(select).getRowType();\n    checkTypeAssignment(sourceRowType, targetRowType, call);\n\n    validateAccess(call.getTargetTable(), table, SqlAccessEnum.UPDATE);\n  }\n","realPath":"core/src/main/java/org/apache/calcite/sql/validate/SqlValidatorImpl.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":4165,"status":"M"}],"commitId":"e0a1f7d3069f0eefeb8bdd411a250cd1fb0532f3","commitMessage":"@@@[CALCITE-1666] Support for modifiable views with extended columns (Kevin Liew)\n\n[CALCITE-504] Support EXTEND clause (to declare extra columns) in CREATE VIEW\n\nClose apache/calcite#386\n","date":"2017-03-15 12:42:13","modifiedFileCount":"24","status":"M","submitter":"kliewkliew"},{"authorTime":"2017-03-29 12:29:27","codes":[{"authorDate":"2017-03-29 12:29:27","commitOrder":4,"curCode":"  public void validateDelete(SqlDelete call) {\n    final SqlSelect sqlSelect = call.getSourceSelect();\n    validateSelect(sqlSelect, unknownType);\n\n    final SqlValidatorNamespace targetNamespace = getNamespace(call);\n    validateNamespace(targetNamespace, unknownType);\n    final SqlValidatorTable table = targetNamespace.getTable();\n\n    validateAccess(call.getTargetTable(), table, SqlAccessEnum.DELETE);\n  }\n","date":"2017-03-30 15:33:30","endLine":4168,"groupId":"5404","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"validateDelete","params":"(SqlDeletecall)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/6e/3d0175a11fd4db73a91e2164b6ae5f3a483443.src","preCode":"  public void validateDelete(SqlDelete call) {\n    SqlSelect sqlSelect = call.getSourceSelect();\n    validateSelect(sqlSelect, unknownType);\n\n    IdentifierNamespace targetNamespace =\n        getNamespace(call.getTargetTable()).unwrap(\n            IdentifierNamespace.class);\n    validateNamespace(targetNamespace, unknownType);\n    SqlValidatorTable table = targetNamespace.getTable();\n\n    validateAccess(call.getTargetTable(), table, SqlAccessEnum.DELETE);\n  }\n","realPath":"core/src/main/java/org/apache/calcite/sql/validate/SqlValidatorImpl.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":4159,"status":"M"},{"authorDate":"2017-03-29 12:29:27","commitOrder":4,"curCode":"  public void validateUpdate(SqlUpdate call) {\n    final SqlValidatorNamespace targetNamespace = getNamespace(call);\n    validateNamespace(targetNamespace, unknownType);\n    final RelOptTable relOptTable = SqlValidatorUtil.getRelOptTable(\n        targetNamespace, catalogReader.unwrap(Prepare.CatalogReader.class), null, null);\n    final SqlValidatorTable table = relOptTable == null\n        ? targetNamespace.getTable()\n        : relOptTable.unwrap(SqlValidatorTable.class);\n\n    final RelDataType targetRowType =\n        createTargetRowType(\n            table,\n            call.getTargetColumnList(),\n            true);\n\n    final SqlSelect select = call.getSourceSelect();\n    validateSelect(select, targetRowType);\n\n    final RelDataType sourceRowType = getNamespace(call).getRowType();\n    checkTypeAssignment(sourceRowType, targetRowType, call);\n\n    checkConstraint(table, call, targetRowType);\n\n    validateAccess(call.getTargetTable(), table, SqlAccessEnum.UPDATE);\n  }\n","date":"2017-03-30 15:33:30","endLine":4194,"groupId":"8374","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"validateUpdate","params":"(SqlUpdatecall)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/6e/3d0175a11fd4db73a91e2164b6ae5f3a483443.src","preCode":"  public void validateUpdate(SqlUpdate call) {\n    IdentifierNamespace targetNamespace =\n        getNamespace(call.getTargetTable()).unwrap(\n            IdentifierNamespace.class);\n    validateNamespace(targetNamespace, unknownType);\n    SqlValidatorTable table = targetNamespace.getTable();\n\n    RelDataType targetRowType =\n        createTargetRowType(\n            table,\n            call.getTargetColumnList(),\n            true);\n\n    SqlSelect select = call.getSourceSelect();\n    validateSelect(select, targetRowType);\n\n    RelDataType sourceRowType = getNamespace(select).getRowType();\n    checkTypeAssignment(sourceRowType, targetRowType, call);\n\n    checkConstraint(table, call, targetRowType);\n\n    validateAccess(call.getTargetTable(), table, SqlAccessEnum.UPDATE);\n  }\n","realPath":"core/src/main/java/org/apache/calcite/sql/validate/SqlValidatorImpl.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":4170,"status":"M"}],"commitId":"8a1a287ded230138390f859584fa8f847d9e7a0f","commitMessage":"@@@[CALCITE-1702] Support extended columns in DML (Kevin Liew)\n\nClose apache/calcite#408\n","date":"2017-03-30 15:33:30","modifiedFileCount":"21","status":"M","submitter":"kliewkliew"},{"authorTime":"2020-01-03 19:10:59","codes":[{"authorDate":"2017-03-29 12:29:27","commitOrder":5,"curCode":"  public void validateDelete(SqlDelete call) {\n    final SqlSelect sqlSelect = call.getSourceSelect();\n    validateSelect(sqlSelect, unknownType);\n\n    final SqlValidatorNamespace targetNamespace = getNamespace(call);\n    validateNamespace(targetNamespace, unknownType);\n    final SqlValidatorTable table = targetNamespace.getTable();\n\n    validateAccess(call.getTargetTable(), table, SqlAccessEnum.DELETE);\n  }\n","date":"2017-03-30 15:33:30","endLine":4168,"groupId":"5404","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"validateDelete","params":"(SqlDeletecall)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/6e/3d0175a11fd4db73a91e2164b6ae5f3a483443.src","preCode":"  public void validateDelete(SqlDelete call) {\n    final SqlSelect sqlSelect = call.getSourceSelect();\n    validateSelect(sqlSelect, unknownType);\n\n    final SqlValidatorNamespace targetNamespace = getNamespace(call);\n    validateNamespace(targetNamespace, unknownType);\n    final SqlValidatorTable table = targetNamespace.getTable();\n\n    validateAccess(call.getTargetTable(), table, SqlAccessEnum.DELETE);\n  }\n","realPath":"core/src/main/java/org/apache/calcite/sql/validate/SqlValidatorImpl.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":4159,"status":"N"},{"authorDate":"2020-01-03 19:10:59","commitOrder":5,"curCode":"  public void validateUpdate(SqlUpdate call) {\n    final SqlValidatorNamespace targetNamespace = getNamespace(call);\n    validateNamespace(targetNamespace, unknownType);\n    final RelOptTable relOptTable = SqlValidatorUtil.getRelOptTable(\n        targetNamespace, catalogReader.unwrap(Prepare.CatalogReader.class), null, null);\n    final SqlValidatorTable table = relOptTable == null\n        ? targetNamespace.getTable()\n        : relOptTable.unwrap(SqlValidatorTable.class);\n\n    final RelDataType targetRowType =\n        createTargetRowType(\n            table,\n            call.getTargetColumnList(),\n            true);\n\n    final SqlSelect select = call.getSourceSelect();\n    validateSelect(select, targetRowType);\n\n    final RelDataType sourceRowType = getValidatedNodeType(select);\n    checkTypeAssignment(scopes.get(select),\n        table,\n        sourceRowType,\n        targetRowType,\n        call);\n\n    checkConstraint(table, call, targetRowType);\n\n    validateAccess(call.getTargetTable(), table, SqlAccessEnum.UPDATE);\n  }\n","date":"2020-01-05 11:16:19","endLine":4790,"groupId":"10285","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"validateUpdate","params":"(SqlUpdatecall)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/ed/a842c9e4de8c7ea261781862093b840bdbb44e.src","preCode":"  public void validateUpdate(SqlUpdate call) {\n    final SqlValidatorNamespace targetNamespace = getNamespace(call);\n    validateNamespace(targetNamespace, unknownType);\n    final RelOptTable relOptTable = SqlValidatorUtil.getRelOptTable(\n        targetNamespace, catalogReader.unwrap(Prepare.CatalogReader.class), null, null);\n    final SqlValidatorTable table = relOptTable == null\n        ? targetNamespace.getTable()\n        : relOptTable.unwrap(SqlValidatorTable.class);\n\n    final RelDataType targetRowType =\n        createTargetRowType(\n            table,\n            call.getTargetColumnList(),\n            true);\n\n    final SqlSelect select = call.getSourceSelect();\n    validateSelect(select, targetRowType);\n\n    final RelDataType sourceRowType = getNamespace(call).getRowType();\n    checkTypeAssignment(sourceRowType, targetRowType, call);\n\n    checkConstraint(table, call, targetRowType);\n\n    validateAccess(call.getTargetTable(), table, SqlAccessEnum.UPDATE);\n  }\n","realPath":"core/src/main/java/org/apache/calcite/sql/validate/SqlValidatorImpl.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":4762,"status":"M"}],"commitId":"5e4d3967fc2f1c14ccf59c521054cfd4fe1e5b54","commitMessage":"@@@[CALCITE-3672] Support implicit type coercion for insert and update\n\n* Add implicit type coercion to insert and update validaiton\n* Change the plan according to the change\n* Remove useless methods in AbstractTypeCoercion\n* Modify AbstractTypeCoercion#needToCast to allow implicit type coercion\nfor two types with same type name but different precision/scale(exclude\nCHARACTER types).\n","date":"2020-01-05 11:16:19","modifiedFileCount":"14","status":"M","submitter":"yuzhao.cyz"},{"authorTime":"2020-09-29 22:09:05","codes":[{"authorDate":"2020-09-29 22:09:05","commitOrder":6,"curCode":"  @Override public void validateDelete(SqlDelete call) {\n    final SqlSelect sqlSelect = call.getSourceSelect();\n    validateSelect(sqlSelect, unknownType);\n\n    final SqlValidatorNamespace targetNamespace = getNamespace(call);\n    validateNamespace(targetNamespace, unknownType);\n    final SqlValidatorTable table = targetNamespace.getTable();\n\n    validateAccess(call.getTargetTable(), table, SqlAccessEnum.DELETE);\n  }\n","date":"2020-10-07 05:42:47","endLine":4772,"groupId":"5404","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"validateDelete","params":"(SqlDeletecall)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/1d/e2f640194abdd8d51f339bd04507320c8175bc.src","preCode":"  public void validateDelete(SqlDelete call) {\n    final SqlSelect sqlSelect = call.getSourceSelect();\n    validateSelect(sqlSelect, unknownType);\n\n    final SqlValidatorNamespace targetNamespace = getNamespace(call);\n    validateNamespace(targetNamespace, unknownType);\n    final SqlValidatorTable table = targetNamespace.getTable();\n\n    validateAccess(call.getTargetTable(), table, SqlAccessEnum.DELETE);\n  }\n","realPath":"core/src/main/java/org/apache/calcite/sql/validate/SqlValidatorImpl.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":4763,"status":"M"},{"authorDate":"2020-09-29 22:09:05","commitOrder":6,"curCode":"  @Override public void validateUpdate(SqlUpdate call) {\n    final SqlValidatorNamespace targetNamespace = getNamespace(call);\n    validateNamespace(targetNamespace, unknownType);\n    final RelOptTable relOptTable = SqlValidatorUtil.getRelOptTable(\n        targetNamespace, catalogReader.unwrap(Prepare.CatalogReader.class), null, null);\n    final SqlValidatorTable table = relOptTable == null\n        ? targetNamespace.getTable()\n        : relOptTable.unwrap(SqlValidatorTable.class);\n\n    final RelDataType targetRowType =\n        createTargetRowType(\n            table,\n            call.getTargetColumnList(),\n            true);\n\n    final SqlSelect select = call.getSourceSelect();\n    validateSelect(select, targetRowType);\n\n    final RelDataType sourceRowType = getValidatedNodeType(select);\n    checkTypeAssignment(scopes.get(select),\n        table,\n        sourceRowType,\n        targetRowType,\n        call);\n\n    checkConstraint(table, call, targetRowType);\n\n    validateAccess(call.getTargetTable(), table, SqlAccessEnum.UPDATE);\n  }\n","date":"2020-10-07 05:42:47","endLine":4802,"groupId":"10285","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"validateUpdate","params":"(SqlUpdatecall)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/1d/e2f640194abdd8d51f339bd04507320c8175bc.src","preCode":"  public void validateUpdate(SqlUpdate call) {\n    final SqlValidatorNamespace targetNamespace = getNamespace(call);\n    validateNamespace(targetNamespace, unknownType);\n    final RelOptTable relOptTable = SqlValidatorUtil.getRelOptTable(\n        targetNamespace, catalogReader.unwrap(Prepare.CatalogReader.class), null, null);\n    final SqlValidatorTable table = relOptTable == null\n        ? targetNamespace.getTable()\n        : relOptTable.unwrap(SqlValidatorTable.class);\n\n    final RelDataType targetRowType =\n        createTargetRowType(\n            table,\n            call.getTargetColumnList(),\n            true);\n\n    final SqlSelect select = call.getSourceSelect();\n    validateSelect(select, targetRowType);\n\n    final RelDataType sourceRowType = getValidatedNodeType(select);\n    checkTypeAssignment(scopes.get(select),\n        table,\n        sourceRowType,\n        targetRowType,\n        call);\n\n    checkConstraint(table, call, targetRowType);\n\n    validateAccess(call.getTargetTable(), table, SqlAccessEnum.UPDATE);\n  }\n","realPath":"core/src/main/java/org/apache/calcite/sql/validate/SqlValidatorImpl.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":4774,"status":"M"}],"commitId":"66caa54c5e272f8287ca132ca012733898a38768","commitMessage":"@@@[CALCITE-4314] Add missing @Override annotations\n","date":"2020-10-07 05:42:47","modifiedFileCount":"745","status":"M","submitter":"Vladimir Sitnikov"},{"authorTime":"2020-05-29 00:04:40","codes":[{"authorDate":"2020-05-29 00:04:40","commitOrder":7,"curCode":"  @Override public void validateDelete(SqlDelete call) {\n    final SqlSelect sqlSelect = SqlNonNullableAccessors.getSourceSelect(call);\n    validateSelect(sqlSelect, unknownType);\n\n    final SqlValidatorNamespace targetNamespace = getNamespaceOrThrow(call);\n    validateNamespace(targetNamespace, unknownType);\n    final SqlValidatorTable table = targetNamespace.getTable();\n\n    validateAccess(call.getTargetTable(), table, SqlAccessEnum.DELETE);\n  }\n","date":"2020-11-30 06:45:33","endLine":4949,"groupId":"101854","id":13,"instanceNumber":1,"isCurCommit":0,"methodName":"validateDelete","params":"(SqlDeletecall)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/42/8f1d3a3f0cf3ef4a3ecc26bac058934422699c.src","preCode":"  @Override public void validateDelete(SqlDelete call) {\n    final SqlSelect sqlSelect = call.getSourceSelect();\n    validateSelect(sqlSelect, unknownType);\n\n    final SqlValidatorNamespace targetNamespace = getNamespace(call);\n    validateNamespace(targetNamespace, unknownType);\n    final SqlValidatorTable table = targetNamespace.getTable();\n\n    validateAccess(call.getTargetTable(), table, SqlAccessEnum.DELETE);\n  }\n","realPath":"core/src/main/java/org/apache/calcite/sql/validate/SqlValidatorImpl.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":4940,"status":"M"},{"authorDate":"2020-05-29 00:04:40","commitOrder":7,"curCode":"  @Override public void validateUpdate(SqlUpdate call) {\n    final SqlValidatorNamespace targetNamespace = getNamespaceOrThrow(call);\n    validateNamespace(targetNamespace, unknownType);\n    final RelOptTable relOptTable = SqlValidatorUtil.getRelOptTable(\n        targetNamespace, castNonNull(catalogReader.unwrap(Prepare.CatalogReader.class)),\n        null, null);\n    final SqlValidatorTable table = relOptTable == null\n        ? getTable(targetNamespace)\n        : relOptTable.unwrapOrThrow(SqlValidatorTable.class);\n\n    final RelDataType targetRowType =\n        createTargetRowType(\n            table,\n            call.getTargetColumnList(),\n            true);\n\n    final SqlSelect select = SqlNonNullableAccessors.getSourceSelect(call);\n    validateSelect(select, targetRowType);\n\n    final RelDataType sourceRowType = getValidatedNodeType(select);\n    checkTypeAssignment(scopes.get(select),\n        table,\n        sourceRowType,\n        targetRowType,\n        call);\n\n    checkConstraint(table, call, targetRowType);\n\n    validateAccess(call.getTargetTable(), table, SqlAccessEnum.UPDATE);\n  }\n","date":"2020-11-30 06:45:33","endLine":4980,"groupId":"101854","id":14,"instanceNumber":2,"isCurCommit":0,"methodName":"validateUpdate","params":"(SqlUpdatecall)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/42/8f1d3a3f0cf3ef4a3ecc26bac058934422699c.src","preCode":"  @Override public void validateUpdate(SqlUpdate call) {\n    final SqlValidatorNamespace targetNamespace = getNamespace(call);\n    validateNamespace(targetNamespace, unknownType);\n    final RelOptTable relOptTable = SqlValidatorUtil.getRelOptTable(\n        targetNamespace, catalogReader.unwrap(Prepare.CatalogReader.class), null, null);\n    final SqlValidatorTable table = relOptTable == null\n        ? targetNamespace.getTable()\n        : relOptTable.unwrap(SqlValidatorTable.class);\n\n    final RelDataType targetRowType =\n        createTargetRowType(\n            table,\n            call.getTargetColumnList(),\n            true);\n\n    final SqlSelect select = call.getSourceSelect();\n    validateSelect(select, targetRowType);\n\n    final RelDataType sourceRowType = getValidatedNodeType(select);\n    checkTypeAssignment(scopes.get(select),\n        table,\n        sourceRowType,\n        targetRowType,\n        call);\n\n    checkConstraint(table, call, targetRowType);\n\n    validateAccess(call.getTargetTable(), table, SqlAccessEnum.UPDATE);\n  }\n","realPath":"core/src/main/java/org/apache/calcite/sql/validate/SqlValidatorImpl.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":4951,"status":"M"}],"commitId":"d9a81b88ad561e7e4cedae93e805e0d7a53a7f1a","commitMessage":"@@@[CALCITE-4199] Add nullability annotations\n\nThe commit includes javadoc updates and refactorings made by Julian Hyde in https://github.com/apache/calcite/pull/2278\n","date":"2020-11-30 06:45:33","modifiedFileCount":"1012","status":"M","submitter":"Vladimir Sitnikov"}]
