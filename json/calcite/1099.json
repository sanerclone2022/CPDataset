[{"authorTime":"2019-09-23 13:50:58","codes":[{"authorDate":"2019-09-23 13:50:58","commitOrder":1,"curCode":"  @Test public void testTenElementsSetLiteral() throws Exception {\n    Set set = new HashSet(); \r\n    for (int i = 0; i < 10; i++) {\n      set.add(i);\n    }\n    assertEquals(\"com.google.common.collect.ImmutableSet.builder().add(0)\\n\"\n            + \".add(1)\\n\"\n            + \".add(2)\\n\"\n            + \".add(3)\\n\"\n            + \".add(4)\\n\"\n            + \".add(5)\\n\"\n            + \".add(6)\\n\"\n            + \".add(7)\\n\"\n            + \".add(8)\\n\"\n            + \".add(9).build()\",\n        Expressions.toString(Expressions.constant(set)));\n  }\n","date":"2019-09-23 16:43:08","endLine":1554,"groupId":"5923","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testTenElementsSetLiteral","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/00/5e8aea530150daa2c2c39ef71e1afaa51ae9bf.src","preCode":"  @Test public void testTenElementsSetLiteral() throws Exception {\n    Set set = new HashSet(); \r\n    for (int i = 0; i < 10; i++) {\n      set.add(i);\n    }\n    assertEquals(\"com.google.common.collect.ImmutableSet.builder().add(0)\\n\"\n            + \".add(1)\\n\"\n            + \".add(2)\\n\"\n            + \".add(3)\\n\"\n            + \".add(4)\\n\"\n            + \".add(5)\\n\"\n            + \".add(6)\\n\"\n            + \".add(7)\\n\"\n            + \".add(8)\\n\"\n            + \".add(9).build()\",\n        Expressions.toString(Expressions.constant(set)));\n  }\n","realPath":"linq4j/src/test/java/org/apache/calcite/linq4j/test/ExpressionTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":1538,"status":"B"},{"authorDate":"2019-09-23 13:50:58","commitOrder":1,"curCode":"  @Test public void testTenElementsLinkedHashSetLiteral() throws Exception {\n    Set set = new LinkedHashSet(); \r\n    for (Integer i = 0; i < 10; i++) {\n      set.add(i);\n    }\n    assertEquals(\"com.google.common.collect.ImmutableSet.builder().add(0)\\n\"\n            + \".add(1)\\n\"\n            + \".add(2)\\n\"\n            + \".add(3)\\n\"\n            + \".add(4)\\n\"\n            + \".add(5)\\n\"\n            + \".add(6)\\n\"\n            + \".add(7)\\n\"\n            + \".add(8)\\n\"\n            + \".add(9).build()\",\n        Expressions.toString(Expressions.constant(set)));\n  }\n","date":"2019-09-23 16:43:08","endLine":1572,"groupId":"5923","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testTenElementsLinkedHashSetLiteral","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/00/5e8aea530150daa2c2c39ef71e1afaa51ae9bf.src","preCode":"  @Test public void testTenElementsLinkedHashSetLiteral() throws Exception {\n    Set set = new LinkedHashSet(); \r\n    for (Integer i = 0; i < 10; i++) {\n      set.add(i);\n    }\n    assertEquals(\"com.google.common.collect.ImmutableSet.builder().add(0)\\n\"\n            + \".add(1)\\n\"\n            + \".add(2)\\n\"\n            + \".add(3)\\n\"\n            + \".add(4)\\n\"\n            + \".add(5)\\n\"\n            + \".add(6)\\n\"\n            + \".add(7)\\n\"\n            + \".add(8)\\n\"\n            + \".add(9).build()\",\n        Expressions.toString(Expressions.constant(set)));\n  }\n","realPath":"linq4j/src/test/java/org/apache/calcite/linq4j/test/ExpressionTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":1556,"status":"B"}],"commitId":"78c2a007b5b597f673323b80dde21c23d31f23ea","commitMessage":"@@@[CALCITE-3288] In ConstantExpression support SET literals (xy2953396112)\n\nclose apache/calcite#1408\n","date":"2019-09-23 16:43:08","modifiedFileCount":"2","status":"B","submitter":"dz"},{"authorTime":"2019-09-23 13:50:58","codes":[{"authorDate":"2019-10-06 04:45:35","commitOrder":2,"curCode":"  @Test public void testTenElementsSetLiteral() throws Exception {\n    Set set = new LinkedHashSet(); \r\n    for (int i = 0; i < 10; i++) {\n      set.add(i);\n    }\n    assertEquals(\"com.google.common.collect.ImmutableSet.builder().add(0)\\n\"\n            + \".add(1)\\n\"\n            + \".add(2)\\n\"\n            + \".add(3)\\n\"\n            + \".add(4)\\n\"\n            + \".add(5)\\n\"\n            + \".add(6)\\n\"\n            + \".add(7)\\n\"\n            + \".add(8)\\n\"\n            + \".add(9).build()\",\n        Expressions.toString(Expressions.constant(set)));\n  }\n","date":"2019-10-08 01:57:54","endLine":1554,"groupId":"5923","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testTenElementsSetLiteral","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/c6/5e076b51c78a57351dc1c1b63a68d0b4049300.src","preCode":"  @Test public void testTenElementsSetLiteral() throws Exception {\n    Set set = new HashSet(); \r\n    for (int i = 0; i < 10; i++) {\n      set.add(i);\n    }\n    assertEquals(\"com.google.common.collect.ImmutableSet.builder().add(0)\\n\"\n            + \".add(1)\\n\"\n            + \".add(2)\\n\"\n            + \".add(3)\\n\"\n            + \".add(4)\\n\"\n            + \".add(5)\\n\"\n            + \".add(6)\\n\"\n            + \".add(7)\\n\"\n            + \".add(8)\\n\"\n            + \".add(9).build()\",\n        Expressions.toString(Expressions.constant(set)));\n  }\n","realPath":"linq4j/src/test/java/org/apache/calcite/linq4j/test/ExpressionTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":1538,"status":"M"},{"authorDate":"2019-09-23 13:50:58","commitOrder":2,"curCode":"  @Test public void testTenElementsLinkedHashSetLiteral() throws Exception {\n    Set set = new LinkedHashSet(); \r\n    for (Integer i = 0; i < 10; i++) {\n      set.add(i);\n    }\n    assertEquals(\"com.google.common.collect.ImmutableSet.builder().add(0)\\n\"\n            + \".add(1)\\n\"\n            + \".add(2)\\n\"\n            + \".add(3)\\n\"\n            + \".add(4)\\n\"\n            + \".add(5)\\n\"\n            + \".add(6)\\n\"\n            + \".add(7)\\n\"\n            + \".add(8)\\n\"\n            + \".add(9).build()\",\n        Expressions.toString(Expressions.constant(set)));\n  }\n","date":"2019-09-23 16:43:08","endLine":1572,"groupId":"5923","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testTenElementsLinkedHashSetLiteral","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/00/5e8aea530150daa2c2c39ef71e1afaa51ae9bf.src","preCode":"  @Test public void testTenElementsLinkedHashSetLiteral() throws Exception {\n    Set set = new LinkedHashSet(); \r\n    for (Integer i = 0; i < 10; i++) {\n      set.add(i);\n    }\n    assertEquals(\"com.google.common.collect.ImmutableSet.builder().add(0)\\n\"\n            + \".add(1)\\n\"\n            + \".add(2)\\n\"\n            + \".add(3)\\n\"\n            + \".add(4)\\n\"\n            + \".add(5)\\n\"\n            + \".add(6)\\n\"\n            + \".add(7)\\n\"\n            + \".add(8)\\n\"\n            + \".add(9).build()\",\n        Expressions.toString(Expressions.constant(set)));\n  }\n","realPath":"linq4j/src/test/java/org/apache/calcite/linq4j/test/ExpressionTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":1556,"status":"N"}],"commitId":"abf36e4da4884f2c22435384aa55d68f968a784e","commitMessage":"@@@[CALCITE-3389] Test may fail if HashSet iterates in different order (contextshuffling)\n\nClose #1487\n","date":"2019-10-08 01:57:54","modifiedFileCount":"1","status":"M","submitter":"contextshuffling"},{"authorTime":"2020-04-02 10:39:10","codes":[{"authorDate":"2020-04-02 10:39:10","commitOrder":3,"curCode":"  @Test void testTenElementsSetLiteral() throws Exception {\n    Set set = new LinkedHashSet(); \r\n    for (int i = 0; i < 10; i++) {\n      set.add(i);\n    }\n    assertEquals(\"com.google.common.collect.ImmutableSet.builder().add(0)\\n\"\n            + \".add(1)\\n\"\n            + \".add(2)\\n\"\n            + \".add(3)\\n\"\n            + \".add(4)\\n\"\n            + \".add(5)\\n\"\n            + \".add(6)\\n\"\n            + \".add(7)\\n\"\n            + \".add(8)\\n\"\n            + \".add(9).build()\",\n        Expressions.toString(Expressions.constant(set)));\n  }\n","date":"2020-04-06 04:57:49","endLine":1651,"groupId":"1099","id":5,"instanceNumber":1,"isCurCommit":1,"methodName":"testTenElementsSetLiteral","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/13/bc869ac710465a9aea6569422a3aee0ffba952.src","preCode":"  @Test public void testTenElementsSetLiteral() throws Exception {\n    Set set = new LinkedHashSet(); \r\n    for (int i = 0; i < 10; i++) {\n      set.add(i);\n    }\n    assertEquals(\"com.google.common.collect.ImmutableSet.builder().add(0)\\n\"\n            + \".add(1)\\n\"\n            + \".add(2)\\n\"\n            + \".add(3)\\n\"\n            + \".add(4)\\n\"\n            + \".add(5)\\n\"\n            + \".add(6)\\n\"\n            + \".add(7)\\n\"\n            + \".add(8)\\n\"\n            + \".add(9).build()\",\n        Expressions.toString(Expressions.constant(set)));\n  }\n","realPath":"linq4j/src/test/java/org/apache/calcite/linq4j/test/ExpressionTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":1635,"status":"M"},{"authorDate":"2020-04-02 10:39:10","commitOrder":3,"curCode":"  @Test void testTenElementsLinkedHashSetLiteral() throws Exception {\n    Set set = new LinkedHashSet(); \r\n    for (Integer i = 0; i < 10; i++) {\n      set.add(i);\n    }\n    assertEquals(\"com.google.common.collect.ImmutableSet.builder().add(0)\\n\"\n            + \".add(1)\\n\"\n            + \".add(2)\\n\"\n            + \".add(3)\\n\"\n            + \".add(4)\\n\"\n            + \".add(5)\\n\"\n            + \".add(6)\\n\"\n            + \".add(7)\\n\"\n            + \".add(8)\\n\"\n            + \".add(9).build()\",\n        Expressions.toString(Expressions.constant(set)));\n  }\n","date":"2020-04-06 04:57:49","endLine":1669,"groupId":"1099","id":6,"instanceNumber":2,"isCurCommit":1,"methodName":"testTenElementsLinkedHashSetLiteral","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/13/bc869ac710465a9aea6569422a3aee0ffba952.src","preCode":"  @Test public void testTenElementsLinkedHashSetLiteral() throws Exception {\n    Set set = new LinkedHashSet(); \r\n    for (Integer i = 0; i < 10; i++) {\n      set.add(i);\n    }\n    assertEquals(\"com.google.common.collect.ImmutableSet.builder().add(0)\\n\"\n            + \".add(1)\\n\"\n            + \".add(2)\\n\"\n            + \".add(3)\\n\"\n            + \".add(4)\\n\"\n            + \".add(5)\\n\"\n            + \".add(6)\\n\"\n            + \".add(7)\\n\"\n            + \".add(8)\\n\"\n            + \".add(9).build()\",\n        Expressions.toString(Expressions.constant(set)));\n  }\n","realPath":"linq4j/src/test/java/org/apache/calcite/linq4j/test/ExpressionTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":1653,"status":"M"}],"commitId":"9492dd4146f63ddc028010d6c4e86f6a5cb29a8d","commitMessage":"@@@[CALCITE-3892] Make junit test classes and methods non-public where possible\n\nPrior to junit 5.  classes and methods had to be public. This is no\nlonger the case.\n\nSome classes need to remain public because they are referenced from\nelsewhere.  or if they use reflection somehow. The remaining 'public'\nkeyword will be informative to maintainers.\n","date":"2020-04-06 04:57:49","modifiedFileCount":"196","status":"M","submitter":"Julian Hyde"}]
