[{"authorTime":"2015-09-14 18:31:53","codes":[{"authorDate":"2020-06-19 02:09:17","commitOrder":3,"curCode":"  public static <TSource> TSource single(Enumerable<TSource> source) {\n    TSource toRet = null;\n    try (Enumerator<TSource> os = source.enumerator()) {\n      if (os.moveNext()) {\n        toRet = os.current();\n\n        if (os.moveNext()) {\n          throw new IllegalStateException();\n        }\n      }\n      if (toRet != null) {\n        return toRet;\n      }\n      throw new IllegalStateException();\n    }\n  }\n","date":"2020-06-29 16:36:00","endLine":3013,"groupId":"9891","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"single","params":"(Enumerable<TSource>source)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/1d/1be29b1674ec11926bcb0f2157ddf4571aab83.src","preCode":"  public static <TSource> TSource single(Enumerable<TSource> source) {\n    TSource toRet = null;\n    try (Enumerator<TSource> os = source.enumerator()) {\n      if (os.moveNext()) {\n        toRet = os.current();\n\n        if (os.moveNext()) {\n          throw new IllegalStateException();\n        }\n      }\n      if (toRet != null) {\n        return toRet;\n      }\n      throw new IllegalStateException();\n    }\n  }\n","realPath":"linq4j/src/main/java/org/apache/calcite/linq4j/EnumerableDefaults.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":2998,"status":"B"},{"authorDate":"2015-09-14 18:31:53","commitOrder":3,"curCode":"  public static <TSource> TSource singleOrDefault(Enumerable<TSource> source) {\n    TSource toRet = null;\n    try (Enumerator<TSource> os = source.enumerator()) {\n      if (os.moveNext()) {\n        toRet = os.current();\n      }\n\n      if (os.moveNext()) {\n        return null;\n      }\n\n      return toRet;\n    }\n  }\n","date":"2015-09-18 13:45:02","endLine":2166,"groupId":"9891","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"singleOrDefault","params":"(Enumerable<TSource>source)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/70/24a86b3721a1168018b474118f32f628259ea1.src","preCode":"  public static <TSource> TSource singleOrDefault(Enumerable<TSource> source) {\n    TSource toRet = null;\n    try (Enumerator<TSource> os = source.enumerator()) {\n      if (os.moveNext()) {\n        toRet = os.current();\n      }\n\n      if (os.moveNext()) {\n        return null;\n      }\n\n      return toRet;\n    }\n  }\n","realPath":"linq4j/src/main/java/org/apache/calcite/linq4j/EnumerableDefaults.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":2153,"status":"NB"}],"commitId":"bf9ff001db743bcba35943daf7fec5fe8b8b207e","commitMessage":"@@@[CALCITE-4008] Implement Code generation for EnumerableSortedAggregate (Rui Wang).\n","date":"2020-06-29 16:36:00","modifiedFileCount":"6","status":"M","submitter":"amaliujia"},{"authorTime":"2020-05-29 00:04:40","codes":[{"authorDate":"2020-06-19 02:09:17","commitOrder":4,"curCode":"  public static <TSource> TSource single(Enumerable<TSource> source) {\n    TSource toRet = null;\n    try (Enumerator<TSource> os = source.enumerator()) {\n      if (os.moveNext()) {\n        toRet = os.current();\n\n        if (os.moveNext()) {\n          throw new IllegalStateException();\n        }\n      }\n      if (toRet != null) {\n        return toRet;\n      }\n      throw new IllegalStateException();\n    }\n  }\n","date":"2020-06-29 16:36:00","endLine":3013,"groupId":"12131","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"single","params":"(Enumerable<TSource>source)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/1d/1be29b1674ec11926bcb0f2157ddf4571aab83.src","preCode":"  public static <TSource> TSource single(Enumerable<TSource> source) {\n    TSource toRet = null;\n    try (Enumerator<TSource> os = source.enumerator()) {\n      if (os.moveNext()) {\n        toRet = os.current();\n\n        if (os.moveNext()) {\n          throw new IllegalStateException();\n        }\n      }\n      if (toRet != null) {\n        return toRet;\n      }\n      throw new IllegalStateException();\n    }\n  }\n","realPath":"linq4j/src/main/java/org/apache/calcite/linq4j/EnumerableDefaults.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":2998,"status":"N"},{"authorDate":"2020-05-29 00:04:40","commitOrder":4,"curCode":"  public static <TSource> @Nullable TSource singleOrDefault(Enumerable<TSource> source) {\n    TSource toRet = null;\n    try (Enumerator<TSource> os = source.enumerator()) {\n      if (os.moveNext()) {\n        toRet = os.current();\n      }\n\n      if (os.moveNext()) {\n        return null;\n      }\n\n      return toRet;\n    }\n  }\n","date":"2020-11-30 06:45:33","endLine":3201,"groupId":"12131","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"singleOrDefault","params":"(Enumerable<TSource>source)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/b6/5681a61d625c97b1c82a2d555f8635b1edf6cb.src","preCode":"  public static <TSource> TSource singleOrDefault(Enumerable<TSource> source) {\n    TSource toRet = null;\n    try (Enumerator<TSource> os = source.enumerator()) {\n      if (os.moveNext()) {\n        toRet = os.current();\n      }\n\n      if (os.moveNext()) {\n        return null;\n      }\n\n      return toRet;\n    }\n  }\n","realPath":"linq4j/src/main/java/org/apache/calcite/linq4j/EnumerableDefaults.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":3188,"status":"M"}],"commitId":"d9a81b88ad561e7e4cedae93e805e0d7a53a7f1a","commitMessage":"@@@[CALCITE-4199] Add nullability annotations\n\nThe commit includes javadoc updates and refactorings made by Julian Hyde in https://github.com/apache/calcite/pull/2278\n","date":"2020-11-30 06:45:33","modifiedFileCount":"1012","status":"M","submitter":"Vladimir Sitnikov"}]
