[{"authorTime":"2015-03-26 02:29:27","codes":[{"authorDate":"2014-11-14 09:39:29","commitOrder":2,"curCode":"  @Test public void testStringCompareType() {\n    checkExpType(\"'a' = 'b'\", \"BOOLEAN NOT NULL\");\n    checkExpType(\"'a' <> 'b'\", \"BOOLEAN NOT NULL\");\n    checkExpType(\"'a' > 'b'\", \"BOOLEAN NOT NULL\");\n    checkExpType(\"'a' < 'b'\", \"BOOLEAN NOT NULL\");\n    checkExpType(\"'a' >= 'b'\", \"BOOLEAN NOT NULL\");\n    checkExpType(\"'a' <= 'b'\", \"BOOLEAN NOT NULL\");\n    checkExpType(\"CAST(NULL AS VARCHAR(33)) > 'foo'\", \"BOOLEAN\");\n  }\n","date":"2014-11-14 09:39:34","endLine":574,"groupId":"4640","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testStringCompareType","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/df/99443f0f8e3b70c5add71a8c451bf22a3a1e3b.src","preCode":"  @Test public void testStringCompareType() {\n    checkExpType(\"'a' = 'b'\", \"BOOLEAN NOT NULL\");\n    checkExpType(\"'a' <> 'b'\", \"BOOLEAN NOT NULL\");\n    checkExpType(\"'a' > 'b'\", \"BOOLEAN NOT NULL\");\n    checkExpType(\"'a' < 'b'\", \"BOOLEAN NOT NULL\");\n    checkExpType(\"'a' >= 'b'\", \"BOOLEAN NOT NULL\");\n    checkExpType(\"'a' <= 'b'\", \"BOOLEAN NOT NULL\");\n    checkExpType(\"CAST(NULL AS VARCHAR(33)) > 'foo'\", \"BOOLEAN\");\n  }\n","realPath":"core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":566,"status":"NB"},{"authorDate":"2015-03-26 02:29:27","commitOrder":2,"curCode":"  @Test public void testDateCompare() {\n    \r\n    \r\n    checkExpType(\"date '2015-03-17' < '2015-03-18'\", \"BOOLEAN NOT NULL\");\n    checkExpType(\"date '2015-03-17' > '2015-03-18'\", \"BOOLEAN NOT NULL\");\n    checkExpType(\"date '2015-03-17' = '2015-03-18'\", \"BOOLEAN NOT NULL\");\n    checkExpType(\"'2015-03-17' < date '2015-03-18'\", \"BOOLEAN NOT NULL\");\n    checkExpType(\"date '2015-03-17' between '2015-03-16' and '2015-03-19'\",\n        \"BOOLEAN NOT NULL\");\n    checkExpType(\"date '2015-03-17' between '2015-03-16' and '2015-03'||'-19'\",\n        \"BOOLEAN NOT NULL\");\n    checkExpType(\"'2015-03-17' between date '2015-03-16' and date '2015-03-19'\",\n        \"BOOLEAN NOT NULL\");\n    checkExpType(\"date '2015-03-17' between date '2015-03-16' and '2015-03-19'\",\n        \"BOOLEAN NOT NULL\");\n    checkExpType(\"date '2015-03-17' between '2015-03-16' and date '2015-03-19'\",\n        \"BOOLEAN NOT NULL\");\n    checkExpType(\"time '12:34:56' < '12:34:57'\", \"BOOLEAN NOT NULL\");\n    checkExpType(\"timestamp '2015-03-17 12:34:56' < '2015-03-17 12:34:57'\",\n        \"BOOLEAN NOT NULL\");\n    checkExpType(\"interval '2' hour < '2:30'\", \"BOOLEAN NOT NULL\");\n\n    \r\n    checkExpType(\"123 > '72'\", \"BOOLEAN NOT NULL\");\n    checkExpType(\"12.3 > '7.2'\", \"BOOLEAN NOT NULL\");\n\n    \r\n    checkExpType(\"true = 'true'\", \"BOOLEAN NOT NULL\");\n    checkExpFails(\"^true and 'true'^\",\n        \"Cannot apply 'AND' to arguments of type '<BOOLEAN> AND <CHAR\\\\(4\\\\)>'\\\\..*\");\n  }\n","date":"2015-04-03 16:10:06","endLine":6219,"groupId":"4640","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testDateCompare","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/ec/3fed1c9cc2f6ff42b4f8439dc2a581604fe788.src","preCode":"  @Test public void testDateCompare() {\n    \r\n    \r\n    checkExpType(\"date '2015-03-17' < '2015-03-18'\", \"BOOLEAN NOT NULL\");\n    checkExpType(\"date '2015-03-17' > '2015-03-18'\", \"BOOLEAN NOT NULL\");\n    checkExpType(\"date '2015-03-17' = '2015-03-18'\", \"BOOLEAN NOT NULL\");\n    checkExpType(\"'2015-03-17' < date '2015-03-18'\", \"BOOLEAN NOT NULL\");\n    checkExpType(\"date '2015-03-17' between '2015-03-16' and '2015-03-19'\",\n        \"BOOLEAN NOT NULL\");\n    checkExpType(\"date '2015-03-17' between '2015-03-16' and '2015-03'||'-19'\",\n        \"BOOLEAN NOT NULL\");\n    checkExpType(\"'2015-03-17' between date '2015-03-16' and date '2015-03-19'\",\n        \"BOOLEAN NOT NULL\");\n    checkExpType(\"date '2015-03-17' between date '2015-03-16' and '2015-03-19'\",\n        \"BOOLEAN NOT NULL\");\n    checkExpType(\"date '2015-03-17' between '2015-03-16' and date '2015-03-19'\",\n        \"BOOLEAN NOT NULL\");\n    checkExpType(\"time '12:34:56' < '12:34:57'\", \"BOOLEAN NOT NULL\");\n    checkExpType(\"timestamp '2015-03-17 12:34:56' < '2015-03-17 12:34:57'\",\n        \"BOOLEAN NOT NULL\");\n    checkExpType(\"interval '2' hour < '2:30'\", \"BOOLEAN NOT NULL\");\n\n    \r\n    checkExpType(\"123 > '72'\", \"BOOLEAN NOT NULL\");\n    checkExpType(\"12.3 > '7.2'\", \"BOOLEAN NOT NULL\");\n\n    \r\n    checkExpType(\"true = 'true'\", \"BOOLEAN NOT NULL\");\n    checkExpFails(\"^true and 'true'^\",\n        \"Cannot apply 'AND' to arguments of type '<BOOLEAN> AND <CHAR\\\\(4\\\\)>'\\\\..*\");\n  }\n","realPath":"core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":6189,"status":"B"}],"commitId":"272e604082bbaf27a93e5c4f04a2eb1c951a99f4","commitMessage":"@@@[CALCITE-613] Implicitly convert character values in comparisons\n\nAdd SqlOperandTypeChecker.getConsistency()\n\nMake \"scott\" data set available in Quidem (.oq) tests\n\nFor \"precision\" of TIME and TIMESTAMP columns read from JDBC.  use \"scale\" not \"size\"\n","date":"2015-04-03 16:10:06","modifiedFileCount":"21","status":"M","submitter":"Julian Hyde"},{"authorTime":"2019-09-07 07:51:19","codes":[{"authorDate":"2019-09-07 07:51:19","commitOrder":3,"curCode":"  @Test public void testStringCompareType() {\n    expr(\"'a' = 'b'\")\n        .columnType(\"BOOLEAN NOT NULL\");\n    expr(\"'a' <> 'b'\")\n        .columnType(\"BOOLEAN NOT NULL\");\n    expr(\"'a' > 'b'\")\n        .columnType(\"BOOLEAN NOT NULL\");\n    expr(\"'a' < 'b'\")\n        .columnType(\"BOOLEAN NOT NULL\");\n    expr(\"'a' >= 'b'\")\n        .columnType(\"BOOLEAN NOT NULL\");\n    expr(\"'a' <= 'b'\")\n        .columnType(\"BOOLEAN NOT NULL\");\n    expr(\"CAST(NULL AS VARCHAR(33)) > 'foo'\")\n        .columnType(\"BOOLEAN\");\n  }\n","date":"2019-09-24 02:59:18","endLine":664,"groupId":"13472","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testStringCompareType","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/a3/d33ba8e946a499cac312fa98a0e5b21a080452.src","preCode":"  @Test public void testStringCompareType() {\n    checkExpType(\"'a' = 'b'\", \"BOOLEAN NOT NULL\");\n    checkExpType(\"'a' <> 'b'\", \"BOOLEAN NOT NULL\");\n    checkExpType(\"'a' > 'b'\", \"BOOLEAN NOT NULL\");\n    checkExpType(\"'a' < 'b'\", \"BOOLEAN NOT NULL\");\n    checkExpType(\"'a' >= 'b'\", \"BOOLEAN NOT NULL\");\n    checkExpType(\"'a' <= 'b'\", \"BOOLEAN NOT NULL\");\n    checkExpType(\"CAST(NULL AS VARCHAR(33)) > 'foo'\", \"BOOLEAN\");\n  }\n","realPath":"core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":649,"status":"M"},{"authorDate":"2019-09-07 07:51:19","commitOrder":3,"curCode":"  @Test public void testDateCompare() {\n    \r\n    \r\n    expr(\"date '2015-03-17' < '2015-03-18'\")\n        .columnType(\"BOOLEAN NOT NULL\");\n    expr(\"date '2015-03-17' > '2015-03-18'\")\n        .columnType(\"BOOLEAN NOT NULL\");\n    expr(\"date '2015-03-17' = '2015-03-18'\")\n        .columnType(\"BOOLEAN NOT NULL\");\n    expr(\"'2015-03-17' < date '2015-03-18'\")\n        .columnType(\"BOOLEAN NOT NULL\");\n    expr(\"date '2015-03-17' between '2015-03-16' and '2015-03-19'\")\n        .columnType(\"BOOLEAN NOT NULL\");\n    expr(\"date '2015-03-17' between '2015-03-16' and '2015-03'||'-19'\")\n        .columnType(\"BOOLEAN NOT NULL\");\n    expr(\"'2015-03-17' between date '2015-03-16' and date '2015-03-19'\")\n        .columnType(\"BOOLEAN NOT NULL\");\n    expr(\"date '2015-03-17' between date '2015-03-16' and '2015-03-19'\")\n        .columnType(\"BOOLEAN NOT NULL\");\n    expr(\"date '2015-03-17' between '2015-03-16' and date '2015-03-19'\")\n        .columnType(\"BOOLEAN NOT NULL\");\n    expr(\"time '12:34:56' < '12:34:57'\")\n        .columnType(\"BOOLEAN NOT NULL\");\n    expr(\"timestamp '2015-03-17 12:34:56' < '2015-03-17 12:34:57'\")\n        .columnType(\"BOOLEAN NOT NULL\");\n    expr(\"interval '2' hour < '2:30'\")\n        .columnType(\"BOOLEAN NOT NULL\");\n\n    \r\n    expr(\"123 > '72'\")\n        .columnType(\"BOOLEAN NOT NULL\");\n    expr(\"12.3 > '7.2'\")\n        .columnType(\"BOOLEAN NOT NULL\");\n\n    \r\n    expr(\"true = 'true'\")\n        .columnType(\"BOOLEAN NOT NULL\");\n    expr(\"^true and 'true'^\")\n        .fails(\"Cannot apply 'AND' to arguments of type '<BOOLEAN> AND <CHAR\\\\(4\\\\)>'\\\\..*\");\n  }\n","date":"2019-09-24 02:59:18","endLine":7198,"groupId":"13472","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testDateCompare","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/a3/d33ba8e946a499cac312fa98a0e5b21a080452.src","preCode":"  @Test public void testDateCompare() {\n    \r\n    \r\n    checkExpType(\"date '2015-03-17' < '2015-03-18'\", \"BOOLEAN NOT NULL\");\n    checkExpType(\"date '2015-03-17' > '2015-03-18'\", \"BOOLEAN NOT NULL\");\n    checkExpType(\"date '2015-03-17' = '2015-03-18'\", \"BOOLEAN NOT NULL\");\n    checkExpType(\"'2015-03-17' < date '2015-03-18'\", \"BOOLEAN NOT NULL\");\n    checkExpType(\"date '2015-03-17' between '2015-03-16' and '2015-03-19'\",\n        \"BOOLEAN NOT NULL\");\n    checkExpType(\"date '2015-03-17' between '2015-03-16' and '2015-03'||'-19'\",\n        \"BOOLEAN NOT NULL\");\n    checkExpType(\"'2015-03-17' between date '2015-03-16' and date '2015-03-19'\",\n        \"BOOLEAN NOT NULL\");\n    checkExpType(\"date '2015-03-17' between date '2015-03-16' and '2015-03-19'\",\n        \"BOOLEAN NOT NULL\");\n    checkExpType(\"date '2015-03-17' between '2015-03-16' and date '2015-03-19'\",\n        \"BOOLEAN NOT NULL\");\n    checkExpType(\"time '12:34:56' < '12:34:57'\", \"BOOLEAN NOT NULL\");\n    checkExpType(\"timestamp '2015-03-17 12:34:56' < '2015-03-17 12:34:57'\",\n        \"BOOLEAN NOT NULL\");\n    checkExpType(\"interval '2' hour < '2:30'\", \"BOOLEAN NOT NULL\");\n\n    \r\n    checkExpType(\"123 > '72'\", \"BOOLEAN NOT NULL\");\n    checkExpType(\"12.3 > '7.2'\", \"BOOLEAN NOT NULL\");\n\n    \r\n    checkExpType(\"true = 'true'\", \"BOOLEAN NOT NULL\");\n    checkExpFails(\"^true and 'true'^\",\n        \"Cannot apply 'AND' to arguments of type '<BOOLEAN> AND <CHAR\\\\(4\\\\)>'\\\\..*\");\n  }\n","realPath":"core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":7159,"status":"M"}],"commitId":"405614f87b75eb515e767b78a2c47481a0efc701","commitMessage":"@@@[CALCITE-3327] Simplify SqlValidatorTest and SqlParserTest by making test methods fluent\n\nReplace 'boolean typeCoercion' parameter with fluent method 'Sql.withTypeCoercion(boolean)'.\n\nDeprecate various checkXxx methods. For example. \ncheckExp(sql.  expected) becomes expr(sql).ok();\ncheckExpFails(sql.  e) becomes expr(s).fails(e).\n\nRename SqlParserTest.exp to expr.\n","date":"2019-09-24 02:59:18","modifiedFileCount":"16","status":"M","submitter":"Julian Hyde"},{"authorTime":"2020-04-02 10:39:10","codes":[{"authorDate":"2020-04-02 10:39:10","commitOrder":4,"curCode":"  @Test void testStringCompareType() {\n    expr(\"'a' = 'b'\")\n        .columnType(\"BOOLEAN NOT NULL\");\n    expr(\"'a' <> 'b'\")\n        .columnType(\"BOOLEAN NOT NULL\");\n    expr(\"'a' > 'b'\")\n        .columnType(\"BOOLEAN NOT NULL\");\n    expr(\"'a' < 'b'\")\n        .columnType(\"BOOLEAN NOT NULL\");\n    expr(\"'a' >= 'b'\")\n        .columnType(\"BOOLEAN NOT NULL\");\n    expr(\"'a' <= 'b'\")\n        .columnType(\"BOOLEAN NOT NULL\");\n    expr(\"CAST(NULL AS VARCHAR(33)) > 'foo'\")\n        .columnType(\"BOOLEAN\");\n  }\n","date":"2020-04-06 04:57:49","endLine":664,"groupId":"101154","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testStringCompareType","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/b6/f9115009e28a63267b183e3a0a9a5e7f343a61.src","preCode":"  @Test public void testStringCompareType() {\n    expr(\"'a' = 'b'\")\n        .columnType(\"BOOLEAN NOT NULL\");\n    expr(\"'a' <> 'b'\")\n        .columnType(\"BOOLEAN NOT NULL\");\n    expr(\"'a' > 'b'\")\n        .columnType(\"BOOLEAN NOT NULL\");\n    expr(\"'a' < 'b'\")\n        .columnType(\"BOOLEAN NOT NULL\");\n    expr(\"'a' >= 'b'\")\n        .columnType(\"BOOLEAN NOT NULL\");\n    expr(\"'a' <= 'b'\")\n        .columnType(\"BOOLEAN NOT NULL\");\n    expr(\"CAST(NULL AS VARCHAR(33)) > 'foo'\")\n        .columnType(\"BOOLEAN\");\n  }\n","realPath":"core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":649,"status":"M"},{"authorDate":"2020-04-02 10:39:10","commitOrder":4,"curCode":"  @Test void testDateCompare() {\n    \r\n    \r\n    expr(\"date '2015-03-17' < '2015-03-18'\")\n        .columnType(\"BOOLEAN NOT NULL\");\n    expr(\"date '2015-03-17' > '2015-03-18'\")\n        .columnType(\"BOOLEAN NOT NULL\");\n    expr(\"date '2015-03-17' = '2015-03-18'\")\n        .columnType(\"BOOLEAN NOT NULL\");\n    expr(\"'2015-03-17' < date '2015-03-18'\")\n        .columnType(\"BOOLEAN NOT NULL\");\n    expr(\"date '2015-03-17' between '2015-03-16' and '2015-03-19'\")\n        .columnType(\"BOOLEAN NOT NULL\");\n    expr(\"date '2015-03-17' between '2015-03-16' and '2015-03'||'-19'\")\n        .columnType(\"BOOLEAN NOT NULL\");\n    expr(\"'2015-03-17' between date '2015-03-16' and date '2015-03-19'\")\n        .columnType(\"BOOLEAN NOT NULL\");\n    expr(\"date '2015-03-17' between date '2015-03-16' and '2015-03-19'\")\n        .columnType(\"BOOLEAN NOT NULL\");\n    expr(\"date '2015-03-17' between '2015-03-16' and date '2015-03-19'\")\n        .columnType(\"BOOLEAN NOT NULL\");\n    expr(\"time '12:34:56' < '12:34:57'\")\n        .columnType(\"BOOLEAN NOT NULL\");\n    expr(\"timestamp '2015-03-17 12:34:56' < '2015-03-17 12:34:57'\")\n        .columnType(\"BOOLEAN NOT NULL\");\n    expr(\"interval '2' hour < '2:30'\")\n        .columnType(\"BOOLEAN NOT NULL\");\n\n    \r\n    expr(\"123 > '72'\")\n        .columnType(\"BOOLEAN NOT NULL\");\n    expr(\"12.3 > '7.2'\")\n        .columnType(\"BOOLEAN NOT NULL\");\n\n    \r\n    expr(\"true = 'true'\")\n        .columnType(\"BOOLEAN NOT NULL\");\n    expr(\"^true and 'true'^\")\n        .fails(\"Cannot apply 'AND' to arguments of type '<BOOLEAN> AND <CHAR\\\\(4\\\\)>'\\\\..*\");\n  }\n","date":"2020-04-06 04:57:49","endLine":7278,"groupId":"101154","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testDateCompare","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/b6/f9115009e28a63267b183e3a0a9a5e7f343a61.src","preCode":"  @Test public void testDateCompare() {\n    \r\n    \r\n    expr(\"date '2015-03-17' < '2015-03-18'\")\n        .columnType(\"BOOLEAN NOT NULL\");\n    expr(\"date '2015-03-17' > '2015-03-18'\")\n        .columnType(\"BOOLEAN NOT NULL\");\n    expr(\"date '2015-03-17' = '2015-03-18'\")\n        .columnType(\"BOOLEAN NOT NULL\");\n    expr(\"'2015-03-17' < date '2015-03-18'\")\n        .columnType(\"BOOLEAN NOT NULL\");\n    expr(\"date '2015-03-17' between '2015-03-16' and '2015-03-19'\")\n        .columnType(\"BOOLEAN NOT NULL\");\n    expr(\"date '2015-03-17' between '2015-03-16' and '2015-03'||'-19'\")\n        .columnType(\"BOOLEAN NOT NULL\");\n    expr(\"'2015-03-17' between date '2015-03-16' and date '2015-03-19'\")\n        .columnType(\"BOOLEAN NOT NULL\");\n    expr(\"date '2015-03-17' between date '2015-03-16' and '2015-03-19'\")\n        .columnType(\"BOOLEAN NOT NULL\");\n    expr(\"date '2015-03-17' between '2015-03-16' and date '2015-03-19'\")\n        .columnType(\"BOOLEAN NOT NULL\");\n    expr(\"time '12:34:56' < '12:34:57'\")\n        .columnType(\"BOOLEAN NOT NULL\");\n    expr(\"timestamp '2015-03-17 12:34:56' < '2015-03-17 12:34:57'\")\n        .columnType(\"BOOLEAN NOT NULL\");\n    expr(\"interval '2' hour < '2:30'\")\n        .columnType(\"BOOLEAN NOT NULL\");\n\n    \r\n    expr(\"123 > '72'\")\n        .columnType(\"BOOLEAN NOT NULL\");\n    expr(\"12.3 > '7.2'\")\n        .columnType(\"BOOLEAN NOT NULL\");\n\n    \r\n    expr(\"true = 'true'\")\n        .columnType(\"BOOLEAN NOT NULL\");\n    expr(\"^true and 'true'^\")\n        .fails(\"Cannot apply 'AND' to arguments of type '<BOOLEAN> AND <CHAR\\\\(4\\\\)>'\\\\..*\");\n  }\n","realPath":"core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":7239,"status":"M"}],"commitId":"9492dd4146f63ddc028010d6c4e86f6a5cb29a8d","commitMessage":"@@@[CALCITE-3892] Make junit test classes and methods non-public where possible\n\nPrior to junit 5.  classes and methods had to be public. This is no\nlonger the case.\n\nSome classes need to remain public because they are referenced from\nelsewhere.  or if they use reflection somehow. The remaining 'public'\nkeyword will be informative to maintainers.\n","date":"2020-04-06 04:57:49","modifiedFileCount":"196","status":"M","submitter":"Julian Hyde"}]
