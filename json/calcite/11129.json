[{"authorTime":"2020-06-19 02:09:17","codes":[{"authorDate":"2020-06-19 02:09:17","commitOrder":1,"curCode":"  public static <TSource, TResult> Enumerable<TResult> selectMany(\n      final Enumerable<TSource> source,\n      final Function2<TSource, Integer, Enumerable<TResult>> selector) {\n    return new AbstractEnumerable<TResult>() {\n      public Enumerator<TResult> enumerator() {\n        return new Enumerator<TResult>() {\n          int index = -1;\n          Enumerator<TSource> sourceEnumerator = source.enumerator();\n          Enumerator<TResult> resultEnumerator = Linq4j.emptyEnumerator();\n\n          public TResult current() {\n            return resultEnumerator.current();\n          }\n\n          public boolean moveNext() {\n            for (;;) {\n              if (resultEnumerator.moveNext()) {\n                return true;\n              }\n              if (!sourceEnumerator.moveNext()) {\n                return false;\n              }\n              index += 1;\n              resultEnumerator = selector.apply(sourceEnumerator.current(), index)\n                  .enumerator();\n            }\n          }\n\n          public void reset() {\n            sourceEnumerator.reset();\n            resultEnumerator = Linq4j.emptyEnumerator();\n          }\n\n          public void close() {\n            sourceEnumerator.close();\n            resultEnumerator.close();\n          }\n        };\n      }\n    };\n  }\n","date":"2020-06-29 16:36:00","endLine":2822,"groupId":"5960","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"selectMany","params":"(finalEnumerable<TSource>source@finalFunction2<TSource@Integer@Enumerable<TResult>>selector)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/1d/1be29b1674ec11926bcb0f2157ddf4571aab83.src","preCode":"  public static <TSource, TResult> Enumerable<TResult> selectMany(\n      final Enumerable<TSource> source,\n      final Function2<TSource, Integer, Enumerable<TResult>> selector) {\n    return new AbstractEnumerable<TResult>() {\n      public Enumerator<TResult> enumerator() {\n        return new Enumerator<TResult>() {\n          int index = -1;\n          Enumerator<TSource> sourceEnumerator = source.enumerator();\n          Enumerator<TResult> resultEnumerator = Linq4j.emptyEnumerator();\n\n          public TResult current() {\n            return resultEnumerator.current();\n          }\n\n          public boolean moveNext() {\n            for (;;) {\n              if (resultEnumerator.moveNext()) {\n                return true;\n              }\n              if (!sourceEnumerator.moveNext()) {\n                return false;\n              }\n              index += 1;\n              resultEnumerator = selector.apply(sourceEnumerator.current(), index)\n                  .enumerator();\n            }\n          }\n\n          public void reset() {\n            sourceEnumerator.reset();\n            resultEnumerator = Linq4j.emptyEnumerator();\n          }\n\n          public void close() {\n            sourceEnumerator.close();\n            resultEnumerator.close();\n          }\n        };\n      }\n    };\n  }\n","realPath":"linq4j/src/main/java/org/apache/calcite/linq4j/EnumerableDefaults.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":2782,"status":"B"},{"authorDate":"2020-06-19 02:09:17","commitOrder":1,"curCode":"  public static <TSource, TCollection, TResult> Enumerable<TResult> selectMany(\n      final Enumerable<TSource> source,\n      final Function1<TSource, Enumerable<TCollection>> collectionSelector,\n      final Function2<TSource, TCollection, TResult> resultSelector) {\n    return new AbstractEnumerable<TResult>() {\n      public Enumerator<TResult> enumerator() {\n        return new Enumerator<TResult>() {\n          Enumerator<TSource> sourceEnumerator = source.enumerator();\n          Enumerator<TCollection> collectionEnumerator = Linq4j.emptyEnumerator();\n          Enumerator<TResult> resultEnumerator = Linq4j.emptyEnumerator();\n\n          public TResult current() {\n            return resultEnumerator.current();\n          }\n\n          public boolean moveNext() {\n            boolean incremented = false;\n            for (;;) {\n              if (resultEnumerator.moveNext()) {\n                return true;\n              }\n              if (!sourceEnumerator.moveNext()) {\n                return false;\n              }\n              final TSource sourceElement = sourceEnumerator.current();\n              collectionEnumerator = collectionSelector.apply(sourceElement)\n                  .enumerator();\n              resultEnumerator =\n                  new TransformedEnumerator<TCollection, TResult>(collectionEnumerator) {\n                    protected TResult transform(TCollection collectionElement) {\n                      return resultSelector.apply(sourceElement, collectionElement);\n                    }\n                  };\n            }\n          }\n\n          public void reset() {\n            sourceEnumerator.reset();\n            resultEnumerator = Linq4j.emptyEnumerator();\n          }\n\n          public void close() {\n            sourceEnumerator.close();\n            resultEnumerator.close();\n          }\n        };\n      }\n    };\n  }\n","date":"2020-06-29 16:36:00","endLine":2936,"groupId":"12542","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"selectMany","params":"(finalEnumerable<TSource>source@finalFunction1<TSource@Enumerable<TCollection>>collectionSelector@finalFunction2<TSource@TCollection@TResult>resultSelector)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/1d/1be29b1674ec11926bcb0f2157ddf4571aab83.src","preCode":"  public static <TSource, TCollection, TResult> Enumerable<TResult> selectMany(\n      final Enumerable<TSource> source,\n      final Function1<TSource, Enumerable<TCollection>> collectionSelector,\n      final Function2<TSource, TCollection, TResult> resultSelector) {\n    return new AbstractEnumerable<TResult>() {\n      public Enumerator<TResult> enumerator() {\n        return new Enumerator<TResult>() {\n          Enumerator<TSource> sourceEnumerator = source.enumerator();\n          Enumerator<TCollection> collectionEnumerator = Linq4j.emptyEnumerator();\n          Enumerator<TResult> resultEnumerator = Linq4j.emptyEnumerator();\n\n          public TResult current() {\n            return resultEnumerator.current();\n          }\n\n          public boolean moveNext() {\n            boolean incremented = false;\n            for (;;) {\n              if (resultEnumerator.moveNext()) {\n                return true;\n              }\n              if (!sourceEnumerator.moveNext()) {\n                return false;\n              }\n              final TSource sourceElement = sourceEnumerator.current();\n              collectionEnumerator = collectionSelector.apply(sourceElement)\n                  .enumerator();\n              resultEnumerator =\n                  new TransformedEnumerator<TCollection, TResult>(collectionEnumerator) {\n                    protected TResult transform(TCollection collectionElement) {\n                      return resultSelector.apply(sourceElement, collectionElement);\n                    }\n                  };\n            }\n          }\n\n          public void reset() {\n            sourceEnumerator.reset();\n            resultEnumerator = Linq4j.emptyEnumerator();\n          }\n\n          public void close() {\n            sourceEnumerator.close();\n            resultEnumerator.close();\n          }\n        };\n      }\n    };\n  }\n","realPath":"linq4j/src/main/java/org/apache/calcite/linq4j/EnumerableDefaults.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":2888,"status":"B"}],"commitId":"bf9ff001db743bcba35943daf7fec5fe8b8b207e","commitMessage":"@@@[CALCITE-4008] Implement Code generation for EnumerableSortedAggregate (Rui Wang).\n","date":"2020-06-29 16:36:00","modifiedFileCount":"6","status":"B","submitter":"amaliujia"},{"authorTime":"2020-09-29 22:09:05","codes":[{"authorDate":"2020-09-29 22:09:05","commitOrder":2,"curCode":"  public static <TSource, TResult> Enumerable<TResult> selectMany(\n      final Enumerable<TSource> source,\n      final Function2<TSource, Integer, Enumerable<TResult>> selector) {\n    return new AbstractEnumerable<TResult>() {\n      @Override public Enumerator<TResult> enumerator() {\n        return new Enumerator<TResult>() {\n          int index = -1;\n          Enumerator<TSource> sourceEnumerator = source.enumerator();\n          Enumerator<TResult> resultEnumerator = Linq4j.emptyEnumerator();\n\n          @Override public TResult current() {\n            return resultEnumerator.current();\n          }\n\n          @Override public boolean moveNext() {\n            for (;;) {\n              if (resultEnumerator.moveNext()) {\n                return true;\n              }\n              if (!sourceEnumerator.moveNext()) {\n                return false;\n              }\n              index += 1;\n              resultEnumerator = selector.apply(sourceEnumerator.current(), index)\n                  .enumerator();\n            }\n          }\n\n          @Override public void reset() {\n            sourceEnumerator.reset();\n            resultEnumerator = Linq4j.emptyEnumerator();\n          }\n\n          @Override public void close() {\n            sourceEnumerator.close();\n            resultEnumerator.close();\n          }\n        };\n      }\n    };\n  }\n","date":"2020-10-07 05:42:47","endLine":2925,"groupId":"7667","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"selectMany","params":"(finalEnumerable<TSource>source@finalFunction2<TSource@Integer@Enumerable<TResult>>selector)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/5f/4d484dbd63f86d5449292ce78f1f05dc972925.src","preCode":"  public static <TSource, TResult> Enumerable<TResult> selectMany(\n      final Enumerable<TSource> source,\n      final Function2<TSource, Integer, Enumerable<TResult>> selector) {\n    return new AbstractEnumerable<TResult>() {\n      public Enumerator<TResult> enumerator() {\n        return new Enumerator<TResult>() {\n          int index = -1;\n          Enumerator<TSource> sourceEnumerator = source.enumerator();\n          Enumerator<TResult> resultEnumerator = Linq4j.emptyEnumerator();\n\n          public TResult current() {\n            return resultEnumerator.current();\n          }\n\n          public boolean moveNext() {\n            for (;;) {\n              if (resultEnumerator.moveNext()) {\n                return true;\n              }\n              if (!sourceEnumerator.moveNext()) {\n                return false;\n              }\n              index += 1;\n              resultEnumerator = selector.apply(sourceEnumerator.current(), index)\n                  .enumerator();\n            }\n          }\n\n          public void reset() {\n            sourceEnumerator.reset();\n            resultEnumerator = Linq4j.emptyEnumerator();\n          }\n\n          public void close() {\n            sourceEnumerator.close();\n            resultEnumerator.close();\n          }\n        };\n      }\n    };\n  }\n","realPath":"linq4j/src/main/java/org/apache/calcite/linq4j/EnumerableDefaults.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":2885,"status":"M"},{"authorDate":"2020-09-29 22:09:05","commitOrder":2,"curCode":"  public static <TSource, TCollection, TResult> Enumerable<TResult> selectMany(\n      final Enumerable<TSource> source,\n      final Function1<TSource, Enumerable<TCollection>> collectionSelector,\n      final Function2<TSource, TCollection, TResult> resultSelector) {\n    return new AbstractEnumerable<TResult>() {\n      @Override public Enumerator<TResult> enumerator() {\n        return new Enumerator<TResult>() {\n          Enumerator<TSource> sourceEnumerator = source.enumerator();\n          Enumerator<TCollection> collectionEnumerator = Linq4j.emptyEnumerator();\n          Enumerator<TResult> resultEnumerator = Linq4j.emptyEnumerator();\n\n          @Override public TResult current() {\n            return resultEnumerator.current();\n          }\n\n          @Override public boolean moveNext() {\n            boolean incremented = false;\n            for (;;) {\n              if (resultEnumerator.moveNext()) {\n                return true;\n              }\n              if (!sourceEnumerator.moveNext()) {\n                return false;\n              }\n              final TSource sourceElement = sourceEnumerator.current();\n              collectionEnumerator = collectionSelector.apply(sourceElement)\n                  .enumerator();\n              resultEnumerator =\n                  new TransformedEnumerator<TCollection, TResult>(collectionEnumerator) {\n                    @Override protected TResult transform(TCollection collectionElement) {\n                      return resultSelector.apply(sourceElement, collectionElement);\n                    }\n                  };\n            }\n          }\n\n          @Override public void reset() {\n            sourceEnumerator.reset();\n            resultEnumerator = Linq4j.emptyEnumerator();\n          }\n\n          @Override public void close() {\n            sourceEnumerator.close();\n            resultEnumerator.close();\n          }\n        };\n      }\n    };\n  }\n","date":"2020-10-07 05:42:47","endLine":3039,"groupId":"7668","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"selectMany","params":"(finalEnumerable<TSource>source@finalFunction1<TSource@Enumerable<TCollection>>collectionSelector@finalFunction2<TSource@TCollection@TResult>resultSelector)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/5f/4d484dbd63f86d5449292ce78f1f05dc972925.src","preCode":"  public static <TSource, TCollection, TResult> Enumerable<TResult> selectMany(\n      final Enumerable<TSource> source,\n      final Function1<TSource, Enumerable<TCollection>> collectionSelector,\n      final Function2<TSource, TCollection, TResult> resultSelector) {\n    return new AbstractEnumerable<TResult>() {\n      public Enumerator<TResult> enumerator() {\n        return new Enumerator<TResult>() {\n          Enumerator<TSource> sourceEnumerator = source.enumerator();\n          Enumerator<TCollection> collectionEnumerator = Linq4j.emptyEnumerator();\n          Enumerator<TResult> resultEnumerator = Linq4j.emptyEnumerator();\n\n          public TResult current() {\n            return resultEnumerator.current();\n          }\n\n          public boolean moveNext() {\n            boolean incremented = false;\n            for (;;) {\n              if (resultEnumerator.moveNext()) {\n                return true;\n              }\n              if (!sourceEnumerator.moveNext()) {\n                return false;\n              }\n              final TSource sourceElement = sourceEnumerator.current();\n              collectionEnumerator = collectionSelector.apply(sourceElement)\n                  .enumerator();\n              resultEnumerator =\n                  new TransformedEnumerator<TCollection, TResult>(collectionEnumerator) {\n                    protected TResult transform(TCollection collectionElement) {\n                      return resultSelector.apply(sourceElement, collectionElement);\n                    }\n                  };\n            }\n          }\n\n          public void reset() {\n            sourceEnumerator.reset();\n            resultEnumerator = Linq4j.emptyEnumerator();\n          }\n\n          public void close() {\n            sourceEnumerator.close();\n            resultEnumerator.close();\n          }\n        };\n      }\n    };\n  }\n","realPath":"linq4j/src/main/java/org/apache/calcite/linq4j/EnumerableDefaults.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":2991,"status":"M"}],"commitId":"66caa54c5e272f8287ca132ca012733898a38768","commitMessage":"@@@[CALCITE-4314] Add missing @Override annotations\n","date":"2020-10-07 05:42:47","modifiedFileCount":"745","status":"M","submitter":"Vladimir Sitnikov"},{"authorTime":"2020-09-30 02:33:15","codes":[{"authorDate":"2020-09-29 22:09:05","commitOrder":3,"curCode":"  public static <TSource, TResult> Enumerable<TResult> selectMany(\n      final Enumerable<TSource> source,\n      final Function2<TSource, Integer, Enumerable<TResult>> selector) {\n    return new AbstractEnumerable<TResult>() {\n      @Override public Enumerator<TResult> enumerator() {\n        return new Enumerator<TResult>() {\n          int index = -1;\n          Enumerator<TSource> sourceEnumerator = source.enumerator();\n          Enumerator<TResult> resultEnumerator = Linq4j.emptyEnumerator();\n\n          @Override public TResult current() {\n            return resultEnumerator.current();\n          }\n\n          @Override public boolean moveNext() {\n            for (;;) {\n              if (resultEnumerator.moveNext()) {\n                return true;\n              }\n              if (!sourceEnumerator.moveNext()) {\n                return false;\n              }\n              index += 1;\n              resultEnumerator = selector.apply(sourceEnumerator.current(), index)\n                  .enumerator();\n            }\n          }\n\n          @Override public void reset() {\n            sourceEnumerator.reset();\n            resultEnumerator = Linq4j.emptyEnumerator();\n          }\n\n          @Override public void close() {\n            sourceEnumerator.close();\n            resultEnumerator.close();\n          }\n        };\n      }\n    };\n  }\n","date":"2020-10-07 05:42:47","endLine":2925,"groupId":"11129","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"selectMany","params":"(finalEnumerable<TSource>source@finalFunction2<TSource@Integer@Enumerable<TResult>>selector)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/5f/4d484dbd63f86d5449292ce78f1f05dc972925.src","preCode":"  public static <TSource, TResult> Enumerable<TResult> selectMany(\n      final Enumerable<TSource> source,\n      final Function2<TSource, Integer, Enumerable<TResult>> selector) {\n    return new AbstractEnumerable<TResult>() {\n      @Override public Enumerator<TResult> enumerator() {\n        return new Enumerator<TResult>() {\n          int index = -1;\n          Enumerator<TSource> sourceEnumerator = source.enumerator();\n          Enumerator<TResult> resultEnumerator = Linq4j.emptyEnumerator();\n\n          @Override public TResult current() {\n            return resultEnumerator.current();\n          }\n\n          @Override public boolean moveNext() {\n            for (;;) {\n              if (resultEnumerator.moveNext()) {\n                return true;\n              }\n              if (!sourceEnumerator.moveNext()) {\n                return false;\n              }\n              index += 1;\n              resultEnumerator = selector.apply(sourceEnumerator.current(), index)\n                  .enumerator();\n            }\n          }\n\n          @Override public void reset() {\n            sourceEnumerator.reset();\n            resultEnumerator = Linq4j.emptyEnumerator();\n          }\n\n          @Override public void close() {\n            sourceEnumerator.close();\n            resultEnumerator.close();\n          }\n        };\n      }\n    };\n  }\n","realPath":"linq4j/src/main/java/org/apache/calcite/linq4j/EnumerableDefaults.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":2885,"status":"N"},{"authorDate":"2020-09-30 02:33:15","commitOrder":3,"curCode":"  public static <TSource, TCollection, TResult> Enumerable<TResult> selectMany(\n      final Enumerable<TSource> source,\n      final Function1<TSource, Enumerable<TCollection>> collectionSelector,\n      final Function2<TSource, TCollection, TResult> resultSelector) {\n    return new AbstractEnumerable<TResult>() {\n      @Override public Enumerator<TResult> enumerator() {\n        return new Enumerator<TResult>() {\n          Enumerator<TSource> sourceEnumerator = source.enumerator();\n          Enumerator<TCollection> collectionEnumerator = Linq4j.emptyEnumerator();\n          Enumerator<TResult> resultEnumerator = Linq4j.emptyEnumerator();\n\n          @Override public TResult current() {\n            return resultEnumerator.current();\n          }\n\n          @Override public boolean moveNext() {\n            for (;;) {\n              if (resultEnumerator.moveNext()) {\n                return true;\n              }\n              if (!sourceEnumerator.moveNext()) {\n                return false;\n              }\n              final TSource sourceElement = sourceEnumerator.current();\n              collectionEnumerator = collectionSelector.apply(sourceElement)\n                  .enumerator();\n              resultEnumerator =\n                  new TransformedEnumerator<TCollection, TResult>(collectionEnumerator) {\n                    @Override protected TResult transform(TCollection collectionElement) {\n                      return resultSelector.apply(sourceElement, collectionElement);\n                    }\n                  };\n            }\n          }\n\n          @Override public void reset() {\n            sourceEnumerator.reset();\n            resultEnumerator = Linq4j.emptyEnumerator();\n          }\n\n          @Override public void close() {\n            sourceEnumerator.close();\n            resultEnumerator.close();\n          }\n        };\n      }\n    };\n  }\n","date":"2020-10-07 05:43:13","endLine":3052,"groupId":"11129","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"selectMany","params":"(finalEnumerable<TSource>source@finalFunction1<TSource@Enumerable<TCollection>>collectionSelector@finalFunction2<TSource@TCollection@TResult>resultSelector)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/00/8ad54fcb0775132ebd8bfcb173f030b0f9fbca.src","preCode":"  public static <TSource, TCollection, TResult> Enumerable<TResult> selectMany(\n      final Enumerable<TSource> source,\n      final Function1<TSource, Enumerable<TCollection>> collectionSelector,\n      final Function2<TSource, TCollection, TResult> resultSelector) {\n    return new AbstractEnumerable<TResult>() {\n      @Override public Enumerator<TResult> enumerator() {\n        return new Enumerator<TResult>() {\n          Enumerator<TSource> sourceEnumerator = source.enumerator();\n          Enumerator<TCollection> collectionEnumerator = Linq4j.emptyEnumerator();\n          Enumerator<TResult> resultEnumerator = Linq4j.emptyEnumerator();\n\n          @Override public TResult current() {\n            return resultEnumerator.current();\n          }\n\n          @Override public boolean moveNext() {\n            boolean incremented = false;\n            for (;;) {\n              if (resultEnumerator.moveNext()) {\n                return true;\n              }\n              if (!sourceEnumerator.moveNext()) {\n                return false;\n              }\n              final TSource sourceElement = sourceEnumerator.current();\n              collectionEnumerator = collectionSelector.apply(sourceElement)\n                  .enumerator();\n              resultEnumerator =\n                  new TransformedEnumerator<TCollection, TResult>(collectionEnumerator) {\n                    @Override protected TResult transform(TCollection collectionElement) {\n                      return resultSelector.apply(sourceElement, collectionElement);\n                    }\n                  };\n            }\n          }\n\n          @Override public void reset() {\n            sourceEnumerator.reset();\n            resultEnumerator = Linq4j.emptyEnumerator();\n          }\n\n          @Override public void close() {\n            sourceEnumerator.close();\n            resultEnumerator.close();\n          }\n        };\n      }\n    };\n  }\n","realPath":"linq4j/src/main/java/org/apache/calcite/linq4j/EnumerableDefaults.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":3005,"status":"M"}],"commitId":"11d75942a76d859738afaf9d8be4b90c9c9a5d4e","commitMessage":"@@@[CALCITE-4314] Remove unused fields.  methods.  and variables\n\nSee\nhttps://errorprone.info/bugpattern/UnusedMethod\nhttps://errorprone.info/bugpattern/UnusedVariable\n","date":"2020-10-07 05:43:13","modifiedFileCount":"79","status":"M","submitter":"Vladimir Sitnikov"}]
