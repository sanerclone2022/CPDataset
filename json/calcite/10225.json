[{"authorTime":"2016-04-15 05:31:10","codes":[{"authorDate":"2014-11-14 10:11:34","commitOrder":3,"curCode":"  @Override public RelDataType deriveRowType() {\n    final List<RelDataTypeField> fieldList = table.getRowType().getFieldList();\n    final RelDataTypeFactory.FieldInfoBuilder builder =\n        getCluster().getTypeFactory().builder();\n    for (int field : fields) {\n      builder.add(fieldList.get(field));\n    }\n    return builder.build();\n  }\n","date":"2014-11-14 10:22:06","endLine":76,"groupId":"2072","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"deriveRowType","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/8a/53e84c345f4f51992f0ffd0abcbca8b25c53d7.src","preCode":"  @Override public RelDataType deriveRowType() {\n    final List<RelDataTypeField> fieldList = table.getRowType().getFieldList();\n    final RelDataTypeFactory.FieldInfoBuilder builder =\n        getCluster().getTypeFactory().builder();\n    for (int field : fields) {\n      builder.add(fieldList.get(field));\n    }\n    return builder.build();\n  }\n","realPath":"example/csv/src/main/java/org/apache/calcite/adapter/csv/CsvTableScan.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":68,"status":"NB"},{"authorDate":"2016-04-15 05:31:10","commitOrder":3,"curCode":"  @Override public RelDataType deriveRowType() {\n    final List<RelDataTypeField> fieldList = table.getRowType().getFieldList();\n    final RelDataTypeFactory.FieldInfoBuilder builder =\n        getCluster().getTypeFactory().builder();\n    for (int field : fields) {\n      builder.add(fieldList.get(field));\n    }\n    return builder.build();\n  }\n","date":"2017-02-23 13:09:47","endLine":77,"groupId":"2072","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"deriveRowType","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/bd/d1d508b65ee5236fad0b1e526a90b9061a140b.src","preCode":"  @Override public RelDataType deriveRowType() {\n    final List<RelDataTypeField> fieldList = table.getRowType().getFieldList();\n    final RelDataTypeFactory.FieldInfoBuilder builder =\n        getCluster().getTypeFactory().builder();\n    for (int field : fields) {\n      builder.add(fieldList.get(field));\n    }\n    return builder.build();\n  }\n","realPath":"file/src/main/java/org/apache/calcite/adapter/file/FileTableScan.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":69,"status":"B"}],"commitId":"cf46d3be19f701ad056aba3b60a701b962e0f1b0","commitMessage":"@@@[CALCITE-884] Web adapter (Henry Olson)\n\nSome fix-ups (Julian Hyde):\n* Upgrade calcite;\n* Upgrade natty.  jsoup;\n* Rename files.  and move to org.apache.calcite.adapter.file package;\n* Add file adapter documentation and history (based on original README\n  and HISTORY);\n* Add EMPS.html and DEPTS.html examples.\n","date":"2017-02-23 13:09:47","modifiedFileCount":"1","status":"M","submitter":"Henry Olson"},{"authorTime":"2017-08-06 15:29:03","codes":[{"authorDate":"2017-08-06 15:29:03","commitOrder":4,"curCode":"  @Override public RelDataType deriveRowType() {\n    final List<RelDataTypeField> fieldList = table.getRowType().getFieldList();\n    final RelDataTypeFactory.Builder builder =\n        getCluster().getTypeFactory().builder();\n    for (int field : fields) {\n      builder.add(fieldList.get(field));\n    }\n    return builder.build();\n  }\n","date":"2017-08-08 00:14:46","endLine":76,"groupId":"10225","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"deriveRowType","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/a6/67a4499d07a633d2de3330d4569d3d70375462.src","preCode":"  @Override public RelDataType deriveRowType() {\n    final List<RelDataTypeField> fieldList = table.getRowType().getFieldList();\n    final RelDataTypeFactory.FieldInfoBuilder builder =\n        getCluster().getTypeFactory().builder();\n    for (int field : fields) {\n      builder.add(fieldList.get(field));\n    }\n    return builder.build();\n  }\n","realPath":"example/csv/src/main/java/org/apache/calcite/adapter/csv/CsvTableScan.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":68,"status":"M"},{"authorDate":"2017-08-06 15:29:03","commitOrder":4,"curCode":"  @Override public RelDataType deriveRowType() {\n    final List<RelDataTypeField> fieldList = table.getRowType().getFieldList();\n    final RelDataTypeFactory.Builder builder =\n        getCluster().getTypeFactory().builder();\n    for (int field : fields) {\n      builder.add(fieldList.get(field));\n    }\n    return builder.build();\n  }\n","date":"2017-08-08 00:14:46","endLine":77,"groupId":"10225","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"deriveRowType","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/f1/00cd4b7006aaad9ea8739bf5ead20e5da11981.src","preCode":"  @Override public RelDataType deriveRowType() {\n    final List<RelDataTypeField> fieldList = table.getRowType().getFieldList();\n    final RelDataTypeFactory.FieldInfoBuilder builder =\n        getCluster().getTypeFactory().builder();\n    for (int field : fields) {\n      builder.add(fieldList.get(field));\n    }\n    return builder.build();\n  }\n","realPath":"file/src/main/java/org/apache/calcite/adapter/file/FileTableScan.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":69,"status":"M"}],"commitId":"a98b21ea33e80d801dd77cd215d23bd0debd8b67","commitMessage":"@@@[CALCITE-1929] Deprecate class RelDataTypeFactory.FieldInfoBuilder\n\nReplace uses of FieldInfoBuilder with new base class\nRelDataTypeFactory.Builder that does not implement deprecated class\nFieldInfo.\n","date":"2017-08-08 00:14:46","modifiedFileCount":"37","status":"M","submitter":"Julian Hyde"}]
