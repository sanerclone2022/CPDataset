[{"authorTime":"2017-06-17 05:30:10","codes":[{"authorDate":"2017-06-17 05:30:10","commitOrder":1,"curCode":"  @Test public void testDeleteExtendedColumnFailCollision() {\n    final Sql s = sql(\"?\").withExtendedCatalog();\n    final String sql0 = \"delete from EMP_MODIFIABLEVIEW2(^empno^ BOOLEAN)\\n\"\n        + \"where sal > 10\";\n    final String error0 = \"Cannot assign to target field 'EMPNO' of type\"\n        + \" INTEGER NOT NULL from source field 'EMPNO' of type BOOLEAN\";\n    s.sql(sql0).fails(error0);\n    final String sql1 = \"delete from EMP_MODIFIABLEVIEW2(^empno^ INTEGER)\\n\"\n        + \"where sal > 10\";\n    final String error = \"Cannot assign to target field 'EMPNO' of type\"\n        + \" INTEGER NOT NULL from source field 'EMPNO' of type INTEGER\";\n    s.sql(sql1).fails(error);\n    final String sql2 = \"delete from EMP_MODIFIABLEVIEW2(^\\\"EMPNO\\\"^ INTEGER)\"\n        + \" where sal > 10\";\n    s.sql(sql2).fails(error);\n    s.sql(sql1).fails(error);\n  }\n","date":"2017-07-04 12:28:03","endLine":10110,"groupId":"11096","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testDeleteExtendedColumnFailCollision","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/d2/62fa653213a018c840481c599e6577672ef3fd.src","preCode":"  @Test public void testDeleteExtendedColumnFailCollision() {\n    final Sql s = sql(\"?\").withExtendedCatalog();\n    final String sql0 = \"delete from EMP_MODIFIABLEVIEW2(^empno^ BOOLEAN)\\n\"\n        + \"where sal > 10\";\n    final String error0 = \"Cannot assign to target field 'EMPNO' of type\"\n        + \" INTEGER NOT NULL from source field 'EMPNO' of type BOOLEAN\";\n    s.sql(sql0).fails(error0);\n    final String sql1 = \"delete from EMP_MODIFIABLEVIEW2(^empno^ INTEGER)\\n\"\n        + \"where sal > 10\";\n    final String error = \"Cannot assign to target field 'EMPNO' of type\"\n        + \" INTEGER NOT NULL from source field 'EMPNO' of type INTEGER\";\n    s.sql(sql1).fails(error);\n    final String sql2 = \"delete from EMP_MODIFIABLEVIEW2(^\\\"EMPNO\\\"^ INTEGER)\"\n        + \" where sal > 10\";\n    s.sql(sql2).fails(error);\n    s.sql(sql1).fails(error);\n  }\n","realPath":"core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":10094,"status":"B"},{"authorDate":"2017-06-17 05:30:10","commitOrder":1,"curCode":"  @Test public void testDeleteExtendedColumnModifiableViewFailCollision() {\n    final Sql s = sql(\"?\").withExtendedCatalog();\n    final String sql0 = \"delete from EMP_MODIFIABLEVIEW(^deptno^ BOOLEAN)\\n\"\n        + \"where sal > 10\";\n    final String error = \"Cannot assign to target field 'DEPTNO' of type\"\n        + \" INTEGER from source field 'DEPTNO' of type BOOLEAN\";\n    s.sql(sql0).fails(error);\n    final String sql1 = \"delete from EMP_MODIFIABLEVIEW(^\\\"DEPTNO\\\"^ BOOLEAN)\"\n        + \" where sal > 10\";\n    s.sql(sql1).fails(error);\n  }\n","date":"2017-07-04 12:28:03","endLine":10122,"groupId":"11096","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testDeleteExtendedColumnModifiableViewFailCollision","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/d2/62fa653213a018c840481c599e6577672ef3fd.src","preCode":"  @Test public void testDeleteExtendedColumnModifiableViewFailCollision() {\n    final Sql s = sql(\"?\").withExtendedCatalog();\n    final String sql0 = \"delete from EMP_MODIFIABLEVIEW(^deptno^ BOOLEAN)\\n\"\n        + \"where sal > 10\";\n    final String error = \"Cannot assign to target field 'DEPTNO' of type\"\n        + \" INTEGER from source field 'DEPTNO' of type BOOLEAN\";\n    s.sql(sql0).fails(error);\n    final String sql1 = \"delete from EMP_MODIFIABLEVIEW(^\\\"DEPTNO\\\"^ BOOLEAN)\"\n        + \" where sal > 10\";\n    s.sql(sql1).fails(error);\n  }\n","realPath":"core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":10112,"status":"B"}],"commitId":"df826434d7c674caa29a0d1709a52f3e1013baf5","commitMessage":"@@@Split the mock catalog into \"core\" and \"extended\"\n\nNot only the extended catalog take longer to create.  but it creates\nviews.  which require parsing and validation.  and therefore a \"simple\"\nvalidation test is no longer simple.  and tends to hit a lot of spurious\nbreak points before the real action starts happening. For most tests. \nthe core catalog is sufficient.\n","date":"2017-07-04 12:28:03","modifiedFileCount":"8","status":"B","submitter":"Julian Hyde"},{"authorTime":"2020-04-02 10:39:10","codes":[{"authorDate":"2020-04-02 10:39:10","commitOrder":2,"curCode":"  @Test void testDeleteExtendedColumnFailCollision() {\n    final Sql s = sql(\"?\").withExtendedCatalog();\n    final String sql0 = \"delete from EMP_MODIFIABLEVIEW2(^empno^ BOOLEAN)\\n\"\n        + \"where sal > 10\";\n    final String error0 = \"Cannot assign to target field 'EMPNO' of type\"\n        + \" INTEGER NOT NULL from source field 'EMPNO' of type BOOLEAN\";\n    s.sql(sql0).fails(error0);\n    final String sql1 = \"delete from EMP_MODIFIABLEVIEW2(^empno^ INTEGER)\\n\"\n        + \"where sal > 10\";\n    final String error = \"Cannot assign to target field 'EMPNO' of type\"\n        + \" INTEGER NOT NULL from source field 'EMPNO' of type INTEGER\";\n    s.sql(sql1).fails(error);\n    final String sql2 = \"delete from EMP_MODIFIABLEVIEW2(^\\\"EMPNO\\\"^ INTEGER)\"\n        + \" where sal > 10\";\n    s.sql(sql2).fails(error);\n    s.sql(sql1).fails(error);\n  }\n","date":"2020-04-06 04:57:49","endLine":10777,"groupId":"101216","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testDeleteExtendedColumnFailCollision","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/b6/f9115009e28a63267b183e3a0a9a5e7f343a61.src","preCode":"  @Test public void testDeleteExtendedColumnFailCollision() {\n    final Sql s = sql(\"?\").withExtendedCatalog();\n    final String sql0 = \"delete from EMP_MODIFIABLEVIEW2(^empno^ BOOLEAN)\\n\"\n        + \"where sal > 10\";\n    final String error0 = \"Cannot assign to target field 'EMPNO' of type\"\n        + \" INTEGER NOT NULL from source field 'EMPNO' of type BOOLEAN\";\n    s.sql(sql0).fails(error0);\n    final String sql1 = \"delete from EMP_MODIFIABLEVIEW2(^empno^ INTEGER)\\n\"\n        + \"where sal > 10\";\n    final String error = \"Cannot assign to target field 'EMPNO' of type\"\n        + \" INTEGER NOT NULL from source field 'EMPNO' of type INTEGER\";\n    s.sql(sql1).fails(error);\n    final String sql2 = \"delete from EMP_MODIFIABLEVIEW2(^\\\"EMPNO\\\"^ INTEGER)\"\n        + \" where sal > 10\";\n    s.sql(sql2).fails(error);\n    s.sql(sql1).fails(error);\n  }\n","realPath":"core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":10761,"status":"M"},{"authorDate":"2020-04-02 10:39:10","commitOrder":2,"curCode":"  @Test void testDeleteExtendedColumnModifiableViewFailCollision() {\n    final Sql s = sql(\"?\").withExtendedCatalog();\n    final String sql0 = \"delete from EMP_MODIFIABLEVIEW(^deptno^ BOOLEAN)\\n\"\n        + \"where sal > 10\";\n    final String error = \"Cannot assign to target field 'DEPTNO' of type\"\n        + \" INTEGER from source field 'DEPTNO' of type BOOLEAN\";\n    s.sql(sql0).fails(error);\n    final String sql1 = \"delete from EMP_MODIFIABLEVIEW(^\\\"DEPTNO\\\"^ BOOLEAN)\"\n        + \" where sal > 10\";\n    s.sql(sql1).fails(error);\n  }\n","date":"2020-04-06 04:57:49","endLine":10789,"groupId":"101216","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testDeleteExtendedColumnModifiableViewFailCollision","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/b6/f9115009e28a63267b183e3a0a9a5e7f343a61.src","preCode":"  @Test public void testDeleteExtendedColumnModifiableViewFailCollision() {\n    final Sql s = sql(\"?\").withExtendedCatalog();\n    final String sql0 = \"delete from EMP_MODIFIABLEVIEW(^deptno^ BOOLEAN)\\n\"\n        + \"where sal > 10\";\n    final String error = \"Cannot assign to target field 'DEPTNO' of type\"\n        + \" INTEGER from source field 'DEPTNO' of type BOOLEAN\";\n    s.sql(sql0).fails(error);\n    final String sql1 = \"delete from EMP_MODIFIABLEVIEW(^\\\"DEPTNO\\\"^ BOOLEAN)\"\n        + \" where sal > 10\";\n    s.sql(sql1).fails(error);\n  }\n","realPath":"core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":10779,"status":"M"}],"commitId":"9492dd4146f63ddc028010d6c4e86f6a5cb29a8d","commitMessage":"@@@[CALCITE-3892] Make junit test classes and methods non-public where possible\n\nPrior to junit 5.  classes and methods had to be public. This is no\nlonger the case.\n\nSome classes need to remain public because they are referenced from\nelsewhere.  or if they use reflection somehow. The remaining 'public'\nkeyword will be informative to maintainers.\n","date":"2020-04-06 04:57:49","modifiedFileCount":"196","status":"M","submitter":"Julian Hyde"}]
