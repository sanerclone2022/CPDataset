[{"authorTime":"2019-09-07 07:51:19","codes":[{"authorDate":"2019-09-07 07:51:19","commitOrder":6,"curCode":"  @Test public void testUnparseableIntervalQualifiers() {\n    \r\n    expr(\"interval '1^'^\")\n        .fails(\"Encountered \\\"<EOF>\\\" at line 1, column 12\\\\.\\n\"\n            + \"Was expecting one of:\\n\"\n            + \"    \\\"DAY\\\" \\\\.\\\\.\\\\.\\n\"\n            + \"    \\\"HOUR\\\" \\\\.\\\\.\\\\.\\n\"\n            + \"    \\\"MINUTE\\\" \\\\.\\\\.\\\\.\\n\"\n            + \"    \\\"MONTH\\\" \\\\.\\\\.\\\\.\\n\"\n            + \"    \\\"SECOND\\\" \\\\.\\\\.\\\\.\\n\"\n            + \"    \\\"YEAR\\\" \\\\.\\\\.\\\\.\\n\"\n            + \"    \");\n\n    \r\n    expr(\"interval '1' year ^to^ year\")\n        .fails(\"(?s)Encountered \\\"to year\\\" at line 1, column 19.\\n\"\n            + \"Was expecting one of:\\n\"\n            + \"    <EOF> \\n\"\n            + \"    \\\"\\\\(\\\" \\\\.\\\\.\\\\.\\n\"\n            + \"    \\\"\\\\.\\\" \\\\.\\\\.\\\\..*\");\n    expr(\"interval '1-2' year ^to^ day\")\n        .fails(ANY);\n    expr(\"interval '1-2' year ^to^ hour\")\n        .fails(ANY);\n    expr(\"interval '1-2' year ^to^ minute\")\n        .fails(ANY);\n    expr(\"interval '1-2' year ^to^ second\")\n        .fails(ANY);\n\n    expr(\"interval '1-2' month ^to^ year\")\n        .fails(ANY);\n    expr(\"interval '1-2' month ^to^ month\")\n        .fails(ANY);\n    expr(\"interval '1-2' month ^to^ day\")\n        .fails(ANY);\n    expr(\"interval '1-2' month ^to^ hour\")\n        .fails(ANY);\n    expr(\"interval '1-2' month ^to^ minute\")\n        .fails(ANY);\n    expr(\"interval '1-2' month ^to^ second\")\n        .fails(ANY);\n\n    expr(\"interval '1-2' day ^to^ year\")\n        .fails(ANY);\n    expr(\"interval '1-2' day ^to^ month\")\n        .fails(ANY);\n    expr(\"interval '1-2' day ^to^ day\")\n        .fails(ANY);\n\n    expr(\"interval '1-2' hour ^to^ year\")\n        .fails(ANY);\n    expr(\"interval '1-2' hour ^to^ month\")\n        .fails(ANY);\n    expr(\"interval '1-2' hour ^to^ day\")\n        .fails(ANY);\n    expr(\"interval '1-2' hour ^to^ hour\")\n        .fails(ANY);\n\n    expr(\"interval '1-2' minute ^to^ year\")\n        .fails(ANY);\n    expr(\"interval '1-2' minute ^to^ month\")\n        .fails(ANY);\n    expr(\"interval '1-2' minute ^to^ day\")\n        .fails(ANY);\n    expr(\"interval '1-2' minute ^to^ hour\")\n        .fails(ANY);\n    expr(\"interval '1-2' minute ^to^ minute\")\n        .fails(ANY);\n\n    expr(\"interval '1-2' second ^to^ year\")\n        .fails(ANY);\n    expr(\"interval '1-2' second ^to^ month\")\n        .fails(ANY);\n    expr(\"interval '1-2' second ^to^ day\")\n        .fails(ANY);\n    expr(\"interval '1-2' second ^to^ hour\")\n        .fails(ANY);\n    expr(\"interval '1-2' second ^to^ minute\")\n        .fails(ANY);\n    expr(\"interval '1-2' second ^to^ second\")\n        .fails(ANY);\n\n    \r\n    expr(\"interval '1' year(3) ^to^ year\")\n        .fails(ANY);\n    expr(\"interval '1-2' year(3) ^to^ day\")\n        .fails(ANY);\n    expr(\"interval '1-2' year(3) ^to^ hour\")\n        .fails(ANY);\n    expr(\"interval '1-2' year(3) ^to^ minute\")\n        .fails(ANY);\n    expr(\"interval '1-2' year(3) ^to^ second\")\n        .fails(ANY);\n\n    expr(\"interval '1-2' month(3) ^to^ year\")\n        .fails(ANY);\n    expr(\"interval '1-2' month(3) ^to^ month\")\n        .fails(ANY);\n    expr(\"interval '1-2' month(3) ^to^ day\")\n        .fails(ANY);\n    expr(\"interval '1-2' month(3) ^to^ hour\")\n        .fails(ANY);\n    expr(\"interval '1-2' month(3) ^to^ minute\")\n        .fails(ANY);\n    expr(\"interval '1-2' month(3) ^to^ second\")\n        .fails(ANY);\n\n    expr(\"interval '1-2' day(3) ^to^ year\")\n        .fails(ANY);\n    expr(\"interval '1-2' day(3) ^to^ month\")\n        .fails(ANY);\n\n    expr(\"interval '1-2' hour(3) ^to^ year\")\n        .fails(ANY);\n    expr(\"interval '1-2' hour(3) ^to^ month\")\n        .fails(ANY);\n    expr(\"interval '1-2' hour(3) ^to^ day\")\n        .fails(ANY);\n\n    expr(\"interval '1-2' minute(3) ^to^ year\")\n        .fails(ANY);\n    expr(\"interval '1-2' minute(3) ^to^ month\")\n        .fails(ANY);\n    expr(\"interval '1-2' minute(3) ^to^ day\")\n        .fails(ANY);\n    expr(\"interval '1-2' minute(3) ^to^ hour\")\n        .fails(ANY);\n\n    expr(\"interval '1-2' second(3) ^to^ year\")\n        .fails(ANY);\n    expr(\"interval '1-2' second(3) ^to^ month\")\n        .fails(ANY);\n    expr(\"interval '1-2' second(3) ^to^ day\")\n        .fails(ANY);\n    expr(\"interval '1-2' second(3) ^to^ hour\")\n        .fails(ANY);\n    expr(\"interval '1-2' second(3) ^to^ minute\")\n        .fails(ANY);\n\n    \r\n    expr(\"interval '1' year ^to^ year(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' year to month^(^2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' year ^to^ day(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' year ^to^ hour(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' year ^to^ minute(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' year ^to^ second(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' year ^to^ second(2,6)\")\n        .fails(ANY);\n\n    expr(\"interval '1-2' month ^to^ year(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' month ^to^ month(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' month ^to^ day(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' month ^to^ hour(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' month ^to^ minute(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' month ^to^ second(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' month ^to^ second(2,6)\")\n        .fails(ANY);\n\n    expr(\"interval '1-2' day ^to^ year(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' day ^to^ month(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' day ^to^ day(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' day to hour^(^2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' day to minute^(^2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' day to second(2^,^6)\")\n        .fails(ANY);\n\n    expr(\"interval '1-2' hour ^to^ year(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' hour ^to^ month(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' hour ^to^ day(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' hour ^to^ hour(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' hour to minute^(^2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' hour to second(2^,^6)\")\n        .fails(ANY);\n\n    expr(\"interval '1-2' minute ^to^ year(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' minute ^to^ month(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' minute ^to^ day(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' minute ^to^ hour(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' minute ^to^ minute(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' minute to second(2^,^6)\")\n        .fails(ANY);\n\n    expr(\"interval '1-2' second ^to^ year(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' second ^to^ month(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' second ^to^ day(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' second ^to^ hour(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' second ^to^ minute(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' second ^to^ second(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' second ^to^ second(2,6)\")\n        .fails(ANY);\n\n    \r\n    expr(\"interval '1' year(3) ^to^ year(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' year(3) to month^(^2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' year(3) ^to^ day(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' year(3) ^to^ hour(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' year(3) ^to^ minute(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' year(3) ^to^ second(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' year(3) ^to^ second(2,6)\")\n        .fails(ANY);\n\n    expr(\"interval '1-2' month(3) ^to^ year(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' month(3) ^to^ month(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' month(3) ^to^ day(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' month(3) ^to^ hour(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' month(3) ^to^ minute(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' month(3) ^to^ second(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' month(3) ^to^ second(2,6)\")\n        .fails(ANY);\n  }\n","date":"2019-09-24 02:59:18","endLine":6663,"groupId":"6908","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testUnparseableIntervalQualifiers","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/6b/18efc30e26712f7989a0e69015daabf5819bf3.src","preCode":"  @Test public void testUnparseableIntervalQualifiers() {\n    \r\n    expr(\"interval '1^'^\")\n        .fails(\"Encountered \\\"<EOF>\\\" at line 1, column 12\\\\.\\n\"\n            + \"Was expecting one of:\\n\"\n            + \"    \\\"DAY\\\" \\\\.\\\\.\\\\.\\n\"\n            + \"    \\\"HOUR\\\" \\\\.\\\\.\\\\.\\n\"\n            + \"    \\\"MINUTE\\\" \\\\.\\\\.\\\\.\\n\"\n            + \"    \\\"MONTH\\\" \\\\.\\\\.\\\\.\\n\"\n            + \"    \\\"SECOND\\\" \\\\.\\\\.\\\\.\\n\"\n            + \"    \\\"YEAR\\\" \\\\.\\\\.\\\\.\\n\"\n            + \"    \");\n\n    \r\n    expr(\"interval '1' year ^to^ year\")\n        .fails(\"(?s)Encountered \\\"to year\\\" at line 1, column 19.\\n\"\n            + \"Was expecting one of:\\n\"\n            + \"    <EOF> \\n\"\n            + \"    \\\"\\\\(\\\" \\\\.\\\\.\\\\.\\n\"\n            + \"    \\\"\\\\.\\\" \\\\.\\\\.\\\\..*\");\n    expr(\"interval '1-2' year ^to^ day\")\n        .fails(ANY);\n    expr(\"interval '1-2' year ^to^ hour\")\n        .fails(ANY);\n    expr(\"interval '1-2' year ^to^ minute\")\n        .fails(ANY);\n    expr(\"interval '1-2' year ^to^ second\")\n        .fails(ANY);\n\n    expr(\"interval '1-2' month ^to^ year\")\n        .fails(ANY);\n    expr(\"interval '1-2' month ^to^ month\")\n        .fails(ANY);\n    expr(\"interval '1-2' month ^to^ day\")\n        .fails(ANY);\n    expr(\"interval '1-2' month ^to^ hour\")\n        .fails(ANY);\n    expr(\"interval '1-2' month ^to^ minute\")\n        .fails(ANY);\n    expr(\"interval '1-2' month ^to^ second\")\n        .fails(ANY);\n\n    expr(\"interval '1-2' day ^to^ year\")\n        .fails(ANY);\n    expr(\"interval '1-2' day ^to^ month\")\n        .fails(ANY);\n    expr(\"interval '1-2' day ^to^ day\")\n        .fails(ANY);\n\n    expr(\"interval '1-2' hour ^to^ year\")\n        .fails(ANY);\n    expr(\"interval '1-2' hour ^to^ month\")\n        .fails(ANY);\n    expr(\"interval '1-2' hour ^to^ day\")\n        .fails(ANY);\n    expr(\"interval '1-2' hour ^to^ hour\")\n        .fails(ANY);\n\n    expr(\"interval '1-2' minute ^to^ year\")\n        .fails(ANY);\n    expr(\"interval '1-2' minute ^to^ month\")\n        .fails(ANY);\n    expr(\"interval '1-2' minute ^to^ day\")\n        .fails(ANY);\n    expr(\"interval '1-2' minute ^to^ hour\")\n        .fails(ANY);\n    expr(\"interval '1-2' minute ^to^ minute\")\n        .fails(ANY);\n\n    expr(\"interval '1-2' second ^to^ year\")\n        .fails(ANY);\n    expr(\"interval '1-2' second ^to^ month\")\n        .fails(ANY);\n    expr(\"interval '1-2' second ^to^ day\")\n        .fails(ANY);\n    expr(\"interval '1-2' second ^to^ hour\")\n        .fails(ANY);\n    expr(\"interval '1-2' second ^to^ minute\")\n        .fails(ANY);\n    expr(\"interval '1-2' second ^to^ second\")\n        .fails(ANY);\n\n    \r\n    expr(\"interval '1' year(3) ^to^ year\")\n        .fails(ANY);\n    expr(\"interval '1-2' year(3) ^to^ day\")\n        .fails(ANY);\n    expr(\"interval '1-2' year(3) ^to^ hour\")\n        .fails(ANY);\n    expr(\"interval '1-2' year(3) ^to^ minute\")\n        .fails(ANY);\n    expr(\"interval '1-2' year(3) ^to^ second\")\n        .fails(ANY);\n\n    expr(\"interval '1-2' month(3) ^to^ year\")\n        .fails(ANY);\n    expr(\"interval '1-2' month(3) ^to^ month\")\n        .fails(ANY);\n    expr(\"interval '1-2' month(3) ^to^ day\")\n        .fails(ANY);\n    expr(\"interval '1-2' month(3) ^to^ hour\")\n        .fails(ANY);\n    expr(\"interval '1-2' month(3) ^to^ minute\")\n        .fails(ANY);\n    expr(\"interval '1-2' month(3) ^to^ second\")\n        .fails(ANY);\n\n    expr(\"interval '1-2' day(3) ^to^ year\")\n        .fails(ANY);\n    expr(\"interval '1-2' day(3) ^to^ month\")\n        .fails(ANY);\n\n    expr(\"interval '1-2' hour(3) ^to^ year\")\n        .fails(ANY);\n    expr(\"interval '1-2' hour(3) ^to^ month\")\n        .fails(ANY);\n    expr(\"interval '1-2' hour(3) ^to^ day\")\n        .fails(ANY);\n\n    expr(\"interval '1-2' minute(3) ^to^ year\")\n        .fails(ANY);\n    expr(\"interval '1-2' minute(3) ^to^ month\")\n        .fails(ANY);\n    expr(\"interval '1-2' minute(3) ^to^ day\")\n        .fails(ANY);\n    expr(\"interval '1-2' minute(3) ^to^ hour\")\n        .fails(ANY);\n\n    expr(\"interval '1-2' second(3) ^to^ year\")\n        .fails(ANY);\n    expr(\"interval '1-2' second(3) ^to^ month\")\n        .fails(ANY);\n    expr(\"interval '1-2' second(3) ^to^ day\")\n        .fails(ANY);\n    expr(\"interval '1-2' second(3) ^to^ hour\")\n        .fails(ANY);\n    expr(\"interval '1-2' second(3) ^to^ minute\")\n        .fails(ANY);\n\n    \r\n    expr(\"interval '1' year ^to^ year(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' year to month^(^2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' year ^to^ day(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' year ^to^ hour(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' year ^to^ minute(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' year ^to^ second(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' year ^to^ second(2,6)\")\n        .fails(ANY);\n\n    expr(\"interval '1-2' month ^to^ year(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' month ^to^ month(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' month ^to^ day(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' month ^to^ hour(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' month ^to^ minute(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' month ^to^ second(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' month ^to^ second(2,6)\")\n        .fails(ANY);\n\n    expr(\"interval '1-2' day ^to^ year(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' day ^to^ month(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' day ^to^ day(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' day to hour^(^2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' day to minute^(^2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' day to second(2^,^6)\")\n        .fails(ANY);\n\n    expr(\"interval '1-2' hour ^to^ year(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' hour ^to^ month(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' hour ^to^ day(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' hour ^to^ hour(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' hour to minute^(^2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' hour to second(2^,^6)\")\n        .fails(ANY);\n\n    expr(\"interval '1-2' minute ^to^ year(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' minute ^to^ month(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' minute ^to^ day(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' minute ^to^ hour(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' minute ^to^ minute(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' minute to second(2^,^6)\")\n        .fails(ANY);\n\n    expr(\"interval '1-2' second ^to^ year(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' second ^to^ month(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' second ^to^ day(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' second ^to^ hour(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' second ^to^ minute(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' second ^to^ second(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' second ^to^ second(2,6)\")\n        .fails(ANY);\n\n    \r\n    expr(\"interval '1' year(3) ^to^ year(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' year(3) to month^(^2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' year(3) ^to^ day(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' year(3) ^to^ hour(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' year(3) ^to^ minute(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' year(3) ^to^ second(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' year(3) ^to^ second(2,6)\")\n        .fails(ANY);\n\n    expr(\"interval '1-2' month(3) ^to^ year(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' month(3) ^to^ month(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' month(3) ^to^ day(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' month(3) ^to^ hour(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' month(3) ^to^ minute(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' month(3) ^to^ second(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' month(3) ^to^ second(2,6)\")\n        .fails(ANY);\n  }\n","realPath":"core/src/test/java/org/apache/calcite/sql/parser/SqlParserTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":6409,"status":"MB"},{"authorDate":"2019-09-07 07:51:19","commitOrder":6,"curCode":"  @Test public void testUnparseableIntervalQualifiers2() {\n    expr(\"interval '1-2' day(3) ^to^ year(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' day(3) ^to^ month(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' day(3) ^to^ day(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' day(3) to hour^(^2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' day(3) to minute^(^2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' day(3) to second(2^,^6)\")\n        .fails(ANY);\n\n    expr(\"interval '1-2' hour(3) ^to^ year(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' hour(3) ^to^ month(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' hour(3) ^to^ day(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' hour(3) ^to^ hour(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' hour(3) to minute^(^2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' hour(3) to second(2^,^6)\")\n        .fails(ANY);\n\n    expr(\"interval '1-2' minute(3) ^to^ year(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' minute(3) ^to^ month(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' minute(3) ^to^ day(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' minute(3) ^to^ hour(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' minute(3) ^to^ minute(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' minute(3) to second(2^,^6)\")\n        .fails(ANY);\n\n    expr(\"interval '1-2' second(3) ^to^ year(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' second(3) ^to^ month(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' second(3) ^to^ day(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' second(3) ^to^ hour(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' second(3) ^to^ minute(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' second(3) ^to^ second(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' second(3) ^to^ second(2,6)\")\n        .fails(ANY);\n\n    \r\n    expr(\"INTERVAL '0' YEAR(^-^1)\")\n        .fails(ANY);\n    expr(\"INTERVAL '0-0' YEAR(^-^1) TO MONTH\")\n        .fails(ANY);\n    expr(\"INTERVAL '0' MONTH(^-^1)\")\n        .fails(ANY);\n    expr(\"INTERVAL '0' DAY(^-^1)\")\n        .fails(ANY);\n    expr(\"INTERVAL '0 0' DAY(^-^1) TO HOUR\")\n        .fails(ANY);\n    expr(\"INTERVAL '0 0' DAY(^-^1) TO MINUTE\")\n        .fails(ANY);\n    expr(\"INTERVAL '0 0:0:0' DAY(^-^1) TO SECOND\")\n        .fails(ANY);\n    expr(\"INTERVAL '0 0:0:0' DAY TO SECOND(^-^1)\")\n        .fails(ANY);\n    expr(\"INTERVAL '0' HOUR(^-^1)\")\n        .fails(ANY);\n    expr(\"INTERVAL '0:0' HOUR(^-^1) TO MINUTE\")\n        .fails(ANY);\n    expr(\"INTERVAL '0:0:0' HOUR(^-^1) TO SECOND\")\n        .fails(ANY);\n    expr(\"INTERVAL '0:0:0' HOUR TO SECOND(^-^1)\")\n        .fails(ANY);\n    expr(\"INTERVAL '0' MINUTE(^-^1)\")\n        .fails(ANY);\n    expr(\"INTERVAL '0:0' MINUTE(^-^1) TO SECOND\")\n        .fails(ANY);\n    expr(\"INTERVAL '0:0' MINUTE TO SECOND(^-^1)\")\n        .fails(ANY);\n    expr(\"INTERVAL '0' SECOND(^-^1)\")\n        .fails(ANY);\n    expr(\"INTERVAL '0' SECOND(1, ^-^1)\")\n        .fails(ANY);\n\n    \r\n    \r\n    expr(\"interval '1' day(3) ^to^ day\")\n        .fails(ANY);\n    expr(\"interval '1' hour(3) ^to^ hour\")\n        .fails(ANY);\n    expr(\"interval '1' minute(3) ^to^ minute\")\n        .fails(ANY);\n    expr(\"interval '1' second(3) ^to^ second\")\n        .fails(ANY);\n    expr(\"interval '1' second(3,1) ^to^ second\")\n        .fails(ANY);\n    expr(\"interval '1' second(2,3) ^to^ second\")\n        .fails(ANY);\n    expr(\"interval '1' second(2,2) ^to^ second(3)\")\n        .fails(ANY);\n\n    \r\n    expr(\"INTERVAL '2' ^MILLENNIUM^\")\n        .fails(ANY);\n    expr(\"INTERVAL '1-2' ^MILLENNIUM^ TO CENTURY\")\n        .fails(ANY);\n    expr(\"INTERVAL '10' ^CENTURY^\")\n        .fails(ANY);\n    expr(\"INTERVAL '10' ^DECADE^\")\n        .fails(ANY);\n    expr(\"INTERVAL '4' ^QUARTER^\")\n        .fails(ANY);\n  }\n","date":"2019-09-24 02:59:18","endLine":6784,"groupId":"11717","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testUnparseableIntervalQualifiers2","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/6b/18efc30e26712f7989a0e69015daabf5819bf3.src","preCode":"  @Test public void testUnparseableIntervalQualifiers2() {\n    expr(\"interval '1-2' day(3) ^to^ year(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' day(3) ^to^ month(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' day(3) ^to^ day(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' day(3) to hour^(^2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' day(3) to minute^(^2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' day(3) to second(2^,^6)\")\n        .fails(ANY);\n\n    expr(\"interval '1-2' hour(3) ^to^ year(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' hour(3) ^to^ month(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' hour(3) ^to^ day(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' hour(3) ^to^ hour(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' hour(3) to minute^(^2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' hour(3) to second(2^,^6)\")\n        .fails(ANY);\n\n    expr(\"interval '1-2' minute(3) ^to^ year(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' minute(3) ^to^ month(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' minute(3) ^to^ day(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' minute(3) ^to^ hour(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' minute(3) ^to^ minute(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' minute(3) to second(2^,^6)\")\n        .fails(ANY);\n\n    expr(\"interval '1-2' second(3) ^to^ year(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' second(3) ^to^ month(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' second(3) ^to^ day(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' second(3) ^to^ hour(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' second(3) ^to^ minute(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' second(3) ^to^ second(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' second(3) ^to^ second(2,6)\")\n        .fails(ANY);\n\n    \r\n    expr(\"INTERVAL '0' YEAR(^-^1)\")\n        .fails(ANY);\n    expr(\"INTERVAL '0-0' YEAR(^-^1) TO MONTH\")\n        .fails(ANY);\n    expr(\"INTERVAL '0' MONTH(^-^1)\")\n        .fails(ANY);\n    expr(\"INTERVAL '0' DAY(^-^1)\")\n        .fails(ANY);\n    expr(\"INTERVAL '0 0' DAY(^-^1) TO HOUR\")\n        .fails(ANY);\n    expr(\"INTERVAL '0 0' DAY(^-^1) TO MINUTE\")\n        .fails(ANY);\n    expr(\"INTERVAL '0 0:0:0' DAY(^-^1) TO SECOND\")\n        .fails(ANY);\n    expr(\"INTERVAL '0 0:0:0' DAY TO SECOND(^-^1)\")\n        .fails(ANY);\n    expr(\"INTERVAL '0' HOUR(^-^1)\")\n        .fails(ANY);\n    expr(\"INTERVAL '0:0' HOUR(^-^1) TO MINUTE\")\n        .fails(ANY);\n    expr(\"INTERVAL '0:0:0' HOUR(^-^1) TO SECOND\")\n        .fails(ANY);\n    expr(\"INTERVAL '0:0:0' HOUR TO SECOND(^-^1)\")\n        .fails(ANY);\n    expr(\"INTERVAL '0' MINUTE(^-^1)\")\n        .fails(ANY);\n    expr(\"INTERVAL '0:0' MINUTE(^-^1) TO SECOND\")\n        .fails(ANY);\n    expr(\"INTERVAL '0:0' MINUTE TO SECOND(^-^1)\")\n        .fails(ANY);\n    expr(\"INTERVAL '0' SECOND(^-^1)\")\n        .fails(ANY);\n    expr(\"INTERVAL '0' SECOND(1, ^-^1)\")\n        .fails(ANY);\n\n    \r\n    \r\n    expr(\"interval '1' day(3) ^to^ day\")\n        .fails(ANY);\n    expr(\"interval '1' hour(3) ^to^ hour\")\n        .fails(ANY);\n    expr(\"interval '1' minute(3) ^to^ minute\")\n        .fails(ANY);\n    expr(\"interval '1' second(3) ^to^ second\")\n        .fails(ANY);\n    expr(\"interval '1' second(3,1) ^to^ second\")\n        .fails(ANY);\n    expr(\"interval '1' second(2,3) ^to^ second\")\n        .fails(ANY);\n    expr(\"interval '1' second(2,2) ^to^ second(3)\")\n        .fails(ANY);\n\n    \r\n    expr(\"INTERVAL '2' ^MILLENNIUM^\")\n        .fails(ANY);\n    expr(\"INTERVAL '1-2' ^MILLENNIUM^ TO CENTURY\")\n        .fails(ANY);\n    expr(\"INTERVAL '10' ^CENTURY^\")\n        .fails(ANY);\n    expr(\"INTERVAL '10' ^DECADE^\")\n        .fails(ANY);\n    expr(\"INTERVAL '4' ^QUARTER^\")\n        .fails(ANY);\n  }\n","realPath":"core/src/test/java/org/apache/calcite/sql/parser/SqlParserTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":6665,"status":"B"}],"commitId":"405614f87b75eb515e767b78a2c47481a0efc701","commitMessage":"@@@[CALCITE-3327] Simplify SqlValidatorTest and SqlParserTest by making test methods fluent\n\nReplace 'boolean typeCoercion' parameter with fluent method 'Sql.withTypeCoercion(boolean)'.\n\nDeprecate various checkXxx methods. For example. \ncheckExp(sql.  expected) becomes expr(sql).ok();\ncheckExpFails(sql.  e) becomes expr(s).fails(e).\n\nRename SqlParserTest.exp to expr.\n","date":"2019-09-24 02:59:18","modifiedFileCount":"16","status":"M","submitter":"Julian Hyde"},{"authorTime":"2019-09-07 07:51:19","codes":[{"authorDate":"2019-10-10 10:16:45","commitOrder":7,"curCode":"  @Test public void testUnparseableIntervalQualifiers() {\n    \r\n    expr(\"interval '1^'^\")\n        .fails(\"Encountered \\\"<EOF>\\\" at line 1, column 12\\\\.\\n\"\n            + \"Was expecting one of:\\n\"\n            + \"    \\\"DAY\\\" \\\\.\\\\.\\\\.\\n\"\n            + \"    \\\"DAYS\\\" \\\\.\\\\.\\\\.\\n\"\n            + \"    \\\"HOUR\\\" \\\\.\\\\.\\\\.\\n\"\n            + \"    \\\"HOURS\\\" \\\\.\\\\.\\\\.\\n\"\n            + \"    \\\"MINUTE\\\" \\\\.\\\\.\\\\.\\n\"\n            + \"    \\\"MINUTES\\\" \\\\.\\\\.\\\\.\\n\"\n            + \"    \\\"MONTH\\\" \\\\.\\\\.\\\\.\\n\"\n            + \"    \\\"MONTHS\\\" \\\\.\\\\.\\\\.\\n\"\n            + \"    \\\"SECOND\\\" \\\\.\\\\.\\\\.\\n\"\n            + \"    \\\"SECONDS\\\" \\\\.\\\\.\\\\.\\n\"\n            + \"    \\\"YEAR\\\" \\\\.\\\\.\\\\.\\n\"\n            + \"    \\\"YEARS\\\" \\\\.\\\\.\\\\.\\n\"\n            + \"    \");\n\n    \r\n    expr(\"interval '1' year ^to^ year\")\n        .fails(\"(?s)Encountered \\\"to year\\\" at line 1, column 19.\\n\"\n            + \"Was expecting one of:\\n\"\n            + \"    <EOF> \\n\"\n            + \"    \\\"\\\\(\\\" \\\\.\\\\.\\\\.\\n\"\n            + \"    \\\"\\\\.\\\" \\\\.\\\\.\\\\..*\");\n    expr(\"interval '1-2' year ^to^ day\")\n        .fails(ANY);\n    expr(\"interval '1-2' year ^to^ hour\")\n        .fails(ANY);\n    expr(\"interval '1-2' year ^to^ minute\")\n        .fails(ANY);\n    expr(\"interval '1-2' year ^to^ second\")\n        .fails(ANY);\n\n    expr(\"interval '1-2' month ^to^ year\")\n        .fails(ANY);\n    expr(\"interval '1-2' month ^to^ month\")\n        .fails(ANY);\n    expr(\"interval '1-2' month ^to^ day\")\n        .fails(ANY);\n    expr(\"interval '1-2' month ^to^ hour\")\n        .fails(ANY);\n    expr(\"interval '1-2' month ^to^ minute\")\n        .fails(ANY);\n    expr(\"interval '1-2' month ^to^ second\")\n        .fails(ANY);\n\n    expr(\"interval '1-2' day ^to^ year\")\n        .fails(ANY);\n    expr(\"interval '1-2' day ^to^ month\")\n        .fails(ANY);\n    expr(\"interval '1-2' day ^to^ day\")\n        .fails(ANY);\n\n    expr(\"interval '1-2' hour ^to^ year\")\n        .fails(ANY);\n    expr(\"interval '1-2' hour ^to^ month\")\n        .fails(ANY);\n    expr(\"interval '1-2' hour ^to^ day\")\n        .fails(ANY);\n    expr(\"interval '1-2' hour ^to^ hour\")\n        .fails(ANY);\n\n    expr(\"interval '1-2' minute ^to^ year\")\n        .fails(ANY);\n    expr(\"interval '1-2' minute ^to^ month\")\n        .fails(ANY);\n    expr(\"interval '1-2' minute ^to^ day\")\n        .fails(ANY);\n    expr(\"interval '1-2' minute ^to^ hour\")\n        .fails(ANY);\n    expr(\"interval '1-2' minute ^to^ minute\")\n        .fails(ANY);\n\n    expr(\"interval '1-2' second ^to^ year\")\n        .fails(ANY);\n    expr(\"interval '1-2' second ^to^ month\")\n        .fails(ANY);\n    expr(\"interval '1-2' second ^to^ day\")\n        .fails(ANY);\n    expr(\"interval '1-2' second ^to^ hour\")\n        .fails(ANY);\n    expr(\"interval '1-2' second ^to^ minute\")\n        .fails(ANY);\n    expr(\"interval '1-2' second ^to^ second\")\n        .fails(ANY);\n\n    \r\n    expr(\"interval '1' year(3) ^to^ year\")\n        .fails(ANY);\n    expr(\"interval '1-2' year(3) ^to^ day\")\n        .fails(ANY);\n    expr(\"interval '1-2' year(3) ^to^ hour\")\n        .fails(ANY);\n    expr(\"interval '1-2' year(3) ^to^ minute\")\n        .fails(ANY);\n    expr(\"interval '1-2' year(3) ^to^ second\")\n        .fails(ANY);\n\n    expr(\"interval '1-2' month(3) ^to^ year\")\n        .fails(ANY);\n    expr(\"interval '1-2' month(3) ^to^ month\")\n        .fails(ANY);\n    expr(\"interval '1-2' month(3) ^to^ day\")\n        .fails(ANY);\n    expr(\"interval '1-2' month(3) ^to^ hour\")\n        .fails(ANY);\n    expr(\"interval '1-2' month(3) ^to^ minute\")\n        .fails(ANY);\n    expr(\"interval '1-2' month(3) ^to^ second\")\n        .fails(ANY);\n\n    expr(\"interval '1-2' day(3) ^to^ year\")\n        .fails(ANY);\n    expr(\"interval '1-2' day(3) ^to^ month\")\n        .fails(ANY);\n\n    expr(\"interval '1-2' hour(3) ^to^ year\")\n        .fails(ANY);\n    expr(\"interval '1-2' hour(3) ^to^ month\")\n        .fails(ANY);\n    expr(\"interval '1-2' hour(3) ^to^ day\")\n        .fails(ANY);\n\n    expr(\"interval '1-2' minute(3) ^to^ year\")\n        .fails(ANY);\n    expr(\"interval '1-2' minute(3) ^to^ month\")\n        .fails(ANY);\n    expr(\"interval '1-2' minute(3) ^to^ day\")\n        .fails(ANY);\n    expr(\"interval '1-2' minute(3) ^to^ hour\")\n        .fails(ANY);\n\n    expr(\"interval '1-2' second(3) ^to^ year\")\n        .fails(ANY);\n    expr(\"interval '1-2' second(3) ^to^ month\")\n        .fails(ANY);\n    expr(\"interval '1-2' second(3) ^to^ day\")\n        .fails(ANY);\n    expr(\"interval '1-2' second(3) ^to^ hour\")\n        .fails(ANY);\n    expr(\"interval '1-2' second(3) ^to^ minute\")\n        .fails(ANY);\n\n    \r\n    expr(\"interval '1' year ^to^ year(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' year to month^(^2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' year ^to^ day(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' year ^to^ hour(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' year ^to^ minute(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' year ^to^ second(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' year ^to^ second(2,6)\")\n        .fails(ANY);\n\n    expr(\"interval '1-2' month ^to^ year(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' month ^to^ month(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' month ^to^ day(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' month ^to^ hour(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' month ^to^ minute(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' month ^to^ second(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' month ^to^ second(2,6)\")\n        .fails(ANY);\n\n    expr(\"interval '1-2' day ^to^ year(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' day ^to^ month(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' day ^to^ day(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' day to hour^(^2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' day to minute^(^2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' day to second(2^,^6)\")\n        .fails(ANY);\n\n    expr(\"interval '1-2' hour ^to^ year(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' hour ^to^ month(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' hour ^to^ day(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' hour ^to^ hour(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' hour to minute^(^2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' hour to second(2^,^6)\")\n        .fails(ANY);\n\n    expr(\"interval '1-2' minute ^to^ year(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' minute ^to^ month(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' minute ^to^ day(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' minute ^to^ hour(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' minute ^to^ minute(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' minute to second(2^,^6)\")\n        .fails(ANY);\n\n    expr(\"interval '1-2' second ^to^ year(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' second ^to^ month(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' second ^to^ day(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' second ^to^ hour(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' second ^to^ minute(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' second ^to^ second(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' second ^to^ second(2,6)\")\n        .fails(ANY);\n\n    \r\n    expr(\"interval '1' year(3) ^to^ year(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' year(3) to month^(^2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' year(3) ^to^ day(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' year(3) ^to^ hour(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' year(3) ^to^ minute(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' year(3) ^to^ second(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' year(3) ^to^ second(2,6)\")\n        .fails(ANY);\n\n    expr(\"interval '1-2' month(3) ^to^ year(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' month(3) ^to^ month(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' month(3) ^to^ day(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' month(3) ^to^ hour(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' month(3) ^to^ minute(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' month(3) ^to^ second(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' month(3) ^to^ second(2,6)\")\n        .fails(ANY);\n  }\n","date":"2019-10-11 01:00:37","endLine":6682,"groupId":"6908","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testUnparseableIntervalQualifiers","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/13/f986de889068fea21c513631b4028e139308bf.src","preCode":"  @Test public void testUnparseableIntervalQualifiers() {\n    \r\n    expr(\"interval '1^'^\")\n        .fails(\"Encountered \\\"<EOF>\\\" at line 1, column 12\\\\.\\n\"\n            + \"Was expecting one of:\\n\"\n            + \"    \\\"DAY\\\" \\\\.\\\\.\\\\.\\n\"\n            + \"    \\\"HOUR\\\" \\\\.\\\\.\\\\.\\n\"\n            + \"    \\\"MINUTE\\\" \\\\.\\\\.\\\\.\\n\"\n            + \"    \\\"MONTH\\\" \\\\.\\\\.\\\\.\\n\"\n            + \"    \\\"SECOND\\\" \\\\.\\\\.\\\\.\\n\"\n            + \"    \\\"YEAR\\\" \\\\.\\\\.\\\\.\\n\"\n            + \"    \");\n\n    \r\n    expr(\"interval '1' year ^to^ year\")\n        .fails(\"(?s)Encountered \\\"to year\\\" at line 1, column 19.\\n\"\n            + \"Was expecting one of:\\n\"\n            + \"    <EOF> \\n\"\n            + \"    \\\"\\\\(\\\" \\\\.\\\\.\\\\.\\n\"\n            + \"    \\\"\\\\.\\\" \\\\.\\\\.\\\\..*\");\n    expr(\"interval '1-2' year ^to^ day\")\n        .fails(ANY);\n    expr(\"interval '1-2' year ^to^ hour\")\n        .fails(ANY);\n    expr(\"interval '1-2' year ^to^ minute\")\n        .fails(ANY);\n    expr(\"interval '1-2' year ^to^ second\")\n        .fails(ANY);\n\n    expr(\"interval '1-2' month ^to^ year\")\n        .fails(ANY);\n    expr(\"interval '1-2' month ^to^ month\")\n        .fails(ANY);\n    expr(\"interval '1-2' month ^to^ day\")\n        .fails(ANY);\n    expr(\"interval '1-2' month ^to^ hour\")\n        .fails(ANY);\n    expr(\"interval '1-2' month ^to^ minute\")\n        .fails(ANY);\n    expr(\"interval '1-2' month ^to^ second\")\n        .fails(ANY);\n\n    expr(\"interval '1-2' day ^to^ year\")\n        .fails(ANY);\n    expr(\"interval '1-2' day ^to^ month\")\n        .fails(ANY);\n    expr(\"interval '1-2' day ^to^ day\")\n        .fails(ANY);\n\n    expr(\"interval '1-2' hour ^to^ year\")\n        .fails(ANY);\n    expr(\"interval '1-2' hour ^to^ month\")\n        .fails(ANY);\n    expr(\"interval '1-2' hour ^to^ day\")\n        .fails(ANY);\n    expr(\"interval '1-2' hour ^to^ hour\")\n        .fails(ANY);\n\n    expr(\"interval '1-2' minute ^to^ year\")\n        .fails(ANY);\n    expr(\"interval '1-2' minute ^to^ month\")\n        .fails(ANY);\n    expr(\"interval '1-2' minute ^to^ day\")\n        .fails(ANY);\n    expr(\"interval '1-2' minute ^to^ hour\")\n        .fails(ANY);\n    expr(\"interval '1-2' minute ^to^ minute\")\n        .fails(ANY);\n\n    expr(\"interval '1-2' second ^to^ year\")\n        .fails(ANY);\n    expr(\"interval '1-2' second ^to^ month\")\n        .fails(ANY);\n    expr(\"interval '1-2' second ^to^ day\")\n        .fails(ANY);\n    expr(\"interval '1-2' second ^to^ hour\")\n        .fails(ANY);\n    expr(\"interval '1-2' second ^to^ minute\")\n        .fails(ANY);\n    expr(\"interval '1-2' second ^to^ second\")\n        .fails(ANY);\n\n    \r\n    expr(\"interval '1' year(3) ^to^ year\")\n        .fails(ANY);\n    expr(\"interval '1-2' year(3) ^to^ day\")\n        .fails(ANY);\n    expr(\"interval '1-2' year(3) ^to^ hour\")\n        .fails(ANY);\n    expr(\"interval '1-2' year(3) ^to^ minute\")\n        .fails(ANY);\n    expr(\"interval '1-2' year(3) ^to^ second\")\n        .fails(ANY);\n\n    expr(\"interval '1-2' month(3) ^to^ year\")\n        .fails(ANY);\n    expr(\"interval '1-2' month(3) ^to^ month\")\n        .fails(ANY);\n    expr(\"interval '1-2' month(3) ^to^ day\")\n        .fails(ANY);\n    expr(\"interval '1-2' month(3) ^to^ hour\")\n        .fails(ANY);\n    expr(\"interval '1-2' month(3) ^to^ minute\")\n        .fails(ANY);\n    expr(\"interval '1-2' month(3) ^to^ second\")\n        .fails(ANY);\n\n    expr(\"interval '1-2' day(3) ^to^ year\")\n        .fails(ANY);\n    expr(\"interval '1-2' day(3) ^to^ month\")\n        .fails(ANY);\n\n    expr(\"interval '1-2' hour(3) ^to^ year\")\n        .fails(ANY);\n    expr(\"interval '1-2' hour(3) ^to^ month\")\n        .fails(ANY);\n    expr(\"interval '1-2' hour(3) ^to^ day\")\n        .fails(ANY);\n\n    expr(\"interval '1-2' minute(3) ^to^ year\")\n        .fails(ANY);\n    expr(\"interval '1-2' minute(3) ^to^ month\")\n        .fails(ANY);\n    expr(\"interval '1-2' minute(3) ^to^ day\")\n        .fails(ANY);\n    expr(\"interval '1-2' minute(3) ^to^ hour\")\n        .fails(ANY);\n\n    expr(\"interval '1-2' second(3) ^to^ year\")\n        .fails(ANY);\n    expr(\"interval '1-2' second(3) ^to^ month\")\n        .fails(ANY);\n    expr(\"interval '1-2' second(3) ^to^ day\")\n        .fails(ANY);\n    expr(\"interval '1-2' second(3) ^to^ hour\")\n        .fails(ANY);\n    expr(\"interval '1-2' second(3) ^to^ minute\")\n        .fails(ANY);\n\n    \r\n    expr(\"interval '1' year ^to^ year(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' year to month^(^2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' year ^to^ day(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' year ^to^ hour(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' year ^to^ minute(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' year ^to^ second(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' year ^to^ second(2,6)\")\n        .fails(ANY);\n\n    expr(\"interval '1-2' month ^to^ year(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' month ^to^ month(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' month ^to^ day(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' month ^to^ hour(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' month ^to^ minute(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' month ^to^ second(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' month ^to^ second(2,6)\")\n        .fails(ANY);\n\n    expr(\"interval '1-2' day ^to^ year(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' day ^to^ month(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' day ^to^ day(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' day to hour^(^2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' day to minute^(^2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' day to second(2^,^6)\")\n        .fails(ANY);\n\n    expr(\"interval '1-2' hour ^to^ year(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' hour ^to^ month(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' hour ^to^ day(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' hour ^to^ hour(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' hour to minute^(^2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' hour to second(2^,^6)\")\n        .fails(ANY);\n\n    expr(\"interval '1-2' minute ^to^ year(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' minute ^to^ month(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' minute ^to^ day(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' minute ^to^ hour(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' minute ^to^ minute(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' minute to second(2^,^6)\")\n        .fails(ANY);\n\n    expr(\"interval '1-2' second ^to^ year(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' second ^to^ month(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' second ^to^ day(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' second ^to^ hour(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' second ^to^ minute(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' second ^to^ second(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' second ^to^ second(2,6)\")\n        .fails(ANY);\n\n    \r\n    expr(\"interval '1' year(3) ^to^ year(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' year(3) to month^(^2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' year(3) ^to^ day(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' year(3) ^to^ hour(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' year(3) ^to^ minute(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' year(3) ^to^ second(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' year(3) ^to^ second(2,6)\")\n        .fails(ANY);\n\n    expr(\"interval '1-2' month(3) ^to^ year(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' month(3) ^to^ month(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' month(3) ^to^ day(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' month(3) ^to^ hour(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' month(3) ^to^ minute(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' month(3) ^to^ second(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' month(3) ^to^ second(2,6)\")\n        .fails(ANY);\n  }\n","realPath":"core/src/test/java/org/apache/calcite/sql/parser/SqlParserTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":6422,"status":"M"},{"authorDate":"2019-09-07 07:51:19","commitOrder":7,"curCode":"  @Test public void testUnparseableIntervalQualifiers2() {\n    expr(\"interval '1-2' day(3) ^to^ year(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' day(3) ^to^ month(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' day(3) ^to^ day(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' day(3) to hour^(^2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' day(3) to minute^(^2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' day(3) to second(2^,^6)\")\n        .fails(ANY);\n\n    expr(\"interval '1-2' hour(3) ^to^ year(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' hour(3) ^to^ month(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' hour(3) ^to^ day(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' hour(3) ^to^ hour(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' hour(3) to minute^(^2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' hour(3) to second(2^,^6)\")\n        .fails(ANY);\n\n    expr(\"interval '1-2' minute(3) ^to^ year(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' minute(3) ^to^ month(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' minute(3) ^to^ day(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' minute(3) ^to^ hour(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' minute(3) ^to^ minute(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' minute(3) to second(2^,^6)\")\n        .fails(ANY);\n\n    expr(\"interval '1-2' second(3) ^to^ year(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' second(3) ^to^ month(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' second(3) ^to^ day(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' second(3) ^to^ hour(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' second(3) ^to^ minute(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' second(3) ^to^ second(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' second(3) ^to^ second(2,6)\")\n        .fails(ANY);\n\n    \r\n    expr(\"INTERVAL '0' YEAR(^-^1)\")\n        .fails(ANY);\n    expr(\"INTERVAL '0-0' YEAR(^-^1) TO MONTH\")\n        .fails(ANY);\n    expr(\"INTERVAL '0' MONTH(^-^1)\")\n        .fails(ANY);\n    expr(\"INTERVAL '0' DAY(^-^1)\")\n        .fails(ANY);\n    expr(\"INTERVAL '0 0' DAY(^-^1) TO HOUR\")\n        .fails(ANY);\n    expr(\"INTERVAL '0 0' DAY(^-^1) TO MINUTE\")\n        .fails(ANY);\n    expr(\"INTERVAL '0 0:0:0' DAY(^-^1) TO SECOND\")\n        .fails(ANY);\n    expr(\"INTERVAL '0 0:0:0' DAY TO SECOND(^-^1)\")\n        .fails(ANY);\n    expr(\"INTERVAL '0' HOUR(^-^1)\")\n        .fails(ANY);\n    expr(\"INTERVAL '0:0' HOUR(^-^1) TO MINUTE\")\n        .fails(ANY);\n    expr(\"INTERVAL '0:0:0' HOUR(^-^1) TO SECOND\")\n        .fails(ANY);\n    expr(\"INTERVAL '0:0:0' HOUR TO SECOND(^-^1)\")\n        .fails(ANY);\n    expr(\"INTERVAL '0' MINUTE(^-^1)\")\n        .fails(ANY);\n    expr(\"INTERVAL '0:0' MINUTE(^-^1) TO SECOND\")\n        .fails(ANY);\n    expr(\"INTERVAL '0:0' MINUTE TO SECOND(^-^1)\")\n        .fails(ANY);\n    expr(\"INTERVAL '0' SECOND(^-^1)\")\n        .fails(ANY);\n    expr(\"INTERVAL '0' SECOND(1, ^-^1)\")\n        .fails(ANY);\n\n    \r\n    \r\n    expr(\"interval '1' day(3) ^to^ day\")\n        .fails(ANY);\n    expr(\"interval '1' hour(3) ^to^ hour\")\n        .fails(ANY);\n    expr(\"interval '1' minute(3) ^to^ minute\")\n        .fails(ANY);\n    expr(\"interval '1' second(3) ^to^ second\")\n        .fails(ANY);\n    expr(\"interval '1' second(3,1) ^to^ second\")\n        .fails(ANY);\n    expr(\"interval '1' second(2,3) ^to^ second\")\n        .fails(ANY);\n    expr(\"interval '1' second(2,2) ^to^ second(3)\")\n        .fails(ANY);\n\n    \r\n    expr(\"INTERVAL '2' ^MILLENNIUM^\")\n        .fails(ANY);\n    expr(\"INTERVAL '1-2' ^MILLENNIUM^ TO CENTURY\")\n        .fails(ANY);\n    expr(\"INTERVAL '10' ^CENTURY^\")\n        .fails(ANY);\n    expr(\"INTERVAL '10' ^DECADE^\")\n        .fails(ANY);\n    expr(\"INTERVAL '4' ^QUARTER^\")\n        .fails(ANY);\n  }\n","date":"2019-09-24 02:59:18","endLine":6784,"groupId":"11717","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testUnparseableIntervalQualifiers2","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/6b/18efc30e26712f7989a0e69015daabf5819bf3.src","preCode":"  @Test public void testUnparseableIntervalQualifiers2() {\n    expr(\"interval '1-2' day(3) ^to^ year(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' day(3) ^to^ month(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' day(3) ^to^ day(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' day(3) to hour^(^2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' day(3) to minute^(^2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' day(3) to second(2^,^6)\")\n        .fails(ANY);\n\n    expr(\"interval '1-2' hour(3) ^to^ year(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' hour(3) ^to^ month(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' hour(3) ^to^ day(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' hour(3) ^to^ hour(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' hour(3) to minute^(^2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' hour(3) to second(2^,^6)\")\n        .fails(ANY);\n\n    expr(\"interval '1-2' minute(3) ^to^ year(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' minute(3) ^to^ month(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' minute(3) ^to^ day(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' minute(3) ^to^ hour(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' minute(3) ^to^ minute(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' minute(3) to second(2^,^6)\")\n        .fails(ANY);\n\n    expr(\"interval '1-2' second(3) ^to^ year(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' second(3) ^to^ month(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' second(3) ^to^ day(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' second(3) ^to^ hour(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' second(3) ^to^ minute(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' second(3) ^to^ second(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' second(3) ^to^ second(2,6)\")\n        .fails(ANY);\n\n    \r\n    expr(\"INTERVAL '0' YEAR(^-^1)\")\n        .fails(ANY);\n    expr(\"INTERVAL '0-0' YEAR(^-^1) TO MONTH\")\n        .fails(ANY);\n    expr(\"INTERVAL '0' MONTH(^-^1)\")\n        .fails(ANY);\n    expr(\"INTERVAL '0' DAY(^-^1)\")\n        .fails(ANY);\n    expr(\"INTERVAL '0 0' DAY(^-^1) TO HOUR\")\n        .fails(ANY);\n    expr(\"INTERVAL '0 0' DAY(^-^1) TO MINUTE\")\n        .fails(ANY);\n    expr(\"INTERVAL '0 0:0:0' DAY(^-^1) TO SECOND\")\n        .fails(ANY);\n    expr(\"INTERVAL '0 0:0:0' DAY TO SECOND(^-^1)\")\n        .fails(ANY);\n    expr(\"INTERVAL '0' HOUR(^-^1)\")\n        .fails(ANY);\n    expr(\"INTERVAL '0:0' HOUR(^-^1) TO MINUTE\")\n        .fails(ANY);\n    expr(\"INTERVAL '0:0:0' HOUR(^-^1) TO SECOND\")\n        .fails(ANY);\n    expr(\"INTERVAL '0:0:0' HOUR TO SECOND(^-^1)\")\n        .fails(ANY);\n    expr(\"INTERVAL '0' MINUTE(^-^1)\")\n        .fails(ANY);\n    expr(\"INTERVAL '0:0' MINUTE(^-^1) TO SECOND\")\n        .fails(ANY);\n    expr(\"INTERVAL '0:0' MINUTE TO SECOND(^-^1)\")\n        .fails(ANY);\n    expr(\"INTERVAL '0' SECOND(^-^1)\")\n        .fails(ANY);\n    expr(\"INTERVAL '0' SECOND(1, ^-^1)\")\n        .fails(ANY);\n\n    \r\n    \r\n    expr(\"interval '1' day(3) ^to^ day\")\n        .fails(ANY);\n    expr(\"interval '1' hour(3) ^to^ hour\")\n        .fails(ANY);\n    expr(\"interval '1' minute(3) ^to^ minute\")\n        .fails(ANY);\n    expr(\"interval '1' second(3) ^to^ second\")\n        .fails(ANY);\n    expr(\"interval '1' second(3,1) ^to^ second\")\n        .fails(ANY);\n    expr(\"interval '1' second(2,3) ^to^ second\")\n        .fails(ANY);\n    expr(\"interval '1' second(2,2) ^to^ second(3)\")\n        .fails(ANY);\n\n    \r\n    expr(\"INTERVAL '2' ^MILLENNIUM^\")\n        .fails(ANY);\n    expr(\"INTERVAL '1-2' ^MILLENNIUM^ TO CENTURY\")\n        .fails(ANY);\n    expr(\"INTERVAL '10' ^CENTURY^\")\n        .fails(ANY);\n    expr(\"INTERVAL '10' ^DECADE^\")\n        .fails(ANY);\n    expr(\"INTERVAL '4' ^QUARTER^\")\n        .fails(ANY);\n  }\n","realPath":"core/src/test/java/org/apache/calcite/sql/parser/SqlParserTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":6665,"status":"N"}],"commitId":"4be2d08e2116234a7df982014f8ae5bc79a7e0bf","commitMessage":"@@@[CALCITE-3383] Plural time units\n\nAdd SqlConformance.allowPluralTimeUnits(); if it is true.  we allow\n\nINTERVAL '2' days\n\notherwise we only allow\n\nINTERVAL '2' DAY\n","date":"2019-10-11 01:00:37","modifiedFileCount":"7","status":"M","submitter":"Julian Hyde"},{"authorTime":"2020-04-02 10:39:10","codes":[{"authorDate":"2020-04-02 10:39:10","commitOrder":8,"curCode":"  @Test void testUnparseableIntervalQualifiers() {\n    \r\n    expr(\"interval '1^'^\")\n        .fails(\"Encountered \\\"<EOF>\\\" at line 1, column 12\\\\.\\n\"\n            + \"Was expecting one of:\\n\"\n            + \"    \\\"DAY\\\" \\\\.\\\\.\\\\.\\n\"\n            + \"    \\\"DAYS\\\" \\\\.\\\\.\\\\.\\n\"\n            + \"    \\\"HOUR\\\" \\\\.\\\\.\\\\.\\n\"\n            + \"    \\\"HOURS\\\" \\\\.\\\\.\\\\.\\n\"\n            + \"    \\\"MINUTE\\\" \\\\.\\\\.\\\\.\\n\"\n            + \"    \\\"MINUTES\\\" \\\\.\\\\.\\\\.\\n\"\n            + \"    \\\"MONTH\\\" \\\\.\\\\.\\\\.\\n\"\n            + \"    \\\"MONTHS\\\" \\\\.\\\\.\\\\.\\n\"\n            + \"    \\\"SECOND\\\" \\\\.\\\\.\\\\.\\n\"\n            + \"    \\\"SECONDS\\\" \\\\.\\\\.\\\\.\\n\"\n            + \"    \\\"YEAR\\\" \\\\.\\\\.\\\\.\\n\"\n            + \"    \\\"YEARS\\\" \\\\.\\\\.\\\\.\\n\"\n            + \"    \");\n\n    \r\n    expr(\"interval '1' year ^to^ year\")\n        .fails(\"(?s)Encountered \\\"to year\\\" at line 1, column 19.\\n\"\n            + \"Was expecting one of:\\n\"\n            + \"    <EOF> \\n\"\n            + \"    \\\"\\\\(\\\" \\\\.\\\\.\\\\.\\n\"\n            + \"    \\\"\\\\.\\\" \\\\.\\\\.\\\\..*\");\n    expr(\"interval '1-2' year ^to^ day\")\n        .fails(ANY);\n    expr(\"interval '1-2' year ^to^ hour\")\n        .fails(ANY);\n    expr(\"interval '1-2' year ^to^ minute\")\n        .fails(ANY);\n    expr(\"interval '1-2' year ^to^ second\")\n        .fails(ANY);\n\n    expr(\"interval '1-2' month ^to^ year\")\n        .fails(ANY);\n    expr(\"interval '1-2' month ^to^ month\")\n        .fails(ANY);\n    expr(\"interval '1-2' month ^to^ day\")\n        .fails(ANY);\n    expr(\"interval '1-2' month ^to^ hour\")\n        .fails(ANY);\n    expr(\"interval '1-2' month ^to^ minute\")\n        .fails(ANY);\n    expr(\"interval '1-2' month ^to^ second\")\n        .fails(ANY);\n\n    expr(\"interval '1-2' day ^to^ year\")\n        .fails(ANY);\n    expr(\"interval '1-2' day ^to^ month\")\n        .fails(ANY);\n    expr(\"interval '1-2' day ^to^ day\")\n        .fails(ANY);\n\n    expr(\"interval '1-2' hour ^to^ year\")\n        .fails(ANY);\n    expr(\"interval '1-2' hour ^to^ month\")\n        .fails(ANY);\n    expr(\"interval '1-2' hour ^to^ day\")\n        .fails(ANY);\n    expr(\"interval '1-2' hour ^to^ hour\")\n        .fails(ANY);\n\n    expr(\"interval '1-2' minute ^to^ year\")\n        .fails(ANY);\n    expr(\"interval '1-2' minute ^to^ month\")\n        .fails(ANY);\n    expr(\"interval '1-2' minute ^to^ day\")\n        .fails(ANY);\n    expr(\"interval '1-2' minute ^to^ hour\")\n        .fails(ANY);\n    expr(\"interval '1-2' minute ^to^ minute\")\n        .fails(ANY);\n\n    expr(\"interval '1-2' second ^to^ year\")\n        .fails(ANY);\n    expr(\"interval '1-2' second ^to^ month\")\n        .fails(ANY);\n    expr(\"interval '1-2' second ^to^ day\")\n        .fails(ANY);\n    expr(\"interval '1-2' second ^to^ hour\")\n        .fails(ANY);\n    expr(\"interval '1-2' second ^to^ minute\")\n        .fails(ANY);\n    expr(\"interval '1-2' second ^to^ second\")\n        .fails(ANY);\n\n    \r\n    expr(\"interval '1' year(3) ^to^ year\")\n        .fails(ANY);\n    expr(\"interval '1-2' year(3) ^to^ day\")\n        .fails(ANY);\n    expr(\"interval '1-2' year(3) ^to^ hour\")\n        .fails(ANY);\n    expr(\"interval '1-2' year(3) ^to^ minute\")\n        .fails(ANY);\n    expr(\"interval '1-2' year(3) ^to^ second\")\n        .fails(ANY);\n\n    expr(\"interval '1-2' month(3) ^to^ year\")\n        .fails(ANY);\n    expr(\"interval '1-2' month(3) ^to^ month\")\n        .fails(ANY);\n    expr(\"interval '1-2' month(3) ^to^ day\")\n        .fails(ANY);\n    expr(\"interval '1-2' month(3) ^to^ hour\")\n        .fails(ANY);\n    expr(\"interval '1-2' month(3) ^to^ minute\")\n        .fails(ANY);\n    expr(\"interval '1-2' month(3) ^to^ second\")\n        .fails(ANY);\n\n    expr(\"interval '1-2' day(3) ^to^ year\")\n        .fails(ANY);\n    expr(\"interval '1-2' day(3) ^to^ month\")\n        .fails(ANY);\n\n    expr(\"interval '1-2' hour(3) ^to^ year\")\n        .fails(ANY);\n    expr(\"interval '1-2' hour(3) ^to^ month\")\n        .fails(ANY);\n    expr(\"interval '1-2' hour(3) ^to^ day\")\n        .fails(ANY);\n\n    expr(\"interval '1-2' minute(3) ^to^ year\")\n        .fails(ANY);\n    expr(\"interval '1-2' minute(3) ^to^ month\")\n        .fails(ANY);\n    expr(\"interval '1-2' minute(3) ^to^ day\")\n        .fails(ANY);\n    expr(\"interval '1-2' minute(3) ^to^ hour\")\n        .fails(ANY);\n\n    expr(\"interval '1-2' second(3) ^to^ year\")\n        .fails(ANY);\n    expr(\"interval '1-2' second(3) ^to^ month\")\n        .fails(ANY);\n    expr(\"interval '1-2' second(3) ^to^ day\")\n        .fails(ANY);\n    expr(\"interval '1-2' second(3) ^to^ hour\")\n        .fails(ANY);\n    expr(\"interval '1-2' second(3) ^to^ minute\")\n        .fails(ANY);\n\n    \r\n    expr(\"interval '1' year ^to^ year(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' year to month^(^2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' year ^to^ day(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' year ^to^ hour(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' year ^to^ minute(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' year ^to^ second(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' year ^to^ second(2,6)\")\n        .fails(ANY);\n\n    expr(\"interval '1-2' month ^to^ year(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' month ^to^ month(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' month ^to^ day(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' month ^to^ hour(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' month ^to^ minute(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' month ^to^ second(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' month ^to^ second(2,6)\")\n        .fails(ANY);\n\n    expr(\"interval '1-2' day ^to^ year(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' day ^to^ month(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' day ^to^ day(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' day to hour^(^2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' day to minute^(^2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' day to second(2^,^6)\")\n        .fails(ANY);\n\n    expr(\"interval '1-2' hour ^to^ year(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' hour ^to^ month(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' hour ^to^ day(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' hour ^to^ hour(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' hour to minute^(^2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' hour to second(2^,^6)\")\n        .fails(ANY);\n\n    expr(\"interval '1-2' minute ^to^ year(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' minute ^to^ month(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' minute ^to^ day(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' minute ^to^ hour(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' minute ^to^ minute(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' minute to second(2^,^6)\")\n        .fails(ANY);\n\n    expr(\"interval '1-2' second ^to^ year(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' second ^to^ month(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' second ^to^ day(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' second ^to^ hour(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' second ^to^ minute(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' second ^to^ second(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' second ^to^ second(2,6)\")\n        .fails(ANY);\n\n    \r\n    expr(\"interval '1' year(3) ^to^ year(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' year(3) to month^(^2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' year(3) ^to^ day(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' year(3) ^to^ hour(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' year(3) ^to^ minute(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' year(3) ^to^ second(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' year(3) ^to^ second(2,6)\")\n        .fails(ANY);\n\n    expr(\"interval '1-2' month(3) ^to^ year(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' month(3) ^to^ month(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' month(3) ^to^ day(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' month(3) ^to^ hour(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' month(3) ^to^ minute(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' month(3) ^to^ second(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' month(3) ^to^ second(2,6)\")\n        .fails(ANY);\n  }\n","date":"2020-04-06 04:57:49","endLine":6748,"groupId":"10875","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testUnparseableIntervalQualifiers","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/df/6c18087114449f5c2ca4ff32ab24aa6a84eed3.src","preCode":"  @Test public void testUnparseableIntervalQualifiers() {\n    \r\n    expr(\"interval '1^'^\")\n        .fails(\"Encountered \\\"<EOF>\\\" at line 1, column 12\\\\.\\n\"\n            + \"Was expecting one of:\\n\"\n            + \"    \\\"DAY\\\" \\\\.\\\\.\\\\.\\n\"\n            + \"    \\\"DAYS\\\" \\\\.\\\\.\\\\.\\n\"\n            + \"    \\\"HOUR\\\" \\\\.\\\\.\\\\.\\n\"\n            + \"    \\\"HOURS\\\" \\\\.\\\\.\\\\.\\n\"\n            + \"    \\\"MINUTE\\\" \\\\.\\\\.\\\\.\\n\"\n            + \"    \\\"MINUTES\\\" \\\\.\\\\.\\\\.\\n\"\n            + \"    \\\"MONTH\\\" \\\\.\\\\.\\\\.\\n\"\n            + \"    \\\"MONTHS\\\" \\\\.\\\\.\\\\.\\n\"\n            + \"    \\\"SECOND\\\" \\\\.\\\\.\\\\.\\n\"\n            + \"    \\\"SECONDS\\\" \\\\.\\\\.\\\\.\\n\"\n            + \"    \\\"YEAR\\\" \\\\.\\\\.\\\\.\\n\"\n            + \"    \\\"YEARS\\\" \\\\.\\\\.\\\\.\\n\"\n            + \"    \");\n\n    \r\n    expr(\"interval '1' year ^to^ year\")\n        .fails(\"(?s)Encountered \\\"to year\\\" at line 1, column 19.\\n\"\n            + \"Was expecting one of:\\n\"\n            + \"    <EOF> \\n\"\n            + \"    \\\"\\\\(\\\" \\\\.\\\\.\\\\.\\n\"\n            + \"    \\\"\\\\.\\\" \\\\.\\\\.\\\\..*\");\n    expr(\"interval '1-2' year ^to^ day\")\n        .fails(ANY);\n    expr(\"interval '1-2' year ^to^ hour\")\n        .fails(ANY);\n    expr(\"interval '1-2' year ^to^ minute\")\n        .fails(ANY);\n    expr(\"interval '1-2' year ^to^ second\")\n        .fails(ANY);\n\n    expr(\"interval '1-2' month ^to^ year\")\n        .fails(ANY);\n    expr(\"interval '1-2' month ^to^ month\")\n        .fails(ANY);\n    expr(\"interval '1-2' month ^to^ day\")\n        .fails(ANY);\n    expr(\"interval '1-2' month ^to^ hour\")\n        .fails(ANY);\n    expr(\"interval '1-2' month ^to^ minute\")\n        .fails(ANY);\n    expr(\"interval '1-2' month ^to^ second\")\n        .fails(ANY);\n\n    expr(\"interval '1-2' day ^to^ year\")\n        .fails(ANY);\n    expr(\"interval '1-2' day ^to^ month\")\n        .fails(ANY);\n    expr(\"interval '1-2' day ^to^ day\")\n        .fails(ANY);\n\n    expr(\"interval '1-2' hour ^to^ year\")\n        .fails(ANY);\n    expr(\"interval '1-2' hour ^to^ month\")\n        .fails(ANY);\n    expr(\"interval '1-2' hour ^to^ day\")\n        .fails(ANY);\n    expr(\"interval '1-2' hour ^to^ hour\")\n        .fails(ANY);\n\n    expr(\"interval '1-2' minute ^to^ year\")\n        .fails(ANY);\n    expr(\"interval '1-2' minute ^to^ month\")\n        .fails(ANY);\n    expr(\"interval '1-2' minute ^to^ day\")\n        .fails(ANY);\n    expr(\"interval '1-2' minute ^to^ hour\")\n        .fails(ANY);\n    expr(\"interval '1-2' minute ^to^ minute\")\n        .fails(ANY);\n\n    expr(\"interval '1-2' second ^to^ year\")\n        .fails(ANY);\n    expr(\"interval '1-2' second ^to^ month\")\n        .fails(ANY);\n    expr(\"interval '1-2' second ^to^ day\")\n        .fails(ANY);\n    expr(\"interval '1-2' second ^to^ hour\")\n        .fails(ANY);\n    expr(\"interval '1-2' second ^to^ minute\")\n        .fails(ANY);\n    expr(\"interval '1-2' second ^to^ second\")\n        .fails(ANY);\n\n    \r\n    expr(\"interval '1' year(3) ^to^ year\")\n        .fails(ANY);\n    expr(\"interval '1-2' year(3) ^to^ day\")\n        .fails(ANY);\n    expr(\"interval '1-2' year(3) ^to^ hour\")\n        .fails(ANY);\n    expr(\"interval '1-2' year(3) ^to^ minute\")\n        .fails(ANY);\n    expr(\"interval '1-2' year(3) ^to^ second\")\n        .fails(ANY);\n\n    expr(\"interval '1-2' month(3) ^to^ year\")\n        .fails(ANY);\n    expr(\"interval '1-2' month(3) ^to^ month\")\n        .fails(ANY);\n    expr(\"interval '1-2' month(3) ^to^ day\")\n        .fails(ANY);\n    expr(\"interval '1-2' month(3) ^to^ hour\")\n        .fails(ANY);\n    expr(\"interval '1-2' month(3) ^to^ minute\")\n        .fails(ANY);\n    expr(\"interval '1-2' month(3) ^to^ second\")\n        .fails(ANY);\n\n    expr(\"interval '1-2' day(3) ^to^ year\")\n        .fails(ANY);\n    expr(\"interval '1-2' day(3) ^to^ month\")\n        .fails(ANY);\n\n    expr(\"interval '1-2' hour(3) ^to^ year\")\n        .fails(ANY);\n    expr(\"interval '1-2' hour(3) ^to^ month\")\n        .fails(ANY);\n    expr(\"interval '1-2' hour(3) ^to^ day\")\n        .fails(ANY);\n\n    expr(\"interval '1-2' minute(3) ^to^ year\")\n        .fails(ANY);\n    expr(\"interval '1-2' minute(3) ^to^ month\")\n        .fails(ANY);\n    expr(\"interval '1-2' minute(3) ^to^ day\")\n        .fails(ANY);\n    expr(\"interval '1-2' minute(3) ^to^ hour\")\n        .fails(ANY);\n\n    expr(\"interval '1-2' second(3) ^to^ year\")\n        .fails(ANY);\n    expr(\"interval '1-2' second(3) ^to^ month\")\n        .fails(ANY);\n    expr(\"interval '1-2' second(3) ^to^ day\")\n        .fails(ANY);\n    expr(\"interval '1-2' second(3) ^to^ hour\")\n        .fails(ANY);\n    expr(\"interval '1-2' second(3) ^to^ minute\")\n        .fails(ANY);\n\n    \r\n    expr(\"interval '1' year ^to^ year(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' year to month^(^2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' year ^to^ day(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' year ^to^ hour(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' year ^to^ minute(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' year ^to^ second(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' year ^to^ second(2,6)\")\n        .fails(ANY);\n\n    expr(\"interval '1-2' month ^to^ year(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' month ^to^ month(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' month ^to^ day(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' month ^to^ hour(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' month ^to^ minute(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' month ^to^ second(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' month ^to^ second(2,6)\")\n        .fails(ANY);\n\n    expr(\"interval '1-2' day ^to^ year(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' day ^to^ month(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' day ^to^ day(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' day to hour^(^2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' day to minute^(^2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' day to second(2^,^6)\")\n        .fails(ANY);\n\n    expr(\"interval '1-2' hour ^to^ year(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' hour ^to^ month(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' hour ^to^ day(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' hour ^to^ hour(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' hour to minute^(^2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' hour to second(2^,^6)\")\n        .fails(ANY);\n\n    expr(\"interval '1-2' minute ^to^ year(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' minute ^to^ month(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' minute ^to^ day(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' minute ^to^ hour(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' minute ^to^ minute(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' minute to second(2^,^6)\")\n        .fails(ANY);\n\n    expr(\"interval '1-2' second ^to^ year(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' second ^to^ month(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' second ^to^ day(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' second ^to^ hour(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' second ^to^ minute(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' second ^to^ second(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' second ^to^ second(2,6)\")\n        .fails(ANY);\n\n    \r\n    expr(\"interval '1' year(3) ^to^ year(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' year(3) to month^(^2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' year(3) ^to^ day(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' year(3) ^to^ hour(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' year(3) ^to^ minute(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' year(3) ^to^ second(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' year(3) ^to^ second(2,6)\")\n        .fails(ANY);\n\n    expr(\"interval '1-2' month(3) ^to^ year(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' month(3) ^to^ month(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' month(3) ^to^ day(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' month(3) ^to^ hour(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' month(3) ^to^ minute(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' month(3) ^to^ second(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' month(3) ^to^ second(2,6)\")\n        .fails(ANY);\n  }\n","realPath":"core/src/test/java/org/apache/calcite/sql/parser/SqlParserTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":6488,"status":"M"},{"authorDate":"2020-04-02 10:39:10","commitOrder":8,"curCode":"  @Test void testUnparseableIntervalQualifiers2() {\n    expr(\"interval '1-2' day(3) ^to^ year(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' day(3) ^to^ month(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' day(3) ^to^ day(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' day(3) to hour^(^2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' day(3) to minute^(^2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' day(3) to second(2^,^6)\")\n        .fails(ANY);\n\n    expr(\"interval '1-2' hour(3) ^to^ year(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' hour(3) ^to^ month(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' hour(3) ^to^ day(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' hour(3) ^to^ hour(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' hour(3) to minute^(^2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' hour(3) to second(2^,^6)\")\n        .fails(ANY);\n\n    expr(\"interval '1-2' minute(3) ^to^ year(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' minute(3) ^to^ month(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' minute(3) ^to^ day(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' minute(3) ^to^ hour(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' minute(3) ^to^ minute(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' minute(3) to second(2^,^6)\")\n        .fails(ANY);\n\n    expr(\"interval '1-2' second(3) ^to^ year(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' second(3) ^to^ month(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' second(3) ^to^ day(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' second(3) ^to^ hour(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' second(3) ^to^ minute(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' second(3) ^to^ second(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' second(3) ^to^ second(2,6)\")\n        .fails(ANY);\n\n    \r\n    expr(\"INTERVAL '0' YEAR(^-^1)\")\n        .fails(ANY);\n    expr(\"INTERVAL '0-0' YEAR(^-^1) TO MONTH\")\n        .fails(ANY);\n    expr(\"INTERVAL '0' MONTH(^-^1)\")\n        .fails(ANY);\n    expr(\"INTERVAL '0' DAY(^-^1)\")\n        .fails(ANY);\n    expr(\"INTERVAL '0 0' DAY(^-^1) TO HOUR\")\n        .fails(ANY);\n    expr(\"INTERVAL '0 0' DAY(^-^1) TO MINUTE\")\n        .fails(ANY);\n    expr(\"INTERVAL '0 0:0:0' DAY(^-^1) TO SECOND\")\n        .fails(ANY);\n    expr(\"INTERVAL '0 0:0:0' DAY TO SECOND(^-^1)\")\n        .fails(ANY);\n    expr(\"INTERVAL '0' HOUR(^-^1)\")\n        .fails(ANY);\n    expr(\"INTERVAL '0:0' HOUR(^-^1) TO MINUTE\")\n        .fails(ANY);\n    expr(\"INTERVAL '0:0:0' HOUR(^-^1) TO SECOND\")\n        .fails(ANY);\n    expr(\"INTERVAL '0:0:0' HOUR TO SECOND(^-^1)\")\n        .fails(ANY);\n    expr(\"INTERVAL '0' MINUTE(^-^1)\")\n        .fails(ANY);\n    expr(\"INTERVAL '0:0' MINUTE(^-^1) TO SECOND\")\n        .fails(ANY);\n    expr(\"INTERVAL '0:0' MINUTE TO SECOND(^-^1)\")\n        .fails(ANY);\n    expr(\"INTERVAL '0' SECOND(^-^1)\")\n        .fails(ANY);\n    expr(\"INTERVAL '0' SECOND(1, ^-^1)\")\n        .fails(ANY);\n\n    \r\n    \r\n    expr(\"interval '1' day(3) ^to^ day\")\n        .fails(ANY);\n    expr(\"interval '1' hour(3) ^to^ hour\")\n        .fails(ANY);\n    expr(\"interval '1' minute(3) ^to^ minute\")\n        .fails(ANY);\n    expr(\"interval '1' second(3) ^to^ second\")\n        .fails(ANY);\n    expr(\"interval '1' second(3,1) ^to^ second\")\n        .fails(ANY);\n    expr(\"interval '1' second(2,3) ^to^ second\")\n        .fails(ANY);\n    expr(\"interval '1' second(2,2) ^to^ second(3)\")\n        .fails(ANY);\n\n    \r\n    expr(\"INTERVAL '2' ^MILLENNIUM^\")\n        .fails(ANY);\n    expr(\"INTERVAL '1-2' ^MILLENNIUM^ TO CENTURY\")\n        .fails(ANY);\n    expr(\"INTERVAL '10' ^CENTURY^\")\n        .fails(ANY);\n    expr(\"INTERVAL '10' ^DECADE^\")\n        .fails(ANY);\n    expr(\"INTERVAL '4' ^QUARTER^\")\n        .fails(ANY);\n  }\n","date":"2020-04-06 04:57:49","endLine":6869,"groupId":"10875","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testUnparseableIntervalQualifiers2","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/df/6c18087114449f5c2ca4ff32ab24aa6a84eed3.src","preCode":"  @Test public void testUnparseableIntervalQualifiers2() {\n    expr(\"interval '1-2' day(3) ^to^ year(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' day(3) ^to^ month(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' day(3) ^to^ day(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' day(3) to hour^(^2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' day(3) to minute^(^2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' day(3) to second(2^,^6)\")\n        .fails(ANY);\n\n    expr(\"interval '1-2' hour(3) ^to^ year(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' hour(3) ^to^ month(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' hour(3) ^to^ day(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' hour(3) ^to^ hour(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' hour(3) to minute^(^2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' hour(3) to second(2^,^6)\")\n        .fails(ANY);\n\n    expr(\"interval '1-2' minute(3) ^to^ year(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' minute(3) ^to^ month(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' minute(3) ^to^ day(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' minute(3) ^to^ hour(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' minute(3) ^to^ minute(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' minute(3) to second(2^,^6)\")\n        .fails(ANY);\n\n    expr(\"interval '1-2' second(3) ^to^ year(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' second(3) ^to^ month(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' second(3) ^to^ day(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' second(3) ^to^ hour(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' second(3) ^to^ minute(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' second(3) ^to^ second(2)\")\n        .fails(ANY);\n    expr(\"interval '1-2' second(3) ^to^ second(2,6)\")\n        .fails(ANY);\n\n    \r\n    expr(\"INTERVAL '0' YEAR(^-^1)\")\n        .fails(ANY);\n    expr(\"INTERVAL '0-0' YEAR(^-^1) TO MONTH\")\n        .fails(ANY);\n    expr(\"INTERVAL '0' MONTH(^-^1)\")\n        .fails(ANY);\n    expr(\"INTERVAL '0' DAY(^-^1)\")\n        .fails(ANY);\n    expr(\"INTERVAL '0 0' DAY(^-^1) TO HOUR\")\n        .fails(ANY);\n    expr(\"INTERVAL '0 0' DAY(^-^1) TO MINUTE\")\n        .fails(ANY);\n    expr(\"INTERVAL '0 0:0:0' DAY(^-^1) TO SECOND\")\n        .fails(ANY);\n    expr(\"INTERVAL '0 0:0:0' DAY TO SECOND(^-^1)\")\n        .fails(ANY);\n    expr(\"INTERVAL '0' HOUR(^-^1)\")\n        .fails(ANY);\n    expr(\"INTERVAL '0:0' HOUR(^-^1) TO MINUTE\")\n        .fails(ANY);\n    expr(\"INTERVAL '0:0:0' HOUR(^-^1) TO SECOND\")\n        .fails(ANY);\n    expr(\"INTERVAL '0:0:0' HOUR TO SECOND(^-^1)\")\n        .fails(ANY);\n    expr(\"INTERVAL '0' MINUTE(^-^1)\")\n        .fails(ANY);\n    expr(\"INTERVAL '0:0' MINUTE(^-^1) TO SECOND\")\n        .fails(ANY);\n    expr(\"INTERVAL '0:0' MINUTE TO SECOND(^-^1)\")\n        .fails(ANY);\n    expr(\"INTERVAL '0' SECOND(^-^1)\")\n        .fails(ANY);\n    expr(\"INTERVAL '0' SECOND(1, ^-^1)\")\n        .fails(ANY);\n\n    \r\n    \r\n    expr(\"interval '1' day(3) ^to^ day\")\n        .fails(ANY);\n    expr(\"interval '1' hour(3) ^to^ hour\")\n        .fails(ANY);\n    expr(\"interval '1' minute(3) ^to^ minute\")\n        .fails(ANY);\n    expr(\"interval '1' second(3) ^to^ second\")\n        .fails(ANY);\n    expr(\"interval '1' second(3,1) ^to^ second\")\n        .fails(ANY);\n    expr(\"interval '1' second(2,3) ^to^ second\")\n        .fails(ANY);\n    expr(\"interval '1' second(2,2) ^to^ second(3)\")\n        .fails(ANY);\n\n    \r\n    expr(\"INTERVAL '2' ^MILLENNIUM^\")\n        .fails(ANY);\n    expr(\"INTERVAL '1-2' ^MILLENNIUM^ TO CENTURY\")\n        .fails(ANY);\n    expr(\"INTERVAL '10' ^CENTURY^\")\n        .fails(ANY);\n    expr(\"INTERVAL '10' ^DECADE^\")\n        .fails(ANY);\n    expr(\"INTERVAL '4' ^QUARTER^\")\n        .fails(ANY);\n  }\n","realPath":"core/src/test/java/org/apache/calcite/sql/parser/SqlParserTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":6750,"status":"M"}],"commitId":"9492dd4146f63ddc028010d6c4e86f6a5cb29a8d","commitMessage":"@@@[CALCITE-3892] Make junit test classes and methods non-public where possible\n\nPrior to junit 5.  classes and methods had to be public. This is no\nlonger the case.\n\nSome classes need to remain public because they are referenced from\nelsewhere.  or if they use reflection somehow. The remaining 'public'\nkeyword will be informative to maintainers.\n","date":"2020-04-06 04:57:49","modifiedFileCount":"196","status":"M","submitter":"Julian Hyde"}]
