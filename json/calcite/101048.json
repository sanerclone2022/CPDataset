[{"authorTime":"2020-03-12 21:16:18","codes":[{"authorDate":"2018-07-06 04:21:59","commitOrder":3,"curCode":"  public Frameworks.ConfigBuilder config() throws Exception {\n    final Holder<SchemaPlus> root = Holder.of(null);\n    CalciteAssert.model(TPCDS_MODEL)\n        .doWithConnection(connection -> {\n          root.set(connection.getRootSchema().getSubSchema(\"TPCDS\"));\n        });\n    return Frameworks.newConfigBuilder()\n        .parserConfig(SqlParser.Config.DEFAULT)\n        .defaultSchema(root.get())\n        .traitDefs((List<RelTraitDef>) null)\n        .programs(Programs.heuristicJoinOrder(Programs.RULE_SET, true, 2));\n  }\n","date":"2018-07-09 01:16:26","endLine":208,"groupId":"14817","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"config","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/b4/c079f78ee2ae21088c619874c7a262db01a34c.src","preCode":"  public Frameworks.ConfigBuilder config() throws Exception {\n    final Holder<SchemaPlus> root = Holder.of(null);\n    CalciteAssert.model(TPCDS_MODEL)\n        .doWithConnection(connection -> {\n          root.set(connection.getRootSchema().getSubSchema(\"TPCDS\"));\n        });\n    return Frameworks.newConfigBuilder()\n        .parserConfig(SqlParser.Config.DEFAULT)\n        .defaultSchema(root.get())\n        .traitDefs((List<RelTraitDef>) null)\n        .programs(Programs.heuristicJoinOrder(Programs.RULE_SET, true, 2));\n  }\n","realPath":"plus/src/test/java/org/apache/calcite/adapter/tpcds/TpcdsTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":197,"status":"NB"},{"authorDate":"2020-03-12 21:16:18","commitOrder":3,"curCode":"  public static Frameworks.ConfigBuilder config() {\n    final SchemaPlus rootSchema = Frameworks.createRootSchema(true);\n    return Frameworks.newConfigBuilder()\n        .parserConfig(SqlParser.Config.DEFAULT)\n        .defaultSchema(\n            CalciteAssert.addSchema(rootSchema, CalciteAssert.SchemaSpec.SCOTT_WITH_TEMPORAL))\n        .traitDefs((List<RelTraitDef>) null)\n        .programs(Programs.heuristicJoinOrder(Programs.RULE_SET, true, 2));\n  }\n","date":"2020-04-03 00:26:14","endLine":49,"groupId":"3659","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"config","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/d6/024336a85ebf52b545fff0350fe3370899d8e7.src","preCode":"  public static Frameworks.ConfigBuilder config() {\n    final SchemaPlus rootSchema = Frameworks.createRootSchema(true);\n    return Frameworks.newConfigBuilder()\n        .parserConfig(SqlParser.Config.DEFAULT)\n        .defaultSchema(\n            CalciteAssert.addSchema(rootSchema, CalciteAssert.SchemaSpec.SCOTT_WITH_TEMPORAL))\n        .traitDefs((List<RelTraitDef>) null)\n        .programs(Programs.heuristicJoinOrder(Programs.RULE_SET, true, 2));\n  }\n","realPath":"core/src/test/java/org/apache/calcite/sql2rel/RelFieldTrimmerTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":41,"status":"B"}],"commitId":"8849b62e7baff84dcd4262f47809e87a38be7b10","commitMessage":"@@@[CALCITE-3880] Add SortExchange support to RelFieldTrimmer (Krisztian Kasa)\n\nClose #1879\n","date":"2020-04-03 00:26:14","modifiedFileCount":"2","status":"M","submitter":"kkasa"},{"authorTime":"2020-03-12 21:16:18","codes":[{"authorDate":"2021-02-02 12:46:46","commitOrder":4,"curCode":"  public Frameworks.ConfigBuilder config() throws Exception {\n    final Holder<@Nullable SchemaPlus> root = Holder.empty();\n    CalciteAssert.model(TPCDS_MODEL)\n        .doWithConnection(connection -> {\n          root.set(connection.getRootSchema().getSubSchema(\"TPCDS\"));\n        });\n    return Frameworks.newConfigBuilder()\n        .parserConfig(SqlParser.Config.DEFAULT)\n        .defaultSchema(root.get())\n        .traitDefs((List<RelTraitDef>) null)\n        .programs(Programs.heuristicJoinOrder(Programs.RULE_SET, true, 2));\n  }\n","date":"2021-02-12 05:40:07","endLine":315,"groupId":"101048","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"config","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/18/8d589f29c9d90a7970a1e1820a6d85adfeefe6.src","preCode":"  public Frameworks.ConfigBuilder config() throws Exception {\n    final Holder<SchemaPlus> root = Holder.of(null);\n    CalciteAssert.model(TPCDS_MODEL)\n        .doWithConnection(connection -> {\n          root.set(connection.getRootSchema().getSubSchema(\"TPCDS\"));\n        });\n    return Frameworks.newConfigBuilder()\n        .parserConfig(SqlParser.Config.DEFAULT)\n        .defaultSchema(root.get())\n        .traitDefs((List<RelTraitDef>) null)\n        .programs(Programs.heuristicJoinOrder(Programs.RULE_SET, true, 2));\n  }\n","realPath":"plus/src/test/java/org/apache/calcite/adapter/tpcds/TpcdsTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":304,"status":"M"},{"authorDate":"2020-03-12 21:16:18","commitOrder":4,"curCode":"  public static Frameworks.ConfigBuilder config() {\n    final SchemaPlus rootSchema = Frameworks.createRootSchema(true);\n    return Frameworks.newConfigBuilder()\n        .parserConfig(SqlParser.Config.DEFAULT)\n        .defaultSchema(\n            CalciteAssert.addSchema(rootSchema, CalciteAssert.SchemaSpec.SCOTT_WITH_TEMPORAL))\n        .traitDefs((List<RelTraitDef>) null)\n        .programs(Programs.heuristicJoinOrder(Programs.RULE_SET, true, 2));\n  }\n","date":"2020-04-03 00:26:14","endLine":49,"groupId":"101048","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"config","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/d6/024336a85ebf52b545fff0350fe3370899d8e7.src","preCode":"  public static Frameworks.ConfigBuilder config() {\n    final SchemaPlus rootSchema = Frameworks.createRootSchema(true);\n    return Frameworks.newConfigBuilder()\n        .parserConfig(SqlParser.Config.DEFAULT)\n        .defaultSchema(\n            CalciteAssert.addSchema(rootSchema, CalciteAssert.SchemaSpec.SCOTT_WITH_TEMPORAL))\n        .traitDefs((List<RelTraitDef>) null)\n        .programs(Programs.heuristicJoinOrder(Programs.RULE_SET, true, 2));\n  }\n","realPath":"core/src/test/java/org/apache/calcite/sql2rel/RelFieldTrimmerTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":41,"status":"N"}],"commitId":"02020cb4db92513439d18328af3689a45f9f976d","commitMessage":"@@@Refactor: Add Holder.empty()\n","date":"2021-02-12 05:40:07","modifiedFileCount":"8","status":"M","submitter":"Julian Hyde"}]
