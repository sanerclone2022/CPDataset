[{"authorTime":"2014-11-14 09:39:29","codes":[{"authorDate":"2014-11-14 09:39:29","commitOrder":1,"curCode":"  @Override public String translate(String name) {\n    if (withItem.columnList == null) {\n      return name;\n    }\n    final RelDataType underlyingRowType =\n          validator.getValidatedNodeType(withItem.query);\n    int i = 0;\n    for (RelDataTypeField field : rowType.getFieldList()) {\n      if (field.getName().equals(name)) {\n        return underlyingRowType.getFieldList().get(i).getName();\n      }\n      ++i;\n    }\n    throw new AssertionError(\n        \"unknown field '\" + name\n        + \"' in rowtype \" + underlyingRowType);\n  }\n","date":"2014-11-14 09:39:34","endLine":74,"groupId":"6517","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"translate","params":"(Stringname)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/06/6551b393991c6b7d89c43d55c76e52305a7d58.src","preCode":"  @Override public String translate(String name) {\n    if (withItem.columnList == null) {\n      return name;\n    }\n    final RelDataType underlyingRowType =\n          validator.getValidatedNodeType(withItem.query);\n    int i = 0;\n    for (RelDataTypeField field : rowType.getFieldList()) {\n      if (field.getName().equals(name)) {\n        return underlyingRowType.getFieldList().get(i).getName();\n      }\n      ++i;\n    }\n    throw new AssertionError(\n        \"unknown field '\" + name\n        + \"' in rowtype \" + underlyingRowType);\n  }\n","realPath":"core/src/main/java/org/apache/calcite/sql/validate/WithItemNamespace.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":58,"status":"B"},{"authorDate":"2014-11-14 09:39:29","commitOrder":1,"curCode":"  public String translate(String name) {\n    final RelDataType underlyingRowType =\n        validator.getValidatedNodeType(call.operand(0));\n    int i = 0;\n    for (RelDataTypeField field : rowType.getFieldList()) {\n      if (field.getName().equals(name)) {\n        return underlyingRowType.getFieldList().get(i).getName();\n      }\n      ++i;\n    }\n    throw new AssertionError(\n        \"unknown field '\" + name\n        + \"' in rowtype \" + underlyingRowType);\n  }\n","date":"2014-11-14 09:39:34","endLine":121,"groupId":"6517","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"translate","params":"(Stringname)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/b2/1682337b4df00f826674615ab36c87642d7074.src","preCode":"  public String translate(String name) {\n    final RelDataType underlyingRowType =\n        validator.getValidatedNodeType(call.operand(0));\n    int i = 0;\n    for (RelDataTypeField field : rowType.getFieldList()) {\n      if (field.getName().equals(name)) {\n        return underlyingRowType.getFieldList().get(i).getName();\n      }\n      ++i;\n    }\n    throw new AssertionError(\n        \"unknown field '\" + name\n        + \"' in rowtype \" + underlyingRowType);\n  }\n","realPath":"core/src/main/java/org/apache/calcite/sql/validate/AliasNamespace.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":108,"status":"B"}],"commitId":"a611d645ad754844a39f3d98f5f814f13dbd9404","commitMessage":"@@@[CALCITE-296] Re-organize package structure;\n[CALCITE-419] Naming convention for planner rules\n\nThis change only renames files (and deletes some obsolete files). There are no content changes.\n","date":"2014-11-14 09:39:34","modifiedFileCount":"0","status":"B","submitter":"Julian Hyde"},{"authorTime":"2020-09-29 22:09:05","codes":[{"authorDate":"2014-11-14 09:39:29","commitOrder":2,"curCode":"  @Override public String translate(String name) {\n    if (withItem.columnList == null) {\n      return name;\n    }\n    final RelDataType underlyingRowType =\n          validator.getValidatedNodeType(withItem.query);\n    int i = 0;\n    for (RelDataTypeField field : rowType.getFieldList()) {\n      if (field.getName().equals(name)) {\n        return underlyingRowType.getFieldList().get(i).getName();\n      }\n      ++i;\n    }\n    throw new AssertionError(\n        \"unknown field '\" + name\n        + \"' in rowtype \" + underlyingRowType);\n  }\n","date":"2014-11-14 09:39:34","endLine":74,"groupId":"6517","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"translate","params":"(Stringname)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/06/6551b393991c6b7d89c43d55c76e52305a7d58.src","preCode":"  @Override public String translate(String name) {\n    if (withItem.columnList == null) {\n      return name;\n    }\n    final RelDataType underlyingRowType =\n          validator.getValidatedNodeType(withItem.query);\n    int i = 0;\n    for (RelDataTypeField field : rowType.getFieldList()) {\n      if (field.getName().equals(name)) {\n        return underlyingRowType.getFieldList().get(i).getName();\n      }\n      ++i;\n    }\n    throw new AssertionError(\n        \"unknown field '\" + name\n        + \"' in rowtype \" + underlyingRowType);\n  }\n","realPath":"core/src/main/java/org/apache/calcite/sql/validate/WithItemNamespace.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":58,"status":"N"},{"authorDate":"2020-09-29 22:09:05","commitOrder":2,"curCode":"  @Override public String translate(String name) {\n    final RelDataType underlyingRowType =\n        validator.getValidatedNodeType(call.operand(0));\n    int i = 0;\n    for (RelDataTypeField field : rowType.getFieldList()) {\n      if (field.getName().equals(name)) {\n        return underlyingRowType.getFieldList().get(i).getName();\n      }\n      ++i;\n    }\n    throw new AssertionError(\"unknown field '\" + name\n        + \"' in rowtype \" + underlyingRowType);\n  }\n","date":"2020-10-07 05:42:47","endLine":140,"groupId":"6517","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"translate","params":"(Stringname)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/38/222d7d1bacafd8e99bead22b75886c03c0a55c.src","preCode":"  public String translate(String name) {\n    final RelDataType underlyingRowType =\n        validator.getValidatedNodeType(call.operand(0));\n    int i = 0;\n    for (RelDataTypeField field : rowType.getFieldList()) {\n      if (field.getName().equals(name)) {\n        return underlyingRowType.getFieldList().get(i).getName();\n      }\n      ++i;\n    }\n    throw new AssertionError(\"unknown field '\" + name\n        + \"' in rowtype \" + underlyingRowType);\n  }\n","realPath":"core/src/main/java/org/apache/calcite/sql/validate/AliasNamespace.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":128,"status":"M"}],"commitId":"66caa54c5e272f8287ca132ca012733898a38768","commitMessage":"@@@[CALCITE-4314] Add missing @Override annotations\n","date":"2020-10-07 05:42:47","modifiedFileCount":"745","status":"M","submitter":"Vladimir Sitnikov"},{"authorTime":"2020-05-29 00:04:40","codes":[{"authorDate":"2020-05-29 00:04:40","commitOrder":3,"curCode":"  @Override public String translate(String name) {\n    if (withItem.columnList == null) {\n      return name;\n    }\n    final RelDataType underlyingRowType =\n          validator.getValidatedNodeType(withItem.query);\n    int i = 0;\n    for (RelDataTypeField field : getRowType().getFieldList()) {\n      if (field.getName().equals(name)) {\n        return underlyingRowType.getFieldList().get(i).getName();\n      }\n      ++i;\n    }\n    throw new AssertionError(\"unknown field '\" + name\n        + \"' in rowtype \" + underlyingRowType);\n  }\n","date":"2020-11-30 06:45:33","endLine":75,"groupId":"101847","id":5,"instanceNumber":1,"isCurCommit":1,"methodName":"translate","params":"(Stringname)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/34/9280bab98e60b1db566d00ea517a1a65d71760.src","preCode":"  @Override public String translate(String name) {\n    if (withItem.columnList == null) {\n      return name;\n    }\n    final RelDataType underlyingRowType =\n          validator.getValidatedNodeType(withItem.query);\n    int i = 0;\n    for (RelDataTypeField field : rowType.getFieldList()) {\n      if (field.getName().equals(name)) {\n        return underlyingRowType.getFieldList().get(i).getName();\n      }\n      ++i;\n    }\n    throw new AssertionError(\"unknown field '\" + name\n        + \"' in rowtype \" + underlyingRowType);\n  }\n","realPath":"core/src/main/java/org/apache/calcite/sql/validate/WithItemNamespace.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":60,"status":"M"},{"authorDate":"2020-05-29 00:04:40","commitOrder":3,"curCode":"  @Override public String translate(String name) {\n    final RelDataType underlyingRowType =\n        validator.getValidatedNodeType(call.operand(0));\n    int i = 0;\n    for (RelDataTypeField field : getRowType().getFieldList()) {\n      if (field.getName().equals(name)) {\n        return underlyingRowType.getFieldList().get(i).getName();\n      }\n      ++i;\n    }\n    throw new AssertionError(\"unknown field '\" + name\n        + \"' in rowtype \" + underlyingRowType);\n  }\n","date":"2020-11-30 06:45:33","endLine":164,"groupId":"101847","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"translate","params":"(Stringname)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/c3/447743d86a426d8fab08a3980a45f072327472.src","preCode":"  @Override public String translate(String name) {\n    final RelDataType underlyingRowType =\n        validator.getValidatedNodeType(call.operand(0));\n    int i = 0;\n    for (RelDataTypeField field : rowType.getFieldList()) {\n      if (field.getName().equals(name)) {\n        return underlyingRowType.getFieldList().get(i).getName();\n      }\n      ++i;\n    }\n    throw new AssertionError(\"unknown field '\" + name\n        + \"' in rowtype \" + underlyingRowType);\n  }\n","realPath":"core/src/main/java/org/apache/calcite/sql/validate/AliasNamespace.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":152,"status":"M"}],"commitId":"d9a81b88ad561e7e4cedae93e805e0d7a53a7f1a","commitMessage":"@@@[CALCITE-4199] Add nullability annotations\n\nThe commit includes javadoc updates and refactorings made by Julian Hyde in https://github.com/apache/calcite/pull/2278\n","date":"2020-11-30 06:45:33","modifiedFileCount":"1012","status":"M","submitter":"Vladimir Sitnikov"}]
