[{"authorTime":"2017-07-25 05:05:45","codes":[{"authorDate":"2017-07-25 05:05:45","commitOrder":1,"curCode":"  @Test public void testSelectRolledUpColumn() {\n    final String error = \"Rolled up column 'SLACKINGMIN' is not allowed in SELECT\";\n\n    sql(\"select ^slackingmin^ from emp_r\")\n            .fails(error);\n\n    sql(\"select a from (select ^slackingmin^ from emp_r)\")\n            .fails(error);\n\n    sql(\"select ^slackingmin^ as b from emp_r\")\n            .fails(error);\n\n    sql(\"select empno, ^slackingmin^ from emp_r\")\n            .fails(error);\n\n    sql(\"select slackingmin from (select empno as slackingmin from emp_r)\").ok();\n\n    sql(\"select ^emp_r.slackingmin^ from emp_r\")\n            .fails(error);\n\n    sql(\"select ^sales.emp_r.slackingmin^ from sales.emp_r\")\n            .fails(error);\n\n    sql(\"select ^sales.emp_r.slackingmin^ from emp_r\")\n            .fails(error);\n\n    sql(\"select ^catalog.sales.emp_r.slackingmin^ from emp_r\")\n            .fails(error);\n\n    sql(\"select (select ^slackingmin^ from emp_r), a from (select empno as a from emp_r)\")\n            .fails(error);\n\n    sql(\"select (((^slackingmin^))) from emp_r\")\n            .fails(error);\n  }\n","date":"2017-08-17 05:36:32","endLine":10293,"groupId":"2076","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testSelectRolledUpColumn","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/15/d44319694a944308c94d05b7faa7e842d45dd8.src","preCode":"  @Test public void testSelectRolledUpColumn() {\n    final String error = \"Rolled up column 'SLACKINGMIN' is not allowed in SELECT\";\n\n    sql(\"select ^slackingmin^ from emp_r\")\n            .fails(error);\n\n    sql(\"select a from (select ^slackingmin^ from emp_r)\")\n            .fails(error);\n\n    sql(\"select ^slackingmin^ as b from emp_r\")\n            .fails(error);\n\n    sql(\"select empno, ^slackingmin^ from emp_r\")\n            .fails(error);\n\n    sql(\"select slackingmin from (select empno as slackingmin from emp_r)\").ok();\n\n    sql(\"select ^emp_r.slackingmin^ from emp_r\")\n            .fails(error);\n\n    sql(\"select ^sales.emp_r.slackingmin^ from sales.emp_r\")\n            .fails(error);\n\n    sql(\"select ^sales.emp_r.slackingmin^ from emp_r\")\n            .fails(error);\n\n    sql(\"select ^catalog.sales.emp_r.slackingmin^ from emp_r\")\n            .fails(error);\n\n    sql(\"select (select ^slackingmin^ from emp_r), a from (select empno as a from emp_r)\")\n            .fails(error);\n\n    sql(\"select (((^slackingmin^))) from emp_r\")\n            .fails(error);\n  }\n","realPath":"core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":10259,"status":"B"},{"authorDate":"2017-07-25 05:05:45","commitOrder":1,"curCode":"  @Test public void testRollUpInWindow() {\n    final String partitionError = \"Rolled up column 'SLACKINGMIN' is not allowed in PARTITION BY\";\n    final String orderByError = \"Rolled up column 'SLACKINGMIN' is not allowed in ORDER BY\";\n\n    sql(\"select empno, sum(slackingmin) over (partition by ^slackingmin^) from emp_r\")\n            .fails(partitionError);\n\n    sql(\"select empno, sum(slackingmin) over (partition by empno, ^slackingmin^) from emp_r\")\n            .fails(partitionError);\n\n    sql(\"select empno, sum(slackingmin) over (partition by empno order by ^slackingmin^) \"\n            + \"from emp_r\")\n            .fails(orderByError);\n\n    sql(\"select empno, sum(slackingmin) over slackingmin \"\n            + \"from emp_r window slackingmin as (partition by ^slackingmin^)\")\n            .fails(partitionError);\n\n    sql(\"select sum(slackingmin) over t \"\n            + \"from emp_r window t as (partition by empno order by ^slackingmin^, empno)\")\n            .fails(orderByError);\n\n    sql(\"select sum(slackingmin) over t as a \"\n            + \"from emp_r window t as (partition by empno order by ^slackingmin^, empno)\")\n            .fails(orderByError);\n  }\n","date":"2017-08-17 05:36:32","endLine":10364,"groupId":"2377","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testRollUpInWindow","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/15/d44319694a944308c94d05b7faa7e842d45dd8.src","preCode":"  @Test public void testRollUpInWindow() {\n    final String partitionError = \"Rolled up column 'SLACKINGMIN' is not allowed in PARTITION BY\";\n    final String orderByError = \"Rolled up column 'SLACKINGMIN' is not allowed in ORDER BY\";\n\n    sql(\"select empno, sum(slackingmin) over (partition by ^slackingmin^) from emp_r\")\n            .fails(partitionError);\n\n    sql(\"select empno, sum(slackingmin) over (partition by empno, ^slackingmin^) from emp_r\")\n            .fails(partitionError);\n\n    sql(\"select empno, sum(slackingmin) over (partition by empno order by ^slackingmin^) \"\n            + \"from emp_r\")\n            .fails(orderByError);\n\n    sql(\"select empno, sum(slackingmin) over slackingmin \"\n            + \"from emp_r window slackingmin as (partition by ^slackingmin^)\")\n            .fails(partitionError);\n\n    sql(\"select sum(slackingmin) over t \"\n            + \"from emp_r window t as (partition by empno order by ^slackingmin^, empno)\")\n            .fails(orderByError);\n\n    sql(\"select sum(slackingmin) over t as a \"\n            + \"from emp_r window t as (partition by empno order by ^slackingmin^, empno)\")\n            .fails(orderByError);\n  }\n","realPath":"core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":10339,"status":"B"}],"commitId":"025eaf118f820ce4659d3891b838aa01016e7012","commitMessage":"@@@[CALCITE-1787] Add ThetaSketch and HyperUnique support to Calcite via rolled up columns (Zain Humayun)\n\nClose apache/calcite#503\n","date":"2017-08-17 05:36:32","modifiedFileCount":"33","status":"B","submitter":"Zain Humayun"},{"authorTime":"2017-07-25 05:05:45","codes":[{"authorDate":"2017-12-10 20:08:47","commitOrder":2,"curCode":"  @Test public void testSelectRolledUpColumn() {\n    final String error = \"Rolled up column 'SLACKINGMIN' is not allowed in SELECT\";\n\n    sql(\"select ^slackingmin^ from emp_r\")\n            .fails(error);\n\n    sql(\"select a from (select ^slackingmin^ from emp_r)\")\n            .fails(error);\n\n    sql(\"select ^slackingmin^ as b from emp_r\")\n            .fails(error);\n\n    sql(\"select empno, ^slackingmin^ from emp_r\")\n            .fails(error);\n\n    sql(\"select slackingmin from (select empno as slackingmin from emp_r)\").ok();\n\n    sql(\"select ^emp_r.slackingmin^ from emp_r\")\n            .fails(error);\n\n    sql(\"select ^sales.emp_r.slackingmin^ from sales.emp_r\")\n            .fails(error);\n\n    sql(\"select ^sales.emp_r.slackingmin^ from emp_r\")\n            .fails(error);\n\n    sql(\"select ^catalog.sales.emp_r.slackingmin^ from emp_r\")\n            .fails(error);\n\n    sql(\"select (select ^slackingmin^ from emp_r), a from (select empno as a from emp_r)\")\n            .fails(error);\n\n    sql(\"select (((^slackingmin^))) from emp_r\")\n            .fails(error);\n\n    sql(\"select ^slackingmin^ from nest.emp_r\")\n            .fails(error);\n  }\n","date":"2017-12-12 06:24:53","endLine":10411,"groupId":"2076","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testSelectRolledUpColumn","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/c2/d89a54fd908782e79c5a4c5c79433a1bc6b039.src","preCode":"  @Test public void testSelectRolledUpColumn() {\n    final String error = \"Rolled up column 'SLACKINGMIN' is not allowed in SELECT\";\n\n    sql(\"select ^slackingmin^ from emp_r\")\n            .fails(error);\n\n    sql(\"select a from (select ^slackingmin^ from emp_r)\")\n            .fails(error);\n\n    sql(\"select ^slackingmin^ as b from emp_r\")\n            .fails(error);\n\n    sql(\"select empno, ^slackingmin^ from emp_r\")\n            .fails(error);\n\n    sql(\"select slackingmin from (select empno as slackingmin from emp_r)\").ok();\n\n    sql(\"select ^emp_r.slackingmin^ from emp_r\")\n            .fails(error);\n\n    sql(\"select ^sales.emp_r.slackingmin^ from sales.emp_r\")\n            .fails(error);\n\n    sql(\"select ^sales.emp_r.slackingmin^ from emp_r\")\n            .fails(error);\n\n    sql(\"select ^catalog.sales.emp_r.slackingmin^ from emp_r\")\n            .fails(error);\n\n    sql(\"select (select ^slackingmin^ from emp_r), a from (select empno as a from emp_r)\")\n            .fails(error);\n\n    sql(\"select (((^slackingmin^))) from emp_r\")\n            .fails(error);\n  }\n","realPath":"core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":10374,"status":"M"},{"authorDate":"2017-07-25 05:05:45","commitOrder":2,"curCode":"  @Test public void testRollUpInWindow() {\n    final String partitionError = \"Rolled up column 'SLACKINGMIN' is not allowed in PARTITION BY\";\n    final String orderByError = \"Rolled up column 'SLACKINGMIN' is not allowed in ORDER BY\";\n\n    sql(\"select empno, sum(slackingmin) over (partition by ^slackingmin^) from emp_r\")\n            .fails(partitionError);\n\n    sql(\"select empno, sum(slackingmin) over (partition by empno, ^slackingmin^) from emp_r\")\n            .fails(partitionError);\n\n    sql(\"select empno, sum(slackingmin) over (partition by empno order by ^slackingmin^) \"\n            + \"from emp_r\")\n            .fails(orderByError);\n\n    sql(\"select empno, sum(slackingmin) over slackingmin \"\n            + \"from emp_r window slackingmin as (partition by ^slackingmin^)\")\n            .fails(partitionError);\n\n    sql(\"select sum(slackingmin) over t \"\n            + \"from emp_r window t as (partition by empno order by ^slackingmin^, empno)\")\n            .fails(orderByError);\n\n    sql(\"select sum(slackingmin) over t as a \"\n            + \"from emp_r window t as (partition by empno order by ^slackingmin^, empno)\")\n            .fails(orderByError);\n  }\n","date":"2017-08-17 05:36:32","endLine":10364,"groupId":"2377","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testRollUpInWindow","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/15/d44319694a944308c94d05b7faa7e842d45dd8.src","preCode":"  @Test public void testRollUpInWindow() {\n    final String partitionError = \"Rolled up column 'SLACKINGMIN' is not allowed in PARTITION BY\";\n    final String orderByError = \"Rolled up column 'SLACKINGMIN' is not allowed in ORDER BY\";\n\n    sql(\"select empno, sum(slackingmin) over (partition by ^slackingmin^) from emp_r\")\n            .fails(partitionError);\n\n    sql(\"select empno, sum(slackingmin) over (partition by empno, ^slackingmin^) from emp_r\")\n            .fails(partitionError);\n\n    sql(\"select empno, sum(slackingmin) over (partition by empno order by ^slackingmin^) \"\n            + \"from emp_r\")\n            .fails(orderByError);\n\n    sql(\"select empno, sum(slackingmin) over slackingmin \"\n            + \"from emp_r window slackingmin as (partition by ^slackingmin^)\")\n            .fails(partitionError);\n\n    sql(\"select sum(slackingmin) over t \"\n            + \"from emp_r window t as (partition by empno order by ^slackingmin^, empno)\")\n            .fails(orderByError);\n\n    sql(\"select sum(slackingmin) over t as a \"\n            + \"from emp_r window t as (partition by empno order by ^slackingmin^, empno)\")\n            .fails(orderByError);\n  }\n","realPath":"core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":10339,"status":"N"}],"commitId":"26b4712d4ac36c49aa8c80b2f0841be37c9de1df","commitMessage":"@@@[CALCITE-2084] SqlValidatorImpl.findTable() method incorrectly handles table schema with few schema levels (Volodymyr Vysotskyi)\n\nClose apache/calcite#580\n","date":"2017-12-12 06:24:53","modifiedFileCount":"6","status":"M","submitter":"Volodymyr Vysotskyi"},{"authorTime":"2017-07-25 05:05:45","codes":[{"authorDate":"2019-05-11 00:16:34","commitOrder":3,"curCode":"  @Test public void testSelectRolledUpColumn() {\n    final String error = \"Rolled up column 'SLACKINGMIN' is not allowed in SELECT\";\n\n    sql(\"select ^slackingmin^ from emp_r\")\n            .fails(error);\n\n    sql(\"select a from (select ^slackingmin^ from emp_r)\")\n            .fails(error);\n\n    sql(\"select ^slackingmin^ as b from emp_r\")\n            .fails(error);\n\n    sql(\"select empno, ^slackingmin^ from emp_r\")\n            .fails(error);\n\n    sql(\"select slackingmin from (select empno as slackingmin from emp_r)\").ok();\n\n    sql(\"select ^emp_r.slackingmin^ from emp_r\")\n            .fails(error);\n\n    sql(\"select ^sales.emp_r.slackingmin^ from sales.emp_r\")\n            .fails(error);\n\n    sql(\"select ^sales.emp_r.slackingmin^ from emp_r\")\n            .fails(error);\n\n    sql(\"select ^catalog.sales.emp_r.slackingmin^ from emp_r\")\n            .fails(error);\n\n    sql(\"select (select ^slackingmin^ from emp_r), a from (select empno as a from emp_r)\")\n            .fails(error);\n\n    sql(\"select (((^slackingmin^))) from emp_r\")\n            .fails(error);\n\n    sql(\"select ^slackingmin^ from nest.emp_r\")\n            .fails(error);\n\n    sql(\"with emp_r as (select 1 as slackingmin) select slackingmin from emp_r\")\n            .ok();\n\n    sql(\"with emp_r as (select ^slackingmin^ from emp_r) select slackingmin from emp_r\")\n            .fails(error);\n\n    sql(\"with emp_r1 as (select 1 as slackingmin) select emp_r1.slackingmin from emp_r, emp_r1\")\n            .ok();\n\n    sql(\"with emp_r1 as (select 1 as slackingmin) select ^emp_r.slackingmin^ from emp_r, emp_r1\")\n            .fails(error);\n  }\n","date":"2019-05-13 16:41:14","endLine":10812,"groupId":"2076","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testSelectRolledUpColumn","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/ce/7e585969f26dad1da74cd93505f8d96c136f09.src","preCode":"  @Test public void testSelectRolledUpColumn() {\n    final String error = \"Rolled up column 'SLACKINGMIN' is not allowed in SELECT\";\n\n    sql(\"select ^slackingmin^ from emp_r\")\n            .fails(error);\n\n    sql(\"select a from (select ^slackingmin^ from emp_r)\")\n            .fails(error);\n\n    sql(\"select ^slackingmin^ as b from emp_r\")\n            .fails(error);\n\n    sql(\"select empno, ^slackingmin^ from emp_r\")\n            .fails(error);\n\n    sql(\"select slackingmin from (select empno as slackingmin from emp_r)\").ok();\n\n    sql(\"select ^emp_r.slackingmin^ from emp_r\")\n            .fails(error);\n\n    sql(\"select ^sales.emp_r.slackingmin^ from sales.emp_r\")\n            .fails(error);\n\n    sql(\"select ^sales.emp_r.slackingmin^ from emp_r\")\n            .fails(error);\n\n    sql(\"select ^catalog.sales.emp_r.slackingmin^ from emp_r\")\n            .fails(error);\n\n    sql(\"select (select ^slackingmin^ from emp_r), a from (select empno as a from emp_r)\")\n            .fails(error);\n\n    sql(\"select (((^slackingmin^))) from emp_r\")\n            .fails(error);\n\n    sql(\"select ^slackingmin^ from nest.emp_r\")\n            .fails(error);\n  }\n","realPath":"core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":10763,"status":"M"},{"authorDate":"2017-07-25 05:05:45","commitOrder":3,"curCode":"  @Test public void testRollUpInWindow() {\n    final String partitionError = \"Rolled up column 'SLACKINGMIN' is not allowed in PARTITION BY\";\n    final String orderByError = \"Rolled up column 'SLACKINGMIN' is not allowed in ORDER BY\";\n\n    sql(\"select empno, sum(slackingmin) over (partition by ^slackingmin^) from emp_r\")\n            .fails(partitionError);\n\n    sql(\"select empno, sum(slackingmin) over (partition by empno, ^slackingmin^) from emp_r\")\n            .fails(partitionError);\n\n    sql(\"select empno, sum(slackingmin) over (partition by empno order by ^slackingmin^) \"\n            + \"from emp_r\")\n            .fails(orderByError);\n\n    sql(\"select empno, sum(slackingmin) over slackingmin \"\n            + \"from emp_r window slackingmin as (partition by ^slackingmin^)\")\n            .fails(partitionError);\n\n    sql(\"select sum(slackingmin) over t \"\n            + \"from emp_r window t as (partition by empno order by ^slackingmin^, empno)\")\n            .fails(orderByError);\n\n    sql(\"select sum(slackingmin) over t as a \"\n            + \"from emp_r window t as (partition by empno order by ^slackingmin^, empno)\")\n            .fails(orderByError);\n  }\n","date":"2017-08-17 05:36:32","endLine":10364,"groupId":"2377","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testRollUpInWindow","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/15/d44319694a944308c94d05b7faa7e842d45dd8.src","preCode":"  @Test public void testRollUpInWindow() {\n    final String partitionError = \"Rolled up column 'SLACKINGMIN' is not allowed in PARTITION BY\";\n    final String orderByError = \"Rolled up column 'SLACKINGMIN' is not allowed in ORDER BY\";\n\n    sql(\"select empno, sum(slackingmin) over (partition by ^slackingmin^) from emp_r\")\n            .fails(partitionError);\n\n    sql(\"select empno, sum(slackingmin) over (partition by empno, ^slackingmin^) from emp_r\")\n            .fails(partitionError);\n\n    sql(\"select empno, sum(slackingmin) over (partition by empno order by ^slackingmin^) \"\n            + \"from emp_r\")\n            .fails(orderByError);\n\n    sql(\"select empno, sum(slackingmin) over slackingmin \"\n            + \"from emp_r window slackingmin as (partition by ^slackingmin^)\")\n            .fails(partitionError);\n\n    sql(\"select sum(slackingmin) over t \"\n            + \"from emp_r window t as (partition by empno order by ^slackingmin^, empno)\")\n            .fails(orderByError);\n\n    sql(\"select sum(slackingmin) over t as a \"\n            + \"from emp_r window t as (partition by empno order by ^slackingmin^, empno)\")\n            .fails(orderByError);\n  }\n","realPath":"core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":10339,"status":"N"}],"commitId":"d0a06f78644906c2ca73e6fb5ea08f7d17f55dab","commitMessage":"@@@[CALCITE-3061] Query with WITH clause fails when alias is the same as the table with rolled up column\n\nClose #1206\n","date":"2019-05-13 16:41:14","modifiedFileCount":"3","status":"M","submitter":"Volodymyr Vysotskyi"},{"authorTime":"2020-04-02 10:39:10","codes":[{"authorDate":"2020-04-02 10:39:10","commitOrder":4,"curCode":"  @Test void testSelectRolledUpColumn() {\n    final String error = \"Rolled up column 'SLACKINGMIN' is not allowed in SELECT\";\n\n    sql(\"select ^slackingmin^ from emp_r\")\n        .fails(error);\n\n    sql(\"select a from (select ^slackingmin^ from emp_r)\")\n        .fails(error);\n\n    sql(\"select ^slackingmin^ as b from emp_r\")\n        .fails(error);\n\n    sql(\"select empno, ^slackingmin^ from emp_r\")\n        .fails(error);\n\n    sql(\"select slackingmin from (select empno as slackingmin from emp_r)\").ok();\n\n    sql(\"select ^emp_r.slackingmin^ from emp_r\")\n        .fails(error);\n\n    sql(\"select ^sales.emp_r.slackingmin^ from sales.emp_r\")\n        .fails(error);\n\n    sql(\"select ^sales.emp_r.slackingmin^ from emp_r\")\n        .fails(error);\n\n    sql(\"select ^catalog.sales.emp_r.slackingmin^ from emp_r\")\n        .fails(error);\n\n    sql(\"select (select ^slackingmin^ from emp_r), a from (select empno as a from emp_r)\")\n        .fails(error);\n\n    sql(\"select (((^slackingmin^))) from emp_r\")\n        .fails(error);\n\n    sql(\"select ^slackingmin^ from nest.emp_r\")\n        .fails(error);\n\n    sql(\"with emp_r as (select 1 as slackingmin) select slackingmin from emp_r\")\n        .ok();\n\n    sql(\"with emp_r as (select ^slackingmin^ from emp_r) select slackingmin from emp_r\")\n        .fails(error);\n\n    sql(\"with emp_r1 as (select 1 as slackingmin) select emp_r1.slackingmin from emp_r, emp_r1\")\n        .ok();\n\n    sql(\"with emp_r1 as (select 1 as slackingmin) select ^emp_r.slackingmin^ from emp_r, emp_r1\")\n        .fails(error);\n  }\n","date":"2020-04-06 04:57:49","endLine":10896,"groupId":"101218","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"testSelectRolledUpColumn","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/b6/f9115009e28a63267b183e3a0a9a5e7f343a61.src","preCode":"  @Test public void testSelectRolledUpColumn() {\n    final String error = \"Rolled up column 'SLACKINGMIN' is not allowed in SELECT\";\n\n    sql(\"select ^slackingmin^ from emp_r\")\n        .fails(error);\n\n    sql(\"select a from (select ^slackingmin^ from emp_r)\")\n        .fails(error);\n\n    sql(\"select ^slackingmin^ as b from emp_r\")\n        .fails(error);\n\n    sql(\"select empno, ^slackingmin^ from emp_r\")\n        .fails(error);\n\n    sql(\"select slackingmin from (select empno as slackingmin from emp_r)\").ok();\n\n    sql(\"select ^emp_r.slackingmin^ from emp_r\")\n        .fails(error);\n\n    sql(\"select ^sales.emp_r.slackingmin^ from sales.emp_r\")\n        .fails(error);\n\n    sql(\"select ^sales.emp_r.slackingmin^ from emp_r\")\n        .fails(error);\n\n    sql(\"select ^catalog.sales.emp_r.slackingmin^ from emp_r\")\n        .fails(error);\n\n    sql(\"select (select ^slackingmin^ from emp_r), a from (select empno as a from emp_r)\")\n        .fails(error);\n\n    sql(\"select (((^slackingmin^))) from emp_r\")\n        .fails(error);\n\n    sql(\"select ^slackingmin^ from nest.emp_r\")\n        .fails(error);\n\n    sql(\"with emp_r as (select 1 as slackingmin) select slackingmin from emp_r\")\n        .ok();\n\n    sql(\"with emp_r as (select ^slackingmin^ from emp_r) select slackingmin from emp_r\")\n        .fails(error);\n\n    sql(\"with emp_r1 as (select 1 as slackingmin) select emp_r1.slackingmin from emp_r, emp_r1\")\n        .ok();\n\n    sql(\"with emp_r1 as (select 1 as slackingmin) select ^emp_r.slackingmin^ from emp_r, emp_r1\")\n        .fails(error);\n  }\n","realPath":"core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":10847,"status":"M"},{"authorDate":"2020-04-02 10:39:10","commitOrder":4,"curCode":"  @Test void testRollUpInWindow() {\n    final String partitionError = \"Rolled up column 'SLACKINGMIN' is not allowed in PARTITION BY\";\n    final String orderByError = \"Rolled up column 'SLACKINGMIN' is not allowed in ORDER BY\";\n\n    sql(\"select empno, sum(slackingmin) over (partition by ^slackingmin^) from emp_r\")\n        .fails(partitionError);\n\n    sql(\"select empno, sum(slackingmin) over (partition by empno, ^slackingmin^) from emp_r\")\n        .fails(partitionError);\n\n    sql(\"select empno, sum(slackingmin) over (partition by empno order by ^slackingmin^) \"\n        + \"from emp_r\")\n        .fails(orderByError);\n\n    sql(\"select empno, sum(slackingmin) over slackingmin \"\n        + \"from emp_r window slackingmin as (partition by ^slackingmin^)\")\n        .fails(partitionError);\n\n    sql(\"select sum(slackingmin) over t \"\n        + \"from emp_r window t as (partition by empno order by ^slackingmin^, empno)\")\n        .fails(orderByError);\n\n    sql(\"select sum(slackingmin) over t as a \"\n        + \"from emp_r window t as (partition by empno order by ^slackingmin^, empno)\")\n        .fails(orderByError);\n  }\n","date":"2020-04-06 04:57:49","endLine":10967,"groupId":"101218","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"testRollUpInWindow","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/b6/f9115009e28a63267b183e3a0a9a5e7f343a61.src","preCode":"  @Test public void testRollUpInWindow() {\n    final String partitionError = \"Rolled up column 'SLACKINGMIN' is not allowed in PARTITION BY\";\n    final String orderByError = \"Rolled up column 'SLACKINGMIN' is not allowed in ORDER BY\";\n\n    sql(\"select empno, sum(slackingmin) over (partition by ^slackingmin^) from emp_r\")\n        .fails(partitionError);\n\n    sql(\"select empno, sum(slackingmin) over (partition by empno, ^slackingmin^) from emp_r\")\n        .fails(partitionError);\n\n    sql(\"select empno, sum(slackingmin) over (partition by empno order by ^slackingmin^) \"\n        + \"from emp_r\")\n        .fails(orderByError);\n\n    sql(\"select empno, sum(slackingmin) over slackingmin \"\n        + \"from emp_r window slackingmin as (partition by ^slackingmin^)\")\n        .fails(partitionError);\n\n    sql(\"select sum(slackingmin) over t \"\n        + \"from emp_r window t as (partition by empno order by ^slackingmin^, empno)\")\n        .fails(orderByError);\n\n    sql(\"select sum(slackingmin) over t as a \"\n        + \"from emp_r window t as (partition by empno order by ^slackingmin^, empno)\")\n        .fails(orderByError);\n  }\n","realPath":"core/src/test/java/org/apache/calcite/test/SqlValidatorTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":10942,"status":"M"}],"commitId":"9492dd4146f63ddc028010d6c4e86f6a5cb29a8d","commitMessage":"@@@[CALCITE-3892] Make junit test classes and methods non-public where possible\n\nPrior to junit 5.  classes and methods had to be public. This is no\nlonger the case.\n\nSome classes need to remain public because they are referenced from\nelsewhere.  or if they use reflection somehow. The remaining 'public'\nkeyword will be informative to maintainers.\n","date":"2020-04-06 04:57:49","modifiedFileCount":"196","status":"M","submitter":"Julian Hyde"}]
