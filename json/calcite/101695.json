[{"authorTime":"2015-03-04 06:51:09","codes":[{"authorDate":"2015-03-04 06:51:09","commitOrder":1,"curCode":"  protected void addImplicitTablesBasedOnNullaryFunctionsToBuilder(\n      ImmutableSortedMap.Builder<String, Table> builder) {\n    ImmutableSortedMap<String, Table> explicitTables = builder.build();\n\n    for (String s : implicitFunctionCache.get(System.currentTimeMillis())) {\n      \r\n      if (explicitTables.containsKey(s)) {\n        continue;\n      }\n      for (Function function : schema.getFunctions(s)) {\n        if (function instanceof TableMacro\n            && function.getParameters().isEmpty()) {\n          final Table table = ((TableMacro) function).apply(ImmutableList.of());\n          builder.put(s, table);\n        }\n      }\n    }\n  }\n","date":"2015-11-06 15:18:24","endLine":203,"groupId":"15051","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"addImplicitTablesBasedOnNullaryFunctionsToBuilder","params":"(ImmutableSortedMap.Builder<String@Table>builder)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/8d/efef452d0b0268c727dcba2a432cc493a3f096.src","preCode":"  protected void addImplicitTablesBasedOnNullaryFunctionsToBuilder(\n      ImmutableSortedMap.Builder<String, Table> builder) {\n    ImmutableSortedMap<String, Table> explicitTables = builder.build();\n\n    for (String s : implicitFunctionCache.get(System.currentTimeMillis())) {\n      \r\n      if (explicitTables.containsKey(s)) {\n        continue;\n      }\n      for (Function function : schema.getFunctions(s)) {\n        if (function instanceof TableMacro\n            && function.getParameters().isEmpty()) {\n          final Table table = ((TableMacro) function).apply(ImmutableList.of());\n          builder.put(s, table);\n        }\n      }\n    }\n  }\n","realPath":"core/src/main/java/org/apache/calcite/jdbc/CachingCalciteSchema.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":186,"status":"B"},{"authorDate":"2015-03-04 06:51:09","commitOrder":1,"curCode":"  protected void addImplicitTablesBasedOnNullaryFunctionsToBuilder(\n      ImmutableSortedMap.Builder<String, Table> builder) {\n    ImmutableSortedMap<String, Table> explicitTables = builder.build();\n\n    for (String s : schema.getFunctionNames()) {\n      \r\n      if (explicitTables.containsKey(s)) {\n        continue;\n      }\n      for (Function function : schema.getFunctions(s)) {\n        if (function instanceof TableMacro\n            && function.getParameters().isEmpty()) {\n          final Table table = ((TableMacro) function).apply(ImmutableList.of());\n          builder.put(s, table);\n        }\n      }\n    }\n  }\n","date":"2015-11-06 15:18:24","endLine":119,"groupId":"15051","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"addImplicitTablesBasedOnNullaryFunctionsToBuilder","params":"(ImmutableSortedMap.Builder<String@Table>builder)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/40/a8870ccc63428b98a3d4636318e067adc763b9.src","preCode":"  protected void addImplicitTablesBasedOnNullaryFunctionsToBuilder(\n      ImmutableSortedMap.Builder<String, Table> builder) {\n    ImmutableSortedMap<String, Table> explicitTables = builder.build();\n\n    for (String s : schema.getFunctionNames()) {\n      \r\n      if (explicitTables.containsKey(s)) {\n        continue;\n      }\n      for (Function function : schema.getFunctions(s)) {\n        if (function instanceof TableMacro\n            && function.getParameters().isEmpty()) {\n          final Table table = ((TableMacro) function).apply(ImmutableList.of());\n          builder.put(s, table);\n        }\n      }\n    }\n  }\n","realPath":"core/src/main/java/org/apache/calcite/jdbc/SimpleCalciteSchema.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":102,"status":"B"}],"commitId":"ac8d04ed95589f29571b7de3c220876c3ebc3a00","commitMessage":"@@@[CALCITE-911] Add a variant of CalciteSchema that does not cache sub-objects\n\nClose apache/calcite#142\n","date":"2015-11-06 15:18:24","modifiedFileCount":"13","status":"B","submitter":"Jinfeng Ni"},{"authorTime":"2015-03-04 06:51:09","codes":[{"authorDate":"2017-01-05 10:36:30","commitOrder":2,"curCode":"  protected void addImplicitTablesBasedOnNullaryFunctionsToBuilder(\n      ImmutableSortedMap.Builder<String, Table> builder) {\n    ImmutableSortedMap<String, Table> explicitTables = builder.build();\n\n    final long now = System.currentTimeMillis();\n    final NameSet set = implicitFunctionCache.get(now);\n    for (String s : set.iterable()) {\n      \r\n      if (explicitTables.containsKey(s)) {\n        continue;\n      }\n      for (Function function : schema.getFunctions(s)) {\n        if (function instanceof TableMacro\n            && function.getParameters().isEmpty()) {\n          final Table table = ((TableMacro) function).apply(ImmutableList.of());\n          builder.put(s, table);\n        }\n      }\n    }\n  }\n","date":"2017-01-07 02:45:52","endLine":184,"groupId":"15051","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"addImplicitTablesBasedOnNullaryFunctionsToBuilder","params":"(ImmutableSortedMap.Builder<String@Table>builder)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/79/85bf20304c70254fb10855fa8a496ba4a46452.src","preCode":"  protected void addImplicitTablesBasedOnNullaryFunctionsToBuilder(\n      ImmutableSortedMap.Builder<String, Table> builder) {\n    ImmutableSortedMap<String, Table> explicitTables = builder.build();\n\n    for (String s : implicitFunctionCache.get(System.currentTimeMillis())) {\n      \r\n      if (explicitTables.containsKey(s)) {\n        continue;\n      }\n      for (Function function : schema.getFunctions(s)) {\n        if (function instanceof TableMacro\n            && function.getParameters().isEmpty()) {\n          final Table table = ((TableMacro) function).apply(ImmutableList.of());\n          builder.put(s, table);\n        }\n      }\n    }\n  }\n","realPath":"core/src/main/java/org/apache/calcite/jdbc/CachingCalciteSchema.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":165,"status":"M"},{"authorDate":"2015-03-04 06:51:09","commitOrder":2,"curCode":"  protected void addImplicitTablesBasedOnNullaryFunctionsToBuilder(\n      ImmutableSortedMap.Builder<String, Table> builder) {\n    ImmutableSortedMap<String, Table> explicitTables = builder.build();\n\n    for (String s : schema.getFunctionNames()) {\n      \r\n      if (explicitTables.containsKey(s)) {\n        continue;\n      }\n      for (Function function : schema.getFunctions(s)) {\n        if (function instanceof TableMacro\n            && function.getParameters().isEmpty()) {\n          final Table table = ((TableMacro) function).apply(ImmutableList.of());\n          builder.put(s, table);\n        }\n      }\n    }\n  }\n","date":"2015-11-06 15:18:24","endLine":119,"groupId":"15051","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"addImplicitTablesBasedOnNullaryFunctionsToBuilder","params":"(ImmutableSortedMap.Builder<String@Table>builder)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/40/a8870ccc63428b98a3d4636318e067adc763b9.src","preCode":"  protected void addImplicitTablesBasedOnNullaryFunctionsToBuilder(\n      ImmutableSortedMap.Builder<String, Table> builder) {\n    ImmutableSortedMap<String, Table> explicitTables = builder.build();\n\n    for (String s : schema.getFunctionNames()) {\n      \r\n      if (explicitTables.containsKey(s)) {\n        continue;\n      }\n      for (Function function : schema.getFunctions(s)) {\n        if (function instanceof TableMacro\n            && function.getParameters().isEmpty()) {\n          final Table table = ((TableMacro) function).apply(ImmutableList.of());\n          builder.put(s, table);\n        }\n      }\n    }\n  }\n","realPath":"core/src/main/java/org/apache/calcite/jdbc/SimpleCalciteSchema.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":102,"status":"N"}],"commitId":"40e5b8847b6a2966b024191fb5f65db642d17519","commitMessage":"@@@[CALCITE-1563] In case-insensitive connection.  non-existent tables use alphabetically preceding table\n","date":"2017-01-07 02:45:52","modifiedFileCount":"5","status":"M","submitter":"Julian Hyde"},{"authorTime":"2020-09-29 22:09:05","codes":[{"authorDate":"2020-09-29 22:09:05","commitOrder":3,"curCode":"  @Override protected void addImplicitTablesBasedOnNullaryFunctionsToBuilder(\n      ImmutableSortedMap.Builder<String, Table> builder) {\n    ImmutableSortedMap<String, Table> explicitTables = builder.build();\n\n    final long now = System.currentTimeMillis();\n    final NameSet set = implicitFunctionCache.get(now);\n    for (String s : set.iterable()) {\n      \r\n      if (explicitTables.containsKey(s)) {\n        continue;\n      }\n      for (Function function : schema.getFunctions(s)) {\n        if (function instanceof TableMacro\n            && function.getParameters().isEmpty()) {\n          final Table table = ((TableMacro) function).apply(ImmutableList.of());\n          builder.put(s, table);\n        }\n      }\n    }\n  }\n","date":"2020-10-07 05:42:47","endLine":229,"groupId":"101695","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"addImplicitTablesBasedOnNullaryFunctionsToBuilder","params":"(ImmutableSortedMap.Builder<String@Table>builder)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/23/e144552a54f424780499bc4415efc1ad68ceee.src","preCode":"  protected void addImplicitTablesBasedOnNullaryFunctionsToBuilder(\n      ImmutableSortedMap.Builder<String, Table> builder) {\n    ImmutableSortedMap<String, Table> explicitTables = builder.build();\n\n    final long now = System.currentTimeMillis();\n    final NameSet set = implicitFunctionCache.get(now);\n    for (String s : set.iterable()) {\n      \r\n      if (explicitTables.containsKey(s)) {\n        continue;\n      }\n      for (Function function : schema.getFunctions(s)) {\n        if (function instanceof TableMacro\n            && function.getParameters().isEmpty()) {\n          final Table table = ((TableMacro) function).apply(ImmutableList.of());\n          builder.put(s, table);\n        }\n      }\n    }\n  }\n","realPath":"core/src/main/java/org/apache/calcite/jdbc/CachingCalciteSchema.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":210,"status":"M"},{"authorDate":"2020-09-29 22:09:05","commitOrder":3,"curCode":"  @Override protected void addImplicitTablesBasedOnNullaryFunctionsToBuilder(\n      ImmutableSortedMap.Builder<String, Table> builder) {\n    ImmutableSortedMap<String, Table> explicitTables = builder.build();\n\n    for (String s : schema.getFunctionNames()) {\n      \r\n      if (explicitTables.containsKey(s)) {\n        continue;\n      }\n      for (Function function : schema.getFunctions(s)) {\n        if (function instanceof TableMacro\n            && function.getParameters().isEmpty()) {\n          final Table table = ((TableMacro) function).apply(ImmutableList.of());\n          builder.put(s, table);\n        }\n      }\n    }\n  }\n","date":"2020-10-07 05:42:47","endLine":155,"groupId":"101695","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"addImplicitTablesBasedOnNullaryFunctionsToBuilder","params":"(ImmutableSortedMap.Builder<String@Table>builder)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/ab/08915b408dc241fa10b9ff4102d0bf87b963d4.src","preCode":"  protected void addImplicitTablesBasedOnNullaryFunctionsToBuilder(\n      ImmutableSortedMap.Builder<String, Table> builder) {\n    ImmutableSortedMap<String, Table> explicitTables = builder.build();\n\n    for (String s : schema.getFunctionNames()) {\n      \r\n      if (explicitTables.containsKey(s)) {\n        continue;\n      }\n      for (Function function : schema.getFunctions(s)) {\n        if (function instanceof TableMacro\n            && function.getParameters().isEmpty()) {\n          final Table table = ((TableMacro) function).apply(ImmutableList.of());\n          builder.put(s, table);\n        }\n      }\n    }\n  }\n","realPath":"core/src/main/java/org/apache/calcite/jdbc/SimpleCalciteSchema.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":138,"status":"M"}],"commitId":"66caa54c5e272f8287ca132ca012733898a38768","commitMessage":"@@@[CALCITE-4314] Add missing @Override annotations\n","date":"2020-10-07 05:42:47","modifiedFileCount":"745","status":"M","submitter":"Vladimir Sitnikov"}]
