[{"authorTime":"2018-06-29 08:56:11","codes":[{"authorDate":"2018-06-29 08:56:11","commitOrder":3,"curCode":"  @Test public void testRemoteExecuteQuery2() throws Exception {\n    try (Connection remoteConnection = getRemoteConnection()) {\n      final Statement statement = remoteConnection.createStatement();\n      final String sql = \"values (1, 'a'), (cast(null as integer), 'b')\";\n      final ResultSet resultSet = statement.executeQuery(sql);\n      int n = 0;\n      while (resultSet.next()) {\n        ++n;\n      }\n      assertThat(n, equalTo(2));\n    }\n  }\n","date":"2018-06-29 09:27:18","endLine":308,"groupId":"3366","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testRemoteExecuteQuery2","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/80/1caa90b7b2d0edc4ec9d6b5005187c3f10d775.src","preCode":"  @Test public void testRemoteExecuteQuery2() throws Exception {\n    try (Connection remoteConnection = getRemoteConnection()) {\n      final Statement statement = remoteConnection.createStatement();\n      final String sql = \"values (1, 'a'), (cast(null as integer), 'b')\";\n      final ResultSet resultSet = statement.executeQuery(sql);\n      int n = 0;\n      while (resultSet.next()) {\n        ++n;\n      }\n      assertThat(n, equalTo(2));\n    }\n  }\n","realPath":"core/src/test/java/org/apache/calcite/jdbc/CalciteRemoteDriverTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":297,"status":"B"},{"authorDate":"2018-06-29 08:56:11","commitOrder":3,"curCode":"  @Test public void testRemoteStatementExecute() throws Exception {\n    try (Connection remoteConnection = getRemoteConnection()) {\n      final Statement statement = remoteConnection.createStatement();\n      final boolean status = statement.execute(\"values (1, 2), (3, 4), (5, 6)\");\n      assertThat(status, is(true));\n      final ResultSet resultSet = statement.getResultSet();\n      int n = 0;\n      while (resultSet.next()) {\n        ++n;\n      }\n      assertThat(n, equalTo(3));\n    }\n  }\n","date":"2018-06-29 09:27:18","endLine":468,"groupId":"2865","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testRemoteStatementExecute","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/80/1caa90b7b2d0edc4ec9d6b5005187c3f10d775.src","preCode":"  @Test public void testRemoteStatementExecute() throws Exception {\n    try (Connection remoteConnection = getRemoteConnection()) {\n      final Statement statement = remoteConnection.createStatement();\n      final boolean status = statement.execute(\"values (1, 2), (3, 4), (5, 6)\");\n      assertThat(status, is(true));\n      final ResultSet resultSet = statement.getResultSet();\n      int n = 0;\n      while (resultSet.next()) {\n        ++n;\n      }\n      assertThat(n, equalTo(3));\n    }\n  }\n","realPath":"core/src/test/java/org/apache/calcite/jdbc/CalciteRemoteDriverTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":456,"status":"MB"}],"commitId":"b36a10725b2569d8583ea66aea9dcceb9e0341ac","commitMessage":"@@@[CALCITE-2365] Upgrade avatica to 1.12\n","date":"2018-06-29 09:27:18","modifiedFileCount":"10","status":"M","submitter":"Julian Hyde"},{"authorTime":"2020-04-02 10:39:10","codes":[{"authorDate":"2020-04-02 10:39:10","commitOrder":4,"curCode":"  @Test void testRemoteExecuteQuery2() throws Exception {\n    try (Connection remoteConnection = getRemoteConnection()) {\n      final Statement statement = remoteConnection.createStatement();\n      final String sql = \"values (1, 'a'), (cast(null as integer), 'b')\";\n      final ResultSet resultSet = statement.executeQuery(sql);\n      int n = 0;\n      while (resultSet.next()) {\n        ++n;\n      }\n      assertThat(n, equalTo(2));\n    }\n  }\n","date":"2020-04-06 04:57:49","endLine":303,"groupId":"10675","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testRemoteExecuteQuery2","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/46/9f7b82fa165ba21387f1308443e84237ce242d.src","preCode":"  @Test public void testRemoteExecuteQuery2() throws Exception {\n    try (Connection remoteConnection = getRemoteConnection()) {\n      final Statement statement = remoteConnection.createStatement();\n      final String sql = \"values (1, 'a'), (cast(null as integer), 'b')\";\n      final ResultSet resultSet = statement.executeQuery(sql);\n      int n = 0;\n      while (resultSet.next()) {\n        ++n;\n      }\n      assertThat(n, equalTo(2));\n    }\n  }\n","realPath":"core/src/test/java/org/apache/calcite/jdbc/CalciteRemoteDriverTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":292,"status":"M"},{"authorDate":"2020-04-02 10:39:10","commitOrder":4,"curCode":"  @Test void testRemoteStatementExecute() throws Exception {\n    try (Connection remoteConnection = getRemoteConnection()) {\n      final Statement statement = remoteConnection.createStatement();\n      final boolean status = statement.execute(\"values (1, 2), (3, 4), (5, 6)\");\n      assertThat(status, is(true));\n      final ResultSet resultSet = statement.getResultSet();\n      int n = 0;\n      while (resultSet.next()) {\n        ++n;\n      }\n      assertThat(n, equalTo(3));\n    }\n  }\n","date":"2020-04-06 04:57:49","endLine":463,"groupId":"10675","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testRemoteStatementExecute","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/46/9f7b82fa165ba21387f1308443e84237ce242d.src","preCode":"  @Test public void testRemoteStatementExecute() throws Exception {\n    try (Connection remoteConnection = getRemoteConnection()) {\n      final Statement statement = remoteConnection.createStatement();\n      final boolean status = statement.execute(\"values (1, 2), (3, 4), (5, 6)\");\n      assertThat(status, is(true));\n      final ResultSet resultSet = statement.getResultSet();\n      int n = 0;\n      while (resultSet.next()) {\n        ++n;\n      }\n      assertThat(n, equalTo(3));\n    }\n  }\n","realPath":"core/src/test/java/org/apache/calcite/jdbc/CalciteRemoteDriverTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":451,"status":"M"}],"commitId":"9492dd4146f63ddc028010d6c4e86f6a5cb29a8d","commitMessage":"@@@[CALCITE-3892] Make junit test classes and methods non-public where possible\n\nPrior to junit 5.  classes and methods had to be public. This is no\nlonger the case.\n\nSome classes need to remain public because they are referenced from\nelsewhere.  or if they use reflection somehow. The remaining 'public'\nkeyword will be informative to maintainers.\n","date":"2020-04-06 04:57:49","modifiedFileCount":"196","status":"M","submitter":"Julian Hyde"}]
