[{"authorTime":"2014-11-14 09:39:29","codes":[{"authorDate":"2014-11-14 09:39:29","commitOrder":1,"curCode":"  @Test public void testGreaterThanOperatorIntervals() {\n    tester.checkBoolean(\n        \"interval '2' day > interval '1' day\",\n        Boolean.TRUE);\n    tester.checkBoolean(\n        \"interval '2' day > interval '5' day\",\n        Boolean.FALSE);\n    tester.checkBoolean(\n        \"interval '2 2:2:2' day to second > interval '2' day\",\n        Boolean.TRUE);\n    tester.checkBoolean(\n        \"interval '2' day > interval '2' day\",\n        Boolean.FALSE);\n    tester.checkBoolean(\n        \"interval '2' day > interval '-2' day\",\n        Boolean.TRUE);\n    tester.checkBoolean(\n        \"interval '2' day > interval '2' hour\",\n        Boolean.TRUE);\n    tester.checkBoolean(\n        \"interval '2' minute > interval '2' hour\",\n        Boolean.FALSE);\n    tester.checkBoolean(\n        \"interval '2' second > interval '2' minute\",\n        Boolean.FALSE);\n    tester.checkNull(\n        \"cast(null as interval hour) > interval '2' minute\");\n    tester.checkNull(\n        \"interval '2:2' hour to minute > cast(null as interval second)\");\n  }\n","date":"2014-11-14 09:39:34","endLine":1998,"groupId":"6243","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testGreaterThanOperatorIntervals","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/c1/ce9911d6cdbc46441ce964a9cf5f40a7143e6e.src","preCode":"  @Test public void testGreaterThanOperatorIntervals() {\n    tester.checkBoolean(\n        \"interval '2' day > interval '1' day\",\n        Boolean.TRUE);\n    tester.checkBoolean(\n        \"interval '2' day > interval '5' day\",\n        Boolean.FALSE);\n    tester.checkBoolean(\n        \"interval '2 2:2:2' day to second > interval '2' day\",\n        Boolean.TRUE);\n    tester.checkBoolean(\n        \"interval '2' day > interval '2' day\",\n        Boolean.FALSE);\n    tester.checkBoolean(\n        \"interval '2' day > interval '-2' day\",\n        Boolean.TRUE);\n    tester.checkBoolean(\n        \"interval '2' day > interval '2' hour\",\n        Boolean.TRUE);\n    tester.checkBoolean(\n        \"interval '2' minute > interval '2' hour\",\n        Boolean.FALSE);\n    tester.checkBoolean(\n        \"interval '2' second > interval '2' minute\",\n        Boolean.FALSE);\n    tester.checkNull(\n        \"cast(null as interval hour) > interval '2' minute\");\n    tester.checkNull(\n        \"interval '2:2' hour to minute > cast(null as interval second)\");\n  }\n","realPath":"core/src/test/java/org/apache/calcite/sql/test/SqlOperatorBaseTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":1969,"status":"B"},{"authorDate":"2014-11-14 09:39:29","commitOrder":1,"curCode":"  @Test public void testLessThanOperatorInterval() {\n    if (!DECIMAL) {\n      return;\n    }\n    tester.checkBoolean(\n        \"interval '2' day < interval '1' day\",\n        Boolean.FALSE);\n    tester.checkBoolean(\n        \"interval '2' day < interval '5' day\",\n        Boolean.TRUE);\n    tester.checkBoolean(\n        \"interval '2 2:2:2' day to second < interval '2' day\",\n        Boolean.FALSE);\n    tester.checkBoolean(\n        \"interval '2' day < interval '2' day\",\n        Boolean.FALSE);\n    tester.checkBoolean(\n        \"interval '2' day < interval '-2' day\",\n        Boolean.FALSE);\n    tester.checkBoolean(\n        \"interval '2' day < interval '2' hour\",\n        Boolean.FALSE);\n    tester.checkBoolean(\n        \"interval '2' minute < interval '2' hour\",\n        Boolean.TRUE);\n    tester.checkBoolean(\n        \"interval '2' second < interval '2' minute\",\n        Boolean.TRUE);\n    tester.checkNull(\n        \"cast(null as interval hour) < interval '2' minute\");\n    tester.checkNull(\n        \"interval '2:2' hour to minute < cast(null as interval second)\");\n  }\n","date":"2014-11-14 09:39:34","endLine":2297,"groupId":"7860","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testLessThanOperatorInterval","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/c1/ce9911d6cdbc46441ce964a9cf5f40a7143e6e.src","preCode":"  @Test public void testLessThanOperatorInterval() {\n    if (!DECIMAL) {\n      return;\n    }\n    tester.checkBoolean(\n        \"interval '2' day < interval '1' day\",\n        Boolean.FALSE);\n    tester.checkBoolean(\n        \"interval '2' day < interval '5' day\",\n        Boolean.TRUE);\n    tester.checkBoolean(\n        \"interval '2 2:2:2' day to second < interval '2' day\",\n        Boolean.FALSE);\n    tester.checkBoolean(\n        \"interval '2' day < interval '2' day\",\n        Boolean.FALSE);\n    tester.checkBoolean(\n        \"interval '2' day < interval '-2' day\",\n        Boolean.FALSE);\n    tester.checkBoolean(\n        \"interval '2' day < interval '2' hour\",\n        Boolean.FALSE);\n    tester.checkBoolean(\n        \"interval '2' minute < interval '2' hour\",\n        Boolean.TRUE);\n    tester.checkBoolean(\n        \"interval '2' second < interval '2' minute\",\n        Boolean.TRUE);\n    tester.checkNull(\n        \"cast(null as interval hour) < interval '2' minute\");\n    tester.checkNull(\n        \"interval '2:2' hour to minute < cast(null as interval second)\");\n  }\n","realPath":"core/src/test/java/org/apache/calcite/sql/test/SqlOperatorBaseTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":2265,"status":"B"}],"commitId":"a611d645ad754844a39f3d98f5f814f13dbd9404","commitMessage":"@@@[CALCITE-296] Re-organize package structure;\n[CALCITE-419] Naming convention for planner rules\n\nThis change only renames files (and deletes some obsolete files). There are no content changes.\n","date":"2014-11-14 09:39:34","modifiedFileCount":"0","status":"B","submitter":"Julian Hyde"},{"authorTime":"2020-04-02 10:39:10","codes":[{"authorDate":"2020-04-02 10:39:10","commitOrder":2,"curCode":"  @Test void testGreaterThanOperatorIntervals() {\n    tester.checkBoolean(\n        \"interval '2' day > interval '1' day\",\n        Boolean.TRUE);\n    tester.checkBoolean(\n        \"interval '2' day > interval '5' day\",\n        Boolean.FALSE);\n    tester.checkBoolean(\n        \"interval '2 2:2:2' day to second > interval '2' day\",\n        Boolean.TRUE);\n    tester.checkBoolean(\n        \"interval '2' day > interval '2' day\",\n        Boolean.FALSE);\n    tester.checkBoolean(\n        \"interval '2' day > interval '-2' day\",\n        Boolean.TRUE);\n    tester.checkBoolean(\n        \"interval '2' day > interval '2' hour\",\n        Boolean.TRUE);\n    tester.checkBoolean(\n        \"interval '2' minute > interval '2' hour\",\n        Boolean.FALSE);\n    tester.checkBoolean(\n        \"interval '2' second > interval '2' minute\",\n        Boolean.FALSE);\n    tester.checkNull(\n        \"cast(null as interval hour) > interval '2' minute\");\n    tester.checkNull(\n        \"interval '2:2' hour to minute > cast(null as interval second)\");\n  }\n","date":"2020-04-06 04:57:49","endLine":2473,"groupId":"10753","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testGreaterThanOperatorIntervals","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/63/8682f250d7c070d5d126ca9e1e757179e57de4.src","preCode":"  @Test public void testGreaterThanOperatorIntervals() {\n    tester.checkBoolean(\n        \"interval '2' day > interval '1' day\",\n        Boolean.TRUE);\n    tester.checkBoolean(\n        \"interval '2' day > interval '5' day\",\n        Boolean.FALSE);\n    tester.checkBoolean(\n        \"interval '2 2:2:2' day to second > interval '2' day\",\n        Boolean.TRUE);\n    tester.checkBoolean(\n        \"interval '2' day > interval '2' day\",\n        Boolean.FALSE);\n    tester.checkBoolean(\n        \"interval '2' day > interval '-2' day\",\n        Boolean.TRUE);\n    tester.checkBoolean(\n        \"interval '2' day > interval '2' hour\",\n        Boolean.TRUE);\n    tester.checkBoolean(\n        \"interval '2' minute > interval '2' hour\",\n        Boolean.FALSE);\n    tester.checkBoolean(\n        \"interval '2' second > interval '2' minute\",\n        Boolean.FALSE);\n    tester.checkNull(\n        \"cast(null as interval hour) > interval '2' minute\");\n    tester.checkNull(\n        \"interval '2:2' hour to minute > cast(null as interval second)\");\n  }\n","realPath":"core/src/test/java/org/apache/calcite/sql/test/SqlOperatorBaseTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":2444,"status":"M"},{"authorDate":"2020-04-02 10:39:10","commitOrder":2,"curCode":"  @Test void testLessThanOperatorInterval() {\n    if (!DECIMAL) {\n      return;\n    }\n    tester.checkBoolean(\n        \"interval '2' day < interval '1' day\",\n        Boolean.FALSE);\n    tester.checkBoolean(\n        \"interval '2' day < interval '5' day\",\n        Boolean.TRUE);\n    tester.checkBoolean(\n        \"interval '2 2:2:2' day to second < interval '2' day\",\n        Boolean.FALSE);\n    tester.checkBoolean(\n        \"interval '2' day < interval '2' day\",\n        Boolean.FALSE);\n    tester.checkBoolean(\n        \"interval '2' day < interval '-2' day\",\n        Boolean.FALSE);\n    tester.checkBoolean(\n        \"interval '2' day < interval '2' hour\",\n        Boolean.FALSE);\n    tester.checkBoolean(\n        \"interval '2' minute < interval '2' hour\",\n        Boolean.TRUE);\n    tester.checkBoolean(\n        \"interval '2' second < interval '2' minute\",\n        Boolean.TRUE);\n    tester.checkNull(\n        \"cast(null as interval hour) < interval '2' minute\");\n    tester.checkNull(\n        \"interval '2:2' hour to minute < cast(null as interval second)\");\n  }\n","date":"2020-04-06 04:57:49","endLine":2929,"groupId":"10753","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testLessThanOperatorInterval","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/63/8682f250d7c070d5d126ca9e1e757179e57de4.src","preCode":"  @Test public void testLessThanOperatorInterval() {\n    if (!DECIMAL) {\n      return;\n    }\n    tester.checkBoolean(\n        \"interval '2' day < interval '1' day\",\n        Boolean.FALSE);\n    tester.checkBoolean(\n        \"interval '2' day < interval '5' day\",\n        Boolean.TRUE);\n    tester.checkBoolean(\n        \"interval '2 2:2:2' day to second < interval '2' day\",\n        Boolean.FALSE);\n    tester.checkBoolean(\n        \"interval '2' day < interval '2' day\",\n        Boolean.FALSE);\n    tester.checkBoolean(\n        \"interval '2' day < interval '-2' day\",\n        Boolean.FALSE);\n    tester.checkBoolean(\n        \"interval '2' day < interval '2' hour\",\n        Boolean.FALSE);\n    tester.checkBoolean(\n        \"interval '2' minute < interval '2' hour\",\n        Boolean.TRUE);\n    tester.checkBoolean(\n        \"interval '2' second < interval '2' minute\",\n        Boolean.TRUE);\n    tester.checkNull(\n        \"cast(null as interval hour) < interval '2' minute\");\n    tester.checkNull(\n        \"interval '2:2' hour to minute < cast(null as interval second)\");\n  }\n","realPath":"core/src/test/java/org/apache/calcite/sql/test/SqlOperatorBaseTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":2897,"status":"M"}],"commitId":"9492dd4146f63ddc028010d6c4e86f6a5cb29a8d","commitMessage":"@@@[CALCITE-3892] Make junit test classes and methods non-public where possible\n\nPrior to junit 5.  classes and methods had to be public. This is no\nlonger the case.\n\nSome classes need to remain public because they are referenced from\nelsewhere.  or if they use reflection somehow. The remaining 'public'\nkeyword will be informative to maintainers.\n","date":"2020-04-06 04:57:49","modifiedFileCount":"196","status":"M","submitter":"Julian Hyde"}]
