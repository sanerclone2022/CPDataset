[{"authorTime":"2016-01-19 08:22:06","codes":[{"authorDate":"2016-01-19 08:22:06","commitOrder":1,"curCode":"      Double getPercentageOriginalRows(RelNode r, RelMetadataQuery mq);\n    }\n  }\n\n  \r\n\n  public interface PopulationSize extends Metadata {\n    MetadataDef<PopulationSize> DEF = MetadataDef.of(PopulationSize.class,\n        PopulationSize.Handler.class, BuiltInMethod.POPULATION_SIZE.method);\n\n    \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\n    Double getPopulationSize(ImmutableBitSet groupKey);\n\n    \n    interface Handler extends MetadataHandler<PopulationSize> {\n      Double getPopulationSize(RelNode r, RelMetadataQuery mq,\n          ImmutableBitSet groupKey);\n    }\n  }\n","date":"2016-02-25 05:37:49","endLine":284,"groupId":"11587","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"getPercentageOriginalRows","params":"(RelNoder@RelMetadataQuerymq)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/0f/f051567d15da446ced6925dcd911b410798f19.src","preCode":"      Double getPercentageOriginalRows(RelNode r, RelMetadataQuery mq);\n    }\n  }\n\n  \r\n\n  public interface PopulationSize extends Metadata {\n    MetadataDef<PopulationSize> DEF = MetadataDef.of(PopulationSize.class,\n        PopulationSize.Handler.class, BuiltInMethod.POPULATION_SIZE.method);\n\n    \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\n    Double getPopulationSize(ImmutableBitSet groupKey);\n\n    \n    interface Handler extends MetadataHandler<PopulationSize> {\n      Double getPopulationSize(RelNode r, RelMetadataQuery mq,\n          ImmutableBitSet groupKey);\n    }\n  }\n","realPath":"core/src/main/java/org/apache/calcite/rel/metadata/BuiltInMetadata.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":256,"status":"B"},{"authorDate":"2016-01-19 08:22:06","commitOrder":1,"curCode":"      Double getPopulationSize(RelNode r, RelMetadataQuery mq,\n          ImmutableBitSet groupKey);\n    }\n  }\n\n  \n  public interface Size extends Metadata {\n    MetadataDef<Size> DEF = MetadataDef.of(Size.class, Size.Handler.class,\n        BuiltInMethod.AVERAGE_ROW_SIZE.method,\n        BuiltInMethod.AVERAGE_COLUMN_SIZES.method);\n\n    \r\n\r\n\r\n\n    Double averageRowSize();\n\n    \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\n    List<Double> averageColumnSizes();\n\n    \n    interface Handler extends MetadataHandler<Size> {\n      Double averageRowSize(RelNode r, RelMetadataQuery mq);\n      List<Double> averageColumnSizes(RelNode r, RelMetadataQuery mq);\n    }\n  }\n","date":"2016-02-25 05:37:49","endLine":322,"groupId":"11586","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"getPopulationSize","params":"(RelNoder@RelMetadataQuerymq@ImmutableBitSetgroupKey)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/0f/f051567d15da446ced6925dcd911b410798f19.src","preCode":"      Double getPopulationSize(RelNode r, RelMetadataQuery mq,\n          ImmutableBitSet groupKey);\n    }\n  }\n\n  \n  public interface Size extends Metadata {\n    MetadataDef<Size> DEF = MetadataDef.of(Size.class, Size.Handler.class,\n        BuiltInMethod.AVERAGE_ROW_SIZE.method,\n        BuiltInMethod.AVERAGE_COLUMN_SIZES.method);\n\n    \r\n\r\n\r\n\n    Double averageRowSize();\n\n    \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\n    List<Double> averageColumnSizes();\n\n    \n    interface Handler extends MetadataHandler<Size> {\n      Double averageRowSize(RelNode r, RelMetadataQuery mq);\n      List<Double> averageColumnSizes(RelNode r, RelMetadataQuery mq);\n    }\n  }\n","realPath":"core/src/main/java/org/apache/calcite/rel/metadata/BuiltInMetadata.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":281,"status":"B"}],"commitId":"d14040c52f8b0bc351443cff1584e8b587378698","commitMessage":"@@@[CALCITE-604] Tune metadata by generating a dispatcher at runtime\n\nCurrently we dispatch to metadata providers using reflection. With\nthis change.  we generate a dispatcher class and compile using Janino.\n\nCache results within a metadata call. This should yield a performance\nimprovement when.  say.  a Join requires many kinds of metadata\n(rowCount.  averageRowSize.  selectivity) and they all rely on the\nrowCount of the input.  and that rowCount is expensive to compute.\n","date":"2016-02-25 05:37:49","modifiedFileCount":"34","status":"B","submitter":"Julian Hyde"},{"authorTime":"2020-05-29 00:04:40","codes":[{"authorDate":"2020-05-29 00:04:40","commitOrder":2,"curCode":"      @Nullable Double getPercentageOriginalRows(RelNode r, RelMetadataQuery mq);\n    }\n  }\n\n  \r\n\n  public interface PopulationSize extends Metadata {\n    MetadataDef<PopulationSize> DEF = MetadataDef.of(PopulationSize.class,\n        PopulationSize.Handler.class, BuiltInMethod.POPULATION_SIZE.method);\n\n    \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\n    @Nullable Double getPopulationSize(ImmutableBitSet groupKey);\n\n    \n    interface Handler extends MetadataHandler<PopulationSize> {\n      @Nullable Double getPopulationSize(RelNode r, RelMetadataQuery mq,\n          ImmutableBitSet groupKey);\n    }\n  }\n","date":"2020-11-30 06:45:33","endLine":338,"groupId":"101932","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"getPercentageOriginalRows","params":"(RelNoder@RelMetadataQuerymq)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/92/e242a1dae31bd35ec5eba28ffdceed8c7282f9.src","preCode":"      Double getPercentageOriginalRows(RelNode r, RelMetadataQuery mq);\n    }\n  }\n\n  \r\n\n  public interface PopulationSize extends Metadata {\n    MetadataDef<PopulationSize> DEF = MetadataDef.of(PopulationSize.class,\n        PopulationSize.Handler.class, BuiltInMethod.POPULATION_SIZE.method);\n\n    \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\n    Double getPopulationSize(ImmutableBitSet groupKey);\n\n    \n    interface Handler extends MetadataHandler<PopulationSize> {\n      Double getPopulationSize(RelNode r, RelMetadataQuery mq,\n          ImmutableBitSet groupKey);\n    }\n  }\n","realPath":"core/src/main/java/org/apache/calcite/rel/metadata/BuiltInMetadata.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":310,"status":"M"},{"authorDate":"2020-05-29 00:04:40","commitOrder":2,"curCode":"      @Nullable Double getPopulationSize(RelNode r, RelMetadataQuery mq,\n          ImmutableBitSet groupKey);\n    }\n  }\n\n  \n  public interface Size extends Metadata {\n    MetadataDef<Size> DEF = MetadataDef.of(Size.class, Size.Handler.class,\n        BuiltInMethod.AVERAGE_ROW_SIZE.method,\n        BuiltInMethod.AVERAGE_COLUMN_SIZES.method);\n\n    \r\n\r\n\r\n\n    @Nullable Double averageRowSize();\n\n    \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\n    List<@Nullable Double> averageColumnSizes();\n\n    \n    interface Handler extends MetadataHandler<Size> {\n      @Nullable Double averageRowSize(RelNode r, RelMetadataQuery mq);\n      @Nullable List<@Nullable Double> averageColumnSizes(RelNode r, RelMetadataQuery mq);\n    }\n  }\n","date":"2020-11-30 06:45:33","endLine":376,"groupId":"101932","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"getPopulationSize","params":"(RelNoder@RelMetadataQuerymq@ImmutableBitSetgroupKey)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/92/e242a1dae31bd35ec5eba28ffdceed8c7282f9.src","preCode":"      Double getPopulationSize(RelNode r, RelMetadataQuery mq,\n          ImmutableBitSet groupKey);\n    }\n  }\n\n  \n  public interface Size extends Metadata {\n    MetadataDef<Size> DEF = MetadataDef.of(Size.class, Size.Handler.class,\n        BuiltInMethod.AVERAGE_ROW_SIZE.method,\n        BuiltInMethod.AVERAGE_COLUMN_SIZES.method);\n\n    \r\n\r\n\r\n\n    Double averageRowSize();\n\n    \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\n    List<Double> averageColumnSizes();\n\n    \n    interface Handler extends MetadataHandler<Size> {\n      Double averageRowSize(RelNode r, RelMetadataQuery mq);\n      List<Double> averageColumnSizes(RelNode r, RelMetadataQuery mq);\n    }\n  }\n","realPath":"core/src/main/java/org/apache/calcite/rel/metadata/BuiltInMetadata.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":335,"status":"M"}],"commitId":"d9a81b88ad561e7e4cedae93e805e0d7a53a7f1a","commitMessage":"@@@[CALCITE-4199] Add nullability annotations\n\nThe commit includes javadoc updates and refactorings made by Julian Hyde in https://github.com/apache/calcite/pull/2278\n","date":"2020-11-30 06:45:33","modifiedFileCount":"1012","status":"M","submitter":"Vladimir Sitnikov"}]
