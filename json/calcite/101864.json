[{"authorTime":"2014-11-14 09:39:29","codes":[{"authorDate":"2014-11-14 09:39:29","commitOrder":1,"curCode":"  @Override public void setOperand(int i, SqlNode operand) {\n    switch (i) {\n    case 0:\n      keywords = (SqlNodeList) operand;\n      break;\n    case 1:\n      targetTable = (SqlIdentifier) operand;\n      break;\n    case 2:\n      source = operand;\n      break;\n    case 3:\n      columnList = (SqlNodeList) operand;\n      break;\n    default:\n      throw new AssertionError(i);\n    }\n  }\n","date":"2014-11-14 09:39:34","endLine":84,"groupId":"1289","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"setOperand","params":"(inti@SqlNodeoperand)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/6a/917b7f6a568a6416e191b03822708b0f983d2b.src","preCode":"  @Override public void setOperand(int i, SqlNode operand) {\n    switch (i) {\n    case 0:\n      keywords = (SqlNodeList) operand;\n      break;\n    case 1:\n      targetTable = (SqlIdentifier) operand;\n      break;\n    case 2:\n      source = operand;\n      break;\n    case 3:\n      columnList = (SqlNodeList) operand;\n      break;\n    default:\n      throw new AssertionError(i);\n    }\n  }\n","realPath":"core/src/main/java/org/apache/calcite/sql/SqlInsert.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":67,"status":"B"},{"authorDate":"2014-11-14 09:39:29","commitOrder":1,"curCode":"  @Override public void setOperand(int i, SqlNode operand) {\n    switch (i) {\n    case 0:\n      targetTable = (SqlIdentifier) operand;\n      break;\n    case 1:\n      condition = operand;\n      break;\n    case 2:\n      sourceSelect = (SqlSelect) operand;\n      break;\n    case 3:\n      alias = (SqlIdentifier) operand;\n      break;\n    default:\n      throw new AssertionError(i);\n    }\n  }\n","date":"2014-11-14 09:39:34","endLine":84,"groupId":"5720","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"setOperand","params":"(inti@SqlNodeoperand)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/35/33c9947bd9a6eb1b57066398f586290bffa085.src","preCode":"  @Override public void setOperand(int i, SqlNode operand) {\n    switch (i) {\n    case 0:\n      targetTable = (SqlIdentifier) operand;\n      break;\n    case 1:\n      condition = operand;\n      break;\n    case 2:\n      sourceSelect = (SqlSelect) operand;\n      break;\n    case 3:\n      alias = (SqlIdentifier) operand;\n      break;\n    default:\n      throw new AssertionError(i);\n    }\n  }\n","realPath":"core/src/main/java/org/apache/calcite/sql/SqlDelete.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":67,"status":"B"}],"commitId":"a611d645ad754844a39f3d98f5f814f13dbd9404","commitMessage":"@@@[CALCITE-296] Re-organize package structure;\n[CALCITE-419] Naming convention for planner rules\n\nThis change only renames files (and deletes some obsolete files). There are no content changes.\n","date":"2014-11-14 09:39:34","modifiedFileCount":"0","status":"B","submitter":"Julian Hyde"},{"authorTime":"2014-12-09 09:15:23","codes":[{"authorDate":"2014-11-14 09:39:29","commitOrder":2,"curCode":"  @Override public void setOperand(int i, SqlNode operand) {\n    switch (i) {\n    case 0:\n      keywords = (SqlNodeList) operand;\n      break;\n    case 1:\n      targetTable = (SqlIdentifier) operand;\n      break;\n    case 2:\n      source = operand;\n      break;\n    case 3:\n      columnList = (SqlNodeList) operand;\n      break;\n    default:\n      throw new AssertionError(i);\n    }\n  }\n","date":"2014-11-14 09:39:34","endLine":84,"groupId":"1289","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"setOperand","params":"(inti@SqlNodeoperand)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/6a/917b7f6a568a6416e191b03822708b0f983d2b.src","preCode":"  @Override public void setOperand(int i, SqlNode operand) {\n    switch (i) {\n    case 0:\n      keywords = (SqlNodeList) operand;\n      break;\n    case 1:\n      targetTable = (SqlIdentifier) operand;\n      break;\n    case 2:\n      source = operand;\n      break;\n    case 3:\n      columnList = (SqlNodeList) operand;\n      break;\n    default:\n      throw new AssertionError(i);\n    }\n  }\n","realPath":"core/src/main/java/org/apache/calcite/sql/SqlInsert.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":67,"status":"N"},{"authorDate":"2014-12-09 09:15:23","commitOrder":2,"curCode":"  @Override public void setOperand(int i, SqlNode operand) {\n    switch (i) {\n    case 0:\n      targetTable = operand;\n      break;\n    case 1:\n      condition = operand;\n      break;\n    case 2:\n      sourceSelect = (SqlSelect) operand;\n      break;\n    case 3:\n      alias = (SqlIdentifier) operand;\n      break;\n    default:\n      throw new AssertionError(i);\n    }\n  }\n","date":"2014-12-11 00:38:18","endLine":86,"groupId":"5720","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"setOperand","params":"(inti@SqlNodeoperand)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/ed/416577b63cf07e3bd8c35351c091f12e2539c8.src","preCode":"  @Override public void setOperand(int i, SqlNode operand) {\n    switch (i) {\n    case 0:\n      targetTable = (SqlIdentifier) operand;\n      break;\n    case 1:\n      condition = operand;\n      break;\n    case 2:\n      sourceSelect = (SqlSelect) operand;\n      break;\n    case 3:\n      alias = (SqlIdentifier) operand;\n      break;\n    default:\n      throw new AssertionError(i);\n    }\n  }\n","realPath":"core/src/main/java/org/apache/calcite/sql/SqlDelete.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":69,"status":"M"}],"commitId":"ecc5f4c2fff0a7a2a310b109b070d402c156f25a","commitMessage":"@@@[CALCITE-493] Add EXTEND clause.  for defining columns and their types at query/DML time\n","date":"2014-12-11 00:38:18","modifiedFileCount":"21","status":"M","submitter":"Julian Hyde"},{"authorTime":"2014-12-09 09:15:23","codes":[{"authorDate":"2016-03-05 05:51:02","commitOrder":3,"curCode":"  @Override public void setOperand(int i, SqlNode operand) {\n    switch (i) {\n    case 0:\n      keywords = (SqlNodeList) operand;\n      break;\n    case 1:\n      assert operand instanceof SqlIdentifier;\n      targetTable = operand;\n      break;\n    case 2:\n      source = operand;\n      break;\n    case 3:\n      columnList = (SqlNodeList) operand;\n      break;\n    default:\n      throw new AssertionError(i);\n    }\n  }\n","date":"2016-03-08 13:20:51","endLine":95,"groupId":"7087","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"setOperand","params":"(inti@SqlNodeoperand)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/19/472a7c660a9295655aed211ce78008c3762b19.src","preCode":"  @Override public void setOperand(int i, SqlNode operand) {\n    switch (i) {\n    case 0:\n      keywords = (SqlNodeList) operand;\n      break;\n    case 1:\n      targetTable = (SqlIdentifier) operand;\n      break;\n    case 2:\n      source = operand;\n      break;\n    case 3:\n      columnList = (SqlNodeList) operand;\n      break;\n    default:\n      throw new AssertionError(i);\n    }\n  }\n","realPath":"core/src/main/java/org/apache/calcite/sql/SqlInsert.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":77,"status":"M"},{"authorDate":"2014-12-09 09:15:23","commitOrder":3,"curCode":"  @Override public void setOperand(int i, SqlNode operand) {\n    switch (i) {\n    case 0:\n      targetTable = operand;\n      break;\n    case 1:\n      condition = operand;\n      break;\n    case 2:\n      sourceSelect = (SqlSelect) operand;\n      break;\n    case 3:\n      alias = (SqlIdentifier) operand;\n      break;\n    default:\n      throw new AssertionError(i);\n    }\n  }\n","date":"2014-12-11 00:38:18","endLine":86,"groupId":"5720","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"setOperand","params":"(inti@SqlNodeoperand)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/ed/416577b63cf07e3bd8c35351c091f12e2539c8.src","preCode":"  @Override public void setOperand(int i, SqlNode operand) {\n    switch (i) {\n    case 0:\n      targetTable = operand;\n      break;\n    case 1:\n      condition = operand;\n      break;\n    case 2:\n      sourceSelect = (SqlSelect) operand;\n      break;\n    case 3:\n      alias = (SqlIdentifier) operand;\n      break;\n    default:\n      throw new AssertionError(i);\n    }\n  }\n","realPath":"core/src/main/java/org/apache/calcite/sql/SqlDelete.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":69,"status":"N"}],"commitId":"9c62adac2a218b428e322e8467263cec0ed9874b","commitMessage":"@@@Deprecate SqlLiteral.SqlSymbol; SqlSymbol can now wrap any Enum\n","date":"2016-03-08 13:20:51","modifiedFileCount":"15","status":"M","submitter":"Julian Hyde"},{"authorTime":"2020-05-29 00:04:40","codes":[{"authorDate":"2020-05-29 00:04:40","commitOrder":4,"curCode":"  @Override public void setOperand(int i, @Nullable SqlNode operand) {\n    switch (i) {\n    case 0:\n      keywords = (SqlNodeList) operand;\n      break;\n    case 1:\n      assert operand instanceof SqlIdentifier;\n      targetTable = operand;\n      break;\n    case 2:\n      source = operand;\n      break;\n    case 3:\n      columnList = (SqlNodeList) operand;\n      break;\n    default:\n      throw new AssertionError(i);\n    }\n  }\n","date":"2020-11-30 06:45:33","endLine":112,"groupId":"101864","id":7,"instanceNumber":1,"isCurCommit":1,"methodName":"setOperand","params":"(inti@@NullableSqlNodeoperand)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/69/9298b0ff777180de15fa4136fc73a535089f37.src","preCode":"  @Override public void setOperand(int i, SqlNode operand) {\n    switch (i) {\n    case 0:\n      keywords = (SqlNodeList) operand;\n      break;\n    case 1:\n      assert operand instanceof SqlIdentifier;\n      targetTable = operand;\n      break;\n    case 2:\n      source = operand;\n      break;\n    case 3:\n      columnList = (SqlNodeList) operand;\n      break;\n    default:\n      throw new AssertionError(i);\n    }\n  }\n","realPath":"core/src/main/java/org/apache/calcite/sql/SqlInsert.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":94,"status":"M"},{"authorDate":"2020-05-29 00:04:40","commitOrder":4,"curCode":"  @Override public void setOperand(int i, @Nullable SqlNode operand) {\n    switch (i) {\n    case 0:\n      targetTable = operand;\n      break;\n    case 1:\n      condition = operand;\n      break;\n    case 2:\n      sourceSelect = (SqlSelect) operand;\n      break;\n    case 3:\n      alias = (SqlIdentifier) operand;\n      break;\n    default:\n      throw new AssertionError(i);\n    }\n  }\n","date":"2020-11-30 06:45:33","endLine":90,"groupId":"101864","id":8,"instanceNumber":2,"isCurCommit":1,"methodName":"setOperand","params":"(inti@@NullableSqlNodeoperand)","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/63/32c1126b36ba382f1c5bcb2c67b96ae272e5d7.src","preCode":"  @Override public void setOperand(int i, SqlNode operand) {\n    switch (i) {\n    case 0:\n      targetTable = operand;\n      break;\n    case 1:\n      condition = operand;\n      break;\n    case 2:\n      sourceSelect = (SqlSelect) operand;\n      break;\n    case 3:\n      alias = (SqlIdentifier) operand;\n      break;\n    default:\n      throw new AssertionError(i);\n    }\n  }\n","realPath":"core/src/main/java/org/apache/calcite/sql/SqlDelete.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":73,"status":"M"}],"commitId":"d9a81b88ad561e7e4cedae93e805e0d7a53a7f1a","commitMessage":"@@@[CALCITE-4199] Add nullability annotations\n\nThe commit includes javadoc updates and refactorings made by Julian Hyde in https://github.com/apache/calcite/pull/2278\n","date":"2020-11-30 06:45:33","modifiedFileCount":"1012","status":"M","submitter":"Vladimir Sitnikov"}]
