[{"authorTime":"2017-02-21 19:44:11","codes":[{"authorDate":"2017-02-21 19:44:11","commitOrder":1,"curCode":"  @Test public void testMatchRecognizePatternExpression12() {\n    final String sql = \"select *\\n\"\n        + \"  from \\\"product\\\" match_recognize\\n\"\n        + \"  (\\n\"\n        + \"    pattern (strt down+ up+)\\n\"\n        + \"    define\\n\"\n        + \"      down as down.\\\"net_weight\\\" < PREV(down.\\\"net_weight\\\"),\\n\"\n        + \"      up as up.\\\"net_weight\\\" > prev(up.\\\"net_weight\\\")\\n\"\n        + \"  ) mr order by MR.\\\"net_weight\\\"\";\n    final String expected = \"SELECT *\\n\"\n        + \"FROM (SELECT *\\n\"\n        + \"FROM \\\"foodmart\\\".\\\"product\\\") MATCH_RECOGNIZE(\\n\"\n        + \"PATTERN (\\\"STRT\\\" \\\"DOWN\\\" + \\\"UP\\\" +)\\n\"\n        + \"DEFINE \"\n        + \"\\\"DOWN\\\" AS PREV(\\\"net_weight\\\", 0) < PREV(\\\"net_weight\\\", 1), \"\n        + \"\\\"UP\\\" AS PREV(\\\"net_weight\\\", 0) > PREV(\\\"net_weight\\\", 1))\\n\"\n        + \"ORDER BY \\\"net_weight\\\"\";\n    sql(sql).ok(expected);\n  }\n","date":"2017-03-05 05:02:44","endLine":809,"groupId":"3441","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testMatchRecognizePatternExpression12","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/b6/d4780877a49f2455ad0f2a4396a2d52d94a654.src","preCode":"  @Test public void testMatchRecognizePatternExpression12() {\n    final String sql = \"select *\\n\"\n        + \"  from \\\"product\\\" match_recognize\\n\"\n        + \"  (\\n\"\n        + \"    pattern (strt down+ up+)\\n\"\n        + \"    define\\n\"\n        + \"      down as down.\\\"net_weight\\\" < PREV(down.\\\"net_weight\\\"),\\n\"\n        + \"      up as up.\\\"net_weight\\\" > prev(up.\\\"net_weight\\\")\\n\"\n        + \"  ) mr order by MR.\\\"net_weight\\\"\";\n    final String expected = \"SELECT *\\n\"\n        + \"FROM (SELECT *\\n\"\n        + \"FROM \\\"foodmart\\\".\\\"product\\\") MATCH_RECOGNIZE(\\n\"\n        + \"PATTERN (\\\"STRT\\\" \\\"DOWN\\\" + \\\"UP\\\" +)\\n\"\n        + \"DEFINE \"\n        + \"\\\"DOWN\\\" AS PREV(\\\"net_weight\\\", 0) < PREV(\\\"net_weight\\\", 1), \"\n        + \"\\\"UP\\\" AS PREV(\\\"net_weight\\\", 0) > PREV(\\\"net_weight\\\", 1))\\n\"\n        + \"ORDER BY \\\"net_weight\\\"\";\n    sql(sql).ok(expected);\n  }\n","realPath":"core/src/test/java/org/apache/calcite/rel/rel2sql/RelToSqlConverterTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":791,"status":"B"},{"authorDate":"2017-02-21 19:44:11","commitOrder":1,"curCode":"  @Test public void testMatchRecognizePatternExpression13() {\n    final String sql = \"select *\\n\"\n        + \"  from (\\n\"\n        + \"select *\\n\"\n        + \"from \\\"sales_fact_1997\\\" as s\\n\"\n        + \"join \\\"customer\\\" as c using (\\\"customer_id\\\")\\n\"\n        + \"join \\\"product\\\" as p using (\\\"product_id\\\")\\n\"\n        + \"join \\\"product_class\\\" as pc using (\\\"product_class_id\\\")\\n\"\n        + \"where c.\\\"city\\\" = 'San Francisco'\\n\"\n        + \"and pc.\\\"product_department\\\" = 'Snacks'\"\n        + \") match_recognize\\n\"\n        + \"  (\\n\"\n        + \"    pattern (strt down+ up+)\\n\"\n        + \"    define\\n\"\n        + \"      down as down.\\\"net_weight\\\" < PREV(down.\\\"net_weight\\\"),\\n\"\n        + \"      up as up.\\\"net_weight\\\" > prev(up.\\\"net_weight\\\")\\n\"\n        + \"  ) mr order by MR.\\\"net_weight\\\"\";\n    final String expected = \"SELECT *\\n\"\n        + \"FROM (SELECT *\\n\"\n        + \"FROM \\\"foodmart\\\".\\\"sales_fact_1997\\\"\\n\"\n        + \"INNER JOIN \\\"foodmart\\\".\\\"customer\\\" \"\n        + \"ON \\\"sales_fact_1997\\\".\\\"customer_id\\\" = \\\"customer\\\".\\\"customer_id\\\"\\n\"\n        + \"INNER JOIN \\\"foodmart\\\".\\\"product\\\" \"\n        + \"ON \\\"sales_fact_1997\\\".\\\"product_id\\\" = \\\"product\\\".\\\"product_id\\\"\\n\"\n        + \"INNER JOIN \\\"foodmart\\\".\\\"product_class\\\" \"\n        + \"ON \\\"product\\\".\\\"product_class_id\\\" = \\\"product_class\\\".\\\"product_class_id\\\"\\n\"\n        + \"WHERE \\\"customer\\\".\\\"city\\\" = 'San Francisco' \"\n        + \"AND \\\"product_class\\\".\\\"product_department\\\" = 'Snacks') \"\n        + \"MATCH_RECOGNIZE(\\n\"\n        + \"PATTERN (\\\"STRT\\\" \\\"DOWN\\\" + \\\"UP\\\" +)\\n\"\n        + \"DEFINE \"\n        + \"\\\"DOWN\\\" AS PREV(\\\"net_weight\\\", 0) < PREV(\\\"net_weight\\\", 1), \"\n        + \"\\\"UP\\\" AS PREV(\\\"net_weight\\\", 0) > PREV(\\\"net_weight\\\", 1))\\n\"\n        + \"ORDER BY \\\"net_weight\\\"\";\n    sql(sql).ok(expected);\n  }\n","date":"2017-03-05 05:02:44","endLine":846,"groupId":"3441","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testMatchRecognizePatternExpression13","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/b6/d4780877a49f2455ad0f2a4396a2d52d94a654.src","preCode":"  @Test public void testMatchRecognizePatternExpression13() {\n    final String sql = \"select *\\n\"\n        + \"  from (\\n\"\n        + \"select *\\n\"\n        + \"from \\\"sales_fact_1997\\\" as s\\n\"\n        + \"join \\\"customer\\\" as c using (\\\"customer_id\\\")\\n\"\n        + \"join \\\"product\\\" as p using (\\\"product_id\\\")\\n\"\n        + \"join \\\"product_class\\\" as pc using (\\\"product_class_id\\\")\\n\"\n        + \"where c.\\\"city\\\" = 'San Francisco'\\n\"\n        + \"and pc.\\\"product_department\\\" = 'Snacks'\"\n        + \") match_recognize\\n\"\n        + \"  (\\n\"\n        + \"    pattern (strt down+ up+)\\n\"\n        + \"    define\\n\"\n        + \"      down as down.\\\"net_weight\\\" < PREV(down.\\\"net_weight\\\"),\\n\"\n        + \"      up as up.\\\"net_weight\\\" > prev(up.\\\"net_weight\\\")\\n\"\n        + \"  ) mr order by MR.\\\"net_weight\\\"\";\n    final String expected = \"SELECT *\\n\"\n        + \"FROM (SELECT *\\n\"\n        + \"FROM \\\"foodmart\\\".\\\"sales_fact_1997\\\"\\n\"\n        + \"INNER JOIN \\\"foodmart\\\".\\\"customer\\\" \"\n        + \"ON \\\"sales_fact_1997\\\".\\\"customer_id\\\" = \\\"customer\\\".\\\"customer_id\\\"\\n\"\n        + \"INNER JOIN \\\"foodmart\\\".\\\"product\\\" \"\n        + \"ON \\\"sales_fact_1997\\\".\\\"product_id\\\" = \\\"product\\\".\\\"product_id\\\"\\n\"\n        + \"INNER JOIN \\\"foodmart\\\".\\\"product_class\\\" \"\n        + \"ON \\\"product\\\".\\\"product_class_id\\\" = \\\"product_class\\\".\\\"product_class_id\\\"\\n\"\n        + \"WHERE \\\"customer\\\".\\\"city\\\" = 'San Francisco' \"\n        + \"AND \\\"product_class\\\".\\\"product_department\\\" = 'Snacks') \"\n        + \"MATCH_RECOGNIZE(\\n\"\n        + \"PATTERN (\\\"STRT\\\" \\\"DOWN\\\" + \\\"UP\\\" +)\\n\"\n        + \"DEFINE \"\n        + \"\\\"DOWN\\\" AS PREV(\\\"net_weight\\\", 0) < PREV(\\\"net_weight\\\", 1), \"\n        + \"\\\"UP\\\" AS PREV(\\\"net_weight\\\", 0) > PREV(\\\"net_weight\\\", 1))\\n\"\n        + \"ORDER BY \\\"net_weight\\\"\";\n    sql(sql).ok(expected);\n  }\n","realPath":"core/src/test/java/org/apache/calcite/rel/rel2sql/RelToSqlConverterTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":811,"status":"B"}],"commitId":"4e1038255163792b8055d1b0c3f312bda872252d","commitMessage":"@@@[CALCITE-1641] Add parser and validator support for MATCH_RECOGNIZE (Zhiqiang-He)\n\nClose apache/calcite#378\n","date":"2017-03-05 05:02:44","modifiedFileCount":"30","status":"B","submitter":"Zhiqiang-He"},{"authorTime":"2017-03-13 19:11:19","codes":[{"authorDate":"2017-03-13 19:11:19","commitOrder":2,"curCode":"  @Test public void testMatchRecognizePatternExpression12() {\n    final String sql = \"select *\\n\"\n        + \"  from \\\"product\\\" match_recognize\\n\"\n        + \"  (\\n\"\n        + \"    pattern (strt down+ up+)\\n\"\n        + \"    define\\n\"\n        + \"      down as down.\\\"net_weight\\\" < PREV(down.\\\"net_weight\\\"),\\n\"\n        + \"      up as up.\\\"net_weight\\\" > prev(up.\\\"net_weight\\\")\\n\"\n        + \"  ) mr order by MR.\\\"net_weight\\\"\";\n    final String expected = \"SELECT *\\n\"\n        + \"FROM (SELECT *\\n\"\n        + \"FROM \\\"foodmart\\\".\\\"product\\\") MATCH_RECOGNIZE(\\n\"\n        + \"PATTERN (\\\"STRT\\\" \\\"DOWN\\\" + \\\"UP\\\" +)\\n\"\n        + \"DEFINE \"\n        + \"\\\"DOWN\\\" AS PREV(\\\"DOWN\\\".\\\"net_weight\\\", 0) < \"\n        + \"PREV(\\\"DOWN\\\".\\\"net_weight\\\", 1), \"\n        + \"\\\"UP\\\" AS PREV(\\\"UP\\\".\\\"net_weight\\\", 0) > \"\n        + \"PREV(\\\"UP\\\".\\\"net_weight\\\", 1))\\n\"\n        + \"ORDER BY \\\"net_weight\\\"\";\n    sql(sql).ok(expected);\n  }\n","date":"2017-04-02 11:43:28","endLine":872,"groupId":"3441","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testMatchRecognizePatternExpression12","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/15/c806334a0ffd728401f25f081bdb838f912986.src","preCode":"  @Test public void testMatchRecognizePatternExpression12() {\n    final String sql = \"select *\\n\"\n        + \"  from \\\"product\\\" match_recognize\\n\"\n        + \"  (\\n\"\n        + \"    pattern (strt down+ up+)\\n\"\n        + \"    define\\n\"\n        + \"      down as down.\\\"net_weight\\\" < PREV(down.\\\"net_weight\\\"),\\n\"\n        + \"      up as up.\\\"net_weight\\\" > prev(up.\\\"net_weight\\\")\\n\"\n        + \"  ) mr order by MR.\\\"net_weight\\\"\";\n    final String expected = \"SELECT *\\n\"\n        + \"FROM (SELECT *\\n\"\n        + \"FROM \\\"foodmart\\\".\\\"product\\\") MATCH_RECOGNIZE(\\n\"\n        + \"PATTERN (\\\"STRT\\\" \\\"DOWN\\\" + \\\"UP\\\" +)\\n\"\n        + \"DEFINE \"\n        + \"\\\"DOWN\\\" AS PREV(\\\"net_weight\\\", 0) < PREV(\\\"net_weight\\\", 1), \"\n        + \"\\\"UP\\\" AS PREV(\\\"net_weight\\\", 0) > PREV(\\\"net_weight\\\", 1))\\n\"\n        + \"ORDER BY \\\"net_weight\\\"\";\n    sql(sql).ok(expected);\n  }\n","realPath":"core/src/test/java/org/apache/calcite/rel/rel2sql/RelToSqlConverterTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":852,"status":"M"},{"authorDate":"2017-03-13 19:11:19","commitOrder":2,"curCode":"  @Test public void testMatchRecognizePatternExpression13() {\n    final String sql = \"select *\\n\"\n        + \"  from (\\n\"\n        + \"select *\\n\"\n        + \"from \\\"sales_fact_1997\\\" as s\\n\"\n        + \"join \\\"customer\\\" as c using (\\\"customer_id\\\")\\n\"\n        + \"join \\\"product\\\" as p using (\\\"product_id\\\")\\n\"\n        + \"join \\\"product_class\\\" as pc using (\\\"product_class_id\\\")\\n\"\n        + \"where c.\\\"city\\\" = 'San Francisco'\\n\"\n        + \"and pc.\\\"product_department\\\" = 'Snacks'\"\n        + \") match_recognize\\n\"\n        + \"  (\\n\"\n        + \"    pattern (strt down+ up+)\\n\"\n        + \"    define\\n\"\n        + \"      down as down.\\\"net_weight\\\" < PREV(down.\\\"net_weight\\\"),\\n\"\n        + \"      up as up.\\\"net_weight\\\" > prev(up.\\\"net_weight\\\")\\n\"\n        + \"  ) mr order by MR.\\\"net_weight\\\"\";\n    final String expected = \"SELECT *\\n\"\n        + \"FROM (SELECT *\\n\"\n        + \"FROM \\\"foodmart\\\".\\\"sales_fact_1997\\\"\\n\"\n        + \"INNER JOIN \\\"foodmart\\\".\\\"customer\\\" \"\n        + \"ON \\\"sales_fact_1997\\\".\\\"customer_id\\\" = \\\"customer\\\".\\\"customer_id\\\"\\n\"\n        + \"INNER JOIN \\\"foodmart\\\".\\\"product\\\" \"\n        + \"ON \\\"sales_fact_1997\\\".\\\"product_id\\\" = \\\"product\\\".\\\"product_id\\\"\\n\"\n        + \"INNER JOIN \\\"foodmart\\\".\\\"product_class\\\" \"\n        + \"ON \\\"product\\\".\\\"product_class_id\\\" = \\\"product_class\\\".\\\"product_class_id\\\"\\n\"\n        + \"WHERE \\\"customer\\\".\\\"city\\\" = 'San Francisco' \"\n        + \"AND \\\"product_class\\\".\\\"product_department\\\" = 'Snacks') \"\n        + \"MATCH_RECOGNIZE(\\n\"\n        + \"PATTERN (\\\"STRT\\\" \\\"DOWN\\\" + \\\"UP\\\" +)\\n\"\n        + \"DEFINE \"\n        + \"\\\"DOWN\\\" AS PREV(\\\"DOWN\\\".\\\"net_weight\\\", 0) < \"\n        + \"PREV(\\\"DOWN\\\".\\\"net_weight\\\", 1), \"\n        + \"\\\"UP\\\" AS PREV(\\\"UP\\\".\\\"net_weight\\\", 0) > \"\n        + \"PREV(\\\"UP\\\".\\\"net_weight\\\", 1))\\n\"\n        + \"ORDER BY \\\"net_weight\\\"\";\n    sql(sql).ok(expected);\n  }\n","date":"2017-04-02 11:43:28","endLine":911,"groupId":"3441","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testMatchRecognizePatternExpression13","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/15/c806334a0ffd728401f25f081bdb838f912986.src","preCode":"  @Test public void testMatchRecognizePatternExpression13() {\n    final String sql = \"select *\\n\"\n        + \"  from (\\n\"\n        + \"select *\\n\"\n        + \"from \\\"sales_fact_1997\\\" as s\\n\"\n        + \"join \\\"customer\\\" as c using (\\\"customer_id\\\")\\n\"\n        + \"join \\\"product\\\" as p using (\\\"product_id\\\")\\n\"\n        + \"join \\\"product_class\\\" as pc using (\\\"product_class_id\\\")\\n\"\n        + \"where c.\\\"city\\\" = 'San Francisco'\\n\"\n        + \"and pc.\\\"product_department\\\" = 'Snacks'\"\n        + \") match_recognize\\n\"\n        + \"  (\\n\"\n        + \"    pattern (strt down+ up+)\\n\"\n        + \"    define\\n\"\n        + \"      down as down.\\\"net_weight\\\" < PREV(down.\\\"net_weight\\\"),\\n\"\n        + \"      up as up.\\\"net_weight\\\" > prev(up.\\\"net_weight\\\")\\n\"\n        + \"  ) mr order by MR.\\\"net_weight\\\"\";\n    final String expected = \"SELECT *\\n\"\n        + \"FROM (SELECT *\\n\"\n        + \"FROM \\\"foodmart\\\".\\\"sales_fact_1997\\\"\\n\"\n        + \"INNER JOIN \\\"foodmart\\\".\\\"customer\\\" \"\n        + \"ON \\\"sales_fact_1997\\\".\\\"customer_id\\\" = \\\"customer\\\".\\\"customer_id\\\"\\n\"\n        + \"INNER JOIN \\\"foodmart\\\".\\\"product\\\" \"\n        + \"ON \\\"sales_fact_1997\\\".\\\"product_id\\\" = \\\"product\\\".\\\"product_id\\\"\\n\"\n        + \"INNER JOIN \\\"foodmart\\\".\\\"product_class\\\" \"\n        + \"ON \\\"product\\\".\\\"product_class_id\\\" = \\\"product_class\\\".\\\"product_class_id\\\"\\n\"\n        + \"WHERE \\\"customer\\\".\\\"city\\\" = 'San Francisco' \"\n        + \"AND \\\"product_class\\\".\\\"product_department\\\" = 'Snacks') \"\n        + \"MATCH_RECOGNIZE(\\n\"\n        + \"PATTERN (\\\"STRT\\\" \\\"DOWN\\\" + \\\"UP\\\" +)\\n\"\n        + \"DEFINE \"\n        + \"\\\"DOWN\\\" AS PREV(\\\"net_weight\\\", 0) < PREV(\\\"net_weight\\\", 1), \"\n        + \"\\\"UP\\\" AS PREV(\\\"net_weight\\\", 0) > PREV(\\\"net_weight\\\", 1))\\n\"\n        + \"ORDER BY \\\"net_weight\\\"\";\n    sql(sql).ok(expected);\n  }\n","realPath":"core/src/test/java/org/apache/calcite/rel/rel2sql/RelToSqlConverterTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":874,"status":"M"}],"commitId":"4d20d62d4d752ce4de29a002ec313a758a7cee6e","commitMessage":"@@@[CALCITE-1642] Support MEASURES clause in MATCH_RECOGNIZE (Zhiqiang-He)\n\nClose apache/calcite#400\n","date":"2017-04-02 11:43:28","modifiedFileCount":"15","status":"M","submitter":"Zhiqiang-He"},{"authorTime":"2017-04-14 20:58:21","codes":[{"authorDate":"2017-04-14 20:58:21","commitOrder":3,"curCode":"  @Test public void testMatchRecognizePatternExpression12() {\n    final String sql = \"select *\\n\"\n        + \"  from \\\"product\\\" match_recognize\\n\"\n        + \"  (\\n\"\n        + \"    pattern (strt down+ up+)\\n\"\n        + \"    define\\n\"\n        + \"      down as down.\\\"net_weight\\\" < PREV(down.\\\"net_weight\\\"),\\n\"\n        + \"      up as up.\\\"net_weight\\\" > prev(up.\\\"net_weight\\\")\\n\"\n        + \"  ) mr order by MR.\\\"net_weight\\\"\";\n    final String expected = \"SELECT *\\n\"\n        + \"FROM (SELECT *\\n\"\n        + \"FROM \\\"foodmart\\\".\\\"product\\\") MATCH_RECOGNIZE(\\n\"\n        + \"AFTER MATCH SKIP TO NEXT ROW\\n\"\n        + \"PATTERN (\\\"STRT\\\" \\\"DOWN\\\" + \\\"UP\\\" +)\\n\"\n        + \"DEFINE \"\n        + \"\\\"DOWN\\\" AS PREV(\\\"DOWN\\\".\\\"net_weight\\\", 0) < \"\n        + \"PREV(\\\"DOWN\\\".\\\"net_weight\\\", 1), \"\n        + \"\\\"UP\\\" AS PREV(\\\"UP\\\".\\\"net_weight\\\", 0) > \"\n        + \"PREV(\\\"UP\\\".\\\"net_weight\\\", 1))\\n\"\n        + \"ORDER BY \\\"net_weight\\\"\";\n    sql(sql).ok(expected);\n  }\n","date":"2017-04-25 09:26:09","endLine":884,"groupId":"3441","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testMatchRecognizePatternExpression12","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/03/57c6b03ccd302ede16475375714b729d3d5a3d.src","preCode":"  @Test public void testMatchRecognizePatternExpression12() {\n    final String sql = \"select *\\n\"\n        + \"  from \\\"product\\\" match_recognize\\n\"\n        + \"  (\\n\"\n        + \"    pattern (strt down+ up+)\\n\"\n        + \"    define\\n\"\n        + \"      down as down.\\\"net_weight\\\" < PREV(down.\\\"net_weight\\\"),\\n\"\n        + \"      up as up.\\\"net_weight\\\" > prev(up.\\\"net_weight\\\")\\n\"\n        + \"  ) mr order by MR.\\\"net_weight\\\"\";\n    final String expected = \"SELECT *\\n\"\n        + \"FROM (SELECT *\\n\"\n        + \"FROM \\\"foodmart\\\".\\\"product\\\") MATCH_RECOGNIZE(\\n\"\n        + \"PATTERN (\\\"STRT\\\" \\\"DOWN\\\" + \\\"UP\\\" +)\\n\"\n        + \"DEFINE \"\n        + \"\\\"DOWN\\\" AS PREV(\\\"DOWN\\\".\\\"net_weight\\\", 0) < \"\n        + \"PREV(\\\"DOWN\\\".\\\"net_weight\\\", 1), \"\n        + \"\\\"UP\\\" AS PREV(\\\"UP\\\".\\\"net_weight\\\", 0) > \"\n        + \"PREV(\\\"UP\\\".\\\"net_weight\\\", 1))\\n\"\n        + \"ORDER BY \\\"net_weight\\\"\";\n    sql(sql).ok(expected);\n  }\n","realPath":"core/src/test/java/org/apache/calcite/rel/rel2sql/RelToSqlConverterTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":863,"status":"M"},{"authorDate":"2017-04-14 20:58:21","commitOrder":3,"curCode":"  @Test public void testMatchRecognizePatternExpression13() {\n    final String sql = \"select *\\n\"\n        + \"  from (\\n\"\n        + \"select *\\n\"\n        + \"from \\\"sales_fact_1997\\\" as s\\n\"\n        + \"join \\\"customer\\\" as c using (\\\"customer_id\\\")\\n\"\n        + \"join \\\"product\\\" as p using (\\\"product_id\\\")\\n\"\n        + \"join \\\"product_class\\\" as pc using (\\\"product_class_id\\\")\\n\"\n        + \"where c.\\\"city\\\" = 'San Francisco'\\n\"\n        + \"and pc.\\\"product_department\\\" = 'Snacks'\"\n        + \") match_recognize\\n\"\n        + \"  (\\n\"\n        + \"    pattern (strt down+ up+)\\n\"\n        + \"    define\\n\"\n        + \"      down as down.\\\"net_weight\\\" < PREV(down.\\\"net_weight\\\"),\\n\"\n        + \"      up as up.\\\"net_weight\\\" > prev(up.\\\"net_weight\\\")\\n\"\n        + \"  ) mr order by MR.\\\"net_weight\\\"\";\n    final String expected = \"SELECT *\\n\"\n        + \"FROM (SELECT *\\n\"\n        + \"FROM \\\"foodmart\\\".\\\"sales_fact_1997\\\"\\n\"\n        + \"INNER JOIN \\\"foodmart\\\".\\\"customer\\\" \"\n        + \"ON \\\"sales_fact_1997\\\".\\\"customer_id\\\" = \\\"customer\\\".\\\"customer_id\\\"\\n\"\n        + \"INNER JOIN \\\"foodmart\\\".\\\"product\\\" \"\n        + \"ON \\\"sales_fact_1997\\\".\\\"product_id\\\" = \\\"product\\\".\\\"product_id\\\"\\n\"\n        + \"INNER JOIN \\\"foodmart\\\".\\\"product_class\\\" \"\n        + \"ON \\\"product\\\".\\\"product_class_id\\\" = \\\"product_class\\\".\\\"product_class_id\\\"\\n\"\n        + \"WHERE \\\"customer\\\".\\\"city\\\" = 'San Francisco' \"\n        + \"AND \\\"product_class\\\".\\\"product_department\\\" = 'Snacks') \"\n        + \"MATCH_RECOGNIZE(\\n\"\n        + \"AFTER MATCH SKIP TO NEXT ROW\\n\"\n        + \"PATTERN (\\\"STRT\\\" \\\"DOWN\\\" + \\\"UP\\\" +)\\n\"\n        + \"DEFINE \"\n        + \"\\\"DOWN\\\" AS PREV(\\\"DOWN\\\".\\\"net_weight\\\", 0) < \"\n        + \"PREV(\\\"DOWN\\\".\\\"net_weight\\\", 1), \"\n        + \"\\\"UP\\\" AS PREV(\\\"UP\\\".\\\"net_weight\\\", 0) > \"\n        + \"PREV(\\\"UP\\\".\\\"net_weight\\\", 1))\\n\"\n        + \"ORDER BY \\\"net_weight\\\"\";\n    sql(sql).ok(expected);\n  }\n","date":"2017-04-25 09:26:09","endLine":924,"groupId":"3441","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testMatchRecognizePatternExpression13","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/03/57c6b03ccd302ede16475375714b729d3d5a3d.src","preCode":"  @Test public void testMatchRecognizePatternExpression13() {\n    final String sql = \"select *\\n\"\n        + \"  from (\\n\"\n        + \"select *\\n\"\n        + \"from \\\"sales_fact_1997\\\" as s\\n\"\n        + \"join \\\"customer\\\" as c using (\\\"customer_id\\\")\\n\"\n        + \"join \\\"product\\\" as p using (\\\"product_id\\\")\\n\"\n        + \"join \\\"product_class\\\" as pc using (\\\"product_class_id\\\")\\n\"\n        + \"where c.\\\"city\\\" = 'San Francisco'\\n\"\n        + \"and pc.\\\"product_department\\\" = 'Snacks'\"\n        + \") match_recognize\\n\"\n        + \"  (\\n\"\n        + \"    pattern (strt down+ up+)\\n\"\n        + \"    define\\n\"\n        + \"      down as down.\\\"net_weight\\\" < PREV(down.\\\"net_weight\\\"),\\n\"\n        + \"      up as up.\\\"net_weight\\\" > prev(up.\\\"net_weight\\\")\\n\"\n        + \"  ) mr order by MR.\\\"net_weight\\\"\";\n    final String expected = \"SELECT *\\n\"\n        + \"FROM (SELECT *\\n\"\n        + \"FROM \\\"foodmart\\\".\\\"sales_fact_1997\\\"\\n\"\n        + \"INNER JOIN \\\"foodmart\\\".\\\"customer\\\" \"\n        + \"ON \\\"sales_fact_1997\\\".\\\"customer_id\\\" = \\\"customer\\\".\\\"customer_id\\\"\\n\"\n        + \"INNER JOIN \\\"foodmart\\\".\\\"product\\\" \"\n        + \"ON \\\"sales_fact_1997\\\".\\\"product_id\\\" = \\\"product\\\".\\\"product_id\\\"\\n\"\n        + \"INNER JOIN \\\"foodmart\\\".\\\"product_class\\\" \"\n        + \"ON \\\"product\\\".\\\"product_class_id\\\" = \\\"product_class\\\".\\\"product_class_id\\\"\\n\"\n        + \"WHERE \\\"customer\\\".\\\"city\\\" = 'San Francisco' \"\n        + \"AND \\\"product_class\\\".\\\"product_department\\\" = 'Snacks') \"\n        + \"MATCH_RECOGNIZE(\\n\"\n        + \"PATTERN (\\\"STRT\\\" \\\"DOWN\\\" + \\\"UP\\\" +)\\n\"\n        + \"DEFINE \"\n        + \"\\\"DOWN\\\" AS PREV(\\\"DOWN\\\".\\\"net_weight\\\", 0) < \"\n        + \"PREV(\\\"DOWN\\\".\\\"net_weight\\\", 1), \"\n        + \"\\\"UP\\\" AS PREV(\\\"UP\\\".\\\"net_weight\\\", 0) > \"\n        + \"PREV(\\\"UP\\\".\\\"net_weight\\\", 1))\\n\"\n        + \"ORDER BY \\\"net_weight\\\"\";\n    sql(sql).ok(expected);\n  }\n","realPath":"core/src/test/java/org/apache/calcite/rel/rel2sql/RelToSqlConverterTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":886,"status":"M"}],"commitId":"c850e227db583a697c8cc46585b33274b63ed2d0","commitMessage":"@@@[CALCITE-1643] AFTER MATCH sub-clause of MATCH_RECOGNIZE clause (Zhiqiang-He)\n\nClose apache/calcite#429\n","date":"2017-04-25 09:26:09","modifiedFileCount":"10","status":"M","submitter":"Zhiqiang-He"},{"authorTime":"2017-05-19 14:52:34","codes":[{"authorDate":"2017-05-19 14:52:34","commitOrder":4,"curCode":"  @Test public void testMatchRecognizePatternExpression12() {\n    final String sql = \"select *\\n\"\n        + \"  from \\\"product\\\" match_recognize\\n\"\n        + \"  (\\n\"\n        + \"    pattern (strt down+ up+)\\n\"\n        + \"    define\\n\"\n        + \"      down as down.\\\"net_weight\\\" < PREV(down.\\\"net_weight\\\"),\\n\"\n        + \"      up as up.\\\"net_weight\\\" > prev(up.\\\"net_weight\\\")\\n\"\n        + \"  ) mr order by MR.\\\"net_weight\\\"\";\n    final String expected = \"SELECT *\\n\"\n        + \"FROM (SELECT *\\n\"\n        + \"FROM \\\"foodmart\\\".\\\"product\\\") MATCH_RECOGNIZE(\\n\"\n        + \"ONE ROW PER MATCH\\n\"\n        + \"AFTER MATCH SKIP TO NEXT ROW\\n\"\n        + \"PATTERN (\\\"STRT\\\" \\\"DOWN\\\" + \\\"UP\\\" +)\\n\"\n        + \"DEFINE \"\n        + \"\\\"DOWN\\\" AS PREV(\\\"DOWN\\\".\\\"net_weight\\\", 0) < \"\n        + \"PREV(\\\"DOWN\\\".\\\"net_weight\\\", 1), \"\n        + \"\\\"UP\\\" AS PREV(\\\"UP\\\".\\\"net_weight\\\", 0) > \"\n        + \"PREV(\\\"UP\\\".\\\"net_weight\\\", 1))\\n\"\n        + \"ORDER BY \\\"net_weight\\\"\";\n    sql(sql).ok(expected);\n  }\n","date":"2017-05-24 02:28:41","endLine":928,"groupId":"3441","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"testMatchRecognizePatternExpression12","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/cc/fb46e7793076f00b67c96a5e27a4ed198c4878.src","preCode":"  @Test public void testMatchRecognizePatternExpression12() {\n    final String sql = \"select *\\n\"\n        + \"  from \\\"product\\\" match_recognize\\n\"\n        + \"  (\\n\"\n        + \"    pattern (strt down+ up+)\\n\"\n        + \"    define\\n\"\n        + \"      down as down.\\\"net_weight\\\" < PREV(down.\\\"net_weight\\\"),\\n\"\n        + \"      up as up.\\\"net_weight\\\" > prev(up.\\\"net_weight\\\")\\n\"\n        + \"  ) mr order by MR.\\\"net_weight\\\"\";\n    final String expected = \"SELECT *\\n\"\n        + \"FROM (SELECT *\\n\"\n        + \"FROM \\\"foodmart\\\".\\\"product\\\") MATCH_RECOGNIZE(\\n\"\n        + \"AFTER MATCH SKIP TO NEXT ROW\\n\"\n        + \"PATTERN (\\\"STRT\\\" \\\"DOWN\\\" + \\\"UP\\\" +)\\n\"\n        + \"DEFINE \"\n        + \"\\\"DOWN\\\" AS PREV(\\\"DOWN\\\".\\\"net_weight\\\", 0) < \"\n        + \"PREV(\\\"DOWN\\\".\\\"net_weight\\\", 1), \"\n        + \"\\\"UP\\\" AS PREV(\\\"UP\\\".\\\"net_weight\\\", 0) > \"\n        + \"PREV(\\\"UP\\\".\\\"net_weight\\\", 1))\\n\"\n        + \"ORDER BY \\\"net_weight\\\"\";\n    sql(sql).ok(expected);\n  }\n","realPath":"core/src/test/java/org/apache/calcite/rel/rel2sql/RelToSqlConverterTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":906,"status":"M"},{"authorDate":"2017-05-19 14:52:34","commitOrder":4,"curCode":"  @Test public void testMatchRecognizePatternExpression13() {\n    final String sql = \"select *\\n\"\n        + \"  from (\\n\"\n        + \"select *\\n\"\n        + \"from \\\"sales_fact_1997\\\" as s\\n\"\n        + \"join \\\"customer\\\" as c using (\\\"customer_id\\\")\\n\"\n        + \"join \\\"product\\\" as p using (\\\"product_id\\\")\\n\"\n        + \"join \\\"product_class\\\" as pc using (\\\"product_class_id\\\")\\n\"\n        + \"where c.\\\"city\\\" = 'San Francisco'\\n\"\n        + \"and pc.\\\"product_department\\\" = 'Snacks'\"\n        + \") match_recognize\\n\"\n        + \"  (\\n\"\n        + \"    pattern (strt down+ up+)\\n\"\n        + \"    define\\n\"\n        + \"      down as down.\\\"net_weight\\\" < PREV(down.\\\"net_weight\\\"),\\n\"\n        + \"      up as up.\\\"net_weight\\\" > prev(up.\\\"net_weight\\\")\\n\"\n        + \"  ) mr order by MR.\\\"net_weight\\\"\";\n    final String expected = \"SELECT *\\n\"\n        + \"FROM (SELECT *\\n\"\n        + \"FROM \\\"foodmart\\\".\\\"sales_fact_1997\\\"\\n\"\n        + \"INNER JOIN \\\"foodmart\\\".\\\"customer\\\" \"\n        + \"ON \\\"sales_fact_1997\\\".\\\"customer_id\\\" = \\\"customer\\\".\\\"customer_id\\\"\\n\"\n        + \"INNER JOIN \\\"foodmart\\\".\\\"product\\\" \"\n        + \"ON \\\"sales_fact_1997\\\".\\\"product_id\\\" = \\\"product\\\".\\\"product_id\\\"\\n\"\n        + \"INNER JOIN \\\"foodmart\\\".\\\"product_class\\\" \"\n        + \"ON \\\"product\\\".\\\"product_class_id\\\" = \\\"product_class\\\".\\\"product_class_id\\\"\\n\"\n        + \"WHERE \\\"customer\\\".\\\"city\\\" = 'San Francisco' \"\n        + \"AND \\\"product_class\\\".\\\"product_department\\\" = 'Snacks') \"\n        + \"MATCH_RECOGNIZE(\\n\"\n        + \"ONE ROW PER MATCH\\n\"\n        + \"AFTER MATCH SKIP TO NEXT ROW\\n\"\n        + \"PATTERN (\\\"STRT\\\" \\\"DOWN\\\" + \\\"UP\\\" +)\\n\"\n        + \"DEFINE \"\n        + \"\\\"DOWN\\\" AS PREV(\\\"DOWN\\\".\\\"net_weight\\\", 0) < \"\n        + \"PREV(\\\"DOWN\\\".\\\"net_weight\\\", 1), \"\n        + \"\\\"UP\\\" AS PREV(\\\"UP\\\".\\\"net_weight\\\", 0) > \"\n        + \"PREV(\\\"UP\\\".\\\"net_weight\\\", 1))\\n\"\n        + \"ORDER BY \\\"net_weight\\\"\";\n    sql(sql).ok(expected);\n  }\n","date":"2017-05-24 02:28:41","endLine":969,"groupId":"3441","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"testMatchRecognizePatternExpression13","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/cc/fb46e7793076f00b67c96a5e27a4ed198c4878.src","preCode":"  @Test public void testMatchRecognizePatternExpression13() {\n    final String sql = \"select *\\n\"\n        + \"  from (\\n\"\n        + \"select *\\n\"\n        + \"from \\\"sales_fact_1997\\\" as s\\n\"\n        + \"join \\\"customer\\\" as c using (\\\"customer_id\\\")\\n\"\n        + \"join \\\"product\\\" as p using (\\\"product_id\\\")\\n\"\n        + \"join \\\"product_class\\\" as pc using (\\\"product_class_id\\\")\\n\"\n        + \"where c.\\\"city\\\" = 'San Francisco'\\n\"\n        + \"and pc.\\\"product_department\\\" = 'Snacks'\"\n        + \") match_recognize\\n\"\n        + \"  (\\n\"\n        + \"    pattern (strt down+ up+)\\n\"\n        + \"    define\\n\"\n        + \"      down as down.\\\"net_weight\\\" < PREV(down.\\\"net_weight\\\"),\\n\"\n        + \"      up as up.\\\"net_weight\\\" > prev(up.\\\"net_weight\\\")\\n\"\n        + \"  ) mr order by MR.\\\"net_weight\\\"\";\n    final String expected = \"SELECT *\\n\"\n        + \"FROM (SELECT *\\n\"\n        + \"FROM \\\"foodmart\\\".\\\"sales_fact_1997\\\"\\n\"\n        + \"INNER JOIN \\\"foodmart\\\".\\\"customer\\\" \"\n        + \"ON \\\"sales_fact_1997\\\".\\\"customer_id\\\" = \\\"customer\\\".\\\"customer_id\\\"\\n\"\n        + \"INNER JOIN \\\"foodmart\\\".\\\"product\\\" \"\n        + \"ON \\\"sales_fact_1997\\\".\\\"product_id\\\" = \\\"product\\\".\\\"product_id\\\"\\n\"\n        + \"INNER JOIN \\\"foodmart\\\".\\\"product_class\\\" \"\n        + \"ON \\\"product\\\".\\\"product_class_id\\\" = \\\"product_class\\\".\\\"product_class_id\\\"\\n\"\n        + \"WHERE \\\"customer\\\".\\\"city\\\" = 'San Francisco' \"\n        + \"AND \\\"product_class\\\".\\\"product_department\\\" = 'Snacks') \"\n        + \"MATCH_RECOGNIZE(\\n\"\n        + \"AFTER MATCH SKIP TO NEXT ROW\\n\"\n        + \"PATTERN (\\\"STRT\\\" \\\"DOWN\\\" + \\\"UP\\\" +)\\n\"\n        + \"DEFINE \"\n        + \"\\\"DOWN\\\" AS PREV(\\\"DOWN\\\".\\\"net_weight\\\", 0) < \"\n        + \"PREV(\\\"DOWN\\\".\\\"net_weight\\\", 1), \"\n        + \"\\\"UP\\\" AS PREV(\\\"UP\\\".\\\"net_weight\\\", 0) > \"\n        + \"PREV(\\\"UP\\\".\\\"net_weight\\\", 1))\\n\"\n        + \"ORDER BY \\\"net_weight\\\"\";\n    sql(sql).ok(expected);\n  }\n","realPath":"core/src/test/java/org/apache/calcite/rel/rel2sql/RelToSqlConverterTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":930,"status":"M"}],"commitId":"e117c10cef192ca4ab10ffec2132b7dbd34319fa","commitMessage":"@@@[CALCITE-1645] In MATCH_RECOGNIZE clause.  support ONE ROW PER MATCH and ALL ROWS PER MATCH (Zhiqiang-He)\n\nClose apache/calcite#452\n","date":"2017-05-24 02:28:41","modifiedFileCount":"9","status":"M","submitter":"Zhiqiang-He"},{"authorTime":"2017-07-08 15:34:11","codes":[{"authorDate":"2017-07-08 15:34:11","commitOrder":5,"curCode":"  @Test public void testMatchRecognizePatternExpression12() {\n    final String sql = \"select *\\n\"\n        + \"  from \\\"product\\\" match_recognize\\n\"\n        + \"  (\\n\"\n        + \"    pattern (strt down+ up+)\\n\"\n        + \"    define\\n\"\n        + \"      down as down.\\\"net_weight\\\" < PREV(down.\\\"net_weight\\\"),\\n\"\n        + \"      up as up.\\\"net_weight\\\" > prev(up.\\\"net_weight\\\")\\n\"\n        + \"  ) mr order by MR.\\\"net_weight\\\"\";\n    final String expected = \"SELECT *\\n\"\n        + \"FROM (SELECT *\\n\"\n        + \"FROM \\\"foodmart\\\".\\\"product\\\") MATCH_RECOGNIZE(\\n\"\n        + \"ONE ROW PER MATCH\\n\"\n        + \"AFTER MATCH SKIP TO NEXT ROW\\n\"\n        + \"PATTERN (\\\"STRT\\\" \\\"DOWN\\\" + \\\"UP\\\" +)\\n\"\n        + \"DEFINE \"\n        + \"\\\"DOWN\\\" AS \\\"DOWN\\\".\\\"net_weight\\\" < \"\n        + \"PREV(\\\"DOWN\\\".\\\"net_weight\\\", 1), \"\n        + \"\\\"UP\\\" AS \\\"UP\\\".\\\"net_weight\\\" > \"\n        + \"PREV(\\\"UP\\\".\\\"net_weight\\\", 1))\\n\"\n        + \"ORDER BY \\\"net_weight\\\"\";\n    sql(sql).ok(expected);\n  }\n","date":"2017-07-09 01:03:23","endLine":1069,"groupId":"3441","id":9,"instanceNumber":1,"isCurCommit":0,"methodName":"testMatchRecognizePatternExpression12","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/d1/a1b87038071db4c1fa0d4215de14a003278229.src","preCode":"  @Test public void testMatchRecognizePatternExpression12() {\n    final String sql = \"select *\\n\"\n        + \"  from \\\"product\\\" match_recognize\\n\"\n        + \"  (\\n\"\n        + \"    pattern (strt down+ up+)\\n\"\n        + \"    define\\n\"\n        + \"      down as down.\\\"net_weight\\\" < PREV(down.\\\"net_weight\\\"),\\n\"\n        + \"      up as up.\\\"net_weight\\\" > prev(up.\\\"net_weight\\\")\\n\"\n        + \"  ) mr order by MR.\\\"net_weight\\\"\";\n    final String expected = \"SELECT *\\n\"\n        + \"FROM (SELECT *\\n\"\n        + \"FROM \\\"foodmart\\\".\\\"product\\\") MATCH_RECOGNIZE(\\n\"\n        + \"ONE ROW PER MATCH\\n\"\n        + \"AFTER MATCH SKIP TO NEXT ROW\\n\"\n        + \"PATTERN (\\\"STRT\\\" \\\"DOWN\\\" + \\\"UP\\\" +)\\n\"\n        + \"DEFINE \"\n        + \"\\\"DOWN\\\" AS PREV(\\\"DOWN\\\".\\\"net_weight\\\", 0) < \"\n        + \"PREV(\\\"DOWN\\\".\\\"net_weight\\\", 1), \"\n        + \"\\\"UP\\\" AS PREV(\\\"UP\\\".\\\"net_weight\\\", 0) > \"\n        + \"PREV(\\\"UP\\\".\\\"net_weight\\\", 1))\\n\"\n        + \"ORDER BY \\\"net_weight\\\"\";\n    sql(sql).ok(expected);\n  }\n","realPath":"core/src/test/java/org/apache/calcite/rel/rel2sql/RelToSqlConverterTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":1047,"status":"M"},{"authorDate":"2017-07-08 15:34:11","commitOrder":5,"curCode":"  @Test public void testMatchRecognizePatternExpression13() {\n    final String sql = \"select *\\n\"\n        + \"  from (\\n\"\n        + \"select *\\n\"\n        + \"from \\\"sales_fact_1997\\\" as s\\n\"\n        + \"join \\\"customer\\\" as c using (\\\"customer_id\\\")\\n\"\n        + \"join \\\"product\\\" as p using (\\\"product_id\\\")\\n\"\n        + \"join \\\"product_class\\\" as pc using (\\\"product_class_id\\\")\\n\"\n        + \"where c.\\\"city\\\" = 'San Francisco'\\n\"\n        + \"and pc.\\\"product_department\\\" = 'Snacks'\"\n        + \") match_recognize\\n\"\n        + \"  (\\n\"\n        + \"    pattern (strt down+ up+)\\n\"\n        + \"    define\\n\"\n        + \"      down as down.\\\"net_weight\\\" < PREV(down.\\\"net_weight\\\"),\\n\"\n        + \"      up as up.\\\"net_weight\\\" > prev(up.\\\"net_weight\\\")\\n\"\n        + \"  ) mr order by MR.\\\"net_weight\\\"\";\n    final String expected = \"SELECT *\\n\"\n        + \"FROM (SELECT *\\n\"\n        + \"FROM \\\"foodmart\\\".\\\"sales_fact_1997\\\"\\n\"\n        + \"INNER JOIN \\\"foodmart\\\".\\\"customer\\\" \"\n        + \"ON \\\"sales_fact_1997\\\".\\\"customer_id\\\" = \\\"customer\\\".\\\"customer_id\\\"\\n\"\n        + \"INNER JOIN \\\"foodmart\\\".\\\"product\\\" \"\n        + \"ON \\\"sales_fact_1997\\\".\\\"product_id\\\" = \\\"product\\\".\\\"product_id\\\"\\n\"\n        + \"INNER JOIN \\\"foodmart\\\".\\\"product_class\\\" \"\n        + \"ON \\\"product\\\".\\\"product_class_id\\\" = \\\"product_class\\\".\\\"product_class_id\\\"\\n\"\n        + \"WHERE \\\"customer\\\".\\\"city\\\" = 'San Francisco' \"\n        + \"AND \\\"product_class\\\".\\\"product_department\\\" = 'Snacks') \"\n        + \"MATCH_RECOGNIZE(\\n\"\n        + \"ONE ROW PER MATCH\\n\"\n        + \"AFTER MATCH SKIP TO NEXT ROW\\n\"\n        + \"PATTERN (\\\"STRT\\\" \\\"DOWN\\\" + \\\"UP\\\" +)\\n\"\n        + \"DEFINE \"\n        + \"\\\"DOWN\\\" AS \\\"DOWN\\\".\\\"net_weight\\\" < \"\n        + \"PREV(\\\"DOWN\\\".\\\"net_weight\\\", 1), \"\n        + \"\\\"UP\\\" AS \\\"UP\\\".\\\"net_weight\\\" > \"\n        + \"PREV(\\\"UP\\\".\\\"net_weight\\\", 1))\\n\"\n        + \"ORDER BY \\\"net_weight\\\"\";\n    sql(sql).ok(expected);\n  }\n","date":"2017-07-09 01:03:23","endLine":1110,"groupId":"3441","id":10,"instanceNumber":2,"isCurCommit":0,"methodName":"testMatchRecognizePatternExpression13","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/d1/a1b87038071db4c1fa0d4215de14a003278229.src","preCode":"  @Test public void testMatchRecognizePatternExpression13() {\n    final String sql = \"select *\\n\"\n        + \"  from (\\n\"\n        + \"select *\\n\"\n        + \"from \\\"sales_fact_1997\\\" as s\\n\"\n        + \"join \\\"customer\\\" as c using (\\\"customer_id\\\")\\n\"\n        + \"join \\\"product\\\" as p using (\\\"product_id\\\")\\n\"\n        + \"join \\\"product_class\\\" as pc using (\\\"product_class_id\\\")\\n\"\n        + \"where c.\\\"city\\\" = 'San Francisco'\\n\"\n        + \"and pc.\\\"product_department\\\" = 'Snacks'\"\n        + \") match_recognize\\n\"\n        + \"  (\\n\"\n        + \"    pattern (strt down+ up+)\\n\"\n        + \"    define\\n\"\n        + \"      down as down.\\\"net_weight\\\" < PREV(down.\\\"net_weight\\\"),\\n\"\n        + \"      up as up.\\\"net_weight\\\" > prev(up.\\\"net_weight\\\")\\n\"\n        + \"  ) mr order by MR.\\\"net_weight\\\"\";\n    final String expected = \"SELECT *\\n\"\n        + \"FROM (SELECT *\\n\"\n        + \"FROM \\\"foodmart\\\".\\\"sales_fact_1997\\\"\\n\"\n        + \"INNER JOIN \\\"foodmart\\\".\\\"customer\\\" \"\n        + \"ON \\\"sales_fact_1997\\\".\\\"customer_id\\\" = \\\"customer\\\".\\\"customer_id\\\"\\n\"\n        + \"INNER JOIN \\\"foodmart\\\".\\\"product\\\" \"\n        + \"ON \\\"sales_fact_1997\\\".\\\"product_id\\\" = \\\"product\\\".\\\"product_id\\\"\\n\"\n        + \"INNER JOIN \\\"foodmart\\\".\\\"product_class\\\" \"\n        + \"ON \\\"product\\\".\\\"product_class_id\\\" = \\\"product_class\\\".\\\"product_class_id\\\"\\n\"\n        + \"WHERE \\\"customer\\\".\\\"city\\\" = 'San Francisco' \"\n        + \"AND \\\"product_class\\\".\\\"product_department\\\" = 'Snacks') \"\n        + \"MATCH_RECOGNIZE(\\n\"\n        + \"ONE ROW PER MATCH\\n\"\n        + \"AFTER MATCH SKIP TO NEXT ROW\\n\"\n        + \"PATTERN (\\\"STRT\\\" \\\"DOWN\\\" + \\\"UP\\\" +)\\n\"\n        + \"DEFINE \"\n        + \"\\\"DOWN\\\" AS PREV(\\\"DOWN\\\".\\\"net_weight\\\", 0) < \"\n        + \"PREV(\\\"DOWN\\\".\\\"net_weight\\\", 1), \"\n        + \"\\\"UP\\\" AS PREV(\\\"UP\\\".\\\"net_weight\\\", 0) > \"\n        + \"PREV(\\\"UP\\\".\\\"net_weight\\\", 1))\\n\"\n        + \"ORDER BY \\\"net_weight\\\"\";\n    sql(sql).ok(expected);\n  }\n","realPath":"core/src/test/java/org/apache/calcite/rel/rel2sql/RelToSqlConverterTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":1071,"status":"M"}],"commitId":"65d95e6792c002d70d826b049cf16a748fe3109d","commitMessage":"@@@[CALCITE-1871] Nesting LAST within PREV is not parsed correctly for MATCH_RECOGNIZE\n\nClose apache/calcite#494\n","date":"2017-07-09 01:03:23","modifiedFileCount":"3","status":"M","submitter":"Zhiqiang-He"},{"authorTime":"2017-08-15 17:19:00","codes":[{"authorDate":"2017-08-15 17:19:00","commitOrder":6,"curCode":"  @Test public void testMatchRecognizePatternExpression12() {\n    final String sql = \"select *\\n\"\n        + \"  from \\\"product\\\" match_recognize\\n\"\n        + \"  (\\n\"\n        + \"    pattern (strt down+ up+)\\n\"\n        + \"    define\\n\"\n        + \"      down as down.\\\"net_weight\\\" < PREV(down.\\\"net_weight\\\"),\\n\"\n        + \"      up as up.\\\"net_weight\\\" > prev(up.\\\"net_weight\\\")\\n\"\n        + \"  ) mr order by MR.\\\"net_weight\\\"\";\n    final String expected = \"SELECT *\\n\"\n        + \"FROM (SELECT *\\n\"\n        + \"FROM \\\"foodmart\\\".\\\"product\\\") MATCH_RECOGNIZE(\\n\"\n        + \"ONE ROW PER MATCH\\n\"\n        + \"AFTER MATCH SKIP TO NEXT ROW\\n\"\n        + \"PATTERN (\\\"STRT\\\" \\\"DOWN\\\" + \\\"UP\\\" +)\\n\"\n        + \"DEFINE \"\n        + \"\\\"DOWN\\\" AS PREV(\\\"DOWN\\\".\\\"net_weight\\\", 0) < \"\n        + \"PREV(\\\"DOWN\\\".\\\"net_weight\\\", 1), \"\n        + \"\\\"UP\\\" AS PREV(\\\"UP\\\".\\\"net_weight\\\", 0) > \"\n        + \"PREV(\\\"UP\\\".\\\"net_weight\\\", 1))\\n\"\n        + \"ORDER BY \\\"net_weight\\\"\";\n    sql(sql).ok(expected);\n  }\n","date":"2017-08-30 01:11:17","endLine":1257,"groupId":"3441","id":11,"instanceNumber":1,"isCurCommit":0,"methodName":"testMatchRecognizePatternExpression12","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/b7/2edfc9de10dcc4d3e8ac90d6dfdc278900b007.src","preCode":"  @Test public void testMatchRecognizePatternExpression12() {\n    final String sql = \"select *\\n\"\n        + \"  from \\\"product\\\" match_recognize\\n\"\n        + \"  (\\n\"\n        + \"    pattern (strt down+ up+)\\n\"\n        + \"    define\\n\"\n        + \"      down as down.\\\"net_weight\\\" < PREV(down.\\\"net_weight\\\"),\\n\"\n        + \"      up as up.\\\"net_weight\\\" > prev(up.\\\"net_weight\\\")\\n\"\n        + \"  ) mr order by MR.\\\"net_weight\\\"\";\n    final String expected = \"SELECT *\\n\"\n        + \"FROM (SELECT *\\n\"\n        + \"FROM \\\"foodmart\\\".\\\"product\\\") MATCH_RECOGNIZE(\\n\"\n        + \"ONE ROW PER MATCH\\n\"\n        + \"AFTER MATCH SKIP TO NEXT ROW\\n\"\n        + \"PATTERN (\\\"STRT\\\" \\\"DOWN\\\" + \\\"UP\\\" +)\\n\"\n        + \"DEFINE \"\n        + \"\\\"DOWN\\\" AS \\\"DOWN\\\".\\\"net_weight\\\" < \"\n        + \"PREV(\\\"DOWN\\\".\\\"net_weight\\\", 1), \"\n        + \"\\\"UP\\\" AS \\\"UP\\\".\\\"net_weight\\\" > \"\n        + \"PREV(\\\"UP\\\".\\\"net_weight\\\", 1))\\n\"\n        + \"ORDER BY \\\"net_weight\\\"\";\n    sql(sql).ok(expected);\n  }\n","realPath":"core/src/test/java/org/apache/calcite/rel/rel2sql/RelToSqlConverterTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":1235,"status":"M"},{"authorDate":"2017-08-15 17:19:00","commitOrder":6,"curCode":"  @Test public void testMatchRecognizePatternExpression13() {\n    final String sql = \"select *\\n\"\n        + \"  from (\\n\"\n        + \"select *\\n\"\n        + \"from \\\"sales_fact_1997\\\" as s\\n\"\n        + \"join \\\"customer\\\" as c using (\\\"customer_id\\\")\\n\"\n        + \"join \\\"product\\\" as p using (\\\"product_id\\\")\\n\"\n        + \"join \\\"product_class\\\" as pc using (\\\"product_class_id\\\")\\n\"\n        + \"where c.\\\"city\\\" = 'San Francisco'\\n\"\n        + \"and pc.\\\"product_department\\\" = 'Snacks'\"\n        + \") match_recognize\\n\"\n        + \"  (\\n\"\n        + \"    pattern (strt down+ up+)\\n\"\n        + \"    define\\n\"\n        + \"      down as down.\\\"net_weight\\\" < PREV(down.\\\"net_weight\\\"),\\n\"\n        + \"      up as up.\\\"net_weight\\\" > prev(up.\\\"net_weight\\\")\\n\"\n        + \"  ) mr order by MR.\\\"net_weight\\\"\";\n    final String expected = \"SELECT *\\n\"\n        + \"FROM (SELECT *\\n\"\n        + \"FROM \\\"foodmart\\\".\\\"sales_fact_1997\\\"\\n\"\n        + \"INNER JOIN \\\"foodmart\\\".\\\"customer\\\" \"\n        + \"ON \\\"sales_fact_1997\\\".\\\"customer_id\\\" = \\\"customer\\\".\\\"customer_id\\\"\\n\"\n        + \"INNER JOIN \\\"foodmart\\\".\\\"product\\\" \"\n        + \"ON \\\"sales_fact_1997\\\".\\\"product_id\\\" = \\\"product\\\".\\\"product_id\\\"\\n\"\n        + \"INNER JOIN \\\"foodmart\\\".\\\"product_class\\\" \"\n        + \"ON \\\"product\\\".\\\"product_class_id\\\" = \\\"product_class\\\".\\\"product_class_id\\\"\\n\"\n        + \"WHERE \\\"customer\\\".\\\"city\\\" = 'San Francisco' \"\n        + \"AND \\\"product_class\\\".\\\"product_department\\\" = 'Snacks') \"\n        + \"MATCH_RECOGNIZE(\\n\"\n        + \"ONE ROW PER MATCH\\n\"\n        + \"AFTER MATCH SKIP TO NEXT ROW\\n\"\n        + \"PATTERN (\\\"STRT\\\" \\\"DOWN\\\" + \\\"UP\\\" +)\\n\"\n        + \"DEFINE \"\n        + \"\\\"DOWN\\\" AS PREV(\\\"DOWN\\\".\\\"net_weight\\\", 0) < \"\n        + \"PREV(\\\"DOWN\\\".\\\"net_weight\\\", 1), \"\n        + \"\\\"UP\\\" AS PREV(\\\"UP\\\".\\\"net_weight\\\", 0) > \"\n        + \"PREV(\\\"UP\\\".\\\"net_weight\\\", 1))\\n\"\n        + \"ORDER BY \\\"net_weight\\\"\";\n    sql(sql).ok(expected);\n  }\n","date":"2017-08-30 01:11:17","endLine":1298,"groupId":"3441","id":12,"instanceNumber":2,"isCurCommit":0,"methodName":"testMatchRecognizePatternExpression13","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/b7/2edfc9de10dcc4d3e8ac90d6dfdc278900b007.src","preCode":"  @Test public void testMatchRecognizePatternExpression13() {\n    final String sql = \"select *\\n\"\n        + \"  from (\\n\"\n        + \"select *\\n\"\n        + \"from \\\"sales_fact_1997\\\" as s\\n\"\n        + \"join \\\"customer\\\" as c using (\\\"customer_id\\\")\\n\"\n        + \"join \\\"product\\\" as p using (\\\"product_id\\\")\\n\"\n        + \"join \\\"product_class\\\" as pc using (\\\"product_class_id\\\")\\n\"\n        + \"where c.\\\"city\\\" = 'San Francisco'\\n\"\n        + \"and pc.\\\"product_department\\\" = 'Snacks'\"\n        + \") match_recognize\\n\"\n        + \"  (\\n\"\n        + \"    pattern (strt down+ up+)\\n\"\n        + \"    define\\n\"\n        + \"      down as down.\\\"net_weight\\\" < PREV(down.\\\"net_weight\\\"),\\n\"\n        + \"      up as up.\\\"net_weight\\\" > prev(up.\\\"net_weight\\\")\\n\"\n        + \"  ) mr order by MR.\\\"net_weight\\\"\";\n    final String expected = \"SELECT *\\n\"\n        + \"FROM (SELECT *\\n\"\n        + \"FROM \\\"foodmart\\\".\\\"sales_fact_1997\\\"\\n\"\n        + \"INNER JOIN \\\"foodmart\\\".\\\"customer\\\" \"\n        + \"ON \\\"sales_fact_1997\\\".\\\"customer_id\\\" = \\\"customer\\\".\\\"customer_id\\\"\\n\"\n        + \"INNER JOIN \\\"foodmart\\\".\\\"product\\\" \"\n        + \"ON \\\"sales_fact_1997\\\".\\\"product_id\\\" = \\\"product\\\".\\\"product_id\\\"\\n\"\n        + \"INNER JOIN \\\"foodmart\\\".\\\"product_class\\\" \"\n        + \"ON \\\"product\\\".\\\"product_class_id\\\" = \\\"product_class\\\".\\\"product_class_id\\\"\\n\"\n        + \"WHERE \\\"customer\\\".\\\"city\\\" = 'San Francisco' \"\n        + \"AND \\\"product_class\\\".\\\"product_department\\\" = 'Snacks') \"\n        + \"MATCH_RECOGNIZE(\\n\"\n        + \"ONE ROW PER MATCH\\n\"\n        + \"AFTER MATCH SKIP TO NEXT ROW\\n\"\n        + \"PATTERN (\\\"STRT\\\" \\\"DOWN\\\" + \\\"UP\\\" +)\\n\"\n        + \"DEFINE \"\n        + \"\\\"DOWN\\\" AS \\\"DOWN\\\".\\\"net_weight\\\" < \"\n        + \"PREV(\\\"DOWN\\\".\\\"net_weight\\\", 1), \"\n        + \"\\\"UP\\\" AS \\\"UP\\\".\\\"net_weight\\\" > \"\n        + \"PREV(\\\"UP\\\".\\\"net_weight\\\", 1))\\n\"\n        + \"ORDER BY \\\"net_weight\\\"\";\n    sql(sql).ok(expected);\n  }\n","realPath":"core/src/test/java/org/apache/calcite/rel/rel2sql/RelToSqlConverterTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":1259,"status":"M"}],"commitId":"d3a7c0d794cb9d0079fb37999dcd0dd6992f2041","commitMessage":"@@@[CALCITE-1943] Add back NavigationExpander and NavigationReplacer in SqlValidatorImpl (Dian Fu)\n\nIt will replace clauses such as A.price with PREV(A.price.  0) and\nmakes the implementation of RexVisitor.visitPatternFieldRef(RexPatternFieldRef)\nmore unified.  Otherwise.  it is difficult to implement this method. If\nit returns the specified field.  then the navigation such as\nPREV(A.price.  1) becomes impossible; if not.  then comparisons such as\nA.price > PREV(A.price.  1) becomes meaningless.\n\nClose apache/calcite#516\n","date":"2017-08-30 01:11:17","modifiedFileCount":"3","status":"M","submitter":"Dian Fu"},{"authorTime":"2018-03-30 02:18:34","codes":[{"authorDate":"2017-08-15 17:19:00","commitOrder":7,"curCode":"  @Test public void testMatchRecognizePatternExpression12() {\n    final String sql = \"select *\\n\"\n        + \"  from \\\"product\\\" match_recognize\\n\"\n        + \"  (\\n\"\n        + \"    pattern (strt down+ up+)\\n\"\n        + \"    define\\n\"\n        + \"      down as down.\\\"net_weight\\\" < PREV(down.\\\"net_weight\\\"),\\n\"\n        + \"      up as up.\\\"net_weight\\\" > prev(up.\\\"net_weight\\\")\\n\"\n        + \"  ) mr order by MR.\\\"net_weight\\\"\";\n    final String expected = \"SELECT *\\n\"\n        + \"FROM (SELECT *\\n\"\n        + \"FROM \\\"foodmart\\\".\\\"product\\\") MATCH_RECOGNIZE(\\n\"\n        + \"ONE ROW PER MATCH\\n\"\n        + \"AFTER MATCH SKIP TO NEXT ROW\\n\"\n        + \"PATTERN (\\\"STRT\\\" \\\"DOWN\\\" + \\\"UP\\\" +)\\n\"\n        + \"DEFINE \"\n        + \"\\\"DOWN\\\" AS PREV(\\\"DOWN\\\".\\\"net_weight\\\", 0) < \"\n        + \"PREV(\\\"DOWN\\\".\\\"net_weight\\\", 1), \"\n        + \"\\\"UP\\\" AS PREV(\\\"UP\\\".\\\"net_weight\\\", 0) > \"\n        + \"PREV(\\\"UP\\\".\\\"net_weight\\\", 1))\\n\"\n        + \"ORDER BY \\\"net_weight\\\"\";\n    sql(sql).ok(expected);\n  }\n","date":"2017-08-30 01:11:17","endLine":1257,"groupId":"3441","id":13,"instanceNumber":1,"isCurCommit":0,"methodName":"testMatchRecognizePatternExpression12","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/b7/2edfc9de10dcc4d3e8ac90d6dfdc278900b007.src","preCode":"  @Test public void testMatchRecognizePatternExpression12() {\n    final String sql = \"select *\\n\"\n        + \"  from \\\"product\\\" match_recognize\\n\"\n        + \"  (\\n\"\n        + \"    pattern (strt down+ up+)\\n\"\n        + \"    define\\n\"\n        + \"      down as down.\\\"net_weight\\\" < PREV(down.\\\"net_weight\\\"),\\n\"\n        + \"      up as up.\\\"net_weight\\\" > prev(up.\\\"net_weight\\\")\\n\"\n        + \"  ) mr order by MR.\\\"net_weight\\\"\";\n    final String expected = \"SELECT *\\n\"\n        + \"FROM (SELECT *\\n\"\n        + \"FROM \\\"foodmart\\\".\\\"product\\\") MATCH_RECOGNIZE(\\n\"\n        + \"ONE ROW PER MATCH\\n\"\n        + \"AFTER MATCH SKIP TO NEXT ROW\\n\"\n        + \"PATTERN (\\\"STRT\\\" \\\"DOWN\\\" + \\\"UP\\\" +)\\n\"\n        + \"DEFINE \"\n        + \"\\\"DOWN\\\" AS PREV(\\\"DOWN\\\".\\\"net_weight\\\", 0) < \"\n        + \"PREV(\\\"DOWN\\\".\\\"net_weight\\\", 1), \"\n        + \"\\\"UP\\\" AS PREV(\\\"UP\\\".\\\"net_weight\\\", 0) > \"\n        + \"PREV(\\\"UP\\\".\\\"net_weight\\\", 1))\\n\"\n        + \"ORDER BY \\\"net_weight\\\"\";\n    sql(sql).ok(expected);\n  }\n","realPath":"core/src/test/java/org/apache/calcite/rel/rel2sql/RelToSqlConverterTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":1235,"status":"N"},{"authorDate":"2018-03-30 02:18:34","commitOrder":7,"curCode":"  @Test public void testMatchRecognizePatternExpression13() {\n    final String sql = \"select *\\n\"\n        + \"  from (\\n\"\n        + \"select *\\n\"\n        + \"from \\\"sales_fact_1997\\\" as s\\n\"\n        + \"join \\\"customer\\\" as c\\n\"\n        + \"  on s.\\\"customer_id\\\" = c.\\\"customer_id\\\"\\n\"\n        + \"join \\\"product\\\" as p\\n\"\n        + \"  on s.\\\"product_id\\\" = p.\\\"product_id\\\"\\n\"\n        + \"join \\\"product_class\\\" as pc\\n\"\n        + \"  on p.\\\"product_class_id\\\" = pc.\\\"product_class_id\\\"\\n\"\n        + \"where c.\\\"city\\\" = 'San Francisco'\\n\"\n        + \"and pc.\\\"product_department\\\" = 'Snacks'\"\n        + \") match_recognize\\n\"\n        + \"  (\\n\"\n        + \"    pattern (strt down+ up+)\\n\"\n        + \"    define\\n\"\n        + \"      down as down.\\\"net_weight\\\" < PREV(down.\\\"net_weight\\\"),\\n\"\n        + \"      up as up.\\\"net_weight\\\" > prev(up.\\\"net_weight\\\")\\n\"\n        + \"  ) mr order by MR.\\\"net_weight\\\"\";\n    final String expected = \"SELECT *\\n\"\n        + \"FROM (SELECT *\\n\"\n        + \"FROM \\\"foodmart\\\".\\\"sales_fact_1997\\\"\\n\"\n        + \"INNER JOIN \\\"foodmart\\\".\\\"customer\\\" \"\n        + \"ON \\\"sales_fact_1997\\\".\\\"customer_id\\\" = \\\"customer\\\".\\\"customer_id\\\"\\n\"\n        + \"INNER JOIN \\\"foodmart\\\".\\\"product\\\" \"\n        + \"ON \\\"sales_fact_1997\\\".\\\"product_id\\\" = \\\"product\\\".\\\"product_id\\\"\\n\"\n        + \"INNER JOIN \\\"foodmart\\\".\\\"product_class\\\" \"\n        + \"ON \\\"product\\\".\\\"product_class_id\\\" = \\\"product_class\\\".\\\"product_class_id\\\"\\n\"\n        + \"WHERE \\\"customer\\\".\\\"city\\\" = 'San Francisco' \"\n        + \"AND \\\"product_class\\\".\\\"product_department\\\" = 'Snacks') \"\n        + \"MATCH_RECOGNIZE(\\n\"\n        + \"ONE ROW PER MATCH\\n\"\n        + \"AFTER MATCH SKIP TO NEXT ROW\\n\"\n        + \"PATTERN (\\\"STRT\\\" \\\"DOWN\\\" + \\\"UP\\\" +)\\n\"\n        + \"DEFINE \"\n        + \"\\\"DOWN\\\" AS PREV(\\\"DOWN\\\".\\\"net_weight\\\", 0) < \"\n        + \"PREV(\\\"DOWN\\\".\\\"net_weight\\\", 1), \"\n        + \"\\\"UP\\\" AS PREV(\\\"UP\\\".\\\"net_weight\\\", 0) > \"\n        + \"PREV(\\\"UP\\\".\\\"net_weight\\\", 1))\\n\"\n        + \"ORDER BY \\\"net_weight\\\"\";\n    sql(sql).ok(expected);\n  }\n","date":"2018-04-24 01:29:52","endLine":1763,"groupId":"3441","id":14,"instanceNumber":2,"isCurCommit":0,"methodName":"testMatchRecognizePatternExpression13","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/8d/daaa787b67715c7eb0a4e7987028f96491204a.src","preCode":"  @Test public void testMatchRecognizePatternExpression13() {\n    final String sql = \"select *\\n\"\n        + \"  from (\\n\"\n        + \"select *\\n\"\n        + \"from \\\"sales_fact_1997\\\" as s\\n\"\n        + \"join \\\"customer\\\" as c using (\\\"customer_id\\\")\\n\"\n        + \"join \\\"product\\\" as p using (\\\"product_id\\\")\\n\"\n        + \"join \\\"product_class\\\" as pc using (\\\"product_class_id\\\")\\n\"\n        + \"where c.\\\"city\\\" = 'San Francisco'\\n\"\n        + \"and pc.\\\"product_department\\\" = 'Snacks'\"\n        + \") match_recognize\\n\"\n        + \"  (\\n\"\n        + \"    pattern (strt down+ up+)\\n\"\n        + \"    define\\n\"\n        + \"      down as down.\\\"net_weight\\\" < PREV(down.\\\"net_weight\\\"),\\n\"\n        + \"      up as up.\\\"net_weight\\\" > prev(up.\\\"net_weight\\\")\\n\"\n        + \"  ) mr order by MR.\\\"net_weight\\\"\";\n    final String expected = \"SELECT *\\n\"\n        + \"FROM (SELECT *\\n\"\n        + \"FROM \\\"foodmart\\\".\\\"sales_fact_1997\\\"\\n\"\n        + \"INNER JOIN \\\"foodmart\\\".\\\"customer\\\" \"\n        + \"ON \\\"sales_fact_1997\\\".\\\"customer_id\\\" = \\\"customer\\\".\\\"customer_id\\\"\\n\"\n        + \"INNER JOIN \\\"foodmart\\\".\\\"product\\\" \"\n        + \"ON \\\"sales_fact_1997\\\".\\\"product_id\\\" = \\\"product\\\".\\\"product_id\\\"\\n\"\n        + \"INNER JOIN \\\"foodmart\\\".\\\"product_class\\\" \"\n        + \"ON \\\"product\\\".\\\"product_class_id\\\" = \\\"product_class\\\".\\\"product_class_id\\\"\\n\"\n        + \"WHERE \\\"customer\\\".\\\"city\\\" = 'San Francisco' \"\n        + \"AND \\\"product_class\\\".\\\"product_department\\\" = 'Snacks') \"\n        + \"MATCH_RECOGNIZE(\\n\"\n        + \"ONE ROW PER MATCH\\n\"\n        + \"AFTER MATCH SKIP TO NEXT ROW\\n\"\n        + \"PATTERN (\\\"STRT\\\" \\\"DOWN\\\" + \\\"UP\\\" +)\\n\"\n        + \"DEFINE \"\n        + \"\\\"DOWN\\\" AS PREV(\\\"DOWN\\\".\\\"net_weight\\\", 0) < \"\n        + \"PREV(\\\"DOWN\\\".\\\"net_weight\\\", 1), \"\n        + \"\\\"UP\\\" AS PREV(\\\"UP\\\".\\\"net_weight\\\", 0) > \"\n        + \"PREV(\\\"UP\\\".\\\"net_weight\\\", 1))\\n\"\n        + \"ORDER BY \\\"net_weight\\\"\";\n    sql(sql).ok(expected);\n  }\n","realPath":"core/src/test/java/org/apache/calcite/rel/rel2sql/RelToSqlConverterTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":1721,"status":"M"}],"commitId":"92f7259b96744180a0a556ac9f5842f705192b3f","commitMessage":"@@@[CALCITE-2227] Standards-compliant column ordering for NATURAL JOIN and JOIN USING\n\nNow the join column(s) occur only once in the expansion of \"SELECT *\". \nand are derived using COALESCE(left.k.  right.k) so are sometimes NOT\nNULL where preivously nullable. This is a breaking change for those\nqueries.\n\nImprove type-inference for COALESCE.\n","date":"2018-04-24 01:29:52","modifiedFileCount":"22","status":"M","submitter":"Julian Hyde"},{"authorTime":"2020-04-02 10:39:10","codes":[{"authorDate":"2020-04-02 10:39:10","commitOrder":8,"curCode":"  @Test void testMatchRecognizePatternExpression12() {\n    final String sql = \"select *\\n\"\n        + \"  from \\\"product\\\" match_recognize\\n\"\n        + \"  (\\n\"\n        + \"    pattern (strt down+ up+)\\n\"\n        + \"    define\\n\"\n        + \"      down as down.\\\"net_weight\\\" < PREV(down.\\\"net_weight\\\"),\\n\"\n        + \"      up as up.\\\"net_weight\\\" > prev(up.\\\"net_weight\\\")\\n\"\n        + \"  ) mr order by MR.\\\"net_weight\\\"\";\n    final String expected = \"SELECT *\\n\"\n        + \"FROM (SELECT *\\n\"\n        + \"FROM \\\"foodmart\\\".\\\"product\\\") MATCH_RECOGNIZE(\\n\"\n        + \"ONE ROW PER MATCH\\n\"\n        + \"AFTER MATCH SKIP TO NEXT ROW\\n\"\n        + \"PATTERN (\\\"STRT\\\" \\\"DOWN\\\" + \\\"UP\\\" +)\\n\"\n        + \"DEFINE \"\n        + \"\\\"DOWN\\\" AS PREV(\\\"DOWN\\\".\\\"net_weight\\\", 0) < \"\n        + \"PREV(\\\"DOWN\\\".\\\"net_weight\\\", 1), \"\n        + \"\\\"UP\\\" AS PREV(\\\"UP\\\".\\\"net_weight\\\", 0) > \"\n        + \"PREV(\\\"UP\\\".\\\"net_weight\\\", 1))\\n\"\n        + \"ORDER BY \\\"net_weight\\\"\";\n    sql(sql).ok(expected);\n  }\n","date":"2020-04-06 04:57:49","endLine":3428,"groupId":"101562","id":15,"instanceNumber":1,"isCurCommit":0,"methodName":"testMatchRecognizePatternExpression12","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/a7/568223fb7dbbd6fb8b19514d3893973975f662.src","preCode":"  @Test public void testMatchRecognizePatternExpression12() {\n    final String sql = \"select *\\n\"\n        + \"  from \\\"product\\\" match_recognize\\n\"\n        + \"  (\\n\"\n        + \"    pattern (strt down+ up+)\\n\"\n        + \"    define\\n\"\n        + \"      down as down.\\\"net_weight\\\" < PREV(down.\\\"net_weight\\\"),\\n\"\n        + \"      up as up.\\\"net_weight\\\" > prev(up.\\\"net_weight\\\")\\n\"\n        + \"  ) mr order by MR.\\\"net_weight\\\"\";\n    final String expected = \"SELECT *\\n\"\n        + \"FROM (SELECT *\\n\"\n        + \"FROM \\\"foodmart\\\".\\\"product\\\") MATCH_RECOGNIZE(\\n\"\n        + \"ONE ROW PER MATCH\\n\"\n        + \"AFTER MATCH SKIP TO NEXT ROW\\n\"\n        + \"PATTERN (\\\"STRT\\\" \\\"DOWN\\\" + \\\"UP\\\" +)\\n\"\n        + \"DEFINE \"\n        + \"\\\"DOWN\\\" AS PREV(\\\"DOWN\\\".\\\"net_weight\\\", 0) < \"\n        + \"PREV(\\\"DOWN\\\".\\\"net_weight\\\", 1), \"\n        + \"\\\"UP\\\" AS PREV(\\\"UP\\\".\\\"net_weight\\\", 0) > \"\n        + \"PREV(\\\"UP\\\".\\\"net_weight\\\", 1))\\n\"\n        + \"ORDER BY \\\"net_weight\\\"\";\n    sql(sql).ok(expected);\n  }\n","realPath":"core/src/test/java/org/apache/calcite/rel/rel2sql/RelToSqlConverterTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":3406,"status":"M"},{"authorDate":"2020-04-02 10:39:10","commitOrder":8,"curCode":"  @Test void testMatchRecognizePatternExpression13() {\n    final String sql = \"select *\\n\"\n        + \"  from (\\n\"\n        + \"select *\\n\"\n        + \"from \\\"sales_fact_1997\\\" as s\\n\"\n        + \"join \\\"customer\\\" as c\\n\"\n        + \"  on s.\\\"customer_id\\\" = c.\\\"customer_id\\\"\\n\"\n        + \"join \\\"product\\\" as p\\n\"\n        + \"  on s.\\\"product_id\\\" = p.\\\"product_id\\\"\\n\"\n        + \"join \\\"product_class\\\" as pc\\n\"\n        + \"  on p.\\\"product_class_id\\\" = pc.\\\"product_class_id\\\"\\n\"\n        + \"where c.\\\"city\\\" = 'San Francisco'\\n\"\n        + \"and pc.\\\"product_department\\\" = 'Snacks'\"\n        + \") match_recognize\\n\"\n        + \"  (\\n\"\n        + \"    pattern (strt down+ up+)\\n\"\n        + \"    define\\n\"\n        + \"      down as down.\\\"net_weight\\\" < PREV(down.\\\"net_weight\\\"),\\n\"\n        + \"      up as up.\\\"net_weight\\\" > prev(up.\\\"net_weight\\\")\\n\"\n        + \"  ) mr order by MR.\\\"net_weight\\\"\";\n    final String expected = \"SELECT *\\n\"\n        + \"FROM (SELECT *\\n\"\n        + \"FROM \\\"foodmart\\\".\\\"sales_fact_1997\\\"\\n\"\n        + \"INNER JOIN \\\"foodmart\\\".\\\"customer\\\" \"\n        + \"ON \\\"sales_fact_1997\\\".\\\"customer_id\\\" = \\\"customer\\\".\\\"customer_id\\\"\\n\"\n        + \"INNER JOIN \\\"foodmart\\\".\\\"product\\\" \"\n        + \"ON \\\"sales_fact_1997\\\".\\\"product_id\\\" = \\\"product\\\".\\\"product_id\\\"\\n\"\n        + \"INNER JOIN \\\"foodmart\\\".\\\"product_class\\\" \"\n        + \"ON \\\"product\\\".\\\"product_class_id\\\" = \\\"product_class\\\".\\\"product_class_id\\\"\\n\"\n        + \"WHERE \\\"customer\\\".\\\"city\\\" = 'San Francisco' \"\n        + \"AND \\\"product_class\\\".\\\"product_department\\\" = 'Snacks') \"\n        + \"MATCH_RECOGNIZE(\\n\"\n        + \"ONE ROW PER MATCH\\n\"\n        + \"AFTER MATCH SKIP TO NEXT ROW\\n\"\n        + \"PATTERN (\\\"STRT\\\" \\\"DOWN\\\" + \\\"UP\\\" +)\\n\"\n        + \"DEFINE \"\n        + \"\\\"DOWN\\\" AS PREV(\\\"DOWN\\\".\\\"net_weight\\\", 0) < \"\n        + \"PREV(\\\"DOWN\\\".\\\"net_weight\\\", 1), \"\n        + \"\\\"UP\\\" AS PREV(\\\"UP\\\".\\\"net_weight\\\", 0) > \"\n        + \"PREV(\\\"UP\\\".\\\"net_weight\\\", 1))\\n\"\n        + \"ORDER BY \\\"net_weight\\\"\";\n    sql(sql).ok(expected);\n  }\n","date":"2020-04-06 04:57:49","endLine":3472,"groupId":"101562","id":16,"instanceNumber":2,"isCurCommit":0,"methodName":"testMatchRecognizePatternExpression13","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/a7/568223fb7dbbd6fb8b19514d3893973975f662.src","preCode":"  @Test public void testMatchRecognizePatternExpression13() {\n    final String sql = \"select *\\n\"\n        + \"  from (\\n\"\n        + \"select *\\n\"\n        + \"from \\\"sales_fact_1997\\\" as s\\n\"\n        + \"join \\\"customer\\\" as c\\n\"\n        + \"  on s.\\\"customer_id\\\" = c.\\\"customer_id\\\"\\n\"\n        + \"join \\\"product\\\" as p\\n\"\n        + \"  on s.\\\"product_id\\\" = p.\\\"product_id\\\"\\n\"\n        + \"join \\\"product_class\\\" as pc\\n\"\n        + \"  on p.\\\"product_class_id\\\" = pc.\\\"product_class_id\\\"\\n\"\n        + \"where c.\\\"city\\\" = 'San Francisco'\\n\"\n        + \"and pc.\\\"product_department\\\" = 'Snacks'\"\n        + \") match_recognize\\n\"\n        + \"  (\\n\"\n        + \"    pattern (strt down+ up+)\\n\"\n        + \"    define\\n\"\n        + \"      down as down.\\\"net_weight\\\" < PREV(down.\\\"net_weight\\\"),\\n\"\n        + \"      up as up.\\\"net_weight\\\" > prev(up.\\\"net_weight\\\")\\n\"\n        + \"  ) mr order by MR.\\\"net_weight\\\"\";\n    final String expected = \"SELECT *\\n\"\n        + \"FROM (SELECT *\\n\"\n        + \"FROM \\\"foodmart\\\".\\\"sales_fact_1997\\\"\\n\"\n        + \"INNER JOIN \\\"foodmart\\\".\\\"customer\\\" \"\n        + \"ON \\\"sales_fact_1997\\\".\\\"customer_id\\\" = \\\"customer\\\".\\\"customer_id\\\"\\n\"\n        + \"INNER JOIN \\\"foodmart\\\".\\\"product\\\" \"\n        + \"ON \\\"sales_fact_1997\\\".\\\"product_id\\\" = \\\"product\\\".\\\"product_id\\\"\\n\"\n        + \"INNER JOIN \\\"foodmart\\\".\\\"product_class\\\" \"\n        + \"ON \\\"product\\\".\\\"product_class_id\\\" = \\\"product_class\\\".\\\"product_class_id\\\"\\n\"\n        + \"WHERE \\\"customer\\\".\\\"city\\\" = 'San Francisco' \"\n        + \"AND \\\"product_class\\\".\\\"product_department\\\" = 'Snacks') \"\n        + \"MATCH_RECOGNIZE(\\n\"\n        + \"ONE ROW PER MATCH\\n\"\n        + \"AFTER MATCH SKIP TO NEXT ROW\\n\"\n        + \"PATTERN (\\\"STRT\\\" \\\"DOWN\\\" + \\\"UP\\\" +)\\n\"\n        + \"DEFINE \"\n        + \"\\\"DOWN\\\" AS PREV(\\\"DOWN\\\".\\\"net_weight\\\", 0) < \"\n        + \"PREV(\\\"DOWN\\\".\\\"net_weight\\\", 1), \"\n        + \"\\\"UP\\\" AS PREV(\\\"UP\\\".\\\"net_weight\\\", 0) > \"\n        + \"PREV(\\\"UP\\\".\\\"net_weight\\\", 1))\\n\"\n        + \"ORDER BY \\\"net_weight\\\"\";\n    sql(sql).ok(expected);\n  }\n","realPath":"core/src/test/java/org/apache/calcite/rel/rel2sql/RelToSqlConverterTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":3430,"status":"M"}],"commitId":"9492dd4146f63ddc028010d6c4e86f6a5cb29a8d","commitMessage":"@@@[CALCITE-3892] Make junit test classes and methods non-public where possible\n\nPrior to junit 5.  classes and methods had to be public. This is no\nlonger the case.\n\nSome classes need to remain public because they are referenced from\nelsewhere.  or if they use reflection somehow. The remaining 'public'\nkeyword will be informative to maintainers.\n","date":"2020-04-06 04:57:49","modifiedFileCount":"196","status":"M","submitter":"Julian Hyde"}]
