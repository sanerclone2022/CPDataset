[{"authorTime":"2014-12-01 23:51:36","codes":[{"authorDate":"2014-12-01 23:51:36","commitOrder":1,"curCode":"  @Test public void testCatalogsLocal() throws Exception {\n    final Connection connection = DriverManager.getConnection(\n        \"jdbc:avatica:remote:factory=\" + LJS);\n    assertThat(connection.isClosed(), is(false));\n    final ResultSet resultSet = connection.getMetaData().getCatalogs();\n    final ResultSetMetaData metaData = resultSet.getMetaData();\n    assertEquals(1, metaData.getColumnCount());\n    assertEquals(\"TABLE_CATALOG\", metaData.getColumnName(1));\n    assertTrue(resultSet.next());\n    assertFalse(resultSet.next());\n    resultSet.close();\n    connection.close();\n    assertThat(connection.isClosed(), is(true));\n  }\n","date":"2014-12-09 06:56:01","endLine":122,"groupId":"4485","id":1,"instanceNumber":1,"isCurCommit":0,"methodName":"testCatalogsLocal","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/1d/f82f7c95ebcad5d8e5935d668ecf2749e6f2a9.src","preCode":"  @Test public void testCatalogsLocal() throws Exception {\n    final Connection connection = DriverManager.getConnection(\n        \"jdbc:avatica:remote:factory=\" + LJS);\n    assertThat(connection.isClosed(), is(false));\n    final ResultSet resultSet = connection.getMetaData().getCatalogs();\n    final ResultSetMetaData metaData = resultSet.getMetaData();\n    assertEquals(1, metaData.getColumnCount());\n    assertEquals(\"TABLE_CATALOG\", metaData.getColumnName(1));\n    assertTrue(resultSet.next());\n    assertFalse(resultSet.next());\n    resultSet.close();\n    connection.close();\n    assertThat(connection.isClosed(), is(true));\n  }\n","realPath":"core/src/test/java/org/apache/calcite/jdbc/CalciteRemoteDriverTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":109,"status":"B"},{"authorDate":"2014-12-01 23:51:36","commitOrder":1,"curCode":"  @Test public void testSchemasLocal() throws Exception {\n    final Connection connection = DriverManager.getConnection(\n        \"jdbc:avatica:remote:factory=\" + LJS);\n    assertThat(connection.isClosed(), is(false));\n    final ResultSet resultSet = connection.getMetaData().getSchemas();\n    final ResultSetMetaData metaData = resultSet.getMetaData();\n    assertEquals(2, metaData.getColumnCount());\n    assertEquals(\"TABLE_SCHEM\", metaData.getColumnName(1));\n    assertEquals(\"TABLE_CATALOG\", metaData.getColumnName(2));\n    assertTrue(resultSet.next());\n    assertThat(resultSet.getString(1), equalTo(\"POST\"));\n    assertThat(resultSet.getString(2), CoreMatchers.nullValue());\n    assertTrue(resultSet.next());\n    assertThat(resultSet.getString(1), equalTo(\"foodmart\"));\n    assertThat(resultSet.getString(2), CoreMatchers.nullValue());\n    assertTrue(resultSet.next());\n    assertTrue(resultSet.next());\n    assertFalse(resultSet.next());\n    resultSet.close();\n    connection.close();\n    assertThat(connection.isClosed(), is(true));\n  }\n","date":"2014-12-09 06:56:01","endLine":145,"groupId":"4484","id":2,"instanceNumber":2,"isCurCommit":0,"methodName":"testSchemasLocal","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/1d/f82f7c95ebcad5d8e5935d668ecf2749e6f2a9.src","preCode":"  @Test public void testSchemasLocal() throws Exception {\n    final Connection connection = DriverManager.getConnection(\n        \"jdbc:avatica:remote:factory=\" + LJS);\n    assertThat(connection.isClosed(), is(false));\n    final ResultSet resultSet = connection.getMetaData().getSchemas();\n    final ResultSetMetaData metaData = resultSet.getMetaData();\n    assertEquals(2, metaData.getColumnCount());\n    assertEquals(\"TABLE_SCHEM\", metaData.getColumnName(1));\n    assertEquals(\"TABLE_CATALOG\", metaData.getColumnName(2));\n    assertTrue(resultSet.next());\n    assertThat(resultSet.getString(1), equalTo(\"POST\"));\n    assertThat(resultSet.getString(2), CoreMatchers.nullValue());\n    assertTrue(resultSet.next());\n    assertThat(resultSet.getString(1), equalTo(\"foodmart\"));\n    assertThat(resultSet.getString(2), CoreMatchers.nullValue());\n    assertTrue(resultSet.next());\n    assertTrue(resultSet.next());\n    assertFalse(resultSet.next());\n    resultSet.close();\n    connection.close();\n    assertThat(connection.isClosed(), is(true));\n  }\n","realPath":"core/src/test/java/org/apache/calcite/jdbc/CalciteRemoteDriverTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":124,"status":"B"}],"commitId":"94752a6066cd8a379782510a78a885cffb5aadb9","commitMessage":"@@@[CALCITE-93] Calcite RPC server;\n[CALCITE-94] Remote JDBC driver\n\nAdd module.  calcite-avatica-server. HttpServer is an RPC server that listens on port 8765 for JSON requests over HTTP.\n\nWe can now execute basic queries.  and schema and catalogs metadata requests.  over request-response.\n\nChange interface AvaticaPrepareResult to class Meta.Signature.\n\nMove DateTimeUtil to Avatica and rename to DateTimeUtils.\n\nLinq4j.iterableEnumerator checks whether the Iterable is already an Enumerable; IterableEnumerator calls close() if the Iterator implements Closeable.\n\nAdd test case for [CALCITE-508] (not fixed yet).\n\nFor remote testing.  allow CalciteAssert to test all connections.  not just CalciteConnection.\n","date":"2014-12-09 06:56:01","modifiedFileCount":"88","status":"B","submitter":"Julian Hyde"},{"authorTime":"2014-12-01 23:51:36","codes":[{"authorDate":"2015-07-08 03:00:10","commitOrder":2,"curCode":"  @Test public void testCatalogsLocal() throws Exception {\n    final Connection connection = DriverManager.getConnection(\n        \"jdbc:avatica:remote:factory=\" + LJS);\n    assertThat(connection.isClosed(), is(false));\n    final ResultSet resultSet = connection.getMetaData().getCatalogs();\n    final ResultSetMetaData metaData = resultSet.getMetaData();\n    assertEquals(1, metaData.getColumnCount());\n    assertEquals(\"TABLE_CAT\", metaData.getColumnName(1));\n    assertTrue(resultSet.next());\n    assertFalse(resultSet.next());\n    resultSet.close();\n    connection.close();\n    assertThat(connection.isClosed(), is(true));\n  }\n","date":"2015-07-10 01:47:18","endLine":183,"groupId":"0","id":3,"instanceNumber":1,"isCurCommit":0,"methodName":"testCatalogsLocal","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/94/91645ad29bb5ee30323c2e8067cd484c394cb2.src","preCode":"  @Test public void testCatalogsLocal() throws Exception {\n    final Connection connection = DriverManager.getConnection(\n        \"jdbc:avatica:remote:factory=\" + LJS);\n    assertThat(connection.isClosed(), is(false));\n    final ResultSet resultSet = connection.getMetaData().getCatalogs();\n    final ResultSetMetaData metaData = resultSet.getMetaData();\n    assertEquals(1, metaData.getColumnCount());\n    assertEquals(\"TABLE_CATALOG\", metaData.getColumnName(1));\n    assertTrue(resultSet.next());\n    assertFalse(resultSet.next());\n    resultSet.close();\n    connection.close();\n    assertThat(connection.isClosed(), is(true));\n  }\n","realPath":"core/src/test/java/org/apache/calcite/jdbc/CalciteRemoteDriverTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":170,"status":"M"},{"authorDate":"2014-12-01 23:51:36","commitOrder":2,"curCode":"  @Test public void testSchemasLocal() throws Exception {\n    final Connection connection = DriverManager.getConnection(\n        \"jdbc:avatica:remote:factory=\" + LJS);\n    assertThat(connection.isClosed(), is(false));\n    final ResultSet resultSet = connection.getMetaData().getSchemas();\n    final ResultSetMetaData metaData = resultSet.getMetaData();\n    assertEquals(2, metaData.getColumnCount());\n    assertEquals(\"TABLE_SCHEM\", metaData.getColumnName(1));\n    assertEquals(\"TABLE_CATALOG\", metaData.getColumnName(2));\n    assertTrue(resultSet.next());\n    assertThat(resultSet.getString(1), equalTo(\"POST\"));\n    assertThat(resultSet.getString(2), CoreMatchers.nullValue());\n    assertTrue(resultSet.next());\n    assertThat(resultSet.getString(1), equalTo(\"foodmart\"));\n    assertThat(resultSet.getString(2), CoreMatchers.nullValue());\n    assertTrue(resultSet.next());\n    assertTrue(resultSet.next());\n    assertFalse(resultSet.next());\n    resultSet.close();\n    connection.close();\n    assertThat(connection.isClosed(), is(true));\n  }\n","date":"2014-12-09 06:56:01","endLine":145,"groupId":"4484","id":4,"instanceNumber":2,"isCurCommit":0,"methodName":"testSchemasLocal","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/1d/f82f7c95ebcad5d8e5935d668ecf2749e6f2a9.src","preCode":"  @Test public void testSchemasLocal() throws Exception {\n    final Connection connection = DriverManager.getConnection(\n        \"jdbc:avatica:remote:factory=\" + LJS);\n    assertThat(connection.isClosed(), is(false));\n    final ResultSet resultSet = connection.getMetaData().getSchemas();\n    final ResultSetMetaData metaData = resultSet.getMetaData();\n    assertEquals(2, metaData.getColumnCount());\n    assertEquals(\"TABLE_SCHEM\", metaData.getColumnName(1));\n    assertEquals(\"TABLE_CATALOG\", metaData.getColumnName(2));\n    assertTrue(resultSet.next());\n    assertThat(resultSet.getString(1), equalTo(\"POST\"));\n    assertThat(resultSet.getString(2), CoreMatchers.nullValue());\n    assertTrue(resultSet.next());\n    assertThat(resultSet.getString(1), equalTo(\"foodmart\"));\n    assertThat(resultSet.getString(2), CoreMatchers.nullValue());\n    assertTrue(resultSet.next());\n    assertTrue(resultSet.next());\n    assertFalse(resultSet.next());\n    resultSet.close();\n    connection.close();\n    assertThat(connection.isClosed(), is(true));\n  }\n","realPath":"core/src/test/java/org/apache/calcite/jdbc/CalciteRemoteDriverTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":124,"status":"N"}],"commitId":"464fd364a4ed0563645dee3cefdf2cc5195533fa","commitMessage":"@@@[CALCITE-789] MetaImpl.MetaCatalog should expose TABLE_CAT instead of TABLE_CATALOG\n","date":"2015-07-10 01:47:18","modifiedFileCount":"5","status":"M","submitter":"Julian Hyde"},{"authorTime":"2015-05-28 16:57:36","codes":[{"authorDate":"2015-05-28 16:57:36","commitOrder":3,"curCode":"  @Test public void testCatalogsLocal() throws Exception {\n    final Connection connection = DriverManager.getConnection(\n        \"jdbc:avatica:remote:factory=\" + LJS);\n    assertThat(connection.isClosed(), is(false));\n    final ResultSet resultSet = connection.getMetaData().getCatalogs();\n    final ResultSetMetaData metaData = resultSet.getMetaData();\n    assertThat(metaData.getColumnCount(), is(1));\n    assertThat(metaData.getColumnName(1), is(\"TABLE_CAT\"));\n    assertThat(resultSet.next(), is(true));\n    assertThat(resultSet.next(), is(false));\n    resultSet.close();\n    connection.close();\n    assertThat(connection.isClosed(), is(true));\n  }\n","date":"2015-10-16 15:58:24","endLine":185,"groupId":"10917","id":5,"instanceNumber":1,"isCurCommit":0,"methodName":"testCatalogsLocal","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/d4/3e5d20615f6fbf812f5b0a3e93a6fe032fe9d9.src","preCode":"  @Test public void testCatalogsLocal() throws Exception {\n    final Connection connection = DriverManager.getConnection(\n        \"jdbc:avatica:remote:factory=\" + LJS);\n    assertThat(connection.isClosed(), is(false));\n    final ResultSet resultSet = connection.getMetaData().getCatalogs();\n    final ResultSetMetaData metaData = resultSet.getMetaData();\n    assertEquals(1, metaData.getColumnCount());\n    assertEquals(\"TABLE_CAT\", metaData.getColumnName(1));\n    assertTrue(resultSet.next());\n    assertFalse(resultSet.next());\n    resultSet.close();\n    connection.close();\n    assertThat(connection.isClosed(), is(true));\n  }\n","realPath":"core/src/test/java/org/apache/calcite/jdbc/CalciteRemoteDriverTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":172,"status":"M"},{"authorDate":"2015-05-28 16:57:36","commitOrder":3,"curCode":"  @Test public void testSchemasLocal() throws Exception {\n    final Connection connection = DriverManager.getConnection(\n        \"jdbc:avatica:remote:factory=\" + LJS);\n    assertThat(connection.isClosed(), is(false));\n    final ResultSet resultSet = connection.getMetaData().getSchemas();\n    final ResultSetMetaData metaData = resultSet.getMetaData();\n    assertThat(metaData.getColumnCount(), is(2));\n    assertThat(metaData.getColumnName(1), is(\"TABLE_SCHEM\"));\n    assertThat(metaData.getColumnName(2), is(\"TABLE_CATALOG\"));\n    assertThat(resultSet.next(), is(true));\n    assertThat(resultSet.getString(1), equalTo(\"POST\"));\n    assertThat(resultSet.getString(2), CoreMatchers.nullValue());\n    assertThat(resultSet.next(), is(true));\n    assertThat(resultSet.getString(1), equalTo(\"foodmart\"));\n    assertThat(resultSet.getString(2), CoreMatchers.nullValue());\n    assertThat(resultSet.next(), is(true));\n    assertThat(resultSet.next(), is(true));\n    assertThat(resultSet.next(), is(false));\n    resultSet.close();\n    connection.close();\n    assertThat(connection.isClosed(), is(true));\n  }\n","date":"2015-10-16 15:58:24","endLine":208,"groupId":"9811","id":6,"instanceNumber":2,"isCurCommit":0,"methodName":"testSchemasLocal","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/d4/3e5d20615f6fbf812f5b0a3e93a6fe032fe9d9.src","preCode":"  @Test public void testSchemasLocal() throws Exception {\n    final Connection connection = DriverManager.getConnection(\n        \"jdbc:avatica:remote:factory=\" + LJS);\n    assertThat(connection.isClosed(), is(false));\n    final ResultSet resultSet = connection.getMetaData().getSchemas();\n    final ResultSetMetaData metaData = resultSet.getMetaData();\n    assertEquals(2, metaData.getColumnCount());\n    assertEquals(\"TABLE_SCHEM\", metaData.getColumnName(1));\n    assertEquals(\"TABLE_CATALOG\", metaData.getColumnName(2));\n    assertTrue(resultSet.next());\n    assertThat(resultSet.getString(1), equalTo(\"POST\"));\n    assertThat(resultSet.getString(2), CoreMatchers.nullValue());\n    assertTrue(resultSet.next());\n    assertThat(resultSet.getString(1), equalTo(\"foodmart\"));\n    assertThat(resultSet.getString(2), CoreMatchers.nullValue());\n    assertTrue(resultSet.next());\n    assertTrue(resultSet.next());\n    assertFalse(resultSet.next());\n    resultSet.close();\n    connection.close();\n    assertThat(connection.isClosed(), is(true));\n  }\n","realPath":"core/src/test/java/org/apache/calcite/jdbc/CalciteRemoteDriverTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":187,"status":"M"}],"commitId":"cee8e8448c314753dacda8f880fac2bcab701f08","commitMessage":"@@@[CALCITE-705] DML in Avatica.  and split Execute out from Fetch request (Yeong Wei)\n\nAdd support for DML statements (INSERT.  UPDATE.  DELETE). \nStatement.executeUpdate returns int update count.\n\nAdd new 'Execute' request that binds parameters. This used to occur\nimplicitly during first Fetch; Fetch no longer takes parameters.\n\nAdd statement type. If signature is null then defaults to\nMeta.StatementType.SELECT.\n\nAdd testRemoteStatementInsert for JSON and PROTOBUF serialization test.\n\nIn JsonHandlerTest.  replace testFetchRequestWithNumberParameter\nwith testExecuteRequestWithNumberParameter.\n\nCosmetic fix-ups by Julian Hyde.\n\nClose apache/incubator-calcite#145\nClose apache/incubator-calcite#154\n","date":"2015-10-16 15:58:24","modifiedFileCount":"30","status":"M","submitter":"YeongWei"},{"authorTime":"2020-04-02 10:39:10","codes":[{"authorDate":"2020-04-02 10:39:10","commitOrder":4,"curCode":"  @Test void testCatalogsLocal() throws Exception {\n    final Connection connection = DriverManager.getConnection(\n        \"jdbc:avatica:remote:factory=\" + LJS);\n    assertThat(connection.isClosed(), is(false));\n    final ResultSet resultSet = connection.getMetaData().getCatalogs();\n    final ResultSetMetaData metaData = resultSet.getMetaData();\n    assertThat(metaData.getColumnCount(), is(1));\n    assertThat(metaData.getColumnName(1), is(\"TABLE_CAT\"));\n    assertThat(resultSet.next(), is(true));\n    assertThat(resultSet.next(), is(false));\n    resultSet.close();\n    connection.close();\n    assertThat(connection.isClosed(), is(true));\n  }\n","date":"2020-04-06 04:57:49","endLine":192,"groupId":"10674","id":7,"instanceNumber":1,"isCurCommit":0,"methodName":"testCatalogsLocal","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/46/9f7b82fa165ba21387f1308443e84237ce242d.src","preCode":"  @Test public void testCatalogsLocal() throws Exception {\n    final Connection connection = DriverManager.getConnection(\n        \"jdbc:avatica:remote:factory=\" + LJS);\n    assertThat(connection.isClosed(), is(false));\n    final ResultSet resultSet = connection.getMetaData().getCatalogs();\n    final ResultSetMetaData metaData = resultSet.getMetaData();\n    assertThat(metaData.getColumnCount(), is(1));\n    assertThat(metaData.getColumnName(1), is(\"TABLE_CAT\"));\n    assertThat(resultSet.next(), is(true));\n    assertThat(resultSet.next(), is(false));\n    resultSet.close();\n    connection.close();\n    assertThat(connection.isClosed(), is(true));\n  }\n","realPath":"core/src/test/java/org/apache/calcite/jdbc/CalciteRemoteDriverTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":179,"status":"M"},{"authorDate":"2020-04-02 10:39:10","commitOrder":4,"curCode":"  @Test void testSchemasLocal() throws Exception {\n    final Connection connection = DriverManager.getConnection(\n        \"jdbc:avatica:remote:factory=\" + LJS);\n    assertThat(connection.isClosed(), is(false));\n    final ResultSet resultSet = connection.getMetaData().getSchemas();\n    final ResultSetMetaData metaData = resultSet.getMetaData();\n    assertThat(metaData.getColumnCount(), is(2));\n    assertThat(metaData.getColumnName(1), is(\"TABLE_SCHEM\"));\n    assertThat(metaData.getColumnName(2), is(\"TABLE_CATALOG\"));\n    assertThat(resultSet.next(), is(true));\n    assertThat(resultSet.getString(1), equalTo(\"POST\"));\n    assertThat(resultSet.getString(2), CoreMatchers.nullValue());\n    assertThat(resultSet.next(), is(true));\n    assertThat(resultSet.getString(1), equalTo(\"foodmart\"));\n    assertThat(resultSet.getString(2), CoreMatchers.nullValue());\n    assertThat(resultSet.next(), is(true));\n    assertThat(resultSet.next(), is(true));\n    assertThat(resultSet.next(), is(false));\n    resultSet.close();\n    connection.close();\n    assertThat(connection.isClosed(), is(true));\n  }\n","date":"2020-04-06 04:57:49","endLine":215,"groupId":"10674","id":8,"instanceNumber":2,"isCurCommit":0,"methodName":"testSchemasLocal","params":"()","path":"/mnt/clonedata/CloneManagementServer/ManagementServer/consistResult/result-calcite-10-0.7/blobInfo/CC_OUT/blobs/46/9f7b82fa165ba21387f1308443e84237ce242d.src","preCode":"  @Test public void testSchemasLocal() throws Exception {\n    final Connection connection = DriverManager.getConnection(\n        \"jdbc:avatica:remote:factory=\" + LJS);\n    assertThat(connection.isClosed(), is(false));\n    final ResultSet resultSet = connection.getMetaData().getSchemas();\n    final ResultSetMetaData metaData = resultSet.getMetaData();\n    assertThat(metaData.getColumnCount(), is(2));\n    assertThat(metaData.getColumnName(1), is(\"TABLE_SCHEM\"));\n    assertThat(metaData.getColumnName(2), is(\"TABLE_CATALOG\"));\n    assertThat(resultSet.next(), is(true));\n    assertThat(resultSet.getString(1), equalTo(\"POST\"));\n    assertThat(resultSet.getString(2), CoreMatchers.nullValue());\n    assertThat(resultSet.next(), is(true));\n    assertThat(resultSet.getString(1), equalTo(\"foodmart\"));\n    assertThat(resultSet.getString(2), CoreMatchers.nullValue());\n    assertThat(resultSet.next(), is(true));\n    assertThat(resultSet.next(), is(true));\n    assertThat(resultSet.next(), is(false));\n    resultSet.close();\n    connection.close();\n    assertThat(connection.isClosed(), is(true));\n  }\n","realPath":"core/src/test/java/org/apache/calcite/jdbc/CalciteRemoteDriverTest.java","repoName":"calcite","snippetEndLine":0,"snippetStartLine":0,"startLine":194,"status":"M"}],"commitId":"9492dd4146f63ddc028010d6c4e86f6a5cb29a8d","commitMessage":"@@@[CALCITE-3892] Make junit test classes and methods non-public where possible\n\nPrior to junit 5.  classes and methods had to be public. This is no\nlonger the case.\n\nSome classes need to remain public because they are referenced from\nelsewhere.  or if they use reflection somehow. The remaining 'public'\nkeyword will be informative to maintainers.\n","date":"2020-04-06 04:57:49","modifiedFileCount":"196","status":"M","submitter":"Julian Hyde"}]
